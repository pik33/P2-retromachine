00000                 | 
00000                 | #line 1 "/home/pik33/P2-Retromachine/Propeller/Tracker player/player3.p2asm"
00000                 | con
00000                 | 	_clkfreq = 354693878
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 354693647
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $1c364fb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 18 06 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 0B F1 03 F6 | 	mov	ptra, ptr_stackspace_
00410 003 14 EC 0F FB | 	rdlong	pa, #20 wz
00414 004 EC 01 90 5D |  if_ne	jmp	#skip_clock_set_
00418 005 00 00 64 FD | 	hubset	#0
0041c 006 B2 E1 80 FF 
00420 007 00 F0 65 FD | 	hubset	##29582584
00424 008 86 01 80 FF 
00428 009 1F 80 66 FD | 	waitx	##200000
0042c 00a B2 E1 00 FF 
00430 00b FB EC 07 F6 | 	mov	pa, ##29582587
00434 00c 00 EC 63 FD | 	hubset	pa
00438 00d 18 EC 67 FC | 	wrlong	pa, #24
0043c 00e 19 92 8A FF 
00440 00f 14 1E 6C FC | 	wrlong	##354693647, #20
00444 010 BC 01 90 FD | 	jmp	#skip_clock_set_
00448 011 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 B0 14 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 5E 62 FD | 	cogid	arg01
00614 084 03 5E 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 00 FB 05 FB | 	rdlong	objptr, ptra
0061c 086 04 F0 07 F1 | 	add	ptra, #4
00620 087 00 19 06 FB | 	rdlong	result1, ptra
00624 088 04 F0 07 F1 | 	add	ptra, #4
00628 089 00 5F 06 FB | 	rdlong	arg01, ptra
0062c 08a 04 F0 07 F1 | 	add	ptra, #4
00630 08b 00 61 06 FB | 	rdlong	arg02, ptra
00634 08c 04 F0 07 F1 | 	add	ptra, #4
00638 08d 00 63 06 FB | 	rdlong	arg03, ptra
0063c 08e 04 F0 07 F1 | 	add	ptra, #4
00640 08f 00 65 06 FB | 	rdlong	arg04, ptra
00644 090 10 F0 87 F1 | 	sub	ptra, #16
00648 091 2D 18 62 FD | 	call	result1
0064c 092 B8 FF 9F FD | 	jmp	#cogexit
00650 093             | FCACHE_LOAD_
00650 093 2B 3E 61 FD |     pop	fcache_tmpb_
00654 094 F6 3F 01 F1 |     add	fcache_tmpb_, pa
00658 095 2A 3E 61 FD |     push	fcache_tmpb_
0065c 096 F6 3F 81 F1 |     sub	fcache_tmpb_, pa
00660 097 02 EC 47 F0 |     shr	pa, #2
00664 098 00 EC 8F F9 |     altd	pa
00668 099 9E 00 00 F6 |     mov	 0-0, ret_instr_
0066c 09a 01 EC 87 F1 |     sub	pa, #1
00670 09b 28 EC 63 FD |     setq	pa
00674 09c 9F 00 00 FB |     rdlong	$0, fcache_tmpb_
00678 09d 00 00 80 FD |     jmp	#\$0 ' jmp to cache
0067c 09e             | ret_instr_
0067c 09e 2D 00 64 FD |     ret
00680 09f             | fcache_tmpb_
00680 09f 00 00 00 00 |     long 0
00684 0a0             | builtin_bytefill_
00684 0a0 01 62 56 F0 |         shr	arg03, #1 wc
00688 0a1 2F 61 42 CC |  if_c   wrbyte	arg02, arg01
0068c 0a2 01 5E 06 C1 |  if_c   add	arg01, #1
00690 0a3 00 60 FE F9 |         movbyts	arg02, #0
00694 0a4             | builtin_wordfill_
00694 0a4 01 62 56 F0 |         shr	arg03, #1 wc
00698 0a5 2F 61 52 CC |  if_c   wrword	arg02, arg01
0069c 0a6 02 5E 06 C1 |  if_c   add	arg01, #2
006a0 0a7 30 61 2A F9 |         setword	arg02, arg02, #1
006a4 0a8             | builtin_longfill_
006a4 0a8 2F 01 88 FC |         wrfast	#0,arg01
006a8 0a9 00 62 0E F2 |         cmp	arg03, #0 wz
006ac 0aa 31 03 D8 5C |  if_nz  rep	#1, arg03
006b0 0ab 17 60 62 5D |  if_nz  wflong	arg02
006b4 0ac 2D 00 64 FD |         ret
006b8 0ad             | COUNT_
006b8 0ad 00 00 00 00 |     long 0
006bc 0ae             | RETADDR_
006bc 0ae 00 00 00 00 |     long 0
006c0 0af             | fp
006c0 0af 00 00 00 00 |     long 0
006c4 0b0             | pushregs_
006c4 0b0 2B EC 63 FD |     pop  pa
006c8 0b1 2B 5C 61 FD |     pop  RETADDR_
006cc 0b2 03 5A 95 FB |     tjz  COUNT_, #pushregs_done_
006d0 0b3 FF 5B 8D F9 |     altd  COUNT_, #511
006d4 0b4 28 00 64 FD |     setq #0-0
006d8 0b5 61 6D 66 FC |     wrlong local01, ptra++
006dc 0b6             | pushregs_done_
006dc 0b6 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006e0 0b7 61 5B 65 FC |     wrlong COUNT_, ptra++
006e4 0b8 F8 5F 01 F6 |     mov    fp, ptra
006e8 0b9 2C EC 63 FD |     jmp  pa
006ec 0ba             |  popregs_
006ec 0ba 2B EC 63 FD |     pop    pa
006f0 0bb 28 04 64 FD |     setq   #2
006f4 0bc 5F 5B 05 FB |     rdlong COUNT_, --ptra
006f8 0bd 02 5A 75 FB |     djf    COUNT_, #popregs__ret
006fc 0be 28 5A 61 FD |     setq   COUNT_
00700 0bf 5F 6D 06 FB |     rdlong local01, --ptra
00704 0c0             | popregs__ret
00704 0c0 2A 5C 61 FD |     push   RETADDR_
00708 0c1 2C EC 63 FD |     jmp    pa
0070c 0c2             | 
0070c 0c2             | unsdivide_
0070c 0c2 28 00 64 FD |        setq    #0
00710 0c3 4D 99 12 FD |        qdiv    muldiva_, muldivb_
00714 0c4 18 9A 62 FD |        getqx   muldivb_
00718 0c5 19 98 62 0D |  _ret_ getqy   muldiva_
0071c 0c6             | 
0071c 0c6             | divide_
0071c 0c6 4C 99 52 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
00720 0c7 03 F8 85 F5 |        muxc    itmp2_,#%11                    'store sign of x
00724 0c8 4D 9B 5A F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
00728 0c9 02 F8 65 C5 |  if_c  xor     itmp2_,#%10                    'store sign of y
0072c 0ca 2D 00 64 AD |  if_z  ret
00730 0cb D8 FF BF FD |        call    #unsdivide_
00734 0cc 01 F8 D5 F7 |        test    itmp2_,#1        wc       'restore sign, remainder
00738 0cd 4C 99 82 F6 |        negc    muldiva_,muldiva_ 
0073c 0ce 02 F8 D5 F7 |        test    itmp2_,#%10      wc       'restore sign, division result
00740 0cf 4D 9B 82 06 |  _ret_ negc    muldivb_,muldivb_
00744 0d0             | __pc long 0
00744 0d0 00 00 00 00 
00748 0d1             | __setjmp
00748 0d1 2B A0 61 FD |     pop __pc
0074c 0d2 00 18 06 F6 |     mov result1, #0
00750 0d3 00 1A 06 F6 |     mov result2, #0
00754 0d4 2F F3 01 F6 |     mov abortchain, arg01
00758 0d5 2F 5F 61 FC |     wrlong fp, arg01
0075c 0d6 04 5E 06 F1 |     add arg01, #4
00760 0d7 2F F1 63 FC |     wrlong ptra, arg01
00764 0d8 04 5E 06 F1 |     add arg01, #4
00768 0d9 2F FB 61 FC |     wrlong objptr, arg01
0076c 0da 04 5E 06 F1 |     add arg01, #4
00770 0db 2F A1 61 FC |     wrlong __pc, arg01
00774 0dc 2C A0 61 FD |     jmp __pc
00778 0dd             | __unwind_pc long 0
00778 0dd 00 00 00 00 
0077c 0de             | __unwind_stack
0077c 0de 2B BA 61 FD |    pop  __unwind_pc
00780 0df             | __unwind_loop
00780 0df 30 5F 0A F2 |    cmp  arg01, arg02 wz
00784 0e0 10 00 90 AD |   if_z jmp #__unwind_stack_ret
00788 0e1 2F F1 03 F6 |    mov   ptra, arg01
0078c 0e2 5C FF BF FD |    call  #popregs_
00790 0e3 AF 5E 02 F6 |    mov   arg01, fp
00794 0e4 E8 FF 9F FD |    jmp   #__unwind_loop
00798 0e5             | __unwind_stack_ret
00798 0e5 2C BA 61 FD |    jmp  __unwind_pc
0079c 0e6             | __longjmp
0079c 0e6 2B A0 61 FD |     pop __pc
007a0 0e7 00 5E 0E F2 |     cmp    arg01, #0 wz
007a4 0e8 30 00 90 AD |  if_z jmp #nocatch
007a8 0e9 30 19 02 F6 |     mov result1, arg02
007ac 0ea 01 1A 06 F6 |     mov result2, #1
007b0 0eb 2F 61 02 FB |     rdlong arg02, arg01
007b4 0ec 04 5E 06 F1 |     add arg01, #4
007b8 0ed 2F F1 03 FB |     rdlong ptra, arg01
007bc 0ee 04 5E 06 F1 |     add arg01, #4
007c0 0ef 2F FB 01 FB |     rdlong objptr, arg01
007c4 0f0 04 5E 06 F1 |     add arg01, #4
007c8 0f1 2F A1 01 FB |     rdlong __pc, arg01
007cc 0f2 AF 5E 02 F6 |     mov arg01, fp
007d0 0f3 A8 FF BF FD |     call #__unwind_stack
007d4 0f4             | __longjmp_ret
007d4 0f4 2C A0 61 FD |     jmp  __pc
007d8 0f5             | nocatch
007d8 0f5 00 62 0E F2 |     cmp arg03, #0 wz
007dc 0f6 28 FE 9F AD |  if_z jmp #cogexit
007e0 0f7 F0 FF 9F FD |     jmp #__longjmp_ret
007e4 0f8             | 
007e4 0f8             | __heap_ptr
007e4 0f8 40 F8 02 00 | 	long	@__heap_base
007e8 0f9             | abortchain
007e8 0f9 00 00 00 00 | 	long	0
007ec 0fa             | entryptr__
007ec 0fa 04 04 00 00 | 	long	@entry
007f0 0fb             | itmp1_
007f0 0fb 00 00 00 00 | 	long	0
007f4 0fc             | itmp2_
007f4 0fc 00 00 00 00 | 	long	0
007f8 0fd             | objptr
007f8 0fd 48 08 03 00 | 	long	@objmem
007fc 0fe             | ptr___struct___bas_wrap_sender_tx_
007fc 0fe BC 8F 00 00 | 	long	@__struct___bas_wrap_sender_tx
00800 0ff             | ptr___struct__s_vfs_file_t_putchar_
00800 0ff 04 8F 00 00 | 	long	@__struct__s_vfs_file_t_putchar
00804 100             | ptr___system__dat__
00804 100 DC F5 02 00 | 	long	@__system__dat_
00808 101             | ptr__audio019_spin2_dat__
00808 101 CC EA 02 00 | 	long	@_audio019_spin2_dat_
0080c 102             | ptr__dat__
0080c 102 E8 90 00 00 | 	long	@_dat_
00810 103             | ptr__hng030rm_spin2_dat__
00810 103 44 B5 02 00 | 	long	@_hng030rm_spin2_dat_
00814 104             | ptr__hng030rm_spin2_putchar_
00814 104 E4 2E 00 00 | 	long	@_hng030rm_spin2_putchar
00818 105             | ptr__hng030rm_spin2_putpixel1_
00818 105 CC 28 00 00 | 	long	@_hng030rm_spin2_putpixel1
0081c 106             | ptr__hng030rm_spin2_putpixel2_
0081c 106 B8 29 00 00 | 	long	@_hng030rm_spin2_putpixel2
00820 107             | ptr__hng030rm_spin2_putpixel4_
00820 107 98 2A 00 00 | 	long	@_hng030rm_spin2_putpixel4
00824 108             | ptr__hng030rm_spin2_putpixel8_
00824 108 84 2B 00 00 | 	long	@_hng030rm_spin2_putpixel8
00828 109             | ptr__retrocog_spin2_serialcog_
00828 109 60 40 00 00 | 	long	@_retrocog_spin2_serialcog
0082c 10a             | ptr__trackerplayer_spin2_dat__
0082c 10a A8 D9 02 00 | 	long	@_trackerplayer_spin2_dat_
00830 10b             | ptr_stackspace_
00830 10b 70 1A 03 00 | 	long	@stackspace
00834 10c             | result1
00834 10c 00 00 00 00 | 	long	0
00838 10d             | result2
00838 10d 00 00 00 00 | 	long	0
0083c 10e             | result3
0083c 10e 00 00 00 00 | 	long	0
00840 10f             | COG_BSS_START
00840 10f             | 	fit	480
00840                 | 	orgh
00840                 | hubentry
00840                 | 
00840                 | ' 
00840                 | ' function startvideo(mode=64, pin=0) 'todo return a cog#
00840                 | _startvideo
00840     24 36 B0 FD | 	call	#_hng030rm_spin2_start
00844     00 5E 06 F6 | 	mov	arg01, #0
00848     00 60 06 F6 | 	mov	arg02, #0
0084c     00 62 06 F6 | 	mov	arg03, #0
00850     28 24 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00854                 | ' v030.start(mode,pin)
00854                 | ' v030.setbordercolor(0,0,0)
00854                 | ' open SendRecvDevice(@v030.putchar, nil, nil) as #0
00854     FD 5E 02 F6 | 	mov	arg01, objptr
00858     04 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putchar_
0085c     D0 64 B0 FD | 	call	#__system___make_methodptr
00860     00 1C 06 F6 | 	mov	result3, #0
00864     00 1A 06 F6 | 	mov	result2, #0
00868     0C 61 02 F6 | 	mov	arg02, result1
0086c     00 62 06 F6 | 	mov	arg03, #0
00870     00 64 06 F6 | 	mov	arg04, #0
00874     00 5E 06 F6 | 	mov	arg01, #0
00878     90 67 B0 FD | 	call	#__system___basic_open
0087c     00 18 06 F6 | 	mov	result1, #0
00880                 | _startvideo_ret
00880     2D 00 64 FD | 	ret
00884                 | 
00884                 | ' 
00884                 | ' function addr(byref v as any)
00884                 | _addr
00884     00 5A 05 F6 | 	mov	COUNT_, #0
00888     B0 00 A0 FD | 	call	#pushregs_
0088c     08 F0 07 F1 | 	add	ptra, #8
00890     04 5E 05 F1 | 	add	fp, #4
00894     AF 5E 62 FC | 	wrlong	arg01, fp
00898                 | ' 
00898                 | ' return(cast(ulong,@v))
00898     2F 19 02 F6 | 	mov	result1, arg01
0089c     04 5E 85 F1 | 	sub	fp, #4
008a0     AF F0 03 F6 | 	mov	ptra, fp
008a4     BA 00 A0 FD | 	call	#popregs_
008a8                 | _addr_ret
008a8     2D 00 64 FD | 	ret
008ac                 | 
008ac                 | ' 
008ac                 | ' '0 - samplestart   - a pointer to the sample start
008ac                 | ' '1 - sampletype    - 0: 16 bit, 1 8 bit, both signed
008ac                 | ' '2 - loopstart     - loop start
008ac                 | ' '3 - loopend       - loop end, has to be >=loopstart+2
008ac                 | ' '4 - volume        - sample volume, 16384=1
008ac                 | ' '5 - pan           - 0..16384
008ac                 | ' '6 - synthfreq     - the frequency divider for the channel. The channel sample rate will be 3546895 or 3579545 Hz divided by this
008ac                 | ' '7 - skip          - value to add to the phase accumulator for the next sample, 1 for 8 bit, 2 for 16 bit, more for special purposes
008ac                 | ' '8 - cmd 
008ac                 | ' 
008ac                 | ' 
008ac                 | ' sub test 
008ac                 | _test
008ac     01 5A 05 F6 | 	mov	COUNT_, #1
008b0     B0 00 A0 FD | 	call	#pushregs_
008b4     16 60 06 F6 | 	mov	arg02, #22
008b8                 | ' 
008b8                 | ' ''---------- Set the (x,y) position of cursor
008b8                 | ' 
008b8                 | ' cursor_x:=x
008b8     34 FA 05 F1 | 	add	objptr, #52
008bc     FD 0A 48 FC | 	wrbyte	#5, objptr
008c0                 | ' cursor_y:=y
008c0     01 FA 05 F1 | 	add	objptr, #1
008c4     FD 2C 48 FC | 	wrbyte	#22, objptr
008c8     07 00 00 FF 
008cc     C2 FA 05 F1 | 	add	objptr, ##3778
008d0     FD 6C C2 FA | 	rdbyte	local01, objptr
008d4     02 6C 66 F0 | 	shl	local01, #2
008d8     01 00 00 FF 
008dc     65 FA 05 F1 | 	add	objptr, ##613
008e0     FD 6C 02 F1 | 	add	local01, objptr
008e4     36 5F 02 FB | 	rdlong	arg01, local01
008e8     08 00 00 FF 
008ec     5C FB 85 F1 | 	sub	objptr, ##4444
008f0     7C 27 B0 FD | 	call	#_hng030rm_spin2_write
008f4     08 00 00 FF 
008f8     E8 FB 05 F1 | 	add	objptr, ##4584
008fc     FD 5E 02 FB | 	rdlong	arg01, objptr
00900     08 00 00 FF 
00904     E8 FB 85 F1 | 	sub	objptr, ##4584
00908     64 27 B0 FD | 	call	#_hng030rm_spin2_write
0090c                 | ' 
0090c                 | ' ''---------- Set the (x,y) position of cursor
0090c                 | ' 
0090c                 | ' cursor_x:=x
0090c     34 FA 05 F1 | 	add	objptr, #52
00910     FD 02 48 FC | 	wrbyte	#1, objptr
00914                 | ' cursor_y:=y
00914     01 FA 05 F1 | 	add	objptr, #1
00918     FD 2C 48 FC | 	wrbyte	#22, objptr
0091c     07 00 00 FF 
00920     EA FA 05 F1 | 	add	objptr, ##3818
00924     FD 5E 02 FB | 	rdlong	arg01, objptr
00928     10 FA 05 F1 | 	add	objptr, #16
0092c     FD 6C 02 FB | 	rdlong	local01, objptr
00930     07 00 00 FF 
00934     2F FB 85 F1 | 	sub	objptr, ##3887
00938     36 5F 02 F1 | 	add	arg01, local01
0093c     03 60 06 F6 | 	mov	arg02, #3
00940     54 2A B0 FD | 	call	#_hng030rm_spin2_inttostr2
00944     0C 5F 02 F6 | 	mov	arg01, result1
00948     24 27 B0 FD | 	call	#_hng030rm_spin2_write
0094c     16 60 06 F6 | 	mov	arg02, #22
00950                 | ' 
00950                 | ' ''---------- Set the (x,y) position of cursor
00950                 | ' 
00950                 | ' cursor_x:=x
00950     34 FA 05 F1 | 	add	objptr, #52
00954     FD 40 48 FC | 	wrbyte	#32, objptr
00958                 | ' cursor_y:=y
00958     01 FA 05 F1 | 	add	objptr, #1
0095c     FD 2C 48 FC | 	wrbyte	#22, objptr
00960     07 00 00 FF 
00964     C3 FA 05 F1 | 	add	objptr, ##3779
00968     FD 6C C2 FA | 	rdbyte	local01, objptr
0096c     02 6C 66 F0 | 	shl	local01, #2
00970     01 00 00 FF 
00974     64 FA 05 F1 | 	add	objptr, ##612
00978     FD 6C 02 F1 | 	add	local01, objptr
0097c     36 5F 02 FB | 	rdlong	arg01, local01
00980     08 00 00 FF 
00984     5C FB 85 F1 | 	sub	objptr, ##4444
00988     E4 26 B0 FD | 	call	#_hng030rm_spin2_write
0098c     08 00 00 FF 
00990     E8 FB 05 F1 | 	add	objptr, ##4584
00994     FD 5E 02 FB | 	rdlong	arg01, objptr
00998     08 00 00 FF 
0099c     E8 FB 85 F1 | 	sub	objptr, ##4584
009a0     CC 26 B0 FD | 	call	#_hng030rm_spin2_write
009a4                 | ' 
009a4                 | ' ''---------- Set the (x,y) position of cursor
009a4                 | ' 
009a4                 | ' cursor_x:=x
009a4     34 FA 05 F1 | 	add	objptr, #52
009a8     FD 38 48 FC | 	wrbyte	#28, objptr
009ac                 | ' cursor_y:=y
009ac     01 FA 05 F1 | 	add	objptr, #1
009b0     FD 2C 48 FC | 	wrbyte	#22, objptr
009b4     07 00 00 FF 
009b8     EE FA 05 F1 | 	add	objptr, ##3822
009bc     FD 5E 02 FB | 	rdlong	arg01, objptr
009c0     10 FA 05 F1 | 	add	objptr, #16
009c4     FD 6C 02 FB | 	rdlong	local01, objptr
009c8     07 00 00 FF 
009cc     33 FB 85 F1 | 	sub	objptr, ##3891
009d0     36 5F 02 F1 | 	add	arg01, local01
009d4     03 60 06 F6 | 	mov	arg02, #3
009d8     BC 29 B0 FD | 	call	#_hng030rm_spin2_inttostr2
009dc     0C 5F 02 F6 | 	mov	arg01, result1
009e0     8C 26 B0 FD | 	call	#_hng030rm_spin2_write
009e4     16 60 06 F6 | 	mov	arg02, #22
009e8                 | ' 
009e8                 | ' ''---------- Set the (x,y) position of cursor
009e8                 | ' 
009e8                 | ' cursor_x:=x
009e8     34 FA 05 F1 | 	add	objptr, #52
009ec     FD 78 48 FC | 	wrbyte	#60, objptr
009f0                 | ' cursor_y:=y
009f0     01 FA 05 F1 | 	add	objptr, #1
009f4     FD 2C 48 FC | 	wrbyte	#22, objptr
009f8     07 00 00 FF 
009fc     C4 FA 05 F1 | 	add	objptr, ##3780
00a00     FD 6C C2 FA | 	rdbyte	local01, objptr
00a04     02 6C 66 F0 | 	shl	local01, #2
00a08     01 00 00 FF 
00a0c     63 FA 05 F1 | 	add	objptr, ##611
00a10     FD 6C 02 F1 | 	add	local01, objptr
00a14     36 5F 02 FB | 	rdlong	arg01, local01
00a18     08 00 00 FF 
00a1c     5C FB 85 F1 | 	sub	objptr, ##4444
00a20     4C 26 B0 FD | 	call	#_hng030rm_spin2_write
00a24     08 00 00 FF 
00a28     E8 FB 05 F1 | 	add	objptr, ##4584
00a2c     FD 5E 02 FB | 	rdlong	arg01, objptr
00a30     08 00 00 FF 
00a34     E8 FB 85 F1 | 	sub	objptr, ##4584
00a38     34 26 B0 FD | 	call	#_hng030rm_spin2_write
00a3c                 | ' 
00a3c                 | ' ''---------- Set the (x,y) position of cursor
00a3c                 | ' 
00a3c                 | ' cursor_x:=x
00a3c     34 FA 05 F1 | 	add	objptr, #52
00a40     FD 70 48 FC | 	wrbyte	#56, objptr
00a44                 | ' cursor_y:=y
00a44     01 FA 05 F1 | 	add	objptr, #1
00a48     FD 2C 48 FC | 	wrbyte	#22, objptr
00a4c     07 00 00 FF 
00a50     F2 FA 05 F1 | 	add	objptr, ##3826
00a54     FD 5E 02 FB | 	rdlong	arg01, objptr
00a58     10 FA 05 F1 | 	add	objptr, #16
00a5c     FD 6C 02 FB | 	rdlong	local01, objptr
00a60     07 00 00 FF 
00a64     37 FB 85 F1 | 	sub	objptr, ##3895
00a68     36 5F 02 F1 | 	add	arg01, local01
00a6c     03 60 06 F6 | 	mov	arg02, #3
00a70     24 29 B0 FD | 	call	#_hng030rm_spin2_inttostr2
00a74     0C 5F 02 F6 | 	mov	arg01, result1
00a78     F4 25 B0 FD | 	call	#_hng030rm_spin2_write
00a7c                 | ' 
00a7c                 | ' ''---------- Set the (x,y) position of cursor
00a7c                 | ' 
00a7c                 | ' cursor_x:=x
00a7c     34 FA 05 F1 | 	add	objptr, #52
00a80     FD A8 48 FC | 	wrbyte	#84, objptr
00a84                 | ' cursor_y:=y
00a84     01 FA 05 F1 | 	add	objptr, #1
00a88     FD 2C 48 FC | 	wrbyte	#22, objptr
00a8c     07 00 00 FF 
00a90     F6 FA 05 F1 | 	add	objptr, ##3830
00a94     FD 5E 02 FB | 	rdlong	arg01, objptr
00a98     10 FA 05 F1 | 	add	objptr, #16
00a9c     FD 6C 02 FB | 	rdlong	local01, objptr
00aa0     07 00 00 FF 
00aa4     3B FB 85 F1 | 	sub	objptr, ##3899
00aa8     36 5F 02 F1 | 	add	arg01, local01
00aac     03 60 06 F6 | 	mov	arg02, #3
00ab0     E4 28 B0 FD | 	call	#_hng030rm_spin2_inttostr2
00ab4     0C 5F 02 F6 | 	mov	arg01, result1
00ab8     B4 25 B0 FD | 	call	#_hng030rm_spin2_write
00abc     16 60 06 F6 | 	mov	arg02, #22
00ac0                 | ' 
00ac0                 | ' ''---------- Set the (x,y) position of cursor
00ac0                 | ' 
00ac0                 | ' cursor_x:=x
00ac0     34 FA 05 F1 | 	add	objptr, #52
00ac4     FD B0 48 FC | 	wrbyte	#88, objptr
00ac8                 | ' cursor_y:=y
00ac8     01 FA 05 F1 | 	add	objptr, #1
00acc     FD 2C 48 FC | 	wrbyte	#22, objptr
00ad0     07 00 00 FF 
00ad4     C5 FA 05 F1 | 	add	objptr, ##3781
00ad8     FD 6C C2 FA | 	rdbyte	local01, objptr
00adc     02 6C 66 F0 | 	shl	local01, #2
00ae0     01 00 00 FF 
00ae4     62 FA 05 F1 | 	add	objptr, ##610
00ae8     FD 6C 02 F1 | 	add	local01, objptr
00aec     36 5F 02 FB | 	rdlong	arg01, local01
00af0     08 00 00 FF 
00af4     5C FB 85 F1 | 	sub	objptr, ##4444
00af8     74 25 B0 FD | 	call	#_hng030rm_spin2_write
00afc     08 00 00 FF 
00b00     E8 FB 05 F1 | 	add	objptr, ##4584
00b04     FD 5E 02 FB | 	rdlong	arg01, objptr
00b08     08 00 00 FF 
00b0c     E8 FB 85 F1 | 	sub	objptr, ##4584
00b10     5C 25 B0 FD | 	call	#_hng030rm_spin2_write
00b14     AF F0 03 F6 | 	mov	ptra, fp
00b18     BA 00 A0 FD | 	call	#popregs_
00b1c                 | _test_ret
00b1c     2D 00 64 FD | 	ret
00b20                 | 
00b20                 | ' 
00b20                 | ' 
00b20                 | ' sub getinfo(ma,num)
00b20                 | _getinfo
00b20     0B 5A 05 F6 | 	mov	COUNT_, #11
00b24     B0 00 A0 FD | 	call	#pushregs_
00b28     2F 6D 02 F6 | 	mov	local01, arg01
00b2c     30 6F 02 F6 | 	mov	local02, arg02
00b30     04 60 06 F6 | 	mov	arg02, #4
00b34                 | ' 
00b34                 | ' ''---------- Set the (x,y) position of cursor
00b34                 | ' 
00b34                 | ' cursor_x:=x
00b34     34 FA 05 F1 | 	add	objptr, #52
00b38     FD 02 48 FC | 	wrbyte	#1, objptr
00b3c                 | ' cursor_y:=y
00b3c     01 FA 05 F1 | 	add	objptr, #1
00b40     FD 08 48 FC | 	wrbyte	#4, objptr
00b44     35 FA 85 F1 | 	sub	objptr, #53
00b48                 | ' 'v030. setwritecolors(170,147):
00b48                 | ' position 1,4: print "Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
00b48     00 5E 06 F6 | 	mov	arg01, #0
00b4c     80 79 B0 FD | 	call	#__system___getiolock_0150
00b50     0C 5F 02 F6 | 	mov	arg01, result1
00b54     18 62 B0 FD | 	call	#__system___lockmem
00b58     00 18 06 F6 | 	mov	result1, #0
00b5c     48 00 00 FF 
00b60     4A 60 06 F6 | 	mov	arg02, ##@LR__0504
00b64     00 5E 06 F6 | 	mov	arg01, #0
00b68     00 62 06 F6 | 	mov	arg03, #0
00b6c     BC 65 B0 FD | 	call	#__system___basic_print_string
00b70     00 5E 06 F6 | 	mov	arg01, #0
00b74     0A 60 06 F6 | 	mov	arg02, #10
00b78     00 62 06 F6 | 	mov	arg03, #0
00b7c     60 65 B0 FD | 	call	#__system___basic_print_char
00b80     01 18 06 F6 | 	mov	result1, #1
00b84     00 5E 06 F6 | 	mov	arg01, #0
00b88     44 79 B0 FD | 	call	#__system___getiolock_0150
00b8c     0C 01 68 FC | 	wrlong	#0, result1
00b90     00 18 06 F6 | 	mov	result1, #0
00b94                 | ' ': v030. setwritecolors(154,147)
00b94                 | ' for i=0 to 31: sn$(i)="S"+decuns$(i,2)+space$(19) :next i
00b94     00 70 06 F6 | 	mov	local03, #0
00b98                 | LR__0001
00b98     38 73 02 F6 | 	mov	local04, local03
00b9c     02 72 66 F0 | 	shl	local04, #2
00ba0     08 00 00 FF 
00ba4     5C FB 05 F1 | 	add	objptr, ##4444
00ba8     FD 72 02 F1 | 	add	local04, objptr
00bac     48 00 00 FF 
00bb0     B3 74 06 F6 | 	mov	local05, ##@LR__0505
00bb4     38 5F 02 F6 | 	mov	arg01, local03
00bb8     02 60 06 F6 | 	mov	arg02, #2
00bbc     08 00 00 FF 
00bc0     5C FB 85 F1 | 	sub	objptr, ##4444
00bc4     0A 62 06 F6 | 	mov	arg03, #10
00bc8     AC 6A B0 FD | 	call	#__system__Number_S
00bcc     0C 61 02 F6 | 	mov	arg02, result1
00bd0     3A 5F 02 F6 | 	mov	arg01, local05
00bd4     D4 61 B0 FD | 	call	#__system___string_concat
00bd8     0C 75 02 F6 | 	mov	local05, result1
00bdc     13 5E 06 F6 | 	mov	arg01, #19
00be0     47 00 00 FF 
00be4     F4 61 06 F6 | 	mov	arg02, ##@LR__0498
00be8     58 6B B0 FD | 	call	#__system__String_S
00bec     0C 61 02 F6 | 	mov	arg02, result1
00bf0     3A 5F 02 F6 | 	mov	arg01, local05
00bf4     B4 61 B0 FD | 	call	#__system___string_concat
00bf8     39 19 62 FC | 	wrlong	result1, local04
00bfc     01 70 06 F1 | 	add	local03, #1
00c00     20 70 5E F2 | 	cmps	local03, #32 wcz
00c04     90 FF 9F CD |  if_b	jmp	#LR__0001
00c08                 | ' for i=1 to num
00c08     01 70 06 F6 | 	mov	local03, #1
00c0c     01 6E 06 F1 | 	add	local02, #1
00c10                 | LR__0002
00c10     37 71 5A F2 | 	cmps	local03, local02 wcz
00c14     54 08 90 3D |  if_ae	jmp	#LR__0007
00c18                 | '   for j=0 to 21
00c18     00 76 06 F6 | 	mov	local06, #0
00c1c                 | LR__0003
00c1c     38 5F 02 F6 | 	mov	arg01, local03
00c20     02 5E 66 F0 | 	shl	arg01, #2
00c24     08 00 00 FF 
00c28     5C FB 05 F1 | 	add	objptr, ##4444
00c2c     FD 5E 02 F1 | 	add	arg01, objptr
00c30     08 00 00 FF 
00c34     5C FB 85 F1 | 	sub	objptr, ##4444
00c38     48 FC BF FD | 	call	#_addr
00c3c                 | ' asm
00c3c     0C 79 02 FB | 	rdlong	local07, result1
00c40                 | ' return r
00c40     09 00 00 FF 
00c44     0C FA 05 F1 | 	add	objptr, ##4620
00c48     FD 78 62 FC | 	wrlong	local07, objptr
00c4c     36 5F 02 F6 | 	mov	arg01, local01
00c50     14 5E 06 F1 | 	add	arg01, #20
00c54     38 75 02 F6 | 	mov	local05, local03
00c58     01 74 86 F1 | 	sub	local05, #1
00c5c     3A 7B 02 F6 | 	mov	local08, local05
00c60     04 7A 66 F0 | 	shl	local08, #4
00c64     3A 7B 82 F1 | 	sub	local08, local05
00c68     01 7A 66 F0 | 	shl	local08, #1
00c6c     3D 5F 02 F1 | 	add	arg01, local08
00c70     3B 5F 02 F1 | 	add	arg01, local06
00c74                 | ' asm
00c74     2F 19 C2 FA | 	rdbyte	result1, arg01
00c78                 | ' return r
00c78     0C 79 02 F6 | 	mov	local07, result1
00c7c     07 78 46 F7 | 	zerox	local07, #7
00c80     04 FA 05 F1 | 	add	objptr, #4
00c84     FD 78 62 FC | 	wrlong	local07, objptr
00c88                 | '     a=lpeek(addr(sn$(i)))
00c88                 | '     b=(peek(ma+20+30*(i-1)+j))
00c88                 | '     if b>=32 then poke a+j,b
00c88     09 00 00 FF 
00c8c     10 FA 85 F1 | 	sub	objptr, ##4624
00c90     20 78 5E F2 | 	cmps	local07, #32 wcz
00c94     24 00 90 CD |  if_b	jmp	#LR__0004
00c98     09 00 00 FF 
00c9c     0C FA 05 F1 | 	add	objptr, ##4620
00ca0     FD 5E 02 FB | 	rdlong	arg01, objptr
00ca4     3B 5F 02 F1 | 	add	arg01, local06
00ca8     04 FA 05 F1 | 	add	objptr, #4
00cac     FD 60 02 FB | 	rdlong	arg02, objptr
00cb0     09 00 00 FF 
00cb4     10 FA 85 F1 | 	sub	objptr, ##4624
00cb8                 | ' asm
00cb8     2F 61 42 FC | 	wrbyte	arg02, arg01
00cbc                 | LR__0004
00cbc     01 76 06 F1 | 	add	local06, #1
00cc0     16 76 5E F2 | 	cmps	local06, #22 wcz
00cc4     54 FF 9F CD |  if_b	jmp	#LR__0003
00cc8     36 5F 02 F6 | 	mov	arg01, local01
00ccc     14 5E 06 F1 | 	add	arg01, #20
00cd0     38 7B 02 F6 | 	mov	local08, local03
00cd4     01 7A 86 F1 | 	sub	local08, #1
00cd8     3D 7D 02 F6 | 	mov	local09, local08
00cdc     04 7C 66 F0 | 	shl	local09, #4
00ce0     3D 7D 82 F1 | 	sub	local09, local08
00ce4     01 7C 66 F0 | 	shl	local09, #1
00ce8     3E 5F 02 F1 | 	add	arg01, local09
00cec     16 5E 06 F1 | 	add	arg01, #22
00cf0                 | ' asm
00cf0     2F 75 C2 FA | 	rdbyte	local05, arg01
00cf4                 | ' return r
00cf4     07 74 46 F7 | 	zerox	local05, #7
00cf8     08 74 66 F0 | 	shl	local05, #8
00cfc     36 5F 02 F6 | 	mov	arg01, local01
00d00     14 5E 06 F1 | 	add	arg01, #20
00d04     38 7F 02 F6 | 	mov	local10, local03
00d08     01 7E 86 F1 | 	sub	local10, #1
00d0c     3F 81 02 F6 | 	mov	local11, local10
00d10     04 80 66 F0 | 	shl	local11, #4
00d14     3F 81 82 F1 | 	sub	local11, local10
00d18     01 80 66 F0 | 	shl	local11, #1
00d1c     40 5F 02 F1 | 	add	arg01, local11
00d20     17 5E 06 F1 | 	add	arg01, #23
00d24                 | ' asm
00d24     2F 7B C2 FA | 	rdbyte	local08, arg01
00d28                 | ' return r
00d28     07 7A 46 F7 | 	zerox	local08, #7
00d2c     3D 75 02 F1 | 	add	local05, local08
00d30     01 74 66 F0 | 	shl	local05, #1
00d34     09 00 00 FF 
00d38     14 FA 05 F1 | 	add	objptr, ##4628
00d3c     FD 74 62 FC | 	wrlong	local05, objptr
00d40     36 5F 02 F6 | 	mov	arg01, local01
00d44     14 5E 06 F1 | 	add	arg01, #20
00d48     38 7B 02 F6 | 	mov	local08, local03
00d4c     01 7A 86 F1 | 	sub	local08, #1
00d50     3D 7D 02 F6 | 	mov	local09, local08
00d54     04 7C 66 F0 | 	shl	local09, #4
00d58     3D 7D 82 F1 | 	sub	local09, local08
00d5c     01 7C 66 F0 | 	shl	local09, #1
00d60     3E 5F 02 F1 | 	add	arg01, local09
00d64     1A 5E 06 F1 | 	add	arg01, #26
00d68                 | ' asm
00d68     2F 75 C2 FA | 	rdbyte	local05, arg01
00d6c                 | ' return r
00d6c     07 74 46 F7 | 	zerox	local05, #7
00d70     08 74 66 F0 | 	shl	local05, #8
00d74     36 5F 02 F6 | 	mov	arg01, local01
00d78     14 5E 06 F1 | 	add	arg01, #20
00d7c     38 7F 02 F6 | 	mov	local10, local03
00d80     01 7E 86 F1 | 	sub	local10, #1
00d84     3F 81 02 F6 | 	mov	local11, local10
00d88     04 80 66 F0 | 	shl	local11, #4
00d8c     3F 81 82 F1 | 	sub	local11, local10
00d90     01 80 66 F0 | 	shl	local11, #1
00d94     40 5F 02 F1 | 	add	arg01, local11
00d98     1B 5E 06 F1 | 	add	arg01, #27
00d9c                 | ' asm
00d9c     2F 7B C2 FA | 	rdbyte	local08, arg01
00da0                 | ' return r
00da0     07 7A 46 F7 | 	zerox	local08, #7
00da4     3D 75 02 F1 | 	add	local05, local08
00da8     01 74 66 F0 | 	shl	local05, #1
00dac     04 FA 05 F1 | 	add	objptr, #4
00db0     FD 74 62 FC | 	wrlong	local05, objptr
00db4     36 5F 02 F6 | 	mov	arg01, local01
00db8     14 5E 06 F1 | 	add	arg01, #20
00dbc     38 7B 02 F6 | 	mov	local08, local03
00dc0     01 7A 86 F1 | 	sub	local08, #1
00dc4     3D 7D 02 F6 | 	mov	local09, local08
00dc8     04 7C 66 F0 | 	shl	local09, #4
00dcc     3D 7D 82 F1 | 	sub	local09, local08
00dd0     01 7C 66 F0 | 	shl	local09, #1
00dd4     3E 5F 02 F1 | 	add	arg01, local09
00dd8     1C 5E 06 F1 | 	add	arg01, #28
00ddc                 | ' asm
00ddc     2F 75 C2 FA | 	rdbyte	local05, arg01
00de0                 | ' return r
00de0     07 74 46 F7 | 	zerox	local05, #7
00de4     08 74 66 F0 | 	shl	local05, #8
00de8     36 5F 02 F6 | 	mov	arg01, local01
00dec     14 5E 06 F1 | 	add	arg01, #20
00df0     38 7F 02 F6 | 	mov	local10, local03
00df4     01 7E 86 F1 | 	sub	local10, #1
00df8     3F 81 02 F6 | 	mov	local11, local10
00dfc     04 80 66 F0 | 	shl	local11, #4
00e00     3F 81 82 F1 | 	sub	local11, local10
00e04     01 80 66 F0 | 	shl	local11, #1
00e08     40 5F 02 F1 | 	add	arg01, local11
00e0c     1D 5E 06 F1 | 	add	arg01, #29
00e10                 | ' asm
00e10     2F 7B C2 FA | 	rdbyte	local08, arg01
00e14                 | ' return r
00e14     07 7A 46 F7 | 	zerox	local08, #7
00e18     3D 75 02 F1 | 	add	local05, local08
00e1c     01 74 66 F0 | 	shl	local05, #1
00e20     04 FA 05 F1 | 	add	objptr, #4
00e24     FD 74 62 FC | 	wrlong	local05, objptr
00e28     36 5F 02 F6 | 	mov	arg01, local01
00e2c     14 5E 06 F1 | 	add	arg01, #20
00e30     38 75 02 F6 | 	mov	local05, local03
00e34     01 74 86 F1 | 	sub	local05, #1
00e38     3A 7B 02 F6 | 	mov	local08, local05
00e3c     04 7A 66 F0 | 	shl	local08, #4
00e40     3A 7B 82 F1 | 	sub	local08, local05
00e44     01 7A 66 F0 | 	shl	local08, #1
00e48     3D 5F 02 F1 | 	add	arg01, local08
00e4c     18 5E 06 F1 | 	add	arg01, #24
00e50                 | ' asm
00e50     2F 79 C2 FA | 	rdbyte	local07, arg01
00e54                 | ' return r
00e54     07 78 46 F7 | 	zerox	local07, #7
00e58     04 FA 05 F1 | 	add	objptr, #4
00e5c     FD 78 62 FC | 	wrlong	local07, objptr
00e60     36 5F 02 F6 | 	mov	arg01, local01
00e64     14 5E 06 F1 | 	add	arg01, #20
00e68     38 75 02 F6 | 	mov	local05, local03
00e6c     01 74 86 F1 | 	sub	local05, #1
00e70     3A 7B 02 F6 | 	mov	local08, local05
00e74     04 7A 66 F0 | 	shl	local08, #4
00e78     3A 7B 82 F1 | 	sub	local08, local05
00e7c     01 7A 66 F0 | 	shl	local08, #1
00e80     3D 5F 02 F1 | 	add	arg01, local08
00e84     19 5E 06 F1 | 	add	arg01, #25
00e88                 | ' asm
00e88     2F 19 C2 FA | 	rdbyte	result1, arg01
00e8c                 | ' return r
00e8c     0C 79 02 F6 | 	mov	local07, result1
00e90     07 78 46 F7 | 	zerox	local07, #7
00e94     04 FA 05 F1 | 	add	objptr, #4
00e98     FD 78 62 FC | 	wrlong	local07, objptr
00e9c     09 00 00 FF 
00ea0     24 FA 85 F1 | 	sub	objptr, ##4644
00ea4                 | ' sl=2*(256*peek(ma+20+30*(i-1)+22)+ peek(ma+20+30*(i-1)+23))  
00ea4                 | ' rp=2*(256*peek(ma+20+30*(i-1)+26)+ peek(ma+20+30*(i-1)+27))  
00ea4                 | ' rl=2*(256*peek(ma+20+30*(i-1)+28)+ peek(ma+20+30*(i-1)+29))  
00ea4                 | ' ft=peek(ma+20+30*(i-1)+24)
00ea4                 | ' vl=peek(ma+20+30*(i-1)+25)
00ea4                 | ' if i<16 then position 1,5+i :print sn$(i) : position 24,5+i : print sl :position 31,5+i : print ft :position 34,5+i : print vl : position 37,5+i :print rp : position 43,5+i :print rl
00ea4     10 70 5E F2 | 	cmps	local03, #16 wcz
00ea8     D8 02 90 3D |  if_ae	jmp	#LR__0005
00eac     05 60 06 F6 | 	mov	arg02, #5
00eb0     38 61 02 F1 | 	add	arg02, local03
00eb4                 | ' 
00eb4                 | ' ''---------- Set the (x,y) position of cursor
00eb4                 | ' 
00eb4                 | ' cursor_x:=x
00eb4     34 FA 05 F1 | 	add	objptr, #52
00eb8     FD 02 48 FC | 	wrbyte	#1, objptr
00ebc                 | ' cursor_y:=y
00ebc     01 FA 05 F1 | 	add	objptr, #1
00ec0     FD 60 42 FC | 	wrbyte	arg02, objptr
00ec4     35 FA 85 F1 | 	sub	objptr, #53
00ec8     00 5E 06 F6 | 	mov	arg01, #0
00ecc     00 76 B0 FD | 	call	#__system___getiolock_0150
00ed0     0C 5F 02 F6 | 	mov	arg01, result1
00ed4     98 5E B0 FD | 	call	#__system___lockmem
00ed8     00 18 06 F6 | 	mov	result1, #0
00edc     38 7D 02 F6 | 	mov	local09, local03
00ee0     02 7C 66 F0 | 	shl	local09, #2
00ee4     08 00 00 FF 
00ee8     5C FB 05 F1 | 	add	objptr, ##4444
00eec     FD 7C 02 F1 | 	add	local09, objptr
00ef0     3E 61 02 FB | 	rdlong	arg02, local09
00ef4     00 5E 06 F6 | 	mov	arg01, #0
00ef8     00 62 06 F6 | 	mov	arg03, #0
00efc     08 00 00 FF 
00f00     5C FB 85 F1 | 	sub	objptr, ##4444
00f04     24 62 B0 FD | 	call	#__system___basic_print_string
00f08     00 5E 06 F6 | 	mov	arg01, #0
00f0c     0A 60 06 F6 | 	mov	arg02, #10
00f10     00 62 06 F6 | 	mov	arg03, #0
00f14     C8 61 B0 FD | 	call	#__system___basic_print_char
00f18     01 18 06 F6 | 	mov	result1, #1
00f1c     00 5E 06 F6 | 	mov	arg01, #0
00f20     AC 75 B0 FD | 	call	#__system___getiolock_0150
00f24     0C 01 68 FC | 	wrlong	#0, result1
00f28     00 18 06 F6 | 	mov	result1, #0
00f2c     05 60 06 F6 | 	mov	arg02, #5
00f30     38 61 02 F1 | 	add	arg02, local03
00f34                 | ' 
00f34                 | ' ''---------- Set the (x,y) position of cursor
00f34                 | ' 
00f34                 | ' cursor_x:=x
00f34     34 FA 05 F1 | 	add	objptr, #52
00f38     FD 30 48 FC | 	wrbyte	#24, objptr
00f3c                 | ' cursor_y:=y
00f3c     01 FA 05 F1 | 	add	objptr, #1
00f40     FD 60 42 FC | 	wrbyte	arg02, objptr
00f44     35 FA 85 F1 | 	sub	objptr, #53
00f48     00 5E 06 F6 | 	mov	arg01, #0
00f4c     80 75 B0 FD | 	call	#__system___getiolock_0150
00f50     0C 5F 02 F6 | 	mov	arg01, result1
00f54     18 5E B0 FD | 	call	#__system___lockmem
00f58     00 18 06 F6 | 	mov	result1, #0
00f5c     09 00 00 FF 
00f60     14 FA 05 F1 | 	add	objptr, ##4628
00f64     FD 60 02 FB | 	rdlong	arg02, objptr
00f68     09 00 00 FF 
00f6c     14 FA 85 F1 | 	sub	objptr, ##4628
00f70     00 5E 06 F6 | 	mov	arg01, #0
00f74     00 62 06 F6 | 	mov	arg03, #0
00f78     0A 64 06 F6 | 	mov	arg04, #10
00f7c     F4 61 B0 FD | 	call	#__system___basic_print_integer
00f80     00 5E 06 F6 | 	mov	arg01, #0
00f84     0A 60 06 F6 | 	mov	arg02, #10
00f88     00 62 06 F6 | 	mov	arg03, #0
00f8c     50 61 B0 FD | 	call	#__system___basic_print_char
00f90     01 18 06 F6 | 	mov	result1, #1
00f94     00 5E 06 F6 | 	mov	arg01, #0
00f98     34 75 B0 FD | 	call	#__system___getiolock_0150
00f9c     0C 01 68 FC | 	wrlong	#0, result1
00fa0     00 18 06 F6 | 	mov	result1, #0
00fa4     05 60 06 F6 | 	mov	arg02, #5
00fa8     38 61 02 F1 | 	add	arg02, local03
00fac                 | ' 
00fac                 | ' ''---------- Set the (x,y) position of cursor
00fac                 | ' 
00fac                 | ' cursor_x:=x
00fac     34 FA 05 F1 | 	add	objptr, #52
00fb0     FD 3E 48 FC | 	wrbyte	#31, objptr
00fb4                 | ' cursor_y:=y
00fb4     01 FA 05 F1 | 	add	objptr, #1
00fb8     FD 60 42 FC | 	wrbyte	arg02, objptr
00fbc     35 FA 85 F1 | 	sub	objptr, #53
00fc0     00 5E 06 F6 | 	mov	arg01, #0
00fc4     08 75 B0 FD | 	call	#__system___getiolock_0150
00fc8     0C 5F 02 F6 | 	mov	arg01, result1
00fcc     A0 5D B0 FD | 	call	#__system___lockmem
00fd0     00 18 06 F6 | 	mov	result1, #0
00fd4     09 00 00 FF 
00fd8     20 FA 05 F1 | 	add	objptr, ##4640
00fdc     FD 60 02 FB | 	rdlong	arg02, objptr
00fe0     09 00 00 FF 
00fe4     20 FA 85 F1 | 	sub	objptr, ##4640
00fe8     00 5E 06 F6 | 	mov	arg01, #0
00fec     00 62 06 F6 | 	mov	arg03, #0
00ff0     0A 64 06 F6 | 	mov	arg04, #10
00ff4     7C 61 B0 FD | 	call	#__system___basic_print_integer
00ff8     00 5E 06 F6 | 	mov	arg01, #0
00ffc     0A 60 06 F6 | 	mov	arg02, #10
01000     00 62 06 F6 | 	mov	arg03, #0
01004     D8 60 B0 FD | 	call	#__system___basic_print_char
01008     01 18 06 F6 | 	mov	result1, #1
0100c     00 5E 06 F6 | 	mov	arg01, #0
01010     BC 74 B0 FD | 	call	#__system___getiolock_0150
01014     0C 01 68 FC | 	wrlong	#0, result1
01018     00 18 06 F6 | 	mov	result1, #0
0101c     05 60 06 F6 | 	mov	arg02, #5
01020     38 61 02 F1 | 	add	arg02, local03
01024                 | ' 
01024                 | ' ''---------- Set the (x,y) position of cursor
01024                 | ' 
01024                 | ' cursor_x:=x
01024     34 FA 05 F1 | 	add	objptr, #52
01028     FD 44 48 FC | 	wrbyte	#34, objptr
0102c                 | ' cursor_y:=y
0102c     01 FA 05 F1 | 	add	objptr, #1
01030     FD 60 42 FC | 	wrbyte	arg02, objptr
01034     35 FA 85 F1 | 	sub	objptr, #53
01038     00 5E 06 F6 | 	mov	arg01, #0
0103c     90 74 B0 FD | 	call	#__system___getiolock_0150
01040     0C 5F 02 F6 | 	mov	arg01, result1
01044     28 5D B0 FD | 	call	#__system___lockmem
01048     00 18 06 F6 | 	mov	result1, #0
0104c     09 00 00 FF 
01050     24 FA 05 F1 | 	add	objptr, ##4644
01054     FD 60 02 FB | 	rdlong	arg02, objptr
01058     09 00 00 FF 
0105c     24 FA 85 F1 | 	sub	objptr, ##4644
01060     00 5E 06 F6 | 	mov	arg01, #0
01064     00 62 06 F6 | 	mov	arg03, #0
01068     0A 64 06 F6 | 	mov	arg04, #10
0106c     04 61 B0 FD | 	call	#__system___basic_print_integer
01070     00 5E 06 F6 | 	mov	arg01, #0
01074     0A 60 06 F6 | 	mov	arg02, #10
01078     00 62 06 F6 | 	mov	arg03, #0
0107c     60 60 B0 FD | 	call	#__system___basic_print_char
01080     01 18 06 F6 | 	mov	result1, #1
01084     00 5E 06 F6 | 	mov	arg01, #0
01088     44 74 B0 FD | 	call	#__system___getiolock_0150
0108c     0C 01 68 FC | 	wrlong	#0, result1
01090     00 18 06 F6 | 	mov	result1, #0
01094     05 60 06 F6 | 	mov	arg02, #5
01098     38 61 02 F1 | 	add	arg02, local03
0109c                 | ' 
0109c                 | ' ''---------- Set the (x,y) position of cursor
0109c                 | ' 
0109c                 | ' cursor_x:=x
0109c     34 FA 05 F1 | 	add	objptr, #52
010a0     FD 4A 48 FC | 	wrbyte	#37, objptr
010a4                 | ' cursor_y:=y
010a4     01 FA 05 F1 | 	add	objptr, #1
010a8     FD 60 42 FC | 	wrbyte	arg02, objptr
010ac     35 FA 85 F1 | 	sub	objptr, #53
010b0     00 5E 06 F6 | 	mov	arg01, #0
010b4     18 74 B0 FD | 	call	#__system___getiolock_0150
010b8     0C 5F 02 F6 | 	mov	arg01, result1
010bc     B0 5C B0 FD | 	call	#__system___lockmem
010c0     00 18 06 F6 | 	mov	result1, #0
010c4     09 00 00 FF 
010c8     18 FA 05 F1 | 	add	objptr, ##4632
010cc     FD 60 02 FB | 	rdlong	arg02, objptr
010d0     09 00 00 FF 
010d4     18 FA 85 F1 | 	sub	objptr, ##4632
010d8     00 5E 06 F6 | 	mov	arg01, #0
010dc     00 62 06 F6 | 	mov	arg03, #0
010e0     0A 64 06 F6 | 	mov	arg04, #10
010e4     8C 60 B0 FD | 	call	#__system___basic_print_integer
010e8     00 5E 06 F6 | 	mov	arg01, #0
010ec     0A 60 06 F6 | 	mov	arg02, #10
010f0     00 62 06 F6 | 	mov	arg03, #0
010f4     E8 5F B0 FD | 	call	#__system___basic_print_char
010f8     01 18 06 F6 | 	mov	result1, #1
010fc     00 5E 06 F6 | 	mov	arg01, #0
01100     CC 73 B0 FD | 	call	#__system___getiolock_0150
01104     0C 01 68 FC | 	wrlong	#0, result1
01108     00 18 06 F6 | 	mov	result1, #0
0110c     05 60 06 F6 | 	mov	arg02, #5
01110     38 61 02 F1 | 	add	arg02, local03
01114                 | ' 
01114                 | ' ''---------- Set the (x,y) position of cursor
01114                 | ' 
01114                 | ' cursor_x:=x
01114     34 FA 05 F1 | 	add	objptr, #52
01118     FD 56 48 FC | 	wrbyte	#43, objptr
0111c                 | ' cursor_y:=y
0111c     01 FA 05 F1 | 	add	objptr, #1
01120     FD 60 42 FC | 	wrbyte	arg02, objptr
01124     35 FA 85 F1 | 	sub	objptr, #53
01128     00 5E 06 F6 | 	mov	arg01, #0
0112c     A0 73 B0 FD | 	call	#__system___getiolock_0150
01130     0C 5F 02 F6 | 	mov	arg01, result1
01134     38 5C B0 FD | 	call	#__system___lockmem
01138     00 18 06 F6 | 	mov	result1, #0
0113c     09 00 00 FF 
01140     1C FA 05 F1 | 	add	objptr, ##4636
01144     FD 60 02 FB | 	rdlong	arg02, objptr
01148     09 00 00 FF 
0114c     1C FA 85 F1 | 	sub	objptr, ##4636
01150     00 5E 06 F6 | 	mov	arg01, #0
01154     00 62 06 F6 | 	mov	arg03, #0
01158     0A 64 06 F6 | 	mov	arg04, #10
0115c     14 60 B0 FD | 	call	#__system___basic_print_integer
01160     00 5E 06 F6 | 	mov	arg01, #0
01164     0A 60 06 F6 | 	mov	arg02, #10
01168     00 62 06 F6 | 	mov	arg03, #0
0116c     70 5F B0 FD | 	call	#__system___basic_print_char
01170     01 18 06 F6 | 	mov	result1, #1
01174     00 5E 06 F6 | 	mov	arg01, #0
01178     54 73 B0 FD | 	call	#__system___getiolock_0150
0117c     0C 01 68 FC | 	wrlong	#0, result1
01180     00 18 06 F6 | 	mov	result1, #0
01184                 | LR__0005
01184                 | ' if i>=16 then position 57,i-11 :print sn$(i) : position 80,i-11 : print sl : position 87,i-11 : print ft: position 90,i-11 : print vl :position 93,i-11 : print rp : position 99,i-11 : print rl
01184     10 70 5E F2 | 	cmps	local03, #16 wcz
01188     D8 02 90 CD |  if_b	jmp	#LR__0006
0118c     38 61 02 F6 | 	mov	arg02, local03
01190     0B 60 86 F1 | 	sub	arg02, #11
01194                 | ' 
01194                 | ' ''---------- Set the (x,y) position of cursor
01194                 | ' 
01194                 | ' cursor_x:=x
01194     34 FA 05 F1 | 	add	objptr, #52
01198     FD 72 48 FC | 	wrbyte	#57, objptr
0119c                 | ' cursor_y:=y
0119c     01 FA 05 F1 | 	add	objptr, #1
011a0     FD 60 42 FC | 	wrbyte	arg02, objptr
011a4     35 FA 85 F1 | 	sub	objptr, #53
011a8     00 5E 06 F6 | 	mov	arg01, #0
011ac     20 73 B0 FD | 	call	#__system___getiolock_0150
011b0     0C 5F 02 F6 | 	mov	arg01, result1
011b4     B8 5B B0 FD | 	call	#__system___lockmem
011b8     00 18 06 F6 | 	mov	result1, #0
011bc     38 7D 02 F6 | 	mov	local09, local03
011c0     02 7C 66 F0 | 	shl	local09, #2
011c4     08 00 00 FF 
011c8     5C FB 05 F1 | 	add	objptr, ##4444
011cc     FD 7C 02 F1 | 	add	local09, objptr
011d0     3E 61 02 FB | 	rdlong	arg02, local09
011d4     00 5E 06 F6 | 	mov	arg01, #0
011d8     00 62 06 F6 | 	mov	arg03, #0
011dc     08 00 00 FF 
011e0     5C FB 85 F1 | 	sub	objptr, ##4444
011e4     44 5F B0 FD | 	call	#__system___basic_print_string
011e8     00 5E 06 F6 | 	mov	arg01, #0
011ec     0A 60 06 F6 | 	mov	arg02, #10
011f0     00 62 06 F6 | 	mov	arg03, #0
011f4     E8 5E B0 FD | 	call	#__system___basic_print_char
011f8     01 18 06 F6 | 	mov	result1, #1
011fc     00 5E 06 F6 | 	mov	arg01, #0
01200     CC 72 B0 FD | 	call	#__system___getiolock_0150
01204     0C 01 68 FC | 	wrlong	#0, result1
01208     00 18 06 F6 | 	mov	result1, #0
0120c     38 61 02 F6 | 	mov	arg02, local03
01210     0B 60 86 F1 | 	sub	arg02, #11
01214                 | ' 
01214                 | ' ''---------- Set the (x,y) position of cursor
01214                 | ' 
01214                 | ' cursor_x:=x
01214     34 FA 05 F1 | 	add	objptr, #52
01218     FD A0 48 FC | 	wrbyte	#80, objptr
0121c                 | ' cursor_y:=y
0121c     01 FA 05 F1 | 	add	objptr, #1
01220     FD 60 42 FC | 	wrbyte	arg02, objptr
01224     35 FA 85 F1 | 	sub	objptr, #53
01228     00 5E 06 F6 | 	mov	arg01, #0
0122c     A0 72 B0 FD | 	call	#__system___getiolock_0150
01230     0C 5F 02 F6 | 	mov	arg01, result1
01234     38 5B B0 FD | 	call	#__system___lockmem
01238     00 18 06 F6 | 	mov	result1, #0
0123c     09 00 00 FF 
01240     14 FA 05 F1 | 	add	objptr, ##4628
01244     FD 60 02 FB | 	rdlong	arg02, objptr
01248     09 00 00 FF 
0124c     14 FA 85 F1 | 	sub	objptr, ##4628
01250     00 5E 06 F6 | 	mov	arg01, #0
01254     00 62 06 F6 | 	mov	arg03, #0
01258     0A 64 06 F6 | 	mov	arg04, #10
0125c     14 5F B0 FD | 	call	#__system___basic_print_integer
01260     00 5E 06 F6 | 	mov	arg01, #0
01264     0A 60 06 F6 | 	mov	arg02, #10
01268     00 62 06 F6 | 	mov	arg03, #0
0126c     70 5E B0 FD | 	call	#__system___basic_print_char
01270     01 18 06 F6 | 	mov	result1, #1
01274     00 5E 06 F6 | 	mov	arg01, #0
01278     54 72 B0 FD | 	call	#__system___getiolock_0150
0127c     0C 01 68 FC | 	wrlong	#0, result1
01280     00 18 06 F6 | 	mov	result1, #0
01284     38 61 02 F6 | 	mov	arg02, local03
01288     0B 60 86 F1 | 	sub	arg02, #11
0128c                 | ' 
0128c                 | ' ''---------- Set the (x,y) position of cursor
0128c                 | ' 
0128c                 | ' cursor_x:=x
0128c     34 FA 05 F1 | 	add	objptr, #52
01290     FD AE 48 FC | 	wrbyte	#87, objptr
01294                 | ' cursor_y:=y
01294     01 FA 05 F1 | 	add	objptr, #1
01298     FD 60 42 FC | 	wrbyte	arg02, objptr
0129c     35 FA 85 F1 | 	sub	objptr, #53
012a0     00 5E 06 F6 | 	mov	arg01, #0
012a4     28 72 B0 FD | 	call	#__system___getiolock_0150
012a8     0C 5F 02 F6 | 	mov	arg01, result1
012ac     C0 5A B0 FD | 	call	#__system___lockmem
012b0     00 18 06 F6 | 	mov	result1, #0
012b4     09 00 00 FF 
012b8     20 FA 05 F1 | 	add	objptr, ##4640
012bc     FD 60 02 FB | 	rdlong	arg02, objptr
012c0     09 00 00 FF 
012c4     20 FA 85 F1 | 	sub	objptr, ##4640
012c8     00 5E 06 F6 | 	mov	arg01, #0
012cc     00 62 06 F6 | 	mov	arg03, #0
012d0     0A 64 06 F6 | 	mov	arg04, #10
012d4     9C 5E B0 FD | 	call	#__system___basic_print_integer
012d8     00 5E 06 F6 | 	mov	arg01, #0
012dc     0A 60 06 F6 | 	mov	arg02, #10
012e0     00 62 06 F6 | 	mov	arg03, #0
012e4     F8 5D B0 FD | 	call	#__system___basic_print_char
012e8     01 18 06 F6 | 	mov	result1, #1
012ec     00 5E 06 F6 | 	mov	arg01, #0
012f0     DC 71 B0 FD | 	call	#__system___getiolock_0150
012f4     0C 01 68 FC | 	wrlong	#0, result1
012f8     00 18 06 F6 | 	mov	result1, #0
012fc     38 61 02 F6 | 	mov	arg02, local03
01300     0B 60 86 F1 | 	sub	arg02, #11
01304                 | ' 
01304                 | ' ''---------- Set the (x,y) position of cursor
01304                 | ' 
01304                 | ' cursor_x:=x
01304     34 FA 05 F1 | 	add	objptr, #52
01308     FD B4 48 FC | 	wrbyte	#90, objptr
0130c                 | ' cursor_y:=y
0130c     01 FA 05 F1 | 	add	objptr, #1
01310     FD 60 42 FC | 	wrbyte	arg02, objptr
01314     35 FA 85 F1 | 	sub	objptr, #53
01318     00 5E 06 F6 | 	mov	arg01, #0
0131c     B0 71 B0 FD | 	call	#__system___getiolock_0150
01320     0C 5F 02 F6 | 	mov	arg01, result1
01324     48 5A B0 FD | 	call	#__system___lockmem
01328     00 18 06 F6 | 	mov	result1, #0
0132c     09 00 00 FF 
01330     24 FA 05 F1 | 	add	objptr, ##4644
01334     FD 60 02 FB | 	rdlong	arg02, objptr
01338     09 00 00 FF 
0133c     24 FA 85 F1 | 	sub	objptr, ##4644
01340     00 5E 06 F6 | 	mov	arg01, #0
01344     00 62 06 F6 | 	mov	arg03, #0
01348     0A 64 06 F6 | 	mov	arg04, #10
0134c     24 5E B0 FD | 	call	#__system___basic_print_integer
01350     00 5E 06 F6 | 	mov	arg01, #0
01354     0A 60 06 F6 | 	mov	arg02, #10
01358     00 62 06 F6 | 	mov	arg03, #0
0135c     80 5D B0 FD | 	call	#__system___basic_print_char
01360     01 18 06 F6 | 	mov	result1, #1
01364     00 5E 06 F6 | 	mov	arg01, #0
01368     64 71 B0 FD | 	call	#__system___getiolock_0150
0136c     0C 01 68 FC | 	wrlong	#0, result1
01370     00 18 06 F6 | 	mov	result1, #0
01374     38 61 02 F6 | 	mov	arg02, local03
01378     0B 60 86 F1 | 	sub	arg02, #11
0137c                 | ' 
0137c                 | ' ''---------- Set the (x,y) position of cursor
0137c                 | ' 
0137c                 | ' cursor_x:=x
0137c     34 FA 05 F1 | 	add	objptr, #52
01380     FD BA 48 FC | 	wrbyte	#93, objptr
01384                 | ' cursor_y:=y
01384     01 FA 05 F1 | 	add	objptr, #1
01388     FD 60 42 FC | 	wrbyte	arg02, objptr
0138c     35 FA 85 F1 | 	sub	objptr, #53
01390     00 5E 06 F6 | 	mov	arg01, #0
01394     38 71 B0 FD | 	call	#__system___getiolock_0150
01398     0C 5F 02 F6 | 	mov	arg01, result1
0139c     D0 59 B0 FD | 	call	#__system___lockmem
013a0     00 18 06 F6 | 	mov	result1, #0
013a4     09 00 00 FF 
013a8     18 FA 05 F1 | 	add	objptr, ##4632
013ac     FD 60 02 FB | 	rdlong	arg02, objptr
013b0     09 00 00 FF 
013b4     18 FA 85 F1 | 	sub	objptr, ##4632
013b8     00 5E 06 F6 | 	mov	arg01, #0
013bc     00 62 06 F6 | 	mov	arg03, #0
013c0     0A 64 06 F6 | 	mov	arg04, #10
013c4     AC 5D B0 FD | 	call	#__system___basic_print_integer
013c8     00 5E 06 F6 | 	mov	arg01, #0
013cc     0A 60 06 F6 | 	mov	arg02, #10
013d0     00 62 06 F6 | 	mov	arg03, #0
013d4     08 5D B0 FD | 	call	#__system___basic_print_char
013d8     01 18 06 F6 | 	mov	result1, #1
013dc     00 5E 06 F6 | 	mov	arg01, #0
013e0     EC 70 B0 FD | 	call	#__system___getiolock_0150
013e4     0C 01 68 FC | 	wrlong	#0, result1
013e8     00 18 06 F6 | 	mov	result1, #0
013ec     38 61 02 F6 | 	mov	arg02, local03
013f0     0B 60 86 F1 | 	sub	arg02, #11
013f4                 | ' 
013f4                 | ' ''---------- Set the (x,y) position of cursor
013f4                 | ' 
013f4                 | ' cursor_x:=x
013f4     34 FA 05 F1 | 	add	objptr, #52
013f8     FD C6 48 FC | 	wrbyte	#99, objptr
013fc                 | ' cursor_y:=y
013fc     01 FA 05 F1 | 	add	objptr, #1
01400     FD 60 42 FC | 	wrbyte	arg02, objptr
01404     35 FA 85 F1 | 	sub	objptr, #53
01408     00 5E 06 F6 | 	mov	arg01, #0
0140c     C0 70 B0 FD | 	call	#__system___getiolock_0150
01410     0C 5F 02 F6 | 	mov	arg01, result1
01414     58 59 B0 FD | 	call	#__system___lockmem
01418     00 18 06 F6 | 	mov	result1, #0
0141c     09 00 00 FF 
01420     1C FA 05 F1 | 	add	objptr, ##4636
01424     FD 60 02 FB | 	rdlong	arg02, objptr
01428     09 00 00 FF 
0142c     1C FA 85 F1 | 	sub	objptr, ##4636
01430     00 5E 06 F6 | 	mov	arg01, #0
01434     00 62 06 F6 | 	mov	arg03, #0
01438     0A 64 06 F6 | 	mov	arg04, #10
0143c     34 5D B0 FD | 	call	#__system___basic_print_integer
01440     00 5E 06 F6 | 	mov	arg01, #0
01444     0A 60 06 F6 | 	mov	arg02, #10
01448     00 62 06 F6 | 	mov	arg03, #0
0144c     90 5C B0 FD | 	call	#__system___basic_print_char
01450     01 18 06 F6 | 	mov	result1, #1
01454     00 5E 06 F6 | 	mov	arg01, #0
01458     74 70 B0 FD | 	call	#__system___getiolock_0150
0145c     0C 01 68 FC | 	wrlong	#0, result1
01460     00 18 06 F6 | 	mov	result1, #0
01464                 | LR__0006
01464     01 70 06 F1 | 	add	local03, #1
01468     A4 F7 9F FD | 	jmp	#LR__0002
0146c                 | LR__0007
0146c                 | ' print
0146c     00 5E 06 F6 | 	mov	arg01, #0
01470     5C 70 B0 FD | 	call	#__system___getiolock_0150
01474     0C 5F 02 F6 | 	mov	arg01, result1
01478     F4 58 B0 FD | 	call	#__system___lockmem
0147c     00 18 06 F6 | 	mov	result1, #0
01480     00 5E 06 F6 | 	mov	arg01, #0
01484     0A 60 06 F6 | 	mov	arg02, #10
01488     00 62 06 F6 | 	mov	arg03, #0
0148c     50 5C B0 FD | 	call	#__system___basic_print_char
01490     01 18 06 F6 | 	mov	result1, #1
01494     00 5E 06 F6 | 	mov	arg01, #0
01498     34 70 B0 FD | 	call	#__system___getiolock_0150
0149c     0C 01 68 FC | 	wrlong	#0, result1
014a0     00 18 06 F6 | 	mov	result1, #0
014a4     AF F0 03 F6 | 	mov	ptra, fp
014a8     BA 00 A0 FD | 	call	#popregs_
014ac                 | _getinfo_ret
014ac     2D 00 64 FD | 	ret
014b0                 | 
014b0                 | _program
014b0     0C 5A 05 F6 | 	mov	COUNT_, #12
014b4     B0 00 A0 FD | 	call	#pushregs_
014b8     EC FA 05 F1 | 	add	objptr, #236
014bc     50 2B B0 FD | 	call	#_retrocog_spin2_start
014c0     02 00 00 FF 
014c4     40 FA 05 F1 | 	add	objptr, ##1088
014c8     FD 18 62 FC | 	wrlong	result1, objptr
014cc                 | ' c=rm.start()
014cc                 | ' return c
014cc     02 00 00 FF 
014d0     2C FB 85 F1 | 	sub	objptr, ##1324
014d4     40 5E 06 F6 | 	mov	arg01, #64
014d8     00 60 06 F6 | 	mov	arg02, #0
014dc     60 F3 BF FD | 	call	#_startvideo
014e0     1C FA 05 F1 | 	add	objptr, #28
014e4     FD 6C 02 FB | 	rdlong	local01, objptr
014e8     06 00 00 FF 
014ec     88 FB 05 F1 | 	add	objptr, ##3464
014f0     FD 6C 62 FC | 	wrlong	local01, objptr
014f4     06 00 00 FF 
014f8     8C FB 85 F1 | 	sub	objptr, ##3468
014fc     FD 6C 02 FB | 	rdlong	local01, objptr
01500     06 00 00 FF 
01504     90 FB 05 F1 | 	add	objptr, ##3472
01508     FD 6C 62 FC | 	wrlong	local01, objptr
0150c     06 00 00 FF 
01510     A8 FB 85 F1 | 	sub	objptr, ##3496
01514                 | ' 
01514                 | ' ' create a new screen
01514                 | ' ' 22 lines std border
01514                 | ' ' 32 lines of big title. As it is constant we fill it manually, lines 22..53
01514                 | ' ' 4 lines border lines 54..57
01514                 | ' ' 22x16=352 lines of text lines 58..409
01514                 | ' ' 6 lines of border at 410..415
01514                 | ' ' 64 lines of 4bpp oscilloscope at 416..479 ' todo: make it 2bpp. The driver has a bug: the timings[5] is not controlled by DL - TODO.
01514                 | ' ' 6 lines of border at 480..485
01514                 | ' ' 2x16=32 lines of text at 486- 517
01514                 | ' ' standard border at 518-539
01514                 | ' 
01514                 | ' ' We need 10752 bytes for text and 28672 bytes for graphics = 25088 bytes
01514                 | ' ' graphic starts at 79000
01514                 | ' ' text start at 76600
01514                 | ' 
01514                 | ' for i=0 to 539 : dlcopy(i)=lpeek(dltest+4*i):next i ' let it be here for debug
01514     00 6E 06 F6 | 	mov	local02, #0
01518     64 EB 9F FE | 	loc	pa,	#(@LR__0010-@LR__0008)
0151c     93 00 A0 FD | 	call	#FCACHE_LOAD_
01520                 | LR__0008
01520     37 71 02 F6 | 	mov	local03, local02
01524     02 70 66 F0 | 	shl	local03, #2
01528     02 00 00 FF 
0152c     30 FB 05 F1 | 	add	objptr, ##1328
01530     FD 70 02 F1 | 	add	local03, objptr
01534     04 00 00 FF 
01538     74 FA 05 F1 | 	add	objptr, ##2164
0153c     FD 5E 02 FB | 	rdlong	arg01, objptr
01540     06 00 00 FF 
01544     A4 FB 85 F1 | 	sub	objptr, ##3492
01548     37 73 02 F6 | 	mov	local04, local02
0154c     02 72 66 F0 | 	shl	local04, #2
01550     39 5F 02 F1 | 	add	arg01, local04
01554                 | ' asm
01554     2F 19 02 FB | 	rdlong	result1, arg01
01558                 | ' return r
01558     38 19 62 FC | 	wrlong	result1, local03
0155c     01 6E 06 F1 | 	add	local02, #1
01560     01 00 00 FF 
01564     1C 6E 5E F2 | 	cmps	local02, ##540 wcz
01568     B4 FF 9F CD |  if_b	jmp	#LR__0008
0156c                 | ' 
0156c                 | ' ' Prepare the title
0156c                 | ' 
0156c                 | ' for i=0 to 28: title(i)=$77710000 : next i
0156c     00 6E 06 F6 | 	mov	local02, #0
01570                 | LR__0009
01570     37 71 02 F6 | 	mov	local03, local02
01574     02 70 66 F0 | 	shl	local03, #2
01578     06 00 00 FF 
0157c     AC FB 05 F1 | 	add	objptr, ##3500
01580     FD 70 02 F1 | 	add	local03, objptr
01584     80 B8 BB FF 
01588     38 01 68 FC | 	wrlong	##2003894272, local03
0158c     01 6E 06 F1 | 	add	local02, #1
01590     1D 6E 5E F2 | 	cmps	local02, #29 wcz
01594     06 00 00 FF 
01598     AC FB 85 F1 | 	sub	objptr, ##3500
0159c     D0 FF 9F CD |  if_b	jmp	#LR__0009
015a0                 | LR__0010
015a0     06 00 00 FF 
015a4     C4 FB 05 F1 | 	add	objptr, ##3524
015a8     FD 6C 02 FB | 	rdlong	local01, objptr
015ac     50 6C 06 F1 | 	add	local01, #80
015b0     FD 6C 62 FC | 	wrlong	local01, objptr
015b4     04 FA 05 F1 | 	add	objptr, #4
015b8     FD 6C 02 FB | 	rdlong	local01, objptr
015bc     72 6C 06 F1 | 	add	local01, #114
015c0     FD 6C 62 FC | 	wrlong	local01, objptr
015c4     04 FA 05 F1 | 	add	objptr, #4
015c8     FD 6C 02 FB | 	rdlong	local01, objptr
015cc     6F 6C 06 F1 | 	add	local01, #111
015d0     FD 6C 62 FC | 	wrlong	local01, objptr
015d4     04 FA 05 F1 | 	add	objptr, #4
015d8     FD 6C 02 FB | 	rdlong	local01, objptr
015dc     70 6C 06 F1 | 	add	local01, #112
015e0     FD 6C 62 FC | 	wrlong	local01, objptr
015e4     04 FA 05 F1 | 	add	objptr, #4
015e8     FD 6C 02 FB | 	rdlong	local01, objptr
015ec     32 6C 06 F1 | 	add	local01, #50
015f0     FD 6C 62 FC | 	wrlong	local01, objptr
015f4     04 FA 05 F1 | 	add	objptr, #4
015f8     FD 6C 02 FB | 	rdlong	local01, objptr
015fc     70 6C 06 F1 | 	add	local01, #112
01600     FD 6C 62 FC | 	wrlong	local01, objptr
01604     04 FA 05 F1 | 	add	objptr, #4
01608     FD 6C 02 FB | 	rdlong	local01, objptr
0160c     6C 6C 06 F1 | 	add	local01, #108
01610     FD 6C 62 FC | 	wrlong	local01, objptr
01614     04 FA 05 F1 | 	add	objptr, #4
01618     FD 6C 02 FB | 	rdlong	local01, objptr
0161c     61 6C 06 F1 | 	add	local01, #97
01620     FD 6C 62 FC | 	wrlong	local01, objptr
01624     04 FA 05 F1 | 	add	objptr, #4
01628     FD 6C 02 FB | 	rdlong	local01, objptr
0162c     79 6C 06 F1 | 	add	local01, #121
01630     FD 6C 62 FC | 	wrlong	local01, objptr
01634     08 FA 05 F1 | 	add	objptr, #8
01638     FD 6C 02 FB | 	rdlong	local01, objptr
0163c     76 6C 06 F1 | 	add	local01, #118
01640     FD 6C 62 FC | 	wrlong	local01, objptr
01644     04 FA 05 F1 | 	add	objptr, #4
01648     FD 6C 02 FB | 	rdlong	local01, objptr
0164c     2E 6C 06 F1 | 	add	local01, #46
01650     FD 6C 62 FC | 	wrlong	local01, objptr
01654     04 FA 05 F1 | 	add	objptr, #4
01658     FD 6C 02 FB | 	rdlong	local01, objptr
0165c     30 6C 06 F1 | 	add	local01, #48
01660     FD 6C 62 FC | 	wrlong	local01, objptr
01664     04 FA 05 F1 | 	add	objptr, #4
01668     FD 6C 02 FB | 	rdlong	local01, objptr
0166c     2E 6C 06 F1 | 	add	local01, #46
01670     FD 6C 62 FC | 	wrlong	local01, objptr
01674     04 FA 05 F1 | 	add	objptr, #4
01678     FD 6C 02 FB | 	rdlong	local01, objptr
0167c     30 6C 06 F1 | 	add	local01, #48
01680     FD 6C 62 FC | 	wrlong	local01, objptr
01684     04 FA 05 F1 | 	add	objptr, #4
01688     FD 6C 02 FB | 	rdlong	local01, objptr
0168c     31 6C 06 F1 | 	add	local01, #49
01690     FD 6C 62 FC | 	wrlong	local01, objptr
01694     07 00 00 FF 
01698     00 FA 85 F1 | 	sub	objptr, ##3584
0169c                 | ' 
0169c                 | ' ' 22 lines of upper border
0169c                 | ' 
0169c                 | ' for i=0 to 21 : dlcopy(i)=0: next i
0169c     00 6E 06 F6 | 	mov	local02, #0
016a0     88 E9 9F FE | 	loc	pa,	#(@LR__0012-@LR__0011)
016a4     93 00 A0 FD | 	call	#FCACHE_LOAD_
016a8                 | LR__0011
016a8     37 71 02 F6 | 	mov	local03, local02
016ac     02 70 66 F0 | 	shl	local03, #2
016b0     02 00 00 FF 
016b4     30 FB 05 F1 | 	add	objptr, ##1328
016b8     FD 70 02 F1 | 	add	local03, objptr
016bc     38 01 68 FC | 	wrlong	#0, local03
016c0     01 6E 06 F1 | 	add	local02, #1
016c4     16 6E 5E F2 | 	cmps	local02, #22 wcz
016c8     02 00 00 FF 
016cc     30 FB 85 F1 | 	sub	objptr, ##1328
016d0     D4 FF 9F CD |  if_b	jmp	#LR__0011
016d4                 | LR__0012
016d4                 | ' 
016d4                 | ' ' big text titlle logo. Tell the driver via DL that it should display the text from "title" table
016d4                 | ' 
016d4                 | ' for i=0 to 15
016d4     00 6E 06 F6 | 	mov	local02, #0
016d8                 | LR__0013
016d8                 | '   for j=0 to 1
016d8     00 74 06 F6 | 	mov	local05, #0
016dc                 | LR__0014
016dc     37 71 02 F6 | 	mov	local03, local02
016e0     01 70 66 F0 | 	shl	local03, #1
016e4     16 76 06 F6 | 	mov	local06, #22
016e8     38 77 02 F1 | 	add	local06, local03
016ec     3A 77 02 F1 | 	add	local06, local05
016f0     02 76 66 F0 | 	shl	local06, #2
016f4     02 00 00 FF 
016f8     30 FB 05 F1 | 	add	objptr, ##1328
016fc     FD 76 02 F1 | 	add	local06, objptr
01700     04 00 00 FF 
01704     7C FA 05 F1 | 	add	objptr, ##2172
01708     FD 5E 02 F6 | 	mov	arg01, objptr
0170c     06 00 00 FF 
01710     AC FB 85 F1 | 	sub	objptr, ##3500
01714     6C F1 BF FD | 	call	#_addr
01718     0C 79 02 F6 | 	mov	local07, result1
0171c     0C 78 66 F0 | 	shl	local07, #12
01720     10 00 00 FF 
01724     01 78 06 F1 | 	add	local07, ##8193
01728     37 73 02 F6 | 	mov	local04, local02
0172c     08 72 66 F0 | 	shl	local04, #8
01730     39 79 02 F1 | 	add	local07, local04
01734     3B 79 62 FC | 	wrlong	local07, local06
01738     01 74 06 F1 | 	add	local05, #1
0173c     02 74 5E F2 | 	cmps	local05, #2 wcz
01740     98 FF 9F CD |  if_b	jmp	#LR__0014
01744     01 6E 06 F1 | 	add	local02, #1
01748     10 6E 5E F2 | 	cmps	local02, #16 wcz
0174c     88 FF 9F CD |  if_b	jmp	#LR__0013
01750                 | ' 
01750                 | ' ' 4 empty lines under the logo
01750                 | ' 
01750                 | ' for i=54 to 57 : dlcopy(i)= dlcopy(0) : next i 
01750     36 6E 06 F6 | 	mov	local02, #54
01754     D8 E8 9F FE | 	loc	pa,	#(@LR__0016-@LR__0015)
01758     93 00 A0 FD | 	call	#FCACHE_LOAD_
0175c                 | LR__0015
0175c     37 71 02 F6 | 	mov	local03, local02
01760     02 70 66 F0 | 	shl	local03, #2
01764     02 00 00 FF 
01768     30 FB 05 F1 | 	add	objptr, ##1328
0176c     FD 70 02 F1 | 	add	local03, objptr
01770     FD 7A 02 FB | 	rdlong	local08, objptr
01774     02 00 00 FF 
01778     30 FB 85 F1 | 	sub	objptr, ##1328
0177c     38 7B 62 FC | 	wrlong	local08, local03
01780     01 6E 06 F1 | 	add	local02, #1
01784     3A 6E 1E F2 | 	cmp	local02, #58 wcz
01788     D0 FF 9F CD |  if_b	jmp	#LR__0015
0178c                 | LR__0016
0178c     07 00 00 FF 
01790     20 FA 05 F1 | 	add	objptr, ##3616
01794     B3 03 80 FF 
01798     FD 00 68 FC | 	wrlong	##484864, objptr
0179c     07 00 00 FF 
017a0     20 FA 85 F1 | 	sub	objptr, ##3616
017a4                 | ' 
017a4                 | ' ' Now make 22 text lines starting at 79e00
017a4                 | ' 
017a4                 | ' address=$76600
017a4                 | ' for i=0 to 21
017a4     00 6E 06 F6 | 	mov	local02, #0
017a8     84 E9 9F FE | 	loc	pa,	#(@LR__0021-@LR__0017)
017ac     93 00 A0 FD | 	call	#FCACHE_LOAD_
017b0                 | LR__0017
017b0                 | '   for j=0 to 15
017b0     00 74 06 F6 | 	mov	local05, #0
017b4                 | LR__0018
017b4     37 71 02 F6 | 	mov	local03, local02
017b8     04 70 66 F0 | 	shl	local03, #4
017bc     3A 76 06 F6 | 	mov	local06, #58
017c0     38 77 02 F1 | 	add	local06, local03
017c4     3A 77 02 F1 | 	add	local06, local05
017c8     02 76 66 F0 | 	shl	local06, #2
017cc     02 00 00 FF 
017d0     30 FB 05 F1 | 	add	objptr, ##1328
017d4     FD 76 02 F1 | 	add	local06, objptr
017d8     04 00 00 FF 
017dc     F0 FA 05 F1 | 	add	objptr, ##2288
017e0     FD 78 02 FB | 	rdlong	local07, objptr
017e4     07 00 00 FF 
017e8     20 FA 85 F1 | 	sub	objptr, ##3616
017ec     0C 78 66 F0 | 	shl	local07, #12
017f0     3A 73 02 F6 | 	mov	local04, local05
017f4     08 72 66 F0 | 	shl	local04, #8
017f8     39 79 02 F1 | 	add	local07, local04
017fc     37 7D 02 F6 | 	mov	local09, local02
01800     02 7C 66 F0 | 	shl	local09, #2
01804     3E 79 02 F1 | 	add	local07, local09
01808     01 78 06 F1 | 	add	local07, #1
0180c     3B 79 62 FC | 	wrlong	local07, local06
01810     01 74 06 F1 | 	add	local05, #1
01814     10 74 5E F2 | 	cmps	local05, #16 wcz
01818     98 FF 9F CD |  if_b	jmp	#LR__0018
0181c     07 00 00 FF 
01820     20 FA 05 F1 | 	add	objptr, ##3616
01824     FD 6C 02 FB | 	rdlong	local01, objptr
01828     C0 6D 06 F1 | 	add	local01, #448
0182c     FD 6C 62 FC | 	wrlong	local01, objptr
01830     07 00 00 FF 
01834     20 FA 85 F1 | 	sub	objptr, ##3616
01838     01 6E 06 F1 | 	add	local02, #1
0183c     16 6E 5E F2 | 	cmps	local02, #22 wcz
01840     6C FF 9F CD |  if_b	jmp	#LR__0017
01844                 | ' 
01844                 | ' ' and add 2 text lines at the bottpm
01844                 | ' 
01844                 | ' for i=0 to 1
01844     00 6E 06 F6 | 	mov	local02, #0
01848                 | LR__0019
01848                 | '   for j=0 to 15
01848     00 74 06 F6 | 	mov	local05, #0
0184c                 | LR__0020
0184c     37 71 02 F6 | 	mov	local03, local02
01850     04 70 66 F0 | 	shl	local03, #4
01854     E6 77 06 F6 | 	mov	local06, #486
01858     38 77 02 F1 | 	add	local06, local03
0185c     3A 77 02 F1 | 	add	local06, local05
01860     02 76 66 F0 | 	shl	local06, #2
01864     02 00 00 FF 
01868     30 FB 05 F1 | 	add	objptr, ##1328
0186c     FD 76 02 F1 | 	add	local06, objptr
01870     04 00 00 FF 
01874     F0 FA 05 F1 | 	add	objptr, ##2288
01878     FD 78 02 FB | 	rdlong	local07, objptr
0187c     07 00 00 FF 
01880     20 FA 85 F1 | 	sub	objptr, ##3616
01884     0C 78 66 F0 | 	shl	local07, #12
01888     3A 73 02 F6 | 	mov	local04, local05
0188c     08 72 66 F0 | 	shl	local04, #8
01890     39 79 02 F1 | 	add	local07, local04
01894     16 7C 06 F6 | 	mov	local09, #22
01898     37 7D 02 F1 | 	add	local09, local02
0189c     02 7C 66 F0 | 	shl	local09, #2
018a0     3E 79 02 F1 | 	add	local07, local09
018a4     01 78 06 F1 | 	add	local07, #1
018a8     3B 79 62 FC | 	wrlong	local07, local06
018ac     01 74 06 F1 | 	add	local05, #1
018b0     10 74 5E F2 | 	cmps	local05, #16 wcz
018b4     94 FF 9F CD |  if_b	jmp	#LR__0020
018b8     07 00 00 FF 
018bc     20 FA 05 F1 | 	add	objptr, ##3616
018c0     FD 6C 02 FB | 	rdlong	local01, objptr
018c4     C0 6D 06 F1 | 	add	local01, #448
018c8     FD 6C 62 FC | 	wrlong	local01, objptr
018cc     07 00 00 FF 
018d0     20 FA 85 F1 | 	sub	objptr, ##3616
018d4     01 6E 06 F1 | 	add	local02, #1
018d8     02 6E 5E F2 | 	cmps	local02, #2 wcz
018dc     68 FF 9F CD |  if_b	jmp	#LR__0019
018e0                 | LR__0021
018e0                 | ' 
018e0                 | ' ' add 6 empty lines over the scope area
018e0                 | ' 
018e0                 | ' for i=410 to 415 : dlcopy(i)=0 : next i
018e0     9A 6F 06 F6 | 	mov	local02, #410
018e4     44 E7 9F FE | 	loc	pa,	#(@LR__0023-@LR__0022)
018e8     93 00 A0 FD | 	call	#FCACHE_LOAD_
018ec                 | LR__0022
018ec     37 71 02 F6 | 	mov	local03, local02
018f0     02 70 66 F0 | 	shl	local03, #2
018f4     02 00 00 FF 
018f8     30 FB 05 F1 | 	add	objptr, ##1328
018fc     FD 70 02 F1 | 	add	local03, objptr
01900     38 01 68 FC | 	wrlong	#0, local03
01904     01 6E 06 F1 | 	add	local02, #1
01908     A0 6F 1E F2 | 	cmp	local02, #416 wcz
0190c     02 00 00 FF 
01910     30 FB 85 F1 | 	sub	objptr, ##1328
01914     D4 FF 9F CD |  if_b	jmp	#LR__0022
01918                 | LR__0023
01918     07 00 00 FF 
0191c     20 FA 05 F1 | 	add	objptr, ##3616
01920     C8 03 80 FF 
01924     FD 00 68 FC | 	wrlong	##495616, objptr
01928     07 00 00 FF 
0192c     20 FA 85 F1 | 	sub	objptr, ##3616
01930                 | ' 
01930                 | ' ' the scope area, 4 bpp graphics
01930                 | ' 
01930                 | ' address=$79000   
01930                 | ' 
01930                 | ' for i=416 to 479: dlcopy(i)= ((address+448*(i-416)) shl 12) + %1010 : next i
01930     A0 6F 06 F6 | 	mov	local02, #416
01934     8C E7 9F FE | 	loc	pa,	#(@LR__0027-@LR__0024)
01938     93 00 A0 FD | 	call	#FCACHE_LOAD_
0193c                 | LR__0024
0193c     37 71 02 F6 | 	mov	local03, local02
01940     02 70 66 F0 | 	shl	local03, #2
01944     02 00 00 FF 
01948     30 FB 05 F1 | 	add	objptr, ##1328
0194c     FD 70 02 F1 | 	add	local03, objptr
01950     04 00 00 FF 
01954     F0 FA 05 F1 | 	add	objptr, ##2288
01958     FD 7A 02 FB | 	rdlong	local08, objptr
0195c     07 00 00 FF 
01960     20 FA 85 F1 | 	sub	objptr, ##3616
01964     37 7F 02 F6 | 	mov	local10, local02
01968     A0 7F 86 F1 | 	sub	local10, #416
0196c     3F 73 02 F6 | 	mov	local04, local10
01970     03 72 66 F0 | 	shl	local04, #3
01974     3F 73 82 F1 | 	sub	local04, local10
01978     06 72 66 F0 | 	shl	local04, #6
0197c     39 7B 02 F1 | 	add	local08, local04
01980     0C 7A 66 F0 | 	shl	local08, #12
01984     0A 7A 06 F1 | 	add	local08, #10
01988     38 7B 62 FC | 	wrlong	local08, local03
0198c     01 6E 06 F1 | 	add	local02, #1
01990     E0 6F 1E F2 | 	cmp	local02, #480 wcz
01994     A4 FF 9F CD |  if_b	jmp	#LR__0024
01998                 | ' 
01998                 | ' ' add 6 empty lines under the scope area
01998                 | ' 
01998                 | ' for i=480 to 485 : dlcopy(i)=0 : next i
01998     E0 6F 06 F6 | 	mov	local02, #480
0199c                 | LR__0025
0199c     37 71 02 F6 | 	mov	local03, local02
019a0     02 70 66 F0 | 	shl	local03, #2
019a4     02 00 00 FF 
019a8     30 FB 05 F1 | 	add	objptr, ##1328
019ac     FD 70 02 F1 | 	add	local03, objptr
019b0     38 01 68 FC | 	wrlong	#0, local03
019b4     01 6E 06 F1 | 	add	local02, #1
019b8     E6 6F 1E F2 | 	cmp	local02, #486 wcz
019bc     02 00 00 FF 
019c0     30 FB 85 F1 | 	sub	objptr, ##1328
019c4     D4 FF 9F CD |  if_b	jmp	#LR__0025
019c8                 | ' 
019c8                 | ' ' 22 standard border lines at bottom
019c8                 | ' 
019c8                 | ' for i=518 to 539 : dlcopy(i)=0 : next i
019c8     01 00 00 FF 
019cc     06 6E 06 F6 | 	mov	local02, ##518
019d0                 | LR__0026
019d0     37 71 02 F6 | 	mov	local03, local02
019d4     02 70 66 F0 | 	shl	local03, #2
019d8     02 00 00 FF 
019dc     30 FB 05 F1 | 	add	objptr, ##1328
019e0     FD 70 02 F1 | 	add	local03, objptr
019e4     38 01 68 FC | 	wrlong	#0, local03
019e8     01 6E 06 F1 | 	add	local02, #1
019ec     01 00 00 FF 
019f0     1C 6E 1E F2 | 	cmp	local02, ##540 wcz
019f4     02 00 00 FF 
019f8     30 FB 85 F1 | 	sub	objptr, ##1328
019fc     D0 FF 9F CD |  if_b	jmp	#LR__0026
01a00                 | LR__0027
01a00     02 00 00 FF 
01a04     30 FB 05 F1 | 	add	objptr, ##1328
01a08     FD 5E 02 F6 | 	mov	arg01, objptr
01a0c     02 00 00 FF 
01a10     30 FB 85 F1 | 	sub	objptr, ##1328
01a14     6C EE BF FD | 	call	#_addr
01a18     1C FA 05 F1 | 	add	objptr, #28
01a1c     FD 18 62 FC | 	wrlong	result1, objptr
01a20     1C FA 85 F1 | 	sub	objptr, #28
01a24     B3 03 80 FF 
01a28     FD 00 68 FC | 	wrlong	##484864, objptr
01a2c     9A 5E 06 F6 | 	mov	arg01, #154
01a30     93 60 06 F6 | 	mov	arg02, #147
01a34     98 12 B0 FD | 	call	#_hng030rm_spin2_cls
01a38                 | ' 
01a38                 | ' ' tell the driver where is the new dl and buffer
01a38                 | ' 
01a38                 | ' v030.dl_ptr=addr(dlcopy) 
01a38                 | ' v030.buf_ptr=$76600
01a38                 | ' cls
01a38                 | ' for i=$79000 to $7FFFC step 4 : lpoke i,0 : next i
01a38     C8 03 00 FF 
01a3c     00 6E 06 F6 | 	mov	local02, ##495616
01a40     D0 E5 9F FE | 	loc	pa,	#(@LR__0029-@LR__0028)
01a44     93 00 A0 FD | 	call	#FCACHE_LOAD_
01a48                 | LR__0028
01a48                 | ' asm
01a48     37 01 68 FC | 	wrlong	#0, local02
01a4c     04 6E 06 F1 | 	add	local02, #4
01a50     FF 03 00 FF 
01a54     FC 6F 1E F2 | 	cmp	local02, ##524284 wcz
01a58     EC FF 9F ED |  if_be	jmp	#LR__0028
01a5c                 | LR__0029
01a5c     E4 FA 05 F1 | 	add	objptr, #228
01a60     FD 6C 02 FB | 	rdlong	local01, objptr
01a64     0C FA 85 F1 | 	sub	objptr, #12
01a68     FD 6C 62 FC | 	wrlong	local01, objptr
01a6c     D8 FA 85 F1 | 	sub	objptr, #216
01a70     00 5E 06 F6 | 	mov	arg01, #0
01a74     00 60 06 F6 | 	mov	arg02, #0
01a78     00 62 06 F6 | 	mov	arg03, #0
01a7c     00 64 06 F6 | 	mov	arg04, #0
01a80     1C 12 B0 FD | 	call	#_hng030rm_spin2_setcolor
01a84     01 5E 06 F6 | 	mov	arg01, #1
01a88     00 60 06 F6 | 	mov	arg02, #0
01a8c     00 62 06 F6 | 	mov	arg03, #0
01a90     FF 64 06 F6 | 	mov	arg04, #255
01a94     08 12 B0 FD | 	call	#_hng030rm_spin2_setcolor
01a98     02 5E 06 F6 | 	mov	arg01, #2
01a9c     00 60 06 F6 | 	mov	arg02, #0
01aa0     FF 62 06 F6 | 	mov	arg03, #255
01aa4     00 64 06 F6 | 	mov	arg04, #0
01aa8     F4 11 B0 FD | 	call	#_hng030rm_spin2_setcolor
01aac     03 5E 06 F6 | 	mov	arg01, #3
01ab0     FF 60 06 F6 | 	mov	arg02, #255
01ab4     00 62 06 F6 | 	mov	arg03, #0
01ab8     00 64 06 F6 | 	mov	arg04, #0
01abc     E0 11 B0 FD | 	call	#_hng030rm_spin2_setcolor
01ac0     C8 03 80 FF 
01ac4     FD 00 68 FC | 	wrlong	##495616, objptr
01ac8     64 5E 06 F6 | 	mov	arg01, #100
01acc     6C 54 B0 FD | 	call	#__system___waitms
01ad0     90 FA 05 F1 | 	add	objptr, #144
01ad4     FD E0 68 FC | 	wrlong	#112, objptr
01ad8     04 FA 05 F1 | 	add	objptr, #4
01adc     FD 80 68 FC | 	wrlong	#64, objptr
01ae0     94 FA 85 F1 | 	sub	objptr, #148
01ae4                 | ' 
01ae4                 | ' v030.putpixel=v030.p4
01ae4                 | ' 
01ae4                 | ' v030.setcolor(0,0,0,0)
01ae4                 | ' v030.setcolor(1,0,0,255)
01ae4                 | ' v030.setcolor(2,0,255,0)
01ae4                 | ' v030.setcolor(3,255,0,0)
01ae4                 | ' v030.buf_ptr=$79000
01ae4                 | ' waitms(100)
01ae4                 | ' v030.cpl=112
01ae4                 | ' v030.lines=64
01ae4                 | ' for i=0 to 100: v030.putpixel(i,4,3) : next i
01ae4     00 6E 06 F6 | 	mov	local02, #0
01ae8     20 E5 9F FE | 	loc	pa,	#(@LR__0031-@LR__0030)
01aec     93 00 A0 FD | 	call	#FCACHE_LOAD_
01af0                 | LR__0030
01af0     01 6E 06 F1 | 	add	local02, #1
01af4     65 6E 5E F2 | 	cmps	local02, #101 wcz
01af8     F4 FF 9F CD |  if_b	jmp	#LR__0030
01afc                 | LR__0031
01afc     14 5E 06 F6 | 	mov	arg01, #20
01b00     14 60 06 F6 | 	mov	arg02, #20
01b04     0A 62 06 F6 | 	mov	arg03, #10
01b08     01 64 06 F6 | 	mov	arg04, #1
01b0c     44 09 B0 FD | 	call	#_hng030rm_spin2_fcircle
01b10     48 00 00 FF 
01b14     B5 62 06 F6 | 	mov	arg03, ##@LR__0506
01b18     0A 5E 06 F6 | 	mov	arg01, #10
01b1c     0A 60 06 F6 | 	mov	arg02, #10
01b20     03 64 06 F6 | 	mov	arg04, #3
01b24     00 66 06 F6 | 	mov	arg05, #0
01b28     00 0D B0 FD | 	call	#_hng030rm_spin2_outtextxycg
01b2c                 | ' 
01b2c                 | ' 
01b2c                 | ' v030.fcircle(20,20,10,1)
01b2c                 | ' v030.outtextxycg(10,10,"Abcdef",3,0)
01b2c                 | ' for i=1 to 100 : v030.plot(i,10,3) : next i
01b2c     01 6E 06 F6 | 	mov	local02, #1
01b30                 | LR__0032
01b30     37 5F 02 F6 | 	mov	arg01, local02
01b34     0A 60 06 F6 | 	mov	arg02, #10
01b38     03 62 06 F6 | 	mov	arg03, #3
01b3c     14 19 B0 FD | 	call	#_hng030rm_spin2_plot
01b40     01 6E 06 F1 | 	add	local02, #1
01b44     65 6E 1E F2 | 	cmp	local02, #101 wcz
01b48     E4 FF 9F CD |  if_b	jmp	#LR__0032
01b4c     00 5E 06 F6 | 	mov	arg01, #0
01b50     20 60 06 F6 | 	mov	arg02, #32
01b54     BF 63 06 F6 | 	mov	arg03, #447
01b58     21 64 06 F6 | 	mov	arg04, #33
01b5c     03 66 06 F6 | 	mov	arg05, #3
01b60                 | ' line(x1,y1,x2,y2,c)
01b60     20 0A B0 FD | 	call	#_hng030rm_spin2_line
01b64     FA 5E 06 F6 | 	mov	arg01, #250
01b68     0A 60 06 F6 | 	mov	arg02, #10
01b6c     01 62 06 F6 | 	mov	arg03, #1
01b70     E0 18 B0 FD | 	call	#_hng030rm_spin2_plot
01b74     B3 03 80 FF 
01b78     FD 00 68 FC | 	wrlong	##484864, objptr
01b7c     90 FA 05 F1 | 	add	objptr, #144
01b80     FD E0 68 FC | 	wrlong	#112, objptr
01b84                 | ' 
01b84                 | ' return long[@ataripalette+4*color]
01b84     0C 00 00 FF 
01b88     58 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
01b8c     03 81 02 F6 | 	mov	local11, ptr__hng030rm_spin2_dat__
01b90     C4 81 06 F1 | 	add	local11, #452
01b94     40 19 02 FB | 	rdlong	result1, local11
01b98     0C 00 00 FF 
01b9c     58 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
01ba0     06 00 00 FF 
01ba4     94 FB 05 F1 | 	add	objptr, ##3476
01ba8     FD 18 62 FC | 	wrlong	result1, objptr
01bac     0C 5F 02 F6 | 	mov	arg01, result1
01bb0                 | ' 
01bb0                 | ' bordercolor:=color
01bb0     06 00 00 FF 
01bb4     F8 FB 85 F1 | 	sub	objptr, ##3576
01bb8     FD 5E 62 FC | 	wrlong	arg01, objptr
01bbc     06 00 00 FF 
01bc0     FC FB 05 F1 | 	add	objptr, ##3580
01bc4     FD 00 69 FC | 	wrlong	#128, objptr
01bc8     04 FA 05 F1 | 	add	objptr, #4
01bcc     FD 7A 68 FC | 	wrlong	#61, objptr
01bd0     04 FA 05 F1 | 	add	objptr, #4
01bd4     FD 78 68 FC | 	wrlong	#60, objptr
01bd8     04 FA 05 F1 | 	add	objptr, #4
01bdc     FD 76 68 FC | 	wrlong	#59, objptr
01be0     04 FA 05 F1 | 	add	objptr, #4
01be4     FD 74 68 FC | 	wrlong	#58, objptr
01be8     04 FA 05 F1 | 	add	objptr, #4
01bec     FD 06 68 FC | 	wrlong	#3, objptr
01bf0     48 00 00 FF 
01bf4     BC 6C 06 F6 | 	mov	local01, ##@LR__0507
01bf8     01 00 00 FF 
01bfc     AC FB 05 F1 | 	add	objptr, ##940
01c00     FD 6C 62 FC | 	wrlong	local01, objptr
01c04     48 00 00 FF 
01c08     D3 6C 06 F6 | 	mov	local01, ##@LR__0508
01c0c     04 FA 05 F1 | 	add	objptr, #4
01c10     FD 6C 62 FC | 	wrlong	local01, objptr
01c14     08 00 00 FF 
01c18     EC FB 85 F1 | 	sub	objptr, ##4588
01c1c                 | ' 
01c1c                 | ' emptystr$="                      "
01c1c                 | ' ss$=""
01c1c                 | ' for i=1 to 31 : ss$=ss$+chr$(i) :next i
01c1c     01 6E 06 F6 | 	mov	local02, #1
01c20                 | LR__0033
01c20     08 00 00 FF 
01c24     EC FB 05 F1 | 	add	objptr, ##4588
01c28     FD 6C 02 FB | 	rdlong	local01, objptr
01c2c     08 00 00 FF 
01c30     EC FB 85 F1 | 	sub	objptr, ##4588
01c34     37 5F 02 F6 | 	mov	arg01, local02
01c38     00 5A B0 FD | 	call	#__system__Chr_S
01c3c     0C 61 02 F6 | 	mov	arg02, result1
01c40     36 5F 02 F6 | 	mov	arg01, local01
01c44     64 51 B0 FD | 	call	#__system___string_concat
01c48     0C 6D 02 F6 | 	mov	local01, result1
01c4c     08 00 00 FF 
01c50     EC FB 05 F1 | 	add	objptr, ##4588
01c54     FD 6C 62 FC | 	wrlong	local01, objptr
01c58     08 00 00 FF 
01c5c     EC FB 85 F1 | 	sub	objptr, ##4588
01c60     01 6E 06 F1 | 	add	local02, #1
01c64     20 6E 1E F2 | 	cmp	local02, #32 wcz
01c68     B4 FF 9F CD |  if_b	jmp	#LR__0033
01c6c     02 5F 02 F6 | 	mov	arg01, ptr__dat__
01c70     10 EC BF FD | 	call	#_addr
01c74     08 00 00 FF 
01c78     F0 FB 05 F1 | 	add	objptr, ##4592
01c7c     FD 18 62 FC | 	wrlong	result1, objptr
01c80     0C 5F 02 F6 | 	mov	arg01, result1
01c84     00 60 06 F6 | 	mov	arg02, #0
01c88     01 00 00 FF 
01c8c     B0 FB 85 F1 | 	sub	objptr, ##944
01c90     5C 2A B0 FD | 	call	#_trackerplayer_spin2_initModule
01c94     01 60 06 F6 | 	mov	arg02, #1
01c98                 | ' 
01c98                 | ' ''---------- Set the (x,y) position of cursor
01c98                 | ' 
01c98                 | ' cursor_x:=x
01c98     07 00 00 FF 
01c9c     0C FA 85 F1 | 	sub	objptr, ##3596
01ca0     FD 02 48 FC | 	wrbyte	#1, objptr
01ca4                 | ' cursor_y:=y
01ca4     01 FA 05 F1 | 	add	objptr, #1
01ca8     FD 02 48 FC | 	wrbyte	#1, objptr
01cac                 | ' 
01cac                 | ' 
01cac                 | ' ma=addr(module)
01cac                 | ' tracker.initmodule(ma,0)
01cac                 | ' 
01cac                 | ' position 1,1 :for i=ma to ma+19 : print chr$(peek(i)); : next i
01cac     08 00 00 FF 
01cb0     BB FB 05 F1 | 	add	objptr, ##4539
01cb4     FD 6E 02 FB | 	rdlong	local02, objptr
01cb8     37 83 02 F6 | 	mov	local12, local02
01cbc     08 00 00 FF 
01cc0     F0 FB 85 F1 | 	sub	objptr, ##4592
01cc4     14 82 06 F1 | 	add	local12, #20
01cc8                 | LR__0034
01cc8     41 6F 5A F2 | 	cmps	local02, local12 wcz
01ccc     40 00 90 3D |  if_ae	jmp	#LR__0035
01cd0     00 5E 06 F6 | 	mov	arg01, #0
01cd4     F8 67 B0 FD | 	call	#__system___getiolock_0150
01cd8     0C 5F 02 F6 | 	mov	arg01, result1
01cdc     90 50 B0 FD | 	call	#__system___lockmem
01ce0                 | ' asm
01ce0     37 19 C2 FA | 	rdbyte	result1, local02
01ce4                 | ' return r
01ce4     0C 61 02 F6 | 	mov	arg02, result1
01ce8     07 60 46 F7 | 	zerox	arg02, #7
01cec     00 5E 06 F6 | 	mov	arg01, #0
01cf0     00 62 06 F6 | 	mov	arg03, #0
01cf4     E8 53 B0 FD | 	call	#__system___basic_print_char
01cf8     00 5E 06 F6 | 	mov	arg01, #0
01cfc     D0 67 B0 FD | 	call	#__system___getiolock_0150
01d00     0C 01 68 FC | 	wrlong	#0, result1
01d04     00 18 06 F6 | 	mov	result1, #0
01d08     01 6E 06 F1 | 	add	local02, #1
01d0c     B8 FF 9F FD | 	jmp	#LR__0034
01d10                 | LR__0035
01d10     08 00 00 FF 
01d14     F4 FB 05 F1 | 	add	objptr, ##4596
01d18     FD 1E 68 FC | 	wrlong	#15, objptr
01d1c                 | ' samples=15: if peek(ma+1080)=asc("M") and peek(ma+1082)=asc("K") then samples=31
01d1c     00 6C 06 F6 | 	mov	local01, #0
01d20     04 FA 85 F1 | 	sub	objptr, #4
01d24     FD 5E 02 FB | 	rdlong	arg01, objptr
01d28     02 00 00 FF 
01d2c     38 5E 06 F1 | 	add	arg01, ##1080
01d30                 | ' asm
01d30     2F 71 C2 FA | 	rdbyte	local03, arg01
01d34                 | ' return r
01d34     07 70 46 F7 | 	zerox	local03, #7
01d38     4D 70 0E F2 | 	cmp	local03, #77 wz
01d3c     01 6C 66 A6 |  if_e	neg	local01, #1
01d40     00 7A 06 F6 | 	mov	local08, #0
01d44     FD 5E 02 FB | 	rdlong	arg01, objptr
01d48     08 00 00 FF 
01d4c     F0 FB 85 F1 | 	sub	objptr, ##4592
01d50     02 00 00 FF 
01d54     3A 5E 06 F1 | 	add	arg01, ##1082
01d58                 | ' asm
01d58     2F 19 C2 FA | 	rdbyte	result1, arg01
01d5c                 | ' return r
01d5c     0C 79 02 F6 | 	mov	local07, result1
01d60     07 78 46 F7 | 	zerox	local07, #7
01d64     4B 78 0E F2 | 	cmp	local07, #75 wz
01d68     01 7A 66 A6 |  if_e	neg	local08, #1
01d6c     3D 6D CA F7 | 	test	local01, local08 wz
01d70     08 00 00 5F 
01d74     F4 FB 05 51 |  if_ne	add	objptr, ##4596
01d78     FD 3E 68 5C |  if_ne	wrlong	#31, objptr
01d7c     08 00 00 5F 
01d80     F4 FB 85 51 |  if_ne	sub	objptr, ##4596
01d84     02 60 06 F6 | 	mov	arg02, #2
01d88                 | ' 
01d88                 | ' ''---------- Set the (x,y) position of cursor
01d88                 | ' 
01d88                 | ' cursor_x:=x
01d88     34 FA 05 F1 | 	add	objptr, #52
01d8c     FD 02 48 FC | 	wrbyte	#1, objptr
01d90                 | ' cursor_y:=y
01d90     01 FA 05 F1 | 	add	objptr, #1
01d94     FD 04 48 FC | 	wrbyte	#2, objptr
01d98     35 FA 85 F1 | 	sub	objptr, #53
01d9c                 | ' position 1,2 : print samples;" ";"samples module"
01d9c     00 5E 06 F6 | 	mov	arg01, #0
01da0     2C 67 B0 FD | 	call	#__system___getiolock_0150
01da4     0C 5F 02 F6 | 	mov	arg01, result1
01da8     C4 4F B0 FD | 	call	#__system___lockmem
01dac     00 18 06 F6 | 	mov	result1, #0
01db0     08 00 00 FF 
01db4     F4 FB 05 F1 | 	add	objptr, ##4596
01db8     FD 60 02 FB | 	rdlong	arg02, objptr
01dbc     08 00 00 FF 
01dc0     F4 FB 85 F1 | 	sub	objptr, ##4596
01dc4     00 5E 06 F6 | 	mov	arg01, #0
01dc8     00 62 06 F6 | 	mov	arg03, #0
01dcc     0A 64 06 F6 | 	mov	arg04, #10
01dd0     A0 53 B0 FD | 	call	#__system___basic_print_integer
01dd4     48 00 00 FF 
01dd8     D4 60 06 F6 | 	mov	arg02, ##@LR__0509
01ddc     00 5E 06 F6 | 	mov	arg01, #0
01de0     00 62 06 F6 | 	mov	arg03, #0
01de4     44 53 B0 FD | 	call	#__system___basic_print_string
01de8     48 00 00 FF 
01dec     D6 60 06 F6 | 	mov	arg02, ##@LR__0510
01df0     00 5E 06 F6 | 	mov	arg01, #0
01df4     00 62 06 F6 | 	mov	arg03, #0
01df8     30 53 B0 FD | 	call	#__system___basic_print_string
01dfc     00 5E 06 F6 | 	mov	arg01, #0
01e00     0A 60 06 F6 | 	mov	arg02, #10
01e04     00 62 06 F6 | 	mov	arg03, #0
01e08     D4 52 B0 FD | 	call	#__system___basic_print_char
01e0c     01 18 06 F6 | 	mov	result1, #1
01e10     00 5E 06 F6 | 	mov	arg01, #0
01e14     B8 66 B0 FD | 	call	#__system___getiolock_0150
01e18     0C 01 68 FC | 	wrlong	#0, result1
01e1c     00 18 06 F6 | 	mov	result1, #0
01e20     08 00 00 FF 
01e24     F0 FB 05 F1 | 	add	objptr, ##4592
01e28     FD 5E 02 FB | 	rdlong	arg01, objptr
01e2c     04 FA 05 F1 | 	add	objptr, #4
01e30     FD 60 02 FB | 	rdlong	arg02, objptr
01e34     08 00 00 FF 
01e38     F4 FB 85 F1 | 	sub	objptr, ##4596
01e3c     E0 EC BF FD | 	call	#_getinfo
01e40     08 00 00 FF 
01e44     3C FA 05 F1 | 	add	objptr, ##4156
01e48     D8 4A B0 FD | 	call	#_audio019_spin2_start
01e4c     0D 71 02 F6 | 	mov	local03, result2
01e50     A4 FB 05 F1 | 	add	objptr, #420
01e54     FD 18 62 FC | 	wrlong	result1, objptr
01e58     04 FA 05 F1 | 	add	objptr, #4
01e5c     FD 70 62 FC | 	wrlong	local03, objptr
01e60     14 FA 05 F1 | 	add	objptr, #20
01e64     FD 00 68 FC | 	wrlong	#0, objptr
01e68     04 FA 05 F1 | 	add	objptr, #4
01e6c     FD 00 68 FC | 	wrlong	#0, objptr
01e70     04 FA 05 F1 | 	add	objptr, #4
01e74     FD 00 68 FC | 	wrlong	#0, objptr
01e78     04 FA 05 F1 | 	add	objptr, #4
01e7c     FD 00 68 FC | 	wrlong	#0, objptr
01e80     09 00 00 FF 
01e84     04 FA 85 F1 | 	sub	objptr, ##4612
01e88                 | ' getinfo(ma,samples)
01e88                 | ' 
01e88                 | ' cog,base=paula.start()
01e88                 | ' 
01e88                 | ' old1=0 : old2=0 :old3=0 : old4=0
01e88                 | ' 
01e88                 | ' 
01e88                 | ' 
01e88                 | ' 'position 0,26 : v030.writeln(ss$)
01e88                 | ' 'print"123456789012345678901234567890"
01e88                 | ' do
01e88                 | LR__0036
01e88     01 5E 06 F6 | 	mov	arg01, #1
01e8c     78 0D B0 FD | 	call	#_hng030rm_spin2_waitvbl
01e90     07 00 00 FF 
01e94     40 FA 05 F1 | 	add	objptr, ##3648
01e98     34 2F B0 FD | 	call	#_trackerplayer_spin2_tick
01e9c     07 00 00 FF 
01ea0     40 FA 85 F1 | 	sub	objptr, ##3648
01ea4     1B 18 62 FD | 	getrnd	result1
01ea8     0C 99 02 F6 | 	mov	muldiva_, result1
01eac     01 00 00 FF 
01eb0     1C 9A 06 F6 | 	mov	muldivb_, ##540
01eb4     C2 00 A0 FD | 	call	#unsdivide_
01eb8     09 00 00 FF 
01ebc     08 FA 05 F1 | 	add	objptr, ##4616
01ec0     FD 98 62 FC | 	wrlong	muldiva_, objptr
01ec4                 | '     
01ec4                 | ' '    dlentry=lpeek(dltest) : for i=0 to 539:   rr=(2*i) mod 540+(2*i)/ 540 : lpoke dltest+4*i, dlcopy(rr) :next i 
01ec4                 | '      
01ec4                 | '     if tracker.trigger(0)<>old1 then 
01ec4     D2 FB 85 F1 | 	sub	objptr, #466
01ec8     FD 6C C2 FA | 	rdbyte	local01, objptr
01ecc     C2 FB 05 F1 | 	add	objptr, #450
01ed0     FD 76 02 FB | 	rdlong	local06, objptr
01ed4     08 00 00 FF 
01ed8     F8 FB 85 F1 | 	sub	objptr, ##4600
01edc     3B 6D 0A F2 | 	cmp	local01, local06 wz
01ee0     8C 00 90 AD |  if_e	jmp	#LR__0037
01ee4     08 00 00 FF 
01ee8     36 FA 05 F1 | 	add	objptr, ##4150
01eec     FD 6C C2 FA | 	rdbyte	local01, objptr
01ef0     C2 FB 05 F1 | 	add	objptr, #450
01ef4     FD 6C 62 FC | 	wrlong	local01, objptr
01ef8     14 FA 85 F1 | 	sub	objptr, #20
01efc     FD 5E 02 FB | 	rdlong	arg01, objptr
01f00     08 5E 06 F1 | 	add	arg01, #8
01f04     01 00 00 FF 
01f08     FD FA 85 F1 | 	sub	objptr, ##765
01f0c     FD 60 02 FB | 	rdlong	arg02, objptr
01f10     1E 60 26 F4 | 	bith	arg02, #30
01f14                 | ' asm
01f14     2F 61 62 FC | 	wrlong	arg02, arg01
01f18     01 00 00 FF 
01f1c     FD FA 05 F1 | 	add	objptr, ##765
01f20     FD 5E 02 FB | 	rdlong	arg01, objptr
01f24     0C 5E 06 F1 | 	add	arg01, #12
01f28     01 00 00 FF 
01f2c     E9 FA 85 F1 | 	sub	objptr, ##745
01f30     FD 60 E2 FA | 	rdword	arg02, objptr
01f34     08 FA 05 F1 | 	add	objptr, #8
01f38     FD 78 02 FB | 	rdlong	local07, objptr
01f3c     3C 61 82 F1 | 	sub	arg02, local07
01f40                 | ' asm
01f40     2F 61 62 FC | 	wrlong	arg02, arg01
01f44     01 00 00 FF 
01f48     E1 FA 05 F1 | 	add	objptr, ##737
01f4c     FD 5E 02 FB | 	rdlong	arg01, objptr
01f50     10 5E 06 F1 | 	add	arg01, #16
01f54     01 00 00 FF 
01f58     E9 FA 85 F1 | 	sub	objptr, ##745
01f5c     FD 60 E2 FA | 	rdword	arg02, objptr
01f60     07 00 00 FF 
01f64     FB FA 85 F1 | 	sub	objptr, ##3835
01f68     0F 60 46 F7 | 	zerox	arg02, #15
01f6c                 | ' asm
01f6c     2F 61 62 FC | 	wrlong	arg02, arg01
01f70                 | LR__0037
01f70     08 00 00 FF 
01f74     E4 FB 05 F1 | 	add	objptr, ##4580
01f78     FD 5E 02 FB | 	rdlong	arg01, objptr
01f7c     14 5E 06 F1 | 	add	arg01, #20
01f80     01 00 00 FF 
01f84     A5 FA 85 F1 | 	sub	objptr, ##677
01f88     FD 76 02 FB | 	rdlong	local06, objptr
01f8c     10 FA 05 F1 | 	add	objptr, #16
01f90     FD 78 02 FB | 	rdlong	local07, objptr
01f94     3C 77 02 F1 | 	add	local06, local07
01f98     27 FB 85 F1 | 	sub	objptr, #295
01f9c     FD 7C 02 FB | 	rdlong	local09, objptr
01fa0     3E 77 02 FD | 	qmul	local06, local09
01fa4     18 60 62 FD | 	getqx	arg02
01fa8                 | ' asm
01fa8     2F 61 52 FC | 	wrword	arg02, arg01
01fac     01 00 00 FF 
01fb0     BC FB 05 F1 | 	add	objptr, ##956
01fb4     FD 5E 02 FB | 	rdlong	arg01, objptr
01fb8     16 5E 06 F1 | 	add	arg01, #22
01fbc                 | ' asm
01fbc     0C 00 80 FF 
01fc0     2F 01 58 FC | 	wrword	##6144, arg01
01fc4     FD 5E 02 FB | 	rdlong	arg01, objptr
01fc8     18 5E 06 F1 | 	add	arg01, #24
01fcc     01 00 00 FF 
01fd0     C5 FA 85 F1 | 	sub	objptr, ##709
01fd4     FD 60 02 FB | 	rdlong	arg02, objptr
01fd8     10 FA 05 F1 | 	add	objptr, #16
01fdc     FD 78 02 FB | 	rdlong	local07, objptr
01fe0     3C 61 02 F1 | 	add	arg02, local07
01fe4                 | ' asm
01fe4     2F 61 52 FC | 	wrword	arg02, arg01
01fe8     01 00 00 FF 
01fec     B5 FA 05 F1 | 	add	objptr, ##693
01ff0     FD 5E 02 FB | 	rdlong	arg01, objptr
01ff4     1A 5E 06 F1 | 	add	arg01, #26
01ff8                 | ' asm
01ff8     2F 03 58 FC | 	wrword	#1, arg01
01ffc                 | '   
01ffc                 | '   
01ffc                 | '     dpoke base+20, (tracker.currVolume(0)+tracker.deltavolume(0))*mainvolume
01ffc                 | '     dpoke base+22, 8192-2048
01ffc                 | '     dpoke base+24, tracker.currPeriod(0)+tracker.deltaperiod(0)
01ffc                 | '     dpoke base+26, 1
01ffc                 | ' 
01ffc                 | '  
01ffc                 | '     if tracker.trigger(1) <> old2  then
01ffc     AD FB 85 F1 | 	sub	objptr, #429
02000     FD 6C C2 FA | 	rdbyte	local01, objptr
02004     C5 FB 05 F1 | 	add	objptr, #453
02008     FD 76 02 FB | 	rdlong	local06, objptr
0200c     08 00 00 FF 
02010     FC FB 85 F1 | 	sub	objptr, ##4604
02014     3B 6D 0A F2 | 	cmp	local01, local06 wz
02018     9C 00 90 AD |  if_e	jmp	#LR__0038
0201c     08 00 00 FF 
02020     37 FA 05 F1 | 	add	objptr, ##4151
02024     FD 6C C2 FA | 	rdbyte	local01, objptr
02028     C5 FB 05 F1 | 	add	objptr, #453
0202c     FD 6C 62 FC | 	wrlong	local01, objptr
02030     18 FA 85 F1 | 	sub	objptr, #24
02034     FD 5E 02 FB | 	rdlong	arg01, objptr
02038     28 5E 06 F1 | 	add	arg01, #40
0203c     01 00 00 FF 
02040     F9 FA 85 F1 | 	sub	objptr, ##761
02044     FD 60 02 FB | 	rdlong	arg02, objptr
02048     1E 60 26 F4 | 	bith	arg02, #30
0204c                 | ' asm
0204c     2F 61 62 FC | 	wrlong	arg02, arg01
02050     20 5E 06 F6 | 	mov	arg01, #32
02054     01 00 00 FF 
02058     F9 FA 05 F1 | 	add	objptr, ##761
0205c     FD 76 02 FB | 	rdlong	local06, objptr
02060     3B 5F 02 F1 | 	add	arg01, local06
02064     0C 5E 06 F1 | 	add	arg01, #12
02068     01 00 00 FF 
0206c     E7 FA 85 F1 | 	sub	objptr, ##743
02070     FD 60 E2 FA | 	rdword	arg02, objptr
02074     0A FA 05 F1 | 	add	objptr, #10
02078     FD 78 02 FB | 	rdlong	local07, objptr
0207c     3C 61 82 F1 | 	sub	arg02, local07
02080                 | ' asm
02080     2F 61 62 FC | 	wrlong	arg02, arg01
02084     20 5E 06 F6 | 	mov	arg01, #32
02088     01 00 00 FF 
0208c     DD FA 05 F1 | 	add	objptr, ##733
02090     FD 76 02 FB | 	rdlong	local06, objptr
02094     3B 5F 02 F1 | 	add	arg01, local06
02098     10 5E 06 F1 | 	add	arg01, #16
0209c     01 00 00 FF 
020a0     E7 FA 85 F1 | 	sub	objptr, ##743
020a4     FD 60 E2 FA | 	rdword	arg02, objptr
020a8     07 00 00 FF 
020ac     FD FA 85 F1 | 	sub	objptr, ##3837
020b0     0F 60 46 F7 | 	zerox	arg02, #15
020b4                 | ' asm
020b4     2F 61 62 FC | 	wrlong	arg02, arg01
020b8                 | LR__0038
020b8     20 5E 06 F6 | 	mov	arg01, #32
020bc     08 00 00 FF 
020c0     E4 FB 05 F1 | 	add	objptr, ##4580
020c4     FD 76 02 FB | 	rdlong	local06, objptr
020c8     3B 5F 02 F1 | 	add	arg01, local06
020cc     14 5E 06 F1 | 	add	arg01, #20
020d0     01 00 00 FF 
020d4     A1 FA 85 F1 | 	sub	objptr, ##673
020d8     FD 76 02 FB | 	rdlong	local06, objptr
020dc     10 FA 05 F1 | 	add	objptr, #16
020e0     FD 78 02 FB | 	rdlong	local07, objptr
020e4     3C 77 02 F1 | 	add	local06, local07
020e8     2B FB 85 F1 | 	sub	objptr, #299
020ec     FD 7C 02 FB | 	rdlong	local09, objptr
020f0     3E 77 02 FD | 	qmul	local06, local09
020f4     18 60 62 FD | 	getqx	arg02
020f8                 | ' asm
020f8     2F 61 52 FC | 	wrword	arg02, arg01
020fc     20 5E 06 F6 | 	mov	arg01, #32
02100     01 00 00 FF 
02104     BC FB 05 F1 | 	add	objptr, ##956
02108     FD 76 02 FB | 	rdlong	local06, objptr
0210c     3B 5F 02 F1 | 	add	arg01, local06
02110     16 5E 06 F1 | 	add	arg01, #22
02114                 | ' asm
02114     14 00 80 FF 
02118     2F 01 58 FC | 	wrword	##10240, arg01
0211c     20 5E 06 F6 | 	mov	arg01, #32
02120     FD 76 02 FB | 	rdlong	local06, objptr
02124     3B 5F 02 F1 | 	add	arg01, local06
02128     18 5E 06 F1 | 	add	arg01, #24
0212c     01 00 00 FF 
02130     C1 FA 85 F1 | 	sub	objptr, ##705
02134     FD 60 02 FB | 	rdlong	arg02, objptr
02138     10 FA 05 F1 | 	add	objptr, #16
0213c     FD 78 02 FB | 	rdlong	local07, objptr
02140     3C 61 02 F1 | 	add	arg02, local07
02144                 | ' asm
02144     2F 61 52 FC | 	wrword	arg02, arg01
02148     20 5E 06 F6 | 	mov	arg01, #32
0214c     01 00 00 FF 
02150     B1 FA 05 F1 | 	add	objptr, ##689
02154     FD 76 02 FB | 	rdlong	local06, objptr
02158     3B 5F 02 F1 | 	add	arg01, local06
0215c     1A 5E 06 F1 | 	add	arg01, #26
02160                 | ' asm
02160     2F 03 58 FC | 	wrword	#1, arg01
02164                 | '       
02164                 | '     dpoke 32+base+20, (tracker.currVolume(1)+tracker.deltavolume(1))*mainvolume
02164                 | '     dpoke 32+base+22, 8192+2048
02164                 | '     dpoke 32+base+24, tracker.currPeriod(1)+tracker.deltaperiod(1)
02164                 | '     dpoke 32+base+26, 1
02164                 | ' 
02164                 | '    if tracker.trigger(2) <> old3  then
02164     AC FB 85 F1 | 	sub	objptr, #428
02168     FD 6C C2 FA | 	rdbyte	local01, objptr
0216c     C8 FB 05 F1 | 	add	objptr, #456
02170     FD 76 02 FB | 	rdlong	local06, objptr
02174     09 00 00 FF 
02178     00 FA 85 F1 | 	sub	objptr, ##4608
0217c     3B 6D 0A F2 | 	cmp	local01, local06 wz
02180     9C 00 90 AD |  if_e	jmp	#LR__0039
02184     08 00 00 FF 
02188     38 FA 05 F1 | 	add	objptr, ##4152
0218c     FD 6C C2 FA | 	rdbyte	local01, objptr
02190     C8 FB 05 F1 | 	add	objptr, #456
02194     FD 6C 62 FC | 	wrlong	local01, objptr
02198     1C FA 85 F1 | 	sub	objptr, #28
0219c     FD 5E 02 FB | 	rdlong	arg01, objptr
021a0     48 5E 06 F1 | 	add	arg01, #72
021a4     01 00 00 FF 
021a8     F5 FA 85 F1 | 	sub	objptr, ##757
021ac     FD 60 02 FB | 	rdlong	arg02, objptr
021b0     1E 60 26 F4 | 	bith	arg02, #30
021b4                 | ' asm
021b4     2F 61 62 FC | 	wrlong	arg02, arg01
021b8     40 5E 06 F6 | 	mov	arg01, #64
021bc     01 00 00 FF 
021c0     F5 FA 05 F1 | 	add	objptr, ##757
021c4     FD 76 02 FB | 	rdlong	local06, objptr
021c8     3B 5F 02 F1 | 	add	arg01, local06
021cc     0C 5E 06 F1 | 	add	arg01, #12
021d0     01 00 00 FF 
021d4     E5 FA 85 F1 | 	sub	objptr, ##741
021d8     FD 60 E2 FA | 	rdword	arg02, objptr
021dc     0C FA 05 F1 | 	add	objptr, #12
021e0     FD 78 02 FB | 	rdlong	local07, objptr
021e4     3C 61 82 F1 | 	sub	arg02, local07
021e8                 | ' asm
021e8     2F 61 62 FC | 	wrlong	arg02, arg01
021ec     40 5E 06 F6 | 	mov	arg01, #64
021f0     01 00 00 FF 
021f4     D9 FA 05 F1 | 	add	objptr, ##729
021f8     FD 76 02 FB | 	rdlong	local06, objptr
021fc     3B 5F 02 F1 | 	add	arg01, local06
02200     10 5E 06 F1 | 	add	arg01, #16
02204     01 00 00 FF 
02208     E5 FA 85 F1 | 	sub	objptr, ##741
0220c     FD 60 E2 FA | 	rdword	arg02, objptr
02210     07 00 00 FF 
02214     FF FA 85 F1 | 	sub	objptr, ##3839
02218     0F 60 46 F7 | 	zerox	arg02, #15
0221c                 | ' asm
0221c     2F 61 62 FC | 	wrlong	arg02, arg01
02220                 | LR__0039
02220     40 5E 06 F6 | 	mov	arg01, #64
02224     08 00 00 FF 
02228     E4 FB 05 F1 | 	add	objptr, ##4580
0222c     FD 76 02 FB | 	rdlong	local06, objptr
02230     3B 5F 02 F1 | 	add	arg01, local06
02234     14 5E 06 F1 | 	add	arg01, #20
02238     01 00 00 FF 
0223c     9D FA 85 F1 | 	sub	objptr, ##669
02240     FD 76 02 FB | 	rdlong	local06, objptr
02244     10 FA 05 F1 | 	add	objptr, #16
02248     FD 78 02 FB | 	rdlong	local07, objptr
0224c     3C 77 02 F1 | 	add	local06, local07
02250     2F FB 85 F1 | 	sub	objptr, #303
02254     FD 7C 02 FB | 	rdlong	local09, objptr
02258     3E 77 02 FD | 	qmul	local06, local09
0225c     18 60 62 FD | 	getqx	arg02
02260                 | ' asm
02260     2F 61 52 FC | 	wrword	arg02, arg01
02264     40 5E 06 F6 | 	mov	arg01, #64
02268     01 00 00 FF 
0226c     BC FB 05 F1 | 	add	objptr, ##956
02270     FD 76 02 FB | 	rdlong	local06, objptr
02274     3B 5F 02 F1 | 	add	arg01, local06
02278     16 5E 06 F1 | 	add	arg01, #22
0227c                 | ' asm
0227c     14 00 80 FF 
02280     2F 01 58 FC | 	wrword	##10240, arg01
02284     40 5E 06 F6 | 	mov	arg01, #64
02288     FD 76 02 FB | 	rdlong	local06, objptr
0228c     3B 5F 02 F1 | 	add	arg01, local06
02290     18 5E 06 F1 | 	add	arg01, #24
02294     01 00 00 FF 
02298     BD FA 85 F1 | 	sub	objptr, ##701
0229c     FD 60 02 FB | 	rdlong	arg02, objptr
022a0     10 FA 05 F1 | 	add	objptr, #16
022a4     FD 78 02 FB | 	rdlong	local07, objptr
022a8     3C 61 02 F1 | 	add	arg02, local07
022ac                 | ' asm
022ac     2F 61 52 FC | 	wrword	arg02, arg01
022b0     40 5E 06 F6 | 	mov	arg01, #64
022b4     01 00 00 FF 
022b8     AD FA 05 F1 | 	add	objptr, ##685
022bc     FD 76 02 FB | 	rdlong	local06, objptr
022c0     3B 5F 02 F1 | 	add	arg01, local06
022c4     1A 5E 06 F1 | 	add	arg01, #26
022c8                 | ' asm
022c8     2F 03 58 FC | 	wrword	#1, arg01
022cc                 | '     
022cc                 | '     dpoke 64+base+20, (tracker.currVolume(2)+tracker.deltavolume(2))*mainvolume
022cc                 | '     dpoke 64+base+22, 8192+2048
022cc                 | '     dpoke 64+base+24, tracker.currPeriod(2)+tracker.deltaperiod(2)
022cc                 | '     dpoke 64+base+26, 1
022cc                 | ' 
022cc                 | '     if tracker.trigger(3) <> old4 then
022cc     AB FB 85 F1 | 	sub	objptr, #427
022d0     FD 6C C2 FA | 	rdbyte	local01, objptr
022d4     CB FB 05 F1 | 	add	objptr, #459
022d8     FD 76 02 FB | 	rdlong	local06, objptr
022dc     09 00 00 FF 
022e0     04 FA 85 F1 | 	sub	objptr, ##4612
022e4     3B 6D 0A F2 | 	cmp	local01, local06 wz
022e8     9C 00 90 AD |  if_e	jmp	#LR__0040
022ec     08 00 00 FF 
022f0     39 FA 05 F1 | 	add	objptr, ##4153
022f4     FD 6C C2 FA | 	rdbyte	local01, objptr
022f8     CB FB 05 F1 | 	add	objptr, #459
022fc     FD 6C 62 FC | 	wrlong	local01, objptr
02300     20 FA 85 F1 | 	sub	objptr, #32
02304     FD 5E 02 FB | 	rdlong	arg01, objptr
02308     68 5E 06 F1 | 	add	arg01, #104
0230c     01 00 00 FF 
02310     F1 FA 85 F1 | 	sub	objptr, ##753
02314     FD 60 02 FB | 	rdlong	arg02, objptr
02318     1E 60 26 F4 | 	bith	arg02, #30
0231c                 | ' asm
0231c     2F 61 62 FC | 	wrlong	arg02, arg01
02320     60 5E 06 F6 | 	mov	arg01, #96
02324     01 00 00 FF 
02328     F1 FA 05 F1 | 	add	objptr, ##753
0232c     FD 76 02 FB | 	rdlong	local06, objptr
02330     3B 5F 02 F1 | 	add	arg01, local06
02334     0C 5E 06 F1 | 	add	arg01, #12
02338     01 00 00 FF 
0233c     E3 FA 85 F1 | 	sub	objptr, ##739
02340     FD 60 E2 FA | 	rdword	arg02, objptr
02344     0E FA 05 F1 | 	add	objptr, #14
02348     FD 78 02 FB | 	rdlong	local07, objptr
0234c     3C 61 82 F1 | 	sub	arg02, local07
02350                 | ' asm
02350     2F 61 62 FC | 	wrlong	arg02, arg01
02354     60 5E 06 F6 | 	mov	arg01, #96
02358     01 00 00 FF 
0235c     D5 FA 05 F1 | 	add	objptr, ##725
02360     FD 76 02 FB | 	rdlong	local06, objptr
02364     3B 5F 02 F1 | 	add	arg01, local06
02368     10 5E 06 F1 | 	add	arg01, #16
0236c     01 00 00 FF 
02370     E3 FA 85 F1 | 	sub	objptr, ##739
02374     FD 60 E2 FA | 	rdword	arg02, objptr
02378     07 00 00 FF 
0237c     01 FB 85 F1 | 	sub	objptr, ##3841
02380     0F 60 46 F7 | 	zerox	arg02, #15
02384                 | ' asm
02384     2F 61 62 FC | 	wrlong	arg02, arg01
02388                 | LR__0040
02388     60 5E 06 F6 | 	mov	arg01, #96
0238c     08 00 00 FF 
02390     E4 FB 05 F1 | 	add	objptr, ##4580
02394     FD 76 02 FB | 	rdlong	local06, objptr
02398     3B 5F 02 F1 | 	add	arg01, local06
0239c     14 5E 06 F1 | 	add	arg01, #20
023a0     01 00 00 FF 
023a4     99 FA 85 F1 | 	sub	objptr, ##665
023a8     FD 76 02 FB | 	rdlong	local06, objptr
023ac     10 FA 05 F1 | 	add	objptr, #16
023b0     FD 78 02 FB | 	rdlong	local07, objptr
023b4     3C 77 02 F1 | 	add	local06, local07
023b8     33 FB 85 F1 | 	sub	objptr, #307
023bc     FD 7C 02 FB | 	rdlong	local09, objptr
023c0     3E 77 02 FD | 	qmul	local06, local09
023c4     18 60 62 FD | 	getqx	arg02
023c8                 | ' asm
023c8     2F 61 52 FC | 	wrword	arg02, arg01
023cc     60 5E 06 F6 | 	mov	arg01, #96
023d0     01 00 00 FF 
023d4     BC FB 05 F1 | 	add	objptr, ##956
023d8     FD 76 02 FB | 	rdlong	local06, objptr
023dc     3B 5F 02 F1 | 	add	arg01, local06
023e0     16 5E 06 F1 | 	add	arg01, #22
023e4                 | ' asm
023e4     0C 00 80 FF 
023e8     2F 01 58 FC | 	wrword	##6144, arg01
023ec     60 5E 06 F6 | 	mov	arg01, #96
023f0     FD 76 02 FB | 	rdlong	local06, objptr
023f4     3B 5F 02 F1 | 	add	arg01, local06
023f8     18 5E 06 F1 | 	add	arg01, #24
023fc     01 00 00 FF 
02400     B9 FA 85 F1 | 	sub	objptr, ##697
02404     FD 60 02 FB | 	rdlong	arg02, objptr
02408     10 FA 05 F1 | 	add	objptr, #16
0240c     FD 78 02 FB | 	rdlong	local07, objptr
02410     3C 61 02 F1 | 	add	arg02, local07
02414                 | ' asm
02414     2F 61 52 FC | 	wrword	arg02, arg01
02418     60 5E 06 F6 | 	mov	arg01, #96
0241c     01 00 00 FF 
02420     A9 FA 05 F1 | 	add	objptr, ##681
02424     FD 76 02 FB | 	rdlong	local06, objptr
02428     08 00 00 FF 
0242c     E4 FB 85 F1 | 	sub	objptr, ##4580
02430     3B 5F 02 F1 | 	add	arg01, local06
02434     1A 5E 06 F1 | 	add	arg01, #26
02438     01 60 06 F6 | 	mov	arg02, #1
0243c                 | ' asm
0243c     2F 03 58 FC | 	wrword	#1, arg01
02440     68 E4 BF FD | 	call	#_test
02444     40 FA 9F FD | 	jmp	#LR__0036
02448     AF F0 03 F6 | 	mov	ptra, fp
0244c     BA 00 A0 FD | 	call	#popregs_
02450                 | _program_ret
02450     2D 00 64 FD | 	ret
02454                 | 
02454                 | ' 
02454                 | ' '------------------------------
02454                 | ' 
02454                 | ' pub fcircle(x0,y0,r,c) | d,x,y,da,db
02454                 | _hng030rm_spin2_fcircle
02454     0A 5A 05 F6 | 	mov	COUNT_, #10
02458     B0 00 A0 FD | 	call	#pushregs_
0245c     2F 6D 02 F6 | 	mov	local01, arg01
02460     30 6F 02 F6 | 	mov	local02, arg02
02464     31 71 02 F6 | 	mov	local03, arg03
02468     32 73 02 F6 | 	mov	local04, arg04
0246c                 | ' 
0246c                 | ' d:=5-4*r
0246c     38 75 02 F6 | 	mov	local05, local03
02470     02 74 66 F0 | 	shl	local05, #2
02474     05 76 06 F6 | 	mov	local06, #5
02478     3A 77 82 F1 | 	sub	local06, local05
0247c                 | ' x:=0
0247c     00 78 06 F6 | 	mov	local07, #0
02480                 | ' y:=r
02480     38 7B 02 F6 | 	mov	local08, local03
02484                 | ' da:=(-2*r+5)*4
02484     FF FF 7F FF 
02488     FE 71 06 FD | 	qmul	local03, ##-2
0248c     18 7C 62 FD | 	getqx	local09
02490     05 7C 06 F1 | 	add	local09, #5
02494     02 7C 66 F0 | 	shl	local09, #2
02498                 | ' db:=3*4
02498     0C 7E 06 F6 | 	mov	local10, #12
0249c                 | ' repeat while (x<=y) 
0249c                 | LR__0041
0249c     3D 79 5A F2 | 	cmps	local07, local08 wcz
024a0     D4 00 90 1D |  if_a	jmp	#LR__0043
024a4                 | '   line(x0-x,y0-y,x0+x,y0-y,c)
024a4     36 5F 02 F6 | 	mov	arg01, local01
024a8     3C 5F 82 F1 | 	sub	arg01, local07
024ac     37 61 02 F6 | 	mov	arg02, local02
024b0     3D 61 82 F1 | 	sub	arg02, local08
024b4     36 63 02 F6 | 	mov	arg03, local01
024b8     3C 63 02 F1 | 	add	arg03, local07
024bc     37 65 02 F6 | 	mov	arg04, local02
024c0     3D 65 82 F1 | 	sub	arg04, local08
024c4     39 67 02 F6 | 	mov	arg05, local04
024c8     B8 00 B0 FD | 	call	#_hng030rm_spin2_line
024cc                 | '   line(x0-x,y0+y,x0+x,y0+y,c)
024cc     36 5F 02 F6 | 	mov	arg01, local01
024d0     3C 5F 82 F1 | 	sub	arg01, local07
024d4     37 61 02 F6 | 	mov	arg02, local02
024d8     3D 61 02 F1 | 	add	arg02, local08
024dc     36 63 02 F6 | 	mov	arg03, local01
024e0     3C 63 02 F1 | 	add	arg03, local07
024e4     37 65 02 F6 | 	mov	arg04, local02
024e8     3D 65 02 F1 | 	add	arg04, local08
024ec     39 67 02 F6 | 	mov	arg05, local04
024f0     90 00 B0 FD | 	call	#_hng030rm_spin2_line
024f4                 | '   line(x0-y,y0-x,x0+y,y0-x,c)
024f4     36 5F 02 F6 | 	mov	arg01, local01
024f8     3D 5F 82 F1 | 	sub	arg01, local08
024fc     37 61 02 F6 | 	mov	arg02, local02
02500     3C 61 82 F1 | 	sub	arg02, local07
02504     36 63 02 F6 | 	mov	arg03, local01
02508     3D 63 02 F1 | 	add	arg03, local08
0250c     37 65 02 F6 | 	mov	arg04, local02
02510     3C 65 82 F1 | 	sub	arg04, local07
02514     39 67 02 F6 | 	mov	arg05, local04
02518     68 00 B0 FD | 	call	#_hng030rm_spin2_line
0251c                 | '   line(x0-y,y0+x,x0+y,y0+x,c)
0251c     36 5F 02 F6 | 	mov	arg01, local01
02520     3D 5F 82 F1 | 	sub	arg01, local08
02524     37 61 02 F6 | 	mov	arg02, local02
02528     3C 61 02 F1 | 	add	arg02, local07
0252c     36 63 02 F6 | 	mov	arg03, local01
02530     3D 63 02 F1 | 	add	arg03, local08
02534     37 65 02 F6 | 	mov	arg04, local02
02538     3C 65 02 F1 | 	add	arg04, local07
0253c     39 67 02 F6 | 	mov	arg05, local04
02540     40 00 B0 FD | 	call	#_hng030rm_spin2_line
02544                 | '   if d>0 
02544     00 76 5E F2 | 	cmps	local06, #0 wcz
02548     18 00 90 ED |  if_be	jmp	#LR__0042
0254c                 | '     d+=da
0254c     3E 77 02 F1 | 	add	local06, local09
02550                 | '     y-=1
02550     01 7A 86 F1 | 	sub	local08, #1
02554                 | '     x+=1
02554     01 78 06 F1 | 	add	local07, #1
02558                 | '     da+=4*4
02558     10 7C 06 F1 | 	add	local09, #16
0255c                 | '     db+=2*4
0255c     08 7E 06 F1 | 	add	local10, #8
02560                 | '   else
02560     38 FF 9F FD | 	jmp	#LR__0041
02564                 | LR__0042
02564                 | '     d+=db
02564     3F 77 02 F1 | 	add	local06, local10
02568                 | '     x+=1
02568     01 78 06 F1 | 	add	local07, #1
0256c                 | '     da+=2*4
0256c     08 7C 06 F1 | 	add	local09, #8
02570                 | '     db+=2*4
02570     08 7E 06 F1 | 	add	local10, #8
02574     24 FF 9F FD | 	jmp	#LR__0041
02578                 | LR__0043
02578     AF F0 03 F6 | 	mov	ptra, fp
0257c     BA 00 A0 FD | 	call	#popregs_
02580                 | _hng030rm_spin2_fcircle_ret
02580     2D 00 64 FD | 	ret
02584                 | 
02584                 | ' 
02584                 | ' pub line(x1,y1,x2,y2,c) | d,dx,dy,ai,bi,xi,yi,x,y
02584                 | _hng030rm_spin2_line
02584     12 5A 05 F6 | 	mov	COUNT_, #18
02588     B0 00 A0 FD | 	call	#pushregs_
0258c     2F 6D 02 F6 | 	mov	local01, arg01
02590     30 6F 02 F6 | 	mov	local02, arg02
02594     31 71 02 F6 | 	mov	local03, arg03
02598     32 73 02 F6 | 	mov	local04, arg04
0259c     33 75 02 F6 | 	mov	local05, arg05
025a0                 | ' 
025a0                 | ' 
025a0                 | ' x:=x1
025a0     36 77 02 F6 | 	mov	local06, local01
025a4                 | ' y:=y1
025a4     37 79 02 F6 | 	mov	local07, local02
025a8                 | ' 
025a8                 | ' if (x1<x2) 
025a8     38 6D 5A F2 | 	cmps	local01, local03 wcz
025ac     10 00 90 3D |  if_ae	jmp	#LR__0044
025b0                 | '   xi:=1
025b0     01 7A 06 F6 | 	mov	local08, #1
025b4                 | '   dx:=x2-x1
025b4     38 7D 02 F6 | 	mov	local09, local03
025b8     36 7D 82 F1 | 	sub	local09, local01
025bc                 | ' else
025bc     0C 00 90 FD | 	jmp	#LR__0045
025c0                 | LR__0044
025c0                 | '   xi:=-1
025c0     01 7A 66 F6 | 	neg	local08, #1
025c4                 | '   dx:=x1-x2
025c4     38 6D 82 F1 | 	sub	local01, local03
025c8     36 7D 02 F6 | 	mov	local09, local01
025cc                 | LR__0045
025cc                 | '   
025cc                 | ' if (y1<y2) 
025cc     39 6F 5A F2 | 	cmps	local02, local04 wcz
025d0     10 00 90 3D |  if_ae	jmp	#LR__0046
025d4                 | '   yi:=1
025d4     01 7E 06 F6 | 	mov	local10, #1
025d8                 | '   dy:=y2-y1
025d8     39 81 02 F6 | 	mov	local11, local04
025dc     37 81 82 F1 | 	sub	local11, local02
025e0                 | ' else
025e0     0C 00 90 FD | 	jmp	#LR__0047
025e4                 | LR__0046
025e4                 | '   yi:=-1
025e4     01 7E 66 F6 | 	neg	local10, #1
025e8                 | '   dy:=y1-y2
025e8     39 6F 82 F1 | 	sub	local02, local04
025ec     37 81 02 F6 | 	mov	local11, local02
025f0                 | LR__0047
025f0                 | ' 
025f0                 | ' putpixel(x,y,c)
025f0     D8 FA 05 F1 | 	add	objptr, #216
025f4     FD 82 02 FB | 	rdlong	local12, objptr
025f8     D8 FA 85 F1 | 	sub	objptr, #216
025fc     41 85 02 FB | 	rdlong	local13, local12
02600     04 82 06 F1 | 	add	local12, #4
02604     41 87 02 FB | 	rdlong	local14, local12
02608     3B 5F 02 F6 | 	mov	arg01, local06
0260c     3C 61 02 F6 | 	mov	arg02, local07
02610     3A 63 02 F6 | 	mov	arg03, local05
02614     FD 88 02 F6 | 	mov	local15, objptr
02618     42 FB 01 F6 | 	mov	objptr, local13
0261c     2D 86 62 FD | 	call	local14
02620     44 FB 01 F6 | 	mov	objptr, local15
02624                 | ' 
02624                 | ' if (dx>dy)
02624     40 7D 5A F2 | 	cmps	local09, local11 wcz
02628     7C 00 90 ED |  if_be	jmp	#LR__0051
0262c                 | '   ai:=(dy-dx)*2
0262c     40 8B 02 F6 | 	mov	local16, local11
02630     3E 8B 82 F1 | 	sub	local16, local09
02634     01 8A 66 F0 | 	shl	local16, #1
02638                 | '   bi:=dy*2
02638     01 80 66 F0 | 	shl	local11, #1
0263c     40 8D 02 F6 | 	mov	local17, local11
02640                 | '   d:= bi-dx
02640     46 8F 02 F6 | 	mov	local18, local17
02644     3E 8F 82 F1 | 	sub	local18, local09
02648                 | '   repeat while (x<>x2) 
02648                 | LR__0048
02648     38 77 0A F2 | 	cmp	local06, local03 wz
0264c     D4 00 90 AD |  if_e	jmp	#LR__0056
02650                 | '     if (d>=0) 
02650     00 8E 5E F2 | 	cmps	local18, #0 wcz
02654     10 00 90 CD |  if_b	jmp	#LR__0049
02658                 | '       x+=xi
02658     3D 77 02 F1 | 	add	local06, local08
0265c                 | '       y+=yi
0265c     3F 79 02 F1 | 	add	local07, local10
02660                 | '       d+=ai
02660     45 8F 02 F1 | 	add	local18, local16
02664                 | '     else
02664     08 00 90 FD | 	jmp	#LR__0050
02668                 | LR__0049
02668                 | '       d+=bi
02668     46 8F 02 F1 | 	add	local18, local17
0266c                 | '       x+=xi
0266c     3D 77 02 F1 | 	add	local06, local08
02670                 | LR__0050
02670                 | '     putpixel(x,y,c)
02670     D8 FA 05 F1 | 	add	objptr, #216
02674     FD 82 02 FB | 	rdlong	local12, objptr
02678     D8 FA 85 F1 | 	sub	objptr, #216
0267c     41 85 02 FB | 	rdlong	local13, local12
02680     04 82 06 F1 | 	add	local12, #4
02684     41 87 02 FB | 	rdlong	local14, local12
02688     3B 5F 02 F6 | 	mov	arg01, local06
0268c     3C 61 02 F6 | 	mov	arg02, local07
02690     3A 63 02 F6 | 	mov	arg03, local05
02694     FD 88 02 F6 | 	mov	local15, objptr
02698     42 FB 01 F6 | 	mov	objptr, local13
0269c     2D 86 62 FD | 	call	local14
026a0     44 FB 01 F6 | 	mov	objptr, local15
026a4     A0 FF 9F FD | 	jmp	#LR__0048
026a8                 | ' else
026a8                 | LR__0051
026a8                 | '   ai:=(dx-dy)*2
026a8     3E 8B 02 F6 | 	mov	local16, local09
026ac     40 8B 82 F1 | 	sub	local16, local11
026b0     01 8A 66 F0 | 	shl	local16, #1
026b4                 | '   bi:=dx*2
026b4     01 7C 66 F0 | 	shl	local09, #1
026b8     3E 8D 02 F6 | 	mov	local17, local09
026bc                 | '   d:=bi-dy
026bc     46 8F 02 F6 | 	mov	local18, local17
026c0     40 8F 82 F1 | 	sub	local18, local11
026c4                 | '   repeat while (y<>y2)
026c4                 | LR__0052
026c4     39 79 0A F2 | 	cmp	local07, local04 wz
026c8     58 00 90 AD |  if_e	jmp	#LR__0055
026cc                 | '     if (d>=0)
026cc     00 8E 5E F2 | 	cmps	local18, #0 wcz
026d0     10 00 90 CD |  if_b	jmp	#LR__0053
026d4                 | '       x+=xi
026d4     3D 77 02 F1 | 	add	local06, local08
026d8                 | '       y+=yi
026d8     3F 79 02 F1 | 	add	local07, local10
026dc                 | '       d+=ai
026dc     45 8F 02 F1 | 	add	local18, local16
026e0                 | '     else
026e0     08 00 90 FD | 	jmp	#LR__0054
026e4                 | LR__0053
026e4                 | '       d+=bi
026e4     46 8F 02 F1 | 	add	local18, local17
026e8                 | '       y+=yi
026e8     3F 79 02 F1 | 	add	local07, local10
026ec                 | LR__0054
026ec                 | '     putpixel(x, y,c)
026ec     D8 FA 05 F1 | 	add	objptr, #216
026f0     FD 82 02 FB | 	rdlong	local12, objptr
026f4     D8 FA 85 F1 | 	sub	objptr, #216
026f8     41 85 02 FB | 	rdlong	local13, local12
026fc     04 82 06 F1 | 	add	local12, #4
02700     41 87 02 FB | 	rdlong	local14, local12
02704     3B 5F 02 F6 | 	mov	arg01, local06
02708     3C 61 02 F6 | 	mov	arg02, local07
0270c     3A 63 02 F6 | 	mov	arg03, local05
02710     FD 88 02 F6 | 	mov	local15, objptr
02714     42 FB 01 F6 | 	mov	objptr, local13
02718     2D 86 62 FD | 	call	local14
0271c     44 FB 01 F6 | 	mov	objptr, local15
02720     A0 FF 9F FD | 	jmp	#LR__0052
02724                 | LR__0055
02724                 | LR__0056
02724     AF F0 03 F6 | 	mov	ptra, fp
02728     BA 00 A0 FD | 	call	#popregs_
0272c                 | _hng030rm_spin2_line_ret
0272c     2D 00 64 FD | 	ret
02730                 | 
02730                 | ' 
02730                 | ' pub putcharxycg(x,y,achar,f,b) |xx, yy,bb
02730                 | _hng030rm_spin2_putcharxycg
02730     0D 5A 05 F6 | 	mov	COUNT_, #13
02734     B0 00 A0 FD | 	call	#pushregs_
02738     2F 6D 02 F6 | 	mov	local01, arg01
0273c     30 6F 02 F6 | 	mov	local02, arg02
02740     31 71 02 F6 | 	mov	local03, arg03
02744     32 73 02 F6 | 	mov	local04, arg04
02748     33 75 02 F6 | 	mov	local05, arg05
0274c                 | ' 
0274c                 | ' repeat yy from 0 to 15
0274c     00 76 06 F6 | 	mov	local06, #0
02750                 | LR__0057
02750                 | '   bb:=byte[@vga_font+font_family<<10+achar<<4+yy]
02750     03 79 02 F6 | 	mov	local07, ptr__hng030rm_spin2_dat__
02754     C8 FA 05 F1 | 	add	objptr, #200
02758     FD 7A 02 FB | 	rdlong	local08, objptr
0275c     C8 FA 85 F1 | 	sub	objptr, #200
02760     0A 7A 66 F0 | 	shl	local08, #10
02764     3D 79 02 F1 | 	add	local07, local08
02768     38 7D 02 F6 | 	mov	local09, local03
0276c     04 7C 66 F0 | 	shl	local09, #4
02770     3E 79 02 F1 | 	add	local07, local09
02774     3B 79 02 F1 | 	add	local07, local06
02778     3C 7F C2 FA | 	rdbyte	local10, local07
0277c                 | '   repeat xx from 0 to 7
0277c     00 80 06 F6 | 	mov	local11, #0
02780                 | LR__0058
02780                 | '     if (bb&(1<<xx))<>0
02780     40 83 C2 F9 | 	decod	local12, local11
02784     41 7F CA F7 | 	test	local10, local12 wz
02788     40 00 90 AD |  if_e	jmp	#LR__0059
0278c                 | '       putpixel(xx+x,yy+y,f)
0278c     D8 FA 05 F1 | 	add	objptr, #216
02790     FD 78 02 FB | 	rdlong	local07, objptr
02794     D8 FA 85 F1 | 	sub	objptr, #216
02798     3C 83 02 FB | 	rdlong	local12, local07
0279c     04 78 06 F1 | 	add	local07, #4
027a0     3C 7B 02 FB | 	rdlong	local08, local07
027a4     40 5F 02 F6 | 	mov	arg01, local11
027a8     36 5F 02 F1 | 	add	arg01, local01
027ac     3B 61 02 F6 | 	mov	arg02, local06
027b0     37 61 02 F1 | 	add	arg02, local02
027b4     39 63 02 F6 | 	mov	arg03, local04
027b8     FD 84 02 F6 | 	mov	local13, objptr
027bc     41 FB 01 F6 | 	mov	objptr, local12
027c0     2D 7A 62 FD | 	call	local08
027c4     42 FB 01 F6 | 	mov	objptr, local13
027c8                 | '     else
027c8     3C 00 90 FD | 	jmp	#LR__0060
027cc                 | LR__0059
027cc                 | '       putpixel(xx+x,yy+y,b)
027cc     D8 FA 05 F1 | 	add	objptr, #216
027d0     FD 78 02 FB | 	rdlong	local07, objptr
027d4     D8 FA 85 F1 | 	sub	objptr, #216
027d8     3C 83 02 FB | 	rdlong	local12, local07
027dc     04 78 06 F1 | 	add	local07, #4
027e0     3C 7B 02 FB | 	rdlong	local08, local07
027e4     40 5F 02 F6 | 	mov	arg01, local11
027e8     36 5F 02 F1 | 	add	arg01, local01
027ec     3B 61 02 F6 | 	mov	arg02, local06
027f0     37 61 02 F1 | 	add	arg02, local02
027f4     3A 63 02 F6 | 	mov	arg03, local05
027f8     FD 84 02 F6 | 	mov	local13, objptr
027fc     41 FB 01 F6 | 	mov	objptr, local12
02800     2D 7A 62 FD | 	call	local08
02804     42 FB 01 F6 | 	mov	objptr, local13
02808                 | LR__0060
02808     01 80 06 F1 | 	add	local11, #1
0280c     08 80 5E F2 | 	cmps	local11, #8 wcz
02810     6C FF 9F CD |  if_b	jmp	#LR__0058
02814     01 76 06 F1 | 	add	local06, #1
02818     10 76 5E F2 | 	cmps	local06, #16 wcz
0281c     30 FF 9F CD |  if_b	jmp	#LR__0057
02820     AF F0 03 F6 | 	mov	ptra, fp
02824     BA 00 A0 FD | 	call	#popregs_
02828                 | _hng030rm_spin2_putcharxycg_ret
02828     2D 00 64 FD | 	ret
0282c                 | 
0282c                 | ' 
0282c                 | ' pub outtextxycg(x,y,text,f,b) | iii,c
0282c                 | _hng030rm_spin2_outtextxycg
0282c     0C 5A 05 F6 | 	mov	COUNT_, #12
02830     B0 00 A0 FD | 	call	#pushregs_
02834     2F 6D 02 F6 | 	mov	local01, arg01
02838     30 6F 02 F6 | 	mov	local02, arg02
0283c     31 71 02 F6 | 	mov	local03, arg03
02840     32 73 02 F6 | 	mov	local04, arg04
02844     33 75 02 F6 | 	mov	local05, arg05
02848                 | ' 
02848                 | ' repeat iii from 0 to strsize(text)-1
02848     00 76 06 F6 | 	mov	local06, #0
0284c     38 5F 02 F6 | 	mov	arg01, local03
02850     00 78 06 F6 | 	mov	local07, #0
02854     B8 D7 9F FE | 	loc	pa,	#(@LR__0062-@LR__0061)
02858     93 00 A0 FD | 	call	#FCACHE_LOAD_
0285c                 | LR__0061
0285c     2F 7B CA FA | 	rdbyte	local08, arg01 wz
02860     01 78 06 51 |  if_ne	add	local07, #1
02864     01 5E 06 51 |  if_ne	add	arg01, #1
02868     F0 FF 9F 5D |  if_ne	jmp	#LR__0061
0286c                 | LR__0062
0286c     3C 19 02 F6 | 	mov	result1, local07
02870     0C 7D 02 F6 | 	mov	local09, result1
02874     01 7C 86 F1 | 	sub	local09, #1
02878     00 7C 5E F2 | 	cmps	local09, #0 wcz
0287c     01 7E 06 16 |  if_a	mov	local10, #1
02880     01 7E 66 E6 |  if_be	neg	local10, #1
02884     3F 7D 02 F1 | 	add	local09, local10
02888                 | LR__0063
02888                 | '   putcharxycg(x+8*iii,y,byte[text+iii],f,b)
02888     36 5F 02 F6 | 	mov	arg01, local01
0288c     3B 81 02 F6 | 	mov	local11, local06
02890     03 80 66 F0 | 	shl	local11, #3
02894     40 5F 02 F1 | 	add	arg01, local11
02898     37 61 02 F6 | 	mov	arg02, local02
0289c     38 83 02 F6 | 	mov	local12, local03
028a0     3B 83 02 F1 | 	add	local12, local06
028a4     41 63 C2 FA | 	rdbyte	arg03, local12
028a8     39 65 02 F6 | 	mov	arg04, local04
028ac     3A 67 02 F6 | 	mov	arg05, local05
028b0     7C FE BF FD | 	call	#_hng030rm_spin2_putcharxycg
028b4     3F 77 02 F1 | 	add	local06, local10
028b8     3E 77 0A F2 | 	cmp	local06, local09 wz
028bc     C8 FF 9F 5D |  if_ne	jmp	#LR__0063
028c0     AF F0 03 F6 | 	mov	ptra, fp
028c4     BA 00 A0 FD | 	call	#popregs_
028c8                 | _hng030rm_spin2_outtextxycg_ret
028c8     2D 00 64 FD | 	ret
028cc                 | 
028cc                 | ' 
028cc                 | ' 
028cc                 | ' ''---------- putpixel - put a pixel on the screen
028cc                 | ' 
028cc                 | ' pub putpixel1(x,y,c) |byte b
028cc                 | _hng030rm_spin2_putpixel1
028cc                 | ' 
028cc                 | ' 
028cc                 | ' if ((x>=0) & (x<32*cpl) & (y>=0) & (y<lines))
028cc     00 1E 06 F6 | 	mov	_var01, #0
028d0     00 5E 5E F2 | 	cmps	arg01, #0 wcz
028d4     01 1E 66 36 |  if_ae	neg	_var01, #1
028d8     00 20 06 F6 | 	mov	_var02, #0
028dc     90 FA 05 F1 | 	add	objptr, #144
028e0     FD 22 02 FB | 	rdlong	_var03, objptr
028e4     05 22 66 F0 | 	shl	_var03, #5
028e8     11 5F 5A F2 | 	cmps	arg01, _var03 wcz
028ec     01 20 66 C6 |  if_b	neg	_var02, #1
028f0     10 1F 02 F5 | 	and	_var01, _var02
028f4     00 24 06 F6 | 	mov	_var04, #0
028f8     00 60 5E F2 | 	cmps	arg02, #0 wcz
028fc     01 24 66 36 |  if_ae	neg	_var04, #1
02900     12 1F 02 F5 | 	and	_var01, _var04
02904     00 26 06 F6 | 	mov	_var05, #0
02908     04 FA 05 F1 | 	add	objptr, #4
0290c     FD 28 02 FB | 	rdlong	_var06, objptr
02910     94 FA 85 F1 | 	sub	objptr, #148
02914     14 61 5A F2 | 	cmps	arg02, _var06 wcz
02918     01 26 66 C6 |  if_b	neg	_var05, #1
0291c     13 1F CA F7 | 	test	_var01, _var05 wz
02920     90 00 90 AD |  if_e	jmp	#LR__0066
02924                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>3)]
02924     FD 1E 02 FB | 	rdlong	_var01, objptr
02928     90 FA 05 F1 | 	add	objptr, #144
0292c     FD 20 02 FB | 	rdlong	_var02, objptr
02930     90 FA 85 F1 | 	sub	objptr, #144
02934     02 20 66 F0 | 	shl	_var02, #2
02938     30 21 02 FD | 	qmul	_var02, arg02
0293c     18 2A 62 FD | 	getqx	_var07
02940     15 1F 02 F1 | 	add	_var01, _var07
02944     2F 25 02 F6 | 	mov	_var04, arg01
02948     03 24 46 F0 | 	shr	_var04, #3
0294c     12 1F 02 F1 | 	add	_var01, _var04
02950     0F 2D C2 FA | 	rdbyte	_var08, _var01
02954                 | '     if (c==0)
02954     00 62 0E F2 | 	cmp	arg03, #0 wz
02958     18 00 90 5D |  if_ne	jmp	#LR__0064
0295c                 | '       b:=b & !(1<<(x//8))
0295c     2F 23 52 F6 | 	abs	_var03, arg01 wc
02960     07 22 06 F5 | 	and	_var03, #7
02964     11 23 62 C6 |  if_b	neg	_var03, _var03
02968     11 21 C2 F9 | 	decod	_var02, _var03
0296c     10 2D 22 F5 | 	andn	_var08, _var02
02970                 | '     else
02970     14 00 90 FD | 	jmp	#LR__0065
02974                 | LR__0064
02974                 | '       b:=b |(1<<(x//8))
02974     2F 23 52 F6 | 	abs	_var03, arg01 wc
02978     07 22 06 F5 | 	and	_var03, #7
0297c     11 23 62 C6 |  if_b	neg	_var03, _var03
02980     11 21 C2 F9 | 	decod	_var02, _var03
02984     10 2D 42 F5 | 	or	_var08, _var02
02988                 | LR__0065
02988                 | '     byte[buf_ptr+4*cpl*y+(x>>3)]:=b
02988     FD 1E 02 FB | 	rdlong	_var01, objptr
0298c     90 FA 05 F1 | 	add	objptr, #144
02990     FD 20 02 FB | 	rdlong	_var02, objptr
02994     90 FA 85 F1 | 	sub	objptr, #144
02998     02 20 66 F0 | 	shl	_var02, #2
0299c     30 21 02 FD | 	qmul	_var02, arg02
029a0     18 2A 62 FD | 	getqx	_var07
029a4     15 1F 02 F1 | 	add	_var01, _var07
029a8     03 5E 46 F0 | 	shr	arg01, #3
029ac     2F 1F 02 F1 | 	add	_var01, arg01
029b0     0F 2D 42 FC | 	wrbyte	_var08, _var01
029b4                 | LR__0066
029b4                 | _hng030rm_spin2_putpixel1_ret
029b4     2D 00 64 FD | 	ret
029b8                 | 
029b8                 | ' 
029b8                 | ' 
029b8                 | ' pub putpixel2(x,y,c) |byte b
029b8                 | _hng030rm_spin2_putpixel2
029b8     2F 1F 02 F6 | 	mov	_var01, arg01
029bc     30 21 02 F6 | 	mov	_var02, arg02
029c0     31 23 02 F6 | 	mov	_var03, arg03
029c4                 | ' 
029c4                 | ' 
029c4                 | ' if ((x>=0) && (x<16*cpl) && (y>=0) && (y<lines))
029c4     00 1E 5E F2 | 	cmps	_var01, #0 wcz
029c8     C8 00 90 CD |  if_b	jmp	#LR__0067
029cc     90 FA 05 F1 | 	add	objptr, #144
029d0     FD 24 02 FB | 	rdlong	_var04, objptr
029d4     90 FA 85 F1 | 	sub	objptr, #144
029d8     04 24 66 F0 | 	shl	_var04, #4
029dc     12 1F 5A F2 | 	cmps	_var01, _var04 wcz
029e0     B0 00 90 3D |  if_ae	jmp	#LR__0067
029e4     00 20 5E F2 | 	cmps	_var02, #0 wcz
029e8     A8 00 90 CD |  if_b	jmp	#LR__0067
029ec     94 FA 05 F1 | 	add	objptr, #148
029f0     FD 26 02 FB | 	rdlong	_var05, objptr
029f4     94 FA 85 F1 | 	sub	objptr, #148
029f8     13 21 5A F2 | 	cmps	_var02, _var05 wcz
029fc     94 00 90 3D |  if_ae	jmp	#LR__0067
02a00                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>2)]
02a00     FD 24 02 FB | 	rdlong	_var04, objptr
02a04     90 FA 05 F1 | 	add	objptr, #144
02a08     FD 28 02 FB | 	rdlong	_var06, objptr
02a0c     90 FA 85 F1 | 	sub	objptr, #144
02a10     02 28 66 F0 | 	shl	_var06, #2
02a14     10 29 02 FD | 	qmul	_var06, _var02
02a18     18 2A 62 FD | 	getqx	_var07
02a1c     15 25 02 F1 | 	add	_var04, _var07
02a20     0F 2D 02 F6 | 	mov	_var08, _var01
02a24     02 2C 46 F0 | 	shr	_var08, #2
02a28     16 25 02 F1 | 	add	_var04, _var08
02a2c     12 2F C2 FA | 	rdbyte	_var09, _var04
02a30                 | '     b:=b & !(%11<<((x//4)<<1))
02a30     0F 31 52 F6 | 	abs	_var10, _var01 wc
02a34     03 30 06 F5 | 	and	_var10, #3
02a38     18 31 62 C6 |  if_b	neg	_var10, _var10
02a3c     01 30 66 F0 | 	shl	_var10, #1
02a40     03 28 06 F6 | 	mov	_var06, #3
02a44     18 29 62 F0 | 	shl	_var06, _var10
02a48     14 2F 22 F5 | 	andn	_var09, _var06
02a4c                 | '     b:=b |(c<<((x//4)<<1))
02a4c     0F 31 52 F6 | 	abs	_var10, _var01 wc
02a50     03 30 06 F5 | 	and	_var10, #3
02a54     18 31 62 C6 |  if_b	neg	_var10, _var10
02a58     01 30 66 F0 | 	shl	_var10, #1
02a5c     18 23 62 F0 | 	shl	_var03, _var10
02a60     11 2F 42 F5 | 	or	_var09, _var03
02a64                 | '     byte[buf_ptr+4*cpl*y+(x>>2)]:=b
02a64     FD 24 02 FB | 	rdlong	_var04, objptr
02a68     90 FA 05 F1 | 	add	objptr, #144
02a6c     FD 28 02 FB | 	rdlong	_var06, objptr
02a70     90 FA 85 F1 | 	sub	objptr, #144
02a74     02 28 66 F0 | 	shl	_var06, #2
02a78     10 29 02 FD | 	qmul	_var06, _var02
02a7c     18 2A 62 FD | 	getqx	_var07
02a80     15 25 02 F1 | 	add	_var04, _var07
02a84     0F 2D 02 F6 | 	mov	_var08, _var01
02a88     02 2C 46 F0 | 	shr	_var08, #2
02a8c     16 25 02 F1 | 	add	_var04, _var08
02a90     12 2F 42 FC | 	wrbyte	_var09, _var04
02a94                 | LR__0067
02a94                 | _hng030rm_spin2_putpixel2_ret
02a94     2D 00 64 FD | 	ret
02a98                 | 
02a98                 | ' 
02a98                 | ' 
02a98                 | ' pub putpixel4(x,y,c) |byte b
02a98                 | _hng030rm_spin2_putpixel4
02a98                 | ' 
02a98                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
02a98     00 1E 06 F6 | 	mov	_var01, #0
02a9c     00 5E 5E F2 | 	cmps	arg01, #0 wcz
02aa0     01 1E 66 36 |  if_ae	neg	_var01, #1
02aa4     00 20 06 F6 | 	mov	_var02, #0
02aa8     90 FA 05 F1 | 	add	objptr, #144
02aac     FD 22 02 FB | 	rdlong	_var03, objptr
02ab0     04 22 66 F0 | 	shl	_var03, #4
02ab4     11 5F 5A F2 | 	cmps	arg01, _var03 wcz
02ab8     01 20 66 C6 |  if_b	neg	_var02, #1
02abc     10 1F 02 F5 | 	and	_var01, _var02
02ac0     00 24 06 F6 | 	mov	_var04, #0
02ac4     00 60 5E F2 | 	cmps	arg02, #0 wcz
02ac8     01 24 66 36 |  if_ae	neg	_var04, #1
02acc     12 1F 02 F5 | 	and	_var01, _var04
02ad0     00 26 06 F6 | 	mov	_var05, #0
02ad4     04 FA 05 F1 | 	add	objptr, #4
02ad8     FD 28 02 FB | 	rdlong	_var06, objptr
02adc     94 FA 85 F1 | 	sub	objptr, #148
02ae0     14 61 5A F2 | 	cmps	arg02, _var06 wcz
02ae4     01 26 66 C6 |  if_b	neg	_var05, #1
02ae8     13 1F CA F7 | 	test	_var01, _var05 wz
02aec     90 00 90 AD |  if_e	jmp	#LR__0068
02af0                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>1)]
02af0     FD 1E 02 FB | 	rdlong	_var01, objptr
02af4     90 FA 05 F1 | 	add	objptr, #144
02af8     FD 20 02 FB | 	rdlong	_var02, objptr
02afc     90 FA 85 F1 | 	sub	objptr, #144
02b00     02 20 66 F0 | 	shl	_var02, #2
02b04     30 21 02 FD | 	qmul	_var02, arg02
02b08     18 2A 62 FD | 	getqx	_var07
02b0c     15 1F 02 F1 | 	add	_var01, _var07
02b10     2F 25 02 F6 | 	mov	_var04, arg01
02b14     01 24 46 F0 | 	shr	_var04, #1
02b18     12 1F 02 F1 | 	add	_var01, _var04
02b1c     0F 2D C2 FA | 	rdbyte	_var08, _var01
02b20                 | '     b:=b & !(%1111<<((x//2)<<2))
02b20     2F 23 52 F6 | 	abs	_var03, arg01 wc
02b24     01 22 06 F5 | 	and	_var03, #1
02b28     11 23 62 C6 |  if_b	neg	_var03, _var03
02b2c     02 22 66 F0 | 	shl	_var03, #2
02b30     0F 20 06 F6 | 	mov	_var02, #15
02b34     11 21 62 F0 | 	shl	_var02, _var03
02b38     10 2D 22 F5 | 	andn	_var08, _var02
02b3c                 | '     b:=b |(c<<((x//2)<<2))
02b3c     2F 23 52 F6 | 	abs	_var03, arg01 wc
02b40     01 22 06 F5 | 	and	_var03, #1
02b44     11 23 62 C6 |  if_b	neg	_var03, _var03
02b48     02 22 66 F0 | 	shl	_var03, #2
02b4c     11 63 62 F0 | 	shl	arg03, _var03
02b50     31 2D 42 F5 | 	or	_var08, arg03
02b54                 | '     byte[buf_ptr+4*cpl*y+(x>>1)]:=b
02b54     FD 1E 02 FB | 	rdlong	_var01, objptr
02b58     90 FA 05 F1 | 	add	objptr, #144
02b5c     FD 20 02 FB | 	rdlong	_var02, objptr
02b60     90 FA 85 F1 | 	sub	objptr, #144
02b64     02 20 66 F0 | 	shl	_var02, #2
02b68     30 21 02 FD | 	qmul	_var02, arg02
02b6c     18 2A 62 FD | 	getqx	_var07
02b70     15 1F 02 F1 | 	add	_var01, _var07
02b74     01 5E 46 F0 | 	shr	arg01, #1
02b78     2F 1F 02 F1 | 	add	_var01, arg01
02b7c     0F 2D 42 FC | 	wrbyte	_var08, _var01
02b80                 | LR__0068
02b80                 | _hng030rm_spin2_putpixel4_ret
02b80     2D 00 64 FD | 	ret
02b84                 | 
02b84                 | ' 
02b84                 | ' 
02b84                 | ' pub putpixel8(x,y,c)
02b84                 | _hng030rm_spin2_putpixel8
02b84                 | ' 
02b84                 | ' if ((x>=0) & (x<4*cpl) & (y>=0) & (y<lines))
02b84     00 1E 06 F6 | 	mov	_var01, #0
02b88     00 5E 5E F2 | 	cmps	arg01, #0 wcz
02b8c     01 1E 66 36 |  if_ae	neg	_var01, #1
02b90     00 20 06 F6 | 	mov	_var02, #0
02b94     90 FA 05 F1 | 	add	objptr, #144
02b98     FD 22 02 FB | 	rdlong	_var03, objptr
02b9c     02 22 66 F0 | 	shl	_var03, #2
02ba0     11 5F 5A F2 | 	cmps	arg01, _var03 wcz
02ba4     01 20 66 C6 |  if_b	neg	_var02, #1
02ba8     10 1F 02 F5 | 	and	_var01, _var02
02bac     00 24 06 F6 | 	mov	_var04, #0
02bb0     00 60 5E F2 | 	cmps	arg02, #0 wcz
02bb4     01 24 66 36 |  if_ae	neg	_var04, #1
02bb8     12 1F 02 F5 | 	and	_var01, _var04
02bbc     00 26 06 F6 | 	mov	_var05, #0
02bc0     04 FA 05 F1 | 	add	objptr, #4
02bc4     FD 28 02 FB | 	rdlong	_var06, objptr
02bc8     94 FA 85 F1 | 	sub	objptr, #148
02bcc     14 61 5A F2 | 	cmps	arg02, _var06 wcz
02bd0     01 26 66 C6 |  if_b	neg	_var05, #1
02bd4     13 1F CA F7 | 	test	_var01, _var05 wz
02bd8     28 00 90 AD |  if_e	jmp	#LR__0069
02bdc                 | '     byte[buf_ptr+4*cpl*y+x]:=c
02bdc     FD 1E 02 FB | 	rdlong	_var01, objptr
02be0     90 FA 05 F1 | 	add	objptr, #144
02be4     FD 20 02 FB | 	rdlong	_var02, objptr
02be8     90 FA 85 F1 | 	sub	objptr, #144
02bec     02 20 66 F0 | 	shl	_var02, #2
02bf0     30 21 02 FD | 	qmul	_var02, arg02
02bf4     18 2A 62 FD | 	getqx	_var07
02bf8     15 1F 02 F1 | 	add	_var01, _var07
02bfc     2F 1F 02 F1 | 	add	_var01, arg01
02c00     0F 63 42 FC | 	wrbyte	arg03, _var01
02c04                 | LR__0069
02c04                 | _hng030rm_spin2_putpixel8_ret
02c04     2D 00 64 FD | 	ret
02c08                 | 
02c08                 | ' 
02c08                 | ' '*************************************************************************
02c08                 | ' '                                                                        *
02c08                 | ' '  VBlank functions                                                      *
02c08                 | ' '                                                                        *
02c08                 | ' '*************************************************************************
02c08                 | ' 
02c08                 | ' pub waitvbl(amount) | i
02c08                 | _hng030rm_spin2_waitvbl
02c08     04 5A 05 F6 | 	mov	COUNT_, #4
02c0c     B0 00 A0 FD | 	call	#pushregs_
02c10     2F 6D 02 F6 | 	mov	local01, arg01
02c14                 | ' 
02c14                 | ' ''---------- Wait for start of vblank. Amount=delay in frames
02c14                 | ' 
02c14                 | ' repeat i from 1 to amount
02c14     01 6E 06 F6 | 	mov	local02, #1
02c18     01 6C 5E F2 | 	cmps	local01, #1 wcz
02c1c     01 70 06 16 |  if_a	mov	local03, #1
02c20     01 70 66 E6 |  if_be	neg	local03, #1
02c24     38 6D 02 F1 | 	add	local01, local03
02c28                 | LR__0070
02c28                 | '   repeat until vblank==0
02c28                 | LR__0071
02c28     40 FA 05 F1 | 	add	objptr, #64
02c2c     FD 72 0A FB | 	rdlong	local04, objptr wz
02c30     40 FA 85 F1 | 	sub	objptr, #64
02c34     0C 00 90 AD |  if_e	jmp	#LR__0072
02c38                 | '     waitus(100)
02c38     64 5E 06 F6 | 	mov	arg01, #100
02c3c     78 43 B0 FD | 	call	#__system___waitus
02c40     E4 FF 9F FD | 	jmp	#LR__0071
02c44                 | LR__0072
02c44                 | '   repeat until vblank==1
02c44                 | LR__0073
02c44     40 FA 05 F1 | 	add	objptr, #64
02c48     FD 72 02 FB | 	rdlong	local04, objptr
02c4c     40 FA 85 F1 | 	sub	objptr, #64
02c50     01 72 0E F2 | 	cmp	local04, #1 wz
02c54     0C 00 90 AD |  if_e	jmp	#LR__0074
02c58                 | '     waitus(100)
02c58     64 5E 06 F6 | 	mov	arg01, #100
02c5c     58 43 B0 FD | 	call	#__system___waitus
02c60     E0 FF 9F FD | 	jmp	#LR__0073
02c64                 | LR__0074
02c64     38 6F 02 F1 | 	add	local02, local03
02c68     36 6F 0A F2 | 	cmp	local02, local01 wz
02c6c     B8 FF 9F 5D |  if_ne	jmp	#LR__0070
02c70     AF F0 03 F6 | 	mov	ptra, fp
02c74     BA 00 A0 FD | 	call	#popregs_
02c78                 | _hng030rm_spin2_waitvbl_ret
02c78     2D 00 64 FD | 	ret
02c7c                 | 
02c7c                 | ' 
02c7c                 | ' ''---------- Set the border color, o is upper border, lines+1 is lower border
02c7c                 | ' 
02c7c                 | ' pub setbordercolor(r,g,b) | color
02c7c                 | _hng030rm_spin2_setbordercolor
02c7c                 | ' 
02c7c                 | ' color:=r<<24+g<<16+b<<8
02c7c     18 5E 66 F0 | 	shl	arg01, #24
02c80     10 60 66 F0 | 	shl	arg02, #16
02c84     30 5F 02 F1 | 	add	arg01, arg02
02c88     08 62 66 F0 | 	shl	arg03, #8
02c8c     31 5F 02 F1 | 	add	arg01, arg03
02c90                 | ' bordercolor:=color
02c90     2C FA 05 F1 | 	add	objptr, #44
02c94     FD 5E 62 FC | 	wrlong	arg01, objptr
02c98     2C FA 85 F1 | 	sub	objptr, #44
02c9c                 | _hng030rm_spin2_setbordercolor_ret
02c9c     2D 00 64 FD | 	ret
02ca0                 | 
02ca0                 | ' 
02ca0                 | ' ''---------- Set color #c in palette to r,g,b
02ca0                 | ' 
02ca0                 | ' pub setcolor(c,r,g,b)  |cc
02ca0                 | _hng030rm_spin2_setcolor
02ca0                 | ' 
02ca0                 | ' cc:=r<<24+g<<16+b<<8
02ca0     18 60 66 F0 | 	shl	arg02, #24
02ca4     10 62 66 F0 | 	shl	arg03, #16
02ca8     31 61 02 F1 | 	add	arg02, arg03
02cac     08 64 66 F0 | 	shl	arg04, #8
02cb0     32 61 02 F1 | 	add	arg02, arg04
02cb4                 | ' long[palette_ptr+4*c]:=cc
02cb4     18 FA 05 F1 | 	add	objptr, #24
02cb8     FD 1E 02 FB | 	rdlong	_var01, objptr
02cbc     18 FA 85 F1 | 	sub	objptr, #24
02cc0     02 5E 66 F0 | 	shl	arg01, #2
02cc4     2F 1F 02 F1 | 	add	_var01, arg01
02cc8     0F 61 62 FC | 	wrlong	arg02, _var01
02ccc                 | _hng030rm_spin2_setcolor_ret
02ccc     2D 00 64 FD | 	ret
02cd0                 | 
02cd0                 | ' 
02cd0                 | ' 
02cd0                 | ' '*************************************************************************
02cd0                 | ' '                                                                        *
02cd0                 | ' '  Text functions                                                        *
02cd0                 | ' '                                                                        *
02cd0                 | ' '*************************************************************************
02cd0                 | ' 
02cd0                 | ' ''---------- Clear the screen, set its foreground/background color
02cd0                 | ' 
02cd0                 | ' pub cls(fc,bc)   :c
02cd0                 | _hng030rm_spin2_cls
02cd0     06 5A 05 F6 | 	mov	COUNT_, #6
02cd4     B0 00 A0 FD | 	call	#pushregs_
02cd8     2F 6D 02 F6 | 	mov	local01, arg01
02cdc     30 6F 02 F6 | 	mov	local02, arg02
02ce0                 | ' 
02ce0                 | ' if (graphmode<512)
02ce0     C4 FA 05 F1 | 	add	objptr, #196
02ce4     FD 70 02 FB | 	rdlong	local03, objptr
02ce8     C4 FA 85 F1 | 	sub	objptr, #196
02cec     01 00 00 FF 
02cf0     00 70 5E F2 | 	cmps	local03, ##512 wcz
02cf4     34 00 90 3D |  if_ae	jmp	#LR__0075
02cf8                 | '   c:=fc<<24+bc<<16+$20
02cf8     36 73 02 F6 | 	mov	local04, local01
02cfc     18 72 66 F0 | 	shl	local04, #24
02d00     37 75 02 F6 | 	mov	local05, local02
02d04     10 74 66 F0 | 	shl	local05, #16
02d08     3A 73 02 F1 | 	add	local04, local05
02d0c     20 72 06 F1 | 	add	local04, #32
02d10                 | '   longfill(buf_ptr,c,buflen)
02d10     FD 5E 02 FB | 	rdlong	arg01, objptr
02d14     30 FA 05 F1 | 	add	objptr, #48
02d18     FD 62 02 FB | 	rdlong	arg03, objptr
02d1c     30 FA 85 F1 | 	sub	objptr, #48
02d20     39 61 02 F6 | 	mov	arg02, local04
02d24     A8 00 A0 FD | 	call	#\builtin_longfill_
02d28                 | ' else
02d28     AC 00 90 FD | 	jmp	#LR__0081
02d2c                 | LR__0075
02d2c                 | '   if (graphmode & 48) ==48
02d2c     C4 FA 05 F1 | 	add	objptr, #196
02d30     FD 70 02 FB | 	rdlong	local03, objptr
02d34     C4 FA 85 F1 | 	sub	objptr, #196
02d38     30 70 06 F5 | 	and	local03, #48
02d3c     30 70 0E F2 | 	cmp	local03, #48 wz
02d40                 | '     c:=bc
02d40     37 73 02 A6 |  if_e	mov	local04, local02
02d44     74 00 90 AD |  if_e	jmp	#LR__0080
02d48                 | '   elseif (graphmode & 48) ==32
02d48     C4 FA 05 F1 | 	add	objptr, #196
02d4c     FD 70 02 FB | 	rdlong	local03, objptr
02d50     C4 FA 85 F1 | 	sub	objptr, #196
02d54     30 70 06 F5 | 	and	local03, #48
02d58     20 70 0E F2 | 	cmp	local03, #32 wz
02d5c     10 00 90 5D |  if_ne	jmp	#LR__0076
02d60                 | '     c:=bc<<4+bc
02d60     37 73 02 F6 | 	mov	local04, local02
02d64     04 72 66 F0 | 	shl	local04, #4
02d68     37 73 02 F1 | 	add	local04, local02
02d6c     4C 00 90 FD | 	jmp	#LR__0079
02d70                 | LR__0076
02d70                 | '   elseif (graphmode & 48) ==16
02d70     C4 FA 05 F1 | 	add	objptr, #196
02d74     FD 70 02 FB | 	rdlong	local03, objptr
02d78     C4 FA 85 F1 | 	sub	objptr, #196
02d7c     30 70 06 F5 | 	and	local03, #48
02d80     10 70 0E F2 | 	cmp	local03, #16 wz
02d84     28 00 90 5D |  if_ne	jmp	#LR__0077
02d88                 | '     c:=bc<<6+bc<<4+bc<<2+bc
02d88     37 73 02 F6 | 	mov	local04, local02
02d8c     06 72 66 F0 | 	shl	local04, #6
02d90     37 75 02 F6 | 	mov	local05, local02
02d94     04 74 66 F0 | 	shl	local05, #4
02d98     3A 73 02 F1 | 	add	local04, local05
02d9c     37 77 02 F6 | 	mov	local06, local02
02da0     02 76 66 F0 | 	shl	local06, #2
02da4     3B 73 02 F1 | 	add	local04, local06
02da8     37 73 02 F1 | 	add	local04, local02
02dac                 | '   else
02dac     0C 00 90 FD | 	jmp	#LR__0078
02db0                 | LR__0077
02db0                 | '     if bc==1
02db0     01 6E 0E F2 | 	cmp	local02, #1 wz
02db4                 | '       c:=255
02db4     FF 72 06 A6 |  if_e	mov	local04, #255
02db8                 | '     else
02db8                 | '       c:=0
02db8     00 72 06 56 |  if_ne	mov	local04, #0
02dbc                 | LR__0078
02dbc                 | LR__0079
02dbc                 | LR__0080
02dbc                 | '   bytefill(buf_ptr,c,buflen*4)
02dbc     FD 5E 02 FB | 	rdlong	arg01, objptr
02dc0     30 FA 05 F1 | 	add	objptr, #48
02dc4     FD 62 02 FB | 	rdlong	arg03, objptr
02dc8     30 FA 85 F1 | 	sub	objptr, #48
02dcc     02 62 66 F0 | 	shl	arg03, #2
02dd0     39 61 02 F6 | 	mov	arg02, local04
02dd4     A0 00 A0 FD | 	call	#\builtin_bytefill_
02dd8                 | LR__0081
02dd8                 | ' setwritecolors(fc,bc)
02dd8                 | ' 
02dd8                 | ' 
02dd8                 | ' write_color:=ff
02dd8     38 FA 05 F1 | 	add	objptr, #56
02ddc     FD 6C 62 FC | 	wrlong	local01, objptr
02de0                 | ' write_background:=bb
02de0     04 FA 05 F1 | 	add	objptr, #4
02de4     FD 6E 62 FC | 	wrlong	local02, objptr
02de8                 | ' cursor_x:=0
02de8     08 FA 85 F1 | 	sub	objptr, #8
02dec     FD 00 48 FC | 	wrbyte	#0, objptr
02df0                 | ' cursor_y:=0
02df0     01 FA 05 F1 | 	add	objptr, #1
02df4     FD 00 48 FC | 	wrbyte	#0, objptr
02df8     35 FA 85 F1 | 	sub	objptr, #53
02dfc     39 19 02 F6 | 	mov	result1, local04
02e00     AF F0 03 F6 | 	mov	ptra, fp
02e04     BA 00 A0 FD | 	call	#popregs_
02e08                 | _hng030rm_spin2_cls_ret
02e08     2D 00 64 FD | 	ret
02e0c                 | 
02e0c                 | ' 
02e0c                 | ' ''--------- Output a string at position x,y without changing colors
02e0c                 | ' 
02e0c                 | ' pub outtextxy(x,y,text) | iii
02e0c                 | _hng030rm_spin2_outtextxy
02e0c     0F 5A 05 F6 | 	mov	COUNT_, #15
02e10     B0 00 A0 FD | 	call	#pushregs_
02e14     2F 6D 02 F6 | 	mov	local01, arg01
02e18                 | ' 
02e18                 | ' repeat iii from 0 to strsize(text)-1
02e18     00 6E 06 F6 | 	mov	local02, #0
02e1c     31 5F 02 F6 | 	mov	arg01, arg03
02e20     00 70 06 F6 | 	mov	local03, #0
02e24     E8 D1 9F FE | 	loc	pa,	#(@LR__0083-@LR__0082)
02e28     93 00 A0 FD | 	call	#FCACHE_LOAD_
02e2c                 | LR__0082
02e2c     2F 73 CA FA | 	rdbyte	local04, arg01 wz
02e30     01 70 06 51 |  if_ne	add	local03, #1
02e34     01 5E 06 51 |  if_ne	add	arg01, #1
02e38     F0 FF 9F 5D |  if_ne	jmp	#LR__0082
02e3c                 | LR__0083
02e3c     38 19 02 F6 | 	mov	result1, local03
02e40     0C 75 02 F6 | 	mov	local05, result1
02e44     01 74 86 F1 | 	sub	local05, #1
02e48     00 74 5E F2 | 	cmps	local05, #0 wcz
02e4c     01 76 06 16 |  if_a	mov	local06, #1
02e50     01 76 66 E6 |  if_be	neg	local06, #1
02e54     3B 75 02 F1 | 	add	local05, local06
02e58     1C D2 9F FE | 	loc	pa,	#(@LR__0085-@LR__0084)
02e5c     93 00 A0 FD | 	call	#FCACHE_LOAD_
02e60                 | LR__0084
02e60                 | '   long[buf_ptr+4*(cpl*y+x+iii)]:=(long[buf_ptr+4*(cpl*y+x+iii)] & $FFFFFF00)  | byte[text+iii]
02e60     FD 78 02 FB | 	rdlong	local07, objptr
02e64     90 FA 05 F1 | 	add	objptr, #144
02e68     FD 7A 02 FB | 	rdlong	local08, objptr
02e6c     90 FA 85 F1 | 	sub	objptr, #144
02e70     30 7B 02 FD | 	qmul	local08, arg02
02e74     18 7C 62 FD | 	getqx	local09
02e78     36 7D 02 F1 | 	add	local09, local01
02e7c     37 7D 02 F1 | 	add	local09, local02
02e80     02 7C 66 F0 | 	shl	local09, #2
02e84     3E 79 02 F1 | 	add	local07, local09
02e88     3C 7F 02 FB | 	rdlong	local10, local07
02e8c     FF 7E 26 F5 | 	andn	local10, #255
02e90     31 81 02 F6 | 	mov	local11, arg03
02e94     37 81 02 F1 | 	add	local11, local02
02e98     40 83 C2 FA | 	rdbyte	local12, local11
02e9c     41 7F 42 F5 | 	or	local10, local12
02ea0     FD 84 02 FB | 	rdlong	local13, objptr
02ea4     90 FA 05 F1 | 	add	objptr, #144
02ea8     FD 86 02 FB | 	rdlong	local14, objptr
02eac     90 FA 85 F1 | 	sub	objptr, #144
02eb0     30 87 02 FD | 	qmul	local14, arg02
02eb4     18 88 62 FD | 	getqx	local15
02eb8     36 89 02 F1 | 	add	local15, local01
02ebc     37 89 02 F1 | 	add	local15, local02
02ec0     02 88 66 F0 | 	shl	local15, #2
02ec4     44 85 02 F1 | 	add	local13, local15
02ec8     42 7F 62 FC | 	wrlong	local10, local13
02ecc     3B 6F 02 F1 | 	add	local02, local06
02ed0     3A 6F 0A F2 | 	cmp	local02, local05 wz
02ed4     88 FF 9F 5D |  if_ne	jmp	#LR__0084
02ed8                 | LR__0085
02ed8     AF F0 03 F6 | 	mov	ptra, fp
02edc     BA 00 A0 FD | 	call	#popregs_
02ee0                 | _hng030rm_spin2_outtextxy_ret
02ee0     2D 00 64 FD | 	ret
02ee4                 | 
02ee4                 | ' 
02ee4                 | ' ''---------- Output a char at the cursor position, move the cursor
02ee4                 | ' 
02ee4                 | ' pub putchar(achar) | c,x,y
02ee4                 | _hng030rm_spin2_putchar
02ee4     0F 5A 05 F6 | 	mov	COUNT_, #15
02ee8     B0 00 A0 FD | 	call	#pushregs_
02eec     2F 6D 02 F6 | 	mov	local01, arg01
02ef0                 | ' 
02ef0                 | ' if achar==10
02ef0     0A 6C 0E F2 | 	cmp	local01, #10 wz
02ef4     08 00 90 5D |  if_ne	jmp	#LR__0086
02ef8                 | '   crlf()
02ef8     34 04 B0 FD | 	call	#_hng030rm_spin2_crlf
02efc                 | ' else  
02efc     64 01 90 FD | 	jmp	#LR__0089
02f00                 | LR__0086
02f00                 | '   x:=cursor_x
02f00     34 FA 05 F1 | 	add	objptr, #52
02f04     FD 6E C2 FA | 	rdbyte	local02, objptr
02f08                 | '   y:=cursor_y
02f08     01 FA 05 F1 | 	add	objptr, #1
02f0c     FD 70 C2 FA | 	rdbyte	local03, objptr
02f10                 | '   c:=write_color<<24+write_background<<16
02f10     03 FA 05 F1 | 	add	objptr, #3
02f14     FD 72 02 FB | 	rdlong	local04, objptr
02f18     18 72 66 F0 | 	shl	local04, #24
02f1c     04 FA 05 F1 | 	add	objptr, #4
02f20     FD 74 02 FB | 	rdlong	local05, objptr
02f24     3C FA 85 F1 | 	sub	objptr, #60
02f28     10 74 66 F0 | 	shl	local05, #16
02f2c     3A 73 02 F1 | 	add	local04, local05
02f30                 | '   long[buf_ptr+4*(cpl*y+x)]:=long[buf_ptr+4*(cpl*y+x)] &$FFFF | c
02f30     FD 76 02 FB | 	rdlong	local06, objptr
02f34     90 FA 05 F1 | 	add	objptr, #144
02f38     FD 78 02 FB | 	rdlong	local07, objptr
02f3c     90 FA 85 F1 | 	sub	objptr, #144
02f40     38 79 02 FD | 	qmul	local07, local03
02f44     18 7A 62 FD | 	getqx	local08
02f48     37 7B 02 F1 | 	add	local08, local02
02f4c     02 7A 66 F0 | 	shl	local08, #2
02f50     3D 77 02 F1 | 	add	local06, local08
02f54     3B 7D 02 FB | 	rdlong	local09, local06
02f58     7F 00 00 FF 
02f5c     FF 7D 06 F5 | 	and	local09, ##65535
02f60     39 7D 42 F5 | 	or	local09, local04
02f64     FD 7E 02 FB | 	rdlong	local10, objptr
02f68     90 FA 05 F1 | 	add	objptr, #144
02f6c     FD 80 02 FB | 	rdlong	local11, objptr
02f70     90 FA 85 F1 | 	sub	objptr, #144
02f74     38 81 02 FD | 	qmul	local11, local03
02f78     18 82 62 FD | 	getqx	local12
02f7c     37 83 02 F1 | 	add	local12, local02
02f80     02 82 66 F0 | 	shl	local12, #2
02f84     41 7F 02 F1 | 	add	local10, local12
02f88     3F 7D 62 FC | 	wrlong	local09, local10
02f8c                 | '   long[buf_ptr+4*(cpl*y+x)]:=(long[buf_ptr+4*(cpl*y+x)] & $FFFFFF00)  |(achar & $000000FF)
02f8c     FD 76 02 FB | 	rdlong	local06, objptr
02f90     90 FA 05 F1 | 	add	objptr, #144
02f94     FD 78 02 FB | 	rdlong	local07, objptr
02f98     90 FA 85 F1 | 	sub	objptr, #144
02f9c     38 79 02 FD | 	qmul	local07, local03
02fa0     18 7A 62 FD | 	getqx	local08
02fa4     37 7B 02 F1 | 	add	local08, local02
02fa8     02 7A 66 F0 | 	shl	local08, #2
02fac     3D 77 02 F1 | 	add	local06, local08
02fb0     3B 7D 02 FB | 	rdlong	local09, local06
02fb4     FF 7C 26 F5 | 	andn	local09, #255
02fb8     36 7F 02 F6 | 	mov	local10, local01
02fbc     FF 7E 06 F5 | 	and	local10, #255
02fc0     3F 7D 42 F5 | 	or	local09, local10
02fc4     FD 84 02 FB | 	rdlong	local13, objptr
02fc8     90 FA 05 F1 | 	add	objptr, #144
02fcc     FD 86 02 FB | 	rdlong	local14, objptr
02fd0     38 87 02 FD | 	qmul	local14, local03
02fd4     18 88 62 FD | 	getqx	local15
02fd8     37 89 02 F1 | 	add	local15, local02
02fdc     02 88 66 F0 | 	shl	local15, #2
02fe0     44 85 02 F1 | 	add	local13, local15
02fe4     42 7D 62 FC | 	wrlong	local09, local13
02fe8                 | '   cursor_x+=1
02fe8     5C FA 85 F1 | 	sub	objptr, #92
02fec     FD 7C C2 FA | 	rdbyte	local09, objptr
02ff0     01 7C 06 F1 | 	add	local09, #1
02ff4     FD 7C 42 FC | 	wrbyte	local09, objptr
02ff8                 | '   if cursor_x==cpl
02ff8     FD 7C C2 FA | 	rdbyte	local09, objptr
02ffc     5C FA 05 F1 | 	add	objptr, #92
03000     FD 74 02 FB | 	rdlong	local05, objptr
03004     90 FA 85 F1 | 	sub	objptr, #144
03008     3A 7D 0A F2 | 	cmp	local09, local05 wz
0300c     54 00 90 5D |  if_ne	jmp	#LR__0088
03010                 | '     cursor_x:=0
03010     34 FA 05 F1 | 	add	objptr, #52
03014     FD 00 48 FC | 	wrbyte	#0, objptr
03018                 | '     cursor_y+=1
03018     01 FA 05 F1 | 	add	objptr, #1
0301c     FD 7C C2 FA | 	rdbyte	local09, objptr
03020     01 7C 06 F1 | 	add	local09, #1
03024     FD 7C 42 FC | 	wrbyte	local09, objptr
03028                 | '     if cursor_y>lines-1
03028     5F FA 05 F1 | 	add	objptr, #95
0302c     FD 7C 02 FB | 	rdlong	local09, objptr
03030     01 7C 86 F1 | 	sub	local09, #1
03034     5F FA 85 F1 | 	sub	objptr, #95
03038     FD 74 C2 FA | 	rdbyte	local05, objptr
0303c     35 FA 85 F1 | 	sub	objptr, #53
03040     3E 75 5A F2 | 	cmps	local05, local09 wcz
03044     1C 00 90 ED |  if_be	jmp	#LR__0087
03048                 | '       scrollup()
03048     10 02 B0 FD | 	call	#_hng030rm_spin2_scrollup
0304c                 | '       cursor_y:=lines-1
0304c     94 FA 05 F1 | 	add	objptr, #148
03050     FD 7C 02 FB | 	rdlong	local09, objptr
03054     01 7C 86 F1 | 	sub	local09, #1
03058     5F FA 85 F1 | 	sub	objptr, #95
0305c     FD 7C 42 FC | 	wrbyte	local09, objptr
03060     35 FA 85 F1 | 	sub	objptr, #53
03064                 | LR__0087
03064                 | LR__0088
03064                 | LR__0089
03064     AF F0 03 F6 | 	mov	ptra, fp
03068     BA 00 A0 FD | 	call	#popregs_
0306c                 | _hng030rm_spin2_putchar_ret
0306c     2D 00 64 FD | 	ret
03070                 | 
03070                 | ' 
03070                 | ' ''--------- Output a string at the cursor position, move the cursor
03070                 | ' 
03070                 | ' pub write(text) | iii,c,ncx,ncy
03070                 | _hng030rm_spin2_write
03070     16 5A 05 F6 | 	mov	COUNT_, #22
03074     B0 00 A0 FD | 	call	#pushregs_
03078     2F 6D 02 F6 | 	mov	local01, arg01
0307c                 | ' 
0307c                 | ' c:=write_color<<24+write_background<<16
0307c     38 FA 05 F1 | 	add	objptr, #56
03080     FD 6E 02 FB | 	rdlong	local02, objptr
03084     18 6E 66 F0 | 	shl	local02, #24
03088     04 FA 05 F1 | 	add	objptr, #4
0308c     FD 70 02 FB | 	rdlong	local03, objptr
03090     10 70 66 F0 | 	shl	local03, #16
03094     38 6F 02 F1 | 	add	local02, local03
03098                 | ' 'debug(uhex_long(write_color))
03098                 | ' ncy:=cursor_y
03098     07 FA 85 F1 | 	sub	objptr, #7
0309c     FD 72 C2 FA | 	rdbyte	local04, objptr
030a0                 | ' ncx:=cursor_x+strsize(text)
030a0     01 FA 85 F1 | 	sub	objptr, #1
030a4     FD 74 C2 FA | 	rdbyte	local05, objptr
030a8     34 FA 85 F1 | 	sub	objptr, #52
030ac     36 5F 02 F6 | 	mov	arg01, local01
030b0     00 76 06 F6 | 	mov	local06, #0
030b4     58 CF 9F FE | 	loc	pa,	#(@LR__0091-@LR__0090)
030b8     93 00 A0 FD | 	call	#FCACHE_LOAD_
030bc                 | LR__0090
030bc     2F 79 CA FA | 	rdbyte	local07, arg01 wz
030c0     01 76 06 51 |  if_ne	add	local06, #1
030c4     01 5E 06 51 |  if_ne	add	arg01, #1
030c8     F0 FF 9F 5D |  if_ne	jmp	#LR__0090
030cc                 | LR__0091
030cc     3B 19 02 F6 | 	mov	result1, local06
030d0     3B 75 02 F1 | 	add	local05, local06
030d4     3A 7B 02 F6 | 	mov	local08, local05
030d8     54 CF 9F FE | 	loc	pa,	#(@LR__0093-@LR__0092)
030dc     93 00 A0 FD | 	call	#FCACHE_LOAD_
030e0                 | ' repeat while ncx>cpl-1
030e0                 | LR__0092
030e0     90 FA 05 F1 | 	add	objptr, #144
030e4     FD 74 02 FB | 	rdlong	local05, objptr
030e8     90 FA 85 F1 | 	sub	objptr, #144
030ec     01 74 86 F1 | 	sub	local05, #1
030f0     3A 7B 5A F2 | 	cmps	local08, local05 wcz
030f4     18 00 90 ED |  if_be	jmp	#LR__0094
030f8                 | '   ncx-=cpl
030f8     90 FA 05 F1 | 	add	objptr, #144
030fc     FD 7C 02 FB | 	rdlong	local09, objptr
03100     90 FA 85 F1 | 	sub	objptr, #144
03104     3E 7B 82 F1 | 	sub	local08, local09
03108                 | '   ncy+=1
03108     01 72 06 F1 | 	add	local04, #1
0310c     D0 FF 9F FD | 	jmp	#LR__0092
03110                 | LR__0093
03110                 | LR__0094
03110                 | ' repeat while ncy>lines-1
03110                 | LR__0095
03110     94 FA 05 F1 | 	add	objptr, #148
03114     FD 74 02 FB | 	rdlong	local05, objptr
03118     94 FA 85 F1 | 	sub	objptr, #148
0311c     01 74 86 F1 | 	sub	local05, #1
03120     3A 73 5A F2 | 	cmps	local04, local05 wcz
03124     20 00 90 ED |  if_be	jmp	#LR__0096
03128                 | '   ncy-=1
03128     01 72 86 F1 | 	sub	local04, #1
0312c                 | '   scrollup()
0312c     2C 01 B0 FD | 	call	#_hng030rm_spin2_scrollup
03130                 | '   cursor_y-=1
03130     35 FA 05 F1 | 	add	objptr, #53
03134     FD 74 C2 FA | 	rdbyte	local05, objptr
03138     01 74 86 F1 | 	sub	local05, #1
0313c     FD 74 42 FC | 	wrbyte	local05, objptr
03140     35 FA 85 F1 | 	sub	objptr, #53
03144     C8 FF 9F FD | 	jmp	#LR__0095
03148                 | LR__0096
03148                 | ' 
03148                 | ' repeat iii from 0 to strsize(text)-1
03148     00 7E 06 F6 | 	mov	local10, #0
0314c     36 5F 02 F6 | 	mov	arg01, local01
03150     00 76 06 F6 | 	mov	local06, #0
03154     B8 CE 9F FE | 	loc	pa,	#(@LR__0098-@LR__0097)
03158     93 00 A0 FD | 	call	#FCACHE_LOAD_
0315c                 | LR__0097
0315c     2F 79 CA FA | 	rdbyte	local07, arg01 wz
03160     01 76 06 51 |  if_ne	add	local06, #1
03164     01 5E 06 51 |  if_ne	add	arg01, #1
03168     F0 FF 9F 5D |  if_ne	jmp	#LR__0097
0316c                 | LR__0098
0316c     3B 19 02 F6 | 	mov	result1, local06
03170     0C 81 02 F6 | 	mov	local11, result1
03174     01 80 86 F1 | 	sub	local11, #1
03178     00 80 5E F2 | 	cmps	local11, #0 wcz
0317c     01 70 06 16 |  if_a	mov	local03, #1
03180     01 70 66 E6 |  if_be	neg	local03, #1
03184     38 81 02 F1 | 	add	local11, local03
03188     04 CF 9F FE | 	loc	pa,	#(@LR__0100-@LR__0099)
0318c     93 00 A0 FD | 	call	#FCACHE_LOAD_
03190                 | LR__0099
03190                 | ' 
03190                 | '   long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)]:=long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)] &$FFFF | c
03190     FD 82 02 FB | 	rdlong	local12, objptr
03194     90 FA 05 F1 | 	add	objptr, #144
03198     FD 84 02 FB | 	rdlong	local13, objptr
0319c     5B FA 85 F1 | 	sub	objptr, #91
031a0     FD 86 C2 FA | 	rdbyte	local14, objptr
031a4     43 85 02 FD | 	qmul	local13, local14
031a8     18 88 62 FD | 	getqx	local15
031ac     01 FA 85 F1 | 	sub	objptr, #1
031b0     FD 8A C2 FA | 	rdbyte	local16, objptr
031b4     34 FA 85 F1 | 	sub	objptr, #52
031b8     45 89 02 F1 | 	add	local15, local16
031bc     3F 89 02 F1 | 	add	local15, local10
031c0     02 88 66 F0 | 	shl	local15, #2
031c4     44 83 02 F1 | 	add	local12, local15
031c8     41 8D 02 FB | 	rdlong	local17, local12
031cc     7F 00 00 FF 
031d0     FF 8D 06 F5 | 	and	local17, ##65535
031d4     37 8D 42 F5 | 	or	local17, local02
031d8     FD 8E 02 FB | 	rdlong	local18, objptr
031dc     90 FA 05 F1 | 	add	objptr, #144
031e0     FD 90 02 FB | 	rdlong	local19, objptr
031e4     5B FA 85 F1 | 	sub	objptr, #91
031e8     FD 92 C2 FA | 	rdbyte	local20, objptr
031ec     49 91 02 FD | 	qmul	local19, local20
031f0     18 94 62 FD | 	getqx	local21
031f4     01 FA 85 F1 | 	sub	objptr, #1
031f8     FD 96 C2 FA | 	rdbyte	local22, objptr
031fc     34 FA 85 F1 | 	sub	objptr, #52
03200     4B 95 02 F1 | 	add	local21, local22
03204     3F 95 02 F1 | 	add	local21, local10
03208     02 94 66 F0 | 	shl	local21, #2
0320c     4A 8F 02 F1 | 	add	local18, local21
03210     47 8D 62 FC | 	wrlong	local17, local18
03214     38 7F 02 F1 | 	add	local10, local03
03218     40 7F 0A F2 | 	cmp	local10, local11 wz
0321c     70 FF 9F 5D |  if_ne	jmp	#LR__0099
03220                 | LR__0100
03220                 | ' 
03220                 | ' outtextxy(cursor_x,cursor_y,text)
03220     34 FA 05 F1 | 	add	objptr, #52
03224     FD 5E C2 FA | 	rdbyte	arg01, objptr
03228     01 FA 05 F1 | 	add	objptr, #1
0322c     FD 60 C2 FA | 	rdbyte	arg02, objptr
03230     35 FA 85 F1 | 	sub	objptr, #53
03234     36 63 02 F6 | 	mov	arg03, local01
03238     D0 FB BF FD | 	call	#_hng030rm_spin2_outtextxy
0323c                 | ' 
0323c                 | ' cursor_x:=ncx
0323c     34 FA 05 F1 | 	add	objptr, #52
03240     FD 7A 42 FC | 	wrbyte	local08, objptr
03244                 | ' cursor_y:=ncy
03244     01 FA 05 F1 | 	add	objptr, #1
03248     FD 72 42 FC | 	wrbyte	local04, objptr
0324c     35 FA 85 F1 | 	sub	objptr, #53
03250     AF F0 03 F6 | 	mov	ptra, fp
03254     BA 00 A0 FD | 	call	#popregs_
03258                 | _hng030rm_spin2_write_ret
03258     2D 00 64 FD | 	ret
0325c                 | 
0325c                 | ' 
0325c                 | ' ''-----------  Scroll the screen one line up
0325c                 | ' 
0325c                 | ' pub scrollup() | i
0325c                 | _hng030rm_spin2_scrollup
0325c     0D 5A 05 F6 | 	mov	COUNT_, #13
03260     B0 00 A0 FD | 	call	#pushregs_
03264                 | ' 
03264                 | ' longmove(buf_ptr,buf_ptr+4*cpl,buflen-cpl)
03264     FD 5E 02 FB | 	rdlong	arg01, objptr
03268     2F 61 02 F6 | 	mov	arg02, arg01
0326c     90 FA 05 F1 | 	add	objptr, #144
03270     FD 6C 02 FB | 	rdlong	local01, objptr
03274     02 6C 66 F0 | 	shl	local01, #2
03278     36 61 02 F1 | 	add	arg02, local01
0327c     60 FA 85 F1 | 	sub	objptr, #96
03280     FD 62 02 FB | 	rdlong	arg03, objptr
03284     60 FA 05 F1 | 	add	objptr, #96
03288     FD 6E 02 FB | 	rdlong	local02, objptr
0328c     90 FA 85 F1 | 	sub	objptr, #144
03290     37 63 82 F1 | 	sub	arg03, local02
03294     F8 39 B0 FD | 	call	#__system__longmove
03298                 | ' repeat i from buflen-cpl to buflen-1
03298     30 FA 05 F1 | 	add	objptr, #48
0329c     FD 70 02 FB | 	rdlong	local03, objptr
032a0     60 FA 05 F1 | 	add	objptr, #96
032a4     FD 72 02 FB | 	rdlong	local04, objptr
032a8     39 71 82 F1 | 	sub	local03, local04
032ac     60 FA 85 F1 | 	sub	objptr, #96
032b0     FD 74 02 FB | 	rdlong	local05, objptr
032b4     01 74 86 F1 | 	sub	local05, #1
032b8     FD 76 02 FB | 	rdlong	local06, objptr
032bc     60 FA 05 F1 | 	add	objptr, #96
032c0     FD 78 02 FB | 	rdlong	local07, objptr
032c4     90 FA 85 F1 | 	sub	objptr, #144
032c8     3C 77 82 F1 | 	sub	local06, local07
032cc     3B 75 5A F2 | 	cmps	local05, local06 wcz
032d0     01 7A 06 16 |  if_a	mov	local08, #1
032d4     01 7A 66 E6 |  if_be	neg	local08, #1
032d8     3D 75 02 F1 | 	add	local05, local08
032dc     60 CD 9F FE | 	loc	pa,	#(@LR__0102-@LR__0101)
032e0     93 00 A0 FD | 	call	#FCACHE_LOAD_
032e4                 | LR__0101
032e4                 | '   long[buf_ptr+4*i]:=(long[buf_ptr+4*i] & $FFFF0000) | 32
032e4     FD 7C 02 FB | 	rdlong	local09, objptr
032e8     38 7F 02 F6 | 	mov	local10, local03
032ec     02 7E 66 F0 | 	shl	local10, #2
032f0     3F 7D 02 F1 | 	add	local09, local10
032f4     3E 81 02 FB | 	rdlong	local11, local09
032f8     80 FF 7F FF 
032fc     00 80 06 F5 | 	and	local11, ##-65536
03300     20 80 46 F5 | 	or	local11, #32
03304     FD 82 02 FB | 	rdlong	local12, objptr
03308     38 85 02 F6 | 	mov	local13, local03
0330c     02 84 66 F0 | 	shl	local13, #2
03310     42 83 02 F1 | 	add	local12, local13
03314     41 81 62 FC | 	wrlong	local11, local12
03318     3D 71 02 F1 | 	add	local03, local08
0331c     3A 71 0A F2 | 	cmp	local03, local05 wz
03320     C0 FF 9F 5D |  if_ne	jmp	#LR__0101
03324                 | LR__0102
03324     AF F0 03 F6 | 	mov	ptra, fp
03328     BA 00 A0 FD | 	call	#popregs_
0332c                 | _hng030rm_spin2_scrollup_ret
0332c     2D 00 64 FD | 	ret
03330                 | 
03330                 | ' 
03330                 | ' ''----------- Set cursor at the first character in a new line, scroll if needed
03330                 | ' 
03330                 | ' pub crlf()
03330                 | _hng030rm_spin2_crlf
03330     02 5A 05 F6 | 	mov	COUNT_, #2
03334     B0 00 A0 FD | 	call	#pushregs_
03338                 | ' 
03338                 | ' cursor_x:=0
03338     34 FA 05 F1 | 	add	objptr, #52
0333c     FD 00 48 FC | 	wrbyte	#0, objptr
03340                 | ' cursor_y+=1
03340     01 FA 05 F1 | 	add	objptr, #1
03344     FD 6C C2 FA | 	rdbyte	local01, objptr
03348     01 6C 06 F1 | 	add	local01, #1
0334c     FD 6C 42 FC | 	wrbyte	local01, objptr
03350                 | ' if cursor_y>lines-1
03350     5F FA 05 F1 | 	add	objptr, #95
03354     FD 6C 02 FB | 	rdlong	local01, objptr
03358     01 6C 86 F1 | 	sub	local01, #1
0335c     5F FA 85 F1 | 	sub	objptr, #95
03360     FD 6E C2 FA | 	rdbyte	local02, objptr
03364     35 FA 85 F1 | 	sub	objptr, #53
03368     36 6F 5A F2 | 	cmps	local02, local01 wcz
0336c     1C 00 90 ED |  if_be	jmp	#LR__0103
03370                 | '   scrollup()
03370     E8 FE BF FD | 	call	#_hng030rm_spin2_scrollup
03374                 | '   cursor_y:=lines-1
03374     94 FA 05 F1 | 	add	objptr, #148
03378     FD 6C 02 FB | 	rdlong	local01, objptr
0337c     01 6C 86 F1 | 	sub	local01, #1
03380     5F FA 85 F1 | 	sub	objptr, #95
03384     FD 6C 42 FC | 	wrbyte	local01, objptr
03388     35 FA 85 F1 | 	sub	objptr, #53
0338c                 | LR__0103
0338c     AF F0 03 F6 | 	mov	ptra, fp
03390     BA 00 A0 FD | 	call	#popregs_
03394                 | _hng030rm_spin2_crlf_ret
03394     2D 00 64 FD | 	ret
03398                 | 
03398                 | ' 
03398                 | ' 
03398                 | ' 
03398                 | ' pub inttostr2(i,d):result |q,pos,k,j
03398                 | _hng030rm_spin2_inttostr2
03398                 | ' 
03398                 | ' j:=i
03398                 | ' pos:=d-1
03398     30 1F 02 F6 | 	mov	_var01, arg02
0339c     01 1E 86 F1 | 	sub	_var01, #1
033a0                 | ' k:=0
033a0                 | ' 
033a0                 | ' n_string[d]:=0
033a0     30 21 02 F6 | 	mov	_var02, arg02
033a4     44 FA 05 F1 | 	add	objptr, #68
033a8     FD 22 02 F6 | 	mov	_var03, objptr
033ac     FD 20 02 F1 | 	add	_var02, objptr
033b0     10 01 48 FC | 	wrbyte	#0, _var02
033b4                 | ' repeat k from 0 to d-1
033b4     00 24 06 F6 | 	mov	_var04, #0
033b8     01 60 86 F1 | 	sub	arg02, #1
033bc     30 27 02 F6 | 	mov	_var05, arg02
033c0     00 26 5E F2 | 	cmps	_var05, #0 wcz
033c4     44 FA 85 F1 | 	sub	objptr, #68
033c8     01 22 06 16 |  if_a	mov	_var03, #1
033cc     01 22 66 E6 |  if_be	neg	_var03, #1
033d0     11 27 02 F1 | 	add	_var05, _var03
033d4     48 CC 9F FE | 	loc	pa,	#(@LR__0105-@LR__0104)
033d8     93 00 A0 FD | 	call	#FCACHE_LOAD_
033dc                 | LR__0104
033dc                 | '   n_string[k]:=48
033dc     12 29 02 F6 | 	mov	_var06, _var04
033e0     44 FA 05 F1 | 	add	objptr, #68
033e4     FD 28 02 F1 | 	add	_var06, objptr
033e8     14 61 48 FC | 	wrbyte	#48, _var06
033ec     11 25 02 F1 | 	add	_var04, _var03
033f0     13 25 0A F2 | 	cmp	_var04, _var05 wz
033f4     44 FA 85 F1 | 	sub	objptr, #68
033f8     E0 FF 9F 5D |  if_ne	jmp	#LR__0104
033fc                 | LR__0105
033fc                 | ' 
033fc                 | ' if (j<>0)
033fc     00 5E 0E F2 | 	cmp	arg01, #0 wz
03400     40 00 90 AD |  if_e	jmp	#LR__0108
03404                 | ' 
03404                 | '   repeat while (pos>-1)
03404                 | LR__0106
03404     FF FF 7F FF 
03408     FF 1F 5E F2 | 	cmps	_var01, ##-1 wcz
0340c     34 00 90 ED |  if_be	jmp	#LR__0107
03410                 | '     q:=j+//10
03410     2F 99 02 F6 | 	mov	muldiva_, arg01
03414     0A 9A 06 F6 | 	mov	muldivb_, #10
03418     C2 00 A0 FD | 	call	#unsdivide_
0341c                 | '     q:=48+q
0341c     30 2A 06 F6 | 	mov	_var07, #48
03420     4C 2B 02 F1 | 	add	_var07, muldiva_
03424                 | '     n_string[pos]:=q
03424     0F 61 02 F6 | 	mov	arg02, _var01
03428     44 FA 05 F1 | 	add	objptr, #68
0342c     FD 60 02 F1 | 	add	arg02, objptr
03430     30 2B 42 FC | 	wrbyte	_var07, arg02
03434                 | '     j:=j+/10
03434     4D 5F 02 F6 | 	mov	arg01, muldivb_
03438                 | '     pos-=1
03438     01 1E 86 F1 | 	sub	_var01, #1
0343c     44 FA 85 F1 | 	sub	objptr, #68
03440     C0 FF 9F FD | 	jmp	#LR__0106
03444                 | LR__0107
03444                 | LR__0108
03444                 | ' 
03444                 | ' 
03444                 | ' q:=@n_string
03444     44 FA 05 F1 | 	add	objptr, #68
03448     FD 18 02 F6 | 	mov	result1, objptr
0344c     44 FA 85 F1 | 	sub	objptr, #68
03450                 | ' return q
03450                 | _hng030rm_spin2_inttostr2_ret
03450     2D 00 64 FD | 	ret
03454                 | 
03454                 | ' 
03454                 | ' pub plot(x,y,c)
03454                 | _hng030rm_spin2_plot
03454     04 5A 05 F6 | 	mov	COUNT_, #4
03458     B0 00 A0 FD | 	call	#pushregs_
0345c                 | ' putpixel(x,y,c)
0345c     D8 FA 05 F1 | 	add	objptr, #216
03460     FD 6C 02 FB | 	rdlong	local01, objptr
03464     D8 FA 85 F1 | 	sub	objptr, #216
03468     36 6F 02 FB | 	rdlong	local02, local01
0346c     04 6C 06 F1 | 	add	local01, #4
03470     36 71 02 FB | 	rdlong	local03, local01
03474     FD 72 02 F6 | 	mov	local04, objptr
03478     37 FB 01 F6 | 	mov	objptr, local02
0347c     2D 70 62 FD | 	call	local03
03480     39 FB 01 F6 | 	mov	objptr, local04
03484     AF F0 03 F6 | 	mov	ptra, fp
03488     BA 00 A0 FD | 	call	#popregs_
0348c                 | _hng030rm_spin2_plot_ret
0348c     2D 00 64 FD | 	ret
03490                 | 
03490                 | ' 
03490                 | ' '*************************************************************************
03490                 | ' '                                                                        *
03490                 | ' '  Mode setting and driver start                                                          *
03490                 | ' '                                                                        *
03490                 | ' '*************************************************************************
03490                 | ' 
03490                 | ' ''---------  Set the graphics mode
03490                 | ' 
03490                 | ' 
03490                 | ' 
03490                 | ' pub setmode(mode) | i', 'xzoom, yzoom, azoom
03490                 | _hng030rm_spin2_setmode
03490     0A 5A 05 F6 | 	mov	COUNT_, #10
03494     B0 00 A0 FD | 	call	#pushregs_
03498     2F 6D 02 F6 | 	mov	local01, arg01
0349c                 | ' 
0349c                 | ' '' mode:tn_bb_cc_vv_hh
0349c                 | ' '' hh - h.zoom, vv-v.zoom, cc-c.depth,
0349c                 | ' '' bb - borders/total pixels, 00-wide/1140, 01 medium/1026, 10 narrow/912, 11 no border, 1024 px PAL, 880 px NTSC
0349c                 | ' 
0349c                 | ' if mode==(512+192+48)
0349c     01 00 00 FF 
034a0     F0 6C 0E F2 | 	cmp	local01, ##752 wz
034a4                 | '   return 'no RAM
034a4     C0 05 90 AD |  if_e	jmp	#LR__0131
034a8                 | ' 
034a8                 | ' case_fast (mode>>6) & 7 ' timings are the same for graphic and text
034a8     36 6F 02 F6 | 	mov	local02, local01
034ac     06 6E 46 F0 | 	shr	local02, #6
034b0     07 6E 06 F5 | 	and	local02, #7
034b4     08 6E 26 F3 | 	fle	local02, #8
034b8     37 71 02 F6 | 	mov	local03, local02
034bc     30 70 62 FD | 	jmprel	local03
034c0                 | LR__0109
034c0     20 00 90 FD | 	jmp	#LR__0110
034c4     48 00 90 FD | 	jmp	#LR__0111
034c8     70 00 90 FD | 	jmp	#LR__0112
034cc     98 00 90 FD | 	jmp	#LR__0113
034d0     C0 00 90 FD | 	jmp	#LR__0114
034d4     E8 00 90 FD | 	jmp	#LR__0115
034d8     10 01 90 FD | 	jmp	#LR__0116
034dc     38 01 90 FD | 	jmp	#LR__0117
034e0     68 01 90 FD | 	jmp	#LR__0118
034e4                 | LR__0110
034e4                 | ' 
034e4                 | '     0:  longmove(@timings,@timings000,16)   'PAL 50 Hz signaling 1140x624, active 800x480, 100x30 text, wide border, 2 colors per pixel, 00_00_00_00_00=0, 354_693_878 Hz
034e4     50 FA 05 F1 | 	add	objptr, #80
034e8     FD 5E 02 F6 | 	mov	arg01, objptr
034ec     50 FA 85 F1 | 	sub	objptr, #80
034f0     0E 00 00 FF 
034f4     58 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7256
034f8     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
034fc     0E 00 00 FF 
03500     58 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7256
03504     10 62 06 F6 | 	mov	arg03, #16
03508     84 37 B0 FD | 	call	#__system__longmove
0350c     3C 01 90 FD | 	jmp	#LR__0118
03510                 | LR__0111
03510                 | '     1:  longmove(@timings,@timings064,16)   'PAL 50 Hz signaling 1026x624, active 880x496, 110x31 text, medium border, 2 colors per pixel 00_01_00_00_00=64, 319_215_686 Hz
03510     50 FA 05 F1 | 	add	objptr, #80
03514     FD 5E 02 F6 | 	mov	arg01, objptr
03518     50 FA 85 F1 | 	sub	objptr, #80
0351c     0E 00 00 FF 
03520     98 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7320
03524     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03528     0E 00 00 FF 
0352c     98 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7320
03530     10 62 06 F6 | 	mov	arg03, #16
03534     58 37 B0 FD | 	call	#__system__longmove
03538     10 01 90 FD | 	jmp	#LR__0118
0353c                 | LR__0112
0353c                 | '     2:  longmove(@timings,@timings128,16)   'PAL 50 Hz signaling 912x624, active 800x480, 100x30 text, medium border, 2 colors per pixel 00_10_00_00_00=64, 283750000z
0353c     50 FA 05 F1 | 	add	objptr, #80
03540     FD 5E 02 F6 | 	mov	arg01, objptr
03544     50 FA 85 F1 | 	sub	objptr, #80
03548     0E 00 00 FF 
0354c     D8 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7384
03550     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03554     0E 00 00 FF 
03558     D8 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7384
0355c     10 62 06 F6 | 	mov	arg03, #16
03560     2C 37 B0 FD | 	call	#__system__longmove
03564     E4 00 90 FD | 	jmp	#LR__0118
03568                 | LR__0113
03568                 | '     3:  longmove(@timings,@timings192,16)   'PAL 50 Hz signaling 1140x624, active 1024x576, 128x36 text, borderless, 2 colors per pixel 00_11_00_00_00=6192, 354_693_878 Hz
03568     50 FA 05 F1 | 	add	objptr, #80
0356c     FD 5E 02 F6 | 	mov	arg01, objptr
03570     50 FA 85 F1 | 	sub	objptr, #80
03574     0E 00 00 FF 
03578     18 07 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7448
0357c     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03580     0E 00 00 FF 
03584     18 07 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7448
03588     10 62 06 F6 | 	mov	arg03, #16
0358c     00 37 B0 FD | 	call	#__system__longmove
03590     B8 00 90 FD | 	jmp	#LR__0118
03594                 | LR__0114
03594                 | '     4:  longmove(@timings,@timings256,16)   'NTSC 50 Hz signaling 1140x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_00_00_00_00=256, 357959184 Hz
03594     50 FA 05 F1 | 	add	objptr, #80
03598     FD 5E 02 F6 | 	mov	arg01, objptr
0359c     50 FA 85 F1 | 	sub	objptr, #80
035a0     0E 00 00 FF 
035a4     58 07 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7512
035a8     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
035ac     0E 00 00 FF 
035b0     58 07 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7512
035b4     10 62 06 F6 | 	mov	arg03, #16
035b8     D4 36 B0 FD | 	call	#__system__longmove
035bc     8C 00 90 FD | 	jmp	#LR__0118
035c0                 | LR__0115
035c0                 | '     5:  longmove(@timings,@timings320,16)   'NTSC 50 Hz signaling 1026x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_01_00_00_00=320, 322162162 Hz
035c0     50 FA 05 F1 | 	add	objptr, #80
035c4     FD 5E 02 F6 | 	mov	arg01, objptr
035c8     50 FA 85 F1 | 	sub	objptr, #80
035cc     0E 00 00 FF 
035d0     98 07 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7576
035d4     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
035d8     0E 00 00 FF 
035dc     98 07 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7576
035e0     10 62 06 F6 | 	mov	arg03, #16
035e4     A8 36 B0 FD | 	call	#__system__longmove
035e8     60 00 90 FD | 	jmp	#LR__0118
035ec                 | LR__0116
035ec                 | '     6:  longmove(@timings,@timings384,16)   'NTSC 50 Hz signaling 912x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_10_00_00_00=384, 286363636 Hz
035ec     50 FA 05 F1 | 	add	objptr, #80
035f0     FD 5E 02 F6 | 	mov	arg01, objptr
035f4     50 FA 85 F1 | 	sub	objptr, #80
035f8     0E 00 00 FF 
035fc     D8 07 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7640
03600     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03604     0E 00 00 FF 
03608     D8 07 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7640
0360c     10 62 06 F6 | 	mov	arg03, #16
03610     7C 36 B0 FD | 	call	#__system__longmove
03614     34 00 90 FD | 	jmp	#LR__0118
03618                 | LR__0117
03618                 | '     7:  longmove(@timings,@timings448,16)   'NTSC 50 Hz signaling 1026x524, active 880x496, 110x31 text, borderless, 2 colors per pixel, 01_11_00_00_00=496, 322162162 Hz
03618     50 FA 05 F1 | 	add	objptr, #80
0361c     FD 72 02 F6 | 	mov	local04, objptr
03620     0F 00 00 FF 
03624     18 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7704
03628     03 75 02 F6 | 	mov	local05, ptr__hng030rm_spin2_dat__
0362c     10 76 06 F6 | 	mov	local06, #16
03630     39 5F 02 F6 | 	mov	arg01, local04
03634     3A 61 02 F6 | 	mov	arg02, local05
03638     10 62 06 F6 | 	mov	arg03, #16
0363c     50 FA 85 F1 | 	sub	objptr, #80
03640     0F 00 00 FF 
03644     18 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7704
03648     44 36 B0 FD | 	call	#__system__longmove
0364c                 | LR__0118
0364c                 | ' 
0364c                 | ' ' 4-bit graphics: do nothing with timings :)
0364c                 | ' if mode<512
0364c     01 00 00 FF 
03650     00 6C 5E F2 | 	cmps	local01, ##512 wcz
03654     1C 00 90 3D |  if_ae	jmp	#LR__0119
03658                 | '   palette_ptr:=@ataripalette
03658     0C 00 00 FF 
0365c     58 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
03660     18 FA 05 F1 | 	add	objptr, #24
03664     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
03668     18 FA 85 F1 | 	sub	objptr, #24
0366c     0C 00 00 FF 
03670     58 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
03674                 | LR__0119
03674                 | ' 
03674                 | ' if (mode & (%10_00_11_0000))==(%10_00_11_0000) ' 8bit graphics, 4 pixels per long instead of 8, cpp x2
03674     36 6F 02 F6 | 	mov	local02, local01
03678     01 00 00 FF 
0367c     30 6E 06 F5 | 	and	local02, ##560
03680     01 00 00 FF 
03684     30 6E 0E F2 | 	cmp	local02, ##560 wz
03688     44 00 90 5D |  if_ne	jmp	#LR__0120
0368c                 | '   timings[5]:=4
0368c     64 FA 05 F1 | 	add	objptr, #100
03690     FD 08 68 FC | 	wrlong	#4, objptr
03694                 | '   timings[11]:=timings[11]<<1
03694     18 FA 05 F1 | 	add	objptr, #24
03698     FD 6E 02 FB | 	rdlong	local02, objptr
0369c     01 6E 66 F0 | 	shl	local02, #1
036a0     FD 6E 62 FC | 	wrlong	local02, objptr
036a4                 | '   putpixel:=p8
036a4     6C FA 05 F1 | 	add	objptr, #108
036a8     FD 6E 02 FB | 	rdlong	local02, objptr
036ac     10 FA 85 F1 | 	sub	objptr, #16
036b0     FD 6E 62 FC | 	wrlong	local02, objptr
036b4                 | '   palette_ptr:=@ataripalette
036b4     0C 00 00 FF 
036b8     58 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
036bc     C0 FA 85 F1 | 	sub	objptr, #192
036c0     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
036c4     18 FA 85 F1 | 	sub	objptr, #24
036c8     0C 00 00 FF 
036cc     58 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
036d0                 | LR__0120
036d0                 | ' 
036d0                 | ' if (mode & (%10_00_11_0000))==(%10_00_01_0000) ' 2bit graphics, 16 pixels per long instead of 8, cpp /2
036d0     36 6F 02 F6 | 	mov	local02, local01
036d4     01 00 00 FF 
036d8     30 6E 06 F5 | 	and	local02, ##560
036dc     01 00 00 FF 
036e0     10 6E 0E F2 | 	cmp	local02, ##528 wz
036e4     44 00 90 5D |  if_ne	jmp	#LR__0121
036e8                 | '   timings[5]:=16
036e8     64 FA 05 F1 | 	add	objptr, #100
036ec     FD 20 68 FC | 	wrlong	#16, objptr
036f0                 | '   timings[11]:=timings[11]>>1
036f0     18 FA 05 F1 | 	add	objptr, #24
036f4     FD 6E 02 FB | 	rdlong	local02, objptr
036f8     01 6E 46 F0 | 	shr	local02, #1
036fc     FD 6E 62 FC | 	wrlong	local02, objptr
03700                 | '   putpixel:=p2
03700     64 FA 05 F1 | 	add	objptr, #100
03704     FD 6E 02 FB | 	rdlong	local02, objptr
03708     08 FA 85 F1 | 	sub	objptr, #8
0370c     FD 6E 62 FC | 	wrlong	local02, objptr
03710                 | '   palette_ptr:=@fourcolors
03710     0C 00 00 FF 
03714     08 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6152
03718     C0 FA 85 F1 | 	sub	objptr, #192
0371c     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
03720     18 FA 85 F1 | 	sub	objptr, #24
03724     0C 00 00 FF 
03728     08 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6152
0372c                 | LR__0121
0372c                 | ' 
0372c                 | ' if (mode & (%10_00_11_0000))==(%10_00_00_0000) ' 1bit graphics, 32 pixels per long instead of 8, cpp /4
0372c     36 6F 02 F6 | 	mov	local02, local01
03730     01 00 00 FF 
03734     30 6E 06 F5 | 	and	local02, ##560
03738     01 00 00 FF 
0373c     00 6E 0E F2 | 	cmp	local02, ##512 wz
03740     44 00 90 5D |  if_ne	jmp	#LR__0122
03744                 | '   timings[5]:=32
03744     64 FA 05 F1 | 	add	objptr, #100
03748     FD 40 68 FC | 	wrlong	#32, objptr
0374c                 | '   timings[11]:=timings[11]>>2
0374c     18 FA 05 F1 | 	add	objptr, #24
03750     FD 6E 02 FB | 	rdlong	local02, objptr
03754     02 6E 46 F0 | 	shr	local02, #2
03758     FD 6E 62 FC | 	wrlong	local02, objptr
0375c                 | '   putpixel:=p1
0375c     60 FA 05 F1 | 	add	objptr, #96
03760     FD 6E 02 FB | 	rdlong	local02, objptr
03764     04 FA 85 F1 | 	sub	objptr, #4
03768     FD 6E 62 FC | 	wrlong	local02, objptr
0376c                 | '   palette_ptr:=@twocolors
0376c     0C 00 00 FF 
03770     00 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6144
03774     C0 FA 85 F1 | 	sub	objptr, #192
03778     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
0377c     18 FA 85 F1 | 	sub	objptr, #24
03780     0C 00 00 FF 
03784     00 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6144
03788                 | LR__0122
03788                 | ' 
03788                 | ' if (mode & (%10_00_11_0000))==(%10_00_10_0000) ' 4bit graphics,
03788     36 6F 02 F6 | 	mov	local02, local01
0378c     01 00 00 FF 
03790     30 6E 06 F5 | 	and	local02, ##560
03794     01 00 00 FF 
03798     20 6E 0E F2 | 	cmp	local02, ##544 wz
0379c     2C 00 90 5D |  if_ne	jmp	#LR__0123
037a0                 | '   putpixel:=p4
037a0     E4 FA 05 F1 | 	add	objptr, #228
037a4     FD 6E 02 FB | 	rdlong	local02, objptr
037a8     0C FA 85 F1 | 	sub	objptr, #12
037ac     FD 6E 62 FC | 	wrlong	local02, objptr
037b0                 | '   palette_ptr:=@vga16
037b0     0C 00 00 FF 
037b4     18 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6168
037b8     C0 FA 85 F1 | 	sub	objptr, #192
037bc     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
037c0     18 FA 85 F1 | 	sub	objptr, #24
037c4     0C 00 00 FF 
037c8     18 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6168
037cc                 | LR__0123
037cc                 | ' 
037cc                 | ' repeat i from 0 to 4
037cc     00 78 06 F6 | 	mov	local07, #0
037d0     88 C8 9F FE | 	loc	pa,	#(@LR__0125-@LR__0124)
037d4     93 00 A0 FD | 	call	#FCACHE_LOAD_
037d8                 | LR__0124
037d8                 | '   timings[i]:=timings[i]+hdmibase<<17+ timingsxxt
037d8     3C 73 02 F6 | 	mov	local04, local07
037dc     02 72 66 F0 | 	shl	local04, #2
037e0     50 FA 05 F1 | 	add	objptr, #80
037e4     FD 74 02 F6 | 	mov	local05, objptr
037e8     FD 72 02 F1 | 	add	local04, objptr
037ec     2C FA 85 F1 | 	sub	objptr, #44
037f0     FD 7A 02 FB | 	rdlong	local08, objptr
037f4     3D 77 02 F6 | 	mov	local06, local08
037f8     11 76 66 F0 | 	shl	local06, #17
037fc     39 6F 02 FB | 	rdlong	local02, local04
03800     3B 6F 02 F1 | 	add	local02, local06
03804     80 40 38 FF 
03808     00 6E 06 F1 | 	add	local02, ##1887502336
0380c     3C 7D 02 F6 | 	mov	local09, local07
03810     02 7C 66 F0 | 	shl	local09, #2
03814     2C FA 05 F1 | 	add	objptr, #44
03818     FD 7E 02 F6 | 	mov	local10, objptr
0381c     FD 7C 02 F1 | 	add	local09, objptr
03820     3E 6F 62 FC | 	wrlong	local02, local09
03824     01 78 06 F1 | 	add	local07, #1
03828     05 78 5E F2 | 	cmps	local07, #5 wcz
0382c     50 FA 85 F1 | 	sub	objptr, #80
03830     A4 FF 9F CD |  if_b	jmp	#LR__0124
03834                 | LR__0125
03834                 | ' timings[5]:=timings[5]+hdmibase<<17
03834     24 FA 05 F1 | 	add	objptr, #36
03838     FD 72 02 FB | 	rdlong	local04, objptr
0383c     11 72 66 F0 | 	shl	local04, #17
03840     40 FA 05 F1 | 	add	objptr, #64
03844     FD 76 02 FB | 	rdlong	local06, objptr
03848     3B 6F 02 F6 | 	mov	local02, local06
0384c     39 6F 02 F1 | 	add	local02, local04
03850     FD 6E 62 FC | 	wrlong	local02, objptr
03854                 | ' clkfreq:=timings[13]
03854     20 FA 05 F1 | 	add	objptr, #32
03858     FD 6E 02 FB | 	rdlong	local02, objptr
0385c     14 6E 66 FC | 	wrlong	local02, #20
03860                 | ' hubset(timings[14])
03860     04 FA 05 F1 | 	add	objptr, #4
03864     FD 5E 02 FB | 	rdlong	arg01, objptr
03868     88 FA 85 F1 | 	sub	objptr, #136
0386c     00 5E 62 FD | 	hubset	arg01
03870                 | ' waitms(1)
03870     01 5E 06 F6 | 	mov	arg01, #1
03874     C4 36 B0 FD | 	call	#__system___waitms
03878                 | ' 
03878                 | ' 
03878                 | ' xzoom:=1<<(mode & 3)
03878     36 73 02 F6 | 	mov	local04, local01
0387c     03 72 06 F5 | 	and	local04, #3
03880     39 6F C2 F9 | 	decod	local02, local04
03884     CC FA 05 F1 | 	add	objptr, #204
03888     FD 6E 62 FC | 	wrlong	local02, objptr
0388c                 | ' 
0388c                 | ' if (xzoom==8) && (((mode>>4)&3)<>3)
0388c     37 73 02 F6 | 	mov	local04, local02
03890     CC FA 85 F1 | 	sub	objptr, #204
03894     08 72 0E F2 | 	cmp	local04, #8 wz
03898     24 00 90 5D |  if_ne	jmp	#LR__0126
0389c     36 75 02 F6 | 	mov	local05, local01
038a0     04 74 46 F0 | 	shr	local05, #4
038a4     03 74 06 F5 | 	and	local05, #3
038a8     03 74 0E F2 | 	cmp	local05, #3 wz
038ac     10 00 90 AD |  if_e	jmp	#LR__0126
038b0                 | '   xzoom:=4
038b0     04 6E 06 F6 | 	mov	local02, #4
038b4     CC FA 05 F1 | 	add	objptr, #204
038b8     FD 08 68 FC | 	wrlong	#4, objptr
038bc     CC FA 85 F1 | 	sub	objptr, #204
038c0                 | LR__0126
038c0                 | ' 
038c0                 | ' yzoom:=1<<((mode>>2) & 3)
038c0     36 73 02 F6 | 	mov	local04, local01
038c4     02 72 46 F0 | 	shr	local04, #2
038c8     03 72 06 F5 | 	and	local04, #3
038cc     39 6F C2 F9 | 	decod	local02, local04
038d0     D0 FA 05 F1 | 	add	objptr, #208
038d4     FD 6E 62 FC | 	wrlong	local02, objptr
038d8                 | ' azoom:=xzoom*yzoom
038d8     04 FA 85 F1 | 	sub	objptr, #4
038dc     FD 72 02 FB | 	rdlong	local04, objptr
038e0     04 FA 05 F1 | 	add	objptr, #4
038e4     FD 76 02 FB | 	rdlong	local06, objptr
038e8     3B 73 02 FD | 	qmul	local04, local06
038ec     18 6E 62 FD | 	getqx	local02
038f0     04 FA 05 F1 | 	add	objptr, #4
038f4     FD 6E 62 FC | 	wrlong	local02, objptr
038f8                 | ' 
038f8                 | ' cpl:=timings[11]
038f8     58 FA 85 F1 | 	sub	objptr, #88
038fc     FD 6E 02 FB | 	rdlong	local02, objptr
03900     14 FA 05 F1 | 	add	objptr, #20
03904     FD 6E 62 FC | 	wrlong	local02, objptr
03908     90 FA 85 F1 | 	sub	objptr, #144
0390c                 | ' if (mode<512)
0390c     01 00 00 FF 
03910     00 6C 5E F2 | 	cmps	local01, ##512 wcz
03914     60 00 90 3D |  if_ae	jmp	#LR__0127
03918                 | '   lines:=(timings[12]>>4)+/yzoom
03918     80 FA 05 F1 | 	add	objptr, #128
0391c     FD 98 02 FB | 	rdlong	muldiva_, objptr
03920     04 98 46 F0 | 	shr	muldiva_, #4
03924     50 FA 05 F1 | 	add	objptr, #80
03928     FD 9A 02 FB | 	rdlong	muldivb_, objptr
0392c     D0 FA 85 F1 | 	sub	objptr, #208
03930     C2 00 A0 FD | 	call	#unsdivide_
03934     94 FA 05 F1 | 	add	objptr, #148
03938     FD 9A 62 FC | 	wrlong	muldivb_, objptr
0393c                 | '   if ((timings[12]>>4)+//yzoom) <>0
0393c     14 FA 85 F1 | 	sub	objptr, #20
03940     FD 98 02 FB | 	rdlong	muldiva_, objptr
03944     04 98 46 F0 | 	shr	muldiva_, #4
03948     50 FA 05 F1 | 	add	objptr, #80
0394c     FD 9A 02 FB | 	rdlong	muldivb_, objptr
03950     D0 FA 85 F1 | 	sub	objptr, #208
03954     C2 00 A0 FD | 	call	#unsdivide_
03958     00 98 0E F2 | 	cmp	muldiva_, #0 wz
0395c     AC 00 90 AD |  if_e	jmp	#LR__0130
03960                 | '     lines +=1
03960     94 FA 05 F1 | 	add	objptr, #148
03964     FD 6E 02 FB | 	rdlong	local02, objptr
03968     01 6E 06 F1 | 	add	local02, #1
0396c     FD 6E 62 FC | 	wrlong	local02, objptr
03970     94 FA 85 F1 | 	sub	objptr, #148
03974                 | ' 
03974                 | ' else
03974     94 00 90 FD | 	jmp	#LR__0130
03978                 | LR__0127
03978                 | '   lines:=timings[12]/yzoom
03978     80 FA 05 F1 | 	add	objptr, #128
0397c     FD 98 02 FB | 	rdlong	muldiva_, objptr
03980     50 FA 05 F1 | 	add	objptr, #80
03984     FD 9A 02 FB | 	rdlong	muldivb_, objptr
03988     D0 FA 85 F1 | 	sub	objptr, #208
0398c     C6 00 A0 FD | 	call	#divide_
03990     94 FA 05 F1 | 	add	objptr, #148
03994     FD 9A 62 FC | 	wrlong	muldivb_, objptr
03998                 | '   if cpl//xzoom==0
03998     04 FA 85 F1 | 	sub	objptr, #4
0399c     FD 98 02 FB | 	rdlong	muldiva_, objptr
039a0     3C FA 05 F1 | 	add	objptr, #60
039a4     FD 9A 02 FB | 	rdlong	muldivb_, objptr
039a8     CC FA 85 F1 | 	sub	objptr, #204
039ac     C6 00 A0 FD | 	call	#divide_
039b0     00 98 0E F2 | 	cmp	muldiva_, #0 wz
039b4     28 00 90 5D |  if_ne	jmp	#LR__0128
039b8                 | '     cpl:=cpl/xzoom
039b8     90 FA 05 F1 | 	add	objptr, #144
039bc     FD 98 02 FB | 	rdlong	muldiva_, objptr
039c0     3C FA 05 F1 | 	add	objptr, #60
039c4     FD 9A 02 FB | 	rdlong	muldivb_, objptr
039c8     CC FA 85 F1 | 	sub	objptr, #204
039cc     C6 00 A0 FD | 	call	#divide_
039d0     90 FA 05 F1 | 	add	objptr, #144
039d4     FD 9A 62 FC | 	wrlong	muldivb_, objptr
039d8     90 FA 85 F1 | 	sub	objptr, #144
039dc                 | '   else
039dc     2C 00 90 FD | 	jmp	#LR__0129
039e0                 | LR__0128
039e0                 | '     cpl:=cpl/xzoom+1
039e0     90 FA 05 F1 | 	add	objptr, #144
039e4     FD 98 02 FB | 	rdlong	muldiva_, objptr
039e8     3C FA 05 F1 | 	add	objptr, #60
039ec     FD 9A 02 FB | 	rdlong	muldivb_, objptr
039f0     CC FA 85 F1 | 	sub	objptr, #204
039f4     C6 00 A0 FD | 	call	#divide_
039f8     4D 6F 02 F6 | 	mov	local02, muldivb_
039fc     01 6E 06 F1 | 	add	local02, #1
03a00     90 FA 05 F1 | 	add	objptr, #144
03a04     FD 6E 62 FC | 	wrlong	local02, objptr
03a08     90 FA 85 F1 | 	sub	objptr, #144
03a0c                 | LR__0129
03a0c                 | LR__0130
03a0c                 | ' 
03a0c                 | ' buflen:=(cpl*lines)
03a0c     90 FA 05 F1 | 	add	objptr, #144
03a10     FD 72 02 FB | 	rdlong	local04, objptr
03a14     04 FA 05 F1 | 	add	objptr, #4
03a18     FD 76 02 FB | 	rdlong	local06, objptr
03a1c     3B 73 02 FD | 	qmul	local04, local06
03a20     18 6E 62 FD | 	getqx	local02
03a24     64 FA 85 F1 | 	sub	objptr, #100
03a28     FD 6E 62 FC | 	wrlong	local02, objptr
03a2c                 | ' buf_ptr:=$80000-4*buflen
03a2c     37 73 02 F6 | 	mov	local04, local02
03a30     30 FA 85 F1 | 	sub	objptr, #48
03a34     02 72 66 F0 | 	shl	local04, #2
03a38     13 6E C6 F9 | 	decod	local02, #19
03a3c     39 6F 82 F1 | 	sub	local02, local04
03a40     FD 6E 62 FC | 	wrlong	local02, objptr
03a44                 | ' mode_ptr:=@timings
03a44     50 FA 05 F1 | 	add	objptr, #80
03a48     FD 6E 02 F6 | 	mov	local02, objptr
03a4c     3C FA 85 F1 | 	sub	objptr, #60
03a50     FD 6E 62 FC | 	wrlong	local02, objptr
03a54                 | ' graphmode:=mode
03a54     B0 FA 05 F1 | 	add	objptr, #176
03a58     FD 6C 62 FC | 	wrlong	local01, objptr
03a5c     C4 FA 85 F1 | 	sub	objptr, #196
03a60                 | ' makedl(mode)
03a60     36 5F 02 F6 | 	mov	arg01, local01
03a64     0C 00 B0 FD | 	call	#_hng030rm_spin2_makedl
03a68                 | LR__0131
03a68     AF F0 03 F6 | 	mov	ptra, fp
03a6c     BA 00 A0 FD | 	call	#popregs_
03a70                 | _hng030rm_spin2_setmode_ret
03a70     2D 00 64 FD | 	ret
03a74                 | 
03a74                 | ' 
03a74                 | ' 
03a74                 | ' 
03a74                 | ' 
03a74                 | ' '---------- Make a display list
03a74                 | ' 
03a74                 | ' pub makedl (mode) |i, fontline2,charline,bufstart,zoom1,vzoom,lpc,hzoom
03a74                 | _hng030rm_spin2_makedl
03a74                 | ' 
03a74                 | ' ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
03a74                 | '   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
03a74                 | '   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
03a74                 | ' 
03a74                 | ' '   0 - display a up/down border line
03a74                 | ' 
03a74                 | ' '  ' aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - text line
03a74                 | ' '    aaaa_aaaa_aaaa_aaaa_aa00 - buffer start, has to be aligned, 1 long for char, ff_bb_rr_cc, foreground, background,reserved, charcode
03a74                 | ' '    zz - zoom, 00-x1, 01-x2, 10-x4, 11-blank line
03a74                 | ' '    nnnn - font line to display, 0..15
03a74                 | ' '    llllll - character line, determines the cursor Y position
03a74                 | ' 
03a74                 | ' 
03a74                 | ' if (mode &256==0)
03a74     00 5F CE F7 | 	test	arg01, #256 wz
03a78     1C 00 90 5D |  if_ne	jmp	#LR__0132
03a7c                 | '   dl_ptr:=buf_ptr-4*576
03a7c     FD 1E 02 FB | 	rdlong	_var01, objptr
03a80     04 00 00 FF 
03a84     00 1F 86 F1 | 	sub	_var01, ##2304
03a88     1C FA 05 F1 | 	add	objptr, #28
03a8c     FD 1E 62 FC | 	wrlong	_var01, objptr
03a90     1C FA 85 F1 | 	sub	objptr, #28
03a94                 | ' else
03a94     18 00 90 FD | 	jmp	#LR__0133
03a98                 | LR__0132
03a98                 | '   dl_ptr:=buf_ptr-4*496
03a98     FD 1E 02 FB | 	rdlong	_var01, objptr
03a9c     03 00 00 FF 
03aa0     C0 1F 86 F1 | 	sub	_var01, ##1984
03aa4     1C FA 05 F1 | 	add	objptr, #28
03aa8     FD 1E 62 FC | 	wrlong	_var01, objptr
03aac     1C FA 85 F1 | 	sub	objptr, #28
03ab0                 | LR__0133
03ab0                 | '  ' dl_ptr:=buf_ptr-4*540
03ab0                 | ' 
03ab0                 | ' vzoom:=((mode>>2) & 3)
03ab0     2F 21 02 F6 | 	mov	_var02, arg01
03ab4     02 20 46 F0 | 	shr	_var02, #2
03ab8     03 20 06 F5 | 	and	_var02, #3
03abc                 | ' 
03abc                 | ' 
03abc                 | ' if mode<512 '' text modes
03abc     01 00 00 FF 
03ac0     00 5E 5E F2 | 	cmps	arg01, ##512 wcz
03ac4     E8 01 90 3D |  if_ae	jmp	#LR__0141
03ac8                 | ' 
03ac8                 | '   if timings[6]>0 'borders
03ac8     68 FA 05 F1 | 	add	objptr, #104
03acc     FD 1E 02 FB | 	rdlong	_var01, objptr
03ad0     68 FA 85 F1 | 	sub	objptr, #104
03ad4     00 1E 5E F2 | 	cmps	_var01, #0 wcz
03ad8     D4 00 90 ED |  if_be	jmp	#LR__0138
03adc                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03adc     00 22 06 F6 | 	mov	_var03, #0
03ae0     68 FA 05 F1 | 	add	objptr, #104
03ae4     FD 24 02 FB | 	rdlong	_var04, objptr
03ae8     68 FA 85 F1 | 	sub	objptr, #104
03aec     01 24 86 F1 | 	sub	_var04, #1
03af0     00 24 5E F2 | 	cmps	_var04, #0 wcz
03af4     01 26 06 16 |  if_a	mov	_var05, #1
03af8     01 26 66 E6 |  if_be	neg	_var05, #1
03afc     13 29 02 F6 | 	mov	_var06, _var05
03b00     13 25 02 F1 | 	add	_var04, _var05
03b04     20 C5 9F FE | 	loc	pa,	#(@LR__0135-@LR__0134)
03b08     93 00 A0 FD | 	call	#FCACHE_LOAD_
03b0c                 | LR__0134
03b0c                 | '       long[dl_ptr+4*i]:=$0
03b0c     1C FA 05 F1 | 	add	objptr, #28
03b10     FD 2A 02 FB | 	rdlong	_var07, objptr
03b14     1C FA 85 F1 | 	sub	objptr, #28
03b18     11 2D 02 F6 | 	mov	_var08, _var03
03b1c     02 2C 66 F0 | 	shl	_var08, #2
03b20     16 2B 02 F1 | 	add	_var07, _var08
03b24     15 01 68 FC | 	wrlong	#0, _var07
03b28     14 23 02 F1 | 	add	_var03, _var06
03b2c     12 23 0A F2 | 	cmp	_var03, _var04 wz
03b30     D8 FF 9F 5D |  if_ne	jmp	#LR__0134
03b34                 | LR__0135
03b34                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
03b34     68 FA 05 F1 | 	add	objptr, #104
03b38     FD 22 02 FB | 	rdlong	_var03, objptr
03b3c     18 FA 05 F1 | 	add	objptr, #24
03b40     FD 26 02 FB | 	rdlong	_var05, objptr
03b44     13 23 02 F1 | 	add	_var03, _var05
03b48     0C FA 05 F1 | 	add	objptr, #12
03b4c     FD 2E 02 FB | 	rdlong	_var09, objptr
03b50     01 2E 86 F1 | 	sub	_var09, #1
03b54     24 FA 85 F1 | 	sub	objptr, #36
03b58     FD 30 02 FB | 	rdlong	_var10, objptr
03b5c     18 FA 05 F1 | 	add	objptr, #24
03b60     FD 32 02 FB | 	rdlong	_var11, objptr
03b64     80 FA 85 F1 | 	sub	objptr, #128
03b68     19 31 02 F1 | 	add	_var10, _var11
03b6c     18 2F 5A F2 | 	cmps	_var09, _var10 wcz
03b70     01 2C 06 16 |  if_a	mov	_var08, #1
03b74     01 2C 66 E6 |  if_be	neg	_var08, #1
03b78     16 35 02 F6 | 	mov	_var12, _var08
03b7c     16 2F 02 F1 | 	add	_var09, _var08
03b80     A4 C4 9F FE | 	loc	pa,	#(@LR__0137-@LR__0136)
03b84     93 00 A0 FD | 	call	#FCACHE_LOAD_
03b88                 | LR__0136
03b88                 | '       long[dl_ptr+4*i]:=$0
03b88     1C FA 05 F1 | 	add	objptr, #28
03b8c     FD 36 02 FB | 	rdlong	_var13, objptr
03b90     1C FA 85 F1 | 	sub	objptr, #28
03b94     11 39 02 F6 | 	mov	_var14, _var03
03b98     02 38 66 F0 | 	shl	_var14, #2
03b9c     1C 37 02 F1 | 	add	_var13, _var14
03ba0     1B 01 68 FC | 	wrlong	#0, _var13
03ba4     1A 23 02 F1 | 	add	_var03, _var12
03ba8     17 23 0A F2 | 	cmp	_var03, _var09 wz
03bac     D8 FF 9F 5D |  if_ne	jmp	#LR__0136
03bb0                 | LR__0137
03bb0                 | LR__0138
03bb0                 | '   lpc:=16<<vzoom
03bb0     10 3A 06 F6 | 	mov	_var15, #16
03bb4     10 3B 62 F0 | 	shl	_var15, _var02
03bb8                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
03bb8     68 FA 05 F1 | 	add	objptr, #104
03bbc     FD 22 02 FB | 	rdlong	_var03, objptr
03bc0     11 3D 02 F6 | 	mov	_var16, _var03
03bc4     18 FA 05 F1 | 	add	objptr, #24
03bc8     FD 3E 02 FB | 	rdlong	_var17, objptr
03bcc     1F 3D 02 F1 | 	add	_var16, _var17
03bd0     01 3C 86 F1 | 	sub	_var16, #1
03bd4     18 FA 85 F1 | 	sub	objptr, #24
03bd8     FD 2C 02 FB | 	rdlong	_var08, objptr
03bdc     68 FA 85 F1 | 	sub	objptr, #104
03be0     16 3D 5A F2 | 	cmps	_var16, _var08 wcz
03be4     01 40 06 16 |  if_a	mov	_var18, #1
03be8     01 40 66 E6 |  if_be	neg	_var18, #1
03bec     20 43 02 F6 | 	mov	_var19, _var18
03bf0     20 3D 02 F1 | 	add	_var16, _var18
03bf4     BC C4 9F FE | 	loc	pa,	#(@LR__0140-@LR__0139)
03bf8     93 00 A0 FD | 	call	#FCACHE_LOAD_
03bfc                 | LR__0139
03bfc                 | '     fontline2:=((i-timings[6])+//lpc)>>vzoom
03bfc     11 99 02 F6 | 	mov	muldiva_, _var03
03c00     68 FA 05 F1 | 	add	objptr, #104
03c04     FD 44 02 FB | 	rdlong	_var20, objptr
03c08     68 FA 85 F1 | 	sub	objptr, #104
03c0c     22 99 82 F1 | 	sub	muldiva_, _var20
03c10     1D 9B 02 F6 | 	mov	muldivb_, _var15
03c14     C2 00 A0 FD | 	call	#unsdivide_
03c18     10 99 42 F0 | 	shr	muldiva_, _var02
03c1c     4C 47 02 F6 | 	mov	_var21, muldiva_
03c20                 | '     charline:=(i-timings[6])+/lpc
03c20     11 99 02 F6 | 	mov	muldiva_, _var03
03c24     68 FA 05 F1 | 	add	objptr, #104
03c28     FD 48 02 FB | 	rdlong	_var22, objptr
03c2c     68 FA 85 F1 | 	sub	objptr, #104
03c30     24 99 82 F1 | 	sub	muldiva_, _var22
03c34     1D 9B 02 F6 | 	mov	muldivb_, _var15
03c38     C2 00 A0 FD | 	call	#unsdivide_
03c3c     4D 4B 02 F6 | 	mov	_var23, muldivb_
03c40                 | '     bufstart:=buf_ptr+4*((cpl)*charline)+(mode&3)
03c40     FD 32 02 FB | 	rdlong	_var11, objptr
03c44     90 FA 05 F1 | 	add	objptr, #144
03c48     FD 44 02 FB | 	rdlong	_var20, objptr
03c4c     25 45 02 FD | 	qmul	_var20, _var23
03c50     18 4C 62 FD | 	getqx	_var24
03c54     02 4C 66 F0 | 	shl	_var24, #2
03c58     26 33 02 F1 | 	add	_var11, _var24
03c5c     2F 39 02 F6 | 	mov	_var14, arg01
03c60     03 38 06 F5 | 	and	_var14, #3
03c64     1C 33 02 F1 | 	add	_var11, _var14
03c68                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+(fontline2<<8)+(charline<<2)+1
03c68     0C 32 66 F0 | 	shl	_var11, #12
03c6c     23 49 02 F6 | 	mov	_var22, _var21
03c70     08 48 66 F0 | 	shl	_var22, #8
03c74     24 33 02 F1 | 	add	_var11, _var22
03c78     25 45 02 F6 | 	mov	_var20, _var23
03c7c     02 44 66 F0 | 	shl	_var20, #2
03c80     22 33 02 F1 | 	add	_var11, _var20
03c84     01 32 06 F1 | 	add	_var11, #1
03c88     74 FA 85 F1 | 	sub	objptr, #116
03c8c     FD 36 02 FB | 	rdlong	_var13, objptr
03c90     1C FA 85 F1 | 	sub	objptr, #28
03c94     11 39 02 F6 | 	mov	_var14, _var03
03c98     02 38 66 F0 | 	shl	_var14, #2
03c9c     1C 37 02 F1 | 	add	_var13, _var14
03ca0     1B 33 62 FC | 	wrlong	_var11, _var13
03ca4     21 23 02 F1 | 	add	_var03, _var19
03ca8     1E 23 0A F2 | 	cmp	_var03, _var16 wz
03cac     4C FF 9F 5D |  if_ne	jmp	#LR__0139
03cb0                 | LR__0140
03cb0                 | LR__0141
03cb0                 | ' 
03cb0                 | ' 
03cb0                 | ' 
03cb0                 | ' if (mode>=512)' and (mode & (%10_00_00_0000))==(%10_00_00_0000) ' graphics -> all modes TODO :mode 560+192=752 = 10_11_11_0000 impossib,e because out of memory
03cb0     01 00 00 FF 
03cb4     00 5E 5E F2 | 	cmps	arg01, ##512 wcz
03cb8     A8 01 90 CD |  if_b	jmp	#LR__0149
03cbc                 | ' 
03cbc                 | '   if timings[6]>0 'borders
03cbc     68 FA 05 F1 | 	add	objptr, #104
03cc0     FD 1E 02 FB | 	rdlong	_var01, objptr
03cc4     68 FA 85 F1 | 	sub	objptr, #104
03cc8     00 1E 5E F2 | 	cmps	_var01, #0 wcz
03ccc     D4 00 90 ED |  if_be	jmp	#LR__0146
03cd0                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03cd0     00 22 06 F6 | 	mov	_var03, #0
03cd4     68 FA 05 F1 | 	add	objptr, #104
03cd8     FD 4E 02 FB | 	rdlong	_var25, objptr
03cdc     68 FA 85 F1 | 	sub	objptr, #104
03ce0     01 4E 86 F1 | 	sub	_var25, #1
03ce4     00 4E 5E F2 | 	cmps	_var25, #0 wcz
03ce8     01 26 06 16 |  if_a	mov	_var05, #1
03cec     01 26 66 E6 |  if_be	neg	_var05, #1
03cf0     13 51 02 F6 | 	mov	_var26, _var05
03cf4     13 4F 02 F1 | 	add	_var25, _var05
03cf8     2C C3 9F FE | 	loc	pa,	#(@LR__0143-@LR__0142)
03cfc     93 00 A0 FD | 	call	#FCACHE_LOAD_
03d00                 | LR__0142
03d00                 | '       long[dl_ptr+4*i]:=$0
03d00     1C FA 05 F1 | 	add	objptr, #28
03d04     FD 2A 02 FB | 	rdlong	_var07, objptr
03d08     1C FA 85 F1 | 	sub	objptr, #28
03d0c     11 2D 02 F6 | 	mov	_var08, _var03
03d10     02 2C 66 F0 | 	shl	_var08, #2
03d14     16 2B 02 F1 | 	add	_var07, _var08
03d18     15 01 68 FC | 	wrlong	#0, _var07
03d1c     28 23 02 F1 | 	add	_var03, _var26
03d20     27 23 0A F2 | 	cmp	_var03, _var25 wz
03d24     D8 FF 9F 5D |  if_ne	jmp	#LR__0142
03d28                 | LR__0143
03d28                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
03d28     68 FA 05 F1 | 	add	objptr, #104
03d2c     FD 22 02 FB | 	rdlong	_var03, objptr
03d30     18 FA 05 F1 | 	add	objptr, #24
03d34     FD 26 02 FB | 	rdlong	_var05, objptr
03d38     13 23 02 F1 | 	add	_var03, _var05
03d3c     0C FA 05 F1 | 	add	objptr, #12
03d40     FD 52 02 FB | 	rdlong	_var27, objptr
03d44     01 52 86 F1 | 	sub	_var27, #1
03d48     24 FA 85 F1 | 	sub	objptr, #36
03d4c     FD 30 02 FB | 	rdlong	_var10, objptr
03d50     18 FA 05 F1 | 	add	objptr, #24
03d54     FD 32 02 FB | 	rdlong	_var11, objptr
03d58     80 FA 85 F1 | 	sub	objptr, #128
03d5c     19 31 02 F1 | 	add	_var10, _var11
03d60     18 53 5A F2 | 	cmps	_var27, _var10 wcz
03d64     01 2C 06 16 |  if_a	mov	_var08, #1
03d68     01 2C 66 E6 |  if_be	neg	_var08, #1
03d6c     16 55 02 F6 | 	mov	_var28, _var08
03d70     16 53 02 F1 | 	add	_var27, _var08
03d74     B0 C2 9F FE | 	loc	pa,	#(@LR__0145-@LR__0144)
03d78     93 00 A0 FD | 	call	#FCACHE_LOAD_
03d7c                 | LR__0144
03d7c                 | '       long[dl_ptr+4*i]:=$0
03d7c     1C FA 05 F1 | 	add	objptr, #28
03d80     FD 36 02 FB | 	rdlong	_var13, objptr
03d84     1C FA 85 F1 | 	sub	objptr, #28
03d88     11 39 02 F6 | 	mov	_var14, _var03
03d8c     02 38 66 F0 | 	shl	_var14, #2
03d90     1C 37 02 F1 | 	add	_var13, _var14
03d94     1B 01 68 FC | 	wrlong	#0, _var13
03d98     2A 23 02 F1 | 	add	_var03, _var28
03d9c     29 23 0A F2 | 	cmp	_var03, _var27 wz
03da0     D8 FF 9F 5D |  if_ne	jmp	#LR__0144
03da4                 | LR__0145
03da4                 | LR__0146
03da4                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
03da4     68 FA 05 F1 | 	add	objptr, #104
03da8     FD 22 02 FB | 	rdlong	_var03, objptr
03dac     11 57 02 F6 | 	mov	_var29, _var03
03db0     18 FA 05 F1 | 	add	objptr, #24
03db4     FD 3E 02 FB | 	rdlong	_var17, objptr
03db8     1F 57 02 F1 | 	add	_var29, _var17
03dbc     01 56 86 F1 | 	sub	_var29, #1
03dc0     18 FA 85 F1 | 	sub	objptr, #24
03dc4     FD 2C 02 FB | 	rdlong	_var08, objptr
03dc8     68 FA 85 F1 | 	sub	objptr, #104
03dcc     16 57 5A F2 | 	cmps	_var29, _var08 wcz
03dd0     01 40 06 16 |  if_a	mov	_var18, #1
03dd4     01 40 66 E6 |  if_be	neg	_var18, #1
03dd8     20 59 02 F6 | 	mov	_var30, _var18
03ddc     20 57 02 F1 | 	add	_var29, _var18
03de0     98 C2 9F FE | 	loc	pa,	#(@LR__0148-@LR__0147)
03de4     93 00 A0 FD | 	call	#FCACHE_LOAD_
03de8                 | LR__0147
03de8                 | '     bufstart:=buf_ptr+4*(cpl*((i-timings[6])>>vzoom))+(mode&3)
03de8     FD 32 02 FB | 	rdlong	_var11, objptr
03dec     11 49 02 F6 | 	mov	_var22, _var03
03df0     68 FA 05 F1 | 	add	objptr, #104
03df4     FD 44 02 FB | 	rdlong	_var20, objptr
03df8     22 49 82 F1 | 	sub	_var22, _var20
03dfc     10 49 42 F0 | 	shr	_var22, _var02
03e00     28 FA 05 F1 | 	add	objptr, #40
03e04     FD 38 02 FB | 	rdlong	_var14, objptr
03e08     24 39 02 FD | 	qmul	_var14, _var22
03e0c     18 5A 62 FD | 	getqx	_var31
03e10     02 5A 66 F0 | 	shl	_var31, #2
03e14     2D 33 02 F1 | 	add	_var11, _var31
03e18     2F 5D 02 F6 | 	mov	_var32, arg01
03e1c     03 5C 06 F5 | 	and	_var32, #3
03e20     2E 33 02 F1 | 	add	_var11, _var32
03e24                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+2+(mode &48)>>2
03e24     0C 32 66 F0 | 	shl	_var11, #12
03e28     02 32 06 F1 | 	add	_var11, #2
03e2c     2F 49 02 F6 | 	mov	_var22, arg01
03e30     30 48 06 F5 | 	and	_var22, #48
03e34     02 48 46 F0 | 	shr	_var22, #2
03e38     24 33 02 F1 | 	add	_var11, _var22
03e3c     74 FA 85 F1 | 	sub	objptr, #116
03e40     FD 44 02 FB | 	rdlong	_var20, objptr
03e44     1C FA 85 F1 | 	sub	objptr, #28
03e48     11 4D 02 F6 | 	mov	_var24, _var03
03e4c     02 4C 66 F0 | 	shl	_var24, #2
03e50     26 45 02 F1 | 	add	_var20, _var24
03e54     22 33 62 FC | 	wrlong	_var11, _var20
03e58     2C 23 02 F1 | 	add	_var03, _var30
03e5c     2B 23 0A F2 | 	cmp	_var03, _var29 wz
03e60     84 FF 9F 5D |  if_ne	jmp	#LR__0147
03e64                 | LR__0148
03e64                 | LR__0149
03e64                 | _hng030rm_spin2_makedl_ret
03e64     2D 00 64 FD | 	ret
03e68                 | 
03e68                 | '       
03e68                 | ' '--------- Start the driver with graphics mode 'mode' at pins 'base'
03e68                 | ' 
03e68                 | ' pub start(mode,base):result
03e68                 | _hng030rm_spin2_start
03e68     02 5A 05 F6 | 	mov	COUNT_, #2
03e6c     B0 00 A0 FD | 	call	#pushregs_
03e70     2F 6D 02 F6 | 	mov	local01, arg01
03e74                 | ' 
03e74                 | ' ' initialize pointers and variables
03e74                 | ' 
03e74                 | ' border_ptr:=@bordercolor
03e74     2C FA 05 F1 | 	add	objptr, #44
03e78     FD 6E 02 F6 | 	mov	local02, objptr
03e7c     24 FA 85 F1 | 	sub	objptr, #36
03e80     FD 6E 62 FC | 	wrlong	local02, objptr
03e84                 | ' font_ptr:=@st_font
03e84     08 00 00 FF 
03e88     00 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##4096
03e8c     04 FA 85 F1 | 	sub	objptr, #4
03e90     FD 06 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
03e94                 | ' hdmibase:=base
03e94     20 FA 05 F1 | 	add	objptr, #32
03e98     FD 60 62 FC | 	wrlong	arg02, objptr
03e9c     24 FA 85 F1 | 	sub	objptr, #36
03ea0                 | ' p1:=@putpixel1
03ea0     FD 5E 02 F6 | 	mov	arg01, objptr
03ea4     05 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel1_
03ea8     08 00 00 FF 
03eac     00 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##4096
03eb0     7C 2E B0 FD | 	call	#__system___make_methodptr
03eb4     DC FA 05 F1 | 	add	objptr, #220
03eb8     FD 18 62 FC | 	wrlong	result1, objptr
03ebc     DC FA 85 F1 | 	sub	objptr, #220
03ec0                 | ' p2:=@putpixel2
03ec0     FD 5E 02 F6 | 	mov	arg01, objptr
03ec4     06 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel2_
03ec8     64 2E B0 FD | 	call	#__system___make_methodptr
03ecc     E0 FA 05 F1 | 	add	objptr, #224
03ed0     FD 18 62 FC | 	wrlong	result1, objptr
03ed4     E0 FA 85 F1 | 	sub	objptr, #224
03ed8                 | ' p4:=@putpixel4
03ed8     FD 5E 02 F6 | 	mov	arg01, objptr
03edc     07 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel4_
03ee0     4C 2E B0 FD | 	call	#__system___make_methodptr
03ee4     E4 FA 05 F1 | 	add	objptr, #228
03ee8     FD 18 62 FC | 	wrlong	result1, objptr
03eec     E4 FA 85 F1 | 	sub	objptr, #228
03ef0                 | ' p8:=@putpixel8
03ef0     FD 5E 02 F6 | 	mov	arg01, objptr
03ef4     08 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel8_
03ef8     34 2E B0 FD | 	call	#__system___make_methodptr
03efc     E8 FA 05 F1 | 	add	objptr, #232
03f00     FD 18 62 FC | 	wrlong	result1, objptr
03f04     E8 FA 85 F1 | 	sub	objptr, #232
03f08                 | ' 
03f08                 | ' 
03f08                 | ' ' the mode has to be set here to enable computing the buffer length
03f08                 | ' 
03f08                 | ' setmode(mode)
03f08     36 5F 02 F6 | 	mov	arg01, local01
03f0c     80 F5 BF FD | 	call	#_hng030rm_spin2_setmode
03f10                 | ' 
03f10                 | ' vblank_ptr:=@vblank
03f10     40 FA 05 F1 | 	add	objptr, #64
03f14     FD 6E 02 F6 | 	mov	local02, objptr
03f18     34 FA 85 F1 | 	sub	objptr, #52
03f1c     FD 6E 62 FC | 	wrlong	local02, objptr
03f20                 | ' cursor_ptr:=@cursor_x
03f20     28 FA 05 F1 | 	add	objptr, #40
03f24     FD 6E 02 F6 | 	mov	local02, objptr
03f28     24 FA 85 F1 | 	sub	objptr, #36
03f2c     FD 6E 62 FC | 	wrlong	local02, objptr
03f30                 | ' 
03f30                 | ' fontnum_ptr:=@fontnum
03f30     88 FA 05 F1 | 	add	objptr, #136
03f34     FD 6E 02 F6 | 	mov	local02, objptr
03f38     78 FA 85 F1 | 	sub	objptr, #120
03f3c     FD 6E 62 FC | 	wrlong	local02, objptr
03f40                 | ' 
03f40                 | ' fontnum:=0  ' PC type font ' TODO: font# in buffer byte #1
03f40     78 FA 05 F1 | 	add	objptr, #120
03f44     FD 00 68 FC | 	wrlong	#0, objptr
03f48                 | ' bytemove(@colors,@vgacolors,16)
03f48     1C FA 05 F1 | 	add	objptr, #28
03f4c     FD 5E 02 F6 | 	mov	arg01, objptr
03f50     B4 FA 85 F1 | 	sub	objptr, #180
03f54     0F 00 00 FF 
03f58     58 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7768
03f5c     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03f60     0F 00 00 FF 
03f64     58 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7768
03f68     10 62 06 F6 | 	mov	arg03, #16
03f6c     90 2C B0 FD | 	call	#__system____builtin_memmove
03f70                 | ' 
03f70                 | ' ' initialize a cursor
03f70                 | ' 
03f70                 | ' cursor_x:=0
03f70     34 FA 05 F1 | 	add	objptr, #52
03f74     FD 00 48 FC | 	wrbyte	#0, objptr
03f78                 | ' cursor_y:=0
03f78     01 FA 05 F1 | 	add	objptr, #1
03f7c     FD 00 48 FC | 	wrbyte	#0, objptr
03f80                 | ' cursor_sh:=14
03f80     01 FA 05 F1 | 	add	objptr, #1
03f84     FD 1C 48 FC | 	wrbyte	#14, objptr
03f88     36 FA 85 F1 | 	sub	objptr, #54
03f8c                 | ' 
03f8c                 | ' 
03f8c                 | ' ' start the cog
03f8c                 | ' 
03f8c                 | ' cog:=coginit(16,@hdmi, @buf_ptr)
03f8c     0F 00 00 FF 
03f90     68 06 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7784
03f94     03 61 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
03f98     0F 00 00 FF 
03f9c     68 06 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7784
03fa0     FD 62 02 F6 | 	mov	arg03, objptr
03fa4     10 5E 06 F6 | 	mov	arg01, #16
03fa8     28 62 62 FD | 	setq	arg03
03fac     30 5F F2 FC | 	coginit	arg01, arg02 wc
03fb0     01 5E 66 C6 |  if_b	neg	arg01, #1
03fb4     2F 19 02 F6 | 	mov	result1, arg01
03fb8     28 FA 05 F1 | 	add	objptr, #40
03fbc     FD 18 62 FC | 	wrlong	result1, objptr
03fc0     28 FA 85 F1 | 	sub	objptr, #40
03fc4                 | ' waitms(20)
03fc4     14 5E 06 F6 | 	mov	arg01, #20
03fc8     70 2F B0 FD | 	call	#__system___waitms
03fcc                 | ' 
03fcc                 | ' ' clear the screen and set the colors to green on black
03fcc                 | ' 
03fcc                 | ' cls(c_green,c_black)
03fcc     C7 5E 06 F6 | 	mov	arg01, #199
03fd0     00 60 06 F6 | 	mov	arg02, #0
03fd4     F8 EC BF FD | 	call	#_hng030rm_spin2_cls
03fd8                 | ' setbordercolor(0,0,128)
03fd8     00 5E 06 F6 | 	mov	arg01, #0
03fdc     00 60 06 F6 | 	mov	arg02, #0
03fe0     80 62 06 F6 | 	mov	arg03, #128
03fe4     94 EC BF FD | 	call	#_hng030rm_spin2_setbordercolor
03fe8                 | ' setwritecolors(c_green,c_black)
03fe8                 | ' 
03fe8                 | ' 
03fe8                 | ' write_color:=ff
03fe8     38 FA 05 F1 | 	add	objptr, #56
03fec     FD 8E 69 FC | 	wrlong	#199, objptr
03ff0                 | ' write_background:=bb
03ff0     04 FA 05 F1 | 	add	objptr, #4
03ff4     FD 00 68 FC | 	wrlong	#0, objptr
03ff8                 | ' 
03ff8                 | ' return cog
03ff8     14 FA 85 F1 | 	sub	objptr, #20
03ffc     FD 18 02 FB | 	rdlong	result1, objptr
04000     28 FA 85 F1 | 	sub	objptr, #40
04004     AF F0 03 F6 | 	mov	ptra, fp
04008     BA 00 A0 FD | 	call	#popregs_
0400c                 | _hng030rm_spin2_start_ret
0400c     2D 00 64 FD | 	ret
04010                 | 
04010                 | ' 'this is the object and not a program
04010                 | ' 
04010                 | ' pub start() :cog
04010                 | _retrocog_spin2_start
04010     02 5A 05 F6 | 	mov	COUNT_, #2
04014     B0 00 A0 FD | 	call	#pushregs_
04018                 | ' 
04018                 | ' cog:=cogspin(16,serialcog(),@serialstack)
04018     FD 6C 02 F6 | 	mov	local01, objptr
0401c     01 00 00 FF 
04020     40 FB 05 F1 | 	add	objptr, ##832
04024     FD 6E 02 F6 | 	mov	local02, objptr
04028     37 6D 62 FC | 	wrlong	local01, local02
0402c     04 6E 06 F1 | 	add	local02, #4
04030     37 13 62 FC | 	wrlong	ptr__retrocog_spin2_serialcog_, local02
04034     FD 62 02 F6 | 	mov	arg03, objptr
04038     01 00 00 FF 
0403c     40 FB 85 F1 | 	sub	objptr, ##832
04040     10 5E 06 F6 | 	mov	arg01, #16
04044     28 62 62 FD | 	setq	arg03
04048     FA 5E F2 FC | 	coginit	arg01, entryptr__ wc
0404c     01 5E 66 C6 |  if_b	neg	arg01, #1
04050     2F 19 02 F6 | 	mov	result1, arg01
04054                 | ' return cog
04054     AF F0 03 F6 | 	mov	ptra, fp
04058     BA 00 A0 FD | 	call	#popregs_
0405c                 | _retrocog_spin2_start_ret
0405c     2D 00 64 FD | 	ret
04060                 | 
04060                 | ' 
04060                 | ' pub serialcog()| rr, mrr, srr, b, mb, midireport, kbmreport
04060                 | _retrocog_spin2_serialcog
04060     0C 5A 05 F6 | 	mov	COUNT_, #12
04064     B0 00 A0 FD | 	call	#pushregs_
04068                 | ' 
04068                 | ' 'start serial and midi
04068                 | ' 
04068                 | ' serial_start(rxpin, txpin, baudrate)
04068     20 5E 06 F6 | 	mov	arg01, #32
0406c     21 60 06 F6 | 	mov	arg02, #33
04070     A6 0E 00 FF 
04074     00 62 06 F6 | 	mov	arg03, ##1920000
04078     C0 05 B0 FD | 	call	#_retrocog_spin2_serial_start
0407c                 | ' serial_start(midiin,midiout,mbaudrate)
0407c     1D 5E 06 F6 | 	mov	arg01, #29
04080     1E 60 06 F6 | 	mov	arg02, #30
04084     3D 00 00 FF 
04088     12 62 06 F6 | 	mov	arg03, ##31250
0408c     AC 05 B0 FD | 	call	#_retrocog_spin2_serial_start
04090                 | ' serial_start(srxpin,stxpin,sbaudrate)
04090     3E 6C 06 F6 | 	mov	local01, #62
04094     42 0F 00 FF 
04098     80 6E 06 F6 | 	mov	local02, ##2000000
0409c     3F 5E 06 F6 | 	mov	arg01, #63
040a0     3E 60 06 F6 | 	mov	arg02, #62
040a4     42 0F 00 FF 
040a8     80 62 06 F6 | 	mov	arg03, ##2000000
040ac     8C 05 B0 FD | 	call	#_retrocog_spin2_serial_start
040b0                 | ' 
040b0                 | ' mb:=(-1)
040b0     01 70 66 F6 | 	neg	local03, #1
040b4                 | ' b:=(-1)
040b4     01 72 66 F6 | 	neg	local04, #1
040b8                 | ' 
040b8                 | ' mousefront:=0
040b8     00 74 06 F6 | 	mov	local05, #0
040bc     08 FA 05 F1 | 	add	objptr, #8
040c0     FD 00 68 FC | 	wrlong	#0, objptr
040c4                 | ' mousetail:=0
040c4     04 FA 05 F1 | 	add	objptr, #4
040c8     FD 00 68 FC | 	wrlong	#0, objptr
040cc     0C FA 85 F1 | 	sub	objptr, #12
040d0                 | ' kbdfront:=0
040d0     FD 00 68 FC | 	wrlong	#0, objptr
040d4                 | ' kbdtail:=0
040d4     04 FA 05 F1 | 	add	objptr, #4
040d8     FD 00 68 FC | 	wrlong	#0, objptr
040dc                 | ' midifront:=0
040dc     0C FA 05 F1 | 	add	objptr, #12
040e0     FD 00 68 FC | 	wrlong	#0, objptr
040e4                 | ' miditail:=0
040e4     04 FA 05 F1 | 	add	objptr, #4
040e8     FD 00 68 FC | 	wrlong	#0, objptr
040ec                 | ' serialfront:=0
040ec     04 FA 05 F1 | 	add	objptr, #4
040f0     FD 00 68 FC | 	wrlong	#0, objptr
040f4                 | ' serialtail:=0
040f4     04 FA 05 F1 | 	add	objptr, #4
040f8     FD 00 68 FC | 	wrlong	#0, objptr
040fc                 | ' long[$30]:=0
040fc     30 00 6C FC | 	wrlong	#0, #48
04100                 | ' long[$34]:=0
04100     34 00 6C FC | 	wrlong	#0, #52
04104                 | ' long[$38]:=0
04104     38 00 6C FC | 	wrlong	#0, #56
04108     1C FA 85 F1 | 	sub	objptr, #28
0410c                 | ' long[$3C]:=0
0410c     3C 00 6C FC | 	wrlong	#0, #60
04110                 | ' 
04110                 | ' repeat
04110                 | LR__0150
04110                 | ' 
04110                 | ' '  repeat 
04110                 | '   rr:=rxcheck(rxpin)
04110     20 5E 06 F6 | 	mov	arg01, #32
04114     A0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
04118     0C 77 02 F6 | 	mov	local06, result1
0411c                 | '   mrr:=rxcheck(midiin)
0411c     1D 5E 06 F6 | 	mov	arg01, #29
04120     94 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
04124     0C 79 02 F6 | 	mov	local07, result1
04128                 | '   srr:=rxcheck(srxpin)
04128     3F 5E 06 F6 | 	mov	arg01, #63
0412c     88 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
04130     0C 75 02 F6 | 	mov	local05, result1
04134     3A 7B 02 F6 | 	mov	local08, local05
04138                 | ' 
04138                 | ' '  until rr>=0 || mrr>=0  || srr>=0
04138                 | ' 
04138                 | '   
04138                 | ' ' midi. Must be >= $80 for a command
04138                 | ' '$80-$8F - 3 bytes note off. note, velocity
04138                 | ' '$90-$9F - 3 bytes note on, note, velocity
04138                 | ' '$A0-$AF - 3 bytes poly aftertouch. note, value
04138                 | ' '$B0-$BF - 3 bytes control change, controller-value, 
04138                 | ' '$C0-$CF - 2 bytes program change
04138                 | ' '$D0-$DF - 2 bytes mono aftertouch
04138                 | ' '$E0-$EF - 3 bytes pitch bend, $2000 - center
04138                 | ' '$F0-$FF - 1 byte
04138                 | '   
04138                 | '   if srr>=0
04138     00 7A 5E F2 | 	cmps	local08, #0 wcz
0413c     78 00 90 CD |  if_b	jmp	#LR__0152
04140                 | '   
04140                 | '     if serialfront<>((serialtail-1) //32)
04140     1C FA 05 F1 | 	add	objptr, #28
04144     FD 6C 02 FB | 	rdlong	local01, objptr
04148     36 75 02 F6 | 	mov	local05, local01
0414c     01 74 86 F1 | 	sub	local05, #1
04150     3A 6F 52 F6 | 	abs	local02, local05 wc
04154     1F 6E 06 F5 | 	and	local02, #31
04158     37 6F 62 C6 |  if_b	neg	local02, local02
0415c     04 FA 85 F1 | 	sub	objptr, #4
04160     FD 7C 02 FB | 	rdlong	local09, objptr
04164     18 FA 85 F1 | 	sub	objptr, #24
04168     3E 7F 02 F6 | 	mov	local10, local09
0416c     37 7F 0A F2 | 	cmp	local10, local02 wz
04170     44 00 90 AD |  if_e	jmp	#LR__0151
04174                 | '       serialbuf[serialfront]:=srr
04174     18 FA 05 F1 | 	add	objptr, #24
04178     FD 74 02 FB | 	rdlong	local05, objptr
0417c     01 00 00 FF 
04180     08 FB 05 F1 | 	add	objptr, ##776
04184     FD 74 02 F1 | 	add	local05, objptr
04188     3A 7B 42 FC | 	wrbyte	local08, local05
0418c                 | '       serialfront+=1
0418c     01 00 00 FF 
04190     08 FB 85 F1 | 	sub	objptr, ##776
04194     FD 6E 02 FB | 	rdlong	local02, objptr
04198     01 6E 06 F1 | 	add	local02, #1
0419c     FD 6E 62 FC | 	wrlong	local02, objptr
041a0                 | '       serialfront:=serialfront // 32
041a0     37 6D 02 F6 | 	mov	local01, local02
041a4     36 75 52 F6 | 	abs	local05, local01 wc
041a8     1F 74 06 F5 | 	and	local05, #31
041ac     3A 75 62 C6 |  if_b	neg	local05, local05
041b0     FD 74 62 FC | 	wrlong	local05, objptr
041b4     18 FA 85 F1 | 	sub	objptr, #24
041b8                 | LR__0151
041b8                 | LR__0152
041b8                 | '     
041b8                 | '   if ((mrr>=$80) && (mrr<=$BF)) || ((mrr>=$E0) && (mrr<=$EF)) 
041b8     80 78 5E F2 | 	cmps	local07, #128 wcz
041bc     08 00 90 CD |  if_b	jmp	#LR__0153
041c0     BF 78 5E F2 | 	cmps	local07, #191 wcz
041c4     10 00 90 ED |  if_be	jmp	#LR__0154
041c8                 | LR__0153
041c8     E0 78 5E F2 | 	cmps	local07, #224 wcz
041cc     18 00 90 CD |  if_b	jmp	#LR__0155
041d0     EF 78 5E F2 | 	cmps	local07, #239 wcz
041d4     10 00 90 1D |  if_a	jmp	#LR__0155
041d8                 | LR__0154
041d8                 | '     mb:=2
041d8     02 70 06 F6 | 	mov	local03, #2
041dc                 | '     midireport:=mrr<<24
041dc     3C 75 02 F6 | 	mov	local05, local07
041e0     18 74 66 F0 | 	shl	local05, #24
041e4     3A 81 02 F6 | 	mov	local11, local05
041e8                 | LR__0155
041e8                 | ' 
041e8                 | '   if (mrr>=$C0) && (mrr<=$DF)
041e8     C0 78 5E F2 | 	cmps	local07, #192 wcz
041ec     18 00 90 CD |  if_b	jmp	#LR__0156
041f0     DF 78 5E F2 | 	cmps	local07, #223 wcz
041f4     10 00 90 1D |  if_a	jmp	#LR__0156
041f8                 | '     mb:=1
041f8     01 70 06 F6 | 	mov	local03, #1
041fc                 | '     midireport:=mrr<<24
041fc     3C 75 02 F6 | 	mov	local05, local07
04200     18 74 66 F0 | 	shl	local05, #24
04204     3A 81 02 F6 | 	mov	local11, local05
04208                 | LR__0156
04208                 | '   
04208                 | '   if (mrr>=$F0) 'TODO: do something with SYSEX, now a workaround for Novation Impulse
04208     F0 78 5E F2 | 	cmps	local07, #240 wcz
0420c                 | '     mb:=4
0420c     04 70 06 36 |  if_ae	mov	local03, #4
04210                 | '     midireport:=mrr<<24  
04210     3C 81 02 36 |  if_ae	mov	local11, local07
04214     18 80 66 30 |  if_ae	shl	local11, #24
04218                 | '   
04218                 | '   if (mrr<$80) && (mb>0) && (mrr>=0)
04218     80 78 5E F2 | 	cmps	local07, #128 wcz
0421c     44 00 90 3D |  if_ae	jmp	#LR__0158
04220     00 70 5E F2 | 	cmps	local03, #0 wcz
04224     3C 00 90 ED |  if_be	jmp	#LR__0158
04228     00 78 5E F2 | 	cmps	local07, #0 wcz
0422c     34 00 90 CD |  if_b	jmp	#LR__0158
04230                 | '     
04230                 | '     mb--
04230     38 75 02 F6 | 	mov	local05, local03
04234     38 6D 02 F6 | 	mov	local01, local03
04238     01 6C 86 F1 | 	sub	local01, #1
0423c     36 71 02 F6 | 	mov	local03, local01
04240                 | '     if mb<3
04240     03 70 5E F2 | 	cmps	local03, #3 wcz
04244     1C 00 90 3D |  if_ae	jmp	#LR__0157
04248                 | '       midireport+=mrr<<(mb<<3)
04248     40 75 02 F6 | 	mov	local05, local11
0424c     3C 6D 02 F6 | 	mov	local01, local07
04250     38 6F 02 F6 | 	mov	local02, local03
04254     03 6E 66 F0 | 	shl	local02, #3
04258     37 6D 62 F0 | 	shl	local01, local02
0425c     36 75 02 F1 | 	add	local05, local01
04260     3A 81 02 F6 | 	mov	local11, local05
04264                 | LR__0157
04264                 | LR__0158
04264                 | '   
04264                 | '   if mb==0
04264     00 70 0E F2 | 	cmp	local03, #0 wz
04268     80 00 90 5D |  if_ne	jmp	#LR__0160
0426c                 | '     
0426c                 | '     if midifront<>((miditail-1) //32)
0426c     14 FA 05 F1 | 	add	objptr, #20
04270     FD 6C 02 FB | 	rdlong	local01, objptr
04274     36 75 02 F6 | 	mov	local05, local01
04278     01 74 86 F1 | 	sub	local05, #1
0427c     3A 6F 52 F6 | 	abs	local02, local05 wc
04280     1F 6E 06 F5 | 	and	local02, #31
04284     37 6F 62 C6 |  if_b	neg	local02, local02
04288     04 FA 85 F1 | 	sub	objptr, #4
0428c     FD 7C 02 FB | 	rdlong	local09, objptr
04290     10 FA 85 F1 | 	sub	objptr, #16
04294     3E 7F 02 F6 | 	mov	local10, local09
04298     37 7F 0A F2 | 	cmp	local10, local02 wz
0429c     48 00 90 AD |  if_e	jmp	#LR__0159
042a0                 | '       midibuf[midifront]:=midireport
042a0     10 FA 05 F1 | 	add	objptr, #16
042a4     FD 74 02 FB | 	rdlong	local05, objptr
042a8     02 74 66 F0 | 	shl	local05, #2
042ac     01 00 00 FF 
042b0     90 FA 05 F1 | 	add	objptr, ##656
042b4     FD 74 02 F1 | 	add	local05, objptr
042b8     3A 81 62 FC | 	wrlong	local11, local05
042bc                 | '       midifront+=1
042bc     01 00 00 FF 
042c0     90 FA 85 F1 | 	sub	objptr, ##656
042c4     FD 6E 02 FB | 	rdlong	local02, objptr
042c8     01 6E 06 F1 | 	add	local02, #1
042cc     FD 6E 62 FC | 	wrlong	local02, objptr
042d0                 | '       midifront:=midifront // 32
042d0     37 6D 02 F6 | 	mov	local01, local02
042d4     36 75 52 F6 | 	abs	local05, local01 wc
042d8     1F 74 06 F5 | 	and	local05, #31
042dc     3A 75 62 C6 |  if_b	neg	local05, local05
042e0     FD 74 62 FC | 	wrlong	local05, objptr
042e4     10 FA 85 F1 | 	sub	objptr, #16
042e8                 | LR__0159
042e8                 | '     mb:=(-1)
042e8     01 70 66 F6 | 	neg	local03, #1
042ec                 | LR__0160
042ec                 | ' 
042ec                 | ' 'Keyboard and mouse
042ec                 | ' 
042ec                 | '   if (rr>=$80) && (rr<>$FF)
042ec     80 76 5E F2 | 	cmps	local06, #128 wcz
042f0     18 00 90 CD |  if_b	jmp	#LR__0161
042f4     FF 76 0E F2 | 	cmp	local06, #255 wz
042f8     10 00 90 AD |  if_e	jmp	#LR__0161
042fc                 | '     b:=3
042fc     03 72 06 F6 | 	mov	local04, #3
04300                 | '     kbmreport:=rr<<24
04300     3B 75 02 F6 | 	mov	local05, local06
04304     18 74 66 F0 | 	shl	local05, #24
04308     3A 83 02 F6 | 	mov	local12, local05
0430c                 | LR__0161
0430c                 | '   
0430c                 | '   if (rr<$80) && (b>0) && (rr>=0)
0430c     80 76 5E F2 | 	cmps	local06, #128 wcz
04310     30 00 90 3D |  if_ae	jmp	#LR__0162
04314     00 72 5E F2 | 	cmps	local04, #0 wcz
04318     28 00 90 ED |  if_be	jmp	#LR__0162
0431c     00 76 5E F2 | 	cmps	local06, #0 wcz
04320     20 00 90 CD |  if_b	jmp	#LR__0162
04324                 | '     b--
04324     01 72 86 F1 | 	sub	local04, #1
04328                 | '     kbmreport+=rr<<(b<<3)  
04328     41 75 02 F6 | 	mov	local05, local12
0432c     3B 6D 02 F6 | 	mov	local01, local06
04330     39 6F 02 F6 | 	mov	local02, local04
04334     03 6E 66 F0 | 	shl	local02, #3
04338     37 6D 62 F0 | 	shl	local01, local02
0433c     36 75 02 F1 | 	add	local05, local01
04340     3A 83 02 F6 | 	mov	local12, local05
04344                 | LR__0162
04344                 | '   
04344                 | '   if (rr==$FF)
04344     FF 76 0E F2 | 	cmp	local06, #255 wz
04348                 | '     b:=0   
04348     00 72 06 A6 |  if_e	mov	local04, #0
0434c                 | ' 
0434c                 | '   if b==0  
0434c     00 72 0E F2 | 	cmp	local04, #0 wz
04350     0C 01 90 5D |  if_ne	jmp	#LR__0167
04354                 | '  
04354                 | '     if (kbmreport +>= $80000000) && (kbmreport +< $87000000)  'mouse
04354     00 00 40 FF 
04358     00 82 1E F2 | 	cmp	local12, ##-2147483648 wcz
0435c     80 00 90 CD |  if_b	jmp	#LR__0164
04360     00 80 43 FF 
04364     00 82 1E F2 | 	cmp	local12, ##-2030043136 wcz
04368     74 00 90 3D |  if_ae	jmp	#LR__0164
0436c                 | '       if mousefront<>((mousetail-1) //128)
0436c     0C FA 05 F1 | 	add	objptr, #12
04370     FD 6C 02 FB | 	rdlong	local01, objptr
04374     36 75 02 F6 | 	mov	local05, local01
04378     01 74 86 F1 | 	sub	local05, #1
0437c     3A 6F 52 F6 | 	abs	local02, local05 wc
04380     7F 6E 06 F5 | 	and	local02, #127
04384     37 6F 62 C6 |  if_b	neg	local02, local02
04388     04 FA 85 F1 | 	sub	objptr, #4
0438c     FD 7C 02 FB | 	rdlong	local09, objptr
04390     08 FA 85 F1 | 	sub	objptr, #8
04394     3E 7F 02 F6 | 	mov	local10, local09
04398     37 7F 0A F2 | 	cmp	local10, local02 wz
0439c     40 00 90 AD |  if_e	jmp	#LR__0163
043a0                 | '         mousebuf[mousefront]:=kbmreport
043a0     08 FA 05 F1 | 	add	objptr, #8
043a4     FD 74 02 FB | 	rdlong	local05, objptr
043a8     02 74 66 F0 | 	shl	local05, #2
043ac     98 FA 05 F1 | 	add	objptr, #152
043b0     FD 74 02 F1 | 	add	local05, objptr
043b4     3A 83 62 FC | 	wrlong	local12, local05
043b8                 | '         mousefront+=1
043b8     98 FA 85 F1 | 	sub	objptr, #152
043bc     FD 6E 02 FB | 	rdlong	local02, objptr
043c0     01 6E 06 F1 | 	add	local02, #1
043c4     FD 6E 62 FC | 	wrlong	local02, objptr
043c8                 | '         mousefront:=mousefront // 128
043c8     37 6D 02 F6 | 	mov	local01, local02
043cc     36 75 52 F6 | 	abs	local05, local01 wc
043d0     7F 74 06 F5 | 	and	local05, #127
043d4     3A 75 62 C6 |  if_b	neg	local05, local05
043d8     FD 74 62 FC | 	wrlong	local05, objptr
043dc     08 FA 85 F1 | 	sub	objptr, #8
043e0                 | LR__0163
043e0                 | LR__0164
043e0                 | '     b:=(-1)
043e0     01 72 66 F6 | 	neg	local04, #1
043e4                 | ' 
043e4                 | '     if (kbmreport +>= $87000000) && (kbmreport +< $8a000000)  'keyboard
043e4     00 80 43 FF 
043e8     00 82 1E F2 | 	cmp	local12, ##-2030043136 wcz
043ec     6C 00 90 CD |  if_b	jmp	#LR__0166
043f0     00 00 45 FF 
043f4     00 82 1E F2 | 	cmp	local12, ##-1979711488 wcz
043f8     60 00 90 3D |  if_ae	jmp	#LR__0166
043fc                 | '       if kbdfront<>((kbdtail-1) //32)
043fc     04 FA 05 F1 | 	add	objptr, #4
04400     FD 6C 02 FB | 	rdlong	local01, objptr
04404     04 FA 85 F1 | 	sub	objptr, #4
04408     36 75 02 F6 | 	mov	local05, local01
0440c     01 74 86 F1 | 	sub	local05, #1
04410     3A 6F 52 F6 | 	abs	local02, local05 wc
04414     1F 6E 06 F5 | 	and	local02, #31
04418     37 6F 62 C6 |  if_b	neg	local02, local02
0441c     FD 7E 02 FB | 	rdlong	local10, objptr
04420     37 7F 0A F2 | 	cmp	local10, local02 wz
04424     34 00 90 AD |  if_e	jmp	#LR__0165
04428                 | '         kbdbuf[kbdfront]:=kbmreport
04428     FD 74 02 FB | 	rdlong	local05, objptr
0442c     02 74 66 F0 | 	shl	local05, #2
04430     20 FA 05 F1 | 	add	objptr, #32
04434     FD 74 02 F1 | 	add	local05, objptr
04438     3A 83 62 FC | 	wrlong	local12, local05
0443c                 | '         kbdfront+=1
0443c     20 FA 85 F1 | 	sub	objptr, #32
04440     FD 6C 02 FB | 	rdlong	local01, objptr
04444     01 6C 06 F1 | 	add	local01, #1
04448     FD 6C 62 FC | 	wrlong	local01, objptr
0444c                 | '         kbdfront:=kbdfront // 32
0444c     36 75 52 F6 | 	abs	local05, local01 wc
04450     1F 74 06 F5 | 	and	local05, #31
04454     3A 75 62 C6 |  if_b	neg	local05, local05
04458     FD 74 62 FC | 	wrlong	local05, objptr
0445c                 | LR__0165
0445c                 | LR__0166
0445c                 | '     b:=(-1)
0445c     01 72 66 F6 | 	neg	local04, #1
04460                 | LR__0167
04460                 | ' 
04460                 | ' 
04460                 | '   if long[$30]==0
04460     30 74 0E FB | 	rdlong	local05, #48 wz
04464     64 00 90 5D |  if_ne	jmp	#LR__0169
04468                 | '     if kbdfront<>kbdtail
04468     FD 74 02 FB | 	rdlong	local05, objptr
0446c     04 FA 05 F1 | 	add	objptr, #4
04470     FD 6E 02 FB | 	rdlong	local02, objptr
04474     04 FA 85 F1 | 	sub	objptr, #4
04478     37 6D 02 F6 | 	mov	local01, local02
0447c     36 75 0A F2 | 	cmp	local05, local01 wz
04480     48 00 90 AD |  if_e	jmp	#LR__0168
04484                 | '       long[$30]:=kbdbuf[kbdtail]
04484     04 FA 05 F1 | 	add	objptr, #4
04488     FD 74 02 FB | 	rdlong	local05, objptr
0448c     02 74 66 F0 | 	shl	local05, #2
04490     1C FA 05 F1 | 	add	objptr, #28
04494     FD 74 02 F1 | 	add	local05, objptr
04498     3A 7F 02 FB | 	rdlong	local10, local05
0449c     30 7E 66 FC | 	wrlong	local10, #48
044a0                 | '       kbdtail++
044a0     1C FA 85 F1 | 	sub	objptr, #28
044a4     FD 7E 02 FB | 	rdlong	local10, objptr
044a8     3F 6F 02 F6 | 	mov	local02, local10
044ac     01 6E 06 F1 | 	add	local02, #1
044b0     FD 6E 62 FC | 	wrlong	local02, objptr
044b4                 | '       kbdtail:= kbdtail // 32
044b4     37 6D 02 F6 | 	mov	local01, local02
044b8     36 75 52 F6 | 	abs	local05, local01 wc
044bc     1F 74 06 F5 | 	and	local05, #31
044c0     3A 75 62 C6 |  if_b	neg	local05, local05
044c4     FD 74 62 FC | 	wrlong	local05, objptr
044c8     04 FA 85 F1 | 	sub	objptr, #4
044cc                 | LR__0168
044cc                 | LR__0169
044cc                 | '       
044cc                 | '   if long[$34]==0
044cc     34 74 0E FB | 	rdlong	local05, #52 wz
044d0     68 00 90 5D |  if_ne	jmp	#LR__0171
044d4                 | '     if mousefront<>mousetail
044d4     08 FA 05 F1 | 	add	objptr, #8
044d8     FD 6C 02 FB | 	rdlong	local01, objptr
044dc     04 FA 05 F1 | 	add	objptr, #4
044e0     FD 7E 02 FB | 	rdlong	local10, objptr
044e4     0C FA 85 F1 | 	sub	objptr, #12
044e8     3F 6F 02 F6 | 	mov	local02, local10
044ec     37 6D 0A F2 | 	cmp	local01, local02 wz
044f0     48 00 90 AD |  if_e	jmp	#LR__0170
044f4                 | '       long[$34]:=mousebuf[mousetail]
044f4     0C FA 05 F1 | 	add	objptr, #12
044f8     FD 74 02 FB | 	rdlong	local05, objptr
044fc     02 74 66 F0 | 	shl	local05, #2
04500     94 FA 05 F1 | 	add	objptr, #148
04504     FD 74 02 F1 | 	add	local05, objptr
04508     3A 7F 02 FB | 	rdlong	local10, local05
0450c     34 7E 66 FC | 	wrlong	local10, #52
04510                 | '       mousetail++
04510     94 FA 85 F1 | 	sub	objptr, #148
04514     FD 7E 02 FB | 	rdlong	local10, objptr
04518     3F 6F 02 F6 | 	mov	local02, local10
0451c     01 6E 06 F1 | 	add	local02, #1
04520     FD 6E 62 FC | 	wrlong	local02, objptr
04524                 | '       mousetail:= mousetail // 128
04524     37 6D 02 F6 | 	mov	local01, local02
04528     36 75 52 F6 | 	abs	local05, local01 wc
0452c     7F 74 06 F5 | 	and	local05, #127
04530     3A 75 62 C6 |  if_b	neg	local05, local05
04534     FD 74 62 FC | 	wrlong	local05, objptr
04538     0C FA 85 F1 | 	sub	objptr, #12
0453c                 | LR__0170
0453c                 | LR__0171
0453c                 | ' 
0453c                 | '       
0453c                 | '   if long[$38]==0
0453c     38 74 0E FB | 	rdlong	local05, #56 wz
04540     70 00 90 5D |  if_ne	jmp	#LR__0173
04544                 | '     if midifront<>miditail
04544     10 FA 05 F1 | 	add	objptr, #16
04548     FD 6C 02 FB | 	rdlong	local01, objptr
0454c     04 FA 05 F1 | 	add	objptr, #4
04550     FD 7E 02 FB | 	rdlong	local10, objptr
04554     14 FA 85 F1 | 	sub	objptr, #20
04558     3F 6F 02 F6 | 	mov	local02, local10
0455c     37 6D 0A F2 | 	cmp	local01, local02 wz
04560     50 00 90 AD |  if_e	jmp	#LR__0172
04564                 | '       long[$38]:=midibuf[miditail]
04564     14 FA 05 F1 | 	add	objptr, #20
04568     FD 74 02 FB | 	rdlong	local05, objptr
0456c     02 74 66 F0 | 	shl	local05, #2
04570     01 00 00 FF 
04574     8C FA 05 F1 | 	add	objptr, ##652
04578     FD 74 02 F1 | 	add	local05, objptr
0457c     3A 7F 02 FB | 	rdlong	local10, local05
04580     38 7E 66 FC | 	wrlong	local10, #56
04584                 | '       miditail++
04584     01 00 00 FF 
04588     8C FA 85 F1 | 	sub	objptr, ##652
0458c     FD 7E 02 FB | 	rdlong	local10, objptr
04590     3F 6F 02 F6 | 	mov	local02, local10
04594     01 6E 06 F1 | 	add	local02, #1
04598     FD 6E 62 FC | 	wrlong	local02, objptr
0459c                 | '       miditail:= miditail // 32
0459c     37 6D 02 F6 | 	mov	local01, local02
045a0     36 75 52 F6 | 	abs	local05, local01 wc
045a4     1F 74 06 F5 | 	and	local05, #31
045a8     3A 75 62 C6 |  if_b	neg	local05, local05
045ac     FD 74 62 FC | 	wrlong	local05, objptr
045b0     14 FA 85 F1 | 	sub	objptr, #20
045b4                 | LR__0172
045b4                 | LR__0173
045b4                 | '       
045b4                 | '   if long[$3c]==0
045b4     3C 74 0E FB | 	rdlong	local05, #60 wz
045b8     54 FB 9F 5D |  if_ne	jmp	#LR__0150
045bc                 | '     if serialfront<>serialtail
045bc     18 FA 05 F1 | 	add	objptr, #24
045c0     FD 6C 02 FB | 	rdlong	local01, objptr
045c4     04 FA 05 F1 | 	add	objptr, #4
045c8     FD 7E 02 FB | 	rdlong	local10, objptr
045cc     1C FA 85 F1 | 	sub	objptr, #28
045d0     3F 6F 02 F6 | 	mov	local02, local10
045d4     37 6D 0A F2 | 	cmp	local01, local02 wz
045d8     34 FB 9F AD |  if_e	jmp	#LR__0150
045dc                 | '       byte[$3c]:=255
045dc     3C FE 4D FC | 	wrbyte	#255, #60
045e0                 | '       byte[$3D]:=serialbuf[serialtail]
045e0     1C FA 05 F1 | 	add	objptr, #28
045e4     FD 74 02 FB | 	rdlong	local05, objptr
045e8     01 00 00 FF 
045ec     04 FB 05 F1 | 	add	objptr, ##772
045f0     FD 74 02 F1 | 	add	local05, objptr
045f4     3A 7F C2 FA | 	rdbyte	local10, local05
045f8     3D 7E 46 FC | 	wrbyte	local10, #61
045fc                 | '       serialtail++
045fc     01 00 00 FF 
04600     04 FB 85 F1 | 	sub	objptr, ##772
04604     FD 7E 02 FB | 	rdlong	local10, objptr
04608     3F 6F 02 F6 | 	mov	local02, local10
0460c     01 6E 06 F1 | 	add	local02, #1
04610     FD 6E 62 FC | 	wrlong	local02, objptr
04614                 | '       serialtail:= serialtail // 32
04614     37 6D 02 F6 | 	mov	local01, local02
04618     36 75 52 F6 | 	abs	local05, local01 wc
0461c     1F 74 06 F5 | 	and	local05, #31
04620     3A 75 62 C6 |  if_b	neg	local05, local05
04624     FD 74 62 FC | 	wrlong	local05, objptr
04628     1C FA 85 F1 | 	sub	objptr, #28
0462c     E0 FA 9F FD | 	jmp	#LR__0150
04630     AF F0 03 F6 | 	mov	ptra, fp
04634     BA 00 A0 FD | 	call	#popregs_
04638                 | _retrocog_spin2_serialcog_ret
04638     2D 00 64 FD | 	ret
0463c                 | 
0463c                 | '       
0463c                 | ' 
0463c                 | ' ''---------------------- Serial functions from jm_serial.spin2, modified
0463c                 | ' 
0463c                 | ' pub serial_start(rxpin, txpin, baud) | bitmode
0463c                 | _retrocog_spin2_serial_start
0463c     04 5A 05 F6 | 	mov	COUNT_, #4
04640     B0 00 A0 FD | 	call	#pushregs_
04644     2F 6D 02 F6 | 	mov	local01, arg01
04648     30 6F 02 F6 | 	mov	local02, arg02
0464c                 | ' 
0464c                 | ' bitmode := muldiv64(clkfreq, $1_0000, baud) & $FFFFFC00       ' set bit timing
0464c     14 5E 06 FB | 	rdlong	arg01, #20
04650     10 60 C6 F9 | 	decod	arg02, #16
04654     30 5F 02 FD | 	qmul	arg01, arg02
04658     19 70 62 FD | 	getqy	local03
0465c     18 72 62 FD | 	getqx	local04
04660     28 70 62 FD | 	setq	local03
04664     31 73 12 FD | 	qdiv	local04, arg03
04668     18 18 62 FD | 	getqx	result1
0466c     0C 63 02 F6 | 	mov	arg03, result1
04670     FE FF 7F FF 
04674     00 62 06 F5 | 	and	arg03, ##-1024
04678                 | ' bitmode |= 7                                                  ' set bits (8)
04678     07 62 46 F5 | 	or	arg03, #7
0467c                 | ' pinstart(rxpin,P_HIGH_15K|P_ASYNC_RX,bitmode,0)
0467c     40 6C 62 FD | 	dirl	local01
04680     08 00 80 FF 
04684     36 7D 08 FC | 	wrpin	##4158, local01
04688     36 63 12 FC | 	wxpin	arg03, local01
0468c     36 01 28 FC | 	wypin	#0, local01
04690     41 6C 62 FD | 	dirh	local01
04694                 | ' pinstart(txpin,P_ASYNC_TX|P_OE,bitmode,0)
04694     40 6E 62 FD | 	dirl	local02
04698     37 F9 08 FC | 	wrpin	#124, local02
0469c     37 63 12 FC | 	wxpin	arg03, local02
046a0     37 01 28 FC | 	wypin	#0, local02
046a4     41 6E 62 FD | 	dirh	local02
046a8                 | ' pinhigh(rxpin)
046a8     59 6C 62 FD | 	drvh	local01
046ac     AF F0 03 F6 | 	mov	ptra, fp
046b0     BA 00 A0 FD | 	call	#popregs_
046b4                 | _retrocog_spin2_serial_start_ret
046b4     2D 00 64 FD | 	ret
046b8                 | 
046b8                 | ' 
046b8                 | ' pub rxcheck(pin) : rxbyte | check
046b8                 | _retrocog_spin2_rxcheck
046b8     03 5A 05 F6 | 	mov	COUNT_, #3
046bc     B0 00 A0 FD | 	call	#pushregs_
046c0     2F 6D 02 F6 | 	mov	local01, arg01
046c4                 | ' 
046c4                 | ' '' Check for serial input
046c4                 | ' '' -- returns -1 if nothing available
046c4                 | ' 
046c4                 | '   rxbyte := -1
046c4     01 6E 66 F6 | 	neg	local02, #1
046c8                 | '   check := pinr(pin)
046c8     36 5F 02 F6 | 	mov	arg01, local01
046cc     4C 28 B0 FD | 	call	#__system___pinread
046d0     0C 71 0A F6 | 	mov	local03, result1 wz
046d4                 | '   if (check)
046d4                 | '     rxbyte := rdpin(pin) >> 24
046d4     00 6E 06 56 |  if_ne	mov	local02, #0
046d8     36 6F 8A 5A |  if_ne	rdpin	local02, local01
046dc     18 6E 46 50 |  if_ne	shr	local02, #24
046e0     37 19 02 F6 | 	mov	result1, local02
046e4     AF F0 03 F6 | 	mov	ptra, fp
046e8     BA 00 A0 FD | 	call	#popregs_
046ec                 | _retrocog_spin2_rxcheck_ret
046ec     2D 00 64 FD | 	ret
046f0                 | 
046f0                 | _trackerplayer_spin2_initModule
046f0     0B 5A 05 F6 | 	mov	COUNT_, #11
046f4     B0 00 A0 FD | 	call	#pushregs_
046f8     30 F0 07 F1 | 	add	ptra, #48
046fc     AF 5E 62 FC | 	wrlong	arg01, fp
04700     04 5E 05 F1 | 	add	fp, #4
04704     AF 60 62 FC | 	wrlong	arg02, fp
04708     04 5E 85 F1 | 	sub	fp, #4
0470c                 | ' 
0470c                 | '   ' Set some data pointers
0470c                 | '   magicFour      := hubPtr + 1080
0470c     AF 6C 02 FB | 	rdlong	local01, fp
04710     02 00 00 FF 
04714     38 6C 06 F1 | 	add	local01, ##1080
04718     9D FA 05 F1 | 	add	objptr, #157
0471c     FD 6C 62 FC | 	wrlong	local01, objptr
04720                 | '   nameStr        := hubPtr
04720     AF 6C 02 FB | 	rdlong	local01, fp
04724     97 FA 85 F1 | 	sub	objptr, #151
04728     FD 6C 62 FC | 	wrlong	local01, objptr
0472c                 | '   samplesInfoLut := hubPtr + 20
0472c     AF 6C 02 FB | 	rdlong	local01, fp
04730     14 6C 06 F1 | 	add	local01, #20
04734     04 FA 05 F1 | 	add	objptr, #4
04738     FD 6C 62 FC | 	wrlong	local01, objptr
0473c                 | ' 
0473c                 | '   ' Is this a 31 sample module?
0473c                 | '   if byte[magicFour][0] == "M" and byte[magicFour][2] == "K"
0473c     93 FA 05 F1 | 	add	objptr, #147
04740     FD 6C 02 FB | 	rdlong	local01, objptr
04744     9D FA 85 F1 | 	sub	objptr, #157
04748     36 6F C2 FA | 	rdbyte	local02, local01
0474c     4D 6E 0E F2 | 	cmp	local02, #77 wz
04750     4C 01 90 5D |  if_ne	jmp	#LR__0177
04754     9D FA 05 F1 | 	add	objptr, #157
04758     FD 70 02 FB | 	rdlong	local03, objptr
0475c     9D FA 85 F1 | 	sub	objptr, #157
04760     02 70 06 F1 | 	add	local03, #2
04764     38 73 C2 FA | 	rdbyte	local04, local03
04768     4B 72 0E F2 | 	cmp	local04, #75 wz
0476c     30 01 90 5D |  if_ne	jmp	#LR__0177
04770                 | '     songLength          := byte[hubPtr + 950]
04770     AF 6C 02 FB | 	rdlong	local01, fp
04774     01 00 00 FF 
04778     B6 6D 06 F1 | 	add	local01, ##950
0477c     36 75 C2 FA | 	rdbyte	local05, local01
04780     9A FA 05 F1 | 	add	objptr, #154
04784     FD 74 42 FC | 	wrbyte	local05, objptr
04788                 | '     unknown1            := byte[hubPtr + 951]
04788     AF 6C 02 FB | 	rdlong	local01, fp
0478c     01 00 00 FF 
04790     B7 6D 06 F1 | 	add	local01, ##951
04794     36 75 C2 FA | 	rdbyte	local05, local01
04798     02 FA 05 F1 | 	add	objptr, #2
0479c     FD 74 42 FC | 	wrbyte	local05, objptr
047a0                 | '     songPositionsLut    :=      hubPtr + 952
047a0     AF 6C 02 FB | 	rdlong	local01, fp
047a4     01 00 00 FF 
047a8     B8 6D 06 F1 | 	add	local01, ##952
047ac     06 FA 85 F1 | 	sub	objptr, #6
047b0     FD 6C 62 FC | 	wrlong	local01, objptr
047b4                 | '     patternsData        :=      hubPtr + 1084
047b4     AF 6C 02 FB | 	rdlong	local01, fp
047b8     02 00 00 FF 
047bc     3C 6C 06 F1 | 	add	local01, ##1084
047c0     04 FA 85 F1 | 	sub	objptr, #4
047c4     FD 6C 62 FC | 	wrlong	local01, objptr
047c8                 | '     numberOfInstruments := 31
047c8     14 FA 05 F1 | 	add	objptr, #20
047cc     FD 3E 48 FC | 	wrbyte	#31, objptr
047d0                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
047d0     0B FA 85 F1 | 	sub	objptr, #11
047d4     FD 00 48 FC | 	wrbyte	#0, objptr
047d8     9B FA 85 F1 | 	sub	objptr, #155
047dc                 | '     repeat i from 952 to 1079
047dc     08 5E 05 F1 | 	add	fp, #8
047e0     01 00 80 FF 
047e4     AF 70 6B FC | 	wrlong	##952, fp
047e8     08 5E 85 F1 | 	sub	fp, #8
047ec     80 B8 9F FE | 	loc	pa,	#(@LR__0176-@LR__0174)
047f0     93 00 A0 FD | 	call	#FCACHE_LOAD_
047f4                 | LR__0174
047f4                 | '       if byte[hubPtr][i] > numberOfPatterns
047f4     AF 76 02 FB | 	rdlong	local06, fp
047f8     08 5E 05 F1 | 	add	fp, #8
047fc     AF 6E 02 FB | 	rdlong	local02, fp
04800     08 5E 85 F1 | 	sub	fp, #8
04804     3B 6F 02 F1 | 	add	local02, local06
04808     37 73 C2 FA | 	rdbyte	local04, local02
0480c     9B FA 05 F1 | 	add	objptr, #155
04810     FD 78 C2 FA | 	rdbyte	local07, objptr
04814     9B FA 85 F1 | 	sub	objptr, #155
04818     3C 73 5A F2 | 	cmps	local04, local07 wcz
0481c     24 00 90 ED |  if_be	jmp	#LR__0175
04820                 | '         numberOfPatterns := byte[hubPtr][i]
04820     AF 76 02 FB | 	rdlong	local06, fp
04824     08 5E 05 F1 | 	add	fp, #8
04828     AF 6E 02 FB | 	rdlong	local02, fp
0482c     08 5E 85 F1 | 	sub	fp, #8
04830     3B 6F 02 F1 | 	add	local02, local06
04834     37 73 C2 FA | 	rdbyte	local04, local02
04838     9B FA 05 F1 | 	add	objptr, #155
0483c     FD 72 42 FC | 	wrbyte	local04, objptr
04840     9B FA 85 F1 | 	sub	objptr, #155
04844                 | LR__0175
04844     08 5E 05 F1 | 	add	fp, #8
04848     AF 74 02 FB | 	rdlong	local05, fp
0484c     01 74 06 F1 | 	add	local05, #1
04850     AF 74 62 FC | 	wrlong	local05, fp
04854     08 5E 85 F1 | 	sub	fp, #8
04858     02 00 00 FF 
0485c     38 74 1E F2 | 	cmp	local05, ##1080 wcz
04860     90 FF 9F CD |  if_b	jmp	#LR__0174
04864                 | LR__0176
04864                 | '     numberOfPatterns++
04864     9B FA 05 F1 | 	add	objptr, #155
04868     FD 74 C2 FA | 	rdbyte	local05, objptr
0486c     FD 6E C2 FA | 	rdbyte	local02, objptr
04870     01 6E 06 F1 | 	add	local02, #1
04874     FD 6E 42 FC | 	wrbyte	local02, objptr
04878                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
04878     09 FA 85 F1 | 	sub	objptr, #9
0487c     FD 6C 02 FB | 	rdlong	local01, objptr
04880     09 FA 05 F1 | 	add	objptr, #9
04884     FD 6E C2 FA | 	rdbyte	local02, objptr
04888     0A 6E 66 F0 | 	shl	local02, #10
0488c     37 6D 02 F1 | 	add	local01, local02
04890     8D FA 85 F1 | 	sub	objptr, #141
04894     FD 6C 62 FC | 	wrlong	local01, objptr
04898     0E FA 85 F1 | 	sub	objptr, #14
0489c                 | ' 
0489c                 | '   ' This must be an oldschool 15 sample soundtracker module
0489c                 | '   else
0489c     1C 01 90 FD | 	jmp	#LR__0181
048a0                 | LR__0177
048a0                 | '     songLength          := byte[hubPtr + 470]
048a0     AF 6C 02 FB | 	rdlong	local01, fp
048a4     D6 6D 06 F1 | 	add	local01, #470
048a8     36 75 C2 FA | 	rdbyte	local05, local01
048ac     9A FA 05 F1 | 	add	objptr, #154
048b0     FD 74 42 FC | 	wrbyte	local05, objptr
048b4                 | '     unknown1            := byte[hubPtr + 471]
048b4     AF 6C 02 FB | 	rdlong	local01, fp
048b8     D7 6D 06 F1 | 	add	local01, #471
048bc     36 75 C2 FA | 	rdbyte	local05, local01
048c0     02 FA 05 F1 | 	add	objptr, #2
048c4     FD 74 42 FC | 	wrbyte	local05, objptr
048c8                 | '     songPositionsLut    :=      hubPtr + 472
048c8     AF 6C 02 FB | 	rdlong	local01, fp
048cc     D8 6D 06 F1 | 	add	local01, #472
048d0     06 FA 85 F1 | 	sub	objptr, #6
048d4     FD 6C 62 FC | 	wrlong	local01, objptr
048d8                 | '     patternsData        :=      hubPtr + 600
048d8     AF 6C 02 FB | 	rdlong	local01, fp
048dc     01 00 00 FF 
048e0     58 6C 06 F1 | 	add	local01, ##600
048e4     04 FA 85 F1 | 	sub	objptr, #4
048e8     FD 6C 62 FC | 	wrlong	local01, objptr
048ec                 | '     numberOfInstruments := 15
048ec     14 FA 05 F1 | 	add	objptr, #20
048f0     FD 1E 48 FC | 	wrbyte	#15, objptr
048f4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
048f4     0B FA 85 F1 | 	sub	objptr, #11
048f8     FD 00 48 FC | 	wrbyte	#0, objptr
048fc     9B FA 85 F1 | 	sub	objptr, #155
04900                 | '     repeat i from 472 to 599
04900     08 5E 05 F1 | 	add	fp, #8
04904     AF B0 6B FC | 	wrlong	#472, fp
04908     08 5E 85 F1 | 	sub	fp, #8
0490c     60 B7 9F FE | 	loc	pa,	#(@LR__0180-@LR__0178)
04910     93 00 A0 FD | 	call	#FCACHE_LOAD_
04914                 | LR__0178
04914                 | '       if byte[hubPtr][i] > numberOfPatterns
04914     AF 76 02 FB | 	rdlong	local06, fp
04918     08 5E 05 F1 | 	add	fp, #8
0491c     AF 6E 02 FB | 	rdlong	local02, fp
04920     08 5E 85 F1 | 	sub	fp, #8
04924     3B 6F 02 F1 | 	add	local02, local06
04928     37 73 C2 FA | 	rdbyte	local04, local02
0492c     9B FA 05 F1 | 	add	objptr, #155
04930     FD 78 C2 FA | 	rdbyte	local07, objptr
04934     9B FA 85 F1 | 	sub	objptr, #155
04938     3C 73 5A F2 | 	cmps	local04, local07 wcz
0493c     24 00 90 ED |  if_be	jmp	#LR__0179
04940                 | '         numberOfPatterns := byte[hubPtr][i]
04940     AF 76 02 FB | 	rdlong	local06, fp
04944     08 5E 05 F1 | 	add	fp, #8
04948     AF 6E 02 FB | 	rdlong	local02, fp
0494c     08 5E 85 F1 | 	sub	fp, #8
04950     3B 6F 02 F1 | 	add	local02, local06
04954     37 73 C2 FA | 	rdbyte	local04, local02
04958     9B FA 05 F1 | 	add	objptr, #155
0495c     FD 72 42 FC | 	wrbyte	local04, objptr
04960     9B FA 85 F1 | 	sub	objptr, #155
04964                 | LR__0179
04964     08 5E 05 F1 | 	add	fp, #8
04968     AF 74 02 FB | 	rdlong	local05, fp
0496c     01 74 06 F1 | 	add	local05, #1
04970     AF 74 62 FC | 	wrlong	local05, fp
04974     08 5E 85 F1 | 	sub	fp, #8
04978     01 00 00 FF 
0497c     58 74 1E F2 | 	cmp	local05, ##600 wcz
04980     90 FF 9F CD |  if_b	jmp	#LR__0178
04984                 | LR__0180
04984                 | '     numberOfPatterns++
04984     9B FA 05 F1 | 	add	objptr, #155
04988     FD 74 C2 FA | 	rdbyte	local05, objptr
0498c     FD 6E C2 FA | 	rdbyte	local02, objptr
04990     01 6E 06 F1 | 	add	local02, #1
04994     FD 6E 42 FC | 	wrbyte	local02, objptr
04998                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
04998     09 FA 85 F1 | 	sub	objptr, #9
0499c     FD 6C 02 FB | 	rdlong	local01, objptr
049a0     09 FA 05 F1 | 	add	objptr, #9
049a4     FD 6E C2 FA | 	rdbyte	local02, objptr
049a8     0A 6E 66 F0 | 	shl	local02, #10
049ac     37 6D 02 F1 | 	add	local01, local02
049b0     8D FA 85 F1 | 	sub	objptr, #141
049b4     FD 6C 62 FC | 	wrlong	local01, objptr
049b8     0E FA 85 F1 | 	sub	objptr, #14
049bc                 | LR__0181
049bc                 | ' 
049bc                 | '   ' Iterate through all samples and fill in the sample pointer LUT
049bc                 | '   tmpPtr := sampleDataPtr
049bc     0E FA 05 F1 | 	add	objptr, #14
049c0     FD 6C 02 FB | 	rdlong	local01, objptr
049c4     0C 5E 05 F1 | 	add	fp, #12
049c8     AF 6C 62 FC | 	wrlong	local01, fp
049cc                 | '   repeat i from 1 to numberOfInstruments
049cc     04 5E 85 F1 | 	sub	fp, #4
049d0     AF 02 68 FC | 	wrlong	#1, fp
049d4     08 5E 85 F1 | 	sub	fp, #8
049d8     98 FA 05 F1 | 	add	objptr, #152
049dc     FD 6E C2 FA | 	rdbyte	local02, objptr
049e0     01 6E 5E F2 | 	cmps	local02, #1 wcz
049e4     01 74 06 16 |  if_a	mov	local05, #1
049e8     01 74 66 E6 |  if_be	neg	local05, #1
049ec     3A 7B 02 F6 | 	mov	local08, local05
049f0     FD 7C C2 FA | 	rdbyte	local09, objptr
049f4     A6 FA 85 F1 | 	sub	objptr, #166
049f8     3D 7D 02 F1 | 	add	local09, local08
049fc                 | LR__0182
049fc                 | '     samplesPtrLut[i-1] := tmpPtr
049fc     08 5E 05 F1 | 	add	fp, #8
04a00     AF 7E 02 FB | 	rdlong	local10, fp
04a04     01 7E 86 F1 | 	sub	local10, #1
04a08     02 7E 66 F0 | 	shl	local10, #2
04a0c     12 FA 05 F1 | 	add	objptr, #18
04a10     FD 7E 02 F1 | 	add	local10, objptr
04a14     04 5E 05 F1 | 	add	fp, #4
04a18     AF 80 02 FB | 	rdlong	local11, fp
04a1c     3F 81 62 FC | 	wrlong	local11, local10
04a20                 | '     getSampleInfo(i, @d5, @samLength, @d1, @d2, @d3, @d4)
04a20     04 5E 85 F1 | 	sub	fp, #4
04a24     AF 5E 02 FB | 	rdlong	arg01, fp
04a28     1C 5E 05 F1 | 	add	fp, #28
04a2c     AF 60 02 F6 | 	mov	arg02, fp
04a30     14 5E 85 F1 | 	sub	fp, #20
04a34     AF 62 02 F6 | 	mov	arg03, fp
04a38     04 5E 05 F1 | 	add	fp, #4
04a3c     AF 64 02 F6 | 	mov	arg04, fp
04a40     04 5E 05 F1 | 	add	fp, #4
04a44     AF 66 02 F6 | 	mov	arg05, fp
04a48     04 5E 05 F1 | 	add	fp, #4
04a4c     AF 68 02 F6 | 	mov	arg06, fp
04a50     04 5E 05 F1 | 	add	fp, #4
04a54     AF 6A 02 F6 | 	mov	arg07, fp
04a58     20 5E 85 F1 | 	sub	fp, #32
04a5c     12 FA 85 F1 | 	sub	objptr, #18
04a60     F0 06 B0 FD | 	call	#_trackerplayer_spin2_getSampleInfo
04a64                 | '     tmpPtr += samLength
04a64     0C 5E 05 F1 | 	add	fp, #12
04a68     AF 78 02 FB | 	rdlong	local07, fp
04a6c     04 5E 05 F1 | 	add	fp, #4
04a70     AF 7E 02 FB | 	rdlong	local10, fp
04a74     3F 79 02 F1 | 	add	local07, local10
04a78     04 5E 85 F1 | 	sub	fp, #4
04a7c     AF 78 62 FC | 	wrlong	local07, fp
04a80     04 5E 85 F1 | 	sub	fp, #4
04a84     AF 78 02 FB | 	rdlong	local07, fp
04a88     3D 79 02 F1 | 	add	local07, local08
04a8c     AF 78 62 FC | 	wrlong	local07, fp
04a90     08 5E 85 F1 | 	sub	fp, #8
04a94     3E 79 0A F2 | 	cmp	local07, local09 wz
04a98     60 FF 9F 5D |  if_ne	jmp	#LR__0182
04a9c                 | ' 
04a9c                 | '   ' Below this point, all play routine variables are resest to their default values
04a9c                 | '   tickCounter                 := 0
04a9c     A1 FA 05 F1 | 	add	objptr, #161
04aa0     FD 00 48 FC | 	wrbyte	#0, objptr
04aa4                 | '   patternRow                  := 0
04aa4     01 FA 05 F1 | 	add	objptr, #1
04aa8     FD 00 48 FC | 	wrbyte	#0, objptr
04aac                 | '   songPosition                := startPattern
04aac     04 5E 05 F1 | 	add	fp, #4
04ab0     AF 6C 02 FB | 	rdlong	local01, fp
04ab4     04 5E 85 F1 | 	sub	fp, #4
04ab8     01 FA 05 F1 | 	add	objptr, #1
04abc     FD 6C 42 FC | 	wrbyte	local01, objptr
04ac0                 | '   currentSongSpeed            := 6
04ac0     01 FA 05 F1 | 	add	objptr, #1
04ac4     FD 0C 48 FC | 	wrbyte	#6, objptr
04ac8                 | '   patternDelay                := 0
04ac8     01 FA 05 F1 | 	add	objptr, #1
04acc     FD 00 48 FC | 	wrbyte	#0, objptr
04ad0                 | '   ticksPerMinute              := 50 * 60
04ad0     02 FB 05 F1 | 	add	objptr, #258
04ad4     05 00 80 FF 
04ad8     FD 70 6B FC | 	wrlong	##3000, objptr
04adc     A7 FB 85 F1 | 	sub	objptr, #423
04ae0                 | '   cyclesToWait                := systemClock / 50
04ae0     FD 98 02 FB | 	rdlong	muldiva_, objptr
04ae4     32 9A 06 F6 | 	mov	muldivb_, #50
04ae8     C6 00 A0 FD | 	call	#divide_
04aec     AB FB 05 F1 | 	add	objptr, #427
04af0     FD 9A 62 FC | 	wrlong	muldivb_, objptr
04af4                 | '   sampleNumber_memory         := 0
04af4     35 FA 05 F1 | 	add	objptr, #53
04af8     FD 00 48 FC | 	wrbyte	#0, objptr
04afc                 | '   lpFilter                    := 0
04afc     25 FA 85 F1 | 	sub	objptr, #37
04b00     FD 00 48 FC | 	wrbyte	#0, objptr
04b04                 | '   cmdD_memoryX                := 0
04b04     29 FA 05 F1 | 	add	objptr, #41
04b08     FD 00 48 FC | 	wrbyte	#0, objptr
04b0c                 | '   cmdD_memoryY                := 0
04b0c     01 FA 05 F1 | 	add	objptr, #1
04b10     FD 00 48 FC | 	wrbyte	#0, objptr
04b14                 | '   cmdD_updatePosition         := false
04b14     01 FA 05 F1 | 	add	objptr, #1
04b18     FD 00 48 FC | 	wrbyte	#0, objptr
04b1c                 | '   cmdB_memoryZ                := 0
04b1c     01 FA 05 F1 | 	add	objptr, #1
04b20     FD 00 48 FC | 	wrbyte	#0, objptr
04b24                 | '   cmdB_updatePosition         := false
04b24     01 FA 05 F1 | 	add	objptr, #1
04b28     FD 00 48 FC | 	wrbyte	#0, objptr
04b2c                 | '   cmdE6_updatePositionCommon  := false
04b2c     0D FA 05 F1 | 	add	objptr, #13
04b30     FD 00 48 FC | 	wrbyte	#0, objptr
04b34     F5 FB 85 F1 | 	sub	objptr, #501
04b38                 | ' 
04b38                 | '   repeat i from 0 to LAST_CHANNEL
04b38     08 5E 05 F1 | 	add	fp, #8
04b3c     AF 00 68 FC | 	wrlong	#0, fp
04b40     08 5E 85 F1 | 	sub	fp, #8
04b44                 | LR__0183
04b44                 | ' 
04b44                 | '     currRepeatPoint[i]        := 0
04b44     08 5E 05 F1 | 	add	fp, #8
04b48     AF 70 02 FB | 	rdlong	local03, fp
04b4c     01 70 66 F0 | 	shl	local03, #1
04b50     D7 FA 05 F1 | 	add	objptr, #215
04b54     FD 70 02 F1 | 	add	local03, objptr
04b58     38 01 58 FC | 	wrword	#0, local03
04b5c                 | '     currSampleLength[i]       := 4
04b5c     AF 70 02 FB | 	rdlong	local03, fp
04b60     01 70 66 F0 | 	shl	local03, #1
04b64     1C FA 85 F1 | 	sub	objptr, #28
04b68     FD 70 02 F1 | 	add	local03, objptr
04b6c     38 09 58 FC | 	wrword	#4, local03
04b70                 | '     currSamplePtr[i]          := @null
04b70     AF 6E 02 FB | 	rdlong	local02, fp
04b74     02 6E 66 F0 | 	shl	local02, #2
04b78     14 FA 85 F1 | 	sub	objptr, #20
04b7c     FD 6E 02 F1 | 	add	local02, objptr
04b80     37 15 62 FC | 	wrlong	ptr__trackerplayer_spin2_dat__, local02
04b84                 | '     currSampleNr[i]           := 0
04b84     AF 74 02 FB | 	rdlong	local05, fp
04b88     10 FA 05 F1 | 	add	objptr, #16
04b8c     FD 74 02 F1 | 	add	local05, objptr
04b90     3A 01 48 FC | 	wrbyte	#0, local05
04b94                 | '     currRepeatLength[i]       := 1
04b94     AF 74 02 FB | 	rdlong	local05, fp
04b98     02 74 66 F0 | 	shl	local05, #2
04b9c     0C FA 05 F1 | 	add	objptr, #12
04ba0     FD 74 02 F1 | 	add	local05, objptr
04ba4     3A 03 68 FC | 	wrlong	#1, local05
04ba8                 | '     currPeriod[i]             := 400
04ba8     AF 74 02 FB | 	rdlong	local05, fp
04bac     02 74 66 F0 | 	shl	local05, #2
04bb0     1C FA 05 F1 | 	add	objptr, #28
04bb4     FD 74 02 F1 | 	add	local05, objptr
04bb8     3A 21 6B FC | 	wrlong	#400, local05
04bbc                 | '     lastSetPeriod[i]          := 400
04bbc     AF 74 02 FB | 	rdlong	local05, fp
04bc0     02 74 66 F0 | 	shl	local05, #2
04bc4     48 FA 05 F1 | 	add	objptr, #72
04bc8     FD 74 02 F1 | 	add	local05, objptr
04bcc     3A 21 6B FC | 	wrlong	#400, local05
04bd0                 | '     lastSetSamplePtr[i]       := 0
04bd0     AF 74 02 FB | 	rdlong	local05, fp
04bd4     02 74 66 F0 | 	shl	local05, #2
04bd8     10 FA 05 F1 | 	add	objptr, #16
04bdc     FD 74 02 F1 | 	add	local05, objptr
04be0     3A 01 68 FC | 	wrlong	#0, local05
04be4                 | '     lastSetSampleNr[i]        := 0
04be4     AF 74 02 FB | 	rdlong	local05, fp
04be8     02 74 66 F0 | 	shl	local05, #2
04bec     10 FA 05 F1 | 	add	objptr, #16
04bf0     FD 74 02 F1 | 	add	local05, objptr
04bf4     3A 01 68 FC | 	wrlong	#0, local05
04bf8                 | '     lastSetSampleLength[i]    := 0
04bf8     AF 74 02 FB | 	rdlong	local05, fp
04bfc     02 74 66 F0 | 	shl	local05, #2
04c00     10 FA 05 F1 | 	add	objptr, #16
04c04     FD 74 02 F1 | 	add	local05, objptr
04c08     3A 01 68 FC | 	wrlong	#0, local05
04c0c                 | '     lastSetRepeatLength[i]    := 0
04c0c     AF 74 02 FB | 	rdlong	local05, fp
04c10     02 74 66 F0 | 	shl	local05, #2
04c14     10 FA 05 F1 | 	add	objptr, #16
04c18     FD 74 02 F1 | 	add	local05, objptr
04c1c     3A 01 68 FC | 	wrlong	#0, local05
04c20                 | '     lastSetRepeatPoint[i]     := 0
04c20     AF 74 02 FB | 	rdlong	local05, fp
04c24     02 74 66 F0 | 	shl	local05, #2
04c28     10 FA 05 F1 | 	add	objptr, #16
04c2c     FD 74 02 F1 | 	add	local05, objptr
04c30     3A 01 68 FC | 	wrlong	#0, local05
04c34                 | '     currVolume[i]             := 0
04c34     AF 74 02 FB | 	rdlong	local05, fp
04c38     02 74 66 F0 | 	shl	local05, #2
04c3c     78 FA 85 F1 | 	sub	objptr, #120
04c40     FD 74 02 F1 | 	add	local05, objptr
04c44     3A 01 68 FC | 	wrlong	#0, local05
04c48                 | '     currPanning[i]            := 0
04c48     AF 70 02 FB | 	rdlong	local03, fp
04c4c     01 70 66 F0 | 	shl	local03, #1
04c50     20 FA 05 F1 | 	add	objptr, #32
04c54     FD 70 02 F1 | 	add	local03, objptr
04c58     38 01 58 FC | 	wrword	#0, local03
04c5c                 | '     cmd3_memoryZ[i]           := 0
04c5c     AF 74 02 FB | 	rdlong	local05, fp
04c60     A9 FA 05 F1 | 	add	objptr, #169
04c64     FD 74 02 F1 | 	add	local05, objptr
04c68     3A 01 48 FC | 	wrbyte	#0, local05
04c6c                 | '     cmd4_memoryY[i]           := 0
04c6c     AF 74 02 FB | 	rdlong	local05, fp
04c70     04 FA 05 F1 | 	add	objptr, #4
04c74     FD 74 02 F1 | 	add	local05, objptr
04c78     3A 01 48 FC | 	wrbyte	#0, local05
04c7c                 | '     cmd4_memoryX[i]           := 0
04c7c     AF 74 02 FB | 	rdlong	local05, fp
04c80     04 FA 05 F1 | 	add	objptr, #4
04c84     FD 74 02 F1 | 	add	local05, objptr
04c88     3A 01 48 FC | 	wrbyte	#0, local05
04c8c                 | '     cmd7_memoryY[i]           := 0
04c8c     AF 74 02 FB | 	rdlong	local05, fp
04c90     04 FA 05 F1 | 	add	objptr, #4
04c94     FD 74 02 F1 | 	add	local05, objptr
04c98     3A 01 48 FC | 	wrbyte	#0, local05
04c9c                 | '     cmd7_memoryX[i]           := 0
04c9c     AF 74 02 FB | 	rdlong	local05, fp
04ca0     04 FA 05 F1 | 	add	objptr, #4
04ca4     FD 74 02 F1 | 	add	local05, objptr
04ca8     3A 01 48 FC | 	wrbyte	#0, local05
04cac                 | '     cmd9_memoryZ[i]           := 0
04cac     AF 74 02 FB | 	rdlong	local05, fp
04cb0     04 FA 05 F1 | 	add	objptr, #4
04cb4     FD 74 02 F1 | 	add	local05, objptr
04cb8     3A 01 48 FC | 	wrbyte	#0, local05
04cbc                 | '     cmdE6_memory[i]           := 0
04cbc     AF 74 02 FB | 	rdlong	local05, fp
04cc0     0D FA 05 F1 | 	add	objptr, #13
04cc4     FD 74 02 F1 | 	add	local05, objptr
04cc8     3A 01 48 FC | 	wrbyte	#0, local05
04ccc                 | '     cmdE6_counter[i]          := 0
04ccc     AF 74 02 FB | 	rdlong	local05, fp
04cd0     04 FA 05 F1 | 	add	objptr, #4
04cd4     FD 74 02 F1 | 	add	local05, objptr
04cd8     3A 01 48 FC | 	wrbyte	#0, local05
04cdc                 | '     cmdE6_updatePosition[i]   := false
04cdc     AF 74 02 FB | 	rdlong	local05, fp
04ce0     04 FA 05 F1 | 	add	objptr, #4
04ce4     FD 74 02 F1 | 	add	local05, objptr
04ce8     3A 01 48 FC | 	wrbyte	#0, local05
04cec                 | '     sampleNumber_memory[i]    := 0
04cec     AF 74 02 FB | 	rdlong	local05, fp
04cf0     11 FA 85 F1 | 	sub	objptr, #17
04cf4     FD 74 02 F1 | 	add	local05, objptr
04cf8     3A 01 48 FC | 	wrbyte	#0, local05
04cfc                 | '     vibratoPos[i]             := 0
04cfc     AF 74 02 FB | 	rdlong	local05, fp
04d00     59 FA 85 F1 | 	sub	objptr, #89
04d04     FD 74 02 F1 | 	add	local05, objptr
04d08     3A 01 48 FC | 	wrbyte	#0, local05
04d0c                 | '     portamentoPeriodMemory[i] := 0
04d0c     AF 74 02 FB | 	rdlong	local05, fp
04d10     02 74 66 F0 | 	shl	local05, #2
04d14     10 FA 05 F1 | 	add	objptr, #16
04d18     FD 74 02 F1 | 	add	local05, objptr
04d1c     3A 01 68 FC | 	wrlong	#0, local05
04d20                 | '     portaGlissando[i]         := 0
04d20     AF 74 02 FB | 	rdlong	local05, fp
04d24     25 FA 05 F1 | 	add	objptr, #37
04d28     FD 74 02 F1 | 	add	local05, objptr
04d2c     3A 01 48 FC | 	wrbyte	#0, local05
04d30                 | '     vibratoType[i]            := 0
04d30     AF 74 02 FB | 	rdlong	local05, fp
04d34     04 FA 05 F1 | 	add	objptr, #4
04d38     FD 74 02 F1 | 	add	local05, objptr
04d3c     3A 01 48 FC | 	wrbyte	#0, local05
04d40                 | '     tremoloType[i]            := 0
04d40     AF 74 02 FB | 	rdlong	local05, fp
04d44     04 FA 05 F1 | 	add	objptr, #4
04d48     FD 74 02 F1 | 	add	local05, objptr
04d4c     3A 01 48 FC | 	wrbyte	#0, local05
04d50                 | '     tremoloPos[i]             := 0
04d50     AF 74 02 FB | 	rdlong	local05, fp
04d54     39 FA 85 F1 | 	sub	objptr, #57
04d58     FD 74 02 F1 | 	add	local05, objptr
04d5c     3A 01 48 FC | 	wrbyte	#0, local05
04d60                 | '     deltaVolume[i]            := 0
04d60     AF 74 02 FB | 	rdlong	local05, fp
04d64     02 74 66 F0 | 	shl	local05, #2
04d68     7C FA 85 F1 | 	sub	objptr, #124
04d6c     FD 74 02 F1 | 	add	local05, objptr
04d70     3A 01 68 FC | 	wrlong	#0, local05
04d74                 | '     deltaPeriod[i]            := 0
04d74     AF 74 02 FB | 	rdlong	local05, fp
04d78     02 74 66 F0 | 	shl	local05, #2
04d7c     20 FA 85 F1 | 	sub	objptr, #32
04d80     FD 74 02 F1 | 	add	local05, objptr
04d84     3A 01 68 FC | 	wrlong	#0, local05
04d88                 | '     resetTremolo[i]           := 0
04d88     AF 74 02 FB | 	rdlong	local05, fp
04d8c     A0 FA 05 F1 | 	add	objptr, #160
04d90     FD 74 02 F1 | 	add	local05, objptr
04d94     3A 01 48 FC | 	wrbyte	#0, local05
04d98                 | '     resetVibrato[i]           := 0
04d98     AF 74 02 FB | 	rdlong	local05, fp
04d9c     04 FA 05 F1 | 	add	objptr, #4
04da0     FD 74 02 F1 | 	add	local05, objptr
04da4     3A 01 48 FC | 	wrbyte	#0, local05
04da8     AF 74 02 FB | 	rdlong	local05, fp
04dac     01 74 06 F1 | 	add	local05, #1
04db0     AF 74 62 FC | 	wrlong	local05, fp
04db4     08 5E 85 F1 | 	sub	fp, #8
04db8     04 74 5E F2 | 	cmps	local05, #4 wcz
04dbc     93 FB 85 F1 | 	sub	objptr, #403
04dc0     80 FD 9F CD |  if_b	jmp	#LR__0183
04dc4     AF F0 03 F6 | 	mov	ptra, fp
04dc8     BA 00 A0 FD | 	call	#popregs_
04dcc                 | _trackerplayer_spin2_initModule_ret
04dcc     2D 00 64 FD | 	ret
04dd0                 | 
04dd0                 | ' 
04dd0                 | ' 
04dd0                 | ' ' This routine needs to be ticked X number of times per second
04dd0                 | ' ' in order to advance the tracker play routine
04dd0                 | ' '
04dd0                 | ' PUB tick() | channel, sampleNumber, period, effect, i
04dd0                 | _trackerplayer_spin2_tick
04dd0     05 5A 05 F6 | 	mov	COUNT_, #5
04dd4     B0 00 A0 FD | 	call	#pushregs_
04dd8     14 F0 07 F1 | 	add	ptra, #20
04ddc                 | ' 
04ddc                 | '   if currentSongSpeed == 0
04ddc     A4 FA 05 F1 | 	add	objptr, #164
04de0     FD 6C CA FA | 	rdbyte	local01, objptr wz
04de4     A4 FA 85 F1 | 	sub	objptr, #164
04de8                 | '     return
04de8     88 02 90 AD |  if_e	jmp	#LR__0195
04dec                 | ' 
04dec                 | '   ' Iterate over the channels and process everything
04dec                 | '   repeat channel from 0 to LAST_CHANNEL
04dec     AF 00 68 FC | 	wrlong	#0, fp
04df0                 | LR__0184
04df0                 | ' 
04df0                 | '     getNoteData(channel, songPosition, patternRow, @sampleNumber, @period, @effect)
04df0     AF 5E 02 FB | 	rdlong	arg01, fp
04df4     A3 FA 05 F1 | 	add	objptr, #163
04df8     FD 60 C2 FA | 	rdbyte	arg02, objptr
04dfc     01 FA 85 F1 | 	sub	objptr, #1
04e00     FD 62 C2 FA | 	rdbyte	arg03, objptr
04e04     A2 FA 85 F1 | 	sub	objptr, #162
04e08     04 5E 05 F1 | 	add	fp, #4
04e0c     AF 64 02 F6 | 	mov	arg04, fp
04e10     04 5E 05 F1 | 	add	fp, #4
04e14     AF 66 02 F6 | 	mov	arg05, fp
04e18     04 5E 05 F1 | 	add	fp, #4
04e1c     AF 68 02 F6 | 	mov	arg06, fp
04e20     0C 5E 85 F1 | 	sub	fp, #12
04e24     28 04 B0 FD | 	call	#_trackerplayer_spin2_getNoteData
04e28                 | '     processChannel(channel, sampleNumber, period, effect)
04e28     AF 5E 02 FB | 	rdlong	arg01, fp
04e2c     04 5E 05 F1 | 	add	fp, #4
04e30     AF 60 02 FB | 	rdlong	arg02, fp
04e34     04 5E 05 F1 | 	add	fp, #4
04e38     AF 62 02 FB | 	rdlong	arg03, fp
04e3c     04 5E 05 F1 | 	add	fp, #4
04e40     AF 64 02 FB | 	rdlong	arg04, fp
04e44     0C 5E 85 F1 | 	sub	fp, #12
04e48     CC 05 B0 FD | 	call	#_trackerplayer_spin2_processChannel
04e4c     AF 6E 02 FB | 	rdlong	local02, fp
04e50     01 6E 06 F1 | 	add	local02, #1
04e54     AF 6E 62 FC | 	wrlong	local02, fp
04e58     04 6E 5E F2 | 	cmps	local02, #4 wcz
04e5c     90 FF 9F CD |  if_b	jmp	#LR__0184
04e60                 | ' 
04e60                 | '   ' Incrementation the main counter that drives the whole play routine
04e60                 | '   if ++tickCounter >= (currentSongSpeed + patternDelay)
04e60     A1 FA 05 F1 | 	add	objptr, #161
04e64     FD 6C C2 FA | 	rdbyte	local01, objptr
04e68     01 6C 06 F1 | 	add	local01, #1
04e6c     FD 6C 42 FC | 	wrbyte	local01, objptr
04e70     03 FA 05 F1 | 	add	objptr, #3
04e74     FD 70 C2 FA | 	rdbyte	local03, objptr
04e78     01 FA 05 F1 | 	add	objptr, #1
04e7c     FD 72 C2 FA | 	rdbyte	local04, objptr
04e80     39 71 02 F1 | 	add	local03, local04
04e84     04 FA 85 F1 | 	sub	objptr, #4
04e88     FD 74 C2 FA | 	rdbyte	local05, objptr
04e8c     A1 FA 85 F1 | 	sub	objptr, #161
04e90     38 75 5A F2 | 	cmps	local05, local03 wcz
04e94                 | '     tickCounter := 0
04e94     A1 FA 05 31 |  if_ae	add	objptr, #161
04e98     FD 00 48 3C |  if_ae	wrbyte	#0, objptr
04e9c     A1 FA 85 31 |  if_ae	sub	objptr, #161
04ea0                 | ' 
04ea0                 | '   ' If the tick is zero, increment the other counters and do some song positioning handling
04ea0                 | '   if tickCounter == 0
04ea0     A1 FA 05 F1 | 	add	objptr, #161
04ea4     FD 6C CA FA | 	rdbyte	local01, objptr wz
04ea8     A1 FA 85 F1 | 	sub	objptr, #161
04eac     C4 01 90 5D |  if_ne	jmp	#LR__0194
04eb0                 | ' 
04eb0                 | '     ' Handle the "pattern repeat" command, "E6"
04eb0                 | '     if cmdE6_updatePositionCommon
04eb0     F5 FB 05 F1 | 	add	objptr, #501
04eb4     FD 6C CA FA | 	rdbyte	local01, objptr wz
04eb8     F5 FB 85 F1 | 	sub	objptr, #501
04ebc     8C 00 90 AD |  if_e	jmp	#LR__0188
04ec0                 | '       repeat i from 0 to LAST_CHANNEL
04ec0     10 5E 05 F1 | 	add	fp, #16
04ec4     AF 00 68 FC | 	wrlong	#0, fp
04ec8     10 5E 85 F1 | 	sub	fp, #16
04ecc     A4 B1 9F FE | 	loc	pa,	#(@LR__0187-@LR__0185)
04ed0     93 00 A0 FD | 	call	#FCACHE_LOAD_
04ed4                 | LR__0185
04ed4                 | '         if cmdE6_updatePosition[i]
04ed4     10 5E 05 F1 | 	add	fp, #16
04ed8     AF 6E 02 FB | 	rdlong	local02, fp
04edc     10 5E 85 F1 | 	sub	fp, #16
04ee0     F1 FB 05 F1 | 	add	objptr, #497
04ee4     FD 6E 02 F1 | 	add	local02, objptr
04ee8     37 73 CA FA | 	rdbyte	local04, local02 wz
04eec     F1 FB 85 F1 | 	sub	objptr, #497
04ef0     24 00 90 AD |  if_e	jmp	#LR__0186
04ef4                 | '           patternRow := cmdE6_memory[i]
04ef4     10 5E 05 F1 | 	add	fp, #16
04ef8     AF 6E 02 FB | 	rdlong	local02, fp
04efc     10 5E 85 F1 | 	sub	fp, #16
04f00     E9 FB 05 F1 | 	add	objptr, #489
04f04     FD 6E 02 F1 | 	add	local02, objptr
04f08     37 73 C2 FA | 	rdbyte	local04, local02
04f0c     47 FB 85 F1 | 	sub	objptr, #327
04f10     FD 72 42 FC | 	wrbyte	local04, objptr
04f14     A2 FA 85 F1 | 	sub	objptr, #162
04f18                 | LR__0186
04f18                 | '         cmdE6_updatePosition[i] := false
04f18     10 5E 05 F1 | 	add	fp, #16
04f1c     AF 6E 02 FB | 	rdlong	local02, fp
04f20     F1 FB 05 F1 | 	add	objptr, #497
04f24     FD 6E 02 F1 | 	add	local02, objptr
04f28     37 01 48 FC | 	wrbyte	#0, local02
04f2c     AF 6E 02 FB | 	rdlong	local02, fp
04f30     01 6E 06 F1 | 	add	local02, #1
04f34     AF 6E 62 FC | 	wrlong	local02, fp
04f38     10 5E 85 F1 | 	sub	fp, #16
04f3c     04 6E 5E F2 | 	cmps	local02, #4 wcz
04f40     F1 FB 85 F1 | 	sub	objptr, #497
04f44     8C FF 9F CD |  if_b	jmp	#LR__0185
04f48                 | LR__0187
04f48     CC 00 90 FD | 	jmp	#LR__0192
04f4c                 | LR__0188
04f4c                 | ' 
04f4c                 | '     ' Handle the "skip to next pattern with offset command", "D"
04f4c                 | '     elseif cmdD_updatePosition
04f4c     E6 FB 05 F1 | 	add	objptr, #486
04f50     FD 6C CA FA | 	rdbyte	local01, objptr wz
04f54     E6 FB 85 F1 | 	sub	objptr, #486
04f58     64 00 90 AD |  if_e	jmp	#LR__0189
04f5c                 | '       if ++songPosition >= songLength
04f5c     A3 FA 05 F1 | 	add	objptr, #163
04f60     FD 6C C2 FA | 	rdbyte	local01, objptr
04f64     01 6C 06 F1 | 	add	local01, #1
04f68     FD 6C 42 FC | 	wrbyte	local01, objptr
04f6c     FD 70 C2 FA | 	rdbyte	local03, objptr
04f70     09 FA 85 F1 | 	sub	objptr, #9
04f74     FD 72 C2 FA | 	rdbyte	local04, objptr
04f78     9A FA 85 F1 | 	sub	objptr, #154
04f7c     39 71 5A F2 | 	cmps	local03, local04 wcz
04f80                 | '         songPosition := 0
04f80     A3 FA 05 31 |  if_ae	add	objptr, #163
04f84     FD 00 48 3C |  if_ae	wrbyte	#0, objptr
04f88     A3 FA 85 31 |  if_ae	sub	objptr, #163
04f8c                 | ' 
04f8c                 | '       patternRow := (cmdD_memoryX * 10) + cmdD_memoryY
04f8c     E4 FB 05 F1 | 	add	objptr, #484
04f90     FD 70 C2 FA | 	rdbyte	local03, objptr
04f94     38 6D 02 F6 | 	mov	local01, local03
04f98     02 6C 66 F0 | 	shl	local01, #2
04f9c     38 6D 02 F1 | 	add	local01, local03
04fa0     01 6C 66 F0 | 	shl	local01, #1
04fa4     01 FA 05 F1 | 	add	objptr, #1
04fa8     FD 72 C2 FA | 	rdbyte	local04, objptr
04fac     39 6D 02 F1 | 	add	local01, local04
04fb0     43 FB 85 F1 | 	sub	objptr, #323
04fb4     FD 6C 42 FC | 	wrbyte	local01, objptr
04fb8     A2 FA 85 F1 | 	sub	objptr, #162
04fbc                 | ' 
04fbc                 | '     ' If no "jump to row commands" are active, do a normal pattern incrementation
04fbc                 | '     else
04fbc     58 00 90 FD | 	jmp	#LR__0191
04fc0                 | LR__0189
04fc0                 | '       if ++patternRow >= PATTERN_LENGTH
04fc0     A2 FA 05 F1 | 	add	objptr, #162
04fc4     FD 6C C2 FA | 	rdbyte	local01, objptr
04fc8     01 6C 06 F1 | 	add	local01, #1
04fcc     FD 6C 42 FC | 	wrbyte	local01, objptr
04fd0     FD 70 C2 FA | 	rdbyte	local03, objptr
04fd4     A2 FA 85 F1 | 	sub	objptr, #162
04fd8     40 70 5E F2 | 	cmps	local03, #64 wcz
04fdc     38 00 90 CD |  if_b	jmp	#LR__0190
04fe0                 | '         patternRow := 0
04fe0     A2 FA 05 F1 | 	add	objptr, #162
04fe4     FD 00 48 FC | 	wrbyte	#0, objptr
04fe8                 | ' 
04fe8                 | '         if ++songPosition >= songLength
04fe8     01 FA 05 F1 | 	add	objptr, #1
04fec     FD 6C C2 FA | 	rdbyte	local01, objptr
04ff0     01 6C 06 F1 | 	add	local01, #1
04ff4     FD 6C 42 FC | 	wrbyte	local01, objptr
04ff8     FD 70 C2 FA | 	rdbyte	local03, objptr
04ffc     09 FA 85 F1 | 	sub	objptr, #9
05000     FD 72 C2 FA | 	rdbyte	local04, objptr
05004     9A FA 85 F1 | 	sub	objptr, #154
05008     39 71 5A F2 | 	cmps	local03, local04 wcz
0500c                 | '           songPosition := 0
0500c     A3 FA 05 31 |  if_ae	add	objptr, #163
05010     FD 00 48 3C |  if_ae	wrbyte	#0, objptr
05014     A3 FA 85 31 |  if_ae	sub	objptr, #163
05018                 | LR__0190
05018                 | LR__0191
05018                 | LR__0192
05018                 | ' 
05018                 | '     ' Handle "jump to song position" command, "B"
05018                 | '     if cmdB_updatePosition
05018     E8 FB 05 F1 | 	add	objptr, #488
0501c     FD 6C CA FA | 	rdbyte	local01, objptr wz
05020     E8 FB 85 F1 | 	sub	objptr, #488
05024     28 00 90 AD |  if_e	jmp	#LR__0193
05028                 | ' 
05028                 | '       songPosition := cmdB_memoryZ
05028     E7 FB 05 F1 | 	add	objptr, #487
0502c     FD 6C C2 FA | 	rdbyte	local01, objptr
05030     44 FB 85 F1 | 	sub	objptr, #324
05034     FD 6C 42 FC | 	wrbyte	local01, objptr
05038                 | ' 
05038                 | '       ifnot cmdD_updatePosition
05038     43 FB 05 F1 | 	add	objptr, #323
0503c     FD 6C CA FA | 	rdbyte	local01, objptr wz
05040     E6 FB 85 F1 | 	sub	objptr, #486
05044                 | '         patternRow := 0
05044     A2 FA 05 A1 |  if_e	add	objptr, #162
05048     FD 00 48 AC |  if_e	wrbyte	#0, objptr
0504c     A2 FA 85 A1 |  if_e	sub	objptr, #162
05050                 | LR__0193
05050                 | ' 
05050                 | '     ' We need to be sure that all positioning commands are reset for the next tick
05050                 | '     cmdE6_updatePositionCommon := false
05050     F5 FB 05 F1 | 	add	objptr, #501
05054     FD 00 48 FC | 	wrbyte	#0, objptr
05058                 | '     cmdB_updatePosition := false
05058     0D FA 85 F1 | 	sub	objptr, #13
0505c     FD 00 48 FC | 	wrbyte	#0, objptr
05060                 | '     cmdD_updatePosition := false
05060     02 FA 85 F1 | 	sub	objptr, #2
05064     FD 00 48 FC | 	wrbyte	#0, objptr
05068                 | '     patternDelay := 0
05068     41 FB 85 F1 | 	sub	objptr, #321
0506c     FD 00 48 FC | 	wrbyte	#0, objptr
05070     A5 FA 85 F1 | 	sub	objptr, #165
05074                 | LR__0194
05074                 | LR__0195
05074     AF F0 03 F6 | 	mov	ptra, fp
05078     BA 00 A0 FD | 	call	#popregs_
0507c                 | _trackerplayer_spin2_tick_ret
0507c     2D 00 64 FD | 	ret
05080                 | 
05080                 | ' 
05080                 | ' 
05080                 | ' PRI amigaPeriodToNote(period, fTune) : r | i
05080                 | _trackerplayer_spin2_amigaPeriodToNote
05080                 | ' 
05080                 | '   repeat i from 0 to LAST_POS_IN_PERIOD_TBL
05080     00 1E 06 F6 | 	mov	_var01, #0
05084     C4 AF 9F FE | 	loc	pa,	#(@LR__0197-@LR__0196)
05088     93 00 A0 FD | 	call	#FCACHE_LOAD_
0508c                 | LR__0196
0508c                 | '     if (word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][i]) <= period
0508c     06 00 00 FF 
05090     A4 14 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05094     0A 21 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
05098     30 23 02 F6 | 	mov	_var03, arg02
0509c     03 22 66 F0 | 	shl	_var03, #3
050a0     30 23 02 F1 | 	add	_var03, arg02
050a4     03 22 66 F0 | 	shl	_var03, #3
050a8     11 21 02 F1 | 	add	_var02, _var03
050ac     0F 25 02 F6 | 	mov	_var04, _var01
050b0     01 24 66 F0 | 	shl	_var04, #1
050b4     10 25 02 F1 | 	add	_var04, _var02
050b8     12 27 E2 FA | 	rdword	_var05, _var04
050bc     2F 27 5A F2 | 	cmps	_var05, arg01 wcz
050c0                 | '       quit
050c0     06 00 00 FF 
050c4     A4 14 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
050c8     0C 00 90 ED |  if_be	jmp	#LR__0198
050cc     01 1E 06 F1 | 	add	_var01, #1
050d0     24 1E 5E F2 | 	cmps	_var01, #36 wcz
050d4     B4 FF 9F CD |  if_b	jmp	#LR__0196
050d8                 | LR__0197
050d8                 | LR__0198
050d8                 | ' 
050d8                 | '   return i
050d8     0F 19 02 F6 | 	mov	result1, _var01
050dc                 | _trackerplayer_spin2_amigaPeriodToNote_ret
050dc     2D 00 64 FD | 	ret
050e0                 | 
050e0                 | ' 
050e0                 | ' 
050e0                 | ' PRI retunePeriod(period, fTune) | noteNumber
050e0                 | _trackerplayer_spin2_retunePeriod
050e0     06 5A 05 F6 | 	mov	COUNT_, #6
050e4     B0 00 A0 FD | 	call	#pushregs_
050e8     2F 6D 02 F6 | 	mov	local01, arg01
050ec     30 6F 02 F6 | 	mov	local02, arg02
050f0                 | ' 
050f0                 | '   if period > 0 and fTune < 16
050f0     00 6C 5E F2 | 	cmps	local01, #0 wcz
050f4     50 00 90 ED |  if_be	jmp	#LR__0199
050f8     10 6E 5E F2 | 	cmps	local02, #16 wcz
050fc     48 00 90 3D |  if_ae	jmp	#LR__0199
05100                 | '     noteNumber := amigaPeriodToNote(word[period], 0)
05100     36 5F E2 FA | 	rdword	arg01, local01
05104     00 60 06 F6 | 	mov	arg02, #0
05108     74 FF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
0510c     0C 71 02 F6 | 	mov	local03, result1
05110                 | '     word[period] := word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][noteNumber]
05110     06 00 00 FF 
05114     A4 14 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05118     0A 73 02 F6 | 	mov	local04, ptr__trackerplayer_spin2_dat__
0511c     37 75 02 F6 | 	mov	local05, local02
05120     03 74 66 F0 | 	shl	local05, #3
05124     37 75 02 F1 | 	add	local05, local02
05128     03 74 66 F0 | 	shl	local05, #3
0512c     3A 73 02 F1 | 	add	local04, local05
05130     01 70 66 F0 | 	shl	local03, #1
05134     39 71 02 F1 | 	add	local03, local04
05138     38 77 E2 FA | 	rdword	local06, local03
0513c     36 77 52 FC | 	wrword	local06, local01
05140     06 00 00 FF 
05144     A4 14 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05148                 | LR__0199
05148     AF F0 03 F6 | 	mov	ptra, fp
0514c     BA 00 A0 FD | 	call	#popregs_
05150                 | _trackerplayer_spin2_retunePeriod_ret
05150     2D 00 64 FD | 	ret
05154                 | 
05154                 | ' 
05154                 | ' 
05154                 | ' pub getSampleInfo(sampleNumber, samplePtr, sampleLength, fTune, volume, repeatPoint, repeatLength) | sampleInfoPtr
05154                 | _trackerplayer_spin2_getSampleInfo
05154     2F 1F 0A F6 | 	mov	_var01, arg01 wz
05158                 | ' 
05158                 | '   if sampleNumber == 0 or sampleNumber > LAST_SAMPLE_NUMBER ' Can't go beyond sample 31
05158     08 00 90 AD |  if_e	jmp	#LR__0200
0515c     1F 1E 5E F2 | 	cmps	_var01, #31 wcz
05160     08 00 90 ED |  if_be	jmp	#LR__0201
05164                 | LR__0200
05164                 | '     long[samplePtr] := 0
05164     30 01 68 FC | 	wrlong	#0, arg02
05168                 | '     return
05168     E0 00 90 FD | 	jmp	#_trackerplayer_spin2_getSampleInfo_ret
0516c                 | LR__0201
0516c                 | ' 
0516c                 | '   sampleNumber--
0516c     01 1E 86 F1 | 	sub	_var01, #1
05170                 | '   sampleInfoPtr      := samplesInfoLut + (sampleNumber * 30)
05170     0A FA 05 F1 | 	add	objptr, #10
05174     FD 20 02 FB | 	rdlong	_var02, objptr
05178     0F 23 02 F6 | 	mov	_var03, _var01
0517c     04 22 66 F0 | 	shl	_var03, #4
05180     0F 23 82 F1 | 	sub	_var03, _var01
05184     01 22 66 F0 | 	shl	_var03, #1
05188     11 21 02 F1 | 	add	_var02, _var03
0518c                 | '   long[sampleLength] := ((byte[sampleInfoPtr + 22] << 8) | byte[sampleInfoPtr + 23]) << 1
0518c     10 25 02 F6 | 	mov	_var04, _var02
05190     16 24 06 F1 | 	add	_var04, #22
05194     12 27 C2 FA | 	rdbyte	_var05, _var04
05198     08 26 66 F0 | 	shl	_var05, #8
0519c     10 23 02 F6 | 	mov	_var03, _var02
051a0     17 22 06 F1 | 	add	_var03, #23
051a4     11 29 C2 FA | 	rdbyte	_var06, _var03
051a8     14 27 42 F5 | 	or	_var05, _var06
051ac     01 26 66 F0 | 	shl	_var05, #1
051b0     31 27 62 FC | 	wrlong	_var05, arg03
051b4                 | '   long[fTune]        :=   byte[sampleInfoPtr + 24]
051b4     10 27 02 F6 | 	mov	_var05, _var02
051b8     18 26 06 F1 | 	add	_var05, #24
051bc     13 25 C2 FA | 	rdbyte	_var04, _var05
051c0     32 25 62 FC | 	wrlong	_var04, arg04
051c4                 | '   long[volume]       :=   byte[sampleInfoPtr + 25]
051c4     10 27 02 F6 | 	mov	_var05, _var02
051c8     19 26 06 F1 | 	add	_var05, #25
051cc     13 25 C2 FA | 	rdbyte	_var04, _var05
051d0     33 25 62 FC | 	wrlong	_var04, arg05
051d4                 | '   long[repeatPoint]  := ((byte[sampleInfoPtr + 26] << 8) | byte[sampleInfoPtr + 27]) << 1
051d4     10 25 02 F6 | 	mov	_var04, _var02
051d8     1A 24 06 F1 | 	add	_var04, #26
051dc     12 27 C2 FA | 	rdbyte	_var05, _var04
051e0     08 26 66 F0 | 	shl	_var05, #8
051e4     10 23 02 F6 | 	mov	_var03, _var02
051e8     1B 22 06 F1 | 	add	_var03, #27
051ec     11 29 C2 FA | 	rdbyte	_var06, _var03
051f0     14 27 42 F5 | 	or	_var05, _var06
051f4     01 26 66 F0 | 	shl	_var05, #1
051f8     34 27 62 FC | 	wrlong	_var05, arg06
051fc                 | '   long[repeatLength] := ((byte[sampleInfoPtr + 28] << 8) | byte[sampleInfoPtr + 29]) << 1
051fc     10 25 02 F6 | 	mov	_var04, _var02
05200     1C 24 06 F1 | 	add	_var04, #28
05204     12 27 C2 FA | 	rdbyte	_var05, _var04
05208     08 26 66 F0 | 	shl	_var05, #8
0520c     1D 20 06 F1 | 	add	_var02, #29
05210     10 29 C2 FA | 	rdbyte	_var06, _var02
05214     14 27 42 F5 | 	or	_var05, _var06
05218     01 26 66 F0 | 	shl	_var05, #1
0521c     35 27 62 FC | 	wrlong	_var05, arg07
05220                 | '   long[samplePtr]    := samplesPtrLut[sampleNumber]
05220     02 1E 66 F0 | 	shl	_var01, #2
05224     08 FA 05 F1 | 	add	objptr, #8
05228     FD 1E 02 F1 | 	add	_var01, objptr
0522c     0F 23 02 FB | 	rdlong	_var03, _var01
05230     30 23 62 FC | 	wrlong	_var03, arg02
05234                 | ' 
05234                 | '   if long[repeatLength] == 2 && long[repeatPoint] == 0
05234     35 27 02 FB | 	rdlong	_var05, arg07
05238     02 26 0E F2 | 	cmp	_var05, #2 wz
0523c     12 FA 85 F1 | 	sub	objptr, #18
05240     08 00 90 5D |  if_ne	jmp	#LR__0202
05244     34 25 0A FB | 	rdlong	_var04, arg06 wz
05248                 | '     long[repeatLength] := 1
05248     35 03 68 AC |  if_e	wrlong	#1, arg07
0524c                 | LR__0202
0524c                 | _trackerplayer_spin2_getSampleInfo_ret
0524c     2D 00 64 FD | 	ret
05250                 | 
05250                 | ' 
05250                 | ' 
05250                 | ' PRI getNoteData(channel, position, row, sampleNumber, period, effect) | patternPtr, patternNumber, data, dataPtr
05250                 | _trackerplayer_spin2_getNoteData
05250                 | ' 
05250                 | '   ' Get the note data for a specific channel/song position/pattern row
05250                 | '   patternNumber := byte[songPositionsLut][position & 127]
05250     96 FA 05 F1 | 	add	objptr, #150
05254     FD 1E 02 FB | 	rdlong	_var01, objptr
05258     7F 60 06 F5 | 	and	arg02, #127
0525c     0F 61 02 F1 | 	add	arg02, _var01
05260     30 21 C2 FA | 	rdbyte	_var02, arg02
05264                 | '   patternPtr    := patternsData + (patternNumber << 10)
05264     04 FA 85 F1 | 	sub	objptr, #4
05268     FD 22 02 FB | 	rdlong	_var03, objptr
0526c     92 FA 85 F1 | 	sub	objptr, #146
05270     0A 20 66 F0 | 	shl	_var02, #10
05274     10 23 02 F1 | 	add	_var03, _var02
05278                 | '   dataPtr       := patternPtr + ((row & 63) << 4) + ((channel &3 ) << 2)
05278     3F 62 06 F5 | 	and	arg03, #63
0527c     04 62 66 F0 | 	shl	arg03, #4
05280     31 23 02 F1 | 	add	_var03, arg03
05284     03 5E 06 F5 | 	and	arg01, #3
05288     02 5E 66 F0 | 	shl	arg01, #2
0528c     2F 23 02 F1 | 	add	_var03, arg01
05290                 | '   data          := (byte[dataPtr][0] << 24) | (byte[dataPtr][1] << 16) | (byte[dataPtr][2] << 8) | byte[dataPtr][3]
05290     11 25 C2 FA | 	rdbyte	_var04, _var03
05294     18 24 66 F0 | 	shl	_var04, #24
05298     01 22 06 F1 | 	add	_var03, #1
0529c     11 27 C2 FA | 	rdbyte	_var05, _var03
052a0     10 26 66 F0 | 	shl	_var05, #16
052a4     13 25 42 F5 | 	or	_var04, _var05
052a8     01 22 06 F1 | 	add	_var03, #1
052ac     11 29 C2 FA | 	rdbyte	_var06, _var03
052b0     08 28 66 F0 | 	shl	_var06, #8
052b4     14 25 42 F5 | 	or	_var04, _var06
052b8     01 22 06 F1 | 	add	_var03, #1
052bc     11 2B C2 FA | 	rdbyte	_var07, _var03
052c0     15 25 42 F5 | 	or	_var04, _var07
052c4                 | ' 
052c4                 | '   ' Extract the different sub parts from the data
052c4                 | '   long[sampleNumber] := ((data >> 12) & $F) | ((data >> 24) & $F0)
052c4     12 2D 02 F6 | 	mov	_var08, _var04
052c8     0C 2C 46 F0 | 	shr	_var08, #12
052cc     0F 2C 06 F5 | 	and	_var08, #15
052d0     12 27 02 F6 | 	mov	_var05, _var04
052d4     18 26 46 F0 | 	shr	_var05, #24
052d8     F0 26 06 F5 | 	and	_var05, #240
052dc     13 2D 42 F5 | 	or	_var08, _var05
052e0     32 2D 62 FC | 	wrlong	_var08, arg04
052e4                 | '   long[period]       :=  (data >> 16) & $FFF
052e4     12 2D 02 F6 | 	mov	_var08, _var04
052e8     10 2C 46 F0 | 	shr	_var08, #16
052ec     07 00 00 FF 
052f0     FF 2D 06 F5 | 	and	_var08, ##4095
052f4     33 2D 62 FC | 	wrlong	_var08, arg05
052f8                 | '   long[effect]       :=   data & $FFF
052f8     07 00 00 FF 
052fc     FF 25 06 F5 | 	and	_var04, ##4095
05300     34 25 62 FC | 	wrlong	_var04, arg06
05304                 | _trackerplayer_spin2_getNoteData_ret
05304     2D 00 64 FD | 	ret
05308                 | 
05308                 | ' 
05308                 | ' 
05308                 | ' PRI triggerNote(channel)
05308                 | _trackerplayer_spin2_triggerNote
05308                 | ' 
05308                 | '   currSampleNr[channel]     := lastSetSampleNr[channel]
05308     2F 1F 02 F6 | 	mov	_var01, arg01
0530c     02 1E 66 F0 | 	shl	_var01, #2
05310     47 FB 05 F1 | 	add	objptr, #327
05314     FD 1E 02 F1 | 	add	_var01, objptr
05318     2F 21 02 F6 | 	mov	_var02, arg01
0531c     90 FA 85 F1 | 	sub	objptr, #144
05320     0F 23 02 FB | 	rdlong	_var03, _var01
05324     FD 20 02 F1 | 	add	_var02, objptr
05328     10 23 42 FC | 	wrbyte	_var03, _var02
0532c                 | '   currSamplePtr[channel]    := lastSetSamplePtr[channel]              ' This triggers the actual sample playback
0532c     2F 1F 02 F6 | 	mov	_var01, arg01
05330     02 1E 66 F0 | 	shl	_var01, #2
05334     80 FA 05 F1 | 	add	objptr, #128
05338     FD 1E 02 F1 | 	add	_var01, objptr
0533c     2F 21 02 F6 | 	mov	_var02, arg01
05340     02 20 66 F0 | 	shl	_var02, #2
05344     90 FA 85 F1 | 	sub	objptr, #144
05348     0F 23 02 FB | 	rdlong	_var03, _var01
0534c     FD 20 02 F1 | 	add	_var02, objptr
05350     10 23 62 FC | 	wrlong	_var03, _var02
05354                 | '   currPeriod[channel]       := lastSetPeriod[channel]
05354     2F 1F 02 F6 | 	mov	_var01, arg01
05358     02 1E 66 F0 | 	shl	_var01, #2
0535c     80 FA 05 F1 | 	add	objptr, #128
05360     FD 1E 02 F1 | 	add	_var01, objptr
05364     2F 21 02 F6 | 	mov	_var02, arg01
05368     02 20 66 F0 | 	shl	_var02, #2
0536c     48 FA 85 F1 | 	sub	objptr, #72
05370     0F 23 02 FB | 	rdlong	_var03, _var01
05374     FD 20 02 F1 | 	add	_var02, objptr
05378     10 23 62 FC | 	wrlong	_var03, _var02
0537c                 | '   currSampleLength[channel] := lastSetSampleLength[channel]
0537c     2F 1F 02 F6 | 	mov	_var01, arg01
05380     02 1E 66 F0 | 	shl	_var01, #2
05384     78 FA 05 F1 | 	add	objptr, #120
05388     FD 1E 02 F1 | 	add	_var01, objptr
0538c     2F 25 02 F6 | 	mov	_var04, arg01
05390     01 24 66 F0 | 	shl	_var04, #1
05394     9C FA 85 F1 | 	sub	objptr, #156
05398     0F 27 02 FB | 	rdlong	_var05, _var01
0539c     FD 24 02 F1 | 	add	_var04, objptr
053a0     12 27 52 FC | 	wrword	_var05, _var04
053a4                 | '   currRepeatLength[channel] := lastSetRepeatLength[channel]
053a4     2F 1F 02 F6 | 	mov	_var01, arg01
053a8     02 1E 66 F0 | 	shl	_var01, #2
053ac     AC FA 05 F1 | 	add	objptr, #172
053b0     FD 1E 02 F1 | 	add	_var01, objptr
053b4     2F 21 02 F6 | 	mov	_var02, arg01
053b8     02 20 66 F0 | 	shl	_var02, #2
053bc     A4 FA 85 F1 | 	sub	objptr, #164
053c0     0F 23 02 FB | 	rdlong	_var03, _var01
053c4     FD 20 02 F1 | 	add	_var02, objptr
053c8     10 23 62 FC | 	wrlong	_var03, _var02
053cc                 | '   currRepeatPoint[channel]  := lastSetRepeatPoint[channel]
053cc     2F 1F 02 F6 | 	mov	_var01, arg01
053d0     02 1E 66 F0 | 	shl	_var01, #2
053d4     B4 FA 05 F1 | 	add	objptr, #180
053d8     FD 1E 02 F1 | 	add	_var01, objptr
053dc     2F 25 02 F6 | 	mov	_var04, arg01
053e0     01 24 66 F0 | 	shl	_var04, #1
053e4     A0 FA 85 F1 | 	sub	objptr, #160
053e8     0F 27 02 FB | 	rdlong	_var05, _var01
053ec     FD 24 02 F1 | 	add	_var04, objptr
053f0     12 27 52 FC | 	wrword	_var05, _var04
053f4                 | '   trigger[channel]+=1                                                 ' @pik33 _ I have to know when the note is started
053f4     2F 29 02 F6 | 	mov	_var06, arg01
053f8     1F FB 05 F1 | 	add	objptr, #287
053fc     FD 28 02 F1 | 	add	_var06, objptr
05400     14 1F C2 FA | 	rdbyte	_var01, _var06
05404     01 1E 06 F1 | 	add	_var01, #1
05408     FD 5E 02 F1 | 	add	arg01, objptr
0540c     2F 1F 42 FC | 	wrbyte	_var01, arg01
05410     F6 FB 85 F1 | 	sub	objptr, #502
05414                 | _trackerplayer_spin2_triggerNote_ret
05414     2D 00 64 FD | 	ret
05418                 | 
05418                 | ' 
05418                 | ' PRI processChannel(channel, sampleNumber, period, effect) | sampleLength, volume, repeatPoint, repeatLength, samplePtr
05418                 | _trackerplayer_spin2_processChannel
05418     08 5A 05 F6 | 	mov	COUNT_, #8
0541c     B0 00 A0 FD | 	call	#pushregs_
05420     24 F0 07 F1 | 	add	ptra, #36
05424     AF 5E 62 FC | 	wrlong	arg01, fp
05428     04 5E 05 F1 | 	add	fp, #4
0542c     AF 60 62 FC | 	wrlong	arg02, fp
05430     04 5E 05 F1 | 	add	fp, #4
05434     AF 62 62 FC | 	wrlong	arg03, fp
05438     04 5E 05 F1 | 	add	fp, #4
0543c     AF 64 62 FC | 	wrlong	arg04, fp
05440     0C 5E 85 F1 | 	sub	fp, #12
05444                 | ' 
05444                 | '   channel := channel & 3
05444     AF 6C 02 FB | 	rdlong	local01, fp
05448     03 6C 06 F5 | 	and	local01, #3
0544c     AF 6C 62 FC | 	wrlong	local01, fp
05450                 | '   cmd     := (effect >> 8) & $F
05450     0C 5E 05 F1 | 	add	fp, #12
05454     AF 6C 02 FB | 	rdlong	local01, fp
05458     08 6C 46 F0 | 	shr	local01, #8
0545c     0F 6C 06 F5 | 	and	local01, #15
05460     BA FB 05 F1 | 	add	objptr, #442
05464     FD 6C 42 FC | 	wrbyte	local01, objptr
05468                 | '   x       := (effect >> 4) & $F
05468     AF 6C 02 FB | 	rdlong	local01, fp
0546c     04 6C 46 F0 | 	shr	local01, #4
05470     0F 6C 06 F5 | 	and	local01, #15
05474     03 FA 85 F1 | 	sub	objptr, #3
05478     FD 6C 42 FC | 	wrbyte	local01, objptr
0547c                 | '   y       := (effect     ) & $F
0547c     AF 6C 02 FB | 	rdlong	local01, fp
05480     0F 6C 06 F5 | 	and	local01, #15
05484     01 FA 05 F1 | 	add	objptr, #1
05488     FD 6C 42 FC | 	wrbyte	local01, objptr
0548c                 | '   z       := (effect     ) & $FF
0548c     AF 6C 02 FB | 	rdlong	local01, fp
05490     0C 5E 85 F1 | 	sub	fp, #12
05494     FF 6C 06 F5 | 	and	local01, #255
05498     01 FA 05 F1 | 	add	objptr, #1
0549c     FD 6C 42 FC | 	wrbyte	local01, objptr
054a0                 | ' 
054a0                 | '   ' Handle everything that executes on "tick zero"
054a0                 | '   if tickCounter == 0
054a0     18 FB 85 F1 | 	sub	objptr, #280
054a4     FD 6C CA FA | 	rdbyte	local01, objptr wz
054a8     A1 FA 85 F1 | 	sub	objptr, #161
054ac     DC 03 90 5D |  if_ne	jmp	#LR__0213
054b0                 | ' 
054b0                 | '     ' These two variables are used for vibrato/tremolo/arpeggio effects and needs to be reset at "tick zero"
054b0                 | '     deltaPeriod[channel] := 0
054b0     AF 6C 02 FB | 	rdlong	local01, fp
054b4     02 6C 66 F0 | 	shl	local01, #2
054b8     EF FA 05 F1 | 	add	objptr, #239
054bc     FD 6C 02 F1 | 	add	local01, objptr
054c0     36 01 68 FC | 	wrlong	#0, local01
054c4                 | '     deltaVolume[channel] := 0
054c4     AF 6C 02 FB | 	rdlong	local01, fp
054c8     02 6C 66 F0 | 	shl	local01, #2
054cc     20 FA 05 F1 | 	add	objptr, #32
054d0     FD 6C 02 F1 | 	add	local01, objptr
054d4     36 01 68 FC | 	wrlong	#0, local01
054d8                 | ' 
054d8                 | '     ' If the sample number is zero, the memory from "last set non zero sample number" is used
054d8                 | '     if sampleNumber > 0
054d8     04 5E 05 F1 | 	add	fp, #4
054dc     AF 6C 02 FB | 	rdlong	local01, fp
054e0     04 5E 85 F1 | 	sub	fp, #4
054e4     00 6C 5E F2 | 	cmps	local01, #0 wcz
054e8     0F FB 85 F1 | 	sub	objptr, #271
054ec     20 00 90 ED |  if_be	jmp	#LR__0203
054f0                 | '       sampleNumber_memory[channel] := sampleNumber
054f0     AF 6C 02 FB | 	rdlong	local01, fp
054f4     E0 FB 05 F1 | 	add	objptr, #480
054f8     FD 6C 02 F1 | 	add	local01, objptr
054fc     04 5E 05 F1 | 	add	fp, #4
05500     AF 6E 02 FB | 	rdlong	local02, fp
05504     04 5E 85 F1 | 	sub	fp, #4
05508     36 6F 42 FC | 	wrbyte	local02, local01
0550c     E0 FB 85 F1 | 	sub	objptr, #480
05510                 | LR__0203
05510                 | ' 
05510                 | '     ' Get data for the sample in use by the current channel (uses the memorized sample number)
05510                 | '     getSampleInfo(sampleNumber_memory[channel], @samplePtr, @sampleLength, @fineTune, @volume, @repeatPoint, @repeatLength)
05510     AF 70 02 FB | 	rdlong	local03, fp
05514     E0 FB 05 F1 | 	add	objptr, #480
05518     FD 70 02 F1 | 	add	local03, objptr
0551c     38 5F C2 FA | 	rdbyte	arg01, local03
05520     20 5E 05 F1 | 	add	fp, #32
05524     AF 60 02 F6 | 	mov	arg02, fp
05528     10 5E 85 F1 | 	sub	fp, #16
0552c     AF 62 02 F6 | 	mov	arg03, fp
05530     31 FA 85 F1 | 	sub	objptr, #49
05534     FD 64 02 F6 | 	mov	arg04, objptr
05538     AF FB 85 F1 | 	sub	objptr, #431
0553c     04 5E 05 F1 | 	add	fp, #4
05540     AF 66 02 F6 | 	mov	arg05, fp
05544     04 5E 05 F1 | 	add	fp, #4
05548     AF 68 02 F6 | 	mov	arg06, fp
0554c     04 5E 05 F1 | 	add	fp, #4
05550     AF 72 02 F6 | 	mov	local04, fp
05554     39 75 02 F6 | 	mov	local05, local04
05558     3A 6B 02 F6 | 	mov	arg07, local05
0555c     1C 5E 85 F1 | 	sub	fp, #28
05560     F0 FB BF FD | 	call	#_trackerplayer_spin2_getSampleInfo
05564                 | ' 
05564                 | '     ' Only set volume according to the default sample configuration if the sample number is non zero,
05564                 | '     ' this allows for some tricks when used in combination with the sample number memory (commonly used in protracker modules)
05564                 | '     if sampleNumber > 0
05564     04 5E 05 F1 | 	add	fp, #4
05568     AF 6C 02 FB | 	rdlong	local01, fp
0556c     04 5E 85 F1 | 	sub	fp, #4
05570     00 6C 5E F2 | 	cmps	local01, #0 wcz
05574     24 00 90 ED |  if_be	jmp	#LR__0204
05578                 | '       currVolume[channel] := volume
05578     AF 6C 02 FB | 	rdlong	local01, fp
0557c     02 6C 66 F0 | 	shl	local01, #2
05580     FF FA 05 F1 | 	add	objptr, #255
05584     FD 6C 02 F1 | 	add	local01, objptr
05588     14 5E 05 F1 | 	add	fp, #20
0558c     AF 6E 02 FB | 	rdlong	local02, fp
05590     14 5E 85 F1 | 	sub	fp, #20
05594     36 6F 62 FC | 	wrlong	local02, local01
05598     FF FA 85 F1 | 	sub	objptr, #255
0559c                 | LR__0204
0559c                 | ' 
0559c                 | '     ' Handle all commands that executes on "zero tick"
0559c                 | '     sampleOffset := 0
0559c     B3 FB 05 F1 | 	add	objptr, #435
055a0     FD 00 68 FC | 	wrlong	#0, objptr
055a4     B3 FB 85 F1 | 	sub	objptr, #435
055a8                 | '     handleZeroTickCommands(channel)
055a8     AF 5E 02 FB | 	rdlong	arg01, fp
055ac     98 03 B0 FD | 	call	#_trackerplayer_spin2_handleZeroTickCommands
055b0                 | ' 
055b0                 | '     ' Prepare sample data for triggering (now or later)
055b0                 | '     if period > 0
055b0     08 5E 05 F1 | 	add	fp, #8
055b4     AF 6C 02 FB | 	rdlong	local01, fp
055b8     08 5E 85 F1 | 	sub	fp, #8
055bc     00 6C 5E F2 | 	cmps	local01, #0 wcz
055c0     D0 02 90 ED |  if_be	jmp	#LR__0214
055c4                 | ' 
055c4                 | '       retunePeriod(@period, fineTune)
055c4     08 5E 05 F1 | 	add	fp, #8
055c8     AF 5E 02 F6 | 	mov	arg01, fp
055cc     08 5E 85 F1 | 	sub	fp, #8
055d0     AF FB 05 F1 | 	add	objptr, #431
055d4     FD 60 02 FB | 	rdlong	arg02, objptr
055d8     AF FB 85 F1 | 	sub	objptr, #431
055dc     00 FB BF FD | 	call	#_trackerplayer_spin2_retunePeriod
055e0                 | '       currFineTune[channel]        := fineTune
055e0     AF 6C 02 FB | 	rdlong	local01, fp
055e4     D3 FA 05 F1 | 	add	objptr, #211
055e8     FD 6C 02 F1 | 	add	local01, objptr
055ec     DC FA 05 F1 | 	add	objptr, #220
055f0     FD 6E 02 FB | 	rdlong	local02, objptr
055f4     36 6F 42 FC | 	wrbyte	local02, local01
055f8                 | '       lastSetPeriod[channel]       := period
055f8     AF 6C 02 FB | 	rdlong	local01, fp
055fc     02 6C 66 F0 | 	shl	local01, #2
05600     88 FA 85 F1 | 	sub	objptr, #136
05604     FD 6C 02 F1 | 	add	local01, objptr
05608     08 5E 05 F1 | 	add	fp, #8
0560c     AF 6E 02 FB | 	rdlong	local02, fp
05610     36 6F 62 FC | 	wrlong	local02, local01
05614     08 5E 85 F1 | 	sub	fp, #8
05618                 | '       lastSetRepeatLength[channel] := repeatLength
05618     AF 6C 02 FB | 	rdlong	local01, fp
0561c     02 6C 66 F0 | 	shl	local01, #2
05620     40 FA 05 F1 | 	add	objptr, #64
05624     FD 6C 02 F1 | 	add	local01, objptr
05628     1C 5E 05 F1 | 	add	fp, #28
0562c     AF 6E 02 FB | 	rdlong	local02, fp
05630     36 6F 62 FC | 	wrlong	local02, local01
05634     1C 5E 85 F1 | 	sub	fp, #28
05638                 | '       lastSetRepeatPoint[channel]  := repeatPoint
05638     AF 6C 02 FB | 	rdlong	local01, fp
0563c     02 6C 66 F0 | 	shl	local01, #2
05640     10 FA 05 F1 | 	add	objptr, #16
05644     FD 6C 02 F1 | 	add	local01, objptr
05648     18 5E 05 F1 | 	add	fp, #24
0564c     AF 6E 02 FB | 	rdlong	local02, fp
05650     36 6F 62 FC | 	wrlong	local02, local01
05654                 | '       lastSetSamplePtr[channel]    := samplePtr + sampleOffset
05654     08 5E 05 F1 | 	add	fp, #8
05658     AF 6C 02 FB | 	rdlong	local01, fp
0565c     20 5E 85 F1 | 	sub	fp, #32
05660     3C FA 05 F1 | 	add	objptr, #60
05664     FD 6E 02 FB | 	rdlong	local02, objptr
05668     37 6D 02 F1 | 	add	local01, local02
0566c     AF 76 02 FB | 	rdlong	local06, fp
05670     02 76 66 F0 | 	shl	local06, #2
05674     7C FA 85 F1 | 	sub	objptr, #124
05678     FD 78 02 F6 | 	mov	local07, objptr
0567c     FD 76 02 F1 | 	add	local06, objptr
05680     3B 6D 62 FC | 	wrlong	local01, local06
05684                 | '       lastSetSampleNr[channel]     := sampleNumber
05684     AF 6C 02 FB | 	rdlong	local01, fp
05688     02 6C 66 F0 | 	shl	local01, #2
0568c     10 FA 05 F1 | 	add	objptr, #16
05690     FD 6C 02 F1 | 	add	local01, objptr
05694     04 5E 05 F1 | 	add	fp, #4
05698     AF 6E 02 FB | 	rdlong	local02, fp
0569c     36 6F 62 FC | 	wrlong	local02, local01
056a0                 | ' 
056a0                 | '       ' This calculates the correct sample length in all situations
056a0                 | '       if repeatLength > 2
056a0     18 5E 05 F1 | 	add	fp, #24
056a4     AF 6C 02 FB | 	rdlong	local01, fp
056a8     1C 5E 85 F1 | 	sub	fp, #28
056ac     02 6C 5E F2 | 	cmps	local01, #2 wcz
056b0     47 FB 85 F1 | 	sub	objptr, #327
056b4     20 00 90 ED |  if_be	jmp	#LR__0205
056b8                 | '         sampleLength := repeatPoint + repeatLength
056b8     18 5E 05 F1 | 	add	fp, #24
056bc     AF 6C 02 FB | 	rdlong	local01, fp
056c0     04 5E 05 F1 | 	add	fp, #4
056c4     AF 6E 02 FB | 	rdlong	local02, fp
056c8     37 6D 02 F1 | 	add	local01, local02
056cc     0C 5E 85 F1 | 	sub	fp, #12
056d0     AF 6C 62 FC | 	wrlong	local01, fp
056d4     10 5E 85 F1 | 	sub	fp, #16
056d8                 | LR__0205
056d8                 | ' 
056d8                 | '       if sampleLength - sampleOffset < 1
056d8     10 5E 05 F1 | 	add	fp, #16
056dc     AF 6C 02 FB | 	rdlong	local01, fp
056e0     10 5E 85 F1 | 	sub	fp, #16
056e4     B3 FB 05 F1 | 	add	objptr, #435
056e8     FD 6E 02 FB | 	rdlong	local02, objptr
056ec     B3 FB 85 F1 | 	sub	objptr, #435
056f0     37 6D 82 F1 | 	sub	local01, local02
056f4     01 6C 5E F2 | 	cmps	local01, #1 wcz
056f8     1C 00 90 3D |  if_ae	jmp	#LR__0206
056fc                 | '         lastSetSampleLength[channel] := 1
056fc     AF 6C 02 FB | 	rdlong	local01, fp
05700     02 6C 66 F0 | 	shl	local01, #2
05704     57 FB 05 F1 | 	add	objptr, #343
05708     FD 6C 02 F1 | 	add	local01, objptr
0570c     36 03 68 FC | 	wrlong	#1, local01
05710                 | '       else
05710     57 FB 85 F1 | 	sub	objptr, #343
05714     34 00 90 FD | 	jmp	#LR__0207
05718                 | LR__0206
05718                 | '         lastSetSampleLength[channel] := sampleLength - sampleOffset
05718     10 5E 05 F1 | 	add	fp, #16
0571c     AF 6C 02 FB | 	rdlong	local01, fp
05720     10 5E 85 F1 | 	sub	fp, #16
05724     B3 FB 05 F1 | 	add	objptr, #435
05728     FD 6E 02 FB | 	rdlong	local02, objptr
0572c     37 6D 82 F1 | 	sub	local01, local02
05730     AF 76 02 FB | 	rdlong	local06, fp
05734     02 76 66 F0 | 	shl	local06, #2
05738     5C FA 85 F1 | 	sub	objptr, #92
0573c     FD 78 02 F6 | 	mov	local07, objptr
05740     FD 76 02 F1 | 	add	local06, objptr
05744     3B 6D 62 FC | 	wrlong	local01, local06
05748     57 FB 85 F1 | 	sub	objptr, #343
0574c                 | LR__0207
0574c                 | ' 
0574c                 | '       ' When the sample offset is more than the actual sample length, use the repeat data as sample ptr and length
0574c                 | '       if sampleOffset > sampleLength
0574c     B3 FB 05 F1 | 	add	objptr, #435
05750     FD 6C 02 FB | 	rdlong	local01, objptr
05754     B3 FB 85 F1 | 	sub	objptr, #435
05758     10 5E 05 F1 | 	add	fp, #16
0575c     AF 6E 02 FB | 	rdlong	local02, fp
05760     10 5E 85 F1 | 	sub	fp, #16
05764     37 6D 5A F2 | 	cmps	local01, local02 wcz
05768     54 00 90 ED |  if_be	jmp	#LR__0208
0576c                 | '         lastSetSamplePtr[channel] := samplePtr + repeatPoint
0576c     20 5E 05 F1 | 	add	fp, #32
05770     AF 6C 02 FB | 	rdlong	local01, fp
05774     08 5E 85 F1 | 	sub	fp, #8
05778     AF 6E 02 FB | 	rdlong	local02, fp
0577c     18 5E 85 F1 | 	sub	fp, #24
05780     37 6D 02 F1 | 	add	local01, local02
05784     AF 76 02 FB | 	rdlong	local06, fp
05788     02 76 66 F0 | 	shl	local06, #2
0578c     37 FB 05 F1 | 	add	objptr, #311
05790     FD 78 02 F6 | 	mov	local07, objptr
05794     FD 76 02 F1 | 	add	local06, objptr
05798     3B 6D 62 FC | 	wrlong	local01, local06
0579c                 | '         lastSetSampleLength[channel] := repeatLength
0579c     AF 6C 02 FB | 	rdlong	local01, fp
057a0     02 6C 66 F0 | 	shl	local01, #2
057a4     20 FA 05 F1 | 	add	objptr, #32
057a8     FD 6C 02 F1 | 	add	local01, objptr
057ac     1C 5E 05 F1 | 	add	fp, #28
057b0     AF 6E 02 FB | 	rdlong	local02, fp
057b4     1C 5E 85 F1 | 	sub	fp, #28
057b8     36 6F 62 FC | 	wrlong	local02, local01
057bc     57 FB 85 F1 | 	sub	objptr, #343
057c0                 | LR__0208
057c0                 | ' 
057c0                 | '       ' Trigger note/sample playback directly if no delay or portamento is active
057c0                 | '       ifnot cmd == $3 || cmd == $5
057c0     BA FB 05 F1 | 	add	objptr, #442
057c4     FD 6C C2 FA | 	rdbyte	local01, objptr
057c8     BA FB 85 F1 | 	sub	objptr, #442
057cc     03 6C 0E F2 | 	cmp	local01, #3 wz
057d0     54 00 90 AD |  if_e	jmp	#LR__0211
057d4     BA FB 05 F1 | 	add	objptr, #442
057d8     FD 7A C2 FA | 	rdbyte	local08, objptr
057dc     BA FB 85 F1 | 	sub	objptr, #442
057e0     3D 6F 02 F6 | 	mov	local02, local08
057e4     05 6E 0E F2 | 	cmp	local02, #5 wz
057e8     3C 00 90 AD |  if_e	jmp	#LR__0211
057ec                 | '         ifnot cmd == $E && x == $D
057ec     BA FB 05 F1 | 	add	objptr, #442
057f0     FD 70 C2 FA | 	rdbyte	local03, objptr
057f4     BA FB 85 F1 | 	sub	objptr, #442
057f8     38 6D 02 F6 | 	mov	local01, local03
057fc     0E 6C 0E F2 | 	cmp	local01, #14 wz
05800     18 00 90 5D |  if_ne	jmp	#LR__0209
05804     B7 FB 05 F1 | 	add	objptr, #439
05808     FD 7A C2 FA | 	rdbyte	local08, objptr
0580c     B7 FB 85 F1 | 	sub	objptr, #439
05810     3D 6F 02 F6 | 	mov	local02, local08
05814     0D 6E 0E F2 | 	cmp	local02, #13 wz
05818     0C 00 90 AD |  if_e	jmp	#LR__0210
0581c                 | LR__0209
0581c                 | '           triggerNote(channel)
0581c     AF 6C 02 FB | 	rdlong	local01, fp
05820     36 5F 02 F6 | 	mov	arg01, local01
05824     E0 FA BF FD | 	call	#_trackerplayer_spin2_triggerNote
05828                 | LR__0210
05828                 | LR__0211
05828                 | ' 
05828                 | '       ' If the "reset vibrato/tremolo function/s" is/are set, it/they get reset at "zero tick"
05828                 | '       if resetTremolo[channel] > 0
05828     AF 6C 02 FB | 	rdlong	local01, fp
0582c     8F FB 05 F1 | 	add	objptr, #399
05830     FD 6C 02 F1 | 	add	local01, objptr
05834     36 6F C2 FA | 	rdbyte	local02, local01
05838     00 6E 5E F2 | 	cmps	local02, #0 wcz
0583c     8F FB 85 F1 | 	sub	objptr, #399
05840     14 00 90 ED |  if_be	jmp	#LR__0212
05844                 | '         tremoloPos[channel] := 0
05844     AF 6C 02 FB | 	rdlong	local01, fp
05848     8B FB 05 F1 | 	add	objptr, #395
0584c     FD 6C 02 F1 | 	add	local01, objptr
05850     36 01 48 FC | 	wrbyte	#0, local01
05854     8B FB 85 F1 | 	sub	objptr, #395
05858                 | LR__0212
05858                 | ' 
05858                 | '       if resetVibrato[channel] > 0
05858     AF 6C 02 FB | 	rdlong	local01, fp
0585c     93 FB 05 F1 | 	add	objptr, #403
05860     FD 6C 02 F1 | 	add	local01, objptr
05864     36 6F C2 FA | 	rdbyte	local02, local01
05868     00 6E 5E F2 | 	cmps	local02, #0 wcz
0586c     93 FB 85 F1 | 	sub	objptr, #403
05870     20 00 90 ED |  if_be	jmp	#LR__0214
05874                 | '         vibratoPos[channel] := 0
05874     AF 6C 02 FB | 	rdlong	local01, fp
05878     87 FB 05 F1 | 	add	objptr, #391
0587c     FD 6C 02 F1 | 	add	local01, objptr
05880     36 01 48 FC | 	wrbyte	#0, local01
05884     87 FB 85 F1 | 	sub	objptr, #391
05888                 | ' 
05888                 | '   else
05888     08 00 90 FD | 	jmp	#LR__0214
0588c                 | LR__0213
0588c                 | '     ' Handle commands that executes on all "non zero ticks"
0588c                 | '     handleNonZeroTickCommands(channel)
0588c     AF 5E 02 FB | 	rdlong	arg01, fp
05890     14 05 B0 FD | 	call	#_trackerplayer_spin2_handleNonZeroTickCommands
05894                 | LR__0214
05894                 | ' 
05894                 | '   ' Handle commands that executes on every tick
05894                 | '   handleEveryTickCommands(channel)
05894     AF 5E 02 FB | 	rdlong	arg01, fp
05898     70 07 B0 FD | 	call	#_trackerplayer_spin2_handleEveryTickCommands
0589c                 | ' 
0589c                 | '   ' Handle boundaries that should be kept
0589c                 | '   currPeriod[channel] <#= MAXIMUM_PERIOD
0589c     AF 70 02 FB | 	rdlong	local03, fp
058a0     02 70 66 F0 | 	shl	local03, #2
058a4     DF FA 05 F1 | 	add	objptr, #223
058a8     FD 70 02 F1 | 	add	local03, objptr
058ac     38 6D 02 FB | 	rdlong	local01, local03
058b0     01 00 00 FF 
058b4     58 6D 66 F3 | 	fles	local01, ##856
058b8     AF 7A 02 FB | 	rdlong	local08, fp
058bc     02 7A 66 F0 | 	shl	local08, #2
058c0     FD 7A 02 F1 | 	add	local08, objptr
058c4     3D 6D 62 FC | 	wrlong	local01, local08
058c8                 | '   currPeriod[channel] #>= MINIMUM_PERIOD
058c8     AF 70 02 FB | 	rdlong	local03, fp
058cc     02 70 66 F0 | 	shl	local03, #2
058d0     FD 70 02 F1 | 	add	local03, objptr
058d4     38 6D 02 FB | 	rdlong	local01, local03
058d8     71 6C 46 F3 | 	fges	local01, #113
058dc     AF 7A 02 FB | 	rdlong	local08, fp
058e0     02 7A 66 F0 | 	shl	local08, #2
058e4     FD 7A 02 F1 | 	add	local08, objptr
058e8     3D 6D 62 FC | 	wrlong	local01, local08
058ec                 | '   currVolume[channel] <#= MAXIMUM_VOLUME
058ec     AF 70 02 FB | 	rdlong	local03, fp
058f0     02 70 66 F0 | 	shl	local03, #2
058f4     20 FA 05 F1 | 	add	objptr, #32
058f8     FD 70 02 F1 | 	add	local03, objptr
058fc     38 6D 02 FB | 	rdlong	local01, local03
05900     40 6C 66 F3 | 	fles	local01, #64
05904     AF 7A 02 FB | 	rdlong	local08, fp
05908     02 7A 66 F0 | 	shl	local08, #2
0590c     FD 7A 02 F1 | 	add	local08, objptr
05910     3D 6D 62 FC | 	wrlong	local01, local08
05914                 | '   currVolume[channel] #>= MINIMUM_VOLUME
05914     AF 70 02 FB | 	rdlong	local03, fp
05918     02 70 66 F0 | 	shl	local03, #2
0591c     FD 70 02 F1 | 	add	local03, objptr
05920     38 6D 02 FB | 	rdlong	local01, local03
05924     00 6C 46 F3 | 	fges	local01, #0
05928     AF 7A 02 FB | 	rdlong	local08, fp
0592c     02 7A 66 F0 | 	shl	local08, #2
05930     FD 7A 02 F1 | 	add	local08, objptr
05934     3D 6D 62 FC | 	wrlong	local01, local08
05938     FF FA 85 F1 | 	sub	objptr, #255
0593c     AF F0 03 F6 | 	mov	ptra, fp
05940     BA 00 A0 FD | 	call	#popregs_
05944                 | _trackerplayer_spin2_processChannel_ret
05944     2D 00 64 FD | 	ret
05948                 | 
05948                 | ' 
05948                 | ' 
05948                 | ' ' Handle all commands that executes on tick zero
05948                 | ' '
05948                 | ' PRI handleZeroTickCommands(channel)
05948                 | _trackerplayer_spin2_handleZeroTickCommands
05948     2F 1F 02 F6 | 	mov	_var01, arg01
0594c                 | ' 
0594c                 | '   CASE_FAST cmd
0594c     BA FB 05 F1 | 	add	objptr, #442
05950     FD 20 C2 FA | 	rdbyte	_var02, objptr
05954     BA FB 85 F1 | 	sub	objptr, #442
05958     10 23 02 F6 | 	mov	_var03, _var02
0595c     09 22 86 F1 | 	sub	_var03, #9
05960     07 22 26 F3 | 	fle	_var03, #7
05964     11 25 02 F6 | 	mov	_var04, _var03
05968     30 24 62 FD | 	jmprel	_var04
0596c                 | LR__0215
0596c     1C 00 90 FD | 	jmp	#LR__0216
05970     30 04 90 FD | 	jmp	#LR__0239
05974     64 00 90 FD | 	jmp	#LR__0218
05978     84 00 90 FD | 	jmp	#LR__0219
0597c     A0 00 90 FD | 	jmp	#LR__0220
05980     D0 00 90 FD | 	jmp	#LR__0221
05984     9C 03 90 FD | 	jmp	#LR__0236
05988     18 04 90 FD | 	jmp	#LR__0239
0598c                 | LR__0216
0598c                 | ' 
0598c                 | '     $9:                          ' Set sample offset
0598c                 | '       if z > 0
0598c     B9 FB 05 F1 | 	add	objptr, #441
05990     FD 26 C2 FA | 	rdbyte	_var05, objptr
05994     B9 FB 85 F1 | 	sub	objptr, #441
05998     00 26 5E F2 | 	cmps	_var05, #0 wcz
0599c     1C 00 90 ED |  if_be	jmp	#LR__0217
059a0                 | '         cmd9_memoryZ[channel] := z
059a0     0F 27 02 F6 | 	mov	_var05, _var01
059a4     DC FB 05 F1 | 	add	objptr, #476
059a8     FD 26 02 F1 | 	add	_var05, objptr
059ac     23 FA 85 F1 | 	sub	objptr, #35
059b0     FD 28 C2 FA | 	rdbyte	_var06, objptr
059b4     B9 FB 85 F1 | 	sub	objptr, #441
059b8     13 29 42 FC | 	wrbyte	_var06, _var05
059bc                 | LR__0217
059bc                 | ' 
059bc                 | '       sampleOffset := cmd9_memoryZ[channel] << 8
059bc     DC FB 05 F1 | 	add	objptr, #476
059c0     FD 1E 02 F1 | 	add	_var01, objptr
059c4     0F 27 C2 FA | 	rdbyte	_var05, _var01
059c8     08 26 66 F0 | 	shl	_var05, #8
059cc     29 FA 85 F1 | 	sub	objptr, #41
059d0     FD 26 62 FC | 	wrlong	_var05, objptr
059d4     B3 FB 85 F1 | 	sub	objptr, #435
059d8     C8 03 90 FD | 	jmp	#LR__0239
059dc                 | LR__0218
059dc                 | ' 
059dc                 | '     $B:                          ' Jump position
059dc                 | '       cmdB_memoryZ := z
059dc     B9 FB 05 F1 | 	add	objptr, #441
059e0     FD 26 C2 FA | 	rdbyte	_var05, objptr
059e4     2E FA 05 F1 | 	add	objptr, #46
059e8     FD 26 42 FC | 	wrbyte	_var05, objptr
059ec                 | '       cmdB_updatePosition := true
059ec     01 FA 05 F1 | 	add	objptr, #1
059f0     FF FF FF FF 
059f4     FD FE 4B FC | 	wrbyte	##-1, objptr
059f8     E8 FB 85 F1 | 	sub	objptr, #488
059fc     A4 03 90 FD | 	jmp	#LR__0239
05a00                 | LR__0219
05a00                 | ' 
05a00                 | '     $C:                          ' Set volume
05a00                 | '       currVolume[channel] := z
05a00     02 1E 66 F0 | 	shl	_var01, #2
05a04     FF FA 05 F1 | 	add	objptr, #255
05a08     FD 1E 02 F1 | 	add	_var01, objptr
05a0c     BA FA 05 F1 | 	add	objptr, #186
05a10     FD 28 C2 FA | 	rdbyte	_var06, objptr
05a14     B9 FB 85 F1 | 	sub	objptr, #441
05a18     0F 29 62 FC | 	wrlong	_var06, _var01
05a1c     84 03 90 FD | 	jmp	#LR__0239
05a20                 | LR__0220
05a20                 | ' 
05a20                 | '     $D:                          ' Pattern break
05a20                 | '       cmdD_memoryX := x
05a20     B7 FB 05 F1 | 	add	objptr, #439
05a24     FD 26 C2 FA | 	rdbyte	_var05, objptr
05a28     2D FA 05 F1 | 	add	objptr, #45
05a2c     FD 26 42 FC | 	wrbyte	_var05, objptr
05a30                 | '       cmdD_memoryY := y
05a30     2C FA 85 F1 | 	sub	objptr, #44
05a34     FD 26 C2 FA | 	rdbyte	_var05, objptr
05a38     2D FA 05 F1 | 	add	objptr, #45
05a3c     FD 26 42 FC | 	wrbyte	_var05, objptr
05a40                 | '       cmdD_updatePosition := true
05a40     01 FA 05 F1 | 	add	objptr, #1
05a44     FF FF FF FF 
05a48     FD FE 4B FC | 	wrbyte	##-1, objptr
05a4c     E6 FB 85 F1 | 	sub	objptr, #486
05a50     50 03 90 FD | 	jmp	#LR__0239
05a54                 | LR__0221
05a54                 | ' 
05a54                 | '     $E:                          ' Handle "E commands" that execute on tick zero
05a54                 | ' 
05a54                 | '       CASE_FAST x
05a54     B7 FB 05 F1 | 	add	objptr, #439
05a58     FD 2A C2 FA | 	rdbyte	_var07, objptr
05a5c     B7 FB 85 F1 | 	sub	objptr, #439
05a60     15 27 02 F6 | 	mov	_var05, _var07
05a64     0F 26 26 F3 | 	fle	_var05, #15
05a68     13 2D 02 F6 | 	mov	_var08, _var05
05a6c     30 2C 62 FD | 	jmprel	_var08
05a70                 | LR__0222
05a70     3C 00 90 FD | 	jmp	#LR__0223
05a74     58 00 90 FD | 	jmp	#LR__0224
05a78     8C 00 90 FD | 	jmp	#LR__0225
05a7c     C0 00 90 FD | 	jmp	#LR__0226
05a80     DC 00 90 FD | 	jmp	#LR__0227
05a84     14 01 90 FD | 	jmp	#LR__0228
05a88     28 01 90 FD | 	jmp	#LR__0229
05a8c     C0 01 90 FD | 	jmp	#LR__0232
05a90     10 03 90 FD | 	jmp	#LR__0239
05a94     0C 03 90 FD | 	jmp	#LR__0239
05a98     F0 01 90 FD | 	jmp	#LR__0233
05a9c     24 02 90 FD | 	jmp	#LR__0234
05aa0     00 03 90 FD | 	jmp	#LR__0239
05aa4     FC 02 90 FD | 	jmp	#LR__0239
05aa8     50 02 90 FD | 	jmp	#LR__0235
05aac     F4 02 90 FD | 	jmp	#LR__0239
05ab0                 | LR__0223
05ab0                 | ' 
05ab0                 | '         $0: lpFilter := (!y) & 1                 ' Set lowpass filter On/Off
05ab0     B8 FB 05 F1 | 	add	objptr, #440
05ab4     FD 28 C2 FA | 	rdbyte	_var06, objptr
05ab8     14 29 22 F6 | 	not	_var06, _var06
05abc     01 28 06 F5 | 	and	_var06, #1
05ac0     03 FA 05 F1 | 	add	objptr, #3
05ac4     FD 28 42 FC | 	wrbyte	_var06, objptr
05ac8     BB FB 85 F1 | 	sub	objptr, #443
05acc     D4 02 90 FD | 	jmp	#LR__0239
05ad0                 | LR__0224
05ad0                 | ' 
05ad0                 | '         $1: currPeriod[channel] -= y             ' Fine frequency slide up
05ad0     0F 2F 02 F6 | 	mov	_var09, _var01
05ad4     02 2E 66 F0 | 	shl	_var09, #2
05ad8     DF FA 05 F1 | 	add	objptr, #223
05adc     FD 2E 02 F1 | 	add	_var09, objptr
05ae0     17 29 02 FB | 	rdlong	_var06, _var09
05ae4     D9 FA 05 F1 | 	add	objptr, #217
05ae8     FD 30 C2 FA | 	rdbyte	_var10, objptr
05aec     18 29 82 F1 | 	sub	_var06, _var10
05af0     02 1E 66 F0 | 	shl	_var01, #2
05af4     D9 FA 85 F1 | 	sub	objptr, #217
05af8     FD 1E 02 F1 | 	add	_var01, objptr
05afc     0F 29 62 FC | 	wrlong	_var06, _var01
05b00     DF FA 85 F1 | 	sub	objptr, #223
05b04     9C 02 90 FD | 	jmp	#LR__0239
05b08                 | LR__0225
05b08                 | ' 
05b08                 | '         $2: currPeriod[channel] += y             ' Fine frequency slide down
05b08     0F 2F 02 F6 | 	mov	_var09, _var01
05b0c     02 2E 66 F0 | 	shl	_var09, #2
05b10     DF FA 05 F1 | 	add	objptr, #223
05b14     FD 2E 02 F1 | 	add	_var09, objptr
05b18     17 29 02 FB | 	rdlong	_var06, _var09
05b1c     D9 FA 05 F1 | 	add	objptr, #217
05b20     FD 30 C2 FA | 	rdbyte	_var10, objptr
05b24     18 29 02 F1 | 	add	_var06, _var10
05b28     02 1E 66 F0 | 	shl	_var01, #2
05b2c     D9 FA 85 F1 | 	sub	objptr, #217
05b30     FD 1E 02 F1 | 	add	_var01, objptr
05b34     0F 29 62 FC | 	wrlong	_var06, _var01
05b38     DF FA 85 F1 | 	sub	objptr, #223
05b3c     64 02 90 FD | 	jmp	#LR__0239
05b40                 | LR__0226
05b40                 | ' 
05b40                 | '         $3: portaGlissando[channel] := y & 1     ' Set portamento glissando On/Off
05b40     B8 FB 05 F1 | 	add	objptr, #440
05b44     FD 28 C2 FA | 	rdbyte	_var06, objptr
05b48     01 28 06 F5 | 	and	_var06, #1
05b4c     04 FA 05 F1 | 	add	objptr, #4
05b50     FD 1E 02 F1 | 	add	_var01, objptr
05b54     0F 29 42 FC | 	wrbyte	_var06, _var01
05b58     BC FB 85 F1 | 	sub	objptr, #444
05b5c     44 02 90 FD | 	jmp	#LR__0239
05b60                 | LR__0227
05b60                 | ' 
05b60                 | '         $4:                                      ' Set vibrato waveform type
05b60                 | '           vibratoType[channel]  := y & 3
05b60     B8 FB 05 F1 | 	add	objptr, #440
05b64     FD 28 C2 FA | 	rdbyte	_var06, objptr
05b68     03 28 06 F5 | 	and	_var06, #3
05b6c     0F 33 02 F6 | 	mov	_var11, _var01
05b70     08 FA 05 F1 | 	add	objptr, #8
05b74     FD 32 02 F1 | 	add	_var11, objptr
05b78     19 29 42 FC | 	wrbyte	_var06, _var11
05b7c                 | '           resetVibrato[channel] := y & 4
05b7c     08 FA 85 F1 | 	sub	objptr, #8
05b80     FD 28 C2 FA | 	rdbyte	_var06, objptr
05b84     04 28 06 F5 | 	and	_var06, #4
05b88     25 FA 85 F1 | 	sub	objptr, #37
05b8c     FD 1E 02 F1 | 	add	_var01, objptr
05b90     0F 29 42 FC | 	wrbyte	_var06, _var01
05b94     93 FB 85 F1 | 	sub	objptr, #403
05b98     08 02 90 FD | 	jmp	#LR__0239
05b9c                 | LR__0228
05b9c                 | ' 
05b9c                 | '         $5: fineTune := y                        ' Set finetune
05b9c     B8 FB 05 F1 | 	add	objptr, #440
05ba0     FD 28 C2 FA | 	rdbyte	_var06, objptr
05ba4     09 FA 85 F1 | 	sub	objptr, #9
05ba8     FD 28 62 FC | 	wrlong	_var06, objptr
05bac     AF FB 85 F1 | 	sub	objptr, #431
05bb0     F0 01 90 FD | 	jmp	#LR__0239
05bb4                 | LR__0229
05bb4                 | ' 
05bb4                 | '         $6:                                      ' Pattern looping
05bb4                 | '           if y == 0
05bb4     B8 FB 05 F1 | 	add	objptr, #440
05bb8     FD 28 CA FA | 	rdbyte	_var06, objptr wz
05bbc     B8 FB 85 F1 | 	sub	objptr, #440
05bc0     1C 00 90 5D |  if_ne	jmp	#LR__0230
05bc4                 | '             cmdE6_memory[channel] := patternRow
05bc4     E9 FB 05 F1 | 	add	objptr, #489
05bc8     FD 1E 02 F1 | 	add	_var01, objptr
05bcc     47 FB 85 F1 | 	sub	objptr, #327
05bd0     FD 32 C2 FA | 	rdbyte	_var11, objptr
05bd4     A2 FA 85 F1 | 	sub	objptr, #162
05bd8     0F 33 42 FC | 	wrbyte	_var11, _var01
05bdc                 | '           else
05bdc     C4 01 90 FD | 	jmp	#LR__0239
05be0                 | LR__0230
05be0                 | '             if ++cmdE6_counter[channel] <= y
05be0     0F 2F 02 F6 | 	mov	_var09, _var01
05be4     ED FB 05 F1 | 	add	objptr, #493
05be8     FD 2E 02 F1 | 	add	_var09, objptr
05bec     17 29 C2 FA | 	rdbyte	_var06, _var09
05bf0     01 28 06 F1 | 	add	_var06, #1
05bf4     0F 31 02 F6 | 	mov	_var10, _var01
05bf8     FD 30 02 F1 | 	add	_var10, objptr
05bfc     18 29 42 FC | 	wrbyte	_var06, _var10
05c00     18 35 C2 FA | 	rdbyte	_var12, _var10
05c04     35 FA 85 F1 | 	sub	objptr, #53
05c08     FD 36 C2 FA | 	rdbyte	_var13, objptr
05c0c     B8 FB 85 F1 | 	sub	objptr, #440
05c10     1B 35 5A F2 | 	cmps	_var12, _var13 wcz
05c14     24 00 90 1D |  if_a	jmp	#LR__0231
05c18                 | '               cmdE6_updatePosition[channel] := true
05c18     F1 FB 05 F1 | 	add	objptr, #497
05c1c     FD 1E 02 F1 | 	add	_var01, objptr
05c20     FF FF FF FF 
05c24     0F FF 4B FC | 	wrbyte	##-1, _var01
05c28                 | '               cmdE6_updatePositionCommon    := true
05c28     04 FA 05 F1 | 	add	objptr, #4
05c2c     FF FF FF FF 
05c30     FD FE 4B FC | 	wrbyte	##-1, objptr
05c34     F5 FB 85 F1 | 	sub	objptr, #501
05c38                 | '             else
05c38     68 01 90 FD | 	jmp	#LR__0239
05c3c                 | LR__0231
05c3c                 | '               cmdE6_counter[channel] := 0
05c3c     ED FB 05 F1 | 	add	objptr, #493
05c40     FD 1E 02 F1 | 	add	_var01, objptr
05c44     0F 01 48 FC | 	wrbyte	#0, _var01
05c48     ED FB 85 F1 | 	sub	objptr, #493
05c4c     54 01 90 FD | 	jmp	#LR__0239
05c50                 | LR__0232
05c50                 | ' 
05c50                 | '         $7:                                      ' Set tremolo waveform type
05c50                 | '           tremoloType[channel] := y & 3
05c50     B8 FB 05 F1 | 	add	objptr, #440
05c54     FD 28 C2 FA | 	rdbyte	_var06, objptr
05c58     03 28 06 F5 | 	and	_var06, #3
05c5c     0F 33 02 F6 | 	mov	_var11, _var01
05c60     0C FA 05 F1 | 	add	objptr, #12
05c64     FD 32 02 F1 | 	add	_var11, objptr
05c68     19 29 42 FC | 	wrbyte	_var06, _var11
05c6c                 | '           resetTremolo[channel] := y & 4
05c6c     0C FA 85 F1 | 	sub	objptr, #12
05c70     FD 28 C2 FA | 	rdbyte	_var06, objptr
05c74     04 28 06 F5 | 	and	_var06, #4
05c78     29 FA 85 F1 | 	sub	objptr, #41
05c7c     FD 1E 02 F1 | 	add	_var01, objptr
05c80     0F 29 42 FC | 	wrbyte	_var06, _var01
05c84     8F FB 85 F1 | 	sub	objptr, #399
05c88     18 01 90 FD | 	jmp	#LR__0239
05c8c                 | LR__0233
05c8c                 | ' 
05c8c                 | '         $A: currVolume[channel] += y             ' Fine volume slide up
05c8c     0F 2F 02 F6 | 	mov	_var09, _var01
05c90     02 2E 66 F0 | 	shl	_var09, #2
05c94     FF FA 05 F1 | 	add	objptr, #255
05c98     FD 2E 02 F1 | 	add	_var09, objptr
05c9c     17 29 02 FB | 	rdlong	_var06, _var09
05ca0     B9 FA 05 F1 | 	add	objptr, #185
05ca4     FD 30 C2 FA | 	rdbyte	_var10, objptr
05ca8     18 29 02 F1 | 	add	_var06, _var10
05cac     02 1E 66 F0 | 	shl	_var01, #2
05cb0     B9 FA 85 F1 | 	sub	objptr, #185
05cb4     FD 1E 02 F1 | 	add	_var01, objptr
05cb8     0F 29 62 FC | 	wrlong	_var06, _var01
05cbc     FF FA 85 F1 | 	sub	objptr, #255
05cc0     E0 00 90 FD | 	jmp	#LR__0239
05cc4                 | LR__0234
05cc4                 | ' 
05cc4                 | '         $B: currVolume[channel] -= y             ' Fine volume slide down
05cc4     0F 2F 02 F6 | 	mov	_var09, _var01
05cc8     02 2E 66 F0 | 	shl	_var09, #2
05ccc     FF FA 05 F1 | 	add	objptr, #255
05cd0     FD 2E 02 F1 | 	add	_var09, objptr
05cd4     17 29 02 FB | 	rdlong	_var06, _var09
05cd8     B9 FA 05 F1 | 	add	objptr, #185
05cdc     FD 30 C2 FA | 	rdbyte	_var10, objptr
05ce0     18 29 82 F1 | 	sub	_var06, _var10
05ce4     02 1E 66 F0 | 	shl	_var01, #2
05ce8     B9 FA 85 F1 | 	sub	objptr, #185
05cec     FD 1E 02 F1 | 	add	_var01, objptr
05cf0     0F 29 62 FC | 	wrlong	_var06, _var01
05cf4     FF FA 85 F1 | 	sub	objptr, #255
05cf8     A8 00 90 FD | 	jmp	#LR__0239
05cfc                 | LR__0235
05cfc                 | ' 
05cfc                 | '         $E: patternDelay := y * currentSongSpeed ' Pattern delay
05cfc     B8 FB 05 F1 | 	add	objptr, #440
05d00     FD 2E C2 FA | 	rdbyte	_var09, objptr
05d04     14 FB 85 F1 | 	sub	objptr, #276
05d08     FD 30 C2 FA | 	rdbyte	_var10, objptr
05d0c     18 2F 02 FD | 	qmul	_var09, _var10
05d10     18 28 62 FD | 	getqx	_var06
05d14     01 FA 05 F1 | 	add	objptr, #1
05d18     FD 28 42 FC | 	wrbyte	_var06, objptr
05d1c     A5 FA 85 F1 | 	sub	objptr, #165
05d20     80 00 90 FD | 	jmp	#LR__0239
05d24                 | LR__0236
05d24                 | ' 
05d24                 | '     $F:                          ' Set speed
05d24                 | '       if z < 32
05d24     B9 FB 05 F1 | 	add	objptr, #441
05d28     FD 26 C2 FA | 	rdbyte	_var05, objptr
05d2c     B9 FB 85 F1 | 	sub	objptr, #441
05d30     20 26 5E F2 | 	cmps	_var05, #32 wcz
05d34     18 00 90 3D |  if_ae	jmp	#LR__0237
05d38                 | '         currentSongSpeed := z
05d38     B9 FB 05 F1 | 	add	objptr, #441
05d3c     FD 26 C2 FA | 	rdbyte	_var05, objptr
05d40     15 FB 85 F1 | 	sub	objptr, #277
05d44     FD 26 42 FC | 	wrbyte	_var05, objptr
05d48     A4 FA 85 F1 | 	sub	objptr, #164
05d4c                 | '       else
05d4c     54 00 90 FD | 	jmp	#LR__0238
05d50                 | LR__0237
05d50                 | '         ticksPerMinute := z * 24
05d50     B9 FB 05 F1 | 	add	objptr, #441
05d54     FD 2A C2 FA | 	rdbyte	_var07, objptr
05d58     15 27 02 F6 | 	mov	_var05, _var07
05d5c     01 26 66 F0 | 	shl	_var05, #1
05d60     15 27 02 F1 | 	add	_var05, _var07
05d64     03 26 66 F0 | 	shl	_var05, #3
05d68     12 FA 85 F1 | 	sub	objptr, #18
05d6c     FD 26 62 FC | 	wrlong	_var05, objptr
05d70     A7 FB 85 F1 | 	sub	objptr, #423
05d74                 | '         cyclesToWait   := (systemClock / ticksPerMinute) * 60
05d74     FD 98 02 FB | 	rdlong	muldiva_, objptr
05d78     A7 FB 05 F1 | 	add	objptr, #423
05d7c     FD 9A 02 FB | 	rdlong	muldivb_, objptr
05d80     A7 FB 85 F1 | 	sub	objptr, #423
05d84     C6 00 A0 FD | 	call	#divide_
05d88     4D 29 02 F6 | 	mov	_var06, muldivb_
05d8c     04 28 66 F0 | 	shl	_var06, #4
05d90     4D 29 82 F1 | 	sub	_var06, muldivb_
05d94     02 28 66 F0 | 	shl	_var06, #2
05d98     AB FB 05 F1 | 	add	objptr, #427
05d9c     FD 28 62 FC | 	wrlong	_var06, objptr
05da0     AB FB 85 F1 | 	sub	objptr, #427
05da4                 | LR__0238
05da4                 | LR__0239
05da4                 | _trackerplayer_spin2_handleZeroTickCommands_ret
05da4     2D 00 64 FD | 	ret
05da8                 | 
05da8                 | ' 
05da8                 | ' 
05da8                 | ' ' Handle all commands that executes on "non zero ticks"
05da8                 | ' '
05da8                 | ' PRI handleNonZeroTickCommands(channel)
05da8                 | _trackerplayer_spin2_handleNonZeroTickCommands
05da8     0A 5A 05 F6 | 	mov	COUNT_, #10
05dac     B0 00 A0 FD | 	call	#pushregs_
05db0     2F 6D 02 F6 | 	mov	local01, arg01
05db4                 | ' 
05db4                 | '   CASE_FAST cmd
05db4     BA FB 05 F1 | 	add	objptr, #442
05db8     FD 6E C2 FA | 	rdbyte	local02, objptr
05dbc     BA FB 85 F1 | 	sub	objptr, #442
05dc0     37 71 02 F6 | 	mov	local03, local02
05dc4     01 70 86 F1 | 	sub	local03, #1
05dc8     0E 70 26 F3 | 	fle	local03, #14
05dcc     38 73 02 F6 | 	mov	local04, local03
05dd0     30 72 62 FD | 	jmprel	local04
05dd4                 | LR__0240
05dd4     38 00 90 FD | 	jmp	#LR__0241
05dd8     A0 00 90 FD | 	jmp	#LR__0242
05ddc     D4 00 90 FD | 	jmp	#LR__0243
05de0     1C 02 90 FD | 	jmp	#LR__0253
05de4     20 01 90 FD | 	jmp	#LR__0245
05de8     48 01 90 FD | 	jmp	#LR__0246
05dec     50 01 90 FD | 	jmp	#LR__0247
05df0     0C 02 90 FD | 	jmp	#LR__0253
05df4     08 02 90 FD | 	jmp	#LR__0253
05df8     B0 01 90 FD | 	jmp	#LR__0250
05dfc     00 02 90 FD | 	jmp	#LR__0253
05e00     FC 01 90 FD | 	jmp	#LR__0253
05e04     F8 01 90 FD | 	jmp	#LR__0253
05e08     AC 01 90 FD | 	jmp	#LR__0251
05e0c     F0 01 90 FD | 	jmp	#LR__0253
05e10                 | LR__0241
05e10                 | ' 
05e10                 | '     $1: currPeriod[channel] -= z        ' Frequency slide up
05e10     36 75 02 F6 | 	mov	local05, local01
05e14     02 74 66 F0 | 	shl	local05, #2
05e18     DF FA 05 F1 | 	add	objptr, #223
05e1c     FD 74 02 F1 | 	add	local05, objptr
05e20     3A 77 02 FB | 	rdlong	local06, local05
05e24     DA FA 05 F1 | 	add	objptr, #218
05e28     FD 78 C2 FA | 	rdbyte	local07, objptr
05e2c     3C 77 82 F1 | 	sub	local06, local07
05e30     36 7B 02 F6 | 	mov	local08, local01
05e34     02 7A 66 F0 | 	shl	local08, #2
05e38     DA FA 85 F1 | 	sub	objptr, #218
05e3c     FD 7A 02 F1 | 	add	local08, objptr
05e40     3D 77 62 FC | 	wrlong	local06, local08
05e44                 | ' 
05e44                 | '        ' This simulates a bug in the original protracker play routine that is dependant on an UINT16 data type
05e44                 | '       if currPeriod[channel] < 0
05e44     36 77 02 F6 | 	mov	local06, local01
05e48     02 76 66 F0 | 	shl	local06, #2
05e4c     FD 76 02 F1 | 	add	local06, objptr
05e50     3B 7D 02 FB | 	rdlong	local09, local06
05e54     00 7C 5E F2 | 	cmps	local09, #0 wcz
05e58     DF FA 85 F1 | 	sub	objptr, #223
05e5c     A0 01 90 3D |  if_ae	jmp	#LR__0253
05e60                 | '         currPeriod[channel] := MAXIMUM_PERIOD
05e60     02 6C 66 F0 | 	shl	local01, #2
05e64     DF FA 05 F1 | 	add	objptr, #223
05e68     FD 6C 02 F1 | 	add	local01, objptr
05e6c     01 00 80 FF 
05e70     36 B1 6A FC | 	wrlong	##856, local01
05e74     DF FA 85 F1 | 	sub	objptr, #223
05e78     84 01 90 FD | 	jmp	#LR__0253
05e7c                 | LR__0242
05e7c                 | ' 
05e7c                 | '     $2: currPeriod[channel] += z        ' Frequency slide down
05e7c     36 75 02 F6 | 	mov	local05, local01
05e80     02 74 66 F0 | 	shl	local05, #2
05e84     DF FA 05 F1 | 	add	objptr, #223
05e88     FD 74 02 F1 | 	add	local05, objptr
05e8c     3A 77 02 FB | 	rdlong	local06, local05
05e90     DA FA 05 F1 | 	add	objptr, #218
05e94     FD 78 C2 FA | 	rdbyte	local07, objptr
05e98     3C 77 02 F1 | 	add	local06, local07
05e9c     02 6C 66 F0 | 	shl	local01, #2
05ea0     DA FA 85 F1 | 	sub	objptr, #218
05ea4     FD 6C 02 F1 | 	add	local01, objptr
05ea8     36 77 62 FC | 	wrlong	local06, local01
05eac     DF FA 85 F1 | 	sub	objptr, #223
05eb0     4C 01 90 FD | 	jmp	#LR__0253
05eb4                 | LR__0243
05eb4                 | ' 
05eb4                 | '     $3:                                 ' Slide to note (portamento)
05eb4                 | '       if z > 0
05eb4     B9 FB 05 F1 | 	add	objptr, #441
05eb8     FD 76 C2 FA | 	rdbyte	local06, objptr
05ebc     B9 FB 85 F1 | 	sub	objptr, #441
05ec0     00 76 5E F2 | 	cmps	local06, #0 wcz
05ec4     1C 00 90 ED |  if_be	jmp	#LR__0244
05ec8                 | '         cmd3_memoryZ[channel] := z
05ec8     36 77 02 F6 | 	mov	local06, local01
05ecc     C8 FB 05 F1 | 	add	objptr, #456
05ed0     FD 76 02 F1 | 	add	local06, objptr
05ed4     0F FA 85 F1 | 	sub	objptr, #15
05ed8     FD 7C C2 FA | 	rdbyte	local09, objptr
05edc     B9 FB 85 F1 | 	sub	objptr, #441
05ee0     3B 7D 42 FC | 	wrbyte	local09, local06
05ee4                 | LR__0244
05ee4                 | ' 
05ee4                 | '       doPortamento(channel, lastSetPeriod[channel])
05ee4     36 7D 02 F6 | 	mov	local09, local01
05ee8     02 7C 66 F0 | 	shl	local09, #2
05eec     27 FB 05 F1 | 	add	objptr, #295
05ef0     FD 7C 02 F1 | 	add	local09, objptr
05ef4     3E 61 02 FB | 	rdlong	arg02, local09
05ef8     36 5F 02 F6 | 	mov	arg01, local01
05efc     27 FB 85 F1 | 	sub	objptr, #295
05f00     5C 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
05f04     F8 00 90 FD | 	jmp	#LR__0253
05f08                 | LR__0245
05f08                 | ' 
05f08                 | '     $5:                                 ' Volume slide + portamento
05f08                 | '       doVolumeSlide(channel)
05f08     36 5F 02 F6 | 	mov	arg01, local01
05f0c     7C 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
05f10                 | '       doPortamento(channel, lastSetPeriod[channel])
05f10     36 7D 02 F6 | 	mov	local09, local01
05f14     02 7C 66 F0 | 	shl	local09, #2
05f18     27 FB 05 F1 | 	add	objptr, #295
05f1c     FD 7C 02 F1 | 	add	local09, objptr
05f20     3E 61 02 FB | 	rdlong	arg02, local09
05f24     36 5F 02 F6 | 	mov	arg01, local01
05f28     27 FB 85 F1 | 	sub	objptr, #295
05f2c     30 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
05f30     CC 00 90 FD | 	jmp	#LR__0253
05f34                 | LR__0246
05f34                 | ' 
05f34                 | '     $6: doVolumeSlide(channel)          ' Volume slide + Vibrato (note that vibrato is a)
05f34     36 5F 02 F6 | 	mov	arg01, local01
05f38     50 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
05f3c     C0 00 90 FD | 	jmp	#LR__0253
05f40                 | LR__0247
05f40                 | ' 
05f40                 | '     $7:                                 ' Tremolo
05f40                 | '       if x > 0
05f40     B7 FB 05 F1 | 	add	objptr, #439
05f44     FD 76 C2 FA | 	rdbyte	local06, objptr
05f48     B7 FB 85 F1 | 	sub	objptr, #439
05f4c     00 76 5E F2 | 	cmps	local06, #0 wcz
05f50     1C 00 90 ED |  if_be	jmp	#LR__0248
05f54                 | '         cmd7_memoryX[channel] := x
05f54     36 77 02 F6 | 	mov	local06, local01
05f58     D8 FB 05 F1 | 	add	objptr, #472
05f5c     FD 76 02 F1 | 	add	local06, objptr
05f60     21 FA 85 F1 | 	sub	objptr, #33
05f64     FD 7C C2 FA | 	rdbyte	local09, objptr
05f68     B7 FB 85 F1 | 	sub	objptr, #439
05f6c     3B 7D 42 FC | 	wrbyte	local09, local06
05f70                 | LR__0248
05f70                 | '       if y > 0
05f70     B8 FB 05 F1 | 	add	objptr, #440
05f74     FD 76 C2 FA | 	rdbyte	local06, objptr
05f78     B8 FB 85 F1 | 	sub	objptr, #440
05f7c     00 76 5E F2 | 	cmps	local06, #0 wcz
05f80     1C 00 90 ED |  if_be	jmp	#LR__0249
05f84                 | '         cmd7_memoryY[channel] := y
05f84     36 77 02 F6 | 	mov	local06, local01
05f88     D4 FB 05 F1 | 	add	objptr, #468
05f8c     FD 76 02 F1 | 	add	local06, objptr
05f90     1C FA 85 F1 | 	sub	objptr, #28
05f94     FD 7C C2 FA | 	rdbyte	local09, objptr
05f98     B8 FB 85 F1 | 	sub	objptr, #440
05f9c     3B 7D 42 FC | 	wrbyte	local09, local06
05fa0                 | LR__0249
05fa0                 | ' 
05fa0                 | '       doTremolo(channel)
05fa0     36 5F 02 F6 | 	mov	arg01, local01
05fa4     F0 03 B0 FD | 	call	#_trackerplayer_spin2_doTremolo
05fa8     54 00 90 FD | 	jmp	#LR__0253
05fac                 | LR__0250
05fac                 | ' 
05fac                 | '     $A: doVolumeSlide(channel)          ' Volume slide
05fac     36 5F 02 F6 | 	mov	arg01, local01
05fb0     D8 08 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
05fb4     48 00 90 FD | 	jmp	#LR__0253
05fb8                 | LR__0251
05fb8                 | ' 
05fb8                 | '     $E:                                 ' Retrig every Y ticks
05fb8                 | '       if (x == $9) && ((tickcounter // y) == 0)
05fb8     B7 FB 05 F1 | 	add	objptr, #439
05fbc     FD 74 C2 FA | 	rdbyte	local05, objptr
05fc0     B7 FB 85 F1 | 	sub	objptr, #439
05fc4     09 74 0E F2 | 	cmp	local05, #9 wz
05fc8     34 00 90 5D |  if_ne	jmp	#LR__0252
05fcc     A1 FA 05 F1 | 	add	objptr, #161
05fd0     FD 78 C2 FA | 	rdbyte	local07, objptr
05fd4     3C 99 02 F6 | 	mov	muldiva_, local07
05fd8     17 FB 05 F1 | 	add	objptr, #279
05fdc     FD 7E C2 FA | 	rdbyte	local10, objptr
05fe0     B8 FB 85 F1 | 	sub	objptr, #440
05fe4     3F 9B 02 F6 | 	mov	muldivb_, local10
05fe8     C6 00 A0 FD | 	call	#divide_
05fec     4C 7D 0A F6 | 	mov	local09, muldiva_ wz
05ff0     0C 00 90 5D |  if_ne	jmp	#LR__0252
05ff4                 | '         triggerNote(channel)
05ff4     36 77 02 F6 | 	mov	local06, local01
05ff8     3B 5F 02 F6 | 	mov	arg01, local06
05ffc     08 F3 BF FD | 	call	#_trackerplayer_spin2_triggerNote
06000                 | LR__0252
06000                 | LR__0253
06000     AF F0 03 F6 | 	mov	ptra, fp
06004     BA 00 A0 FD | 	call	#popregs_
06008                 | _trackerplayer_spin2_handleNonZeroTickCommands_ret
06008     2D 00 64 FD | 	ret
0600c                 | 
0600c                 | ' 
0600c                 | ' 
0600c                 | ' ' Handle all commands that executes on every tick
0600c                 | ' '
0600c                 | ' PRI handleEveryTickCommands(channel) | tempNote, arpCounter
0600c                 | _trackerplayer_spin2_handleEveryTickCommands
0600c     0F 5A 05 F6 | 	mov	COUNT_, #15
06010     B0 00 A0 FD | 	call	#pushregs_
06014     2F 6D 02 F6 | 	mov	local01, arg01
06018                 | ' 
06018                 | '   CASE_FAST cmd
06018     BA FB 05 F1 | 	add	objptr, #442
0601c     FD 6E C2 FA | 	rdbyte	local02, objptr
06020     BA FB 85 F1 | 	sub	objptr, #442
06024     37 71 02 F6 | 	mov	local03, local02
06028     0F 70 26 F3 | 	fle	local03, #15
0602c     38 73 02 F6 | 	mov	local04, local03
06030     30 72 62 FD | 	jmprel	local04
06034                 | LR__0254
06034     3C 00 90 FD | 	jmp	#LR__0255
06038     50 03 90 FD | 	jmp	#LR__0269
0603c     4C 03 90 FD | 	jmp	#LR__0269
06040     48 03 90 FD | 	jmp	#LR__0269
06044     D0 01 90 FD | 	jmp	#LR__0258
06048     40 03 90 FD | 	jmp	#LR__0269
0604c     34 02 90 FD | 	jmp	#LR__0261
06050     38 03 90 FD | 	jmp	#LR__0269
06054     34 03 90 FD | 	jmp	#LR__0269
06058     30 03 90 FD | 	jmp	#LR__0269
0605c     2C 03 90 FD | 	jmp	#LR__0269
06060     28 03 90 FD | 	jmp	#LR__0269
06064     24 03 90 FD | 	jmp	#LR__0269
06068     20 03 90 FD | 	jmp	#LR__0269
0606c     20 02 90 FD | 	jmp	#LR__0262
06070     18 03 90 FD | 	jmp	#LR__0269
06074                 | LR__0255
06074                 | ' 
06074                 | '     $0:                                 ' Arpeggio
06074                 | '       arpCounter := tickCounter // 3
06074     A1 FA 05 F1 | 	add	objptr, #161
06078     FD 98 C2 FA | 	rdbyte	muldiva_, objptr
0607c     A1 FA 85 F1 | 	sub	objptr, #161
06080     03 9A 06 F6 | 	mov	muldivb_, #3
06084     C6 00 A0 FD | 	call	#divide_
06088     4C 75 02 F6 | 	mov	local05, muldiva_
0608c                 | '       if (tempNote := amigaPeriodToNote(currPeriod[channel], currFineTune[channel])) < 36
0608c     36 77 02 F6 | 	mov	local06, local01
06090     02 76 66 F0 | 	shl	local06, #2
06094     DF FA 05 F1 | 	add	objptr, #223
06098     FD 76 02 F1 | 	add	local06, objptr
0609c     3B 5F 02 FB | 	rdlong	arg01, local06
060a0     36 79 02 F6 | 	mov	local07, local01
060a4     0C FA 85 F1 | 	sub	objptr, #12
060a8     FD 78 02 F1 | 	add	local07, objptr
060ac     3C 61 C2 FA | 	rdbyte	arg02, local07
060b0     D3 FA 85 F1 | 	sub	objptr, #211
060b4     C8 EF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
060b8     0C 7B 02 F6 | 	mov	local08, result1
060bc     3D 7D 02 F6 | 	mov	local09, local08
060c0     24 7A 5E F2 | 	cmps	local08, #36 wcz
060c4     C4 02 90 3D |  if_ae	jmp	#LR__0269
060c8                 | '         if arpCounter == 1 and x > 0
060c8     01 74 0E F2 | 	cmp	local05, #1 wz
060cc     80 00 90 5D |  if_ne	jmp	#LR__0256
060d0     B7 FB 05 F1 | 	add	objptr, #439
060d4     FD 7E C2 FA | 	rdbyte	local10, objptr
060d8     B7 FB 85 F1 | 	sub	objptr, #439
060dc     00 7E 5E F2 | 	cmps	local10, #0 wcz
060e0     6C 00 90 ED |  if_be	jmp	#LR__0256
060e4                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + x) - currPeriod[channel]
060e4     3E 5F 02 F6 | 	mov	arg01, local09
060e8     B7 FB 05 F1 | 	add	objptr, #439
060ec     FD 80 C2 FA | 	rdbyte	local11, objptr
060f0     40 5F 02 F1 | 	add	arg01, local11
060f4                 | ' 
060f4                 | '   return word[@periodTable][noteNumber]
060f4     06 00 00 FF 
060f8     A4 14 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
060fc     01 5E 66 F0 | 	shl	arg01, #1
06100     0A 5F 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
06104     2F 19 E2 FA | 	rdword	result1, arg01
06108     06 00 00 FF 
0610c     A4 14 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
06110     0C 77 02 F6 | 	mov	local06, result1
06114     36 79 02 F6 | 	mov	local07, local01
06118     02 78 66 F0 | 	shl	local07, #2
0611c     D8 FA 85 F1 | 	sub	objptr, #216
06120     FD 80 02 F6 | 	mov	local11, objptr
06124     FD 78 02 F1 | 	add	local07, objptr
06128     3B 7F 02 F6 | 	mov	local10, local06
0612c     3C 83 02 FB | 	rdlong	local12, local07
06130     41 7F 82 F1 | 	sub	local10, local12
06134     36 85 02 F6 | 	mov	local13, local01
06138     02 84 66 F0 | 	shl	local13, #2
0613c     10 FA 05 F1 | 	add	objptr, #16
06140     FD 86 02 F6 | 	mov	local14, objptr
06144     FD 84 02 F1 | 	add	local13, objptr
06148     42 7F 62 FC | 	wrlong	local10, local13
0614c     EF FA 85 F1 | 	sub	objptr, #239
06150                 | LR__0256
06150                 | '         if arpCounter == 2 and y > 0
06150     02 74 0E F2 | 	cmp	local05, #2 wz
06154     80 00 90 5D |  if_ne	jmp	#LR__0257
06158     B8 FB 05 F1 | 	add	objptr, #440
0615c     FD 7E C2 FA | 	rdbyte	local10, objptr
06160     B8 FB 85 F1 | 	sub	objptr, #440
06164     00 7E 5E F2 | 	cmps	local10, #0 wcz
06168     6C 00 90 ED |  if_be	jmp	#LR__0257
0616c                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + y) - currPeriod[channel]
0616c     3E 5F 02 F6 | 	mov	arg01, local09
06170     B8 FB 05 F1 | 	add	objptr, #440
06174     FD 80 C2 FA | 	rdbyte	local11, objptr
06178     40 5F 02 F1 | 	add	arg01, local11
0617c                 | ' 
0617c                 | '   return word[@periodTable][noteNumber]
0617c     06 00 00 FF 
06180     A4 14 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
06184     01 5E 66 F0 | 	shl	arg01, #1
06188     0A 5F 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
0618c     2F 19 E2 FA | 	rdword	result1, arg01
06190     06 00 00 FF 
06194     A4 14 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
06198     0C 77 02 F6 | 	mov	local06, result1
0619c     36 79 02 F6 | 	mov	local07, local01
061a0     02 78 66 F0 | 	shl	local07, #2
061a4     D9 FA 85 F1 | 	sub	objptr, #217
061a8     FD 80 02 F6 | 	mov	local11, objptr
061ac     FD 78 02 F1 | 	add	local07, objptr
061b0     3B 7F 02 F6 | 	mov	local10, local06
061b4     3C 83 02 FB | 	rdlong	local12, local07
061b8     41 7F 82 F1 | 	sub	local10, local12
061bc     36 85 02 F6 | 	mov	local13, local01
061c0     02 84 66 F0 | 	shl	local13, #2
061c4     10 FA 05 F1 | 	add	objptr, #16
061c8     FD 86 02 F6 | 	mov	local14, objptr
061cc     FD 84 02 F1 | 	add	local13, objptr
061d0     42 7F 62 FC | 	wrlong	local10, local13
061d4     EF FA 85 F1 | 	sub	objptr, #239
061d8                 | LR__0257
061d8                 | '         if arpCounter == 0 and (x + y) > 0
061d8     00 74 0E F2 | 	cmp	local05, #0 wz
061dc     AC 01 90 5D |  if_ne	jmp	#LR__0269
061e0     B7 FB 05 F1 | 	add	objptr, #439
061e4     FD 7E C2 FA | 	rdbyte	local10, objptr
061e8     01 FA 05 F1 | 	add	objptr, #1
061ec     FD 80 C2 FA | 	rdbyte	local11, objptr
061f0     B8 FB 85 F1 | 	sub	objptr, #440
061f4     40 7F 02 F1 | 	add	local10, local11
061f8     00 7E 5E F2 | 	cmps	local10, #0 wcz
061fc     8C 01 90 ED |  if_be	jmp	#LR__0269
06200                 | '           deltaPeriod[channel] := 0
06200     02 6C 66 F0 | 	shl	local01, #2
06204     EF FA 05 F1 | 	add	objptr, #239
06208     FD 6C 02 F1 | 	add	local01, objptr
0620c     36 01 68 FC | 	wrlong	#0, local01
06210     EF FA 85 F1 | 	sub	objptr, #239
06214     74 01 90 FD | 	jmp	#LR__0269
06218                 | LR__0258
06218                 | ' 
06218                 | '     $4:                                 ' Vibrato
06218                 | '       if x > 0
06218     B7 FB 05 F1 | 	add	objptr, #439
0621c     FD 7E C2 FA | 	rdbyte	local10, objptr
06220     B7 FB 85 F1 | 	sub	objptr, #439
06224     00 7E 5E F2 | 	cmps	local10, #0 wcz
06228     1C 00 90 ED |  if_be	jmp	#LR__0259
0622c                 | '         cmd4_memoryX[channel] := x
0622c     36 7F 02 F6 | 	mov	local10, local01
06230     D0 FB 05 F1 | 	add	objptr, #464
06234     FD 7E 02 F1 | 	add	local10, objptr
06238     19 FA 85 F1 | 	sub	objptr, #25
0623c     FD 78 C2 FA | 	rdbyte	local07, objptr
06240     B7 FB 85 F1 | 	sub	objptr, #439
06244     3F 79 42 FC | 	wrbyte	local07, local10
06248                 | LR__0259
06248                 | '       if y > 0
06248     B8 FB 05 F1 | 	add	objptr, #440
0624c     FD 7E C2 FA | 	rdbyte	local10, objptr
06250     B8 FB 85 F1 | 	sub	objptr, #440
06254     00 7E 5E F2 | 	cmps	local10, #0 wcz
06258     1C 00 90 ED |  if_be	jmp	#LR__0260
0625c                 | '         cmd4_memoryY[channel] := y
0625c     36 7F 02 F6 | 	mov	local10, local01
06260     CC FB 05 F1 | 	add	objptr, #460
06264     FD 7E 02 F1 | 	add	local10, objptr
06268     14 FA 85 F1 | 	sub	objptr, #20
0626c     FD 78 C2 FA | 	rdbyte	local07, objptr
06270     B8 FB 85 F1 | 	sub	objptr, #440
06274     3F 79 42 FC | 	wrbyte	local07, local10
06278                 | LR__0260
06278                 | ' 
06278                 | '       doVibrato(channel)
06278     36 5F 02 F6 | 	mov	arg01, local01
0627c     7C 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
06280     08 01 90 FD | 	jmp	#LR__0269
06284                 | LR__0261
06284                 | ' 
06284                 | '     $6: doVibrato(channel)              ' Volume slide + Vibrato
06284     36 5F 02 F6 | 	mov	arg01, local01
06288     70 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
0628c     FC 00 90 FD | 	jmp	#LR__0269
06290                 | LR__0262
06290                 | ' 
06290                 | '     $E:
06290                 | '       if x == $C                        ' Cut note after Y ticks
06290     B7 FB 05 F1 | 	add	objptr, #439
06294     FD 7E C2 FA | 	rdbyte	local10, objptr
06298     B7 FB 85 F1 | 	sub	objptr, #439
0629c     0C 7E 0E F2 | 	cmp	local10, #12 wz
062a0     34 00 90 5D |  if_ne	jmp	#LR__0263
062a4                 | '         if tickcounter == y
062a4     A1 FA 05 F1 | 	add	objptr, #161
062a8     FD 7E C2 FA | 	rdbyte	local10, objptr
062ac     17 FB 05 F1 | 	add	objptr, #279
062b0     FD 78 C2 FA | 	rdbyte	local07, objptr
062b4     B8 FB 85 F1 | 	sub	objptr, #440
062b8     3C 7F 0A F2 | 	cmp	local10, local07 wz
062bc     CC 00 90 5D |  if_ne	jmp	#LR__0268
062c0                 | '           currVolume[channel] := 0
062c0     02 6C 66 F0 | 	shl	local01, #2
062c4     FF FA 05 F1 | 	add	objptr, #255
062c8     FD 6C 02 F1 | 	add	local01, objptr
062cc     36 01 68 FC | 	wrlong	#0, local01
062d0     FF FA 85 F1 | 	sub	objptr, #255
062d4     B4 00 90 FD | 	jmp	#LR__0268
062d8                 | LR__0263
062d8                 | ' 
062d8                 | '       elseif x == $D                    ' Delay note Y ticks
062d8     B7 FB 05 F1 | 	add	objptr, #439
062dc     FD 7E C2 FA | 	rdbyte	local10, objptr
062e0     B7 FB 85 F1 | 	sub	objptr, #439
062e4     0D 7E 0E F2 | 	cmp	local10, #13 wz
062e8     A0 00 90 5D |  if_ne	jmp	#LR__0267
062ec                 | '         if tickcounter == y
062ec     A1 FA 05 F1 | 	add	objptr, #161
062f0     FD 7E C2 FA | 	rdbyte	local10, objptr
062f4     17 FB 05 F1 | 	add	objptr, #279
062f8     FD 78 C2 FA | 	rdbyte	local07, objptr
062fc     B8 FB 85 F1 | 	sub	objptr, #440
06300     3C 7F 0A F2 | 	cmp	local10, local07 wz
06304     0C 00 90 5D |  if_ne	jmp	#LR__0264
06308                 | '           triggerNote(channel)
06308     36 5F 02 F6 | 	mov	arg01, local01
0630c     F8 EF BF FD | 	call	#_trackerplayer_spin2_triggerNote
06310     78 00 90 FD | 	jmp	#LR__0266
06314                 | LR__0264
06314                 | '         ' Do a "bugged trigger" if y >= currentSongSpeed
06314                 | '         elseif (y >= currentSongSpeed) and tickcounter == (currentSongSpeed - 1)
06314     B8 FB 05 F1 | 	add	objptr, #440
06318     FD 7E C2 FA | 	rdbyte	local10, objptr
0631c     14 FB 85 F1 | 	sub	objptr, #276
06320     FD 78 C2 FA | 	rdbyte	local07, objptr
06324     A4 FA 85 F1 | 	sub	objptr, #164
06328     3C 7F 5A F2 | 	cmps	local10, local07 wcz
0632c     5C 00 90 CD |  if_b	jmp	#LR__0265
06330     A4 FA 05 F1 | 	add	objptr, #164
06334     FD 84 C2 FA | 	rdbyte	local13, objptr
06338     42 83 02 F6 | 	mov	local12, local13
0633c     01 82 86 F1 | 	sub	local12, #1
06340     03 FA 85 F1 | 	sub	objptr, #3
06344     FD 88 C2 FA | 	rdbyte	local15, objptr
06348     A1 FA 85 F1 | 	sub	objptr, #161
0634c     44 87 02 F6 | 	mov	local14, local15
06350     41 87 0A F2 | 	cmp	local14, local12 wz
06354     34 00 90 5D |  if_ne	jmp	#LR__0265
06358                 | '           currPeriod[channel] := lastSetPeriod[channel] ' Only set period, don't trigger a sample playback
06358     36 7F 02 F6 | 	mov	local10, local01
0635c     02 7E 66 F0 | 	shl	local10, #2
06360     27 FB 05 F1 | 	add	objptr, #295
06364     FD 76 02 F6 | 	mov	local06, objptr
06368     FD 7E 02 F1 | 	add	local10, objptr
0636c     36 79 02 F6 | 	mov	local07, local01
06370     02 78 66 F0 | 	shl	local07, #2
06374     48 FA 85 F1 | 	sub	objptr, #72
06378     FD 80 02 F6 | 	mov	local11, objptr
0637c     3F 83 02 FB | 	rdlong	local12, local10
06380     40 79 02 F1 | 	add	local07, local11
06384     3C 83 62 FC | 	wrlong	local12, local07
06388     DF FA 85 F1 | 	sub	objptr, #223
0638c                 | LR__0265
0638c                 | LR__0266
0638c                 | LR__0267
0638c                 | LR__0268
0638c                 | LR__0269
0638c     AF F0 03 F6 | 	mov	ptra, fp
06390     BA 00 A0 FD | 	call	#popregs_
06394                 | _trackerplayer_spin2_handleEveryTickCommands_ret
06394     2D 00 64 FD | 	ret
06398                 | 
06398                 | ' 
06398                 | ' 
06398                 | ' PRI doTremolo(channel) | depth, sineWave, speed
06398                 | _trackerplayer_spin2_doTremolo
06398     2F 1F 02 F6 | 	mov	_var01, arg01
0639c                 | ' 
0639c                 | '   sineWave := long[@vibratoWaveform][tremoloPos[channel]]
0639c     05 00 00 FF 
063a0     A4 15 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
063a4     0A 21 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
063a8     0F 23 02 F6 | 	mov	_var03, _var01
063ac     8B FB 05 F1 | 	add	objptr, #395
063b0     FD 22 02 F1 | 	add	_var03, objptr
063b4     11 25 C2 FA | 	rdbyte	_var04, _var03
063b8     02 24 66 F0 | 	shl	_var04, #2
063bc     10 25 02 F1 | 	add	_var04, _var02
063c0     12 27 02 FB | 	rdlong	_var05, _var04
063c4                 | '   depth    := cmd7_memoryY[channel]
063c4     0F 29 02 F6 | 	mov	_var06, _var01
063c8     49 FA 05 F1 | 	add	objptr, #73
063cc     FD 28 02 F1 | 	add	_var06, objptr
063d0     14 2B C2 FA | 	rdbyte	_var07, _var06
063d4                 | '   speed    := cmd7_memoryX[channel]
063d4     0F 29 02 F6 | 	mov	_var06, _var01
063d8     04 FA 05 F1 | 	add	objptr, #4
063dc     FD 28 02 F1 | 	add	_var06, objptr
063e0     14 2D C2 FA | 	rdbyte	_var08, _var06
063e4                 | ' 
063e4                 | '   CASE_FAST vibratoType[channel]
063e4     0F 23 02 F6 | 	mov	_var03, _var01
063e8     18 FA 85 F1 | 	sub	objptr, #24
063ec     FD 2E 02 F6 | 	mov	_var09, objptr
063f0     FD 22 02 F1 | 	add	_var03, objptr
063f4     11 29 C2 FA | 	rdbyte	_var06, _var03
063f8     03 28 26 F3 | 	fle	_var06, #3
063fc     14 31 02 F6 | 	mov	_var10, _var06
06400     05 00 00 FF 
06404     A4 15 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
06408     C0 FB 85 F1 | 	sub	objptr, #448
0640c     30 30 62 FD | 	jmprel	_var10
06410                 | LR__0270
06410     0C 00 90 FD | 	jmp	#LR__0271
06414     30 00 90 FD | 	jmp	#LR__0272
06418     6C 00 90 FD | 	jmp	#LR__0273
0641c     B4 00 90 FD | 	jmp	#LR__0274
06420                 | LR__0271
06420                 | ' 
06420                 | '     0: deltaVolume[channel] := (depth * sineWave) SAR 6                                 ' Sine wave
06420     13 2B 02 FD | 	qmul	_var07, _var05
06424     18 24 62 FD | 	getqx	_var04
06428     06 24 C6 F0 | 	sar	_var04, #6
0642c     0F 33 02 F6 | 	mov	_var11, _var01
06430     02 32 66 F0 | 	shl	_var11, #2
06434     0F FB 05 F1 | 	add	objptr, #271
06438     FD 32 02 F1 | 	add	_var11, objptr
0643c     19 25 62 FC | 	wrlong	_var04, _var11
06440     0F FB 85 F1 | 	sub	objptr, #271
06444     8C 00 90 FD | 	jmp	#LR__0274
06448                 | LR__0272
06448                 | '     1: deltaVolume[channel] := (depth * (tremoloPos[channel] << 3) - 256) SAR 6         ' Ramp down wave
06448     0F 33 02 F6 | 	mov	_var11, _var01
0644c     8B FB 05 F1 | 	add	objptr, #395
06450     FD 32 02 F1 | 	add	_var11, objptr
06454     19 21 C2 FA | 	rdbyte	_var02, _var11
06458     03 20 66 F0 | 	shl	_var02, #3
0645c     10 2B 02 FD | 	qmul	_var07, _var02
06460     18 24 62 FD | 	getqx	_var04
06464     00 25 86 F1 | 	sub	_var04, #256
06468     06 24 C6 F0 | 	sar	_var04, #6
0646c     0F 35 02 F6 | 	mov	_var12, _var01
06470     02 34 66 F0 | 	shl	_var12, #2
06474     7C FA 85 F1 | 	sub	objptr, #124
06478     FD 34 02 F1 | 	add	_var12, objptr
0647c     1A 25 62 FC | 	wrlong	_var04, _var12
06480     0F FB 85 F1 | 	sub	objptr, #271
06484     4C 00 90 FD | 	jmp	#LR__0274
06488                 | LR__0273
06488                 | '     2: deltaVolume[channel] := (depth * ((tremoloPos[channel] & 32) << 4) - 256) SAR 6  ' Square wave
06488     0F 33 02 F6 | 	mov	_var11, _var01
0648c     8B FB 05 F1 | 	add	objptr, #395
06490     FD 36 02 F6 | 	mov	_var13, objptr
06494     FD 32 02 F1 | 	add	_var11, objptr
06498     19 21 C2 FA | 	rdbyte	_var02, _var11
0649c     20 20 06 F5 | 	and	_var02, #32
064a0     04 20 66 F0 | 	shl	_var02, #4
064a4     10 2B 02 FD | 	qmul	_var07, _var02
064a8     18 38 62 FD | 	getqx	_var14
064ac     1C 25 02 F6 | 	mov	_var04, _var14
064b0     00 25 86 F1 | 	sub	_var04, #256
064b4     06 24 C6 F0 | 	sar	_var04, #6
064b8     0F 35 02 F6 | 	mov	_var12, _var01
064bc     02 34 66 F0 | 	shl	_var12, #2
064c0     7C FA 85 F1 | 	sub	objptr, #124
064c4     FD 3A 02 F6 | 	mov	_var15, objptr
064c8     FD 34 02 F1 | 	add	_var12, objptr
064cc     1A 25 62 FC | 	wrlong	_var04, _var12
064d0     0F FB 85 F1 | 	sub	objptr, #271
064d4                 | LR__0274
064d4                 | ' 
064d4                 | '   tremoloPos[channel] := (tremoloPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
064d4     0F 23 02 F6 | 	mov	_var03, _var01
064d8     8B FB 05 F1 | 	add	objptr, #395
064dc     FD 22 02 F1 | 	add	_var03, objptr
064e0     11 29 C2 FA | 	rdbyte	_var06, _var03
064e4     16 29 02 F1 | 	add	_var06, _var08
064e8     3F 28 06 F5 | 	and	_var06, #63
064ec     FD 1E 02 F1 | 	add	_var01, objptr
064f0     0F 29 42 FC | 	wrbyte	_var06, _var01
064f4     8B FB 85 F1 | 	sub	objptr, #395
064f8                 | _trackerplayer_spin2_doTremolo_ret
064f8     2D 00 64 FD | 	ret
064fc                 | 
064fc                 | ' 
064fc                 | ' 
064fc                 | ' PRI doVibrato(channel) | depth, sineWave, speed
064fc                 | _trackerplayer_spin2_doVibrato
064fc     2F 1F 02 F6 | 	mov	_var01, arg01
06500                 | ' 
06500                 | '   sineWave := long[@vibratoWaveform][vibratoPos[channel]]
06500     05 00 00 FF 
06504     A4 15 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
06508     0A 21 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
0650c     0F 23 02 F6 | 	mov	_var03, _var01
06510     87 FB 05 F1 | 	add	objptr, #391
06514     FD 22 02 F1 | 	add	_var03, objptr
06518     11 25 C2 FA | 	rdbyte	_var04, _var03
0651c     02 24 66 F0 | 	shl	_var04, #2
06520     10 25 02 F1 | 	add	_var04, _var02
06524     12 27 02 FB | 	rdlong	_var05, _var04
06528                 | '   depth    := cmd4_memoryY[channel]
06528     0F 29 02 F6 | 	mov	_var06, _var01
0652c     45 FA 05 F1 | 	add	objptr, #69
06530     FD 28 02 F1 | 	add	_var06, objptr
06534     14 2B C2 FA | 	rdbyte	_var07, _var06
06538                 | '   speed    := cmd4_memoryX[channel]
06538     0F 29 02 F6 | 	mov	_var06, _var01
0653c     04 FA 05 F1 | 	add	objptr, #4
06540     FD 28 02 F1 | 	add	_var06, objptr
06544     14 2D C2 FA | 	rdbyte	_var08, _var06
06548                 | ' 
06548                 | '   CASE_FAST vibratoType[channel]
06548     0F 23 02 F6 | 	mov	_var03, _var01
0654c     10 FA 85 F1 | 	sub	objptr, #16
06550     FD 2E 02 F6 | 	mov	_var09, objptr
06554     FD 22 02 F1 | 	add	_var03, objptr
06558     11 29 C2 FA | 	rdbyte	_var06, _var03
0655c     03 28 26 F3 | 	fle	_var06, #3
06560     14 31 02 F6 | 	mov	_var10, _var06
06564     05 00 00 FF 
06568     A4 15 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
0656c     C0 FB 85 F1 | 	sub	objptr, #448
06570     30 30 62 FD | 	jmprel	_var10
06574                 | LR__0275
06574     0C 00 90 FD | 	jmp	#LR__0276
06578     30 00 90 FD | 	jmp	#LR__0277
0657c     6C 00 90 FD | 	jmp	#LR__0278
06580     B4 00 90 FD | 	jmp	#LR__0279
06584                 | LR__0276
06584                 | ' 
06584                 | '     0: deltaPeriod[channel] := (depth * sineWave) SAR 7                                 ' Sine wave
06584     13 2B 02 FD | 	qmul	_var07, _var05
06588     18 24 62 FD | 	getqx	_var04
0658c     07 24 C6 F0 | 	sar	_var04, #7
06590     0F 33 02 F6 | 	mov	_var11, _var01
06594     02 32 66 F0 | 	shl	_var11, #2
06598     EF FA 05 F1 | 	add	objptr, #239
0659c     FD 32 02 F1 | 	add	_var11, objptr
065a0     19 25 62 FC | 	wrlong	_var04, _var11
065a4     EF FA 85 F1 | 	sub	objptr, #239
065a8     8C 00 90 FD | 	jmp	#LR__0279
065ac                 | LR__0277
065ac                 | '     1: deltaPeriod[channel] := (depth * (vibratoPos[channel] << 3) - 256) SAR 7         ' Ramp down wave
065ac     0F 33 02 F6 | 	mov	_var11, _var01
065b0     87 FB 05 F1 | 	add	objptr, #391
065b4     FD 32 02 F1 | 	add	_var11, objptr
065b8     19 21 C2 FA | 	rdbyte	_var02, _var11
065bc     03 20 66 F0 | 	shl	_var02, #3
065c0     10 2B 02 FD | 	qmul	_var07, _var02
065c4     18 24 62 FD | 	getqx	_var04
065c8     00 25 86 F1 | 	sub	_var04, #256
065cc     07 24 C6 F0 | 	sar	_var04, #7
065d0     0F 35 02 F6 | 	mov	_var12, _var01
065d4     02 34 66 F0 | 	shl	_var12, #2
065d8     98 FA 85 F1 | 	sub	objptr, #152
065dc     FD 34 02 F1 | 	add	_var12, objptr
065e0     1A 25 62 FC | 	wrlong	_var04, _var12
065e4     EF FA 85 F1 | 	sub	objptr, #239
065e8     4C 00 90 FD | 	jmp	#LR__0279
065ec                 | LR__0278
065ec                 | '     2: deltaPeriod[channel] := (depth * ((vibratoPos[channel] & 32) << 4) - 256) SAR 7  ' Square wave
065ec     0F 33 02 F6 | 	mov	_var11, _var01
065f0     87 FB 05 F1 | 	add	objptr, #391
065f4     FD 36 02 F6 | 	mov	_var13, objptr
065f8     FD 32 02 F1 | 	add	_var11, objptr
065fc     19 21 C2 FA | 	rdbyte	_var02, _var11
06600     20 20 06 F5 | 	and	_var02, #32
06604     04 20 66 F0 | 	shl	_var02, #4
06608     10 2B 02 FD | 	qmul	_var07, _var02
0660c     18 38 62 FD | 	getqx	_var14
06610     1C 25 02 F6 | 	mov	_var04, _var14
06614     00 25 86 F1 | 	sub	_var04, #256
06618     07 24 C6 F0 | 	sar	_var04, #7
0661c     0F 35 02 F6 | 	mov	_var12, _var01
06620     02 34 66 F0 | 	shl	_var12, #2
06624     98 FA 85 F1 | 	sub	objptr, #152
06628     FD 3A 02 F6 | 	mov	_var15, objptr
0662c     FD 34 02 F1 | 	add	_var12, objptr
06630     1A 25 62 FC | 	wrlong	_var04, _var12
06634     EF FA 85 F1 | 	sub	objptr, #239
06638                 | LR__0279
06638                 | ' 
06638                 | '   vibratoPos[channel] := (vibratoPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
06638     0F 23 02 F6 | 	mov	_var03, _var01
0663c     87 FB 05 F1 | 	add	objptr, #391
06640     FD 22 02 F1 | 	add	_var03, objptr
06644     11 29 C2 FA | 	rdbyte	_var06, _var03
06648     16 29 02 F1 | 	add	_var06, _var08
0664c     3F 28 06 F5 | 	and	_var06, #63
06650     FD 1E 02 F1 | 	add	_var01, objptr
06654     0F 29 42 FC | 	wrbyte	_var06, _var01
06658     87 FB 85 F1 | 	sub	objptr, #391
0665c                 | _trackerplayer_spin2_doVibrato_ret
0665c     2D 00 64 FD | 	ret
06660                 | 
06660                 | ' 
06660                 | ' 
06660                 | ' PRI doPortamento(channel, period) | i, j, periodStep, tempPeriod
06660                 | _trackerplayer_spin2_doPortamento
06660                 | ' 
06660                 | '   if period == currPeriod[channel]
06660     2F 1F 02 F6 | 	mov	_var01, arg01
06664     02 1E 66 F0 | 	shl	_var01, #2
06668     DF FA 05 F1 | 	add	objptr, #223
0666c     FD 20 02 F6 | 	mov	_var02, objptr
06670     FD 1E 02 F1 | 	add	_var01, objptr
06674     0F 23 02 FB | 	rdlong	_var03, _var01
06678     11 61 0A F2 | 	cmp	arg02, _var03 wz
0667c                 | '     return
0667c     DF FA 85 F1 | 	sub	objptr, #223
06680     04 02 90 AD |  if_e	jmp	#_trackerplayer_spin2_doPortamento_ret
06684                 | ' 
06684                 | '   if period > 0
06684     00 60 5E F2 | 	cmps	arg02, #0 wcz
06688     1C 00 90 ED |  if_be	jmp	#LR__0280
0668c                 | '     portamentoPeriodMemory[channel] := period
0668c     2F 1F 02 F6 | 	mov	_var01, arg01
06690     02 1E 66 F0 | 	shl	_var01, #2
06694     97 FB 05 F1 | 	add	objptr, #407
06698     FD 1E 02 F1 | 	add	_var01, objptr
0669c     0F 61 62 FC | 	wrlong	arg02, _var01
066a0                 | '   else
066a0     97 FB 85 F1 | 	sub	objptr, #407
066a4     18 00 90 FD | 	jmp	#LR__0281
066a8                 | LR__0280
066a8                 | '     period := portamentoPeriodMemory[channel]
066a8     2F 1F 02 F6 | 	mov	_var01, arg01
066ac     02 1E 66 F0 | 	shl	_var01, #2
066b0     97 FB 05 F1 | 	add	objptr, #407
066b4     FD 1E 02 F1 | 	add	_var01, objptr
066b8     0F 61 02 FB | 	rdlong	arg02, _var01
066bc     97 FB 85 F1 | 	sub	objptr, #407
066c0                 | LR__0281
066c0                 | ' 
066c0                 | '   if period > currPeriod[channel]
066c0     2F 1F 02 F6 | 	mov	_var01, arg01
066c4     02 1E 66 F0 | 	shl	_var01, #2
066c8     DF FA 05 F1 | 	add	objptr, #223
066cc     FD 1E 02 F1 | 	add	_var01, objptr
066d0     0F 23 02 FB | 	rdlong	_var03, _var01
066d4     11 61 5A F2 | 	cmps	arg02, _var03 wcz
066d8     DF FA 85 F1 | 	sub	objptr, #223
066dc     68 00 90 ED |  if_be	jmp	#LR__0282
066e0                 | '     currPeriod[channel] += cmd3_memoryZ[channel]
066e0     2F 21 02 F6 | 	mov	_var02, arg01
066e4     02 20 66 F0 | 	shl	_var02, #2
066e8     DF FA 05 F1 | 	add	objptr, #223
066ec     FD 20 02 F1 | 	add	_var02, objptr
066f0     2F 25 02 F6 | 	mov	_var04, arg01
066f4     E9 FA 05 F1 | 	add	objptr, #233
066f8     10 1F 02 FB | 	rdlong	_var01, _var02
066fc     FD 24 02 F1 | 	add	_var04, objptr
06700     12 27 C2 FA | 	rdbyte	_var05, _var04
06704     13 1F 02 F1 | 	add	_var01, _var05
06708     2F 29 02 F6 | 	mov	_var06, arg01
0670c     02 28 66 F0 | 	shl	_var06, #2
06710     E9 FA 85 F1 | 	sub	objptr, #233
06714     FD 28 02 F1 | 	add	_var06, objptr
06718     14 1F 62 FC | 	wrlong	_var01, _var06
0671c                 | '     currPeriod[channel] <#= period
0671c     2F 21 02 F6 | 	mov	_var02, arg01
06720     02 20 66 F0 | 	shl	_var02, #2
06724     FD 20 02 F1 | 	add	_var02, objptr
06728     10 1F 02 FB | 	rdlong	_var01, _var02
0672c     30 1F 62 F3 | 	fles	_var01, arg02
06730     2F 25 02 F6 | 	mov	_var04, arg01
06734     02 24 66 F0 | 	shl	_var04, #2
06738     FD 24 02 F1 | 	add	_var04, objptr
0673c     12 1F 62 FC | 	wrlong	_var01, _var04
06740     DF FA 85 F1 | 	sub	objptr, #223
06744     84 00 90 FD | 	jmp	#LR__0284
06748                 | LR__0282
06748                 | ' 
06748                 | '   elseif period < currPeriod[channel]
06748     2F 1F 02 F6 | 	mov	_var01, arg01
0674c     02 1E 66 F0 | 	shl	_var01, #2
06750     DF FA 05 F1 | 	add	objptr, #223
06754     FD 1E 02 F1 | 	add	_var01, objptr
06758     0F 23 02 FB | 	rdlong	_var03, _var01
0675c     11 61 5A F2 | 	cmps	arg02, _var03 wcz
06760     DF FA 85 F1 | 	sub	objptr, #223
06764     64 00 90 3D |  if_ae	jmp	#LR__0283
06768                 | '     currPeriod[channel] -= cmd3_memoryZ[channel]
06768     2F 21 02 F6 | 	mov	_var02, arg01
0676c     02 20 66 F0 | 	shl	_var02, #2
06770     DF FA 05 F1 | 	add	objptr, #223
06774     FD 20 02 F1 | 	add	_var02, objptr
06778     2F 25 02 F6 | 	mov	_var04, arg01
0677c     E9 FA 05 F1 | 	add	objptr, #233
06780     10 1F 02 FB | 	rdlong	_var01, _var02
06784     FD 24 02 F1 | 	add	_var04, objptr
06788     12 27 C2 FA | 	rdbyte	_var05, _var04
0678c     13 1F 82 F1 | 	sub	_var01, _var05
06790     2F 29 02 F6 | 	mov	_var06, arg01
06794     02 28 66 F0 | 	shl	_var06, #2
06798     E9 FA 85 F1 | 	sub	objptr, #233
0679c     FD 28 02 F1 | 	add	_var06, objptr
067a0     14 1F 62 FC | 	wrlong	_var01, _var06
067a4                 | '     currPeriod[channel] #>= period
067a4     2F 21 02 F6 | 	mov	_var02, arg01
067a8     02 20 66 F0 | 	shl	_var02, #2
067ac     FD 20 02 F1 | 	add	_var02, objptr
067b0     10 1F 02 FB | 	rdlong	_var01, _var02
067b4     30 1F 42 F3 | 	fges	_var01, arg02
067b8     2F 25 02 F6 | 	mov	_var04, arg01
067bc     02 24 66 F0 | 	shl	_var04, #2
067c0     FD 24 02 F1 | 	add	_var04, objptr
067c4     12 1F 62 FC | 	wrlong	_var01, _var04
067c8     DF FA 85 F1 | 	sub	objptr, #223
067cc                 | LR__0283
067cc                 | LR__0284
067cc                 | ' 
067cc                 | '   ' Handle glissando if activated
067cc                 | '   if portaGlissando[channel] > 0
067cc     2F 1F 02 F6 | 	mov	_var01, arg01
067d0     BC FB 05 F1 | 	add	objptr, #444
067d4     FD 1E 02 F1 | 	add	_var01, objptr
067d8     0F 23 C2 FA | 	rdbyte	_var03, _var01
067dc     00 22 5E F2 | 	cmps	_var03, #0 wcz
067e0     BC FB 85 F1 | 	sub	objptr, #444
067e4     A0 00 90 ED |  if_be	jmp	#LR__0287
067e8                 | ' 
067e8                 | '     tempPeriod := currPeriod[channel]
067e8     2F 1F 02 F6 | 	mov	_var01, arg01
067ec     02 1E 66 F0 | 	shl	_var01, #2
067f0     DF FA 05 F1 | 	add	objptr, #223
067f4     FD 1E 02 F1 | 	add	_var01, objptr
067f8     0F 2B 02 FB | 	rdlong	_var07, _var01
067fc                 | ' 
067fc                 | '     repeat i from 0 to LAST_POS_IN_PERIOD_TBL
067fc     00 2C 06 F6 | 	mov	_var08, #0
06800     DF FA 85 F1 | 	sub	objptr, #223
06804     5C 98 9F FE | 	loc	pa,	#(@LR__0286-@LR__0285)
06808     93 00 A0 FD | 	call	#FCACHE_LOAD_
0680c                 | LR__0285
0680c                 | ' 
0680c                 | '       periodStep := word[@periodTable + (currFineTune[channel] * BYTES_IN_PERIOD_TABLE)][i]
0680c     06 00 00 FF 
06810     A4 14 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
06814     0A 2F 02 F6 | 	mov	_var09, ptr__trackerplayer_spin2_dat__
06818     2F 23 02 F6 | 	mov	_var03, arg01
0681c     D3 FA 05 F1 | 	add	objptr, #211
06820     FD 22 02 F1 | 	add	_var03, objptr
06824     11 27 C2 FA | 	rdbyte	_var05, _var03
06828     13 31 02 F6 | 	mov	_var10, _var05
0682c     03 30 66 F0 | 	shl	_var10, #3
06830     13 31 02 F1 | 	add	_var10, _var05
06834     03 30 66 F0 | 	shl	_var10, #3
06838     18 2F 02 F1 | 	add	_var09, _var10
0683c     16 33 02 F6 | 	mov	_var11, _var08
06840     01 32 66 F0 | 	shl	_var11, #1
06844     17 33 02 F1 | 	add	_var11, _var09
06848     19 35 E2 FA | 	rdword	_var12, _var11
0684c                 | '       if tempPeriod >= periodStep
0684c     1A 2B 5A F2 | 	cmps	_var07, _var12 wcz
06850                 | '         i += 1000
06850     06 00 00 FF 
06854     A4 14 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
06858     D3 FA 85 F1 | 	sub	objptr, #211
0685c     01 00 00 3F 
06860     E8 2D 06 31 |  if_ae	add	_var08, ##1000
06864     01 2C 06 F1 | 	add	_var08, #1
06868     24 2C 5E F2 | 	cmps	_var08, #36 wcz
0686c     9C FF 9F CD |  if_b	jmp	#LR__0285
06870                 | LR__0286
06870                 | ' 
06870                 | '     deltaPeriod[channel] := periodStep - tempPeriod
06870     15 35 82 F1 | 	sub	_var12, _var07
06874     02 5E 66 F0 | 	shl	arg01, #2
06878     EF FA 05 F1 | 	add	objptr, #239
0687c     FD 5E 02 F1 | 	add	arg01, objptr
06880     2F 35 62 FC | 	wrlong	_var12, arg01
06884     EF FA 85 F1 | 	sub	objptr, #239
06888                 | LR__0287
06888                 | _trackerplayer_spin2_doPortamento_ret
06888     2D 00 64 FD | 	ret
0688c                 | 
0688c                 | ' 
0688c                 | ' 
0688c                 | ' PRI doVolumeSlide(channel)
0688c                 | _trackerplayer_spin2_doVolumeSlide
0688c                 | ' 
0688c                 | '   if x > 0
0688c     B7 FB 05 F1 | 	add	objptr, #439
06890     FD 1E C2 FA | 	rdbyte	_var01, objptr
06894     B7 FB 85 F1 | 	sub	objptr, #439
06898     00 1E 5E F2 | 	cmps	_var01, #0 wcz
0689c     38 00 90 ED |  if_be	jmp	#LR__0288
068a0                 | '     currVolume[channel] += x
068a0     2F 21 02 F6 | 	mov	_var02, arg01
068a4     02 20 66 F0 | 	shl	_var02, #2
068a8     FF FA 05 F1 | 	add	objptr, #255
068ac     FD 20 02 F1 | 	add	_var02, objptr
068b0     10 1F 02 FB | 	rdlong	_var01, _var02
068b4     B8 FA 05 F1 | 	add	objptr, #184
068b8     FD 22 C2 FA | 	rdbyte	_var03, objptr
068bc     11 1F 02 F1 | 	add	_var01, _var03
068c0     2F 25 02 F6 | 	mov	_var04, arg01
068c4     02 24 66 F0 | 	shl	_var04, #2
068c8     B8 FA 85 F1 | 	sub	objptr, #184
068cc     FD 24 02 F1 | 	add	_var04, objptr
068d0     12 1F 62 FC | 	wrlong	_var01, _var04
068d4     FF FA 85 F1 | 	sub	objptr, #255
068d8                 | LR__0288
068d8                 | '   if y > 0
068d8     B8 FB 05 F1 | 	add	objptr, #440
068dc     FD 1E C2 FA | 	rdbyte	_var01, objptr
068e0     B8 FB 85 F1 | 	sub	objptr, #440
068e4     00 1E 5E F2 | 	cmps	_var01, #0 wcz
068e8     34 00 90 ED |  if_be	jmp	#LR__0289
068ec                 | '     currVolume[channel] -= y
068ec     2F 21 02 F6 | 	mov	_var02, arg01
068f0     02 20 66 F0 | 	shl	_var02, #2
068f4     FF FA 05 F1 | 	add	objptr, #255
068f8     FD 20 02 F1 | 	add	_var02, objptr
068fc     10 1F 02 FB | 	rdlong	_var01, _var02
06900     B9 FA 05 F1 | 	add	objptr, #185
06904     FD 22 C2 FA | 	rdbyte	_var03, objptr
06908     11 1F 82 F1 | 	sub	_var01, _var03
0690c     02 5E 66 F0 | 	shl	arg01, #2
06910     B9 FA 85 F1 | 	sub	objptr, #185
06914     FD 5E 02 F1 | 	add	arg01, objptr
06918     2F 1F 62 FC | 	wrlong	_var01, arg01
0691c     FF FA 85 F1 | 	sub	objptr, #255
06920                 | LR__0289
06920                 | _trackerplayer_spin2_doVolumeSlide_ret
06920     2D 00 64 FD | 	ret
06924                 | 
06924                 | ' 
06924                 | ' 
06924                 | ' '--------------------------------------------------------------
06924                 | ' '---------- Init the variables, start the cog. ----------------
06924                 | ' '--------------------------------------------------------------
06924                 | ' 
06924                 | ' pub start() :cog,base | iii
06924                 | _audio019_spin2_start
06924     07 5A 05 F6 | 	mov	COUNT_, #7
06928     B0 00 A0 FD | 	call	#pushregs_
0692c                 | ' 
0692c                 | ' base:=@channel1[0]
0692c     FD 6C 02 F6 | 	mov	local01, objptr
06930                 | ' 
06930                 | ' repeat iii from 0 to 7
06930     00 6E 06 F6 | 	mov	local02, #0
06934     D4 97 9F FE | 	loc	pa,	#(@LR__0291-@LR__0290)
06938     93 00 A0 FD | 	call	#FCACHE_LOAD_
0693c                 | LR__0290
0693c                 | '   long [base+32*iii]:=0
0693c     36 71 02 F6 | 	mov	local03, local01
06940     37 73 02 F6 | 	mov	local04, local02
06944     05 72 66 F0 | 	shl	local04, #5
06948     39 71 02 F1 | 	add	local03, local04
0694c     38 01 68 FC | 	wrlong	#0, local03
06950                 | '   long [base+32*iii+4]:=0
06950     36 71 02 F6 | 	mov	local03, local01
06954     37 73 02 F6 | 	mov	local04, local02
06958     05 72 66 F0 | 	shl	local04, #5
0695c     39 71 02 F1 | 	add	local03, local04
06960     04 70 06 F1 | 	add	local03, #4
06964     38 01 68 FC | 	wrlong	#0, local03
06968                 | '   long[base+32*iii+12]:=0
06968     36 71 02 F6 | 	mov	local03, local01
0696c     37 73 02 F6 | 	mov	local04, local02
06970     05 72 66 F0 | 	shl	local04, #5
06974     39 71 02 F1 | 	add	local03, local04
06978     0C 70 06 F1 | 	add	local03, #12
0697c     38 01 68 FC | 	wrlong	#0, local03
06980                 | '   long[base+32*iii+16]:=2 
06980     36 71 02 F6 | 	mov	local03, local01
06984     37 73 02 F6 | 	mov	local04, local02
06988     05 72 66 F0 | 	shl	local04, #5
0698c     39 71 02 F1 | 	add	local03, local04
06990     10 70 06 F1 | 	add	local03, #16
06994     38 05 68 FC | 	wrlong	#2, local03
06998                 | '   word[base+32*iii+20]:=0
06998     36 71 02 F6 | 	mov	local03, local01
0699c     37 73 02 F6 | 	mov	local04, local02
069a0     05 72 66 F0 | 	shl	local04, #5
069a4     39 71 02 F1 | 	add	local03, local04
069a8     14 70 06 F1 | 	add	local03, #20
069ac     38 01 58 FC | 	wrword	#0, local03
069b0                 | '   word[base+32*iii+22]:=8192
069b0     36 71 02 F6 | 	mov	local03, local01
069b4     37 73 02 F6 | 	mov	local04, local02
069b8     05 72 66 F0 | 	shl	local04, #5
069bc     39 71 02 F1 | 	add	local03, local04
069c0     16 70 06 F1 | 	add	local03, #22
069c4     10 00 80 FF 
069c8     38 01 58 FC | 	wrword	##8192, local03
069cc                 | '   word[base+32*iii+24]:=100+2*iii
069cc     37 73 02 F6 | 	mov	local04, local02
069d0     01 72 66 F0 | 	shl	local04, #1
069d4     64 70 06 F6 | 	mov	local03, #100
069d8     39 71 02 F1 | 	add	local03, local04
069dc     36 75 02 F6 | 	mov	local05, local01
069e0     37 77 02 F6 | 	mov	local06, local02
069e4     05 76 66 F0 | 	shl	local06, #5
069e8     3B 75 02 F1 | 	add	local05, local06
069ec     18 74 06 F1 | 	add	local05, #24
069f0     3A 71 52 FC | 	wrword	local03, local05
069f4                 | '   word[base+32*iii+26]:=2
069f4     36 71 02 F6 | 	mov	local03, local01
069f8     37 73 02 F6 | 	mov	local04, local02
069fc     05 72 66 F0 | 	shl	local04, #5
06a00     39 71 02 F1 | 	add	local03, local04
06a04     1A 70 06 F1 | 	add	local03, #26
06a08     38 05 58 FC | 	wrword	#2, local03
06a0c                 | '   long [base+32*iii+8]:=@null | $C0000000
06a0c     01 00 00 FF 
06a10     F8 02 06 F1 | 	add	ptr__audio019_spin2_dat__, ##760
06a14     01 71 02 F6 | 	mov	local03, ptr__audio019_spin2_dat__
06a18     3E 70 26 F4 | 	bith	local03, #62
06a1c     36 75 02 F6 | 	mov	local05, local01
06a20     37 77 02 F6 | 	mov	local06, local02
06a24     05 76 66 F0 | 	shl	local06, #5
06a28     3B 75 02 F1 | 	add	local05, local06
06a2c     08 74 06 F1 | 	add	local05, #8
06a30     3A 71 62 FC | 	wrlong	local03, local05
06a34     01 6E 06 F1 | 	add	local02, #1
06a38     08 6E 5E F2 | 	cmps	local02, #8 wcz
06a3c     01 00 00 FF 
06a40     F8 02 86 F1 | 	sub	ptr__audio019_spin2_dat__, ##760
06a44     F4 FE 9F CD |  if_b	jmp	#LR__0290
06a48                 | LR__0291
06a48                 | '   
06a48                 | ' cog:=coginit(16,@audio,@channel1)
06a48     01 61 02 F6 | 	mov	arg02, ptr__audio019_spin2_dat__
06a4c     FD 62 02 F6 | 	mov	arg03, objptr
06a50     10 5E 06 F6 | 	mov	arg01, #16
06a54     28 62 62 FD | 	setq	arg03
06a58     30 5F F2 FC | 	coginit	arg01, arg02 wc
06a5c     01 5E 66 C6 |  if_b	neg	arg01, #1
06a60     2F 19 02 F6 | 	mov	result1, arg01
06a64     0C 79 02 F6 | 	mov	local07, result1
06a68                 | ' waitms(100)
06a68     64 5E 06 F6 | 	mov	arg01, #100
06a6c     CC 04 B0 FD | 	call	#__system___waitms
06a70                 | ' return cog,base
06a70     36 1B 02 F6 | 	mov	result2, local01
06a74     3C 19 02 F6 | 	mov	result1, local07
06a78     AF F0 03 F6 | 	mov	ptra, fp
06a7c     BA 00 A0 FD | 	call	#popregs_
06a80                 | _audio019_spin2_start_ret
06a80     2D 00 64 FD | 	ret
06a84                 | hubexit
06a84     81 00 80 FD | 	jmp	#cogexit
06a88                 | 
06a88                 | __system___setbaud
06a88     14 98 06 FB | 	rdlong	muldiva_, #20
06a8c     2F 9B 02 F6 | 	mov	muldivb_, arg01
06a90     C6 00 A0 FD | 	call	#divide_
06a94     40 7C 64 FD | 	dirl	#62
06a98     40 7E 64 FD | 	dirl	#63
06a9c     00 9B 62 FC | 	wrlong	muldivb_, ptr___system__dat__
06aa0     10 9A 66 F0 | 	shl	muldivb_, #16
06aa4     07 60 06 F6 | 	mov	arg02, #7
06aa8     4D 61 02 F1 | 	add	arg02, muldivb_
06aac     3E F8 0C FC | 	wrpin	#124, #62
06ab0     3E 60 16 FC | 	wxpin	arg02, #62
06ab4     3F 7C 0C FC | 	wrpin	#62, #63
06ab8     14 60 06 F1 | 	add	arg02, #20
06abc     3F 60 16 FC | 	wxpin	arg02, #63
06ac0     41 7C 64 FD | 	dirh	#62
06ac4     41 7E 64 FD | 	dirh	#63
06ac8                 | __system___setbaud_ret
06ac8     2D 00 64 FD | 	ret
06acc                 | 
06acc                 | __system___txraw
06acc     02 5A 05 F6 | 	mov	COUNT_, #2
06ad0     B0 00 A0 FD | 	call	#pushregs_
06ad4     2F 6D 02 F6 | 	mov	local01, arg01
06ad8     00 6F 0A FB | 	rdlong	local02, ptr___system__dat__ wz
06adc     0C 00 90 5D |  if_ne	jmp	#LR__0292
06ae0     42 0F 00 FF 
06ae4     80 5E 06 F6 | 	mov	arg01, ##2000000
06ae8     9C FF BF FD | 	call	#__system___setbaud
06aec                 | LR__0292
06aec     3E 6C 26 FC | 	wypin	local01, #62
06af0     1F 02 64 FD | 	waitx	#1
06af4     10 95 9F FE | 	loc	pa,	#(@LR__0294-@LR__0293)
06af8     93 00 A0 FD | 	call	#FCACHE_LOAD_
06afc                 | LR__0293
06afc     40 7C 74 FD | 	testp	#62 wc
06b00     F8 FF 9F 3D |  if_nc	jmp	#LR__0293
06b04                 | LR__0294
06b04     01 18 06 F6 | 	mov	result1, #1
06b08     AF F0 03 F6 | 	mov	ptra, fp
06b0c     BA 00 A0 FD | 	call	#popregs_
06b10                 | __system___txraw_ret
06b10     2D 00 64 FD | 	ret
06b14                 | 
06b14                 | __system___rxraw
06b14     0B 5A 05 F6 | 	mov	COUNT_, #11
06b18     B0 00 A0 FD | 	call	#pushregs_
06b1c     2F 6D 02 F6 | 	mov	local01, arg01
06b20     00 6F 0A FB | 	rdlong	local02, ptr___system__dat__ wz
06b24     0C 00 90 5D |  if_ne	jmp	#LR__0295
06b28     42 0F 00 FF 
06b2c     80 5E 06 F6 | 	mov	arg01, ##2000000
06b30     54 FF BF FD | 	call	#__system___setbaud
06b34                 | LR__0295
06b34     00 6C 0E F2 | 	cmp	local01, #0 wz
06b38     18 00 90 AD |  if_e	jmp	#LR__0296
06b3c     1A 70 62 FD | 	getct	local03
06b40     14 72 06 FB | 	rdlong	local04, #20
06b44     0A 72 46 F0 | 	shr	local04, #10
06b48     39 6D 02 FD | 	qmul	local01, local04
06b4c     18 74 62 FD | 	getqx	local05
06b50     3A 71 02 F1 | 	add	local03, local05
06b54                 | LR__0296
06b54     01 76 66 F6 | 	neg	local06, #1
06b58     00 78 06 F6 | 	mov	local07, #0
06b5c     04 00 06 F1 | 	add	ptr___system__dat__, #4
06b60     00 7B 02 FB | 	rdlong	local08, ptr___system__dat__
06b64     04 00 86 F1 | 	sub	ptr___system__dat__, #4
06b68                 | LR__0297
06b68     08 7A 16 F4 | 	testb	local08, #8 wc
06b6c     09 7A 76 F4 | 	testbn	local08, #9 andc
06b70     0A 7A 46 F0 | 	shr	local08, #10
06b74     01 78 06 C6 |  if_b	mov	local07, #1
06b78     10 00 90 CD |  if_b	jmp	#LR__0298
06b7c     40 7E 6C FD | 	testp	#63 wz
06b80     01 78 06 A6 |  if_e	mov	local07, #1
06b84     3F 7A 8E AA |  if_e	rdpin	local08, #63
06b88     04 7A 46 A0 |  if_e	shr	local08, #4
06b8c                 | LR__0298
06b8c     00 6E 06 F6 | 	mov	local02, #0
06b90     00 78 0E F2 | 	cmp	local07, #0 wz
06b94     01 6E 66 56 |  if_ne	neg	local02, #1
06b98     00 7C 06 F6 | 	mov	local09, #0
06b9c     00 72 06 F6 | 	mov	local04, #0
06ba0     00 6C 0E F2 | 	cmp	local01, #0 wz
06ba4     01 72 66 56 |  if_ne	neg	local04, #1
06ba8     00 74 06 F6 | 	mov	local05, #0
06bac     00 7E 06 F6 | 	mov	local10, #0
06bb0     1A 80 62 FD | 	getct	local11
06bb4     38 81 82 F1 | 	sub	local11, local03
06bb8     00 80 5E F2 | 	cmps	local11, #0 wcz
06bbc     01 7E 66 C6 |  if_b	neg	local10, #1
06bc0     00 7E 0E F2 | 	cmp	local10, #0 wz
06bc4     01 74 66 56 |  if_ne	neg	local05, #1
06bc8     3A 73 CA F7 | 	test	local04, local05 wz
06bcc     01 7C 66 56 |  if_ne	neg	local09, #1
06bd0     3E 6F 4A F5 | 	or	local02, local09 wz
06bd4     90 FF 9F AD |  if_e	jmp	#LR__0297
06bd8     00 78 0E F2 | 	cmp	local07, #0 wz
06bdc     3D 77 02 56 |  if_ne	mov	local06, local08
06be0     FF 76 06 55 |  if_ne	and	local06, #255
06be4     04 00 06 F1 | 	add	ptr___system__dat__, #4
06be8     00 7B 62 FC | 	wrlong	local08, ptr___system__dat__
06bec     04 00 86 F1 | 	sub	ptr___system__dat__, #4
06bf0     3B 19 02 F6 | 	mov	result1, local06
06bf4     AF F0 03 F6 | 	mov	ptra, fp
06bf8     BA 00 A0 FD | 	call	#popregs_
06bfc                 | __system___rxraw_ret
06bfc     2D 00 64 FD | 	ret
06c00                 | 
06c00                 | __system____builtin_memmove
06c00     2F 1F 02 F6 | 	mov	_var01, arg01
06c04     30 5F 5A F2 | 	cmps	arg01, arg02 wcz
06c08     50 00 90 3D |  if_ae	jmp	#LR__0306
06c0c     10 94 9F FE | 	loc	pa,	#(@LR__0300-@LR__0299)
06c10     93 00 A0 FD | 	call	#FCACHE_LOAD_
06c14                 | LR__0299
06c14     03 62 5E F2 | 	cmps	arg03, #3 wcz
06c18     18 00 90 ED |  if_be	jmp	#LR__0301
06c1c     30 21 02 FB | 	rdlong	_var02, arg02
06c20     2F 21 62 FC | 	wrlong	_var02, arg01
06c24     04 5E 06 F1 | 	add	arg01, #4
06c28     04 60 06 F1 | 	add	arg02, #4
06c2c     04 62 86 F1 | 	sub	arg03, #4
06c30     E0 FF 9F FD | 	jmp	#LR__0299
06c34                 | LR__0300
06c34                 | LR__0301
06c34     31 23 0A F6 | 	mov	_var03, arg03 wz
06c38     4C 00 90 AD |  if_e	jmp	#LR__0312
06c3c     D4 93 9F FE | 	loc	pa,	#(@LR__0304-@LR__0302)
06c40     93 00 A0 FD | 	call	#FCACHE_LOAD_
06c44                 | LR__0302
06c44     11 09 D8 FC | 	rep	@LR__0305, _var03
06c48                 | LR__0303
06c48     30 21 C2 FA | 	rdbyte	_var02, arg02
06c4c     2F 21 42 FC | 	wrbyte	_var02, arg01
06c50     01 5E 06 F1 | 	add	arg01, #1
06c54     01 60 06 F1 | 	add	arg02, #1
06c58                 | LR__0304
06c58                 | LR__0305
06c58     2C 00 90 FD | 	jmp	#LR__0312
06c5c                 | LR__0306
06c5c     31 5F 02 F1 | 	add	arg01, arg03
06c60     31 61 02 F1 | 	add	arg02, arg03
06c64     31 25 0A F6 | 	mov	_var04, arg03 wz
06c68     1C 00 90 AD |  if_e	jmp	#LR__0311
06c6c     A4 93 9F FE | 	loc	pa,	#(@LR__0309-@LR__0307)
06c70     93 00 A0 FD | 	call	#FCACHE_LOAD_
06c74                 | LR__0307
06c74     12 09 D8 FC | 	rep	@LR__0310, _var04
06c78                 | LR__0308
06c78     01 5E 86 F1 | 	sub	arg01, #1
06c7c     01 60 86 F1 | 	sub	arg02, #1
06c80     30 21 C2 FA | 	rdbyte	_var02, arg02
06c84     2F 21 42 FC | 	wrbyte	_var02, arg01
06c88                 | LR__0309
06c88                 | LR__0310
06c88                 | LR__0311
06c88                 | LR__0312
06c88     0F 19 02 F6 | 	mov	result1, _var01
06c8c                 | __system____builtin_memmove_ret
06c8c     2D 00 64 FD | 	ret
06c90                 | 
06c90                 | __system__longmove
06c90     2F 1F 02 F6 | 	mov	_var01, arg01
06c94     30 5F 5A F2 | 	cmps	arg01, arg02 wcz
06c98     28 00 90 3D |  if_ae	jmp	#LR__0317
06c9c     31 21 0A F6 | 	mov	_var02, arg03 wz
06ca0     5C 00 90 AD |  if_e	jmp	#LR__0323
06ca4     6C 93 9F FE | 	loc	pa,	#(@LR__0315-@LR__0313)
06ca8     93 00 A0 FD | 	call	#FCACHE_LOAD_
06cac                 | LR__0313
06cac     10 09 D8 FC | 	rep	@LR__0316, _var02
06cb0                 | LR__0314
06cb0     30 23 02 FB | 	rdlong	_var03, arg02
06cb4     2F 23 62 FC | 	wrlong	_var03, arg01
06cb8     04 5E 06 F1 | 	add	arg01, #4
06cbc     04 60 06 F1 | 	add	arg02, #4
06cc0                 | LR__0315
06cc0                 | LR__0316
06cc0     3C 00 90 FD | 	jmp	#LR__0323
06cc4                 | LR__0317
06cc4     31 25 02 F6 | 	mov	_var04, arg03
06cc8     02 24 66 F0 | 	shl	_var04, #2
06ccc     12 5F 02 F1 | 	add	arg01, _var04
06cd0     31 25 02 F6 | 	mov	_var04, arg03
06cd4     02 24 66 F0 | 	shl	_var04, #2
06cd8     12 61 02 F1 | 	add	arg02, _var04
06cdc     31 27 0A F6 | 	mov	_var05, arg03 wz
06ce0     1C 00 90 AD |  if_e	jmp	#LR__0322
06ce4     2C 93 9F FE | 	loc	pa,	#(@LR__0320-@LR__0318)
06ce8     93 00 A0 FD | 	call	#FCACHE_LOAD_
06cec                 | LR__0318
06cec     13 09 D8 FC | 	rep	@LR__0321, _var05
06cf0                 | LR__0319
06cf0     04 5E 86 F1 | 	sub	arg01, #4
06cf4     04 60 86 F1 | 	sub	arg02, #4
06cf8     30 23 02 FB | 	rdlong	_var03, arg02
06cfc     2F 23 62 FC | 	wrlong	_var03, arg01
06d00                 | LR__0320
06d00                 | LR__0321
06d00                 | LR__0322
06d00                 | LR__0323
06d00     0F 19 02 F6 | 	mov	result1, _var01
06d04                 | __system__longmove_ret
06d04     2D 00 64 FD | 	ret
06d08                 | 
06d08                 | __system____topofstack
06d08     00 5A 05 F6 | 	mov	COUNT_, #0
06d0c     B0 00 A0 FD | 	call	#pushregs_
06d10     08 F0 07 F1 | 	add	ptra, #8
06d14     04 5E 05 F1 | 	add	fp, #4
06d18     AF 5E 62 FC | 	wrlong	arg01, fp
06d1c     AF 18 02 F6 | 	mov	result1, fp
06d20     04 5E 85 F1 | 	sub	fp, #4
06d24     AF F0 03 F6 | 	mov	ptra, fp
06d28     BA 00 A0 FD | 	call	#popregs_
06d2c                 | __system____topofstack_ret
06d2c     2D 00 64 FD | 	ret
06d30                 | 
06d30                 | __system___make_methodptr
06d30     04 5A 05 F6 | 	mov	COUNT_, #4
06d34     B0 00 A0 FD | 	call	#pushregs_
06d38     2F 6D 02 F6 | 	mov	local01, arg01
06d3c     30 6F 02 F6 | 	mov	local02, arg02
06d40     08 5E 06 F6 | 	mov	arg01, #8
06d44     84 0D B0 FD | 	call	#__system___gc_alloc_managed
06d48     0C 71 0A F6 | 	mov	local03, result1 wz
06d4c     10 00 90 AD |  if_e	jmp	#LR__0324
06d50     38 6D 62 FC | 	wrlong	local01, local03
06d54     38 73 02 F6 | 	mov	local04, local03
06d58     04 72 06 F1 | 	add	local04, #4
06d5c     39 6F 62 FC | 	wrlong	local02, local04
06d60                 | LR__0324
06d60     38 19 02 F6 | 	mov	result1, local03
06d64     AF F0 03 F6 | 	mov	ptra, fp
06d68     BA 00 A0 FD | 	call	#popregs_
06d6c                 | __system___make_methodptr_ret
06d6c     2D 00 64 FD | 	ret
06d70                 | 
06d70                 | __system___lockmem
06d70     02 5A 05 F6 | 	mov	COUNT_, #2
06d74     B0 00 A0 FD | 	call	#pushregs_
06d78     00 18 06 F6 | 	mov	result1, #0
06d7c     01 18 62 FD | 	cogid	result1
06d80     0C 6D 02 F6 | 	mov	local01, result1
06d84     00 6D 06 F1 | 	add	local01, #256
06d88                 | LR__0325
06d88     2F 6F 0A FB | 	rdlong	local02, arg01 wz
06d8c     2F 6D 62 AC |  if_e	wrlong	local01, arg01
06d90     2F 6F 02 AB |  if_e	rdlong	local02, arg01
06d94     2F 6F 02 AB |  if_e	rdlong	local02, arg01
06d98     36 6F 0A F2 | 	cmp	local02, local01 wz
06d9c     E8 FF 9F 5D |  if_ne	jmp	#LR__0325
06da0     AF F0 03 F6 | 	mov	ptra, fp
06da4     BA 00 A0 FD | 	call	#popregs_
06da8                 | __system___lockmem_ret
06da8     2D 00 64 FD | 	ret
06dac                 | 
06dac                 | __system___string_concat
06dac     07 5A 05 F6 | 	mov	COUNT_, #7
06db0     B0 00 A0 FD | 	call	#pushregs_
06db4     2F 6D 02 F6 | 	mov	local01, arg01
06db8     30 6F 02 F6 | 	mov	local02, arg02
06dbc     36 5F 02 F6 | 	mov	arg01, local01
06dc0     00 70 06 F6 | 	mov	local03, #0
06dc4     48 92 9F FE | 	loc	pa,	#(@LR__0327-@LR__0326)
06dc8     93 00 A0 FD | 	call	#FCACHE_LOAD_
06dcc                 | LR__0326
06dcc     2F 73 CA FA | 	rdbyte	local04, arg01 wz
06dd0     01 70 06 51 |  if_ne	add	local03, #1
06dd4     01 5E 06 51 |  if_ne	add	arg01, #1
06dd8     F0 FF 9F 5D |  if_ne	jmp	#LR__0326
06ddc                 | LR__0327
06ddc     38 75 02 F6 | 	mov	local05, local03
06de0     37 5F 02 F6 | 	mov	arg01, local02
06de4     00 70 06 F6 | 	mov	local03, #0
06de8     24 92 9F FE | 	loc	pa,	#(@LR__0329-@LR__0328)
06dec     93 00 A0 FD | 	call	#FCACHE_LOAD_
06df0                 | LR__0328
06df0     2F 73 CA FA | 	rdbyte	local04, arg01 wz
06df4     01 70 06 51 |  if_ne	add	local03, #1
06df8     01 5E 06 51 |  if_ne	add	arg01, #1
06dfc     F0 FF 9F 5D |  if_ne	jmp	#LR__0328
06e00                 | LR__0329
06e00     38 19 02 F6 | 	mov	result1, local03
06e04     0C 77 02 F6 | 	mov	local06, result1
06e08     3A 5F 02 F6 | 	mov	arg01, local05
06e0c     3B 5F 02 F1 | 	add	arg01, local06
06e10     01 5E 06 F1 | 	add	arg01, #1
06e14     B4 0C B0 FD | 	call	#__system___gc_alloc_managed
06e18     0C 79 0A F6 | 	mov	local07, result1 wz
06e1c     28 00 90 AD |  if_e	jmp	#LR__0330
06e20     3C 5F 02 F6 | 	mov	arg01, local07
06e24     36 61 02 F6 | 	mov	arg02, local01
06e28     3A 63 02 F6 | 	mov	arg03, local05
06e2c     D0 FD BF FD | 	call	#__system____builtin_memmove
06e30     3C 5F 02 F6 | 	mov	arg01, local07
06e34     3A 5F 02 F1 | 	add	arg01, local05
06e38     01 76 06 F1 | 	add	local06, #1
06e3c     37 61 02 F6 | 	mov	arg02, local02
06e40     3B 63 02 F6 | 	mov	arg03, local06
06e44     B8 FD BF FD | 	call	#__system____builtin_memmove
06e48                 | LR__0330
06e48     3C 19 02 F6 | 	mov	result1, local07
06e4c     AF F0 03 F6 | 	mov	ptra, fp
06e50     BA 00 A0 FD | 	call	#popregs_
06e54                 | __system___string_concat_ret
06e54     2D 00 64 FD | 	ret
06e58                 | 
06e58                 | __system___tx
06e58     03 5A 05 F6 | 	mov	COUNT_, #3
06e5c     B0 00 A0 FD | 	call	#pushregs_
06e60     2F 6D 02 F6 | 	mov	local01, arg01
06e64     0A 6C 0E F2 | 	cmp	local01, #10 wz
06e68     20 00 90 5D |  if_ne	jmp	#LR__0331
06e6c     08 00 06 F1 | 	add	ptr___system__dat__, #8
06e70     00 6F 02 FB | 	rdlong	local02, ptr___system__dat__
06e74     08 00 86 F1 | 	sub	ptr___system__dat__, #8
06e78     37 71 02 F6 | 	mov	local03, local02
06e7c     02 70 0E F5 | 	and	local03, #2 wz
06e80     08 00 90 AD |  if_e	jmp	#LR__0331
06e84     0D 5E 06 F6 | 	mov	arg01, #13
06e88     40 FC BF FD | 	call	#__system___txraw
06e8c                 | LR__0331
06e8c     36 5F 02 F6 | 	mov	arg01, local01
06e90     38 FC BF FD | 	call	#__system___txraw
06e94     AF F0 03 F6 | 	mov	ptra, fp
06e98     BA 00 A0 FD | 	call	#popregs_
06e9c                 | __system___tx_ret
06e9c     2D 00 64 FD | 	ret
06ea0                 | 
06ea0                 | __system___rx
06ea0     02 5A 05 F6 | 	mov	COUNT_, #2
06ea4     B0 00 A0 FD | 	call	#pushregs_
06ea8                 | LR__0332
06ea8     00 5E 06 F6 | 	mov	arg01, #0
06eac     64 FC BF FD | 	call	#__system___rxraw
06eb0     0C 6D 02 F6 | 	mov	local01, result1
06eb4     FF FF 7F FF 
06eb8     FF 6D 0E F2 | 	cmp	local01, ##-1 wz
06ebc     E8 FF 9F AD |  if_e	jmp	#LR__0332
06ec0     0D 6C 0E F2 | 	cmp	local01, #13 wz
06ec4     14 00 90 5D |  if_ne	jmp	#LR__0333
06ec8     08 00 06 F1 | 	add	ptr___system__dat__, #8
06ecc     00 6F 02 FB | 	rdlong	local02, ptr___system__dat__
06ed0     08 00 86 F1 | 	sub	ptr___system__dat__, #8
06ed4     02 6E CE F7 | 	test	local02, #2 wz
06ed8     0A 6C 06 56 |  if_ne	mov	local01, #10
06edc                 | LR__0333
06edc     08 00 06 F1 | 	add	ptr___system__dat__, #8
06ee0     00 6F 02 FB | 	rdlong	local02, ptr___system__dat__
06ee4     08 00 86 F1 | 	sub	ptr___system__dat__, #8
06ee8     01 6E CE F7 | 	test	local02, #1 wz
06eec     1C 00 90 AD |  if_e	jmp	#LR__0336
06ef0     7F 6C 0E F2 | 	cmp	local01, #127 wz
06ef4     0C 00 90 5D |  if_ne	jmp	#LR__0334
06ef8     08 5E 06 F6 | 	mov	arg01, #8
06efc     58 FF BF FD | 	call	#__system___tx
06f00     08 00 90 FD | 	jmp	#LR__0335
06f04                 | LR__0334
06f04     36 5F 02 F6 | 	mov	arg01, local01
06f08     4C FF BF FD | 	call	#__system___tx
06f0c                 | LR__0335
06f0c                 | LR__0336
06f0c     36 19 02 F6 | 	mov	result1, local01
06f10     AF F0 03 F6 | 	mov	ptra, fp
06f14     BA 00 A0 FD | 	call	#popregs_
06f18                 | __system___rx_ret
06f18     2D 00 64 FD | 	ret
06f1c                 | 
06f1c                 | __system___pinread
06f1c     20 5E CE F7 | 	test	arg01, #32 wz
06f20     FF 1F 02 56 |  if_ne	mov	_var01, inb
06f24     FE 1F 02 A6 |  if_e	mov	_var01, ina
06f28     2F 1F 42 F0 | 	shr	_var01, arg01
06f2c     06 5E 46 F0 | 	shr	arg01, #6
06f30     2F 1F 42 F7 | 	zerox	_var01, arg01
06f34     0F 19 02 F6 | 	mov	result1, _var01
06f38                 | __system___pinread_ret
06f38     2D 00 64 FD | 	ret
06f3c                 | 
06f3c                 | __system___waitms
06f3c     03 5A 05 F6 | 	mov	COUNT_, #3
06f40     B0 00 A0 FD | 	call	#pushregs_
06f44     2F 6D 02 F6 | 	mov	local01, arg01
06f48     14 6E 06 FB | 	rdlong	local02, #20
06f4c     C8 90 9F FE | 	loc	pa,	#(@LR__0338-@LR__0337)
06f50     93 00 A0 FD | 	call	#FCACHE_LOAD_
06f54                 | LR__0337
06f54     01 00 00 FF 
06f58     E8 6D 5E F2 | 	cmps	local01, ##1000 wcz
06f5c     1F 6E 62 1D |  if_a	waitx	local02
06f60     01 00 00 1F 
06f64     E8 6D 86 11 |  if_a	sub	local01, ##1000
06f68     E8 FF 9F 1D |  if_a	jmp	#LR__0337
06f6c                 | LR__0338
06f6c     0C 00 06 F1 | 	add	ptr___system__dat__, #12
06f70     00 71 0A FB | 	rdlong	local03, ptr___system__dat__ wz
06f74     0C 00 86 F1 | 	sub	ptr___system__dat__, #12
06f78     20 00 90 5D |  if_ne	jmp	#LR__0339
06f7c     37 99 02 F6 | 	mov	muldiva_, local02
06f80     01 00 00 FF 
06f84     E8 9B 06 F6 | 	mov	muldivb_, ##1000
06f88     C2 00 A0 FD | 	call	#unsdivide_
06f8c     4D 71 02 F6 | 	mov	local03, muldivb_
06f90     0C 00 06 F1 | 	add	ptr___system__dat__, #12
06f94     00 9B 62 FC | 	wrlong	muldivb_, ptr___system__dat__
06f98     0C 00 86 F1 | 	sub	ptr___system__dat__, #12
06f9c                 | LR__0339
06f9c     00 6C 5E F2 | 	cmps	local01, #0 wcz
06fa0     38 6D 02 1D |  if_a	qmul	local01, local03
06fa4     18 5E 62 1D |  if_a	getqx	arg01
06fa8     1F 5E 62 1D |  if_a	waitx	arg01
06fac     AF F0 03 F6 | 	mov	ptra, fp
06fb0     BA 00 A0 FD | 	call	#popregs_
06fb4                 | __system___waitms_ret
06fb4     2D 00 64 FD | 	ret
06fb8                 | 
06fb8                 | __system___waitus
06fb8     02 5A 05 F6 | 	mov	COUNT_, #2
06fbc     B0 00 A0 FD | 	call	#pushregs_
06fc0     2F 6D 02 F6 | 	mov	local01, arg01
06fc4     10 00 06 F1 | 	add	ptr___system__dat__, #16
06fc8     00 6F 0A FB | 	rdlong	local02, ptr___system__dat__ wz
06fcc     10 00 86 F1 | 	sub	ptr___system__dat__, #16
06fd0     20 00 90 5D |  if_ne	jmp	#LR__0340
06fd4     14 98 06 FB | 	rdlong	muldiva_, #20
06fd8     A1 07 00 FF 
06fdc     40 9A 06 F6 | 	mov	muldivb_, ##1000000
06fe0     C2 00 A0 FD | 	call	#unsdivide_
06fe4     4D 6F 02 F6 | 	mov	local02, muldivb_
06fe8     10 00 06 F1 | 	add	ptr___system__dat__, #16
06fec     00 9B 62 FC | 	wrlong	muldivb_, ptr___system__dat__
06ff0     10 00 86 F1 | 	sub	ptr___system__dat__, #16
06ff4                 | LR__0340
06ff4     37 6D 02 FD | 	qmul	local01, local02
06ff8     18 5E 62 FD | 	getqx	arg01
06ffc     1F 5E 62 FD | 	waitx	arg01
07000     AF F0 03 F6 | 	mov	ptra, fp
07004     BA 00 A0 FD | 	call	#popregs_
07008                 | __system___waitus_ret
07008     2D 00 64 FD | 	ret
0700c                 | 
0700c                 | __system___basic_open
0700c     06 5A 05 F6 | 	mov	COUNT_, #6
07010     B0 00 A0 FD | 	call	#pushregs_
07014     30 6D 02 F6 | 	mov	local01, arg02
07018     31 6F 02 F6 | 	mov	local02, arg03
0701c     32 71 02 F6 | 	mov	local03, arg04
07020     9C 12 B0 FD | 	call	#__system____getftab
07024     0C 73 0A F6 | 	mov	local04, result1 wz
07028     18 00 90 5D |  if_ne	jmp	#LR__0341
0702c     F9 5E 02 F6 | 	mov	arg01, abortchain
07030     0C 60 06 F6 | 	mov	arg02, #12
07034     01 62 06 F6 | 	mov	arg03, #1
07038     E6 00 A0 FD | 	call	#__longjmp
0703c     01 18 66 F6 | 	neg	result1, #1
07040     90 00 90 FD | 	jmp	#LR__0346
07044                 | LR__0341
07044     08 72 06 F1 | 	add	local04, #8
07048     39 75 0A FB | 	rdlong	local05, local04 wz
0704c     08 72 86 F1 | 	sub	local04, #8
07050     08 00 90 AD |  if_e	jmp	#LR__0342
07054     39 5F 02 F6 | 	mov	arg01, local04
07058     C0 14 B0 FD | 	call	#__system___closeraw
0705c                 | LR__0342
0705c     00 6C 0E F2 | 	cmp	local01, #0 wz
07060     48 00 90 AD |  if_e	jmp	#LR__0344
07064     04 5E 06 F6 | 	mov	arg01, #4
07068     60 0A B0 FD | 	call	#__system___gc_alloc_managed
0706c     0C 77 0A F6 | 	mov	local06, result1 wz
07070     18 00 90 5D |  if_ne	jmp	#LR__0343
07074     F9 5E 02 F6 | 	mov	arg01, abortchain
07078     07 60 06 F6 | 	mov	arg02, #7
0707c     01 62 06 F6 | 	mov	arg03, #1
07080     E6 00 A0 FD | 	call	#__longjmp
07084     01 18 66 F6 | 	neg	result1, #1
07088     48 00 90 FD | 	jmp	#LR__0346
0708c                 | LR__0343
0708c     3B 6D 62 FC | 	wrlong	local01, local06
07090     FE 60 02 F6 | 	mov	arg02, ptr___struct___bas_wrap_sender_tx_
07094     3B 5F 02 F6 | 	mov	arg01, local06
07098     94 FC BF FD | 	call	#__system___make_methodptr
0709c     18 72 06 F1 | 	add	local04, #24
070a0     39 19 62 FC | 	wrlong	result1, local04
070a4     18 72 86 F1 | 	sub	local04, #24
070a8     0C 00 90 FD | 	jmp	#LR__0345
070ac                 | LR__0344
070ac     18 72 06 F1 | 	add	local04, #24
070b0     39 6D 62 FC | 	wrlong	local01, local04
070b4     18 72 86 F1 | 	sub	local04, #24
070b8                 | LR__0345
070b8     08 72 06 F1 | 	add	local04, #8
070bc     39 0F 68 FC | 	wrlong	#7, local04
070c0     14 72 06 F1 | 	add	local04, #20
070c4     39 6F 62 FC | 	wrlong	local02, local04
070c8     04 72 06 F1 | 	add	local04, #4
070cc     39 71 62 FC | 	wrlong	local03, local04
070d0     00 18 06 F6 | 	mov	result1, #0
070d4                 | LR__0346
070d4     AF F0 03 F6 | 	mov	ptra, fp
070d8     BA 00 A0 FD | 	call	#popregs_
070dc                 | __system___basic_open_ret
070dc     2D 00 64 FD | 	ret
070e0                 | 
070e0                 | __system___basic_print_char
070e0     05 5A 05 F6 | 	mov	COUNT_, #5
070e4     B0 00 A0 FD | 	call	#pushregs_
070e8     30 6D 02 F6 | 	mov	local01, arg02
070ec     98 13 B0 FD | 	call	#__system___gettxfunc
070f0     0C 6F 0A F6 | 	mov	local02, result1 wz
070f4     00 18 06 A6 |  if_e	mov	result1, #0
070f8     24 00 90 AD |  if_e	jmp	#LR__0347
070fc     37 71 02 FB | 	rdlong	local03, local02
07100     04 6E 06 F1 | 	add	local02, #4
07104     37 73 02 FB | 	rdlong	local04, local02
07108     36 5F 02 F6 | 	mov	arg01, local01
0710c     FD 74 02 F6 | 	mov	local05, objptr
07110     38 FB 01 F6 | 	mov	objptr, local03
07114     2D 72 62 FD | 	call	local04
07118     3A FB 01 F6 | 	mov	objptr, local05
0711c     01 18 06 F6 | 	mov	result1, #1
07120                 | LR__0347
07120     AF F0 03 F6 | 	mov	ptra, fp
07124     BA 00 A0 FD | 	call	#popregs_
07128                 | __system___basic_print_char_ret
07128     2D 00 64 FD | 	ret
0712c                 | 
0712c                 | __system___basic_print_string
0712c     03 5A 05 F6 | 	mov	COUNT_, #3
07130     B0 00 A0 FD | 	call	#pushregs_
07134     30 6D 02 F6 | 	mov	local01, arg02
07138     31 6F 02 F6 | 	mov	local02, arg03
0713c     48 13 B0 FD | 	call	#__system___gettxfunc
07140     0C 71 0A F6 | 	mov	local03, result1 wz
07144     00 18 06 A6 |  if_e	mov	result1, #0
07148     1C 00 90 AD |  if_e	jmp	#LR__0348
0714c     00 6C 0E F2 | 	cmp	local01, #0 wz
07150     00 18 06 A6 |  if_e	mov	result1, #0
07154     10 00 90 AD |  if_e	jmp	#LR__0348
07158     37 61 02 F6 | 	mov	arg02, local02
0715c     36 63 02 F6 | 	mov	arg03, local01
07160     38 5F 02 F6 | 	mov	arg01, local03
07164     B0 00 B0 FD | 	call	#__system___fmtstr
07168                 | LR__0348
07168     AF F0 03 F6 | 	mov	ptra, fp
0716c     BA 00 A0 FD | 	call	#popregs_
07170                 | __system___basic_print_string_ret
07170     2D 00 64 FD | 	ret
07174                 | 
07174                 | __system___basic_print_integer
07174     04 5A 05 F6 | 	mov	COUNT_, #4
07178     B0 00 A0 FD | 	call	#pushregs_
0717c     30 6D 02 F6 | 	mov	local01, arg02
07180     31 6F 02 F6 | 	mov	local02, arg03
07184     32 71 02 F6 | 	mov	local03, arg04
07188     FC 12 B0 FD | 	call	#__system___gettxfunc
0718c     0C 73 0A F6 | 	mov	local04, result1 wz
07190     00 18 06 A6 |  if_e	mov	result1, #0
07194     14 00 90 AD |  if_e	jmp	#LR__0349
07198     37 61 02 F6 | 	mov	arg02, local02
0719c     36 63 02 F6 | 	mov	arg03, local01
071a0     38 65 02 F6 | 	mov	arg04, local03
071a4     39 5F 02 F6 | 	mov	arg01, local04
071a8     64 01 B0 FD | 	call	#__system___fmtnum
071ac                 | LR__0349
071ac     AF F0 03 F6 | 	mov	ptra, fp
071b0     BA 00 A0 FD | 	call	#popregs_
071b4                 | __system___basic_print_integer_ret
071b4     2D 00 64 FD | 	ret
071b8                 | 
071b8                 | __system___fmtchar
071b8     00 5A 05 F6 | 	mov	COUNT_, #0
071bc     B0 00 A0 FD | 	call	#pushregs_
071c0     14 F0 07 F1 | 	add	ptra, #20
071c4     04 5E 05 F1 | 	add	fp, #4
071c8     AF 5E 62 FC | 	wrlong	arg01, fp
071cc     04 5E 05 F1 | 	add	fp, #4
071d0     AF 60 62 FC | 	wrlong	arg02, fp
071d4     04 5E 05 F1 | 	add	fp, #4
071d8     AF 62 62 FC | 	wrlong	arg03, fp
071dc     04 5E 05 F1 | 	add	fp, #4
071e0     AF 62 42 FC | 	wrbyte	arg03, fp
071e4     01 5E 05 F1 | 	add	fp, #1
071e8     AF 00 48 FC | 	wrbyte	#0, fp
071ec     0D 5E 85 F1 | 	sub	fp, #13
071f0     AF 5E 02 FB | 	rdlong	arg01, fp
071f4     04 5E 05 F1 | 	add	fp, #4
071f8     AF 60 02 FB | 	rdlong	arg02, fp
071fc     08 5E 05 F1 | 	add	fp, #8
07200     AF 62 02 F6 | 	mov	arg03, fp
07204     10 5E 85 F1 | 	sub	fp, #16
07208     0C 00 B0 FD | 	call	#__system___fmtstr
0720c     AF F0 03 F6 | 	mov	ptra, fp
07210     BA 00 A0 FD | 	call	#popregs_
07214                 | __system___fmtchar_ret
07214     2D 00 64 FD | 	ret
07218                 | 
07218                 | __system___fmtstr
07218     0E 5A 05 F6 | 	mov	COUNT_, #14
0721c     B0 00 A0 FD | 	call	#pushregs_
07220     2F 6D 02 F6 | 	mov	local01, arg01
07224     30 6F 02 F6 | 	mov	local02, arg02
07228     31 71 02 F6 | 	mov	local03, arg03
0722c     37 73 02 F6 | 	mov	local04, local02
07230     FF 72 06 F5 | 	and	local04, #255
07234     38 5F 02 F6 | 	mov	arg01, local03
07238     00 74 06 F6 | 	mov	local05, #0
0723c     D0 8D 9F FE | 	loc	pa,	#(@LR__0351-@LR__0350)
07240     93 00 A0 FD | 	call	#FCACHE_LOAD_
07244                 | LR__0350
07244     2F 77 CA FA | 	rdbyte	local06, arg01 wz
07248     01 74 06 51 |  if_ne	add	local05, #1
0724c     01 5E 06 51 |  if_ne	add	arg01, #1
07250     F0 FF 9F 5D |  if_ne	jmp	#LR__0350
07254                 | LR__0351
07254     3A 19 02 F6 | 	mov	result1, local05
07258     0C 79 02 F6 | 	mov	local07, result1
0725c     00 72 0E F2 | 	cmp	local04, #0 wz
07260     04 00 90 AD |  if_e	jmp	#LR__0352
07264     39 79 7A F3 | 	fles	local07, local04 wcz
07268                 | LR__0352
07268     37 61 02 F6 | 	mov	arg02, local02
0726c     3C 63 02 F6 | 	mov	arg03, local07
07270     36 5F 02 F6 | 	mov	arg01, local01
07274     02 64 06 F6 | 	mov	arg04, #2
07278     BC 10 B0 FD | 	call	#__system___fmtpad
0727c     0C 7B 02 F6 | 	mov	local08, result1
07280     00 7A 5E F2 | 	cmps	local08, #0 wcz
07284     3D 19 02 C6 |  if_b	mov	result1, local08
07288     78 00 90 CD |  if_b	jmp	#LR__0355
0728c     00 7C 06 F6 | 	mov	local09, #0
07290                 | LR__0353
07290     3C 7D 5A F2 | 	cmps	local09, local07 wcz
07294     44 00 90 3D |  if_ae	jmp	#LR__0354
07298     36 7F 02 F6 | 	mov	local10, local01
0729c     3F 81 02 FB | 	rdlong	local11, local10
072a0     04 7E 06 F1 | 	add	local10, #4
072a4     3F 83 02 FB | 	rdlong	local12, local10
072a8     38 5F C2 FA | 	rdbyte	arg01, local03
072ac     FD 84 02 F6 | 	mov	local13, objptr
072b0     40 FB 01 F6 | 	mov	objptr, local11
072b4     01 70 06 F1 | 	add	local03, #1
072b8     2D 82 62 FD | 	call	local12
072bc     42 FB 01 F6 | 	mov	objptr, local13
072c0     0C 87 02 F6 | 	mov	local14, result1
072c4     00 86 5E F2 | 	cmps	local14, #0 wcz
072c8     43 19 02 C6 |  if_b	mov	result1, local14
072cc     34 00 90 CD |  if_b	jmp	#LR__0355
072d0     43 7B 02 F1 | 	add	local08, local14
072d4     01 7C 06 F1 | 	add	local09, #1
072d8     B4 FF 9F FD | 	jmp	#LR__0353
072dc                 | LR__0354
072dc     37 61 02 F6 | 	mov	arg02, local02
072e0     3C 63 02 F6 | 	mov	arg03, local07
072e4     36 5F 02 F6 | 	mov	arg01, local01
072e8     01 64 06 F6 | 	mov	arg04, #1
072ec     48 10 B0 FD | 	call	#__system___fmtpad
072f0     0C 87 02 F6 | 	mov	local14, result1
072f4     00 86 5E F2 | 	cmps	local14, #0 wcz
072f8     43 19 02 C6 |  if_b	mov	result1, local14
072fc     43 7B 02 31 |  if_ae	add	local08, local14
07300     3D 19 02 36 |  if_ae	mov	result1, local08
07304                 | LR__0355
07304     AF F0 03 F6 | 	mov	ptra, fp
07308     BA 00 A0 FD | 	call	#popregs_
0730c                 | __system___fmtstr_ret
0730c     2D 00 64 FD | 	ret
07310                 | 
07310                 | __system___fmtnum
07310     06 5A 05 F6 | 	mov	COUNT_, #6
07314     B0 00 A0 FD | 	call	#pushregs_
07318     70 F0 07 F1 | 	add	ptra, #112
0731c     04 5E 05 F1 | 	add	fp, #4
07320     AF 5E 62 FC | 	wrlong	arg01, fp
07324     04 5E 05 F1 | 	add	fp, #4
07328     AF 60 62 FC | 	wrlong	arg02, fp
0732c     04 5E 05 F1 | 	add	fp, #4
07330     AF 62 62 FC | 	wrlong	arg03, fp
07334     04 5E 05 F1 | 	add	fp, #4
07338     AF 64 62 FC | 	wrlong	arg04, fp
0733c     04 5E 05 F1 | 	add	fp, #4
07340     AF 6C 02 F6 | 	mov	local01, fp
07344     44 5E 05 F1 | 	add	fp, #68
07348     AF 6C 62 FC | 	wrlong	local01, fp
0734c     04 5E 05 F1 | 	add	fp, #4
07350     AF 00 68 FC | 	wrlong	#0, fp
07354     54 5E 85 F1 | 	sub	fp, #84
07358     AF 6C 02 FB | 	rdlong	local01, fp
0735c     10 6C 46 F0 | 	shr	local01, #16
07360     3F 6C 06 F5 | 	and	local01, #63
07364     58 5E 05 F1 | 	add	fp, #88
07368     AF 6C 62 FC | 	wrlong	local01, fp
0736c     58 5E 85 F1 | 	sub	fp, #88
07370     AF 6C 02 FB | 	rdlong	local01, fp
07374     FF 6C 06 F5 | 	and	local01, #255
07378     5C 5E 05 F1 | 	add	fp, #92
0737c     AF 6C 62 FC | 	wrlong	local01, fp
07380     5C 5E 85 F1 | 	sub	fp, #92
07384     AF 6C 02 FB | 	rdlong	local01, fp
07388     1A 6C 46 F0 | 	shr	local01, #26
0738c     03 6C 06 F5 | 	and	local01, #3
07390     60 5E 05 F1 | 	add	fp, #96
07394     AF 6C 62 FC | 	wrlong	local01, fp
07398     08 5E 85 F1 | 	sub	fp, #8
0739c     AF 6C 02 FB | 	rdlong	local01, fp
073a0     60 5E 85 F1 | 	sub	fp, #96
073a4     00 6C 5E F2 | 	cmps	local01, #0 wcz
073a8     14 00 90 ED |  if_be	jmp	#LR__0356
073ac     60 5E 05 F1 | 	add	fp, #96
073b0     AF 6C 02 FB | 	rdlong	local01, fp
073b4     01 6C 86 F1 | 	sub	local01, #1
073b8     AF 6C 62 FC | 	wrlong	local01, fp
073bc     60 5E 85 F1 | 	sub	fp, #96
073c0                 | LR__0356
073c0     64 5E 05 F1 | 	add	fp, #100
073c4     AF 6C 02 FB | 	rdlong	local01, fp
073c8     64 5E 85 F1 | 	sub	fp, #100
073cc     40 6C 5E F2 | 	cmps	local01, #64 wcz
073d0     14 00 90 1D |  if_a	jmp	#LR__0357
073d4     64 5E 05 F1 | 	add	fp, #100
073d8     AF 6E 02 FB | 	rdlong	local02, fp
073dc     64 5E 85 F1 | 	sub	fp, #100
073e0     37 71 0A F6 | 	mov	local03, local02 wz
073e4     0C 00 90 5D |  if_ne	jmp	#LR__0358
073e8                 | LR__0357
073e8     64 5E 05 F1 | 	add	fp, #100
073ec     AF 80 68 FC | 	wrlong	#64, fp
073f0     64 5E 85 F1 | 	sub	fp, #100
073f4                 | LR__0358
073f4     68 5E 05 F1 | 	add	fp, #104
073f8     AF 6C 02 FB | 	rdlong	local01, fp
073fc     68 5E 85 F1 | 	sub	fp, #104
07400     03 6C 0E F2 | 	cmp	local01, #3 wz
07404     10 00 90 5D |  if_ne	jmp	#LR__0359
07408     68 5E 05 F1 | 	add	fp, #104
0740c     AF 00 68 FC | 	wrlong	#0, fp
07410     68 5E 85 F1 | 	sub	fp, #104
07414     30 00 90 FD | 	jmp	#LR__0361
07418                 | LR__0359
07418     0C 5E 05 F1 | 	add	fp, #12
0741c     AF 6C 02 FB | 	rdlong	local01, fp
07420     0C 5E 85 F1 | 	sub	fp, #12
07424     00 6C 5E F2 | 	cmps	local01, #0 wcz
07428     1C 00 90 3D |  if_ae	jmp	#LR__0360
0742c     68 5E 05 F1 | 	add	fp, #104
07430     AF 08 68 FC | 	wrlong	#4, fp
07434     5C 5E 85 F1 | 	sub	fp, #92
07438     AF 6C 02 FB | 	rdlong	local01, fp
0743c     36 6D 62 F6 | 	neg	local01, local01
07440     AF 6C 62 FC | 	wrlong	local01, fp
07444     0C 5E 85 F1 | 	sub	fp, #12
07448                 | LR__0360
07448                 | LR__0361
07448     68 5E 05 F1 | 	add	fp, #104
0744c     AF 6C 0A FB | 	rdlong	local01, fp wz
07450     68 5E 85 F1 | 	sub	fp, #104
07454     EC 00 90 AD |  if_e	jmp	#LR__0368
07458     5C 5E 05 F1 | 	add	fp, #92
0745c     AF 70 02 FB | 	rdlong	local03, fp
07460     01 70 06 F1 | 	add	local03, #1
07464     AF 70 62 FC | 	wrlong	local03, fp
07468     04 5E 05 F1 | 	add	fp, #4
0746c     AF 6C 02 FB | 	rdlong	local01, fp
07470     04 5E 05 F1 | 	add	fp, #4
07474     AF 70 02 FB | 	rdlong	local03, fp
07478     64 5E 85 F1 | 	sub	fp, #100
0747c     38 6D 0A F2 | 	cmp	local01, local03 wz
07480     3C 00 90 5D |  if_ne	jmp	#LR__0363
07484     60 5E 05 F1 | 	add	fp, #96
07488     AF 70 02 FB | 	rdlong	local03, fp
0748c     01 70 86 F1 | 	sub	local03, #1
07490     AF 70 62 FC | 	wrlong	local03, fp
07494     AF 6C 0A FB | 	rdlong	local01, fp wz
07498     60 5E 85 F1 | 	sub	fp, #96
0749c     20 00 90 5D |  if_ne	jmp	#LR__0362
074a0     04 5E 05 F1 | 	add	fp, #4
074a4     AF 5E 02 FB | 	rdlong	arg01, fp
074a8     04 5E 05 F1 | 	add	fp, #4
074ac     AF 60 02 FB | 	rdlong	arg02, fp
074b0     08 5E 85 F1 | 	sub	fp, #8
074b4     23 62 06 F6 | 	mov	arg03, #35
074b8     FC FC BF FD | 	call	#__system___fmtchar
074bc     70 01 90 FD | 	jmp	#LR__0373
074c0                 | LR__0362
074c0                 | LR__0363
074c0     68 5E 05 F1 | 	add	fp, #104
074c4     AF 6C 02 FB | 	rdlong	local01, fp
074c8     68 5E 85 F1 | 	sub	fp, #104
074cc     02 6C 0E F2 | 	cmp	local01, #2 wz
074d0     20 00 90 5D |  if_ne	jmp	#LR__0364
074d4     58 5E 05 F1 | 	add	fp, #88
074d8     AF 6C 02 FB | 	rdlong	local01, fp
074dc     36 71 02 F6 | 	mov	local03, local01
074e0     01 70 06 F1 | 	add	local03, #1
074e4     AF 70 62 FC | 	wrlong	local03, fp
074e8     58 5E 85 F1 | 	sub	fp, #88
074ec     36 41 48 FC | 	wrbyte	#32, local01
074f0     50 00 90 FD | 	jmp	#LR__0367
074f4                 | LR__0364
074f4     68 5E 05 F1 | 	add	fp, #104
074f8     AF 6C 02 FB | 	rdlong	local01, fp
074fc     68 5E 85 F1 | 	sub	fp, #104
07500     04 6C 0E F2 | 	cmp	local01, #4 wz
07504     20 00 90 5D |  if_ne	jmp	#LR__0365
07508     58 5E 05 F1 | 	add	fp, #88
0750c     AF 6C 02 FB | 	rdlong	local01, fp
07510     36 71 02 F6 | 	mov	local03, local01
07514     01 70 06 F1 | 	add	local03, #1
07518     AF 70 62 FC | 	wrlong	local03, fp
0751c     58 5E 85 F1 | 	sub	fp, #88
07520     36 5B 48 FC | 	wrbyte	#45, local01
07524     1C 00 90 FD | 	jmp	#LR__0366
07528                 | LR__0365
07528     58 5E 05 F1 | 	add	fp, #88
0752c     AF 6C 02 FB | 	rdlong	local01, fp
07530     36 71 02 F6 | 	mov	local03, local01
07534     01 70 06 F1 | 	add	local03, #1
07538     AF 70 62 FC | 	wrlong	local03, fp
0753c     58 5E 85 F1 | 	sub	fp, #88
07540     36 57 48 FC | 	wrbyte	#43, local01
07544                 | LR__0366
07544                 | LR__0367
07544                 | LR__0368
07544     58 5E 05 F1 | 	add	fp, #88
07548     AF 5E 02 FB | 	rdlong	arg01, fp
0754c     4C 5E 85 F1 | 	sub	fp, #76
07550     AF 60 02 FB | 	rdlong	arg02, fp
07554     04 5E 05 F1 | 	add	fp, #4
07558     AF 62 02 FB | 	rdlong	arg03, fp
0755c     50 5E 05 F1 | 	add	fp, #80
07560     AF 64 02 FB | 	rdlong	arg04, fp
07564     00 72 06 F6 | 	mov	local04, #0
07568     58 5E 85 F1 | 	sub	fp, #88
0756c     AF 74 02 FB | 	rdlong	local05, fp
07570     08 5E 85 F1 | 	sub	fp, #8
07574     1D 74 2E F4 | 	testbn	local05, #29 wz
07578     01 72 06 56 |  if_ne	mov	local04, #1
0757c     39 67 02 F6 | 	mov	arg05, local04
07580     78 0E B0 FD | 	call	#__system___uitoa
07584     0C 77 02 F6 | 	mov	local06, result1
07588     5C 5E 05 F1 | 	add	fp, #92
0758c     AF 6C 02 FB | 	rdlong	local01, fp
07590     3B 6D 02 F1 | 	add	local01, local06
07594     AF 6C 62 FC | 	wrlong	local01, fp
07598     08 5E 05 F1 | 	add	fp, #8
0759c     AF 70 02 FB | 	rdlong	local03, fp
075a0     64 5E 85 F1 | 	sub	fp, #100
075a4     38 6D 5A F2 | 	cmps	local01, local03 wcz
075a8     64 00 90 ED |  if_be	jmp	#LR__0372
075ac     90 8A 9F FE | 	loc	pa,	#(@LR__0370-@LR__0369)
075b0     93 00 A0 FD | 	call	#FCACHE_LOAD_
075b4                 | LR__0369
075b4     64 5E 05 F1 | 	add	fp, #100
075b8     AF 6C 02 FB | 	rdlong	local01, fp
075bc     36 71 02 F6 | 	mov	local03, local01
075c0     01 70 86 F1 | 	sub	local03, #1
075c4     AF 70 62 FC | 	wrlong	local03, fp
075c8     64 5E 85 F1 | 	sub	fp, #100
075cc     00 6C 5E F2 | 	cmps	local01, #0 wcz
075d0     20 00 90 ED |  if_be	jmp	#LR__0371
075d4     58 5E 05 F1 | 	add	fp, #88
075d8     AF 6C 02 FB | 	rdlong	local01, fp
075dc     36 71 02 F6 | 	mov	local03, local01
075e0     01 70 06 F1 | 	add	local03, #1
075e4     AF 70 62 FC | 	wrlong	local03, fp
075e8     58 5E 85 F1 | 	sub	fp, #88
075ec     36 47 48 FC | 	wrbyte	#35, local01
075f0     C0 FF 9F FD | 	jmp	#LR__0369
075f4                 | LR__0370
075f4                 | LR__0371
075f4     58 5E 05 F1 | 	add	fp, #88
075f8     AF 6C 02 FB | 	rdlong	local01, fp
075fc     36 71 02 F6 | 	mov	local03, local01
07600     01 70 06 F1 | 	add	local03, #1
07604     AF 70 62 FC | 	wrlong	local03, fp
07608     58 5E 85 F1 | 	sub	fp, #88
0760c     36 01 48 FC | 	wrbyte	#0, local01
07610                 | LR__0372
07610     04 5E 05 F1 | 	add	fp, #4
07614     AF 5E 02 FB | 	rdlong	arg01, fp
07618     04 5E 05 F1 | 	add	fp, #4
0761c     AF 60 02 FB | 	rdlong	arg02, fp
07620     0C 5E 05 F1 | 	add	fp, #12
07624     AF 62 02 F6 | 	mov	arg03, fp
07628     14 5E 85 F1 | 	sub	fp, #20
0762c     E8 FB BF FD | 	call	#__system___fmtstr
07630                 | LR__0373
07630     AF F0 03 F6 | 	mov	ptra, fp
07634     BA 00 A0 FD | 	call	#popregs_
07638                 | __system___fmtnum_ret
07638     2D 00 64 FD | 	ret
0763c                 | 
0763c                 | __system__Chr_S
0763c     02 5A 05 F6 | 	mov	COUNT_, #2
07640     B0 00 A0 FD | 	call	#pushregs_
07644     2F 6D 02 F6 | 	mov	local01, arg01
07648     03 5E 06 F6 | 	mov	arg01, #3
0764c     7C 04 B0 FD | 	call	#__system___gc_alloc_managed
07650     0C 6F 0A F6 | 	mov	local02, result1 wz
07654     10 00 90 AD |  if_e	jmp	#LR__0374
07658     37 6D 42 FC | 	wrbyte	local01, local02
0765c     01 6E 06 F1 | 	add	local02, #1
07660     37 01 48 FC | 	wrbyte	#0, local02
07664     01 6E 86 F1 | 	sub	local02, #1
07668                 | LR__0374
07668     37 19 02 F6 | 	mov	result1, local02
0766c     AF F0 03 F6 | 	mov	ptra, fp
07670     BA 00 A0 FD | 	call	#popregs_
07674                 | __system__Chr_S_ret
07674     2D 00 64 FD | 	ret
07678                 | 
07678                 | __system__Number_S
07678     09 5A 05 F6 | 	mov	COUNT_, #9
0767c     B0 00 A0 FD | 	call	#pushregs_
07680     2F 6D 02 F6 | 	mov	local01, arg01
07684     30 6F 0A F6 | 	mov	local02, arg02 wz
07688     31 71 02 F6 | 	mov	local03, arg03
0768c     40 00 90 5D |  if_ne	jmp	#LR__0377
07690     01 6E 06 F6 | 	mov	local02, #1
07694     38 73 02 F6 | 	mov	local04, local03
07698     01 74 06 F6 | 	mov	local05, #1
0769c                 | LR__0375
0769c     00 76 06 F6 | 	mov	local06, #0
076a0     36 73 1A F2 | 	cmp	local04, local01 wcz
076a4     01 76 66 E6 |  if_be	neg	local06, #1
076a8     00 78 06 F6 | 	mov	local07, #0
076ac     39 75 1A F2 | 	cmp	local05, local04 wcz
076b0     01 78 66 C6 |  if_b	neg	local07, #1
076b4     3C 77 CA F7 | 	test	local06, local07 wz
076b8     14 00 90 AD |  if_e	jmp	#LR__0376
076bc     39 75 02 F6 | 	mov	local05, local04
076c0     38 73 02 FD | 	qmul	local04, local03
076c4     18 72 62 FD | 	getqx	local04
076c8     01 6E 06 F1 | 	add	local02, #1
076cc     CC FF 9F FD | 	jmp	#LR__0375
076d0                 | LR__0376
076d0                 | LR__0377
076d0     20 6E 3E F3 | 	fle	local02, #32 wcz
076d4     37 5F 02 F6 | 	mov	arg01, local02
076d8     02 5E 06 F1 | 	add	arg01, #2
076dc     EC 03 B0 FD | 	call	#__system___gc_alloc_managed
076e0     0C 7B 02 F6 | 	mov	local08, result1
076e4     37 79 02 F6 | 	mov	local07, local02
076e8     3D 79 02 F1 | 	add	local07, local08
076ec     3C 01 48 FC | 	wrbyte	#0, local07
076f0     48 89 9F FE | 	loc	pa,	#(@LR__0379-@LR__0378)
076f4     93 00 A0 FD | 	call	#FCACHE_LOAD_
076f8                 | LR__0378
076f8     00 6E 1E F2 | 	cmp	local02, #0 wcz
076fc     34 00 90 ED |  if_be	jmp	#LR__0380
07700     01 6E 86 F1 | 	sub	local02, #1
07704     36 99 02 F6 | 	mov	muldiva_, local01
07708     38 9B 02 F6 | 	mov	muldivb_, local03
0770c     C2 00 A0 FD | 	call	#unsdivide_
07710     4C 7D 02 F6 | 	mov	local09, muldiva_
07714     4D 6D 02 F6 | 	mov	local01, muldivb_
07718     0A 7C 1E F2 | 	cmp	local09, #10 wcz
0771c     30 7C 06 C1 |  if_b	add	local09, #48
07720     37 7C 06 31 |  if_ae	add	local09, #55
07724     37 79 02 F6 | 	mov	local07, local02
07728     3D 79 02 F1 | 	add	local07, local08
0772c     3C 7D 42 FC | 	wrbyte	local09, local07
07730     C4 FF 9F FD | 	jmp	#LR__0378
07734                 | LR__0379
07734                 | LR__0380
07734     3D 19 02 F6 | 	mov	result1, local08
07738     AF F0 03 F6 | 	mov	ptra, fp
0773c     BA 00 A0 FD | 	call	#popregs_
07740                 | __system__Number_S_ret
07740     2D 00 64 FD | 	ret
07744                 | 
07744                 | __system__String_S
07744     05 5A 05 F6 | 	mov	COUNT_, #5
07748     B0 00 A0 FD | 	call	#pushregs_
0774c     2F 6D 02 F6 | 	mov	local01, arg01
07750     30 6F 02 F6 | 	mov	local02, arg02
07754     37 5F 02 F6 | 	mov	arg01, local02
07758     00 70 06 F6 | 	mov	local03, #0
0775c     B0 88 9F FE | 	loc	pa,	#(@LR__0382-@LR__0381)
07760     93 00 A0 FD | 	call	#FCACHE_LOAD_
07764                 | LR__0381
07764     2F 73 CA FA | 	rdbyte	local04, arg01 wz
07768     01 70 06 51 |  if_ne	add	local03, #1
0776c     01 5E 06 51 |  if_ne	add	arg01, #1
07770     F0 FF 9F 5D |  if_ne	jmp	#LR__0381
07774                 | LR__0382
07774     38 19 0A F6 | 	mov	result1, local03 wz
07778     47 00 00 AF 
0777c     F6 19 06 A6 |  if_e	mov	result1, ##@LR__0499
07780     4C 00 90 AD |  if_e	jmp	#LR__0384
07784     00 6C 5E F2 | 	cmps	local01, #0 wcz
07788     47 00 00 EF 
0778c     F7 19 06 E6 |  if_be	mov	result1, ##@LR__0500
07790     3C 00 90 ED |  if_be	jmp	#LR__0384
07794     36 5F 02 F6 | 	mov	arg01, local01
07798     02 5E 06 F1 | 	add	arg01, #2
0779c     2C 03 B0 FD | 	call	#__system___gc_alloc_managed
077a0     0C 75 0A F6 | 	mov	local05, result1 wz
077a4     24 00 90 AD |  if_e	jmp	#LR__0383
077a8     37 61 C2 FA | 	rdbyte	arg02, local02
077ac     3A 5F 02 F6 | 	mov	arg01, local05
077b0     36 63 02 F6 | 	mov	arg03, local01
077b4     A0 00 A0 FD | 	call	#\builtin_bytefill_
077b8     01 6C 06 F1 | 	add	local01, #1
077bc     3A 6D 02 F1 | 	add	local01, local05
077c0     36 01 48 FC | 	wrbyte	#0, local01
077c4     3A 19 02 F6 | 	mov	result1, local05
077c8     04 00 90 FD | 	jmp	#LR__0384
077cc                 | LR__0383
077cc     3A 19 02 F6 | 	mov	result1, local05
077d0                 | LR__0384
077d0     AF F0 03 F6 | 	mov	ptra, fp
077d4     BA 00 A0 FD | 	call	#popregs_
077d8                 | __system__String_S_ret
077d8     2D 00 64 FD | 	ret
077dc                 | 
077dc                 | __system___gc_ptrs
077dc     04 5A 05 F6 | 	mov	COUNT_, #4
077e0     B0 00 A0 FD | 	call	#pushregs_
077e4     F8 6C 02 F6 | 	mov	local01, __heap_ptr
077e8     36 6F 02 F6 | 	mov	local02, local01
077ec     07 00 00 FF 
077f0     F8 6F 06 F1 | 	add	local02, ##4088
077f4     36 71 0A FB | 	rdlong	local03, local01 wz
077f8     74 00 90 5D |  if_ne	jmp	#LR__0385
077fc     37 73 02 F6 | 	mov	local04, local02
07800     36 73 82 F1 | 	sub	local04, local01
07804     36 03 58 FC | 	wrword	#1, local01
07808     36 71 02 F6 | 	mov	local03, local01
0780c     02 70 06 F1 | 	add	local03, #2
07810     36 00 80 FF 
07814     38 21 59 FC | 	wrword	##27792, local03
07818     36 71 02 F6 | 	mov	local03, local01
0781c     04 70 06 F1 | 	add	local03, #4
07820     38 01 58 FC | 	wrword	#0, local03
07824     36 71 02 F6 | 	mov	local03, local01
07828     06 70 06 F1 | 	add	local03, #6
0782c     38 03 58 FC | 	wrword	#1, local03
07830     10 6C 06 F1 | 	add	local01, #16
07834     39 71 52 F6 | 	abs	local03, local04 wc
07838     04 70 46 F0 | 	shr	local03, #4
0783c     38 71 62 C6 |  if_b	neg	local03, local03
07840     36 71 52 FC | 	wrword	local03, local01
07844     36 71 02 F6 | 	mov	local03, local01
07848     02 70 06 F1 | 	add	local03, #2
0784c     36 00 80 FF 
07850     38 1F 59 FC | 	wrword	##27791, local03
07854     36 71 02 F6 | 	mov	local03, local01
07858     04 70 06 F1 | 	add	local03, #4
0785c     38 01 58 FC | 	wrword	#0, local03
07860     36 71 02 F6 | 	mov	local03, local01
07864     06 70 06 F1 | 	add	local03, #6
07868     38 01 58 FC | 	wrword	#0, local03
0786c     10 6C 86 F1 | 	sub	local01, #16
07870                 | LR__0385
07870     37 1B 02 F6 | 	mov	result2, local02
07874     36 19 02 F6 | 	mov	result1, local01
07878     AF F0 03 F6 | 	mov	ptra, fp
0787c     BA 00 A0 FD | 	call	#popregs_
07880                 | __system___gc_ptrs_ret
07880     2D 00 64 FD | 	ret
07884                 | 
07884                 | __system___gc_nextBlockPtr
07884     02 5A 05 F6 | 	mov	COUNT_, #2
07888     B0 00 A0 FD | 	call	#pushregs_
0788c     2F 6D 02 F6 | 	mov	local01, arg01
07890     36 6F EA FA | 	rdword	local02, local01 wz
07894     10 00 90 5D |  if_ne	jmp	#LR__0386
07898     47 00 00 FF 
0789c     F8 5F 06 F6 | 	mov	arg01, ##@LR__0501
078a0     F4 01 B0 FD | 	call	#__system___gc_errmsg
078a4     0C 00 90 FD | 	jmp	#LR__0387
078a8                 | LR__0386
078a8     36 19 02 F6 | 	mov	result1, local01
078ac     04 6E 66 F0 | 	shl	local02, #4
078b0     37 19 02 F1 | 	add	result1, local02
078b4                 | LR__0387
078b4     AF F0 03 F6 | 	mov	ptra, fp
078b8     BA 00 A0 FD | 	call	#popregs_
078bc                 | __system___gc_nextBlockPtr_ret
078bc     2D 00 64 FD | 	ret
078c0                 | 
078c0                 | __system___gc_tryalloc
078c0     0D 5A 05 F6 | 	mov	COUNT_, #13
078c4     B0 00 A0 FD | 	call	#pushregs_
078c8     2F 6D 02 F6 | 	mov	local01, arg01
078cc     30 6F 02 F6 | 	mov	local02, arg02
078d0     08 FF BF FD | 	call	#__system___gc_ptrs
078d4     0C 71 02 F6 | 	mov	local03, result1
078d8     0D 73 02 F6 | 	mov	local04, result2
078dc     38 75 02 F6 | 	mov	local05, local03
078e0     00 76 06 F6 | 	mov	local06, #0
078e4     68 87 9F FE | 	loc	pa,	#(@LR__0389-@LR__0388)
078e8     93 00 A0 FD | 	call	#FCACHE_LOAD_
078ec                 | LR__0388
078ec     3A 79 02 F6 | 	mov	local07, local05
078f0     3A 7B 02 F6 | 	mov	local08, local05
078f4     06 7A 06 F1 | 	add	local08, #6
078f8     3D 7D E2 FA | 	rdword	local09, local08
078fc     38 5F 02 F6 | 	mov	arg01, local03
07900     3E 61 0A F6 | 	mov	arg02, local09 wz
07904     00 18 06 A6 |  if_e	mov	result1, #0
07908     04 60 66 50 |  if_ne	shl	arg02, #4
0790c     30 5F 02 51 |  if_ne	add	arg01, arg02
07910     2F 19 02 56 |  if_ne	mov	result1, arg01
07914     0C 7F 02 F6 | 	mov	local10, result1
07918     3F 75 0A F6 | 	mov	local05, local10 wz
0791c     3A 7F 02 56 |  if_ne	mov	local10, local05
07920     3F 77 E2 5A |  if_ne	rdword	local06, local10
07924     00 74 0E F2 | 	cmp	local05, #0 wz
07928     10 00 90 AD |  if_e	jmp	#LR__0390
0792c     39 75 5A F2 | 	cmps	local05, local04 wcz
07930     08 00 90 3D |  if_ae	jmp	#LR__0390
07934     3B 6D 5A F2 | 	cmps	local01, local06 wcz
07938     B0 FF 9F 1D |  if_a	jmp	#LR__0388
0793c                 | LR__0389
0793c                 | LR__0390
0793c     00 74 0E F2 | 	cmp	local05, #0 wz
07940     3A 19 02 A6 |  if_e	mov	result1, local05
07944     44 01 90 AD |  if_e	jmp	#LR__0393
07948     3A 7F 02 F6 | 	mov	local10, local05
0794c     06 7E 06 F1 | 	add	local10, #6
07950     3F 81 E2 FA | 	rdword	local11, local10
07954     3B 6D 5A F2 | 	cmps	local01, local06 wcz
07958     C0 00 90 3D |  if_ae	jmp	#LR__0392
0795c     3A 6D 52 FC | 	wrword	local01, local05
07960     3A 5F 02 F6 | 	mov	arg01, local05
07964     36 7D 02 F6 | 	mov	local09, local01
07968     04 7C 66 F0 | 	shl	local09, #4
0796c     3E 5F 02 F1 | 	add	arg01, local09
07970     3B 7F 02 F6 | 	mov	local10, local06
07974     36 7F 82 F1 | 	sub	local10, local01
07978     2F 7F 52 FC | 	wrword	local10, arg01
0797c     2F 7F 02 F6 | 	mov	local10, arg01
07980     02 7E 06 F1 | 	add	local10, #2
07984     36 00 80 FF 
07988     3F 1F 59 FC | 	wrword	##27791, local10
0798c     3A 61 0A F6 | 	mov	arg02, local05 wz
07990     00 18 06 A6 |  if_e	mov	result1, #0
07994     38 61 82 51 |  if_ne	sub	arg02, local03
07998     04 60 46 50 |  if_ne	shr	arg02, #4
0799c     30 19 02 56 |  if_ne	mov	result1, arg02
079a0     2F 7D 02 F6 | 	mov	local09, arg01
079a4     04 7C 06 F1 | 	add	local09, #4
079a8     3E 19 52 FC | 	wrword	result1, local09
079ac     3A 7F 02 F6 | 	mov	local10, local05
079b0     06 7E 06 F1 | 	add	local10, #6
079b4     2F 7D 02 F6 | 	mov	local09, arg01
079b8     3F 7B E2 FA | 	rdword	local08, local10
079bc     06 7C 06 F1 | 	add	local09, #6
079c0     3E 7B 52 FC | 	wrword	local08, local09
079c4     2F 83 02 F6 | 	mov	local12, arg01
079c8     41 61 0A F6 | 	mov	arg02, local12 wz
079cc     00 18 06 A6 |  if_e	mov	result1, #0
079d0     38 61 82 51 |  if_ne	sub	arg02, local03
079d4     04 60 46 50 |  if_ne	shr	arg02, #4
079d8     30 19 02 56 |  if_ne	mov	result1, arg02
079dc     0C 81 02 F6 | 	mov	local11, result1
079e0     A0 FE BF FD | 	call	#__system___gc_nextBlockPtr
079e4     0C 85 0A F6 | 	mov	local13, result1 wz
079e8     30 00 90 AD |  if_e	jmp	#LR__0391
079ec     39 85 5A F2 | 	cmps	local13, local04 wcz
079f0     28 00 90 3D |  if_ae	jmp	#LR__0391
079f4     38 5F 02 F6 | 	mov	arg01, local03
079f8     41 61 0A F6 | 	mov	arg02, local12 wz
079fc     00 18 06 A6 |  if_e	mov	result1, #0
07a00     2F 61 82 51 |  if_ne	sub	arg02, arg01
07a04     04 60 46 50 |  if_ne	shr	arg02, #4
07a08     30 19 02 56 |  if_ne	mov	result1, arg02
07a0c     0C 7F 02 F6 | 	mov	local10, result1
07a10     42 7D 02 F6 | 	mov	local09, local13
07a14     04 7C 06 F1 | 	add	local09, #4
07a18     3E 7F 52 FC | 	wrword	local10, local09
07a1c                 | LR__0391
07a1c                 | LR__0392
07a1c     06 78 06 F1 | 	add	local07, #6
07a20     3C 81 52 FC | 	wrword	local11, local07
07a24     36 00 00 FF 
07a28     80 7E 06 F6 | 	mov	local10, ##27776
07a2c     37 7F 42 F5 | 	or	local10, local02
07a30     00 18 06 F6 | 	mov	result1, #0
07a34     01 18 62 FD | 	cogid	result1
07a38     0C 7F 42 F5 | 	or	local10, result1
07a3c     3A 7B 02 F6 | 	mov	local08, local05
07a40     02 7A 06 F1 | 	add	local08, #2
07a44     3D 7F 52 FC | 	wrword	local10, local08
07a48     38 7F 02 F6 | 	mov	local10, local03
07a4c     08 7E 06 F1 | 	add	local10, #8
07a50     3A 7D 02 F6 | 	mov	local09, local05
07a54     3F 7B E2 FA | 	rdword	local08, local10
07a58     06 7C 06 F1 | 	add	local09, #6
07a5c     3E 7B 52 FC | 	wrword	local08, local09
07a60     3A 61 0A F6 | 	mov	arg02, local05 wz
07a64     00 18 06 A6 |  if_e	mov	result1, #0
07a68     38 61 82 51 |  if_ne	sub	arg02, local03
07a6c     04 60 46 50 |  if_ne	shr	arg02, #4
07a70     30 19 02 56 |  if_ne	mov	result1, arg02
07a74     08 70 06 F1 | 	add	local03, #8
07a78     38 19 52 FC | 	wrword	result1, local03
07a7c     3A 19 02 F6 | 	mov	result1, local05
07a80     08 18 06 F1 | 	add	result1, #8
07a84     00 C0 31 FF 
07a88     00 18 46 F5 | 	or	result1, ##1669332992
07a8c                 | LR__0393
07a8c     AF F0 03 F6 | 	mov	ptra, fp
07a90     BA 00 A0 FD | 	call	#popregs_
07a94                 | __system___gc_tryalloc_ret
07a94     2D 00 64 FD | 	ret
07a98                 | 
07a98                 | __system___gc_errmsg
07a98     02 5A 05 F6 | 	mov	COUNT_, #2
07a9c     B0 00 A0 FD | 	call	#pushregs_
07aa0     2F 6D 02 F6 | 	mov	local01, arg01
07aa4                 | LR__0394
07aa4     36 6F CA FA | 	rdbyte	local02, local01 wz
07aa8     01 6C 06 F1 | 	add	local01, #1
07aac     0C 00 90 AD |  if_e	jmp	#LR__0395
07ab0     37 5F 02 F6 | 	mov	arg01, local02
07ab4     A0 F3 BF FD | 	call	#__system___tx
07ab8     E8 FF 9F FD | 	jmp	#LR__0394
07abc                 | LR__0395
07abc     00 18 06 F6 | 	mov	result1, #0
07ac0     AF F0 03 F6 | 	mov	ptra, fp
07ac4     BA 00 A0 FD | 	call	#popregs_
07ac8                 | __system___gc_errmsg_ret
07ac8     2D 00 64 FD | 	ret
07acc                 | 
07acc                 | __system___gc_alloc_managed
07acc     02 5A 05 F6 | 	mov	COUNT_, #2
07ad0     B0 00 A0 FD | 	call	#pushregs_
07ad4     2F 6D 02 F6 | 	mov	local01, arg01
07ad8     00 60 06 F6 | 	mov	arg02, #0
07adc     30 00 B0 FD | 	call	#__system___gc_doalloc
07ae0     0C 6F 0A F6 | 	mov	local02, result1 wz
07ae4     18 00 90 5D |  if_ne	jmp	#LR__0396
07ae8     00 6C 5E F2 | 	cmps	local01, #0 wcz
07aec     10 00 90 ED |  if_be	jmp	#LR__0396
07af0     48 00 00 FF 
07af4     14 5E 06 F6 | 	mov	arg01, ##@LR__0502
07af8     9C FF BF FD | 	call	#__system___gc_errmsg
07afc     04 00 90 FD | 	jmp	#LR__0397
07b00                 | LR__0396
07b00     37 19 02 F6 | 	mov	result1, local02
07b04                 | LR__0397
07b04     AF F0 03 F6 | 	mov	ptra, fp
07b08     BA 00 A0 FD | 	call	#popregs_
07b0c                 | __system___gc_alloc_managed_ret
07b0c     2D 00 64 FD | 	ret
07b10                 | 
07b10                 | __system___gc_doalloc
07b10     06 5A 05 F6 | 	mov	COUNT_, #6
07b14     B0 00 A0 FD | 	call	#pushregs_
07b18     2F 6D 0A F6 | 	mov	local01, arg01 wz
07b1c     30 6F 02 F6 | 	mov	local02, arg02
07b20     00 18 06 A6 |  if_e	mov	result1, #0
07b24     94 00 90 AD |  if_e	jmp	#LR__0405
07b28     17 6C 06 F1 | 	add	local01, #23
07b2c     0F 6C 26 F5 | 	andn	local01, #15
07b30     04 6C 46 F0 | 	shr	local01, #4
07b34     14 00 06 F1 | 	add	ptr___system__dat__, #20
07b38     00 5F 02 F6 | 	mov	arg01, ptr___system__dat__
07b3c     14 00 86 F1 | 	sub	ptr___system__dat__, #20
07b40     2C F2 BF FD | 	call	#__system___lockmem
07b44     36 5F 02 F6 | 	mov	arg01, local01
07b48     37 61 02 F6 | 	mov	arg02, local02
07b4c     70 FD BF FD | 	call	#__system___gc_tryalloc
07b50     0C 71 0A F6 | 	mov	local03, result1 wz
07b54     14 00 90 5D |  if_ne	jmp	#LR__0398
07b58     24 03 B0 FD | 	call	#__system___gc_docollect
07b5c     36 5F 02 F6 | 	mov	arg01, local01
07b60     37 61 02 F6 | 	mov	arg02, local02
07b64     58 FD BF FD | 	call	#__system___gc_tryalloc
07b68     0C 71 02 F6 | 	mov	local03, result1
07b6c                 | LR__0398
07b6c     14 00 06 F1 | 	add	ptr___system__dat__, #20
07b70     00 5F 02 F6 | 	mov	arg01, ptr___system__dat__
07b74     14 00 86 F1 | 	sub	ptr___system__dat__, #20
07b78     2F 01 68 FC | 	wrlong	#0, arg01
07b7c     00 70 0E F2 | 	cmp	local03, #0 wz
07b80     34 00 90 AD |  if_e	jmp	#LR__0404
07b84     04 6C 66 F0 | 	shl	local01, #4
07b88     08 6C 86 F1 | 	sub	local01, #8
07b8c     36 73 52 F6 | 	abs	local04, local01 wc
07b90     02 72 46 F0 | 	shr	local04, #2
07b94     39 73 62 C6 |  if_b	neg	local04, local04
07b98     39 75 0A F6 | 	mov	local05, local04 wz
07b9c     38 77 02 F6 | 	mov	local06, local03
07ba0     14 00 90 AD |  if_e	jmp	#LR__0403
07ba4     64 84 9F FE | 	loc	pa,	#(@LR__0401-@LR__0399)
07ba8     93 00 A0 FD | 	call	#FCACHE_LOAD_
07bac                 | LR__0399
07bac     3A 05 D8 FC | 	rep	@LR__0402, local05
07bb0                 | LR__0400
07bb0     3B 01 68 FC | 	wrlong	#0, local06
07bb4     04 76 06 F1 | 	add	local06, #4
07bb8                 | LR__0401
07bb8                 | LR__0402
07bb8                 | LR__0403
07bb8                 | LR__0404
07bb8     38 19 02 F6 | 	mov	result1, local03
07bbc                 | LR__0405
07bbc     AF F0 03 F6 | 	mov	ptra, fp
07bc0     BA 00 A0 FD | 	call	#popregs_
07bc4                 | __system___gc_doalloc_ret
07bc4     2D 00 64 FD | 	ret
07bc8                 | 
07bc8                 | __system___gc_isvalidptr
07bc8     31 1F 02 F6 | 	mov	_var01, arg03
07bcc     0F 21 02 F6 | 	mov	_var02, _var01
07bd0     00 F8 7F FF 
07bd4     00 20 06 F5 | 	and	_var02, ##-1048576
07bd8     00 C0 31 FF 
07bdc     00 20 0E F2 | 	cmp	_var02, ##1669332992 wz
07be0     00 18 06 56 |  if_ne	mov	result1, #0
07be4     5C 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
07be8     08 1E 86 F1 | 	sub	_var01, #8
07bec     00 F8 7F FF 
07bf0     00 1E 26 F5 | 	andn	_var01, ##-1048576
07bf4     2F 1F 5A F2 | 	cmps	_var01, arg01 wcz
07bf8     08 00 90 CD |  if_b	jmp	#LR__0406
07bfc     30 1F 5A F2 | 	cmps	_var01, arg02 wcz
07c00     08 00 90 CD |  if_b	jmp	#LR__0407
07c04                 | LR__0406
07c04     00 18 06 F6 | 	mov	result1, #0
07c08     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
07c0c                 | LR__0407
07c0c     0F 21 02 F6 | 	mov	_var02, _var01
07c10     2F 21 62 F5 | 	xor	_var02, arg01
07c14     0F 20 0E F5 | 	and	_var02, #15 wz
07c18     00 18 06 56 |  if_ne	mov	result1, #0
07c1c     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
07c20     0F 21 02 F6 | 	mov	_var02, _var01
07c24     02 20 06 F1 | 	add	_var02, #2
07c28     10 21 E2 FA | 	rdword	_var02, _var02
07c2c     7F 00 00 FF 
07c30     C0 21 06 F5 | 	and	_var02, ##65472
07c34     36 00 00 FF 
07c38     80 20 0E F2 | 	cmp	_var02, ##27776 wz
07c3c     00 18 06 56 |  if_ne	mov	result1, #0
07c40     0F 19 02 A6 |  if_e	mov	result1, _var01
07c44                 | __system___gc_isvalidptr_ret
07c44     2D 00 64 FD | 	ret
07c48                 | 
07c48                 | __system___gc_dofree
07c48     0D 5A 05 F6 | 	mov	COUNT_, #13
07c4c     B0 00 A0 FD | 	call	#pushregs_
07c50     2F 6D 02 F6 | 	mov	local01, arg01
07c54     84 FB BF FD | 	call	#__system___gc_ptrs
07c58     0C 6F 02 F6 | 	mov	local02, result1
07c5c     0D 71 02 F6 | 	mov	local03, result2
07c60     36 73 02 F6 | 	mov	local04, local01
07c64     02 72 06 F1 | 	add	local04, #2
07c68     36 00 80 FF 
07c6c     39 1F 59 FC | 	wrword	##27791, local04
07c70     36 75 02 F6 | 	mov	local05, local01
07c74     36 5F 02 F6 | 	mov	arg01, local01
07c78     08 FC BF FD | 	call	#__system___gc_nextBlockPtr
07c7c     0C 77 02 F6 | 	mov	local06, result1
07c80     C8 83 9F FE | 	loc	pa,	#(@LR__0409-@LR__0408)
07c84     93 00 A0 FD | 	call	#FCACHE_LOAD_
07c88                 | LR__0408
07c88     04 74 06 F1 | 	add	local05, #4
07c8c     3A 61 EA FA | 	rdword	arg02, local05 wz
07c90     37 5F 02 F6 | 	mov	arg01, local02
07c94     00 18 06 A6 |  if_e	mov	result1, #0
07c98     04 60 66 50 |  if_ne	shl	arg02, #4
07c9c     30 5F 02 51 |  if_ne	add	arg01, arg02
07ca0     2F 19 02 56 |  if_ne	mov	result1, arg01
07ca4     0C 75 0A F6 | 	mov	local05, result1 wz
07ca8     28 00 90 AD |  if_e	jmp	#LR__0410
07cac     3A 5F 02 F6 | 	mov	arg01, local05
07cb0     00 78 06 F6 | 	mov	local07, #0
07cb4     02 5E 06 F1 | 	add	arg01, #2
07cb8     2F 7B E2 FA | 	rdword	local08, arg01
07cbc     36 00 00 FF 
07cc0     8F 7A 0E F2 | 	cmp	local08, ##27791 wz
07cc4     01 78 66 A6 |  if_e	neg	local07, #1
07cc8     3C 19 02 F6 | 	mov	result1, local07
07ccc     0C 73 0A F6 | 	mov	local04, result1 wz
07cd0     B4 FF 9F AD |  if_e	jmp	#LR__0408
07cd4                 | LR__0409
07cd4                 | LR__0410
07cd4     00 74 0E F2 | 	cmp	local05, #0 wz
07cd8     37 75 02 A6 |  if_e	mov	local05, local02
07cdc     3A 73 02 F6 | 	mov	local04, local05
07ce0     06 72 06 F1 | 	add	local04, #6
07ce4     36 7D 02 F6 | 	mov	local09, local01
07ce8     39 7F E2 FA | 	rdword	local10, local04
07cec     06 7C 06 F1 | 	add	local09, #6
07cf0     3E 7F 52 FC | 	wrword	local10, local09
07cf4     36 61 0A F6 | 	mov	arg02, local01 wz
07cf8     00 18 06 A6 |  if_e	mov	result1, #0
07cfc     37 61 82 51 |  if_ne	sub	arg02, local02
07d00     04 60 46 50 |  if_ne	shr	arg02, #4
07d04     30 19 02 56 |  if_ne	mov	result1, arg02
07d08     3A 7D 02 F6 | 	mov	local09, local05
07d0c     06 7C 06 F1 | 	add	local09, #6
07d10     3E 19 52 FC | 	wrword	result1, local09
07d14     37 75 0A F2 | 	cmp	local05, local02 wz
07d18     84 00 90 AD |  if_e	jmp	#LR__0413
07d1c     3A 5F 02 F6 | 	mov	arg01, local05
07d20     60 FB BF FD | 	call	#__system___gc_nextBlockPtr
07d24     36 19 0A F2 | 	cmp	result1, local01 wz
07d28     74 00 90 5D |  if_ne	jmp	#LR__0412
07d2c     3A 73 E2 FA | 	rdword	local04, local05
07d30     36 81 E2 FA | 	rdword	local11, local01
07d34     40 73 02 F1 | 	add	local04, local11
07d38     3A 73 52 FC | 	wrword	local04, local05
07d3c     36 73 02 F6 | 	mov	local04, local01
07d40     02 72 06 F1 | 	add	local04, #2
07d44     39 01 58 FC | 	wrword	#0, local04
07d48     36 5F 02 F6 | 	mov	arg01, local01
07d4c     34 FB BF FD | 	call	#__system___gc_nextBlockPtr
07d50     0C 77 02 F6 | 	mov	local06, result1
07d54     38 77 5A F2 | 	cmps	local06, local03 wcz
07d58     20 00 90 3D |  if_ae	jmp	#LR__0411
07d5c     3A 61 0A F6 | 	mov	arg02, local05 wz
07d60     00 18 06 A6 |  if_e	mov	result1, #0
07d64     37 61 82 51 |  if_ne	sub	arg02, local02
07d68     04 60 46 50 |  if_ne	shr	arg02, #4
07d6c     30 19 02 56 |  if_ne	mov	result1, arg02
07d70     3B 7D 02 F6 | 	mov	local09, local06
07d74     04 7C 06 F1 | 	add	local09, #4
07d78     3E 19 52 FC | 	wrword	result1, local09
07d7c                 | LR__0411
07d7c     36 73 02 F6 | 	mov	local04, local01
07d80     06 72 06 F1 | 	add	local04, #6
07d84     3A 7D 02 F6 | 	mov	local09, local05
07d88     39 7F E2 FA | 	rdword	local10, local04
07d8c     06 7C 06 F1 | 	add	local09, #6
07d90     3E 7F 52 FC | 	wrword	local10, local09
07d94     06 6C 06 F1 | 	add	local01, #6
07d98     36 01 58 FC | 	wrword	#0, local01
07d9c     3A 6D 02 F6 | 	mov	local01, local05
07da0                 | LR__0412
07da0                 | LR__0413
07da0     36 5F 02 F6 | 	mov	arg01, local01
07da4     DC FA BF FD | 	call	#__system___gc_nextBlockPtr
07da8     0C 83 0A F6 | 	mov	local12, result1 wz
07dac     C0 00 90 AD |  if_e	jmp	#LR__0415
07db0     38 83 5A F2 | 	cmps	local12, local03 wcz
07db4     B8 00 90 3D |  if_ae	jmp	#LR__0415
07db8     41 5F 02 F6 | 	mov	arg01, local12
07dbc     00 78 06 F6 | 	mov	local07, #0
07dc0     02 5E 06 F1 | 	add	arg01, #2
07dc4     2F 7B E2 FA | 	rdword	local08, arg01
07dc8     36 00 00 FF 
07dcc     8F 7A 0E F2 | 	cmp	local08, ##27791 wz
07dd0     01 78 66 A6 |  if_e	neg	local07, #1
07dd4     3C 19 0A F6 | 	mov	result1, local07 wz
07dd8     94 00 90 AD |  if_e	jmp	#LR__0415
07ddc     36 75 02 F6 | 	mov	local05, local01
07de0     3A 73 E2 FA | 	rdword	local04, local05
07de4     41 6D 02 F6 | 	mov	local01, local12
07de8     36 81 E2 FA | 	rdword	local11, local01
07dec     40 73 02 F1 | 	add	local04, local11
07df0     3A 85 02 F6 | 	mov	local13, local05
07df4     42 73 52 FC | 	wrword	local04, local13
07df8     36 73 02 F6 | 	mov	local04, local01
07dfc     06 72 06 F1 | 	add	local04, #6
07e00     3A 7D 02 F6 | 	mov	local09, local05
07e04     39 7F E2 FA | 	rdword	local10, local04
07e08     06 7C 06 F1 | 	add	local09, #6
07e0c     3E 7F 52 FC | 	wrword	local10, local09
07e10     36 73 02 F6 | 	mov	local04, local01
07e14     02 72 06 F1 | 	add	local04, #2
07e18     39 55 59 FC | 	wrword	#170, local04
07e1c     36 73 02 F6 | 	mov	local04, local01
07e20     06 72 06 F1 | 	add	local04, #6
07e24     00 7C 06 F6 | 	mov	local09, #0
07e28     39 01 58 FC | 	wrword	#0, local04
07e2c     36 5F 02 F6 | 	mov	arg01, local01
07e30     50 FA BF FD | 	call	#__system___gc_nextBlockPtr
07e34     0C 73 02 F6 | 	mov	local04, result1
07e38     39 77 0A F6 | 	mov	local06, local04 wz
07e3c     30 00 90 AD |  if_e	jmp	#LR__0414
07e40     38 77 5A F2 | 	cmps	local06, local03 wcz
07e44     28 00 90 3D |  if_ae	jmp	#LR__0414
07e48     37 5F 02 F6 | 	mov	arg01, local02
07e4c     3A 61 0A F6 | 	mov	arg02, local05 wz
07e50     00 18 06 A6 |  if_e	mov	result1, #0
07e54     2F 61 82 51 |  if_ne	sub	arg02, arg01
07e58     04 60 46 50 |  if_ne	shr	arg02, #4
07e5c     30 19 02 56 |  if_ne	mov	result1, arg02
07e60     0C 73 02 F6 | 	mov	local04, result1
07e64     3B 7D 02 F6 | 	mov	local09, local06
07e68     04 7C 06 F1 | 	add	local09, #4
07e6c     3E 73 52 FC | 	wrword	local04, local09
07e70                 | LR__0414
07e70                 | LR__0415
07e70     3B 19 02 F6 | 	mov	result1, local06
07e74     AF F0 03 F6 | 	mov	ptra, fp
07e78     BA 00 A0 FD | 	call	#popregs_
07e7c                 | __system___gc_dofree_ret
07e7c     2D 00 64 FD | 	ret
07e80                 | 
07e80                 | __system___gc_docollect
07e80     09 5A 05 F6 | 	mov	COUNT_, #9
07e84     B0 00 A0 FD | 	call	#pushregs_
07e88     50 F9 BF FD | 	call	#__system___gc_ptrs
07e8c     0D 6D 02 F6 | 	mov	local01, result2
07e90     0C 6F 02 F6 | 	mov	local02, result1
07e94     37 5F 02 F6 | 	mov	arg01, local02
07e98     E8 F9 BF FD | 	call	#__system___gc_nextBlockPtr
07e9c     0C 71 0A F6 | 	mov	local03, result1 wz
07ea0     00 18 06 F6 | 	mov	result1, #0
07ea4     01 18 62 FD | 	cogid	result1
07ea8     0C 73 02 F6 | 	mov	local04, result1
07eac     34 00 90 AD |  if_e	jmp	#LR__0417
07eb0                 | LR__0416
07eb0     36 71 5A F2 | 	cmps	local03, local01 wcz
07eb4     2C 00 90 3D |  if_ae	jmp	#LR__0417
07eb8     38 75 02 F6 | 	mov	local05, local03
07ebc     02 74 06 F1 | 	add	local05, #2
07ec0     3A 77 E2 FA | 	rdword	local06, local05
07ec4     20 76 26 F5 | 	andn	local06, #32
07ec8     38 79 02 F6 | 	mov	local07, local03
07ecc     02 78 06 F1 | 	add	local07, #2
07ed0     3C 77 52 FC | 	wrword	local06, local07
07ed4     38 5F 02 F6 | 	mov	arg01, local03
07ed8     A8 F9 BF FD | 	call	#__system___gc_nextBlockPtr
07edc     0C 71 0A F6 | 	mov	local03, result1 wz
07ee0     CC FF 9F 5D |  if_ne	jmp	#LR__0416
07ee4                 | LR__0417
07ee4     00 76 06 F6 | 	mov	local06, #0
07ee8     00 5E 06 F6 | 	mov	arg01, #0
07eec     18 EE BF FD | 	call	#__system____topofstack
07ef0     0C 61 02 F6 | 	mov	arg02, result1
07ef4     3B 5F 02 F6 | 	mov	arg01, local06
07ef8     9C 00 B0 FD | 	call	#__system___gc_markhub
07efc     2C 01 B0 FD | 	call	#__system___gc_markcog
07f00     37 5F 02 F6 | 	mov	arg01, local02
07f04     7C F9 BF FD | 	call	#__system___gc_nextBlockPtr
07f08     0C 7B 0A F6 | 	mov	local08, result1 wz
07f0c     10 00 90 5D |  if_ne	jmp	#LR__0418
07f10     48 00 00 FF 
07f14     31 5E 06 F6 | 	mov	arg01, ##@LR__0503
07f18     7C FB BF FD | 	call	#__system___gc_errmsg
07f1c     6C 00 90 FD | 	jmp	#LR__0424
07f20                 | LR__0418
07f20                 | LR__0419
07f20     3D 71 02 F6 | 	mov	local03, local08
07f24     38 5F 02 F6 | 	mov	arg01, local03
07f28     58 F9 BF FD | 	call	#__system___gc_nextBlockPtr
07f2c     0C 7B 02 F6 | 	mov	local08, result1
07f30     38 77 02 F6 | 	mov	local06, local03
07f34     02 76 06 F1 | 	add	local06, #2
07f38     3B 7D E2 FA | 	rdword	local09, local06
07f3c     20 7C CE F7 | 	test	local09, #32 wz
07f40     38 00 90 5D |  if_ne	jmp	#LR__0422
07f44     3E 75 02 F6 | 	mov	local05, local09
07f48     10 74 0E F5 | 	and	local05, #16 wz
07f4c     2C 00 90 5D |  if_ne	jmp	#LR__0422
07f50     3E 77 02 F6 | 	mov	local06, local09
07f54     0F 76 06 F5 | 	and	local06, #15
07f58     3B 7D 02 F6 | 	mov	local09, local06
07f5c     39 7D 0A F2 | 	cmp	local09, local04 wz
07f60     08 00 90 AD |  if_e	jmp	#LR__0420
07f64     0E 7C 0E F2 | 	cmp	local09, #14 wz
07f68     10 00 90 5D |  if_ne	jmp	#LR__0421
07f6c                 | LR__0420
07f6c     38 5F 02 F6 | 	mov	arg01, local03
07f70     D4 FC BF FD | 	call	#__system___gc_dofree
07f74     0C 77 02 F6 | 	mov	local06, result1
07f78     3B 7B 02 F6 | 	mov	local08, local06
07f7c                 | LR__0421
07f7c                 | LR__0422
07f7c     00 7A 0E F2 | 	cmp	local08, #0 wz
07f80     08 00 90 AD |  if_e	jmp	#LR__0423
07f84     36 7B 5A F2 | 	cmps	local08, local01 wcz
07f88     94 FF 9F CD |  if_b	jmp	#LR__0419
07f8c                 | LR__0423
07f8c                 | LR__0424
07f8c     AF F0 03 F6 | 	mov	ptra, fp
07f90     BA 00 A0 FD | 	call	#popregs_
07f94                 | __system___gc_docollect_ret
07f94     2D 00 64 FD | 	ret
07f98                 | 
07f98                 | __system___gc_markhub
07f98     09 5A 05 F6 | 	mov	COUNT_, #9
07f9c     B0 00 A0 FD | 	call	#pushregs_
07fa0     2F 6D 02 F6 | 	mov	local01, arg01
07fa4     30 6F 02 F6 | 	mov	local02, arg02
07fa8     30 F8 BF FD | 	call	#__system___gc_ptrs
07fac     0C 71 02 F6 | 	mov	local03, result1
07fb0     0D 73 02 F6 | 	mov	local04, result2
07fb4                 | LR__0425
07fb4     37 6D 5A F2 | 	cmps	local01, local02 wcz
07fb8     64 00 90 3D |  if_ae	jmp	#LR__0426
07fbc     36 63 02 FB | 	rdlong	arg03, local01
07fc0     04 6C 06 F1 | 	add	local01, #4
07fc4     39 61 02 F6 | 	mov	arg02, local04
07fc8     38 5F 02 F6 | 	mov	arg01, local03
07fcc     F8 FB BF FD | 	call	#__system___gc_isvalidptr
07fd0     0C 75 0A F6 | 	mov	local05, result1 wz
07fd4     DC FF 9F AD |  if_e	jmp	#LR__0425
07fd8     3A 5F 02 F6 | 	mov	arg01, local05
07fdc     00 76 06 F6 | 	mov	local06, #0
07fe0     02 5E 06 F1 | 	add	arg01, #2
07fe4     2F 79 E2 FA | 	rdword	local07, arg01
07fe8     36 00 00 FF 
07fec     8F 78 0E F2 | 	cmp	local07, ##27791 wz
07ff0     01 76 66 A6 |  if_e	neg	local06, #1
07ff4     3B 19 0A F6 | 	mov	result1, local06 wz
07ff8     B8 FF 9F 5D |  if_ne	jmp	#LR__0425
07ffc     3A 7B 02 F6 | 	mov	local08, local05
08000     02 7A 06 F1 | 	add	local08, #2
08004     3D 7D E2 FA | 	rdword	local09, local08
08008     0F 7C 26 F5 | 	andn	local09, #15
0800c     2E 7C 46 F5 | 	or	local09, #46
08010     3A 7B 02 F6 | 	mov	local08, local05
08014     02 7A 06 F1 | 	add	local08, #2
08018     3D 7D 52 FC | 	wrword	local09, local08
0801c     94 FF 9F FD | 	jmp	#LR__0425
08020                 | LR__0426
08020     AF F0 03 F6 | 	mov	ptra, fp
08024     BA 00 A0 FD | 	call	#popregs_
08028                 | __system___gc_markhub_ret
08028     2D 00 64 FD | 	ret
0802c                 | 
0802c                 | __system___gc_markcog
0802c     06 5A 05 F6 | 	mov	COUNT_, #6
08030     B0 00 A0 FD | 	call	#pushregs_
08034     A4 F7 BF FD | 	call	#__system___gc_ptrs
08038     0C 6D 02 F6 | 	mov	local01, result1
0803c     0D 6F 02 F6 | 	mov	local02, result2
08040     00 70 06 F6 | 	mov	local03, #0
08044                 | LR__0427
08044     F0 73 06 F6 | 	mov	local04, #496
08048     38 73 82 F1 | 	sub	local04, local03
0804c     F0 73 06 F1 | 	add	local04, #496
08050                 | 	'.live	local04
08050     00 72 96 F9 | 	alts	local04, #0
08054     39 75 02 F6 | 	mov	local05, local04
08058     36 5F 02 F6 | 	mov	arg01, local01
0805c     37 61 02 F6 | 	mov	arg02, local02
08060     3A 63 02 F6 | 	mov	arg03, local05
08064     60 FB BF FD | 	call	#__system___gc_isvalidptr
08068     0C 75 0A F6 | 	mov	local05, result1 wz
0806c     18 00 90 AD |  if_e	jmp	#LR__0428
08070     3A 77 02 F6 | 	mov	local06, local05
08074     02 76 06 F1 | 	add	local06, #2
08078     3B 73 E2 FA | 	rdword	local04, local06
0807c     20 72 46 F5 | 	or	local04, #32
08080     02 74 06 F1 | 	add	local05, #2
08084     3A 73 52 FC | 	wrword	local04, local05
08088                 | LR__0428
08088     01 70 06 F1 | 	add	local03, #1
0808c     F0 71 5E F2 | 	cmps	local03, #496 wcz
08090     B0 FF 9F CD |  if_b	jmp	#LR__0427
08094     AF F0 03 F6 | 	mov	ptra, fp
08098     BA 00 A0 FD | 	call	#popregs_
0809c                 | __system___gc_markcog_ret
0809c     2D 00 64 FD | 	ret
080a0                 | 
080a0                 | __system__write
080a0     03 5A 05 F6 | 	mov	COUNT_, #3
080a4     B0 00 A0 FD | 	call	#pushregs_
080a8     2F 6D 02 F6 | 	mov	local01, arg01
080ac     30 6F 02 F6 | 	mov	local02, arg02
080b0     31 71 02 F6 | 	mov	local03, arg03
080b4     0A 6C 1E F2 | 	cmp	local01, #10 wcz
080b8     14 00 90 CD |  if_b	jmp	#LR__0429
080bc     1C 00 06 F1 | 	add	ptr___system__dat__, #28
080c0     00 0B 68 FC | 	wrlong	#5, ptr___system__dat__
080c4     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
080c8     01 18 66 F6 | 	neg	result1, #1
080cc     28 00 90 FD | 	jmp	#LR__0430
080d0                 | LR__0429
080d0     36 5F 02 F6 | 	mov	arg01, local01
080d4     01 5E 66 F0 | 	shl	arg01, #1
080d8     36 5F 02 F1 | 	add	arg01, local01
080dc     04 5E 66 F0 | 	shl	arg01, #4
080e0     24 00 06 F1 | 	add	ptr___system__dat__, #36
080e4     00 5F 02 F1 | 	add	arg01, ptr___system__dat__
080e8     37 61 02 F6 | 	mov	arg02, local02
080ec     38 63 02 F6 | 	mov	arg03, local03
080f0     24 00 86 F1 | 	sub	ptr___system__dat__, #36
080f4     9C 08 B0 FD | 	call	#__system___vfswrite
080f8                 | LR__0430
080f8     AF F0 03 F6 | 	mov	ptra, fp
080fc     BA 00 A0 FD | 	call	#popregs_
08100                 | __system__write_ret
08100     2D 00 64 FD | 	ret
08104                 | 
08104                 | __system__read
08104     03 5A 05 F6 | 	mov	COUNT_, #3
08108     B0 00 A0 FD | 	call	#pushregs_
0810c     2F 6D 02 F6 | 	mov	local01, arg01
08110     30 6F 02 F6 | 	mov	local02, arg02
08114     31 71 02 F6 | 	mov	local03, arg03
08118     0A 6C 1E F2 | 	cmp	local01, #10 wcz
0811c     14 00 90 CD |  if_b	jmp	#LR__0431
08120     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08124     00 0B 68 FC | 	wrlong	#5, ptr___system__dat__
08128     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
0812c     01 18 66 F6 | 	neg	result1, #1
08130     28 00 90 FD | 	jmp	#LR__0432
08134                 | LR__0431
08134     36 5F 02 F6 | 	mov	arg01, local01
08138     01 5E 66 F0 | 	shl	arg01, #1
0813c     36 5F 02 F1 | 	add	arg01, local01
08140     04 5E 66 F0 | 	shl	arg01, #4
08144     24 00 06 F1 | 	add	ptr___system__dat__, #36
08148     00 5F 02 F1 | 	add	arg01, ptr___system__dat__
0814c     37 61 02 F6 | 	mov	arg02, local02
08150     38 63 02 F6 | 	mov	arg03, local03
08154     24 00 86 F1 | 	sub	ptr___system__dat__, #36
08158     E4 09 B0 FD | 	call	#__system___vfsread
0815c                 | LR__0432
0815c     AF F0 03 F6 | 	mov	ptra, fp
08160     BA 00 A0 FD | 	call	#popregs_
08164                 | __system__read_ret
08164     2D 00 64 FD | 	ret
08168                 | 
08168                 | __system__close
08168     01 5A 05 F6 | 	mov	COUNT_, #1
0816c     B0 00 A0 FD | 	call	#pushregs_
08170     2F 6D 02 F6 | 	mov	local01, arg01
08174     0A 6C 1E F2 | 	cmp	local01, #10 wcz
08178     14 00 90 CD |  if_b	jmp	#LR__0433
0817c     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08180     00 0B 68 FC | 	wrlong	#5, ptr___system__dat__
08184     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08188     01 18 66 F6 | 	neg	result1, #1
0818c     20 00 90 FD | 	jmp	#LR__0434
08190                 | LR__0433
08190     36 5F 02 F6 | 	mov	arg01, local01
08194     01 5E 66 F0 | 	shl	arg01, #1
08198     36 5F 02 F1 | 	add	arg01, local01
0819c     04 5E 66 F0 | 	shl	arg01, #4
081a0     24 00 06 F1 | 	add	ptr___system__dat__, #36
081a4     00 5F 02 F1 | 	add	arg01, ptr___system__dat__
081a8     24 00 86 F1 | 	sub	ptr___system__dat__, #36
081ac     6C 03 B0 FD | 	call	#__system___closeraw
081b0                 | LR__0434
081b0     AF F0 03 F6 | 	mov	ptra, fp
081b4     BA 00 A0 FD | 	call	#popregs_
081b8                 | __system__close_ret
081b8     2D 00 64 FD | 	ret
081bc                 | 
081bc                 | __system__lseek
081bc     09 5A 05 F6 | 	mov	COUNT_, #9
081c0     B0 00 A0 FD | 	call	#pushregs_
081c4     2F 6D 02 F6 | 	mov	local01, arg01
081c8     30 6F 02 F6 | 	mov	local02, arg02
081cc     31 71 02 F6 | 	mov	local03, arg03
081d0     0A 6C 1E F2 | 	cmp	local01, #10 wcz
081d4     14 00 90 CD |  if_b	jmp	#LR__0435
081d8     1C 00 06 F1 | 	add	ptr___system__dat__, #28
081dc     00 0B 68 FC | 	wrlong	#5, ptr___system__dat__
081e0     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
081e4     01 18 66 F6 | 	neg	result1, #1
081e8     C8 00 90 FD | 	jmp	#LR__0439
081ec                 | LR__0435
081ec     36 73 02 F6 | 	mov	local04, local01
081f0     01 72 66 F0 | 	shl	local04, #1
081f4     36 73 02 F1 | 	add	local04, local01
081f8     04 72 66 F0 | 	shl	local04, #4
081fc     24 00 06 F1 | 	add	ptr___system__dat__, #36
08200     00 73 02 F1 | 	add	local04, ptr___system__dat__
08204     2C 72 06 F1 | 	add	local04, #44
08208     39 75 0A FB | 	rdlong	local05, local04 wz
0820c     2C 72 86 F1 | 	sub	local04, #44
08210     24 00 86 F1 | 	sub	ptr___system__dat__, #36
08214     14 00 90 5D |  if_ne	jmp	#LR__0436
08218     1C 00 06 F1 | 	add	ptr___system__dat__, #28
0821c     00 21 68 FC | 	wrlong	#16, ptr___system__dat__
08220     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08224     01 18 66 F6 | 	neg	result1, #1
08228     88 00 90 FD | 	jmp	#LR__0439
0822c                 | LR__0436
0822c     08 72 06 F1 | 	add	local04, #8
08230     39 75 02 FB | 	rdlong	local05, local04
08234     08 72 86 F1 | 	sub	local04, #8
08238     40 74 CE F7 | 	test	local05, #64 wz
0823c     14 00 90 AD |  if_e	jmp	#LR__0437
08240     08 72 06 F1 | 	add	local04, #8
08244     39 75 02 FB | 	rdlong	local05, local04
08248     80 74 46 F5 | 	or	local05, #128
0824c     39 75 62 FC | 	wrlong	local05, local04
08250     08 72 86 F1 | 	sub	local04, #8
08254                 | LR__0437
08254     2C 72 06 F1 | 	add	local04, #44
08258     39 75 02 FB | 	rdlong	local05, local04
0825c     2C 72 86 F1 | 	sub	local04, #44
08260     3A 77 02 FB | 	rdlong	local06, local05
08264     04 74 06 F1 | 	add	local05, #4
08268     3A 79 02 FB | 	rdlong	local07, local05
0826c     39 5F 02 F6 | 	mov	arg01, local04
08270     37 61 02 F6 | 	mov	arg02, local02
08274     38 63 02 F6 | 	mov	arg03, local03
08278     FD 7A 02 F6 | 	mov	local08, objptr
0827c     3B FB 01 F6 | 	mov	objptr, local06
08280     2D 78 62 FD | 	call	local07
08284     3D FB 01 F6 | 	mov	objptr, local08
08288     0C 7D 02 F6 | 	mov	local09, result1
0828c     00 7C 5E F2 | 	cmps	local09, #0 wcz
08290     1C 00 90 3D |  if_ae	jmp	#LR__0438
08294     3E 5F 6A F6 | 	neg	arg01, local09 wz
08298     1C 00 06 F1 | 	add	ptr___system__dat__, #28
0829c     00 5F 62 FC | 	wrlong	arg01, ptr___system__dat__
082a0     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
082a4     01 18 66 56 |  if_ne	neg	result1, #1
082a8     00 18 06 A6 |  if_e	mov	result1, #0
082ac     04 00 90 FD | 	jmp	#LR__0439
082b0                 | LR__0438
082b0     3E 19 02 F6 | 	mov	result1, local09
082b4                 | LR__0439
082b4     AF F0 03 F6 | 	mov	ptra, fp
082b8     BA 00 A0 FD | 	call	#popregs_
082bc                 | __system__lseek_ret
082bc     2D 00 64 FD | 	ret
082c0                 | 
082c0                 | __system____getftab
082c0     0A 5E 1E F2 | 	cmp	arg01, #10 wcz
082c4     00 18 06 36 |  if_ae	mov	result1, #0
082c8     1C 00 90 3D |  if_ae	jmp	#__system____getftab_ret
082cc     2F 19 02 F6 | 	mov	result1, arg01
082d0     01 18 66 F0 | 	shl	result1, #1
082d4     2F 19 02 F1 | 	add	result1, arg01
082d8     04 18 66 F0 | 	shl	result1, #4
082dc     24 00 06 F1 | 	add	ptr___system__dat__, #36
082e0     00 19 02 F1 | 	add	result1, ptr___system__dat__
082e4     24 00 86 F1 | 	sub	ptr___system__dat__, #36
082e8                 | __system____getftab_ret
082e8     2D 00 64 FD | 	ret
082ec                 | 
082ec                 | __system___strrev
082ec     2F 1F CA FA | 	rdbyte	_var01, arg01 wz
082f0     40 00 90 AD |  if_e	jmp	#__system___strrev_ret
082f4     2F 21 02 F6 | 	mov	_var02, arg01
082f8     10 7D 9F FE | 	loc	pa,	#(@LR__0441-@LR__0440)
082fc     93 00 A0 FD | 	call	#FCACHE_LOAD_
08300                 | LR__0440
08300     10 1F CA FA | 	rdbyte	_var01, _var02 wz
08304     01 20 06 51 |  if_ne	add	_var02, #1
08308     F4 FF 9F 5D |  if_ne	jmp	#LR__0440
0830c                 | LR__0441
0830c     01 20 86 F1 | 	sub	_var02, #1
08310                 | LR__0442
08310     2F 21 5A F2 | 	cmps	_var02, arg01 wcz
08314     1C 00 90 ED |  if_be	jmp	#LR__0443
08318     2F 23 C2 FA | 	rdbyte	_var03, arg01
0831c     10 25 C2 FA | 	rdbyte	_var04, _var02
08320     2F 25 42 FC | 	wrbyte	_var04, arg01
08324     10 23 42 FC | 	wrbyte	_var03, _var02
08328     01 5E 06 F1 | 	add	arg01, #1
0832c     01 20 86 F1 | 	sub	_var02, #1
08330     DC FF 9F FD | 	jmp	#LR__0442
08334                 | LR__0443
08334                 | __system___strrev_ret
08334     2D 00 64 FD | 	ret
08338                 | 
08338                 | __system___fmtpad
08338     0C 5A 05 F6 | 	mov	COUNT_, #12
0833c     B0 00 A0 FD | 	call	#pushregs_
08340     2F 6D 02 F6 | 	mov	local01, arg01
08344     30 6F 02 F6 | 	mov	local02, arg02
08348     32 71 02 F6 | 	mov	local03, arg04
0834c     37 73 EA F8 | 	getbyte	local04, local02, #1
08350     16 6E 46 F0 | 	shr	local02, #22
08354     03 6E 0E F5 | 	and	local02, #3 wz
08358     00 74 06 F6 | 	mov	local05, #0
0835c     01 6E 06 A6 |  if_e	mov	local02, #1
08360     38 6F CA F7 | 	test	local02, local03 wz
08364     00 18 06 A6 |  if_e	mov	result1, #0
08368     84 00 90 AD |  if_e	jmp	#LR__0447
0836c     31 73 82 F1 | 	sub	local04, arg03
08370     39 77 02 F6 | 	mov	local06, local04
08374     00 76 5E F2 | 	cmps	local06, #0 wcz
08378     00 18 06 E6 |  if_be	mov	result1, #0
0837c     70 00 90 ED |  if_be	jmp	#LR__0447
08380     03 6E 0E F2 | 	cmp	local02, #3 wz
08384     18 00 90 5D |  if_ne	jmp	#LR__0444
08388     01 70 0E F2 | 	cmp	local03, #1 wz
0838c     6E 78 62 FD | 	wrz	local07
08390     3C 77 02 F1 | 	add	local06, local07
08394     3B 77 52 F6 | 	abs	local06, local06 wc
08398     01 76 46 F0 | 	shr	local06, #1
0839c     3B 77 62 C6 |  if_b	neg	local06, local06
083a0                 | LR__0444
083a0     00 7A 06 F6 | 	mov	local08, #0
083a4                 | LR__0445
083a4     3B 7B 5A F2 | 	cmps	local08, local06 wcz
083a8     40 00 90 3D |  if_ae	jmp	#LR__0446
083ac     36 7D 02 F6 | 	mov	local09, local01
083b0     3E 79 02 FB | 	rdlong	local07, local09
083b4     04 7C 06 F1 | 	add	local09, #4
083b8     3E 7F 02 FB | 	rdlong	local10, local09
083bc     20 5E 06 F6 | 	mov	arg01, #32
083c0     FD 80 02 F6 | 	mov	local11, objptr
083c4     3C FB 01 F6 | 	mov	objptr, local07
083c8     2D 7E 62 FD | 	call	local10
083cc     40 FB 01 F6 | 	mov	objptr, local11
083d0     0C 83 02 F6 | 	mov	local12, result1
083d4     00 82 5E F2 | 	cmps	local12, #0 wcz
083d8     41 19 02 C6 |  if_b	mov	result1, local12
083dc     10 00 90 CD |  if_b	jmp	#LR__0447
083e0     41 75 02 F1 | 	add	local05, local12
083e4     01 7A 06 F1 | 	add	local08, #1
083e8     B8 FF 9F FD | 	jmp	#LR__0445
083ec                 | LR__0446
083ec     3A 19 02 F6 | 	mov	result1, local05
083f0                 | LR__0447
083f0     AF F0 03 F6 | 	mov	ptra, fp
083f4     BA 00 A0 FD | 	call	#popregs_
083f8                 | __system___fmtpad_ret
083f8     2D 00 64 FD | 	ret
083fc                 | 
083fc                 | __system___uitoa
083fc     09 5A 05 F6 | 	mov	COUNT_, #9
08400     B0 00 A0 FD | 	call	#pushregs_
08404     2F 6D 02 F6 | 	mov	local01, arg01
08408     30 6F 02 F6 | 	mov	local02, arg02
0840c     31 71 02 F6 | 	mov	local03, arg03
08410     32 73 02 F6 | 	mov	local04, arg04
08414     33 75 0A F6 | 	mov	local05, arg05 wz
08418     36 77 02 F6 | 	mov	local06, local01
0841c     00 78 06 F6 | 	mov	local07, #0
08420     37 7A 06 56 |  if_ne	mov	local08, #55
08424     57 7A 06 A6 |  if_e	mov	local08, #87
08428                 | LR__0448
08428     37 99 02 F6 | 	mov	muldiva_, local02
0842c     38 9B 02 F6 | 	mov	muldivb_, local03
08430     C2 00 A0 FD | 	call	#unsdivide_
08434     4C 7D 02 F6 | 	mov	local09, muldiva_
08438     0A 7C 1E F2 | 	cmp	local09, #10 wcz
0843c     30 7C 06 C1 |  if_b	add	local09, #48
08440     3D 7D 02 31 |  if_ae	add	local09, local08
08444     3B 7D 42 FC | 	wrbyte	local09, local06
08448     37 99 02 F6 | 	mov	muldiva_, local02
0844c     38 9B 02 F6 | 	mov	muldivb_, local03
08450     01 76 06 F1 | 	add	local06, #1
08454     C2 00 A0 FD | 	call	#unsdivide_
08458     4D 6F 0A F6 | 	mov	local02, muldivb_ wz
0845c     01 78 06 F1 | 	add	local07, #1
08460     C4 FF 9F 5D |  if_ne	jmp	#LR__0448
08464     39 79 1A F2 | 	cmp	local07, local04 wcz
08468     BC FF 9F CD |  if_b	jmp	#LR__0448
0846c     3B 01 48 FC | 	wrbyte	#0, local06
08470     36 5F 02 F6 | 	mov	arg01, local01
08474     74 FE BF FD | 	call	#__system___strrev
08478     3C 19 02 F6 | 	mov	result1, local07
0847c     AF F0 03 F6 | 	mov	ptra, fp
08480     BA 00 A0 FD | 	call	#popregs_
08484                 | __system___uitoa_ret
08484     2D 00 64 FD | 	ret
08488                 | 
08488                 | __system___gettxfunc
08488     03 5A 05 F6 | 	mov	COUNT_, #3
0848c     B0 00 A0 FD | 	call	#pushregs_
08490     2C FE BF FD | 	call	#__system____getftab
08494     0C 6D 0A F6 | 	mov	local01, result1 wz
08498     14 00 90 AD |  if_e	jmp	#LR__0449
0849c     08 6C 06 F1 | 	add	local01, #8
084a0     36 6F 02 FB | 	rdlong	local02, local01
084a4     08 6C 86 F1 | 	sub	local01, #8
084a8     37 71 0A F6 | 	mov	local03, local02 wz
084ac     08 00 90 5D |  if_ne	jmp	#LR__0450
084b0                 | LR__0449
084b0     00 18 06 F6 | 	mov	result1, #0
084b4     0C 00 90 FD | 	jmp	#LR__0451
084b8                 | LR__0450
084b8     FF 60 02 F6 | 	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
084bc     36 5F 02 F6 | 	mov	arg01, local01
084c0     6C E8 BF FD | 	call	#__system___make_methodptr
084c4                 | LR__0451
084c4     AF F0 03 F6 | 	mov	ptra, fp
084c8     BA 00 A0 FD | 	call	#popregs_
084cc                 | __system___gettxfunc_ret
084cc     2D 00 64 FD | 	ret
084d0                 | 
084d0                 | __system___getiolock_0150
084d0     03 5A 05 F6 | 	mov	COUNT_, #3
084d4     B0 00 A0 FD | 	call	#pushregs_
084d8     E4 FD BF FD | 	call	#__system____getftab
084dc     0C 6D 0A F6 | 	mov	local01, result1 wz
084e0     14 00 90 AD |  if_e	jmp	#LR__0452
084e4     08 6C 06 F1 | 	add	local01, #8
084e8     36 6F 02 FB | 	rdlong	local02, local01
084ec     08 6C 86 F1 | 	sub	local01, #8
084f0     37 71 0A F6 | 	mov	local03, local02 wz
084f4     10 00 90 5D |  if_ne	jmp	#LR__0453
084f8                 | LR__0452
084f8     20 00 06 F1 | 	add	ptr___system__dat__, #32
084fc     00 19 02 F6 | 	mov	result1, ptr___system__dat__
08500     20 00 86 F1 | 	sub	ptr___system__dat__, #32
08504     08 00 90 FD | 	jmp	#LR__0454
08508                 | LR__0453
08508     0C 6C 06 F1 | 	add	local01, #12
0850c     36 19 02 F6 | 	mov	result1, local01
08510                 | LR__0454
08510     AF F0 03 F6 | 	mov	ptra, fp
08514     BA 00 A0 FD | 	call	#popregs_
08518                 | __system___getiolock_0150_ret
08518     2D 00 64 FD | 	ret
0851c                 | 
0851c                 | __system___closeraw
0851c     06 5A 05 F6 | 	mov	COUNT_, #6
08520     B0 00 A0 FD | 	call	#pushregs_
08524     2F 6D 02 F6 | 	mov	local01, arg01
08528     00 6E 06 F6 | 	mov	local02, #0
0852c     08 6C 06 F1 | 	add	local01, #8
08530     36 71 0A FB | 	rdlong	local03, local01 wz
08534     08 6C 86 F1 | 	sub	local01, #8
08538     14 00 90 5D |  if_ne	jmp	#LR__0455
0853c     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08540     00 0B 68 FC | 	wrlong	#5, ptr___system__dat__
08544     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08548     01 18 66 F6 | 	neg	result1, #1
0854c     90 00 90 FD | 	jmp	#LR__0458
08550                 | LR__0455
08550     28 6C 06 F1 | 	add	local01, #40
08554     36 71 0A FB | 	rdlong	local03, local01 wz
08558     28 6C 86 F1 | 	sub	local01, #40
0855c     2C 00 90 AD |  if_e	jmp	#LR__0456
08560     28 6C 06 F1 | 	add	local01, #40
08564     36 71 02 FB | 	rdlong	local03, local01
08568     28 6C 86 F1 | 	sub	local01, #40
0856c     38 73 02 FB | 	rdlong	local04, local03
08570     04 70 06 F1 | 	add	local03, #4
08574     38 75 02 FB | 	rdlong	local05, local03
08578     36 5F 02 F6 | 	mov	arg01, local01
0857c     FD 76 02 F6 | 	mov	local06, objptr
08580     39 FB 01 F6 | 	mov	objptr, local04
08584     2D 74 62 FD | 	call	local05
08588     3B FB 01 F6 | 	mov	objptr, local06
0858c                 | LR__0456
0858c     20 6C 06 F1 | 	add	local01, #32
08590     36 71 0A FB | 	rdlong	local03, local01 wz
08594     20 6C 86 F1 | 	sub	local01, #32
08598     30 00 90 AD |  if_e	jmp	#LR__0457
0859c     20 6C 06 F1 | 	add	local01, #32
085a0     36 71 02 FB | 	rdlong	local03, local01
085a4     20 6C 86 F1 | 	sub	local01, #32
085a8     38 73 02 FB | 	rdlong	local04, local03
085ac     04 70 06 F1 | 	add	local03, #4
085b0     38 75 02 FB | 	rdlong	local05, local03
085b4     36 5F 02 F6 | 	mov	arg01, local01
085b8     FD 76 02 F6 | 	mov	local06, objptr
085bc     39 FB 01 F6 | 	mov	objptr, local04
085c0     2D 74 62 FD | 	call	local05
085c4     3B FB 01 F6 | 	mov	objptr, local06
085c8     0C 6F 02 F6 | 	mov	local02, result1
085cc                 | LR__0457
085cc     36 5F 02 F6 | 	mov	arg01, local01
085d0     00 60 06 F6 | 	mov	arg02, #0
085d4     30 62 06 F6 | 	mov	arg03, #48
085d8     A0 00 A0 FD | 	call	#\builtin_bytefill_
085dc     37 19 02 F6 | 	mov	result1, local02
085e0                 | LR__0458
085e0     AF F0 03 F6 | 	mov	ptra, fp
085e4     BA 00 A0 FD | 	call	#popregs_
085e8                 | __system___closeraw_ret
085e8     2D 00 64 FD | 	ret
085ec                 | 
085ec                 | __system____default_getc
085ec     05 5A 05 F6 | 	mov	COUNT_, #5
085f0     B0 00 A0 FD | 	call	#pushregs_
085f4     2F 6D 02 F6 | 	mov	local01, arg01
085f8     36 6F 02 FB | 	rdlong	local02, local01
085fc     08 6E 06 F1 | 	add	local02, #8
08600     37 71 02 FB | 	rdlong	local03, local02
08604     08 6E 86 F1 | 	sub	local02, #8
08608     02 70 CE F7 | 	test	local03, #2 wz
0860c     08 00 90 AD |  if_e	jmp	#LR__0459
08610     36 5F 02 F6 | 	mov	arg01, local01
08614     8C 01 B0 FD | 	call	#__system____default_flush
08618                 | LR__0459
08618     08 6E 06 F1 | 	add	local02, #8
0861c     37 71 02 FB | 	rdlong	local03, local02
08620     01 70 46 F5 | 	or	local03, #1
08624     37 71 62 FC | 	wrlong	local03, local02
08628     08 6E 86 F1 | 	sub	local02, #8
0862c     37 73 0A FB | 	rdlong	local04, local02 wz
08630     0C 00 90 5D |  if_ne	jmp	#LR__0460
08634     36 5F 02 F6 | 	mov	arg01, local01
08638     F8 07 B0 FD | 	call	#__system____default_filbuf
0863c     0C 73 02 F6 | 	mov	local04, result1
08640                 | LR__0460
08640     00 72 5E F2 | 	cmps	local04, #0 wcz
08644     01 18 66 E6 |  if_be	neg	result1, #1
08648     1C 00 90 ED |  if_be	jmp	#LR__0461
0864c     01 72 86 F1 | 	sub	local04, #1
08650     37 73 62 FC | 	wrlong	local04, local02
08654     04 6E 06 F1 | 	add	local02, #4
08658     37 75 02 FB | 	rdlong	local05, local02
0865c     3A 19 C2 FA | 	rdbyte	result1, local05
08660     01 74 06 F1 | 	add	local05, #1
08664     37 75 62 FC | 	wrlong	local05, local02
08668                 | LR__0461
08668     AF F0 03 F6 | 	mov	ptra, fp
0866c     BA 00 A0 FD | 	call	#popregs_
08670                 | __system____default_getc_ret
08670     2D 00 64 FD | 	ret
08674                 | 
08674                 | __system____default_putc
08674     06 5A 05 F6 | 	mov	COUNT_, #6
08678     B0 00 A0 FD | 	call	#pushregs_
0867c     2F 6D 02 F6 | 	mov	local01, arg01
08680     30 6F 02 F6 | 	mov	local02, arg02
08684     37 71 02 FB | 	rdlong	local03, local02
08688     08 70 06 F1 | 	add	local03, #8
0868c     38 73 02 FB | 	rdlong	local04, local03
08690     08 70 86 F1 | 	sub	local03, #8
08694     01 72 CE F7 | 	test	local04, #1 wz
08698     08 00 90 AD |  if_e	jmp	#LR__0462
0869c     37 5F 02 F6 | 	mov	arg01, local02
086a0     00 01 B0 FD | 	call	#__system____default_flush
086a4                 | LR__0462
086a4     08 70 06 F1 | 	add	local03, #8
086a8     38 73 02 FB | 	rdlong	local04, local03
086ac     02 72 46 F5 | 	or	local04, #2
086b0     38 73 62 FC | 	wrlong	local04, local03
086b4     08 70 86 F1 | 	sub	local03, #8
086b8     38 75 02 FB | 	rdlong	local05, local03
086bc     3A 77 02 F6 | 	mov	local06, local05
086c0     0C 70 06 F1 | 	add	local03, #12
086c4     38 77 02 F1 | 	add	local06, local03
086c8     3B 6D 42 FC | 	wrbyte	local01, local06
086cc     FF 6C 06 F5 | 	and	local01, #255
086d0     01 74 06 F1 | 	add	local05, #1
086d4     0C 70 86 F1 | 	sub	local03, #12
086d8     38 75 62 FC | 	wrlong	local05, local03
086dc     02 00 00 FF 
086e0     00 74 0E F2 | 	cmp	local05, ##1024 wz
086e4     10 00 90 5D |  if_ne	jmp	#LR__0463
086e8     37 5F 02 F6 | 	mov	arg01, local02
086ec     B4 00 B0 FD | 	call	#__system____default_flush
086f0     00 18 0E F2 | 	cmp	result1, #0 wz
086f4     01 6C 66 56 |  if_ne	neg	local01, #1
086f8                 | LR__0463
086f8     36 19 02 F6 | 	mov	result1, local01
086fc     AF F0 03 F6 | 	mov	ptra, fp
08700     BA 00 A0 FD | 	call	#popregs_
08704                 | __system____default_putc_ret
08704     2D 00 64 FD | 	ret
08708                 | 
08708                 | __system____default_putc_terminal
08708     06 5A 05 F6 | 	mov	COUNT_, #6
0870c     B0 00 A0 FD | 	call	#pushregs_
08710     2F 6D 02 F6 | 	mov	local01, arg01
08714     30 6F 02 F6 | 	mov	local02, arg02
08718     37 71 02 FB | 	rdlong	local03, local02
0871c     08 70 06 F1 | 	add	local03, #8
08720     38 73 02 FB | 	rdlong	local04, local03
08724     08 70 86 F1 | 	sub	local03, #8
08728     01 72 CE F7 | 	test	local04, #1 wz
0872c     08 00 90 AD |  if_e	jmp	#LR__0464
08730     37 5F 02 F6 | 	mov	arg01, local02
08734     6C 00 B0 FD | 	call	#__system____default_flush
08738                 | LR__0464
08738     08 70 06 F1 | 	add	local03, #8
0873c     38 73 02 FB | 	rdlong	local04, local03
08740     02 72 46 F5 | 	or	local04, #2
08744     38 73 62 FC | 	wrlong	local04, local03
08748     08 70 86 F1 | 	sub	local03, #8
0874c     38 75 02 FB | 	rdlong	local05, local03
08750     3A 77 02 F6 | 	mov	local06, local05
08754     0C 70 06 F1 | 	add	local03, #12
08758     38 77 02 F1 | 	add	local06, local03
0875c     3B 6D 42 FC | 	wrbyte	local01, local06
08760     FF 6C 06 F5 | 	and	local01, #255
08764     0C 70 86 F1 | 	sub	local03, #12
08768     01 74 06 F1 | 	add	local05, #1
0876c     38 75 62 FC | 	wrlong	local05, local03
08770     0A 6C 0E F2 | 	cmp	local01, #10 wz
08774     0C 00 90 AD |  if_e	jmp	#LR__0465
08778     02 00 00 FF 
0877c     00 74 0E F2 | 	cmp	local05, ##1024 wz
08780     10 00 90 5D |  if_ne	jmp	#LR__0466
08784                 | LR__0465
08784     37 5F 02 F6 | 	mov	arg01, local02
08788     18 00 B0 FD | 	call	#__system____default_flush
0878c     00 18 0E F2 | 	cmp	result1, #0 wz
08790     01 6C 66 56 |  if_ne	neg	local01, #1
08794                 | LR__0466
08794     36 19 02 F6 | 	mov	result1, local01
08798     AF F0 03 F6 | 	mov	ptra, fp
0879c     BA 00 A0 FD | 	call	#popregs_
087a0                 | __system____default_putc_terminal_ret
087a0     2D 00 64 FD | 	ret
087a4                 | 
087a4                 | __system____default_flush
087a4     0D 5A 05 F6 | 	mov	COUNT_, #13
087a8     B0 00 A0 FD | 	call	#pushregs_
087ac     2F 6D 02 F6 | 	mov	local01, arg01
087b0     36 6F 02 FB | 	rdlong	local02, local01
087b4     37 71 02 FB | 	rdlong	local03, local02
087b8     08 6E 06 F1 | 	add	local02, #8
087bc     37 73 02 FB | 	rdlong	local04, local02
087c0     08 6E 86 F1 | 	sub	local02, #8
087c4     02 72 CE F7 | 	test	local04, #2 wz
087c8     B8 00 90 AD |  if_e	jmp	#LR__0469
087cc     00 70 5E F2 | 	cmps	local03, #0 wcz
087d0     24 01 90 ED |  if_be	jmp	#LR__0471
087d4     08 6C 06 F1 | 	add	local01, #8
087d8     36 73 02 FB | 	rdlong	local04, local01
087dc     08 6C 86 F1 | 	sub	local01, #8
087e0     40 72 CE F7 | 	test	local04, #64 wz
087e4     5C 00 90 AD |  if_e	jmp	#LR__0468
087e8     08 6C 06 F1 | 	add	local01, #8
087ec     36 73 02 FB | 	rdlong	local04, local01
087f0     08 6C 86 F1 | 	sub	local01, #8
087f4     80 72 CE F7 | 	test	local04, #128 wz
087f8     48 00 90 AD |  if_e	jmp	#LR__0467
087fc     2C 6C 06 F1 | 	add	local01, #44
08800     36 73 02 FB | 	rdlong	local04, local01
08804     2C 6C 86 F1 | 	sub	local01, #44
08808     39 75 02 FB | 	rdlong	local05, local04
0880c     04 72 06 F1 | 	add	local04, #4
08810     39 77 02 FB | 	rdlong	local06, local04
08814     36 5F 02 F6 | 	mov	arg01, local01
08818     00 60 06 F6 | 	mov	arg02, #0
0881c     02 62 06 F6 | 	mov	arg03, #2
08820     FD 78 02 F6 | 	mov	local07, objptr
08824     3A FB 01 F6 | 	mov	objptr, local05
08828     2D 76 62 FD | 	call	local06
0882c     3C FB 01 F6 | 	mov	objptr, local07
08830     08 6C 06 F1 | 	add	local01, #8
08834     36 73 02 FB | 	rdlong	local04, local01
08838     80 72 26 F5 | 	andn	local04, #128
0883c     36 73 62 FC | 	wrlong	local04, local01
08840     08 6C 86 F1 | 	sub	local01, #8
08844                 | LR__0467
08844                 | LR__0468
08844     14 6C 06 F1 | 	add	local01, #20
08848     36 73 02 FB | 	rdlong	local04, local01
0884c     14 6C 86 F1 | 	sub	local01, #20
08850     39 75 02 FB | 	rdlong	local05, local04
08854     04 72 06 F1 | 	add	local04, #4
08858     39 77 02 FB | 	rdlong	local06, local04
0885c     0C 6E 06 F1 | 	add	local02, #12
08860     37 61 02 F6 | 	mov	arg02, local02
08864     0C 6E 86 F1 | 	sub	local02, #12
08868     36 5F 02 F6 | 	mov	arg01, local01
0886c     38 63 02 F6 | 	mov	arg03, local03
08870     FD 78 02 F6 | 	mov	local07, objptr
08874     3A FB 01 F6 | 	mov	objptr, local05
08878     2D 76 62 FD | 	call	local06
0887c     3C FB 01 F6 | 	mov	objptr, local07
08880     74 00 90 FD | 	jmp	#LR__0471
08884                 | LR__0469
08884     08 6E 06 F1 | 	add	local02, #8
08888     37 73 02 FB | 	rdlong	local04, local02
0888c     08 6E 86 F1 | 	sub	local02, #8
08890     01 72 CE F7 | 	test	local04, #1 wz
08894     60 00 90 AD |  if_e	jmp	#LR__0470
08898     00 70 0E F2 | 	cmp	local03, #0 wz
0889c     58 00 90 AD |  if_e	jmp	#LR__0470
088a0     2C 6C 06 F1 | 	add	local01, #44
088a4     36 7B 02 FB | 	rdlong	local08, local01
088a8     2C 6C 86 F1 | 	sub	local01, #44
088ac     3D 73 02 F6 | 	mov	local04, local08
088b0     39 75 02 FB | 	rdlong	local05, local04
088b4     04 72 06 F1 | 	add	local04, #4
088b8     39 7D 02 FB | 	rdlong	local09, local04
088bc     3E 77 02 F6 | 	mov	local06, local09
088c0     36 7F 02 F6 | 	mov	local10, local01
088c4     38 81 62 F6 | 	neg	local11, local03
088c8     01 82 06 F6 | 	mov	local12, #1
088cc     3F 5F 02 F6 | 	mov	arg01, local10
088d0     40 61 02 F6 | 	mov	arg02, local11
088d4     01 62 06 F6 | 	mov	arg03, #1
088d8     FD 78 02 F6 | 	mov	local07, objptr
088dc     3A FB 01 F6 | 	mov	objptr, local05
088e0     2D 76 62 FD | 	call	local06
088e4     3C FB 01 F6 | 	mov	objptr, local07
088e8     0C 73 02 F6 | 	mov	local04, result1
088ec     39 85 02 F6 | 	mov	local13, local04
088f0     00 84 5E F2 | 	cmps	local13, #0 wcz
088f4     38 85 02 36 |  if_ae	mov	local13, local03
088f8                 | LR__0470
088f8                 | LR__0471
088f8     37 01 68 FC | 	wrlong	#0, local02
088fc     04 6E 06 F1 | 	add	local02, #4
08900     37 01 68 FC | 	wrlong	#0, local02
08904     04 6E 06 F1 | 	add	local02, #4
08908     37 01 68 FC | 	wrlong	#0, local02
0890c     00 18 06 F6 | 	mov	result1, #0
08910     AF F0 03 F6 | 	mov	ptra, fp
08914     BA 00 A0 FD | 	call	#popregs_
08918                 | __system____default_flush_ret
08918     2D 00 64 FD | 	ret
0891c                 | 
0891c                 | __system___rxtxioctl_0179
0891c     02 5A 05 F6 | 	mov	COUNT_, #2
08920     B0 00 A0 FD | 	call	#pushregs_
08924     30 6D 02 F6 | 	mov	local01, arg02
08928     31 6F 02 F6 | 	mov	local02, arg03
0892c     00 6D 0E F2 | 	cmp	local01, #256 wz
08930     0C 00 90 AD |  if_e	jmp	#LR__0472
08934     01 6D 0E F2 | 	cmp	local01, #257 wz
08938     1C 00 90 AD |  if_e	jmp	#LR__0473
0893c     30 00 90 FD | 	jmp	#LR__0474
08940                 | LR__0472
08940     08 00 06 F1 | 	add	ptr___system__dat__, #8
08944     00 19 02 FB | 	rdlong	result1, ptr___system__dat__
08948     08 00 86 F1 | 	sub	ptr___system__dat__, #8
0894c     37 19 62 FC | 	wrlong	result1, local02
08950     00 18 06 F6 | 	mov	result1, #0
08954     28 00 90 FD | 	jmp	#LR__0475
08958                 | LR__0473
08958     37 5F 02 FB | 	rdlong	arg01, local02
0895c     08 00 06 F1 | 	add	ptr___system__dat__, #8
08960     00 5F 62 FC | 	wrlong	arg01, ptr___system__dat__
08964     08 00 86 F1 | 	sub	ptr___system__dat__, #8
08968     00 18 06 F6 | 	mov	result1, #0
0896c     10 00 90 FD | 	jmp	#LR__0475
08970                 | LR__0474
08970     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08974     00 15 68 FC | 	wrlong	#10, ptr___system__dat__
08978     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
0897c     01 18 66 F6 | 	neg	result1, #1
08980                 | LR__0475
08980     AF F0 03 F6 | 	mov	ptra, fp
08984     BA 00 A0 FD | 	call	#popregs_
08988                 | __system___rxtxioctl_0179_ret
08988     2D 00 64 FD | 	ret
0898c                 | 
0898c                 | __system____dummy_flush_0180
0898c     00 18 06 F6 | 	mov	result1, #0
08990                 | __system____dummy_flush_0180_ret
08990     2D 00 64 FD | 	ret
08994                 | 
08994                 | __system___vfswrite
08994     0B 5A 05 F6 | 	mov	COUNT_, #11
08998     B0 00 A0 FD | 	call	#pushregs_
0899c     2F 6D 02 F6 | 	mov	local01, arg01
089a0     30 6F 02 F6 | 	mov	local02, arg02
089a4     31 71 02 F6 | 	mov	local03, arg03
089a8     37 73 02 F6 | 	mov	local04, local02
089ac     08 6C 06 F1 | 	add	local01, #8
089b0     36 75 02 FB | 	rdlong	local05, local01
089b4     08 6C 86 F1 | 	sub	local01, #8
089b8     02 74 CE F7 | 	test	local05, #2 wz
089bc     14 00 90 5D |  if_ne	jmp	#LR__0476
089c0     1C 00 06 F1 | 	add	ptr___system__dat__, #28
089c4     00 0D 68 FC | 	wrlong	#6, ptr___system__dat__
089c8     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
089cc     01 18 66 F6 | 	neg	result1, #1
089d0     60 01 90 FD | 	jmp	#LR__0484
089d4                 | LR__0476
089d4     08 6C 06 F1 | 	add	local01, #8
089d8     36 75 02 FB | 	rdlong	local05, local01
089dc     08 6C 86 F1 | 	sub	local01, #8
089e0     40 74 CE F7 | 	test	local05, #64 wz
089e4     5C 00 90 AD |  if_e	jmp	#LR__0478
089e8     08 6C 06 F1 | 	add	local01, #8
089ec     36 75 02 FB | 	rdlong	local05, local01
089f0     08 6C 86 F1 | 	sub	local01, #8
089f4     80 74 CE F7 | 	test	local05, #128 wz
089f8     48 00 90 AD |  if_e	jmp	#LR__0477
089fc     2C 6C 06 F1 | 	add	local01, #44
08a00     36 75 02 FB | 	rdlong	local05, local01
08a04     2C 6C 86 F1 | 	sub	local01, #44
08a08     3A 77 02 FB | 	rdlong	local06, local05
08a0c     04 74 06 F1 | 	add	local05, #4
08a10     3A 79 02 FB | 	rdlong	local07, local05
08a14     36 5F 02 F6 | 	mov	arg01, local01
08a18     00 60 06 F6 | 	mov	arg02, #0
08a1c     02 62 06 F6 | 	mov	arg03, #2
08a20     FD 7A 02 F6 | 	mov	local08, objptr
08a24     3B FB 01 F6 | 	mov	objptr, local06
08a28     2D 78 62 FD | 	call	local07
08a2c     3D FB 01 F6 | 	mov	objptr, local08
08a30     08 6C 06 F1 | 	add	local01, #8
08a34     36 75 02 FB | 	rdlong	local05, local01
08a38     80 74 26 F5 | 	andn	local05, #128
08a3c     36 75 62 FC | 	wrlong	local05, local01
08a40     08 6C 86 F1 | 	sub	local01, #8
08a44                 | LR__0477
08a44                 | LR__0478
08a44     14 6C 06 F1 | 	add	local01, #20
08a48     36 75 0A FB | 	rdlong	local05, local01 wz
08a4c     14 6C 86 F1 | 	sub	local01, #20
08a50     74 00 90 AD |  if_e	jmp	#LR__0480
08a54     14 6C 06 F1 | 	add	local01, #20
08a58     36 75 02 FB | 	rdlong	local05, local01
08a5c     14 6C 86 F1 | 	sub	local01, #20
08a60     3A 77 02 FB | 	rdlong	local06, local05
08a64     04 74 06 F1 | 	add	local05, #4
08a68     3A 79 02 FB | 	rdlong	local07, local05
08a6c     37 61 02 F6 | 	mov	arg02, local02
08a70     38 63 02 F6 | 	mov	arg03, local03
08a74     36 5F 02 F6 | 	mov	arg01, local01
08a78     FD 7A 02 F6 | 	mov	local08, objptr
08a7c     3B FB 01 F6 | 	mov	objptr, local06
08a80     2D 78 62 FD | 	call	local07
08a84     3D FB 01 F6 | 	mov	objptr, local08
08a88     0C 7D 02 F6 | 	mov	local09, result1
08a8c     00 7C 5E F2 | 	cmps	local09, #0 wcz
08a90     2C 00 90 3D |  if_ae	jmp	#LR__0479
08a94     08 6C 06 F1 | 	add	local01, #8
08a98     36 75 02 FB | 	rdlong	local05, local01
08a9c     20 74 46 F5 | 	or	local05, #32
08aa0     36 75 62 FC | 	wrlong	local05, local01
08aa4     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08aa8     00 7D 62 FC | 	wrlong	local09, ptr___system__dat__
08aac     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08ab0     00 7C 0E F2 | 	cmp	local09, #0 wz
08ab4     01 18 66 56 |  if_ne	neg	result1, #1
08ab8     00 18 06 A6 |  if_e	mov	result1, #0
08abc     74 00 90 FD | 	jmp	#LR__0484
08ac0                 | LR__0479
08ac0     3E 19 02 F6 | 	mov	result1, local09
08ac4     6C 00 90 FD | 	jmp	#LR__0484
08ac8                 | LR__0480
08ac8     18 6C 06 F1 | 	add	local01, #24
08acc     36 7F 0A FB | 	rdlong	local10, local01 wz
08ad0     18 6C 86 F1 | 	sub	local01, #24
08ad4     14 00 90 5D |  if_ne	jmp	#LR__0481
08ad8     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08adc     00 0D 68 FC | 	wrlong	#6, ptr___system__dat__
08ae0     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08ae4     01 18 66 F6 | 	neg	result1, #1
08ae8     48 00 90 FD | 	jmp	#LR__0484
08aec                 | LR__0481
08aec     00 7C 06 F6 | 	mov	local09, #0
08af0                 | LR__0482
08af0     00 70 1E F2 | 	cmp	local03, #0 wcz
08af4     38 00 90 ED |  if_be	jmp	#LR__0483
08af8     3F 75 02 F6 | 	mov	local05, local10
08afc     3A 77 02 FB | 	rdlong	local06, local05
08b00     04 74 06 F1 | 	add	local05, #4
08b04     3A 79 02 FB | 	rdlong	local07, local05
08b08     39 5F C2 FA | 	rdbyte	arg01, local04
08b0c     36 61 02 F6 | 	mov	arg02, local01
08b10     FD 80 02 F6 | 	mov	local11, objptr
08b14     3B FB 01 F6 | 	mov	objptr, local06
08b18     01 72 06 F1 | 	add	local04, #1
08b1c     2D 78 62 FD | 	call	local07
08b20     40 FB 01 F6 | 	mov	objptr, local11
08b24     0C 7D 02 F1 | 	add	local09, result1
08b28     01 70 86 F1 | 	sub	local03, #1
08b2c     C0 FF 9F FD | 	jmp	#LR__0482
08b30                 | LR__0483
08b30     3E 19 02 F6 | 	mov	result1, local09
08b34                 | LR__0484
08b34     AF F0 03 F6 | 	mov	ptra, fp
08b38     BA 00 A0 FD | 	call	#popregs_
08b3c                 | __system___vfswrite_ret
08b3c     2D 00 64 FD | 	ret
08b40                 | 
08b40                 | __system___vfsread
08b40     0B 5A 05 F6 | 	mov	COUNT_, #11
08b44     B0 00 A0 FD | 	call	#pushregs_
08b48     28 F0 07 F1 | 	add	ptra, #40
08b4c     04 5E 05 F1 | 	add	fp, #4
08b50     AF 5E 62 FC | 	wrlong	arg01, fp
08b54     04 5E 05 F1 | 	add	fp, #4
08b58     AF 60 62 FC | 	wrlong	arg02, fp
08b5c     04 5E 05 F1 | 	add	fp, #4
08b60     AF 62 62 FC | 	wrlong	arg03, fp
08b64     04 5E 85 F1 | 	sub	fp, #4
08b68     AF 6C 02 FB | 	rdlong	local01, fp
08b6c     14 5E 05 F1 | 	add	fp, #20
08b70     AF 6C 62 FC | 	wrlong	local01, fp
08b74     04 5E 05 F1 | 	add	fp, #4
08b78     AF 00 68 FC | 	wrlong	#0, fp
08b7c     1C 5E 85 F1 | 	sub	fp, #28
08b80     AF 6E 02 FB | 	rdlong	local02, fp
08b84     04 5E 85 F1 | 	sub	fp, #4
08b88     08 6E 06 F1 | 	add	local02, #8
08b8c     37 6D 02 FB | 	rdlong	local01, local02
08b90     01 6C CE F7 | 	test	local01, #1 wz
08b94     14 00 90 5D |  if_ne	jmp	#LR__0485
08b98     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08b9c     00 0D 68 FC | 	wrlong	#6, ptr___system__dat__
08ba0     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08ba4     01 18 66 F6 | 	neg	result1, #1
08ba8     7C 02 90 FD | 	jmp	#LR__0493
08bac                 | LR__0485
08bac     04 5E 05 F1 | 	add	fp, #4
08bb0     AF 6C 02 FB | 	rdlong	local01, fp
08bb4     04 5E 85 F1 | 	sub	fp, #4
08bb8     10 6C 06 F1 | 	add	local01, #16
08bbc     36 71 0A FB | 	rdlong	local03, local01 wz
08bc0     AC 00 90 AD |  if_e	jmp	#LR__0487
08bc4     04 5E 05 F1 | 	add	fp, #4
08bc8     AF 72 02 FB | 	rdlong	local04, fp
08bcc     10 72 06 F1 | 	add	local04, #16
08bd0     39 6D 02 FB | 	rdlong	local01, local04
08bd4     36 6F 02 FB | 	rdlong	local02, local01
08bd8     04 6C 06 F1 | 	add	local01, #4
08bdc     36 71 02 FB | 	rdlong	local03, local01
08be0     AF 5E 02 FB | 	rdlong	arg01, fp
08be4     04 5E 05 F1 | 	add	fp, #4
08be8     AF 60 02 FB | 	rdlong	arg02, fp
08bec     04 5E 05 F1 | 	add	fp, #4
08bf0     AF 62 02 FB | 	rdlong	arg03, fp
08bf4     0C 5E 85 F1 | 	sub	fp, #12
08bf8     FD 74 02 F6 | 	mov	local05, objptr
08bfc     37 FB 01 F6 | 	mov	objptr, local02
08c00     2D 70 62 FD | 	call	local03
08c04     3A FB 01 F6 | 	mov	objptr, local05
08c08     10 5E 05 F1 | 	add	fp, #16
08c0c     AF 18 62 FC | 	wrlong	result1, fp
08c10     10 5E 85 F1 | 	sub	fp, #16
08c14     00 18 5E F2 | 	cmps	result1, #0 wcz
08c18     44 00 90 3D |  if_ae	jmp	#LR__0486
08c1c     04 5E 05 F1 | 	add	fp, #4
08c20     AF 6C 02 FB | 	rdlong	local01, fp
08c24     36 73 02 F6 | 	mov	local04, local01
08c28     08 72 06 F1 | 	add	local04, #8
08c2c     39 71 02 FB | 	rdlong	local03, local04
08c30     20 70 46 F5 | 	or	local03, #32
08c34     08 6C 06 F1 | 	add	local01, #8
08c38     36 71 62 FC | 	wrlong	local03, local01
08c3c     0C 5E 05 F1 | 	add	fp, #12
08c40     AF 5E 0A FB | 	rdlong	arg01, fp wz
08c44     10 5E 85 F1 | 	sub	fp, #16
08c48     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08c4c     00 5F 62 FC | 	wrlong	arg01, ptr___system__dat__
08c50     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08c54     01 18 66 56 |  if_ne	neg	result1, #1
08c58     00 18 06 A6 |  if_e	mov	result1, #0
08c5c     C8 01 90 FD | 	jmp	#LR__0493
08c60                 | LR__0486
08c60     10 5E 05 F1 | 	add	fp, #16
08c64     AF 18 02 FB | 	rdlong	result1, fp
08c68     10 5E 85 F1 | 	sub	fp, #16
08c6c     B8 01 90 FD | 	jmp	#LR__0493
08c70                 | LR__0487
08c70     04 5E 05 F1 | 	add	fp, #4
08c74     AF 6C 02 FB | 	rdlong	local01, fp
08c78     1C 6C 06 F1 | 	add	local01, #28
08c7c     36 71 02 FB | 	rdlong	local03, local01
08c80     14 5E 05 F1 | 	add	fp, #20
08c84     AF 70 62 FC | 	wrlong	local03, fp
08c88     AF 6C 0A FB | 	rdlong	local01, fp wz
08c8c     18 5E 85 F1 | 	sub	fp, #24
08c90     14 00 90 5D |  if_ne	jmp	#LR__0488
08c94     1C 00 06 F1 | 	add	ptr___system__dat__, #28
08c98     00 0D 68 FC | 	wrlong	#6, ptr___system__dat__
08c9c     1C 00 86 F1 | 	sub	ptr___system__dat__, #28
08ca0     01 18 66 F6 | 	neg	result1, #1
08ca4     80 01 90 FD | 	jmp	#LR__0493
08ca8                 | LR__0488
08ca8     04 5E 05 F1 | 	add	fp, #4
08cac     AF 6C 02 FB | 	rdlong	local01, fp
08cb0     04 5E 85 F1 | 	sub	fp, #4
08cb4     24 6C 06 F1 | 	add	local01, #36
08cb8     36 71 0A FB | 	rdlong	local03, local01 wz
08cbc     94 00 90 AD |  if_e	jmp	#LR__0490
08cc0     04 5E 05 F1 | 	add	fp, #4
08cc4     AF 76 02 FB | 	rdlong	local06, fp
08cc8     3B 73 02 F6 | 	mov	local04, local06
08ccc     24 72 06 F1 | 	add	local04, #36
08cd0     39 79 02 FB | 	rdlong	local07, local04
08cd4     3C 6D 02 F6 | 	mov	local01, local07
08cd8     36 6F 02 FB | 	rdlong	local02, local01
08cdc     04 6C 06 F1 | 	add	local01, #4
08ce0     36 7B 02 FB | 	rdlong	local08, local01
08ce4     3D 71 02 F6 | 	mov	local03, local08
08ce8     3B 7D 02 F6 | 	mov	local09, local06
08cec     00 7F 06 F6 | 	mov	local10, #256
08cf0     20 5E 05 F1 | 	add	fp, #32
08cf4     AF 80 02 F6 | 	mov	local11, fp
08cf8     3E 5F 02 F6 | 	mov	arg01, local09
08cfc     00 61 06 F6 | 	mov	arg02, #256
08d00     40 63 02 F6 | 	mov	arg03, local11
08d04     FD 74 02 F6 | 	mov	local05, objptr
08d08     37 FB 01 F6 | 	mov	objptr, local02
08d0c     24 5E 85 F1 | 	sub	fp, #36
08d10     2D 70 62 FD | 	call	local03
08d14     3A FB 01 F6 | 	mov	objptr, local05
08d18     10 5E 05 F1 | 	add	fp, #16
08d1c     AF 18 62 FC | 	wrlong	result1, fp
08d20     AF 6E 0A FB | 	rdlong	local02, fp wz
08d24     10 5E 85 F1 | 	sub	fp, #16
08d28     28 00 90 5D |  if_ne	jmp	#LR__0489
08d2c     24 5E 05 F1 | 	add	fp, #36
08d30     AF 72 02 FB | 	rdlong	local04, fp
08d34     24 5E 85 F1 | 	sub	fp, #36
08d38     39 71 02 F6 | 	mov	local03, local04
08d3c     02 70 0E F5 | 	and	local03, #2 wz
08d40     10 00 90 AD |  if_e	jmp	#LR__0489
08d44     01 6C 06 F6 | 	mov	local01, #1
08d48     20 5E 05 F1 | 	add	fp, #32
08d4c     AF 02 68 FC | 	wrlong	#1, fp
08d50     20 5E 85 F1 | 	sub	fp, #32
08d54                 | LR__0489
08d54                 | LR__0490
08d54     10 5E 05 F1 | 	add	fp, #16
08d58     AF 00 68 FC | 	wrlong	#0, fp
08d5c     10 5E 85 F1 | 	sub	fp, #16
08d60                 | LR__0491
08d60     0C 5E 05 F1 | 	add	fp, #12
08d64     AF 6C 02 FB | 	rdlong	local01, fp
08d68     0C 5E 85 F1 | 	sub	fp, #12
08d6c     00 6C 1E F2 | 	cmp	local01, #0 wcz
08d70     A8 00 90 ED |  if_be	jmp	#LR__0492
08d74     18 5E 05 F1 | 	add	fp, #24
08d78     AF 6C 02 FB | 	rdlong	local01, fp
08d7c     36 6F 02 FB | 	rdlong	local02, local01
08d80     04 6C 06 F1 | 	add	local01, #4
08d84     36 71 02 FB | 	rdlong	local03, local01
08d88     14 5E 85 F1 | 	sub	fp, #20
08d8c     AF 5E 02 FB | 	rdlong	arg01, fp
08d90     04 5E 85 F1 | 	sub	fp, #4
08d94     FD 7A 02 F6 | 	mov	local08, objptr
08d98     37 FB 01 F6 | 	mov	objptr, local02
08d9c     2D 70 62 FD | 	call	local03
08da0     3D FB 01 F6 | 	mov	objptr, local08
08da4     14 5E 05 F1 | 	add	fp, #20
08da8     AF 18 62 FC | 	wrlong	result1, fp
08dac     14 5E 85 F1 | 	sub	fp, #20
08db0     00 18 5E F2 | 	cmps	result1, #0 wcz
08db4     64 00 90 CD |  if_b	jmp	#LR__0492
08db8     1C 5E 05 F1 | 	add	fp, #28
08dbc     AF 6C 02 FB | 	rdlong	local01, fp
08dc0     36 71 02 F6 | 	mov	local03, local01
08dc4     01 70 06 F1 | 	add	local03, #1
08dc8     AF 70 62 FC | 	wrlong	local03, fp
08dcc     08 5E 85 F1 | 	sub	fp, #8
08dd0     AF 76 02 FB | 	rdlong	local06, fp
08dd4     36 77 42 FC | 	wrbyte	local06, local01
08dd8     04 5E 85 F1 | 	sub	fp, #4
08ddc     AF 6C 02 FB | 	rdlong	local01, fp
08de0     01 6C 06 F1 | 	add	local01, #1
08de4     AF 6C 62 FC | 	wrlong	local01, fp
08de8     04 5E 85 F1 | 	sub	fp, #4
08dec     AF 6C 02 FB | 	rdlong	local01, fp
08df0     01 6C 86 F1 | 	sub	local01, #1
08df4     AF 6C 62 FC | 	wrlong	local01, fp
08df8     14 5E 05 F1 | 	add	fp, #20
08dfc     AF 6C 0A FB | 	rdlong	local01, fp wz
08e00     20 5E 85 F1 | 	sub	fp, #32
08e04     58 FF 9F AD |  if_e	jmp	#LR__0491
08e08     14 5E 05 F1 | 	add	fp, #20
08e0c     AF 70 02 FB | 	rdlong	local03, fp
08e10     14 5E 85 F1 | 	sub	fp, #20
08e14     0A 70 0E F2 | 	cmp	local03, #10 wz
08e18     44 FF 9F 5D |  if_ne	jmp	#LR__0491
08e1c                 | LR__0492
08e1c     10 5E 05 F1 | 	add	fp, #16
08e20     AF 18 02 FB | 	rdlong	result1, fp
08e24     10 5E 85 F1 | 	sub	fp, #16
08e28                 | LR__0493
08e28     AF F0 03 F6 | 	mov	ptra, fp
08e2c     BA 00 A0 FD | 	call	#popregs_
08e30                 | __system___vfsread_ret
08e30     2D 00 64 FD | 	ret
08e34                 | 
08e34                 | __system____default_filbuf
08e34     06 5A 05 F6 | 	mov	COUNT_, #6
08e38     B0 00 A0 FD | 	call	#pushregs_
08e3c     2F 6D 02 FB | 	rdlong	local01, arg01
08e40     10 5E 06 F1 | 	add	arg01, #16
08e44     2F 6F 02 FB | 	rdlong	local02, arg01
08e48     10 5E 86 F1 | 	sub	arg01, #16
08e4c     37 71 02 FB | 	rdlong	local03, local02
08e50     04 6E 06 F1 | 	add	local02, #4
08e54     37 73 02 FB | 	rdlong	local04, local02
08e58     0C 6C 06 F1 | 	add	local01, #12
08e5c     36 61 02 F6 | 	mov	arg02, local01
08e60     0C 6C 86 F1 | 	sub	local01, #12
08e64     0A 62 C6 F9 | 	decod	arg03, #10
08e68     FD 74 02 F6 | 	mov	local05, objptr
08e6c     38 FB 01 F6 | 	mov	objptr, local03
08e70     2D 72 62 FD | 	call	local04
08e74     3A FB 01 F6 | 	mov	objptr, local05
08e78     0C 77 02 F6 | 	mov	local06, result1
08e7c     00 76 5E F2 | 	cmps	local06, #0 wcz
08e80     01 18 66 C6 |  if_b	neg	result1, #1
08e84     28 00 90 CD |  if_b	jmp	#LR__0494
08e88     36 77 62 FC | 	wrlong	local06, local01
08e8c     0C 6C 06 F1 | 	add	local01, #12
08e90     36 6F 02 F6 | 	mov	local02, local01
08e94     08 6C 86 F1 | 	sub	local01, #8
08e98     36 6F 62 FC | 	wrlong	local02, local01
08e9c     04 6C 06 F1 | 	add	local01, #4
08ea0     36 6F 02 FB | 	rdlong	local02, local01
08ea4     01 6E 46 F5 | 	or	local02, #1
08ea8     36 6F 62 FC | 	wrlong	local02, local01
08eac     3B 19 02 F6 | 	mov	result1, local06
08eb0                 | LR__0494
08eb0     AF F0 03 F6 | 	mov	ptra, fp
08eb4     BA 00 A0 FD | 	call	#popregs_
08eb8                 | __system____default_filbuf_ret
08eb8     2D 00 64 FD | 	ret
08ebc                 | 
08ebc                 | ' 	
08ebc                 | ' 	FUNCTION pfunc(c as integer) as integer
08ebc                 | ___strs_cl_pfunc
08ebc                 | ' 		if (i < 16) then
08ebc     04 FA 05 F1 | 	add	objptr, #4
08ec0     FD 1E 02 FB | 	rdlong	_var01, objptr
08ec4     04 FA 85 F1 | 	sub	objptr, #4
08ec8     10 1E 5E F2 | 	cmps	_var01, #16 wcz
08ecc     2C 00 90 3D |  if_ae	jmp	#LR__0495
08ed0     FD 20 02 FB | 	rdlong	_var02, objptr
08ed4     04 FA 05 F1 | 	add	objptr, #4
08ed8     FD 22 02 FB | 	rdlong	_var03, objptr
08edc     10 23 02 F1 | 	add	_var03, _var02
08ee0     11 5F 42 FC | 	wrbyte	arg01, _var03
08ee4     FD 1E 02 FB | 	rdlong	_var01, objptr
08ee8     01 1E 06 F1 | 	add	_var01, #1
08eec     FD 1E 62 FC | 	wrlong	_var01, objptr
08ef0     04 FA 85 F1 | 	sub	objptr, #4
08ef4                 | ' 			p(i) = c
08ef4                 | ' 			i = i+1
08ef4                 | ' 			return 1
08ef4     01 18 06 F6 | 	mov	result1, #1
08ef8     04 00 90 FD | 	jmp	#___strs_cl_pfunc_ret
08efc                 | LR__0495
08efc                 | ' 			return -1
08efc     01 18 66 F6 | 	neg	result1, #1
08f00                 | ___strs_cl_pfunc_ret
08f00     2D 00 64 FD | 	ret
08f04                 | 
08f04                 | __struct__s_vfs_file_t_putchar
08f04     04 5A 05 F6 | 	mov	COUNT_, #4
08f08     B0 00 A0 FD | 	call	#pushregs_
08f0c     18 FA 05 F1 | 	add	objptr, #24
08f10     FD 6C 0A FB | 	rdlong	local01, objptr wz
08f14     18 FA 85 F1 | 	sub	objptr, #24
08f18     00 18 06 A6 |  if_e	mov	result1, #0
08f1c     3C 00 90 AD |  if_e	jmp	#LR__0496
08f20     18 FA 05 F1 | 	add	objptr, #24
08f24     FD 6C 02 FB | 	rdlong	local01, objptr
08f28     18 FA 85 F1 | 	sub	objptr, #24
08f2c     36 6F 02 FB | 	rdlong	local02, local01
08f30     04 6C 06 F1 | 	add	local01, #4
08f34     36 71 02 FB | 	rdlong	local03, local01
08f38     FD 60 02 F6 | 	mov	arg02, objptr
08f3c     FD 72 02 F6 | 	mov	local04, objptr
08f40     37 FB 01 F6 | 	mov	objptr, local02
08f44     2D 70 62 FD | 	call	local03
08f48     39 FB 01 F6 | 	mov	objptr, local04
08f4c     00 18 5E F2 | 	cmps	result1, #0 wcz
08f50     00 6C 06 C6 |  if_b	mov	local01, #0
08f54     01 6C 06 36 |  if_ae	mov	local01, #1
08f58     36 19 02 F6 | 	mov	result1, local01
08f5c                 | LR__0496
08f5c     AF F0 03 F6 | 	mov	ptra, fp
08f60     BA 00 A0 FD | 	call	#popregs_
08f64                 | __struct__s_vfs_file_t_putchar_ret
08f64     2D 00 64 FD | 	ret
08f68                 | 
08f68                 | __struct__s_vfs_file_t_getchar
08f68     04 5A 05 F6 | 	mov	COUNT_, #4
08f6c     B0 00 A0 FD | 	call	#pushregs_
08f70     1C FA 05 F1 | 	add	objptr, #28
08f74     FD 6C 0A FB | 	rdlong	local01, objptr wz
08f78     1C FA 85 F1 | 	sub	objptr, #28
08f7c     01 18 66 A6 |  if_e	neg	result1, #1
08f80     2C 00 90 AD |  if_e	jmp	#LR__0497
08f84                 | '         return getcf(__this);
08f84     1C FA 05 F1 | 	add	objptr, #28
08f88     FD 6C 02 FB | 	rdlong	local01, objptr
08f8c     1C FA 85 F1 | 	sub	objptr, #28
08f90     36 6F 02 FB | 	rdlong	local02, local01
08f94     04 6C 06 F1 | 	add	local01, #4
08f98     36 71 02 FB | 	rdlong	local03, local01
08f9c     FD 5E 02 F6 | 	mov	arg01, objptr
08fa0     FD 72 02 F6 | 	mov	local04, objptr
08fa4     37 FB 01 F6 | 	mov	objptr, local02
08fa8     2D 70 62 FD | 	call	local03
08fac     39 FB 01 F6 | 	mov	objptr, local04
08fb0                 | LR__0497
08fb0     AF F0 03 F6 | 	mov	ptra, fp
08fb4     BA 00 A0 FD | 	call	#popregs_
08fb8                 | __struct__s_vfs_file_t_getchar_ret
08fb8     2D 00 64 FD | 	ret
08fbc                 | 
08fbc                 | __struct___bas_wrap_sender_tx
08fbc     04 5A 05 F6 | 	mov	COUNT_, #4
08fc0     B0 00 A0 FD | 	call	#pushregs_
08fc4     FD 6C 02 FB | 	rdlong	local01, objptr
08fc8     36 6F 02 FB | 	rdlong	local02, local01
08fcc     04 6C 06 F1 | 	add	local01, #4
08fd0     36 71 02 FB | 	rdlong	local03, local01
08fd4     FD 72 02 F6 | 	mov	local04, objptr
08fd8     37 FB 01 F6 | 	mov	objptr, local02
08fdc     2D 70 62 FD | 	call	local03
08fe0     39 FB 01 F6 | 	mov	objptr, local04
08fe4     01 18 06 F6 | 	mov	result1, #1
08fe8     AF F0 03 F6 | 	mov	ptra, fp
08fec     BA 00 A0 FD | 	call	#popregs_
08ff0                 | __struct___bas_wrap_sender_tx_ret
08ff0     2D 00 64 FD | 	ret
08ff4                 | 
08ff4                 | LR__0498
08ff4     20          | 	byte	" "
08ff5     00          | 	byte	0
08ff6                 | LR__0499
08ff6                 | 	byte	
08ff6     00          | 	byte	0
08ff7                 | LR__0500
08ff7                 | 	byte	
08ff7     00          | 	byte	0
08ff8                 | LR__0501
08ff8     20 21 21 21 
08ffc     20 63 6F 72 
09000     72 75 70 74 
09004     65 64 20 68 
09008     65 61 70 3F 
0900c     3F 3F 20 21 
09010     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
09013     00          | 	byte	0
09014                 | LR__0502
09014     20 21 21 21 
09018     20 6F 75 74 
0901c     20 6F 66 20 
09020     68 65 61 70 
09024     20 6D 65 6D 
09028     6F 72 79 20 
0902c     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
09030     00          | 	byte	0
09031                 | LR__0503
09031     20 21 21 21 
09035     20 63 6F 72 
09039     72 75 70 74 
0903d     65 64 20 68 
09041     65 61 70 20 
09045     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
09049     00          | 	byte	0
0904a                 | LR__0504
0904a     4E 61 6D 65 
0904e     20 20 20 20 
09052     20 20 20 20 
09056     20 20 20 20 
0905a     20 20 20 20 
0905e     20 20 20 6C 
09062     65 6E 20 20 
09066     20 66 74 20 
0906a     76 6F 6C 20 
0906e     72 65 70 20 
09072     20 20 72 2E 
09076     6C 65 6E 20 
0907a     20 20 20 20 
0907e     20 20 20 20 
09082     4E 61 6D 65 
09086     20 20 20 20 
0908a     20 20 20 20 
0908e     20 20 20 20 
09092     20 20 20 20 
09096     20 20 20 6C 
0909a     65 6E 20 20 
0909e     20 66 74 20 
090a2     76 6F 6C 20 
090a6     72 65 70 20 
090aa     20 20 72 2E 
090ae     6C 65 6E 20 | 	byte	"Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
090b2     00          | 	byte	0
090b3                 | LR__0505
090b3     53          | 	byte	"S"
090b4     00          | 	byte	0
090b5                 | LR__0506
090b5     41 62 63 64 
090b9     65 66       | 	byte	"Abcdef"
090bb     00          | 	byte	0
090bc                 | LR__0507
090bc     20 20 20 20 
090c0     20 20 20 20 
090c4     20 20 20 20 
090c8     20 20 20 20 
090cc     20 20 20 20 
090d0     20 20       | 	byte	"                      "
090d2     00          | 	byte	0
090d3                 | LR__0508
090d3                 | 	byte	
090d3     00          | 	byte	0
090d4                 | LR__0509
090d4     20          | 	byte	" "
090d5     00          | 	byte	0
090d6                 | LR__0510
090d6     73 61 6D 70 
090da     6C 65 73 20 
090de     6D 6F 64 75 
090e2     6C 65       | 	byte	"samples module"
090e4     00          | 	byte	0
090e5     00 00 00    | 	alignl
090e8                 | _dat_
090e8     62 61 6A 65 
090ec     72 00 00 00 
090f0     00 00 00 00 
090f4     00 00 00 00 | module file "/home/pik33/mod/BAJEREK.MOD"
090f8     00 00 00 00 
090fc     20 6D 75 73 
09100     69 63 20 63 
09104     6F 6D 70 6F | 	byte	$00, $00, $00, $00, $20, $6d, $75, $73, $69, $63, $20, $63, $6f, $6d, $70, $6f
09108     73 65 64 20 
0910c     62 79 00 00 
09110     00 00 02 A0 
09114     00 40 00 00 | 	byte	$73, $65, $64, $20, $62, $79, $00, $00, $00, $00, $02, $a0, $00, $40, $00, $00
09118     00 01 76 69 
0911c     65 74 6E 61 
09120     6D 20 62 6F 
09124     79 20 00 00 | 	byte	$00, $01, $76, $69, $65, $74, $6e, $61, $6d, $20, $62, $6f, $79, $20, $00, $00
09128     00 00 00 00 
0912c     00 00 00 00 | 	byte	$00[8]
09130     1D 57 00 40 
09134     00 00 00 01 
09138     66 72 6F 6D 
0913c     20 72 6F 62 | 	byte	$1d, $57, $00, $40, $00, $00, $00, $01, $66, $72, $6f, $6d, $20, $72, $6f, $62
09140     6F 63 6F 70 
09144     79 00 00 00 
09148     00 00 00 00 
0914c     00 00 04 0D | 	byte	$6f, $63, $6f, $70, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $0d
09150     00 40 00 00 
09154     00 01 00 00 
09158     00 00 00 00 
0915c     00 00 00 00 | 	byte	$00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09160     00 00 00 00 
09164     00 00 00 00 
09168     00 00 00 00 | 	byte	$00[12]
0916c     20 DD 00 40 
09170     00 00 00 01 
09174     00 00 00 00 
09178     00 00 00 00 | 	byte	$20, $dd, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00
0917c     00 00 00 00 
09180     00 00 00 00 
09184     00 00 00 00 
09188     00 00 00 00 
0918c     00 00 00 00 
09190     00          | 	byte	$00[21]
09191     01 73 61 6D 
09195     70 6C 69 6E 
09199     67 20 62 79 
0919d     20 76 69 65 | 	byte	$01, $73, $61, $6d, $70, $6c, $69, $6e, $67, $20, $62, $79, $20, $76, $69, $65
091a1     74 6E 61 6D 
091a5     00 00 00 36 
091a9     58 00 40 00 
091ad     00 00 01 70 | 	byte	$74, $6e, $61, $6d, $00, $00, $00, $36, $58, $00, $40, $00, $00, $00, $01, $70
091b1     6F 7A 6E 61 
091b5     6E 20 31 39 
091b9     39 32 2E 30 
091bd     32 2E 31 39 | 	byte	$6f, $7a, $6e, $61, $6e, $20, $31, $39, $39, $32, $2e, $30, $32, $2e, $31, $39
091c1     00 00 00 00 
091c5     00          | 	byte	$00[5]
091c6     0B 61 00 40 
091ca     00 00 00 01 
091ce     2D 2D 2D 2D 
091d2     2D 2D 2D 2D | 	byte	$0b, $61, $00, $40, $00, $00, $00, $01, $2d, $2d, $2d, $2d, $2d, $2d, $2d, $2d
091d6     2D 2D 2D 2D 
091da     2D 2D 2D 2D 
091de     2D 2D 2D 2D 
091e2     2D          | 	byte	$2d[13]
091e3     00 09 01 00 
091e7     40 00 00 00 
091eb     01 2D 20 20 
091ef     67 72 65 65 | 	byte	$00, $09, $01, $00, $40, $00, $00, $00, $01, $2d, $20, $20, $67, $72, $65, $65
091f3     74 69 6E 67 
091f7     73 20 74 6F 
091fb     20 3A 20 20 
091ff     20 2D 00 10 | 	byte	$74, $69, $6e, $67, $73, $20, $74, $6f, $20, $3a, $20, $20, $20, $2d, $00, $10
09203     66 00 40 00 
09207     00 00 01 2D 
0920b     20 64 7A 69 
0920f     65 63 69 6F | 	byte	$66, $00, $40, $00, $00, $00, $01, $2d, $20, $64, $7a, $69, $65, $63, $69, $6f
09213     63 68 20 2D 
09217     00 00 00 00 
0921b     00 00 00 00 
0921f     00 0A C3 00 | 	byte	$63, $68, $20, $2d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $c3, $00
09223     40 00 00 00 
09227     01 2D 20 61 
0922b     6E 64 20 61 
0922f     6C 6C 20 6F | 	byte	$40, $00, $00, $00, $01, $2d, $20, $61, $6e, $64, $20, $61, $6c, $6c, $20, $6f
09233     74 68 65 72 
09237     73 20 2D 00 
0923b     00 00 00 07 
0923f     89 00 40 00 | 	byte	$74, $68, $65, $72, $73, $20, $2d, $00, $00, $00, $00, $07, $89, $00, $40, $00
09243     00 00 01 2D 
09247     20 20 20 20 
0924b     20 20 20 20 
0924f     20 66 72 6F | 	byte	$00, $00, $01, $2d, $20, $20, $20, $20, $20, $20, $20, $20, $20, $66, $72, $6f
09253     6D 20 20 20 
09257     20 20 20 20 
0925b     00 09 71 00 
0925f     40 00 00 00 | 	byte	$6d, $20, $20, $20, $20, $20, $20, $20, $00, $09, $71, $00, $40, $00, $00, $00
09263     01 2D 20 20 
09267     20 61 6C 6C 
0926b     20 77 6F 72 
0926f     64 73 20 20 | 	byte	$01, $2d, $20, $20, $20, $61, $6c, $6c, $20, $77, $6f, $72, $64, $73, $20, $20
09273     20 2D 00 00 
09277     00 00 00 0D 
0927b     7D 00 40 00 
0927f     00 00 01 2D | 	byte	$20, $2d, $00, $00, $00, $00, $00, $0d, $7d, $00, $40, $00, $00, $00, $01, $2d
09283     2D 2D 2D 2D 
09287     2D 2D 2D 2D 
0928b     2D 2D 2D 2D 
0928f     2D 2D 2D 2D 
09293     2D 2D 2D 2D | 	byte	$2d[20]
09297     00 05 BF 00 
0929b     40 00 00 00 
0929f     01 00 00 00 
092a3     00 00 00 00 | 	byte	$00, $05, $bf, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00
092a7     00 00 00 00 
092ab     00 00 00 00 
092af     00 00 00 00 
092b3     00 00 00    | 	byte	$00[15]
092b6     01 D5 00 40 
092ba     00 00 00 01 
092be     00 00 00 00 
092c2     00 00 00 00 | 	byte	$01, $d5, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00
092c6     00 00 00 00 
092ca     00 00 00 00 
092ce     00 00 00 00 
092d2     00 00       | 	byte	$00[14]
092d4     0A 91 00 40 
092d8     00 00 00 01 
092dc     00 00 00 00 
092e0     00 00 00 00 | 	byte	$0a, $91, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00
092e4     00 00 00 00 
092e8     00 00 00 00 
092ec     00 00 00 00 
092f0     00 00       | 	byte	$00[14]
092f2     0C B0 00 40 
092f6     00 00 00 01 
092fa     00 00 00 00 
092fe     00 00 00 00 | 	byte	$0c, $b0, $00, $40, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00
09302     00 00 00 00 
09306     00 00 00 00 
0930a     00 00 00 00 
0930e     00 00 00 00 
09312     00 00 00 00 
09316     00          | 	byte	$00[21]
09317     01 00 00 00 
0931b     00 00 00 00 
0931f     00 00 00 00 
09323     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09327     00 00 00 00 
0932b     00 00 00 00 
0932f     00 00 00 00 
09333     00 00       | 	byte	$00[14]
09335     01 00 00 00 
09339     00 00 00 00 
0933d     00 00 00 00 
09341     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09345     00 00 00 00 
09349     00 00 00 00 
0934d     00 00 00 00 
09351     00 00       | 	byte	$00[14]
09353     01 00 00 00 
09357     00 00 00 00 
0935b     00 00 00 00 
0935f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09363     00 00 00 00 
09367     00 00 00 00 
0936b     00 00 00 00 
0936f     00 00       | 	byte	$00[14]
09371     01 00 00 00 
09375     00 00 00 00 
09379     00 00 00 00 
0937d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09381     00 00 00 00 
09385     00 00 00 00 
09389     00 00 00 00 
0938d     00 00       | 	byte	$00[14]
0938f     01 00 00 00 
09393     00 00 00 00 
09397     00 00 00 00 
0939b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0939f     00 00 00 00 
093a3     00 00 00 00 
093a7     00 00 00 00 
093ab     00 00       | 	byte	$00[14]
093ad     01 00 00 00 
093b1     00 00 00 00 
093b5     00 00 00 00 
093b9     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093bd     00 00 00 00 
093c1     00 00 00 00 
093c5     00 00 00 00 
093c9     00 00       | 	byte	$00[14]
093cb     01 00 00 00 
093cf     00 00 00 00 
093d3     00 00 00 00 
093d7     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093db     00 00 00 00 
093df     00 00 00 00 
093e3     00 00 00 00 
093e7     00 00       | 	byte	$00[14]
093e9     01 00 00 00 
093ed     00 00 00 00 
093f1     00 00 00 00 
093f5     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093f9     00 00 00 00 
093fd     00 00 00 00 
09401     00 00 00 00 
09405     00 00       | 	byte	$00[14]
09407     01 00 00 00 
0940b     00 00 00 00 
0940f     00 00 00 00 
09413     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09417     00 00 00 00 
0941b     00 00 00 00 
0941f     00 00 00 00 
09423     00 00       | 	byte	$00[14]
09425     01 00 00 00 
09429     00 00 00 00 
0942d     00 00 00 00 
09431     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09435     00 00 00 00 
09439     00 00 00 00 
0943d     00 00 00 00 
09441     00 00       | 	byte	$00[14]
09443     01 00 00 00 
09447     00 00 00 00 
0944b     00 00 00 00 
0944f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09453     00 00 00 00 
09457     00 00 00 00 
0945b     00 00 00 00 
0945f     00 00       | 	byte	$00[14]
09461     01 00 00 00 
09465     00 00 00 00 
09469     00 00 00 00 
0946d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09471     00 00 00 00 
09475     00 00 00 00 
09479     00 00 00 00 
0947d     00 00       | 	byte	$00[14]
0947f     01 00 00 00 
09483     00 00 00 00 
09487     00 00 00 00 
0948b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0948f     00 00 00 00 
09493     00 00 00 00 
09497     00 00 00 00 
0949b     00 00       | 	byte	$00[14]
0949d     01 21 7F 00 
094a1     01 06 06 07 
094a5     0A 09 03 04 
094a9     05 04 05 08 | 	byte	$01, $21, $7f, $00, $01, $06, $06, $07, $0a, $09, $03, $04, $05, $04, $05, $08
094ad     08 0C 0C 13 
094b1     13 0E 0F 0E 
094b5     0F 08 08 0C 
094b9     0C 10 10 11 | 	byte	$08, $0c, $0c, $13, $13, $0e, $0f, $0e, $0f, $08, $08, $0c, $0c, $10, $10, $11
094bd     11 08 08 0D 
094c1     00 00 00 00 
094c5     00 00 00 00 
094c9     00 00 00 00 | 	byte	$11, $08, $08, $0d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
094cd     00 00 00 00 
      ...             
09519     00 00 00 00 
0951d     00 00 00    | 	byte	$00[83]
09520     4D 2E 4B 2E 
09524     00 FE 1F 04 
09528     00 00 00 00 
0952c     00 00 00 00 | 	byte	$4d, $2e, $4b, $2e, $00, $fe, $1f, $04, $00, $00, $00, $00, $00, $00, $00, $00
09530     00 FE 1F 04 
09534     00 00 00 00 
09538     00 00 00 00 
0953c     00 00 00 00 | 	byte	$00, $fe, $1f, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09540     00 00 00 00 
      ...             
095a0     00 00 00 00 
095a4     00          | 	byte	$00[101]
095a5     FE 10 00 00 
095a9     00 00 00 00 
095ad     00 00 00 00 
095b1     FE 10 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00
095b5     00 00 00 00 
      ...             
0961d     00 00 00 00 
09621     00 00 00 00 | 	byte	$00[112]
09625     FE 10 00 00 
09629     00 00 00 00 
0962d     00 00 00 00 
09631     FE 10 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00
09635     00 00 00 00 
      ...             
0969d     00 00 00 00 
096a1     00 00 00 00 | 	byte	$00[112]
096a5     FE 10 00 00 
096a9     00 00 00 00 
096ad     00 00 00 00 
096b1     FE 10 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00
096b5     00 00 00 00 
      ...             
096ed     00 00 00 00 
096f1     00 00 00 00 | 	byte	$00[64]
096f5     FE 20 00 00 
096f9     00 00 00 00 
096fd     00 00 00 00 
09701     FE 20 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00
09705     00 00 00 00 
      ...             
0981d     00 00 00 00 
09821     00 00 00 00 | 	byte	$00[288]
09825     FE 1F 08 00 
09829     00 00 00 00 
0982d     00 00 00 00 
09831     FE 1F 08 00 | 	byte	$fe, $1f, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $1f, $08, $00
09835     00 00 00 00 
      ...             
0985d     00 00 00 00 
09861     00 00 00 00 | 	byte	$00[48]
09865     FE 10 00 00 
09869     00 00 00 00 
0986d     00 00 00 00 
09871     FE 10 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00
09875     00 00 00 00 
      ...             
0989d     00 00 00 00 
098a1     00 00 00 00 | 	byte	$00[48]
098a5     FE 10 00 00 
098a9     00 00 00 00 
098ad     00 00 00 00 
098b1     FE 10 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00
098b5     00 00 00 00 
      ...             
098dd     00 00 00 00 
098e1     00 00 00 00 | 	byte	$00[48]
098e5     FE 1F 0B 00 
098e9     00 00 00 00 
098ed     00 00 00 00 
098f1     FE 1F 0B 00 | 	byte	$fe, $1f, $0b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $1f, $0b, $00
098f5     00 00 00 00 
      ...             
09921     00 00 00 00 
09925     00 00 00 00 | 	byte	$00[52]
09929     FE 3F 03 00 
0992d     FE 3F 03 00 
09931     00 00 00 00 
09935     00 00 00 00 | 	byte	$fe, $3f, $03, $00, $fe, $3f, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00
09939     00 00 00 00 
      ...             
099a1     00 00 00 00 
099a5     00 00 00 00 | 	byte	$00[112]
099a9     FE 30 00 00 
099ad     FE 30 00 00 
099b1     00 00 00 00 
099b5     00 00 00 00 | 	byte	$fe, $30, $00, $00, $fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
099b9     00 00 00 00 
      ...             
09a21     00 00 00 00 
09a25     00 00 00 00 | 	byte	$00[112]
09a29     FE 30 00 00 
09a2d     FE 30 00 00 
09a31     00 00 00 00 
09a35     00 00 00 00 | 	byte	$fe, $30, $00, $00, $fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a39     00 00 00 00 
      ...             
09aa1     00 00 00 00 
09aa5     00 00 00 00 | 	byte	$00[112]
09aa9     FE 30 00 00 
09aad     FE 30 00 00 
09ab1     00 00 00 00 
09ab5     00 00 00 00 | 	byte	$fe, $30, $00, $00, $fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ab9     00 00 00 00 
      ...             
09b01     00 00 00 00 
09b05     00 00 00 00 | 	byte	$00[80]
09b09     FE 40 00 00 
09b0d     FE 40 00 00 
09b11     00 00 00 00 
09b15     00 00 00 00 | 	byte	$fe, $40, $00, $00, $fe, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b19     00 00 00 00 
      ...             
09c25     00 00 00 00 
09c29     00          | 	byte	$00[273]
09c2a     0F 06 00 00 
09c2e     0F 06 00 00 
09c32     00 00 00 00 
09c36     00 00 00 00 | 	byte	$0f, $06, $00, $00, $0f, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c3a     00 00 00 00 
      ...             
09c62     00 00 00 00 
09c66     00 00 00    | 	byte	$00[47]
09c69     FE 30 00 00 
09c6d     FE 30 00 00 
09c71     00 00 00 00 
09c75     00 00 00 00 | 	byte	$fe, $30, $00, $00, $fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c79     00 00 00 00 
      ...             
09ca1     00 00 00 00 
09ca5     00 00 00 00 | 	byte	$00[48]
09ca9     FE 30 00 00 
09cad     FE 30 00 00 
09cb1     00 00 00 00 
09cb5     00 00 00 00 | 	byte	$fe, $30, $00, $00, $fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cb9     00 00 00 00 
      ...             
09ce1     00 00 00 00 
09ce5     00 00 00 00 | 	byte	$00[48]
09ce9     FE 3F 0B 00 
09ced     FE 3F 0B 00 
09cf1     00 00 00 00 
09cf5     00 00 00 00 | 	byte	$fe, $3f, $0b, $00, $fe, $3f, $0b, $00, $00, $00, $00, $00, $00, $00, $00, $00
09cf9     00 00 00 00 
      ...             
09d1d     00 00 00 00 
09d21     00 00 00 00 | 	byte	$00[44]
09d25     FE 5F 04 00 
09d29     FE 50 00 00 
09d2d     00 00 00 00 
09d31     00 00 00 00 | 	byte	$fe, $5f, $04, $00, $fe, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d35     00 00 00 00 
      ...             
09f21     00 00 00 00 
09f25     00          | 	byte	$00[497]
09f26     0F 02 00 00 
09f2a     00 00 00 00 
09f2e     00 00 00 00 
09f32     00 00 00 00 | 	byte	$0f, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f36     00 00 00 00 
      ...             
0a11e     00 00 00 00 
0a122     00 00       | 	byte	$00[494]
0a124     01 E0 7F 04 
0a128     01 7D 90 00 
0a12c     00 FE A0 00 
0a130     00 7F B0 00 | 	byte	$01, $e0, $7f, $04, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a134     00 00 00 00 
0a138     00 00 00 00 
0a13c     00 00 00 00 
0a140     00 00 00 00 | 	byte	$00[16]
0a144     01 E0 70 00 
0a148     00 00 00 00 
0a14c     00 7F B0 00 
0a150     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a154     00 00 00 00 
0a158     00 00 00 00 
0a15c     00 00 00 00 
0a160     00 00 00 00 | 	byte	$00[16]
0a164     01 40 70 00 
0a168     01 7D 90 00 
0a16c     00 BE 80 00 
0a170     00 7F B0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a174     00 00 00 00 
0a178     00 00 00 00 
0a17c     00 00 00 00 
0a180     00 00 00 00 | 	byte	$00[16]
0a184     01 E0 70 00 
0a188     00 00 00 00 
0a18c     00 7F B0 00 
0a190     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a194     00 00 00 00 
0a198     00 00 00 00 
0a19c     00 00 00 00 
0a1a0     00 00 00 00 
0a1a4     00 00 00 00 | 	byte	$00[20]
0a1a8     01 7D 90 00 
0a1ac     00 FE A0 00 
0a1b0     00 7F B0 00 
0a1b4     00 00 00 00 | 	byte	$01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a1b8     00 00 00 00 
0a1bc     00 00 00 00 
0a1c0     00 00 00 00 | 	byte	$00[12]
0a1c4     01 E0 70 00 
0a1c8     01 68 90 00 
0a1cc     00 FE A0 00 
0a1d0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a1d4     00 00 00 00 
0a1d8     00 00 00 00 
0a1dc     00 00 00 00 
0a1e0     00 00 00 00 | 	byte	$00[16]
0a1e4     01 40 70 00 
0a1e8     01 7D 90 00 
0a1ec     00 BE 80 00 
0a1f0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a1f4     00 00 00 00 
0a1f8     00 00 00 00 
0a1fc     00 00 00 00 
0a200     00 00 00 00 | 	byte	$00[16]
0a204     01 E0 70 00 
0a208     01 AC 90 00 
0a20c     00 00 00 00 
0a210     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a214     00 00 00 00 
0a218     00 00 00 00 
0a21c     00 00 00 00 
0a220     00 00 00 00 | 	byte	$00[16]
0a224     02 1A 70 00 
0a228     00 00 00 00 
0a22c     00 FE A0 00 
0a230     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a234     00 00 00 00 
0a238     00 00 00 00 
0a23c     00 00 00 00 
0a240     00 00 00 00 | 	byte	$00[16]
0a244     02 1A 70 00 
0a248     00 00 00 00 
0a24c     00 7F B0 00 
0a250     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a254     00 00 00 00 
0a258     00 00 00 00 
0a25c     00 00 00 00 
0a260     00 00 00 00 | 	byte	$00[16]
0a264     01 68 70 00 
0a268     00 00 00 00 
0a26c     00 BE 80 00 
0a270     00 7F B0 00 | 	byte	$01, $68, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a274     00 00 00 00 
0a278     00 00 00 00 
0a27c     00 00 00 00 
0a280     00 00 00 00 | 	byte	$00[16]
0a284     02 1A 70 00 
0a288     00 00 00 00 
0a28c     00 7F B0 00 
0a290     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a294     00 00 00 00 
0a298     00 00 00 00 
0a29c     00 00 00 00 
0a2a0     00 00 00 00 
0a2a4     00 00 00 00 
0a2a8     00 00 00 00 
0a2ac     00          | 	byte	$00[25]
0a2ad     FE A0 00 00 
0a2b1     7F B0 00 00 
0a2b5     00 00 00 00 
0a2b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2bd     00 00 00 00 
0a2c1     00 00 00    | 	byte	$00[7]
0a2c4     02 1A 70 00 
0a2c8     01 E0 90 00 
0a2cc     00 FE A0 00 
0a2d0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a2d4     00 00 00 00 
0a2d8     00 00 00 00 
0a2dc     00 00 00 00 
0a2e0     00 00 00 00 | 	byte	$00[16]
0a2e4     01 68 70 00 
0a2e8     01 AC 90 00 
0a2ec     00 BE 80 00 
0a2f0     00 7F B0 00 | 	byte	$01, $68, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a2f4     00 00 00 00 
0a2f8     00 00 00 00 
0a2fc     00 00 00 00 
0a300     00 00 00 00 | 	byte	$00[16]
0a304     02 1A 70 00 
0a308     00 00 00 00 
0a30c     00 00 00 00 
0a310     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a314     00 00 00 00 
0a318     00 00 00 00 
0a31c     00 00 00 00 
0a320     00 00 00 00 | 	byte	$00[16]
0a324     03 58 70 00 
0a328     02 3A 90 00 
0a32c     00 FE A0 00 
0a330     00 7F B0 00 | 	byte	$03, $58, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a334     00 00 00 00 
0a338     00 00 00 00 
0a33c     00 00 00 00 
0a340     00 00 00 00 | 	byte	$00[16]
0a344     03 58 70 00 
0a348     00 00 00 00 
0a34c     00 7F B0 00 
0a350     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a354     00 00 00 00 
0a358     00 00 00 00 
0a35c     00 00 00 00 
0a360     00 00 00 00 | 	byte	$00[16]
0a364     02 3A 70 00 
0a368     00 00 00 00 
0a36c     00 BE 80 00 
0a370     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a374     00 00 00 00 
0a378     00 00 00 00 
0a37c     00 00 00 00 
0a380     00 00 00 00 | 	byte	$00[16]
0a384     03 58 70 00 
0a388     00 00 00 00 
0a38c     00 7F B0 00 
0a390     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a394     00 00 00 00 
0a398     00 00 00 00 
0a39c     00 00 00 00 
0a3a0     00 00 00 00 
0a3a4     00 00 00 00 
0a3a8     00 00 00 00 
0a3ac     00          | 	byte	$00[25]
0a3ad     FE A0 00 00 
0a3b1     7F B0 00 00 
0a3b5     00 00 00 00 
0a3b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3bd     00 00 00 00 
0a3c1     00 00 00    | 	byte	$00[7]
0a3c4     03 58 70 00 
0a3c8     00 00 00 00 
0a3cc     00 FE A0 00 
0a3d0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a3d4     00 00 00 00 
0a3d8     00 00 00 00 
0a3dc     00 00 00 00 
0a3e0     00 00 00 00 | 	byte	$00[16]
0a3e4     02 3A 70 00 
0a3e8     02 3A 90 00 
0a3ec     00 BE 80 00 
0a3f0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $02, $3a, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a3f4     00 00 00 00 
0a3f8     00 00 00 00 
0a3fc     00 00 00 00 
0a400     00 00 00 00 | 	byte	$00[16]
0a404     03 58 70 00 
0a408     01 FC 90 00 
0a40c     00 00 00 00 
0a410     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $fc, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a414     00 00 00 00 
0a418     00 00 00 00 
0a41c     00 00 00 00 
0a420     00 00 00 00 | 	byte	$00[16]
0a424     02 D0 70 00 
0a428     01 E0 90 00 
0a42c     00 FE A0 00 
0a430     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a434     00 00 00 00 
0a438     00 00 00 00 
0a43c     00 00 00 00 
0a440     00 00 00 00 | 	byte	$00[16]
0a444     02 D0 70 00 
0a448     00 00 00 00 
0a44c     00 7F B0 00 
0a450     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a454     00 00 00 00 
0a458     00 00 00 00 
0a45c     00 00 00 00 
0a460     00 00 00 00 | 	byte	$00[16]
0a464     01 E0 70 00 
0a468     01 AC 90 00 
0a46c     00 BE 80 00 
0a470     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a474     00 00 00 00 
0a478     00 00 00 00 
0a47c     00 00 00 00 
0a480     00 00 00 00 | 	byte	$00[16]
0a484     02 D0 70 00 
0a488     00 00 00 00 
0a48c     00 7F B0 00 
0a490     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a494     00 00 00 00 
0a498     00 00 00 00 
0a49c     00 00 00 00 
0a4a0     00 00 00 00 
0a4a4     00 00 00 00 | 	byte	$00[20]
0a4a8     01 E0 90 00 
0a4ac     00 FE A0 00 
0a4b0     00 7F B0 00 
0a4b4     00 00 00 00 | 	byte	$01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a4b8     00 00 00 00 
0a4bc     00 00 00 00 
0a4c0     00 00 00 00 | 	byte	$00[12]
0a4c4     02 D0 70 00 
0a4c8     00 00 00 00 
0a4cc     00 FE A0 00 
0a4d0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a4d4     00 00 00 00 
0a4d8     00 00 00 00 
0a4dc     00 00 00 00 
0a4e0     00 00 00 00 | 	byte	$00[16]
0a4e4     01 E0 70 00 
0a4e8     01 FC 90 00 
0a4ec     00 BE 80 00 
0a4f0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $fc, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a4f4     00 00 00 00 
0a4f8     00 00 00 00 
0a4fc     00 00 00 00 
0a500     00 00 00 00 | 	byte	$00[16]
0a504     02 D0 70 00 
0a508     02 3A 90 00 
0a50c     00 FE A0 00 
0a510     01 68 D0 00 | 	byte	$02, $d0, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $01, $68, $d0, $00
0a514     00 00 00 00 
0a518     00 00 00 00 
0a51c     00 00 00 00 
0a520     00 00 00 00 | 	byte	$00[16]
0a524     02 80 70 00 
0a528     01 AC 90 00 
0a52c     00 FE A0 00 
0a530     00 00 00 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0a534     00 00 00 00 
0a538     00 00 00 00 
0a53c     00 00 00 00 
0a540     00 00 00 00 | 	byte	$00[16]
0a544     02 80 70 00 
0a548     00 00 00 00 
0a54c     00 7F B0 00 
0a550     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a554     00 00 00 00 
0a558     00 00 00 00 
0a55c     00 00 00 00 
0a560     00 00 00 00 | 	byte	$00[16]
0a564     01 AC 70 00 
0a568     01 AC 90 00 
0a56c     00 BE 80 00 
0a570     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a574     00 00 00 00 
0a578     00 00 00 00 
0a57c     00 00 00 00 
0a580     00 00 00 00 | 	byte	$00[16]
0a584     02 80 70 00 
0a588     00 00 00 00 
0a58c     00 7F B0 00 
0a590     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a594     00 00 00 00 
0a598     00 00 00 00 
0a59c     00 00 00 00 
0a5a0     00 00 00 00 | 	byte	$00[16]
0a5a4     02 80 70 00 
0a5a8     01 AC 90 00 
0a5ac     00 FE A0 00 
0a5b0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a5b4     00 00 00 00 
0a5b8     00 00 00 00 
0a5bc     00 00 00 00 
0a5c0     00 00 00 00 | 	byte	$00[16]
0a5c4     01 AC 70 00 
0a5c8     01 7D 90 00 
0a5cc     00 FE A0 00 
0a5d0     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a5d4     00 00 00 00 
0a5d8     00 00 00 00 
0a5dc     00 00 00 00 
0a5e0     00 00 00 00 | 	byte	$00[16]
0a5e4     02 80 70 00 
0a5e8     01 68 90 00 
0a5ec     00 BE 80 00 
0a5f0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $68, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a5f4     00 00 00 00 
0a5f8     00 00 00 00 
0a5fc     00 00 00 00 
0a600     00 00 00 00 | 	byte	$00[16]
0a604     01 E0 70 00 
0a608     01 68 90 00 
0a60c     00 00 00 00 
0a610     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a614     00 00 00 00 
0a618     00 00 00 00 
0a61c     00 00 00 00 
0a620     00 00 00 00 | 	byte	$00[16]
0a624     01 E0 70 00 
0a628     00 00 00 00 
0a62c     00 FE A0 00 
0a630     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a634     00 00 00 00 
0a638     00 00 00 00 
0a63c     00 00 00 00 
0a640     00 00 00 00 | 	byte	$00[16]
0a644     01 40 70 00 
0a648     01 7D 90 00 
0a64c     00 7F B0 00 
0a650     00 00 00 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a654     00 00 00 00 
0a658     00 00 00 00 
0a65c     00 00 00 00 
0a660     00 00 00 00 | 	byte	$00[16]
0a664     01 E0 70 00 
0a668     00 00 00 00 
0a66c     00 BE 80 00 
0a670     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a674     00 00 00 00 
0a678     00 00 00 00 
0a67c     00 00 00 00 
0a680     00 00 00 00 | 	byte	$00[16]
0a684     01 E0 70 00 
0a688     01 7D C0 00 
0a68c     00 7F B0 00 
0a690     00 00 00 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a694     00 00 00 00 
0a698     00 00 00 00 
0a69c     00 00 00 00 
0a6a0     00 00 00 00 | 	byte	$00[16]
0a6a4     01 E0 70 00 
0a6a8     01 68 C0 00 
0a6ac     00 FE A0 00 
0a6b0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a6b4     00 00 00 00 
0a6b8     00 00 00 00 
0a6bc     00 00 00 00 
0a6c0     00 00 00 00 | 	byte	$00[16]
0a6c4     01 40 70 00 
0a6c8     00 00 00 00 
0a6cc     00 FE A0 00 
0a6d0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a6d4     00 00 00 00 
0a6d8     00 00 00 00 
0a6dc     00 00 00 00 
0a6e0     00 00 00 00 | 	byte	$00[16]
0a6e4     01 E0 70 00 
0a6e8     01 7D C0 00 
0a6ec     00 BE 80 00 
0a6f0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a6f4     00 00 00 00 
0a6f8     00 00 00 00 
0a6fc     00 00 00 00 
0a700     00 00 00 00 | 	byte	$00[16]
0a704     02 80 70 00 
0a708     00 00 00 00 
0a70c     00 00 00 00 
0a710     00 7F B0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a714     00 00 00 00 
0a718     00 00 00 00 
0a71c     00 00 00 00 
0a720     00 00 00 00 | 	byte	$00[16]
0a724     02 80 70 00 
0a728     01 AC 90 00 
0a72c     00 FE A0 00 
0a730     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a734     00 00 00 00 
0a738     00 00 00 00 
0a73c     00 00 00 00 
0a740     00 00 00 00 | 	byte	$00[16]
0a744     01 AC 70 00 
0a748     00 00 00 00 
0a74c     00 7F B0 00 
0a750     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a754     00 00 00 00 
0a758     00 00 00 00 
0a75c     00 00 00 00 
0a760     00 00 00 00 | 	byte	$00[16]
0a764     02 80 70 00 
0a768     00 00 00 00 
0a76c     00 BE 80 00 
0a770     00 7F B0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a774     00 00 00 00 
0a778     00 00 00 00 
0a77c     00 00 00 00 
0a780     00 00 00 00 | 	byte	$00[16]
0a784     02 80 70 00 
0a788     00 00 00 00 
0a78c     00 7F B0 00 
0a790     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a794     00 00 00 00 
0a798     00 00 00 00 
0a79c     00 00 00 00 
0a7a0     00 00 00 00 | 	byte	$00[16]
0a7a4     02 80 70 00 
0a7a8     01 AC 90 00 
0a7ac     00 FE A0 00 
0a7b0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a7b4     00 00 00 00 
0a7b8     00 00 00 00 
0a7bc     00 00 00 00 
0a7c0     00 00 00 00 | 	byte	$00[16]
0a7c4     01 AC 70 00 
0a7c8     01 7D 90 00 
0a7cc     00 FE A0 00 
0a7d0     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a7d4     00 00 00 00 
0a7d8     00 00 00 00 
0a7dc     00 00 00 00 
0a7e0     00 00 00 00 | 	byte	$00[16]
0a7e4     02 80 70 00 
0a7e8     01 68 90 00 
0a7ec     00 BE 80 00 
0a7f0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $68, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a7f4     00 00 00 00 
0a7f8     00 00 00 00 
0a7fc     00 00 00 00 
0a800     00 00 00 00 | 	byte	$00[16]
0a804     01 E0 70 00 
0a808     01 68 90 00 
0a80c     00 00 00 00 
0a810     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0a814     00 00 00 00 
0a818     00 00 00 00 
0a81c     00 00 00 00 
0a820     00 00 00 00 | 	byte	$00[16]
0a824     01 E0 70 00 
0a828     00 00 00 00 
0a82c     00 FE A0 00 
0a830     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a834     00 00 00 00 
0a838     00 00 00 00 
0a83c     00 00 00 00 
0a840     00 00 00 00 | 	byte	$00[16]
0a844     01 40 70 00 
0a848     01 7D 90 00 
0a84c     00 7F B0 00 
0a850     00 00 00 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a854     00 00 00 00 
0a858     00 00 00 00 
0a85c     00 00 00 00 
0a860     00 00 00 00 | 	byte	$00[16]
0a864     01 E0 70 00 
0a868     00 00 00 00 
0a86c     00 BE 80 00 
0a870     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a874     00 00 00 00 
0a878     00 00 00 00 
0a87c     00 00 00 00 
0a880     00 00 00 00 | 	byte	$00[16]
0a884     01 E0 70 00 
0a888     01 7D C0 00 
0a88c     00 7F B0 00 
0a890     00 00 00 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a894     00 00 00 00 
0a898     00 00 00 00 
0a89c     00 00 00 00 
0a8a0     00 00 00 00 | 	byte	$00[16]
0a8a4     01 E0 70 00 
0a8a8     01 68 C0 00 
0a8ac     00 FE A0 00 
0a8b0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a8b4     00 00 00 00 
0a8b8     00 00 00 00 
0a8bc     00 00 00 00 
0a8c0     00 00 00 00 | 	byte	$00[16]
0a8c4     01 40 70 00 
0a8c8     00 00 00 00 
0a8cc     00 FE A0 00 
0a8d0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a8d4     00 00 00 00 
0a8d8     00 00 00 00 
0a8dc     00 00 00 00 
0a8e0     00 00 00 00 | 	byte	$00[16]
0a8e4     01 E0 70 00 
0a8e8     01 7D C0 00 
0a8ec     00 BE 80 00 
0a8f0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a8f4     00 00 00 00 
0a8f8     00 00 00 00 
0a8fc     00 00 00 00 
0a900     00 00 00 00 
0a904     00 00 00 00 
0a908     00 00 00 00 
0a90c     00          | 	byte	$00[25]
0a90d     FE A0 00 00 
0a911     7F B0 00 00 
0a915     00 00 00 00 
0a919     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a91d     00 00 00 00 
0a921     00 00 00    | 	byte	$00[7]
0a924     02 3A 70 00 
0a928     01 7D 90 00 
0a92c     00 FE A0 00 
0a930     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a934     00 00 00 00 
0a938     00 00 00 00 
0a93c     00 00 00 00 
0a940     00 00 00 00 | 	byte	$00[16]
0a944     02 3A 70 00 
0a948     00 00 00 00 
0a94c     00 7F B0 00 
0a950     00 00 00 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a954     00 00 00 00 
0a958     00 00 00 00 
0a95c     00 00 00 00 
0a960     00 00 00 00 | 	byte	$00[16]
0a964     01 7D 70 00 
0a968     00 00 00 00 
0a96c     00 BE 80 00 
0a970     00 7F B0 00 | 	byte	$01, $7d, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a974     00 00 00 00 
0a978     00 00 00 00 
0a97c     00 00 00 00 
0a980     00 00 00 00 | 	byte	$00[16]
0a984     02 3A 70 00 
0a988     01 7D 90 00 
0a98c     00 7F B0 00 
0a990     00 00 00 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0a994     00 00 00 00 
0a998     00 00 00 00 
0a99c     00 00 00 00 
0a9a0     00 00 00 00 | 	byte	$00[16]
0a9a4     02 3A 70 00 
0a9a8     01 7D 90 00 
0a9ac     00 FE A0 00 
0a9b0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a9b4     00 00 00 00 
0a9b8     00 00 00 00 
0a9bc     00 00 00 00 
0a9c0     00 00 00 00 | 	byte	$00[16]
0a9c4     02 3A 70 00 
0a9c8     01 68 90 00 
0a9cc     00 FE A0 00 
0a9d0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0a9d4     00 00 00 00 
0a9d8     00 00 00 00 
0a9dc     00 00 00 00 
0a9e0     00 00 00 00 | 	byte	$00[16]
0a9e4     01 7D 70 00 
0a9e8     01 40 90 00 
0a9ec     00 BE 80 00 
0a9f0     00 7F B0 00 | 	byte	$01, $7d, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0a9f4     00 00 00 00 
0a9f8     00 00 00 00 
0a9fc     00 00 00 00 
0aa00     00 00 00 00 | 	byte	$00[16]
0aa04     02 3A 70 00 
0aa08     01 40 90 00 
0aa0c     00 00 00 00 
0aa10     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0aa14     00 00 00 00 
0aa18     00 00 00 00 
0aa1c     00 00 00 00 
0aa20     00 00 00 00 | 	byte	$00[16]
0aa24     03 58 70 00 
0aa28     00 00 00 00 
0aa2c     00 FE A0 00 
0aa30     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0aa34     00 00 00 00 
0aa38     00 00 00 00 
0aa3c     00 00 00 00 
0aa40     00 00 00 00 | 	byte	$00[16]
0aa44     03 58 70 00 
0aa48     01 68 90 00 
0aa4c     00 7F B0 00 
0aa50     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $68, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0aa54     00 00 00 00 
0aa58     00 00 00 00 
0aa5c     00 00 00 00 
0aa60     00 00 00 00 | 	byte	$00[16]
0aa64     02 3A 70 00 
0aa68     00 00 00 00 
0aa6c     00 BE 80 00 
0aa70     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0aa74     00 00 00 00 
0aa78     00 00 00 00 
0aa7c     00 00 00 00 
0aa80     00 00 00 00 | 	byte	$00[16]
0aa84     03 58 70 00 
0aa88     01 7D 90 00 
0aa8c     00 7F B0 00 
0aa90     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0aa94     00 00 00 00 
0aa98     00 00 00 00 
0aa9c     00 00 00 00 
0aaa0     00 00 00 00 | 	byte	$00[16]
0aaa4     03 58 70 00 
0aaa8     00 00 00 00 
0aaac     00 FE A0 00 
0aab0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0aab4     00 00 00 00 
0aab8     00 00 00 00 
0aabc     00 00 00 00 
0aac0     00 00 00 00 | 	byte	$00[16]
0aac4     03 58 70 00 
0aac8     01 68 90 00 
0aacc     00 FE A0 00 
0aad0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0aad4     00 00 00 00 
0aad8     00 00 00 00 
0aadc     00 00 00 00 
0aae0     00 00 00 00 | 	byte	$00[16]
0aae4     02 3A 70 00 
0aae8     00 00 00 00 
0aaec     00 BE 80 00 
0aaf0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0aaf4     00 00 00 00 
0aaf8     00 00 00 00 
0aafc     00 00 00 00 
0ab00     00 00 00 00 | 	byte	$00[16]
0ab04     03 58 70 00 
0ab08     00 00 00 00 
0ab0c     00 00 00 00 
0ab10     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0ab14     00 00 00 00 
0ab18     00 00 00 00 
0ab1c     00 00 00 00 
0ab20     00 00 00 00 | 	byte	$00[16]
0ab24     02 D0 70 00 
0ab28     00 F0 90 00 
0ab2c     00 FE A0 00 
0ab30     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ab34     00 00 00 00 
0ab38     00 00 00 00 
0ab3c     00 00 00 00 
0ab40     00 00 00 00 | 	byte	$00[16]
0ab44     02 D0 70 00 
0ab48     00 00 00 00 
0ab4c     00 7F B0 00 
0ab50     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ab54     00 00 00 00 
0ab58     00 00 00 00 
0ab5c     00 00 00 00 
0ab60     00 00 00 00 | 	byte	$00[16]
0ab64     01 E0 70 00 
0ab68     00 00 00 00 
0ab6c     00 BE 80 00 
0ab70     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0ab74     00 00 00 00 
0ab78     00 00 00 00 
0ab7c     00 00 00 00 
0ab80     00 00 00 00 | 	byte	$00[16]
0ab84     02 D0 70 00 
0ab88     00 F0 90 00 
0ab8c     00 7F B0 00 
0ab90     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ab94     00 00 00 00 
0ab98     00 00 00 00 
0ab9c     00 00 00 00 
0aba0     00 00 00 00 | 	byte	$00[16]
0aba4     02 D0 70 00 
0aba8     00 FE 90 00 
0abac     00 FE A0 00 
0abb0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $fe, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0abb4     00 00 00 00 
0abb8     00 00 00 00 
0abbc     00 00 00 00 
0abc0     00 00 00 00 | 	byte	$00[16]
0abc4     02 D0 70 00 
0abc8     01 1D 90 00 
0abcc     00 FE A0 00 
0abd0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $1d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0abd4     00 00 00 00 
0abd8     00 00 00 00 
0abdc     00 00 00 00 
0abe0     00 00 00 00 | 	byte	$00[16]
0abe4     01 E0 70 00 
0abe8     00 00 00 00 
0abec     00 BE 80 00 
0abf0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0abf4     00 00 00 00 
0abf8     00 00 00 00 
0abfc     00 00 00 00 
0ac00     00 00 00 00 | 	byte	$00[16]
0ac04     02 D0 70 00 
0ac08     01 40 90 00 
0ac0c     00 00 00 00 
0ac10     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0ac14     00 00 00 00 
0ac18     00 00 00 00 
0ac1c     00 00 00 00 
0ac20     00 00 00 00 | 	byte	$00[16]
0ac24     02 80 70 00 
0ac28     00 00 00 00 
0ac2c     00 FE A0 00 
0ac30     00 7F B0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ac34     00 00 00 00 
0ac38     00 00 00 00 
0ac3c     00 00 00 00 
0ac40     00 00 00 00 | 	byte	$00[16]
0ac44     02 80 70 00 
0ac48     01 AC 90 00 
0ac4c     00 7F B0 00 
0ac50     00 00 00 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ac54     00 00 00 00 
0ac58     00 00 00 00 
0ac5c     00 00 00 00 
0ac60     00 00 00 00 | 	byte	$00[16]
0ac64     01 AC 70 00 
0ac68     00 00 00 00 
0ac6c     00 BE 80 00 
0ac70     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0ac74     00 00 00 00 
0ac78     00 00 00 00 
0ac7c     00 00 00 00 
0ac80     00 00 00 00 | 	byte	$00[16]
0ac84     02 80 70 00 
0ac88     00 00 00 00 
0ac8c     00 7F B0 00 
0ac90     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ac94     00 00 00 00 
0ac98     00 00 00 00 
0ac9c     00 00 00 00 
0aca0     00 00 00 00 | 	byte	$00[16]
0aca4     02 80 70 00 
0aca8     00 7F B0 00 
0acac     00 FE A0 00 
0acb0     01 68 D0 00 | 	byte	$02, $80, $70, $00, $00, $7f, $b0, $00, $00, $fe, $a0, $00, $01, $68, $d0, $00
0acb4     00 00 00 00 
0acb8     00 00 00 00 
0acbc     00 00 00 00 
0acc0     00 00 00 00 | 	byte	$00[16]
0acc4     02 80 70 00 
0acc8     00 7F B0 00 
0accc     00 FE A0 00 
0acd0     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0acd4     00 00 00 00 
0acd8     00 00 00 00 
0acdc     00 00 00 00 
0ace0     00 00 00 00 | 	byte	$00[16]
0ace4     01 AC 70 00 
0ace8     01 AC DC 30 
0acec     00 BE 80 00 
0acf0     00 00 00 00 | 	byte	$01, $ac, $70, $00, $01, $ac, $dc, $30, $00, $be, $80, $00, $00, $00, $00, $00
0acf4     00 00 00 00 
0acf8     00 00 00 00 
0acfc     00 00 00 00 
0ad00     00 00 00 00 | 	byte	$00[16]
0ad04     02 80 70 00 
0ad08     00 00 00 00 
0ad0c     00 FE A0 00 
0ad10     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0ad14     00 00 00 00 
0ad18     00 00 00 00 
0ad1c     00 00 00 00 
0ad20     00 00 00 00 
0ad24     00          | 	byte	$00[17]
0ad25     FE 61 01 00 
0ad29     FE 62 01 00 
0ad2d     00 0F 04 00 
0ad31     00 00 00 00 | 	byte	$fe, $61, $01, $00, $fe, $62, $01, $00, $00, $0f, $04, $00, $00, $00, $00, $00
0ad35     00 02 01 00 
0ad39     00 01 01 00 
0ad3d     00 00 00 00 
0ad41     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad45     00 01 01 00 
0ad49     00 02 01 00 
0ad4d     00 00 00 00 
0ad51     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad55     00 02 01 00 
0ad59     00 01 01 00 
0ad5d     00 00 00 00 
0ad61     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad65     00 01 01 00 
0ad69     00 02 01 00 
0ad6d     00 00 00 00 
0ad71     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad75     00 02 01 00 
0ad79     00 01 01 00 
0ad7d     00 00 00 00 
0ad81     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad85     00 01 01 00 
0ad89     00 02 01 00 
0ad8d     00 00 00 00 
0ad91     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad95     00 02 01 00 
0ad99     00 01 01 00 
0ad9d     00 00 00 00 
0ada1     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ada5     00 01 01 00 
0ada9     00 02 01 00 
0adad     00 00 00 00 
0adb1     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adb5     00 02 01 00 
0adb9     00 01 01 00 
0adbd     00 00 00 00 
0adc1     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adc5     00 01 01 00 
0adc9     00 02 01 00 
0adcd     00 00 00 00 
0add1     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0add5     00 02 01 00 
0add9     00 01 01 00 
0addd     00 00 00 00 
0ade1     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ade5     00 01 01 00 
0ade9     00 02 01 00 
0aded     00 00 00 00 
0adf1     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0adf5     00 02 01 00 
0adf9     00 01 01 00 
0adfd     00 00 00 00 
0ae01     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae05     00 01 01 00 
0ae09     00 02 01 00 
0ae0d     00 00 00 00 
0ae11     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae15     00 02 01 00 
0ae19     00 01 01 00 
0ae1d     00 00 00 00 
0ae21     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae25     00 01 01 00 
0ae29     00 02 01 00 
0ae2d     00 00 00 00 
0ae31     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae35     00 02 01 00 
0ae39     00 01 01 00 
0ae3d     00 00 00 00 
0ae41     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae45     00 01 01 00 
0ae49     00 02 01 00 
0ae4d     00 00 00 00 
0ae51     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae55     00 02 01 00 
0ae59     00 01 01 00 
0ae5d     00 00 00 00 
0ae61     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae65     00 01 01 00 
0ae69     00 02 01 00 
0ae6d     00 00 00 00 
0ae71     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae75     00 02 01 00 
0ae79     00 01 01 00 
0ae7d     00 00 00 00 
0ae81     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae85     00 01 01 00 
0ae89     00 02 01 00 
0ae8d     00 00 00 00 
0ae91     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae95     00 02 01 00 
0ae99     00 01 01 00 
0ae9d     00 00 00 00 
0aea1     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aea5     00 01 01 00 
0aea9     00 02 01 00 
0aead     00 00 00 00 
0aeb1     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aeb5     00 02 01 00 
0aeb9     00 01 01 00 
0aebd     00 00 00 00 
0aec1     00 00 00 00 | 	byte	$00, $02, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aec5     00 01 01 00 
0aec9     00 02 01 00 
0aecd     00 00 00 00 
0aed1     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $02, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aed5     00 00 00 00 
      ...             
0af1d     00 00 00 00 
0af21     00 00 00 00 | 	byte	$00[80]
0af25     FE 60 00 00 
0af29     FE 60 00 00 
0af2d     00 00 00 00 
0af31     00 00 00 00 | 	byte	$fe, $60, $00, $00, $fe, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af35     00 00 00 00 
      ...             
0b11d     00 00 00 00 
0b121     00 00 00    | 	byte	$00[495]
0b124     01 E0 7C 01 
0b128     00 FE 62 01 
0b12c     00 00 0C 01 
0b130     00 FE 62 01 | 	byte	$01, $e0, $7c, $01, $00, $fe, $62, $01, $00, $00, $0c, $01, $00, $fe, $62, $01
0b134     00 00 0C 02 
0b138     00 00 02 01 
0b13c     00 00 0C 02 
0b140     00 00 02 01 | 	byte	$00, $00, $0c, $02, $00, $00, $02, $01, $00, $00, $0c, $02, $00, $00, $02, $01
0b144     01 E0 7C 03 
0b148     00 00 02 01 
0b14c     00 00 0C 03 
0b150     00 00 02 01 | 	byte	$01, $e0, $7c, $03, $00, $00, $02, $01, $00, $00, $0c, $03, $00, $00, $02, $01
0b154     00 00 0C 04 
0b158     00 00 02 02 
0b15c     00 00 0C 04 
0b160     00 00 02 02 | 	byte	$00, $00, $0c, $04, $00, $00, $02, $02, $00, $00, $0c, $04, $00, $00, $02, $02
0b164     01 40 7C 05 
0b168     00 00 02 02 
0b16c     00 00 0C 05 
0b170     00 00 02 02 | 	byte	$01, $40, $7c, $05, $00, $00, $02, $02, $00, $00, $0c, $05, $00, $00, $02, $02
0b174     00 00 0C 06 
0b178     00 00 02 02 
0b17c     00 00 0C 06 
0b180     00 00 02 02 | 	byte	$00, $00, $0c, $06, $00, $00, $02, $02, $00, $00, $0c, $06, $00, $00, $02, $02
0b184     01 E0 7C 07 
0b188     00 00 02 02 
0b18c     00 00 0C 07 
0b190     00 00 02 02 | 	byte	$01, $e0, $7c, $07, $00, $00, $02, $02, $00, $00, $0c, $07, $00, $00, $02, $02
0b194     00 00 0C 08 
0b198     00 00 02 03 
0b19c     00 00 0C 08 
0b1a0     00 00 02 03 | 	byte	$00, $00, $0c, $08, $00, $00, $02, $03, $00, $00, $0c, $08, $00, $00, $02, $03
0b1a4     00 00 0C 09 
0b1a8     00 00 02 03 
0b1ac     00 FE AC 09 
0b1b0     00 00 02 03 | 	byte	$00, $00, $0c, $09, $00, $00, $02, $03, $00, $fe, $ac, $09, $00, $00, $02, $03
0b1b4     00 00 0C 0A 
0b1b8     00 00 02 03 
0b1bc     00 00 0C 0A 
0b1c0     00 00 02 03 | 	byte	$00, $00, $0c, $0a, $00, $00, $02, $03, $00, $00, $0c, $0a, $00, $00, $02, $03
0b1c4     01 E0 7C 0B 
0b1c8     00 00 02 03 
0b1cc     00 FE AC 0B 
0b1d0     00 00 02 03 | 	byte	$01, $e0, $7c, $0b, $00, $00, $02, $03, $00, $fe, $ac, $0b, $00, $00, $02, $03
0b1d4     00 00 0C 0C 
0b1d8     00 00 02 04 
0b1dc     00 00 0C 0C 
0b1e0     00 00 02 04 | 	byte	$00, $00, $0c, $0c, $00, $00, $02, $04, $00, $00, $0c, $0c, $00, $00, $02, $04
0b1e4     01 40 7C 0D 
0b1e8     00 00 02 04 
0b1ec     00 BE 8C 0D 
0b1f0     00 00 02 04 | 	byte	$01, $40, $7c, $0d, $00, $00, $02, $04, $00, $be, $8c, $0d, $00, $00, $02, $04
0b1f4     00 00 0C 0E 
0b1f8     00 00 02 04 
0b1fc     00 00 0C 0E 
0b200     00 00 02 04 | 	byte	$00, $00, $0c, $0e, $00, $00, $02, $04, $00, $00, $0c, $0e, $00, $00, $02, $04
0b204     01 E0 7C 0F 
0b208     00 00 02 05 
0b20c     00 00 0C 0F 
0b210     00 00 02 05 | 	byte	$01, $e0, $7c, $0f, $00, $00, $02, $05, $00, $00, $0c, $0f, $00, $00, $02, $05
0b214     00 00 0C 10 
0b218     00 00 02 05 
0b21c     00 00 0C 10 
0b220     00 00 02 05 | 	byte	$00, $00, $0c, $10, $00, $00, $02, $05, $00, $00, $0c, $10, $00, $00, $02, $05
0b224     02 1A 7C 11 
0b228     00 00 02 06 
0b22c     00 FE AC 11 
0b230     00 00 02 06 | 	byte	$02, $1a, $7c, $11, $00, $00, $02, $06, $00, $fe, $ac, $11, $00, $00, $02, $06
0b234     00 00 0C 12 
0b238     00 00 02 06 
0b23c     00 00 0C 12 
0b240     00 00 02 06 | 	byte	$00, $00, $0c, $12, $00, $00, $02, $06, $00, $00, $0c, $12, $00, $00, $02, $06
0b244     02 1A 7C 13 
0b248     00 00 02 07 
0b24c     00 FE BC 13 
0b250     00 00 02 07 | 	byte	$02, $1a, $7c, $13, $00, $00, $02, $07, $00, $fe, $bc, $13, $00, $00, $02, $07
0b254     00 00 0C 14 
0b258     00 00 02 07 
0b25c     00 00 0C 14 
0b260     00 00 02 07 | 	byte	$00, $00, $0c, $14, $00, $00, $02, $07, $00, $00, $0c, $14, $00, $00, $02, $07
0b264     01 68 7C 15 
0b268     00 00 02 07 
0b26c     00 BE 8C 15 
0b270     00 00 02 07 | 	byte	$01, $68, $7c, $15, $00, $00, $02, $07, $00, $be, $8c, $15, $00, $00, $02, $07
0b274     00 00 0C 16 
0b278     00 00 02 08 
0b27c     00 00 0C 16 
0b280     00 00 02 08 | 	byte	$00, $00, $0c, $16, $00, $00, $02, $08, $00, $00, $0c, $16, $00, $00, $02, $08
0b284     02 1A 7C 17 
0b288     00 00 02 08 
0b28c     00 FE BC 17 
0b290     00 00 02 08 | 	byte	$02, $1a, $7c, $17, $00, $00, $02, $08, $00, $fe, $bc, $17, $00, $00, $02, $08
0b294     00 00 0C 18 
0b298     00 00 02 09 
0b29c     00 00 0C 18 
0b2a0     00 00 02 09 | 	byte	$00, $00, $0c, $18, $00, $00, $02, $09, $00, $00, $0c, $18, $00, $00, $02, $09
0b2a4     00 00 0C 19 
0b2a8     00 00 02 09 
0b2ac     00 FE AC 19 
0b2b0     00 00 02 09 | 	byte	$00, $00, $0c, $19, $00, $00, $02, $09, $00, $fe, $ac, $19, $00, $00, $02, $09
0b2b4     00 00 0C 1A 
0b2b8     00 00 02 0A 
0b2bc     00 00 0C 1A 
0b2c0     00 00 02 0A | 	byte	$00, $00, $0c, $1a, $00, $00, $02, $0a, $00, $00, $0c, $1a, $00, $00, $02, $0a
0b2c4     02 1A 7C 1B 
0b2c8     00 00 02 0B 
0b2cc     00 FE AC 1B 
0b2d0     00 00 02 0B | 	byte	$02, $1a, $7c, $1b, $00, $00, $02, $0b, $00, $fe, $ac, $1b, $00, $00, $02, $0b
0b2d4     00 00 0C 1C 
0b2d8     00 00 02 0B 
0b2dc     00 00 0C 1C 
0b2e0     00 00 02 0B | 	byte	$00, $00, $0c, $1c, $00, $00, $02, $0b, $00, $00, $0c, $1c, $00, $00, $02, $0b
0b2e4     01 68 7C 1D 
0b2e8     00 00 02 0B 
0b2ec     00 BE 8C 1D 
0b2f0     00 00 02 0B | 	byte	$01, $68, $7c, $1d, $00, $00, $02, $0b, $00, $be, $8c, $1d, $00, $00, $02, $0b
0b2f4     00 00 0C 1E 
0b2f8     00 00 02 0C 
0b2fc     00 00 0C 1E 
0b300     00 00 02 0C | 	byte	$00, $00, $0c, $1e, $00, $00, $02, $0c, $00, $00, $0c, $1e, $00, $00, $02, $0c
0b304     02 1A 7C 1F 
0b308     00 00 02 0C 
0b30c     00 00 0C 1F 
0b310     00 00 02 0C | 	byte	$02, $1a, $7c, $1f, $00, $00, $02, $0c, $00, $00, $0c, $1f, $00, $00, $02, $0c
0b314     00 00 0C 20 
0b318     00 00 02 0C 
0b31c     00 00 0C 20 
0b320     00 00 02 0C | 	byte	$00, $00, $0c, $20, $00, $00, $02, $0c, $00, $00, $0c, $20, $00, $00, $02, $0c
0b324     03 58 7C 21 
0b328     00 00 0A 04 
0b32c     00 FE AC 21 
0b330     00 00 0A 04 | 	byte	$03, $58, $7c, $21, $00, $00, $0a, $04, $00, $fe, $ac, $21, $00, $00, $0a, $04
0b334     00 00 0C 22 
0b338     00 00 0A 04 
0b33c     00 00 0C 22 
0b340     00 00 0A 04 | 	byte	$00, $00, $0c, $22, $00, $00, $0a, $04, $00, $00, $0c, $22, $00, $00, $0a, $04
0b344     03 58 7C 23 
0b348     00 00 0A 04 
0b34c     00 FE BC 23 
0b350     00 00 0A 04 | 	byte	$03, $58, $7c, $23, $00, $00, $0a, $04, $00, $fe, $bc, $23, $00, $00, $0a, $04
0b354     00 00 0C 24 
0b358     00 00 0A 04 
0b35c     00 00 0C 24 
0b360     00 00 0A 04 | 	byte	$00, $00, $0c, $24, $00, $00, $0a, $04, $00, $00, $0c, $24, $00, $00, $0a, $04
0b364     02 3A 7C 25 
0b368     11 AC 02 0E 
0b36c     00 BE 8C 25 
0b370     11 AC 02 0E | 	byte	$02, $3a, $7c, $25, $11, $ac, $02, $0e, $00, $be, $8c, $25, $11, $ac, $02, $0e
0b374     00 00 0C 26 
0b378     00 00 02 0F 
0b37c     00 00 0C 26 
0b380     00 00 02 0E | 	byte	$00, $00, $0c, $26, $00, $00, $02, $0f, $00, $00, $0c, $26, $00, $00, $02, $0e
0b384     03 58 7C 27 
0b388     00 00 02 02 
0b38c     00 FE BC 27 
0b390     00 00 02 0E | 	byte	$03, $58, $7c, $27, $00, $00, $02, $02, $00, $fe, $bc, $27, $00, $00, $02, $0e
0b394     00 00 0C 28 
0b398     00 00 02 02 
0b39c     00 00 0C 28 
0b3a0     00 00 02 0E | 	byte	$00, $00, $0c, $28, $00, $00, $02, $02, $00, $00, $0c, $28, $00, $00, $02, $0e
0b3a4     00 00 0C 29 
0b3a8     00 00 02 04 
0b3ac     00 FE AC 29 
0b3b0     00 00 02 0E | 	byte	$00, $00, $0c, $29, $00, $00, $02, $04, $00, $fe, $ac, $29, $00, $00, $02, $0e
0b3b4     00 00 0C 2A 
0b3b8     00 00 02 05 
0b3bc     00 00 0C 2A 
0b3c0     00 00 02 03 | 	byte	$00, $00, $0c, $2a, $00, $00, $02, $05, $00, $00, $0c, $2a, $00, $00, $02, $03
0b3c4     03 58 7C 2B 
0b3c8     00 00 02 06 
0b3cc     00 FE AC 2B 
0b3d0     00 00 02 02 | 	byte	$03, $58, $7c, $2b, $00, $00, $02, $06, $00, $fe, $ac, $2b, $00, $00, $02, $02
0b3d4     00 00 0C 2C 
0b3d8     00 00 02 07 
0b3dc     00 00 0C 2C 
0b3e0     00 00 02 02 | 	byte	$00, $00, $0c, $2c, $00, $00, $02, $07, $00, $00, $0c, $2c, $00, $00, $02, $02
0b3e4     02 3A 7C 2D 
0b3e8     00 00 02 07 
0b3ec     00 BE 8C 2D 
0b3f0     00 00 02 02 | 	byte	$02, $3a, $7c, $2d, $00, $00, $02, $07, $00, $be, $8c, $2d, $00, $00, $02, $02
0b3f4     00 00 0C 2E 
0b3f8     00 00 02 07 
0b3fc     00 00 0C 2E 
0b400     00 00 02 03 | 	byte	$00, $00, $0c, $2e, $00, $00, $02, $07, $00, $00, $0c, $2e, $00, $00, $02, $03
0b404     03 58 7C 2F 
0b408     00 00 02 07 
0b40c     00 00 0C 2F 
0b410     00 00 02 03 | 	byte	$03, $58, $7c, $2f, $00, $00, $02, $07, $00, $00, $0c, $2f, $00, $00, $02, $03
0b414     00 00 0C 30 
0b418     00 00 02 07 
0b41c     00 00 0C 30 
0b420     00 00 02 03 | 	byte	$00, $00, $0c, $30, $00, $00, $02, $07, $00, $00, $0c, $30, $00, $00, $02, $03
0b424     02 D0 7C 31 
0b428     00 00 02 04 
0b42c     00 FE AC 31 
0b430     00 00 02 02 | 	byte	$02, $d0, $7c, $31, $00, $00, $02, $04, $00, $fe, $ac, $31, $00, $00, $02, $02
0b434     00 00 0C 32 
0b438     00 00 02 04 
0b43c     00 00 0C 32 
0b440     00 00 02 02 | 	byte	$00, $00, $0c, $32, $00, $00, $02, $04, $00, $00, $0c, $32, $00, $00, $02, $02
0b444     02 D0 7C 34 
0b448     00 00 02 04 
0b44c     00 FE BC 34 
0b450     00 00 02 02 | 	byte	$02, $d0, $7c, $34, $00, $00, $02, $04, $00, $fe, $bc, $34, $00, $00, $02, $02
0b454     00 00 0C 36 
0b458     00 00 02 04 
0b45c     00 00 0C 36 
0b460     00 00 00 00 | 	byte	$00, $00, $0c, $36, $00, $00, $02, $04, $00, $00, $0c, $36, $00, $00, $00, $00
0b464     01 E0 7C 38 
0b468     00 00 00 00 
0b46c     00 BE 8C 38 
0b470     01 AC F0 00 | 	byte	$01, $e0, $7c, $38, $00, $00, $00, $00, $00, $be, $8c, $38, $01, $ac, $f0, $00
0b474     00 00 0C 3B 
0b478     00 00 00 00 
0b47c     00 00 0C 3A 
0b480     00 00 00 00 | 	byte	$00, $00, $0c, $3b, $00, $00, $00, $00, $00, $00, $0c, $3a, $00, $00, $00, $00
0b484     02 D0 7C 3E 
0b488     00 00 00 00 
0b48c     00 FE BC 3E 
0b490     01 AC F0 00 | 	byte	$02, $d0, $7c, $3e, $00, $00, $00, $00, $00, $fe, $bc, $3e, $01, $ac, $f0, $00
0b494     00 00 00 00 
0b498     00 00 00 00 
0b49c     00 00       | 	byte	$00[10]
0b49e     0C 3F 00 00 
0b4a2     00 00 00 00 
0b4a6     00 00 01 AC 
0b4aa     FC 10 00 FE | 	byte	$0c, $3f, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $fc, $10, $00, $fe
0b4ae     A0 00 00 00 
0b4b2     00 00 00 00 
0b4b6     00 00 00 00 
0b4ba     00 00 00 00 | 	byte	$a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4be     00 00 00 00 
0b4c2     00 00       | 	byte	$00[6]
0b4c4     02 D0 70 00 
0b4c8     01 AC FC 10 
0b4cc     00 FE A0 00 
0b4d0     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $ac, $fc, $10, $00, $fe, $a0, $00, $00, $00, $00, $00
0b4d4     00 00 00 00 
0b4d8     00 00 00 00 
0b4dc     00 00 00 00 
0b4e0     00 00 00 00 | 	byte	$00[16]
0b4e4     01 E0 70 00 
0b4e8     00 00 00 00 
0b4ec     00 BE 80 00 
0b4f0     01 AC F0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $ac, $f0, $00
0b4f4     00 00 00 00 
0b4f8     00 00 00 00 
0b4fc     00 00 00 00 
0b500     00 00 00 00 | 	byte	$00[16]
0b504     02 D0 70 00 
0b508     01 AC FC 10 
0b50c     00 FE A0 00 
0b510     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $ac, $fc, $10, $00, $fe, $a0, $00, $00, $00, $00, $00
0b514     00 00 00 00 
0b518     00 00 00 00 
0b51c     00 00 00 00 
0b520     00 00 00 00 | 	byte	$00[16]
0b524     01 E0 7F 04 
0b528     00 F0 90 00 
0b52c     00 FE A0 00 
0b530     00 F0 C0 00 | 	byte	$01, $e0, $7f, $04, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0, $c0, $00
0b534     00 00 00 00 
0b538     00 00 00 00 
0b53c     00 00 00 00 
0b540     00 00 00 00 | 	byte	$00[16]
0b544     01 E0 70 00 
0b548     00 00 00 00 
0b54c     00 7F B0 00 
0b550     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b554     00 00 00 00 
0b558     00 00 00 00 
0b55c     00 00 00 00 
0b560     00 00 00 00 | 	byte	$00[16]
0b564     01 40 70 00 
0b568     01 40 90 00 
0b56c     00 BE 80 00 
0b570     00 F0 CC 16 | 	byte	$01, $40, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $f0, $cc, $16
0b574     00 00 00 00 
0b578     00 00 00 00 
0b57c     00 00 00 00 
0b580     00 00 00 00 | 	byte	$00[16]
0b584     01 E0 70 00 
0b588     01 7D 90 00 
0b58c     00 7F B0 00 
0b590     00 00 00 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b594     00 00 00 00 
0b598     00 00 00 00 
0b59c     00 00 00 00 
0b5a0     00 00 00 00 
0b5a4     00 00 00 00 
0b5a8     00 00 00 00 
0b5ac     00          | 	byte	$00[25]
0b5ad     FE A0 00 00 
0b5b1     7F B0 00 00 
0b5b5     00 00 00 00 
0b5b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5bd     00 00 00 00 
0b5c1     00 00 00    | 	byte	$00[7]
0b5c4     01 E0 70 00 
0b5c8     01 40 90 00 
0b5cc     00 FE A0 00 
0b5d0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b5d4     00 00 00 00 
0b5d8     00 00 00 00 
0b5dc     00 00 00 00 
0b5e0     00 00 00 00 | 	byte	$00[16]
0b5e4     01 40 70 00 
0b5e8     01 7D 90 00 
0b5ec     00 BE 80 00 
0b5f0     01 53 E0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0b5f4     00 00 00 00 
0b5f8     00 00 00 00 
0b5fc     00 00 00 00 
0b600     00 00 00 00 | 	byte	$00[16]
0b604     01 E0 70 00 
0b608     00 F0 90 00 
0b60c     00 00 00 00 
0b610     00 F0 C0 00 | 	byte	$01, $e0, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $f0, $c0, $00
0b614     00 00 00 00 
0b618     00 00 00 00 
0b61c     00 00 00 00 
0b620     00 00 00 00 | 	byte	$00[16]
0b624     02 1A 70 00 
0b628     00 F0 90 00 
0b62c     00 FE A0 00 
0b630     00 F0 C0 00 | 	byte	$02, $1a, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0, $c0, $00
0b634     00 00 00 00 
0b638     00 00 00 00 
0b63c     00 00 00 00 
0b640     00 00 00 00 | 	byte	$00[16]
0b644     02 1A 70 00 
0b648     00 00 00 00 
0b64c     00 7F B0 00 
0b650     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b654     00 00 00 00 
0b658     00 00 00 00 
0b65c     00 00 00 00 
0b660     00 00 00 00 | 	byte	$00[16]
0b664     01 68 70 00 
0b668     01 40 90 00 
0b66c     00 BE 80 00 
0b670     00 F0 CC 16 | 	byte	$01, $68, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $f0, $cc, $16
0b674     00 00 00 00 
0b678     00 00 00 00 
0b67c     00 00 00 00 
0b680     00 00 00 00 | 	byte	$00[16]
0b684     02 1A 70 00 
0b688     01 7D 90 00 
0b68c     00 7F B0 00 
0b690     00 00 00 00 | 	byte	$02, $1a, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b694     00 00 00 00 
0b698     00 00 00 00 
0b69c     00 00 00 00 
0b6a0     00 00 00 00 
0b6a4     00 00 00 00 
0b6a8     00 00 00 00 
0b6ac     00          | 	byte	$00[25]
0b6ad     FE A0 00 00 
0b6b1     7F B0 00 00 
0b6b5     00 00 00 00 
0b6b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b6bd     00 00 00 00 
0b6c1     00 00 00    | 	byte	$00[7]
0b6c4     02 1A 70 00 
0b6c8     01 40 90 00 
0b6cc     00 FE A0 00 
0b6d0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b6d4     00 00 00 00 
0b6d8     00 00 00 00 
0b6dc     00 00 00 00 
0b6e0     00 00 00 00 | 	byte	$00[16]
0b6e4     01 68 70 00 
0b6e8     01 7D 90 00 
0b6ec     00 BE 80 00 
0b6f0     01 53 E0 00 | 	byte	$01, $68, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0b6f4     00 00 00 00 
0b6f8     00 00 00 00 
0b6fc     00 00 00 00 
0b700     00 00 00 00 | 	byte	$00[16]
0b704     02 1A 70 00 
0b708     00 F0 90 00 
0b70c     00 00 00 00 
0b710     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0b714     00 00 00 00 
0b718     00 00 00 00 
0b71c     00 00 00 00 
0b720     00 00 00 00 | 	byte	$00[16]
0b724     03 58 70 00 
0b728     00 F0 90 00 
0b72c     00 FE A0 00 
0b730     00 F0 C0 00 | 	byte	$03, $58, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0, $c0, $00
0b734     00 00 00 00 
0b738     00 00 00 00 
0b73c     00 00 00 00 
0b740     00 00 00 00 | 	byte	$00[16]
0b744     03 58 70 00 
0b748     00 00 00 00 
0b74c     00 7F B0 00 
0b750     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b754     00 00 00 00 
0b758     00 00 00 00 
0b75c     00 00 00 00 
0b760     00 00 00 00 | 	byte	$00[16]
0b764     02 3A 70 00 
0b768     01 40 90 00 
0b76c     00 BE 80 00 
0b770     00 F0 CC 16 | 	byte	$02, $3a, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $f0, $cc, $16
0b774     00 00 00 00 
0b778     00 00 00 00 
0b77c     00 00 00 00 
0b780     00 00 00 00 | 	byte	$00[16]
0b784     03 58 70 00 
0b788     01 7D 90 00 
0b78c     00 7F B0 00 
0b790     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b794     00 00 00 00 
0b798     00 00 00 00 
0b79c     00 00 00 00 
0b7a0     00 00 00 00 
0b7a4     00 00 00 00 
0b7a8     00 00 00 00 
0b7ac     00          | 	byte	$00[25]
0b7ad     FE A0 00 00 
0b7b1     7F B0 00 00 
0b7b5     00 00 00 00 
0b7b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b7bd     00 00 00 00 
0b7c1     00 00 00    | 	byte	$00[7]
0b7c4     03 58 70 00 
0b7c8     01 40 90 00 
0b7cc     00 FE A0 00 
0b7d0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b7d4     00 00 00 00 
0b7d8     00 00 00 00 
0b7dc     00 00 00 00 
0b7e0     00 00 00 00 | 	byte	$00[16]
0b7e4     02 3A 70 00 
0b7e8     01 7D 90 00 
0b7ec     00 BE 80 00 
0b7f0     01 53 E0 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0b7f4     00 00 00 00 
0b7f8     00 00 00 00 
0b7fc     00 00 00 00 
0b800     00 00 00 00 | 	byte	$00[16]
0b804     03 58 70 00 
0b808     00 F0 90 00 
0b80c     00 00 00 00 
0b810     00 F0 C0 00 | 	byte	$03, $58, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $f0, $c0, $00
0b814     00 00 00 00 
0b818     00 00 00 00 
0b81c     00 00 00 00 
0b820     00 00 00 00 | 	byte	$00[16]
0b824     02 D0 70 00 
0b828     00 F0 90 00 
0b82c     00 FE A0 00 
0b830     00 F0 C0 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0, $c0, $00
0b834     00 00 00 00 
0b838     00 00 00 00 
0b83c     00 00 00 00 
0b840     00 00 00 00 | 	byte	$00[16]
0b844     02 D0 70 00 
0b848     00 00 00 00 
0b84c     00 7F B0 00 
0b850     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b854     00 00 00 00 
0b858     00 00 00 00 
0b85c     00 00 00 00 
0b860     00 00 00 00 | 	byte	$00[16]
0b864     01 E0 70 00 
0b868     01 40 90 00 
0b86c     00 BE 80 00 
0b870     00 F0 CC 16 | 	byte	$01, $e0, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $f0, $cc, $16
0b874     00 00 00 00 
0b878     00 00 00 00 
0b87c     00 00 00 00 
0b880     00 00 00 00 | 	byte	$00[16]
0b884     02 D0 70 00 
0b888     01 7D 90 00 
0b88c     00 7F B0 00 
0b890     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b894     00 00 00 00 
0b898     00 00 00 00 
0b89c     00 00 00 00 
0b8a0     00 00 00 00 
0b8a4     00 00 00 00 
0b8a8     00 00 00 00 
0b8ac     00          | 	byte	$00[25]
0b8ad     FE A0 00 00 
0b8b1     7F B0 00 00 
0b8b5     00 00 00 00 
0b8b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b8bd     00 00 00 00 
0b8c1     00 00 00    | 	byte	$00[7]
0b8c4     02 D0 70 00 
0b8c8     01 40 90 00 
0b8cc     00 FE A0 00 
0b8d0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b8d4     00 00 00 00 
0b8d8     00 00 00 00 
0b8dc     00 00 00 00 
0b8e0     00 00 00 00 | 	byte	$00[16]
0b8e4     01 E0 70 00 
0b8e8     01 7D 90 00 
0b8ec     00 BE 80 00 
0b8f0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0b8f4     00 00 00 00 
0b8f8     00 00 00 00 
0b8fc     00 00 00 00 
0b900     00 00 00 00 | 	byte	$00[16]
0b904     02 D0 70 00 
0b908     00 F0 90 00 
0b90c     00 FE A0 00 
0b910     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b914     00 00 00 00 
0b918     00 00 00 00 
0b91c     00 00 00 00 
0b920     00 00 00 00 | 	byte	$00[16]
0b924     01 E0 7F 04 
0b928     01 7D 90 00 
0b92c     00 FE A0 00 
0b930     00 7F B0 00 | 	byte	$01, $e0, $7f, $04, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b934     00 00 00 00 
0b938     00 00 00 00 
0b93c     00 00 00 00 
0b940     00 00 00 00 | 	byte	$00[16]
0b944     01 E0 70 00 
0b948     00 00 00 00 
0b94c     00 7F B0 00 
0b950     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b954     00 00 00 00 
0b958     00 00 00 00 
0b95c     00 00 00 00 
0b960     00 00 00 00 | 	byte	$00[16]
0b964     01 40 70 00 
0b968     01 7D 90 00 
0b96c     00 BE 80 00 
0b970     00 7F B0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0b974     00 00 00 00 
0b978     00 00 00 00 
0b97c     00 00 00 00 
0b980     00 00 00 00 | 	byte	$00[16]
0b984     01 E0 70 00 
0b988     00 00 00 00 
0b98c     00 7F B0 00 
0b990     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b994     00 00 00 00 
0b998     00 00 00 00 
0b99c     00 00 00 00 
0b9a0     00 00 00 00 
0b9a4     00 00 00 00 | 	byte	$00[20]
0b9a8     01 7D 90 00 
0b9ac     00 FE A0 00 
0b9b0     00 7F B0 00 
0b9b4     00 00 00 00 | 	byte	$01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0b9b8     00 00 00 00 
0b9bc     00 00 00 00 
0b9c0     00 00 00 00 | 	byte	$00[12]
0b9c4     01 E0 70 00 
0b9c8     01 68 90 00 
0b9cc     00 FE A0 00 
0b9d0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0b9d4     00 00 00 00 
0b9d8     00 00 00 00 
0b9dc     00 00 00 00 
0b9e0     00 00 00 00 | 	byte	$00[16]
0b9e4     01 40 70 00 
0b9e8     01 7D 90 00 
0b9ec     00 BE 80 00 
0b9f0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0b9f4     00 00 00 00 
0b9f8     00 00 00 00 
0b9fc     00 00 00 00 
0ba00     00 00 00 00 | 	byte	$00[16]
0ba04     01 E0 70 00 
0ba08     01 AC 90 00 
0ba0c     00 00 00 00 
0ba10     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0ba14     00 00 00 00 
0ba18     00 00 00 00 
0ba1c     00 00 00 00 
0ba20     00 00 00 00 | 	byte	$00[16]
0ba24     02 1A 70 00 
0ba28     00 00 00 00 
0ba2c     00 FE A0 00 
0ba30     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ba34     00 00 00 00 
0ba38     00 00 00 00 
0ba3c     00 00 00 00 
0ba40     00 00 00 00 | 	byte	$00[16]
0ba44     02 1A 70 00 
0ba48     00 00 00 00 
0ba4c     00 7F B0 00 
0ba50     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ba54     00 00 00 00 
0ba58     00 00 00 00 
0ba5c     00 00 00 00 
0ba60     00 00 00 00 | 	byte	$00[16]
0ba64     01 68 70 00 
0ba68     00 00 00 00 
0ba6c     00 BE 80 00 
0ba70     00 7F B0 00 | 	byte	$01, $68, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0ba74     00 00 00 00 
0ba78     00 00 00 00 
0ba7c     00 00 00 00 
0ba80     00 00 00 00 | 	byte	$00[16]
0ba84     02 1A 70 00 
0ba88     00 00 00 00 
0ba8c     00 7F B0 00 
0ba90     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ba94     00 00 00 00 
0ba98     00 00 00 00 
0ba9c     00 00 00 00 
0baa0     00 00 00 00 
0baa4     00 00 00 00 
0baa8     00 00 00 00 
0baac     00          | 	byte	$00[25]
0baad     FE A0 00 00 
0bab1     7F B0 00 00 
0bab5     00 00 00 00 
0bab9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0babd     00 00 00 00 
0bac1     00 00 00    | 	byte	$00[7]
0bac4     02 1A 70 00 
0bac8     01 E0 90 00 
0bacc     00 FE A0 00 
0bad0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bad4     00 00 00 00 
0bad8     00 00 00 00 
0badc     00 00 00 00 
0bae0     00 00 00 00 | 	byte	$00[16]
0bae4     01 68 70 00 
0bae8     01 AC 90 00 
0baec     00 BE 80 00 
0baf0     00 7F B0 00 | 	byte	$01, $68, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0baf4     00 00 00 00 
0baf8     00 00 00 00 
0bafc     00 00 00 00 
0bb00     00 00 00 00 | 	byte	$00[16]
0bb04     02 1A 70 00 
0bb08     00 00 00 00 
0bb0c     00 00 00 00 
0bb10     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0bb14     00 00 00 00 
0bb18     00 00 00 00 
0bb1c     00 00 00 00 
0bb20     00 00 00 00 | 	byte	$00[16]
0bb24     03 58 70 00 
0bb28     02 3A 90 00 
0bb2c     00 FE A0 00 
0bb30     00 7F B0 00 | 	byte	$03, $58, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bb34     00 00 00 00 
0bb38     00 00 00 00 
0bb3c     00 00 00 00 
0bb40     00 00 00 00 | 	byte	$00[16]
0bb44     03 58 70 00 
0bb48     00 00 00 00 
0bb4c     00 7F B0 00 
0bb50     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bb54     00 00 00 00 
0bb58     00 00 00 00 
0bb5c     00 00 00 00 
0bb60     00 00 00 00 | 	byte	$00[16]
0bb64     02 3A 70 00 
0bb68     00 00 00 00 
0bb6c     00 BE 80 00 
0bb70     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bb74     00 00 00 00 
0bb78     00 00 00 00 
0bb7c     00 00 00 00 
0bb80     00 00 00 00 | 	byte	$00[16]
0bb84     03 58 70 00 
0bb88     00 00 00 00 
0bb8c     00 7F B0 00 
0bb90     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bb94     00 00 00 00 
0bb98     00 00 00 00 
0bb9c     00 00 00 00 
0bba0     00 00 00 00 
0bba4     00 00 00 00 
0bba8     00 00 00 00 
0bbac     00          | 	byte	$00[25]
0bbad     FE A0 00 00 
0bbb1     7F B0 00 00 
0bbb5     00 00 00 00 
0bbb9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bbbd     00 00 00 00 
0bbc1     00 00 00    | 	byte	$00[7]
0bbc4     03 58 70 00 
0bbc8     00 00 00 00 
0bbcc     00 FE A0 00 
0bbd0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bbd4     00 00 00 00 
0bbd8     00 00 00 00 
0bbdc     00 00 00 00 
0bbe0     00 00 00 00 | 	byte	$00[16]
0bbe4     02 3A 70 00 
0bbe8     02 3A 90 00 
0bbec     00 BE 80 00 
0bbf0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $02, $3a, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bbf4     00 00 00 00 
0bbf8     00 00 00 00 
0bbfc     00 00 00 00 
0bc00     00 00 00 00 | 	byte	$00[16]
0bc04     03 58 70 00 
0bc08     01 FC 90 00 
0bc0c     00 00 00 00 
0bc10     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $fc, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0bc14     00 00 00 00 
0bc18     00 00 00 00 
0bc1c     00 00 00 00 
0bc20     00 00 00 00 | 	byte	$00[16]
0bc24     02 D0 70 00 
0bc28     01 E0 90 00 
0bc2c     00 FE A0 00 
0bc30     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bc34     00 00 00 00 
0bc38     00 00 00 00 
0bc3c     00 00 00 00 
0bc40     00 00 00 00 | 	byte	$00[16]
0bc44     02 D0 70 00 
0bc48     00 00 00 00 
0bc4c     00 7F B0 00 
0bc50     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bc54     00 00 00 00 
0bc58     00 00 00 00 
0bc5c     00 00 00 00 
0bc60     00 00 00 00 | 	byte	$00[16]
0bc64     01 E0 70 00 
0bc68     01 AC 90 00 
0bc6c     00 BE 80 00 
0bc70     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bc74     00 00 00 00 
0bc78     00 00 00 00 
0bc7c     00 00 00 00 
0bc80     00 00 00 00 | 	byte	$00[16]
0bc84     02 D0 70 00 
0bc88     00 00 00 00 
0bc8c     00 7F B0 00 
0bc90     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bc94     00 00 00 00 
0bc98     00 00 00 00 
0bc9c     00 00 00 00 
0bca0     00 00 00 00 
0bca4     00 00 00 00 | 	byte	$00[20]
0bca8     01 E0 90 00 
0bcac     00 FE A0 00 
0bcb0     00 7F B0 00 
0bcb4     00 00 00 00 | 	byte	$01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bcb8     00 00 00 00 
0bcbc     00 00 00 00 
0bcc0     00 00 00 00 | 	byte	$00[12]
0bcc4     02 D0 70 00 
0bcc8     00 00 00 00 
0bccc     00 FE A0 00 
0bcd0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bcd4     00 00 00 00 
0bcd8     00 00 00 00 
0bcdc     00 00 00 00 
0bce0     00 00 00 00 | 	byte	$00[16]
0bce4     01 E0 70 00 
0bce8     01 FC 90 00 
0bcec     00 BE 80 00 
0bcf0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $fc, $90, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bcf4     00 00 00 00 
0bcf8     00 00 00 00 
0bcfc     00 00 00 00 
0bd00     00 00 00 00 | 	byte	$00[16]
0bd04     02 D0 70 00 
0bd08     02 3A 90 00 
0bd0c     00 FE A0 00 
0bd10     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bd14     00 00 00 00 
0bd18     00 00 00 00 
0bd1c     00 00 00 00 
0bd20     00 00 00 00 | 	byte	$00[16]
0bd24     01 E0 7F 04 
0bd28     00 00 00 00 
0bd2c     00 FE A0 00 
0bd30     00 7F B0 00 | 	byte	$01, $e0, $7f, $04, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bd34     00 00 00 00 
0bd38     00 00 00 00 
0bd3c     00 00 00 00 
0bd40     00 00 00 00 | 	byte	$00[16]
0bd44     01 E0 70 00 
0bd48     00 00 00 00 
0bd4c     00 7F B0 00 
0bd50     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bd54     00 00 00 00 
0bd58     00 00 00 00 
0bd5c     00 00 00 00 
0bd60     00 00 00 00 | 	byte	$00[16]
0bd64     01 40 70 00 
0bd68     00 00 00 00 
0bd6c     00 BE 80 00 
0bd70     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bd74     00 00 00 00 
0bd78     00 00 00 00 
0bd7c     00 00 00 00 
0bd80     00 00 00 00 | 	byte	$00[16]
0bd84     01 E0 70 00 
0bd88     00 00 00 00 
0bd8c     00 7F B0 00 
0bd90     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bd94     00 00 00 00 
0bd98     00 00 00 00 
0bd9c     00 00 00 00 
0bda0     00 00 00 00 
0bda4     00 00 00 00 
0bda8     00 00 00 00 
0bdac     00          | 	byte	$00[25]
0bdad     FE A0 00 00 
0bdb1     7F B0 00 00 
0bdb5     00 00 00 00 
0bdb9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bdbd     00 00 00 00 
0bdc1     00 00 00    | 	byte	$00[7]
0bdc4     01 E0 70 00 
0bdc8     00 00 00 00 
0bdcc     00 FE A0 00 
0bdd0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bdd4     00 00 00 00 
0bdd8     00 00 00 00 
0bddc     00 00 00 00 
0bde0     00 00 00 00 | 	byte	$00[16]
0bde4     01 40 70 00 
0bde8     00 00 00 00 
0bdec     00 BE 80 00 
0bdf0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bdf4     00 00 00 00 
0bdf8     00 00 00 00 
0bdfc     00 00 00 00 
0be00     00 00 00 00 | 	byte	$00[16]
0be04     01 E0 70 00 
0be08     00 00 00 00 
0be0c     00 00 00 00 
0be10     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0be14     00 00 00 00 
0be18     00 00 00 00 
0be1c     00 00 00 00 
0be20     00 00 00 00 | 	byte	$00[16]
0be24     02 1A 70 00 
0be28     00 00 00 00 
0be2c     00 FE A0 00 
0be30     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0be34     00 00 00 00 
0be38     00 00 00 00 
0be3c     00 00 00 00 
0be40     00 00 00 00 | 	byte	$00[16]
0be44     02 1A 70 00 
0be48     00 00 00 00 
0be4c     00 7F B0 00 
0be50     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0be54     00 00 00 00 
0be58     00 00 00 00 
0be5c     00 00 00 00 
0be60     00 00 00 00 | 	byte	$00[16]
0be64     01 68 70 00 
0be68     00 00 00 00 
0be6c     00 BE 80 00 
0be70     00 7F B0 00 | 	byte	$01, $68, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0be74     00 00 00 00 
0be78     00 00 00 00 
0be7c     00 00 00 00 
0be80     00 00 00 00 | 	byte	$00[16]
0be84     02 1A 70 00 
0be88     00 00 00 00 
0be8c     00 7F B0 00 
0be90     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0be94     00 00 00 00 
0be98     00 00 00 00 
0be9c     00 00 00 00 
0bea0     00 00 00 00 
0bea4     00 00 00 00 
0bea8     00 00 00 00 
0beac     00          | 	byte	$00[25]
0bead     FE A0 00 00 
0beb1     7F B0 00 00 
0beb5     00 00 00 00 
0beb9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bebd     00 00 00 00 
0bec1     00 00 00    | 	byte	$00[7]
0bec4     02 1A 70 00 
0bec8     00 00 00 00 
0becc     00 FE A0 00 
0bed0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bed4     00 00 00 00 
0bed8     00 00 00 00 
0bedc     00 00 00 00 
0bee0     00 00 00 00 | 	byte	$00[16]
0bee4     01 68 70 00 
0bee8     00 00 00 00 
0beec     00 BE 80 00 
0bef0     00 7F B0 00 | 	byte	$01, $68, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bef4     00 00 00 00 
0bef8     00 00 00 00 
0befc     00 00 00 00 
0bf00     00 00 00 00 | 	byte	$00[16]
0bf04     02 1A 70 00 
0bf08     00 00 00 00 
0bf0c     00 00 00 00 
0bf10     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0bf14     00 00 00 00 
0bf18     00 00 00 00 
0bf1c     00 00 00 00 
0bf20     00 00 00 00 | 	byte	$00[16]
0bf24     03 58 70 00 
0bf28     00 00 00 00 
0bf2c     00 FE A0 00 
0bf30     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bf34     00 00 00 00 
0bf38     00 00 00 00 
0bf3c     00 00 00 00 
0bf40     00 00 00 00 | 	byte	$00[16]
0bf44     03 58 70 00 
0bf48     00 00 00 00 
0bf4c     00 7F B0 00 
0bf50     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bf54     00 00 00 00 
0bf58     00 00 00 00 
0bf5c     00 00 00 00 
0bf60     00 00 00 00 | 	byte	$00[16]
0bf64     02 3A 70 00 
0bf68     00 00 00 00 
0bf6c     00 BE 80 00 
0bf70     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bf74     00 00 00 00 
0bf78     00 00 00 00 
0bf7c     00 00 00 00 
0bf80     00 00 00 00 | 	byte	$00[16]
0bf84     03 58 70 00 
0bf88     00 00 00 00 
0bf8c     00 7F B0 00 
0bf90     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0bf94     00 00 00 00 
0bf98     00 00 00 00 
0bf9c     00 00 00 00 
0bfa0     00 00 00 00 
0bfa4     00 00 00 00 
0bfa8     00 00 00 00 
0bfac     00          | 	byte	$00[25]
0bfad     FE A0 00 00 
0bfb1     7F B0 00 00 
0bfb5     00 00 00 00 
0bfb9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0bfbd     00 00 00 00 
0bfc1     00 00 00    | 	byte	$00[7]
0bfc4     03 58 70 00 
0bfc8     00 00 00 00 
0bfcc     00 FE A0 00 
0bfd0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0bfd4     00 00 00 00 
0bfd8     00 00 00 00 
0bfdc     00 00 00 00 
0bfe0     00 00 00 00 | 	byte	$00[16]
0bfe4     02 3A 70 00 
0bfe8     00 00 00 00 
0bfec     00 BE 80 00 
0bff0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0bff4     00 00 00 00 
0bff8     00 00 00 00 
0bffc     00 00 00 00 
0c000     00 00 00 00 | 	byte	$00[16]
0c004     03 58 70 00 
0c008     00 00 00 00 
0c00c     00 00 00 00 
0c010     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0c014     00 00 00 00 
0c018     00 00 00 00 
0c01c     00 00 00 00 
0c020     00 00 00 00 | 	byte	$00[16]
0c024     02 D0 70 00 
0c028     00 00 00 00 
0c02c     00 FE A0 00 
0c030     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c034     00 00 00 00 
0c038     00 00 00 00 
0c03c     00 00 00 00 
0c040     00 00 00 00 | 	byte	$00[16]
0c044     02 D0 70 00 
0c048     00 00 00 00 
0c04c     00 7F B0 00 
0c050     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c054     00 00 00 00 
0c058     00 00 00 00 
0c05c     00 00 00 00 
0c060     00 00 00 00 | 	byte	$00[16]
0c064     01 E0 70 00 
0c068     00 7F B0 00 
0c06c     00 BE 80 00 
0c070     01 AC F0 00 | 	byte	$01, $e0, $70, $00, $00, $7f, $b0, $00, $00, $be, $80, $00, $01, $ac, $f0, $00
0c074     00 00 00 00 
0c078     00 00 00 00 
0c07c     00 00 00 00 
0c080     00 00 00 00 | 	byte	$00[16]
0c084     02 D0 70 00 
0c088     00 00 00 00 
0c08c     00 7F B0 00 
0c090     01 AC F0 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $01, $ac, $f0, $00
0c094     00 00 00 00 
0c098     00 00 00 00 
0c09c     00 00 00 00 
0c0a0     00 00 00 00 
0c0a4     00 00 00 00 | 	byte	$00[20]
0c0a8     01 AC FC 10 
0c0ac     00 FE A0 00 
0c0b0     00 7F B0 00 
0c0b4     00 00 00 00 | 	byte	$01, $ac, $fc, $10, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c0b8     00 00 00 00 
0c0bc     00 00 00 00 
0c0c0     00 00 00 00 | 	byte	$00[12]
0c0c4     02 D0 70 00 
0c0c8     01 AC FC 10 
0c0cc     00 FE A0 00 
0c0d0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $ac, $fc, $10, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c0d4     00 00 00 00 
0c0d8     00 00 00 00 
0c0dc     00 00 00 00 
0c0e0     00 00 00 00 | 	byte	$00[16]
0c0e4     01 E0 70 00 
0c0e8     00 00 00 00 
0c0ec     00 BE 80 00 
0c0f0     01 AC F0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $ac, $f0, $00
0c0f4     00 00 00 00 
0c0f8     00 00 00 00 
0c0fc     00 00 00 00 
0c100     00 00 00 00 | 	byte	$00[16]
0c104     02 D0 70 00 
0c108     01 AC FC 10 
0c10c     00 FE A0 00 
0c110     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $ac, $fc, $10, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c114     00 00 00 00 
      ...             
0c51c     00 00 00 00 
0c520     00 00 00 00 | 	byte	$00[1040]
0c524     01 E0 7F 04 
0c528     00 00 00 00 
0c52c     00 FE A0 00 
0c530     01 94 C0 00 | 	byte	$01, $e0, $7f, $04, $00, $00, $00, $00, $00, $fe, $a0, $00, $01, $94, $c0, $00
0c534     00 00 00 00 
0c538     00 00 00 00 
0c53c     00 00 00 00 
0c540     00 00 00 00 | 	byte	$00[16]
0c544     01 E0 70 00 
0c548     00 00 00 00 
0c54c     00 7F B0 00 
0c550     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c554     00 00 00 00 
0c558     00 00 00 00 
0c55c     00 00 00 00 
0c560     00 00 00 00 | 	byte	$00[16]
0c564     01 40 70 00 
0c568     01 53 E0 00 
0c56c     00 BE 80 00 
0c570     00 7F B0 00 | 	byte	$01, $40, $70, $00, $01, $53, $e0, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0c574     00 00 00 00 
0c578     00 00 00 00 
0c57c     00 00 00 00 
0c580     00 00 00 00 | 	byte	$00[16]
0c584     01 E0 70 00 
0c588     00 00 00 00 
0c58c     00 7F B0 00 
0c590     01 94 C0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $01, $94, $c0, $00
0c594     00 00 00 00 
0c598     00 00 00 00 
0c59c     00 00 00 00 
0c5a0     00 00 00 00 
0c5a4     00 00 00 00 
0c5a8     00 00 00 00 
0c5ac     00          | 	byte	$00[25]
0c5ad     FE A0 00 01 
0c5b1     68 C0 00 00 
0c5b5     00 00 00 00 
0c5b9     00 00 00 00 | 	byte	$fe, $a0, $00, $01, $68, $c0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c5bd     00 00 00 00 
0c5c1     00 00 00    | 	byte	$00[7]
0c5c4     01 E0 70 00 
0c5c8     00 00 00 00 
0c5cc     00 FE A0 00 
0c5d0     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0c5d4     00 00 00 00 
0c5d8     00 00 00 00 
0c5dc     00 00 00 00 
0c5e0     00 00 00 00 | 	byte	$00[16]
0c5e4     01 40 70 00 
0c5e8     01 94 CC 20 
0c5ec     00 BE 80 00 
0c5f0     01 53 E0 00 | 	byte	$01, $40, $70, $00, $01, $94, $cc, $20, $00, $be, $80, $00, $01, $53, $e0, $00
0c5f4     00 00 00 00 
0c5f8     00 00 00 00 
0c5fc     00 00 00 00 
0c600     00 00 00 00 | 	byte	$00[16]
0c604     01 E0 70 00 
0c608     01 68 CC 20 
0c60c     00 00 00 00 
0c610     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $cc, $20, $00, $00, $00, $00, $00, $7f, $b0, $00
0c614     00 00 00 00 
0c618     00 00 00 00 
0c61c     00 00 00 00 
0c620     00 00 00 00 | 	byte	$00[16]
0c624     02 1A 70 00 
0c628     00 00 00 00 
0c62c     00 FE A0 00 
0c630     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c634     00 00 00 00 
0c638     00 00 00 00 
0c63c     00 00 00 00 
0c640     00 00 00 00 | 	byte	$00[16]
0c644     02 1A 70 00 
0c648     00 00 00 00 
0c64c     00 7F B0 00 
0c650     01 94 CC 16 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $01, $94, $cc, $16
0c654     00 00 00 00 
0c658     00 00 00 00 
0c65c     00 00 00 00 
0c660     00 00 00 00 | 	byte	$00[16]
0c664     01 68 70 00 
0c668     01 53 E0 00 
0c66c     00 BE 80 00 
0c670     01 68 CC 16 | 	byte	$01, $68, $70, $00, $01, $53, $e0, $00, $00, $be, $80, $00, $01, $68, $cc, $16
0c674     00 00 00 00 
0c678     00 00 00 00 
0c67c     00 00 00 00 
0c680     00 00 00 00 | 	byte	$00[16]
0c684     02 1A 70 00 
0c688     00 00 00 00 
0c68c     00 7F B0 00 
0c690     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c694     00 00 00 00 
0c698     00 00 00 00 
0c69c     00 00 00 00 
0c6a0     00 00 00 00 
0c6a4     00 00 00 00 | 	byte	$00[20]
0c6a8     01 94 CC 10 
0c6ac     00 FE A0 00 
0c6b0     00 7F B0 00 
0c6b4     00 00 00 00 | 	byte	$01, $94, $cc, $10, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c6b8     00 00 00 00 
0c6bc     00 00 00 00 
0c6c0     00 00 00 00 | 	byte	$00[12]
0c6c4     02 1A 70 00 
0c6c8     01 68 CC 10 
0c6cc     00 FE A0 00 
0c6d0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $01, $68, $cc, $10, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c6d4     00 00 00 00 
0c6d8     00 00 00 00 
0c6dc     00 00 00 00 
0c6e0     00 00 00 00 | 	byte	$00[16]
0c6e4     01 68 70 00 
0c6e8     01 94 C0 00 
0c6ec     00 BE 80 00 
0c6f0     01 53 E0 00 | 	byte	$01, $68, $70, $00, $01, $94, $c0, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0c6f4     00 00 00 00 
0c6f8     00 00 00 00 
0c6fc     00 00 00 00 
0c700     00 00 00 00 | 	byte	$00[16]
0c704     02 1A 70 00 
0c708     00 00 00 00 
0c70c     00 00 00 00 
0c710     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0c714     00 00 00 00 
0c718     00 00 00 00 
0c71c     00 00 00 00 
0c720     00 00 00 00 | 	byte	$00[16]
0c724     03 58 70 00 
0c728     01 94 C0 00 
0c72c     00 FE A0 00 
0c730     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $94, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c734     00 00 00 00 
0c738     00 00 00 00 
0c73c     00 00 00 00 
0c740     00 00 00 00 | 	byte	$00[16]
0c744     03 58 70 00 
0c748     00 00 00 00 
0c74c     00 7F B0 00 
0c750     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c754     00 00 00 00 
0c758     00 00 00 00 
0c75c     00 00 00 00 
0c760     00 00 00 00 | 	byte	$00[16]
0c764     02 3A 70 00 
0c768     01 53 E0 00 
0c76c     00 BE 80 00 
0c770     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $53, $e0, $00, $00, $be, $80, $00, $00, $7f, $b0, $00
0c774     00 00 00 00 
0c778     00 00 00 00 
0c77c     00 00 00 00 
0c780     00 00 00 00 | 	byte	$00[16]
0c784     03 58 70 00 
0c788     01 94 C0 00 
0c78c     00 7F B0 00 
0c790     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $94, $c0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c794     00 00 00 00 
0c798     00 00 00 00 
0c79c     00 00 00 00 
0c7a0     00 00 00 00 
0c7a4     00 00 00 00 | 	byte	$00[20]
0c7a8     01 68 C0 00 
0c7ac     00 FE A0 00 
0c7b0     00 7F B0 00 
0c7b4     00 00 00 00 | 	byte	$01, $68, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c7b8     00 00 00 00 
0c7bc     00 00 00 00 
0c7c0     00 00 00 00 | 	byte	$00[12]
0c7c4     03 58 70 00 
0c7c8     00 00 00 00 
0c7cc     00 FE A0 00 
0c7d0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0c7d4     00 00 00 00 
0c7d8     00 00 00 00 
0c7dc     00 00 00 00 
0c7e0     00 00 00 00 | 	byte	$00[16]
0c7e4     02 3A 70 00 
0c7e8     01 53 E0 00 
0c7ec     00 BE 80 00 
0c7f0     01 94 CC 20 | 	byte	$02, $3a, $70, $00, $01, $53, $e0, $00, $00, $be, $80, $00, $01, $94, $cc, $20
0c7f4     00 00 00 00 
0c7f8     00 00 00 00 
0c7fc     00 00 00 00 
0c800     00 00 00 00 | 	byte	$00[16]
0c804     03 58 70 00 
0c808     00 00 00 00 
0c80c     00 00 00 00 
0c810     01 68 CC 20 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $cc, $20
0c814     00 00 00 00 
0c818     00 00 00 00 
0c81c     00 00 00 00 
0c820     00 00 00 00 | 	byte	$00[16]
0c824     02 D0 70 00 
0c828     00 00 00 00 
0c82c     00 FE A0 00 
0c830     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0c834     00 00 00 00 
0c838     00 00 00 00 
0c83c     00 00 00 00 
0c840     00 00 00 00 | 	byte	$00[16]
0c844     02 D0 70 00 
0c848     01 94 CC 20 
0c84c     00 7F B0 00 
0c850     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $94, $cc, $20, $00, $7f, $b0, $00, $00, $00, $00, $00
0c854     00 00 00 00 
0c858     00 00 00 00 
0c85c     00 00 00 00 
0c860     00 00 00 00 | 	byte	$00[16]
0c864     01 E0 70 00 
0c868     01 68 CC 20 
0c86c     00 BE 80 00 
0c870     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $cc, $20, $00, $be, $80, $00, $01, $53, $e0, $00
0c874     00 00 00 00 
0c878     00 00 00 00 
0c87c     00 00 00 00 
0c880     00 00 00 00 | 	byte	$00[16]
0c884     02 D0 70 00 
0c888     00 00 00 00 
0c88c     00 7F B0 00 
0c890     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0c894     00 00 00 00 
0c898     00 00 00 00 
0c89c     00 00 00 00 
0c8a0     00 00 00 00 
0c8a4     00 00 00 00 | 	byte	$00[20]
0c8a8     01 68 D0 00 
0c8ac     00 FE A0 00 
0c8b0     01 94 CC 10 
0c8b4     00 00 00 00 | 	byte	$01, $68, $d0, $00, $00, $fe, $a0, $00, $01, $94, $cc, $10, $00, $00, $00, $00
0c8b8     00 00 00 00 
0c8bc     00 00 00 00 
0c8c0     00 00 00 00 | 	byte	$00[12]
0c8c4     02 D0 70 00 
0c8c8     00 00 00 00 
0c8cc     00 FE A0 00 
0c8d0     01 68 CC 10 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $01, $68, $cc, $10
0c8d4     00 00 00 00 
0c8d8     00 00 00 00 
0c8dc     00 00 00 00 
0c8e0     00 00 00 00 | 	byte	$00[16]
0c8e4     01 E0 70 00 
0c8e8     01 53 E0 00 
0c8ec     00 BE 80 00 
0c8f0     01 AC DC 30 | 	byte	$01, $e0, $70, $00, $01, $53, $e0, $00, $00, $be, $80, $00, $01, $ac, $dc, $30
0c8f4     00 00 00 00 
0c8f8     00 00 00 00 
0c8fc     00 00 00 00 
0c900     00 00 00 00 | 	byte	$00[16]
0c904     02 D0 70 00 
0c908     00 00 00 00 
0c90c     00 FE A0 00 
0c910     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0c914     00 00 00 00 
0c918     00 00 00 00 
0c91c     00 00 00 00 
0c920     00 00 00 00 | 	byte	$00[16]
0c924     02 3A 70 00 
0c928     00 F0 C0 00 
0c92c     01 1D 80 00 
0c930     01 53 D0 00 | 	byte	$02, $3a, $70, $00, $00, $f0, $c0, $00, $01, $1d, $80, $00, $01, $53, $d0, $00
0c934     00 00 00 00 
0c938     00 00 00 00 
0c93c     00 00 00 00 
0c940     00 00 00 00 
0c944     00 00 00 00 
0c948     00 00 00 00 
0c94c     00          | 	byte	$00[25]
0c94d     FE B0 00 00 
0c951     00 00 00 00 
0c955     00 00 00 00 
0c959     00 00 00 00 | 	byte	$fe, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c95d     00 00 00 00 
0c961     00 00 00 00 | 	byte	$00[8]
0c965     F0 CC 10 00 
0c969     00 00 00 00 
0c96d     FE BC 20 00 
0c971     00 00 00 00 | 	byte	$f0, $cc, $10, $00, $00, $00, $00, $00, $fe, $bc, $20, $00, $00, $00, $00, $00
0c975     00 00 00 00 
0c979     00 00 00 00 
0c97d     00 00 00 00 
0c981     00 00 00 00 
0c985     00 00 00 00 
0c989     00 00 00 00 | 	byte	$00[24]
0c98d     FE BC 10 01 
0c991     53 DC 00 00 
0c995     00 00 00 00 
0c999     00 00 00 00 | 	byte	$fe, $bc, $10, $01, $53, $dc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c99d     00 00 00 00 
0c9a1     00          | 	byte	$00[5]
0c9a2     0C 00 11 40 
0c9a6     10 00 00 F0 
0c9aa     CC 06 00 FE 
0c9ae     BC 14 00 00 | 	byte	$0c, $00, $11, $40, $10, $00, $00, $f0, $cc, $06, $00, $fe, $bc, $14, $00, $00
0c9b2     0C 10 00 00 
0c9b6     00 00 00 00 
0c9ba     00 00 00 00 
0c9be     00 00 00 00 | 	byte	$0c, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c9c2     00 00 00 00 
0c9c6     00 00 00 00 
0c9ca     00 00 00    | 	byte	$00[11]
0c9cd     FE BC 11 00 
0c9d1     00 00 00 00 
0c9d5     00 00 00 00 
0c9d9     00 00 00 00 | 	byte	$fe, $bc, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c9dd     00 00 00 00 
0c9e1     00 00 00 00 
0c9e5     00 00 00    | 	byte	$00[11]
0c9e8     11 40 1C 10 
0c9ec     00 FE BC 06 
0c9f0     00 00 00 00 
0c9f4     00 00 00 00 | 	byte	$11, $40, $1c, $10, $00, $fe, $bc, $06, $00, $00, $00, $00, $00, $00, $00, $00
0c9f8     00 00 00 00 
0c9fc     00 00 00 00 
0ca00     00 00 00 00 
0ca04     00 00 00 00 
0ca08     00 00 00 00 
0ca0c     00          | 	byte	$00[21]
0ca0d     FE BC 0C 00 
0ca11     00 00 00 00 
0ca15     00 00 00 00 
0ca19     00 00 00 00 | 	byte	$fe, $bc, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ca1d     00 00 00 00 
0ca21     00 00 00 00 
0ca25     00 00 00 00 
0ca29     00 00 00 00 | 	byte	$00[16]
0ca2d     FE BC 06 00 
0ca31     00 00 00 00 
0ca35     00 00 00 00 
0ca39     00 00 00 00 | 	byte	$fe, $bc, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ca3d     00 00 00 00 
      ...             
0cce5     00 00 00 00 
0cce9     00          | 	byte	$00[685]
0ccea     0C 30 00 00 
0ccee     00 00 00 00 
0ccf2     00 00 00 00 
0ccf6     00 00 00 00 | 	byte	$0c, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ccfa     00 00 00 00 
      ...             
0cd1e     00 00 00 00 
0cd22     00 00       | 	byte	$00[42]
0cd24     02 80 70 00 
0cd28     01 AC 90 00 
0cd2c     00 FE A0 00 
0cd30     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cd34     00 00 00 00 
0cd38     00 00 00 00 
0cd3c     00 00 00 00 
0cd40     00 00 00 00 | 	byte	$00[16]
0cd44     02 80 70 00 
0cd48     00 00 00 00 
0cd4c     00 7F B0 00 
0cd50     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0cd54     00 00 00 00 
0cd58     00 00 00 00 
0cd5c     00 00 00 00 
0cd60     00 00 00 00 | 	byte	$00[16]
0cd64     01 AC 70 00 
0cd68     01 AC 90 00 
0cd6c     00 BE 80 00 
0cd70     01 53 E0 00 | 	byte	$01, $ac, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0cd74     00 00 00 00 
0cd78     00 00 00 00 
0cd7c     00 00 00 00 
0cd80     00 00 00 00 | 	byte	$00[16]
0cd84     02 80 70 00 
0cd88     00 00 00 00 
0cd8c     00 7F B0 00 
0cd90     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0cd94     00 00 00 00 
0cd98     00 00 00 00 
0cd9c     00 00 00 00 
0cda0     00 00 00 00 | 	byte	$00[16]
0cda4     02 80 70 00 
0cda8     01 AC 90 00 
0cdac     00 FE A0 00 
0cdb0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cdb4     00 00 00 00 
0cdb8     00 00 00 00 
0cdbc     00 00 00 00 
0cdc0     00 00 00 00 | 	byte	$00[16]
0cdc4     01 AC 70 00 
0cdc8     01 7D 90 00 
0cdcc     00 FE A0 00 
0cdd0     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cdd4     00 00 00 00 
0cdd8     00 00 00 00 
0cddc     00 00 00 00 
0cde0     00 00 00 00 | 	byte	$00[16]
0cde4     02 80 70 00 
0cde8     01 68 90 00 
0cdec     00 BE 80 00 
0cdf0     01 53 E0 00 | 	byte	$02, $80, $70, $00, $01, $68, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0cdf4     00 00 00 00 
0cdf8     00 00 00 00 
0cdfc     00 00 00 00 
0ce00     00 00 00 00 | 	byte	$00[16]
0ce04     01 E0 70 00 
0ce08     01 68 90 00 
0ce0c     00 00 00 00 
0ce10     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0ce14     00 00 00 00 
0ce18     00 00 00 00 
0ce1c     00 00 00 00 
0ce20     00 00 00 00 | 	byte	$00[16]
0ce24     01 E0 70 00 
0ce28     00 00 00 00 
0ce2c     00 FE A0 00 
0ce30     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ce34     00 00 00 00 
0ce38     00 00 00 00 
0ce3c     00 00 00 00 
0ce40     00 00 00 00 | 	byte	$00[16]
0ce44     01 40 70 00 
0ce48     01 7D 90 00 
0ce4c     00 7F B0 00 
0ce50     00 00 00 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ce54     00 00 00 00 
0ce58     00 00 00 00 
0ce5c     00 00 00 00 
0ce60     00 00 00 00 | 	byte	$00[16]
0ce64     01 E0 70 00 
0ce68     00 00 00 00 
0ce6c     00 BE 80 00 
0ce70     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0ce74     00 00 00 00 
0ce78     00 00 00 00 
0ce7c     00 00 00 00 
0ce80     00 00 00 00 | 	byte	$00[16]
0ce84     01 E0 70 00 
0ce88     01 7D C0 00 
0ce8c     00 7F B0 00 
0ce90     00 00 00 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0ce94     00 00 00 00 
0ce98     00 00 00 00 
0ce9c     00 00 00 00 
0cea0     00 00 00 00 | 	byte	$00[16]
0cea4     01 E0 70 00 
0cea8     01 68 C0 00 
0ceac     00 FE A0 00 
0ceb0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ceb4     00 00 00 00 
0ceb8     00 00 00 00 
0cebc     00 00 00 00 
0cec0     00 00 00 00 | 	byte	$00[16]
0cec4     01 40 70 00 
0cec8     00 00 00 00 
0cecc     00 FE A0 00 
0ced0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0ced4     00 00 00 00 
0ced8     00 00 00 00 
0cedc     00 00 00 00 
0cee0     00 00 00 00 | 	byte	$00[16]
0cee4     01 E0 70 00 
0cee8     01 7D C0 00 
0ceec     00 BE 80 00 
0cef0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0cef4     00 00 00 00 
0cef8     00 00 00 00 
0cefc     00 00 00 00 
0cf00     00 00 00 00 | 	byte	$00[16]
0cf04     02 80 70 00 
0cf08     00 00 00 00 
0cf0c     00 00 00 00 
0cf10     00 7F B0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0cf14     00 00 00 00 
0cf18     00 00 00 00 
0cf1c     00 00 00 00 
0cf20     00 00 00 00 | 	byte	$00[16]
0cf24     02 80 70 00 
0cf28     01 AC 90 00 
0cf2c     00 FE A0 00 
0cf30     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cf34     00 00 00 00 
0cf38     00 00 00 00 
0cf3c     00 00 00 00 
0cf40     00 00 00 00 | 	byte	$00[16]
0cf44     01 AC 70 00 
0cf48     00 00 00 00 
0cf4c     00 7F B0 00 
0cf50     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0cf54     00 00 00 00 
0cf58     00 00 00 00 
0cf5c     00 00 00 00 
0cf60     00 00 00 00 | 	byte	$00[16]
0cf64     02 80 70 00 
0cf68     00 00 00 00 
0cf6c     00 BE 80 00 
0cf70     01 53 E0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0cf74     00 00 00 00 
0cf78     00 00 00 00 
0cf7c     00 00 00 00 
0cf80     00 00 00 00 | 	byte	$00[16]
0cf84     02 80 70 00 
0cf88     00 00 00 00 
0cf8c     00 7F B0 00 
0cf90     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0cf94     00 00 00 00 
0cf98     00 00 00 00 
0cf9c     00 00 00 00 
0cfa0     00 00 00 00 | 	byte	$00[16]
0cfa4     02 80 70 00 
0cfa8     01 AC 90 00 
0cfac     00 FE A0 00 
0cfb0     00 7F B0 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cfb4     00 00 00 00 
0cfb8     00 00 00 00 
0cfbc     00 00 00 00 
0cfc0     00 00 00 00 | 	byte	$00[16]
0cfc4     01 AC 70 00 
0cfc8     01 7D 90 00 
0cfcc     00 FE A0 00 
0cfd0     00 7F B0 00 | 	byte	$01, $ac, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0cfd4     00 00 00 00 
0cfd8     00 00 00 00 
0cfdc     00 00 00 00 
0cfe0     00 00 00 00 | 	byte	$00[16]
0cfe4     02 80 70 00 
0cfe8     01 68 90 00 
0cfec     00 BE 80 00 
0cff0     01 53 E0 00 | 	byte	$02, $80, $70, $00, $01, $68, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0cff4     00 00 00 00 
0cff8     00 00 00 00 
0cffc     00 00 00 00 
0d000     00 00 00 00 | 	byte	$00[16]
0d004     01 E0 70 00 
0d008     01 68 90 00 
0d00c     00 00 00 00 
0d010     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0d014     00 00 00 00 
0d018     00 00 00 00 
0d01c     00 00 00 00 
0d020     00 00 00 00 | 	byte	$00[16]
0d024     01 E0 70 00 
0d028     00 00 00 00 
0d02c     00 FE A0 00 
0d030     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d034     00 00 00 00 
0d038     00 00 00 00 
0d03c     00 00 00 00 
0d040     00 00 00 00 | 	byte	$00[16]
0d044     01 40 70 00 
0d048     01 7D 90 00 
0d04c     00 7F B0 00 
0d050     00 00 00 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d054     00 00 00 00 
0d058     00 00 00 00 
0d05c     00 00 00 00 
0d060     00 00 00 00 | 	byte	$00[16]
0d064     01 E0 70 00 
0d068     00 00 00 00 
0d06c     00 BE 80 00 
0d070     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d074     00 00 00 00 
0d078     00 00 00 00 
0d07c     00 00 00 00 
0d080     00 00 00 00 | 	byte	$00[16]
0d084     01 E0 70 00 
0d088     01 7D C0 00 
0d08c     00 7F B0 00 
0d090     00 00 00 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d094     00 00 00 00 
0d098     00 00 00 00 
0d09c     00 00 00 00 
0d0a0     00 00 00 00 | 	byte	$00[16]
0d0a4     01 E0 70 00 
0d0a8     01 68 C0 00 
0d0ac     00 FE A0 00 
0d0b0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $c0, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d0b4     00 00 00 00 
0d0b8     00 00 00 00 
0d0bc     00 00 00 00 
0d0c0     00 00 00 00 | 	byte	$00[16]
0d0c4     01 40 70 00 
0d0c8     00 00 00 00 
0d0cc     00 FE A0 00 
0d0d0     00 7F B0 00 | 	byte	$01, $40, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d0d4     00 00 00 00 
0d0d8     00 00 00 00 
0d0dc     00 00 00 00 
0d0e0     00 00 00 00 | 	byte	$00[16]
0d0e4     01 E0 70 00 
0d0e8     01 7D C0 00 
0d0ec     00 BE 80 00 
0d0f0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $c0, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d0f4     00 00 00 00 
0d0f8     00 00 00 00 
0d0fc     00 00 00 00 
0d100     00 00 00 00 
0d104     00 00 00 00 
0d108     00 00 00 00 
0d10c     00          | 	byte	$00[25]
0d10d     FE A0 00 00 
0d111     7F B0 00 00 
0d115     00 00 00 00 
0d119     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d11d     00 00 00 00 
0d121     00 00 00    | 	byte	$00[7]
0d124     02 3A 70 00 
0d128     01 7D 90 00 
0d12c     00 FE A0 00 
0d130     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d134     00 00 00 00 
0d138     00 00 00 00 
0d13c     00 00 00 00 
0d140     00 00 00 00 | 	byte	$00[16]
0d144     02 3A 70 00 
0d148     00 00 00 00 
0d14c     00 7F B0 00 
0d150     00 00 00 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d154     00 00 00 00 
0d158     00 00 00 00 
0d15c     00 00 00 00 
0d160     00 00 00 00 | 	byte	$00[16]
0d164     01 7D 70 00 
0d168     00 00 00 00 
0d16c     00 BE 80 00 
0d170     01 53 E0 00 | 	byte	$01, $7d, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d174     00 00 00 00 
0d178     00 00 00 00 
0d17c     00 00 00 00 
0d180     00 00 00 00 | 	byte	$00[16]
0d184     02 3A 70 00 
0d188     01 7D 90 00 
0d18c     00 7F B0 00 
0d190     00 00 00 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d194     00 00 00 00 
0d198     00 00 00 00 
0d19c     00 00 00 00 
0d1a0     00 00 00 00 | 	byte	$00[16]
0d1a4     02 3A 70 00 
0d1a8     01 7D 90 00 
0d1ac     00 FE A0 00 
0d1b0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d1b4     00 00 00 00 
0d1b8     00 00 00 00 
0d1bc     00 00 00 00 
0d1c0     00 00 00 00 | 	byte	$00[16]
0d1c4     02 3A 70 00 
0d1c8     01 68 90 00 
0d1cc     00 FE A0 00 
0d1d0     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d1d4     00 00 00 00 
0d1d8     00 00 00 00 
0d1dc     00 00 00 00 
0d1e0     00 00 00 00 | 	byte	$00[16]
0d1e4     01 7D 70 00 
0d1e8     01 40 90 00 
0d1ec     00 BE 80 00 
0d1f0     01 53 E0 00 | 	byte	$01, $7d, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d1f4     00 00 00 00 
0d1f8     00 00 00 00 
0d1fc     00 00 00 00 
0d200     00 00 00 00 | 	byte	$00[16]
0d204     02 3A 70 00 
0d208     01 40 90 00 
0d20c     00 00 00 00 
0d210     00 7F B0 00 | 	byte	$02, $3a, $70, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0d214     00 00 00 00 
0d218     00 00 00 00 
0d21c     00 00 00 00 
0d220     00 00 00 00 | 	byte	$00[16]
0d224     03 58 70 00 
0d228     00 00 00 00 
0d22c     00 FE A0 00 
0d230     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d234     00 00 00 00 
0d238     00 00 00 00 
0d23c     00 00 00 00 
0d240     00 00 00 00 | 	byte	$00[16]
0d244     03 58 70 00 
0d248     01 68 90 00 
0d24c     00 7F B0 00 
0d250     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $68, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d254     00 00 00 00 
0d258     00 00 00 00 
0d25c     00 00 00 00 
0d260     00 00 00 00 | 	byte	$00[16]
0d264     02 3A 70 00 
0d268     00 00 00 00 
0d26c     00 BE 80 00 
0d270     01 53 E0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d274     00 00 00 00 
0d278     00 00 00 00 
0d27c     00 00 00 00 
0d280     00 00 00 00 | 	byte	$00[16]
0d284     03 58 70 00 
0d288     01 7D 90 00 
0d28c     00 7F B0 00 
0d290     00 00 00 00 | 	byte	$03, $58, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d294     00 00 00 00 
0d298     00 00 00 00 
0d29c     00 00 00 00 
0d2a0     00 00 00 00 | 	byte	$00[16]
0d2a4     03 58 70 00 
0d2a8     00 00 00 00 
0d2ac     00 FE A0 00 
0d2b0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d2b4     00 00 00 00 
0d2b8     00 00 00 00 
0d2bc     00 00 00 00 
0d2c0     00 00 00 00 | 	byte	$00[16]
0d2c4     03 58 70 00 
0d2c8     01 68 90 00 
0d2cc     00 FE A0 00 
0d2d0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d2d4     00 00 00 00 
0d2d8     00 00 00 00 
0d2dc     00 00 00 00 
0d2e0     00 00 00 00 | 	byte	$00[16]
0d2e4     02 3A 70 00 
0d2e8     00 00 00 00 
0d2ec     00 BE 80 00 
0d2f0     01 53 E0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d2f4     00 00 00 00 
0d2f8     00 00 00 00 
0d2fc     00 00 00 00 
0d300     00 00 00 00 | 	byte	$00[16]
0d304     03 58 70 00 
0d308     00 00 00 00 
0d30c     00 00 00 00 
0d310     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0d314     00 00 00 00 
0d318     00 00 00 00 
0d31c     00 00 00 00 
0d320     00 00 00 00 | 	byte	$00[16]
0d324     02 D0 70 00 
0d328     00 F0 90 00 
0d32c     00 FE A0 00 
0d330     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d334     00 00 00 00 
0d338     00 00 00 00 
0d33c     00 00 00 00 
0d340     00 00 00 00 | 	byte	$00[16]
0d344     02 D0 70 00 
0d348     00 00 00 00 
0d34c     00 7F B0 00 
0d350     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d354     00 00 00 00 
0d358     00 00 00 00 
0d35c     00 00 00 00 
0d360     00 00 00 00 | 	byte	$00[16]
0d364     01 E0 70 00 
0d368     00 00 00 00 
0d36c     00 BE 80 00 
0d370     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d374     00 00 00 00 
0d378     00 00 00 00 
0d37c     00 00 00 00 
0d380     00 00 00 00 | 	byte	$00[16]
0d384     02 D0 70 00 
0d388     00 F0 90 00 
0d38c     00 7F B0 00 
0d390     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d394     00 00 00 00 
0d398     00 00 00 00 
0d39c     00 00 00 00 
0d3a0     00 00 00 00 | 	byte	$00[16]
0d3a4     02 D0 70 00 
0d3a8     00 FE 90 00 
0d3ac     00 FE A0 00 
0d3b0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $fe, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d3b4     00 00 00 00 
0d3b8     00 00 00 00 
0d3bc     00 00 00 00 
0d3c0     00 00 00 00 | 	byte	$00[16]
0d3c4     02 D0 70 00 
0d3c8     01 1D 90 00 
0d3cc     00 FE A0 00 
0d3d0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $1d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d3d4     00 00 00 00 
0d3d8     00 00 00 00 
0d3dc     00 00 00 00 
0d3e0     00 00 00 00 | 	byte	$00[16]
0d3e4     01 E0 70 00 
0d3e8     00 00 00 00 
0d3ec     00 BE 80 00 
0d3f0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d3f4     00 00 00 00 
0d3f8     00 00 00 00 
0d3fc     00 00 00 00 
0d400     00 00 00 00 | 	byte	$00[16]
0d404     02 D0 70 00 
0d408     01 40 90 00 
0d40c     00 00 00 00 
0d410     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $40, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0d414     00 00 00 00 
0d418     00 00 00 00 
0d41c     00 00 00 00 
0d420     00 00 00 00 | 	byte	$00[16]
0d424     02 80 70 00 
0d428     00 00 00 00 
0d42c     00 FE A0 00 
0d430     00 7F B0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0d434     00 00 00 00 
0d438     00 00 00 00 
0d43c     00 00 00 00 
0d440     00 00 00 00 | 	byte	$00[16]
0d444     02 80 70 00 
0d448     01 AC 90 00 
0d44c     00 7F B0 00 
0d450     00 00 00 00 | 	byte	$02, $80, $70, $00, $01, $ac, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d454     00 00 00 00 
0d458     00 00 00 00 
0d45c     00 00 00 00 
0d460     00 00 00 00 | 	byte	$00[16]
0d464     01 AC 70 00 
0d468     00 00 00 00 
0d46c     00 BE 80 00 
0d470     01 53 E0 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0d474     00 00 00 00 
0d478     00 00 00 00 
0d47c     00 00 00 00 
0d480     00 00 00 00 | 	byte	$00[16]
0d484     02 80 70 00 
0d488     00 00 00 00 
0d48c     00 7F B0 00 
0d490     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0d494     00 00 00 00 
0d498     00 00 00 00 
0d49c     00 00 00 00 
0d4a0     00 00 00 00 | 	byte	$00[16]
0d4a4     02 80 70 00 
0d4a8     00 00 00 00 
0d4ac     00 FE A0 00 
0d4b0     01 68 D0 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $01, $68, $d0, $00
0d4b4     00 00 00 00 
0d4b8     00 00 00 00 
0d4bc     00 00 00 00 
0d4c0     00 00 00 00 | 	byte	$00[16]
0d4c4     02 80 70 00 
0d4c8     00 00 00 00 
0d4cc     00 FE A0 00 
0d4d0     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0d4d4     00 00 00 00 
0d4d8     00 00 00 00 
0d4dc     00 00 00 00 
0d4e0     00 00 00 00 | 	byte	$00[16]
0d4e4     01 AC 70 00 
0d4e8     01 AC DC 30 
0d4ec     00 BE 80 00 
0d4f0     00 00 00 00 | 	byte	$01, $ac, $70, $00, $01, $ac, $dc, $30, $00, $be, $80, $00, $00, $00, $00, $00
0d4f4     00 00 00 00 
0d4f8     00 00 00 00 
0d4fc     00 00 00 00 
0d500     00 00 00 00 | 	byte	$00[16]
0d504     02 80 70 00 
0d508     00 00 00 00 
0d50c     00 FE A0 00 
0d510     00 00 00 00 | 	byte	$02, $80, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0d514     00 00 00 00 
0d518     00 00 00 00 
0d51c     00 00 00 00 
0d520     00 00 00 00 
0d524     00          | 	byte	$00[17]
0d525     7F B0 00 00 
0d529     00 00 00 00 
0d52d     FE A0 00 00 
0d531     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0d535     00 00 00 00 
0d539     00 00 00 00 
0d53d     00 00 00 00 
0d541     00 00 00 00 
0d545     00 00 00 00 | 	byte	$00[20]
0d549     7F B0 00 00 
0d54d     00 00 00 00 
0d551     00 00 00 00 
0d555     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d559     00 00 00 00 
0d55d     00 00 00 00 
0d561     00 00 00 00 | 	byte	$00[12]
0d565     7F B0 00 00 
0d569     00 00 00 00 
0d56d     BE 80 00 00 
0d571     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d575     00 00 00 00 
0d579     00 00 00 00 
0d57d     00 00 00 00 
0d581     00 00 00 00 
0d585     00 00 00 00 | 	byte	$00[20]
0d589     7F B0 00 00 
0d58d     00 00 00 00 
0d591     00 00 00 00 
0d595     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d599     00 00 00 00 
0d59d     00 00 00 00 
0d5a1     00 00 00 00 | 	byte	$00[12]
0d5a5     7F B0 00 00 
0d5a9     00 00 00 00 
0d5ad     FE A0 00 00 
0d5b1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0d5b5     00 00 00 00 
0d5b9     00 00 00 00 
0d5bd     00 00 00 00 
0d5c1     00 00 00 00 
0d5c5     00 00 00 00 | 	byte	$00[20]
0d5c9     7F B0 00 00 
0d5cd     FE A0 00 00 
0d5d1     00 00 00 00 
0d5d5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d5d9     00 00 00 00 
0d5dd     00 00 00 00 
0d5e1     00 00 00 00 | 	byte	$00[12]
0d5e5     7F B0 00 00 
0d5e9     00 00 00 00 
0d5ed     BE 80 00 00 
0d5f1     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d5f5     00 00 00 00 
0d5f9     00 00 00 00 
0d5fd     00 00 00 00 
0d601     00 00 00 00 
0d605     00 00 00 00 | 	byte	$00[20]
0d609     7F B0 00 00 
0d60d     00 00 00 00 
0d611     00 00 00 00 
0d615     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d619     00 00 00 00 
0d61d     00 00 00 00 
0d621     00 00 00 00 | 	byte	$00[12]
0d625     7F B0 00 00 
0d629     00 00 00 00 
0d62d     FE A0 00 01 
0d631     AC F0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $01, $ac, $f0, $00, $00
0d635     00 00 00 00 
0d639     00 00 00 00 
0d63d     00 00 00 00 
0d641     00 00 00 00 
0d645     00 00 00 00 | 	byte	$00[20]
0d649     7F B0 00 00 
0d64d     00 00 00 01 
0d651     AC F0 00 00 
0d655     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $01, $ac, $f0, $00, $00, $00, $00, $00, $00
0d659     00 00 00 00 
0d65d     00 00 00 00 
0d661     00 00 00 00 | 	byte	$00[12]
0d665     7F B0 00 01 
0d669     AC FC 10 00 
0d66d     BE 80 00 00 
0d671     D6 E0 00 00 | 	byte	$7f, $b0, $00, $01, $ac, $fc, $10, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d675     00 00 00 00 
0d679     00 00 00 00 
0d67d     00 00 00 00 
0d681     00 00 00 00 
0d685     00 00 00 00 | 	byte	$00[20]
0d689     7F B0 00 00 
0d68d     FE A0 00 01 
0d691     AC FC 10 00 
0d695     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $01, $ac, $fc, $10, $00, $00, $00, $00, $00
0d699     00 00 00 00 
0d69d     00 00 00 00 
0d6a1     00 00 00 00 | 	byte	$00[12]
0d6a5     7F B0 00 00 
0d6a9     00 00 00 00 
0d6ad     00 00 00 01 
0d6b1     AC FC 05 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $fc, $05, $00
0d6b5     00 00 00 00 
0d6b9     00 00 00 00 
0d6bd     00 00 00 00 
0d6c1     00 00 00 00 
0d6c5     00 00 00 00 | 	byte	$00[20]
0d6c9     7F B0 00 00 
0d6cd     FE A0 00 00 
0d6d1     00 00 00 00 
0d6d5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d6d9     00 00 00 00 
0d6dd     00 00 00 00 
0d6e1     00 00 00 00 | 	byte	$00[12]
0d6e5     7F B0 00 00 
0d6e9     00 00 00 00 
0d6ed     BE 80 00 00 
0d6f1     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d6f5     00 00 00 00 
0d6f9     00 00 00 00 
0d6fd     00 00 00 00 
0d701     00 00 00 00 
0d705     00 00 00 00 | 	byte	$00[20]
0d709     7F B0 00 00 
0d70d     00 00 00 00 
0d711     00 00 00 00 
0d715     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d719     00 00 00 00 
0d71d     00 00 00 00 
0d721     00 00 00 00 | 	byte	$00[12]
0d725     7F B0 00 00 
0d729     00 00 00 00 
0d72d     FE A0 00 00 
0d731     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0d735     00 00 00 00 
0d739     00 00 00 00 
0d73d     00 00 00 00 
0d741     00 00 00 00 
0d745     00 00 00 00 | 	byte	$00[20]
0d749     7F B0 00 00 
0d74d     00 00 00 00 
0d751     00 00 00 00 
0d755     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d759     00 00 00 00 
0d75d     00 00 00 00 
0d761     00 00 00 00 | 	byte	$00[12]
0d765     7F B0 00 00 
0d769     00 00 00 00 
0d76d     BE 80 00 00 
0d771     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d775     00 00 00 00 
0d779     00 00 00 00 
0d77d     00 00 00 00 
0d781     00 00 00 00 
0d785     00 00 00 00 | 	byte	$00[20]
0d789     7F B0 00 00 
0d78d     00 00 00 00 
0d791     00 00 00 00 
0d795     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d799     00 00 00 00 
0d79d     00 00 00 00 
0d7a1     00 00 00 00 | 	byte	$00[12]
0d7a5     7F B0 00 00 
0d7a9     00 00 00 00 
0d7ad     FE A0 00 00 
0d7b1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0d7b5     00 00 00 00 
0d7b9     00 00 00 00 
0d7bd     00 00 00 00 
0d7c1     00 00 00 00 
0d7c5     00 00 00 00 | 	byte	$00[20]
0d7c9     7F B0 00 00 
0d7cd     FE A0 00 00 
0d7d1     00 00 00 00 
0d7d5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d7d9     00 00 00 00 
0d7dd     00 00 00 00 
0d7e1     00 00 00 00 | 	byte	$00[12]
0d7e5     7F B0 00 00 
0d7e9     00 00 00 00 
0d7ed     BE 80 00 00 
0d7f1     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d7f5     00 00 00 00 
0d7f9     00 00 00 00 
0d7fd     00 00 00 00 
0d801     00 00 00 00 
0d805     00 00 00 00 | 	byte	$00[20]
0d809     7F B0 00 00 
0d80d     00 00 00 00 
0d811     00 00 00 00 
0d815     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d819     00 00 00 00 
0d81d     00 00 00 00 
0d821     00 00 00 00 | 	byte	$00[12]
0d825     7F B0 00 00 
0d829     00 00 00 00 
0d82d     FE A0 00 01 
0d831     AC F0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $01, $ac, $f0, $00, $00
0d835     00 00 00 00 
0d839     00 00 00 00 
0d83d     00 00 00 00 
0d841     00 00 00 00 
0d845     00 00 00 00 | 	byte	$00[20]
0d849     7F B0 00 00 
0d84d     00 00 00 01 
0d851     AC F0 00 00 
0d855     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $01, $ac, $f0, $00, $00, $00, $00, $00, $00
0d859     00 00 00 00 
0d85d     00 00 00 00 
0d861     00 00 00 00 | 	byte	$00[12]
0d865     7F B0 00 01 
0d869     AC FC 10 00 
0d86d     BE 80 00 00 
0d871     D6 E0 00 00 | 	byte	$7f, $b0, $00, $01, $ac, $fc, $10, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0d875     00 00 00 00 
0d879     00 00 00 00 
0d87d     00 00 00 00 
0d881     00 00 00 00 
0d885     00 00 00 00 | 	byte	$00[20]
0d889     7F B0 00 00 
0d88d     FE A0 00 01 
0d891     AC F0 00 00 
0d895     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $01, $ac, $f0, $00, $00, $00, $00, $00, $00
0d899     00 00 00 00 
0d89d     00 00 00 00 
0d8a1     00 00 00 00 | 	byte	$00[12]
0d8a5     7F B0 00 01 
0d8a9     AC FC 10 00 
0d8ad     00 00 00 00 
0d8b1     00 00 00 00 | 	byte	$7f, $b0, $00, $01, $ac, $fc, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d8b5     00 00 00 00 
0d8b9     00 00 00 00 
0d8bd     00 00 00 00 
0d8c1     00 00 00 00 
0d8c5     00 00 00 00 | 	byte	$00[20]
0d8c9     7F B0 00 00 
0d8cd     FE A0 00 01 
0d8d1     AC F0 00 00 
0d8d5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $01, $ac, $f0, $00, $00, $00, $00, $00, $00
0d8d9     00 00 00 00 
0d8dd     00 00 00 00 
0d8e1     00 00 00 00 | 	byte	$00[12]
0d8e5     7F B0 00 01 
0d8e9     AC FC 10 00 
0d8ed     BE 80 00 01 
0d8f1     AC F0 00 00 | 	byte	$7f, $b0, $00, $01, $ac, $fc, $10, $00, $be, $80, $00, $01, $ac, $f0, $00, $00
0d8f5     00 00 00 00 
0d8f9     00 00 00 00 
0d8fd     00 00 00 00 
0d901     00 00 00 00 
0d905     00 00 00 00 | 	byte	$00[20]
0d909     7F B0 00 00 
0d90d     BE 80 00 01 
0d911     AC F0 00 00 
0d915     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $be, $80, $00, $01, $ac, $f0, $00, $00, $00, $00, $00, $00
0d919     00 00 00 00 
0d91d     BE 80 00 00 
0d921     00 00 00 00 
0d925     7F B0 00 00 | 	byte	$00, $00, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00
0d929     00 00 00 00 
0d92d     FE A0 00 00 
0d931     D6 10 00 00 
0d935     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $a0, $00, $00, $d6, $10, $00, $00, $00, $00, $00, $00
0d939     00 00 00 00 
0d93d     00 00 00 00 
0d941     00 00 00 00 
0d945     00 00 00 00 | 	byte	$00[16]
0d949     7F B0 00 00 
0d94d     00 00 00 00 
0d951     00 00 00 00 
0d955     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d959     00 00 00 00 
0d95d     00 00 00 00 
0d961     00 00 00 00 | 	byte	$00[12]
0d965     7F B0 00 00 
0d969     00 00 00 00 
0d96d     BE 80 00 00 
0d971     D6 10 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $10, $00, $00
0d975     00 00 00 00 
0d979     00 00 00 00 
0d97d     00 00 00 00 
0d981     00 00 00 00 
0d985     00 00 00 00 | 	byte	$00[20]
0d989     7F B0 00 00 
0d98d     00 00 00 00 
0d991     00 00 00 00 
0d995     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d999     00 00 00 00 
0d99d     00 00 00 00 
0d9a1     00 00 00 00 | 	byte	$00[12]
0d9a5     7F B0 00 00 
0d9a9     00 00 00 00 
0d9ad     FE A0 00 00 
0d9b1     D6 10 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $d6, $10, $00, $00
0d9b5     00 00 00 00 
0d9b9     00 00 00 00 
0d9bd     00 00 00 00 
0d9c1     00 00 00 00 
0d9c5     00 00 00 00 | 	byte	$00[20]
0d9c9     7F B0 00 00 
0d9cd     FE A0 00 00 
0d9d1     00 00 00 00 
0d9d5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d9d9     00 00 00 00 
0d9dd     00 00 00 00 
0d9e1     00 00 00 00 | 	byte	$00[12]
0d9e5     7F B0 00 00 
0d9e9     00 00 00 00 
0d9ed     BE 80 00 00 
0d9f1     D6 10 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $10, $00, $00
0d9f5     00 00 00 00 
0d9f9     00 00 00 00 
0d9fd     00 00 00 00 
0da01     00 00 00 00 
0da05     00 00 00 00 | 	byte	$00[20]
0da09     7F B0 00 00 
0da0d     00 00 00 00 
0da11     D6 20 00 00 
0da15     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $d6, $20, $00, $00, $00, $00, $00, $00
0da19     00 00 00 00 
0da1d     00 00 00 00 
0da21     00 00 00 00 | 	byte	$00[12]
0da25     7F B0 00 00 
0da29     00 00 00 00 
0da2d     FE A0 00 00 
0da31     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0da35     00 00 00 00 
0da39     00 00 00 00 
0da3d     00 00 00 00 
0da41     00 00 00 00 
0da45     00 00 00 00 | 	byte	$00[20]
0da49     7F B0 00 00 
0da4d     00 00 00 00 
0da51     00 00 00 00 
0da55     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da59     00 00 00 00 
0da5d     00 00 00 00 
0da61     00 00 00 00 | 	byte	$00[12]
0da65     7F B0 00 00 
0da69     00 00 00 00 
0da6d     BE 80 00 00 
0da71     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00
0da75     00 00 00 00 
0da79     00 00 00 00 
0da7d     00 00 00 00 
0da81     00 00 00 00 
0da85     00 00 00 00 | 	byte	$00[20]
0da89     7F B0 00 00 
0da8d     FE A0 00 00 
0da91     00 00 00 00 
0da95     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da99     00 00 00 00 
0da9d     00 00 00 00 
0daa1     00 00 00 00 | 	byte	$00[12]
0daa5     7F B0 00 00 
0daa9     00 00 00 00 
0daad     00 00 00 00 
0dab1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dab5     00 00 00 00 
0dab9     00 00 00 00 
0dabd     00 00 00 00 
0dac1     00 00 00 00 
0dac5     00 00 00 00 | 	byte	$00[20]
0dac9     7F B0 00 00 
0dacd     FE A0 00 00 
0dad1     00 00 00 00 
0dad5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dad9     00 00 00 00 
0dadd     00 00 00 00 
0dae1     00 00 00 00 | 	byte	$00[12]
0dae5     7F B0 00 00 
0dae9     00 00 00 00 
0daed     BE 80 00 00 
0daf1     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0daf5     00 00 00 00 
0daf9     00 00 00 00 
0dafd     00 00 00 00 
0db01     00 00 00 00 
0db05     00 00 00 00 | 	byte	$00[20]
0db09     7F B0 00 00 
0db0d     00 00 00 00 
0db11     00 00 00 00 
0db15     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0db19     00 00 00 00 
0db1d     00 00 00 00 
0db21     00 00 00 00 | 	byte	$00[12]
0db25     7F B0 00 00 
0db29     D6 30 00 00 
0db2d     FE A0 00 00 
0db31     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $d6, $30, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0db35     00 00 00 00 
      ...             
0db5d     00 00 00 00 
0db61     00 00 00 00 | 	byte	$00[48]
0db65     7F B0 00 00 
0db69     D6 30 00 00 
0db6d     BE 80 00 00 
0db71     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $d6, $30, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00
0db75     00 00 00 00 
      ...             
0db9d     00 00 00 00 
0dba1     00 00 00 00 | 	byte	$00[48]
0dba5     7F B0 00 00 
0dba9     D6 30 00 00 
0dbad     FE A0 00 00 
0dbb1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $d6, $30, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0dbb5     00 00 00 00 
0dbb9     00 00 00 00 
0dbbd     00 00 00 00 
0dbc1     00 00 00 00 
0dbc5     00 00 00 00 
0dbc9     00 00 00 00 | 	byte	$00[24]
0dbcd     FE A0 00 00 
0dbd1     00 00 00 00 
0dbd5     00 00 00 00 
0dbd9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dbdd     00 00 00 00 
0dbe1     00 00 00 00 | 	byte	$00[8]
0dbe5     7F B0 00 00 
0dbe9     D6 30 00 00 
0dbed     BE 80 00 00 
0dbf1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $d6, $30, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00
0dbf5     00 00 00 00 
0dbf9     00 00 00 00 
0dbfd     00 00 00 00 
0dc01     00 00 00 00 
0dc05     00 00 00 00 | 	byte	$00[20]
0dc09     D6 40 00 00 
0dc0d     00 00 00 00 
0dc11     00 00 00 00 
0dc15     00 00 00 00 | 	byte	$d6, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dc19     00 00 00 00 
0dc1d     00 00 00 00 
0dc21     00 00 00 00 | 	byte	$00[12]
0dc25     7F B0 00 00 
0dc29     00 00 00 00 
0dc2d     FE A0 00 00 
0dc31     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0dc35     00 00 00 00 
0dc39     00 00 00 00 
0dc3d     00 00 00 00 
0dc41     00 00 00 00 | 	byte	$00[16]
0dc45     7F B0 00 00 
0dc49     00 00 00 00 
0dc4d     00 00 00 00 
0dc51     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dc55     00 00 00 00 
0dc59     00 00 00 00 
0dc5d     00 00 00 00 
0dc61     00 00 00 00 | 	byte	$00[16]
0dc65     7F B0 00 00 
0dc69     00 00 00 00 
0dc6d     BE 80 00 00 
0dc71     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00
0dc75     00 00 00 00 
0dc79     00 00 00 00 
0dc7d     00 00 00 00 
0dc81     00 00 00 00 | 	byte	$00[16]
0dc85     7F B0 00 00 
0dc89     00 00 00 00 
0dc8d     FE A0 00 00 
0dc91     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0dc95     00 00 00 00 
0dc99     00 00 00 00 
0dc9d     00 00 00 00 
0dca1     00 00 00 00 | 	byte	$00[16]
0dca5     7F B0 00 00 
0dca9     00 00 00 00 
0dcad     00 00 00 00 
0dcb1     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dcb5     00 00 00 00 
0dcb9     00 00 00 00 
0dcbd     00 00 00 00 
0dcc1     00 00 00 00 
0dcc5     00 00 00 00 | 	byte	$00[20]
0dcc9     7F B0 00 00 
0dccd     FE A0 00 00 
0dcd1     00 00 00 00 
0dcd5     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dcd9     00 00 00 00 
0dcdd     00 00 00 00 
0dce1     00 00 00 00 | 	byte	$00[12]
0dce5     7F B0 00 00 
0dce9     00 00 00 00 
0dced     BE 80 00 00 
0dcf1     D6 E0 00 00 | 	byte	$7f, $b0, $00, $00, $00, $00, $00, $00, $be, $80, $00, $00, $d6, $e0, $00, $00
0dcf5     00 00 00 00 
0dcf9     00 00 00 00 
0dcfd     00 00 00 00 
0dd01     00 00 00 00 
0dd05     00 00 00 00 | 	byte	$00[20]
0dd09     7F B0 00 00 
0dd0d     BE 80 00 00 
0dd11     00 00 00 00 
0dd15     00 00 00 00 | 	byte	$7f, $b0, $00, $00, $be, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd19     00 00 00 00 
0dd1d     BE 80 00 00 
0dd21     00 00 00 01 
0dd25     E0 7F 04 00 | 	byte	$00, $00, $00, $00, $be, $80, $00, $00, $00, $00, $00, $01, $e0, $7f, $04, $00
0dd29     F0 90 00 00 
0dd2d     FE A0 00 11 
0dd31     1D 12 02 00 
0dd35     00 00 00 00 | 	byte	$f0, $90, $00, $00, $fe, $a0, $00, $11, $1d, $12, $02, $00, $00, $00, $00, $00
0dd39     00 00 00 00 
0dd3d     00 00 00 00 
0dd41     00          | 	byte	$00[9]
0dd42     02 02 01 E0 
0dd46     70 00 00 00 
0dd4a     00 00 00 7F 
0dd4e     B0 00 00 00 | 	byte	$02, $02, $01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00
0dd52     02 03 00 00 
0dd56     00 00 00 00 
0dd5a     00 00 00 00 
0dd5e     00 00 00 00 | 	byte	$02, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd62     02 03 01 40 
0dd66     70 00 01 40 
0dd6a     90 00 00 BE 
0dd6e     80 00 00 00 | 	byte	$02, $03, $01, $40, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $00
0dd72     02 04 00 00 
0dd76     00 00 00 00 
0dd7a     00 00 00 00 
0dd7e     00 00 00 00 | 	byte	$02, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd82     02 04 01 E0 
0dd86     70 00 01 7D 
0dd8a     90 00 00 7F 
0dd8e     B0 00 00 00 | 	byte	$02, $04, $01, $e0, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00
0dd92     02 04 00 00 
0dd96     00 00 00 00 
0dd9a     00 00 00 00 
0dd9e     00 00 00 00 | 	byte	$02, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dda2     02 08 00 00 
0dda6     00 00 00 00 
0ddaa     00 00 00 FE 
0ddae     A0 00 00 00 | 	byte	$02, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00
0ddb2     02 08 00 00 
0ddb6     00 00 00 00 
0ddba     00 00 00 00 
0ddbe     00 00 00 00 | 	byte	$02, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ddc2     02 04 01 E0 
0ddc6     70 00 01 40 
0ddca     90 00 00 FE 
0ddce     A0 00 00 00 | 	byte	$02, $04, $01, $e0, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $00
0ddd2     00 00 00 00 
0ddd6     00 00 00 00 
0ddda     00 00 00 00 
0ddde     00 00 00 00 
0dde2     00 00       | 	byte	$00[18]
0dde4     01 40 70 00 
0dde8     01 7D 90 00 
0ddec     00 BE 80 00 
0ddf0     00 00 00 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $00, $00, $00, $00
0ddf4     00 00 00 00 
0ddf8     00 00 00 00 
0ddfc     00 00 00 00 
0de00     00 00 00 00 | 	byte	$00[16]
0de04     01 E0 70 00 
0de08     00 F0 90 00 
0de0c     00 00 00 00 
0de10     00 F0 C0 00 | 	byte	$01, $e0, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $f0, $c0, $00
0de14     00 00 00 00 
0de18     00 00 00 00 
0de1c     00 00 00 00 
0de20     00 00 00 00 | 	byte	$00[16]
0de24     02 1A 70 00 
0de28     00 F0 90 00 
0de2c     00 FE A0 00 
0de30     00 F0 C0 00 | 	byte	$02, $1a, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0, $c0, $00
0de34     00 00 00 00 
0de38     00 00 00 00 
0de3c     00 00 00 00 
0de40     00 00 00 00 | 	byte	$00[16]
0de44     02 1A 70 00 
0de48     00 00 00 00 
0de4c     00 7F B0 00 
0de50     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0de54     00 00 00 00 
0de58     00 00 00 00 
0de5c     00 00 00 00 
0de60     00 00 00 00 | 	byte	$00[16]
0de64     01 68 70 00 
0de68     01 40 90 00 
0de6c     00 BE 80 00 
0de70     01 53 E0 00 | 	byte	$01, $68, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0de74     00 00 00 00 
0de78     00 00 00 00 
0de7c     00 00 00 00 
0de80     00 00 00 00 | 	byte	$00[16]
0de84     02 1A 70 00 
0de88     01 7D 90 00 
0de8c     00 7F B0 00 
0de90     00 00 00 00 | 	byte	$02, $1a, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0de94     00 00 00 00 
0de98     00 00 00 00 
0de9c     00 00 00 00 
0dea0     00 00 00 00 
0dea4     00 00 00 00 
0dea8     00 00 00 00 
0deac     00          | 	byte	$00[25]
0dead     FE A0 00 00 
0deb1     00 00 00 00 
0deb5     00 00 00 00 
0deb9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0debd     00 00 00 00 
0dec1     00 00 00    | 	byte	$00[7]
0dec4     02 1A 70 00 
0dec8     01 40 90 00 
0decc     00 FE A0 00 
0ded0     00 00 00 00 | 	byte	$02, $1a, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0ded4     00 00 00 00 
0ded8     00 00 00 00 
0dedc     00 00 00 00 
0dee0     00 00 00 00 | 	byte	$00[16]
0dee4     01 68 70 00 
0dee8     01 7D 90 00 
0deec     00 BE 80 00 
0def0     01 53 E0 00 | 	byte	$01, $68, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0def4     00 00 00 00 
0def8     00 00 00 00 
0defc     00 00 00 00 
0df00     00 00 00 00 | 	byte	$00[16]
0df04     02 1A 70 00 
0df08     00 F0 90 00 
0df0c     00 00 00 00 
0df10     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df14     00 00 00 00 
0df18     00 00 00 00 
0df1c     00 00 00 00 
0df20     00 00 00 00 | 	byte	$00[16]
0df24     03 58 70 00 
0df28     00 F0 90 00 
0df2c     00 FE A0 00 
0df30     11 1D 12 02 | 	byte	$03, $58, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $11, $1d, $12, $02
0df34     00 00 00 00 
0df38     00 00 00 00 
0df3c     00 00 00 00 
0df40     00 00       | 	byte	$00[14]
0df42     02 02 03 58 
0df46     70 00 00 00 
0df4a     00 00 00 7F 
0df4e     B0 00 00 00 | 	byte	$02, $02, $03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00
0df52     02 03 00 00 
0df56     00 00 00 00 
0df5a     00 00 00 00 
0df5e     00 00 00 00 | 	byte	$02, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df62     02 03 02 3A 
0df66     70 00 01 40 
0df6a     90 00 00 BE 
0df6e     80 00 00 00 | 	byte	$02, $03, $02, $3a, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $00, $00
0df72     02 04 00 00 
0df76     00 00 00 00 
0df7a     00 00 00 00 
0df7e     00 00 00 00 | 	byte	$02, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df82     02 04 03 58 
0df86     70 00 01 7D 
0df8a     90 00 00 7F 
0df8e     B0 00 00 00 | 	byte	$02, $04, $03, $58, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00
0df92     02 04 00 00 
0df96     00 00 00 00 
0df9a     00 00 00 00 
0df9e     00 00 00 00 | 	byte	$02, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dfa2     02 05 00 00 
0dfa6     00 00 00 00 
0dfaa     00 00 00 FE 
0dfae     A0 00 00 00 | 	byte	$02, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00
0dfb2     02 05 00 00 
0dfb6     00 00 00 00 
0dfba     00 00 00 00 
0dfbe     00 00 00 00 | 	byte	$02, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dfc2     02 06 03 58 
0dfc6     70 00 01 40 
0dfca     90 00 00 FE 
0dfce     A0 00 00 00 | 	byte	$02, $06, $03, $58, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $00
0dfd2     02 07 00 00 
0dfd6     00 00 00 00 
0dfda     00 00 00 00 
0dfde     00 00 00 00 | 	byte	$02, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dfe2     00 00 02 3A 
0dfe6     70 00 01 7D 
0dfea     90 00 00 BE 
0dfee     80 00 01 53 | 	byte	$00, $00, $02, $3a, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53
0dff2     E0 00 00 00 
0dff6     00 00 00 00 
0dffa     00 00 00 00 
0dffe     00 00 00 00 | 	byte	$e0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e002     00 00 03 58 
0e006     70 00 00 F0 
0e00a     90 00 00 00 
0e00e     00 00 00 F0 | 	byte	$00, $00, $03, $58, $70, $00, $00, $f0, $90, $00, $00, $00, $00, $00, $00, $f0
0e012     C0 00 00 00 
0e016     00 00 00 00 
0e01a     00 00 00 00 
0e01e     00 00 00 00 | 	byte	$c0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e022     00 00 02 D0 
0e026     70 00 00 F0 
0e02a     90 00 00 FE 
0e02e     A0 00 00 F0 | 	byte	$00, $00, $02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $f0
0e032     C0 00 00 00 
0e036     00 00 00 00 
0e03a     00 00 00 00 
0e03e     00 00 00 00 | 	byte	$c0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e042     00 00 02 D0 
0e046     70 00 00 00 
0e04a     00 00 00 7F 
0e04e     B0 00 00 00 | 	byte	$00, $00, $02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00
0e052     00 00 00 00 
0e056     00 00 00 00 
0e05a     00 00 00 00 
0e05e     00 00 00 00 
0e062     00 00       | 	byte	$00[18]
0e064     01 E0 70 00 
0e068     01 40 90 00 
0e06c     00 BE 80 00 
0e070     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $40, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e074     00 00 00 00 
0e078     00 00 00 00 
0e07c     00 00 00 00 
0e080     00 00 00 00 | 	byte	$00[16]
0e084     02 D0 70 00 
0e088     01 7D 90 00 
0e08c     00 7F B0 00 
0e090     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $7d, $90, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e094     00 00 00 00 
0e098     00 00 00 00 
0e09c     00 00 00 00 
0e0a0     00 00 00 00 
0e0a4     00 00 00 00 
0e0a8     00 00 00 00 
0e0ac     00          | 	byte	$00[25]
0e0ad     FE A0 00 00 
0e0b1     00 00 00 00 
0e0b5     00 00 00 00 
0e0b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e0bd     00 00 00 00 
0e0c1     00 00 00    | 	byte	$00[7]
0e0c4     02 D0 70 00 
0e0c8     01 40 90 00 
0e0cc     00 FE A0 00 
0e0d0     00 00 00 00 | 	byte	$02, $d0, $70, $00, $01, $40, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0e0d4     00 00 00 00 
0e0d8     00 00 00 00 
0e0dc     00 00 00 00 
0e0e0     00 00 00 00 | 	byte	$00[16]
0e0e4     01 E0 70 00 
0e0e8     01 7D 90 00 
0e0ec     00 BE 80 00 
0e0f0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e0f4     00 00 00 00 
0e0f8     00 00 00 00 
0e0fc     00 00 00 00 
0e100     00 00 00 00 | 	byte	$00[16]
0e104     02 D0 70 00 
0e108     00 F0 90 00 
0e10c     00 FE A0 00 
0e110     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $f0, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0e114     00 00 00 00 
0e118     00 00 00 00 
0e11c     00 00 00 00 
0e120     00 00 00 00 | 	byte	$00[16]
0e124     01 E0 7F 04 
0e128     01 7D 90 00 
0e12c     00 FE A0 00 
0e130     00 7F B0 00 | 	byte	$01, $e0, $7f, $04, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e134     00 00 00 00 
0e138     00 00 00 00 
0e13c     00 00 00 00 
0e140     00 00 00 00 | 	byte	$00[16]
0e144     01 E0 70 00 
0e148     00 00 00 00 
0e14c     00 7F B0 00 
0e150     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e154     00 00 00 00 
0e158     00 00 00 00 
0e15c     00 00 00 00 
0e160     00 00 00 00 | 	byte	$00[16]
0e164     01 40 70 00 
0e168     01 7D 90 00 
0e16c     00 BE 80 00 
0e170     01 53 E0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e174     00 00 00 00 
0e178     00 00 00 00 
0e17c     00 00 00 00 
0e180     00 00 00 00 | 	byte	$00[16]
0e184     01 E0 70 00 
0e188     00 00 00 00 
0e18c     00 7F B0 00 
0e190     00 00 00 00 | 	byte	$01, $e0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e194     00 00 00 00 
0e198     00 00 00 00 
0e19c     00 00 00 00 
0e1a0     00 00 00 00 
0e1a4     00 00 00 00 | 	byte	$00[20]
0e1a8     01 7D 90 00 
0e1ac     00 FE A0 00 
0e1b0     00 7F B0 00 
0e1b4     00 00 00 00 | 	byte	$01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e1b8     00 00 00 00 
0e1bc     00 00 00 00 
0e1c0     00 00 00 00 | 	byte	$00[12]
0e1c4     01 E0 70 00 
0e1c8     01 68 90 00 
0e1cc     00 FE A0 00 
0e1d0     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $68, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e1d4     00 00 00 00 
0e1d8     00 00 00 00 
0e1dc     00 00 00 00 
0e1e0     00 00 00 00 | 	byte	$00[16]
0e1e4     01 40 70 00 
0e1e8     01 7D 90 00 
0e1ec     00 BE 80 00 
0e1f0     01 53 E0 00 | 	byte	$01, $40, $70, $00, $01, $7d, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e1f4     00 00 00 00 
0e1f8     00 00 00 00 
0e1fc     00 00 00 00 
0e200     00 00 00 00 | 	byte	$00[16]
0e204     01 E0 70 00 
0e208     01 AC 90 00 
0e20c     00 00 00 00 
0e210     00 7F B0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0e214     00 00 00 00 
0e218     00 00 00 00 
0e21c     00 00 00 00 
0e220     00 00 00 00 | 	byte	$00[16]
0e224     02 1A 70 00 
0e228     00 00 00 00 
0e22c     00 FE A0 00 
0e230     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e234     00 00 00 00 
0e238     00 00 00 00 
0e23c     00 00 00 00 
0e240     00 00 00 00 | 	byte	$00[16]
0e244     02 1A 70 00 
0e248     00 00 00 00 
0e24c     00 7F B0 00 
0e250     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e254     00 00 00 00 
0e258     00 00 00 00 
0e25c     00 00 00 00 
0e260     00 00 00 00 | 	byte	$00[16]
0e264     01 68 70 00 
0e268     00 00 00 00 
0e26c     00 BE 80 00 
0e270     01 53 E0 00 | 	byte	$01, $68, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e274     00 00 00 00 
0e278     00 00 00 00 
0e27c     00 00 00 00 
0e280     00 00 00 00 | 	byte	$00[16]
0e284     02 1A 70 00 
0e288     00 00 00 00 
0e28c     00 7F B0 00 
0e290     00 00 00 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e294     00 00 00 00 
0e298     00 00 00 00 
0e29c     00 00 00 00 
0e2a0     00 00 00 00 
0e2a4     00 00 00 00 
0e2a8     00 00 00 00 
0e2ac     00          | 	byte	$00[25]
0e2ad     FE A0 00 00 
0e2b1     7F B0 00 00 
0e2b5     00 00 00 00 
0e2b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e2bd     00 00 00 00 
0e2c1     00 00 00    | 	byte	$00[7]
0e2c4     02 1A 70 00 
0e2c8     01 E0 90 00 
0e2cc     00 FE A0 00 
0e2d0     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e2d4     00 00 00 00 
0e2d8     00 00 00 00 
0e2dc     00 00 00 00 
0e2e0     00 00 00 00 | 	byte	$00[16]
0e2e4     01 68 70 00 
0e2e8     01 AC 90 00 
0e2ec     00 BE 80 00 
0e2f0     01 53 E0 00 | 	byte	$01, $68, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e2f4     00 00 00 00 
0e2f8     00 00 00 00 
0e2fc     00 00 00 00 
0e300     00 00 00 00 | 	byte	$00[16]
0e304     02 1A 70 00 
0e308     00 00 00 00 
0e30c     00 00 00 00 
0e310     00 7F B0 00 | 	byte	$02, $1a, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0e314     00 00 00 00 
0e318     00 00 00 00 
0e31c     00 00 00 00 
0e320     00 00 00 00 | 	byte	$00[16]
0e324     03 58 70 00 
0e328     02 3A 90 00 
0e32c     00 FE A0 00 
0e330     00 7F B0 00 | 	byte	$03, $58, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e334     00 00 00 00 
0e338     00 00 00 00 
0e33c     00 00 00 00 
0e340     00 00 00 00 | 	byte	$00[16]
0e344     03 58 70 00 
0e348     00 00 00 00 
0e34c     00 7F B0 00 
0e350     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e354     00 00 00 00 
0e358     00 00 00 00 
0e35c     00 00 00 00 
0e360     00 00 00 00 | 	byte	$00[16]
0e364     02 3A 70 00 
0e368     00 00 00 00 
0e36c     00 BE 80 00 
0e370     01 53 E0 00 | 	byte	$02, $3a, $70, $00, $00, $00, $00, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e374     00 00 00 00 
0e378     00 00 00 00 
0e37c     00 00 00 00 
0e380     00 00 00 00 | 	byte	$00[16]
0e384     03 58 70 00 
0e388     00 00 00 00 
0e38c     00 7F B0 00 
0e390     00 00 00 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e394     00 00 00 00 
0e398     00 00 00 00 
0e39c     00 00 00 00 
0e3a0     00 00 00 00 
0e3a4     00 00 00 00 
0e3a8     00 00 00 00 
0e3ac     00          | 	byte	$00[25]
0e3ad     FE A0 00 00 
0e3b1     7F B0 00 00 
0e3b5     00 00 00 00 
0e3b9     00 00 00 00 | 	byte	$fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e3bd     00 00 00 00 
0e3c1     00 00 00    | 	byte	$00[7]
0e3c4     03 58 70 00 
0e3c8     00 00 00 00 
0e3cc     00 FE A0 00 
0e3d0     00 7F B0 00 | 	byte	$03, $58, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e3d4     00 00 00 00 
0e3d8     00 00 00 00 
0e3dc     00 00 00 00 
0e3e0     00 00 00 00 | 	byte	$00[16]
0e3e4     02 3A 70 00 
0e3e8     02 3A 90 00 
0e3ec     00 BE 80 00 
0e3f0     01 53 E0 00 | 	byte	$02, $3a, $70, $00, $02, $3a, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e3f4     00 00 00 00 
0e3f8     00 00 00 00 
0e3fc     00 00 00 00 
0e400     00 00 00 00 | 	byte	$00[16]
0e404     03 58 70 00 
0e408     01 FC 90 00 
0e40c     00 00 00 00 
0e410     00 7F B0 00 | 	byte	$03, $58, $70, $00, $01, $fc, $90, $00, $00, $00, $00, $00, $00, $7f, $b0, $00
0e414     00 00 00 00 
0e418     00 00 00 00 
0e41c     00 00 00 00 
0e420     00 00 00 00 | 	byte	$00[16]
0e424     02 D0 70 00 
0e428     01 E0 90 00 
0e42c     00 FE A0 00 
0e430     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e434     00 00 00 00 
0e438     00 00 00 00 
0e43c     00 00 00 00 
0e440     00 00 00 00 | 	byte	$00[16]
0e444     02 D0 70 00 
0e448     00 00 00 00 
0e44c     00 7F B0 00 
0e450     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e454     00 00 00 00 
0e458     00 00 00 00 
0e45c     00 00 00 00 
0e460     00 00 00 00 | 	byte	$00[16]
0e464     01 E0 70 00 
0e468     01 AC 90 00 
0e46c     00 BE 80 00 
0e470     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $ac, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e474     00 00 00 00 
0e478     00 00 00 00 
0e47c     00 00 00 00 
0e480     00 00 00 00 | 	byte	$00[16]
0e484     02 D0 70 00 
0e488     00 00 00 00 
0e48c     00 7F B0 00 
0e490     00 00 00 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e494     00 00 00 00 
0e498     00 00 00 00 
0e49c     00 00 00 00 
0e4a0     00 00 00 00 
0e4a4     00 00 00 00 | 	byte	$00[20]
0e4a8     01 E0 90 00 
0e4ac     00 FE A0 00 
0e4b0     00 7F B0 00 
0e4b4     00 00 00 00 | 	byte	$01, $e0, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00, $00, $00, $00, $00
0e4b8     00 00 00 00 
0e4bc     00 00 00 00 
0e4c0     00 00 00 00 | 	byte	$00[12]
0e4c4     02 D0 70 00 
0e4c8     00 00 00 00 
0e4cc     00 FE A0 00 
0e4d0     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e4d4     00 00 00 00 
0e4d8     00 00 00 00 
0e4dc     00 00 00 00 
0e4e0     00 00 00 00 | 	byte	$00[16]
0e4e4     01 E0 70 00 
0e4e8     01 FC 90 00 
0e4ec     00 BE 80 00 
0e4f0     01 53 E0 00 | 	byte	$01, $e0, $70, $00, $01, $fc, $90, $00, $00, $be, $80, $00, $01, $53, $e0, $00
0e4f4     00 00 00 00 
0e4f8     00 00 00 00 
0e4fc     00 00 00 00 
0e500     00 00 00 00 | 	byte	$00[16]
0e504     02 D0 70 00 
0e508     02 3A 90 00 
0e50c     00 FE A0 00 
0e510     00 7F B0 00 | 	byte	$02, $d0, $70, $00, $02, $3a, $90, $00, $00, $fe, $a0, $00, $00, $7f, $b0, $00
0e514     00 00 00 00 
0e518     00 00 00 00 
0e51c     00 00 00 00 
0e520     00 00 00 00 
0e524     00 00 00 00 | 	byte	$00[20]
0e528     04 03 02 02 
0e52c     01 FF F8 F0 
0e530     E0 E7 1F 6F 
0e534     6A 40 20 E0 | 	byte	$04, $03, $02, $02, $01, $ff, $f8, $f0, $e0, $e7, $1f, $6f, $6a, $40, $20, $e0
0e538     BD B2 84 80 
0e53c     8F BF 1F 67 
0e540     73 7E 60 20 
0e544     E0 CF CC CF | 	byte	$bd, $b2, $84, $80, $8f, $bf, $1f, $67, $73, $7e, $60, $20, $e0, $cf, $cc, $cf
0e548     FB 3F 48 12 
0e54c     1F 3D 00 C0 
0e550     B7 DF E1 FF 
0e554     3F 7F 7F 60 | 	byte	$fb, $3f, $48, $12, $1f, $3d, $00, $c0, $b7, $df, $e1, $ff, $3f, $7f, $7f, $60
0e558     30 00 C0 BF 
0e55c     E4 C0 BF FF 
0e560     36 18 0B 3D 
0e564     28 00 17 0C | 	byte	$30, $00, $c0, $bf, $e4, $c0, $bf, $ff, $36, $18, $0b, $3d, $28, $00, $17, $0c
0e568     FF 00 D2 D7 
0e56c     FD F4 DC E7 
0e570     FF F8 E6 D4 
0e574     BC BF BF DF | 	byte	$ff, $00, $d2, $d7, $fd, $f4, $dc, $e7, $ff, $f8, $e6, $d4, $bc, $bf, $bf, $df
0e578     0F 2F 67 78 
0e57c     50 10 F0 F7 
0e580     00 F9 0F 3F 
0e584     3C 3A 30 00 | 	byte	$0f, $2f, $67, $78, $50, $10, $f0, $f7, $00, $f9, $0f, $3f, $3c, $3a, $30, $00
0e588     C8 AD A9 BF 
0e58c     DF FF 27 3A 
0e590     28 1A 04 F0 
0e594     FF 08 F4 F3 | 	byte	$c8, $ad, $a9, $bf, $df, $ff, $27, $3a, $28, $1a, $04, $f0, $ff, $08, $f4, $f3
0e598     FF 0D 08 EC 
0e59c     EB F6 E8 DF 
0e5a0     FF 15 10 00 
0e5a4     FE FD F1 F7 | 	byte	$ff, $0d, $08, $ec, $eb, $f6, $e8, $df, $ff, $15, $10, $00, $fe, $fd, $f1, $f7
0e5a8     13 1C 10 05 
0e5ac     00 FC FE FE 
0e5b0     FC 07 11 08 
0e5b4     F4 F8 EC D9 | 	byte	$13, $1c, $10, $05, $00, $fc, $fe, $fe, $fc, $07, $11, $08, $f4, $f8, $ec, $d9
0e5b8     DB E0 E1 E4 
0e5bc     EA ED F5 FF 
0e5c0     05 09 11 15 
0e5c4     1B 2F 3C 28 | 	byte	$db, $e0, $e1, $e4, $ea, $ed, $f5, $ff, $05, $09, $11, $15, $1b, $2f, $3c, $28
0e5c8     16 10 02 F3 
0e5cc     FB 03 05 04 
0e5d0     00 FC FF 02 
0e5d4     07 06 F9 F5 | 	byte	$16, $10, $02, $f3, $fb, $03, $05, $04, $00, $fc, $ff, $02, $07, $06, $f9, $f5
0e5d8     FB FD 03 0D 
0e5dc     06 FA FD 00 
0e5e0     FC FF 02 FC 
0e5e4     F5 F1 E8 E4 | 	byte	$fb, $fd, $03, $0d, $06, $fa, $fd, $00, $fc, $ff, $02, $fc, $f5, $f1, $e8, $e4
0e5e8     DD DD EE F7 
0e5ec     F8 FF 06 FA 
0e5f0     F9 0B 10 08 
0e5f4     FC FB FD FB | 	byte	$dd, $dd, $ee, $f7, $f8, $ff, $06, $fa, $f9, $0b, $10, $08, $fc, $fb, $fd, $fb
0e5f8     FB FF 04 02 
0e5fc     02 FE FA F9 
0e600     FB FC F8 F0 
0e604     F2 FB 03 0E | 	byte	$fb, $ff, $04, $02, $02, $fe, $fa, $f9, $fb, $fc, $f8, $f0, $f2, $fb, $03, $0e
0e608     10 08 00 FE 
0e60c     FB F8 F0 F0 
0e610     F5 F9 FA FF 
0e614     09 0F 10 08 | 	byte	$10, $08, $00, $fe, $fb, $f8, $f0, $f0, $f5, $f9, $fa, $ff, $09, $0f, $10, $08
0e618     01 FF F5 F0 
0e61c     F3 FF 13 27 
0e620     2C 30 2A 1C 
0e624     12 0A 02 FF | 	byte	$01, $ff, $f5, $f0, $f3, $ff, $13, $27, $2c, $30, $2a, $1c, $12, $0a, $02, $ff
0e628     0F 1A 19 17 
0e62c     1A 0C FA F6 
0e630     FD 07 08 0C 
0e634     11 17 11 00 | 	byte	$0f, $1a, $19, $17, $1a, $0c, $fa, $f6, $fd, $07, $08, $0c, $11, $17, $11, $00
0e638     F4 ED F3 F4 
0e63c     F0 F5 FF 00 
0e640     FA F0 E6 E7 
0e644     EC F1 F3 FB | 	byte	$f4, $ed, $f3, $f4, $f0, $f5, $ff, $00, $fa, $f0, $e6, $e7, $ec, $f1, $f3, $fb
0e648     02 00 FF 07 
0e64c     0A 06 01 FC 
0e650     FC F0 EE F3 
0e654     F0 F7 FF 09 | 	byte	$02, $00, $ff, $07, $0a, $06, $01, $fc, $fc, $f0, $ee, $f3, $f0, $f7, $ff, $09
0e658     0F 0D 0A 08 
0e65c     00 F4 F7 FF 
0e660     09 13 1D 1D 
0e664     14 08 00 FF | 	byte	$0f, $0d, $0a, $08, $00, $f4, $f7, $ff, $09, $13, $1d, $1d, $14, $08, $00, $ff
0e668     FD FD 05 0F 
0e66c     15 16 15 12 
0e670     0F 0C 0F 13 
0e674     14 19 22 1A | 	byte	$fd, $fd, $05, $0f, $15, $16, $15, $12, $0f, $0c, $0f, $13, $14, $19, $22, $1a
0e678     0E 13 1A 14 
0e67c     0C 0F 17 19 
0e680     0A FA FB FE 
0e684     FB FF 07 0C | 	byte	$0e, $13, $1a, $14, $0c, $0f, $17, $19, $0a, $fa, $fb, $fe, $fb, $ff, $07, $0c
0e688     0B 09 08 FC 
0e68c     F3 FB FA F4 
0e690     F7 FD F9 F0 
0e694     E8 E5 E2 E5 | 	byte	$0b, $09, $08, $fc, $f3, $fb, $fa, $f4, $f7, $fd, $f9, $f0, $e8, $e5, $e2, $e5
0e698     F2 FF 08 06 
0e69c     00 FF F4 EC 
0e6a0     F1 F6 F7 FB 
0e6a4     FF FD FB FA | 	byte	$f2, $ff, $08, $06, $00, $ff, $f4, $ec, $f1, $f6, $f7, $fb, $ff, $fd, $fb, $fa
0e6a8     F6 F6 F8 FC 
0e6ac     07 0C 08 08 
0e6b0     08 F8 EC F1 
0e6b4     F9 FB FB 03 | 	byte	$f6, $f6, $f8, $fc, $07, $0c, $08, $08, $08, $f8, $ec, $f1, $f9, $fb, $fb, $03
0e6b8     09 04 01 01 
0e6bc     01 03 08 0D 
0e6c0     12 1A 1A 14 
0e6c4     10 0D 0A 0D | 	byte	$09, $04, $01, $01, $01, $03, $08, $0d, $12, $1a, $1a, $14, $10, $0d, $0a, $0d
0e6c8     11 0C 04 FA 
0e6cc     F2 F3 FA FB 
0e6d0     FF 09 10 12 
0e6d4     13 10 09 06 | 	byte	$11, $0c, $04, $fa, $f2, $f3, $fa, $fb, $ff, $09, $10, $12, $13, $10, $09, $06
0e6d8     08 0B 0C 0E 
0e6dc     10 13 08 F4 
0e6e0     ED EA E5 E7 
0e6e4     F3 FB FF 02 | 	byte	$08, $0b, $0c, $0e, $10, $13, $08, $f4, $ed, $ea, $e5, $e7, $f3, $fb, $ff, $02
0e6e8     FE F9 F6 F0 
0e6ec     F1 FA F8 F5 
0e6f0     F9 FE 01 00 
0e6f4     F8 F5 F4 F0 | 	byte	$fe, $f9, $f6, $f0, $f1, $fa, $f8, $f5, $f9, $fe, $01, $00, $f8, $f5, $f4, $f0
0e6f8     ED ED EF F2 
0e6fc     F1 EE EC EF 
0e700     F7 FC FD FC 
0e704     F5 F7 FF 02 | 	byte	$ed, $ed, $ef, $f2, $f1, $ee, $ec, $ef, $f7, $fc, $fd, $fc, $f5, $f7, $ff, $02
0e708     04 04 06 04 
0e70c     FC F9 FD 03 
0e710     07 06 05 08 
0e714     0D 10 0C 04 | 	byte	$04, $04, $06, $04, $fc, $f9, $fd, $03, $07, $06, $05, $08, $0d, $10, $0c, $04
0e718     FF 05 0D 0F 
0e71c     11 17 1A 10 
0e720     02 FF 03 05 
0e724     04 0D 15 14 | 	byte	$ff, $05, $0d, $0f, $11, $17, $1a, $10, $02, $ff, $03, $05, $04, $0d, $15, $14
0e728     14 10 05 00 
0e72c     F8 F1 F7 FF 
0e730     08 09 0A 0B 
0e734     08 02 FD FD | 	byte	$14, $10, $05, $00, $f8, $f1, $f7, $ff, $08, $09, $0a, $0b, $08, $02, $fd, $fd
0e738     03 07 08 0C 
0e73c     0B 08 05 02 
0e740     FC F8 F8 F5 
0e744     F9 FF 01 03 | 	byte	$03, $07, $08, $0c, $0b, $08, $05, $02, $fc, $f8, $f8, $f5, $f9, $ff, $01, $03
0e748     03 00 02 00 
0e74c     FF FE 01 02 
0e750     00 FE FF 02 
0e754     03 02 03 00 | 	byte	$03, $00, $02, $00, $ff, $fe, $01, $02, $00, $fe, $ff, $02, $03, $02, $03, $00
0e758     FC F8 F2 F5 
0e75c     FF 06 04 03 
0e760     0B 0F 09 00 
0e764     FE FA F7 F6 | 	byte	$fc, $f8, $f2, $f5, $ff, $06, $04, $03, $0b, $0f, $09, $00, $fe, $fa, $f7, $f6
0e768     F8 FF 0C 0D 
0e76c     09 0B 08 07 
0e770     07 06 0B 10 
0e774     11 15 1A 16 | 	byte	$f8, $ff, $0c, $0d, $09, $0b, $08, $07, $07, $06, $0b, $10, $11, $15, $1a, $16
0e778     11 0C 0E 0C 
0e77c     04 00 02 05 
0e780     05 0B 10 09 
0e784     09 0D 0D 08 | 	byte	$11, $0c, $0e, $0c, $04, $00, $02, $05, $05, $0b, $10, $09, $09, $0d, $0d, $08
0e788     04 04 04 01 
0e78c     FE FF 04 05 
0e790     09 06 00 03 
0e794     07 04 FE 04 | 	byte	$04, $04, $04, $01, $fe, $ff, $04, $05, $09, $06, $00, $03, $07, $04, $fe, $04
0e798     0A 08 01 05 
0e79c     09 06 00 F9 
0e7a0     FB FE FF FC 
0e7a4     F8 F7 FD FD | 	byte	$0a, $08, $01, $05, $09, $06, $00, $f9, $fb, $fe, $ff, $fc, $f8, $f7, $fd, $fd
0e7a8     F9 FD 02 00 
0e7ac     FB FA FA FB 
0e7b0     FA F9 FD FD 
0e7b4     FD FF FF FF | 	byte	$f9, $fd, $02, $00, $fb, $fa, $fa, $fb, $fa, $f9, $fd, $fd, $fd, $ff, $ff, $ff
0e7b8     03 04 FC FB 
0e7bc     FE 01 02 00 
0e7c0     FF 03 04 00 
0e7c4     02 07 08 08 | 	byte	$03, $04, $fc, $fb, $fe, $01, $02, $00, $ff, $03, $04, $00, $02, $07, $08, $08
0e7c8     06 00 FE FF 
0e7cc     FF 01 05 0B 
0e7d0     0A 06 04 06 
0e7d4     04 FF FB FE | 	byte	$06, $00, $fe, $ff, $ff, $01, $05, $0b, $0a, $06, $04, $06, $04, $ff, $fb, $fe
0e7d8     01 03 05 08 
0e7dc     08 05 00 FB 
0e7e0     F8 FB FD FF 
0e7e4     01 01 05 05 | 	byte	$01, $03, $05, $08, $08, $05, $00, $fb, $f8, $fb, $fd, $ff, $01, $01, $05, $05
0e7e8     FD F9 FD FF 
0e7ec     FA F2 F7 FF 
0e7f0     FD F9 F9 FB 
0e7f4     03 07 08 09 | 	byte	$fd, $f9, $fd, $ff, $fa, $f2, $f7, $ff, $fd, $f9, $f9, $fb, $03, $07, $08, $09
0e7f8     04 04 01 FC 
0e7fc     F6 FA FD FB 
0e800     FF 00 FE FF 
0e804     FF FA F8 FA | 	byte	$04, $04, $01, $fc, $f6, $fa, $fd, $fb, $ff, $00, $fe, $ff, $ff, $fa, $f8, $fa
0e808     FB FF 02 04 
0e80c     04 07 04 00 
0e810     FC F9 F9 FA 
0e814     FA F8 F7 F8 | 	byte	$fb, $ff, $02, $04, $04, $07, $04, $00, $fc, $f9, $f9, $fa, $fa, $f8, $f7, $f8
0e818     F9 F9 FA FA 
0e81c     FB FC FE FD 
0e820     FD 02 06 04 
0e824     06 04 01 05 | 	byte	$f9, $f9, $fa, $fa, $fb, $fc, $fe, $fd, $fd, $02, $06, $04, $06, $04, $01, $05
0e828     04 FD FE FF 
0e82c     03 08 04 01 
0e830     06 07 02 00 
0e834     FE FF 08 0A | 	byte	$04, $fd, $fe, $ff, $03, $08, $04, $01, $06, $07, $02, $00, $fe, $ff, $08, $0a
0e838     07 07 09 06 
0e83c     00 FE FE 02 
0e840     02 FF 03 04 
0e844     04 00 FB FD | 	byte	$07, $07, $09, $06, $00, $fe, $fe, $02, $02, $ff, $03, $04, $04, $00, $fb, $fd
0e848     03 06 05 04 
0e84c     09 0C 08 05 
0e850     00 FF 03 07 
0e854     07 0A 0C 0C | 	byte	$03, $06, $05, $04, $09, $0c, $08, $05, $00, $ff, $03, $07, $07, $0a, $0c, $0c
0e858     07 05 06 04 
0e85c     05 07 05 07 
0e860     0F 10 08 07 
0e864     06 00 FE FF | 	byte	$07, $05, $06, $04, $05, $07, $05, $07, $0f, $10, $08, $07, $06, $00, $fe, $ff
0e868     FE FE FF 02 
0e86c     07 08 05 04 
0e870     05 00 FC FD 
0e874     FB F9 FD 05 | 	byte	$fe, $fe, $ff, $02, $07, $08, $05, $04, $05, $00, $fc, $fd, $fb, $f9, $fd, $05
0e878     0A 0A 08 0A 
0e87c     04 FC FB FB 
0e880     FB FF 04 08 
0e884     08 06 04 05 | 	byte	$0a, $0a, $08, $0a, $04, $fc, $fb, $fb, $fb, $ff, $04, $08, $08, $06, $04, $05
0e888     03 01 05 07 
0e88c     09 0D 11 0E 
0e890     09 05 03 05 
0e894     04 02 04 06 | 	byte	$03, $01, $05, $07, $09, $0d, $11, $0e, $09, $05, $03, $05, $04, $02, $04, $06
0e898     06 04 06 07 
0e89c     05 03 04 02 
0e8a0     01 04 07 05 
0e8a4     03 05 07 09 | 	byte	$06, $04, $06, $07, $05, $03, $04, $02, $01, $04, $07, $05, $03, $05, $07, $09
0e8a8     0A 09 08 08 
0e8ac     06 08 0A 08 
0e8b0     08 07 07 04 
0e8b4     01 02 04 03 | 	byte	$0a, $09, $08, $08, $06, $08, $0a, $08, $08, $07, $07, $04, $01, $02, $04, $03
0e8b8     04 04 03 01 
0e8bc     00 01 FF FB 
0e8c0     FD 03 04 02 
0e8c4     03 01 00 FF | 	byte	$04, $04, $03, $01, $00, $01, $ff, $fb, $fd, $03, $04, $02, $03, $01, $00, $ff
0e8c8     FC F9 F9 FA 
0e8cc     FB FA FA FB 
0e8d0     FC F9 F6 F5 
0e8d4     F9 FB FC FF | 	byte	$fc, $f9, $f9, $fa, $fb, $fa, $fa, $fb, $fc, $f9, $f6, $f5, $f9, $fb, $fc, $ff
0e8d8     04 06 06 06 
0e8dc     03 01 02 00 
0e8e0     FD FD FF 00 
0e8e4     00 FF FF 00 | 	byte	$04, $06, $06, $06, $03, $01, $02, $00, $fd, $fd, $ff, $00, $00, $ff, $ff, $00
0e8e8     00 00 00 02 
0e8ec     04 04 05 07 
0e8f0     06 03 00 FE 
0e8f4     FC FD FD FE | 	byte	$00, $00, $00, $02, $04, $04, $05, $07, $06, $03, $00, $fe, $fc, $fd, $fd, $fe
0e8f8     00 02 03 03 
0e8fc     03 02 01 00 
0e900     FF FE FF 00 
0e904     FF FF 00 00 | 	byte	$00, $02, $03, $03, $03, $02, $01, $00, $ff, $fe, $ff, $00, $ff, $ff, $00, $00
0e908     FE FE FF FE 
0e90c     FE FE FE FE 
0e910     FE FF FE FF 
0e914     00 01 00 FF | 	byte	$fe, $fe, $ff, $fe, $fe, $fe, $fe, $fe, $fe, $ff, $fe, $ff, $00, $01, $00, $ff
0e918     FB FA F9 F8 
0e91c     F7 F9 FC FD 
0e920     FC FE FE FB 
0e924     F9 F9 F9 F9 | 	byte	$fb, $fa, $f9, $f8, $f7, $f9, $fc, $fd, $fc, $fe, $fe, $fb, $f9, $f9, $f9, $f9
0e928     FB FE 00 01 
0e92c     01 00 FC F8 
0e930     FA F8 F7 F8 
0e934     FC FE FF FF | 	byte	$fb, $fe, $00, $01, $01, $00, $fc, $f8, $fa, $f8, $f7, $f8, $fc, $fe, $ff, $ff
0e938     FE FF FF FE 
0e93c     FF 01 01 01 
0e940     02 01 00 00 
0e944     FF FF FF FE | 	byte	$fe, $ff, $ff, $fe, $ff, $01, $01, $01, $02, $01, $00, $00, $ff, $ff, $ff, $fe
0e948     FF 00 01 04 
0e94c     06 05 04 04 
0e950     04 01 00 01 
0e954     01 01 02 04 | 	byte	$ff, $00, $01, $04, $06, $05, $04, $04, $04, $01, $00, $01, $01, $01, $02, $04
0e958     08 08 06 06 
0e95c     06 02 00 00 
0e960     01 02 05 07 
0e964     06 05 05 04 | 	byte	$08, $08, $06, $06, $06, $02, $00, $00, $01, $02, $05, $07, $06, $05, $05, $04
0e968     00 FE FB FD 
0e96c     FF 00 02 05 
0e970     08 0A 08 06 
0e974     03 03 01 00 | 	byte	$00, $fe, $fb, $fd, $ff, $00, $02, $05, $08, $0a, $08, $06, $03, $03, $01, $00
0e978     00 00 01 02 
0e97c     04 06 03 00 
0e980     00 00 FF FD 
0e984     FD FF 03 05 | 	byte	$00, $00, $01, $02, $04, $06, $03, $00, $00, $00, $ff, $fd, $fd, $ff, $03, $05
0e988     04 04 05 05 
0e98c     01 00 00 00 
0e990     00 00 00 00 
0e994     01 00 00 00 | 	byte	$04, $04, $05, $05, $01, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00
0e998     03 03 00 00 
0e99c     00 00 01 00 
0e9a0     01 04 05 05 
0e9a4     07 06 05 03 | 	byte	$03, $03, $00, $00, $00, $00, $01, $00, $01, $04, $05, $05, $07, $06, $05, $03
0e9a8     03 02 03 06 
0e9ac     07 07 08 08 
0e9b0     06 05 04 03 
0e9b4     05 04 05 06 | 	byte	$03, $02, $03, $06, $07, $07, $08, $08, $06, $05, $04, $03, $05, $04, $05, $06
0e9b8     05 05 06 05 
0e9bc     04 02 01 03 
0e9c0     04 05 04 01 
0e9c4     00 00 00 00 | 	byte	$05, $05, $06, $05, $04, $02, $01, $03, $04, $05, $04, $01, $00, $00, $00, $00
0e9c8     FF 00 00 FF 
0e9cc     FE FF 00 00 
0e9d0     02 01 00 03 
0e9d4     01 00 FF FE | 	byte	$ff, $00, $00, $ff, $fe, $ff, $00, $00, $02, $01, $00, $03, $01, $00, $ff, $fe
0e9d8     FF FF FD FE 
0e9dc     00 00 FE FD 
0e9e0     FE FC FA FB 
0e9e4     FD FF 00 01 | 	byte	$ff, $ff, $fd, $fe, $00, $00, $fe, $fd, $fe, $fc, $fa, $fb, $fd, $ff, $00, $01
0e9e8     00 00 00 00 
0e9ec     00          | 	byte	$00[5]
0e9ed     FF FE FD FD 
0e9f1     FB FC FB FB 
0e9f5     FC FD FD FD 
0e9f9     FF FE FC FE | 	byte	$ff, $fe, $fd, $fd, $fb, $fc, $fb, $fb, $fc, $fd, $fd, $fd, $ff, $fe, $fc, $fe
0e9fd     FE FD FF 00 
0ea01     02 02 00 00 
0ea05     00 00 00 FF 
0ea09     FE FF 00 00 | 	byte	$fe, $fd, $ff, $00, $02, $02, $00, $00, $00, $00, $00, $ff, $fe, $ff, $00, $00
0ea0d     02 04 04 00 
0ea11     00 00 FE FC 
0ea15     FE FF FF FF 
0ea19     00 00 FF FC | 	byte	$02, $04, $04, $00, $00, $00, $fe, $fc, $fe, $ff, $ff, $ff, $00, $00, $ff, $fc
0ea1d     FB FA FA FC 
0ea21     FF 00 00 00 
0ea25     00 00 FF FB 
0ea29     FA FC FC FB | 	byte	$fb, $fa, $fa, $fc, $ff, $00, $00, $00, $00, $00, $ff, $fb, $fa, $fc, $fc, $fb
0ea2d     FD FF FF FE 
0ea31     FE FC FB FB 
0ea35     FC FD FE FF 
0ea39     00 00 00 00 | 	byte	$fd, $ff, $ff, $fe, $fe, $fc, $fb, $fb, $fc, $fd, $fe, $ff, $00, $00, $00, $00
0ea3d     00 00 00 FE 
0ea41     FE FC FC FA 
0ea45     FB FC FD FE 
0ea49     FE FE FF FF | 	byte	$00, $00, $00, $fe, $fe, $fc, $fc, $fa, $fb, $fc, $fd, $fe, $fe, $fe, $ff, $ff
0ea4d     FD FC FD FD 
0ea51     FC FF 00 00 
0ea55     00 00 00 FF 
0ea59     FE FC FD FF | 	byte	$fd, $fc, $fd, $fd, $fc, $ff, $00, $00, $00, $00, $00, $ff, $fe, $fc, $fd, $ff
0ea5d     00 00 00 00 
0ea61     01 01 00 00 
0ea65     00 00 00 06 
0ea69     05 05 05 05 | 	byte	$00, $00, $00, $00, $01, $01, $00, $00, $00, $00, $00, $06, $05, $05, $05, $05
0ea6d     05 05 05 05 
0ea71     05 05 05 05 
0ea75     05 05       | 	byte	$05[10]
0ea77     04 04 04 04 
0ea7b     04 04 04 04 
0ea7f     04          | 	byte	$04[9]
0ea80     03 03 04 04 
0ea84     03 03 03 03 
0ea88     03 03 04 04 
0ea8c     04 04 04 04 | 	byte	$03, $03, $04, $04, $03, $03, $03, $03, $03, $03, $04, $04, $04, $04, $04, $04
0ea90     04 04 04 05 
0ea94     05 05 05 06 
0ea98     05 05 06 06 
0ea9c     07 06 07 07 | 	byte	$04, $04, $04, $05, $05, $05, $05, $06, $05, $05, $06, $06, $07, $06, $07, $07
0eaa0     07 06 07 07 
0eaa4     07 07 08 08 
0eaa8     08 09 09 09 
0eaac     06 F8 E8 DE | 	byte	$07, $06, $07, $07, $07, $07, $08, $08, $08, $09, $09, $09, $06, $f8, $e8, $de
0eab0     EF 0F 2F 46 
0eab4     40 24 F0 C8 
0eab8     C9 DB FF 2F 
0eabc     38 28 00 E0 | 	byte	$ef, $0f, $2f, $46, $40, $24, $f0, $c8, $c9, $db, $ff, $2f, $38, $28, $00, $e0
0eac0     D9 EB 0B 27 
0eac4     31 24 0A F0 
0eac8     E6 E9 F7 0B 
0eacc     13 10 00 F2 | 	byte	$d9, $eb, $0b, $27, $31, $24, $0a, $f0, $e6, $e9, $f7, $0b, $13, $10, $00, $f2
0ead0     E9 E7 EE F7 
0ead4     FD FF FF FE 
0ead8     FD FD FE FF 
0eadc     05 03 00 FA | 	byte	$e9, $e7, $ee, $f7, $fd, $ff, $ff, $fe, $fd, $fd, $fe, $ff, $05, $03, $00, $fa
0eae0     F0 F3 FF 0B 
0eae4     11 0C F8 F0 
0eae8     F7 06 1B 20 
0eaec     08 E9 DE E7 | 	byte	$f0, $f3, $ff, $0b, $11, $0c, $f8, $f0, $f7, $06, $1b, $20, $08, $e9, $de, $e7
0eaf0     0F 37 41 28 
0eaf4     00 E0 DB EF 
0eaf8     17 2F 30 20 
0eafc     00 E8 D8 D9 | 	byte	$0f, $37, $41, $28, $00, $e0, $db, $ef, $17, $2f, $30, $20, $00, $e8, $d8, $d9
0eb00     E7 FF 15 10 
0eb04     00 E0 D0 D1 
0eb08     DF FB 0F 12 
0eb0c     0B 00 F2 E4 | 	byte	$e7, $ff, $15, $10, $00, $e0, $d0, $d1, $df, $fb, $0f, $12, $0b, $00, $f2, $e4
0eb10     D5 D9 E7 FF 
0eb14     1F 33 38 2A 
0eb18     18 0F 13 1E 
0eb1c     2B 30 28 18 | 	byte	$d5, $d9, $e7, $ff, $1f, $33, $38, $2a, $18, $0f, $13, $1e, $2b, $30, $28, $18
0eb20     04 F6 F2 F0 
0eb24     EE EC E8 DC 
0eb28     D1 D1 D7 E3 
0eb2c     EB EC EA E6 | 	byte	$04, $f6, $f2, $f0, $ee, $ec, $e8, $dc, $d1, $d1, $d7, $e3, $eb, $ec, $ea, $e6
0eb30     E7 EF FE 0D 
0eb34     15 16 0C 00 
0eb38     FC FF 0D 17 
0eb3c     1C 16 0C 03 | 	byte	$e7, $ef, $fe, $0d, $15, $16, $0c, $00, $fc, $ff, $0d, $17, $1c, $16, $0c, $03
0eb40     FD FD 05 0D 
0eb44     0F 0E 08 01 
0eb48     FC FB FD 03 
0eb4c     06 07 04 FE | 	byte	$fd, $fd, $05, $0d, $0f, $0e, $08, $01, $fc, $fb, $fd, $03, $06, $07, $04, $fe
0eb50     F6 F3 F6 FB 
0eb54     FF 04 06 02 
0eb58     FF FD FF 05 
0eb5c     0A 0C 0B 09 | 	byte	$f6, $f3, $f6, $fb, $ff, $04, $06, $02, $ff, $fd, $ff, $05, $0a, $0c, $0b, $09
0eb60     06 02 02 03 
0eb64     05 07 06 04 
0eb68     01 FF FE FF 
0eb6c     01 02 02 00 | 	byte	$06, $02, $02, $03, $05, $07, $06, $04, $01, $ff, $fe, $ff, $01, $02, $02, $00
0eb70     FE FB FB FC 
0eb74     FF FF FF FF 
0eb78     FF 01 03 05 
0eb7c     07 08 08 03 | 	byte	$fe, $fb, $fb, $fc, $ff, $ff, $ff, $ff, $ff, $01, $03, $05, $07, $08, $08, $03
0eb80     00 FF FF 04 
0eb84     0B 0F 12 12 
0eb88     0C 05 01 01 
0eb8c     04 09 0D 0D | 	byte	$00, $ff, $ff, $04, $0b, $0f, $12, $12, $0c, $05, $01, $01, $04, $09, $0d, $0d
0eb90     0A 04 FE FD 
0eb94     FF 07 0D 0F 
0eb98     0C 06 00 FC 
0eb9c     FD 03 09 0D | 	byte	$0a, $04, $fe, $fd, $ff, $07, $0d, $0f, $0c, $06, $00, $fc, $fd, $03, $09, $0d
0eba0     0C 08 01 FC 
0eba4     F9 FB FF 02 
0eba8     02 00 FC F6 
0ebac     F7 FA FF 05 | 	byte	$0c, $08, $01, $fc, $f9, $fb, $ff, $02, $02, $00, $fc, $f6, $f7, $fa, $ff, $05
0ebb0     08 08 07 05 
0ebb4     06 0A 0F 13 
0ebb8     15 13 10 0A 
0ebbc     05 03 05 08 | 	byte	$08, $08, $07, $05, $06, $0a, $0f, $13, $15, $13, $10, $0a, $05, $03, $05, $08
0ebc0     08 04 00 FA 
0ebc4     F6 F5 F7 FC 
0ebc8     FF 01 01 00 
0ebcc     01 02 05 09 | 	byte	$08, $04, $00, $fa, $f6, $f5, $f7, $fc, $ff, $01, $01, $00, $01, $02, $05, $09
0ebd0     0B 0B 0C 0D 
0ebd4     0D 0C 0A 0A 
0ebd8     09 06 03 02 
0ebdc     02 02 04 02 | 	byte	$0b, $0b, $0c, $0d, $0d, $0c, $0a, $0a, $09, $06, $03, $02, $02, $02, $04, $02
0ebe0     FF FB F8 F9 
0ebe4     FC FF 02 05 
0ebe8     05 04 02 FF 
0ebec     FF 02 06 08 | 	byte	$ff, $fb, $f8, $f9, $fc, $ff, $02, $05, $05, $04, $02, $ff, $ff, $02, $06, $08
0ebf0     0A 08 03 00 
0ebf4     FE FC FE FF 
0ebf8     03 04 FD F8 
0ebfc     F4 F1 F5 FA | 	byte	$0a, $08, $03, $00, $fe, $fc, $fe, $ff, $03, $04, $fd, $f8, $f4, $f1, $f5, $fa
0ec00     FE 01 01 FF 
0ec04     FB FB FB FD 
0ec08     03 08 0A 08 
0ec0c     02 FF FD FF | 	byte	$fe, $01, $01, $ff, $fb, $fb, $fb, $fd, $03, $08, $0a, $08, $02, $ff, $fd, $ff
0ec10     03 07 06 02 
0ec14     FC F6 F5 F7 
0ec18     FF 05 0B 0C 
0ec1c     05 FE F6 F6 | 	byte	$03, $07, $06, $02, $fc, $f6, $f5, $f7, $ff, $05, $0b, $0c, $05, $fe, $f6, $f6
0ec20     FF 07 0D 0F 
0ec24     09 00 FA F9 
0ec28     FD 04 09 09 
0ec2c     08 03 FC FA | 	byte	$ff, $07, $0d, $0f, $09, $00, $fa, $f9, $fd, $04, $09, $09, $08, $03, $fc, $fa
0ec30     FB FF 03 09 
0ec34     09 05 04 00 
0ec38     01 06 0B 0D 
0ec3c     09 05 00 FF | 	byte	$fb, $ff, $03, $09, $09, $05, $04, $00, $01, $06, $0b, $0d, $09, $05, $00, $ff
0ec40     FF FE FD FB 
0ec44     F8 F6 F5 F5 
0ec48     F4 F6 F6 F9 
0ec4c     FD FD FB F8 | 	byte	$ff, $fe, $fd, $fb, $f8, $f6, $f5, $f5, $f4, $f6, $f6, $f9, $fd, $fd, $fb, $f8
0ec50     F7 F8 FB FF 
0ec54     02 04 04 05 
0ec58     06 07 08 06 
0ec5c     05 04 02 03 | 	byte	$f7, $f8, $fb, $ff, $02, $04, $04, $05, $06, $07, $08, $06, $05, $04, $02, $03
0ec60     02 00 FC F6 
0ec64     F3 F5 F8 FB 
0ec68     FE FF 00 02 
0ec6c     03 04 03 02 | 	byte	$02, $00, $fc, $f6, $f3, $f5, $f8, $fb, $fe, $ff, $00, $02, $03, $04, $03, $02
0ec70     05 09 0F 11 
0ec74     0E 08 02 01 
0ec78     05 09 0C 0A 
0ec7c     04 FE F9 F9 | 	byte	$05, $09, $0f, $11, $0e, $08, $02, $01, $05, $09, $0c, $0a, $04, $fe, $f9, $f9
0ec80     FB FC FE FF 
0ec84     03 05 08 06 
0ec88     03 06 0B 11 
0ec8c     13 10 0C 06 | 	byte	$fb, $fc, $fe, $ff, $03, $05, $08, $06, $03, $06, $0b, $11, $13, $10, $0c, $06
0ec90     07 07 08 09 
0ec94     06 05 04 03 
0ec98     01 FE FD FF 
0ec9c     03 09 0A 08 | 	byte	$07, $07, $08, $09, $06, $05, $04, $03, $01, $fe, $fd, $ff, $03, $09, $0a, $08
0eca0     02 FC FA FE 
0eca4     04 08 08 04 
0eca8     FF FE 03 06 
0ecac     04 02 00 FF | 	byte	$02, $fc, $fa, $fe, $04, $08, $08, $04, $ff, $fe, $03, $06, $04, $02, $00, $ff
0ecb0     01 01 FF FC 
0ecb4     FC FF 06 0A 
0ecb8     0B 08 04 FD 
0ecbc     FD FF 05 0A | 	byte	$01, $01, $ff, $fc, $fc, $ff, $06, $0a, $0b, $08, $04, $fd, $fd, $ff, $05, $0a
0ecc0     0D 0F 10 0E 
0ecc4     0B 06 04 05 
0ecc8     09 0F 11 14 
0eccc     16 1E 28 29 | 	byte	$0d, $0f, $10, $0e, $0b, $06, $04, $05, $09, $0f, $11, $14, $16, $1e, $28, $29
0ecd0     20 08 E4 CA 
0ecd4     C6 CD D7 DC 
0ecd8     D9 D4 D5 DF 
0ecdc     F3 07 1B 33 | 	byte	$20, $08, $e4, $ca, $c6, $cd, $d7, $dc, $d9, $d4, $d5, $df, $f3, $07, $1b, $33
0ece0     45 4F 51 45 
0ece4     38 2C 2B 33 
0ece8     36 30 20 10 
0ecec     00 F9 FA FE | 	byte	$45, $4f, $51, $45, $38, $2c, $2b, $33, $36, $30, $20, $10, $00, $f9, $fa, $fe
0ecf0     FF 01 04 03 
0ecf4     FE F5 EC E8 
0ecf8     EB F3 FE 00 
0ecfc     FC F2 E8 E4 | 	byte	$ff, $01, $04, $03, $fe, $f5, $ec, $e8, $eb, $f3, $fe, $00, $fc, $f2, $e8, $e4
0ed00     E4 E6 E7 E6 
0ed04     E3 E0 D9 D3 
0ed08     CD CC D3 DF 
0ed0c     EF F8 FA F6 | 	byte	$e4, $e6, $e7, $e6, $e3, $e0, $d9, $d3, $cd, $cc, $d3, $df, $ef, $f8, $fa, $f6
0ed10     F2 F5 FB FE 
0ed14     01 00 FD FB 
0ed18     F9 FB FA FB 
0ed1c     FF 0B 15 1B | 	byte	$f2, $f5, $fb, $fe, $01, $00, $fd, $fb, $f9, $fb, $fa, $fb, $ff, $0b, $15, $1b
0ed20     19 12 0A 0B 
0ed24     13 1F 26 26 
0ed28     25 2B 37 55 
0ed2c     6F 70 50 10 | 	byte	$19, $12, $0a, $0b, $13, $1f, $26, $26, $25, $2b, $37, $55, $6f, $70, $50, $10
0ed30     C8 98 80 8F 
0ed34     AF C7 D3 D7 
0ed38     D6 DD F3 0F 
0ed3c     33 5F 7F 7F | 	byte	$c8, $98, $80, $8f, $af, $c7, $d3, $d7, $d6, $dd, $f3, $0f, $33, $5f, $7f, $7f
0ed40     7F 7C 58 34 
0ed44     29 32 37 34 
0ed48     28 10 F0 D0 
0ed4c     C2 BB C3 DD | 	byte	$7f, $7c, $58, $34, $29, $32, $37, $34, $28, $10, $f0, $d0, $c2, $bb, $c3, $dd
0ed50     F7 05 0A 00 
0ed54     E8 D4 D2 DF 
0ed58     EF FD FE F0 
0ed5c     D8 C8 B8 AE | 	byte	$f7, $05, $0a, $00, $e8, $d4, $d2, $df, $ef, $fd, $fe, $f0, $d8, $c8, $b8, $ae
0ed60     AF B7 C3 CB 
0ed64     D0 D0 C6 C0 
0ed68     C5 CF DF F3 
0ed6c     FE FF FD FB | 	byte	$af, $b7, $c3, $cb, $d0, $d0, $c6, $c0, $c5, $cf, $df, $f3, $fe, $ff, $fd, $fb
0ed70     F9 F8 FA FF 
0ed74     06 0B 0E 09 
0ed78     00 F9 F4 F7 
0ed7c     FF 07 0D 13 | 	byte	$f9, $f8, $fa, $ff, $06, $0b, $0e, $09, $00, $f9, $f4, $f7, $ff, $07, $0d, $13
0ed80     16 19 1D 21 
0ed84     27 2B 2E 30 
0ed88     2D 2C 29 29 
0ed8c     2D 32 3F 4F | 	byte	$16, $19, $1d, $21, $27, $2b, $2e, $30, $2d, $2c, $29, $29, $2d, $32, $3f, $4f
0ed90     67 70 58 20 
0ed94     E0 A0 80 82 
0ed98     9B BB CF E7 
0ed9c     FB 0B 1F 35 | 	byte	$67, $70, $58, $20, $e0, $a0, $80, $82, $9b, $bb, $cf, $e7, $fb, $0b, $1f, $35
0eda0     47 57 77 7F 
0eda4     7F 7C 60 40 
0eda8     14 05 02 01 
0edac     01 02 FD F5 | 	byte	$47, $57, $77, $7f, $7f, $7c, $60, $40, $14, $05, $02, $01, $01, $02, $fd, $f5
0edb0     F2 EA E1 E3 
0edb4     F3 05 11 14 
0edb8     0A FA EC E9 
0edbc     E7 E5 E5 E3 | 	byte	$f2, $ea, $e1, $e3, $f3, $05, $11, $14, $0a, $fa, $ec, $e9, $e7, $e5, $e5, $e3
0edc0     E0 D9 D2 C8 
0edc4     B8 B0 B1 B7 
0edc8     BF CD D5 D8 
0edcc     DB E3 EB EF | 	byte	$e0, $d9, $d2, $c8, $b8, $b0, $b1, $b7, $bf, $cd, $d5, $d8, $db, $e3, $eb, $ef
0edd0     F3 F5 F5 F4 
0edd4     F5 F4 F0 EF 
0edd8     EF F4 FB 03 
0eddc     09 0C 0F 11 | 	byte	$f3, $f5, $f5, $f4, $f5, $f4, $f0, $ef, $ef, $f4, $fb, $03, $09, $0c, $0f, $11
0ede0     16 18 1A 1B 
0ede4     1C 20 23 25 
0ede8     25 20 1C 18 
0edec     14 16 1D 23 | 	byte	$16, $18, $1a, $1b, $1c, $20, $23, $25, $25, $20, $1c, $18, $14, $16, $1d, $23
0edf0     29 2B 31 36 
0edf4     3D 4F 67 74 
0edf8     60 28 F0 B0 
0edfc     90 8B 9F BF | 	byte	$29, $2b, $31, $36, $3d, $4f, $67, $74, $60, $28, $f0, $b0, $90, $8b, $9f, $bf
0ee00     D7 FB 1F 3B 
0ee04     49 49 40 3D 
0ee08     4D 5E 60 54 
0ee0c     40 24 0C 02 | 	byte	$d7, $fb, $1f, $3b, $49, $49, $40, $3d, $4d, $5e, $60, $54, $40, $24, $0c, $02
0ee10     FD F6 F3 F9 
0ee14     FF 07 0A 00 
0ee18     F1 E5 E5 ED 
0ee1c     F4 F9 F8 F4 | 	byte	$fd, $f6, $f3, $f9, $ff, $07, $0a, $00, $f1, $e5, $e5, $ed, $f4, $f9, $f8, $f4
0ee20     F2 F2 F2 EE 
0ee24     E6 E1 E0 DA 
0ee28     D4 C9 B8 AC 
0ee2c     A8 AD B5 BE | 	byte	$f2, $f2, $f2, $ee, $e6, $e1, $e0, $da, $d4, $c9, $b8, $ac, $a8, $ad, $b5, $be
0ee30     C7 CF D9 E2 
0ee34     EB EF F0 F1 
0ee38     F1 F1 F2 F5 
0ee3c     F9 FD 01 07 | 	byte	$c7, $cf, $d9, $e2, $eb, $ef, $f0, $f1, $f1, $f1, $f2, $f5, $f9, $fd, $01, $07
0ee40     0A 0C 09 06 
0ee44     02 02 03 05 
0ee48     0B 0E 12 15 
0ee4c     1A 1D 21 25 | 	byte	$0a, $0c, $09, $06, $02, $02, $03, $05, $0b, $0e, $12, $15, $1a, $1d, $21, $25
0ee50     29 2A 29 25 
0ee54     1C 12 0E 13 
0ee58     1F 35 57 73 
0ee5c     76 50 20 D8 | 	byte	$29, $2a, $29, $25, $1c, $12, $0e, $13, $1f, $35, $57, $73, $76, $50, $20, $d8
0ee60     A0 80 83 9B 
0ee64     BF EB 17 3F 
0ee68     5E 5C 4C 38 
0ee6c     33 3F 4D 50 | 	byte	$a0, $80, $83, $9b, $bf, $eb, $17, $3f, $5e, $5c, $4c, $38, $33, $3f, $4d, $50
0ee70     48 34 1A 08 
0ee74     FA EA E2 E3 
0ee78     EF FF 0F 14 
0ee7c     0C 00 F4 EC | 	byte	$48, $34, $1a, $08, $fa, $ea, $e2, $e3, $ef, $ff, $0f, $14, $0c, $00, $f4, $ec
0ee80     EA EB EF F2 
0ee84     F7 FB FD F8 
0ee88     EA E0 D1 C6 
0ee8c     C0 B8 B0 AA | 	byte	$ea, $eb, $ef, $f2, $f7, $fb, $fd, $f8, $ea, $e0, $d1, $c6, $c0, $b8, $b0, $aa
0ee90     A9 AC B3 BB 
0ee94     C3 CD D7 E5 
0ee98     EF F6 F8 F6 
0ee9c     F2 EE EC ED | 	byte	$a9, $ac, $b3, $bb, $c3, $cd, $d7, $e5, $ef, $f6, $f8, $f6, $f2, $ee, $ec, $ed
0eea0     F1 F5 FD 03 
0eea4     08 08 05 01 
0eea8     FC FC FF 04 
0eeac     0C 10 16 1F | 	byte	$f1, $f5, $fd, $03, $08, $08, $05, $01, $fc, $fc, $ff, $04, $0c, $10, $16, $1f
0eeb0     25 2B 33 35 
0eeb4     35 36 32 2D 
0eeb8     2C 24 1C 1E 
0eebc     27 3F 5F 73 | 	byte	$25, $2b, $33, $35, $35, $36, $32, $2d, $2c, $24, $1c, $1e, $27, $3f, $5f, $73
0eec0     68 40 00 C0 
0eec4     94 84 8F A7 
0eec8     CB F7 2F 57 
0eecc     66 58 44 32 | 	byte	$68, $40, $00, $c0, $94, $84, $8f, $a7, $cb, $f7, $2f, $57, $66, $58, $44, $32
0eed0     2F 39 3F 40 
0eed4     3C 34 28 18 
0eed8     08 F8 F1 F5 
0eedc     FF 12 1D 20 | 	byte	$2f, $39, $3f, $40, $3c, $34, $28, $18, $08, $f8, $f1, $f5, $ff, $12, $1d, $20
0eee0     18 0D 02 F5 
0eee4     EC E6 E9 EF 
0eee8     F6 FC FE F8 
0eeec     F0 E4 D8 CC | 	byte	$18, $0d, $02, $f5, $ec, $e6, $e9, $ef, $f6, $fc, $fe, $f8, $f0, $e4, $d8, $cc
0eef0     C5 C0 C0 BE 
0eef4     C1 C5 CA D2 
0eef8     DA E1 E7 EF 
0eefc     F4 F5 F4 EE | 	byte	$c5, $c0, $c0, $be, $c1, $c5, $ca, $d2, $da, $e1, $e7, $ef, $f4, $f5, $f4, $ee
0ef00     E6 E0 DF E3 
0ef04     EB F7 FF 0A 
0ef08     10 10 0A 03 
0ef0c     FF FF 03 0B | 	byte	$e6, $e0, $df, $e3, $eb, $f7, $ff, $0a, $10, $10, $0a, $03, $ff, $ff, $03, $0b
0ef10     13 1A 20 25 
0ef14     2B 2F 30 2E 
0ef18     2C 28 24 21 
0ef1c     1A 15 15 17 | 	byte	$13, $1a, $20, $25, $2b, $2f, $30, $2e, $2c, $28, $24, $21, $1a, $15, $15, $17
0ef20     25 3D 5B 69 
0ef24     58 30 00 C0 
0ef28     98 8C 97 AF 
0ef2c     CF FF 2F 4F | 	byte	$25, $3d, $5b, $69, $58, $30, $00, $c0, $98, $8c, $97, $af, $cf, $ff, $2f, $4f
0ef30     58 48 35 28 
0ef34     2B 33 3B 3E 
0ef38     3B 36 2A 1A 
0ef3c     08 FA F3 F7 | 	byte	$58, $48, $35, $28, $2b, $33, $3b, $3e, $3b, $36, $2a, $1a, $08, $fa, $f3, $f7
0ef40     FF 07 0F 12 
0ef44     0C 04 F6 E8 
0ef48     E0 DF E7 F1 
0ef4c     FD 05 08 08 | 	byte	$ff, $07, $0f, $12, $0c, $04, $f6, $e8, $e0, $df, $e7, $f1, $fd, $05, $08, $08
0ef50     00 F0 E0 CC 
0ef54     C0 B4 AE AC 
0ef58     AF B5 BD C7 
0ef5c     CF D7 DF E5 | 	byte	$00, $f0, $e0, $cc, $c0, $b4, $ae, $ac, $af, $b5, $bd, $c7, $cf, $d7, $df, $e5
0ef60     EB EC EA E5 
0ef64     E0 DE DE E5 
0ef68     EF FB 07 11 
0ef6c     14 10 0A 00 | 	byte	$eb, $ec, $ea, $e5, $e0, $de, $de, $e5, $ef, $fb, $07, $11, $14, $10, $0a, $00
0ef70     FB FA FE 07 
0ef74     11 1B 21 25 
0ef78     24 21 20 20 
0ef7c     1D 1C 19 18 | 	byte	$fb, $fa, $fe, $07, $11, $1b, $21, $25, $24, $21, $20, $20, $1d, $1c, $19, $18
0ef80     18 16 19 23 
0ef84     33 4F 67 60 
0ef88     30 00 C0 8C 
0ef8c     80 83 9B BF | 	byte	$18, $16, $19, $23, $33, $4f, $67, $60, $30, $00, $c0, $8c, $80, $83, $9b, $bf
0ef90     EF 1F 47 55 
0ef94     4C 40 35 36 
0ef98     3B 41 45 44 
0ef9c     40 34 20 10 | 	byte	$ef, $1f, $47, $55, $4c, $40, $35, $36, $3b, $41, $45, $44, $40, $34, $20, $10
0efa0     00 F8 F6 FB 
0efa4     FF 06 0C 0C 
0efa8     03 F6 E8 E3 
0efac     E3 ED F9 03 | 	byte	$00, $f8, $f6, $fb, $ff, $06, $0c, $0c, $03, $f6, $e8, $e3, $e3, $ed, $f9, $03
0efb0     0D 13 10 08 
0efb4     FA E8 D8 C8 
0efb8     BA B0 A8 A5 
0efbc     AB B5 BF CB | 	byte	$0d, $13, $10, $08, $fa, $e8, $d8, $c8, $ba, $b0, $a8, $a5, $ab, $b5, $bf, $cb
0efc0     D7 E7 F3 FB 
0efc4     FE FC F6 F1 
0efc8     EC E8 E7 EB 
0efcc     F3 FF 07 0E | 	byte	$d7, $e7, $f3, $fb, $fe, $fc, $f6, $f1, $ec, $e8, $e7, $eb, $f3, $ff, $07, $0e
0efd0     0D 09 04 FD 
0efd4     F9 FB FF 09 
0efd8     15 1C 20 23 
0efdc     25 27 27 24 | 	byte	$0d, $09, $04, $fd, $f9, $fb, $ff, $09, $15, $1c, $20, $23, $25, $27, $27, $24
0efe0     20 1C 18 18 
0efe4     19 1A 1F 2D 
0efe8     45 5F 62 40 
0efec     10 D0 A0 88 | 	byte	$20, $1c, $18, $18, $19, $1a, $1f, $2d, $45, $5f, $62, $40, $10, $d0, $a0, $88
0eff0     8B 9F BF E7 
0eff4     0F 3F 51 50 
0eff8     44 3D 3D 45 
0effc     4D 54 55 4E | 	byte	$8b, $9f, $bf, $e7, $0f, $3f, $51, $50, $44, $3d, $3d, $45, $4d, $54, $55, $4e
0f000     40 2C 18 0C 
0f004     06 06 09 0F 
0f008     12 12 10 08 
0f00c     FC F1 EE EF | 	byte	$40, $2c, $18, $0c, $06, $06, $09, $0f, $12, $12, $10, $08, $fc, $f1, $ee, $ef
0f010     F5 FF 07 0F 
0f014     15 14 0C 00 
0f018     F0 E2 D8 CC 
0f01c     C0 B2 A8 A5 | 	byte	$f5, $ff, $07, $0f, $15, $14, $0c, $00, $f0, $e2, $d8, $cc, $c0, $b2, $a8, $a5
0f020     A7 AE B9 C9 
0f024     DB ED FB 02 
0f028     05 01 FA F4 
0f02c     ED EA EB EF | 	byte	$a7, $ae, $b9, $c9, $db, $ed, $fb, $02, $05, $01, $fa, $f4, $ed, $ea, $eb, $ef
0f030     F5 FB FF 03 
0f034     05 05 03 02 
0f038     02 06 0B 11 
0f03c     17 1B 1E 21 | 	byte	$f5, $fb, $ff, $03, $05, $05, $03, $02, $02, $06, $0b, $11, $17, $1b, $1e, $21
0f040     22 21 20 1D 
0f044     1C 1D 1C 1B 
0f048     19 15 19 27 
0f04c     3B 53 52 30 | 	byte	$22, $21, $20, $1d, $1c, $1d, $1c, $1b, $19, $15, $19, $27, $3b, $53, $52, $30
0f050     08 D8 AC 9A 
0f054     9B AB BF DF 
0f058     FF 1F 31 32 
0f05c     2C 2B 2F 37 | 	byte	$08, $d8, $ac, $9a, $9b, $ab, $bf, $df, $ff, $1f, $31, $32, $2c, $2b, $2f, $37
0f060     42 4B 4C 46 
0f064     38 28 18 0E 
0f068     0B 0C 0C 13 
0f06c     14 12 0C 04 | 	byte	$42, $4b, $4c, $46, $38, $28, $18, $0e, $0b, $0c, $0c, $13, $14, $12, $0c, $04
0f070     F8 EE EF F2 
0f074     F7 FF 06 0C 
0f078     0E 0B 01 F6 
0f07c     EA E1 D9 D0 | 	byte	$f8, $ee, $ef, $f2, $f7, $ff, $06, $0c, $0e, $0b, $01, $f6, $ea, $e1, $d9, $d0
0f080     C6 BC B4 AC 
0f084     A8 A9 AF BF 
0f088     CF E3 F1 FB 
0f08c     FD FB F6 F0 | 	byte	$c6, $bc, $b4, $ac, $a8, $a9, $af, $bf, $cf, $e3, $f1, $fb, $fd, $fb, $f6, $f0
0f090     EA E8 EA EF 
0f094     F3 F7 F8 F9 
0f098     FA FA FB FC 
0f09c     FF 02 06 09 | 	byte	$ea, $e8, $ea, $ef, $f3, $f7, $f8, $f9, $fa, $fa, $fb, $fc, $ff, $02, $06, $09
0f0a0     0C 0F 13 18 
0f0a4     19 1A 19 18 
0f0a8     17 16 17 16 
0f0ac     17 1B 23 33 | 	byte	$0c, $0f, $13, $18, $19, $1a, $19, $18, $17, $16, $17, $16, $17, $1b, $23, $33
0f0b0     45 46 28 00 
0f0b4     D0 A8 95 99 
0f0b8     A7 BF DB F7 
0f0bc     13 1D 21 27 | 	byte	$45, $46, $28, $00, $d0, $a8, $95, $99, $a7, $bf, $db, $f7, $13, $1d, $21, $27
0f0c0     2F 3F 4D 5A 
0f0c4     62 60 54 44 
0f0c8     30 22 1D 1D 
0f0cc     1D 1B 1A 16 | 	byte	$2f, $3f, $4d, $5a, $62, $60, $54, $44, $30, $22, $1d, $1d, $1d, $1b, $1a, $16
0f0d0     10 04 FA F3 
0f0d4     F5 FD 04 09 
0f0d8     0B 0D 0F 10 
0f0dc     0C 04 FA F2 | 	byte	$10, $04, $fa, $f3, $f5, $fd, $04, $09, $0b, $0d, $0f, $10, $0c, $04, $fa, $f2
0f0e0     E8 DA CC BC 
0f0e4     AC A0 98 97 
0f0e8     9E AD BF CF 
0f0ec     DF ED F5 F8 | 	byte	$e8, $da, $cc, $bc, $ac, $a0, $98, $97, $9e, $ad, $bf, $cf, $df, $ed, $f5, $f8
0f0f0     F5 F1 EE EC 
0f0f4     ED EE F1 F5 
0f0f8     FB FF 03 06 
0f0fc     08 09 0A 0C | 	byte	$f5, $f1, $ee, $ec, $ed, $ee, $f1, $f5, $fb, $ff, $03, $06, $08, $09, $0a, $0c
0f100     0C 0F 12 15 
0f104     19 1E 22 26 
0f108     28 28 26 25 
0f10c     24 21 21 23 | 	byte	$0c, $0f, $12, $15, $19, $1e, $22, $26, $28, $28, $26, $25, $24, $21, $21, $23
0f110     2A 39 4F 5A 
0f114     48 20 E4 B0 
0f118     94 91 9D B5 
0f11c     CF EB FF 11 | 	byte	$2a, $39, $4f, $5a, $48, $20, $e4, $b0, $94, $91, $9d, $b5, $cf, $eb, $ff, $11
0f120     15 1F 2F 47 
0f124     5D 6D 78 78 
0f128     6C 58 44 37 
0f12c     34 34 30 29 | 	byte	$15, $1f, $2f, $47, $5d, $6d, $78, $78, $6c, $58, $44, $37, $34, $34, $30, $29
0f130     20 18 0C 00 
0f134     F2 ED F3 FF 
0f138     0D 11 11 12 
0f13c     12 12 10 0A | 	byte	$20, $18, $0c, $00, $f2, $ed, $f3, $ff, $0d, $11, $11, $12, $12, $12, $10, $0a
0f140     04 FD F2 E6 
0f144     D4 C0 B0 A0 
0f148     90 89 8C 96 
0f14c     A5 B5 C5 D3 | 	byte	$04, $fd, $f2, $e6, $d4, $c0, $b0, $a0, $90, $89, $8c, $96, $a5, $b5, $c5, $d3
0f150     DF EB F0 F1 
0f154     F0 F1 F2 F1 
0f158     EF EE F1 F7 
0f15c     FF 04 07 09 | 	byte	$df, $eb, $f0, $f1, $f0, $f1, $f2, $f1, $ef, $ee, $f1, $f7, $ff, $04, $07, $09
0f160     09 09 08 08 
0f164     09 0B 10 15 
0f168     1A 1E 22 25 
0f16c     26 24 20 1E | 	byte	$09, $09, $08, $08, $09, $0b, $10, $15, $1a, $1e, $22, $25, $26, $24, $20, $1e
0f170     1C 1E 23 2F 
0f174     3F 5B 60 40 
0f178     08 D0 AA 95 
0f17c     99 A5 B7 D3 | 	byte	$1c, $1e, $23, $2f, $3f, $5b, $60, $40, $08, $d0, $aa, $95, $99, $a5, $b7, $d3
0f180     E3 EF F9 FE 
0f184     0D 27 3F 5B 
0f188     6B 75 76 6C 
0f18c     5A 4B 44 41 | 	byte	$e3, $ef, $f9, $fe, $0d, $27, $3f, $5b, $6b, $75, $76, $6c, $5a, $4b, $44, $41
0f190     3C 32 24 18 
0f194     0E 00 F2 E8 
0f198     E7 EF FD 04 
0f19c     05 02 01 02 | 	byte	$3c, $32, $24, $18, $0e, $00, $f2, $e8, $e7, $ef, $fd, $04, $05, $02, $01, $02
0f1a0     02 00 FF FE 
0f1a4     FC F6 EA DC 
0f1a8     CC C0 B0 A0 
0f1ac     90 8C 91 99 | 	byte	$02, $00, $ff, $fe, $fc, $f6, $ea, $dc, $cc, $c0, $b0, $a0, $90, $8c, $91, $99
0f1b0     A1 AB BB CB 
0f1b4     DB E5 E9 ED 
0f1b8     EF F3 F3 F2 
0f1bc     F3 F7 FD 03 | 	byte	$a1, $ab, $bb, $cb, $db, $e5, $e9, $ed, $ef, $f3, $f3, $f2, $f3, $f7, $fd, $03
0f1c0     07 0A 0A 0A 
0f1c4     08 06 05 06 
0f1c8     08 09 0B 0E 
0f1cc     12 16 18 19 | 	byte	$07, $0a, $0a, $0a, $08, $06, $05, $06, $08, $09, $0b, $0e, $12, $16, $18, $19
0f1d0     18 18 19 19 
0f1d4     19 1B 21 2F 
0f1d8     3F 53 54 40 
0f1dc     14 F2 E0 D4 | 	byte	$18, $18, $19, $19, $19, $1b, $21, $2f, $3f, $53, $54, $40, $14, $f2, $e0, $d4
0f1e0     D1 CF D1 D7 
0f1e4     DD E4 E9 EF 
0f1e8     FB 0B 1E 2F 
0f1ec     3D 4B 55 59 | 	byte	$d1, $cf, $d1, $d7, $dd, $e4, $e9, $ef, $fb, $0b, $1e, $2f, $3d, $4b, $55, $59
0f1f0     5A 55 51 4C 
0f1f4     44 3A 30 26 
0f1f8     1B 10 08 01 
0f1fc     FE FF 00 00 | 	byte	$5a, $55, $51, $4c, $44, $3a, $30, $26, $1b, $10, $08, $01, $fe, $ff, $00, $00
0f200     FA F2 ED EA 
0f204     E8 E5 E4 E5 
0f208     E6 E7 E6 E4 
0f20c     E3 E0 DC D5 | 	byte	$fa, $f2, $ed, $ea, $e8, $e5, $e4, $e5, $e6, $e7, $e6, $e4, $e3, $e0, $dc, $d5
0f210     D0 CA C8 C8 
0f214     C9 CC D1 D7 
0f218     DD E0 E2 E3 
0f21c     E5 E6 E9 ED | 	byte	$d0, $ca, $c8, $c8, $c9, $cc, $d1, $d7, $dd, $e0, $e2, $e3, $e5, $e6, $e9, $ed
0f220     F2 F7 FB FF 
0f224     05 08 09 0A 
0f228     0B 0C 0D 0E 
0f22c     0E 0E 0E 0D | 	byte	$f2, $f7, $fb, $ff, $05, $08, $09, $0a, $0b, $0c, $0d, $0e, $0e, $0e, $0e, $0d
0f230     0E 0E 0E 0F 
0f234     0F 11 12 13 
0f238     15 16 1A 20 
0f23c     29 33 3B 38 | 	byte	$0e, $0e, $0e, $0f, $0f, $11, $12, $13, $15, $16, $1a, $20, $29, $33, $3b, $38
0f240     30 2A 26 26 
0f244     22 18 10 08 
0f248     05 02 FC F4 
0f24c     F0 F0 F2 F3 | 	byte	$30, $2a, $26, $26, $22, $18, $10, $08, $05, $02, $fc, $f4, $f0, $f0, $f2, $f3
0f250     F6 FD 05 0B 
0f254     13 17 1C 21 
0f258     23 24 22 23 
0f25c     28 2B 2D 2C | 	byte	$f6, $fd, $05, $0b, $13, $17, $1c, $21, $23, $24, $22, $23, $28, $2b, $2d, $2c
0f260     2C 2E 2D 28 
0f264     20 19 12 0E 
0f268     08 01 FC F6 
0f26c     F0 ED E9 E4 | 	byte	$2c, $2e, $2d, $28, $20, $19, $12, $0e, $08, $01, $fc, $f6, $f0, $ed, $e9, $e4
0f270     E0 D8 D0 C8 
0f274     C2 BD BA BA 
0f278     BD C1 C7 CD 
0f27c     D0 D1 D0 CE | 	byte	$e0, $d8, $d0, $c8, $c2, $bd, $ba, $ba, $bd, $c1, $c7, $cd, $d0, $d1, $d0, $ce
0f280     CE CD CF D3 
0f284     D9 DF E7 EF 
0f288     F5 F9 FC FE 
0f28c     02 07 0D 12 | 	byte	$ce, $cd, $cf, $d3, $d9, $df, $e7, $ef, $f5, $f9, $fc, $fe, $02, $07, $0d, $12
0f290     16 18 1B 1D 
0f294     21 25 26 26 
0f298     26 28 2A 2B 
0f29c     2D 2F 37 42 | 	byte	$16, $18, $1b, $1d, $21, $25, $26, $26, $26, $28, $2a, $2b, $2d, $2f, $37, $42
0f2a0     4A 42 32 22 
0f2a4     19 12 08 F5 
0f2a8     E4 D8 D4 D5 
0f2ac     D5 D4 D5 DB | 	byte	$4a, $42, $32, $22, $19, $12, $08, $f5, $e4, $d8, $d4, $d5, $d5, $d4, $d5, $db
0f2b0     E3 EA F1 F9 
0f2b4     05 0F 1D 29 
0f2b8     31 3A 3C 3B 
0f2bc     37 37 3B 3D | 	byte	$e3, $ea, $f1, $f9, $05, $0f, $1d, $29, $31, $3a, $3c, $3b, $37, $37, $3b, $3d
0f2c0     3D 3B 3B 3B 
0f2c4     39 34 2C 21 
0f2c8     1A 14 0C 04 
0f2cc     FA F0 E9 E2 | 	byte	$3d, $3b, $3b, $3b, $39, $34, $2c, $21, $1a, $14, $0c, $04, $fa, $f0, $e9, $e2
0f2d0     E0 E0 E0 DA 
0f2d4     D0 C8 BC B4 
0f2d8     AD A5 A3 A6 
0f2dc     AD B4 BA BD | 	byte	$e0, $e0, $e0, $da, $d0, $c8, $bc, $b4, $ad, $a5, $a3, $a6, $ad, $b4, $ba, $bd
0f2e0     BF C0 C1 C1 
0f2e4     C2 C3 C6 CC 
0f2e8     D2 D9 DF E9 
0f2ec     F2 F7 FD 05 | 	byte	$bf, $c0, $c1, $c1, $c2, $c3, $c6, $cc, $d2, $d9, $df, $e9, $f2, $f7, $fd, $05
0f2f0     0C 13 1A 21 
0f2f4     26 2B 2C 2E 
0f2f8     2F 30 32 32 
0f2fc     32 32 32 33 | 	byte	$0c, $13, $1a, $21, $26, $2b, $2c, $2e, $2f, $30, $32, $32, $32, $32, $32, $33
0f300     32 36 3F 49 
0f304     4A 40 2A 20 
0f308     1B 18 0C F8 
0f30c     EA E2 E1 E1 | 	byte	$32, $36, $3f, $49, $4a, $40, $2a, $20, $1b, $18, $0c, $f8, $ea, $e2, $e1, $e1
0f310     E0 DD DF E7 
0f314     EE F3 F9 FF 
0f318     0B 15 1F 27 
0f31c     2F 33 36 35 | 	byte	$e0, $dd, $df, $e7, $ee, $f3, $f9, $ff, $0b, $15, $1f, $27, $2f, $33, $36, $35
0f320     35 39 3D 40 
0f324     40 3C 39 37 
0f328     32 2B 22 19 
0f32c     12 0D 05 FC | 	byte	$35, $39, $3d, $40, $40, $3c, $39, $37, $32, $2b, $22, $19, $12, $0d, $05, $fc
0f330     F4 ED E8 E5 
0f334     E4 E4 E1 DA 
0f338     D2 C8 C1 B9 
0f33c     B4 B2 B2 B6 | 	byte	$f4, $ed, $e8, $e5, $e4, $e4, $e1, $da, $d2, $c8, $c1, $b9, $b4, $b2, $b2, $b6
0f340     BB BF C4 C7 
0f344     C8 C8 CA CB 
0f348     CE CF D3 D7 
0f34c     DD E3 EB F3 | 	byte	$bb, $bf, $c4, $c7, $c8, $c8, $ca, $cb, $ce, $cf, $d3, $d7, $dd, $e3, $eb, $f3
0f350     F9 FF 09 10 
0f354     17 1C 21 26 
0f358     2B 2E 31 33 
0f35c     33 34 35 34 | 	byte	$f9, $ff, $09, $10, $17, $1c, $21, $26, $2b, $2e, $31, $33, $33, $34, $35, $34
0f360     33 32 31 30 
0f364     31 35 3E 47 
0f368     45 38 26 1C 
0f36c     19 18 0A FA | 	byte	$33, $32, $31, $30, $31, $35, $3e, $47, $45, $38, $26, $1c, $19, $18, $0a, $fa
0f370     F0 EB EC EB 
0f374     E6 E5 E9 EF 
0f378     F4 F9 FE 07 
0f37c     11 1B 21 27 | 	byte	$f0, $eb, $ec, $eb, $e6, $e5, $e9, $ef, $f4, $f9, $fe, $07, $11, $1b, $21, $27
0f380     2E 30 32 31 
0f384     34 37 3B 3B 
0f388     37 34 33 2F 
0f38c     28 21 1A 14 | 	byte	$2e, $30, $32, $31, $34, $37, $3b, $3b, $37, $34, $33, $2f, $28, $21, $1a, $14
0f390     10 08 FC F3 
0f394     ED E8 E3 E3 
0f398     E1 DF D8 D0 
0f39c     C4 BA B4 B0 | 	byte	$10, $08, $fc, $f3, $ed, $e8, $e3, $e3, $e1, $df, $d8, $d0, $c4, $ba, $b4, $b0
0f3a0     AF AE B2 B6 
0f3a4     BB BF C0 C1 
0f3a8     C3 C7 C9 CC 
0f3ac     CE D3 D8 DC | 	byte	$af, $ae, $b2, $b6, $bb, $bf, $c0, $c1, $c3, $c7, $c9, $cc, $ce, $d3, $d8, $dc
0f3b0     E3 E9 EF F9 
0f3b4     FF 07 0D 12 
0f3b8     17 1A 1E 21 
0f3bc     25 29 2D 2D | 	byte	$e3, $e9, $ef, $f9, $ff, $07, $0d, $12, $17, $1a, $1e, $21, $25, $29, $2d, $2d
0f3c0     2D 2E 30 30 
0f3c4     2D 29 28 2A 
0f3c8     2F 37 3F 42 
0f3cc     36 22 14 0C | 	byte	$2d, $2e, $30, $30, $2d, $29, $28, $2a, $2f, $37, $3f, $42, $36, $22, $14, $0c
0f3d0     09 01 F4 EA 
0f3d4     E4 E5 E5 E2 
0f3d8     DF DF E5 EC 
0f3dc     F3 F9 FF 09 | 	byte	$09, $01, $f4, $ea, $e4, $e5, $e5, $e2, $df, $df, $e5, $ec, $f3, $f9, $ff, $09
0f3e0     12 18 1F 25 
0f3e4     2A 2D 2D 2C 
0f3e8     2F 31 31 30 
0f3ec     2C 2A 2A 25 | 	byte	$12, $18, $1f, $25, $2a, $2d, $2d, $2c, $2f, $31, $31, $30, $2c, $2a, $2a, $25
0f3f0     20 18 12 0D 
0f3f4     06 00 F6 EE 
0f3f8     E9 E4 E0 DC 
0f3fc     D5 D0 C8 C0 | 	byte	$20, $18, $12, $0d, $06, $00, $f6, $ee, $e9, $e4, $e0, $dc, $d5, $d0, $c8, $c0
0f400     B8 B2 B1 B0 
0f404     AF B2 B7 BD 
0f408     C1 C3 C5 C7 
0f40c     CA CC CF D2 | 	byte	$b8, $b2, $b1, $b0, $af, $b2, $b7, $bd, $c1, $c3, $c5, $c7, $ca, $cc, $cf, $d2
0f410     D6 DB E1 E7 
0f414     EF F6 FE 05 
0f418     0A 0F 13 17 
0f41c     1A 1D 21 26 | 	byte	$d6, $db, $e1, $e7, $ef, $f6, $fe, $05, $0a, $0f, $13, $17, $1a, $1d, $21, $26
0f420     2B 2F 30 32 
0f424     33 34 35 33 
0f428     30 2E 2F 32 
0f42c     35 36 3D 42 | 	byte	$2b, $2f, $30, $32, $33, $34, $35, $33, $30, $2e, $2f, $32, $35, $36, $3d, $42
0f430     40 2A 18 10 
0f434     0D 0D 05 FA 
0f438     F1 EE EF EE 
0f43c     E9 E4 E6 ED | 	byte	$40, $2a, $18, $10, $0d, $0d, $05, $fa, $f1, $ee, $ef, $ee, $e9, $e4, $e6, $ed
0f440     F3 F9 FE 04 
0f444     0A 0F 16 1D 
0f448     26 2D 2F 2E 
0f44c     2E 31 35 37 | 	byte	$f3, $f9, $fe, $04, $0a, $0f, $16, $1d, $26, $2d, $2f, $2e, $2e, $31, $35, $37
0f450     35 31 2F 2E 
0f454     2A 25 20 16 
0f458     10 0B 04 00 
0f45c     F8 F0 E8 E0 | 	byte	$35, $31, $2f, $2e, $2a, $25, $20, $16, $10, $0b, $04, $00, $f8, $f0, $e8, $e0
0f460     DA D4 D0 CA 
0f464     C5 C2 C0 C1 
0f468     C2 C3 C4 C6 
0f46c     C9 CC CD CC | 	byte	$da, $d4, $d0, $ca, $c5, $c2, $c0, $c1, $c2, $c3, $c4, $c6, $c9, $cc, $cd, $cc
0f470     CA CB CD D1 
0f474     D5 DA E1 E9 
0f478     EF F5 FB FF 
0f47c     05 0A 0D 12 | 	byte	$ca, $cb, $cd, $d1, $d5, $da, $e1, $e9, $ef, $f5, $fb, $ff, $05, $0a, $0d, $12
0f480     16 1B 1F 23 
0f484     28 2F 32 34 
0f488     35 34 33 31 
0f48c     31 32 33 35 | 	byte	$16, $1b, $1f, $23, $28, $2f, $32, $34, $35, $34, $33, $31, $31, $32, $33, $35
0f490     36 37 3A 3F 
0f494     46 41 2C 14 
0f498     0A 09 08 00 
0f49c     EC DE D9 DB | 	byte	$36, $37, $3a, $3f, $46, $41, $2c, $14, $0a, $09, $08, $00, $ec, $de, $d9, $db
0f4a0     DC D6 D1 D3 
0f4a4     DD E7 EF F5 
0f4a8     FC 03 0B 16 
0f4ac     1F 2A 2F 30 | 	byte	$dc, $d6, $d1, $d3, $dd, $e7, $ef, $f5, $fc, $03, $0b, $16, $1f, $2a, $2f, $30
0f4b0     30 30 35 38 
0f4b4     38 34 30 2E 
0f4b8     2C 2A 25 20 
0f4bc     18 14 10 09 | 	byte	$30, $30, $35, $38, $38, $34, $30, $2e, $2c, $2a, $25, $20, $18, $14, $10, $09
0f4c0     00 F4 EA E0 
0f4c4     D8 D2 CD CA 
0f4c8     C6 C1 BE BF 
0f4cc     BF BF BF BF | 	byte	$00, $f4, $ea, $e0, $d8, $d2, $cd, $ca, $c6, $c1, $be, $bf, $bf, $bf, $bf, $bf
0f4d0     C0 C3 C6 C6 
0f4d4     C4 C2 C3 C7 
0f4d8     CD D1 D7 DB 
0f4dc     E1 E7 ED F3 | 	byte	$c0, $c3, $c6, $c6, $c4, $c2, $c3, $c7, $cd, $d1, $d7, $db, $e1, $e7, $ed, $f3
0f4e0     F7 FD 03 09 
0f4e4     0E 13 17 19 
0f4e8     1D 23 29 2D 
0f4ec     2E 2C 2A 2B | 	byte	$f7, $fd, $03, $09, $0e, $13, $17, $19, $1d, $23, $29, $2d, $2e, $2c, $2a, $2b
0f4f0     2C 2E 2F 2C 
0f4f4     2B 2A 2B 2D 
0f4f8     2F 31 36 3A 
0f4fc     34 20 08 FC | 	byte	$2c, $2e, $2f, $2c, $2b, $2a, $2b, $2d, $2f, $31, $36, $3a, $34, $20, $08, $fc
0f500     F9 F9 F0 E0 
0f504     D8 D7 DB DB 
0f508     D5 D2 D5 DD 
0f50c     E7 ED F2 F9 | 	byte	$f9, $f9, $f0, $e0, $d8, $d7, $db, $db, $d5, $d2, $d5, $dd, $e7, $ed, $f2, $f9
0f510     FF 0A 13 1B 
0f514     23 2B 31 34 
0f518     35 37 38 39 
0f51c     35 31 2F 2D | 	byte	$ff, $0a, $13, $1b, $23, $2b, $31, $34, $35, $37, $38, $39, $35, $31, $2f, $2d
0f520     2C 29 24 20 
0f524     18 10 04 FA 
0f528     EC E2 DA D2 
0f52c     CD CA C9 C9 | 	byte	$2c, $29, $24, $20, $18, $10, $04, $fa, $ec, $e2, $da, $d2, $cd, $ca, $c9, $c9
0f530     C7 C6 C6 C6 
0f534     C4 C2 C1 C3 
0f538     C5 C8 C8 C8 
0f53c     C9 CE D3 D5 | 	byte	$c7, $c6, $c6, $c6, $c4, $c2, $c1, $c3, $c5, $c8, $c8, $c8, $c9, $ce, $d3, $d5
0f540     D6 DA DF E7 
0f544     ED F1 F7 FC 
0f548     04 0C 12 17 
0f54c     1B 20 25 27 | 	byte	$d6, $da, $df, $e7, $ed, $f1, $f7, $fc, $04, $0c, $12, $17, $1b, $20, $25, $27
0f550     28 28 28 28 
0f554     2A 2E 31 32 
0f558     32 31 31 30 
0f55c     30 2F 31 3F | 	byte	$28, $28, $28, $28, $2a, $2e, $31, $32, $32, $31, $31, $30, $30, $2f, $31, $3f
0f560     4E 52 50 4F 
0f564     40 18 F0 E4 
0f568     E9 EF E8 E0 
0f56c     DE DF E0 DC | 	byte	$4e, $52, $50, $4f, $40, $18, $f0, $e4, $e9, $ef, $e8, $e0, $de, $df, $e0, $dc
0f570     D4 D0 D3 DF 
0f574     F3 FF 0D 19 
0f578     21 24 2B 31 
0f57c     3B 43 45 44 | 	byte	$d4, $d0, $d3, $df, $f3, $ff, $0d, $19, $21, $24, $2b, $31, $3b, $43, $45, $44
0f580     41 42 3C 32 
0f584     28 20 1B 1D 
0f588     1E 18 12 0C 
0f58c     04 FC F0 E8 | 	byte	$41, $42, $3c, $32, $28, $20, $1b, $1d, $1e, $18, $12, $0c, $04, $fc, $f0, $e8
0f590     E1 E0 E2 E4 
0f594     E7 EB EC E6 
0f598     E0 D6 D1 D1 
0f59c     CE C6 C1 C0 | 	byte	$e1, $e0, $e2, $e4, $e7, $eb, $ec, $e6, $e0, $d6, $d1, $d1, $ce, $c6, $c1, $c0
0f5a0     BE BB BB BA 
0f5a4     BA BF C7 CE 
0f5a8     D2 DB E4 ED 
0f5ac     F5 FC 03 0D | 	byte	$be, $bb, $bb, $ba, $ba, $bf, $c7, $ce, $d2, $db, $e4, $ed, $f5, $fc, $03, $0d
0f5b0     17 1F 23 27 
0f5b4     28 25 22 1C 
0f5b8     19 1B 1D 1E 
0f5bc     1D 1A 18 19 | 	byte	$17, $1f, $23, $27, $28, $25, $22, $1c, $19, $1b, $1d, $1e, $1d, $1a, $18, $19
0f5c0     1B 1B 1B 1F 
0f5c4     26 2B 31 3B 
0f5c8     4B 5F 68 54 
0f5cc     20 E0 C0 B1 | 	byte	$1b, $1b, $1b, $1f, $26, $2b, $31, $3b, $4b, $5f, $68, $54, $20, $e0, $c0, $b1
0f5d0     B3 BA BF CF 
0f5d4     D9 DA D0 CA 
0f5d8     D3 EB 0F 2F 
0f5dc     4D 5F 6C 60 | 	byte	$b3, $ba, $bf, $cf, $d9, $da, $d0, $ca, $d3, $eb, $0f, $2f, $4d, $5f, $6c, $60
0f5e0     4A 3E 3E 4A 
0f5e4     50 48 38 28 
0f5e8     18 00 E8 D4 
0f5ec     D2 DF FA 04 | 	byte	$4a, $3e, $3e, $4a, $50, $48, $38, $28, $18, $00, $e8, $d4, $d2, $df, $fa, $04
0f5f0     00 FA F5 EE 
0f5f4     E9 EA F2 FF 
0f5f8     06 04 F8 EA 
0f5fc     DD D4 CA C0 | 	byte	$00, $fa, $f5, $ee, $e9, $ea, $f2, $ff, $06, $04, $f8, $ea, $dd, $d4, $ca, $c0
0f600     B9 BD BE B6 
0f604     AC A8 AA B1 
0f608     BD C7 CF DB 
0f60c     E7 F1 F3 F6 | 	byte	$b9, $bd, $be, $b6, $ac, $a8, $aa, $b1, $bd, $c7, $cf, $db, $e7, $f1, $f3, $f6
0f610     FB FF 09 0D 
0f614     0F 11 13 13 
0f618     12 0E 0B 0C 
0f61c     0C 08 07 09 | 	byte	$fb, $ff, $09, $0d, $0f, $11, $13, $13, $12, $0e, $0b, $0c, $0c, $08, $07, $09
0f620     0C 11 16 16 
0f624     13 14 17 1C 
0f628     20 25 2A 2D 
0f62c     2D 2B 2C 37 | 	byte	$0c, $11, $16, $16, $13, $14, $17, $1c, $20, $25, $2a, $2d, $2d, $2b, $2c, $37
0f630     4B 5F 62 40 
0f634     00 C0 94 80 
0f638     85 9B B3 CF 
0f63c     DD E1 E2 E7 | 	byte	$4b, $5f, $62, $40, $00, $c0, $94, $80, $85, $9b, $b3, $cf, $dd, $e1, $e2, $e7
0f640     FB 1F 4F 73 
0f644     7F 7F 7C 58 
0f648     40 32 32 3F 
0f64c     40 30 1C 04 | 	byte	$fb, $1f, $4f, $73, $7f, $7f, $7c, $58, $40, $32, $32, $3f, $40, $30, $1c, $04
0f650     EC D8 C8 CB 
0f654     DF FB 13 18 
0f658     14 0C 0A 0E 
0f65c     13 17 19 15 | 	byte	$ec, $d8, $c8, $cb, $df, $fb, $13, $18, $14, $0c, $0a, $0e, $13, $17, $19, $15
0f660     08 F4 D8 C0 
0f664     B5 B0 AD AB 
0f668     AB AB A9 A8 
0f66c     AD B9 CD DF | 	byte	$08, $f4, $d8, $c0, $b5, $b0, $ad, $ab, $ab, $ab, $a9, $a8, $ad, $b9, $cd, $df
0f670     F6 FF 07 0B 
0f674     0E 0D 0C 0D 
0f678     0E 0C 09 03 
0f67c     FE FB FC FF | 	byte	$f6, $ff, $07, $0b, $0e, $0d, $0c, $0d, $0e, $0c, $09, $03, $fe, $fb, $fc, $ff
0f680     03 06 08 0C 
0f684     0D 0F 13 19 
0f688     1E 21 25 24 
0f68c     21 20 20 20 | 	byte	$03, $06, $08, $0c, $0d, $0f, $13, $19, $1e, $21, $25, $24, $21, $20, $20, $20
0f690     22 24 25 24 
0f694     21 22 27 2F 
0f698     3F 4B 48 2A 
0f69c     00 D0 B0 A2 | 	byte	$22, $24, $25, $24, $21, $22, $27, $2f, $3f, $4b, $48, $2a, $00, $d0, $b0, $a2
0f6a0     AB BF D7 EA 
0f6a4     F1 F5 F6 FB 
0f6a8     0F 2F 4E 63 
0f6ac     6B 62 50 38 | 	byte	$ab, $bf, $d7, $ea, $f1, $f5, $f6, $fb, $0f, $2f, $4e, $63, $6b, $62, $50, $38
0f6b0     28 20 21 2D 
0f6b4     2E 22 14 00 
0f6b8     F0 E2 DE E7 
0f6bc     F7 07 19 1C | 	byte	$28, $20, $21, $2d, $2e, $22, $14, $00, $f0, $e2, $de, $e7, $f7, $07, $19, $1c
0f6c0     14 0C 08 0B 
0f6c4     10 15 14 0E 
0f6c8     02 F0 D8 C0 
0f6cc     AE A7 A6 A8 | 	byte	$14, $0c, $08, $0b, $10, $15, $14, $0e, $02, $f0, $d8, $c0, $ae, $a7, $a6, $a8
0f6d0     AB AD AE B2 
0f6d4     B9 C6 D7 ED 
0f6d8     FF 0F 13 12 
0f6dc     0D 04 FC F8 | 	byte	$ab, $ad, $ae, $b2, $b9, $c6, $d7, $ed, $ff, $0f, $13, $12, $0d, $04, $fc, $f8
0f6e0     F7 F5 F5 F4 
0f6e4     F2 EF EF F4 
0f6e8     F9 FE 05 0A 
0f6ec     0E 13 19 1F | 	byte	$f7, $f5, $f5, $f4, $f2, $ef, $ef, $f4, $f9, $fe, $05, $0a, $0e, $13, $19, $1f
0f6f0     23 28 2A 29 
0f6f4     26 24 22 20 
0f6f8     1C 18 16 14 
0f6fc     13 15 1A 25 | 	byte	$23, $28, $2a, $29, $26, $24, $22, $20, $1c, $18, $16, $14, $13, $15, $1a, $25
0f700     37 4B 51 40 
0f704     10 D0 A2 8A 
0f708     8D 9F BF DB 
0f70c     E7 EF F3 F5 | 	byte	$37, $4b, $51, $40, $10, $d0, $a2, $8a, $8d, $9f, $bf, $db, $e7, $ef, $f3, $f5
0f710     FF 1B 3F 5F 
0f714     76 74 60 44 
0f718     2A 16 0F 19 
0f71c     27 29 20 0C | 	byte	$ff, $1b, $3f, $5f, $76, $74, $60, $44, $2a, $16, $0f, $19, $27, $29, $20, $0c
0f720     F4 E0 DA DD 
0f724     E7 FB 0F 1B 
0f728     1D 16 0C 04 
0f72c     05 0D 13 10 | 	byte	$f4, $e0, $da, $dd, $e7, $fb, $0f, $1b, $1d, $16, $0c, $04, $05, $0d, $13, $10
0f730     08 FA E4 CC 
0f734     B4 A0 95 95 
0f738     9B A5 AB AF 
0f73c     B5 BE CB DD | 	byte	$08, $fa, $e4, $cc, $b4, $a0, $95, $95, $9b, $a5, $ab, $af, $b5, $be, $cb, $dd
0f740     EF FF 11 17 
0f744     13 08 FC F2 
0f748     ED EB EC EE 
0f74c     F1 F2 F2 F3 | 	byte	$ef, $ff, $11, $17, $13, $08, $fc, $f2, $ed, $eb, $ec, $ee, $f1, $f2, $f2, $f3
0f750     F6 FB 03 0D 
0f754     13 18 1B 1F 
0f758     24 28 2B 2D 
0f75c     2E 2C 28 24 | 	byte	$f6, $fb, $03, $0d, $13, $18, $1b, $1f, $24, $28, $2b, $2d, $2e, $2c, $28, $24
0f760     20 18 14 13 
0f764     15 16 19 1F 
0f768     2B 3B 4B 55 
0f76c     48 20 E8 C0 | 	byte	$20, $18, $14, $13, $15, $16, $19, $1f, $2b, $3b, $4b, $55, $48, $20, $e8, $c0
0f770     94 8B 9B B5 
0f774     CF E3 EF FC 
0f778     FC FD 0B 25 
0f77c     3F 67 78 73 | 	byte	$94, $8b, $9b, $b5, $cf, $e3, $ef, $fc, $fc, $fd, $0b, $25, $3f, $67, $78, $73
0f780     60 40 22 10 
0f784     0C 1B 26 27 
0f788     20 10 F8 E8 
0f78c     E0 E1 EE FF | 	byte	$60, $40, $22, $10, $0c, $1b, $26, $27, $20, $10, $f8, $e8, $e0, $e1, $ee, $ff
0f790     1E 2D 2E 26 
0f794     18 0C 0A 0F 
0f798     12 0F 08 F8 
0f79c     E4 CA B0 98 | 	byte	$1e, $2d, $2e, $26, $18, $0c, $0a, $0f, $12, $0f, $08, $f8, $e4, $ca, $b0, $98
0f7a0     8D 8F 9D AE 
0f7a4     BA BF C5 CB 
0f7a8     D7 E7 FD 0F 
0f7ac     21 26 20 10 | 	byte	$8d, $8f, $9d, $ae, $ba, $bf, $c5, $cb, $d7, $e7, $fd, $0f, $21, $26, $20, $10
0f7b0     00 EC E3 E3 
0f7b4     E7 EB F1 F4 
0f7b8     F4 F6 FA FF 
0f7bc     0B 17 1F 27 | 	byte	$00, $ec, $e3, $e3, $e7, $eb, $f1, $f4, $f4, $f6, $fa, $ff, $0b, $17, $1f, $27
0f7c0     2B 31 36 39 
0f7c4     3B 3C 3A 38 
0f7c8     32 2C 20 16 
0f7cc     12 13 15 1A | 	byte	$2b, $31, $36, $39, $3b, $3c, $3a, $38, $32, $2c, $20, $16, $12, $13, $15, $1a
0f7d0     23 2F 43 5B 
0f7d4     61 48 10 D0 
0f7d8     90 80 80 87 
0f7dc     A7 C7 DF F6 | 	byte	$23, $2f, $43, $5b, $61, $48, $10, $d0, $90, $80, $80, $87, $a7, $c7, $df, $f6
0f7e0     FC F8 FD 0D 
0f7e4     2B 57 7F 7F 
0f7e8     7F 68 40 18 
0f7ec     00 FE 09 13 | 	byte	$fc, $f8, $fd, $0d, $2b, $57, $7f, $7f, $7f, $68, $40, $18, $00, $fe, $09, $13
0f7f0     1E 20 10 FA 
0f7f4     E8 DD DE EF 
0f7f8     0F 2F 41 42 
0f7fc     34 20 0C 03 | 	byte	$1e, $20, $10, $fa, $e8, $dd, $de, $ef, $0f, $2f, $41, $42, $34, $20, $0c, $03
0f800     02 02 00 FB 
0f804     EC D8 C0 A0 
0f808     88 80 80 8F 
0f80c     A7 BB C5 CB | 	byte	$02, $02, $00, $fb, $ec, $d8, $c0, $a0, $88, $80, $80, $8f, $a7, $bb, $c5, $cb
0f810     D3 DD EB FB 
0f814     0D 19 1D 18 
0f818     08 F0 DA D0 
0f81c     CE D5 DF E9 | 	byte	$d3, $dd, $eb, $fb, $0d, $19, $1d, $18, $08, $f0, $da, $d0, $ce, $d5, $df, $e9
0f820     F3 FB 03 0A 
0f824     0F 16 1F 25 
0f828     2D 35 37 36 
0f82c     33 2F 29 26 | 	byte	$f3, $fb, $03, $0a, $0f, $16, $1f, $25, $2d, $35, $37, $36, $33, $2f, $29, $26
0f830     23 20 14 0C 
0f834     08 08 0F 15 
0f838     1F 2B 3B 4F 
0f83c     5F 58 38 00 | 	byte	$23, $20, $14, $0c, $08, $08, $0f, $15, $1f, $2b, $3b, $4f, $5f, $58, $38, $00
0f840     C0 80 80 80 
0f844     80 97 B3 CF 
0f848     EA F5 F5 F9 
0f84c     0B 2F 57 7F | 	byte	$c0, $80, $80, $80, $80, $97, $b3, $cf, $ea, $f5, $f5, $f9, $0b, $2f, $57, $7f
0f850     7F 7F 68 40 
0f854     26 3B 5A 40 
0f858     20 18 F4 E0 
0f85c     D0 94 80 80 | 	byte	$7f, $7f, $68, $40, $26, $3b, $5a, $40, $20, $18, $f4, $e0, $d0, $94, $80, $80
0f860     97 EF 3B 65 
0f864     7F 72 40 00 
0f868     E0 B8 AB DF 
0f86c     2F 4A 20 0D | 	byte	$97, $ef, $3b, $65, $7f, $72, $40, $00, $e0, $b8, $ab, $df, $2f, $4a, $20, $0d
0f870     0C E0 80 80 
0f874     80 8F BF 17 
0f878     67 78 54 30 
0f87c     00 C0 BF F7 | 	byte	$0c, $e0, $80, $80, $80, $8f, $bf, $17, $67, $78, $54, $30, $00, $c0, $bf, $f7
0f880     E0 B2 BF F7 
0f884     02 E0 FF 26 
0f888     0C 13 20 F0 
0f88c     E6 D0 B7 DB | 	byte	$e0, $b2, $bf, $f7, $02, $e0, $ff, $26, $0c, $13, $20, $f0, $e6, $d0, $b7, $db
0f890     F7 0F 2F 47 
0f894     4A 20 F0 D8 
0f898     C0 B6 BF F7 
0f89c     37 77 7F 7F | 	byte	$f7, $0f, $2f, $47, $4a, $20, $f0, $d8, $c0, $b6, $bf, $f7, $37, $77, $7f, $7f
0f8a0     58 20 09 1F 
0f8a4     2A 2B 55 62 
0f8a8     48 20 F0 C0 
0f8ac     90 85 9F B3 | 	byte	$58, $20, $09, $1f, $2a, $2b, $55, $62, $48, $20, $f0, $c0, $90, $85, $9f, $b3
0f8b0     CF 0F 20 0F 
0f8b4     2B 20 F9 17 
0f8b8     37 3F 4F 48 
0f8bc     49 44 2C 10 | 	byte	$cf, $0f, $20, $0f, $2b, $20, $f9, $17, $37, $3f, $4f, $48, $49, $44, $2c, $10
0f8c0     E8 CE E7 FC 
0f8c4     0B 27 20 F0 
0f8c8     DE DE E7 FF 
0f8cc     2B 3F 4A 44 | 	byte	$e8, $ce, $e7, $fc, $0b, $27, $20, $f0, $de, $de, $e7, $ff, $2b, $3f, $4a, $44
0f8d0     2C 20 1C 0C 
0f8d4     00 F6 E9 E9 
0f8d8     E8 CA B9 B4 
0f8dc     A0 95 A7 B7 | 	byte	$2c, $20, $1c, $0c, $00, $f6, $e9, $e9, $e8, $ca, $b9, $b4, $a0, $95, $a7, $b7
0f8e0     C5 D7 E6 EF 
0f8e4     FD 07 15 27 
0f8e8     37 37 2C 20 
0f8ec     04 EA DC E7 | 	byte	$c5, $d7, $e6, $ef, $fd, $07, $15, $27, $37, $37, $2c, $20, $04, $ea, $dc, $e7
0f8f0     F7 F6 F3 F9 
0f8f4     03 06 0B 1B 
0f8f8     2D 28 20 20 
0f8fc     1C 1B 25 2B | 	byte	$f7, $f6, $f3, $f9, $03, $06, $0b, $1b, $2d, $28, $20, $20, $1c, $1b, $25, $2b
0f900     25 1D 1B 1B 
0f904     1B 14 0D 0A 
0f908     04 00 03 0D 
0f90c     09 13 2F 36 | 	byte	$25, $1d, $1b, $1b, $1b, $14, $0d, $0a, $04, $00, $03, $0d, $09, $13, $2f, $36
0f910     28 14 F0 C0 
0f914     88 80 80 80 
0f918     8B A7 CB ED 
0f91c     FF 13 17 19 | 	byte	$28, $14, $f0, $c0, $88, $80, $80, $80, $8b, $a7, $cb, $ed, $ff, $13, $17, $19
0f920     2B 4B 65 7B 
0f924     7F 7D 68 48 
0f928     28 08 F2 E0 
0f92c     DD DE E5 EF | 	byte	$2b, $4b, $65, $7b, $7f, $7d, $68, $48, $28, $08, $f2, $e0, $dd, $de, $e5, $ef
0f930     F6 F2 ED F6 
0f934     FF 07 0D 1B 
0f938     2F 3B 3A 30 
0f93c     20 08 E8 C0 | 	byte	$f6, $f2, $ed, $f6, $ff, $07, $0d, $1b, $2f, $3b, $3a, $30, $20, $08, $e8, $c0
0f940     A2 A2 AE BB 
0f944     CB DB D8 D0 
0f948     C6 BE B9 BF 
0f94c     DF FF 27 3F | 	byte	$a2, $a2, $ae, $bb, $cb, $db, $d8, $d0, $c6, $be, $b9, $bf, $df, $ff, $27, $3f
0f950     48 40 24 0A 
0f954     FC F4 E8 E7 
0f958     EF FA F9 EC 
0f95c     DD D7 DA DF | 	byte	$48, $40, $24, $0a, $fc, $f4, $e8, $e7, $ef, $fa, $f9, $ec, $dd, $d7, $da, $df
0f960     EF FE 0F 1F 
0f964     28 22 16 1A 
0f968     23 25 20 1A 
0f96c     16 12 0C 06 | 	byte	$ef, $fe, $0f, $1f, $28, $22, $16, $1a, $23, $25, $20, $1a, $16, $12, $0c, $06
0f970     03 FF FF 04 
0f974     05 00 FF 0F 
0f978     27 35 3B 30 
0f97c     10 E8 B8 92 | 	byte	$03, $ff, $ff, $04, $05, $00, $ff, $0f, $27, $35, $3b, $30, $10, $e8, $b8, $92
0f980     80 80 80 93 
0f984     B7 DF 0F 2F 
0f988     33 2A 20 24 
0f98c     35 47 5E 77 | 	byte	$80, $80, $80, $93, $b7, $df, $0f, $2f, $33, $2a, $20, $24, $35, $47, $5e, $77
0f990     7F 7F 74 58 
0f994     30 04 E0 D0 
0f998     D2 DF F7 13 
0f99c     23 2E 3D 45 | 	byte	$7f, $7f, $74, $58, $30, $04, $e0, $d0, $d2, $df, $f7, $13, $23, $2e, $3d, $45
0f9a0     38 28 25 29 
0f9a4     29 22 1C 15 
0f9a8     0C 00 EE DA 
0f9ac     C4 AC A0 9D | 	byte	$38, $28, $25, $29, $29, $22, $1c, $15, $0c, $00, $ee, $da, $c4, $ac, $a0, $9d
0f9b0     9C 9F B3 C7 
0f9b4     D0 D3 DD E5 
0f9b8     E5 E1 E5 EF 
0f9bc     FB 07 12 14 | 	byte	$9c, $9f, $b3, $c7, $d0, $d3, $dd, $e5, $e5, $e1, $e5, $ef, $fb, $07, $12, $14
0f9c0     08 F0 E0 D0 
0f9c4     C8 CF DF EE 
0f9c8     FB 0F 18 17 
0f9cc     16 18 18 1A | 	byte	$08, $f0, $e0, $d0, $c8, $cf, $df, $ee, $fb, $0f, $18, $17, $16, $18, $18, $1a
0f9d0     21 2F 3F 42 
0f9d4     40 3A 30 18 
0f9d8     06 01 05 04 
0f9dc     03 0D 17 1D | 	byte	$21, $2f, $3f, $42, $40, $3a, $30, $18, $06, $01, $05, $04, $03, $0d, $17, $1d
0f9e0     23 2F 3F 4B 
0f9e4     4D 40 20 00 
0f9e8     D4 B0 95 91 
0f9ec     96 A3 BB D7 | 	byte	$23, $2f, $3f, $4b, $4d, $40, $20, $00, $d4, $b0, $95, $91, $96, $a3, $bb, $d7
0f9f0     EF FF 0F 1F 
0f9f4     34 3F 4F 6D 
0f9f8     7D 7F 7F 7F 
0f9fc     78 68 50 2C | 	byte	$ef, $ff, $0f, $1f, $34, $3f, $4f, $6d, $7d, $7f, $7f, $7f, $78, $68, $50, $2c
0fa00     0C F4 E0 D0 
0fa04     C9 C6 CF EB 
0fa08     07 1F 2D 35 
0fa0c     32 2C 24 1A | 	byte	$0c, $f4, $e0, $d0, $c9, $c6, $cf, $eb, $07, $1f, $2d, $35, $32, $2c, $24, $1a
0fa10     12 0B 0A 09 
0fa14     FA E8 D8 C0 
0fa18     A4 88 80 80 
0fa1c     80 83 97 AB | 	byte	$12, $0b, $0a, $09, $fa, $e8, $d8, $c0, $a4, $88, $80, $80, $80, $83, $97, $ab
0fa20     BF DD ED F5 
0fa24     FA FF 07 0D 
0fa28     08 00 F9 F4 
0fa2c     F5 F5 F3 F0 | 	byte	$bf, $dd, $ed, $f5, $fa, $ff, $07, $0d, $08, $00, $f9, $f4, $f5, $f5, $f3, $f0
0fa30     ED ED EA E6 
0fa34     EF FF 0F 1B 
0fa38     22 29 33 3D 
0fa3c     38 2C 25 2B | 	byte	$ed, $ed, $ea, $e6, $ef, $ff, $0f, $1b, $22, $29, $33, $3d, $38, $2c, $25, $2b
0fa40     39 3D 39 3A 
0fa44     38 2A 18 10 
0fa48     0F 1B 2A 37 
0fa4c     47 52 4C 38 | 	byte	$39, $3d, $39, $3a, $38, $2a, $18, $10, $0f, $1b, $2a, $37, $47, $52, $4c, $38
0fa50     10 E8 B4 8C 
0fa54     80 80 80 8B 
0fa58     A3 BF E7 FF 
0fa5c     1F 2F 45 5A | 	byte	$10, $e8, $b4, $8c, $80, $80, $80, $8b, $a3, $bf, $e7, $ff, $1f, $2f, $45, $5a
0fa60     65 65 63 63 
0fa64     67 6D 68 5A 
0fa68     48 30 10 F2 
0fa6c     D4 B2 A0 9C | 	byte	$65, $65, $63, $63, $67, $6d, $68, $5a, $48, $30, $10, $f2, $d4, $b2, $a0, $9c
0fa70     AB C7 DF FF 
0fa74     1B 2B 30 30 
0fa78     2C 24 1A 10 
0fa7c     06 FC F0 E0 | 	byte	$ab, $c7, $df, $ff, $1b, $2b, $30, $30, $2c, $24, $1a, $10, $06, $fc, $f0, $e0
0fa80     CC B4 A8 99 
0fa84     88 80 80 80 
0fa88     8B 99 AD BF 
0fa8c     DB EF FF 0F | 	byte	$cc, $b4, $a8, $99, $88, $80, $80, $80, $8b, $99, $ad, $bf, $db, $ef, $ff, $0f
0fa90     1F 22 1C 13 
0fa94     0C 06 04 00 
0fa98     02 08 0B 0D 
0fa9c     0F 10 0B 08 | 	byte	$1f, $22, $1c, $13, $0c, $06, $04, $00, $02, $08, $0b, $0d, $0f, $10, $0b, $08
0faa0     09 0E 10 12 
0faa4     1D 2B 33 3B 
0faa8     47 48 40 3C 
0faac     36 29 20 1C | 	byte	$09, $0e, $10, $12, $1d, $2b, $33, $3b, $47, $48, $40, $3c, $36, $29, $20, $1c
0fab0     16 14 1A 21 
0fab4     2B 2F 34 30 
0fab8     20 00 E8 C4 
0fabc     A8 98 94 96 | 	byte	$16, $14, $1a, $21, $2b, $2f, $34, $30, $20, $00, $e8, $c4, $a8, $98, $94, $96
0fac0     9F AF BF DB 
0fac4     EF 07 1F 35 
0fac8     4B 59 5C 5B 
0facc     61 67 68 68 | 	byte	$9f, $af, $bf, $db, $ef, $07, $1f, $35, $4b, $59, $5c, $5b, $61, $67, $68, $68
0fad0     63 54 40 30 
0fad4     14 F8 D4 B8 
0fad8     A4 A0 A7 BB 
0fadc     CF EB 07 26 | 	byte	$63, $54, $40, $30, $14, $f8, $d4, $b8, $a4, $a0, $a7, $bb, $cf, $eb, $07, $26
0fae0     37 3F 41 40 
0fae4     38 2E 20 16 
0fae8     08 F2 E0 D0 
0faec     C0 A8 94 84 | 	byte	$37, $3f, $41, $40, $38, $2e, $20, $16, $08, $f2, $e0, $d0, $c0, $a8, $94, $84
0faf0     80 85 93 9F 
0faf4     B3 CB DF F3 
0faf8     FF 0F 19 1C 
0fafc     20 25 28 28 | 	byte	$80, $85, $93, $9f, $b3, $cb, $df, $f3, $ff, $0f, $19, $1c, $20, $25, $28, $28
0fb00     28 25 20 14 
0fb04     09 06 04 04 
0fb08     08 0D 0C 0D 
0fb0c     12 15 17 1F | 	byte	$28, $25, $20, $14, $09, $06, $04, $04, $08, $0d, $0c, $0d, $12, $15, $17, $1f
0fb10     27 2D 2E 2F 
0fb14     36 38 30 28 
0fb18     28 2B 2F 32 
0fb1c     35 31 2F 2C | 	byte	$27, $2d, $2e, $2f, $36, $38, $30, $28, $28, $2b, $2f, $32, $35, $31, $2f, $2c
0fb20     20 08 F4 E0 
0fb24     C8 B4 A5 9C 
0fb28     99 9C A5 AF 
0fb2c     BF D7 EF 0B | 	byte	$20, $08, $f4, $e0, $c8, $b4, $a5, $9c, $99, $9c, $a5, $af, $bf, $d7, $ef, $0b
0fb30     1F 3F 4F 5E 
0fb34     63 67 66 66 
0fb38     64 60 50 46 
0fb3c     40 30 20 10 | 	byte	$1f, $3f, $4f, $5e, $63, $67, $66, $66, $64, $60, $50, $46, $40, $30, $20, $10
0fb40     F8 E4 D0 C2 
0fb44     B8 AF B5 C5 
0fb48     D5 E7 FB 0B 
0fb4c     1B 27 2B 2D | 	byte	$f8, $e4, $d0, $c2, $b8, $af, $b5, $c5, $d5, $e7, $fb, $0b, $1b, $27, $2b, $2d
0fb50     2C 26 20 10 
0fb54     FA E8 D0 B4 
0fb58     A0 8C 83 8A 
0fb5c     92 97 9F AD | 	byte	$2c, $26, $20, $10, $fa, $e8, $d0, $b4, $a0, $8c, $83, $8a, $92, $97, $9f, $ad
0fb60     B9 BF CB D7 
0fb64     EB FF 15 2B 
0fb68     3F 4D 50 49 
0fb6c     41 3B 32 24 | 	byte	$b9, $bf, $cb, $d7, $eb, $ff, $15, $2b, $3f, $4d, $50, $49, $41, $3b, $32, $24
0fb70     18 0E 0C 04 
0fb74     FA F0 E8 ED 
0fb78     F6 F9 FF 0E 
0fb7c     15 15 17 1B | 	byte	$18, $0e, $0c, $04, $fa, $f0, $e8, $ed, $f6, $f9, $ff, $0e, $15, $15, $17, $1b
0fb80     1D 1F 27 29 
0fb84     2B 39 44 44 
0fb88     41 41 3C 2C 
0fb8c     20 08 E8 CA | 	byte	$1d, $1f, $27, $29, $2b, $39, $44, $44, $41, $41, $3c, $2c, $20, $08, $e8, $ca
0fb90     B0 98 84 80 
0fb94     80 80 81 8B 
0fb98     9B B3 CB DF 
0fb9c     FF 2F 4F 6F | 	byte	$b0, $98, $84, $80, $80, $80, $81, $8b, $9b, $b3, $cb, $df, $ff, $2f, $4f, $6f
0fba0     7F 7F 7F 7F 
0fba4     7F 7F       | 	byte	$7f[6]
0fba6     78 6E 60 50 
0fbaa     38 18 00 E8 
0fbae     C8 AC A0 98 
0fbb2     9A A3 B2 BD | 	byte	$78, $6e, $60, $50, $38, $18, $00, $e8, $c8, $ac, $a0, $98, $9a, $a3, $b2, $bd
0fbb6     C7 D7 EB FF 
0fbba     1B 2E 39 3E 
0fbbe     3B 35 2A 1A 
0fbc2     04 EC D8 C4 | 	byte	$c7, $d7, $eb, $ff, $1b, $2e, $39, $3e, $3b, $35, $2a, $1a, $04, $ec, $d8, $c4
0fbc6     B2 AA A4 9C 
0fbca     95 96 9F A8 
0fbce     AE B7 C5 D3 
0fbd2     E7 FD 0F 25 | 	byte	$b2, $aa, $a4, $9c, $95, $96, $9f, $a8, $ae, $b7, $c5, $d3, $e7, $fd, $0f, $25
0fbd6     37 43 4A 4D 
0fbda     49 47 4A 45 
0fbde     3D 38 31 26 
0fbe2     20 18 10 06 | 	byte	$37, $43, $4a, $4d, $49, $47, $4a, $45, $3d, $38, $31, $26, $20, $18, $10, $06
0fbe6     06 0B 0D 0C 
0fbea     0C 0D 09 05 
0fbee     03 06 0C 17 
0fbf2     22 2B 33 3D | 	byte	$06, $0b, $0d, $0c, $0c, $0d, $09, $05, $03, $06, $0c, $17, $22, $2b, $33, $3d
0fbf6     42 40 34 24 
0fbfa     14 00 E8 D0 
0fbfe     C0 A8 94 8C 
0fc02     8A 8E 97 A6 | 	byte	$42, $40, $34, $24, $14, $00, $e8, $d0, $c0, $a8, $94, $8c, $8a, $8e, $97, $a6
0fc06     B5 C7 DF F7 
0fc0a     17 2F 4B 66 
0fc0e     7B 7F 7F 7F 
0fc12     7F 7F 7F 78 | 	byte	$b5, $c7, $df, $f7, $17, $2f, $4b, $66, $7b, $7f, $7f, $7f, $7f, $7f, $7f, $78
0fc16     6A 58 41 30 
0fc1a     18 05 F6 E4 
0fc1e     D0 C2 B8 B0 
0fc22     A8 A6 A7 AF | 	byte	$6a, $58, $41, $30, $18, $05, $f6, $e4, $d0, $c2, $b8, $b0, $a8, $a6, $a7, $af
0fc26     BB CB DF EF 
0fc2a     FB 05 0F 14 
0fc2e     10 0C 08 00 
0fc32     F8 ED E4 D8 | 	byte	$bb, $cb, $df, $ef, $fb, $05, $0f, $14, $10, $0c, $08, $00, $f8, $ed, $e4, $d8
0fc36     CC C5 C2 BF 
0fc3a     BF C5 CB D3 
0fc3e     DB E2 EB F7 
0fc42     FF 04 0F 1D | 	byte	$cc, $c5, $c2, $bf, $bf, $c5, $cb, $d3, $db, $e2, $eb, $f7, $ff, $04, $0f, $1d
0fc46     25 2D 37 3C 
0fc4a     3C 3E 3E 3B 
0fc4e     39 35 30 2C 
0fc52     24 20 15 0C | 	byte	$25, $2d, $37, $3c, $3c, $3e, $3e, $3b, $39, $35, $30, $2c, $24, $20, $15, $0c
0fc56     01 FA F6 F0 
0fc5a     EF F4 F8 FC 
0fc5e     02 0B 13 1B 
0fc62     1F 26 2C 2E | 	byte	$01, $fa, $f6, $f0, $ef, $f4, $f8, $fc, $02, $0b, $13, $1b, $1f, $26, $2c, $2e
0fc66     2A 21 14 06 
0fc6a     F4 E0 CC BA 
0fc6e     A8 A1 A3 A7 
0fc72     AB B7 C7 D7 | 	byte	$2a, $21, $14, $06, $f4, $e0, $cc, $ba, $a8, $a1, $a3, $a7, $ab, $b7, $c7, $d7
0fc76     EB FF 15 27 
0fc7a     37 4D 5D 6A 
0fc7e     72 76 74 70 
0fc82     66 5A 4C 40 | 	byte	$eb, $ff, $15, $27, $37, $4d, $5d, $6a, $72, $76, $74, $70, $66, $5a, $4c, $40
0fc86     34 28 20 16 
0fc8a     0A 00 EE E2 
0fc8e     D4 C2 B0 A1 
0fc92     9C 9D A2 A9 | 	byte	$34, $28, $20, $16, $0a, $00, $ee, $e2, $d4, $c2, $b0, $a1, $9c, $9d, $a2, $a9
0fc96     AF B7 C3 CD 
0fc9a     D4 D9 DE E2 
0fc9e     E6 E8 E8 E8 
0fca2     E6 E4 E2 E3 | 	byte	$af, $b7, $c3, $cd, $d4, $d9, $de, $e2, $e6, $e8, $e8, $e8, $e6, $e4, $e2, $e3
0fca6     E1 E0 E2 E4 
0fcaa     E9 EF F6 FE 
0fcae     05 09 0D 0F 
0fcb2     11 16 17 19 | 	byte	$e1, $e0, $e2, $e4, $e9, $ef, $f6, $fe, $05, $09, $0d, $0f, $11, $16, $17, $19
0fcb6     1E 24 29 2B 
0fcba     2D 2F 31 2E 
0fcbe     26 26 26 20 
0fcc2     12 0A 04 00 | 	byte	$1e, $24, $29, $2b, $2d, $2f, $31, $2e, $26, $26, $26, $20, $12, $0a, $04, $00
0fcc6     FB F6 F5 FA 
0fcca     FE 02 09 0D 
0fcce     11 1B 22 25 
0fcd2     2B 31 2C 20 | 	byte	$fb, $f6, $f5, $fa, $fe, $02, $09, $0d, $11, $1b, $22, $25, $2b, $31, $2c, $20
0fcd6     14 00 E8 D4 
0fcda     C2 B0 A6 A4 
0fcde     A4 AB B6 C3 
0fce2     D3 E7 FB 0F | 	byte	$14, $00, $e8, $d4, $c2, $b0, $a6, $a4, $a4, $ab, $b6, $c3, $d3, $e7, $fb, $0f
0fce6     27 3F 57 6B 
0fcea     79 7F 7F 7C 
0fcee     76 6C 62 58 
0fcf2     4A 3C 30 28 | 	byte	$27, $3f, $57, $6b, $79, $7f, $7f, $7c, $76, $6c, $62, $58, $4a, $3c, $30, $28
0fcf6     20 14 0A 00 
0fcfa     F2 E8 DA C8 
0fcfe     B8 B0 A9 A1 
0fd02     98 97 9F A0 | 	byte	$20, $14, $0a, $00, $f2, $e8, $da, $c8, $b8, $b0, $a9, $a1, $98, $97, $9f, $a0
0fd06     A3 AB B7 BF 
0fd0a     C7 D1 DD E7 
0fd0e     EF F2 F5 FB 
0fd12     FF 03 09 0B | 	byte	$a3, $ab, $b7, $bf, $c7, $d1, $dd, $e7, $ef, $f2, $f5, $fb, $ff, $03, $09, $0b
0fd16     0F 13 16 16 
0fd1a     18 18 1B 1D 
0fd1e     1E 1C 1D 1D 
0fd22     1E 1D 1D 1D | 	byte	$0f, $13, $16, $16, $18, $18, $1b, $1d, $1e, $1c, $1d, $1d, $1e, $1d, $1d, $1d
0fd26     1E 23 27 26 
0fd2a     29 27 23 20 
0fd2e     1C 16 12 0E 
0fd32     08 08 08 08 | 	byte	$1e, $23, $27, $26, $29, $27, $23, $20, $1c, $16, $12, $0e, $08, $08, $08, $08
0fd36     08 06 03 06 
0fd3a     09 0C 11 17 
0fd3e     21 25 28 28 
0fd42     22 18 08 F8 | 	byte	$08, $06, $03, $06, $09, $0c, $11, $17, $21, $25, $28, $28, $22, $18, $08, $f8
0fd46     E4 D4 C6 C0 
0fd4a     B6 B3 B6 BB 
0fd4e     C1 C7 CF DF 
0fd52     F5 07 1F 37 | 	byte	$e4, $d4, $c6, $c0, $b6, $b3, $b6, $bb, $c1, $c7, $cf, $df, $f5, $07, $1f, $37
0fd56     4B 5D 67 6D 
0fd5a     6D 6C 66 61 
0fd5e     5A 54 4B 41 
0fd62     38 2E 24 18 | 	byte	$4b, $5d, $67, $6d, $6d, $6c, $66, $61, $5a, $54, $4b, $41, $38, $2e, $24, $18
0fd66     0C FC F2 E4 
0fd6a     D6 C8 B8 AC 
0fd6e     A2 96 8C 89 
0fd72     89 8D 92 94 | 	byte	$0c, $fc, $f2, $e4, $d6, $c8, $b8, $ac, $a2, $96, $8c, $89, $89, $8d, $92, $94
0fd76     9D AB B7 C7 
0fd7a     D7 E1 ED F7 
0fd7e     FD FF 07 0B 
0fd82     0F 15 1A 1F | 	byte	$9d, $ab, $b7, $c7, $d7, $e1, $ed, $f7, $fd, $ff, $07, $0b, $0f, $15, $1a, $1f
0fd86     22 26 26 24 
0fd8a     21 21 24 25 
0fd8e     25 26 26 24 
0fd92     20 1D 1A 18 | 	byte	$22, $26, $26, $24, $21, $21, $24, $25, $25, $26, $26, $24, $20, $1d, $1a, $18
0fd96     16 19 18 16 
0fd9a     13 11 0D 04 
0fd9e     FE F8 F8 F8 
0fda2     F8 F9 FA FB | 	byte	$16, $19, $18, $16, $13, $11, $0d, $04, $fe, $f8, $f8, $f8, $f8, $f9, $fa, $fb
0fda6     FB FF 04 0D 
0fdaa     15 1D 23 29 
0fdae     2B 28 22 18 
0fdb2     0A 00 EC DA | 	byte	$fb, $ff, $04, $0d, $15, $1d, $23, $29, $2b, $28, $22, $18, $0a, $00, $ec, $da
0fdb6     CD C2 B6 AD 
0fdba     A9 A9 AE B9 
0fdbe     C5 D7 EB FF 
0fdc2     13 27 3A 4B | 	byte	$cd, $c2, $b6, $ad, $a9, $a9, $ae, $b9, $c5, $d7, $eb, $ff, $13, $27, $3a, $4b
0fdc6     5F 67 6B 6F 
0fdca     72 71 68 5A 
0fdce     4D 44 38 2A 
0fdd2     20 18 0E 04 | 	byte	$5f, $67, $6b, $6f, $72, $71, $68, $5a, $4d, $44, $38, $2a, $20, $18, $0e, $04
0fdd6     F8 EC E0 D0 
0fdda     C0 AC 9A 90 
0fdde     88 81 80 83 
0fde2     8B 95 9F AB | 	byte	$f8, $ec, $e0, $d0, $c0, $ac, $9a, $90, $88, $81, $80, $83, $8b, $95, $9f, $ab
0fde6     B5 BF CF DB 
0fdea     E5 EF FB 0A 
0fdee     15 1E 23 27 
0fdf2     27 29 2B 2B | 	byte	$b5, $bf, $cf, $db, $e5, $ef, $fb, $0a, $15, $1e, $23, $27, $27, $29, $2b, $2b
0fdf6     2C 31 34 35 
0fdfa     34 34 30 2A 
0fdfe     28 24 20 1D 
0fe02     1D 1C 1A 18 | 	byte	$2c, $31, $34, $35, $34, $34, $30, $2a, $28, $24, $20, $1d, $1d, $1c, $1a, $18
0fe06     17 14 0D 08 
0fe0a     04 FE F8 F5 
0fe0e     F2 F2 F4 F7 
0fe12     F8 F9 FD FF | 	byte	$17, $14, $0d, $08, $04, $fe, $f8, $f5, $f2, $f2, $f4, $f7, $f8, $f9, $fd, $ff
0fe16     03 0C 11 17 
0fe1a     1F 29 2D 2F 
0fe1e     30 2C 28 20 
0fe22     10 01 F0 DC | 	byte	$03, $0c, $11, $17, $1f, $29, $2d, $2f, $30, $2c, $28, $20, $10, $01, $f0, $dc
0fe26     D0 C8 BA B4 
0fe2a     B3 B6 BA C3 
0fe2e     D2 DF F5 07 
0fe32     1B 2F 3F 53 | 	byte	$d0, $c8, $ba, $b4, $b3, $b6, $ba, $c3, $d2, $df, $f5, $07, $1b, $2f, $3f, $53
0fe36     63 6B 72 74 
0fe3a     73 70 66 59 
0fe3e     50 45 38 2C 
0fe42     20 11 08 FC | 	byte	$63, $6b, $72, $74, $73, $70, $66, $59, $50, $45, $38, $2c, $20, $11, $08, $fc
0fe46     EC DC D0 C4 
0fe4a     B4 A8 A2 9D 
0fe4e     9B 9B 9D A2 
0fe52     A6 A9 AE B4 | 	byte	$ec, $dc, $d0, $c4, $b4, $a8, $a2, $9d, $9b, $9b, $9d, $a2, $a6, $a9, $ae, $b4
0fe56     BA C2 CD D7 
0fe5a     DF ED FB 07 
0fe5e     14 1D 25 2F 
0fe62     32 33 39 3E | 	byte	$ba, $c2, $cd, $d7, $df, $ed, $fb, $07, $14, $1d, $25, $2f, $32, $33, $39, $3e
0fe66     40 40 42 40 
0fe6a     3D 38 31 2B 
0fe6e     26 20 16 12 
0fe72     12 11 0C 06 | 	byte	$40, $40, $42, $40, $3d, $38, $31, $2b, $26, $20, $16, $12, $12, $11, $0c, $06
0fe76     00 FA F5 ED 
0fe7a     E8 E8 E7 E7 
0fe7e     E8 EB EF F6 
0fe82     FA FD 03 08 | 	byte	$00, $fa, $f5, $ed, $e8, $e8, $e7, $e7, $e8, $eb, $ef, $f6, $fa, $fd, $03, $08
0fe86     0B 0F 15 1D 
0fe8a     25 2C 31 30 
0fe8e     2D 28 20 11 
0fe92     02 F2 E0 D2 | 	byte	$0b, $0f, $15, $1d, $25, $2c, $31, $30, $2d, $28, $20, $11, $02, $f2, $e0, $d2
0fe96     C8 C0 BA B9 
0fe9a     BA BD C5 CF 
0fe9e     DD EB FB 0D 
0fea2     1F 33 3F 4F | 	byte	$c8, $c0, $ba, $b9, $ba, $bd, $c5, $cf, $dd, $eb, $fb, $0d, $1f, $33, $3f, $4f
0fea6     59 5D 62 63 
0feaa     5D 56 4E 46 
0feae     40 32 24 1C 
0feb2     12 06 F8 F0 | 	byte	$59, $5d, $62, $63, $5d, $56, $4e, $46, $40, $32, $24, $1c, $12, $06, $f8, $f0
0feb6     E8 E0 D4 CA 
0feba     C1 BC B8 B0 
0febe     A8 A3 A1 9F 
0fec2     9C 9D A1 A7 | 	byte	$e8, $e0, $d4, $ca, $c1, $bc, $b8, $b0, $a8, $a3, $a1, $9f, $9c, $9d, $a1, $a7
0fec6     AD B7 C3 CF 
0feca     DB E5 EF FF 
0fece     0B 15 1F 2A 
0fed2     2F 32 37 39 | 	byte	$ad, $b7, $c3, $cf, $db, $e5, $ef, $ff, $0b, $15, $1f, $2a, $2f, $32, $37, $39
0fed6     3A 3C 3B 38 
0feda     38 34 30 28 
0fede     22 1B 15 10 
0fee2     09 04 FE F8 | 	byte	$3a, $3c, $3b, $38, $38, $34, $30, $28, $22, $1b, $15, $10, $09, $04, $fe, $f8
0fee6     F0 EA E6 E4 
0feea     E3 E3 E7 ED 
0feee     F1 F4 F7 FD 
0fef2     02 05 0A 0F | 	byte	$f0, $ea, $e6, $e4, $e3, $e3, $e7, $ed, $f1, $f4, $f7, $fd, $02, $05, $0a, $0f
0fef6     13 19 1F 23 
0fefa     2B 2F 33 30 
0fefe     2A 24 1C 0C 
0ff02     00 F0 E2 D8 | 	byte	$13, $19, $1f, $23, $2b, $2f, $33, $30, $2a, $24, $1c, $0c, $00, $f0, $e2, $d8
0ff06     CC C3 C1 C0 
0ff0a     C1 C7 CE D7 
0ff0e     E7 F7 07 17 
0ff12     2B 3D 4A 53 | 	byte	$cc, $c3, $c1, $c0, $c1, $c7, $ce, $d7, $e7, $f7, $07, $17, $2b, $3d, $4a, $53
0ff16     59 5F 60 60 
0ff1a     58 50 48 40 
0ff1e     35 28 20 18 
0ff22     0D 06 02 FC | 	byte	$59, $5f, $60, $60, $58, $50, $48, $40, $35, $28, $20, $18, $0d, $06, $02, $fc
0ff26     F4 EC E4 DC 
0ff2a     D4 C8 C0 BA 
0ff2e     B0 A8 A4 A0 
0ff32     9D 9F A3 A7 | 	byte	$f4, $ec, $e4, $dc, $d4, $c8, $c0, $ba, $b0, $a8, $a4, $a0, $9d, $9f, $a3, $a7
0ff36     AF BE C9 D3 
0ff3a     E3 F1 FF 0B 
0ff3e     17 23 2D 34 
0ff42     3B 41 44 45 | 	byte	$af, $be, $c9, $d3, $e3, $f1, $ff, $0b, $17, $23, $2d, $34, $3b, $41, $44, $45
0ff46     45 42 3C 3A 
0ff4a     36 30 2C 24 
0ff4e     20 1A 10 08 
0ff52     02 FC F4 EF | 	byte	$45, $42, $3c, $3a, $36, $30, $2c, $24, $20, $1a, $10, $08, $02, $fc, $f4, $ef
0ff56     EC EA EA EE 
0ff5a     EF F2 F7 FA 
0ff5e     FE 03 06 09 
0ff62     0F 13 19 20 | 	byte	$ec, $ea, $ea, $ee, $ef, $f2, $f7, $fa, $fe, $03, $06, $09, $0f, $13, $19, $20
0ff66     25 26 29 2F 
0ff6a     2F 30 2D 29 
0ff6e     22 1A 0E 02 
0ff72     F8 E8 DC D2 | 	byte	$25, $26, $29, $2f, $2f, $30, $2d, $29, $22, $1a, $0e, $02, $f8, $e8, $dc, $d2
0ff76     CA C5 C2 C1 
0ff7a     C3 C6 CE DB 
0ff7e     E7 F3 FF 17 
0ff82     23 2F 3F 49 | 	byte	$ca, $c5, $c2, $c1, $c3, $c6, $ce, $db, $e7, $f3, $ff, $17, $23, $2f, $3f, $49
0ff86     4F 53 57 5B 
0ff8a     56 4D 48 42 
0ff8e     38 30 2A 20 
0ff92     16 0C 05 FC | 	byte	$4f, $53, $57, $5b, $56, $4d, $48, $42, $38, $30, $2a, $20, $16, $0c, $05, $fc
0ff96     F0 E6 DA D0 
0ff9a     C8 C0 B3 A9 
0ff9e     A2 9D 98 98 
0ffa2     9B 9F A5 AD | 	byte	$f0, $e6, $da, $d0, $c8, $c0, $b3, $a9, $a2, $9d, $98, $98, $9b, $9f, $a5, $ad
0ffa6     B7 BF CD DB 
0ffaa     E7 F7 07 15 
0ffae     1F 2B 34 38 
0ffb2     39 3A 3D 3D | 	byte	$b7, $bf, $cd, $db, $e7, $f7, $07, $15, $1f, $2b, $34, $38, $39, $3a, $3d, $3d
0ffb6     38 36 34 30 
0ffba     26 22 1C 13 
0ffbe     0E 0A 06 00 
0ffc2     FC FA F8 F4 | 	byte	$38, $36, $34, $30, $26, $22, $1c, $13, $0e, $0a, $06, $00, $fc, $fa, $f8, $f4
0ffc6     EF EE F1 EF 
0ffca     ED F1 F5 F7 
0ffce     FB 03 07 09 
0ffd2     0F 17 18 1C | 	byte	$ef, $ee, $f1, $ef, $ed, $f1, $f5, $f7, $fb, $03, $07, $09, $0f, $17, $18, $1c
0ffd6     20 22 23 24 
0ffda     25 22 20 19 
0ffde     12 0A 00 F6 
0ffe2     EA E0 D0 CA | 	byte	$20, $22, $23, $24, $25, $22, $20, $19, $12, $0a, $00, $f6, $ea, $e0, $d0, $ca
0ffe6     C4 C0 BF BF 
0ffea     C0 C4 CF D9 
0ffee     DF EB FB 07 
0fff2     13 23 32 3B | 	byte	$c4, $c0, $bf, $bf, $c0, $c4, $cf, $d9, $df, $eb, $fb, $07, $13, $23, $32, $3b
0fff6     42 47 4B 4D 
0fffa     4D 48 44 40 
0fffe     39 32 2A 21 
10002     18 0D 06 00 | 	byte	$42, $47, $4b, $4d, $4d, $48, $44, $40, $39, $32, $2a, $21, $18, $0d, $06, $00
10006     F2 E8 E0 D5 
1000a     C9 C0 BA B4 
1000e     AC A6 A7 AA 
10012     AD B1 B9 BF | 	byte	$f2, $e8, $e0, $d5, $c9, $c0, $ba, $b4, $ac, $a6, $a7, $aa, $ad, $b1, $b9, $bf
10016     CD D9 E3 EF 
1001a     FA 07 0F 17 
1001e     1F 27 2B 2F 
10022     33 32 33 31 | 	byte	$cd, $d9, $e3, $ef, $fa, $07, $0f, $17, $1f, $27, $2b, $2f, $33, $32, $33, $31
10026     2E 29 24 20 
1002a     1B 16 10 0D 
1002e     09 06 02 FE 
10032     FA F9 FA F6 | 	byte	$2e, $29, $24, $20, $1b, $16, $10, $0d, $09, $06, $02, $fe, $fa, $f9, $fa, $f6
10036     F5 FA FC FE 
1003a     FF 05 08 0A 
1003e     0F 13 14 16 
10042     1B 1E 1D 1E | 	byte	$f5, $fa, $fc, $fe, $ff, $05, $08, $0a, $0f, $13, $14, $16, $1b, $1e, $1d, $1e
10046     20 20 20 1D 
1004a     1B 1B 19 12 
1004e     0C 06 FA F0 
10052     E6 DA D0 CA | 	byte	$20, $20, $20, $1d, $1b, $1b, $19, $12, $0c, $06, $fa, $f0, $e6, $da, $d0, $ca
10056     C4 C0 C2 C5 
1005a     C6 CB D7 E2 
1005e     EF FD 0A 19 
10062     2B 3A 42 4F | 	byte	$c4, $c0, $c2, $c5, $c6, $cb, $d7, $e2, $ef, $fd, $0a, $19, $2b, $3a, $42, $4f
10066     55 57 59 5A 
1006a     58 51 4C 46 
1006e     40 36 2C 24 
10072     19 10 05 FA | 	byte	$55, $57, $59, $5a, $58, $51, $4c, $46, $40, $36, $2c, $24, $19, $10, $05, $fa
10076     EE E2 D5 C8 
1007a     C0 B8 AE AA 
1007e     A9 AA AE B1 
10082     B7 BF C9 D3 | 	byte	$ee, $e2, $d5, $c8, $c0, $b8, $ae, $aa, $a9, $aa, $ae, $b1, $b7, $bf, $c9, $d3
10086     DF EB F7 FF 
1008a     0A 12 1B 25 
1008e     2D 2F 31 33 
10092     35 34 32 2E | 	byte	$df, $eb, $f7, $ff, $0a, $12, $1b, $25, $2d, $2f, $31, $33, $35, $34, $32, $2e
10096     2A 26 22 1C 
1009a     12 0A 00 FA 
1009e     F4 EE E9 E6 
100a2     E5 E4 E7 EB | 	byte	$2a, $26, $22, $1c, $12, $0a, $00, $fa, $f4, $ee, $e9, $e6, $e5, $e4, $e7, $eb
100a6     EF F6 FE 04 
100aa     0D 15 19 1B 
100ae     1D 1D 1E 1D 
100b2     1C 1C 1C 1B | 	byte	$ef, $f6, $fe, $04, $0d, $15, $19, $1b, $1d, $1d, $1e, $1d, $1c, $1c, $1c, $1b
100b6     18 17 14 13 
100ba     12 11 10 10 
100be     0D 0A 05 FD 
100c2     F4 EB E0 D8 | 	byte	$18, $17, $14, $13, $12, $11, $10, $10, $0d, $0a, $05, $fd, $f4, $eb, $e0, $d8
100c6     D0 C5 C0 BE 
100ca     BE C1 C6 CD 
100ce     D7 E3 ED F9 
100d2     06 12 1D 29 | 	byte	$d0, $c5, $c0, $be, $be, $c1, $c6, $cd, $d7, $e3, $ed, $f9, $06, $12, $1d, $29
100d6     34 3D 43 48 
100da     49 4A 49 44 
100de     40 39 33 2D 
100e2     26 20 16 0D | 	byte	$34, $3d, $43, $48, $49, $4a, $49, $44, $40, $39, $33, $2d, $26, $20, $16, $0d
100e6     04 F8 EA E0 
100ea     D4 C8 C0 BA 
100ee     B4 B0 B0 B2 
100f2     B6 BB C3 C9 | 	byte	$04, $f8, $ea, $e0, $d4, $c8, $c0, $ba, $b4, $b0, $b0, $b2, $b6, $bb, $c3, $c9
100f6     D1 D9 E3 EB 
100fa     F2 F9 FF 09 
100fe     0F 15 1F 25 
10102     2A 2E 31 33 | 	byte	$d1, $d9, $e3, $eb, $f2, $f9, $ff, $09, $0f, $15, $1f, $25, $2a, $2e, $31, $33
10106     32 30 2A 24 
1010a     1C 10 08 00 
1010e     F2 E8 E0 D8 
10112     D4 D3 D3 D5 | 	byte	$32, $30, $2a, $24, $1c, $10, $08, $00, $f2, $e8, $e0, $d8, $d4, $d3, $d3, $d5
10116     D9 DD E3 ED 
1011a     F5 FB 05 0F 
1011e     14 17 1E 23 
10122     25 27 2B 2D | 	byte	$d9, $dd, $e3, $ed, $f5, $fb, $05, $0f, $14, $17, $1e, $23, $25, $27, $2b, $2d
10126     2C 2B 2B 2B 
1012a     28 24 20 18 
1012e     12 0C 08 00 
10132     FC F8 F6 F5 | 	byte	$2c, $2b, $2b, $2b, $28, $24, $20, $18, $12, $0c, $08, $00, $fc, $f8, $f6, $f5
10136     F4 F6 F8 F5 
1013a     F1 EE E6 E1 
1013e     DC D4 CD CA 
10142     C9 C7 CB D1 | 	byte	$f4, $f6, $f8, $f5, $f1, $ee, $e6, $e1, $dc, $d4, $cd, $ca, $c9, $c7, $cb, $d1
10146     D7 DF EB F9 
1014a     07 17 23 2D 
1014e     37 42 49 4D 
10152     4F 4E 4D 4D | 	byte	$d7, $df, $eb, $f9, $07, $17, $23, $2d, $37, $42, $49, $4d, $4f, $4e, $4d, $4d
10156     48 42 40 38 
1015a     2E 29 22 14 
1015e     0A 00 F0 E4 
10162     D8 CC C0 B8 | 	byte	$48, $42, $40, $38, $2e, $29, $22, $14, $0a, $00, $f0, $e4, $d8, $cc, $c0, $b8
10166     B0 AE AF B3 
1016a     BD C6 CF D7 
1016e     E7 F0 F7 FF 
10172     06 0B 13 1A | 	byte	$b0, $ae, $af, $b3, $bd, $c6, $cf, $d7, $e7, $f0, $f7, $ff, $06, $0b, $13, $1a
10176     1B 1F 23 24 
1017a     29 2D 2A 29 
1017e     29 28 22 1C 
10182     16 0E 04 F8 | 	byte	$1b, $1f, $23, $24, $29, $2d, $2a, $29, $29, $28, $22, $1c, $16, $0e, $04, $f8
10186     F4 F0 EB E4 
1018a     E4 E5 E6 EB 
1018e     ED EE F3 F8 
10192     FB FE 03 07 | 	byte	$f4, $f0, $eb, $e4, $e4, $e5, $e6, $eb, $ed, $ee, $f3, $f8, $fb, $fe, $03, $07
10196     09 0F 17 1F 
1019a     27 2F 35 39 
1019e     3B 3D 40 3E 
101a2     39 34 2E 26 | 	byte	$09, $0f, $17, $1f, $27, $2f, $35, $39, $3b, $3d, $40, $3e, $39, $34, $2e, $26
101a6     20 14 0A 04 
101aa     FC F6 F0 E8 
101ae     E3 E0 D8 D2 
101b2     D0 CD CB CE | 	byte	$20, $14, $0a, $04, $fc, $f6, $f0, $e8, $e3, $e0, $d8, $d2, $d0, $cd, $cb, $ce
101b6     D3 DB E5 EE 
101ba     F7 03 0F 1A 
101be     21 22 20 1A 
101c2     14 0C 01 F8 | 	byte	$d3, $db, $e5, $ee, $f7, $03, $0f, $1a, $21, $22, $20, $1a, $14, $0c, $01, $f8
101c6     F0 E9 E7 E9 
101ca     EA EC F1 F4 
101ce     F6 FB FD FC 
101d2     FC FF 01 03 | 	byte	$f0, $e9, $e7, $e9, $ea, $ec, $f1, $f4, $f6, $fb, $fd, $fc, $fc, $ff, $01, $03
101d6     0B 0F 14 1B 
101da     27 2F 35 3A 
101de     38 34 2F 28 
101e2     20 14 0A 01 | 	byte	$0b, $0f, $14, $1b, $27, $2f, $35, $3a, $38, $34, $2f, $28, $20, $14, $0a, $01
101e6     F9 F4 EF EC 
101ea     E9 E6 E5 E5 
101ee     E2 DE D8 D4 
101f2     D2 D0 CD CF | 	byte	$f9, $f4, $ef, $ec, $e9, $e6, $e5, $e5, $e2, $de, $d8, $d4, $d2, $d0, $cd, $cf
101f6     D5 D8 DF EB 
101fa     F7 FF 07 11 
101fe     16 1A 1B 1B 
10202     19 16 12 12 | 	byte	$d5, $d8, $df, $eb, $f7, $ff, $07, $11, $16, $1a, $1b, $1b, $19, $16, $12, $12
10206     10 0E 0E 0D 
1020a     0B 0C 0D 08 
1020e     03 FF FA F6 
10212     F3 F0 F1 F4 | 	byte	$10, $0e, $0e, $0d, $0b, $0c, $0d, $08, $03, $ff, $fa, $f6, $f3, $f0, $f1, $f4
10216     F4 F5 FD 01 
1021a     05 06 05 07 
1021e     06 04 05 04 
10222     04 05 08 0B | 	byte	$f4, $f5, $fd, $01, $05, $06, $05, $07, $06, $04, $05, $04, $04, $05, $08, $0b
10226     0E 0F 10 11 
1022a     10 0D 0A 06 
1022e     00 FA F7 F5 
10232     F3 F2 F4 F7 | 	byte	$0e, $0f, $10, $11, $10, $0d, $0a, $06, $00, $fa, $f7, $f5, $f3, $f2, $f4, $f7
10236     FA FC FC FC 
1023a     FC F9 F7 F7 
1023e     F5 F4 F4 F5 
10242     F9 FE FF 04 | 	byte	$fa, $fc, $fc, $fc, $fc, $f9, $f7, $f7, $f5, $f4, $f4, $f5, $f9, $fe, $ff, $04
10246     09 0B 0C 0D 
1024a     0C 0A 0A 08 
1024e     05 06 07 05 
10252     05 07 08 08 | 	byte	$09, $0b, $0c, $0d, $0c, $0a, $0a, $08, $05, $06, $07, $05, $05, $07, $08, $08
10256     07 06 05 02 
1025a     02 01 01 00 
1025e     01 FF FF 05 
10262     06 04 04 05 | 	byte	$07, $06, $05, $02, $02, $01, $01, $00, $01, $ff, $ff, $05, $06, $04, $04, $05
10266     02 00 FF FE 
1026a     FE FF 03 09 
1026e     0D 0F 10 10 
10272     0C 08 04 00 | 	byte	$02, $00, $ff, $fe, $fe, $ff, $03, $09, $0d, $0f, $10, $10, $0c, $08, $04, $00
10276     FA F8 F6 F5 
1027a     F8 FA FD FF 
1027e     02 04 09 0A 
10282     08 08 08 09 | 	byte	$fa, $f8, $f6, $f5, $f8, $fa, $fd, $ff, $02, $04, $09, $0a, $08, $08, $08, $09
10286     0C 0E 0E 11 
1028a     15 17 18 18 
1028e     15 11 0D 08 
10292     03 00 FB F6 | 	byte	$0c, $0e, $0e, $11, $15, $17, $18, $18, $15, $11, $0d, $08, $03, $00, $fb, $f6
10296     F6 F6 F6 F7 
1029a     F8 F7 F5 F6 
1029e     F7 F8 F9 FA 
102a2     FC FF 06 08 | 	byte	$f6, $f6, $f6, $f7, $f8, $f7, $f5, $f6, $f7, $f8, $f9, $fa, $fc, $ff, $06, $08
102a6     0B 0D 0E 0D 
102aa     0D 0E 0D 0C 
102ae     0A 0A 0B 0C 
102b2     0D 0C 0B 0A | 	byte	$0b, $0d, $0e, $0d, $0d, $0e, $0d, $0c, $0a, $0a, $0b, $0c, $0d, $0c, $0b, $0a
102b6     0A 0A 09 06 
102ba     04 04 02 02 
102be     03 04 03 01 
102c2     03 04 04 03 | 	byte	$0a, $0a, $09, $06, $04, $04, $02, $02, $03, $04, $03, $01, $03, $04, $04, $03
102c6     04 04 04 07 
102ca     0B 0D 0F 11 
102ce     15 16 15 14 
102d2     12 0C 08 06 | 	byte	$04, $04, $04, $07, $0b, $0d, $0f, $11, $15, $16, $15, $14, $12, $0c, $08, $06
102d6     02 FE FA F8 
102da     F6 F6 F5 F4 
102de     F1 F0 F0 EF 
102e2     EE EF F1 F2 | 	byte	$02, $fe, $fa, $f8, $f6, $f6, $f5, $f4, $f1, $f0, $f0, $ef, $ee, $ef, $f1, $f2
102e6     F5 F9 FE 03 
102ea     05 07 0A 0C 
102ee     0D 0D 0C 0C 
102f2     0A 08 08 08 | 	byte	$f5, $f9, $fe, $03, $05, $07, $0a, $0c, $0d, $0d, $0c, $0c, $0a, $08, $08, $08
102f6     05 01 FD FA 
102fa     F7 F4 F0 EF 
102fe     F0 F2 F3 F6 
10302     F9 FA FB FC | 	byte	$05, $01, $fd, $fa, $f7, $f4, $f0, $ef, $f0, $f2, $f3, $f6, $f9, $fa, $fb, $fc
10306     FE FF FF 03 
1030a     06 06 09 0E 
1030e     0E 0D 10 10 
10312     0E 0E 0D 0A | 	byte	$fe, $ff, $ff, $03, $06, $06, $09, $0e, $0e, $0d, $10, $10, $0e, $0e, $0d, $0a
10316     06 02 FE F9 
1031a     F8 F8 F8 F6 
1031e     F7 F9 FA FA 
10322     FA FA F8 F9 | 	byte	$06, $02, $fe, $f9, $f8, $f8, $f8, $f6, $f7, $f9, $fa, $fa, $fa, $fa, $f8, $f9
10326     FD FF 02 04 
1032a     05 05 05 04 
1032e     02 01 FE FA 
10332     F9 FA FA F9 | 	byte	$fd, $ff, $02, $04, $05, $05, $05, $04, $02, $01, $fe, $fa, $f9, $fa, $fa, $f9
10336     FA FA FA FB 
1033a     FC FC FC FB 
1033e     FC FE FF 01 
10342     03 05 07 07 | 	byte	$fa, $fa, $fa, $fb, $fc, $fc, $fc, $fb, $fc, $fe, $ff, $01, $03, $05, $07, $07
10346     08 08 06 05 
1034a     05 05 05 04 
1034e     04 04 02 00 
10352     01 00 FE FC | 	byte	$08, $08, $06, $05, $05, $05, $05, $04, $04, $04, $02, $00, $01, $00, $fe, $fc
10356     FC FD FF FF 
1035a     03 05 06 08 
1035e     0A 0B 0A 0A 
10362     0A 0A 08 08 | 	byte	$fc, $fd, $ff, $ff, $03, $05, $06, $08, $0a, $0b, $0a, $0a, $0a, $0a, $08, $08
10366     08 07 05 05 
1036a     05 05 03 02 
1036e     02 01 02 02 
10372     03 03 03 01 | 	byte	$08, $07, $05, $05, $05, $05, $03, $02, $02, $01, $02, $02, $03, $03, $03, $01
10376     01 01 00 FF 
1037a     FE FF 02 05 
1037e     05 06 07 07 
10382     07 07 08 08 | 	byte	$01, $01, $00, $ff, $fe, $ff, $02, $05, $05, $06, $07, $07, $07, $07, $08, $08
10386     08 09 08 09 
1038a     08 06 06 05 
1038e     04 03 02 03 
10392     03 02 02 02 | 	byte	$08, $09, $08, $09, $08, $06, $06, $05, $04, $03, $02, $03, $03, $02, $02, $02
10396     02 01 00 FF 
1039a     FE FD FC FD 
1039e     FD FE FF 02 
103a2     04 06 06 06 | 	byte	$02, $01, $00, $ff, $fe, $fd, $fc, $fd, $fd, $fe, $ff, $02, $04, $06, $06, $06
103a6     08 08 08 09 
103aa     09 09 0A 0A 
103ae     0A 0A 09 08 
103b2     08 08 08 06 | 	byte	$08, $08, $08, $09, $09, $09, $0a, $0a, $0a, $0a, $09, $08, $08, $08, $08, $06
103b6     05 04 04 02 
103ba     02 02 01 01 
103be     01 02 04 04 
103c2     06 06 06 08 | 	byte	$05, $04, $04, $02, $02, $02, $01, $01, $01, $02, $04, $04, $06, $06, $06, $08
103c6     08 09 0A 0B 
103ca     0C 0C 0C 0B 
103ce     0A 09 08 06 
103d2     05 04 04 04 | 	byte	$08, $09, $0a, $0b, $0c, $0c, $0c, $0b, $0a, $09, $08, $06, $05, $04, $04, $04
103d6     02 00 FF FD 
103da     FC FB F9 F9 
103de     FB FC FD FF 
103e2     FF 03 04 05 | 	byte	$02, $00, $ff, $fd, $fc, $fb, $f9, $f9, $fb, $fc, $fd, $ff, $ff, $03, $04, $05
103e6     05 05 05 06 
103ea     06 05 04 04 
103ee     04 03 03 03 
103f2     02 00 01 FF | 	byte	$05, $05, $05, $06, $06, $05, $04, $04, $04, $03, $03, $03, $02, $00, $01, $ff
103f6     FD FD FC FC 
103fa     FC FD FE FE 
103fe     FF 02 05 06 
10402     08 09 0A 0A | 	byte	$fd, $fd, $fc, $fc, $fc, $fd, $fe, $fe, $ff, $02, $05, $06, $08, $09, $0a, $0a
10406     08 08 09 08 
1040a     07 05 03 03 
1040e     01 FF FD FB 
10412     F9 F9 F8 F8 | 	byte	$08, $08, $09, $08, $07, $05, $03, $03, $01, $ff, $fd, $fb, $f9, $f9, $f8, $f8
10416     F8 F8 F9 FA 
1041a     FA FB FD FF 
1041e     02 05 07 09 
10422     0B 0B 0B 0C | 	byte	$f8, $f8, $f9, $fa, $fa, $fb, $fd, $ff, $02, $05, $07, $09, $0b, $0b, $0b, $0c
10426     0D 0C 0B 09 
1042a     0A 08 08 06 
1042e     04 04 03 01 
10432     FF FE FD FD | 	byte	$0d, $0c, $0b, $09, $0a, $08, $08, $06, $04, $04, $03, $01, $ff, $fe, $fd, $fd
10436     FC FB FB FA 
1043a     FA FA FA FB 
1043e     FA FB FB FC 
10442     FD FD FD FE | 	byte	$fc, $fb, $fb, $fa, $fa, $fa, $fa, $fb, $fa, $fb, $fb, $fc, $fd, $fd, $fd, $fe
10446     FE FD FC FB 
1044a     FA FA FB FA 
1044e     FB FC FC FD 
10452     FE FF 01 03 | 	byte	$fe, $fd, $fc, $fb, $fa, $fa, $fb, $fa, $fb, $fc, $fc, $fd, $fe, $ff, $01, $03
10456     03 04 05 07 
1045a     05 04 04 02 
1045e     00 00 FF FE 
10462     FF FE FE FF | 	byte	$03, $04, $05, $07, $05, $04, $04, $02, $00, $00, $ff, $fe, $ff, $fe, $fe, $ff
10466     FE FE FE FF 
1046a     FF FF FF 01 
1046e     02 00 01 01 
10472     02 02 02 03 | 	byte	$fe, $fe, $fe, $ff, $ff, $ff, $ff, $01, $02, $00, $01, $01, $02, $02, $02, $03
10476     05 05 07 05 
1047a     05 04 04 04 
1047e     05 06 06 07 
10482     07 07 08 08 | 	byte	$05, $05, $07, $05, $05, $04, $04, $04, $05, $06, $06, $07, $07, $07, $08, $08
10486     08 08 08 07 
1048a     06 05 04 04 
1048e     04 04 03 04 
10492     04 05 05 05 | 	byte	$08, $08, $08, $07, $06, $05, $04, $04, $04, $04, $03, $04, $04, $05, $05, $05
10496     06 06 05 05 
1049a     06 07 07 08 
1049e     08 08 08 06 
104a2     06 05 05 04 | 	byte	$06, $06, $05, $05, $06, $07, $07, $08, $08, $08, $08, $06, $06, $05, $05, $04
104a6     04 04 04 02 
104aa     02 01 FF FE 
104ae     FE FE FE FE 
104b2     FE FF FF 01 | 	byte	$04, $04, $04, $02, $02, $01, $ff, $fe, $fe, $fe, $fe, $fe, $fe, $ff, $ff, $01
104b6     02 03 04 05 
104ba     05 07 08 08 
104be     08 08 09 09 
104c2     08 09 08 08 | 	byte	$02, $03, $04, $05, $05, $07, $08, $08, $08, $08, $09, $09, $08, $09, $08, $08
104c6     07 05 04 03 
104ca     02 02 01 01 
104ce     01 01 01 02 
104d2     03 04 05 06 | 	byte	$07, $05, $04, $03, $02, $02, $01, $01, $01, $01, $01, $02, $03, $04, $05, $06
104d6     09 0B 0C 0D 
104da     0D 0E 0E 0E 
104de     0D 0C 0B 0B 
104e2     09 08 07 05 | 	byte	$09, $0b, $0c, $0d, $0d, $0e, $0e, $0e, $0d, $0c, $0b, $0b, $09, $08, $07, $05
104e6     05 05 04 03 
104ea     03 01 00 FF 
104ee     FF FE FE FF 
104f2     FF 01 02 04 | 	byte	$05, $05, $04, $03, $03, $01, $00, $ff, $ff, $fe, $fe, $ff, $ff, $01, $02, $04
104f6     05 05 06 07 
104fa     06 06 05 05 
104fe     04 02 02 00 
10502     FF FF FF 01 | 	byte	$05, $05, $06, $07, $06, $06, $05, $05, $04, $02, $02, $00, $ff, $ff, $ff, $01
10506     02 03 04 05 
1050a     06 04 02 02 
1050e     01 FF FE FD 
10512     FD FC FD FD | 	byte	$02, $03, $04, $05, $06, $04, $02, $02, $01, $ff, $fe, $fd, $fd, $fc, $fd, $fd
10516     FD FD FD FE 
1051a     FE FE FE FD 
1051e     FE FE FD FC 
10522     FC FE FE FF | 	byte	$fd, $fd, $fd, $fe, $fe, $fe, $fe, $fd, $fe, $fe, $fd, $fc, $fc, $fe, $fe, $ff
10526     FF 02 05 07 
1052a     06 06 06 05 
1052e     04 03 01 01 
10532     01 00 FF FE | 	byte	$ff, $02, $05, $07, $06, $06, $06, $05, $04, $03, $01, $01, $01, $00, $ff, $fe
10536     FF FF FF FF 
1053a     FE FE FE FD 
1053e     FE FF FF 01 
10542     04 04 05 05 | 	byte	$ff, $ff, $ff, $ff, $fe, $fe, $fe, $fd, $fe, $ff, $ff, $01, $04, $04, $05, $05
10546     06 05 04 04 
1054a     05 03 02 01 
1054e     00 FF FD FD 
10552     FC FC FD FD | 	byte	$06, $05, $04, $04, $05, $03, $02, $01, $00, $ff, $fd, $fd, $fc, $fc, $fd, $fd
10556     FD FE FE FE 
1055a     FD FD FD FD 
1055e     FD FD FD FC 
10562     FD FD FE FD | 	byte	$fd, $fe, $fe, $fe, $fd, $fd, $fd, $fd, $fd, $fd, $fd, $fc, $fd, $fd, $fe, $fd
10566     FD FE FE FF 
1056a     FF FF FF FE 
1056e     FE FE FE FF 
10572     FE FE FF FF | 	byte	$fd, $fe, $fe, $ff, $ff, $ff, $ff, $fe, $fe, $fe, $fe, $ff, $fe, $fe, $ff, $ff
10576     FF FF FF 00 
1057a     01 02 02 03 
1057e     02 03 03 02 
10582     01 02 01 01 | 	byte	$ff, $ff, $ff, $00, $01, $02, $02, $03, $02, $03, $03, $02, $01, $02, $01, $01
10586     01 01 FF FE 
1058a     FE FF FF FF 
1058e     01 02 02 04 
10592     04 06 07 08 | 	byte	$01, $01, $ff, $fe, $fe, $ff, $ff, $ff, $01, $02, $02, $04, $04, $06, $07, $08
10596     08 08 08 08 
1059a     07 07 07 06 
1059e     06 06 06 05 
105a2     04 04 05 04 | 	byte	$08, $08, $08, $08, $07, $07, $07, $06, $06, $06, $06, $05, $04, $04, $05, $04
105a6     04 05 04 04 
105aa     04 04 03 04 
105ae     04 05 04 05 
105b2     05 05 05 06 | 	byte	$04, $05, $04, $04, $04, $04, $03, $04, $04, $05, $04, $05, $05, $05, $05, $06
105b6     06 06 06 05 
105ba     05 04 03 02 
105be     02 01 02 01 
105c2     00 02 01 01 | 	byte	$06, $06, $06, $05, $05, $04, $03, $02, $02, $01, $02, $01, $00, $02, $01, $01
105c6     02 03 04 04 
105ca     05 05 05 06 
105ce     06 06 06 08 
105d2     08 08 08 08 | 	byte	$02, $03, $04, $04, $05, $05, $05, $06, $06, $06, $06, $08, $08, $08, $08, $08
105d6     08 08 07 07 
105da     05 05 05 04 
105de     04 04 04 04 
105e2     04 05 05 06 | 	byte	$08, $08, $07, $07, $05, $05, $05, $04, $04, $04, $04, $04, $04, $05, $05, $06
105e6     08 09 09 0A 
105ea     0C 0C 0B 0B 
105ee     0B 0C 0B 0A 
105f2     0B 0A 09 09 | 	byte	$08, $09, $09, $0a, $0c, $0c, $0b, $0b, $0b, $0c, $0b, $0a, $0b, $0a, $09, $09
105f6     08 08 06 06 
105fa     04 04 03 02 
105fe     02 01 01 01 
10602     00 FF FF 00 | 	byte	$08, $08, $06, $06, $04, $04, $03, $02, $02, $01, $01, $01, $00, $ff, $ff, $00
10606     02 02 02 02 
1060a     03 04 04 03 
1060e     04 04 04 03 
10612     03 03 03 03 | 	byte	$02, $02, $02, $02, $03, $04, $04, $03, $04, $04, $04, $03, $03, $03, $03, $03
10616     03 02 02 02 
1061a     01 01 FF FF 
1061e     FF FE FC FD 
10622     FD FC FD FD | 	byte	$03, $02, $02, $02, $01, $01, $ff, $ff, $ff, $fe, $fc, $fd, $fd, $fc, $fd, $fd
10626     FD FE FF FF 
1062a     FF FF FF 01 
1062e     01 01 02 03 
10632     03 03 03 04 | 	byte	$fd, $fe, $ff, $ff, $ff, $ff, $ff, $01, $01, $01, $02, $03, $03, $03, $03, $04
10636     04 04 03 02 
1063a     02 02 02 03 
1063e     02 01 00 01 
10642     01 00 00 01 | 	byte	$04, $04, $03, $02, $02, $02, $02, $03, $02, $01, $00, $01, $01, $00, $00, $01
10646     01 00 FF FE 
1064a     FE FE FE FE 
1064e     FD FE FF FF 
10652     FF FF 01 02 | 	byte	$01, $00, $ff, $fe, $fe, $fe, $fe, $fe, $fd, $fe, $ff, $ff, $ff, $ff, $01, $02
10656     03 03 05 05 
1065a     05 06 05 06 
1065e     06 05 05 04 
10662     04 03 02 02 | 	byte	$03, $03, $05, $05, $05, $06, $05, $06, $06, $05, $05, $04, $04, $03, $02, $02
10666     01 00 FF FE 
1066a     FD FD FC FB 
1066e     FB FB FB FB 
10672     FB FC FC FC | 	byte	$01, $00, $ff, $fe, $fd, $fd, $fc, $fb, $fb, $fb, $fb, $fb, $fb, $fc, $fc, $fc
10676     FC FD FE FD 
1067a     FD FD FD FC 
1067e     FD FE FE FA 
10682     F5 F5 F7 FD | 	byte	$fc, $fd, $fe, $fd, $fd, $fd, $fd, $fc, $fd, $fe, $fe, $fa, $f5, $f5, $f7, $fd
10686     FF FC FB FB 
1068a     FE FD FC FF 
1068e     03 0A 0A 05 
10692     02 02 05 07 | 	byte	$ff, $fc, $fb, $fb, $fe, $fd, $fc, $ff, $03, $0a, $0a, $05, $02, $02, $05, $07
10696     07 07 06 05 
1069a     01 FD FC FF 
1069e     03 05 04 01 
106a2     FF FE FB FB | 	byte	$07, $07, $06, $05, $01, $fd, $fc, $ff, $03, $05, $04, $01, $ff, $fe, $fb, $fb
106a6     FE 04 08 08 
106aa     05 02 04 07 
106ae     08 0A 0C 0E 
106b2     0C 09 06 05 | 	byte	$fe, $04, $08, $08, $05, $02, $04, $07, $08, $0a, $0c, $0e, $0c, $09, $06, $05
106b6     08 09 08 08 
106ba     07 06 02 00 
106be     FF 03 06 06 
106c2     06 04 03 02 | 	byte	$08, $09, $08, $08, $07, $06, $02, $00, $ff, $03, $06, $06, $06, $04, $03, $02
106c6     02 04 06 08 
106ca     08 06 04 04 
106ce     03 02 03 06 
106d2     06 06 05 01 | 	byte	$02, $04, $06, $08, $08, $06, $04, $04, $03, $02, $03, $06, $06, $06, $05, $01
106d6     FD FC FE FF 
106da     02 04 02 03 
106de     02 01 03 06 
106e2     09 0E 0E 0E | 	byte	$fd, $fc, $fe, $ff, $02, $04, $02, $03, $02, $01, $03, $06, $09, $0e, $0e, $0e
106e6     0B 0B 0C 0B 
106ea     0C 0E 0C 0A 
106ee     09 04 03 02 
106f2     02 04 03 02 | 	byte	$0b, $0b, $0c, $0b, $0c, $0e, $0c, $0a, $09, $04, $03, $02, $02, $04, $03, $02
106f6     00 FE FC FB 
106fa     FB FE FF FF 
106fe     03 01 01 02 
10702     03 07 09 0A | 	byte	$00, $fe, $fc, $fb, $fb, $fe, $ff, $ff, $03, $01, $01, $02, $03, $07, $09, $0a
10706     0B 0A 09 0A 
1070a     09 0A 0B 0C 
1070e     0D 0C 0A 09 
10712     09 08 0A 09 | 	byte	$0b, $0a, $09, $0a, $09, $0a, $0b, $0c, $0d, $0c, $0a, $09, $09, $08, $0a, $09
10716     07 01 FC FE 
1071a     00 04 04 00 
1071e     01 03 01 FF 
10722     FD 01 07 0A | 	byte	$07, $01, $fc, $fe, $00, $04, $04, $00, $01, $03, $01, $ff, $fd, $01, $07, $0a
10726     08 02 03 06 
1072a     08 08 08 09 
1072e     0A 0A 06 02 
10732     02 04 05 04 | 	byte	$08, $02, $03, $06, $08, $08, $08, $09, $0a, $0a, $06, $02, $02, $04, $05, $04
10736     01 FD FD FC 
1073a     FA F8 F7 F6 
1073e     F8 F7 F6 F4 
10742     F4 F7 F9 FA | 	byte	$01, $fd, $fd, $fc, $fa, $f8, $f7, $f6, $f8, $f7, $f6, $f4, $f4, $f7, $f9, $fa
10746     FA FB FC FE 
1074a     FF FF 02 06 
1074e     09 0A 07 05 
10752     06 09 0C 09 | 	byte	$fa, $fb, $fc, $fe, $ff, $ff, $02, $06, $09, $0a, $07, $05, $06, $09, $0c, $09
10756     06 03 02 02 
1075a     01 FC FC FF 
1075e     01 02 FF FE 
10762     FE FF FB F8 | 	byte	$06, $03, $02, $02, $01, $fc, $fc, $ff, $01, $02, $ff, $fe, $fe, $ff, $fb, $f8
10766     FA FF 02 00 
1076a     FD FC FD FD 
1076e     FC FD FF 05 
10772     08 06 04 05 | 	byte	$fa, $ff, $02, $00, $fd, $fc, $fd, $fd, $fc, $fd, $ff, $05, $08, $06, $04, $05
10776     04 07 0A 0A 
1077a     0C 0C 0C 08 
1077e     08 07 07 09 
10782     09 04 01 FF | 	byte	$04, $07, $0a, $0a, $0c, $0c, $0c, $08, $08, $07, $07, $09, $09, $04, $01, $ff
10786     FA F8 F8 F6 
1078a     F5 F5 F4 F0 
1078e     ED EB EC EE 
10792     EF EF F0 F2 | 	byte	$fa, $f8, $f8, $f6, $f5, $f5, $f4, $f0, $ed, $eb, $ec, $ee, $ef, $ef, $f0, $f2
10796     F4 F4 F5 F8 
1079a     FB FE 01 02 
1079e     02 03 04 05 
107a2     06 09 0A 09 | 	byte	$f4, $f4, $f5, $f8, $fb, $fe, $01, $02, $02, $03, $04, $05, $06, $09, $0a, $09
107a6     08 06 05 05 
107aa     07 06 08 08 
107ae     05 04 04 04 
107b2     05 06 08 08 | 	byte	$08, $06, $05, $05, $07, $06, $08, $08, $05, $04, $04, $04, $05, $06, $08, $08
107b6     06 06 05 05 
107ba     06 08 08 08 
107be     06 05 04 05 
107c2     05 07 08 09 | 	byte	$06, $06, $05, $05, $06, $08, $08, $08, $06, $05, $04, $05, $05, $07, $08, $09
107c6     08 07 05 04 
107ca     06 07 06 05 
107ce     06 04 03 04 
107d2     04 05 06 06 | 	byte	$08, $07, $05, $04, $06, $07, $06, $05, $06, $04, $03, $04, $04, $05, $06, $06
107d6     04 01 FF FF 
107da     02 05 06 05 
107de     06 09 0C 08 
107e2     00 F5 F7 FA | 	byte	$04, $01, $ff, $ff, $02, $05, $06, $05, $06, $09, $0c, $08, $00, $f5, $f7, $fa
107e6     FC FA F5 F5 
107ea     F7 F4 EC EB 
107ee     F2 FD 05 08 
107f2     03 05 0D 13 | 	byte	$fc, $fa, $f5, $f5, $f7, $f4, $ec, $eb, $f2, $fd, $05, $08, $03, $05, $0d, $13
107f6     17 1D 22 2A 
107fa     2F 29 21 20 
107fe     22 25 24 20 
10802     18 10 0D 04 | 	byte	$17, $1d, $22, $2a, $2f, $29, $21, $20, $22, $25, $24, $20, $18, $10, $0d, $04
10806     FC F4 F2 F2 
1080a     F1 E8 E0 DA 
1080e     DC DE E0 E2 
10812     E3 E8 EB EC | 	byte	$fc, $f4, $f2, $f2, $f1, $e8, $e0, $da, $dc, $de, $e0, $e2, $e3, $e8, $eb, $ec
10816     ED F1 F9 03 
1081a     0A 0C 0C 0E 
1081e     12 17 18 19 
10822     1D 20 1E 19 | 	byte	$ed, $f1, $f9, $03, $0a, $0c, $0c, $0e, $12, $17, $18, $19, $1d, $20, $1e, $19
10826     14 12 13 15 
1082a     13 0E 0B 08 
1082e     06 04 01 01 
10832     04 05 04 00 | 	byte	$14, $12, $13, $15, $13, $0e, $0b, $08, $06, $04, $01, $01, $04, $05, $04, $00
10836     FF FF 02 05 
1083a     06 07 08 09 
1083e     08 08 09 0A 
10842     0B 0C 0A 06 | 	byte	$ff, $ff, $02, $05, $06, $07, $08, $09, $08, $08, $09, $0a, $0b, $0c, $0a, $06
10846     05 05 04 04 
1084a     04 01 00 00 
1084e     FF FD FD FD 
10852     FF FE FD FC | 	byte	$05, $05, $04, $04, $04, $01, $00, $00, $ff, $fd, $fd, $fd, $ff, $fe, $fd, $fc
10856     FB FB FD FF 
1085a     01 00 FE FC 
1085e     F9 FA FB FD 
10862     FF 02 03 01 | 	byte	$fb, $fb, $fd, $ff, $01, $00, $fe, $fc, $f9, $fa, $fb, $fd, $ff, $02, $03, $01
10866     00 F8 F1 F5 
1086a     F7 FB FF FC 
1086e     F8 F6 F7 F3 
10872     F7 FF 04 08 | 	byte	$00, $f8, $f1, $f5, $f7, $fb, $ff, $fc, $f8, $f6, $f7, $f3, $f7, $ff, $04, $08
10876     0C 08 02 09 
1087a     0E 10 16 1B 
1087e     19 19 18 10 
10882     0D 11 11 10 | 	byte	$0c, $08, $02, $09, $0e, $10, $16, $1b, $19, $19, $18, $10, $0d, $11, $11, $10
10886     0E 06 FC F8 
1088a     F4 EF EE EE 
1088e     EA E7 E0 DB 
10892     D8 DB DF E5 | 	byte	$0e, $06, $fc, $f8, $f4, $ef, $ee, $ee, $ea, $e7, $e0, $db, $d8, $db, $df, $e5
10896     E8 E9 E9 E8 
1089a     E7 EB F1 F7 
1089e     FF 00 01 01 
108a2     01 02 07 0E | 	byte	$e8, $e9, $e9, $e8, $e7, $eb, $f1, $f7, $ff, $00, $01, $01, $01, $02, $07, $0e
108a6     12 15 16 10 
108aa     0D 0E 0F 12 
108ae     16 14 10 0D 
108b2     08 02 03 04 | 	byte	$12, $15, $16, $10, $0d, $0e, $0f, $12, $16, $14, $10, $0d, $08, $02, $03, $04
108b6     04 04 00 FA 
108ba     F6 F5 F3 F4 
108be     F7 F9 F9 F8 
108c2     F7 F7 FA FD | 	byte	$04, $04, $00, $fa, $f6, $f5, $f3, $f4, $f7, $f9, $f9, $f8, $f7, $f7, $fa, $fd
108c6     02 07 07 06 
108ca     06 06 07 08 
108ce     0C 0F 12 11 
108d2     0C 04 01 05 | 	byte	$02, $07, $07, $06, $06, $06, $07, $08, $0c, $0f, $12, $11, $0c, $04, $01, $05
108d6     0D 12 10 08 
108da     02 00 FF 01 
108de     01 FD F7 F7 
108e2     F0 EA EA EC | 	byte	$0d, $12, $10, $08, $02, $00, $ff, $01, $01, $fd, $f7, $f7, $f0, $ea, $ea, $ec
108e6     EE F7 F9 EE 
108ea     F2 FB FD 05 
108ee     13 15 1D 2C 
108f2     29 23 2F 35 | 	byte	$ee, $f7, $f9, $ee, $f2, $fb, $fd, $05, $13, $15, $1d, $2c, $29, $23, $2f, $35
108f6     39 42 40 31 
108fa     32 30 24 1C 
108fe     19 10 0C 08 
10902     F2 E2 DE D6 | 	byte	$39, $42, $40, $31, $32, $30, $24, $1c, $19, $10, $0c, $08, $f2, $e2, $de, $d6
10906     D2 D1 CA C5 
1090a     C8 C4 C0 C4 
1090e     CA D2 DA DA 
10912     DB E2 EA F3 | 	byte	$d2, $d1, $ca, $c5, $c8, $c4, $c0, $c4, $ca, $d2, $da, $da, $db, $e2, $ea, $f3
10916     FC 03 0B 14 
1091a     15 15 1B 20 
1091e     27 2E 2D 28 
10922     2B 2A 25 26 | 	byte	$fc, $03, $0b, $14, $15, $15, $1b, $20, $27, $2e, $2d, $28, $2b, $2a, $25, $26
10926     28 23 24 21 
1092a     15 10 10 0C 
1092e     0C 0D 08 03 
10932     02 00 FC FE | 	byte	$28, $23, $24, $21, $15, $10, $10, $0c, $0c, $0d, $08, $03, $02, $00, $fc, $fe
10936     01 03 06 05 
1093a     02 03 05 07 
1093e     0B 0D 0C 0C 
10942     0A 08 0A 0B | 	byte	$01, $03, $06, $05, $02, $03, $05, $07, $0b, $0d, $0c, $0c, $0a, $08, $0a, $0b
10946     0D 10 0E 08 
1094a     04 02 00 FF 
1094e     FF 01 04 03 
10952     FE F9 FA F9 | 	byte	$0d, $10, $0e, $08, $04, $02, $00, $ff, $ff, $01, $04, $03, $fe, $f9, $fa, $f9
10956     F5 F0 ED EE 
1095a     EF F1 F0 ED 
1095e     EF F7 F6 F7 
10962     FF 07 0E 17 | 	byte	$f5, $f0, $ed, $ee, $ef, $f1, $f0, $ed, $ef, $f7, $f6, $f7, $ff, $07, $0e, $17
10966     18 18 23 2B 
1096a     2D 33 36 36 
1096e     39 38 30 2A 
10972     29 22 1C 16 | 	byte	$18, $18, $23, $2b, $2d, $33, $36, $36, $39, $38, $30, $2a, $29, $22, $1c, $16
10976     08 FE F8 EE 
1097a     E0 D8 D0 C9 
1097e     C6 C0 B4 B3 
10982     B6 B7 B9 BB | 	byte	$08, $fe, $f8, $ee, $e0, $d8, $d0, $c9, $c6, $c0, $b4, $b3, $b6, $b7, $b9, $bb
10986     BC C1 C9 CE 
1098a     D3 DB E3 EE 
1098e     F7 FB 03 0C 
10992     15 1C 21 24 | 	byte	$bc, $c1, $c9, $ce, $d3, $db, $e3, $ee, $f7, $fb, $03, $0c, $15, $1c, $21, $24
10996     2C 31 30 30 
1099a     2E 2D 2F 30 
1099e     2A 23 22 20 
109a2     18 14 0E 0A | 	byte	$2c, $31, $30, $30, $2e, $2d, $2f, $30, $2a, $23, $22, $20, $18, $14, $0e, $0a
109a6     0C 08 01 FD 
109aa     FA F9 FB F8 
109ae     F4 F3 F5 F7 
109b2     F7 F6 F6 F8 | 	byte	$0c, $08, $01, $fd, $fa, $f9, $fb, $f8, $f4, $f3, $f5, $f7, $f7, $f6, $f6, $f8
109b6     FD FC F8 F6 
109ba     F6 F7 FA F9 
109be     F9 FA FC FE 
109c2     FE FF 03 05 | 	byte	$fd, $fc, $f8, $f6, $f6, $f7, $fa, $f9, $f9, $fa, $fc, $fe, $fe, $ff, $03, $05
109c6     07 07 06 07 
109ca     08 00 F2 F3 
109ce     F5 F4 F9 F6 
109d2     EC ED F2 ED | 	byte	$07, $07, $06, $07, $08, $00, $f2, $f3, $f5, $f4, $f9, $f6, $ec, $ed, $f2, $ed
109d6     EB F7 FE 03 
109da     0D 0E 0B 15 
109de     1F 24 2D 35 
109e2     37 3B 3D 35 | 	byte	$eb, $f7, $fe, $03, $0d, $0e, $0b, $15, $1f, $24, $2d, $35, $37, $3b, $3d, $35
109e6     32 36 34 30 
109ea     2C 20 14 0D 
109ee     02 F6 EE E8 
109f2     DD D6 CC C0 | 	byte	$32, $36, $34, $30, $2c, $20, $14, $0d, $02, $f6, $ee, $e8, $dd, $d6, $cc, $c0
109f6     BA BA B8 B7 
109fa     B6 B4 B6 B9 
109fe     BC BD C3 CF 
10a02     D9 E1 E5 E9 | 	byte	$ba, $ba, $b8, $b7, $b6, $b4, $b6, $b9, $bc, $bd, $c3, $cf, $d9, $e1, $e5, $e9
10a06     F3 FD 07 12 
10a0a     1A 23 2B 2F 
10a0e     31 36 3D 45 
10a12     49 48 41 3E | 	byte	$f3, $fd, $07, $12, $1a, $23, $2b, $2f, $31, $36, $3d, $45, $49, $48, $41, $3e
10a16     3C 38 33 2E 
10a1a     29 24 1C 12 
10a1e     08 02 00 FD 
10a22     F8 F2 ED EA | 	byte	$3c, $38, $33, $2e, $29, $24, $1c, $12, $08, $02, $00, $fd, $f8, $f2, $ed, $ea
10a26     EA E8 E8 EA 
10a2a     EE F2 F4 F2 
10a2e     F2 F6 FE 05 
10a32     08 09 0A 0F | 	byte	$ea, $e8, $e8, $ea, $ee, $f2, $f4, $f2, $f2, $f6, $fe, $05, $08, $09, $0a, $0f
10a36     12 17 19 16 
10a3a     17 1B 1C 16 
10a3e     10 04 FB FD 
10a42     FE F8 F4 F4 | 	byte	$12, $17, $19, $16, $17, $1b, $1c, $16, $10, $04, $fb, $fd, $fe, $f8, $f4, $f4
10a46     F1 EF EF EC 
10a4a     EF FB 02 06 
10a4e     09 0D 12 1D 
10a52     24 29 31 39 | 	byte	$f1, $ef, $ef, $ec, $ef, $fb, $02, $06, $09, $0d, $12, $1d, $24, $29, $31, $39
10a56     3E 40 40 3D 
10a5a     3D 3E 3B 34 
10a5e     2E 26 1C 16 
10a62     0C 04 FC F4 | 	byte	$3e, $40, $40, $3d, $3d, $3e, $3b, $34, $2e, $26, $1c, $16, $0c, $04, $fc, $f4
10a66     EC E0 D5 CA 
10a6a     C3 C0 BB B6 
10a6e     B2 AE AE AE 
10a72     AF B2 B7 BD | 	byte	$ec, $e0, $d5, $ca, $c3, $c0, $bb, $b6, $b2, $ae, $ae, $ae, $af, $b2, $b7, $bd
10a76     C3 C7 CD D6 
10a7a     DF E9 F2 FB 
10a7e     03 0B 13 19 
10a82     21 2B 32 37 | 	byte	$c3, $c7, $cd, $d6, $df, $e9, $f2, $fb, $03, $0b, $13, $19, $21, $2b, $32, $37
10a86     3B 3C 3D 3F 
10a8a     3E 3C 3A 36 
10a8e     30 2A 23 1B 
10a92     15 11 0C 06 | 	byte	$3b, $3c, $3d, $3f, $3e, $3c, $3a, $36, $30, $2a, $23, $1b, $15, $11, $0c, $06
10a96     01 FA F2 F0 
10a9a     EE EB EB EB 
10a9e     E9 EA EA EB 
10aa2     ED F3 F9 FC | 	byte	$01, $fa, $f2, $f0, $ee, $eb, $eb, $eb, $e9, $ea, $ea, $eb, $ed, $f3, $f9, $fc
10aa6     FB FB FC FF 
10aaa     08 0D 11 15 
10aae     18 18 14 15 
10ab2     18 16 0D 03 | 	byte	$fb, $fb, $fc, $ff, $08, $0d, $11, $15, $18, $18, $14, $15, $18, $16, $0d, $03
10ab6     FE F8 F7 F7 
10aba     F2 EA E9 E8 
10abe     E2 DD DF E7 
10ac2     ED F6 F8 F9 | 	byte	$fe, $f8, $f7, $f7, $f2, $ea, $e9, $e8, $e2, $dd, $df, $e7, $ed, $f6, $f8, $f9
10ac6     FF 0B 13 1D 
10aca     25 2F 37 3B 
10ace     3A 3A 3C 3D 
10ad2     3D 3B 31 28 | 	byte	$ff, $0b, $13, $1d, $25, $2f, $37, $3b, $3a, $3a, $3c, $3d, $3d, $3b, $31, $28
10ad6     23 19 10 08 
10ada     00 F6 ED E1 
10ade     D0 C4 BC B4 
10ae2     AE A9 A4 A0 | 	byte	$23, $19, $10, $08, $00, $f6, $ed, $e1, $d0, $c4, $bc, $b4, $ae, $a9, $a4, $a0
10ae6     A0 9E 9D 9F 
10aea     A5 AA B1 B8 
10aee     BE C7 D1 DB 
10af2     E5 EF FB 07 | 	byte	$a0, $9e, $9d, $9f, $a5, $aa, $b1, $b8, $be, $c7, $d1, $db, $e5, $ef, $fb, $07
10af6     13 1C 26 2F 
10afa     39 41 49 4E 
10afe     53 55 57 56 
10b02     54 50 4C 46 | 	byte	$13, $1c, $26, $2f, $39, $41, $49, $4e, $53, $55, $57, $56, $54, $50, $4c, $46
10b06     40 38 30 28 
10b0a     20 15 0C 04 
10b0e     FD F8 F1 EC 
10b12     E9 E8 E7 E7 | 	byte	$40, $38, $30, $28, $20, $15, $0c, $04, $fd, $f8, $f1, $ec, $e9, $e8, $e7, $e7
10b16     E6 E6 E7 EA 
10b1a     ED F2 F7 FB 
10b1e     FF 05 05 07 
10b22     0D 13 17 1D | 	byte	$e6, $e6, $e7, $ea, $ed, $f2, $f7, $fb, $ff, $05, $05, $07, $0d, $13, $17, $1d
10b26     25 24 20 24 
10b2a     20 10 08 04 
10b2e     02 FC FA F6 
10b32     EC E2 E1 DB | 	byte	$25, $24, $20, $24, $20, $10, $08, $04, $02, $fc, $fa, $f6, $ec, $e2, $e1, $db
10b36     D3 DA EA EC 
10b3a     E9 F0 ED ED 
10b3e     FF 0F 15 22 
10b42     2F 33 37 3A | 	byte	$d3, $da, $ea, $ec, $e9, $f0, $ed, $ed, $ff, $0f, $15, $22, $2f, $33, $37, $3a
10b46     3A 43 4F 50 
10b4a     4D 48 40 36 
10b4e     30 26 1D 18 
10b52     10 01 F5 E5 | 	byte	$3a, $43, $4f, $50, $4d, $48, $40, $36, $30, $26, $1d, $18, $10, $01, $f5, $e5
10b56     D8 D0 CA C0 
10b5a     BA B2 A9 A5 
10b5e     A4 A2 A5 AB 
10b62     B0 B2 B9 BE | 	byte	$d8, $d0, $ca, $c0, $ba, $b2, $a9, $a5, $a4, $a2, $a5, $ab, $b0, $b2, $b9, $be
10b66     C5 CF D9 DF 
10b6a     EA F5 FD 07 
10b6e     13 1D 27 33 
10b72     3B 41 47 4C | 	byte	$c5, $cf, $d9, $df, $ea, $f5, $fd, $07, $13, $1d, $27, $33, $3b, $41, $47, $4c
10b76     52 55 57 57 
10b7a     56 53 4D 46 
10b7e     41 3B 34 29 
10b82     20 14 0B 04 | 	byte	$52, $55, $57, $57, $56, $53, $4d, $46, $41, $3b, $34, $29, $20, $14, $0b, $04
10b86     FD F6 F1 ED 
10b8a     E8 E5 E3 E0 
10b8e     E3 E7 E9 EB 
10b92     ED F1 F4 F5 | 	byte	$fd, $f6, $f1, $ed, $e8, $e5, $e3, $e0, $e3, $e7, $e9, $eb, $ed, $f1, $f4, $f5
10b96     F8 FE 03 05 
10b9a     07 0A 0C 0F 
10b9e     17 1E 1C 1A 
10ba2     1B 12 00 FA | 	byte	$f8, $fe, $03, $05, $07, $0a, $0c, $0f, $17, $1e, $1c, $1a, $1b, $12, $00, $fa
10ba6     F9 F5 F5 F9 
10baa     F0 E0 DA D8 
10bae     D1 D3 DE E1 
10bb2     E3 E7 E2 E3 | 	byte	$f9, $f5, $f5, $f9, $f0, $e0, $da, $d8, $d1, $d3, $de, $e1, $e3, $e7, $e2, $e3
10bb6     EF FB 0A 15 
10bba     1B 21 2A 2D 
10bbe     31 3D 45 4B 
10bc2     4F 48 40 3A | 	byte	$ef, $fb, $0a, $15, $1b, $21, $2a, $2d, $31, $3d, $45, $4b, $4f, $48, $40, $3a
10bc6     34 2E 28 20 
10bca     18 0C 00 F0 
10bce     E2 DC D4 CC 
10bd2     C4 B8 AE A6 | 	byte	$34, $2e, $28, $20, $18, $0c, $00, $f0, $e2, $dc, $d4, $cc, $c4, $b8, $ae, $a6
10bd6     A1 9E 9F A1 
10bda     A5 A8 AB AD 
10bde     B3 BD C7 CF 
10be2     D9 E2 EB F4 | 	byte	$a1, $9e, $9f, $a1, $a5, $a8, $ab, $ad, $b3, $bd, $c7, $cf, $d9, $e2, $eb, $f4
10be6     FF 0A 17 25 
10bea     2F 35 3B 3F 
10bee     44 4B 4F 50 
10bf2     4F 4A 44 40 | 	byte	$ff, $0a, $17, $25, $2f, $35, $3b, $3f, $44, $4b, $4f, $50, $4f, $4a, $44, $40
10bf6     38 30 2B 24 
10bfa     1A 10 08 00 
10bfe     FB F8 F6 F0 
10c02     EF EE EC EA | 	byte	$38, $30, $2b, $24, $1a, $10, $08, $00, $fb, $f8, $f6, $f0, $ef, $ee, $ec, $ea
10c06     ED F0 F5 F7 
10c0a     F8 FA FB FB 
10c0e     FE 02 06 09 
10c12     0A 0B 0C 0C | 	byte	$ed, $f0, $f5, $f7, $f8, $fa, $fb, $fb, $fe, $02, $06, $09, $0a, $0b, $0c, $0c
10c16     0F 17 1D 20 
10c1a     1D 18 0C FC 
10c1e     FA FE FC FD 
10c22     FD F0 E1 DE | 	byte	$0f, $17, $1d, $20, $1d, $18, $0c, $fc, $fa, $fe, $fc, $fd, $fd, $f0, $e1, $de
10c26     D8 D1 DB E4 
10c2a     E2 E5 E6 E0 
10c2e     E3 EF FA 07 
10c32     13 1B 20 25 | 	byte	$d8, $d1, $db, $e4, $e2, $e5, $e6, $e0, $e3, $ef, $fa, $07, $13, $1b, $20, $25
10c36     28 2F 3D 45 
10c3a     4D 50 48 41 
10c3e     3D 36 31 2F 
10c42     28 20 16 08 | 	byte	$28, $2f, $3d, $45, $4d, $50, $48, $41, $3d, $36, $31, $2f, $28, $20, $16, $08
10c46     FA F0 E8 DE 
10c4a     D6 CD C0 B5 
10c4e     AC A6 A4 A6 
10c52     A7 A8 AB AD | 	byte	$fa, $f0, $e8, $de, $d6, $cd, $c0, $b5, $ac, $a6, $a4, $a6, $a7, $a8, $ab, $ad
10c56     B1 B7 BF CA 
10c5a     D5 DF E7 EF 
10c5e     FB 07 13 21 
10c62     2D 35 3B 3F | 	byte	$b1, $b7, $bf, $ca, $d5, $df, $e7, $ef, $fb, $07, $13, $21, $2d, $35, $3b, $3f
10c66     46 4D 53 55 
10c6a     55 53 4D 44 
10c6e     40 39 32 2C 
10c72     24 1C 14 0C | 	byte	$46, $4d, $53, $55, $55, $53, $4d, $44, $40, $39, $32, $2c, $24, $1c, $14, $0c
10c76     08 04 00 FD 
10c7a     FD F9 F5 F4 
10c7e     F3 F2 F5 FB 
10c82     FC FA FC FE | 	byte	$08, $04, $00, $fd, $fd, $f9, $f5, $f4, $f3, $f2, $f5, $fb, $fc, $fa, $fc, $fe
10c86     FF FF 07 0B 
10c8a     0A 0A 0A 0A 
10c8e     0D 12 19 1E 
10c92     20 1D 1A 10 | 	byte	$ff, $ff, $07, $0b, $0a, $0a, $0a, $0a, $0d, $12, $19, $1e, $20, $1d, $1a, $10
10c96     00 FB FF FC 
10c9a     FD 00 F0 E0 
10c9e     E1 DC D0 D9 
10ca2     E2 E0 E1 E3 | 	byte	$00, $fb, $ff, $fc, $fd, $00, $f0, $e0, $e1, $dc, $d0, $d9, $e2, $e0, $e1, $e3
10ca6     DC DD E7 F3 
10caa     FF 09 12 1A 
10cae     20 23 27 33 
10cb2     3B 42 48 44 | 	byte	$dc, $dd, $e7, $f3, $ff, $09, $12, $1a, $20, $23, $27, $33, $3b, $42, $48, $44
10cb6     3B 38 33 2D 
10cba     2A 22 1B 14 
10cbe     08 FC F0 E8 
10cc2     E0 DA D2 C8 | 	byte	$3b, $38, $33, $2d, $2a, $22, $1b, $14, $08, $fc, $f0, $e8, $e0, $da, $d2, $c8
10cc6     BC B5 B0 AC 
10cca     AB AC AF B3 
10cce     B6 B9 BE C7 
10cd2     CF D9 E1 E9 | 	byte	$bc, $b5, $b0, $ac, $ab, $ac, $af, $b3, $b6, $b9, $be, $c7, $cf, $d9, $e1, $e9
10cd6     EF FA 03 0E 
10cda     17 23 2B 32 
10cde     37 3A 3F 44 
10ce2     46 45 42 40 | 	byte	$ef, $fa, $03, $0e, $17, $23, $2b, $32, $37, $3a, $3f, $44, $46, $45, $42, $40
10ce6     39 32 2C 28 
10cea     22 1C 15 0D 
10cee     04 00 FD FA 
10cf2     F6 F5 F3 EE | 	byte	$39, $32, $2c, $28, $22, $1c, $15, $0d, $04, $00, $fd, $fa, $f6, $f5, $f3, $ee
10cf6     EF EF ED EE 
10cfa     F3 F7 F7 F8 
10cfe     FA F8 F8 FB 
10d02     FF 03 04 04 | 	byte	$ef, $ef, $ed, $ee, $f3, $f7, $f7, $f8, $fa, $f8, $f8, $fb, $ff, $03, $04, $04
10d06     06 07 09 0F 
10d0a     15 19 1C 14 
10d0e     00 F0 F6 F4 
10d12     F3 FE F4 E0 | 	byte	$06, $07, $09, $0f, $15, $19, $1c, $14, $00, $f0, $f6, $f4, $f3, $fe, $f4, $e0
10d16     DE DC C8 C7 
10d1a     DB DC DB E5 
10d1e     E0 D5 DF ED 
10d22     FB 0A 15 21 | 	byte	$de, $dc, $c8, $c7, $db, $dc, $db, $e5, $e0, $d5, $df, $ed, $fb, $0a, $15, $21
10d26     29 28 2D 37 
10d2a     42 4F 59 56 
10d2e     4C 48 40 38 
10d32     35 2E 26 22 | 	byte	$29, $28, $2d, $37, $42, $4f, $59, $56, $4c, $48, $40, $38, $35, $2e, $26, $22
10d36     15 06 F8 EA 
10d3a     E0 D8 D2 C5 
10d3e     B8 AC A4 9C 
10d42     9A 9C 9F A5 | 	byte	$15, $06, $f8, $ea, $e0, $d8, $d2, $c5, $b8, $ac, $a4, $9c, $9a, $9c, $9f, $a5
10d46     A8 AB AF B7 
10d4a     C3 CE D9 E5 
10d4e     EF F7 03 0F 
10d52     19 2A 37 3F | 	byte	$a8, $ab, $af, $b7, $c3, $ce, $d9, $e5, $ef, $f7, $03, $0f, $19, $2a, $37, $3f
10d56     46 49 4D 53 
10d5a     56 57 56 50 
10d5e     48 41 3A 30 
10d62     29 25 20 14 | 	byte	$46, $49, $4d, $53, $56, $57, $56, $50, $48, $41, $3a, $30, $29, $25, $20, $14
10d66     0C 02 FE FB 
10d6a     F8 F3 F5 F4 
10d6e     F0 F1 F2 F1 
10d72     F6 FD 01 02 | 	byte	$0c, $02, $fe, $fb, $f8, $f3, $f5, $f4, $f0, $f1, $f2, $f1, $f6, $fd, $01, $02
10d76     03 03 07 09 
10d7a     0B 0D 11 15 
10d7e     15 1B 22 21 
10d82     21 20 18 04 | 	byte	$03, $03, $07, $09, $0b, $0d, $11, $15, $15, $1b, $22, $21, $21, $20, $18, $04
10d86     FF 06 01 FE 
10d8a     FF F8 E8 E1 
10d8e     E3 D8 D5 DF 
10d92     E5 E4 E6 E6 | 	byte	$ff, $06, $01, $fe, $ff, $f8, $e8, $e1, $e3, $d8, $d5, $df, $e5, $e4, $e6, $e6
10d96     E4 EB F9 05 
10d9a     0F 19 23 29 
10d9e     2C 33 3B 42 
10da2     4B 51 4D 46 | 	byte	$e4, $eb, $f9, $05, $0f, $19, $23, $29, $2c, $33, $3b, $42, $4b, $51, $4d, $46
10da6     40 3A 34 2E 
10daa     28 20 18 0D 
10dae     00 F4 E8 DD 
10db2     D6 D0 C4 B8 | 	byte	$40, $3a, $34, $2e, $28, $20, $18, $0d, $00, $f4, $e8, $dd, $d6, $d0, $c4, $b8
10db6     B0 A6 A1 A0 
10dba     A1 A2 A5 A9 
10dbe     AD B1 B7 BF 
10dc2     CB D5 DF E9 | 	byte	$b0, $a6, $a1, $a0, $a1, $a2, $a5, $a9, $ad, $b1, $b7, $bf, $cb, $d5, $df, $e9
10dc6     F3 FD 07 13 
10dca     1E 29 33 3A 
10dce     3F 42 45 49 
10dd2     4C 4C 49 44 | 	byte	$f3, $fd, $07, $13, $1e, $29, $33, $3a, $3f, $42, $45, $49, $4c, $4c, $49, $44
10dd6     3C 35 30 28 
10dda     23 1D 16 10 
10dde     08 00 FD FA 
10de2     F8 F6 F4 F1 | 	byte	$3c, $35, $30, $28, $23, $1d, $16, $10, $08, $00, $fd, $fa, $f8, $f6, $f4, $f1
10de6     EE ED EF F0 
10dea     F5 F7 F9 FB 
10dee     FB FD FF 04 
10df2     09 0D 13 17 | 	byte	$ee, $ed, $ef, $f0, $f5, $f7, $f9, $fb, $fb, $fd, $ff, $04, $09, $0d, $13, $17
10df6     1B 1F 23 21 
10dfa     14 04 05 0C 
10dfe     09 04 F9 E8 
10e02     DA D7 D0 C5 | 	byte	$1b, $1f, $23, $21, $14, $04, $05, $0c, $09, $04, $f9, $e8, $da, $d7, $d0, $c5
10e06     CD D8 D7 D2 
10e0a     D2 D2 DB EE 
10e0e     FF 0D 17 25 
10e12     33 36 3D 49 | 	byte	$cd, $d8, $d7, $d2, $d2, $d2, $db, $ee, $ff, $0d, $17, $25, $33, $36, $3d, $49
10e16     54 5B 60 58 
10e1a     44 3D 36 2C 
10e1e     24 18 04 F8 
10e22     E8 D0 BA AD | 	byte	$54, $5b, $60, $58, $44, $3d, $36, $2c, $24, $18, $04, $f8, $e8, $d0, $ba, $ad
10e26     A7 A4 9C 8D 
10e2a     84 87 8F 9B 
10e2e     A5 B2 BF CF 
10e32     DB E5 F3 FF | 	byte	$a7, $a4, $9c, $8d, $84, $87, $8f, $9b, $a5, $b2, $bf, $cf, $db, $e5, $f3, $ff
10e36     17 24 26 25 
10e3a     27 2A 2C 26 
10e3e     20 1A 14 0C 
10e42     00 F8 F7 F8 | 	byte	$17, $24, $26, $25, $27, $2a, $2c, $26, $20, $1a, $14, $0c, $00, $f8, $f7, $f8
10e46     FA F8 F6 FA 
10e4a     03 0B 13 19 
10e4e     1F 27 2F 32 
10e52     34 36 3B 3C | 	byte	$fa, $f8, $f6, $fa, $03, $0b, $13, $19, $1f, $27, $2f, $32, $34, $36, $3b, $3c
10e56     36 2D 25 20 
10e5a     1D 16 08 FA 
10e5e     EE E8 E7 EB 
10e62     ED EC EC ED | 	byte	$36, $2d, $25, $20, $1d, $16, $08, $fa, $ee, $e8, $e7, $eb, $ed, $ec, $ec, $ed
10e66     F5 FF 1F 47 
10e6a     65 58 20 D0 
10e6e     D7 FF 10 0B 
10e72     F4 CC B8 B3 | 	byte	$f5, $ff, $1f, $47, $65, $58, $20, $d0, $d7, $ff, $10, $0b, $f4, $cc, $b8, $b3
10e76     A4 9D BF EF 
10e7a     02 F8 EE F3 
10e7e     0F 3F 67 7B 
10e82     7F 7F 7F 74 | 	byte	$a4, $9d, $bf, $ef, $02, $f8, $ee, $f3, $0f, $3f, $67, $7b, $7f, $7f, $7f, $74
10e86     68 60 5C 5D 
10e8a     50 28 00 E4 
10e8e     D0 C0 B2 A0 
10e92     90 88 80 80 | 	byte	$68, $60, $5c, $5d, $50, $28, $00, $e4, $d0, $c0, $b2, $a0, $90, $88, $80, $80
10e96     80 8B AF CF 
10e9a     DD DE E7 FD 
10e9e     15 2B 39 43 
10ea2     45 38 20 10 | 	byte	$80, $8b, $af, $cf, $dd, $de, $e7, $fd, $15, $2b, $39, $43, $45, $38, $20, $10
10ea6     09 0D 08 F2 
10eaa     D8 C4 BC BB 
10eae     BF C7 CF DA 
10eb2     E1 E5 EF FF | 	byte	$09, $0d, $08, $f2, $d8, $c4, $bc, $bb, $bf, $c7, $cf, $da, $e1, $e5, $ef, $ff
10eb6     1F 37 43 47 
10eba     49 51 59 5C 
10ebe     5B 55 48 38 
10ec2     24 14 0B 08 | 	byte	$1f, $37, $43, $47, $49, $51, $59, $5c, $5b, $55, $48, $38, $24, $14, $0b, $08
10ec6     00 F4 E4 D8 
10eca     D8 DF EA F3 
10ece     F6 F9 FC 03 
10ed2     0F 1B 29 31 | 	byte	$00, $f4, $e4, $d8, $d8, $df, $ea, $f3, $f6, $f9, $fc, $03, $0f, $1b, $29, $31
10ed6     37 3D 47 57 
10eda     5C 58 40 18 
10ede     D0 B7 C5 C1 
10ee2     B1 A0 88 80 | 	byte	$37, $3d, $47, $57, $5c, $58, $40, $18, $d0, $b7, $c5, $c1, $b1, $a0, $88, $80
10ee6     80 8E 9F BF 
10eea     EF 0D 17 1F 
10eee     3F 5F 7F 7F 
10ef2     77 7F 7F 7F | 	byte	$80, $8e, $9f, $bf, $ef, $0d, $17, $1f, $3f, $5f, $7f, $7f, $77, $7f, $7f, $7f
10ef6     70 58 48 34 
10efa     20 00 D0 A0 
10efe     80 80 80 80 
10f02     80 80 80 8B | 	byte	$70, $58, $48, $34, $20, $00, $d0, $a0, $80, $80, $80, $80, $80, $80, $80, $8b
10f06     9F BF E7 17 
10f0a     3B 45 47 4E 
10f0e     59 61 60 48 
10f12     28 08 EA D0 | 	byte	$9f, $bf, $e7, $17, $3b, $45, $47, $4e, $59, $61, $60, $48, $28, $08, $ea, $d0
10f16     B8 A8 9C 93 
10f1a     8D 88 8F 9F 
10f1e     B7 CF E3 F7 
10f22     0B 1F 3D 57 | 	byte	$b8, $a8, $9c, $93, $8d, $88, $8f, $9f, $b7, $cf, $e3, $f7, $0b, $1f, $3d, $57
10f26     67 73 73 68 
10f2a     58 48 3A 30 
10f2e     20 0A F0 DA 
10f32     CD C7 C6 C9 | 	byte	$67, $73, $73, $68, $58, $48, $3a, $30, $20, $0a, $f0, $da, $cd, $c7, $c6, $c9
10f36     CD D3 DC E2 
10f3a     EB FB 0F 22 
10f3e     2D 32 36 38 
10f42     3A 36 30 2D | 	byte	$cd, $d3, $dc, $e2, $eb, $fb, $0f, $22, $2d, $32, $36, $38, $3a, $36, $30, $2d
10f46     2A 28 21 23 
10f4a     2C 2A 18 F4 
10f4e     C0 92 9F B2 
10f52     AA A5 A0 9D | 	byte	$2a, $28, $21, $23, $2c, $2a, $18, $f4, $c0, $92, $9f, $b2, $aa, $a5, $a0, $9d
10f56     A2 B2 C7 DF 
10f5a     FF 2F 41 40 
10f5e     4F 6D 7F 7F 
10f62     7F 7F 7C 6C | 	byte	$a2, $b2, $c7, $df, $ff, $2f, $41, $40, $4f, $6d, $7f, $7f, $7f, $7f, $7c, $6c
10f66     54 40 2D 1C 
10f6a     04 E8 C4 98 
10f6e     82 87 9B A4 
10f72     AB B2 B9 CB | 	byte	$54, $40, $2d, $1c, $04, $e8, $c4, $98, $82, $87, $9b, $a4, $ab, $b2, $b9, $cb
10f76     E7 07 23 3F 
10f7a     4B 48 40 38 
10f7e     30 2A 20 08 
10f82     E8 CA B2 9A | 	byte	$e7, $07, $23, $3f, $4b, $48, $40, $38, $30, $2a, $20, $08, $e8, $ca, $b2, $9a
10f86     8E 8E 92 99 
10f8a     9F A9 B7 CB 
10f8e     E7 07 1F 2F 
10f92     47 55 63 6F | 	byte	$8e, $8e, $92, $99, $9f, $a9, $b7, $cb, $e7, $07, $1f, $2f, $47, $55, $63, $6f
10f96     71 6C 64 50 
10f9a     34 20 10 01 
10f9e     F0 E0 CC C1 
10fa2     BF C6 CF DB | 	byte	$71, $6c, $64, $50, $34, $20, $10, $01, $f0, $e0, $cc, $c1, $bf, $c6, $cf, $db
10fa6     E6 EF FD 0D 
10faa     1D 2D 39 43 
10fae     46 42 3D 38 
10fb2     30 26 1C 0D | 	byte	$e6, $ef, $fd, $0d, $1d, $2d, $39, $43, $46, $42, $3d, $38, $30, $26, $1c, $0d
10fb6     04 FD FF 02 
10fba     05 06 06 FC 
10fbe     E0 C0 B7 C7 
10fc2     D4 D5 D1 CB | 	byte	$04, $fd, $ff, $02, $05, $06, $06, $fc, $e0, $c0, $b7, $c7, $d4, $d5, $d1, $cb
10fc6     C8 D3 E3 F7 
10fca     0F 2B 3F 40 
10fce     43 4F 63 79 
10fd2     7F 7F 6A 5C | 	byte	$c8, $d3, $e3, $f7, $0f, $2b, $3f, $40, $43, $4f, $63, $79, $7f, $7f, $6a, $5c
10fd6     4C 40 30 22 
10fda     10 FA E2 C4 
10fde     A8 9F AF BF 
10fe2     C4 C5 C5 CB | 	byte	$4c, $40, $30, $22, $10, $fa, $e2, $c4, $a8, $9f, $af, $bf, $c4, $c5, $c5, $cb
10fe6     DF FF 13 23 
10fea     2D 29 20 18 
10fee     10 0C 06 F8 
10ff2     E0 C0 A8 9C | 	byte	$df, $ff, $13, $23, $2d, $29, $20, $18, $10, $0c, $06, $f8, $e0, $c0, $a8, $9c
10ff6     94 91 90 8F 
10ffa     97 A7 B7 C7 
10ffe     DF FD 17 2B 
11002     3A 49 5B 6D | 	byte	$94, $91, $90, $8f, $97, $a7, $b7, $c7, $df, $fd, $17, $2b, $3a, $49, $5b, $6d
11006     70 66 55 48 
1100a     3A 2C 18 05 
1100e     F8 E8 D9 D0 
11012     CB D3 DF E9 | 	byte	$70, $66, $55, $48, $3a, $2c, $18, $05, $f8, $e8, $d9, $d0, $cb, $d3, $df, $e9
11016     EF F3 FB 0B 
1101a     1F 31 3B 41 
1101e     40 3A 35 34 
11022     2E 24 14 00 | 	byte	$ef, $f3, $fb, $0b, $1f, $31, $3b, $41, $40, $3a, $35, $34, $2e, $24, $14, $00
11026     EC E1 E7 F7 
1102a     FF FE FF 05 
1102e     0A 00 C4 A9 
11032     C7 DF D6 CC | 	byte	$ec, $e1, $e7, $f7, $ff, $fe, $ff, $05, $0a, $00, $c4, $a9, $c7, $df, $d6, $cc
11036     BC B3 BD D3 
1103a     E2 EF 0D 2F 
1103e     34 2D 3F 5B 
11042     77 7F 7F 6A | 	byte	$bc, $b3, $bd, $d3, $e2, $ef, $0d, $2f, $34, $2d, $3f, $5b, $77, $7f, $7f, $6a
11046     5E 5A 48 3A 
1104a     2A 10 00 E8 
1104e     C8 A0 97 A9 
11052     B5 B1 AF AF | 	byte	$5e, $5a, $48, $3a, $2a, $10, $00, $e8, $c8, $a0, $97, $a9, $b5, $b1, $af, $af
11056     B7 D7 F7 0A 
1105a     16 23 26 20 
1105e     1D 18 14 10 
11062     00 E8 C4 B0 | 	byte	$b7, $d7, $f7, $0a, $16, $23, $26, $20, $1d, $18, $14, $10, $00, $e8, $c4, $b0
11066     A9 A6 A0 93 
1106a     8D 95 A6 B7 
1106e     C7 DF F7 0B 
11072     1F 2F 3F 5B | 	byte	$a9, $a6, $a0, $93, $8d, $95, $a6, $b7, $c7, $df, $f7, $0b, $1f, $2f, $3f, $5b
11076     6E 6D 60 50 
1107a     46 3D 30 20 
1107e     08 F8 E8 D8 
11082     D2 D4 DE E9 | 	byte	$6e, $6d, $60, $50, $46, $3d, $30, $20, $08, $f8, $e8, $d8, $d2, $d4, $de, $e9
11086     EF F1 F7 09 
1108a     1F 35 3F 45 
1108e     47 45 41 3C 
11092     36 2E 20 10 | 	byte	$ef, $f1, $f7, $09, $1f, $35, $3f, $45, $47, $45, $41, $3c, $36, $2e, $20, $10
11096     00 EC E5 E3 
1109a     E4 EB F2 F7 
1109e     FF 09 E0 AC 
110a2     AF D7 E4 E4 | 	byte	$00, $ec, $e5, $e3, $e4, $eb, $f2, $f7, $ff, $09, $e0, $ac, $af, $d7, $e4, $e4
110a6     E0 CA C3 D3 
110aa     E9 F4 07 2F 
110ae     4A 38 37 4F 
110b2     5F 7F 7F 7E | 	byte	$e0, $ca, $c3, $d3, $e9, $f4, $07, $2f, $4a, $38, $37, $4f, $5f, $7f, $7f, $7e
110b6     66 60 50 41 
110ba     38 28 11 00 
110be     E4 B4 96 9F 
110c2     BB BF C2 BA | 	byte	$66, $60, $50, $41, $38, $28, $11, $00, $e4, $b4, $96, $9f, $bb, $bf, $c2, $ba
110c6     AD BF E7 FF 
110ca     0F 27 2C 24 
110ce     21 1C 14 16 
110d2     18 04 E0 C2 | 	byte	$ad, $bf, $e7, $ff, $0f, $27, $2c, $24, $21, $1c, $14, $16, $18, $04, $e0, $c2
110d6     B2 AD AC A8 
110da     A0 9F AA B3 
110de     BF D3 EF 09 
110e2     17 23 2F 3F | 	byte	$b2, $ad, $ac, $a8, $a0, $9f, $aa, $b3, $bf, $d3, $ef, $09, $17, $23, $2f, $3f
110e6     5D 68 60 58 
110ea     4A 40 30 21 
110ee     14 08 F8 E4 
110f2     D8 D1 DB EB | 	byte	$5d, $68, $60, $58, $4a, $40, $30, $21, $14, $08, $f8, $e4, $d8, $d1, $db, $eb
110f6     EF F4 F7 FD 
110fa     0F 27 39 45 
110fe     4E 4E 46 3C 
11102     36 32 2E 21 | 	byte	$ef, $f4, $f7, $fd, $0f, $27, $39, $45, $4e, $4e, $46, $3c, $36, $32, $2e, $21
11106     08 EA D8 D6 
1110a     DF E7 E1 DB 
1110e     DF E9 F7 F9 
11112     D8 B4 BF D9 | 	byte	$08, $ea, $d8, $d6, $df, $e7, $e1, $db, $df, $e9, $f7, $f9, $d8, $b4, $bf, $d9
11116     DE DA D2 D0 
1111a     D3 DF EE F7 
1111e     07 2F 47 40 
11122     47 5B 6D 7F | 	byte	$de, $da, $d2, $d0, $d3, $df, $ee, $f7, $07, $2f, $47, $40, $47, $5b, $6d, $7f
11126     7F 79 68 60 
1112a     54 42 30 1A 
1112e     08 F4 DC C0 
11132     A0 9B A7 AB | 	byte	$7f, $79, $68, $60, $54, $42, $30, $1a, $08, $f4, $dc, $c0, $a0, $9b, $a7, $ab
11136     A8 A5 A5 B7 
1113a     D3 EB FB 07 
1113e     13 1A 1B 16 
11142     13 14 11 04 | 	byte	$a8, $a5, $a5, $b7, $d3, $eb, $fb, $07, $13, $1a, $1b, $16, $13, $14, $11, $04
11146     EC D4 C5 C0 
1114a     BC B8 B2 AD 
1114e     AC B1 BB CB 
11152     DF F3 FF 0B | 	byte	$ec, $d4, $c5, $c0, $bc, $b8, $b2, $ad, $ac, $b1, $bb, $cb, $df, $f3, $ff, $0b
11156     13 1F 2F 3F 
1115a     49 49 41 36 
1115e     2C 24 1D 15 
11162     0C 00 F8 EE | 	byte	$13, $1f, $2f, $3f, $49, $49, $41, $36, $2c, $24, $1d, $15, $0c, $00, $f8, $ee
11166     EB ED F1 F7 
1116a     FB FF 05 0E 
1116e     17 23 2B 2F 
11172     2D 29 27 24 | 	byte	$eb, $ed, $f1, $f7, $fb, $ff, $05, $0e, $17, $23, $2b, $2f, $2d, $29, $27, $24
11176     20 16 0C 02 
1117a     F8 F0 E8 E5 
1117e     E4 E2 E4 EB 
11182     F7 FF 0F 17 | 	byte	$20, $16, $0c, $02, $f8, $f0, $e8, $e5, $e4, $e2, $e4, $eb, $f7, $ff, $0f, $17
11186     1E 19 00 E2 
1118a     DD E5 E9 E8 
1118e     D8 C8 C0 C7 
11192     D3 DF EF 07 | 	byte	$1e, $19, $00, $e2, $dd, $e5, $e9, $e8, $d8, $c8, $c0, $c7, $d3, $df, $ef, $07
11196     1A 1F 2B 3B 
1119a     4F 67 7B 76 
1119e     6B 60 55 4A 
111a2     40 32 20 0C | 	byte	$1a, $1f, $2b, $3b, $4f, $67, $7b, $76, $6b, $60, $55, $4a, $40, $32, $20, $0c
111a6     F4 D8 C0 AD 
111aa     AD AE AE AC 
111ae     A8 AF C5 DF 
111b2     F3 FF 0E 16 | 	byte	$f4, $d8, $c0, $ad, $ad, $ae, $ae, $ac, $a8, $af, $c5, $df, $f3, $ff, $0e, $16
111b6     1D 20 21 23 
111ba     24 1C 0C FA 
111be     EA E0 D9 D6 
111c2     D0 C8 C0 BB | 	byte	$1d, $20, $21, $23, $24, $1c, $0c, $fa, $ea, $e0, $d9, $d6, $d0, $c8, $c0, $bb
111c6     BD C5 D3 E3 
111ca     EF F9 03 0E 
111ce     1B 29 37 41 
111d2     40 3A 35 32 | 	byte	$bd, $c5, $d3, $e3, $ef, $f9, $03, $0e, $1b, $29, $37, $41, $40, $3a, $35, $32
111d6     32 2E 24 18 
111da     0E 04 00 FE 
111de     FD FD FD FC 
111e2     FD 02 09 13 | 	byte	$32, $2e, $24, $18, $0e, $04, $00, $fe, $fd, $fd, $fd, $fc, $fd, $02, $09, $13
111e6     19 1E 20 20 
111ea     20 25 28 28 
111ee     24 1C 11 0C 
111f2     07 04 02 FD | 	byte	$19, $1e, $20, $20, $20, $25, $28, $28, $24, $1c, $11, $0c, $07, $04, $02, $fd
111f6     F5 EE ED F4 
111fa     FF 07 0B 0B 
111fe     0C 13 08 EC 
11202     D3 D7 E2 E5 | 	byte	$f5, $ee, $ed, $f4, $ff, $07, $0b, $0b, $0c, $13, $08, $ec, $d3, $d7, $e2, $e5
11206     E1 D2 C6 CB 
1120a     DB E5 EF FF 
1120e     17 24 2B 37 
11212     47 57 6F 74 | 	byte	$e1, $d2, $c6, $cb, $db, $e5, $ef, $ff, $17, $24, $2b, $37, $47, $57, $6f, $74
11216     68 5A 50 48 
1121a     40 30 1A 08 
1121e     F0 E0 C8 B2 
11222     A9 AF B5 B5 | 	byte	$68, $5a, $50, $48, $40, $30, $1a, $08, $f0, $e0, $c8, $b2, $a9, $af, $b5, $b5
11226     B0 AE BB D3 
1122a     EB FA FF 07 
1122e     11 1A 1C 1C 
11232     1D 1A 12 04 | 	byte	$b0, $ae, $bb, $d3, $eb, $fa, $ff, $07, $11, $1a, $1c, $1c, $1d, $1a, $12, $04
11236     F0 E0 D9 D7 
1123a     D1 CA C0 B4 
1123e     AF B3 BB C7 
11242     D5 DF E7 F2 | 	byte	$f0, $e0, $d9, $d7, $d1, $ca, $c0, $b4, $af, $b3, $bb, $c7, $d5, $df, $e7, $f2
11246     FF 0F 23 37 
1124a     45 49 48 4B 
1124e     4A 49 48 40 
11252     34 28 18 0C | 	byte	$ff, $0f, $23, $37, $45, $49, $48, $4b, $4a, $49, $48, $40, $34, $28, $18, $0c
11256     05 FF FA F4 
1125a     EB E7 EA F3 
1125e     FB 03 09 11 
11262     17 1B 23 2F | 	byte	$05, $ff, $fa, $f4, $eb, $e7, $ea, $f3, $fb, $03, $09, $11, $17, $1b, $23, $2f
11266     35 35 2E 22 
1126a     1C 16 0C 01 
1126e     F0 E0 D4 D0 
11272     C9 C4 CA CE | 	byte	$35, $35, $2e, $22, $1c, $16, $0c, $01, $f0, $e0, $d4, $d0, $c9, $c4, $ca, $ce
11276     D3 D5 DB ED 
1127a     FF 1B 2E 30 
1127e     20 00 EF F7 
11282     05 00 F4 E0 | 	byte	$d3, $d5, $db, $ed, $ff, $1b, $2e, $30, $20, $00, $ef, $f7, $05, $00, $f4, $e0
11286     C0 BA BE BF 
1128a     CB E3 F3 F1 
1128e     F5 06 1F 3F 
11292     67 77 76 74 | 	byte	$c0, $ba, $be, $bf, $cb, $e3, $f3, $f1, $f5, $06, $1f, $3f, $67, $77, $76, $74
11296     70 6B 62 5A 
1129a     4C 38 20 00 
1129e     E0 C4 B8 AC 
112a2     A0 90 83 82 | 	byte	$70, $6b, $62, $5a, $4c, $38, $20, $00, $e0, $c4, $b8, $ac, $a0, $90, $83, $82
112a6     8F 9F BB CF 
112aa     E7 F7 05 13 
112ae     23 35 43 46 
112b2     3C 30 20 10 | 	byte	$8f, $9f, $bb, $cf, $e7, $f7, $05, $13, $23, $35, $43, $46, $3c, $30, $20, $10
112b6     00 F1 E4 D4 
112ba     C2 B0 A2 A0 
112be     A2 A9 B5 C5 
112c2     D5 E3 F3 07 | 	byte	$00, $f1, $e4, $d4, $c2, $b0, $a2, $a0, $a2, $a9, $b5, $c5, $d5, $e3, $f3, $07
112c6     23 3F 5B 67 
112ca     6F 77 74 71 
112ce     6E 64 52 40 
112d2     2C 18 04 F8 | 	byte	$23, $3f, $5b, $67, $6f, $77, $74, $71, $6e, $64, $52, $40, $2c, $18, $04, $f8
112d6     F0 E4 DC DB 
112da     DA DE E9 F7 
112de     FF 0B 16 1F 
112e2     2A 33 36 34 | 	byte	$f0, $e4, $dc, $db, $da, $de, $e9, $f7, $ff, $0b, $16, $1f, $2a, $33, $36, $34
112e6     2E 28 21 18 
112ea     0C 00 F8 EC 
112ee     E0 CC C1 C1 
112f2     C3 C7 C8 C7 | 	byte	$2e, $28, $21, $18, $0c, $00, $f8, $ec, $e0, $cc, $c1, $c1, $c3, $c7, $c8, $c7
112f6     CF DF F3 FF 
112fa     11 1E 27 32 
112fe     3F 4F 5A 44 
11302     14 FA F8 F7 | 	byte	$cf, $df, $f3, $ff, $11, $1e, $27, $32, $3f, $4f, $5a, $44, $14, $fa, $f8, $f7
11306     F5 EA D0 BA 
1130a     B6 B8 BA C7 
1130e     E7 FF 07 13 
11312     21 2F 57 77 | 	byte	$f5, $ea, $d0, $ba, $b6, $b8, $ba, $c7, $e7, $ff, $07, $13, $21, $2f, $57, $77
11316     7F 7F 7C 70 
1131a     64 57 4C 40 
1131e     2C 18 F8 D0 
11322     B0 A4 A1 9C | 	byte	$7f, $7f, $7c, $70, $64, $57, $4c, $40, $2c, $18, $f8, $d0, $b0, $a4, $a1, $9c
11326     90 82 80 87 
1132a     9B AF C7 E3 
1132e     F7 03 0D 1B 
11332     2F 3F 4B 48 | 	byte	$90, $82, $80, $87, $9b, $af, $c7, $e3, $f7, $03, $0d, $1b, $2f, $3f, $4b, $48
11336     39 28 18 0A 
1133a     02 F6 E8 D2 
1133e     B8 A4 99 9D 
11342     AB B7 BF C5 | 	byte	$39, $28, $18, $0a, $02, $f6, $e8, $d2, $b8, $a4, $99, $9d, $ab, $b7, $bf, $c5
11346     CF DF F7 17 
1134a     37 4F 63 73 
1134e     7A 7B 7F 7F 
11352     7C 70 54 38 | 	byte	$cf, $df, $f7, $17, $37, $4f, $63, $73, $7a, $7b, $7f, $7f, $7c, $70, $54, $38
11356     22 11 04 F0 
1135a     D8 C8 B8 B0 
1135e     AF B3 BF D3 
11362     DF E7 EF FF | 	byte	$22, $11, $04, $f0, $d8, $c8, $b8, $b0, $af, $b3, $bf, $d3, $df, $e7, $ef, $ff
11366     1B 2F 3D 41 
1136a     39 32 2D 28 
1136e     24 20 11 00 
11372     E8 D0 C4 C0 | 	byte	$1b, $2f, $3d, $41, $39, $32, $2d, $28, $24, $20, $11, $00, $e8, $d0, $c4, $c0
11376     BF C0 BC B8 
1137a     BD C5 D3 E3 
1137e     F5 FF 0B 11 
11382     1D 2F 3F 4F | 	byte	$bf, $c0, $bc, $b8, $bd, $c5, $d3, $e3, $f5, $ff, $0b, $11, $1d, $2f, $3f, $4f
11386     56 59 5C 5C 
1138a     48 24 08 01 
1138e     FE F2 E0 C4 
11392     AC A8 AB A8 | 	byte	$56, $59, $5c, $5c, $48, $24, $08, $01, $fe, $f2, $e0, $c4, $ac, $a8, $ab, $a8
11396     AD BF D3 DE 
1139a     E7 F1 FF 1F 
1139e     3F 4D 51 50 
113a2     4F 50 4E 44 | 	byte	$ad, $bf, $d3, $de, $e7, $f1, $ff, $1f, $3f, $4d, $51, $50, $4f, $50, $4e, $44
113a6     38 2E 24 10 
113aa     F4 D8 C2 BC 
113ae     B8 AC 9A 90 
113b2     91 9A A5 AF | 	byte	$38, $2e, $24, $10, $f4, $d8, $c2, $bc, $b8, $ac, $9a, $90, $91, $9a, $a5, $af
113b6     BD CD DF EE 
113ba     F7 05 17 2B 
113be     3D 41 3C 35 
113c2     33 33 2D 21 | 	byte	$bd, $cd, $df, $ee, $f7, $05, $17, $2b, $3d, $41, $3c, $35, $33, $33, $2d, $21
113c6     18 0A F9 E8 
113ca     D9 D5 D7 DD 
113ce     DE DA D9 DF 
113d2     EF FF 0F 1F | 	byte	$18, $0a, $f9, $e8, $d9, $d5, $d7, $dd, $de, $da, $d9, $df, $ef, $ff, $0f, $1f
113d6     2E 36 3F 45 
113da     4B 57 5E 5C 
113de     50 41 36 30 
113e2     24 18 0C 00 | 	byte	$2e, $36, $3f, $45, $4b, $57, $5e, $5c, $50, $41, $36, $30, $24, $18, $0c, $00
113e6     F4 E8 DA D1 
113ea     CE D2 D7 DA 
113ee     DD DF E7 EF 
113f2     F9 04 0F 17 | 	byte	$f4, $e8, $da, $d1, $ce, $d2, $d7, $da, $dd, $df, $e7, $ef, $f9, $04, $0f, $17
113f6     1D 20 21 20 
113fa     20 20 20 19 
113fe     10 08 FC F4 
11402     EE E9 E4 E3 | 	byte	$1d, $20, $21, $20, $20, $20, $20, $19, $10, $08, $fc, $f4, $ee, $e9, $e4, $e3
11406     E2 E4 E6 EB 
1140a     F7 FD 03 06 
1140e     0D 17 1F 24 
11412     26 25 23 23 | 	byte	$e2, $e4, $e6, $eb, $f7, $fd, $03, $06, $0d, $17, $1f, $24, $26, $25, $23, $23
11416     22 20 20 1D 
1141a     1D 1C 18 10 
1141e     FA E4 DC DD 
11422     E0 DC D4 CC | 	byte	$22, $20, $20, $1d, $1d, $1c, $18, $10, $fa, $e4, $dc, $dd, $e0, $dc, $d4, $cc
11426     CA CA CF D7 
1142a     E3 F3 FF 07 
1142e     0B 0F 1B 2B 
11432     37 3F 40 3C | 	byte	$ca, $ca, $cf, $d7, $e3, $f3, $ff, $07, $0b, $0f, $1b, $2b, $37, $3f, $40, $3c
11436     36 30 2A 22 
1143a     18 14 0C 00 
1143e     F0 E0 D6 D2 
11442     D1 CE CA C6 | 	byte	$36, $30, $2a, $22, $18, $14, $0c, $00, $f0, $e0, $d6, $d2, $d1, $ce, $ca, $c6
11446     C8 CD D1 D7 
1144a     E3 ED F9 FF 
1144e     05 0A 0F 19 
11452     23 27 25 22 | 	byte	$c8, $cd, $d1, $d7, $e3, $ed, $f9, $ff, $05, $0a, $0f, $19, $23, $27, $25, $22
11456     1E 1B 18 13 
1145a     0C 02 FC F4 
1145e     F1 EE EA E8 
11462     E9 EB EF F5 | 	byte	$1e, $1b, $18, $13, $0c, $02, $fc, $f4, $f1, $ee, $ea, $e8, $e9, $eb, $ef, $f5
11466     FB 03 0E 15 
1146a     1B 21 27 2E 
1146e     30 31 31 2F 
11472     2C 29 23 1D | 	byte	$fb, $03, $0e, $15, $1b, $21, $27, $2e, $30, $31, $31, $2f, $2c, $29, $23, $1d
11476     18 10 07 00 
1147a     F8 F0 EC EC 
1147e     EB E8 E9 E9 
11482     EC EF F6 FA | 	byte	$18, $10, $07, $00, $f8, $f0, $ec, $ec, $eb, $e8, $e9, $e9, $ec, $ef, $f6, $fa
11486     FD FF 02 05 
1148a     07 09 0B 0A 
1148e     06 03 00 FB 
11492     FB FB F8 F6 | 	byte	$fd, $ff, $02, $05, $07, $09, $0b, $0a, $06, $03, $00, $fb, $fb, $fb, $f8, $f6
11496     F1 EE EA EA 
1149a     ED F1 F3 F6 
1149e     F9 FA FA FD 
114a2     FF 03 05 04 | 	byte	$f1, $ee, $ea, $ea, $ed, $f1, $f3, $f6, $f9, $fa, $fa, $fd, $ff, $03, $05, $04
114a6     03 04 07 0A 
114aa     0B 09 08 04 
114ae     00 FF FC FD 
114b2     FF 02 03 05 | 	byte	$03, $04, $07, $0a, $0b, $09, $08, $04, $00, $ff, $fc, $fd, $ff, $02, $03, $05
114b6     03 F6 E8 E3 
114ba     E3 E5 EA EA 
114be     E5 E0 DC DA 
114c2     DB E3 F1 F7 | 	byte	$03, $f6, $e8, $e3, $e3, $e5, $ea, $ea, $e5, $e0, $dc, $da, $db, $e3, $f1, $f7
114c6     FA FF 00 01 
114ca     07 13 1D 25 
114ce     24 20 1B 19 
114d2     1A 16 12 12 | 	byte	$fa, $ff, $00, $01, $07, $13, $1d, $25, $24, $20, $1b, $19, $1a, $16, $12, $12
114d6     0E 08 00 F6 
114da     F0 EF F2 F5 
114de     F3 EE EB EB 
114e2     EE F4 FA FF | 	byte	$0e, $08, $00, $f6, $f0, $ef, $f2, $f5, $f3, $ee, $eb, $eb, $ee, $f4, $fa, $ff
114e6     05 07 05 04 
114ea     05 07 0D 10 
114ee     10 0B 09 08 
114f2     09 09 09 0B | 	byte	$05, $07, $05, $04, $05, $07, $0d, $10, $10, $0b, $09, $08, $09, $09, $09, $0b
114f6     0C 0A 0A 0A 
114fa     0F 14 17 17 
114fe     19 1A 1B 1C 
11502     1B 19 18 15 | 	byte	$0c, $0a, $0a, $0a, $0f, $14, $17, $17, $19, $1a, $1b, $1c, $1b, $19, $18, $15
11506     11 0D 08 05 
1150a     00 FE FC FA 
1150e     F7 F7 F8 FA 
11512     FC FE FF 02 | 	byte	$11, $0d, $08, $05, $00, $fe, $fc, $fa, $f7, $f7, $f8, $fa, $fc, $fe, $ff, $02
11516     07 0B 0C 0C 
1151a     0F 11 14 17 
1151e     16 14 12 10 
11522     0C 07 04 00 | 	byte	$07, $0b, $0c, $0c, $0f, $11, $14, $17, $16, $14, $12, $10, $0c, $07, $04, $00
11526     FA F7 F4 F0 
1152a     EF EF F2 F4 
1152e     F7 F9 FA FC 
11532     FF 02 06 0A | 	byte	$fa, $f7, $f4, $f0, $ef, $ef, $f2, $f4, $f7, $f9, $fa, $fc, $ff, $02, $06, $0a
11536     0C 0D 0D 0E 
1153a     0E 0E 0F 0E 
1153e     0D 0A 08 06 
11542     04 02 FE FC | 	byte	$0c, $0d, $0d, $0e, $0e, $0e, $0f, $0e, $0d, $0a, $08, $06, $04, $02, $fe, $fc
11546     FD FC FC FC 
1154a     FC FB FA FC 
1154e     FF FF FD FB 
11552     F9 F9 FA FB | 	byte	$fd, $fc, $fc, $fc, $fc, $fb, $fa, $fc, $ff, $ff, $fd, $fb, $f9, $f9, $fa, $fb
11556     FB FA F9 F8 
1155a     F5 F4 F4 F4 
1155e     F5 F5 F7 F8 
11562     F8 F8 F9 FD | 	byte	$fb, $fa, $f9, $f8, $f5, $f4, $f4, $f4, $f5, $f5, $f7, $f8, $f8, $f8, $f9, $fd
11566     01 05 07 09 
1156a     0B 0D 0E 11 
1156e     14 15 15 14 
11572     13 11 10 0D | 	byte	$01, $05, $07, $09, $0b, $0d, $0e, $11, $14, $15, $15, $14, $13, $11, $10, $0d
11576     0A 08 04 00 
1157a     FE FB F9 F7 
1157e     F5 F3 F3 F5 
11582     F7 F6 F7 F8 | 	byte	$0a, $08, $04, $00, $fe, $fb, $f9, $f7, $f5, $f3, $f3, $f5, $f7, $f6, $f7, $f8
11586     FA FB FC FE 
1158a     FF 02 06 07 
1158e     07 09 0C 0E 
11592     0F 10 12 12 | 	byte	$fa, $fb, $fc, $fe, $ff, $02, $06, $07, $07, $09, $0c, $0e, $0f, $10, $12, $12
11596     13 12 10 0E 
1159a     0C 0A 08 05 
1159e     00 F9 F8 F9 
115a2     FA FC FC F9 | 	byte	$13, $12, $10, $0e, $0c, $0a, $08, $05, $00, $f9, $f8, $f9, $fa, $fc, $fc, $f9
115a6     FA FC FF 02 
115aa     05 07 08 0B 
115ae     0B 09 0A 0C 
115b2     0D 0C 0A 07 | 	byte	$fa, $fc, $ff, $02, $05, $07, $08, $0b, $0b, $09, $0a, $0c, $0d, $0c, $0a, $07
115b6     03 01 00 FB 
115ba     F7 F4 F2 F0 
115be     EE EC EC ED 
115c2     EF F0 F0 F1 | 	byte	$03, $01, $00, $fb, $f7, $f4, $f2, $f0, $ee, $ec, $ec, $ed, $ef, $f0, $f0, $f1
115c6     F5 FA FD FF 
115ca     02 05 09 0B 
115ce     0B 09 08 07 
115d2     06 06 04 00 | 	byte	$f5, $fa, $fd, $ff, $02, $05, $09, $0b, $0b, $09, $08, $07, $06, $06, $04, $00
115d6     FC F8 F6 F3 
115da     EF EC EC EE 
115de     EF F0 F3 F5 
115e2     FB FF 04 07 | 	byte	$fc, $f8, $f6, $f3, $ef, $ec, $ec, $ee, $ef, $f0, $f3, $f5, $fb, $ff, $04, $07
115e6     08 0B 0D 0F 
115ea     10 0F 0C 09 
115ee     06 01 FC F8 
115f2     F8 F6 F2 EE | 	byte	$08, $0b, $0d, $0f, $10, $0f, $0c, $09, $06, $01, $fc, $f8, $f8, $f6, $f2, $ee
115f6     EB EA EB EC 
115fa     EE F2 F6 F9 
115fe     FD FF 05 0B 
11602     0F 12 14 16 | 	byte	$eb, $ea, $eb, $ec, $ee, $f2, $f6, $f9, $fd, $ff, $05, $0b, $0f, $12, $14, $16
11606     17 17 19 19 
1160a     18 15 12 0F 
1160e     0E 0D 0A 08 
11612     07 06 05 03 | 	byte	$17, $17, $19, $19, $18, $15, $12, $0f, $0e, $0d, $0a, $08, $07, $06, $05, $03
11616     01 01 03 04 
1161a     04 03 05 07 
1161e     09 0D 0E 0E 
11622     0E 0E 0D 0C | 	byte	$01, $01, $03, $04, $04, $03, $05, $07, $09, $0d, $0e, $0e, $0e, $0e, $0d, $0c
11626     0B 0B 0A 09 
1162a     08 04 00 FD 
1162e     FD FD FC FB 
11632     FA FA FD FF | 	byte	$0b, $0b, $0a, $09, $08, $04, $00, $fd, $fd, $fd, $fc, $fb, $fa, $fa, $fd, $ff
11636     FF 02 06 05 
1163a     03 05 09 0C 
1163e     0F 10 10 0F 
11642     0E 0F 0E 0F | 	byte	$ff, $02, $06, $05, $03, $05, $09, $0c, $0f, $10, $10, $0f, $0e, $0f, $0e, $0f
11646     0E 0A 08 05 
1164a     04 03 04 05 
1164e     04 03 02 00 
11652     FF FF 01 03 | 	byte	$0e, $0a, $08, $05, $04, $03, $04, $05, $04, $03, $02, $00, $ff, $ff, $01, $03
11656     05 06 05 02 
1165a     03 05 07 09 
1165e     0B 0A 09 08 
11662     09 09 0A 0A | 	byte	$05, $06, $05, $02, $03, $05, $07, $09, $0b, $0a, $09, $08, $09, $09, $0a, $0a
11666     08 06 06 05 
1166a     02 01 01 FE 
1166e     FA F9 F8 F8 
11672     F9 FA F9 F8 | 	byte	$08, $06, $06, $05, $02, $01, $01, $fe, $fa, $f9, $f8, $f8, $f9, $fa, $f9, $f8
11676     F7 F8 FB FE 
1167a     01 02 02 02 
1167e     03 04 06 08 
11682     07 06 05 04 | 	byte	$f7, $f8, $fb, $fe, $01, $02, $02, $02, $03, $04, $06, $08, $07, $06, $05, $04
11686     00 FF FD FC 
1168a     FA F8 F5 F3 
1168e     F3 F3 F4 F4 
11692     F4 F5 F5 F8 | 	byte	$00, $ff, $fd, $fc, $fa, $f8, $f5, $f3, $f3, $f3, $f4, $f4, $f4, $f5, $f5, $f8
11696     FB FD FE FE 
1169a     FE FF 02 03 
1169e     04 04 03 02 
116a2     00 01 02 01 | 	byte	$fb, $fd, $fe, $fe, $fe, $ff, $02, $03, $04, $04, $03, $02, $00, $01, $02, $01
116a6     00 01 00 FF 
116aa     01 02 02 03 
116ae     05 06 05 05 
116b2     07 0A 0D 0E | 	byte	$00, $01, $00, $ff, $01, $02, $02, $03, $05, $06, $05, $05, $07, $0a, $0d, $0e
116b6     0D 0D 0E 0E 
116ba     0E 0E 0D 0B 
116be     0A 08 05 03 
116c2     02 00 FD FC | 	byte	$0d, $0d, $0e, $0e, $0e, $0e, $0d, $0b, $0a, $08, $05, $03, $02, $00, $fd, $fc
116c6     FB F8 F8 F7 
116ca     F6 F6 F7 F7 
116ce     F9 FA FB FC 
116d2     FF 01 03 04 | 	byte	$fb, $f8, $f8, $f7, $f6, $f6, $f7, $f7, $f9, $fa, $fb, $fc, $ff, $01, $03, $04
116d6     05 06 07 08 
116da     08 04 03 03 
116de     03 02 00 FF 
116e2     FE FE FD FC | 	byte	$05, $06, $07, $08, $08, $04, $03, $03, $03, $02, $00, $ff, $fe, $fe, $fd, $fc
116e6     FC FE FD FE 
116ea     FD FD FF FF 
116ee     FF 02 03 04 
116f2     03 04 03 01 | 	byte	$fc, $fe, $fd, $fe, $fd, $fd, $ff, $ff, $ff, $02, $03, $04, $03, $04, $03, $01
116f6     02 02 00 FE 
116fa     FC FB F8 F6 
116fe     F7 F7 F6 F7 
11702     F6 F8 FB FD | 	byte	$02, $02, $00, $fe, $fc, $fb, $f8, $f6, $f7, $f7, $f6, $f7, $f6, $f8, $fb, $fd
11706     FF FF 03 05 
1170a     06 09 0A 0B 
1170e     0B 0A 0A 09 
11712     08 06 04 02 | 	byte	$ff, $ff, $03, $05, $06, $09, $0a, $0b, $0b, $0a, $0a, $09, $08, $06, $04, $02
11716     01 01 FF FF 
1171a     FE FC FD 01 
1171e     02 05 07 09 
11722     0A 0C 0F 10 | 	byte	$01, $01, $ff, $ff, $fe, $fc, $fd, $01, $02, $05, $07, $09, $0a, $0c, $0f, $10
11726     12 12 10 0E 
1172a     0E 0D 0B 08 
1172e     05 02 FE FA 
11732     F8 F5 F4 F6 | 	byte	$12, $12, $10, $0e, $0e, $0d, $0b, $08, $05, $02, $fe, $fa, $f8, $f5, $f4, $f6
11736     F8 F7 F6 F6 
1173a     F7 F8 FB FD 
1173e     FF 01 05 05 
11742     05 06 07 08 | 	byte	$f8, $f7, $f6, $f6, $f7, $f8, $fb, $fd, $ff, $01, $05, $05, $05, $06, $07, $08
11746     09 09 09 09 
1174a     08 08 08 07 
1174e     06 07 06 07 
11752     07 08 08 09 | 	byte	$09, $09, $09, $09, $08, $08, $08, $07, $06, $07, $06, $07, $07, $08, $08, $09
11756     0B 0D 0E 0E 
1175a     0E 0F 10 11 
1175e     11 10 0F 0F 
11762     0E 0F 0E 0C | 	byte	$0b, $0d, $0e, $0e, $0e, $0f, $10, $11, $11, $10, $0f, $0f, $0e, $0f, $0e, $0c
11766     0A 09 08 08 
1176a     05 03 01 00 
1176e     02 FF FF FF 
11772     FE FF 01 01 | 	byte	$0a, $09, $08, $08, $05, $03, $01, $00, $02, $ff, $ff, $ff, $fe, $ff, $01, $01
11776     00 02 04 04 
1177a     06 06 06 06 
1177e     07 09 08 08 
11782     0A 09 09 08 | 	byte	$00, $02, $04, $04, $06, $06, $06, $06, $07, $09, $08, $08, $0a, $09, $09, $08
11786     08 07 05 04 
1178a     03 01 01 FE 
1178e     FB FA FB FA 
11792     FB FC FC FE | 	byte	$08, $07, $05, $04, $03, $01, $01, $fe, $fb, $fa, $fb, $fa, $fb, $fc, $fc, $fe
11796     FF FF FF 02 
1179a     02 04 06 08 
1179e     07 04 03 00 
117a2     00 FF FD FA | 	byte	$ff, $ff, $ff, $02, $02, $04, $06, $08, $07, $04, $03, $00, $00, $ff, $fd, $fa
117a6     F7 F5 F4 F3 
117aa     F1 F1 F3 F2 
117ae     EF F1 F3 F5 
117b2     F8 FB FB FE | 	byte	$f7, $f5, $f4, $f3, $f1, $f1, $f3, $f2, $ef, $f1, $f3, $f5, $f8, $fb, $fb, $fe
117b6     01 06 07 08 
117ba     0A 0A 08 09 
117be     08 07 05 06 
117c2     03 01 00 FD | 	byte	$01, $06, $07, $08, $0a, $0a, $08, $09, $08, $07, $05, $06, $03, $01, $00, $fd
117c6     FA F9 F9 F8 
117ca     F8 F9 FA FA 
117ce     FC FF 02 04 
117d2     07 09 0B 0E | 	byte	$fa, $f9, $f9, $f8, $f8, $f9, $fa, $fa, $fc, $ff, $02, $04, $07, $09, $0b, $0e
117d6     0F 10 10 10 
117da     0C 08 05 02 
117de     FE FC FA F7 
117e2     F4 F2 F2 F1 | 	byte	$0f, $10, $10, $10, $0c, $08, $05, $02, $fe, $fc, $fa, $f7, $f4, $f2, $f2, $f1
117e6     F1 F2 F3 F6 
117ea     F7 F9 FB FF 
117ee     02 04 06 08 
117f2     09 0A 0A 0A | 	byte	$f1, $f2, $f3, $f6, $f7, $f9, $fb, $ff, $02, $04, $06, $08, $09, $0a, $0a, $0a
117f6     09 08 06 04 
117fa     04 01 01 FF 
117fe     FD FD FB FA 
11802     FB FC FA FB | 	byte	$09, $08, $06, $04, $04, $01, $01, $ff, $fd, $fd, $fb, $fa, $fb, $fc, $fa, $fb
11806     FC FD FE FF 
1180a     00 02 04 07 
1180e     08 0A 09 09 
11812     06 07 07 06 | 	byte	$fc, $fd, $fe, $ff, $00, $02, $04, $07, $08, $0a, $09, $09, $06, $07, $07, $06
11816     07 06 05 03 
1181a     03 02 01 01 
1181e     01 01 FF FF 
11822     01 02 02 01 | 	byte	$07, $06, $05, $03, $03, $02, $01, $01, $01, $01, $ff, $ff, $01, $02, $02, $01
11826     02 03 06 07 
1182a     08 09 09 08 
1182e     09 0A 0B 0B 
11832     0A 0A 0A 09 | 	byte	$02, $03, $06, $07, $08, $09, $09, $08, $09, $0a, $0b, $0b, $0a, $0a, $0a, $09
11836     09 09 09 08 
1183a     05 04 02 03 
1183e     02 01 01 00 
11842     FF FF FF 00 | 	byte	$09, $09, $09, $08, $05, $04, $02, $03, $02, $01, $01, $00, $ff, $ff, $ff, $00
11846     03 04 02 03 
1184a     02 02 03 06 
1184e     06 04 02 00 
11852     FF FE FC FB | 	byte	$03, $04, $02, $03, $02, $02, $03, $06, $06, $04, $02, $00, $ff, $fe, $fc, $fb
11856     F9 F8 F6 F7 
1185a     F5 F7 F8 F9 
1185e     F9 F9 F9 FD 
11862     FF 04 07 07 | 	byte	$f9, $f8, $f6, $f7, $f5, $f7, $f8, $f9, $f9, $f9, $f9, $fd, $ff, $04, $07, $07
11866     07 07 06 08 
1186a     08 0A 0C 0B 
1186e     08 08 07 09 
11872     0A 09 08 06 | 	byte	$07, $07, $06, $08, $08, $0a, $0c, $0b, $08, $08, $07, $09, $0a, $09, $08, $06
11876     07 08 09 09 
1187a     0A 0C 0B 08 
1187e     08 0B 0B 0B 
11882     0A 09 09 08 | 	byte	$07, $08, $09, $09, $0a, $0c, $0b, $08, $08, $0b, $0b, $0b, $0a, $09, $09, $08
11886     09 09 08 08 
1188a     08 05 04 04 
1188e     03 03 04 02 
11892     01 01 00 FF | 	byte	$09, $09, $08, $08, $08, $05, $04, $04, $03, $03, $04, $02, $01, $01, $00, $ff
11896     FF FF FF FE 
1189a     FE FF FF 02 
1189e     04 04 03 02 
118a2     03 04 07 07 | 	byte	$ff, $ff, $ff, $fe, $fe, $ff, $ff, $02, $04, $04, $03, $02, $03, $04, $07, $07
118a6     07 06 06 06 
118aa     05 06 05 04 
118ae     03 02 02 02 
118b2     02 02 02 02 | 	byte	$07, $06, $06, $06, $05, $06, $05, $04, $03, $02, $02, $02, $02, $02, $02, $02
118b6     03 03 02 04 
118ba     03 03 05 05 
118be     04 04 02 03 
118c2     02 02 01 01 | 	byte	$03, $03, $02, $04, $03, $03, $05, $05, $04, $04, $02, $03, $02, $02, $01, $01
118c6     00 FE FC FD 
118ca     FE FF FF FF 
118ce     FE FE FD FD 
118d2     FF FF 01 01 | 	byte	$00, $fe, $fc, $fd, $fe, $ff, $ff, $ff, $fe, $fe, $fd, $fd, $ff, $ff, $01, $01
118d6     01 00 02 02 
118da     03 03 03 01 
118de     01 01 01 02 
118e2     03 03 02 02 | 	byte	$01, $00, $02, $02, $03, $03, $03, $01, $01, $01, $01, $02, $03, $03, $02, $02
118e6     01 00 01 03 
118ea     04 03 03 02 
118ee     02 03 04 03 
118f2     02 01 FF FE | 	byte	$01, $00, $01, $03, $04, $03, $03, $02, $02, $03, $04, $03, $02, $01, $ff, $fe
118f6     FC FA FA FB 
118fa     FA F8 F6 F6 
118fe     F7 F9 F9 F7 
11902     F8 F8 F9 FA | 	byte	$fc, $fa, $fa, $fb, $fa, $f8, $f6, $f6, $f7, $f9, $f9, $f7, $f8, $f8, $f9, $fa
11906     F9 FA FC FB 
1190a     F9 F7 F7 F8 
1190e     F8 F9 F8 F7 
11912     F7 F8 FA FA | 	byte	$f9, $fa, $fc, $fb, $f9, $f7, $f7, $f8, $f8, $f9, $f8, $f7, $f7, $f8, $fa, $fa
11916     FA FC FE FE 
1191a     FF FF 03 04 
1191e     04 05 04 04 
11922     04 04 03 04 | 	byte	$fa, $fc, $fe, $fe, $ff, $ff, $03, $04, $04, $05, $04, $04, $04, $04, $03, $04
11926     05 04 02 01 
1192a     00 FF 02 03 
1192e     02 04 06 06 
11932     07 06 07 06 | 	byte	$05, $04, $02, $01, $00, $ff, $02, $03, $02, $04, $06, $06, $07, $06, $07, $06
11936     09 0B 0B 0A 
1193a     0A 08 08 06 
1193e     05 03 02 04 
11942     04 02 01 01 | 	byte	$09, $0b, $0b, $0a, $0a, $08, $08, $06, $05, $03, $02, $04, $04, $02, $01, $01
11946     01 02 03 02 
1194a     01 01 02 03 
1194e     03 05 05 06 
11952     07 08 08 09 | 	byte	$01, $02, $03, $02, $01, $01, $02, $03, $03, $05, $05, $06, $07, $08, $08, $09
11956     0B 0C 0C 0B 
1195a     0A 0B 0C 0C 
1195e     0C 0A 08 0A 
11962     09 06 06 07 | 	byte	$0b, $0c, $0c, $0b, $0a, $0b, $0c, $0c, $0c, $0a, $08, $0a, $09, $06, $06, $07
11966     06 06 07 04 
1196a     03 04 05 04 
1196e     04 04 04 05 
11972     05 04 03 04 | 	byte	$06, $06, $07, $04, $03, $04, $05, $04, $04, $04, $04, $05, $05, $04, $03, $04
11976     04 03 02 03 
1197a     03 02 FF FF 
1197e     FF FF FF FF 
11982     FE FF FF FF | 	byte	$04, $03, $02, $03, $03, $02, $ff, $ff, $ff, $ff, $ff, $ff, $fe, $ff, $ff, $ff
11986     01 02 02 03 
1198a     03 07 08 09 
1198e     0B 0B 0B 0B 
11992     0B 0D 0E 0D | 	byte	$01, $02, $02, $03, $03, $07, $08, $09, $0b, $0b, $0b, $0b, $0b, $0d, $0e, $0d
11996     0B 0A 0A 0A 
1199a     08 08 08 05 
1199e     04 02 02 02 
119a2     02 05 04 02 | 	byte	$0b, $0a, $0a, $0a, $08, $08, $08, $05, $04, $02, $02, $02, $02, $05, $04, $02
119a6     02 05 06 06 
119aa     06 05 04 04 
119ae     04 02 01 FF 
119b2     FC FC FA F9 | 	byte	$02, $05, $06, $06, $06, $05, $04, $04, $04, $02, $01, $ff, $fc, $fc, $fa, $f9
119b6     F9 F8 F5 F4 
119ba     F5 F6 F7 F8 
119be     F9 FB FB FB 
119c2     FC FE FF FF | 	byte	$f9, $f8, $f5, $f4, $f5, $f6, $f7, $f8, $f9, $fb, $fb, $fb, $fc, $fe, $ff, $ff
119c6     02 03 01 01 
119ca     02 02 01 01 
119ce     00 FF FF FF 
119d2     FF FF FF FF | 	byte	$02, $03, $01, $01, $02, $02, $01, $01, $00, $ff, $ff, $ff, $ff, $ff, $ff, $ff
119d6     01 03 02 04 
119da     06 07 07 08 
119de     09 0B 0C 0B 
119e2     08 02 02 02 | 	byte	$01, $03, $02, $04, $06, $07, $07, $08, $09, $0b, $0c, $0b, $08, $02, $02, $02
119e6     02 02 02 00 
119ea     FF FD FC FB 
119ee     FB FB FC FC 
119f2     FD FE FE FF | 	byte	$02, $02, $02, $00, $ff, $fd, $fc, $fb, $fb, $fb, $fc, $fc, $fd, $fe, $fe, $ff
119f6     01 03 05 06 
119fa     08 08 09 08 
119fe     08 08 08 08 
11a02     08 08 08 07 | 	byte	$01, $03, $05, $06, $08, $08, $09, $08, $08, $08, $08, $08, $08, $08, $08, $07
11a06     04 03 02 01 
11a0a     01 02 01 FF 
11a0e     FD FD FD FE 
11a12     FE FE FD FC | 	byte	$04, $03, $02, $01, $01, $02, $01, $ff, $fd, $fd, $fd, $fe, $fe, $fe, $fd, $fc
11a16     FC FB FA FB 
11a1a     FB FA FB FA 
11a1e     FA FB FB FB 
11a22     FC FB FA FB | 	byte	$fc, $fb, $fa, $fb, $fb, $fa, $fb, $fa, $fa, $fb, $fb, $fb, $fc, $fb, $fa, $fb
11a26     FC FE FD FE 
11a2a     FE FF FF FF 
11a2e     02 04 04 04 
11a32     04 05 06 07 | 	byte	$fc, $fe, $fd, $fe, $fe, $ff, $ff, $ff, $02, $04, $04, $04, $04, $05, $06, $07
11a36     08 07 07 08 
11a3a     08 09 0A 0A 
11a3e     09 06 04 04 
11a42     04 04 04 02 | 	byte	$08, $07, $07, $08, $08, $09, $0a, $0a, $09, $06, $04, $04, $04, $04, $04, $02
11a46     01 FF FD FE 
11a4a     FF FF FF FD 
11a4e     FC FD FE FE 
11a52     FE FD FA FB | 	byte	$01, $ff, $fd, $fe, $ff, $ff, $ff, $fd, $fc, $fd, $fe, $fe, $fe, $fd, $fa, $fb
11a56     FB FA FB FB 
11a5a     F9 F9 F9 F9 
11a5e     FB FB FA FA 
11a62     FB FC FC FF | 	byte	$fb, $fa, $fb, $fb, $f9, $f9, $f9, $f9, $fb, $fb, $fa, $fa, $fb, $fc, $fc, $ff
11a66     FF 00 03 05 
11a6a     06 07 08 08 
11a6e     07 06 06 05 
11a72     07 09 0A 0D | 	byte	$ff, $00, $03, $05, $06, $07, $08, $08, $07, $06, $06, $05, $07, $09, $0a, $0d
11a76     0F 0F 0D 0A 
11a7a     04 00 FF 03 
11a7e     07 06 04 00 
11a82     FE FD FD FF | 	byte	$0f, $0f, $0d, $0a, $04, $00, $ff, $03, $07, $06, $04, $00, $fe, $fd, $fd, $ff
11a86     01 03 04 03 
11a8a     03 04 03 07 
11a8e     0B 0D 0E 0F 
11a92     0F 0F 10 10 | 	byte	$01, $03, $04, $03, $03, $04, $03, $07, $0b, $0d, $0e, $0f, $0f, $0f, $10, $10
11a96     10 0F 0D 0D 
11a9a     0C 0A 08 04 
11a9e     02 00 FF FD 
11aa2     FD FD FE FE | 	byte	$10, $0f, $0d, $0d, $0c, $0a, $08, $04, $02, $00, $ff, $fd, $fd, $fd, $fe, $fe
11aa6     FE FE FF FF 
11aaa     01 02 01 FF 
11aae     00 01 00 00 
11ab2     03 05 08 07 | 	byte	$fe, $fe, $ff, $ff, $01, $02, $01, $ff, $00, $01, $00, $00, $03, $05, $08, $07
11ab6     04 01 01 03 
11aba     03 04 05 07 
11abe     08 0B 0B 0C 
11ac2     0E 0F 11 10 | 	byte	$04, $01, $01, $03, $03, $04, $05, $07, $08, $0b, $0b, $0c, $0e, $0f, $11, $10
11ac6     11 11 12 10 
11aca     0E 11 16 18 
11ace     16 12 10 0E 
11ad2     0E 0D 0E 12 | 	byte	$11, $11, $12, $10, $0e, $11, $16, $18, $16, $12, $10, $0e, $0e, $0d, $0e, $12
11ad6     15 14 10 09 
11ada     04 00 FB F9 
11ade     F9 F6 F2 F1 
11ae2     F2 F1 F2 F4 | 	byte	$15, $14, $10, $09, $04, $00, $fb, $f9, $f9, $f6, $f2, $f1, $f2, $f1, $f2, $f4
11ae6     F5 F4 F4 F2 
11aea     EF EA E4 ED 
11aee     1F 57 48 20 
11af2     0C E0 B8 90 | 	byte	$f5, $f4, $f4, $f2, $ef, $ea, $e4, $ed, $1f, $57, $48, $20, $0c, $e0, $b8, $90
11af6     80 80 87 BF 
11afa     FF 4F 67 77 
11afe     70 40 00 E9 
11b02     E8 D1 DF 0F | 	byte	$80, $80, $87, $bf, $ff, $4f, $67, $77, $70, $40, $00, $e9, $e8, $d1, $df, $0f
11b06     4B 30 04 0B 
11b0a     08 C0 94 9F 
11b0e     BB DF 2F 67 
11b12     78 68 4C 20 | 	byte	$4b, $30, $04, $0b, $08, $c0, $94, $9f, $bb, $df, $2f, $67, $78, $68, $4c, $20
11b16     C0 94 AF C8 
11b1a     B0 B7 EF 37 
11b1e     4E 40 3F 6B 
11b22     60 20 13 22 | 	byte	$c0, $94, $af, $c8, $b0, $b7, $ef, $37, $4e, $40, $3f, $6b, $60, $20, $13, $22
11b26     10 1B 28 00 
11b2a     D9 F7 0C E8 
11b2e     B0 8D 9F A0 
11b32     80 87 BF 0F | 	byte	$10, $1b, $28, $00, $d9, $f7, $0c, $e8, $b0, $8d, $9f, $a0, $80, $87, $bf, $0f
11b36     1B 2F 53 40 
11b3a     F0 C6 D5 EF 
11b3e     17 47 63 60 
11b42     58 44 10 D0 | 	byte	$1b, $2f, $53, $40, $f0, $c6, $d5, $ef, $17, $47, $63, $60, $58, $44, $10, $d0
11b46     90 80 8F BF 
11b4a     EF 0F 2F 52 
11b4e     48 10 E8 E7 
11b52     FF 22 10 0F | 	byte	$90, $80, $8f, $bf, $ef, $0f, $2f, $52, $48, $10, $e8, $e7, $ff, $22, $10, $0f
11b56     27 18 0A 1F 
11b5a     20 F8 E0 DF 
11b5e     E3 F6 FD 13 
11b62     2F 24 12 1F | 	byte	$27, $18, $0a, $1f, $20, $f8, $e0, $df, $e3, $f6, $fd, $13, $2f, $24, $12, $1f
11b66     33 37 34 20 
11b6a     00 EA EB FB 
11b6e     07 09 0F 10 
11b72     F0 D6 DF E6 | 	byte	$33, $37, $34, $20, $00, $ea, $eb, $fb, $07, $09, $0f, $10, $f0, $d6, $df, $e6
11b76     E0 E7 F2 F1 
11b7a     E8 EF 06 00 
11b7e     F4 F7 FF 04 
11b82     07 0D 1B 27 | 	byte	$e0, $e7, $f2, $f1, $e8, $ef, $06, $00, $f4, $f7, $ff, $04, $07, $0d, $1b, $27
11b86     28 20 15 1F 
11b8a     28 26 26 22 
11b8e     14 0A 05 00 
11b92     F2 F3 E8 DA | 	byte	$28, $20, $15, $1f, $28, $26, $26, $22, $14, $0a, $05, $00, $f2, $f3, $e8, $da
11b96     D3 D7 DB EB 
11b9a     FF 09 08 06 
11b9e     07 09 13 27 
11ba2     34 2C 26 28 | 	byte	$d3, $d7, $db, $eb, $ff, $09, $08, $06, $07, $09, $13, $27, $34, $2c, $26, $28
11ba6     22 1C 1F 2D 
11baa     35 2E 28 24 
11bae     14 08 04 00 
11bb2     F4 E0 D2 CB | 	byte	$22, $1c, $1f, $2d, $35, $2e, $28, $24, $14, $08, $04, $00, $f4, $e0, $d2, $cb
11bb6     C5 C9 CF CE 
11bba     C8 C7 CD CB 
11bbe     CA CA CF D9 
11bc2     DD E0 E7 F5 | 	byte	$c5, $c9, $cf, $ce, $c8, $c7, $cd, $cb, $ca, $ca, $cf, $d9, $dd, $e0, $e7, $f5
11bc6     FF 0F 10 08 
11bca     0C 0C 09 08 
11bce     09 0A 0F 0D 
11bd2     17 27 2A 21 | 	byte	$ff, $0f, $10, $08, $0c, $0c, $09, $08, $09, $0a, $0f, $0d, $17, $27, $2a, $21
11bd6     14 04 FD F5 
11bda     EB ED FF 13 
11bde     23 35 3E 38 
11be2     2A 22 1A 14 | 	byte	$14, $04, $fd, $f5, $eb, $ed, $ff, $13, $23, $35, $3e, $38, $2a, $22, $1a, $14
11be6     17 2F 3B 41 
11bea     40 38 28 18 
11bee     10 10 15 11 
11bf2     0C 06 04 01 | 	byte	$17, $2f, $3b, $41, $40, $38, $28, $18, $10, $10, $15, $11, $0c, $06, $04, $01
11bf6     F8 ED E4 E5 
11bfa     E5 E5 E7 EE 
11bfe     F7 F8 F0 E5 
11c02     E9 EF F3 F2 | 	byte	$f8, $ed, $e4, $e5, $e5, $e5, $e7, $ee, $f7, $f8, $f0, $e5, $e9, $ef, $f3, $f2
11c06     EE F4 FB FB 
11c0a     FB FE FF 00 
11c0e     F1 DC CE D3 
11c12     DF E1 E1 E9 | 	byte	$ee, $f4, $fb, $fb, $fb, $fe, $ff, $00, $f1, $dc, $ce, $d3, $df, $e1, $e1, $e9
11c16     F5 FB F6 F1 
11c1a     F0 F1 EE EC 
11c1e     EF FF 0F 1F 
11c22     2B 2C 29 24 | 	byte	$f5, $fb, $f6, $f1, $f0, $f1, $ee, $ec, $ef, $ff, $0f, $1f, $2b, $2c, $29, $24
11c26     24 2A 31 38 
11c2a     42 44 40 3C 
11c2e     35 2A 20 1A 
11c32     10 04 F4 E6 | 	byte	$24, $2a, $31, $38, $42, $44, $40, $3c, $35, $2a, $20, $1a, $10, $04, $f4, $e6
11c36     DA CE C9 C8 
11c3a     C4 BE BA BD 
11c3e     BF BC BC C4 
11c42     CC D7 EB FA | 	byte	$da, $ce, $c9, $c8, $c4, $be, $ba, $bd, $bf, $bc, $bc, $c4, $cc, $d7, $eb, $fa
11c46     FF 0B 17 1D 
11c4a     1A 18 1D 25 
11c4e     20 18 13 0C 
11c52     00 F6 F0 EA | 	byte	$ff, $0b, $17, $1d, $1a, $18, $1d, $25, $20, $18, $13, $0c, $00, $f6, $f0, $ea
11c56     ED F5 FD 03 
11c5a     01 FE F8 F0 
11c5e     EF F7 FE 03 
11c62     0B 13 18 16 | 	byte	$ed, $f5, $fd, $03, $01, $fe, $f8, $f0, $ef, $f7, $fe, $03, $0b, $13, $18, $16
11c66     12 13 15 15 
11c6a     17 23 24 1C 
11c6e     1C 1C 14 08 
11c72     01 01 00 FC | 	byte	$12, $13, $15, $15, $17, $23, $24, $1c, $1c, $1c, $14, $08, $01, $01, $00, $fc
11c76     F8 FB FA F0 
11c7a     EA EC EC EB 
11c7e     EF FA FC FB 
11c82     FF 03 05 0A | 	byte	$f8, $fb, $fa, $f0, $ea, $ec, $ec, $eb, $ef, $fa, $fc, $fb, $ff, $03, $05, $0a
11c86     0E 19 1D 15 
11c8a     08 F8 F0 F3 
11c8e     F8 F9 FE FC 
11c92     F2 EC E9 E8 | 	byte	$0e, $19, $1d, $15, $08, $f8, $f0, $f3, $f8, $f9, $fe, $fc, $f2, $ec, $e9, $e8
11c96     E8 E9 EF FF 
11c9a     0B 13 1D 27 
11c9e     31 34 38 3B 
11ca2     3F 4B 59 5F | 	byte	$e8, $e9, $ef, $ff, $0b, $13, $1d, $27, $31, $34, $38, $3b, $3f, $4b, $59, $5f
11ca6     5C 58 50 45 
11caa     34 24 19 10 
11cae     02 F4 E6 DA 
11cb2     D0 C2 B6 AC | 	byte	$5c, $58, $50, $45, $34, $24, $19, $10, $02, $f4, $e6, $da, $d0, $c2, $b6, $ac
11cb6     A2 9C 98 96 
11cba     9A A2 A9 B1 
11cbe     BF CD DB E3 
11cc2     EA F5 FF 0B | 	byte	$a2, $9c, $98, $96, $9a, $a2, $a9, $b1, $bf, $cd, $db, $e3, $ea, $f5, $ff, $0b
11cc6     15 1D 1E 20 
11cca     20 1D 14 14 
11cce     18 16 16 15 
11cd2     12 12 11 11 | 	byte	$15, $1d, $1e, $20, $20, $1d, $14, $14, $18, $16, $16, $15, $12, $12, $11, $11
11cd6     0C 04 FF 05 
11cda     0F 12 17 1E 
11cde     20 18 10 0D 
11ce2     15 1B 22 2B | 	byte	$0c, $04, $ff, $05, $0f, $12, $17, $1e, $20, $18, $10, $0d, $15, $1b, $22, $2b
11ce6     32 37 38 30 
11cea     29 24 20 19 
11cee     16 19 1F 1A 
11cf2     12 0C 08 00 | 	byte	$32, $37, $38, $30, $29, $24, $20, $19, $16, $19, $1f, $1a, $12, $0c, $08, $00
11cf6     F5 EE EC EF 
11cfa     F7 FC FA F6 
11cfe     F7 FA FA F9 
11d02     F0 E7 E5 E9 | 	byte	$f5, $ee, $ec, $ef, $f7, $fc, $fa, $f6, $f7, $fa, $fa, $f9, $f0, $e7, $e5, $e9
11d06     ED EF EE E2 
11d0a     D6 D2 D0 D1 
11d0e     D4 D6 DE E7 
11d12     F1 FA 05 14 | 	byte	$ed, $ef, $ee, $e2, $d6, $d2, $d0, $d1, $d4, $d6, $de, $e7, $f1, $fa, $05, $14
11d16     27 37 3A 3A 
11d1a     3D 4B 5F 6B 
11d1e     6B 66 65 60 
11d22     4C 38 28 19 | 	byte	$27, $37, $3a, $3a, $3d, $4b, $5f, $6b, $6b, $66, $65, $60, $4c, $38, $28, $19
11d26     0C F8 E4 D4 
11d2a     CA C1 B4 A4 
11d2e     92 8B 84 81 
11d32     87 91 9B AB | 	byte	$0c, $f8, $e4, $d4, $ca, $c1, $b4, $a4, $92, $8b, $84, $81, $87, $91, $9b, $ab
11d36     BD C5 CE D9 
11d3a     E5 EF F9 06 
11d3e     13 1B 23 36 
11d42     3D 39 38 32 | 	byte	$bd, $c5, $ce, $d9, $e5, $ef, $f9, $06, $13, $1b, $23, $36, $3d, $39, $38, $32
11d46     2C 2A 20 10 
11d4a     0A 0A 08 00 
11d4e     FB F8 FB FA 
11d52     F6 FA 03 05 | 	byte	$2c, $2a, $20, $10, $0a, $0a, $08, $00, $fb, $f8, $fb, $fa, $f6, $fa, $03, $05
11d56     07 0B 0D 13 
11d5a     17 19 1C 1F 
11d5e     1E 1C 1C 1D 
11d62     1F 1D 16 10 | 	byte	$07, $0b, $0d, $13, $17, $19, $1c, $1f, $1e, $1c, $1c, $1d, $1f, $1d, $16, $10
11d66     0E 0E 0D 0C 
11d6a     08 03 05 01 
11d6e     F9 F7 F9 F4 
11d72     F3 F5 F2 E9 | 	byte	$0e, $0e, $0d, $0c, $08, $03, $05, $01, $f9, $f7, $f9, $f4, $f3, $f5, $f2, $e9
11d76     E0 D8 D5 D7 
11d7a     D2 C8 C2 C0 
11d7e     C2 C5 C9 D3 
11d82     DB E3 F3 FF | 	byte	$e0, $d8, $d5, $d7, $d2, $c8, $c2, $c0, $c2, $c5, $c9, $d3, $db, $e3, $f3, $ff
11d86     09 1B 29 33 
11d8a     3D 47 52 5B 
11d8e     66 6D 6E 68 
11d92     5C 54 4C 40 | 	byte	$09, $1b, $29, $33, $3d, $47, $52, $5b, $66, $6d, $6e, $68, $5c, $54, $4c, $40
11d96     35 2A 20 18 
11d9a     10 02 F0 DC 
11d9e     D0 C4 B6 A8 
11da2     A1 A1 9D 9F | 	byte	$35, $2a, $20, $18, $10, $02, $f0, $dc, $d0, $c4, $b6, $a8, $a1, $a1, $9d, $9f
11da6     A3 A7 AA AE 
11daa     B7 BF C6 CB 
11dae     D9 EB F5 FE 
11db2     07 13 1F 2D | 	byte	$a3, $a7, $aa, $ae, $b7, $bf, $c6, $cb, $d9, $eb, $f5, $fe, $07, $13, $1f, $2d
11db6     36 3A 3A 35 
11dba     34 30 29 22 
11dbe     20 20 1A 11 
11dc2     08 02 02 FC | 	byte	$36, $3a, $3a, $35, $34, $30, $29, $22, $20, $20, $1a, $11, $08, $02, $02, $fc
11dc6     F8 F8 F7 FA 
11dca     03 0A 0B 0E 
11dce     12 12 10 11 
11dd2     15 19 1B 1D | 	byte	$f8, $f8, $f7, $fa, $03, $0a, $0b, $0e, $12, $12, $10, $11, $15, $19, $1b, $1d
11dd6     21 20 1E 20 
11dda     23 21 21 23 
11dde     20 19 16 14 
11de2     0C 00 F4 EA | 	byte	$21, $20, $1e, $20, $23, $21, $21, $23, $20, $19, $16, $14, $0c, $00, $f4, $ea
11de6     E2 D9 D0 C8 
11dea     C2 BF BF C6 
11dee     CD CF D1 DA 
11df2     E5 EF F9 06 | 	byte	$e2, $d9, $d0, $c8, $c2, $bf, $bf, $c6, $cd, $cf, $d1, $da, $e5, $ef, $f9, $06
11df6     1B 33 3F 4D 
11dfa     5B 65 6B 6F 
11dfe     70 6F 6C 64 
11e02     5C 52 4A 40 | 	byte	$1b, $33, $3f, $4d, $5b, $65, $6b, $6f, $70, $6f, $6c, $64, $5c, $52, $4a, $40
11e06     28 19 0C 00 
11e0a     F0 E0 D0 C0 
11e0e     B8 AA 98 90 
11e12     93 97 9D A2 | 	byte	$28, $19, $0c, $00, $f0, $e0, $d0, $c0, $b8, $aa, $98, $90, $93, $97, $9d, $a2
11e16     A7 AF B7 BF 
11e1a     CB D7 E5 F3 
11e1e     FD 05 13 1F 
11e22     26 2A 2B 28 | 	byte	$a7, $af, $b7, $bf, $cb, $d7, $e5, $f3, $fd, $05, $13, $1f, $26, $2a, $2b, $28
11e26     25 21 20 1E 
11e2a     1D 18 16 13 
11e2e     0C 07 06 00 
11e32     F2 F0 EF EA | 	byte	$25, $21, $20, $1e, $1d, $18, $16, $13, $0c, $07, $06, $00, $f2, $f0, $ef, $ea
11e36     E9 F2 FE 04 
11e3a     05 02 02 01 
11e3e     02 04 06 0A 
11e42     11 17 1D 21 | 	byte	$e9, $f2, $fe, $04, $05, $02, $02, $01, $02, $04, $06, $0a, $11, $17, $1d, $21
11e46     25 28 28 20 
11e4a     18 11 0D 08 
11e4e     07 05 FC EC 
11e52     DA D0 CE CC | 	byte	$25, $28, $28, $20, $18, $11, $0d, $08, $07, $05, $fc, $ec, $da, $d0, $ce, $cc
11e56     CB CE D0 D1 
11e5a     D7 DF E7 F5 
11e5e     05 11 17 1D 
11e62     2B 3D 4B 57 | 	byte	$cb, $ce, $d0, $d1, $d7, $df, $e7, $f5, $05, $11, $17, $1d, $2b, $3d, $4b, $57
11e66     63 6B 6C 66 
11e6a     60 5A 50 48 
11e6e     40 34 26 19 
11e72     0D 00 F0 E0 | 	byte	$63, $6b, $6c, $66, $60, $5a, $50, $48, $40, $34, $26, $19, $0d, $00, $f0, $e0
11e76     D0 C0 B0 A6 
11e7a     A4 98 8E 8B 
11e7e     88 87 8D 99 
11e82     A4 AE B7 BF | 	byte	$d0, $c0, $b0, $a6, $a4, $98, $8e, $8b, $88, $87, $8d, $99, $a4, $ae, $b7, $bf
11e86     CB D7 EA F9 
11e8a     04 0F 1D 26 
11e8e     2B 31 39 3D 
11e92     3A 34 32 2E | 	byte	$cb, $d7, $ea, $f9, $04, $0f, $1d, $26, $2b, $31, $39, $3d, $3a, $34, $32, $2e
11e96     2B 28 24 1C 
11e9a     15 10 06 FC 
11e9e     F5 EE E8 E2 
11ea2     E1 E5 EA EE | 	byte	$2b, $28, $24, $1c, $15, $10, $06, $fc, $f5, $ee, $e8, $e2, $e1, $e5, $ea, $ee
11ea6     F2 F7 FC FF 
11eaa     07 13 1F 27 
11eae     26 20 16 14 
11eb2     14 11 08 FA | 	byte	$f2, $f7, $fc, $ff, $07, $13, $1f, $27, $26, $20, $16, $14, $14, $11, $08, $fa
11eb6     EC E3 E0 DE 
11eba     DE DF DB D7 
11ebe     D7 D8 DB E6 
11ec2     F4 FF 09 16 | 	byte	$ec, $e3, $e0, $de, $de, $df, $db, $d7, $d7, $d8, $db, $e6, $f4, $ff, $09, $16
11ec6     23 33 43 57 
11eca     63 6B 6F 74 
11ece     75 72 6D 68 
11ed2     60 51 44 38 | 	byte	$23, $33, $43, $57, $63, $6b, $6f, $74, $75, $72, $6d, $68, $60, $51, $44, $38
11ed6     29 1A 0A FC 
11eda     EA D8 CA C1 
11ede     BA B0 A6 9C 
11ee2     96 94 93 95 | 	byte	$29, $1a, $0a, $fc, $ea, $d8, $ca, $c1, $ba, $b0, $a6, $9c, $96, $94, $93, $95
11ee6     9B A6 AF BD 
11eea     C7 D5 E3 EF 
11eee     F5 FB 05 0F 
11ef2     19 23 2B 2F | 	byte	$9b, $a6, $af, $bd, $c7, $d5, $e3, $ef, $f5, $fb, $05, $0f, $19, $23, $2b, $2f
11ef6     30 30 2D 2C 
11efa     28 21 1C 18 
11efe     12 0D 08 02 
11f02     FC F6 F4 F0 | 	byte	$30, $30, $2d, $2c, $28, $21, $1c, $18, $12, $0d, $08, $02, $fc, $f6, $f4, $f0
11f06     EF F3 FA FF 
11f0a     05 0F 19 25 
11f0e     2C 2C 22 18 
11f12     13 15 18 14 | 	byte	$ef, $f3, $fa, $ff, $05, $0f, $19, $25, $2c, $2c, $22, $18, $13, $15, $18, $14
11f16     0A 00 F6 ED 
11f1a     E8 E4 E0 DB 
11f1e     DA DD E1 E7 
11f22     F3 06 13 18 | 	byte	$0a, $00, $f6, $ed, $e8, $e4, $e0, $db, $da, $dd, $e1, $e7, $f3, $06, $13, $18
11f26     1D 24 2F 3A 
11f2a     45 4F 59 5D 
11f2e     5F 60 60 5B 
11f32     50 48 3C 2C | 	byte	$1d, $24, $2f, $3a, $45, $4f, $59, $5d, $5f, $60, $60, $5b, $50, $48, $3c, $2c
11f36     20 18 10 09 
11f3a     01 F8 E8 D8 
11f3e     CC C0 B4 AA 
11f42     A2 9D 9D A1 | 	byte	$20, $18, $10, $09, $01, $f8, $e8, $d8, $cc, $c0, $b4, $aa, $a2, $9d, $9d, $a1
11f46     A7 AB B3 B9 
11f4a     BF C6 CC D5 
11f4e     DF EA F2 F8 
11f52     FE 06 0D 0F | 	byte	$a7, $ab, $b3, $b9, $bf, $c6, $cc, $d5, $df, $ea, $f2, $f8, $fe, $06, $0d, $0f
11f56     12 17 16 10 
11f5a     0C 0C 0A 06 
11f5e     03 00 FD FA 
11f62     F8 F7 F4 F2 | 	byte	$12, $17, $16, $10, $0c, $0c, $0a, $06, $03, $00, $fd, $fa, $f8, $f7, $f4, $f2
11f66     F3 F3 F3 F7 
11f6a     FF 0D 15 1A 
11f6e     18 13 10 13 
11f72     19 1D 1C 15 | 	byte	$f3, $f3, $f3, $f7, $ff, $0d, $15, $1a, $18, $13, $10, $13, $19, $1d, $1c, $15
11f76     0D 08 05 05 
11f7a     05 02 FD FC 
11f7e     FC FE 03 0A 
11f82     0F 16 1A 1D | 	byte	$0d, $08, $05, $05, $05, $02, $fd, $fc, $fc, $fe, $03, $0a, $0f, $16, $1a, $1d
11f86     21 2D 37 3C 
11f8a     3D 3C 3A 3A 
11f8e     3B 38 33 2B 
11f92     24 19 0C 02 | 	byte	$21, $2d, $37, $3c, $3d, $3c, $3a, $3a, $3b, $38, $33, $2b, $24, $19, $0c, $02
11f96     FE FA F1 E2 
11f9a     D8 D2 CC C4 
11f9e     C0 C0 BE BD 
11fa2     BE C5 CF DB | 	byte	$fe, $fa, $f1, $e2, $d8, $d2, $cc, $c4, $c0, $c0, $be, $bd, $be, $c5, $cf, $db
11fa6     E3 E9 EF F0 
11faa     F3 FA FD FC 
11fae     FA F9 F6 F2 
11fb2     F1 F3 F0 EC | 	byte	$e3, $e9, $ef, $f0, $f3, $fa, $fd, $fc, $fa, $f9, $f6, $f2, $f1, $f3, $f0, $ec
11fb6     E8 E0 DF DF 
11fba     DD DE E4 EA 
11fbe     EE F4 FC 06 
11fc2     0F 14 17 1C | 	byte	$e8, $e0, $df, $df, $dd, $de, $e4, $ea, $ee, $f4, $fc, $06, $0f, $14, $17, $1c
11fc6     22 29 2D 28 
11fca     20 1D 1D 1C 
11fce     12 00 F4 E8 
11fd2     DD D8 D9 DC | 	byte	$22, $29, $2d, $28, $20, $1d, $1d, $1c, $12, $00, $f4, $e8, $dd, $d8, $d9, $dc
11fd6     DE E1 E6 ED 
11fda     F3 F9 05 12 
11fde     1F 2F 3F 4D 
11fe2     5B 69 77 79 | 	byte	$de, $e1, $e6, $ed, $f3, $f9, $05, $12, $1f, $2f, $3f, $4d, $5b, $69, $77, $79
11fe6     73 6C 68 65 
11fea     5C 51 4A 42 
11fee     34 24 12 04 
11ff2     F8 E2 D0 C2 | 	byte	$73, $6c, $68, $65, $5c, $51, $4a, $42, $34, $24, $12, $04, $f8, $e2, $d0, $c2
11ff6     B5 B0 AE A9 
11ffa     A6 AA AF B5 
11ffe     BB C7 D3 DB 
12002     E7 F1 F7 FF | 	byte	$b5, $b0, $ae, $a9, $a6, $aa, $af, $b5, $bb, $c7, $d3, $db, $e7, $f1, $f7, $ff
12006     0D 12 14 15 
1200a     13 10 08 04 
1200e     02 FC F5 F3 
12012     F2 EE EB E8 | 	byte	$0d, $12, $14, $15, $13, $10, $08, $04, $02, $fc, $f5, $f3, $f2, $ee, $eb, $e8
12016     E3 E3 E6 EB 
1201a     F1 F9 FF 0D 
1201e     17 1D 20 18 
12022     12 12 12 12 | 	byte	$e3, $e3, $e6, $eb, $f1, $f9, $ff, $0d, $17, $1d, $20, $18, $12, $12, $12, $12
12026     10 0F 08 FD 
1202a     F8 F8 FA FA 
1202e     FA FB FB FE 
12032     03 0D 15 1D | 	byte	$10, $0f, $08, $fd, $f8, $f8, $fa, $fa, $fa, $fb, $fb, $fe, $03, $0d, $15, $1d
12036     21 25 2B 33 
1203a     3B 43 49 4B 
1203e     49 47 45 45 
12042     44 40 38 30 | 	byte	$21, $25, $2b, $33, $3b, $43, $49, $4b, $49, $47, $45, $45, $44, $40, $38, $30
12046     25 1C 12 09 
1204a     00 F8 F0 E4 
1204e     DE D8 D5 D3 
12052     D3 D3 D3 D6 | 	byte	$25, $1c, $12, $09, $00, $f8, $f0, $e4, $de, $d8, $d5, $d3, $d3, $d3, $d3, $d6
12056     DA DF E3 E7 
1205a     E9 E9 E7 EA 
1205e     EC EA E9 EA 
12062     EB E8 E7 E5 | 	byte	$da, $df, $e3, $e7, $e9, $e9, $e7, $ea, $ec, $ea, $e9, $ea, $eb, $e8, $e7, $e5
12066     E7 E7 E4 E2 
1206a     E3 E6 EB EF 
1206e     F5 FA FB FE 
12072     02 07 09 0B | 	byte	$e7, $e7, $e4, $e2, $e3, $e6, $eb, $ef, $f5, $fa, $fb, $fe, $02, $07, $09, $0b
12076     09 05 03 04 
1207a     06 08 08 02 
1207e     FB F6 F6 F8 
12082     FB FD FF 05 | 	byte	$09, $05, $03, $04, $06, $08, $08, $02, $fb, $f6, $f6, $f8, $fb, $fd, $ff, $05
12086     07 09 0D 11 
1208a     15 18 1D 20 
1208e     23 27 2F 34 
12092     39 38 33 31 | 	byte	$07, $09, $0d, $11, $15, $18, $1d, $20, $23, $27, $2f, $34, $39, $38, $33, $31
12096     30 2B 25 22 
1209a     1D 18 13 0D 
1209e     06 00 FA F0 
120a2     E8 E2 DD DD | 	byte	$30, $2b, $25, $22, $1d, $18, $13, $0d, $06, $00, $fa, $f0, $e8, $e2, $dd, $dd
120a6     DF E1 E3 E5 
120aa     E6 E6 E6 E7 
120ae     E9 EC EE EF 
120b2     F0 F3 F2 F4 | 	byte	$df, $e1, $e3, $e5, $e6, $e6, $e6, $e7, $e9, $ec, $ee, $ef, $f0, $f3, $f2, $f4
120b6     F4 F0 EC EC 
120ba     ED EC E9 E9 
120be     ED EF ED ED 
120c2     ED EE EE F0 | 	byte	$f4, $f0, $ec, $ec, $ed, $ec, $e9, $e9, $ed, $ef, $ed, $ed, $ed, $ee, $ee, $f0
120c6     F3 F5 F5 F5 
120ca     F3 F0 EF F2 
120ce     F2 F0 F1 F1 
120d2     F1 F6 FA FE | 	byte	$f3, $f5, $f5, $f5, $f3, $f0, $ef, $f2, $f2, $f0, $f1, $f1, $f1, $f6, $fa, $fe
120d6     02 07 0B 0F 
120da     16 1F 29 2F 
120de     33 3B 41 41 
120e2     43 45 45 43 | 	byte	$02, $07, $0b, $0f, $16, $1f, $29, $2f, $33, $3b, $41, $41, $43, $45, $45, $43
120e6     41 3E 38 30 
120ea     2B 24 1C 14 
120ee     0B 04 FD F6 
120f2     F4 F5 F4 F0 | 	byte	$41, $3e, $38, $30, $2b, $24, $1c, $14, $0b, $04, $fd, $f6, $f4, $f5, $f4, $f0
120f6     ED EC ED EA 
120fa     E8 E9 EF F0 
120fe     EF F2 F6 F8 
12102     F7 F2 EF ED | 	byte	$ed, $ec, $ed, $ea, $e8, $e9, $ef, $f0, $ef, $f2, $f6, $f8, $f7, $f2, $ef, $ed
12106     EB E9 EA EC 
1210a     EE ED EB E9 
1210e     E8 E8 E7 E8 
12112     EA ED EF F4 | 	byte	$eb, $e9, $ea, $ec, $ee, $ed, $eb, $e9, $e8, $e8, $e7, $e8, $ea, $ed, $ef, $f4
12116     F9 FF 05 08 
1211a     09 09 0A 0B 
1211e     0B 0A 0C 0F 
12122     0D 0A 08 07 | 	byte	$f9, $ff, $05, $08, $09, $09, $0a, $0b, $0b, $0a, $0c, $0f, $0d, $0a, $08, $07
12126     06 05 02 01 
1212a     03 06 0B 0F 
1212e     13 19 1C 1E 
12132     21 26 29 2C | 	byte	$06, $05, $02, $01, $03, $06, $0b, $0f, $13, $19, $1c, $1e, $21, $26, $29, $2c
12136     2E 2F 2F 2E 
1213a     2A 28 25 20 
1213e     1A 17 15 12 
12142     10 0D 0C 09 | 	byte	$2e, $2f, $2f, $2e, $2a, $28, $25, $20, $1a, $17, $15, $12, $10, $0d, $0c, $09
12146     05 02 01 00 
1214a     FC FA F9 F8 
1214e     F6 F3 F1 F3 
12152     F3 EF EC EC | 	byte	$05, $02, $01, $00, $fc, $fa, $f9, $f8, $f6, $f3, $f1, $f3, $f3, $ef, $ec, $ec
12156     ED EE ED EC 
1215a     EA E8 E8 E7 
1215e     E7 E8 E8 E6 
12162     E5 E4 E5 E8 | 	byte	$ed, $ee, $ed, $ec, $ea, $e8, $e8, $e7, $e7, $e8, $e8, $e6, $e5, $e4, $e5, $e8
12166     EA EC ED ED 
1216a     ED F0 F3 F6 
1216e     F8 FC FF FF 
12172     02 06 06 09 | 	byte	$ea, $ec, $ed, $ed, $ed, $f0, $f3, $f6, $f8, $fc, $ff, $ff, $02, $06, $06, $09
12176     0C 0F 10 12 
1217a     15 1B 1C 1D 
1217e     1F 22 23 21 
12182     21 23 23 21 | 	byte	$0c, $0f, $10, $12, $15, $1b, $1c, $1d, $1f, $22, $23, $21, $21, $23, $23, $21
12186     20 1D 19 18 
1218a     15 12 10 10 
1218e     0F 0C 08 08 
12192     0A 08 04 01 | 	byte	$20, $1d, $19, $18, $15, $12, $10, $10, $0f, $0c, $08, $08, $0a, $08, $04, $01
12196     FF FC FA F7 
1219a     F6 F7 F6 F2 
1219e     F0 EE EC ED 
121a2     EB E9 EA ED | 	byte	$ff, $fc, $fa, $f7, $f6, $f7, $f6, $f2, $f0, $ee, $ec, $ed, $eb, $e9, $ea, $ed
121a6     ED EB ED F1 
121aa     F1 F0 EF F0 
121ae     F2 F1 F2 F4 
121b2     F5 F5 F4 F3 | 	byte	$ed, $eb, $ed, $f1, $f1, $f0, $ef, $f0, $f2, $f1, $f2, $f4, $f5, $f5, $f4, $f3
121b6     F2 F2 F2 F2 
121ba     F2 F2       | 	byte	$f2[6]
121bc     F1 F1 F0 F0 
121c0     F1 F3 F6 F8 
121c4     F9 FC FF 02 
121c8     05 07 09 0D | 	byte	$f1, $f1, $f0, $f0, $f1, $f3, $f6, $f8, $f9, $fc, $ff, $02, $05, $07, $09, $0d
121cc     12 16 18 1C 
121d0     1F 20 22 22 
121d4     22 22 23 21 
121d8     20 20 1E 1B | 	byte	$12, $16, $18, $1c, $1f, $20, $22, $22, $22, $22, $23, $21, $20, $20, $1e, $1b
121dc     18 14 10 0C 
121e0     09 04 00 FE 
121e4     FD FB F8 F4 
121e8     F4 F2 EF EE | 	byte	$18, $14, $10, $0c, $09, $04, $00, $fe, $fd, $fb, $f8, $f4, $f4, $f2, $ef, $ee
121ec     EF EF EE EF 
121f0     F2 F3 F2 F3 
121f4     F3 F1 F0 F0 
121f8     EF EC ED EF | 	byte	$ef, $ef, $ee, $ef, $f2, $f3, $f2, $f3, $f3, $f1, $f0, $f0, $ef, $ec, $ed, $ef
121fc     EF EE ED EE 
12200     F1 F3 F2 F3 
12204     F4 F7 F8 FB 
12208     FD 02 06 09 | 	byte	$ef, $ee, $ed, $ee, $f1, $f3, $f2, $f3, $f4, $f7, $f8, $fb, $fd, $02, $06, $09
1220c     0B 0E 10 11 
12210     11 13 16 16 
12214     14 16 18 18 
12218     13 11 13 12 | 	byte	$0b, $0e, $10, $11, $11, $13, $16, $16, $14, $16, $18, $18, $13, $11, $13, $12
1221c     11 12 13 13 
12220     12 15 17 15 
12224     16 19 19 18 
12228     18 16 17 18 | 	byte	$11, $12, $13, $13, $12, $15, $17, $15, $16, $19, $19, $18, $18, $16, $17, $18
1222c     16 13 14 11 
12230     0E 0C 08 07 
12234     04 00 FD FA 
12238     F8 F5 F4 F1 | 	byte	$16, $13, $14, $11, $0e, $0c, $08, $07, $04, $00, $fd, $fa, $f8, $f5, $f4, $f1
1223c     EE EC EC E9 
12240     E9 EB EC EA 
12244     EB EF F0 EF 
12248     F1 F3 F5 F5 | 	byte	$ee, $ec, $ec, $e9, $e9, $eb, $ec, $ea, $eb, $ef, $f0, $ef, $f1, $f3, $f5, $f5
1224c     F7 F8 FA FB 
12250     FD FE FF FE 
12254     FF 04 06 06 
12258     0A 0C 09 0B | 	byte	$f7, $f8, $fa, $fb, $fd, $fe, $ff, $fe, $ff, $04, $06, $06, $0a, $0c, $09, $0b
1225c     0D 0E 10 10 
12260     11 12 13 13 
12264     15 16 15 17 
12268     19 16 15 15 | 	byte	$0d, $0e, $10, $10, $11, $12, $13, $13, $15, $16, $15, $17, $19, $16, $15, $15
1226c     16 16 15 14 
12270     13 12 11 10 
12274     0F 0F 0E 0C 
12278     09 08 07 05 | 	byte	$16, $16, $15, $14, $13, $12, $11, $10, $0f, $0f, $0e, $0c, $09, $08, $07, $05
1227c     04 02 01 00 
12280     FC FB FA F8 
12284     F6 F6 F4 F3 
12288     F3 F4 F3 F3 | 	byte	$04, $02, $01, $00, $fc, $fb, $fa, $f8, $f6, $f6, $f4, $f3, $f3, $f4, $f3, $f3
1228c     F3 F3 F3 F2 
12290     F2 F3 F4 F6 
12294     F7 F7 F9 F9 
12298     F9 FA FA F9 | 	byte	$f3, $f3, $f3, $f2, $f2, $f3, $f4, $f6, $f7, $f7, $f9, $f9, $f9, $fa, $fa, $f9
1229c     F9 FA FB FA 
122a0     F9 FA FA FA 
122a4     F9 FA FA FB 
122a8     FB FB FB FD | 	byte	$f9, $fa, $fb, $fa, $f9, $fa, $fa, $fa, $f9, $fa, $fa, $fb, $fb, $fb, $fb, $fd
122ac     FF 01 04 04 
122b0     06 08 08 0A 
122b4     0B 0C 0E 0F 
122b8     10 11 12 13 | 	byte	$ff, $01, $04, $04, $06, $08, $08, $0a, $0b, $0c, $0e, $0f, $10, $11, $12, $13
122bc     12 11 10 10 
122c0     10 0E 0D 0C 
122c4     0C 09 08 06 
122c8     05 05 02 01 | 	byte	$12, $11, $10, $10, $10, $0e, $0d, $0c, $0c, $09, $08, $06, $05, $05, $02, $01
122cc     FF FF FE FC 
122d0     FC FB FA F9 
122d4     F8 F6 F4 F3 
122d8     F4 F2 F0 EF | 	byte	$ff, $ff, $fe, $fc, $fc, $fb, $fa, $f9, $f8, $f6, $f4, $f3, $f4, $f2, $f0, $ef
122dc     F0 F0 EE EE 
122e0     EF F0 EF ED 
122e4     EF F1 F1 F0 
122e8     F1 F4 F5 F5 | 	byte	$f0, $f0, $ee, $ee, $ef, $f0, $ef, $ed, $ef, $f1, $f1, $f0, $f1, $f4, $f5, $f5
122ec     F7 F8 F9 FA 
122f0     FA FB FB FD 
122f4     FE FE FF 02 
122f8     05 06 06 06 | 	byte	$f7, $f8, $f9, $fa, $fa, $fb, $fb, $fd, $fe, $fe, $ff, $02, $05, $06, $06, $06
122fc     07 07 08 09 
12300     09 09 0B 0C 
12304     0A 0A 0C 0E 
12308     0E 0E 0E 0F | 	byte	$07, $07, $08, $09, $09, $09, $0b, $0c, $0a, $0a, $0c, $0e, $0e, $0e, $0e, $0f
1230c     0E 0F 11 12 
12310     11 10 10 0D 
12314     0C 0C 0B 08 
12318     08 0A 08 07 | 	byte	$0e, $0f, $11, $12, $11, $10, $10, $0d, $0c, $0c, $0b, $08, $08, $0a, $08, $07
1231c     06 06 07 05 
12320     02 02 02 02 
12324     02 02 01 00 
12328     01 FF FE FE | 	byte	$06, $06, $07, $05, $02, $02, $02, $02, $02, $02, $01, $00, $01, $ff, $fe, $fe
1232c     FF FF FF FD 
12330     FC FA F8 F9 
12334     FA FA F9 F8 
12338     F8 F7 F7 F7 | 	byte	$ff, $ff, $ff, $fd, $fc, $fa, $f8, $f9, $fa, $fa, $f9, $f8, $f8, $f7, $f7, $f7
1233c     F9 FA FA FC 
12340     FF 02 03 03 
12344     04 07 08 08 
12348     0B 0E 0F 0E | 	byte	$f9, $fa, $fa, $fc, $ff, $02, $03, $03, $04, $07, $08, $08, $0b, $0e, $0f, $0e
1234c     0E 0C 0D 0C 
12350     0C 0A 08 08 
12354     09 0A 0A 0A 
12358     0A 09 09 0A | 	byte	$0e, $0c, $0d, $0c, $0c, $0a, $08, $08, $09, $0a, $0a, $0a, $0a, $09, $09, $0a
1235c     0B 0B 0C 0E 
12360     10 10 10 12 
12364     14 14 13 14 
12368     14 12 12 11 | 	byte	$0b, $0b, $0c, $0e, $10, $10, $10, $12, $14, $14, $13, $14, $14, $12, $12, $11
1236c     10 10 0D 08 
12370     06 03 01 00 
12374     FC F9 F9 F8 
12378     F6 F6 F7 F7 | 	byte	$10, $10, $0d, $08, $06, $03, $01, $00, $fc, $f9, $f9, $f8, $f6, $f6, $f7, $f7
1237c     F7 F6 F6 F8 
12380     F9 FC FE FE 
12384     FE FF 01 01 
12388     01 01 01 01 | 	byte	$f7, $f6, $f6, $f8, $f9, $fc, $fe, $fe, $fe, $ff, $01, $01, $01, $01, $01, $01
1238c     00 FF FF 00 
12390     00 FF FD FD 
12394     FC FC FE FF 
12398     FE FE FF 01 | 	byte	$00, $ff, $ff, $00, $00, $ff, $fd, $fd, $fc, $fc, $fe, $ff, $fe, $fe, $ff, $01
1239c     02 03 04 04 
123a0     04 04 04 05 
123a4     05 07 08 08 
123a8     05 04 04 04 | 	byte	$02, $03, $04, $04, $04, $04, $04, $05, $05, $07, $08, $08, $05, $04, $04, $04
123ac     02 01 01 00 
123b0     FF FF FF FF 
123b4     FD FE 01 02 
123b8     00 01 02 03 | 	byte	$02, $01, $01, $00, $ff, $ff, $ff, $ff, $fd, $fe, $01, $02, $00, $01, $02, $03
123bc     03 03 03 04 
123c0     02 03 02 01 
123c4     01 FF FF FE 
123c8     FD FD FF FE | 	byte	$03, $03, $03, $04, $02, $03, $02, $01, $01, $ff, $ff, $fe, $fd, $fd, $ff, $fe
123cc     FC FC FC FC 
123d0     FB FC FD FD 
123d4     FD FD FF FF 
123d8     00 00 01 01 | 	byte	$fc, $fc, $fc, $fc, $fb, $fc, $fd, $fd, $fd, $fd, $ff, $ff, $00, $00, $01, $01
123dc     02 03 03 02 
123e0     03 02 01 FE 
123e4     FD FE FD FB 
123e8     FB FC FC FC | 	byte	$02, $03, $03, $02, $03, $02, $01, $fe, $fd, $fe, $fd, $fb, $fb, $fc, $fc, $fc
123ec     FB FD FF FE 
123f0     FD FF FF FF 
123f4     01 04 04 04 
123f8     05 04 04 04 | 	byte	$fb, $fd, $ff, $fe, $fd, $ff, $ff, $ff, $01, $04, $04, $04, $05, $04, $04, $04
123fc     04 02 00 01 
12400     00 01 01 00 
12404     FD FA FA F8 
12408     F6 F6 F8 F8 | 	byte	$04, $02, $00, $01, $00, $01, $01, $00, $fd, $fa, $fa, $f8, $f6, $f6, $f8, $f8
1240c     F9 FB FB FD 
12410     FF FF FF 03 
12414     05 04 05 07 
12418     09 09 06 05 | 	byte	$f9, $fb, $fb, $fd, $ff, $ff, $ff, $03, $05, $04, $05, $07, $09, $09, $06, $05
1241c     06 06 04 03 
12420     00 FF 00 FE 
12424     FD FF 00 FE 
12428     FD FE FF FF | 	byte	$06, $06, $04, $03, $00, $ff, $00, $fe, $fd, $ff, $00, $fe, $fd, $fe, $ff, $ff
1242c     00 03 06 08 
12430     08 09 0B 0A 
12434     0A 0C 0D 0A 
12438     09 0A 0A 09 | 	byte	$00, $03, $06, $08, $08, $09, $0b, $0a, $0a, $0c, $0d, $0a, $09, $0a, $0a, $09
1243c     08 06 05 04 
12440     04 04 04 03 
12444     04 05 03 02 
12448     02 02 03 04 | 	byte	$08, $06, $05, $04, $04, $04, $04, $03, $04, $05, $03, $02, $02, $02, $03, $04
1244c     04 04 05 04 
12450     04 04 05 05 
12454     04 05 05 06 
12458     06 06 06 06 | 	byte	$04, $04, $05, $04, $04, $04, $05, $05, $04, $05, $05, $06, $06, $06, $06, $06
1245c     04 03 03 04 
12460     04 05 05 04 
12464     05 04 04 05 
12468     04 04 03 04 | 	byte	$04, $03, $03, $04, $04, $05, $05, $04, $05, $04, $04, $05, $04, $04, $03, $04
1246c     04 03 02 04 
12470     03 03 03 04 
12474     03 04 05 05 
12478     04 04 05 06 | 	byte	$04, $03, $02, $04, $03, $03, $03, $04, $03, $04, $05, $05, $04, $04, $05, $06
1247c     06 07 07 07 
12480     07 07 07 08 
12484     08 08 08 07 
12488     08 07 07 07 | 	byte	$06, $07, $07, $07, $07, $07, $07, $08, $08, $08, $08, $07, $08, $07, $07, $07
1248c     07 07 04 04 
12490     05 03 03 03 
12494     03 01 00 00 
12498     00 00 FF 00 | 	byte	$07, $07, $04, $04, $05, $03, $03, $03, $03, $01, $00, $00, $00, $00, $ff, $00
1249c     00 00 00 00 
124a0     00 00       | 	byte	$00[6]
124a2     02 03 03 02 
124a6     03 03 03 01 
124aa     01 01 00 FF 
124ae     FE FC FC FC | 	byte	$02, $03, $03, $02, $03, $03, $03, $01, $01, $01, $00, $ff, $fe, $fc, $fc, $fc
124b2     FA FB FA F9 
124b6     F9 FB FB FB 
124ba     FC FB FC FD 
124be     FE FE FE FE | 	byte	$fa, $fb, $fa, $f9, $f9, $fb, $fb, $fb, $fc, $fb, $fc, $fd, $fe, $fe, $fe, $fe
124c2     FF 00 00 FF 
124c6     FF 00 00 00 
124ca     00 00 02 02 
124ce     01 01 02 02 | 	byte	$ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $00, $02, $02, $01, $01, $02, $02
124d2     00 00 01 00 
124d6     00 01 00 00 
124da     00 00 00 00 
124de     00 00 00 00 | 	byte	$00, $00, $01, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
124e2     01 01 01 03 
124e6     02 03 03 03 
124ea     03 03 03 03 
124ee     03 02 03 03 | 	byte	$01, $01, $01, $03, $02, $03, $03, $03, $03, $03, $03, $03, $03, $02, $03, $03
124f2     02 00 00 00 
124f6     FE FE FE FC 
124fa     FC FB FB FB 
124fe     FA FB FB FB | 	byte	$02, $00, $00, $00, $fe, $fe, $fe, $fc, $fc, $fb, $fb, $fb, $fa, $fb, $fb, $fb
12502     FA FC FD FD 
12506     FE FE FE FF 
1250a     FE FE FD FF 
1250e     FF FE FE FE | 	byte	$fa, $fc, $fd, $fd, $fe, $fe, $fe, $ff, $fe, $fe, $fd, $ff, $ff, $fe, $fe, $fe
12512     00 00 00 00 
12516     12 1D 21 00 
1251a     C0 A7 CF 17 
1251e     3F 38 2A 3F | 	byte	$00, $00, $00, $00, $12, $1d, $21, $00, $c0, $a7, $cf, $17, $3f, $38, $2a, $3f
12522     77 7E 40 E0 
12526     90 83 93 B7 
1252a     EF 37 5B 44 
1252e     08 D4 B0 B7 | 	byte	$77, $7e, $40, $e0, $90, $83, $93, $b7, $ef, $37, $5b, $44, $08, $d4, $b0, $b7
12532     DB 0D 14 0F 
12536     2F 4D 40 28 
1253a     08 D0 90 87 
1253e     B7 EF 2F 5F | 	byte	$db, $0d, $14, $0f, $2f, $4d, $40, $28, $08, $d0, $90, $87, $b7, $ef, $2f, $5f
12542     54 20 FB 0D 
12546     14 F0 CE EF 
1254a     27 39 3F 4F 
1254e     50 20 E0 A8 | 	byte	$54, $20, $fb, $0d, $14, $f0, $ce, $ef, $27, $39, $3f, $4f, $50, $20, $e0, $a8
12552     A5 BF DF EB 
12556     FB 05 13 0E 
1255a     1B 3F 5F 58 
1255e     20 11 15 1E | 	byte	$a5, $bf, $df, $eb, $fb, $05, $13, $0e, $1b, $3f, $5f, $58, $20, $11, $15, $1e
12562     18 0F 14 10 
12566     08 E8 C0 BF 
1256a     DF EC C8 A1 
1256e     AF DB FF 27 | 	byte	$18, $0f, $14, $10, $08, $e8, $c0, $bf, $df, $ec, $c8, $a1, $af, $db, $ff, $27
12572     3F 44 30 08 
12576     FF 27 57 6A 
1257a     60 40 10 E0 
1257e     C0 C5 D3 D0 | 	byte	$3f, $44, $30, $08, $ff, $27, $57, $6a, $60, $40, $10, $e0, $c0, $c5, $d3, $d0
12582     C0 BB C9 D7 
12586     F7 1F 35 29 
1258a     19 1D 33 4E 
1258e     4C 34 18 04 | 	byte	$c0, $bb, $c9, $d7, $f7, $1f, $35, $29, $19, $1d, $33, $4e, $4c, $34, $18, $04
12592     F0 E0 DF EF 
12596     F1 E0 D0 CF 
1259a     DB E7 FB 0B 
1259e     10 12 17 21 | 	byte	$f0, $e0, $df, $ef, $f1, $e0, $d0, $cf, $db, $e7, $fb, $0b, $10, $12, $17, $21
125a2     2F 3E 46 40 
125a6     30 18 09 06 
125aa     04 FC EC DC 
125ae     D0 C0 BF CF | 	byte	$2f, $3e, $46, $40, $30, $18, $09, $06, $04, $fc, $ec, $dc, $d0, $c0, $bf, $cf
125b2     E7 F5 F7 FA 
125b6     FF 0E 14 17 
125ba     1D 1A 10 0B 
125be     0E 14 10 0A | 	byte	$e7, $f5, $f7, $fa, $ff, $0e, $14, $17, $1d, $1a, $10, $0b, $0e, $14, $10, $0a
125c2     00 F0 E6 E7 
125c6     ED F5 F9 FA 
125ca     F4 F3 FB 07 
125ce     12 1B 26 28 | 	byte	$00, $f0, $e6, $e7, $ed, $f5, $f9, $fa, $f4, $f3, $fb, $07, $12, $1b, $26, $28
125d2     22 1C 19 14 
125d6     0C 09 06 FC 
125da     F4 F3 F6 F4 
125de     F5 F8 F9 F4 | 	byte	$22, $1c, $19, $14, $0c, $09, $06, $fc, $f4, $f3, $f6, $f4, $f5, $f8, $f9, $f4
125e2     F4 FB 03 07 
125e6     0E 15 1A 1E 
125ea     1E 1C 12 04 
125ee     00 FC F9 FB | 	byte	$f4, $fb, $03, $07, $0e, $15, $1a, $1e, $1e, $1c, $12, $04, $00, $fc, $f9, $fb
125f2     02 02 FC FC 
125f6     FF 01 FE FF 
125fa     0B 0C 0C 09 
125fe     08 0B 12 16 | 	byte	$02, $02, $fc, $fc, $ff, $01, $fe, $ff, $0b, $0c, $0c, $09, $08, $0b, $12, $16
12602     16 12 0C FC 
12606     F2 EF EA E2 
1260a     E2 ED FB 02 
1260e     02 FD F4 EE | 	byte	$16, $12, $0c, $fc, $f2, $ef, $ea, $e2, $e2, $ed, $fb, $02, $02, $fd, $f4, $ee
12612     EF F7 FF 17 
12616     26 24 14 08 
1261a     00 FA F0 EE 
1261e     F7 07 0F 10 | 	byte	$ef, $f7, $ff, $17, $26, $24, $14, $08, $00, $fa, $f0, $ee, $f7, $07, $0f, $10
12622     0F 10 0E 04 
12626     FC F6 F6 FF 
1262a     13 1F 1A 17 
1262e     15 14 0D 06 | 	byte	$0f, $10, $0e, $04, $fc, $f6, $f6, $ff, $13, $1f, $1a, $17, $15, $14, $0d, $06
12632     02 FE FC FE 
12636     02 0B 0F 15 
1263a     14 0C 05 03 
1263e     02 03 04 07 | 	byte	$02, $fe, $fc, $fe, $02, $0b, $0f, $15, $14, $0c, $05, $03, $02, $03, $04, $07
12642     0A 08 09 0E 
12646     10 08 00 F8 
1264a     F7 F8 FD 04 
1264e     0B 0A 06 01 | 	byte	$0a, $08, $09, $0e, $10, $08, $00, $f8, $f7, $f8, $fd, $04, $0b, $0a, $06, $01
12652     01 00 01 03 
12656     04 06 07 06 
1265a     03 01 01 FD 
1265e     F8 F4 F7 FB | 	byte	$01, $00, $01, $03, $04, $06, $07, $06, $03, $01, $01, $fd, $f8, $f4, $f7, $fb
12662     FA F5 F5 F7 
12666     F8 FA FF 03 
1266a     05 07 08 04 
1266e     FE FE 02 04 | 	byte	$fa, $f5, $f5, $f7, $f8, $fa, $ff, $03, $05, $07, $08, $04, $fe, $fe, $02, $04
12672     02 03 09 0C 
12676     08 08 08 06 
1267a     06 0B 0E 0F 
1267e     10 10 0A 06 | 	byte	$02, $03, $09, $0c, $08, $08, $08, $06, $06, $0b, $0e, $0f, $10, $10, $0a, $06
12682     04 06 08 0D 
12686     13 14 0D 08 
1268a     08 08 06 06 
1268e     0B 0C 06 02 | 	byte	$04, $06, $08, $0d, $13, $14, $0d, $08, $08, $08, $06, $06, $0b, $0c, $06, $02
12692     07 06 00 F8 
12696     F7 FA FF 07 
1269a     09 08 04 03 
1269e     05 03 02 05 | 	byte	$07, $06, $00, $f8, $f7, $fa, $ff, $07, $09, $08, $04, $03, $05, $03, $02, $05
126a2     0A 0C 0F 13 
126a6     14 0E 04 F8 
126aa     F0 EE F2 F5 
126ae     F3 F3 F5 F6 | 	byte	$0a, $0c, $0f, $13, $14, $0e, $04, $f8, $f0, $ee, $f2, $f5, $f3, $f3, $f5, $f6
126b2     FA FF 08 0A 
126b6     06 01 FE FD 
126ba     FE 02 06 04 
126be     04 03 03 00 | 	byte	$fa, $ff, $08, $0a, $06, $01, $fe, $fd, $fe, $02, $06, $04, $04, $03, $03, $00
126c2     FD F8 F4 F3 
126c6     F7 FB 03 08 
126ca     0A 05 00 FF 
126ce     04 0B 10 15 | 	byte	$fd, $f8, $f4, $f3, $f7, $fb, $03, $08, $0a, $05, $00, $ff, $04, $0b, $10, $15
126d2     16 16 14 10 
126d6     0D 08 00 F6 
126da     EE ED F3 FF 
126de     07 0D 0E 0E | 	byte	$16, $16, $14, $10, $0d, $08, $00, $f6, $ee, $ed, $f3, $ff, $07, $0d, $0e, $0e
126e2     0C 0C 0E 12 
126e6     12 0E 09 08 
126ea     0D 0F 0F 0A 
126ee     05 00 FD FD | 	byte	$0c, $0c, $0e, $12, $12, $0e, $09, $08, $0d, $0f, $0f, $0a, $05, $00, $fd, $fd
126f2     FF 03 04 02 
126f6     FE FC FF 07 
126fa     0E 11 10 0E 
126fe     0D 12 12 0B | 	byte	$ff, $03, $04, $02, $fe, $fc, $ff, $07, $0e, $11, $10, $0e, $0d, $12, $12, $0b
12702     00 F4 EF EC 
12706     EF F7 FD FF 
1270a     FE F8 F4 F3 
1270e     F7 FC FF 03 | 	byte	$00, $f4, $ef, $ec, $ef, $f7, $fd, $ff, $fe, $f8, $f4, $f3, $f7, $fc, $ff, $03
12712     0A 12 15 16 
12716     10 04 FA F6 
1271a     FA FF 04 08 
1271e     06 01 FA F5 | 	byte	$0a, $12, $15, $16, $10, $04, $fa, $f6, $fa, $ff, $04, $08, $06, $01, $fa, $f5
12722     F3 F4 F6 F7 
12726     FB 07 16 1D 
1272a     19 16 12 0C 
1272e     04 02 06 0B | 	byte	$f3, $f4, $f6, $f7, $fb, $07, $16, $1d, $19, $16, $12, $0c, $04, $02, $06, $0b
12732     0C 0E 0A 04 
12736     00 FF FE FB 
1273a     F8 FA FD 02 
1273e     09 0F 15 15 | 	byte	$0c, $0e, $0a, $04, $00, $ff, $fe, $fb, $f8, $fa, $fd, $02, $09, $0f, $15, $15
12742     14 10 0C 08 
12746     09 09 06 02 
1274a     02 07 08 08 
1274e     06 00 FD F8 | 	byte	$14, $10, $0c, $08, $09, $09, $06, $02, $02, $07, $08, $08, $06, $00, $fd, $f8
12752     F8 FC FF 05 
12756     07 09 0E 0A 
1275a     09 08 08 04 
1275e     FF FF 03 04 | 	byte	$f8, $fc, $ff, $05, $07, $09, $0e, $0a, $09, $08, $08, $04, $ff, $ff, $03, $04
12762     04 03 04 02 
12766     FD FA F8 F9 
1276a     FC 01 01 FF 
1276e     02 0C 12 12 | 	byte	$04, $03, $04, $02, $fd, $fa, $f8, $f9, $fc, $01, $01, $ff, $02, $0c, $12, $12
12772     0E 0E 0E 0D 
12776     08 05 07 0B 
1277a     0A 04 00 FF 
1277e     FD FB F9 FC | 	byte	$0e, $0e, $0e, $0d, $08, $05, $07, $0b, $0a, $04, $00, $ff, $fd, $fb, $f9, $fc
12782     FB FC FE FF 
12786     02 06 0A 09 
1278a     07 0A 0F 10 
1278e     10 0C 08 03 | 	byte	$fb, $fc, $fe, $ff, $02, $06, $0a, $09, $07, $0a, $0f, $10, $10, $0c, $08, $03
12792     00 03 06 04 
12796     03 04 03 FF 
1279a     FE 02 02 FE 
1279e     FF 02 04 07 | 	byte	$00, $03, $06, $04, $03, $04, $03, $ff, $fe, $02, $02, $fe, $ff, $02, $04, $07
127a2     0D 0E 0B 06 
127a6     06 06 06 06 
127aa     08 06 02 FC 
127ae     F8 F7 FA FC | 	byte	$0d, $0e, $0b, $06, $06, $06, $06, $06, $08, $06, $02, $fc, $f8, $f7, $fa, $fc
127b2     FC F8 F8 FB 
127b6     FD FF 04 0A 
127ba     0B 09 0B 0E 
127be     0E 0A 06 04 | 	byte	$fc, $f8, $f8, $fb, $fd, $ff, $04, $0a, $0b, $09, $0b, $0e, $0e, $0a, $06, $04
127c2     01 01 FF 02 
127c6     05 04 00 FA 
127ca     F8 FA FD FF 
127ce     FF FF 06 0B | 	byte	$01, $01, $ff, $02, $05, $04, $00, $fa, $f8, $fa, $fd, $ff, $ff, $ff, $06, $0b
127d2     0E 12 13 11 
127d6     0C 0A 09 09 
127da     08 04 FE F9 
127de     FA FC FE FF | 	byte	$0e, $12, $13, $11, $0c, $0a, $09, $09, $08, $04, $fe, $f9, $fa, $fc, $fe, $ff
127e2     FF 00 03 02 
127e6     03 05 09 0B 
127ea     0B 0A 0A 0A 
127ee     0B 0A 07 00 | 	byte	$ff, $00, $03, $02, $03, $05, $09, $0b, $0b, $0a, $0a, $0a, $0b, $0a, $07, $00
127f2     FD FB FC FC 
127f6     FC FE FE FF 
127fa     FE 01 08 08 
127fe     07 08 0C 0C | 	byte	$fd, $fb, $fc, $fc, $fc, $fe, $fe, $ff, $fe, $01, $08, $08, $07, $08, $0c, $0c
12802     0C 0D 0A 06 
12806     04 04 00 FD 
1280a     FC FF 01 03 
1280e     02 02 02 04 | 	byte	$0c, $0d, $0a, $06, $04, $04, $00, $fd, $fc, $ff, $01, $03, $02, $02, $02, $04
12812     04 02 00 02 
12816     07 08 08 09 
1281a     0A 08 02 FE 
1281e     FF FF 00 FF | 	byte	$04, $02, $00, $02, $07, $08, $08, $09, $0a, $08, $02, $fe, $ff, $ff, $00, $ff
12822     FE 02 05 01 
12826     FD FD 02 06 
1282a     06 0A 0E 0E 
1282e     0A 08 06 04 | 	byte	$fe, $02, $05, $01, $fd, $fd, $02, $06, $06, $0a, $0e, $0e, $0a, $08, $06, $04
12832     01 FE FD 03 
12836     08 09 05 00 
1283a     FA F9 FA FD 
1283e     FF 05 09 08 | 	byte	$01, $fe, $fd, $03, $08, $09, $05, $00, $fa, $f9, $fa, $fd, $ff, $05, $09, $08
12842     08 0B 0A 06 
12846     02 04 08 08 
1284a     06 0A 0D 0C 
1284e     04 02 00 FF | 	byte	$08, $0b, $0a, $06, $02, $04, $08, $08, $06, $0a, $0d, $0c, $04, $02, $00, $ff
12852     FE 02 06 08 
12856     0C 13 12 0E 
1285a     0D 0D 08 00 
1285e     FC FF 04 07 | 	byte	$fe, $02, $06, $08, $0c, $13, $12, $0e, $0d, $0d, $08, $00, $fc, $ff, $04, $07
12862     09 0D 0B 08 
12866     02 FE FA FD 
1286a     03 06 06 07 
1286e     0A 0C 08 02 | 	byte	$09, $0d, $0b, $08, $02, $fe, $fa, $fd, $03, $06, $06, $07, $0a, $0c, $08, $02
12872     FE FF 02 04 
12876     08 0A 0A 06 
1287a     04 02 FF FF 
1287e     00 02 02 04 | 	byte	$fe, $ff, $02, $04, $08, $0a, $0a, $06, $04, $02, $ff, $ff, $00, $02, $02, $04
12882     07 06 09 0C 
12886     0A 06 01 03 
1288a     06 06 03 01 
1288e     02 04 05 04 | 	byte	$07, $06, $09, $0c, $0a, $06, $01, $03, $06, $06, $03, $01, $02, $04, $05, $04
12892     04 02 FE FB 
12896     FB FF 01 03 
1289a     00 FE FD FE 
1289e     FF 02 08 0C | 	byte	$04, $02, $fe, $fb, $fb, $ff, $01, $03, $00, $fe, $fd, $fe, $ff, $02, $08, $0c
128a2     0B 0A 0C 09 
128a6     04 FE FD FF 
128aa     FF 03 07 06 
128ae     06 05 04 02 | 	byte	$0b, $0a, $0c, $09, $04, $fe, $fd, $ff, $ff, $03, $07, $06, $06, $05, $04, $02
128b2     03 05 04 03 
128b6     06 0A 0C 0A 
128ba     09 06 02 00 
128be     01 03 04 06 | 	byte	$03, $05, $04, $03, $06, $0a, $0c, $0a, $09, $06, $02, $00, $01, $03, $04, $06
128c2     08 06 04 02 
128c6     00 FD FB FC 
128ca     FF FF 02 06 
128ce     08 08 04 01 | 	byte	$08, $06, $04, $02, $00, $fd, $fb, $fc, $ff, $ff, $02, $06, $08, $08, $04, $01
128d2     FF FF FF 02 
128d6     05 09 0B 0B 
128da     09 07 02 00 
128de     FD FC FD FF | 	byte	$ff, $ff, $ff, $02, $05, $09, $0b, $0b, $09, $07, $02, $00, $fd, $fc, $fd, $ff
128e2     01 02 02 02 
128e6     02 00 01 03 
128ea     04 06 08 08 
128ee     0A 08 0A 08 | 	byte	$01, $02, $02, $02, $02, $00, $01, $03, $04, $06, $08, $08, $0a, $08, $0a, $08
128f2     05 03 05 06 
128f6     04 02 02 01 
128fa     00 FF FF 02 
128fe     05 06 08 0A | 	byte	$05, $03, $05, $06, $04, $02, $02, $01, $00, $ff, $ff, $02, $05, $06, $08, $0a
12902     0B 08 07 08 
12906     0A 08 08 0B 
1290a     0C 0A 06 00 
1290e     FC FA FA FB | 	byte	$0b, $08, $07, $08, $0a, $08, $08, $0b, $0c, $0a, $06, $00, $fc, $fa, $fa, $fb
12912     FC FF 04 05 
12916     06 08 07 05 
1291a     02 05 08 0B 
1291e     0C 0C 0C 08 | 	byte	$fc, $ff, $04, $05, $06, $08, $07, $05, $02, $05, $08, $0b, $0c, $0c, $0c, $08
12922     04 02 00 FD 
12926     FB FF 02 03 
1292a     04 04 05 05 
1292e     04 04 02 02 | 	byte	$04, $02, $00, $fd, $fb, $ff, $02, $03, $04, $04, $05, $05, $04, $04, $02, $02
12932     04 09 0C 0D 
12936     0C 0C 0A 07 
1293a     02 00 FC FB 
1293e     FA FC FE 02 | 	byte	$04, $09, $0c, $0d, $0c, $0c, $0a, $07, $02, $00, $fc, $fb, $fa, $fc, $fe, $02
12942     05 05 02 01 
12946     02 01 01 03 
1294a     08 0B 0C 0C 
1294e     0E 0D 0C 09 | 	byte	$05, $05, $02, $01, $02, $01, $01, $03, $08, $0b, $0c, $0c, $0e, $0d, $0c, $09
12952     04 00 FF FE 
12956     FE FE FF 01 
1295a     02 03 02 04 
1295e     05 05 05 04 | 	byte	$04, $00, $ff, $fe, $fe, $fe, $ff, $01, $02, $03, $02, $04, $05, $05, $05, $04
12962     06 08 0B 0B 
12966     0B 0A 08 04 
1296a     02 01 00 FF 
1296e     FF 01 01 FF | 	byte	$06, $08, $0b, $0b, $0b, $0a, $08, $04, $02, $01, $00, $ff, $ff, $01, $01, $ff
12972     01 04 06 04 
12976     03 04 06 07 
1297a     0A 0C 0A 08 
1297e     08 0B 0C 0A | 	byte	$01, $04, $06, $04, $03, $04, $06, $07, $0a, $0c, $0a, $08, $08, $0b, $0c, $0a
12982     06 04 04 02 
12986     00 FE FE FD 
1298a     FE FF FF 04 
1298e     06 07 05 04 | 	byte	$06, $04, $04, $02, $00, $fe, $fe, $fd, $fe, $ff, $ff, $04, $06, $07, $05, $04
12992     05 07 09 0B 
12996     0C 0B 08 07 
1299a     04 02 02 00 
1299e     FF FD FF 02 | 	byte	$05, $07, $09, $0b, $0c, $0b, $08, $07, $04, $02, $02, $00, $ff, $fd, $ff, $02
129a2     04 05 03 00 
129a6     01 04 07 0A 
129aa     0B 0C 0C 0D 
129ae     0D 0D 0C 0A | 	byte	$04, $05, $03, $00, $01, $04, $07, $0a, $0b, $0c, $0c, $0d, $0d, $0d, $0c, $0a
129b2     06 04 00 FE 
129b6     FF FF FF FE 
129ba     02 04 02 02 
129be     04 06 04 04 | 	byte	$06, $04, $00, $fe, $ff, $ff, $ff, $fe, $02, $04, $02, $02, $04, $06, $04, $04
129c2     06 09 08 0B 
129c6     0B 0A 08 03 
129ca     02 02 02 01 
129ce     FE FD FE FF | 	byte	$06, $09, $08, $0b, $0b, $0a, $08, $03, $02, $02, $02, $01, $fe, $fd, $fe, $ff
129d2     00 01 03 05 
129d6     06 06 07 08 
129da     09 09 08 08 
129de     07 07 08 08 | 	byte	$00, $01, $03, $05, $06, $06, $07, $08, $09, $09, $08, $08, $07, $07, $08, $08
129e2     04 02 FF FD 
129e6     FC FD FF FF 
129ea     FF 00 03 02 
129ee     02 02 02 01 | 	byte	$04, $02, $ff, $fd, $fc, $fd, $ff, $ff, $ff, $00, $03, $02, $02, $02, $02, $01
129f2     01 03 04 06 
129f6     06 06 06 04 
129fa     02 01 00 00 
129fe     01 04 05 06 | 	byte	$01, $03, $04, $06, $06, $06, $06, $04, $02, $01, $00, $00, $01, $04, $05, $06
12a02     07 07 05 04 
12a06     04 04 04 04 
12a0a     06 09 0B 09 
12a0e     08 06 04 01 | 	byte	$07, $07, $05, $04, $04, $04, $04, $04, $06, $09, $0b, $09, $08, $06, $04, $01
12a12     FF FF 02 05 
12a16     06 08 08 04 
12a1a     02 FF FF 01 
12a1e     04 04 04 05 | 	byte	$ff, $ff, $02, $05, $06, $08, $08, $04, $02, $ff, $ff, $01, $04, $04, $04, $05
12a22     06 07 04 04 
12a26     04 04 03 02 
12a2a     03 04 04 02 
12a2e     00 02 03 05 | 	byte	$06, $07, $04, $04, $04, $04, $03, $02, $03, $04, $04, $02, $00, $02, $03, $05
12a32     05 06 08 06 
12a36     04 02 03 04 
12a3a     04 05 05 06 
12a3e     06 06 04 03 | 	byte	$05, $06, $08, $06, $04, $02, $03, $04, $04, $05, $05, $06, $06, $06, $04, $03
12a42     02 FF FE FF 
12a46     01 04 06 05 
12a4a     03 02 03 03 
12a4e     04 04 06 06 | 	byte	$02, $ff, $fe, $ff, $01, $04, $06, $05, $03, $02, $03, $03, $04, $04, $06, $06
12a52     07 04 04 05 
12a56     06 03 00 FF 
12a5a     03 07 06 06 
12a5e     04 04 03 02 | 	byte	$07, $04, $04, $05, $06, $03, $00, $ff, $03, $07, $06, $06, $04, $04, $03, $02
12a62     02 03 05 06 
12a66     06 04 03 04 
12a6a     04 02 02 02 
12a6e     05 06 04 04 | 	byte	$02, $03, $05, $06, $06, $04, $03, $04, $04, $02, $02, $02, $05, $06, $04, $04
12a72     05 04 03 03 
12a76     04 05 05 05 
12a7a     05 05 06 05 
12a7e     05 05 05 04 | 	byte	$05, $04, $03, $03, $04, $05, $05, $05, $05, $05, $06, $05, $05, $05, $05, $04
12a82     05 06 06 08 
12a86     08 05 04 05 
12a8a     07 07 06 08 
12a8e     08 06 04 03 | 	byte	$05, $06, $06, $08, $08, $05, $04, $05, $07, $07, $06, $08, $08, $06, $04, $03
12a92     03 02 00 01 
12a96     02 03 04 06 
12a9a     06 04 05 04 
12a9e     04 03 03 04 | 	byte	$03, $02, $00, $01, $02, $03, $04, $06, $06, $04, $05, $04, $04, $03, $03, $04
12aa2     05 08 0A 08 
12aa6     08 06 06 03 
12aaa     01 01 02 03 
12aae     04 06 06 03 | 	byte	$05, $08, $0a, $08, $08, $06, $06, $03, $01, $01, $02, $03, $04, $06, $06, $03
12ab2     04 03 01 00 
12ab6     00 02 03 05 
12aba     07 07 07 06 
12abe     05 01 00 FF | 	byte	$04, $03, $01, $00, $00, $02, $03, $05, $07, $07, $07, $06, $05, $01, $00, $ff
12ac2     FF FF 00 01 
12ac6     03 04 04 02 
12aca     01 00 01 01 
12ace     01 03 05 07 | 	byte	$ff, $ff, $00, $01, $03, $04, $04, $02, $01, $00, $01, $01, $01, $03, $05, $07
12ad2     07 07 05 04 
12ad6     03 02 01 02 
12ada     01 03 03 03 
12ade     03 02 01 02 | 	byte	$07, $07, $05, $04, $03, $02, $01, $02, $01, $03, $03, $03, $03, $02, $01, $02
12ae2     02 01 01 04 
12ae6     05 05 04 05 
12aea     06 05 04 03 
12aee     03 03 04 05 | 	byte	$02, $01, $01, $04, $05, $05, $04, $05, $06, $05, $04, $03, $03, $03, $04, $05
12af2     03 03 03 02 
12af6     00 00 00 02 
12afa     04 04 05 06 
12afe     06 07 05 04 | 	byte	$03, $03, $03, $02, $00, $00, $00, $02, $04, $04, $05, $06, $06, $07, $05, $04
12b02     04 03 04 04 
12b06     05 05 05 05 
12b0a     03 03 02 00 
12b0e     01 03 05 05 | 	byte	$04, $03, $04, $04, $05, $05, $05, $05, $03, $03, $02, $00, $01, $03, $05, $05
12b12     07 07 08 06 
12b16     06 05 04 01 
12b1a     02 03 04 04 
12b1e     05 06 05 03 | 	byte	$07, $07, $08, $06, $06, $05, $04, $01, $02, $03, $04, $04, $05, $06, $05, $03
12b22     01 00 00 00 
12b26     01 02 04 05 
12b2a     07 07 05 05 
12b2e     03 00 00 01 | 	byte	$01, $00, $00, $00, $01, $02, $04, $05, $07, $07, $05, $05, $03, $00, $00, $01
12b32     02 03 03 04 
12b36     05 03 00 00 
12b3a     02 03 02 01 
12b3e     02 03 05 05 | 	byte	$02, $03, $03, $04, $05, $03, $00, $00, $02, $03, $02, $01, $02, $03, $05, $05
12b42     05 04 03 01 
12b46     01 01 02 03 
12b4a     02 03 03 03 
12b4e     03 02 01 01 | 	byte	$05, $04, $03, $01, $01, $01, $02, $03, $02, $03, $03, $03, $03, $02, $01, $01
12b52     00 01 02 03 
12b56     05 06 05 04 
12b5a     04 03 03 02 
12b5e     01 03 04 03 | 	byte	$00, $01, $02, $03, $05, $06, $05, $04, $04, $03, $03, $02, $01, $03, $04, $03
12b62     03 04 04 03 
12b66     01 03 03 02 
12b6a     03 05 05 03 
12b6e     02 02 03 03 | 	byte	$03, $04, $04, $03, $01, $03, $03, $02, $03, $05, $05, $03, $02, $02, $03, $03
12b72     01 03 04 04 
12b76     03 04 03 04 
12b7a     03 03 02 03 
12b7e     05 05 04 05 | 	byte	$01, $03, $04, $04, $03, $04, $03, $04, $03, $03, $02, $03, $05, $05, $04, $05
12b82     05 05 03 02 
12b86     04 03 03 03 
12b8a     05 05 03 04 
12b8e     05 05 05 03 | 	byte	$05, $05, $03, $02, $04, $03, $03, $03, $05, $05, $03, $04, $05, $05, $05, $03
12b92     03 04 04 04 
12b96     04 04 04 04 
12b9a     04 03 03 04 
12b9e     03 03 03 03 | 	byte	$03, $04, $04, $04, $04, $04, $04, $04, $04, $03, $03, $04, $03, $03, $03, $03
12ba2     04 03 02 03 
12ba6     04 04 02 01 
12baa     01 01 02 03 
12bae     03 03 04 04 | 	byte	$04, $03, $02, $03, $04, $04, $02, $01, $01, $01, $02, $03, $03, $03, $04, $04
12bb2     04 03 04 04 
12bb6     03 01 01 02 
12bba     03 03 03 04 
12bbe     03 02 00 01 | 	byte	$04, $03, $04, $04, $03, $01, $01, $02, $03, $03, $03, $04, $03, $02, $00, $01
12bc2     02 02 02 02 
12bc6     03 05 04 04 
12bca     03 03 03 03 
12bce     02 03 04 06 | 	byte	$02, $02, $02, $02, $03, $05, $04, $04, $03, $03, $03, $03, $02, $03, $04, $06
12bd2     05 03 02 03 
12bd6     03 02 01 02 
12bda     03 03 03 03 
12bde     04 04 03 03 | 	byte	$05, $03, $02, $03, $03, $02, $01, $02, $03, $03, $03, $03, $04, $04, $03, $03
12be2     04 04 04 04 
12be6     04 04 04 04 | 	byte	$04[8]
12bea     03 03 04 03 
12bee     04 03 03 03 
12bf2     03 03 03 03 
12bf6     03 03 03 04 | 	byte	$03, $03, $04, $03, $04, $03, $03, $03, $03, $03, $03, $03, $03, $03, $03, $04
12bfa     04 04 05 05 
12bfe     03 03 02 01 
12c02     01 01 02 02 
12c06     01 01 02 01 | 	byte	$04, $04, $05, $05, $03, $03, $02, $01, $01, $01, $02, $02, $01, $01, $02, $01
12c0a     01 01 01 02 
12c0e     02 04 05 05 
12c12     04 03 03 02 
12c16     02 02 02 02 | 	byte	$01, $01, $01, $02, $02, $04, $05, $05, $04, $03, $03, $02, $02, $02, $02, $02
12c1a     02 03 02 02 
12c1e     02 01 00 00 
12c22     01 02 02 02 
12c26     02 04 04 03 | 	byte	$02, $03, $02, $02, $02, $01, $00, $00, $01, $02, $02, $02, $02, $04, $04, $03
12c2a     03 05 05 05 
12c2e     03 03 02 02 
12c32     02 02 02 01 
12c36     02 02 02 03 | 	byte	$03, $05, $05, $05, $03, $03, $02, $02, $02, $02, $02, $01, $02, $02, $02, $03
12c3a     04 04 03 04 
12c3e     04 05 05 05 
12c42     05 05 04 04 
12c46     04 04 02 02 | 	byte	$04, $04, $03, $04, $04, $05, $05, $05, $05, $05, $04, $04, $04, $04, $02, $02
12c4a     02 01 01 02 
12c4e     02 02 01 01 
12c52     01 02 01 02 
12c56     02 03 03 04 | 	byte	$02, $01, $01, $02, $02, $02, $01, $01, $01, $02, $01, $02, $02, $03, $03, $04
12c5a     04 03 02 02 
12c5e     02 02 01 01 
12c62     02 03 02 02 
12c66     02 02 02 01 | 	byte	$04, $03, $02, $02, $02, $02, $01, $01, $02, $03, $02, $02, $02, $02, $02, $01
12c6a     01 01 02 03 
12c6e     03 03 04 04 
12c72     02 02 02 02 
12c76     02 02 02 02 | 	byte	$01, $01, $02, $03, $03, $03, $04, $04, $02, $02, $02, $02, $02, $02, $02, $02
12c7a     01 01 01 01 
12c7e     00 FF 01 02 
12c82     02 01 02 02 
12c86     02 02 03 02 | 	byte	$01, $01, $01, $01, $00, $ff, $01, $02, $02, $01, $02, $02, $02, $02, $03, $02
12c8a     02 02 02 02 
12c8e     01 01 02 02 
12c92     02 01 01 01 
12c96     02 02 03 02 | 	byte	$02, $02, $02, $02, $01, $01, $02, $02, $02, $01, $01, $01, $02, $02, $03, $02
12c9a     02 02 03 03 
12c9e     03 03 03 03 
12ca2     03 02 02 02 
12ca6     02 01 01 01 | 	byte	$02, $02, $03, $03, $03, $03, $03, $03, $03, $02, $02, $02, $02, $01, $01, $01
12caa     02 02 02 02 
12cae     02 02       | 	byte	$02[6]
12cb0     03 03 03 03 
12cb4     05 05 03 03 
12cb8     03 03 03 03 
12cbc     02 02 02 02 | 	byte	$03, $03, $03, $03, $05, $05, $03, $03, $03, $03, $03, $03, $02, $02, $02, $02
12cc0     02 02 01 01 
12cc4     01 01 01 02 
12cc8     03 03 03 03 
12ccc     03 04 03 03 | 	byte	$02, $02, $01, $01, $01, $01, $01, $02, $03, $03, $03, $03, $03, $04, $03, $03
12cd0     03 03 02 03 
12cd4     02 02 02 03 
12cd8     02 02 03 03 
12cdc     02 02 02 03 | 	byte	$03, $03, $02, $03, $02, $02, $02, $03, $02, $02, $03, $03, $02, $02, $02, $03
12ce0     03 03 04 04 
12ce4     04 03 03 02 
12ce8     02 02 03 02 
12cec     02 02 02 02 | 	byte	$03, $03, $04, $04, $04, $03, $03, $02, $02, $02, $03, $02, $02, $02, $02, $02
12cf0     02 02 01 02 
12cf4     02 02 02 03 
12cf8     03 03 02 02 
12cfc     02 02 03 02 | 	byte	$02, $02, $01, $02, $02, $02, $02, $03, $03, $03, $02, $02, $02, $02, $03, $02
12d00     01 02 02 02 
12d04     01 01 01 01 
12d08     01 01 01 01 
12d0c     01 01 01 01 | 	byte	$01, $02, $02, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
12d10     01 01 01 01 
12d14     01          | 	byte	$01[5]
12d15     02 02 02 02 
12d19     01 01 00 00 
12d1d     FF FF 00 01 
12d21     01 02 02 02 | 	byte	$02, $02, $02, $02, $01, $01, $00, $00, $ff, $ff, $00, $01, $01, $02, $02, $02
12d25     02 02 02 01 
12d29     02 02 02 00 
12d2d     00 00 00 05 
12d31     05 05 05 06 | 	byte	$02, $02, $02, $01, $02, $02, $02, $00, $00, $00, $00, $05, $05, $05, $05, $06
12d35     05 04 04 05 
12d39     04 05 04 05 
12d3d     05 05 05 04 
12d41     04 04 04 04 | 	byte	$05, $04, $04, $05, $04, $05, $04, $05, $05, $05, $05, $04, $04, $04, $04, $04
12d45     05 05 05 05 
12d49     05 05 05    | 	byte	$05[7]
12d4c     04 05 04 05 
12d50     04 04 04 03 
12d54     03 02 03 05 
12d58     0B 12 1A 20 | 	byte	$04, $05, $04, $05, $04, $04, $04, $03, $03, $02, $03, $05, $0b, $12, $1a, $20
12d5c     10 F0 C8 B7 
12d60     CB FB 2F 45 
12d64     3A 10 E0 C6 
12d68     C7 EB 17 39 | 	byte	$10, $f0, $c8, $b7, $cb, $fb, $2f, $45, $3a, $10, $e0, $c6, $c7, $eb, $17, $39
12d6c     40 28 08 F0 
12d70     F3 07 1D 21 
12d74     10 F8 DA D4 
12d78     DF FB 0F 1E | 	byte	$40, $28, $08, $f0, $f3, $07, $1d, $21, $10, $f8, $da, $d4, $df, $fb, $0f, $1e
12d7c     18 08 F8 ED 
12d80     EF FB 0B 17 
12d84     19 12 08 FC 
12d88     F9 FF 07 0F | 	byte	$18, $08, $f8, $ed, $ef, $fb, $0b, $17, $19, $12, $08, $fc, $f9, $ff, $07, $0f
12d8c     12 0C 04 FB 
12d90     F9 FE 07 0D 
12d94     04 F4 ED F3 
12d98     07 17 25 28 | 	byte	$12, $0c, $04, $fb, $f9, $fe, $07, $0d, $04, $f4, $ed, $f3, $07, $17, $25, $28
12d9c     18 00 E4 D4 
12da0     DD F7 15 2F 
12da4     3A 32 18 00 
12da8     F4 F4 FB FD | 	byte	$18, $00, $e4, $d4, $dd, $f7, $15, $2f, $3a, $32, $18, $00, $f4, $f4, $fb, $fd
12dac     F4 E0 D0 CD 
12db0     DF FD 1F 33 
12db4     30 18 00 E8 
12db8     E5 F3 07 16 | 	byte	$f4, $e0, $d0, $cd, $df, $fd, $1f, $33, $30, $18, $00, $e8, $e5, $f3, $07, $16
12dbc     18 10 00 F4 
12dc0     F6 07 1F 33 
12dc4     32 20 00 E8 
12dc8     D8 DF FB 17 | 	byte	$18, $10, $00, $f4, $f6, $07, $1f, $33, $32, $20, $00, $e8, $d8, $df, $fb, $17
12dcc     26 20 0C F0 
12dd0     DB D9 E7 FF 
12dd4     1A 24 1C 08 
12dd8     F0 E4 E7 FB | 	byte	$26, $20, $0c, $f0, $db, $d9, $e7, $ff, $1a, $24, $1c, $08, $f0, $e4, $e7, $fb
12ddc     0F 1A 16 08 
12de0     F4 ED F7 09 
12de4     17 1C 16 06 
12de8     F4 EA EF F7 | 	byte	$0f, $1a, $16, $08, $f4, $ed, $f7, $09, $17, $1c, $16, $06, $f4, $ea, $ef, $f7
12dec     03 0A 08 FC 
12df0     F0 E6 E6 EF 
12df4     FF 14 20 20 
12df8     14 08 00 FF | 	byte	$03, $0a, $08, $fc, $f0, $e6, $e6, $ef, $ff, $14, $20, $20, $14, $08, $00, $ff
12dfc     09 13 19 18 
12e00     14 0E 0B 08 
12e04     06 04 01 FF 
12e08     FC F8 F4 F0 | 	byte	$09, $13, $19, $18, $14, $0e, $0b, $08, $06, $04, $01, $ff, $fc, $f8, $f4, $f0
12e0c     F0 F9 04 0D 
12e10     0F 10 0C 08 
12e14     04 06 09 0A 
12e18     0C 0D 0C 0A | 	byte	$f0, $f9, $04, $0d, $0f, $10, $0c, $08, $04, $06, $09, $0a, $0c, $0d, $0c, $0a
12e1c     08 00 FC F9 
12e20     FB FF 03 07 
12e24     05 00 FB F8 
12e28     FA FF 05 09 | 	byte	$08, $00, $fc, $f9, $fb, $ff, $03, $07, $05, $00, $fb, $f8, $fa, $ff, $05, $09
12e2c     0A 09 03 FA 
12e30     F8 FD 07 0D 
12e34     0C 08 01 FA 
12e38     F6 F9 FF 05 | 	byte	$0a, $09, $03, $fa, $f8, $fd, $07, $0d, $0c, $08, $01, $fa, $f6, $f9, $ff, $05
12e3c     05 02 FE FD 
12e40     FC FD FF FF 
12e44     04 08 09 06 
12e48     04 03 07 11 | 	byte	$05, $02, $fe, $fd, $fc, $fd, $ff, $ff, $04, $08, $09, $06, $04, $03, $07, $11
12e4c     1B 24 20 12 
12e50     00 EA E2 E5 
12e54     EF FF 06 06 
12e58     00 F0 E9 EA | 	byte	$1b, $24, $20, $12, $00, $ea, $e2, $e5, $ef, $ff, $06, $06, $00, $f0, $e9, $ea
12e5c     F7 07 17 20 
12e60     1C 10 04 FE 
12e64     03 13 1F 23 
12e68     1C 0E 00 FA | 	byte	$f7, $07, $17, $20, $1c, $10, $04, $fe, $03, $13, $1f, $23, $1c, $0e, $00, $fa
12e6c     FB 03 0D 0E 
12e70     08 F8 EC E6 
12e74     ED FB 09 0F 
12e78     0E 09 04 02 | 	byte	$fb, $03, $0d, $0e, $08, $f8, $ec, $e6, $ed, $fb, $09, $0f, $0e, $09, $04, $02
12e7c     05 09 0D 0E 
12e80     08 00 F8 F4 
12e84     F9 FF 09 0E 
12e88     0A 00 F8 F0 | 	byte	$05, $09, $0d, $0e, $08, $00, $f8, $f4, $f9, $ff, $09, $0e, $0a, $00, $f8, $f0
12e8c     F3 FD 07 0F 
12e90     10 0A 00 FA 
12e94     FB 05 0F 14 
12e98     13 0C 04 FE | 	byte	$f3, $fd, $07, $0f, $10, $0a, $00, $fa, $fb, $05, $0f, $14, $13, $0c, $04, $fe
12e9c     FC FF 09 0E 
12ea0     0F 0A 04 00 
12ea4     FD FF 02 09 
12ea8     0A 0A 04 FF | 	byte	$fc, $ff, $09, $0e, $0f, $0a, $04, $00, $fd, $ff, $02, $09, $0a, $0a, $04, $ff
12eac     FD FF 03 09 
12eb0     0B 0B 08 05 
12eb4     04 05 04 03 
12eb8     00 00 02 05 | 	byte	$fd, $ff, $03, $09, $0b, $0b, $08, $05, $04, $05, $04, $03, $00, $00, $02, $05
12ebc     08 06 03 02 
12ec0     FE FA FB FF 
12ec4     04 0A 0D 0D 
12ec8     0A 02 FB F8 | 	byte	$08, $06, $03, $02, $fe, $fa, $fb, $ff, $04, $0a, $0d, $0d, $0a, $02, $fb, $f8
12ecc     FD 07 0F 10 
12ed0     0C 02 FC FA 
12ed4     FD 03 08 0B 
12ed8     0A 05 FC F6 | 	byte	$fd, $07, $0f, $10, $0c, $02, $fc, $fa, $fd, $03, $08, $0b, $0a, $05, $fc, $f6
12edc     F4 F8 FF 07 
12ee0     09 08 00 FA 
12ee4     FA FF 0A 12 
12ee8     13 0D 02 FC | 	byte	$f4, $f8, $ff, $07, $09, $08, $00, $fa, $fa, $ff, $0a, $12, $13, $0d, $02, $fc
12eec     F8 FA FB FF 
12ef0     01 02 01 FC 
12ef4     F6 F3 F7 FF 
12ef8     09 0F 11 0E | 	byte	$f8, $fa, $fb, $ff, $01, $02, $01, $fc, $f6, $f3, $f7, $ff, $09, $0f, $11, $0e
12efc     06 00 F8 F7 
12f00     FD 06 0C 0C 
12f04     08 04 02 03 
12f08     03 02 02 03 | 	byte	$06, $00, $f8, $f7, $fd, $06, $0c, $0c, $08, $04, $02, $03, $03, $02, $02, $03
12f0c     05 07 06 00 
12f10     F8 F7 FF 0B 
12f14     14 16 10 08 
12f18     00 FE FF 01 | 	byte	$05, $07, $06, $00, $f8, $f7, $ff, $0b, $14, $16, $10, $08, $00, $fe, $ff, $01
12f1c     03 02 01 FE 
12f20     FA FA FC FF 
12f24     07 0E 11 10 
12f28     0C 06 03 04 | 	byte	$03, $02, $01, $fe, $fa, $fa, $fc, $ff, $07, $0e, $11, $10, $0c, $06, $03, $04
12f2c     07 08 06 01 
12f30     FB F6 F9 FF 
12f34     05 06 04 00 
12f38     FE FF 05 07 | 	byte	$07, $08, $06, $01, $fb, $f6, $f9, $ff, $05, $06, $04, $00, $fe, $ff, $05, $07
12f3c     08 06 06 07 
12f40     08 05 00 FF 
12f44     02 07 0B 0C 
12f48     06 00 FA FD | 	byte	$08, $06, $06, $07, $08, $05, $00, $ff, $02, $07, $0b, $0c, $06, $00, $fa, $fd
12f4c     03 09 0C 0A 
12f50     06 03 02 02 
12f54     07 0D 13 18 
12f58     18 12 0A 04 | 	byte	$03, $09, $0c, $0a, $06, $03, $02, $02, $07, $0d, $13, $18, $18, $12, $0a, $04
12f5c     02 05 0C 11 
12f60     10 0A 00 F9 
12f64     F5 F4 F9 FF 
12f68     0D 12 10 04 | 	byte	$02, $05, $0c, $11, $10, $0a, $00, $f9, $f5, $f4, $f9, $ff, $0d, $12, $10, $04
12f6c     F4 E8 E7 F3 
12f70     FF 0F 10 00 
12f74     EC D4 C0 B0 
12f78     AD BF FF 3F | 	byte	$f4, $e8, $e7, $f3, $ff, $0f, $10, $00, $ec, $d4, $c0, $b0, $ad, $bf, $ff, $3f
12f7c     7F 7F 7F 60 
12f80     28 10 17 36 
12f84     40 30 04 D0 
12f88     A0 84 81 93 | 	byte	$7f, $7f, $7f, $60, $28, $10, $17, $36, $40, $30, $04, $d0, $a0, $84, $81, $93
12f8c     AF D3 EF FB 
12f90     F2 E0 D3 D9 
12f94     F7 1F 3F 46 
12f98     38 18 00 E8 | 	byte	$af, $d3, $ef, $fb, $f2, $e0, $d3, $d9, $f7, $1f, $3f, $46, $38, $18, $00, $e8
12f9c     E7 EF FE 0B 
12fa0     13 12 08 F8 
12fa4     EA EB FB 13 
12fa8     2B 38 36 28 | 	byte	$e7, $ef, $fe, $0b, $13, $12, $08, $f8, $ea, $eb, $fb, $13, $2b, $38, $36, $28
12fac     19 13 17 1F 
12fb0     27 2C 2C 26 
12fb4     1C 10 02 F8 
12fb8     F5 FB 05 0D | 	byte	$19, $13, $17, $1f, $27, $2c, $2c, $26, $1c, $10, $02, $f8, $f5, $fb, $05, $0d
12fbc     0E 09 00 FC 
12fc0     FC 03 0F 16 
12fc4     1A 19 15 0E 
12fc8     08 04 01 05 | 	byte	$0e, $09, $00, $fc, $fc, $03, $0f, $16, $1a, $19, $15, $0e, $08, $04, $01, $05
12fcc     0B 0D 0A 00 
12fd0     F2 E6 E4 EB 
12fd4     F1 F4 F0 E4 
12fd8     D0 B4 A0 93 | 	byte	$0b, $0d, $0a, $00, $f2, $e6, $e4, $eb, $f1, $f4, $f0, $e4, $d0, $b4, $a0, $93
12fdc     AF EF 3F 7F 
12fe0     7F 7F 60 20 
12fe4     00 FB 07 11 
12fe8     08 E4 C0 94 | 	byte	$af, $ef, $3f, $7f, $7f, $7f, $60, $20, $00, $fb, $07, $11, $08, $e4, $c0, $94
12fec     80 80 81 9B 
12ff0     BB E7 0F 23 
12ff4     20 0C 00 03 
12ff8     13 27 2D 22 | 	byte	$80, $80, $81, $9b, $bb, $e7, $0f, $23, $20, $0c, $00, $03, $13, $27, $2d, $22
12ffc     0A F0 D8 CB 
13000     CD D7 EB FF 
13004     17 22 20 18 
13008     10 11 1B 2A | 	byte	$0a, $f0, $d8, $cb, $cd, $d7, $eb, $ff, $17, $22, $20, $18, $10, $11, $1b, $2a
1300c     34 36 34 2D 
13010     28 24 22 20 
13014     20 20 21 1D 
13018     16 0C 00 FC | 	byte	$34, $36, $34, $2d, $28, $24, $22, $20, $20, $20, $21, $1d, $16, $0c, $00, $fc
1301c     FF 09 13 19 
13020     1D 1D 1C 1D 
13024     1D 1A 18 13 
13028     0E 09 05 02 | 	byte	$ff, $09, $13, $19, $1d, $1d, $1c, $1d, $1d, $1a, $18, $13, $0e, $09, $05, $02
1302c     00 FE FE FF 
13030     FF FF FE FE 
13034     FE FD FE 01 
13038     09 0F 12 10 | 	byte	$00, $fe, $fe, $ff, $ff, $ff, $fe, $fe, $fe, $fd, $fe, $01, $09, $0f, $12, $10
1303c     02 F4 E8 E2 
13040     DC D0 B8 A0 
13044     91 AB E7 2F 
13048     6F 7F 7F 60 | 	byte	$02, $f4, $e8, $e2, $dc, $d0, $b8, $a0, $91, $ab, $e7, $2f, $6f, $7f, $7f, $60
1304c     28 08 F2 E9 
13050     E2 DA D0 CA 
13054     C0 AC 94 8A 
13058     97 B7 E7 0F | 	byte	$28, $08, $f2, $e9, $e2, $da, $d0, $ca, $c0, $ac, $94, $8a, $97, $b7, $e7, $0f
1305c     2D 33 30 24 
13060     1A 10 02 F2 
13064     E9 E8 EA E8 
13068     E0 D4 D4 E5 | 	byte	$2d, $33, $30, $24, $1a, $10, $02, $f2, $e9, $e8, $ea, $e8, $e0, $d4, $d4, $e5
1306c     FF 1D 2B 2A 
13070     24 20 22 24 
13074     24 1D 1A 1D 
13078     25 2C 2D 28 | 	byte	$ff, $1d, $2b, $2a, $24, $20, $22, $24, $24, $1d, $1a, $1d, $25, $2c, $2d, $28
1307c     20 1E 1E 1B 
13080     14 0A 01 FD 
13084     FF 07 0C 0E 
13088     11 17 1F 27 | 	byte	$20, $1e, $1e, $1b, $14, $0a, $01, $fd, $ff, $07, $0c, $0e, $11, $17, $1f, $27
1308c     28 22 1A 11 
13090     0D 0A 08 04 
13094     02 01 05 09 
13098     0B 07 02 FC | 	byte	$28, $22, $1a, $11, $0d, $0a, $08, $04, $02, $01, $05, $09, $0b, $07, $02, $fc
1309c     FB FF 05 08 
130a0     06 03 02 01 
130a4     00 FE F4 E8 
130a8     DA CD C0 A8 | 	byte	$fb, $ff, $05, $08, $06, $03, $02, $01, $00, $fe, $f4, $e8, $da, $cd, $c0, $a8
130ac     9C AF DF 1F 
130b0     5F 7F 7F 70 
130b4     40 10 F0 D8 
130b8     C8 C2 C7 CE | 	byte	$9c, $af, $df, $1f, $5f, $7f, $7f, $70, $40, $10, $f0, $d8, $c8, $c2, $c7, $ce
130bc     D3 CC B8 A0 
130c0     9F BB DF 0F 
130c4     35 43 42 3A 
130c8     28 10 F0 D8 | 	byte	$d3, $cc, $b8, $a0, $9f, $bb, $df, $0f, $35, $43, $42, $3a, $28, $10, $f0, $d8
130cc     C9 CB DB E5 
130d0     E4 DE DB E5 
130d4     FB 13 27 2F 
130d8     36 38 38 31 | 	byte	$c9, $cb, $db, $e5, $e4, $de, $db, $e5, $fb, $13, $27, $2f, $36, $38, $38, $31
130dc     26 16 0C 0C 
130e0     16 21 26 22 
130e4     1A 10 0A 04 
130e8     00 FD FF 06 | 	byte	$26, $16, $0c, $0c, $16, $21, $26, $22, $1a, $10, $0a, $04, $00, $fd, $ff, $06
130ec     0F 16 1A 1B 
130f0     1E 23 2A 2E 
130f4     2D 24 18 08 
130f8     FA F0 EC ED | 	byte	$0f, $16, $1a, $1b, $1e, $23, $2a, $2e, $2d, $24, $18, $08, $fa, $f0, $ec, $ed
130fc     F3 FB 03 06 
13100     06 05 06 06 
13104     08 07 05 04 
13108     03 04 06 04 | 	byte	$f3, $fb, $03, $06, $06, $05, $06, $06, $08, $07, $05, $04, $03, $04, $06, $04
1310c     01 FA F2 EC 
13110     E1 D0 B8 9C 
13114     97 BF FB 3F 
13118     77 7F 7F 70 | 	byte	$01, $fa, $f2, $ec, $e1, $d0, $b8, $9c, $97, $bf, $fb, $3f, $77, $7f, $7f, $70
1311c     40 08 E0 B8 
13120     A8 B3 CB E6 
13124     E8 D0 A8 8A 
13128     8F AF DF 17 | 	byte	$40, $08, $e0, $b8, $a8, $b3, $cb, $e6, $e8, $d0, $a8, $8a, $8f, $af, $df, $17
1312c     3B 55 61 5C 
13130     44 20 F0 D0 
13134     C2 CF E3 EE 
13138     E8 DA D3 D7 | 	byte	$3b, $55, $61, $5c, $44, $20, $f0, $d0, $c2, $cf, $e3, $ee, $e8, $da, $d3, $d7
1313c     E7 FB 0D 1F 
13140     35 4B 52 44 
13144     30 18 0B 0E 
13148     1A 23 25 20 | 	byte	$e7, $fb, $0d, $1f, $35, $4b, $52, $44, $30, $18, $0b, $0e, $1a, $23, $25, $20
1314c     1A 14 10 06 
13150     FD F9 FD 07 
13154     11 14 12 0E 
13158     0D 15 1F 29 | 	byte	$1a, $14, $10, $06, $fd, $f9, $fd, $07, $11, $14, $12, $0e, $0d, $15, $1f, $29
1315c     2F 2E 29 20 
13160     14 02 F2 E6 
13164     E7 EF FB 05 
13168     09 08 05 05 | 	byte	$2f, $2e, $29, $20, $14, $02, $f2, $e6, $e7, $ef, $fb, $05, $09, $08, $05, $05
1316c     06 07 07 05 
13170     01 FE FD 02 
13174     07 08 08 00 
13178     F2 E0 C2 A8 | 	byte	$06, $07, $07, $05, $01, $fe, $fd, $02, $07, $08, $08, $00, $f2, $e0, $c2, $a8
1317c     9A A7 CF 0F 
13180     4F 7F 7F 7F 
13184     58 28 00 D8 
13188     C0 B8 C3 DB | 	byte	$9a, $a7, $cf, $0f, $4f, $7f, $7f, $7f, $58, $28, $00, $d8, $c0, $b8, $c3, $db
1318c     E7 E2 C4 A2 
13190     8D 97 BF EF 
13194     1B 3F 4F 52 
13198     40 24 00 D8 | 	byte	$e7, $e2, $c4, $a2, $8d, $97, $bf, $ef, $1b, $3f, $4f, $52, $40, $24, $00, $d8
1319c     C8 CB DD ED 
131a0     F1 E8 DD D8 
131a4     DB E3 F5 0B 
131a8     27 3F 53 54 | 	byte	$c8, $cb, $dd, $ed, $f1, $e8, $dd, $d8, $db, $e3, $f5, $0b, $27, $3f, $53, $54
131ac     48 30 20 10 
131b0     0F 15 1B 1E 
131b4     1E 18 10 04 
131b8     FA F4 F3 F7 | 	byte	$48, $30, $20, $10, $0f, $15, $1b, $1e, $1e, $18, $10, $04, $fa, $f4, $f3, $f7
131bc     FD 03 0A 11 
131c0     1A 23 2D 36 
131c4     3A 39 32 26 
131c8     18 04 F2 E4 | 	byte	$fd, $03, $0a, $11, $1a, $23, $2d, $36, $3a, $39, $32, $26, $18, $04, $f2, $e4
131cc     DC DD E5 F3 
131d0     FF 08 0D 0B 
131d4     08 07 06 07 
131d8     08 0B 0C 0C | 	byte	$dc, $dd, $e5, $f3, $ff, $08, $0d, $0b, $08, $07, $06, $07, $08, $0b, $0c, $0c
131dc     08 02 F8 F2 
131e0     EF EA E0 CC 
131e4     B4 A8 AF CF 
131e8     FF 3F 6F 7F | 	byte	$08, $02, $f8, $f2, $ef, $ea, $e0, $cc, $b4, $a8, $af, $cf, $ff, $3f, $6f, $7f
131ec     7F 70 40 10 
131f0     E8 C8 BC C7 
131f4     DB E8 E0 C0 
131f8     A4 92 9B B7 | 	byte	$7f, $70, $40, $10, $e8, $c8, $bc, $c7, $db, $e8, $e0, $c0, $a4, $92, $9b, $b7
131fc     DF 0B 2F 43 
13200     44 30 10 F0 
13204     D8 D5 DF ED 
13208     F8 FA F1 E4 | 	byte	$df, $0b, $2f, $43, $44, $30, $10, $f0, $d8, $d5, $df, $ed, $f8, $fa, $f1, $e4
1320c     D8 D2 D7 E7 
13210     FF 17 2B 35 
13214     32 2A 22 20 
13218     22 29 2B 2F | 	byte	$d8, $d2, $d7, $e7, $ff, $17, $2b, $35, $32, $2a, $22, $20, $22, $29, $2b, $2f
1321c     2C 28 20 10 
13220     04 FD FB FB 
13224     FE FF 03 09 
13228     11 1B 23 2A | 	byte	$2c, $28, $20, $10, $04, $fd, $fb, $fb, $fe, $ff, $03, $09, $11, $1b, $23, $2a
1322c     2E 30 2E 28 
13230     20 14 06 F9 
13234     F1 EF EF F5 
13238     FA FD 01 00 | 	byte	$2e, $30, $2e, $28, $20, $14, $06, $f9, $f1, $ef, $ef, $f5, $fa, $fd, $01, $00
1323c     FF FD FA FA 
13240     FC FF 07 0E 
13244     10 10 0A 02 
13248     FA F5 F0 E8 | 	byte	$ff, $fd, $fa, $fa, $fc, $ff, $07, $0e, $10, $10, $0a, $02, $fa, $f5, $f0, $e8
1324c     DA C8 BE BF 
13250     D7 FF 2F 5F 
13254     7F 7F 6A 48 
13258     20 F8 D8 C8 | 	byte	$da, $c8, $be, $bf, $d7, $ff, $2f, $5f, $7f, $7f, $6a, $48, $20, $f8, $d8, $c8
1325c     CF DF EA E0 
13260     CC B2 A4 AB 
13264     BF DF FF 1F 
13268     2E 2C 18 00 | 	byte	$cf, $df, $ea, $e0, $cc, $b2, $a4, $ab, $bf, $df, $ff, $1f, $2e, $2c, $18, $00
1326c     E4 D4 D4 DF 
13270     EF FB FC F4 
13274     E9 E0 D9 DD 
13278     EB FF 13 25 | 	byte	$e4, $d4, $d4, $df, $ef, $fb, $fc, $f4, $e9, $e0, $d9, $dd, $eb, $ff, $13, $25
1327c     2D 2C 24 20 
13280     1C 23 2F 3D 
13284     42 40 32 24 
13288     14 09 04 02 | 	byte	$2d, $2c, $24, $20, $1c, $23, $2f, $3d, $42, $40, $32, $24, $14, $09, $04, $02
1328c     03 05 06 04 
13290     06 09 13 1F 
13294     2D 37 3A 36 
13298     2C 20 10 02 | 	byte	$03, $05, $06, $04, $06, $09, $13, $1f, $2d, $37, $3a, $36, $2c, $20, $10, $02
1329c     F8 F0 EF EF 
132a0     F5 FA FE FF 
132a4     FE FC F8 F6 
132a8     F5 F9 FE 07 | 	byte	$f8, $f0, $ef, $ef, $f5, $fa, $fe, $ff, $fe, $fc, $f8, $f6, $f5, $f9, $fe, $07
132ac     0F 16 18 14 
132b0     0A 00 F4 EC 
132b4     E2 D4 C2 B1 
132b8     AF BF EF 27 | 	byte	$0f, $16, $18, $14, $0a, $00, $f4, $ec, $e2, $d4, $c2, $b1, $af, $bf, $ef, $27
132bc     5F 7F 7F 70 
132c0     50 24 00 E0 
132c4     D2 D5 E5 EB 
132c8     E0 C0 A4 97 | 	byte	$5f, $7f, $7f, $70, $50, $24, $00, $e0, $d2, $d5, $e5, $eb, $e0, $c0, $a4, $97
132cc     9D B7 DF FF 
132d0     1D 25 20 08 
132d4     EC D8 D0 D7 
132d8     E7 F7 FF 00 | 	byte	$9d, $b7, $df, $ff, $1d, $25, $20, $08, $ec, $d8, $d0, $d7, $e7, $f7, $ff, $00
132dc     F5 E4 D8 D4 
132e0     DB EA FB 09 
132e4     13 17 16 14 
132e8     14 1B 27 3B | 	byte	$f5, $e4, $d8, $d4, $db, $ea, $fb, $09, $13, $17, $16, $14, $14, $1b, $27, $3b
132ec     4B 53 48 38 
132f0     24 14 0A 07 
132f4     06 07 06 02 
132f8     FE FB FF 0D | 	byte	$4b, $53, $48, $38, $24, $14, $0a, $07, $06, $07, $06, $02, $fe, $fb, $ff, $0d
132fc     1F 2F 3F 42 
13300     40 36 28 18 
13304     08 FD F7 F6 
13308     F7 F9 FB FC | 	byte	$1f, $2f, $3f, $42, $40, $36, $28, $18, $08, $fd, $f7, $f6, $f7, $f9, $fb, $fc
1330c     FC F9 F5 F1 
13310     EE EF F4 FD 
13314     09 13 1B 1C 
13318     18 12 08 00 | 	byte	$fc, $f9, $f5, $f1, $ee, $ef, $f4, $fd, $09, $13, $1b, $1c, $18, $12, $08, $00
1331c     F8 F0 E8 D8 
13320     C0 A8 AA CF 
13324     FF 3F 7F 7F 
13328     7F 64 38 0C | 	byte	$f8, $f0, $e8, $d8, $c0, $a8, $aa, $cf, $ff, $3f, $7f, $7f, $7f, $64, $38, $0c
1332c     E8 D6 DB EB 
13330     F5 E2 C0 98 
13334     80 81 9B BF 
13338     F3 17 2A 20 | 	byte	$e8, $d6, $db, $eb, $f5, $e2, $c0, $98, $80, $81, $9b, $bf, $f3, $17, $2a, $20
1333c     04 E4 D2 D2 
13340     DF F3 05 0E 
13344     08 F8 E0 C8 
13348     C3 D3 EB FF | 	byte	$04, $e4, $d2, $d2, $df, $f3, $05, $0e, $08, $f8, $e0, $c8, $c3, $d3, $eb, $ff
1334c     0D 11 0D 06 
13350     03 07 13 2B 
13354     45 55 58 4E 
13358     40 34 29 22 | 	byte	$0d, $11, $0d, $06, $03, $07, $13, $2b, $45, $55, $58, $4e, $40, $34, $29, $22
1335c     1D 18 14 0C 
13360     00 F4 F0 F7 
13364     07 1A 2B 37 
13368     3D 3D 34 28 | 	byte	$1d, $18, $14, $0c, $00, $f4, $f0, $f7, $07, $1a, $2b, $37, $3d, $3d, $34, $28
1336c     18 0E 04 00 
13370     FA F8 F9 FC 
13374     FE FC F8 F4 
13378     EF EC EE EF | 	byte	$18, $0e, $04, $00, $fa, $f8, $f9, $fc, $fe, $fc, $f8, $f4, $ef, $ec, $ee, $ef
1337c     F7 FF 09 10 
13380     14 14 12 0D 
13384     06 FC F3 E8 
13388     D8 C0 A8 AB | 	byte	$f7, $ff, $09, $10, $14, $14, $12, $0d, $06, $fc, $f3, $e8, $d8, $c0, $a8, $ab
1338c     D7 0F 4F 7F 
13390     7F 7E 60 30 
13394     08 F0 E7 F2 
13398     FF FC E0 B4 | 	byte	$d7, $0f, $4f, $7f, $7f, $7e, $60, $30, $08, $f0, $e7, $f2, $ff, $fc, $e0, $b4
1339c     92 82 89 9F 
133a0     C7 EF 0F 12 
133a4     00 E2 D0 CF 
133a8     DE EF FF 0C | 	byte	$92, $82, $89, $9f, $c7, $ef, $0f, $12, $00, $e2, $d0, $cf, $de, $ef, $ff, $0c
133ac     12 08 F0 D2 
133b0     C5 CB DB EF 
133b4     FF 06 04 02 
133b8     FE 02 0F 1F | 	byte	$12, $08, $f0, $d2, $c5, $cb, $db, $ef, $ff, $06, $04, $02, $fe, $02, $0f, $1f
133bc     37 4B 52 50 
133c0     48 40 35 2D 
133c4     2A 2A 29 22 
133c8     14 04 F8 F2 | 	byte	$37, $4b, $52, $50, $48, $40, $35, $2d, $2a, $2a, $29, $22, $14, $04, $f8, $f2
133cc     F7 FF 0F 23 
133d0     35 3F 43 40 
133d4     30 24 16 0C 
133d8     04 FD FA FA | 	byte	$f7, $ff, $0f, $23, $35, $3f, $43, $40, $30, $24, $16, $0c, $04, $fd, $fa, $fa
133dc     FA F6 F1 EC 
133e0     EA E8 E8 EA 
133e4     F2 FB 06 0F 
133e8     10 12 12 12 | 	byte	$fa, $f6, $f1, $ec, $ea, $e8, $e8, $ea, $f2, $fb, $06, $0f, $10, $12, $12, $12
133ec     0E 09 02 FA 
133f0     EC E0 CC B4 
133f4     9C A7 D7 1F 
133f8     5F 64 48 38 | 	byte	$0e, $09, $02, $fa, $ec, $e0, $cc, $b4, $9c, $a7, $d7, $1f, $5f, $64, $48, $38
133fc     24 26 21 23 
13400     35 47 4F 40 
13404     00 B0 84 80 
13408     80 80 A7 EB | 	byte	$24, $26, $21, $23, $35, $47, $4f, $40, $00, $b0, $84, $80, $80, $80, $a7, $eb
1340c     04 00 F3 FA 
13410     E8 CA BF D7 
13414     EF FF 27 47 
13418     50 30 08 E0 | 	byte	$04, $00, $f3, $fa, $e8, $ca, $bf, $d7, $ef, $ff, $27, $47, $50, $30, $08, $e0
1341c     A4 9B AF CF 
13420     F7 1F 47 4C 
13424     40 31 36 22 
13428     00 FB 0F 14 | 	byte	$a4, $9b, $af, $cf, $f7, $1f, $47, $4c, $40, $31, $36, $22, $00, $fb, $0f, $14
1342c     01 13 1A 18 
13430     0E 13 1F 20 
13434     02 05 08 00 
13438     F6 13 3F 5B | 	byte	$01, $13, $1a, $18, $0e, $13, $1f, $20, $02, $05, $08, $00, $f6, $13, $3f, $5b
1343c     61 64 50 28 
13440     00 E0 D0 C2 
13444     D7 FF 23 20 
13448     18 08 EC D0 | 	byte	$61, $64, $50, $28, $00, $e0, $d0, $c2, $d7, $ff, $23, $20, $18, $08, $ec, $d0
1344c     BB CF F7 1F 
13450     29 26 26 21 
13454     10 F9 F7 FD 
13458     F2 EB FF 1B | 	byte	$bb, $cf, $f7, $1f, $29, $26, $26, $21, $10, $f9, $f7, $fd, $f2, $eb, $ff, $1b
1345c     1C 10 F4 D8 
13460     C0 BB DF 17 
13464     3F 49 38 20 
13468     06 03 0F 29 | 	byte	$1c, $10, $f4, $d8, $c0, $bb, $df, $17, $3f, $49, $38, $20, $06, $03, $0f, $29
1346c     31 2C 20 0A 
13470     F8 E8 D8 C8 
13474     BD C5 C5 BA 
13478     B3 BB C8 C6 | 	byte	$31, $2c, $20, $0a, $f8, $e8, $d8, $c8, $bd, $c5, $c5, $ba, $b3, $bb, $c8, $c6
1347c     CB DB F3 07 
13480     17 23 26 24 
13484     1B 12 0E 13 
13488     1B 1A 08 F0 | 	byte	$cb, $db, $f3, $07, $17, $23, $26, $24, $1b, $12, $0e, $13, $1b, $1a, $08, $f0
1348c     DE E6 EF F9 
13490     FF 03 06 06 
13494     06 13 25 2F 
13498     2A 21 20 26 | 	byte	$de, $e6, $ef, $f9, $ff, $03, $06, $06, $06, $13, $25, $2f, $2a, $21, $20, $26
1349c     24 20 18 10 
134a0     0D 0C 0D 0F 
134a4     17 23 26 1C 
134a8     10 05 00 FC | 	byte	$24, $20, $18, $10, $0d, $0c, $0d, $0f, $17, $23, $26, $1c, $10, $05, $00, $fc
134ac     F7 F7 F7 F7 
134b0     FE 06 0A 09 
134b4     07 0A 04 00 
134b8     03 0A 0A 07 | 	byte	$f7, $f7, $f7, $f7, $fe, $06, $0a, $09, $07, $0a, $04, $00, $03, $0a, $0a, $07
134bc     09 0A 06 01 
134c0     FE FA F6 F5 
134c4     F6 F1 EC EC 
134c8     F1 F3 F0 EA | 	byte	$09, $0a, $06, $01, $fe, $fa, $f6, $f5, $f6, $f1, $ec, $ec, $f1, $f3, $f0, $ea
134cc     E8 EE F6 FF 
134d0     0B 0E 0F 14 
134d4     1D 23 27 26 
134d8     22 1B 19 1B | 	byte	$e8, $ee, $f6, $ff, $0b, $0e, $0f, $14, $1d, $23, $27, $26, $22, $1b, $19, $1b
134dc     14 08 00 F6 
134e0     F2 EC E6 E4 
134e4     E3 DB D0 C7 
134e8     C6 C7 CF DB | 	byte	$14, $08, $00, $f6, $f2, $ec, $e6, $e4, $e3, $db, $d0, $c7, $c6, $c7, $cf, $db
134ec     EB F3 FC FA 
134f0     F8 EC E0 DD 
134f4     DF E6 EF FD 
134f8     07 0E 0E 0E | 	byte	$eb, $f3, $fc, $fa, $f8, $ec, $e0, $dd, $df, $e6, $ef, $fd, $07, $0e, $0e, $0e
134fc     0F 11 17 1F 
13500     2B 36 3A 39 
13504     32 29 22 20 
13508     20 23 27 2D | 	byte	$0f, $11, $17, $1f, $2b, $36, $3a, $39, $32, $29, $22, $20, $20, $23, $27, $2d
1350c     2E 31 31 32 
13510     2D 24 1C 16 
13514     10 0C 0A 0B 
13518     10 15 12 0E | 	byte	$2e, $31, $31, $32, $2d, $24, $1c, $16, $10, $0c, $0a, $0b, $10, $15, $12, $0e
1351c     09 09 06 00 
13520     F5 F3 F6 F8 
13524     FB FC FB F6 
13528     ED E6 E6 ED | 	byte	$09, $09, $06, $00, $f5, $f3, $f6, $f8, $fb, $fc, $fb, $f6, $ed, $e6, $e6, $ed
1352c     F7 FF 0C 11 
13530     10 0C 04 F8 
13534     E8 DE DB E2 
13538     EF FE 02 00 | 	byte	$f7, $ff, $0c, $11, $10, $0c, $04, $f8, $e8, $de, $db, $e2, $ef, $fe, $02, $00
1353c     FD FF 07 12 
13540     1A 1B 15 12 
13544     12 11 0C 08 
13548     06 02 FD F2 | 	byte	$fd, $ff, $07, $12, $1a, $1b, $15, $12, $12, $11, $0c, $08, $06, $02, $fd, $f2
1354c     E8 D8 CC C6 
13550     C6 C7 C7 CF 
13554     D9 DC DA D9 
13558     DA DD DF E3 | 	byte	$e8, $d8, $cc, $c6, $c6, $c7, $c7, $cf, $d9, $dc, $da, $d9, $da, $dd, $df, $e3
1355c     EA F0 F5 F8 
13560     F9 FC 06 11 
13564     1B 25 2B 2E 
13568     2A 26 25 25 | 	byte	$ea, $f0, $f5, $f8, $f9, $fc, $06, $11, $1b, $25, $2b, $2e, $2a, $26, $25, $25
1356c     22 20 24 26 
13570     28 2A 2D 2E 
13574     2C 2D 35 3F 
13578     41 41 3D 35 | 	byte	$22, $20, $24, $26, $28, $2a, $2d, $2e, $2c, $2d, $35, $3f, $41, $41, $3d, $35
1357c     28 1D 14 10 
13580     08 04 02 02 
13584     FE FD FE FC 
13588     F8 F2 F0 F1 | 	byte	$28, $1d, $14, $10, $08, $04, $02, $02, $fe, $fd, $fe, $fc, $f8, $f2, $f0, $f1
1358c     F0 EA E8 E9 
13590     EA EB EF F9 
13594     05 0A 06 00 
13598     FC F4 EE ED | 	byte	$f0, $ea, $e8, $e9, $ea, $eb, $ef, $f9, $05, $0a, $06, $00, $fc, $f4, $ee, $ed
1359c     EF ED ED EF 
135a0     EC E0 D8 DB 
135a4     E9 F7 FF 09 
135a8     17 23 2D 2E | 	byte	$ef, $ed, $ed, $ef, $ec, $e0, $d8, $db, $e9, $f7, $ff, $09, $17, $23, $2d, $2e
135ac     25 1A 16 18 
135b0     19 14 0E 0A 
135b4     04 FB F2 EA 
135b8     E0 D5 CD C9 | 	byte	$25, $1a, $16, $18, $19, $14, $0e, $0a, $04, $fb, $f2, $ea, $e0, $d5, $cd, $c9
135bc     CD D5 DD E1 
135c0     E0 DE E1 E5 
135c4     E5 E2 DF DE 
135c8     E1 E3 EB F2 | 	byte	$cd, $d5, $dd, $e1, $e0, $de, $e1, $e5, $e5, $e2, $df, $de, $e1, $e3, $eb, $f2
135cc     FB 03 0D 16 
135d0     1E 27 2A 2B 
135d4     2E 33 34 33 
135d8     30 31 32 34 | 	byte	$fb, $03, $0d, $16, $1e, $27, $2a, $2b, $2e, $33, $34, $33, $30, $31, $32, $34
135dc     36 36 39 3F 
135e0     43 40 34 28 
135e4     1C 16 10 0E 
135e8     11 17 17 14 | 	byte	$36, $36, $39, $3f, $43, $40, $34, $28, $1c, $16, $10, $0e, $11, $17, $17, $14
135ec     0E 08 04 00 
135f0     FC F9 FB FF 
135f4     04 00 F8 EC 
135f8     E1 D9 DA DF | 	byte	$0e, $08, $04, $00, $fc, $f9, $fb, $ff, $04, $00, $f8, $ec, $e1, $d9, $da, $df
135fc     E6 ED F5 F8 
13600     FB FB FC FA 
13604     F8 F7 F9 FE 
13608     00 03 02 FE | 	byte	$e6, $ed, $f5, $f8, $fb, $fb, $fc, $fa, $f8, $f7, $f9, $fe, $00, $03, $02, $fe
1360c     F4 E8 DA DB 
13610     E9 FB 06 06 
13614     07 0C 16 1D 
13618     20 20 20 1F | 	byte	$f4, $e8, $da, $db, $e9, $fb, $06, $06, $07, $0c, $16, $1d, $20, $20, $20, $1f
1361c     1E 19 12 09 
13620     04 00 FA F4 
13624     F0 E6 DA D1 
13628     CA C4 C3 C8 | 	byte	$1e, $19, $12, $09, $04, $00, $fa, $f4, $f0, $e6, $da, $d1, $ca, $c4, $c3, $c8
1362c     CE D1 D1 D3 
13630     D5 D8 DA DA 
13634     DD E1 ED F7 
13638     FF 0D 17 21 | 	byte	$ce, $d1, $d1, $d3, $d5, $d8, $da, $da, $dd, $e1, $ed, $f7, $ff, $0d, $17, $21
1363c     27 25 20 1A 
13640     1C 23 26 29 
13644     2F 37 40 43 
13648     40 3A 33 30 | 	byte	$27, $25, $20, $1a, $1c, $23, $26, $29, $2f, $37, $40, $43, $40, $3a, $33, $30
1364c     30 2C 29 2B 
13650     2D 2B 2B 29 
13654     28 24 20 1A 
13658     14 10 0C 08 | 	byte	$30, $2c, $29, $2b, $2d, $2b, $2b, $29, $28, $24, $20, $1a, $14, $10, $0c, $08
1365c     00 FA F6 F3 
13660     F1 ED EC EB 
13664     E8 E6 E7 EF 
13668     F4 F6 F5 F5 | 	byte	$00, $fa, $f6, $f3, $f1, $ed, $ec, $eb, $e8, $e6, $e7, $ef, $f4, $f6, $f5, $f5
1366c     F7 FB FE FB 
13670     F8 F6 F9 FA 
13674     F7 F4 F3 F3 
13678     F4 F1 EA E4 | 	byte	$f7, $fb, $fe, $fb, $f8, $f6, $f9, $fa, $f7, $f4, $f3, $f3, $f4, $f1, $ea, $e4
1367c     E3 EE F9 FF 
13680     05 07 0C 13 
13684     1A 1C 1B 19 
13688     1D 1E 1B 13 | 	byte	$e3, $ee, $f9, $ff, $05, $07, $0c, $13, $1a, $1c, $1b, $19, $1d, $1e, $1b, $13
1368c     0C 04 FC F6 
13690     F2 EF EC E2 
13694     D4 C8 C2 C0 
13698     BE BE C2 C9 | 	byte	$0c, $04, $fc, $f6, $f2, $ef, $ec, $e2, $d4, $c8, $c2, $c0, $be, $be, $c2, $c9
1369c     D1 DA DE DD 
136a0     DC DF E3 E7 
136a4     EE FA 07 11 
136a8     19 1F 26 2B | 	byte	$d1, $da, $de, $dd, $dc, $df, $e3, $e7, $ee, $fa, $07, $11, $19, $1f, $26, $2b
136ac     2E 31 34 34 
136b0     3A 43 4B 4B 
136b4     4A 48 42 36 
136b8     2F 2D 2D 2A | 	byte	$2e, $31, $34, $34, $3a, $43, $4b, $4b, $4a, $48, $42, $36, $2f, $2d, $2d, $2a
136bc     29 27 25 24 
136c0     25 24 20 1D 
136c4     1C 19 16 10 
136c8     08 00 FC F6 | 	byte	$29, $27, $25, $24, $25, $24, $20, $1d, $1c, $19, $16, $10, $08, $00, $fc, $f6
136cc     F3 F1 F4 F4 
136d0     F2 F0 EA E4 
136d4     E4 E5 E6 E7 
136d8     EE F3 F6 F6 | 	byte	$f3, $f1, $f4, $f4, $f2, $f0, $ea, $e4, $e4, $e5, $e6, $e7, $ee, $f3, $f6, $f6
136dc     FA FD FF FC 
136e0     FB FA FA FA 
136e4     F9 FA F9 F6 
136e8     F0 E4 DF E7 | 	byte	$fa, $fd, $ff, $fc, $fb, $fa, $fa, $fa, $f9, $fa, $f9, $f6, $f0, $e4, $df, $e7
136ec     F7 03 04 01 
136f0     06 12 1B 1E 
136f4     19 16 18 1B 
136f8     1B 14 0A 04 | 	byte	$f7, $03, $04, $01, $06, $12, $1b, $1e, $19, $16, $18, $1b, $1b, $14, $0a, $04
136fc     00 F8 E9 DD 
13700     D6 CC C6 C4 
13704     CA D0 D0 CC 
13708     C8 CB D3 D9 | 	byte	$00, $f8, $e9, $dd, $d6, $cc, $c6, $c4, $ca, $d0, $d0, $cc, $c8, $cb, $d3, $d9
1370c     DC DF E7 EE 
13710     F1 F2 F5 FD 
13714     05 11 1B 27 
13718     32 39 39 37 | 	byte	$dc, $df, $e7, $ee, $f1, $f2, $f5, $fd, $05, $11, $1b, $27, $32, $39, $39, $37
1371c     35 37 36 35 
13720     33 35 3A 3C 
13724     38 32 32 33 
13728     32 31 31 30 | 	byte	$35, $37, $36, $35, $33, $35, $3a, $3c, $38, $32, $32, $33, $32, $31, $31, $30
1372c     2D 2A 28 22 
13730     1C 18 13 0C 
13734     05 00 FC FA 
13738     F9 FB FC FA | 	byte	$2d, $2a, $28, $22, $1c, $18, $13, $0c, $05, $00, $fc, $fa, $f9, $fb, $fc, $fa
1373c     F6 F4 F0 E8 
13740     E1 E1 E3 E7 
13744     ED F1 F5 F7 
13748     F5 F3 EF F1 | 	byte	$f6, $f4, $f0, $e8, $e1, $e1, $e3, $e7, $ed, $f1, $f5, $f7, $f5, $f3, $ef, $f1
1374c     F7 FA FE 02 
13750     08 09 02 FA 
13754     F5 F3 EC E0 
13758     DC E5 F6 05 | 	byte	$f7, $fa, $fe, $02, $08, $09, $02, $fa, $f5, $f3, $ec, $e0, $dc, $e5, $f6, $05
1375c     0A 08 0A 0D 
13760     13 14 14 17 
13764     1B 1D 1C 18 
13768     10 06 FD F8 | 	byte	$0a, $08, $0a, $0d, $13, $14, $14, $17, $1b, $1d, $1c, $18, $10, $06, $fd, $f8
1376c     F3 E8 DC D1 
13770     CA CA CA C9 
13774     C7 C3 C4 C5 
13778     C8 CD D3 D9 | 	byte	$f3, $e8, $dc, $d1, $ca, $ca, $ca, $c9, $c7, $c3, $c4, $c5, $c8, $cd, $d3, $d9
1377c     DD E3 ED F5 
13780     FB 03 0F 1B 
13784     26 31 3A 3C 
13788     36 30 2F 2E | 	byte	$dd, $e3, $ed, $f5, $fb, $03, $0f, $1b, $26, $31, $3a, $3c, $36, $30, $2f, $2e
1378c     2F 32 37 3A 
13790     3C 3E 3C 39 
13794     34 31 31 33 
13798     34 34 33 30 | 	byte	$2f, $32, $37, $3a, $3c, $3e, $3c, $39, $34, $31, $31, $33, $34, $34, $33, $30
1379c     2C 23 19 11 
137a0     0C 08 04 02 
137a4     FE F9 F4 F0 
137a8     ED E8 E6 E6 | 	byte	$2c, $23, $19, $11, $0c, $08, $04, $02, $fe, $f9, $f4, $f0, $ed, $e8, $e6, $e6
137ac     E4 E6 E7 EB 
137b0     ED EF F0 F1 
137b4     F2 F3 F5 F9 
137b8     FD 01 04 06 | 	byte	$e4, $e6, $e7, $eb, $ed, $ef, $f0, $f1, $f2, $f3, $f5, $f9, $fd, $01, $04, $06
137bc     08 06 02 FC 
137c0     F2 ED EA E6 
137c4     E0 DA D4 D1 
137c8     DB F7 17 28 | 	byte	$08, $06, $02, $fc, $f2, $ed, $ea, $e6, $e0, $da, $d4, $d1, $db, $f7, $17, $28
137cc     28 26 27 26 
137d0     24 20 1A 16 
137d4     16 15 12 08 
137d8     F4 E0 D0 C4 | 	byte	$28, $26, $27, $26, $24, $20, $1a, $16, $16, $15, $12, $08, $f4, $e0, $d0, $c4
137dc     BC BC C3 C8 
137e0     C8 C8 CB CE 
137e4     CC CA CF DE 
137e8     EE F9 02 0A | 	byte	$bc, $bc, $c3, $c8, $c8, $c8, $cb, $ce, $cc, $ca, $cf, $de, $ee, $f9, $02, $0a
137ec     0D 0C 0A 08 
137f0     08 0D 17 22 
137f4     2B 34 36 32 
137f8     2B 26 24 26 | 	byte	$0d, $0c, $0a, $08, $08, $0d, $17, $22, $2b, $34, $36, $32, $2b, $26, $24, $26
137fc     2A 2E 32 37 
13800     38 38 37 36 
13804     36 39 38 34 
13808     2E 2A 26 1C | 	byte	$2a, $2e, $32, $37, $38, $38, $37, $36, $36, $39, $38, $34, $2e, $2a, $26, $1c
1380c     14 10 0E 0A 
13810     05 00 FA F4 
13814     ED EB EA E9 
13818     EB F1 F4 F6 | 	byte	$14, $10, $0e, $0a, $05, $00, $fa, $f4, $ed, $eb, $ea, $e9, $eb, $f1, $f4, $f6
1381c     F5 F6 F6 F6 
13820     F7 FB FF 05 
13824     0A 0D 0D 0A 
13828     08 04 00 FA | 	byte	$f5, $f6, $f6, $f6, $f7, $fb, $ff, $05, $0a, $0d, $0d, $0a, $08, $04, $00, $fa
1382c     F4 F3 F4 F6 
13830     F8 F6 F0 E4 
13834     D8 C4 B2 A4 
13838     AB CF 17 4F | 	byte	$f4, $f3, $f4, $f6, $f8, $f6, $f0, $e4, $d8, $c4, $b2, $a4, $ab, $cf, $17, $4f
1383c     6F 74 68 50 
13840     34 20 12 10 
13844     12 0C F8 D8 
13848     B8 98 82 80 | 	byte	$6f, $74, $68, $50, $34, $20, $12, $10, $12, $0c, $f8, $d8, $b8, $98, $82, $80
1384c     87 9F BA C7 
13850     C8 C8 CD D7 
13854     EB FF 1B 2F 
13858     3F 42 30 14 | 	byte	$87, $9f, $ba, $c7, $c8, $c8, $cd, $d7, $eb, $ff, $1b, $2f, $3f, $42, $30, $14
1385c     02 FA F8 FB 
13860     06 11 15 0C 
13864     00 FC FF 0F 
13868     23 37 47 55 | 	byte	$02, $fa, $f8, $fb, $06, $11, $15, $0c, $00, $fc, $ff, $0f, $23, $37, $47, $55
1386c     5D 5C 56 51 
13870     51 54 53 4C 
13874     40 30 1C 08 
13878     F6 ED EF F3 | 	byte	$5d, $5c, $56, $51, $51, $54, $53, $4c, $40, $30, $1c, $08, $f6, $ed, $ef, $f3
1387c     F8 F6 F2 F0 
13880     F1 F2 F8 FF 
13884     0A 0C 0A 08 
13888     06 06 05 04 | 	byte	$f8, $f6, $f2, $f0, $f1, $f2, $f8, $ff, $0a, $0c, $0a, $08, $06, $06, $05, $04
1388c     00 FD FA F9 
13890     F6 F4 F7 FC 
13894     FE FE FE FD 
13898     FF 05 09 0C | 	byte	$00, $fd, $fa, $f9, $f6, $f4, $f7, $fc, $fe, $fe, $fe, $fd, $ff, $05, $09, $0c
1389c     0F 0E 04 F8 
138a0     EF EC EA E8 
138a4     E6 E5 DC CA 
138a8     B0 98 9B CF | 	byte	$0f, $0e, $04, $f8, $ef, $ec, $ea, $e8, $e6, $e5, $dc, $ca, $b0, $98, $9b, $cf
138ac     1B 5F 7F 7E 
138b0     62 40 14 00 
138b4     FF 07 0C 00 
138b8     E0 B0 90 80 | 	byte	$1b, $5f, $7f, $7e, $62, $40, $14, $00, $ff, $07, $0c, $00, $e0, $b0, $90, $80
138bc     80 80 9F CF 
138c0     EF F4 E8 DD 
138c4     E1 EF FF 13 
138c8     2B 3D 3D 2C | 	byte	$80, $80, $9f, $cf, $ef, $f4, $e8, $dd, $e1, $ef, $ff, $13, $2b, $3d, $3d, $2c
138cc     10 F8 F5 FA 
138d0     FF 06 0B 08 
138d4     01 F8 FB 07 
138d8     1B 33 47 57 | 	byte	$10, $f8, $f5, $fa, $ff, $06, $0b, $08, $01, $f8, $fb, $07, $1b, $33, $47, $57
138dc     62 63 59 4A 
138e0     40 3F 40 41 
138e4     3A 2C 18 04 
138e8     F2 E5 E1 E5 | 	byte	$62, $63, $59, $4a, $40, $3f, $40, $41, $3a, $2c, $18, $04, $f2, $e5, $e1, $e5
138ec     ED F7 03 0B 
138f0     0F 10 13 10 
138f4     0E 0C 0D 0A 
138f8     0A 08 08 02 | 	byte	$ed, $f7, $03, $0b, $0f, $10, $13, $10, $0e, $0c, $0d, $0a, $0a, $08, $08, $02
138fc     FC F4 F0 EB 
13900     EC EE F1 F7 
13904     FD FF 01 04 
13908     05 07 0A 0D | 	byte	$fc, $f4, $f0, $eb, $ec, $ee, $f1, $f7, $fd, $ff, $01, $04, $05, $07, $0a, $0d
1390c     11 12 0C 00 
13910     F1 E5 E2 E2 
13914     E3 E1 DE D8 
13918     D0 C5 B9 AA | 	byte	$11, $12, $0c, $00, $f1, $e5, $e2, $e2, $e3, $e1, $de, $d8, $d0, $c5, $b9, $aa
1391c     A3 BF FF 4F 
13920     7F 7F 7F 58 
13924     28 08 FC F8 
13928     FA F6 E8 C8 | 	byte	$a3, $bf, $ff, $4f, $7f, $7f, $7f, $58, $28, $08, $fc, $f8, $fa, $f6, $e8, $c8
1392c     A8 8C 83 89 
13930     A7 CF F5 09 
13934     0C 04 F6 F3 
13938     FD 0D 1F 2B | 	byte	$a8, $8c, $83, $89, $a7, $cf, $f5, $09, $0c, $04, $f6, $f3, $fd, $0d, $1f, $2b
1393c     31 28 1A 08 
13940     F8 F0 F2 FA 
13944     03 0C 0E 08 
13948     02 04 0F 1D | 	byte	$31, $28, $1a, $08, $f8, $f0, $f2, $fa, $03, $0c, $0e, $08, $02, $04, $0f, $1d
1394c     2D 3A 43 4B 
13950     4D 4C 44 3A 
13954     31 28 20 16 
13958     0C 02 F8 F0 | 	byte	$2d, $3a, $43, $4b, $4d, $4c, $44, $3a, $31, $28, $20, $16, $0c, $02, $f8, $f0
1395c     EE EE F3 FB 
13960     FF 07 11 16 
13964     1A 1C 1B 1C 
13968     18 14 11 0D | 	byte	$ee, $ee, $f3, $fb, $ff, $07, $11, $16, $1a, $1c, $1b, $1c, $18, $14, $11, $0d
1396c     0B 09 05 00 
13970     FA F4 F0 EE 
13974     F1 F4 F8 FB 
13978     FC FD FF 04 | 	byte	$0b, $09, $05, $00, $fa, $f4, $f0, $ee, $f1, $f4, $f8, $fb, $fc, $fd, $ff, $04
1397c     0C 11 14 14 
13980     10 08 01 F8 
13984     EC E6 E0 DB 
13988     DA DC E0 DA | 	byte	$0c, $11, $14, $14, $10, $08, $01, $f8, $ec, $e6, $e0, $db, $da, $dc, $e0, $da
1398c     D0 C2 B4 AF 
13990     BF EF 37 77 
13994     7F 7F 74 44 
13998     20 04 F6 ED | 	byte	$d0, $c2, $b4, $af, $bf, $ef, $37, $77, $7f, $7f, $74, $44, $20, $04, $f6, $ed
1399c     ED EA E0 C0 
139a0     A0 80 80 93 
139a4     BF EB 0F 25 
139a8     22 10 00 FB | 	byte	$ed, $ea, $e0, $c0, $a0, $80, $80, $93, $bf, $eb, $0f, $25, $22, $10, $00, $fb
139ac     FF 0B 1B 23 
139b0     21 15 04 F0 
139b4     E0 DA E2 F3 
139b8     07 0F 0B 02 | 	byte	$ff, $0b, $1b, $23, $21, $15, $04, $f0, $e0, $da, $e2, $f3, $07, $0f, $0b, $02
139bc     01 07 16 2B 
139c0     3E 49 51 55 
139c4     52 48 38 2A 
139c8     1D 12 0C 04 | 	byte	$01, $07, $16, $2b, $3e, $49, $51, $55, $52, $48, $38, $2a, $1d, $12, $0c, $04
139cc     F9 F0 E5 E0 
139d0     E3 EF FF 0E 
139d4     1B 27 2B 28 
139d8     24 20 1A 16 | 	byte	$f9, $f0, $e5, $e0, $e3, $ef, $ff, $0e, $1b, $27, $2b, $28, $24, $20, $1a, $16
139dc     15 13 0E 08 
139e0     02 FA F1 EC 
139e4     EA E7 E4 E3 
139e8     E6 EE F7 FE | 	byte	$15, $13, $0e, $08, $02, $fa, $f1, $ec, $ea, $e7, $e4, $e3, $e6, $ee, $f7, $fe
139ec     03 07 0A 0E 
139f0     12 15 16 14 
139f4     0E 04 F8 E8 
139f8     DA D0 CA CA | 	byte	$03, $07, $0a, $0e, $12, $15, $16, $14, $0e, $04, $f8, $e8, $da, $d0, $ca, $ca
139fc     CF D9 DF DC 
13a00     DA D5 CC C0 
13a04     CB F7 3F 7F 
13a08     7F 7F 7C 50 | 	byte	$cf, $d9, $df, $dc, $da, $d5, $cc, $c0, $cb, $f7, $3f, $7f, $7f, $7f, $7c, $50
13a0c     24 04 EA D8 
13a10     D4 DA D4 C0 
13a14     A0 88 83 97 
13a18     BF EF 17 2F | 	byte	$24, $04, $ea, $d8, $d4, $da, $d4, $c0, $a0, $88, $83, $97, $bf, $ef, $17, $2f
13a1c     39 2C 18 04 
13a20     FC FF 0B 14 
13a24     1B 1A 10 F8 
13a28     DC CA CA DB | 	byte	$39, $2c, $18, $04, $fc, $ff, $0b, $14, $1b, $1a, $10, $f8, $dc, $ca, $ca, $db
13a2c     F7 0D 1A 1E 
13a30     20 1E 1A 1B 
13a34     23 33 45 53 
13a38     54 49 38 25 | 	byte	$f7, $0d, $1a, $1e, $20, $1e, $1a, $1b, $23, $33, $45, $53, $54, $49, $38, $25
13a3c     16 0A 04 00 
13a40     FF FC F8 F4 
13a44     F2 F8 FF 0F 
13a48     1B 27 2F 32 | 	byte	$16, $0a, $04, $00, $ff, $fc, $f8, $f4, $f2, $f8, $ff, $0f, $1b, $27, $2f, $32
13a4c     31 2D 21 14 
13a50     0A 03 FE F8 
13a54     F4 F2 F0 F0 
13a58     EB E6 E4 E5 | 	byte	$31, $2d, $21, $14, $0a, $03, $fe, $f8, $f4, $f2, $f0, $f0, $eb, $e6, $e4, $e5
13a5c     EA F2 F9 FF 
13a60     05 0B 0D 0F 
13a64     11 11 10 0C 
13a68     09 00 F4 E6 | 	byte	$ea, $f2, $f9, $ff, $05, $0b, $0d, $0f, $11, $11, $10, $0c, $09, $00, $f4, $e6
13a6c     DA D2 CE CD 
13a70     CF D4 DA E5 
13a74     EF F2 E8 D8 
13a78     D2 DF 0F 4F | 	byte	$da, $d2, $ce, $cd, $cf, $d4, $da, $e5, $ef, $f2, $e8, $d8, $d2, $df, $0f, $4f
13a7c     7F 7F 7F 70 
13a80     40 18 F0 C8 
13a84     B5 B7 CB D5 
13a88     CE BA A0 91 | 	byte	$7f, $7f, $7f, $70, $40, $18, $f0, $c8, $b5, $b7, $cb, $d5, $ce, $ba, $a0, $91
13a8c     97 B7 DF FF 
13a90     2B 43 48 3A 
13a94     22 08 F0 EA 
13a98     EE F9 03 06 | 	byte	$97, $b7, $df, $ff, $2b, $43, $48, $3a, $22, $08, $f0, $ea, $ee, $f9, $03, $06
13a9c     00 E8 D4 CC 
13aa0     D3 E5 FB 15 
13aa4     2B 3F 46 40 
13aa8     30 22 20 27 | 	byte	$00, $e8, $d4, $cc, $d3, $e5, $fb, $15, $2b, $3f, $46, $40, $30, $22, $20, $27
13aac     33 3F 42 3C 
13ab0     30 28 1A 10 
13ab4     04 FA F4 F6 
13ab8     FA FD FD FF | 	byte	$33, $3f, $42, $3c, $30, $28, $1a, $10, $04, $fa, $f4, $f6, $fa, $fd, $fd, $ff
13abc     09 15 23 2F 
13ac0     38 38 31 24 
13ac4     18 04 F2 E4 
13ac8     DC DB DF E4 | 	byte	$09, $15, $23, $2f, $38, $38, $31, $24, $18, $04, $f2, $e4, $dc, $db, $df, $e4
13acc     E9 EC ED ED 
13ad0     EF F2 F8 FF 
13ad4     08 0F 15 18 
13ad8     16 10 09 02 | 	byte	$e9, $ec, $ed, $ed, $ef, $f2, $f8, $ff, $08, $0f, $15, $18, $16, $10, $09, $02
13adc     FB F8 F6 F1 
13ae0     EB E5 E0 DC 
13ae4     D9 D9 DB DE 
13ae8     E5 F3 FE FC | 	byte	$fb, $f8, $f6, $f1, $eb, $e5, $e0, $dc, $d9, $d9, $db, $de, $e5, $f3, $fe, $fc
13aec     F0 E4 DB E7 
13af0     0F 4F 7F 7F 
13af4     7F 60 38 10 
13af8     E4 C0 A4 A7 | 	byte	$f0, $e4, $db, $e7, $0f, $4f, $7f, $7f, $7f, $60, $38, $10, $e4, $c0, $a4, $a7
13afc     BF D6 DE D2 
13b00     B8 A6 A7 BD 
13b04     DB FF 27 47 
13b08     54 52 40 20 | 	byte	$bf, $d6, $de, $d2, $b8, $a6, $a7, $bd, $db, $ff, $27, $47, $54, $52, $40, $20
13b0c     F8 E0 D6 DD 
13b10     EB F7 F6 F2 
13b14     EE E9 EA EF 
13b18     FD 0F 27 3F | 	byte	$f8, $e0, $d6, $dd, $eb, $f7, $f6, $f2, $ee, $e9, $ea, $ef, $fd, $0f, $27, $3f
13b1c     4C 4A 42 34 
13b20     22 16 12 15 
13b24     1F 2D 35 35 
13b28     2E 21 10 01 | 	byte	$4c, $4a, $42, $34, $22, $16, $12, $15, $1f, $2d, $35, $35, $2e, $21, $10, $01
13b2c     F6 F1 F3 FB 
13b30     06 0F 15 1D 
13b34     21 20 1C 18 
13b38     16 12 0E 08 | 	byte	$f6, $f1, $f3, $fb, $06, $0f, $15, $1d, $21, $20, $1c, $18, $16, $12, $0e, $08
13b3c     00 F4 EA E1 
13b40     DD DE E6 F2 
13b44     FD 06 0B 0C 
13b48     0C 0C 0A 08 | 	byte	$00, $f4, $ea, $e1, $dd, $de, $e6, $f2, $fd, $06, $0b, $0c, $0c, $0c, $0a, $08
13b4c     07 06 06 04 
13b50     00 FA F4 F0 
13b54     ED EC ED EF 
13b58     F2 F5 F6 F6 | 	byte	$07, $06, $06, $04, $00, $fa, $f4, $f0, $ed, $ec, $ed, $ef, $f2, $f5, $f6, $f6
13b5c     F5 F4 F5 F6 
13b60     F7 F8 F8 F5 
13b64     EE E8 E9 FB 
13b68     1F 3F 5F 66 | 	byte	$f5, $f4, $f5, $f6, $f7, $f8, $f8, $f5, $ee, $e8, $e9, $fb, $1f, $3f, $5f, $66
13b6c     5C 44 24 0A 
13b70     E8 D0 BC B9 
13b74     C7 D7 E1 DC 
13b78     CC C0 BF CB | 	byte	$5c, $44, $24, $0a, $e8, $d0, $bc, $b9, $c7, $d7, $e1, $dc, $cc, $c0, $bf, $cb
13b7c     D7 EB FF 17 
13b80     2F 3D 3A 24 
13b84     08 F0 E0 DC 
13b88     DF EA F6 FF | 	byte	$d7, $eb, $ff, $17, $2f, $3d, $3a, $24, $08, $f0, $e0, $dc, $df, $ea, $f6, $ff
13b8c     09 0E 0C 05 
13b90     FC FB 06 16 
13b94     27 33 39 38 
13b98     35 2E 22 18 | 	byte	$09, $0e, $0c, $05, $fc, $fb, $06, $16, $27, $33, $39, $38, $35, $2e, $22, $18
13b9c     0E 0C 13 23 
13ba0     31 37 35 2A 
13ba4     1C 0C 02 FC 
13ba8     F8 FB 05 0E | 	byte	$0e, $0c, $13, $23, $31, $37, $35, $2a, $1c, $0c, $02, $fc, $f8, $fb, $05, $0e
13bac     15 17 14 0C 
13bb0     05 01 FE FC 
13bb4     FB FC FC FC 
13bb8     FA F6 F2 F0 | 	byte	$15, $17, $14, $0c, $05, $01, $fe, $fc, $fb, $fc, $fc, $fc, $fa, $f6, $f2, $f0
13bbc     F1 F7 FF 06 
13bc0     09 0B 0C 0A 
13bc4     04 FD F6 F1 
13bc8     EE ED EC EB | 	byte	$f1, $f7, $ff, $06, $09, $0b, $0c, $0a, $04, $fd, $f6, $f1, $ee, $ed, $ec, $eb
13bcc     EB ED EF F2 
13bd0     F6 FA FF 07 
13bd4     0D 0C 0A 06 
13bd8     00 F4 EA E4 | 	byte	$eb, $ed, $ef, $f2, $f6, $fa, $ff, $07, $0d, $0c, $0a, $06, $00, $f4, $ea, $e4
13bdc     E0 E0 DE DE 
13be0     D9 DF FB 27 
13be4     55 6F 72 64 
13be8     50 3A 28 08 | 	byte	$e0, $e0, $de, $de, $d9, $df, $fb, $27, $55, $6f, $72, $64, $50, $3a, $28, $08
13bec     E2 CA C0 BF 
13bf0     C1 C0 B4 A8 
13bf4     A5 AC B5 BF 
13bf8     CE DF FF 27 | 	byte	$e2, $ca, $c0, $bf, $c1, $c0, $b4, $a8, $a5, $ac, $b5, $bf, $ce, $df, $ff, $27
13bfc     4B 57 50 40 
13c00     2A 14 00 EA 
13c04     DA D7 DF EB 
13c08     F6 F9 F8 F6 | 	byte	$4b, $57, $50, $40, $2a, $14, $00, $ea, $da, $d7, $df, $eb, $f6, $f9, $f8, $f6
13c0c     F6 FB 03 0F 
13c10     1D 2F 46 57 
13c14     60 61 5A 50 
13c18     41 34 24 1C | 	byte	$f6, $fb, $03, $0f, $1d, $2f, $46, $57, $60, $61, $5a, $50, $41, $34, $24, $1c
13c1c     18 17 17 13 
13c20     0E 04 F4 E8 
13c24     DD DC E6 F7 
13c28     07 19 25 2A | 	byte	$18, $17, $17, $13, $0e, $04, $f4, $e8, $dd, $dc, $e6, $f7, $07, $19, $25, $2a
13c2c     29 22 18 0E 
13c30     06 02 02 00 
13c34     FD F8 F0 E8 
13c38     E1 DD DB DD | 	byte	$29, $22, $18, $0e, $06, $02, $02, $00, $fd, $f8, $f0, $e8, $e1, $dd, $db, $dd
13c3c     E1 EB F3 FB 
13c40     FE FF FF FD 
13c44     FC FC FA F8 
13c48     F9 FD 02 07 | 	byte	$e1, $eb, $f3, $fb, $fe, $ff, $ff, $fd, $fc, $fc, $fa, $f8, $f9, $fd, $02, $07
13c4c     0A 08 04 F8 
13c50     F0 E8 E3 E1 
13c54     E2 E7 EB F1 
13c58     F6 F9 F8 F2 | 	byte	$0a, $08, $04, $f8, $f0, $e8, $e3, $e1, $e2, $e7, $eb, $f1, $f6, $f9, $f8, $f2
13c5c     EE F3 07 27 
13c60     47 57 60 5A 
13c64     4C 40 2A 10 
13c68     EC D0 BC B3 | 	byte	$ee, $f3, $07, $27, $47, $57, $60, $5a, $4c, $40, $2a, $10, $ec, $d0, $bc, $b3
13c6c     B3 B3 B1 B3 
13c70     BA C1 C2 C2 
13c74     C6 CF EB 0B 
13c78     2B 3F 4F 56 | 	byte	$b3, $b3, $b1, $b3, $ba, $c1, $c2, $c2, $c6, $cf, $eb, $0b, $2b, $3f, $4f, $56
13c7c     52 44 2C 10 
13c80     F0 DA D4 D4 
13c84     D6 DB E5 F3 
13c88     07 17 23 2B | 	byte	$52, $44, $2c, $10, $f0, $da, $d4, $d4, $d6, $db, $e5, $f3, $07, $17, $23, $2b
13c8c     31 3A 42 49 
13c90     4F 52 55 54 
13c94     50 46 36 20 
13c98     08 F4 E4 E6 | 	byte	$31, $3a, $42, $49, $4f, $52, $55, $54, $50, $46, $36, $20, $08, $f4, $e4, $e6
13c9c     EF FF 0F 19 
13ca0     1B 16 0E 08 
13ca4     00 F9 F8 FC 
13ca8     06 0F 16 16 | 	byte	$ef, $ff, $0f, $19, $1b, $16, $0e, $08, $00, $f9, $f8, $fc, $06, $0f, $16, $16
13cac     13 0D 05 FA 
13cb0     F0 E2 D8 D2 
13cb4     D4 D7 DB DF 
13cb8     E6 EF F6 FB | 	byte	$13, $0d, $05, $fa, $f0, $e2, $d8, $d2, $d4, $d7, $db, $df, $e6, $ef, $f6, $fb
13cbc     FE 02 07 0C 
13cc0     0F 10 0E 0A 
13cc4     06 03 00 FA 
13cc8     F5 F0 EE EF | 	byte	$fe, $02, $07, $0c, $0f, $10, $0e, $0a, $06, $03, $00, $fa, $f5, $f0, $ee, $ef
13ccc     F1 F4 F6 F7 
13cd0     FA FF 01 FE 
13cd4     F8 F1 EE EC 
13cd8     ED EC ED F7 | 	byte	$f1, $f4, $f6, $f7, $fa, $ff, $01, $fe, $f8, $f1, $ee, $ec, $ed, $ec, $ed, $f7
13cdc     0F 2F 4B 5A 
13ce0     5E 56 4E 48 
13ce4     38 20 00 E8 
13ce8     D0 C0 B8 A8 | 	byte	$0f, $2f, $4b, $5a, $5e, $56, $4e, $48, $38, $20, $00, $e8, $d0, $c0, $b8, $a8
13cec     99 94 9B A7 
13cf0     AF B2 B5 BB 
13cf4     CF EB FF 1B 
13cf8     2F 43 5B 6A | 	byte	$99, $94, $9b, $a7, $af, $b2, $b5, $bb, $cf, $eb, $ff, $1b, $2f, $43, $5b, $6a
13cfc     6C 60 48 32 
13d00     20 0C FA E6 
13d04     D5 CD CF DB 
13d08     E7 F3 FD 07 | 	byte	$6c, $60, $48, $32, $20, $0c, $fa, $e6, $d5, $cd, $cf, $db, $e7, $f3, $fd, $07
13d0c     13 1F 27 2D 
13d10     35 3F 4B 59 
13d14     61 61 5C 52 
13d18     45 34 22 10 | 	byte	$13, $1f, $27, $2d, $35, $3f, $4b, $59, $61, $61, $5c, $52, $45, $34, $22, $10
13d1c     FC EC E2 DC 
13d20     D9 D6 D4 D6 
13d24     DD E7 EF F9 
13d28     FF 0B 11 12 | 	byte	$fc, $ec, $e2, $dc, $d9, $d6, $d4, $d6, $dd, $e7, $ef, $f9, $ff, $0b, $11, $12
13d2c     10 0C 08 04 
13d30     02 03 02 01 
13d34     FF FC F8 F0 
13d38     E6 E0 DD DD | 	byte	$10, $0c, $08, $04, $02, $03, $02, $01, $ff, $fc, $f8, $f0, $e6, $e0, $dd, $dd
13d3c     E3 EB F3 FA 
13d40     FF 03 04 01 
13d44     FD FB FB FF 
13d48     04 07 08 09 | 	byte	$e3, $eb, $f3, $fa, $ff, $03, $04, $01, $fd, $fb, $fb, $ff, $04, $07, $08, $09
13d4c     0A 0A 0A 08 
13d50     05 01 FD F8 
13d54     F4 EF EA E6 
13d58     E5 E6 E6 E5 | 	byte	$0a, $0a, $0a, $08, $05, $01, $fd, $f8, $f4, $ef, $ea, $e6, $e5, $e6, $e6, $e5
13d5c     EB FB 0F 27 
13d60     39 44 4B 4D 
13d64     4C 44 34 1A 
13d68     04 EC D6 C0 | 	byte	$eb, $fb, $0f, $27, $39, $44, $4b, $4d, $4c, $44, $34, $1a, $04, $ec, $d6, $c0
13d6c     AC 9C 96 9B 
13d70     A7 B2 BA C2 
13d74     CB D7 E5 EF 
13d78     FB 07 1B 2F | 	byte	$ac, $9c, $96, $9b, $a7, $b2, $ba, $c2, $cb, $d7, $e5, $ef, $fb, $07, $1b, $2f
13d7c     43 52 59 59 
13d80     58 52 49 38 
13d84     24 10 00 F4 
13d88     EC E7 E6 EA | 	byte	$43, $52, $59, $59, $58, $52, $49, $38, $24, $10, $00, $f4, $ec, $e7, $e6, $ea
13d8c     F3 FF 0B 15 
13d90     19 1F 28 31 
13d94     35 37 38 39 
13d98     39 3B 3D 3C | 	byte	$f3, $ff, $0b, $15, $19, $1f, $28, $31, $35, $37, $38, $39, $39, $3b, $3d, $3c
13d9c     38 32 2E 24 
13da0     18 09 F8 E8 
13da4     DC D3 CD C9 
13da8     CA CF D9 E2 | 	byte	$38, $32, $2e, $24, $18, $09, $f8, $e8, $dc, $d3, $cd, $c9, $ca, $cf, $d9, $e2
13dac     EB F4 FB FF 
13db0     07 0D 10 10 
13db4     0E 0A 06 02 
13db8     FC FA F8 F8 | 	byte	$eb, $f4, $fb, $ff, $07, $0d, $10, $10, $0e, $0a, $06, $02, $fc, $fa, $f8, $f8
13dbc     F8 F6 F2 F0 
13dc0     EB E8 E5 E3 
13dc4     E3 E6 EB F3 
13dc8     FE 06 0E 13 | 	byte	$f8, $f6, $f2, $f0, $eb, $e8, $e5, $e3, $e3, $e6, $eb, $f3, $fe, $06, $0e, $13
13dcc     16 18 18 14 
13dd0     0E 09 05 01 
13dd4     FC F6 F2 EE 
13dd8     EE EE F0 EF | 	byte	$16, $18, $18, $14, $0e, $09, $05, $01, $fc, $f6, $f2, $ee, $ee, $ee, $f0, $ef
13ddc     EE EF F3 FB 
13de0     06 11 1B 25 
13de4     2D 33 36 34 
13de8     29 1A 0C 00 | 	byte	$ee, $ef, $f3, $fb, $06, $11, $1b, $25, $2d, $33, $36, $34, $29, $1a, $0c, $00
13dec     F4 E8 DA D0 
13df0     C8 C4 C4 C4 
13df4     C5 C8 CF DA 
13df8     E3 EA EC EF | 	byte	$f4, $e8, $da, $d0, $c8, $c4, $c4, $c4, $c5, $c8, $cf, $da, $e3, $ea, $ec, $ef
13dfc     F5 FF 07 12 
13e00     1C 27 35 42 
13e04     4B 4D 4A 44 
13e08     40 3A 35 2C | 	byte	$f5, $ff, $07, $12, $1c, $27, $35, $42, $4b, $4d, $4a, $44, $40, $3a, $35, $2c
13e0c     22 18 10 08 
13e10     00 FC F9 FB 
13e14     FF 09 10 15 
13e18     17 16 14 11 | 	byte	$22, $18, $10, $08, $00, $fc, $f9, $fb, $ff, $09, $10, $15, $17, $16, $14, $11
13e1c     11 11 13 15 
13e20     19 1C 1D 1C 
13e24     18 14 11 0C 
13e28     06 00 F4 E8 | 	byte	$11, $11, $13, $15, $19, $1c, $1d, $1c, $18, $14, $11, $0c, $06, $00, $f4, $e8
13e2c     E0 D9 D2 CE 
13e30     CD D1 D9 DF 
13e34     E8 EF F5 FB 
13e38     FF 05 08 0A | 	byte	$e0, $d9, $d2, $ce, $cd, $d1, $d9, $df, $e8, $ef, $f5, $fb, $ff, $05, $08, $0a
13e3c     0B 0A 0A 08 
13e40     03 FE FB F9 
13e44     F6 F2 F3 F2 
13e48     F2 F1 F1 F3 | 	byte	$0b, $0a, $0a, $08, $03, $fe, $fb, $f9, $f6, $f2, $f3, $f2, $f2, $f1, $f1, $f3
13e4c     F4 F7 FA FC 
13e50     FF 03 07 0A 
13e54     0C 0C 0C 09 
13e58     08 05 04 00 | 	byte	$f4, $f7, $fa, $fc, $ff, $03, $07, $0a, $0c, $0c, $0c, $09, $08, $05, $04, $00
13e5c     FE FB F8 F6 
13e60     F4 F7 FB 02 
13e64     09 0F 15 1A 
13e68     21 28 2B 29 | 	byte	$fe, $fb, $f8, $f6, $f4, $f7, $fb, $02, $09, $0f, $15, $1a, $21, $28, $2b, $29
13e6c     24 1C 14 0A 
13e70     00 F1 E4 D8 
13e74     D2 CF CE CC 
13e78     CB CC CF D7 | 	byte	$24, $1c, $14, $0a, $00, $f1, $e4, $d8, $d2, $cf, $ce, $cc, $cb, $cc, $cf, $d7
13e7c     DF EA F2 FB 
13e80     03 0B 0E 10 
13e84     12 15 1D 26 
13e88     2F 37 3C 41 | 	byte	$df, $ea, $f2, $fb, $03, $0b, $0e, $10, $12, $15, $1d, $26, $2f, $37, $3c, $41
13e8c     44 44 42 40 
13e90     3A 34 30 2A 
13e94     22 18 0E 04 
13e98     FE FB FA F8 | 	byte	$44, $44, $42, $40, $3a, $34, $30, $2a, $22, $18, $0e, $04, $fe, $fb, $fa, $f8
13e9c     F8 F9 FB FD 
13ea0     FE 01 03 06 
13ea4     09 0C 0E 0F 
13ea8     11 12 13 12 | 	byte	$f8, $f9, $fb, $fd, $fe, $01, $03, $06, $09, $0c, $0e, $0f, $11, $12, $13, $12
13eac     12 10 10 0D 
13eb0     08 02 FA F0 
13eb4     E8 E0 DA D6 
13eb8     D4 D5 D7 DB | 	byte	$12, $10, $10, $0d, $08, $02, $fa, $f0, $e8, $e0, $da, $d6, $d4, $d5, $d7, $db
13ebc     E1 E9 EF F6 
13ec0     FE 06 0C 0D 
13ec4     0D 0C 0D 0C 
13ec8     0B 09 08 06 | 	byte	$e1, $e9, $ef, $f6, $fe, $06, $0c, $0d, $0d, $0c, $0d, $0c, $0b, $09, $08, $06
13ecc     02 01 FE FA 
13ed0     F8 F8 FA FB 
13ed4     FB FB FA FA 
13ed8     F9 F7 F4 F2 | 	byte	$02, $01, $fe, $fa, $f8, $f8, $fa, $fb, $fb, $fb, $fa, $fa, $f9, $f7, $f4, $f2
13edc     F2 F4 F5 F7 
13ee0     FB FF 02 05 
13ee4     04 04 06 09 
13ee8     0C 11 16 1A | 	byte	$f2, $f4, $f5, $f7, $fb, $ff, $02, $05, $04, $04, $06, $09, $0c, $11, $16, $1a
13eec     1D 22 26 27 
13ef0     26 23 20 18 
13ef4     10 00 F2 E0 
13ef8     D6 CE CA C8 | 	byte	$1d, $22, $26, $27, $26, $23, $20, $18, $10, $00, $f2, $e0, $d6, $ce, $ca, $c8
13efc     C8 CA CE D2 
13f00     D7 DB DF E7 
13f04     F2 FF 09 11 
13f08     16 19 1B 1E | 	byte	$c8, $ca, $ce, $d2, $d7, $db, $df, $e7, $f2, $ff, $09, $11, $16, $19, $1b, $1e
13f0c     21 27 2B 31 
13f10     39 3F 45 49 
13f14     4A 4A 47 41 
13f18     3C 34 2A 20 | 	byte	$21, $27, $2b, $31, $39, $3f, $45, $49, $4a, $4a, $47, $41, $3c, $34, $2a, $20
13f1c     12 08 FC F2 
13f20     EA E5 E4 E5 
13f24     E7 EB EF F2 
13f28     F6 FD 03 09 | 	byte	$12, $08, $fc, $f2, $ea, $e5, $e4, $e5, $e7, $eb, $ef, $f2, $f6, $fd, $03, $09
13f2c     0C 0E 0E 0E 
13f30     0D 0B 0A 08 
13f34     05 03 00 FE 
13f38     F8 F2 EE EB | 	byte	$0c, $0e, $0e, $0e, $0d, $0b, $0a, $08, $05, $03, $00, $fe, $f8, $f2, $ee, $eb
13f3c     E9 E6 E5 E6 
13f40     E7 E7 E8 EA 
13f44     EE F2 F7 FB 
13f48     FF 02 04 06 | 	byte	$e9, $e6, $e5, $e6, $e7, $e7, $e8, $ea, $ee, $f2, $f7, $fb, $ff, $02, $04, $06
13f4c     07 06 02 00 
13f50     FC FA F9 F9 
13f54     FA FD FF 03 
13f58     04 02 00 FE | 	byte	$07, $06, $02, $00, $fc, $fa, $f9, $f9, $fa, $fd, $ff, $03, $04, $02, $00, $fe
13f5c     FE FF FF 02 
13f60     04 06 06 06 
13f64     06 04 03 01 
13f68     01 FE FC FC | 	byte	$fe, $ff, $ff, $02, $04, $06, $06, $06, $06, $04, $03, $01, $01, $fe, $fc, $fc
13f6c     FE FF 03 08 
13f70     0B 0F 15 1A 
13f74     1E 20 21 21 
13f78     20 1D 18 14 | 	byte	$fe, $ff, $03, $08, $0b, $0f, $15, $1a, $1e, $20, $21, $21, $20, $1d, $18, $14
13f7c     0A 00 F8 EC 
13f80     E4 DC D7 D3 
13f84     D1 D3 D7 D9 
13f88     DC E1 E7 EF | 	byte	$0a, $00, $f8, $ec, $e4, $dc, $d7, $d3, $d1, $d3, $d7, $d9, $dc, $e1, $e7, $ef
13f8c     F7 FF 07 0D 
13f90     13 1A 1F 24 
13f94     2A 2E 31 33 
13f98     35 38 37 39 | 	byte	$f7, $ff, $07, $0d, $13, $1a, $1f, $24, $2a, $2e, $31, $33, $35, $38, $37, $39
13f9c     3A 3A 38 35 
13fa0     32 2C 25 1D 
13fa4     16 0E 05 FD 
13fa8     F6 F0 EC E8 | 	byte	$3a, $3a, $38, $35, $32, $2c, $25, $1d, $16, $0e, $05, $fd, $f6, $f0, $ec, $e8
13fac     E6 E5 E6 E8 
13fb0     EB EF F3 F9 
13fb4     FE 03 08 0D 
13fb8     11 13 12 10 | 	byte	$e6, $e5, $e6, $e8, $eb, $ef, $f3, $f9, $fe, $03, $08, $0d, $11, $13, $12, $10
13fbc     0A 06 02 FF 
13fc0     FA F4 F0 EA 
13fc4     E8 E7 E8 EA 
13fc8     ED F1 F5 F9 | 	byte	$0a, $06, $02, $ff, $fa, $f4, $f0, $ea, $e8, $e7, $e8, $ea, $ed, $f1, $f5, $f9
13fcc     FA FC FE FC 
13fd0     FB FC FD FD 
13fd4     FB FA FA FB 
13fd8     FB FC FE FF | 	byte	$fa, $fc, $fe, $fc, $fb, $fc, $fd, $fd, $fb, $fa, $fa, $fb, $fb, $fc, $fe, $ff
13fdc     03 08 0B 0C 
13fe0     0C 0A 08 06 
13fe4     04 02 01 FE 
13fe8     FE FE FE FC | 	byte	$03, $08, $0b, $0c, $0c, $0a, $08, $06, $04, $02, $01, $fe, $fe, $fe, $fe, $fc
13fec     FA F9 F9 F7 
13ff0     F6 F5 F6 F7 
13ff4     FA FF 04 0B 
13ff8     10 16 19 1C | 	byte	$fa, $f9, $f9, $f7, $f6, $f5, $f6, $f7, $fa, $ff, $04, $0b, $10, $16, $19, $1c
13ffc     1C 1C 1B 18 
14000     16 12 0E 0A 
14004     05 FC F5 ED 
14008     E6 E1 DE DC | 	byte	$1c, $1c, $1b, $18, $16, $12, $0e, $0a, $05, $fc, $f5, $ed, $e6, $e1, $de, $dc
1400c     DB DB DD DF 
14010     E3 E9 EF F5 
14014     FB FF 09 12 
14018     19 1E 21 24 | 	byte	$db, $db, $dd, $df, $e3, $e9, $ef, $f5, $fb, $ff, $09, $12, $19, $1e, $21, $24
1401c     27 2A 2C 2E 
14020     2D 2E 2F 33 
14024     34 33 34 35 
14028     32 2D 29 24 | 	byte	$27, $2a, $2c, $2e, $2d, $2e, $2f, $33, $34, $33, $34, $35, $32, $2d, $29, $24
1402c     20 19 13 0D 
14030     08 00 F9 F2 
14034     F0 EC EA E6 
14038     E5 E5 E7 E9 | 	byte	$20, $19, $13, $0d, $08, $00, $f9, $f2, $f0, $ec, $ea, $e6, $e5, $e5, $e7, $e9
1403c     EB ED F1 F6 
14040     FC 02 05 05 
14044     05 04 03 01 
14048     FD FA F7 F5 | 	byte	$eb, $ed, $f1, $f6, $fc, $02, $05, $05, $05, $04, $03, $01, $fd, $fa, $f7, $f5
1404c     F3 F1 F0 EF 
14050     EF F1 F4 F6 
14054     F7 F8 F8 F9 
14058     FA F9 F7 F6 | 	byte	$f3, $f1, $f0, $ef, $ef, $f1, $f4, $f6, $f7, $f8, $f8, $f9, $fa, $f9, $f7, $f6
1405c     F7 F8 FA FA 
14060     FC FF 03 07 
14064     09 0A 09 08 
14068     08 08 07 05 | 	byte	$f7, $f8, $fa, $fa, $fc, $ff, $03, $07, $09, $0a, $09, $08, $08, $08, $07, $05
1406c     03 02 00 FE 
14070     FC FA F9 F8 
14074     F9 F9 F9 F8 
14078     F9 FA FE 03 | 	byte	$03, $02, $00, $fe, $fc, $fa, $f9, $f8, $f9, $f9, $f9, $f8, $f9, $fa, $fe, $03
1407c     07 0A 0F 15 
14080     19 1B 1B 1B 
14084     1B 1A 19 15 
14088     10 0C 04 FE | 	byte	$07, $0a, $0f, $15, $19, $1b, $1b, $1b, $1b, $1a, $19, $15, $10, $0c, $04, $fe
1408c     F6 F0 E9 E4 
14090     E0 DD DD DF 
14094     DF E1 E7 ED 
14098     F5 FC 01 06 | 	byte	$f6, $f0, $e9, $e4, $e0, $dd, $dd, $df, $df, $e1, $e7, $ed, $f5, $fc, $01, $06
1409c     08 0B 0F 12 
140a0     15 16 18 1D 
140a4     20 24 26 29 
140a8     2E 32 36 38 | 	byte	$08, $0b, $0f, $12, $15, $16, $18, $1d, $20, $24, $26, $29, $2e, $32, $36, $38
140ac     38 36 34 31 
140b0     2E 2A 24 20 
140b4     16 11 0A 04 
140b8     FC F6 F0 EA | 	byte	$38, $36, $34, $31, $2e, $2a, $24, $20, $16, $11, $0a, $04, $fc, $f6, $f0, $ea
140bc     E6 E4 E1 DF 
140c0     DF E3 E5 E7 
140c4     EA EF F6 FD 
140c8     03 0A 0D 0E | 	byte	$e6, $e4, $e1, $df, $df, $e3, $e5, $e7, $ea, $ef, $f6, $fd, $03, $0a, $0d, $0e
140cc     0C 0A 08 03 
140d0     FD F8 F4 F2 
140d4     F2 F1 F1 F3 
140d8     F5 F7 F7 F8 | 	byte	$0c, $0a, $08, $03, $fd, $f8, $f4, $f2, $f2, $f1, $f1, $f3, $f5, $f7, $f7, $f8
140dc     F9 FB FC FC 
140e0     FB FB FA FB 
140e4     FB FB FC FD 
140e8     FF 02 04 05 | 	byte	$f9, $fb, $fc, $fc, $fb, $fb, $fa, $fb, $fb, $fb, $fc, $fd, $ff, $02, $04, $05
140ec     06 08 0A 0B 
140f0     0B 0A 08 04 
140f4     01 FE FC FA 
140f8     F8 F7 F9 FC | 	byte	$06, $08, $0a, $0b, $0b, $0a, $08, $04, $01, $fe, $fc, $fa, $f8, $f7, $f9, $fc
140fc     FE FE FE FF 
14100     01 06 0A 0D 
14104     11 15 19 1C 
14108     1E 1E 1B 18 | 	byte	$fe, $fe, $fe, $ff, $01, $06, $0a, $0d, $11, $15, $19, $1c, $1e, $1e, $1b, $18
1410c     13 0E 08 02 
14110     FC F6 F0 EA 
14114     E6 E3 E1 E1 
14118     E3 E4 E8 EB | 	byte	$13, $0e, $08, $02, $fc, $f6, $f0, $ea, $e6, $e3, $e1, $e1, $e3, $e4, $e8, $eb
1411c     EE F3 F7 FB 
14120     FF 04 0B 0E 
14124     12 14 16 18 
14128     1A 1A 1A 1C | 	byte	$ee, $f3, $f7, $fb, $ff, $04, $0b, $0e, $12, $14, $16, $18, $1a, $1a, $1a, $1c
1412c     1F 22 26 28 
14130     2A 2A 2C 2C 
14134     2D 2D 2C 28 
14138     24 20 1C 16 | 	byte	$1f, $22, $26, $28, $2a, $2a, $2c, $2c, $2d, $2d, $2c, $28, $24, $20, $1c, $16
1413c     10 09 04 FD 
14140     F6 F2 EC E9 
14144     E6 E5 E5 E6 
14148     E7 E9 EC EF | 	byte	$10, $09, $04, $fd, $f6, $f2, $ec, $e9, $e6, $e5, $e5, $e6, $e7, $e9, $ec, $ef
1414c     F3 F8 FC FF 
14150     02 06 07 06 
14154     06 03 01 FF 
14158     FC FA F7 F4 | 	byte	$f3, $f8, $fc, $ff, $02, $06, $07, $06, $06, $03, $01, $ff, $fc, $fa, $f7, $f4
1415c     F1 F0 F0 F1 
14160     F2 F3 F5 F6 
14164     F8 F8 F9 FA 
14168     FA FB FD FE | 	byte	$f1, $f0, $f0, $f1, $f2, $f3, $f5, $f6, $f8, $f8, $f9, $fa, $fa, $fb, $fd, $fe
1416c     FF FF FF FF 
14170     00 01 02 02 
14174     02 02 00 00 
14178     FF FE FE FF | 	byte	$ff, $ff, $ff, $ff, $00, $01, $02, $02, $02, $02, $00, $00, $ff, $fe, $fe, $ff
1417c     FF 00 02 04 
14180     05 05 05 06 
14184     08 0A 0C 0E 
14188     11 13 15 17 | 	byte	$ff, $00, $02, $04, $05, $05, $05, $06, $08, $0a, $0c, $0e, $11, $13, $15, $17
1418c     18 18 16 14 
14190     12 10 0C 08 
14194     02 FE FA F8 
14198     F4 F2 EE EC | 	byte	$18, $18, $16, $14, $12, $10, $0c, $08, $02, $fe, $fa, $f8, $f4, $f2, $ee, $ec
1419c     EB EB EC ED 
141a0     EE F1 F4 F7 
141a4     FB FE 02 06 
141a8     09 0B 0C 0E | 	byte	$eb, $eb, $ec, $ed, $ee, $f1, $f4, $f7, $fb, $fe, $02, $06, $09, $0b, $0c, $0e
141ac     11 14 17 1A 
141b0     1D 20 24 26 
141b4     29 2A 2A 2A 
141b8     2A 29 28 26 | 	byte	$11, $14, $17, $1a, $1d, $20, $24, $26, $29, $2a, $2a, $2a, $2a, $29, $28, $26
141bc     22 1E 19 14 
141c0     10 0C 08 04 
141c4     00 FC F8 F4 
141c8     F0 EC E9 E8 | 	byte	$22, $1e, $19, $14, $10, $0c, $08, $04, $00, $fc, $f8, $f4, $f0, $ec, $e9, $e8
141cc     EA EC EF F0 
141d0     F1 F3 F6 F8 
141d4     FB FE 01 05 
141d8     07 06 05 03 | 	byte	$ea, $ec, $ef, $f0, $f1, $f3, $f6, $f8, $fb, $fe, $01, $05, $07, $06, $05, $03
141dc     00 FF FD FC 
141e0     FB FB FC FD 
141e4     FC FC FB FA 
141e8     FA FA FA FA | 	byte	$00, $ff, $fd, $fc, $fb, $fb, $fc, $fd, $fc, $fc, $fb, $fa, $fa, $fa, $fa, $fa
141ec     F9 FA FA FA 
141f0     FA F9 FA FB 
141f4     FD FF 00 03 
141f8     04 05 06 07 | 	byte	$f9, $fa, $fa, $fa, $fa, $f9, $fa, $fb, $fd, $ff, $00, $03, $04, $05, $06, $07
141fc     07 07 06 07 
14200     07 07 06 05 
14204     04 03 03 04 
14208     04 04 06 08 | 	byte	$07, $07, $06, $07, $07, $07, $06, $05, $04, $03, $03, $04, $04, $04, $06, $08
1420c     0B 0C 0F 10 
14210     13 14 16 15 
14214     14 12 0E 0A 
14218     06 01 FC F8 | 	byte	$0b, $0c, $0f, $10, $13, $14, $16, $15, $14, $12, $0e, $0a, $06, $01, $fc, $f8
1421c     F2 F0 EE EC 
14220     EA E7 E5 E6 
14224     E8 ED F1 F5 
14228     F9 FC FF 01 | 	byte	$f2, $f0, $ee, $ec, $ea, $e7, $e5, $e6, $e8, $ed, $f1, $f5, $f9, $fc, $ff, $01
1422c     04 05 07 0B 
14230     0F 12 14 16 
14234     16 18 1A 1D 
14238     1F 21 23 26 | 	byte	$04, $05, $07, $0b, $0f, $12, $14, $16, $16, $18, $1a, $1d, $1f, $21, $23, $26
1423c     27 26 25 22 
14240     20 1C 19 15 
14244     11 0E 09 04 
14248     00 FC FA F8 | 	byte	$27, $26, $25, $22, $20, $1c, $19, $15, $11, $0e, $09, $04, $00, $fc, $fa, $f8
1424c     F5 F4 F4 F5 
14250     F5 F4 F5 F5 
14254     F5 F7 F9 FC 
14258     FE FF 01 03 | 	byte	$f5, $f4, $f4, $f5, $f5, $f4, $f5, $f5, $f5, $f7, $f9, $fc, $fe, $ff, $01, $03
1425c     03 04 04 04 
14260     04 05 06 05 
14264     04 02 FF FB 
14268     FA F9 F8 F8 | 	byte	$03, $04, $04, $04, $04, $05, $06, $05, $04, $02, $ff, $fb, $fa, $f9, $f8, $f8
1426c     F6 F4 F3 F3 
14270     F2 F2 F2 F3 
14274     F5 F8 FB FB 
14278     FB FC FC FE | 	byte	$f6, $f4, $f3, $f3, $f2, $f2, $f2, $f3, $f5, $f8, $fb, $fb, $fb, $fc, $fc, $fe
1427c     FF 01 03 03 
14280     04 04 04 05 
14284     04 04 04 06 
14288     05 05 02 02 | 	byte	$ff, $01, $03, $03, $04, $04, $04, $05, $04, $04, $04, $06, $05, $05, $02, $02
1428c     FF FF FF FF 
14290     00 04 06 09 
14294     0C 0F 12 15 
14298     16 17 18 18 | 	byte	$ff, $ff, $ff, $ff, $00, $04, $06, $09, $0c, $0f, $12, $15, $16, $17, $18, $18
1429c     16 14 10 0B 
142a0     05 00 FA F4 
142a4     EE E9 E7 E5 
142a8     E4 E5 E7 EB | 	byte	$16, $14, $10, $0b, $05, $00, $fa, $f4, $ee, $e9, $e7, $e5, $e4, $e5, $e7, $eb
142ac     EF F3 F8 FD 
142b0     FF 02 05 06 
142b4     08 0A 0C 0E 
142b8     0F 11 14 16 | 	byte	$ef, $f3, $f8, $fd, $ff, $02, $05, $06, $08, $0a, $0c, $0e, $0f, $11, $14, $16
142bc     18 1B 1D 1F 
142c0     21 23 24 24 
142c4     23 21 20 1C 
142c8     19 16 13 10 | 	byte	$18, $1b, $1d, $1f, $21, $23, $24, $24, $23, $21, $20, $1c, $19, $16, $13, $10
142cc     0C 09 05 02 
142d0     FE FC F8 F8 
142d4     F6 F5 F3 F2 
142d8     F3 F4 F5 F5 | 	byte	$0c, $09, $05, $02, $fe, $fc, $f8, $f8, $f6, $f5, $f3, $f2, $f3, $f4, $f5, $f5
142dc     F5 F6 FA FD 
142e0     FF 01 02 04 
142e4     05 05 05 05 
142e8     05 05 05 05 | 	byte	$f5, $f6, $fa, $fd, $ff, $01, $02, $04, $05, $05, $05, $05, $05, $05, $05, $05
142ec     04 03 01 FE 
142f0     FC FA FA F7 
142f4     F5 F5 F5 F5 
142f8     F6 F7 F8 F9 | 	byte	$04, $03, $01, $fe, $fc, $fa, $fa, $f7, $f5, $f5, $f5, $f5, $f6, $f7, $f8, $f9
142fc     FA FD FE FF 
14300     00 00 00 00 
14304     01 02 02 03 
14308     04 05 06 06 | 	byte	$fa, $fd, $fe, $ff, $00, $00, $00, $00, $01, $02, $02, $03, $04, $05, $06, $06
1430c     06 07 08 08 
14310     08 07 05 03 
14314     00 FE FC FA 
14318     FB FC FF 03 | 	byte	$06, $07, $08, $08, $08, $07, $05, $03, $00, $fe, $fc, $fa, $fb, $fc, $ff, $03
1431c     07 0E 12 16 
14320     19 1A 1B 1A 
14324     19 16 12 0D 
14328     08 00 FA F4 | 	byte	$07, $0e, $12, $16, $19, $1a, $1b, $1a, $19, $16, $12, $0d, $08, $00, $fa, $f4
1432c     F0 EE EB EB 
14330     EB ED EF F0 
14334     F2 F3 F5 F7 
14338     F8 FA FB FC | 	byte	$f0, $ee, $eb, $eb, $eb, $ed, $ef, $f0, $f2, $f3, $f5, $f7, $f8, $fa, $fb, $fc
1433c     FC FC FD FF 
14340     01 06 0B 0F 
14344     12 16 1A 1C 
14348     1E 20 21 21 | 	byte	$fc, $fc, $fd, $ff, $01, $06, $0b, $0f, $12, $16, $1a, $1c, $1e, $20, $21, $21
1434c     20 20 20 1C 
14350     18 16 13 10 
14354     0E 0C 0A 08 
14358     06 04 01 FE | 	byte	$20, $20, $20, $1c, $18, $16, $13, $10, $0e, $0c, $0a, $08, $06, $04, $01, $fe
1435c     FC FC FA F9 
14360     F8 F7 F6 F5 
14364     F4 F4 F6 F6 
14368     F8 F9 FC FF | 	byte	$fc, $fc, $fa, $f9, $f8, $f7, $f6, $f5, $f4, $f4, $f6, $f6, $f8, $f9, $fc, $ff
1436c     02 06 07 08 
14370     0B 0B 0B 0C 
14374     0C 09 06 04 
14378     02 FF FC FA | 	byte	$02, $06, $07, $08, $0b, $0b, $0b, $0c, $0c, $09, $06, $04, $02, $ff, $fc, $fa
1437c     F8 F8 F6 F5 
14380     F4 F4 F4 F5 
14384     F6 F6 F8 F8 
14388     F8 F7 F5 F5 | 	byte	$f8, $f8, $f6, $f5, $f4, $f4, $f4, $f5, $f6, $f6, $f8, $f8, $f8, $f7, $f5, $f5
1438c     F6 F6 F9 FB 
14390     FE 01 05 07 
14394     09 0C 0D 0E 
14398     0F 0F 0F 0E | 	byte	$f6, $f6, $f9, $fb, $fe, $01, $05, $07, $09, $0c, $0d, $0e, $0f, $0f, $0f, $0e
1439c     0C 0B 09 07 
143a0     05 04 03 00 
143a4     FE FB FC FE 
143a8     FF 02 05 08 | 	byte	$0c, $0b, $09, $07, $05, $04, $03, $00, $fe, $fb, $fc, $fe, $ff, $02, $05, $08
143ac     0B 0F 12 14 
143b0     14 14 14 13 
143b4     10 0E 0B 08 
143b8     06 04 03 00 | 	byte	$0b, $0f, $12, $14, $14, $14, $14, $13, $10, $0e, $0b, $08, $06, $04, $03, $00
143bc     FF FC FC FC 
143c0     FB FA FA F9 
143c4     F9 FA FA FA 
143c8     F9 FA FB FC | 	byte	$ff, $fc, $fc, $fc, $fb, $fa, $fa, $f9, $f9, $fa, $fa, $fa, $f9, $fa, $fb, $fc
143cc     FE FF FF 01 
143d0     04 08 0B 0D 
143d4     0F 12 15 15 
143d8     17 15 15 15 | 	byte	$fe, $ff, $ff, $01, $04, $08, $0b, $0d, $0f, $12, $15, $15, $17, $15, $15, $15
143dc     15 14 13 12 
143e0     11 10 0E 0E 
143e4     0D 0C 0B 0A 
143e8     08 06 06 03 | 	byte	$15, $14, $13, $12, $11, $10, $0e, $0e, $0d, $0c, $0b, $0a, $08, $06, $06, $03
143ec     00 FE FD FB 
143f0     F8 F6 F4 F4 
143f4     F4 F5 F7 F7 
143f8     F8 FA FB FC | 	byte	$00, $fe, $fd, $fb, $f8, $f6, $f4, $f4, $f4, $f5, $f7, $f7, $f8, $fa, $fb, $fc
143fc     FC FB FB FC 
14400     FF FF 03 04 
14404     04 06 07 08 
14408     08 07 06 06 | 	byte	$fc, $fb, $fb, $fc, $ff, $ff, $03, $04, $04, $06, $07, $08, $08, $07, $06, $06
1440c     04 02 00 FE 
14410     FA F9 F8 F7 
14414     F6 F6 F6 F6 
14418     F7 F8 FB FB | 	byte	$04, $02, $00, $fe, $fa, $f9, $f8, $f7, $f6, $f6, $f6, $f6, $f7, $f8, $fb, $fb
1441c     FD FE FF 02 
14420     03 03 05 06 
14424     08 09 0A 0A 
14428     09 0B 0C 0C | 	byte	$fd, $fe, $ff, $02, $03, $03, $05, $06, $08, $09, $0a, $0a, $09, $0b, $0c, $0c
1442c     0D 0D 0E 0E 
14430     0E 0F 0D 0C 
14434     0B 09 09 08 
14438     08 08 06 04 | 	byte	$0d, $0d, $0e, $0e, $0e, $0f, $0d, $0c, $0b, $09, $09, $08, $08, $08, $06, $04
1443c     04 03 02 01 
14440     00 FE FD FD 
14444     FD FC FC FC 
14448     FD FE 02 05 | 	byte	$04, $03, $02, $01, $00, $fe, $fd, $fd, $fd, $fc, $fc, $fc, $fd, $fe, $02, $05
1444c     05 06 07 08 
14450     0A 0A 0A 0A 
14454     08 08 08 08 
14458     06 06 05 05 | 	byte	$05, $06, $07, $08, $0a, $0a, $0a, $0a, $08, $08, $08, $08, $06, $06, $05, $05
1445c     05 05 04 04 
14460     03 03 02 02 
14464     02 FF FD FC 
14468     FC FD FE FF | 	byte	$05, $05, $04, $04, $03, $03, $02, $02, $02, $ff, $fd, $fc, $fc, $fd, $fe, $ff
1446c     FF FF 01 04 
14470     04 05 06 06 
14474     07 07 07 06 
14478     07 06 07 08 | 	byte	$ff, $ff, $01, $04, $04, $05, $06, $06, $07, $07, $07, $06, $07, $06, $07, $08
1447c     0A 0A 0B 0A 
14480     0A 0A 0B 0B 
14484     0B 0B 0A 0A 
14488     09 08 06 04 | 	byte	$0a, $0a, $0b, $0a, $0a, $0a, $0b, $0b, $0b, $0b, $0a, $0a, $09, $08, $06, $04
1448c     03 02 00 01 
14490     FF FE FD FC 
14494     FB FA FB F9 
14498     F9 FA FA FA | 	byte	$03, $02, $00, $01, $ff, $fe, $fd, $fc, $fb, $fa, $fb, $f9, $f9, $fa, $fa, $fa
1449c     FA FA FB FD 
144a0     FD FE FF FF 
144a4     01 02 02 02 
144a8     02 02 02 02 | 	byte	$fa, $fa, $fb, $fd, $fd, $fe, $ff, $ff, $01, $02, $02, $02, $02, $02, $02, $02
144ac     01 00 01 01 
144b0     01 02 02 02 
144b4     03 04 04 05 
144b8     05 05 05 05 | 	byte	$01, $00, $01, $01, $01, $02, $02, $02, $03, $04, $04, $05, $05, $05, $05, $05
144bc     06 08 08 08 
144c0     07 06 07 07 
144c4     06 06 06 06 
144c8     06 05 06 06 | 	byte	$06, $08, $08, $08, $07, $06, $07, $07, $06, $06, $06, $06, $06, $05, $06, $06
144cc     06 05 06 06 
144d0     06 06 06 07 
144d4     07 08 08 0A 
144d8     09 09 09 08 | 	byte	$06, $05, $06, $06, $06, $06, $06, $07, $07, $08, $08, $0a, $09, $09, $09, $08
144dc     07 06 06 06 
144e0     07 07 08 07 
144e4     07 06 06 04 
144e8     03 03 03 02 | 	byte	$07, $06, $06, $06, $07, $07, $08, $07, $07, $06, $06, $04, $03, $03, $03, $02
144ec     03 02 03 02 
144f0     00 00 FF FD 
144f4     FE FE FE FD 
144f8     FD FE FD FD | 	byte	$03, $02, $03, $02, $00, $00, $ff, $fd, $fe, $fe, $fe, $fd, $fd, $fe, $fd, $fd
144fc     FD FD FE FF 
14500     00 02 03 05 
14504     05 06 06 06 
14508     06 08 09 0A | 	byte	$fd, $fd, $fe, $ff, $00, $02, $03, $05, $05, $06, $06, $06, $06, $08, $09, $0a
1450c     0A 0A 09 0A 
14510     08 08 08 08 
14514     09 08 08 07 
14518     06 06 05 04 | 	byte	$0a, $0a, $09, $0a, $08, $08, $08, $08, $09, $08, $08, $07, $06, $06, $05, $04
1451c     04 04 04 04 
14520     02 01 00 FF 
14524     FE FD FD FE 
14528     FE FE FE FE | 	byte	$04, $04, $04, $04, $02, $01, $00, $ff, $fe, $fd, $fd, $fe, $fe, $fe, $fe, $fe
1452c     FF FF 00 02 
14530     01 02 02 02 
14534     01 01 00 FF 
14538     FF FF FF 00 | 	byte	$ff, $ff, $00, $02, $01, $02, $02, $02, $01, $01, $00, $ff, $ff, $ff, $ff, $00
1453c     02 00 01 01 
14540     00 00 01 00 
14544     01 02 03 03 
14548     04 03 04 02 | 	byte	$02, $00, $01, $01, $00, $00, $01, $00, $01, $02, $03, $03, $04, $03, $04, $02
1454c     03 04 04 04 
14550     03 02 03 02 
14554     03 03 04 04 
14558     05 05 05 06 | 	byte	$03, $04, $04, $04, $03, $02, $03, $02, $03, $03, $04, $04, $05, $05, $05, $06
1455c     06 06 06 05 
14560     06 06 07 06 
14564     06 06 05 05 
14568     04 04 04 04 | 	byte	$06, $06, $06, $05, $06, $06, $07, $06, $06, $06, $05, $05, $04, $04, $04, $04
1456c     04 04 03 03 
14570     03 02 04 04 
14574     04 05 05 06 
14578     06 05 05 05 | 	byte	$04, $04, $03, $03, $03, $02, $04, $04, $04, $05, $05, $06, $06, $05, $05, $05
1457c     06 06 06 06 
14580     06 06 06 06 
14584     06          | 	byte	$06[9]
14585     04 04 04 04 
14589     04 04       | 	byte	$04[6]
1458b     05 05 06 05 
1458f     05 05 06 07 
14593     08 08 08 09 
14597     08 07 06 06 | 	byte	$05, $05, $06, $05, $05, $05, $06, $07, $08, $08, $08, $09, $08, $07, $06, $06
1459b     05 05 05 05 
1459f     04 05 06 05 
145a3     04 04 04 05 
145a7     04 03 01 01 | 	byte	$05, $05, $05, $05, $04, $05, $06, $05, $04, $04, $04, $05, $04, $03, $01, $01
145ab     00 FF FE FD 
145af     FD FD FE FE 
145b3     FE FE FF FF 
145b7     02 02 03 03 | 	byte	$00, $ff, $fe, $fd, $fd, $fd, $fe, $fe, $fe, $fe, $ff, $ff, $02, $02, $03, $03
145bb     03 04 05 04 
145bf     04 03 03 04 
145c3     05 06 06 05 
145c7     05 04 04 04 | 	byte	$03, $04, $05, $04, $04, $03, $03, $04, $05, $06, $06, $05, $05, $04, $04, $04
145cb     04 03 02 02 
145cf     01 02 01 02 
145d3     01 01 00 00 
145d7     FF FF FF FF | 	byte	$04, $03, $02, $02, $01, $02, $01, $02, $01, $01, $00, $00, $ff, $ff, $ff, $ff
145db     FF 00 00 FF 
145df     FD FD FF FF 
145e3     01 02 03 04 
145e7     04 05 06 06 | 	byte	$ff, $00, $00, $ff, $fd, $fd, $ff, $ff, $01, $02, $03, $04, $04, $05, $06, $06
145eb     06 06 06 06 
145ef     06          | 	byte	$06[5]
145f0     07 06 06 05 
145f4     06 06 06 08 
145f8     08 06 06 06 
145fc     05 04 03 02 | 	byte	$07, $06, $06, $05, $06, $06, $06, $08, $08, $06, $06, $06, $05, $04, $03, $02
14600     02 01 02 03 
14604     03 03 02 04 
14608     04 04 03 02 
1460c     03 02 02 02 | 	byte	$02, $01, $02, $03, $03, $03, $02, $04, $04, $04, $03, $02, $03, $02, $02, $02
14610     02 02 02 02 
14614     03 02 02 02 
14618     02 04 05 05 
1461c     06 06 06 06 | 	byte	$02, $02, $02, $02, $03, $02, $02, $02, $02, $04, $05, $05, $06, $06, $06, $06
14620     06 06 06 05 
14624     06 06 05 04 
14628     04 03 02 03 
1462c     03 04 04 05 | 	byte	$06, $06, $06, $05, $06, $06, $05, $04, $04, $03, $02, $03, $03, $04, $04, $05
14630     05 06 06 06 
14634     05 05 04 05 
14638     04 04 04 02 
1463c     01 02 03 04 | 	byte	$05, $06, $06, $06, $05, $05, $04, $05, $04, $04, $04, $02, $01, $02, $03, $04
14640     04 03 03 04 
14644     03 03 03 04 
14648     04 04 04 05 
1464c     05 06 06 06 | 	byte	$04, $03, $03, $04, $03, $03, $03, $04, $04, $04, $04, $05, $05, $06, $06, $06
14650     06 06 06 06 
14654     06          | 	byte	$06[5]
14655     05 06 06 06 
14659     05 04 04 03 
1465d     03 02 02 02 
14661     02 02 02 02 | 	byte	$05, $06, $06, $06, $05, $04, $04, $03, $03, $02, $02, $02, $02, $02, $02, $02
14665     01 01 01 00 
14669     01 01 02 01 
1466d     02 02 01 01 
14671     02 02 02 02 | 	byte	$01, $01, $01, $00, $01, $01, $02, $01, $02, $02, $01, $01, $02, $02, $02, $02
14675     03 02 02 02 
14679     02 02 03 04 
1467d     04 04 05 05 
14681     05 04 04 05 | 	byte	$03, $02, $02, $02, $02, $02, $03, $04, $04, $04, $05, $05, $05, $04, $04, $05
14685     05 07 06 07 
14689     05 05 04 04 
1468d     05 05 05 05 
14691     06 06 05 05 | 	byte	$05, $07, $06, $07, $05, $05, $04, $04, $05, $05, $05, $05, $06, $06, $05, $05
14695     05 04 04 04 
14699     05 04 04 04 
1469d     04 04 03 02 
146a1     02 03 04 04 | 	byte	$05, $04, $04, $04, $05, $04, $04, $04, $04, $04, $03, $02, $02, $03, $04, $04
146a5     04 05 04 05 
146a9     04 05 05 04 
146ad     03 04 04 04 
146b1     04 03 03 04 | 	byte	$04, $05, $04, $05, $04, $05, $05, $04, $03, $04, $04, $04, $04, $03, $03, $04
146b5     04 04 04 04 
146b9     04 04 04 04 | 	byte	$04[8]
146bd     05 04 04 03 
146c1     03 03 02 01 
146c5     01 02 02 02 
146c9     02 02 02 02 | 	byte	$05, $04, $04, $03, $03, $03, $02, $01, $01, $02, $02, $02, $02, $02, $02, $02
146cd     01 01 02 02 
146d1     02 02 01 01 
146d5     02 02 01 02 
146d9     02 02 04 03 | 	byte	$01, $01, $02, $02, $02, $02, $01, $01, $02, $02, $01, $02, $02, $02, $04, $03
146dd     04 04 04 04 
146e1     04 04       | 	byte	$04[6]
146e3     03 03 03 03 
146e7     03 03       | 	byte	$03[6]
146e9     02 02 02 02 
146ed     02          | 	byte	$02[5]
146ee     03 04 03 03 
146f2     02 03 03 04 
146f6     05 06 06 05 
146fa     05 06 06 08 | 	byte	$03, $04, $03, $03, $02, $03, $03, $04, $05, $06, $06, $05, $05, $06, $06, $08
146fe     07 08 08 07 
14702     06 06 06 06 
14706     05 05 04 05 
1470a     05 06 06 05 | 	byte	$07, $08, $08, $07, $06, $06, $06, $06, $05, $05, $04, $05, $05, $06, $06, $05
1470e     04 04 05 04 
14712     06 05 05 05 
14716     05 05 05 05 
1471a     04 04 04 05 | 	byte	$04, $04, $05, $04, $06, $05, $05, $05, $05, $05, $05, $05, $04, $04, $04, $05
1471e     04 03 02 02 
14722     02 02 02 02 
14726     02 03 03 04 
1472a     04 04 04 04 | 	byte	$04, $03, $02, $02, $02, $02, $02, $02, $02, $03, $03, $04, $04, $04, $04, $04
1472e     04 04 04 03 
14732     03 04 04 04 
14736     03 03 04 03 
1473a     02 02 02 03 | 	byte	$04, $04, $04, $03, $03, $04, $04, $04, $03, $03, $04, $03, $02, $02, $02, $03
1473e     02 03 02 01 
14742     02 01 02 02 
14746     02 02 02 02 
1474a     02 02 02 02 | 	byte	$02, $03, $02, $01, $02, $01, $02, $02, $02, $02, $02, $02, $02, $02, $02, $02
1474e     02 03 03 04 
14752     05 04 04 04 
14756     04 04 05 04 
1475a     04 04 03 04 | 	byte	$02, $03, $03, $04, $05, $04, $04, $04, $04, $04, $05, $04, $04, $04, $03, $04
1475e     04 04 04 05 
14762     03 04 04 04 
14766     04 05 05 06 
1476a     05 04 04 04 | 	byte	$04, $04, $04, $05, $03, $04, $04, $04, $04, $05, $05, $06, $05, $04, $04, $04
1476e     04 04 04 03 
14772     02 03 03 03 
14776     02 02 01 01 
1477a     02 02 02 03 | 	byte	$04, $04, $04, $03, $02, $03, $03, $03, $02, $02, $01, $01, $02, $02, $02, $03
1477e     04 04 04 03 
14782     03 04 04 04 
14786     04 04 04 04 
1478a     05 05 05 05 | 	byte	$04, $04, $04, $03, $03, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
1478e     04 04 05 04 
14792     05 05 04 04 
14796     03 04 03 02 
1479a     03 03 04 03 | 	byte	$04, $04, $05, $04, $05, $05, $04, $04, $03, $04, $03, $02, $03, $03, $04, $03
1479e     03 03 02 03 
147a2     04 04 05 04 
147a6     05 05 04 05 
147aa     04 04 04 03 | 	byte	$03, $03, $02, $03, $04, $04, $05, $04, $05, $05, $04, $05, $04, $04, $04, $03
147ae     03 03 04 04 
147b2     04 04 04 04 
147b6     04 04 04 04 
147ba     04 05 04 03 | 	byte	$03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $05, $04, $03
147be     03 04 05 05 
147c2     05 05 05 05 
147c6     05 05 04 05 
147ca     05 05 04 04 | 	byte	$03, $04, $05, $05, $05, $05, $05, $05, $05, $05, $04, $05, $05, $05, $04, $04
147ce     03 03 03 03 
147d2     02 03 03 03 
147d6     03 04 03 03 
147da     02 02 02 02 | 	byte	$03, $03, $03, $03, $02, $03, $03, $03, $03, $04, $03, $03, $02, $02, $02, $02
147de     02 02 02 03 
147e2     02 03 03 03 
147e6     03 03 04 04 
147ea     04 04 03 03 | 	byte	$02, $02, $02, $03, $02, $03, $03, $03, $03, $03, $04, $04, $04, $04, $03, $03
147ee     03 02 02 02 
147f2     03 04 04 03 
147f6     02 02 02 02 
147fa     03 03 03 03 | 	byte	$03, $02, $02, $02, $03, $04, $04, $03, $02, $02, $02, $02, $03, $03, $03, $03
147fe     03 03 03 04 
14802     03 03 02 02 
14806     03 03 04 04 
1480a     05 04 04 03 | 	byte	$03, $03, $03, $04, $03, $03, $02, $02, $03, $03, $04, $04, $05, $04, $04, $03
1480e     03 04 04 05 
14812     05 04 03 04 
14816     04 05 04 04 
1481a     04 04 04 04 | 	byte	$03, $04, $04, $05, $05, $04, $03, $04, $04, $05, $04, $04, $04, $04, $04, $04
1481e     02 02 01 02 
14822     02 02 03 03 
14826     03 03 03 04 
1482a     04 05 04 05 | 	byte	$02, $02, $01, $02, $02, $02, $03, $03, $03, $03, $03, $04, $04, $05, $04, $05
1482e     04 04 04 04 
14832     04          | 	byte	$04[5]
14833     05 04 04 05 
14837     04 04 04 03 
1483b     03 03 02 02 
1483f     03 02 03 02 | 	byte	$05, $04, $04, $05, $04, $04, $04, $03, $03, $03, $02, $02, $03, $02, $03, $02
14843     02 02 03 04 
14847     05 04 04 04 
1484b     05 05 05 04 
1484f     04 04 04 04 | 	byte	$02, $02, $03, $04, $05, $04, $04, $04, $05, $05, $05, $04, $04, $04, $04, $04
14853     04 04 04 04 
14857     04 04 04    | 	byte	$04[7]
1485a     03 03 03 03 
1485e     03          | 	byte	$03[5]
1485f     02 02 02 02 
14863     03 02 03 02 
14867     04 03 03 02 
1486b     02 03 03 03 | 	byte	$02, $02, $02, $02, $03, $02, $03, $02, $04, $03, $03, $02, $02, $03, $03, $03
1486f     03 04 04 04 
14873     05 05 05 05 
14877     04 05 06 06 
1487b     06 05 04 05 | 	byte	$03, $04, $04, $04, $05, $05, $05, $05, $04, $05, $06, $06, $06, $05, $04, $05
1487f     05 05 04 04 
14883     04 04 04 03 
14887     03 03 02 02 
1488b     02 01 02 02 | 	byte	$05, $05, $04, $04, $04, $04, $04, $03, $03, $03, $02, $02, $02, $01, $02, $02
1488f     02 01 01 02 
14893     03 03 03 04 
14897     04 04 05 05 
1489b     05 05 05 04 | 	byte	$02, $01, $01, $02, $03, $03, $03, $04, $04, $04, $05, $05, $05, $05, $05, $04
1489f     04 05 04 03 
148a3     02 02 02 02 
148a7     03 03 03 03 
148ab     03 03 04 04 | 	byte	$04, $05, $04, $03, $02, $02, $02, $02, $03, $03, $03, $03, $03, $03, $04, $04
148af     04 04 04 04 
148b3     05 05 04 05 
148b7     05 04 05 05 
148bb     05 06 05 04 | 	byte	$04, $04, $04, $04, $05, $05, $04, $05, $05, $04, $05, $05, $05, $06, $05, $04
148bf     05 04 05 05 
148c3     05 05 06 05 
148c7     04 04 04 05 
148cb     05 05 06 06 | 	byte	$05, $04, $05, $05, $05, $05, $06, $05, $04, $04, $04, $05, $05, $05, $06, $06
148cf     06 05 05 05 
148d3     04 05 05 05 
148d7     04 05 04 04 
148db     06 05 06 06 | 	byte	$06, $05, $05, $05, $04, $05, $05, $05, $04, $05, $04, $04, $06, $05, $06, $06
148df     04 04 05 05 
148e3     05 05 04 04 
148e7     02 02 02 02 
148eb     02 02 02 02 | 	byte	$04, $04, $05, $05, $05, $05, $04, $04, $02, $02, $02, $02, $02, $02, $02, $02
148ef     02 02 02 02 
148f3     02 02 02    | 	byte	$02[7]
148f6     01 02 02 01 
148fa     01 01 01 01 
148fe     01 02 02 02 
14902     02 01 02 03 | 	byte	$01, $02, $02, $01, $01, $01, $01, $01, $01, $02, $02, $02, $02, $01, $02, $03
14906     01 02 02 02 
1490a     02 02 02 02 
1490e     02 03 02 02 
14912     03 03 03 02 | 	byte	$01, $02, $02, $02, $02, $02, $02, $02, $02, $03, $02, $02, $03, $03, $03, $02
14916     03 03 03 04 
1491a     03 04 03 04 
1491e     04 03 03 04 
14922     06 05 06 05 | 	byte	$03, $03, $03, $04, $03, $04, $03, $04, $04, $03, $03, $04, $06, $05, $06, $05
14926     05 05 04 05 
1492a     04 04 04 04 
1492e     04 05 03 03 
14932     04 04 04 04 | 	byte	$05, $05, $04, $05, $04, $04, $04, $04, $04, $05, $03, $03, $04, $04, $04, $04
14936     04 04 05 04 
1493a     05 04 06 06 
1493e     06 06 06 05 
14942     05 05 04 04 | 	byte	$04, $04, $05, $04, $05, $04, $06, $06, $06, $06, $06, $05, $05, $05, $04, $04
14946     04 04 04 03 
1494a     02 03 03 03 
1494e     02 03 01 02 
14952     01 03 03 04 | 	byte	$04, $04, $04, $03, $02, $03, $03, $03, $02, $03, $01, $02, $01, $03, $03, $04
14956     04 03 03 03 
1495a     04 04 04 04 
1495e     04 03 02 03 
14962     03 03 03 03 | 	byte	$04, $03, $03, $03, $04, $04, $04, $04, $04, $03, $02, $03, $03, $03, $03, $03
14966     03 03 03 03 
1496a     03          | 	byte	$03[5]
1496b     02 03 04 03 
1496f     03 03 02 02 
14973     02 01 01 00 
14977     02 02 02 02 | 	byte	$02, $03, $04, $03, $03, $03, $02, $02, $02, $01, $01, $00, $02, $02, $02, $02
1497b     03 03 03 04 
1497f     04 03 02 02 
14983     03 03 03 04 
14987     04 04 05 05 | 	byte	$03, $03, $03, $04, $04, $03, $02, $02, $03, $03, $03, $04, $04, $04, $05, $05
1498b     04 05 05 06 
1498f     06 05 05 05 
14993     05 05 04 05 
14997     04 04 04 04 | 	byte	$04, $05, $05, $06, $06, $05, $05, $05, $05, $05, $04, $05, $04, $04, $04, $04
1499b     04 05 04 04 
1499f     04 05 05 04 
149a3     04 04 05 05 
149a7     05 04 04 05 | 	byte	$04, $05, $04, $04, $04, $05, $05, $04, $04, $04, $05, $05, $05, $04, $04, $05
149ab     04 05 05 05 
149af     05 06 05 04 
149b3     05 05 06 05 
149b7     05 05 06 04 | 	byte	$04, $05, $05, $05, $05, $06, $05, $04, $05, $05, $06, $05, $05, $05, $06, $04
149bb     04 04 04 05 
149bf     04 04 04 04 
149c3     04 04 04 03 
149c7     03 04 03 04 | 	byte	$04, $04, $04, $05, $04, $04, $04, $04, $04, $04, $04, $03, $03, $04, $03, $04
149cb     04 04 04 04 
149cf     04 04 04 04 
149d3     04 04       | 	byte	$04[10]
149d5     03 03 03 02 
149d9     02 03 04 03 
149dd     03 03 04 04 
149e1     05 05 04 04 | 	byte	$03, $03, $03, $02, $02, $03, $04, $03, $03, $03, $04, $04, $05, $05, $04, $04
149e5     04 04 04 05 
149e9     04 04 03 04 
149ed     04 04 04 04 
149f1     04 03 03 03 | 	byte	$04, $04, $04, $05, $04, $04, $03, $04, $04, $04, $04, $04, $04, $03, $03, $03
149f5     04 03 04 04 
149f9     04 04 04 03 
149fd     03 04 03 02 
14a01     02 02 02 02 | 	byte	$04, $03, $04, $04, $04, $04, $04, $03, $03, $04, $03, $02, $02, $02, $02, $02
14a05     02 02 02 02 
14a09     03 03 04 03 
14a0d     03 02 03 02 
14a11     02 02 02 03 | 	byte	$02, $02, $02, $02, $03, $03, $04, $03, $03, $02, $03, $02, $02, $02, $02, $03
14a15     03 03 03 02 
14a19     02 01 02 03 
14a1d     04 04 04 04 
14a21     04 04 04 04 | 	byte	$03, $03, $03, $02, $02, $01, $02, $03, $04, $04, $04, $04, $04, $04, $04, $04
14a25     04 04 04 04 
14a29     04          | 	byte	$04[5]
14a2a     03 03 02 02 
14a2e     03 04 04 04 
14a32     04 04 05 05 
14a36     05 04 04 04 | 	byte	$03, $03, $02, $02, $03, $04, $04, $04, $04, $04, $05, $05, $05, $04, $04, $04
14a3a     04 04 04 04 
14a3e     04 04 04 04 
14a42     04 04 04 04 | 	byte	$04[12]
14a46     05 04 04 04 
14a4a     04 04 04 05 
14a4e     05 05 04 04 
14a52     03 02 02 03 | 	byte	$05, $04, $04, $04, $04, $04, $04, $05, $05, $05, $04, $04, $03, $02, $02, $03
14a56     02 03 02 03 
14a5a     03 04 03 03 
14a5e     02 03 02 03 
14a62     03 03 03 02 | 	byte	$02, $03, $02, $03, $03, $04, $03, $03, $02, $03, $02, $03, $03, $03, $03, $02
14a66     01 01 01 02 
14a6a     02 01 01 02 
14a6e     02 02 02 03 
14a72     03 03 02 04 | 	byte	$01, $01, $01, $02, $02, $01, $01, $02, $02, $02, $02, $03, $03, $03, $02, $04
14a76     04 05 04 04 
14a7a     04 04 04 04 
14a7e     03 03 03 03 
14a82     04 04 04 04 | 	byte	$04, $05, $04, $04, $04, $04, $04, $04, $03, $03, $03, $03, $04, $04, $04, $04
14a86     04 04 05 04 
14a8a     05 05 05 04 
14a8e     06 04 04 03 
14a92     03 04 04 04 | 	byte	$04, $04, $05, $04, $05, $05, $05, $04, $06, $04, $04, $03, $03, $04, $04, $04
14a96     05 04 04 04 
14a9a     04 05 04 05 
14a9e     05 05 05 05 
14aa2     04 05 05 05 | 	byte	$05, $04, $04, $04, $04, $05, $04, $05, $05, $05, $05, $05, $04, $05, $05, $05
14aa6     05 04 04 05 
14aaa     05 04 04 04 
14aae     04 04 05 05 
14ab2     04 04 05 05 | 	byte	$05, $04, $04, $05, $05, $04, $04, $04, $04, $04, $05, $05, $04, $04, $05, $05
14ab6     05 04 04 04 
14aba     04 04 03 03 
14abe     03 03 03 03 
14ac2     03 04 04 04 | 	byte	$05, $04, $04, $04, $04, $04, $03, $03, $03, $03, $03, $03, $03, $04, $04, $04
14ac6     03 04 04 03 
14aca     02 03 02 02 
14ace     03 02 02 02 
14ad2     02 01 02 02 | 	byte	$03, $04, $04, $03, $02, $03, $02, $02, $03, $02, $02, $02, $02, $01, $02, $02
14ad6     03 03 03 02 
14ada     02 02 02 02 
14ade     01 02 01 01 
14ae2     01 01 02 01 | 	byte	$03, $03, $03, $02, $02, $02, $02, $02, $01, $02, $01, $01, $01, $01, $02, $01
14ae6     02 03 02 02 
14aea     02 03 04 04 
14aee     04 04 04 04 
14af2     06 05 04 04 | 	byte	$02, $03, $02, $02, $02, $03, $04, $04, $04, $04, $04, $04, $06, $05, $04, $04
14af6     04 04 05 03 
14afa     03 04 04 04 
14afe     04 04 05 05 
14b02     06 06 06 05 | 	byte	$04, $04, $05, $03, $03, $04, $04, $04, $04, $04, $05, $05, $06, $06, $06, $05
14b06     05 04 05 05 
14b0a     04 04 04 04 
14b0e     04 04 04 05 
14b12     05 04 04 04 | 	byte	$05, $04, $05, $05, $04, $04, $04, $04, $04, $04, $04, $05, $05, $04, $04, $04
14b16     04 04 04 04 
14b1a     04 04       | 	byte	$04[6]
14b1c     03 04 04 03 
14b20     03 03 03 02 
14b24     02 03 02 03 
14b28     03 03 03 02 | 	byte	$03, $04, $04, $03, $03, $03, $03, $02, $02, $03, $02, $03, $03, $03, $03, $02
14b2c     03 04 03 02 
14b30     03 03 03 03 
14b34     04 04 03 03 
14b38     03 03 03 03 | 	byte	$03, $04, $03, $02, $03, $03, $03, $03, $04, $04, $03, $03, $03, $03, $03, $03
14b3c     02 03 04 04 
14b40     03 03 03 05 
14b44     04 04 04 04 
14b48     04 05 04 04 | 	byte	$02, $03, $04, $04, $03, $03, $03, $05, $04, $04, $04, $04, $04, $05, $04, $04
14b4c     04 04 04 03 
14b50     03 03 03 03 
14b54     04 04 04 04 
14b58     04 05 05 04 | 	byte	$04, $04, $04, $03, $03, $03, $03, $03, $04, $04, $04, $04, $04, $05, $05, $04
14b5c     04 04 03 03 
14b60     04 04 04 04 
14b64     04 04 04 04 
14b68     04 04 04 04 | 	byte	$04, $04, $03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
14b6c     05 05 04 04 
14b70     04 03 03 03 
14b74     03 03 03 03 
14b78     03 02 03 03 | 	byte	$05, $05, $04, $04, $04, $03, $03, $03, $03, $03, $03, $03, $03, $02, $03, $03
14b7c     03 03 03 04 
14b80     04 04 04 04 
14b84     04 04 04 04 
14b88     03 03 03 04 | 	byte	$03, $03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $03, $03, $03, $04
14b8c     04 04 04 04 
14b90     04          | 	byte	$04[5]
14b91     03 03 04 04 
14b95     03 03 03 04 
14b99     04 04 04 04 
14b9d     03 03 03 03 | 	byte	$03, $03, $04, $04, $03, $03, $03, $04, $04, $04, $04, $04, $03, $03, $03, $03
14ba1     04 04 04 04 
14ba5     04 04 04    | 	byte	$04[7]
14ba8     03 04 04 03 
14bac     03 03 02 03 
14bb0     02 03 02 02 
14bb4     02 02 02 02 | 	byte	$03, $04, $04, $03, $03, $03, $02, $03, $02, $03, $02, $02, $02, $02, $02, $02
14bb8     03 02 03 03 
14bbc     04 04 03 03 
14bc0     04 04 04 04 
14bc4     04 03 02 03 | 	byte	$03, $02, $03, $03, $04, $04, $03, $03, $04, $04, $04, $04, $04, $03, $02, $03
14bc8     03 03 03 02 
14bcc     03 03 04 04 
14bd0     04 04 03 04 
14bd4     04 05 04 04 | 	byte	$03, $03, $03, $02, $03, $03, $04, $04, $04, $04, $03, $04, $04, $05, $04, $04
14bd8     04 05 04 05 
14bdc     04 04 04 04 
14be0     03 03 02 02 
14be4     03 03 03 02 | 	byte	$04, $05, $04, $05, $04, $04, $04, $04, $03, $03, $02, $02, $03, $03, $03, $02
14be8     04 04 04 04 
14bec     04          | 	byte	$04[5]
14bed     03 03 02 04 
14bf1     04 04 03 04 
14bf5     04 04 04 04 
14bf9     04 04 04 04 | 	byte	$03, $03, $02, $04, $04, $04, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04
14bfd     04 04 04 04 
14c01     04 04 04 04 | 	byte	$04[8]
14c05     05 04 04 04 
14c09     04 05 05 05 
14c0d     05 05 04 04 
14c11     04 04 04 04 | 	byte	$05, $04, $04, $04, $04, $05, $05, $05, $05, $05, $04, $04, $04, $04, $04, $04
14c15     04 03 04 04 
14c19     04 04 04 04 
14c1d     04 04 04 04 
14c21     04 04 04 04 | 	byte	$04, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04
14c25     04 04 04 04 
14c29     03 03 02 03 
14c2d     02 02 03 04 
14c31     03 03 04 03 | 	byte	$04, $04, $04, $04, $03, $03, $02, $03, $02, $02, $03, $04, $03, $03, $04, $03
14c35     03 03 03 04 
14c39     04 03 03 02 
14c3d     02 02 02 02 
14c41     03 02 02 02 | 	byte	$03, $03, $03, $04, $04, $03, $03, $02, $02, $02, $02, $02, $03, $02, $02, $02
14c45     02 02 03 03 
14c49     04 04 04 04 
14c4d     04 04 04 04 
14c51     05 04 04 04 | 	byte	$02, $02, $03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $05, $04, $04, $04
14c55     04 05 04 04 
14c59     04 04 04 04 
14c5d     04 03 04 04 
14c61     04 04 04 04 | 	byte	$04, $05, $04, $04, $04, $04, $04, $04, $04, $03, $04, $04, $04, $04, $04, $04
14c65     04 04 05 04 
14c69     04 04 04 04 
14c6d     05 04 04 04 
14c71     04 04 04 04 | 	byte	$04, $04, $05, $04, $04, $04, $04, $04, $05, $04, $04, $04, $04, $04, $04, $04
14c75     04 04 04 04 
14c79     05 04 06 05 
14c7d     05 04 04 04 
14c81     04 04 04 04 | 	byte	$04, $04, $04, $04, $05, $04, $06, $05, $05, $04, $04, $04, $04, $04, $04, $04
14c85     03 03 03 02 
14c89     03 02 03 04 
14c8d     02 03 02 03 
14c91     03 03 02 02 | 	byte	$03, $03, $03, $02, $03, $02, $03, $04, $02, $03, $02, $03, $03, $03, $02, $02
14c95     02 02 03 02 
14c99     02 02 02 03 
14c9d     02 02 03 02 
14ca1     02 03 02 02 | 	byte	$02, $02, $03, $02, $02, $02, $02, $03, $02, $02, $03, $02, $02, $03, $02, $02
14ca5     03 02 02 03 
14ca9     03 03 03 03 
14cad     03 03 02 03 
14cb1     03 03 03 03 | 	byte	$03, $02, $02, $03, $03, $03, $03, $03, $03, $03, $02, $03, $03, $03, $03, $03
14cb5     03 03 02 02 
14cb9     02 04 04 03 
14cbd     03 04 04 03 
14cc1     04 04 04 05 | 	byte	$03, $03, $02, $02, $02, $04, $04, $03, $03, $04, $04, $03, $04, $04, $04, $05
14cc5     04 04 04 03 
14cc9     04 04 04 04 
14ccd     04 04 04 04 
14cd1     05 05 05 05 | 	byte	$04, $04, $04, $03, $04, $04, $04, $04, $04, $04, $04, $04, $05, $05, $05, $05
14cd5     06 05 05 05 
14cd9     05 05 05 05 
14cdd     04 05 05 05 
14ce1     04 05 04 04 | 	byte	$06, $05, $05, $05, $05, $05, $05, $05, $04, $05, $05, $05, $04, $05, $04, $04
14ce5     04 04 05 05 
14ce9     05 04 05 05 
14ced     05 04 05 05 
14cf1     04 04 05 05 | 	byte	$04, $04, $05, $05, $05, $04, $05, $05, $05, $04, $05, $05, $04, $04, $05, $05
14cf5     04 05 05 04 
14cf9     05 05 04 04 
14cfd     04 04 04 04 
14d01     03 02 03 04 | 	byte	$04, $05, $05, $04, $05, $05, $04, $04, $04, $04, $04, $04, $03, $02, $03, $04
14d05     04 04 03 03 
14d09     03 03 03 03 
14d0d     04 04 03 04 
14d11     05 04 04 03 | 	byte	$04, $04, $03, $03, $03, $03, $03, $03, $04, $04, $03, $04, $05, $04, $04, $03
14d15     03 02 03 04 
14d19     04 04 04 04 
14d1d     04 04 04 04 
14d21     04 04 03 03 | 	byte	$03, $02, $03, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $04, $03, $03
14d25     03 03 04 04 
14d29     04 03 03 04 
14d2d     04 03 03 04 
14d31     04 04 04 04 | 	byte	$03, $03, $04, $04, $04, $03, $03, $04, $04, $03, $03, $04, $04, $04, $04, $04
14d35     04 04 04 04 
14d39     05 04 04 04 
14d3d     03 03 03 04 
14d41     03 03 04 04 | 	byte	$04, $04, $04, $04, $05, $04, $04, $04, $03, $03, $03, $04, $03, $03, $04, $04
14d45     04 04 04 03 
14d49     03 03 03 03 
14d4d     03 03 03 02 
14d51     02 02 02 02 | 	byte	$04, $04, $04, $03, $03, $03, $03, $03, $03, $03, $03, $02, $02, $02, $02, $02
14d55     02 02 02 02 
14d59     02 02       | 	byte	$02[6]
14d5b     03 02 02 03 
14d5f     03 04 04 04 
14d63     04 04 04 04 
14d67     04 03 03 03 | 	byte	$03, $02, $02, $03, $03, $04, $04, $04, $04, $04, $04, $04, $04, $03, $03, $03
14d6b     02 02 02 02 
14d6f     02          | 	byte	$02[5]
14d70     03 02 03 03 
14d74     04 04 03 03 
14d78     03 02 03 03 
14d7c     04 04 04 03 | 	byte	$03, $02, $03, $03, $04, $04, $03, $03, $03, $02, $03, $03, $04, $04, $04, $03
14d80     03 03 03 03 
14d84     02 03 02 01 
14d88     02 02 02 02 
14d8c     02 02 03 03 | 	byte	$03, $03, $03, $03, $02, $03, $02, $01, $02, $02, $02, $02, $02, $02, $03, $03
14d90     03 03 03 03 
14d94     02 02 02 03 
14d98     04 04 04 04 
14d9c     03 04 04 04 | 	byte	$03, $03, $03, $03, $02, $02, $02, $03, $04, $04, $04, $04, $03, $04, $04, $04
14da0     04 04 04 04 
14da4     03 03 03 04 
14da8     04 03 03 03 
14dac     03 03 04 03 | 	byte	$04, $04, $04, $04, $03, $03, $03, $04, $04, $03, $03, $03, $03, $03, $04, $03
14db0     03 03 03 03 
14db4     04 04 04 05 
14db8     04 04 06 05 
14dbc     05 06 06 06 | 	byte	$03, $03, $03, $03, $04, $04, $04, $05, $04, $04, $06, $05, $05, $06, $06, $06
14dc0     06 06 06 06 
14dc4     06          | 	byte	$06[5]
14dc5     05 06 06 05 
14dc9     06 06 06 06 
14dcd     06 06 06 05 
14dd1     04 04 05 04 | 	byte	$05, $06, $06, $05, $06, $06, $06, $06, $06, $06, $06, $05, $04, $04, $05, $04
14dd5     04 04 03 02 
14dd9     02 03 05 0A 
14ddd     09 08 05 06 
14de1     05 04 00 FF | 	byte	$04, $04, $03, $02, $02, $03, $05, $0a, $09, $08, $05, $06, $05, $04, $00, $ff
14de5     FF 02 06 06 
14de9     04 04 06 02 
14ded     FE FD 05 08 
14df1     06 01 00 01 | 	byte	$ff, $02, $06, $06, $04, $04, $06, $02, $fe, $fd, $05, $08, $06, $01, $00, $01
14df5     02 04 03 04 
14df9     00 FC F8 FE 
14dfd     0F 1B 12 00 
14e01     E8 E3 EB F9 | 	byte	$02, $04, $03, $04, $00, $fc, $f8, $fe, $0f, $1b, $12, $00, $e8, $e3, $eb, $f9
14e05     0F 1F 26 21 
14e09     16 08 FA F5 
14e0d     FA FF 00 FC 
14e11     F5 F2 F4 F6 | 	byte	$0f, $1f, $26, $21, $16, $08, $fa, $f5, $fa, $ff, $00, $fc, $f5, $f2, $f4, $f6
14e15     F7 F7 F8 FD 
14e19     02 0B 15 1F 
14e1d     23 29 2D 20 
14e21     E0 B2 BF EF | 	byte	$f7, $f7, $f8, $fd, $02, $0b, $15, $1f, $23, $29, $2d, $20, $e0, $b2, $bf, $ef
14e25     17 20 33 57 
14e29     73 68 40 00 
14e2d     A0 80 81 9B 
14e31     CF FF 2F 46 | 	byte	$17, $20, $33, $57, $73, $68, $40, $00, $a0, $80, $81, $9b, $cf, $ff, $2f, $46
14e35     28 20 00 DA 
14e39     DF F7 FC 07 
14e3d     27 3B 3D 32 
14e41     10 D0 A0 80 | 	byte	$28, $20, $00, $da, $df, $f7, $fc, $07, $27, $3b, $3d, $32, $10, $d0, $a0, $80
14e45     97 BF EF 2B 
14e49     4F 44 39 45 
14e4d     40 28 10 00 
14e51     F0 EF F0 DA | 	byte	$97, $bf, $ef, $2b, $4f, $44, $39, $45, $40, $28, $10, $00, $f0, $ef, $f0, $da
14e55     E6 F7 FA FC 
14e59     F0 EB FB 03 
14e5d     02 05 06 0F 
14e61     37 57 62 60 | 	byte	$e6, $f7, $fa, $fc, $f0, $eb, $fb, $03, $02, $05, $06, $0f, $37, $57, $62, $60
14e65     50 30 F0 C4 
14e69     BB C7 E7 FF 
14e6d     1B 18 F0 DB 
14e71     E7 EF EE D0 | 	byte	$50, $30, $f0, $c4, $bb, $c7, $e7, $ff, $1b, $18, $f0, $db, $e7, $ef, $ee, $d0
14e75     B7 CB F7 1B 
14e79     3B 45 30 0C 
14e7d     00 03 12 21 
14e81     35 32 08 E0 | 	byte	$b7, $cb, $f7, $1b, $3b, $45, $30, $0c, $00, $03, $12, $21, $35, $32, $08, $e0
14e85     E3 F3 F7 F8 
14e89     EB E2 D4 CB 
14e8d     DB F7 0F 23 
14e91     2C 2C 28 2A | 	byte	$e3, $f3, $f7, $f8, $eb, $e2, $d4, $cb, $db, $f7, $0f, $23, $2c, $2c, $28, $2a
14e95     37 3D 28 0C 
14e99     FB F8 F2 EB 
14e9d     EF F0 E0 C8 
14ea1     C2 CF E3 FF | 	byte	$37, $3d, $28, $0c, $fb, $f8, $f2, $eb, $ef, $f0, $e0, $c8, $c2, $cf, $e3, $ff
14ea5     1B 1E 1A 1F 
14ea9     29 2F 3B 41 
14ead     3A 28 10 00 
14eb1     FA FA F0 E2 | 	byte	$1b, $1e, $1a, $1f, $29, $2f, $3b, $41, $3a, $28, $10, $00, $fa, $fa, $f0, $e2
14eb5     D6 D0 CA D3 
14eb9     EB FE FF FF 
14ebd     02 08 0A 0F 
14ec1     19 1D 14 0C | 	byte	$d6, $d0, $ca, $d3, $eb, $fe, $ff, $ff, $02, $08, $0a, $0f, $19, $1d, $14, $0c
14ec5     06 09 08 06 
14ec9     FC F0 E6 E3 
14ecd     E9 ED F2 F5 
14ed1     F4 F0 F2 FC | 	byte	$06, $09, $08, $06, $fc, $f0, $e6, $e3, $e9, $ed, $f2, $f5, $f4, $f0, $f2, $fc
14ed5     07 11 1B 20 
14ed9     20 18 15 11 
14edd     0E 0F 10 08 
14ee1     F8 F3 F9 FF | 	byte	$07, $11, $1b, $20, $20, $18, $15, $11, $0e, $0f, $10, $08, $f8, $f3, $f9, $ff
14ee5     04 05 00 F5 
14ee9     F2 FA 02 0A 
14eed     0F 11 11 10 
14ef1     12 10 0C 08 | 	byte	$04, $05, $00, $f5, $f2, $fa, $02, $0a, $0f, $11, $11, $10, $12, $10, $0c, $08
14ef5     06 00 FD FE 
14ef9     03 05 04 08 
14efd     0A 09 06 08 
14f01     0D 10 0C 04 | 	byte	$06, $00, $fd, $fe, $03, $05, $04, $08, $0a, $09, $06, $08, $0d, $10, $0c, $04
14f05     04 0D 15 17 
14f09     15 15 10 02 
14f0d     F0 E2 DE E1 
14f11     E5 ED FA 03 | 	byte	$04, $0d, $15, $17, $15, $15, $10, $02, $f0, $e2, $de, $e1, $e5, $ed, $fa, $03
14f15     06 00 F4 ED 
14f19     EF F7 FF 0F 
14f1d     1F 28 20 14 
14f21     09 04 FA F4 | 	byte	$06, $00, $f4, $ed, $ef, $f7, $ff, $0f, $1f, $28, $20, $14, $09, $04, $fa, $f4
14f25     F7 FB FF FE 
14f29     FA F6 F6 F7 
14f2d     F4 F1 F6 FF 
14f31     0B 0A 04 01 | 	byte	$f7, $fb, $ff, $fe, $fa, $f6, $f6, $f7, $f4, $f1, $f6, $ff, $0b, $0a, $04, $01
14f35     FF 01 03 02 
14f39     02 03 06 06 
14f3d     04 07 12 1B 
14f41     1A 15 11 10 | 	byte	$ff, $01, $03, $02, $02, $03, $06, $06, $04, $07, $12, $1b, $1a, $15, $11, $10
14f45     0F 0A 08 0A 
14f49     0F 17 1B 19 
14f4d     12 0B 06 02 
14f51     FE FF 07 11 | 	byte	$0f, $0a, $08, $0a, $0f, $17, $1b, $19, $12, $0b, $06, $02, $fe, $ff, $07, $11
14f55     17 18 12 0C 
14f59     05 00 FC FE 
14f5d     03 03 02 FF 
14f61     FC FA FA FB | 	byte	$17, $18, $12, $0c, $05, $00, $fc, $fe, $03, $03, $02, $ff, $fc, $fa, $fa, $fb
14f65     FC FD FE F8 
14f69     EC E7 E6 E5 
14f6d     E0 E1 EB FA 
14f71     FC F9 F0 DC | 	byte	$fc, $fd, $fe, $f8, $ec, $e7, $e6, $e5, $e0, $e1, $eb, $fa, $fc, $f9, $f0, $dc
14f75     C4 BC C7 DF 
14f79     FF 27 3F 44 
14f7d     40 39 30 24 
14f81     18 10 0C 0B | 	byte	$c4, $bc, $c7, $df, $ff, $27, $3f, $44, $40, $39, $30, $24, $18, $10, $0c, $0b
14f85     08 01 F4 E8 
14f89     D8 CD C7 C9 
14f8d     CD CF D2 D9 
14f91     EB FA 04 0A | 	byte	$08, $01, $f4, $e8, $d8, $cd, $c7, $c9, $cd, $cf, $d2, $d9, $eb, $fa, $04, $0a
14f95     0E 11 15 1B 
14f99     21 26 2A 2D 
14f9d     32 36 34 2D 
14fa1     22 16 0E 0C | 	byte	$0e, $11, $15, $1b, $21, $26, $2a, $2d, $32, $36, $34, $2d, $22, $16, $0e, $0c
14fa5     11 11 0D 08 
14fa9     06 07 07 05 
14fad     05 06 0A 0F 
14fb1     14 19 1C 14 | 	byte	$11, $11, $0d, $08, $06, $07, $07, $05, $05, $06, $0a, $0f, $14, $19, $1c, $14
14fb5     0E 08 07 07 
14fb9     0B 13 18 14 
14fbd     0B 04 00 F4 
14fc1     EA E7 EA ED | 	byte	$0e, $08, $07, $07, $0b, $13, $18, $14, $0b, $04, $00, $f4, $ea, $e7, $ea, $ed
14fc5     F0 F5 F8 F8 
14fc9     F6 F5 F7 FA 
14fcd     03 0B 13 18 
14fd1     1C 1A 11 06 | 	byte	$f0, $f5, $f8, $f8, $f6, $f5, $f7, $fa, $03, $0b, $13, $18, $1c, $1a, $11, $06
14fd5     FF FD FA F7 
14fd9     F5 F5 F7 F4 
14fdd     F0 EC E8 E1 
14fe1     D6 D2 D6 DB | 	byte	$ff, $fd, $fa, $f7, $f5, $f5, $f7, $f4, $f0, $ec, $e8, $e1, $d6, $d2, $d6, $db
14fe5     DF DD DA DA 
14fe9     E7 FF 2B 4F 
14fed     67 64 50 38 
14ff1     26 23 25 25 | 	byte	$df, $dd, $da, $da, $e7, $ff, $2b, $4f, $67, $64, $50, $38, $26, $23, $25, $25
14ff5     1C 0C F4 E0 
14ff9     CE C4 C0 BC 
14ffd     B5 B1 B4 BF 
15001     CF DF E9 EF | 	byte	$1c, $0c, $f4, $e0, $ce, $c4, $c0, $bc, $b5, $b1, $b4, $bf, $cf, $df, $e9, $ef
15005     F6 FF 0C 13 
15009     15 18 1A 1B 
1500d     1B 21 2B 2F 
15011     2C 22 18 10 | 	byte	$f6, $ff, $0c, $13, $15, $18, $1a, $1b, $1b, $21, $2b, $2f, $2c, $22, $18, $10
15015     0E 11 15 18 
15019     1B 1E 1D 1A 
1501d     16 17 16 16 
15021     17 18 18 16 | 	byte	$0e, $11, $15, $18, $1b, $1e, $1d, $1a, $16, $17, $16, $16, $17, $18, $18, $16
15025     16 14 11 0C 
15029     0B 0A 08 06 
1502d     04 03 05 0B 
15031     0F 14 16 12 | 	byte	$16, $14, $11, $0c, $0b, $0a, $08, $06, $04, $03, $05, $0b, $0f, $14, $16, $12
15035     0C 05 03 00 
15039     02 05 07 04 
1503d     FC F8 F9 FA 
15041     FB FD FE FF | 	byte	$0c, $05, $03, $00, $02, $05, $07, $04, $fc, $f8, $f9, $fa, $fb, $fd, $fe, $ff
15045     FB F6 F0 F1 
15049     F6 FA F8 F0 
1504d     EC EC E8 DC 
15051     D8 DF E7 EA | 	byte	$fb, $f6, $f0, $f1, $f6, $fa, $f8, $f0, $ec, $ec, $e8, $dc, $d8, $df, $e7, $ea
15055     EB EC ED EA 
15059     E8 E6 EB F3 
1505d     FD 06 0A 09 
15061     06 03 03 03 | 	byte	$eb, $ec, $ed, $ea, $e8, $e6, $eb, $f3, $fd, $06, $0a, $09, $06, $03, $03, $03
15065     00 FE FF 01 
15069     FF FC FF 05 
1506d     06 04 00 FC 
15071     F9 FC 02 05 | 	byte	$00, $fe, $ff, $01, $ff, $fc, $ff, $05, $06, $04, $00, $fc, $f9, $fc, $02, $05
15075     09 12 1B 1E 
15079     20 1D 18 16 
1507d     14 14 12 11 
15081     11 11 09 02 | 	byte	$09, $12, $1b, $1e, $20, $1d, $18, $16, $14, $14, $12, $11, $11, $11, $09, $02
15085     01 01 02 06 
15089     08 08 05 07 
1508d     0E 14 16 18 
15091     18 19 18 16 | 	byte	$01, $01, $02, $06, $08, $08, $05, $07, $0e, $14, $16, $18, $18, $19, $18, $16
15095     13 10 0E 08 
15099     04 02 04 03 
1509d     02 05 08 0A 
150a1     08 08 09 0A | 	byte	$13, $10, $0e, $08, $04, $02, $04, $03, $02, $05, $08, $0a, $08, $08, $09, $0a
150a5     08 09 0B 0F 
150a9     12 15 12 0E 
150ad     0D 0B 08 04 
150b1     03 04 02 FE | 	byte	$08, $09, $0b, $0f, $12, $15, $12, $0e, $0d, $0b, $08, $04, $03, $04, $02, $fe
150b5     FB F8 F6 F8 
150b9     F9 F6 F4 F5 
150bd     F6 F7 F7 FB 
150c1     FF FF FF FF | 	byte	$fb, $f8, $f6, $f8, $f9, $f6, $f4, $f5, $f6, $f7, $f7, $fb, $ff, $ff, $ff, $ff
150c5     00 FC F6 F4 
150c9     F3 F0 ED EF 
150cd     F4 FA FB FB 
150d1     FA FA FC FC | 	byte	$00, $fc, $f6, $f4, $f3, $f0, $ed, $ef, $f4, $fa, $fb, $fb, $fa, $fa, $fc, $fc
150d5     FD FF 08 0B 
150d9     0B 0A 0A 09 
150dd     08 06 03 00 
150e1     FC F6 F4 F7 | 	byte	$fd, $ff, $08, $0b, $0b, $0a, $0a, $09, $08, $06, $03, $00, $fc, $f6, $f4, $f7
150e5     FD 03 05 04 
150e9     00 FE FF 06 
150ed     0B 0D 0B 08 
150f1     05 02 02 04 | 	byte	$fd, $03, $05, $04, $00, $fe, $ff, $06, $0b, $0d, $0b, $08, $05, $02, $02, $04
150f5     06 04 FE F6 
150f9     F2 F1 F9 FF 
150fd     07 0B 0C 0C 
15101     0B 0B 0D 13 | 	byte	$06, $04, $fe, $f6, $f2, $f1, $f9, $ff, $07, $0b, $0c, $0c, $0b, $0b, $0d, $13
15105     18 18 16 14 
15109     13 10 0F 0A 
1510d     05 00 FE FB 
15111     F9 F8 F9 F8 | 	byte	$18, $18, $16, $14, $13, $10, $0f, $0a, $05, $00, $fe, $fb, $f9, $f8, $f9, $f8
15115     F8 F7 F7 FB 
15119     FE FF FF FF 
1511d     FE 01 04 06 
15121     09 0D 10 13 | 	byte	$f8, $f7, $f7, $fb, $fe, $ff, $ff, $ff, $fe, $01, $04, $06, $09, $0d, $10, $13
15125     10 0C 0B 0B 
15129     0A 0B 0C 0C 
1512d     0A 04 00 01 
15131     03 02 00 FF | 	byte	$10, $0c, $0b, $0b, $0a, $0b, $0c, $0c, $0a, $04, $00, $01, $03, $02, $00, $ff
15135     FE FC FA F9 
15139     F9 F9 F8 F7 
1513d     F6 FB FF 01 
15141     00 FD FE 01 | 	byte	$fe, $fc, $fa, $f9, $f9, $f9, $f8, $f7, $f6, $fb, $ff, $01, $00, $fd, $fe, $01
15145     06 08 0C 0F 
15149     0F 0C 0B 0B 
1514d     0A 08 04 01 
15151     00 FF FE FF | 	byte	$06, $08, $0c, $0f, $0f, $0c, $0b, $0b, $0a, $08, $04, $01, $00, $ff, $fe, $ff
15155     05 08 0A 09 
15159     04 FD F8 F8 
1515d     FD 05 0B 0E 
15161     10 08 02 00 | 	byte	$05, $08, $0a, $09, $04, $fd, $f8, $f8, $fd, $05, $0b, $0e, $10, $08, $02, $00
15165     FE F6 EC E4 
15169     D4 C8 C2 CF 
1516d     EF 27 4F 6B 
15171     60 40 24 18 | 	byte	$fe, $f6, $ec, $e4, $d4, $c8, $c2, $cf, $ef, $27, $4f, $6b, $60, $40, $24, $18
15175     25 35 3E 30 
15179     10 E8 C4 B0 
1517d     A4 A4 A6 A9 
15181     AA AF B6 BF | 	byte	$25, $35, $3e, $30, $10, $e8, $c4, $b0, $a4, $a4, $a6, $a9, $aa, $af, $b6, $bf
15185     CD DB EF 0B 
15189     27 39 42 41 
1518d     3B 38 38 3A 
15191     38 32 26 12 | 	byte	$cd, $db, $ef, $0b, $27, $39, $42, $41, $3b, $38, $38, $3a, $38, $32, $26, $12
15195     00 EC E7 EC 
15199     F2 F9 FC FB 
1519d     FD FF 06 11 
151a1     1F 2D 36 38 | 	byte	$00, $ec, $e7, $ec, $f2, $f9, $fc, $fb, $fd, $ff, $06, $11, $1f, $2d, $36, $38
151a5     34 2E 26 21 
151a9     1D 1D 1D 1A 
151ad     12 08 F5 EA 
151b1     E5 E7 EF F8 | 	byte	$34, $2e, $26, $21, $1d, $1d, $1d, $1a, $12, $08, $f5, $ea, $e5, $e7, $ef, $f8
151b5     FE 03 06 06 
151b9     06 08 0C 0F 
151bd     10 11 13 16 
151c1     15 11 0C 06 | 	byte	$fe, $03, $06, $06, $06, $08, $0c, $0f, $10, $11, $13, $16, $15, $11, $0c, $06
151c5     00 FA F4 F1 
151c9     F0 F2 F5 F5 
151cd     F4 F4 F2 F0 
151d1     EF F5 FB FE | 	byte	$00, $fa, $f4, $f1, $f0, $f2, $f5, $f5, $f4, $f4, $f2, $f0, $ef, $f5, $fb, $fe
151d5     FC FB F2 E2 
151d9     C8 B0 A7 BF 
151dd     EF 2F 67 7D 
151e1     68 40 14 05 | 	byte	$fc, $fb, $f2, $e2, $c8, $b0, $a7, $bf, $ef, $2f, $67, $7d, $68, $40, $14, $05
151e5     15 2F 3A 30 
151e9     0C E0 B2 98 
151ed     97 A3 A9 AA 
151f1     A8 AC B6 BF | 	byte	$15, $2f, $3a, $30, $0c, $e0, $b2, $98, $97, $a3, $a9, $aa, $a8, $ac, $b6, $bf
151f5     D3 E3 F7 0B 
151f9     1F 33 3E 3E 
151fd     38 30 29 28 
15201     2B 2E 28 19 | 	byte	$d3, $e3, $f7, $0b, $1f, $33, $3e, $3e, $38, $30, $29, $28, $2b, $2e, $28, $19
15205     08 FA F7 FE 
15209     0D 17 19 14 
1520d     10 0C 0E 14 
15211     22 2F 37 38 | 	byte	$08, $fa, $f7, $fe, $0d, $17, $19, $14, $10, $0c, $0e, $14, $22, $2f, $37, $38
15215     31 28 1C 15 
15219     10 11 17 1C 
1521d     1D 18 10 06 
15221     01 FF 02 07 | 	byte	$31, $28, $1c, $15, $10, $11, $17, $1c, $1d, $18, $10, $06, $01, $ff, $02, $07
15225     0B 0D 0B 08 
15229     06 08 0B 0B 
1522d     08 02 FC F8 
15231     F7 F6 FA FF | 	byte	$0b, $0d, $0b, $08, $06, $08, $0b, $0b, $08, $02, $fc, $f8, $f7, $f6, $fa, $ff
15235     02 02 FD F6 
15239     F3 F4 F9 FE 
1523d     00 02 00 FC 
15241     F6 F3 F2 F0 | 	byte	$02, $02, $fd, $f6, $f3, $f4, $f9, $fe, $00, $02, $00, $fc, $f6, $f3, $f2, $f0
15245     F0 EC E4 D8 
15249     C8 B8 A8 A6 
1524d     BB DF 1F 4F 
15251     6A 60 38 14 | 	byte	$f0, $ec, $e4, $d8, $c8, $b8, $a8, $a6, $bb, $df, $1f, $4f, $6a, $60, $38, $14
15255     0B 19 2F 43 
15259     3A 20 F0 C2 
1525d     A2 98 9D A2 
15261     A3 A2 A1 A7 | 	byte	$0b, $19, $2f, $43, $3a, $20, $f0, $c2, $a2, $98, $9d, $a2, $a3, $a2, $a1, $a7
15265     B7 C7 D7 ED 
15269     FF 0F 1F 2F 
1526d     3B 41 44 44 
15271     43 40 3D 34 | 	byte	$b7, $c7, $d7, $ed, $ff, $0f, $1f, $2f, $3b, $41, $44, $44, $43, $40, $3d, $34
15275     24 10 00 F3 
15279     F3 FB 07 0E 
1527d     0E 09 05 06 
15281     0F 1D 2D 3B | 	byte	$24, $10, $00, $f3, $f3, $fb, $07, $0e, $0e, $09, $05, $06, $0f, $1d, $2d, $3b
15285     3F 3C 38 36 
15289     34 2E 26 20 
1528d     1C 14 0C 02 
15291     FC FA F9 FD | 	byte	$3f, $3c, $38, $36, $34, $2e, $26, $20, $1c, $14, $0c, $02, $fc, $fa, $f9, $fd
15295     01 07 09 09 
15299     06 05 09 0F 
1529d     14 15 14 10 
152a1     0C 0A 05 01 | 	byte	$01, $07, $09, $09, $06, $05, $09, $0f, $14, $15, $14, $10, $0c, $0a, $05, $01
152a5     FC F8 F6 F2 
152a9     F0 EF F1 F2 
152ad     F1 F3 F7 FB 
152b1     FC F8 F4 F3 | 	byte	$fc, $f8, $f6, $f2, $f0, $ef, $f1, $f2, $f1, $f3, $f7, $fb, $fc, $f8, $f4, $f3
152b5     F3 F4 F2 EF 
152b9     E8 E0 D4 C8 
152bd     B4 AA AF CF 
152c1     FB 2F 57 60 | 	byte	$f3, $f4, $f2, $ef, $e8, $e0, $d4, $c8, $b4, $aa, $af, $cf, $fb, $2f, $57, $60
152c5     48 22 10 17 
152c9     2B 3D 40 2C 
152cd     08 E4 C4 B1 
152d1     AF AE A8 A1 | 	byte	$48, $22, $10, $17, $2b, $3d, $40, $2c, $08, $e4, $c4, $b1, $af, $ae, $a8, $a1
152d5     9F A3 AD BB 
152d9     CB DF F7 0F 
152dd     27 3B 43 45 
152e1     43 40 40 3F | 	byte	$9f, $a3, $ad, $bb, $cb, $df, $f7, $0f, $27, $3b, $43, $45, $43, $40, $40, $3f
152e5     3D 38 28 10 
152e9     00 F4 F0 F5 
152ed     FB FF 06 0B 
152f1     0B 0D 15 23 | 	byte	$3d, $38, $28, $10, $00, $f4, $f0, $f5, $fb, $ff, $06, $0b, $0b, $0d, $15, $23
152f5     2F 39 3C 3C 
152f9     34 2A 20 14 
152fd     11 12 12 0C 
15301     08 00 F4 EA | 	byte	$2f, $39, $3c, $3c, $34, $2a, $20, $14, $11, $12, $12, $0c, $08, $00, $f4, $ea
15305     EA EF F7 FF 
15309     08 0E 11 14 
1530d     14 14 14 15 
15311     12 0C 08 03 | 	byte	$ea, $ef, $f7, $ff, $08, $0e, $11, $14, $14, $14, $14, $15, $12, $0c, $08, $03
15315     FF FA F7 F6 
15319     F4 F1 EB E8 
1531d     E9 ED F3 FB 
15321     03 0B 0D 09 | 	byte	$ff, $fa, $f7, $f6, $f4, $f1, $eb, $e8, $e9, $ed, $f3, $fb, $03, $0b, $0d, $09
15325     06 00 FD F8 
15329     F4 F0 EC E4 
1532d     D4 C0 A8 94 
15331     97 BF F7 3F | 	byte	$06, $00, $fd, $f8, $f4, $f0, $ec, $e4, $d4, $c0, $a8, $94, $97, $bf, $f7, $3f
15335     77 7F 70 40 
15339     25 25 37 45 
1533d     42 28 00 CC 
15341     A0 88 83 8D | 	byte	$77, $7f, $70, $40, $25, $25, $37, $45, $42, $28, $00, $cc, $a0, $88, $83, $8d
15345     97 A3 AF BD 
15349     C7 D3 DF EF 
1534d     0F 2F 4F 5E 
15351     5C 4C 34 24 | 	byte	$97, $a3, $af, $bd, $c7, $d3, $df, $ef, $0f, $2f, $4f, $5e, $5c, $4c, $34, $24
15355     1A 16 14 11 
15359     0A FA EC E7 
1535d     E7 EF FF 13 
15361     1F 2E 36 34 | 	byte	$1a, $16, $14, $11, $0a, $fa, $ec, $e7, $e7, $ef, $ff, $13, $1f, $2e, $36, $34
15365     31 2F 2E 2F 
15369     2F 29 22 18 
1536d     10 06 FE FC 
15371     FD FC FD FE | 	byte	$31, $2f, $2e, $2f, $2f, $29, $22, $18, $10, $06, $fe, $fc, $fd, $fc, $fd, $fe
15375     FF 02 07 0B 
15379     0F 15 19 1A 
1537d     1B 1B 18 14 
15381     13 10 0A 02 | 	byte	$ff, $02, $07, $0b, $0f, $15, $19, $1a, $1b, $1b, $18, $14, $13, $10, $0a, $02
15385     F8 F0 EB E9 
15389     E8 E9 EA EC 
1538d     EF F3 F7 FD 
15391     07 13 1F 21 | 	byte	$f8, $f0, $eb, $e9, $e8, $e9, $ea, $ec, $ef, $f3, $f7, $fd, $07, $13, $1f, $21
15395     1C 12 04 F4 
15399     EA E6 E5 E0 
1539d     D8 CD C0 B4 
153a1     AA A8 BF EF | 	byte	$1c, $12, $04, $f4, $ea, $e6, $e5, $e0, $d8, $cd, $c0, $b4, $aa, $a8, $bf, $ef
153a5     2F 6B 7F 7A 
153a9     50 28 14 1B 
153ad     25 2A 18 F0 
153b1     C4 98 80 80 | 	byte	$2f, $6b, $7f, $7a, $50, $28, $14, $1b, $25, $2a, $18, $f0, $c4, $98, $80, $80
153b5     82 95 AD C7 
153b9     DF EF F9 FF 
153bd     0A 27 47 5F 
153c1     64 52 34 10 | 	byte	$82, $95, $ad, $c7, $df, $ef, $f9, $ff, $0a, $27, $47, $5f, $64, $52, $34, $10
153c5     F8 EE EA EA 
153c9     EB EC EB EC 
153cd     F2 FB 07 1F 
153d1     33 46 4F 4C | 	byte	$f8, $ee, $ea, $ea, $eb, $ec, $eb, $ec, $f2, $fb, $07, $1f, $33, $46, $4f, $4c
153d5     42 36 2D 26 
153d9     22 20 18 0C 
153dd     00 FB F6 F4 
153e1     F5 F9 FF 07 | 	byte	$42, $36, $2d, $26, $22, $20, $18, $0c, $00, $fb, $f6, $f4, $f5, $f9, $ff, $07
153e5     0E 0D 0C 0A 
153e9     0D 0F 12 15 
153ed     19 1B 18 15 
153f1     10 0D 08 00 | 	byte	$0e, $0d, $0c, $0a, $0d, $0f, $12, $15, $19, $1b, $18, $15, $10, $0d, $08, $00
153f5     F8 F0 EE ED 
153f9     EC EA E9 EA 
153fd     ED EF F3 F7 
15401     FB FF 06 0F | 	byte	$f8, $f0, $ee, $ed, $ec, $ea, $e9, $ea, $ed, $ef, $f3, $f7, $fb, $ff, $06, $0f
15405     17 18 10 00 
15409     F0 EA EC F1 
1540d     F2 EE E5 DC 
15411     D4 CA C0 B0 | 	byte	$17, $18, $10, $00, $f0, $ea, $ec, $f1, $f2, $ee, $e5, $dc, $d4, $ca, $c0, $b0
15415     A6 B7 EF 3F 
15419     7F 7F 7F 60 
1541d     28 0D 0D 19 
15421     19 08 E0 B0 | 	byte	$a6, $b7, $ef, $3f, $7f, $7f, $7f, $60, $28, $0d, $0d, $19, $19, $08, $e0, $b0
15425     90 80 80 87 
15429     9F BF F7 1B 
1542d     22 18 0F 17 
15431     2F 4B 58 48 | 	byte	$90, $80, $80, $87, $9f, $bf, $f7, $1b, $22, $18, $0f, $17, $2f, $4b, $58, $48
15435     30 08 E8 D0 
15439     C9 CB D3 E3 
1543d     F7 07 0F 12 
15441     14 1B 2F 4B | 	byte	$30, $08, $e8, $d0, $c9, $cb, $d3, $e3, $f7, $07, $0f, $12, $14, $1b, $2f, $4b
15445     5D 5D 50 40 
15449     26 18 10 0C 
1544d     08 08 06 02 
15451     FE F9 FA FF | 	byte	$5d, $5d, $50, $40, $26, $18, $10, $0c, $08, $08, $06, $02, $fe, $f9, $fa, $ff
15455     0B 13 18 18 
15459     10 09 05 0A 
1545d     0F 16 1B 1C 
15461     1A 19 14 0C | 	byte	$0b, $13, $18, $18, $10, $09, $05, $0a, $0f, $16, $1b, $1c, $1a, $19, $14, $0c
15465     04 FC F5 F0 
15469     EC E8 E3 E1 
1546d     E3 E7 EF F7 
15471     FD FF 04 08 | 	byte	$04, $fc, $f5, $f0, $ec, $e8, $e3, $e1, $e3, $e7, $ef, $f7, $fd, $ff, $04, $08
15475     09 0B 0D 0D 
15479     0A 02 FC FA 
1547d     FB FB FA FA 
15481     FA FA F4 EA | 	byte	$09, $0b, $0d, $0d, $0a, $02, $fc, $fa, $fb, $fb, $fa, $fa, $fa, $fa, $f4, $ea
15485     E0 D6 D3 D3 
15489     CE C0 B2 B7 
1548d     DF 1F 6F 7F 
15491     7F 78 40 18 | 	byte	$e0, $d6, $d3, $d3, $ce, $c0, $b2, $b7, $df, $1f, $6f, $7f, $7f, $78, $40, $18
15495     00 FE FC F4 
15499     E0 C0 A4 90 
1549d     80 83 9B BF 
154a1     F7 27 39 3A | 	byte	$00, $fe, $fc, $f4, $e0, $c0, $a4, $90, $80, $83, $9b, $bf, $f7, $27, $39, $3a
154a5     31 2C 2D 33 
154a9     38 2C 1A 08 
154ad     F0 D8 C4 B8 
154b1     BD D3 EF 0F | 	byte	$31, $2c, $2d, $33, $38, $2c, $1a, $08, $f0, $d8, $c4, $b8, $bd, $d3, $ef, $0f
154b5     23 2D 32 37 
154b9     3F 49 4D 49 
154bd     40 32 20 10 
154c1     FC EC E8 EF | 	byte	$23, $2d, $32, $37, $3f, $49, $4d, $49, $40, $32, $20, $10, $fc, $ec, $e8, $ef
154c5     FF 0D 13 10 
154c9     0A 07 08 0B 
154cd     0F 14 1A 1C 
154d1     1E 1D 1A 18 | 	byte	$ff, $0d, $13, $10, $0a, $07, $08, $0b, $0f, $14, $1a, $1c, $1e, $1d, $1a, $18
154d5     14 11 0E 0B 
154d9     04 FC F1 EA 
154dd     E7 E7 E8 E9 
154e1     EC EF EF F2 | 	byte	$14, $11, $0e, $0b, $04, $fc, $f1, $ea, $e7, $e7, $e8, $e9, $ec, $ef, $ef, $f2
154e5     F5 FC 03 0A 
154e9     0C 0B 0A 06 
154ed     01 FC F8 F4 
154f1     F1 F1 F3 F5 | 	byte	$f5, $fc, $03, $0a, $0c, $0b, $0a, $06, $01, $fc, $f8, $f4, $f1, $f1, $f3, $f5
154f5     F6 F4 F2 F3 
154f9     F8 FB FA F8 
154fd     F4 F1 EF EC 
15501     E6 DC D0 C4 | 	byte	$f6, $f4, $f2, $f3, $f8, $fb, $fa, $f8, $f4, $f1, $ef, $ec, $e6, $dc, $d0, $c4
15505     CF FF 3F 7F 
15509     7F 78 48 20 
1550d     F4 D8 CD CF 
15511     DB E3 E2 D8 | 	byte	$cf, $ff, $3f, $7f, $7f, $78, $48, $20, $f4, $d8, $cd, $cf, $db, $e3, $e2, $d8
15515     B8 A0 A3 BF 
15519     EB 1B 3F 4B 
1551d     46 34 18 00 
15521     F0 EB EF F6 | 	byte	$b8, $a0, $a3, $bf, $eb, $1b, $3f, $4b, $46, $34, $18, $00, $f0, $eb, $ef, $f6
15525     F8 F0 E0 D4 
15529     D0 DF FD 1F 
1552d     3B 4E 54 4C 
15531     40 30 20 11 | 	byte	$f8, $f0, $e0, $d4, $d0, $df, $fd, $1f, $3b, $4e, $54, $4c, $40, $30, $20, $11
15535     0C 0B 0B 09 
15539     06 00 FA FA 
1553d     FF 09 15 1D 
15541     20 20 18 14 | 	byte	$0c, $0b, $0b, $09, $06, $00, $fa, $fa, $ff, $09, $15, $1d, $20, $20, $18, $14
15545     14 15 17 17 
15549     18 16 12 0C 
1554d     04 00 FB F8 
15551     F8 F4 EE E9 | 	byte	$14, $15, $17, $17, $18, $16, $12, $0c, $04, $00, $fb, $f8, $f8, $f4, $ee, $e9
15555     E6 E8 EC F2 
15559     FA FF 05 06 
1555d     08 0B 0C 0C 
15561     08 04 00 FB | 	byte	$e6, $e8, $ec, $f2, $fa, $ff, $05, $06, $08, $0b, $0c, $0c, $08, $04, $00, $fb
15565     F6 F2 ED E9 
15569     E8 EA EF F3 
1556d     F9 FB FE 03 
15571     09 0C 0A 06 | 	byte	$f6, $f2, $ed, $e9, $e8, $ea, $ef, $f3, $f9, $fb, $fe, $03, $09, $0c, $0a, $06
15575     02 03 08 0A 
15579     04 F0 D8 C2 
1557d     B8 B3 BA D7 
15581     17 5F 7F 7F | 	byte	$02, $03, $08, $0a, $04, $f0, $d8, $c2, $b8, $b3, $ba, $d7, $17, $5f, $7f, $7f
15585     78 48 20 00 
15589     E8 DA D6 DF 
1558d     EA E0 C8 A8 
15591     9A A7 BF EF | 	byte	$78, $48, $20, $00, $e8, $da, $d6, $df, $ea, $e0, $c8, $a8, $9a, $a7, $bf, $ef
15595     0F 2B 39 34 
15599     20 0C FC F7 
1559d     FF 0B 11 0A 
155a1     FB F0 E8 E7 | 	byte	$0f, $2b, $39, $34, $20, $0c, $fc, $f7, $ff, $0b, $11, $0a, $fb, $f0, $e8, $e7
155a5     EF FF 17 2B 
155a9     39 3A 30 24 
155ad     1B 14 12 14 
155b1     19 1B 1A 18 | 	byte	$ef, $ff, $17, $2b, $39, $3a, $30, $24, $1b, $14, $12, $14, $19, $1b, $1a, $18
155b5     13 0F 0F 17 
155b9     1F 29 2E 2C 
155bd     24 19 0C 00 
155c1     FA FC 01 06 | 	byte	$13, $0f, $0f, $17, $1f, $29, $2e, $2c, $24, $19, $0c, $00, $fa, $fc, $01, $06
155c5     08 07 02 FE 
155c9     FB FB FB FE 
155cd     01 04 02 01 
155d1     FE FB FA FC | 	byte	$08, $07, $02, $fe, $fb, $fb, $fb, $fe, $01, $04, $02, $01, $fe, $fb, $fa, $fc
155d5     FF 03 06 03 
155d9     00 FC F9 F6 
155dd     F5 F5 F3 F0 
155e1     ED ED EE F1 | 	byte	$ff, $03, $06, $03, $00, $fc, $f9, $f6, $f5, $f5, $f3, $f0, $ed, $ed, $ee, $f1
155e5     F6 F9 FB FF 
155e9     04 0A 0F 0D 
155ed     09 00 F9 F8 
155f1     FE 05 05 00 | 	byte	$f6, $f9, $fb, $ff, $04, $0a, $0f, $0d, $09, $00, $f9, $f8, $fe, $05, $05, $00
155f5     FB F5 F0 E6 
155f9     DA D5 DE EB 
155fd     EE E4 D9 EF 
15601     2F 6F 7F 7F | 	byte	$fb, $f5, $f0, $e6, $da, $d5, $de, $eb, $ee, $e4, $d9, $ef, $2f, $6f, $7f, $7f
15605     64 40 14 E8 
15609     C4 A9 A7 BF 
1560d     D9 DC CA B8 
15611     B9 C7 DF FF | 	byte	$64, $40, $14, $e8, $c4, $a9, $a7, $bf, $d9, $dc, $ca, $b8, $b9, $c7, $df, $ff
15615     1B 37 4B 4C 
15619     30 10 F0 E2 
1561d     E2 E7 EB E9 
15621     E9 E6 E2 E0 | 	byte	$1b, $37, $4b, $4c, $30, $10, $f0, $e2, $e2, $e7, $eb, $e9, $e9, $e6, $e2, $e0
15625     E9 FF 1B 3D 
15629     53 5B 56 4A 
1562d     38 28 1C 16 
15631     13 11 0E 06 | 	byte	$e9, $ff, $1b, $3d, $53, $5b, $56, $4a, $38, $28, $1c, $16, $13, $11, $0e, $06
15635     FA F0 EC EF 
15639     FF 0F 1E 25 
1563d     24 20 14 09 
15641     03 04 0B 0F | 	byte	$fa, $f0, $ec, $ef, $ff, $0f, $1e, $25, $24, $20, $14, $09, $03, $04, $0b, $0f
15645     13 12 10 0A 
15649     04 FD F8 F6 
1564d     F6 F6 F4 EE 
15651     E8 E6 EA EF | 	byte	$13, $12, $10, $0a, $04, $fd, $f8, $f6, $f6, $f6, $f4, $ee, $e8, $e6, $ea, $ef
15655     F7 FC FF 05 
15659     06 04 00 FD 
1565d     FB FC FD FB 
15661     F8 F5 F3 F4 | 	byte	$f7, $fc, $ff, $05, $06, $04, $00, $fd, $fb, $fc, $fd, $fb, $f8, $f5, $f3, $f4
15665     F7 F8 F8 F9 
15669     FB FC FE FE 
1566d     FD FE FF 06 
15671     0B 0E 0C 08 | 	byte	$f7, $f8, $f8, $f9, $fb, $fc, $fe, $fe, $fd, $fe, $ff, $06, $0b, $0e, $0c, $08
15675     00 F8 F0 EC 
15679     EA F2 FA FD 
1567d     FB FA FD FE 
15681     F9 EC E4 F3 | 	byte	$00, $f8, $f0, $ec, $ea, $f2, $fa, $fd, $fb, $fa, $fd, $fe, $f9, $ec, $e4, $f3
15685     1F 57 77 6C 
15689     50 24 00 D8 
1568d     B4 9C 9F BF 
15691     DB E5 E0 D6 | 	byte	$1f, $57, $77, $6c, $50, $24, $00, $d8, $b4, $9c, $9f, $bf, $db, $e5, $e0, $d6
15695     D7 E2 EF FF 
15699     17 2F 45 45 
1569d     30 18 01 F9 
156a1     FA FE FF 07 | 	byte	$d7, $e2, $ef, $ff, $17, $2f, $45, $45, $30, $18, $01, $f9, $fa, $fe, $ff, $07
156a5     0E 0F 08 00 
156a9     F6 F7 FF 0F 
156ad     1D 27 2F 30 
156b1     2A 20 14 11 | 	byte	$0e, $0f, $08, $00, $f6, $f7, $ff, $0f, $1d, $27, $2f, $30, $2a, $20, $14, $11
156b5     16 1F 26 27 
156b9     21 1C 16 11 
156bd     0E 0D 0F 15 
156c1     19 19 14 0C | 	byte	$16, $1f, $26, $27, $21, $1c, $16, $11, $0e, $0d, $0f, $15, $19, $19, $14, $0c
156c5     02 F9 F4 F5 
156c9     F7 F9 FB FB 
156cd     F8 F4 F1 F1 
156d1     F4 FA FF 01 | 	byte	$02, $f9, $f4, $f5, $f7, $f9, $fb, $fb, $f8, $f4, $f1, $f1, $f4, $fa, $ff, $01
156d5     00 FC F9 F6 
156d9     F4 F2 F5 FA 
156dd     FF 03 04 00 
156e1     F6 F0 EC EF | 	byte	$00, $fc, $f9, $f6, $f4, $f2, $f5, $fa, $ff, $03, $04, $00, $f6, $f0, $ec, $ef
156e5     F3 F5 F5 F5 
156e9     F5 F7 F9 FD 
156ed     FF 05 0A 0D 
156f1     0C 04 FC F6 | 	byte	$f3, $f5, $f5, $f5, $f5, $f7, $f9, $fd, $ff, $05, $0a, $0d, $0c, $04, $fc, $f6
156f5     F7 FC FF 01 
156f9     04 08 0A 09 
156fd     05 00 FD FC 
15701     FC F8 F1 F0 | 	byte	$f7, $fc, $ff, $01, $04, $08, $0a, $09, $05, $00, $fd, $fc, $fc, $f8, $f1, $f0
15705     F1 F4 F7 F3 
15709     EE E2 D4 CF 
1570d     E7 17 4B 67 
15711     6A 60 40 20 | 	byte	$f1, $f4, $f7, $f3, $ee, $e2, $d4, $cf, $e7, $17, $4b, $67, $6a, $60, $40, $20
15715     00 E0 CA CF 
15719     E3 F5 F8 EC 
1571d     D8 CE CD D3 
15721     DE EF 0F 2F | 	byte	$00, $e0, $ca, $cf, $e3, $f5, $f8, $ec, $d8, $ce, $cd, $d3, $de, $ef, $0f, $2f
15725     3F 38 22 10 
15729     02 FF FE FF 
1572d     02 0B 0F 0F 
15731     08 00 FD 03 | 	byte	$3f, $38, $22, $10, $02, $ff, $fe, $ff, $02, $0b, $0f, $0f, $08, $00, $fd, $03
15735     0E 18 23 2B 
15739     33 32 28 18 
1573d     0A 06 07 0D 
15741     10 11 13 15 | 	byte	$0e, $18, $23, $2b, $33, $32, $28, $18, $0a, $06, $07, $0d, $10, $11, $13, $15
15745     14 12 0E 0C 
15749     0C 10 11 0E 
1574d     09 07 07 05 
15751     00 FB F9 FC | 	byte	$14, $12, $0e, $0c, $0c, $10, $11, $0e, $09, $07, $07, $05, $00, $fb, $f9, $fc
15755     FE FF FE FD 
15759     FC FA FA F7 
1575d     F4 F2 F5 F6 
15761     F6 F4 F3 F4 | 	byte	$fe, $ff, $fe, $fd, $fc, $fa, $fa, $f7, $f4, $f2, $f5, $f6, $f6, $f4, $f3, $f4
15765     F7 F9 FC FF 
15769     02 06 04 00 
1576d     F8 F1 ED EC 
15771     EE EF F2 F3 | 	byte	$f7, $f9, $fc, $ff, $02, $06, $04, $00, $f8, $f1, $ed, $ec, $ee, $ef, $f2, $f3
15775     F4 F5 F5 F6 
15779     FA FF 04 08 
1577d     0A 0A 0A 0A 
15781     08 04 FE FA | 	byte	$f4, $f5, $f5, $f6, $fa, $ff, $04, $08, $0a, $0a, $0a, $0a, $08, $04, $fe, $fa
15785     FA FC FD FD 
15789     FD FF FE FF 
1578d     FF 02 05 04 
15791     03 05 0B 0F | 	byte	$fa, $fc, $fd, $fd, $fd, $ff, $fe, $ff, $ff, $02, $05, $04, $03, $05, $0b, $0f
15795     10 0C 04 FD 
15799     F8 F2 E8 DC 
1579d     DB EF 17 3D 
157a1     4F 53 48 35 | 	byte	$10, $0c, $04, $fd, $f8, $f2, $e8, $dc, $db, $ef, $17, $3d, $4f, $53, $48, $35
157a5     20 04 E8 D8 
157a9     DB E6 EE F0 
157ad     EB E6 E6 E9 
157b1     EE F7 07 1B | 	byte	$20, $04, $e8, $d8, $db, $e6, $ee, $f0, $eb, $e6, $e6, $e9, $ee, $f7, $07, $1b
157b5     2B 33 2D 22 
157b9     18 0C 04 FE 
157bd     FC FF 04 07 
157c1     04 02 FF 02 | 	byte	$2b, $33, $2d, $22, $18, $0c, $04, $fe, $fc, $ff, $04, $07, $04, $02, $ff, $02
157c5     0A 13 1B 22 
157c9     2A 2D 2A 20 
157cd     14 0A 04 01 
157d1     FF FF 01 04 | 	byte	$0a, $13, $1b, $22, $2a, $2d, $2a, $20, $14, $0a, $04, $01, $ff, $ff, $01, $04
157d5     06 05 07 08 
157d9     0C 10 13 14 
157dd     14 11 0D 06 
157e1     FC F4 F0 EF | 	byte	$06, $05, $07, $08, $0c, $10, $13, $14, $14, $11, $0d, $06, $fc, $f4, $f0, $ef
157e5     F1 F3 F3 F2 
157e9     F2 F2 F3 F4 
157ed     F6 F7 FA FD 
157f1     FE FA F6 F0 | 	byte	$f1, $f3, $f3, $f2, $f2, $f2, $f3, $f4, $f6, $f7, $fa, $fd, $fe, $fa, $f6, $f0
157f5     EE EC EE F3 
157f9     FA FF 01 02 
157fd     00 F8 F0 EB 
15801     EB EC EE F0 | 	byte	$ee, $ec, $ee, $f3, $fa, $ff, $01, $02, $00, $f8, $f0, $eb, $eb, $ec, $ee, $f0
15805     F4 FB FF 04 
15809     07 0A 0C 0C 
1580d     09 06 02 02 
15811     03 03 04 04 | 	byte	$f4, $fb, $ff, $04, $07, $0a, $0c, $0c, $09, $06, $02, $02, $03, $03, $04, $04
15815     02 02 00 01 
15819     03 04 04 03 
1581d     04 06 09 0A 
15821     09 0B 0D 0E | 	byte	$02, $02, $00, $01, $03, $04, $04, $03, $04, $06, $09, $0a, $09, $0b, $0d, $0e
15825     0D 0B 08 07 
15829     04 04 04 02 
1582d     FF FD FD FC 
15831     F6 ED EA F7 | 	byte	$0d, $0b, $08, $07, $04, $04, $04, $02, $ff, $fd, $fd, $fc, $f6, $ed, $ea, $f7
15835     15 33 47 4C 
15839     42 34 20 08 
1583d     F0 DA D6 DE 
15841     EA F0 F0 EF | 	byte	$15, $33, $47, $4c, $42, $34, $20, $08, $f0, $da, $d6, $de, $ea, $f0, $f0, $ef
15845     EF F4 F8 FD 
15849     03 0F 1B 27 
1584d     2D 29 22 1A 
15851     14 0C 05 00 | 	byte	$ef, $f4, $f8, $fd, $03, $0f, $1b, $27, $2d, $29, $22, $1a, $14, $0c, $05, $00
15855     FF FF 01 01 
15859     FE FE 01 09 
1585d     0D 0F 14 19 
15861     1C 1D 18 11 | 	byte	$ff, $ff, $01, $01, $fe, $fe, $01, $09, $0d, $0f, $14, $19, $1c, $1d, $18, $11
15865     08 04 00 01 
15869     03 05 07 06 
1586d     04 01 FC F8 
15871     F8 FB FF 07 | 	byte	$08, $04, $00, $01, $03, $05, $07, $06, $04, $01, $fc, $f8, $f8, $fb, $ff, $07
15875     15 1B 1B 10 
15879     00 EC E0 D9 
1587d     D9 DB E3 EF 
15881     FC 02 02 FA | 	byte	$15, $1b, $1b, $10, $00, $ec, $e0, $d9, $d9, $db, $e3, $ef, $fc, $02, $02, $fa
15885     F5 F3 F5 F6 
15889     F8 F9 FA FB 
1588d     FA F6 F2 F3 
15891     F9 FD FE FC | 	byte	$f5, $f3, $f5, $f6, $f8, $f9, $fa, $fb, $fa, $f6, $f2, $f3, $f9, $fd, $fe, $fc
15895     F8 F4 F2 F2 
15899     F5 F8 FE 03 
1589d     06 08 08 07 
158a1     06 06 06 08 | 	byte	$f8, $f4, $f2, $f2, $f5, $f8, $fe, $03, $06, $08, $08, $07, $06, $06, $06, $08
158a5     0A 0E 0F 0E 
158a9     0C 0C 0B 08 
158ad     07 06 05 07 
158b1     09 0B 0C 0D | 	byte	$0a, $0e, $0f, $0e, $0c, $0c, $0b, $08, $07, $06, $05, $07, $09, $0b, $0c, $0d
158b5     0A 08 08 0A 
158b9     0B 0B 0A 08 
158bd     05 00 FA F6 
158c1     F5 F5 F7 FA | 	byte	$0a, $08, $08, $0a, $0b, $0b, $0a, $08, $05, $00, $fa, $f6, $f5, $f5, $f7, $fa
158c5     FE 00 00 F9 
158c9     F6 FD 0F 27 
158cd     3B 42 3C 2C 
158d1     18 04 F0 E0 | 	byte	$fe, $00, $00, $f9, $f6, $fd, $0f, $27, $3b, $42, $3c, $2c, $18, $04, $f0, $e0
158d5     D8 DB E7 F5 
158d9     FE 02 03 04 
158dd     05 08 0A 0E 
158e1     11 16 19 19 | 	byte	$d8, $db, $e7, $f5, $fe, $02, $03, $04, $05, $08, $0a, $0e, $11, $16, $19, $19
158e5     15 10 08 02 
158e9     FE FD FE 03 
158ed     09 0E 10 10 
158f1     0C 0A 0A 0B | 	byte	$15, $10, $08, $02, $fe, $fd, $fe, $03, $09, $0e, $10, $10, $0c, $0a, $0a, $0b
158f5     0E 11 12 11 
158f9     10 0E 0A 07 
158fd     04 03 03 03 
15901     04 04 04 05 | 	byte	$0e, $11, $12, $11, $10, $0e, $0a, $07, $04, $03, $03, $03, $04, $04, $04, $05
15905     05 04 02 02 
15909     02 04 04 02 
1590d     FC F5 F3 F2 
15911     F3 F4 F6 F7 | 	byte	$05, $04, $02, $02, $02, $04, $04, $02, $fc, $f5, $f3, $f2, $f3, $f4, $f6, $f7
15915     F8 F9 F9 F9 
15919     F8 F6 F6 F6 
1591d     F8 FD FF 00 
15921     00 FE FC FA | 	byte	$f8, $f9, $f9, $f9, $f8, $f6, $f6, $f6, $f8, $fd, $ff, $00, $00, $fe, $fc, $fa
15925     F8 F3 F2 F6 
15929     FA FD FE FE 
1592d     FE FF 02 03 
15931     02 02 02 01 | 	byte	$f8, $f3, $f2, $f6, $fa, $fd, $fe, $fe, $fe, $ff, $02, $03, $02, $02, $02, $01
15935     01 02 03 01 
15939     02 04 07 0B 
1593d     0F 11 11 10 
15941     0D 08 04 03 | 	byte	$01, $02, $03, $01, $02, $04, $07, $0b, $0f, $11, $11, $10, $0d, $08, $04, $03
15945     00 FD FD FF 
15949     03 05 07 0B 
1594d     0E 0D 0B 09 
15951     08 08 08 04 | 	byte	$00, $fd, $fd, $ff, $03, $05, $07, $0b, $0e, $0d, $0b, $09, $08, $08, $08, $04
15955     01 00 FF FE 
15959     FC F9 F9 FD 
1595d     FF FC F4 ED 
15961     F3 FF 1B 2D | 	byte	$01, $00, $ff, $fe, $fc, $f9, $f9, $fd, $ff, $fc, $f4, $ed, $f3, $ff, $1b, $2d
15965     35 35 30 24 
15969     15 00 EC E3 
1596d     E5 ED F6 FA 
15971     FB FA FB FA | 	byte	$35, $35, $30, $24, $15, $00, $ec, $e3, $e5, $ed, $f6, $fa, $fb, $fa, $fb, $fa
15975     F9 FA FF 0E 
15979     1B 22 24 20 
1597d     18 0E 06 FC 
15981     F5 F6 FB 03 | 	byte	$f9, $fa, $ff, $0e, $1b, $22, $24, $20, $18, $0e, $06, $fc, $f5, $f6, $fb, $03
15985     09 0A 0A 0A 
15989     0B 0A 09 0A 
1598d     0E 12 17 18 
15991     16 12 0D 08 | 	byte	$09, $0a, $0a, $0a, $0b, $0a, $09, $0a, $0e, $12, $17, $18, $16, $12, $0d, $08
15995     02 FA F4 F3 
15999     F8 03 0A 0D 
1599d     0A 06 FD F6 
159a1     F1 EE EF F4 | 	byte	$02, $fa, $f4, $f3, $f8, $03, $0a, $0d, $0a, $06, $fd, $f6, $f1, $ee, $ef, $f4
159a5     FA FE FE FD 
159a9     F9 F6 F6 F8 
159ad     FA FD FE FC 
159b1     F9 F5 F0 EE | 	byte	$fa, $fe, $fe, $fd, $f9, $f6, $f6, $f8, $fa, $fd, $fe, $fc, $f9, $f5, $f0, $ee
159b5     ED F1 F6 FA 
159b9     FD FE FF FE 
159bd     FE FF FF 02 
159c1     04 03 02 FE | 	byte	$ed, $f1, $f6, $fa, $fd, $fe, $ff, $fe, $fe, $ff, $ff, $02, $04, $03, $02, $fe
159c5     FE FE FF FF 
159c9     FC FC FE 04 
159cd     08 09 0A 0C 
159d1     0E 0D 0A 04 | 	byte	$fe, $fe, $ff, $ff, $fc, $fc, $fe, $04, $08, $09, $0a, $0c, $0e, $0d, $0a, $04
159d5     00 FF FF 01 
159d9     04 02 01 02 
159dd     04 04 03 02 
159e1     07 0B 0E 0C | 	byte	$00, $ff, $ff, $01, $04, $02, $01, $02, $04, $04, $03, $02, $07, $0b, $0e, $0c
159e5     08 04 03 04 
159e9     04 00 FE FF 
159ed     07 0C 0D 08 
159f1     03 00 FC F5 | 	byte	$08, $04, $03, $04, $04, $00, $fe, $ff, $07, $0c, $0d, $08, $03, $00, $fc, $f5
159f5     EA E8 F5 0F 
159f9     27 33 38 32 
159fd     2A 20 12 00 
15a01     F4 F3 FB 05 | 	byte	$ea, $e8, $f5, $0f, $27, $33, $38, $32, $2a, $20, $12, $00, $f4, $f3, $fb, $05
15a05     06 00 F8 F4 
15a09     F3 F2 F2 F6 
15a0d     FF 12 1F 25 
15a11     24 20 19 14 | 	byte	$06, $00, $f8, $f4, $f3, $f2, $f2, $f6, $ff, $12, $1f, $25, $24, $20, $19, $14
15a15     0C 04 FD FC 
15a19     FF 04 04 00 
15a1d     FF FF 01 05 
15a21     08 0C 12 17 | 	byte	$0c, $04, $fd, $fc, $ff, $04, $04, $00, $ff, $ff, $01, $05, $08, $0c, $12, $17
15a25     18 16 10 0A 
15a29     06 02 FC F9 
15a2d     F7 F8 F9 F8 
15a31     F7 F5 F5 F7 | 	byte	$18, $16, $10, $0a, $06, $02, $fc, $f9, $f7, $f8, $f9, $f8, $f7, $f5, $f5, $f7
15a35     FB FE FF FE 
15a39     FF FF 01 00 
15a3d     FD FA F8 F8 
15a41     F7 F6 F5 F7 | 	byte	$fb, $fe, $ff, $fe, $ff, $ff, $01, $00, $fd, $fa, $f8, $f8, $f7, $f6, $f5, $f7
15a45     FB FF 02 00 
15a49     FC F5 F3 F3 
15a4d     F3 F5 F8 FB 
15a51     FE FE FE FD | 	byte	$fb, $ff, $02, $00, $fc, $f5, $f3, $f3, $f3, $f5, $f8, $fb, $fe, $fe, $fe, $fd
15a55     FD FE FF FF 
15a59     03 05 06 04 
15a5d     02 01 00 FF 
15a61     FE FF 00 02 | 	byte	$fd, $fe, $ff, $ff, $03, $05, $06, $04, $02, $01, $00, $ff, $fe, $ff, $00, $02
15a65     04 04 07 08 
15a69     0A 0B 0A 06 
15a6d     00 FD FB FC 
15a71     FC FD FF 04 | 	byte	$04, $04, $07, $08, $0a, $0b, $0a, $06, $00, $fd, $fb, $fc, $fc, $fd, $ff, $04
15a75     09 0A 0B 0C 
15a79     0E 11 10 0C 
15a7d     08 04 01 FE 
15a81     FB FB FD FF | 	byte	$09, $0a, $0b, $0c, $0e, $11, $10, $0c, $08, $04, $01, $fe, $fb, $fb, $fd, $ff
15a85     01 01 FE F9 
15a89     F4 F2 F9 07 
15a8d     1D 2F 3B 3D 
15a91     38 2D 20 10 | 	byte	$01, $01, $fe, $f9, $f4, $f2, $f9, $07, $1d, $2f, $3b, $3d, $38, $2d, $20, $10
15a95     00 F0 EE F2 
15a99     F7 F8 F7 F2 
15a9d     F1 F1 F1 F2 
15aa1     F7 FF 0D 17 | 	byte	$00, $f0, $ee, $f2, $f7, $f8, $f7, $f2, $f1, $f1, $f1, $f2, $f7, $ff, $0d, $17
15aa5     1E 20 1C 18 
15aa9     13 0E 0A 06 
15aad     06 08 08 08 
15ab1     04 01 FE FC | 	byte	$1e, $20, $1c, $18, $13, $0e, $0a, $06, $06, $08, $08, $08, $04, $01, $fe, $fc
15ab5     FE FF 05 0C 
15ab9     13 17 18 14 
15abd     10 0C 06 01 
15ac1     FD F9 F7 F7 | 	byte	$fe, $ff, $05, $0c, $13, $17, $18, $14, $10, $0c, $06, $01, $fd, $f9, $f7, $f7
15ac5     F7 F4 F1 EF 
15ac9     EF F3 F7 FB 
15acd     FF 03 06 07 
15ad1     03 00 FA F7 | 	byte	$f7, $f4, $f1, $ef, $ef, $f3, $f7, $fb, $ff, $03, $06, $07, $03, $00, $fa, $f7
15ad5     F4 F4 F4 F7 
15ad9     F9 FB FC FB 
15add     FA FA FB FC 
15ae1     FE FE FE FE | 	byte	$f4, $f4, $f4, $f7, $f9, $fb, $fc, $fb, $fa, $fa, $fb, $fc, $fe, $fe, $fe, $fe
15ae5     FF FE FC FB 
15ae9     FC FF 01 02 
15aed     01 03 06 06 
15af1     06 04 03 02 | 	byte	$ff, $fe, $fc, $fb, $fc, $ff, $01, $02, $01, $03, $06, $06, $06, $04, $03, $02
15af5     03 03 02 03 
15af9     06 09 09 08 
15afd     08 04 04 04 
15b01     06 06 07 07 | 	byte	$03, $03, $02, $03, $06, $09, $09, $08, $08, $04, $04, $04, $06, $06, $07, $07
15b05     09 08 08 06 
15b09     04 02 02 03 
15b0d     02 04 05 07 
15b11     06 06 08 04 | 	byte	$09, $08, $08, $06, $04, $02, $02, $03, $02, $04, $05, $07, $06, $06, $08, $04
15b15     FC F4 F1 F5 
15b19     FE 09 12 16 
15b1d     19 17 10 06 
15b21     FA F0 F1 FF | 	byte	$fc, $f4, $f1, $f5, $fe, $09, $12, $16, $19, $17, $10, $06, $fa, $f0, $f1, $ff
15b25     13 27 2F 32 
15b29     2E 24 16 08 
15b2d     FA F5 F9 FF 
15b31     04 04 02 FE | 	byte	$13, $27, $2f, $32, $2e, $24, $16, $08, $fa, $f5, $f9, $ff, $04, $04, $02, $fe
15b35     F8 F4 F1 F1 
15b39     F6 FF 07 0E 
15b3d     12 12 11 0F 
15b41     0C 0A 08 09 | 	byte	$f8, $f4, $f1, $f1, $f6, $ff, $07, $0e, $12, $12, $11, $0f, $0c, $0a, $08, $09
15b45     0B 0D 0C 0A 
15b49     08 06 05 02 
15b4d     00 FE FE 01 
15b51     07 0A 0A 0A | 	byte	$0b, $0d, $0c, $0a, $08, $06, $05, $02, $00, $fe, $fe, $01, $07, $0a, $0a, $0a
15b55     09 08 05 01 
15b59     FE FD FD FE 
15b5d     FD FB F8 F6 
15b61     F6 F6 F7 F9 | 	byte	$09, $08, $05, $01, $fe, $fd, $fd, $fe, $fd, $fb, $f8, $f6, $f6, $f6, $f7, $f9
15b65     FA FB FC FB 
15b69     FA F8 F8 F7 
15b6d     F8 F8 F8 F9 
15b71     FA FC FD FF | 	byte	$fa, $fb, $fc, $fb, $fa, $f8, $f8, $f7, $f8, $f8, $f8, $f9, $fa, $fc, $fd, $ff
15b75     01 03 03 00 
15b79     FD F9 F8 F8 
15b7d     F9 FB FD FF 
15b81     01 04 05 07 | 	byte	$01, $03, $03, $00, $fd, $f9, $f8, $f8, $f9, $fb, $fd, $ff, $01, $04, $05, $07
15b85     09 08 08 06 
15b89     03 00 FF FD 
15b8d     FF 02 06 08 
15b91     09 0A 06 05 | 	byte	$09, $08, $08, $06, $03, $00, $ff, $fd, $ff, $02, $06, $08, $09, $0a, $06, $05
15b95     04 03 04 05 
15b99     05 06 06 06 
15b9d     05 03 02 02 
15ba1     03 03 04 04 | 	byte	$04, $03, $04, $05, $05, $06, $06, $06, $05, $03, $02, $02, $03, $03, $04, $04
15ba5     04 03 02 02 
15ba9     04 04 04 04 
15bad     05 06 07 08 
15bb1     0B 0C 0C 08 | 	byte	$04, $03, $02, $02, $04, $04, $04, $04, $05, $06, $07, $08, $0b, $0c, $0c, $08
15bb5     02 FD F9 FB 
15bb9     03 0F 1A 26 
15bbd     2F 33 31 28 
15bc1     1C 14 0E 0C | 	byte	$02, $fd, $f9, $fb, $03, $0f, $1a, $26, $2f, $33, $31, $28, $1c, $14, $0e, $0c
15bc5     0C 0A 07 03 
15bc9     00 FA F4 F0 
15bcd     EE EF F3 F9 
15bd1     FF 04 08 0C | 	byte	$0c, $0a, $07, $03, $00, $fa, $f4, $f0, $ee, $ef, $f3, $f9, $ff, $04, $08, $0c
15bd5     0E 0D 09 07 
15bd9     07 08 09 0B 
15bdd     0E 0E 0D 08 
15be1     03 FD F8 F8 | 	byte	$0e, $0d, $09, $07, $07, $08, $09, $0b, $0e, $0e, $0d, $08, $03, $fd, $f8, $f8
15be5     FB FF 03 07 
15be9     08 06 03 00 
15bed     FE FC FF FF 
15bf1     02 04 03 01 | 	byte	$fb, $ff, $03, $07, $08, $06, $03, $00, $fe, $fc, $ff, $ff, $02, $04, $03, $01
15bf5     FE FA F6 F3 
15bf9     F3 F5 F7 FA 
15bfd     FA F9 F8 F5 
15c01     F4 F4 F5 F6 | 	byte	$fe, $fa, $f6, $f3, $f3, $f5, $f7, $fa, $fa, $f9, $f8, $f5, $f4, $f4, $f5, $f6
15c05     FA FE FF 02 
15c09     02 00 FD FA 
15c0d     F9 F8 F7 F7 
15c11     FA FC FD FD | 	byte	$fa, $fe, $ff, $02, $02, $00, $fd, $fa, $f9, $f8, $f7, $f7, $fa, $fc, $fd, $fd
15c15     FD FD FE FF 
15c19     00 02 01 01 
15c1d     02 01 00 00 
15c21     00 FF FF 01 | 	byte	$fd, $fd, $fe, $ff, $00, $02, $01, $01, $02, $01, $00, $00, $00, $ff, $ff, $01
15c25     04 06 06 06 
15c29     06 04 05 05 
15c2d     04 04 04 07 
15c31     09 09 08 05 | 	byte	$04, $06, $06, $06, $06, $04, $05, $05, $04, $04, $04, $07, $09, $09, $08, $05
15c35     06 08 09 08 
15c39     08 08 09 0B 
15c3d     0B 09 08 07 
15c41     06 08 09 08 | 	byte	$06, $08, $09, $08, $08, $08, $09, $0b, $0b, $09, $08, $07, $06, $08, $09, $08
15c45     08 09 0B 0E 
15c49     0D 0C 09 08 
15c4d     05 01 FF FF 
15c51     07 11 1B 20 | 	byte	$08, $09, $0b, $0e, $0d, $0c, $09, $08, $05, $01, $ff, $ff, $07, $11, $1b, $20
15c55     21 20 1D 19 
15c59     14 10 0D 0C 
15c5d     0F 0F 0D 0A 
15c61     02 FD F8 F6 | 	byte	$21, $20, $1d, $19, $14, $10, $0d, $0c, $0f, $0f, $0d, $0a, $02, $fd, $f8, $f6
15c65     F4 F5 F9 FD 
15c69     FF 02 02 01 
15c6d     FF 02 04 04 
15c71     05 05 05 04 | 	byte	$f4, $f5, $f9, $fd, $ff, $02, $02, $01, $ff, $02, $04, $04, $05, $05, $05, $04
15c75     04 02 02 02 
15c79     04 04 02 03 
15c7d     02 02 04 05 
15c81     05 04 03 00 | 	byte	$04, $02, $02, $02, $04, $04, $02, $03, $02, $02, $04, $05, $05, $04, $03, $00
15c85     FE FB FB FC 
15c89     FB FB FB F9 
15c8d     F9 FA FB FD 
15c91     FF FF 00 02 | 	byte	$fe, $fb, $fb, $fc, $fb, $fb, $fb, $f9, $f9, $fa, $fb, $fd, $ff, $ff, $00, $02
15c95     00 FF FB FA 
15c99     F9 FA FB FC 
15c9d     FE FF FF FF 
15ca1     FE FD FD FE | 	byte	$00, $ff, $fb, $fa, $f9, $fa, $fb, $fc, $fe, $ff, $ff, $ff, $fe, $fd, $fd, $fe
15ca5     FF FF 00 00 
15ca9     01 FF FF FE 
15cad     FF FE FE FE 
15cb1     FF FF FF FF | 	byte	$ff, $ff, $00, $00, $01, $ff, $ff, $fe, $ff, $fe, $fe, $fe, $ff, $ff, $ff, $ff
15cb5     01 02 03 02 
15cb9     02 02 03 04 
15cbd     06 07 06 06 
15cc1     05 03 02 03 | 	byte	$01, $02, $03, $02, $02, $02, $03, $04, $06, $07, $06, $06, $05, $03, $02, $03
15cc5     04 04 04 04 
15cc9     04          | 	byte	$04[5]
15cca     06 08 08 07 
15cce     04 05 08 0A 
15cd2     0C 0B 08 08 
15cd6     06 05 04 03 | 	byte	$06, $08, $08, $07, $04, $05, $08, $0a, $0c, $0b, $08, $08, $06, $05, $04, $03
15cda     03 05 08 0A 
15cde     0A 0A 0B 0B 
15ce2     0B 08 06 04 
15ce6     05 06 05 05 | 	byte	$03, $05, $08, $0a, $0a, $0a, $0b, $0b, $0b, $08, $06, $04, $05, $06, $05, $05
15cea     04 03 02 01 
15cee     FF FF 03 08 
15cf2     0D 11 14 14 
15cf6     14 13 10 0D | 	byte	$04, $03, $02, $01, $ff, $ff, $03, $08, $0d, $11, $14, $14, $14, $13, $10, $0d
15cfa     0B 0A 08 06 
15cfe     05 03 03 02 
15d02     03 01 FF FD 
15d06     FC FC FC FC | 	byte	$0b, $0a, $08, $06, $05, $03, $03, $02, $03, $01, $ff, $fd, $fc, $fc, $fc, $fc
15d0a     FC FD FD FC 
15d0e     FB FA FB FD 
15d12     FF FF FF FE 
15d16     FD FD FD FC | 	byte	$fc, $fd, $fd, $fc, $fb, $fa, $fb, $fd, $ff, $ff, $ff, $fe, $fd, $fd, $fd, $fc
15d1a     FB FB FD FF 
15d1e     FF FF FF FE 
15d22     FE FF FF 00 
15d26     02 04 05 05 | 	byte	$fb, $fb, $fd, $ff, $ff, $ff, $ff, $fe, $fe, $ff, $ff, $00, $02, $04, $05, $05
15d2a     03 01 FF FC 
15d2e     FC FC FC FD 
15d32     FE FF FF 01 
15d36     03 04 04 01 | 	byte	$03, $01, $ff, $fc, $fc, $fc, $fc, $fd, $fe, $ff, $ff, $01, $03, $04, $04, $01
15d3a     FE FC FC FD 
15d3e     FF FF FF FD 
15d42     FC FC FD FD 
15d46     FC FE FF 03 | 	byte	$fe, $fc, $fc, $fd, $ff, $ff, $ff, $fd, $fc, $fc, $fd, $fd, $fc, $fe, $ff, $03
15d4a     04 03 02 02 
15d4e     03 05 06 07 
15d52     06 06 07 06 
15d56     04 04 02 02 | 	byte	$04, $03, $02, $02, $03, $05, $06, $07, $06, $06, $07, $06, $04, $04, $02, $02
15d5a     03 03 04 04 
15d5e     04 04 03 03 
15d62     02 03 04 04 
15d66     06 07 07 07 | 	byte	$03, $03, $04, $04, $04, $04, $03, $03, $02, $03, $04, $04, $06, $07, $07, $07
15d6a     08 08 08 08 
15d6e     08          | 	byte	$08[5]
15d6f     07 06 06 07 
15d73     08 09 09 09 
15d77     08 06 06 05 
15d7b     06 08 07 06 | 	byte	$07, $06, $06, $07, $08, $09, $09, $09, $08, $06, $06, $05, $06, $08, $07, $06
15d7f     05 05 05 06 
15d83     05 07 08 09 
15d87     0A 0A 09 08 
15d8b     08 08 08 08 | 	byte	$05, $05, $05, $06, $05, $07, $08, $09, $0a, $0a, $09, $08, $08, $08, $08, $08
15d8f     08 08 08 09 
15d93     09 09 08 07 
15d97     08 08 09 09 
15d9b     09 0A 0A 0B | 	byte	$08, $08, $08, $09, $09, $09, $08, $07, $08, $08, $09, $09, $09, $0a, $0a, $0b
15d9f     09 08 08 08 
15da3     08 08 08 08 
15da7     08 08 08 07 
15dab     06 04 05 01 | 	byte	$09, $08, $08, $08, $08, $08, $08, $08, $08, $08, $08, $07, $06, $04, $05, $01
15daf     01 01 02 00 
15db3     FF FE FF FE 
15db7     FC FB FB FC 
15dbb     FD FD FE FF | 	byte	$01, $01, $02, $00, $ff, $fe, $ff, $fe, $fc, $fb, $fb, $fc, $fd, $fd, $fe, $ff
15dbf     FE FE FD FD 
15dc3     FD FE FE FF 
15dc7     FF 01 02 02 
15dcb     02 02 00 00 | 	byte	$fe, $fe, $fd, $fd, $fd, $fe, $fe, $ff, $ff, $01, $02, $02, $02, $02, $00, $00
15dcf     02 02 01 01 
15dd3     02 01 FF FD 
15dd7     FC FC FD FD 
15ddb     FE FE FD FD | 	byte	$02, $02, $01, $01, $02, $01, $ff, $fd, $fc, $fc, $fd, $fd, $fe, $fe, $fd, $fd
15ddf     FD FD FF 03 
15de3     04 00 FA F6 
15de7     F8 FC FF FF 
15deb     00 00 FE FC | 	byte	$fd, $fd, $ff, $03, $04, $00, $fa, $f6, $f8, $fc, $ff, $ff, $00, $00, $fe, $fc
15def     FC FD FF 01 
15df3     03 05 07 05 
15df7     03 03 04 04 
15dfb     07 09 08 08 | 	byte	$fc, $fd, $ff, $01, $03, $05, $07, $05, $03, $03, $04, $04, $07, $09, $08, $08
15dff     08 05 04 04 
15e03     04 02 03 04 
15e07     04 06 06 07 
15e0b     07 09 0A 0A | 	byte	$08, $05, $04, $04, $04, $02, $03, $04, $04, $06, $06, $07, $07, $09, $0a, $0a
15e0f     08 06 06 07 
15e13     05 06 06 05 
15e17     06 06 04 04 
15e1b     05 05 06 06 | 	byte	$08, $06, $06, $07, $05, $06, $06, $05, $06, $06, $04, $04, $05, $05, $06, $06
15e1f     08 08 09 09 
15e23     08 07 07 08 
15e27     09 08 08 08 
15e2b     08 06 05 04 | 	byte	$08, $08, $09, $09, $08, $07, $07, $08, $09, $08, $08, $08, $08, $06, $05, $04
15e2f     04 04 06 07 
15e33     08 07 05 04 
15e37     04 05 06 06 
15e3b     06 05 04 04 | 	byte	$04, $04, $06, $07, $08, $07, $05, $04, $04, $05, $06, $06, $06, $05, $04, $04
15e3f     03 04 03 03 
15e43     04 04 04 03 
15e47     03 04 04 04 
15e4b     02 02 00 00 | 	byte	$03, $04, $03, $03, $04, $04, $04, $03, $03, $04, $04, $04, $02, $02, $00, $00
15e4f     FF FE 01 03 
15e53     04 04 04 03 
15e57     02 03 01 01 
15e5b     00 00 01 02 | 	byte	$ff, $fe, $01, $03, $04, $04, $04, $03, $02, $03, $01, $01, $00, $00, $01, $02
15e5f     03 02 03 03 
15e63     04 04 03 02 
15e67     02 03 02 02 
15e6b     00 01 00 00 | 	byte	$03, $02, $03, $03, $04, $04, $03, $02, $02, $03, $02, $02, $00, $01, $00, $00
15e6f     02 01 01 FF 
15e73     FF FF 00 FF 
15e77     FE FC FC FD 
15e7b     FE FF FF 02 | 	byte	$02, $01, $01, $ff, $ff, $ff, $00, $ff, $fe, $fc, $fc, $fd, $fe, $ff, $ff, $02
15e7f     03 02 02 FF 
15e83     FE FF 02 02 
15e87     01 00 02 03 
15e8b     04 02 02 02 | 	byte	$03, $02, $02, $ff, $fe, $ff, $02, $02, $01, $00, $02, $03, $04, $02, $02, $02
15e8f     03 02 02 01 
15e93     02 03 04 05 
15e97     04 01 FF FF 
15e9b     02 03 04 03 | 	byte	$03, $02, $02, $01, $02, $03, $04, $05, $04, $01, $ff, $ff, $02, $03, $04, $03
15e9f     06 05 07 06 
15ea3     08 08 08 08 
15ea7     06 07 06 05 
15eab     04 04 04 04 | 	byte	$06, $05, $07, $06, $08, $08, $08, $08, $06, $07, $06, $05, $04, $04, $04, $04
15eaf     04 04 05 07 
15eb3     08 09 08 07 
15eb7     06 08 09 07 
15ebb     05 06 06 09 | 	byte	$04, $04, $05, $07, $08, $09, $08, $07, $06, $08, $09, $07, $05, $06, $06, $09
15ebf     09 08 07 07 
15ec3     08 07 05 06 
15ec7     08 08 06 04 
15ecb     05 04 06 04 | 	byte	$09, $08, $07, $07, $08, $07, $05, $06, $08, $08, $06, $04, $05, $04, $06, $04
15ecf     03 02 02 02 
15ed3     04 05 06 05 
15ed7     05 07 08 08 
15edb     06 06 07 07 | 	byte	$03, $02, $02, $02, $04, $05, $06, $05, $05, $07, $08, $08, $06, $06, $07, $07
15edf     06 06 04 02 
15ee3     01 00 02 01 
15ee7     03 05 05 06 
15eeb     05 04 03 01 | 	byte	$06, $06, $04, $02, $01, $00, $02, $01, $03, $05, $05, $06, $05, $04, $03, $01
15eef     00 00 00 00 
15ef3     FF FF 02 03 
15ef7     01 00 01 02 
15efb     05 04 05 04 | 	byte	$00, $00, $00, $00, $ff, $ff, $02, $03, $01, $00, $01, $02, $05, $04, $05, $04
15eff     06 05 02 01 
15f03     01 02 02 02 
15f07     02 01 02 01 
15f0b     01 FF FE FD | 	byte	$06, $05, $02, $01, $01, $02, $02, $02, $02, $01, $02, $01, $01, $ff, $fe, $fd
15f0f     FF FE FF FF 
15f13     FF 00 00 01 
15f17     00 FF FE FF 
15f1b     00 01 FF FE | 	byte	$ff, $fe, $ff, $ff, $ff, $00, $00, $01, $00, $ff, $fe, $ff, $00, $01, $ff, $fe
15f1f     FE FF FF FF 
15f23     FE FE FF 00 
15f27     02 02 02 02 
15f2b     02 00 00 01 | 	byte	$fe, $ff, $ff, $ff, $fe, $fe, $ff, $00, $02, $02, $02, $02, $02, $00, $00, $01
15f2f     00 02 02 02 
15f33     02 02 02 01 
15f37     02 02 05 05 
15f3b     07 04 02 02 | 	byte	$00, $02, $02, $02, $02, $02, $02, $01, $02, $02, $05, $05, $07, $04, $02, $02
15f3f     03 03 03 03 
15f43     03          | 	byte	$03[5]
15f44     02 02 02 02 
15f48     02 02       | 	byte	$02[6]
15f4a     03 05 04 05 
15f4e     04 04 04 04 
15f52     05 06 06 06 
15f56     04 04 06 06 | 	byte	$03, $05, $04, $05, $04, $04, $04, $04, $05, $06, $06, $06, $04, $04, $06, $06
15f5a     07 05 06 07 
15f5e     08 08 08 06 
15f62     06 07 06 06 
15f66     06 06 06 06 | 	byte	$07, $05, $06, $07, $08, $08, $08, $06, $06, $07, $06, $06, $06, $06, $06, $06
15f6a     08 08 08 06 
15f6e     07 08 09 08 
15f72     08 07 08 07 
15f76     07 08 0A 0A | 	byte	$08, $08, $08, $06, $07, $08, $09, $08, $08, $07, $08, $07, $07, $08, $0a, $0a
15f7a     0A 08 08 08 
15f7e     08 09 08 08 
15f82     06 06 07 05 
15f86     05 04 03 02 | 	byte	$0a, $08, $08, $08, $08, $09, $08, $08, $06, $06, $07, $05, $05, $04, $03, $02
15f8a     03 04 05 06 
15f8e     05 04 03 05 
15f92     05 04 04 05 
15f96     05 05 04 04 | 	byte	$03, $04, $05, $06, $05, $04, $03, $05, $05, $04, $04, $05, $05, $05, $04, $04
15f9a     03 03 01 02 
15f9e     02 04 04 02 
15fa2     02 01 01 00 
15fa6     01 00 03 04 | 	byte	$03, $03, $01, $02, $02, $04, $04, $02, $02, $01, $01, $00, $01, $00, $03, $04
15faa     04 04 04 04 
15fae     05 03 03 02 
15fb2     02 02 01 01 
15fb6     00 01 00 FF | 	byte	$04, $04, $04, $04, $05, $03, $03, $02, $02, $02, $01, $01, $00, $01, $00, $ff
15fba     01 03 02 01 
15fbe     FF FF 00 03 
15fc2     02 01 03 02 
15fc6     02 00 00 FF | 	byte	$01, $03, $02, $01, $ff, $ff, $00, $03, $02, $01, $03, $02, $02, $00, $00, $ff
15fca     00 01 02 02 
15fce     02 01 01 01 
15fd2     03 02 02 02 
15fd6     03 03 02 01 | 	byte	$00, $01, $02, $02, $02, $01, $01, $01, $03, $02, $02, $02, $03, $03, $02, $01
15fda     01 02 02 01 
15fde     01 02 02 03 
15fe2     03 03 02 02 
15fe6     03 02 02 02 | 	byte	$01, $02, $02, $01, $01, $02, $02, $03, $03, $03, $02, $02, $03, $02, $02, $02
15fea     03 02 02 02 
15fee     03 04 02 03 
15ff2     03 02 04 04 
15ff6     04 05 03 02 | 	byte	$03, $02, $02, $02, $03, $04, $02, $03, $03, $02, $04, $04, $04, $05, $03, $02
15ffa     02 01 02 05 
15ffe     04 05 03 04 
16002     03 05 05 06 
16006     05 03 04 05 | 	byte	$02, $01, $02, $05, $04, $05, $03, $04, $03, $05, $05, $06, $05, $03, $04, $05
1600a     04 04 04 05 
1600e     03 02 03 04 
16012     06 05 06 07 
16016     06 05 06 08 | 	byte	$04, $04, $04, $05, $03, $02, $03, $04, $06, $05, $06, $07, $06, $05, $06, $08
1601a     08 06 04 04 
1601e     07 06 05 04 
16022     05 06 06 05 
16026     06 06 06 07 | 	byte	$08, $06, $04, $04, $07, $06, $05, $04, $05, $06, $06, $05, $06, $06, $06, $07
1602a     06 04 04 04 
1602e     05 04 04 04 
16032     05 03 04 02 
16036     03 04 05 04 | 	byte	$06, $04, $04, $04, $05, $04, $04, $04, $05, $03, $04, $02, $03, $04, $05, $04
1603a     04 02 01 01 
1603e     02 04 05 05 
16042     04 05 05 06 
16046     06 05 06 05 | 	byte	$04, $02, $01, $01, $02, $04, $05, $05, $04, $05, $05, $06, $06, $05, $06, $05
1604a     04 03 05 05 
1604e     06 04 03 01 
16052     01 03 04 04 
16056     03 04 04 04 | 	byte	$04, $03, $05, $05, $06, $04, $03, $01, $01, $03, $04, $04, $03, $04, $04, $04
1605a     04 03 03 04 
1605e     03 01 01 02 
16062     03 03 02 00 
16066     FF 01 02 02 | 	byte	$04, $03, $03, $04, $03, $01, $01, $02, $03, $03, $02, $00, $ff, $01, $02, $02
1606a     01 00 01 00 
1606e     FF FF FE FF 
16072     FF 02 02 03 
16076     02 02 02 03 | 	byte	$01, $00, $01, $00, $ff, $ff, $fe, $ff, $ff, $02, $02, $03, $02, $02, $02, $03
1607a     03 03 04 04 
1607e     03 02 03 04 
16082     03 03 04 04 
16086     03 02 01 02 | 	byte	$03, $03, $04, $04, $03, $02, $03, $04, $03, $03, $04, $04, $03, $02, $01, $02
1608a     04 04 04 03 
1608e     04 04 03 02 
16092     04 02 03 05 
16096     05 02 02 02 | 	byte	$04, $04, $04, $03, $04, $04, $03, $02, $04, $02, $03, $05, $05, $02, $02, $02
1609a     03 05 05 04 
1609e     04 02 03 03 
160a2     02 03 03 02 
160a6     02 02 03 03 | 	byte	$03, $05, $05, $04, $04, $02, $03, $03, $02, $03, $03, $02, $02, $02, $03, $03
160aa     03 03 01 02 
160ae     05 05 04 04 
160b2     05 05 04 02 
160b6     02 03 05 06 | 	byte	$03, $03, $01, $02, $05, $05, $04, $04, $05, $05, $04, $02, $02, $03, $05, $06
160ba     06 05 03 02 
160be     02 04 05 05 
160c2     05 04 05 03 
160c6     04 06 04 06 | 	byte	$06, $05, $03, $02, $02, $04, $05, $05, $05, $04, $05, $03, $04, $06, $04, $06
160ca     06 06 06 04 
160ce     03 03 04 06 
160d2     08 06 06 04 
160d6     03 04 04 07 | 	byte	$06, $06, $06, $04, $03, $03, $04, $06, $08, $06, $06, $04, $03, $04, $04, $07
160da     07 08 08 06 
160de     06 06 06 02 
160e2     03 05 06 07 
160e6     06 04 04 04 | 	byte	$07, $08, $08, $06, $06, $06, $06, $02, $03, $05, $06, $07, $06, $04, $04, $04
160ea     04 04 05 07 
160ee     08 07 06 06 
160f2     05 04 03 02 
160f6     01 02 04 07 | 	byte	$04, $04, $05, $07, $08, $07, $06, $06, $05, $04, $03, $02, $01, $02, $04, $07
160fa     04 04 02 02 
160fe     02 02 03 03 
16102     04 04 03 03 
16106     04 04 02 03 | 	byte	$04, $04, $02, $02, $02, $02, $03, $03, $04, $04, $03, $03, $04, $04, $02, $03
1610a     04 02 02 03 
1610e     03 03 01 01 
16112     01 02 04 04 
16116     03 02 01 01 | 	byte	$04, $02, $02, $03, $03, $03, $01, $01, $01, $02, $04, $04, $03, $02, $01, $01
1611a     01 03 03 04 
1611e     04 03 02 01 
16122     01 01 03 03 
16126     02 03 04 03 | 	byte	$01, $03, $03, $04, $04, $03, $02, $01, $01, $01, $03, $03, $02, $03, $04, $03
1612a     02 02 02 02 
1612e     01 01 01 01 
16132     02 02 02 02 
16136     02 02 02 01 | 	byte	$02, $02, $02, $02, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02, $02, $01
1613a     02 02 01 FF 
1613e     FF 00 FF FF 
16142     FF FF 01 02 
16146     01 02 03 02 | 	byte	$02, $02, $01, $ff, $ff, $00, $ff, $ff, $ff, $ff, $01, $02, $01, $02, $03, $02
1614a     00 FF FF 00 
1614e     02 04 04 04 
16152     03 02 02 02 
16156     04 05 06 07 | 	byte	$00, $ff, $ff, $00, $02, $04, $04, $04, $03, $02, $02, $02, $04, $05, $06, $07
1615a     06 05 03 04 
1615e     04 04 06 06 
16162     05 07 06 05 
16166     05 04 04 03 | 	byte	$06, $05, $03, $04, $04, $04, $06, $06, $05, $07, $06, $05, $05, $04, $04, $03
1616a     04 04 05 05 
1616e     05 02 02 02 
16172     03 04 05 04 
16176     05 06 04 02 | 	byte	$04, $04, $05, $05, $05, $02, $02, $02, $03, $04, $05, $04, $05, $06, $04, $02
1617a     03 03 04 04 
1617e     02 02 02 02 
16182     03 03 02 02 
16186     03 04 04 02 | 	byte	$03, $03, $04, $04, $02, $02, $02, $02, $03, $03, $02, $02, $03, $04, $04, $02
1618a     03 03 03 04 
1618e     04 02 03 03 
16192     04 04 04 04 
16196     04 01 01 01 | 	byte	$03, $03, $03, $04, $04, $02, $03, $03, $04, $04, $04, $04, $04, $01, $01, $01
1619a     04 07 06 05 
1619e     04 03 03 03 
161a2     04 05 06 06 
161a6     06 04 03 03 | 	byte	$04, $07, $06, $05, $04, $03, $03, $03, $04, $05, $06, $06, $06, $04, $03, $03
161aa     04 05 06 08 
161ae     09 09 08 06 
161b2     06 07 08 09 
161b6     09 09 09 07 | 	byte	$04, $05, $06, $08, $09, $09, $08, $06, $06, $07, $08, $09, $09, $09, $09, $07
161ba     07 06 04 04 
161be     04 04 02 00 
161c2     FF FE FE FE 
161c6     FE FF FF FE | 	byte	$07, $06, $04, $04, $04, $04, $02, $00, $ff, $fe, $fe, $fe, $fe, $ff, $ff, $fe
161ca     FD FE FF FF 
161ce     00 00 FF 00 
161d2     01 01 03 03 
161d6     04 04 05 05 | 	byte	$fd, $fe, $ff, $ff, $00, $00, $ff, $00, $01, $01, $03, $03, $04, $04, $05, $05
161da     06 05 06 08 
161de     07 06 05 05 
161e2     04 04 03 02 
161e6     03 04 05 04 | 	byte	$06, $05, $06, $08, $07, $06, $05, $05, $04, $04, $03, $02, $03, $04, $05, $04
161ea     03 01 03 04 
161ee     04 03 04 05 
161f2     04 04 03 02 
161f6     02 04 04 05 | 	byte	$03, $01, $03, $04, $04, $03, $04, $05, $04, $04, $03, $02, $02, $04, $04, $05
161fa     04 01 00 00 
161fe     03 03 06 06 
16202     05 03 03 04 
16206     04 05 05 04 | 	byte	$04, $01, $00, $00, $03, $03, $06, $06, $05, $03, $03, $04, $04, $05, $05, $04
1620a     04 02 02 02 
1620e     03 02 01 01 
16212     00 00 00 00 
16216     01 00 00 FE | 	byte	$04, $02, $02, $02, $03, $02, $01, $01, $00, $00, $00, $00, $01, $00, $00, $fe
1621a     FD FC FF FF 
1621e     FF 00 FE FA 
16222     F8 F8 FA FB 
16226     FB FB FF 05 | 	byte	$fd, $fc, $ff, $ff, $ff, $00, $fe, $fa, $f8, $f8, $fa, $fb, $fb, $fb, $ff, $05
1622a     0E 13 14 12 
1622e     0F 0E 0F 11 
16232     13 13 12 0E 
16236     09 04 00 FD | 	byte	$0e, $13, $14, $12, $0f, $0e, $0f, $11, $13, $13, $12, $0e, $09, $04, $00, $fd
1623a     FA F8 F8 F6 
1623e     F2 EF EC EB 
16242     EE F3 F7 F8 
16246     FA FC FE 03 | 	byte	$fa, $f8, $f8, $f6, $f2, $ef, $ec, $eb, $ee, $f3, $f7, $f8, $fa, $fc, $fe, $03
1624a     07 0B 0E 13 
1624e     16 18 18 17 
16252     15 17 18 18 
16256     17 15 12 10 | 	byte	$07, $0b, $0e, $13, $16, $18, $18, $17, $15, $17, $18, $18, $17, $15, $12, $10
1625a     0D 0A 08 06 
1625e     05 03 04 04 
16262     05 03 02 00 
16266     01 03 06 07 | 	byte	$0d, $0a, $08, $06, $05, $03, $04, $04, $05, $03, $02, $00, $01, $03, $06, $07
1626a     04 01 FD FC 
1626e     FD FD FC FA 
16272     F9 F6 F4 F3 
16276     F2 F4 F4 F4 | 	byte	$04, $01, $fd, $fc, $fd, $fd, $fc, $fa, $f9, $f6, $f4, $f3, $f2, $f4, $f4, $f4
1627a     F5 F5 F4 F4 
1627e     F6 F9 FB FD 
16282     FE FE FF FF 
16286     02 05 05 06 | 	byte	$f5, $f5, $f4, $f4, $f6, $f9, $fb, $fd, $fe, $fe, $ff, $ff, $02, $05, $05, $06
1628a     06 05 05 05 
1628e     06 06 06 06 
16292     06 06 07 06 
16296     06 06 06 06 | 	byte	$06, $05, $05, $05, $06, $06, $06, $06, $06, $06, $07, $06, $06, $06, $06, $06
1629a     04 04 05 04 
1629e     06 06 08 08 
162a2     05 02 01 01 
162a6     01 FF FB FA | 	byte	$04, $04, $05, $04, $06, $06, $08, $08, $05, $02, $01, $01, $01, $ff, $fb, $fa
162aa     F8 F8 F6 F7 
162ae     FF 13 1E 1C 
162b2     17 14 13 19 
162b6     1D 1E 1E 1A | 	byte	$f8, $f8, $f6, $f7, $ff, $13, $1e, $1c, $17, $14, $13, $19, $1d, $1e, $1e, $1a
162ba     14 0C 04 FC 
162be     F8 F7 F4 EE 
162c2     E6 E0 DA D6 
162c6     D7 DA DF E7 | 	byte	$14, $0c, $04, $fc, $f8, $f7, $f4, $ee, $e6, $e0, $da, $d6, $d7, $da, $df, $e7
162ca     EB EE F1 F9 
162ce     FF 0D 16 1C 
162d2     23 29 2D 2E 
162d6     2F 2E 2F 32 | 	byte	$eb, $ee, $f1, $f9, $ff, $0d, $16, $1c, $23, $29, $2d, $2e, $2f, $2e, $2f, $32
162da     31 2D 28 21 
162de     1B 16 11 0C 
162e2     08 04 00 FC 
162e6     F7 F2 F1 F0 | 	byte	$31, $2d, $28, $21, $1b, $16, $11, $0c, $08, $04, $00, $fc, $f7, $f2, $f1, $f0
162ea     F0 F1 F7 FB 
162ee     FF 02 05 06 
162f2     0A 10 16 18 
162f6     16 11 0C 08 | 	byte	$f0, $f1, $f7, $fb, $ff, $02, $05, $06, $0a, $10, $16, $18, $16, $11, $0c, $08
162fa     05 02 00 FC 
162fe     F4 EC E4 E0 
16302     DF E0 E2 E3 
16306     E2 E2 E3 E5 | 	byte	$05, $02, $00, $fc, $f4, $ec, $e4, $e0, $df, $e0, $e2, $e3, $e2, $e2, $e3, $e5
1630a     EB F1 F7 FD 
1630e     FF 00 03 06 
16312     0A 0C 0C 0B 
16316     0A 0C 0C 0B | 	byte	$eb, $f1, $f7, $fd, $ff, $00, $03, $06, $0a, $0c, $0c, $0b, $0a, $0c, $0c, $0b
1631a     0A 08 06 02 
1631e     00 FE FE FE 
16322     FF FF FF 01 
16326     02 04 02 FE | 	byte	$0a, $08, $06, $02, $00, $fe, $fe, $fe, $ff, $ff, $ff, $01, $02, $04, $02, $fe
1632a     F8 F6 F7 FE 
1632e     02 03 04 0B 
16332     17 21 24 20 
16336     18 19 1F 23 | 	byte	$f8, $f6, $f7, $fe, $02, $03, $04, $0b, $17, $21, $24, $20, $18, $19, $1f, $23
1633a     21 1C 14 0C 
1633e     04 FA F0 EB 
16342     E8 E0 D6 CC 
16346     C4 C2 C3 C7 | 	byte	$21, $1c, $14, $0c, $04, $fa, $f0, $eb, $e8, $e0, $d6, $cc, $c4, $c2, $c3, $c7
1634a     CE D4 DB E1 
1634e     E7 F2 FD 0B 
16352     17 22 2A 30 
16356     37 3C 42 43 | 	byte	$ce, $d4, $db, $e1, $e7, $f2, $fd, $0b, $17, $22, $2a, $30, $37, $3c, $42, $43
1635a     42 42 40 3D 
1635e     35 2E 28 22 
16362     1E 18 10 08 
16366     01 FE F8 F4 | 	byte	$42, $42, $40, $3d, $35, $2e, $28, $22, $1e, $18, $10, $08, $01, $fe, $f8, $f4
1636a     F2 F0 F1 F2 
1636e     F3 F4 F6 F8 
16372     FA FF 0A 17 
16376     1D 20 1C 18 | 	byte	$f2, $f0, $f1, $f2, $f3, $f4, $f6, $f8, $fa, $ff, $0a, $17, $1d, $20, $1c, $18
1637a     1A 1C 1D 1B 
1637e     17 11 0C 04 
16382     FC F2 EA E6 
16386     E2 DE D9 D4 | 	byte	$1a, $1c, $1d, $1b, $17, $11, $0c, $04, $fc, $f2, $ea, $e6, $e2, $de, $d9, $d4
1638a     D3 D4 D7 D9 
1638e     DE E4 EA EF 
16392     F4 F7 FA FE 
16396     03 07 09 0C | 	byte	$d3, $d4, $d7, $d9, $de, $e4, $ea, $ef, $f4, $f7, $fa, $fe, $03, $07, $09, $0c
1639a     0E 0D 0C 08 
1639e     06 03 02 02 
163a2     02 02 02 00 
163a6     FE FC FB FA | 	byte	$0e, $0d, $0c, $08, $06, $03, $02, $02, $02, $02, $02, $00, $fe, $fc, $fb, $fa
163aa     FA F8 F4 F6 
163ae     FC 03 08 05 
163b2     00 FF 09 1B 
163b6     27 2A 24 1D | 	byte	$fa, $f8, $f4, $f6, $fc, $03, $08, $05, $00, $ff, $09, $1b, $27, $2a, $24, $1d
163ba     19 1B 1C 1C 
163be     1C 18 10 02 
163c2     F4 E6 E0 DF 
163c6     DC D4 CB C4 | 	byte	$19, $1b, $1c, $1c, $1c, $18, $10, $02, $f4, $e6, $e0, $df, $dc, $d4, $cb, $c4
163ca     BE BD C2 C9 
163ce     D2 DD E5 EB 
163d2     F3 FE 0B 17 
163d6     27 2F 36 3A | 	byte	$be, $bd, $c2, $c9, $d2, $dd, $e5, $eb, $f3, $fe, $0b, $17, $27, $2f, $36, $3a
163da     3F 45 49 49 
163de     47 44 40 3A 
163e2     32 28 22 1A 
163e6     14 0E 04 FE | 	byte	$3f, $45, $49, $49, $47, $44, $40, $3a, $32, $28, $22, $1a, $14, $0e, $04, $fe
163ea     F6 F3 F0 EF 
163ee     EE EF EF F0 
163f2     F2 F5 F8 FF 
163f6     09 15 1C 1C | 	byte	$f6, $f3, $f0, $ef, $ee, $ef, $ef, $f0, $f2, $f5, $f8, $ff, $09, $15, $1c, $1c
163fa     1B 1B 1F 22 
163fe     23 22 20 1A 
16402     14 0C 04 FE 
16406     F9 F5 EE E5 | 	byte	$1b, $1b, $1f, $22, $23, $22, $20, $1a, $14, $0c, $04, $fe, $f9, $f5, $ee, $e5
1640a     E0 D9 D8 D9 
1640e     D9 DC DF E3 
16412     E7 EA EE F3 
16416     F9 FF 02 05 | 	byte	$e0, $d9, $d8, $d9, $d9, $dc, $df, $e3, $e7, $ea, $ee, $f3, $f9, $ff, $02, $05
1641a     06 0A 0C 0C 
1641e     0A 09 08 08 
16422     06 04 00 FE 
16426     FA F9 F6 F4 | 	byte	$06, $0a, $0c, $0c, $0a, $09, $08, $08, $06, $04, $00, $fe, $fa, $f9, $f6, $f4
1642a     F2 EE EA ED 
1642e     F6 FF 06 04 
16432     02 03 0F 23 
16436     2F 31 2C 27 | 	byte	$f2, $ee, $ea, $ed, $f6, $ff, $06, $04, $02, $03, $0f, $23, $2f, $31, $2c, $27
1643a     25 27 28 24 
1643e     20 1A 10 02 
16442     F0 E4 DC D8 
16446     D4 C8 C0 B8 | 	byte	$25, $27, $28, $24, $20, $1a, $10, $02, $f0, $e4, $dc, $d8, $d4, $c8, $c0, $b8
1644a     B5 B6 BB BF 
1644e     C7 CF D9 E3 
16452     EB F7 07 17 
16456     23 2D 33 3B | 	byte	$b5, $b6, $bb, $bf, $c7, $cf, $d9, $e3, $eb, $f7, $07, $17, $23, $2d, $33, $3b
1645a     43 4B 4C 4C 
1645e     4A 48 44 40 
16462     36 2C 25 20 
16466     18 0E 04 FC | 	byte	$43, $4b, $4c, $4c, $4a, $48, $44, $40, $36, $2c, $25, $20, $18, $0e, $04, $fc
1646a     F5 F2 EE E9 
1646e     E6 E6 E7 EA 
16472     F2 FB 05 0C 
16476     0E 12 17 1D | 	byte	$f5, $f2, $ee, $e9, $e6, $e6, $e7, $ea, $f2, $fb, $05, $0c, $0e, $12, $17, $1d
1647a     25 28 2B 29 
1647e     26 20 1C 18 
16482     13 0E 08 00 
16486     F6 EE E8 E3 | 	byte	$25, $28, $2b, $29, $26, $20, $1c, $18, $13, $0e, $08, $00, $f6, $ee, $e8, $e3
1648a     E0 DE DD DC 
1648e     DD DD DE E3 
16492     E9 ED F1 F5 
16496     F9 FE 03 09 | 	byte	$e0, $de, $dd, $dc, $dd, $dd, $de, $e3, $e9, $ed, $f1, $f5, $f9, $fe, $03, $09
1649a     0A 0A 09 09 
1649e     09 08 06 06 
164a2     04 02 FE F6 
164a6     F0 ED EA EF | 	byte	$0a, $0a, $09, $09, $09, $08, $06, $06, $04, $02, $fe, $f6, $f0, $ed, $ea, $ef
164aa     F4 F8 FB F4 
164ae     F3 F7 FF 12 
164b2     1D 20 1C 1A 
164b6     1C 1E 23 24 | 	byte	$f4, $f8, $fb, $f4, $f3, $f7, $ff, $12, $1d, $20, $1c, $1a, $1c, $1e, $23, $24
164ba     22 1D 14 0C 
164be     00 F8 F2 ED 
164c2     E6 DC D0 C8 
164c6     C2 C3 C4 C6 | 	byte	$22, $1d, $14, $0c, $00, $f8, $f2, $ed, $e6, $dc, $d0, $c8, $c2, $c3, $c4, $c6
164ca     CA CE D5 DB 
164ce     E3 EB F7 FF 
164d2     0F 19 21 29 
164d6     32 39 3F 42 | 	byte	$ca, $ce, $d5, $db, $e3, $eb, $f7, $ff, $0f, $19, $21, $29, $32, $39, $3f, $42
164da     42 42 40 3C 
164de     35 30 2B 25 
164e2     20 18 0E 06 
164e6     00 FA F4 F0 | 	byte	$42, $42, $40, $3c, $35, $30, $2b, $25, $20, $18, $0e, $06, $00, $fa, $f4, $f0
164ea     EF F0 F2 F3 
164ee     F2 F3 F8 FD 
164f2     03 08 0D 11 
164f6     15 18 1A 1B | 	byte	$ef, $f0, $f2, $f3, $f2, $f3, $f8, $fd, $03, $08, $0d, $11, $15, $18, $1a, $1b
164fa     1C 1C 1C 19 
164fe     15 10 0C 08 
16502     04 FF F9 F5 
16506     F2 F0 EC EA | 	byte	$1c, $1c, $1c, $19, $15, $10, $0c, $08, $04, $ff, $f9, $f5, $f2, $f0, $ec, $ea
1650a     E8 E9 E9 EB 
1650e     EC ED F1 F5 
16512     F7 FA FD FE 
16516     01 04 06 07 | 	byte	$e8, $e9, $e9, $eb, $ec, $ed, $f1, $f5, $f7, $fa, $fd, $fe, $01, $04, $06, $07
1651a     07 06 04 02 
1651e     00 FC FA F8 
16522     FA FC FC FA 
16526     F8 FD 07 12 | 	byte	$07, $06, $04, $02, $00, $fc, $fa, $f8, $fa, $fc, $fc, $fa, $f8, $fd, $07, $12
1652a     17 15 11 13 
1652e     17 1D 1E 1E 
16532     1C 1A 14 0C 
16536     04 FE FA F8 | 	byte	$17, $15, $11, $13, $17, $1d, $1e, $1e, $1c, $1a, $14, $0c, $04, $fe, $fa, $f8
1653a     F0 E5 DA D4 
1653e     D2 D0 D0 CF 
16542     D0 D3 D9 DD 
16546     E3 EB F6 FF | 	byte	$f0, $e5, $da, $d4, $d2, $d0, $d0, $cf, $d0, $d3, $d9, $dd, $e3, $eb, $f6, $ff
1654a     0A 11 16 1D 
1654e     27 2F 32 33 
16552     33 35 35 33 
16556     30 2A 26 22 | 	byte	$0a, $11, $16, $1d, $27, $2f, $32, $33, $33, $35, $35, $33, $30, $2a, $26, $22
1655a     1B 12 0C 08 
1655e     08 04 00 F8 
16562     F2 F2 F3 F5 
16566     F6 F8 FB FD | 	byte	$1b, $12, $0c, $08, $08, $04, $00, $f8, $f2, $f2, $f3, $f5, $f6, $f8, $fb, $fd
1656a     FF 02 05 09 
1656e     0D 11 13 10 
16572     12 13 14 14 
16576     12 10 0D 0A | 	byte	$ff, $02, $05, $09, $0d, $11, $13, $10, $12, $13, $14, $14, $12, $10, $0d, $0a
1657a     06 02 00 FE 
1657e     FA F8 F5 F2 
16582     F1 F1 F2 F2 
16586     F2 F1 F3 F5 | 	byte	$06, $02, $00, $fe, $fa, $f8, $f5, $f2, $f1, $f1, $f2, $f2, $f2, $f1, $f3, $f5
1658a     F8 F9 FA FA 
1658e     FC FD FC F9 
16592     F8 FB FF 03 
16596     04 02 05 0D | 	byte	$f8, $f9, $fa, $fa, $fc, $fd, $fc, $f9, $f8, $fb, $ff, $03, $04, $02, $05, $0d
1659a     15 18 14 13 
1659e     14 1A 1C 1A 
165a2     15 10 0E 0A 
165a6     04 FC F6 F2 | 	byte	$15, $18, $14, $13, $14, $1a, $1c, $1a, $15, $10, $0e, $0a, $04, $fc, $f6, $f2
165aa     F0 E8 E0 D6 
165ae     D2 D3 D5 D5 
165b2     D4 D5 D9 DF 
165b6     E4 E9 EE F5 | 	byte	$f0, $e8, $e0, $d6, $d2, $d3, $d5, $d5, $d4, $d5, $d9, $df, $e4, $e9, $ee, $f5
165ba     FD 04 0A 0D 
165be     12 19 1F 22 
165c2     23 23 23 22 
165c6     22 22 21 21 | 	byte	$fd, $04, $0a, $0d, $12, $19, $1f, $22, $23, $23, $23, $22, $22, $22, $21, $21
165ca     20 1A 12 0C 
165ce     0A 0A 0A 08 
165d2     03 FD FA FA 
165d6     FA FA FC FE | 	byte	$20, $1a, $12, $0c, $0a, $0a, $0a, $08, $03, $fd, $fa, $fa, $fa, $fa, $fc, $fe
165da     FF FF FE FF 
165de     03 08 0C 0E 
165e2     0D 0C 0C 0E 
165e6     0E 0E 0E 0E | 	byte	$ff, $ff, $fe, $ff, $03, $08, $0c, $0e, $0d, $0c, $0c, $0e, $0e, $0e, $0e, $0e
165ea     0D 0B 08 05 
165ee     02 02 02 01 
165f2     FF FC FB F8 
165f6     F8 F7 F5 F3 | 	byte	$0d, $0b, $08, $05, $02, $02, $02, $01, $ff, $fc, $fb, $f8, $f8, $f7, $f5, $f3
165fa     F0 F0 F3 F9 
165fe     FF 07 0F 12 
16602     10 10 12 19 
16606     1F 25 25 21 | 	byte	$f0, $f0, $f3, $f9, $ff, $07, $0f, $12, $10, $10, $12, $19, $1f, $25, $25, $21
1660a     1C 18 15 13 
1660e     10 0A 02 F8 
16612     F0 E2 D8 D4 
16616     D0 CE CA C8 | 	byte	$1c, $18, $15, $13, $10, $0a, $02, $f8, $f0, $e2, $d8, $d4, $d0, $ce, $ca, $c8
1661a     C4 C7 CB D3 
1661e     DB E3 ED F5 
16622     FD 05 0D 16 
16626     1F 27 2A 2B | 	byte	$c4, $c7, $cb, $d3, $db, $e3, $ed, $f5, $fd, $05, $0d, $16, $1f, $27, $2a, $2b
1662a     2E 31 36 37 
1662e     34 2C 24 20 
16632     1D 18 14 0C 
16636     06 00 F8 F2 | 	byte	$2e, $31, $36, $37, $34, $2c, $24, $20, $1d, $18, $14, $0c, $06, $00, $f8, $f2
1663a     EE EE EF F3 
1663e     F2 F1 F1 F4 
16642     FA FF 04 08 
16646     0B 0E 12 14 | 	byte	$ee, $ee, $ef, $f3, $f2, $f1, $f1, $f4, $fa, $ff, $04, $08, $0b, $0e, $12, $14
1664a     14 15 17 17 
1664e     15 10 0C 0B 
16652     0C 0C 06 00 
16656     FC FB FB FA | 	byte	$14, $15, $17, $17, $15, $10, $0c, $0b, $0c, $0c, $06, $00, $fc, $fb, $fb, $fa
1665a     F6 F2 EF ED 
1665e     EF F5 FF 0F 
16662     17 16 12 10 
16666     15 1E 29 2E | 	byte	$f6, $f2, $ef, $ed, $ef, $f5, $ff, $0f, $17, $16, $12, $10, $15, $1e, $29, $2e
1666a     2C 25 20 18 
1666e     14 10 0E 08 
16672     00 F4 E2 D4 
16676     CD CB C9 C6 | 	byte	$2c, $25, $20, $18, $14, $10, $0e, $08, $00, $f4, $e2, $d4, $cd, $cb, $c9, $c6
1667a     C1 BC BB BD 
1667e     C3 CB D3 DC 
16682     E5 ED F5 FC 
16686     06 0E 16 1B | 	byte	$c1, $bc, $bb, $bd, $c3, $cb, $d3, $dc, $e5, $ed, $f5, $fc, $06, $0e, $16, $1b
1668a     1E 21 24 2B 
1668e     2F 30 2A 24 
16692     20 20 1E 1A 
16696     14 0C 06 02 | 	byte	$1e, $21, $24, $2b, $2f, $30, $2a, $24, $20, $20, $1e, $1a, $14, $0c, $06, $02
1669a     FF FD FC FD 
1669e     FE FC F8 F6 
166a2     F9 FE 05 09 
166a6     0B 0C 0D 0E | 	byte	$ff, $fd, $fc, $fd, $fe, $fc, $f8, $f6, $f9, $fe, $05, $09, $0b, $0c, $0d, $0e
166aa     12 13 15 16 
166ae     15 11 0D 0A 
166b2     0A 0B 0A 04 
166b6     FC F5 F3 F4 | 	byte	$12, $13, $15, $16, $15, $11, $0d, $0a, $0a, $0b, $0a, $04, $fc, $f5, $f3, $f4
166ba     F3 EE EA E4 
166be     E5 ED FF 0F 
166c2     1F 20 20 1D 
166c6     23 2D 37 38 | 	byte	$f3, $ee, $ea, $e4, $e5, $ed, $ff, $0f, $1f, $20, $20, $1d, $23, $2d, $37, $38
166ca     34 2A 20 14 
166ce     0A 02 FC F6 
166d2     EE E0 D4 C6 
166d6     C0 BF C4 C9 | 	byte	$34, $2a, $20, $14, $0a, $02, $fc, $f6, $ee, $e0, $d4, $c6, $c0, $bf, $c4, $c9
166da     CD CF D6 DD 
166de     E5 EE F7 FF 
166e2     05 0A 0B 0D 
166e6     0E 10 10 11 | 	byte	$cd, $cf, $d6, $dd, $e5, $ee, $f7, $ff, $05, $0a, $0b, $0d, $0e, $10, $10, $11
166ea     13 14 10 0B 
166ee     04 02 02 00 
166f2     FB F6 F2 F3 
166f6     F6 F8 FC FF | 	byte	$13, $14, $10, $0b, $04, $02, $02, $00, $fb, $f6, $f2, $f3, $f6, $f8, $fc, $ff
166fa     07 0D 12 16 
166fe     1B 22 28 2C 
16702     2D 2D 2C 2A 
16706     28 24 20 18 | 	byte	$07, $0d, $12, $16, $1b, $22, $28, $2c, $2d, $2d, $2c, $2a, $28, $24, $20, $18
1670a     10 08 02 FB 
1670e     F8 F8 F4 F1 
16712     EE EE F1 F6 
16716     FA FC FF FF | 	byte	$10, $08, $02, $fb, $f8, $f8, $f4, $f1, $ee, $ee, $f1, $f6, $fa, $fc, $ff, $ff
1671a     01 01 05 0F 
1671e     1F 2D 30 28 
16722     20 1E 21 24 
16726     23 1E 14 0A | 	byte	$01, $01, $05, $0f, $1f, $2d, $30, $28, $20, $1e, $21, $24, $23, $1e, $14, $0a
1672a     00 F8 F0 EA 
1672e     E6 E3 DE D8 
16732     D0 CC CC D1 
16736     D9 DF E3 E9 | 	byte	$00, $f8, $f0, $ea, $e6, $e3, $de, $d8, $d0, $cc, $cc, $d1, $d9, $df, $e3, $e9
1673a     EF F4 FA FE 
1673e     01 04 04 06 
16742     0B 0F 11 0D 
16746     06 00 FB F9 | 	byte	$ef, $f4, $fa, $fe, $01, $04, $04, $06, $0b, $0f, $11, $0d, $06, $00, $fb, $f9
1674a     FA FA F6 F2 
1674e     ED EB EA ED 
16752     F3 FB 02 07 
16756     09 0B 0F 15 | 	byte	$fa, $fa, $f6, $f2, $ed, $eb, $ea, $ed, $f3, $fb, $02, $07, $09, $0b, $0f, $15
1675a     1D 23 29 2B 
1675e     2C 2C 2B 29 
16762     26 22 1E 1A 
16766     18 14 10 09 | 	byte	$1d, $23, $29, $2b, $2c, $2c, $2b, $29, $26, $22, $1e, $1a, $18, $14, $10, $09
1676a     02 FC FB FB 
1676e     FA F9 F9 F9 
16772     F9 F8 F7 F7 
16776     FB 05 13 1D | 	byte	$02, $fc, $fb, $fb, $fa, $f9, $f9, $f9, $f9, $f8, $f7, $f7, $fb, $05, $13, $1d
1677a     1F 1C 18 18 
1677e     1D 22 24 21 
16782     1C 14 0D 06 
16786     00 F8 F3 F0 | 	byte	$1f, $1c, $18, $18, $1d, $22, $24, $21, $1c, $14, $0d, $06, $00, $f8, $f3, $f0
1678a     EB E4 DC D2 
1678e     D0 D0 D3 D5 
16792     D7 D8 DB DF 
16796     E5 EB F3 F7 | 	byte	$eb, $e4, $dc, $d2, $d0, $d0, $d3, $d5, $d7, $d8, $db, $df, $e5, $eb, $f3, $f7
1679a     F9 F9 FA FC 
1679e     FF 04 06 05 
167a2     04 03 03 03 
167a6     04 04 04 07 | 	byte	$f9, $f9, $fa, $fc, $ff, $04, $06, $05, $04, $03, $03, $03, $04, $04, $04, $07
167aa     06 07 06 08 
167ae     0A 0E 12 13 
167b2     14 13 14 14 
167b6     15 15 14 14 | 	byte	$06, $07, $06, $08, $0a, $0e, $12, $13, $14, $13, $14, $14, $15, $15, $14, $14
167ba     13 11 11 12 
167be     13 11 10 0C 
167c2     0D 0E 10 11 
167c6     10 0C 08 06 | 	byte	$13, $11, $11, $12, $13, $11, $10, $0c, $0d, $0e, $10, $11, $10, $0c, $08, $06
167ca     05 04 03 04 
167ce     05 05 04 06 
167d2     08 0B 10 15 
167d6     1B 21 10 D0 | 	byte	$05, $04, $03, $04, $05, $05, $04, $06, $08, $0b, $10, $15, $1b, $21, $10, $d0
167da     9B B7 EF 1F 
167de     39 3D 3B 57 
167e2     6C 50 00 B0 
167e6     80 81 8B AF | 	byte	$9b, $b7, $ef, $1f, $39, $3d, $3b, $57, $6c, $50, $00, $b0, $80, $81, $8b, $af
167ea     FF 35 40 20 
167ee     F4 D0 AC B3 
167f2     D7 F3 ED FF 
167f6     3F 4C 34 20 | 	byte	$ff, $35, $40, $20, $f4, $d0, $ac, $b3, $d7, $f3, $ed, $ff, $3f, $4c, $34, $20
167fa     00 C0 80 8B 
167fe     BF FF 4F 71 
16802     50 18 0F 10 
16806     F0 C4 CF FF | 	byte	$00, $c0, $80, $8b, $bf, $ff, $4f, $71, $50, $18, $0f, $10, $f0, $c4, $cf, $ff
1680a     2F 44 34 2C 
1680e     18 F0 C0 BF 
16812     DB EB FF 3F 
16816     60 40 1A 1E | 	byte	$2f, $44, $34, $2c, $18, $f0, $c0, $bf, $db, $eb, $ff, $3f, $60, $40, $1a, $1e
1681a     20 04 FF 2F 
1681e     3A 26 22 22 
16822     1C 08 00 F8 
16826     E8 DD E3 E0 | 	byte	$20, $04, $ff, $2f, $3a, $26, $22, $22, $1c, $08, $00, $f8, $e8, $dd, $e3, $e0
1682a     C8 C7 DF EF 
1682e     F2 FB 13 27 
16832     35 39 32 2E 
16836     2A 20 12 1B | 	byte	$c8, $c7, $df, $ef, $f2, $fb, $13, $27, $35, $39, $32, $2e, $2a, $20, $12, $1b
1683a     22 10 F0 D2 
1683e     C0 BF CB D5 
16842     DF FB 0D 0F 
16846     17 18 08 FC | 	byte	$22, $10, $f0, $d2, $c0, $bf, $cb, $d5, $df, $fb, $0d, $0f, $17, $18, $08, $fc
1684a     FF 00 F4 FB 
1684e     0A 0C 00 F1 
16852     EE E2 DA DF 
16856     EF 03 06 00 | 	byte	$ff, $00, $f4, $fb, $0a, $0c, $00, $f1, $ee, $e2, $da, $df, $ef, $03, $06, $00
1685a     FA FB F9 FE 
1685e     09 17 26 2F 
16862     3B 38 24 14 
16866     0E 0A 00 FD | 	byte	$fa, $fb, $f9, $fe, $09, $17, $26, $2f, $3b, $38, $24, $14, $0e, $0a, $00, $fd
1686a     F8 F4 EC E7 
1686e     E9 E6 E6 EF 
16872     FF 0E 0F 13 
16876     19 1A 18 17 | 	byte	$f8, $f4, $ec, $e7, $e9, $e6, $e6, $ef, $ff, $0e, $0f, $13, $19, $1a, $18, $17
1687a     10 0C 0D 0D 
1687e     09 08 0C 0A 
16882     02 F8 F0 F0 
16886     F3 F5 F6 FB | 	byte	$10, $0c, $0d, $0d, $09, $08, $0c, $0a, $02, $f8, $f0, $f0, $f3, $f5, $f6, $fb
1688a     FA F1 F1 FA 
1688e     01 03 09 0E 
16892     0C 08 08 08 
16896     00 F9 FA F4 | 	byte	$fa, $f1, $f1, $fa, $01, $03, $09, $0e, $0c, $08, $08, $08, $00, $f9, $fa, $f4
1689a     EE ED F5 FA 
1689e     FD FF FC F8 
168a2     F6 F9 FF 03 
168a6     0D 14 16 10 | 	byte	$ee, $ed, $f5, $fa, $fd, $ff, $fc, $f8, $f6, $f9, $ff, $03, $0d, $14, $16, $10
168aa     08 05 05 02 
168ae     FC F5 F5 F8 
168b2     FF 09 10 16 
168b6     1A 1D 1C 19 | 	byte	$08, $05, $05, $02, $fc, $f5, $f5, $f8, $ff, $09, $10, $16, $1a, $1d, $1c, $19
168ba     18 1A 18 10 
168be     08 09 0D 0C 
168c2     0A 0B 0E 06 
168c6     F8 F0 ED E8 | 	byte	$18, $1a, $18, $10, $08, $09, $0d, $0c, $0a, $0b, $0e, $06, $f8, $f0, $ed, $e8
168ca     E9 EE F7 FE 
168ce     03 04 02 FC 
168d2     FB FE FF 07 
168d6     11 16 10 05 | 	byte	$e9, $ee, $f7, $fe, $03, $04, $02, $fc, $fb, $fe, $ff, $07, $11, $16, $10, $05
168da     00 FC F4 F0 
168de     F3 FB 03 05 
168e2     04 02 FF F8 
168e6     F0 EF F4 FF | 	byte	$00, $fc, $f4, $f0, $f3, $fb, $03, $05, $04, $02, $ff, $f8, $f0, $ef, $f4, $ff
168ea     0F 1B 1C 14 
168ee     10 0A 01 F9 
168f2     F3 F5 FA FF 
168f6     09 0F 13 18 | 	byte	$0f, $1b, $1c, $14, $10, $0a, $01, $f9, $f3, $f5, $fa, $ff, $09, $0f, $13, $18
168fa     11 04 F8 F7 
168fe     FA FA FB FF 
16902     06 08 08 0A 
16906     0B 0A 06 04 | 	byte	$11, $04, $f8, $f7, $fa, $fa, $fb, $ff, $06, $08, $08, $0a, $0b, $0a, $06, $04
1690a     04 0A 11 16 
1690e     17 12 12 14 
16912     16 10 0D 0E 
16916     0D 0A 06 04 | 	byte	$04, $0a, $11, $16, $17, $12, $12, $14, $16, $10, $0d, $0e, $0d, $0a, $06, $04
1691a     02 00 FD F8 
1691e     F4 F6 FA FA 
16922     F1 EF F5 F7 
16926     F0 ED F5 FF | 	byte	$02, $00, $fd, $f8, $f4, $f6, $fa, $fa, $f1, $ef, $f5, $f7, $f0, $ed, $f5, $ff
1692a     FF FE 01 04 
1692e     00 FD FD FD 
16932     F8 F9 FF 04 
16936     02 02 05 06 | 	byte	$ff, $fe, $01, $04, $00, $fd, $fd, $fd, $f8, $f9, $ff, $04, $02, $02, $05, $06
1693a     05 06 09 0A 
1693e     09 05 FE F6 
16942     F5 FA FE 03 
16946     0B 12 10 08 | 	byte	$05, $06, $09, $0a, $09, $05, $fe, $f6, $f5, $fa, $fe, $03, $0b, $12, $10, $08
1694a     04 07 07 06 
1694e     09 0D 0E 0C 
16952     0C 0D 08 FC 
16956     F7 FA FD FF | 	byte	$04, $07, $07, $06, $09, $0d, $0e, $0c, $0c, $0d, $08, $fc, $f7, $fa, $fd, $ff
1695a     05 09 06 04 
1695e     04 05 06 07 
16962     0B 0E 10 14 
16966     14 10 06 FD | 	byte	$05, $09, $06, $04, $04, $05, $06, $07, $0b, $0e, $10, $14, $14, $10, $06, $fd
1696a     F8 F8 FB FF 
1696e     03 06 04 02 
16972     04 09 0C 08 
16976     04 02 02 00 | 	byte	$f8, $f8, $fb, $ff, $03, $06, $04, $02, $04, $09, $0c, $08, $04, $02, $02, $00
1697a     FF FF 01 00 
1697e     02 01 FC F9 
16982     F8 F4 F2 F0 
16986     F1 F6 FE 03 | 	byte	$ff, $ff, $01, $00, $02, $01, $fc, $f9, $f8, $f4, $f2, $f0, $f1, $f6, $fe, $03
1698a     07 0A 08 02 
1698e     02 07 0C 0D 
16992     0C 0B 08 02 
16996     FF FF FE F8 | 	byte	$07, $0a, $08, $02, $02, $07, $0c, $0d, $0c, $0b, $08, $02, $ff, $ff, $fe, $f8
1699a     F0 F1 F9 FE 
1699e     03 0A 0F 10 
169a2     0D 0C 0D 0F 
169a6     10 12 0E 0C | 	byte	$f0, $f1, $f9, $fe, $03, $0a, $0f, $10, $0d, $0c, $0d, $0f, $10, $12, $0e, $0c
169aa     0D 0D 0A 06 
169ae     01 FD FD FF 
169b2     04 09 0D 10 
169b6     0C 08 03 06 | 	byte	$0d, $0d, $0a, $06, $01, $fd, $fd, $ff, $04, $09, $0d, $10, $0c, $08, $03, $06
169ba     0A 0D 0A 0A 
169be     0A 0D 0D 06 
169c2     FA F2 EF EC 
169c6     EC F3 FD 05 | 	byte	$0a, $0d, $0a, $0a, $0a, $0d, $0d, $06, $fa, $f2, $ef, $ec, $ec, $f3, $fd, $05
169ca     04 01 FD F8 
169ce     F6 F7 F7 FB 
169d2     FF 09 10 0E 
169d6     0A 02 FA F2 | 	byte	$04, $01, $fd, $f8, $f6, $f7, $f7, $fb, $ff, $09, $10, $0e, $0a, $02, $fa, $f2
169da     F2 F5 FA FF 
169de     00 FD F8 F4 
169e2     F3 F3 F5 FA 
169e6     FF 07 0E 15 | 	byte	$f2, $f5, $fa, $ff, $00, $fd, $f8, $f4, $f3, $f3, $f5, $fa, $ff, $07, $0e, $15
169ea     15 12 09 00 
169ee     F9 FB FF 03 
169f2     07 0A 0C 08 
169f6     03 FF FD FE | 	byte	$15, $12, $09, $00, $f9, $fb, $ff, $03, $07, $0a, $0c, $08, $03, $ff, $fd, $fe
169fa     FE FF 05 0B 
169fe     10 14 14 16 
16a02     14 10 09 04 
16a06     06 0A 06 00 | 	byte	$fe, $ff, $05, $0b, $10, $14, $14, $16, $14, $10, $09, $04, $06, $0a, $06, $00
16a0a     FD FF 02 02 
16a0e     02 04 04 03 
16a12     00 FF 01 05 
16a16     08 0A 0B 0A | 	byte	$fd, $ff, $02, $02, $02, $04, $04, $03, $00, $ff, $01, $05, $08, $0a, $0b, $0a
16a1a     0A 06 02 00 
16a1e     FC FA FE FB 
16a22     F8 F8 FB FD 
16a26     FC FA F9 F8 | 	byte	$0a, $06, $02, $00, $fc, $fa, $fe, $fb, $f8, $f8, $fb, $fd, $fc, $fa, $f9, $f8
16a2a     FC FF 02 03 
16a2e     04 07 08 08 
16a32     0B 0C 09 06 
16a36     07 05 02 02 | 	byte	$fc, $ff, $02, $03, $04, $07, $08, $08, $0b, $0c, $09, $06, $07, $05, $02, $02
16a3a     01 00 FB FA 
16a3e     FA F6 F8 FB 
16a42     FF 01 00 FF 
16a46     01 05 06 04 | 	byte	$01, $00, $fb, $fa, $fa, $f6, $f8, $fb, $ff, $01, $00, $ff, $01, $05, $06, $04
16a4a     03 06 0A 0C 
16a4e     0C 0C 0A 08 
16a52     05 06 08 07 
16a56     06 0A 0C 0C | 	byte	$03, $06, $0a, $0c, $0c, $0c, $0a, $08, $05, $06, $08, $07, $06, $0a, $0c, $0c
16a5a     09 08 0A 0B 
16a5e     08 04 05 09 
16a62     0E 0F 0D 0D 
16a66     0B 0A 06 06 | 	byte	$09, $08, $0a, $0b, $08, $04, $05, $09, $0e, $0f, $0d, $0d, $0b, $0a, $06, $06
16a6a     06 06 02 FD 
16a6e     FB FB FC FE 
16a72     FE FD FC FD 
16a76     FD FD FE 01 | 	byte	$06, $06, $02, $fd, $fb, $fb, $fc, $fe, $fe, $fd, $fc, $fd, $fd, $fd, $fe, $01
16a7a     03 03 03 05 
16a7e     07 08 06 02 
16a82     00 FD FC FE 
16a86     01 02 00 FF | 	byte	$03, $03, $03, $05, $07, $08, $06, $02, $00, $fd, $fc, $fe, $01, $02, $00, $ff
16a8a     FE FD FC FF 
16a8e     FE FE FF 04 
16a92     05 07 09 0A 
16a96     05 02 05 08 | 	byte	$fe, $fd, $fc, $ff, $fe, $fe, $ff, $04, $05, $07, $09, $0a, $05, $02, $05, $08
16a9a     05 01 FF FD 
16a9e     FC FE FF 02 
16aa2     04 06 07 0A 
16aa6     0A 09 09 0B | 	byte	$05, $01, $ff, $fd, $fc, $fe, $ff, $02, $04, $06, $07, $0a, $0a, $09, $09, $0b
16aaa     0B 08 06 08 
16aae     06 05 03 01 
16ab2     FE FA FA FA 
16ab6     FB FD FF FE | 	byte	$0b, $08, $06, $08, $06, $05, $03, $01, $fe, $fa, $fa, $fa, $fb, $fd, $ff, $fe
16aba     FF 01 06 0A 
16abe     09 0A 0A 0B 
16ac2     0A 0B 0C 08 
16ac6     07 04 04 01 | 	byte	$ff, $01, $06, $0a, $09, $0a, $0a, $0b, $0a, $0b, $0c, $08, $07, $04, $04, $01
16aca     FF 02 04 05 
16ace     03 03 04 04 
16ad2     01 FF FD FE 
16ad6     FF 04 06 06 | 	byte	$ff, $02, $04, $05, $03, $03, $04, $04, $01, $ff, $fd, $fe, $ff, $04, $06, $06
16ada     07 07 04 00 
16ade     FB FD FE FF 
16ae2     FF 04 08 08 
16ae6     05 03 02 05 | 	byte	$07, $07, $04, $00, $fb, $fd, $fe, $ff, $ff, $04, $08, $08, $05, $03, $02, $05
16aea     04 05 08 0B 
16aee     0A 04 00 FF 
16af2     FE FC FA F9 
16af6     FE 02 06 04 | 	byte	$04, $05, $08, $0b, $0a, $04, $00, $ff, $fe, $fc, $fa, $f9, $fe, $02, $06, $04
16afa     FE FA FA FA 
16afe     FE 02 06 09 
16b02     0B 0A 08 06 
16b06     04 00 FC FD | 	byte	$fe, $fa, $fa, $fa, $fe, $02, $06, $09, $0b, $0a, $08, $06, $04, $00, $fc, $fd
16b0a     FF 03 06 07 
16b0e     08 04 00 FF 
16b12     FA F9 FA FF 
16b16     04 06 0A 0C | 	byte	$ff, $03, $06, $07, $08, $04, $00, $ff, $fa, $f9, $fa, $ff, $04, $06, $0a, $0c
16b1a     0C 08 05 02 
16b1e     FE FD FE 01 
16b22     05 06 08 08 
16b26     06 01 FF FE | 	byte	$0c, $08, $05, $02, $fe, $fd, $fe, $01, $05, $06, $08, $08, $06, $01, $ff, $fe
16b2a     FD 02 06 08 
16b2e     08 05 07 06 
16b32     03 00 FF 01 
16b36     03 06 08 07 | 	byte	$fd, $02, $06, $08, $08, $05, $07, $06, $03, $00, $ff, $01, $03, $06, $08, $07
16b3a     06 04 02 02 
16b3e     01 FF 00 03 
16b42     04 06 06 06 
16b46     04 00 00 FF | 	byte	$06, $04, $02, $02, $01, $ff, $00, $03, $04, $06, $06, $06, $04, $00, $00, $ff
16b4a     FE FF 01 04 
16b4e     04 04 04 02 
16b52     02 00 FE FF 
16b56     FE FF 02 03 | 	byte	$fe, $ff, $01, $04, $04, $04, $04, $02, $02, $00, $fe, $ff, $fe, $ff, $02, $03
16b5a     05 04 04 02 
16b5e     00 01 04 05 
16b62     07 08 08 08 
16b66     06 04 03 FE | 	byte	$05, $04, $04, $02, $00, $01, $04, $05, $07, $08, $08, $08, $06, $04, $03, $fe
16b6a     FD FF 02 04 
16b6e     07 09 09 08 
16b72     07 06 06 06 
16b76     06 06 08 0C | 	byte	$fd, $ff, $02, $04, $07, $09, $09, $08, $07, $06, $06, $06, $06, $06, $08, $0c
16b7a     0C 0A 08 04 
16b7e     00 FE FC FE 
16b82     01 02 02 02 
16b86     00 01 01 FD | 	byte	$0c, $0a, $08, $04, $00, $fe, $fc, $fe, $01, $02, $02, $02, $00, $01, $01, $fd
16b8a     FD 00 02 06 
16b8e     06 08 08 06 
16b92     03 00 FE FE 
16b96     FF 04 06 09 | 	byte	$fd, $00, $02, $06, $06, $08, $08, $06, $03, $00, $fe, $fe, $ff, $04, $06, $09
16b9a     0A 07 07 02 
16b9e     00 FE FB FF 
16ba2     FE FF 02 02 
16ba6     03 01 01 02 | 	byte	$0a, $07, $07, $02, $00, $fe, $fb, $ff, $fe, $ff, $02, $02, $03, $01, $01, $02
16baa     02 04 04 07 
16bae     06 09 08 05 
16bb2     04 04 05 05 
16bb6     06 08 08 06 | 	byte	$02, $04, $04, $07, $06, $09, $08, $05, $04, $04, $05, $05, $06, $08, $08, $06
16bba     04 02 02 02 
16bbe     03 04 05 07 
16bc2     08 0A 09 06 
16bc6     05 05 05 04 | 	byte	$04, $02, $02, $02, $03, $04, $05, $07, $08, $0a, $09, $06, $05, $05, $05, $04
16bca     06 08 09 07 
16bce     06 04 02 FF 
16bd2     FE FF 02 06 
16bd6     06 08 06 06 | 	byte	$06, $08, $09, $07, $06, $04, $02, $ff, $fe, $ff, $02, $06, $06, $08, $06, $06
16bda     08 04 03 04 
16bde     05 06 08 06 
16be2     06 04 00 FE 
16be6     FE FC FD 02 | 	byte	$08, $04, $03, $04, $05, $06, $08, $06, $06, $04, $00, $fe, $fe, $fc, $fd, $02
16bea     05 08 08 06 
16bee     08 06 04 01 
16bf2     02 01 04 06 
16bf6     07 08 07 05 | 	byte	$05, $08, $08, $06, $08, $06, $04, $01, $02, $01, $04, $06, $07, $08, $07, $05
16bfa     02 FE FE FC 
16bfe     FB FB FE 01 
16c02     04 04 06 06 
16c06     04 02 02 01 | 	byte	$02, $fe, $fe, $fc, $fb, $fb, $fe, $01, $04, $04, $06, $06, $04, $02, $02, $01
16c0a     02 03 05 05 
16c0e     04 06 06 05 
16c12     03 00 FF FE 
16c16     FD FE FF FF | 	byte	$02, $03, $05, $05, $04, $06, $06, $05, $03, $00, $ff, $fe, $fd, $fe, $ff, $ff
16c1a     03 05 06 06 
16c1e     07 05 06 06 
16c22     04 05 04 06 
16c26     06 06 05 05 | 	byte	$03, $05, $06, $06, $07, $05, $06, $06, $04, $05, $04, $06, $06, $06, $05, $05
16c2a     04 02 02 00 
16c2e     00 02 01 01 
16c32     FE FF 02 02 
16c36     04 04 05 06 | 	byte	$04, $02, $02, $00, $00, $02, $01, $01, $fe, $ff, $02, $02, $04, $04, $05, $06
16c3a     06 05 05 06 
16c3e     04 01 03 06 
16c42     07 05 05 05 
16c46     04 02 00 FF | 	byte	$06, $05, $05, $06, $04, $01, $03, $06, $07, $05, $05, $05, $04, $02, $00, $ff
16c4a     FD FD FF 03 
16c4e     06 06 06 05 
16c52     02 02 02 03 
16c56     04 04 02 02 | 	byte	$fd, $fd, $ff, $03, $06, $06, $06, $05, $02, $02, $02, $03, $04, $04, $02, $02
16c5a     00 FF FE FD 
16c5e     FE FE FE FE 
16c62     01 05 05 03 
16c66     00 FF 02 06 | 	byte	$00, $ff, $fe, $fd, $fe, $fe, $fe, $fe, $01, $05, $05, $03, $00, $ff, $02, $06
16c6a     08 08 0B 0A 
16c6e     09 07 06 04 
16c72     04 02 FF FC 
16c76     FD FF 00 00 | 	byte	$08, $08, $0b, $0a, $09, $07, $06, $04, $04, $02, $ff, $fc, $fd, $ff, $00, $00
16c7a     FF 02 04 00 
16c7e     FF 03 08 06 
16c82     02 04 08 08 
16c86     07 08 08 06 | 	byte	$ff, $02, $04, $00, $ff, $03, $08, $06, $02, $04, $08, $08, $07, $08, $08, $06
16c8a     03 02 00 00 
16c8e     FF FF FF 01 
16c92     02 03 04 04 
16c96     05 05 05 06 | 	byte	$03, $02, $00, $00, $ff, $ff, $ff, $01, $02, $03, $04, $04, $05, $05, $05, $06
16c9a     07 06 05 04 
16c9e     04 04 04 04 
16ca2     06 06 04 00 
16ca6     FF FF 00 01 | 	byte	$07, $06, $05, $04, $04, $04, $04, $04, $06, $06, $04, $00, $ff, $ff, $00, $01
16caa     01 02 06 08 
16cae     08 07 06 04 
16cb2     00 FE FE 01 
16cb6     05 04 03 04 | 	byte	$01, $02, $06, $08, $08, $07, $06, $04, $00, $fe, $fe, $01, $05, $04, $03, $04
16cba     04 01 FF FD 
16cbe     FE FE 00 05 
16cc2     07 09 09 07 
16cc6     03 00 FF 01 | 	byte	$04, $01, $ff, $fd, $fe, $fe, $00, $05, $07, $09, $09, $07, $03, $00, $ff, $01
16cca     01 02 04 08 
16cce     07 05 01 00 
16cd2     FE FD FC FF 
16cd6     03 07 08 07 | 	byte	$01, $02, $04, $08, $07, $05, $01, $00, $fe, $fd, $fc, $ff, $03, $07, $08, $07
16cda     04 01 FE FE 
16cde     FF 01 05 05 
16ce2     05 04 04 03 
16ce6     01 00 00 01 | 	byte	$04, $01, $fe, $fe, $ff, $01, $05, $05, $05, $04, $04, $03, $01, $00, $00, $01
16cea     02 03 04 05 
16cee     04 03 02 01 
16cf2     01 04 05 06 
16cf6     07 04 02 02 | 	byte	$02, $03, $04, $05, $04, $03, $02, $01, $01, $04, $05, $06, $07, $04, $02, $02
16cfa     02 02 01 02 
16cfe     03 06 05 05 
16d02     03 01 FF FC 
16d06     FD FE 00 02 | 	byte	$02, $02, $01, $02, $03, $06, $05, $05, $03, $01, $ff, $fc, $fd, $fe, $00, $02
16d0a     01 02 03 02 
16d0e     00 FF 00 02 
16d12     03 04 04 04 
16d16     02 01 00 FE | 	byte	$01, $02, $03, $02, $00, $ff, $00, $02, $03, $04, $04, $04, $02, $01, $00, $fe
16d1a     FD FE 02 04 
16d1e     04 03 02 00 
16d22     00 FF FF 00 
16d26     01 02 02 02 | 	byte	$fd, $fe, $02, $04, $04, $03, $02, $00, $00, $ff, $ff, $00, $01, $02, $02, $02
16d2a     01 00 00 FF 
16d2e     FE FF FF 00 
16d32     01 01 00 00 
16d36     00 01 00 01 | 	byte	$01, $00, $00, $ff, $fe, $ff, $ff, $00, $01, $01, $00, $00, $00, $01, $00, $01
16d3a     02 01 02 01 
16d3e     02 01 01 01 
16d42     01 01 02 03 
16d46     03 05 03 01 | 	byte	$02, $01, $02, $01, $02, $01, $01, $01, $01, $01, $02, $03, $03, $05, $03, $01
16d4a     00 FF FF 00 
16d4e     02 04 04 01 
16d52     01 01 00 FF 
16d56     FF 00 01 04 | 	byte	$00, $ff, $ff, $00, $02, $04, $04, $01, $01, $01, $00, $ff, $ff, $00, $01, $04
16d5a     05 06 06 06 
16d5e     05 04 03 02 
16d62     03 03 04 06 
16d66     06 04 04 04 | 	byte	$05, $06, $06, $06, $05, $04, $03, $02, $03, $03, $04, $06, $06, $04, $04, $04
16d6a     03 00 00 01 
16d6e     01 02 03 04 
16d72     04 04 04 02 
16d76     01 01 01 02 | 	byte	$03, $00, $00, $01, $01, $02, $03, $04, $04, $04, $04, $02, $01, $01, $01, $02
16d7a     04 05 06 04 
16d7e     04 03 01 00 
16d82     FF FE FE FF 
16d86     01 02 02 01 | 	byte	$04, $05, $06, $04, $04, $03, $01, $00, $ff, $fe, $fe, $ff, $01, $02, $02, $01
16d8a     02 02 02 01 
16d8e     01 02 03 05 
16d92     06 06 05 04 
16d96     03 03 03 03 | 	byte	$02, $02, $02, $01, $01, $02, $03, $05, $06, $06, $05, $04, $03, $03, $03, $03
16d9a     03 03 03 03 
16d9e     04 03 03 01 
16da2     01 03 03 00 
16da6     01 04 04 03 | 	byte	$03, $03, $03, $03, $04, $03, $03, $01, $01, $03, $03, $00, $01, $04, $04, $03
16daa     02 02 03 02 
16dae     01 02 03 03 
16db2     03 04 03 02 
16db6     02 01 00 FF | 	byte	$02, $02, $03, $02, $01, $02, $03, $03, $03, $04, $03, $02, $02, $01, $00, $ff
16dba     00 02 02 02 
16dbe     04 04 05 04 
16dc2     02 01 02 03 
16dc6     02 01 02 04 | 	byte	$00, $02, $02, $02, $04, $04, $05, $04, $02, $01, $02, $03, $02, $01, $02, $04
16dca     04 02 02 02 
16dce     01 01 01 01 
16dd2     02 03 04 05 
16dd6     04 05 04 02 | 	byte	$04, $02, $02, $02, $01, $01, $01, $01, $02, $03, $04, $05, $04, $05, $04, $02
16dda     01 00 01 02 
16dde     02 02 04 04 
16de2     04 02 01 01 
16de6     02 02 02 03 | 	byte	$01, $00, $01, $02, $02, $02, $04, $04, $04, $02, $01, $01, $02, $02, $02, $03
16dea     04 03 04 05 
16dee     05 02 01 01 
16df2     02 02 02 05 
16df6     05 04 04 03 | 	byte	$04, $03, $04, $05, $05, $02, $01, $01, $02, $02, $02, $05, $05, $04, $04, $03
16dfa     02 02 02 02 
16dfe     04 03 03 03 
16e02     04 04 04 02 
16e06     02 01 01 02 | 	byte	$02, $02, $02, $02, $04, $03, $03, $03, $04, $04, $04, $02, $02, $01, $01, $02
16e0a     02 02 02 02 
16e0e     02          | 	byte	$02[5]
16e0f     01 02 01 01 
16e13     01 01 01 02 
16e17     03 02 02 02 
16e1b     02 01 00 00 | 	byte	$01, $02, $01, $01, $01, $01, $01, $02, $03, $02, $02, $02, $02, $01, $00, $00
16e1f     01 01 01 02 
16e23     01 01 01 00 
16e27     FF FF 01 00 
16e2b     FF 00 01 01 | 	byte	$01, $01, $01, $02, $01, $01, $01, $00, $ff, $ff, $01, $00, $ff, $00, $01, $01
16e2f     00 FF FF 00 
16e33     FF FE FF 01 
16e37     01 01 01 01 
16e3b     01 FF FE FE | 	byte	$00, $ff, $ff, $00, $ff, $fe, $ff, $01, $01, $01, $01, $01, $01, $ff, $fe, $fe
16e3f     FF FF 00 01 
16e43     01 01 01 00 
16e47     FF 00 01 00 
16e4b     00 01 02 02 | 	byte	$ff, $ff, $00, $01, $01, $01, $01, $00, $ff, $00, $01, $00, $00, $01, $02, $02
16e4f     02 02 02 01 
16e53     01 02 02 01 
16e57     01 02 02 02 
16e5b     01 00 01 01 | 	byte	$02, $02, $02, $01, $01, $02, $02, $01, $01, $02, $02, $02, $01, $00, $01, $01
16e5f     01 01 01 00 
16e63     01 01 01 00 
16e67     00 01 01 01 
16e6b     01 01 01 00 | 	byte	$01, $01, $01, $00, $01, $01, $01, $00, $00, $01, $01, $01, $01, $01, $01, $00
16e6f     00 01 02 02 
16e73     01 01 01 02 
16e77     02 01 01 01 
16e7b     01 01 02 01 | 	byte	$00, $01, $02, $02, $01, $01, $01, $02, $02, $01, $01, $01, $01, $01, $02, $01
16e7f     01 02 02 02 
16e83     01 01 01 01 
16e87     01 02 02 02 
16e8b     02 02 02 01 | 	byte	$01, $02, $02, $02, $01, $01, $01, $01, $01, $02, $02, $02, $02, $02, $02, $01
16e8f     01 01 01 01 
16e93     02 02 01 01 
16e97     01 00 00 00 
16e9b     01 01 01 02 | 	byte	$01, $01, $01, $01, $02, $02, $01, $01, $01, $00, $00, $00, $01, $01, $01, $02
16e9f     02 02 02 02 
16ea3     02 02 02 02 | 	byte	$02[8]
16ea7     03 03 03 03 
16eab     03          | 	byte	$03[5]
16eac     02 02 03 03 
16eb0     03 02 02 02 
16eb4     02 02 02 01 
16eb8     01 01 02 03 | 	byte	$02, $02, $03, $03, $03, $02, $02, $02, $02, $02, $02, $01, $01, $01, $02, $03
16ebc     03 03 03 03 
16ec0     02 03 01 02 
16ec4     02 02 02 02 
16ec8     02 02 02 02 | 	byte	$03, $03, $03, $03, $02, $03, $01, $02, $02, $02, $02, $02, $02, $02, $02, $02
16ecc     01 01 01 02 
16ed0     02 02 03 03 
16ed4     02 02 02 02 
16ed8     01 01 01 02 | 	byte	$01, $01, $01, $02, $02, $02, $03, $03, $02, $02, $02, $02, $01, $01, $01, $02
16edc     02 02 01 01 
16ee0     01 01 01 01 
16ee4     01 01 00 00 
16ee8     00 00 01 01 | 	byte	$02, $02, $01, $01, $01, $01, $01, $01, $01, $01, $00, $00, $00, $00, $01, $01
16eec     02 02 02 02 
16ef0     02 02 02 02 
16ef4     02 02 02 02 
16ef8     02          | 	byte	$02[13]
16ef9     04 04 04 04 
16efd     05 05 05 05 
16f01     02 00 FD FE 
16f05     FD F4 EB EB | 	byte	$04, $04, $04, $04, $05, $05, $05, $05, $02, $00, $fd, $fe, $fd, $f4, $eb, $eb
16f09     F0 F7 FB FE 
16f0d     07 15 27 2B 
16f11     25 22 27 22 
16f15     1A 0E 05 F7 | 	byte	$f0, $f7, $fb, $fe, $07, $15, $27, $2b, $25, $22, $27, $22, $1a, $0e, $05, $f7
16f19     EB ED F7 FD 
16f1d     F8 F5 F4 E8 
16f21     E0 DB DB E4 
16f25     F0 FA 02 0D | 	byte	$eb, $ed, $f7, $fd, $f8, $f5, $f4, $e8, $e0, $db, $db, $e4, $f0, $fa, $02, $0d
16f29     14 1A 1E 21 
16f2d     1F 1D 17 05 
16f31     F4 E5 E0 E4 
16f35     ED F8 F7 F1 | 	byte	$14, $1a, $1e, $21, $1f, $1d, $17, $05, $f4, $e5, $e0, $e4, $ed, $f8, $f7, $f1
16f39     F1 F5 FE 12 
16f3d     21 2B 31 31 
16f41     31 2E 1E 0B 
16f45     FA F0 F2 F7 | 	byte	$f1, $f5, $fe, $12, $21, $2b, $31, $31, $31, $2e, $1e, $0b, $fa, $f0, $f2, $f7
16f49     F8 F7 F1 F0 
16f4d     F4 F8 FA F4 
16f51     EE EB EE F4 
16f55     F7 F7 FE 05 | 	byte	$f8, $f7, $f1, $f0, $f4, $f8, $fa, $f4, $ee, $eb, $ee, $f4, $f7, $f7, $fe, $05
16f59     0F 14 14 14 
16f5d     11 0A 08 0E 
16f61     1A 1D 1D 18 
16f65     0E 08 08 0B | 	byte	$0f, $14, $14, $14, $11, $0a, $08, $0e, $1a, $1d, $1d, $18, $0e, $08, $08, $0b
16f69     08 05 02 FA 
16f6d     F4 EE EA E8 
16f71     EA ED ED F1 
16f75     F5 F5 FD 05 | 	byte	$08, $05, $02, $fa, $f4, $ee, $ea, $e8, $ea, $ed, $ed, $f1, $f5, $f5, $fd, $05
16f79     08 0E 0E 0B 
16f7d     05 05 07 07 
16f81     08 05 07 14 
16f85     21 25 24 1F | 	byte	$08, $0e, $0e, $0b, $05, $05, $07, $07, $08, $05, $07, $14, $21, $25, $24, $1f
16f89     1A 11 11 11 
16f8d     0E 08 00 F1 
16f91     E4 DD DE E4 
16f95     E4 E2 E5 E2 | 	byte	$1a, $11, $11, $11, $0e, $08, $00, $f1, $e4, $dd, $de, $e4, $e4, $e2, $e5, $e2
16f99     DD DD DE E2 
16f9d     EB F5 FA FD 
16fa1     FE 04 08 05 
16fa5     04 02 00 FE | 	byte	$dd, $dd, $de, $e2, $eb, $f5, $fa, $fd, $fe, $04, $08, $05, $04, $02, $00, $fe
16fa9     F8 F7 FB 02 
16fad     0B 12 1A 24 
16fb1     2B 2A 22 1B 
16fb5     1A 1E 1D 17 | 	byte	$f8, $f7, $fb, $02, $0b, $12, $1a, $24, $2b, $2a, $22, $1b, $1a, $1e, $1d, $17
16fb9     0B 05 02 02 
16fbd     01 02 00 FA 
16fc1     F1 EA E2 E2 
16fc5     E5 EB F1 F7 | 	byte	$0b, $05, $02, $02, $01, $02, $00, $fa, $f1, $ea, $e2, $e2, $e5, $eb, $f1, $f7
16fc9     FE 07 0F 14 
16fcd     15 11 0B 00 
16fd1     F8 F8 F7 F7 
16fd5     F4 EB E0 D7 | 	byte	$fe, $07, $0f, $14, $15, $11, $0b, $00, $f8, $f8, $f7, $f7, $f4, $eb, $e0, $d7
16fd9     CB C7 C7 CA 
16fdd     CD D0 D5 E0 
16fe1     EB F8 05 12 
16fe5     1B 24 2A 31 | 	byte	$cb, $c7, $c7, $ca, $cd, $d0, $d5, $e0, $eb, $f8, $05, $12, $1b, $24, $2a, $31
16fe9     3B 47 4E 4D 
16fed     45 34 28 1F 
16ff1     1A 14 0F 12 
16ff5     14 11 0B 08 | 	byte	$3b, $47, $4e, $4d, $45, $34, $28, $1f, $1a, $14, $0f, $12, $14, $11, $0b, $08
16ff9     02 FA F4 F2 
16ffd     F5 F4 F0 EA 
17001     E5 E2 E4 EA 
17005     EE F0 F1 F4 | 	byte	$02, $fa, $f4, $f2, $f5, $f4, $f0, $ea, $e5, $e2, $e4, $ea, $ee, $f0, $f1, $f4
17009     F4 F2 ED EA 
1700d     ED F0 ED E8 
17011     E4 E2 E2 E0 
17015     DD DE DE E0 | 	byte	$f4, $f2, $ed, $ea, $ed, $f0, $ed, $e8, $e4, $e2, $e2, $e0, $dd, $de, $de, $e0
17019     E7 EE F4 F7 
1701d     FB 02 0D 14 
17021     14 12 11 11 
17025     17 25 2F 38 | 	byte	$e7, $ee, $f4, $f7, $fb, $02, $0d, $14, $14, $12, $11, $11, $17, $25, $2f, $38
17029     3F 3F 3B 34 
1702d     25 17 0B 01 
17031     FE FE 00 FB 
17035     F8 FB FE 00 | 	byte	$3f, $3f, $3b, $34, $25, $17, $0b, $01, $fe, $fe, $00, $fb, $f8, $fb, $fe, $00
17039     FD FA FA FE 
1703d     08 0E 15 1B 
17041     1D 17 0B 05 
17045     01 FA EE E5 | 	byte	$fd, $fa, $fa, $fe, $08, $0e, $15, $1b, $1d, $17, $0b, $05, $01, $fa, $ee, $e5
17049     E7 ED EE E8 
1704d     DD D7 D4 D1 
17051     CE CE D8 E4 
17055     F0 FE 0B 15 | 	byte	$e7, $ed, $ee, $e8, $dd, $d7, $d4, $d1, $ce, $ce, $d8, $e4, $f0, $fe, $0b, $15
17059     1B 1E 1F 1E 
1705d     1B 1D 24 24 
17061     1A 0B 01 FB 
17065     FB FE 00 02 | 	byte	$1b, $1e, $1f, $1e, $1b, $1d, $24, $24, $1a, $0b, $01, $fb, $fb, $fe, $00, $02
17069     04 07 0D 12 
1706d     1A 21 28 25 
17071     1F 17 14 18 
17075     1D 1D 1D 1D | 	byte	$04, $07, $0d, $12, $1a, $21, $28, $25, $1f, $17, $14, $18, $1d, $1d, $1d, $1d
17079     17 11 0D 0B 
1707d     08 00 F0 DE 
17081     D1 CB CD D5 
17085     E4 F1 FA FE | 	byte	$17, $11, $0d, $0b, $08, $00, $f0, $de, $d1, $cb, $cd, $d5, $e4, $f1, $fa, $fe
17089     FB F7 F7 FE 
1708d     07 0D 0D 08 
17091     00 EE E4 E0 
17095     E2 E7 EE F7 | 	byte	$fb, $f7, $f7, $fe, $07, $0d, $0d, $08, $00, $ee, $e4, $e0, $e2, $e7, $ee, $f7
17099     FE 0F 1B 21 
1709d     21 24 2B 2B 
170a1     2A 24 1A 0E 
170a5     04 00 FD FA | 	byte	$fe, $0f, $1b, $21, $21, $24, $2b, $2b, $2a, $24, $1a, $0e, $04, $00, $fd, $fa
170a9     F4 EE EB EA 
170ad     EA E8 E8 E8 
170b1     E4 DD D8 D7 
170b5     D8 D8 DA E1 | 	byte	$f4, $ee, $eb, $ea, $ea, $e8, $e8, $e8, $e4, $dd, $d8, $d7, $d8, $d8, $da, $e1
170b9     EA F8 04 0E 
170bd     14 1A 24 25 
170c1     22 22 1F 1B 
170c5     17 17 18 17 | 	byte	$ea, $f8, $04, $0e, $14, $1a, $24, $25, $22, $22, $1f, $1b, $17, $17, $18, $17
170c9     0E 08 07 0B 
170cd     0F 11 15 1E 
170d1     24 28 28 25 
170d5     1D 11 07 FA | 	byte	$0e, $08, $07, $0b, $0f, $11, $15, $1e, $24, $28, $28, $25, $1d, $11, $07, $fa
170d9     EE E0 D7 D5 
170dd     D8 DA D7 D1 
170e1     C8 C8 CB D2 
170e5     DA E5 F7 07 | 	byte	$ee, $e0, $d7, $d5, $d8, $da, $d7, $d1, $c8, $c8, $cb, $d2, $da, $e5, $f7, $07
170e9     12 17 14 0B 
170ed     00 FB F5 F2 
170f1     F0 F1 F8 FE 
170f5     04 0B 0E 0B | 	byte	$12, $17, $14, $0b, $00, $fb, $f5, $f2, $f0, $f1, $f8, $fe, $04, $0b, $0e, $0b
170f9     07 05 07 07 
170fd     08 08 05 08 
17101     05 08 0A 0B 
17105     12 14 0B 00 | 	byte	$07, $05, $07, $07, $08, $08, $05, $08, $05, $08, $0a, $0b, $12, $14, $0b, $00
17109     F1 E8 E8 EB 
1710d     ED F5 FE 02 
17111     05 08 0B 0E 
17115     0D 07 0A 14 | 	byte	$f1, $e8, $e8, $eb, $ed, $f5, $fe, $02, $05, $08, $0b, $0e, $0d, $07, $0a, $14
17119     1E 1F 1D 14 
1711d     0E 0B 02 F7 
17121     EB E7 E7 EA 
17125     EE F5 FD 04 | 	byte	$1e, $1f, $1d, $14, $0e, $0b, $02, $f7, $eb, $e7, $e7, $ea, $ee, $f5, $fd, $04
17129     08 08 07 07 
1712d     02 FD F7 F7 
17131     FD 05 0F 1B 
17135     27 31 38 38 | 	byte	$08, $08, $07, $07, $02, $fd, $f7, $f7, $fd, $05, $0f, $1b, $27, $31, $38, $38
17139     34 2E 2A 24 
1713d     22 1B 0E 02 
17141     F7 F0 EB E5 
17145     E5 E7 E5 E1 | 	byte	$34, $2e, $2a, $24, $22, $1b, $0e, $02, $f7, $f0, $eb, $e5, $e5, $e7, $e5, $e1
17149     DA D5 D5 D4 
1714d     D1 D1 D4 E0 
17151     ED F7 FE 04 
17155     07 08 05 04 | 	byte	$da, $d5, $d5, $d4, $d1, $d1, $d4, $e0, $ed, $f7, $fe, $04, $07, $08, $05, $04
17159     02 02 00 01 
1715d     01 FD F4 EB 
17161     E5 E8 F1 FD 
17165     04 08 0B 11 | 	byte	$02, $02, $00, $01, $01, $fd, $f4, $eb, $e5, $e8, $f1, $fd, $04, $08, $0b, $11
17169     15 17 14 14 
1716d     14 14 0F 0F 
17171     15 1A 1B 18 
17175     15 12 0E 0B | 	byte	$15, $17, $14, $14, $14, $14, $0f, $0f, $15, $1a, $1b, $18, $15, $12, $0e, $0b
17179     04 FE FE 08 
1717d     14 18 17 0D 
17181     01 F7 F0 F0 
17185     F7 FE 07 0D | 	byte	$04, $fe, $fe, $08, $14, $18, $17, $0d, $01, $f7, $f0, $f0, $f7, $fe, $07, $0d
17189     0E 0B 05 FB 
1718d     F4 F1 F5 FE 
17191     07 0D 0F 0E 
17195     08 01 FA F1 | 	byte	$0e, $0b, $05, $fb, $f4, $f1, $f5, $fe, $07, $0d, $0f, $0e, $08, $01, $fa, $f1
17199     E8 E5 E5 ED 
1719d     F5 FD FE FB 
171a1     F5 EE ED F1 
171a5     F8 FE 07 12 | 	byte	$e8, $e5, $e5, $ed, $f5, $fd, $fe, $fb, $f5, $ee, $ed, $f1, $f8, $fe, $07, $12
171a9     1D 25 2B 2B 
171ad     25 22 1F 1D 
171b1     1A 17 14 0E 
171b5     0B 0B 0E 0E | 	byte	$1d, $25, $2b, $2b, $25, $22, $1f, $1d, $1a, $17, $14, $0e, $0b, $0b, $0e, $0e
171b9     11 14 11 05 
171bd     FA EB E2 DD 
171c1     DB DE E5 EB 
171c5     EB EA E8 E8 | 	byte	$11, $14, $11, $05, $fa, $eb, $e2, $dd, $db, $de, $e5, $eb, $eb, $ea, $e8, $e8
171c9     E7 E7 E7 EA 
171cd     F2 FE 0A 11 
171d1     14 11 11 0F 
171d5     0E 0D 08 07 | 	byte	$e7, $e7, $e7, $ea, $f2, $fe, $0a, $11, $14, $11, $11, $0f, $0e, $0d, $08, $07
171d9     0A 0D 0E 0A 
171dd     05 02 00 FD 
171e1     F4 EB E7 EA 
171e5     F2 FD 05 0E | 	byte	$0a, $0d, $0e, $0a, $05, $02, $00, $fd, $f4, $eb, $e7, $ea, $f2, $fd, $05, $0e
171e9     15 1A 1A 15 
171ed     11 0B 00 F7 
171f1     F4 F8 FD FD 
171f5     FA F7 F2 EA | 	byte	$15, $1a, $1a, $15, $11, $0b, $00, $f7, $f4, $f8, $fd, $fd, $fa, $f7, $f2, $ea
171f9     E1 DB DB E1 
171fd     EB F5 FD 00 
17201     02 FD F4 EE 
17205     EA EA EB ED | 	byte	$e1, $db, $db, $e1, $eb, $f5, $fd, $00, $02, $fd, $f4, $ee, $ea, $ea, $eb, $ed
17209     F2 FB 05 11 
1720d     18 1A 1B 1B 
17211     17 0B 02 01 
17215     01 05 0B 12 | 	byte	$f2, $fb, $05, $11, $18, $1a, $1b, $1b, $17, $0b, $02, $01, $01, $05, $0b, $12
17219     18 1D 1B 14 
1721d     0B 07 00 F7 
17221     EE E4 E0 E0 
17225     E4 E8 F0 F4 | 	byte	$18, $1d, $1b, $14, $0b, $07, $00, $f7, $ee, $e4, $e0, $e0, $e4, $e8, $f0, $f4
17229     FB FE 00 02 
1722d     02 02 05 0A 
17231     0B 08 05 05 
17235     0B 11 15 1A | 	byte	$fb, $fe, $00, $02, $02, $02, $05, $0a, $0b, $08, $05, $05, $0b, $11, $15, $1a
17239     21 25 25 22 
1723d     1D 14 08 FA 
17241     EB E4 DE DD 
17245     DA DB DB DD | 	byte	$21, $25, $25, $22, $1d, $14, $08, $fa, $eb, $e4, $de, $dd, $da, $db, $db, $dd
17249     E1 EA F2 F8 
1724d     FE 04 08 0B 
17251     0D 0E 0E 12 
17255     1B 24 25 22 | 	byte	$e1, $ea, $f2, $f8, $fe, $04, $08, $0b, $0d, $0e, $0e, $12, $1b, $24, $25, $22
17259     1D 18 18 17 
1725d     17 15 17 1B 
17261     1B 17 11 05 
17265     FA EB E2 DD | 	byte	$1d, $18, $18, $17, $17, $15, $17, $1b, $1b, $17, $11, $05, $fa, $eb, $e2, $dd
17269     D8 DD E4 ED 
1726d     F8 05 0E 0E 
17271     0D 0D 0B 0A 
17275     07 07 0A 0B | 	byte	$d8, $dd, $e4, $ed, $f8, $05, $0e, $0e, $0d, $0d, $0b, $0a, $07, $07, $0a, $0b
17279     08 02 FB F5 
1727d     F4 F4 F2 F2 
17281     F5 FA FD FD 
17285     FE 00 05 04 | 	byte	$08, $02, $fb, $f5, $f4, $f4, $f2, $f2, $f5, $fa, $fd, $fd, $fe, $00, $05, $04
17289     04 02 04 02 
1728d     05 0A 0E 12 
17291     11 0E 0E 11 
17295     12 15 17 17 | 	byte	$04, $02, $04, $02, $05, $0a, $0e, $12, $11, $0e, $0e, $11, $12, $15, $17, $17
17299     12 0E 08 05 
1729d     00 F7 EE EA 
172a1     E8 EB ED F0 
172a5     F1 F2 F2 F2 | 	byte	$12, $0e, $08, $05, $00, $f7, $ee, $ea, $e8, $eb, $ed, $f0, $f1, $f2, $f2, $f2
172a9     F5 FD 05 0F 
172ad     15 1B 1E 1F 
172b1     1F 1A 11 0D 
172b5     0E 12 17 17 | 	byte	$f5, $fd, $05, $0f, $15, $1b, $1e, $1f, $1f, $1a, $11, $0d, $0e, $12, $17, $17
172b9     17 12 0B 00 
172bd     F4 EB E4 E2 
172c1     E4 E4 EA F2 
172c5     F7 F8 F5 F1 | 	byte	$17, $12, $0b, $00, $f4, $eb, $e4, $e2, $e4, $e4, $ea, $f2, $f7, $f8, $f5, $f1
172c9     EE EA E5 E2 
172cd     E4 E4 E7 EB 
172d1     F4 FE 08 11 
172d5     1A 21 25 2A | 	byte	$ee, $ea, $e5, $e2, $e4, $e4, $e7, $eb, $f4, $fe, $08, $11, $1a, $21, $25, $2a
172d9     2D 2E 25 1A 
172dd     0F 0A 07 05 
172e1     05 00 F7 E8 
172e5     DD DA DD E1 | 	byte	$2d, $2e, $25, $1a, $0f, $0a, $07, $05, $05, $00, $f7, $e8, $dd, $da, $dd, $e1
172e9     E7 ED F0 F1 
172ed     F7 FB FD FB 
172f1     FA FE 05 0F 
172f5     15 17 11 05 | 	byte	$e7, $ed, $f0, $f1, $f7, $fb, $fd, $fb, $fa, $fe, $05, $0f, $15, $17, $11, $05
172f9     FA F2 F2 F5 
172fd     F4 EE E5 E0 
17301     DE E1 EB F5 
17305     FB F8 F5 F5 | 	byte	$fa, $f2, $f2, $f5, $f4, $ee, $e5, $e0, $de, $e1, $eb, $f5, $fb, $f8, $f5, $f5
17309     FB FE 0D 14 
1730d     18 1A 17 14 
17311     11 12 11 0E 
17315     0B 0B 0A 0B | 	byte	$fb, $fe, $0d, $14, $18, $1a, $17, $14, $11, $12, $11, $0e, $0b, $0b, $0a, $0b
17319     0B 0D 0F 12 
1731d     11 0E 0B 0A 
17321     0E 15 17 17 
17325     11 0B 02 FA | 	byte	$0b, $0d, $0f, $12, $11, $0e, $0b, $0a, $0e, $15, $17, $17, $11, $0b, $02, $fa
17329     EE E8 E0 DB 
1732d     DB E0 EA F8 
17331     04 0E 15 18 
17335     18 1D 24 27 | 	byte	$ee, $e8, $e0, $db, $db, $e0, $ea, $f8, $04, $0e, $15, $18, $18, $1d, $24, $27
17339     25 22 1A 14 
1733d     0E 0E 0E 11 
17341     11 12 0E 08 
17345     00 F1 E2 D8 | 	byte	$25, $22, $1a, $14, $0e, $0e, $0e, $11, $11, $12, $0e, $08, $00, $f1, $e2, $d8
17349     D1 C8 C8 CE 
1734d     DA E4 EB F1 
17351     FB 04 0E 14 
17355     15 12 0F 08 | 	byte	$d1, $c8, $c8, $ce, $da, $e4, $eb, $f1, $fb, $04, $0e, $14, $15, $12, $0f, $08
17359     05 08 0E 14 
1735d     15 11 0B 02 
17361     FE FD FE 02 
17365     05 08 05 02 | 	byte	$05, $08, $0e, $14, $15, $11, $0b, $02, $fe, $fd, $fe, $02, $05, $08, $05, $02
17369     FD F5 F4 F4 
1736d     F5 F8 FB FD 
17371     FD FE 04 05 
17375     01 FA F4 F2 | 	byte	$fd, $f5, $f4, $f4, $f5, $f8, $fb, $fd, $fd, $fe, $04, $05, $01, $fa, $f4, $f2
17379     F7 FB FE 07 
1737d     0E 0E 08 00 
17381     F4 E8 E0 DA 
17385     D7 D7 D8 DE | 	byte	$f7, $fb, $fe, $07, $0e, $0e, $08, $00, $f4, $e8, $e0, $da, $d7, $d7, $d8, $de
17389     EA F7 04 0D 
1738d     12 17 18 1A 
17391     18 11 08 01 
17395     FA F8 FD 07 | 	byte	$ea, $f7, $04, $0d, $12, $17, $18, $1a, $18, $11, $08, $01, $fa, $f8, $fd, $07
17399     15 21 25 25 
1739d     1D 12 08 FD 
173a1     F7 F7 FD 05 
173a5     0D 0E 0B 0B | 	byte	$15, $21, $25, $25, $1d, $12, $08, $fd, $f7, $f7, $fd, $05, $0d, $0e, $0b, $0b
173a9     08 02 FD F8 
173ad     F7 FB 02 0B 
173b1     11 14 17 1B 
173b5     1F 1F 1F 1D | 	byte	$08, $02, $fd, $f8, $f7, $fb, $02, $0b, $11, $14, $17, $1b, $1f, $1f, $1f, $1d
173b9     17 0D 00 F2 
173bd     EB E8 E7 EB 
173c1     F0 F2 F4 F4 
173c5     F2 EE E8 E0 | 	byte	$17, $0d, $00, $f2, $eb, $e8, $e7, $eb, $f0, $f2, $f4, $f4, $f2, $ee, $e8, $e0
173c9     DD DB DE E1 
173cd     E4 E5 E8 EB 
173d1     ED F0 F8 FE 
173d5     07 0E 14 15 | 	byte	$dd, $db, $de, $e1, $e4, $e5, $e8, $eb, $ed, $f0, $f8, $fe, $07, $0e, $14, $15
173d9     14 11 0E 0E 
173dd     0F 11 15 1A 
173e1     1F 24 27 25 
173e5     24 25 27 2B | 	byte	$14, $11, $0e, $0e, $0f, $11, $15, $1a, $1f, $24, $27, $25, $24, $25, $27, $2b
173e9     31 35 38 38 
173ed     37 32 2E 25 
173f1     1D 17 0B 00 
173f5     EE DD CB C0 | 	byte	$31, $35, $38, $38, $37, $32, $2e, $25, $1d, $17, $0b, $00, $ee, $dd, $cb, $c0
173f9     C1 C8 D0 D5 
173fd     D7 D2 CB C5 
17401     C1 C2 CA D2 
17405     E0 ED FB 0A | 	byte	$c1, $c8, $d0, $d5, $d7, $d2, $cb, $c5, $c1, $c2, $ca, $d2, $e0, $ed, $fb, $0a
17409     18 24 2E 35 
1740d     35 31 28 1D 
17411     0B 02 FB F4 
17415     EE ED F2 FB | 	byte	$18, $24, $2e, $35, $35, $31, $28, $1d, $0b, $02, $fb, $f4, $ee, $ed, $f2, $fb
17419     00 02 02 02 
1741d     07 0D 14 18 
17421     17 0E 00 F5 
17425     F0 F2 F5 F5 | 	byte	$00, $02, $02, $02, $07, $0d, $14, $18, $17, $0e, $00, $f5, $f0, $f2, $f5, $f5
17429     F5 F5 FA FD 
1742d     FA F5 F4 F5 
17431     F4 F2 F2 F8 
17435     04 0B 0D 0D | 	byte	$f5, $f5, $fa, $fd, $fa, $f5, $f4, $f5, $f4, $f2, $f2, $f8, $04, $0b, $0d, $0d
17439     0B 0F 12 14 
1743d     14 12 0E 08 
17441     FD F7 FB 04 
17445     0E 11 11 0E | 	byte	$0b, $0f, $12, $14, $14, $12, $0e, $08, $fd, $f7, $fb, $04, $0e, $11, $11, $0e
17449     08 05 08 0D 
1744d     0E 0B 02 FA 
17451     EE E7 E1 E0 
17455     E2 EB F5 FE | 	byte	$08, $05, $08, $0d, $0e, $0b, $02, $fa, $ee, $e7, $e1, $e0, $e2, $eb, $f5, $fe
17459     08 0B 0D 0B 
1745d     08 08 0B 0E 
17461     0E 0E 0D 0B 
17465     0A 05 00 FA | 	byte	$08, $0b, $0d, $0b, $08, $08, $0b, $0e, $0e, $0e, $0d, $0b, $0a, $05, $00, $fa
17469     EE E5 E0 DE 
1746d     DD DA D7 D7 
17471     DB E5 F1 F7 
17475     FB FE FE FD | 	byte	$ee, $e5, $e0, $de, $dd, $da, $d7, $d7, $db, $e5, $f1, $f7, $fb, $fe, $fe, $fd
17479     FA F5 F5 FB 
1747d     04 0F 1A 21 
17481     27 25 1F 17 
17485     07 FB F4 F5 | 	byte	$fa, $f5, $f5, $fb, $04, $0f, $1a, $21, $27, $25, $1f, $17, $07, $fb, $f4, $f5
17489     F8 FD 02 0D 
1748d     15 1E 25 28 
17491     2A 28 28 25 
17495     25 21 1A 11 | 	byte	$f8, $fd, $02, $0d, $15, $1e, $25, $28, $2a, $28, $28, $25, $25, $21, $1a, $11
17499     07 00 F4 EE 
1749d     EE F1 EE EB 
174a1     EA EA E8 E8 
174a5     EB F0 F5 FB | 	byte	$07, $00, $f4, $ee, $ee, $f1, $ee, $eb, $ea, $ea, $e8, $e8, $eb, $f0, $f5, $fb
174a9     FB F7 EE E5 
174ad     E2 E4 E5 E7 
174b1     E8 F0 F8 08 
174b5     18 2A 35 3A | 	byte	$fb, $f7, $ee, $e5, $e2, $e4, $e5, $e7, $e8, $f0, $f8, $08, $18, $2a, $35, $3a
174b9     37 31 28 1A 
174bd     0B 00 FA F7 
174c1     F4 F1 E8 E0 
174c5     DA DB E4 E8 | 	byte	$37, $31, $28, $1a, $0b, $00, $fa, $f7, $f4, $f1, $e8, $e0, $da, $db, $e4, $e8
174c9     E7 E4 E2 E1 
174cd     E2 E7 F1 FE 
174d1     12 1F 28 2E 
174d5     2E 22 17 08 | 	byte	$e7, $e4, $e2, $e1, $e2, $e7, $f1, $fe, $12, $1f, $28, $2e, $2e, $22, $17, $08
174d9     00 F4 EB EB 
174dd     F0 F8 05 11 
174e1     1A 1E 1F 22 
174e5     1F 17 0B 00 | 	byte	$00, $f4, $eb, $eb, $f0, $f8, $05, $11, $1a, $1e, $1f, $22, $1f, $17, $0b, $00
174e9     F4 EE ED EE 
174ed     F4 FA FD FA 
174f1     F7 F5 F4 F1 
174f5     F7 04 12 1D | 	byte	$f4, $ee, $ed, $ee, $f4, $fa, $fd, $fa, $f7, $f5, $f4, $f1, $f7, $04, $12, $1d
174f9     27 2E 2F 28 
174fd     1D 0E 02 FB 
17501     F8 FB FE 01 
17505     02 01 FD F7 | 	byte	$27, $2e, $2f, $28, $1d, $0e, $02, $fb, $f8, $fb, $fe, $01, $02, $01, $fd, $f7
17509     F5 F7 FB 07 
1750d     12 1D 25 2B 
17511     2E 31 2F 2E 
17515     2A 25 22 1B | 	byte	$f5, $f7, $fb, $07, $12, $1d, $25, $2b, $2e, $31, $2f, $2e, $2a, $25, $22, $1b
17519     14 05 F7 E8 
1751d     D8 D1 D0 DA 
17521     E5 F1 F8 FE 
17525     07 0D 14 15 | 	byte	$14, $05, $f7, $e8, $d8, $d1, $d0, $da, $e5, $f1, $f8, $fe, $07, $0d, $14, $15
17529     0E 00 E8 D7 
1752d     CB CA D0 E1 
17531     F1 FB FB F8 
17535     F4 F0 E4 DD | 	byte	$0e, $00, $e8, $d7, $cb, $ca, $d0, $e1, $f1, $fb, $fb, $f8, $f4, $f0, $e4, $dd
17539     DD E5 ED F5 
1753d     FE 0A 0F 12 
17541     12 11 11 11 
17545     0F 0B 01 FE | 	byte	$dd, $e5, $ed, $f5, $fe, $0a, $0f, $12, $12, $11, $11, $11, $0f, $0b, $01, $fe
17549     FE FE 04 08 
1754d     0B 0A 0A 0B 
17551     0B 0B 02 FD 
17555     F8 FE 07 0E | 	byte	$fe, $fe, $04, $08, $0b, $0a, $0a, $0b, $0b, $0b, $02, $fd, $f8, $fe, $07, $0e
17559     15 1D 24 25 
1755d     1F 18 0D 00 
17561     EE E0 D7 D1 
17565     D2 DA E2 ED | 	byte	$15, $1d, $24, $25, $1f, $18, $0d, $00, $ee, $e0, $d7, $d1, $d2, $da, $e2, $ed
17569     F8 FD F4 E8 
1756d     E1 E1 E2 E4 
17571     ED F2 F4 F8 
17575     FE 02 07 08 | 	byte	$f8, $fd, $f4, $e8, $e1, $e1, $e2, $e4, $ed, $f2, $f4, $f8, $fe, $02, $07, $08
17579     0A 08 07 02 
1757d     02 05 05 07 
17581     0D 0B 02 FA 
17585     F4 F4 F7 FE | 	byte	$0a, $08, $07, $02, $02, $05, $05, $07, $0d, $0b, $02, $fa, $f4, $f4, $f7, $fe
17589     0D 1B 27 2E 
1758d     32 32 35 37 
17591     37 31 2B 22 
17595     11 00 F4 EE | 	byte	$0d, $1b, $27, $2e, $32, $32, $35, $37, $37, $31, $2b, $22, $11, $00, $f4, $ee
17599     E8 E2 E2 EA 
1759d     F5 FE 00 FD 
175a1     FA FD FE 01 
175a5     00 F4 E8 DE | 	byte	$e8, $e2, $e2, $ea, $f5, $fe, $00, $fd, $fa, $fd, $fe, $01, $00, $f4, $e8, $de
175a9     DD E4 ED F5 
175ad     FA FD FD FD 
175b1     FA FA FB 02 
175b5     0E 11 0F 05 | 	byte	$dd, $e4, $ed, $f5, $fa, $fd, $fd, $fd, $fa, $fa, $fb, $02, $0e, $11, $0f, $05
175b9     F8 F5 FE 05 
175bd     0F 14 14 12 
175c1     0F 0B 05 04 
175c5     02 00 F4 EE | 	byte	$f8, $f5, $fe, $05, $0f, $14, $14, $12, $0f, $0b, $05, $04, $02, $00, $f4, $ee
175c9     EE F1 F5 FE 
175cd     07 0E 0E 08 
175d1     00 F7 EE E8 
175d5     E7 E7 EA ED | 	byte	$ee, $f1, $f5, $fe, $07, $0e, $0e, $08, $00, $f7, $ee, $e8, $e7, $e7, $ea, $ed
175d9     EE F0 F2 F7 
175dd     FE 02 00 FA 
175e1     F8 FD 02 08 
175e5     0F 15 21 28 | 	byte	$ee, $f0, $f2, $f7, $fe, $02, $00, $fa, $f8, $fd, $02, $08, $0f, $15, $21, $28
175e9     2A 28 22 1A 
175ed     18 1A 1D 1A 
175f1     1B 1F 21 1D 
175f5     17 12 14 1B | 	byte	$2a, $28, $22, $1a, $18, $1a, $1d, $1a, $1b, $1f, $21, $1d, $17, $12, $14, $1b
175f9     1D 1A 11 0E 
175fd     0B 05 FD F2 
17601     F0 F7 FE 0A 
17605     0B 05 FB F4 | 	byte	$1d, $1a, $11, $0e, $0b, $05, $fd, $f2, $f0, $f7, $fe, $0a, $0b, $05, $fb, $f4
17609     F2 F4 F7 F4 
1760d     E8 E0 D4 CD 
17611     C8 C8 CA D2 
17615     DE EB F8 07 | 	byte	$f2, $f4, $f7, $f4, $e8, $e0, $d4, $cd, $c8, $c8, $ca, $d2, $de, $eb, $f8, $07
17619     15 1D 22 1F 
1761d     17 0E 05 00 
17621     F5 EA E0 D4 
17625     CE CD D0 D7 | 	byte	$15, $1d, $22, $1f, $17, $0e, $05, $00, $f5, $ea, $e0, $d4, $ce, $cd, $d0, $d7
17629     DE E4 F0 FE 
1762d     0D 18 22 2B 
17631     2E 2E 2E 2B 
17635     2D 32 3D 42 | 	byte	$de, $e4, $f0, $fe, $0d, $18, $22, $2b, $2e, $2e, $2e, $2b, $2d, $32, $3d, $42
17639     41 3A 34 2E 
1763d     22 11 00 F1 
17641     E7 E7 EB F2 
17645     F8 FB FA F5 | 	byte	$41, $3a, $34, $2e, $22, $11, $00, $f1, $e7, $e7, $eb, $f2, $f8, $fb, $fa, $f5
17649     F1 E8 DD D8 
1764d     DD E5 EB F0 
17651     F1 F2 F8 FE 
17655     08 0D 0E 11 | 	byte	$f1, $e8, $dd, $d8, $dd, $e5, $eb, $f0, $f1, $f2, $f8, $fe, $08, $0d, $0e, $11
17659     0E 0B 05 00 
1765d     F5 F1 F5 F8 
17661     F8 F8 F4 F0 
17665     EA EA ED F1 | 	byte	$0e, $0b, $05, $00, $f5, $f1, $f5, $f8, $f8, $f8, $f4, $f0, $ea, $ea, $ed, $f1
17669     F8 FE 04 05 
1766d     07 08 0F 14 
17671     12 11 0E 0D 
17675     0B 0E 14 17 | 	byte	$f8, $fe, $04, $05, $07, $08, $0f, $14, $12, $11, $0e, $0d, $0b, $0e, $14, $17
17679     1A 1A 11 07 
1767d     FB F8 F8 FB 
17681     FE 0A 15 1E 
17685     21 1D 11 05 | 	byte	$1a, $1a, $11, $07, $fb, $f8, $f8, $fb, $fe, $0a, $15, $1e, $21, $1d, $11, $05
17689     FD F1 E5 DD 
1768d     D1 CB C7 C8 
17691     CB CE D0 D0 
17695     D8 E7 FE 0A | 	byte	$fd, $f1, $e5, $dd, $d1, $cb, $c7, $c8, $cb, $ce, $d0, $d0, $d8, $e7, $fe, $0a
17699     12 1A 1E 17 
1769d     11 0E 0F 11 
176a1     14 18 1A 14 
176a5     0E 0D 11 18 | 	byte	$12, $1a, $1e, $17, $11, $0e, $0f, $11, $14, $18, $1a, $14, $0e, $0d, $11, $18
176a9     1D 1E 21 22 
176ad     1F 1D 1E 24 
176b1     2A 2E 2E 25 
176b5     1F 17 0D 00 | 	byte	$1d, $1e, $21, $22, $1f, $1d, $1e, $24, $2a, $2e, $2e, $25, $1f, $17, $0d, $00
176b9     EE DD D1 C8 
176bd     C7 D0 DB E7 
176c1     F1 F4 EE E8 
176c5     E4 E1 E5 ED | 	byte	$ee, $dd, $d1, $c8, $c7, $d0, $db, $e7, $f1, $f4, $ee, $e8, $e4, $e1, $e5, $ed
176c9     F5 F7 EE E5 
176cd     E0 E1 EA F8 
176d1     0A 1E 32 3D 
176d5     3A 2F 1F 12 | 	byte	$f5, $f7, $ee, $e5, $e0, $e1, $ea, $f8, $0a, $1e, $32, $3d, $3a, $2f, $1f, $12
176d9     07 FB F0 E0 
176dd     D1 C8 C8 D0 
176e1     E0 EE FB 07 
176e5     14 1E 2A 32 | 	byte	$07, $fb, $f0, $e0, $d1, $c8, $c8, $d0, $e0, $ee, $fb, $07, $14, $1e, $2a, $32
176e9     3A 3B 38 2E 
176ed     22 14 08 00 
176f1     F1 E5 E2 E7 
176f5     F1 FB 00 05 | 	byte	$3a, $3b, $38, $2e, $22, $14, $08, $00, $f1, $e5, $e2, $e7, $f1, $fb, $00, $05
176f9     0E 15 17 12 
176fd     05 F7 E8 DE 
17701     DA D7 DB E2 
17705     EB F5 FA FE | 	byte	$0e, $15, $17, $12, $05, $f7, $e8, $de, $da, $d7, $db, $e2, $eb, $f5, $fa, $fe
17709     08 0B 0A 05 
1770d     00 FA F5 F1 
17711     EE EB EB ED 
17715     F1 F8 FE 0B | 	byte	$08, $0b, $0a, $05, $00, $fa, $f5, $f1, $ee, $eb, $eb, $ed, $f1, $f8, $fe, $0b
17719     18 21 25 27 
1771d     27 2A 2A 28 
17721     28 2B 2D 31 
17725     35 32 2A 1D | 	byte	$18, $21, $25, $27, $27, $2a, $2a, $28, $28, $2b, $2d, $31, $35, $32, $2a, $1d
17729     14 08 07 05 
1772d     00 EE DD D1 
17731     CE D2 E1 EE 
17735     F8 FD 01 08 | 	byte	$14, $08, $07, $05, $00, $ee, $dd, $d1, $ce, $d2, $e1, $ee, $f8, $fd, $01, $08
17739     0B 08 05 02 
1773d     FA EE E2 D7 
17741     D2 D5 D5 D4 
17745     D1 D0 D0 D4 | 	byte	$0b, $08, $05, $02, $fa, $ee, $e2, $d7, $d2, $d5, $d5, $d4, $d1, $d0, $d0, $d4
17749     DA E1 ED FE 
1774d     0F 21 2F 34 
17751     2E 28 22 1F 
17755     1F 24 2F 3B | 	byte	$da, $e1, $ed, $fe, $0f, $21, $2f, $34, $2e, $28, $22, $1f, $1f, $24, $2f, $3b
17759     3F 3D 34 2E 
1775d     25 1D 17 0E 
17761     0A 04 01 04 
17765     02 FA EE E0 | 	byte	$3f, $3d, $34, $2e, $25, $1d, $17, $0e, $0a, $04, $01, $04, $02, $fa, $ee, $e0
17769     D7 D5 DA E4 
1776d     ED F8 02 0B 
17771     08 07 07 05 
17775     FD F4 EE F0 | 	byte	$d7, $d5, $da, $e4, $ed, $f8, $02, $0b, $08, $07, $07, $05, $fd, $f4, $ee, $f0
17779     F2 F8 FD FE 
1777d     FA F7 F7 F7 
17781     F8 F5 F4 F0 
17785     E8 E0 DA D7 | 	byte	$f2, $f8, $fd, $fe, $fa, $f7, $f7, $f7, $f8, $f5, $f4, $f0, $e8, $e0, $da, $d7
17789     D8 D8 D7 D7 
1778d     DB E1 ED F5 
17791     FE 07 12 1E 
17795     22 1A 11 0F | 	byte	$d8, $d8, $d7, $d7, $db, $e1, $ed, $f5, $fe, $07, $12, $1e, $22, $1a, $11, $0f
17799     14 1B 1F 28 
1779d     31 2E 25 24 
177a1     25 22 1B 11 
177a5     00 F1 E0 D7 | 	byte	$14, $1b, $1f, $28, $31, $2e, $25, $24, $25, $22, $1b, $11, $00, $f1, $e0, $d7
177a9     D5 DB E5 F2 
177ad     FE 05 05 00 
177b1     FD FE 07 12 
177b5     1B 24 2B 2E | 	byte	$d5, $db, $e5, $f2, $fe, $05, $05, $00, $fd, $fe, $07, $12, $1b, $24, $2b, $2e
177b9     2E 2E 28 21 
177bd     1E 1E 1A 11 
177c1     05 FA EB EA 
177c5     EE F4 FB FD | 	byte	$2e, $2e, $28, $21, $1e, $1e, $1a, $11, $05, $fa, $eb, $ea, $ee, $f4, $fb, $fd
177c9     FA F7 F1 E8 
177cd     E0 DA D7 DB 
177d1     E7 EE F7 F8 
177d5     F4 EE EA ED | 	byte	$fa, $f7, $f1, $e8, $e0, $da, $d7, $db, $e7, $ee, $f7, $f8, $f4, $ee, $ea, $ed
177d9     F0 F0 F1 F2 
177dd     F8 02 0D 14 
177e1     18 1A 17 11 
177e5     11 0E 05 00 | 	byte	$f0, $f0, $f1, $f2, $f8, $02, $0d, $14, $18, $1a, $17, $11, $11, $0e, $05, $00
177e9     FA F0 EE F0 
177ed     F5 FD 02 04 
177f1     05 07 08 0A 
177f5     0B 07 00 F8 | 	byte	$fa, $f0, $ee, $f0, $f5, $fd, $02, $04, $05, $07, $08, $0a, $0b, $07, $00, $f8
177f9     F5 F8 FE 01 
177fd     02 00 FA F5 
17801     F4 F2 F7 FB 
17805     FE FE 04 0B | 	byte	$f5, $f8, $fe, $01, $02, $00, $fa, $f5, $f4, $f2, $f7, $fb, $fe, $fe, $04, $0b
17809     0F 0F 0F 0E 
1780d     0F 14 1B 25 
17811     2B 2E 2E 2E 
17815     22 1A 14 0D | 	byte	$0f, $0f, $0f, $0e, $0f, $14, $1b, $25, $2b, $2e, $2e, $2e, $22, $1a, $14, $0d
17819     05 FE F7 F4 
1781d     ED E7 ED F5 
17821     FE 0A 0F 0E 
17825     08 00 F8 F2 | 	byte	$05, $fe, $f7, $f4, $ed, $e7, $ed, $f5, $fe, $0a, $0f, $0e, $08, $00, $f8, $f2
17829     F1 EE EB E8 
1782d     E7 EB F0 F4 
17831     F8 FD 02 0A 
17835     11 1A 21 25 | 	byte	$f1, $ee, $eb, $e8, $e7, $eb, $f0, $f4, $f8, $fd, $02, $0a, $11, $1a, $21, $25
17839     25 22 1A 0D 
1783d     01 FD F7 F1 
17841     EB E2 DA D1 
17845     C2 BD BE C8 | 	byte	$25, $22, $1a, $0d, $01, $fd, $f7, $f1, $eb, $e2, $da, $d1, $c2, $bd, $be, $c8
17849     D4 E0 EA F2 
1784d     FB 02 0A 0B 
17851     0B 08 01 FD 
17855     FA FD 01 05 | 	byte	$d4, $e0, $ea, $f2, $fb, $02, $0a, $0b, $0b, $08, $01, $fd, $fa, $fd, $01, $05
17859     05 05 08 0B 
1785d     0E 15 1F 27 
17861     2B 2E 28 1F 
17865     1A 17 12 12 | 	byte	$05, $05, $08, $0b, $0e, $15, $1f, $27, $2b, $2e, $28, $1f, $1a, $17, $12, $12
17869     18 1E 21 27 
1786d     2D 2E 28 24 
17871     22 1F 17 11 
17875     08 04 00 FD | 	byte	$18, $1e, $21, $27, $2d, $2e, $28, $24, $22, $1f, $17, $11, $08, $04, $00, $fd
17879     F7 F2 F2 F2 
1787d     F8 FE 02 01 
17881     F7 E8 DA CE 
17885     C5 C0 BE C1 | 	byte	$f7, $f2, $f2, $f2, $f8, $fe, $02, $01, $f7, $e8, $da, $ce, $c5, $c0, $be, $c1
17889     C4 CA D2 E1 
1788d     F1 FB 02 0A 
17891     12 18 1D 22 
17895     27 25 1D 11 | 	byte	$c4, $ca, $d2, $e1, $f1, $fb, $02, $0a, $12, $18, $1d, $22, $27, $25, $1d, $11
17899     00 F4 ED E5 
1789d     E1 E1 E7 F0 
178a1     F8 FB FA F4 
178a5     F0 EB EA E8 | 	byte	$00, $f4, $ed, $e5, $e1, $e1, $e7, $f0, $f8, $fb, $fa, $f4, $f0, $eb, $ea, $e8
178a9     EB EB EA E8 
178ad     ED F2 FA FE 
178b1     FB F8 FA FE 
178b5     05 07 02 FE | 	byte	$eb, $eb, $ea, $e8, $ed, $f2, $fa, $fe, $fb, $f8, $fa, $fe, $05, $07, $02, $fe
178b9     FA F8 FB FE 
178bd     0A 15 27 32 
178c1     3B 3D 3D 41 
178c5     48 4D 48 3B | 	byte	$fa, $f8, $fb, $fe, $0a, $15, $27, $32, $3b, $3d, $3d, $41, $48, $4d, $48, $3b
178c9     31 2A 22 17 
178cd     0B 02 05 0B 
178d1     0D 05 FD F1 
178d5     EA E8 EA F2 | 	byte	$31, $2a, $22, $17, $0b, $02, $05, $0b, $0d, $05, $fd, $f1, $ea, $e8, $ea, $f2
178d9     FB FE 00 F7 
178dd     EE EA E5 DD 
178e1     D7 D8 DD E1 
178e5     E1 DE E1 E5 | 	byte	$fb, $fe, $00, $f7, $ee, $ea, $e5, $dd, $d7, $d8, $dd, $e1, $e1, $de, $e1, $e5
178e9     E7 EB ED EA 
178ed     E7 E7 ED F7 
178f1     04 0F 14 17 
178f5     18 17 17 1A | 	byte	$e7, $eb, $ed, $ea, $e7, $e7, $ed, $f7, $04, $0f, $14, $17, $18, $17, $17, $1a
178f9     1F 27 2A 25 
178fd     1F 17 0E 07 
17901     00 FE 02 0A 
17905     15 1B 17 0E | 	byte	$1f, $27, $2a, $25, $1f, $17, $0e, $07, $00, $fe, $02, $0a, $15, $1b, $17, $0e
17909     08 05 01 FE 
1790d     F8 F2 F1 F5 
17911     FD FE FE FD 
17915     F8 F1 EA E0 | 	byte	$08, $05, $01, $fe, $f8, $f2, $f1, $f5, $fd, $fe, $fe, $fd, $f8, $f1, $ea, $e0
17919     D8 D1 CD CD 
1791d     D1 D7 DB DE 
17921     E4 EA F1 FB 
17925     0A 15 21 28 | 	byte	$d8, $d1, $cd, $cd, $d1, $d7, $db, $de, $e4, $ea, $f1, $fb, $0a, $15, $21, $28
17929     2B 28 22 1B 
1792d     17 14 12 15 
17931     1A 1E 22 27 
17935     27 24 22 21 | 	byte	$2b, $28, $22, $1b, $17, $14, $12, $15, $1a, $1e, $22, $27, $27, $24, $22, $21
17939     1F 1A 11 02 
1793d     F4 F0 F2 F7 
17941     FB FE 00 00 
17945     FD F5 EE EB | 	byte	$1f, $1a, $11, $02, $f4, $f0, $f2, $f7, $fb, $fe, $00, $00, $fd, $f5, $ee, $eb
17949     EB ED F1 F4 
1794d     F8 FA FA FE 
17951     02 07 01 FB 
17955     F7 FB 04 0E | 	byte	$eb, $ed, $f1, $f4, $f8, $fa, $fa, $fe, $02, $07, $01, $fb, $f7, $fb, $04, $0e
17959     0F 0E 0B 05 
1795d     05 0E 1A 27 
17961     2F 2E 22 17 
17965     0E 08 00 F8 | 	byte	$0f, $0e, $0b, $05, $05, $0e, $1a, $27, $2f, $2e, $22, $17, $0e, $08, $00, $f8
17969     F1 EE ED ED 
1796d     F1 F1 EE F2 
17971     FE 0D 1A 1F 
17975     25 2A 2F 31 | 	byte	$f1, $ee, $ed, $ed, $f1, $f1, $ee, $f2, $fe, $0d, $1a, $1f, $25, $2a, $2f, $31
17979     2F 28 1E 14 
1797d     08 FA EE E0 
17981     D4 CB C0 B4 
17985     B1 B7 BB C1 | 	byte	$2f, $28, $1e, $14, $08, $fa, $ee, $e0, $d4, $cb, $c0, $b4, $b1, $b7, $bb, $c1
17989     C4 D0 DE F1 
1798d     FE 0F 1D 24 
17991     27 22 17 05 
17995     F1 DD CB C2 | 	byte	$c4, $d0, $de, $f1, $fe, $0f, $1d, $24, $27, $22, $17, $05, $f1, $dd, $cb, $c2
17999     C2 CA D5 E7 
1799d     F8 0A 15 1E 
179a1     25 27 25 22 
179a5     17 05 FA F8 | 	byte	$c2, $ca, $d5, $e7, $f8, $0a, $15, $1e, $25, $27, $25, $22, $17, $05, $fa, $f8
179a9     FE 07 05 02 
179ad     FD F4 EB E7 
179b1     EB F2 F7 FB 
179b5     04 0B 0D 0B | 	byte	$fe, $07, $05, $02, $fd, $f4, $eb, $e7, $eb, $f2, $f7, $fb, $04, $0b, $0d, $0b
179b9     0B 11 18 1E 
179bd     22 27 28 2D 
179c1     2E 35 37 31 
179c5     28 1E 18 14 | 	byte	$0b, $11, $18, $1e, $22, $27, $28, $2d, $2e, $35, $37, $31, $28, $1e, $18, $14
179c9     0B 00 F8 F4 
179cd     F5 FA 04 0E 
179d1     14 14 12 11 
179d5     0B 00 F4 E4 | 	byte	$0b, $00, $f8, $f4, $f5, $fa, $04, $0e, $14, $14, $12, $11, $0b, $00, $f4, $e4
179d9     D7 CA C1 BE 
179dd     C2 D0 DE EB 
179e1     F8 FE 05 05 
179e5     00 F7 EB EA | 	byte	$d7, $ca, $c1, $be, $c2, $d0, $de, $eb, $f8, $fe, $05, $05, $00, $f7, $eb, $ea
179e9     ED F2 F5 FB 
179ed     02 0A 12 1A 
179f1     1D 1D 17 0E 
179f5     07 01 FE FE | 	byte	$ed, $f2, $f5, $fb, $02, $0a, $12, $1a, $1d, $1d, $17, $0e, $07, $01, $fe, $fe
179f9     08 0D 0D 0B 
179fd     08 02 FA EE 
17a01     E5 DE D8 D7 
17a05     DA DE E2 E2 | 	byte	$08, $0d, $0d, $0b, $08, $02, $fa, $ee, $e5, $de, $d8, $d7, $da, $de, $e2, $e2
17a09     DD DA DB E1 
17a0d     E8 EE F4 FB 
17a11     02 0A 0D 11 
17a15     18 1E 27 31 | 	byte	$dd, $da, $db, $e1, $e8, $ee, $f4, $fb, $02, $0a, $0d, $11, $18, $1e, $27, $31
17a19     38 38 31 28 
17a1d     22 1F 1D 14 
17a21     0B 00 FA FA 
17a25     FE 08 0B 0B | 	byte	$38, $38, $31, $28, $22, $1f, $1d, $14, $0b, $00, $fa, $fa, $fe, $08, $0b, $0b
17a29     0A 08 0E 15 
17a2d     15 14 11 0F 
17a31     12 18 21 27 
17a35     28 25 1D 0E | 	byte	$0a, $08, $0e, $15, $15, $14, $11, $0f, $12, $18, $21, $27, $28, $25, $1d, $0e
17a39     00 F1 ED EE 
17a3d     ED EB EA E8 
17a41     E5 E4 E4 E0 
17a45     D8 D5 D7 DD | 	byte	$00, $f1, $ed, $ee, $ed, $eb, $ea, $e8, $e5, $e4, $e4, $e0, $d8, $d5, $d7, $dd
17a49     E5 F1 FD 08 
17a4d     12 17 12 08 
17a51     00 FA F8 FD 
17a55     04 0D 0E 0D | 	byte	$e5, $f1, $fd, $08, $12, $17, $12, $08, $00, $fa, $f8, $fd, $04, $0d, $0e, $0d
17a59     0D 0E 12 15 
17a5d     15 15 0F 0B 
17a61     05 FD F8 F7 
17a65     F8 FE 07 0E | 	byte	$0d, $0e, $12, $15, $15, $15, $0f, $0b, $05, $fd, $f8, $f7, $f8, $fe, $07, $0e
17a69     14 17 15 0E 
17a6d     05 FD FA FB 
17a71     FE 00 00 FD 
17a75     FE 05 0D 14 | 	byte	$14, $17, $15, $0e, $05, $fd, $fa, $fb, $fe, $00, $00, $fd, $fe, $05, $0d, $14
17a79     18 17 12 08 
17a7d     00 F5 EE EB 
17a81     F1 FA 02 08 
17a85     0B 12 18 1E | 	byte	$18, $17, $12, $08, $00, $f5, $ee, $eb, $f1, $fa, $02, $08, $0b, $12, $18, $1e
17a89     1E 1D 17 11 
17a8d     0B 02 00 00 
17a91     01 04 05 02 
17a95     FB F4 F4 F5 | 	byte	$1e, $1d, $17, $11, $0b, $02, $00, $00, $01, $04, $05, $02, $fb, $f4, $f4, $f5
17a99     F5 F4 EE E8 
17a9d     E7 EB F5 FE 
17aa1     08 11 14 11 
17aa5     0B FA E8 E1 | 	byte	$f5, $f4, $ee, $e8, $e7, $eb, $f5, $fe, $08, $11, $14, $11, $0b, $fa, $e8, $e1
17aa9     E2 E5 E8 F0 
17aad     F7 F5 F1 F1 
17ab1     F2 FB 07 12 
17ab5     1A 1F 1F 18 | 	byte	$e2, $e5, $e8, $f0, $f7, $f5, $f1, $f1, $f2, $fb, $07, $12, $1a, $1f, $1f, $18
17ab9     0E 02 FB F7 
17abd     F4 F1 E8 E0 
17ac1     D8 D8 DE E5 
17ac5     E8 E8 EB F0 | 	byte	$0e, $02, $fb, $f7, $f4, $f1, $e8, $e0, $d8, $d8, $de, $e5, $e8, $e8, $eb, $f0
17ac9     F7 FE 04 07 
17acd     08 0B 14 1D 
17ad1     1F 1A 0D 00 
17ad5     F5 F1 F4 F8 | 	byte	$f7, $fe, $04, $07, $08, $0b, $14, $1d, $1f, $1a, $0d, $00, $f5, $f1, $f4, $f8
17ad9     FD 01 02 04 
17add     07 0A 0D 0F 
17ae1     11 0E 0B 0B 
17ae5     0A 08 08 0D | 	byte	$fd, $01, $02, $04, $07, $0a, $0d, $0f, $11, $0e, $0b, $0b, $0a, $08, $08, $0d
17ae9     0F 12 15 17 
17aed     14 0D 05 02 
17af1     05 0B 0E 0B 
17af5     00 F4 F1 F1 | 	byte	$0f, $12, $15, $17, $14, $0d, $05, $02, $05, $0b, $0e, $0b, $00, $f4, $f1, $f1
17af9     F1 F0 ED E8 
17afd     E4 E1 DE DD 
17b01     DA DB DD E4 
17b05     F0 FE 08 12 | 	byte	$f1, $f0, $ed, $e8, $e4, $e1, $de, $dd, $da, $db, $dd, $e4, $f0, $fe, $08, $12
17b09     1A 1D 1B 17 
17b0d     11 08 02 FE 
17b11     FE 04 0A 0A 
17b15     0D 0D 0D 0E | 	byte	$1a, $1d, $1b, $17, $11, $08, $02, $fe, $fe, $04, $0a, $0a, $0d, $0d, $0d, $0e
17b19     14 1B 24 25 
17b1d     25 22 1F 1D 
17b21     1D 1A 17 14 
17b25     0E 0B 02 F7 | 	byte	$14, $1b, $24, $25, $25, $22, $1f, $1d, $1d, $1a, $17, $14, $0e, $0b, $02, $f7
17b29     EA DD D1 C7 
17b2d     C2 C2 CA D0 
17b31     D8 DE E1 E2 
17b35     E7 EB ED EE | 	byte	$ea, $dd, $d1, $c7, $c2, $c2, $ca, $d0, $d8, $de, $e1, $e2, $e7, $eb, $ed, $ee
17b39     F0 F1 F2 F1 
17b3d     F1 F2 F8 FE 
17b41     0F 1A 21 25 
17b45     25 1D 11 0B | 	byte	$f0, $f1, $f2, $f1, $f1, $f2, $f8, $fe, $0f, $1a, $21, $25, $25, $1d, $11, $0b
17b49     0A 0F 1B 22 
17b4d     25 24 22 1B 
17b51     11 05 FD FD 
17b55     02 0D 15 21 | 	byte	$0a, $0f, $1b, $22, $25, $24, $22, $1b, $11, $05, $fd, $fd, $02, $0d, $15, $21
17b59     25 24 22 21 
17b5d     1F 1E 1A 17 
17b61     12 0D 02 F4 
17b65     EB E5 DD D8 | 	byte	$25, $24, $22, $21, $1f, $1e, $1a, $17, $12, $0d, $02, $f4, $eb, $e5, $dd, $d8
17b69     DB E1 E7 E8 
17b6d     EB F2 FE 08 
17b71     11 14 11 0B 
17b75     05 04 00 F7 | 	byte	$db, $e1, $e7, $e8, $eb, $f2, $fe, $08, $11, $14, $11, $0b, $05, $04, $00, $f7
17b79     F1 F2 F7 FE 
17b7d     08 0D 08 02 
17b81     02 0A 12 1A 
17b85     1F 22 22 1D | 	byte	$f1, $f2, $f7, $fe, $08, $0d, $08, $02, $02, $0a, $12, $1a, $1f, $22, $22, $1d
17b89     0E 00 F5 EB 
17b8d     E5 E1 DD DB 
17b91     DB DD E0 E5 
17b95     F0 FB 07 0D | 	byte	$0e, $00, $f5, $eb, $e5, $e1, $dd, $db, $db, $dd, $e0, $e5, $f0, $fb, $07, $0d
17b99     0E 0E 0D 0B 
17b9d     0F 18 24 2D 
17ba1     32 34 2E 22 
17ba5     12 00 EE DD | 	byte	$0e, $0e, $0d, $0b, $0f, $18, $24, $2d, $32, $34, $2e, $22, $12, $00, $ee, $dd
17ba9     D1 C7 C8 D0 
17bad     D5 DB E1 E5 
17bb1     E5 E5 E7 F2 
17bb5     FE 12 1F 22 | 	byte	$d1, $c7, $c8, $d0, $d5, $db, $e1, $e5, $e5, $e5, $e7, $f2, $fe, $12, $1f, $22
17bb9     25 2A 31 34 
17bbd     34 2E 25 1A 
17bc1     11 0B 00 F7 
17bc5     F0 EB F0 F8 | 	byte	$25, $2a, $31, $34, $34, $2e, $25, $1a, $11, $0b, $00, $f7, $f0, $eb, $f0, $f8
17bc9     05 11 18 18 
17bcd     14 11 07 F7 
17bd1     EB E5 E8 EB 
17bd5     EA E8 EB EE | 	byte	$05, $11, $18, $18, $14, $11, $07, $f7, $eb, $e5, $e8, $eb, $ea, $e8, $eb, $ee
17bd9     F2 F8 FE 08 
17bdd     08 02 FE FB 
17be1     F5 EE E8 E5 
17be5     E5 EA F0 F2 | 	byte	$f2, $f8, $fe, $08, $08, $02, $fe, $fb, $f5, $ee, $e8, $e5, $e5, $ea, $f0, $f2
17be9     EE E8 E5 E2 
17bed     E2 E7 F0 F2 
17bf1     EE ED ED F0 
17bf5     F8 07 15 27 | 	byte	$ee, $e8, $e5, $e2, $e2, $e7, $f0, $f2, $ee, $ed, $ed, $f0, $f8, $07, $15, $27
17bf9     2F 37 37 34 
17bfd     2E 28 1F 17 
17c01     05 F1 E2 DE 
17c05     DE E7 F5 FE | 	byte	$2f, $37, $37, $34, $2e, $28, $1f, $17, $05, $f1, $e2, $de, $de, $e7, $f5, $fe
17c09     0E 1B 27 2F 
17c0d     34 34 2E 24 
17c11     17 05 F7 EA 
17c15     E0 D7 D1 D4 | 	byte	$0e, $1b, $27, $2f, $34, $34, $2e, $24, $17, $05, $f7, $ea, $e0, $d7, $d1, $d4
17c19     DE EA F7 FE 
17c1d     02 07 07 07 
17c21     07 08 0D 12 
17c25     14 0E 05 01 | 	byte	$de, $ea, $f7, $fe, $02, $07, $07, $07, $07, $08, $0d, $12, $14, $0e, $05, $01
17c29     FE FA F4 EB 
17c2d     EA EB EE F1 
17c31     FA 08 15 1E 
17c35     25 25 22 1F | 	byte	$fe, $fa, $f4, $eb, $ea, $eb, $ee, $f1, $fa, $08, $15, $1e, $25, $25, $22, $1f
17c39     18 0E 02 F4 
17c3d     EB E5 E2 E2 
17c41     E7 EA EE F1 
17c45     F0 F2 FA 02 | 	byte	$18, $0e, $02, $f4, $eb, $e5, $e2, $e2, $e7, $ea, $ee, $f1, $f0, $f2, $fa, $02
17c49     0A 0F 15 14 
17c4d     0E 0B 00 F7 
17c51     F2 F5 F8 F8 
17c55     F4 EB E7 E7 | 	byte	$0a, $0f, $15, $14, $0e, $0b, $00, $f7, $f2, $f5, $f8, $f8, $f4, $eb, $e7, $e7
17c59     ED F4 F7 F7 
17c5d     F7 F8 FE 04 
17c61     0B 12 18 1E 
17c65     24 28 22 17 | 	byte	$ed, $f4, $f7, $f7, $f7, $f8, $fe, $04, $0b, $12, $18, $1e, $24, $28, $22, $17
17c69     0B 08 08 0B 
17c6d     14 21 2D 38 
17c71     3F 3E 37 35 
17c75     35 2F 27 1D | 	byte	$0b, $08, $08, $0b, $14, $21, $2d, $38, $3f, $3e, $37, $35, $35, $2f, $27, $1d
17c79     14 0B 05 02 
17c7d     FD F7 F2 ED 
17c81     E8 E4 E1 DE 
17c85     D5 CB CD D2 | 	byte	$14, $0b, $05, $02, $fd, $f7, $f2, $ed, $e8, $e4, $e1, $de, $d5, $cb, $cd, $d2
17c89     DA DE E4 E8 
17c8d     E8 E1 DD DD 
17c91     DD E1 EB FB 
17c95     08 0F 15 18 | 	byte	$da, $de, $e4, $e8, $e8, $e1, $dd, $dd, $dd, $e1, $eb, $fb, $08, $0f, $15, $18
17c99     17 11 0B 01 
17c9d     FA F2 F2 F8 
17ca1     04 0F 17 1A 
17ca5     1D 1E 21 22 | 	byte	$17, $11, $0b, $01, $fa, $f2, $f2, $f8, $04, $0f, $17, $1a, $1d, $1e, $21, $22
17ca9     1F 18 0E 02 
17cad     FD FD 04 0F 
17cb1     15 15 0E 02 
17cb5     F4 E8 E2 DD | 	byte	$1f, $18, $0e, $02, $fd, $fd, $04, $0f, $15, $15, $0e, $02, $f4, $e8, $e2, $dd
17cb9     DA D8 D7 DE 
17cbd     F0 FE 0F 17 
17cc1     1A 18 1E 25 
17cc5     2B 28 1F 17 | 	byte	$da, $d8, $d7, $de, $f0, $fe, $0f, $17, $1a, $18, $1e, $25, $2b, $28, $1f, $17
17cc9     11 07 00 EE 
17ccd     E2 E1 EB F7 
17cd1     FE FE FA F4 
17cd5     F1 F4 EE E2 | 	byte	$11, $07, $00, $ee, $e2, $e1, $eb, $f7, $fe, $fe, $fa, $f4, $f1, $f4, $ee, $e2
17cd9     D7 D1 C5 C0 
17cdd     C0 C7 D4 E5 
17ce1     F1 FE 02 00 
17ce5     F7 F4 F7 FE | 	byte	$d7, $d1, $c5, $c0, $c0, $c7, $d4, $e5, $f1, $fe, $02, $00, $f7, $f4, $f7, $fe
17ce9     0F 21 2D 34 
17ced     34 2E 2E 2E 
17cf1     2E 28 1F 18 
17cf5     11 07 FB F1 | 	byte	$0f, $21, $2d, $34, $34, $2e, $2e, $2e, $2e, $28, $1f, $18, $11, $07, $fb, $f1
17cf9     E8 E2 DA D7 
17cfd     DB E7 F0 FA 
17d01     FA F4 F1 F2 
17d05     FD 07 0D 11 | 	byte	$e8, $e2, $da, $d7, $db, $e7, $f0, $fa, $fa, $f4, $f1, $f2, $fd, $07, $0d, $11
17d09     14 12 0B 04 
17d0d     00 02 07 05 
17d11     FD F7 F1 EE 
17d15     F0 F2 FA 04 | 	byte	$14, $12, $0b, $04, $00, $02, $07, $05, $fd, $f7, $f1, $ee, $f0, $f2, $fa, $04
17d19     11 1F 28 2B 
17d1d     24 1D 18 15 
17d21     14 1A 1E 24 
17d25     27 27 24 22 | 	byte	$11, $1f, $28, $2b, $24, $1d, $18, $15, $14, $1a, $1e, $24, $27, $27, $24, $22
17d29     1D 11 02 F4 
17d2d     E5 E0 DE E4 
17d31     E7 F0 F7 FE 
17d35     04 05 00 F4 | 	byte	$1d, $11, $02, $f4, $e5, $e0, $de, $e4, $e7, $f0, $f7, $fe, $04, $05, $00, $f4
17d39     E8 D7 D1 D2 
17d3d     DB E4 EB F1 
17d41     F7 F7 F1 ED 
17d45     ED F4 FA F7 | 	byte	$e8, $d7, $d1, $d2, $db, $e4, $eb, $f1, $f7, $f7, $f1, $ed, $ed, $f4, $fa, $f7
17d49     F1 EE EB EB 
17d4d     ED ED F0 F5 
17d51     FD 07 15 2A 
17d55     37 3A 35 32 | 	byte	$f1, $ee, $eb, $eb, $ed, $ed, $f0, $f5, $fd, $07, $15, $2a, $37, $3a, $35, $32
17d59     35 3D 42 47 
17d5d     4B 48 3F 34 
17d61     25 17 0D 05 
17d65     00 FE FD FB | 	byte	$35, $3d, $42, $47, $4b, $48, $3f, $34, $25, $17, $0d, $05, $00, $fe, $fd, $fb
17d69     FA F8 F8 F5 
17d6d     F0 EE EB E4 
17d71     E1 E5 E8 ED 
17d75     F1 F2 EE E5 | 	byte	$fa, $f8, $f8, $f5, $f0, $ee, $eb, $e4, $e1, $e5, $e8, $ed, $f1, $f2, $ee, $e5
17d79     E2 E2 E0 DD 
17d7d     D7 D4 D2 DA 
17d81     E7 F8 0A 1B 
17d85     24 27 2A 2B | 	byte	$e2, $e2, $e0, $dd, $d7, $d4, $d2, $da, $e7, $f8, $0a, $1b, $24, $27, $2a, $2b
17d89     2E 25 1D 15 
17d8d     0F 0B 02 FD 
17d91     FE 0B 12 11 
17d95     11 15 18 17 | 	byte	$2e, $25, $1d, $15, $0f, $0b, $02, $fd, $fe, $0b, $12, $11, $11, $15, $18, $17
17d99     11 12 14 14 
17d9d     12 0E 08 FD 
17da1     EE E0 DA D7 
17da5     D2 CB CA CE | 	byte	$11, $12, $14, $14, $12, $0e, $08, $fd, $ee, $e0, $da, $d7, $d2, $cb, $ca, $ce
17da9     D4 DE ED F8 
17dad     02 0A 11 17 
17db1     14 11 11 0F 
17db5     0E 0D 08 02 | 	byte	$d4, $de, $ed, $f8, $02, $0a, $11, $17, $14, $11, $11, $0f, $0e, $0d, $08, $02
17db9     00 FE 05 0D 
17dbd     0B 05 00 FB 
17dc1     FE 05 05 00 
17dc5     FD FA F5 F2 | 	byte	$00, $fe, $05, $0d, $0b, $05, $00, $fb, $fe, $05, $05, $00, $fd, $fa, $f5, $f2
17dc9     ED E8 E7 ED 
17dcd     F4 FA FB F7 
17dd1     F4 F1 F1 F7 
17dd5     FD 02 0B 11 | 	byte	$ed, $e8, $e7, $ed, $f4, $fa, $fb, $f7, $f4, $f1, $f1, $f7, $fd, $02, $0b, $11
17dd9     17 1E 25 2E 
17ddd     38 42 48 47 
17de1     3F 35 2E 22 
17de5     17 0B 08 0A | 	byte	$17, $1e, $25, $2e, $38, $42, $48, $47, $3f, $35, $2e, $22, $17, $0b, $08, $0a
17de9     05 00 F4 F1 
17ded     F2 F5 F8 FA 
17df1     FB FB F7 F2 
17df5     F2 F2 F1 ED | 	byte	$05, $00, $f4, $f1, $f2, $f5, $f8, $fa, $fb, $fb, $f7, $f2, $f2, $f2, $f1, $ed
17df9     E8 E7 E7 E2 
17dfd     D7 C5 B5 AE 
17e01     AD B2 BB C1 
17e05     C7 CD D4 E0 | 	byte	$e8, $e7, $e7, $e2, $d7, $c5, $b5, $ae, $ad, $b2, $bb, $c1, $c7, $cd, $d4, $e0
17e09     F0 FE 12 1E 
17e0d     25 2E 32 31 
17e11     2A 1D 0E 04 
17e15     00 FD FB 02 | 	byte	$f0, $fe, $12, $1e, $25, $2e, $32, $31, $2a, $1d, $0e, $04, $00, $fd, $fb, $02
17e19     0A 0B 11 14 
17e1d     14 1A 24 2A 
17e21     27 1D 0F 08 
17e25     05 04 00 F7 | 	byte	$0a, $0b, $11, $14, $14, $1a, $24, $2a, $27, $1d, $0f, $08, $05, $04, $00, $f7
17e29     ED E5 E4 E7 
17e2d     EE F5 FA FA 
17e31     F8 F4 EA DD 
17e35     D8 DA E1 E7 | 	byte	$ed, $e5, $e4, $e7, $ee, $f5, $fa, $fa, $f8, $f4, $ea, $dd, $d8, $da, $e1, $e7
17e39     EB EE F1 F5 
17e3d     FB FE 01 05 
17e41     08 0B 0F 14 
17e45     15 18 1D 18 | 	byte	$eb, $ee, $f1, $f5, $fb, $fe, $01, $05, $08, $0b, $0f, $14, $15, $18, $1d, $18
17e49     11 0B 04 FD 
17e4d     FA FB FE 0A 
17e51     12 1E 2D 3D 
17e55     45 42 3B 2E | 	byte	$11, $0b, $04, $fd, $fa, $fb, $fe, $0a, $12, $1e, $2d, $3d, $45, $42, $3b, $2e
17e59     27 22 22 24 
17e5d     22 18 08 F7 
17e61     E5 D7 CE D0 
17e65     D7 E4 F1 FE | 	byte	$27, $22, $22, $24, $22, $18, $08, $f7, $e5, $d7, $ce, $d0, $d7, $e4, $f1, $fe
17e69     08 11 18 1D 
17e6d     1D 17 0F 07 
17e71     05 02 00 FE 
17e75     FA F5 ED E1 | 	byte	$08, $11, $18, $1d, $1d, $17, $0f, $07, $05, $02, $00, $fe, $fa, $f5, $ed, $e1
17e79     D7 D1 CE CB 
17e7d     CA CD D4 DB 
17e81     E4 F2 FE 12 
17e85     21 28 2B 2B | 	byte	$d7, $d1, $ce, $cb, $ca, $cd, $d4, $db, $e4, $f2, $fe, $12, $21, $28, $2b, $2b
17e89     2A 27 25 25 
17e8d     24 22 1D 17 
17e91     0E 07 FD EE 
17e95     E0 DA E1 EB | 	byte	$2a, $27, $25, $25, $24, $22, $1d, $17, $0e, $07, $fd, $ee, $e0, $da, $e1, $eb
17e99     F2 FB 01 02 
17e9d     01 02 04 05 
17ea1     08 0A 0D 0E 
17ea5     0B 0A 0B 12 | 	byte	$f2, $fb, $01, $02, $01, $02, $04, $05, $08, $0a, $0d, $0e, $0b, $0a, $0b, $12
17ea9     15 12 0F 0F 
17ead     14 17 14 14 
17eb1     1A 24 2B 2E 
17eb5     2A 1F 12 0B | 	byte	$15, $12, $0f, $0f, $14, $17, $14, $14, $1a, $24, $2b, $2e, $2a, $1f, $12, $0b
17eb9     08 05 00 F5 
17ebd     EB E4 E0 E0 
17ec1     E1 E1 E2 EA 
17ec5     F5 FA FB FE | 	byte	$08, $05, $00, $f5, $eb, $e4, $e0, $e0, $e1, $e1, $e2, $ea, $f5, $fa, $fb, $fe
17ec9     08 08 00 EE 
17ecd     D7 C8 C1 C1 
17ed1     C8 DA EB FB 
17ed5     07 0F 15 17 | 	byte	$08, $08, $00, $ee, $d7, $c8, $c1, $c1, $c8, $da, $eb, $fb, $07, $0f, $15, $17
17ed9     11 0B 0A 08 
17edd     05 05 02 00 
17ee1     F5 E8 DE DA 
17ee5     DA DB E0 E7 | 	byte	$11, $0b, $0a, $08, $05, $05, $02, $00, $f5, $e8, $de, $da, $da, $db, $e0, $e7
17ee9     F2 FD FE 01 
17eed     04 04 02 00 
17ef1     00 05 11 1D 
17ef5     21 17 0E 0B | 	byte	$f2, $fd, $fe, $01, $04, $04, $02, $00, $00, $05, $11, $1d, $21, $17, $0e, $0b
17ef9     0B 0E 0E 0F 
17efd     0B 07 07 0D 
17f01     15 1E 22 24 
17f05     22 25 24 1E | 	byte	$0b, $0e, $0e, $0f, $0b, $07, $07, $0d, $15, $1e, $22, $24, $22, $25, $24, $1e
17f09     14 0B 08 02 
17f0d     00 FE 04 0D 
17f11     15 15 0D 08 
17f15     02 FB F1 E8 | 	byte	$14, $0b, $08, $02, $00, $fe, $04, $0d, $15, $15, $0d, $08, $02, $fb, $f1, $e8
17f19     E1 DD DD E0 
17f1d     E7 F2 FE 04 
17f21     00 FB FE 08 
17f25     15 24 2E 34 | 	byte	$e1, $dd, $dd, $e0, $e7, $f2, $fe, $04, $00, $fb, $fe, $08, $15, $24, $2e, $34
17f29     31 27 17 02 
17f2d     F1 E2 E0 E7 
17f31     F1 FB 04 0A 
17f35     05 F7 EB DD | 	byte	$31, $27, $17, $02, $f1, $e2, $e0, $e7, $f1, $fb, $04, $0a, $05, $f7, $eb, $dd
17f39     D1 C8 C2 C4 
17f3d     D0 E0 E5 E7 
17f41     EA F0 F4 F8 
17f45     FD 04 08 08 | 	byte	$d1, $c8, $c2, $c4, $d0, $e0, $e5, $e7, $ea, $f0, $f4, $f8, $fd, $04, $08, $08
17f49     07 04 07 0B 
17f4d     0B 0A 05 00 
17f51     F8 F4 F0 F0 
17f55     F2 F8 FD 01 | 	byte	$07, $04, $07, $0b, $0b, $0a, $05, $00, $f8, $f4, $f0, $f0, $f2, $f8, $fd, $01
17f59     02 01 FA F4 
17f5d     F0 F1 F5 F8 
17f61     FE 04 0A 0D 
17f65     0E 0B 07 05 | 	byte	$02, $01, $fa, $f4, $f0, $f1, $f5, $f8, $fe, $04, $0a, $0d, $0e, $0b, $07, $05
17f69     08 0D 0F 15 
17f6d     1B 1E 1F 1F 
17f71     1E 1B 1B 1F 
17f75     27 2B 2F 34 | 	byte	$08, $0d, $0f, $15, $1b, $1e, $1f, $1f, $1e, $1b, $1b, $1f, $27, $2b, $2f, $34
17f79     38 3A 3D 3D 
17f7d     3E 3B 37 2E 
17f81     22 1B 11 07 
17f85     FB F1 E8 E2 | 	byte	$38, $3a, $3d, $3d, $3e, $3b, $37, $2e, $22, $1b, $11, $07, $fb, $f1, $e8, $e2
17f89     E0 DD DA D7 
17f8d     D8 DB D7 D4 
17f91     CE CD CB CA 
17f95     CE D8 E4 EB | 	byte	$e0, $dd, $da, $d7, $d8, $db, $d7, $d4, $ce, $cd, $cb, $ca, $ce, $d8, $e4, $eb
17f99     EB E8 E5 E2 
17f9d     E2 E1 DA D7 
17fa1     DA E2 ED F8 
17fa5     FE 0A 0E 11 | 	byte	$eb, $e8, $e5, $e2, $e2, $e1, $da, $d7, $da, $e2, $ed, $f8, $fe, $0a, $0e, $11
17fa9     14 17 1D 21 
17fad     22 1D 14 11 
17fb1     15 1F 28 2B 
17fb5     25 17 07 F8 | 	byte	$14, $17, $1d, $21, $22, $1d, $14, $11, $15, $1f, $28, $2b, $25, $17, $07, $f8
17fb9     EB E2 E1 E7 
17fbd     F1 FD 0A 1A 
17fc1     25 2A 25 1E 
17fc5     17 0B 00 F4 | 	byte	$eb, $e2, $e1, $e7, $f1, $fd, $0a, $1a, $25, $2a, $25, $1e, $17, $0b, $00, $f4
17fc9     EB EB F1 FB 
17fcd     05 12 1D 27 
17fd1     2B 25 1A 0D 
17fd5     08 08 05 07 | 	byte	$eb, $eb, $f1, $fb, $05, $12, $1d, $27, $2b, $25, $1a, $0d, $08, $08, $05, $07
17fd9     05 0A 12 1A 
17fdd     1B 17 17 17 
17fe1     0E 0A 0A 0B 
17fe5     02 F7 E8 DD | 	byte	$05, $0a, $12, $1a, $1b, $17, $17, $17, $0e, $0a, $0a, $0b, $02, $f7, $e8, $dd
17fe9     D2 CE CE D0 
17fed     D1 D4 D5 DA 
17ff1     DE E7 F2 04 
17ff5     15 25 32 3A | 	byte	$d2, $ce, $ce, $d0, $d1, $d4, $d5, $da, $de, $e7, $f2, $04, $15, $25, $32, $3a
17ff9     3B 37 2F 2E 
17ffd     2D 2E 2E 28 
18001     1D 0E 00 F4 
18005     E5 DD D7 D5 | 	byte	$3b, $37, $2f, $2e, $2d, $2e, $2e, $28, $1d, $0e, $00, $f4, $e5, $dd, $d7, $d5
18009     DD EA F0 F2 
1800d     F7 FD FD F4 
18011     EB E2 DE DD 
18015     DB DB DB DD | 	byte	$dd, $ea, $f0, $f2, $f7, $fd, $fd, $f4, $eb, $e2, $de, $dd, $db, $db, $db, $dd
18019     E0 E1 E1 E4 
1801d     E7 ED F2 FE 
18021     0B 14 11 0F 
18025     12 15 17 17 | 	byte	$e0, $e1, $e1, $e4, $e7, $ed, $f2, $fe, $0b, $14, $11, $0f, $12, $15, $17, $17
18029     12 0E 08 05 
1802d     05 07 0F 14 
18031     0E 05 01 05 
18035     0B 0F 14 1B | 	byte	$12, $0e, $08, $05, $05, $07, $0f, $14, $0e, $05, $01, $05, $0b, $0f, $14, $1b
18039     22 27 28 2E 
1803d     32 2F 2E 2E 
18041     22 1A 0B 00 
18045     F0 E8 E2 DE | 	byte	$22, $27, $28, $2e, $32, $2f, $2e, $2e, $22, $1a, $0b, $00, $f0, $e8, $e2, $de
18049     DA D8 DA DA 
1804d     DA DE E2 EA 
18051     F2 FD 04 0B 
18055     11 11 0D 02 | 	byte	$da, $d8, $da, $da, $da, $de, $e2, $ea, $f2, $fd, $04, $0b, $11, $11, $0d, $02
18059     FE FD FE 01 
1805d     08 0B 0A 07 
18061     05 02 FE FE 
18065     02 07 0D 15 | 	byte	$fe, $fd, $fe, $01, $08, $0b, $0a, $07, $05, $02, $fe, $fe, $02, $07, $0d, $15
18069     1E 22 1F 17 
1806d     0F 08 00 F4 
18071     E2 D4 C5 BA 
18075     B2 B1 B8 C4 | 	byte	$1e, $22, $1f, $17, $0f, $08, $00, $f4, $e2, $d4, $c5, $ba, $b2, $b1, $b8, $c4
18079     D0 DE ED F7 
1807d     FD FE 08 12 
18081     1B 25 2D 2F 
18085     31 31 2E 25 | 	byte	$d0, $de, $ed, $f7, $fd, $fe, $08, $12, $1b, $25, $2d, $2f, $31, $31, $2e, $25
18089     1B 0B FA EE 
1808d     EA EB EA E8 
18091     E7 E8 ED ED 
18095     F1 FA 04 0D | 	byte	$1b, $0b, $fa, $ee, $ea, $eb, $ea, $e8, $e7, $e8, $ed, $ed, $f1, $fa, $04, $0d
18099     0D 08 01 FA 
1809d     F2 F1 F2 F2 
180a1     EE F2 FB 05 
180a5     12 18 14 0B | 	byte	$0d, $08, $01, $fa, $f2, $f1, $f2, $f2, $ee, $f2, $fb, $05, $12, $18, $14, $0b
180a9     02 FE FE 02 
180ad     08 0B 08 02 
180b1     FA F4 EE F0 
180b5     F8 04 14 1E | 	byte	$02, $fe, $fe, $02, $08, $0b, $08, $02, $fa, $f4, $ee, $f0, $f8, $04, $14, $1e
180b9     25 25 22 1F 
180bd     1D 17 0B 02 
180c1     FE FE 02 08 
180c5     05 00 F7 F2 | 	byte	$25, $25, $22, $1f, $1d, $17, $0b, $02, $fe, $fe, $02, $08, $05, $00, $f7, $f2
180c9     F7 FE 08 15 
180cd     22 28 25 1D 
180d1     11 08 00 F7 
180d5     F4 F8 FE 00 | 	byte	$f7, $fe, $08, $15, $22, $28, $25, $1d, $11, $08, $00, $f7, $f4, $f8, $fe, $00
180d9     FE FA FE 02 
180dd     05 05 02 04 
180e1     0A 0D 0F 0F 
180e5     12 14 12 0D | 	byte	$fe, $fa, $fe, $02, $05, $05, $02, $04, $0a, $0d, $0f, $0f, $12, $14, $12, $0d
180e9     02 F7 EB E2 
180ed     DD DB E2 E5 
180f1     E2 DA D2 CE 
180f5     CE D0 D5 E0 | 	byte	$02, $f7, $eb, $e2, $dd, $db, $e2, $e5, $e2, $da, $d2, $ce, $ce, $d0, $d5, $e0
180f9     EA F4 FB 02 
180fd     0E 18 25 2F 
18101     2F 2E 34 3D 
18105     3F 3B 3A 3A | 	byte	$ea, $f4, $fb, $02, $0e, $18, $25, $2f, $2f, $2e, $34, $3d, $3f, $3b, $3a, $3a
18109     37 34 2F 2A 
1810d     1D 0E 02 FD 
18111     FE 04 04 05 
18115     07 02 FA F7 | 	byte	$37, $34, $2f, $2a, $1d, $0e, $02, $fd, $fe, $04, $04, $05, $07, $02, $fa, $f7
18119     F5 F8 FD FE 
1811d     02 05 0A 0B 
18121     11 18 1B 1A 
18125     17 12 0B 02 | 	byte	$f5, $f8, $fd, $fe, $02, $05, $0a, $0b, $11, $18, $1b, $1a, $17, $12, $0b, $02
18129     FA F0 ED ED 
1812d     ED EE F7 F8 
18131     F4 ED E5 DE 
18135     DA D7 DB DD | 	byte	$fa, $f0, $ed, $ed, $ed, $ee, $f7, $f8, $f4, $ed, $e5, $de, $da, $d7, $db, $dd
18139     DB DE E7 F1 
1813d     F4 EE EB EA 
18141     F1 F7 F7 FA 
18145     FE 05 05 00 | 	byte	$db, $de, $e7, $f1, $f4, $ee, $eb, $ea, $f1, $f7, $f7, $fa, $fe, $05, $05, $00
18149     FE 01 07 05 
1814d     05 05 05 02 
18151     00 FE F7 EB 
18155     E5 E2 DA D5 | 	byte	$fe, $01, $07, $05, $05, $05, $05, $02, $00, $fe, $f7, $eb, $e5, $e2, $da, $d5
18159     DD EB FB 02 
1815d     01 FB FD 02 
18161     05 05 0A 0B 
18165     08 01 F7 F1 | 	byte	$dd, $eb, $fb, $02, $01, $fb, $fd, $02, $05, $05, $0a, $0b, $08, $01, $f7, $f1
18169     EE F1 F8 04 
1816d     12 1E 27 2B 
18171     28 22 1D 18 
18175     11 0B 00 FA | 	byte	$ee, $f1, $f8, $04, $12, $1e, $27, $2b, $28, $22, $1d, $18, $11, $0b, $00, $fa
18179     FB FA F1 EB 
1817d     ED F2 FE 0D 
18181     15 1F 27 2D 
18185     2F 2E 24 1A | 	byte	$fb, $fa, $f1, $eb, $ed, $f2, $fe, $0d, $15, $1f, $27, $2d, $2f, $2e, $24, $1a
18189     11 0D 0B 0F 
1818d     11 12 0B 02 
18191     F7 E8 E0 DA 
18195     D8 DB DD E1 | 	byte	$11, $0d, $0b, $0f, $11, $12, $0b, $02, $f7, $e8, $e0, $da, $d8, $db, $dd, $e1
18199     E5 E7 E8 F0 
1819d     FA 05 0D 0E 
181a1     0B 07 0D 14 
181a5     18 1E 25 2D | 	byte	$e5, $e7, $e8, $f0, $fa, $05, $0d, $0e, $0b, $07, $0d, $14, $18, $1e, $25, $2d
181a9     2E 28 1A 0D 
181ad     04 FA EE EA 
181b1     EA E5 E0 DE 
181b5     E0 E1 E0 E4 | 	byte	$2e, $28, $1a, $0d, $04, $fa, $ee, $ea, $ea, $e5, $e0, $de, $e0, $e1, $e0, $e4
181b9     ED FB 04 08 
181bd     05 FD F7 F4 
181c1     F1 F2 F1 EB 
181c5     EB ED ED ED | 	byte	$ed, $fb, $04, $08, $05, $fd, $f7, $f4, $f1, $f2, $f1, $eb, $eb, $ed, $ed, $ed
181c9     E8 E8 F1 FD 
181cd     04 05 00 FE 
181d1     FE 04 0A 0E 
181d5     15 15 15 17 | 	byte	$e8, $e8, $f1, $fd, $04, $05, $00, $fe, $fe, $04, $0a, $0e, $15, $15, $15, $17
181d9     1A 1B 1A 1A 
181dd     18 18 15 12 
181e1     15 1D 21 25 
181e5     2D 34 3A 3B | 	byte	$1a, $1b, $1a, $1a, $18, $18, $15, $12, $15, $1d, $21, $25, $2d, $34, $3a, $3b
181e9     3A 32 2E 22 
181ed     1A 14 11 0E 
181f1     08 00 F7 EB 
181f5     E2 D7 C7 BD | 	byte	$3a, $32, $2e, $22, $1a, $14, $11, $0e, $08, $00, $f7, $eb, $e2, $d7, $c7, $bd
181f9     BA C2 CA CD 
181fd     D0 DB E4 EA 
18201     F0 F8 04 0D 
18205     0E 0B 0B 11 | 	byte	$ba, $c2, $ca, $cd, $d0, $db, $e4, $ea, $f0, $f8, $04, $0d, $0e, $0b, $0b, $11
18209     15 14 0E 08 
1820d     02 00 02 04 
18211     02 00 FD F8 
18215     F1 ED E7 E7 | 	byte	$15, $14, $0e, $08, $02, $00, $02, $04, $02, $00, $fd, $f8, $f1, $ed, $e7, $e7
18219     F0 FE 0B 18 
1821d     1E 27 2B 28 
18221     24 21 21 1F 
18225     1E 1E 1D 17 | 	byte	$f0, $fe, $0b, $18, $1e, $27, $2b, $28, $24, $21, $21, $1f, $1e, $1e, $1d, $17
18229     0B FA E8 DD 
1822d     D1 C7 BD BB 
18231     BE C5 D0 DB 
18235     ED FD 0A 0E | 	byte	$0b, $fa, $e8, $dd, $d1, $c7, $bd, $bb, $be, $c5, $d0, $db, $ed, $fd, $0a, $0e
18239     0F 12 18 1D 
1823d     18 14 11 0E 
18241     08 05 0D 15 
18245     1E 25 2A 28 | 	byte	$0f, $12, $18, $1d, $18, $14, $11, $0e, $08, $05, $0d, $15, $1e, $25, $2a, $28
18249     25 1D 17 0E 
1824d     05 FD FA F5 
18251     F0 ED EE F5 
18255     F8 FA F5 ED | 	byte	$25, $1d, $17, $0e, $05, $fd, $fa, $f5, $f0, $ed, $ee, $f5, $f8, $fa, $f5, $ed
18259     E2 DD D8 D8 
1825d     E0 ED F7 FE 
18261     04 0D 15 1F 
18265     24 1D 12 0B | 	byte	$e2, $dd, $d8, $d8, $e0, $ed, $f7, $fe, $04, $0d, $15, $1f, $24, $1d, $12, $0b
18269     02 FA F2 EE 
1826d     EA EA ED F2 
18271     FD 01 07 08 
18275     02 F4 E8 DD | 	byte	$02, $fa, $f2, $ee, $ea, $ea, $ed, $f2, $fd, $01, $07, $08, $02, $f4, $e8, $dd
18279     D8 DA E0 EA 
1827d     F5 FE 02 05 
18281     07 0B 0D 0F 
18285     15 18 14 0D | 	byte	$d8, $da, $e0, $ea, $f5, $fe, $02, $05, $07, $0b, $0d, $0f, $15, $18, $14, $0d
18289     0B 0B 11 1A 
1828d     25 32 3E 41 
18291     3F 41 3D 31 
18295     22 11 08 04 | 	byte	$0b, $0b, $11, $1a, $25, $32, $3e, $41, $3f, $41, $3d, $31, $22, $11, $08, $04
18299     01 FD F7 F5 
1829d     F2 F1 F5 FD 
182a1     04 08 07 00 
182a5     F4 EB E5 DD | 	byte	$01, $fd, $f7, $f5, $f2, $f1, $f5, $fd, $04, $08, $07, $00, $f4, $eb, $e5, $dd
182a9     D4 CE CE D2 
182ad     D8 E4 EB F4 
182b1     F8 FA 02 0D 
182b5     11 11 15 17 | 	byte	$d4, $ce, $ce, $d2, $d8, $e4, $eb, $f4, $f8, $fa, $02, $0d, $11, $11, $15, $17
182b9     18 11 0B 08 
182bd     02 FD F7 F4 
182c1     F4 F1 E8 E2 
182c5     DA D8 DB E1 | 	byte	$18, $11, $0b, $08, $02, $fd, $f7, $f4, $f4, $f1, $e8, $e2, $da, $d8, $db, $e1
182c9     E7 EE F1 F0 
182cd     F2 FB 07 15 
182d1     1F 25 22 18 
182d5     0E 02 FA F1 | 	byte	$e7, $ee, $f1, $f0, $f2, $fb, $07, $15, $1f, $25, $22, $18, $0e, $02, $fa, $f1
182d9     EE EB E8 E7 
182dd     EA F1 F7 FB 
182e1     02 0A 0F 1E 
182e5     2D 38 3B 3A | 	byte	$ee, $eb, $e8, $e7, $ea, $f1, $f7, $fb, $02, $0a, $0f, $1e, $2d, $38, $3b, $3a
182e9     37 2E 25 1E 
182ed     1A 14 0B FD 
182f1     F4 EB E2 DB 
182f5     DB E1 ED F0 | 	byte	$37, $2e, $25, $1e, $1a, $14, $0b, $fd, $f4, $eb, $e2, $db, $db, $e1, $ed, $f0
182f9     EE ED F1 FD 
182fd     08 11 11 08 
18301     00 F4 EB E8 
18305     E7 EB F5 FE | 	byte	$ee, $ed, $f1, $fd, $08, $11, $11, $08, $00, $f4, $eb, $e8, $e7, $eb, $f5, $fe
18309     0F 21 2D 34 
1830d     37 34 31 2E 
18311     28 1F 1A 11 
18315     05 05 08 12 | 	byte	$0f, $21, $2d, $34, $37, $34, $31, $2e, $28, $1f, $1a, $11, $05, $05, $08, $12
18319     1E 24 24 1B 
1831d     0D 00 EE DD 
18321     D5 CD C7 C2 
18325     C2 C8 D0 D4 | 	byte	$1e, $24, $24, $1b, $0d, $00, $ee, $dd, $d5, $cd, $c7, $c2, $c2, $c8, $d0, $d4
18329     DA E7 F8 0A 
1832d     12 17 21 2D 
18331     34 35 2F 24 
18335     17 0B 00 F4 | 	byte	$da, $e7, $f8, $0a, $12, $17, $21, $2d, $34, $35, $2f, $24, $17, $0b, $00, $f4
18339     EB EA EB F7 
1833d     0A 1B 25 25 
18341     1D 0B F7 E8 
18345     E0 DE E4 F0 | 	byte	$eb, $ea, $eb, $f7, $0a, $1b, $25, $25, $1d, $0b, $f7, $e8, $e0, $de, $e4, $f0
18349     FE 0B 12 11 
1834d     0D 08 02 FA 
18351     F2 F2 F7 F8 
18355     F8 FA F8 FB | 	byte	$fe, $0b, $12, $11, $0d, $08, $02, $fa, $f2, $f2, $f7, $f8, $f8, $fa, $f8, $fb
18359     FE 04 08 02 
1835d     FA F0 E8 E5 
18361     E0 DD DD DE 
18365     E5 F1 FE 08 | 	byte	$fe, $04, $08, $02, $fa, $f0, $e8, $e5, $e0, $dd, $dd, $de, $e5, $f1, $fe, $08
18369     0D 0E 0E 11 
1836d     18 1D 1A 14 
18371     0E 05 F8 F0 
18375     EA ED F8 05 | 	byte	$0d, $0e, $0e, $11, $18, $1d, $1a, $14, $0e, $05, $f8, $f0, $ea, $ed, $f8, $05
18379     0F 15 1F 28 
1837d     2D 28 22 1A 
18381     0E 05 FD F7 
18385     F4 ED E5 E4 | 	byte	$0f, $15, $1f, $28, $2d, $28, $22, $1a, $0e, $05, $fd, $f7, $f4, $ed, $e5, $e4
18389     E1 E2 E7 EB 
1838d     F2 F8 FE FD 
18391     F1 E0 DA E1 
18395     ED F5 FD FE | 	byte	$e1, $e2, $e7, $eb, $f2, $f8, $fe, $fd, $f1, $e0, $da, $e1, $ed, $f5, $fd, $fe
18399     FE FD F4 EE 
1839d     E8 EA F1 F8 
183a1     FD FE FB F7 
183a5     F0 EB F0 FA | 	byte	$fe, $fd, $f4, $ee, $e8, $ea, $f1, $f8, $fd, $fe, $fb, $f7, $f0, $eb, $f0, $fa
183a9     02 0E 18 22 
183ad     24 1F 18 11 
183b1     08 FA F1 F1 
183b5     F8 05 14 1E | 	byte	$02, $0e, $18, $22, $24, $1f, $18, $11, $08, $fa, $f1, $f1, $f8, $05, $14, $1e
183b9     1F 1F 1D 17 
183bd     0E 08 0F 17 
183c1     18 18 17 18 
183c5     1A 1A 17 11 | 	byte	$1f, $1f, $1d, $17, $0e, $08, $0f, $17, $18, $18, $17, $18, $1a, $1a, $17, $11
183c9     0B 02 00 FE 
183cd     FB FA F4 EB 
183d1     EA EE F2 FA 
183d5     FE FE FD FE | 	byte	$0b, $02, $00, $fe, $fb, $fa, $f4, $eb, $ea, $ee, $f2, $fa, $fe, $fe, $fd, $fe
183d9     04 0F 1A 1E 
183dd     1D 17 0B 00 
183e1     EE DE D1 C7 
183e5     C7 CD D8 E7 | 	byte	$04, $0f, $1a, $1e, $1d, $17, $0b, $00, $ee, $de, $d1, $c7, $c7, $cd, $d8, $e7
183e9     F8 FD FE FA 
183ed     F8 FD 05 12 
183f1     1D 25 2A 25 
183f5     1F 1D 17 0B | 	byte	$f8, $fd, $fe, $fa, $f8, $fd, $05, $12, $1d, $25, $2a, $25, $1f, $1d, $17, $0b
183f9     00 FA FE 07 
183fd     0E 0B 00 F1 
18401     EB EA EA ED 
18405     F2 FE 02 07 | 	byte	$00, $fa, $fe, $07, $0e, $0b, $00, $f1, $eb, $ea, $ea, $ed, $f2, $fe, $02, $07
18409     02 FD FD FE 
1840d     04 0F 1A 1B 
18411     1A 14 0E 0B 
18415     0E 14 1B 25 | 	byte	$02, $fd, $fd, $fe, $04, $0f, $1a, $1b, $1a, $14, $0e, $0b, $0e, $14, $1b, $25
18419     35 3D 3D 35 
1841d     2E 22 17 08 
18421     00 F7 EB E8 
18425     E7 EA F2 FB | 	byte	$35, $3d, $3d, $35, $2e, $22, $17, $08, $00, $f7, $eb, $e8, $e7, $ea, $f2, $fb
18429     05 08 08 02 
1842d     FD F8 F8 F4 
18431     ED E7 EA F0 
18435     F8 01 05 04 | 	byte	$05, $08, $08, $02, $fd, $f8, $f8, $f4, $ed, $e7, $ea, $f0, $f8, $01, $05, $04
18439     05 00 EE DA 
1843d     C5 B7 B0 B0 
18441     B2 BD CA DE 
18445     F2 05 18 1A | 	byte	$05, $00, $ee, $da, $c5, $b7, $b0, $b0, $b2, $bd, $ca, $de, $f2, $05, $18, $1a
18449     15 0F 08 00 
1844d     F8 F2 F1 F8 
18451     FE 0E 14 14 
18455     18 1F 25 27 | 	byte	$15, $0f, $08, $00, $f8, $f2, $f1, $f8, $fe, $0e, $14, $14, $18, $1f, $25, $27
18459     24 27 31 37 
1845d     3D 3E 3D 34 
18461     2E 2F 2E 2E 
18465     25 17 00 EB | 	byte	$24, $27, $31, $37, $3d, $3e, $3d, $34, $2e, $2f, $2e, $2e, $25, $17, $00, $eb
18469     DD D1 C7 C0 
1846d     B8 B8 C8 D8 
18471     E5 EA EA ED 
18475     F5 FE 08 05 | 	byte	$dd, $d1, $c7, $c0, $b8, $b8, $c8, $d8, $e5, $ea, $ea, $ed, $f5, $fe, $08, $05
18479     FA F1 F2 F4 
1847d     F5 FA FE 0E 
18481     12 14 18 1E 
18485     22 2D 34 3B | 	byte	$fa, $f1, $f2, $f4, $f5, $fa, $fe, $0e, $12, $14, $18, $1e, $22, $2d, $34, $3b
18489     3B 3A 34 25 
1848d     17 05 F4 E5 
18491     D7 C8 C5 CD 
18495     DB ED FE 15 | 	byte	$3b, $3a, $34, $25, $17, $05, $f4, $e5, $d7, $c8, $c5, $cd, $db, $ed, $fe, $15
18499     1F 1F 1B 12 
1849d     08 FB F1 E8 
184a1     E1 DB D5 D4 
184a5     D8 DE E2 E5 | 	byte	$1f, $1f, $1b, $12, $08, $fb, $f1, $e8, $e1, $db, $d5, $d4, $d8, $de, $e2, $e5
184a9     E7 EA ED F5 
184ad     FE 08 0F 1A 
184b1     1F 1D 17 11 
184b5     14 1F 2D 2E | 	byte	$e7, $ea, $ed, $f5, $fe, $08, $0f, $1a, $1f, $1d, $17, $11, $14, $1f, $2d, $2e
184b9     25 11 00 F0 
184bd     F1 FB 04 0F 
184c1     12 11 05 F4 
184c5     E2 D7 CD C7 | 	byte	$25, $11, $00, $f0, $f1, $fb, $04, $0f, $12, $11, $05, $f4, $e2, $d7, $cd, $c7
184c9     C7 CE D5 DE 
184cd     E7 F0 F2 F5 
184d1     FB FA F1 EE 
184d5     F8 0A 1A 21 | 	byte	$c7, $ce, $d5, $de, $e7, $f0, $f2, $f5, $fb, $fa, $f1, $ee, $f8, $0a, $1a, $21
184d9     25 25 25 27 
184dd     25 27 25 1D 
184e1     0B F5 E8 E4 
184e5     E5 ED F8 07 | 	byte	$25, $25, $25, $27, $25, $27, $25, $1d, $0b, $f5, $e8, $e4, $e5, $ed, $f8, $07
184e9     14 1E 28 2F 
184ed     34 2F 22 0D 
184f1     F7 E2 D1 C8 
184f5     C8 CD D5 E1 | 	byte	$14, $1e, $28, $2f, $34, $2f, $22, $0d, $f7, $e2, $d1, $c8, $c8, $cd, $d5, $e1
184f9     ED F7 FE 0D 
184fd     17 18 17 15 
18501     1B 27 2E 37 
18505     3A 37 2E 17 | 	byte	$ed, $f7, $fe, $0d, $17, $18, $17, $15, $1b, $27, $2e, $37, $3a, $37, $2e, $17
18509     0B 00 F4 F1 
1850d     EE F0 FE 08 
18511     15 18 18 0E 
18515     00 F7 F2 ED | 	byte	$0b, $00, $f4, $f1, $ee, $f0, $fe, $08, $15, $18, $18, $0e, $00, $f7, $f2, $ed
18519     EB ED ED F0 
1851d     F4 F7 F4 EB 
18521     E0 D8 D2 CD 
18525     D0 D5 DD E5 | 	byte	$eb, $ed, $ed, $f0, $f4, $f7, $f4, $eb, $e0, $d8, $d2, $cd, $d0, $d5, $dd, $e5
18529     F1 FD 08 11 
1852d     14 1E 2A 32 
18531     31 31 34 31 
18535     2F 25 1D 1D | 	byte	$f1, $fd, $08, $11, $14, $1e, $2a, $32, $31, $31, $34, $31, $2f, $25, $1d, $1d
18539     1D 1A 12 0B 
1853d     02 F4 E8 E5 
18541     EB F8 02 05 
18545     04 00 FA F5 | 	byte	$1d, $1a, $12, $0b, $02, $f4, $e8, $e5, $eb, $f8, $02, $05, $04, $00, $fa, $f5
18549     F7 FB FE 0B 
1854d     0B 00 F1 E4 
18551     E0 E1 E0 DE 
18555     DD DD E1 EE | 	byte	$f7, $fb, $fe, $0b, $0b, $00, $f1, $e4, $e0, $e1, $e0, $de, $dd, $dd, $e1, $ee
18559     F7 FD 02 08 
1855d     0D 0E 0E 0E 
18561     0E 15 1D 1F 
18565     1F 24 1F 1B | 	byte	$f7, $fd, $02, $08, $0d, $0e, $0e, $0e, $0e, $15, $1d, $1f, $1f, $24, $1f, $1b
18569     18 1A 17 11 
1856d     0B 0B 08 0D 
18571     0E 12 15 0E 
18575     05 00 F7 EE | 	byte	$18, $1a, $17, $11, $0b, $0b, $08, $0d, $0e, $12, $15, $0e, $05, $00, $f7, $ee
18579     E8 E2 D8 D2 
1857d     D2 D5 E0 EB 
18581     F5 F7 FD 0A 
18585     18 17 0B 00 | 	byte	$e8, $e2, $d8, $d2, $d2, $d5, $e0, $eb, $f5, $f7, $fd, $0a, $18, $17, $0b, $00
18589     F4 EE F5 07 
1858d     15 1A 1A 17 
18591     17 15 14 17 
18595     1F 1E 17 0E | 	byte	$f4, $ee, $f5, $07, $15, $1a, $1a, $17, $17, $15, $14, $17, $1f, $1e, $17, $0e
18599     02 FA EA DD 
1859d     D4 D4 DB EB 
185a1     FB 04 05 0A 
185a5     15 21 22 1F | 	byte	$02, $fa, $ea, $dd, $d4, $d4, $db, $eb, $fb, $04, $05, $0a, $15, $21, $22, $1f
185a9     1B 17 05 EB 
185ad     D4 C5 C2 CE 
185b1     DE EB F2 F1 
185b5     F5 04 1A 27 | 	byte	$1b, $17, $05, $eb, $d4, $c5, $c2, $ce, $de, $eb, $f2, $f1, $f5, $04, $1a, $27
185b9     2B 25 22 1A 
185bd     11 02 FA F1 
185c1     EA EA EB EB 
185c5     EB F2 FE 0E | 	byte	$2b, $25, $22, $1a, $11, $02, $fa, $f1, $ea, $ea, $eb, $eb, $eb, $f2, $fe, $0e
185c9     1A 1A 11 05 
185cd     00 FA F4 F2 
185d1     F4 F5 F7 FE 
185d5     08 0B 0B 05 | 	byte	$1a, $1a, $11, $05, $00, $fa, $f4, $f2, $f4, $f5, $f7, $fe, $08, $0b, $0b, $05
185d9     F7 EA E5 E5 
185dd     E2 E7 F5 08 
185e1     1A 22 25 2A 
185e5     2B 25 1D 14 | 	byte	$f7, $ea, $e5, $e5, $e2, $e7, $f5, $08, $1a, $22, $25, $2a, $2b, $25, $1d, $14
185e9     05 FA EB E4 
185ed     DD DB DE E5 
185f1     EE F8 FD 04 
185f5     0A 0A 08 02 | 	byte	$05, $fa, $eb, $e4, $dd, $db, $de, $e5, $ee, $f8, $fd, $04, $0a, $0a, $08, $02
185f9     00 F4 E8 E0 
185fd     DA DB DE E2 
18601     E7 F1 FE 05 
18605     04 02 05 05 | 	byte	$00, $f4, $e8, $e0, $da, $db, $de, $e2, $e7, $f1, $fe, $05, $04, $02, $05, $05
18609     0D 15 1B 1E 
1860d     24 2D 2E 2E 
18611     24 1D 1D 1F 
18615     1F 1D 17 15 | 	byte	$0d, $15, $1b, $1e, $24, $2d, $2e, $2e, $24, $1d, $1d, $1f, $1f, $1d, $17, $15
18619     12 11 11 11 
1861d     15 1B 1A 18 
18621     1A 17 0B FA 
18625     EB DD D1 CE | 	byte	$12, $11, $11, $11, $15, $1b, $1a, $18, $1a, $17, $0b, $fa, $eb, $dd, $d1, $ce
18629     CE D4 DB DD 
1862d     D7 D4 E0 ED 
18631     FE 05 02 02 
18635     08 0B 0B 08 | 	byte	$ce, $d4, $db, $dd, $d7, $d4, $e0, $ed, $fe, $05, $02, $02, $08, $0b, $0b, $08
18639     01 FE 04 0D 
1863d     12 14 14 0D 
18641     0B 07 01 02 
18645     05 08 15 27 | 	byte	$01, $fe, $04, $0d, $12, $14, $14, $0d, $0b, $07, $01, $02, $05, $08, $15, $27
18649     2F 31 28 17 
1864d     0B 02 FD FE 
18651     0A 14 11 0E 
18655     08 00 F7 F7 | 	byte	$2f, $31, $28, $17, $0b, $02, $fd, $fe, $0a, $14, $11, $0e, $08, $00, $f7, $f7
18659     FE FB F8 FD 
1865d     FE 05 00 EE 
18661     DD D7 D4 D1 
18665     D2 D4 D8 DB | 	byte	$fe, $fb, $f8, $fd, $fe, $05, $00, $ee, $dd, $d7, $d4, $d1, $d2, $d4, $d8, $db
18669     E7 F5 FE 12 
1866d     1B 17 0E 02 
18671     FB F8 F7 F5 
18675     FA 05 0F 15 | 	byte	$e7, $f5, $fe, $12, $1b, $17, $0e, $02, $fb, $f8, $f7, $f5, $fa, $05, $0f, $15
18679     14 14 12 0D 
1867d     05 05 05 05 
18681     08 0D 15 1D 
18685     1E 24 2B 2F | 	byte	$14, $14, $12, $0d, $05, $05, $05, $05, $08, $0d, $15, $1d, $1e, $24, $2b, $2f
18689     25 17 04 FA 
1868d     F2 ED EB E8 
18691     E4 DD DB E1 
18695     ED F5 FE 0F | 	byte	$25, $17, $04, $fa, $f2, $ed, $eb, $e8, $e4, $dd, $db, $e1, $ed, $f5, $fe, $0f
18699     1D 27 2E 31 
1869d     2E 1F 17 17 
186a1     17 17 1A 21 
186a5     22 24 1D 11 | 	byte	$1d, $27, $2e, $31, $2e, $1f, $17, $17, $17, $17, $1a, $21, $22, $24, $1d, $11
186a9     02 EB D7 C8 
186ad     BD B5 B5 BE 
186b1     CE E1 F1 F7 
186b5     F7 FD 0A 15 | 	byte	$02, $eb, $d7, $c8, $bd, $b5, $b5, $be, $ce, $e1, $f1, $f7, $f7, $fd, $0a, $15
186b9     17 0E 02 FA 
186bd     EE E5 E0 E1 
186c1     EB F2 F7 FE 
186c5     05 0E 15 1B | 	byte	$17, $0e, $02, $fa, $ee, $e5, $e0, $e1, $eb, $f2, $f7, $fe, $05, $0e, $15, $1b
186c9     1F 25 28 2A 
186cd     28 22 17 05 
186d1     F1 E0 D2 C2 
186d5     B7 B1 B4 B7 | 	byte	$1f, $25, $28, $2a, $28, $22, $17, $05, $f1, $e0, $d2, $c2, $b7, $b1, $b4, $b7
186d9     BB C8 D7 E4 
186dd     ED F7 FA FE 
186e1     0A 1A 21 1F 
186e5     1D 18 12 14 | 	byte	$bb, $c8, $d7, $e4, $ed, $f7, $fa, $fe, $0a, $1a, $21, $1f, $1d, $18, $12, $14
186e9     1E 27 2D 38 
186ed     3F 44 45 48 
186f1     42 3E 37 2E 
186f5     22 11 02 FA | 	byte	$1e, $27, $2d, $38, $3f, $44, $45, $48, $42, $3e, $37, $2e, $22, $11, $02, $fa
186f9     F8 F5 F7 F4 
186fd     EE EB E8 E2 
18701     D5 CB CA CB 
18705     CE D8 E2 E7 | 	byte	$f8, $f5, $f7, $f4, $ee, $eb, $e8, $e2, $d5, $cb, $ca, $cb, $ce, $d8, $e2, $e7
18709     F1 FE 0E 18 
1870d     17 11 02 FA 
18711     EE EA E2 DA 
18715     D5 D7 DB ED | 	byte	$f1, $fe, $0e, $18, $17, $11, $02, $fa, $ee, $ea, $e2, $da, $d5, $d7, $db, $ed
18719     FE 07 0D 12 
1871d     15 21 2D 2F 
18721     2E 24 1E 1D 
18725     1B 18 1D 27 | 	byte	$fe, $07, $0d, $12, $15, $21, $2d, $2f, $2e, $24, $1e, $1d, $1b, $18, $1d, $27
18729     34 3A 38 2E 
1872d     28 1D 14 0E 
18731     0E 0E 05 F7 
18735     E0 D1 BA A8 | 	byte	$34, $3a, $38, $2e, $28, $1d, $14, $0e, $0e, $0e, $05, $f7, $e0, $d1, $ba, $a8
18739     9E A1 B2 C7 
1873d     E1 F7 08 14 
18741     1E 24 2A 2E 
18745     2E 2E 2E 25 | 	byte	$9e, $a1, $b2, $c7, $e1, $f7, $08, $14, $1e, $24, $2a, $2e, $2e, $2e, $2e, $25
18749     17 02 EB DA 
1874d     D4 DE E1 D7 
18751     D4 D8 E4 F2 
18755     04 08 05 04 | 	byte	$17, $02, $eb, $da, $d4, $de, $e1, $d7, $d4, $d8, $e4, $f2, $04, $08, $05, $04
18759     02 05 0B 11 
1875d     15 17 1B 1D 
18761     22 22 1E 1B 
18765     1D 21 22 18 | 	byte	$02, $05, $0b, $11, $15, $17, $1b, $1d, $22, $22, $1e, $1b, $1d, $21, $22, $18
18769     0D 02 FD FD 
1876d     FA FA 07 0E 
18771     0B 08 0A 0E 
18775     0E 0B 00 F1 | 	byte	$0d, $02, $fd, $fd, $fa, $fa, $07, $0e, $0b, $08, $0a, $0e, $0e, $0b, $00, $f1
18779     E7 E2 E2 E2 
1877d     DE DA DB E5 
18781     F0 F7 FE FA 
18785     F4 F4 F5 F8 | 	byte	$e7, $e2, $e2, $e2, $de, $da, $db, $e5, $f0, $f7, $fe, $fa, $f4, $f4, $f5, $f8
18789     F8 FB FE 04 
1878d     0B 0B 00 F1 
18791     E4 E4 ED F7 
18795     FE 0A 15 18 | 	byte	$f8, $fb, $fe, $04, $0b, $0b, $00, $f1, $e4, $e4, $ed, $f7, $fe, $0a, $15, $18
18799     11 02 F4 DD 
1879d     D4 D5 DD E4 
187a1     EB F5 FE 05 
187a5     08 04 00 FE | 	byte	$11, $02, $f4, $dd, $d4, $d5, $dd, $e4, $eb, $f5, $fe, $05, $08, $04, $00, $fe
187a9     04 0D 18 22 
187ad     2D 37 3D 3A 
187b1     37 32 32 31 
187b5     2B 28 2D 28 | 	byte	$04, $0d, $18, $22, $2d, $37, $3d, $3a, $37, $32, $32, $31, $2b, $28, $2d, $28
187b9     1A 0B FA F0 
187bd     E5 DE DD DD 
187c1     DA D8 DA E1 
187c5     F0 FE 15 24 | 	byte	$1a, $0b, $fa, $f0, $e5, $de, $dd, $dd, $da, $d8, $da, $e1, $f0, $fe, $15, $24
187c9     2B 28 25 24 
187cd     25 1F 1E 22 
187d1     22 24 1E 11 
187d5     07 0A 12 17 | 	byte	$2b, $28, $25, $24, $25, $1f, $1e, $22, $22, $24, $1e, $11, $07, $0a, $12, $17
187d9     1A 17 11 07 
187dd     00 F5 EB E4 
187e1     DD D2 CD CB 
187e5     C8 C7 C5 BA | 	byte	$1a, $17, $11, $07, $00, $f5, $eb, $e4, $dd, $d2, $cd, $cb, $c8, $c7, $c5, $ba
187e9     B0 B1 B8 CA 
187ed     D5 DE E7 EB 
187f1     EB EA ED F4 
187f5     FA F4 F2 F1 | 	byte	$b0, $b1, $b8, $ca, $d5, $de, $e7, $eb, $eb, $ea, $ed, $f4, $fa, $f4, $f2, $f1
187f9     F1 F7 FE 05 
187fd     12 1E 1F 1A 
18801     14 11 18 24 
18805     2D 35 41 47 | 	byte	$f1, $f7, $fe, $05, $12, $1e, $1f, $1a, $14, $11, $18, $24, $2d, $35, $41, $47
18809     4B 4A 45 3D 
1880d     34 2A 17 08 
18811     FD EE E4 DD 
18815     D8 CE C8 CA | 	byte	$4b, $4a, $45, $3d, $34, $2a, $17, $08, $fd, $ee, $e4, $dd, $d8, $ce, $c8, $ca
18819     D0 D4 DA DE 
1881d     E5 F0 FE 12 
18821     27 35 3B 3A 
18825     2E 22 17 0B | 	byte	$d0, $d4, $da, $de, $e5, $f0, $fe, $12, $27, $35, $3b, $3a, $2e, $22, $17, $0b
18829     05 08 0F 18 
1882d     1F 25 27 28 
18831     25 1D 0E 02 
18835     FA F4 EE ED | 	byte	$05, $08, $0f, $18, $1f, $25, $27, $28, $25, $1d, $0e, $02, $fa, $f4, $ee, $ed
18839     EE F7 F7 F1 
1883d     EA E2 DD D4 
18841     CB C5 C2 C8 
18845     D4 E1 F2 FD | 	byte	$ee, $f7, $f7, $f1, $ea, $e2, $dd, $d4, $cb, $c5, $c2, $c8, $d4, $e1, $f2, $fd
18849     04 0A 0E 11 
1884d     0D 07 00 FD 
18851     FD 01 05 00 
18855     F7 F1 EB EA | 	byte	$04, $0a, $0e, $11, $0d, $07, $00, $fd, $fd, $01, $05, $00, $f7, $f1, $eb, $ea
18859     ED F2 FE 0A 
1885d     15 1B 14 08 
18861     00 F8 F1 EE 
18865     F0 F4 F8 FD | 	byte	$ed, $f2, $fe, $0a, $15, $1b, $14, $08, $00, $f8, $f1, $ee, $f0, $f4, $f8, $fd
18869     FD 04 0E 1A 
1886d     21 1E 1D 24 
18871     2A 2B 22 14 
18875     0B 08 02 F4 | 	byte	$fd, $04, $0e, $1a, $21, $1e, $1d, $24, $2a, $2b, $22, $14, $0b, $08, $02, $f4
18879     E8 E7 F1 FA 
1887d     02 08 0E 12 
18881     1A 1D 1D 1E 
18885     1E 17 0B F4 | 	byte	$e8, $e7, $f1, $fa, $02, $08, $0e, $12, $1a, $1d, $1d, $1e, $1e, $17, $0b, $f4
18889     E2 DA DB E1 
1888d     E4 E8 ED EE 
18891     EE F1 FA 01 
18895     00 FD FB FE | 	byte	$e2, $da, $db, $e1, $e4, $e8, $ed, $ee, $ee, $f1, $fa, $01, $00, $fd, $fb, $fe
18899     07 0F 14 11 
1889d     02 F8 F4 F8 
188a1     FE 00 02 05 
188a5     08 0A 08 02 | 	byte	$07, $0f, $14, $11, $02, $f8, $f4, $f8, $fe, $00, $02, $05, $08, $0a, $08, $02
188a9     FE FE 05 05 
188ad     05 01 01 0D 
188b1     1E 2F 3E 44 
188b5     44 3E 37 28 | 	byte	$fe, $fe, $05, $05, $05, $01, $01, $0d, $1e, $2f, $3e, $44, $44, $3e, $37, $28
188b9     1B 0B FA E8 
188bd     DA D1 CB D0 
188c1     DE E5 ED F2 
188c5     F8 FE 0A 11 | 	byte	$1b, $0b, $fa, $e8, $da, $d1, $cb, $d0, $de, $e5, $ed, $f2, $f8, $fe, $0a, $11
188c9     14 14 0F 0B 
188cd     07 08 05 01 
188d1     00 FE FA F7 
188d5     F2 E8 E2 E4 | 	byte	$14, $14, $0f, $0b, $07, $08, $05, $01, $00, $fe, $fa, $f7, $f2, $e8, $e2, $e4
188d9     ED F2 EE E8 
188dd     E2 DD DA D5 
188e1     D7 D8 DE E7 
188e5     ED F7 FD FE | 	byte	$ed, $f2, $ee, $e8, $e2, $dd, $da, $d5, $d7, $d8, $de, $e7, $ed, $f7, $fd, $fe
188e9     08 14 1B 1D 
188ed     1E 17 0B 00 
188f1     F4 E8 E5 E7 
188f5     F0 F5 FB 08 | 	byte	$08, $14, $1b, $1d, $1e, $17, $0b, $00, $f4, $e8, $e5, $e7, $f0, $f5, $fb, $08
188f9     15 1E 1F 1D 
188fd     12 0E 15 1A 
18901     1E 1F 18 14 
18905     11 0D 0B 08 | 	byte	$15, $1e, $1f, $1d, $12, $0e, $15, $1a, $1e, $1f, $18, $14, $11, $0d, $0b, $08
18909     02 F7 E8 DD 
1890d     D2 D1 D7 E1 
18911     F0 FD 0A 12 
18915     1E 2D 3D 47 | 	byte	$02, $f7, $e8, $dd, $d2, $d1, $d7, $e1, $f0, $fd, $0a, $12, $1e, $2d, $3d, $47
18919     4B 4E 4F 4B 
1891d     48 45 3F 3A 
18921     31 28 1F 12 
18925     02 F1 E0 D2 | 	byte	$4b, $4e, $4f, $4b, $48, $45, $3f, $3a, $31, $28, $1f, $12, $02, $f1, $e0, $d2
18929     C8 C1 BA BA 
1892d     C1 D0 DB E2 
18931     EA EE EE E8 
18935     DD D8 D8 DA | 	byte	$c8, $c1, $ba, $ba, $c1, $d0, $db, $e2, $ea, $ee, $ee, $e8, $dd, $d8, $d8, $da
18939     DB E5 F1 FE 
1893d     02 04 02 00 
18941     FA F4 EB EB 
18945     F5 04 12 1A | 	byte	$db, $e5, $f1, $fe, $02, $04, $02, $00, $fa, $f4, $eb, $eb, $f5, $04, $12, $1a
18949     1A 1D 27 2E 
1894d     2E 2A 22 17 
18951     0B 04 FD FB 
18955     F7 EE E5 DA | 	byte	$1a, $1d, $27, $2e, $2e, $2a, $22, $17, $0b, $04, $fd, $fb, $f7, $ee, $e5, $da
18959     D2 D1 D4 D5 
1895d     E0 EB EE EB 
18961     F0 FD 07 12 
18965     1B 24 22 1E | 	byte	$d2, $d1, $d4, $d5, $e0, $eb, $ee, $eb, $f0, $fd, $07, $12, $1b, $24, $22, $1e
18969     1B 1D 1F 1F 
1896d     1D 17 0F 0B 
18971     0A 07 07 0A 
18975     0E 12 12 15 | 	byte	$1b, $1d, $1f, $1f, $1d, $17, $0f, $0b, $0a, $07, $07, $0a, $0e, $12, $12, $15
18979     17 12 12 11 
1897d     0B 0A 0A 0D 
18981     0D 08 00 F4 
18985     EB E8 E5 E5 | 	byte	$17, $12, $12, $11, $0b, $0a, $0a, $0d, $0d, $08, $00, $f4, $eb, $e8, $e5, $e5
18989     EA EE EE E8 
1898d     DE DD E7 FE 
18991     14 27 2E 34 
18995     34 31 24 1D | 	byte	$ea, $ee, $ee, $e8, $de, $dd, $e7, $fe, $14, $27, $2e, $34, $34, $31, $24, $1d
18999     17 11 05 F4 
1899d     E8 E5 ED FB 
189a1     07 0F 11 0D 
189a5     08 0D 0B 08 | 	byte	$17, $11, $05, $f4, $e8, $e5, $ed, $fb, $07, $0f, $11, $0d, $08, $0d, $0b, $08
189a9     05 04 00 F7 
189ad     E8 DD D8 DA 
189b1     DA DB DE DD 
189b5     DD DE E2 E7 | 	byte	$05, $04, $00, $f7, $e8, $dd, $d8, $da, $da, $db, $de, $dd, $dd, $de, $e2, $e7
189b9     EA F0 F4 F7 
189bd     FB FE 02 02 
189c1     00 FD FE 05 
189c5     0A 0E 15 1E | 	byte	$ea, $f0, $f4, $f7, $fb, $fe, $02, $02, $00, $fd, $fe, $05, $0a, $0e, $15, $1e
189c9     21 1D 0E 00 
189cd     FA FE 02 00 
189d1     F0 E0 D4 CE 
189d5     D0 DB E5 E5 | 	byte	$21, $1d, $0e, $00, $fa, $fe, $02, $00, $f0, $e0, $d4, $ce, $d0, $db, $e5, $e5
189d9     E7 EB F2 FE 
189dd     12 21 2B 2B 
189e1     27 22 1D 14 
189e5     0F 0E 0D 0B | 	byte	$e7, $eb, $f2, $fe, $12, $21, $2b, $2b, $27, $22, $1d, $14, $0f, $0e, $0d, $0b
189e9     0E 14 21 2F 
189ed     38 35 2E 22 
189f1     1A 1B 24 2B 
189f5     27 1D 0E 01 | 	byte	$0e, $14, $21, $2f, $38, $35, $2e, $22, $1a, $1b, $24, $2b, $27, $1d, $0e, $01
189f9     F4 EA ED F8 
189fd     05 11 14 11 
18a01     0B 00 FA F7 
18a05     F5 F1 E5 D8 | 	byte	$f4, $ea, $ed, $f8, $05, $11, $14, $11, $0b, $00, $fa, $f7, $f5, $f1, $e5, $d8
18a09     CE CE D5 E1 
18a0d     E7 EB ED EB 
18a11     ED F1 F4 F7 
18a15     F8 F7 F5 F4 | 	byte	$ce, $ce, $d5, $e1, $e7, $eb, $ed, $eb, $ed, $f1, $f4, $f7, $f8, $f7, $f5, $f4
18a19     F1 ED EE F1 
18a1d     F7 FB FD FA 
18a21     FD 08 1B 2A 
18a25     2F 28 1D 0D | 	byte	$f1, $ed, $ee, $f1, $f7, $fb, $fd, $fa, $fd, $08, $1b, $2a, $2f, $28, $1d, $0d
18a29     00 F4 ED ED 
18a2d     F7 FE 0B 1A 
18a31     22 2B 2E 2A 
18a35     25 22 1E 18 | 	byte	$00, $f4, $ed, $ed, $f7, $fe, $0b, $1a, $22, $2b, $2e, $2a, $25, $22, $1e, $18
18a39     17 15 0E 05 
18a3d     FD F4 EE E8 
18a41     EA EE EA EA 
18a45     F1 F7 FE 0A | 	byte	$17, $15, $0e, $05, $fd, $f4, $ee, $e8, $ea, $ee, $ea, $ea, $f1, $f7, $fe, $0a
18a49     0F 11 0E 04 
18a4d     FA F1 E8 D7 
18a51     C8 C0 C0 C4 
18a55     CA CB D2 DB | 	byte	$0f, $11, $0e, $04, $fa, $f1, $e8, $d7, $c8, $c0, $c0, $c4, $ca, $cb, $d2, $db
18a59     E2 F2 FE 08 
18a5d     0E 15 22 32 
18a61     41 4D 52 51 
18a65     48 3A 25 17 | 	byte	$e2, $f2, $fe, $08, $0e, $15, $22, $32, $41, $4d, $52, $51, $48, $3a, $25, $17
18a69     02 F4 EE F5 
18a6d     FD FE FA F8 
18a71     F7 F5 F2 F0 
18a75     EE F2 FD 02 | 	byte	$02, $f4, $ee, $f5, $fd, $fe, $fa, $f8, $f7, $f5, $f2, $f0, $ee, $f2, $fd, $02
18a79     0A 0E 08 02 
18a7d     FE FD FA F1 
18a81     E8 E0 DD E0 
18a85     E4 EB ED E5 | 	byte	$0a, $0e, $08, $02, $fe, $fd, $fa, $f1, $e8, $e0, $dd, $e0, $e4, $eb, $ed, $e5
18a89     E0 E0 E4 EB 
18a8d     F0 F0 F5 FD 
18a91     01 00 FE 02 
18a95     0E 1A 21 28 | 	byte	$e0, $e0, $e4, $eb, $f0, $f0, $f5, $fd, $01, $00, $fe, $02, $0e, $1a, $21, $28
18a99     2D 31 31 28 
18a9d     1A 11 0B 07 
18aa1     00 F4 EB E8 
18aa5     E8 E2 E2 ED | 	byte	$2d, $31, $31, $28, $1a, $11, $0b, $07, $00, $f4, $eb, $e8, $e8, $e2, $e2, $ed
18aa9     F8 02 0B 0E 
18aad     15 1A 17 0F 
18ab1     08 02 F7 F1 
18ab5     F0 F1 F5 F5 | 	byte	$f8, $02, $0b, $0e, $15, $1a, $17, $0f, $08, $02, $f7, $f1, $f0, $f1, $f5, $f5
18ab9     EE EA EB F2 
18abd     FE 0A 0D 0E 
18ac1     0F 11 0F 18 
18ac5     28 38 44 47 | 	byte	$ee, $ea, $eb, $f2, $fe, $0a, $0d, $0e, $0f, $11, $0f, $18, $28, $38, $44, $47
18ac9     42 3A 2E 22 
18acd     1B 17 15 17 
18ad1     18 1F 25 28 
18ad5     25 1D 11 05 | 	byte	$42, $3a, $2e, $22, $1b, $17, $15, $17, $18, $1f, $25, $28, $25, $1d, $11, $05
18ad9     00 F4 EB E2 
18add     D7 D1 CB CE 
18ae1     DB EA F4 F5 
18ae5     EB E0 DA D7 | 	byte	$00, $f4, $eb, $e2, $d7, $d1, $cb, $ce, $db, $ea, $f4, $f5, $eb, $e0, $da, $d7
18ae9     DB DD D7 D5 
18aed     D4 D1 CD D0 
18af1     DA E5 F0 FB 
18af5     0A 18 22 2A | 	byte	$db, $dd, $d7, $d5, $d4, $d1, $cd, $d0, $da, $e5, $f0, $fb, $0a, $18, $22, $2a
18af9     2A 2A 27 28 
18afd     2B 2E 31 32 
18b01     31 32 32 31 
18b05     25 17 0B 08 | 	byte	$2a, $2a, $27, $28, $2b, $2e, $31, $32, $31, $32, $32, $31, $25, $17, $0b, $08
18b09     08 05 04 07 
18b0d     0B 0E 08 00 
18b11     FA F7 FD FE 
18b15     FE 00 FD F4 | 	byte	$08, $05, $04, $07, $0b, $0e, $08, $00, $fa, $f7, $fd, $fe, $fe, $00, $fd, $f4
18b19     E5 D4 C8 C5 
18b1d     C7 CA CB C5 
18b21     C1 C2 C4 C7 
18b25     D0 DB E5 F2 | 	byte	$e5, $d4, $c8, $c5, $c7, $ca, $cb, $c5, $c1, $c2, $c4, $c7, $d0, $db, $e5, $f2
18b29     FE 0E 1B 27 
18b2d     28 22 18 14 
18b31     17 1B 1A 18 
18b35     1B 1A 14 0B | 	byte	$fe, $0e, $1b, $27, $28, $22, $18, $14, $17, $1b, $1a, $18, $1b, $1a, $14, $0b
18b39     02 FB F5 F5 
18b3d     FB 07 15 27 
18b41     2E 2E 28 1F 
18b45     1B 14 0B 00 | 	byte	$02, $fb, $f5, $f5, $fb, $07, $15, $27, $2e, $2e, $28, $1f, $1b, $14, $0b, $00
18b49     F7 F2 F4 FD 
18b4d     02 07 0A 07 
18b51     00 F4 E5 DA 
18b55     D5 D7 D7 D2 | 	byte	$f7, $f2, $f4, $fd, $02, $07, $0a, $07, $00, $f4, $e5, $da, $d5, $d7, $d7, $d2
18b59     D1 CB CB D2 
18b5d     D8 D5 D2 D2 
18b61     D1 D1 D7 DE 
18b65     EA F8 0D 1E | 	byte	$d1, $cb, $cb, $d2, $d8, $d5, $d2, $d2, $d1, $d1, $d7, $de, $ea, $f8, $0d, $1e
18b69     28 2A 25 1F 
18b6d     1B 1A 1A 1B 
18b71     1D 1F 21 22 
18b75     2A 2E 31 2E | 	byte	$28, $2a, $25, $1f, $1b, $1a, $1a, $1b, $1d, $1f, $21, $22, $2a, $2e, $31, $2e
18b79     2A 24 24 22 
18b7d     1A 0D 01 FA 
18b81     F1 ED EE F7 
18b85     FE 0A 14 18 | 	byte	$2a, $24, $24, $22, $1a, $0d, $01, $fa, $f1, $ed, $ee, $f7, $fe, $0a, $14, $18
18b89     17 0D 01 FA 
18b8d     EE E5 E0 E2 
18b91     EA F2 F4 F1 
18b95     EB E8 E5 EB | 	byte	$17, $0d, $01, $fa, $ee, $e5, $e0, $e2, $ea, $f2, $f4, $f1, $eb, $e8, $e5, $eb
18b99     F2 FA FA F7 
18b9d     F7 FE 0E 1E 
18ba1     2A 35 3B 3E 
18ba5     3B 34 2E 2B | 	byte	$f2, $fa, $fa, $f7, $f7, $fe, $0e, $1e, $2a, $35, $3b, $3e, $3b, $34, $2e, $2b
18ba9     2A 28 25 22 
18bad     1D 17 0B 00 
18bb1     EB D7 C5 C2 
18bb5     C4 CA D0 D1 | 	byte	$2a, $28, $25, $22, $1d, $17, $0b, $00, $eb, $d7, $c5, $c2, $c4, $ca, $d0, $d1
18bb9     D2 D8 DB DD 
18bbd     DB D8 D4 D4 
18bc1     DA E7 F7 0A 
18bc5     1B 25 28 25 | 	byte	$d2, $d8, $db, $dd, $db, $d8, $d4, $d4, $da, $e7, $f7, $0a, $1b, $25, $28, $25
18bc9     22 21 1D 12 
18bcd     0B 08 02 00 
18bd1     F8 FB 0A 1B 
18bd5     1E 17 07 FA | 	byte	$22, $21, $1d, $12, $0b, $08, $02, $00, $f8, $fb, $0a, $1b, $1e, $17, $07, $fa
18bd9     F1 F0 F7 FE 
18bdd     15 28 32 3A 
18be1     3F 3F 3D 35 
18be5     28 17 05 F1 | 	byte	$f1, $f0, $f7, $fe, $15, $28, $32, $3a, $3f, $3f, $3d, $35, $28, $17, $05, $f1
18be9     DD D1 CB CE 
18bed     DA E7 F5 04 
18bf1     0D 11 11 17 
18bf5     17 11 0E 0F | 	byte	$dd, $d1, $cb, $ce, $da, $e7, $f5, $04, $0d, $11, $11, $17, $17, $11, $0e, $0f
18bf9     0D 08 05 0D 
18bfd     15 17 17 15 
18c01     0E 05 F4 EB 
18c05     E2 DA D2 D1 | 	byte	$0d, $08, $05, $0d, $15, $17, $17, $15, $0e, $05, $f4, $eb, $e2, $da, $d2, $d1
18c09     CD C8 BD B2 
18c0d     AE B0 B8 CA 
18c11     DB F0 FA FB 
18c15     FE 0E 1D 2A | 	byte	$cd, $c8, $bd, $b2, $ae, $b0, $b8, $ca, $db, $f0, $fa, $fb, $fe, $0e, $1d, $2a
18c19     31 3A 3B 31 
18c1d     1F 0B FA F4 
18c21     F8 04 0B 0E 
18c25     08 00 FD FE | 	byte	$31, $3a, $3b, $31, $1f, $0b, $fa, $f4, $f8, $04, $0b, $0e, $08, $00, $fd, $fe
18c29     02 07 0B 14 
18c2d     1A 1D 1F 25 
18c31     2A 2E 2F 28 
18c35     1A 0B 02 FB | 	byte	$02, $07, $0b, $14, $1a, $1d, $1f, $25, $2a, $2e, $2f, $28, $1a, $0b, $02, $fb
18c39     F4 ED E7 E5 
18c3d     E0 D4 CB CA 
18c41     CD D0 D7 DD 
18c45     E1 E7 EE F7 | 	byte	$f4, $ed, $e7, $e5, $e0, $d4, $cb, $ca, $cd, $d0, $d7, $dd, $e1, $e7, $ee, $f7
18c49     FD 02 08 08 
18c4d     07 0D 14 1B 
18c51     2B 38 48 55 
18c55     5B 58 4B 3A | 	byte	$fd, $02, $08, $08, $07, $0d, $14, $1b, $2b, $38, $48, $55, $5b, $58, $4b, $3a
18c59     28 1D 14 0F 
18c5d     0E 0E 05 FA 
18c61     EE E5 E1 E7 
18c65     F0 F5 F4 EA | 	byte	$28, $1d, $14, $0f, $0e, $0e, $05, $fa, $ee, $e5, $e1, $e7, $f0, $f5, $f4, $ea
18c69     DE D5 CE C5 
18c6d     BD B4 AD AE 
18c71     B8 C1 C8 CD 
18c75     D8 E4 F0 FB | 	byte	$de, $d5, $ce, $c5, $bd, $b4, $ad, $ae, $b8, $c1, $c8, $cd, $d8, $e4, $f0, $fb
18c79     08 0F 15 1A 
18c7d     1B 18 11 0D 
18c81     05 01 FD F7 
18c85     F1 F0 F1 FB | 	byte	$08, $0f, $15, $1a, $1b, $18, $11, $0d, $05, $01, $fd, $f7, $f1, $f0, $f1, $fb
18c89     0A 1B 27 2A 
18c8d     25 24 25 2A 
18c91     2E 35 3A 35 
18c95     28 17 05 F5 | 	byte	$0a, $1b, $27, $2a, $25, $24, $25, $2a, $2e, $35, $3a, $35, $28, $17, $05, $f5
18c99     EB F0 F8 02 
18c9d     05 05 07 02 
18ca1     F7 EB E5 E2 
18ca5     E2 E1 E1 E7 | 	byte	$eb, $f0, $f8, $02, $05, $05, $07, $02, $f7, $eb, $e5, $e2, $e2, $e1, $e1, $e7
18ca9     EE FE 12 27 
18cad     2E 28 17 05 
18cb1     02 08 0E 15 
18cb5     22 2B 2A 27 | 	byte	$ee, $fe, $12, $27, $2e, $28, $17, $05, $02, $08, $0e, $15, $22, $2b, $2a, $27
18cb9     24 1F 1A 17 
18cbd     14 11 0E 08 
18cc1     00 F5 F4 EE 
18cc5     E4 DA D8 DA | 	byte	$24, $1f, $1a, $17, $14, $11, $0e, $08, $00, $f5, $f4, $ee, $e4, $da, $d8, $da
18cc9     DA D8 DB DA 
18ccd     DA E1 ED FD 
18cd1     0A 1A 27 2F 
18cd5     2E 22 12 05 | 	byte	$da, $d8, $db, $da, $da, $e1, $ed, $fd, $0a, $1a, $27, $2f, $2e, $22, $12, $05
18cd9     02 07 0F 14 
18cdd     15 14 0E 05 
18ce1     FD F4 EE EB 
18ce5     E8 E7 EA F1 | 	byte	$02, $07, $0f, $14, $15, $14, $0e, $05, $fd, $f4, $ee, $eb, $e8, $e7, $ea, $f1
18ce9     F1 ED E8 E5 
18ced     E7 E8 E7 E2 
18cf1     DE E1 EB FB 
18cf5     0F 21 32 3E | 	byte	$f1, $ed, $e8, $e5, $e7, $e8, $e7, $e2, $de, $e1, $eb, $fb, $0f, $21, $32, $3e
18cf9     44 45 42 3A 
18cfd     31 25 17 02 
18d01     F1 E2 DD E0 
18d05     EA F2 F5 F4 | 	byte	$44, $45, $42, $3a, $31, $25, $17, $02, $f1, $e2, $dd, $e0, $ea, $f2, $f5, $f4
18d09     F4 F5 F1 EB 
18d0d     E8 E8 F0 F8 
18d11     01 05 08 0B 
18d15     05 00 F7 EB | 	byte	$f4, $f5, $f1, $eb, $e8, $e8, $f0, $f8, $01, $05, $08, $0b, $05, $00, $f7, $eb
18d19     E8 EA F1 F8 
18d1d     FB F7 F1 EB 
18d21     ED F1 F4 F8 
18d25     FE 07 0F 18 | 	byte	$e8, $ea, $f1, $f8, $fb, $f7, $f1, $eb, $ed, $f1, $f4, $f8, $fe, $07, $0f, $18
18d29     24 2B 2E 31 
18d2d     2F 31 2F 2E 
18d31     2B 28 24 1A 
18d35     11 0B 02 F7 | 	byte	$24, $2b, $2e, $31, $2f, $31, $2f, $2e, $2b, $28, $24, $1a, $11, $0b, $02, $f7
18d39     EB E2 E0 DB 
18d3d     D7 D5 D7 DB 
18d41     E1 E7 E5 E1 
18d45     E1 EA F7 04 | 	byte	$eb, $e2, $e0, $db, $d7, $d5, $d7, $db, $e1, $e7, $e5, $e1, $e1, $ea, $f7, $04
18d49     0F 1A 1F 21 
18d4d     22 22 1D 1E 
18d51     1F 1E 1A 17 
18d55     1A 1A 17 0F | 	byte	$0f, $1a, $1f, $21, $22, $22, $1d, $1e, $1f, $1e, $1a, $17, $1a, $1a, $17, $0f
18d59     05 F8 EB E2 
18d5d     DA D5 DB E7 
18d61     F1 F2 F1 ED 
18d65     EA E5 E1 DD | 	byte	$05, $f8, $eb, $e2, $da, $d5, $db, $e7, $f1, $f2, $f1, $ed, $ea, $e5, $e1, $dd
18d69     DD E1 EB F2 
18d6d     F8 F7 FA FE 
18d71     01 02 FD F8 
18d75     F1 EB ED F7 | 	byte	$dd, $e1, $eb, $f2, $f8, $f7, $fa, $fe, $01, $02, $fd, $f8, $f1, $eb, $ed, $f7
18d79     07 1A 25 28 
18d7d     27 22 1E 1D 
18d81     1E 1F 1E 1A 
18d85     18 14 0B 02 | 	byte	$07, $1a, $25, $28, $27, $22, $1e, $1d, $1e, $1f, $1e, $1a, $18, $14, $0b, $02
18d89     F7 E8 E2 DB 
18d8d     D5 D5 DB E2 
18d91     E7 E8 E5 E7 
18d95     E7 E8 EA EA | 	byte	$f7, $e8, $e2, $db, $d5, $d5, $db, $e2, $e7, $e8, $e5, $e7, $e7, $e8, $ea, $ea
18d99     EA E8 EA ED 
18d9d     F2 FD 08 12 
18da1     15 0E 05 01 
18da5     04 08 0E 11 | 	byte	$ea, $e8, $ea, $ed, $f2, $fd, $08, $12, $15, $0e, $05, $01, $04, $08, $0e, $11
18da9     11 0D 08 01 
18dad     FE FE 05 0B 
18db1     08 05 08 0D 
18db5     0E 0F 17 1F | 	byte	$11, $0d, $08, $01, $fe, $fe, $05, $0b, $08, $05, $08, $0d, $0e, $0f, $17, $1f
18db9     24 25 24 25 
18dbd     2A 2F 34 35 
18dc1     37 34 2A 22 
18dc5     24 22 1E 1B | 	byte	$24, $25, $24, $25, $2a, $2f, $34, $35, $37, $34, $2a, $22, $24, $22, $1e, $1b
18dc9     17 14 0E 02 
18dcd     F5 EE EB EB 
18dd1     ED F2 F1 EA 
18dd5     E5 E7 EA EB | 	byte	$17, $14, $0e, $02, $f5, $ee, $eb, $eb, $ed, $f2, $f1, $ea, $e5, $e7, $ea, $eb
18dd9     ED ED EB E8 
18ddd     E2 DD DA D8 
18de1     DD E1 E7 E7 
18de5     EA EB F0 F8 | 	byte	$ed, $ed, $eb, $e8, $e2, $dd, $da, $d8, $dd, $e1, $e7, $e7, $ea, $eb, $f0, $f8
18de9     05 14 17 17 
18ded     14 14 12 0B 
18df1     01 FA FB FE 
18df5     05 0E 15 25 | 	byte	$05, $14, $17, $17, $14, $14, $12, $0b, $01, $fa, $fb, $fe, $05, $0e, $15, $25
18df9     32 37 31 2E 
18dfd     22 17 05 F7 
18e01     EE EA ED F1 
18e05     FA 07 11 17 | 	byte	$32, $37, $31, $2e, $22, $17, $05, $f7, $ee, $ea, $ed, $f1, $fa, $07, $11, $17
18e09     0F 02 FA F4 
18e0d     F7 FE 08 14 
18e11     1E 1E 17 0B 
18e15     FD F4 E8 DA | 	byte	$0f, $02, $fa, $f4, $f7, $fe, $08, $14, $1e, $1e, $17, $0b, $fd, $f4, $e8, $da
18e19     D1 CE D0 D4 
18e1d     DB E7 F7 08 
18e21     14 18 1D 1D 
18e25     1D 17 0B 05 | 	byte	$d1, $ce, $d0, $d4, $db, $e7, $f7, $08, $14, $18, $1d, $1d, $1d, $17, $0b, $05
18e29     05 0F 1B 21 
18e2d     1E 17 07 F7 
18e31     E8 DA D4 D8 
18e35     E4 F5 04 14 | 	byte	$05, $0f, $1b, $21, $1e, $17, $07, $f7, $e8, $da, $d4, $d8, $e4, $f5, $04, $14
18e39     21 2D 35 3B 
18e3d     3D 3A 31 27 
18e41     1D 11 07 FD 
18e45     F1 E8 DD CD | 	byte	$21, $2d, $35, $3b, $3d, $3a, $31, $27, $1d, $11, $07, $fd, $f1, $e8, $dd, $cd
18e49     C0 BA C1 D0 
18e4d     DB E7 EB EE 
18e51     EE F1 F8 FE 
18e55     01 FB F7 F7 | 	byte	$c0, $ba, $c1, $d0, $db, $e7, $eb, $ee, $ee, $f1, $f8, $fe, $01, $fb, $f7, $f7
18e59     F1 EB E7 E1 
18e5d     DA D7 D8 E1 
18e61     ED FB 08 14 
18e65     1A 1E 24 2A | 	byte	$f1, $eb, $e7, $e1, $da, $d7, $d8, $e1, $ed, $fb, $08, $14, $1a, $1e, $24, $2a
18e69     2E 31 31 32 
18e6d     31 2E 28 25 
18e71     25 22 1A 11 
18e75     0B 05 02 01 | 	byte	$2e, $31, $31, $32, $31, $2e, $28, $25, $25, $22, $1a, $11, $0b, $05, $02, $01
18e79     FE FD 01 00 
18e7d     FD F7 F0 E5 
18e81     D7 CD C7 C8 
18e85     CE D8 E7 F5 | 	byte	$fe, $fd, $01, $00, $fd, $f7, $f0, $e5, $d7, $cd, $c7, $c8, $ce, $d8, $e7, $f5
18e89     FE 08 0B 0B 
18e8d     0A 05 02 04 
18e91     0A 12 17 12 
18e95     05 F7 E4 D7 | 	byte	$fe, $08, $0b, $0b, $0a, $05, $02, $04, $0a, $12, $17, $12, $05, $f7, $e4, $d7
18e99     CE D0 D8 E7 
18e9d     FD 0E 1B 22 
18ea1     22 1A 0E 0B 
18ea5     0E 14 17 18 | 	byte	$ce, $d0, $d8, $e7, $fd, $0e, $1b, $22, $22, $1a, $0e, $0b, $0e, $14, $17, $18
18ea9     11 08 FA EE 
18ead     E8 E8 E8 E7 
18eb1     E4 E4 E4 E5 
18eb5     E5 E2 E0 E1 | 	byte	$11, $08, $fa, $ee, $e8, $e8, $e8, $e7, $e4, $e4, $e4, $e5, $e5, $e2, $e0, $e1
18eb9     E7 F0 F8 FE 
18ebd     0B 17 1F 24 
18ec1     22 1F 1A 11 
18ec5     05 FA F4 F1 | 	byte	$e7, $f0, $f8, $fe, $0b, $17, $1f, $24, $22, $1f, $1a, $11, $05, $fa, $f4, $f1
18ec9     EE F2 FE 0A 
18ecd     18 24 25 22 
18ed1     1E 1B 1B 18 
18ed5     14 11 0F 0B | 	byte	$ee, $f2, $fe, $0a, $18, $24, $25, $22, $1e, $1b, $1b, $18, $14, $11, $0f, $0b
18ed9     05 07 0F 17 
18edd     1A 17 15 11 
18ee1     11 0F 0B 07 
18ee5     00 FA F7 F5 | 	byte	$05, $07, $0f, $17, $1a, $17, $15, $11, $11, $0f, $0b, $07, $00, $fa, $f7, $f5
18ee9     F7 FB 02 0B 
18eed     0E 12 1A 21 
18ef1     25 27 22 17 
18ef5     0B 00 FA FE | 	byte	$f7, $fb, $02, $0b, $0e, $12, $1a, $21, $25, $27, $22, $17, $0b, $00, $fa, $fe
18ef9     05 0B 0E 0E 
18efd     05 F7 E8 DD 
18f01     D7 D4 D1 CE 
18f05     CD D2 DB E5 | 	byte	$05, $0b, $0e, $0e, $05, $f7, $e8, $dd, $d7, $d4, $d1, $ce, $cd, $d2, $db, $e5
18f09     F1 FE 05 05 
18f0d     00 F8 F5 FB 
18f11     04 0A 0D 0B 
18f15     05 02 01 01 | 	byte	$f1, $fe, $05, $05, $00, $f8, $f5, $fb, $04, $0a, $0d, $0b, $05, $02, $01, $01
18f19     FD F7 F1 F0 
18f1d     F5 FE 07 12 
18f21     1E 27 28 25 
18f25     1D 12 05 FA | 	byte	$fd, $f7, $f1, $f0, $f5, $fe, $07, $12, $1e, $27, $28, $25, $1d, $12, $05, $fa
18f29     F2 F1 F1 EE 
18f2d     E8 E2 E0 E1 
18f31     E2 E2 E2 E4 
18f35     E2 E7 F2 FE | 	byte	$f2, $f1, $f1, $ee, $e8, $e2, $e0, $e1, $e2, $e2, $e2, $e4, $e2, $e7, $f2, $fe
18f39     05 07 02 FD 
18f3d     F7 F5 FA 04 
18f41     15 24 34 41 
18f45     48 4D 4B 48 | 	byte	$05, $07, $02, $fd, $f7, $f5, $fa, $04, $15, $24, $34, $41, $48, $4d, $4b, $48
18f49     3F 34 28 24 
18f4d     22 21 1A 0E 
18f51     00 F4 E8 E1 
18f55     E0 E0 E2 EA | 	byte	$3f, $34, $28, $24, $22, $21, $1a, $0e, $00, $f4, $e8, $e1, $e0, $e0, $e2, $ea
18f59     F0 F0 EB E8 
18f5d     E8 EA ED F7 
18f61     04 12 1A 1B 
18f65     17 11 08 00 | 	byte	$f0, $f0, $eb, $e8, $e8, $ea, $ed, $f7, $04, $12, $1a, $1b, $17, $11, $08, $00
18f69     FB F7 F0 E8 
18f6d     E5 E1 DD DD 
18f71     E0 E2 EA F2 
18f75     FE 15 21 27 | 	byte	$fb, $f7, $f0, $e8, $e5, $e1, $dd, $dd, $e0, $e2, $ea, $f2, $fe, $15, $21, $27
18f79     2A 2E 32 2E 
18f7d     25 1F 17 0B 
18f81     00 F7 F4 F1 
18f85     F1 F5 FA FD | 	byte	$2a, $2e, $32, $2e, $25, $1f, $17, $0b, $00, $f7, $f4, $f1, $f1, $f5, $fa, $fd
18f89     FE FD F8 EB 
18f8d     E0 D4 D1 CE 
18f91     D0 D4 D7 D7 
18f95     D7 DB E5 F1 | 	byte	$fe, $fd, $f8, $eb, $e0, $d4, $d1, $ce, $d0, $d4, $d7, $d7, $d7, $db, $e5, $f1
18f99     F5 F4 EE EB 
18f9d     EB F1 F8 FE 
18fa1     04 0D 15 22 
18fa5     2F 32 31 2E | 	byte	$f5, $f4, $ee, $eb, $eb, $f1, $f8, $fe, $04, $0d, $15, $22, $2f, $32, $31, $2e
18fa9     24 17 05 FA 
18fad     F1 EE F0 F7 
18fb1     FE 08 0E 14 
18fb5     18 1F 27 2E | 	byte	$24, $17, $05, $fa, $f1, $ee, $f0, $f7, $fe, $08, $0e, $14, $18, $1f, $27, $2e
18fb9     2F 2E 24 18 
18fbd     0B 00 F4 F1 
18fc1     F1 F5 F8 F7 
18fc5     F7 F4 ED E2 | 	byte	$2f, $2e, $24, $18, $0b, $00, $f4, $f1, $f1, $f5, $f8, $f7, $f7, $f4, $ed, $e2
18fc9     DD D8 DA E0 
18fcd     E7 F7 04 0F 
18fd1     14 17 1A 1D 
18fd5     22 25 2B 2F | 	byte	$dd, $d8, $da, $e0, $e7, $f7, $04, $0f, $14, $17, $1a, $1d, $22, $25, $2b, $2f
18fd9     31 2E 24 1A 
18fdd     0E 02 F7 ED 
18fe1     ED F1 F5 F7 
18fe5     F4 ED E5 E1 | 	byte	$31, $2e, $24, $1a, $0e, $02, $f7, $ed, $ed, $f1, $f5, $f7, $f4, $ed, $e5, $e1
18fe9     E1 E7 ED F7 
18fed     04 0E 14 1B 
18ff1     24 2B 2F 2F 
18ff5     2A 1F 14 08 | 	byte	$e1, $e7, $ed, $f7, $04, $0e, $14, $1b, $24, $2b, $2f, $2f, $2a, $1f, $14, $08
18ff9     01 FE FD FD 
18ffd     F8 EE E2 DA 
19001     D4 CB C7 C8 
19005     CE D5 DB E4 | 	byte	$01, $fe, $fd, $fd, $f8, $ee, $e2, $da, $d4, $cb, $c7, $c8, $ce, $d5, $db, $e4
19009     EB F0 F5 FB 
1900d     01 0A 11 18 
19011     1E 1F 24 22 
19015     1D 1A 14 0E | 	byte	$eb, $f0, $f5, $fb, $01, $0a, $11, $18, $1e, $1f, $24, $22, $1d, $1a, $14, $0e
19019     0B 0A 08 05 
1901d     02 FD FB FE 
19021     07 0A 07 07 
19025     0A 0D 0B 0B | 	byte	$0b, $0a, $08, $05, $02, $fd, $fb, $fe, $07, $0a, $07, $07, $0a, $0d, $0b, $0b
19029     0D 0E 0D 02 
1902d     F5 EA E0 D7 
19031     D0 CA C8 CE 
19035     DA EB FB 08 | 	byte	$0d, $0e, $0d, $02, $f5, $ea, $e0, $d7, $d0, $ca, $c8, $ce, $da, $eb, $fb, $08
19039     11 12 11 11 
1903d     12 14 11 08 
19041     02 00 FD F8 
19045     F8 F7 F7 F8 | 	byte	$11, $12, $11, $11, $12, $14, $11, $08, $02, $00, $fd, $f8, $f8, $f7, $f7, $f8
19049     FB FE FE FA 
1904d     F4 F0 F2 F8 
19051     FE 08 0D 14 
19055     1B 27 2F 34 | 	byte	$fb, $fe, $fe, $fa, $f4, $f0, $f2, $f8, $fe, $08, $0d, $14, $1b, $27, $2f, $34
19059     2F 25 1A 11 
1905d     08 04 00 F8 
19061     F0 EB E8 EB 
19065     EE F2 F8 FE | 	byte	$2f, $25, $1a, $11, $08, $04, $00, $f8, $f0, $eb, $e8, $eb, $ee, $f2, $f8, $fe
19069     02 02 00 FE 
1906d     01 01 FE FE 
19071     0A 18 28 35 
19075     41 44 3F 34 | 	byte	$02, $02, $00, $fe, $01, $01, $fe, $fe, $0a, $18, $28, $35, $41, $44, $3f, $34
19079     28 24 1F 17 
1907d     0E 08 05 FD 
19081     EE E2 D7 D1 
19085     D2 DA E1 E4 | 	byte	$28, $24, $1f, $17, $0e, $08, $05, $fd, $ee, $e2, $d7, $d1, $d2, $da, $e1, $e4
19089     E7 F0 F7 FE 
1908d     0A 12 17 18 
19091     1B 1D 1D 1D 
19095     1D 18 0E 02 | 	byte	$e7, $f0, $f7, $fe, $0a, $12, $17, $18, $1b, $1d, $1d, $1d, $1d, $18, $0e, $02
19099     FE 02 0B 0E 
1909d     0D 0B 07 07 
190a1     05 FD F1 E5 
190a5     E0 DE DD DD | 	byte	$fe, $02, $0b, $0e, $0d, $0b, $07, $07, $05, $fd, $f1, $e5, $e0, $de, $dd, $dd
190a9     D8 D4 CB C2 
190ad     BA B7 B8 C2 
190b1     CD D7 DE E1 
190b5     E5 EB F1 F5 | 	byte	$d8, $d4, $cb, $c2, $ba, $b7, $b8, $c2, $cd, $d7, $de, $e1, $e5, $eb, $f1, $f5
190b9     FB 07 12 1A 
190bd     1E 25 2B 31 
190c1     34 31 25 17 
190c5     0B 02 FE FD | 	byte	$fb, $07, $12, $1a, $1e, $25, $2b, $31, $34, $31, $25, $17, $0b, $02, $fe, $fd
190c9     FE 00 02 00 
190cd     FA F4 F4 F8 
190d1     FE 0A 12 18 
190d5     21 24 27 2A | 	byte	$fe, $00, $02, $00, $fa, $f4, $f4, $f8, $fe, $0a, $12, $18, $21, $24, $27, $2a
190d9     2B 2B 2A 28 
190dd     27 22 1F 1E 
190e1     1B 17 0E 08 
190e5     05 04 00 FD | 	byte	$2b, $2b, $2a, $28, $27, $22, $1f, $1e, $1b, $17, $0e, $08, $05, $04, $00, $fd
190e9     F7 F1 E8 DD 
190ed     D4 D1 CD C5 
190f1     C2 C2 C5 CB 
190f5     D4 E1 F1 FA | 	byte	$f7, $f1, $e8, $dd, $d4, $d1, $cd, $c5, $c2, $c2, $c5, $cb, $d4, $e1, $f1, $fa
190f9     FA F5 F1 EE 
190fd     ED ED F4 FE 
19101     07 0E 11 15 
19105     17 12 0E 0E | 	byte	$fa, $f5, $f1, $ee, $ed, $ed, $f4, $fe, $07, $0e, $11, $15, $17, $12, $0e, $0e
19109     0B 0A 0B 14 
1910d     21 2D 38 41 
19111     47 42 37 28 
19115     1A 15 0E 07 | 	byte	$0b, $0a, $0b, $14, $21, $2d, $38, $41, $47, $42, $37, $28, $1a, $15, $0e, $07
19119     02 FD FA F4 
1911d     EB E2 E0 E1 
19121     E4 E2 DE DA 
19125     D7 DB DB D8 | 	byte	$02, $fd, $fa, $f4, $eb, $e2, $e0, $e1, $e4, $e2, $de, $da, $d7, $db, $db, $d8
19129     D8 DA DD E4 
1912d     F0 FE 0D 18 
19131     17 14 15 1F 
19135     21 1F 1D 1B | 	byte	$d8, $da, $dd, $e4, $f0, $fe, $0d, $18, $17, $14, $15, $1f, $21, $1f, $1d, $1b
19139     1A 14 0E 0B 
1913d     08 08 0E 12 
19141     11 0B 02 FB 
19145     FB FE 07 0B | 	byte	$1a, $14, $0e, $0b, $08, $08, $0e, $12, $11, $0b, $02, $fb, $fb, $fe, $07, $0b
19149     0D 0D 0E 12 
1914d     1A 1F 28 31 
19151     31 2E 25 1D 
19155     17 08 F7 EB | 	byte	$0d, $0d, $0e, $12, $1a, $1f, $28, $31, $31, $2e, $25, $1d, $17, $08, $f7, $eb
19159     E5 DE D7 D5 
1915d     DB E7 F2 FE 
19161     04 02 00 FA 
19165     F1 E4 DA DB | 	byte	$e5, $de, $d7, $d5, $db, $e7, $f2, $fe, $04, $02, $00, $fa, $f1, $e4, $da, $db
19169     DA D7 D8 DB 
1916d     E2 E8 EE F2 
19171     F7 FE 12 27 
19175     32 35 2E 1F | 	byte	$da, $d7, $d8, $db, $e2, $e8, $ee, $f2, $f7, $fe, $12, $27, $32, $35, $2e, $1f
19179     0B 00 FE FE 
1917d     FE F8 F8 FE 
19181     0D 11 0D 0A 
19185     08 08 05 FA | 	byte	$0b, $00, $fe, $fe, $fe, $f8, $f8, $fe, $0d, $11, $0d, $0a, $08, $08, $05, $fa
19189     F7 FD FE FE 
1918d     FB F8 FB FA 
19191     F4 EE F2 FE 
19195     12 1E 28 2F | 	byte	$f7, $fd, $fe, $fe, $fb, $f8, $fb, $fa, $f4, $ee, $f2, $fe, $12, $1e, $28, $2f
19199     2E 24 1A 17 
1919d     14 17 1D 1E 
191a1     1B 1A 17 0E 
191a5     00 E8 D4 C8 | 	byte	$2e, $24, $1a, $17, $14, $17, $1d, $1e, $1b, $1a, $17, $0e, $00, $e8, $d4, $c8
191a9     C2 C2 C7 C8 
191ad     C7 C8 D0 E1 
191b1     ED F1 EB E7 
191b5     E7 F2 04 12 | 	byte	$c2, $c2, $c7, $c8, $c7, $c8, $d0, $e1, $ed, $f1, $eb, $e7, $e7, $f2, $04, $12
191b9     1D 1F 1F 1D 
191bd     17 0B 01 F5 
191c1     ED EB EB EB 
191c5     EA F1 FD 07 | 	byte	$1d, $1f, $1f, $1d, $17, $0b, $01, $f5, $ed, $eb, $eb, $eb, $ea, $f1, $fd, $07
191c9     15 1F 2A 2B 
191cd     28 22 18 17 
191d1     1A 1B 17 14 
191d5     1B 1F 21 1D | 	byte	$15, $1f, $2a, $2b, $28, $22, $18, $17, $1a, $1b, $17, $14, $1b, $1f, $21, $1d
191d9     12 08 FD EE 
191dd     E1 E0 E0 E5 
191e1     F0 F5 F1 E8 
191e5     E7 F5 FE 0A | 	byte	$12, $08, $fd, $ee, $e1, $e0, $e0, $e5, $f0, $f5, $f1, $e8, $e7, $f5, $fe, $0a
191e9     0B 08 05 00 
191ed     F7 EE E5 E2 
191f1     E7 F1 FB FE 
191f5     FE FD FB FD | 	byte	$0b, $08, $05, $00, $f7, $ee, $e5, $e2, $e7, $f1, $fb, $fe, $fe, $fd, $fb, $fd
191f9     FE 07 0E 14 
191fd     18 1A 1A 1B 
19201     1A 18 18 1E 
19205     27 2F 34 34 | 	byte	$fe, $07, $0e, $14, $18, $1a, $1a, $1b, $1a, $18, $18, $1e, $27, $2f, $34, $34
19209     2E 28 1D 0B 
1920d     F7 E8 EA F2 
19211     F7 F8 F2 EA 
19215     E2 D4 CB C4 | 	byte	$2e, $28, $1d, $0b, $f7, $e8, $ea, $f2, $f7, $f8, $f2, $ea, $e2, $d4, $cb, $c4
19219     C0 BD C0 C2 
1921d     C2 C7 CA CD 
19221     CD CE D0 DB 
19225     E7 F1 FB 04 | 	byte	$c0, $bd, $c0, $c2, $c2, $c7, $ca, $cd, $cd, $ce, $d0, $db, $e7, $f1, $fb, $04
19229     11 1E 24 22 
1922d     1B 11 02 FE 
19231     04 0F 1B 31 
19235     44 4F 54 4E | 	byte	$11, $1e, $24, $22, $1b, $11, $02, $fe, $04, $0f, $1b, $31, $44, $4f, $54, $4e
19239     45 3D 35 31 
1923d     2A 22 1E 1A 
19241     11 02 F7 E8 
19245     DD D1 C5 BD | 	byte	$45, $3d, $35, $31, $2a, $22, $1e, $1a, $11, $02, $f7, $e8, $dd, $d1, $c5, $bd
19249     BA BB C2 CD 
1924d     D8 E4 ED FB 
19251     0F 24 3B 44 
19255     45 44 45 3F | 	byte	$ba, $bb, $c2, $cd, $d8, $e4, $ed, $fb, $0f, $24, $3b, $44, $45, $44, $45, $3f
19259     2E 1F 1F 24 
1925d     2A 28 27 28 
19261     28 27 27 22 
19265     17 0D 05 F7 | 	byte	$2e, $1f, $1f, $24, $2a, $28, $27, $28, $28, $27, $27, $22, $17, $0d, $05, $f7
19269     ED E2 D4 CA 
1926d     C5 C2 C0 BA 
19271     B4 B0 B1 B8 
19275     C7 D2 DE E7 | 	byte	$ed, $e2, $d4, $ca, $c5, $c2, $c0, $ba, $b4, $b0, $b1, $b8, $c7, $d2, $de, $e7
19279     EB F2 FE 0F 
1927d     1A 17 0E 11 
19281     1E 2A 37 3E 
19285     3F 3A 2E 22 | 	byte	$eb, $f2, $fe, $0f, $1a, $17, $0e, $11, $1e, $2a, $37, $3e, $3f, $3a, $2e, $22
19289     1F 18 0B F7 
1928d     E5 DD DB DA 
19291     D8 DE F0 FE 
19295     15 27 32 34 | 	byte	$1f, $18, $0b, $f7, $e5, $dd, $db, $da, $d8, $de, $f0, $fe, $15, $27, $32, $34
19299     28 18 02 EE 
1929d     DD D1 CE D8 
192a1     E4 E7 ED F8 
192a5     08 15 27 35 | 	byte	$28, $18, $02, $ee, $dd, $d1, $ce, $d8, $e4, $e7, $ed, $f8, $08, $15, $27, $35
192a9     3F 47 48 41 
192ad     31 1F 0D 00 
192b1     F4 EB E5 DD 
192b5     D5 D2 D5 D7 | 	byte	$3f, $47, $48, $41, $31, $1f, $0d, $00, $f4, $eb, $e5, $dd, $d5, $d2, $d5, $d7
192b9     D8 DB E4 EE 
192bd     FB 05 07 05 
192c1     05 0A 12 1A 
192c5     1B 18 17 18 | 	byte	$d8, $db, $e4, $ee, $fb, $05, $07, $05, $05, $0a, $12, $1a, $1b, $18, $17, $18
192c9     14 0B 05 00 
192cd     FA F1 EB E8 
192d1     E5 E7 E5 E2 
192d5     EA F0 F4 F7 | 	byte	$14, $0b, $05, $00, $fa, $f1, $eb, $e8, $e5, $e7, $e5, $e2, $ea, $f0, $f4, $f7
192d9     F1 E5 E4 E7 
192dd     EE F2 F5 F1 
192e1     ED EB EB ED 
192e5     F2 FD 0D 1A | 	byte	$f1, $e5, $e4, $e7, $ee, $f2, $f5, $f1, $ed, $eb, $eb, $ed, $f2, $fd, $0d, $1a
192e9     21 25 28 28 
192ed     2B 38 41 42 
192f1     3D 31 25 1A 
192f5     0D 00 F0 E2 | 	byte	$21, $25, $28, $28, $2b, $38, $41, $42, $3d, $31, $25, $1a, $0d, $00, $f0, $e2
192f9     D7 CD C7 C5 
192fd     C5 CA D0 DB 
19301     ED FE 15 32 
19305     44 4F 4E 42 | 	byte	$d7, $cd, $c7, $c5, $c5, $ca, $d0, $db, $ed, $fe, $15, $32, $44, $4f, $4e, $42
19309     34 28 17 0B 
1930d     00 F7 EB E1 
19311     E0 EB F2 F0 
19315     E8 DD E0 E7 | 	byte	$34, $28, $17, $0b, $00, $f7, $eb, $e1, $e0, $eb, $f2, $f0, $e8, $dd, $e0, $e7
19319     EE F1 F7 FE 
1931d     0B 15 18 12 
19321     0B 00 F4 E5 
19325     DA D5 D8 E0 | 	byte	$ee, $f1, $f7, $fe, $0b, $15, $18, $12, $0b, $00, $f4, $e5, $da, $d5, $d8, $e0
19329     E7 EA EB F1 
1932d     FB 02 05 00 
19331     F8 F2 F2 EB 
19335     E2 DD DE E1 | 	byte	$e7, $ea, $eb, $f1, $fb, $02, $05, $00, $f8, $f2, $f2, $eb, $e2, $dd, $de, $e1
19339     E5 EE F7 FD 
1933d     FD FB FB FE 
19341     0A 1B 2A 38 
19345     4D 5B 62 61 | 	byte	$e5, $ee, $f7, $fd, $fd, $fb, $fb, $fe, $0a, $1b, $2a, $38, $4d, $5b, $62, $61
19349     5D 52 45 31 
1934d     1D 05 F5 EE 
19351     EE F5 FB F7 
19355     F0 E8 E2 E7 | 	byte	$5d, $52, $45, $31, $1d, $05, $f5, $ee, $ee, $f5, $fb, $f7, $f0, $e8, $e2, $e7
19359     F2 FE 0F 18 
1935d     1E 24 31 3D 
19361     3E 3E 3F 41 
19365     3E 34 28 1A | 	byte	$f2, $fe, $0f, $18, $1e, $24, $31, $3d, $3e, $3e, $3f, $41, $3e, $34, $28, $1a
19369     0B 07 04 FB 
1936d     EE E2 D1 C0 
19371     B8 C4 D2 D7 
19375     DB E7 F7 01 | 	byte	$0b, $07, $04, $fb, $ee, $e2, $d1, $c0, $b8, $c4, $d2, $d7, $db, $e7, $f7, $01
19379     08 0D 08 FD 
1937d     F4 E8 DD D4 
19381     CB C2 C2 CD 
19385     DE F2 FE 05 | 	byte	$08, $0d, $08, $fd, $f4, $e8, $dd, $d4, $cb, $c2, $c2, $cd, $de, $f2, $fe, $05
19389     02 FB FE 07 
1938d     12 15 12 0E 
19391     0B 02 F4 E8 
19395     E4 E4 E7 EB | 	byte	$02, $fb, $fe, $07, $12, $15, $12, $0e, $0b, $02, $f4, $e8, $e4, $e4, $e7, $eb
19399     EE EE F1 F2 
1939d     F5 FE 04 02 
193a1     FD FD FE FE 
193a5     04 0F 14 15 | 	byte	$ee, $ee, $f1, $f2, $f5, $fe, $04, $02, $fd, $fd, $fe, $fe, $04, $0f, $14, $15
193a9     0E 05 05 0A 
193ad     0E 15 1E 1D 
193b1     14 0B 02 FB 
193b5     F4 EE E5 E0 | 	byte	$0e, $05, $05, $0a, $0e, $15, $1e, $1d, $14, $0b, $02, $fb, $f4, $ee, $e5, $e0
193b9     DE E2 ED FE 
193bd     0F 21 32 41 
193c1     48 4B 4E 51 
193c5     4D 45 35 25 | 	byte	$de, $e2, $ed, $fe, $0f, $21, $32, $41, $48, $4b, $4e, $51, $4d, $45, $35, $25
193c9     17 0E 0D 08 
193cd     00 FD 01 04 
193d1     07 0B 11 18 
193d5     1F 1E 17 0B | 	byte	$17, $0e, $0d, $08, $00, $fd, $01, $04, $07, $0b, $11, $18, $1f, $1e, $17, $0b
193d9     01 FA F7 F4 
193dd     F1 ED E5 DD 
193e1     D2 C8 C1 C0 
193e5     C8 D2 D4 D0 | 	byte	$01, $fa, $f7, $f4, $f1, $ed, $e5, $dd, $d2, $c8, $c1, $c0, $c8, $d2, $d4, $d0
193e9     CE D0 CB CA 
193ed     CB CB CD D4 
193f1     E7 F8 0A 15 
193f5     21 2D 37 41 | 	byte	$ce, $d0, $cb, $ca, $cb, $cb, $cd, $d4, $e7, $f8, $0a, $15, $21, $2d, $37, $41
193f9     44 3E 31 22 
193fd     17 0E 08 05 
19401     02 F7 E8 DD 
19405     CE CB D0 DB | 	byte	$44, $3e, $31, $22, $17, $0e, $08, $05, $02, $f7, $e8, $dd, $ce, $cb, $d0, $db
19409     EB F4 F1 EA 
1940d     E7 E5 E4 EA 
19411     F1 F1 F2 FA 
19415     F8 F1 F4 FB | 	byte	$eb, $f4, $f1, $ea, $e7, $e5, $e4, $ea, $f1, $f1, $f2, $fa, $f8, $f1, $f4, $fb
19419     FE 02 08 05 
1941d     05 00 FB FD 
19421     01 01 07 15 
19425     21 2F 37 37 | 	byte	$fe, $02, $08, $05, $05, $00, $fb, $fd, $01, $01, $07, $15, $21, $2f, $37, $37
19429     2E 1D 0E 0F 
1942d     12 12 17 1D 
19431     1D 21 28 28 
19435     1F 1B 17 17 | 	byte	$2e, $1d, $0e, $0f, $12, $12, $17, $1d, $1d, $21, $28, $28, $1f, $1b, $17, $17
19439     17 11 08 00 
1943d     F1 E0 D4 D1 
19441     DA E0 E4 EB 
19445     F5 07 18 17 | 	byte	$17, $11, $08, $00, $f1, $e0, $d4, $d1, $da, $e0, $e4, $eb, $f5, $07, $18, $17
19449     0B 00 04 12 
1944d     1F 22 25 27 
19451     22 1D 14 08 
19455     08 08 04 FA | 	byte	$0b, $00, $04, $12, $1f, $22, $25, $27, $22, $1d, $14, $08, $08, $08, $04, $fa
19459     EB E0 D1 CA 
1945d     CE D5 DD DE 
19461     E7 F2 F4 F2 
19465     FA 04 0F 1A | 	byte	$eb, $e0, $d1, $ca, $ce, $d5, $dd, $de, $e7, $f2, $f4, $f2, $fa, $04, $0f, $1a
19469     21 1A 0B 00 
1946d     F1 E8 E4 E1 
19471     E0 DD DD E2 
19475     EA F8 FE 12 | 	byte	$21, $1a, $0b, $00, $f1, $e8, $e4, $e1, $e0, $dd, $dd, $e2, $ea, $f8, $fe, $12
19479     24 37 3D 42 
1947d     3F 3A 37 2E 
19481     2E 2E 27 1D 
19485     1D 1D 1F 1F | 	byte	$24, $37, $3d, $42, $3f, $3a, $37, $2e, $2e, $2e, $27, $1d, $1d, $1d, $1f, $1f
19489     18 18 1A 11 
1948d     00 DD CE CE 
19491     D2 D2 D1 CB 
19495     CD DB F2 04 | 	byte	$18, $18, $1a, $11, $00, $dd, $ce, $ce, $d2, $d2, $d1, $cb, $cd, $db, $f2, $04
19499     0B 07 00 F0 
1949d     ED F8 FE 01 
194a1     FA F4 F4 F8 
194a5     0A 1E 2A 28 | 	byte	$0b, $07, $00, $f0, $ed, $f8, $fe, $01, $fa, $f4, $f4, $f8, $0a, $1e, $2a, $28
194a9     1D 12 0D 01 
194ad     0A 1A 1A 14 
194b1     0B 02 EE DE 
194b5     E7 F8 0A 1E | 	byte	$1d, $12, $0d, $01, $0a, $1a, $1a, $14, $0b, $02, $ee, $de, $e7, $f8, $0a, $1e
194b9     2B 28 1D 15 
194bd     14 11 05 F7 
194c1     EB EB F0 F1 
194c5     F4 F8 E8 D8 | 	byte	$2b, $28, $1d, $15, $14, $11, $05, $f7, $eb, $eb, $f0, $f1, $f4, $f8, $e8, $d8
194c9     D4 D5 DA DB 
194cd     DA DE E1 E7 
194d1     EB E7 E7 F0 
194d5     FE 0F 1F 2A | 	byte	$d4, $d5, $da, $db, $da, $de, $e1, $e7, $eb, $e7, $e7, $f0, $fe, $0f, $1f, $2a
194d9     35 3F 3B 31 
194dd     28 17 05 FD 
194e1     FA 04 0D 0E 
194e5     05 FD FD 0A | 	byte	$35, $3f, $3b, $31, $28, $17, $05, $fd, $fa, $04, $0d, $0e, $05, $fd, $fd, $0a
194e9     1E 25 22 1A 
194ed     0E 07 00 F1 
194f1     E5 E2 E4 E0 
194f5     DA DD D7 D2 | 	byte	$1e, $25, $22, $1a, $0e, $07, $00, $f1, $e5, $e2, $e4, $e0, $da, $dd, $d7, $d2
194f9     D5 E1 F0 FB 
194fd     05 0B 12 11 
19501     15 1B 1D 17 
19505     0B 00 F7 EE | 	byte	$d5, $e1, $f0, $fb, $05, $0b, $12, $11, $15, $1b, $1d, $17, $0b, $00, $f7, $ee
19509     F0 F5 FE 05 
1950d     05 07 0E 11 
19511     0E 08 FB F4 
19515     F0 EA E0 D7 | 	byte	$f0, $f5, $fe, $05, $05, $07, $0e, $11, $0e, $08, $fb, $f4, $f0, $ea, $e0, $d7
19519     CE C5 C0 BD 
1951d     C4 D0 E4 F0 
19521     F7 FB 01 02 
19525     04 0A 12 1D | 	byte	$ce, $c5, $c0, $bd, $c4, $d0, $e4, $f0, $f7, $fb, $01, $02, $04, $0a, $12, $1d
19529     28 32 3B 3F 
1952d     47 4E 51 48 
19531     34 24 1A 0B 
19535     FA E5 E1 E0 | 	byte	$28, $32, $3b, $3f, $47, $4e, $51, $48, $34, $24, $1a, $0b, $fa, $e5, $e1, $e0
19539     D7 D1 D5 E7 
1953d     F5 F8 F4 E5 
19541     E4 E7 E5 ED 
19545     FA 02 08 15 | 	byte	$d7, $d1, $d5, $e7, $f5, $f8, $f4, $e5, $e4, $e7, $e5, $ed, $fa, $02, $08, $15
19549     27 34 34 28 
1954d     1E 17 0D 00 
19551     EB E0 DB D8 
19555     D4 CD C2 BE | 	byte	$27, $34, $34, $28, $1e, $17, $0d, $00, $eb, $e0, $db, $d8, $d4, $cd, $c2, $be
19559     C2 D0 E1 F8 
1955d     07 14 1E 2A 
19561     2F 32 34 34 
19565     35 3F 47 4A | 	byte	$c2, $d0, $e1, $f8, $07, $14, $1e, $2a, $2f, $32, $34, $34, $35, $3f, $47, $4a
19569     42 2E 1A 0B 
1956d     00 F4 EB E2 
19571     D4 C5 BE BE 
19575     C1 CA E1 F7 | 	byte	$42, $2e, $1a, $0b, $00, $f4, $eb, $e2, $d4, $c5, $be, $be, $c1, $ca, $e1, $f7
19579     0F 21 2D 35 
1957d     34 2A 22 1F 
19581     1D 0E 05 FA 
19585     F0 F5 04 0B | 	byte	$0f, $21, $2d, $35, $34, $2a, $22, $1f, $1d, $0e, $05, $fa, $f0, $f5, $04, $0b
19589     08 12 25 2A 
1958d     22 17 15 1B 
19591     17 14 11 07 
19595     00 FD F4 E5 | 	byte	$08, $12, $25, $2a, $22, $17, $15, $1b, $17, $14, $11, $07, $00, $fd, $f4, $e5
19599     E0 E4 E7 ED 
1959d     F1 F0 E8 E4 
195a1     E5 EA F1 F7 
195a5     FB FE 02 07 | 	byte	$e0, $e4, $e7, $ed, $f1, $f0, $e8, $e4, $e5, $ea, $f1, $f7, $fb, $fe, $02, $07
195a9     0D 0E 0B 0E 
195ad     11 0B 0D 11 
195b1     11 0B 08 05 
195b5     05 08 0B 0E | 	byte	$0d, $0e, $0b, $0e, $11, $0b, $0d, $11, $11, $0b, $08, $05, $05, $08, $0b, $0e
195b9     11 0B 00 FD 
195bd     FA FA F8 FD 
195c1     02 00 F7 EB 
195c5     EB E8 E2 E7 | 	byte	$11, $0b, $00, $fd, $fa, $fa, $f8, $fd, $02, $00, $f7, $eb, $eb, $e8, $e2, $e7
195c9     F2 F8 F8 F8 
195cd     F4 F1 F5 FD 
195d1     00 00 FE FA 
195d5     FB FE 02 0E | 	byte	$f2, $f8, $f8, $f8, $f4, $f1, $f5, $fd, $00, $00, $fe, $fa, $fb, $fe, $02, $0e
195d9     15 12 0D 0D 
195dd     0B 08 0F 1A 
195e1     22 25 22 17 
195e5     08 00 FB FA | 	byte	$15, $12, $0d, $0d, $0b, $08, $0f, $1a, $22, $25, $22, $17, $08, $00, $fb, $fa
195e9     FE 08 0B 0D 
195ed     12 17 1A 18 
195f1     1A 17 11 0F 
195f5     0E 07 00 01 | 	byte	$fe, $08, $0b, $0d, $12, $17, $1a, $18, $1a, $17, $11, $0f, $0e, $07, $00, $01
195f9     01 FA EE E0 
195fd     DA D4 D1 CA 
19601     C5 C8 CD D4 
19605     DE E5 ED F5 | 	byte	$01, $fa, $ee, $e0, $da, $d4, $d1, $ca, $c5, $c8, $cd, $d4, $de, $e5, $ed, $f5
19609     FE 07 15 27 
1960d     2B 22 1A 14 
19611     0F 11 17 1B 
19615     1A 11 05 FB | 	byte	$fe, $07, $15, $27, $2b, $22, $1a, $14, $0f, $11, $17, $1b, $1a, $11, $05, $fb
19619     FD FE F7 F4 
1961d     F4 F8 FA F4 
19621     F0 F2 FA FB 
19625     F2 E8 E5 E8 | 	byte	$fd, $fe, $f7, $f4, $f4, $f8, $fa, $f4, $f0, $f2, $fa, $fb, $f2, $e8, $e5, $e8
19629     EA F1 FE 05 
1962d     0B 0E 0E 0B 
19631     0E 14 17 11 
19635     02 F8 EB D8 | 	byte	$ea, $f1, $fe, $05, $0b, $0e, $0e, $0b, $0e, $14, $17, $11, $02, $f8, $eb, $d8
19639     CD CA D0 D8 
1963d     E4 ED F5 FE 
19641     15 2A 38 42 
19645     3A 2E 1A 11 | 	byte	$cd, $ca, $d0, $d8, $e4, $ed, $f5, $fe, $15, $2a, $38, $42, $3a, $2e, $1a, $11
19649     05 F4 EA ED 
1964d     F7 FE 08 0D 
19651     0D 0E 0D 0E 
19655     0E 02 EE E4 | 	byte	$05, $f4, $ea, $ed, $f7, $fe, $08, $0d, $0d, $0e, $0d, $0e, $0e, $02, $ee, $e4
19659     E1 E0 E5 ED 
1965d     F4 FA FA FA 
19661     FE 02 0E 17 
19665     1F 22 24 2A | 	byte	$e1, $e0, $e5, $ed, $f4, $fa, $fa, $fa, $fe, $02, $0e, $17, $1f, $22, $24, $2a
19669     2E 2E 25 22 
1966d     22 22 21 1D 
19671     14 02 EE D7 
19675     C8 BD BE C7 | 	byte	$2e, $2e, $25, $22, $22, $22, $21, $1d, $14, $02, $ee, $d7, $c8, $bd, $be, $c7
19679     D5 E7 F8 0A 
1967d     17 1A 11 04 
19681     FB F2 ED F1 
19685     F8 FE 04 0A | 	byte	$d5, $e7, $f8, $0a, $17, $1a, $11, $04, $fb, $f2, $ed, $f1, $f8, $fe, $04, $0a
19689     0B 05 FB F1 
1968d     EB E8 ED F7 
19691     04 0F 1B 27 
19695     32 34 32 2E | 	byte	$0b, $05, $fb, $f1, $eb, $e8, $ed, $f7, $04, $0f, $1b, $27, $32, $34, $32, $2e
19699     28 22 24 1F 
1969d     24 2D 32 31 
196a1     2A 1F 11 08 
196a5     04 FD FA FA | 	byte	$28, $22, $24, $1f, $24, $2d, $32, $31, $2a, $1f, $11, $08, $04, $fd, $fa, $fa
196a9     FD FD F7 ED 
196ad     E2 D7 C7 B7 
196b1     A8 A0 A1 A7 
196b5     B0 BB C7 CE | 	byte	$fd, $fd, $f7, $ed, $e2, $d7, $c7, $b7, $a8, $a0, $a1, $a7, $b0, $bb, $c7, $ce
196b9     D8 E4 ED F8 
196bd     07 11 15 1A 
196c1     1F 25 2A 28 
196c5     24 1D 17 11 | 	byte	$d8, $e4, $ed, $f8, $07, $11, $15, $1a, $1f, $25, $2a, $28, $24, $1d, $17, $11
196c9     12 1A 25 2B 
196cd     2A 24 1A 11 
196d1     11 0E 0B 08 
196d5     05 05 02 04 | 	byte	$12, $1a, $25, $2b, $2a, $24, $1a, $11, $11, $0e, $0b, $08, $05, $05, $02, $04
196d9     0B 11 1A 22 
196dd     1D 0E 00 F4 
196e1     EA E2 E2 E5 
196e5     EA F0 F1 F4 | 	byte	$0b, $11, $1a, $22, $1d, $0e, $00, $f4, $ea, $e2, $e2, $e5, $ea, $f0, $f1, $f4
196e9     F4 F5 FB 04 
196ed     12 24 38 4A 
196f1     54 52 45 34 
196f5     22 14 0B 00 | 	byte	$f4, $f5, $fb, $04, $12, $24, $38, $4a, $54, $52, $45, $34, $22, $14, $0b, $00
196f9     F1 EB EB E5 
196fd     E0 DD D8 D8 
19701     DE E2 EE FD 
19705     0D 1B 22 27 | 	byte	$f1, $eb, $eb, $e5, $e0, $dd, $d8, $d8, $de, $e2, $ee, $fd, $0d, $1b, $22, $27
19709     22 1A 14 0B 
1970d     00 EB D8 D1 
19711     CB C0 B7 B8 
19715     C7 D8 E0 E4 | 	byte	$22, $1a, $14, $0b, $00, $eb, $d8, $d1, $cb, $c0, $b7, $b8, $c7, $d8, $e0, $e4
19719     E5 E2 DD E0 
1971d     E4 E4 E7 EB 
19721     F2 F7 F8 FE 
19725     14 21 24 27 | 	byte	$e5, $e2, $dd, $e0, $e4, $e4, $e7, $eb, $f2, $f7, $f8, $fe, $14, $21, $24, $27
19729     2B 2A 2E 31 
1972d     31 34 31 2A 
19731     1F 11 02 F0 
19735     E0 D7 D5 E0 | 	byte	$2b, $2a, $2e, $31, $31, $34, $31, $2a, $1f, $11, $02, $f0, $e0, $d7, $d5, $e0
19739     EE F0 EE F2 
1973d     F5 F2 F4 F4 
19741     F5 F4 FA 04 
19745     15 24 22 17 | 	byte	$ee, $f0, $ee, $f2, $f5, $f2, $f4, $f4, $f5, $f4, $fa, $04, $15, $24, $22, $17
19749     0B 08 00 F4 
1974d     E5 DD DB E0 
19751     E7 F4 FE 14 
19755     27 32 3B 3A | 	byte	$0b, $08, $00, $f4, $e5, $dd, $db, $e0, $e7, $f4, $fe, $14, $27, $32, $3b, $3a
19759     3A 37 32 31 
1975d     31 2E 22 1A 
19761     0B 00 EA D7 
19765     D8 DD E0 E7 | 	byte	$3a, $37, $32, $31, $31, $2e, $22, $1a, $0b, $00, $ea, $d7, $d8, $dd, $e0, $e7
19769     F1 FE 0D 0B 
1976d     02 F1 E2 E0 
19771     DE E1 E4 E1 
19775     E0 E7 F2 FE | 	byte	$f1, $fe, $0d, $0b, $02, $f1, $e2, $e0, $de, $e1, $e4, $e1, $e0, $e7, $f2, $fe
19779     02 FA EA E8 
1977d     F5 FE 0F 17 
19781     1E 27 2F 32 
19785     35 34 2E 22 | 	byte	$02, $fa, $ea, $e8, $f5, $fe, $0f, $17, $1e, $27, $2f, $32, $35, $34, $2e, $22
19789     17 05 EE DD 
1978d     DE EB E8 E2 
19791     E7 EE E8 DD 
19795     DA DB DD DB | 	byte	$17, $05, $ee, $dd, $de, $eb, $e8, $e2, $e7, $ee, $e8, $dd, $da, $db, $dd, $db
19799     DD E2 EE FB 
1979d     08 15 21 27 
197a1     25 1D 21 1E 
197a5     17 0E 0D 02 | 	byte	$dd, $e2, $ee, $fb, $08, $15, $21, $27, $25, $1d, $21, $1e, $17, $0e, $0d, $02
197a9     F8 FA 0A 1F 
197ad     28 1F 15 18 
197b1     1E 1F 1D 17 
197b5     0B 0E 15 1A | 	byte	$f8, $fa, $0a, $1f, $28, $1f, $15, $18, $1e, $1f, $1d, $17, $0b, $0e, $15, $1a
197b9     1D 1A 14 11 
197bd     0B 08 08 0A 
197c1     0D 0E 0B 00 
197c5     EE DD CB CB | 	byte	$1d, $1a, $14, $11, $0b, $08, $08, $0a, $0d, $0e, $0b, $00, $ee, $dd, $cb, $cb
197c9     D0 D5 DA DA 
197cd     DA E1 EB F7 
197d1     04 0E 17 1D 
197d5     11 05 05 05 | 	byte	$d0, $d5, $da, $da, $da, $e1, $eb, $f7, $04, $0e, $17, $1d, $11, $05, $05, $05
197d9     00 F8 FD 02 
197dd     08 02 F4 EB 
197e1     F0 F7 FE 05 
197e5     05 00 FE 08 | 	byte	$00, $f8, $fd, $02, $08, $02, $f4, $eb, $f0, $f7, $fe, $05, $05, $00, $fe, $08
197e9     0F 15 1B 1B 
197ed     17 11 02 F4 
197f1     E5 E1 EA FE 
197f5     0D 1B 1A 0E | 	byte	$0f, $15, $1b, $1b, $17, $11, $02, $f4, $e5, $e1, $ea, $fe, $0d, $1b, $1a, $0e
197f9     04 FA F7 05 
197fd     15 17 14 12 
19801     15 1D 22 25 
19805     22 17 0E 08 | 	byte	$04, $fa, $f7, $05, $15, $17, $14, $12, $15, $1d, $22, $25, $22, $17, $0e, $08
19809     00 F1 EA F0 
1980d     F2 F0 ED EE 
19811     F2 F7 FD FD 
19815     02 07 05 02 | 	byte	$00, $f1, $ea, $f0, $f2, $f0, $ed, $ee, $f2, $f7, $fd, $fd, $02, $07, $05, $02
19819     F7 EB EE F2 
1981d     F2 F5 FB FA 
19821     EE E5 E7 ED 
19825     F0 F1 F4 F8 | 	byte	$f7, $eb, $ee, $f2, $f2, $f5, $fb, $fa, $ee, $e5, $e7, $ed, $f0, $f1, $f4, $f8
19829     FD 02 0A 0D 
1982d     05 01 00 FB 
19831     F7 F7 F5 F4 
19835     F5 FA FE 0A | 	byte	$fd, $02, $0a, $0d, $05, $01, $00, $fb, $f7, $f7, $f5, $f4, $f5, $fa, $fe, $0a
19839     0E 11 14 18 
1983d     17 1A 1B 14 
19841     02 EE DD D7 
19845     D4 D4 D2 D7 | 	byte	$0e, $11, $14, $18, $17, $1a, $1b, $14, $02, $ee, $dd, $d7, $d4, $d4, $d2, $d7
19849     E4 F0 F8 F7 
1984d     F7 F8 F8 F8 
19851     FE 0A 18 1B 
19855     1E 22 28 2F | 	byte	$e4, $f0, $f8, $f7, $f7, $f8, $f8, $f8, $fe, $0a, $18, $1b, $1e, $22, $28, $2f
19859     42 4F 4B 41 
1985d     3A 34 2E 22 
19861     17 0F 0E 0E 
19865     0E 0B 0F 11 | 	byte	$42, $4f, $4b, $41, $3a, $34, $2e, $22, $17, $0f, $0e, $0e, $0e, $0b, $0f, $11
19869     11 0B 02 F7 
1986d     F2 ED E8 E8 
19871     E5 DA DB E2 
19875     E4 DD D1 C1 | 	byte	$11, $0b, $02, $f7, $f2, $ed, $e8, $e8, $e5, $da, $db, $e2, $e4, $dd, $d1, $c1
19879     B5 B1 B1 B8 
1987d     C1 D0 DE E2 
19881     E5 E5 E5 EA 
19885     F2 FE 0B 11 | 	byte	$b5, $b1, $b1, $b8, $c1, $d0, $de, $e2, $e5, $e5, $e5, $ea, $f2, $fe, $0b, $11
19889     0F 0E 0D 11 
1988d     11 11 17 18 
19891     17 21 25 24 
19895     1D 14 14 17 | 	byte	$0f, $0e, $0d, $11, $11, $11, $17, $18, $17, $21, $25, $24, $1d, $14, $14, $17
19899     11 0D 0B 07 
1989d     0B 0B 12 1A 
198a1     24 2D 32 38 
198a5     3A 2E 1D 05 | 	byte	$11, $0d, $0b, $07, $0b, $0b, $12, $1a, $24, $2d, $32, $38, $3a, $2e, $1d, $05
198a9     F0 E4 E5 E8 
198ad     EE FB 02 F7 
198b1     E8 E2 DE DE 
198b5     E2 E8 F8 04 | 	byte	$f0, $e4, $e5, $e8, $ee, $fb, $02, $f7, $e8, $e2, $de, $de, $e2, $e8, $f8, $04
198b9     12 1A 11 0B 
198bd     0F 1A 2D 37 
198c1     31 28 17 0B 
198c5     05 00 FD 04 | 	byte	$12, $1a, $11, $0b, $0f, $1a, $2d, $37, $31, $28, $17, $0b, $05, $00, $fd, $04
198c9     05 0F 21 28 
198cd     28 25 1A 12 
198d1     08 0E 14 15 
198d5     1A 1B 17 08 | 	byte	$05, $0f, $21, $28, $28, $25, $1a, $12, $08, $0e, $14, $15, $1a, $1b, $17, $08
198d9     F7 E2 D1 C0 
198dd     B8 BD C2 C1 
198e1     C0 C1 CD DE 
198e5     EA EE F5 F4 | 	byte	$f7, $e2, $d1, $c0, $b8, $bd, $c2, $c1, $c0, $c1, $cd, $de, $ea, $ee, $f5, $f4
198e9     EB E4 E2 E1 
198ed     E7 F7 FD FD 
198f1     F7 EE E8 E7 
198f5     E5 E2 EA F5 | 	byte	$eb, $e4, $e2, $e1, $e7, $f7, $fd, $fd, $f7, $ee, $e8, $e7, $e5, $e2, $ea, $f5
198f9     F8 FE 14 21 
198fd     2E 34 34 38 
19901     3D 3D 3A 31 
19905     1F 0B F4 DD | 	byte	$f8, $fe, $14, $21, $2e, $34, $34, $38, $3d, $3d, $3a, $31, $1f, $0b, $f4, $dd
19909     C8 C2 CA D7 
1990d     DD E1 E7 F0 
19911     F8 0A 1A 27 
19915     35 3E 44 45 | 	byte	$c8, $c2, $ca, $d7, $dd, $e1, $e7, $f0, $f8, $0a, $1a, $27, $35, $3e, $44, $45
19919     35 1D 05 02 
1991d     0D 12 11 11 
19921     1A 27 28 25 
19925     1D 0E 00 FA | 	byte	$35, $1d, $05, $02, $0d, $12, $11, $11, $1a, $27, $28, $25, $1d, $0e, $00, $fa
19929     F1 E8 DD DE 
1992d     EA FD 0F 18 
19931     17 0B 00 FB 
19935     FD FE FA EE | 	byte	$f1, $e8, $dd, $de, $ea, $fd, $0f, $18, $17, $0b, $00, $fb, $fd, $fe, $fa, $ee
19939     F0 FB 08 15 
1993d     1E 21 28 2E 
19941     2E 28 1D 11 
19945     02 F1 E8 E5 | 	byte	$f0, $fb, $08, $15, $1e, $21, $28, $2e, $2e, $28, $1d, $11, $02, $f1, $e8, $e5
19949     DE DA D8 DB 
1994d     E4 E7 EB E8 
19951     E2 DD D7 CB 
19955     C2 BD BA BE | 	byte	$de, $da, $d8, $db, $e4, $e7, $eb, $e8, $e2, $dd, $d7, $cb, $c2, $bd, $ba, $be
19959     C8 D4 E1 EB 
1995d     F1 F4 FA 08 
19961     14 1E 27 2A 
19965     2D 34 35 31 | 	byte	$c8, $d4, $e1, $eb, $f1, $f4, $fa, $08, $14, $1e, $27, $2a, $2d, $34, $35, $31
19969     31 28 1A 0B 
1996d     00 F7 FE 0A 
19971     18 27 32 38 
19975     34 2E 22 17 | 	byte	$31, $28, $1a, $0b, $00, $f7, $fe, $0a, $18, $27, $32, $38, $34, $2e, $22, $17
19979     14 11 14 12 
1997d     0B FA EE F1 
19981     F4 F4 F4 EE 
19985     EB ED E8 E2 | 	byte	$14, $11, $14, $12, $0b, $fa, $ee, $f1, $f4, $f4, $f4, $ee, $eb, $ed, $e8, $e2
19989     D4 C1 B4 AE 
1998d     AE B7 C7 DB 
19991     F0 F1 EB E5 
19995     E5 F0 FA 05 | 	byte	$d4, $c1, $b4, $ae, $ae, $b7, $c7, $db, $f0, $f1, $eb, $e5, $e5, $f0, $fa, $05
19999     11 1B 24 2D 
1999d     34 3D 41 3E 
199a1     37 2E 25 22 
199a5     1A 12 0B 02 | 	byte	$11, $1b, $24, $2d, $34, $3d, $41, $3e, $37, $2e, $25, $22, $1a, $12, $0b, $02
199a9     01 07 0B 05 
199ad     FA EE EB EB 
199b1     E7 DE E4 EA 
199b5     E8 E5 E2 E2 | 	byte	$01, $07, $0b, $05, $fa, $ee, $eb, $eb, $e7, $de, $e4, $ea, $e8, $e5, $e2, $e2
199b9     E1 E2 ED F4 
199bd     F7 FA FE FE 
199c1     08 12 21 32 
199c5     3E 45 4D 4F | 	byte	$e1, $e2, $ed, $f4, $f7, $fa, $fe, $fe, $08, $12, $21, $32, $3e, $45, $4d, $4f
199c9     4D 45 34 22 
199cd     1A 1B 17 0B 
199d1     05 FD FA FB 
199d5     FD FA F7 F5 | 	byte	$4d, $45, $34, $22, $1a, $1b, $17, $0b, $05, $fd, $fa, $fb, $fd, $fa, $f7, $f5
199d9     F8 FE 01 FA 
199dd     F4 E8 D4 C5 
199e1     C1 C1 CE D4 
199e5     DE E5 E7 EA | 	byte	$f8, $fe, $01, $fa, $f4, $e8, $d4, $c5, $c1, $c1, $ce, $d4, $de, $e5, $e7, $ea
199e9     F0 EE F2 FE 
199ed     08 0E 0B F7 
199f1     EB E5 E4 E8 
199f5     E7 F0 FD FA | 	byte	$f0, $ee, $f2, $fe, $08, $0e, $0b, $f7, $eb, $e5, $e4, $e8, $e7, $f0, $fd, $fa
199f9     F8 FE 12 25 
199fd     35 3D 34 2E 
19a01     28 2D 32 35 
19a05     34 2E 17 08 | 	byte	$f8, $fe, $12, $25, $35, $3d, $34, $2e, $28, $2d, $32, $35, $34, $2e, $17, $08
19a09     00 FA EE E2 
19a0d     DD D8 E1 ED 
19a11     ED EA F2 04 
19a15     11 18 1F 24 | 	byte	$00, $fa, $ee, $e2, $dd, $d8, $e1, $ed, $ed, $ea, $f2, $04, $11, $18, $1f, $24
19a19     2A 28 1D 18 
19a1d     0B 00 F1 E8 
19a21     E5 E1 EA FE 
19a25     0B 14 15 14 | 	byte	$2a, $28, $1d, $18, $0b, $00, $f1, $e8, $e5, $e1, $ea, $fe, $0b, $14, $15, $14
19a29     1B 22 25 22 
19a2d     1D 17 02 F4 
19a31     E2 DA DA DD 
19a35     DD E2 F2 FE | 	byte	$1b, $22, $25, $22, $1d, $17, $02, $f4, $e2, $da, $da, $dd, $dd, $e2, $f2, $fe
19a39     04 08 0F 11 
19a3d     02 02 05 08 
19a41     0D 07 F7 E8 
19a45     EA F1 F2 EE | 	byte	$04, $08, $0f, $11, $02, $02, $05, $08, $0d, $07, $f7, $e8, $ea, $f1, $f2, $ee
19a49     E8 E5 E7 EB 
19a4d     F0 F4 FD 02 
19a51     08 0D 18 25 
19a55     2B 2B 2B 25 | 	byte	$e8, $e5, $e7, $eb, $f0, $f4, $fd, $02, $08, $0d, $18, $25, $2b, $2b, $2b, $25
19a59     1D 14 0E 0B 
19a5d     0B 08 04 00 
19a61     F7 F0 EB E0 
19a65     D5 D1 CE CD | 	byte	$1d, $14, $0e, $0b, $0b, $08, $04, $00, $f7, $f0, $eb, $e0, $d5, $d1, $ce, $cd
19a69     CE CE D2 D5 
19a6d     D4 D5 DE E7 
19a71     F4 04 12 18 
19a75     18 1D 2A 3B | 	byte	$ce, $ce, $d2, $d5, $d4, $d5, $de, $e7, $f4, $04, $12, $18, $18, $1d, $2a, $3b
19a79     48 4F 4B 45 
19a7d     41 3B 34 2E 
19a81     24 17 0D 00 
19a85     F1 E2 D7 C8 | 	byte	$48, $4f, $4b, $45, $41, $3b, $34, $2e, $24, $17, $0d, $00, $f1, $e2, $d7, $c8
19a89     BD B7 BD C8 
19a8d     D8 ED FE 02 
19a91     04 02 FE FD 
19a95     02 0A 0B 0F | 	byte	$bd, $b7, $bd, $c8, $d8, $ed, $fe, $02, $04, $02, $fe, $fd, $02, $0a, $0b, $0f
19a99     14 14 1A 1F 
19a9d     1F 1A 11 05 
19aa1     F7 EE E8 E2 
19aa5     DD D4 D4 D4 | 	byte	$14, $14, $1a, $1f, $1f, $1a, $11, $05, $f7, $ee, $e8, $e2, $dd, $d4, $d4, $d4
19aa9     DB E7 F5 07 
19aad     1B 27 21 11 
19ab1     00 F7 F4 EE 
19ab5     E8 E4 E1 E7 | 	byte	$db, $e7, $f5, $07, $1b, $27, $21, $11, $00, $f7, $f4, $ee, $e8, $e4, $e1, $e7
19ab9     F2 FE 0E 1A 
19abd     18 1B 1B 1E 
19ac1     1F 1F 1A 0D 
19ac5     02 02 0F 1B | 	byte	$f2, $fe, $0e, $1a, $18, $1b, $1b, $1e, $1f, $1f, $1a, $0d, $02, $02, $0f, $1b
19ac9     1A 14 14 14 
19acd     11 11 12 0F 
19ad1     11 0E 15 22 
19ad5     22 17 0B 00 | 	byte	$1a, $14, $14, $14, $11, $11, $12, $0f, $11, $0e, $15, $22, $22, $17, $0b, $00
19ad9     ED E5 E7 ED 
19add     EE E8 E0 D8 
19ae1     D8 DB DB E4 
19ae5     F7 0A 1B 24 | 	byte	$ed, $e5, $e7, $ed, $ee, $e8, $e0, $d8, $d8, $db, $db, $e4, $f7, $0a, $1b, $24
19ae9     27 24 17 0B 
19aed     00 F8 F4 F5 
19af1     F4 E2 D7 CE 
19af5     D0 D8 E7 FD | 	byte	$27, $24, $17, $0b, $00, $f8, $f4, $f5, $f4, $e2, $d7, $ce, $d0, $d8, $e7, $fd
19af9     0F 17 14 08 
19afd     07 0D 14 17 
19b01     1B 1E 1D 1A 
19b05     11 0B 05 FA | 	byte	$0f, $17, $14, $08, $07, $0d, $14, $17, $1b, $1e, $1d, $1a, $11, $0b, $05, $fa
19b09     FA FE 04 08 
19b0d     12 17 17 0B 
19b11     F7 E8 D8 D8 
19b15     E1 F1 FE 0A | 	byte	$fa, $fe, $04, $08, $12, $17, $17, $0b, $f7, $e8, $d8, $d8, $e1, $f1, $fe, $0a
19b19     12 14 15 1B 
19b1d     24 2B 2E 28 
19b21     1D 0B F4 E4 
19b25     DE DB DD E7 | 	byte	$12, $14, $15, $1b, $24, $2b, $2e, $28, $1d, $0b, $f4, $e4, $de, $db, $dd, $e7
19b29     F2 FE 0A 11 
19b2d     12 0E 08 05 
19b31     01 FD FA F8 
19b35     FB FE 01 FA | 	byte	$f2, $fe, $0a, $11, $12, $0e, $08, $05, $01, $fd, $fa, $f8, $fb, $fe, $01, $fa
19b39     F2 F2 F4 EE 
19b3d     EB ED E8 EA 
19b41     ED ED ED F0 
19b45     F4 F7 FB FE | 	byte	$f2, $f2, $f4, $ee, $eb, $ed, $e8, $ea, $ed, $ed, $ed, $f0, $f4, $f7, $fb, $fe
19b49     04 0A 12 1B 
19b4d     24 2F 37 3E 
19b51     41 3A 2E 24 
19b55     1E 1A 12 0E | 	byte	$04, $0a, $12, $1b, $24, $2f, $37, $3e, $41, $3a, $2e, $24, $1e, $1a, $12, $0e
19b59     08 04 FD F4 
19b5d     EB DD CD C1 
19b61     BE C0 C5 C7 
19b65     C8 D2 E4 F8 | 	byte	$08, $04, $fd, $f4, $eb, $dd, $cd, $c1, $be, $c0, $c5, $c7, $c8, $d2, $e4, $f8
19b69     0F 27 35 37 
19b6d     31 28 1F 1A 
19b71     14 0B 00 F1 
19b75     EE EE ED F2 | 	byte	$0f, $27, $35, $37, $31, $28, $1f, $1a, $14, $0b, $00, $f1, $ee, $ee, $ed, $f2
19b79     FE 0D 15 1D 
19b7d     27 2E 37 37 
19b81     2E 22 0E F4 
19b85     DD C7 C0 C7 | 	byte	$fe, $0d, $15, $1d, $27, $2e, $37, $37, $2e, $22, $0e, $f4, $dd, $c7, $c0, $c7
19b89     D2 E4 F0 FB 
19b8d     08 15 17 15 
19b91     0E 07 00 FE 
19b95     FD 01 00 E8 | 	byte	$d2, $e4, $f0, $fb, $08, $15, $17, $15, $0e, $07, $00, $fe, $fd, $01, $00, $e8
19b99     D2 C8 D0 E1 
19b9d     EB F0 EB EA 
19ba1     EB EA ED EB 
19ba5     E4 DE DD DE | 	byte	$d2, $c8, $d0, $e1, $eb, $f0, $eb, $ea, $eb, $ea, $ed, $eb, $e4, $de, $dd, $de
19ba9     E4 ED F8 0A 
19bad     1E 2D 35 3A 
19bb1     34 2E 27 22 
19bb5     1A 15 1A 1A | 	byte	$e4, $ed, $f8, $0a, $1e, $2d, $35, $3a, $34, $2e, $27, $22, $1a, $15, $1a, $1a
19bb9     1A 21 22 21 
19bbd     21 22 22 1F 
19bc1     17 11 0B 00 
19bc5     E8 DD E1 E7 | 	byte	$1a, $21, $22, $21, $21, $22, $22, $1f, $17, $11, $0b, $00, $e8, $dd, $e1, $e7
19bc9     F0 F1 E8 DE 
19bcd     D8 D7 D1 C8 
19bd1     C4 C7 D5 E4 
19bd5     F0 FA FD FE | 	byte	$f0, $f1, $e8, $de, $d8, $d7, $d1, $c8, $c4, $c7, $d5, $e4, $f0, $fa, $fd, $fe
19bd9     04 0D 15 1F 
19bdd     27 27 22 21 
19be1     1F 1F 1A 12 
19be5     0D 0B 0B 0D | 	byte	$04, $0d, $15, $1f, $27, $27, $22, $21, $1f, $1f, $1a, $12, $0d, $0b, $0b, $0d
19be9     14 18 18 17 
19bed     17 11 0B 0B 
19bf1     0B 0F 14 11 
19bf5     08 07 0D 14 | 	byte	$14, $18, $18, $17, $17, $11, $0b, $0b, $0b, $0f, $14, $11, $08, $07, $0d, $14
19bf9     17 14 0E 0E 
19bfd     07 FA EB E0 
19c01     DE E0 DD D8 
19c05     DA DB DD DB | 	byte	$17, $14, $0e, $0e, $07, $fa, $eb, $e0, $de, $e0, $dd, $d8, $da, $db, $dd, $db
19c09     DD E2 E8 F2 
19c0d     F8 FA F4 EB 
19c11     E5 E7 EB F2 
19c15     FA FE 07 08 | 	byte	$dd, $e2, $e8, $f2, $f8, $fa, $f4, $eb, $e5, $e7, $eb, $f2, $fa, $fe, $07, $08
19c19     0D 14 12 0E 
19c1d     07 FD F4 F2 
19c21     F8 04 0F 1A 
19c25     21 1E 17 17 | 	byte	$0d, $14, $12, $0e, $07, $fd, $f4, $f2, $f8, $04, $0f, $1a, $21, $1e, $17, $17
19c29     21 27 24 1D 
19c2d     12 08 01 FD 
19c31     FE 05 11 1B 
19c35     24 2A 27 1F | 	byte	$21, $27, $24, $1d, $12, $08, $01, $fd, $fe, $05, $11, $1b, $24, $2a, $27, $1f
19c39     17 11 0F 08 
19c3d     07 08 0B 0F 
19c41     17 1E 22 1F 
19c45     1F 21 1A 0E | 	byte	$17, $11, $0f, $08, $07, $08, $0b, $0f, $17, $1e, $22, $1f, $1f, $21, $1a, $0e
19c49     02 F1 E2 E2 
19c4d     ED F8 FE 07 
19c51     08 00 EE E1 
19c55     DD E4 F2 FE | 	byte	$02, $f1, $e2, $e2, $ed, $f8, $fe, $07, $08, $00, $ee, $e1, $dd, $e4, $f2, $fe
19c59     08 05 FB F4 
19c5d     F4 FB FD FE 
19c61     FD FB FA F8 
19c65     F7 F8 FD 02 | 	byte	$08, $05, $fb, $f4, $f4, $fb, $fd, $fe, $fd, $fb, $fa, $f8, $f7, $f8, $fd, $02
19c69     0A 08 02 F8 
19c6d     F5 F1 ED EE 
19c71     EB E2 D8 CD 
19c75     BB B1 B1 B8 | 	byte	$0a, $08, $02, $f8, $f5, $f1, $ed, $ee, $eb, $e2, $d8, $cd, $bb, $b1, $b1, $b8
19c79     C7 D5 E5 F2 
19c7d     FE 15 25 31 
19c81     37 31 28 1D 
19c85     0B FA F1 F4 | 	byte	$c7, $d5, $e5, $f2, $fe, $15, $25, $31, $37, $31, $28, $1d, $0b, $fa, $f1, $f4
19c89     FE 04 07 0F 
19c8d     18 1A 12 11 
19c91     15 14 14 11 
19c95     0F 07 00 FA | 	byte	$fe, $04, $07, $0f, $18, $1a, $12, $11, $15, $14, $14, $11, $0f, $07, $00, $fa
19c99     FD 01 01 FA 
19c9d     EE E4 DA D7 
19ca1     DB E1 E7 F0 
19ca5     FB 07 0F 15 | 	byte	$fd, $01, $01, $fa, $ee, $e4, $da, $d7, $db, $e1, $e7, $f0, $fb, $07, $0f, $15
19ca9     21 25 27 28 
19cad     2A 2A 25 1D 
19cb1     0F 00 F0 E0 
19cb5     D4 CB CD D5 | 	byte	$21, $25, $27, $28, $2a, $2a, $25, $1d, $0f, $00, $f0, $e0, $d4, $cb, $cd, $d5
19cb9     E4 F2 FE 11 
19cbd     1B 1F 24 24 
19cc1     21 1A 14 0F 
19cc5     0E 0B 0B 08 | 	byte	$e4, $f2, $fe, $11, $1b, $1f, $24, $24, $21, $1a, $14, $0f, $0e, $0b, $0b, $08
19cc9     02 04 0E 15 
19ccd     1A 1A 0E 02 
19cd1     F7 EE EA EA 
19cd5     E8 E8 E1 DD | 	byte	$02, $04, $0e, $15, $1a, $1a, $0e, $02, $f7, $ee, $ea, $ea, $e8, $e8, $e1, $dd
19cd9     DD E4 ED F5 
19cdd     07 1A 21 1A 
19ce1     0B 02 FB FD 
19ce5     00 04 07 08 | 	byte	$dd, $e4, $ed, $f5, $07, $1a, $21, $1a, $0b, $02, $fb, $fd, $00, $04, $07, $08
19ce9     08 07 02 FA 
19ced     ED E2 DD DD 
19cf1     E1 ED F5 F8 
19cf5     FD FD FB FE | 	byte	$08, $07, $02, $fa, $ed, $e2, $dd, $dd, $e1, $ed, $f5, $f8, $fd, $fd, $fb, $fe
19cf9     FE FD FE 04 
19cfd     0A 0B 08 00 
19d01     FE 04 12 1E 
19d05     2A 2E 2F 31 | 	byte	$fe, $fd, $fe, $04, $0a, $0b, $08, $00, $fe, $04, $12, $1e, $2a, $2e, $2f, $31
19d09     31 2E 1F 12 
19d0d     08 FA E8 D8 
19d11     D1 CE D0 DA 
19d15     E7 F5 FE 08 | 	byte	$31, $2e, $1f, $12, $08, $fa, $e8, $d8, $d1, $ce, $d0, $da, $e7, $f5, $fe, $08
19d19     0B 05 01 FD 
19d1d     F8 FD 07 15 
19d21     21 2D 35 3D 
19d25     3F 3A 31 28 | 	byte	$0b, $05, $01, $fd, $f8, $fd, $07, $15, $21, $2d, $35, $3d, $3f, $3a, $31, $28
19d29     24 1F 1A 15 
19d2d     15 12 0E 08 
19d31     02 01 00 F7 
19d35     E2 D1 C0 BA | 	byte	$24, $1f, $1a, $15, $15, $12, $0e, $08, $02, $01, $00, $f7, $e2, $d1, $c0, $ba
19d39     C1 CD D8 E1 
19d3d     EB F8 02 00 
19d41     F7 ED E8 EE 
19d45     F7 FD FE FB | 	byte	$c1, $cd, $d8, $e1, $eb, $f8, $02, $00, $f7, $ed, $e8, $ee, $f7, $fd, $fe, $fb
19d49     FD FA F8 FD 
19d4d     00 FD F5 F4 
19d51     F5 FB 02 0B 
19d55     15 24 35 44 | 	byte	$fd, $fa, $f8, $fd, $00, $fd, $f5, $f4, $f5, $fb, $02, $0b, $15, $24, $35, $44
19d59     52 57 55 51 
19d5d     45 37 22 0D 
19d61     F7 E2 D4 D0 
19d65     D4 DD E7 EA | 	byte	$52, $57, $55, $51, $45, $37, $22, $0d, $f7, $e2, $d4, $d0, $d4, $dd, $e7, $ea
19d69     EE EB E4 DD 
19d6d     DA DD E4 EB 
19d71     F0 F7 FE 02 
19d75     08 0D 12 11 | 	byte	$ee, $eb, $e4, $dd, $da, $dd, $e4, $eb, $f0, $f7, $fe, $02, $08, $0d, $12, $11
19d79     0B 02 01 05 
19d7d     0D 15 21 27 
19d81     27 25 24 1D 
19d85     11 0E 08 00 | 	byte	$0b, $02, $01, $05, $0d, $15, $21, $27, $27, $25, $24, $1d, $11, $0e, $08, $00
19d89     FA F7 F5 F4 
19d8d     F4 F0 E8 E5 
19d91     E1 DB D7 D4 
19d95     D2 D4 DB E4 | 	byte	$fa, $f7, $f5, $f4, $f4, $f0, $e8, $e5, $e1, $db, $d7, $d4, $d2, $d4, $db, $e4
19d99     F2 FE 15 27 
19d9d     32 37 31 22 
19da1     17 11 0E 0D 
19da5     11 17 1D 1D | 	byte	$f2, $fe, $15, $27, $32, $37, $31, $22, $17, $11, $0e, $0d, $11, $17, $1d, $1d
19da9     1A 17 12 0B 
19dad     00 F4 E8 E1 
19db1     DE E0 E2 E4 
19db5     E2 E5 ED F4 | 	byte	$1a, $17, $12, $0b, $00, $f4, $e8, $e1, $de, $e0, $e2, $e4, $e2, $e5, $ed, $f4
19db9     FE 0B 1A 21 
19dbd     1F 1A 11 05 
19dc1     F7 E8 E0 D4 
19dc5     CB C5 C2 C7 | 	byte	$fe, $0b, $1a, $21, $1f, $1a, $11, $05, $f7, $e8, $e0, $d4, $cb, $c5, $c2, $c7
19dc9     D0 E2 EE F5 
19dcd     FD 08 12 1D 
19dd1     24 25 25 2D 
19dd5     2F 31 2E 25 | 	byte	$d0, $e2, $ee, $f5, $fd, $08, $12, $1d, $24, $25, $25, $2d, $2f, $31, $2e, $25
19dd9     1D 1A 14 0B 
19ddd     05 FD F4 E2 
19de1     D4 CD D0 DB 
19de5     E7 F2 FE FE | 	byte	$1d, $1a, $14, $0b, $05, $fd, $f4, $e2, $d4, $cd, $d0, $db, $e7, $f2, $fe, $fe
19de9     02 05 05 08 
19ded     07 02 FA F0 
19df1     EB EA EE F2 
19df5     FA FB F4 EB | 	byte	$02, $05, $05, $08, $07, $02, $fa, $f0, $eb, $ea, $ee, $f2, $fa, $fb, $f4, $eb
19df9     EB F2 FE 08 
19dfd     0B 0B 0D 0F 
19e01     0F 14 18 18 
19e05     17 11 08 00 | 	byte	$eb, $f2, $fe, $08, $0b, $0b, $0d, $0f, $0f, $14, $18, $18, $17, $11, $08, $00
19e09     FA F4 F1 F2 
19e0d     F5 FA FE FA 
19e11     F5 F1 EB EA 
19e15     ED F7 0A 1B | 	byte	$fa, $f4, $f1, $f2, $f5, $fa, $fe, $fa, $f5, $f1, $eb, $ea, $ed, $f7, $0a, $1b
19e19     2A 32 37 38 
19e1d     34 2E 1D 0E 
19e21     00 EE E5 E0 
19e25     DA D4 D5 DB | 	byte	$2a, $32, $37, $38, $34, $2e, $1d, $0e, $00, $ee, $e5, $e0, $da, $d4, $d5, $db
19e29     E4 ED F8 07 
19e2d     15 1E 1F 1D 
19e31     12 07 02 04 
19e35     08 0B 0B 0B | 	byte	$e4, $ed, $f8, $07, $15, $1e, $1f, $1d, $12, $07, $02, $04, $08, $0b, $0b, $0b
19e39     0B 05 FA EB 
19e3d     E4 E2 E1 E0 
19e41     E1 DE DE E2 
19e45     EA F0 F5 FD | 	byte	$0b, $05, $fa, $eb, $e4, $e2, $e1, $e0, $e1, $de, $de, $e2, $ea, $f0, $f5, $fd
19e49     04 0B 12 18 
19e4d     1E 21 27 34 
19e51     41 45 3F 31 
19e55     22 11 00 EE | 	byte	$04, $0b, $12, $18, $1e, $21, $27, $34, $41, $45, $3f, $31, $22, $11, $00, $ee
19e59     E5 E5 ED F8 
19e5d     04 0E 0D 0E 
19e61     14 17 18 11 
19e65     0B 05 02 04 | 	byte	$e5, $e5, $ed, $f8, $04, $0e, $0d, $0e, $14, $17, $18, $11, $0b, $05, $02, $04
19e69     04 02 02 04 
19e6d     08 0E 12 14 
19e71     14 15 17 1A 
19e75     18 11 08 02 | 	byte	$04, $02, $02, $04, $08, $0e, $12, $14, $14, $15, $17, $1a, $18, $11, $08, $02
19e79     01 00 FD FD 
19e7d     02 0A 0E 0F 
19e81     0E 0E 0E 0B 
19e85     08 04 01 FE | 	byte	$01, $00, $fd, $fd, $02, $0a, $0e, $0f, $0e, $0e, $0e, $0b, $08, $04, $01, $fe
19e89     FD FD FA F4 
19e8d     F0 EB E8 E7 
19e91     E4 E4 E7 F0 
19e95     FE 11 1D 22 | 	byte	$fd, $fd, $fa, $f4, $f0, $eb, $e8, $e7, $e4, $e4, $e7, $f0, $fe, $11, $1d, $22
19e99     22 1F 1D 17 
19e9d     0B 00 F5 EB 
19ea1     E8 E8 EB F2 
19ea5     FE 0A 12 0E | 	byte	$22, $1f, $1d, $17, $0b, $00, $f5, $eb, $e8, $e8, $eb, $f2, $fe, $0a, $12, $0e
19ea9     05 FA F4 F7 
19ead     FD 02 05 01 
19eb1     F7 F1 EB E5 
19eb5     E4 EA F2 FA | 	byte	$05, $fa, $f4, $f7, $fd, $02, $05, $01, $f7, $f1, $eb, $e5, $e4, $ea, $f2, $fa
19eb9     FE FD F4 E8 
19ebd     E1 DE E0 E1 
19ec1     E2 EA F5 FE 
19ec5     0E 15 1A 1A | 	byte	$fe, $fd, $f4, $e8, $e1, $de, $e0, $e1, $e2, $ea, $f5, $fe, $0e, $15, $1a, $1a
19ec9     18 18 1B 1D 
19ecd     1E 1D 17 08 
19ed1     F7 EA E5 EB 
19ed5     F8 05 0F 0E | 	byte	$18, $18, $1b, $1d, $1e, $1d, $17, $08, $f7, $ea, $e5, $eb, $f8, $05, $0f, $0e
19ed9     0A 00 EE E2 
19edd     E2 EB F8 08 
19ee1     12 11 05 F8 
19ee5     F7 FE 0A 0B | 	byte	$0a, $00, $ee, $e2, $e2, $eb, $f8, $08, $12, $11, $05, $f8, $f7, $fe, $0a, $0b
19ee9     0B 0B 0A 05 
19eed     08 11 14 0E 
19ef1     05 FB F1 F0 
19ef5     EE F0 F4 F5 | 	byte	$0b, $0b, $0a, $05, $08, $11, $14, $0e, $05, $fb, $f1, $f0, $ee, $f0, $f4, $f5
19ef9     F2 F2 EE E8 
19efd     E5 E7 E8 E7 
19f01     E7 F2 FE 0A 
19f05     12 1A 17 0E | 	byte	$f2, $f2, $ee, $e8, $e5, $e7, $e8, $e7, $e7, $f2, $fe, $0a, $12, $1a, $17, $0e
19f09     04 FB F4 F0 
19f0d     EA E5 E5 ED 
19f11     F0 EE F1 F5 
19f15     F8 F8 F7 F5 | 	byte	$04, $fb, $f4, $f0, $ea, $e5, $e5, $ed, $f0, $ee, $f1, $f5, $f8, $f8, $f7, $f5
19f19     F2 F1 F4 FE 
19f1d     0A 1B 2D 3D 
19f21     4A 54 52 4B 
19f25     3F 37 2E 22 | 	byte	$f2, $f1, $f4, $fe, $0a, $1b, $2d, $3d, $4a, $54, $52, $4b, $3f, $37, $2e, $22
19f29     1A 11 02 FA 
19f2d     F8 FB F8 F5 
19f31     EE E2 D5 D4 
19f35     D5 D4 CE C8 | 	byte	$1a, $11, $02, $fa, $f8, $fb, $f8, $f5, $ee, $e2, $d5, $d4, $d5, $d4, $ce, $c8
19f39     C8 CD D0 D5 
19f3d     DD E5 EB ED 
19f41     EE F2 F8 FE 
19f45     0F 21 2A 2E | 	byte	$c8, $cd, $d0, $d5, $dd, $e5, $eb, $ed, $ee, $f2, $f8, $fe, $0f, $21, $2a, $2e
19f49     31 31 2E 24 
19f4d     1F 21 24 24 
19f51     24 25 24 22 
19f55     1D 17 07 F5 | 	byte	$31, $31, $2e, $24, $1f, $21, $24, $24, $24, $25, $24, $22, $1d, $17, $07, $f5
19f59     EA E8 EB F4 
19f5d     FB FA F7 F5 
19f61     F8 FE 0A 12 
19f65     14 11 05 F7 | 	byte	$ea, $e8, $eb, $f4, $fb, $fa, $f7, $f5, $f8, $fe, $0a, $12, $14, $11, $05, $f7
19f69     ED E4 DD D5 
19f6d     D5 DB E7 F8 
19f71     05 0F 14 14 
19f75     14 11 0E 0F | 	byte	$ed, $e4, $dd, $d5, $d5, $db, $e7, $f8, $05, $0f, $14, $14, $14, $11, $0e, $0f
19f79     0D 08 05 08 
19f7d     0A 08 08 08 
19f81     0B 0E 11 0E 
19f85     05 FA F1 EA | 	byte	$0d, $08, $05, $08, $0a, $08, $08, $08, $0b, $0e, $11, $0e, $05, $fa, $f1, $ea
19f89     E5 E7 F0 FB 
19f8d     05 0F 14 14 
19f91     11 12 12 11 
19f95     0E 07 00 FA | 	byte	$e5, $e7, $f0, $fb, $05, $0f, $14, $14, $11, $12, $12, $11, $0e, $07, $00, $fa
19f99     F5 F1 F2 F2 
19f9d     F2 F5 FB 07 
19fa1     14 1E 25 27 
19fa5     27 25 25 27 | 	byte	$f5, $f1, $f2, $f2, $f2, $f5, $fb, $07, $14, $1e, $25, $27, $27, $25, $25, $27
19fa9     27 25 2A 32 
19fad     37 34 28 1A 
19fb1     05 F4 E2 D8 
19fb5     D1 CA C2 C1 | 	byte	$27, $25, $2a, $32, $37, $34, $28, $1a, $05, $f4, $e2, $d8, $d1, $ca, $c2, $c1
19fb9     C4 CD D2 DA 
19fbd     E1 EA EE EE 
19fc1     F1 FA 02 0E 
19fc5     15 17 15 14 | 	byte	$c4, $cd, $d2, $da, $e1, $ea, $ee, $ee, $f1, $fa, $02, $0e, $15, $17, $15, $14
19fc9     12 0B 07 05 
19fcd     07 0B 12 15 
19fd1     15 14 12 0E 
19fd5     08 FA E8 D4 | 	byte	$12, $0b, $07, $05, $07, $0b, $12, $15, $15, $14, $12, $0e, $08, $fa, $e8, $d4
19fd9     C5 BA B7 B8 
19fdd     C4 D2 E4 F2 
19fe1     FE 0E 15 1A 
19fe5     1D 25 2F 38 | 	byte	$c5, $ba, $b7, $b8, $c4, $d2, $e4, $f2, $fe, $0e, $15, $1a, $1d, $25, $2f, $38
19fe9     3B 3B 3A 37 
19fed     31 25 18 14 
19ff1     0B 00 F0 E7 
19ff5     E0 DD DE E7 | 	byte	$3b, $3b, $3a, $37, $31, $25, $18, $14, $0b, $00, $f0, $e7, $e0, $dd, $de, $e7
19ff9     F0 F4 F7 F7 
19ffd     F4 F4 F8 FE 
1a001     04 0B 15 24 
1a005     32 3B 37 2E | 	byte	$f0, $f4, $f7, $f7, $f4, $f4, $f8, $fe, $04, $0b, $15, $24, $32, $3b, $37, $2e
1a009     22 21 25 28 
1a00d     22 17 05 EE 
1a011     DD D8 DB E4 
1a015     EA E8 E4 E7 | 	byte	$22, $21, $25, $28, $22, $17, $05, $ee, $dd, $d8, $db, $e4, $ea, $e8, $e4, $e7
1a019     F2 FE 05 04 
1a01d     F7 E8 D4 C5 
1a021     BA B5 B5 B8 
1a025     C0 CB D4 DA | 	byte	$f2, $fe, $05, $04, $f7, $e8, $d4, $c5, $ba, $b5, $b5, $b8, $c0, $cb, $d4, $da
1a029     DE DE DE E4 
1a02d     E5 E5 E7 ED 
1a031     F8 FE 0D 1B 
1a035     25 28 2B 2F | 	byte	$de, $de, $de, $e4, $e5, $e5, $e7, $ed, $f8, $fe, $0d, $1b, $25, $28, $2b, $2f
1a039     37 37 2E 22 
1a03d     17 0F 08 01 
1a041     FD F5 F4 F7 
1a045     F7 F5 FB FE | 	byte	$37, $37, $2e, $22, $17, $0f, $08, $01, $fd, $f5, $f4, $f7, $f7, $f5, $fb, $fe
1a049     00 FE 02 0F 
1a04d     18 1D 1E 1E 
1a051     1F 22 22 1D 
1a055     11 0B 07 04 | 	byte	$00, $fe, $02, $0f, $18, $1d, $1e, $1e, $1f, $22, $22, $1d, $11, $0b, $07, $04
1a059     04 0A 0E 11 
1a05d     11 0F 0F 11 
1a061     17 22 28 24 
1a065     17 08 00 05 | 	byte	$04, $0a, $0e, $11, $11, $0f, $0f, $11, $17, $22, $28, $24, $17, $08, $00, $05
1a069     0F 1B 24 27 
1a06d     22 17 0B 00 
1a071     F4 EB E2 E0 
1a075     E4 EE F8 FE | 	byte	$0f, $1b, $24, $27, $22, $17, $0b, $00, $f4, $eb, $e2, $e0, $e4, $ee, $f8, $fe
1a079     02 FA F4 F1 
1a07d     F0 EE F2 F4 
1a081     F4 F1 EE F0 
1a085     F8 02 0A 0E | 	byte	$02, $fa, $f4, $f1, $f0, $ee, $f2, $f4, $f4, $f1, $ee, $f0, $f8, $02, $0a, $0e
1a089     0E 05 FA E8 
1a08d     DD D4 D1 D5 
1a091     E1 F1 04 15 
1a095     21 28 25 17 | 	byte	$0e, $05, $fa, $e8, $dd, $d4, $d1, $d5, $e1, $f1, $04, $15, $21, $28, $25, $17
1a099     02 F7 F4 F5 
1a09d     F2 EB EB F1 
1a0a1     FE 0A 1A 25 
1a0a5     25 1D 15 18 | 	byte	$02, $f7, $f4, $f5, $f2, $eb, $eb, $f1, $fe, $0a, $1a, $25, $25, $1d, $15, $18
1a0a9     1A 14 11 0D 
1a0ad     08 0B 0D 05 
1a0b1     FA EB E2 DE 
1a0b5     DA D7 DA E1 | 	byte	$1a, $14, $11, $0d, $08, $0b, $0d, $05, $fa, $eb, $e2, $de, $da, $d7, $da, $e1
1a0b9     E7 E8 E8 E7 
1a0bd     F1 FD 0A 15 
1a0c1     1F 24 28 2A 
1a0c5     25 1F 1A 14 | 	byte	$e7, $e8, $e8, $e7, $f1, $fd, $0a, $15, $1f, $24, $28, $2a, $25, $1f, $1a, $14
1a0c9     0E 0D 0D 0B 
1a0cd     0B 0E 0B 02 
1a0d1     FB F7 F2 E8 
1a0d5     DA D2 D1 D8 | 	byte	$0e, $0d, $0d, $0b, $0b, $0e, $0b, $02, $fb, $f7, $f2, $e8, $da, $d2, $d1, $d8
1a0d9     E5 F2 F8 F7 
1a0dd     F8 FE 12 27 
1a0e1     38 4A 4B 45 
1a0e5     34 22 0E 00 | 	byte	$e5, $f2, $f8, $f7, $f8, $fe, $12, $27, $38, $4a, $4b, $45, $34, $22, $0e, $00
1a0e9     F1 EA E8 ED 
1a0ed     F5 FB 04 0E 
1a0f1     15 17 17 14 
1a0f5     0F 05 F5 E8 | 	byte	$f1, $ea, $e8, $ed, $f5, $fb, $04, $0e, $15, $17, $17, $14, $0f, $05, $f5, $e8
1a0f9     E1 E1 E7 EB 
1a0fd     E5 D7 CB CA 
1a101     D4 DB DD DB 
1a105     DA DE E5 F2 | 	byte	$e1, $e1, $e7, $eb, $e5, $d7, $cb, $ca, $d4, $db, $dd, $db, $da, $de, $e5, $f2
1a109     FE 0F 1B 2D 
1a10d     3B 47 4B 47 
1a111     3A 2E 17 05 
1a115     F1 E0 D7 D4 | 	byte	$fe, $0f, $1b, $2d, $3b, $47, $4b, $47, $3a, $2e, $17, $05, $f1, $e0, $d7, $d4
1a119     D4 D4 D2 D2 
1a11d     D8 E4 F1 FE 
1a121     12 21 2B 34 
1a125     3D 44 45 3A | 	byte	$d4, $d4, $d2, $d2, $d8, $e4, $f1, $fe, $12, $21, $2b, $34, $3d, $44, $45, $3a
1a129     28 1B 1A 1D 
1a12d     21 24 24 1E 
1a131     14 07 00 FD 
1a135     F1 E0 D1 BD | 	byte	$28, $1b, $1a, $1d, $21, $24, $24, $1e, $14, $07, $00, $fd, $f1, $e0, $d1, $bd
1a139     AE AB B5 C0 
1a13d     CA DA E7 F2 
1a141     FE 0A 17 21 
1a145     24 25 1D 0D | 	byte	$ae, $ab, $b5, $c0, $ca, $da, $e7, $f2, $fe, $0a, $17, $21, $24, $25, $1d, $0d
1a149     FA E8 E1 E0 
1a14d     E4 EB F0 EE 
1a151     E8 E0 DA D7 
1a155     DB E7 F7 04 | 	byte	$fa, $e8, $e1, $e0, $e4, $eb, $f0, $ee, $e8, $e0, $da, $d7, $db, $e7, $f7, $04
1a159     0F 15 0E 05 
1a15d     FD F7 FA FE 
1a161     0F 21 2D 32 
1a165     31 2A 25 22 | 	byte	$0f, $15, $0e, $05, $fd, $f7, $fa, $fe, $0f, $21, $2d, $32, $31, $2a, $25, $22
1a169     1D 12 0E 0D 
1a16d     05 FD F4 EB 
1a171     EA EE F8 02 
1a175     0A 07 02 FD | 	byte	$1d, $12, $0e, $0d, $05, $fd, $f4, $eb, $ea, $ee, $f8, $02, $0a, $07, $02, $fd
1a179     FD 01 04 04 
1a17d     08 08 07 07 
1a181     08 05 02 07 
1a185     07 07 0E 1B | 	byte	$fd, $01, $04, $04, $08, $08, $07, $07, $08, $05, $02, $07, $07, $07, $0e, $1b
1a189     27 32 38 3B 
1a18d     3E 3D 34 28 
1a191     1E 17 0F 0A 
1a195     0B 08 00 E8 | 	byte	$27, $32, $38, $3b, $3e, $3d, $34, $28, $1e, $17, $0f, $0a, $0b, $08, $00, $e8
1a199     D4 D0 D2 DB 
1a19d     E5 ED F4 F7 
1a1a1     F7 F5 F4 F0 
1a1a5     E4 DA D4 D1 | 	byte	$d4, $d0, $d2, $db, $e5, $ed, $f4, $f7, $f7, $f5, $f4, $f0, $e4, $da, $d4, $d1
1a1a9     D0 D4 DB E7 
1a1ad     F8 12 27 34 
1a1b1     37 2E 1D 0B 
1a1b5     FA ED E2 E1 | 	byte	$d0, $d4, $db, $e7, $f8, $12, $27, $34, $37, $2e, $1d, $0b, $fa, $ed, $e2, $e1
1a1b9     E4 E5 EB F8 
1a1bd     0A 1B 25 22 
1a1c1     11 0B 11 18 
1a1c5     1A 15 0E 0B | 	byte	$e4, $e5, $eb, $f8, $0a, $1b, $25, $22, $11, $0b, $11, $18, $1a, $15, $0e, $0b
1a1c9     08 08 0F 1A 
1a1cd     1D 1B 1E 1A 
1a1d1     0E 00 F4 EA 
1a1d5     DE D1 C7 C2 | 	byte	$08, $08, $0f, $1a, $1d, $1b, $1e, $1a, $0e, $00, $f4, $ea, $de, $d1, $c7, $c2
1a1d9     C7 CB D2 DB 
1a1dd     E1 EA EE F0 
1a1e1     F2 F8 07 1B 
1a1e5     2D 38 42 45 | 	byte	$c7, $cb, $d2, $db, $e1, $ea, $ee, $f0, $f2, $f8, $07, $1b, $2d, $38, $42, $45
1a1e9     47 4B 4B 45 
1a1ed     3A 22 0B F4 
1a1f1     E0 D5 D4 DA 
1a1f5     E0 E2 E5 E5 | 	byte	$47, $4b, $4b, $45, $3a, $22, $0b, $f4, $e0, $d5, $d4, $da, $e0, $e2, $e5, $e5
1a1f9     E7 E4 E2 EB 
1a1fd     F7 FD FA F8 
1a201     FE 04 05 05 
1a205     08 0E 12 11 | 	byte	$e7, $e4, $e2, $eb, $f7, $fd, $fa, $f8, $fe, $04, $05, $05, $08, $0e, $12, $11
1a209     0B 00 F5 EE 
1a20d     E8 E7 EA F0 
1a211     F2 F1 F5 FE 
1a215     0D 1E 2B 32 | 	byte	$0b, $00, $f5, $ee, $e8, $e7, $ea, $f0, $f2, $f1, $f5, $fe, $0d, $1e, $2b, $32
1a219     37 3A 34 25 
1a21d     17 14 0E 02 
1a221     F5 F2 F4 F7 
1a225     FB 04 0F 15 | 	byte	$37, $3a, $34, $25, $17, $14, $0e, $02, $f5, $f2, $f4, $f7, $fb, $04, $0f, $15
1a229     18 1A 18 0E 
1a22d     00 FA FB FB 
1a231     F4 EB E7 ED 
1a235     EE EB E8 EB | 	byte	$18, $1a, $18, $0e, $00, $fa, $fb, $fb, $f4, $eb, $e7, $ed, $ee, $eb, $e8, $eb
1a239     EA EB F1 F4 
1a23d     F5 F7 F8 F7 
1a241     F8 F8 FA FB 
1a245     FE 05 02 F7 | 	byte	$ea, $eb, $f1, $f4, $f5, $f7, $f8, $f7, $f8, $f8, $fa, $fb, $fe, $05, $02, $f7
1a249     E8 DD D1 C8 
1a24d     C8 D0 D2 D1 
1a251     D7 E1 F2 FE 
1a255     12 1B 1E 1E | 	byte	$e8, $dd, $d1, $c8, $c8, $d0, $d2, $d1, $d7, $e1, $f2, $fe, $12, $1b, $1e, $1e
1a259     1B 1A 1E 1F 
1a25d     1F 24 24 22 
1a261     1B 0B 00 F1 
1a265     EA EB EE F5 | 	byte	$1b, $1a, $1e, $1f, $1f, $24, $24, $22, $1b, $0b, $00, $f1, $ea, $eb, $ee, $f5
1a269     FD 02 0A 11 
1a26d     17 17 1A 1A 
1a271     1A 1D 24 2F 
1a275     3D 47 48 42 | 	byte	$fd, $02, $0a, $11, $17, $17, $1a, $1a, $1a, $1d, $24, $2f, $3d, $47, $48, $42
1a279     37 25 0E 00 
1a27d     EB E7 EA EB 
1a281     E8 E2 E0 DD 
1a285     DA D8 D7 D4 | 	byte	$37, $25, $0e, $00, $eb, $e7, $ea, $eb, $e8, $e2, $e0, $dd, $da, $d8, $d7, $d4
1a289     D8 E4 F2 05 
1a28d     12 14 11 0E 
1a291     0E 11 14 12 
1a295     11 11 0B 01 | 	byte	$d8, $e4, $f2, $05, $12, $14, $11, $0e, $0e, $11, $14, $12, $11, $11, $0b, $01
1a299     F7 ED E8 EB 
1a29d     F8 07 15 21 
1a2a1     2A 28 22 17 
1a2a5     0B FA E8 D7 | 	byte	$f7, $ed, $e8, $eb, $f8, $07, $15, $21, $2a, $28, $22, $17, $0b, $fa, $e8, $d7
1a2a9     C5 BA B4 B5 
1a2ad     BE C8 D2 DB 
1a2b1     E4 F2 04 15 
1a2b5     25 2D 2E 2B | 	byte	$c5, $ba, $b4, $b5, $be, $c8, $d2, $db, $e4, $f2, $04, $15, $25, $2d, $2e, $2b
1a2b9     25 25 28 2A 
1a2bd     25 1A 0B 00 
1a2c1     F5 F1 F5 FE 
1a2c5     0A 15 1A 1A | 	byte	$25, $25, $28, $2a, $25, $1a, $0b, $00, $f5, $f1, $f5, $fe, $0a, $15, $1a, $1a
1a2c9     14 0D 08 08 
1a2cd     0B 0B 08 0D 
1a2d1     15 24 28 25 
1a2d5     22 1A 0E 00 | 	byte	$14, $0d, $08, $08, $0b, $0b, $08, $0d, $15, $24, $28, $25, $22, $1a, $0e, $00
1a2d9     EB E1 DE DD 
1a2dd     DD DE E1 E7 
1a2e1     ED F1 F7 FE 
1a2e5     12 25 37 44 | 	byte	$eb, $e1, $de, $dd, $dd, $de, $e1, $e7, $ed, $f1, $f7, $fe, $12, $25, $37, $44
1a2e9     4F 55 54 4D 
1a2ed     3F 2E 11 00 
1a2f1     E2 D7 D7 DD 
1a2f5     E4 EB EB E8 | 	byte	$4f, $55, $54, $4d, $3f, $2e, $11, $00, $e2, $d7, $d7, $dd, $e4, $eb, $eb, $e8
1a2f9     E2 DE DD DD 
1a2fd     DE E7 ED EB 
1a301     ED F2 FA FA 
1a305     F0 E2 DB DD | 	byte	$e2, $de, $dd, $dd, $de, $e7, $ed, $eb, $ed, $f2, $fa, $fa, $f0, $e2, $db, $dd
1a309     E2 EA F1 F5 
1a30d     F7 FB FB F5 
1a311     F4 F8 FD FD 
1a315     FB FB FE 04 | 	byte	$e2, $ea, $f1, $f5, $f7, $fb, $fb, $f5, $f4, $f8, $fd, $fd, $fb, $fb, $fe, $04
1a319     0B 12 18 1D 
1a31d     1B 14 0B 04 
1a321     02 04 05 0B 
1a325     15 21 2A 32 | 	byte	$0b, $12, $18, $1d, $1b, $14, $0b, $04, $02, $04, $05, $0b, $15, $21, $2a, $32
1a329     34 31 28 1E 
1a32d     17 11 0E 08 
1a331     FA E8 DA DE 
1a335     EB EE E8 E1 | 	byte	$34, $31, $28, $1e, $17, $11, $0e, $08, $fa, $e8, $da, $de, $eb, $ee, $e8, $e1
1a339     DE DE D8 D4 
1a33d     DB E7 FB 0D 
1a341     1B 2A 31 31 
1a345     28 1F 18 11 | 	byte	$de, $de, $d8, $d4, $db, $e7, $fb, $0d, $1b, $2a, $31, $31, $28, $1f, $18, $11
1a349     08 FD EE DD 
1a34d     D4 D2 DB ED 
1a351     F5 FA FA FE 
1a355     05 0B 08 01 | 	byte	$08, $fd, $ee, $dd, $d4, $d2, $db, $ed, $f5, $fa, $fa, $fe, $05, $0b, $08, $01
1a359     04 0A 0B 05 
1a35d     00 FA F5 F1 
1a361     F0 F0 EE ED 
1a365     F0 F7 FE 08 | 	byte	$04, $0a, $0b, $05, $00, $fa, $f5, $f1, $f0, $f0, $ee, $ed, $f0, $f7, $fe, $08
1a369     15 18 17 11 
1a36d     0E 0B 0D 11 
1a371     12 12 0F 0B 
1a375     05 05 00 FD | 	byte	$15, $18, $17, $11, $0e, $0b, $0d, $11, $12, $12, $0f, $0b, $05, $05, $00, $fd
1a379     F7 EE E5 E1 
1a37d     DD DD E2 ED 
1a381     F7 02 0B 12 
1a385     1A 1A 14 0B | 	byte	$f7, $ee, $e5, $e1, $dd, $dd, $e2, $ed, $f7, $02, $0b, $12, $1a, $1a, $14, $0b
1a389     05 02 04 07 
1a38d     0A 0E 15 1E 
1a391     27 2A 28 1F 
1a395     14 02 F7 F1 | 	byte	$05, $02, $04, $07, $0a, $0e, $15, $1e, $27, $2a, $28, $1f, $14, $02, $f7, $f1
1a399     F5 FE 0A 15 
1a39d     1B 18 14 15 
1a3a1     1B 1A 11 08 
1a3a5     00 F7 FA FD | 	byte	$f5, $fe, $0a, $15, $1b, $18, $14, $15, $1b, $1a, $11, $08, $00, $f7, $fa, $fd
1a3a9     FE F7 EB DD 
1a3ad     D2 D5 E4 EE 
1a3b1     F2 F1 EE EE 
1a3b5     F0 F5 FD FE | 	byte	$fe, $f7, $eb, $dd, $d2, $d5, $e4, $ee, $f2, $f1, $ee, $ee, $f0, $f5, $fd, $fe
1a3b9     FE 04 0E 1B 
1a3bd     2A 2E 2E 1E 
1a3c1     0E 05 00 FD 
1a3c5     FD 04 08 00 | 	byte	$fe, $04, $0e, $1b, $2a, $2e, $2e, $1e, $0e, $05, $00, $fd, $fd, $04, $08, $00
1a3c9     F4 E8 E4 E2 
1a3cd     E0 DA D7 DB 
1a3d1     E7 F5 FE FE 
1a3d5     FD FE FE F7 | 	byte	$f4, $e8, $e4, $e2, $e0, $da, $d7, $db, $e7, $f5, $fe, $fe, $fd, $fe, $fe, $f7
1a3d9     EE EE F8 08 
1a3dd     15 21 32 3B 
1a3e1     41 41 34 24 
1a3e5     17 0B FA EA | 	byte	$ee, $ee, $f8, $08, $15, $21, $32, $3b, $41, $41, $34, $24, $17, $0b, $fa, $ea
1a3e9     EA F7 02 05 
1a3ed     08 0E 14 15 
1a3f1     11 08 FA EA 
1a3f5     E2 DE DD D8 | 	byte	$ea, $f7, $02, $05, $08, $0e, $14, $15, $11, $08, $fa, $ea, $e2, $de, $dd, $d8
1a3f9     D2 CE CD CD 
1a3fd     D1 D5 DE ED 
1a401     FA 04 0A 0F 
1a405     17 21 1F 17 | 	byte	$d2, $ce, $cd, $cd, $d1, $d5, $de, $ed, $fa, $04, $0a, $0f, $17, $21, $1f, $17
1a409     0B 00 F8 F4 
1a40d     F7 FE 0F 1B 
1a411     24 28 2A 28 
1a415     22 1D 14 0B | 	byte	$0b, $00, $f8, $f4, $f7, $fe, $0f, $1b, $24, $28, $2a, $28, $22, $1d, $14, $0b
1a419     0B 0F 15 17 
1a41d     1A 22 2B 2B 
1a421     27 1A 0B 00 
1a425     F4 E5 D8 D1 | 	byte	$0b, $0f, $15, $17, $1a, $22, $2b, $2b, $27, $1a, $0b, $00, $f4, $e5, $d8, $d1
1a429     D1 D4 DA E4 
1a42d     EE F8 FE 07 
1a431     0E 0F 14 1B 
1a435     1E 1E 1A 11 | 	byte	$d1, $d4, $da, $e4, $ee, $f8, $fe, $07, $0e, $0f, $14, $1b, $1e, $1e, $1a, $11
1a439     05 F7 E4 D7 
1a43d     CE CB CB D4 
1a441     E1 F0 F8 F7 
1a445     EB E7 EB F2 | 	byte	$05, $f7, $e4, $d7, $ce, $cb, $cb, $d4, $e1, $f0, $f8, $f7, $eb, $e7, $eb, $f2
1a449     FB 08 15 21 
1a44d     2D 2E 24 17 
1a451     0D 02 FB FA 
1a455     FE 02 07 0B | 	byte	$fb, $08, $15, $21, $2d, $2e, $24, $17, $0d, $02, $fb, $fa, $fe, $02, $07, $0b
1a459     15 1D 27 32 
1a45d     3B 3B 2F 22 
1a461     0E 00 E2 D4 
1a465     CE CE D8 E7 | 	byte	$15, $1d, $27, $32, $3b, $3b, $2f, $22, $0e, $00, $e2, $d4, $ce, $ce, $d8, $e7
1a469     FE 0F 1D 22 
1a46d     25 2A 2B 2A 
1a471     22 17 0B 00 
1a475     F1 E8 DA D1 | 	byte	$fe, $0f, $1d, $22, $25, $2a, $2b, $2a, $22, $17, $0b, $00, $f1, $e8, $da, $d1
1a479     C8 C0 C0 CA 
1a47d     D2 D8 DE E1 
1a481     DD D7 DB E7 
1a485     F5 FE FD FB | 	byte	$c8, $c0, $c0, $ca, $d2, $d8, $de, $e1, $dd, $d7, $db, $e7, $f5, $fe, $fd, $fb
1a489     FE 07 0B 0E 
1a48d     14 1A 1D 1D 
1a491     17 0F 0E 15 
1a495     1D 1F 1E 1D | 	byte	$fe, $07, $0b, $0e, $14, $1a, $1d, $1d, $17, $0f, $0e, $15, $1d, $1f, $1e, $1d
1a499     1E 1E 1F 1E 
1a49d     1B 17 11 0B 
1a4a1     05 00 F7 F4 
1a4a5     EE E8 E2 DA | 	byte	$1e, $1e, $1f, $1e, $1b, $17, $11, $0b, $05, $00, $f7, $f4, $ee, $e8, $e2, $da
1a4a9     D1 CA C7 C5 
1a4ad     C5 C7 CA D0 
1a4b1     D8 E0 E7 ED 
1a4b5     F1 FD 0A 1E | 	byte	$d1, $ca, $c7, $c5, $c5, $c7, $ca, $d0, $d8, $e0, $e7, $ed, $f1, $fd, $0a, $1e
1a4b9     32 3A 31 24 
1a4bd     1D 1D 1F 22 
1a4c1     27 2B 28 1D 
1a4c5     17 14 17 1E | 	byte	$32, $3a, $31, $24, $1d, $1d, $1f, $22, $27, $2b, $28, $1d, $17, $14, $17, $1e
1a4c9     25 2F 35 35 
1a4cd     31 28 1D 11 
1a4d1     05 FD F1 E8 
1a4d5     E2 E5 F0 FD | 	byte	$25, $2f, $35, $35, $31, $28, $1d, $11, $05, $fd, $f1, $e8, $e2, $e5, $f0, $fd
1a4d9     0A 0E 0E 0D 
1a4dd     0B 08 00 FB 
1a4e1     FD 04 08 08 
1a4e5     02 FA F1 E8 | 	byte	$0a, $0e, $0e, $0d, $0b, $08, $00, $fb, $fd, $04, $08, $08, $02, $fa, $f1, $e8
1a4e9     E1 DE E5 F2 
1a4ed     FE 02 0B 14 
1a4f1     18 1B 17 0B 
1a4f5     F4 E8 E7 F0 | 	byte	$e1, $de, $e5, $f2, $fe, $02, $0b, $14, $18, $1b, $17, $0b, $f4, $e8, $e7, $f0
1a4f9     FB FE 04 08 
1a4fd     0A 04 FB F8 
1a501     F5 F2 EE E5 
1a505     E4 E7 EE F8 | 	byte	$fb, $fe, $04, $08, $0a, $04, $fb, $f8, $f5, $f2, $ee, $e5, $e4, $e7, $ee, $f8
1a509     07 11 15 17 
1a50d     18 1D 1E 18 
1a511     0D 00 FA F1 
1a515     F0 EE EA E7 | 	byte	$07, $11, $15, $17, $18, $1d, $1e, $18, $0d, $00, $fa, $f1, $f0, $ee, $ea, $e7
1a519     ED F2 F1 E2 
1a51d     D7 CB C8 CE 
1a521     D8 E7 F8 05 
1a525     11 14 14 15 | 	byte	$ed, $f2, $f1, $e2, $d7, $cb, $c8, $ce, $d8, $e7, $f8, $05, $11, $14, $14, $15
1a529     1B 1E 1D 1E 
1a52d     1F 1A 12 0B 
1a531     05 00 F4 EB 
1a535     ED F2 F7 FB | 	byte	$1b, $1e, $1d, $1e, $1f, $1a, $12, $0b, $05, $00, $f4, $eb, $ed, $f2, $f7, $fb
1a539     FE 04 0D 0E 
1a53d     08 00 FA F5 
1a541     F4 F8 FD 08 
1a545     18 21 27 2B | 	byte	$fe, $04, $0d, $0e, $08, $00, $fa, $f5, $f4, $f8, $fd, $08, $18, $21, $27, $2b
1a549     2A 25 22 1D 
1a54d     17 14 11 0E 
1a551     0D 0D 11 17 
1a555     1F 27 2A 25 | 	byte	$2a, $25, $22, $1d, $17, $14, $11, $0e, $0d, $0d, $11, $17, $1f, $27, $2a, $25
1a559     1A 0E 07 05 
1a55d     02 01 00 02 
1a561     07 0A 07 00 
1a565     F1 E2 DA D1 | 	byte	$1a, $0e, $07, $05, $02, $01, $00, $02, $07, $0a, $07, $00, $f1, $e2, $da, $d1
1a569     C8 C2 C4 C7 
1a56d     C8 CB D0 D4 
1a571     D5 D7 DB DB 
1a575     D7 D5 DB E7 | 	byte	$c8, $c2, $c4, $c7, $c8, $cb, $d0, $d4, $d5, $d7, $db, $db, $d7, $d5, $db, $e7
1a579     FE 12 24 31 
1a57d     3B 3D 3D 37 
1a581     2E 22 11 05 
1a585     FD F1 E8 E2 | 	byte	$fe, $12, $24, $31, $3b, $3d, $3d, $37, $2e, $22, $11, $05, $fd, $f1, $e8, $e2
1a589     E0 E2 EB F1 
1a58d     F0 F0 F4 FB 
1a591     05 15 1E 27 
1a595     24 1D 1D 1F | 	byte	$e0, $e2, $eb, $f1, $f0, $f0, $f4, $fb, $05, $15, $1e, $27, $24, $1d, $1d, $1f
1a599     22 22 1F 17 
1a59d     0B 02 F4 E8 
1a5a1     DD D8 DA DA 
1a5a5     E0 F0 FE 0F | 	byte	$22, $22, $1f, $17, $0b, $02, $f4, $e8, $dd, $d8, $da, $da, $e0, $f0, $fe, $0f
1a5a9     1A 17 0E 05 
1a5ad     01 02 07 08 
1a5b1     0A 0D 0E 05 
1a5b5     FB F4 F7 FD | 	byte	$1a, $17, $0e, $05, $01, $02, $07, $08, $0a, $0d, $0e, $05, $fb, $f4, $f7, $fd
1a5b9     FE 02 05 08 
1a5bd     08 00 F7 EE 
1a5c1     E7 EA F4 FE 
1a5c5     08 0E 14 1D | 	byte	$fe, $02, $05, $08, $08, $00, $f7, $ee, $e7, $ea, $f4, $fe, $08, $0e, $14, $1d
1a5c9     2A 2E 2A 1D 
1a5cd     0E 00 F4 F1 
1a5d1     FB 04 07 02 
1a5d5     01 FE FD FE | 	byte	$2a, $2e, $2a, $1d, $0e, $00, $f4, $f1, $fb, $04, $07, $02, $01, $fe, $fd, $fe
1a5d9     01 02 02 02 
1a5dd     05 08 0B 0F 
1a5e1     0B 01 FB F8 
1a5e5     FB FE FD FA | 	byte	$01, $02, $02, $02, $05, $08, $0b, $0f, $0b, $01, $fb, $f8, $fb, $fe, $fd, $fa
1a5e9     FA FB 02 0B 
1a5ed     0E 08 00 F7 
1a5f1     F4 F1 F0 EE 
1a5f5     EA E5 E2 E7 | 	byte	$fa, $fb, $02, $0b, $0e, $08, $00, $f7, $f4, $f1, $f0, $ee, $ea, $e5, $e2, $e7
1a5f9     F0 F4 F7 F8 
1a5fd     F8 F8 F4 F5 
1a601     FE 07 0F 15 
1a605     1D 1E 1A 14 | 	byte	$f0, $f4, $f7, $f8, $f8, $f8, $f4, $f5, $fe, $07, $0f, $15, $1d, $1e, $1a, $14
1a609     0B 0A 0D 14 
1a60d     17 14 11 11 
1a611     0E 08 02 FB 
1a615     F5 F8 FA FB | 	byte	$0b, $0a, $0d, $14, $17, $14, $11, $11, $0e, $08, $02, $fb, $f5, $f8, $fa, $fb
1a619     FE 07 12 15 
1a61d     0E 02 FA FA 
1a621     04 0E 0E 05 
1a625     00 FA F7 F8 | 	byte	$fe, $07, $12, $15, $0e, $02, $fa, $fa, $04, $0e, $0e, $05, $00, $fa, $f7, $f8
1a629     FD FD F8 F4 
1a62d     F5 F7 FA FD 
1a631     FE 0A 11 18 
1a635     1B 1D 1E 1F | 	byte	$fd, $fd, $f8, $f4, $f5, $f7, $fa, $fd, $fe, $0a, $11, $18, $1b, $1d, $1e, $1f
1a639     22 24 22 1D 
1a63d     14 08 FA ED 
1a641     E2 DA D1 CE 
1a645     CB CB D4 E1 | 	byte	$22, $24, $22, $1d, $14, $08, $fa, $ed, $e2, $da, $d1, $ce, $cb, $cb, $d4, $e1
1a649     EB F5 FB FE 
1a64d     01 00 FE FB 
1a651     FA F7 F4 F4 
1a655     F5 FD 07 0F | 	byte	$eb, $f5, $fb, $fe, $01, $00, $fe, $fb, $fa, $f7, $f4, $f4, $f5, $fd, $07, $0f
1a659     11 11 0F 08 
1a65d     00 FB F8 FB 
1a661     04 12 1E 25 
1a665     22 1D 14 0D | 	byte	$11, $11, $0f, $08, $00, $fb, $f8, $fb, $04, $12, $1e, $25, $22, $1d, $14, $0d
1a669     08 08 08 0D 
1a66d     0F 12 15 1B 
1a671     1F 1B 0E 02 
1a675     FD FA F5 EE | 	byte	$08, $08, $08, $0d, $0f, $12, $15, $1b, $1f, $1b, $0e, $02, $fd, $fa, $f5, $ee
1a679     E8 E5 ED F8 
1a67d     04 0E 0F 0E 
1a681     0F 15 1D 1F 
1a685     1D 17 0B 02 | 	byte	$e8, $e5, $ed, $f8, $04, $0e, $0f, $0e, $0f, $15, $1d, $1f, $1d, $17, $0b, $02
1a689     FB FA FD FE 
1a68d     00 00 FD FA 
1a691     FA FD 01 08 
1a695     08 02 FA EE | 	byte	$fb, $fa, $fd, $fe, $00, $00, $fd, $fa, $fa, $fd, $01, $08, $08, $02, $fa, $ee
1a699     E2 DA D8 DB 
1a69d     E5 F1 F8 FE 
1a6a1     0E 18 18 14 
1a6a5     0F 0D 05 FA | 	byte	$e2, $da, $d8, $db, $e5, $f1, $f8, $fe, $0e, $18, $18, $14, $0f, $0d, $05, $fa
1a6a9     EB E0 D4 CE 
1a6ad     D4 E1 EB ED 
1a6b1     E8 E4 E2 E5 
1a6b5     F0 FB 04 0D | 	byte	$eb, $e0, $d4, $ce, $d4, $e1, $eb, $ed, $e8, $e4, $e2, $e5, $f0, $fb, $04, $0d
1a6b9     14 15 14 14 
1a6bd     15 14 0B FB 
1a6c1     F4 EE E5 DD 
1a6c5     D7 D4 D1 D0 | 	byte	$14, $15, $14, $14, $15, $14, $0b, $fb, $f4, $ee, $e5, $dd, $d7, $d4, $d1, $d0
1a6c9     D2 DB EB FA 
1a6cd     07 0F 14 15 
1a6d1     15 21 2F 3D 
1a6d5     42 44 45 3A | 	byte	$d2, $db, $eb, $fa, $07, $0f, $14, $15, $15, $21, $2f, $3d, $42, $44, $45, $3a
1a6d9     25 12 0B 15 
1a6dd     25 2E 2A 1F 
1a6e1     17 0B 0A 0D 
1a6e5     12 18 1E 1A | 	byte	$25, $12, $0b, $15, $25, $2e, $2a, $1f, $17, $0b, $0a, $0d, $12, $18, $1e, $1a
1a6e9     14 0B 00 F1 
1a6ed     E2 DA D7 D4 
1a6f1     CE CD D4 E1 
1a6f5     F0 F8 FE 08 | 	byte	$14, $0b, $00, $f1, $e2, $da, $d7, $d4, $ce, $cd, $d4, $e1, $f0, $f8, $fe, $08
1a6f9     14 17 1D 22 
1a6fd     2A 2F 31 2E 
1a701     1F 11 05 FA 
1a705     EA DD D2 D1 | 	byte	$14, $17, $1d, $22, $2a, $2f, $31, $2e, $1f, $11, $05, $fa, $ea, $dd, $d2, $d1
1a709     D1 D0 D4 DB 
1a70d     E7 F8 05 0E 
1a711     12 11 0F 0F 
1a715     11 0B 05 F7 | 	byte	$d1, $d0, $d4, $db, $e7, $f8, $05, $0e, $12, $11, $0f, $0f, $11, $0b, $05, $f7
1a719     E8 E1 E1 E0 
1a71d     DD DD E1 E5 
1a721     EA F1 F7 F8 
1a725     F8 FE 0F 1B | 	byte	$e8, $e1, $e1, $e0, $dd, $dd, $e1, $e5, $ea, $f1, $f7, $f8, $f8, $fe, $0f, $1b
1a729     24 27 27 25 
1a72d     25 22 1A 17 
1a731     17 18 15 0B 
1a735     00 F7 F4 EE | 	byte	$24, $27, $27, $25, $25, $22, $1a, $17, $17, $18, $15, $0b, $00, $f7, $f4, $ee
1a739     EA EB F2 FA 
1a73d     0A 15 17 14 
1a741     12 17 1D 21 
1a745     2A 2E 31 2B | 	byte	$ea, $eb, $f2, $fa, $0a, $15, $17, $14, $12, $17, $1d, $21, $2a, $2e, $31, $2b
1a749     1D 12 08 00 
1a74d     F0 E8 E4 E7 
1a751     EA EB F0 F2 
1a755     F8 FE 0A 15 | 	byte	$1d, $12, $08, $00, $f0, $e8, $e4, $e7, $ea, $eb, $f0, $f2, $f8, $fe, $0a, $15
1a759     1B 1F 22 21 
1a75d     1D 18 14 12 
1a761     0B 02 FB F7 
1a765     F5 F7 FB FB | 	byte	$1b, $1f, $22, $21, $1d, $18, $14, $12, $0b, $02, $fb, $f7, $f5, $f7, $fb, $fb
1a769     F7 EA E2 E2 
1a76d     ED F8 FE 00 
1a771     F7 EB E0 D7 
1a775     D7 DB E2 E2 | 	byte	$f7, $ea, $e2, $e2, $ed, $f8, $fe, $00, $f7, $eb, $e0, $d7, $d7, $db, $e2, $e2
1a779     DD DD E1 EB 
1a77d     F8 04 0A 05 
1a781     00 F7 F7 FD 
1a785     04 0B 11 12 | 	byte	$dd, $dd, $e1, $eb, $f8, $04, $0a, $05, $00, $f7, $f7, $fd, $04, $0b, $11, $12
1a789     11 0E 07 02 
1a78d     02 01 FE FE 
1a791     FD FE FE FD 
1a795     F5 EE EB F1 | 	byte	$11, $0e, $07, $02, $02, $01, $fe, $fe, $fd, $fe, $fe, $fd, $f5, $ee, $eb, $f1
1a799     FB 02 05 02 
1a79d     00 FB FE 04 
1a7a1     0E 15 1F 25 
1a7a5     1D 11 0F 14 | 	byte	$fb, $02, $05, $02, $00, $fb, $fe, $04, $0e, $15, $1f, $25, $1d, $11, $0f, $14
1a7a9     18 17 14 11 
1a7ad     14 15 11 04 
1a7b1     FA F1 EB E8 
1a7b5     F0 FB 07 11 | 	byte	$18, $17, $14, $11, $14, $15, $11, $04, $fa, $f1, $eb, $e8, $f0, $fb, $07, $11
1a7b9     18 1D 1F 22 
1a7bd     22 1D 14 0B 
1a7c1     00 F7 FA 05 
1a7c5     0E 12 11 0B | 	byte	$18, $1d, $1f, $22, $22, $1d, $14, $0b, $00, $f7, $fa, $05, $0e, $12, $11, $0b
1a7c9     00 F1 E5 E2 
1a7cd     E7 EB EA E4 
1a7d1     DD D7 D7 D4 
1a7d5     CE CE D4 E1 | 	byte	$00, $f1, $e5, $e2, $e7, $eb, $ea, $e4, $dd, $d7, $d7, $d4, $ce, $ce, $d4, $e1
1a7d9     F0 FA F8 F4 
1a7dd     F4 F5 F7 FE 
1a7e1     12 21 2B 2E 
1a7e5     28 22 1A 0F | 	byte	$f0, $fa, $f8, $f4, $f4, $f5, $f7, $fe, $12, $21, $2b, $2e, $28, $22, $1a, $0f
1a7e9     02 F5 EE EE 
1a7ed     F2 F5 FA 02 
1a7f1     08 05 00 FE 
1a7f5     01 05 08 0D | 	byte	$02, $f5, $ee, $ee, $f2, $f5, $fa, $02, $08, $05, $00, $fe, $01, $05, $08, $0d
1a7f9     0E 0E 0E 0F 
1a7fd     0E 0B 0B 0B 
1a801     05 00 F5 EE 
1a805     EB EE F2 FB | 	byte	$0e, $0e, $0e, $0f, $0e, $0b, $0b, $0b, $05, $00, $f5, $ee, $eb, $ee, $f2, $fb
1a809     04 08 05 01 
1a80d     04 02 01 FD 
1a811     F7 F7 F8 F8 
1a815     F8 FE 05 0B | 	byte	$04, $08, $05, $01, $04, $02, $01, $fd, $f7, $f7, $f8, $f8, $f8, $fe, $05, $0b
1a819     0D 0E 0F 14 
1a81d     18 1D 1F 1D 
1a821     1A 15 17 1E 
1a825     21 24 28 31 | 	byte	$0d, $0e, $0f, $14, $18, $1d, $1f, $1d, $1a, $15, $17, $1e, $21, $24, $28, $31
1a829     37 37 2E 22 
1a82d     17 0F 0B 07 
1a831     02 FB F1 EE 
1a835     EA E8 ED F5 | 	byte	$37, $37, $2e, $22, $17, $0f, $0b, $07, $02, $fb, $f1, $ee, $ea, $e8, $ed, $f5
1a839     FE 05 0A 0B 
1a83d     0F 11 12 0F 
1a841     08 00 F0 E0 
1a845     DA DE E5 E7 | 	byte	$fe, $05, $0a, $0b, $0f, $11, $12, $0f, $08, $00, $f0, $e0, $da, $de, $e5, $e7
1a849     E8 E8 EA F0 
1a84d     F4 F8 FA F8 
1a851     F2 EB E1 D7 
1a855     D4 D7 E0 EA | 	byte	$e8, $e8, $ea, $f0, $f4, $f8, $fa, $f8, $f2, $eb, $e1, $d7, $d4, $d7, $e0, $ea
1a859     F5 04 0E 14 
1a85d     18 1D 1F 24 
1a861     28 2D 2B 25 
1a865     1D 0F 05 00 | 	byte	$f5, $04, $0e, $14, $18, $1d, $1f, $24, $28, $2d, $2b, $25, $1d, $0f, $05, $00
1a869     FA F4 EE E8 
1a86d     E8 ED EE F0 
1a871     F0 EA E5 E5 
1a875     ED F4 FD 04 | 	byte	$fa, $f4, $ee, $e8, $e8, $ed, $ee, $f0, $f0, $ea, $e5, $e5, $ed, $f4, $fd, $04
1a879     0D 15 21 2F 
1a87d     3B 3D 3A 34 
1a881     28 17 07 FD 
1a885     F7 F2 EE EE | 	byte	$0d, $15, $21, $2f, $3b, $3d, $3a, $34, $28, $17, $07, $fd, $f7, $f2, $ee, $ee
1a889     ED EA EB ED 
1a88d     F2 FB 01 05 
1a891     02 FD F4 EB 
1a895     E2 DA D1 C8 | 	byte	$ed, $ea, $eb, $ed, $f2, $fb, $01, $05, $02, $fd, $f4, $eb, $e2, $da, $d1, $c8
1a899     C8 D0 DB E5 
1a89d     EB F1 F7 F7 
1a8a1     F1 ED EA E8 
1a8a5     ED F8 04 08 | 	byte	$c8, $d0, $db, $e5, $eb, $f1, $f7, $f7, $f1, $ed, $ea, $e8, $ed, $f8, $04, $08
1a8a9     0B 0D 0B 07 
1a8ad     04 05 0A 0B 
1a8b1     0E 12 14 11 
1a8b5     0F 12 15 15 | 	byte	$0b, $0d, $0b, $07, $04, $05, $0a, $0b, $0e, $12, $14, $11, $0f, $12, $15, $15
1a8b9     11 0D 0E 11 
1a8bd     17 1D 1A 11 
1a8c1     02 F8 F1 EE 
1a8c5     F0 F0 F1 F5 | 	byte	$11, $0d, $0e, $11, $17, $1d, $1a, $11, $02, $f8, $f1, $ee, $f0, $f0, $f1, $f5
1a8c9     FE 07 0B 0D 
1a8cd     0E 0F 11 14 
1a8d1     15 1B 24 2D 
1a8d5     32 31 25 1A | 	byte	$fe, $07, $0b, $0d, $0e, $0f, $11, $14, $15, $1b, $24, $2d, $32, $31, $25, $1a
1a8d9     0E 08 02 FD 
1a8dd     F8 F4 F2 EE 
1a8e1     EB EB EE F0 
1a8e5     F2 FB 05 0E | 	byte	$0e, $08, $02, $fd, $f8, $f4, $f2, $ee, $eb, $eb, $ee, $f0, $f2, $fb, $05, $0e
1a8e9     14 18 1A 17 
1a8ed     12 0B 00 EE 
1a8f1     E0 D8 D4 CB 
1a8f5     C0 BA BB C4 | 	byte	$14, $18, $1a, $17, $12, $0b, $00, $ee, $e0, $d8, $d4, $cb, $c0, $ba, $bb, $c4
1a8f9     D2 DE E5 F1 
1a8fd     FD 02 08 0F 
1a901     1A 1F 22 22 
1a905     1F 1A 14 0D | 	byte	$d2, $de, $e5, $f1, $fd, $02, $08, $0f, $1a, $1f, $22, $22, $1f, $1a, $14, $0d
1a909     08 02 FE FD 
1a90d     FE FE 04 0B 
1a911     12 14 15 14 
1a915     0E 07 07 0D | 	byte	$08, $02, $fe, $fd, $fe, $fe, $04, $0b, $12, $14, $15, $14, $0e, $07, $07, $0d
1a919     15 1A 1A 18 
1a91d     14 11 0E 0D 
1a921     08 00 F4 EE 
1a925     F2 FB 02 0A | 	byte	$15, $1a, $1a, $18, $14, $11, $0e, $0d, $08, $00, $f4, $ee, $f2, $fb, $02, $0a
1a929     0E 0E 0D 0D 
1a92d     0E 0E 0B 02 
1a931     FB FA FE 07 
1a935     0E 0E 08 00 | 	byte	$0e, $0e, $0d, $0d, $0e, $0e, $0b, $02, $fb, $fa, $fe, $07, $0e, $0e, $08, $00
1a939     FA F7 F4 E8 
1a93d     DA CE CD D2 
1a941     DD EB F4 FB 
1a945     FE 07 0E 15 | 	byte	$fa, $f7, $f4, $e8, $da, $ce, $cd, $d2, $dd, $eb, $f4, $fb, $fe, $07, $0e, $15
1a949     1A 1E 1F 1E 
1a94d     1B 17 11 08 
1a951     01 F8 F2 F7 
1a955     FE 08 0B 08 | 	byte	$1a, $1e, $1f, $1e, $1b, $17, $11, $08, $01, $f8, $f2, $f7, $fe, $08, $0b, $08
1a959     00 FD F8 F5 
1a95d     F0 EB EB EB 
1a961     EE F5 FE 0D 
1a965     0D 08 04 01 | 	byte	$00, $fd, $f8, $f5, $f0, $eb, $eb, $eb, $ee, $f5, $fe, $0d, $0d, $08, $04, $01
1a969     04 0A 0E 11 
1a96d     12 0F 0E 11 
1a971     15 18 1F 27 
1a975     2A 2A 2B 2D | 	byte	$04, $0a, $0e, $11, $12, $0f, $0e, $11, $15, $18, $1f, $27, $2a, $2a, $2b, $2d
1a979     28 22 1D 17 
1a97d     14 11 0F 12 
1a981     1A 21 27 28 
1a985     22 17 0B 00 | 	byte	$28, $22, $1d, $17, $14, $11, $0f, $12, $1a, $21, $27, $28, $22, $17, $0b, $00
1a989     EB DD D1 C8 
1a98d     C2 C1 C7 D0 
1a991     DA E4 F0 F7 
1a995     F5 ED E2 D7 | 	byte	$eb, $dd, $d1, $c8, $c2, $c1, $c7, $d0, $da, $e4, $f0, $f7, $f5, $ed, $e2, $d7
1a999     D5 D8 DD E0 
1a99d     E1 E5 ED F2 
1a9a1     F5 F1 ED EA 
1a9a5     E5 E4 ED FB | 	byte	$d5, $d8, $dd, $e0, $e1, $e5, $ed, $f2, $f5, $f1, $ed, $ea, $e5, $e4, $ed, $fb
1a9a9     05 08 00 F5 
1a9ad     EE F1 FE 0A 
1a9b1     18 22 2B 2E 
1a9b5     2E 2E 2E 28 | 	byte	$05, $08, $00, $f5, $ee, $f1, $fe, $0a, $18, $22, $2b, $2e, $2e, $2e, $2e, $28
1a9b9     22 18 0B 00 
1a9bd     FA F5 F4 EE 
1a9c1     E8 E7 ED F5 
1a9c5     FE 0D 18 1F | 	byte	$22, $18, $0b, $00, $fa, $f5, $f4, $ee, $e8, $e7, $ed, $f5, $fe, $0d, $18, $1f
1a9c9     2A 35 3E 3D 
1a9cd     34 25 18 0B 
1a9d1     01 FE 07 11 
1a9d5     14 15 14 14 | 	byte	$2a, $35, $3e, $3d, $34, $25, $18, $0b, $01, $fe, $07, $11, $14, $15, $14, $14
1a9d9     17 17 11 05 
1a9dd     F7 E8 D8 D4 
1a9e1     D7 D5 CB BD 
1a9e5     B7 BB C4 C8 | 	byte	$17, $17, $11, $05, $f7, $e8, $d8, $d4, $d7, $d5, $cb, $bd, $b7, $bb, $c4, $c8
1a9e9     D0 DB F2 FE 
1a9ed     0E 18 21 28 
1a9f1     2B 22 11 00 
1a9f5     EE E2 DD D8 | 	byte	$d0, $db, $f2, $fe, $0e, $18, $21, $28, $2b, $22, $11, $00, $ee, $e2, $dd, $d8
1a9f9     DA E1 ED F8 
1a9fd     04 05 00 F1 
1aa01     E2 DD E4 EE 
1aa05     F8 FE 08 12 | 	byte	$da, $e1, $ed, $f8, $04, $05, $00, $f1, $e2, $dd, $e4, $ee, $f8, $fe, $08, $12
1aa09     1D 24 1F 1A 
1aa0d     11 07 02 07 
1aa11     0B 0A 0D 15 
1aa15     1B 1E 21 25 | 	byte	$1d, $24, $1f, $1a, $11, $07, $02, $07, $0b, $0a, $0d, $15, $1b, $1e, $21, $25
1aa19     2E 37 3B 3B 
1aa1d     34 28 1D 11 
1aa21     05 F4 E2 D1 
1aa25     C8 D0 E1 F8 | 	byte	$2e, $37, $3b, $3b, $34, $28, $1d, $11, $05, $f4, $e2, $d1, $c8, $d0, $e1, $f8
1aa29     05 12 17 12 
1aa2d     02 F4 E4 DB 
1aa31     DB E1 F0 FE 
1aa35     12 1B 1B 17 | 	byte	$05, $12, $17, $12, $02, $f4, $e4, $db, $db, $e1, $f0, $fe, $12, $1b, $1b, $17
1aa39     11 08 00 F5 
1aa3d     F2 F8 FA F4 
1aa41     E8 E7 F1 FE 
1aa45     14 21 28 27 | 	byte	$11, $08, $00, $f5, $f2, $f8, $fa, $f4, $e8, $e7, $f1, $fe, $14, $21, $28, $27
1aa49     22 1F 1F 22 
1aa4d     28 2D 2E 28 
1aa51     22 17 0B FA 
1aa55     EB DD C8 BB | 	byte	$22, $1f, $1f, $22, $28, $2d, $2e, $28, $22, $17, $0b, $fa, $eb, $dd, $c8, $bb
1aa59     B7 B8 C4 D0 
1aa5d     E2 F0 F2 F2 
1aa61     F4 FB FE 0A 
1aa65     15 17 0B F8 | 	byte	$b7, $b8, $c4, $d0, $e2, $f0, $f2, $f2, $f4, $fb, $fe, $0a, $15, $17, $0b, $f8
1aa69     E8 E0 E0 E7 
1aa6d     ED F7 04 0E 
1aa71     0E 0E 0E 0E 
1aa75     11 1A 25 32 | 	byte	$e8, $e0, $e0, $e7, $ed, $f7, $04, $0e, $0e, $0e, $0e, $0e, $11, $1a, $25, $32
1aa79     3E 3E 34 27 
1aa7d     17 05 FD FE 
1aa81     0D 1E 2A 2E 
1aa85     2A 25 22 18 | 	byte	$3e, $3e, $34, $27, $17, $05, $fd, $fe, $0d, $1e, $2a, $2e, $2a, $25, $22, $18
1aa89     0E 04 FB EE 
1aa8d     E0 D7 D2 D2 
1aa91     DB ED FB 02 
1aa95     02 02 04 0A | 	byte	$0e, $04, $fb, $ee, $e0, $d7, $d2, $d2, $db, $ed, $fb, $02, $02, $02, $04, $0a
1aa99     15 1F 25 28 
1aa9d     28 22 17 0D 
1aaa1     05 00 FD F5 
1aaa5     F8 FE 02 05 | 	byte	$15, $1f, $25, $28, $28, $22, $17, $0d, $05, $00, $fd, $f5, $f8, $fe, $02, $05
1aaa9     04 02 01 FE 
1aaad     FB F7 ED E2 
1aab1     E0 DA D4 D4 
1aab5     DA E4 F1 F7 | 	byte	$04, $02, $01, $fe, $fb, $f7, $ed, $e2, $e0, $da, $d4, $d4, $da, $e4, $f1, $f7
1aab9     F5 F0 E8 E2 
1aabd     E2 EA F2 FE 
1aac1     04 04 00 FD 
1aac5     F8 F5 F8 FD | 	byte	$f5, $f0, $e8, $e2, $e2, $ea, $f2, $fe, $04, $04, $00, $fd, $f8, $f5, $f8, $fd
1aac9     07 11 17 1E 
1aacd     24 2B 2E 2F 
1aad1     31 31 2E 2B 
1aad5     25 1B 0E 05 | 	byte	$07, $11, $17, $1e, $24, $2b, $2e, $2f, $31, $31, $2e, $2b, $25, $1b, $0e, $05
1aad9     00 F5 EB E2 
1aadd     D7 CB C5 C8 
1aae1     D5 E1 E7 E7 
1aae5     E2 E0 DD DD | 	byte	$00, $f5, $eb, $e2, $d7, $cb, $c5, $c8, $d5, $e1, $e7, $e7, $e2, $e0, $dd, $dd
1aae9     DD DA D5 D7 
1aaed     DB E1 E7 F0 
1aaf1     F5 FE 0A 14 
1aaf5     17 14 0B 01 | 	byte	$dd, $da, $d5, $d7, $db, $e1, $e7, $f0, $f5, $fe, $0a, $14, $17, $14, $0b, $01
1aaf9     FE FE 08 0F 
1aafd     15 17 18 18 
1ab01     1A 1D 1D 1A 
1ab05     17 11 0D 0B | 	byte	$fe, $fe, $08, $0f, $15, $17, $18, $18, $1a, $1d, $1d, $1a, $17, $11, $0d, $0b
1ab09     0E 0F 11 11 
1ab0d     0B 00 F4 E8 
1ab11     E4 E4 ED FA 
1ab15     FE FD FE 0D | 	byte	$0e, $0f, $11, $11, $0b, $00, $f4, $e8, $e4, $e4, $ed, $fa, $fe, $fd, $fe, $0d
1ab19     1B 21 28 2E 
1ab1d     2E 22 11 02 
1ab21     F8 EE E4 E7 
1ab25     F2 FD 02 07 | 	byte	$1b, $21, $28, $2e, $2e, $22, $11, $02, $f8, $ee, $e4, $e7, $f2, $fd, $02, $07
1ab29     0A 11 18 1D 
1ab2d     1D 1D 1D 1D 
1ab31     1B 12 0B 0A 
1ab35     0B 05 01 02 | 	byte	$0a, $11, $18, $1d, $1d, $1d, $1d, $1d, $1b, $12, $0b, $0a, $0b, $05, $01, $02
1ab39     08 0B 08 07 
1ab3d     00 F8 F2 F4 
1ab41     F8 FA FD 01 
1ab45     05 07 02 FD | 	byte	$08, $0b, $08, $07, $00, $f8, $f2, $f4, $f8, $fa, $fd, $01, $05, $07, $02, $fd
1ab49     F4 EA EA F0 
1ab4d     F8 FD FE FB 
1ab51     F4 F2 F5 FA 
1ab55     FA F8 F7 F8 | 	byte	$f4, $ea, $ea, $f0, $f8, $fd, $fe, $fb, $f4, $f2, $f5, $fa, $fa, $f8, $f7, $f8
1ab59     FE 02 01 F7 
1ab5d     EB E8 E5 E5 
1ab61     EA F2 FE 0A 
1ab65     12 12 0B 00 | 	byte	$fe, $02, $01, $f7, $eb, $e8, $e5, $e5, $ea, $f2, $fe, $0a, $12, $12, $0b, $00
1ab69     FA FA FA FA 
1ab6d     FB F5 F1 F2 
1ab71     FB 0A 14 18 
1ab75     14 0B 07 0B | 	byte	$fa, $fa, $fa, $fa, $fb, $f5, $f1, $f2, $fb, $0a, $14, $18, $14, $0b, $07, $0b
1ab79     14 1B 1F 1D 
1ab7d     17 17 17 12 
1ab81     08 FA EB E7 
1ab85     E7 EB F2 F2 | 	byte	$14, $1b, $1f, $1d, $17, $17, $17, $12, $08, $fa, $eb, $e7, $e7, $eb, $f2, $f2
1ab89     EE EB E7 E5 
1ab8d     ED F8 05 14 
1ab91     1F 28 2F 37 
1ab95     3D 41 42 3D | 	byte	$ee, $eb, $e7, $e5, $ed, $f8, $05, $14, $1f, $28, $2f, $37, $3d, $41, $42, $3d
1ab99     2E 22 1B 1D 
1ab9d     1E 1A 12 05 
1aba1     00 FE 01 08 
1aba5     0B 11 11 0E | 	byte	$2e, $22, $1b, $1d, $1e, $1a, $12, $05, $00, $fe, $01, $08, $0b, $11, $11, $0e
1aba9     02 F4 E8 DD 
1abad     D7 D5 D5 D1 
1abb1     C8 C5 C4 C5 
1abb5     CA D4 E5 F5 | 	byte	$02, $f4, $e8, $dd, $d7, $d5, $d5, $d1, $c8, $c5, $c4, $c5, $ca, $d4, $e5, $f5
1abb9     FE 07 0B 0B 
1abbd     0D 11 14 18 
1abc1     1D 1B 17 0E 
1abc5     08 02 07 0E | 	byte	$fe, $07, $0b, $0b, $0d, $11, $14, $18, $1d, $1b, $17, $0e, $08, $02, $07, $0e
1abc9     11 11 12 11 
1abcd     0F 05 FA EE 
1abd1     E5 E0 DE DE 
1abd5     DD DA DE E5 | 	byte	$11, $11, $12, $11, $0f, $05, $fa, $ee, $e5, $e0, $de, $de, $dd, $da, $de, $e5
1abd9     EB F0 F0 F2 
1abdd     F7 F8 FB FE 
1abe1     08 0F 12 12 
1abe5     11 0B 0B 08 | 	byte	$eb, $f0, $f0, $f2, $f7, $f8, $fb, $fe, $08, $0f, $12, $12, $11, $0b, $0b, $08
1abe9     00 FA F8 F8 
1abed     F5 F1 F0 F1 
1abf1     F7 FE 0A 12 
1abf5     1A 1F 1F 1D | 	byte	$00, $fa, $f8, $f8, $f5, $f1, $f0, $f1, $f7, $fe, $0a, $12, $1a, $1f, $1f, $1d
1abf9     1A 1D 1F 1F 
1abfd     1A 17 0E 08 
1ac01     08 0F 15 17 
1ac05     12 12 11 08 | 	byte	$1a, $1d, $1f, $1f, $1a, $17, $0e, $08, $08, $0f, $15, $17, $12, $12, $11, $08
1ac09     00 FB FE 02 
1ac0d     00 F7 F2 F1 
1ac11     EE E8 E0 E4 
1ac15     F2 FE 0E 14 | 	byte	$00, $fb, $fe, $02, $00, $f7, $f2, $f1, $ee, $e8, $e0, $e4, $f2, $fe, $0e, $14
1ac19     15 17 1B 1E 
1ac1d     1E 17 0B FA 
1ac21     E8 DD D4 CD 
1ac25     CB D2 DB E1 | 	byte	$15, $17, $1b, $1e, $1e, $17, $0b, $fa, $e8, $dd, $d4, $cd, $cb, $d2, $db, $e1
1ac29     E2 E5 E7 E8 
1ac2d     E5 E4 E4 E4 
1ac31     E1 E4 EB F4 
1ac35     F4 EA E2 E2 | 	byte	$e2, $e5, $e7, $e8, $e5, $e4, $e4, $e4, $e1, $e4, $eb, $f4, $f4, $ea, $e2, $e2
1ac39     EB F5 FE 14 
1ac3d     25 2F 38 3B 
1ac41     3A 34 2E 1F 
1ac45     14 0E 07 05 | 	byte	$eb, $f5, $fe, $14, $25, $2f, $38, $3b, $3a, $34, $2e, $1f, $14, $0e, $07, $05
1ac49     08 0B 08 FD 
1ac4d     F4 F5 FB FE 
1ac51     F8 F1 EE EB 
1ac55     E5 DD DA DE | 	byte	$08, $0b, $08, $fd, $f4, $f5, $fb, $fe, $f8, $f1, $ee, $eb, $e5, $dd, $da, $de
1ac59     E7 F8 0A 1B 
1ac5d     2B 3E 47 45 
1ac61     42 3A 34 2E 
1ac65     24 1F 1A 11 | 	byte	$e7, $f8, $0a, $1b, $2b, $3e, $47, $45, $42, $3a, $34, $2e, $24, $1f, $1a, $11
1ac69     0D 0A 0B 0E 
1ac6d     0F 11 12 0F 
1ac71     05 00 FD FE 
1ac75     00 FD F4 ED | 	byte	$0d, $0a, $0b, $0e, $0f, $11, $12, $0f, $05, $00, $fd, $fe, $00, $fd, $f4, $ed
1ac79     E5 E4 E7 F2 
1ac7d     FE 12 1E 25 
1ac81     2D 2E 2B 25 
1ac85     1F 17 0E 02 | 	byte	$e5, $e4, $e7, $f2, $fe, $12, $1e, $25, $2d, $2e, $2b, $25, $1f, $17, $0e, $02
1ac89     F5 EE E5 DD 
1ac8d     D7 CE C8 C5 
1ac91     C4 C8 D5 E7 
1ac95     F8 05 0B 08 | 	byte	$f5, $ee, $e5, $dd, $d7, $ce, $c8, $c5, $c4, $c8, $d5, $e7, $f8, $05, $0b, $08
1ac99     02 FB F1 EB 
1ac9d     EA E8 EA ED 
1aca1     F5 FE 12 22 
1aca5     2B 2E 2E 2B | 	byte	$02, $fb, $f1, $eb, $ea, $e8, $ea, $ed, $f5, $fe, $12, $22, $2b, $2e, $2e, $2b
1aca9     2A 25 17 02 
1acad     EE DD D7 DB 
1acb1     DE E0 E2 E7 
1acb5     EA EB F0 F7 | 	byte	$2a, $25, $17, $02, $ee, $dd, $d7, $db, $de, $e0, $e2, $e7, $ea, $eb, $f0, $f7
1acb9     F7 EE EA F0 
1acbd     FD 05 0D 11 
1acc1     15 1E 2D 32 
1acc5     2E 22 17 0E | 	byte	$f7, $ee, $ea, $f0, $fd, $05, $0d, $11, $15, $1e, $2d, $32, $2e, $22, $17, $0e
1acc9     02 FD FE 0A 
1accd     12 18 1A 17 
1acd1     11 08 02 05 
1acd5     0B 12 15 14 | 	byte	$02, $fd, $fe, $0a, $12, $18, $1a, $17, $11, $08, $02, $05, $0b, $12, $15, $14
1acd9     11 0D 0D 0E 
1acdd     0B 0E 15 1B 
1ace1     1D 1D 1D 1D 
1ace5     1D 1D 17 0B | 	byte	$11, $0d, $0d, $0e, $0b, $0e, $15, $1b, $1d, $1d, $1d, $1d, $1d, $1d, $17, $0b
1ace9     00 EB E0 DD 
1aced     DD D7 CE C1 
1acf1     BE C4 D0 DE 
1acf5     E4 E5 E0 DD | 	byte	$00, $eb, $e0, $dd, $dd, $d7, $ce, $c1, $be, $c4, $d0, $de, $e4, $e5, $e0, $dd
1acf9     D7 DB ED F8 
1acfd     FD 01 05 02 
1ad01     FD F8 FD FD 
1ad05     F7 F1 E8 E7 | 	byte	$d7, $db, $ed, $f8, $fd, $01, $05, $02, $fd, $f8, $fd, $fd, $f7, $f1, $e8, $e7
1ad09     ED F5 FD 04 
1ad0d     0E 18 22 1E 
1ad11     14 07 FD F7 
1ad15     F7 FA FE 0E | 	byte	$ed, $f5, $fd, $04, $0e, $18, $22, $1e, $14, $07, $fd, $f7, $f7, $fa, $fe, $0e
1ad19     1B 24 27 25 
1ad1d     1D 14 05 FA 
1ad21     F8 FB FE FE 
1ad25     FA F1 E8 DD | 	byte	$1b, $24, $27, $25, $1d, $14, $05, $fa, $f8, $fb, $fe, $fe, $fa, $f1, $e8, $dd
1ad29     D7 D5 D7 DB 
1ad2d     E7 F8 FE 02 
1ad31     0A 11 18 1E 
1ad35     24 2B 28 22 | 	byte	$d7, $d5, $d7, $db, $e7, $f8, $fe, $02, $0a, $11, $18, $1e, $24, $2b, $28, $22
1ad39     1A 11 0F 12 
1ad3d     17 14 18 24 
1ad41     27 24 1E 12 
1ad45     0B 0B 0E 0B | 	byte	$1a, $11, $0f, $12, $17, $14, $18, $24, $27, $24, $1e, $12, $0b, $0b, $0e, $0b
1ad49     0F 15 1E 1D 
1ad4d     14 0F 0E 0F 
1ad51     0E 08 00 FA 
1ad55     FA F2 E8 E2 | 	byte	$0f, $15, $1e, $1d, $14, $0f, $0e, $0f, $0e, $08, $00, $fa, $fa, $f2, $e8, $e2
1ad59     DA D7 DE EA 
1ad5d     F8 08 12 11 
1ad61     0B FA E8 DD 
1ad65     DD E2 EE F8 | 	byte	$da, $d7, $de, $ea, $f8, $08, $12, $11, $0b, $fa, $e8, $dd, $dd, $e2, $ee, $f8
1ad69     04 08 00 F7 
1ad6d     EB E7 E8 EA 
1ad71     ED F2 F8 FE 
1ad75     07 0E 12 12 | 	byte	$04, $08, $00, $f7, $eb, $e7, $e8, $ea, $ed, $f2, $f8, $fe, $07, $0e, $12, $12
1ad79     0E 08 0B 15 
1ad7d     1D 1D 17 11 
1ad81     0D 08 01 FE 
1ad85     08 15 1B 18 | 	byte	$0e, $08, $0b, $15, $1d, $1d, $17, $11, $0d, $08, $01, $fe, $08, $15, $1b, $18
1ad89     0B 00 F4 E5 
1ad8d     DD DB DB DE 
1ad91     E1 E4 ED F5 
1ad95     FE 0D 1A 1F | 	byte	$0b, $00, $f4, $e5, $dd, $db, $db, $de, $e1, $e4, $ed, $f5, $fe, $0d, $1a, $1f
1ad99     1A 0B 00 F2 
1ad9d     F2 FD 08 12 
1ada1     1A 21 1F 11 
1ada5     00 E8 DA DA | 	byte	$1a, $0b, $00, $f2, $f2, $fd, $08, $12, $1a, $21, $1f, $11, $00, $e8, $da, $da
1ada9     E0 DD D7 DA 
1adad     E4 F2 FE 0F 
1adb1     24 2E 2F 2E 
1adb5     25 24 25 25 | 	byte	$e0, $dd, $d7, $da, $e4, $f2, $fe, $0f, $24, $2e, $2f, $2e, $25, $24, $25, $25
1adb9     22 1E 18 11 
1adbd     08 FD F2 F5 
1adc1     FE 07 05 04 
1adc5     00 FD F8 F5 | 	byte	$22, $1e, $18, $11, $08, $fd, $f2, $f5, $fe, $07, $05, $04, $00, $fd, $f8, $f5
1adc9     F8 F8 F1 EA 
1adcd     E5 E2 E1 E7 
1add1     F2 FE 0E 15 
1add5     12 0B 07 FD | 	byte	$f8, $f8, $f1, $ea, $e5, $e2, $e1, $e7, $f2, $fe, $0e, $15, $12, $0b, $07, $fd
1add9     F1 F4 FE 0F 
1addd     1B 1F 1F 17 
1ade1     11 0F 0F 11 
1ade5     12 14 15 17 | 	byte	$f1, $f4, $fe, $0f, $1b, $1f, $1f, $17, $11, $0f, $0f, $11, $12, $14, $15, $17
1ade9     15 11 0E 08 
1aded     00 EE DD D1 
1adf1     D1 D7 DB E2 
1adf5     E2 DD DE E2 | 	byte	$15, $11, $0e, $08, $00, $ee, $dd, $d1, $d1, $d7, $db, $e2, $e2, $dd, $de, $e2
1adf9     ED F8 FE 05 
1adfd     02 FB F8 FB 
1ae01     FA F4 F2 F8 
1ae05     FE 0F 18 21 | 	byte	$ed, $f8, $fe, $05, $02, $fb, $f8, $fb, $fa, $f4, $f2, $f8, $fe, $0f, $18, $21
1ae09     28 25 1F 1D 
1ae0d     1A 1A 1D 1E 
1ae11     1F 1A 0B 02 
1ae15     02 02 00 FB | 	byte	$28, $25, $1f, $1d, $1a, $1a, $1d, $1e, $1f, $1a, $0b, $02, $02, $02, $00, $fb
1ae19     F7 F4 F7 F7 
1ae1d     F8 F5 F7 FD 
1ae21     FE FA F5 EE 
1ae25     E2 DD DD E7 | 	byte	$f7, $f4, $f7, $f7, $f8, $f5, $f7, $fd, $fe, $fa, $f5, $ee, $e2, $dd, $dd, $e7
1ae29     F2 FE 0B 11 
1ae2d     0B 05 02 04 
1ae31     07 07 00 FA 
1ae35     FA 07 12 17 | 	byte	$f2, $fe, $0b, $11, $0b, $05, $02, $04, $07, $07, $00, $fa, $fa, $07, $12, $17
1ae39     1A 18 14 0E 
1ae3d     01 F4 E8 E1 
1ae41     DB DE E7 F2 
1ae45     FE 0A 0B 07 | 	byte	$1a, $18, $14, $0e, $01, $f4, $e8, $e1, $db, $de, $e7, $f2, $fe, $0a, $0b, $07
1ae49     05 0A 12 18 
1ae4d     1B 1D 1E 1A 
1ae51     0D 00 F1 E5 
1ae55     E5 EE F5 F4 | 	byte	$05, $0a, $12, $18, $1b, $1d, $1e, $1a, $0d, $00, $f1, $e5, $e5, $ee, $f5, $f4
1ae59     F1 F0 F4 F1 
1ae5d     ED F2 FA FE 
1ae61     FD F8 F4 F0 
1ae65     EB ED F1 FB | 	byte	$f1, $f0, $f4, $f1, $ed, $f2, $fa, $fe, $fd, $f8, $f4, $f0, $eb, $ed, $f1, $fb
1ae69     08 0D 0D 0F 
1ae6d     14 15 1D 27 
1ae71     2B 2F 34 31 
1ae75     31 2A 24 1D | 	byte	$08, $0d, $0d, $0f, $14, $15, $1d, $27, $2b, $2f, $34, $31, $31, $2a, $24, $1d
1ae79     17 12 0B 00 
1ae7d     EE E2 DE DA 
1ae81     D7 DA DE EA 
1ae85     F2 FD 02 02 | 	byte	$17, $12, $0b, $00, $ee, $e2, $de, $da, $d7, $da, $de, $ea, $f2, $fd, $02, $02
1ae89     00 FA F2 F1 
1ae8d     F2 F7 FD 01 
1ae91     05 00 F7 FB 
1ae95     04 11 1B 22 | 	byte	$00, $fa, $f2, $f1, $f2, $f7, $fd, $01, $05, $00, $f7, $fb, $04, $11, $1b, $22
1ae99     2B 31 2E 2A 
1ae9d     25 22 17 05 
1aea1     FA F4 F1 F4 
1aea5     FA FE 01 07 | 	byte	$2b, $31, $2e, $2a, $25, $22, $17, $05, $fa, $f4, $f1, $f4, $fa, $fe, $01, $07
1aea9     08 05 FD F1 
1aead     E5 D8 D1 CE 
1aeb1     CE D2 DB E0 
1aeb5     E1 E5 F1 F8 | 	byte	$08, $05, $fd, $f1, $e5, $d8, $d1, $ce, $ce, $d2, $db, $e0, $e1, $e5, $f1, $f8
1aeb9     FA FD 02 0B 
1aebd     14 14 11 0F 
1aec1     11 17 1A 17 
1aec5     0E 05 01 07 | 	byte	$fa, $fd, $02, $0b, $14, $14, $11, $0f, $11, $17, $1a, $17, $0e, $05, $01, $07
1aec9     14 1D 1B 14 
1aecd     12 17 17 11 
1aed1     08 05 0B 14 
1aed5     14 11 18 21 | 	byte	$14, $1d, $1b, $14, $12, $17, $17, $11, $08, $05, $0b, $14, $14, $11, $18, $21
1aed9     24 22 1A 11 
1aedd     08 00 F4 EB 
1aee1     E5 E2 E0 E4 
1aee5     F0 F8 FD 02 | 	byte	$24, $22, $1a, $11, $08, $00, $f4, $eb, $e5, $e2, $e0, $e4, $f0, $f8, $fd, $02
1aee9     12 1E 25 28 
1aeed     2B 2E 31 32 
1aef1     31 2A 1D 11 
1aef5     05 F4 E2 D7 | 	byte	$12, $1e, $25, $28, $2b, $2e, $31, $32, $31, $2a, $1d, $11, $05, $f4, $e2, $d7
1aef9     CE CD D1 D7 
1aefd     D7 D4 D5 D7 
1af01     DA D5 D4 DA 
1af05     DD E2 ED F8 | 	byte	$ce, $cd, $d1, $d7, $d7, $d4, $d5, $d7, $da, $d5, $d4, $da, $dd, $e2, $ed, $f8
1af09     04 07 00 EE 
1af0d     E2 E5 EA EB 
1af11     EB F1 F0 F1 
1af15     F5 FB FE 02 | 	byte	$04, $07, $00, $ee, $e2, $e5, $ea, $eb, $eb, $f1, $f0, $f1, $f5, $fb, $fe, $02
1af19     08 0E 11 12 
1af1d     15 21 31 3E 
1af21     4A 4E 48 3B 
1af25     2E 1D 0E 02 | 	byte	$08, $0e, $11, $12, $15, $21, $31, $3e, $4a, $4e, $48, $3b, $2e, $1d, $0e, $02
1af29     F4 EB EA ED 
1af2d     ED F1 F4 F5 
1af31     F7 FD 08 12 
1af35     1A 21 28 2A | 	byte	$f4, $eb, $ea, $ed, $ed, $f1, $f4, $f5, $f7, $fd, $08, $12, $1a, $21, $28, $2a
1af39     22 1A 0E 0D 
1af3d     0A 00 F7 F5 
1af41     F4 F1 EB E8 
1af45     E5 DA CB C0 | 	byte	$22, $1a, $0e, $0d, $0a, $00, $f7, $f5, $f4, $f1, $eb, $e8, $e5, $da, $cb, $c0
1af49     BA BB C4 D5 
1af4d     DD E0 ED FD 
1af51     0F 21 2E 2F 
1af55     2E 37 42 47 | 	byte	$ba, $bb, $c4, $d5, $dd, $e0, $ed, $fd, $0f, $21, $2e, $2f, $2e, $37, $42, $47
1af59     45 3D 2E 22 
1af5d     17 0E 02 F4 
1af61     DD CB C5 C7 
1af65     D0 D1 D8 E4 | 	byte	$45, $3d, $2e, $22, $17, $0e, $02, $f4, $dd, $cb, $c5, $c7, $d0, $d1, $d8, $e4
1af69     EE F8 08 15 
1af6d     1E 1E 12 05 
1af71     F7 E8 D8 D1 
1af75     D4 DB E0 E1 | 	byte	$ee, $f8, $08, $15, $1e, $1e, $12, $05, $f7, $e8, $d8, $d1, $d4, $db, $e0, $e1
1af79     E0 E5 F2 FE 
1af7d     02 04 0E 1A 
1af81     1D 1D 17 11 
1af85     0B 0A 02 FD | 	byte	$e0, $e5, $f2, $fe, $02, $04, $0e, $1a, $1d, $1d, $17, $11, $0b, $0a, $02, $fd
1af89     FA F8 F7 FB 
1af8d     04 0D 11 12 
1af91     17 17 17 14 
1af95     0E 07 FA F4 | 	byte	$fa, $f8, $f7, $fb, $04, $0d, $11, $12, $17, $17, $17, $14, $0e, $07, $fa, $f4
1af99     F5 FA 04 15 
1af9d     22 28 27 1F 
1afa1     12 00 F1 E4 
1afa5     DD DD E4 F1 | 	byte	$f5, $fa, $04, $15, $22, $28, $27, $1f, $12, $00, $f1, $e4, $dd, $dd, $e4, $f1
1afa9     FA FA FE 02 
1afad     05 04 02 04 
1afb1     05 0E 14 18 
1afb5     1D 17 11 05 | 	byte	$fa, $fa, $fe, $02, $05, $04, $02, $04, $05, $0e, $14, $18, $1d, $17, $11, $05
1afb9     FB F2 F2 FB 
1afbd     FD FE FE 04 
1afc1     11 15 15 1B 
1afc5     21 25 2B 2E | 	byte	$fb, $f2, $f2, $fb, $fd, $fe, $fe, $04, $11, $15, $15, $1b, $21, $25, $2b, $2e
1afc9     25 17 14 11 
1afcd     0E 05 F4 E5 
1afd1     E1 E1 DD DD 
1afd5     E5 F1 FD 01 | 	byte	$25, $17, $14, $11, $0e, $05, $f4, $e5, $e1, $e1, $dd, $dd, $e5, $f1, $fd, $01
1afd9     FA F0 F2 FB 
1afdd     02 0A 08 08 
1afe1     02 FB F7 F8 
1afe5     F8 F1 EE F1 | 	byte	$fa, $f0, $f2, $fb, $02, $0a, $08, $08, $02, $fb, $f7, $f8, $f8, $f1, $ee, $f1
1afe9     F7 FD 04 11 
1afed     17 18 1B 25 
1aff1     31 41 4A 4D 
1aff5     4A 3F 2F 22 | 	byte	$f7, $fd, $04, $11, $17, $18, $1b, $25, $31, $41, $4a, $4d, $4a, $3f, $2f, $22
1aff9     1D 14 02 EE 
1affd     DA D1 CE C8 
1b001     C4 CD DA E1 
1b005     E7 F7 FE 00 | 	byte	$1d, $14, $02, $ee, $da, $d1, $ce, $c8, $c4, $cd, $da, $e1, $e7, $f7, $fe, $00
1b009     04 05 0A 0A 
1b00d     05 04 05 08 
1b011     05 00 FE FB 
1b015     F8 F4 F1 F7 | 	byte	$04, $05, $0a, $0a, $05, $04, $05, $08, $05, $00, $fe, $fb, $f8, $f4, $f1, $f7
1b019     04 0B 08 FA 
1b01d     E8 D7 CE D0 
1b021     DB ED FE 0A 
1b025     0F 14 17 15 | 	byte	$04, $0b, $08, $fa, $e8, $d7, $ce, $d0, $db, $ed, $fe, $0a, $0f, $14, $17, $15
1b029     18 1D 1B 1A 
1b02d     1A 1D 17 08 
1b031     00 FD FE 08 
1b035     0E 0B 07 02 | 	byte	$18, $1d, $1b, $1a, $1a, $1d, $17, $08, $00, $fd, $fe, $08, $0e, $0b, $07, $02
1b039     FB F7 FE 00 
1b03d     00 FD F4 EB 
1b041     E5 DD DA D8 
1b045     DA E1 E7 EE | 	byte	$fb, $f7, $fe, $00, $00, $fd, $f4, $eb, $e5, $dd, $da, $d8, $da, $e1, $e7, $ee
1b049     F1 F0 F5 04 
1b04d     15 22 28 22 
1b051     17 00 EB DE 
1b055     DE E5 F0 F8 | 	byte	$f1, $f0, $f5, $04, $15, $22, $28, $22, $17, $00, $eb, $de, $de, $e5, $f0, $f8
1b059     FA FB FA F5 
1b05d     F5 FB FE 00 
1b061     02 02 08 12 
1b065     21 2F 32 28 | 	byte	$fa, $fb, $fa, $f5, $f5, $fb, $fe, $00, $02, $02, $08, $12, $21, $2f, $32, $28
1b069     17 05 F7 F7 
1b06d     FE 07 0B 0E 
1b071     15 1A 1E 18 
1b075     14 0E 08 05 | 	byte	$17, $05, $f7, $f7, $fe, $07, $0b, $0e, $15, $1a, $1e, $18, $14, $0e, $08, $05
1b079     01 FD FA F4 
1b07d     F4 F1 E8 E4 
1b081     E2 E1 DD DA 
1b085     D7 D7 DB E5 | 	byte	$01, $fd, $fa, $f4, $f4, $f1, $e8, $e4, $e2, $e1, $dd, $da, $d7, $d7, $db, $e5
1b089     F2 FE 07 08 
1b08d     05 01 00 FA 
1b091     F5 F4 F5 FD 
1b095     0A 15 1B 1A | 	byte	$f2, $fe, $07, $08, $05, $01, $00, $fa, $f5, $f4, $f5, $fd, $0a, $15, $1b, $1a
1b099     1D 25 32 38 
1b09d     35 2E 25 24 
1b0a1     22 17 0B 05 
1b0a5     05 05 00 F4 | 	byte	$1d, $25, $32, $38, $35, $2e, $25, $24, $22, $17, $0b, $05, $05, $05, $00, $f4
1b0a9     E8 DD D4 D4 
1b0ad     DB ED F8 FE 
1b0b1     FE FA F8 FA 
1b0b5     F1 E8 E2 E2 | 	byte	$e8, $dd, $d4, $d4, $db, $ed, $f8, $fe, $fe, $fa, $f8, $fa, $f1, $e8, $e2, $e2
1b0b9     E7 F2 FE 07 
1b0bd     0B 0E 0B 12 
1b0c1     1B 21 22 1F 
1b0c5     1A 14 0E 02 | 	byte	$e7, $f2, $fe, $07, $0b, $0e, $0b, $12, $1b, $21, $22, $1f, $1a, $14, $0e, $02
1b0c9     FB FB 02 0E 
1b0cd     1B 1F 1A 0B 
1b0d1     02 02 02 0A 
1b0d5     14 1D 1F 14 | 	byte	$fb, $fb, $02, $0e, $1b, $1f, $1a, $0b, $02, $02, $02, $0a, $14, $1d, $1f, $14
1b0d9     05 F7 E8 E0 
1b0dd     DB DB DE E7 
1b0e1     F1 FA 04 0E 
1b0e5     0E 08 0D 1B | 	byte	$05, $f7, $e8, $e0, $db, $db, $de, $e7, $f1, $fa, $04, $0e, $0e, $08, $0d, $1b
1b0e9     22 27 22 14 
1b0ed     0E 0B FA E8 
1b0f1     E4 E7 EB F2 
1b0f5     FE 0A 14 1A | 	byte	$22, $27, $22, $14, $0e, $0b, $fa, $e8, $e4, $e7, $eb, $f2, $fe, $0a, $14, $1a
1b0f9     1B 1D 1B 1B 
1b0fd     18 14 11 08 
1b101     F4 E2 DD DD 
1b105     DB D8 E0 E7 | 	byte	$1b, $1d, $1b, $1b, $18, $14, $11, $08, $f4, $e2, $dd, $dd, $db, $d8, $e0, $e7
1b109     ED ED ED EE 
1b10d     F0 F8 04 05 
1b111     01 02 FD F4 
1b115     EB EA ED F8 | 	byte	$ed, $ed, $ed, $ee, $f0, $f8, $04, $05, $01, $02, $fd, $f4, $eb, $ea, $ed, $f8
1b119     0F 25 38 3E 
1b11d     3E 42 42 3A 
1b121     2F 22 1A 18 
1b125     1A 1D 1F 17 | 	byte	$0f, $25, $38, $3e, $3e, $42, $42, $3a, $2f, $22, $1a, $18, $1a, $1d, $1f, $17
1b129     0D 08 05 01 
1b12d     00 01 00 FA 
1b131     EE E0 D1 CA 
1b135     D0 DB E1 E7 | 	byte	$0d, $08, $05, $01, $00, $01, $00, $fa, $ee, $e0, $d1, $ca, $d0, $db, $e1, $e7
1b139     ED F2 F5 FB 
1b13d     FE FA F0 EA 
1b141     E5 EA EE F4 
1b145     F8 F5 F7 FD | 	byte	$ed, $f2, $f5, $fb, $fe, $fa, $f0, $ea, $e5, $ea, $ee, $f4, $f8, $f5, $f7, $fd
1b149     FE F7 F5 FD 
1b14d     07 0F 1D 27 
1b151     2E 2B 1D 05 
1b155     F4 EB ED F0 | 	byte	$fe, $f7, $f5, $fd, $07, $0f, $1d, $27, $2e, $2b, $1d, $05, $f4, $eb, $ed, $f0
1b159     EE EB E8 E2 
1b15d     D7 CE CE D5 
1b161     E4 F2 FE 14 
1b165     1F 24 21 18 | 	byte	$ee, $eb, $e8, $e2, $d7, $ce, $ce, $d5, $e4, $f2, $fe, $14, $1f, $24, $21, $18
1b169     14 0E 08 05 
1b16d     02 FA F8 F8 
1b171     F7 F8 FD FE 
1b175     08 08 05 02 | 	byte	$14, $0e, $08, $05, $02, $fa, $f8, $f8, $f7, $f8, $fd, $fe, $08, $08, $05, $02
1b179     FE FE 04 08 
1b17d     08 0D 14 0F 
1b181     07 01 FD F8 
1b185     FD 01 05 00 | 	byte	$fe, $fe, $04, $08, $08, $0d, $14, $0f, $07, $01, $fd, $f8, $fd, $01, $05, $00
1b189     FA F5 F4 F5 
1b18d     FD 07 15 1B 
1b191     17 0B 07 0D 
1b195     0F 0F 15 1D | 	byte	$fa, $f5, $f4, $f5, $fd, $07, $15, $1b, $17, $0b, $07, $0d, $0f, $0f, $15, $1d
1b199     1D 0E 00 F7 
1b19d     F7 FA FD FD 
1b1a1     F4 F1 F8 FE 
1b1a5     00 04 0A 08 | 	byte	$1d, $0e, $00, $f7, $f7, $fa, $fd, $fd, $f4, $f1, $f8, $fe, $00, $04, $0a, $08
1b1a9     05 0A 0D 12 
1b1ad     17 17 14 0B 
1b1b1     00 E8 D7 CD 
1b1b5     D0 DB E5 ED | 	byte	$05, $0a, $0d, $12, $17, $17, $14, $0b, $00, $e8, $d7, $cd, $d0, $db, $e5, $ed
1b1b9     F2 F5 F8 04 
1b1bd     0F 15 1A 1F 
1b1c1     1F 1D 17 0B 
1b1c5     00 FA F4 F4 | 	byte	$f2, $f5, $f8, $04, $0f, $15, $1a, $1f, $1f, $1d, $17, $0b, $00, $fa, $f4, $f4
1b1c9     F4 F4 F7 F4 
1b1cd     F0 ED E7 E4 
1b1d1     EA F2 FD 0A 
1b1d5     1A 2A 38 3D | 	byte	$f4, $f4, $f7, $f4, $f0, $ed, $e7, $e4, $ea, $f2, $fd, $0a, $1a, $2a, $38, $3d
1b1d9     3A 2E 1F 17 
1b1dd     11 0B 01 F7 
1b1e1     EE EE EE EB 
1b1e5     EB F0 F2 FB | 	byte	$3a, $2e, $1f, $17, $11, $0b, $01, $f7, $ee, $ee, $ee, $eb, $eb, $f0, $f2, $fb
1b1e9     01 05 05 02 
1b1ed     FD F4 E8 E7 
1b1f1     F1 FE 07 0D 
1b1f5     14 21 27 28 | 	byte	$01, $05, $05, $02, $fd, $f4, $e8, $e7, $f1, $fe, $07, $0d, $14, $21, $27, $28
1b1f9     22 17 05 F7 
1b1fd     EB E7 E8 E5 
1b201     E5 E5 E7 E7 
1b205     E5 E4 E7 F2 | 	byte	$22, $17, $05, $f7, $eb, $e7, $e8, $e5, $e5, $e5, $e7, $e7, $e5, $e4, $e7, $f2
1b209     FE 0A 15 21 
1b20d     2F 37 3B 3A 
1b211     34 22 11 05 
1b215     05 07 08 05 | 	byte	$fe, $0a, $15, $21, $2f, $37, $3b, $3a, $34, $22, $11, $05, $05, $07, $08, $05
1b219     F7 E8 E0 DB 
1b21d     DD E1 EA F8 
1b221     07 0E 15 1F 
1b225     2D 32 31 28 | 	byte	$f7, $e8, $e0, $db, $dd, $e1, $ea, $f8, $07, $0e, $15, $1f, $2d, $32, $31, $28
1b229     22 1E 1A 1E 
1b22d     21 1F 1E 1E 
1b231     1A 0E 00 F1 
1b235     E1 DA DA D8 | 	byte	$22, $1e, $1a, $1e, $21, $1f, $1e, $1e, $1a, $0e, $00, $f1, $e1, $da, $da, $d8
1b239     DA DE E4 EB 
1b23d     F1 F5 FA FA 
1b241     F8 F8 FA FD 
1b245     FB F8 F2 EB | 	byte	$da, $de, $e4, $eb, $f1, $f5, $fa, $fa, $f8, $f8, $fa, $fd, $fb, $f8, $f2, $eb
1b249     E8 ED F8 FE 
1b24d     04 02 01 02 
1b251     04 00 FE FD 
1b255     FD FD FE 02 | 	byte	$e8, $ed, $f8, $fe, $04, $02, $01, $02, $04, $00, $fe, $fd, $fd, $fd, $fe, $02
1b259     00 FB F7 F1 
1b25d     EA E5 E5 EA 
1b261     F2 FE 08 0D 
1b265     0E 12 1A 21 | 	byte	$00, $fb, $f7, $f1, $ea, $e5, $e5, $ea, $f2, $fe, $08, $0d, $0e, $12, $1a, $21
1b269     1F 1D 17 0E 
1b26d     00 F1 E5 E0 
1b271     DD DA DA E0 
1b275     E7 ED F4 FB | 	byte	$1f, $1d, $17, $0e, $00, $f1, $e5, $e0, $dd, $da, $da, $e0, $e7, $ed, $f4, $fb
1b279     04 12 1B 1F 
1b27d     1F 1E 1D 1D 
1b281     1D 1A 14 0B 
1b285     02 00 FE FE | 	byte	$04, $12, $1b, $1f, $1f, $1e, $1d, $1d, $1d, $1a, $14, $0b, $02, $00, $fe, $fe
1b289     07 0B 08 00 
1b28d     FA F5 EE E8 
1b291     E2 E0 E0 E2 
1b295     EB F5 FB FE | 	byte	$07, $0b, $08, $00, $fa, $f5, $ee, $e8, $e2, $e0, $e0, $e2, $eb, $f5, $fb, $fe
1b299     01 02 02 01 
1b29d     FE FA FA FB 
1b2a1     FD FD FE 0A 
1b2a5     15 1E 22 1D | 	byte	$01, $02, $02, $01, $fe, $fa, $fa, $fb, $fd, $fd, $fe, $0a, $15, $1e, $22, $1d
1b2a9     11 0B 08 05 
1b2ad     07 0B 11 12 
1b2b1     0F 08 00 F7 
1b2b5     EB E2 E0 E1 | 	byte	$11, $0b, $08, $05, $07, $0b, $11, $12, $0f, $08, $00, $f7, $eb, $e2, $e0, $e1
1b2b9     E4 F0 FE 08 
1b2bd     0B 0B 0D 0F 
1b2c1     17 24 2E 32 
1b2c5     2E 1D 0D 05 | 	byte	$e4, $f0, $fe, $08, $0b, $0b, $0d, $0f, $17, $24, $2e, $32, $2e, $1d, $0d, $05
1b2c9     05 01 FB FA 
1b2cd     01 0A 14 1D 
1b2d1     1F 17 05 F4 
1b2d5     E8 E1 DD E0 | 	byte	$05, $01, $fb, $fa, $01, $0a, $14, $1d, $1f, $17, $05, $f4, $e8, $e1, $dd, $e0
1b2d9     E4 EE F8 FE 
1b2dd     0A 11 15 17 
1b2e1     15 0D 08 0B 
1b2e5     0D 0B 08 02 | 	byte	$e4, $ee, $f8, $fe, $0a, $11, $15, $17, $15, $0d, $08, $0b, $0d, $0b, $08, $02
1b2e9     FA EE E4 DD 
1b2ed     D8 D7 DB E4 
1b2f1     E8 F0 F8 FE 
1b2f5     00 04 08 0B | 	byte	$fa, $ee, $e4, $dd, $d8, $d7, $db, $e4, $e8, $f0, $f8, $fe, $00, $04, $08, $0b
1b2f9     0B 0B 0B 0B 
1b2fd     0B 0B       | 	byte	$0b[6]
1b2ff     0F 17 1D 1F 
1b303     1B 11 08 07 
1b307     07 05 05 05 
1b30b     07 05 01 FB | 	byte	$0f, $17, $1d, $1f, $1b, $11, $08, $07, $07, $05, $05, $05, $07, $05, $01, $fb
1b30f     F7 F7 F4 F2 
1b313     F4 FB 04 0D 
1b317     11 14 14 14 
1b31b     18 1F 24 27 | 	byte	$f7, $f7, $f4, $f2, $f4, $fb, $04, $0d, $11, $14, $14, $14, $18, $1f, $24, $27
1b31f     2A 2A 25 1A 
1b323     0B 00 F4 EB 
1b327     E4 E5 EE F7 
1b32b     FA F5 F0 E8 | 	byte	$2a, $2a, $25, $1a, $0b, $00, $f4, $eb, $e4, $e5, $ee, $f7, $fa, $f5, $f0, $e8
1b32f     E5 E5 E7 E8 
1b333     F0 F8 FE 01 
1b337     01 FB F4 E8 
1b33b     E0 DB E1 F2 | 	byte	$e5, $e5, $e7, $e8, $f0, $f8, $fe, $01, $01, $fb, $f4, $e8, $e0, $db, $e1, $f2
1b33f     FE 04 02 FB 
1b343     F4 F1 EE F2 
1b347     FE 0A 14 11 
1b34b     0B 05 04 07 | 	byte	$fe, $04, $02, $fb, $f4, $f1, $ee, $f2, $fe, $0a, $14, $11, $0b, $05, $04, $07
1b34f     0F 18 21 2A 
1b353     2F 34 34 2F 
1b357     2E 25 1D 11 
1b35b     05 FD F7 F0 | 	byte	$0f, $18, $21, $2a, $2f, $34, $34, $2f, $2e, $25, $1d, $11, $05, $fd, $f7, $f0
1b35f     E8 E0 D8 D1 
1b363     CA C5 C5 CA 
1b367     D5 E1 ED F5 
1b36b     FE 07 0D 0F | 	byte	$e8, $e0, $d8, $d1, $ca, $c5, $c5, $ca, $d5, $e1, $ed, $f5, $fe, $07, $0d, $0f
1b36f     12 18 1E 21 
1b373     24 25 22 1A 
1b377     0B 00 F7 F4 
1b37b     F8 FE 00 FD | 	byte	$12, $18, $1e, $21, $24, $25, $22, $1a, $0b, $00, $f7, $f4, $f8, $fe, $00, $fd
1b37f     F7 FB 04 0B 
1b383     0E 11 17 1D 
1b387     1F 1F 1A 11 
1b38b     05 FB F4 F4 | 	byte	$f7, $fb, $04, $0b, $0e, $11, $17, $1d, $1f, $1f, $1a, $11, $05, $fb, $f4, $f4
1b38f     FB 04 0B 0D 
1b393     0A 02 FD F4 
1b397     F1 F1 F8 04 
1b39b     08 0A 05 02 | 	byte	$fb, $04, $0b, $0d, $0a, $02, $fd, $f4, $f1, $f1, $f8, $04, $08, $0a, $05, $02
1b39f     FB F1 E8 E0 
1b3a3     D5 C8 C0 BD 
1b3a7     C2 CD D8 E7 
1b3ab     F8 07 0F 0E | 	byte	$fb, $f1, $e8, $e0, $d5, $c8, $c0, $bd, $c2, $cd, $d8, $e7, $f8, $07, $0f, $0e
1b3af     07 FB F1 ED 
1b3b3     F0 FA 05 0B 
1b3b7     0B 0B 0B 0E 
1b3bb     12 15 17 1B | 	byte	$07, $fb, $f1, $ed, $f0, $fa, $05, $0b, $0b, $0b, $0b, $0e, $12, $15, $17, $1b
1b3bf     1F 25 2A 2D 
1b3c3     2B 2A 24 17 
1b3c7     0B F7 E8 DA 
1b3cb     D1 D1 D5 DA | 	byte	$1f, $25, $2a, $2d, $2b, $2a, $24, $17, $0b, $f7, $e8, $da, $d1, $d1, $d5, $da
1b3cf     E1 E5 E2 DE 
1b3d3     DE E4 F0 F8 
1b3d7     05 0F 15 17 
1b3db     14 0E 08 05 | 	byte	$e1, $e5, $e2, $de, $de, $e4, $f0, $f8, $05, $0f, $15, $17, $14, $0e, $08, $05
1b3df     04 0A 0F 11 
1b3e3     0E 0F 18 21 
1b3e7     2A 32 38 3A 
1b3eb     37 2E 1F 0E | 	byte	$04, $0a, $0f, $11, $0e, $0f, $18, $21, $2a, $32, $38, $3a, $37, $2e, $1f, $0e
1b3ef     00 F4 F2 FA 
1b3f3     07 11 1A 1F 
1b3f7     1E 17 0D 05 
1b3fb     00 FA F4 EB | 	byte	$00, $f4, $f2, $fa, $07, $11, $1a, $1f, $1e, $17, $0d, $05, $00, $fa, $f4, $eb
1b3ff     E4 E0 E1 E5 
1b403     E7 E8 ED F1 
1b407     F8 FE 0A 0E 
1b40b     0E 0F 12 17 | 	byte	$e4, $e0, $e1, $e5, $e7, $e8, $ed, $f1, $f8, $fe, $0a, $0e, $0e, $0f, $12, $17
1b40f     1D 21 27 28 
1b413     27 22 1E 14 
1b417     05 F4 E8 DE 
1b41b     D8 D4 D5 DE | 	byte	$1d, $21, $27, $28, $27, $22, $1e, $14, $05, $f4, $e8, $de, $d8, $d4, $d5, $de
1b41f     EB F5 FE 00 
1b423     00 FA F4 ED 
1b427     E5 E0 E1 E7 
1b42b     ED F7 FE 07 | 	byte	$eb, $f5, $fe, $00, $00, $fa, $f4, $ed, $e5, $e0, $e1, $e7, $ed, $f7, $fe, $07
1b42f     0D 0E 0B 08 
1b433     05 05 02 02 
1b437     04 08 11 1F 
1b43b     2A 32 35 34 | 	byte	$0d, $0e, $0b, $08, $05, $05, $02, $02, $04, $08, $11, $1f, $2a, $32, $35, $34
1b43f     2E 28 25 24 
1b443     22 1D 17 0E 
1b447     02 F7 EB E2 
1b44b     DE DE E1 E4 | 	byte	$2e, $28, $25, $24, $22, $1d, $17, $0e, $02, $f7, $eb, $e2, $de, $de, $e1, $e4
1b44f     E7 F2 FE 04 
1b453     05 01 FA EE 
1b457     E2 DA D4 D4 
1b45b     D7 E1 F2 FE | 	byte	$e7, $f2, $fe, $04, $05, $01, $fa, $ee, $e2, $da, $d4, $d4, $d7, $e1, $f2, $fe
1b45f     12 1B 1D 1A 
1b463     14 11 12 17 
1b467     1D 22 22 1E 
1b46b     17 0D 07 05 | 	byte	$12, $1b, $1d, $1a, $14, $11, $12, $17, $1d, $22, $22, $1e, $17, $0d, $07, $05
1b46f     08 0B 0B 05 
1b473     FD FA F7 F4 
1b477     F0 EB E8 E2 
1b47b     DD DD DE DE | 	byte	$08, $0b, $0b, $05, $fd, $fa, $f7, $f4, $f0, $eb, $e8, $e2, $dd, $dd, $de, $de
1b47f     DE E1 EB F7 
1b483     FE 01 FE FA 
1b487     FD 07 14 21 
1b48b     2D 32 38 38 | 	byte	$de, $e1, $eb, $f7, $fe, $01, $fe, $fa, $fd, $07, $14, $21, $2d, $32, $38, $38
1b48f     34 2E 24 1A 
1b493     14 0E 07 02 
1b497     04 07 0B 0D 
1b49b     08 00 F7 E8 | 	byte	$34, $2e, $24, $1a, $14, $0e, $07, $02, $04, $07, $0b, $0d, $08, $00, $f7, $e8
1b49f     DD D2 CD CD 
1b4a3     D0 D5 E4 F5 
1b4a7     04 12 1B 1D 
1b4ab     17 07 FB F7 | 	byte	$dd, $d2, $cd, $cd, $d0, $d5, $e4, $f5, $04, $12, $1b, $1d, $17, $07, $fb, $f7
1b4af     F8 FE 01 01 
1b4b3     FE F8 EE E2 
1b4b7     D7 D2 D5 E0 
1b4bb     EA F2 FD 08 | 	byte	$f8, $fe, $01, $01, $fe, $f8, $ee, $e2, $d7, $d2, $d5, $e0, $ea, $f2, $fd, $08
1b4bf     12 17 18 17 
1b4c3     17 12 11 0D 
1b4c7     08 00 F7 EB 
1b4cb     E0 D2 C8 C1 | 	byte	$12, $17, $18, $17, $17, $12, $11, $0d, $08, $00, $f7, $eb, $e0, $d2, $c8, $c1
1b4cf     C1 C4 CD D5 
1b4d3     DD E4 E7 E8 
1b4d7     E8 E8 E8 EB 
1b4db     F2 FE 0B 1A | 	byte	$c1, $c4, $cd, $d5, $dd, $e4, $e7, $e8, $e8, $e8, $e8, $eb, $f2, $fe, $0b, $1a
1b4df     24 2A 31 3E 
1b4e3     4A 4F 4D 45 
1b4e7     3D 31 28 24 
1b4eb     22 1F 18 11 | 	byte	$24, $2a, $31, $3e, $4a, $4f, $4d, $45, $3d, $31, $28, $24, $22, $1f, $18, $11
1b4ef     05 FD F1 E8 
1b4f3     DD D4 D1 D1 
1b4f7     D1 D7 E1 ED 
1b4fb     F8 04 0D 15 | 	byte	$05, $fd, $f1, $e8, $dd, $d4, $d1, $d1, $d1, $d7, $e1, $ed, $f8, $04, $0d, $15
1b4ff     1F 27 2A 25 
1b503     1E 14 0B 05 
1b507     05 02 02 04 
1b50b     08 0F 17 1A | 	byte	$1f, $27, $2a, $25, $1e, $14, $0b, $05, $05, $02, $02, $04, $08, $0f, $17, $1a
1b50f     14 07 FA EB 
1b513     E2 DD DA D8 
1b517     DB E1 ED F8 
1b51b     08 18 2A 38 | 	byte	$14, $07, $fa, $eb, $e2, $dd, $da, $d8, $db, $e1, $ed, $f8, $08, $18, $2a, $38
1b51f     41 42 3F 3F 
1b523     41 41 3D 35 
1b527     2F 28 22 1D 
1b52b     11 00 EE E0 | 	byte	$41, $42, $3f, $3f, $41, $41, $3d, $35, $2f, $28, $22, $1d, $11, $00, $ee, $e0
1b52f     D5 D2 D8 E1 
1b533     E7 E8 E4 DD 
1b537     D1 C8 C5 C7 
1b53b     CD D2 DB E4 | 	byte	$d5, $d2, $d8, $e1, $e7, $e8, $e4, $dd, $d1, $c8, $c5, $c7, $cd, $d2, $db, $e4
1b53f     F2 FE 12 21 
1b543     2A 2E 2E 25 
1b547     18 0B FD F4 
1b54b     F4 FA 02 08 | 	byte	$f2, $fe, $12, $21, $2a, $2e, $2e, $25, $18, $0b, $fd, $f4, $f4, $fa, $02, $08
1b54f     0B 0F 12 18 
1b553     1D 21 22 24 
1b557     25 22 1E 1B 
1b55b     17 12 0B 02 | 	byte	$0b, $0f, $12, $18, $1d, $21, $22, $24, $25, $22, $1e, $1b, $17, $12, $0b, $02
1b55f     FD FD 04 0D 
1b563     11 12 11 0B 
1b567     05 FD F4 F0 
1b56b     F0 F1 EE E4 | 	byte	$fd, $fd, $04, $0d, $11, $12, $11, $0b, $05, $fd, $f4, $f0, $f0, $f1, $ee, $e4
1b56f     D7 CA C1 BE 
1b573     C0 C4 CD D5 
1b577     DE E4 ED F5 
1b57b     FE 07 0F 18 | 	byte	$d7, $ca, $c1, $be, $c0, $c4, $cd, $d5, $de, $e4, $ed, $f5, $fe, $07, $0f, $18
1b57f     21 2B 32 34 
1b583     2F 2A 25 27 
1b587     25 24 1F 18 
1b58b     11 07 00 F4 | 	byte	$21, $2b, $32, $34, $2f, $2a, $25, $27, $25, $24, $1f, $18, $11, $07, $00, $f4
1b58f     E8 DD D7 DA 
1b593     E1 EA F5 FD 
1b597     FD FA F8 FA 
1b59b     FD 02 0D 0E | 	byte	$e8, $dd, $d7, $da, $e1, $ea, $f5, $fd, $fd, $fa, $f8, $fa, $fd, $02, $0d, $0e
1b59f     0B 02 FD FA 
1b5a3     FB FD FB F8 
1b5a7     F5 F7 FD 02 
1b5ab     0A 11 1B 21 | 	byte	$0b, $02, $fd, $fa, $fb, $fd, $fb, $f8, $f5, $f7, $fd, $02, $0a, $11, $1b, $21
1b5af     1D 17 0D 05 
1b5b3     00 FE 08 11 
1b5b7     15 1A 1B 18 
1b5bb     12 0B 07 01 | 	byte	$1d, $17, $0d, $05, $00, $fe, $08, $11, $15, $1a, $1b, $18, $12, $0b, $07, $01
1b5bf     FD FA F7 F1 
1b5c3     ED ED EB E4 
1b5c7     DD D7 D5 D4 
1b5cb     D8 E0 E2 E1 | 	byte	$fd, $fa, $f7, $f1, $ed, $ed, $eb, $e4, $dd, $d7, $d5, $d4, $d8, $e0, $e2, $e1
1b5cf     E0 E2 E7 EB 
1b5d3     ED EB EA ED 
1b5d7     F1 F8 04 11 
1b5db     17 11 0B 0A | 	byte	$e0, $e2, $e7, $eb, $ed, $eb, $ea, $ed, $f1, $f8, $04, $11, $17, $11, $0b, $0a
1b5df     0F 1A 25 25 
1b5e3     1F 1B 1D 1E 
1b5e7     1E 18 0E 05 
1b5eb     04 05 05 00 | 	byte	$0f, $1a, $25, $25, $1f, $1b, $1d, $1e, $1e, $18, $0e, $05, $04, $05, $05, $00
1b5ef     FA F4 F4 FD 
1b5f3     0A 1B 2A 2E 
1b5f7     28 1F 17 11 
1b5fb     0E 14 1A 1D | 	byte	$fa, $f4, $f4, $fd, $0a, $1b, $2a, $2e, $28, $1f, $17, $11, $0e, $14, $1a, $1d
1b5ff     1D 17 0E 05 
1b603     FA EE EA EB 
1b607     F2 F7 F5 F0 
1b60b     E8 E4 E0 DD | 	byte	$1d, $17, $0e, $05, $fa, $ee, $ea, $eb, $f2, $f7, $f5, $f0, $e8, $e4, $e0, $dd
1b60f     DA D5 DA E4 
1b613     F0 F8 FE 00 
1b617     02 00 01 01 
1b61b     01 02 05 0B | 	byte	$da, $d5, $da, $e4, $f0, $f8, $fe, $00, $02, $00, $01, $01, $01, $02, $05, $0b
1b61f     0E 11 0E 07 
1b623     01 FB F4 EB 
1b627     E0 DA D4 D2 
1b62b     CE CB CE D5 | 	byte	$0e, $11, $0e, $07, $01, $fb, $f4, $eb, $e0, $da, $d4, $d2, $ce, $cb, $ce, $d5
1b62f     E0 E5 ED F8 
1b633     04 0A 0F 15 
1b637     1D 24 28 2D 
1b63b     2F 35 38 34 | 	byte	$e0, $e5, $ed, $f8, $04, $0a, $0f, $15, $1d, $24, $28, $2d, $2f, $35, $38, $34
1b63f     28 1D 11 0B 
1b643     05 02 05 07 
1b647     05 05 05 02 
1b64b     02 05 05 02 | 	byte	$28, $1d, $11, $0b, $05, $02, $05, $07, $05, $05, $05, $02, $02, $05, $05, $02
1b64f     FD F7 F1 ED 
1b653     EE FB 0A 15 
1b657     25 31 3A 3F 
1b65b     44 3F 35 22 | 	byte	$fd, $f7, $f1, $ed, $ee, $fb, $0a, $15, $25, $31, $3a, $3f, $44, $3f, $35, $22
1b65f     11 05 01 00 
1b663     FE FD FE FB 
1b667     FB FA F4 F0 
1b66b     F1 FA FE FD | 	byte	$11, $05, $01, $00, $fe, $fd, $fe, $fb, $fb, $fa, $f4, $f0, $f1, $fa, $fe, $fd
1b66f     FA F4 F0 F1 
1b673     F1 EE F0 F1 
1b677     F0 F2 F1 ED 
1b67b     EA E8 EB ED | 	byte	$fa, $f4, $f0, $f1, $f1, $ee, $f0, $f1, $f0, $f2, $f1, $ed, $ea, $e8, $eb, $ed
1b67f     F0 F2 F7 FA 
1b683     FD FE 04 0B 
1b687     12 18 1A 17 
1b68b     14 11 0B 04 | 	byte	$f0, $f2, $f7, $fa, $fd, $fe, $04, $0b, $12, $18, $1a, $17, $14, $11, $0b, $04
1b68f     FB F5 F1 EE 
1b693     ED EA E8 EA 
1b697     EE F2 F4 FB 
1b69b     04 0F 15 1B | 	byte	$fb, $f5, $f1, $ee, $ed, $ea, $e8, $ea, $ee, $f2, $f4, $fb, $04, $0f, $15, $1b
1b69f     1A 15 11 11 
1b6a3     11 12 11 0B 
1b6a7     02 01 FD F7 
1b6ab     F1 F2 F5 F5 | 	byte	$1a, $15, $11, $11, $11, $12, $11, $0b, $02, $01, $fd, $f7, $f1, $f2, $f5, $f5
1b6af     F7 F8 F8 FB 
1b6b3     01 0A 12 1B 
1b6b7     21 22 1F 17 
1b6bb     11 12 18 1D | 	byte	$f7, $f8, $f8, $fb, $01, $0a, $12, $1b, $21, $22, $1f, $17, $11, $12, $18, $1d
1b6bf     21 22 1E 17 
1b6c3     0B FA EB E5 
1b6c7     E7 EB F2 F8 
1b6cb     F8 F1 EA E8 | 	byte	$21, $22, $1e, $17, $0b, $fa, $eb, $e5, $e7, $eb, $f2, $f8, $f8, $f1, $ea, $e8
1b6cf     E5 E0 E0 E4 
1b6d3     ED F2 F2 F7 
1b6d7     FB FE 05 15 
1b6db     1F 22 1D 11 | 	byte	$e5, $e0, $e0, $e4, $ed, $f2, $f2, $f7, $fb, $fe, $05, $15, $1f, $22, $1d, $11
1b6df     0B 0F 11 14 
1b6e3     18 18 17 0E 
1b6e7     00 F7 F2 FB 
1b6eb     FE F7 F1 F0 | 	byte	$0b, $0f, $11, $14, $18, $18, $17, $0e, $00, $f7, $f2, $fb, $fe, $f7, $f1, $f0
1b6ef     EB E2 DD DD 
1b6f3     E1 EB F2 F4 
1b6f7     F2 EE EE F8 
1b6fb     07 15 21 24 | 	byte	$eb, $e2, $dd, $dd, $e1, $eb, $f2, $f4, $f2, $ee, $ee, $f8, $07, $15, $21, $24
1b6ff     1D 18 1E 22 
1b703     22 1D 17 0E 
1b707     07 01 FA EE 
1b70b     E0 D4 CA C5 | 	byte	$1d, $18, $1e, $22, $22, $1d, $17, $0e, $07, $01, $fa, $ee, $e0, $d4, $ca, $c5
1b70f     CD D8 E1 E4 
1b713     E7 ED F2 FB 
1b717     02 0A 15 24 
1b71b     2B 28 1F 1D | 	byte	$cd, $d8, $e1, $e4, $e7, $ed, $f2, $fb, $02, $0a, $15, $24, $2b, $28, $1f, $1d
1b71f     1A 12 0B 05 
1b723     04 07 0B 0D 
1b727     0D 0F 0D 05 
1b72b     01 FD FA FA | 	byte	$1a, $12, $0b, $05, $04, $07, $0b, $0d, $0d, $0f, $0d, $05, $01, $fd, $fa, $fa
1b72f     F8 FA FE FE 
1b733     01 08 12 1B 
1b737     1F 21 1E 18 
1b73b     14 14 17 17 | 	byte	$f8, $fa, $fe, $fe, $01, $08, $12, $1b, $1f, $21, $1e, $18, $14, $14, $17, $17
1b73f     14 0B 04 FB 
1b743     F1 E4 D7 D1 
1b747     D2 DB E4 E5 
1b74b     E0 DE E1 E5 | 	byte	$14, $0b, $04, $fb, $f1, $e4, $d7, $d1, $d2, $db, $e4, $e5, $e0, $de, $e1, $e5
1b74f     F0 FE 0F 21 
1b753     2D 31 28 1A 
1b757     08 FA F5 F5 
1b75b     F5 EE ED F1 | 	byte	$f0, $fe, $0f, $21, $2d, $31, $28, $1a, $08, $fa, $f5, $f5, $f5, $ee, $ed, $f1
1b75f     F8 FD 04 07 
1b763     00 F7 F1 EE 
1b767     EA EB F2 FE 
1b76b     07 0A 08 08 | 	byte	$f8, $fd, $04, $07, $00, $f7, $f1, $ee, $ea, $eb, $f2, $fe, $07, $0a, $08, $08
1b76f     05 00 FE FE 
1b773     FD FB FA F4 
1b777     EA E4 E0 E1 
1b77b     E7 F2 FE 02 | 	byte	$05, $00, $fe, $fe, $fd, $fb, $fa, $f4, $ea, $e4, $e0, $e1, $e7, $f2, $fe, $02
1b77f     08 0A 0E 1A 
1b783     1F 1E 18 11 
1b787     0E 05 FE FE 
1b78b     08 0E 0D 08 | 	byte	$08, $0a, $0e, $1a, $1f, $1e, $18, $11, $0e, $05, $fe, $fe, $08, $0e, $0d, $08
1b78f     08 0E 12 1A 
1b793     27 35 3B 3A 
1b797     34 28 17 00 
1b79b     F1 ED F4 F5 | 	byte	$08, $0e, $12, $1a, $27, $35, $3b, $3a, $34, $28, $17, $00, $f1, $ed, $f4, $f5
1b79f     F7 F7 F4 EE 
1b7a3     EB EB F2 F7 
1b7a7     F8 F8 FA FE 
1b7ab     FD FA F8 FD | 	byte	$f7, $f7, $f4, $ee, $eb, $eb, $f2, $f7, $f8, $f8, $fa, $fe, $fd, $fa, $f8, $fd
1b7af     02 05 0E 15 
1b7b3     1A 1E 1E 1D 
1b7b7     18 11 11 14 
1b7bb     18 1F 27 2B | 	byte	$02, $05, $0e, $15, $1a, $1e, $1e, $1d, $18, $11, $11, $14, $18, $1f, $27, $2b
1b7bf     2E 2E 25 17 
1b7c3     05 EE D7 CA 
1b7c7     C7 C7 C7 CA 
1b7cb     D0 DB EA F4 | 	byte	$2e, $2e, $25, $17, $05, $ee, $d7, $ca, $c7, $c7, $c7, $ca, $d0, $db, $ea, $f4
1b7cf     F5 F5 F7 F8 
1b7d3     FE 08 0B 04 
1b7d7     FB F4 F5 FA 
1b7db     FE 04 0B 14 | 	byte	$f5, $f5, $f7, $f8, $fe, $08, $0b, $04, $fb, $f4, $f5, $fa, $fe, $04, $0b, $14
1b7df     18 12 08 02 
1b7e3     01 01 02 04 
1b7e7     05 02 FD FB 
1b7eb     04 0D 15 14 | 	byte	$18, $12, $08, $02, $01, $01, $02, $04, $05, $02, $fd, $fb, $04, $0d, $15, $14
1b7ef     0E 0A 02 F4 
1b7f3     DD D1 C2 C0 
1b7f7     C4 CE D8 E7 
1b7fb     F2 FE 0B 0E | 	byte	$0e, $0a, $02, $f4, $dd, $d1, $c2, $c0, $c4, $ce, $d8, $e7, $f2, $fe, $0b, $0e
1b7ff     11 15 21 28 
1b803     25 21 1D 22 
1b807     28 28 2E 34 
1b80b     34 2F 22 18 | 	byte	$11, $15, $21, $28, $25, $21, $1d, $22, $28, $28, $2e, $34, $34, $2f, $22, $18
1b80f     0E 07 00 F7 
1b813     F4 F8 FD FB 
1b817     F7 F7 FD 04 
1b81b     11 18 1A 17 | 	byte	$0e, $07, $00, $f7, $f4, $f8, $fd, $fb, $f7, $f7, $fd, $04, $11, $18, $1a, $17
1b81f     0B 00 F4 E5 
1b823     D4 CD D0 DE 
1b827     EA EE ED EE 
1b82b     F4 F8 F8 F5 | 	byte	$0b, $00, $f4, $e5, $d4, $cd, $d0, $de, $ea, $ee, $ed, $ee, $f4, $f8, $f8, $f5
1b82f     EE EA E5 E0 
1b833     DD DB DE E5 
1b837     EE F8 FD FA 
1b83b     F0 E0 D2 D0 | 	byte	$ee, $ea, $e5, $e0, $dd, $db, $de, $e5, $ee, $f8, $fd, $fa, $f0, $e0, $d2, $d0
1b83f     D5 DD E2 EB 
1b843     F8 FE 0D 11 
1b847     11 0E 0E 08 
1b84b     02 01 00 FE | 	byte	$d5, $dd, $e2, $eb, $f8, $fe, $0d, $11, $11, $0e, $0e, $08, $02, $01, $00, $fe
1b84f     02 0B 0E 0D 
1b853     0D 11 1B 21 
1b857     27 2D 35 41 
1b85b     3F 31 22 17 | 	byte	$02, $0b, $0e, $0d, $0d, $11, $1b, $21, $27, $2d, $35, $41, $3f, $31, $22, $17
1b85f     15 11 0E 0E 
1b863     18 1F 1F 1A 
1b867     14 12 15 1D 
1b86b     1F 1D 17 0F | 	byte	$15, $11, $0e, $0e, $18, $1f, $1f, $1a, $14, $12, $15, $1d, $1f, $1d, $17, $0f
1b86f     05 FA ED EB 
1b873     F2 FE 0B 15 
1b877     14 11 0B 00 
1b87b     F5 F4 F4 F4 | 	byte	$05, $fa, $ed, $eb, $f2, $fe, $0b, $15, $14, $11, $0b, $00, $f5, $f4, $f4, $f4
1b87f     F5 F1 EB ED 
1b883     F5 FE 05 05 
1b887     00 F7 F1 EB 
1b88b     E7 E7 F0 FD | 	byte	$f5, $f1, $eb, $ed, $f5, $fe, $05, $05, $00, $f7, $f1, $eb, $e7, $e7, $f0, $fd
1b88f     04 0E 14 14 
1b893     17 1A 14 0B 
1b897     07 04 05 0D 
1b89b     0E 08 02 00 | 	byte	$04, $0e, $14, $14, $17, $1a, $14, $0b, $07, $04, $05, $0d, $0e, $08, $02, $00
1b89f     FD F4 E8 E4 
1b8a3     E0 E0 EA F2 
1b8a7     F8 FB FD FA 
1b8ab     F4 F0 EE F5 | 	byte	$fd, $f4, $e8, $e4, $e0, $e0, $ea, $f2, $f8, $fb, $fd, $fa, $f4, $f0, $ee, $f5
1b8af     FD 05 0E 0E 
1b8b3     08 00 F7 F8 
1b8b7     FE 08 11 15 
1b8bb     17 0E 00 F4 | 	byte	$fd, $05, $0e, $0e, $08, $00, $f7, $f8, $fe, $08, $11, $15, $17, $0e, $00, $f4
1b8bf     EB EA ED F5 
1b8c3     FD 02 08 0A 
1b8c7     0B 0A 08 0B 
1b8cb     0F 0E 0B 08 | 	byte	$eb, $ea, $ed, $f5, $fd, $02, $08, $0a, $0b, $0a, $08, $0b, $0f, $0e, $0b, $08
1b8cf     07 04 01 02 
1b8d3     0A 15 1A 1A 
1b8d7     1B 1A 14 0E 
1b8db     0E 15 1E 1D | 	byte	$07, $04, $01, $02, $0a, $15, $1a, $1a, $1b, $1a, $14, $0e, $0e, $15, $1e, $1d
1b8df     18 11 05 FA 
1b8e3     F8 FD FE FD 
1b8e7     FA F7 F7 F7 
1b8eb     F5 F4 F0 EB | 	byte	$18, $11, $05, $fa, $f8, $fd, $fe, $fd, $fa, $f7, $f7, $f7, $f5, $f4, $f0, $eb
1b8ef     E5 E0 DD E1 
1b8f3     ED FE 15 27 
1b8f7     2F 35 34 2F 
1b8fb     24 18 14 0B | 	byte	$e5, $e0, $dd, $e1, $ed, $fe, $15, $27, $2f, $35, $34, $2f, $24, $18, $14, $0b
1b8ff     02 F8 F1 EB 
1b903     EB E5 DD D7 
1b907     D2 CD C8 CB 
1b90b     D8 E7 F7 FE | 	byte	$02, $f8, $f1, $eb, $eb, $e5, $dd, $d7, $d2, $cd, $c8, $cb, $d8, $e7, $f7, $fe
1b90f     07 0B 0E 0F 
1b913     11 0E 02 F1 
1b917     E2 DA D8 DE 
1b91b     E2 E2 E4 E7 | 	byte	$07, $0b, $0e, $0f, $11, $0e, $02, $f1, $e2, $da, $d8, $de, $e2, $e2, $e4, $e7
1b91f     ED EE F0 ED 
1b923     EA E5 E0 DA 
1b927     D7 D7 DB E4 
1b92b     E5 E7 EA F0 | 	byte	$ed, $ee, $f0, $ed, $ea, $e5, $e0, $da, $d7, $d7, $db, $e4, $e5, $e7, $ea, $f0
1b92f     F8 05 15 21 
1b933     25 27 27 22 
1b937     1F 1F 22 2A 
1b93b     2F 32 34 31 | 	byte	$f8, $05, $15, $21, $25, $27, $27, $22, $1f, $1f, $22, $2a, $2f, $32, $34, $31
1b93f     25 17 08 01 
1b943     02 08 0F 14 
1b947     11 0D 0B 0A 
1b94b     0D 11 1A 1F | 	byte	$25, $17, $08, $01, $02, $08, $0f, $14, $11, $0d, $0b, $0a, $0d, $11, $1a, $1f
1b94f     1E 1F 22 1D 
1b953     17 1A 24 28 
1b957     25 17 08 F7 
1b95b     EE EA E2 D4 | 	byte	$1e, $1f, $22, $1d, $17, $1a, $24, $28, $25, $17, $08, $f7, $ee, $ea, $e2, $d4
1b95f     CE CE D4 D8 
1b963     D8 DB DD E1 
1b967     E7 F2 F8 FA 
1b96b     FB FE 0A 15 | 	byte	$ce, $ce, $d4, $d8, $d8, $db, $dd, $e1, $e7, $f2, $f8, $fa, $fb, $fe, $0a, $15
1b96f     1A 1A 17 11 
1b973     0E 08 05 02 
1b977     05 00 FD FB 
1b97b     FB FB FB FA | 	byte	$1a, $1a, $17, $11, $0e, $08, $05, $02, $05, $00, $fd, $fb, $fb, $fb, $fb, $fa
1b97f     FB FB FE 07 
1b983     14 1E 24 27 
1b987     28 24 1F 1A 
1b98b     17 15 14 14 | 	byte	$fb, $fb, $fe, $07, $14, $1e, $24, $27, $28, $24, $1f, $1a, $17, $15, $14, $14
1b98f     11 0B 00 F4 
1b993     EB E8 E2 DD 
1b997     D7 D8 DA D8 
1b99b     D5 D1 D0 D0 | 	byte	$11, $0b, $00, $f4, $eb, $e8, $e2, $dd, $d7, $d8, $da, $d8, $d5, $d1, $d0, $d0
1b99f     D8 E4 F2 FE 
1b9a3     12 21 28 2F 
1b9a7     3B 3F 3D 34 
1b9ab     22 14 08 04 | 	byte	$d8, $e4, $f2, $fe, $12, $21, $28, $2f, $3b, $3f, $3d, $34, $22, $14, $08, $04
1b9af     04 0A 14 21 
1b9b3     2D 38 3A 31 
1b9b7     22 1A 18 18 
1b9bb     1A 1E 1F 1D | 	byte	$04, $0a, $14, $21, $2d, $38, $3a, $31, $22, $1a, $18, $18, $1a, $1e, $1f, $1d
1b9bf     1A 11 05 F1 
1b9c3     DD CD C2 BD 
1b9c7     C2 D0 E1 ED 
1b9cb     F7 FE 0B 0B | 	byte	$1a, $11, $05, $f1, $dd, $cd, $c2, $bd, $c2, $d0, $e1, $ed, $f7, $fe, $0b, $0b
1b9cf     02 F7 EB E0 
1b9d3     D1 C8 C2 C1 
1b9d7     C0 C2 CD DB 
1b9db     EE FE 0A 1B | 	byte	$02, $f7, $eb, $e0, $d1, $c8, $c2, $c1, $c0, $c2, $cd, $db, $ee, $fe, $0a, $1b
1b9df     28 2F 2F 32 
1b9e3     34 37 34 2F 
1b9e7     25 1A 12 0D 
1b9eb     0B 0F 15 17 | 	byte	$28, $2f, $2f, $32, $34, $37, $34, $2f, $25, $1a, $12, $0d, $0b, $0f, $15, $17
1b9ef     14 0B 02 F7 
1b9f3     E8 DA D1 CA 
1b9f7     C8 D0 DB ED 
1b9fb     FB 0A 15 1D | 	byte	$14, $0b, $02, $f7, $e8, $da, $d1, $ca, $c8, $d0, $db, $ed, $fb, $0a, $15, $1d
1b9ff     1F 1A 0E 00 
1ba03     EE E2 E1 E4 
1ba07     E7 ED F8 02 
1ba0b     02 05 0A 0E | 	byte	$1f, $1a, $0e, $00, $ee, $e2, $e1, $e4, $e7, $ed, $f8, $02, $02, $05, $0a, $0e
1ba0f     11 0E 0D 0B 
1ba13     0D 0F 15 1E 
1ba17     1D 14 12 11 
1ba1b     0B 02 FD FE | 	byte	$11, $0e, $0d, $0b, $0d, $0f, $15, $1e, $1d, $14, $12, $11, $0b, $02, $fd, $fe
1ba1f     0D 1A 21 1E 
1ba23     18 12 0B 05 
1ba27     00 F4 EE EB 
1ba2b     E8 EA ED EE | 	byte	$0d, $1a, $21, $1e, $18, $12, $0b, $05, $00, $f4, $ee, $eb, $e8, $ea, $ed, $ee
1ba2f     F0 F1 F1 EE 
1ba33     EB EB ED F2 
1ba37     F4 F5 F5 F8 
1ba3b     FE 02 05 02 | 	byte	$f0, $f1, $f1, $ee, $eb, $eb, $ed, $f2, $f4, $f5, $f5, $f8, $fe, $02, $05, $02
1ba3f     01 FD FA F5 
1ba43     F2 F0 F0 F2 
1ba47     F5 F8 FD FE 
1ba4b     FB F4 F1 EB | 	byte	$01, $fd, $fa, $f5, $f2, $f0, $f0, $f2, $f5, $f8, $fd, $fe, $fb, $f4, $f1, $eb
1ba4f     E4 E1 E7 F2 
1ba53     FE 0A 0B 05 
1ba57     05 08 0A 14 
1ba5b     1E 22 22 1A | 	byte	$e4, $e1, $e7, $f2, $fe, $0a, $0b, $05, $05, $08, $0a, $14, $1e, $22, $22, $1a
1ba5f     11 05 FB F7 
1ba63     F7 F5 F4 F4 
1ba67     F4 ED E8 E8 
1ba6b     EA F0 FA 04 | 	byte	$11, $05, $fb, $f7, $f7, $f5, $f4, $f4, $f4, $ed, $e8, $e8, $ea, $f0, $fa, $04
1ba6f     0F 18 1D 1D 
1ba73     1A 1A 21 2A 
1ba77     2F 2F 2B 25 
1ba7b     22 1D 11 02 | 	byte	$0f, $18, $1d, $1d, $1a, $1a, $21, $2a, $2f, $2f, $2b, $25, $22, $1d, $11, $02
1ba7f     F7 EB E2 DD 
1ba83     DE E1 E5 EB 
1ba87     F1 F8 FE 04 
1ba8b     0B 0E 0B 0E | 	byte	$f7, $eb, $e2, $dd, $de, $e1, $e5, $eb, $f1, $f8, $fe, $04, $0b, $0e, $0b, $0e
1ba8f     0F 0E 0F 0D 
1ba93     05 FD F7 F7 
1ba97     F7 F8 F8 FE 
1ba9b     0A 15 18 18 | 	byte	$0f, $0e, $0f, $0d, $05, $fd, $f7, $f7, $f7, $f8, $f8, $fe, $0a, $15, $18, $18
1ba9f     1A 1E 22 22 
1baa3     1D 11 02 F7 
1baa7     E8 DA D1 D4 
1baab     DD E7 F5 FE | 	byte	$1a, $1e, $22, $22, $1d, $11, $02, $f7, $e8, $da, $d1, $d4, $dd, $e7, $f5, $fe
1baaf     FD F8 F1 E8 
1bab3     E2 DE E0 E5 
1bab7     EE F8 FE 0A 
1babb     18 27 2F 31 | 	byte	$fd, $f8, $f1, $e8, $e2, $de, $e0, $e5, $ee, $f8, $fe, $0a, $18, $27, $2f, $31
1babf     31 2E 2B 22 
1bac3     17 0B 00 F1 
1bac7     E5 DE DE E7 
1bacb     F2 FE 0A 14 | 	byte	$31, $2e, $2b, $22, $17, $0b, $00, $f1, $e5, $de, $de, $e7, $f2, $fe, $0a, $14
1bacf     14 0E 0E 0F 
1bad3     12 18 1A 1A 
1bad7     1B 1A 17 14 
1badb     0B 07 05 02 | 	byte	$14, $0e, $0e, $0f, $12, $18, $1a, $1a, $1b, $1a, $17, $14, $0b, $07, $05, $02
1badf     00 F8 F4 F7 
1bae3     FA FB FE 0A 
1bae7     15 21 2B 31 
1baeb     34 32 2F 2E | 	byte	$00, $f8, $f4, $f7, $fa, $fb, $fe, $0a, $15, $21, $2b, $31, $34, $32, $2f, $2e
1baef     28 1F 1A 14 
1baf3     0F 08 00 F4 
1baf7     E8 D7 CE D0 
1bafb     D5 D8 D7 D1 | 	byte	$28, $1f, $1a, $14, $0f, $08, $00, $f4, $e8, $d7, $ce, $d0, $d5, $d8, $d7, $d1
1baff     CB CE D5 D8 
1bb03     DA E0 E5 EA 
1bb07     EE F5 FE 0A 
1bb0b     11 18 1D 1F | 	byte	$cb, $ce, $d5, $d8, $da, $e0, $e5, $ea, $ee, $f5, $fe, $0a, $11, $18, $1d, $1f
1bb0f     1F 1E 1D 18 
1bb13     11 05 FA EE 
1bb17     E5 E4 E7 EE 
1bb1b     F2 F4 F1 ED | 	byte	$1f, $1e, $1d, $18, $11, $05, $fa, $ee, $e5, $e4, $e7, $ee, $f2, $f4, $f1, $ed
1bb1f     E5 DD D7 D8 
1bb23     DB E2 ED F5 
1bb27     FE 0A 12 1A 
1bb2b     1D 1D 1D 1D | 	byte	$e5, $dd, $d7, $d8, $db, $e2, $ed, $f5, $fe, $0a, $12, $1a, $1d, $1d, $1d, $1d
1bb2f     1F 21 22 1D 
1bb33     11 05 FA F0 
1bb37     E8 E2 DB D7 
1bb3b     D8 DD E5 F1 | 	byte	$1f, $21, $22, $1d, $11, $05, $fa, $f0, $e8, $e2, $db, $d7, $d8, $dd, $e5, $f1
1bb3f     FE 0B 18 21 
1bb43     22 1F 1A 17 
1bb47     15 15 14 11 
1bb4b     11 18 22 2B | 	byte	$fe, $0b, $18, $21, $22, $1f, $1a, $17, $15, $15, $14, $11, $11, $18, $22, $2b
1bb4f     2E 2E 2B 27 
1bb53     25 1F 17 0B 
1bb57     FB EB E0 D7 
1bb5b     D1 C8 C2 C0 | 	byte	$2e, $2e, $2b, $27, $25, $1f, $17, $0b, $fb, $eb, $e0, $d7, $d1, $c8, $c2, $c0
1bb5f     C7 D5 E5 F2 
1bb63     F7 F4 F1 F4 
1bb67     FD 02 07 07 
1bb6b     08 02 FA F2 | 	byte	$c7, $d5, $e5, $f2, $f7, $f4, $f1, $f4, $fd, $02, $07, $07, $08, $02, $fa, $f2
1bb6f     F0 F4 FB 01 
1bb73     05 05 00 FB 
1bb77     F7 F4 F1 F0 
1bb7b     EE ED EB ED | 	byte	$f0, $f4, $fb, $01, $05, $05, $00, $fb, $f7, $f4, $f1, $f0, $ee, $ed, $eb, $ed
1bb7f     F2 FE 0B 14 
1bb83     18 1E 27 27 
1bb87     22 1F 1D 1B 
1bb8b     1B 1D 21 27 | 	byte	$f2, $fe, $0b, $14, $18, $1e, $27, $27, $22, $1f, $1d, $1b, $1b, $1d, $21, $27
1bb8f     2E 2E 25 17 
1bb93     0B 00 FD FA 
1bb97     FB FA F8 F7 
1bb9b     F8 F8 F7 F8 | 	byte	$2e, $2e, $25, $17, $0b, $00, $fd, $fa, $fb, $fa, $f8, $f7, $f8, $f8, $f7, $f8
1bb9f     FD 01 05 08 
1bba3     08 08 0B 11 
1bba7     15 1D 22 22 
1bbab     1D 12 08 00 | 	byte	$fd, $01, $05, $08, $08, $08, $0b, $11, $15, $1d, $22, $22, $1d, $12, $08, $00
1bbaf     F5 E8 E2 E0 
1bbb3     E1 E7 EB EA 
1bbb7     EA EE F0 EB 
1bbbb     E0 D7 D7 DB | 	byte	$f5, $e8, $e2, $e0, $e1, $e7, $eb, $ea, $ea, $ee, $f0, $eb, $e0, $d7, $d7, $db
1bbbf     E1 E7 F0 F8 
1bbc3     FD FE 05 12 
1bbc7     1B 1D 18 0E 
1bbcb     02 FA F5 F4 | 	byte	$e1, $e7, $f0, $f8, $fd, $fe, $05, $12, $1b, $1d, $18, $0e, $02, $fa, $f5, $f4
1bbcf     F5 F8 FB FA 
1bbd3     F5 F1 F0 F5 
1bbd7     FE 0D 1A 2A 
1bbdb     38 42 3F 3A | 	byte	$f5, $f8, $fb, $fa, $f5, $f1, $f0, $f5, $fe, $0d, $1a, $2a, $38, $42, $3f, $3a
1bbdf     31 22 12 00 
1bbe3     F4 E5 DA D5 
1bbe7     DA E2 ED F5 
1bbeb     FE 05 0A 0A | 	byte	$31, $22, $12, $00, $f4, $e5, $da, $d5, $da, $e2, $ed, $f5, $fe, $05, $0a, $0a
1bbef     0D 11 11 0D 
1bbf3     07 00 FA F7 
1bbf7     F7 F4 F0 F0 
1bbfb     F5 FE 08 11 | 	byte	$0d, $11, $11, $0d, $07, $00, $fa, $f7, $f7, $f4, $f0, $f0, $f5, $fe, $08, $11
1bbff     12 11 0E 08 
1bc03     05 04 00 FD 
1bc07     FA FA FA FE 
1bc0b     0D 1A 27 2E | 	byte	$12, $11, $0e, $08, $05, $04, $00, $fd, $fa, $fa, $fa, $fe, $0d, $1a, $27, $2e
1bc0f     32 35 37 35 
1bc13     2F 22 0B F7 
1bc17     E2 DA D4 D4 
1bc1b     DB E7 F2 FB | 	byte	$32, $35, $37, $35, $2f, $22, $0b, $f7, $e2, $da, $d4, $d4, $db, $e7, $f2, $fb
1bc1f     FE 02 01 FD 
1bc23     FD 04 0A 0B 
1bc27     04 FA F4 EB 
1bc2b     E4 E0 DE E2 | 	byte	$fe, $02, $01, $fd, $fd, $04, $0a, $0b, $04, $fa, $f4, $eb, $e4, $e0, $de, $e2
1bc2f     F0 FE 0D 14 
1bc33     14 11 0D 0E 
1bc37     14 18 18 17 
1bc3b     11 05 FE FE | 	byte	$f0, $fe, $0d, $14, $14, $11, $0d, $0e, $14, $18, $18, $17, $11, $05, $fe, $fe
1bc3f     04 0E 15 14 
1bc43     0B 00 F1 E2 
1bc47     DA D4 D1 D0 
1bc4b     D2 DB E0 E7 | 	byte	$04, $0e, $15, $14, $0b, $00, $f1, $e2, $da, $d4, $d1, $d0, $d2, $db, $e0, $e7
1bc4f     EE F8 04 14 
1bc53     1E 27 32 3D 
1bc57     44 47 42 37 
1bc5b     28 18 08 FB | 	byte	$ee, $f8, $04, $14, $1e, $27, $32, $3d, $44, $47, $42, $37, $28, $18, $08, $fb
1bc5f     F4 E8 DD D4 
1bc63     D0 D2 DB E0 
1bc67     E2 E4 EA F2 
1bc6b     FE 0D 14 14 | 	byte	$f4, $e8, $dd, $d4, $d0, $d2, $db, $e0, $e2, $e4, $ea, $f2, $fe, $0d, $14, $14
1bc6f     11 08 04 00 
1bc73     FD F8 FA FE 
1bc77     02 02 FA F0 
1bc7b     EA ED F1 F8 | 	byte	$11, $08, $04, $00, $fd, $f8, $fa, $fe, $02, $02, $fa, $f0, $ea, $ed, $f1, $f8
1bc7f     FE 08 0E 12 
1bc83     18 1D 17 0B 
1bc87     00 EE E7 E2 
1bc8b     E0 D7 D1 CE | 	byte	$fe, $08, $0e, $12, $18, $1d, $17, $0b, $00, $ee, $e7, $e2, $e0, $d7, $d1, $ce
1bc8f     D0 DE ED F5 
1bc93     FE 07 11 15 
1bc97     14 11 12 12 
1bc9b     0F 0B 07 02 | 	byte	$d0, $de, $ed, $f5, $fe, $07, $11, $15, $14, $11, $12, $12, $0f, $0b, $07, $02
1bc9f     05 0E 15 1B 
1bca3     1E 21 22 1D 
1bca7     11 02 F7 F4 
1bcab     F8 FE 07 08 | 	byte	$05, $0e, $15, $1b, $1e, $21, $22, $1d, $11, $02, $f7, $f4, $f8, $fe, $07, $08
1bcaf     05 02 01 02 
1bcb3     05 08 0E 12 
1bcb7     15 15 11 05 
1bcbb     FA EE E5 E1 | 	byte	$05, $02, $01, $02, $05, $08, $0e, $12, $15, $15, $11, $05, $fa, $ee, $e5, $e1
1bcbf     E1 E4 E8 F2 
1bcc3     FD 04 0A 11 
1bcc7     1A 1E 1F 1A 
1bccb     11 0B 05 00 | 	byte	$e1, $e4, $e8, $f2, $fd, $04, $0a, $11, $1a, $1e, $1f, $1a, $11, $0b, $05, $00
1bccf     F8 F4 F4 F8 
1bcd3     FE 07 11 1A 
1bcd7     1B 17 0E 05 
1bcdb     02 02 01 FB | 	byte	$f8, $f4, $f4, $f8, $fe, $07, $11, $1a, $1b, $17, $0e, $05, $02, $02, $01, $fb
1bcdf     EE E5 E0 DE 
1bce3     E1 E7 ED F2 
1bce7     FB 04 0B 05 
1bceb     00 F8 F4 F4 | 	byte	$ee, $e5, $e0, $de, $e1, $e7, $ed, $f2, $fb, $04, $0b, $05, $00, $f8, $f4, $f4
1bcef     F5 F8 FE 0A 
1bcf3     0E 0D 05 FA 
1bcf7     F4 F2 F4 F7 
1bcfb     F7 FB FD FD | 	byte	$f5, $f8, $fe, $0a, $0e, $0d, $05, $fa, $f4, $f2, $f4, $f7, $f7, $fb, $fd, $fd
1bcff     FA F8 FB 02 
1bd03     07 0A 0E 11 
1bd07     12 12 1B 27 
1bd0b     31 38 3B 37 | 	byte	$fa, $f8, $fb, $02, $07, $0a, $0e, $11, $12, $12, $1b, $27, $31, $38, $3b, $37
1bd0f     31 2E 2E 2F 
1bd13     32 32 2E 25 
1bd17     1A 0D 00 F1 
1bd1b     E4 DA D4 D4 | 	byte	$31, $2e, $2e, $2f, $32, $32, $2e, $25, $1a, $0d, $00, $f1, $e4, $da, $d4, $d4
1bd1f     DA E1 E7 F0 
1bd23     FB 08 14 1A 
1bd27     1A 14 0F 0F 
1bd2b     0E 0B 07 07 | 	byte	$da, $e1, $e7, $f0, $fb, $08, $14, $1a, $1a, $14, $0f, $0f, $0e, $0b, $07, $07
1bd2f     07 02 FD F7 
1bd33     F5 F4 F0 EB 
1bd37     EA ED F4 FA 
1bd3b     FB F8 F1 EA | 	byte	$07, $02, $fd, $f7, $f5, $f4, $f0, $eb, $ea, $ed, $f4, $fa, $fb, $f8, $f1, $ea
1bd3f     E1 D8 D4 D5 
1bd43     DB E1 E7 EE 
1bd47     F4 FD 05 0B 
1bd4b     0E 11 12 11 | 	byte	$e1, $d8, $d4, $d5, $db, $e1, $e7, $ee, $f4, $fd, $05, $0b, $0e, $11, $12, $11
1bd4f     08 01 FA F5 
1bd53     F7 F8 FE 0A 
1bd57     14 21 2F 3D 
1bd5b     42 3F 3A 2F | 	byte	$08, $01, $fa, $f5, $f7, $f8, $fe, $0a, $14, $21, $2f, $3d, $42, $3f, $3a, $2f
1bd5f     2A 25 1D 17 
1bd63     0E 08 00 EE 
1bd67     E0 D5 D4 D7 
1bd6b     DA D8 D4 D2 | 	byte	$2a, $25, $1d, $17, $0e, $08, $00, $ee, $e0, $d5, $d4, $d7, $da, $d8, $d4, $d2
1bd6f     D5 E1 F0 FB 
1bd73     02 07 05 01 
1bd77     FA F0 EA E8 
1bd7b     ED FB 0A 12 | 	byte	$d5, $e1, $f0, $fb, $02, $07, $05, $01, $fa, $f0, $ea, $e8, $ed, $fb, $0a, $12
1bd7f     1B 24 28 25 
1bd83     1D 14 11 12 
1bd87     15 1A 1A 17 
1bd8b     0B 00 F7 F0 | 	byte	$1b, $24, $28, $25, $1d, $14, $11, $12, $15, $1a, $1a, $17, $0b, $00, $f7, $f0
1bd8f     ED EB EE F0 
1bd93     EE E5 E0 DE 
1bd97     DD DB DA D5 
1bd9b     D4 D5 D7 D5 | 	byte	$ed, $eb, $ee, $f0, $ee, $e5, $e0, $de, $dd, $db, $da, $d5, $d4, $d5, $d7, $d5
1bd9f     D4 D5 DB E7 
1bda3     F5 04 0B 0D 
1bda7     0D 0E 0F 0D 
1bdab     07 02 05 0F | 	byte	$d4, $d5, $db, $e7, $f5, $04, $0b, $0d, $0d, $0e, $0f, $0d, $07, $02, $05, $0f
1bdaf     1E 2A 34 3B 
1bdb3     3E 3D 3A 31 
1bdb7     25 1D 12 0B 
1bdbb     05 02 01 04 | 	byte	$1e, $2a, $34, $3b, $3e, $3d, $3a, $31, $25, $1d, $12, $0b, $05, $02, $01, $04
1bdbf     05 02 FA F1 
1bdc3     F2 FE 0A 12 
1bdc7     15 14 0E 02 
1bdcb     F4 E8 E2 E0 | 	byte	$05, $02, $fa, $f1, $f2, $fe, $0a, $12, $15, $14, $0e, $02, $f4, $e8, $e2, $e0
1bdcf     E0 DD E1 E7 
1bdd3     ED F0 F2 F8 
1bdd7     FD FE 01 FA 
1bddb     EB DD D1 CB | 	byte	$e0, $dd, $e1, $e7, $ed, $f0, $f2, $f8, $fd, $fe, $01, $fa, $eb, $dd, $d1, $cb
1bddf     D2 E1 F0 F8 
1bde3     FE FE FA F8 
1bde7     FB FE 08 12 
1bdeb     1A 1F 1E 17 | 	byte	$d2, $e1, $f0, $f8, $fe, $fe, $fa, $f8, $fb, $fe, $08, $12, $1a, $1f, $1e, $17
1bdef     0E 08 08 0D 
1bdf3     15 1F 28 25 
1bdf7     1D 12 0E 0E 
1bdfb     12 12 0F 0E | 	byte	$0e, $08, $08, $0d, $15, $1f, $28, $25, $1d, $12, $0e, $0e, $12, $12, $0f, $0e
1bdff     11 15 1B 1F 
1be03     1E 1A 17 14 
1be07     14 0E 05 01 
1be0b     01 04 07 0A | 	byte	$11, $15, $1b, $1f, $1e, $1a, $17, $14, $14, $0e, $05, $01, $01, $04, $07, $0a
1be0f     0A 05 00 FE 
1be13     FD FE 07 12 
1be17     15 14 0E 05 
1be1b     FA F1 F2 FB | 	byte	$0a, $05, $00, $fe, $fd, $fe, $07, $12, $15, $14, $0e, $05, $fa, $f1, $f2, $fb
1be1f     04 07 07 0D 
1be23     15 18 17 15 
1be27     11 0D 05 FA 
1be2b     EE E2 DA DB | 	byte	$04, $07, $07, $0d, $15, $18, $17, $15, $11, $0d, $05, $fa, $ee, $e2, $da, $db
1be2f     DB D8 DB E4 
1be33     ED F1 F4 FA 
1be37     02 08 04 F7 
1be3b     F2 F8 FE 0B | 	byte	$db, $d8, $db, $e4, $ed, $f1, $f4, $fa, $02, $08, $04, $f7, $f2, $f8, $fe, $0b
1be3f     14 14 0E 02 
1be43     F4 EB E8 E5 
1be47     E5 EB F8 08 
1be4b     15 17 0E 02 | 	byte	$14, $14, $0e, $02, $f4, $eb, $e8, $e5, $e5, $eb, $f8, $08, $15, $17, $0e, $02
1be4f     F7 F0 F0 F2 
1be53     FB 04 0B 12 
1be57     1B 1F 1F 1B 
1be5b     17 11 11 15 | 	byte	$f7, $f0, $f0, $f2, $fb, $04, $0b, $12, $1b, $1f, $1f, $1b, $17, $11, $11, $15
1be5f     1A 1D 1E 21 
1be63     1F 1E 1B 17 
1be67     11 07 01 FE 
1be6b     F7 F2 F0 F1 | 	byte	$1a, $1d, $1e, $21, $1f, $1e, $1b, $17, $11, $07, $01, $fe, $f7, $f2, $f0, $f1
1be6f     F4 F4 F2 F2 
1be73     F0 E5 DD DB 
1be77     E1 E2 E0 DD 
1be7b     DE E7 F8 0E | 	byte	$f4, $f4, $f2, $f2, $f0, $e5, $dd, $db, $e1, $e2, $e0, $dd, $de, $e7, $f8, $0e
1be7f     1E 2A 32 37 
1be83     31 28 1E 17 
1be87     0B 00 FD FD 
1be8b     FB FA F4 EB | 	byte	$1e, $2a, $32, $37, $31, $28, $1e, $17, $0b, $00, $fd, $fd, $fb, $fa, $f4, $eb
1be8f     E8 E8 E8 EA 
1be93     EB EB E8 E5 
1be97     EA F8 08 18 
1be9b     24 22 18 05 | 	byte	$e8, $e8, $e8, $ea, $eb, $eb, $e8, $e5, $ea, $f8, $08, $18, $24, $22, $18, $05
1be9f     F4 DE D2 D5 
1bea3     DE E4 EA F2 
1bea7     F8 FB F7 F0 
1beab     EB F0 F2 F0 | 	byte	$f4, $de, $d2, $d5, $de, $e4, $ea, $f2, $f8, $fb, $f7, $f0, $eb, $f0, $f2, $f0
1beaf     EE EE EE F4 
1beb3     F8 FE 04 0A 
1beb7     11 17 17 11 
1bebb     08 01 FB F7 | 	byte	$ee, $ee, $ee, $f4, $f8, $fe, $04, $0a, $11, $17, $17, $11, $08, $01, $fb, $f7
1bebf     F5 F7 F8 FA 
1bec3     F5 F4 F1 ED 
1bec7     EB F1 FE 0F 
1becb     1F 2B 2F 2E | 	byte	$f5, $f7, $f8, $fa, $f5, $f4, $f1, $ed, $eb, $f1, $fe, $0f, $1f, $2b, $2f, $2e
1becf     25 25 28 25 
1bed3     1F 1D 1F 25 
1bed7     22 17 05 F4 
1bedb     E5 E0 E4 E7 | 	byte	$25, $25, $28, $25, $1f, $1d, $1f, $25, $22, $17, $05, $f4, $e5, $e0, $e4, $e7
1bedf     E7 EB F2 FB 
1bee3     02 07 04 00 
1bee7     FA F1 E8 E0 
1beeb     E0 E7 F0 FD | 	byte	$e7, $eb, $f2, $fb, $02, $07, $04, $00, $fa, $f1, $e8, $e0, $e0, $e7, $f0, $fd
1beef     0A 0F 12 17 
1bef3     1A 14 08 FD 
1bef7     F8 F8 FB FE 
1befb     08 15 1D 22 | 	byte	$0a, $0f, $12, $17, $1a, $14, $08, $fd, $f8, $f8, $fb, $fe, $08, $15, $1d, $22
1beff     24 27 24 1D 
1bf03     11 07 FD F4 
1bf07     F2 F5 F7 F5 
1bf0b     F8 FE 0A 12 | 	byte	$24, $27, $24, $1d, $11, $07, $fd, $f4, $f2, $f5, $f7, $f5, $f8, $fe, $0a, $12
1bf0f     17 18 1B 1F 
1bf13     27 2E 31 2E 
1bf17     22 14 0A 01 
1bf1b     FA F5 F5 F7 | 	byte	$17, $18, $1b, $1f, $27, $2e, $31, $2e, $22, $14, $0a, $01, $fa, $f5, $f5, $f7
1bf1f     F8 FA F7 F7 
1bf23     FA FE 08 11 
1bf27     17 1A 11 05 
1bf2b     F4 E2 D4 C8 | 	byte	$f8, $fa, $f7, $f7, $fa, $fe, $08, $11, $17, $1a, $11, $05, $f4, $e2, $d4, $c8
1bf2f     C0 C0 C5 CD 
1bf33     D0 D5 E1 ED 
1bf37     F7 FE 0F 1B 
1bf3b     1F 1B 17 14 | 	byte	$c0, $c0, $c5, $cd, $d0, $d5, $e1, $ed, $f7, $fe, $0f, $1b, $1f, $1b, $17, $14
1bf3f     0F 0B 02 00 
1bf43     00 FA F4 F0 
1bf47     EE EE EE F1 
1bf4b     F8 07 18 27 | 	byte	$0f, $0b, $02, $00, $00, $fa, $f4, $f0, $ee, $ee, $ee, $f1, $f8, $07, $18, $27
1bf4f     2F 32 2E 22 
1bf53     11 00 F0 E4 
1bf57     E2 E7 F1 FB 
1bf5b     07 0F 11 14 | 	byte	$2f, $32, $2e, $22, $11, $00, $f0, $e4, $e2, $e7, $f1, $fb, $07, $0f, $11, $14
1bf5f     1A 24 2D 31 
1bf63     34 2E 22 17 
1bf67     0E 0B 08 07 
1bf6b     0D 0E 08 00 | 	byte	$1a, $24, $2d, $31, $34, $2e, $22, $17, $0e, $0b, $08, $07, $0d, $0e, $08, $00
1bf6f     F4 E2 D1 C5 
1bf73     BE BD C1 CD 
1bf77     DE EE FD 08 
1bf7b     11 17 18 14 | 	byte	$f4, $e2, $d1, $c5, $be, $bd, $c1, $cd, $de, $ee, $fd, $08, $11, $17, $18, $14
1bf7f     0E 0E 0E 0F 
1bf83     11 0E 0A 0A 
1bf87     0D 11 11 0B 
1bf8b     00 F5 EB E2 | 	byte	$0e, $0e, $0e, $0f, $11, $0e, $0a, $0a, $0d, $11, $11, $0b, $00, $f5, $eb, $e2
1bf8f     DD DB DD DE 
1bf93     E1 E7 F2 FE 
1bf97     0D 1B 21 1F 
1bf9b     1B 17 0E 05 | 	byte	$dd, $db, $dd, $de, $e1, $e7, $f2, $fe, $0d, $1b, $21, $1f, $1b, $17, $0e, $05
1bf9f     04 05 07 08 
1bfa3     08 05 02 02 
1bfa7     02 08 0F 15 
1bfab     1A 1E 22 27 | 	byte	$04, $05, $07, $08, $08, $05, $02, $02, $02, $08, $0f, $15, $1a, $1e, $22, $27
1bfaf     28 28 22 1A 
1bfb3     0B 00 F0 E5 
1bfb7     DA CD C5 C7 
1bfbb     CA D0 E0 ED | 	byte	$28, $28, $22, $1a, $0b, $00, $f0, $e5, $da, $cd, $c5, $c7, $ca, $d0, $e0, $ed
1bfbf     F8 FD FE FB 
1bfc3     F4 EE EA E5 
1bfc7     E0 DD DD E5 
1bfcb     F2 FE 0B 14 | 	byte	$f8, $fd, $fe, $fb, $f4, $ee, $ea, $e5, $e0, $dd, $dd, $e5, $f2, $fe, $0b, $14
1bfcf     1A 1D 1E 21 
1bfd3     22 1F 1D 17 
1bfd7     17 17 17 14 
1bfdb     0E 0F 12 12 | 	byte	$1a, $1d, $1e, $21, $22, $1f, $1d, $17, $17, $17, $17, $14, $0e, $0f, $12, $12
1bfdf     0E 08 02 FB 
1bfe3     F1 EA DE D2 
1bfe7     C8 C0 BA B7 
1bfeb     B8 BD C7 D4 | 	byte	$0e, $08, $02, $fb, $f1, $ea, $de, $d2, $c8, $c0, $ba, $b7, $b8, $bd, $c7, $d4
1bfef     E0 E7 EA ED 
1bff3     F2 FE 0A 0F 
1bff7     14 1A 1F 24 
1bffb     25 25 22 1E | 	byte	$e0, $e7, $ea, $ed, $f2, $fe, $0a, $0f, $14, $1a, $1f, $24, $25, $25, $22, $1e
1bfff     1A 1B 1E 24 
1c003     2A 2A 28 22 
1c007     1D 18 14 15 
1c00b     15 15 15 12 | 	byte	$1a, $1b, $1e, $24, $2a, $2a, $28, $22, $1d, $18, $14, $15, $15, $15, $15, $12
1c00f     0B 00 EE E4 
1c013     DD DE E5 F0 
1c017     FB 07 11 15 
1c01b     14 14 14 0D | 	byte	$0b, $00, $ee, $e4, $dd, $de, $e5, $f0, $fb, $07, $11, $15, $14, $14, $14, $0d
1c01f     0A 0E 17 1E 
1c023     1F 1D 17 0B 
1c027     04 01 00 FD 
1c02b     FB FA FD FE | 	byte	$0a, $0e, $17, $1e, $1f, $1d, $17, $0b, $04, $01, $00, $fd, $fb, $fa, $fd, $fe
1c02f     01 05 05 02 
1c033     FE F7 F1 EE 
1c037     EB EA F0 F1 
1c03b     F1 EE EE F2 | 	byte	$01, $05, $05, $02, $fe, $f7, $f1, $ee, $eb, $ea, $f0, $f1, $f1, $ee, $ee, $f2
1c03f     FB 05 0F 1A 
1c043     25 31 3D 44 
1c047     48 45 37 2E 
1c04b     25 1F 1A 11 | 	byte	$fb, $05, $0f, $1a, $25, $31, $3d, $44, $48, $45, $37, $2e, $25, $1f, $1a, $11
1c04f     05 FD EE E0 
1c053     D1 CA CB D0 
1c057     D5 E0 EB FB 
1c05b     0A 18 24 2B | 	byte	$05, $fd, $ee, $e0, $d1, $ca, $cb, $d0, $d5, $e0, $eb, $fb, $0a, $18, $24, $2b
1c05f     2E 2B 22 18 
1c063     0E 05 00 F7 
1c067     EE E2 D4 C5 
1c06b     BA AE A8 AA | 	byte	$2e, $2b, $22, $18, $0e, $05, $00, $f7, $ee, $e2, $d4, $c5, $ba, $ae, $a8, $aa
1c06f     B0 B8 C4 D0 
1c073     E1 F1 FE 11 
1c077     1F 2B 32 34 
1c07b     2E 27 24 24 | 	byte	$b0, $b8, $c4, $d0, $e1, $f1, $fe, $11, $1f, $2b, $32, $34, $2e, $27, $24, $24
1c07f     22 22 22 22 
1c083     24 25 22 1D 
1c087     18 14 0F 0E 
1c08b     12 14 12 0E | 	byte	$22, $22, $22, $22, $24, $25, $22, $1d, $18, $14, $0f, $0e, $12, $14, $12, $0e
1c08f     0B 02 FD FA 
1c093     FE 05 07 01 
1c097     F7 EB E5 DD 
1c09b     D1 C0 B7 BA | 	byte	$0b, $02, $fd, $fa, $fe, $05, $07, $01, $f7, $eb, $e5, $dd, $d1, $c0, $b7, $ba
1c09f     C4 D0 DB E4 
1c0a3     EB ED EA E8 
1c0a7     ED F8 04 0B 
1c0ab     0E 0E 0F 12 | 	byte	$c4, $d0, $db, $e4, $eb, $ed, $ea, $e8, $ed, $f8, $04, $0b, $0e, $0e, $0f, $12
1c0af     15 15 14 12 
1c0b3     11 0D 0B 0A 
1c0b7     07 08 07 05 
1c0bb     0A 0B 0F 11 | 	byte	$15, $15, $14, $12, $11, $0d, $0b, $0a, $07, $08, $07, $05, $0a, $0b, $0f, $11
1c0bf     0E 05 FA F5 
1c0c3     F8 FE 08 08 
1c0c7     05 07 08 0B 
1c0cb     0B 0B 08 05 | 	byte	$0e, $05, $fa, $f5, $f8, $fe, $08, $08, $05, $07, $08, $0b, $0b, $0b, $08, $05
1c0cf     02 07 11 17 
1c0d3     14 0E 08 04 
1c0d7     FD F5 F4 F4 
1c0db     F2 F4 F4 EE | 	byte	$02, $07, $11, $17, $14, $0e, $08, $04, $fd, $f5, $f4, $f4, $f2, $f4, $f4, $ee
1c0df     E4 D7 CB C4 
1c0e3     C0 C1 C5 CD 
1c0e7     D8 E5 F2 FE 
1c0eb     0D 15 1A 1D | 	byte	$e4, $d7, $cb, $c4, $c0, $c1, $c5, $cd, $d8, $e5, $f2, $fe, $0d, $15, $1a, $1d
1c0ef     18 11 0B 0B 
1c0f3     0F 12 15 15 
1c0f7     1A 1E 24 2D 
1c0fb     35 3A 31 22 | 	byte	$18, $11, $0b, $0b, $0f, $12, $15, $15, $1a, $1e, $24, $2d, $35, $3a, $31, $22
1c0ff     17 11 11 15 
1c103     1A 1D 1D 1A 
1c107     11 08 00 F4 
1c10b     EB E7 E4 E2 | 	byte	$17, $11, $11, $15, $1a, $1d, $1d, $1a, $11, $08, $00, $f4, $eb, $e7, $e4, $e2
1c10f     E0 E1 E2 E2 
1c113     E0 DE DE E0 
1c117     E7 F7 05 11 
1c11b     17 1B 1D 1F | 	byte	$e0, $e1, $e2, $e2, $e0, $de, $de, $e0, $e7, $f7, $05, $11, $17, $1b, $1d, $1f
1c11f     1F 1E 18 12 
1c123     0B 02 FD FA 
1c127     F7 F7 F4 F2 
1c12b     F7 FE 0E 12 | 	byte	$1f, $1e, $18, $12, $0b, $02, $fd, $fa, $f7, $f7, $f4, $f2, $f7, $fe, $0e, $12
1c12f     0E 0B 0A 08 
1c133     08 07 08 0E 
1c137     15 18 17 14 
1c13b     0E 08 01 FD | 	byte	$0e, $0b, $0a, $08, $08, $07, $08, $0e, $15, $18, $17, $14, $0e, $08, $01, $fd
1c13f     F7 F4 EE E8 
1c143     E1 DA D4 D2 
1c147     D7 E1 F1 FD 
1c14b     07 0F 15 1B | 	byte	$f7, $f4, $ee, $e8, $e1, $da, $d4, $d2, $d7, $e1, $f1, $fd, $07, $0f, $15, $1b
1c14f     1F 1D 1A 18 
1c153     18 17 11 08 
1c157     05 02 00 FD 
1c15b     F7 F4 F4 F5 | 	byte	$1f, $1d, $1a, $18, $18, $17, $11, $08, $05, $02, $00, $fd, $f7, $f4, $f4, $f5
1c15f     FE 08 0E 0E 
1c163     0E 0E 0E 0B 
1c167     05 FD F7 F4 
1c16b     F1 F1 F4 FE | 	byte	$fe, $08, $0e, $0e, $0e, $0e, $0e, $0b, $05, $fd, $f7, $f4, $f1, $f1, $f4, $fe
1c16f     0A 15 21 22 
1c173     1A 0E 05 04 
1c177     02 02 02 01 
1c17b     00 01 00 00 | 	byte	$0a, $15, $21, $22, $1a, $0e, $05, $04, $02, $02, $02, $01, $00, $01, $00, $00
1c17f     FD FA FB FD 
1c183     FE 04 05 05 
1c187     05 07 02 FB 
1c18b     F4 F1 F5 FE | 	byte	$fd, $fa, $fb, $fd, $fe, $04, $05, $05, $05, $07, $02, $fb, $f4, $f1, $f5, $fe
1c18f     07 0F 14 15 
1c193     15 17 1F 28 
1c197     2E 2A 22 21 
1c19b     1F 1F 1E 1B | 	byte	$07, $0f, $14, $15, $15, $17, $1f, $28, $2e, $2a, $22, $21, $1f, $1f, $1e, $1b
1c19f     17 12 08 FB 
1c1a3     ED E2 DD D7 
1c1a7     D1 C5 BD BB 
1c1ab     BE C7 D0 D8 | 	byte	$17, $12, $08, $fb, $ed, $e2, $dd, $d7, $d1, $c5, $bd, $bb, $be, $c7, $d0, $d8
1c1af     DB D7 D4 D1 
1c1b3     D2 D7 E0 E7 
1c1b7     F1 FB 04 0F 
1c1bb     1D 2A 35 3E | 	byte	$db, $d7, $d4, $d1, $d2, $d7, $e0, $e7, $f1, $fb, $04, $0f, $1d, $2a, $35, $3e
1c1bf     42 3F 3A 34 
1c1c3     2E 25 21 1D 
1c1c7     17 11 05 00 
1c1cb     FB F7 F1 EB | 	byte	$42, $3f, $3a, $34, $2e, $25, $21, $1d, $17, $11, $05, $00, $fb, $f7, $f1, $eb
1c1cf     E2 DA D1 CE 
1c1d3     D0 D8 E1 EB 
1c1d7     F4 F8 FB FE 
1c1db     07 0E 14 14 | 	byte	$e2, $da, $d1, $ce, $d0, $d8, $e1, $eb, $f4, $f8, $fb, $fe, $07, $0e, $14, $14
1c1df     11 0B 02 FE 
1c1e3     FE 04 08 0B 
1c1e7     0F 0F 12 15 
1c1eb     1F 27 2B 2E | 	byte	$11, $0b, $02, $fe, $fe, $04, $08, $0b, $0f, $0f, $12, $15, $1f, $27, $2b, $2e
1c1ef     2E 25 1F 17 
1c1f3     0B FA E8 DE 
1c1f7     D7 D1 C7 BA 
1c1fb     B0 AA B0 BE | 	byte	$2e, $25, $1f, $17, $0b, $fa, $e8, $de, $d7, $d1, $c7, $ba, $b0, $aa, $b0, $be
1c1ff     CE DE EB F5 
1c203     FB F8 F2 F0 
1c207     F2 FD 02 02 
1c20b     FE FD 02 0A | 	byte	$ce, $de, $eb, $f5, $fb, $f8, $f2, $f0, $f2, $fd, $02, $02, $fe, $fd, $02, $0a
1c20f     0D 0E 11 14 
1c213     12 0E 0B 0B 
1c217     0E 0E 11 14 
1c21b     14 0F 0D 0D | 	byte	$0d, $0e, $11, $14, $12, $0e, $0b, $0b, $0e, $0e, $11, $14, $14, $0f, $0d, $0d
1c21f     0E 14 18 1B 
1c223     1D 1D 17 0B 
1c227     04 04 0A 12 
1c22b     15 14 0E 05 | 	byte	$0e, $14, $18, $1b, $1d, $1d, $17, $0b, $04, $04, $0a, $12, $15, $14, $0e, $05
1c22f     FB EE E2 DE 
1c233     DE E2 EB F7 
1c237     FE 07 0D 0B 
1c23b     08 02 02 07 | 	byte	$fb, $ee, $e2, $de, $de, $e2, $eb, $f7, $fe, $07, $0d, $0b, $08, $02, $02, $07
1c23f     0F 1B 2A 34 
1c243     3A 3A 3A 3A 
1c247     34 2E 2A 25 
1c24b     1F 1D 1A 18 | 	byte	$0f, $1b, $2a, $34, $3a, $3a, $3a, $3a, $34, $2e, $2a, $25, $1f, $1d, $1a, $18
1c24f     14 0B 02 FA 
1c253     F1 EA E5 DE 
1c257     D4 CE CE D2 
1c25b     D8 E0 E7 ED | 	byte	$14, $0b, $02, $fa, $f1, $ea, $e5, $de, $d4, $ce, $ce, $d2, $d8, $e0, $e7, $ed
1c25f     F0 EE F0 F4 
1c263     F8 FA FA FA 
1c267     FA FE 08 15 
1c26b     1E 1F 1A 0E | 	byte	$f0, $ee, $f0, $f4, $f8, $fa, $fa, $fa, $fa, $fe, $08, $15, $1e, $1f, $1a, $0e
1c26f     02 F7 F1 F2 
1c273     F7 FB FE 01 
1c277     02 05 0A 0E 
1c27b     0F 0F 0F 0E | 	byte	$02, $f7, $f1, $f2, $f7, $fb, $fe, $01, $02, $05, $0a, $0e, $0f, $0f, $0f, $0e
1c27f     0E 0F 0B 05 
1c283     FB F1 EB E8 
1c287     ED F2 F5 F7 
1c28b     F8 FE 07 0F | 	byte	$0e, $0f, $0b, $05, $fb, $f1, $eb, $e8, $ed, $f2, $f5, $f7, $f8, $fe, $07, $0f
1c28f     14 18 17 12 
1c293     0B 08 04 00 
1c297     FB F7 F0 E8 
1c29b     E5 E4 E4 E8 | 	byte	$14, $18, $17, $12, $0b, $08, $04, $00, $fb, $f7, $f0, $e8, $e5, $e4, $e4, $e8
1c29f     F2 FD 02 0A 
1c2a3     11 18 1B 1E 
1c2a7     1E 1E 1E 1E 
1c2ab     1A 11 05 FB | 	byte	$f2, $fd, $02, $0a, $11, $18, $1b, $1e, $1e, $1e, $1e, $1e, $1a, $11, $05, $fb
1c2af     F7 F8 FE 08 
1c2b3     11 14 12 0E 
1c2b7     07 00 F7 F2 
1c2bb     F2 F1 ED E8 | 	byte	$f7, $f8, $fe, $08, $11, $14, $12, $0e, $07, $00, $f7, $f2, $f2, $f1, $ed, $e8
1c2bf     E5 E5 E7 E7 
1c2c3     E5 E5 E7 ED 
1c2c7     FB 0A 18 1F 
1c2cb     21 1F 1E 1D | 	byte	$e5, $e5, $e7, $e7, $e5, $e5, $e7, $ed, $fb, $0a, $18, $1f, $21, $1f, $1e, $1d
1c2cf     1A 15 0E 08 
1c2d3     00 FA F1 EB 
1c2d7     EB ED EE F1 
1c2db     F7 FD FE 04 | 	byte	$1a, $15, $0e, $08, $00, $fa, $f1, $eb, $eb, $ed, $ee, $f1, $f7, $fd, $fe, $04
1c2df     0A 0D 08 00 
1c2e3     F5 EE E8 E2 
1c2e7     E0 DD DD DE 
1c2eb     E4 EB F0 F7 | 	byte	$0a, $0d, $08, $00, $f5, $ee, $e8, $e2, $e0, $dd, $dd, $de, $e4, $eb, $f0, $f7
1c2ef     FD 05 0D 11 
1c2f3     12 14 14 17 
1c2f7     1A 18 15 0D 
1c2fb     01 F5 EB E5 | 	byte	$fd, $05, $0d, $11, $12, $14, $14, $17, $1a, $18, $15, $0d, $01, $f5, $eb, $e5
1c2ff     E2 E4 E2 E1 
1c303     DD DA DA DA 
1c307     E0 E7 F0 F5 
1c30b     FB 07 14 21 | 	byte	$e2, $e4, $e2, $e1, $dd, $da, $da, $da, $e0, $e7, $f0, $f5, $fb, $07, $14, $21
1c30f     2D 3D 48 4F 
1c313     4E 48 3D 34 
1c317     2E 2B 2A 2A 
1c31b     27 22 1A 11 | 	byte	$2d, $3d, $48, $4f, $4e, $48, $3d, $34, $2e, $2b, $2a, $2a, $27, $22, $1a, $11
1c31f     0B 05 FD F4 
1c323     ED EA EA ED 
1c327     EE EB E8 E4 
1c32b     E1 E1 E2 E8 | 	byte	$0b, $05, $fd, $f4, $ed, $ea, $ea, $ed, $ee, $eb, $e8, $e4, $e1, $e1, $e2, $e8
1c32f     ED EE EE F1 
1c333     F2 F8 04 11 
1c337     1A 1E 1D 1A 
1c33b     14 0A 00 F4 | 	byte	$ed, $ee, $ee, $f1, $f2, $f8, $04, $11, $1a, $1e, $1d, $1a, $14, $0a, $00, $f4
1c33f     EB E5 E1 E1 
1c343     E4 ED F4 FE 
1c347     08 12 17 1B 
1c34b     1D 1D 18 11 | 	byte	$eb, $e5, $e1, $e1, $e4, $ed, $f4, $fe, $08, $12, $17, $1b, $1d, $1d, $18, $11
1c34f     0B 05 FA EE 
1c353     E2 E0 E1 E7 
1c357     EA EE F2 F8 
1c35b     FB FD FB F7 | 	byte	$0b, $05, $fa, $ee, $e2, $e0, $e1, $e7, $ea, $ee, $f2, $f8, $fb, $fd, $fb, $f7
1c35f     F4 F0 EB E5 
1c363     E1 DE E0 E1 
1c367     E4 EA EE F5 
1c36b     FE 07 0E 0F | 	byte	$f4, $f0, $eb, $e5, $e1, $de, $e0, $e1, $e4, $ea, $ee, $f5, $fe, $07, $0e, $0f
1c36f     0E 0B 08 0A 
1c373     0E 15 1D 22 
1c377     27 2A 31 3B 
1c37b     41 42 3E 35 | 	byte	$0e, $0b, $08, $0a, $0e, $15, $1d, $22, $27, $2a, $31, $3b, $41, $42, $3e, $35
1c37f     2E 28 1F 18 
1c383     11 11 14 17 
1c387     17 17 14 12 
1c38b     0E 0B 02 FA | 	byte	$2e, $28, $1f, $18, $11, $11, $14, $17, $17, $17, $14, $12, $0e, $0b, $02, $fa
1c38f     F4 F1 F1 F2 
1c393     F5 F7 F1 EB 
1c397     E8 ED F4 F8 
1c39b     F8 F7 F4 F4 | 	byte	$f4, $f1, $f1, $f2, $f5, $f7, $f1, $eb, $e8, $ed, $f4, $f8, $f8, $f7, $f4, $f4
1c39f     F2 F2 F5 F8 
1c3a3     FD 02 0A 0B 
1c3a7     0B 02 FB F5 
1c3ab     F4 F5 F4 F5 | 	byte	$f2, $f2, $f5, $f8, $fd, $02, $0a, $0b, $0b, $02, $fb, $f5, $f4, $f5, $f4, $f5
1c3af     F7 F8 F7 F8 
1c3b3     FE 07 14 1E 
1c3b7     27 25 1F 17 
1c3bb     0E 05 FD F1 | 	byte	$f7, $f8, $f7, $f8, $fe, $07, $14, $1e, $27, $25, $1f, $17, $0e, $05, $fd, $f1
1c3bf     EB EA E7 E5 
1c3c3     EB F2 F5 F7 
1c3c7     F7 F5 F4 F4 
1c3cb     F7 F4 F0 EE | 	byte	$eb, $ea, $e7, $e5, $eb, $f2, $f5, $f7, $f7, $f5, $f4, $f4, $f7, $f4, $f0, $ee
1c3cf     F1 F8 FE 05 
1c3d3     0A 08 07 01 
1c3d7     FB F4 F1 F1 
1c3db     F4 F8 FA F8 | 	byte	$f1, $f8, $fe, $05, $0a, $08, $07, $01, $fb, $f4, $f1, $f1, $f4, $f8, $fa, $f8
1c3df     F2 ED EB F1 
1c3e3     F4 F8 FE 07 
1c3e7     0E 12 18 1E 
1c3eb     22 28 2A 25 | 	byte	$f2, $ed, $eb, $f1, $f4, $f8, $fe, $07, $0e, $12, $18, $1e, $22, $28, $2a, $25
1c3ef     1F 17 0B 00 
1c3f3     F1 E8 E4 E5 
1c3f7     ED F8 01 04 
1c3fb     02 02 07 0B | 	byte	$1f, $17, $0b, $00, $f1, $e8, $e4, $e5, $ed, $f8, $01, $04, $02, $02, $07, $0b
1c3ff     12 17 1E 25 
1c403     2A 28 22 1A 
1c407     0D 02 F8 EE 
1c40b     E8 ED F2 FA | 	byte	$12, $17, $1e, $25, $2a, $28, $22, $1a, $0d, $02, $f8, $ee, $e8, $ed, $f2, $fa
1c40f     FD FA F4 EB 
1c413     E8 E5 EB F7 
1c417     04 0F 18 1D 
1c41b     1A 14 0D 0B | 	byte	$fd, $fa, $f4, $eb, $e8, $e5, $eb, $f7, $04, $0f, $18, $1d, $1a, $14, $0d, $0b
1c41f     08 05 FD EE 
1c423     E0 D1 CB CE 
1c427     D4 DA DE E4 
1c42b     F0 FD 02 02 | 	byte	$08, $05, $fd, $ee, $e0, $d1, $cb, $ce, $d4, $da, $de, $e4, $f0, $fd, $02, $02
1c42f     FE FE 01 02 
1c433     01 02 05 05 
1c437     05 0A 11 1D 
1c43b     27 31 35 35 | 	byte	$fe, $fe, $01, $02, $01, $02, $05, $05, $05, $0a, $11, $1d, $27, $31, $35, $35
1c43f     2E 22 14 0B 
1c443     00 F4 EA E7 
1c447     E7 EB F5 FE 
1c44b     05 0A 0B 0D | 	byte	$2e, $22, $14, $0b, $00, $f4, $ea, $e7, $e7, $eb, $f5, $fe, $05, $0a, $0b, $0d
1c44f     0E 0F 15 1D 
1c453     1F 1D 14 0B 
1c457     05 00 FD F8 
1c45b     F7 F5 F7 F7 | 	byte	$0e, $0f, $15, $1d, $1f, $1d, $14, $0b, $05, $00, $fd, $f8, $f7, $f5, $f7, $f7
1c45f     F1 EA E8 E8 
1c463     EA ED F2 F7 
1c467     F8 F7 F4 F5 
1c46b     F8 FD FB F8 | 	byte	$f1, $ea, $e8, $e8, $ea, $ed, $f2, $f7, $f8, $f7, $f4, $f5, $f8, $fd, $fb, $f8
1c46f     F7 FA F7 F4 
1c473     F2 F2 F8 FD 
1c477     01 05 0B 0E 
1c47b     11 15 18 1B | 	byte	$f7, $fa, $f7, $f4, $f2, $f2, $f8, $fd, $01, $05, $0b, $0e, $11, $15, $18, $1b
1c47f     1A 1A 18 18 
1c483     17 0E 0B 0B 
1c487     0B 11 1B 22 
1c48b     28 28 24 1D | 	byte	$1a, $1a, $18, $18, $17, $0e, $0b, $0b, $0b, $11, $1b, $22, $28, $28, $24, $1d
1c48f     12 0B 08 02 
1c493     FD FD FE 04 
1c497     04 01 00 02 
1c49b     04 01 FE FB | 	byte	$12, $0b, $08, $02, $fd, $fd, $fe, $04, $04, $01, $00, $02, $04, $01, $fe, $fb
1c49f     FA F5 F2 F0 
1c4a3     EB E5 DD D4 
1c4a7     D1 D5 E1 F2 
1c4ab     FE 0F 17 18 | 	byte	$fa, $f5, $f2, $f0, $eb, $e5, $dd, $d4, $d1, $d5, $e1, $f2, $fe, $0f, $17, $18
1c4af     14 0E 08 05 
1c4b3     02 02 05 0A 
1c4b7     0B 0B 05 FA 
1c4bb     F1 F2 FB 05 | 	byte	$14, $0e, $08, $05, $02, $02, $05, $0a, $0b, $0b, $05, $fa, $f1, $f2, $fb, $05
1c4bf     0E 0F 0F 0E 
1c4c3     08 00 F1 E2 
1c4c7     D7 CB C2 C1 
1c4cb     C2 CA D2 DB | 	byte	$0e, $0f, $0f, $0e, $08, $00, $f1, $e2, $d7, $cb, $c2, $c1, $c2, $ca, $d2, $db
1c4cf     E7 F2 FE 0F 
1c4d3     1A 21 2A 32 
1c4d7     3A 3A 31 28 
1c4db     24 25 25 22 | 	byte	$e7, $f2, $fe, $0f, $1a, $21, $2a, $32, $3a, $3a, $31, $28, $24, $25, $25, $22
1c4df     21 1F 22 21 
1c4e3     1D 17 12 0D 
1c4e7     08 05 01 FA 
1c4eb     F0 E5 E0 DA | 	byte	$21, $1f, $22, $21, $1d, $17, $12, $0d, $08, $05, $01, $fa, $f0, $e5, $e0, $da
1c4ef     D7 D4 D4 D4 
1c4f3     D4 DA E1 E7 
1c4f7     EE F4 F8 FB 
1c4fb     FE 04 0D 15 | 	byte	$d7, $d4, $d4, $d4, $d4, $da, $e1, $e7, $ee, $f4, $f8, $fb, $fe, $04, $0d, $15
1c4ff     1A 1B 1B 1A 
1c503     11 05 FD F8 
1c507     FB FE 04 0A 
1c50b     0D 0B 05 FA | 	byte	$1a, $1b, $1b, $1a, $11, $05, $fd, $f8, $fb, $fe, $04, $0a, $0d, $0b, $05, $fa
1c50f     F1 E8 E4 E2 
1c513     E1 E4 ED F5 
1c517     FE 04 0B 11 
1c51b     12 12 0D 0B | 	byte	$f1, $e8, $e4, $e2, $e1, $e4, $ed, $f5, $fe, $04, $0b, $11, $12, $12, $0d, $0b
1c51f     0D 11 1A 21 
1c523     28 2F 32 35 
1c527     32 2E 25 1D 
1c52b     11 07 FD F7 | 	byte	$0d, $11, $1a, $21, $28, $2f, $32, $35, $32, $2e, $25, $1d, $11, $07, $fd, $f7
1c52f     F2 EB E4 D8 
1c533     CB C2 C0 BE 
1c537     C0 C4 CD D8 
1c53b     E7 F1 F8 FE | 	byte	$f2, $eb, $e4, $d8, $cb, $c2, $c0, $be, $c0, $c4, $cd, $d8, $e7, $f1, $f8, $fe
1c53f     04 0A 0B 0B 
1c543     05 01 01 02 
1c547     02 02 01 01 
1c54b     00 FE FE FB | 	byte	$04, $0a, $0b, $0b, $05, $01, $01, $02, $02, $02, $01, $01, $00, $fe, $fe, $fb
1c54f     F7 F7 FB 02 
1c553     0F 1B 24 24 
1c557     1F 1A 11 08 
1c55b     02 02 04 05 | 	byte	$f7, $f7, $fb, $02, $0f, $1b, $24, $24, $1f, $1a, $11, $08, $02, $02, $04, $05
1c55f     07 05 05 05 
1c563     05 04 05 0D 
1c567     15 24 2D 2E 
1c56b     2E 28 22 1D | 	byte	$07, $05, $05, $05, $05, $04, $05, $0d, $15, $24, $2d, $2e, $2e, $28, $22, $1d
1c56f     18 15 17 18 
1c573     18 17 11 07 
1c577     00 FA F4 ED 
1c57b     E4 DD DD E0 | 	byte	$18, $15, $17, $18, $18, $17, $11, $07, $00, $fa, $f4, $ed, $e4, $dd, $dd, $e0
1c57f     E4 E7 E4 DE 
1c583     DB DA D7 D8 
1c587     DE E7 ED F1 
1c58b     F4 F7 FA FE | 	byte	$e4, $e7, $e4, $de, $db, $da, $d7, $d8, $de, $e7, $ed, $f1, $f4, $f7, $fa, $fe
1c58f     0D 1A 22 25 
1c593     27 2D 32 35 
1c597     32 31 35 37 
1c59b     34 2E 28 22 | 	byte	$0d, $1a, $22, $25, $27, $2d, $32, $35, $32, $31, $35, $37, $34, $2e, $28, $22
1c59f     1D 17 0E 08 
1c5a3     00 F4 EA E4 
1c5a7     E2 E5 E7 E7 
1c5ab     E5 E1 DB D7 | 	byte	$1d, $17, $0e, $08, $00, $f4, $ea, $e4, $e2, $e5, $e7, $e7, $e5, $e1, $db, $d7
1c5af     D4 D2 D4 D8 
1c5b3     E1 ED F8 FE 
1c5b7     08 0B 0B 08 
1c5bb     04 02 05 0A | 	byte	$d4, $d2, $d4, $d8, $e1, $ed, $f8, $fe, $08, $0b, $0b, $08, $04, $02, $05, $0a
1c5bf     0F 14 12 11 
1c5c3     12 15 1A 1E 
1c5c7     1A 11 07 00 
1c5cb     FD FD FE 05 | 	byte	$0f, $14, $12, $11, $12, $15, $1a, $1e, $1a, $11, $07, $00, $fd, $fd, $fe, $05
1c5cf     0D 12 17 1A 
1c5d3     1B 1E 1D 1B 
1c5d7     17 15 14 11 
1c5db     0E 08 01 F5 | 	byte	$0d, $12, $17, $1a, $1b, $1e, $1d, $1b, $17, $15, $14, $11, $0e, $08, $01, $f5
1c5df     E8 E0 D7 D2 
1c5e3     D4 D8 D8 D1 
1c5e7     CD C5 C5 CE 
1c5eb     DA E4 ED F5 | 	byte	$e8, $e0, $d7, $d2, $d4, $d8, $d8, $d1, $cd, $c5, $c5, $ce, $da, $e4, $ed, $f5
1c5ef     F7 FA F7 F0 
1c5f3     E8 E4 E1 E1 
1c5f7     E5 F0 FB 04 
1c5fb     0A 0E 15 1B | 	byte	$f7, $fa, $f7, $f0, $e8, $e4, $e1, $e1, $e5, $f0, $fb, $04, $0a, $0e, $15, $1b
1c5ff     21 27 27 22 
1c603     1A 11 05 00 
1c607     F8 F1 ED EA 
1c60b     E8 EA EB F0 | 	byte	$21, $27, $27, $22, $1a, $11, $05, $00, $f8, $f1, $ed, $ea, $e8, $ea, $eb, $f0
1c60f     F5 FB 02 0B 
1c613     14 1B 25 32 
1c617     44 55 61 68 
1c61b     65 5D 48 34 | 	byte	$f5, $fb, $02, $0b, $14, $1b, $25, $32, $44, $55, $61, $68, $65, $5d, $48, $34
1c61f     22 12 07 00 
1c623     F7 F4 EE EB 
1c627     E5 E1 E7 F1 
1c62b     F7 F4 F1 F0 | 	byte	$22, $12, $07, $00, $f7, $f4, $ee, $eb, $e5, $e1, $e7, $f1, $f7, $f4, $f1, $f0
1c62f     F1 F1 EE E8 
1c633     E0 D7 D5 DB 
1c637     E1 E8 F2 FB 
1c63b     FD F7 EE EB | 	byte	$f1, $f1, $ee, $e8, $e0, $d7, $d5, $db, $e1, $e8, $f2, $fb, $fd, $f7, $ee, $eb
1c63f     EB EA EA E8 
1c643     E7 E7 E7 E4 
1c647     E2 E2 E4 E7 
1c64b     EE FB 04 08 | 	byte	$eb, $ea, $ea, $e8, $e7, $e7, $e7, $e4, $e2, $e2, $e4, $e7, $ee, $fb, $04, $08
1c64f     05 07 0B 11 
1c653     18 1E 21 24 
1c657     25 25 1F 17 
1c65b     0F 0B 0E 0F | 	byte	$05, $07, $0b, $11, $18, $1e, $21, $24, $25, $25, $1f, $17, $0f, $0b, $0e, $0f
1c65f     12 17 1D 22 
1c663     24 1E 17 05 
1c667     F4 E2 D8 D5 
1c66b     D8 E0 E7 EA | 	byte	$12, $17, $1d, $22, $24, $1e, $17, $05, $f4, $e2, $d8, $d5, $d8, $e0, $e7, $ea
1c66f     EB ED F2 FE 
1c673     0E 1E 2B 32 
1c677     31 28 1A 0E 
1c67b     05 FD FB FE | 	byte	$eb, $ed, $f2, $fe, $0e, $1e, $2b, $32, $31, $28, $1a, $0e, $05, $fd, $fb, $fe
1c67f     08 0E 11 14 
1c683     17 14 11 11 
1c687     1A 22 28 27 
1c68b     1F 1A 14 0D | 	byte	$08, $0e, $11, $14, $17, $14, $11, $11, $1a, $22, $28, $27, $1f, $1a, $14, $0d
1c68f     08 04 01 02 
1c693     07 0B 0F 0F 
1c697     0F 0E 08 00 
1c69b     F8 F0 E8 E0 | 	byte	$08, $04, $01, $02, $07, $0b, $0f, $0f, $0f, $0e, $08, $00, $f8, $f0, $e8, $e0
1c69f     D8 D5 D7 DB 
1c6a3     E0 E4 E5 E5 
1c6a7     E5 E5 E2 E0 
1c6ab     DD DD DA D7 | 	byte	$d8, $d5, $d7, $db, $e0, $e4, $e5, $e5, $e5, $e5, $e2, $e0, $dd, $dd, $da, $d7
1c6af     D4 D5 DB E5 
1c6b3     F1 FD 05 0B 
1c6b7     0D 0B 05 00 
1c6bb     FD F8 F5 F7 | 	byte	$d4, $d5, $db, $e5, $f1, $fd, $05, $0b, $0d, $0b, $05, $00, $fd, $f8, $f5, $f7
1c6bf     FA FA FB FB 
1c6c3     FD FE 04 0B 
1c6c7     14 1B 24 2D 
1c6cb     32 37 3A 3D | 	byte	$fa, $fa, $fb, $fb, $fd, $fe, $04, $0b, $14, $1b, $24, $2d, $32, $37, $3a, $3d
1c6cf     41 41 41 3D 
1c6d3     37 31 2E 25 
1c6d7     1F 1A 12 08 
1c6db     00 F7 F2 F8 | 	byte	$41, $41, $41, $3d, $37, $31, $2e, $25, $1f, $1a, $12, $08, $00, $f7, $f2, $f8
1c6df     FE 07 0B 08 
1c6e3     07 0B 11 14 
1c6e7     11 08 00 F1 
1c6eb     E0 D1 C0 B7 | 	byte	$fe, $07, $0b, $08, $07, $0b, $11, $14, $11, $08, $00, $f1, $e0, $d1, $c0, $b7
1c6ef     B5 BB C1 C5 
1c6f3     CD D4 DE E5 
1c6f7     EB F1 F8 02 
1c6fb     0F 1A 21 25 | 	byte	$b5, $bb, $c1, $c5, $cd, $d4, $de, $e5, $eb, $f1, $f8, $02, $0f, $1a, $21, $25
1c6ff     22 1A 11 05 
1c703     01 FE FE FE 
1c707     FA F7 F5 F4 
1c70b     F5 FB 02 0A | 	byte	$22, $1a, $11, $05, $01, $fe, $fe, $fe, $fa, $f7, $f5, $f4, $f5, $fb, $02, $0a
1c70f     0B 0D 0B 08 
1c713     05 05 0B 0D 
1c717     08 02 FD FA 
1c71b     F8 F8 F5 F1 | 	byte	$0b, $0d, $0b, $08, $05, $05, $0b, $0d, $08, $02, $fd, $fa, $f8, $f8, $f5, $f1
1c71f     EE EE EE EE 
1c723     F0 F1 F5 FD 
1c727     07 15 24 34 
1c72b     3F 45 4A 47 | 	byte	$ee, $ee, $ee, $ee, $f0, $f1, $f5, $fd, $07, $15, $24, $34, $3f, $45, $4a, $47
1c72f     41 3A 2E 1F 
1c733     17 0E 0B 0A 
1c737     07 0A 0D 11 
1c73b     14 14 11 0B | 	byte	$41, $3a, $2e, $1f, $17, $0e, $0b, $0a, $07, $0a, $0d, $11, $14, $14, $11, $0b
1c73f     01 F8 F1 ED 
1c743     EA E8 E7 E7 
1c747     ED F5 FA FA 
1c74b     F5 F0 EA E2 | 	byte	$01, $f8, $f1, $ed, $ea, $e8, $e7, $e7, $ed, $f5, $fa, $fa, $f5, $f0, $ea, $e2
1c74f     DB D2 CA C2 
1c753     C0 C2 C4 C7 
1c757     CB D0 DB E7 
1c75b     F7 FE 0E 1B | 	byte	$db, $d2, $ca, $c2, $c0, $c2, $c4, $c7, $cb, $d0, $db, $e7, $f7, $fe, $0e, $1b
1c75f     1F 1F 1D 17 
1c763     11 0B 05 00 
1c767     FE FE 00 01 
1c76b     FD F7 F1 ED | 	byte	$1f, $1f, $1d, $17, $11, $0b, $05, $00, $fe, $fe, $00, $01, $fd, $f7, $f1, $ed
1c76f     E7 E2 E1 E4 
1c773     EB F4 FB FD 
1c777     FB FA FE 01 
1c77b     0A 0E 0B 02 | 	byte	$e7, $e2, $e1, $e4, $eb, $f4, $fb, $fd, $fb, $fa, $fe, $01, $0a, $0e, $0b, $02
1c77f     00 FE FE 01 
1c783     05 05 04 00 
1c787     FE FD 02 0E 
1c78b     1B 2A 34 3A | 	byte	$00, $fe, $fe, $01, $05, $05, $04, $00, $fe, $fd, $02, $0e, $1b, $2a, $34, $3a
1c78f     3A 35 35 35 
1c793     2E 25 1D 17 
1c797     14 15 1A 21 
1c79b     21 1F 17 0E | 	byte	$3a, $35, $35, $35, $2e, $25, $1d, $17, $14, $15, $1a, $21, $21, $1f, $17, $0e
1c79f     00 F7 F1 ED 
1c7a3     E8 E1 DE DB 
1c7a7     DA DB DD E0 
1c7ab     E4 E7 F0 FB | 	byte	$00, $f7, $f1, $ed, $e8, $e1, $de, $db, $da, $db, $dd, $e0, $e4, $e7, $f0, $fb
1c7af     0A 15 1E 22 
1c7b3     27 2A 2F 35 
1c7b7     37 31 25 1D 
1c7bb     17 0E 0B 05 | 	byte	$0a, $15, $1e, $22, $27, $2a, $2f, $35, $37, $31, $25, $1d, $17, $0e, $0b, $05
1c7bf     00 F4 EB E8 
1c7c3     EB ED ED ED 
1c7c7     EB E4 DD DB 
1c7cb     E1 EA EE F0 | 	byte	$00, $f4, $eb, $e8, $eb, $ed, $ed, $ed, $eb, $e4, $dd, $db, $e1, $ea, $ee, $f0
1c7cf     F2 FA 01 08 
1c7d3     0D 15 17 11 
1c7d7     07 00 F7 EE 
1c7db     E8 E2 E1 E2 | 	byte	$f2, $fa, $01, $08, $0d, $15, $17, $11, $07, $00, $f7, $ee, $e8, $e2, $e1, $e2
1c7df     E5 EA F1 FD 
1c7e3     0A 1B 2A 32 
1c7e7     35 31 2E 2E 
1c7eb     2E 25 1A 0E | 	byte	$e5, $ea, $f1, $fd, $0a, $1b, $2a, $32, $35, $31, $2e, $2e, $2e, $25, $1a, $0e
1c7ef     02 FA EE E4 
1c7f3     E4 EB F2 F7 
1c7f7     F7 F4 EA E7 
1c7fb     EA F2 FB FD | 	byte	$02, $fa, $ee, $e4, $e4, $eb, $f2, $f7, $f7, $f4, $ea, $e7, $ea, $f2, $fb, $fd
1c7ff     FE 01 02 FB 
1c803     F7 F5 F7 FB 
1c807     05 0E 0D 0B 
1c80b     08 05 07 0B | 	byte	$fe, $01, $02, $fb, $f7, $f5, $f7, $fb, $05, $0e, $0d, $0b, $08, $05, $07, $0b
1c80f     11 14 12 0E 
1c813     08 05 07 07 
1c817     05 05 0A 12 
1c81b     18 18 12 0F | 	byte	$11, $14, $12, $0e, $08, $05, $07, $07, $05, $05, $0a, $12, $18, $18, $12, $0f
1c81f     11 15 1A 14 
1c823     0B 07 02 00 
1c827     FD F4 ED E7 
1c82b     E2 E1 DD DE | 	byte	$11, $15, $1a, $14, $0b, $07, $02, $00, $fd, $f4, $ed, $e7, $e2, $e1, $dd, $de
1c82f     E1 E7 EB EE 
1c833     F1 F5 FA FB 
1c837     FA F7 F5 F2 
1c83b     EE E8 E5 E5 | 	byte	$e1, $e7, $eb, $ee, $f1, $f5, $fa, $fb, $fa, $f7, $f5, $f2, $ee, $e8, $e5, $e5
1c83f     E7 EB F0 F1 
1c843     F1 F2 F4 F4 
1c847     F5 F5 F4 F1 
1c84b     EE F2 F8 04 | 	byte	$e7, $eb, $f0, $f1, $f1, $f2, $f4, $f4, $f5, $f5, $f4, $f1, $ee, $f2, $f8, $04
1c84f     0D 11 14 18 
1c853     1F 24 2A 2E 
1c857     31 35 37 31 
1c85b     25 1A 0F 0D | 	byte	$0d, $11, $14, $18, $1f, $24, $2a, $2e, $31, $35, $37, $31, $25, $1a, $0f, $0d
1c85f     0E 0E 11 11 
1c863     08 FA F2 F7 
1c867     FE 07 08 05 
1c86b     02 FE 04 0A | 	byte	$0e, $0e, $11, $11, $08, $fa, $f2, $f7, $fe, $07, $08, $05, $02, $fe, $04, $0a
1c86f     02 F7 E8 E2 
1c873     E0 DD E1 E7 
1c877     F0 F2 F0 F4 
1c87b     FB FB FB FD | 	byte	$02, $f7, $e8, $e2, $e0, $dd, $e1, $e7, $f0, $f2, $f0, $f4, $fb, $fb, $fb, $fd
1c87f     FE 00 02 07 
1c883     0F 1B 27 2B 
1c887     28 22 17 0D 
1c88b     02 F7 EE EA | 	byte	$fe, $00, $02, $07, $0f, $1b, $27, $2b, $28, $22, $17, $0d, $02, $f7, $ee, $ea
1c88f     E7 E7 E8 E2 
1c893     DA D8 DA DD 
1c897     DB DE E5 EE 
1c89b     FD 0D 1A 22 | 	byte	$e7, $e7, $e8, $e2, $da, $d8, $da, $dd, $db, $de, $e5, $ee, $fd, $0d, $1a, $22
1c89f     27 28 27 24 
1c8a3     1F 14 0B 0E 
1c8a7     1A 22 24 21 
1c8ab     1F 1E 1E 1E | 	byte	$27, $28, $27, $24, $1f, $14, $0b, $0e, $1a, $22, $24, $21, $1f, $1e, $1e, $1e
1c8af     1A 14 0E 07 
1c8b3     00 EE E0 D4 
1c8b7     C7 C0 C1 CA 
1c8bb     DA ED F8 02 | 	byte	$1a, $14, $0e, $07, $00, $ee, $e0, $d4, $c7, $c0, $c1, $ca, $da, $ed, $f8, $02
1c8bf     05 05 02 FE 
1c8c3     F7 F4 F8 FE 
1c8c7     07 0B 12 18 
1c8cb     1D 17 12 0E | 	byte	$05, $05, $02, $fe, $f7, $f4, $f8, $fe, $07, $0b, $12, $18, $1d, $17, $12, $0e
1c8cf     0D 08 05 0A 
1c8d3     12 18 1A 1B 
1c8d7     1D 1A 17 14 
1c8db     14 14 11 08 | 	byte	$0d, $08, $05, $0a, $12, $18, $1a, $1b, $1d, $1a, $17, $14, $14, $14, $11, $08
1c8df     FA EB E5 E7 
1c8e3     E5 E8 F0 F7 
1c8e7     F8 FA FD FB 
1c8eb     F7 F4 F2 F5 | 	byte	$fa, $eb, $e5, $e7, $e5, $e8, $f0, $f7, $f8, $fa, $fd, $fb, $f7, $f4, $f2, $f5
1c8ef     FE 0E 1E 2D 
1c8f3     38 3D 3A 2E 
1c8f7     1D 05 F7 E8 
1c8fb     E0 D7 D5 D5 | 	byte	$fe, $0e, $1e, $2d, $38, $3d, $3a, $2e, $1d, $05, $f7, $e8, $e0, $d7, $d5, $d5
1c8ff     D8 DD E7 F2 
1c903     FE 07 0B 12 
1c907     18 18 11 0B 
1c90b     07 01 01 07 | 	byte	$d8, $dd, $e7, $f2, $fe, $07, $0b, $12, $18, $18, $11, $0b, $07, $01, $01, $07
1c90f     0F 1B 28 32 
1c913     3A 3B 34 2A 
1c917     1A 08 F4 E1 
1c91b     D4 CB C2 BB | 	byte	$0f, $1b, $28, $32, $3a, $3b, $34, $2a, $1a, $08, $f4, $e1, $d4, $cb, $c2, $bb
1c91f     BD CA DB ED 
1c923     F8 FA F8 F7 
1c927     FA FB FA F8 
1c92b     F8 FE 07 07 | 	byte	$bd, $ca, $db, $ed, $f8, $fa, $f8, $f7, $fa, $fb, $fa, $f8, $f8, $fe, $07, $07
1c92f     02 FD F7 F7 
1c933     F7 F1 EB E8 
1c937     E5 E2 E1 E2 
1c93b     E5 E7 E7 EB | 	byte	$02, $fd, $f7, $f7, $f7, $f1, $eb, $e8, $e5, $e2, $e1, $e2, $e5, $e7, $e7, $eb
1c93f     F1 F8 FE 08 
1c943     11 1A 1F 21 
1c947     1D 17 12 14 
1c94b     1E 27 2F 32 | 	byte	$f1, $f8, $fe, $08, $11, $1a, $1f, $21, $1d, $17, $12, $14, $1e, $27, $2f, $32
1c94f     2F 2E 2E 2B 
1c953     2B 28 22 17 
1c957     11 0B 07 05 
1c95b     05 02 FD F4 | 	byte	$2f, $2e, $2e, $2b, $2b, $28, $22, $17, $11, $0b, $07, $05, $05, $02, $fd, $f4
1c95f     EB E0 D7 D1 
1c963     CB C8 C8 CA 
1c967     CA C8 C8 C5 
1c96b     CA D0 DD ED | 	byte	$eb, $e0, $d7, $d1, $cb, $c8, $c8, $ca, $ca, $c8, $c8, $c5, $ca, $d0, $dd, $ed
1c96f     F8 02 0D 15 
1c973     18 17 11 0B 
1c977     08 0A 0E 15 
1c97b     1A 21 28 31 | 	byte	$f8, $02, $0d, $15, $18, $17, $11, $0b, $08, $0a, $0e, $15, $1a, $21, $28, $31
1c97f     38 3B 3E 3E 
1c983     3E 3E 3A 32 
1c987     28 1F 14 05 
1c98b     FB F8 FA FB | 	byte	$38, $3b, $3e, $3e, $3e, $3e, $3a, $32, $28, $1f, $14, $05, $fb, $f8, $fa, $fb
1c98f     FB FA F4 EB 
1c993     E7 E4 E1 DD 
1c997     DA DB E0 E5 
1c99b     E7 E7 E8 E8 | 	byte	$fb, $fa, $f4, $eb, $e7, $e4, $e1, $dd, $da, $db, $e0, $e5, $e7, $e7, $e8, $e8
1c99f     EA ED F1 F8 
1c9a3     FE 08 11 17 
1c9a7     1B 1A 17 11 
1c9ab     0F 11 12 11 | 	byte	$ea, $ed, $f1, $f8, $fe, $08, $11, $17, $1b, $1a, $17, $11, $0f, $11, $12, $11
1c9af     0E 0E 0E 0E 
1c9b3     0E          | 	byte	$0e[5]
1c9b4     0B 0B 07 00 
1c9b8     FA F1 EE EB 
1c9bc     E8 E4 E0 E1 
1c9c0     E2 E2 E1 E5 | 	byte	$0b, $0b, $07, $00, $fa, $f1, $ee, $eb, $e8, $e4, $e0, $e1, $e2, $e2, $e1, $e5
1c9c4     F1 FD 02 07 
1c9c8     05 02 FD F7 
1c9cc     EE E5 DD DA 
1c9d0     DB DE E2 E4 | 	byte	$f1, $fd, $02, $07, $05, $02, $fd, $f7, $ee, $e5, $dd, $da, $db, $de, $e2, $e4
1c9d4     EA F2 FE 0D 
1c9d8     15 1D 1A 11 
1c9dc     08 04 01 07 
1c9e0     0E 14 15 14 | 	byte	$ea, $f2, $fe, $0d, $15, $1d, $1a, $11, $08, $04, $01, $07, $0e, $14, $15, $14
1c9e4     11 0D 05 04 
1c9e8     05 07 05 05 
1c9ec     07 08 08 0D 
1c9f0     15 24 2E 35 | 	byte	$11, $0d, $05, $04, $05, $07, $05, $05, $07, $08, $08, $0d, $15, $24, $2e, $35
1c9f4     3A 3A 37 2E 
1c9f8     24 17 0D 0D 
1c9fc     12 18 1B 1B 
1ca00     1B 1E 22 24 | 	byte	$3a, $3a, $37, $2e, $24, $17, $0d, $0d, $12, $18, $1b, $1b, $1b, $1e, $22, $24
1ca04     1F 18 11 05 
1ca08     00 FE FE FA 
1ca0c     F4 E8 E0 DA 
1ca10     D7 D7 DB E1 | 	byte	$1f, $18, $11, $05, $00, $fe, $fe, $fa, $f4, $e8, $e0, $da, $d7, $d7, $db, $e1
1ca14     E4 E5 E8 EA 
1ca18     EA EB EE F7 
1ca1c     04 15 22 2D 
1ca20     31 2E 28 1E | 	byte	$e4, $e5, $e8, $ea, $ea, $eb, $ee, $f7, $04, $15, $22, $2d, $31, $2e, $28, $1e
1ca24     12 08 00 FB 
1ca28     F7 F1 EB E7 
1ca2c     EA F2 FD 05 
1ca30     0B 0B 02 FB | 	byte	$12, $08, $00, $fb, $f7, $f1, $eb, $e7, $ea, $f2, $fd, $05, $0b, $0b, $02, $fb
1ca34     F5 F1 F0 EE 
1ca38     EB E5 DD D7 
1ca3c     D1 D0 D0 CE 
1ca40     D2 D8 DE E1 | 	byte	$f5, $f1, $f0, $ee, $eb, $e5, $dd, $d7, $d1, $d0, $d0, $ce, $d2, $d8, $de, $e1
1ca44     E2 E5 EA F1 
1ca48     F7 FD 02 0D 
1ca4c     15 1B 1F 25 
1ca50     2D 31 35 3B | 	byte	$e2, $e5, $ea, $f1, $f7, $fd, $02, $0d, $15, $1b, $1f, $25, $2d, $31, $35, $3b
1ca54     41 3F 3B 34 
1ca58     2E 25 17 0B 
1ca5c     00 F7 F1 ED 
1ca60     E7 E2 E2 E5 | 	byte	$41, $3f, $3b, $34, $2e, $25, $17, $0b, $00, $f7, $f1, $ed, $e7, $e2, $e2, $e5
1ca64     EA EE F0 F4 
1ca68     FB 05 12 1B 
1ca6c     22 25 25 22 
1ca70     1F 1D 1D 1A | 	byte	$ea, $ee, $f0, $f4, $fb, $05, $12, $1b, $22, $25, $25, $22, $1f, $1d, $1d, $1a
1ca74     14 0D 04 F5 
1ca78     EA E2 E2 E5 
1ca7c     EA ED EA E7 
1ca80     E7 ED F4 F5 | 	byte	$14, $0d, $04, $f5, $ea, $e2, $e2, $e5, $ea, $ed, $ea, $e7, $e7, $ed, $f4, $f5
1ca84     F0 E8 E4 E7 
1ca88     EB EE ED EA 
1ca8c     E8 EA E5 E1 
1ca90     DD DB E0 E5 | 	byte	$f0, $e8, $e4, $e7, $eb, $ee, $ed, $ea, $e8, $ea, $e5, $e1, $dd, $db, $e0, $e5
1ca94     ED F8 FE 0A 
1ca98     15 21 2D 35 
1ca9c     3B 3D 3D 3A 
1caa0     37 2F 2A 22 | 	byte	$ed, $f8, $fe, $0a, $15, $21, $2d, $35, $3b, $3d, $3d, $3a, $37, $2f, $2a, $22
1caa4     1A 11 05 F7 
1caa8     E4 D7 D4 D4 
1caac     D5 D1 CE CE 
1cab0     CE D4 DB E0 | 	byte	$1a, $11, $05, $f7, $e4, $d7, $d4, $d4, $d5, $d1, $ce, $ce, $ce, $d4, $db, $e0
1cab4     E5 EA ED ED 
1cab8     ED ED F2 F8 
1cabc     FD 04 0E 18 
1cac0     21 2A 34 3B | 	byte	$e5, $ea, $ed, $ed, $ed, $ed, $f2, $f8, $fd, $04, $0e, $18, $21, $2a, $34, $3b
1cac4     3F 3D 37 28 
1cac8     17 02 F5 ED 
1cacc     EB ED EE F1 
1cad0     F7 FE 0D 1B | 	byte	$3f, $3d, $37, $28, $17, $02, $f5, $ed, $eb, $ed, $ee, $f1, $f7, $fe, $0d, $1b
1cad4     24 25 1D 11 
1cad8     02 FD F8 F7 
1cadc     F5 F2 F4 F8 
1cae0     FE 0B 15 1E | 	byte	$24, $25, $1d, $11, $02, $fd, $f8, $f7, $f5, $f2, $f4, $f8, $fe, $0b, $15, $1e
1cae4     25 2A 2B 28 
1cae8     1F 18 11 08 
1caec     05 07 0A 0E 
1caf0     15 17 17 14 | 	byte	$25, $2a, $2b, $28, $1f, $18, $11, $08, $05, $07, $0a, $0e, $15, $17, $17, $14
1caf4     17 18 14 0D 
1caf8     05 02 02 01 
1cafc     FA F0 E5 E0 
1cb00     E0 E1 DD D4 | 	byte	$17, $18, $14, $0d, $05, $02, $02, $01, $fa, $f0, $e5, $e0, $e0, $e1, $dd, $d4
1cb04     CB C7 C5 C5 
1cb08     CD DB F0 04 
1cb0c     18 24 27 21 
1cb10     1A 14 0B 05 | 	byte	$cb, $c7, $c5, $c5, $cd, $db, $f0, $04, $18, $24, $27, $21, $1a, $14, $0b, $05
1cb14     00 FB F5 F2 
1cb18     F2 F4 F5 F8 
1cb1c     FE 0A 15 1E 
1cb20     22 25 1F 18 | 	byte	$00, $fb, $f5, $f2, $f2, $f4, $f5, $f8, $fe, $0a, $15, $1e, $22, $25, $1f, $18
1cb24     12 0B 00 F0 
1cb28     E7 E4 E5 EA 
1cb2c     F0 F8 FE 0F 
1cb30     1B 22 27 27 | 	byte	$12, $0b, $00, $f0, $e7, $e4, $e5, $ea, $f0, $f8, $fe, $0f, $1b, $22, $27, $27
1cb34     22 1D 14 08 
1cb38     00 F4 E8 E0 
1cb3c     D4 CE CA C7 
1cb40     CA D5 E4 F0 | 	byte	$22, $1d, $14, $08, $00, $f4, $e8, $e0, $d4, $ce, $ca, $c7, $ca, $d5, $e4, $f0
1cb44     F8 FD FD FA 
1cb48     F8 F4 F0 F1 
1cb4c     F5 FA FB F7 
1cb50     F5 FB 05 0F | 	byte	$f8, $fd, $fd, $fa, $f8, $f4, $f0, $f1, $f5, $fa, $fb, $f7, $f5, $fb, $05, $0f
1cb54     15 17 1A 1F 
1cb58     24 27 2A 2E 
1cb5c     2E 25 1A 14 
1cb60     0F 11 18 1E | 	byte	$15, $17, $1a, $1f, $24, $27, $2a, $2e, $2e, $25, $1a, $14, $0f, $11, $18, $1e
1cb64     1F 18 0D 02 
1cb68     FA F4 F1 F0 
1cb6c     F2 F5 F8 FE 
1cb70     0E 1B 24 2A | 	byte	$1f, $18, $0d, $02, $fa, $f4, $f1, $f0, $f2, $f5, $f8, $fe, $0e, $1b, $24, $2a
1cb74     2B 2B 25 1A 
1cb78     11 08 02 00 
1cb7c     FD FA FB FA 
1cb80     F7 F5 F7 FB | 	byte	$2b, $2b, $25, $1a, $11, $08, $02, $00, $fd, $fa, $fb, $fa, $f7, $f5, $f7, $fb
1cb84     F8 F1 EB E8 
1cb88     E5 E2 E0 DD 
1cb8c     DD E0 E7 ED 
1cb90     F1 F2 F4 F8 | 	byte	$f8, $f1, $eb, $e8, $e5, $e2, $e0, $dd, $dd, $e0, $e7, $ed, $f1, $f2, $f4, $f8
1cb94     FD FE 05 0E 
1cb98     12 11 0E 08 
1cb9c     00 F4 EA E5 
1cba0     E2 E1 E4 EB | 	byte	$fd, $fe, $05, $0e, $12, $11, $0e, $08, $00, $f4, $ea, $e5, $e2, $e1, $e4, $eb
1cba4     F4 FB FE 04 
1cba8     0A 0E 14 18 
1cbac     1D 22 22 1A 
1cbb0     0E 00 F4 E8 | 	byte	$f4, $fb, $fe, $04, $0a, $0e, $14, $18, $1d, $22, $22, $1a, $0e, $00, $f4, $e8
1cbb4     E0 D7 D2 D5 
1cbb8     DE E7 F0 F7 
1cbbc     FB FD FB FB 
1cbc0     FE 0B 17 21 | 	byte	$e0, $d7, $d2, $d5, $de, $e7, $f0, $f7, $fb, $fd, $fb, $fb, $fe, $0b, $17, $21
1cbc4     27 22 18 0D 
1cbc8     05 02 00 F8 
1cbcc     F5 FB 02 0A 
1cbd0     0A 08 08 0B | 	byte	$27, $22, $18, $0d, $05, $02, $00, $f8, $f5, $fb, $02, $0a, $0a, $08, $08, $0b
1cbd4     0F 14 17 11 
1cbd8     05 FB F7 FD 
1cbdc     0D 1B 28 31 
1cbe0     31 2E 22 1A | 	byte	$0f, $14, $17, $11, $05, $fb, $f7, $fd, $0d, $1b, $28, $31, $31, $2e, $22, $1a
1cbe4     17 14 0F 0B 
1cbe8     07 00 FA F1 
1cbec     EE F1 F4 F4 
1cbf0     EE EB E8 E5 | 	byte	$17, $14, $0f, $0b, $07, $00, $fa, $f1, $ee, $f1, $f4, $f4, $ee, $eb, $e8, $e5
1cbf4     E7 F1 FE 07 
1cbf8     12 1B 1F 1F 
1cbfc     1A 12 0B 01 
1cc00     F8 F2 F0 EB | 	byte	$e7, $f1, $fe, $07, $12, $1b, $1f, $1f, $1a, $12, $0b, $01, $f8, $f2, $f0, $eb
1cc04     EA E8 E5 E1 
1cc08     E2 EA ED E8 
1cc0c     E4 E2 EA F8 
1cc10     07 14 1A 1B | 	byte	$ea, $e8, $e5, $e1, $e2, $ea, $ed, $e8, $e4, $e2, $ea, $f8, $07, $14, $1a, $1b
1cc14     17 14 14 14 
1cc18     14 11 0B 00 
1cc1c     F8 F1 EA E2 
1cc20     DA DA DD E1 | 	byte	$17, $14, $14, $14, $14, $11, $0b, $00, $f8, $f1, $ea, $e2, $da, $da, $dd, $e1
1cc24     E5 E4 DD DA 
1cc28     DB E7 F2 FE 
1cc2c     07 12 1A 1D 
1cc30     1D 1B 17 11 | 	byte	$e5, $e4, $dd, $da, $db, $e7, $f2, $fe, $07, $12, $1a, $1d, $1d, $1b, $17, $11
1cc34     05 FD F4 F1 
1cc38     EE EE F0 F4 
1cc3c     FE 0A 1B 25 
1cc40     2D 2E 31 35 | 	byte	$05, $fd, $f4, $f1, $ee, $ee, $f0, $f4, $fe, $0a, $1b, $25, $2d, $2e, $31, $35
1cc44     34 2E 27 1F 
1cc48     1D 1D 1F 22 
1cc4c     22 1E 17 0B 
1cc50     05 05 0A 0B | 	byte	$34, $2e, $27, $1f, $1d, $1d, $1f, $22, $22, $1e, $17, $0b, $05, $05, $0a, $0b
1cc54     0B 04 00 FE 
1cc58     01 05 0A 0E 
1cc5c     15 1A 1D 1D 
1cc60     1B 17 0B 00 | 	byte	$0b, $04, $00, $fe, $01, $05, $0a, $0e, $15, $1a, $1d, $1d, $1b, $17, $0b, $00
1cc64     F4 E8 DD D4 
1cc68     D0 CB CA C8 
1cc6c     C8 D0 D7 E1 
1cc70     ED F7 FA FD | 	byte	$f4, $e8, $dd, $d4, $d0, $cb, $ca, $c8, $c8, $d0, $d7, $e1, $ed, $f7, $fa, $fd
1cc74     F8 F4 F4 F1 
1cc78     EE E7 E1 E2 
1cc7c     EA F5 FE 08 
1cc80     0F 15 1A 21 | 	byte	$f8, $f4, $f4, $f1, $ee, $e7, $e1, $e2, $ea, $f5, $fe, $08, $0f, $15, $1a, $21
1cc84     27 2B 31 35 
1cc88     37 35 35 31 
1cc8c     2E 22 17 0B 
1cc90     00 F4 ED E8 | 	byte	$27, $2b, $31, $35, $37, $35, $35, $31, $2e, $22, $17, $0b, $00, $f4, $ed, $e8
1cc94     E2 E0 DD DD 
1cc98     DD DD E0 E4 
1cc9c     ED F4 F8 FA 
1cca0     FA FB 01 0E | 	byte	$e2, $e0, $dd, $dd, $dd, $dd, $e0, $e4, $ed, $f4, $f8, $fa, $fa, $fb, $01, $0e
1cca4     1A 24 25 22 
1cca8     1D 18 15 14 
1ccac     17 1B 1D 1A 
1ccb0     18 17 14 0D | 	byte	$1a, $24, $25, $22, $1d, $18, $15, $14, $17, $1b, $1d, $1a, $18, $17, $14, $0d
1ccb4     08 02 FA EE 
1ccb8     E2 DD DA DD 
1ccbc     E1 E5 E8 EB 
1ccc0     E8 E0 DA D8 | 	byte	$08, $02, $fa, $ee, $e2, $dd, $da, $dd, $e1, $e5, $e8, $eb, $e8, $e0, $da, $d8
1ccc4     DE E5 ED F2 
1ccc8     F4 F4 F0 EB 
1cccc     EB EE F2 F4 
1ccd0     F4 F8 FE 07 | 	byte	$de, $e5, $ed, $f2, $f4, $f4, $f0, $eb, $eb, $ee, $f2, $f4, $f4, $f8, $fe, $07
1ccd4     0B 08 00 F8 
1ccd8     F4 F4 F1 F5 
1ccdc     FE 07 0D 0B 
1cce0     0B 0B 0E 17 | 	byte	$0b, $08, $00, $f8, $f4, $f4, $f1, $f5, $fe, $07, $0d, $0b, $0b, $0b, $0e, $17
1cce4     1E 1B 17 12 
1cce8     0E 08 02 FE 
1ccec     F7 F7 F8 FB 
1ccf0     FE 08 14 1D | 	byte	$1e, $1b, $17, $12, $0e, $08, $02, $fe, $f7, $f7, $f8, $fb, $fe, $08, $14, $1d
1ccf4     22 27 2B 2F 
1ccf8     32 32 34 34 
1ccfc     2E 2A 1D 0E 
1cd00     FA E8 E0 DE | 	byte	$22, $27, $2b, $2f, $32, $32, $34, $34, $2e, $2a, $1d, $0e, $fa, $e8, $e0, $de
1cd04     E0 E5 EB F0 
1cd08     F0 EE F2 FA 
1cd0c     02 05 04 FD 
1cd10     F7 F5 F5 F4 | 	byte	$e0, $e5, $eb, $f0, $f0, $ee, $f2, $fa, $02, $05, $04, $fd, $f7, $f5, $f5, $f4
1cd14     F7 F7 F7 F7 
1cd18     F7 F7       | 	byte	$f7[6]
1cd1a     FA FE 04 05 
1cd1e     00 FB FA FB 
1cd22     FA F4 ED EB 
1cd26     EB F1 F4 F4 | 	byte	$fa, $fe, $04, $05, $00, $fb, $fa, $fb, $fa, $f4, $ed, $eb, $eb, $f1, $f4, $f4
1cd2a     F1 F4 F7 FA 
1cd2e     FA FD 02 0D 
1cd32     18 1F 21 1F 
1cd36     1E 22 2A 2F | 	byte	$f1, $f4, $f7, $fa, $fa, $fd, $02, $0d, $18, $1f, $21, $1f, $1e, $22, $2a, $2f
1cd3a     32 31 2E 22 
1cd3e     17 02 F4 E5 
1cd42     DB D7 DA E0 
1cd46     E7 ED F2 F8 | 	byte	$32, $31, $2e, $22, $17, $02, $f4, $e5, $db, $d7, $da, $e0, $e7, $ed, $f2, $f8
1cd4a     FE 0A 1A 27 
1cd4e     2F 34 31 28 
1cd52     1D 11 08 02 
1cd56     00 FE FE FD | 	byte	$fe, $0a, $1a, $27, $2f, $34, $31, $28, $1d, $11, $08, $02, $00, $fe, $fe, $fd
1cd5a     FD FE 07 0F 
1cd5e     15 1A 1A 15 
1cd62     0E 0B 08 08 
1cd66     08 02 F7 EB | 	byte	$fd, $fe, $07, $0f, $15, $1a, $1a, $15, $0e, $0b, $08, $08, $08, $02, $f7, $eb
1cd6a     E4 E0 DD D7 
1cd6e     D5 DA E1 EA 
1cd72     F0 F1 F0 F0 
1cd76     F1 F1 F1 EE | 	byte	$e4, $e0, $dd, $d7, $d5, $da, $e1, $ea, $f0, $f1, $f0, $f0, $f1, $f1, $f1, $ee
1cd7a     E8 E5 E4 E4 
1cd7e     E7 F0 F8 FE 
1cd82     08 0F 15 18 
1cd86     17 11 0B 0B | 	byte	$e8, $e5, $e4, $e4, $e7, $f0, $f8, $fe, $08, $0f, $15, $18, $17, $11, $0b, $0b
1cd8a     0E 11 11 12 
1cd8e     17 21 28 2E 
1cd92     31 31 2F 28 
1cd96     1E 11 05 F7 | 	byte	$0e, $11, $11, $12, $17, $21, $28, $2e, $31, $31, $2f, $28, $1e, $11, $05, $f7
1cd9a     E8 E1 E0 E5 
1cd9e     EE F5 FB 02 
1cda2     0E 17 1F 24 
1cda6     22 1E 1A 14 | 	byte	$e8, $e1, $e0, $e5, $ee, $f5, $fb, $02, $0e, $17, $1f, $24, $22, $1e, $1a, $14
1cdaa     0E 07 00 FA 
1cdae     F4 E8 DD D2 
1cdb2     CE CE CE D0 
1cdb6     D5 E4 EE F7 | 	byte	$0e, $07, $00, $fa, $f4, $e8, $dd, $d2, $ce, $ce, $ce, $d0, $d5, $e4, $ee, $f7
1cdba     FD 01 02 02 
1cdbe     01 01 FE FD 
1cdc2     FD FE FE FA 
1cdc6     F5 F5 F7 F8 | 	byte	$fd, $01, $02, $02, $01, $01, $fe, $fd, $fd, $fe, $fe, $fa, $f5, $f5, $f7, $f8
1cdca     F7 F1 EA E1 
1cdce     DA D7 DB E1 
1cdd2     EB F7 05 15 
1cdd6     1F 2A 2F 2F | 	byte	$f7, $f1, $ea, $e1, $da, $d7, $db, $e1, $eb, $f7, $05, $15, $1f, $2a, $2f, $2f
1cdda     28 1F 1E 1F 
1cdde     25 28 2B 28 
1cde2     22 17 0B 00 
1cde6     F8 F4 EE EB | 	byte	$28, $1f, $1e, $1f, $25, $28, $2b, $28, $22, $17, $0b, $00, $f8, $f4, $ee, $eb
1cdea     EA EA E7 E2 
1cdee     DD DB DA DB 
1cdf2     DE E7 F1 FE 
1cdf6     08 11 14 15 | 	byte	$ea, $ea, $e7, $e2, $dd, $db, $da, $db, $de, $e7, $f1, $fe, $08, $11, $14, $15
1cdfa     1A 21 27 28 
1cdfe     25 1F 17 11 
1ce02     0B 0A 08 05 
1ce06     00 F8 F1 F0 | 	byte	$1a, $21, $27, $28, $25, $1f, $17, $11, $0b, $0a, $08, $05, $00, $f8, $f1, $f0
1ce0a     F1 F2 F2 F1 
1ce0e     EE EB E5 E1 
1ce12     DD DD DB DE 
1ce16     E2 EB F7 FE | 	byte	$f1, $f2, $f2, $f1, $ee, $eb, $e5, $e1, $dd, $dd, $db, $de, $e2, $eb, $f7, $fe
1ce1a     08 12 1B 22 
1ce1e     22 1A 11 0B 
1ce22     08 05 02 05 
1ce26     0A 12 18 1B | 	byte	$08, $12, $1b, $22, $22, $1a, $11, $0b, $08, $05, $02, $05, $0a, $12, $18, $1b
1ce2a     1A 14 0D 05 
1ce2e     00 FE FD FA 
1ce32     F7 F1 F1 F2 
1ce36     FB 02 08 0A | 	byte	$1a, $14, $0d, $05, $00, $fe, $fd, $fa, $f7, $f1, $f1, $f2, $fb, $02, $08, $0a
1ce3a     0B 08 05 07 
1ce3e     08 0D 11 14 
1ce42     14 11 0E 05 
1ce46     FE FA FE 05 | 	byte	$0b, $08, $05, $07, $08, $0d, $11, $14, $14, $11, $0e, $05, $fe, $fa, $fe, $05
1ce4a     0D 0F 0E 0A 
1ce4e     07 05 01 FB 
1ce52     F4 EE EB EA 
1ce56     EB ED F0 F7 | 	byte	$0d, $0f, $0e, $0a, $07, $05, $01, $fb, $f4, $ee, $eb, $ea, $eb, $ed, $f0, $f7
1ce5a     FE 0A 12 15 
1ce5e     14 0E 08 02 
1ce62     FB F5 F7 FD 
1ce66     02 08 07 07 | 	byte	$fe, $0a, $12, $15, $14, $0e, $08, $02, $fb, $f5, $f7, $fd, $02, $08, $07, $07
1ce6a     05 00 FD F8 
1ce6e     F7 F7 F4 F4 
1ce72     F8 FE 0A 11 
1ce76     15 18 17 11 | 	byte	$05, $00, $fd, $f8, $f7, $f7, $f4, $f4, $f8, $fe, $0a, $11, $15, $18, $17, $11
1ce7a     0E 0D 0D 0B 
1ce7e     08 02 FE FB 
1ce82     FA F7 F4 F7 
1ce86     FD 07 0D 11 | 	byte	$0e, $0d, $0d, $0b, $08, $02, $fe, $fb, $fa, $f7, $f4, $f7, $fd, $07, $0d, $11
1ce8a     15 1A 1F 22 
1ce8e     24 22 1D 17 
1ce92     14 0F 0B 02 
1ce96     FA F4 F0 EB | 	byte	$15, $1a, $1f, $22, $24, $22, $1d, $17, $14, $0f, $0b, $02, $fa, $f4, $f0, $eb
1ce9a     E4 DD D7 D2 
1ce9e     D4 D5 DA E0 
1cea2     EA F2 FE 0D 
1cea6     18 21 24 22 | 	byte	$e4, $dd, $d7, $d2, $d4, $d5, $da, $e0, $ea, $f2, $fe, $0d, $18, $21, $24, $22
1ceaa     1A 11 0D 0B 
1ceae     05 04 01 FD 
1ceb2     F8 FA FB FE 
1ceb6     07 11 1A 21 | 	byte	$1a, $11, $0d, $0b, $05, $04, $01, $fd, $f8, $fa, $fb, $fe, $07, $11, $1a, $21
1ceba     24 27 22 1D 
1cebe     17 0E 08 02 
1cec2     FA F5 EE EA 
1cec6     E4 E0 DE E0 | 	byte	$24, $27, $22, $1d, $17, $0e, $08, $02, $fa, $f5, $ee, $ea, $e4, $e0, $de, $e0
1ceca     E5 EA ED EB 
1cece     E7 E2 E4 EA 
1ced2     F1 FA 02 0A 
1ced6     0F 18 1F 24 | 	byte	$e5, $ea, $ed, $eb, $e7, $e2, $e4, $ea, $f1, $fa, $02, $0a, $0f, $18, $1f, $24
1ceda     22 1D 11 0A 
1cede     01 FA F4 F1 
1cee2     F2 FA FE 02 
1cee6     00 F7 EE E8 | 	byte	$22, $1d, $11, $0a, $01, $fa, $f4, $f1, $f2, $fa, $fe, $02, $00, $f7, $ee, $e8
1ceea     E4 E2 E7 F0 
1ceee     F5 F5 F4 F2 
1cef2     F0 F2 F8 04 
1cef6     12 1E 24 25 | 	byte	$e4, $e2, $e7, $f0, $f5, $f5, $f4, $f2, $f0, $f2, $f8, $04, $12, $1e, $24, $25
1cefa     22 1D 14 0B 
1cefe     02 FD F2 E8 
1cf02     DE DA DB E5 
1cf06     F2 FE 0F 1B | 	byte	$22, $1d, $14, $0b, $02, $fd, $f2, $e8, $de, $da, $db, $e5, $f2, $fe, $0f, $1b
1cf0a     24 27 25 22 
1cf0e     18 0B 00 F1 
1cf12     E8 E2 DA D4 
1cf16     D1 D1 D1 D4 | 	byte	$24, $27, $25, $22, $18, $0b, $00, $f1, $e8, $e2, $da, $d4, $d1, $d1, $d1, $d4
1cf1a     DA E0 E7 F2 
1cf1e     FE 0B 15 1B 
1cf22     1E 21 22 25 
1cf26     2D 32 38 3B | 	byte	$da, $e0, $e7, $f2, $fe, $0b, $15, $1b, $1e, $21, $22, $25, $2d, $32, $38, $3b
1cf2a     3B 37 32 2E 
1cf2e     2B 28 22 1A 
1cf32     11 0B 05 00 
1cf36     F4 E5 D7 CD | 	byte	$3b, $37, $32, $2e, $2b, $28, $22, $1a, $11, $0b, $05, $00, $f4, $e5, $d7, $cd
1cf3a     C2 BB B8 BA 
1cf3e     C0 C8 D0 DB 
1cf42     E7 F2 FB 04 
1cf46     0D 14 1D 25 | 	byte	$c2, $bb, $b8, $ba, $c0, $c8, $d0, $db, $e7, $f2, $fb, $04, $0d, $14, $1d, $25
1cf4a     2B 31 37 37 
1cf4e     35 31 2E 22 
1cf52     12 05 F7 EB 
1cf56     E2 DD DA DD | 	byte	$2b, $31, $37, $37, $35, $31, $2e, $22, $12, $05, $f7, $eb, $e2, $dd, $da, $dd
1cf5a     E4 EB F0 F5 
1cf5e     FD 04 0D 14 
1cf62     1B 1D 17 0B 
1cf66     07 0A 0E 11 | 	byte	$e4, $eb, $f0, $f5, $fd, $04, $0d, $14, $1b, $1d, $17, $0b, $07, $0a, $0e, $11
1cf6a     14 17 1D 21 
1cf6e     22 22 1A 0B 
1cf72     00 F1 E8 E4 
1cf76     E0 E1 E7 F0 | 	byte	$14, $17, $1d, $21, $22, $22, $1a, $0b, $00, $f1, $e8, $e4, $e0, $e1, $e7, $f0
1cf7a     F8 04 0F 18 
1cf7e     1B 18 11 05 
1cf82     FA F4 F5 FB 
1cf86     FB F7 F0 EB | 	byte	$f8, $04, $0f, $18, $1b, $18, $11, $05, $fa, $f4, $f5, $fb, $fb, $f7, $f0, $eb
1cf8a     EA F0 F7 FA 
1cf8e     F8 F8 F8 F7 
1cf92     F7 FE 0A 18 
1cf96     21 27 28 28 | 	byte	$ea, $f0, $f7, $fa, $f8, $f8, $f8, $f7, $f7, $fe, $0a, $18, $21, $27, $28, $28
1cf9a     25 1D 17 17 
1cf9e     17 18 17 14 
1cfa2     0B 02 FA F4 
1cfa6     EE E5 E0 D8 | 	byte	$25, $1d, $17, $17, $17, $18, $17, $14, $0b, $02, $fa, $f4, $ee, $e5, $e0, $d8
1cfaa     D1 CE D0 D8 
1cfae     E1 F1 FE 0D 
1cfb2     18 1E 21 1F 
1cfb6     1E 1B 17 15 | 	byte	$d1, $ce, $d0, $d8, $e1, $f1, $fe, $0d, $18, $1e, $21, $1f, $1e, $1b, $17, $15
1cfba     11 08 00 F4 
1cfbe     EB E5 E1 DD 
1cfc2     DD E0 EA F8 
1cfc6     05 11 1B 24 | 	byte	$11, $08, $00, $f4, $eb, $e5, $e1, $dd, $dd, $e0, $ea, $f8, $05, $11, $1b, $24
1cfca     2A 2B 24 1D 
1cfce     17 14 11 0E 
1cfd2     0B 02 FA F1 
1cfd6     E8 E4 E1 E2 | 	byte	$2a, $2b, $24, $1d, $17, $14, $11, $0e, $0b, $02, $fa, $f1, $e8, $e4, $e1, $e2
1cfda     E7 EA EE F1 
1cfde     F5 FD 02 01 
1cfe2     F7 EE E7 E7 
1cfe6     F0 FD 07 0E | 	byte	$e7, $ea, $ee, $f1, $f5, $fd, $02, $01, $f7, $ee, $e7, $e7, $f0, $fd, $07, $0e
1cfea     0F 0B 0A 08 
1cfee     0D 0F 0E 0B 
1cff2     08 00 F7 F1 
1cff6     F0 ED E8 E4 | 	byte	$0f, $0b, $0a, $08, $0d, $0f, $0e, $0b, $08, $00, $f7, $f1, $f0, $ed, $e8, $e4
1cffa     E4 E7 ED F8 
1cffe     04 0F 18 1A 
1d002     18 17 12 0B 
1d006     08 08 0F 1B | 	byte	$e4, $e7, $ed, $f8, $04, $0f, $18, $1a, $18, $17, $12, $0b, $08, $08, $0f, $1b
1d00a     27 2B 2A 24 
1d00e     1D 11 0B 0A 
1d012     08 05 00 F4 
1d016     E8 DD DA D7 | 	byte	$27, $2b, $2a, $24, $1d, $11, $0b, $0a, $08, $05, $00, $f4, $e8, $dd, $da, $d7
1d01a     D5 D7 DB DE 
1d01e     E4 EB F2 F8 
1d022     FE 04 07 04 
1d026     00 FD F4 F0 | 	byte	$d5, $d7, $db, $de, $e4, $eb, $f2, $f8, $fe, $04, $07, $04, $00, $fd, $f4, $f0
1d02a     ED EE EE F0 
1d02e     F1 F5 F7 F7 
1d032     FB FE 01 05 
1d036     05 04 05 07 | 	byte	$ed, $ee, $ee, $f0, $f1, $f5, $f7, $f7, $fb, $fe, $01, $05, $05, $04, $05, $07
1d03a     08 0B 0B 05 
1d03e     FE FB FE 08 
1d042     0F 15 17 12 
1d046     08 04 01 FE | 	byte	$08, $0b, $0b, $05, $fe, $fb, $fe, $08, $0f, $15, $17, $12, $08, $04, $01, $fe
1d04a     FD FD FB F8 
1d04e     F8 FD FE FD 
1d052     FE 04 08 0B 
1d056     0E 15 1E 27 | 	byte	$fd, $fd, $fb, $f8, $f8, $fd, $fe, $fd, $fe, $04, $08, $0b, $0e, $15, $1e, $27
1d05a     2E 2E 28 22 
1d05e     1F 1F 1D 17 
1d062     0F 05 FB F4 
1d066     F2 F1 F1 EE | 	byte	$2e, $2e, $28, $22, $1f, $1f, $1d, $17, $0f, $05, $fb, $f4, $f2, $f1, $f1, $ee
1d06a     F0 F2 F7 FA 
1d06e     FA FB FE 01 
1d072     07 05 02 02 
1d076     02 02 02 00 | 	byte	$f0, $f2, $f7, $fa, $fa, $fb, $fe, $01, $07, $05, $02, $02, $02, $02, $02, $00
1d07a     FE FD FE 02 
1d07e     0A 0E 0E 0A 
1d082     05 04 02 02 
1d086     00 FD FE 04 | 	byte	$fe, $fd, $fe, $02, $0a, $0e, $0e, $0a, $05, $04, $02, $02, $00, $fd, $fe, $04
1d08a     0D 15 1E 28 
1d08e     2F 31 2F 2E 
1d092     28 22 1D 17 
1d096     12 0E 0B 05 | 	byte	$0d, $15, $1e, $28, $2f, $31, $2f, $2e, $28, $22, $1d, $17, $12, $0e, $0b, $05
1d09a     00 FA F4 EE 
1d09e     E8 E5 E2 E0 
1d0a2     DD DA D1 CA 
1d0a6     C2 BE C0 C2 | 	byte	$00, $fa, $f4, $ee, $e8, $e5, $e2, $e0, $dd, $da, $d1, $ca, $c2, $be, $c0, $c2
1d0aa     C8 D0 D5 E0 
1d0ae     E7 F0 F8 FD 
1d0b2     02 0A 0F 18 
1d0b6     22 2B 2F 31 | 	byte	$c8, $d0, $d5, $e0, $e7, $f0, $f8, $fd, $02, $0a, $0f, $18, $22, $2b, $2f, $31
1d0ba     32 34 35 37 
1d0be     38 3A 3A 34 
1d0c2     2A 1E 18 14 
1d0c6     0F 0B 0B 0A | 	byte	$32, $34, $35, $37, $38, $3a, $3a, $34, $2a, $1e, $18, $14, $0f, $0b, $0b, $0a
1d0ca     05 00 F7 ED 
1d0ce     E7 E5 E7 EA 
1d0d2     ED EE F0 EE 
1d0d6     EB EA ED F0 | 	byte	$05, $00, $f7, $ed, $e7, $e5, $e7, $ea, $ed, $ee, $f0, $ee, $eb, $ea, $ed, $f0
1d0da     F4 F8 FD 02 
1d0de     07 0B 0F 11 
1d0e2     15 1B 1F 1D 
1d0e6     17 0D 01 FA | 	byte	$f4, $f8, $fd, $02, $07, $0b, $0f, $11, $15, $1b, $1f, $1d, $17, $0d, $01, $fa
1d0ea     F7 FA FE 02 
1d0ee     08 0B 0B 07 
1d0f2     02 00 FA F1 
1d0f6     E8 DD CB C0 | 	byte	$f7, $fa, $fe, $02, $08, $0b, $0b, $07, $02, $00, $fa, $f1, $e8, $dd, $cb, $c0
1d0fa     BA BD C2 CA 
1d0fe     D2 DB E1 E7 
1d102     EA EB ED F0 
1d106     F2 F4 F4 F5 | 	byte	$ba, $bd, $c2, $ca, $d2, $db, $e1, $e7, $ea, $eb, $ed, $f0, $f2, $f4, $f4, $f5
1d10a     F8 FE 05 0E 
1d10e     12 11 0E 07 
1d112     04 05 0B 11 
1d116     17 1D 1F 1E | 	byte	$f8, $fe, $05, $0e, $12, $11, $0e, $07, $04, $05, $0b, $11, $17, $1d, $1f, $1e
1d11a     1B 1A 1A 17 
1d11e     12 0E 0D 0B 
1d122     02 FD F7 F4 
1d126     EE EB E5 E1 | 	byte	$1b, $1a, $1a, $17, $12, $0e, $0d, $0b, $02, $fd, $f7, $f4, $ee, $eb, $e5, $e1
1d12a     DE E1 ED FB 
1d12e     08 11 15 18 
1d132     1D 1E 1A 11 
1d136     0B 04 01 FD | 	byte	$de, $e1, $ed, $fb, $08, $11, $15, $18, $1d, $1e, $1a, $11, $0b, $04, $01, $fd
1d13a     F8 F4 EE ED 
1d13e     F0 F8 FE 0A 
1d142     14 18 18 11 
1d146     0B 02 02 FD | 	byte	$f8, $f4, $ee, $ed, $f0, $f8, $fe, $0a, $14, $18, $18, $11, $0b, $02, $02, $fd
1d14a     F4 E8 E7 EA 
1d14e     F0 F2 F5 FB 
1d152     04 0D 12 15 
1d156     1B 1D 1A 14 | 	byte	$f4, $e8, $e7, $ea, $f0, $f2, $f5, $fb, $04, $0d, $12, $15, $1b, $1d, $1a, $14
1d15a     0B 05 00 FE 
1d15e     02 08 0A 07 
1d162     08 07 0A 0E 
1d166     15 1D 24 2D | 	byte	$0b, $05, $00, $fe, $02, $08, $0a, $07, $08, $07, $0a, $0e, $15, $1d, $24, $2d
1d16a     32 34 2E 22 
1d16e     17 0B 00 F8 
1d172     F4 F4 F2 F1 
1d176     F4 F5 F4 F1 | 	byte	$32, $34, $2e, $22, $17, $0b, $00, $f8, $f4, $f4, $f2, $f1, $f4, $f5, $f4, $f1
1d17a     EB E8 EB EE 
1d17e     EE F0 F5 FD 
1d182     04 0B 0E 0E 
1d186     08 07 07 0A | 	byte	$eb, $e8, $eb, $ee, $ee, $f0, $f5, $fd, $04, $0b, $0e, $0e, $08, $07, $07, $0a
1d18a     11 15 1A 18 
1d18e     14 0B 01 F7 
1d192     F0 E8 E4 E0 
1d196     E0 E2 EA ED | 	byte	$11, $15, $1a, $18, $14, $0b, $01, $f7, $f0, $e8, $e4, $e0, $e0, $e2, $ea, $ed
1d19a     F0 F1 F1 EE 
1d19e     EB EB EE F5 
1d1a2     FD 05 11 1A 
1d1a6     1D 1E 1D 1E | 	byte	$f0, $f1, $f1, $ee, $eb, $eb, $ee, $f5, $fd, $05, $11, $1a, $1d, $1e, $1d, $1e
1d1aa     1F 21 22 22 
1d1ae     1F 1E 21 21 
1d1b2     1A 11 05 00 
1d1b6     FB FA FD FD | 	byte	$1f, $21, $22, $22, $1f, $1e, $21, $21, $1a, $11, $05, $00, $fb, $fa, $fd, $fd
1d1ba     FD FD FA F5 
1d1be     EE EB E8 E7 
1d1c2     EA F1 F4 F2 
1d1c6     F0 EE EB EE | 	byte	$fd, $fd, $fa, $f5, $ee, $eb, $e8, $e7, $ea, $f1, $f4, $f2, $f0, $ee, $eb, $ee
1d1ca     F5 FD 04 0E 
1d1ce     17 1F 25 2B 
1d1d2     2F 2F 2F 2B 
1d1d6     25 1E 17 0E | 	byte	$f5, $fd, $04, $0e, $17, $1f, $25, $2b, $2f, $2f, $2f, $2b, $25, $1e, $17, $0e
1d1da     01 F4 EA E7 
1d1de     E7 E5 E2 DD 
1d1e2     D7 D2 D0 D2 
1d1e6     DD EB FB 07 | 	byte	$01, $f4, $ea, $e7, $e7, $e5, $e2, $dd, $d7, $d2, $d0, $d2, $dd, $eb, $fb, $07
1d1ea     0F 0F 0E 0E 
1d1ee     0E 0B 08 08 
1d1f2     08 07 02 00 
1d1f6     FE FD FE 04 | 	byte	$0f, $0f, $0e, $0e, $0e, $0b, $08, $08, $08, $07, $02, $00, $fe, $fd, $fe, $04
1d1fa     08 0E 11 0E 
1d1fe     0B 08 05 04 
1d202     02 04 04 04 
1d206     04 07 05 04 | 	byte	$08, $0e, $11, $0e, $0b, $08, $05, $04, $02, $04, $04, $04, $04, $07, $05, $04
1d20a     05 07 07 05 
1d20e     05 08 0B 11 
1d212     15 15 12 11 
1d216     12 12 11 0E | 	byte	$05, $07, $07, $05, $05, $08, $0b, $11, $15, $15, $12, $11, $12, $12, $11, $0e
1d21a     0B 08 00 F7 
1d21e     F0 F0 ED E8 
1d222     E2 DB D5 D4 
1d226     D5 D8 DB E0 | 	byte	$0b, $08, $00, $f7, $f0, $f0, $ed, $e8, $e2, $db, $d5, $d4, $d5, $d8, $db, $e0
1d22a     E7 ED F2 F4 
1d22e     F5 F2 EB EA 
1d232     ED F2 FA 04 
1d236     0D 15 1A 18 | 	byte	$e7, $ed, $f2, $f4, $f5, $f2, $eb, $ea, $ed, $f2, $fa, $04, $0d, $15, $1a, $18
1d23a     11 0D 08 08 
1d23e     08 0B 0B 0D 
1d242     11 14 18 1A 
1d246     1D 1F 24 27 | 	byte	$11, $0d, $08, $08, $08, $0b, $0b, $0d, $11, $14, $18, $1a, $1d, $1f, $24, $27
1d24a     22 1A 12 0E 
1d24e     0D 11 18 1E 
1d252     1D 17 11 0D 
1d256     08 05 00 F8 | 	byte	$22, $1a, $12, $0e, $0d, $11, $18, $1e, $1d, $17, $11, $0d, $08, $05, $00, $f8
1d25a     EE E8 E5 E2 
1d25e     DD D7 D4 D8 
1d262     E1 E7 EB EB 
1d266     EB E8 E2 DD | 	byte	$ee, $e8, $e5, $e2, $dd, $d7, $d4, $d8, $e1, $e7, $eb, $eb, $eb, $e8, $e2, $dd
1d26a     DE E4 EE F8 
1d26e     FE 02 02 FD 
1d272     F7 F7 F1 E8 
1d276     DD DB E1 EA | 	byte	$de, $e4, $ee, $f8, $fe, $02, $02, $fd, $f7, $f7, $f1, $e8, $dd, $db, $e1, $ea
1d27a     F2 FB 07 12 
1d27e     18 18 14 0E 
1d282     08 02 00 FE 
1d286     FE 04 08 0B | 	byte	$f2, $fb, $07, $12, $18, $18, $14, $0e, $08, $02, $00, $fe, $fe, $04, $08, $0b
1d28a     0F 14 17 17 
1d28e     12 0B 05 00 
1d292     FD F7 F4 F2 
1d296     F4 F7 F8 FA | 	byte	$0f, $14, $17, $17, $12, $0b, $05, $00, $fd, $f7, $f4, $f2, $f4, $f7, $f8, $fa
1d29a     FA FB FE 0B 
1d29e     18 22 2A 31 
1d2a2     32 2E 22 1D 
1d2a6     15 0E 05 FA | 	byte	$fa, $fb, $fe, $0b, $18, $22, $2a, $31, $32, $2e, $22, $1d, $15, $0e, $05, $fa
1d2aa     F0 EB EB F2 
1d2ae     FB 05 12 1F 
1d2b2     2A 2E 32 2E 
1d2b6     28 1A 0B 00 | 	byte	$f0, $eb, $eb, $f2, $fb, $05, $12, $1f, $2a, $2e, $32, $2e, $28, $1a, $0b, $00
1d2ba     FD FD FB FA 
1d2be     F8 FD FE 02 
1d2c2     05 02 FD F5 
1d2c6     EE EB EE F5 | 	byte	$fd, $fd, $fb, $fa, $f8, $fd, $fe, $02, $05, $02, $fd, $f5, $ee, $eb, $ee, $f5
1d2ca     FD FE 04 0A 
1d2ce     0D 11 0E 08 
1d2d2     00 F7 ED E5 
1d2d6     E1 E0 E1 E5 | 	byte	$fd, $fe, $04, $0a, $0d, $11, $0e, $08, $00, $f7, $ed, $e5, $e1, $e0, $e1, $e5
1d2da     ED F8 07 12 
1d2de     1A 1E 1F 1F 
1d2e2     1F 1D 1A 18 
1d2e6     17 0E 05 02 | 	byte	$ed, $f8, $07, $12, $1a, $1e, $1f, $1f, $1f, $1d, $1a, $18, $17, $0e, $05, $02
1d2ea     00 FE FD FD 
1d2ee     FD FD FE 02 
1d2f2     01 FA F4 F1 
1d2f6     EB EA EB F0 | 	byte	$00, $fe, $fd, $fd, $fd, $fd, $fe, $02, $01, $fa, $f4, $f1, $eb, $ea, $eb, $f0
1d2fa     F7 FA FA F7 
1d2fe     F4 F4 F2 F4 
1d302     FD 07 14 21 
1d306     2D 38 3E 3E | 	byte	$f7, $fa, $fa, $f7, $f4, $f4, $f2, $f4, $fd, $07, $14, $21, $2d, $38, $3e, $3e
1d30a     37 2E 1E 11 
1d30e     08 08 08 07 
1d312     04 00 F7 ED 
1d316     E2 DD DD E1 | 	byte	$37, $2e, $1e, $11, $08, $08, $08, $07, $04, $00, $f7, $ed, $e2, $dd, $dd, $e1
1d31a     E7 F0 F0 EB 
1d31e     E2 DB D5 D4 
1d322     D8 E1 EB F5 
1d326     FE 04 04 00 | 	byte	$e7, $f0, $f0, $eb, $e2, $db, $d5, $d4, $d8, $e1, $eb, $f5, $fe, $04, $04, $00
1d32a     FD FB FA FA 
1d32e     FE 05 11 1D 
1d332     2A 32 37 34 
1d336     2E 1F 11 05 | 	byte	$fd, $fb, $fa, $fa, $fe, $05, $11, $1d, $2a, $32, $37, $34, $2e, $1f, $11, $05
1d33a     02 07 0A 0B 
1d33e     0B 05 02 FE 
1d342     FA F7 F4 F4 
1d346     F4 F1 F0 EE | 	byte	$02, $07, $0a, $0b, $0b, $05, $02, $fe, $fa, $f7, $f4, $f4, $f4, $f1, $f0, $ee
1d34a     EB E8 E4 E5 
1d34e     ED F8 04 0D 
1d352     0D 08 00 F4 
1d356     E8 DA CE C8 | 	byte	$eb, $e8, $e4, $e5, $ed, $f8, $04, $0d, $0d, $08, $00, $f4, $e8, $da, $ce, $c8
1d35a     C8 CD D8 E7 
1d35e     F8 0A 1B 27 
1d362     2B 25 1A 0E 
1d366     00 F5 EE F0 | 	byte	$c8, $cd, $d8, $e7, $f8, $0a, $1b, $27, $2b, $25, $1a, $0e, $00, $f5, $ee, $f0
1d36a     F8 FE 0A 0D 
1d36e     0B 07 04 05 
1d372     05 04 04 0A 
1d376     0F 12 0E 0B | 	byte	$f8, $fe, $0a, $0d, $0b, $07, $04, $05, $05, $04, $04, $0a, $0f, $12, $0e, $0b
1d37a     05 FD F0 E8 
1d37e     E8 EA ED F7 
1d382     FE 0E 1A 1D 
1d386     1A 0E 00 F7 | 	byte	$05, $fd, $f0, $e8, $e8, $ea, $ed, $f7, $fe, $0e, $1a, $1d, $1a, $0e, $00, $f7
1d38a     F1 F1 F1 F1 
1d38e     F4 FD 04 0D 
1d392     11 0D 05 00 
1d396     F7 F2 EE F2 | 	byte	$f1, $f1, $f1, $f1, $f4, $fd, $04, $0d, $11, $0d, $05, $00, $f7, $f2, $ee, $f2
1d39a     F4 F4 F1 F2 
1d39e     F7 FE 0D 11 
1d3a2     0F 0F 12 14 
1d3a6     15 12 12 14 | 	byte	$f4, $f4, $f1, $f2, $f7, $fe, $0d, $11, $0f, $0f, $12, $14, $15, $12, $12, $14
1d3aa     12 12 12 11 
1d3ae     0D 08 0A 0F 
1d3b2     15 1A 1D 1D 
1d3b6     18 17 14 11 | 	byte	$12, $12, $12, $11, $0d, $08, $0a, $0f, $15, $1a, $1d, $1d, $18, $17, $14, $11
1d3ba     11 12 14 0F 
1d3be     0B 05 FD F5 
1d3c2     EE E8 E1 DD 
1d3c6     DB DB E1 E5 | 	byte	$11, $12, $14, $0f, $0b, $05, $fd, $f5, $ee, $e8, $e1, $dd, $db, $db, $e1, $e5
1d3ca     EA F1 FB 05 
1d3ce     0B 0D 12 1A 
1d3d2     1D 1B 11 01 
1d3d6     F4 EA E8 ED | 	byte	$ea, $f1, $fb, $05, $0b, $0d, $12, $1a, $1d, $1b, $11, $01, $f4, $ea, $e8, $ed
1d3da     F4 FB FD FD 
1d3de     FB FD FE 04 
1d3e2     0B 14 1A 1D 
1d3e6     1A 17 14 11 | 	byte	$f4, $fb, $fd, $fd, $fb, $fd, $fe, $04, $0b, $14, $1a, $1d, $1a, $17, $14, $11
1d3ea     0B 05 07 0F 
1d3ee     1B 24 2D 31 
1d3f2     32 2E 28 21 
1d3f6     18 0E 05 FA | 	byte	$0b, $05, $07, $0f, $1b, $24, $2d, $31, $32, $2e, $28, $21, $18, $0e, $05, $fa
1d3fa     EE E5 E5 F0 
1d3fe     F8 FE 04 00 
1d402     F5 E8 D7 CB 
1d406     C2 C0 C1 C2 | 	byte	$ee, $e5, $e5, $f0, $f8, $fe, $04, $00, $f5, $e8, $d7, $cb, $c2, $c0, $c1, $c2
1d40a     C7 D0 DE F0 
1d40e     FE 0E 15 1A 
1d412     1D 1F 22 27 
1d416     28 2B 2B 2B | 	byte	$c7, $d0, $de, $f0, $fe, $0e, $15, $1a, $1d, $1f, $22, $27, $28, $2b, $2b, $2b
1d41a     28 22 1D 0E 
1d41e     02 F7 F1 EE 
1d422     E8 E5 E2 E0 
1d426     E1 E7 F2 FE | 	byte	$28, $22, $1d, $0e, $02, $f7, $f1, $ee, $e8, $e5, $e2, $e0, $e1, $e7, $f2, $fe
1d42a     05 08 08 08 
1d42e     0A 0E 18 1F 
1d432     25 1F 11 01 
1d436     FA F8 FB FE | 	byte	$05, $08, $08, $08, $0a, $0e, $18, $1f, $25, $1f, $11, $01, $fa, $f8, $fb, $fe
1d43a     FE 01 08 0D 
1d43e     12 17 18 18 
1d442     17 12 0D 0B 
1d446     0B 0B 0B 04 | 	byte	$fe, $01, $08, $0d, $12, $17, $18, $18, $17, $12, $0d, $0b, $0b, $0b, $0b, $04
1d44a     FB F1 EA E0 
1d44e     D4 C8 BA B0 
1d452     AB AD B2 BD 
1d456     CA D7 E0 E2 | 	byte	$fb, $f1, $ea, $e0, $d4, $c8, $ba, $b0, $ab, $ad, $b2, $bd, $ca, $d7, $e0, $e2
1d45a     E2 E4 EA F5 
1d45e     FE 0A 15 21 
1d462     2F 3D 44 4A 
1d466     4A 45 3A 31 | 	byte	$e2, $e4, $ea, $f5, $fe, $0a, $15, $21, $2f, $3d, $44, $4a, $4a, $45, $3a, $31
1d46a     25 1D 11 05 
1d46e     00 F7 EE E2 
1d472     DA D1 CA C8 
1d476     C5 C5 C8 D0 | 	byte	$25, $1d, $11, $05, $00, $f7, $ee, $e2, $da, $d1, $ca, $c8, $c5, $c5, $c8, $d0
1d47a     DB E7 EB EB 
1d47e     EE F7 FE 0D 
1d482     17 1E 21 25 
1d486     27 25 22 1A | 	byte	$db, $e7, $eb, $eb, $ee, $f7, $fe, $0d, $17, $1e, $21, $25, $27, $25, $22, $1a
1d48a     11 05 FA F1 
1d48e     F0 EE EE F1 
1d492     F8 02 0B 14 
1d496     18 1A 1A 1E | 	byte	$11, $05, $fa, $f1, $f0, $ee, $ee, $f1, $f8, $02, $0b, $14, $18, $1a, $1a, $1e
1d49a     1F 1F 1D 1D 
1d49e     1B 17 11 0E 
1d4a2     0B 08 05 00 
1d4a6     FE FE 02 08 | 	byte	$1f, $1f, $1d, $1d, $1b, $17, $11, $0e, $0b, $08, $05, $00, $fe, $fe, $02, $08
1d4aa     0D 12 17 1D 
1d4ae     21 24 27 28 
1d4b2     2A 27 1F 17 
1d4b6     11 0B 02 F7 | 	byte	$0d, $12, $17, $1d, $21, $24, $27, $28, $2a, $27, $1f, $17, $11, $0b, $02, $f7
1d4ba     ED EB EE F0 
1d4be     EE EE EE EB 
1d4c2     E5 E0 DE E0 
1d4c6     E1 E1 E4 E5 | 	byte	$ed, $eb, $ee, $f0, $ee, $ee, $ee, $eb, $e5, $e0, $de, $e0, $e1, $e1, $e4, $e5
1d4ca     E8 EB ED F1 
1d4ce     F8 FE 0B 18 
1d4d2     1E 1F 1D 17 
1d4d6     14 14 11 07 | 	byte	$e8, $eb, $ed, $f1, $f8, $fe, $0b, $18, $1e, $1f, $1d, $17, $14, $14, $11, $07
1d4da     FA F1 F2 F8 
1d4de     FA F8 F7 F7 
1d4e2     F7 F7 F5 F1 
1d4e6     F1 F7 FE 02 | 	byte	$fa, $f1, $f2, $f8, $fa, $f8, $f7, $f7, $f7, $f7, $f5, $f1, $f1, $f7, $fe, $02
1d4ea     04 04 02 01 
1d4ee     01 08 0E 0E 
1d4f2     0B 0B 11 12 
1d4f6     11 11 0D 02 | 	byte	$04, $04, $02, $01, $01, $08, $0e, $0e, $0b, $0b, $11, $12, $11, $11, $0d, $02
1d4fa     F7 EB E4 E2 
1d4fe     E4 E4 E7 ED 
1d502     F5 F8 FA FE 
1d506     07 0B 0E 0B | 	byte	$f7, $eb, $e4, $e2, $e4, $e4, $e7, $ed, $f5, $f8, $fa, $fe, $07, $0b, $0e, $0b
1d50a     05 02 04 0A 
1d50e     14 1E 27 2F 
1d512     38 3D 3D 3A 
1d516     34 32 2F 28 | 	byte	$05, $02, $04, $0a, $14, $1e, $27, $2f, $38, $3d, $3d, $3a, $34, $32, $2f, $28
1d51a     1D 0E 04 00 
1d51e     02 08 0D 0B 
1d522     0B 0D 0F 0F 
1d526     0B 05 00 F4 | 	byte	$1d, $0e, $04, $00, $02, $08, $0d, $0b, $0b, $0d, $0f, $0f, $0b, $05, $00, $f4
1d52a     E8 E7 E8 EB 
1d52e     EB E5 E2 E1 
1d532     E1 E1 DD DA 
1d536     D7 D8 DE E4 | 	byte	$e8, $e7, $e8, $eb, $eb, $e5, $e2, $e1, $e1, $e1, $dd, $da, $d7, $d8, $de, $e4
1d53a     EB EE EE F0 
1d53e     F2 F7 FE 08 
1d542     12 1E 2A 31 
1d546     34 31 28 1F | 	byte	$eb, $ee, $ee, $f0, $f2, $f7, $fe, $08, $12, $1e, $2a, $31, $34, $31, $28, $1f
1d54a     18 11 07 FD 
1d54e     F5 F4 F7 F8 
1d552     F7 F1 E5 DA 
1d556     D5 D2 D5 DB | 	byte	$18, $11, $07, $fd, $f5, $f4, $f7, $f8, $f7, $f1, $e5, $da, $d5, $d2, $d5, $db
1d55a     E7 F2 FD 01 
1d55e     01 02 08 0E 
1d562     12 14 12 0E 
1d566     0B 07 08 08 | 	byte	$e7, $f2, $fd, $01, $01, $02, $08, $0e, $12, $14, $12, $0e, $0b, $07, $08, $08
1d56a     02 FB F4 F2 
1d56e     FA 04 0F 1A 
1d572     1E 1D 14 05 
1d576     F4 ED F0 F5 | 	byte	$02, $fb, $f4, $f2, $fa, $04, $0f, $1a, $1e, $1d, $14, $05, $f4, $ed, $f0, $f5
1d57a     FD 01 0A 11 
1d57e     14 11 0D 05 
1d582     00 FA F7 F5 
1d586     F4 F1 ED E4 | 	byte	$fd, $01, $0a, $11, $14, $11, $0d, $05, $00, $fa, $f7, $f5, $f4, $f1, $ed, $e4
1d58a     DD D7 D4 D4 
1d58e     D1 CE CE D2 
1d592     DA E1 EB F7 
1d596     FE 0A 0E 0F | 	byte	$dd, $d7, $d4, $d4, $d1, $ce, $ce, $d2, $da, $e1, $eb, $f7, $fe, $0a, $0e, $0f
1d59a     0E 08 00 F8 
1d59e     F5 FA 04 0B 
1d5a2     0D 0A 08 07 
1d5a6     08 0F 1B 25 | 	byte	$0e, $08, $00, $f8, $f5, $fa, $04, $0b, $0d, $0a, $08, $07, $08, $0f, $1b, $25
1d5aa     24 1D 14 0E 
1d5ae     0D 08 00 FB 
1d5b2     FB FE 08 14 
1d5b6     1E 27 31 32 | 	byte	$24, $1d, $14, $0e, $0d, $08, $00, $fb, $fb, $fe, $08, $14, $1e, $27, $31, $32
1d5ba     2E 25 1A 12 
1d5be     0B 05 00 FB 
1d5c2     FB FB F8 F8 
1d5c6     F8 F7 F5 F7 | 	byte	$2e, $25, $1a, $12, $0b, $05, $00, $fb, $fb, $fb, $f8, $f8, $f8, $f7, $f5, $f7
1d5ca     FD 07 14 1B 
1d5ce     1D 1D 14 05 
1d5d2     FA F1 F1 F2 
1d5d6     F1 EE E8 E4 | 	byte	$fd, $07, $14, $1b, $1d, $1d, $14, $05, $fa, $f1, $f1, $f2, $f1, $ee, $e8, $e4
1d5da     E2 E7 F0 F5 
1d5de     F7 F2 EB EA 
1d5e2     EB F0 F2 F8 
1d5e6     FE 07 0E 12 | 	byte	$e2, $e7, $f0, $f5, $f7, $f2, $eb, $ea, $eb, $f0, $f2, $f8, $fe, $07, $0e, $12
1d5ea     14 11 0E 0B 
1d5ee     05 01 04 0A 
1d5f2     0D 08 01 00 
1d5f6     07 0F 1B 27 | 	byte	$14, $11, $0e, $0b, $05, $01, $04, $0a, $0d, $08, $01, $00, $07, $0f, $1b, $27
1d5fa     31 3B 41 47 
1d5fe     48 45 3F 37 
1d602     2E 1D 0E 05 
1d606     FD F8 F5 F1 | 	byte	$31, $3b, $41, $47, $48, $45, $3f, $37, $2e, $1d, $0e, $05, $fd, $f8, $f5, $f1
1d60a     EB E8 E7 E2 
1d60e     E2 E1 E2 E2 
1d612     E2 E1 DE DA 
1d616     D5 D4 D2 D4 | 	byte	$eb, $e8, $e7, $e2, $e2, $e1, $e2, $e2, $e2, $e1, $de, $da, $d5, $d4, $d2, $d4
1d61a     DB E7 FB 0A 
1d61e     15 1F 2A 2F 
1d622     2E 22 11 05 
1d626     00 01 02 04 | 	byte	$db, $e7, $fb, $0a, $15, $1f, $2a, $2f, $2e, $22, $11, $05, $00, $01, $02, $04
1d62a     02 04 02 02 
1d62e     FD F8 F7 FD 
1d632     04 0B 0B 07 
1d636     02 FB F7 F1 | 	byte	$02, $04, $02, $02, $fd, $f8, $f7, $fd, $04, $0b, $0b, $07, $02, $fb, $f7, $f1
1d63a     F0 EB E8 E5 
1d63e     E2 E0 E0 DE 
1d642     E1 E7 F1 FB 
1d646     04 0E 17 1A | 	byte	$f0, $eb, $e8, $e5, $e2, $e0, $e0, $de, $e1, $e7, $f1, $fb, $04, $0e, $17, $1a
1d64a     17 14 0F 0F 
1d64e     14 15 17 18 
1d652     12 0E 0B 05 
1d656     FA EE E4 E0 | 	byte	$17, $14, $0f, $0f, $14, $15, $17, $18, $12, $0e, $0b, $05, $fa, $ee, $e4, $e0
1d65a     DD DB DA D8 
1d65e     DD E4 ED F8 
1d662     05 15 21 2D 
1d666     37 3E 41 44 | 	byte	$dd, $db, $da, $d8, $dd, $e4, $ed, $f8, $05, $15, $21, $2d, $37, $3e, $41, $44
1d66a     42 3D 37 35 
1d66e     31 2E 25 1D 
1d672     17 0B 00 F7 
1d676     EE E2 D7 D4 | 	byte	$42, $3d, $37, $35, $31, $2e, $25, $1d, $17, $0b, $00, $f7, $ee, $e2, $d7, $d4
1d67a     D7 DE E5 E4 
1d67e     DD D7 D4 D8 
1d682     DE E7 F7 07 
1d686     15 1E 1F 1A | 	byte	$d7, $de, $e5, $e4, $dd, $d7, $d4, $d8, $de, $e7, $f7, $07, $15, $1e, $1f, $1a
1d68a     11 05 FA EE 
1d68e     E5 DD D8 DA 
1d692     E0 E4 EA F0 
1d696     FB 05 0D 0F | 	byte	$11, $05, $fa, $ee, $e5, $dd, $d8, $da, $e0, $e4, $ea, $f0, $fb, $05, $0d, $0f
1d69a     12 15 17 11 
1d69e     0B 05 00 F8 
1d6a2     F4 F4 F7 FB 
1d6a6     02 0D 12 11 | 	byte	$12, $15, $17, $11, $0b, $05, $00, $f8, $f4, $f4, $f7, $fb, $02, $0d, $12, $11
1d6aa     0B 05 FA EE 
1d6ae     E7 E7 F1 F7 
1d6b2     F5 EE E8 E5 
1d6b6     E7 EB F1 F8 | 	byte	$0b, $05, $fa, $ee, $e7, $e7, $f1, $f7, $f5, $ee, $e8, $e5, $e7, $eb, $f1, $f8
1d6ba     02 0B 0E 0E 
1d6be     07 00 FB FD 
1d6c2     04 0F 1A 22 
1d6c6     2A 2E 2E 2E | 	byte	$02, $0b, $0e, $0e, $07, $00, $fb, $fd, $04, $0f, $1a, $22, $2a, $2e, $2e, $2e
1d6ca     2E 2E 28 24 
1d6ce     22 21 1A 12 
1d6d2     0E 0D 08 05 
1d6d6     01 FD F8 F5 | 	byte	$2e, $2e, $28, $24, $22, $21, $1a, $12, $0e, $0d, $08, $05, $01, $fd, $f8, $f5
1d6da     F1 EB E8 E7 
1d6de     EA F0 F7 FD 
1d6e2     02 02 FD F7 
1d6e6     F1 EE EB ED | 	byte	$f1, $eb, $e8, $e7, $ea, $f0, $f7, $fd, $02, $02, $fd, $f7, $f1, $ee, $eb, $ed
1d6ea     F0 F4 F7 FA 
1d6ee     FD FD FD FE 
1d6f2     05 08 08 0B 
1d6f6     0E 0B 05 FD | 	byte	$f0, $f4, $f7, $fa, $fd, $fd, $fd, $fe, $05, $08, $08, $0b, $0e, $0b, $05, $fd
1d6fa     F5 F4 F8 FE 
1d6fe     04 0D 11 12 
1d702     14 12 0E 08 
1d706     07 08 0B 0F | 	byte	$f5, $f4, $f8, $fe, $04, $0d, $11, $12, $14, $12, $0e, $08, $07, $08, $0b, $0f
1d70a     14 14 0E 08 
1d70e     02 00 FD F8 
1d712     F8 FB FB F7 
1d716     F1 ED E8 E2 | 	byte	$14, $14, $0e, $08, $02, $00, $fd, $f8, $f8, $fb, $fb, $f7, $f1, $ed, $e8, $e2
1d71a     DD DA D8 D8 
1d71e     DB E1 ED F8 
1d722     07 12 18 1B 
1d726     1B 18 11 02 | 	byte	$dd, $da, $d8, $d8, $db, $e1, $ed, $f8, $07, $12, $18, $1b, $1b, $18, $11, $02
1d72a     F7 EB EA F0 
1d72e     F8 02 0F 1A 
1d732     21 22 24 27 
1d736     22 1D 18 17 | 	byte	$f7, $eb, $ea, $f0, $f8, $02, $0f, $1a, $21, $22, $24, $27, $22, $1d, $18, $17
1d73a     14 15 17 1A 
1d73e     1B 1B 17 0B 
1d742     00 F7 F1 ED 
1d746     EA EA F0 F8 | 	byte	$14, $15, $17, $1a, $1b, $1b, $17, $0b, $00, $f7, $f1, $ed, $ea, $ea, $f0, $f8
1d74a     FE 05 0A 0E 
1d74e     0F 0F 08 01 
1d752     FE FE FE 04 
1d756     0E 18 1D 17 | 	byte	$fe, $05, $0a, $0e, $0f, $0f, $08, $01, $fe, $fe, $fe, $04, $0e, $18, $1d, $17
1d75a     0E 05 FA EE 
1d75e     E4 E0 E2 E7 
1d762     F1 F8 FB F8 
1d766     F8 FB FE 0A | 	byte	$0e, $05, $fa, $ee, $e4, $e0, $e2, $e7, $f1, $f8, $fb, $f8, $f8, $fb, $fe, $0a
1d76a     11 14 14 15 
1d76e     17 14 0D 00 
1d772     F4 E4 D7 CD 
1d776     C7 CA D0 DB | 	byte	$11, $14, $14, $15, $17, $14, $0d, $00, $f4, $e4, $d7, $cd, $c7, $ca, $d0, $db
1d77a     ED FB 07 0B 
1d77e     0D 0D 0E 0F 
1d782     0E 0D 0D 0E 
1d786     0E 12 15 12 | 	byte	$ed, $fb, $07, $0b, $0d, $0d, $0e, $0f, $0e, $0d, $0d, $0e, $0e, $12, $15, $12
1d78a     0D 05 FD F4 
1d78e     EE E5 E1 E4 
1d792     F2 FE 15 21 
1d796     22 21 17 0E | 	byte	$0d, $05, $fd, $f4, $ee, $e5, $e1, $e4, $f2, $fe, $15, $21, $22, $21, $17, $0e
1d79a     04 FA F1 EB 
1d79e     EB EE F7 FE 
1d7a2     05 08 0B 0E 
1d7a6     0F 11 14 18 | 	byte	$04, $fa, $f1, $eb, $eb, $ee, $f7, $fe, $05, $08, $0b, $0e, $0f, $11, $14, $18
1d7aa     1F 22 22 1D 
1d7ae     1A 18 18 18 
1d7b2     1A 1A 1E 21 
1d7b6     25 25 1E 17 | 	byte	$1f, $22, $22, $1d, $1a, $18, $18, $18, $1a, $1a, $1e, $21, $25, $25, $1e, $17
1d7ba     0E 0B 0A 07 
1d7be     02 FD F7 F1 
1d7c2     EB E4 DD DD 
1d7c6     DD E0 E2 E5 | 	byte	$0e, $0b, $0a, $07, $02, $fd, $f7, $f1, $eb, $e4, $dd, $dd, $dd, $e0, $e2, $e5
1d7ca     E4 DD D2 C7 
1d7ce     BD B4 B0 B0 
1d7d2     B1 B4 B8 C4 
1d7d6     D0 E1 F5 FE | 	byte	$e4, $dd, $d2, $c7, $bd, $b4, $b0, $b0, $b1, $b4, $b8, $c4, $d0, $e1, $f5, $fe
1d7da     05 05 04 08 
1d7de     0B 0E 12 1B 
1d7e2     2B 38 44 4D 
1d7e6     4E 4A 3F 2E | 	byte	$05, $05, $04, $08, $0b, $0e, $12, $1b, $2b, $38, $44, $4d, $4e, $4a, $3f, $2e
1d7ea     22 11 0B 05 
1d7ee     00 F7 F0 EE 
1d7f2     F2 FB 07 0D 
1d7f6     0E 0D 0B 0B | 	byte	$22, $11, $0b, $05, $00, $f7, $f0, $ee, $f2, $fb, $07, $0d, $0e, $0d, $0b, $0b
1d7fa     0D 0F 11 11 
1d7fe     0F 0D 08 05 
1d802     02 00 FD FA 
1d806     F7 F4 F0 EE | 	byte	$0d, $0f, $11, $11, $0f, $0d, $08, $05, $02, $00, $fd, $fa, $f7, $f4, $f0, $ee
1d80a     EB E7 E0 D7 
1d80e     D1 D0 D5 DE 
1d812     EB F8 02 07 
1d816     08 0D 0F 11 | 	byte	$eb, $e7, $e0, $d7, $d1, $d0, $d5, $de, $eb, $f8, $02, $07, $08, $0d, $0f, $11
1d81a     0E 08 01 FA 
1d81e     F1 EB E7 E7 
1d822     ED FB 0A 18 
1d826     21 24 27 2A | 	byte	$0e, $08, $01, $fa, $f1, $eb, $e7, $e7, $ed, $fb, $0a, $18, $21, $24, $27, $2a
1d82a     2E 2F 2E 28 
1d82e     22 1D 18 18 
1d832     1A 1A 14 0E 
1d836     07 02 FD F8 | 	byte	$2e, $2f, $2e, $28, $22, $1d, $18, $18, $1a, $1a, $14, $0e, $07, $02, $fd, $f8
1d83a     F8 FB FE FD 
1d83e     FD FE 07 15 
1d842     24 2B 2E 2E 
1d846     28 25 22 1E | 	byte	$f8, $fb, $fe, $fd, $fd, $fe, $07, $15, $24, $2b, $2e, $2e, $28, $25, $22, $1e
1d84a     11 01 F1 E2 
1d84e     D8 D1 C8 C5 
1d852     C8 CE D5 DE 
1d856     E0 DA D7 DB | 	byte	$11, $01, $f1, $e2, $d8, $d1, $c8, $c5, $c8, $ce, $d5, $de, $e0, $da, $d7, $db
1d85a     E1 ED FE 0B 
1d85e     11 0B 02 00 
1d862     FD F8 F4 F2 
1d866     F2 F8 05 12 | 	byte	$e1, $ed, $fe, $0b, $11, $0b, $02, $00, $fd, $f8, $f4, $f2, $f2, $f8, $05, $12
1d86a     18 17 0E 0B 
1d86e     14 1E 25 24 
1d872     1D 12 0F 12 
1d876     15 14 0E 05 | 	byte	$18, $17, $0e, $0b, $14, $1e, $25, $24, $1d, $12, $0f, $12, $15, $14, $0e, $05
1d87a     00 F8 F7 FE 
1d87e     07 12 1D 22 
1d882     1F 17 0E 07 
1d886     07 07 02 00 | 	byte	$00, $f8, $f7, $fe, $07, $12, $1d, $22, $1f, $17, $0e, $07, $07, $07, $02, $00
1d88a     02 05 08 08 
1d88e     07 02 FA F4 
1d892     F1 F2 F7 F5 
1d896     F1 EB E5 E2 | 	byte	$02, $05, $08, $08, $07, $02, $fa, $f4, $f1, $f2, $f7, $f5, $f1, $eb, $e5, $e2
1d89a     E5 E8 EA EB 
1d89e     F2 F7 F7 F4 
1d8a2     F5 FA FE FE 
1d8a6     FD FA F4 F1 | 	byte	$e5, $e8, $ea, $eb, $f2, $f7, $f7, $f4, $f5, $fa, $fe, $fe, $fd, $fa, $f4, $f1
1d8aa     F5 FB FD FA 
1d8ae     FB FE 08 0E 
1d8b2     0E 0B 0E 14 
1d8b6     1B 1F 1F 24 | 	byte	$f5, $fb, $fd, $fa, $fb, $fe, $08, $0e, $0e, $0b, $0e, $14, $1b, $1f, $1f, $24
1d8ba     2A 2F 2E 28 
1d8be     1A 0B FB F4 
1d8c2     F2 F4 F8 FB 
1d8c6     FD FD FA F1 | 	byte	$2a, $2f, $2e, $28, $1a, $0b, $fb, $f4, $f2, $f4, $f8, $fb, $fd, $fd, $fa, $f1
1d8ca     E5 E1 E5 EE 
1d8ce     F1 F0 EB E2 
1d8d2     D8 CB BD B4 
1d8d6     AE AE B1 B8 | 	byte	$e5, $e1, $e5, $ee, $f1, $f0, $eb, $e2, $d8, $cb, $bd, $b4, $ae, $ae, $b1, $b8
1d8da     C4 D4 E1 E7 
1d8de     EB F1 FD 0A 
1d8e2     1B 2D 3E 48 
1d8e6     4E 4D 48 3E | 	byte	$c4, $d4, $e1, $e7, $eb, $f1, $fd, $0a, $1b, $2d, $3e, $48, $4e, $4d, $48, $3e
1d8ea     34 2A 22 1E 
1d8ee     1A 14 0B 05 
1d8f2     05 0A 0E 14 
1d8f6     14 11 0B 05 | 	byte	$34, $2a, $22, $1e, $1a, $14, $0b, $05, $05, $0a, $0e, $14, $14, $11, $0b, $05
1d8fa     FA EE E5 DE 
1d8fe     DD DD DA D7 
1d902     D8 DD E1 E4 
1d906     E8 F0 F8 07 | 	byte	$fa, $ee, $e5, $de, $dd, $dd, $da, $d7, $d8, $dd, $e1, $e4, $e8, $f0, $f8, $07
1d90a     15 24 2B 2A 
1d90e     22 1D 17 17 
1d912     17 15 0B 04 
1d916     00 FA F8 FA | 	byte	$15, $24, $2b, $2a, $22, $1d, $17, $17, $17, $15, $0b, $04, $00, $fa, $f8, $fa
1d91a     02 0F 1B 24 
1d91e     2D 32 34 31 
1d922     2E 28 28 25 
1d926     1D 14 05 FB | 	byte	$02, $0f, $1b, $24, $2d, $32, $34, $31, $2e, $28, $28, $25, $1d, $14, $05, $fb
1d92a     F1 EB E2 DA 
1d92e     D4 D5 DA E4 
1d932     F2 FE 0D 11 
1d936     11 12 15 14 | 	byte	$f1, $eb, $e2, $da, $d4, $d5, $da, $e4, $f2, $fe, $0d, $11, $11, $12, $15, $14
1d93a     0E 0B 05 FE 
1d93e     FB FD 04 0E 
1d942     0F 0B 02 F7 
1d946     F0 EE F0 EE | 	byte	$0e, $0b, $05, $fe, $fb, $fd, $04, $0e, $0f, $0b, $02, $f7, $f0, $ee, $f0, $ee
1d94a     F2 F5 F5 FA 
1d94e     FE 0A 12 1A 
1d952     1F 25 25 1D 
1d956     0F 02 FD F8 | 	byte	$f2, $f5, $f5, $fa, $fe, $0a, $12, $1a, $1f, $25, $25, $1d, $0f, $02, $fd, $f8
1d95a     F4 EE E8 EB 
1d95e     F2 FD 01 04 
1d962     FD F5 F2 F5 
1d966     FE 0A 12 17 | 	byte	$f4, $ee, $e8, $eb, $f2, $fd, $01, $04, $fd, $f5, $f2, $f5, $fe, $0a, $12, $17
1d96a     1E 22 25 24 
1d96e     21 1A 0B 00 
1d972     EE E5 E5 EA 
1d976     EE F1 F7 FE | 	byte	$1e, $22, $25, $24, $21, $1a, $0b, $00, $ee, $e5, $e5, $ea, $ee, $f1, $f7, $fe
1d97a     05 0B 0B 05 
1d97e     00 FB FD 04 
1d982     0A 0D 0B 05 
1d986     FA EE DD D1 | 	byte	$05, $0b, $0b, $05, $00, $fb, $fd, $04, $0a, $0d, $0b, $05, $fa, $ee, $dd, $d1
1d98a     C7 C5 CA D1 
1d98e     DB E5 EB ED 
1d992     F1 F8 FD FB 
1d996     FA F4 EB E1 | 	byte	$c7, $c5, $ca, $d1, $db, $e5, $eb, $ed, $f1, $f8, $fd, $fb, $fa, $f4, $eb, $e1
1d99a     D7 D2 D2 D5 
1d99e     DA E1 E7 EE 
1d9a2     F5 FE 04 0A 
1d9a6     0F 17 1F 27 | 	byte	$d7, $d2, $d2, $d5, $da, $e1, $e7, $ee, $f5, $fe, $04, $0a, $0f, $17, $1f, $27
1d9aa     2D 32 38 3D 
1d9ae     41 48 4F 55 
1d9b2     58 57 4E 3F 
1d9b6     31 1F 0E 00 | 	byte	$2d, $32, $38, $3d, $41, $48, $4f, $55, $58, $57, $4e, $3f, $31, $1f, $0e, $00
1d9ba     F4 E2 D1 C5 
1d9be     BD BA C0 CA 
1d9c2     D8 E5 EE F2 
1d9c6     F0 E8 E0 DB | 	byte	$f4, $e2, $d1, $c5, $bd, $ba, $c0, $ca, $d8, $e5, $ee, $f2, $f0, $e8, $e0, $db
1d9ca     DE E7 F8 0A 
1d9ce     1A 25 31 34 
1d9d2     2E 22 17 0D 
1d9d6     0B 0B 0E 14 | 	byte	$de, $e7, $f8, $0a, $1a, $25, $31, $34, $2e, $22, $17, $0d, $0b, $0b, $0e, $14
1d9da     1B 1E 1D 1B 
1d9de     17 11 08 02 
1d9e2     04 04 02 00 
1d9e6     FA F2 EA E4 | 	byte	$1b, $1e, $1d, $1b, $17, $11, $08, $02, $04, $04, $02, $00, $fa, $f2, $ea, $e4
1d9ea     E1 DA D1 C5 
1d9ee     BD BE C7 D0 
1d9f2     D1 D2 DB E5 
1d9f6     F2 FE 0A 12 | 	byte	$e1, $da, $d1, $c5, $bd, $be, $c7, $d0, $d1, $d2, $db, $e5, $f2, $fe, $0a, $12
1d9fa     1B 24 2A 2F 
1d9fe     35 37 34 2F 
1da02     25 17 05 F8 
1da06     F4 F5 F7 FB | 	byte	$1b, $24, $2a, $2f, $35, $37, $34, $2f, $25, $17, $05, $f8, $f4, $f5, $f7, $fb
1da0a     FD FB FA F7 
1da0e     F5 F8 FE 04 
1da12     02 FD F7 F4 
1da16     F4 F4 F8 FE | 	byte	$fd, $fb, $fa, $f7, $f5, $f8, $fe, $04, $02, $fd, $f7, $f4, $f4, $f4, $f8, $fe
1da1a     05 0A 0F 1E 
1da1e     2D 37 3B 3A 
1da22     31 25 17 0E 
1da26     0D 0E 0E 0D | 	byte	$05, $0a, $0f, $1e, $2d, $37, $3b, $3a, $31, $25, $17, $0e, $0d, $0e, $0e, $0d
1da2a     0A 02 FE FA 
1da2e     FA F4 ED ED 
1da32     F2 F8 F7 F4 
1da36     F5 F7 FD 05 | 	byte	$0a, $02, $fe, $fa, $fa, $f4, $ed, $ed, $f2, $f8, $f7, $f4, $f5, $f7, $fd, $05
1da3a     0B 0A 07 02 
1da3e     FD F4 F1 F2 
1da42     F8 FE 01 FD 
1da46     EE E2 DD D8 | 	byte	$0b, $0a, $07, $02, $fd, $f4, $f1, $f2, $f8, $fe, $01, $fd, $ee, $e2, $dd, $d8
1da4a     D2 D0 D0 D8 
1da4e     E2 F0 FD 08 
1da52     15 21 2D 34 
1da56     3B 3E 41 3F | 	byte	$d2, $d0, $d0, $d8, $e2, $f0, $fd, $08, $15, $21, $2d, $34, $3b, $3e, $41, $3f
1da5a     3D 34 25 17 
1da5e     08 FB F1 EE 
1da62     F0 F5 F7 F0 
1da66     E8 E8 EB EE | 	byte	$3d, $34, $25, $17, $08, $fb, $f1, $ee, $f0, $f5, $f7, $f0, $e8, $e8, $eb, $ee
1da6a     F0 ED EA EA 
1da6e     F5 FE 08 0D 
1da72     11 15 1E 28 
1da76     2B 28 25 28 | 	byte	$f0, $ed, $ea, $ea, $f5, $fe, $08, $0d, $11, $15, $1e, $28, $2b, $28, $25, $28
1da7a     25 1A 0B 01 
1da7e     FA F8 FA FE 
1da82     02 05 07 0A 
1da86     07 00 FD FB | 	byte	$25, $1a, $0b, $01, $fa, $f8, $fa, $fe, $02, $05, $07, $0a, $07, $00, $fd, $fb
1da8a     02 0B 0F 12 
1da8e     14 11 0E 0B 
1da92     05 FB F4 EE 
1da96     EE EE ED E5 | 	byte	$02, $0b, $0f, $12, $14, $11, $0e, $0b, $05, $fb, $f4, $ee, $ee, $ee, $ed, $e5
1da9a     E0 DD DE DD 
1da9e     D7 D2 CE D0 
1daa2     D5 E0 E5 E7 
1daa6     E8 EB F1 FB | 	byte	$e0, $dd, $de, $dd, $d7, $d2, $ce, $d0, $d5, $e0, $e5, $e7, $e8, $eb, $f1, $fb
1daaa     0A 1D 25 22 
1daae     17 08 F7 ED 
1dab2     EB F4 04 12 
1dab6     1A 17 0E 05 | 	byte	$0a, $1d, $25, $22, $17, $08, $f7, $ed, $eb, $f4, $04, $12, $1a, $17, $0e, $05
1daba     01 FE FE FE 
1dabe     04 07 0B 11 
1dac2     15 17 14 0E 
1dac6     0B 0A 0A 0A | 	byte	$01, $fe, $fe, $fe, $04, $07, $0b, $11, $15, $17, $14, $0e, $0b, $0a, $0a, $0a
1daca     0E 12 14 14 
1dace     12 11 0E 07 
1dad2     FA EE E2 E0 
1dad6     E5 F1 FD 02 | 	byte	$0e, $12, $14, $14, $12, $11, $0e, $07, $fa, $ee, $e2, $e0, $e5, $f1, $fd, $02
1dada     01 F7 EE E8 
1dade     E7 E5 E0 DA 
1dae2     D4 D2 D5 DB 
1dae6     E7 F7 08 18 | 	byte	$01, $f7, $ee, $e8, $e7, $e5, $e0, $da, $d4, $d2, $d5, $db, $e7, $f7, $08, $18
1daea     24 25 22 22 
1daee     22 1F 1B 18 
1daf2     14 0B 01 04 
1daf6     0B 12 1A 21 | 	byte	$24, $25, $22, $22, $22, $1f, $1b, $18, $14, $0b, $01, $04, $0b, $12, $1a, $21
1dafa     25 27 1F 17 
1dafe     0B 00 F4 EA 
1db02     E5 E7 E5 E2 
1db06     E4 EA F5 FE | 	byte	$25, $27, $1f, $17, $0b, $00, $f4, $ea, $e5, $e7, $e5, $e2, $e4, $ea, $f5, $fe
1db0a     0E 11 11 11 
1db0e     0B 05 FD F4 
1db12     F5 F7 F8 F7 
1db16     F4 F1 F1 F5 | 	byte	$0e, $11, $11, $11, $0b, $05, $fd, $f4, $f5, $f7, $f8, $f7, $f4, $f1, $f1, $f5
1db1a     FB 02 08 0F 
1db1e     15 1B 1F 1E 
1db22     1E 21 1F 1D 
1db26     17 0E 08 04 | 	byte	$fb, $02, $08, $0f, $15, $1b, $1f, $1e, $1e, $21, $1f, $1d, $17, $0e, $08, $04
1db2a     02 00 F4 EB 
1db2e     E2 DD DB DA 
1db32     D8 DA E1 ED 
1db36     FB 08 12 18 | 	byte	$02, $00, $f4, $eb, $e2, $dd, $db, $da, $d8, $da, $e1, $ed, $fb, $08, $12, $18
1db3a     1B 1F 21 1F 
1db3e     1D 1A 14 0B 
1db42     05 00 FD FD 
1db46     FE 02 00 F7 | 	byte	$1b, $1f, $21, $1f, $1d, $1a, $14, $0b, $05, $00, $fd, $fd, $fe, $02, $00, $f7
1db4a     EE E8 E5 E0 
1db4e     D7 D1 D2 DB 
1db52     E7 F0 F2 F7 
1db56     FE 0A 12 17 | 	byte	$ee, $e8, $e5, $e0, $d7, $d1, $d2, $db, $e7, $f0, $f2, $f7, $fe, $0a, $12, $17
1db5a     17 17 18 1A 
1db5e     18 1A 1B 1A 
1db62     1E 22 25 25 
1db66     22 1A 0B 00 | 	byte	$17, $17, $18, $1a, $18, $1a, $1b, $1a, $1e, $22, $25, $25, $22, $1a, $0b, $00
1db6a     EE E2 E2 EA 
1db6e     F0 F7 FE 05 
1db72     0A 08 05 05 
1db76     02 00 FE FD | 	byte	$ee, $e2, $e2, $ea, $f0, $f7, $fe, $05, $0a, $08, $05, $05, $02, $00, $fe, $fd
1db7a     FB FB FD FD 
1db7e     FE FE 00 04 
1db82     04 05 07 08 
1db86     0A 0B 0D 0D | 	byte	$fb, $fb, $fd, $fd, $fe, $fe, $00, $04, $04, $05, $07, $08, $0a, $0b, $0d, $0d
1db8a     0D 0E 0E 0E 
1db8e     0E 0E 0E 0E 
1db92     0E 0E 0D 0D 
1db96     00 00 00 00 | 	byte	$0d, $0e, $0e, $0e, $0e, $0e, $0e, $0e, $0e, $0e, $0d, $0d, $00, $00, $00, $00
1db9a     E8 E5 E2 E1 
1db9e     E1 E5 EB F3 
1dba2     FB 05 0E 18 
1dba6     22 2A 32 38 | 	byte	$e8, $e5, $e2, $e1, $e1, $e5, $eb, $f3, $fb, $05, $0e, $18, $22, $2a, $32, $38
1dbaa     3D 37 11 37 
1dbae     40 3A 37 34 
1dbb2     31 2F 2D 2C 
1dbb6     28 23 20 1B | 	byte	$3d, $37, $11, $37, $40, $3a, $37, $34, $31, $2f, $2d, $2c, $28, $23, $20, $1b
1dbba     18 15 12 0F 
1dbbe     0B 05 FC F0 
1dbc2     E4 D6 CA C0 
1dbc6     B9 B7 BA C0 | 	byte	$18, $15, $12, $0f, $0b, $05, $fc, $f0, $e4, $d6, $ca, $c0, $b9, $b7, $ba, $c0
1dbca     C5 CA CF D4 
1dbce     D7 DA DD DF 
1dbd2     E1 E2 E4 E5 
1dbd6     E5 E7 E7 E7 | 	byte	$c5, $ca, $cf, $d4, $d7, $da, $dd, $df, $e1, $e2, $e4, $e5, $e5, $e7, $e7, $e7
1dbda     E7 E7 E7 E8 
1dbde     E9 EA EB EB 
1dbe2     ED EE F0 F2 
1dbe6     F4 F6 F9 FB | 	byte	$e7, $e7, $e7, $e8, $e9, $ea, $eb, $eb, $ed, $ee, $f0, $f2, $f4, $f6, $f9, $fb
1dbea     FE 09 54 66 
1dbee     5D 56 50 4B 
1dbf2     46 41 3C 38 
1dbf6     33 2F 2B 27 | 	byte	$fe, $09, $54, $66, $5d, $56, $50, $4b, $46, $41, $3c, $38, $33, $2f, $2b, $27
1dbfa     23 20 1C 19 
1dbfe     16 13 10 0D 
1dc02     0C 09 08 06 
1dc06     04 03 01 00 | 	byte	$23, $20, $1c, $19, $16, $13, $10, $0d, $0c, $09, $08, $06, $04, $03, $01, $00
1dc0a     FF FE FD FC 
1dc0e     FB FA FA F9 
1dc12     F8 F8 F8 F7 
1dc16     F7 F7 F6 F6 | 	byte	$ff, $fe, $fd, $fc, $fb, $fa, $fa, $f9, $f8, $f8, $f8, $f7, $f7, $f7, $f6, $f6
1dc1a     F6 F1 A5 DD 
1dc1e     03 FF FD FD 
1dc22     FC FB FB FB 
1dc26     FA FA F4 B6 | 	byte	$f6, $f1, $a5, $dd, $03, $ff, $fd, $fd, $fc, $fb, $fb, $fb, $fa, $fa, $f4, $b6
1dc2a     A6 F4 0A 06 
1dc2e     04 04 03 02 
1dc32     01 00 00 FF 
1dc36     FF FE FD FD | 	byte	$a6, $f4, $0a, $06, $04, $04, $03, $02, $01, $00, $00, $ff, $ff, $fe, $fd, $fd
1dc3a     FD FD E1 9D 
1dc3e     A0 AB B3 BA 
1dc42     C1 C8 CE D3 
1dc46     D9 DE E3 E7 | 	byte	$fd, $fd, $e1, $9d, $a0, $ab, $b3, $ba, $c1, $c8, $ce, $d3, $d9, $de, $e3, $e7
1dc4a     EB EE F1 F3 
1dc4e     F4 F5 F6 F6 
1dc52     F6 F6 F6 F5 
1dc56     F4 F4 F3 F3 | 	byte	$eb, $ee, $f1, $f3, $f4, $f5, $f6, $f6, $f6, $f6, $f6, $f5, $f4, $f4, $f3, $f3
1dc5a     F3 F2 F2 F2 
1dc5e     F2 F3 F4 F5 
1dc62     F6 F8 FA FC 
1dc66     FF 01 04 23 | 	byte	$f3, $f2, $f2, $f2, $f2, $f3, $f4, $f5, $f6, $f8, $fa, $fc, $ff, $01, $04, $23
1dc6a     62 68 5F 59 
1dc6e     53 4D 49 44 
1dc72     3F 3B 36 32 
1dc76     2E 2A 27 23 | 	byte	$62, $68, $5f, $59, $53, $4d, $49, $44, $3f, $3b, $36, $32, $2e, $2a, $27, $23
1dc7a     21 1D 1A 17 
1dc7e     14 12 10 0E 
1dc82     0C 0A 09 07 
1dc86     06 04 03 02 | 	byte	$21, $1d, $1a, $17, $14, $12, $10, $0e, $0c, $0a, $09, $07, $06, $04, $03, $02
1dc8a     01 00 FF FF 
1dc8e     FE FD FD FC 
1dc92     FC FB FB FB 
1dc96     FA FA FA E1 | 	byte	$01, $00, $ff, $ff, $fe, $fd, $fd, $fc, $fc, $fb, $fb, $fb, $fa, $fa, $fa, $e1
1dc9a     A3 CD 06 08 
1dc9e     05 04 03 02 
1dca2     02 01 00 F3 
1dca6     BB A5 DB 0C | 	byte	$a3, $cd, $06, $08, $05, $04, $03, $02, $02, $01, $00, $f3, $bb, $a5, $db, $0c
1dcaa     11 0D 0B 0A 
1dcae     09 07 06 05 
1dcb2     04 03 03 02 
1dcb6     02 01 01 00 | 	byte	$11, $0d, $0b, $0a, $09, $07, $06, $05, $04, $03, $03, $02, $02, $01, $01, $00
1dcba     F4 B1 9F AA 
1dcbe     B3 B9 C0 C7 
1dcc2     CD D3 D9 DE 
1dcc6     E3 E7 EB ED | 	byte	$f4, $b1, $9f, $aa, $b3, $b9, $c0, $c7, $cd, $d3, $d9, $de, $e3, $e7, $eb, $ed
1dcca     F0 F1 F3 F4 
1dcce     F4 F5 F5 F5 
1dcd2     F4 F4 F3 F3 
1dcd6     F3 F2 F2 F2 | 	byte	$f0, $f1, $f3, $f4, $f4, $f5, $f5, $f5, $f4, $f4, $f3, $f3, $f3, $f2, $f2, $f2
1dcda     F3 F3 F4 F4 
1dcde     F5 F7 F9 FB 
1dce2     FC FF 02 05 
1dce6     17 49 69 64 | 	byte	$f3, $f3, $f4, $f4, $f5, $f7, $f9, $fb, $fc, $ff, $02, $05, $17, $49, $69, $64
1dcea     5D 57 51 4C 
1dcee     47 43 3E 3A 
1dcf2     36 32 2E 2A 
1dcf6     27 23 20 1D | 	byte	$5d, $57, $51, $4c, $47, $43, $3e, $3a, $36, $32, $2e, $2a, $27, $23, $20, $1d
1dcfa     1A 17 14 12 
1dcfe     10 0E 0C 0A 
1dd02     08 07 06 04 
1dd06     03 02 01 00 | 	byte	$1a, $17, $14, $12, $10, $0e, $0c, $0a, $08, $07, $06, $04, $03, $02, $01, $00
1dd0a     00 FF FE FD 
1dd0e     FD FC FB FB 
1dd12     FB FA FA F9 
1dd16     F1 C3 9D C0 | 	byte	$00, $ff, $fe, $fd, $fd, $fc, $fb, $fb, $fb, $fa, $fa, $f9, $f1, $c3, $9d, $c0
1dd1a     00 0F 0B 09 
1dd1e     08 07 06 05 
1dd22     F0 BD A8 CA 
1dd26     03 17 14 11 | 	byte	$00, $0f, $0b, $09, $08, $07, $06, $05, $f0, $bd, $a8, $ca, $03, $17, $14, $11
1dd2a     0F 0E 0C 0B 
1dd2e     09 08 07 06 
1dd32     05 05 04 03 
1dd36     02 01 F7 CA | 	byte	$0f, $0e, $0c, $0b, $09, $08, $07, $06, $05, $05, $04, $03, $02, $01, $f7, $ca
1dd3a     A4 A8 B1 B9 
1dd3e     BF C6 CC D1 
1dd42     D7 DC E1 E5 
1dd46     E8 EB ED EF | 	byte	$a4, $a8, $b1, $b9, $bf, $c6, $cc, $d1, $d7, $dc, $e1, $e5, $e8, $eb, $ed, $ef
1dd4a     F0 F1 F2 F2 
1dd4e     F2 F2 F2 F1 
1dd52     F1 F1 F1 F1 
1dd56     F1 F2 F2 F3 | 	byte	$f0, $f1, $f2, $f2, $f2, $f2, $f2, $f1, $f1, $f1, $f1, $f1, $f1, $f2, $f2, $f3
1dd5a     F4 F5 F6 F8 
1dd5e     FA FD FF 02 
1dd62     04 0C 2E 5C 
1dd66     68 62 5B 55 | 	byte	$f4, $f5, $f6, $f8, $fa, $fd, $ff, $02, $04, $0c, $2e, $5c, $68, $62, $5b, $55
1dd6a     50 4B 46 41 
1dd6e     3D 39 35 31 
1dd72     2D 2A 26 23 
1dd76     20 1C 1A 17 | 	byte	$50, $4b, $46, $41, $3d, $39, $35, $31, $2d, $2a, $26, $23, $20, $1c, $1a, $17
1dd7a     14 12 10 0E 
1dd7e     0C 0A 08 07 
1dd82     06 04 03 02 
1dd86     01 00 FF FF | 	byte	$14, $12, $10, $0e, $0c, $0a, $08, $07, $06, $04, $03, $02, $01, $00, $ff, $ff
1dd8a     FE FD FC FC 
1dd8e     FB FB FA FA 
1dd92     FA F9 E5 BB 
1dd96     9F B1 E5 0B | 	byte	$fe, $fd, $fc, $fc, $fb, $fb, $fa, $fa, $fa, $f9, $e5, $bb, $9f, $b1, $e5, $0b
1dd9a     11 0E 0C 0B 
1dd9e     09 F7 CC AF 
1dda2     B9 E1 0F 1D 
1dda6     19 16 14 12 | 	byte	$11, $0e, $0c, $0b, $09, $f7, $cc, $af, $b9, $e1, $0f, $1d, $19, $16, $14, $12
1ddaa     10 0E 0C 0B 
1ddae     0A 09 08 06 
1ddb2     05 05 04 03 
1ddb6     00 E9 BE A7 | 	byte	$10, $0e, $0c, $0b, $0a, $09, $08, $06, $05, $05, $04, $03, $00, $e9, $be, $a7
1ddba     AB B4 BA C1 
1ddbe     C7 CD D3 D8 
1ddc2     DD E2 E5 E7 
1ddc6     E9 EB EC ED | 	byte	$ab, $b4, $ba, $c1, $c7, $cd, $d3, $d8, $dd, $e2, $e5, $e7, $e9, $eb, $ec, $ed
1ddca     ED EE EE EF 
1ddce     EE EE EE EF 
1ddd2     EF EF F0 F0 
1ddd6     F1 F2 F3 F5 | 	byte	$ed, $ee, $ee, $ef, $ee, $ee, $ee, $ef, $ef, $ef, $f0, $f0, $f1, $f2, $f3, $f5
1ddda     F7 F9 FB FD 
1ddde     00 03 06 16 
1dde2     39 5E 68 61 
1dde6     5A 55 50 4B | 	byte	$f7, $f9, $fb, $fd, $00, $03, $06, $16, $39, $5e, $68, $61, $5a, $55, $50, $4b
1ddea     46 42 3D 39 
1ddee     35 31 2D 2A 
1ddf2     26 23 20 1D 
1ddf6     1A 17 14 12 | 	byte	$46, $42, $3d, $39, $35, $31, $2d, $2a, $26, $23, $20, $1d, $1a, $17, $14, $12
1ddfa     10 0E 0C 0A 
1ddfe     09 08 06 04 
1de02     03 02 01 00 
1de06     FF FF FE FD | 	byte	$10, $0e, $0c, $0a, $09, $08, $06, $04, $03, $02, $01, $00, $ff, $ff, $fe, $fd
1de0a     FC FC FB FB 
1de0e     FB FA FA F9 
1de12     E9 C4 A6 A2 
1de16     BD EA 0B 16 | 	byte	$fc, $fc, $fb, $fb, $fb, $fa, $fa, $f9, $e9, $c4, $a6, $a2, $bd, $ea, $0b, $16
1de1a     13 10 07 E7 
1de1e     C2 B3 C2 EA 
1de22     0F 21 1F 1B 
1de26     19 16 14 12 | 	byte	$13, $10, $07, $e7, $c2, $b3, $c2, $ea, $0f, $21, $1f, $1b, $19, $16, $14, $12
1de2a     10 0E 0D 0B 
1de2e     0A 09 07 07 
1de32     05 05 03 FE 
1de36     E8 C4 AD AA | 	byte	$10, $0e, $0d, $0b, $0a, $09, $07, $07, $05, $05, $03, $fe, $e8, $c4, $ad, $aa
1de3a     B3 BA C1 C7 
1de3e     CD D3 D7 DC 
1de42     DF E2 E4 E6 
1de46     E8 E9 EA EB | 	byte	$b3, $ba, $c1, $c7, $cd, $d3, $d7, $dc, $df, $e2, $e4, $e6, $e8, $e9, $ea, $eb
1de4a     EB EB EC EC 
1de4e     EC EC ED ED 
1de52     EE EF F0 F1 
1de56     F3 F4 F6 F8 | 	byte	$eb, $eb, $ec, $ec, $ec, $ec, $ed, $ed, $ee, $ef, $f0, $f1, $f3, $f4, $f6, $f8
1de5a     FB FD 00 03 
1de5e     06 13 2E 52 
1de62     66 64 5E 58 
1de66     52 4D 49 44 | 	byte	$fb, $fd, $00, $03, $06, $13, $2e, $52, $66, $64, $5e, $58, $52, $4d, $49, $44
1de6a     40 3C 38 34 
1de6e     30 2C 29 25 
1de72     22 1F 1C 19 
1de76     16 14 11 0E | 	byte	$40, $3c, $38, $34, $30, $2c, $29, $25, $22, $1f, $1c, $19, $16, $14, $11, $0e
1de7a     0C 0B 09 07 
1de7e     07 05 04 03 
1de82     02 01 00 00 
1de86     FF FE FD FC | 	byte	$0c, $0b, $09, $07, $07, $05, $04, $03, $02, $01, $00, $00, $ff, $fe, $fd, $fc
1de8a     FC FB FB FA 
1de8e     FA FA F1 DA 
1de92     BB A6 A5 B9 
1de96     DD 01 16 17 | 	byte	$fc, $fb, $fb, $fa, $fa, $fa, $f1, $da, $bb, $a6, $a5, $b9, $dd, $01, $16, $17
1de9a     09 E9 CB BA 
1de9e     C3 DE 03 1E 
1dea2     26 23 1F 1C 
1dea6     1A 17 14 12 | 	byte	$09, $e9, $cb, $ba, $c3, $de, $03, $1e, $26, $23, $1f, $1c, $1a, $17, $14, $12
1deaa     10 0F 0D 0B 
1deae     0A 09 08 07 
1deb2     06 05 01 F3 
1deb6     D6 BC AC AF | 	byte	$10, $0f, $0d, $0b, $0a, $09, $08, $07, $06, $05, $01, $f3, $d6, $bc, $ac, $af
1deba     B6 BD C3 C9 
1debe     CF D4 D8 DB 
1dec2     DE E1 E2 E4 
1dec6     E5 E6 E7 E8 | 	byte	$b6, $bd, $c3, $c9, $cf, $d4, $d8, $db, $de, $e1, $e2, $e4, $e5, $e6, $e7, $e8
1deca     E8 E8 E9 E9 
1dece     EA EA EB EC 
1ded2     ED EF F0 F3 
1ded6     F4 F7 F9 FC | 	byte	$e8, $e8, $e9, $e9, $ea, $ea, $eb, $ec, $ed, $ef, $f0, $f3, $f4, $f7, $f9, $fc
1deda     FF 02 05 0A 
1dede     1E 3E 59 67 
1dee2     64 5D 57 52 
1dee6     4D 49 44 3F | 	byte	$ff, $02, $05, $0a, $1e, $3e, $59, $67, $64, $5d, $57, $52, $4d, $49, $44, $3f
1deea     3B 37 33 30 
1deee     2C 29 25 22 
1def2     1F 1C 19 16 
1def6     13 11 0F 0D | 	byte	$3b, $37, $33, $30, $2c, $29, $25, $22, $1f, $1c, $19, $16, $13, $11, $0f, $0d
1defa     0B 09 07 06 
1defe     05 03 03 01 
1df02     00 00 FF FE 
1df06     FD FC FC FB | 	byte	$0b, $09, $07, $06, $05, $03, $03, $01, $00, $00, $ff, $fe, $fd, $fc, $fc, $fb
1df0a     FB FA FA FA 
1df0e     F8 EE D6 BE 
1df12     AB A6 B0 CA 
1df16     E7 05 0E FB | 	byte	$fb, $fa, $fa, $fa, $f8, $ee, $d6, $be, $ab, $a6, $b0, $ca, $e7, $05, $0e, $fb
1df1a     DC C7 C3 D2 
1df1e     ED 0D 23 2B 
1df22     28 24 20 1D 
1df26     1A 18 16 13 | 	byte	$dc, $c7, $c3, $d2, $ed, $0d, $23, $2b, $28, $24, $20, $1d, $1a, $18, $16, $13
1df2a     11 0F 0E 0C 
1df2e     0B 09 08 07 
1df32     06 05 FF EE 
1df36     D5 BF B0 B0 | 	byte	$11, $0f, $0e, $0c, $0b, $09, $08, $07, $06, $05, $ff, $ee, $d5, $bf, $b0, $b0
1df3a     B7 BE C4 C9 
1df3e     CF D2 D6 D9 
1df42     DC DE E0 E1 
1df46     E2 E3 E4 E4 | 	byte	$b7, $be, $c4, $c9, $cf, $d2, $d6, $d9, $dc, $de, $e0, $e1, $e2, $e3, $e4, $e4
1df4a     E5 E6 E6 E7 
1df4e     E8 E9 EA EC 
1df52     ED EF F1 F4 
1df56     F7 F9 FB FE | 	byte	$e5, $e6, $e6, $e7, $e8, $e9, $ea, $ec, $ed, $ef, $f1, $f4, $f7, $f9, $fb, $fe
1df5a     02 05 0C 1E 
1df5e     38 54 63 64 
1df62     5E 58 54 4E 
1df66     4A 45 41 3D | 	byte	$02, $05, $0c, $1e, $38, $54, $63, $64, $5e, $58, $54, $4e, $4a, $45, $41, $3d
1df6a     39 35 31 2E 
1df6e     2A 27 24 21 
1df72     1D 1A 18 15 
1df76     13 10 0E 0C | 	byte	$39, $35, $31, $2e, $2a, $27, $24, $21, $1d, $1a, $18, $15, $13, $10, $0e, $0c
1df7a     0A 08 06 05 
1df7e     04 03 02 01 
1df82     00 FF FE FD 
1df86     FC FB FB FB | 	byte	$0a, $08, $06, $05, $04, $03, $02, $01, $00, $ff, $fe, $fd, $fc, $fb, $fb, $fb
1df8a     FA FA FA F9 
1df8e     F1 E0 C9 B6 
1df92     A9 A9 B4 CA 
1df96     E1 EF ED E0 | 	byte	$fa, $fa, $fa, $f9, $f1, $e0, $c9, $b6, $a9, $a9, $b4, $ca, $e1, $ef, $ed, $e0
1df9a     CF CB D6 EE 
1df9e     08 21 2E 30 
1dfa2     2B 27 23 20 
1dfa6     1D 1A 17 15 | 	byte	$cf, $cb, $d6, $ee, $08, $21, $2e, $30, $2b, $27, $23, $20, $1d, $1a, $17, $15
1dfaa     13 11 0F 0D 
1dfae     0C 0A 09 07 
1dfb2     06 05 00 F2 
1dfb6     DD C9 B8 B1 | 	byte	$13, $11, $0f, $0d, $0c, $0a, $09, $07, $06, $05, $00, $f2, $dd, $c9, $b8, $b1
1dfba     B4 BB C1 C7 
1dfbe     CB CF D3 D5 
1dfc2     D8 DA DC DD 
1dfc6     DE E0 E1 E2 | 	byte	$b4, $bb, $c1, $c7, $cb, $cf, $d3, $d5, $d8, $da, $dc, $dd, $de, $e0, $e1, $e2
1dfca     E3 E3 E4 E6 
1dfce     E7 E8 EA EB 
1dfd2     EE EF F2 F4 
1dfd6     F7 FA FD 01 | 	byte	$e3, $e3, $e4, $e6, $e7, $e8, $ea, $eb, $ee, $ef, $f2, $f4, $f7, $fa, $fd, $01
1dfda     03 07 15 29 
1dfde     44 59 63 62 
1dfe2     5C 57 52 4D 
1dfe6     48 44 40 3C | 	byte	$03, $07, $15, $29, $44, $59, $63, $62, $5c, $57, $52, $4d, $48, $44, $40, $3c
1dfea     39 35 31 2E 
1dfee     2A 27 23 20 
1dff2     1D 1A 17 14 
1dff6     12 10 0E 0C | 	byte	$39, $35, $31, $2e, $2a, $27, $23, $20, $1d, $1a, $17, $14, $12, $10, $0e, $0c
1dffa     0A 08 06 05 
1dffe     04 03 01 01 
1e002     00 FF FE FD 
1e006     FC FB FB FA | 	byte	$0a, $08, $06, $05, $04, $03, $01, $01, $00, $ff, $fe, $fd, $fc, $fb, $fb, $fa
1e00a     FA FA F9 F7 
1e00e     EC DA C8 B6 
1e012     AC AA B3 C0 
1e016     CA CE CF D0 | 	byte	$fa, $fa, $f9, $f7, $ec, $da, $c8, $b6, $ac, $aa, $b3, $c0, $ca, $ce, $cf, $d0
1e01a     D3 D8 E9 FE 
1e01e     18 2A 35 34 
1e022     2F 2B 27 23 
1e026     20 1D 1A 18 | 	byte	$d3, $d8, $e9, $fe, $18, $2a, $35, $34, $2f, $2b, $27, $23, $20, $1d, $1a, $18
1e02a     15 13 11 0F 
1e02e     0D 0B 0A 08 
1e032     07 06 04 FA 
1e036     EB D6 C5 B8 | 	byte	$15, $13, $11, $0f, $0d, $0b, $0a, $08, $07, $06, $04, $fa, $eb, $d6, $c5, $b8
1e03a     B2 B5 BB C1 
1e03e     C6 CA CD D0 
1e042     D3 D6 D7 D9 
1e046     DA DB DC DE | 	byte	$b2, $b5, $bb, $c1, $c6, $ca, $cd, $d0, $d3, $d6, $d7, $d9, $da, $db, $dc, $de
1e04a     DF E0 E1 E3 
1e04e     E4 E6 E8 EA 
1e052     EC EE F1 F4 
1e056     F7 FA FD 01 | 	byte	$df, $e0, $e1, $e3, $e4, $e6, $e8, $ea, $ec, $ee, $f1, $f4, $f7, $fa, $fd, $01
1e05a     05 0B 1C 30 
1e05e     48 5A 63 61 
1e062     5B 56 51 4D 
1e066     48 44 40 3C | 	byte	$05, $0b, $1c, $30, $48, $5a, $63, $61, $5b, $56, $51, $4d, $48, $44, $40, $3c
1e06a     38 35 31 2D 
1e06e     2A 27 24 21 
1e072     1E 1B 18 15 
1e076     12 10 0E 0C | 	byte	$38, $35, $31, $2d, $2a, $27, $24, $21, $1e, $1b, $18, $15, $12, $10, $0e, $0c
1e07a     0A 08 07 05 
1e07e     04 02 02 01 
1e082     00 FE FE FD 
1e086     FC FB FB FA | 	byte	$0a, $08, $07, $05, $04, $02, $02, $01, $00, $fe, $fe, $fd, $fc, $fb, $fb, $fa
1e08a     FA FA F9 F2 
1e08e     E6 D5 C5 B7 
1e092     AE AC AE AF 
1e096     AF B2 B9 C5 | 	byte	$fa, $fa, $f9, $f2, $e6, $d5, $c5, $b7, $ae, $ac, $ae, $af, $af, $b2, $b9, $c5
1e09a     D4 E8 FC 11 
1e09e     26 34 3B 38 
1e0a2     33 2F 2A 26 
1e0a6     23 20 1D 1A | 	byte	$d4, $e8, $fc, $11, $26, $34, $3b, $38, $33, $2f, $2a, $26, $23, $20, $1d, $1a
1e0aa     17 15 12 11 
1e0ae     0F 0D 0B 0A 
1e0b2     08 07 06 FE 
1e0b6     F1 E0 CF C1 | 	byte	$17, $15, $12, $11, $0f, $0d, $0b, $0a, $08, $07, $06, $fe, $f1, $e0, $cf, $c1
1e0ba     B7 B4 B7 BC 
1e0be     C1 C5 C8 CB 
1e0c2     CE D0 D2 D4 
1e0c6     D6 D7 D8 DA | 	byte	$b7, $b4, $b7, $bc, $c1, $c5, $c8, $cb, $ce, $d0, $d2, $d4, $d6, $d7, $d8, $da
1e0ca     DC DD DF E0 
1e0ce     E2 E4 E7 E9 
1e0d2     EB EF F2 F5 
1e0d6     F8 FC FF 04 | 	byte	$dc, $dd, $df, $e0, $e2, $e4, $e7, $e9, $eb, $ef, $f2, $f5, $f8, $fc, $ff, $04
1e0da     0A 18 2D 41 
1e0de     54 5F 62 5E 
1e0e2     59 53 4F 4A 
1e0e6     46 42 3E 3B | 	byte	$0a, $18, $2d, $41, $54, $5f, $62, $5e, $59, $53, $4f, $4a, $46, $42, $3e, $3b
1e0ea     37 33 30 2D 
1e0ee     2A 26 23 20 
1e0f2     1D 1A 17 14 
1e0f6     12 10 0E 0C | 	byte	$37, $33, $30, $2d, $2a, $26, $23, $20, $1d, $1a, $17, $14, $12, $10, $0e, $0c
1e0fa     0A 08 06 05 
1e0fe     04 03 02 00 
1e102     00 FF FE FD 
1e106     FC FB FA FA | 	byte	$0a, $08, $06, $05, $04, $03, $02, $00, $00, $ff, $fe, $fd, $fc, $fb, $fa, $fa
1e10a     FA F9 F4 EA 
1e10e     DB CC BE B3 
1e112     AD A5 9F 9A 
1e116     9B A2 B1 C9 | 	byte	$fa, $f9, $f4, $ea, $db, $cc, $be, $b3, $ad, $a5, $9f, $9a, $9b, $a2, $b1, $c9
1e11a     E3 FF 16 2A 
1e11e     38 40 3F 3A 
1e122     35 30 2C 28 
1e126     24 21 1E 1A | 	byte	$e3, $ff, $16, $2a, $38, $40, $3f, $3a, $35, $30, $2c, $28, $24, $21, $1e, $1a
1e12a     18 16 14 11 
1e12e     0F 0D 0C 0A 
1e132     08 08 04 FD 
1e136     EF E1 D0 C3 | 	byte	$18, $16, $14, $11, $0f, $0d, $0c, $0a, $08, $08, $04, $fd, $ef, $e1, $d0, $c3
1e13a     BA B5 B5 BA 
1e13e     BE C2 C5 C8 
1e142     CA CC CE D0 
1e146     D2 D4 D5 D7 | 	byte	$ba, $b5, $b5, $ba, $be, $c2, $c5, $c8, $ca, $cc, $ce, $d0, $d2, $d4, $d5, $d7
1e14a     D9 DB DD DF 
1e14e     E1 E4 E7 EA 
1e152     ED F0 F4 F8 
1e156     FB FF 04 0B | 	byte	$d9, $db, $dd, $df, $e1, $e4, $e7, $ea, $ed, $f0, $f4, $f8, $fb, $ff, $04, $0b
1e15a     1B 2D 41 51 
1e15e     5E 61 5E 58 
1e162     53 4F 4A 47 
1e166     42 3F 3B 38 | 	byte	$1b, $2d, $41, $51, $5e, $61, $5e, $58, $53, $4f, $4a, $47, $42, $3f, $3b, $38
1e16a     34 30 2D 2A 
1e16e     27 24 20 1D 
1e172     1B 18 15 12 
1e176     10 0E 0C 0A | 	byte	$34, $30, $2d, $2a, $27, $24, $20, $1d, $1b, $18, $15, $12, $10, $0e, $0c, $0a
1e17a     09 07 06 04 
1e17e     03 02 01 00 
1e182     FF FE FD FC 
1e186     FC FB FA FA | 	byte	$09, $07, $06, $04, $03, $02, $01, $00, $ff, $fe, $fd, $fc, $fc, $fb, $fa, $fa
1e18a     F8 F2 E8 D9 
1e18e     CC BF B5 A7 
1e192     99 8F 89 8C 
1e196     97 AD C6 E7 | 	byte	$f8, $f2, $e8, $d9, $cc, $bf, $b5, $a7, $99, $8f, $89, $8c, $97, $ad, $c6, $e7
1e19a     04 21 34 40 
1e19e     46 44 3E 38 
1e1a2     34 2F 2B 26 
1e1a6     23 20 1D 1B | 	byte	$04, $21, $34, $40, $46, $44, $3e, $38, $34, $2f, $2b, $26, $23, $20, $1d, $1b
1e1aa     18 15 13 11 
1e1ae     0F 0D 0B 0A 
1e1b2     08 06 00 F6 
1e1b6     E9 DA CD C0 | 	byte	$18, $15, $13, $11, $0f, $0d, $0b, $0a, $08, $06, $00, $f6, $e9, $da, $cd, $c0
1e1ba     B8 B4 B5 B9 
1e1be     BD C0 C3 C5 
1e1c2     C7 C9 CC CD 
1e1c6     D0 D2 D4 D6 | 	byte	$b8, $b4, $b5, $b9, $bd, $c0, $c3, $c5, $c7, $c9, $cc, $cd, $d0, $d2, $d4, $d6
1e1ca     D8 DA DD E0 
1e1ce     E3 E6 E9 ED 
1e1d2     F0 F4 F8 FD 
1e1d6     01 07 14 24 | 	byte	$d8, $da, $dd, $e0, $e3, $e6, $e9, $ed, $f0, $f4, $f8, $fd, $01, $07, $14, $24
1e1da     37 48 56 5F 
1e1de     60 5C 57 52 
1e1e2     4E 4A 46 42 
1e1e6     3E 3B 37 34 | 	byte	$37, $48, $56, $5f, $60, $5c, $57, $52, $4e, $4a, $46, $42, $3e, $3b, $37, $34
1e1ea     30 2D 2A 27 
1e1ee     24 20 1D 1B 
1e1f2     18 15 13 10 
1e1f6     0D 0B 09 08 | 	byte	$30, $2d, $2a, $27, $24, $20, $1d, $1b, $18, $15, $13, $10, $0d, $0b, $09, $08
1e1fa     06 05 04 02 
1e1fe     01 00 FF FF 
1e202     FE FD FC FB 
1e206     FB FA F9 F5 | 	byte	$06, $05, $04, $02, $01, $00, $ff, $ff, $fe, $fd, $fc, $fb, $fb, $fa, $f9, $f5
1e20a     ED E1 D5 C8 
1e20e     B9 A9 98 89 
1e212     82 82 88 98 
1e216     B3 D3 F1 12 | 	byte	$ed, $e1, $d5, $c8, $b9, $a9, $98, $89, $82, $82, $88, $98, $b3, $d3, $f1, $12
1e21a     2C 40 4A 4C 
1e21e     47 40 3B 35 
1e222     31 2C 28 25 
1e226     21 1E 1B 18 | 	byte	$2c, $40, $4a, $4c, $47, $40, $3b, $35, $31, $2c, $28, $25, $21, $1e, $1b, $18
1e22a     16 13 11 0F 
1e22e     0D 0B 0A 08 
1e232     06 00 F6 EB 
1e236     DD D1 C4 BA | 	byte	$16, $13, $11, $0f, $0d, $0b, $0a, $08, $06, $00, $f6, $eb, $dd, $d1, $c4, $ba
1e23a     B4 B2 B5 B8 
1e23e     BB BE C0 C3 
1e242     C5 C7 CA CC 
1e246     CE D0 D3 D5 | 	byte	$b4, $b2, $b5, $b8, $bb, $be, $c0, $c3, $c5, $c7, $ca, $cc, $ce, $d0, $d3, $d5
1e24a     D8 DC DF E2 
1e24e     E6 E9 EE F2 
1e252     F6 FB FF 06 
1e256     12 22 34 44 | 	byte	$d8, $dc, $df, $e2, $e6, $e9, $ee, $f2, $f6, $fb, $ff, $06, $12, $22, $34, $44
1e25a     53 5C 60 5D 
1e25e     58 53 4F 4B 
1e262     47 43 40 3C 
1e266     39 35 32 2F | 	byte	$53, $5c, $60, $5d, $58, $53, $4f, $4b, $47, $43, $40, $3c, $39, $35, $32, $2f
1e26a     2C 29 25 23 
1e26e     1F 1D 1A 17 
1e272     14 11 0F 0D 
1e276     0B 09 07 06 | 	byte	$2c, $29, $25, $23, $1f, $1d, $1a, $17, $14, $11, $0f, $0d, $0b, $09, $07, $06
1e27a     04 03 02 01 
1e27e     00 FF FE FD 
1e282     FC FB FB FA 
1e286     F9 F5 ED E3 | 	byte	$04, $03, $02, $01, $00, $ff, $fe, $fd, $fc, $fb, $fb, $fa, $f9, $f5, $ed, $e3
1e28a     D6 CA B7 A3 
1e28e     92 83 81 81 
1e292     83 92 AD C9 
1e296     EB 0D 28 3F | 	byte	$d6, $ca, $b7, $a3, $92, $83, $81, $81, $83, $92, $ad, $c9, $eb, $0d, $28, $3f
1e29a     4E 51 4C 45 
1e29e     3F 3A 35 30 
1e2a2     2B 27 24 21 
1e2a6     1D 1A 18 15 | 	byte	$4e, $51, $4c, $45, $3f, $3a, $35, $30, $2b, $27, $24, $21, $1d, $1a, $18, $15
1e2aa     13 11 0F 0D 
1e2ae     0B 09 08 04 
1e2b2     FD F2 E7 D9 
1e2b6     CC C1 B8 B3 | 	byte	$13, $11, $0f, $0d, $0b, $09, $08, $04, $fd, $f2, $e7, $d9, $cc, $c1, $b8, $b3
1e2ba     B1 B2 B5 B9 
1e2be     BB BE C1 C3 
1e2c2     C5 C8 CA CD 
1e2c6     D0 D3 D5 D9 | 	byte	$b1, $b2, $b5, $b9, $bb, $be, $c1, $c3, $c5, $c8, $ca, $cd, $d0, $d3, $d5, $d9
1e2ca     DC E1 E4 E8 
1e2ce     ED F1 F6 FB 
1e2d2     00 0A 17 28 
1e2d6     37 47 53 5C | 	byte	$dc, $e1, $e4, $e8, $ed, $f1, $f6, $fb, $00, $0a, $17, $28, $37, $47, $53, $5c
1e2da     5E 5B 56 52 
1e2de     4E 4A 47 44 
1e2e2     40 3C 39 35 
1e2e6     32 2F 2C 29 | 	byte	$5e, $5b, $56, $52, $4e, $4a, $47, $44, $40, $3c, $39, $35, $32, $2f, $2c, $29
1e2ea     26 23 20 1D 
1e2ee     1A 17 14 11 
1e2f2     0F 0D 0B 09 
1e2f6     07 06 04 03 | 	byte	$26, $23, $20, $1d, $1a, $17, $14, $11, $0f, $0d, $0b, $09, $07, $06, $04, $03
1e2fa     02 01 00 FF 
1e2fe     FE FD FC FB 
1e302     FB FA F7 F0 
1e306     E7 DD CF BE | 	byte	$02, $01, $00, $ff, $fe, $fd, $fc, $fb, $fb, $fa, $f7, $f0, $e7, $dd, $cf, $be
1e30a     A8 96 85 81 
1e30e     81 81 87 99 
1e312     B6 D5 F3 13 
1e316     2F 42 50 53 | 	byte	$a8, $96, $85, $81, $81, $81, $87, $99, $b6, $d5, $f3, $13, $2f, $42, $50, $53
1e31a     4F 48 42 3C 
1e31e     37 32 2D 29 
1e322     25 21 1F 1B 
1e326     19 16 13 11 | 	byte	$4f, $48, $42, $3c, $37, $32, $2d, $29, $25, $21, $1f, $1b, $19, $16, $13, $11
1e32a     0F 0D 0C 0A 
1e32e     08 04 FE F3 
1e332     E7 DC CF C4 
1e336     BA B3 AF AF | 	byte	$0f, $0d, $0c, $0a, $08, $04, $fe, $f3, $e7, $dc, $cf, $c4, $ba, $b3, $af, $af
1e33a     B1 B4 B7 BA 
1e33e     BD BF C2 C5 
1e342     C7 CB CE D1 
1e346     D5 D8 DC E0 | 	byte	$b1, $b4, $b7, $ba, $bd, $bf, $c2, $c5, $c7, $cb, $ce, $d1, $d5, $d8, $dc, $e0
1e34a     E5 E9 EE F3 
1e34e     F8 FD 06 12 
1e352     21 30 40 4E 
1e356     57 5C 5C 58 | 	byte	$e5, $e9, $ee, $f3, $f8, $fd, $06, $12, $21, $30, $40, $4e, $57, $5c, $5c, $58
1e35a     53 50 4C 48 
1e35e     44 41 3E 3B 
1e362     37 34 31 2E 
1e366     2B 28 25 22 | 	byte	$53, $50, $4c, $48, $44, $41, $3e, $3b, $37, $34, $31, $2e, $2b, $28, $25, $22
1e36a     1F 1C 19 16 
1e36e     13 11 0E 0D 
1e372     0A 09 07 05 
1e376     04 03 01 01 | 	byte	$1f, $1c, $19, $16, $13, $11, $0e, $0d, $0a, $09, $07, $05, $04, $03, $01, $01
1e37a     FF FE FD FC 
1e37e     FC FB FB F8 
1e382     F2 EB E0 D3 
1e386     C1 AB 99 88 | 	byte	$ff, $fe, $fd, $fc, $fc, $fb, $fb, $f8, $f2, $eb, $e0, $d3, $c1, $ab, $99, $88
1e38a     81 81 81 82 
1e38e     91 A7 C4 E3 
1e392     00 1C 36 47 
1e396     52 55 51 4B | 	byte	$81, $81, $81, $82, $91, $a7, $c4, $e3, $00, $1c, $36, $47, $52, $55, $51, $4b
1e39a     44 3E 39 34 
1e39e     2F 2B 27 23 
1e3a2     1F 1C 19 16 
1e3a6     14 12 0F 0E | 	byte	$44, $3e, $39, $34, $2f, $2b, $27, $23, $1f, $1c, $19, $16, $14, $12, $0f, $0e
1e3aa     0C 0A 08 04 
1e3ae     FD F4 E9 DD 
1e3b2     D1 C6 BC B4 
1e3b6     AE AC AD AF | 	byte	$0c, $0a, $08, $04, $fd, $f4, $e9, $dd, $d1, $c6, $bc, $b4, $ae, $ac, $ad, $af
1e3ba     B3 B6 B9 BC 
1e3be     BF C2 C5 C8 
1e3c2     CC D0 D3 D7 
1e3c6     DC E0 E5 EA | 	byte	$b3, $b6, $b9, $bc, $bf, $c2, $c5, $c8, $cc, $d0, $d3, $d7, $dc, $e0, $e5, $ea
1e3ca     EF F3 F9 00 
1e3ce     0C 19 28 38 
1e3d2     46 50 58 5B 
1e3d6     5A 56 52 4D | 	byte	$ef, $f3, $f9, $00, $0c, $19, $28, $38, $46, $50, $58, $5b, $5a, $56, $52, $4d
1e3da     4A 47 43 40 
1e3de     3D 3A 36 33 
1e3e2     30 2D 2A 28 
1e3e6     25 21 1F 1C | 	byte	$4a, $47, $43, $40, $3d, $3a, $36, $33, $30, $2d, $2a, $28, $25, $21, $1f, $1c
1e3ea     19 16 13 11 
1e3ee     0F 0C 0A 08 
1e3f2     07 05 04 02 
1e3f6     01 00 FF FE | 	byte	$19, $16, $13, $11, $0f, $0c, $0a, $08, $07, $05, $04, $02, $01, $00, $ff, $fe
1e3fa     FD FC FB FB 
1e3fe     FA F5 F0 E6 
1e402     D8 C8 B4 A2 
1e406     90 84 81 81 | 	byte	$fd, $fc, $fb, $fb, $fa, $f5, $f0, $e6, $d8, $c8, $b4, $a2, $90, $84, $81, $81
1e40a     81 86 98 AE 
1e40e     C9 E4 01 1D 
1e412     32 44 4F 54 
1e416     53 4F 49 43 | 	byte	$81, $86, $98, $ae, $c9, $e4, $01, $1d, $32, $44, $4f, $54, $53, $4f, $49, $43
1e41a     3D 37 32 2D 
1e41e     29 26 22 1F 
1e422     1B 19 16 13 
1e426     11 0F 0D 0B | 	byte	$3d, $37, $32, $2d, $29, $26, $22, $1f, $1b, $19, $16, $13, $11, $0f, $0d, $0b
1e42a     0A 07 01 F8 
1e42e     EF E3 D8 CC 
1e432     C1 B9 B1 AD 
1e436     AA AA AD B0 | 	byte	$0a, $07, $01, $f8, $ef, $e3, $d8, $cc, $c1, $b9, $b1, $ad, $aa, $aa, $ad, $b0
1e43a     B4 B7 BA BD 
1e43e     C1 C5 C8 CD 
1e442     D0 D5 D9 DE 
1e446     E4 E8 EE F3 | 	byte	$b4, $b7, $ba, $bd, $c1, $c5, $c8, $cd, $d0, $d5, $d9, $de, $e4, $e8, $ee, $f3
1e44a     F9 02 0D 1B 
1e44e     2B 38 45 4F 
1e452     56 59 59 55 
1e456     51 4E 4A 47 | 	byte	$f9, $02, $0d, $1b, $2b, $38, $45, $4f, $56, $59, $59, $55, $51, $4e, $4a, $47
1e45a     44 40 3D 3A 
1e45e     37 34 30 2E 
1e462     2B 28 25 22 
1e466     20 1D 1A 17 | 	byte	$44, $40, $3d, $3a, $37, $34, $30, $2e, $2b, $28, $25, $22, $20, $1d, $1a, $17
1e46a     14 12 0F 0D 
1e46e     0B 09 08 06 
1e472     05 03 02 01 
1e476     00 FF FE FD | 	byte	$14, $12, $0f, $0d, $0b, $09, $08, $06, $05, $03, $02, $01, $00, $ff, $fe, $fd
1e47a     FC FB FA F6 
1e47e     EF E5 D5 C3 
1e482     B1 9F 90 84 
1e486     81 81 81 87 | 	byte	$fc, $fb, $fa, $f6, $ef, $e5, $d5, $c3, $b1, $9f, $90, $84, $81, $81, $81, $87
1e48a     98 AC C3 DE 
1e48e     F9 11 27 3B 
1e492     48 50 51 50 
1e496     4D 48 42 3D | 	byte	$98, $ac, $c3, $de, $f9, $11, $27, $3b, $48, $50, $51, $50, $4d, $48, $42, $3d
1e49a     37 32 2E 2A 
1e49e     26 22 1F 1C 
1e4a2     19 16 13 11 
1e4a6     0F 0D 0B 09 | 	byte	$37, $32, $2e, $2a, $26, $22, $1f, $1c, $19, $16, $13, $11, $0f, $0d, $0b, $09
1e4aa     05 FF F6 ED 
1e4ae     E1 D6 CB C2 
1e4b2     B8 B1 AC A9 
1e4b6     A8 AA AD B0 | 	byte	$05, $ff, $f6, $ed, $e1, $d6, $cb, $c2, $b8, $b1, $ac, $a9, $a8, $aa, $ad, $b0
1e4ba     B4 B8 BB C0 
1e4be     C3 C7 CC D0 
1e4c2     D5 DA DF E4 
1e4c6     EA EF F6 FE | 	byte	$b4, $b8, $bb, $c0, $c3, $c7, $cc, $d0, $d5, $da, $df, $e4, $ea, $ef, $f6, $fe
1e4ca     09 16 25 33 
1e4ce     40 4A 52 58 
1e4d2     58 56 52 4F 
1e4d6     4C 48 45 42 | 	byte	$09, $16, $25, $33, $40, $4a, $52, $58, $58, $56, $52, $4f, $4c, $48, $45, $42
1e4da     3E 3C 39 36 
1e4de     33 30 2D 2B 
1e4e2     28 25 22 1F 
1e4e6     1D 19 16 14 | 	byte	$3e, $3c, $39, $36, $33, $30, $2d, $2b, $28, $25, $22, $1f, $1d, $19, $16, $14
1e4ea     11 0F 0D 0B 
1e4ee     09 07 05 04 
1e4f2     03 02 01 FF 
1e4f6     FF FD FC FC | 	byte	$11, $0f, $0d, $0b, $09, $07, $05, $04, $03, $02, $01, $ff, $ff, $fd, $fc, $fc
1e4fa     FB F7 F1 E7 
1e4fe     D7 C8 B5 A5 
1e502     95 89 82 81 
1e506     82 85 93 A3 | 	byte	$fb, $f7, $f1, $e7, $d7, $c8, $b5, $a5, $95, $89, $82, $81, $82, $85, $93, $a3
1e50a     B8 D0 E7 00 
1e50e     15 2A 3B 46 
1e512     4D 4F 50 4E 
1e516     4B 45 40 3A | 	byte	$b8, $d0, $e7, $00, $15, $2a, $3b, $46, $4d, $4f, $50, $4e, $4b, $45, $40, $3a
1e51a     35 30 2B 27 
1e51e     23 20 1D 1A 
1e522     17 14 12 10 
1e526     0E 0C 0A 06 | 	byte	$35, $30, $2b, $27, $23, $20, $1d, $1a, $17, $14, $12, $10, $0e, $0c, $0a, $06
1e52a     00 F8 EF E4 
1e52e     D9 CF C4 BB 
1e532     B3 AD A9 A7 
1e536     A7 A9 AD B0 | 	byte	$00, $f8, $ef, $e4, $d9, $cf, $c4, $bb, $b3, $ad, $a9, $a7, $a7, $a9, $ad, $b0
1e53a     B4 B8 BC C0 
1e53e     C5 CA CE D3 
1e542     D9 DE E4 E9 
1e546     F0 F7 01 0D | 	byte	$b4, $b8, $bc, $c0, $c5, $ca, $ce, $d3, $d9, $de, $e4, $e9, $f0, $f7, $01, $0d
1e54a     1A 28 35 41 
1e54e     4B 52 56 57 
1e552     54 51 4E 4A 
1e556     47 44 41 3F | 	byte	$1a, $28, $35, $41, $4b, $52, $56, $57, $54, $51, $4e, $4a, $47, $44, $41, $3f
1e55a     3C 39 36 33 
1e55e     30 2E 2B 28 
1e562     25 22 1F 1D 
1e566     1A 17 14 11 | 	byte	$3c, $39, $36, $33, $30, $2e, $2b, $28, $25, $22, $1f, $1d, $1a, $17, $14, $11
1e56a     0F 0D 0B 09 
1e56e     07 06 04 03 
1e572     02 01 FF FE 
1e576     FD FC FC FA | 	byte	$0f, $0d, $0b, $09, $07, $06, $04, $03, $02, $01, $ff, $fe, $fd, $fc, $fc, $fa
1e57a     F5 EC E0 D0 
1e57e     C0 AF A1 93 
1e582     89 83 82 84 
1e586     8B 98 A8 BC | 	byte	$f5, $ec, $e0, $d0, $c0, $af, $a1, $93, $89, $83, $82, $84, $8b, $98, $a8, $bc
1e58a     D0 E7 FC 12 
1e58e     24 34 41 48 
1e592     4C 4E 4E 4C 
1e596     49 45 3E 39 | 	byte	$d0, $e7, $fc, $12, $24, $34, $41, $48, $4c, $4e, $4e, $4c, $49, $45, $3e, $39
1e59a     34 2F 2A 26 
1e59e     23 1F 1C 19 
1e5a2     16 13 11 0F 
1e5a6     0D 0A 07 02 | 	byte	$34, $2f, $2a, $26, $23, $1f, $1c, $19, $16, $13, $11, $0f, $0d, $0a, $07, $02
1e5aa     FB F3 E9 DF 
1e5ae     D5 CB C1 B8 
1e5b2     B1 AC A8 A6 
1e5b6     A5 A7 AB AF | 	byte	$fb, $f3, $e9, $df, $d5, $cb, $c1, $b8, $b1, $ac, $a8, $a6, $a5, $a7, $ab, $af
1e5ba     B3 B7 BC C1 
1e5be     C5 CB D0 D6 
1e5c2     DB E1 E7 ED 
1e5c6     F4 FF 0B 18 | 	byte	$b3, $b7, $bc, $c1, $c5, $cb, $d0, $d6, $db, $e1, $e7, $ed, $f4, $ff, $0b, $18
1e5ca     25 32 3D 47 
1e5ce     4E 53 55 54 
1e5d2     50 4D 4A 47 
1e5d6     45 42 3F 3C | 	byte	$25, $32, $3d, $47, $4e, $53, $55, $54, $50, $4d, $4a, $47, $45, $42, $3f, $3c
1e5da     3A 37 35 32 
1e5de     2F 2C 2A 27 
1e5e2     24 21 1E 1C 
1e5e6     1A 17 14 11 | 	byte	$3a, $37, $35, $32, $2f, $2c, $2a, $27, $24, $21, $1e, $1c, $1a, $17, $14, $11
1e5ea     0F 0D 0B 09 
1e5ee     07 05 04 03 
1e5f2     01 00 FF FE 
1e5f6     FD FC FA F5 | 	byte	$0f, $0d, $0b, $09, $07, $05, $04, $03, $01, $00, $ff, $fe, $fd, $fc, $fa, $f5
1e5fa     EB DF D1 C0 
1e5fe     B2 A3 96 8D 
1e602     87 85 87 8D 
1e606     97 A6 B5 C9 | 	byte	$eb, $df, $d1, $c0, $b2, $a3, $96, $8d, $87, $85, $87, $8d, $97, $a6, $b5, $c9
1e60a     DD F0 05 16 
1e60e     28 35 3F 45 
1e612     49 4B 4C 4B 
1e616     49 46 41 3A | 	byte	$dd, $f0, $05, $16, $28, $35, $3f, $45, $49, $4b, $4c, $4b, $49, $46, $41, $3a
1e61a     35 30 2C 28 
1e61e     24 20 1D 1A 
1e622     17 14 11 0F 
1e626     0D 0A 07 02 | 	byte	$35, $30, $2c, $28, $24, $20, $1d, $1a, $17, $14, $11, $0f, $0d, $0a, $07, $02
1e62a     FB F3 EA E0 
1e62e     D7 CD C3 BB 
1e632     B3 AD A9 A6 
1e636     A5 A6 A8 AD | 	byte	$fb, $f3, $ea, $e0, $d7, $cd, $c3, $bb, $b3, $ad, $a9, $a6, $a5, $a6, $a8, $ad
1e63a     B1 B6 BA BF 
1e63e     C4 CA CF D4 
1e642     DA E0 E7 EE 
1e646     F8 02 0F 1B | 	byte	$b1, $b6, $ba, $bf, $c4, $ca, $cf, $d4, $da, $e0, $e7, $ee, $f8, $02, $0f, $1b
1e64a     29 34 3F 47 
1e64e     4E 52 53 52 
1e652     4F 4B 49 46 
1e656     43 41 3E 3C | 	byte	$29, $34, $3f, $47, $4e, $52, $53, $52, $4f, $4b, $49, $46, $43, $41, $3e, $3c
1e65a     39 36 34 31 
1e65e     2F 2D 2B 28 
1e662     25 22 1F 1D 
1e666     1A 17 14 11 | 	byte	$39, $36, $34, $31, $2f, $2d, $2b, $28, $25, $22, $1f, $1d, $1a, $17, $14, $11
1e66a     0F 0D 0B 09 
1e66e     07 05 04 03 
1e672     01 00 FF FE 
1e676     FD FB F6 EE | 	byte	$0f, $0d, $0b, $09, $07, $05, $04, $03, $01, $00, $ff, $fe, $fd, $fb, $f6, $ee
1e67a     E3 D6 C7 B8 
1e67e     AB 9F 94 8D 
1e682     89 89 8D 93 
1e686     9F AC BB CE | 	byte	$e3, $d6, $c7, $b8, $ab, $9f, $94, $8d, $89, $89, $8d, $93, $9f, $ac, $bb, $ce
1e68a     DF F3 05 17 
1e68e     25 31 3A 41 
1e692     45 48 49 4A 
1e696     49 47 43 3E | 	byte	$df, $f3, $05, $17, $25, $31, $3a, $41, $45, $48, $49, $4a, $49, $47, $43, $3e
1e69a     39 33 2F 2A 
1e69e     26 22 1F 1B 
1e6a2     19 16 13 10 
1e6a6     0E 0A 07 02 | 	byte	$39, $33, $2f, $2a, $26, $22, $1f, $1b, $19, $16, $13, $10, $0e, $0a, $07, $02
1e6aa     FC F5 ED E3 
1e6ae     DA D0 C7 BF 
1e6b2     B7 B0 AB A7 
1e6b6     A5 A4 A6 A9 | 	byte	$fc, $f5, $ed, $e3, $da, $d0, $c7, $bf, $b7, $b0, $ab, $a7, $a5, $a4, $a6, $a9
1e6ba     AD B2 B7 BC 
1e6be     C1 C7 CD D3 
1e6c2     D9 DF E6 EE 
1e6c6     F8 04 10 1D | 	byte	$ad, $b2, $b7, $bc, $c1, $c7, $cd, $d3, $d9, $df, $e6, $ee, $f8, $04, $10, $1d
1e6ca     28 34 3E 46 
1e6ce     4C 50 51 50 
1e6d2     4D 4A 48 45 
1e6d6     42 40 3D 3B | 	byte	$28, $34, $3e, $46, $4c, $50, $51, $50, $4d, $4a, $48, $45, $42, $40, $3d, $3b
1e6da     39 36 34 31 
1e6de     2F 2D 2A 28 
1e6e2     25 23 20 1D 
1e6e6     1A 18 14 12 | 	byte	$39, $36, $34, $31, $2f, $2d, $2a, $28, $25, $23, $20, $1d, $1a, $18, $14, $12
1e6ea     0F 0D 0B 09 
1e6ee     07 05 04 03 
1e6f2     01 00 FF FE 
1e6f6     FC F8 F0 E6 | 	byte	$0f, $0d, $0b, $09, $07, $05, $04, $03, $01, $00, $ff, $fe, $fc, $f8, $f0, $e6
1e6fa     DA CD BE B2 
1e6fe     A5 9B 94 8E 
1e702     8C 8E 93 9C 
1e706     A6 B5 C3 D5 | 	byte	$da, $cd, $be, $b2, $a5, $9b, $94, $8e, $8c, $8e, $93, $9c, $a6, $b5, $c3, $d5
1e70a     E5 F7 08 16 
1e70e     24 2F 38 3D 
1e712     41 44 47 48 
1e716     48 47 45 41 | 	byte	$e5, $f7, $08, $16, $24, $2f, $38, $3d, $41, $44, $47, $48, $48, $47, $45, $41
1e71a     3C 36 31 2C 
1e71e     29 24 21 1D 
1e722     1A 17 14 11 
1e726     0D 0A 06 01 | 	byte	$3c, $36, $31, $2c, $29, $24, $21, $1d, $1a, $17, $14, $11, $0d, $0a, $06, $01
1e72a     FB F5 EC E3 
1e72e     DA D1 C9 C0 
1e732     B8 B1 AB A7 
1e736     A5 A4 A4 A6 | 	byte	$fb, $f5, $ec, $e3, $da, $d1, $c9, $c0, $b8, $b1, $ab, $a7, $a5, $a4, $a4, $a6
1e73a     AB AF B5 BA 
1e73e     C0 C6 CD D3 
1e742     D9 E0 E8 F2 
1e746     FD 09 15 22 | 	byte	$ab, $af, $b5, $ba, $c0, $c6, $cd, $d3, $d9, $e0, $e8, $f2, $fd, $09, $15, $22
1e74a     2D 37 40 47 
1e74e     4C 4E 4E 4C 
1e752     4A 47 45 43 
1e756     41 3E 3C 3A | 	byte	$2d, $37, $40, $47, $4c, $4e, $4e, $4c, $4a, $47, $45, $43, $41, $3e, $3c, $3a
1e75a     37 36 34 31 
1e75e     2E 2C 2A 27 
1e762     24 22 1F 1C 
1e766     1A 17 14 12 | 	byte	$37, $36, $34, $31, $2e, $2c, $2a, $27, $24, $22, $1f, $1c, $1a, $17, $14, $12
1e76a     0F 0D 0B 09 
1e76e     07 06 04 02 
1e772     01 00 FF FC 
1e776     F7 EE E3 D9 | 	byte	$0f, $0d, $0b, $09, $07, $06, $04, $02, $01, $00, $ff, $fc, $f7, $ee, $e3, $d9
1e77a     CC BF B3 A7 
1e77e     9E 97 93 91 
1e782     92 96 9E A8 
1e786     B4 C2 D1 E0 | 	byte	$cc, $bf, $b3, $a7, $9e, $97, $93, $91, $92, $96, $9e, $a8, $b4, $c2, $d1, $e0
1e78a     F1 00 0F 1C 
1e78e     27 30 36 3B 
1e792     3F 42 45 46 
1e796     46 45 44 40 | 	byte	$f1, $00, $0f, $1c, $27, $30, $36, $3b, $3f, $42, $45, $46, $46, $45, $44, $40
1e79a     3C 37 32 2D 
1e79e     29 25 21 1D 
1e7a2     1A 17 13 10 
1e7a6     0C 08 04 FF | 	byte	$3c, $37, $32, $2d, $29, $25, $21, $1d, $1a, $17, $13, $10, $0c, $08, $04, $ff
1e7aa     F8 F1 E9 E0 
1e7ae     D7 CE C5 BE 
1e7b2     B6 B0 AB A7 
1e7b6     A5 A4 A4 A7 | 	byte	$f8, $f1, $e9, $e0, $d7, $ce, $c5, $be, $b6, $b0, $ab, $a7, $a5, $a4, $a4, $a7
1e7ba     AB B0 B6 BC 
1e7be     C2 C8 CF D6 
1e7c2     DC E5 F0 FA 
1e7c6     07 14 1F 2B | 	byte	$ab, $b0, $b6, $bc, $c2, $c8, $cf, $d6, $dc, $e5, $f0, $fa, $07, $14, $1f, $2b
1e7ca     34 3D 43 49 
1e7ce     4B 4C 4B 49 
1e7d2     46 44 42 40 
1e7d6     3E 3C 3A 38 | 	byte	$34, $3d, $43, $49, $4b, $4c, $4b, $49, $46, $44, $42, $40, $3e, $3c, $3a, $38
1e7da     36 34 32 2F 
1e7de     2D 2B 28 26 
1e7e2     23 21 1E 1B 
1e7e6     19 16 13 11 | 	byte	$36, $34, $32, $2f, $2d, $2b, $28, $26, $23, $21, $1e, $1b, $19, $16, $13, $11
1e7ea     0E 0C 0A 08 
1e7ee     06 05 04 02 
1e7f2     01 FE F9 F2 
1e7f6     E9 DE D2 C7 | 	byte	$0e, $0c, $0a, $08, $06, $05, $04, $02, $01, $fe, $f9, $f2, $e9, $de, $d2, $c7
1e7fa     BB AF A6 9E 
1e7fe     99 96 95 97 
1e802     9D A5 AE BA 
1e806     C7 D5 E3 F1 | 	byte	$bb, $af, $a6, $9e, $99, $96, $95, $97, $9d, $a5, $ae, $ba, $c7, $d5, $e3, $f1
1e80a     00 0D 1A 24 
1e80e     2C 33 37 3B 
1e812     3D 40 42 44 
1e816     44 43 41 3E | 	byte	$00, $0d, $1a, $24, $2c, $33, $37, $3b, $3d, $40, $42, $44, $44, $43, $41, $3e
1e81a     39 35 2F 2B 
1e81e     27 23 20 1C 
1e822     18 15 10 0C 
1e826     08 04 FF F9 | 	byte	$39, $35, $2f, $2b, $27, $23, $20, $1c, $18, $15, $10, $0c, $08, $04, $ff, $f9
1e82a     F1 EA E1 D8 
1e82e     D0 C8 C1 B9 
1e832     B3 AD A9 A7 
1e836     A5 A5 A6 A9 | 	byte	$f1, $ea, $e1, $d8, $d0, $c8, $c1, $b9, $b3, $ad, $a9, $a7, $a5, $a5, $a6, $a9
1e83a     AE B4 BA C0 
1e83e     C7 CD D4 DC 
1e842     E7 F1 FC 09 
1e846     14 20 2B 35 | 	byte	$ae, $b4, $ba, $c0, $c7, $cd, $d4, $dc, $e7, $f1, $fc, $09, $14, $20, $2b, $35
1e84a     3D 43 47 49 
1e84e     4A 48 46 44 
1e852     42 40 3F 3D 
1e856     3B 39 37 35 | 	byte	$3d, $43, $47, $49, $4a, $48, $46, $44, $42, $40, $3f, $3d, $3b, $39, $37, $35
1e85a     33 31 2F 2D 
1e85e     2B 28 26 23 
1e862     21 1E 1B 19 
1e866     16 13 10 0E | 	byte	$33, $31, $2f, $2d, $2b, $28, $26, $23, $21, $1e, $1b, $19, $16, $13, $10, $0e
1e86a     0C 0A 08 06 
1e86e     05 03 02 FE 
1e872     F9 F2 EA DF 
1e876     D5 C9 BE B3 | 	byte	$0c, $0a, $08, $06, $05, $03, $02, $fe, $f9, $f2, $ea, $df, $d5, $c9, $be, $b3
1e87a     AB A3 9E 9A 
1e87e     9A 9B 9F A5 
1e882     AE B8 C4 D1 
1e886     DD EB F8 05 | 	byte	$ab, $a3, $9e, $9a, $9a, $9b, $9f, $a5, $ae, $b8, $c4, $d1, $dd, $eb, $f8, $05
1e88a     11 1B 24 2B 
1e88e     30 35 38 3B 
1e892     3E 40 41 42 
1e896     41 40 3D 3A | 	byte	$11, $1b, $24, $2b, $30, $35, $38, $3b, $3e, $40, $41, $42, $41, $40, $3d, $3a
1e89a     36 31 2C 28 
1e89e     24 20 1C 18 
1e8a2     14 0F 0B 06 
1e8a6     02 FD F6 F0 | 	byte	$36, $31, $2c, $28, $24, $20, $1c, $18, $14, $0f, $0b, $06, $02, $fd, $f6, $f0
1e8aa     E7 DF D8 CF 
1e8ae     C7 C0 B9 B4 
1e8b2     AE AA A7 A6 
1e8b6     A6 A8 AB AE | 	byte	$e7, $df, $d8, $cf, $c7, $c0, $b9, $b4, $ae, $aa, $a7, $a6, $a6, $a8, $ab, $ae
1e8ba     B4 BA C1 C8 
1e8be     CF D8 E1 EC 
1e8c2     F8 03 10 1B 
1e8c6     26 2F 37 3D | 	byte	$b4, $ba, $c1, $c8, $cf, $d8, $e1, $ec, $f8, $03, $10, $1b, $26, $2f, $37, $3d
1e8ca     43 46 47 47 
1e8ce     45 43 41 40 
1e8d2     3E 3D 3B 3A 
1e8d6     38 36 34 32 | 	byte	$43, $46, $47, $47, $45, $43, $41, $40, $3e, $3d, $3b, $3a, $38, $36, $34, $32
1e8da     31 2F 2D 2A 
1e8de     28 26 23 20 
1e8e2     1E 1B 18 15 
1e8e6     12 10 0E 0B | 	byte	$31, $2f, $2d, $2a, $28, $26, $23, $20, $1e, $1b, $18, $15, $12, $10, $0e, $0b
1e8ea     09 07 06 04 
1e8ee     01 FC F7 F0 
1e8f2     E5 DA D1 C6 
1e8f6     BC B4 AB A5 | 	byte	$09, $07, $06, $04, $01, $fc, $f7, $f0, $e5, $da, $d1, $c6, $bc, $b4, $ab, $a5
1e8fa     A0 9E 9E A0 
1e8fe     A4 AA B2 BB 
1e902     C7 D2 DF EB 
1e906     F8 03 0E 17 | 	byte	$a0, $9e, $9e, $a0, $a4, $aa, $b2, $bb, $c7, $d2, $df, $eb, $f8, $03, $0e, $17
1e90a     20 26 2B 2F 
1e90e     33 36 3A 3D 
1e912     3E 40 40 3F 
1e916     3E 3C 39 34 | 	byte	$20, $26, $2b, $2f, $33, $36, $3a, $3d, $3e, $40, $40, $3f, $3e, $3c, $39, $34
1e91a     2F 2A 27 22 
1e91e     1E 19 14 10 
1e922     0B 07 02 FD 
1e926     F8 F1 E9 E1 | 	byte	$2f, $2a, $27, $22, $1e, $19, $14, $10, $0b, $07, $02, $fd, $f8, $f1, $e9, $e1
1e92a     DA D3 CA C3 
1e92e     BC B6 B2 AD 
1e932     AA A8 A7 A9 
1e936     AB AE B2 B8 | 	byte	$da, $d3, $ca, $c3, $bc, $b6, $b2, $ad, $aa, $a8, $a7, $a9, $ab, $ae, $b2, $b8
1e93a     BF C7 CE D7 
1e93e     E1 EB F8 03 
1e942     0F 1A 24 2D 
1e946     35 3B 40 42 | 	byte	$bf, $c7, $ce, $d7, $e1, $eb, $f8, $03, $0f, $1a, $24, $2d, $35, $3b, $40, $42
1e94a     44 43 42 40 
1e94e     3F 3E 3D 3B 
1e952     3A 39 37 36 
1e956     34 33 31 2F | 	byte	$44, $43, $42, $40, $3f, $3e, $3d, $3b, $3a, $39, $37, $36, $34, $33, $31, $2f
1e95a     2D 2B 28 26 
1e95e     24 21 1F 1C 
1e962     19 16 13 11 
1e966     0E 0C 0A 08 | 	byte	$2d, $2b, $28, $26, $24, $21, $1f, $1c, $19, $16, $13, $11, $0e, $0c, $0a, $08
1e96a     06 02 FD F8 
1e96e     F0 E8 DE D4 
1e972     CB C0 B8 B0 
1e976     AA A5 A2 A1 | 	byte	$06, $02, $fd, $f8, $f0, $e8, $de, $d4, $cb, $c0, $b8, $b0, $aa, $a5, $a2, $a1
1e97a     A2 A6 AA B2 
1e97e     B9 C3 CE DA 
1e982     E5 F1 FB 06 
1e986     0F 18 20 25 | 	byte	$a2, $a6, $aa, $b2, $b9, $c3, $ce, $da, $e5, $f1, $fb, $06, $0f, $18, $20, $25
1e98a     29 2D 31 35 
1e98e     37 3A 3C 3E 
1e992     3E 3E 3D 3B 
1e996     39 35 31 2C | 	byte	$29, $2d, $31, $35, $37, $3a, $3c, $3e, $3e, $3e, $3d, $3b, $39, $35, $31, $2c
1e99a     27 22 1E 19 
1e99e     14 0F 0A 06 
1e9a2     01 FC F6 F0 
1e9a6     E9 E1 DA D2 | 	byte	$27, $22, $1e, $19, $14, $0f, $0a, $06, $01, $fc, $f6, $f0, $e9, $e1, $da, $d2
1e9aa     CA C4 BE B8 
1e9ae     B3 AF AC AA 
1e9b2     AA AB AD AF 
1e9b6     B4 BA C0 C8 | 	byte	$ca, $c4, $be, $b8, $b3, $af, $ac, $aa, $aa, $ab, $ad, $af, $b4, $ba, $c0, $c8
1e9ba     D1 DA E5 F0 
1e9be     FC 05 11 1B 
1e9c2     24 2D 34 39 
1e9c6     3D 3F 40 3F | 	byte	$d1, $da, $e5, $f0, $fc, $05, $11, $1b, $24, $2d, $34, $39, $3d, $3f, $40, $3f
1e9ca     3E 3D 3B 3A 
1e9ce     3A 39 38 36 
1e9d2     35 33 32 31 
1e9d6     2F 2D 2B 29 | 	byte	$3e, $3d, $3b, $3a, $3a, $39, $38, $36, $35, $33, $32, $31, $2f, $2d, $2b, $29
1e9da     27 25 23 20 
1e9de     1E 1C 18 15 
1e9e2     12 0F 0D 0B 
1e9e6     09 06 02 FE | 	byte	$27, $25, $23, $20, $1e, $1c, $18, $15, $12, $0f, $0d, $0b, $09, $06, $02, $fe
1e9ea     F7 F1 E8 DE 
1e9ee     D7 CD C3 BC 
1e9f2     B5 AF AA A8 
1e9f6     A7 A7 AA AE | 	byte	$f7, $f1, $e8, $de, $d7, $cd, $c3, $bc, $b5, $af, $aa, $a8, $a7, $a7, $aa, $ae
1e9fa     B5 BC C3 CD 
1e9fe     D7 E1 EB F6 
1ea02     00 09 11 18 
1ea06     1E 22 26 2A | 	byte	$b5, $bc, $c3, $cd, $d7, $e1, $eb, $f6, $00, $09, $11, $18, $1e, $22, $26, $2a
1ea0a     2E 31 33 35 
1ea0e     37 38 3A 39 
1ea12     39 37 35 32 
1ea16     2F 2B 26 21 | 	byte	$2e, $31, $33, $35, $37, $38, $3a, $39, $39, $37, $35, $32, $2f, $2b, $26, $21
1ea1a     1B 17 12 0D 
1ea1e     08 03 FF FB 
1ea22     F4 EE E8 E1 
1ea26     DA D4 CD C7 | 	byte	$1b, $17, $12, $0d, $08, $03, $ff, $fb, $f4, $ee, $e8, $e1, $da, $d4, $cd, $c7
1ea2a     C1 BD B8 B5 
1ea2e     B2 B0 B0 B1 
1ea32     B2 B5 B9 BD 
1ea36     C4 CC D4 DE | 	byte	$c1, $bd, $b8, $b5, $b2, $b0, $b0, $b1, $b2, $b5, $b9, $bd, $c4, $cc, $d4, $de
1ea3a     E9 F2 FE 07 
1ea3e     11 1A 23 2A 
1ea42     30 34 38 39 
1ea46     3A 3A 39 38 | 	byte	$e9, $f2, $fe, $07, $11, $1a, $23, $2a, $30, $34, $38, $39, $3a, $3a, $39, $38
1ea4a     37 36 35 34 
1ea4e     33 32 31 30 
1ea52     2F 2E 2D 2B 
1ea56     29 28 25 23 | 	byte	$37, $36, $35, $34, $33, $32, $31, $30, $2f, $2e, $2d, $2b, $29, $28, $25, $23
1ea5a     21 1E 1C 1A 
1ea5e     18 14 12 0F 
1ea62     0E 0B 08 03 
1ea66     FF F8 F2 EB | 	byte	$21, $1e, $1c, $1a, $18, $14, $12, $0f, $0e, $0b, $08, $03, $ff, $f8, $f2, $eb
1ea6a     E4 DB D3 CB 
1ea6e     C4 BD B8 B3 
1ea72     B1 AF AF B0 
1ea76     B2 B7 BD C4 | 	byte	$e4, $db, $d3, $cb, $c4, $bd, $b8, $b3, $b1, $af, $af, $b0, $b2, $b7, $bd, $c4
1ea7a     CC D4 DC E7 
1ea7e     EF F7 00 08 
1ea82     10 16 1B 1F 
1ea86     23 25 28 2C | 	byte	$cc, $d4, $dc, $e7, $ef, $f7, $00, $08, $10, $16, $1b, $1f, $23, $25, $28, $2c
1ea8a     2E 30 33 34 
1ea8e     36 36 36 36 
1ea92     34 31 2E 2B 
1ea96     27 21 1C 17 | 	byte	$2e, $30, $33, $34, $36, $36, $36, $36, $34, $31, $2e, $2b, $27, $21, $1c, $17
1ea9a     12 0D 09 04 
1ea9e     00 FB F5 F0 
1eaa2     EA E4 DF D8 
1eaa6     D2 CC C7 C3 | 	byte	$12, $0d, $09, $04, $00, $fb, $f5, $f0, $ea, $e4, $df, $d8, $d2, $cc, $c7, $c3
1eaaa     BF BB B9 B7 
1eaae     B6 B7 B7 B9 
1eab2     BB C0 C5 CD 
1eab6     D5 DF E7 F2 | 	byte	$bf, $bb, $b9, $b7, $b6, $b7, $b7, $b9, $bb, $c0, $c5, $cd, $d5, $df, $e7, $f2
1eaba     FB 06 0F 17 
1eabe     1E 25 2B 2F 
1eac2     32 34 35 35 
1eac6     34 33 32 32 | 	byte	$fb, $06, $0f, $17, $1e, $25, $2b, $2f, $32, $34, $35, $35, $34, $33, $32, $32
1eaca     31 31 30 2F 
1eace     2E 2D 2C 2B 
1ead2     2B 2A 28 26 
1ead6     24 22 21 1E | 	byte	$31, $31, $30, $2f, $2e, $2d, $2c, $2b, $2b, $2a, $28, $26, $24, $22, $21, $1e
1eada     1C 19 18 15 
1eade     12 10 0D 0A 
1eae2     07 02 FD F7 
1eae6     F0 EA E2 DC | 	byte	$1c, $19, $18, $15, $12, $10, $0d, $0a, $07, $02, $fd, $f7, $f0, $ea, $e2, $dc
1eaea     D5 CD C7 C1 
1eaee     BD B9 B6 B5 
1eaf2     B6 B7 BA BD 
1eaf6     C3 C9 D0 D7 | 	byte	$d5, $cd, $c7, $c1, $bd, $b9, $b6, $b5, $b6, $b7, $ba, $bd, $c3, $c9, $d0, $d7
1eafa     DF E7 EF F7 
1eafe     FF 05 0C 11 
1eb02     16 1A 1D 20 
1eb06     23 25 28 2A | 	byte	$df, $e7, $ef, $f7, $ff, $05, $0c, $11, $16, $1a, $1d, $20, $23, $25, $28, $2a
1eb0a     2D 2F 30 31 
1eb0e     32 32 31 30 
1eb12     2F 2C 28 24 
1eb16     1F 1A 14 10 | 	byte	$2d, $2f, $30, $31, $32, $32, $31, $30, $2f, $2c, $28, $24, $1f, $1a, $14, $10
1eb1a     0B 06 01 FE 
1eb1e     F9 F4 EF EA 
1eb22     E4 DE D9 D4 
1eb26     D0 CB C7 C4 | 	byte	$0b, $06, $01, $fe, $f9, $f4, $ef, $ea, $e4, $de, $d9, $d4, $d0, $cb, $c7, $c4
1eb2a     C0 BF BD BC 
1eb2e     BC BD C0 C2 
1eb32     C7 CD D3 DA 
1eb36     E4 EC F5 FE | 	byte	$c0, $bf, $bd, $bc, $bc, $bd, $c0, $c2, $c7, $cd, $d3, $da, $e4, $ec, $f5, $fe
1eb3a     06 0F 16 1E 
1eb3e     23 27 2B 2E 
1eb42     2F 30 2F 2F 
1eb46     2E 2E 2E 2D | 	byte	$06, $0f, $16, $1e, $23, $27, $2b, $2e, $2f, $30, $2f, $2f, $2e, $2e, $2e, $2d
1eb4a     2D 2C 2C 2B 
1eb4e     2B 2A 29 28 
1eb52     27 25 23 22 
1eb56     21 1F 1D 1B | 	byte	$2d, $2c, $2c, $2b, $2b, $2a, $29, $28, $27, $25, $23, $22, $21, $1f, $1d, $1b
1eb5a     19 16 14 11 
1eb5e     0E 0B 07 03 
1eb62     FD F8 F3 EC 
1eb66     E6 DF D9 D2 | 	byte	$19, $16, $14, $11, $0e, $0b, $07, $03, $fd, $f8, $f3, $ec, $e6, $df, $d9, $d2
1eb6a     CD C8 C4 C0 
1eb6e     BE BD BD BE 
1eb72     C0 C3 C7 CC 
1eb76     D1 D8 DF E5 | 	byte	$cd, $c8, $c4, $c0, $be, $bd, $bd, $be, $c0, $c3, $c7, $cc, $d1, $d8, $df, $e5
1eb7a     ED F3 FA 01 
1eb7e     06 0C 10 14 
1eb82     18 1A 1D 1E 
1eb86     21 23 26 28 | 	byte	$ed, $f3, $fa, $01, $06, $0c, $10, $14, $18, $1a, $1d, $1e, $21, $23, $26, $28
1eb8a     2A 2C 2C 2E 
1eb8e     2E 2E 2C 2B 
1eb92     29 26 22 1D 
1eb96     18 13 0E 0A | 	byte	$2a, $2c, $2c, $2e, $2e, $2e, $2c, $2b, $29, $26, $22, $1d, $18, $13, $0e, $0a
1eb9a     05 01 FE FA 
1eb9e     F6 F0 EC E6 
1eba2     E2 DD D8 D3 
1eba6     D0 CC C8 C6 | 	byte	$05, $01, $fe, $fa, $f6, $f0, $ec, $e6, $e2, $dd, $d8, $d3, $d0, $cc, $c8, $c6
1ebaa     C4 C3 C2 C3 
1ebae     C3 C4 C7 CB 
1ebb2     D0 D7 DE E5 
1ebb6     EE F6 FE 04 | 	byte	$c4, $c3, $c2, $c3, $c3, $c4, $c7, $cb, $d0, $d7, $de, $e5, $ee, $f6, $fe, $04
1ebba     0D 13 19 1E 
1ebbe     23 25 27 29 
1ebc2     29 29 29 29 
1ebc6     29 29 29 29 | 	byte	$0d, $13, $19, $1e, $23, $25, $27, $29, $29, $29, $29, $29, $29, $29, $29, $29
1ebca     29 29 28 27 
1ebce     27 26 26 25 
1ebd2     24 22 21 1F 
1ebd6     1E 1C 1A 18 | 	byte	$29, $29, $28, $27, $27, $26, $26, $25, $24, $22, $21, $1f, $1e, $1c, $1a, $18
1ebda     15 14 10 0D 
1ebde     09 05 00 FB 
1ebe2     F6 F0 EB E5 
1ebe6     DF DA D3 CF | 	byte	$15, $14, $10, $0d, $09, $05, $00, $fb, $f6, $f0, $eb, $e5, $df, $da, $d3, $cf
1ebea     CB C8 C5 C4 
1ebee     C3 C3 C4 C6 
1ebf2     C9 CD D2 D7 
1ebf6     DC E3 E9 EF | 	byte	$cb, $c8, $c5, $c4, $c3, $c3, $c4, $c6, $c9, $cd, $d2, $d7, $dc, $e3, $e9, $ef
1ebfa     F5 FB 00 05 
1ebfe     0B 0F 12 14 
1ec02     16 18 1A 1D 
1ec06     1F 21 23 25 | 	byte	$f5, $fb, $00, $05, $0b, $0f, $12, $14, $16, $18, $1a, $1d, $1f, $21, $23, $25
1ec0a     27 28 29 2A 
1ec0e     2A 29 28 27 
1ec12     24 21 1D 19 
1ec16     14 10 0B 07 | 	byte	$27, $28, $29, $2a, $2a, $29, $28, $27, $24, $21, $1d, $19, $14, $10, $0b, $07
1ec1a     03 FF FB F7 
1ec1e     F3 EF EA E7 
1ec22     E2 DD D9 D5 
1ec26     D2 CF CD CB | 	byte	$03, $ff, $fb, $f7, $f3, $ef, $ea, $e7, $e2, $dd, $d9, $d5, $d2, $cf, $cd, $cb
1ec2a     CA C8 C8 C8 
1ec2e     CA CB CF D3 
1ec32     D8 DD E4 EB 
1ec36     F2 FA 00 08 | 	byte	$ca, $c8, $c8, $c8, $ca, $cb, $cf, $d3, $d8, $dd, $e4, $eb, $f2, $fa, $00, $08
1ec3a     0D 14 18 1C 
1ec3e     20 22 24 24 
1ec42     24 24 24 25 
1ec46     25 25 25 25 | 	byte	$0d, $14, $18, $1c, $20, $22, $24, $24, $24, $24, $24, $25, $25, $25, $25, $25
1ec4a     25 25 25 25 
1ec4e     24 24 23 23 
1ec52     21 20 1F 1D 
1ec56     1C 1A 19 16 | 	byte	$25, $25, $25, $25, $24, $24, $23, $23, $21, $20, $1f, $1d, $1c, $1a, $19, $16
1ec5a     14 11 0E 09 
1ec5e     06 00 FB F6 
1ec62     F2 ED E6 E2 
1ec66     DD D8 D4 D0 | 	byte	$14, $11, $0e, $09, $06, $00, $fb, $f6, $f2, $ed, $e6, $e2, $dd, $d8, $d4, $d0
1ec6a     CD CB C9 C8 
1ec6e     C9 CA CB CE 
1ec72     D2 D5 D9 DE 
1ec76     E3 E9 ED F3 | 	byte	$cd, $cb, $c9, $c8, $c9, $ca, $cb, $ce, $d2, $d5, $d9, $de, $e3, $e9, $ed, $f3
1ec7a     F9 FE 03 07 
1ec7e     0B 0E 11 13 
1ec82     14 16 18 1A 
1ec86     1D 1E 20 22 | 	byte	$f9, $fe, $03, $07, $0b, $0e, $11, $13, $14, $16, $18, $1a, $1d, $1e, $20, $22
1ec8a     23 25 25 26 
1ec8e     26 26 25 23 
1ec92     21 1F 1B 17 
1ec96     13 0E 0B 06 | 	byte	$23, $25, $25, $26, $26, $26, $25, $23, $21, $1f, $1b, $17, $13, $0e, $0b, $06
1ec9a     02 FE FA F7 
1ec9e     F3 F0 EC E8 
1eca2     E4 E1 DD D9 
1eca6     D7 D4 D2 D1 | 	byte	$02, $fe, $fa, $f7, $f3, $f0, $ec, $e8, $e4, $e1, $dd, $d9, $d7, $d4, $d2, $d1
1ecaa     CF CE CE CE 
1ecae     CF D1 D4 D8 
1ecb2     DC E2 E7 ED 
1ecb6     F3 FA 00 06 | 	byte	$cf, $ce, $ce, $ce, $cf, $d1, $d4, $d8, $dc, $e2, $e7, $ed, $f3, $fa, $00, $06
1ecba     0C 10 15 18 
1ecbe     1B 1D 1F 1F 
1ecc2     1F 1F 20 20 
1ecc6     21 21 22 21 | 	byte	$0c, $10, $15, $18, $1b, $1d, $1f, $1f, $1f, $1f, $20, $20, $21, $21, $22, $21
1ecca     21 21 22 22 
1ecce     22 21 21 21 
1ecd2     1F 1E 1D 1C 
1ecd6     1B 19 17 16 | 	byte	$21, $21, $22, $22, $22, $21, $21, $21, $1f, $1e, $1d, $1c, $1b, $19, $17, $16
1ecda     14 10 0C 07 
1ecde     03 FE FA F5 
1ece2     F0 EC E7 E2 
1ece6     DE DA D6 D3 | 	byte	$14, $10, $0c, $07, $03, $fe, $fa, $f5, $f0, $ec, $e7, $e2, $de, $da, $d6, $d3
1ecea     D1 CF CE CE 
1ecee     CE D0 D1 D4 
1ecf2     D7 DB DF E3 
1ecf6     E7 EC F1 F6 | 	byte	$d1, $cf, $ce, $ce, $ce, $d0, $d1, $d4, $d7, $db, $df, $e3, $e7, $ec, $f1, $f6
1ecfa     FA FF 03 07 
1ecfe     09 0C 0E 10 
1ed02     12 13 15 17 
1ed06     19 1A 1C 1E | 	byte	$fa, $ff, $03, $07, $09, $0c, $0e, $10, $12, $13, $15, $17, $19, $1a, $1c, $1e
1ed0a     1F 20 21 22 
1ed0e     22 22 22 20 
1ed12     1E 1C 19 16 
1ed16     12 0F 0B 06 | 	byte	$1f, $20, $21, $22, $22, $22, $22, $20, $1e, $1c, $19, $16, $12, $0f, $0b, $06
1ed1a     02 FF FC F9 
1ed1e     F5 F2 EE EB 
1ed22     E7 E5 E1 DE 
1ed26     DC DA D7 D6 | 	byte	$02, $ff, $fc, $f9, $f5, $f2, $ee, $eb, $e7, $e5, $e1, $de, $dc, $da, $d7, $d6
1ed2a     D5 D4 D4 D4 
1ed2e     D5 D7 DA DC 
1ed32     E1 E5 EA EE 
1ed36     F4 F9 FF 04 | 	byte	$d5, $d4, $d4, $d4, $d5, $d7, $da, $dc, $e1, $e5, $ea, $ee, $f4, $f9, $ff, $04
1ed3a     08 0C 11 14 
1ed3e     17 19 1A 1B 
1ed42     1B 1B 1C 1C 
1ed46     1D 1D 1D 1E | 	byte	$08, $0c, $11, $14, $17, $19, $1a, $1b, $1b, $1b, $1c, $1c, $1d, $1d, $1d, $1e
1ed4a     1F 1F 1F 1F 
1ed4e     1F 1F       | 	byte	$1f[6]
1ed50     1E 1E 1D 1D 
1ed54     1C 1A 1A 18 
1ed58     17 14 12 0E 
1ed5c     0A 06 01 FD | 	byte	$1e, $1e, $1d, $1d, $1c, $1a, $1a, $18, $17, $14, $12, $0e, $0a, $06, $01, $fd
1ed60     F8 F4 EF EB 
1ed64     E7 E3 DF DC 
1ed68     D9 D7 D5 D4 
1ed6c     D3 D3 D4 D6 | 	byte	$f8, $f4, $ef, $eb, $e7, $e3, $df, $dc, $d9, $d7, $d5, $d4, $d3, $d3, $d4, $d6
1ed70     D8 DA DD E0 
1ed74     E4 E7 EC F0 
1ed78     F3 F8 FB FF 
1ed7c     03 05 08 0A | 	byte	$d8, $da, $dd, $e0, $e4, $e7, $ec, $f0, $f3, $f8, $fb, $ff, $03, $05, $08, $0a
1ed80     0D 0E 0F 11 
1ed84     13 14 16 18 
1ed88     19 1A 1C 1E 
1ed8c     1E 20 20 1F | 	byte	$0d, $0e, $0f, $11, $13, $14, $16, $18, $19, $1a, $1c, $1e, $1e, $20, $20, $1f
1ed90     1E 1D 1C 19 
1ed94     17 14 10 0D 
1ed98     09 05 01 FE 
1ed9c     FB F8 F5 F2 | 	byte	$1e, $1d, $1c, $19, $17, $14, $10, $0d, $09, $05, $01, $fe, $fb, $f8, $f5, $f2
1eda0     EF EC E9 E6 
1eda4     E3 E1 DE DD 
1eda8     DB D9 D9 D8 
1edac     D8 D9 DA DC | 	byte	$ef, $ec, $e9, $e6, $e3, $e1, $de, $dd, $db, $d9, $d9, $d8, $d8, $d9, $da, $dc
1edb0     DF E1 E5 E9 
1edb4     EE F2 F7 FB 
1edb8     00 05 08 0D 
1edbc     0F 12 15 16 | 	byte	$df, $e1, $e5, $e9, $ee, $f2, $f7, $fb, $00, $05, $08, $0d, $0f, $12, $15, $16
1edc0     17 18 18 19 
1edc4     1A 1A 1A 1B 
1edc8     1B 1B 1C 1C 
1edcc     1C 1C 1C 1D | 	byte	$17, $18, $18, $19, $1a, $1a, $1a, $1b, $1b, $1b, $1c, $1c, $1c, $1c, $1c, $1d
1edd0     1C 1B 1B 1B 
1edd4     19 19 17 16 
1edd8     14 10 0D 0A 
1eddc     05 01 FD F9 | 	byte	$1c, $1b, $1b, $1b, $19, $19, $17, $16, $14, $10, $0d, $0a, $05, $01, $fd, $f9
1ede0     F5 F1 EE EA 
1ede4     E6 E4 E1 DE 
1ede8     DD DB DA D9 
1edec     D9 DA DB DC | 	byte	$f5, $f1, $ee, $ea, $e6, $e4, $e1, $de, $dd, $db, $da, $d9, $d9, $da, $db, $dc
1edf0     DE E0 E3 E5 
1edf4     E9 EC EF F2 
1edf8     F7 FA FD 00 
1edfc     03 05 08 09 | 	byte	$de, $e0, $e3, $e5, $e9, $ec, $ef, $f2, $f7, $fa, $fd, $00, $03, $05, $08, $09
1ee00     0B 0C 0E 0F 
1ee04     11 13 14 16 
1ee08     17 19 1A 1C 
1ee0c     1C 1D 1D 1C | 	byte	$0b, $0c, $0e, $0f, $11, $13, $14, $16, $17, $19, $1a, $1c, $1c, $1d, $1d, $1c
1ee10     1C 1A 18 15 
1ee14     13 11 0D 0A 
1ee18     06 03 00 FC 
1ee1c     F9 F7 F4 F2 | 	byte	$1c, $1a, $18, $15, $13, $11, $0d, $0a, $06, $03, $00, $fc, $f9, $f7, $f4, $f2
1ee20     EF EC EA E7 
1ee24     E4 E3 E1 DF 
1ee28     DE DD DC DC 
1ee2c     DD DD DE E1 | 	byte	$ef, $ec, $ea, $e7, $e4, $e3, $e1, $df, $de, $dd, $dc, $dc, $dd, $dd, $de, $e1
1ee30     E3 E7 EB EE 
1ee34     F2 F7 FA FF 
1ee38     02 07 0A 0D 
1ee3c     10 12 14 14 | 	byte	$e3, $e7, $eb, $ee, $f2, $f7, $fa, $ff, $02, $07, $0a, $0d, $10, $12, $14, $14
1ee40     15 15 15 16 
1ee44     17 17 18 18 
1ee48     19 19 19 1A 
1ee4c     1A 1A 1A 19 | 	byte	$15, $15, $15, $16, $17, $17, $18, $18, $19, $19, $19, $1a, $1a, $1a, $1a, $19
1ee50     19 19 19 18 
1ee54     17 16 14 11 
1ee58     0F 0B 07 04 
1ee5c     00 FC F8 F5 | 	byte	$19, $19, $19, $18, $17, $16, $14, $11, $0f, $0b, $07, $04, $00, $fc, $f8, $f5
1ee60     F2 EF EC E9 
1ee64     E6 E4 E2 E1 
1ee68     E0 DF DE DE 
1ee6c     DF E0 E1 E3 | 	byte	$f2, $ef, $ec, $e9, $e6, $e4, $e2, $e1, $e0, $df, $de, $de, $df, $e0, $e1, $e3
1ee70     E4 E7 E9 EC 
1ee74     EF F2 F5 F7 
1ee78     FA FD 00 02 
1ee7c     04 06 08 09 | 	byte	$e4, $e7, $e9, $ec, $ef, $f2, $f5, $f7, $fa, $fd, $00, $02, $04, $06, $08, $09
1ee80     0A 0C 0D 0E 
1ee84     10 12 13 15 
1ee88     16 17 19 1A 
1ee8c     1A 1A 1A 18 | 	byte	$0a, $0c, $0d, $0e, $10, $12, $13, $15, $16, $17, $19, $1a, $1a, $1a, $1a, $18
1ee90     17 16 13 11 
1ee94     0E 0B 09 05 
1ee98     02 FF FD FA 
1ee9c     F8 F5 F3 F0 | 	byte	$17, $16, $13, $11, $0e, $0b, $09, $05, $02, $ff, $fd, $fa, $f8, $f5, $f3, $f0
1eea0     EE EC EA E7 
1eea4     E6 E4 E2 E2 
1eea8     E1 E0 E0 E1 
1eeac     E1 E3 E5 E8 | 	byte	$ee, $ec, $ea, $e7, $e6, $e4, $e2, $e2, $e1, $e0, $e0, $e1, $e1, $e3, $e5, $e8
1eeb0     EA ED F1 F4 
1eeb4     F8 FC FF 03 
1eeb8     06 09 0C 0D 
1eebc     0F 11 12 12 | 	byte	$ea, $ed, $f1, $f4, $f8, $fc, $ff, $03, $06, $09, $0c, $0d, $0f, $11, $12, $12
1eec0     13 13 14 14 
1eec4     15 15 16 16 
1eec8     16 17 18 18 
1eecc     18 18 17 17 | 	byte	$13, $13, $14, $14, $15, $15, $16, $16, $16, $17, $18, $18, $18, $18, $17, $17
1eed0     17 16 16 15 
1eed4     13 11 0E 0B 
1eed8     08 05 01 FD 
1eedc     FA F7 F4 F1 | 	byte	$17, $16, $16, $15, $13, $11, $0e, $0b, $08, $05, $01, $fd, $fa, $f7, $f4, $f1
1eee0     EF ED EB E9 
1eee4     E7 E6 E5 E4 
1eee8     E4 E4 E4 E4 
1eeec     E5 E6 E7 EA | 	byte	$ef, $ed, $eb, $e9, $e7, $e6, $e5, $e4, $e4, $e4, $e4, $e4, $e5, $e6, $e7, $ea
1eef0     EB ED F0 F2 
1eef4     F4 F6 F9 FB 
1eef8     FD 00 02 04 
1eefc     05 06 07 08 | 	byte	$eb, $ed, $f0, $f2, $f4, $f6, $f9, $fb, $fd, $00, $02, $04, $05, $06, $07, $08
1ef00     0A 0B 0D 0E 
1ef04     10 11 13 14 
1ef08     15 16 17 17 
1ef0c     17 16 15 14 | 	byte	$0a, $0b, $0d, $0e, $10, $11, $13, $14, $15, $16, $17, $17, $17, $16, $15, $14
1ef10     12 10 0E 0C 
1ef14     09 06 03 01 
1ef18     FE FC FA F8 
1ef1c     F6 F4 F2 EF | 	byte	$12, $10, $0e, $0c, $09, $06, $03, $01, $fe, $fc, $fa, $f8, $f6, $f4, $f2, $ef
1ef20     ED EB EA E8 
1ef24     E7 E6 E5 E4 
1ef28     E4 E4 E5 E6 
1ef2c     E7 E9 EC EE | 	byte	$ed, $eb, $ea, $e8, $e7, $e6, $e5, $e4, $e4, $e4, $e5, $e6, $e7, $e9, $ec, $ee
1ef30     F1 F4 F7 FA 
1ef34     FD 01 04 06 
1ef38     09 0B 0C 0E 
1ef3c     0F 10 10 10 | 	byte	$f1, $f4, $f7, $fa, $fd, $01, $04, $06, $09, $0b, $0c, $0e, $0f, $10, $10, $10
1ef40     11 11 12 13 
1ef44     13 14 14 15 
1ef48     15 15 16 16 
1ef4c     16 15 15 15 | 	byte	$11, $11, $12, $13, $13, $14, $14, $15, $15, $15, $16, $16, $16, $15, $15, $15
1ef50     14 13 11 0F 
1ef54     0C 0A 07 04 
1ef58     01 FE FB F8 
1ef5c     F5 F3 F1 EF | 	byte	$14, $13, $11, $0f, $0c, $0a, $07, $04, $01, $fe, $fb, $f8, $f5, $f3, $f1, $ef
1ef60     EE EC EB EA 
1ef64     E9 E8 E8 E8 
1ef68     E8 E8 E9 EA 
1ef6c     EB EC EE F0 | 	byte	$ee, $ec, $eb, $ea, $e9, $e8, $e8, $e8, $e8, $e8, $e9, $ea, $eb, $ec, $ee, $f0
1ef70     F1 F3 F5 F7 
1ef74     F9 FB FD FF 
1ef78     00 02 03 05 
1ef7c     06 07 08 09 | 	byte	$f1, $f3, $f5, $f7, $f9, $fb, $fd, $ff, $00, $02, $03, $05, $06, $07, $08, $09
1ef80     0A 0C 0D 0F 
1ef84     10 11 13 13 
1ef88     14 14 14 13 
1ef8c     12 11 10 0E | 	byte	$0a, $0c, $0d, $0f, $10, $11, $13, $13, $14, $14, $14, $13, $12, $11, $10, $0e
1ef90     0C 0A 08 06 
1ef94     03 00 FE FC 
1ef98     FA F8 F7 F5 
1ef9c     F3 F1 EF EE | 	byte	$0c, $0a, $08, $06, $03, $00, $fe, $fc, $fa, $f8, $f7, $f5, $f3, $f1, $ef, $ee
1efa0     ED EB EA E9 
1efa4     E8 E7 E7 E8 
1efa8     E8 E9 EB ED 
1efac     EF F1 F3 F6 | 	byte	$ed, $eb, $ea, $e9, $e8, $e7, $e7, $e8, $e8, $e9, $eb, $ed, $ef, $f1, $f3, $f6
1efb0     F8 FB FE 00 
1efb4     03 05 07 09 
1efb8     0B 0C 0C 0D 
1efbc     0D 0E 0F 0F | 	byte	$f8, $fb, $fe, $00, $03, $05, $07, $09, $0b, $0c, $0c, $0d, $0d, $0e, $0f, $0f
1efc0     10 11 11 11 
1efc4     12 12 13 13 
1efc8     13 13 13 13 
1efcc     13 13 11 10 | 	byte	$10, $11, $11, $11, $12, $12, $13, $13, $13, $13, $13, $13, $13, $13, $11, $10
1efd0     0F 0C 0A 08 
1efd4     05 02 FF FD 
1efd8     FA F8 F6 F4 
1efdc     F2 F1 F0 EF | 	byte	$0f, $0c, $0a, $08, $05, $02, $ff, $fd, $fa, $f8, $f6, $f4, $f2, $f1, $f0, $ef
1efe0     EE ED EC EC 
1efe4     EC EC EC EC 
1efe8     ED EE EF F0 
1efec     F1 F2 F3 F5 | 	byte	$ee, $ed, $ec, $ec, $ec, $ec, $ec, $ec, $ed, $ee, $ef, $f0, $f1, $f2, $f3, $f5
1eff0     F7 F8 FA FC 
1eff4     FD FF 00 01 
1eff8     03 04 05 06 
1effc     07 08 09 0A | 	byte	$f7, $f8, $fa, $fc, $fd, $ff, $00, $01, $03, $04, $05, $06, $07, $08, $09, $0a
1f000     0C 0D 0E 0F 
1f004     11 11 11 11 
1f008     11 11 10 0F 
1f00c     0E 0C 0A 09 | 	byte	$0c, $0d, $0e, $0f, $11, $11, $11, $11, $11, $11, $10, $0f, $0e, $0c, $0a, $09
1f010     06 04 02 00 
1f014     FE FC FA F9 
1f018     F7 F6 F4 F3 
1f01c     F1 F0 EF EE | 	byte	$06, $04, $02, $00, $fe, $fc, $fa, $f9, $f7, $f6, $f4, $f3, $f1, $f0, $ef, $ee
1f020     ED EC EB EB 
1f024     EB EB EC ED 
1f028     EE F0 F1 F3 
1f02c     F5 F7 FA FC | 	byte	$ed, $ec, $eb, $eb, $eb, $eb, $ec, $ed, $ee, $f0, $f1, $f3, $f5, $f7, $fa, $fc
1f030     FE 00 03 05 
1f034     07 08 09 0A 
1f038     0B 0B 0C 0C 
1f03c     0C 0D 0E 0E | 	byte	$fe, $00, $03, $05, $07, $08, $09, $0a, $0b, $0b, $0c, $0c, $0c, $0d, $0e, $0e
1f040     0F 0F 10 10 
1f044     11 11 11 11 
1f048     11 11 11 10 
1f04c     0E 0D 0B 09 | 	byte	$0f, $0f, $10, $10, $11, $11, $11, $11, $11, $11, $11, $10, $0e, $0d, $0b, $09
1f050     07 05 03 00 
1f054     FE FC FA F8 
1f058     F6 F5 F4 F3 
1f05c     F2 F1 F0 F0 | 	byte	$07, $05, $03, $00, $fe, $fc, $fa, $f8, $f6, $f5, $f4, $f3, $f2, $f1, $f0, $f0
1f060     F0 EF EF EF 
1f064     EF F0 F1 F1 
1f068     F2 F3 F3 F5 
1f06c     F6 F7 F9 FA | 	byte	$f0, $ef, $ef, $ef, $ef, $f0, $f1, $f1, $f2, $f3, $f3, $f5, $f6, $f7, $f9, $fa
1f070     FB FC FD FF 
1f074     00 01 02 03 
1f078     04 05 05 07 
1f07c     08 09 0A 0B | 	byte	$fb, $fc, $fd, $ff, $00, $01, $02, $03, $04, $05, $05, $07, $08, $09, $0a, $0b
1f080     0D 0D 0E 0F 
1f084     0F 0F 0F 0E 
1f088     0E 0C 0C 0A 
1f08c     09 07 05 03 | 	byte	$0d, $0d, $0e, $0f, $0f, $0f, $0f, $0e, $0e, $0c, $0c, $0a, $09, $07, $05, $03
1f090     01 FF FE FC 
1f094     FA F9 F8 F7 
1f098     F6 F4 F3 F2 
1f09c     F1 F0 EF EF | 	byte	$01, $ff, $fe, $fc, $fa, $f9, $f8, $f7, $f6, $f4, $f3, $f2, $f1, $f0, $ef, $ef
1f0a0     EE EE EE EF 
1f0a4     EF F0 F1 F3 
1f0a8     F4 F6 F7 F9 
1f0ac     FB FD FF 01 | 	byte	$ee, $ee, $ee, $ef, $ef, $f0, $f1, $f3, $f4, $f6, $f7, $f9, $fb, $fd, $ff, $01
1f0b0     03 04 06 07 
1f0b4     08 09 09 0A 
1f0b8     0A 0A 0B 0B 
1f0bc     0C 0C 0D 0D | 	byte	$03, $04, $06, $07, $08, $09, $09, $0a, $0a, $0a, $0b, $0b, $0c, $0c, $0d, $0d
1f0c0     0E 0E 0E 0F 
1f0c4     0F 0F 0F 0F 
1f0c8     0E 0D 0C 0B 
1f0cc     09 07 05 03 | 	byte	$0e, $0e, $0e, $0f, $0f, $0f, $0f, $0f, $0e, $0d, $0c, $0b, $09, $07, $05, $03
1f0d0     01 00 FD FB 
1f0d4     FA F8 F7 F6 
1f0d8     F6 F5 F4 F4 
1f0dc     F3 F3 F2 F2 | 	byte	$01, $00, $fd, $fb, $fa, $f8, $f7, $f6, $f6, $f5, $f4, $f4, $f3, $f3, $f2, $f2
1f0e0     F2 F2 F3 F3 
1f0e4     F3 F4 F5 F5 
1f0e8     F6 F7 F8 F9 
1f0ec     FA FA FC FD | 	byte	$f2, $f2, $f3, $f3, $f3, $f4, $f5, $f5, $f6, $f7, $f8, $f9, $fa, $fa, $fc, $fd
1f0f0     FE FE 00 00 
1f0f4     01 02 02 03 
1f0f8     04 05 06 07 
1f0fc     08 09 0A 0B | 	byte	$fe, $fe, $00, $00, $01, $02, $02, $03, $04, $05, $06, $07, $08, $09, $0a, $0b
1f100     0C 0C 0C 0C 
1f104     0C 0C       | 	byte	$0c[6]
1f106     0B 0B 0A 09 
1f10a     07 06 04 03 
1f10e     01 FF FE FC 
1f112     FB FA F9 F8 | 	byte	$0b, $0b, $0a, $09, $07, $06, $04, $03, $01, $ff, $fe, $fc, $fb, $fa, $f9, $f8
1f116     F7 F6 F5 F4 
1f11a     F3 F2 F2 F1 
1f11e     F1 F1 F1 F1 
1f122     F2 F3 F4 F5 | 	byte	$f7, $f6, $f5, $f4, $f3, $f2, $f2, $f1, $f1, $f1, $f1, $f1, $f2, $f3, $f4, $f5
1f126     F6 F7 F9 FA 
1f12a     FB FD FE 00 
1f12e     02 03 04 05 
1f132     06 07 07 08 | 	byte	$f6, $f7, $f9, $fa, $fb, $fd, $fe, $00, $02, $03, $04, $05, $06, $07, $07, $08
1f136     08 08 09 09 
1f13a     0A 0A 0A 0B 
1f13e     0B 0C 0C 0C 
1f142     0D 0D 0D 0D | 	byte	$08, $08, $09, $09, $0a, $0a, $0a, $0b, $0b, $0c, $0c, $0c, $0d, $0d, $0d, $0d
1f146     0C 0B 0A 09 
1f14a     08 06 04 03 
1f14e     01 00 FE FC 
1f152     FB F9 F8 F7 | 	byte	$0c, $0b, $0a, $09, $08, $06, $04, $03, $01, $00, $fe, $fc, $fb, $f9, $f8, $f7
1f156     F7 F6 F6 F6 
1f15a     F6 F5 F5 F5 
1f15e     F5 F5 F5 F5 
1f162     F6 F6 F7 F7 | 	byte	$f7, $f6, $f6, $f6, $f6, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f6, $f6, $f7, $f7
1f166     F8 F9 F9 FA 
1f16a     FA FB FC FD 
1f16e     FD FE FF FF 
1f172     00 00 00 01 | 	byte	$f8, $f9, $f9, $fa, $fa, $fb, $fc, $fd, $fd, $fe, $ff, $ff, $00, $00, $00, $01
1f176     02 03 04 05 
1f17a     06 07 08 08 
1f17e     09 0A 0A 0A 
1f182     0A 0A 0A 09 | 	byte	$02, $03, $04, $05, $06, $07, $08, $08, $09, $0a, $0a, $0a, $0a, $0a, $0a, $09
1f186     08 07 07 05 
1f18a     04 03 02 00 
1f18e     FF FE FD FC 
1f192     FB FA F9 F9 | 	byte	$08, $07, $07, $05, $04, $03, $02, $00, $ff, $fe, $fd, $fc, $fb, $fa, $f9, $f9
1f196     F8 F7 F6 F6 
1f19a     F5 F4 F4 F4 
1f19e     F4 F4 F5 F5 
1f1a2     F5 F6 F7 F8 | 	byte	$f8, $f7, $f6, $f6, $f5, $f4, $f4, $f4, $f4, $f4, $f5, $f5, $f5, $f6, $f7, $f8
1f1a6     F9 FA FC FD 
1f1aa     FE FF 00 02 
1f1ae     02 03 04 05 
1f1b2     05 05 06 06 | 	byte	$f9, $fa, $fc, $fd, $fe, $ff, $00, $02, $02, $03, $04, $05, $05, $05, $06, $06
1f1b6     06 07 08 08 
1f1ba     08 09 09 0A 
1f1be     0A 0A 0B 0B 
1f1c2     0B 0B 0A 0A | 	byte	$06, $07, $08, $08, $08, $09, $09, $0a, $0a, $0a, $0b, $0b, $0b, $0b, $0a, $0a
1f1c6     09 08 07 05 
1f1ca     04 03 01 00 
1f1ce     FF FE FC FB 
1f1d2     FA F9 F9 F8 | 	byte	$09, $08, $07, $05, $04, $03, $01, $00, $ff, $fe, $fc, $fb, $fa, $f9, $f9, $f8
1f1d6     F8 F8 F8 F7 
1f1da     F7 F7 F7 F8 
1f1de     F8 F8 F8 F8 
1f1e2     F9 F9 F9 FA | 	byte	$f8, $f8, $f8, $f7, $f7, $f7, $f7, $f8, $f8, $f8, $f8, $f8, $f9, $f9, $f9, $fa
1f1e6     FA FB FB FC 
1f1ea     FC FD FD FE 
1f1ee     FE FE FF FF 
1f1f2     FF 00 00 01 | 	byte	$fa, $fb, $fb, $fc, $fc, $fd, $fd, $fe, $fe, $fe, $ff, $ff, $ff, $00, $00, $01
1f1f6     02 03 03 05 
1f1fa     05 06 07 07 
1f1fe     08 08 08 08 
1f202     08 08 07 07 | 	byte	$02, $03, $03, $05, $05, $06, $07, $07, $08, $08, $08, $08, $08, $08, $07, $07
1f206     06 05 04 03 
1f20a     02 01 00 FF 
1f20e     FE FD FC FC 
1f212     FB FB FA F9 | 	byte	$06, $05, $04, $03, $02, $01, $00, $ff, $fe, $fd, $fc, $fc, $fb, $fb, $fa, $f9
1f216     F9 F8 F8 F7 
1f21a     F7 F7 F6 F6 
1f21e     F7 F7 F7 F8 
1f222     F9 F9 FA FB | 	byte	$f9, $f8, $f8, $f7, $f7, $f7, $f6, $f6, $f7, $f7, $f7, $f8, $f9, $f9, $fa, $fb
1f226     FC FD FE FE 
1f22a     FF 00 01 02 
1f22e     02 03 03 03 
1f232     04 04 04 05 | 	byte	$fc, $fd, $fe, $fe, $ff, $00, $01, $02, $02, $03, $03, $03, $04, $04, $04, $05
1f236     05 06 06 06 
1f23a     07 07 08 08 
1f23e     08 08 09 09 
1f242     09 08 08 07 | 	byte	$05, $06, $06, $06, $07, $07, $08, $08, $08, $08, $09, $09, $09, $08, $08, $07
1f246     06 05 04 03 
1f24a     02 01 00 FF 
1f24e     FE FD FC FB 
1f252     FB FA FA FA | 	byte	$06, $05, $04, $03, $02, $01, $00, $ff, $fe, $fd, $fc, $fb, $fb, $fa, $fa, $fa
1f256     FA F9 00 00 
1f25a     00 00 67 C8 
1f25e     0B 22 35 00 
1f262     DA 0B 24 1E | 	byte	$fa, $f9, $00, $00, $00, $00, $67, $c8, $0b, $22, $35, $00, $da, $0b, $24, $1e
1f266     29 2B 21 21 
1f26a     39 3B 35 2F 
1f26e     40 42 00 1B 
1f272     67 0E 39 6A | 	byte	$29, $2b, $21, $21, $39, $3b, $35, $2f, $40, $42, $00, $1b, $67, $0e, $39, $6a
1f276     56 74 3B A6 
1f27a     89 B5 1B 1D 
1f27e     89 89 89 01 
1f282     7B 76 FB E3 | 	byte	$56, $74, $3b, $a6, $89, $b5, $1b, $1d, $89, $89, $89, $01, $7b, $76, $fb, $e3
1f286     CC C2 B7 B5 
1f28a     EE AF AB A2 
1f28e     F0 95 80 80 
1f292     80 80 80 80 | 	byte	$cc, $c2, $b7, $b5, $ee, $af, $ab, $a2, $f0, $95, $80, $80, $80, $80, $80, $80
1f296     80 80 80 80 
1f29a     80 80 80 80 
1f29e     80 80       | 	byte	$80[10]
1f2a0     84 AE 10 3B 
1f2a4     21 F6 1E 5C 
1f2a8     50 11 D2 D5 
1f2ac     CC 33 3E 04 | 	byte	$84, $ae, $10, $3b, $21, $f6, $1e, $5c, $50, $11, $d2, $d5, $cc, $33, $3e, $04
1f2b0     60 67 7F 6E 
1f2b4     D5 D2 07 5A 
1f2b8     7F 1B 00 01 
1f2bc     7F 7F 67 95 | 	byte	$60, $67, $7f, $6e, $d5, $d2, $07, $5a, $7f, $1b, $00, $01, $7f, $7f, $67, $95
1f2c0     80 80 80 91 
1f2c4     E9 DC 80 B5 
1f2c8     0E B1 80 D0 
1f2cc     DC AE BE E7 | 	byte	$80, $80, $80, $91, $e9, $dc, $80, $b5, $0e, $b1, $80, $d0, $dc, $ae, $be, $e7
1f2d0     DA FA 07 D5 
1f2d4     FB 4C 63 10 
1f2d8     07 10 07 36 
1f2dc     4C 28 D8 D2 | 	byte	$da, $fa, $07, $d5, $fb, $4c, $63, $10, $07, $10, $07, $36, $4c, $28, $d8, $d2
1f2e0     0A 18 0A CC 
1f2e4     AB E5 33 29 
1f2e8     04 07 F4 D8 
1f2ec     E7 04 00 F2 | 	byte	$0a, $18, $0a, $cc, $ab, $e5, $33, $29, $04, $07, $f4, $d8, $e7, $04, $00, $f2
1f2f0     D8 E9 F4 1E 
1f2f4     24 33 6E 7F 
1f2f8     7F 7F 7F 7F 
1f2fc     60 4D 1D ED | 	byte	$d8, $e9, $f4, $1e, $24, $33, $6e, $7f, $7f, $7f, $7f, $7f, $60, $4d, $1d, $ed
1f300     14 60 5A 50 
1f304     43 28 53 7D 
1f308     7F 69 70 7F 
1f30c     7F 7F 7F 7F | 	byte	$14, $60, $5a, $50, $43, $28, $53, $7d, $7f, $69, $70, $7f, $7f, $7f, $7f, $7f
1f310     7F 7F 7F 7F 
1f314     56 69 7A 7F 
1f318     7F 6A 61 7F 
1f31c     7F 7F 70 61 | 	byte	$7f, $7f, $7f, $7f, $56, $69, $7a, $7f, $7f, $6a, $61, $7f, $7f, $7f, $70, $61
1f320     59 6D 7F 7F 
1f324     74 3B 2F 56 
1f328     6D 31 1B 04 
1f32c     DF CC D5 E7 | 	byte	$59, $6d, $7f, $7f, $74, $3b, $2f, $56, $6d, $31, $1b, $04, $df, $cc, $d5, $e7
1f330     D2 B2 93 97 
1f334     A4 99 80 80 
1f338     80 80 90 A8 
1f33c     C2 B7 AB 9D | 	byte	$d2, $b2, $93, $97, $a4, $99, $80, $80, $80, $80, $90, $a8, $c2, $b7, $ab, $9d
1f340     80 80 80 80 
1f344     A1 80 80 80 
1f348     80 80 80 80 
1f34c     80 80 D5 AA | 	byte	$80, $80, $80, $80, $a1, $80, $80, $80, $80, $80, $80, $80, $80, $80, $d5, $aa
1f350     80 80 86 93 
1f354     8E 9B B5 8A 
1f358     80 84 91 91 
1f35c     84 80 8A 93 | 	byte	$80, $80, $86, $93, $8e, $9b, $b5, $8a, $80, $84, $91, $91, $84, $80, $8a, $93
1f360     93 8A 80 8A 
1f364     B1 D0 F6 00 
1f368     DA 97 97 BF 
1f36c     E9 0A 35 31 | 	byte	$93, $8a, $80, $8a, $b1, $d0, $f6, $00, $da, $97, $97, $bf, $e9, $0a, $35, $31
1f370     10 F0 F4 56 
1f374     7F 74 7F 7F 
1f378     7F 7F 7F 7F 
1f37c     54 5C 46 72 | 	byte	$10, $f0, $f4, $56, $7f, $74, $7f, $7f, $7f, $7f, $7f, $7f, $54, $5c, $46, $72
1f380     7F 7F 7F 7F 
1f384     7F 7F 7F 7F 
1f388     7F 7F       | 	byte	$7f[10]
1f38a     26 53 7D 7F 
1f38e     7F 7F 4D 7F 
1f392     7F 7F 7F 7F 
1f396     7F 7F 7F 7F | 	byte	$26, $53, $7d, $7f, $7f, $7f, $4d, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
1f39a     6A 7F 7F 3B 
1f39e     FA 26 4C 35 
1f3a2     2F 31 54 7D 
1f3a6     5D 47 6D 4F | 	byte	$6a, $7f, $7f, $3b, $fa, $26, $4c, $35, $2f, $31, $54, $7d, $5d, $47, $6d, $4f
1f3aa     1B 0B 3B 01 
1f3ae     A2 80 80 BC 
1f3b2     97 80 9E 89 
1f3b6     80 80 8C 80 | 	byte	$1b, $0b, $3b, $01, $a2, $80, $80, $bc, $97, $80, $9e, $89, $80, $80, $8c, $80
1f3ba     80 C8 2E 18 
1f3be     DA 80 80 AE 
1f3c2     CC 80 80 80 
1f3c6     80 80 80 80 | 	byte	$80, $c8, $2e, $18, $da, $80, $80, $ae, $cc, $80, $80, $80, $80, $80, $80, $80
1f3ca     80 80 B5 80 
1f3ce     80 80 80 80 
1f3d2     80 80 80 80 
1f3d6     80 84 91 80 | 	byte	$80, $80, $b5, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $84, $91, $80
1f3da     80 C4 AB 80 
1f3de     80 80 80 80 
1f3e2     91 80 97 DC 
1f3e6     40 70 36 1E | 	byte	$80, $c4, $ab, $80, $80, $80, $80, $80, $91, $80, $97, $dc, $40, $70, $36, $1e
1f3ea     42 04 97 80 
1f3ee     C5 64 7F 60 
1f3f2     24 17 24 3E 
1f3f6     0A 76 5D 3B | 	byte	$42, $04, $97, $80, $c5, $64, $7f, $60, $24, $17, $24, $3e, $0a, $76, $5d, $3b
1f3fa     70 7F 7F 61 
1f3fe     4F 7F 7F 59 
1f402     15 3C 54 4D 
1f406     36 59 7D 7F | 	byte	$70, $7f, $7f, $61, $4f, $7f, $7f, $59, $15, $3c, $54, $4d, $36, $59, $7d, $7f
1f40a     7F 7F 7F 7F 
1f40e     7F 7F 7F 7F 
1f412     7F 7F 7F 7F | 	byte	$7f[12]
1f416     5C 40 29 53 
1f41a     60 42 61 3E 
1f41e     17 0A 14 69 
1f422     7F 7F 7F 7F | 	byte	$5c, $40, $29, $53, $60, $42, $61, $3e, $17, $0a, $14, $69, $7f, $7f, $7f, $7f
1f426     59 15 15 1B 
1f42a     21 F6 10 24 
1f42e     0B 15 E9 E9 
1f432     14 3E 1E DA | 	byte	$59, $15, $15, $1b, $21, $f6, $10, $24, $0b, $15, $e9, $e9, $14, $3e, $1e, $da
1f436     DC 11 18 F2 
1f43a     F0 CF BB F4 
1f43e     F6 D6 17 01 
1f442     86 BC EA 29 | 	byte	$dc, $11, $18, $f2, $f0, $cf, $bb, $f4, $f6, $d6, $17, $01, $86, $bc, $ea, $29
1f446     18 C2 80 80 
1f44a     80 80 B8 80 
1f44e     80 80 CB BE 
1f452     80 80 80 A1 | 	byte	$18, $c2, $80, $80, $80, $80, $b8, $80, $80, $80, $cb, $be, $80, $80, $80, $a1
1f456     C4 80 80 9D 
1f45a     56 F6 93 B8 
1f45e     00 A4 80 80 
1f462     80 95 8E 80 | 	byte	$c4, $80, $80, $9d, $56, $f6, $93, $b8, $00, $a4, $80, $80, $80, $95, $8e, $80
1f466     80 93 80 8E 
1f46a     B2 CC E9 DC 
1f46e     CF CC D8 D5 
1f472     AE AE AF FD | 	byte	$80, $93, $80, $8e, $b2, $cc, $e9, $dc, $cf, $cc, $d8, $d5, $ae, $ae, $af, $fd
1f476     DF 91 97 AF 
1f47a     18 3E 2B F4 
1f47e     3E 0A AF C5 
1f482     C9 ED 00 15 | 	byte	$df, $91, $97, $af, $18, $3e, $2b, $f4, $3e, $0a, $af, $c5, $c9, $ed, $00, $15
1f486     6A 33 C9 A4 
1f48a     9E 00 3C 18 
1f48e     50 7F 7F 4D 
1f492     F4 A4 E3 08 | 	byte	$6a, $33, $c9, $a4, $9e, $00, $3c, $18, $50, $7f, $7f, $4d, $f4, $a4, $e3, $08
1f496     F4 03 35 69 
1f49a     7F 7F 39 C5 
1f49e     E5 22 F0 BC 
1f4a2     DD 54 39 D8 | 	byte	$f4, $03, $35, $69, $7f, $7f, $39, $c5, $e5, $22, $f0, $bc, $dd, $54, $39, $d8
1f4a6     CB 28 63 7A 
1f4aa     7F 14 F7 E3 
1f4ae     80 8C BF 15 
1f4b2     14 C8 A8 C5 | 	byte	$cb, $28, $63, $7a, $7f, $14, $f7, $e3, $80, $8c, $bf, $15, $14, $c8, $a8, $c5
1f4b6     21 1D F4 22 
1f4ba     67 54 F4 D5 
1f4be     10 2B 0E FB 
1f4c2     11 59 39 50 | 	byte	$21, $1d, $f4, $22, $67, $54, $f4, $d5, $10, $2b, $0e, $fb, $11, $59, $39, $50
1f4c6     60 04 24 03 
1f4ca     F4 53 7F 7F 
1f4ce     67 01 DF F6 
1f4d2     D5 CC 14 1E | 	byte	$60, $04, $24, $03, $f4, $53, $7f, $7f, $67, $01, $df, $f6, $d5, $cc, $14, $1e
1f4d6     E3 01 33 59 
1f4da     01 0B E7 A6 
1f4de     A4 95 C9 08 
1f4e2     6E 61 56 2F | 	byte	$e3, $01, $33, $59, $01, $0b, $e7, $a6, $a4, $95, $c9, $08, $6e, $61, $56, $2f
1f4e6     36 7F 60 BC 
1f4ea     90 A2 80 80 
1f4ee     97 F0 E7 E7 
1f4f2     2B A1 80 80 | 	byte	$36, $7f, $60, $bc, $90, $a2, $80, $80, $97, $f0, $e7, $e7, $2b, $a1, $80, $80
1f4f6     BF C2 DF DC 
1f4fa     03 56 33 C2 
1f4fe     8A AE 0E CC 
1f502     E5 BF 80 80 | 	byte	$bf, $c2, $df, $dc, $03, $56, $33, $c2, $8a, $ae, $0e, $cc, $e5, $bf, $80, $80
1f506     C5 E3 8A 86 
1f50a     BE A1 BE F4 
1f50e     1B A6 97 80 
1f512     80 A4 CC A4 | 	byte	$c5, $e3, $8a, $86, $be, $a1, $be, $f4, $1b, $a6, $97, $80, $80, $a4, $cc, $a4
1f516     D8 DA 80 BB 
1f51a     21 FB CB 2B 
1f51e     21 DC 1D 04 
1f522     86 80 91 C4 | 	byte	$d8, $da, $80, $bb, $21, $fb, $cb, $2b, $21, $dc, $1d, $04, $86, $80, $91, $c4
1f526     B8 C9 C4 E7 
1f52a     18 2E 33 28 
1f52e     2B 0E EA F2 
1f532     D8 90 AA BE | 	byte	$b8, $c9, $c4, $e7, $18, $2e, $33, $28, $2b, $0e, $ea, $f2, $d8, $90, $aa, $be
1f536     AA 0A E7 B2 
1f53a     6D 3E 22 EE 
1f53e     AE 99 DF 00 
1f542     DD 24 59 28 | 	byte	$aa, $0a, $e7, $b2, $6d, $3e, $22, $ee, $ae, $99, $df, $00, $dd, $24, $59, $28
1f546     EE 17 7F 39 
1f54a     E5 24 DF 93 
1f54e     E3 47 43 11 
1f552     39 3C 00 2F | 	byte	$ee, $17, $7f, $39, $e5, $24, $df, $93, $e3, $47, $43, $11, $39, $3c, $00, $2f
1f556     5A 15 CF 01 
1f55a     29 31 3E 67 
1f55e     59 3E 7F 7F 
1f562     64 26 7F 7F | 	byte	$5a, $15, $cf, $01, $29, $31, $3e, $67, $59, $3e, $7f, $7f, $64, $26, $7f, $7f
1f566     3B 07 E5 ED 
1f56a     15 53 7F 69 
1f56e     7F 7F 60 4F 
1f572     35 00 0A 24 | 	byte	$3b, $07, $e5, $ed, $15, $53, $7f, $69, $7f, $7f, $60, $4f, $35, $00, $0a, $24
1f576     26 56 7F 53 
1f57a     18 39 49 6D 
1f57e     3E B5 A8 C9 
1f582     DD 08 3B 28 | 	byte	$26, $56, $7f, $53, $18, $39, $49, $6d, $3e, $b5, $a8, $c9, $dd, $08, $3b, $28
1f586     ED A2 93 B7 
1f58a     E7 ED AB AB 
1f58e     CB 97 9E AA 
1f592     E3 2F C9 C5 | 	byte	$ed, $a2, $93, $b7, $e7, $ed, $ab, $ab, $cb, $97, $9e, $aa, $e3, $2f, $c9, $c5
1f596     C2 BE 83 80 
1f59a     B8 A6 A2 AA 
1f59e     C5 A2 9B B1 
1f5a2     97 80 89 80 | 	byte	$c2, $be, $83, $80, $b8, $a6, $a2, $aa, $c5, $a2, $9b, $b1, $97, $80, $89, $80
1f5a6     80 80 80 80 
1f5aa     80 80       | 	byte	$80[6]
1f5ac     A8 93 80 93 
1f5b0     1B 01 E7 ED 
1f5b4     D5 B2 80 9B 
1f5b8     E3 21 1D D8 | 	byte	$a8, $93, $80, $93, $1b, $01, $e7, $ed, $d5, $b2, $80, $9b, $e3, $21, $1d, $d8
1f5bc     BE DC FA F4 
1f5c0     F4 C9 89 83 
1f5c4     D6 0E 1B F2 
1f5c8     FD F0 D5 F2 | 	byte	$be, $dc, $fa, $f4, $f4, $c9, $89, $83, $d6, $0e, $1b, $f2, $fd, $f0, $d5, $f2
1f5cc     D2 E5 FD ED 
1f5d0     15 2F 47 39 
1f5d4     3C 54 35 10 
1f5d8     08 5A 72 15 | 	byte	$d2, $e5, $fd, $ed, $15, $2f, $47, $39, $3c, $54, $35, $10, $08, $5a, $72, $15
1f5dc     03 DA 97 CC 
1f5e0     18 3E 1E 2E 
1f5e4     61 42 3C 5A 
1f5e8     2B 36 7F 42 | 	byte	$03, $da, $97, $cc, $18, $3e, $1e, $2e, $61, $42, $3c, $5a, $2b, $36, $7f, $42
1f5ec     15 46 40 21 
1f5f0     10 2F 64 7F 
1f5f4     56 47 69 74 
1f5f8     61 3B 39 53 | 	byte	$15, $46, $40, $21, $10, $2f, $64, $7f, $56, $47, $69, $74, $61, $3b, $39, $53
1f5fc     56 21 24 5C 
1f600     76 74 7A 60 
1f604     15 15 11 24 
1f608     2B 28 26 36 | 	byte	$56, $21, $24, $5c, $76, $74, $7a, $60, $15, $15, $11, $24, $2b, $28, $26, $36
1f60c     47 22 ED 00 
1f610     47 29 F2 AF 
1f614     CC D2 C5 B5 
1f618     99 8C 99 C9 | 	byte	$47, $22, $ed, $00, $47, $29, $f2, $af, $cc, $d2, $c5, $b5, $99, $8c, $99, $c9
1f61c     E7 DF 1D F7 
1f620     80 80 80 F0 
1f624     D5 D0 0A AB 
1f628     9D DF 29 B7 | 	byte	$e7, $df, $1d, $f7, $80, $80, $80, $f0, $d5, $d0, $0a, $ab, $9d, $df, $29, $b7
1f62c     80 CC AE B2 
1f630     FD CF 99 A6 
1f634     99 AF D0 9B 
1f638     93 AE BB ED | 	byte	$80, $cc, $ae, $b2, $fd, $cf, $99, $a6, $99, $af, $d0, $9b, $93, $ae, $bb, $ed
1f63c     F2 B1 EA E7 
1f640     CB 95 80 90 
1f644     AF A6 AF 8A 
1f648     90 DC CF E5 | 	byte	$f2, $b1, $ea, $e7, $cb, $95, $80, $90, $af, $a6, $af, $8a, $90, $dc, $cf, $e5
1f64c     DF B2 E2 0E 
1f650     00 A4 80 E5 
1f654     01 C2 8A AB 
1f658     E3 F6 0B 00 | 	byte	$df, $b2, $e2, $0e, $00, $a4, $80, $e5, $01, $c2, $8a, $ab, $e3, $f6, $0b, $00
1f65c     10 FA B1 F4 
1f660     59 DC A1 24 
1f664     4C E5 E3 28 
1f668     42 3C FB 03 | 	byte	$10, $fa, $b1, $f4, $59, $dc, $a1, $24, $4c, $e5, $e3, $28, $42, $3c, $fb, $03
1f66c     50 31 24 2E 
1f670     07 0B 47 4F 
1f674     7F 7F 60 7F 
1f678     6A 67 5C 3C | 	byte	$50, $31, $24, $2e, $07, $0b, $47, $4f, $7f, $7f, $60, $7f, $6a, $67, $5c, $3c
1f67c     54 59 3C 54 
1f680     50 5A 67 54 
1f684     3C 33 42 7A 
1f688     7F 59 31 24 | 	byte	$54, $59, $3c, $54, $50, $5a, $67, $54, $3c, $33, $42, $7a, $7f, $59, $31, $24
1f68c     53 46 EE F7 
1f690     2E 21 18 0B 
1f694     DA 01 56 76 
1f698     1E 08 1E 35 | 	byte	$53, $46, $ee, $f7, $2e, $21, $18, $0b, $da, $01, $56, $76, $1e, $08, $1e, $35
1f69c     2E 2B 7F 36 
1f6a0     E5 F7 3E 5D 
1f6a4     53 1D D2 BE 
1f6a8     0A 04 ED 08 | 	byte	$2e, $2b, $7f, $36, $e5, $f7, $3e, $5d, $53, $1d, $d2, $be, $0a, $04, $ed, $08
1f6ac     11 0E F6 03 
1f6b0     21 28 3B 0E 
1f6b4     00 08 D5 EE 
1f6b8     D5 D8 E5 CC | 	byte	$11, $0e, $f6, $03, $21, $28, $3b, $0e, $00, $08, $d5, $ee, $d5, $d8, $e5, $cc
1f6bc     E5 EA 1E 2E 
1f6c0     1E 01 1B 0E 
1f6c4     01 0B E3 F2 
1f6c8     FB 08 15 E2 | 	byte	$e5, $ea, $1e, $2e, $1e, $01, $1b, $0e, $01, $0b, $e3, $f2, $fb, $08, $15, $e2
1f6cc     D8 ED B7 DC 
1f6d0     00 DD B2 DD 
1f6d4     EA C2 B2 E2 
1f6d8     E3 95 80 A6 | 	byte	$d8, $ed, $b7, $dc, $00, $dd, $b2, $dd, $ea, $c2, $b2, $e2, $e3, $95, $80, $a6
1f6dc     B1 C5 C5 80 
1f6e0     80 BE E5 CF 
1f6e4     D5 A6 84 99 
1f6e8     80 A8 9D DC | 	byte	$b1, $c5, $c5, $80, $80, $be, $e5, $cf, $d5, $a6, $84, $99, $80, $a8, $9d, $dc
1f6ec     0E A8 CB DD 
1f6f0     2B 17 ED FA 
1f6f4     2E 1E B7 F7 
1f6f8     2E 33 08 E5 | 	byte	$0e, $a8, $cb, $dd, $2b, $17, $ed, $fa, $2e, $1e, $b7, $f7, $2e, $33, $08, $e5
1f6fc     D2 B7 28 49 
1f700     F4 DC ED 3E 
1f704     7F 70 04 14 
1f708     10 46 7F 5A | 	byte	$d2, $b7, $28, $49, $f4, $dc, $ed, $3e, $7f, $70, $04, $14, $10, $46, $7f, $5a
1f70c     31 42 61 4F 
1f710     70 4F 47 5C 
1f714     39 1D 22 40 
1f718     18 54 5D 2B | 	byte	$31, $42, $61, $4f, $70, $4f, $47, $5c, $39, $1d, $22, $40, $18, $54, $5d, $2b
1f71c     3C 3E 63 59 
1f720     7F 7F 47 50 
1f724     2B 59 60 6A 
1f728     7D 07 1B 33 | 	byte	$3c, $3e, $63, $59, $7f, $7f, $47, $50, $2b, $59, $60, $6a, $7d, $07, $1b, $33
1f72c     EA 03 3C 42 
1f730     5D DF 80 F6 
1f734     F2 F2 1D 28 
1f738     24 ED E3 E7 | 	byte	$ea, $03, $3c, $42, $5d, $df, $80, $f6, $f2, $f2, $1d, $28, $24, $ed, $e3, $e7
1f73c     C5 ED F4 DD 
1f740     07 F4 83 A6 
1f744     11 E5 9E D0 
1f748     FA 08 CF AB | 	byte	$c5, $ed, $f4, $dd, $07, $f4, $83, $a6, $11, $e5, $9e, $d0, $fa, $08, $cf, $ab
1f74c     DA F2 08 F7 
1f750     FB E3 ED 21 
1f754     DA 97 03 28 
1f758     EE C2 C9 10 | 	byte	$da, $f2, $08, $f7, $fb, $e3, $ed, $21, $da, $97, $03, $28, $ee, $c2, $c9, $10
1f75c     DF BB DD EA 
1f760     DC 01 26 0E 
1f764     E7 E3 FA 18 
1f768     1E 03 39 1D | 	byte	$df, $bb, $dd, $ea, $dc, $01, $26, $0e, $e7, $e3, $fa, $18, $1e, $03, $39, $1d
1f76c     F2 D8 E3 01 
1f770     DC 00 15 E3 
1f774     EE 0B 18 36 
1f778     47 2B 1D 11 | 	byte	$f2, $d8, $e3, $01, $dc, $00, $15, $e3, $ee, $0b, $18, $36, $47, $2b, $1d, $11
1f77c     0E DF DF 07 
1f780     07 F2 EE 0B 
1f784     11 07 EE 18 
1f788     10 FB D2 F0 | 	byte	$0e, $df, $df, $07, $07, $f2, $ee, $0b, $11, $07, $ee, $18, $10, $fb, $d2, $f0
1f78c     70 7F 46 0E 
1f790     1B 22 11 1B 
1f794     D2 A1 A8 DC 
1f798     C5 BE 0B 4C | 	byte	$70, $7f, $46, $0e, $1b, $22, $11, $1b, $d2, $a1, $a8, $dc, $c5, $be, $0b, $4c
1f79c     07 FD 69 5D 
1f7a0     15 0E 28 FB 
1f7a4     07 3B 35 00 
1f7a8     D6 AE CF F2 | 	byte	$07, $fd, $69, $5d, $15, $0e, $28, $fb, $07, $3b, $35, $00, $d6, $ae, $cf, $f2
1f7ac     D2 CB D0 ED 
1f7b0     F6 07 F6 08 
1f7b4     42 3B 18 33 
1f7b8     15 A1 BF EE | 	byte	$d2, $cb, $d0, $ed, $f6, $07, $f6, $08, $42, $3b, $18, $33, $15, $a1, $bf, $ee
1f7bc     08 28 1E 0E 
1f7c0     42 29 B2 97 
1f7c4     C9 F6 D0 D0 
1f7c8     2B 2E D6 F2 | 	byte	$08, $28, $1e, $0e, $42, $29, $b2, $97, $c9, $f6, $d0, $d0, $2b, $2e, $d6, $f2
1f7cc     10 1D 60 54 
1f7d0     E7 E5 63 28 
1f7d4     EA 0A 18 EA 
1f7d8     DC 28 24 04 | 	byte	$10, $1d, $60, $54, $e7, $e5, $63, $28, $ea, $0a, $18, $ea, $dc, $28, $24, $04
1f7dc     EA FD 01 F2 
1f7e0     1E 22 E3 97 
1f7e4     D0 31 1D 43 
1f7e8     26 07 EA EE | 	byte	$ea, $fd, $01, $f2, $1e, $22, $e3, $97, $d0, $31, $1d, $43, $26, $07, $ea, $ee
1f7ec     47 04 D6 1B 
1f7f0     17 36 28 0B 
1f7f4     10 46 2E D8 
1f7f8     21 1D 1D 3C | 	byte	$47, $04, $d6, $1b, $17, $36, $28, $0b, $10, $46, $2e, $d8, $21, $1d, $1d, $3c
1f7fc     17 08 08 EE 
1f800     F6 DA 07 33 
1f804     F0 00 40 18 
1f808     FB 24 24 39 | 	byte	$17, $08, $08, $ee, $f6, $da, $07, $33, $f0, $00, $40, $18, $fb, $24, $24, $39
1f80c     69 46 1D 22 
1f810     1B 0A 04 00 
1f814     F2 F4 E3 18 
1f818     49 00 B5 D5 | 	byte	$69, $46, $1d, $22, $1b, $0a, $04, $00, $f2, $f4, $e3, $18, $49, $00, $b5, $d5
1f81c     22 0B 0A 00 
1f820     F2 14 E2 A8 
1f824     D8 FB FD 11 
1f828     21 1B EE E3 | 	byte	$22, $0b, $0a, $00, $f2, $14, $e2, $a8, $d8, $fb, $fd, $11, $21, $1b, $ee, $e3
1f82c     1D FB E5 EA 
1f830     DA A4 AB 08 
1f834     21 04 E9 04 
1f838     43 04 ED 04 | 	byte	$1d, $fb, $e5, $ea, $da, $a4, $ab, $08, $21, $04, $e9, $04, $43, $04, $ed, $04
1f83c     EA F6 ED ED 
1f840     08 11 FD DC 
1f844     FA 0A F7 EE 
1f848     00 E5 A8 DA | 	byte	$ea, $f6, $ed, $ed, $08, $11, $fd, $dc, $fa, $0a, $f7, $ee, $00, $e5, $a8, $da
1f84c     2B 14 E5 D0 
1f850     F4 03 FB 36 
1f854     4D 03 F0 15 
1f858     ED FA D5 D6 | 	byte	$2b, $14, $e5, $d0, $f4, $03, $fb, $36, $4d, $03, $f0, $15, $ed, $fa, $d5, $d6
1f85c     FB F0 26 24 
1f860     03 0E 0E 08 
1f864     F6 2F 29 F6 
1f868     F4 E9 00 01 | 	byte	$fb, $f0, $26, $24, $03, $0e, $0e, $08, $f6, $2f, $29, $f6, $f4, $e9, $00, $01
1f86c     EA FD 10 FD 
1f870     FB 15 07 01 
1f874     2E 4C 3B F7 
1f878     0B 31 1E 0A | 	byte	$ea, $fd, $10, $fd, $fb, $15, $07, $01, $2e, $4c, $3b, $f7, $0b, $31, $1e, $0a
1f87c     0E 1D 28 FD 
1f880     0A 2B 17 22 
1f884     10 F0 07 ED 
1f888     00 40 24 43 | 	byte	$0e, $1d, $28, $fd, $0a, $2b, $17, $22, $10, $f0, $07, $ed, $00, $40, $24, $43
1f88c     7F 47 0E 00 
1f890     E3 1D 15 D8 
1f894     17 50 08 DD 
1f898     04 FD 14 28 | 	byte	$7f, $47, $0e, $00, $e3, $1d, $15, $d8, $17, $50, $08, $dd, $04, $fd, $14, $28
1f89c     01 C2 E7 40 
1f8a0     60 2F 3B 53 
1f8a4     14 07 21 24 
1f8a8     21 26 11 08 | 	byte	$01, $c2, $e7, $40, $60, $2f, $3b, $53, $14, $07, $21, $24, $21, $26, $11, $08
1f8ac     03 DF DA 00 
1f8b0     F0 C8 C2 07 
1f8b4     FB C9 EA E9 
1f8b8     DD 00 24 F0 | 	byte	$03, $df, $da, $00, $f0, $c8, $c2, $07, $fb, $c9, $ea, $e9, $dd, $00, $24, $f0
1f8bc     BF CC 1D 36 
1f8c0     F2 BB F0 2B 
1f8c4     21 F6 E7 DC 
1f8c8     FA 00 EE 18 | 	byte	$bf, $cc, $1d, $36, $f2, $bb, $f0, $2b, $21, $f6, $e7, $dc, $fa, $00, $ee, $18
1f8cc     15 03 D6 EE 
1f8d0     F7 F6 E7 E3 
1f8d4     DA DF FD 00 
1f8d8     E9 D6 FD 08 | 	byte	$15, $03, $d6, $ee, $f7, $f6, $e7, $e3, $da, $df, $fd, $00, $e9, $d6, $fd, $08
1f8dc     01 C8 9E C8 
1f8e0     F4 EA C8 FA 
1f8e4     15 D6 BB C2 
1f8e8     CF 01 FD D0 | 	byte	$01, $c8, $9e, $c8, $f4, $ea, $c8, $fa, $15, $d6, $bb, $c2, $cf, $01, $fd, $d0
1f8ec     ED 1B 17 FB 
1f8f0     CF C4 EA 10 
1f8f4     F6 01 3B 3C 
1f8f8     29 F2 BF DA | 	byte	$ed, $1b, $17, $fb, $cf, $c4, $ea, $10, $f6, $01, $3b, $3c, $29, $f2, $bf, $da
1f8fc     EA EE FA DD 
1f900     F2 FD 15 FD 
1f904     E3 F6 11 FD 
1f908     E2 08 01 D5 | 	byte	$ea, $ee, $fa, $dd, $f2, $fd, $15, $fd, $e3, $f6, $11, $fd, $e2, $08, $01, $d5
1f90c     ED F4 01 22 
1f910     36 2B 46 61 
1f914     28 03 21 01 
1f918     FD 1E 2F 22 | 	byte	$ed, $f4, $01, $22, $36, $2b, $46, $61, $28, $03, $21, $01, $fd, $1e, $2f, $22
1f91c     18 E7 B1 07 
1f920     67 3E 1B 04 
1f924     11 0B 01 FA 
1f928     ED 01 F0 0A | 	byte	$18, $e7, $b1, $07, $67, $3e, $1b, $04, $11, $0b, $01, $fa, $ed, $01, $f0, $0a
1f92c     1B FA 2E 35 
1f930     0B FD 0B 04 
1f934     21 1D 01 FB 
1f938     21 46 26 03 | 	byte	$1b, $fa, $2e, $35, $0b, $fd, $0b, $04, $21, $1d, $01, $fb, $21, $46, $26, $03
1f93c     01 1D 31 03 
1f940     E9 24 53 2E 
1f944     EA 15 63 3B 
1f948     D8 CF F2 0A | 	byte	$01, $1d, $31, $03, $e9, $24, $53, $2e, $ea, $15, $63, $3b, $d8, $cf, $f2, $0a
1f94c     07 F6 F7 04 
1f950     EE B5 C9 FD 
1f954     1E 08 2B 18 
1f958     F6 0B DF C5 | 	byte	$07, $f6, $f7, $04, $ee, $b5, $c9, $fd, $1e, $08, $2b, $18, $f6, $0b, $df, $c5
1f95c     C8 F2 CF E3 
1f960     01 1B 2F F2 
1f964     F4 E2 CC D8 
1f968     DF F2 BE CF | 	byte	$c8, $f2, $cf, $e3, $01, $1b, $2f, $f2, $f4, $e2, $cc, $d8, $df, $f2, $be, $cf
1f96c     01 01 22 33 
1f970     15 D2 B5 CC 
1f974     F4 EA E3 E2 
1f978     DA DA BC E3 | 	byte	$01, $01, $22, $33, $15, $d2, $b5, $cc, $f4, $ea, $e3, $e2, $da, $da, $bc, $e3
1f97c     DA E2 E3 DA 
1f980     1E 15 F7 D5 
1f984     BC B1 A1 E3 
1f988     DF DD ED D0 | 	byte	$da, $e2, $e3, $da, $1e, $15, $f7, $d5, $bc, $b1, $a1, $e3, $df, $dd, $ed, $d0
1f98c     EE DC C2 C2 
1f990     BC F4 0A 2E 
1f994     2F E3 E7 01 
1f998     33 1E FA E3 | 	byte	$ee, $dc, $c2, $c2, $bc, $f4, $0a, $2e, $2f, $e3, $e7, $01, $33, $1e, $fa, $e3
1f99c     CC F6 FA CB 
1f9a0     EE E7 E9 EA 
1f9a4     0E 18 0B 28 
1f9a8     2B 2F 3C 22 | 	byte	$cc, $f6, $fa, $cb, $ee, $e7, $e9, $ea, $0e, $18, $0b, $28, $2b, $2f, $3c, $22
1f9ac     03 29 29 08 
1f9b0     FA 24 26 F6 
1f9b4     F0 ED 08 1E 
1f9b8     17 04 0A FA | 	byte	$03, $29, $29, $08, $fa, $24, $26, $f6, $f0, $ed, $08, $1e, $17, $04, $0a, $fa
1f9bc     D0 E5 14 10 
1f9c0     F0 1E 0A 0A 
1f9c4     03 FA 1E 14 
1f9c8     0A F2 F4 59 | 	byte	$d0, $e5, $14, $10, $f0, $1e, $0a, $0a, $03, $fa, $1e, $14, $0a, $f2, $f4, $59
1f9cc     6A 18 26 1E 
1f9d0     FD DF FD 11 
1f9d4     ED F6 1B 10 
1f9d8     0E 50 40 0A | 	byte	$6a, $18, $26, $1e, $fd, $df, $fd, $11, $ed, $f6, $1b, $10, $0e, $50, $40, $0a
1f9dc     1B 4F 40 00 
1f9e0     1E 29 FB 0E 
1f9e4     18 0E 0B 11 
1f9e8     1B 00 1D FB | 	byte	$1b, $4f, $40, $00, $1e, $29, $fb, $0e, $18, $0e, $0b, $11, $1b, $00, $1d, $fb
1f9ec     FD F0 C9 D8 
1f9f0     B8 C8 E5 0A 
1f9f4     1D 15 14 F0 
1f9f8     E9 F6 ED FA | 	byte	$fd, $f0, $c9, $d8, $b8, $c8, $e5, $0a, $1d, $15, $14, $f0, $e9, $f6, $ed, $fa
1f9fc     F4 DA DD D6 
1fa00     FB 04 ED EE 
1fa04     FD F0 E3 EA 
1fa08     E3 DC F6 F4 | 	byte	$f4, $da, $dd, $d6, $fb, $04, $ed, $ee, $fd, $f0, $e3, $ea, $e3, $dc, $f6, $f4
1fa0c     F2 D2 D2 04 
1fa10     EA DA 00 00 
1fa14     D5 BF D2 DF 
1fa18     C5 DC F7 D6 | 	byte	$f2, $d2, $d2, $04, $ea, $da, $00, $00, $d5, $bf, $d2, $df, $c5, $dc, $f7, $d6
1fa1c     CF DA ED FD 
1fa20     DD D5 E3 E5 
1fa24     CF AA E9 E9 
1fa28     DA F7 DA C4 | 	byte	$cf, $da, $ed, $fd, $dd, $d5, $e3, $e5, $cf, $aa, $e9, $e9, $da, $f7, $da, $c4
1fa2c     E7 EE FD 29 
1fa30     DF E7 07 E2 
1fa34     E5 DF CB D2 
1fa38     ED E2 D5 E5 | 	byte	$e7, $ee, $fd, $29, $df, $e7, $07, $e2, $e5, $df, $cb, $d2, $ed, $e2, $d5, $e5
1fa3c     F2 FA F7 F0 
1fa40     E2 F6 FB 17 
1fa44     18 D2 E2 17 
1fa48     F6 E5 FA 01 | 	byte	$f2, $fa, $f7, $f0, $e2, $f6, $fb, $17, $18, $d2, $e2, $17, $f6, $e5, $fa, $01
1fa4c     2E E9 A4 D2 
1fa50     10 04 E9 F7 
1fa54     15 07 EA ED 
1fa58     0B 1B 10 EA | 	byte	$2e, $e9, $a4, $d2, $10, $04, $e9, $f7, $15, $07, $ea, $ed, $0b, $1b, $10, $ea
1fa5c     1D 22 08 15 
1fa60     DF F2 15 E5 
1fa64     E9 10 01 F2 
1fa68     17 10 00 15 | 	byte	$1d, $22, $08, $15, $df, $f2, $15, $e5, $e9, $10, $01, $f2, $17, $10, $00, $15
1fa6c     08 CF FA 0A 
1fa70     DC EE 15 24 
1fa74     35 33 0B 00 
1fa78     14 10 31 59 | 	byte	$08, $cf, $fa, $0a, $dc, $ee, $15, $24, $35, $33, $0b, $00, $14, $10, $31, $59
1fa7c     28 0B 28 21 
1fa80     F6 E5 00 0E 
1fa84     24 17 07 EE 
1fa88     FB 35 2F 0A | 	byte	$28, $0b, $28, $21, $f6, $e5, $00, $0e, $24, $17, $07, $ee, $fb, $35, $2f, $0a
1fa8c     03 FA DC B2 
1fa90     C5 ED FD 00 
1fa94     FA 04 01 F4 
1fa98     01 F6 C4 D5 | 	byte	$03, $fa, $dc, $b2, $c5, $ed, $fd, $00, $fa, $04, $01, $f4, $01, $f6, $c4, $d5
1fa9c     DA DD DC A1 
1faa0     BB E2 E5 D8 
1faa4     DF E5 CF 8A 
1faa8     C2 07 EE D0 | 	byte	$da, $dd, $dc, $a1, $bb, $e2, $e5, $d8, $df, $e5, $cf, $8a, $c2, $07, $ee, $d0
1faac     CF EE FA DC 
1fab0     D0 ED 01 07 
1fab4     FD 04 21 07 
1fab8     E5 E5 DC F6 | 	byte	$cf, $ee, $fa, $dc, $d0, $ed, $01, $07, $fd, $04, $21, $07, $e5, $e5, $dc, $f6
1fabc     F6 E3 FA F2 
1fac0     F4 1B 0A 04 
1fac4     08 03 00 04 
1fac8     DF BB EA FB | 	byte	$f6, $e3, $fa, $f2, $f4, $1b, $0a, $04, $08, $03, $00, $04, $df, $bb, $ea, $fb
1facc     F0 F7 03 17 
1fad0     EE D5 DD D6 
1fad4     BC F4 24 E9 
1fad8     BE D8 CB D8 | 	byte	$f0, $f7, $03, $17, $ee, $d5, $dd, $d6, $bc, $f4, $24, $e9, $be, $d8, $cb, $d8
1fadc     F2 00 08 DC 
1fae0     C4 DC F2 EA 
1fae4     E2 E2 04 11 
1fae8     07 07 11 08 | 	byte	$f2, $00, $08, $dc, $c4, $dc, $f2, $ea, $e2, $e2, $04, $11, $07, $07, $11, $08
1faec     FD DF DC 0B 
1faf0     17 F4 CF E7 
1faf4     11 26 2F 17 
1faf8     FD 03 40 47 | 	byte	$fd, $df, $dc, $0b, $17, $f4, $cf, $e7, $11, $26, $2f, $17, $fd, $03, $40, $47
1fafc     14 00 DC F6 
1fb00     3B 21 14 0E 
1fb04     24 22 FA 08 
1fb08     0E 15 31 08 | 	byte	$14, $00, $dc, $f6, $3b, $21, $14, $0e, $24, $22, $fa, $08, $0e, $15, $31, $08
1fb0c     DD E7 08 10 
1fb10     DF C2 E9 00 
1fb14     F4 FD 2B 2B 
1fb18     E7 E5 0E DD | 	byte	$dd, $e7, $08, $10, $df, $c2, $e9, $00, $f4, $fd, $2b, $2b, $e7, $e5, $0e, $dd
1fb1c     FD 14 F2 FA 
1fb20     E9 FA 15 21 
1fb24     15 0B 03 E5 
1fb28     E9 0E 17 EA | 	byte	$fd, $14, $f2, $fa, $e9, $fa, $15, $21, $15, $0b, $03, $e5, $e9, $0e, $17, $ea
1fb2c     F6 F7 F0 11 
1fb30     04 FB 10 0A 
1fb34     F2 EE F0 ED 
1fb38     0E 00 EA D5 | 	byte	$f6, $f7, $f0, $11, $04, $fb, $10, $0a, $f2, $ee, $f0, $ed, $0e, $00, $ea, $d5
1fb3c     C2 F6 17 F2 
1fb40     B1 BF F0 FA 
1fb44     EA D8 DC F6 
1fb48     07 E2 DC F6 | 	byte	$c2, $f6, $17, $f2, $b1, $bf, $f0, $fa, $ea, $d8, $dc, $f6, $07, $e2, $dc, $f6
1fb4c     0E 03 DC C8 
1fb50     CC D0 CF EA 
1fb54     E9 CB D0 EE 
1fb58     E3 E2 F7 F0 | 	byte	$0e, $03, $dc, $c8, $cc, $d0, $cf, $ea, $e9, $cb, $d0, $ee, $e3, $e2, $f7, $f0
1fb5c     C4 B7 DD 14 
1fb60     10 26 0E F6 
1fb64     0A EA E7 F4 
1fb68     EE EE F6 07 | 	byte	$c4, $b7, $dd, $14, $10, $26, $0e, $f6, $0a, $ea, $e7, $f4, $ee, $ee, $f6, $07
1fb6c     FD ED 0B 42 
1fb70     21 EE 0E EE 
1fb74     EA 08 F6 DA 
1fb78     DA E2 F4 1D | 	byte	$fd, $ed, $0b, $42, $21, $ee, $0e, $ee, $ea, $08, $f6, $da, $da, $e2, $f4, $1d
1fb7c     0B D8 D8 D6 
1fb80     E7 F6 C9 B8 
1fb84     F7 2F 01 BC 
1fb88     BE E2 FB 03 | 	byte	$0b, $d8, $d8, $d6, $e7, $f6, $c9, $b8, $f7, $2f, $01, $bc, $be, $e2, $fb, $03
1fb8c     FD 0B 08 15 
1fb90     1B F0 D5 ED 
1fb94     FA ED FD F2 
1fb98     E7 DC D2 F7 | 	byte	$fd, $0b, $08, $15, $1b, $f0, $d5, $ed, $fa, $ed, $fd, $f2, $e7, $dc, $d2, $f7
1fb9c     07 EE 04 21 
1fba0     FA F6 0E 11 
1fba4     FD F2 03 22 
1fba8     1B 0E 1D FB | 	byte	$07, $ee, $04, $21, $fa, $f6, $0e, $11, $fd, $f2, $03, $22, $1b, $0e, $1d, $fb
1fbac     E5 0E 03 04 
1fbb0     10 FB ED ED 
1fbb4     0B 26 28 2B 
1fbb8     35 17 F2 ED | 	byte	$e5, $0e, $03, $04, $10, $fb, $ed, $ed, $0b, $26, $28, $2b, $35, $17, $f2, $ed
1fbbc     DC ED 15 15 
1fbc0     17 F6 D8 BF 
1fbc4     BF EA FB FA 
1fbc8     D5 CF 00 18 | 	byte	$dc, $ed, $15, $15, $17, $f6, $d8, $bf, $bf, $ea, $fb, $fa, $d5, $cf, $00, $18
1fbcc     03 FD E9 D2 
1fbd0     E9 F2 E2 D6 
1fbd4     E9 E7 E9 F2 
1fbd8     E5 C8 D5 0A | 	byte	$03, $fd, $e9, $d2, $e9, $f2, $e2, $d6, $e9, $e7, $e9, $f2, $e5, $c8, $d5, $0a
1fbdc     15 F4 F7 0E 
1fbe0     11 F7 E5 EA 
1fbe4     F0 FB 0A 00 
1fbe8     F6 F0 ED F4 | 	byte	$15, $f4, $f7, $0e, $11, $f7, $e5, $ea, $f0, $fb, $0a, $00, $f6, $f0, $ed, $f4
1fbec     DC 00 FB EA 
1fbf0     0A 01 07 18 
1fbf4     14 E5 DF 01 
1fbf8     10 CB CF 07 | 	byte	$dc, $00, $fb, $ea, $0a, $01, $07, $18, $14, $e5, $df, $01, $10, $cb, $cf, $07
1fbfc     04 03 ED 00 
1fc00     07 ED FA FD 
1fc04     01 FD 04 0A 
1fc08     FA DC C5 C8 | 	byte	$04, $03, $ed, $00, $07, $ed, $fa, $fd, $01, $fd, $04, $0a, $fa, $dc, $c5, $c8
1fc0c     E5 FB F4 D8 
1fc10     F2 0E 07 01 
1fc14     0E 1E 24 F0 
1fc18     DF F4 F4 03 | 	byte	$e5, $fb, $f4, $d8, $f2, $0e, $07, $01, $0e, $1e, $24, $f0, $df, $f4, $f4, $03
1fc1c     39 1B F4 EA 
1fc20     03 10 EA FD 
1fc24     01 DA EA 00 
1fc28     00 F7 04 FD | 	byte	$39, $1b, $f4, $ea, $03, $10, $ea, $fd, $01, $da, $ea, $00, $00, $f7, $04, $fd
1fc2c     01 04 EE FA 
1fc30     0E EE F0 D8 
1fc34     BE DF 03 F4 
1fc38     CF DD FD F2 | 	byte	$01, $04, $ee, $fa, $0e, $ee, $f0, $d8, $be, $df, $03, $f4, $cf, $dd, $fd, $f2
1fc3c     E5 08 47 0A 
1fc40     E2 ED D0 C8 
1fc44     E5 2B 15 D6 
1fc48     F2 F7 DA D2 | 	byte	$e5, $08, $47, $0a, $e2, $ed, $d0, $c8, $e5, $2b, $15, $d6, $f2, $f7, $da, $d2
1fc4c     DD F7 FD FD 
1fc50     07 03 ED E2 
1fc54     03 0A 0B E9 
1fc58     B2 D0 E2 D8 | 	byte	$dd, $f7, $fd, $fd, $07, $03, $ed, $e2, $03, $0a, $0b, $e9, $b2, $d0, $e2, $d8
1fc5c     E9 F4 F6 FD 
1fc60     24 0A CF E2 
1fc64     10 14 01 03 
1fc68     04 0E 00 E3 | 	byte	$e9, $f4, $f6, $fd, $24, $0a, $cf, $e2, $10, $14, $01, $03, $04, $0e, $00, $e3
1fc6c     E7 D5 D8 E2 
1fc70     DF F6 17 17 
1fc74     04 10 0A 1B 
1fc78     3B 0B EE 01 | 	byte	$e7, $d5, $d8, $e2, $df, $f6, $17, $17, $04, $10, $0a, $1b, $3b, $0b, $ee, $01
1fc7c     24 18 1B 08 
1fc80     FA 07 00 C2 
1fc84     EE 43 11 11 
1fc88     1B EE 00 1D | 	byte	$24, $18, $1b, $08, $fa, $07, $00, $c2, $ee, $43, $11, $11, $1b, $ee, $00, $1d
1fc8c     3E 2F F4 EA 
1fc90     F2 EE 04 22 
1fc94     21 ED ED 03 
1fc98     04 00 0B 18 | 	byte	$3e, $2f, $f4, $ea, $f2, $ee, $04, $22, $21, $ed, $ed, $03, $04, $00, $0b, $18
1fc9c     03 F4 01 03 
1fca0     EA 03 31 1E 
1fca4     10 14 1D 07 
1fca8     DD D2 D6 F4 | 	byte	$03, $f4, $01, $03, $ea, $03, $31, $1e, $10, $14, $1d, $07, $dd, $d2, $d6, $f4
1fcac     FA E3 DC D5 
1fcb0     E3 FA EA DC 
1fcb4     01 FA DA D8 
1fcb8     EA F2 03 15 | 	byte	$fa, $e3, $dc, $d5, $e3, $fa, $ea, $dc, $01, $fa, $da, $d8, $ea, $f2, $03, $15
1fcbc     01 EA D8 C2 
1fcc0     C8 D0 DD DD 
1fcc4     EA F6 F2 DF 
1fcc8     DA DD EA 01 | 	byte	$01, $ea, $d8, $c2, $c8, $d0, $dd, $dd, $ea, $f6, $f2, $df, $da, $dd, $ea, $01
1fccc     FD E3 CB D8 
1fcd0     F4 04 0A 0B 
1fcd4     F7 01 14 01 
1fcd8     F7 FB 04 0A | 	byte	$fd, $e3, $cb, $d8, $f4, $04, $0a, $0b, $f7, $01, $14, $01, $f7, $fb, $04, $0a
1fcdc     E7 C4 DF 1E 
1fce0     29 17 15 04 
1fce4     FD F0 F4 14 
1fce8     00 08 1E 17 | 	byte	$e7, $c4, $df, $1e, $29, $17, $15, $04, $fd, $f0, $f4, $14, $00, $08, $1e, $17
1fcec     0B 11 0B 0E 
1fcf0     EE B8 D8 01 
1fcf4     01 FB EE F7 
1fcf8     04 0A 0B 15 | 	byte	$0b, $11, $0b, $0e, $ee, $b8, $d8, $01, $01, $fb, $ee, $f7, $04, $0a, $0b, $15
1fcfc     29 33 26 F7 
1fd00     DD E3 E7 EA 
1fd04     CC CB F6 FA 
1fd08     FD EE C8 EE | 	byte	$29, $33, $26, $f7, $dd, $e3, $e7, $ea, $cc, $cb, $f6, $fa, $fd, $ee, $c8, $ee
1fd0c     26 FB F7 0A 
1fd10     0A 14 03 EE 
1fd14     0E 0A E7 E9 
1fd18     F4 D5 CF EE | 	byte	$26, $fb, $f7, $0a, $0a, $14, $03, $ee, $0e, $0a, $e7, $e9, $f4, $d5, $cf, $ee
1fd1c     03 FA E3 07 
1fd20     0E F7 07 18 
1fd24     0E E7 E7 04 
1fd28     E7 E3 F6 F6 | 	byte	$03, $fa, $e3, $07, $0e, $f7, $07, $18, $0e, $e7, $e7, $04, $e7, $e3, $f6, $f6
1fd2c     ED FA 10 15 
1fd30     14 0E 03 ED 
1fd34     D5 DF ED E3 
1fd38     F6 17 08 FD | 	byte	$ed, $fa, $10, $15, $14, $0e, $03, $ed, $d5, $df, $ed, $e3, $f6, $17, $08, $fd
1fd3c     0B 00 E9 F4 
1fd40     FB F6 ED FB 
1fd44     00 E5 E7 EA 
1fd48     08 26 22 FD | 	byte	$0b, $00, $e9, $f4, $fb, $f6, $ed, $fb, $00, $e5, $e7, $ea, $08, $26, $22, $fd
1fd4c     EE EE E7 1E 
1fd50     33 D6 B1 F6 
1fd54     3C 28 15 15 
1fd58     1D 29 14 F7 | 	byte	$ee, $ee, $e7, $1e, $33, $d6, $b1, $f6, $3c, $28, $15, $15, $1d, $29, $14, $f7
1fd5c     ED F7 FB EE 
1fd60     E9 04 01 01 
1fd64     0A 03 03 11 
1fd68     1E 1B 21 17 | 	byte	$ed, $f7, $fb, $ee, $e9, $04, $01, $01, $0a, $03, $03, $11, $1e, $1b, $21, $17
1fd6c     F2 00 22 03 
1fd70     F6 18 1E 18 
1fd74     17 F2 F6 0B 
1fd78     F2 E5 00 11 | 	byte	$f2, $00, $22, $03, $f6, $18, $1e, $18, $17, $f2, $f6, $0b, $f2, $e5, $00, $11
1fd7c     00 10 07 E5 
1fd80     E2 DF F4 E3 
1fd84     C4 C8 CB DF 
1fd88     E5 E5 00 F2 | 	byte	$00, $10, $07, $e5, $e2, $df, $f4, $e3, $c4, $c8, $cb, $df, $e5, $e5, $00, $f2
1fd8c     ED F0 F7 FB 
1fd90     E7 E9 EA ED 
1fd94     FB E3 C4 BC 
1fd98     DA EA EA E9 | 	byte	$ed, $f0, $f7, $fb, $e7, $e9, $ea, $ed, $fb, $e3, $c4, $bc, $da, $ea, $ea, $e9
1fd9c     E5 E5 F0 F2 
1fda0     E9 F7 E5 E5 
1fda4     08 10 F2 0E 
1fda8     21 15 03 D6 | 	byte	$e5, $e5, $f0, $f2, $e9, $f7, $e5, $e5, $08, $10, $f2, $0e, $21, $15, $03, $d6
1fdac     B8 CC F6 F6 
1fdb0     ED E9 F6 F4 
1fdb4     F0 17 22 ED 
1fdb8     DA F7 18 07 | 	byte	$b8, $cc, $f6, $f6, $ed, $e9, $f6, $f4, $f0, $17, $22, $ed, $da, $f7, $18, $07
1fdbc     E9 00 0E 04 
1fdc0     17 1D 11 04 
1fdc4     03 03 01 07 
1fdc8     14 03 08 28 | 	byte	$e9, $00, $0e, $04, $17, $1d, $11, $04, $03, $03, $01, $07, $14, $03, $08, $28
1fdcc     1E 28 4C 40 
1fdd0     2B 17 11 0B 
1fdd4     18 2F 11 08 
1fdd8     1B 1D 21 26 | 	byte	$1e, $28, $4c, $40, $2b, $17, $11, $0b, $18, $2f, $11, $08, $1b, $1d, $21, $26
1fddc     26 22 31 31 
1fde0     22 2E 22 0E 
1fde4     04 03 2F 3E 
1fde8     2E 15 10 21 | 	byte	$26, $22, $31, $31, $22, $2e, $22, $0e, $04, $03, $2f, $3e, $2e, $15, $10, $21
1fdec     0B 01 0E FA 
1fdf0     EE 14 17 0A 
1fdf4     F6 08 17 0A 
1fdf8     0E 21 04 FD | 	byte	$0b, $01, $0e, $fa, $ee, $14, $17, $0a, $f6, $08, $17, $0a, $0e, $21, $04, $fd
1fdfc     EE DD F2 F0 
1fe00     DA E3 DC E5 
1fe04     F6 FA 03 10 
1fe08     01 0E FD F0 | 	byte	$ee, $dd, $f2, $f0, $da, $e3, $dc, $e5, $f6, $fa, $03, $10, $01, $0e, $fd, $f0
1fe0c     FD E9 E7 03 
1fe10     E9 CB E7 03 
1fe14     01 03 08 EE 
1fe18     FA 0A FB F2 | 	byte	$fd, $e9, $e7, $03, $e9, $cb, $e7, $03, $01, $03, $08, $ee, $fa, $0a, $fb, $f2
1fe1c     ED ED E5 E5 
1fe20     E3 ED F2 E2 
1fe24     DA F4 F4 F4 
1fe28     01 08 14 18 | 	byte	$ed, $ed, $e5, $e5, $e3, $ed, $f2, $e2, $da, $f4, $f4, $f4, $01, $08, $14, $18
1fe2c     10 F0 E3 F0 
1fe30     FB FA E3 DF 
1fe34     00 0B F6 E2 
1fe38     EA E9 F6 0A | 	byte	$10, $f0, $e3, $f0, $fb, $fa, $e3, $df, $00, $0b, $f6, $e2, $ea, $e9, $f6, $0a
1fe3c     0A 1D 0B E5 
1fe40     D8 CF 07 10 
1fe44     F6 F6 E7 DF 
1fe48     DD F2 07 F2 | 	byte	$0a, $1d, $0b, $e5, $d8, $cf, $07, $10, $f6, $f6, $e7, $df, $dd, $f2, $07, $f2
1fe4c     F7 E9 DA FA 
1fe50     07 F0 F6 03 
1fe54     FA F4 DD E5 
1fe58     01 FA 03 10 | 	byte	$f7, $e9, $da, $fa, $07, $f0, $f6, $03, $fa, $f4, $dd, $e5, $01, $fa, $03, $10
1fe5c     11 17 22 0E 
1fe60     1D 1B 03 F2 
1fe64     DC FB 21 0A 
1fe68     ED F6 01 00 | 	byte	$11, $17, $22, $0e, $1d, $1b, $03, $f2, $dc, $fb, $21, $0a, $ed, $f6, $01, $00
1fe6c     F6 FD 0A 14 
1fe70     04 FD 03 00 
1fe74     11 1D 0A F4 
1fe78     F6 F6 0A 11 | 	byte	$f6, $fd, $0a, $14, $04, $fd, $03, $00, $11, $1d, $0a, $f4, $f6, $f6, $0a, $11
1fe7c     E3 E3 08 17 
1fe80     18 0A 01 17 
1fe84     1E 10 18 18 
1fe88     1B 07 01 1E | 	byte	$e3, $e3, $08, $17, $18, $0a, $01, $17, $1e, $10, $18, $18, $1b, $07, $01, $1e
1fe8c     2E 28 17 1B 
1fe90     22 24 29 2E 
1fe94     33 36 33 1E 
1fe98     22 24 15 24 | 	byte	$2e, $28, $17, $1b, $22, $24, $29, $2e, $33, $36, $33, $1e, $22, $24, $15, $24
1fe9c     33 28 3E 43 
1fea0     21 FD FD 1B 
1fea4     1B 03 FB 00 
1fea8     03 F2 F0 04 | 	byte	$33, $28, $3e, $43, $21, $fd, $fd, $1b, $1b, $03, $fb, $00, $03, $f2, $f0, $04
1feac     1E 07 E3 E7 
1feb0     F2 08 04 E3 
1feb4     CC B2 CF FD 
1feb8     F2 DD E7 E9 | 	byte	$1e, $07, $e3, $e7, $f2, $08, $04, $e3, $cc, $b2, $cf, $fd, $f2, $dd, $e7, $e9
1febc     DA CF ED 00 
1fec0     F2 ED E2 DF 
1fec4     F6 F4 DD E9 
1fec8     01 11 F2 D6 | 	byte	$da, $cf, $ed, $00, $f2, $ed, $e2, $df, $f6, $f4, $dd, $e9, $01, $11, $f2, $d6
1fecc     B7 AE D6 F6 
1fed0     ED F4 FA F0 
1fed4     FA F6 F6 EA 
1fed8     C9 D6 EA E5 | 	byte	$b7, $ae, $d6, $f6, $ed, $f4, $fa, $f0, $fa, $f6, $f6, $ea, $c9, $d6, $ea, $e5
1fedc     F4 F4 F2 F4 
1fee0     EA FB 0A 04 
1fee4     08 FD E7 D2 
1fee8     D8 D6 D8 EE | 	byte	$f4, $f4, $f2, $f4, $ea, $fb, $0a, $04, $08, $fd, $e7, $d2, $d8, $d6, $d8, $ee
1feec     F7 EA DF F4 
1fef0     F6 F2 00 07 
1fef4     EA DA EA 07 
1fef8     1E 18 08 FD | 	byte	$f7, $ea, $df, $f4, $f6, $f2, $00, $07, $ea, $da, $ea, $07, $1e, $18, $08, $fd
1fefc     18 04 F0 15 
1ff00     24 10 04 0B 
1ff04     11 11 11 21 
1ff08     2B 22 14 1E | 	byte	$18, $04, $f0, $15, $24, $10, $04, $0b, $11, $11, $11, $21, $2b, $22, $14, $1e
1ff0c     3B 35 26 29 
1ff10     39 31 33 35 
1ff14     2B 29 21 17 
1ff18     29 4F 4D 2B | 	byte	$3b, $35, $26, $29, $39, $31, $33, $35, $2b, $29, $21, $17, $29, $4f, $4d, $2b
1ff1c     1E 33 39 2B 
1ff20     2E 26 17 00 
1ff24     FB 17 28 24 
1ff28     0A 08 1D 1D | 	byte	$1e, $33, $39, $2b, $2e, $26, $17, $00, $fb, $17, $28, $24, $0a, $08, $1d, $1d
1ff2c     1E 1B 1E 08 
1ff30     E2 FB 1E 07 
1ff34     F4 0A 22 1E 
1ff38     14 E3 D6 04 | 	byte	$1e, $1b, $1e, $08, $e2, $fb, $1e, $07, $f4, $0a, $22, $1e, $14, $e3, $d6, $04
1ff3c     0A 0A 0A 03 
1ff40     EA ED E3 E9 
1ff44     04 0B 07 FD 
1ff48     FB 07 1D 15 | 	byte	$0a, $0a, $0a, $03, $ea, $ed, $e3, $e9, $04, $0b, $07, $fd, $fb, $07, $1d, $15
1ff4c     01 ED EA EE 
1ff50     D5 CF F2 04 
1ff54     F2 E3 EE F4 
1ff58     FD FD F4 E2 | 	byte	$01, $ed, $ea, $ee, $d5, $cf, $f2, $04, $f2, $e3, $ee, $f4, $fd, $fd, $f4, $e2
1ff5c     DF FD F0 DF 
1ff60     E9 ED F7 F6 
1ff64     F2 D5 D0 E7 
1ff68     E5 DC CF D2 | 	byte	$df, $fd, $f0, $df, $e9, $ed, $f7, $f6, $f2, $d5, $d0, $e7, $e5, $dc, $cf, $d2
1ff6c     C5 EA 08 ED 
1ff70     E3 DD F0 FA 
1ff74     FB F7 F4 FA 
1ff78     0E 04 EA ED | 	byte	$c5, $ea, $08, $ed, $e3, $dd, $f0, $fa, $fb, $f7, $f4, $fa, $0e, $04, $ea, $ed
1ff7c     F4 F0 F4 08 
1ff80     21 2F 1E EE 
1ff84     E7 F2 01 18 
1ff88     08 F6 FA 0E | 	byte	$f4, $f0, $f4, $08, $21, $2f, $1e, $ee, $e7, $f2, $01, $18, $08, $f6, $fa, $0e
1ff8c     14 0A 03 0E 
1ff90     2B 22 0A FD 
1ff94     08 14 01 00 
1ff98     1B 15 01 10 | 	byte	$14, $0a, $03, $0e, $2b, $22, $0a, $fd, $08, $14, $01, $00, $1b, $15, $01, $10
1ff9c     15 18 24 29 
1ffa0     1D 10 10 17 
1ffa4     0B FA 04 1B 
1ffa8     15 11 14 08 | 	byte	$15, $18, $24, $29, $1d, $10, $10, $17, $0b, $fa, $04, $1b, $15, $11, $14, $08
1ffac     26 26 0A 0E 
1ffb0     01 07 1E 11 
1ffb4     1D 29 04 FD 
1ffb8     0A 01 07 1B | 	byte	$26, $26, $0a, $0e, $01, $07, $1e, $11, $1d, $29, $04, $fd, $0a, $01, $07, $1b
1ffbc     03 E7 01 07 
1ffc0     15 1B 14 11 
1ffc4     0E 15 07 03 
1ffc8     FD 0B 1B 07 | 	byte	$03, $e7, $01, $07, $15, $1b, $14, $11, $0e, $15, $07, $03, $fd, $0b, $1b, $07
1ffcc     F7 00 11 01 
1ffd0     F4 F7 00 0E 
1ffd4     0E CF D5 ED 
1ffd8     FA 01 01 08 | 	byte	$f7, $00, $11, $01, $f4, $f7, $00, $0e, $0e, $cf, $d5, $ed, $fa, $01, $01, $08
1ffdc     07 FD 01 FD 
1ffe0     F0 E9 00 17 
1ffe4     FB 08 14 03 
1ffe8     00 01 0A 10 | 	byte	$07, $fd, $01, $fd, $f0, $e9, $00, $17, $fb, $08, $14, $03, $00, $01, $0a, $10
1ffec     F6 00 1B 0B 
1fff0     F6 EA F0 08 
1fff4     21 1B 1E 0E 
1fff8     04 18 11 01 | 	byte	$f6, $00, $1b, $0b, $f6, $ea, $f0, $08, $21, $1b, $1e, $0e, $04, $18, $11, $01
1fffc     04 17 24 1E 
20000     0B FD 0E 14 
20004     11 17 0B F6 
20008     17 28 07 E7 | 	byte	$04, $17, $24, $1e, $0b, $fd, $0e, $14, $11, $17, $0b, $f6, $17, $28, $07, $e7
2000c     00 15 18 08 
20010     F6 F7 FD 0E 
20014     F0 C8 D8 F6 
20018     0E 00 D2 C8 | 	byte	$00, $15, $18, $08, $f6, $f7, $fd, $0e, $f0, $c8, $d8, $f6, $0e, $00, $d2, $c8
2001c     E9 FA D8 CB 
20020     E2 03 EA B7 
20024     C2 EA F0 F0 
20028     F2 DF DF F0 | 	byte	$e9, $fa, $d8, $cb, $e2, $03, $ea, $b7, $c2, $ea, $f0, $f0, $f2, $df, $df, $f0
2002c     07 03 E3 D6 
20030     E5 F7 F0 DF 
20034     E3 E5 F2 00 
20038     EE F0 EE E3 | 	byte	$07, $03, $e3, $d6, $e5, $f7, $f0, $df, $e3, $e5, $f2, $00, $ee, $f0, $ee, $e3
2003c     F0 EE F0 10 
20040     18 ED EE 03 
20044     03 18 1D 0E 
20048     0A 11 0B 00 | 	byte	$f0, $ee, $f0, $10, $18, $ed, $ee, $03, $03, $18, $1d, $0e, $0a, $11, $0b, $00
2004c     11 1B 17 10 
20050     08 00 0B 01 
20054     F4 10 18 03 
20058     00 21 24 0A | 	byte	$11, $1b, $17, $10, $08, $00, $0b, $01, $f4, $10, $18, $03, $00, $21, $24, $0a
2005c     11 10 FD 1B 
20060     3E 15 08 18 
20064     11 11 1E 2B 
20068     22 0A 04 11 | 	byte	$11, $10, $fd, $1b, $3e, $15, $08, $18, $11, $11, $1e, $2b, $22, $0a, $04, $11
2006c     0B 0B 26 29 
20070     26 14 0B 21 
20074     29 17 24 18 
20078     08 21 22 15 | 	byte	$0b, $0b, $26, $29, $26, $14, $0b, $21, $29, $17, $24, $18, $08, $21, $22, $15
2007c     1E 2F 2E FB 
20080     FD 07 04 11 
20084     10 07 07 17 
20088     1B FA E5 F2 | 	byte	$1e, $2f, $2e, $fb, $fd, $07, $04, $11, $10, $07, $07, $17, $1b, $fa, $e5, $f2
2008c     10 18 03 FB 
20090     00 07 17 10 
20094     0B 04 ED 07 
20098     15 00 FB 03 | 	byte	$10, $18, $03, $fb, $00, $07, $17, $10, $0b, $04, $ed, $07, $15, $00, $fb, $03
2009c     1B 24 10 00 
200a0     F4 FB 01 FB 
200a4     EE DC E5 FA 
200a8     00 EE E5 DA | 	byte	$1b, $24, $10, $00, $f4, $fb, $01, $fb, $ee, $dc, $e5, $fa, $00, $ee, $e5, $da
200ac     EE 11 F7 E9 
200b0     D8 D5 F4 00 
200b4     ED E7 F2 DA 
200b8     BF D2 ED E2 | 	byte	$ee, $11, $f7, $e9, $d8, $d5, $f4, $00, $ed, $e7, $f2, $da, $bf, $d2, $ed, $e2
200bc     E3 EE EA DF 
200c0     E2 E5 E3 EE 
200c4     ED E5 E3 DC 
200c8     DA E5 ED F0 | 	byte	$e3, $ee, $ea, $df, $e2, $e5, $e3, $ee, $ed, $e5, $e3, $dc, $da, $e5, $ed, $f0
200cc     F4 F0 F0 E3 
200d0     E3 F4 04 08 
200d4     E3 EE F4 F4 
200d8     0B 07 F2 F0 | 	byte	$f4, $f0, $f0, $e3, $e3, $f4, $04, $08, $e3, $ee, $f4, $f4, $0b, $07, $f2, $f0
200dc     01 11 EE F0 
200e0     00 0E 15 0A 
200e4     FD FD 11 0B 
200e8     11 10 08 07 | 	byte	$01, $11, $ee, $f0, $00, $0e, $15, $0a, $fd, $fd, $11, $0b, $11, $10, $08, $07
200ec     00 FD 0A 11 
200f0     17 1B 01 F7 
200f4     29 35 0E 14 
200f8     26 1E 14 17 | 	byte	$00, $fd, $0a, $11, $17, $1b, $01, $f7, $29, $35, $0e, $14, $26, $1e, $14, $17
200fc     2B 1B 08 0E 
20100     1E 14 00 10 
20104     28 26 1B 0E 
20108     08 17 1B 14 | 	byte	$2b, $1b, $08, $0e, $1e, $14, $00, $10, $28, $26, $1b, $0e, $08, $17, $1b, $14
2010c     2F 29 FB F6 
20110     14 17 0B 26 
20114     2E 17 14 1D 
20118     18 28 2B 07 | 	byte	$2f, $29, $fb, $f6, $14, $17, $0b, $26, $2e, $17, $14, $1d, $18, $28, $2b, $07
2011c     FD 11 17 0B 
20120     FA F4 0B 1B 
20124     15 0B 0B FD 
20128     E9 F2 08 08 | 	byte	$fd, $11, $17, $0b, $fa, $f4, $0b, $1b, $15, $0b, $0b, $fd, $e9, $f2, $08, $08
2012c     07 03 F4 11 
20130     21 01 FA FD 
20134     00 FA F2 ED 
20138     EA ED F7 F7 | 	byte	$07, $03, $f4, $11, $21, $01, $fa, $fd, $00, $fa, $f2, $ed, $ea, $ed, $f7, $f7
2013c     F6 FB FB F6 
20140     FD 03 F0 EE 
20144     F7 EA F2 08 
20148     1B 0B F0 F4 | 	byte	$f6, $fb, $fb, $f6, $fd, $03, $f0, $ee, $f7, $ea, $f2, $08, $1b, $0b, $f0, $f4
2014c     00 FD F4 FB 
20150     F4 DD DC DD 
20154     ED E2 E7 FB 
20158     EE E3 E3 D6 | 	byte	$00, $fd, $f4, $fb, $f4, $dd, $dc, $dd, $ed, $e2, $e7, $fb, $ee, $e3, $e3, $d6
2015c     DA ED E2 D8 
20160     D8 D8 E2 DF 
20164     EA FB FA EA 
20168     E3 E5 E5 EE | 	byte	$da, $ed, $e2, $d8, $d8, $d8, $e2, $df, $ea, $fb, $fa, $ea, $e3, $e5, $e5, $ee
2016c     EA DF F0 FA 
20170     EE F6 F4 EE 
20174     F0 E9 DF ED 
20178     FB 03 08 11 | 	byte	$ea, $df, $f0, $fa, $ee, $f6, $f4, $ee, $f0, $e9, $df, $ed, $fb, $03, $08, $11
2017c     0B F4 04 0B 
20180     08 00 F4 F6 
20184     08 0E 07 04 
20188     10 10 00 01 | 	byte	$0b, $f4, $04, $0b, $08, $00, $f4, $f6, $08, $0e, $07, $04, $10, $10, $00, $01
2018c     0B 11 17 0B 
20190     07 08 15 15 
20194     FD FB 21 1E 
20198     00 0A 21 03 | 	byte	$0b, $11, $17, $0b, $07, $08, $15, $15, $fd, $fb, $21, $1e, $00, $0a, $21, $03
2019c     F4 08 1B 17 
201a0     0B 0B FB FA 
201a4     01 07 0E FA 
201a8     F4 08 11 17 | 	byte	$f4, $08, $1b, $17, $0b, $0b, $fb, $fa, $01, $07, $0e, $fa, $f4, $08, $11, $17
201ac     1D 0A ED 00 
201b0     18 08 0A 1E 
201b4     04 07 26 14 
201b8     0E 1D 11 00 | 	byte	$1d, $0a, $ed, $00, $18, $08, $0a, $1e, $04, $07, $26, $14, $0e, $1d, $11, $00
201bc     F6 00 0A 08 
201c0     08 11 1B 14 
201c4     0A 00 04 0B 
201c8     10 14 04 08 | 	byte	$f6, $00, $0a, $08, $08, $11, $1b, $14, $0a, $00, $04, $0b, $10, $14, $04, $08
201cc     14 10 04 01 
201d0     0E 0B 0B 10 
201d4     00 F6 F7 FD 
201d8     FA EE F6 03 | 	byte	$14, $10, $04, $01, $0e, $0b, $0b, $10, $00, $f6, $f7, $fd, $fa, $ee, $f6, $03
201dc     0B FB FA FB 
201e0     00 00 FA 01 
201e4     00 F4 00 00 
201e8     F7 FB 01 03 | 	byte	$0b, $fb, $fa, $fb, $00, $00, $fa, $01, $00, $f4, $00, $00, $f7, $fb, $01, $03
201ec     F2 F4 F4 F6 
201f0     FA F0 F6 0B 
201f4     11 FA DF ED 
201f8     F7 ED EA ED | 	byte	$f2, $f4, $f4, $f6, $fa, $f0, $f6, $0b, $11, $fa, $df, $ed, $f7, $ed, $ea, $ed
201fc     ED F0 D8 CC 
20200     ED 00 00 F2 
20204     E3 E2 E2 CF 
20208     DF FD ED D6 | 	byte	$ed, $f0, $d8, $cc, $ed, $00, $00, $f2, $e3, $e2, $e2, $cf, $df, $fd, $ed, $d6
2020c     E5 FA DA ED 
20210     F7 E3 D6 DF 
20214     F2 EA F2 EE 
20218     DF D6 DA E5 | 	byte	$e5, $fa, $da, $ed, $f7, $e3, $d6, $df, $f2, $ea, $f2, $ee, $df, $d6, $da, $e5
2021c     DD DA DF EE 
20220     F4 EE E2 DC 
20224     F6 FB EE F6 
20228     FB F2 F0 EE | 	byte	$dd, $da, $df, $ee, $f4, $ee, $e2, $dc, $f6, $fb, $ee, $f6, $fb, $f2, $f0, $ee
2022c     FD 03 01 08 
20230     10 0A 04 F6 
20234     FD 04 0A 08 
20238     F7 FA 07 0A | 	byte	$fd, $03, $01, $08, $10, $0a, $04, $f6, $fd, $04, $0a, $08, $f7, $fa, $07, $0a
2023c     10 22 1B 01 
20240     0A 15 0B FA 
20244     00 0E 14 1B 
20248     18 22 0E 04 | 	byte	$10, $22, $1b, $01, $0a, $15, $0b, $fa, $00, $0e, $14, $1b, $18, $22, $0e, $04
2024c     0E 0E 18 0B 
20250     04 1B 15 01 
20254     FB 01 07 11 
20258     21 18 00 00 | 	byte	$0e, $0e, $18, $0b, $04, $1b, $15, $01, $fb, $01, $07, $11, $21, $18, $00, $00
2025c     1D 0B 01 0E 
20260     04 FD 00 14 
20264     1B 0A 04 0B 
20268     0B 07 0E 0B | 	byte	$1d, $0b, $01, $0e, $04, $fd, $00, $14, $1b, $0a, $04, $0b, $0b, $07, $0e, $0b
2026c     07 14 14 0B 
20270     10 07 08 15 
20274     04 F7 00 10 
20278     03 03 08 01 | 	byte	$07, $14, $14, $0b, $10, $07, $08, $15, $04, $f7, $00, $10, $03, $03, $08, $01
2027c     01 0E 10 FD 
20280     0B 11 03 F4 
20284     E9 E9 F4 00 
20288     F2 ED EE F0 | 	byte	$01, $0e, $10, $fd, $0b, $11, $03, $f4, $e9, $e9, $f4, $00, $f2, $ed, $ee, $f0
2028c     F2 E9 E9 F7 
20290     04 E9 D5 EA 
20294     00 F2 DA CC 
20298     D6 F2 F7 E2 | 	byte	$f2, $e9, $e9, $f7, $04, $e9, $d5, $ea, $00, $f2, $da, $cc, $d6, $f2, $f7, $e2
2029c     DF D6 CB E3 
202a0     F6 F2 F6 DD 
202a4     E3 FA F2 DF 
202a8     E5 ED F2 F0 | 	byte	$df, $d6, $cb, $e3, $f6, $f2, $f6, $dd, $e3, $fa, $f2, $df, $e5, $ed, $f2, $f0
202ac     DC E7 F4 F0 
202b0     01 FB F4 EE 
202b4     DD DC F7 FB 
202b8     E5 D8 E2 F4 | 	byte	$dc, $e7, $f4, $f0, $01, $fb, $f4, $ee, $dd, $dc, $f7, $fb, $e5, $d8, $e2, $f4
202bc     F0 EA F2 ED 
202c0     E3 E2 ED F4 
202c4     F0 F6 F0 E5 
202c8     E7 ED F7 F0 | 	byte	$f0, $ea, $f2, $ed, $e3, $e2, $ed, $f4, $f0, $f6, $f0, $e5, $e7, $ed, $f7, $f0
202cc     E5 E5 F4 00 
202d0     ED EA F6 F6 
202d4     03 FD F2 00 
202d8     00 F4 E9 F2 | 	byte	$e5, $e5, $f4, $00, $ed, $ea, $f6, $f6, $03, $fd, $f2, $00, $00, $f4, $e9, $f2
202dc     04 08 03 10 
202e0     17 0E 0A 0A 
202e4     04 FD 08 21 
202e8     14 0B 15 1B | 	byte	$04, $08, $03, $10, $17, $0e, $0a, $0a, $04, $fd, $08, $21, $14, $0b, $15, $1b
202ec     1E 0A 0A 18 
202f0     15 0B 10 15 
202f4     17 11 14 0B 
202f8     0A 1D 1E 1B | 	byte	$1e, $0a, $0a, $18, $15, $0b, $10, $15, $17, $11, $14, $0b, $0a, $1d, $1e, $1b
202fc     1B 15 04 0A 
20300     11 07 08 18 
20304     1E 14 11 0B 
20308     01 01 07 0E | 	byte	$1b, $15, $04, $0a, $11, $07, $08, $18, $1e, $14, $11, $0b, $01, $01, $07, $0e
2030c     14 0B 00 FA 
20310     F7 FD 08 0B 
20314     FB EE FD 1D 
20318     21 07 FD 04 | 	byte	$14, $0b, $00, $fa, $f7, $fd, $08, $0b, $fb, $ee, $fd, $1d, $21, $07, $fd, $04
2031c     07 08 04 E7 
20320     E9 FB EE EE 
20324     FA ED EE F7 
20328     F6 EE F2 01 | 	byte	$07, $08, $04, $e7, $e9, $fb, $ee, $ee, $fa, $ed, $ee, $f7, $f6, $ee, $f2, $01
2032c     01 FB 0E 04 
20330     EA EA F6 F2 
20334     E2 E9 F6 EA 
20338     DC DF EE F0 | 	byte	$01, $fb, $0e, $04, $ea, $ea, $f6, $f2, $e2, $e9, $f6, $ea, $dc, $df, $ee, $f0
2033c     F6 F2 DD DD 
20340     E2 EE F6 E7 
20344     DF E2 E9 D8 
20348     D6 F0 FA E9 | 	byte	$f6, $f2, $dd, $dd, $e2, $ee, $f6, $e7, $df, $e2, $e9, $d8, $d6, $f0, $fa, $e9
2034c     E7 DD D5 E3 
20350     F6 F0 E2 ED 
20354     EE E3 EE ED 
20358     E5 EA E3 F2 | 	byte	$e7, $dd, $d5, $e3, $f6, $f0, $e2, $ed, $ee, $e3, $ee, $ed, $e5, $ea, $e3, $f2
2035c     01 F4 F0 FA 
20360     F4 EE 00 FD 
20364     EE F2 F4 F4 
20368     01 FD F4 F2 | 	byte	$01, $f4, $f0, $fa, $f4, $ee, $00, $fd, $ee, $f2, $f4, $f4, $01, $fd, $f4, $f2
2036c     EE F0 FD 00 
20370     01 00 F0 F4 
20374     01 F4 F0 FD 
20378     00 F4 F0 F7 | 	byte	$ee, $f0, $fd, $00, $01, $00, $f0, $f4, $01, $f4, $f0, $fd, $00, $f4, $f0, $f7
2037c     01 00 FB F4 
20380     DC DF F0 F7 
20384     00 00 FB F2 
20388     FB 00 F4 FA | 	byte	$01, $00, $fb, $f4, $dc, $df, $f0, $f7, $00, $00, $fb, $f2, $fb, $00, $f4, $fa
2038c     00 FA 03 00 
20390     FD 03 01 00 
20394     F0 EE 04 07 
20398     07 11 14 07 | 	byte	$00, $fa, $03, $00, $fd, $03, $01, $00, $f0, $ee, $04, $07, $07, $11, $14, $07
2039c     FD 08 10 00 
203a0     F4 0E 22 08 
203a4     00 10 14 15 
203a8     0B 04 15 24 | 	byte	$fd, $08, $10, $00, $f4, $0e, $22, $08, $00, $10, $14, $15, $0b, $04, $15, $24
203ac     14 00 04 11 
203b0     10 08 0B 04 
203b4     00 04 10 01 
203b8     03 0A 00 FD | 	byte	$14, $00, $04, $11, $10, $08, $0b, $04, $00, $04, $10, $01, $03, $0a, $00, $fd
203bc     07 11 10 04 
203c0     04 01 FA 00 
203c4     03 FD 04 01 
203c8     FB 0A 08 00 | 	byte	$07, $11, $10, $04, $04, $01, $fa, $00, $03, $fd, $04, $01, $fb, $0a, $08, $00
203cc     F7 F0 F2 F2 
203d0     FA 00 F6 F0 
203d4     F7 07 0B F6 
203d8     EE F0 F4 F6 | 	byte	$f7, $f0, $f2, $f2, $fa, $00, $f6, $f0, $f7, $07, $0b, $f6, $ee, $f0, $f4, $f6
203dc     F7 F0 DD F0 
203e0     FB E5 F7 F7 
203e4     EA EA E7 EA 
203e8     F6 ED DD E2 | 	byte	$f7, $f0, $dd, $f0, $fb, $e5, $f7, $f7, $ea, $ea, $e7, $ea, $f6, $ed, $dd, $e2
203ec     E2 E9 FA F0 
203f0     E3 E3 ED ED 
203f4     DF ED F4 E7 
203f8     DC E3 F6 F2 | 	byte	$e2, $e9, $fa, $f0, $e3, $e3, $ed, $ed, $df, $ed, $f4, $e7, $dc, $e3, $f6, $f2
203fc     E2 F4 FD E3 
20400     D5 DF EE ED 
20404     F2 EE E5 E2 
20408     DA E5 F6 F6 | 	byte	$e2, $f4, $fd, $e3, $d5, $df, $ee, $ed, $f2, $ee, $e5, $e2, $da, $e5, $f6, $f6
2040c     E3 E9 EA EA 
20410     FA F2 FD FD 
20414     FD F7 F4 F2 
20418     F2 F2 F4 F4 | 	byte	$e3, $e9, $ea, $ea, $fa, $f2, $fd, $fd, $fd, $f7, $f4, $f2, $f2, $f2, $f4, $f4
2041c     F6 F7 FA FD 
20420     01 00 FD F7 
20424     F2 FA 00 00 
20428     00 00 00 00 | 	byte	$f6, $f7, $fa, $fd, $01, $00, $fd, $f7, $f2, $fa, $00, $00, $00, $00, $00, $00
2042c     00 01 03 01 
20430     00 01 01 00 
20434     00 00 00 03 
20438     07 04 04 03 | 	byte	$00, $01, $03, $01, $00, $01, $01, $00, $00, $00, $00, $03, $07, $04, $04, $03
2043c     01 00 FB FB 
20440     FA 00 04 07 
20444     07 07 07 07 
20448     08 04 01 00 | 	byte	$01, $00, $fb, $fb, $fa, $00, $04, $07, $07, $07, $07, $07, $08, $04, $01, $00
2044c     FD 00 00 01 
20450     03 04 08 07 
20454     07 04 03 01 
20458     01 01 00 00 | 	byte	$fd, $00, $00, $01, $03, $04, $08, $07, $07, $04, $03, $01, $01, $01, $00, $00
2045c     00 00 0B D4 
20460     C7 18 29 27 
20464     1A 14 03 02 
20468     F7 F9 FE FE | 	byte	$00, $00, $0b, $d4, $c7, $18, $29, $27, $1a, $14, $03, $02, $f7, $f9, $fe, $fe
2046c     0A 03 07 01 
20470     00 0F 11 03 
20474     E5 D4 F4 0D 
20478     18 1A 22 2D | 	byte	$0a, $03, $07, $01, $00, $0f, $11, $03, $e5, $d4, $f4, $0d, $18, $1a, $22, $2d
2047c     1E 05 EB CD 
20480     C8 1D 23 24 
20484     FE E4 C9 C4 
20488     F2 18 10 08 | 	byte	$1e, $05, $eb, $cd, $c8, $1d, $23, $24, $fe, $e4, $c9, $c4, $f2, $18, $10, $08
2048c     0A 08 01 FE 
20490     FA F5 F5 EA 
20494     C7 83 91 EA 
20498     36 4F 4A 3B | 	byte	$0a, $08, $01, $fe, $fa, $f5, $f5, $ea, $c7, $83, $91, $ea, $36, $4f, $4a, $3b
2049c     38 1E F7 C4 
204a0     BF 22 27 2B 
204a4     24 1E 0A 05 
204a8     FE FE F7 FC | 	byte	$38, $1e, $f7, $c4, $bf, $22, $27, $2b, $24, $1e, $0a, $05, $fe, $fe, $f7, $fc
204ac     06 00 03 05 
204b0     05 03 05 11 
204b4     14 F0 E4 F5 
204b8     FE 1B 20 27 | 	byte	$06, $00, $03, $05, $05, $03, $05, $11, $14, $f0, $e4, $f5, $fe, $1b, $20, $27
204bc     1F 0A FE D6 
204c0     A6 10 2B 25 
204c4     10 F9 DA B4 
204c8     A8 E9 1E 1F | 	byte	$1f, $0a, $fe, $d6, $a6, $10, $2b, $25, $10, $f9, $da, $b4, $a8, $e9, $1e, $1f
204cc     06 FD FE F4 
204d0     FC F2 DF B6 
204d4     A2 C7 DC 12 
204d8     29 38 36 27 | 	byte	$06, $fd, $fe, $f4, $fc, $f2, $df, $b6, $a2, $c7, $dc, $12, $29, $38, $36, $27
204dc     20 0A FE EB 
204e0     B2 E7 2E 2C 
204e4     30 20 20 16 
204e8     F9 F4 F9 0D | 	byte	$20, $0a, $fe, $eb, $b2, $e7, $2e, $2c, $30, $20, $20, $16, $f9, $f4, $f9, $0d
204ec     06 0C 0D 03 
204f0     06 0D 12 0B 
204f4     07 FD E4 00 
204f8     11 1F 32 2E | 	byte	$06, $0c, $0d, $03, $06, $0d, $12, $0b, $07, $fd, $e4, $00, $11, $1f, $32, $2e
204fc     24 16 FC D1 
20500     A1 DB 12 08 
20504     0C 10 FE DA 
20508     AC C4 F0 06 | 	byte	$24, $16, $fc, $d1, $a1, $db, $12, $08, $0c, $10, $fe, $da, $ac, $c4, $f0, $06
2050c     F7 DF E5 F3 
20510     00 01 DD A3 
20514     DB 05 F7 15 
20518     1E 35 35 36 | 	byte	$f7, $df, $e5, $f3, $00, $01, $dd, $a3, $db, $05, $f7, $15, $1e, $35, $35, $36
2051c     27 14 FA DF 
20520     A3 F9 27 27 
20524     12 2B 36 2B 
20528     0C 08 0B 03 | 	byte	$27, $14, $fa, $df, $a3, $f9, $27, $27, $12, $2b, $36, $2b, $0c, $08, $0b, $03
2052c     02 02 07 05 
20530     01 0D 22 1D 
20534     12 FA D6 ED 
20538     06 1A 28 23 | 	byte	$02, $02, $07, $05, $01, $0d, $22, $1d, $12, $fa, $d6, $ed, $06, $1a, $28, $23
2053c     23 19 F9 D8 
20540     91 C5 08 03 
20544     F7 FD 0D E9 
20548     C1 99 B0 F2 | 	byte	$23, $19, $f9, $d8, $91, $c5, $08, $03, $f7, $fd, $0d, $e9, $c1, $99, $b0, $f2
2054c     14 24 15 07 
20550     EF BE 93 08 
20554     2E 32 10 08 
20558     0D 1A 31 27 | 	byte	$14, $24, $15, $07, $ef, $be, $93, $08, $2e, $32, $10, $08, $0d, $1a, $31, $27
2055c     0D 05 08 E6 
20560     B7 D7 30 24 
20564     24 2B 40 36 
20568     24 03 F4 F7 | 	byte	$0d, $05, $08, $e6, $b7, $d7, $30, $24, $24, $2b, $40, $36, $24, $03, $f4, $f7
2056c     F7 0B 0F 0A 
20570     08 12 18 22 
20574     1F 0A D7 E4 
20578     03 10 24 22 | 	byte	$f7, $0b, $0f, $0a, $08, $12, $18, $22, $1f, $0a, $d7, $e4, $03, $10, $24, $22
2057c     14 FC E7 C3 
20580     91 C8 07 FD 
20584     F3 EE F4 DB 
20588     C7 C7 ED 1D | 	byte	$14, $fc, $e7, $c3, $91, $c8, $07, $fd, $f3, $ee, $f4, $db, $c7, $c7, $ed, $1d
2058c     1E 27 1A F4 
20590     CD 90 98 15 
20594     43 2D 03 1A 
20598     15 22 29 2C | 	byte	$1e, $27, $1a, $f4, $cd, $90, $98, $15, $43, $2d, $03, $1a, $15, $22, $29, $2c
2059c     28 15 F4 C8 
205a0     B9 22 28 1F 
205a4     0B 23 36 40 
205a8     2E 01 FE FE | 	byte	$28, $15, $f4, $c8, $b9, $22, $28, $1f, $0b, $23, $36, $40, $2e, $01, $fe, $fe
205ac     0D 14 18 10 
205b0     0D 12 14 0C 
205b4     F8 DA E7 01 
205b8     FE 03 18 10 | 	byte	$0d, $14, $18, $10, $0d, $12, $14, $0c, $f8, $da, $e7, $01, $fe, $03, $18, $10
205bc     12 F8 CC 9A 
205c0     D7 15 1F FC 
205c4     E7 DC E0 D4 
205c8     BF C1 E2 F4 | 	byte	$12, $f8, $cc, $9a, $d7, $15, $1f, $fc, $e7, $dc, $e0, $d4, $bf, $c1, $e2, $f4
205cc     10 1B 12 E0 
205d0     8A D1 2D 41 
205d4     25 00 10 15 
205d8     0B 07 16 15 | 	byte	$10, $1b, $12, $e0, $8a, $d1, $2d, $41, $25, $00, $10, $15, $0b, $07, $16, $15
205dc     23 0A DA AD 
205e0     08 24 2C 22 
205e4     23 27 43 49 
205e8     27 F7 F2 ED | 	byte	$23, $0a, $da, $ad, $08, $24, $2c, $22, $23, $27, $43, $49, $27, $f7, $f2, $ed
205ec     F4 05 22 1D 
205f0     10 08 10 0D 
205f4     E5 C7 EE 00 
205f8     05 10 1E 18 | 	byte	$f4, $05, $22, $1d, $10, $08, $10, $0d, $e5, $c7, $ee, $00, $05, $10, $1e, $18
205fc     0B E4 AB 99 
20600     F9 12 12 01 
20604     FC E4 D6 BB 
20608     A3 B6 EB 01 | 	byte	$0b, $e4, $ab, $99, $f9, $12, $12, $01, $fc, $e4, $d6, $bb, $a3, $b6, $eb, $01
2060c     01 E6 9E E4 
20610     41 4A 4D 40 
20614     06 E9 FE FA 
20618     FA 06 1B 22 | 	byte	$01, $e6, $9e, $e4, $41, $4a, $4d, $40, $06, $e9, $fe, $fa, $fa, $06, $1b, $22
2061c     1D F3 A6 D3 
20620     22 24 1D 2C 
20624     44 40 40 3E 
20628     12 F7 FA F7 | 	byte	$1d, $f3, $a6, $d3, $22, $24, $1d, $2c, $44, $40, $40, $3e, $12, $f7, $fa, $f7
2062c     F9 0C 10 18 
20630     12 08 12 FE 
20634     C9 F0 12 0C 
20638     05 0D 0F FD | 	byte	$f9, $0c, $10, $18, $12, $08, $12, $fe, $c9, $f0, $12, $0c, $05, $0d, $0f, $fd
2063c     DC 9F A2 05 
20640     22 1A F8 F8 
20644     E9 C0 A9 9E 
20648     C9 DB FC FE | 	byte	$dc, $9f, $a2, $05, $22, $1a, $f8, $f8, $e9, $c0, $a9, $9e, $c9, $db, $fc, $fe
2064c     DA B6 FA 56 
20650     5E 45 36 FC 
20654     D8 FD 12 08 
20658     06 18 1E 1B | 	byte	$da, $b6, $fa, $56, $5e, $45, $36, $fc, $d8, $fd, $12, $08, $06, $18, $1e, $1b
2065c     E7 A9 01 28 
20660     22 08 18 2C 
20664     3B 37 36 1A 
20668     F9 F7 FE FC | 	byte	$e7, $a9, $01, $28, $22, $08, $18, $2c, $3b, $37, $36, $1a, $f9, $f7, $fe, $fc
2066c     FA 10 1A 23 
20670     1F 14 05 DD 
20674     D6 FD 07 FD 
20678     03 01 F4 DB | 	byte	$fa, $10, $1a, $23, $1f, $14, $05, $dd, $d6, $fd, $07, $fd, $03, $01, $f4, $db
2067c     A6 A2 12 2B 
20680     20 F9 F3 E5 
20684     B0 90 D1 ED 
20688     F2 FC E5 A6 | 	byte	$a6, $a2, $12, $2b, $20, $f9, $f3, $e5, $b0, $90, $d1, $ed, $f2, $fc, $e5, $a6
2068c     9A 1A 61 5E 
20690     4E 41 23 E5 
20694     EA 02 0D 0D 
20698     22 2E 22 F4 | 	byte	$9a, $1a, $61, $5e, $4e, $41, $23, $e5, $ea, $02, $0d, $0d, $22, $2e, $22, $f4
2069c     A1 F0 22 1E 
206a0     0F 10 23 33 
206a4     2E 32 1A 0B 
206a8     03 FC 01 0D | 	byte	$a1, $f0, $22, $1e, $0f, $10, $23, $33, $2e, $32, $1a, $0b, $03, $fc, $01, $0d
206ac     0D 1E 22 1A 
206b0     10 08 E6 C4 
206b4     DB 00 06 06 
206b8     06 F7 E2 A6 | 	byte	$0d, $1e, $22, $1a, $10, $08, $e6, $c4, $db, $00, $06, $06, $06, $f7, $e2, $a6
206bc     A6 1B 33 22 
206c0     03 F7 E2 B5 
206c4     94 CF CC E9 
206c8     FE E0 A6 A1 | 	byte	$a6, $1b, $33, $22, $03, $f7, $e2, $b5, $94, $cf, $cc, $e9, $fe, $e0, $a6, $a1
206cc     06 58 61 58 
206d0     44 2E EF EB 
206d4     01 0F 0B 18 
206d8     24 15 D8 A3 | 	byte	$06, $58, $61, $58, $44, $2e, $ef, $eb, $01, $0f, $0b, $18, $24, $15, $d8, $a3
206dc     14 20 23 0C 
206e0     16 1A 1A 1F 
206e4     2B 2B 03 06 
206e8     15 15 0D 03 | 	byte	$14, $20, $23, $0c, $16, $1a, $1a, $1f, $2b, $2b, $03, $06, $15, $15, $0d, $03
206ec     1A 19 15 12 
206f0     12 F4 C7 D6 
206f4     FD 0D FE FD 
206f8     F2 D2 95 C9 | 	byte	$1a, $19, $15, $12, $12, $f4, $c7, $d6, $fd, $0d, $fe, $fd, $f2, $d2, $95, $c9
206fc     24 30 22 08 
20700     03 F2 CE A3 
20704     93 A1 B0 A2 
20708     94 E2 24 52 | 	byte	$24, $30, $22, $08, $03, $f2, $ce, $a3, $93, $a1, $b0, $a2, $94, $e2, $24, $52
2070c     73 6C 54 43 
20710     33 F4 C7 D8 
20714     03 12 16 19 
20718     08 CA A4 12 | 	byte	$73, $6c, $54, $43, $33, $f4, $c7, $d8, $03, $12, $16, $19, $08, $ca, $a4, $12
2071c     2E 32 12 1D 
20720     27 29 27 22 
20724     1B 03 06 06 
20728     10 10 00 12 | 	byte	$2e, $32, $12, $1d, $27, $29, $27, $22, $1b, $03, $06, $06, $10, $10, $00, $12
2072c     29 2B 12 1F 
20730     01 CC CC E0 
20734     00 08 F7 E9 
20738     D1 89 CD 24 | 	byte	$29, $2b, $12, $1f, $01, $cc, $cc, $e0, $00, $08, $f7, $e9, $d1, $89, $cd, $24
2073c     3E 1E 08 FE 
20740     ED D3 AC 93 
20744     90 93 85 DA 
20748     2E 4D 58 6F | 	byte	$3e, $1e, $08, $fe, $ed, $d3, $ac, $93, $90, $93, $85, $da, $2e, $4d, $58, $6f
2074c     60 41 30 25 
20750     F2 CE DB 0B 
20754     15 1E 0D FA 
20758     C3 B5 16 2E | 	byte	$60, $41, $30, $25, $f2, $ce, $db, $0b, $15, $1e, $0d, $fa, $c3, $b5, $16, $2e
2075c     30 1B 1F 1B 
20760     27 27 10 0D 
20764     FE 0C 0B 1A 
20768     15 06 0C 28 | 	byte	$30, $1b, $1f, $1b, $27, $27, $10, $0d, $fe, $0c, $0b, $1a, $15, $06, $0c, $28
2076c     28 19 19 00 
20770     D8 D2 E6 03 
20774     FC EE CD B6 
20778     8F F2 24 36 | 	byte	$28, $19, $19, $00, $d8, $d2, $e6, $03, $fc, $ee, $cd, $b6, $8f, $f2, $24, $36
2077c     23 05 F7 ED 
20780     D1 B0 85 82 
20784     80 A2 06 4A 
20788     57 5C 62 56 | 	byte	$23, $05, $f7, $ed, $d1, $b0, $85, $82, $80, $a2, $06, $4a, $57, $5c, $62, $56
2078c     38 2C 1B F2 
20790     E0 EA 0A 1A 
20794     15 0A F4 B7 
20798     C7 1D 33 38 | 	byte	$38, $2c, $1b, $f2, $e0, $ea, $0a, $1a, $15, $0a, $f4, $b7, $c7, $1d, $33, $38
2079c     25 0C 0F 1E 
207a0     19 02 06 01 
207a4     10 14 1F 1D 
207a8     08 12 1D 1F | 	byte	$25, $0c, $0f, $1e, $19, $02, $06, $01, $10, $14, $1f, $1d, $08, $12, $1d, $1f
207ac     22 22 02 D1 
207b0     CF E1 FD 0C 
207b4     F0 DA BA 8A 
207b8     DD 1F 3B 27 | 	byte	$22, $22, $02, $d1, $cf, $e1, $fd, $0c, $f0, $da, $ba, $8a, $dd, $1f, $3b, $27
207bc     07 FC ED DF 
207c0     AF 80 8C 80 
207c4     B0 0C 45 46 
207c8     4D 4D 45 40 | 	byte	$07, $fc, $ed, $df, $af, $80, $8c, $80, $b0, $0c, $45, $46, $4d, $4d, $45, $40
207cc     37 2C 03 E5 
207d0     F0 00 1E 0D 
207d4     03 FD CA B1 
207d8     1A 33 48 27 | 	byte	$37, $2c, $03, $e5, $f0, $00, $1e, $0d, $03, $fd, $ca, $b1, $1a, $33, $48, $27
207dc     0A 0A 14 18 
207e0     06 03 01 10 
207e4     23 28 1D 08 
207e8     0D 15 1D 1D | 	byte	$0a, $0a, $14, $18, $06, $03, $01, $10, $23, $28, $1d, $08, $0d, $15, $1d, $1d
207ec     27 0F D3 C1 
207f0     DB FE 0B EA 
207f4     DA CD 98 C3 
207f8     1A 35 30 0D | 	byte	$27, $0f, $d3, $c1, $db, $fe, $0b, $ea, $da, $cd, $98, $c3, $1a, $35, $30, $0d
207fc     F7 F0 E7 BA 
20800     80 80 8E E1 
20804     32 53 48 40 
20808     36 32 2D 27 | 	byte	$f7, $f0, $e7, $ba, $80, $80, $8e, $e1, $32, $53, $48, $40, $36, $32, $2d, $27
2080c     22 1B ED EF 
20810     03 1F 02 EE 
20814     F0 D2 AC 0C 
20818     35 46 1F 0B | 	byte	$22, $1b, $ed, $ef, $03, $1f, $02, $ee, $f0, $d2, $ac, $0c, $35, $46, $1f, $0b
2081c     0B 14 18 12 
20820     06 03 10 15 
20824     23 1D 08 0A 
20828     1B 19 18 15 | 	byte	$0b, $14, $18, $12, $06, $03, $10, $15, $23, $1d, $08, $0a, $1b, $19, $18, $15
2082c     0D E4 CE D8 
20830     F9 12 EF DB 
20834     CF 98 AF 11 
20838     2C 2B 0C FC | 	byte	$0d, $e4, $ce, $d8, $f9, $12, $ef, $db, $cf, $98, $af, $11, $2c, $2b, $0c, $fc
2083c     E5 CD 91 80 
20840     80 D1 11 32 
20844     53 46 2D 28 
20848     29 1E 1E 27 | 	byte	$e5, $cd, $91, $80, $80, $d1, $11, $32, $53, $46, $2d, $28, $29, $1e, $1e, $27
2084c     22 F8 F2 FC 
20850     1D 15 F9 EF 
20854     E2 AC F7 3E 
20858     46 2B 0C 06 | 	byte	$22, $f8, $f2, $fc, $1d, $15, $f9, $ef, $e2, $ac, $f7, $3e, $46, $2b, $0c, $06
2085c     11 1E 1D 0A 
20860     0B 08 08 12 
20864     1A 0F 0D 15 
20868     24 1A 15 0D | 	byte	$11, $1e, $1d, $0a, $0b, $08, $08, $12, $1a, $0f, $0d, $15, $24, $1a, $15, $0d
2086c     EE C8 CC EF 
20870     10 FC E5 D8 
20874     B5 8E F7 23 
20878     28 0B F4 E4 | 	byte	$ee, $c8, $cc, $ef, $10, $fc, $e5, $d8, $b5, $8e, $f7, $23, $28, $0b, $f4, $e4
2087c     B7 80 9D A1 
20880     D1 16 2D 43 
20884     40 23 22 24 
20888     22 2E 30 28 | 	byte	$b7, $80, $9d, $a1, $d1, $16, $2d, $43, $40, $23, $22, $24, $22, $2e, $30, $28
2088c     07 EA ED 12 
20890     16 01 FC 01 
20894     C9 CD 38 45 
20898     2E FE 03 15 | 	byte	$07, $ea, $ed, $12, $16, $01, $fc, $01, $c9, $cd, $38, $45, $2e, $fe, $03, $15
2089c     25 14 06 08 
208a0     0D 08 12 1F 
208a4     0B 0F 1F 24 
208a8     12 10 0D ED | 	byte	$25, $14, $06, $08, $0d, $08, $12, $1f, $0b, $0f, $1f, $24, $12, $10, $0d, $ed
208ac     C8 CD E6 16 
208b0     01 EA E5 C9 
208b4     8F D4 1A 24 
208b8     FE ED D8 9E | 	byte	$c8, $cd, $e6, $16, $01, $ea, $e5, $c9, $8f, $d4, $1a, $24, $fe, $ed, $d8, $9e
208bc     91 A9 B2 F8 
208c0     1E 27 3E 31 
208c4     18 19 22 1E 
208c8     29 33 24 06 | 	byte	$91, $a9, $b2, $f8, $1e, $27, $3e, $31, $18, $19, $22, $1e, $29, $33, $24, $06
208cc     F3 E7 0D 15 
208d0     02 05 1E ED 
208d4     B5 2B 45 29 
208d8     F9 FE 15 27 | 	byte	$f3, $e7, $0d, $15, $02, $05, $1e, $ed, $b5, $2b, $45, $29, $f9, $fe, $15, $27
208dc     25 0A 14 08 
208e0     FA 0F 23 12 
208e4     08 1B 22 12 
208e8     08 0B EA C9 | 	byte	$25, $0a, $14, $08, $fa, $0f, $23, $12, $08, $1b, $22, $12, $08, $0b, $ea, $c9
208ec     C7 E1 0D 0A 
208f0     EE ED E0 A3 
208f4     9F 19 30 00 
208f8     D1 A6 87 C4 | 	byte	$c7, $e1, $0d, $0a, $ee, $ed, $e0, $a3, $9f, $19, $30, $00, $d1, $a6, $87, $c4
208fc     E2 DC E2 0C 
20900     16 29 30 16 
20904     0F 19 24 31 
20908     36 2E 0B E7 | 	byte	$e2, $dc, $e2, $0c, $16, $29, $30, $16, $0f, $19, $24, $31, $36, $2e, $0b, $e7
2090c     ED 0A 1D 0B 
20910     06 1F 10 C1 
20914     E1 44 3A 05 
20918     F7 0B 27 36 | 	byte	$ed, $0a, $1d, $0b, $06, $1f, $10, $c1, $e1, $44, $3a, $05, $f7, $0b, $27, $36
2091c     18 0F 08 F7 
20920     0B 22 15 06 
20924     11 27 18 0A 
20928     06 F7 CE C1 | 	byte	$18, $0f, $08, $f7, $0b, $22, $15, $06, $11, $27, $18, $0a, $06, $f7, $ce, $c1
2092c     D1 FA 10 FC 
20930     F4 EF C4 82 
20934     DF 2D 02 A7 
20938     80 C3 0F 1D | 	byte	$d1, $fa, $10, $fc, $f4, $ef, $c4, $82, $df, $2d, $02, $a7, $80, $c3, $0f, $1d
2093c     FE E1 FC 03 
20940     1A 29 0C FA 
20944     15 28 31 28 
20948     25 11 EA E5 | 	byte	$fe, $e1, $fc, $03, $1a, $29, $0c, $fa, $15, $28, $31, $28, $25, $11, $ea, $e5
2094c     FC 1E 1A 12 
20950     22 1F EF B5 
20954     2E 3A 10 F2 
20958     05 23 30 25 | 	byte	$fc, $1e, $1a, $12, $22, $1f, $ef, $b5, $2e, $3a, $10, $f2, $05, $23, $30, $25
2095c     18 11 01 0A 
20960     1F 15 FC 01 
20964     16 15 0D 06 
20968     FD D7 C3 D1 | 	byte	$18, $11, $01, $0a, $1f, $15, $fc, $01, $16, $15, $0d, $06, $fd, $d7, $c3, $d1
2096c     EF 0A 01 F4 
20970     F2 D8 8F 9E 
20974     10 C5 8E D4 
20978     06 36 36 12 | 	byte	$ef, $0a, $01, $f4, $f2, $d8, $8f, $9e, $10, $c5, $8e, $d4, $06, $36, $36, $12
2097c     DF C5 E9 02 
20980     15 18 08 15 
20984     31 37 2E 25 
20988     16 F9 E0 E7 | 	byte	$df, $c5, $e9, $02, $15, $18, $08, $15, $31, $37, $2e, $25, $16, $f9, $e0, $e7
2098c     0C 1E 20 23 
20990     29 11 B6 F2 
20994     40 1E FE FE 
20998     1D 31 24 15 | 	byte	$0c, $1e, $20, $23, $29, $11, $b6, $f2, $40, $1e, $fe, $fe, $1d, $31, $24, $15
2099c     14 0A 0B 15 
209a0     0D 01 F9 0B 
209a4     18 0F FC FE 
209a8     E7 D1 C7 E0 | 	byte	$14, $0a, $0b, $15, $0d, $01, $f9, $0b, $18, $0f, $fc, $fe, $e7, $d1, $c7, $e0
209ac     FD 01 F8 F2 
209b0     E0 B2 80 BF 
209b4     A3 C0 E7 1A 
209b8     40 3E 10 D6 | 	byte	$fd, $01, $f8, $f2, $e0, $b2, $80, $bf, $a3, $c0, $e7, $1a, $40, $3e, $10, $d6
209bc     C0 E6 F5 11 
209c0     23 18 10 24 
209c4     2C 30 22 19 
209c8     08 EA E2 FE | 	byte	$c0, $e6, $f5, $11, $23, $18, $10, $24, $2c, $30, $22, $19, $08, $ea, $e2, $fe
209cc     1B 20 28 3C 
209d0     2E DB B2 27 
209d4     29 0F FC 15 
209d8     29 27 1D 22 | 	byte	$1b, $20, $28, $3c, $2e, $db, $b2, $27, $29, $0f, $fc, $15, $29, $27, $1d, $22
209dc     18 0B 0C 08 
209e0     01 F9 02 0C 
209e4     0A 00 0B F9 
209e8     E2 CC CE E5 | 	byte	$18, $0b, $0c, $08, $01, $f9, $02, $0c, $0a, $00, $0b, $f9, $e2, $cc, $ce, $e5
209ec     F2 F8 F4 F4 
209f0     D6 87 80 A4 
209f4     F0 0A 14 35 
209f8     3E 18 ED C4 | 	byte	$f2, $f8, $f4, $f4, $d6, $87, $80, $a4, $f0, $0a, $14, $35, $3e, $18, $ed, $c4
209fc     D8 F0 0D 22 
20a00     22 10 16 20 
20a04     28 20 20 19 
20a08     08 E7 F7 0B | 	byte	$d8, $f0, $0d, $22, $22, $10, $16, $20, $28, $20, $20, $19, $08, $e7, $f7, $0b
20a0c     15 25 36 38 
20a10     0B B5 EB 31 
20a14     24 02 01 15 
20a18     24 24 24 1F | 	byte	$15, $25, $36, $38, $0b, $b5, $eb, $31, $24, $02, $01, $15, $24, $24, $24, $1f
20a1c     0B 05 03 01 
20a20     FC F7 0C 05 
20a24     05 06 05 EA 
20a28     D8 C8 CF EF | 	byte	$0b, $05, $03, $01, $fc, $f7, $0c, $05, $05, $06, $05, $ea, $d8, $c8, $cf, $ef
20a2c     F7 F3 F2 D1 
20a30     8C 80 C7 18 
20a34     2B 20 25 25 
20a38     10 E6 C5 D8 | 	byte	$f7, $f3, $f2, $d1, $8c, $80, $c7, $18, $2b, $20, $25, $25, $10, $e6, $c5, $d8
20a3c     ED 0A 1D 27 
20a40     0B 01 16 28 
20a44     1F 19 1A 14 
20a48     FC E7 F7 18 | 	byte	$ed, $0a, $1d, $27, $0b, $01, $16, $28, $1f, $19, $1a, $14, $fc, $e7, $f7, $18
20a4c     27 2D 36 1A 
20a50     D3 C4 29 27 
20a54     10 00 0D 25 
20a58     2D 27 25 0D | 	byte	$27, $2d, $36, $1a, $d3, $c4, $29, $27, $10, $00, $0d, $25, $2d, $27, $25, $0d
20a5c     F8 F5 F9 00 
20a60     F4 FC 06 10 
20a64     06 0A F4 E6 
20a68     CC C0 D7 F3 | 	byte	$f8, $f5, $f9, $00, $f4, $fc, $06, $10, $06, $0a, $f4, $e6, $cc, $c0, $d7, $f3
20a6c     EE D4 B2 80 
20a70     80 CC 45 4A 
20a74     2D 1A 15 06 
20a78     F2 D6 C5 F2 | 	byte	$ee, $d4, $b2, $80, $80, $cc, $45, $4a, $2d, $1a, $15, $06, $f2, $d6, $c5, $f2
20a7c     08 1E 2C 10 
20a80     F4 0B 29 31 
20a84     22 25 22 11 
20a88     EE E5 05 1A | 	byte	$08, $1e, $2c, $10, $f4, $0b, $29, $31, $22, $25, $22, $11, $ee, $e5, $05, $1a
20a8c     2E 3A 2C F4 
20a90     B7 06 27 18 
20a94     06 0F 1D 2E 
20a98     1D 1D 10 00 | 	byte	$2e, $3a, $2c, $f4, $b7, $06, $27, $18, $06, $0f, $1d, $2e, $1d, $1d, $10, $00
20a9c     F4 FA F9 F4 
20aa0     F2 FC 10 10 
20aa4     08 00 F4 DB 
20aa8     BA BA E9 E1 | 	byte	$f4, $fa, $f9, $f4, $f2, $fc, $10, $10, $08, $00, $f4, $db, $ba, $ba, $e9, $e1
20aac     C8 93 9D A9 
20ab0     BA 36 4D 38 
20ab4     0D 07 FE F7 
20ab8     D6 CE F5 14 | 	byte	$c8, $93, $9d, $a9, $ba, $36, $4d, $38, $0d, $07, $fe, $f7, $d6, $ce, $f5, $14
20abc     1B 22 14 F9 
20ac0     FC 22 32 24 
20ac4     24 32 27 07 
20ac8     D8 E2 0B 24 | 	byte	$1b, $22, $14, $f9, $fc, $22, $32, $24, $24, $32, $27, $07, $d8, $e2, $0b, $24
20acc     30 30 19 D4 
20ad0     DA 20 27 18 
20ad4     0B 16 22 18 
20ad8     10 1A 0B FC | 	byte	$30, $30, $19, $d4, $da, $20, $27, $18, $0b, $16, $22, $18, $10, $1a, $0b, $fc
20adc     F9 F5 F2 E9 
20ae0     FA 0D 11 08 
20ae4     03 FA EF CE 
20ae8     AD C4 C9 AB | 	byte	$f9, $f5, $f2, $e9, $fa, $0d, $11, $08, $03, $fa, $ef, $ce, $ad, $c4, $c9, $ab
20aec     9D CC E2 CD 
20af0     06 3C 35 0F 
20af4     F8 F5 F8 F3 
20af8     E7 F7 15 12 | 	byte	$9d, $cc, $e2, $cd, $06, $3c, $35, $0f, $f8, $f5, $f8, $f3, $e7, $f7, $15, $12
20afc     0A 0B F4 E9 
20b00     19 36 35 2C 
20b04     36 37 1F EA 
20b08     D1 F9 18 29 | 	byte	$0a, $0b, $f4, $e9, $19, $36, $35, $2c, $36, $37, $1f, $ea, $d1, $f9, $18, $29
20b0c     36 2B F4 C1 
20b10     08 24 28 11 
20b14     14 16 18 03 
20b18     0B 12 06 FC | 	byte	$36, $2b, $f4, $c1, $08, $24, $28, $11, $14, $16, $18, $03, $0b, $12, $06, $fc
20b1c     F9 FA F4 EA 
20b20     06 10 10 F7 
20b24     F5 FA DC BB 
20b28     A1 AD A3 B2 | 	byte	$f9, $fa, $f4, $ea, $06, $10, $10, $f7, $f5, $fa, $dc, $bb, $a1, $ad, $a3, $b2
20b2c     E0 00 ED E1 
20b30     1E 2E 1A F9 
20b34     FA F9 FE E9 
20b38     F4 08 15 06 | 	byte	$e0, $00, $ed, $e1, $1e, $2e, $1a, $f9, $fa, $f9, $fe, $e9, $f4, $08, $15, $06
20b3c     FE 00 EA 03 
20b40     2E 40 33 2C 
20b44     38 31 0A DF 
20b48     D8 FD 1E 33 | 	byte	$fe, $00, $ea, $03, $2e, $40, $33, $2c, $38, $31, $0a, $df, $d8, $fd, $1e, $33
20b4c     33 14 D3 DD 
20b50     1F 2E 1A 0B 
20b54     0A 0C 0A 02 
20b58     15 0D 03 F7 | 	byte	$33, $14, $d3, $dd, $1f, $2e, $1a, $0b, $0a, $0c, $0a, $02, $15, $0d, $03, $f7
20b5c     F5 FA E7 F8 
20b60     0B 18 03 F7 
20b64     F5 EE C5 9A 
20b68     86 98 BF 06 | 	byte	$f5, $fa, $e7, $f8, $0b, $18, $03, $f7, $f5, $ee, $c5, $9a, $86, $98, $bf, $06
20b6c     22 14 D8 F7 
20b70     24 27 03 ED 
20b74     F2 FE 05 EB 
20b78     F5 08 0A 03 | 	byte	$22, $14, $d8, $f7, $24, $27, $03, $ed, $f2, $fe, $05, $eb, $f5, $08, $0a, $03
20b7c     03 F5 F4 1D 
20b80     43 45 33 3B 
20b84     30 1D F9 DC 
20b88     E2 07 20 36 | 	byte	$03, $f5, $f4, $1d, $43, $45, $33, $3b, $30, $1d, $f9, $dc, $e2, $07, $20, $36
20b8c     1F F5 CC 0C 
20b90     32 27 0B 01 
20b94     08 0A 01 02 
20b98     16 08 01 F2 | 	byte	$1f, $f5, $cc, $0c, $32, $27, $0b, $01, $08, $0a, $01, $02, $16, $08, $01, $f2
20b9c     F8 F0 E6 05 
20ba0     15 0B FC EA 
20ba4     E5 CA 99 81 
20ba8     89 E0 18 33 | 	byte	$f8, $f0, $e6, $05, $15, $0b, $fc, $ea, $e5, $ca, $99, $81, $89, $e0, $18, $33
20bac     1B EE D1 10 
20bb0     1F 0B F4 F2 
20bb4     0B 05 E7 DF 
20bb8     05 10 0F 02 | 	byte	$1b, $ee, $d1, $10, $1f, $0b, $f4, $f2, $0b, $05, $e7, $df, $05, $10, $0f, $02
20bbc     FA FC 14 40 
20bc0     4D 3E 2B 22 
20bc4     24 07 EB E2 
20bc8     F4 12 25 2B | 	byte	$fa, $fc, $14, $40, $4d, $3e, $2b, $22, $24, $07, $eb, $e2, $f4, $12, $25, $2b
20bcc     16 DD EE 27 
20bd0     27 18 06 01 
20bd4     03 02 F7 01 
20bd8     0D 10 FD F0 | 	byte	$16, $dd, $ee, $27, $27, $18, $06, $01, $03, $02, $f7, $01, $0d, $10, $fd, $f0
20bdc     F0 E6 F3 0C 
20be0     12 03 EA D3 
20be4     C1 98 87 A8 
20be8     E7 1F 36 2C | 	byte	$f0, $e6, $f3, $0c, $12, $03, $ea, $d3, $c1, $98, $87, $a8, $e7, $1f, $36, $2c
20bec     EE BC EA 19 
20bf0     14 05 FE 08 
20bf4     08 F0 D4 E1 
20bf8     0B 12 10 01 | 	byte	$ee, $bc, $ea, $19, $14, $05, $fe, $08, $08, $f0, $d4, $e1, $0b, $12, $10, $01
20bfc     FA 16 32 4B 
20c00     46 33 19 18 
20c04     12 F8 EA F4 
20c08     FE 18 36 2E | 	byte	$fa, $16, $32, $4b, $46, $33, $19, $18, $12, $f8, $ea, $f4, $fe, $18, $36, $2e
20c0c     F9 D4 08 27 
20c10     1E 0C 00 03 
20c14     FE F3 EF 01 
20c18     10 0D 08 F2 | 	byte	$f9, $d4, $08, $27, $1e, $0c, $00, $03, $fe, $f3, $ef, $01, $10, $0d, $08, $f2
20c1c     EA E6 FE 10 
20c20     0B EF CC B6 
20c24     A3 98 A8 F7 
20c28     12 2C 2C 06 | 	byte	$ea, $e6, $fe, $10, $0b, $ef, $cc, $b6, $a3, $98, $a8, $f7, $12, $2c, $2c, $06
20c2c     CE C0 01 1B 
20c30     1B 0D 07 03 
20c34     F7 D7 CA EE 
20c38     12 12 0D 06 | 	byte	$ce, $c0, $01, $1b, $1b, $0d, $07, $03, $f7, $d7, $ca, $ee, $12, $12, $0d, $06
20c3c     15 2D 43 48 
20c40     36 1D 14 11 
20c44     0D F9 F5 05 
20c48     08 24 33 12 | 	byte	$15, $2d, $43, $48, $36, $1d, $14, $11, $0d, $f9, $f5, $05, $08, $24, $33, $12
20c4c     DD E1 12 29 
20c50     18 06 07 02 
20c54     F0 E9 F2 FC 
20c58     12 15 01 ED | 	byte	$dd, $e1, $12, $29, $18, $06, $07, $02, $f0, $e9, $f2, $fc, $12, $15, $01, $ed
20c5c     E6 F3 05 0B 
20c60     ED C7 A8 A8 
20c64     A6 C0 06 19 
20c68     1A 1F 18 EA | 	byte	$e6, $f3, $05, $0b, $ed, $c7, $a8, $a8, $a6, $c0, $06, $19, $1a, $1f, $18, $ea
20c6c     BF D4 0D 27 
20c70     18 06 06 F7 
20c74     E1 C5 D2 F8 
20c78     1D 23 19 1F | 	byte	$bf, $d4, $0d, $27, $18, $06, $06, $f7, $e1, $c5, $d2, $f8, $1d, $23, $19, $1f
20c7c     29 32 3B 33 
20c80     1F 10 15 1A 
20c84     07 F7 01 0F 
20c88     1A 2B 20 F3 | 	byte	$29, $32, $3b, $33, $1f, $10, $15, $1a, $07, $f7, $01, $0f, $1a, $2b, $20, $f3
20c8c     D2 F8 24 24 
20c90     10 03 03 F7 
20c94     E4 E2 F2 01 
20c98     16 16 FD EA | 	byte	$d2, $f8, $24, $24, $10, $03, $03, $f7, $e4, $e2, $f2, $01, $16, $16, $fd, $ea
20c9c     EF FA F9 E2 
20ca0     C1 AB A6 B2 
20ca4     E9 10 22 1A 
20ca8     0F 1B FC CC | 	byte	$ef, $fa, $f9, $e2, $c1, $ab, $a6, $b2, $e9, $10, $22, $1a, $0f, $1b, $fc, $cc
20cac     BE EE 20 20 
20cb0     10 03 06 EA 
20cb4     CC CD E5 0B 
20cb8     24 2E 2C 27 | 	byte	$be, $ee, $20, $20, $10, $03, $06, $ea, $cc, $cd, $e5, $0b, $24, $2e, $2c, $27
20cbc     2D 32 2C 1D 
20cc0     15 12 16 0C 
20cc4     02 02 0F 19 
20cc8     20 27 0C D7 | 	byte	$2d, $32, $2c, $1d, $15, $12, $16, $0c, $02, $02, $0f, $19, $20, $27, $0c, $d7
20ccc     D4 0A 22 1D 
20cd0     0B 03 FE E2 
20cd4     E5 EB F9 08 
20cd8     1A 10 FD EE | 	byte	$d4, $0a, $22, $1d, $0b, $03, $fe, $e2, $e5, $eb, $f9, $08, $1a, $10, $fd, $ee
20cdc     EA E7 DA C3 
20ce0     B5 A7 CD 03 
20ce4     1D 20 15 08 
20ce8     08 FC DF C0 | 	byte	$ea, $e7, $da, $c3, $b5, $a7, $cd, $03, $1d, $20, $15, $08, $08, $fc, $df, $c0
20cec     CA 07 27 1A 
20cf0     03 08 F4 D6 
20cf4     CC D4 F5 1B 
20cf8     38 38 2E 27 | 	byte	$ca, $07, $27, $1a, $03, $08, $f4, $d6, $cc, $d4, $f5, $1b, $38, $38, $2e, $27
20cfc     27 25 1D 19 
20d00     16 11 0B 08 
20d04     0D 11 1A 12 
20d08     1F 15 F4 D3 | 	byte	$27, $25, $1d, $19, $16, $11, $0b, $08, $0d, $11, $1a, $12, $1f, $15, $f4, $d3
20d0c     EE 1A 27 08 
20d10     FD FC EA E4 
20d14     E9 F3 FE 0D 
20d18     1A 08 F7 E7 | 	byte	$ee, $1a, $27, $08, $fd, $fc, $ea, $e4, $e9, $f3, $fe, $0d, $1a, $08, $f7, $e7
20d1c     DD D2 C1 BA 
20d20     B4 D4 07 1A 
20d24     1D 16 12 03 
20d28     01 ED D3 BF | 	byte	$dd, $d2, $c1, $ba, $b4, $d4, $07, $1a, $1d, $16, $12, $03, $01, $ed, $d3, $bf
20d2c     E6 1D 22 11 
20d30     03 FD E1 CA 
20d34     CD EB 0F 30 
20d38     3E 38 27 22 | 	byte	$e6, $1d, $22, $11, $03, $fd, $e1, $ca, $cd, $eb, $0f, $30, $3e, $38, $27, $22
20d3c     24 20 1D 1B 
20d40     16 0B 01 10 
20d44     15 16 1A 1B 
20d48     1A 03 E2 D8 | 	byte	$24, $20, $1d, $1b, $16, $0b, $01, $10, $15, $16, $1a, $1b, $1a, $03, $e2, $d8
20d4c     03 1B 18 FE 
20d50     F9 F4 E9 E5 
20d54     E7 F8 02 14 
20d58     12 02 E1 D6 | 	byte	$03, $1b, $18, $fe, $f9, $f4, $e9, $e5, $e7, $f8, $02, $14, $12, $02, $e1, $d6
20d5c     CD C0 BC BE 
20d60     E7 0B 1A 1D 
20d64     1B 19 0F FD 
20d68     EF D3 C1 C7 | 	byte	$cd, $c0, $bc, $be, $e7, $0b, $1a, $1d, $1b, $19, $0f, $fd, $ef, $d3, $c1, $c7
20d6c     06 23 1A 08 
20d70     FC F2 D4 CF 
20d74     E6 06 15 37 
20d78     38 2C 22 1F | 	byte	$06, $23, $1a, $08, $fc, $f2, $d4, $cf, $e6, $06, $15, $37, $38, $2c, $22, $1f
20d7c     29 16 1A 1D 
20d80     15 08 03 10 
20d84     15 1B 22 1B 
20d88     07 F4 D2 E2 | 	byte	$29, $16, $1a, $1d, $15, $08, $03, $10, $15, $1b, $22, $1b, $07, $f4, $d2, $e2
20d8c     0D 19 06 F7 
20d90     F9 F2 E7 EF 
20d94     F0 F9 06 0F 
20d98     06 EB D2 C7 | 	byte	$0d, $19, $06, $f7, $f9, $f2, $e7, $ef, $f0, $f9, $06, $0f, $06, $eb, $d2, $c7
20d9c     C4 B9 C7 FC 
20da0     15 1D 12 1F 
20da4     1D 11 08 EE 
20da8     D7 C9 C3 E6 | 	byte	$c4, $b9, $c7, $fc, $15, $1d, $12, $1f, $1d, $11, $08, $ee, $d7, $c9, $c3, $e6
20dac     14 1E 12 06 
20db0     F7 E7 DD E7 
20db4     F0 01 1A 32 
20db8     32 2C 28 2C | 	byte	$14, $1e, $12, $06, $f7, $e7, $dd, $e7, $f0, $01, $1a, $32, $32, $2c, $28, $2c
20dbc     22 16 1F 1D 
20dc0     12 06 0A 15 
20dc4     1D 20 1E 10 
20dc8     F7 E2 CC EB | 	byte	$22, $16, $1f, $1d, $12, $06, $0a, $15, $1d, $20, $1e, $10, $f7, $e2, $cc, $eb
20dcc     10 0F 01 FC 
20dd0     FE EF F4 F7 
20dd4     F2 F0 F7 00 
20dd8     F3 D3 C0 C4 | 	byte	$10, $0f, $01, $fc, $fe, $ef, $f4, $f7, $f2, $f0, $f7, $00, $f3, $d3, $c0, $c4
20ddc     B9 D4 10 23 
20de0     22 12 15 15 
20de4     12 0A F2 D8 
20de8     D1 C9 CA FD | 	byte	$b9, $d4, $10, $23, $22, $12, $15, $15, $12, $0a, $f2, $d8, $d1, $c9, $ca, $fd
20dec     20 18 0B 00 
20df0     F2 E1 E9 EF 
20df4     F9 0F 22 33 
20df8     2E 31 27 24 | 	byte	$20, $18, $0b, $00, $f2, $e1, $e9, $ef, $f9, $0f, $22, $33, $2e, $31, $27, $24
20dfc     1B 19 1D 12 
20e00     0B 05 11 1D 
20e04     22 23 1D FE 
20e08     E5 CC CE F7 | 	byte	$1b, $19, $1d, $12, $0b, $05, $11, $1d, $22, $23, $1d, $fe, $e5, $cc, $ce, $f7
20e0c     0D 07 06 01 
20e10     F7 F0 FC F2 
20e14     E7 E6 F2 EF 
20e18     E0 C9 C4 C4 | 	byte	$0d, $07, $06, $01, $f7, $f0, $fc, $f2, $e7, $e6, $f2, $ef, $e0, $c9, $c4, $c4
20e1c     E5 11 27 28 
20e20     14 0A 0D 12 
20e24     08 F5 EA D6 
20e28     D3 CE DD 06 | 	byte	$e5, $11, $27, $28, $14, $0a, $0d, $12, $08, $f5, $ea, $d6, $d3, $ce, $dd, $06
20e2c     10 0F 08 03 
20e30     F7 EF EE EE 
20e34     F5 0C 24 33 
20e38     36 2E 2C 2C | 	byte	$10, $0f, $08, $03, $f7, $ef, $ee, $ee, $f5, $0c, $24, $33, $36, $2e, $2c, $2c
20e3c     23 1A 18 0C 
20e40     01 05 15 22 
20e44     24 25 10 F0 
20e48     D8 C1 D1 FC | 	byte	$23, $1a, $18, $0c, $01, $05, $15, $22, $24, $25, $10, $f0, $d8, $c1, $d1, $fc
20e4c     0B 07 06 01 
20e50     F9 01 F9 E2 
20e54     E6 E4 E6 E4 
20e58     D6 C9 BF EA | 	byte	$0b, $07, $06, $01, $f9, $01, $f9, $e2, $e6, $e4, $e6, $e4, $d6, $c9, $bf, $ea
20e5c     0C 23 24 1E 
20e60     0B 0B 0C 06 
20e64     F7 FA EA E0 
20e68     D3 CC D8 FE | 	byte	$0c, $23, $24, $1e, $0b, $0b, $0c, $06, $f7, $fa, $ea, $e0, $d3, $cc, $d8, $fe
20e6c     0B 0F 10 06 
20e70     FC F7 F0 E9 
20e74     00 1A 27 37 
20e78     38 37 30 24 | 	byte	$0b, $0f, $10, $06, $fc, $f7, $f0, $e9, $00, $1a, $27, $37, $38, $37, $30, $24
20e7c     12 11 0D 06 
20e80     01 12 1A 24 
20e84     23 20 08 E2 
20e88     CC BE DA 03 | 	byte	$12, $11, $0d, $06, $01, $12, $1a, $24, $23, $20, $08, $e2, $cc, $be, $da, $03
20e8c     0B 07 03 FE 
20e90     FC F9 EA DD 
20e94     E0 E0 D7 DC 
20e98     CD CC F0 18 | 	byte	$0b, $07, $03, $fe, $fc, $f9, $ea, $dd, $e0, $e0, $d7, $dc, $cd, $cc, $f0, $18
20e9c     22 20 1F 0D 
20ea0     FE 03 FC F7 
20ea4     F7 03 F3 E4 
20ea8     CC C1 E2 06 | 	byte	$22, $20, $1f, $0d, $fe, $03, $fc, $f7, $f7, $03, $f3, $e4, $cc, $c1, $e2, $06
20eac     15 14 10 01 
20eb0     FC ED EA F9 
20eb4     15 1E 2C 3B 
20eb8     3C 3A 25 16 | 	byte	$15, $14, $10, $01, $fc, $ed, $ea, $f9, $15, $1e, $2c, $3b, $3c, $3a, $25, $16
20ebc     14 16 0B 03 
20ec0     0B 12 19 1B 
20ec4     25 16 FA D8 
20ec8     C4 BC F0 06 | 	byte	$14, $16, $0b, $03, $0b, $12, $19, $1b, $25, $16, $fa, $d8, $c4, $bc, $f0, $06
20ecc     10 07 03 FC 
20ed0     FC EA E2 D6 
20ed4     D8 CD CC CA 
20ed8     D7 10 25 2B | 	byte	$10, $07, $03, $fc, $fc, $ea, $e2, $d6, $d8, $cd, $cc, $ca, $d7, $10, $25, $2b
20edc     29 20 18 FD 
20ee0     F7 ED EA F9 
20ee4     03 05 F2 D7 
20ee8     C5 CC EB 0C | 	byte	$29, $20, $18, $fd, $f7, $ed, $ea, $f9, $03, $05, $f2, $d7, $c5, $cc, $eb, $0c
20eec     19 16 08 F9 
20ef0     ED ED F9 10 
20ef4     1D 1E 35 3E 
20ef8     3C 2C 1A 15 | 	byte	$19, $16, $08, $f9, $ed, $ed, $f9, $10, $1d, $1e, $35, $3e, $3c, $2c, $1a, $15
20efc     16 12 11 0B 
20f00     0B 0A 0F 1D 
20f04     1F 0F EF D3 
20f08     BF C7 EB 02 | 	byte	$16, $12, $11, $0b, $0b, $0a, $0f, $1d, $1f, $0f, $ef, $d3, $bf, $c7, $eb, $02
20f0c     0A 10 FE FE 
20f10     FA E9 D2 CE 
20f14     CC C3 C7 E2 
20f18     22 29 2C 27 | 	byte	$0a, $10, $fe, $fe, $fa, $e9, $d2, $ce, $cc, $c3, $c7, $e2, $22, $29, $2c, $27
20f1c     1E 12 01 FA 
20f20     EF E1 EE 03 
20f24     0D 00 EF D3 
20f28     C7 CE EF 10 | 	byte	$1e, $12, $01, $fa, $ef, $e1, $ee, $03, $0d, $00, $ef, $d3, $c7, $ce, $ef, $10
20f2c     1B 0D F9 EE 
20f30     F2 F9 06 18 
20f34     24 28 3B 43 
20f38     3B 24 18 12 | 	byte	$1b, $0d, $f9, $ee, $f2, $f9, $06, $18, $24, $28, $3b, $43, $3b, $24, $18, $12
20f3c     14 11 0A 07 
20f40     03 02 0D 22 
20f44     12 0A EF CF 
20f48     C1 C9 ED 06 | 	byte	$14, $11, $0a, $07, $03, $02, $0d, $22, $12, $0a, $ef, $cf, $c1, $c9, $ed, $06
20f4c     0C FE FE FD 
20f50     F9 E1 CD C3 
20f54     BE BB E2 22 
20f58     3B 36 27 18 | 	byte	$0c, $fe, $fe, $fd, $f9, $e1, $cd, $c3, $be, $bb, $e2, $22, $3b, $36, $27, $18
20f5c     0F 05 FA F7 
20f60     E7 E5 F7 07 
20f64     06 00 E4 D2 
20f68     C9 D6 FE 1A | 	byte	$0f, $05, $fa, $f7, $e7, $e5, $f7, $07, $06, $00, $e4, $d2, $c9, $d6, $fe, $1a
20f6c     0D 00 F4 F0 
20f70     FA 0B 18 24 
20f74     28 30 3C 3A 
20f78     33 1F 12 12 | 	byte	$0d, $00, $f4, $f0, $fa, $0b, $18, $24, $28, $30, $3c, $3a, $33, $1f, $12, $12
20f7c     15 07 06 02 
20f80     02 03 0C 11 
20f84     0C 01 E0 CF 
20f88     CC D6 F4 03 | 	byte	$15, $07, $06, $02, $02, $03, $0c, $11, $0c, $01, $e0, $cf, $cc, $d6, $f4, $03
20f8c     FE F8 F9 FE 
20f90     ED D3 C7 C1 
20f94     B4 E5 20 3B 
20f98     3B 2B 19 08 | 	byte	$fe, $f8, $f9, $fe, $ed, $d3, $c7, $c1, $b4, $e5, $20, $3b, $3b, $2b, $19, $08
20f9c     03 F3 F7 ED 
20fa0     E5 ED FE 06 
20fa4     08 F9 DF C8 
20fa8     D2 EA 02 12 | 	byte	$03, $f3, $f7, $ed, $e5, $ed, $fe, $06, $08, $f9, $df, $c8, $d2, $ea, $02, $12
20fac     03 FA EF 01 
20fb0     0D 1A 22 27 
20fb4     24 24 30 3A 
20fb8     32 1E 15 10 | 	byte	$03, $fa, $ef, $01, $0d, $1a, $22, $27, $24, $24, $30, $3a, $32, $1e, $15, $10
20fbc     08 05 08 01 
20fc0     FC FC 0C 15 
20fc4     10 FD DC CD 
20fc8     CD D6 F0 00 | 	byte	$08, $05, $08, $01, $fc, $fc, $0c, $15, $10, $fd, $dc, $cd, $cd, $d6, $f0, $00
20fcc     FD FA FC F2 
20fd0     DB D1 BF B7 
20fd4     E1 0D 33 3F 
20fd8     37 22 0F 00 | 	byte	$fd, $fa, $fc, $f2, $db, $d1, $bf, $b7, $e1, $0d, $33, $3f, $37, $22, $0f, $00
20fdc     F7 F0 EF E6 
20fe0     E5 ED 03 0B 
20fe4     0C FC DB D4 
20fe8     DA EF 05 06 | 	byte	$f7, $f0, $ef, $e6, $e5, $ed, $03, $0b, $0c, $fc, $db, $d4, $da, $ef, $05, $06
20fec     F7 F3 03 12 
20ff0     1F 27 29 24 
20ff4     1D 1E 31 36 
20ff8     2E 1A 12 0A | 	byte	$f7, $f3, $03, $12, $1f, $27, $29, $24, $1d, $1e, $31, $36, $2e, $1a, $12, $0a
20ffc     0B 05 02 FA 
21000     F2 FE 0B 0D 
21004     0B F8 DD CF 
21008     CA D8 F0 00 | 	byte	$0b, $05, $02, $fa, $f2, $fe, $0b, $0d, $0b, $f8, $dd, $cf, $ca, $d8, $f0, $00
2100c     00 F7 F7 E0 
21010     D2 C4 BC E5 
21014     01 20 38 40 
21018     31 15 06 F9 | 	byte	$00, $f7, $f7, $e0, $d2, $c4, $bc, $e5, $01, $20, $38, $40, $31, $15, $06, $f9
2101c     F3 F3 EB E9 
21020     E5 F3 02 08 
21024     03 F0 DD DB 
21028     D8 F4 01 01 | 	byte	$f3, $f3, $eb, $e9, $e5, $f3, $02, $08, $03, $f0, $dd, $db, $d8, $f4, $01, $01
2102c     F4 FD 10 1B 
21030     2D 2D 27 1A 
21034     15 23 38 36 
21038     22 12 06 08 | 	byte	$f4, $fd, $10, $1b, $2d, $2d, $27, $1a, $15, $23, $38, $36, $22, $12, $06, $08
2103c     FC 01 FD FA 
21040     F0 03 0D 12 
21044     08 EE D8 CA 
21048     CC D8 F4 FE | 	byte	$fc, $01, $fd, $fa, $f0, $03, $0d, $12, $08, $ee, $d8, $ca, $cc, $d8, $f4, $fe
2104c     FC F0 E2 D7 
21050     C3 C9 F5 0D 
21054     10 28 3B 38 
21058     22 08 FC F4 | 	byte	$fc, $f0, $e2, $d7, $c3, $c9, $f5, $0d, $10, $28, $3b, $38, $22, $08, $fc, $f4
2105c     F2 F7 F5 EA 
21060     E5 F4 00 03 
21064     FC F5 E0 DB 
21068     E0 F7 FE F4 | 	byte	$f2, $f7, $f5, $ea, $e5, $f4, $00, $03, $fc, $f5, $e0, $db, $e0, $f7, $fe, $f4
2106c     FA 0D 22 30 
21070     33 2B 1E 16 
21074     19 25 2D 2B 
21078     1D 0D 01 03 | 	byte	$fa, $0d, $22, $30, $33, $2b, $1e, $16, $19, $25, $2d, $2b, $1d, $0d, $01, $03
2107c     FC 02 FC F5 
21080     FA 06 14 0B 
21084     FC E6 DA CA 
21088     C7 E0 F4 F4 | 	byte	$fc, $02, $fc, $f5, $fa, $06, $14, $0b, $fc, $e6, $da, $ca, $c7, $e0, $f4, $f4
2108c     ED E4 DB D1 
21090     D1 FC 06 10 
21094     1B 2E 32 2C 
21098     15 05 F8 ED | 	byte	$ed, $e4, $db, $d1, $d1, $fc, $06, $10, $1b, $2e, $32, $2c, $15, $05, $f8, $ed
2109c     F7 F5 F2 E7 
210a0     E5 F2 F9 FC 
210a4     02 F7 EE DB 
210a8     E0 FA FA F7 | 	byte	$f7, $f5, $f2, $e7, $e5, $f2, $f9, $fc, $02, $f7, $ee, $db, $e0, $fa, $fa, $f7
210ac     01 1E 2E 36 
210b0     31 22 19 11 
210b4     14 27 27 28 
210b8     1B 10 02 FC | 	byte	$01, $1e, $2e, $36, $31, $22, $19, $11, $14, $27, $27, $28, $1b, $10, $02, $fc
210bc     FE F5 F9 F7 
210c0     FE 0B 11 FD 
210c4     F3 E2 D1 C5 
210c8     CF E5 EE ED | 	byte	$fe, $f5, $f9, $f7, $fe, $0b, $11, $fd, $f3, $e2, $d1, $c5, $cf, $e5, $ee, $ed
210cc     E0 DA C7 D8 
210d0     0B 15 12 18 
210d4     20 27 29 1E 
210d8     15 00 F5 F8 | 	byte	$e0, $da, $c7, $d8, $0b, $15, $12, $18, $20, $27, $29, $1e, $15, $00, $f5, $f8
210dc     F9 EB E7 E6 
210e0     E5 F4 01 03 
210e4     00 F9 E0 DA 
210e8     F2 F5 FA 02 | 	byte	$f9, $eb, $e7, $e6, $e5, $f4, $01, $03, $00, $f9, $e0, $da, $f2, $f5, $fa, $02
210ec     19 2B 36 36 
210f0     29 1D 15 12 
210f4     14 1D 1D 1D 
210f8     20 14 00 FD | 	byte	$19, $2b, $36, $36, $29, $1d, $15, $12, $14, $1d, $1d, $1d, $20, $14, $00, $fd
210fc     F5 F5 F4 F7 
21100     01 08 06 F9 
21104     ED D7 C4 CC 
21108     DD E7 E5 E2 | 	byte	$f5, $f5, $f4, $f7, $01, $08, $06, $f9, $ed, $d7, $c4, $cc, $dd, $e7, $e5, $e2
2110c     D7 C3 E0 0F 
21110     23 22 1D 18 
21114     1A 1E 18 1D 
21118     10 FC F9 FC | 	byte	$d7, $c3, $e0, $0f, $23, $22, $1d, $18, $1a, $1e, $18, $1d, $10, $fc, $f9, $fc
2111c     F0 E6 DB E0 
21120     EA FD 0A 08 
21124     03 E6 D6 E5 
21128     F7 F9 02 14 | 	byte	$f0, $e6, $db, $e0, $ea, $fd, $0a, $08, $03, $e6, $d6, $e5, $f7, $f9, $02, $14
2112c     28 2B 31 2E 
21130     24 20 11 10 
21134     10 0F 15 27 
21138     22 06 FA FA | 	byte	$28, $2b, $31, $2e, $24, $20, $11, $10, $10, $0f, $15, $27, $22, $06, $fa, $fa
2113c     02 F4 F3 F2 
21140     F9 00 FE F9 
21144     ED D2 C4 CF 
21148     DB E5 E2 D8 | 	byte	$02, $f4, $f3, $f2, $f9, $00, $fe, $f9, $ed, $d2, $c4, $cf, $db, $e5, $e2, $d8
2114c     C7 E0 0F 25 
21150     2B 20 10 12 
21154     10 14 1F 1F 
21158     12 F9 F9 F7 | 	byte	$c7, $e0, $0f, $25, $2b, $20, $10, $12, $10, $14, $1f, $1f, $12, $f9, $f9, $f7
2115c     EB D8 D3 D7 
21160     F3 02 0D 10 
21164     06 E6 DB DD 
21168     ED F9 0D 22 | 	byte	$eb, $d8, $d3, $d7, $f3, $02, $0d, $10, $06, $e6, $db, $dd, $ed, $f9, $0d, $22
2116c     2B 31 31 36 
21170     28 19 0C 01 
21174     FE 0F 25 25 
21178     12 FC F9 08 | 	byte	$2b, $31, $31, $36, $28, $19, $0c, $01, $fe, $0f, $25, $25, $12, $fc, $f9, $08
2117c     02 F7 ED EB 
21180     F4 FD 00 F8 
21184     EB CF BF CE 
21188     D6 D8 D3 C7 | 	byte	$02, $f7, $ed, $eb, $f4, $fd, $00, $f8, $eb, $cf, $bf, $ce, $d6, $d8, $d3, $c7
2118c     E5 0F 33 33 
21190     24 10 0A 08 
21194     06 19 2C 1A 
21198     06 FC FE ED | 	byte	$e5, $0f, $33, $33, $24, $10, $0a, $08, $06, $19, $2c, $1a, $06, $fc, $fe, $ed
2119c     E0 D2 D3 E2 
211a0     F7 0B 1A 11 
211a4     01 E4 D2 DF 
211a8     ED 00 1E 2C | 	byte	$e0, $d2, $d3, $e2, $f7, $0b, $1a, $11, $01, $e4, $d2, $df, $ed, $00, $1e, $2c
211ac     31 30 36 2C 
211b0     1D 0B 07 FA 
211b4     00 19 2B 1E 
211b8     03 FC 01 FE | 	byte	$31, $30, $36, $2c, $1d, $0b, $07, $fa, $00, $19, $2b, $1e, $03, $fc, $01, $fe
211bc     FC F5 F4 ED 
211c0     F4 F9 FA F3 
211c4     E0 C3 BC C8 
211c8     CE CC C9 F2 | 	byte	$fc, $f5, $f4, $ed, $f4, $f9, $fa, $f3, $e0, $c3, $bc, $c8, $ce, $cc, $c9, $f2
211cc     22 35 3B 2C 
211d0     12 01 03 03 
211d4     0A 20 25 11 
211d8     03 F9 EF DB | 	byte	$22, $35, $3b, $2c, $12, $01, $03, $03, $0a, $20, $25, $11, $03, $f9, $ef, $db
211dc     D7 DA E2 EB 
211e0     01 15 18 0B 
211e4     F8 DC CF DA 
211e8     F5 18 28 2E | 	byte	$d7, $da, $e2, $eb, $01, $15, $18, $0b, $f8, $dc, $cf, $da, $f5, $18, $28, $2e
211ec     33 37 33 22 
211f0     12 03 FC FE 
211f4     0F 27 1F 0B 
211f8     05 07 00 F8 | 	byte	$33, $37, $33, $22, $12, $03, $fc, $fe, $0f, $27, $1f, $0b, $05, $07, $00, $f8
211fc     F5 F0 ED EF 
21200     F2 F7 FC EF 
21204     D6 C0 BC C3 
21208     BF C8 F3 25 | 	byte	$f5, $f0, $ed, $ef, $f2, $f7, $fc, $ef, $d6, $c0, $bc, $c3, $bf, $c8, $f3, $25
2120c     37 3C 2E 1A 
21210     0D 03 03 01 
21214     0D 1E 1F 0A 
21218     FD F4 E0 DC | 	byte	$37, $3c, $2e, $1a, $0d, $03, $03, $01, $0d, $1e, $1f, $0a, $fd, $f4, $e0, $dc
2121c     DB DF E6 F8 
21220     0B 1D 18 06 
21224     ED D4 CC E1 
21228     02 22 2C 38 | 	byte	$db, $df, $e6, $f8, $0b, $1d, $18, $06, $ed, $d4, $cc, $e1, $02, $22, $2c, $38
2122c     3A 32 25 16 
21230     06 FC FC 06 
21234     1A 20 18 0D 
21238     08 FE F9 F7 | 	byte	$3a, $32, $25, $16, $06, $fc, $fc, $06, $1a, $20, $18, $0d, $08, $fe, $f9, $f7
2123c     F0 E9 E9 E9 
21240     F7 02 FE E7 
21244     D1 B4 B4 B0 
21248     C1 FE 27 36 | 	byte	$f0, $e9, $e9, $e9, $f7, $02, $fe, $e7, $d1, $b4, $b4, $b0, $c1, $fe, $27, $36
2124c     3A 31 22 0F 
21250     06 05 FD 03 
21254     12 16 15 01 
21258     F4 E5 D8 E0 | 	byte	$3a, $31, $22, $0f, $06, $05, $fd, $03, $12, $16, $15, $01, $f4, $e5, $d8, $e0
2125c     DF E9 F0 05 
21260     15 1B 16 01 
21264     E5 C3 D1 EF 
21268     10 27 33 3B | 	byte	$df, $e9, $f0, $05, $15, $1b, $16, $01, $e5, $c3, $d1, $ef, $10, $27, $33, $3b
2126c     32 28 20 11 
21270     FE F7 03 10 
21274     1D 1B 14 0A 
21278     FE F9 F7 F7 | 	byte	$32, $28, $20, $11, $fe, $f7, $03, $10, $1d, $1b, $14, $0a, $fe, $f9, $f7, $f7
2127c     EB E7 E2 EE 
21280     FA 06 F8 DF 
21284     BE A7 A8 BF 
21288     F7 1F 31 36 | 	byte	$eb, $e7, $e2, $ee, $fa, $06, $f8, $df, $be, $a7, $a8, $bf, $f7, $1f, $31, $36
2128c     32 27 1A 10 
21290     06 FE 02 08 
21294     12 11 08 FE 
21298     E5 DD E2 E7 | 	byte	$32, $27, $1a, $10, $06, $fe, $02, $08, $12, $11, $08, $fe, $e5, $dd, $e2, $e7
2129c     EA F3 F9 08 
212a0     15 1D 0C F7 
212a4     CE C5 DF 07 
212a8     22 33 38 2E | 	byte	$ea, $f3, $f9, $08, $15, $1d, $0c, $f7, $ce, $c5, $df, $07, $22, $33, $38, $2e
212ac     27 25 18 03 
212b0     FE FE 0B 0F 
212b4     18 11 11 0A 
212b8     FC F7 F9 EF | 	byte	$27, $25, $18, $03, $fe, $fe, $0b, $0f, $18, $11, $11, $0a, $fc, $f7, $f9, $ef
212bc     E7 E6 E5 F0 
212c0     FD F9 E7 C9 
212c4     B5 A6 B4 E6 
212c8     1D 30 35 33 | 	byte	$e7, $e6, $e5, $f0, $fd, $f9, $e7, $c9, $b5, $a6, $b4, $e6, $1d, $30, $35, $33
212cc     2C 28 1A 0B 
212d0     FE FE 00 0A 
212d4     0A 08 01 F5 
212d8     EA E4 E6 E7 | 	byte	$2c, $28, $1a, $0b, $fe, $fe, $00, $0a, $0a, $08, $01, $f5, $ea, $e4, $e6, $e7
212dc     F0 FA FD 08 
212e0     18 12 06 E2 
212e4     C9 D3 F5 11 
212e8     29 36 2E 24 | 	byte	$f0, $fa, $fd, $08, $18, $12, $06, $e2, $c9, $d3, $f5, $11, $29, $36, $2e, $24
212ec     24 1E 0D 03 
212f0     FE 06 06 0D 
212f4     11 11 0C 0A 
212f8     00 F8 EF E7 | 	byte	$24, $1e, $0d, $03, $fe, $06, $06, $0d, $11, $11, $0c, $0a, $00, $f8, $ef, $e7
212fc     E5 E9 EA EF 
21300     F7 EF DB C9 
21304     B2 AF DD 07 
21308     24 2D 30 30 | 	byte	$e5, $e9, $ea, $ef, $f7, $ef, $db, $c9, $b2, $af, $dd, $07, $24, $2d, $30, $30
2130c     28 23 10 03 
21310     FE FE FE 01 
21314     02 08 01 F5 
21318     EB ED EE F0 | 	byte	$28, $23, $10, $03, $fe, $fe, $fe, $01, $02, $08, $01, $f5, $eb, $ed, $ee, $f0
2131c     F5 00 FC 03 
21320     10 0B F7 E2 
21324     DA E2 FC 1F 
21328     2C 27 24 27 | 	byte	$f5, $00, $fc, $03, $10, $0b, $f7, $e2, $da, $e2, $fc, $1f, $2c, $27, $24, $27
2132c     28 16 0C 0A 
21330     0B FE 01 06 
21334     10 11 0D 02 
21338     FD F7 E9 E7 | 	byte	$28, $16, $0c, $0a, $0b, $fe, $01, $06, $10, $11, $0d, $02, $fd, $f7, $e9, $e7
2133c     E5 E6 E9 EB 
21340     E7 E5 D2 BE 
21344     C3 DC 00 1D 
21348     27 29 24 2C | 	byte	$e5, $e6, $e9, $eb, $e7, $e5, $d2, $be, $c3, $dc, $00, $1d, $27, $29, $24, $2c
2134c     20 12 0B 02 
21350     FC FA F8 F9 
21354     06 05 01 F9 
21358     F4 F2 EA EF | 	byte	$20, $12, $0b, $02, $fc, $fa, $f8, $f9, $06, $05, $01, $f9, $f4, $f2, $ea, $ef
2135c     F9 FC 00 07 
21360     0D FD EE ED 
21364     E2 EB 0B 1F 
21368     24 22 27 27 | 	byte	$f9, $fc, $00, $07, $0d, $fd, $ee, $ed, $e2, $eb, $0b, $1f, $24, $22, $27, $27
2136c     24 16 12 0F 
21370     05 FC FA 03 
21374     08 0C 07 00 
21378     FC EF E2 E5 | 	byte	$24, $16, $12, $0f, $05, $fc, $fa, $03, $08, $0c, $07, $00, $fc, $ef, $e2, $e5
2137c     E0 DF DD E6 
21380     EA DD D1 DD 
21384     E5 F5 06 1A 
21388     24 27 27 24 | 	byte	$e0, $df, $dd, $e6, $ea, $dd, $d1, $dd, $e5, $f5, $06, $1a, $24, $27, $27, $24
2138c     19 0C 05 01 
21390     F4 F2 F0 02 
21394     05 0F 0B FC 
21398     F9 EA E7 F4 | 	byte	$19, $0c, $05, $01, $f4, $f2, $f0, $02, $05, $0f, $0b, $fc, $f9, $ea, $e7, $f4
2139c     F8 F7 01 06 
213a0     03 FE F8 F3 
213a4     EB F3 0B 18 
213a8     22 22 27 29 | 	byte	$f8, $f7, $01, $06, $03, $fe, $f8, $f3, $eb, $f3, $0b, $18, $22, $22, $27, $29
213ac     22 16 10 0B 
213b0     FC F9 F9 00 
213b4     06 0A 0B 03 
213b8     FC E7 E0 E2 | 	byte	$22, $16, $10, $0b, $fc, $f9, $f9, $00, $06, $0a, $0b, $03, $fc, $e7, $e0, $e2
213bc     DD D4 DB E2 
213c0     DD DD F3 00 
213c4     F9 00 0B 11 
213c8     1D 1F 24 1F | 	byte	$dd, $d4, $db, $e2, $dd, $dd, $f3, $00, $f9, $00, $0b, $11, $1d, $1f, $24, $1f
213cc     12 07 01 FA 
213d0     F0 F2 F3 00 
213d4     0C 0D 0B 02 
213d8     F7 E2 EA F4 | 	byte	$12, $07, $01, $fa, $f0, $f2, $f3, $00, $0c, $0d, $0b, $02, $f7, $e2, $ea, $f4
213dc     F8 FA F9 00 
213e0     FE 03 05 FA 
213e4     F3 FC 08 11 
213e8     1A 22 2C 24 | 	byte	$f8, $fa, $f9, $00, $fe, $03, $05, $fa, $f3, $fc, $08, $11, $1a, $22, $2c, $24
213ec     1F 19 10 FE 
213f0     F7 F7 F2 FC 
213f4     06 14 10 02 
213f8     EF DB E0 DB | 	byte	$1f, $19, $10, $fe, $f7, $f7, $f2, $fc, $06, $14, $10, $02, $ef, $db, $e0, $db
213fc     D6 DA D8 D3 
21400     E2 06 10 0D 
21404     02 02 05 0C 
21408     12 1F 15 15 | 	byte	$d6, $da, $d8, $d3, $e2, $06, $10, $0d, $02, $02, $05, $0c, $12, $1f, $15, $15
2140c     0B 0C 01 F7 
21410     ED ED F9 01 
21414     0D 14 10 01 
21418     EE E9 EE F4 | 	byte	$0b, $0c, $01, $f7, $ed, $ed, $f9, $01, $0d, $14, $10, $01, $ee, $e9, $ee, $f4
2141c     F9 FD F9 F9 
21420     FE 01 03 FE 
21424     FE 05 10 12 
21428     16 25 2B 24 | 	byte	$f9, $fd, $f9, $f9, $fe, $01, $03, $fe, $fe, $05, $10, $12, $16, $25, $2b, $24
2142c     1F 14 08 FC 
21430     F2 EF ED FE 
21434     0F 18 0D FA 
21438     E1 D6 D8 D4 | 	byte	$1f, $14, $08, $fc, $f2, $ef, $ed, $fe, $0f, $18, $0d, $fa, $e1, $d6, $d8, $d4
2143c     D6 D4 CA E6 
21440     0B 22 19 0D 
21444     01 02 07 06 
21448     10 15 0C 10 | 	byte	$d6, $d4, $ca, $e6, $0b, $22, $19, $0d, $01, $02, $07, $06, $10, $15, $0c, $10
2144c     12 0A FC F4 
21450     F4 F2 EF 01 
21454     10 16 0B F7 
21458     E5 ED F8 FD | 	byte	$12, $0a, $fc, $f4, $f4, $f2, $ef, $01, $10, $16, $0b, $f7, $e5, $ed, $f8, $fd
2145c     FC F9 F5 F8 
21460     FE 07 05 01 
21464     03 0A 0D 0D 
21468     1D 24 25 1E | 	byte	$fc, $f9, $f5, $f8, $fe, $07, $05, $01, $03, $0a, $0d, $0d, $1d, $24, $25, $1e
2146c     1B 10 06 F3 
21470     F2 E7 ED FE 
21474     0D 19 08 ED 
21478     E0 D6 D2 D2 | 	byte	$1b, $10, $06, $f3, $f2, $e7, $ed, $fe, $0d, $19, $08, $ed, $e0, $d6, $d2, $d2
2147c     CA CD E9 11 
21480     29 25 16 08 
21484     01 05 F9 FC 
21488     03 0B 0B 12 | 	byte	$ca, $cd, $e9, $11, $29, $25, $16, $08, $01, $05, $f9, $fc, $03, $0b, $0b, $12
2148c     0C 07 00 F9 
21490     F5 EB F5 03 
21494     12 0F 03 F7 
21498     EF F2 F9 FC | 	byte	$0c, $07, $00, $f9, $f5, $eb, $f5, $03, $12, $0f, $03, $f7, $ef, $f2, $f9, $fc
2149c     F7 EF EB FD 
214a0     05 0B 0A 06 
214a4     0D 0A 08 15 
214a8     1D 1F 1F 1D | 	byte	$f7, $ef, $eb, $fd, $05, $0b, $0a, $06, $0d, $0a, $08, $15, $1d, $1f, $1f, $1d
214ac     19 08 01 F7 
214b0     EF E5 F3 FA 
214b4     0C 0C 01 ED 
214b8     DB CE CE C4 | 	byte	$19, $08, $01, $f7, $ef, $e5, $f3, $fa, $0c, $0c, $01, $ed, $db, $ce, $ce, $c4
214bc     CD EF 1A 2C 
214c0     23 1B 10 03 
214c4     03 FA F9 F8 
214c8     01 0D 0D 10 | 	byte	$cd, $ef, $1a, $2c, $23, $1b, $10, $03, $03, $fa, $f9, $f8, $01, $0d, $0d, $10
214cc     0D 07 03 F7 
214d0     F2 F4 FE 00 
214d4     0D 0C 02 F8 
214d8     F7 F7 F7 F2 | 	byte	$0d, $07, $03, $f7, $f2, $f4, $fe, $00, $0d, $0c, $02, $f8, $f7, $f7, $f7, $f2
214dc     F0 EE F7 03 
214e0     0C 08 07 0C 
214e4     14 0C 0F 11 
214e8     18 16 19 18 | 	byte	$f0, $ee, $f7, $03, $0c, $08, $07, $0c, $14, $0c, $0f, $11, $18, $16, $19, $18
214ec     0D 07 01 F2 
214f0     ED ED F3 FA 
214f4     02 05 FA E9 
214f8     D6 C7 BC D1 | 	byte	$0d, $07, $01, $f2, $ed, $ed, $f3, $fa, $02, $05, $fa, $e9, $d6, $c7, $bc, $d1
214fc     FE 1B 2C 24 
21500     1D 10 02 05 
21504     00 F4 F0 F9 
21508     06 08 10 0B | 	byte	$fe, $1b, $2c, $24, $1d, $10, $02, $05, $00, $f4, $f0, $f9, $06, $08, $10, $0b
2150c     0B 07 F9 F7 
21510     F9 FC F9 FE 
21514     0A 0B 06 00 
21518     F7 F4 EA E7 | 	byte	$0b, $07, $f9, $f7, $f9, $fc, $f9, $fe, $0a, $0b, $06, $00, $f7, $f4, $ea, $e7
2151c     E5 EE 06 0B 
21520     12 10 03 0D 
21524     14 18 0D 0C 
21528     0C 0F 12 0F | 	byte	$e5, $ee, $06, $0b, $12, $10, $03, $0d, $14, $18, $0d, $0c, $0c, $0f, $12, $0f
2152c     11 02 FC F2 
21530     ED EF F2 F9 
21534     03 FD F4 E1 
21538     CA BF D4 06 | 	byte	$11, $02, $fc, $f2, $ed, $ef, $f2, $f9, $03, $fd, $f4, $e1, $ca, $bf, $d4, $06
2153c     18 28 22 18 
21540     15 03 FA F7 
21544     FE FD F5 F9 
21548     01 0B 14 0D | 	byte	$18, $28, $22, $18, $15, $03, $fa, $f7, $fe, $fd, $f5, $f9, $01, $0b, $14, $0d
2154c     08 02 FD FA 
21550     FC F9 F4 01 
21554     0B 0C 06 01 
21558     F4 ED E5 E2 | 	byte	$08, $02, $fd, $fa, $fc, $f9, $f4, $01, $0b, $0c, $06, $01, $f4, $ed, $e5, $e2
2155c     ED 00 08 19 
21560     18 0B 08 15 
21564     1D 11 01 00 
21568     07 0D 0F 10 | 	byte	$ed, $00, $08, $19, $18, $0b, $08, $15, $1d, $11, $01, $00, $07, $0d, $0f, $10
2156c     0B 00 F5 F5 
21570     F2 F2 F2 F7 
21574     F4 F0 E1 CD 
21578     CE ED 05 1B | 	byte	$0b, $00, $f5, $f5, $f2, $f2, $f2, $f7, $f4, $f0, $e1, $cd, $ce, $ed, $05, $1b
2157c     20 1A 18 0C 
21580     03 F7 F2 03 
21584     0B 02 F7 FC 
21588     01 08 0B 0B | 	byte	$20, $1a, $18, $0c, $03, $f7, $f2, $03, $0b, $02, $f7, $fc, $01, $08, $0b, $0b
2158c     07 01 FD 02 
21590     FD FA F5 FC 
21594     06 07 03 03 
21598     F4 EA E2 E7 | 	byte	$07, $01, $fd, $02, $fd, $fa, $f5, $fc, $06, $07, $03, $03, $f4, $ea, $e2, $e7
2159c     F5 05 16 16 
215a0     0F 08 0F 1A 
215a4     18 0A FC FC 
215a8     06 0D 10 0D | 	byte	$f5, $05, $16, $16, $0f, $08, $0f, $1a, $18, $0a, $fc, $fc, $06, $0d, $10, $0d
215ac     02 F8 F0 F3 
215b0     F2 F0 EB EF 
215b4     ED E1 D1 E0 
215b8     FE 0D 1A 1D | 	byte	$02, $f8, $f0, $f3, $f2, $f0, $eb, $ef, $ed, $e1, $d1, $e0, $fe, $0d, $1a, $1d
215bc     16 10 0B 05 
215c0     F9 EE FC 0B 
215c4     10 00 F9 F8 
215c8     FE 03 0B 0B | 	byte	$16, $10, $0b, $05, $f9, $ee, $fc, $0b, $10, $00, $f9, $f8, $fe, $03, $0b, $0b
215cc     08 05 03 03 
215d0     FC F4 F3 FA 
215d4     00 02 06 03 
215d8     EF E5 E5 F2 | 	byte	$08, $05, $03, $03, $fc, $f4, $f3, $fa, $00, $02, $06, $03, $ef, $e5, $e5, $f2
215dc     02 0F 19 15 
215e0     08 03 14 1D 
215e4     12 07 FC FE 
215e8     08 08 08 01 | 	byte	$02, $0f, $19, $15, $08, $03, $14, $1d, $12, $07, $fc, $fe, $08, $08, $08, $01
215ec     FE F5 F7 F7 
215f0     EF E5 E2 E1 
215f4     D8 DC FD 19 
215f8     1D 15 12 0B | 	byte	$fe, $f5, $f7, $f7, $ef, $e5, $e2, $e1, $d8, $dc, $fd, $19, $1d, $15, $12, $0b
215fc     06 05 03 FC 
21600     ED F4 08 10 
21604     0C 05 F8 F5 
21608     FE 08 06 0B | 	byte	$06, $05, $03, $fc, $ed, $f4, $08, $10, $0c, $05, $f8, $f5, $fe, $08, $06, $0b
2160c     08 0A 03 03 
21610     F9 F2 F3 F3 
21614     00 05 06 FC 
21618     EA E6 EB FE | 	byte	$08, $0a, $03, $03, $f9, $f2, $f3, $f3, $00, $05, $06, $fc, $ea, $e6, $eb, $fe
2161c     0B 16 1A 08 
21620     03 06 18 15 
21624     10 0A F9 FA 
21628     FE 07 00 FC | 	byte	$0b, $16, $1a, $08, $03, $06, $18, $15, $10, $0a, $f9, $fa, $fe, $07, $00, $fc
2162c     F9 F8 FC EF 
21630     E7 DD D6 CC 
21634     DF 0C 2B 2D 
21638     1E 0F 06 FE | 	byte	$f9, $f8, $fc, $ef, $e7, $dd, $d6, $cc, $df, $0c, $2b, $2d, $1e, $0f, $06, $fe
2163c     FE FD FC F2 
21640     EF FE 0F 12 
21644     08 02 F0 F9 
21648     FD 0C 07 0D | 	byte	$fe, $fd, $fc, $f2, $ef, $fe, $0f, $12, $08, $02, $f0, $f9, $fd, $0c, $07, $0d
2164c     0B 0A 03 FC 
21650     F2 F2 EF F7 
21654     FD 0D 08 F0 
21658     ED EB F3 08 | 	byte	$0b, $0a, $03, $fc, $f2, $f2, $ef, $f7, $fd, $0d, $08, $f0, $ed, $eb, $f3, $08
2165c     0F 19 10 00 
21660     03 0B 15 12 
21664     15 05 F7 FA 
21668     00 01 FA FD | 	byte	$0f, $19, $10, $00, $03, $0b, $15, $12, $15, $05, $f7, $fa, $00, $01, $fa, $fd
2166c     F5 F8 F4 E7 
21670     DB D1 C7 E5 
21674     12 30 37 2C 
21678     14 03 FA F7 | 	byte	$f5, $f8, $f4, $e7, $db, $d1, $c7, $e5, $12, $30, $37, $2c, $14, $03, $fa, $f7
2167c     FC 00 F5 EE 
21680     F4 0B 10 0D 
21684     08 F3 EF FE 
21688     08 0D 08 10 | 	byte	$fc, $00, $f5, $ee, $f4, $0b, $10, $0d, $08, $f3, $ef, $fe, $08, $0d, $08, $10
2168c     0A 02 FD F4 
21690     F0 F3 F3 FC 
21694     01 07 FE F4 
21698     ED F4 05 0A | 	byte	$0a, $02, $fd, $f4, $f0, $f3, $f3, $fc, $01, $07, $fe, $f4, $ed, $f4, $05, $0a
2169c     14 10 05 FC 
216a0     03 14 16 18 
216a4     10 00 EF F4 
216a8     FE FC FE F9 | 	byte	$14, $10, $05, $fc, $03, $14, $16, $18, $10, $00, $ef, $f4, $fe, $fc, $fe, $f9
216ac     F7 F7 E9 DC 
216b0     CE CC ED 0D 
216b4     24 37 31 1F 
216b8     06 F4 F9 F9 | 	byte	$f7, $f7, $e9, $dc, $ce, $cc, $ed, $0d, $24, $37, $31, $1f, $06, $f4, $f9, $f9
216bc     00 FD F0 EE 
216c0     FE 0F 10 08 
216c4     FC F5 F7 00 
216c8     0B 0B 0D 06 | 	byte	$00, $fd, $f0, $ee, $fe, $0f, $10, $08, $fc, $f5, $f7, $00, $0b, $0b, $0d, $06
216cc     05 03 F2 F3 
216d0     F5 F4 F8 F8 
216d4     02 00 FC F9 
216d8     F7 FE 0B 0D | 	byte	$05, $03, $f2, $f3, $f5, $f4, $f8, $f8, $02, $00, $fc, $f9, $f7, $fe, $0b, $0d
216dc     0C 0A FA FA 
216e0     0C 15 1B 16 
216e4     02 F3 ED F9 
216e8     F9 FC FC F9 | 	byte	$0c, $0a, $fa, $fa, $0c, $15, $1b, $16, $02, $f3, $ed, $f9, $f9, $fc, $fc, $f9
216ec     F2 EB DD CD 
216f0     D2 F9 11 22 
216f4     2C 30 25 0C 
216f8     FE F7 F7 F9 | 	byte	$f2, $eb, $dd, $cd, $d2, $f9, $11, $22, $2c, $30, $25, $0c, $fe, $f7, $f7, $f9
216fc     FC FA EF F7 
21700     06 15 14 07 
21704     F5 F5 F8 00 
21708     08 0D 0B 0B | 	byte	$fc, $fa, $ef, $f7, $06, $15, $14, $07, $f5, $f5, $f8, $00, $08, $0d, $0b, $0b
2170c     08 FA F2 F9 
21710     F4 F4 F3 F8 
21714     F5 FC FC FD 
21718     01 0D 0D 0B | 	byte	$08, $fa, $f2, $f9, $f4, $f4, $f3, $f8, $f5, $fc, $fc, $fd, $01, $0d, $0d, $0b
2171c     06 FD F7 01 
21720     15 22 1B 0A 
21724     FA ED EB F4 
21728     F4 FA FA F7 | 	byte	$06, $fd, $f7, $01, $15, $22, $1b, $0a, $fa, $ed, $eb, $f4, $f4, $fa, $fa, $f7
2172c     ED DC D3 E2 
21730     01 10 1D 24 
21734     24 22 0F 05 
21738     FA F5 F9 FC | 	byte	$ed, $dc, $d3, $e2, $01, $10, $1d, $24, $24, $22, $0f, $05, $fa, $f5, $f9, $fc
2173c     F7 F0 ED FC 
21740     15 18 07 02 
21744     F7 F5 F9 02 
21748     08 08 0B 06 | 	byte	$f7, $f0, $ed, $fc, $15, $18, $07, $02, $f7, $f5, $f9, $02, $08, $08, $0b, $06
2174c     01 F5 F7 F7 
21750     F7 F4 F4 F4 
21754     F7 FA FC 05 
21758     06 0A 0F 06 | 	byte	$01, $f5, $f7, $f7, $f7, $f4, $f4, $f4, $f7, $fa, $fc, $05, $06, $0a, $0f, $06
2175c     02 FD F4 0C 
21760     1F 1F 18 01 
21764     F4 E9 E7 F0 
21768     FA F7 F8 EF | 	byte	$02, $fd, $f4, $0c, $1f, $1f, $18, $01, $f4, $e9, $e7, $f0, $fa, $f7, $f8, $ef
2176c     E2 D7 EA 03 
21770     12 1A 1D 1D 
21774     1B 18 0A 02 
21778     F7 F9 FD FE | 	byte	$e2, $d7, $ea, $03, $12, $1a, $1d, $1d, $1b, $18, $0a, $02, $f7, $f9, $fd, $fe
2177c     F2 E9 F2 06 
21780     12 18 0B 06 
21784     F7 FA F9 FD 
21788     05 08 07 07 | 	byte	$f2, $e9, $f2, $06, $12, $18, $0b, $06, $f7, $fa, $f9, $fd, $05, $08, $07, $07
2178c     02 FA F9 FC 
21790     F7 EF EF F2 
21794     F4 FA 03 08 
21798     08 0D 0C 0A | 	byte	$02, $fa, $f9, $fc, $f7, $ef, $ef, $f2, $f4, $fa, $03, $08, $08, $0d, $0c, $0a
2179c     02 F4 F9 11 
217a0     1D 19 0C FE 
217a4     EA E6 ED ED 
217a8     F4 F4 F0 E4 | 	byte	$02, $f4, $f9, $11, $1d, $19, $0c, $fe, $ea, $e6, $ed, $ed, $f4, $f4, $f0, $e4
217ac     E6 F5 0F 1B 
217b0     18 14 11 15 
217b4     15 0F 06 F7 
217b8     FC FC F9 F9 | 	byte	$e6, $f5, $0f, $1b, $18, $14, $11, $15, $15, $0f, $06, $f7, $fc, $fc, $f9, $f9
217bc     ED EE F9 0A 
217c0     19 16 0C 01 
217c4     F2 F5 FC FD 
217c8     06 03 0B 06 | 	byte	$ed, $ee, $f9, $0a, $19, $16, $0c, $01, $f2, $f5, $fc, $fd, $06, $03, $0b, $06
217cc     00 F8 FA F3 
217d0     F3 EE ED F4 
217d4     F9 05 08 08 
217d8     0D 08 06 01 | 	byte	$00, $f8, $fa, $f3, $f3, $ee, $ed, $f4, $f9, $05, $08, $08, $0d, $08, $06, $01
217dc     F5 F7 06 15 
217e0     1E 16 05 F3 
217e4     E4 E6 E7 EF 
217e8     F2 ED EA F4 | 	byte	$f5, $f7, $06, $15, $1e, $16, $05, $f3, $e4, $e6, $e7, $ef, $f2, $ed, $ea, $f4
217ec     03 11 1A 16 
217f0     0D 0F 11 10 
217f4     10 0A 00 FD 
217f8     FE F9 F9 F9 | 	byte	$03, $11, $1a, $16, $0d, $0f, $11, $10, $10, $0a, $00, $fd, $fe, $f9, $f9, $f9
217fc     ED EE FE 0C 
21800     1D 14 02 F8 
21804     F5 F5 F9 03 
21808     03 08 06 03 | 	byte	$ed, $ee, $fe, $0c, $1d, $14, $02, $f8, $f5, $f5, $f9, $03, $03, $08, $06, $03
2180c     FE F8 FC F7 
21810     EF EF F2 F4 
21814     FD 07 10 0D 
21818     08 08 03 FC | 	byte	$fe, $f8, $fc, $f7, $ef, $ef, $f2, $f4, $fd, $07, $10, $0d, $08, $08, $03, $fc
2181c     EF 00 08 14 
21820     1B 10 FD E4 
21824     E1 E5 ED F0 
21828     E7 EB FD 10 | 	byte	$ef, $00, $08, $14, $1b, $10, $fd, $e4, $e1, $e5, $ed, $f0, $e7, $eb, $fd, $10
2182c     15 14 15 12 
21830     0B 0B 0A 0C 
21834     05 03 02 FE 
21838     FC FE FE F2 | 	byte	$15, $14, $15, $12, $0b, $0b, $0a, $0c, $05, $03, $02, $fe, $fc, $fe, $fe, $f2
2183c     E7 F8 03 12 
21840     18 0D 00 F5 
21844     F3 F7 01 00 
21848     02 0D 05 01 | 	byte	$e7, $f8, $03, $12, $18, $0d, $00, $f5, $f3, $f7, $01, $00, $02, $0d, $05, $01
2184c     FE F8 F9 F4 
21850     EF E5 EA F9 
21854     06 10 11 0C 
21858     08 03 FE EA | 	byte	$fe, $f8, $f9, $f4, $ef, $e5, $ea, $f9, $06, $10, $11, $0c, $08, $03, $fe, $ea
2185c     F3 FD 10 16 
21860     12 06 EF E0 
21864     E2 E7 E9 E6 
21868     F0 0B 1B 1A | 	byte	$f3, $fd, $10, $16, $12, $06, $ef, $e0, $e2, $e7, $e9, $e6, $f0, $0b, $1b, $1a
2186c     12 0F 0D 08 
21870     06 08 0B 06 
21874     08 05 03 FD 
21878     FC 00 F0 E7 | 	byte	$12, $0f, $0d, $08, $06, $08, $0b, $06, $08, $05, $03, $fd, $fc, $00, $f0, $e7
2187c     EF 00 10 15 
21880     15 06 FC F4 
21884     F2 FA 06 06 
21888     06 06 03 02 | 	byte	$ef, $00, $10, $15, $15, $06, $fc, $f4, $f2, $fa, $06, $06, $06, $06, $03, $02
2188c     F7 FD FA F2 
21890     E6 E2 ED 03 
21894     10 16 0D 0A 
21898     0F 06 F2 E7 | 	byte	$f7, $fd, $fa, $f2, $e6, $e2, $ed, $03, $10, $16, $0d, $0a, $0f, $06, $f2, $e7
2189c     EE 05 12 12 
218a0     0B FC E5 E0 
218a4     E0 E6 EA FA 
218a8     16 1F 1E 14 | 	byte	$ee, $05, $12, $12, $0b, $fc, $e5, $e0, $e0, $e6, $ea, $fa, $16, $1f, $1e, $14
218ac     0C 0C 06 06 
218b0     03 03 06 06 
218b4     01 07 FE FE 
218b8     FE FC EF ED | 	byte	$0c, $0c, $06, $06, $03, $03, $06, $06, $01, $07, $fe, $fe, $fe, $fc, $ef, $ed
218bc     F8 0A 0C 0A 
218c0     0D 02 F9 F7 
218c4     F7 05 06 07 
218c8     06 06 FE FC | 	byte	$f8, $0a, $0c, $0a, $0d, $02, $f9, $f7, $f7, $05, $06, $07, $06, $06, $fe, $fc
218cc     00 F8 F8 E9 
218d0     E4 E5 F8 0B 
218d4     12 0F 10 0D 
218d8     0B FE EA E7 | 	byte	$00, $f8, $f8, $e9, $e4, $e5, $f8, $0b, $12, $0f, $10, $0d, $0b, $fe, $ea, $e7
218dc     FA 0A 0F 0A 
218e0     01 F0 E1 E0 
218e4     DB EB FE 15 
218e8     24 22 15 10 | 	byte	$fa, $0a, $0f, $0a, $01, $f0, $e1, $e0, $db, $eb, $fe, $15, $24, $22, $15, $10
218ec     05 05 05 07 
218f0     05 FE 02 02 
218f4     05 05 FA 05 
218f8     01 F7 EA F7 | 	byte	$05, $05, $05, $07, $05, $fe, $02, $02, $05, $05, $fa, $05, $01, $f7, $ea, $f7
218fc     05 06 06 0F 
21900     05 03 FA F8 
21904     FA 07 06 06 
21908     06 03 01 01 | 	byte	$05, $06, $06, $0f, $05, $03, $fa, $f8, $fa, $07, $06, $06, $06, $03, $01, $01
2190c     F7 F0 E7 E2 
21910     E5 F4 07 12 
21914     15 11 0B 08 
21918     03 E7 E2 F7 | 	byte	$f7, $f0, $e7, $e2, $e5, $f4, $07, $12, $15, $11, $0b, $08, $03, $e7, $e2, $f7
2191c     06 0C 0B 03 
21920     F9 ED DD D8 
21924     E4 07 1D 22 
21928     24 1A 0D 06 | 	byte	$06, $0c, $0b, $03, $f9, $ed, $dd, $d8, $e4, $07, $1d, $22, $24, $1a, $0d, $06
2192c     03 07 06 02 
21930     00 FE 01 01 
21934     05 05 02 05 
21938     F9 F2 F2 FE | 	byte	$03, $07, $06, $02, $00, $fe, $01, $01, $05, $05, $02, $05, $f9, $f2, $f2, $fe
2193c     03 05 08 06 
21940     03 FC F9 FC 
21944     03 05 03 02 
21948     03 03 01 F9 | 	byte	$03, $05, $08, $06, $03, $fc, $f9, $fc, $03, $05, $03, $02, $03, $03, $01, $f9
2194c     EF E9 E5 EA 
21950     F4 01 0F 14 
21954     14 0D 05 01 
21958     EF E1 EB FC | 	byte	$ef, $e9, $e5, $ea, $f4, $01, $0f, $14, $14, $0d, $05, $01, $ef, $e1, $eb, $fc
2195c     07 0F 01 FD 
21960     F2 DD D6 EF 
21964     12 22 20 1E 
21968     15 0C 07 01 | 	byte	$07, $0f, $01, $fd, $f2, $dd, $d6, $ef, $12, $22, $20, $1e, $15, $0c, $07, $01
2196c     03 05 03 08 
21970     F9 FC FC 03 
21974     06 03 00 00 
21978     F5 F2 F5 FC | 	byte	$03, $05, $03, $08, $f9, $fc, $fc, $03, $06, $03, $00, $00, $f5, $f2, $f5, $fc
2197c     06 07 06 01 
21980     01 FC F7 03 
21984     05 03 03 05 
21988     08 00 F8 F7 | 	byte	$06, $07, $06, $01, $01, $fc, $f7, $03, $05, $03, $03, $05, $08, $00, $f8, $f7
2198c     EF E9 E5 F4 
21990     FC 03 12 12 
21994     12 0A 06 F7 
21998     E1 E1 F3 06 | 	byte	$ef, $e9, $e5, $f4, $fc, $03, $12, $12, $12, $0a, $06, $f7, $e1, $e1, $f3, $06
2199c     08 0A FE F4 
219a0     E2 DB EF 10 
219a4     24 25 1D 16 
219a8     0C 01 00 05 | 	byte	$08, $0a, $fe, $f4, $e2, $db, $ef, $10, $24, $25, $1d, $16, $0c, $01, $00, $05
219ac     0A 0A 05 07 
219b0     F9 F9 FE 06 
219b4     03 02 06 FC 
219b8     F2 ED F4 03 | 	byte	$0a, $0a, $05, $07, $f9, $f9, $fe, $06, $03, $02, $06, $fc, $f2, $ed, $f4, $03
219bc     0A 07 0A 05 
219c0     01 FD FC FC 
219c4     06 02 03 05 
219c8     FE FE F8 F0 | 	byte	$0a, $07, $0a, $05, $01, $fd, $fc, $fc, $06, $02, $03, $05, $fe, $fe, $f8, $f0
219cc     EE E9 F2 F9 
219d0     FE 0A 11 12 
219d4     12 05 FC EA 
219d8     DB E0 F9 08 | 	byte	$ee, $e9, $f2, $f9, $fe, $0a, $11, $12, $12, $05, $fc, $ea, $db, $e0, $f9, $08
219dc     01 FE FD EE 
219e0     E7 F9 15 22 
219e4     22 1E 10 01 
219e8     01 FC 06 0B | 	byte	$01, $fe, $fd, $ee, $e7, $f9, $15, $22, $22, $1e, $10, $01, $01, $fc, $06, $0b
219ec     0D 0C 06 FD 
219f0     F3 F3 01 08 
219f4     06 07 02 F8 
219f8     E7 ED F7 06 | 	byte	$0d, $0c, $06, $fd, $f3, $f3, $01, $08, $06, $07, $02, $f8, $e7, $ed, $f7, $06
219fc     07 06 0B 0A 
21a00     02 FA FC FE 
21a04     01 05 01 FC 
21a08     F9 F7 F2 EF | 	byte	$07, $06, $0b, $0a, $02, $fa, $fc, $fe, $01, $05, $01, $fc, $f9, $f7, $f2, $ef
21a0c     EB EF FC FC 
21a10     05 0C 11 14 
21a14     0A FD EF DD 
21a18     D8 EA 03 03 | 	byte	$eb, $ef, $fc, $fc, $05, $0c, $11, $14, $0a, $fd, $ef, $dd, $d8, $ea, $03, $03
21a1c     FC FA F4 FD 
21a20     0D 14 1E 20 
21a24     1E 0A 06 FC 
21a28     F9 03 0D 10 | 	byte	$fc, $fa, $f4, $fd, $0d, $14, $1e, $20, $1e, $0a, $06, $fc, $f9, $03, $0d, $10
21a2c     08 07 01 F9 
21a30     EF F4 05 0A 
21a34     0C 07 00 EB 
21a38     E7 F2 01 03 | 	byte	$08, $07, $01, $f9, $ef, $f4, $05, $0a, $0c, $07, $00, $eb, $e7, $f2, $01, $03
21a3c     01 0C 12 0C 
21a40     02 F9 00 00 
21a44     01 FA FE F3 
21a48     F7 F7 F4 F2 | 	byte	$01, $0c, $12, $0c, $02, $f9, $00, $00, $01, $fa, $fe, $f3, $f7, $f7, $f4, $f2
21a4c     ED F8 01 03 
21a50     08 0B 0D 0B 
21a54     00 F7 E4 D8 
21a58     E0 F2 03 FE | 	byte	$ed, $f8, $01, $03, $08, $0b, $0d, $0b, $00, $f7, $e4, $d8, $e0, $f2, $03, $fe
21a5c     FA F5 08 19 
21a60     1A 1D 1F 18 
21a64     0C 00 F5 F8 
21a68     01 11 11 10 | 	byte	$fa, $f5, $08, $19, $1a, $1d, $1f, $18, $0c, $00, $f5, $f8, $01, $11, $11, $10
21a6c     06 02 01 F2 
21a70     EF 01 06 08 
21a74     0A 03 F7 E6 
21a78     ED FC 01 03 | 	byte	$06, $02, $01, $f2, $ef, $01, $06, $08, $0a, $03, $f7, $e6, $ed, $fc, $01, $03
21a7c     08 0C 12 06 
21a80     01 FC FE FC 
21a84     FD F8 F0 F5 
21a88     F5 FC F3 F2 | 	byte	$08, $0c, $12, $06, $01, $fc, $fe, $fc, $fd, $f8, $f0, $f5, $f5, $fc, $f3, $f2
21a8c     F4 F8 01 01 
21a90     03 10 0B 03 
21a94     F8 EF DB D8 
21a98     EA FC 00 F4 | 	byte	$f4, $f8, $01, $01, $03, $10, $0b, $03, $f8, $ef, $db, $d8, $ea, $fc, $00, $f4
21a9c     FE 0F 1F 22 
21aa0     1F 1A 1D 08 
21aa4     FE F5 F2 00 
21aa8     0D 19 14 0C | 	byte	$fe, $0f, $1f, $22, $1f, $1a, $1d, $08, $fe, $f5, $f2, $00, $0d, $19, $14, $0c
21aac     05 00 F7 EF 
21ab0     F9 06 0B 0B 
21ab4     07 F9 E7 E7 
21ab8     F4 01 0B 08 | 	byte	$05, $00, $f7, $ef, $f9, $06, $0b, $0b, $07, $f9, $e7, $e7, $f4, $01, $0b, $08
21abc     0C 11 0C 00 
21ac0     FE FC 00 FE 
21ac4     F4 EE F3 F5 
21ac8     F8 F9 F3 F8 | 	byte	$0c, $11, $0c, $00, $fe, $fc, $00, $fe, $f4, $ee, $f3, $f5, $f8, $f9, $f3, $f8
21acc     FA 02 02 FD 
21ad0     06 0B 03 FC 
21ad4     F4 E6 D3 DD 
21ad8     F4 FC F8 02 | 	byte	$fa, $02, $02, $fd, $06, $0b, $03, $fc, $f4, $e6, $d3, $dd, $f4, $fc, $f8, $02
21adc     18 24 25 1E 
21ae0     1A 15 08 03 
21ae4     F4 F0 FC 08 
21ae8     15 15 0D 08 | 	byte	$18, $24, $25, $1e, $1a, $15, $08, $03, $f4, $f0, $fc, $08, $15, $15, $0d, $08
21aec     02 FC F4 F3 
21af0     FE 0B 0B 08 
21af4     01 EE E2 EA 
21af8     F9 08 0D 10 | 	byte	$02, $fc, $f4, $f3, $fe, $0b, $0b, $08, $01, $ee, $e2, $ea, $f9, $08, $0d, $10
21afc     11 0F 02 FD 
21b00     FD FC F8 F7 
21b04     F2 F0 EF F7 
21b08     F7 F2 F9 F9 | 	byte	$11, $0f, $02, $fd, $fd, $fc, $f8, $f7, $f2, $f0, $ef, $f7, $f7, $f2, $f9, $f9
21b0c     03 02 FE FC 
21b10     02 01 FE F4 
21b14     EA DF DB E5 
21b18     F2 FE 07 19 | 	byte	$03, $02, $fe, $fc, $02, $01, $fe, $f4, $ea, $df, $db, $e5, $f2, $fe, $07, $19
21b1c     23 24 23 19 
21b20     10 08 00 F9 
21b24     F9 F8 00 0C 
21b28     11 0F 0A 07 | 	byte	$23, $24, $23, $19, $10, $08, $00, $f9, $f9, $f8, $00, $0c, $11, $0f, $0a, $07
21b2c     00 FC EF F5 
21b30     05 0B 0B 06 
21b34     FA E9 E5 F4 
21b38     02 0F 0F 0A | 	byte	$00, $fc, $ef, $f5, $05, $0b, $0b, $06, $fa, $e9, $e5, $f4, $02, $0f, $0f, $0a
21b3c     0D 05 00 00 
21b40     FA F9 F8 F0 
21b44     F2 F0 EF F5 
21b48     F4 F4 FC 02 | 	byte	$0d, $05, $00, $00, $fa, $f9, $f8, $f0, $f2, $f0, $ef, $f5, $f4, $f4, $fc, $02
21b4c     05 FD FC F9 
21b50     00 00 FA EB 
21b54     E4 DF DD EF 
21b58     FE 14 1B 20 | 	byte	$05, $fd, $fc, $f9, $00, $00, $fa, $eb, $e4, $df, $dd, $ef, $fe, $14, $1b, $20
21b5c     24 1F 1A 11 
21b60     07 02 F9 FC 
21b64     FA F8 0A 0F 
21b68     11 0B 0B 05 | 	byte	$24, $1f, $1a, $11, $07, $02, $f9, $fc, $fa, $f8, $0a, $0f, $11, $0b, $0b, $05
21b6c     FC F3 F2 F9 
21b70     0A 0F 0A FC 
21b74     F0 EA ED 00 
21b78     0F 10 08 0A | 	byte	$fc, $f3, $f2, $f9, $0a, $0f, $0a, $fc, $f0, $ea, $ed, $00, $0f, $10, $08, $0a
21b7c     07 01 00 00 
21b80     F4 F4 F2 F2 
21b84     EF E9 EA F5 
21b88     FC FE 02 05 | 	byte	$07, $01, $00, $00, $f4, $f4, $f2, $f2, $ef, $e9, $ea, $f5, $fc, $fe, $02, $05
21b8c     02 F8 F7 F9 
21b90     FE FC EF E7 
21b94     E4 DB E1 00 
21b98     15 20 1D 24 | 	byte	$02, $f8, $f7, $f9, $fe, $fc, $ef, $e7, $e4, $db, $e1, $00, $15, $20, $1d, $24
21b9c     1F 1A 11 0A 
21ba0     FC F7 FE FE 
21ba4     F8 00 0A 10 
21ba8     14 0B 06 00 | 	byte	$1f, $1a, $11, $0a, $fc, $f7, $fe, $fe, $f8, $00, $0a, $10, $14, $0b, $06, $00
21bac     FA EE F4 FE 
21bb0     0F 07 02 F9 
21bb4     EF EE F7 0A 
21bb8     10 0B 0B 06 | 	byte	$fa, $ee, $f4, $fe, $0f, $07, $02, $f9, $ef, $ee, $f7, $0a, $10, $0b, $0b, $06
21bbc     06 01 FE F7 
21bc0     F4 F4 F5 F2 
21bc4     ED E2 E7 F5 
21bc8     01 02 0B 01 | 	byte	$06, $01, $fe, $f7, $f4, $f4, $f5, $f2, $ed, $e2, $e7, $f5, $01, $02, $0b, $01
21bcc     00 F3 F3 F5 
21bd0     FE F9 ED E6 
21bd4     DF DB FC 15 
21bd8     22 24 1F 1E | 	byte	$00, $f3, $f3, $f5, $fe, $f9, $ed, $e6, $df, $db, $fc, $15, $22, $24, $1f, $1e
21bdc     1B 0D 07 01 
21be0     F9 00 FE 02 
21be4     F9 00 0F 11 
21be8     11 0A 06 FD | 	byte	$1b, $0d, $07, $01, $f9, $00, $fe, $02, $f9, $00, $0f, $11, $11, $0a, $06, $fd
21bec     F5 F3 F4 02 
21bf0     07 0B 00 F9 
21bf4     EE F3 00 0C 
21bf8     0F 07 06 06 | 	byte	$f5, $f3, $f4, $02, $07, $0b, $00, $f9, $ee, $f3, $00, $0c, $0f, $07, $06, $06
21bfc     01 FE FC F3 
21c00     F2 F2 F7 EB 
21c04     E1 E0 EE 02 
21c08     02 0A 08 00 | 	byte	$01, $fe, $fc, $f3, $f2, $f2, $f7, $eb, $e1, $e0, $ee, $02, $02, $0a, $08, $00
21c0c     F3 F3 F2 FA 
21c10     FA F7 EE E4 
21c14     DD F0 0D 23 
21c18     23 20 1B 15 | 	byte	$f3, $f3, $f2, $fa, $fa, $f7, $ee, $e4, $dd, $f0, $0d, $23, $23, $20, $1b, $15
21c1c     11 0A 05 00 
21c20     FD 00 FE FE 
21c24     F9 03 10 10 
21c28     0A 0A 05 FE | 	byte	$11, $0a, $05, $00, $fd, $00, $fe, $fe, $f9, $03, $10, $10, $0a, $0a, $05, $fe
21c2c     F4 F2 F8 03 
21c30     0C 07 00 F7 
21c34     F2 F3 02 0D 
21c38     0A 05 02 0A | 	byte	$f4, $f2, $f8, $03, $0c, $07, $00, $f7, $f2, $f3, $02, $0d, $0a, $05, $02, $0a
21c3c     01 F9 F7 F2 
21c40     F4 EF EE E5 
21c44     DB E6 FE 08 
21c48     0B 0A 02 FE | 	byte	$01, $f9, $f7, $f2, $f4, $ef, $ee, $e5, $db, $e6, $fe, $08, $0b, $0a, $02, $fe
21c4c     F3 ED F3 F9 
21c50     F5 EF E5 E7 
21c54     F4 11 22 23 
21c58     22 1B 12 12 | 	byte	$f3, $ed, $f3, $f9, $f5, $ef, $e5, $e7, $f4, $11, $22, $23, $22, $1b, $12, $12
21c5c     0A 01 02 00 
21c60     00 FE 02 FE 
21c64     00 08 0C 0C 
21c68     0B 0A 05 F9 | 	byte	$0a, $01, $02, $00, $00, $fe, $02, $fe, $00, $08, $0c, $0c, $0b, $0a, $05, $f9
21c6c     EE F5 00 0B 
21c70     0D 05 F9 F2 
21c74     F0 FA 06 08 
21c78     05 03 06 05 | 	byte	$ee, $f5, $00, $0b, $0d, $05, $f9, $f2, $f0, $fa, $06, $08, $05, $03, $06, $05
21c7c     FE F5 F4 F0 
21c80     F0 EE E6 DB 
21c84     E4 F5 07 08 
21c88     05 03 FD F5 | 	byte	$fe, $f5, $f4, $f0, $f0, $ee, $e6, $db, $e4, $f5, $07, $08, $05, $03, $fd, $f5
21c8c     EE EF F5 F7 
21c90     F3 E5 EB FA 
21c94     0F 1E 24 1E 
21c98     16 11 11 10 | 	byte	$ee, $ef, $f5, $f7, $f3, $e5, $eb, $fa, $0f, $1e, $24, $1e, $16, $11, $11, $10
21c9c     07 01 00 FC 
21ca0     FE 00 FC 00 
21ca4     02 08 11 0A 
21ca8     08 06 FA F3 | 	byte	$07, $01, $00, $fc, $fe, $00, $fc, $00, $02, $08, $11, $0a, $08, $06, $fa, $f3
21cac     EE 00 08 0D 
21cb0     08 FE F5 EE 
21cb4     F5 03 08 03 
21cb8     02 03 03 01 | 	byte	$ee, $00, $08, $0d, $08, $fe, $f5, $ee, $f5, $03, $08, $03, $02, $03, $03, $01
21cbc     FD F4 F0 EE 
21cc0     EE E6 DA E0 
21cc4     F0 02 0A 06 
21cc8     02 01 FA F0 | 	byte	$fd, $f4, $f0, $ee, $ee, $e6, $da, $e0, $f0, $02, $0a, $06, $02, $01, $fa, $f0
21ccc     F0 F2 F5 F7 
21cd0     ED F0 F7 0D 
21cd4     1E 25 1D 15 
21cd8     0F 0F 0F 0A | 	byte	$f0, $f2, $f5, $f7, $ed, $f0, $f7, $0d, $1e, $25, $1d, $15, $0f, $0f, $0f, $0a
21cdc     08 00 FE 00 
21ce0     00 FE FC FE 
21ce4     07 10 11 0C 
21ce8     06 FC F0 F5 | 	byte	$08, $00, $fe, $00, $00, $fe, $fc, $fe, $07, $10, $11, $0c, $06, $fc, $f0, $f5
21cec     FA 07 0F 0F 
21cf0     02 F5 F0 F5 
21cf4     02 06 06 03 
21cf8     05 02 00 FA | 	byte	$fa, $07, $0f, $0f, $02, $f5, $f0, $f5, $02, $06, $06, $03, $05, $02, $00, $fa
21cfc     F8 F4 EE EE 
21d00     E9 DF DB ED 
21d04     FC 07 06 05 
21d08     05 FE F0 F0 | 	byte	$f8, $f4, $ee, $ee, $e9, $df, $db, $ed, $fc, $07, $06, $05, $05, $fe, $f0, $f0
21d0c     F0 F2 F2 F2 
21d10     F8 FC 0B 1B 
21d14     24 1F 11 0C 
21d18     0C 0B 0C 07 | 	byte	$f0, $f2, $f2, $f2, $f8, $fc, $0b, $1b, $24, $1f, $11, $0c, $0c, $0b, $0c, $07
21d1c     06 00 F8 FE 
21d20     02 FE FE 00 
21d24     0F 10 0F 08 
21d28     02 F5 F2 FC | 	byte	$06, $00, $f8, $fe, $02, $fe, $fe, $00, $0f, $10, $0f, $08, $02, $f5, $f2, $fc
21d2c     06 0C 0C 07 
21d30     FA EB F0 FE 
21d34     05 06 02 05 
21d38     02 FC FC F9 | 	byte	$06, $0c, $0c, $07, $fa, $eb, $f0, $fe, $05, $06, $02, $05, $02, $fc, $fc, $f9
21d3c     F8 ED E7 E6 
21d40     E1 DF E6 F3 
21d44     00 05 08 07 
21d48     02 F8 EF ED | 	byte	$f8, $ed, $e7, $e6, $e1, $df, $e6, $f3, $00, $05, $08, $07, $02, $f8, $ef, $ed
21d4c     EE EF F5 FE 
21d50     01 07 1A 1D 
21d54     1D 14 0C 0C 
21d58     08 0C 0C 08 | 	byte	$ee, $ef, $f5, $fe, $01, $07, $1a, $1d, $1d, $14, $0c, $0c, $08, $0c, $0c, $08
21d5c     03 FA FA FE 
21d60     FE FE 00 0A 
21d64     0B 10 0B 08 
21d68     FC F8 F9 00 | 	byte	$03, $fa, $fa, $fe, $fe, $fe, $00, $0a, $0b, $10, $0b, $08, $fc, $f8, $f9, $00
21d6c     08 0A 08 00 
21d70     F3 E9 FA 02 
21d74     0C 05 05 01 
21d78     FC FE FE F8 | 	byte	$08, $0a, $08, $00, $f3, $e9, $fa, $02, $0c, $05, $05, $01, $fc, $fe, $fe, $f8
21d7c     EF E6 E5 E0 
21d80     E0 E4 EF F9 
21d84     06 0A 0B 07 
21d88     FC F2 EE EB | 	byte	$ef, $e6, $e5, $e0, $e0, $e4, $ef, $f9, $06, $0a, $0b, $07, $fc, $f2, $ee, $eb
21d8c     EB F7 05 0A 
21d90     0A 0A 14 1D 
21d94     15 11 0B 0D 
21d98     08 0A 0F 00 | 	byte	$eb, $f7, $05, $0a, $0a, $0a, $14, $1d, $15, $11, $0b, $0d, $08, $0a, $0f, $00
21d9c     F9 F9 F8 FC 
21da0     00 05 06 08 
21da4     0B 0A 0D 00 
21da8     F9 FC 02 03 | 	byte	$f9, $f9, $f8, $fc, $00, $05, $06, $08, $0b, $0a, $0d, $00, $f9, $fc, $02, $03
21dac     03 08 02 F8 
21db0     EB F4 02 0A 
21db4     07 05 01 FD 
21db8     FA FE F8 F2 | 	byte	$03, $08, $02, $f8, $eb, $f4, $02, $0a, $07, $05, $01, $fd, $fa, $fe, $f8, $f2
21dbc     E7 E5 E1 E0 
21dc0     E2 EB F3 01 
21dc4     07 0C 08 FD 
21dc8     F4 EF EB EA | 	byte	$e7, $e5, $e1, $e0, $e2, $eb, $f3, $01, $07, $0c, $08, $fd, $f4, $ef, $eb, $ea
21dcc     F5 07 10 0C 
21dd0     02 0D 16 1B 
21dd4     14 0D 0D 0C 
21dd8     0B 08 03 FC | 	byte	$f5, $07, $10, $0c, $02, $0d, $16, $1b, $14, $0d, $0d, $0c, $0b, $08, $03, $fc
21ddc     F5 F7 FC 00 
21de0     03 06 06 0C 
21de4     0C 0B 03 02 
21de8     00 01 01 05 | 	byte	$f5, $f7, $fc, $00, $03, $06, $06, $0c, $0c, $0b, $03, $02, $00, $01, $01, $05
21dec     0B 07 FA EE 
21df0     F0 FA 06 07 
21df4     06 01 FA FC 
21df8     FD F8 F7 EB | 	byte	$0b, $07, $fa, $ee, $f0, $fa, $06, $07, $06, $01, $fa, $fc, $fd, $f8, $f7, $eb
21dfc     E6 E1 E2 E2 
21e00     ED F4 FE 07 
21e04     0D 08 03 F5 
21e08     EF E9 EA F0 | 	byte	$e6, $e1, $e2, $e2, $ed, $f4, $fe, $07, $0d, $08, $03, $f5, $ef, $e9, $ea, $f0
21e0c     07 12 0B 07 
21e10     08 15 19 15 
21e14     14 0C 0D 0B 
21e18     0A 02 FC F4 | 	byte	$07, $12, $0b, $07, $08, $15, $19, $15, $14, $0c, $0d, $0b, $0a, $02, $fc, $f4
21e1c     F2 FA 01 02 
21e20     03 06 0A 0D 
21e24     0B 07 07 00 
21e28     FE FE 03 06 | 	byte	$f2, $fa, $01, $02, $03, $06, $0a, $0d, $0b, $07, $07, $00, $fe, $fe, $03, $06
21e2c     08 00 F3 EB 
21e30     F7 01 08 07 
21e34     00 00 FE FA 
21e38     FE F4 F0 E7 | 	byte	$08, $00, $f3, $eb, $f7, $01, $08, $07, $00, $00, $fe, $fa, $fe, $f4, $f0, $e7
21e3c     E0 E0 E2 EA 
21e40     F4 FA 06 07 
21e44     0D 07 FC F2 
21e48     E9 E5 EF 03 | 	byte	$e0, $e0, $e2, $ea, $f4, $fa, $06, $07, $0d, $07, $fc, $f2, $e9, $e5, $ef, $03
21e4c     14 11 03 03 
21e50     0D 15 18 12 
21e54     0F 0C 0A 0A 
21e58     07 00 F4 F0 | 	byte	$14, $11, $03, $03, $0d, $15, $18, $12, $0f, $0c, $0a, $0a, $07, $00, $f4, $f0
21e5c     F7 FC 01 02 
21e60     05 06 0C 0D 
21e64     0B 06 02 00 
21e68     FC 00 06 06 | 	byte	$f7, $fc, $01, $02, $05, $06, $0c, $0d, $0b, $06, $02, $00, $fc, $00, $06, $06
21e6c     05 FE F0 EB 
21e70     F7 06 08 06 
21e74     02 FD FD FD 
21e78     F8 F3 EB E0 | 	byte	$05, $fe, $f0, $eb, $f7, $06, $08, $06, $02, $fd, $fd, $fd, $f8, $f3, $eb, $e0
21e7c     DF E1 EB F0 
21e80     FE 03 0D 08 
21e84     06 02 F4 EE 
21e88     E4 EB FC 0F | 	byte	$df, $e1, $eb, $f0, $fe, $03, $0d, $08, $06, $02, $f4, $ee, $e4, $eb, $fc, $0f
21e8c     14 08 02 07 
21e90     10 16 15 11 
21e94     10 0D 08 05 
21e98     00 FA F3 F2 | 	byte	$14, $08, $02, $07, $10, $16, $15, $11, $10, $0d, $08, $05, $00, $fa, $f3, $f2
21e9c     F8 00 03 06 
21ea0     0A 0C 10 0A 
21ea4     08 06 02 FE 
21ea8     FE 00 03 06 | 	byte	$f8, $00, $03, $06, $0a, $0c, $10, $0a, $08, $06, $02, $fe, $fe, $00, $03, $06
21eac     00 F2 EA F3 
21eb0     03 07 05 05 
21eb4     01 00 F9 F9 
21eb8     F7 F0 E4 DD | 	byte	$00, $f2, $ea, $f3, $03, $07, $05, $05, $01, $00, $f9, $f9, $f7, $f0, $e4, $dd
21ebc     DA E7 F2 FC 
21ec0     03 0B 0A 08 
21ec4     06 FC EF E9 
21ec8     E7 F4 02 10 | 	byte	$da, $e7, $f2, $fc, $03, $0b, $0a, $08, $06, $fc, $ef, $e9, $e7, $f4, $02, $10
21ecc     10 05 05 0C 
21ed0     14 14 15 10 
21ed4     0D 08 03 FD 
21ed8     00 F4 F0 F3 | 	byte	$10, $05, $05, $0c, $14, $14, $15, $10, $0d, $08, $03, $fd, $00, $f4, $f0, $f3
21edc     FC 02 05 0A 
21ee0     0C 0C 08 07 
21ee4     06 05 FD 00 
21ee8     02 05 05 07 | 	byte	$fc, $02, $05, $0a, $0c, $0c, $08, $07, $06, $05, $fd, $00, $02, $05, $05, $07
21eec     F7 EB ED FA 
21ef0     05 07 03 03 
21ef4     00 FC F9 F9 
21ef8     F7 EA DD DA | 	byte	$f7, $eb, $ed, $fa, $05, $07, $03, $03, $00, $fc, $f9, $f9, $f7, $ea, $dd, $da
21efc     E6 EF FC 02 
21f00     0B 0B 0B 05 
21f04     02 F4 EB E6 
21f08     EE FC 0A 15 | 	byte	$e6, $ef, $fc, $02, $0b, $0b, $0b, $05, $02, $f4, $eb, $e6, $ee, $fc, $0a, $15
21f0c     08 07 07 0F 
21f10     16 11 10 10 
21f14     0A 02 02 FD 
21f18     F9 F5 F0 F9 | 	byte	$08, $07, $07, $0f, $16, $11, $10, $10, $0a, $02, $02, $fd, $f9, $f5, $f0, $f9
21f1c     01 07 07 0D 
21f20     10 0A 08 05 
21f24     07 00 02 02 
21f28     FD 07 02 FD | 	byte	$01, $07, $07, $0d, $10, $0a, $08, $05, $07, $00, $02, $02, $fd, $07, $02, $fd
21f2c     EB EB F9 01 
21f30     05 03 02 03 
21f34     FE F9 F9 F7 
21f38     F2 E1 D7 E1 | 	byte	$eb, $eb, $f9, $01, $05, $03, $02, $03, $fe, $f9, $f9, $f7, $f2, $e1, $d7, $e1
21f3c     ED FC 02 07 
21f40     0A 0C 07 02 
21f44     F5 ED E6 ED 
21f48     F7 0D 11 0C | 	byte	$ed, $fc, $02, $07, $0a, $0c, $07, $02, $f5, $ed, $e6, $ed, $f7, $0d, $11, $0c
21f4c     05 07 0F 14 
21f50     11 0C 0D 08 
21f54     05 FD FE FE 
21f58     F7 F2 F5 FC | 	byte	$05, $07, $0f, $14, $11, $0c, $0d, $08, $05, $fd, $fe, $fe, $f7, $f2, $f5, $fc
21f5c     05 0C 0F 0C 
21f60     0A 07 05 05 
21f64     03 01 01 03 
21f68     03 01 FE EF | 	byte	$05, $0c, $0f, $0c, $0a, $07, $05, $05, $03, $01, $01, $03, $03, $01, $fe, $ef
21f6c     EA F3 FD 06 
21f70     07 02 02 01 
21f74     FC F7 F7 F2 
21f78     E5 DB DB EA | 	byte	$ea, $f3, $fd, $06, $07, $02, $02, $01, $fc, $f7, $f7, $f2, $e5, $db, $db, $ea
21f7c     F8 03 0A 0F 
21f80     0B 08 01 FC 
21f84     ED E7 E9 F4 
21f88     05 10 12 08 | 	byte	$f8, $03, $0a, $0f, $0b, $08, $01, $fc, $ed, $e7, $e9, $f4, $05, $10, $12, $08
21f8c     02 0D 14 15 
21f90     0D 0B 08 06 
21f94     00 FC FD FA 
21f98     F5 F3 FD 01 | 	byte	$02, $0d, $14, $15, $0d, $0b, $08, $06, $00, $fc, $fd, $fa, $f5, $f3, $fd, $01
21f9c     08 0C 0F 0D 
21fa0     08 08 05 06 
21fa4     00 02 03 01 
21fa8     03 FD F5 ED | 	byte	$08, $0c, $0f, $0d, $08, $08, $05, $06, $00, $02, $03, $01, $03, $fd, $f5, $ed
21fac     F2 FC 06 06 
21fb0     05 05 01 FD 
21fb4     F8 F3 F3 EE 
21fb8     DC DA E4 F5 | 	byte	$f2, $fc, $06, $06, $05, $05, $01, $fd, $f8, $f3, $f3, $ee, $dc, $da, $e4, $f5
21fbc     01 08 0F 0F 
21fc0     0B 05 FD F0 
21fc4     EB E9 ED FD 
21fc8     0B 0D 07 03 | 	byte	$01, $08, $0f, $0f, $0b, $05, $fd, $f0, $eb, $e9, $ed, $fd, $0b, $0d, $07, $03
21fcc     0B 14 18 11 
21fd0     0A 0B 06 00 
21fd4     FC F8 FA FA 
21fd8     F5 FA 00 05 | 	byte	$0b, $14, $18, $11, $0a, $0b, $06, $00, $fc, $f8, $fa, $fa, $f5, $fa, $00, $05
21fdc     0C 0D 0C 0C 
21fe0     07 07 07 01 
21fe4     00 01 05 01 
21fe8     00 F4 EB EE | 	byte	$0c, $0d, $0c, $0c, $07, $07, $07, $01, $00, $01, $05, $01, $00, $f4, $eb, $ee
21fec     F8 03 0A 03 
21ff0     03 01 00 F8 
21ff4     F7 F2 EA E0 
21ff8     D8 E6 F5 FD | 	byte	$f8, $03, $0a, $03, $03, $01, $00, $f8, $f7, $f2, $ea, $e0, $d8, $e6, $f5, $fd
21ffc     0A 10 10 0D 
22000     05 FD F3 ED 
22004     E7 ED F7 05 
22008     0C 07 02 08 | 	byte	$0a, $10, $10, $0d, $05, $fd, $f3, $ed, $e7, $ed, $f7, $05, $0c, $07, $02, $08
2200c     14 19 14 0D 
22010     08 05 01 FD 
22014     FA FC F9 F9 
22018     F7 FE 03 08 | 	byte	$14, $19, $14, $0d, $08, $05, $01, $fd, $fa, $fc, $f9, $f9, $f7, $fe, $03, $08
2201c     0B 0F 0D 0A 
22020     07 08 05 03 
22024     FE 02 01 00 
22028     F9 EE E7 F5 | 	byte	$0b, $0f, $0d, $0a, $07, $08, $05, $03, $fe, $02, $01, $00, $f9, $ee, $e7, $f5
2202c     02 07 07 03 
22030     06 01 00 F7 
22034     F2 EB E1 DB 
22038     E0 F3 FD 0B | 	byte	$02, $07, $07, $03, $06, $01, $00, $f7, $f2, $eb, $e1, $db, $e0, $f3, $fd, $0b
2203c     10 12 0C 05 
22040     FE F7 EE E9 
22044     EE F2 00 0B 
22048     0A 01 06 0F | 	byte	$10, $12, $0c, $05, $fe, $f7, $ee, $e9, $ee, $f2, $00, $0b, $0a, $01, $06, $0f
2204c     15 15 0C 07 
22050     05 02 00 FC 
22054     F9 FA F9 F9 
22058     FC 05 03 0C | 	byte	$15, $15, $0c, $07, $05, $02, $00, $fc, $f9, $fa, $f9, $f9, $fc, $05, $03, $0c
2205c     0D 10 0A 0A 
22060     08 05 05 00 
22064     00 02 00 FD 
22068     F2 E6 EB FD | 	byte	$0d, $10, $0a, $0a, $08, $05, $05, $00, $00, $02, $00, $fd, $f2, $e6, $eb, $fd
2206c     07 07 08 03 
22070     07 01 F8 F3 
22074     EB E2 DA E1 
22078     F0 FD 07 11 | 	byte	$07, $07, $08, $03, $07, $01, $f8, $f3, $eb, $e2, $da, $e1, $f0, $fd, $07, $11
2207c     0F 0C 05 01 
22080     F8 F2 EB EB 
22084     EF FC 08 0B 
22088     07 FE 0B 12 | 	byte	$0f, $0c, $05, $01, $f8, $f2, $eb, $eb, $ef, $fc, $08, $0b, $07, $fe, $0b, $12
2208c     12 0D 07 02 
22090     01 02 FD 00 
22094     FA F8 F8 FD 
22098     00 02 0A 0C | 	byte	$12, $0d, $07, $02, $01, $02, $fd, $00, $fa, $f8, $f8, $fd, $00, $02, $0a, $0c
2209c     0F 10 0A 07 
220a0     06 02 01 FE 
220a4     02 03 FE F5 
220a8     EA E9 F7 06 | 	byte	$0f, $10, $0a, $07, $06, $02, $01, $fe, $02, $03, $fe, $f5, $ea, $e9, $f7, $06
220ac     08 06 07 05 
220b0     03 FA F4 EE 
220b4     E2 DB E0 F0 
220b8     FD 08 0D 0F | 	byte	$08, $06, $07, $05, $03, $fa, $f4, $ee, $e2, $db, $e0, $f0, $fd, $08, $0d, $0f
220bc     0C 07 02 FC 
220c0     F5 EF EA EF 
220c4     F8 06 0C 06 
220c8     FE 03 11 14 | 	byte	$0c, $07, $02, $fc, $f5, $ef, $ea, $ef, $f8, $06, $0c, $06, $fe, $03, $11, $14
220cc     0F 06 03 03 
220d0     03 FE 00 F9 
220d4     F8 F8 FC 01 
220d8     02 07 0D 11 | 	byte	$0f, $06, $03, $03, $03, $fe, $00, $f9, $f8, $f8, $fc, $01, $02, $07, $0d, $11
220dc     0F 0D 08 03 
220e0     01 00 00 00 
220e4     03 01 F7 EE 
220e8     E6 F5 05 08 | 	byte	$0f, $0d, $08, $03, $01, $00, $00, $00, $03, $01, $f7, $ee, $e6, $f5, $05, $08
220ec     08 06 07 02 
220f0     FA F3 ED E4 
220f4     DD E2 F0 FD 
220f8     08 0B 0F 0C | 	byte	$08, $06, $07, $02, $fa, $f3, $ed, $e4, $dd, $e2, $f0, $fd, $08, $0b, $0f, $0c
220fc     08 06 00 F5 
22100     EF ED EE F3 
22104     01 0A 0A FD 
22108     FC 0B 10 10 | 	byte	$08, $06, $00, $f5, $ef, $ed, $ee, $f3, $01, $0a, $0a, $fd, $fc, $0b, $10, $10
2210c     0A 05 05 02 
22110     03 FD F8 F8 
22114     F8 FC 00 02 
22118     06 0D 0F 0F | 	byte	$0a, $05, $05, $02, $03, $fd, $f8, $f8, $f8, $fc, $00, $02, $06, $0d, $0f, $0f
2211c     0F 08 06 02 
22120     00 FD 00 01 
22124     01 FC F2 E6 
22128     F0 02 08 07 | 	byte	$0f, $08, $06, $02, $00, $fd, $00, $01, $01, $fc, $f2, $e6, $f0, $02, $08, $07
2212c     07 06 02 FE 
22130     F5 EE E6 E1 
22134     E2 EF FD 06 
22138     0C 0C 0A 07 | 	byte	$07, $06, $02, $fe, $f5, $ee, $e6, $e1, $e2, $ef, $fd, $06, $0c, $0c, $0a, $07
2213c     07 03 F8 F0 
22140     ED EE F3 FD 
22144     07 0C 06 F9 
22148     01 0C 11 0C | 	byte	$07, $03, $f8, $f0, $ed, $ee, $f3, $fd, $07, $0c, $06, $f9, $01, $0c, $11, $0c
2214c     03 05 03 02 
22150     00 F8 F7 F9 
22154     FC 03 01 05 
22158     0A 0D 0F 0C | 	byte	$03, $05, $03, $02, $00, $f8, $f7, $f9, $fc, $03, $01, $05, $0a, $0d, $0f, $0c
2215c     07 07 05 01 
22160     FD 00 01 01 
22164     FE F5 EB EA 
22168     FD 08 0A 08 | 	byte	$07, $07, $05, $01, $fd, $00, $01, $01, $fe, $f5, $eb, $ea, $fd, $08, $0a, $08
2216c     08 01 FD F7 
22170     EE E6 E4 E4 
22174     F2 FD 05 0A 
22178     08 08 08 06 | 	byte	$08, $01, $fd, $f7, $ee, $e6, $e4, $e4, $f2, $fd, $05, $0a, $08, $08, $08, $06
2217c     03 FC F2 EF 
22180     EF F2 FD 06 
22184     0B 06 FA FC 
22188     0B 10 0B 06 | 	byte	$03, $fc, $f2, $ef, $ef, $f2, $fd, $06, $0b, $06, $fa, $fc, $0b, $10, $0b, $06
2218c     05 02 02 FE 
22190     F5 F7 FA FD 
22194     03 01 05 08 
22198     0C 0F 0C 08 | 	byte	$05, $02, $02, $fe, $f5, $f7, $fa, $fd, $03, $01, $05, $08, $0c, $0f, $0c, $08
2219c     07 03 00 FE 
221a0     FE 00 01 00 
221a4     F8 ED E6 F8 
221a8     07 0A 0A 07 | 	byte	$07, $03, $00, $fe, $fe, $00, $01, $00, $f8, $ed, $e6, $f8, $07, $0a, $0a, $07
221ac     03 FD F8 F0 
221b0     E9 E5 E6 F2 
221b4     FC 02 05 07 
221b8     0A 0A 0A 06 | 	byte	$03, $fd, $f8, $f0, $e9, $e5, $e6, $f2, $fc, $02, $05, $07, $0a, $0a, $0a, $06
221bc     FE F3 EF EE 
221c0     F2 FA 05 0A 
221c4     07 FC F8 07 
221c8     11 0F 08 06 | 	byte	$fe, $f3, $ef, $ee, $f2, $fa, $05, $0a, $07, $fc, $f8, $07, $11, $0f, $08, $06
221cc     03 00 FD F8 
221d0     F7 FA 01 01 
221d4     05 05 05 0C 
221d8     0D 0D 0A 08 | 	byte	$03, $00, $fd, $f8, $f7, $fa, $01, $01, $05, $05, $05, $0c, $0d, $0d, $0a, $08
221dc     05 00 FE FC 
221e0     FE 03 00 FC 
221e4     F2 E9 F3 05 
221e8     0B 08 07 05 | 	byte	$05, $00, $fe, $fc, $fe, $03, $00, $fc, $f2, $e9, $f3, $05, $0b, $08, $07, $05
221ec     01 F8 F2 EA 
221f0     E7 E5 EF FC 
221f4     00 05 05 08 
221f8     08 0A 06 FE | 	byte	$01, $f8, $f2, $ea, $e7, $e5, $ef, $fc, $00, $05, $05, $08, $08, $0a, $06, $fe
221fc     F5 F2 EF F2 
22200     F8 01 07 07 
22204     FE F7 03 11 
22208     10 0A 06 05 | 	byte	$f5, $f2, $ef, $f2, $f8, $01, $07, $07, $fe, $f7, $03, $11, $10, $0a, $06, $05
2220c     00 FC F7 F8 
22210     FC 00 05 05 
22214     03 03 08 0A 
22218     0A 0C 08 05 | 	byte	$00, $fc, $f7, $f8, $fc, $00, $05, $05, $03, $03, $08, $0a, $0a, $0c, $08, $05
2221c     02 FE FC FD 
22220     03 01 FC F5 
22224     EA ED 00 0A 
22228     0B 06 03 01 | 	byte	$02, $fe, $fc, $fd, $03, $01, $fc, $f5, $ea, $ed, $00, $0a, $0b, $06, $03, $01
2222c     FA F2 EF EB 
22230     E7 EE F9 02 
22234     01 05 05 08 
22238     08 05 00 F8 | 	byte	$fa, $f2, $ef, $eb, $e7, $ee, $f9, $02, $01, $05, $05, $08, $08, $05, $00, $f8
2223c     F4 F2 F0 F9 
22240     01 06 07 01 
22244     F8 FE 0F 10 
22248     0A 05 05 00 | 	byte	$f4, $f2, $f0, $f9, $01, $06, $07, $01, $f8, $fe, $0f, $10, $0a, $05, $05, $00
2224c     FA F9 F8 00 
22250     02 03 03 05 
22254     02 06 0A 0B 
22258     0A 0A 06 03 | 	byte	$fa, $f9, $f8, $00, $02, $03, $03, $05, $02, $06, $0a, $0b, $0a, $0a, $06, $03
2225c     FE FD 01 02 
22260     01 FC F7 ED 
22264     EA FE 0B 08 
22268     07 05 00 FA | 	byte	$fe, $fd, $01, $02, $01, $fc, $f7, $ed, $ea, $fe, $0b, $08, $07, $05, $00, $fa
2226c     F4 F0 EA EB 
22270     EF FA FE 02 
22274     03 03 07 07 
22278     03 02 FA F5 | 	byte	$f4, $f0, $ea, $eb, $ef, $fa, $fe, $02, $03, $03, $07, $07, $03, $02, $fa, $f5
2227c     F2 EF F7 00 
22280     03 06 02 F9 
22284     FC 0F 11 0A 
22288     05 01 FD FA | 	byte	$f2, $ef, $f7, $00, $03, $06, $02, $f9, $fc, $0f, $11, $0a, $05, $01, $fd, $fa
2228c     FA FA 00 02 
22290     05 06 02 02 
22294     03 06 0A 0A 
22298     08 08 02 FE | 	byte	$fa, $fa, $00, $02, $05, $06, $02, $02, $03, $06, $0a, $0a, $08, $08, $02, $fe
2229c     FC 00 02 01 
222a0     FD F7 F2 E9 
222a4     F8 07 0C 07 
222a8     02 00 FC F5 | 	byte	$fc, $00, $02, $01, $fd, $f7, $f2, $e9, $f8, $07, $0c, $07, $02, $00, $fc, $f5
222ac     F3 F0 EA EF 
222b0     F8 FE 01 02 
222b4     02 05 07 05 
222b8     02 FD F7 F3 | 	byte	$f3, $f0, $ea, $ef, $f8, $fe, $01, $02, $02, $05, $07, $05, $02, $fd, $f7, $f3
222bc     EF F3 FD 03 
222c0     07 05 FD F9 
222c4     08 10 0D 05 
222c8     00 FC FA FA | 	byte	$ef, $f3, $fd, $03, $07, $05, $fd, $f9, $08, $10, $0d, $05, $00, $fc, $fa, $fa
222cc     00 02 03 06 
222d0     03 03 01 03 
222d4     05 08 0A 07 
222d8     07 03 01 FE | 	byte	$00, $02, $03, $06, $03, $03, $01, $03, $05, $08, $0a, $07, $07, $03, $01, $fe
222dc     00 00 02 FD 
222e0     FC F5 EE F0 
222e4     03 0C 06 01 
222e8     FE FA F8 F7 | 	byte	$00, $00, $02, $fd, $fc, $f5, $ee, $f0, $03, $0c, $06, $01, $fe, $fa, $f8, $f7
222ec     F4 ED EB F5 
222f0     FE 02 02 01 
222f4     05 05 06 02 
222f8     00 F9 F5 F0 | 	byte	$f4, $ed, $eb, $f5, $fe, $02, $02, $01, $05, $05, $06, $02, $00, $f9, $f5, $f0
222fc     F2 FA 02 06 
22300     06 FE F9 05 
22304     0E 0F 05 FD 
22308     F9 F9 FC 00 | 	byte	$f2, $fa, $02, $06, $06, $fe, $f9, $05, $0e, $0f, $05, $fd, $f9, $f9, $fc, $00
2230c     00 04 04 02 
22310     01 01 00 04 
22314     05 06 06 05 
22318     05 02 00 00 | 	byte	$00, $04, $04, $02, $01, $01, $00, $04, $05, $06, $06, $05, $05, $02, $00, $00
2231c     FD 00 FE FA 
22320     F7 EF F0 00 
22324     0A 07 01 FE 
22328     F8 F8 F9 F5 | 	byte	$fd, $00, $fe, $fa, $f7, $ef, $f0, $00, $0a, $07, $01, $fe, $f8, $f8, $f9, $f5
2232c     F0 EB F7 FE 
22330     00 01 00 02 
22334     02 02 02 00 
22338     FC F5 F0 F0 | 	byte	$f0, $eb, $f7, $fe, $00, $01, $00, $02, $02, $02, $02, $00, $fc, $f5, $f0, $f0
2233c     F8 00 05 07 
22340     02 F9 FD 0C 
22344     0E 06 FE F9 
22348     F8 FE 00 04 | 	byte	$f8, $00, $05, $07, $02, $f9, $fd, $0c, $0e, $06, $fe, $f9, $f8, $fe, $00, $04
2234c     04 02 01 02 
22350     00 01 01 05 
22354     05 05 05 05 
22358     04 01 00 FD | 	byte	$04, $02, $01, $02, $00, $01, $01, $05, $05, $05, $05, $05, $04, $01, $00, $fd
2235c     00 FE FD FC 
22360     F3 EE FA 07 
22364     06 02 FD FC 
22368     F8 F9 F9 F5 | 	byte	$00, $fe, $fd, $fc, $f3, $ee, $fa, $07, $06, $02, $fd, $fc, $f8, $f9, $f9, $f5
2236c     EB F4 FC 00 
22370     01 01 00 01 
22374     02 01 00 FD 
22378     F8 F5 F3 F6 | 	byte	$eb, $f4, $fc, $00, $01, $01, $00, $01, $02, $01, $00, $fd, $f8, $f5, $f3, $f6
2237c     00 04 05 02 
22380     FC FA 07 0D 
22384     07 00 FA F9 
22388     FC 01 04 04 | 	byte	$00, $04, $05, $02, $fc, $fa, $07, $0d, $07, $00, $fa, $f9, $fc, $01, $04, $04
2238c     01 00 00 00 
22390     00 01 04 04 
22394     04 05 06 04 
22398     01 00 FC FC | 	byte	$01, $00, $00, $00, $00, $01, $04, $04, $04, $05, $06, $04, $01, $00, $fc, $fc
2239c     FE 00 FC F8 
223a0     F0 F5 02 07 
223a4     02 FE FA F9 
223a8     F9 FA F8 F0 | 	byte	$fe, $00, $fc, $f8, $f0, $f5, $02, $07, $02, $fe, $fa, $f9, $f9, $fa, $f8, $f0
223ac     F3 FA 00 01 
223b0     02 00 00 00 
223b4     01 00 FD F9 
223b8     F4 F4 F6 FE | 	byte	$f3, $fa, $00, $01, $02, $00, $00, $00, $01, $00, $fd, $f9, $f4, $f4, $f6, $fe
223bc     04 06 05 00 
223c0     F9 02 09 06 
223c4     FE FA FA FD 
223c8     00 04 02 02 | 	byte	$04, $06, $05, $00, $f9, $02, $09, $06, $fe, $fa, $fa, $fd, $00, $04, $02, $02
223cc     00 00 00 00 
223d0     04 01 04 02 
223d4     04 05 05 04 
223d8     00 FC FC FE | 	byte	$00, $00, $00, $00, $04, $01, $04, $02, $04, $05, $05, $04, $00, $fc, $fc, $fe
223dc     FE 00 FC F2 
223e0     F4 00 04 02 
223e4     FE FD FB FD 
223e8     FD F9 F2 F2 | 	byte	$fe, $00, $fc, $f2, $f4, $00, $04, $02, $fe, $fd, $fb, $fd, $fd, $f9, $f2, $f2
223ec     FA FE 00 01 
223f0     00 00 00 00 
223f4     00 FD FA F8 
223f8     F6 F8 FE 02 | 	byte	$fa, $fe, $00, $01, $00, $00, $00, $00, $00, $fd, $fa, $f8, $f6, $f8, $fe, $02
223fc     04 05 02 FB 
22400     FD 08 05 00 
22404     FB FC FE 02 
22408     03 03 01 00 | 	byte	$04, $05, $02, $fb, $fd, $08, $05, $00, $fb, $fc, $fe, $02, $03, $03, $01, $00
2240c     00 00 01 01 
22410     02 01 03 03 
22414     04 04 02 00 
22418     FE FB FE FE | 	byte	$00, $00, $01, $01, $02, $01, $03, $03, $04, $04, $02, $00, $fe, $fb, $fe, $fe
2241c     FE FD F7 F3 
22420     FB 03 01 00 
22424     FD FD FD FE 
22428     FC F5 F2 F9 | 	byte	$fe, $fd, $f7, $f3, $fb, $03, $01, $00, $fd, $fd, $fd, $fe, $fc, $f5, $f2, $f9
2242c     FE 00 01 00 
22430     00 00 00 00 
22434     FE FB F9 F9 
22438     F9 FE 01 04 | 	byte	$fe, $00, $01, $00, $00, $00, $00, $00, $fe, $fb, $f9, $f9, $f9, $fe, $01, $04
2243c     04 03 FD FA 
22440     03 05 00 FC 
22444     FE FE 01 03 
22448     01 01 01 00 | 	byte	$04, $03, $fd, $fa, $03, $05, $00, $fc, $fe, $fe, $01, $03, $01, $01, $01, $00
2244c     00 01 00 01 
22450     00 03 03 03 
22454     05 03 00 FD 
22458     FB FD FE 00 | 	byte	$00, $01, $00, $01, $00, $03, $03, $03, $05, $03, $00, $fd, $fb, $fd, $fe, $00
2245c     FE FA F6 F7 
22460     00 01 00 FE 
22464     FD FD 00 FD 
22468     F8 F4 F9 FE | 	byte	$fe, $fa, $f6, $f7, $00, $01, $00, $fe, $fd, $fd, $00, $fd, $f8, $f4, $f9, $fe
2246c     00 01 00 00 
22470     FE 00 00 FE 
22474     FB FA FA FB 
22478     FD 00 03 04 | 	byte	$00, $01, $00, $00, $fe, $00, $00, $fe, $fb, $fa, $fa, $fb, $fd, $00, $03, $04
2247c     03 00 FB 00 
22480     04 01 FE FE 
22484     00 02 02 02 
22488     01 00 00 00 | 	byte	$03, $00, $fb, $00, $04, $01, $fe, $fe, $00, $02, $02, $02, $01, $00, $00, $00
2248c     00 00 00 00 
22490     02 03 03 04 
22494     04 00 00 FD 
22498     FD FE FE FD | 	byte	$00, $00, $00, $00, $02, $03, $03, $04, $04, $00, $00, $fd, $fd, $fe, $fe, $fd
2249c     FD F7 F7 FE 
224a0     00 00 FE FE 
224a4     FE 00 FE FA 
224a8     F5 F9 FD 00 | 	byte	$fd, $f7, $f7, $fe, $00, $00, $fe, $fe, $fe, $00, $fe, $fa, $f5, $f9, $fd, $00
224ac     01 00 FD FD 
224b0     00 00 FE FD 
224b4     FA FB FC FE 
224b8     00 03 03 03 | 	byte	$01, $00, $fd, $fd, $00, $00, $fe, $fd, $fa, $fb, $fc, $fe, $00, $03, $03, $03
224bc     01 FC FD 03 
224c0     01 00 FE 00 
224c4     01 01 01 00 
224c8     01 00 00 00 | 	byte	$01, $fc, $fd, $03, $01, $00, $fe, $00, $01, $01, $01, $00, $01, $00, $00, $00
224cc     00 00 00 01 
224d0     01 03 03 03 
224d4     01 00 FE FD 
224d8     FE FE FE FE | 	byte	$00, $00, $00, $01, $01, $03, $03, $03, $01, $00, $fe, $fd, $fe, $fe, $fe, $fe
224dc     FA F7 FB 00 
224e0     00 FE 00 FE 
224e4     00 00 FC F7 
224e8     FA FD 00 01 | 	byte	$fa, $f7, $fb, $00, $00, $fe, $00, $fe, $00, $00, $fc, $f7, $fa, $fd, $00, $01
224ec     00 FE FE FE 
224f0     00 00 FC FB 
224f4     FB FD FE 00 
224f8     03 03 03 01 | 	byte	$00, $fe, $fe, $fe, $00, $00, $fc, $fb, $fb, $fd, $fe, $00, $03, $03, $03, $01
224fc     FE FB 00 01 
22500     00 00 00 01 
22504     01 01 00 00 
22508     00 00 00 00 | 	byte	$fe, $fb, $00, $01, $00, $00, $00, $01, $01, $01, $00, $00, $00, $00, $00, $00
2250c     00 00 00 01 
22510     02 02 01 00 
22514     00 FE FE FE 
22518     FE FE FE FB | 	byte	$00, $00, $00, $01, $02, $02, $01, $00, $00, $fe, $fe, $fe, $fe, $fe, $fe, $fb
2251c     F8 F9 FE 00 
22520     00 00 00 00 
22524     00 FC 00 00 
22528     00 00 00 00 | 	byte	$f8, $f9, $fe, $00, $00, $00, $00, $00, $00, $fc, $00, $00, $00, $00, $00, $00
2252c     00 00 00 00 
22530     00 00 00 00 
22534     00 00 00 00 
22538     00 00 00 00 
2253c     00 00 00 00 | 	byte	$00[20]
22540     F7 04 F9 05 
22544     FC FF 30 C4 
22548     4F 40 A8 DF 
2254c     7C 57 20 C7 | 	byte	$f7, $04, $f9, $05, $fc, $ff, $30, $c4, $4f, $40, $a8, $df, $7c, $57, $20, $c7
22550     1F 70 60 06 
22554     D4 E7 54 38 
22558     37 63 00 BB 
2255c     67 4F 46 A4 | 	byte	$1f, $70, $60, $06, $d4, $e7, $54, $38, $37, $63, $00, $bb, $67, $4f, $46, $a4
22560     3F 60 2E 29 
22564     39 5B 18 CF 
22568     1D 38 33 46 
2256c     18 1F 20 0F | 	byte	$3f, $60, $2e, $29, $39, $5b, $18, $cf, $1d, $38, $33, $46, $18, $1f, $20, $0f
22570     21 21 2B 1C 
22574     FF 27 18 0E 
22578     E8 F9 07 FA 
2257c     F1 FC D0 A0 | 	byte	$21, $21, $2b, $1c, $ff, $27, $18, $0e, $e8, $f9, $07, $fa, $f1, $fc, $d0, $a0
22580     CF 0C 00 E4 
22584     90 AF D9 D9 
22588     E4 AC AF 98 
2258c     C7 EC B0 B3 | 	byte	$cf, $0c, $00, $e4, $90, $af, $d9, $d9, $e4, $ac, $af, $98, $c7, $ec, $b0, $b3
22590     B9 B6 B2 AF 
22594     BB C1 BF C5 
22598     BA BC C6 C6 
2259c     C7 C1 C7 CB | 	byte	$b9, $b6, $b2, $af, $bb, $c1, $bf, $c5, $ba, $bc, $c6, $c6, $c7, $c1, $c7, $cb
225a0     CB D6 CF C6 
225a4     C5 D3 DB D8 
225a8     D6 CC D3 DA 
225ac     E7 E5 D3 DC | 	byte	$cb, $d6, $cf, $c6, $c5, $d3, $db, $d8, $d6, $cc, $d3, $da, $e7, $e5, $d3, $dc
225b0     DA F8 F1 E7 
225b4     05 00 E6 F7 
225b8     0F 41 30 E8 
225bc     EF 3F 5C 4E | 	byte	$da, $f8, $f1, $e7, $05, $00, $e6, $f7, $0f, $41, $30, $e8, $ef, $3f, $5c, $4e
225c0     30 F8 0F 77 
225c4     7E 48 24 27 
225c8     3F 6E 62 63 
225cc     64 26 2F 5D | 	byte	$30, $f8, $0f, $77, $7e, $48, $24, $27, $3f, $6e, $62, $63, $64, $26, $2f, $5d
225d0     60 57 60 67 
225d4     40 2E 53 57 
225d8     54 53 45 41 
225dc     43 4C 56 48 | 	byte	$60, $57, $60, $67, $40, $2e, $53, $57, $54, $53, $45, $41, $43, $4c, $56, $48
225e0     3B 38 40 47 
225e4     41 38 29 37 
225e8     43 34 30 28 
225ec     29 2B 31 2C | 	byte	$3b, $38, $40, $47, $41, $38, $29, $37, $43, $34, $30, $28, $29, $2b, $31, $2c
225f0     2B 26 18 1E 
225f4     26 1F 1E 1C 
225f8     19 12 15 17 
225fc     13 13 0F 0F | 	byte	$2b, $26, $18, $1e, $26, $1f, $1e, $1c, $19, $12, $15, $17, $13, $13, $0f, $0f
22600     0F 10 FC 03 
22604     07 07 08 F4 
22608     F4 F0 E8 DC 
2260c     E7 F3 F0 D4 | 	byte	$0f, $10, $fc, $03, $07, $07, $08, $f4, $f4, $f0, $e8, $dc, $e7, $f3, $f0, $d4
22610     C7 CF D9 D6 
22614     D7 D9 C1 B3 
22618     BB C7 D6 CC 
2261c     B1 AA AD BC | 	byte	$c7, $cf, $d9, $d6, $d7, $d9, $c1, $b3, $bb, $c7, $d6, $cc, $b1, $aa, $ad, $bc
22620     CE B8 A2 B7 
22624     C0 AE A3 B9 
22628     BF BE B1 9F 
2262c     B3 C6 B5 BD | 	byte	$ce, $b8, $a2, $b7, $c0, $ae, $a3, $b9, $bf, $be, $b1, $9f, $b3, $c6, $b5, $bd
22630     BA B3 B9 C7 
22634     CF B8 B3 BF 
22638     BF D3 E6 D8 
2263c     C9 CE C6 C5 | 	byte	$ba, $b3, $b9, $c7, $cf, $b8, $b3, $bf, $bf, $d3, $e6, $d8, $c9, $ce, $c6, $c5
22640     D7 F3 F8 E9 
22644     DE D3 DF F5 
22648     E8 EF 0F 0C 
2264c     EC D3 EF 0F | 	byte	$d7, $f3, $f8, $e9, $de, $d3, $df, $f5, $e8, $ef, $0f, $0c, $ec, $d3, $ef, $0f
22650     08 07 00 F0 
22654     FF 00 0E 18 
22658     00 E9 F5 0C 
2265c     16 06 FF 09 | 	byte	$08, $07, $00, $f0, $ff, $00, $0e, $18, $00, $e9, $f5, $0c, $16, $06, $ff, $09
22660     01 03 01 0B 
22664     11 04 06 0A 
22668     FC FF 00 03 
2266c     00 F9 07 0F | 	byte	$01, $03, $01, $0b, $11, $04, $06, $0a, $fc, $ff, $00, $03, $00, $f9, $07, $0f
22670     02 01 EB F3 
22674     F4 FC 03 F8 
22678     EF F8 EE FF 
2267c     FC E8 DC DF | 	byte	$02, $01, $eb, $f3, $f4, $fc, $03, $f8, $ef, $f8, $ee, $ff, $fc, $e8, $dc, $df
22680     FB 01 E8 E9 
22684     E9 E3 EF ED 
22688     EF F0 E7 F4 
2268c     F6 F3 F2 F0 | 	byte	$fb, $01, $e8, $e9, $e9, $e3, $ef, $ed, $ef, $f0, $e7, $f4, $f6, $f3, $f2, $f0
22690     F3 F0 ED F8 
22694     F4 FB 00 EC 
22698     F9 FF F5 FC 
2269c     FF FF FC F6 | 	byte	$f3, $f0, $ed, $f8, $f4, $fb, $00, $ec, $f9, $ff, $f5, $fc, $ff, $ff, $fc, $f6
226a0     F6 FF 00 F8 
226a4     ED 0B 03 07 
226a8     00 F6 F7 FE 
226ac     16 11 FC F9 | 	byte	$f6, $ff, $00, $f8, $ed, $0b, $03, $07, $00, $f6, $f7, $fe, $16, $11, $fc, $f9
226b0     09 03 0F 11 
226b4     0E 0D 0F 13 
226b8     1C 19 16 15 
226bc     1C 24 13 16 | 	byte	$09, $03, $0f, $11, $0e, $0d, $0f, $13, $1c, $19, $16, $15, $1c, $24, $13, $16
226c0     15 1F 23 19 
226c4     19 1F 1C 1F 
226c8     18 0F 27 18 
226cc     19 1F 0E 18 | 	byte	$15, $1f, $23, $19, $19, $1f, $1c, $1f, $18, $0f, $27, $18, $19, $1f, $0e, $18
226d0     0A 27 30 08 
226d4     FD 0F 1F 23 
226d8     1F 17 11 1C 
226dc     27 26 18 1E | 	byte	$0a, $27, $30, $08, $fd, $0f, $1f, $23, $1f, $17, $11, $1c, $27, $26, $18, $1e
226e0     29 22 31 2A 
226e4     31 31 29 2E 
226e8     23 39 43 3C 
226ec     44 40 40 38 | 	byte	$29, $22, $31, $2a, $31, $31, $29, $2e, $23, $39, $43, $3c, $44, $40, $40, $38
226f0     3C 4B 4D 4C 
226f4     41 53 58 54 
226f8     47 46 46 58 
226fc     61 53 55 49 | 	byte	$3c, $4b, $4d, $4c, $41, $53, $58, $54, $47, $46, $46, $58, $61, $53, $55, $49
22700     47 5D 60 4F 
22704     54 46 57 58 
22708     47 4B 40 47 
2270c     48 2D 41 40 | 	byte	$47, $5d, $60, $4f, $54, $46, $57, $58, $47, $4b, $40, $47, $48, $2d, $41, $40
22710     40 30 34 33 
22714     31 27 30 2A 
22718     26 21 23 26 
2271c     18 0F 1D 18 | 	byte	$40, $30, $34, $33, $31, $27, $30, $2a, $26, $21, $23, $26, $18, $0f, $1d, $18
22720     13 17 10 11 
22724     09 07 16 08 
22728     03 FF FC FF 
2272c     F6 FB F8 E1 | 	byte	$13, $17, $10, $11, $09, $07, $16, $08, $03, $ff, $fc, $ff, $f6, $fb, $f8, $e1
22730     E0 EB EB E1 
22734     D8 D7 E2 D9 
22738     D7 D3 C9 D1 
2273c     C4 C9 C9 C4 | 	byte	$e0, $eb, $eb, $e1, $d8, $d7, $e2, $d9, $d7, $d3, $c9, $d1, $c4, $c9, $c9, $c4
22740     BF C0 D5 CC 
22744     C3 B5 B6 B9 
22748     C6 C7 CA B5 
2274c     B3 C7 B8 B6 | 	byte	$bf, $c0, $d5, $cc, $c3, $b5, $b6, $b9, $c6, $c7, $ca, $b5, $b3, $c7, $b8, $b6
22750     B8 BD CE B4 
22754     A7 C7 C4 BF 
22758     B1 BC BF C1 
2275c     BD C7 CF C3 | 	byte	$b8, $bd, $ce, $b4, $a7, $c7, $c4, $bf, $b1, $bc, $bf, $c1, $bd, $c7, $cf, $c3
22760     B8 BB D7 CF 
22764     D8 D9 C4 C7 
22768     D7 E4 EE CC 
2276c     D7 E0 EA 09 | 	byte	$b8, $bb, $d7, $cf, $d8, $d9, $c4, $c7, $d7, $e4, $ee, $cc, $d7, $e0, $ea, $09
22770     E8 D3 E8 F3 
22774     09 F6 EC F3 
22778     F9 13 07 F8 
2277c     EB 0F 1E 0F | 	byte	$e8, $d3, $e8, $f3, $09, $f6, $ec, $f3, $f9, $13, $07, $f8, $eb, $0f, $1e, $0f
22780     FC F4 09 0F 
22784     1B 1E 02 03 
22788     05 19 19 08 
2278c     0B 18 0F 0C | 	byte	$fc, $f4, $09, $0f, $1b, $1e, $02, $03, $05, $19, $19, $08, $0b, $18, $0f, $0c
22790     13 13 04 07 
22794     08 09 01 FF 
22798     11 00 F3 FB 
2279c     FF 0C F8 E5 | 	byte	$13, $13, $04, $07, $08, $09, $01, $ff, $11, $00, $f3, $fb, $ff, $0c, $f8, $e5
227a0     F1 F8 EE F0 
227a4     F1 EC D4 E7 
227a8     E4 E8 D8 D3 
227ac     D9 EB E9 CE | 	byte	$f1, $f8, $ee, $f0, $f1, $ec, $d4, $e7, $e4, $e8, $d8, $d3, $d9, $eb, $e9, $ce
227b0     D5 DA D7 DC 
227b4     D8 DC D0 C7 
227b8     D7 DD DC D0 
227bc     C7 DF D5 D6 | 	byte	$d5, $da, $d7, $dc, $d8, $dc, $d0, $c7, $d7, $dd, $dc, $d0, $c7, $df, $d5, $d6
227c0     D5 E0 D6 CB 
227c4     DE DC DF EC 
227c8     DC D8 D3 E7 
227cc     F0 E2 DA E3 | 	byte	$d5, $e0, $d6, $cb, $de, $dc, $df, $ec, $dc, $d8, $d3, $e7, $f0, $e2, $da, $e3
227d0     F9 F8 E1 EE 
227d4     FC 01 F8 FB 
227d8     03 FF 0F 10 
227dc     06 0B 19 1F | 	byte	$f9, $f8, $e1, $ee, $fc, $01, $f8, $fb, $03, $ff, $0f, $10, $06, $0b, $19, $1f
227e0     1C 1E 1D 1E 
227e4     33 30 33 29 
227e8     2F 3C 41 47 
227ec     38 38 41 43 | 	byte	$1c, $1e, $1d, $1e, $33, $30, $33, $29, $2f, $3c, $41, $47, $38, $38, $41, $43
227f0     4C 47 55 48 
227f4     45 4F 51 63 
227f8     58 46 53 57 
227fc     60 4F 56 51 | 	byte	$4c, $47, $55, $48, $45, $4f, $51, $63, $58, $46, $53, $57, $60, $4f, $56, $51
22800     53 49 51 58 
22804     4C 4F 56 4F 
22808     47 47 46 44 
2280c     43 39 40 34 | 	byte	$53, $49, $51, $58, $4c, $4f, $56, $4f, $47, $47, $46, $44, $43, $39, $40, $34
22810     39 30 30 31 
22814     2B 26 27 24 
22818     1C 13 1C 21 
2281c     19 00 0C 07 | 	byte	$39, $30, $30, $31, $2b, $26, $27, $24, $1c, $13, $1c, $21, $19, $00, $0c, $07
22820     0D 0A F8 F6 
22824     F9 F9 F8 F0 
22828     EA D4 CF E3 
2282c     DB E1 D3 CC | 	byte	$0d, $0a, $f8, $f6, $f9, $f9, $f8, $f0, $ea, $d4, $cf, $e3, $db, $e1, $d3, $cc
22830     B8 BC C7 D1 
22834     C5 AC B5 B8 
22838     B1 BC A9 B1 
2283c     B2 BB B0 9F | 	byte	$b8, $bc, $c7, $d1, $c5, $ac, $b5, $b8, $b1, $bc, $a9, $b1, $b2, $bb, $b0, $9f
22840     AB AA BC AA 
22844     B4 B3 B3 B5 
22848     AE A7 B1 B6 
2284c     B9 A9 AB B4 | 	byte	$ab, $aa, $bc, $aa, $b4, $b3, $b3, $b5, $ae, $a7, $b1, $b6, $b9, $a9, $ab, $b4
22850     AD BC B5 B6 
22854     BA AE B3 BC 
22858     BF BB BF BB 
2285c     B3 C3 C7 BF | 	byte	$ad, $bc, $b5, $b6, $ba, $ae, $b3, $bc, $bf, $bb, $bf, $bb, $b3, $c3, $c7, $bf
22860     CA BF CF CE 
22864     CF D7 CB D3 
22868     DF E6 E7 DB 
2286c     DE E7 F3 F4 | 	byte	$ca, $bf, $cf, $ce, $cf, $d7, $cb, $d3, $df, $e6, $e7, $db, $de, $e7, $f3, $f4
22870     EE F0 F0 FB 
22874     F6 07 00 FF 
22878     03 F0 EF 07 
2287c     0D 18 01 FF | 	byte	$ee, $f0, $f0, $fb, $f6, $07, $00, $ff, $03, $f0, $ef, $07, $0d, $18, $01, $ff
22880     04 07 13 FF 
22884     08 FE 0D 0F 
22888     10 00 FB 09 
2288c     13 14 0E 01 | 	byte	$04, $07, $13, $ff, $08, $fe, $0d, $0f, $10, $00, $fb, $09, $13, $14, $0e, $01
22890     01 0B 1B 10 
22894     07 14 19 15 
22898     0E 07 19 1E 
2289c     19 13 19 1D | 	byte	$01, $0b, $1b, $10, $07, $14, $19, $15, $0e, $07, $19, $1e, $19, $13, $19, $1d
228a0     1F 18 1A 1C 
228a4     1F 1C 25 21 
228a8     19 23 23 2A 
228ac     20 18 2F 23 | 	byte	$1f, $18, $1a, $1c, $1f, $1c, $25, $21, $19, $23, $23, $2a, $20, $18, $2f, $23
228b0     23 1C 1F 2C 
228b4     26 1A 1B 1C 
228b8     23 2C 1C 0F 
228bc     1D 1F 27 1C | 	byte	$23, $1c, $1f, $2c, $26, $1a, $1b, $1c, $23, $2c, $1c, $0f, $1d, $1f, $27, $1c
228c0     15 1E 13 26 
228c4     1C 23 21 08 
228c8     19 1C 2B 2A 
228cc     18 11 1C 1F | 	byte	$15, $1e, $13, $26, $1c, $23, $21, $08, $19, $1c, $2b, $2a, $18, $11, $1c, $1f
228d0     2B 26 21 1C 
228d4     1F 2C 2C 1A 
228d8     1F 23 31 28 
228dc     2B 27 2A 23 | 	byte	$2b, $26, $21, $1c, $1f, $2c, $2c, $1a, $1f, $23, $31, $28, $2b, $27, $2a, $23
228e0     29 2A 27 2B 
228e4     27 33 38 27 
228e8     2C 23 27 31 
228ec     27 35 27 1F | 	byte	$29, $2a, $27, $2b, $27, $33, $38, $27, $2c, $23, $27, $31, $27, $35, $27, $1f
228f0     2B 31 26 22 
228f4     21 2A 21 25 
228f8     29 28 17 1D 
228fc     27 30 22 18 | 	byte	$2b, $31, $26, $22, $21, $2a, $21, $25, $29, $28, $17, $1d, $27, $30, $22, $18
22900     17 19 1B 23 
22904     30 1F 07 1B 
22908     27 32 1C 0B 
2290c     1B 2B 2C 23 | 	byte	$17, $19, $1b, $23, $30, $1f, $07, $1b, $27, $32, $1c, $0b, $1b, $2b, $2c, $23
22910     1C 19 1C 1F 
22914     2B 30 1C 19 
22918     0B 27 2C 1A 
2291c     17 10 18 1F | 	byte	$1c, $19, $1c, $1f, $2b, $30, $1c, $19, $0b, $27, $2c, $1a, $17, $10, $18, $1f
22920     1F 20 0F 0F 
22924     0C 0B 1C 14 
22928     07 07 0F 0A 
2292c     0B 06 05 07 | 	byte	$1f, $20, $0f, $0f, $0c, $0b, $1c, $14, $07, $07, $0f, $0a, $0b, $06, $05, $07
22930     09 01 07 07 
22934     0A 01 03 02 
22938     F8 FF 0C 03 
2293c     00 FC F9 03 | 	byte	$09, $01, $07, $07, $0a, $01, $03, $02, $f8, $ff, $0c, $03, $00, $fc, $f9, $03
22940     02 FA F6 F9 
22944     F6 F3 F8 F3 
22948     F1 EC F0 EE 
2294c     F0 F1 EB DB | 	byte	$02, $fa, $f6, $f9, $f6, $f3, $f8, $f3, $f1, $ec, $f0, $ee, $f0, $f1, $eb, $db
22950     D5 EB F3 E0 
22954     CF CE D3 E6 
22958     D3 CF C9 C7 
2295c     CB D7 DE C8 | 	byte	$d5, $eb, $f3, $e0, $cf, $ce, $d3, $e6, $d3, $cf, $c9, $c7, $cb, $d7, $de, $c8
22960     BE B3 BF E7 
22964     D3 C3 B8 C3 
22968     CE C9 C9 BF 
2296c     BF BF CB CB | 	byte	$be, $b3, $bf, $e7, $d3, $c3, $b8, $c3, $ce, $c9, $c9, $bf, $bf, $bf, $cb, $cb
22970     C8 B5 C3 C6 
22974     C3 BF D7 D4 
22978     C0 B6 BB CF 
2297c     CE CF D8 BB | 	byte	$c8, $b5, $c3, $c6, $c3, $bf, $d7, $d4, $c0, $b6, $bb, $cf, $ce, $cf, $d8, $bb
22980     C7 D1 D3 D3 
22984     CC D7 E4 D9 
22988     D3 D5 EB EC 
2298c     D8 DD E3 F3 | 	byte	$c7, $d1, $d3, $d3, $cc, $d7, $e4, $d9, $d3, $d5, $eb, $ec, $d8, $dd, $e3, $f3
22990     F6 E7 E0 EF 
22994     00 F0 E8 F3 
22998     F5 F8 F8 FF 
2299c     F0 EF F3 F0 | 	byte	$f6, $e7, $e0, $ef, $00, $f0, $e8, $f3, $f5, $f8, $f8, $ff, $f0, $ef, $f3, $f0
229a0     05 F6 F1 FE 
229a4     F8 EF F9 00 
229a8     F6 F0 ED F5 
229ac     FB 00 F8 EC | 	byte	$05, $f6, $f1, $fe, $f8, $ef, $f9, $00, $f6, $f0, $ed, $f5, $fb, $00, $f8, $ec
229b0     F7 F8 F7 FF 
229b4     00 FE F5 F7 
229b8     07 03 F6 F1 
229bc     FF 07 04 F8 | 	byte	$f7, $f8, $f7, $ff, $00, $fe, $f5, $f7, $07, $03, $f6, $f1, $ff, $07, $04, $f8
229c0     03 F3 F5 09 
229c4     11 F9 FD 02 
229c8     FE 01 06 03 
229cc     06 02 00 07 | 	byte	$03, $f3, $f5, $09, $11, $f9, $fd, $02, $fe, $01, $06, $03, $06, $02, $00, $07
229d0     0B 03 03 07 
229d4     07 FC 0D 0C 
229d8     02 FC 14 0C 
229dc     FF 09 16 03 | 	byte	$0b, $03, $03, $07, $07, $fc, $0d, $0c, $02, $fc, $14, $0c, $ff, $09, $16, $03
229e0     09 07 07 0F 
229e4     0C 00 0E 00 
229e8     03 0C 10 09 
229ec     F9 FF 09 03 | 	byte	$09, $07, $07, $0f, $0c, $00, $0e, $00, $03, $0c, $10, $09, $f9, $ff, $09, $03
229f0     03 FE 07 00 
229f4     FC FB 07 08 
229f8     F4 F5 FB 07 
229fc     0C F4 F9 F8 | 	byte	$03, $fe, $07, $00, $fc, $fb, $07, $08, $f4, $f5, $fb, $07, $0c, $f4, $f9, $f8
22a00     01 09 00 01 
22a04     F8 FF 0C 09 
22a08     FE 01 06 02 
22a0c     05 0B 00 09 | 	byte	$01, $09, $00, $01, $f8, $ff, $0c, $09, $fe, $01, $06, $02, $05, $0b, $00, $09
22a10     0C 09 07 0B 
22a14     13 11 00 0B 
22a18     0F 11 1D 0C 
22a1c     FC 0B 18 18 | 	byte	$0c, $09, $07, $0b, $13, $11, $00, $0b, $0f, $11, $1d, $0c, $fc, $0b, $18, $18
22a20     0F 01 0F 16 
22a24     19 13 0C 0B 
22a28     19 0E 1C 09 
22a2c     09 1F 1C 17 | 	byte	$0f, $01, $0f, $16, $19, $13, $0c, $0b, $19, $0e, $1c, $09, $09, $1f, $1c, $17
22a30     10 07 17 14 
22a34     0E 17 23 14 
22a38     07 0C 19 18 
22a3c     0F 17 19 0A | 	byte	$10, $07, $17, $14, $0e, $17, $23, $14, $07, $0c, $19, $18, $0f, $17, $19, $0a
22a40     0C 11 13 0E 
22a44     0C 07 0F 0F 
22a48     04 F8 0C 07 
22a4c     00 07 FC FB | 	byte	$0c, $11, $13, $0e, $0c, $07, $0f, $0f, $04, $f8, $0c, $07, $00, $07, $fc, $fb
22a50     FE FC F2 FB 
22a54     F8 F9 F2 F5 
22a58     F1 F1 F0 F1 
22a5c     EF F3 EC E7 | 	byte	$fe, $fc, $f2, $fb, $f8, $f9, $f2, $f5, $f1, $f1, $f0, $f1, $ef, $f3, $ec, $e7
22a60     FB F8 EC F0 
22a64     E7 F5 F6 F3 
22a68     F3 F1 F6 F4 
22a6c     F3 FF 07 F8 | 	byte	$fb, $f8, $ec, $f0, $e7, $f5, $f6, $f3, $f3, $f1, $f6, $f4, $f3, $ff, $07, $f8
22a70     F8 FC 06 09 
22a74     07 0C 07 07 
22a78     0C 03 0C 18 
22a7c     03 0E 07 0E | 	byte	$f8, $fc, $06, $09, $07, $0c, $07, $07, $0c, $03, $0c, $18, $03, $0e, $07, $0e
22a80     19 13 0D 09 
22a84     0B 14 13 18 
22a88     00 03 0F 14 
22a8c     0F 0F 05 07 | 	byte	$19, $13, $0d, $09, $0b, $14, $13, $18, $00, $03, $0f, $14, $0f, $0f, $05, $07
22a90     07 0B 0C 03 
22a94     03 0E 0E 08 
22a98     FE 01 07 08 
22a9c     05 0E 08 FF | 	byte	$07, $0b, $0c, $03, $03, $0e, $0e, $08, $fe, $01, $07, $08, $05, $0e, $08, $ff
22aa0     00 01 0F 10 
22aa4     03 FE FF 0F 
22aa8     13 08 0E 02 
22aac     00 07 1A 0C | 	byte	$00, $01, $0f, $10, $03, $fe, $ff, $0f, $13, $08, $0e, $02, $00, $07, $1a, $0c
22ab0     03 0B 07 0C 
22ab4     0F 06 03 03 
22ab8     04 0D 13 04 
22abc     FC FF 0C 03 | 	byte	$03, $0b, $07, $0c, $0f, $06, $03, $03, $04, $0d, $13, $04, $fc, $ff, $0c, $03
22ac0     01 FE 09 06 
22ac4     01 FF 09 03 
22ac8     FC FE 0F 0B 
22acc     13 07 01 04 | 	byte	$01, $fe, $09, $06, $01, $ff, $09, $03, $fc, $fe, $0f, $0b, $13, $07, $01, $04
22ad0     03 19 16 03 
22ad4     04 07 0D 13 
22ad8     11 0E 04 0C 
22adc     0F 0A 0A 0A | 	byte	$03, $19, $16, $03, $04, $07, $0d, $13, $11, $0e, $04, $0c, $0f, $0a, $0a, $0a
22ae0     0C 04 05 03 
22ae4     FF 0E 00 06 
22ae8     FB F9 00 F8 
22aec     FB FF F6 F6 | 	byte	$0c, $04, $05, $03, $ff, $0e, $00, $06, $fb, $f9, $00, $f8, $fb, $ff, $f6, $f6
22af0     EB FE F6 ED 
22af4     F3 F3 F7 F0 
22af8     FB F0 EC F0 
22afc     E6 F7 F4 F0 | 	byte	$eb, $fe, $f6, $ed, $f3, $f3, $f7, $f0, $fb, $f0, $ec, $f0, $e6, $f7, $f4, $f0
22b00     F0 E7 F3 EE 
22b04     F0 EE E9 F0 
22b08     F0 F3 F0 E7 
22b0c     EC F3 F4 EC | 	byte	$f0, $e7, $f3, $ee, $f0, $ee, $e9, $f0, $f0, $f3, $f0, $e7, $ec, $f3, $f4, $ec
22b10     E7 F0 E7 F9 
22b14     F3 F9 E8 E3 
22b18     F3 F9 F8 F8 
22b1c     E7 F3 F6 FD | 	byte	$e7, $f0, $e7, $f9, $f3, $f9, $e8, $e3, $f3, $f9, $f8, $f8, $e7, $f3, $f6, $fd
22b20     FA FC F8 F8 
22b24     FF 04 FF 01 
22b28     09 0A F6 FB 
22b2c     0F 15 12 06 | 	byte	$fa, $fc, $f8, $f8, $ff, $04, $ff, $01, $09, $0a, $f6, $fb, $0f, $15, $12, $06
22b30     0D 09 0B 18 
22b34     16 14 0F 0E 
22b38     18 14 0C 1E 
22b3c     1F 1C 0C 0D | 	byte	$0d, $09, $0b, $18, $16, $14, $0f, $0e, $18, $14, $0c, $1e, $1f, $1c, $0c, $0d
22b40     1D 23 1F 11 
22b44     11 17 1C 18 
22b48     1D 1E 0E 15 
22b4c     22 16 1F 13 | 	byte	$1d, $23, $1f, $11, $11, $17, $1c, $18, $1d, $1e, $0e, $15, $22, $16, $1f, $13
22b50     18 16 18 1A 
22b54     11 19 16 0F 
22b58     18 18 18 14 
22b5c     0F 13 19 23 | 	byte	$18, $16, $18, $1a, $11, $19, $16, $0f, $18, $18, $18, $14, $0f, $13, $19, $23
22b60     0C 0E 0E 15 
22b64     11 16 13 07 
22b68     03 0E 0C 16 
22b6c     0A 07 07 07 | 	byte	$0c, $0e, $0e, $15, $11, $16, $13, $07, $03, $0e, $0c, $16, $0a, $07, $07, $07
22b70     0E 03 03 00 
22b74     F7 03 02 FE 
22b78     03 F8 ED F3 
22b7c     F5 FE FE F0 | 	byte	$0e, $03, $03, $00, $f7, $03, $02, $fe, $03, $f8, $ed, $f3, $f5, $fe, $fe, $f0
22b80     E2 E3 F3 F9 
22b84     E8 E1 E2 E0 
22b88     E7 F0 E7 E5 
22b8c     D6 E3 E3 E3 | 	byte	$e2, $e3, $f3, $f9, $e8, $e1, $e2, $e0, $e7, $f0, $e7, $e5, $d6, $e3, $e3, $e3
22b90     E7 D8 D9 E6 
22b94     E0 E1 E0 D6 
22b98     E3 E3 E7 E5 
22b9c     E0 D8 DC D9 | 	byte	$e7, $d8, $d9, $e6, $e0, $e1, $e0, $d6, $e3, $e3, $e7, $e5, $e0, $d8, $dc, $d9
22ba0     E9 F0 E0 E1 
22ba4     E1 E1 E2 E3 
22ba8     E6 EB E6 E7 
22bac     E7 E9 ED E4 | 	byte	$e9, $f0, $e0, $e1, $e1, $e1, $e2, $e3, $e6, $eb, $e6, $e7, $e7, $e9, $ed, $e4
22bb0     E7 EA EE F3 
22bb4     EE E9 EB EA 
22bb8     EB F8 F8 F6 
22bbc     F0 EF F0 FF | 	byte	$e7, $ea, $ee, $f3, $ee, $e9, $eb, $ea, $eb, $f8, $f8, $f6, $f0, $ef, $f0, $ff
22bc0     00 FC F3 F3 
22bc4     FD 06 0B 04 
22bc8     F4 03 0A 03 
22bcc     06 09 00 0B | 	byte	$00, $fc, $f3, $f3, $fd, $06, $0b, $04, $f4, $03, $0a, $03, $06, $09, $00, $0b
22bd0     0C 0B 07 04 
22bd4     05 0F 09 0F 
22bd8     09 07 0E 04 
22bdc     07 09 09 0F | 	byte	$0c, $0b, $07, $04, $05, $0f, $09, $0f, $09, $07, $0e, $04, $07, $09, $09, $0f
22be0     06 F9 07 06 
22be4     11 03 00 04 
22be8     05 09 01 04 
22bec     00 F8 F8 0B | 	byte	$06, $f9, $07, $06, $11, $03, $00, $04, $05, $09, $01, $04, $00, $f8, $f8, $0b
22bf0     11 F8 F2 F8 
22bf4     0B 0D F8 F2 
22bf8     F1 01 03 FE 
22bfc     00 EA F3 F9 | 	byte	$11, $f8, $f2, $f8, $0b, $0d, $f8, $f2, $f1, $01, $03, $fe, $00, $ea, $f3, $f9
22c00     F7 F8 F6 F8 
22c04     F8 F3 FB F1 
22c08     F9 FB FD F8 
22c0c     F9 F8 F6 FA | 	byte	$f7, $f8, $f6, $f8, $f8, $f3, $fb, $f1, $f9, $fb, $fd, $f8, $f9, $f8, $f6, $fa
22c10     FD FF 06 F1 
22c14     FB 03 06 FF 
22c18     FE 00 FB 0C 
22c1c     07 03 FB 03 | 	byte	$fd, $ff, $06, $f1, $fb, $03, $06, $ff, $fe, $00, $fb, $0c, $07, $03, $fb, $03
22c20     0D 04 FF 00 
22c24     FB 0C 07 00 
22c28     FD FC 05 00 
22c2c     FC 06 00 FE | 	byte	$0d, $04, $ff, $00, $fb, $0c, $07, $00, $fd, $fc, $05, $00, $fc, $06, $00, $fe
22c30     FE FE 07 FE 
22c34     FA FE 01 FE 
22c38     FA FC FD FF 
22c3c     07 03 F6 FC | 	byte	$fe, $fe, $07, $fe, $fa, $fe, $01, $fe, $fa, $fc, $fd, $ff, $07, $03, $f6, $fc
22c40     00 06 01 FE 
22c44     FC 07 03 FE 
22c48     F8 FF 09 00 
22c4c     03 03 03 09 | 	byte	$00, $06, $01, $fe, $fc, $07, $03, $fe, $f8, $ff, $09, $00, $03, $03, $03, $09
22c50     03 FF 03 07 
22c54     0A 00 01 03 
22c58     06 09 05 07 
22c5c     04 07 FF 04 | 	byte	$03, $ff, $03, $07, $0a, $00, $01, $03, $06, $09, $05, $07, $04, $07, $ff, $04
22c60     03 11 09 04 
22c64     04 FB 07 12 
22c68     01 05 07 04 
22c6c     0F 06 03 07 | 	byte	$03, $11, $09, $04, $04, $fb, $07, $12, $01, $05, $07, $04, $0f, $06, $03, $07
22c70     06 0F 0A 07 
22c74     06 04 07 07 
22c78     07 09 05 07 
22c7c     07 03 06 03 | 	byte	$06, $0f, $0a, $07, $06, $04, $07, $07, $07, $09, $05, $07, $07, $03, $06, $03
22c80     F9 05 0E 07 
22c84     03 F8 03 03 
22c88     03 06 FD FC 
22c8c     02 00 0E F8 | 	byte	$f9, $05, $0e, $07, $03, $f8, $03, $03, $03, $06, $fd, $fc, $02, $00, $0e, $f8
22c90     F3 01 05 01 
22c94     03 F8 FC FF 
22c98     03 01 00 F3 
22c9c     05 04 03 F8 | 	byte	$f3, $01, $05, $01, $03, $f8, $fc, $ff, $03, $01, $00, $f3, $05, $04, $03, $f8
22ca0     F9 03 07 07 
22ca4     00 F8 07 03 
22ca8     02 04 FF 01 
22cac     07 09 07 01 | 	byte	$f9, $03, $07, $07, $00, $f8, $07, $03, $02, $04, $ff, $01, $07, $09, $07, $01
22cb0     03 08 04 01 
22cb4     02 0C 07 07 
22cb8     00 07 07 01 
22cbc     03 0C 00 05 | 	byte	$03, $08, $04, $01, $02, $0c, $07, $07, $00, $07, $07, $01, $03, $0c, $00, $05
22cc0     06 07 06 04 
22cc4     FE FE 0B 03 
22cc8     00 03 09 FC 
22ccc     FE 02 07 00 | 	byte	$06, $07, $06, $04, $fe, $fe, $0b, $03, $00, $03, $09, $fc, $fe, $02, $07, $00
22cd0     04 F8 03 00 
22cd4     00 FF 03 FD 
22cd8     F9 FD 0C 00 
22cdc     F8 F8 07 03 | 	byte	$04, $f8, $03, $00, $00, $ff, $03, $fd, $f9, $fd, $0c, $00, $f8, $f8, $07, $03
22ce0     FF F8 FB F8 
22ce4     02 05 FC F8 
22ce8     FB 03 09 FC 
22cec     FD 0B 0C FE | 	byte	$ff, $f8, $fb, $f8, $02, $05, $fc, $f8, $fb, $03, $09, $fc, $fd, $0b, $0c, $fe
22cf0     00 03 16 0C 
22cf4     00 03 0B 13 
22cf8     0E 0E 0C 0F 
22cfc     0F 15 13 10 | 	byte	$00, $03, $16, $0c, $00, $03, $0b, $13, $0e, $0e, $0c, $0f, $0f, $15, $13, $10
22d00     0F 15 12 16 
22d04     13 11 13 0F 
22d08     10 15 18 13 
22d0c     08 0E 0F 18 | 	byte	$0f, $15, $12, $16, $13, $11, $13, $0f, $10, $15, $18, $13, $08, $0e, $0f, $18
22d10     11 10 07 09 
22d14     13 0C 04 03 
22d18     08 0B 0C 08 
22d1c     FD 07 00 03 | 	byte	$11, $10, $07, $09, $13, $0c, $04, $03, $08, $0b, $0c, $08, $fd, $07, $00, $03
22d20     02 FB FF 04 
22d24     FC FC FF 01 
22d28     F9 F7 FD F6 
22d2c     FB FC FB F8 | 	byte	$02, $fb, $ff, $04, $fc, $fc, $ff, $01, $f9, $f7, $fd, $f6, $fb, $fc, $fb, $f8
22d30     F8 F4 F5 F8 
22d34     FF 00 F0 F7 
22d38     F9 FA F5 F3 
22d3c     F8 FB F4 F8 | 	byte	$f8, $f4, $f5, $f8, $ff, $00, $f0, $f7, $f9, $fa, $f5, $f3, $f8, $fb, $f4, $f8
22d40     F8 F1 F1 EF 
22d44     F9 FC F8 F4 
22d48     F3 F6 FB F8 
22d4c     F9 F8 F0 F3 | 	byte	$f8, $f1, $f1, $ef, $f9, $fc, $f8, $f4, $f3, $f6, $fb, $f8, $f9, $f8, $f0, $f3
22d50     03 FC 00 F8 
22d54     F6 F8 01 FB 
22d58     01 03 00 FF 
22d5c     00 03 07 00 | 	byte	$03, $fc, $00, $f8, $f6, $f8, $01, $fb, $01, $03, $00, $ff, $00, $03, $07, $00
22d60     03 07 01 03 
22d64     09 07 09 07 
22d68     07 04 08 07 
22d6c     0B 09 09 01 | 	byte	$03, $07, $01, $03, $09, $07, $09, $07, $07, $04, $08, $07, $0b, $09, $09, $01
22d70     05 07 08 FF 
22d74     0C 01 06 06 
22d78     02 FF 08 04 
22d7c     FE F8 01 03 | 	byte	$05, $07, $08, $ff, $0c, $01, $06, $06, $02, $ff, $08, $04, $fe, $f8, $01, $03
22d80     02 01 02 FC 
22d84     FC F9 01 03 
22d88     FA FB FF F9 
22d8c     FF 00 FD FC | 	byte	$02, $01, $02, $fc, $fc, $f9, $01, $03, $fa, $fb, $ff, $f9, $ff, $00, $fd, $fc
22d90     F9 FE FC F7 
22d94     03 06 01 FD 
22d98     F3 FE 00 03 
22d9c     FE F8 FC FD | 	byte	$f9, $fe, $fc, $f7, $03, $06, $01, $fd, $f3, $fe, $00, $03, $fe, $f8, $fc, $fd
22da0     01 03 01 F6 
22da4     FD 01 FF FD 
22da8     FB FF 00 FF 
22dac     F8 FB FF 03 | 	byte	$01, $03, $01, $f6, $fd, $01, $ff, $fd, $fb, $ff, $00, $ff, $f8, $fb, $ff, $03
22db0     F6 FC FB FF 
22db4     03 00 FC FB 
22db8     F8 FC FA FC 
22dbc     FD 00 FC F9 | 	byte	$f6, $fc, $fb, $ff, $03, $00, $fc, $fb, $f8, $fc, $fa, $fc, $fd, $00, $fc, $f9
22dc0     F8 FC FC FF 
22dc4     FA F8 F4 FF 
22dc8     01 00 FB F7 
22dcc     F7 00 FE FE | 	byte	$f8, $fc, $fc, $ff, $fa, $f8, $f4, $ff, $01, $00, $fb, $f7, $f7, $00, $fe, $fe
22dd0     FC F4 FD 00 
22dd4     FB 03 00 F8 
22dd8     FF FB FC FF 
22ddc     01 05 FD 01 | 	byte	$fc, $f4, $fd, $00, $fb, $03, $00, $f8, $ff, $fb, $fc, $ff, $01, $05, $fd, $01
22de0     FE FE 03 00 
22de4     FF 00 FC 07 
22de8     07 00 03 05 
22dec     03 03 FE 01 | 	byte	$fe, $fe, $03, $00, $ff, $00, $fc, $07, $07, $00, $03, $05, $03, $03, $fe, $01
22df0     03 06 0F 03 
22df4     01 06 05 03 
22df8     06 03 03 06 
22dfc     0B 0E 01 03 | 	byte	$03, $06, $0f, $03, $01, $06, $05, $03, $06, $03, $03, $06, $0b, $0e, $01, $03
22e00     FF FF 05 07 
22e04     0C 07 FC FF 
22e08     03 00 06 01 
22e0c     00 FC 04 FF | 	byte	$ff, $ff, $05, $07, $0c, $07, $fc, $ff, $03, $00, $06, $01, $00, $fc, $04, $ff
22e10     03 03 00 FD 
22e14     FC FE 03 FF 
22e18     F8 FC FC 03 
22e1c     FC F8 FB F8 | 	byte	$03, $03, $00, $fd, $fc, $fe, $03, $ff, $f8, $fc, $fc, $03, $fc, $f8, $fb, $f8
22e20     FB 06 00 F3 
22e24     F0 FC 06 00 
22e28     F0 EF FB F8 
22e2c     F8 F9 F9 F4 | 	byte	$fb, $06, $00, $f3, $f0, $fc, $06, $00, $f0, $ef, $fb, $f8, $f8, $f9, $f9, $f4
22e30     F1 F8 FA FC 
22e34     F8 F4 F3 F3 
22e38     FC FF F8 F5 
22e3c     EB FE F9 F8 | 	byte	$f1, $f8, $fa, $fc, $f8, $f4, $f3, $f3, $fc, $ff, $f8, $f5, $eb, $fe, $f9, $f8
22e40     FC F8 F0 FC 
22e44     FB F9 F8 F8 
22e48     F8 F8 FD F8 
22e4c     FB 00 FB F6 | 	byte	$fc, $f8, $f0, $fc, $fb, $f9, $f8, $f8, $f8, $f8, $fd, $f8, $fb, $00, $fb, $f6
22e50     F1 FB FF 03 
22e54     FA F8 F8 F3 
22e58     FD 00 FB F6 
22e5c     F3 FF F8 FB | 	byte	$f1, $fb, $ff, $03, $fa, $f8, $f8, $f3, $fd, $00, $fb, $f6, $f3, $ff, $f8, $fb
22e60     FC F6 F3 F6 
22e64     F7 F9 F9 FE 
22e68     F3 F3 F8 FC 
22e6c     FC F8 F5 F6 | 	byte	$fc, $f6, $f3, $f6, $f7, $f9, $f9, $fe, $f3, $f3, $f8, $fc, $fc, $f8, $f5, $f6
22e70     FC F4 F9 F8 
22e74     F6 FB FE F9 
22e78     F9 F3 F9 FC 
22e7c     03 00 F1 F8 | 	byte	$fc, $f4, $f9, $f8, $f6, $fb, $fe, $f9, $f9, $f3, $f9, $fc, $03, $00, $f1, $f8
22e80     FD 01 03 00 
22e84     F3 F9 FD 03 
22e88     03 F9 F7 FC 
22e8c     FF 07 00 FF | 	byte	$fd, $01, $03, $00, $f3, $f9, $fd, $03, $03, $f9, $f7, $fc, $ff, $07, $00, $ff
22e90     03 F8 F6 03 
22e94     07 08 00 FA 
22e98     FE 01 0B 03 
22e9c     FC 06 00 05 | 	byte	$03, $f8, $f6, $03, $07, $08, $00, $fa, $fe, $01, $0b, $03, $fc, $06, $00, $05
22ea0     03 FE 03 03 
22ea4     06 00 FB 03 
22ea8     0B 04 00 F8 
22eac     03 09 04 FB | 	byte	$03, $fe, $03, $03, $06, $00, $fb, $03, $0b, $04, $00, $f8, $03, $09, $04, $fb
22eb0     00 03 06 01 
22eb4     FF 04 00 FF 
22eb8     06 03 07 00 
22ebc     FF 0B 01 03 | 	byte	$00, $03, $06, $01, $ff, $04, $00, $ff, $06, $03, $07, $00, $ff, $0b, $01, $03
22ec0     07 04 03 FF 
22ec4     07 0B 03 07 
22ec8     01 09 0E 0C 
22ecc     06 09 07 04 | 	byte	$07, $04, $03, $ff, $07, $0b, $03, $07, $01, $09, $0e, $0c, $06, $09, $07, $04
22ed0     06 07 0F 09 
22ed4     02 0B 0C 0F 
22ed8     0F 07 07 06 
22edc     0F 18 0C 09 | 	byte	$06, $07, $0f, $09, $02, $0b, $0c, $0f, $0f, $07, $07, $06, $0f, $18, $0c, $09
22ee0     09 0C 0B 13 
22ee4     14 0E 09 09 
22ee8     0F 16 13 0C 
22eec     07 0D 16 11 | 	byte	$09, $0c, $0b, $13, $14, $0e, $09, $09, $0f, $16, $13, $0c, $07, $0d, $16, $11
22ef0     13 0D 09 0F 
22ef4     12 13 0F 0F 
22ef8     0E 0B 13 11 
22efc     0C 09 0C 0D | 	byte	$13, $0d, $09, $0f, $12, $13, $0f, $0f, $0e, $0b, $13, $11, $0c, $09, $0c, $0d
22f00     0F 12 0A 08 
22f04     09 0A 07 09 
22f08     0C 07 07 0C 
22f0c     02 FF 05 07 | 	byte	$0f, $12, $0a, $08, $09, $0a, $07, $09, $0c, $07, $07, $0c, $02, $ff, $05, $07
22f10     0C 01 FF 07 
22f14     01 0D 02 F7 
22f18     01 09 05 00 
22f1c     F9 FF FF 03 | 	byte	$0c, $01, $ff, $07, $01, $0d, $02, $f7, $01, $09, $05, $00, $f9, $ff, $ff, $03
22f20     00 FF F8 03 
22f24     00 01 FF FC 
22f28     F8 00 FA FF 
22f2c     FE 00 FF F9 | 	byte	$00, $ff, $f8, $03, $00, $01, $ff, $fc, $f8, $00, $fa, $ff, $fe, $00, $ff, $f9
22f30     FD 05 03 FD 
22f34     F8 FC FC 03 
22f38     03 00 FA FA 
22f3c     03 03 06 00 | 	byte	$fd, $05, $03, $fd, $f8, $fc, $fc, $03, $03, $00, $fa, $fa, $03, $03, $06, $00
22f40     FB FE 00 03 
22f44     06 FD 07 01 
22f48     F4 FF 02 00 
22f4c     03 FE 01 05 | 	byte	$fb, $fe, $00, $03, $06, $fd, $07, $01, $f4, $ff, $02, $00, $03, $fe, $01, $05
22f50     FC FC FF 01 
22f54     FC FE FC 01 
22f58     FC FB F9 FC 
22f5c     F8 FC FD F8 | 	byte	$fc, $fc, $ff, $01, $fc, $fe, $fc, $01, $fc, $fb, $f9, $fc, $f8, $fc, $fd, $f8
22f60     F3 00 F8 F6 
22f64     FB F4 F8 F9 
22f68     F6 F6 F4 F8 
22f6c     F6 F8 F8 F1 | 	byte	$f3, $00, $f8, $f6, $fb, $f4, $f8, $f9, $f6, $f6, $f4, $f8, $f6, $f8, $f8, $f1
22f70     F5 F8 F3 F0 
22f74     F5 F8 F9 F3 
22f78     F0 F6 FC F2 
22f7c     F3 F3 F5 F6 | 	byte	$f5, $f8, $f3, $f0, $f5, $f8, $f9, $f3, $f0, $f6, $fc, $f2, $f3, $f3, $f5, $f6
22f80     F8 F8 F5 F3 
22f84     F5 F9 F8 FB 
22f88     F9 F3 F6 F8 
22f8c     FE FE FA F2 | 	byte	$f8, $f8, $f5, $f3, $f5, $f9, $f8, $fb, $f9, $f3, $f6, $f8, $fe, $fe, $fa, $f2
22f90     F7 FC 01 FC 
22f94     F9 FC FA FB 
22f98     FF 06 03 F8 
22f9c     FB FC FF 03 | 	byte	$f7, $fc, $01, $fc, $f9, $fc, $fa, $fb, $ff, $06, $03, $f8, $fb, $fc, $ff, $03
22fa0     07 00 F8 FF 
22fa4     0B 04 FF 00 
22fa8     FB FF 07 04 
22fac     07 04 03 02 | 	byte	$07, $00, $f8, $ff, $0b, $04, $ff, $00, $fb, $ff, $07, $04, $07, $04, $03, $02
22fb0     02 01 09 07 
22fb4     06 05 07 07 
22fb8     01 07 06 07 
22fbc     0C 0A 03 07 | 	byte	$02, $01, $09, $07, $06, $05, $07, $07, $01, $07, $06, $07, $0c, $0a, $03, $07
22fc0     09 0F 05 03 
22fc4     0C 03 07 0C 
22fc8     0B 07 07 03 
22fcc     05 06 06 05 | 	byte	$09, $0f, $05, $03, $0c, $03, $07, $0c, $0b, $07, $07, $03, $05, $06, $06, $05
22fd0     07 07 00 07 
22fd4     08 00 03 07 
22fd8     01 02 00 01 
22fdc     07 04 FF 02 | 	byte	$07, $07, $00, $07, $08, $00, $03, $07, $01, $02, $00, $01, $07, $04, $ff, $02
22fe0     01 04 04 07 
22fe4     00 FD 00 FB 
22fe8     03 05 06 00 
22fec     F8 F9 01 03 | 	byte	$01, $04, $04, $07, $00, $fd, $00, $fb, $03, $05, $06, $00, $f8, $f9, $01, $03
22ff0     03 FB F8 FB 
22ff4     FC 03 FA F3 
22ff8     F8 FF F6 F9 
22ffc     F7 F6 F8 FA | 	byte	$03, $fb, $f8, $fb, $fc, $03, $fa, $f3, $f8, $ff, $f6, $f9, $f7, $f6, $f8, $fa
23000     F7 F9 F1 F9 
23004     FC F4 F8 F8 
23008     F5 F7 FE 00 
2300c     F3 F9 FB F9 | 	byte	$f7, $f9, $f1, $f9, $fc, $f4, $f8, $f8, $f5, $f7, $fe, $00, $f3, $f9, $fb, $f9
23010     FF FB FF FC 
23014     F9 FC 00 08 
23018     FE FC FC FF 
2301c     06 01 03 00 | 	byte	$ff, $fb, $ff, $fc, $f9, $fc, $00, $08, $fe, $fc, $fc, $ff, $06, $01, $03, $00
23020     FE 09 04 04 
23024     03 03 06 09 
23028     0A 03 03 07 
2302c     0B 09 09 07 | 	byte	$fe, $09, $04, $04, $03, $03, $06, $09, $0a, $03, $03, $07, $0b, $09, $09, $07
23030     06 0A 0E 0B 
23034     0C 04 09 0C 
23038     0F 0B 0B 09 
2303c     0C 08 07 0F | 	byte	$06, $0a, $0e, $0b, $0c, $04, $09, $0c, $0f, $0b, $0b, $09, $0c, $08, $07, $0f
23040     0C 0B 04 07 
23044     06 0E 11 0B 
23048     FE FC 06 07 
2304c     0F 08 FA FD | 	byte	$0c, $0b, $04, $07, $06, $0e, $11, $0b, $fe, $fc, $06, $07, $0f, $08, $fa, $fd
23050     03 07 07 FE 
23054     F9 FF 01 FE 
23058     F8 FE FD FA 
2305c     F8 FB F8 FB | 	byte	$03, $07, $07, $fe, $f9, $ff, $01, $fe, $f8, $fe, $fd, $fa, $f8, $fb, $f8, $fb
23060     F8 F7 F8 F8 
23064     F0 F7 F5 F3 
23068     F3 F7 F2 F0 
2306c     F1 F0 F0 F5 | 	byte	$f8, $f7, $f8, $f8, $f0, $f7, $f5, $f3, $f3, $f7, $f2, $f0, $f1, $f0, $f0, $f5
23070     F3 EC F0 F4 
23074     EE ED F3 F4 
23078     F3 F0 ED F0 
2307c     F3 F7 F0 F3 | 	byte	$f3, $ec, $f0, $f4, $ee, $ed, $f3, $f4, $f3, $f0, $ed, $f0, $f3, $f7, $f0, $f3
23080     F0 F0 F7 F9 
23084     F4 F6 F3 F6 
23088     F8 F8 F8 F8 
2308c     F8 F3 FB FC | 	byte	$f0, $f0, $f7, $f9, $f4, $f6, $f3, $f6, $f8, $f8, $f8, $f8, $f8, $f3, $fb, $fc
23090     F8 F9 F8 F8 
23094     FF FF FE FB 
23098     FE FC FC 01 
2309c     03 FE FB 01 | 	byte	$f8, $f9, $f8, $f8, $ff, $ff, $fe, $fb, $fe, $fc, $fc, $01, $03, $fe, $fb, $01
230a0     06 03 02 00 
230a4     00 04 07 09 
230a8     FD FF 04 07 
230ac     07 09 06 02 | 	byte	$06, $03, $02, $00, $00, $04, $07, $09, $fd, $ff, $04, $07, $07, $09, $06, $02
230b0     01 03 0E 0C 
230b4     01 FD 03 03 
230b8     0B 0E 0C 01 
230bc     F8 FF 09 0C | 	byte	$01, $03, $0e, $0c, $01, $fd, $03, $03, $0b, $0e, $0c, $01, $f8, $ff, $09, $0c
230c0     06 00 04 05 
230c4     06 06 06 01 
230c8     01 03 03 04 
230cc     03 03 03 FF | 	byte	$06, $00, $04, $05, $06, $06, $06, $01, $01, $03, $03, $04, $03, $03, $03, $ff
230d0     03 01 03 06 
230d4     FF FF 04 00 
230d8     02 FF 02 FD 
230dc     FF FF 03 01 | 	byte	$03, $01, $03, $06, $ff, $ff, $04, $00, $02, $ff, $02, $fd, $ff, $ff, $03, $01
230e0     FE FC FC 03 
230e4     FC F9 FF FB 
230e8     FC 01 FE F8 
230ec     F8 F9 FC FE | 	byte	$fe, $fc, $fc, $03, $fc, $f9, $ff, $fb, $fc, $01, $fe, $f8, $f8, $f9, $fc, $fe
230f0     FC F8 F4 F9 
230f4     FD FB FD FE 
230f8     F9 F9 F6 FC 
230fc     03 00 FC F8 | 	byte	$fc, $f8, $f4, $f9, $fd, $fb, $fd, $fe, $f9, $f9, $f6, $fc, $03, $00, $fc, $f8
23100     FB 01 FF 02 
23104     00 FC FE FE 
23108     07 0B 00 FC 
2310c     01 07 09 07 | 	byte	$fb, $01, $ff, $02, $00, $fc, $fe, $fe, $07, $0b, $00, $fc, $01, $07, $09, $07
23110     02 01 07 0D 
23114     08 03 06 07 
23118     06 0C 0B 07 
2311c     0B 0C 07 07 | 	byte	$02, $01, $07, $0d, $08, $03, $06, $07, $06, $0c, $0b, $07, $0b, $0c, $07, $07
23120     0F 0E 07 0C 
23124     0D 0C 0F 0E 
23128     0A 0D 0F 13 
2312c     0F 0E 0D 13 | 	byte	$0f, $0e, $07, $0c, $0d, $0c, $0f, $0e, $0a, $0d, $0f, $13, $0f, $0e, $0d, $13
23130     13 10 0D 0E 
23134     0E 16 13 0F 
23138     0C 11 14 0F 
2313c     0E 11 16 13 | 	byte	$13, $10, $0d, $0e, $0e, $16, $13, $0f, $0c, $11, $14, $0f, $0e, $11, $16, $13
23140     0F 0E 0F 11 
23144     14 14 13 10 
23148     0B 0F 17 0F 
2314c     0F 0B 0D 11 | 	byte	$0f, $0e, $0f, $11, $14, $14, $13, $10, $0b, $0f, $17, $0f, $0f, $0b, $0d, $11
23150     10 0F 0B 09 
23154     0D 0B 0C 09 
23158     05 0A 0C 04 
2315c     04 06 06 03 | 	byte	$10, $0f, $0b, $09, $0d, $0b, $0c, $09, $05, $0a, $0c, $04, $04, $06, $06, $03
23160     FE FE 03 03 
23164     01 FB FC FC 
23168     FD FE FD FB 
2316c     FD F9 F8 FA | 	byte	$fe, $fe, $03, $03, $01, $fb, $fc, $fc, $fd, $fe, $fd, $fb, $fd, $f9, $f8, $fa
23170     F9 F9 FC F6 
23174     F8 FB F9 F9 
23178     F8 FA FB F8 
2317c     F4 FC F9 F3 | 	byte	$f9, $f9, $fc, $f6, $f8, $fb, $f9, $f9, $f8, $fa, $fb, $f8, $f4, $fc, $f9, $f3
23180     FB F8 F3 F9 
23184     FB F6 F3 F2 
23188     F7 FC F8 EE 
2318c     F3 F8 F8 F3 | 	byte	$fb, $f8, $f3, $f9, $fb, $f6, $f3, $f2, $f7, $fc, $f8, $ee, $f3, $f8, $f8, $f3
23190     F2 F2 F1 F3 
23194     F8 F1 F3 F3 
23198     F4 F2 F6 F8 
2319c     F8 F3 F0 F7 | 	byte	$f2, $f2, $f1, $f3, $f8, $f1, $f3, $f3, $f4, $f2, $f6, $f8, $f8, $f3, $f0, $f7
231a0     FC FA F9 F3 
231a4     F6 FC FD FF 
231a8     FA F5 FC 00 
231ac     03 FC F8 FB | 	byte	$fc, $fa, $f9, $f3, $f6, $fc, $fd, $ff, $fa, $f5, $fc, $00, $03, $fc, $f8, $fb
231b0     01 03 02 FF 
231b4     FF FC 01 03 
231b8     03 00 00 01 
231bc     01 03 03 01 | 	byte	$01, $03, $02, $ff, $ff, $fc, $01, $03, $03, $00, $00, $01, $01, $03, $03, $01
231c0     03 00 FF 03 
231c4     07 06 FF 01 
231c8     03 00 03 02 
231cc     03 01 FF 03 | 	byte	$03, $00, $ff, $03, $07, $06, $ff, $01, $03, $00, $03, $02, $03, $01, $ff, $03
231d0     04 00 00 03 
231d4     00 FE 01 01 
231d8     FF 00 FC FF 
231dc     00 FE FC FE | 	byte	$04, $00, $00, $03, $00, $fe, $01, $01, $ff, $00, $fc, $ff, $00, $fe, $fc, $fe
231e0     01 00 FE FE 
231e4     00 FC F9 FF 
231e8     01 FF FF FB 
231ec     FD FC FF 00 | 	byte	$01, $00, $fe, $fe, $00, $fc, $f9, $ff, $01, $ff, $ff, $fb, $fd, $fc, $ff, $00
231f0     00 F8 FC FE 
231f4     01 FC FC FB 
231f8     FB F8 FB FE 
231fc     FC FB F8 F8 | 	byte	$00, $f8, $fc, $fe, $01, $fc, $fc, $fb, $fb, $f8, $fb, $fe, $fc, $fb, $f8, $f8
23200     F8 FB FC FB 
23204     F3 F3 F9 FE 
23208     F8 F1 F7 FB 
2320c     FB F6 F8 FB | 	byte	$f8, $fb, $fc, $fb, $f3, $f3, $f9, $fe, $f8, $f1, $f7, $fb, $fb, $f6, $f8, $fb
23210     F8 F8 F9 FC 
23214     FC FB FA F9 
23218     FF FC FC 01 
2321c     FB FC FB FF | 	byte	$f8, $f8, $f9, $fc, $fc, $fb, $fa, $f9, $ff, $fc, $fc, $01, $fb, $fc, $fb, $ff
23220     FF FF FE FD 
23224     00 00 FC 01 
23228     01 FF FF FE 
2322c     FF 03 00 FF | 	byte	$ff, $ff, $fe, $fd, $00, $00, $fc, $01, $01, $ff, $ff, $fe, $ff, $03, $00, $ff
23230     FF FF 01 03 
23234     03 00 FF FE 
23238     03 03 03 FF 
2323c     06 06 05 07 | 	byte	$ff, $ff, $01, $03, $03, $00, $ff, $fe, $03, $03, $03, $ff, $06, $06, $05, $07
23240     06 02 06 09 
23244     09 07 07 07 
23248     07 09 09 09 
2324c     07 09 0C 06 | 	byte	$06, $02, $06, $09, $09, $07, $07, $07, $07, $09, $09, $09, $07, $09, $0c, $06
23250     09 0C 0B 07 
23254     07 09 0C 09 
23258     07 05 08 07 
2325c     09 07 07 0A | 	byte	$09, $0c, $0b, $07, $07, $09, $0c, $09, $07, $05, $08, $07, $09, $07, $07, $0a
23260     07 03 07 08 
23264     06 03 03 06 
23268     08 07 07 07 
2326c     03 00 01 07 | 	byte	$07, $03, $07, $08, $06, $03, $03, $06, $08, $07, $07, $07, $03, $00, $01, $07
23270     08 00 07 06 
23274     FE FF 01 07 
23278     06 00 FE FD 
2327c     01 04 01 FC | 	byte	$08, $00, $07, $06, $fe, $ff, $01, $07, $06, $00, $fe, $fd, $01, $04, $01, $fc
23280     F9 FC FF FE 
23284     F9 FB F9 F8 
23288     F9 FC F8 FB 
2328c     F8 FB F9 F7 | 	byte	$f9, $fc, $ff, $fe, $f9, $fb, $f9, $f8, $f9, $fc, $f8, $fb, $f8, $fb, $f9, $f7
23290     F8 F8 F6 F8 
23294     F8 F8 F3 F6 
23298     FB FC F8 F4 
2329c     F9 F5 FC FD | 	byte	$f8, $f8, $f6, $f8, $f8, $f8, $f3, $f6, $fb, $fc, $f8, $f4, $f9, $f5, $fc, $fd
232a0     F9 FC F8 FB 
232a4     FE FE FF F8 
232a8     F9 FE FE FE 
232ac     FB FC FF FE | 	byte	$f9, $fc, $f8, $fb, $fe, $fe, $ff, $f8, $f9, $fe, $fe, $fe, $fb, $fc, $ff, $fe
232b0     FA FC FC FF 
232b4     00 FC FE FE 
232b8     FF FE FD FD 
232bc     FC FC 01 00 | 	byte	$fa, $fc, $fc, $ff, $00, $fc, $fe, $fe, $ff, $fe, $fd, $fd, $fc, $fc, $01, $00
232c0     FD FC FE 01 
232c4     01 FE FC FD 
232c8     03 04 FB FE 
232cc     03 01 02 FE | 	byte	$fd, $fc, $fe, $01, $01, $fe, $fc, $fd, $03, $04, $fb, $fe, $03, $01, $02, $fe
232d0     FC 01 06 04 
232d4     FE FF 01 00 
232d8     FF 03 02 00 
232dc     FF FF 03 FF | 	byte	$fc, $01, $06, $04, $fe, $ff, $01, $00, $ff, $03, $02, $00, $ff, $ff, $03, $ff
232e0     01 01 01 FD 
232e4     FF 03 FF FF 
232e8     FC FD FF FE 
232ec     01 FC FB FE | 	byte	$01, $01, $01, $fd, $ff, $03, $ff, $ff, $fc, $fd, $ff, $fe, $01, $fc, $fb, $fe
232f0     FC FB FC F8 
232f4     FD FC FA F8 
232f8     F8 F9 FB F8 
232fc     FB F8 F8 FB | 	byte	$fc, $fb, $fc, $f8, $fd, $fc, $fa, $f8, $f8, $f9, $fb, $f8, $fb, $f8, $f8, $fb
23300     FA FC F8 F4 
23304     FA FC FC F9 
23308     F8 FB FB F9 
2330c     00 F9 F8 FE | 	byte	$fa, $fc, $f8, $f4, $fa, $fc, $fc, $f9, $f8, $fb, $fb, $f9, $00, $f9, $f8, $fe
23310     FC FE FD FB 
23314     01 00 FF FF 
23318     FC FF FF 02 
2331c     03 01 00 FE | 	byte	$fc, $fe, $fd, $fb, $01, $00, $ff, $ff, $fc, $ff, $ff, $02, $03, $01, $00, $fe
23320     FF 03 04 01 
23324     06 00 03 03 
23328     03 06 03 03 
2332c     03 FE 05 0C | 	byte	$ff, $03, $04, $01, $06, $00, $03, $03, $03, $06, $03, $03, $03, $fe, $05, $0c
23330     06 00 01 07 
23334     07 06 04 03 
23338     04 07 0B 0C 
2333c     04 FF 07 0F | 	byte	$06, $00, $01, $07, $07, $06, $04, $03, $04, $07, $0b, $0c, $04, $ff, $07, $0f
23340     0C 07 05 09 
23344     0C 09 0B 0C 
23348     09 09 08 0C 
2334c     0D 08 04 07 | 	byte	$0c, $07, $05, $09, $0c, $09, $0b, $0c, $09, $09, $08, $0c, $0d, $08, $04, $07
23350     0B 0E 0C 07 
23354     04 07 09 0C 
23358     0A 08 07 07 
2335c     0B 0E 03 07 | 	byte	$0b, $0e, $0c, $07, $04, $07, $09, $0c, $0a, $08, $07, $07, $0b, $0e, $03, $07
23360     08 07 09 09 
23364     07 07 07 0A 
23368     07 07 07 08 
2336c     09 0B 06 07 | 	byte	$08, $07, $09, $09, $07, $07, $07, $0a, $07, $07, $07, $08, $09, $0b, $06, $07
23370     09 09 0A 09 
23374     07 0B 08 08 
23378     09 07 09 06 
2337c     09 0C 06 07 | 	byte	$09, $09, $0a, $09, $07, $0b, $08, $08, $09, $07, $09, $06, $09, $0c, $06, $07
23380     09 04 06 07 
23384     0A 07 06 04 
23388     06 06 06 03 
2338c     07 05 01 03 | 	byte	$09, $04, $06, $07, $0a, $07, $06, $04, $06, $06, $06, $03, $07, $05, $01, $03
23390     05 01 01 00 
23394     FF 03 03 01 
23398     FF FF 00 01 
2339c     FF FC FB FE | 	byte	$05, $01, $01, $00, $ff, $03, $03, $01, $ff, $ff, $00, $01, $ff, $fc, $fb, $fe
233a0     00 FE FC F9 
233a4     F9 FD FC FC 
233a8     F8 FE FC F6 
233ac     F9 FE F9 FB | 	byte	$00, $fe, $fc, $f9, $f9, $fd, $fc, $fc, $f8, $fe, $fc, $f6, $f9, $fe, $f9, $fb
233b0     F8 F7 F8 F8 
233b4     FB FA F9 F6 
233b8     F9 FA FC F8 
233bc     F9 FB F8 F8 | 	byte	$f8, $f7, $f8, $f8, $fb, $fa, $f9, $f6, $f9, $fa, $fc, $f8, $f9, $fb, $f8, $f8
233c0     FA FB FE F8 
233c4     F6 F7 FC FD 
233c8     FC F6 F8 F8 
233cc     FB FD F9 F9 | 	byte	$fa, $fb, $fe, $f8, $f6, $f7, $fc, $fd, $fc, $f6, $f8, $f8, $fb, $fd, $f9, $f9
233d0     F8 F9 FC FC 
233d4     F8 F8 FC FF 
233d8     F8 F7 FC F9 
233dc     FA FB FC FC | 	byte	$f8, $f9, $fc, $fc, $f8, $f8, $fc, $ff, $f8, $f7, $fc, $f9, $fa, $fb, $fc, $fc
233e0     FD F8 F8 FF 
233e4     FF FC FB FC 
233e8     F9 FF 01 FE 
233ec     FD FB FB 00 | 	byte	$fd, $f8, $f8, $ff, $ff, $fc, $fb, $fc, $f9, $ff, $01, $fe, $fd, $fb, $fb, $00
233f0     01 FF FE FC 
233f4     FC FD 01 01 
233f8     FC FC FC FF 
233fc     00 01 00 FC | 	byte	$01, $ff, $fe, $fc, $fc, $fd, $01, $01, $fc, $fc, $fc, $ff, $00, $01, $00, $fc
23400     FC FF 01 03 
23404     01 FC FE 03 
23408     00 FF 00 FE 
2340c     01 04 01 FF | 	byte	$fc, $ff, $01, $03, $01, $fc, $fe, $03, $00, $ff, $00, $fe, $01, $04, $01, $ff
23410     FF 00 FF 00 
23414     04 03 FF 01 
23418     00 03 04 01 
2341c     FF FF FF FF | 	byte	$ff, $00, $ff, $00, $04, $03, $ff, $01, $00, $03, $04, $01, $ff, $ff, $ff, $ff
23420     04 04 00 FC 
23424     FE 01 FF 01 
23428     FF 00 FE FC 
2342c     01 01 FF FD | 	byte	$04, $04, $00, $fc, $fe, $01, $ff, $01, $ff, $00, $fe, $fc, $01, $01, $ff, $fd
23430     FB FC FF FF 
23434     00 FD FC FE 
23438     00 01 00 FB 
2343c     FC FF 01 FF | 	byte	$fb, $fc, $ff, $ff, $00, $fd, $fc, $fe, $00, $01, $00, $fb, $fc, $ff, $01, $ff
23440     00 FF FD FF 
23444     01 FF 03 03 
23448     FF FE 00 03 
2344c     01 FE FE 00 | 	byte	$00, $ff, $fd, $ff, $01, $ff, $03, $03, $ff, $fe, $00, $03, $01, $fe, $fe, $00
23450     FF 03 FE FC 
23454     FB FF 03 00 
23458     FB F9 FC 01 
2345c     01 FE FA FC | 	byte	$ff, $03, $fe, $fc, $fb, $ff, $03, $00, $fb, $f9, $fc, $01, $01, $fe, $fa, $fc
23460     FF FE FF 00 
23464     00 FC FC FC 
23468     01 01 FC FB 
2346c     FB 01 03 00 | 	byte	$ff, $fe, $ff, $00, $00, $fc, $fc, $fc, $01, $01, $fc, $fb, $fb, $01, $03, $00
23470     FF FE FC 01 
23474     04 01 FE FC 
23478     02 01 FF 00 
2347c     FD FF 03 FF | 	byte	$ff, $fe, $fc, $01, $04, $01, $fe, $fc, $02, $01, $ff, $00, $fd, $ff, $03, $ff
23480     03 01 FF FF 
23484     00 01 03 02 
23488     00 FC 00 03 
2348c     00 FF 01 00 | 	byte	$03, $01, $ff, $ff, $00, $01, $03, $02, $00, $fc, $00, $03, $00, $ff, $01, $00
23490     01 02 FF 05 
23494     01 FF 03 04 
23498     03 02 02 03 
2349c     03 04 08 06 | 	byte	$01, $02, $ff, $05, $01, $ff, $03, $04, $03, $02, $02, $03, $03, $04, $08, $06
234a0     01 05 06 05 
234a4     0B 0B 07 07 
234a8     06 07 0D 09 
234ac     07 07 09 09 | 	byte	$01, $05, $06, $05, $0b, $0b, $07, $07, $06, $07, $0d, $09, $07, $07, $09, $09
234b0     07 0B 09 07 
234b4     07 08 09 0C 
234b8     08 08 07 06 
234bc     06 07 07 03 | 	byte	$07, $0b, $09, $07, $07, $08, $09, $0c, $08, $08, $07, $06, $06, $07, $07, $03
234c0     07 09 03 02 
234c4     04 03 03 01 
234c8     01 01 01 00 
234cc     01 01 00 FF | 	byte	$07, $09, $03, $02, $04, $03, $03, $01, $01, $01, $01, $00, $01, $01, $00, $ff
234d0     FF FE FC FC 
234d4     01 01 FE F9 
234d8     FD 00 FF FF 
234dc     FB FF FC FB | 	byte	$ff, $fe, $fc, $fc, $01, $01, $fe, $f9, $fd, $00, $ff, $ff, $fb, $ff, $fc, $fb
234e0     FE FF FE FC 
234e4     FC FE FC F9 
234e8     FC FB FC FD 
234ec     FE FD F9 F8 | 	byte	$fe, $ff, $fe, $fc, $fc, $fe, $fc, $f9, $fc, $fb, $fc, $fd, $fe, $fd, $f9, $f8
234f0     FF FE F8 F8 
234f4     FA FF FC F8 
234f8     FA FB F9 F9 
234fc     FC FE FC FC | 	byte	$ff, $fe, $f8, $f8, $fa, $ff, $fc, $f8, $fa, $fb, $f9, $f9, $fc, $fe, $fc, $fc
23500     FB FC FF FC 
23504     FE FD FC FD 
23508     FF FC FF FB 
2350c     FF 00 00 FC | 	byte	$fb, $fc, $ff, $fc, $fe, $fd, $fc, $fd, $ff, $fc, $ff, $fb, $ff, $00, $00, $fc
23510     FF FE 03 FE 
23514     FC FE 00 01 
23518     01 FE FC FD 
2351c     01 00 FF FC | 	byte	$ff, $fe, $03, $fe, $fc, $fe, $00, $01, $01, $fe, $fc, $fd, $01, $00, $ff, $fc
23520     FF FE FF FF 
23524     FF FE FB FE 
23528     01 FF FE FC 
2352c     FE FF FE FE | 	byte	$ff, $fe, $ff, $ff, $ff, $fe, $fb, $fe, $01, $ff, $fe, $fc, $fe, $ff, $fe, $fe
23530     00 FC FC FD 
23534     FE 00 FE FC 
23538     FC FC FE 00 
2353c     FC FE FB FC | 	byte	$00, $fc, $fc, $fd, $fe, $00, $fe, $fc, $fc, $fc, $fe, $00, $fc, $fe, $fb, $fc
23540     FE 00 FC FB 
23544     FC FF FE FE 
23548     FE FB FC FE 
2354c     FF FC FE FF | 	byte	$fe, $00, $fc, $fb, $fc, $ff, $fe, $fe, $fe, $fb, $fc, $fe, $ff, $fc, $fe, $ff
23550     FF FE FE FC 
23554     FF 03 00 FE 
23558     FF FF 01 03 
2355c     01 FF FF 05 | 	byte	$ff, $fe, $fe, $fc, $ff, $03, $00, $fe, $ff, $ff, $01, $03, $01, $ff, $ff, $05
23560     04 00 00 03 
23564     04 03 05 03 
23568     02 03 05 06 
2356c     03 03 04 07 | 	byte	$04, $00, $00, $03, $04, $03, $05, $03, $02, $03, $05, $06, $03, $03, $04, $07
23570     05 03 04 07 
23574     06 03 03 05 
23578     08 07 01 03 
2357c     06 07 07 07 | 	byte	$05, $03, $04, $07, $06, $03, $03, $05, $08, $07, $01, $03, $06, $07, $07, $07
23580     04 03 07 07 
23584     07 07 03 06 
23588     07 09 06 05 
2358c     07 07 07 07 | 	byte	$04, $03, $07, $07, $07, $07, $03, $06, $07, $09, $06, $05, $07, $07, $07, $07
23590     07 07 07 07 
23594     07 07       | 	byte	$07[6]
23596     0B 06 07 08 
2359a     07 07 0B 07 
2359e     06 06 07 09 
235a2     08 07 08 08 | 	byte	$0b, $06, $07, $08, $07, $07, $0b, $07, $06, $06, $07, $09, $08, $07, $08, $08
235a6     07 07 07 07 
235aa     07 07       | 	byte	$07[6]
235ac     08 06 07 06 
235b0     07 06 07 06 
235b4     06 07 04 01 
235b8     06 07 03 01 | 	byte	$08, $06, $07, $06, $07, $06, $07, $06, $06, $07, $04, $01, $06, $07, $03, $01
235bc     03 03 03 03 
235c0     04 01 00 01 
235c4     02 01 03 04 
235c8     00 FF FE FF | 	byte	$03, $03, $03, $03, $04, $01, $00, $01, $02, $01, $03, $04, $00, $ff, $fe, $ff
235cc     04 03 FF FF 
235d0     01 02 01 00 
235d4     FF FF FE FF 
235d8     01 00 FE FE | 	byte	$04, $03, $ff, $ff, $01, $02, $01, $00, $ff, $ff, $fe, $ff, $01, $00, $fe, $fe
235dc     FE FC FD FF 
235e0     FE FD FB F9 
235e4     FD FD FD FA 
235e8     F9 F9 FB FB | 	byte	$fe, $fc, $fd, $ff, $fe, $fd, $fb, $f9, $fd, $fd, $fd, $fa, $f9, $f9, $fb, $fb
235ec     FA F8 F8 FA 
235f0     F9 F8 F8 FB 
235f4     F9 F8 F8 F8 
235f8     FA FB F8 F9 | 	byte	$fa, $f8, $f8, $fa, $f9, $f8, $f8, $fb, $f9, $f8, $f8, $f8, $fa, $fb, $f8, $f9
235fc     FB F8 F8 FB 
23600     FC FC F9 FB 
23604     F9 F9 FC FC 
23608     FE FC FB FD | 	byte	$fb, $f8, $f8, $fb, $fc, $fc, $f9, $fb, $f9, $f9, $fc, $fc, $fe, $fc, $fb, $fd
2360c     FF FF FC FC 
23610     FF FF FC FC 
23614     FF 00 00 F9 
23618     FB FF FE 00 | 	byte	$ff, $ff, $fc, $fc, $ff, $ff, $fc, $fc, $ff, $00, $00, $f9, $fb, $ff, $fe, $00
2361c     FF FF FE FC 
23620     FE FC FF 00 
23624     FE FC FD FF 
23628     FF FF FC FC | 	byte	$ff, $ff, $fe, $fc, $fe, $fc, $ff, $00, $fe, $fc, $fd, $ff, $ff, $ff, $fc, $fc
2362c     FC FF FE FE 
23630     FE FC FB FE 
23634     FB FD FE FC 
23638     FC FD FE FB | 	byte	$fc, $ff, $fe, $fe, $fe, $fc, $fb, $fe, $fb, $fd, $fe, $fc, $fc, $fd, $fe, $fb
2363c     FE FE FB FC 
23640     FE FC FC FE 
23644     FC FE FC FE 
23648     FF FE FE FC | 	byte	$fe, $fe, $fb, $fc, $fe, $fc, $fc, $fe, $fc, $fe, $fc, $fe, $ff, $fe, $fe, $fc
2364c     FD FE FF 00 
23650     FE FB FD FF 
23654     FF FC FB FE 
23658     FE FC FC FB | 	byte	$fd, $fe, $ff, $00, $fe, $fb, $fd, $ff, $ff, $fc, $fb, $fe, $fe, $fc, $fc, $fb
2365c     FD FC F9 FC 
23660     FB FB FB FC 
23664     FC FB FC FA 
23668     FB FC FB F9 | 	byte	$fd, $fc, $f9, $fc, $fb, $fb, $fb, $fc, $fc, $fb, $fc, $fa, $fb, $fc, $fb, $f9
2366c     FC FD FC FC 
23670     FC FC FE FF 
23674     FC F8 FE FF 
23678     FF FE FB FC | 	byte	$fc, $fd, $fc, $fc, $fc, $fc, $fe, $ff, $fc, $f8, $fe, $ff, $ff, $fe, $fb, $fc
2367c     00 FF FE FC 
23680     FB FF 00 00 
23684     00 FE FE FE 
23688     FE FF 00 00 | 	byte	$00, $ff, $fe, $fc, $fb, $ff, $00, $00, $00, $fe, $fe, $fe, $fe, $ff, $00, $00
2368c     FF FE 00 01 
23690     01 FE FF 01 
23694     01 00 03 03 
23698     FF 03 05 03 | 	byte	$ff, $fe, $00, $01, $01, $fe, $ff, $01, $01, $00, $03, $03, $ff, $03, $05, $03
2369c     01 03 03 04 
236a0     03 05 06 05 
236a4     03 03 07 07 
236a8     06 04 05 07 | 	byte	$01, $03, $03, $04, $03, $05, $06, $05, $03, $03, $07, $07, $06, $04, $05, $07
236ac     07 07 07 07 
236b0     06 07 07 07 
236b4     06 06 06 07 
236b8     07 07 07 07 | 	byte	$07, $07, $07, $07, $06, $07, $07, $07, $06, $06, $06, $07, $07, $07, $07, $07
236bc     06 06 06 0A 
236c0     07 06 07 06 
236c4     07 07 06 04 
236c8     04 07 09 04 | 	byte	$06, $06, $06, $0a, $07, $06, $07, $06, $07, $07, $06, $04, $04, $07, $09, $04
236cc     05 04 06 06 
236d0     05 06 03 07 
236d4     07 05 03 00 
236d8     04 07 04 00 | 	byte	$05, $04, $06, $06, $05, $06, $03, $07, $07, $05, $03, $00, $04, $07, $04, $00
236dc     01 03 04 03 
236e0     02 02 02 01 
236e4     06 03 01 00 
236e8     01 03 01 FF | 	byte	$01, $03, $04, $03, $02, $02, $02, $01, $06, $03, $01, $00, $01, $03, $01, $ff
236ec     03 00 FF 00 
236f0     03 01 FF FF 
236f4     00 01 03 FE 
236f8     FE 00 02 00 | 	byte	$03, $00, $ff, $00, $03, $01, $ff, $ff, $00, $01, $03, $fe, $fe, $00, $02, $00
236fc     FF 00 FE FE 
23700     00 04 00 FC 
23704     FE FF FF 01 
23708     FF FF FC FB | 	byte	$ff, $00, $fe, $fe, $00, $04, $00, $fc, $fe, $ff, $ff, $01, $ff, $ff, $fc, $fb
2370c     FF 01 00 FC 
23710     FD FE FC FE 
23714     00 00 FD FC 
23718     FB FC FE FF | 	byte	$ff, $01, $00, $fc, $fd, $fe, $fc, $fe, $00, $00, $fd, $fc, $fb, $fc, $fe, $ff
2371c     00 FC F9 FD 
23720     01 FF FC FC 
23724     FF 00 FD FC 
23728     FF 03 00 FC | 	byte	$00, $fc, $f9, $fd, $01, $ff, $fc, $fc, $ff, $00, $fd, $fc, $ff, $03, $00, $fc
2372c     FE FF 00 FE 
23730     00 FF 00 FD 
23734     FF 00 FF FE 
23738     FE FF FF FE | 	byte	$fe, $ff, $00, $fe, $00, $ff, $00, $fd, $ff, $00, $ff, $fe, $fe, $ff, $ff, $fe
2373c     01 FE FE FC 
23740     FC FF 00 FC 
23744     FE FC FE FD 
23748     FC FC FB FC | 	byte	$01, $fe, $fe, $fc, $fc, $ff, $00, $fc, $fe, $fc, $fe, $fd, $fc, $fc, $fb, $fc
2374c     FF FC FB FB 
23750     FB FD FC FC 
23754     FC FB FC FC 
23758     FA FC FB F9 | 	byte	$ff, $fc, $fb, $fb, $fb, $fd, $fc, $fc, $fc, $fb, $fc, $fc, $fa, $fc, $fb, $f9
2375c     FC FC FC F9 
23760     F8 FC FB FC 
23764     FC FB FB FC 
23768     FC FC FD FD | 	byte	$fc, $fc, $fc, $f9, $f8, $fc, $fb, $fc, $fc, $fb, $fb, $fc, $fc, $fc, $fd, $fd
2376c     FC FB FD FF 
23770     FF FC FD FE 
23774     FF FE FF FE 
23778     FF 03 00 FF | 	byte	$fc, $fb, $fd, $ff, $ff, $fc, $fd, $fe, $ff, $fe, $ff, $fe, $ff, $03, $00, $ff
2377c     00 00 01 00 
23780     00 03 01 02 
23784     01 01 03 03 
23788     03 04 03 03 | 	byte	$00, $00, $01, $00, $00, $03, $01, $02, $01, $01, $03, $03, $03, $04, $03, $03
2378c     03 03 05 03 
23790     06 07 07 06 
23794     03 04 07 07 
23798     06 06 07 07 | 	byte	$03, $03, $05, $03, $06, $07, $07, $06, $03, $04, $07, $07, $06, $06, $07, $07
2379c     07 09 06 07 
237a0     07 09 07 07 
237a4     07 07 07 07 
237a8     07 07 07 06 | 	byte	$07, $09, $06, $07, $07, $09, $07, $07, $07, $07, $07, $07, $07, $07, $07, $06
237ac     06 09 08 06 
237b0     07 07 07 06 
237b4     04 05 07 04 
237b8     06 06 04 01 | 	byte	$06, $09, $08, $06, $07, $07, $07, $06, $04, $05, $07, $04, $06, $06, $04, $01
237bc     03 07 04 03 
237c0     01 03 04 03 
237c4     03 02 01 03 
237c8     03 01 01 03 | 	byte	$03, $07, $04, $03, $01, $03, $04, $03, $03, $02, $01, $03, $03, $01, $01, $03
237cc     03 03 00 FF 
237d0     03 02 02 01 
237d4     01 03 01 02 
237d8     02 01 02 01 | 	byte	$03, $03, $00, $ff, $03, $02, $02, $01, $01, $03, $01, $02, $02, $01, $02, $01
237dc     03 03 01 FF 
237e0     01 01 03 00 
237e4     FF 01 02 00 
237e8     01 00 01 03 | 	byte	$03, $03, $01, $ff, $01, $01, $03, $00, $ff, $01, $02, $00, $01, $00, $01, $03
237ec     03 01 00 FF 
237f0     01 FF 03 03 
237f4     01 01 00 FF 
237f8     02 00 03 01 | 	byte	$03, $01, $00, $ff, $01, $ff, $03, $03, $01, $01, $00, $ff, $02, $00, $03, $01
237fc     01 02 01 01 
23800     01 01 00 FF 
23804     02 01 01 01 
23808     01 01 FF 00 | 	byte	$01, $02, $01, $01, $01, $01, $00, $ff, $02, $01, $01, $01, $01, $01, $ff, $00
2380c     03 03 00 FF 
23810     00 01 02 00 
23814     00 00 00 00 
23818     FE 01 01 FF | 	byte	$03, $03, $00, $ff, $00, $01, $02, $00, $00, $00, $00, $00, $fe, $01, $01, $ff
2381c     FE FF 00 01 
23820     FE FE FD FF 
23824     FF FF FD FC 
23828     FF 00 FE FF | 	byte	$fe, $ff, $00, $01, $fe, $fe, $fd, $ff, $ff, $ff, $fd, $fc, $ff, $00, $fe, $ff
2382c     FC FE FE FF 
23830     FC FC FE FF 
23834     FE FC FE FF 
23838     FC FB FE FF | 	byte	$fc, $fe, $fe, $ff, $fc, $fc, $fe, $ff, $fe, $fc, $fe, $ff, $fc, $fb, $fe, $ff
2383c     FE FC FC FB 
23840     FC FE FC FC 
23844     FC FC FC FC 
23848     FF FC FC FC | 	byte	$fe, $fc, $fc, $fb, $fc, $fe, $fc, $fc, $fc, $fc, $fc, $fc, $ff, $fc, $fc, $fc
2384c     FD FF FC FC 
23850     FC FC FE 00 
23854     00 FC F9 FC 
23858     00 00 FD FC | 	byte	$fd, $ff, $fc, $fc, $fc, $fc, $fe, $00, $00, $fc, $f9, $fc, $00, $00, $fd, $fc
2385c     FE FF FF FC 
23860     FE FF FE FE 
23864     FF FF FE FD 
23868     FF FE FF 00 | 	byte	$fe, $ff, $ff, $fc, $fe, $ff, $fe, $fe, $ff, $ff, $fe, $fd, $ff, $fe, $ff, $00
2386c     FF FE FC FE 
23870     FF FF FF FE 
23874     FF FE FE FF 
23878     FE FF FE FE | 	byte	$ff, $fe, $fc, $fe, $ff, $ff, $ff, $fe, $ff, $fe, $fe, $ff, $fe, $ff, $fe, $fe
2387c     FD FE FF FE 
23880     FE FC F9 FE 
23884     FF FE FC FA 
23888     FC FC FC FC | 	byte	$fd, $fe, $ff, $fe, $fe, $fc, $f9, $fe, $ff, $fe, $fc, $fa, $fc, $fc, $fc, $fc
2388c     FB F9 F9 FD 
23890     FB F9 F9 F9 
23894     FB FA FB FA 
23898     F8 F9 F8 FB | 	byte	$fb, $f9, $f9, $fd, $fb, $f9, $f9, $f9, $fb, $fa, $fb, $fa, $f8, $f9, $f8, $fb
2389c     FB FB FC F9 
238a0     F8 F9 FB FC 
238a4     FA F9 F9 FA 
238a8     FB FB FB FA | 	byte	$fb, $fb, $fc, $f9, $f8, $f9, $fb, $fc, $fa, $f9, $f9, $fa, $fb, $fb, $fb, $fa
238ac     FA F9 FA FE 
238b0     FC F9 FA FC 
238b4     FC F9 FC FC 
238b8     FC FC FC FE | 	byte	$fa, $f9, $fa, $fe, $fc, $f9, $fa, $fc, $fc, $f9, $fc, $fc, $fc, $fc, $fc, $fe
238bc     FD FC FD FE 
238c0     FE FF 00 01 
238c4     FF FF 03 03 
238c8     FF FF 01 05 | 	byte	$fd, $fc, $fd, $fe, $fe, $ff, $00, $01, $ff, $ff, $03, $03, $ff, $ff, $01, $05
238cc     06 03 02 03 
238d0     03 06 05 05 
238d4     04 05 07 07 
238d8     05 04 07 09 | 	byte	$06, $03, $02, $03, $03, $06, $05, $05, $04, $05, $07, $07, $05, $04, $07, $09
238dc     07 05 07 09 
238e0     07 06 07 07 
238e4     07 08 07 07 
238e8     07 06 09 0A | 	byte	$07, $05, $07, $09, $07, $06, $07, $07, $07, $08, $07, $07, $07, $06, $09, $0a
238ec     08 06 09 0B 
238f0     09 07 07 07 
238f4     09 09 09 07 
238f8     07 07 08 08 | 	byte	$08, $06, $09, $0b, $09, $07, $07, $07, $09, $09, $09, $07, $07, $07, $08, $08
238fc     07 07 07 07 
23900     06 07 07 06 
23904     07 05 03 03 
23908     03 05 03 03 | 	byte	$07, $07, $07, $07, $06, $07, $07, $06, $07, $05, $03, $03, $03, $05, $03, $03
2390c     04 01 03 03 
23910     03 01 01 01 
23914     02 02 01 00 
23918     00 FF 00 03 | 	byte	$04, $01, $03, $03, $03, $01, $01, $01, $02, $02, $01, $00, $00, $ff, $00, $03
2391c     03 00 FE FF 
23920     00 01 00 FE 
23924     FF 00 01 00 
23928     FF FF FE FF | 	byte	$03, $00, $fe, $ff, $00, $01, $00, $fe, $ff, $00, $01, $00, $ff, $ff, $fe, $ff
2392c     01 00 01 FE 
23930     FE FF 00 00 
23934     00 00 FD FF 
23938     01 01 01 FF | 	byte	$01, $00, $01, $fe, $fe, $ff, $00, $00, $00, $00, $fd, $ff, $01, $01, $01, $ff
2393c     FE FF 01 01 
23940     00 FE 00 01 
23944     00 FF 00 01 
23948     02 00 FF 00 | 	byte	$fe, $ff, $01, $01, $00, $fe, $00, $01, $00, $ff, $00, $01, $02, $00, $ff, $00
2394c     03 01 FF 00 
23950     00 00 01 00 
23954     FF 00 00 00 
23958     00 FF 00 FF | 	byte	$03, $01, $ff, $00, $00, $00, $01, $00, $ff, $00, $00, $00, $00, $ff, $00, $ff
2395c     00 00 FE FF 
23960     00 FF FE FE 
23964     FF 00 FE FF 
23968     00 FE FE FE | 	byte	$00, $00, $fe, $ff, $00, $ff, $fe, $fe, $ff, $00, $fe, $ff, $00, $fe, $fe, $fe
2396c     FC FE FF 00 
23970     FE FC FD FF 
23974     FF FF FE FD 
23978     FE FE FE FC | 	byte	$fc, $fe, $ff, $00, $fe, $fc, $fd, $ff, $ff, $ff, $fe, $fd, $fe, $fe, $fe, $fc
2397c     FE FE FC FB 
23980     FC FC FF FC 
23984     F9 FC FC FE 
23988     FC FB FB FA | 	byte	$fe, $fe, $fc, $fb, $fc, $fc, $ff, $fc, $f9, $fc, $fc, $fe, $fc, $fb, $fb, $fa
2398c     FC FC FC FA 
23990     F9 F9 FC FB 
23994     FB FB F9 FB 
23998     FC FA FC FC | 	byte	$fc, $fc, $fc, $fa, $f9, $f9, $fc, $fb, $fb, $fb, $f9, $fb, $fc, $fa, $fc, $fc
2399c     F9 F9 FB FC 
239a0     FC FB F9 FB 
239a4     FE FC FB FB 
239a8     FC FC FC FB | 	byte	$f9, $f9, $fb, $fc, $fc, $fb, $f9, $fb, $fe, $fc, $fb, $fb, $fc, $fc, $fc, $fb
239ac     FC FE FB FD 
239b0     FE FC FE FC 
239b4     FD FE FF FF 
239b8     FE FF FF FF | 	byte	$fc, $fe, $fb, $fd, $fe, $fc, $fe, $fc, $fd, $fe, $ff, $ff, $fe, $ff, $ff, $ff
239bc     FF 00 01 00 
239c0     FE FF 00 01 
239c4     01 00 00 00 
239c8     01 03 00 03 | 	byte	$ff, $00, $01, $00, $fe, $ff, $00, $01, $01, $00, $00, $00, $01, $03, $00, $03
239cc     02 01 02 03 
239d0     04 01 00 02 
239d4     02 03 03 02 
239d8     02 02 04 05 | 	byte	$02, $01, $02, $03, $04, $01, $00, $02, $02, $03, $03, $02, $02, $02, $04, $05
239dc     02 02 05 05 
239e0     05 03 05 06 
239e4     06 05 06 02 
239e8     05 06 06 06 | 	byte	$02, $02, $05, $05, $05, $03, $05, $06, $06, $05, $06, $02, $05, $06, $06, $06
239ec     06 05 06 06 
239f0     06 05 05 06 
239f4     06 06 06 06 
239f8     06 06 05 06 | 	byte	$06, $05, $06, $06, $06, $05, $05, $06, $06, $06, $06, $06, $06, $06, $05, $06
239fc     06 05 05 06 
23a00     05 04 04 05 
23a04     04 05 05 02 
23a08     03 05 05 02 | 	byte	$06, $05, $05, $06, $05, $04, $04, $05, $04, $05, $05, $02, $03, $05, $05, $02
23a0c     02 02 03 05 
23a10     03 02 02 03 
23a14     02 02 05 03 
23a18     02 02 02 03 | 	byte	$02, $02, $03, $05, $03, $02, $02, $03, $02, $02, $05, $03, $02, $02, $02, $03
23a1c     02 01 02 02 
23a20     02 02 00 02 
23a24     01 02 02 00 
23a28     00 00 00 00 | 	byte	$02, $01, $02, $02, $02, $02, $00, $02, $01, $02, $02, $00, $00, $00, $00, $00
23a2c     02 00 FE 00 
23a30     00 00 00 00 
23a34     00 FE 00 FE 
23a38     FF 00 FF FF | 	byte	$02, $00, $fe, $00, $00, $00, $00, $00, $00, $fe, $00, $fe, $ff, $00, $ff, $ff
23a3c     FE FF FF FE 
23a40     FF FF FF FE 
23a44     FE FF FF FE 
23a48     FC FE FE FE | 	byte	$fe, $ff, $ff, $fe, $ff, $ff, $ff, $fe, $fe, $ff, $ff, $fe, $fc, $fe, $fe, $fe
23a4c     FF FE FE FE 
23a50     FE FD FC FE 
23a54     FE FE FE FC 
23a58     FC FE FE FF | 	byte	$ff, $fe, $fe, $fe, $fe, $fd, $fc, $fe, $fe, $fe, $fe, $fc, $fc, $fe, $fe, $ff
23a5c     FC FC FE FF 
23a60     FE FF FE FE 
23a64     FE FE FF FF 
23a68     FF 00 FE FE | 	byte	$fc, $fc, $fe, $ff, $fe, $ff, $fe, $fe, $fe, $fe, $ff, $ff, $ff, $00, $fe, $fe
23a6c     00 00 00 00 
23a70     FF FF FF 00 
23a74     00 00 FF FF 
23a78     00 00 00 FF | 	byte	$00, $00, $00, $00, $ff, $ff, $ff, $00, $00, $00, $ff, $ff, $00, $00, $00, $ff
23a7c     00 00 FF 00 
23a80     FF 00 00 FF 
23a84     00 FF FF 00 
23a88     00 00 FF FE | 	byte	$00, $00, $ff, $00, $ff, $00, $00, $ff, $00, $ff, $ff, $00, $00, $00, $ff, $fe
23a8c     00 00 FF FF 
23a90     00 00 FF FE 
23a94     FF FF FF FF 
23a98     FF FE FE FD | 	byte	$00, $00, $ff, $ff, $00, $00, $ff, $fe, $ff, $ff, $ff, $ff, $ff, $fe, $fe, $fd
23a9c     FE FE FE FD 
23aa0     FC FC FC FC 
23aa4     FC FC FC FA 
23aa8     FB FC FC FB | 	byte	$fe, $fe, $fe, $fd, $fc, $fc, $fc, $fc, $fc, $fc, $fc, $fa, $fb, $fc, $fc, $fb
23aac     00 00 00 00 
23ab0     00 00 00 00 
23ab4     00 00 00    | 	byte	$00[11]
23ab7     01 01 00 FE 
23abb     05 00 07 FE 
23abf     F8 FE 00 0E 
23ac3     F0 FE FE 0F | 	byte	$01, $01, $00, $fe, $05, $00, $07, $fe, $f8, $fe, $00, $0e, $f0, $fe, $fe, $0f
23ac7     EA 0B 00 F9 
23acb     FE 00 07 FA 
23acf     00 FE 09 00 
23ad3     FC FE F6 0B | 	byte	$ea, $0b, $00, $f9, $fe, $00, $07, $fa, $00, $fe, $09, $00, $fc, $fe, $f6, $0b
23ad7     03 F4 FE 02 
23adb     07 F4 FE FE 
23adf     00 06 00 FA 
23ae3     03 FC 04 FA | 	byte	$03, $f4, $fe, $02, $07, $f4, $fe, $fe, $00, $06, $00, $fa, $03, $fc, $04, $fa
23ae7     10 00 FA 00 
23aeb     FE 01 00 F9 
23aef     09 FA 0A F0 
23af3     FA 0F 00 FE | 	byte	$10, $00, $fa, $00, $fe, $01, $00, $f9, $09, $fa, $0a, $f0, $fa, $0f, $00, $fe
23af7     FE 00 EA 13 
23afb     F5 03 01 F1 
23aff     13 F1 FE 00 
23b03     F8 F6 07 03 | 	byte	$fe, $00, $ea, $13, $f5, $03, $01, $f1, $13, $f1, $fe, $00, $f8, $f6, $07, $03
23b07     07 EE 00 00 
23b0b     04 00 F0 0E 
23b0f     F8 00 07 FA 
23b13     F9 05 00 EE | 	byte	$07, $ee, $00, $00, $04, $00, $f0, $0e, $f8, $00, $07, $fa, $f9, $05, $00, $ee
23b17     00 FE FE 00 
23b1b     FE 0B F8 F6 
23b1f     07 FE 00 F0 
23b23     FE 0F FE 00 | 	byte	$00, $fe, $fe, $00, $fe, $0b, $f8, $f6, $07, $fe, $00, $f0, $fe, $0f, $fe, $00
23b27     FE 00 F9 05 
23b2b     00 EA 17 F0 
23b2f     03 03 03 00 
23b33     EE 03 FE 07 | 	byte	$fe, $00, $f9, $05, $00, $ea, $17, $f0, $03, $03, $03, $00, $ee, $03, $fe, $07
23b37     01 00 FA 03 
23b3b     03 FE 0B E6 
23b3f     13 EE 07 F8 
23b43     02 00 FE 07 | 	byte	$01, $00, $fa, $03, $03, $fe, $0b, $e6, $13, $ee, $07, $f8, $02, $00, $fe, $07
23b47     F9 06 00 EE 
23b4b     FE 12 00 EE 
23b4f     0D 0F F8 FE 
23b53     02 F9 00 FE | 	byte	$f9, $06, $00, $ee, $fe, $12, $00, $ee, $0d, $0f, $f8, $fe, $02, $f9, $00, $fe
23b57     07 EA 0E 00 
23b5b     F0 1A 00 EE 
23b5f     08 F9 0D 07 
23b63     E9 03 FE 07 | 	byte	$07, $ea, $0e, $00, $f0, $1a, $00, $ee, $08, $f9, $0d, $07, $e9, $03, $fe, $07
23b67     EC 0C 00 03 
23b6b     FE 00 F8 FE 
23b6f     07 06 08 F0 
23b73     03 02 07 EE | 	byte	$ec, $0c, $00, $03, $fe, $00, $f8, $fe, $07, $06, $08, $f0, $03, $02, $07, $ee
23b77     01 FE 01 FE 
23b7b     F4 06 F0 0E 
23b7f     0F F0 FE 00 
23b83     FE 0E 04 00 | 	byte	$01, $fe, $01, $fe, $f4, $06, $f0, $0e, $0f, $f0, $fe, $00, $fe, $0e, $04, $00
23b87     FE F2 00 0D 
23b8b     E8 FE 11 F0 
23b8f     16 00 FE 00 
23b93     00 05 F2 07 | 	byte	$fe, $f2, $00, $0d, $e8, $fe, $11, $f0, $16, $00, $fe, $00, $00, $05, $f2, $07
23b97     05 00 06 FC 
23b9b     09 E6 06 11 
23b9f     F6 F6 04 0A 
23ba3     03 01 F6 0F | 	byte	$05, $00, $06, $fc, $09, $e6, $06, $11, $f6, $f6, $04, $0a, $03, $01, $f6, $0f
23ba7     00 EC 05 08 
23bab     FE 0F EE FE 
23baf     06 04 00 0E 
23bb3     00 07 E0 FE | 	byte	$00, $ec, $05, $08, $fe, $0f, $ee, $fe, $06, $04, $00, $0e, $00, $07, $e0, $fe
23bb7     0F 01 00 EA 
23bbb     13 00 F6 00 
23bbf     0E 0E E0 FE 
23bc3     F4 16 00 FE | 	byte	$0f, $01, $00, $ea, $13, $00, $f6, $00, $0e, $0e, $e0, $fe, $f4, $16, $00, $fe
23bc7     0F F6 00 EE 
23bcb     1A 0F F4 00 
23bcf     FE 03 0A EA 
23bd3     09 04 17 DE | 	byte	$0f, $f6, $00, $ee, $1a, $0f, $f4, $00, $fe, $03, $0a, $ea, $09, $04, $17, $de
23bd7     15 00 F6 00 
23bdb     0D 04 00 07 
23bdf     DE 0E 1F E6 
23be3     0F EA 16 00 | 	byte	$15, $00, $f6, $00, $0d, $04, $00, $07, $de, $0e, $1f, $e6, $0f, $ea, $16, $00
23be7     FE 0F 0F F6 
23beb     00 06 00 FA 
23bef     00 FE 07 F6 
23bf3     FA 0D FE 00 | 	byte	$fe, $0f, $0f, $f6, $00, $06, $00, $fa, $00, $fe, $07, $f6, $fa, $0d, $fe, $00
23bf7     F6 00 0E 0F 
23bfb     DE 0F 0E F8 
23bff     F2 0A 00 0D 
23c03     F4 03 00 15 | 	byte	$f6, $00, $0e, $0f, $de, $0f, $0e, $f8, $f2, $0a, $00, $0d, $f4, $03, $00, $15
23c07     E1 FE 03 07 
23c0b     07 EE 00 19 
23c0f     F0 EE 17 EE 
23c13     16 07 EC FE | 	byte	$e1, $fe, $03, $07, $07, $ee, $00, $19, $f0, $ee, $17, $ee, $16, $07, $ec, $fe
23c17     0F EE 0F 0B 
23c1b     F1 FE 00 FE 
23c1f     0A F4 FE 00 
23c23     00 FA 0F F4 | 	byte	$0f, $ee, $0f, $0b, $f1, $fe, $00, $fe, $0a, $f4, $fe, $00, $00, $fa, $0f, $f4
23c27     FE EC 13 07 
23c2b     F0 FE 07 06 
23c2f     00 05 FC 00 
23c33     07 F2 05 17 | 	byte	$fe, $ec, $13, $07, $f0, $fe, $07, $06, $00, $05, $fc, $00, $07, $f2, $05, $17
23c37     C6 12 17 F6 
23c3b     11 00 F4 0E 
23c3f     00 F6 02 02 
23c43     FE 00 FE 0E | 	byte	$c6, $12, $17, $f6, $11, $00, $f4, $0e, $00, $f6, $02, $02, $fe, $00, $fe, $0e
23c47     F0 0F EE 07 
23c4b     FC 0D F0 FE 
23c4f     00 01 03 F6 
23c53     0E 00 FA F9 | 	byte	$f0, $0f, $ee, $07, $fc, $0d, $f0, $fe, $00, $01, $03, $f6, $0e, $00, $fa, $f9
23c57     FE 00 FE 03 
23c5b     03 F2 1E E4 
23c5f     0A F6 03 FE 
23c63     0F F6 EE 16 | 	byte	$fe, $00, $fe, $03, $03, $f2, $1e, $e4, $0a, $f6, $03, $fe, $0f, $f6, $ee, $16
23c67     0F E6 0E E8 
23c6b     11 00 07 01 
23c6f     F6 0F FE 0F 
23c73     EE 0E 00 FE | 	byte	$0f, $e6, $0e, $e8, $11, $00, $07, $01, $f6, $0f, $fe, $0f, $ee, $0e, $00, $fe
23c77     00 F2 0F EE 
23c7b     24 07 FE E0 
23c7f     07 0E 00 FD 
23c83     EE 1E 00 EE | 	byte	$00, $f2, $0f, $ee, $24, $07, $fe, $e0, $07, $0e, $00, $fd, $ee, $1e, $00, $ee
23c87     F4 1E 00 FD 
23c8b     FE E8 FE 0F 
23c8f     E6 0A 07 0A 
23c93     00 F6 0F FA | 	byte	$f4, $1e, $00, $fd, $fe, $e8, $fe, $0f, $e6, $0a, $07, $0a, $00, $f6, $0f, $fa
23c97     F6 07 09 07 
23c9b     F4 F8 FE 17 
23c9f     E8 FE 07 EE 
23ca3     00 FE 06 0F | 	byte	$f6, $07, $09, $07, $f4, $f8, $fe, $17, $e8, $fe, $07, $ee, $00, $fe, $06, $0f
23ca7     00 FE F0 0C 
23cab     0B EA 07 F2 
23caf     0F FE 0F EC 
23cb3     0F F4 00 11 | 	byte	$00, $fe, $f0, $0c, $0b, $ea, $07, $f2, $0f, $fe, $0f, $ec, $0f, $f4, $00, $11
23cb7     E6 0F FE 00 
23cbb     0E 07 FE 00 
23cbf     FA F4 0E 00 
23cc3     FE 06 00 FE | 	byte	$e6, $0f, $fe, $00, $0e, $07, $fe, $00, $fa, $f4, $0e, $00, $fe, $06, $00, $fe
23cc7     13 E8 05 16 
23ccb     00 F4 04 07 
23ccf     FE 07 F6 0F 
23cd3     FE F0 FE 10 | 	byte	$13, $e8, $05, $16, $00, $f4, $04, $07, $fe, $07, $f6, $0f, $fe, $f0, $fe, $10
23cd7     1F E0 DE 24 
23cdb     0F 00 F0 FE 
23cdf     01 06 00 FA 
23ce3     11 EA 03 07 | 	byte	$1f, $e0, $de, $24, $0f, $00, $f0, $fe, $01, $06, $00, $fa, $11, $ea, $03, $07
23ce7     FA 07 0F EE 
23ceb     FC 12 00 FA 
23cef     0E 0F FD E6 
23cf3     0E 07 FE 00 | 	byte	$fa, $07, $0f, $ee, $fc, $12, $00, $fa, $0e, $0f, $fd, $e6, $0e, $07, $fe, $00
23cf7     F6 0F EE FD 
23cfb     00 FE 0F F1 
23cff     FE 05 FD FE 
23d03     0F ED 0A 00 | 	byte	$f6, $0f, $ee, $fd, $00, $fe, $0f, $f1, $fe, $05, $fd, $fe, $0f, $ed, $0a, $00
23d07     05 00 09 E4 
23d0b     07 FE 0F 04 
23d0f     F0 0D F6 00 
23d13     01 07 F6 07 | 	byte	$05, $00, $09, $e4, $07, $fe, $0f, $04, $f0, $0d, $f6, $00, $01, $07, $f6, $07
23d17     EE F0 15 00 
23d1b     F6 0F 00 FE 
23d1f     F8 F4 08 08 
23d23     E8 FE 0A 00 | 	byte	$ee, $f0, $15, $00, $f6, $0f, $00, $fe, $f8, $f4, $08, $08, $e8, $fe, $0a, $00
23d27     FE E8 0E F6 
23d2b     F8 F9 1A 00 
23d2f     F9 EE 0B 16 
23d33     E1 06 00 03 | 	byte	$fe, $e8, $0e, $f6, $f8, $f9, $1a, $00, $f9, $ee, $0b, $16, $e1, $06, $00, $03
23d37     F4 00 FE 14 
23d3b     07 E6 01 05 
23d3f     11 E8 F8 0D 
23d43     15 00 FA FC | 	byte	$f4, $00, $fe, $14, $07, $e6, $01, $05, $11, $e8, $f8, $0d, $15, $00, $fa, $fc
23d47     0F 00 FE FE 
23d4b     0F E6 0B F0 
23d4f     1E 00 F5 FE 
23d53     07 FE F8 00 | 	byte	$0f, $00, $fe, $fe, $0f, $e6, $0b, $f0, $1e, $00, $f5, $fe, $07, $fe, $f8, $00
23d57     EE 19 06 E8 
23d5b     FE 03 FE 07 
23d5f     FE 00 FE 00 
23d63     FE 06 00 06 | 	byte	$ee, $19, $06, $e8, $fe, $03, $fe, $07, $fe, $00, $fe, $00, $fe, $06, $00, $06
23d67     00 F6 00 00 
23d6b     FE 07 FE 05 
23d6f     00 FA 04 0F 
23d73     F4 FE 00 FE | 	byte	$00, $f6, $00, $00, $fe, $07, $fe, $05, $00, $fa, $04, $0f, $f4, $fe, $00, $fe
23d77     0F F4 00 FE 
23d7b     0F F6 13 DA 
23d7f     0A 0A 00 FE 
23d83     03 00 07 E6 | 	byte	$0f, $f4, $00, $fe, $0f, $f6, $13, $da, $0a, $0a, $00, $fe, $03, $00, $07, $e6
23d87     17 EE 00 FE 
23d8b     00 09 FC F9 
23d8f     FE 07 01 F1 
23d93     07 EE 11 E6 | 	byte	$17, $ee, $00, $fe, $00, $09, $fc, $f9, $fe, $07, $01, $f1, $07, $ee, $11, $e6
23d97     07 01 00 07 
23d9b     FE EE 07 FE 
23d9f     00 00 FE 00 
23da3     F6 00 14 F0 | 	byte	$07, $01, $00, $07, $fe, $ee, $07, $fe, $00, $00, $fe, $00, $f6, $00, $14, $f0
23da7     FE 00 F4 0B 
23dab     EE 03 07 FE 
23daf     02 0D F0 EE 
23db3     07 0A 07 EE | 	byte	$fe, $00, $f4, $0b, $ee, $03, $07, $fe, $02, $0d, $f0, $ee, $07, $0a, $07, $ee
23db7     F6 0B 03 00 
23dbb     FA FE 00 05 
23dbf     EC 0B FD 07 
23dc3     F0 0A 12 F8 | 	byte	$f6, $0b, $03, $00, $fa, $fe, $00, $05, $ec, $0b, $fd, $07, $f0, $0a, $12, $f8
23dc7     EE FE 03 FE 
23dcb     F0 FE 0D 00 
23dcf     F9 FE 0F 03 
23dd3     FD F0 FE FE | 	byte	$ee, $fe, $03, $fe, $f0, $fe, $0d, $00, $f9, $fe, $0f, $03, $fd, $f0, $fe, $fe
23dd7     06 FA FC 06 
23ddb     00 FD FC FE 
23ddf     00 EE 06 07 
23de3     FA 0F F6 00 | 	byte	$06, $fa, $fc, $06, $00, $fd, $fc, $fe, $00, $ee, $06, $07, $fa, $0f, $f6, $00
23de7     15 E0 FE 17 
23deb     EC FE 00 FE 
23def     01 01 F9 02 
23df3     01 FC FC 0B | 	byte	$15, $e0, $fe, $17, $ec, $fe, $00, $fe, $01, $01, $f9, $02, $01, $fc, $fc, $0b
23df7     F6 00 FE 04 
23dfb     00 0B F6 05 
23dff     00 FE EE 0B 
23e03     11 F9 F4 07 | 	byte	$f6, $00, $fe, $04, $00, $0b, $f6, $05, $00, $fe, $ee, $0b, $11, $f9, $f4, $07
23e07     F6 07 F6 00 
23e0b     0A 00 EE FE 
23e0f     0B 00 FE 00 
23e13     06 0F DE 07 | 	byte	$f6, $07, $f6, $00, $0a, $00, $ee, $fe, $0b, $00, $fe, $00, $06, $0f, $de, $07
23e17     04 06 03 FC 
23e1b     05 FE 00 FE 
23e1f     07 00 05 00 
23e23     EE 11 00 07 | 	byte	$04, $06, $03, $fc, $05, $fe, $00, $fe, $07, $00, $05, $00, $ee, $11, $00, $07
23e27     F6 07 07 EE 
23e2b     FE 06 07 FC 
23e2f     FE 0F 02 F6 
23e33     00 01 FE 07 | 	byte	$f6, $07, $07, $ee, $fe, $06, $07, $fc, $fe, $0f, $02, $f6, $00, $01, $fe, $07
23e37     00 F1 0B FC 
23e3b     11 00 F6 09 
23e3f     00 FE 0F F8 
23e43     FE 02 03 0D | 	byte	$00, $f1, $0b, $fc, $11, $00, $f6, $09, $00, $fe, $0f, $f8, $fe, $02, $03, $0d
23e47     F8 F9 06 00 
23e4b     FE 00 FE 04 
23e4f     0F EA 0C 00 
23e53     FA 0B EC FE | 	byte	$f8, $f9, $06, $00, $fe, $00, $fe, $04, $0f, $ea, $0c, $00, $fa, $0b, $ec, $fe
23e57     0E 00 F6 07 
23e5b     07 F0 FE 03 
23e5f     FE 00 EA 02 
23e63     0F 03 FA 05 | 	byte	$0e, $00, $f6, $07, $07, $f0, $fe, $03, $fe, $00, $ea, $02, $0f, $03, $fa, $05
23e67     F2 15 F0 FE 
23e6b     07 07 FE 00 
23e6f     00 06 00 FE 
23e73     F2 07 FA 00 | 	byte	$f2, $15, $f0, $fe, $07, $07, $fe, $00, $00, $06, $00, $fe, $f2, $07, $fa, $00
23e77     01 F6 07 00 
23e7b     FE 00 07 FA 
23e7f     F1 06 07 FE 
23e83     07 EE 07 00 | 	byte	$01, $f6, $07, $00, $fe, $00, $07, $fa, $f1, $06, $07, $fe, $07, $ee, $07, $00
23e87     01 FC 00 FE 
23e8b     F4 03 0A 00 
23e8f     01 FA 00 FE 
23e93     00 F8 09 00 | 	byte	$01, $fc, $00, $fe, $f4, $03, $0a, $00, $01, $fa, $00, $fe, $00, $f8, $09, $00
23e97     00 F6 03 00 
23e9b     05 FE 00 03 
23e9f     F0 FD 01 09 
23ea3     F8 00 FE 07 | 	byte	$00, $f6, $03, $00, $05, $fe, $00, $03, $f0, $fd, $01, $09, $f8, $00, $fe, $07
23ea7     F8 F9 FE 00 
23eab     07 F8 FE 03 
23eaf     FE F9 04 07 
23eb3     F4 FE 00 FE | 	byte	$f8, $f9, $fe, $00, $07, $f8, $fe, $03, $fe, $f9, $04, $07, $f4, $fe, $00, $fe
23eb7     04 07 F6 08 
23ebb     00 FA 07 FE 
23ebf     02 07 F6 FE 
23ec3     07 FC FA 07 | 	byte	$04, $07, $f6, $08, $00, $fa, $07, $fe, $02, $07, $f6, $fe, $07, $fc, $fa, $07
23ec7     FE F5 01 07 
23ecb     F8 0B F1 0D 
23ecf     00 05 FC 00 
23ed3     07 EE 07 05 | 	byte	$fe, $f5, $01, $07, $f8, $0b, $f1, $0d, $00, $05, $fc, $00, $07, $ee, $07, $05
23ed7     FD 00 02 07 
23edb     EE 04 00 FA 
23edf     0B F8 FC 04 
23ee3     07 F6 07 FE | 	byte	$fd, $00, $02, $07, $ee, $04, $00, $fa, $0b, $f8, $fc, $04, $07, $f6, $07, $fe
23ee7     00 F9 01 04 
23eeb     FA FC 0E 00 
23eef     FE 07 F4 03 
23ef3     03 F9 FE 02 | 	byte	$00, $f9, $01, $04, $fa, $fc, $0e, $00, $fe, $07, $f4, $03, $03, $f9, $fe, $02
23ef7     00 03 FE 00 
23efb     06 00 F4 03 
23eff     00 08 F9 08 
23f03     0A 00 FA FE | 	byte	$00, $03, $fe, $00, $06, $00, $f4, $03, $00, $08, $f9, $08, $0a, $00, $fa, $fe
23f07     07 FE F6 07 
23f0b     FA 0F EE 0A 
23f0f     07 00 03 F9 
23f13     FE 06 00 FA | 	byte	$07, $fe, $f6, $07, $fa, $0f, $ee, $0a, $07, $00, $03, $f9, $fe, $06, $00, $fa
23f17     0E 00 00 0A 
23f1b     01 01 00 FE 
23f1f     09 00 FD 07 
23f23     00 06 01 FC | 	byte	$0e, $00, $00, $0a, $01, $01, $00, $fe, $09, $00, $fd, $07, $00, $06, $01, $fc
23f27     06 00 F8 F6 
23f2b     03 00 04 FE 
23f2f     00 03 08 F4 
23f33     06 FA 0F EE | 	byte	$06, $00, $f8, $f6, $03, $00, $04, $fe, $00, $03, $08, $f4, $06, $fa, $0f, $ee
23f37     FE FC 09 F8 
23f3b     0E 00 F8 F8 
23f3f     FE 08 07 F8 
23f43     FE 00 06 07 | 	byte	$fe, $fc, $09, $f8, $0e, $00, $f8, $f8, $fe, $08, $07, $f8, $fe, $00, $06, $07
23f47     F4 FE 0A 00 
23f4b     FE 00 FA 0C 
23f4f     00 F9 11 F0 
23f53     FE 0C FE 00 | 	byte	$f4, $fe, $0a, $00, $fe, $00, $fa, $0c, $00, $f9, $11, $f0, $fe, $0c, $fe, $00
23f57     FE F0 0E 0F 
23f5b     ED FE 07 00 
23f5f     09 F1 FE 0E 
23f63     00 F6 0B 07 | 	byte	$fe, $f0, $0e, $0f, $ed, $fe, $07, $00, $09, $f1, $fe, $0e, $00, $f6, $0b, $07
23f67     FD FD F4 0E 
23f6b     00 FA FE 0B 
23f6f     F5 FC 03 FE 
23f73     13 F8 EE 0C | 	byte	$fd, $fd, $f4, $0e, $00, $fa, $fe, $0b, $f5, $fc, $03, $fe, $13, $f8, $ee, $0c
23f77     08 00 FE 00 
23f7b     FA 07 F6 06 
23f7f     07 FC 00 FE 
23f83     FE 07 F4 FC | 	byte	$08, $00, $fe, $00, $fa, $07, $f6, $06, $07, $fc, $00, $fe, $fe, $07, $f4, $fc
23f87     09 09 EE 02 
23f8b     07 FE 07 00 
23f8f     FE 00 00 FD 
23f93     0B F5 02 09 | 	byte	$09, $09, $ee, $02, $07, $fe, $07, $00, $fe, $00, $00, $fd, $0b, $f5, $02, $09
23f97     03 FA 00 06 
23f9b     00 FE 00 FE 
23f9f     01 FE 06 01 
23fa3     00 FC 06 00 | 	byte	$03, $fa, $00, $06, $00, $fe, $00, $fe, $01, $fe, $06, $01, $00, $fc, $06, $00
23fa7     F6 07 00 FD 
23fab     09 05 FA F6 
23faf     03 09 F4 00 
23fb3     00 03 05 00 | 	byte	$f6, $07, $00, $fd, $09, $05, $fa, $f6, $03, $09, $f4, $00, $00, $03, $05, $00
23fb7     FA 09 03 FA 
23fbb     FC 07 F9 FE 
23fbf     07 F9 01 0F 
23fc3     F0 08 03 FD | 	byte	$fa, $09, $03, $fa, $fc, $07, $f9, $fe, $07, $f9, $01, $0f, $f0, $08, $03, $fd
23fc7     FC 00 00 04 
23fcb     00 FC 04 03 
23fcf     FE 00 FD 03 
23fd3     F9 03 FA 05 | 	byte	$fc, $00, $00, $04, $00, $fc, $04, $03, $fe, $00, $fd, $03, $f9, $03, $fa, $05
23fd7     00 07 F9 00 
23fdb     05 FE 00 F4 
23fdf     06 01 06 00 
23fe3     00 05 F8 F9 | 	byte	$00, $07, $f9, $00, $05, $fe, $00, $f4, $06, $01, $06, $00, $00, $05, $f8, $f9
23fe7     FE 00 FE FC 
23feb     FE 02 05 F4 
23fef     FE 01 04 00 
23ff3     FA FD 04 07 | 	byte	$fe, $00, $fe, $fc, $fe, $02, $05, $f4, $fe, $01, $04, $00, $fa, $fd, $04, $07
23ff7     F4 03 05 03 
23ffb     F2 F9 FE 0F 
23fff     F2 FC 06 03 
24003     F8 00 FA FE | 	byte	$f4, $03, $05, $03, $f2, $f9, $fe, $0f, $f2, $fc, $06, $03, $f8, $00, $fa, $fe
24007     00 F4 FE 07 
2400b     00 FD FA 09 
2400f     00 FE F6 05 
24013     00 FD F8 05 | 	byte	$00, $f4, $fe, $07, $00, $fd, $fa, $09, $00, $fe, $f6, $05, $00, $fd, $f8, $05
24017     03 FC F6 06 
2401b     03 F2 03 FE 
2401f     00 00 F9 06 
24023     00 FE 00 FE | 	byte	$03, $fc, $f6, $06, $03, $f2, $03, $fe, $00, $00, $f9, $06, $00, $fe, $00, $fe
24027     01 FE F9 FC 
2402b     06 00 0A 00 
2402f     FE 00 FE 00 
24033     02 00 F6 00 | 	byte	$01, $fe, $f9, $fc, $06, $00, $0a, $00, $fe, $00, $fe, $00, $02, $00, $f6, $00
24037     0B F1 06 F8 
2403b     09 00 F4 FC 
2403f     07 03 F8 00 
24043     FE 01 00 FA | 	byte	$0b, $f1, $06, $f8, $09, $00, $f4, $fc, $07, $03, $f8, $00, $fe, $01, $00, $fa
24047     0D F4 FD FE 
2404b     00 03 FE F8 
2404f     FE 0B F8 F6 
24053     00 01 09 00 | 	byte	$0d, $f4, $fd, $fe, $00, $03, $fe, $f8, $fe, $0b, $f8, $f6, $00, $01, $09, $00
24057     F4 06 05 F8 
2405b     FE 00 FE 07 
2405f     F4 03 00 FE 
24063     F8 FE 08 00 | 	byte	$f4, $06, $05, $f8, $fe, $00, $fe, $07, $f4, $03, $00, $fe, $f8, $fe, $08, $00
24067     FD FE 04 07 
2406b     FC FE 00 0A 
2406f     F4 FC FE 0F 
24073     00 F6 FC 07 | 	byte	$fd, $fe, $04, $07, $fc, $fe, $00, $0a, $f4, $fc, $fe, $0f, $00, $f6, $fc, $07
24077     00 00 00 00 
2407b     06 F8 FA 02 
2407f     07 F5 05 FC 
24083     03 F9 FE FE | 	byte	$00, $00, $00, $00, $06, $f8, $fa, $02, $07, $f5, $05, $fc, $03, $f9, $fe, $fe
24087     07 FD FC 00 
2408b     F9 0C 00 FE 
2408f     07 F6 FA 07 
24093     00 F6 07 01 | 	byte	$07, $fd, $fc, $00, $f9, $0c, $00, $fe, $07, $f6, $fa, $07, $00, $f6, $07, $01
24097     FE 00 FE 01 
2409b     00 FC 02 03 
2409f     F8 FE 00 FE 
240a3     00 F8 FE 00 | 	byte	$fe, $00, $fe, $01, $00, $fc, $02, $03, $f8, $fe, $00, $fe, $00, $f8, $fe, $00
240a7     FE 01 FD 03 
240ab     05 05 F1 FE 
240af     03 07 04 F0 
240b3     FE 0A 00 FA | 	byte	$fe, $01, $fd, $03, $05, $05, $f1, $fe, $03, $07, $04, $f0, $fe, $0a, $00, $fa
240b7     0D 00 FD 07 
240bb     F0 FE 01 FA 
240bf     03 FD 03 FE 
240c3     FC 00 06 00 | 	byte	$0d, $00, $fd, $07, $f0, $fe, $01, $fa, $03, $fd, $03, $fe, $fc, $00, $06, $00
240c7     FE FA 01 05 
240cb     00 FA 07 02 
240cf     00 FD FE 07 
240d3     F8 00 03 07 | 	byte	$fe, $fa, $01, $05, $00, $fa, $07, $02, $00, $fd, $fe, $07, $f8, $00, $03, $07
240d7     F6 03 00 00 
240db     07 03 F2 03 
240df     03 F6 05 01 
240e3     FE 03 F6 03 | 	byte	$f6, $03, $00, $00, $07, $03, $f2, $03, $03, $f6, $05, $01, $fe, $03, $f6, $03
240e7     FE 00 FE 03 
240eb     FE 00 FE FD 
240ef     07 F8 FE FE 
240f3     FC 00 00 00 | 	byte	$fe, $00, $fe, $03, $fe, $00, $fe, $fd, $07, $f8, $fe, $fe, $fc, $00, $00, $00
240f7     03 00 FE 03 
240fb     F4 FE 00 FE 
240ff     FA 01 03 00 
24103     03 01 FC 02 | 	byte	$03, $00, $fe, $03, $f4, $fe, $00, $fe, $fa, $01, $03, $00, $03, $01, $fc, $02
24107     F8 04 03 05 
2410b     F4 FE 04 03 
2410f     FE 00 FE 05 
24113     FA 01 00 03 | 	byte	$f8, $04, $03, $05, $f4, $fe, $04, $03, $fe, $00, $fe, $05, $fa, $01, $00, $03
24117     05 00 FC FE 
2411b     00 F6 0C F8 
2411f     FE 00 01 FD 
24123     09 00 F8 06 | 	byte	$05, $00, $fc, $fe, $00, $f6, $0c, $f8, $fe, $00, $01, $fd, $09, $00, $f8, $06
24127     00 FA 07 F5 
2412b     05 01 01 FE 
2412f     03 F8 09 00 
24133     FC FE 00 01 | 	byte	$00, $fa, $07, $f5, $05, $01, $01, $fe, $03, $f8, $09, $00, $fc, $fe, $00, $01
24137     03 FC FE 00 
2413b     FE 01 FE FC 
2413f     04 03 F6 0B 
24143     FA 00 00 01 | 	byte	$03, $fc, $fe, $00, $fe, $01, $fe, $fc, $04, $03, $f6, $0b, $fa, $00, $00, $01
24147     04 01 FC 03 
2414b     08 00 FE 03 
2414f     01 00 FE FD 
24153     03 06 00 FC | 	byte	$04, $01, $fc, $03, $08, $00, $fe, $03, $01, $00, $fe, $fd, $03, $06, $00, $fc
24157     F9 02 07 F4 
2415b     FE 03 01 FE 
2415f     FC 00 00 F9 
24163     FD 02 FD FE | 	byte	$f9, $02, $07, $f4, $fe, $03, $01, $fe, $fc, $00, $00, $f9, $fd, $02, $fd, $fe
24167     FC F6 0A F8 
2416b     F8 FE 01 00 
2416f     F4 F8 05 04 
24173     F9 F6 07 00 | 	byte	$fc, $f6, $0a, $f8, $f8, $fe, $01, $00, $f4, $f8, $05, $04, $f9, $f6, $07, $00
24177     FC FA 00 03 
2417b     00 F6 03 03 
2417f     FC FC 00 01 
24183     FC FE FC 09 | 	byte	$fc, $fa, $00, $03, $00, $f6, $03, $03, $fc, $fc, $00, $01, $fc, $fe, $fc, $09
24187     FA FE FD 00 
2418b     05 F9 FC 0A 
2418f     F4 FE FC 00 
24193     04 00 FD FE | 	byte	$fa, $fe, $fd, $00, $05, $f9, $fc, $0a, $f4, $fe, $fc, $00, $04, $00, $fd, $fe
24197     03 F9 FE 03 
2419b     FE FD FA 05 
2419f     01 FC FC FE 
241a3     07 F4 FE FA | 	byte	$03, $f9, $fe, $03, $fe, $fd, $fa, $05, $01, $fc, $fc, $fe, $07, $f4, $fe, $fa
241a7     01 00 FE FE 
241ab     09 F8 F8 FE 
241af     03 FE F8 FE 
241b3     00 01 00 FA | 	byte	$01, $00, $fe, $fe, $09, $f8, $f8, $fe, $03, $fe, $f8, $fe, $00, $01, $00, $fa
241b7     0C 07 F2 FA 
241bb     03 03 00 FC 
241bf     06 07 F8 00 
241c3     FE 03 FE F8 | 	byte	$0c, $07, $f2, $fa, $03, $03, $00, $fc, $06, $07, $f8, $00, $fe, $03, $fe, $f8
241c7     FE 07 FC FE 
241cb     00 07 01 00 
241cf     F6 05 03 F9 
241d3     05 00 06 00 | 	byte	$fe, $07, $fc, $fe, $00, $07, $01, $00, $f6, $05, $03, $f9, $05, $00, $06, $00
241d7     FE 00 02 01 
241db     FE 04 00 06 
241df     00 05 03 01 
241e3     F9 FE 01 00 | 	byte	$fe, $00, $02, $01, $fe, $04, $00, $06, $00, $05, $03, $01, $f9, $fe, $01, $00
241e7     FA 00 05 07 
241eb     F8 02 FC 02 
241ef     01 FE FE 00 
241f3     00 01 03 00 | 	byte	$fa, $00, $05, $07, $f8, $02, $fc, $02, $01, $fe, $fe, $00, $00, $01, $03, $00
241f7     FE 07 FA 04 
241fb     00 FE 01 00 
241ff     02 00 03 FC 
24203     07 03 F6 00 | 	byte	$fe, $07, $fa, $04, $00, $fe, $01, $00, $02, $00, $03, $fc, $07, $03, $f6, $00
24207     05 02 00 02 
2420b     00 02 07 FD 
2420f     00 FE 05 F8 
24213     03 03 00 05 | 	byte	$05, $02, $00, $02, $00, $02, $07, $fd, $00, $fe, $05, $f8, $03, $03, $00, $05
24217     00 00 02 06 
2421b     00 FE 03 00 
2421f     02 01 FE 04 
24223     03 FE FE 00 | 	byte	$00, $00, $02, $06, $00, $fe, $03, $00, $02, $01, $fe, $04, $03, $fe, $fe, $00
24227     FE 01 FD 06 
2422b     00 00 05 00 
2422f     FC FE 02 00 
24233     06 00 00 07 | 	byte	$fe, $01, $fd, $06, $00, $00, $05, $00, $fc, $fe, $02, $00, $06, $00, $00, $07
24237     00 03 F6 00 
2423b     0B FA 00 FE 
2423f     00 02 00 FE 
24243     00 05 FA 00 | 	byte	$00, $03, $f6, $00, $0b, $fa, $00, $fe, $00, $02, $00, $fe, $00, $05, $fa, $00
24247     05 00 02 00 
2424b     06 FE FC 00 
2424f     09 00 FD 04 
24253     03 04 00 FE | 	byte	$05, $00, $02, $00, $06, $fe, $fc, $00, $09, $00, $fd, $04, $03, $04, $00, $fe
24257     00 0A 00 01 
2425b     01 01 04 01 
2425f     03 01 00 FE 
24263     04 F8 05 FC | 	byte	$00, $0a, $00, $01, $01, $01, $04, $01, $03, $01, $00, $fe, $04, $f8, $05, $fc
24267     06 05 F9 FE 
2426b     FA 08 00 F6 
2426f     04 01 FD 01 
24273     FE 00 FE 00 | 	byte	$06, $05, $f9, $fe, $fa, $08, $00, $f6, $04, $01, $fd, $01, $fe, $00, $fe, $00
24277     FC 06 00 FE 
2427b     FE 03 03 F5 
2427f     FE 03 00 FA 
24283     F9 FE 05 00 | 	byte	$fc, $06, $00, $fe, $fe, $03, $03, $f5, $fe, $03, $00, $fa, $f9, $fe, $05, $00
24287     00 FA 07 F9 
2428b     FE FE FC 00 
2428f     00 FE EE 04 
24293     00 0E 00 00 | 	byte	$00, $fa, $07, $f9, $fe, $fe, $fc, $00, $00, $fe, $ee, $04, $00, $0e, $00, $00
24297     00 FC 00 01 
2429b     F9 FE 08 03 
2429f     F9 F8 06 01 
242a3     F6 FE 01 FA | 	byte	$00, $fc, $00, $01, $f9, $fe, $08, $03, $f9, $f8, $06, $01, $f6, $fe, $01, $fa
242a7     03 00 FE 02 
242ab     01 F8 06 01 
242af     FC 01 00 FD 
242b3     01 FE 00 FE | 	byte	$03, $00, $fe, $02, $01, $f8, $06, $01, $fc, $01, $00, $fd, $01, $fe, $00, $fe
242b7     05 F8 FE FC 
242bb     03 FD F4 09 
242bf     01 00 FD FE 
242c3     00 FA FD FC | 	byte	$05, $f8, $fe, $fc, $03, $fd, $f4, $09, $01, $00, $fd, $fe, $00, $fa, $fd, $fc
242c7     FE 00 FC 01 
242cb     06 00 F6 FE 
242cf     00 02 F8 FE 
242d3     02 FE 01 FC | 	byte	$fe, $00, $fc, $01, $06, $00, $f6, $fe, $00, $02, $f8, $fe, $02, $fe, $01, $fc
242d7     FE 07 FC F1 
242db     03 08 00 FE 
242df     01 FE 05 00 
242e3     FE 00 FE 00 | 	byte	$fe, $07, $fc, $f1, $03, $08, $00, $fe, $01, $fe, $05, $00, $fe, $00, $fe, $00
242e7     F8 06 00 FE 
242eb     FA 01 03 F8 
242ef     00 06 FA 07 
242f3     F8 FE 03 02 | 	byte	$f8, $06, $00, $fe, $fa, $01, $03, $f8, $00, $06, $fa, $07, $f8, $fe, $03, $02
242f7     00 FE 09 00 
242fb     00 FA 07 00 
242ff     FE 00 FC 06 
24303     00 F9 FE 06 | 	byte	$00, $fe, $09, $00, $00, $fa, $07, $00, $fe, $00, $fc, $06, $00, $f9, $fe, $06
24307     03 F6 00 03 
2430b     00 00 FE 02 
2430f     FA FE 00 06 
24313     00 FC FD 05 | 	byte	$03, $f6, $00, $03, $00, $00, $fe, $02, $fa, $fe, $00, $06, $00, $fc, $fd, $05
24317     00 FA FE 00 
2431b     FE 00 FA FC 
2431f     03 FE 00 FE 
24323     FC 01 FC FE | 	byte	$00, $fa, $fe, $00, $fe, $00, $fa, $fc, $03, $fe, $00, $fe, $fc, $01, $fc, $fe
24327     03 FE FC 05 
2432b     FE FC 03 FC 
2432f     03 FD 03 00 
24333     00 FE 01 FE | 	byte	$03, $fe, $fc, $05, $fe, $fc, $03, $fc, $03, $fd, $03, $00, $00, $fe, $01, $fe
24337     FC 03 F9 FE 
2433b     07 00 FE 02 
2433f     03 00 FE 00 
24343     07 01 FA 00 | 	byte	$fc, $03, $f9, $fe, $07, $00, $fe, $02, $03, $00, $fe, $00, $07, $01, $fa, $00
24347     06 00 F6 02 
2434b     05 00 FA 05 
2434f     00 04 00 FE 
24353     05 FA 03 FC | 	byte	$06, $00, $f6, $02, $05, $00, $fa, $05, $00, $04, $00, $fe, $05, $fa, $03, $fc
24357     04 00 FC FE 
2435b     00 00 01 00 
2435f     02 00 FC 01 
24363     05 01 F8 FC | 	byte	$04, $00, $fc, $fe, $00, $00, $01, $00, $02, $00, $fc, $01, $05, $01, $f8, $fc
24367     07 00 F8 03 
2436b     00 04 00 FC 
2436f     FE 03 FC FE 
24373     07 03 F8 00 | 	byte	$07, $00, $f8, $03, $00, $04, $00, $fc, $fe, $03, $fc, $fe, $07, $03, $f8, $00
24377     02 03 FE F8 
2437b     FE 04 FC 00 
2437f     06 00 03 F6 
24383     01 07 00 FD | 	byte	$02, $03, $fe, $f8, $fe, $04, $fc, $00, $06, $00, $03, $f6, $01, $07, $00, $fd
24387     FA 06 07 00 
2438b     FE 03 01 FE 
2438f     FE 00 00 05 
24393     FD FE 00 FE | 	byte	$fa, $06, $07, $00, $fe, $03, $01, $fe, $fe, $00, $00, $05, $fd, $fe, $00, $fe
24397     FE 00 03 FC 
2439b     00 08 00 F9 
2439f     FE 01 07 FA 
243a3     FD 03 01 00 | 	byte	$fe, $00, $03, $fc, $00, $08, $00, $f9, $fe, $01, $07, $fa, $fd, $03, $01, $00
243a7     00 FE 03 00 
243ab     FD 04 00 FA 
243af     03 02 03 F9 
243b3     FE FE 03 03 | 	byte	$00, $fe, $03, $00, $fd, $04, $00, $fa, $03, $02, $03, $f9, $fe, $fe, $03, $03
243b7     FC FA 00 07 
243bb     00 FC 02 03 
243bf     05 F8 FE FE 
243c3     FE 00 FE 04 | 	byte	$fc, $fa, $00, $07, $00, $fc, $02, $03, $05, $f8, $fe, $fe, $fe, $00, $fe, $04
243c7     00 FE 00 01 
243cb     00 FE FE 00 
243cf     00 00 01 03 
243d3     00 00 FE 01 | 	byte	$00, $fe, $00, $01, $00, $fe, $fe, $00, $00, $00, $01, $03, $00, $00, $fe, $01
243d7     03 F8 03 FE 
243db     03 FA FE 07 
243df     00 00 05 00 
243e3     FE 03 FC 00 | 	byte	$03, $f8, $03, $fe, $03, $fa, $fe, $07, $00, $00, $05, $00, $fe, $03, $fc, $00
243e7     01 01 00 FE 
243eb     03 00 FC 02 
243ef     03 F8 00 05 
243f3     00 FE 00 F8 | 	byte	$01, $01, $00, $fe, $03, $00, $fc, $02, $03, $f8, $00, $05, $00, $fe, $00, $f8
243f7     03 07 FA FA 
243fb     00 03 FD 00 
243ff     00 FE 01 00 
24403     FE 00 FA 02 | 	byte	$03, $07, $fa, $fa, $00, $03, $fd, $00, $00, $fe, $01, $00, $fe, $00, $fa, $02
24407     00 FE 01 00 
2440b     FE 03 FA FC 
2440f     07 FE F9 04 
24413     FD 00 02 00 | 	byte	$00, $fe, $01, $00, $fe, $03, $fa, $fc, $07, $fe, $f9, $04, $fd, $00, $02, $00
24417     FE FC 00 FE 
2441b     FE FE 00 FA 
2441f     FE 07 F6 00 
24423     04 00 F0 0D | 	byte	$fe, $fc, $00, $fe, $fe, $fe, $00, $fa, $fe, $07, $f6, $00, $04, $00, $f0, $0d
24427     FD 01 01 F8 
2442b     FE FE 03 FC 
2442f     00 04 00 FE 
24433     FE 00 F8 FE | 	byte	$fd, $01, $01, $f8, $fe, $fe, $03, $fc, $00, $04, $00, $fe, $fe, $00, $f8, $fe
24437     07 FC 00 01 
2443b     00 FC 03 01 
2443f     F4 06 00 00 
24443     FE 01 FC FE | 	byte	$07, $fc, $00, $01, $00, $fc, $03, $01, $f4, $06, $00, $00, $fe, $01, $fc, $fe
24447     03 FE FE 00 
2444b     02 00 FE 01 
2444f     00 05 03 FA 
24453     FE 05 FC 00 | 	byte	$03, $fe, $fe, $00, $02, $00, $fe, $01, $00, $05, $03, $fa, $fe, $05, $fc, $00
24457     FE 01 01 00 
2445b     00 03 00 01 
2445f     01 FE 04 00 
24463     F8 02 05 00 | 	byte	$fe, $01, $01, $00, $00, $03, $00, $01, $01, $fe, $04, $00, $f8, $02, $05, $00
24467     00 00 02 00 
2446b     FA 05 01 00 
2446f     FE FE 02 04 
24473     00 FE 03 03 | 	byte	$00, $00, $02, $00, $fa, $05, $01, $00, $fe, $fe, $02, $04, $00, $fe, $03, $03
24477     F8 01 01 FA 
2447b     06 FC FE 03 
2447f     FE 00 F8 FE 
24483     03 FA 01 07 | 	byte	$f8, $01, $01, $fa, $06, $fc, $fe, $03, $fe, $00, $f8, $fe, $03, $fa, $01, $07
24487     01 F8 03 FE 
2448b     FE 07 FA FE 
2448f     04 03 FC 03 
24493     03 02 00 F9 | 	byte	$01, $f8, $03, $fe, $fe, $07, $fa, $fe, $04, $03, $fc, $03, $03, $02, $00, $f9
24497     0A 00 FE FE 
2449b     05 03 03 00 
2449f     FA 08 00 FE 
244a3     01 04 01 00 | 	byte	$0a, $00, $fe, $fe, $05, $03, $03, $00, $fa, $08, $00, $fe, $01, $04, $01, $00
244a7     FE 00 03 03 
244ab     02 00 FE 00 
244af     FE 05 01 00 
244b3     FE 05 00 03 | 	byte	$fe, $00, $03, $03, $02, $00, $fe, $00, $fe, $05, $01, $00, $fe, $05, $00, $03
244b7     FE 04 FD 00 
244bb     01 FC 06 01 
244bf     01 FE 03 01 
244c3     00 02 03 01 | 	byte	$fe, $04, $fd, $00, $01, $fc, $06, $01, $01, $fe, $03, $01, $00, $02, $03, $01
244c7     FE 03 03 00 
244cb     03 02 00 05 
244cf     00 FA 07 01 
244d3     00 FD 05 FE | 	byte	$fe, $03, $03, $00, $03, $02, $00, $05, $00, $fa, $07, $01, $00, $fd, $05, $fe
244d7     00 FE FE 07 
244db     03 00 00 00 
244df     07 FE FC 00 
244e3     05 00 00 03 | 	byte	$00, $fe, $fe, $07, $03, $00, $00, $00, $07, $fe, $fc, $00, $05, $00, $00, $03
244e7     05 00 F8 07 
244eb     00 FE FC 01 
244ef     06 00 FD 00 
244f3     08 00 FE FC | 	byte	$05, $00, $f8, $07, $00, $fe, $fc, $01, $06, $00, $fd, $00, $08, $00, $fe, $fc
244f7     05 03 F8 04 
244fb     00 03 03 F8 
244ff     06 00 00 FC 
24503     03 03 F5 FE | 	byte	$05, $03, $f8, $04, $00, $03, $03, $f8, $06, $00, $00, $fc, $03, $03, $f5, $fe
24507     04 03 FC FD 
2450b     01 03 F8 FE 
2450f     00 02 00 FC 
24513     FE 00 00 FE | 	byte	$04, $03, $fc, $fd, $01, $03, $f8, $fe, $00, $02, $00, $fc, $fe, $00, $00, $fe
24517     00 FA 00 01 
2451b     00 01 00 00 
2451f     FE 00 FE 00 
24523     FC 03 00 FD | 	byte	$00, $fa, $00, $01, $00, $01, $00, $00, $fe, $00, $fe, $00, $fc, $03, $00, $fd
24527     FA 04 07 F8 
2452b     FD FE 00 06 
2452f     00 FC 01 FE 
24533     FD 00 FE 00 | 	byte	$fa, $04, $07, $f8, $fd, $fe, $00, $06, $00, $fc, $01, $fe, $fd, $00, $fe, $00
24537     00 FE 00 FC 
2453b     01 01 FC 00 
2453f     FE 00 FD 01 
24543     FE FD FC 03 | 	byte	$00, $fe, $00, $fc, $01, $01, $fc, $00, $fe, $00, $fd, $01, $fe, $fd, $fc, $03
24547     FD F9 01 00 
2454b     FE 00 00 FC 
2454f     FE 00 FD 00 
24553     FC 01 FE FA | 	byte	$fd, $f9, $01, $00, $fe, $00, $00, $fc, $fe, $00, $fd, $00, $fc, $01, $fe, $fa
24557     FD FC 05 FE 
2455b     F8 FE 00 FC 
2455f     FE 01 F9 FE 
24563     00 FC FA 01 | 	byte	$fd, $fc, $05, $fe, $f8, $fe, $00, $fc, $fe, $01, $f9, $fe, $00, $fc, $fa, $01
24567     FC 01 F9 00 
2456b     00 FA 00 00 
2456f     FD FA 00 01 
24573     FD 00 FC 00 | 	byte	$fc, $01, $f9, $00, $00, $fa, $00, $00, $fd, $fa, $00, $01, $fd, $00, $fc, $00
24577     00 00 FE FE 
2457b     00 00 FE 01 
2457f     FA 01 01 FE 
24583     FC 01 00 01 | 	byte	$00, $00, $fe, $fe, $00, $00, $fe, $01, $fa, $01, $01, $fe, $fc, $01, $00, $01
24587     FC FE 00 01 
2458b     00 FA 03 03 
2458f     FE FC 04 03 
24593     F8 FE 03 00 | 	byte	$fc, $fe, $00, $01, $00, $fa, $03, $03, $fe, $fc, $04, $03, $f8, $fe, $03, $00
24597     03 FA FC 01 
2459b     03 FA FE 00 
2459f     05 F9 FE 03 
245a3     00 01 FE 01 | 	byte	$03, $fa, $fc, $01, $03, $fa, $fe, $00, $05, $f9, $fe, $03, $00, $01, $fe, $01
245a7     03 FC F9 FE 
245ab     00 00 FC FE 
245af     07 00 FD FC 
245b3     03 00 FD FC | 	byte	$03, $fc, $f9, $fe, $00, $00, $fc, $fe, $07, $00, $fd, $fc, $03, $00, $fd, $fc
245b7     03 FA 00 FC 
245bb     01 01 FD FC 
245bf     05 00 FE FE 
245c3     03 00 00 01 | 	byte	$03, $fa, $00, $fc, $01, $01, $fd, $fc, $05, $00, $fe, $fe, $03, $00, $00, $01
245c7     00 05 00 00 
245cb     FE 01 00 FC 
245cf     03 00 00 03 
245d3     05 FC FE 00 | 	byte	$00, $05, $00, $00, $fe, $01, $00, $fc, $03, $00, $00, $03, $05, $fc, $fe, $00
245d7     05 00 00 05 
245db     00 01 01 01 
245df     FE 04 00 FE 
245e3     00 03 00 FE | 	byte	$05, $00, $00, $05, $00, $01, $01, $01, $fe, $04, $00, $fe, $00, $03, $00, $fe
245e7     03 FE 03 00 
245eb     FC 02 03 00 
245ef     00 06 00 FE 
245f3     01 FE 01 00 | 	byte	$03, $fe, $03, $00, $fc, $02, $03, $00, $00, $06, $00, $fe, $01, $fe, $01, $00
245f7     00 00 03 03 
245fb     F9 FE 04 03 
245ff     FC FE 00 03 
24603     FC FE 01 03 | 	byte	$00, $00, $03, $03, $f9, $fe, $04, $03, $fc, $fe, $00, $03, $fc, $fe, $01, $03
24607     00 FE 00 05 
2460b     01 FD FE 07 
2460f     00 FD 03 02 
24613     02 00 FE FE | 	byte	$00, $fe, $00, $05, $01, $fd, $fe, $07, $00, $fd, $03, $02, $02, $00, $fe, $fe
24617     04 00 01 FE 
2461b     01 00 FC 04 
2461f     03 F9 02 03 
24623     FD 01 00 FE | 	byte	$04, $00, $01, $fe, $01, $00, $fc, $04, $03, $f9, $02, $03, $fd, $01, $00, $fe
24627     03 00 00 01 
2462b     FD 03 FC FE 
2462f     03 F9 04 02 
24633     F9 FE 04 00 | 	byte	$03, $00, $00, $01, $fd, $03, $fc, $fe, $03, $f9, $04, $02, $f9, $fe, $04, $00
24637     FE 00 FE FE 
2463b     00 FE 00 00 
2463f     00 FE FE 01 
24643     01 FC FE 03 | 	byte	$fe, $00, $fe, $fe, $00, $fe, $00, $00, $00, $fe, $fe, $01, $01, $fc, $fe, $03
24647     FA FE 00 00 
2464b     FE 01 FA FE 
2464f     01 F9 FE FD 
24653     05 00 FE 00 | 	byte	$fa, $fe, $00, $00, $fe, $01, $fa, $fe, $01, $f9, $fe, $fd, $05, $00, $fe, $00
24657     00 FD 03 FD 
2465b     FA 01 FE 00 
2465f     FC 00 00 FE 
24663     FE FC FE 00 | 	byte	$00, $fd, $03, $fd, $fa, $01, $fe, $00, $fc, $00, $00, $fe, $fe, $fc, $fe, $00
24667     02 F8 FE 01 
2466b     F9 FE 00 FE 
2466f     FD FE 00 FC 
24673     02 F8 00 00 | 	byte	$02, $f8, $fe, $01, $f9, $fe, $00, $fe, $fd, $fe, $00, $fc, $02, $f8, $00, $00
24677     FE FD FC 03 
2467b     01 FC FC 00 
2467f     FE 04 00 FA 
24683     00 00 F8 FE | 	byte	$fe, $fd, $fc, $03, $01, $fc, $fc, $00, $fe, $04, $00, $fa, $00, $00, $f8, $fe
24687     00 FE FA 00 
2468b     FE 01 F8 03 
2468f     F9 FE 00 FC 
24693     FE 03 FA FC | 	byte	$00, $fe, $fa, $00, $fe, $01, $f8, $03, $f9, $fe, $00, $fc, $fe, $03, $fa, $fc
24697     00 00 00 FC 
2469b     FE 00 00 FE 
2469f     00 00 04 00 
246a3     FE FE 00 00 | 	byte	$00, $00, $00, $fc, $fe, $00, $00, $fe, $00, $00, $04, $00, $fe, $fe, $00, $00
246a7     FE 01 FC 00 
246ab     FC FE 03 FC 
246af     FE FD FE 03 
246b3     F8 FC 05 00 | 	byte	$fe, $01, $fc, $00, $fc, $fe, $03, $fc, $fe, $fd, $fe, $03, $f8, $fc, $05, $00
246b7     F9 01 00 01 
246bb     FE 00 00 00 
246bf     FE F8 01 03 
246c3     FE FC FE 03 | 	byte	$f9, $01, $00, $01, $fe, $00, $00, $00, $fe, $f8, $01, $03, $fe, $fc, $fe, $03
246c7     FA 00 00 FE 
246cb     01 FD 01 FC 
246cf     02 FC 01 00 
246d3     FE FC FE 00 | 	byte	$fa, $00, $00, $fe, $01, $fd, $01, $fc, $02, $fc, $01, $00, $fe, $fc, $fe, $00
246d7     00 00 02 FE 
246db     00 FD FD 01 
246df     03 FE 00 00 
246e3     00 01 FE 05 | 	byte	$00, $00, $02, $fe, $00, $fd, $fd, $01, $03, $fe, $00, $00, $00, $01, $fe, $05
246e7     00 FC 00 FE 
246eb     01 00 02 00 
246ef     05 00 00 FE 
246f3     01 05 FC 00 | 	byte	$00, $fc, $00, $fe, $01, $00, $02, $00, $05, $00, $00, $fe, $01, $05, $fc, $00
246f7     05 00 01 FE 
246fb     02 00 00 00 
246ff     FE 00 FE 00 
24703     00 04 00 FC | 	byte	$05, $00, $01, $fe, $02, $00, $00, $00, $fe, $00, $fe, $00, $00, $04, $00, $fc
24707     00 01 00 03 
2470b     FE 02 01 00 
2470f     FE FE 00 FE 
24713     00 01 02 00 | 	byte	$00, $01, $00, $03, $fe, $02, $01, $00, $fe, $fe, $00, $fe, $00, $01, $02, $00
24717     01 00 00 03 
2471b     00 FE 00 00 
2471f     FE FE 00 01 
24723     FE 00 00 01 | 	byte	$01, $00, $00, $03, $00, $fe, $00, $00, $fe, $fe, $00, $01, $fe, $00, $00, $01
24727     03 FE 00 05 
2472b     00 01 06 FC 
2472f     03 01 05 FE 
24733     02 03 FE 01 | 	byte	$03, $fe, $00, $05, $00, $01, $06, $fc, $03, $01, $05, $fe, $02, $03, $fe, $01
24737     02 00 01 07 
2473b     00 04 00 03 
2473f     01 03 FE 03 
24743     04 05 00 01 | 	byte	$02, $00, $01, $07, $00, $04, $00, $03, $01, $03, $fe, $03, $04, $05, $00, $01
24747     05 02 00 FE 
2474b     04 00 FE 01 
2474f     01 04 FE 05 
24753     FE 05 00 07 | 	byte	$05, $02, $00, $fe, $04, $00, $fe, $01, $01, $04, $fe, $05, $fe, $05, $00, $07
24757     FE 03 00 00 
2475b     05 01 00 03 
2475f     01 03 FE 01 
24763     02 00 07 00 | 	byte	$fe, $03, $00, $00, $05, $01, $00, $03, $01, $03, $fe, $01, $02, $00, $07, $00
24767     00 01 07 00 
2476b     01 05 01 00 
2476f     03 00 FE 02 
24773     00 02 06 00 | 	byte	$00, $01, $07, $00, $01, $05, $01, $00, $03, $00, $fe, $02, $00, $02, $06, $00
24777     00 01 06 00 
2477b     FE 01 03 02 
2477f     FE 03 FE 03 
24783     01 00 04 00 | 	byte	$00, $01, $06, $00, $fe, $01, $03, $02, $fe, $03, $fe, $03, $01, $00, $04, $00
24787     03 01 05 00 
2478b     00 05 01 03 
2478f     FE 03 01 01 
24793     00 00 02 07 | 	byte	$03, $01, $05, $00, $00, $05, $01, $03, $fe, $03, $01, $01, $00, $00, $02, $07
24797     00 01 FE 03 
2479b     00 FE 00 01 
2479f     03 00 00 FE 
247a3     03 01 FE 00 | 	byte	$00, $01, $fe, $03, $00, $fe, $00, $01, $03, $00, $00, $fe, $03, $01, $fe, $00
247a7     07 00 FE 00 
247ab     01 FE 00 FD 
247af     01 03 FC FD 
247b3     02 00 00 FC | 	byte	$07, $00, $fe, $00, $01, $fe, $00, $fd, $01, $03, $fc, $fd, $02, $00, $00, $fc
247b7     FE 01 00 FE 
247bb     00 00 03 00 
247bf     FE FC 03 FE 
247c3     FA FE 00 00 | 	byte	$fe, $01, $00, $fe, $00, $00, $03, $00, $fe, $fc, $03, $fe, $fa, $fe, $00, $00
247c7     00 03 00 FE 
247cb     01 FA FE 01 
247cf     FC FE 01 00 
247d3     FC FD 00 FC | 	byte	$00, $03, $00, $fe, $01, $fa, $fe, $01, $fc, $fe, $01, $00, $fc, $fd, $00, $fc
247d7     FE FE 00 FE 
247db     FE 00 00 00 
247df     FD FD FE FE 
247e3     FC FC 04 F9 | 	byte	$fe, $fe, $00, $fe, $fe, $00, $00, $00, $fd, $fd, $fe, $fe, $fc, $fc, $04, $f9
247e7     FE FC 03 FC 
247eb     FC FE 00 FD 
247ef     FD FD FE 01 
247f3     F9 F9 FE 00 | 	byte	$fe, $fc, $03, $fc, $fc, $fe, $00, $fd, $fd, $fd, $fe, $01, $f9, $f9, $fe, $00
247f7     FD F9 FD 00 
247fb     FC 00 FC FA 
247ff     FE 00 F9 FE 
24803     00 FC FC 00 | 	byte	$fd, $f9, $fd, $00, $fc, $00, $fc, $fa, $fe, $00, $f9, $fe, $00, $fc, $fc, $00
24807     FC 00 FC FE 
2480b     FD FC FC FC 
2480f     00 03 F8 FE 
24813     FE 00 F9 FE | 	byte	$fc, $00, $fc, $fe, $fd, $fc, $fc, $fc, $00, $03, $f8, $fe, $fe, $00, $f9, $fe
24817     FD FE FC FD 
2481b     00 00 00 FC 
2481f     00 FE 00 00 
24823     FE 00 00 FD | 	byte	$fd, $fe, $fc, $fd, $00, $00, $00, $fc, $00, $fe, $00, $00, $fe, $00, $00, $fd
24827     01 00 FE 00 
2482b     00 FC 01 FC 
2482f     FE 00 FC FE 
24833     FE 00 FE FC | 	byte	$01, $00, $fe, $00, $00, $fc, $01, $fc, $fe, $00, $fc, $fe, $fe, $00, $fe, $fc
24837     00 00 FC FE 
2483b     01 FE 00 FD 
2483f     FD 00 00 00 
24843     FC FE FD FC | 	byte	$00, $00, $fc, $fe, $01, $fe, $00, $fd, $fd, $00, $00, $00, $fc, $fe, $fd, $fc
24847     00 00 FE FC 
2484b     FE FC FE 00 
2484f     FC FC 00 FE 
24853     F9 00 FE FE | 	byte	$00, $00, $fe, $fc, $fe, $fc, $fe, $00, $fc, $fc, $00, $fe, $f9, $00, $fe, $fe
24857     00 FC FE FC 
2485b     FE 00 FD FE 
2485f     00 FD 00 00 
24863     FE FE 00 FE | 	byte	$00, $fc, $fe, $fc, $fe, $00, $fd, $fe, $00, $fd, $00, $00, $fe, $fe, $00, $fe
24867     FE 00 FA 01 
2486b     FE 03 FC FE 
2486f     01 00 FE FE 
24873     00 01 FE 00 | 	byte	$fe, $00, $fa, $01, $fe, $03, $fc, $fe, $01, $00, $fe, $fe, $00, $01, $fe, $00
24877     00 02 00 03 
2487b     FD 02 00 02 
2487f     01 01 FC 00 
24883     01 FE 03 00 | 	byte	$00, $02, $00, $03, $fd, $02, $00, $02, $01, $01, $fc, $00, $01, $fe, $03, $00
24887     FE 01 00 03 
2488b     00 FE 03 00 
2488f     02 00 00 01 
24893     00 01 01 FE | 	byte	$fe, $01, $00, $03, $00, $fe, $03, $00, $02, $00, $00, $01, $00, $01, $01, $fe
24897     00 FE 01 FD 
2489b     02 00 03 00 
2489f     05 FC 02 01 
248a3     FE 03 04 00 | 	byte	$00, $fe, $01, $fd, $02, $00, $03, $00, $05, $fc, $02, $01, $fe, $03, $04, $00
248a7     FD FE 02 03 
248ab     FE 00 03 01 
248af     00 01 03 03 
248b3     00 FD 05 03 | 	byte	$fd, $fe, $02, $03, $fe, $00, $03, $01, $00, $01, $03, $03, $00, $fd, $05, $03
248b7     00 01 01 01 
248bb     01 00 FE 03 
248bf     00 00 01 02 
248c3     01 FD FE 06 | 	byte	$00, $01, $01, $01, $01, $00, $fe, $03, $00, $00, $01, $02, $01, $fd, $fe, $06
248c7     01 01 00 02 
248cb     01 01 FE FE 
248cf     04 02 00 FD 
248d3     03 03 00 FE | 	byte	$01, $01, $00, $02, $01, $01, $fe, $fe, $04, $02, $00, $fd, $03, $03, $00, $fe
248d7     01 01 00 00 
248db     01 01 00 00 
248df     03 00 01 FD 
248e3     01 02 00 FE | 	byte	$01, $01, $00, $00, $01, $01, $00, $00, $03, $00, $01, $fd, $01, $02, $00, $fe
248e7     01 01 FE 00 
248eb     01 00 01 00 
248ef     00 01 01 FC 
248f3     00 02 00 FD | 	byte	$01, $01, $fe, $00, $01, $00, $01, $00, $00, $01, $01, $fc, $00, $02, $00, $fd
248f7     02 00 01 FE 
248fb     02 00 00 01 
248ff     00 00 02 00 
24903     FE FE 00 00 | 	byte	$02, $00, $01, $fe, $02, $00, $00, $01, $00, $00, $02, $00, $fe, $fe, $00, $00
24907     FD 01 00 00 
2490b     FD 00 00 FE 
2490f     FE 00 02 00 
24913     FE FE 00 01 | 	byte	$fd, $01, $00, $00, $fd, $00, $00, $fe, $fe, $00, $02, $00, $fe, $fe, $00, $01
24917     FA FE 00 00 
2491b     FE 00 FE 01 
2491f     FE FD FD 01 
24923     00 FA FE 04 | 	byte	$fa, $fe, $00, $00, $fe, $00, $fe, $01, $fe, $fd, $fd, $01, $00, $fa, $fe, $04
24927     00 FE FD 00 
2492b     FE 00 FA FE 
2492f     00 FE FD 00 
24933     FE 00 FE FE | 	byte	$00, $fe, $fd, $00, $fe, $00, $fa, $fe, $00, $fe, $fd, $00, $fe, $00, $fe, $fe
24937     FC 00 FE 00 
2493b     FE FE FA 00 
2493f     FE 00 FC FE 
24943     00 00 00 00 | 	byte	$fc, $00, $fe, $00, $fe, $fe, $fa, $00, $fe, $00, $fc, $fe, $00, $00, $00, $00
24947     00 FE 00 00 
2494b     FE FE FE 00 
2494f     FE 00 00 FD 
24953     00 FD FE FE | 	byte	$00, $fe, $00, $00, $fe, $fe, $fe, $00, $fe, $00, $00, $fd, $00, $fd, $fe, $fe
24957     00 FE FD 01 
2495b     FD FD FE 00 
2495f     FE FE FD FE 
24963     00 FC 00 FE | 	byte	$00, $fe, $fd, $01, $fd, $fd, $fe, $00, $fe, $fe, $fd, $fe, $00, $fc, $00, $fe
24967     00 FD 00 01 
2496b     FD FC FE 00 
2496f     00 01 FC FE 
24973     FC 01 FD FE | 	byte	$00, $fd, $00, $01, $fd, $fc, $fe, $00, $00, $01, $fc, $fe, $fc, $01, $fd, $fe
24977     01 FC 00 00 
2497b     FD 01 FE 00 
2497f     02 00 FE FE 
24983     00 01 01 FE | 	byte	$01, $fc, $00, $00, $fd, $01, $fe, $00, $02, $00, $fe, $fe, $00, $01, $01, $fe
24987     00 01 FE 00 
2498b     00 01 02 01 
2498f     00 01 02 00 
24993     00 FE 00 01 | 	byte	$00, $01, $fe, $00, $00, $01, $02, $01, $00, $01, $02, $00, $00, $fe, $00, $01
24997     01 01 00 05 
2499b     00 00 00 01 
2499f     03 00 FE 02 
249a3     00 00 01 00 | 	byte	$01, $01, $00, $05, $00, $00, $00, $01, $03, $00, $fe, $02, $00, $00, $01, $00
249a7     02 01 00 00 
249ab     00 01 FE FE 
249af     00 00 02 00 
249b3     FC 02 00 00 | 	byte	$02, $01, $00, $00, $00, $01, $fe, $fe, $00, $00, $02, $00, $fc, $02, $00, $00
249b7     01 00 03 FD 
249bb     00 05 01 00 
249bf     00 00 00 FA 
249c3     0B 1C 1B 0B | 	byte	$01, $00, $03, $fd, $00, $05, $01, $00, $00, $00, $00, $fa, $0b, $1c, $1b, $0b
249c7     E0 D8 1C 1E 
249cb     0B F4 24 33 
249cf     17 20 38 31 
249d3     2D 2A 1B F6 | 	byte	$e0, $d8, $1c, $1e, $0b, $f4, $24, $33, $17, $20, $38, $31, $2d, $2a, $1b, $f6
249d7     C7 BD DF E5 
249db     F4 2F 42 45 
249df     20 30 34 3B 
249e3     37 2B 18 EB | 	byte	$c7, $bd, $df, $e5, $f4, $2f, $42, $45, $20, $30, $34, $3b, $37, $2b, $18, $eb
249e7     D3 D9 1B 15 
249eb     26 30 28 11 
249ef     00 2C 2B 2C 
249f3     26 24 0A E7 | 	byte	$d3, $d9, $1b, $15, $26, $30, $28, $11, $00, $2c, $2b, $2c, $26, $24, $0a, $e7
249f7     BE BD 03 02 
249fb     EC 0B 40 26 
249ff     11 38 1A 13 
24a03     30 2C 18 07 | 	byte	$be, $bd, $03, $02, $ec, $0b, $40, $26, $11, $38, $1a, $13, $30, $2c, $18, $07
24a07     D0 F6 33 27 
24a0b     03 E7 23 11 
24a0f     0B 35 37 2C 
24a13     27 1C 12 F1 | 	byte	$d0, $f6, $33, $27, $03, $e7, $23, $11, $0b, $35, $37, $2c, $27, $1c, $12, $f1
24a17     A4 E1 2D 22 
24a1b     F9 F1 35 18 
24a1f     26 45 35 2F 
24a23     30 35 17 FD | 	byte	$a4, $e1, $2d, $22, $f9, $f1, $35, $18, $26, $45, $35, $2f, $30, $35, $17, $fd
24a27     BE F2 2C 2C 
24a2b     1B 20 28 FC 
24a2f     18 33 24 28 
24a33     2B 1F F6 D8 | 	byte	$be, $f2, $2c, $2c, $1b, $20, $28, $fc, $18, $33, $24, $28, $2b, $1f, $f6, $d8
24a37     BE F4 20 24 
24a3b     06 03 2D 06 
24a3f     2B 03 F9 37 
24a43     35 37 1C 06 | 	byte	$be, $f4, $20, $24, $06, $03, $2d, $06, $2b, $03, $f9, $37, $35, $37, $1c, $06
24a47     CF F1 2C 18 
24a4b     F4 07 11 06 
24a4f     33 2B 35 31 
24a53     20 09 EC E4 | 	byte	$cf, $f1, $2c, $18, $f4, $07, $11, $06, $33, $2b, $35, $31, $20, $09, $ec, $e4
24a57     C6 FD 37 1F 
24a5b     E8 1A 13 0B 
24a5f     4A 3D 42 34 
24a63     20 26 06 E1 | 	byte	$c6, $fd, $37, $1f, $e8, $1a, $13, $0b, $4a, $3d, $42, $34, $20, $26, $06, $e1
24a67     C7 11 31 15 
24a6b     22 1F 03 13 
24a6f     3B 33 28 12 
24a73     F9 D9 03 E7 | 	byte	$c7, $11, $31, $15, $22, $1f, $03, $13, $3b, $33, $28, $12, $f9, $d9, $03, $e7
24a77     CF 0E 00 DD 
24a7b     28 30 1E 34 
24a7f     0F 16 2B 22 
24a83     2B 23 18 EC | 	byte	$cf, $0e, $00, $dd, $28, $30, $1e, $34, $0f, $16, $2b, $22, $2b, $23, $18, $ec
24a87     C4 06 03 F0 
24a8b     0E 2A 17 35 
24a8f     34 23 20 24 
24a93     0B 0E 0B DF | 	byte	$c4, $06, $03, $f0, $0e, $2a, $17, $35, $34, $23, $20, $24, $0b, $0e, $0b, $df
24a97     AA CC 12 3B 
24a9b     52 3F 28 42 
24a9f     2D 34 37 37 
24aa3     26 1E FC CC | 	byte	$aa, $cc, $12, $3b, $52, $3f, $28, $42, $2d, $34, $37, $37, $26, $1e, $fc, $cc
24aa7     AF 1E 2F 30 
24aab     3B 1B 0F 1F 
24aaf     2F 38 30 12 
24ab3     F4 FC E9 CA | 	byte	$af, $1e, $2f, $30, $3b, $1b, $0f, $1f, $2f, $38, $30, $12, $f4, $fc, $e9, $ca
24ab7     AD 20 3B 31 
24abb     4A 1F 00 FE 
24abf     31 41 2F 2C 
24ac3     1E 01 FC E1 | 	byte	$ad, $20, $3b, $31, $4a, $1f, $00, $fe, $31, $41, $2f, $2c, $1e, $01, $fc, $e1
24ac7     B7 16 06 DD 
24acb     18 0E 33 45 
24acf     4A 34 20 0A 
24ad3     E0 E0 CF D7 | 	byte	$b7, $16, $06, $dd, $18, $0e, $33, $45, $4a, $34, $20, $0a, $e0, $e0, $cf, $d7
24ad7     CF 38 2B 24 
24adb     45 23 45 3D 
24adf     37 27 15 24 
24ae3     22 1F 03 C8 | 	byte	$cf, $38, $2b, $24, $45, $23, $45, $3d, $37, $27, $15, $24, $22, $1f, $03, $c8
24ae7     C8 13 11 2F 
24aeb     2D 1E 42 3D 
24aef     39 15 22 18 
24af3     D9 AE EC B5 | 	byte	$c8, $13, $11, $2f, $2d, $1e, $42, $3d, $39, $15, $22, $18, $d9, $ae, $ec, $b5
24af7     CF 3B 42 63 
24afb     30 F9 09 1E 
24aff     22 34 3F 34 
24b03     22 0D DC 9C | 	byte	$cf, $3b, $42, $63, $30, $f9, $09, $1e, $22, $34, $3f, $34, $22, $0d, $dc, $9c
24b07     D3 FC EE 49 
24b0b     26 20 26 35 
24b0f     40 3B 2F 09 
24b13     AD B9 D3 D2 | 	byte	$d3, $fc, $ee, $49, $26, $20, $26, $35, $40, $3b, $2f, $09, $ad, $b9, $d3, $d2
24b17     12 40 42 51 
24b1b     16 30 38 40 
24b1f     3D 2D 22 12 
24b23     FA 0A FD C4 | 	byte	$12, $40, $42, $51, $16, $30, $38, $40, $3d, $2d, $22, $12, $fa, $0a, $fd, $c4
24b27     EB 18 26 1A 
24b2b     0E 4D 45 50 
24b2f     35 20 00 C4 
24b33     A8 05 ED CF | 	byte	$eb, $18, $26, $1a, $0e, $4d, $45, $50, $35, $20, $00, $c4, $a8, $05, $ed, $cf
24b37     0A 26 33 34 
24b3b     13 2D 3B 3D 
24b3f     30 0E 0F 1E 
24b43     26 1C EB AF | 	byte	$0a, $26, $33, $34, $13, $2d, $3b, $3d, $30, $0e, $0f, $1e, $26, $1c, $eb, $af
24b47     CE D8 0F 35 
24b4b     33 4E 3B 33 
24b4f     20 1E 06 B9 
24b53     E9 12 E5 CA | 	byte	$ce, $d8, $0f, $35, $33, $4e, $3b, $33, $20, $1e, $06, $b9, $e9, $12, $e5, $ca
24b57     F9 34 5A 39 
24b5b     48 3D 23 26 
24b5f     33 2B 23 12 
24b63     11 FA C1 C7 | 	byte	$f9, $34, $5a, $39, $48, $3d, $23, $26, $33, $2b, $23, $12, $11, $fa, $c1, $c7
24b67     F5 27 44 1C 
24b6b     33 23 38 42 
24b6f     38 0E D7 C3 
24b73     D4 F0 E0 FC | 	byte	$f5, $27, $44, $1c, $33, $23, $38, $42, $38, $0e, $d7, $c3, $d4, $f0, $e0, $fc
24b77     07 39 31 F8 
24b7b     34 41 50 4D 
24b7f     35 18 0B F5 
24b83     09 F6 CA D7 | 	byte	$07, $39, $31, $f8, $34, $41, $50, $4d, $35, $18, $0b, $f5, $09, $f6, $ca, $d7
24b87     C8 E8 FD 23 
24b8b     4C 4D 4D 3D 
24b8f     09 CA D4 E0 
24b93     16 F9 EE F4 | 	byte	$c8, $e8, $fd, $23, $4c, $4d, $4d, $3d, $09, $ca, $d4, $e0, $16, $f9, $ee, $f4
24b97     E7 2D 2F 54 
24b9b     56 49 38 2D 
24b9f     13 1B 26 27 
24ba3     13 D9 CC CA | 	byte	$e7, $2d, $2f, $54, $56, $49, $38, $2d, $13, $1b, $26, $27, $13, $d9, $cc, $ca
24ba7     DC 2B 23 52 
24bab     44 41 1F 0E 
24baf     E0 09 EC 0D 
24bb3     0B D7 FC E9 | 	byte	$dc, $2b, $23, $52, $44, $41, $1f, $0e, $e0, $09, $ec, $0d, $0b, $d7, $fc, $e9
24bb7     FE 20 18 57 
24bbb     46 46 3B 3C 
24bbf     31 33 1B 07 
24bc3     EC C4 E9 BF | 	byte	$fe, $20, $18, $57, $46, $46, $3b, $3c, $31, $33, $1b, $07, $ec, $c4, $e9, $bf
24bc7     C7 09 2A 3D 
24bcb     3D 49 2D FA 
24bcf     E5 E9 1B 17 
24bd3     09 09 23 E7 | 	byte	$c7, $09, $2a, $3d, $3d, $49, $2d, $fa, $e5, $e9, $1b, $17, $09, $09, $23, $e7
24bd7     09 16 34 3D 
24bdb     48 4E 51 30 
24bdf     1B 1C 20 1A 
24be3     F0 E8 F9 BA | 	byte	$09, $16, $34, $3d, $48, $4e, $51, $30, $1b, $1c, $20, $1a, $f0, $e8, $f9, $ba
24be7     F4 11 3D 46 
24beb     45 2D F9 AD 
24bef     FC 26 37 2C 
24bf3     01 06 FE BF | 	byte	$f4, $11, $3d, $46, $45, $2d, $f9, $ad, $fc, $26, $37, $2c, $01, $06, $fe, $bf
24bf7     CF 28 5A 54 
24bfb     55 35 35 20 
24bff     2D 28 2C 02 
24c03     C7 E1 CF 9D | 	byte	$cf, $28, $5a, $54, $55, $35, $35, $20, $2d, $28, $2c, $02, $c7, $e1, $cf, $9d
24c07     EE 3D 52 44 
24c0b     28 FC A5 03 
24c0f     3C 44 31 06 
24c13     F4 15 F6 E4 | 	byte	$ee, $3d, $52, $44, $28, $fc, $a5, $03, $3c, $44, $31, $06, $f4, $15, $f6, $e4
24c17     01 33 26 2C 
24c1b     2D 33 33 33 
24c1f     39 24 18 E5 
24c23     D2 0A E5 D6 | 	byte	$01, $33, $26, $2c, $2d, $33, $33, $33, $39, $24, $18, $e5, $d2, $0a, $e5, $d6
24c27     F1 40 35 27 
24c2b     FE C2 03 28 
24c2f     3B 42 31 02 
24c33     0D 1F BF B1 | 	byte	$f1, $40, $35, $27, $fe, $c2, $03, $28, $3b, $42, $31, $02, $0d, $1f, $bf, $b1
24c37     1A 4A 45 4E 
24c3b     40 2B 18 2D 
24c3f     23 20 18 E0 
24c43     EE E0 A5 C1 | 	byte	$1a, $4a, $45, $4e, $40, $2b, $18, $2d, $23, $20, $18, $e0, $ee, $e0, $a5, $c1
24c47     1A 54 49 16 
24c4b     C2 DD 16 3B 
24c4f     50 4A 23 F5 
24c53     30 0B E9 D7 | 	byte	$1a, $54, $49, $16, $c2, $dd, $16, $3b, $50, $4a, $23, $f5, $30, $0b, $e9, $d7
24c57     2C 33 26 2C 
24c5b     2B 1B 2D 48 
24c5f     35 1E E8 DC 
24c63     0E E5 EB F6 | 	byte	$2c, $33, $26, $2c, $2b, $1b, $2d, $48, $35, $1e, $e8, $dc, $0e, $e5, $eb, $f6
24c67     2F 33 23 D3 
24c6b     D0 1C 42 48 
24c6f     3B 28 F4 FD 
24c73     1E D3 EB FE | 	byte	$2f, $33, $23, $d3, $d0, $1c, $42, $48, $3b, $28, $f4, $fd, $1e, $d3, $eb, $fe
24c77     35 41 38 39 
24c7b     38 2B 2B 20 
24c7f     28 F9 D2 FA 
24c83     E9 A6 E5 06 | 	byte	$35, $41, $38, $39, $38, $2b, $2b, $20, $28, $f9, $d2, $fa, $e9, $a6, $e5, $06
24c87     39 2C F8 C8 
24c8b     15 2C 52 4C 
24c8f     2F 16 11 34 
24c93     16 E1 F9 EC | 	byte	$39, $2c, $f8, $c8, $15, $2c, $52, $4c, $2f, $16, $11, $34, $16, $e1, $f9, $ec
24c97     13 2B 39 2C 
24c9b     2A 37 3B 2C 
24c9f     22 E7 D7 02 
24ca3     E4 E4 06 FE | 	byte	$13, $2b, $39, $2c, $2a, $37, $3b, $2c, $22, $e7, $d7, $02, $e4, $e4, $06, $fe
24ca7     23 03 BB 0B 
24cab     24 2D 52 4A 
24caf     26 F4 18 FA 
24cb3     BF F9 2D FE | 	byte	$23, $03, $bb, $0b, $24, $2d, $52, $4a, $26, $f4, $18, $fa, $bf, $f9, $2d, $fe
24cb7     33 48 42 22 
24cbb     1E 3C 38 26 
24cbf     06 D4 EC D0 
24cc3     AD 0B 1B 01 | 	byte	$33, $48, $42, $22, $1e, $3c, $38, $26, $06, $d4, $ec, $d0, $ad, $0b, $1b, $01
24cc7     06 E1 F6 2D 
24ccb     37 46 59 3F 
24ccf     0E 0E 38 17 
24cd3     DF 1E 06 E9 | 	byte	$06, $e1, $f6, $2d, $37, $46, $59, $3f, $0e, $0e, $38, $17, $df, $1e, $06, $e9
24cd7     20 33 3D 31 
24cdb     42 4A 35 0B 
24cdf     DB F1 03 E8 
24ce3     F4 33 F6 B5 | 	byte	$20, $33, $3d, $31, $42, $4a, $35, $0b, $db, $f1, $03, $e8, $f4, $33, $f6, $b5
24ce7     E4 0B 41 3B 
24ceb     3D 52 3B 1B 
24cef     FD 11 E4 D6 
24cf3     13 35 16 03 | 	byte	$e4, $0b, $41, $3b, $3d, $52, $3b, $1b, $fd, $11, $e4, $d6, $13, $35, $16, $03
24cf7     3B 48 40 24 
24cfb     2B 33 20 EC 
24cff     E9 F8 CC A4 
24d03     0F 2C D9 BD | 	byte	$3b, $48, $40, $24, $2b, $33, $20, $ec, $e9, $f8, $cc, $a4, $0f, $2c, $d9, $bd
24d07     09 48 3B 2C 
24d0b     55 54 34 13 
24d0f     2B 16 E8 E5 
24d13     28 18 FC FD | 	byte	$09, $48, $3b, $2c, $55, $54, $34, $13, $2b, $16, $e8, $e5, $28, $18, $fc, $fd
24d17     3F 35 38 37 
24d1b     45 3D 06 F1 
24d1f     EC EE DD F2 
24d23     39 ED A8 CA | 	byte	$3f, $35, $38, $37, $45, $3d, $06, $f1, $ec, $ee, $dd, $f2, $39, $ed, $a8, $ca
24d27     35 42 3B 4E 
24d2b     5F 3B FE 0B 
24d2f     E9 BF DB 1B 
24d33     42 2C F1 F8 | 	byte	$35, $42, $3b, $4e, $5f, $3b, $fe, $0b, $e9, $bf, $db, $1b, $42, $2c, $f1, $f8
24d37     31 3B 3B 37 
24d3b     33 F9 E4 06 
24d3f     DF C7 BA 2D 
24d43     FD C6 B2 13 | 	byte	$31, $3b, $3b, $37, $33, $f9, $e4, $06, $df, $c7, $ba, $2d, $fd, $c6, $b2, $13
24d47     5A 52 4A 4A 
24d4b     38 0A 2B 3D 
24d4f     0E E7 F2 1F 
24d53     1F 0D E8 13 | 	byte	$5a, $52, $4a, $4a, $38, $0a, $2b, $3d, $0e, $e7, $f2, $1f, $1f, $0d, $e8, $13
24d57     46 40 33 31 
24d5b     16 F4 2D 11 
24d5f     E7 CA 07 F9 
24d63     CA E7 F5 22 | 	byte	$46, $40, $33, $31, $16, $f4, $2d, $11, $e7, $ca, $07, $f9, $ca, $e7, $f5, $22
24d67     44 41 44 46 
24d6b     28 28 30 D4 
24d6f     B2 E7 2C 57 
24d73     48 18 DF 0E | 	byte	$44, $41, $44, $46, $28, $28, $30, $d4, $b2, $e7, $2c, $57, $48, $18, $df, $0e
24d77     31 37 46 2F 
24d7b     EC 06 06 D9 
24d7f     A0 EE 16 E5 
24d83     F6 02 F2 26 | 	byte	$31, $37, $46, $2f, $ec, $06, $06, $d9, $a0, $ee, $16, $e5, $f6, $02, $f2, $26
24d87     57 5D 4E 1A 
24d8b     03 3B 23 01 
24d8f     EE 18 28 1F 
24d93     1B F9 E4 33 | 	byte	$57, $5d, $4e, $1a, $03, $3b, $23, $01, $ee, $18, $28, $1f, $1b, $f9, $e4, $33
24d97     56 4A 26 F0 
24d9b     07 24 18 F4 
24d9f     EC FC CC DD 
24da3     01 1B 03 42 | 	byte	$56, $4a, $26, $f0, $07, $24, $18, $f4, $ec, $fc, $cc, $dd, $01, $1b, $03, $42
24da7     49 3C 2A 15 
24dab     42 38 E9 AF 
24daf     E1 2B 42 3C 
24db3     30 FE DF 13 | 	byte	$49, $3c, $2a, $15, $42, $38, $e9, $af, $e1, $2b, $42, $3c, $30, $fe, $df, $13
24db7     31 2A 05 0F 
24dbb     23 09 CA A1 
24dbf     CE F9 1E 00 
24dc3     26 03 EE 33 | 	byte	$31, $2a, $05, $0f, $23, $09, $ca, $a1, $ce, $f9, $1e, $00, $26, $03, $ee, $33
24dc7     48 38 2B 3F 
24dcb     2D 15 F1 F9 
24dcf     1B 45 33 17 
24dd3     FE F4 EC 50 | 	byte	$48, $38, $2b, $3f, $2d, $15, $f1, $f9, $1b, $45, $33, $17, $fe, $f4, $ec, $50
24dd7     48 13 0A 15 
24ddb     1F FA F5 F1 
24ddf     ED 26 E9 05 
24de3     23 11 03 45 | 	byte	$48, $13, $0a, $15, $1f, $fa, $f5, $f1, $ed, $26, $e9, $05, $23, $11, $03, $45
24de7     2B 16 37 2D 
24deb     26 E4 D9 0B 
24def     39 49 2C 27 
24df3     26 FC EC 28 | 	byte	$2b, $16, $37, $2d, $26, $e4, $d9, $0b, $39, $49, $2c, $27, $26, $fc, $ec, $28
24df7     01 13 15 2B 
24dfb     0E D0 AD BE 
24dff     31 2B 06 34 
24e03     28 FE EE 28 | 	byte	$01, $13, $15, $2b, $0e, $d0, $ad, $be, $31, $2b, $06, $34, $28, $fe, $ee, $28
24e07     1B 4D 3F 35 
24e0b     03 DC 16 33 
24e0f     49 40 26 07 
24e13     05 FD E9 1E | 	byte	$1b, $4d, $3f, $35, $03, $dc, $16, $33, $49, $40, $26, $07, $05, $fd, $e9, $1e
24e17     38 30 18 02 
24e1b     E9 E7 E4 42 
24e1f     33 F2 06 1C 
24e23     1C F8 FC 33 | 	byte	$38, $30, $18, $02, $e9, $e7, $e4, $42, $33, $f2, $06, $1c, $1c, $f8, $fc, $33
24e27     40 28 28 00 
24e2b     CC ED 3C 48 
24e2f     3C 2C 1F 0A 
24e33     20 F4 E4 11 | 	byte	$40, $28, $28, $00, $cc, $ed, $3c, $48, $3c, $2c, $1f, $0a, $20, $f4, $e4, $11
24e37     11 23 11 F0 
24e3b     D2 BA 01 1E 
24e3f     0A 07 34 39 
24e43     27 E8 EC 2C | 	byte	$11, $23, $11, $f0, $d2, $ba, $01, $1e, $0a, $07, $34, $39, $27, $e8, $ec, $2c
24e47     22 3B 2B F4 
24e4b     F8 20 40 28 
24e4f     2C 2F 1B 13 
24e53     F5 CE ED 1F | 	byte	$22, $3b, $2b, $f4, $f8, $20, $40, $28, $2c, $2f, $1b, $13, $f5, $ce, $ed, $1f
24e57     38 33 03 CB 
24e5b     D4 1E 35 18 
24e5f     0E 30 1A 22 
24e63     00 E0 1E 40 | 	byte	$38, $33, $03, $cb, $d4, $1e, $35, $18, $0e, $30, $1a, $22, $00, $e0, $1e, $40
24e67     40 13 E1 DD 
24e6b     EC 52 57 40 
24e6f     1E 23 17 00 
24e73     F5 EC 01 06 | 	byte	$40, $13, $e1, $dd, $ec, $52, $57, $40, $1e, $23, $17, $00, $f5, $ec, $01, $06
24e77     15 0B D2 C8 
24e7b     FE 2D 13 F6 
24e7f     3B 2D 38 22 
24e83     0E E1 FC 30 | 	byte	$15, $0b, $d2, $c8, $fe, $2d, $13, $f6, $3b, $2d, $38, $22, $0e, $e1, $fc, $30
24e87     24 0A 0A 2F 
24e8b     50 35 2B 11 
24e8f     26 26 1A F6 
24e93     F9 D3 00 28 | 	byte	$24, $0a, $0a, $2f, $50, $35, $2b, $11, $26, $26, $1a, $f6, $f9, $d3, $00, $28
24e97     2B F6 DB F8 
24e9b     40 28 FE 1E 
24e9f     45 2D F4 1A 
24ea3     16 DD 24 42 | 	byte	$2b, $f6, $db, $f8, $40, $28, $fe, $1e, $45, $2d, $f4, $1a, $16, $dd, $24, $42
24ea7     13 D6 03 17 
24eab     2C 54 42 33 
24eaf     20 FE E4 1F 
24eb3     0B E1 0B 06 | 	byte	$13, $d6, $03, $17, $2c, $54, $42, $33, $20, $fe, $e4, $1f, $0b, $e1, $0b, $06
24eb7     E4 C7 F8 31 
24ebb     1F 15 0B 20 
24ebf     2D 09 26 3C 
24ec3     09 CC FE 0B | 	byte	$e4, $c7, $f8, $31, $1f, $15, $0b, $20, $2d, $09, $26, $3c, $09, $cc, $fe, $0b
24ec7     F4 30 56 56 
24ecb     37 12 09 1A 
24ecf     17 EC 30 17 
24ed3     DF BF 0E 03 | 	byte	$f4, $30, $56, $56, $37, $12, $09, $1a, $17, $ec, $30, $17, $df, $bf, $0e, $03
24ed7     E8 07 37 1B 
24edb     02 0B 3C 3C 
24edf     16 16 23 0D 
24ee3     FC E7 26 FC | 	byte	$e8, $07, $37, $1b, $02, $0b, $3c, $3c, $16, $16, $23, $0d, $fc, $e7, $26, $fc
24ee7     18 20 16 18 
24eeb     4E 46 38 22 
24eef     DB 03 16 1F 
24ef3     FC DC F9 C4 | 	byte	$18, $20, $16, $18, $4e, $46, $38, $22, $db, $03, $16, $1f, $fc, $dc, $f9, $c4
24ef7     E7 20 3B 16 
24efb     05 27 1A F4 
24eff     17 4C 34 22 
24f03     F1 CF DC 11 | 	byte	$e7, $20, $3b, $16, $05, $27, $1a, $f4, $17, $4c, $34, $22, $f1, $cf, $dc, $11
24f07     67 65 54 38 
24f0b     1B F5 07 F1 
24f0f     24 2D 2D 0A 
24f13     BA C7 DC 13 | 	byte	$67, $65, $54, $38, $1b, $f5, $07, $f1, $24, $2d, $2d, $0a, $ba, $c7, $dc, $13
24f17     40 52 26 ED 
24f1b     FC 38 1A 24 
24f1f     44 23 FE 05 
24f23     E4 D2 09 5A | 	byte	$40, $52, $26, $ed, $fc, $38, $1a, $24, $44, $23, $fe, $05, $e4, $d2, $09, $5a
24f27     48 1B F4 27 
24f2b     42 2C 0A 16 
24f2f     F8 0B 20 1A 
24f33     DC A8 E1 F6 | 	byte	$48, $1b, $f4, $27, $42, $2c, $0a, $16, $f8, $0b, $20, $1a, $dc, $a8, $e1, $f6
24f37     35 33 11 00 
24f3b     28 0E 01 30 
24f3f     3B 30 2F 0A 
24f43     BF A0 30 6A | 	byte	$35, $33, $11, $00, $28, $0e, $01, $30, $3b, $30, $2f, $0a, $bf, $a0, $30, $6a
24f47     6F 45 3B 16 
24f4b     ED E1 16 23 
24f4f     34 27 15 D7 
24f53     8B CB 20 5E | 	byte	$6f, $45, $3b, $16, $ed, $e1, $16, $23, $34, $27, $15, $d7, $8b, $cb, $20, $5e
24f57     4E 1E F1 DD 
24f5b     11 28 45 35 
24f5f     1C 00 00 F1 
24f63     B1 16 5A 4D | 	byte	$4e, $1e, $f1, $dd, $11, $28, $45, $35, $1c, $00, $00, $f1, $b1, $16, $5a, $4d
24f67     16 FE 03 12 
24f6b     20 35 1B FC 
24f6f     FC 23 17 DD 
24f73     A6 D8 0E 31 | 	byte	$16, $fe, $03, $12, $20, $35, $1b, $fc, $fc, $23, $17, $dd, $a6, $d8, $0e, $31
24f77     27 0B E7 12 
24f7b     35 2D 35 2D 
24f7f     2B 28 FA D4 
24f83     B7 1C 61 61 | 	byte	$27, $0b, $e7, $12, $35, $2d, $35, $2d, $2b, $28, $fa, $d4, $b7, $1c, $61, $61
24f87     57 30 F9 E0 
24f8b     06 1E 20 23 
24f8f     2D 16 D3 C7 
24f93     AF 09 55 50 | 	byte	$57, $30, $f9, $e0, $06, $1e, $20, $23, $2d, $16, $d3, $c7, $af, $09, $55, $50
24f97     24 D9 E1 27 
24f9b     50 52 48 13 
24f9f     0B E9 02 09 
24fa3     EC 42 35 33 | 	byte	$24, $d9, $e1, $27, $50, $52, $48, $13, $0b, $e9, $02, $09, $ec, $42, $35, $33
24fa7     0A DC 01 3F 
24fab     35 18 01 01 
24faf     16 FE 1B CE 
24fb3     9A 15 24 30 | 	byte	$0a, $dc, $01, $3f, $35, $18, $01, $01, $16, $fe, $1b, $ce, $9a, $15, $24, $30
24fb7     F6 DC 31 39 
24fbb     3F 37 1E 26 
24fbf     0E 03 1B D8 
24fc3     E1 2C 69 4D | 	byte	$f6, $dc, $31, $39, $3f, $37, $1e, $26, $0e, $03, $1b, $d8, $e1, $2c, $69, $4d
24fc7     11 FD 18 07 
24fcb     1E 23 23 20 
24fcf     FC 0B FE A6 
24fd3     D2 33 42 F9 | 	byte	$11, $fd, $18, $07, $1e, $23, $23, $20, $fc, $0b, $fe, $a6, $d2, $33, $42, $f9
24fd7     D7 28 37 4D 
24fdb     51 2D 11 FA 
24fdf     F5 2D 1B F0 
24fe3     EE 26 30 F4 | 	byte	$d7, $28, $37, $4d, $51, $2d, $11, $fa, $f5, $2d, $1b, $f0, $ee, $26, $30, $f4
24fe7     F5 12 22 28 
24feb     1C 16 FE F6 
24fef     28 33 E7 A4 
24ff3     DC 13 FE DC | 	byte	$f5, $12, $22, $28, $1c, $16, $fe, $f6, $28, $33, $e7, $a4, $dc, $13, $fe, $dc
24ff7     23 30 37 51 
24ffb     44 15 07 0A 
24fff     38 2B FE E3 
25003     F9 3B 20 1B | 	byte	$23, $30, $37, $51, $44, $15, $07, $0a, $38, $2b, $fe, $e3, $f9, $3b, $20, $1b
25007     33 1B 0F 15 
2500b     2A 0D F8 30 
2500f     3C 13 AF CE 
25013     EC 03 DC 33 | 	byte	$33, $1b, $0f, $15, $2a, $0d, $f8, $30, $3c, $13, $af, $ce, $ec, $03, $dc, $33
25017     3B 38 51 4A 
2501b     26 FE 0D 3F 
2501f     31 27 E8 FA 
25023     F1 FE 16 2B | 	byte	$3b, $38, $51, $4a, $26, $fe, $0d, $3f, $31, $27, $e8, $fa, $f1, $fe, $16, $2b
25027     1B FE 12 2B 
2502b     18 E9 24 44 
2502f     2C F9 B7 F2 
25033     D2 D7 09 20 | 	byte	$1b, $fe, $12, $2b, $18, $e9, $24, $44, $2c, $f9, $b7, $f2, $d2, $d7, $09, $20
25037     2B 4A 51 3B 
2503b     FE 05 3C 3B 
2503f     35 0D EE F8 
25043     CE 12 40 35 | 	byte	$2b, $4a, $51, $3b, $fe, $05, $3c, $3b, $35, $0d, $ee, $f8, $ce, $12, $40, $35
25047     26 11 13 1E 
2504b     EE 1E 4C 3D 
2504f     0E C4 CB E3 
25053     C4 0B 38 3B | 	byte	$26, $11, $13, $1e, $ee, $1e, $4c, $3d, $0e, $c4, $cb, $e3, $c4, $0b, $38, $3b
25057     35 40 35 1A 
2505b     06 49 3F 2B 
2505f     13 FE F8 E5 
25063     E1 23 1E 1A | 	byte	$35, $40, $35, $1a, $06, $49, $3f, $2b, $13, $fe, $f8, $e5, $e1, $23, $1e, $1a
25067     0F 06 1E 00 
2506b     0B 23 28 13 
2506f     F8 D6 E5 C4 
25073     CF F8 20 33 | 	byte	$0f, $06, $1e, $00, $0b, $23, $28, $13, $f8, $d6, $e5, $c4, $cf, $f8, $20, $33
25077     50 52 20 FD 
2507b     23 3B 3D 2B 
2507f     2B F4 B5 D8 
25083     FE 39 3D 3C | 	byte	$50, $52, $20, $fd, $23, $3b, $3d, $2b, $2b, $f4, $b5, $d8, $fe, $39, $3d, $3c
25087     1C 01 F4 12 
2508b     42 42 28 09 
2508f     CA C7 CB 06 
25093     F4 22 37 31 | 	byte	$1c, $01, $f4, $12, $42, $42, $28, $09, $ca, $c7, $cb, $06, $f4, $22, $37, $31
25097     3D 30 20 3C 
2509b     4A 30 0B 1B 
2509f     1B DF FC 0A 
250a3     E7 F9 1C 34 | 	byte	$3d, $30, $20, $3c, $4a, $30, $0b, $1b, $1b, $df, $fc, $0a, $e7, $f9, $1c, $34
250a7     2A FE 01 24 
250ab     0E 16 16 F6 
250af     EC D7 F1 E8 
250b3     D7 1A 42 56 | 	byte	$2a, $fe, $01, $24, $0e, $16, $16, $f6, $ec, $d7, $f1, $e8, $d7, $1a, $42, $56
250b7     49 0B 13 3F 
250bb     3B 33 3B 20 
250bf     DF CC FD 03 
250c3     09 2C 38 1A | 	byte	$49, $0b, $13, $3f, $3b, $33, $3b, $20, $df, $cc, $fd, $03, $09, $2c, $38, $1a
250c7     00 F8 2C 3F 
250cb     34 1A F1 C2 
250cf     E9 FC 18 02 
250d3     D9 1A 39 40 | 	byte	$00, $f8, $2c, $3f, $34, $1a, $f1, $c2, $e9, $fc, $18, $02, $d9, $1a, $39, $40
250d7     2D 2A 57 3F 
250db     2B 1E 18 FC 
250df     11 03 06 F5 
250e3     E9 0B 33 2D | 	byte	$2d, $2a, $57, $3f, $2b, $1e, $18, $fc, $11, $03, $06, $f5, $e9, $0b, $33, $2d
250e7     0D F8 17 05 
250eb     0E 0B D7 F0 
250ef     15 F4 EE E0 
250f3     01 1B 3B 38 | 	byte	$0d, $f8, $17, $05, $0e, $0b, $d7, $f0, $15, $f4, $ee, $e0, $01, $1b, $3b, $38
250f7     16 1E 3F 35 
250fb     35 27 FE 00 
250ff     0D E7 FC 07 
25103     0E 18 26 09 | 	byte	$16, $1e, $3f, $35, $35, $27, $fe, $00, $0d, $e7, $fc, $07, $0e, $18, $26, $09
25107     02 27 2F 20 
2510b     27 E1 AE 13 
2510f     2A 01 EE 0F 
25113     0E 11 45 35 | 	byte	$02, $27, $2f, $20, $27, $e1, $ae, $13, $2a, $01, $ee, $0f, $0e, $11, $45, $35
25117     23 42 49 38 
2511b     1E F8 0A 2C 
2511f     26 FC 03 FA 
25123     FE 03 20 28 | 	byte	$23, $42, $49, $38, $1e, $f8, $0a, $2c, $26, $fc, $03, $fa, $fe, $03, $20, $28
25127     20 1E FA FE 
2512b     F9 BE FA 3D 
2512f     22 DD E5 15 
25133     18 1B 35 23 | 	byte	$20, $1e, $fa, $fe, $f9, $be, $fa, $3d, $22, $dd, $e5, $15, $18, $1b, $35, $23
25137     23 33 40 34 
2513b     13 0F 2D 22 
2513f     05 E5 17 1F 
25143     11 F4 13 01 | 	byte	$23, $33, $40, $34, $13, $0f, $2d, $22, $05, $e5, $17, $1f, $11, $f4, $13, $01
25147     1B 35 3B 11 
2514b     E3 C2 1B 2B 
2514f     23 F5 F6 27 
25153     0F 00 38 28 | 	byte	$1b, $35, $3b, $11, $e3, $c2, $1b, $2b, $23, $f5, $f6, $27, $0f, $00, $38, $28
25157     40 45 3B 02 
2515b     F6 26 40 33 
2515f     16 00 F1 F8 
25163     05 F8 23 16 | 	byte	$40, $45, $3b, $02, $f6, $26, $40, $33, $16, $00, $f1, $f8, $05, $f8, $23, $16
25167     2D 13 F9 D8 
2516b     D2 FA 2A 2B 
2516f     12 DF FC 34 
25173     1F 0A 0B FC | 	byte	$2d, $13, $f9, $d8, $d2, $fa, $2a, $2b, $12, $df, $fc, $34, $1f, $0a, $0b, $fc
25177     30 3D 2B 12 
2517b     2B 38 13 11 
2517f     22 07 0D 0F 
25183     E8 DB EC 11 | 	byte	$30, $3d, $2b, $12, $2b, $38, $13, $11, $22, $07, $0d, $0f, $e8, $db, $ec, $11
25187     3D 28 11 E8 
2518b     DF F9 28 38 
2518f     2D E9 02 0F 
25193     0D 15 0A 34 | 	byte	$3d, $28, $11, $e8, $df, $f9, $28, $38, $2d, $e9, $02, $0f, $0d, $15, $0a, $34
25197     45 1E 09 00 
2519b     40 42 33 30 
2519f     1B F1 00 F8 
251a3     0A 05 F1 1B | 	byte	$45, $1e, $09, $00, $40, $42, $33, $30, $1b, $f1, $00, $f8, $0a, $05, $f1, $1b
251a7     23 01 EE F8 
251ab     EE F9 28 2D 
251af     16 EE 11 1C 
251b3     26 12 DF 07 | 	byte	$23, $01, $ee, $f8, $ee, $f9, $28, $2d, $16, $ee, $11, $1c, $26, $12, $df, $07
251b7     1F 2A 12 39 
251bb     50 28 28 2B 
251bf     26 11 ED F9 
251c3     F9 E0 D0 23 | 	byte	$1f, $2a, $12, $39, $50, $28, $28, $2b, $26, $11, $ed, $f9, $f9, $e0, $d0, $23
251c7     2C 1B 09 0F 
251cb     EC 23 3B 35 
251cf     30 FE E4 07 
251d3     23 1C E4 2C | 	byte	$2c, $1b, $09, $0f, $ec, $23, $3b, $35, $30, $fe, $e4, $07, $23, $1c, $e4, $2c
251d7     34 13 01 39 
251db     40 40 45 30 
251df     1E EC D7 F5 
251e3     13 0E D9 0E | 	byte	$34, $13, $01, $39, $40, $40, $45, $30, $1e, $ec, $d7, $f5, $13, $0e, $d9, $0e
251e7     0A F6 03 0D 
251eb     0B 2D 1B 13 
251ef     18 E4 F1 34 
251f3     38 15 C6 F9 | 	byte	$0a, $f6, $03, $0d, $0b, $2d, $1b, $13, $18, $e4, $f1, $34, $38, $15, $c6, $f9
251f7     0A 0F 46 49 
251fb     4A 33 2D 28 
251ff     2D 0E DC F0 
25203     EE E7 BF 09 | 	byte	$0a, $0f, $46, $49, $4a, $33, $2d, $28, $2d, $0e, $dc, $f0, $ee, $e7, $bf, $09
25207     24 0D 27 FC 
2520b     0B 31 38 38 
2520f     20 E7 D2 12 
25213     26 23 F1 FC | 	byte	$24, $0d, $27, $fc, $0b, $31, $38, $38, $20, $e7, $d2, $12, $26, $23, $f1, $fc
25217     0A 05 31 40 
2521b     5F 44 3B 20 
2521f     0B F1 DF 0A 
25223     0E 13 D7 C2 | 	byte	$0a, $05, $31, $40, $5f, $44, $3b, $20, $0b, $f1, $df, $0a, $0e, $13, $d7, $c2
25227     F4 16 3F 12 
2522b     2F 2F 0D 05 
2522f     16 FC F1 2F 
25233     20 0E E1 D9 | 	byte	$f4, $16, $3f, $12, $2f, $2f, $0d, $05, $16, $fc, $f1, $2f, $20, $0e, $e1, $d9
25237     13 2D 50 3B 
2523b     31 31 3C 37 
2523f     30 1B DC CB 
25243     F6 06 EC CF | 	byte	$13, $2d, $50, $3b, $31, $31, $3c, $37, $30, $1b, $dc, $cb, $f6, $06, $ec, $cf
25247     09 30 2D 03 
2524b     2C 45 3F 39 
2524f     1F EC DF FA 
25253     30 33 13 C2 | 	byte	$09, $30, $2d, $03, $2c, $45, $3f, $39, $1f, $ec, $df, $fa, $30, $33, $13, $c2
25257     E7 3B 56 52 
2525b     4D 41 28 0D 
2525f     12 16 E9 F5 
25263     1B 06 DF AD | 	byte	$e7, $3b, $56, $52, $4d, $41, $28, $0d, $12, $16, $e9, $f5, $1b, $06, $df, $ad
25267     E1 4D 4A 17 
2526b     13 26 1B 28 
2526f     2C 13 CA E0 
25273     13 11 06 D7 | 	byte	$e1, $4d, $4a, $17, $13, $26, $1b, $28, $2c, $13, $ca, $e0, $13, $11, $06, $d7
25277     03 5F 45 37 
2527b     1E 2D 35 38 
2527f     22 06 E1 CB 
25283     00 0D 01 D7 | 	byte	$03, $5f, $45, $37, $1e, $2d, $35, $38, $22, $06, $e1, $cb, $00, $0d, $01, $d7
25287     E1 45 28 07 
2528b     09 48 3D 42 
2528f     2C F5 CB E7 
25293     16 22 09 E1 | 	byte	$e1, $45, $28, $07, $09, $48, $3d, $42, $2c, $f5, $cb, $e7, $16, $22, $09, $e1
25297     DC 4D 55 46 
2529b     26 2D 26 1B 
2529f     12 0D FD E8 
252a3     ED 02 E4 E3 | 	byte	$dc, $4d, $55, $46, $26, $2d, $26, $1b, $12, $0d, $fd, $e8, $ed, $02, $e4, $e3
252a7     EB 3D 42 22 
252ab     E4 20 30 42 
252af     30 0E E7 BE 
252b3     D9 02 17 01 | 	byte	$eb, $3d, $42, $22, $e4, $20, $30, $42, $30, $0e, $e7, $be, $d9, $02, $17, $01
252b7     07 3D 5A 37 
252bb     1E 38 38 2B 
252bf     11 01 EC E0 
252c3     E4 F2 07 00 | 	byte	$07, $3d, $5a, $37, $1e, $38, $38, $2b, $11, $01, $ec, $e0, $e4, $f2, $07, $00
252c7     06 0E 40 24 
252cb     E7 23 57 45 
252cf     28 1B 00 DB 
252d3     DB F5 20 F0 | 	byte	$06, $0e, $40, $24, $e7, $23, $57, $45, $28, $1b, $00, $db, $db, $f5, $20, $f0
252d7     15 1A 41 44 
252db     2D 3B 40 20 
252df     16 0E 01 02 
252e3     01 D6 F5 E9 | 	byte	$15, $1a, $41, $44, $2d, $3b, $40, $20, $16, $0e, $01, $02, $01, $d6, $f5, $e9
252e7     22 1C 24 31 
252eb     F9 F6 35 38 
252ef     33 2D 16 F0 
252f3     D9 C7 E7 E4 | 	byte	$22, $1c, $24, $31, $f9, $f6, $35, $38, $33, $2d, $16, $f0, $d9, $c7, $e7, $e4
252f7     2B 3F 30 31 
252fb     18 23 3B 3D 
252ff     28 18 F9 E5 
25303     01 F2 F8 EE | 	byte	$2b, $3f, $30, $31, $18, $23, $3b, $3d, $28, $18, $f9, $e5, $01, $f2, $f8, $ee
25307     23 1A EE 15 
2530b     12 00 30 48 
2530f     3B 1E 1B 0F 
25313     23 EE D7 DC | 	byte	$23, $1a, $ee, $15, $12, $00, $30, $48, $3b, $1e, $1b, $0f, $23, $ee, $d7, $dc
25317     EB 1F 1C 42 
2531b     3C 30 26 0F 
2531f     12 26 23 0F 
25323     16 F9 B2 DF | 	byte	$eb, $1f, $1c, $42, $3c, $30, $26, $0f, $12, $26, $23, $0f, $16, $f9, $b2, $df
25327     20 11 17 27 
2532b     28 F4 DC 30 
2532f     48 40 30 15 
25333     F4 E9 BF E4 | 	byte	$20, $11, $17, $27, $28, $f4, $dc, $30, $48, $40, $30, $15, $f4, $e9, $bf, $e4
25337     2B 2D FD D4 
2533b     16 2C 3C 3D 
2533f     44 30 06 FD 
25343     18 23 F4 F9 | 	byte	$2b, $2d, $fd, $d4, $16, $2c, $3c, $3d, $44, $30, $06, $fd, $18, $23, $f4, $f9
25347     13 0E F6 03 
2534b     07 15 0F 05 
2534f     1E 26 4A 44 
25353     2B 23 E4 BF | 	byte	$13, $0e, $f6, $03, $07, $15, $0f, $05, $1e, $26, $4a, $44, $2b, $23, $e4, $bf
25357     D7 1E 2C 1A 
2535b     2A 17 DD FC 
2535f     46 56 4C 31 
25363     09 F4 CC 06 | 	byte	$d7, $1e, $2c, $1a, $2a, $17, $dd, $fc, $46, $56, $4c, $31, $09, $f4, $cc, $06
25367     2D 30 2C 18 
2536b     0B EE 0E F9 
2536f     EB 48 4D 2F 
25373     F9 09 EC 11 | 	byte	$2d, $30, $2c, $18, $0b, $ee, $0e, $f9, $eb, $48, $4d, $2f, $f9, $09, $ec, $11
25377     16 13 0F E1 
2537b     F6 1E 1A 27 
2537f     27 1B 01 1C 
25383     26 2B 01 F4 | 	byte	$16, $13, $0f, $e1, $f6, $1e, $1a, $27, $27, $1b, $01, $1c, $26, $2b, $01, $f4
25387     1B 1B 23 22 
2538b     16 1A 1A 18 
2538f     DF F5 33 1F 
25393     30 30 09 E9 | 	byte	$1b, $1b, $23, $22, $16, $1a, $1a, $18, $df, $f5, $33, $1f, $30, $30, $09, $e9
25397     FC F6 0E 15 
2539b     0B 09 03 13 
2539f     31 54 4E 16 
253a3     F0 01 E1 06 | 	byte	$fc, $f6, $0e, $15, $0b, $09, $03, $13, $31, $54, $4e, $16, $f0, $01, $e1, $06
253a7     26 35 1B 02 
253ab     06 03 1E 28 
253af     30 23 02 02 
253b3     D9 FE 11 27 | 	byte	$26, $35, $1b, $02, $06, $03, $1e, $28, $30, $23, $02, $02, $d9, $fe, $11, $27
253b7     2C 28 03 E0 
253bb     BA D7 26 2D 
253bf     31 31 1F 12 
253c3     11 F9 E3 22 | 	byte	$2c, $28, $03, $e0, $ba, $d7, $26, $2d, $31, $31, $1f, $12, $11, $f9, $e3, $22
253c7     30 28 28 1C 
253cb     0E 11 28 09 
253cf     0B 28 23 EE 
253d3     0F 24 E3 07 | 	byte	$30, $28, $28, $1c, $0e, $11, $28, $09, $0b, $28, $23, $ee, $0f, $24, $e3, $07
253d7     26 26 38 2A 
253db     09 D2 CF FC 
253df     0E 13 2F 33 
253e3     23 17 EB 00 | 	byte	$26, $26, $38, $2a, $09, $d2, $cf, $fc, $0e, $13, $2f, $33, $23, $17, $eb, $00
253e7     40 4C 44 34 
253eb     1E EC 06 11 
253ef     1E 28 1C FC 
253f3     EC CB E8 13 | 	byte	$40, $4c, $44, $34, $1e, $ec, $06, $11, $1e, $28, $1c, $fc, $ec, $cb, $e8, $13
253f7     27 44 3F 2A 
253fb     23 03 1B 09 
253ff     DC F6 F9 05 
25403     0B E8 F9 17 | 	byte	$27, $44, $3f, $2a, $23, $03, $1b, $09, $dc, $f6, $f9, $05, $0b, $e8, $f9, $17
25407     24 2A 2F 34 
2540b     3D 20 2B 30 
2540f     1B 01 03 0D 
25413     1E FD C1 CC | 	byte	$24, $2a, $2f, $34, $3d, $20, $2b, $30, $1b, $01, $03, $0d, $1e, $fd, $c1, $cc
25417     0B 01 22 49 
2541b     44 37 42 2B 
2541f     01 F4 F4 DD 
25423     03 F6 DC F9 | 	byte	$0b, $01, $22, $49, $44, $37, $42, $2b, $01, $f4, $f4, $dd, $03, $f6, $dc, $f9
25427     0E 1F 3D 37 
2542b     5A 2B 28 41 
2542f     24 1B 1B 1C 
25433     01 DC D4 F6 | 	byte	$0e, $1f, $3d, $37, $5a, $2b, $28, $41, $24, $1b, $1b, $1c, $01, $dc, $d4, $f6
25437     F4 E7 0A 09 
2543b     02 0B 38 4C 
2543f     34 35 2B 07 
25443     E4 C7 C2 01 | 	byte	$f4, $e7, $0a, $09, $02, $0b, $38, $4c, $34, $35, $2b, $07, $e4, $c7, $c2, $01
25447     16 23 2F 0D 
2544b     07 1C 1E 28 
2544f     38 1E 16 27 
25453     18 03 F6 1E | 	byte	$16, $23, $2f, $0d, $07, $1c, $1e, $28, $38, $1e, $16, $27, $18, $03, $f6, $1e
25457     16 0E 09 DB 
2545b     EE 1A 37 2F 
2545f     23 FE 1E 2C 
25463     26 0B EC FE | 	byte	$16, $0e, $09, $db, $ee, $1a, $37, $2f, $23, $fe, $1e, $2c, $26, $0b, $ec, $fe
25467     E7 F6 0D 2B 
2546b     33 39 2B 2A 
2546f     27 0E 20 1F 
25473     38 0E E1 01 | 	byte	$e7, $f6, $0d, $2b, $33, $39, $2b, $2a, $27, $0e, $20, $1f, $38, $0e, $e1, $01
25477     0B 1E 2B 24 
2547b     13 F1 DF 23 
2547f     2C 26 20 1F 
25483     09 E9 F6 11 | 	byte	$0b, $1e, $2b, $24, $13, $f1, $df, $23, $2c, $26, $20, $1f, $09, $e9, $f6, $11
25487     1B 23 28 07 
2548b     F1 05 F6 2A 
2548f     46 39 17 05 
25493     18 EE F9 30 | 	byte	$1b, $23, $28, $07, $f1, $05, $f6, $2a, $46, $39, $17, $05, $18, $ee, $f9, $30
25497     30 1E 0B 02 
2549b     0E 0B 16 20 
2549f     03 0F 09 17 
254a3     12 0D 09 30 | 	byte	$30, $1e, $0b, $02, $0e, $0b, $16, $20, $03, $0f, $09, $17, $12, $0d, $09, $30
254a7     28 03 FC 05 
254ab     23 30 13 0B 
254af     FA 09 0B 22 
254b3     37 15 13 20 | 	byte	$28, $03, $fc, $05, $23, $30, $13, $0b, $fa, $09, $0b, $22, $37, $15, $13, $20
254b7     13 23 20 27 
254bb     09 13 0B FE 
254bf     0B FC 05 FE 
254c3     24 06 EE 24 | 	byte	$13, $23, $20, $27, $09, $13, $0b, $fe, $0b, $fc, $05, $fe, $24, $06, $ee, $24
254c7     22 16 18 1F 
254cb     1B FC F1 01 
254cf     23 1E 0A 01 
254d3     F5 EC FC 35 | 	byte	$22, $16, $18, $1f, $1b, $fc, $f1, $01, $23, $1e, $0a, $01, $f5, $ec, $fc, $35
254d7     4A 40 33 24 
254db     13 16 D4 E1 
254df     18 13 13 07 
254e3     06 E8 E3 40 | 	byte	$4a, $40, $33, $24, $13, $16, $d4, $e1, $18, $13, $13, $07, $06, $e8, $e3, $40
254e7     46 3D 26 1A 
254eb     1B 26 30 11 
254ef     0E DC CA FC 
254f3     05 12 01 1B | 	byte	$46, $3d, $26, $1a, $1b, $26, $30, $11, $0e, $dc, $ca, $fc, $05, $12, $01, $1b
254f7     1B 1E 1B 27 
254fb     3D 4A 3B 1B 
254ff     16 06 EE D9 
25503     E0 EC 06 26 | 	byte	$1b, $1e, $1b, $27, $3d, $4a, $3b, $1b, $16, $06, $ee, $d9, $e0, $ec, $06, $26
25507     17 03 01 31 
2550b     38 48 3B 11 
2550f     18 13 11 12 
25513     11 F9 C8 F8 | 	byte	$17, $03, $01, $31, $38, $48, $3b, $11, $18, $13, $11, $12, $11, $f9, $c8, $f8
25517     F5 0E 18 37 
2551b     30 1E 18 16 
2551f     18 38 34 1E 
25523     0B FE E7 F6 | 	byte	$f5, $0e, $18, $37, $30, $1e, $18, $16, $18, $38, $34, $1e, $0b, $fe, $e7, $f6
25527     0D 16 1E 17 
2552b     EC F4 1B 23 
2552f     2B 26 33 15 
25533     16 0F 02 23 | 	byte	$0d, $16, $1e, $17, $ec, $f4, $1b, $23, $2b, $26, $33, $15, $16, $0f, $02, $23
25537     2F 12 E5 E5 
2553b     22 1F 30 2B 
2553f     11 CC DF 0A 
25543     23 30 1E 1E | 	byte	$2f, $12, $e5, $e5, $22, $1f, $30, $2b, $11, $cc, $df, $0a, $23, $30, $1e, $1e
25547     2B 0B 00 1A 
2554b     15 02 26 13 
2554f     FC CA EE 0A 
25553     23 28 FC 06 | 	byte	$2b, $0b, $00, $1a, $15, $02, $26, $13, $fc, $ca, $ee, $0a, $23, $28, $fc, $06
25557     22 24 12 28 
2555b     3D 31 16 E5 
2555f     02 01 E9 05 
25563     28 28 06 E9 | 	byte	$22, $24, $12, $28, $3d, $31, $16, $e5, $02, $01, $e9, $05, $28, $28, $06, $e9
25567     1E 06 00 17 
2556b     46 46 30 26 
2556f     09 F6 F6 05 
25573     09 01 FE 0B | 	byte	$1e, $06, $00, $17, $46, $46, $30, $26, $09, $f6, $f6, $05, $09, $01, $fe, $0b
25577     20 2D 23 22 
2557b     30 31 33 0A 
2557f     F0 11 FE EB 
25583     D7 0B 18 01 | 	byte	$20, $2d, $23, $22, $30, $31, $33, $0a, $f0, $11, $fe, $eb, $d7, $0b, $18, $01
25587     20 35 24 0A 
2558b     22 1E 2A 37 
2558f     34 2B 0B ED 
25593     E7 D2 E4 F6 | 	byte	$20, $35, $24, $0a, $22, $1e, $2a, $37, $34, $2b, $0b, $ed, $e7, $d2, $e4, $f6
25597     13 18 FD 16 
2559b     38 3D 4C 44 
2559f     39 2D 1E 15 
255a3     03 09 0B F4 | 	byte	$13, $18, $fd, $16, $38, $3d, $4c, $44, $39, $2d, $1e, $15, $03, $09, $0b, $f4
255a7     AF BF 0B 07 
255ab     2B 46 49 30 
255af     26 2D 2F 1A 
255b3     24 31 26 09 | 	byte	$af, $bf, $0b, $07, $2b, $46, $49, $30, $26, $2d, $2f, $1a, $24, $31, $26, $09
255b7     EE F1 E4 C6 
255bb     EC 13 26 06 
255bf     24 37 39 39 
255c3     34 2A 16 2B | 	byte	$ee, $f1, $e4, $c6, $ec, $13, $26, $06, $24, $37, $39, $39, $34, $2a, $16, $2b
255c7     1B F4 01 00 
255cb     EE CE F8 18 
255cf     F4 12 3B 42 
255d3     24 1E 38 28 | 	byte	$1b, $f4, $01, $00, $ee, $ce, $f8, $18, $f4, $12, $3b, $42, $24, $1e, $38, $28
255d7     03 FE 06 05 
255db     F4 01 F6 E4 
255df     02 17 22 01 
255e3     F8 20 26 30 | 	byte	$03, $fe, $06, $05, $f4, $01, $f6, $e4, $02, $17, $22, $01, $f8, $20, $26, $30
255e7     38 20 EE F8 
255eb     1B 20 11 16 
255ef     03 F6 02 09 
255f3     34 35 34 42 | 	byte	$38, $20, $ee, $f8, $1b, $20, $11, $16, $03, $f6, $02, $09, $34, $35, $34, $42
255f7     2A F6 03 02 
255fb     13 1E 13 13 
255ff     01 E7 D6 0E 
25603     0B 02 48 57 | 	byte	$2a, $f6, $03, $02, $13, $1e, $13, $13, $01, $e7, $d6, $0e, $0b, $02, $48, $57
25607     40 18 0B F2 
2560b     E7 03 09 11 
2560f     13 20 18 03 
25613     F0 0F 07 0B | 	byte	$40, $18, $0b, $f2, $e7, $03, $09, $11, $13, $20, $18, $03, $f0, $0f, $07, $0b
25617     39 4C 39 22 
2561b     11 0E 0E 0E 
2561f     18 09 FC 00 
25623     F4 ED F4 0F | 	byte	$39, $4c, $39, $22, $11, $0e, $0e, $0e, $18, $09, $fc, $00, $f4, $ed, $f4, $0f
25627     0F 05 2C 34 
2562b     35 2B 09 09 
2562f     0B 06 06 1A 
25633     11 09 24 3C | 	byte	$0f, $05, $2c, $34, $35, $2b, $09, $09, $0b, $06, $06, $1a, $11, $09, $24, $3c
25637     24 F2 F8 FA 
2563b     05 2C 38 3B 
2563f     16 FE 09 1C 
25643     11 13 2B 28 | 	byte	$24, $f2, $f8, $fa, $05, $2c, $38, $3b, $16, $fe, $09, $1c, $11, $13, $2b, $28
25647     17 11 06 FE 
2564b     E4 F5 0E 38 
2564f     26 0E 01 F5 
25653     E4 06 11 28 | 	byte	$17, $11, $06, $fe, $e4, $f5, $0e, $38, $26, $0e, $01, $f5, $e4, $06, $11, $28
25657     1F 27 15 1C 
2565b     2C 37 20 09 
2565f     CC E4 0E 07 
25663     1B 23 18 06 | 	byte	$1f, $27, $15, $1c, $2c, $37, $20, $09, $cc, $e4, $0e, $07, $1b, $23, $18, $06
25667     0B 1E 1C 1E 
2566b     2B 24 1E FA 
2566f     ED 09 03 ED 
25673     F6 33 28 23 | 	byte	$0b, $1e, $1c, $1e, $2b, $24, $1e, $fa, $ed, $09, $03, $ed, $f6, $33, $28, $23
25677     0A 0A F5 FA 
2567b     2F 27 13 13 
2567f     13 01 06 1F 
25683     2D 1E 0B F1 | 	byte	$0a, $0a, $f5, $fa, $2f, $27, $13, $13, $13, $01, $06, $1f, $2d, $1e, $0b, $f1
25687     01 09 1B 2C 
2568b     2B 12 12 37 
2568f     20 0E 1B 0A 
25693     06 FE 16 20 | 	byte	$01, $09, $1b, $2c, $2b, $12, $12, $37, $20, $0e, $1b, $0a, $06, $fe, $16, $20
25697     1B 1E 1E 0A 
2569b     EC 0F 2B 18 
2569f     0B 16 0B F8 
256a3     E9 F4 FE 13 | 	byte	$1b, $1e, $1e, $0a, $ec, $0f, $2b, $18, $0b, $16, $0b, $f8, $e9, $f4, $fe, $13
256a7     2B 30 26 1A 
256ab     16 30 2A 24 
256af     05 FC 01 02 
256b3     1B 33 3D 23 | 	byte	$2b, $30, $26, $1a, $16, $30, $2a, $24, $05, $fc, $01, $02, $1b, $33, $3d, $23
256b7     F9 01 1C 20 
256bb     1B 35 2D 18 
256bf     F2 F0 07 07 
256c3     09 F1 11 11 | 	byte	$f9, $01, $1c, $20, $1b, $35, $2d, $18, $f2, $f0, $07, $07, $09, $f1, $11, $11
256c7     13 11 11 0F 
256cb     13 18 30 35 
256cf     22 00 12 22 
256d3     2F 27 28 11 | 	byte	$13, $11, $11, $0f, $13, $18, $30, $35, $22, $00, $12, $22, $2f, $27, $28, $11
256d7     F9 E9 DF 15 
256db     1B 0D 0F 13 
256df     22 11 FC EB 
256e3     16 26 28 1B | 	byte	$f9, $e9, $df, $15, $1b, $0d, $0f, $13, $22, $11, $fc, $eb, $16, $26, $28, $1b
256e7     1E 16 FE 05 
256eb     01 0B 13 16 
256ef     22 17 15 0E 
256f3     11 17 16 F8 | 	byte	$1e, $16, $fe, $05, $01, $0b, $13, $16, $22, $17, $15, $0e, $11, $17, $16, $f8
256f7     FD 0B 1B 22 
256fb     11 18 20 0E 
256ff     0B 11 17 11 
25703     12 28 16 ED | 	byte	$fd, $0b, $1b, $22, $11, $18, $20, $0e, $0b, $11, $17, $11, $12, $28, $16, $ed
25707     FA 0B 0E 0D 
2570b     0B 13 16 1E 
2570f     1B 0B 1A 17 
25713     1C 27 2C 1E | 	byte	$fa, $0b, $0e, $0d, $0b, $13, $16, $1e, $1b, $0b, $1a, $17, $1c, $27, $2c, $1e
25717     0A 06 09 12 
2571b     11 0E 16 26 
2571f     20 03 FE 05 
25723     F9 02 03 17 | 	byte	$0a, $06, $09, $12, $11, $0e, $16, $26, $20, $03, $fe, $05, $f9, $02, $03, $17
25727     12 13 18 17 
2572b     11 0E 06 18 
2572f     0E 09 1A 30 
25733     20 24 22 18 | 	byte	$12, $13, $18, $17, $11, $0e, $06, $18, $0e, $09, $1a, $30, $20, $24, $22, $18
25737     12 13 0E 07 
2573b     0B F9 FE 03 
2573f     09 01 12 2D 
25743     2D 2C 2D 1C | 	byte	$12, $13, $0e, $07, $0b, $f9, $fe, $03, $09, $01, $12, $2d, $2d, $2c, $2d, $1c
25747     0D 00 15 23 
2574b     23 17 11 11 
2574f     13 FE F9 FD 
25753     E4 EB 17 20 | 	byte	$0d, $00, $15, $23, $23, $17, $11, $11, $13, $fe, $f9, $fd, $e4, $eb, $17, $20
25757     22 15 31 31 
2575b     26 09 03 33 
2575f     26 0E 09 FD 
25763     01 0E 01 0E | 	byte	$22, $15, $31, $31, $26, $09, $03, $33, $26, $0e, $09, $fd, $01, $0e, $01, $0e
25767     12 20 13 02 
2576b     11 01 03 20 
2576f     2B 26 13 F0 
25773     09 0F 15 26 | 	byte	$12, $20, $13, $02, $11, $01, $03, $20, $2b, $26, $13, $f0, $09, $0f, $15, $26
25777     2B 26 17 FD 
2577b     FD FD 06 1E 
2577f     16 0B 0E FA 
25783     F4 FC 09 1E | 	byte	$2b, $26, $17, $fd, $fd, $fd, $06, $1e, $16, $0b, $0e, $fa, $f4, $fc, $09, $1e
25787     15 02 FD 03 
2578b     03 1A 3D 3D 
2578f     2B 18 0B 0A 
25793     06 01 28 20 | 	byte	$15, $02, $fd, $03, $03, $1a, $3d, $3d, $2b, $18, $0b, $0a, $06, $01, $28, $20
25797     1B 20 28 2A 
2579b     0E F0 F5 17 
2579f     F1 03 23 22 
257a3     1E 16 06 09 | 	byte	$1b, $20, $28, $2a, $0e, $f0, $f5, $17, $f1, $03, $23, $22, $1e, $16, $06, $09
257a7     18 16 1F 26 
257ab     28 1A 1B 01 
257af     EE F1 FE 02 
257b3     03 11 1B F9 | 	byte	$18, $16, $1f, $26, $28, $1a, $1b, $01, $ee, $f1, $fe, $02, $03, $11, $1b, $f9
257b7     F4 26 48 3C 
257bb     3B 34 30 22 
257bf     17 F8 F5 1A 
257c3     11 13 23 09 | 	byte	$f4, $26, $48, $3c, $3b, $34, $30, $22, $17, $f8, $f5, $1a, $11, $13, $23, $09
257c7     F6 FC 00 09 
257cb     28 27 20 1A 
257cf     27 18 13 0D 
257d3     FC 11 1B 18 | 	byte	$f6, $fc, $00, $09, $28, $27, $20, $1a, $27, $18, $13, $0d, $fc, $11, $1b, $18
257d7     16 0E 23 1C 
257db     0E E5 F6 15 
257df     15 1A 1A 1C 
257e3     11 0B 01 06 | 	byte	$16, $0e, $23, $1c, $0e, $e5, $f6, $15, $15, $1a, $1a, $1c, $11, $0b, $01, $06
257e7     1E 1B 28 39 
257eb     2D 15 02 FE 
257ef     ED E7 0E 17 
257f3     1E 23 1E 2B | 	byte	$1e, $1b, $28, $39, $2d, $15, $02, $fe, $ed, $e7, $0e, $17, $1e, $23, $1e, $2b
257f7     2B 16 F9 15 
257fb     11 07 15 1E 
257ff     09 F8 06 0B 
25803     02 2B 2D 1C | 	byte	$2b, $16, $f9, $15, $11, $07, $15, $1e, $09, $f8, $06, $0b, $02, $2b, $2d, $1c
25807     0F 13 23 2C 
2580b     1E FC E7 FC 
2580f     07 12 0F F8 
25813     13 23 11 02 | 	byte	$0f, $13, $23, $2c, $1e, $fc, $e7, $fc, $07, $12, $0f, $f8, $13, $23, $11, $02
25817     F5 16 16 1A 
2581b     18 16 0E 09 
2581f     05 05 05 24 
25823     31 34 28 22 | 	byte	$f5, $16, $16, $1a, $18, $16, $0e, $09, $05, $05, $05, $24, $31, $34, $28, $22
25827     07 EE 0E 1A 
2582b     09 03 1B 1B 
2582f     18 18 1E 12 
25833     11 15 FD F8 | 	byte	$07, $ee, $0e, $1a, $09, $03, $1b, $1b, $18, $18, $1e, $12, $11, $15, $fd, $f8
25837     13 26 26 1F 
2583b     18 09 09 F9 
2583f     11 FE 07 1E 
25843     2D 24 24 1E | 	byte	$13, $26, $26, $1f, $18, $09, $09, $f9, $11, $fe, $07, $1e, $2d, $24, $24, $1e
25847     1A 20 16 FC 
2584b     EC 00 0E 1E 
2584f     18 18 0F 06 
25853     01 13 11 0B | 	byte	$1a, $20, $16, $fc, $ec, $00, $0e, $1e, $18, $18, $0f, $06, $01, $13, $11, $0b
25857     24 22 22 1C 
2585b     23 11 11 09 
2585f     0B FE EB 0B 
25863     20 12 1B 1F | 	byte	$24, $22, $22, $1c, $23, $11, $11, $09, $0b, $fe, $eb, $0b, $20, $12, $1b, $1f
25867     12 09 26 1C 
2586b     00 F8 1E 16 
2586f     18 1E 23 1F 
25873     1E 16 0B 01 | 	byte	$12, $09, $26, $1c, $00, $f8, $1e, $16, $18, $1e, $23, $1f, $1e, $16, $0b, $01
25877     F8 0B 1B 1C 
2587b     15 0A 06 EE 
2587f     09 1B 1E 12 
25883     0E 1A 24 1E | 	byte	$f8, $0b, $1b, $1c, $15, $0a, $06, $ee, $09, $1b, $1e, $12, $0e, $1a, $24, $1e
25887     23 1C 11 17 
2588b     0A 0A FE EE 
2588f     E7 06 13 17 
25893     23 23 09 0E | 	byte	$23, $1c, $11, $17, $0a, $0a, $fe, $ee, $e7, $06, $13, $17, $23, $23, $09, $0e
25897     18 18 1A 1F 
2589b     0B 06 16 FE 
2589f     06 11 0B 07 
258a3     1B 1B 13 0E | 	byte	$18, $18, $1a, $1f, $0b, $06, $16, $fe, $06, $11, $0b, $07, $1b, $1b, $13, $0e
258a7     07 F2 FD 2D 
258ab     2A 18 09 0D 
258af     1F 18 11 1A 
258b3     20 1E 1B FE | 	byte	$07, $f2, $fd, $2d, $2a, $18, $09, $0d, $1f, $18, $11, $1a, $20, $1e, $1b, $fe
258b7     06 0E 0E 1C 
258bb     1B 12 07 1E 
258bf     1F 23 1B 1C 
258c3     11 F6 F9 FC | 	byte	$06, $0e, $0e, $1c, $1b, $12, $07, $1e, $1f, $23, $1b, $1c, $11, $f6, $f9, $fc
258c7     18 23 2A 33 
258cb     26 17 09 13 
258cf     0B 11 16 FA 
258d3     F6 1B 26 26 | 	byte	$18, $23, $2a, $33, $26, $17, $09, $13, $0b, $11, $16, $fa, $f6, $1b, $26, $26
258d7     23 18 11 15 
258db     09 0A 0F 09 
258df     FD 13 FE 12 
258e3     1B 2B 23 1E | 	byte	$23, $18, $11, $15, $09, $0a, $0f, $09, $fd, $13, $fe, $12, $1b, $2b, $23, $1e
258e7     0E 13 11 12 
258eb     09 18 16 1B 
258ef     0D 07 05 15 
258f3     1B 16 0E 1E | 	byte	$0e, $13, $11, $12, $09, $18, $16, $1b, $0d, $07, $05, $15, $1b, $16, $0e, $1e
258f7     18 20 09 12 
258fb     11 12 12 0B 
258ff     0B 09 0F 27 
25903     2B 23 13 0E | 	byte	$18, $20, $09, $12, $11, $12, $12, $0b, $0b, $09, $0f, $27, $2b, $23, $13, $0e
25907     0B 18 23 17 
2590b     11 1A 0F 09 
2590f     09 0D FE 12 
25913     0D 05 F1 13 | 	byte	$0b, $18, $23, $17, $11, $1a, $0f, $09, $09, $0d, $fe, $12, $0d, $05, $f1, $13
25917     1E 26 28 1C 
2591b     0B 11 06 06 
2591f     02 0A 05 FA 
25923     09 1E 0B 1B | 	byte	$1e, $26, $28, $1c, $0b, $11, $06, $06, $02, $0a, $05, $fa, $09, $1e, $0b, $1b
25927     1B 11 0B 0D 
2592b     13 11 0E 26 
2592f     1A 07 17 15 
25933     13 09 0E 11 | 	byte	$1b, $11, $0b, $0d, $13, $11, $0e, $26, $1a, $07, $17, $15, $13, $09, $0e, $11
25937     0B 13 20 12 
2593b     13 1B 16 1E 
2593f     20 18 16 17 
25943     1E 1C 06 0D | 	byte	$0b, $13, $20, $12, $13, $1b, $16, $1e, $20, $18, $16, $17, $1e, $1c, $06, $0d
25947     0F 08 00 E7 
2594b     00 16 1A 22 
2594f     17 12 0E 17 
25953     12 11 19 10 | 	byte	$0f, $08, $00, $e7, $00, $16, $1a, $22, $17, $12, $0e, $17, $12, $11, $19, $10
25957     0E 08 1A 19 
2595b     15 17 0D 0D 
2595f     00 0D 17 19 
25963     1A 15 0C F5 | 	byte	$0e, $08, $1a, $19, $15, $17, $0d, $0d, $00, $0d, $17, $19, $1a, $15, $0c, $f5
25967     01 10 17 19 
2596b     17 1C 17 12 
2596f     12 15 1A 1C 
25973     12 11 0E 08 | 	byte	$01, $10, $17, $19, $17, $1c, $17, $12, $12, $15, $1a, $1c, $12, $11, $0e, $08
25977     09 14 0E 14 
2597b     10 0D 0D 10 
2597f     12 0D 0D 0E 
25983     0A 01 15 21 | 	byte	$09, $14, $0e, $14, $10, $0d, $0d, $10, $12, $0d, $0d, $0e, $0a, $01, $15, $21
25987     16 10 10 13 
2598b     0F 0D 11 14 
2598f     0A 0D 0F 15 
25993     11 10 15 19 | 	byte	$16, $10, $10, $13, $0f, $0d, $11, $14, $0a, $0d, $0f, $15, $11, $10, $15, $19
25997     18 16 16 10 
2599b     0C 06 0A 05 
2599f     FE 02 0F 0B 
259a3     08 08 02 0A | 	byte	$18, $16, $16, $10, $0c, $06, $0a, $05, $fe, $02, $0f, $0b, $08, $08, $02, $0a
259a7     0D 13 17 15 
259ab     10 11 13 0B 
259af     0B 13 18 20 
259b3     18 0C 00 0C | 	byte	$0d, $13, $17, $15, $10, $11, $13, $0b, $0b, $13, $18, $20, $18, $0c, $00, $0c
259b7     15 09 12 09 
259bb     06 13 15 18 
259bf     10 13 1A 0D 
259c3     F5 05 17 17 | 	byte	$15, $09, $12, $09, $06, $13, $15, $18, $10, $13, $1a, $0d, $f5, $05, $17, $17
259c7     12 0D 13 0C 
259cb     16 1D 18 09 
259cf     12 13 13 0D 
259d3     13 14 10 0E | 	byte	$12, $0d, $13, $0c, $16, $1d, $18, $09, $12, $13, $13, $0d, $13, $14, $10, $0e
259d7     0C 0E 0E 0E 
259db     1A 1A 14 0C 
259df     07 0C 0C 0B 
259e3     05 0C 09 0B | 	byte	$0c, $0e, $0e, $0e, $1a, $1a, $14, $0c, $07, $0c, $0c, $0b, $05, $0c, $09, $0b
259e7     14 0E 14 16 
259eb     19 13 12 0B 
259ef     08 13 1C 13 
259f3     19 10 10 0E | 	byte	$14, $0e, $14, $16, $19, $13, $12, $0b, $08, $13, $1c, $13, $19, $10, $10, $0e
259f7     0E 0E 0E 13 
259fb     12 0F 0B 16 
259ff     20 17 0E 0C 
25a03     02 04 0F 13 | 	byte	$0e, $0e, $0e, $13, $12, $0f, $0b, $16, $20, $17, $0e, $0c, $02, $04, $0f, $13
25a07     13 0B 12 11 
25a0b     0B 05 0F 15 
25a0f     15 0E 0C 12 
25a13     0F 11 0D 0F | 	byte	$13, $0b, $12, $11, $0b, $05, $0f, $15, $15, $0e, $0c, $12, $0f, $11, $0d, $0f
25a17     0D 04 08 15 
25a1b     11 15 13 11 
25a1f     0C 07 08 0C 
25a23     0C 04 07 0D | 	byte	$0d, $04, $08, $15, $11, $15, $13, $11, $0c, $07, $08, $0c, $0c, $04, $07, $0d
25a27     11 11 1B 12 
25a2b     13 0B 07 0F 
25a2f     08 07 05 0A 
25a33     0B 10 0A 0D | 	byte	$11, $11, $1b, $12, $13, $0b, $07, $0f, $08, $07, $05, $0a, $0b, $10, $0a, $0d
25a37     15 12 0D 10 
25a3b     0E 07 08 12 
25a3f     0D 07 05 03 
25a43     0D 0B 0D 15 | 	byte	$15, $12, $0d, $10, $0e, $07, $08, $12, $0d, $07, $05, $03, $0d, $0b, $0d, $15
25a47     15 12 14 10 
25a4b     0A 07 04 06 
25a4f     07 0B 11 16 
25a53     15 10 0A 07 | 	byte	$15, $12, $14, $10, $0a, $07, $04, $06, $07, $0b, $11, $16, $15, $10, $0a, $07
25a57     13 0E 0C 0F 
25a5b     10 10 0C 08 
25a5f     06 08 10 0E 
25a63     0D 0F 07 0B | 	byte	$13, $0e, $0c, $0f, $10, $10, $0c, $08, $06, $08, $10, $0e, $0d, $0f, $07, $0b
25a67     13 0E 11 10 
25a6b     0E 0C 0C 10 
25a6f     0D 08 06 08 
25a73     05 05 06 10 | 	byte	$13, $0e, $11, $10, $0e, $0c, $0c, $10, $0d, $08, $06, $08, $05, $05, $06, $10
25a77     16 19 11 0D 
25a7b     13 13 0D 0C 
25a7f     0D 0C 0A 07 
25a83     0D 0C 0F 0D | 	byte	$16, $19, $11, $0d, $13, $13, $0d, $0c, $0d, $0c, $0a, $07, $0d, $0c, $0f, $0d
25a87     10 0C 0D 0C 
25a8b     0F 0F 0D 07 
25a8f     07 07 0B 0A 
25a93     0D 0F 09 0E | 	byte	$10, $0c, $0d, $0c, $0f, $0f, $0d, $07, $07, $07, $0b, $0a, $0d, $0f, $09, $0e
25a97     0C 09 0C 06 
25a9b     0E 0C 07 06 
25a9f     10 0F 0D 11 
25aa3     14 0E 08 12 | 	byte	$0c, $09, $0c, $06, $0e, $0c, $07, $06, $10, $0f, $0d, $11, $14, $0e, $08, $12
25aa7     12 0A 06 04 
25aab     07 07 0C 0E 
25aaf     09 04 0B 0E 
25ab3     0C 0E 0A 12 | 	byte	$12, $0a, $06, $04, $07, $07, $0c, $0e, $09, $04, $0b, $0e, $0c, $0e, $0a, $12
25ab7     0F 0E 06 08 
25abb     09 04 00 04 
25abf     09 03 09 0D 
25ac3     0F 07 0B 11 | 	byte	$0f, $0e, $06, $08, $09, $04, $00, $04, $09, $03, $09, $0d, $0f, $07, $0b, $11
25ac7     14 0B 06 09 
25acb     0B 09 07 09 
25acf     05 07 11 10 
25ad3     11 0C 0C 0C | 	byte	$14, $0b, $06, $09, $0b, $09, $07, $09, $05, $07, $11, $10, $11, $0c, $0c, $0c
25ad7     0C 0E 0D 0E 
25adb     0D 08 06 05 
25adf     05 08 12 10 
25ae3     0F 0B 10 12 | 	byte	$0c, $0e, $0d, $0e, $0d, $08, $06, $05, $05, $08, $12, $10, $0f, $0b, $10, $12
25ae7     12 0D 0B 04 
25aeb     08 0B 06 09 
25aef     09 0D 0B 0B 
25af3     0A 0A 0D 10 | 	byte	$12, $0d, $0b, $04, $08, $0b, $06, $09, $09, $0d, $0b, $0b, $0a, $0a, $0d, $10
25af7     12 0D 0A 0A 
25afb     0C 0D 0A 06 
25aff     07 08 0D 0F 
25b03     0D 0D 10 13 | 	byte	$12, $0d, $0a, $0a, $0c, $0d, $0a, $06, $07, $08, $0d, $0f, $0d, $0d, $10, $13
25b07     10 0E 08 08 
25b0b     0A 0D 07 05 
25b0f     0A 0A 0F 0D 
25b13     0E 06 0B 08 | 	byte	$10, $0e, $08, $08, $0a, $0d, $07, $05, $0a, $0a, $0f, $0d, $0e, $06, $0b, $08
25b17     08 0D 08 08 
25b1b     0A 07 06 07 
25b1f     08 0C 11 0D 
25b23     09 0A 0F 0C | 	byte	$08, $0d, $08, $08, $0a, $07, $06, $07, $08, $0c, $11, $0d, $09, $0a, $0f, $0c
25b27     12 0D 07 08 
25b2b     07 0C 07 09 
25b2f     0A 0A 08 08 
25b33     09 06 0C 0E | 	byte	$12, $0d, $07, $08, $07, $0c, $07, $09, $0a, $0a, $08, $08, $09, $06, $0c, $0e
25b37     0C 0A 0A 0B 
25b3b     0C 08 03 04 
25b3f     07 08 09 08 
25b43     05 05 09 0C | 	byte	$0c, $0a, $0a, $0b, $0c, $08, $03, $04, $07, $08, $09, $08, $05, $05, $09, $0c
25b47     0C 09 0A 0A 
25b4b     05 04 04 04 
25b4f     03 07 09 05 
25b53     05 03 08 0B | 	byte	$0c, $09, $0a, $0a, $05, $04, $04, $04, $03, $07, $09, $05, $05, $03, $08, $0b
25b57     0B 0B 09 0A 
25b5b     09 03 07 07 
25b5f     09 05 0A 0B 
25b63     0B 0B 0C 0A | 	byte	$0b, $0b, $09, $0a, $09, $03, $07, $07, $09, $05, $0a, $0b, $0b, $0b, $0c, $0a
25b67     0A 08 08 0A 
25b6b     09 08 08 0B 
25b6f     09 04 07 05 
25b73     06 07 07 0A | 	byte	$0a, $08, $08, $0a, $09, $08, $08, $0b, $09, $04, $07, $05, $06, $07, $07, $0a
25b77     09 09 0B 06 
25b7b     06 06 06 09 
25b7f     08 09 0B 08 
25b83     08 0A 0C 0D | 	byte	$09, $09, $0b, $06, $06, $06, $06, $09, $08, $09, $0b, $08, $08, $0a, $0c, $0d
25b87     08 08 05 02 
25b8b     09 06 05 0A 
25b8f     09 08 08 08 
25b93     08 05 08 0A | 	byte	$08, $08, $05, $02, $09, $06, $05, $0a, $09, $08, $08, $08, $08, $05, $08, $0a
25b97     0C 09 08 04 
25b9b     06 05 07 08 
25b9f     05 06 06 08 
25ba3     0A 0C 0C 0F | 	byte	$0c, $09, $08, $04, $06, $05, $07, $08, $05, $06, $06, $08, $0a, $0c, $0c, $0f
25ba7     0A 09 06 04 
25bab     07 06 06 08 
25baf     04 08 08 06 
25bb3     06 06 0A 0B | 	byte	$0a, $09, $06, $04, $07, $06, $06, $08, $04, $08, $08, $06, $06, $06, $0a, $0b
25bb7     0B 07 06 05 
25bbb     09 09 06 04 
25bbf     04 09 07 07 
25bc3     05 09 0A 09 | 	byte	$0b, $07, $06, $05, $09, $09, $06, $04, $04, $09, $07, $07, $05, $09, $0a, $09
25bc7     08 09 05 05 
25bcb     05 04 03 04 
25bcf     02 05 07 02 
25bd3     00 06 0A 09 | 	byte	$08, $09, $05, $05, $05, $04, $03, $04, $02, $05, $07, $02, $00, $06, $0a, $09
25bd7     06 05 02 02 
25bdb     06 07 03 02 
25bdf     05 08 09 07 
25be3     08 0C 0B 07 | 	byte	$06, $05, $02, $02, $06, $07, $03, $02, $05, $08, $09, $07, $08, $0c, $0b, $07
25be7     07 07 07 03 
25beb     0C 08 06 04 
25bef     03 08 0A 06 
25bf3     07 0C 0A 09 | 	byte	$07, $07, $07, $03, $0c, $08, $06, $04, $03, $08, $0a, $06, $07, $0c, $0a, $09
25bf7     06 03 05 07 
25bfb     09 05 02 01 
25bff     06 0A 0A 07 
25c03     08 08 08 08 | 	byte	$06, $03, $05, $07, $09, $05, $02, $01, $06, $0a, $0a, $07, $08, $08, $08, $08
25c07     09 06 04 06 
25c0b     06 03 02 05 
25c0f     06 08 08 05 
25c13     06 07 07 08 | 	byte	$09, $06, $04, $06, $06, $03, $02, $05, $06, $08, $08, $05, $06, $07, $07, $08
25c17     06 03 03 07 
25c1b     07 07 02 03 
25c1f     06 07 09 09 
25c23     0B 0A 09 0A | 	byte	$06, $03, $03, $07, $07, $07, $02, $03, $06, $07, $09, $09, $0b, $0a, $09, $0a
25c27     03 03 04 08 
25c2b     05 05 04 00 
25c2f     03 07 0A 07 
25c33     05 07 07 07 | 	byte	$03, $03, $04, $08, $05, $05, $04, $00, $03, $07, $0a, $07, $05, $07, $07, $07
25c37     05 07 07 06 
25c3b     05 02 02 05 
25c3f     07 08 08 05 
25c43     05 05 07 07 | 	byte	$05, $07, $07, $06, $05, $02, $02, $05, $07, $08, $08, $05, $05, $05, $07, $07
25c47     04 04 05 04 
25c4b     02 04 05 05 
25c4f     03 04 07 02 
25c53     04 07 06 04 | 	byte	$04, $04, $05, $04, $02, $04, $05, $05, $03, $04, $07, $02, $04, $07, $06, $04
25c57     03 02 04 02 
25c5b     03 04 02 03 
25c5f     03 08 07 05 
25c63     06 06 04 03 | 	byte	$03, $02, $04, $02, $03, $04, $02, $03, $03, $08, $07, $05, $06, $06, $04, $03
25c67     03 04 05 02 
25c6b     04 03 02 02 
25c6f     05 08 05 04 
25c73     04 07 04 05 | 	byte	$03, $04, $05, $02, $04, $03, $02, $02, $05, $08, $05, $04, $04, $07, $04, $05
25c77     04 05 05 01 
25c7b     02 02 05 05 
25c7f     08 08 05 03 
25c83     06 06 05 05 | 	byte	$04, $05, $05, $01, $02, $02, $05, $05, $08, $08, $05, $03, $06, $06, $05, $05
25c87     04 04 02 00 
25c8b     02 02 02 03 
25c8f     05 05 04 03 
25c93     05 06 05 04 | 	byte	$04, $04, $02, $00, $02, $02, $02, $03, $05, $05, $04, $03, $05, $06, $05, $04
25c97     04 03 03 03 
25c9b     02 03 02 04 
25c9f     05 00 00 00 
25ca3     00 02 F9 DF | 	byte	$04, $03, $03, $03, $02, $03, $02, $04, $05, $00, $00, $00, $00, $02, $f9, $df
25ca7     0A F0 04 0B 
25cab     FE 1B F4 05 
25caf     FD 06 EE 00 
25cb3     06 F8 08 19 | 	byte	$0a, $f0, $04, $0b, $fe, $1b, $f4, $05, $fd, $06, $ee, $00, $06, $f8, $08, $19
25cb7     05 23 1F F0 
25cbb     E8 E6 F1 F9 
25cbf     FE 12 1E FA 
25cc3     1B F7 F4 FB | 	byte	$05, $23, $1f, $f0, $e8, $e6, $f1, $f9, $fe, $12, $1e, $fa, $1b, $f7, $f4, $fb
25cc7     01 06 CA E4 
25ccb     19 04 1E EC 
25ccf     2C 45 1D D9 
25cd3     C9 E6 20 40 | 	byte	$01, $06, $ca, $e4, $19, $04, $1e, $ec, $2c, $45, $1d, $d9, $c9, $e6, $20, $40
25cd7     19 BC C3 08 
25cdb     2C 38 EB BF 
25cdf     DE D9 02 1D 
25ce3     2B 80 32 22 | 	byte	$19, $bc, $c3, $08, $2c, $38, $eb, $bf, $de, $d9, $02, $1d, $2b, $80, $32, $22
25ce7     A7 85 B8 C2 
25ceb     08 1B 50 80 
25cef     80 3C D6 85 
25cf3     8C 8D 95 DE | 	byte	$a7, $85, $b8, $c2, $08, $1b, $50, $80, $80, $3c, $d6, $85, $8c, $8d, $95, $de
25cf7     D7 FC 11 1C 
25cfb     70 49 4C 64 
25cff     52 3A FD 1E 
25d03     06 E4 A4 84 | 	byte	$d7, $fc, $11, $1c, $70, $49, $4c, $64, $52, $3a, $fd, $1e, $06, $e4, $a4, $84
25d07     85 85 91 B4 
25d0b     E5 01 2A 19 
25d0f     3C 80 44 80 
25d13     63 E2 D9 B1 | 	byte	$85, $85, $91, $b4, $e5, $01, $2a, $19, $3c, $80, $44, $80, $63, $e2, $d9, $b1
25d17     2C F6 ED DE 
25d1b     CA FA B6 EA 
25d1f     DC D2 F2 E0 
25d23     FD 0C 0A 13 | 	byte	$2c, $f6, $ed, $de, $ca, $fa, $b6, $ea, $dc, $d2, $f2, $e0, $fd, $0c, $0a, $13
25d27     4C 55 EE F2 
25d2b     17 1F F0 1E 
25d2f     16 1A 07 EA 
25d33     0B FB C0 DA | 	byte	$4c, $55, $ee, $f2, $17, $1f, $f0, $1e, $16, $1a, $07, $ea, $0b, $fb, $c0, $da
25d37     E5 D0 BE D5 
25d3b     42 57 44 2F 
25d3f     4F 01 AA E4 
25d43     CE CA D2 BC | 	byte	$e5, $d0, $be, $d5, $42, $57, $44, $2f, $4f, $01, $aa, $e4, $ce, $ca, $d2, $bc
25d47     05 F9 00 23 
25d4b     5D 5D 8B 2B 
25d4f     07 F6 E7 E7 
25d53     95 D9 C6 E7 | 	byte	$05, $f9, $00, $23, $5d, $5d, $8b, $2b, $07, $f6, $e7, $e7, $95, $d9, $c6, $e7
25d57     E3 AE 16 F7 
25d5b     3D 08 22 3E 
25d5f     0A EB 2D 19 
25d63     54 01 D0 CD | 	byte	$e3, $ae, $16, $f7, $3d, $08, $22, $3e, $0a, $eb, $2d, $19, $54, $01, $d0, $cd
25d67     D5 B7 F7 FC 
25d6b     1E 0F 0C 13 
25d6f     0E 31 5F 2B 
25d73     BA F5 FF DA | 	byte	$d5, $b7, $f7, $fc, $1e, $0f, $0c, $13, $0e, $31, $5f, $2b, $ba, $f5, $ff, $da
25d77     96 C6 92 F7 
25d7b     DB F6 3E 1B 
25d7f     80 49 13 5E 
25d83     24 2D 97 A1 | 	byte	$96, $c6, $92, $f7, $db, $f6, $3e, $1b, $80, $49, $13, $5e, $24, $2d, $97, $a1
25d87     96 9C A5 D8 
25d8b     FA 05 1F D3 
25d8f     E0 FE 1D 06 
25d93     63 4B 15 5D | 	byte	$96, $9c, $a5, $d8, $fa, $05, $1f, $d3, $e0, $fe, $1d, $06, $63, $4b, $15, $5d
25d97     F1 40 0F EA 
25d9b     FC EC C6 D5 
25d9f     09 97 B9 B7 
25da3     01 E5 30 1D | 	byte	$f1, $40, $0f, $ea, $fc, $ec, $c6, $d5, $09, $97, $b9, $b7, $01, $e5, $30, $1d
25da7     80 F7 29 F8 
25dab     D4 A9 E4 4C 
25daf     E3 C3 02 F8 
25db3     37 09 F6 D1 | 	byte	$80, $f7, $29, $f8, $d4, $a9, $e4, $4c, $e3, $c3, $02, $f8, $37, $09, $f6, $d1
25db7     FC A9 01 04 
25dbb     C3 0E 35 66 
25dbf     07 21 E4 40 
25dc3     51 02 25 AE | 	byte	$fc, $a9, $01, $04, $c3, $0e, $35, $66, $07, $21, $e4, $40, $51, $02, $25, $ae
25dc7     B4 94 2F F8 
25dcb     EE 3E DB 3C 
25dcf     07 09 01 19 
25dd3     15 02 F8 E4 | 	byte	$b4, $94, $2f, $f8, $ee, $3e, $db, $3c, $07, $09, $01, $19, $15, $02, $f8, $e4
25dd7     ED 30 04 11 
25ddb     01 C2 CF E6 
25ddf     02 2F 0E C1 
25de3     1A 0C E2 1B | 	byte	$ed, $30, $04, $11, $01, $c2, $cf, $e6, $02, $2f, $0e, $c1, $1a, $0c, $e2, $1b
25de7     0E 14 24 1A 
25deb     52 14 31 BB 
25def     08 B5 9B D1 
25df3     B3 C6 E8 0F | 	byte	$0e, $14, $24, $1a, $52, $14, $31, $bb, $08, $b5, $9b, $d1, $b3, $c6, $e8, $0f
25df7     04 E5 31 3D 
25dfb     55 FF FB 30 
25dff     1F 05 26 32 
25e03     D6 20 E1 DE | 	byte	$04, $e5, $31, $3d, $55, $ff, $fb, $30, $1f, $05, $26, $32, $d6, $20, $e1, $de
25e07     B0 D5 0F FE 
25e0b     C3 B2 D7 2A 
25e0f     0C 0A 30 14 
25e13     39 26 48 0F | 	byte	$b0, $d5, $0f, $fe, $c3, $b2, $d7, $2a, $0c, $0a, $30, $14, $39, $26, $48, $0f
25e17     F9 75 E7 2A 
25e1b     DA 18 A9 83 
25e1f     97 C7 11 C8 
25e23     13 F8 37 33 | 	byte	$f9, $75, $e7, $2a, $da, $18, $a9, $83, $97, $c7, $11, $c8, $13, $f8, $37, $33
25e27     20 56 EC 44 
25e2b     35 4E 21 A1 
25e2f     67 94 F1 95 
25e33     90 B2 DC F6 | 	byte	$20, $56, $ec, $44, $35, $4e, $21, $a1, $67, $94, $f1, $95, $90, $b2, $dc, $f6
25e37     2A 01 01 3E 
25e3b     42 3E 05 3C 
25e3f     08 0F 1A DA 
25e43     CD FE CE 03 | 	byte	$2a, $01, $01, $3e, $42, $3e, $05, $3c, $08, $0f, $1a, $da, $cd, $fe, $ce, $03
25e47     CF A8 FA E5 
25e4b     2B 31 0D 34 
25e4f     DC 0A D4 22 
25e53     AC 0C 53 2B | 	byte	$cf, $a8, $fa, $e5, $2b, $31, $0d, $34, $dc, $0a, $d4, $22, $ac, $0c, $53, $2b
25e57     20 41 00 D1 
25e5b     D1 D7 C6 07 
25e5f     A0 0F 23 E1 
25e63     FE 31 BD 14 | 	byte	$20, $41, $00, $d1, $d1, $d7, $c6, $07, $a0, $0f, $23, $e1, $fe, $31, $bd, $14
25e67     32 CE 10 2F 
25e6b     A7 CC B8 B5 
25e6f     CA 10 F3 04 
25e73     05 38 37 30 | 	byte	$32, $ce, $10, $2f, $a7, $cc, $b8, $b5, $ca, $10, $f3, $04, $05, $38, $37, $30
25e77     56 D8 68 DC 
25e7b     27 38 EA BC 
25e7f     8C A4 EF DB 
25e83     F9 3E 32 5A | 	byte	$56, $d8, $68, $dc, $27, $38, $ea, $bc, $8c, $a4, $ef, $db, $f9, $3e, $32, $5a
25e87     D9 EC 3F 0E 
25e8b     D3 04 ED 1D 
25e8f     2A BF 0D FB 
25e93     02 13 36 22 | 	byte	$d9, $ec, $3f, $0e, $d3, $04, $ed, $1d, $2a, $bf, $0d, $fb, $02, $13, $36, $22
25e97     B7 2C F1 10 
25e9b     08 A7 46 0A 
25e9f     B8 D6 CE 12 
25ea3     C2 58 E5 06 | 	byte	$b7, $2c, $f1, $10, $08, $a7, $46, $0a, $b8, $d6, $ce, $12, $c2, $58, $e5, $06
25ea7     F2 17 33 61 
25eab     CD 21 6A CD 
25eaf     F8 DF DA FC 
25eb3     2A EF 0F AB | 	byte	$f2, $17, $33, $61, $cd, $21, $6a, $cd, $f8, $df, $da, $fc, $2a, $ef, $0f, $ab
25eb7     2A D0 51 A9 
25ebb     CD F6 CA 1B 
25ebf     12 F5 53 1F 
25ec3     6F 55 E7 BA | 	byte	$2a, $d0, $51, $a9, $cd, $f6, $ca, $1b, $12, $f5, $53, $1f, $6f, $55, $e7, $ba
25ec7     F6 18 EF 01 
25ecb     A3 01 CC 13 
25ecf     F3 B1 01 22 
25ed3     5D E5 D4 D7 | 	byte	$f6, $18, $ef, $01, $a3, $01, $cc, $13, $f3, $b1, $01, $22, $5d, $e5, $d4, $d7
25ed7     CB 25 37 30 
25edb     F4 1C 3C E3 
25edf     17 DD 0E 25 
25ee3     96 A7 0E 06 | 	byte	$cb, $25, $37, $30, $f4, $1c, $3c, $e3, $17, $dd, $0e, $25, $96, $a7, $0e, $06
25ee7     1E 2F F4 3D 
25eeb     CE DC 02 32 
25eef     BC 30 F0 01 
25ef3     F4 F8 16 2E | 	byte	$1e, $2f, $f4, $3d, $ce, $dc, $02, $32, $bc, $30, $f0, $01, $f4, $f8, $16, $2e
25ef7     1B DF 29 A6 
25efb     E8 D2 F4 E4 
25eff     E7 28 EB 27 
25f03     DC E3 01 68 | 	byte	$1b, $df, $29, $a6, $e8, $d2, $f4, $e4, $e7, $28, $eb, $27, $dc, $e3, $01, $68
25f07     FA C2 EF D4 
25f0b     42 08 C0 00 
25f0f     3B 10 13 FE 
25f13     DB DF 26 38 | 	byte	$fa, $c2, $ef, $d4, $42, $08, $c0, $00, $3b, $10, $13, $fe, $db, $df, $26, $38
25f17     06 B0 EC 07 
25f1b     47 E8 27 EE 
25f1f     22 01 F9 17 
25f23     92 E3 23 E5 | 	byte	$06, $b0, $ec, $07, $47, $e8, $27, $ee, $22, $01, $f9, $17, $92, $e3, $23, $e5
25f27     E8 DD 20 4C 
25f2b     4B 12 17 09 
25f2f     DF 11 ED E3 
25f33     DF 0C EE FF | 	byte	$e8, $dd, $20, $4c, $4b, $12, $17, $09, $df, $11, $ed, $e3, $df, $0c, $ee, $ff
25f37     0E CB 1F D2 
25f3b     E3 28 13 F0 
25f3f     FD 10 35 EE 
25f43     1F D1 04 1B | 	byte	$0e, $cb, $1f, $d2, $e3, $28, $13, $f0, $fd, $10, $35, $ee, $1f, $d1, $04, $1b
25f47     E2 47 F4 DE 
25f4b     0F EA C0 E8 
25f4f     1B E1 DE 11 
25f53     D7 1E FF FE | 	byte	$e2, $47, $f4, $de, $0f, $ea, $c0, $e8, $1b, $e1, $de, $11, $d7, $1e, $ff, $fe
25f57     0A 54 DE 25 
25f5b     08 CD 43 BB 
25f5f     00 FD 0A 07 
25f63     12 F0 0F FB | 	byte	$0a, $54, $de, $25, $08, $cd, $43, $bb, $00, $fd, $0a, $07, $12, $f0, $0f, $fb
25f67     F4 F5 FE FE 
25f6b     EE 0B 17 2A 
25f6f     20 EA 38 C1 
25f73     19 E8 07 06 | 	byte	$f4, $f5, $fe, $fe, $ee, $0b, $17, $2a, $20, $ea, $38, $c1, $19, $e8, $07, $06
25f77     07 16 0A FA 
25f7b     AF EF ED 1C 
25f7f     F7 22 24 E3 
25f83     80 F9 07 17 | 	byte	$07, $16, $0a, $fa, $af, $ef, $ed, $1c, $f7, $22, $24, $e3, $80, $f9, $07, $17
25f87     E8 C4 F1 E0 
25f8b     AF 0A D3 1B 
25f8f     29 E0 21 25 
25f93     08 F0 09 EA | 	byte	$e8, $c4, $f1, $e0, $af, $0a, $d3, $1b, $29, $e0, $21, $25, $08, $f0, $09, $ea
25f97     F0 41 F8 1A 
25f9b     DB 2C E4 11 
25f9f     D7 D4 F0 FE 
25fa3     BF 26 DC 08 | 	byte	$f0, $41, $f8, $1a, $db, $2c, $e4, $11, $d7, $d4, $f0, $fe, $bf, $26, $dc, $08
25fa7     EF 34 32 24 
25fab     12 FE 13 19 
25faf     00 11 00 AF 
25fb3     27 05 E3 C5 | 	byte	$ef, $34, $32, $24, $12, $fe, $13, $19, $00, $11, $00, $af, $27, $05, $e3, $c5
25fb7     F2 ED 32 E5 
25fbb     11 D5 2B 07 
25fbf     66 28 E9 F0 
25fc3     FE E5 11 F9 | 	byte	$f2, $ed, $32, $e5, $11, $d5, $2b, $07, $66, $28, $e9, $f0, $fe, $e5, $11, $f9
25fc7     12 DA 1D D7 
25fcb     1F 00 D5 15 
25fcf     34 F3 DE 41 
25fd3     B8 1A 17 DD | 	byte	$12, $da, $1d, $d7, $1f, $00, $d5, $15, $34, $f3, $de, $41, $b8, $1a, $17, $dd
25fd7     24 D0 0D EB 
25fdb     F7 0B BF 5A 
25fdf     DA FB 17 F4 
25fe3     EA 1E F4 07 | 	byte	$24, $d0, $0d, $eb, $f7, $0b, $bf, $5a, $da, $fb, $17, $f4, $ea, $1e, $f4, $07
25fe7     2B E5 F6 3D 
25feb     DB 2B BD 22 
25fef     DE FE E9 FD 
25ff3     18 D8 4B E8 | 	byte	$2b, $e5, $f6, $3d, $db, $2b, $bd, $22, $de, $fe, $e9, $fd, $18, $d8, $4b, $e8
25ff7     E4 2A 1C F0 
25ffb     4B EB 03 E8 
25fff     FD AB 2D F4 
26003     C3 FF 06 27 | 	byte	$e4, $2a, $1c, $f0, $4b, $eb, $03, $e8, $fd, $ab, $2d, $f4, $c3, $ff, $06, $27
26007     F3 CF 07 0D 
2600b     31 E1 26 F4 
2600f     69 C9 19 2E 
26013     A4 24 DB 28 | 	byte	$f3, $cf, $07, $0d, $31, $e1, $26, $f4, $69, $c9, $19, $2e, $a4, $24, $db, $28
26017     B9 CC EE 0E 
2601b     21 01 1E 05 
2601f     08 F6 19 08 
26023     E7 14 D9 1D | 	byte	$b9, $cc, $ee, $0e, $21, $01, $1e, $05, $08, $f6, $19, $08, $e7, $14, $d9, $1d
26027     D8 D6 0D F3 
2602b     10 08 25 C9 
2602f     0E 46 B4 51 
26033     DF E1 35 17 | 	byte	$d8, $d6, $0d, $f3, $10, $08, $25, $c9, $0e, $46, $b4, $51, $df, $e1, $35, $17
26037     DD 54 EE E0 
2603b     F2 D9 DC EC 
2603f     FF DF 11 0B 
26043     0B 1B 34 F1 | 	byte	$dd, $54, $ee, $e0, $f2, $d9, $dc, $ec, $ff, $df, $11, $0b, $0b, $1b, $34, $f1
26047     50 D6 11 05 
2604b     F2 07 FC FA 
2604f     24 F8 07 C3 
26053     E9 F8 BA 3F | 	byte	$50, $d6, $11, $05, $f2, $07, $fc, $fa, $24, $f8, $07, $c3, $e9, $f8, $ba, $3f
26057     F9 1A 12 0D 
2605b     0C F5 1E 35 
2605f     09 D4 13 C9 
26063     66 EC B1 56 | 	byte	$f9, $1a, $12, $0d, $0c, $f5, $1e, $35, $09, $d4, $13, $c9, $66, $ec, $b1, $56
26067     DA 03 01 D5 
2606b     CE FA 5D CA 
2606f     FD 37 F7 43 
26073     ED F6 05 2E | 	byte	$da, $03, $01, $d5, $ce, $fa, $5d, $ca, $fd, $37, $f7, $43, $ed, $f6, $05, $2e
26077     E0 3A E7 EE 
2607b     DA E4 F7 F5 
2607f     31 BF 10 26 
26083     E8 46 23 39 | 	byte	$e0, $3a, $e7, $ee, $da, $e4, $f7, $f5, $31, $bf, $10, $26, $e8, $46, $23, $39
26087     29 F3 E9 FA 
2608b     00 AB 07 03 
2608f     9E 08 0D D9 
26093     20 21 FD 17 | 	byte	$29, $f3, $e9, $fa, $00, $ab, $07, $03, $9e, $08, $0d, $d9, $20, $21, $fd, $17
26097     30 DE 5C FB 
2609b     B9 46 EE 1B 
2609f     E9 EF C8 0F 
260a3     26 BB 23 CB | 	byte	$30, $de, $5c, $fb, $b9, $46, $ee, $1b, $e9, $ef, $c8, $0f, $26, $bb, $23, $cb
260a7     F5 FE 15 04 
260ab     34 E2 04 0C 
260af     0C C9 37 EE 
260b3     EC 39 1F 11 | 	byte	$f5, $fe, $15, $04, $34, $e2, $04, $0c, $0c, $c9, $37, $ee, $ec, $39, $1f, $11
260b7     BC EF F0 FC 
260bb     B0 06 09 0D 
260bf     04 09 71 DF 
260c3     F0 3E 15 F3 | 	byte	$bc, $ef, $f0, $fc, $b0, $06, $09, $0d, $04, $09, $71, $df, $f0, $3e, $15, $f3
260c7     BF 24 E2 E1 
260cb     F7 D5 F9 04 
260cf     EE 11 67 D2 
260d3     DF 24 D8 4A | 	byte	$bf, $24, $e2, $e1, $f7, $d5, $f9, $04, $ee, $11, $67, $d2, $df, $24, $d8, $4a
260d7     F7 12 14 06 
260db     EC 3C EC C2 
260df     39 D8 FE F1 
260e3     BA 06 1D C7 | 	byte	$f7, $12, $14, $06, $ec, $3c, $ec, $c2, $39, $d8, $fe, $f1, $ba, $06, $1d, $c7
260e7     3F 1A 04 F4 
260eb     2F CE 25 0F 
260ef     14 CF 0C FA 
260f3     EA 14 AF 10 | 	byte	$3f, $1a, $04, $f4, $2f, $ce, $25, $0f, $14, $cf, $0c, $fa, $ea, $14, $af, $10
260f7     31 CF 21 F0 
260fb     E1 2C EF 11 
260ff     25 EF DD 3B 
26103     D1 E1 40 D5 | 	byte	$31, $cf, $21, $f0, $e1, $2c, $ef, $11, $25, $ef, $dd, $3b, $d1, $e1, $40, $d5
26107     E8 23 DE F1 
2610b     2B FC D5 49 
2610f     E1 F5 1F F2 
26113     FA 03 07 04 | 	byte	$e8, $23, $de, $f1, $2b, $fc, $d5, $49, $e1, $f5, $1f, $f2, $fa, $03, $07, $04
26117     1A 0E E1 4E 
2611b     C7 D3 47 DE 
2611f     12 FD EE F8 
26123     04 DC 02 F3 | 	byte	$1a, $0e, $e1, $4e, $c7, $d3, $47, $de, $12, $fd, $ee, $f8, $04, $dc, $02, $f3
26127     1C 45 12 DF 
2612b     E9 38 D8 CA 
2612f     4C C7 41 03 
26133     DF 20 F2 EE | 	byte	$1c, $45, $12, $df, $e9, $38, $d8, $ca, $4c, $c7, $41, $03, $df, $20, $f2, $ee
26137     E4 26 E5 CD 
2613b     2C FB 00 15 
2613f     38 CA E0 FB 
26143     EC 14 C6 3D | 	byte	$e4, $26, $e5, $cd, $2c, $fb, $00, $15, $38, $ca, $e0, $fb, $ec, $14, $c6, $3d
26147     0B FC FA D0 
2614b     FC FD 24 FE 
2614f     F1 2F C1 1E 
26153     DD 22 F6 F6 | 	byte	$0b, $fc, $fa, $d0, $fc, $fd, $24, $fe, $f1, $2f, $c1, $1e, $dd, $22, $f6, $f6
26157     39 DC 18 F4 
2615b     1E 0D E7 02 
2615f     D9 0C DA 01 
26163     22 F3 F1 07 | 	byte	$39, $dc, $18, $f4, $1e, $0d, $e7, $02, $d9, $0c, $da, $01, $22, $f3, $f1, $07
26167     14 D0 3C F2 
2616b     37 47 EE F9 
2616f     42 BA CF EA 
26173     21 06 E0 C5 | 	byte	$14, $d0, $3c, $f2, $37, $47, $ee, $f9, $42, $ba, $cf, $ea, $21, $06, $e0, $c5
26177     ED 4E DE 08 
2617b     09 F6 28 D9 
2617f     01 FF 1D D8 
26183     2F 2F B3 37 | 	byte	$ed, $4e, $de, $08, $09, $f6, $28, $d9, $01, $ff, $1d, $d8, $2f, $2f, $b3, $37
26187     F1 05 23 EE 
2618b     F7 F5 F5 E7 
2618f     16 F5 C4 09 
26193     2C 1F FF 20 | 	byte	$f1, $05, $23, $ee, $f7, $f5, $f5, $e7, $16, $f5, $c4, $09, $2c, $1f, $ff, $20
26197     05 2E 04 D0 
2619b     02 E5 D8 E6 
2619f     2C 00 CA 24 
261a3     18 12 FC FA | 	byte	$05, $2e, $04, $d0, $02, $e5, $d8, $e6, $2c, $00, $ca, $24, $18, $12, $fc, $fa
261a7     19 01 FD F5 
261ab     38 BF D3 33 
261af     FD 0B D0 FF 
261b3     21 E5 F8 E4 | 	byte	$19, $01, $fd, $f5, $38, $bf, $d3, $33, $fd, $0b, $d0, $ff, $21, $e5, $f8, $e4
261b7     25 D1 06 27 
261bb     23 24 E4 32 
261bf     F3 02 EA F2 
261c3     28 C6 FC 16 | 	byte	$25, $d1, $06, $27, $23, $24, $e4, $32, $f3, $02, $ea, $f2, $28, $c6, $fc, $16
261c7     FE EA D8 2F 
261cb     E6 3B E5 01 
261cf     58 CD 1A EB 
261d3     23 ED F5 30 | 	byte	$fe, $ea, $d8, $2f, $e6, $3b, $e5, $01, $58, $cd, $1a, $eb, $23, $ed, $f5, $30
261d7     E1 30 C8 34 
261db     E0 DA 03 E9 
261df     15 F1 32 13 
261e3     EB 0A E5 2A | 	byte	$e1, $30, $c8, $34, $e0, $da, $03, $e9, $15, $f1, $32, $13, $eb, $0a, $e5, $2a
261e7     FC FC ED C2 
261eb     16 22 C8 EB 
261ef     12 19 FD FD 
261f3     CE 29 E9 FF | 	byte	$fc, $fc, $ed, $c2, $16, $22, $c8, $eb, $12, $19, $fd, $fd, $ce, $29, $e9, $ff
261f7     13 D6 22 DB 
261fb     3A E4 05 10 
261ff     C5 12 E5 29 
26203     22 EB F7 F4 | 	byte	$13, $d6, $22, $db, $3a, $e4, $05, $10, $c5, $12, $e5, $29, $22, $eb, $f7, $f4
26207     57 A0 2D C7 
2620b     3A 27 CE 24 
2620f     F5 31 FD 09 
26213     FA FD 11 EE | 	byte	$57, $a0, $2d, $c7, $3a, $27, $ce, $24, $f5, $31, $fd, $09, $fa, $fd, $11, $ee
26217     12 E0 FB 2E 
2621b     13 FA EE 1F 
2621f     F0 D9 1D 09 
26223     01 F5 07 2E | 	byte	$12, $e0, $fb, $2e, $13, $fa, $ee, $1f, $f0, $d9, $1d, $09, $01, $f5, $07, $2e
26227     C0 FF 03 09 
2622b     D9 4D E2 33 
2622f     E6 DB 44 FF 
26233     E9 0F 3D CE | 	byte	$c0, $ff, $03, $09, $d9, $4d, $e2, $33, $e6, $db, $44, $ff, $e9, $0f, $3d, $ce
26237     C6 42 B3 19 
2623b     EA F0 14 00 
2623f     03 16 3E BB 
26243     58 DF D2 EC | 	byte	$c6, $42, $b3, $19, $ea, $f0, $14, $00, $03, $16, $3e, $bb, $58, $df, $d2, $ec
26247     18 15 03 D2 
2624b     06 F1 39 AA 
2624f     46 ED F2 1F 
26253     D8 01 44 E1 | 	byte	$18, $15, $03, $d2, $06, $f1, $39, $aa, $46, $ed, $f2, $1f, $d8, $01, $44, $e1
26257     38 EC 19 F4 
2625b     EF D7 EF 22 
2625f     0D 02 EC FC 
26263     0F 19 E5 2C | 	byte	$38, $ec, $19, $f4, $ef, $d7, $ef, $22, $0d, $02, $ec, $fc, $0f, $19, $e5, $2c
26267     0C 19 1F E1 
2626b     F6 15 F2 4B 
2626f     CB 17 F6 15 
26273     FF 0A 03 09 | 	byte	$0c, $19, $1f, $e1, $f6, $15, $f2, $4b, $cb, $17, $f6, $15, $ff, $0a, $03, $09
26277     AA 3E DB 14 
2627b     EF FF 17 01 
2627f     12 01 EE 21 
26283     0A 1C 12 BF | 	byte	$aa, $3e, $db, $14, $ef, $ff, $17, $01, $12, $01, $ee, $21, $0a, $1c, $12, $bf
26287     0B ED 05 13 
2628b     D6 E5 2C 01 
2628f     11 E3 1A E6 
26293     4B FC B6 23 | 	byte	$0b, $ed, $05, $13, $d6, $e5, $2c, $01, $11, $e3, $1a, $e6, $4b, $fc, $b6, $23
26297     F9 DD 3F B5 
2629b     32 F1 F3 0D 
2629f     FB FD 0C 07 
262a3     01 F4 FE 2F | 	byte	$f9, $dd, $3f, $b5, $32, $f1, $f3, $0d, $fb, $fd, $0c, $07, $01, $f4, $fe, $2f
262a7     DA 1C F1 0F 
262ab     0D AE 43 21 
262af     0A 15 C4 34 
262b3     E4 E5 07 25 | 	byte	$da, $1c, $f1, $0f, $0d, $ae, $43, $21, $0a, $15, $c4, $34, $e4, $e5, $07, $25
262b7     FE D5 0D 13 
262bb     F0 FF 03 10 
262bf     13 1F FD 2D 
262c3     DA 1C 15 E7 | 	byte	$fe, $d5, $0d, $13, $f0, $ff, $03, $10, $13, $1f, $fd, $2d, $da, $1c, $15, $e7
262c7     26 EE E9 36 
262cb     CE FC E0 22 
262cf     FF E8 2B DC 
262d3     36 F3 E3 69 | 	byte	$26, $ee, $e9, $36, $ce, $fc, $e0, $22, $ff, $e8, $2b, $dc, $36, $f3, $e3, $69
262d7     E7 EA 1A EE 
262db     ED 0F E4 F0 
262df     0E E7 30 CE 
262e3     0F E8 0E FD | 	byte	$e7, $ea, $1a, $ee, $ed, $0f, $e4, $f0, $0e, $e7, $30, $ce, $0f, $e8, $0e, $fd
262e7     EA 25 0B E6 
262eb     15 E1 16 DB 
262ef     FA 21 DF FB 
262f3     13 E0 3D E6 | 	byte	$ea, $25, $0b, $e6, $15, $e1, $16, $db, $fa, $21, $df, $fb, $13, $e0, $3d, $e6
262f7     09 3D D9 0F 
262fb     11 12 E6 E0 
262ff     40 F3 0D 15 
26303     B0 63 BC 15 | 	byte	$09, $3d, $d9, $0f, $11, $12, $e6, $e0, $40, $f3, $0d, $15, $b0, $63, $bc, $15
26307     F9 ED 12 F9 
2630b     0E 09 DF 12 
2630f     EA 27 E4 05 
26313     0A 31 BF 4C | 	byte	$f9, $ed, $12, $f9, $0e, $09, $df, $12, $ea, $27, $e4, $05, $0a, $31, $bf, $4c
26317     13 FE 1D B5 
2631b     3F E6 FD FA 
2631f     F7 07 EB 1A 
26323     21 BF 65 DB | 	byte	$13, $fe, $1d, $b5, $3f, $e6, $fd, $fa, $f7, $07, $eb, $1a, $21, $bf, $65, $db
26327     F1 0D FC E1 
2632b     2A E7 F8 22 
2632f     15 C8 29 FB 
26333     D4 05 29 B9 | 	byte	$f1, $0d, $fc, $e1, $2a, $e7, $f8, $22, $15, $c8, $29, $fb, $d4, $05, $29, $b9
26337     48 D4 E0 3C 
2633b     A7 18 FB FD 
2633f     FC F1 26 0E 
26343     04 14 DB 2D | 	byte	$48, $d4, $e0, $3c, $a7, $18, $fb, $fd, $fc, $f1, $26, $0e, $04, $14, $db, $2d
26347     C8 00 24 05 
2634b     D0 2C D0 43 
2634f     E1 D6 4B F9 
26353     D9 33 FC 0F | 	byte	$c8, $00, $24, $05, $d0, $2c, $d0, $43, $e1, $d6, $4b, $f9, $d9, $33, $fc, $0f
26357     DD 26 0D EE 
2635b     25 F3 0C F5 
2635f     CF 37 00 EC 
26363     21 CC 30 F1 | 	byte	$dd, $26, $0d, $ee, $25, $f3, $0c, $f5, $cf, $37, $00, $ec, $21, $cc, $30, $f1
26367     D2 19 1D 0A 
2636b     29 CD 2A F5 
2636f     27 B6 22 1B 
26373     CE 29 F6 D4 | 	byte	$d2, $19, $1d, $0a, $29, $cd, $2a, $f5, $27, $b6, $22, $1b, $ce, $29, $f6, $d4
26377     41 DB 0F 0D 
2637b     C4 F6 1F EA 
2637f     FA 16 2E 18 
26383     D9 05 01 01 | 	byte	$41, $db, $0f, $0d, $c4, $f6, $1f, $ea, $fa, $16, $2e, $18, $d9, $05, $01, $01
26387     EE E1 2A 0F 
2638b     E3 48 AC 6E 
2638f     B6 0C FB E5 
26393     20 F3 ED 29 | 	byte	$ee, $e1, $2a, $0f, $e3, $48, $ac, $6e, $b6, $0c, $fb, $e5, $20, $f3, $ed, $29
26397     FE 14 DF 2B 
2639b     E6 F0 26 E8 
2639f     F4 1C 07 15 
263a3     1F B9 12 FD | 	byte	$fe, $14, $df, $2b, $e6, $f0, $26, $e8, $f4, $1c, $07, $15, $1f, $b9, $12, $fd
263a7     E2 09 04 EA 
263ab     40 EE 03 FA 
263af     3D E7 00 13 
263b3     E9 EC 3C C9 | 	byte	$e2, $09, $04, $ea, $40, $ee, $03, $fa, $3d, $e7, $00, $13, $e9, $ec, $3c, $c9
263b7     3E E2 FD 19 
263bb     F1 E1 0D FC 
263bf     13 E6 30 F7 
263c3     FE 0B CD 3C | 	byte	$3e, $e2, $fd, $19, $f1, $e1, $0d, $fc, $13, $e6, $30, $f7, $fe, $0b, $cd, $3c
263c7     F7 D8 1C 08 
263cb     CD 36 EF EE 
263cf     02 F9 DE F8 
263d3     F6 16 EE 41 | 	byte	$f7, $d8, $1c, $08, $cd, $36, $ef, $ee, $02, $f9, $de, $f8, $f6, $16, $ee, $41
263d7     C4 3F 0C CD 
263db     01 09 D5 59 
263df     BF 2A EE FE 
263e3     1A C8 2B DD | 	byte	$c4, $3f, $0c, $cd, $01, $09, $d5, $59, $bf, $2a, $ee, $fe, $1a, $c8, $2b, $dd
263e7     23 F4 D5 EB 
263eb     18 E9 1F E8 
263ef     08 19 FE F1 
263f3     28 E8 6A CC | 	byte	$23, $f4, $d5, $eb, $18, $e9, $1f, $e8, $08, $19, $fe, $f1, $28, $e8, $6a, $cc
263f7     00 09 EF 10 
263fb     C9 FB 17 CF 
263ff     39 E2 2A 04 
26403     F7 E8 EB 2A | 	byte	$00, $09, $ef, $10, $c9, $fb, $17, $cf, $39, $e2, $2a, $04, $f7, $e8, $eb, $2a
26407     03 D8 39 EA 
2640b     F7 51 F3 EF 
2640f     16 E2 F9 06 
26413     BE 1B 12 18 | 	byte	$03, $d8, $39, $ea, $f7, $51, $f3, $ef, $16, $e2, $f9, $06, $be, $1b, $12, $18
26417     D1 23 06 E1 
2641b     0E 05 DD 48 
2641f     DD 05 2D DC 
26423     0F 1B D1 20 | 	byte	$d1, $23, $06, $e1, $0e, $05, $dd, $48, $dd, $05, $2d, $dc, $0f, $1b, $d1, $20
26427     DB 26 07 09 
2642b     24 CE 1A F0 
2642f     FE 00 D8 28 
26433     07 FE 1C DB | 	byte	$db, $26, $07, $09, $24, $ce, $1a, $f0, $fe, $00, $d8, $28, $07, $fe, $1c, $db
26437     02 04 15 FB 
2643b     07 D6 E9 F9 
2643f     0F 0C EA 16 
26443     22 FE 38 B4 | 	byte	$02, $04, $15, $fb, $07, $d6, $e9, $f9, $0f, $0c, $ea, $16, $22, $fe, $38, $b4
26447     4A C7 0E 22 
2644b     C9 36 D6 07 
2644f     1F CF 1E E4 
26453     0B FA FD 16 | 	byte	$4a, $c7, $0e, $22, $c9, $36, $d6, $07, $1f, $cf, $1e, $e4, $0b, $fa, $fd, $16
26457     E2 02 FA 15 
2645b     F9 FA EB 10 
2645f     2F EC 0C F4 
26463     13 04 14 16 | 	byte	$e2, $02, $fa, $15, $f9, $fa, $eb, $10, $2f, $ec, $0c, $f4, $13, $04, $14, $16
26467     D0 2B D4 FB 
2646b     08 0D FC 1D 
2646f     E5 00 1C E1 
26473     E3 05 05 F4 | 	byte	$d0, $2b, $d4, $fb, $08, $0d, $fc, $1d, $e5, $00, $1c, $e1, $e3, $05, $05, $f4
26477     04 FE E6 58 
2647b     DD 16 06 CD 
2647f     13 FE 07 F1 
26483     02 1B 0B E3 | 	byte	$04, $fe, $e6, $58, $dd, $16, $06, $cd, $13, $fe, $07, $f1, $02, $1b, $0b, $e3
26487     0F EF 0B E9 
2648b     03 13 02 11 
2648f     DE 1D 0F FB 
26493     0B FC F5 DE | 	byte	$0f, $ef, $0b, $e9, $03, $13, $02, $11, $de, $1d, $0f, $fb, $0b, $fc, $f5, $de
26497     3D D1 15 F9 
2649b     1C 19 0F E6 
2649f     EC 4F BE 12 
264a3     03 ED 1B 02 | 	byte	$3d, $d1, $15, $f9, $1c, $19, $0f, $e6, $ec, $4f, $be, $12, $03, $ed, $1b, $02
264a7     FF 09 F7 EC 
264ab     16 17 01 0A 
264af     ED 1E 03 1B 
264b3     F5 05 05 DC | 	byte	$ff, $09, $f7, $ec, $16, $17, $01, $0a, $ed, $1e, $03, $1b, $f5, $05, $05, $dc
264b7     20 15 D4 19 
264bb     D5 21 0D CC 
264bf     05 FF FA FC 
264c3     EC 21 05 27 | 	byte	$20, $15, $d4, $19, $d5, $21, $0d, $cc, $05, $ff, $fa, $fc, $ec, $21, $05, $27
264c7     F1 01 FA DA 
264cb     19 F7 F8 06 
264cf     D9 05 1A D7 
264d3     27 13 D0 F6 | 	byte	$f1, $01, $fa, $da, $19, $f7, $f8, $06, $d9, $05, $1a, $d7, $27, $13, $d0, $f6
264d7     37 F0 0D F1 
264db     05 FD 0E FB 
264df     E4 33 04 E8 
264e3     3C C0 1F 0D | 	byte	$37, $f0, $0d, $f1, $05, $fd, $0e, $fb, $e4, $33, $04, $e8, $3c, $c0, $1f, $0d
264e7     D8 1B F1 F2 
264eb     F6 E0 16 FA 
264ef     0A E6 E7 32 
264f3     EC 24 F2 00 | 	byte	$d8, $1b, $f1, $f2, $f6, $e0, $16, $fa, $0a, $e6, $e7, $32, $ec, $24, $f2, $00
264f7     0B 2F E8 02 
264fb     DF 0D F4 08 
264ff     09 FB 08 16 
26503     EB 31 FB F1 | 	byte	$0b, $2f, $e8, $02, $df, $0d, $f4, $08, $09, $fb, $08, $16, $eb, $31, $fb, $f1
26507     FA FD EC 08 
2650b     05 00 F2 38 
2650f     F9 E2 14 DF 
26513     27 E4 F7 08 | 	byte	$fa, $fd, $ec, $08, $05, $00, $f2, $38, $f9, $e2, $14, $df, $27, $e4, $f7, $08
26517     0A FA 24 DB 
2651b     25 EA 20 17 
2651f     E1 EB 08 F3 
26523     02 16 13 F3 | 	byte	$0a, $fa, $24, $db, $25, $ea, $20, $17, $e1, $eb, $08, $f3, $02, $16, $13, $f3
26527     FF 05 03 F9 
2652b     04 DE 3F ED 
2652f     E7 3E EC 11 
26533     EF 0D 20 E0 | 	byte	$ff, $05, $03, $f9, $04, $de, $3f, $ed, $e7, $3e, $ec, $11, $ef, $0d, $20, $e0
26537     F4 18 03 F0 
2653b     D0 2C F0 14 
2653f     F7 15 FE EB 
26543     DD 53 E3 FB | 	byte	$f4, $18, $03, $f0, $d0, $2c, $f0, $14, $f7, $15, $fe, $eb, $dd, $53, $e3, $fb
26547     16 05 F2 0A 
2654b     E4 4B E8 DC 
2654f     20 02 FC D0 
26553     34 FE F4 FE | 	byte	$16, $05, $f2, $0a, $e4, $4b, $e8, $dc, $20, $02, $fc, $d0, $34, $fe, $f4, $fe
26557     E5 23 05 E3 
2655b     34 EE EC 18 
2655f     23 EB 06 DB 
26563     06 F1 EC FF | 	byte	$e5, $23, $05, $e3, $34, $ee, $ec, $18, $23, $eb, $06, $db, $06, $f1, $ec, $ff
26567     3A ED F9 1B 
2656b     21 D5 06 E5 
2656f     0D 29 E0 04 
26573     1C EF 10 0A | 	byte	$3a, $ed, $f9, $1b, $21, $d5, $06, $e5, $0d, $29, $e0, $04, $1c, $ef, $10, $0a
26577     CE 20 F6 13 
2657b     F2 F5 14 13 
2657f     07 F6 06 1A 
26583     C8 1E EB 10 | 	byte	$ce, $20, $f6, $13, $f2, $f5, $14, $13, $07, $f6, $06, $1a, $c8, $1e, $eb, $10
26587     F4 D6 02 16 
2658b     FF 07 05 E0 
2658f     06 30 F5 FB 
26593     EE FB 34 F4 | 	byte	$f4, $d6, $02, $16, $ff, $07, $05, $e0, $06, $30, $f5, $fb, $ee, $fb, $34, $f4
26597     FE ED 1D E7 
2659b     F4 25 00 F8 
2659f     F8 0F 34 DE 
265a3     FB FF 1D FB | 	byte	$fe, $ed, $1d, $e7, $f4, $25, $00, $f8, $f8, $0f, $34, $de, $fb, $ff, $1d, $fb
265a7     03 08 E8 0D 
265ab     F3 24 0A F2 
265af     F3 EC 20 F2 
265b3     F5 11 FC 03 | 	byte	$03, $08, $e8, $0d, $f3, $24, $0a, $f2, $f3, $ec, $20, $f2, $f5, $11, $fc, $03
265b7     0F 14 F0 E8 
265bb     FD 03 12 EA 
265bf     F9 31 F7 F8 
265c3     12 F6 FB FC | 	byte	$0f, $14, $f0, $e8, $fd, $03, $12, $ea, $f9, $31, $f7, $f8, $12, $f6, $fb, $fc
265c7     0B 13 EE EB 
265cb     09 21 01 FC 
265cf     0A 12 00 FD 
265d3     24 D8 02 F1 | 	byte	$0b, $13, $ee, $eb, $09, $21, $01, $fc, $0a, $12, $00, $fd, $24, $d8, $02, $f1
265d7     11 00 E3 01 
265db     FD 02 E6 FF 
265df     17 E2 0B 2A 
265e3     15 F1 EA F3 | 	byte	$11, $00, $e3, $01, $fd, $02, $e6, $ff, $17, $e2, $0b, $2a, $15, $f1, $ea, $f3
265e7     1A 0C CB EE 
265eb     2C EE 0A F7 
265ef     F7 15 F8 14 
265f3     FB 23 EE FB | 	byte	$1a, $0c, $cb, $ee, $2c, $ee, $0a, $f7, $f7, $15, $f8, $14, $fb, $23, $ee, $fb
265f7     25 EA F0 1D 
265fb     E6 02 10 F6 
265ff     08 EA E3 1B 
26603     39 E8 E2 12 | 	byte	$25, $ea, $f0, $1d, $e6, $02, $10, $f6, $08, $ea, $e3, $1b, $39, $e8, $e2, $12
26607     04 1C E0 EE 
2660b     05 18 04 D0 
2660f     07 EF 10 EC 
26613     03 1F EA 08 | 	byte	$04, $1c, $e0, $ee, $05, $18, $04, $d0, $07, $ef, $10, $ec, $03, $1f, $ea, $08
26617     E6 1B 1A E8 
2661b     39 ED FF 1E 
2661f     F9 F1 E2 07 
26623     1A E2 FE C5 | 	byte	$e6, $1b, $1a, $e8, $39, $ed, $ff, $1e, $f9, $f1, $e2, $07, $1a, $e2, $fe, $c5
26627     27 1B D6 17 
2662b     06 0A 00 32 
2662f     E2 16 FF F3 
26633     13 E0 0C F1 | 	byte	$27, $1b, $d6, $17, $06, $0a, $00, $32, $e2, $16, $ff, $f3, $13, $e0, $0c, $f1
26637     0F 01 F7 2C 
2663b     D1 08 01 F8 
2663f     0E E4 1E FE 
26643     03 34 E9 03 | 	byte	$0f, $01, $f7, $2c, $d1, $08, $01, $f8, $0e, $e4, $1e, $fe, $03, $34, $e9, $03
26647     F0 F8 03 09 
2664b     CB 16 05 F7 
2664f     21 F6 18 F0 
26653     11 00 FC 1C | 	byte	$f0, $f8, $03, $09, $cb, $16, $05, $f7, $21, $f6, $18, $f0, $11, $00, $fc, $1c
26657     F8 F3 23 D7 
2665b     02 08 E7 14 
2665f     FE 0B F4 E4 
26663     09 0E 14 FA | 	byte	$f8, $f3, $23, $d7, $02, $08, $e7, $14, $fe, $0b, $f4, $e4, $09, $0e, $14, $fa
26667     FB 18 FB 04 
2666b     03 F1 05 1C 
2666f     EC F1 FF FA 
26673     F4 F7 0A ED | 	byte	$fb, $18, $fb, $04, $03, $f1, $05, $1c, $ec, $f1, $ff, $fa, $f4, $f7, $0a, $ed
26677     0B E4 F1 27 
2667b     19 DC 1B 03 
2667f     EF 2A DD 0F 
26683     F3 11 05 FA | 	byte	$0b, $e4, $f1, $27, $19, $dc, $1b, $03, $ef, $2a, $dd, $0f, $f3, $11, $05, $fa
26687     12 C2 2D 0C 
2668b     D7 26 F0 FA 
2668f     F6 F5 11 1E 
26693     13 D3 2C 02 | 	byte	$12, $c2, $2d, $0c, $d7, $26, $f0, $fa, $f6, $f5, $11, $1e, $13, $d3, $2c, $02
26697     EF 1E EA 03 
2669b     04 F4 D6 08 
2669f     19 DA 40 E3 
266a3     F0 1C DB 1C | 	byte	$ef, $1e, $ea, $03, $04, $f4, $d6, $08, $19, $da, $40, $e3, $f0, $1c, $db, $1c
266a7     F2 FE F9 07 
266ab     22 E1 07 0E 
266af     F1 0F D9 2C 
266b3     F9 F0 10 F9 | 	byte	$f2, $fe, $f9, $07, $22, $e1, $07, $0e, $f1, $0f, $d9, $2c, $f9, $f0, $10, $f9
266b7     0C ED 04 09 
266bb     FC F0 06 0A 
266bf     FA FD 0D 21 
266c3     03 DB 1F FD | 	byte	$0c, $ed, $04, $09, $fc, $f0, $06, $0a, $fa, $fd, $0d, $21, $03, $db, $1f, $fd
266c7     F0 EE 03 16 
266cb     F0 0A 08 03 
266cf     11 F2 1A 05 
266d3     E2 1F 00 05 | 	byte	$f0, $ee, $03, $16, $f0, $0a, $08, $03, $11, $f2, $1a, $05, $e2, $1f, $00, $05
266d7     FD 12 10 E5 
266db     10 F9 0A FC 
266df     F8 0C 04 02 
266e3     EC 07 0F FF | 	byte	$fd, $12, $10, $e5, $10, $f9, $0a, $fc, $f8, $0c, $04, $02, $ec, $07, $0f, $ff
266e7     1B 12 F1 E9 
266eb     09 F9 D4 31 
266ef     E5 09 E6 F3 
266f3     2A EC E8 F8 | 	byte	$1b, $12, $f1, $e9, $09, $f9, $d4, $31, $e5, $09, $e6, $f3, $2a, $ec, $e8, $f8
266f7     2B 20 DA FB 
266fb     E2 13 0D F8 
266ff     0A F9 F1 0F 
26703     0B E9 0D 13 | 	byte	$2b, $20, $da, $fb, $e2, $13, $0d, $f8, $0a, $f9, $f1, $0f, $0b, $e9, $0d, $13
26707     F7 FF FC FE 
2670b     0D DE 12 14 
2670f     07 E5 00 1F 
26713     FF 06 F9 E8 | 	byte	$f7, $ff, $fc, $fe, $0d, $de, $12, $14, $07, $e5, $00, $1f, $ff, $06, $f9, $e8
26717     1B E7 20 E0 
2671b     E9 0C F6 11 
2671f     EE 05 0C F4 
26723     15 FD 10 F0 | 	byte	$1b, $e7, $20, $e0, $e9, $0c, $f6, $11, $ee, $05, $0c, $f4, $15, $fd, $10, $f0
26727     F1 32 FC F9 
2672b     0D EA 12 FF 
2672f     DE 0F 07 FD 
26733     0A 17 DF 14 | 	byte	$f1, $32, $fc, $f9, $0d, $ea, $12, $ff, $de, $0f, $07, $fd, $0a, $17, $df, $14
26737     FC F3 FE FA 
2673b     F7 FC 0E E6 
2673f     0D 38 CA 1D 
26743     F8 00 02 FB | 	byte	$fc, $f3, $fe, $fa, $f7, $fc, $0e, $e6, $0d, $38, $ca, $1d, $f8, $00, $02, $fb
26747     17 FF 1F F0 
2674b     FB 1E E0 FE 
2674f     FA E1 10 F8 
26753     0E F9 FD 20 | 	byte	$17, $ff, $1f, $f0, $fb, $1e, $e0, $fe, $fa, $e1, $10, $f8, $0e, $f9, $fd, $20
26757     FA 00 FF F0 
2675b     18 E1 09 FF 
2675f     1A FC 19 EA 
26763     F8 FD 11 F8 | 	byte	$fa, $00, $ff, $f0, $18, $e1, $09, $ff, $1a, $fc, $19, $ea, $f8, $fd, $11, $f8
26767     F2 0D E5 F9 
2676b     0D F8 FA 0E 
2676f     E2 3B F5 FD 
26773     FE 0C 08 CF | 	byte	$f2, $0d, $e5, $f9, $0d, $f8, $fa, $0e, $e2, $3b, $f5, $fd, $fe, $0c, $08, $cf
26777     1C E6 E1 21 
2677b     EB 0E 31 C9 
2677f     05 2B F8 F8 
26783     0E F5 F4 06 | 	byte	$1c, $e6, $e1, $21, $eb, $0e, $31, $c9, $05, $2b, $f8, $f8, $0e, $f5, $f4, $06
26787     FA F5 04 08 
2678b     E9 23 E8 D0 
2678f     2F 06 06 05 
26793     F0 01 EF F2 | 	byte	$fa, $f5, $04, $08, $e9, $23, $e8, $d0, $2f, $06, $06, $05, $f0, $01, $ef, $f2
26797     FB 0D 1D D1 
2679b     1E EE ED 20 
2679f     E9 F9 10 FF 
267a3     02 01 FD 07 | 	byte	$fb, $0d, $1d, $d1, $1e, $ee, $ed, $20, $e9, $f9, $10, $ff, $02, $01, $fd, $07
267a7     18 0F EE 03 
267ab     F7 0A FC 0D 
267af     DE 1C 09 E7 
267b3     10 FC 2C E1 | 	byte	$18, $0f, $ee, $03, $f7, $0a, $fc, $0d, $de, $1c, $09, $e7, $10, $fc, $2c, $e1
267b7     F9 10 F3 0D 
267bb     E6 F4 19 E8 
267bf     10 16 F0 F6 
267c3     F6 19 F7 F8 | 	byte	$f9, $10, $f3, $0d, $e6, $f4, $19, $e8, $10, $16, $f0, $f6, $f6, $19, $f7, $f8
267c7     03 F6 23 EA 
267cb     0E FA 0D F2 
267cf     1B F8 EE 0E 
267d3     E9 04 EB EE | 	byte	$03, $f6, $23, $ea, $0e, $fa, $0d, $f2, $1b, $f8, $ee, $0e, $e9, $04, $eb, $ee
267d7     1B 0A 05 F4 
267db     06 07 E2 0C 
267df     F4 02 11 EF 
267e3     19 2B DB 12 | 	byte	$1b, $0a, $05, $f4, $06, $07, $e2, $0c, $f4, $02, $11, $ef, $19, $2b, $db, $12
267e7     13 FB F0 E3 
267eb     F2 F0 FB 06 
267ef     19 FE 02 27 
267f3     08 F5 FA 02 | 	byte	$13, $fb, $f0, $e3, $f2, $f0, $fb, $06, $19, $fe, $02, $27, $08, $f5, $fa, $02
267f7     FA 0C CC 1A 
267fb     FA 03 F2 0A 
267ff     0B EE 03 07 
26803     1F E6 FD 0A | 	byte	$fa, $0c, $cc, $1a, $fa, $03, $f2, $0a, $0b, $ee, $03, $07, $1f, $e6, $fd, $0a
26807     04 04 F2 04 
2680b     FC 00 16 E2 
2680f     1D D0 21 0C 
26813     05 F4 F8 1A | 	byte	$04, $04, $f2, $04, $fc, $00, $16, $e2, $1d, $d0, $21, $0c, $05, $f4, $f8, $1a
26817     01 EE F8 21 
2681b     FA 09 06 EC 
2681f     06 FD 08 03 
26823     1D E5 04 01 | 	byte	$01, $ee, $f8, $21, $fa, $09, $06, $ec, $06, $fd, $08, $03, $1d, $e5, $04, $01
26827     F7 10 04 F2 
2682b     11 0A E0 15 
2682f     F9 03 F9 28 
26833     E5 03 EF E5 | 	byte	$f7, $10, $04, $f2, $11, $0a, $e0, $15, $f9, $03, $f9, $28, $e5, $03, $ef, $e5
26837     16 10 FA 03 
2683b     03 06 0A F7 
2683f     F1 17 E4 05 
26843     10 00 FD FE | 	byte	$16, $10, $fa, $03, $03, $06, $0a, $f7, $f1, $17, $e4, $05, $10, $00, $fd, $fe
26847     14 08 FE FD 
2684b     E0 1A F0 EA 
2684f     1E FB F9 F1 
26853     15 03 FA F4 | 	byte	$14, $08, $fe, $fd, $e0, $1a, $f0, $ea, $1e, $fb, $f9, $f1, $15, $03, $fa, $f4
26857     07 FC 15 F6 
2685b     0F 0E F4 08 
2685f     23 ED 03 DD 
26863     0D 04 F7 09 | 	byte	$07, $fc, $15, $f6, $0f, $0e, $f4, $08, $23, $ed, $03, $dd, $0d, $04, $f7, $09
26867     EF 2F F7 FA 
2686b     11 F2 ED 00 
2686f     02 08 FC E8 
26873     1D 04 F2 07 | 	byte	$ef, $2f, $f7, $fa, $11, $f2, $ed, $00, $02, $08, $fc, $e8, $1d, $04, $f2, $07
26877     FA 09 EB 1F 
2687b     00 EC 19 ED 
2687f     27 01 DB 1B 
26883     E6 07 09 16 | 	byte	$fa, $09, $eb, $1f, $00, $ec, $19, $ed, $27, $01, $db, $1b, $e6, $07, $09, $16
26887     E2 06 18 01 
2688b     EF E9 07 07 
2688f     19 E2 05 FD 
26893     F1 19 F3 09 | 	byte	$e2, $06, $18, $01, $ef, $e9, $07, $07, $19, $e2, $05, $fd, $f1, $19, $f3, $09
26897     F6 08 29 E5 
2689b     0E 0E 00 05 
2689f     EB 02 0D EB 
268a3     F2 0F 08 EC | 	byte	$f6, $08, $29, $e5, $0e, $0e, $00, $05, $eb, $02, $0d, $eb, $f2, $0f, $08, $ec
268a7     14 F9 F7 00 
268ab     FF 06 19 0A 
268af     FC 0E F9 FA 
268b3     16 EB F8 F8 | 	byte	$14, $f9, $f7, $00, $ff, $06, $19, $0a, $fc, $0e, $f9, $fa, $16, $eb, $f8, $f8
268b7     F4 03 E0 FB 
268bb     FC 10 0B FC 
268bf     08 08 F7 28 
268c3     0B F4 F0 EF | 	byte	$f4, $03, $e0, $fb, $fc, $10, $0b, $fc, $08, $08, $f7, $28, $0b, $f4, $f0, $ef
268c7     28 F2 EB F2 
268cb     22 FD ED 04 
268cf     F2 27 10 13 
268d3     16 F0 00 0C | 	byte	$28, $f2, $eb, $f2, $22, $fd, $ed, $04, $f2, $27, $10, $13, $16, $f0, $00, $0c
268d7     14 D1 0C F3 
268db     E4 09 F5 08 
268df     06 FB 1C 21 
268e3     F8 E6 07 12 | 	byte	$14, $d1, $0c, $f3, $e4, $09, $f5, $08, $06, $fb, $1c, $21, $f8, $e6, $07, $12
268e7     EC 0F ED 04 
268eb     05 F6 16 03 
268ef     F9 0F F7 03 
268f3     ED 05 05 EF | 	byte	$ec, $0f, $ed, $04, $05, $f6, $16, $03, $f9, $0f, $f7, $03, $ed, $05, $05, $ef
268f7     06 08 16 0B 
268fb     07 FB 07 F7 
268ff     F3 FC F1 04 
26903     01 FD F4 10 | 	byte	$06, $08, $16, $0b, $07, $fb, $07, $f7, $f3, $fc, $f1, $04, $01, $fd, $f4, $10
26907     16 FC EF 02 
2690b     07 06 F7 EC 
2690f     22 FA 05 EF 
26913     23 EF F9 0E | 	byte	$16, $fc, $ef, $02, $07, $06, $f7, $ec, $22, $fa, $05, $ef, $23, $ef, $f9, $0e
26917     FB E2 0E FD 
2691b     03 03 F9 14 
2691f     05 12 EA 35 
26923     F5 FD E5 11 | 	byte	$fb, $e2, $0e, $fd, $03, $03, $f9, $14, $05, $12, $ea, $35, $f5, $fd, $e5, $11
26927     03 04 EA F4 
2692b     18 DD 00 0E 
2692f     09 02 0E 0D 
26933     03 0C 06 EC | 	byte	$03, $04, $ea, $f4, $18, $dd, $00, $0e, $09, $02, $0e, $0d, $03, $0c, $06, $ec
26937     14 E8 06 0A 
2693b     FF DB 0B 14 
2693f     FF 17 E4 0D 
26943     11 F1 04 14 | 	byte	$14, $e8, $06, $0a, $ff, $db, $0b, $14, $ff, $17, $e4, $0d, $11, $f1, $04, $14
26947     03 EE 26 EA 
2694b     FC 0B F9 1A 
2694f     F9 17 EB 04 
26953     03 F8 15 F4 | 	byte	$03, $ee, $26, $ea, $fc, $0b, $f9, $1a, $f9, $17, $eb, $04, $03, $f8, $15, $f4
26957     F8 F1 0F 04 
2695b     00 FB F7 46 
2695f     D9 0F F1 00 
26963     18 E7 12 CF | 	byte	$f8, $f1, $0f, $04, $00, $fb, $f7, $46, $d9, $0f, $f1, $00, $18, $e7, $12, $cf
26967     0C 02 02 25 
2696b     E1 0D 02 0F 
2696f     E9 E5 F9 06 
26973     15 F0 18 F6 | 	byte	$0c, $02, $02, $25, $e1, $0d, $02, $0f, $e9, $e5, $f9, $06, $15, $f0, $18, $f6
26977     F9 1A 04 15 
2697b     FA F2 0E EB 
2697f     0C E5 06 DF 
26983     1C FA E8 01 | 	byte	$f9, $1a, $04, $15, $fa, $f2, $0e, $eb, $0c, $e5, $06, $df, $1c, $fa, $e8, $01
26987     07 21 0E FA 
2698b     20 0A EE 0C 
2698f     05 F3 01 02 
26993     02 1D DC 17 | 	byte	$07, $21, $0e, $fa, $20, $0a, $ee, $0c, $05, $f3, $01, $02, $02, $1d, $dc, $17
26997     FB 01 E5 10 
2699b     0A F3 FB 0A 
2699f     25 06 F6 12 
269a3     E4 2A DB 1B | 	byte	$fb, $01, $e5, $10, $0a, $f3, $fb, $0a, $25, $06, $f6, $12, $e4, $2a, $db, $1b
269a7     FC 03 E9 10 
269ab     0C E0 0E 04 
269af     FE 0C E4 16 
269b3     F3 E8 10 F9 | 	byte	$fc, $03, $e9, $10, $0c, $e0, $0e, $04, $fe, $0c, $e4, $16, $f3, $e8, $10, $f9
269b7     29 E0 0B E8 
269bb     2C FB F0 FF 
269bf     FF 03 0D F5 
269c3     04 F0 19 E4 | 	byte	$29, $e0, $0b, $e8, $2c, $fb, $f0, $ff, $ff, $03, $0d, $f5, $04, $f0, $19, $e4
269c7     1C E8 03 06 
269cb     FC 1B EA 07 
269cf     FB EC 15 00 
269d3     FA EC F1 04 | 	byte	$1c, $e8, $03, $06, $fc, $1b, $ea, $07, $fb, $ec, $15, $00, $fa, $ec, $f1, $04
269d7     0C 03 F5 30 
269db     00 1B ED 14 
269df     F2 06 07 FA 
269e3     ED E8 00 03 | 	byte	$0c, $03, $f5, $30, $00, $1b, $ed, $14, $f2, $06, $07, $fa, $ed, $e8, $00, $03
269e7     0A F8 E8 17 
269eb     FC 10 F1 08 
269ef     FA 08 14 07 
269f3     00 E2 10 17 | 	byte	$0a, $f8, $e8, $17, $fc, $10, $f1, $08, $fa, $08, $14, $07, $00, $e2, $10, $17
269f7     FC FB EB 1A 
269fb     FB F2 F5 00 
269ff     08 E2 17 FC 
26a03     07 F7 03 15 | 	byte	$fc, $fb, $eb, $1a, $fb, $f2, $f5, $00, $08, $e2, $17, $fc, $07, $f7, $03, $15
26a07     04 08 06 01 
26a0b     FA F3 1D F3 
26a0f     00 E7 05 FB 
26a13     F8 F7 13 04 | 	byte	$04, $08, $06, $01, $fa, $f3, $1d, $f3, $00, $e7, $05, $fb, $f8, $f7, $13, $04
26a17     FB 00 21 F6 
26a1b     F0 0D F5 0C 
26a1f     FA DE FB 01 
26a23     FD 0B 04 0E | 	byte	$fb, $00, $21, $f6, $f0, $0d, $f5, $0c, $fa, $de, $fb, $01, $fd, $0b, $04, $0e
26a27     EA 15 F5 28 
26a2b     EA F5 1D 0E 
26a2f     12 E9 FD 0B 
26a33     F1 11 E4 02 | 	byte	$ea, $15, $f5, $28, $ea, $f5, $1d, $0e, $12, $e9, $fd, $0b, $f1, $11, $e4, $02
26a37     DB 17 08 01 
26a3b     0F DF 37 F0 
26a3f     0A 03 E0 2D 
26a43     EF 0C 05 03 | 	byte	$db, $17, $08, $01, $0f, $df, $37, $f0, $0a, $03, $e0, $2d, $ef, $0c, $05, $03
26a47     E5 F3 28 F3 
26a4b     0D F1 F5 18 
26a4f     09 F5 F5 07 
26a53     0F FD 04 E2 | 	byte	$e5, $f3, $28, $f3, $0d, $f1, $f5, $18, $09, $f5, $f5, $07, $0f, $fd, $04, $e2
26a57     01 00 12 0C 
26a5b     F0 FC 01 13 
26a5f     03 FE FA F8 
26a63     00 08 14 04 | 	byte	$01, $00, $12, $0c, $f0, $fc, $01, $13, $03, $fe, $fa, $f8, $00, $08, $14, $04
26a67     0B FC 0A 14 
26a6b     F8 DE F1 02 
26a6f     00 07 DD 0A 
26a73     0F FB 12 FA | 	byte	$0b, $fc, $0a, $14, $f8, $de, $f1, $02, $00, $07, $dd, $0a, $0f, $fb, $12, $fa
26a77     06 FB 14 04 
26a7b     F2 11 EF 15 
26a7f     0C EA ED 08 
26a83     F7 F5 18 01 | 	byte	$06, $fb, $14, $04, $f2, $11, $ef, $15, $0c, $ea, $ed, $08, $f7, $f5, $18, $01
26a87     F2 0D E3 25 
26a8b     00 FB FE 06 
26a8f     13 E6 3F D6 
26a93     12 06 E6 20 | 	byte	$f2, $0d, $e3, $25, $00, $fb, $fe, $06, $13, $e6, $3f, $d6, $12, $06, $e6, $20
26a97     E1 03 EE 1A 
26a9b     D9 02 1C DF 
26a9f     18 E6 0B FF 
26aa3     F8 EA 0E 16 | 	byte	$e1, $03, $ee, $1a, $d9, $02, $1c, $df, $18, $e6, $0b, $ff, $f8, $ea, $0e, $16
26aa7     E7 15 0C E6 
26aab     20 FC 02 E7 
26aaf     FA F7 05 05 
26ab3     ED 15 07 F4 | 	byte	$e7, $15, $0c, $e6, $20, $fc, $02, $e7, $fa, $f7, $05, $05, $ed, $15, $07, $f4
26ab7     0F F6 FD FE 
26abb     12 F9 0F FA 
26abf     F6 12 EF 0B 
26ac3     F5 0E EE 0F | 	byte	$0f, $f6, $fd, $fe, $12, $f9, $0f, $fa, $f6, $12, $ef, $0b, $f5, $0e, $ee, $0f
26ac7     FE FB 06 F8 
26acb     0F 0B F5 0D 
26acf     F4 0F F6 F7 
26ad3     FA F7 FB 07 | 	byte	$fe, $fb, $06, $f8, $0f, $0b, $f5, $0d, $f4, $0f, $f6, $f7, $fa, $f7, $fb, $07
26ad7     03 F5 05 FB 
26adb     05 0E F6 0C 
26adf     F3 01 12 09 
26ae3     16 E8 F8 FE | 	byte	$03, $f5, $05, $fb, $05, $0e, $f6, $0c, $f3, $01, $12, $09, $16, $e8, $f8, $fe
26ae7     07 05 D7 19 
26aeb     EF 0C 04 F3 
26aef     FE F2 32 F4 
26af3     1C D9 1C FD | 	byte	$07, $05, $d7, $19, $ef, $0c, $04, $f3, $fe, $f2, $32, $f4, $1c, $d9, $1c, $fd
26af7     F0 07 FB 16 
26afb     E3 F6 12 FB 
26aff     0B FA 0F 0B 
26b03     04 F1 F7 06 | 	byte	$f0, $07, $fb, $16, $e3, $f6, $12, $fb, $0b, $fa, $0f, $0b, $04, $f1, $f7, $06
26b07     EC 10 FE 09 
26b0b     F9 F7 25 F9 
26b0f     FD FB 0C DF 
26b13     F6 0F 12 0D | 	byte	$ec, $10, $fe, $09, $f9, $f7, $25, $f9, $fd, $fb, $0c, $df, $f6, $0f, $12, $0d
26b17     E6 0C 09 F2 
26b1b     ED 00 08 06 
26b1f     04 09 02 F4 
26b23     F3 05 F8 E8 | 	byte	$e6, $0c, $09, $f2, $ed, $00, $08, $06, $04, $09, $02, $f4, $f3, $05, $f8, $e8
26b27     FC 0E 0A 05 
26b2b     00 FC 0A FF 
26b2f     EE 30 E1 FB 
26b33     F6 06 15 F6 | 	byte	$fc, $0e, $0a, $05, $00, $fc, $0a, $ff, $ee, $30, $e1, $fb, $f6, $06, $15, $f6
26b37     F4 07 05 F0 
26b3b     FC F6 FD 04 
26b3f     FB FF 02 F2 
26b43     17 12 0B E0 | 	byte	$f4, $07, $05, $f0, $fc, $f6, $fd, $04, $fb, $ff, $02, $f2, $17, $12, $0b, $e0
26b47     07 0E EF 09 
26b4b     EB 0A 01 FD 
26b4f     02 04 FE F1 
26b53     05 07 FA FE | 	byte	$07, $0e, $ef, $09, $eb, $0a, $01, $fd, $02, $04, $fe, $f1, $05, $07, $fa, $fe
26b57     01 FB 29 EB 
26b5b     07 FA FA FB 
26b5f     0D 06 FD 08 
26b63     F2 1D 07 E5 | 	byte	$01, $fb, $29, $eb, $07, $fa, $fa, $fb, $0d, $06, $fd, $08, $f2, $1d, $07, $e5
26b67     03 FB 10 F6 
26b6b     F6 FA F6 12 
26b6f     ED 16 ED 04 
26b73     11 0B 0B F4 | 	byte	$03, $fb, $10, $f6, $f6, $fa, $f6, $12, $ed, $16, $ed, $04, $11, $0b, $0b, $f4
26b77     F7 09 F8 09 
26b7b     00 08 FE 01 
26b7f     07 FA 13 F3 
26b83     F8 0E 00 05 | 	byte	$f7, $09, $f8, $09, $00, $08, $fe, $01, $07, $fa, $13, $f3, $f8, $0e, $00, $05
26b87     F1 10 03 06 
26b8b     FA FA 0E E8 
26b8f     15 EB 0D E4 
26b93     0B 06 EE 05 | 	byte	$f1, $10, $03, $06, $fa, $fa, $0e, $e8, $15, $eb, $0d, $e4, $0b, $06, $ee, $05
26b97     EA 07 0D 0F 
26b9b     04 05 FA FB 
26b9f     19 EE 16 06 
26ba3     F7 FB ED F3 | 	byte	$ea, $07, $0d, $0f, $04, $05, $fa, $fb, $19, $ee, $16, $06, $f7, $fb, $ed, $f3
26ba7     EA 10 05 07 
26bab     08 F3 0C 0A 
26baf     00 16 0F 04 
26bb3     F8 F8 EE 03 | 	byte	$ea, $10, $05, $07, $08, $f3, $0c, $0a, $00, $16, $0f, $04, $f8, $f8, $ee, $03
26bb7     03 EC 08 01 
26bbb     FF 08 14 F7 
26bbf     FA 22 F6 10 
26bc3     E5 FD 05 FB | 	byte	$03, $ec, $08, $01, $ff, $08, $14, $f7, $fa, $22, $f6, $10, $e5, $fd, $05, $fb
26bc7     06 EC 16 DC 
26bcb     16 F9 06 0F 
26bcf     EF 0D 01 08 
26bd3     EB 1B EE 03 | 	byte	$06, $ec, $16, $dc, $16, $f9, $06, $0f, $ef, $0d, $01, $08, $eb, $1b, $ee, $03
26bd7     0D 01 0C D6 
26bdb     F2 14 FD F4 
26bdf     F7 10 0C 12 
26be3     04 04 14 EB | 	byte	$0d, $01, $0c, $d6, $f2, $14, $fd, $f4, $f7, $10, $0c, $12, $04, $04, $14, $eb
26be7     FE FD FE FD 
26beb     F6 0F FE 0F 
26bef     E5 08 FA E9 
26bf3     0D F4 0E E4 | 	byte	$fe, $fd, $fe, $fd, $f6, $0f, $fe, $0f, $e5, $08, $fa, $e9, $0d, $f4, $0e, $e4
26bf7     10 04 07 14 
26bfb     F3 17 FC FB 
26bff     05 04 F1 04 
26c03     07 E7 FF E6 | 	byte	$10, $04, $07, $14, $f3, $17, $fc, $fb, $05, $04, $f1, $04, $07, $e7, $ff, $e6
26c07     04 17 F6 FC 
26c0b     0E 0A F9 0C 
26c0f     12 F8 01 F4 
26c13     FB 05 EA 0E | 	byte	$04, $17, $f6, $fc, $0e, $0a, $f9, $0c, $12, $f8, $01, $f4, $fb, $05, $ea, $0e
26c17     07 FC FE 13 
26c1b     F0 07 0D 09 
26c1f     07 EC F3 06 
26c23     F8 0B ED 0F | 	byte	$07, $fc, $fe, $13, $f0, $07, $0d, $09, $07, $ec, $f3, $06, $f8, $0b, $ed, $0f
26c27     EF 14 FA 03 
26c2b     06 EB FB FC 
26c2f     04 F1 F4 FD 
26c33     09 29 F9 F7 | 	byte	$ef, $14, $fa, $03, $06, $eb, $fb, $fc, $04, $f1, $f4, $fd, $09, $29, $f9, $f7
26c37     F0 12 01 08 
26c3b     FD E6 17 F5 
26c3f     00 F1 E7 F7 
26c43     03 19 F6 05 | 	byte	$f0, $12, $01, $08, $fd, $e6, $17, $f5, $00, $f1, $e7, $f7, $03, $19, $f6, $05
26c47     06 FD 16 F4 
26c4b     17 F9 FF FE 
26c4f     16 07 E7 F9 
26c53     E9 15 02 E4 | 	byte	$06, $fd, $16, $f4, $17, $f9, $ff, $fe, $16, $07, $e7, $f9, $e9, $15, $02, $e4
26c57     0B FB 0F 02 
26c5b     10 F3 FA 14 
26c5f     FA 04 F2 0C 
26c63     07 04 F9 F4 | 	byte	$0b, $fb, $0f, $02, $10, $f3, $fa, $14, $fa, $04, $f2, $0c, $07, $04, $f9, $f4
26c67     E8 FD FD 0A 
26c6b     F6 02 F9 13 
26c6f     00 10 02 09 
26c73     FB 0F FD 00 | 	byte	$e8, $fd, $fd, $0a, $f6, $02, $f9, $13, $00, $10, $02, $09, $fb, $0f, $fd, $00
26c77     05 FC F6 E8 
26c7b     F6 EC 06 01 
26c7f     FA 24 F1 FC 
26c83     FA FE 20 FB | 	byte	$05, $fc, $f6, $e8, $f6, $ec, $06, $01, $fa, $24, $f1, $fc, $fa, $fe, $20, $fb
26c87     0A E8 23 FF 
26c8b     00 02 F6 FC 
26c8f     FE F3 06 F2 
26c93     0D EC 20 03 | 	byte	$0a, $e8, $23, $ff, $00, $02, $f6, $fc, $fe, $f3, $06, $f2, $0d, $ec, $20, $03
26c97     07 11 F2 0F 
26c9b     FD 05 F3 14 
26c9f     00 EC 0F DF 
26ca3     03 F8 F5 1A | 	byte	$07, $11, $f2, $0f, $fd, $05, $f3, $14, $00, $ec, $0f, $df, $03, $f8, $f5, $1a
26ca7     EE F6 FC 16 
26cab     01 1D 0D F6 
26caf     08 F7 F9 09 
26cb3     FA F8 0D 0E | 	byte	$ee, $f6, $fc, $16, $01, $1d, $0d, $f6, $08, $f7, $f9, $09, $fa, $f8, $0d, $0e
26cb7     E5 08 F7 FF 
26cbb     05 FA 07 02 
26cbf     08 11 0C 01 
26cc3     FD 21 ED FF | 	byte	$e5, $08, $f7, $ff, $05, $fa, $07, $02, $08, $11, $0c, $01, $fd, $21, $ed, $ff
26cc7     0A F9 0D E0 
26ccb     0F EC 1B D4 
26ccf     0F 07 FE 19 
26cd3     FB 16 F3 1B | 	byte	$0a, $f9, $0d, $e0, $0f, $ec, $1b, $d4, $0f, $07, $fe, $19, $fb, $16, $f3, $1b
26cd7     F8 F5 0C E5 
26cdb     11 F8 08 F5 
26cdf     00 FE F2 1C 
26ce3     E7 0C ED 14 | 	byte	$f8, $f5, $0c, $e5, $11, $f8, $08, $f5, $00, $fe, $f2, $1c, $e7, $0c, $ed, $14
26ce7     06 FB 15 F4 
26ceb     1E FF 02 02 
26cef     F2 15 D6 05 
26cf3     EF 08 FD E7 | 	byte	$06, $fb, $15, $f4, $1e, $ff, $02, $02, $f2, $15, $d6, $05, $ef, $08, $fd, $e7
26cf7     03 F7 13 01 
26cfb     FD 08 08 19 
26cff     F2 04 FB F3 
26d03     11 F3 21 DE | 	byte	$03, $f7, $13, $01, $fd, $08, $08, $19, $f2, $04, $fb, $f3, $11, $f3, $21, $de
26d07     09 F3 FB FD 
26d0b     EC 05 FA 00 
26d0f     08 F8 10 F9 
26d13     14 0C EF 08 | 	byte	$09, $f3, $fb, $fd, $ec, $05, $fa, $00, $08, $f8, $10, $f9, $14, $0c, $ef, $08
26d17     F1 FC F2 06 
26d1b     00 FA F9 05 
26d1f     14 F6 11 06 
26d23     0E 02 FC 05 | 	byte	$f1, $fc, $f2, $06, $00, $fa, $f9, $05, $14, $f6, $11, $06, $0e, $02, $fc, $05
26d27     DB 29 E4 27 
26d2b     E2 F5 0A 0D 
26d2f     07 E3 1A E4 
26d33     1A 10 E8 12 | 	byte	$db, $29, $e4, $27, $e2, $f5, $0a, $0d, $07, $e3, $1a, $e4, $1a, $10, $e8, $12
26d37     EE 0D 03 0B 
26d3b     EE 08 16 E0 
26d3f     31 E0 F9 09 
26d43     EE 11 FA EE | 	byte	$ee, $0d, $03, $0b, $ee, $08, $16, $e0, $31, $e0, $f9, $09, $ee, $11, $fa, $ee
26d47     F9 17 13 F2 
26d4b     19 DF 04 1B 
26d4f     E5 15 F8 EF 
26d53     F9 28 EE F8 | 	byte	$f9, $17, $13, $f2, $19, $df, $04, $1b, $e5, $15, $f8, $ef, $f9, $28, $ee, $f8
26d57     08 ED 08 F6 
26d5b     F6 0D 0D FC 
26d5f     10 06 E5 1E 
26d63     EF 12 F4 02 | 	byte	$08, $ed, $08, $f6, $f6, $0d, $0d, $fc, $10, $06, $e5, $1e, $ef, $12, $f4, $02
26d67     08 F8 F9 F0 
26d6b     08 ED 10 07 
26d6f     F1 10 FA 07 
26d73     02 0F 10 F9 | 	byte	$08, $f8, $f9, $f0, $08, $ed, $10, $07, $f1, $10, $fa, $07, $02, $0f, $10, $f9
26d77     03 F0 FC FF 
26d7b     F5 12 FF FC 
26d7f     00 F3 08 E8 
26d83     0F 00 1C F1 | 	byte	$03, $f0, $fc, $ff, $f5, $12, $ff, $fc, $00, $f3, $08, $e8, $0f, $00, $1c, $f1
26d87     0B 10 F1 07 
26d8b     FF 08 F7 F2 
26d8f     07 FC 02 F9 
26d93     F7 0D F9 0B | 	byte	$0b, $10, $f1, $07, $ff, $08, $f7, $f2, $07, $fc, $02, $f9, $f7, $0d, $f9, $0b
26d97     00 F7 F3 03 
26d9b     FA 0E F9 06 
26d9f     05 10 F0 FF 
26da3     F8 00 0D F7 | 	byte	$00, $f7, $f3, $03, $fa, $0e, $f9, $06, $05, $10, $f0, $ff, $f8, $00, $0d, $f7
26da7     05 F6 EB 0A 
26dab     F8 0D FE 05 
26daf     05 F6 16 F5 
26db3     04 03 06 03 | 	byte	$05, $f6, $eb, $0a, $f8, $0d, $fe, $05, $05, $f6, $16, $f5, $04, $03, $06, $03
26db7     F9 01 F5 03 
26dbb     FF FD 0D 08 
26dbf     07 F7 07 FE 
26dc3     02 F3 FE 0D | 	byte	$f9, $01, $f5, $03, $ff, $fd, $0d, $08, $07, $f7, $07, $fe, $02, $f3, $fe, $0d
26dc7     FE 08 FA 00 
26dcb     01 02 09 F6 
26dcf     17 08 ED 06 
26dd3     ED 07 F9 FE | 	byte	$fe, $08, $fa, $00, $01, $02, $09, $f6, $17, $08, $ed, $06, $ed, $07, $f9, $fe
26dd7     03 0C EE 0A 
26ddb     06 09 02 0B 
26ddf     04 FD EB 05 
26de3     F4 13 FB 0E | 	byte	$03, $0c, $ee, $0a, $06, $09, $02, $0b, $04, $fd, $eb, $05, $f4, $13, $fb, $0e
26de7     10 F1 09 EB 
26deb     0E F4 06 05 
26def     11 F0 FE 14 
26df3     F9 0B 07 F7 | 	byte	$10, $f1, $09, $eb, $0e, $f4, $06, $05, $11, $f0, $fe, $14, $f9, $0b, $07, $f7
26df7     08 F7 05 F4 
26dfb     08 EA 1B 08 
26dff     F9 19 E1 06 
26e03     02 FA 02 FA | 	byte	$08, $f7, $05, $f4, $08, $ea, $1b, $08, $f9, $19, $e1, $06, $02, $fa, $02, $fa
26e07     FB FF 09 FE 
26e0b     F7 09 F4 34 
26e0f     F4 FD F3 0B 
26e13     0A F2 0C DF | 	byte	$fb, $ff, $09, $fe, $f7, $09, $f4, $34, $f4, $fd, $f3, $0b, $0a, $f2, $0c, $df
26e17     10 00 EC 02 
26e1b     EB 12 00 1E 
26e1f     0A F5 0B E7 
26e23     14 FA EE 0E | 	byte	$10, $00, $ec, $02, $eb, $12, $00, $1e, $0a, $f5, $0b, $e7, $14, $fa, $ee, $0e
26e27     F8 03 06 08 
26e2b     F4 02 06 F8 
26e2f     0F F5 FF FE 
26e33     FE F9 01 01 | 	byte	$f8, $03, $06, $08, $f4, $02, $06, $f8, $0f, $f5, $ff, $fe, $fe, $f9, $01, $01
26e37     F2 14 02 F9 
26e3b     17 ED 14 07 
26e3f     F9 F7 F9 FC 
26e43     EF 0D 07 10 | 	byte	$f2, $14, $02, $f9, $17, $ed, $14, $07, $f9, $f7, $f9, $fc, $ef, $0d, $07, $10
26e47     00 06 F2 0E 
26e4b     F0 F9 03 02 
26e4f     03 04 FA FC 
26e53     05 0D 00 FF | 	byte	$00, $06, $f2, $0e, $f0, $f9, $03, $02, $03, $04, $fa, $fc, $05, $0d, $00, $ff
26e57     FC E9 25 FA 
26e5b     00 05 FB 02 
26e5f     13 02 F8 05 
26e63     EC FF 06 01 | 	byte	$fc, $e9, $25, $fa, $00, $05, $fb, $02, $13, $02, $f8, $05, $ec, $ff, $06, $01
26e67     00 01 03 FC 
26e6b     0D EB ED 27 
26e6f     E2 15 F3 FA 
26e73     01 FC 1A 04 | 	byte	$00, $01, $03, $fc, $0d, $eb, $ed, $27, $e2, $15, $f3, $fa, $01, $fc, $1a, $04
26e77     15 07 0A 02 
26e7b     FC FE FC F7 
26e7f     F8 FE EA 04 
26e83     FA 0A 15 16 | 	byte	$15, $07, $0a, $02, $fc, $fe, $fc, $f7, $f8, $fe, $ea, $04, $fa, $0a, $15, $16
26e87     08 06 ED 00 
26e8b     FC 02 0A FA 
26e8f     09 0E F5 02 
26e93     F1 09 FD FC | 	byte	$08, $06, $ed, $00, $fc, $02, $0a, $fa, $09, $0e, $f5, $02, $f1, $09, $fd, $fc
26e97     10 E8 14 ED 
26e9b     04 09 EF 15 
26e9f     F7 00 13 EA 
26ea3     11 F0 0A FF | 	byte	$10, $e8, $14, $ed, $04, $09, $ef, $15, $f7, $00, $13, $ea, $11, $f0, $0a, $ff
26ea7     02 00 F6 09 
26eab     0C FB FE 04 
26eaf     09 07 EB 0A 
26eb3     08 EA 00 1B | 	byte	$02, $00, $f6, $09, $0c, $fb, $fe, $04, $09, $07, $eb, $0a, $08, $ea, $00, $1b
26eb7     F3 00 01 00 
26ebb     FE 03 F2 0E 
26ebf     03 FD F6 18 
26ec3     F8 F5 23 E1 | 	byte	$f3, $00, $01, $00, $fe, $03, $f2, $0e, $03, $fd, $f6, $18, $f8, $f5, $23, $e1
26ec7     2F 00 ED 12 
26ecb     E0 FB F8 05 
26ecf     F8 ED 0D E7 
26ed3     0B 16 F2 16 | 	byte	$2f, $00, $ed, $12, $e0, $fb, $f8, $05, $f8, $ed, $0d, $e7, $0b, $16, $f2, $16
26ed7     FC 03 15 EE 
26edb     FE 02 0D FE 
26edf     11 EC F3 03 
26ee3     01 03 FB FF | 	byte	$fc, $03, $15, $ee, $fe, $02, $0d, $fe, $11, $ec, $f3, $03, $01, $03, $fb, $ff
26ee7     F9 FE 0F F0 
26eeb     10 F7 05 12 
26eef     EE 0B F4 0B 
26ef3     FE 02 04 04 | 	byte	$f9, $fe, $0f, $f0, $10, $f7, $05, $12, $ee, $0b, $f4, $0b, $fe, $02, $04, $04
26ef7     F0 02 F6 15 
26efb     07 EA 25 E4 
26eff     03 02 FD 16 
26f03     E5 09 FD FA | 	byte	$f0, $02, $f6, $15, $07, $ea, $25, $e4, $03, $02, $fd, $16, $e5, $09, $fd, $fa
26f07     02 FB 1C EB 
26f0b     F3 FA F0 00 
26f0f     02 1C 0A 0D 
26f13     F5 0C 1B F1 | 	byte	$02, $fb, $1c, $eb, $f3, $fa, $f0, $00, $02, $1c, $0a, $0d, $f5, $0c, $1b, $f1
26f17     15 E2 0B F4 
26f1b     ED 08 E2 0C 
26f1f     00 05 00 E5 
26f23     18 FC 0A 10 | 	byte	$15, $e2, $0b, $f4, $ed, $08, $e2, $0c, $00, $05, $00, $e5, $18, $fc, $0a, $10
26f27     F5 18 FA 05 
26f2b     10 FA F8 06 
26f2f     F4 01 F6 F6 
26f33     FA FA 0A F3 | 	byte	$f5, $18, $fa, $05, $10, $fa, $f8, $06, $f4, $01, $f6, $f6, $fa, $fa, $0a, $f3
26f37     09 F2 F3 1E 
26f3b     FE 14 FB FE 
26f3f     03 12 FB EE 
26f43     FA F9 16 F7 | 	byte	$09, $f2, $f3, $1e, $fe, $14, $fb, $fe, $03, $12, $fb, $ee, $fa, $f9, $16, $f7
26f47     EF FE 04 05 
26f4b     F2 08 06 EE 
26f4f     29 F2 34 E7 
26f53     F0 1B ED FF | 	byte	$ef, $fe, $04, $05, $f2, $08, $06, $ee, $29, $f2, $34, $e7, $f0, $1b, $ed, $ff
26f57     FA 06 00 F9 
26f5b     05 FA 0A E3 
26f5f     FD 1A F3 05 
26f63     02 17 11 05 | 	byte	$fa, $06, $00, $f9, $05, $fa, $0a, $e3, $fd, $1a, $f3, $05, $02, $17, $11, $05
26f67     02 EF 05 EB 
26f6b     0D F3 E3 F4 
26f6f     03 07 FD 02 
26f73     03 FA 0B FE | 	byte	$02, $ef, $05, $eb, $0d, $f3, $e3, $f4, $03, $07, $fd, $02, $03, $fa, $0b, $fe
26f77     15 00 F2 22 
26f7b     00 05 FB 06 
26f7f     FA FD EC FA 
26f83     EF FE 04 05 | 	byte	$15, $00, $f2, $22, $00, $05, $fb, $06, $fa, $fd, $ec, $fa, $ef, $fe, $04, $05
26f87     0D F0 12 0A 
26f8b     00 F0 0A 0D 
26f8f     00 FD 01 09 
26f93     F4 F8 15 FA | 	byte	$0d, $f0, $12, $0a, $00, $f0, $0a, $0d, $00, $fd, $01, $09, $f4, $f8, $15, $fa
26f97     F7 F4 12 F8 
26f9b     F0 14 F6 06 
26f9f     EF 0F 10 FA 
26fa3     04 FE 18 F7 | 	byte	$f7, $f4, $12, $f8, $f0, $14, $f6, $06, $ef, $0f, $10, $fa, $04, $fe, $18, $f7
26fa7     F1 21 F4 05 
26fab     F3 F0 13 E7 
26faf     12 FA 06 F4 
26fb3     FE 07 FB FA | 	byte	$f1, $21, $f4, $05, $f3, $f0, $13, $e7, $12, $fa, $06, $f4, $fe, $07, $fb, $fa
26fb7     0A 17 EB FE 
26fbb     02 EF 0B 00 
26fbf     04 04 F6 02 
26fc3     F8 03 FE 00 | 	byte	$0a, $17, $eb, $fe, $02, $ef, $0b, $00, $04, $04, $f6, $02, $f8, $03, $fe, $00
26fc7     2A EC 02 F7 
26fcb     00 08 F3 FA 
26fcf     0A 07 F4 05 
26fd3     13 E7 03 17 | 	byte	$2a, $ec, $02, $f7, $00, $08, $f3, $fa, $0a, $07, $f4, $05, $13, $e7, $03, $17
26fd7     FE F9 05 F9 
26fdb     0A FB F9 17 
26fdf     01 F6 F4 14 
26fe3     ED 01 FA FF | 	byte	$fe, $f9, $05, $f9, $0a, $fb, $f9, $17, $01, $f6, $f4, $14, $ed, $01, $fa, $ff
26fe7     0B 06 02 08 
26feb     07 EA 03 0E 
26fef     E8 13 E2 18 
26ff3     F4 E8 15 F4 | 	byte	$0b, $06, $02, $08, $07, $ea, $03, $0e, $e8, $13, $e2, $18, $f4, $e8, $15, $f4
26ff7     05 06 05 08 
26ffb     03 06 F6 01 
26fff     0E EB 22 E5 
27003     F0 FC 04 02 | 	byte	$05, $06, $05, $08, $03, $06, $f6, $01, $0e, $eb, $22, $e5, $f0, $fc, $04, $02
27007     FA FB FD 13 
2700b     FC EC 24 EF 
2700f     0A 0E FF F6 
27013     00 06 ED 11 | 	byte	$fa, $fb, $fd, $13, $fc, $ec, $24, $ef, $0a, $0e, $ff, $f6, $00, $06, $ed, $11
27017     F9 EE 24 D7 
2701b     10 F7 FE 03 
2701f     F9 10 E8 20 
27023     F5 F7 16 F0 | 	byte	$f9, $ee, $24, $d7, $10, $f7, $fe, $03, $f9, $10, $e8, $20, $f5, $f7, $16, $f0
27027     00 06 F7 FE 
2702b     10 F4 F9 0A 
2702f     02 08 F7 FF 
27033     F5 0A F0 FD | 	byte	$00, $06, $f7, $fe, $10, $f4, $f9, $0a, $02, $08, $f7, $ff, $f5, $0a, $f0, $fd
27037     03 00 19 00 
2703b     04 FA FA F9 
2703f     02 0B F1 FD 
27043     FF 03 F2 02 | 	byte	$03, $00, $19, $00, $04, $fa, $fa, $f9, $02, $0b, $f1, $fd, $ff, $03, $f2, $02
27047     11 FF 08 F2 
2704b     0D FD F2 0C 
2704f     02 02 0D F2 
27053     00 EE 00 00 | 	byte	$11, $ff, $08, $f2, $0d, $fd, $f2, $0c, $02, $02, $0d, $f2, $00, $ee, $00, $00
27057     F6 0B EF FD 
2705b     00 0D 0C F9 
2705f     19 FB 19 FE 
27063     03 F7 FC 02 | 	byte	$f6, $0b, $ef, $fd, $00, $0d, $0c, $f9, $19, $fb, $19, $fe, $03, $f7, $fc, $02
27067     EB 08 E4 F4 
2706b     0B EF 14 F0 
2706f     13 0A 08 08 
27073     EB 23 E8 08 | 	byte	$eb, $08, $e4, $f4, $0b, $ef, $14, $f0, $13, $0a, $08, $08, $eb, $23, $e8, $08
27077     14 E5 0D EF 
2707b     0A EF F9 F3 
2707f     FC 0A F2 0A 
27083     FA 0C FE 18 | 	byte	$14, $e5, $0d, $ef, $0a, $ef, $f9, $f3, $fc, $0a, $f2, $0a, $fa, $0c, $fe, $18
27087     08 08 0A EF 
2708b     0F F8 E6 03 
2708f     00 FC FB FF 
27093     00 F6 FB 18 | 	byte	$08, $08, $0a, $ef, $0f, $f8, $e6, $03, $00, $fc, $fb, $ff, $00, $f6, $fb, $18
27097     FB 02 07 FE 
2709b     0B F7 02 F8 
2709f     04 02 ED 07 
270a3     EF 00 05 02 | 	byte	$fb, $02, $07, $fe, $0b, $f7, $02, $f8, $04, $02, $ed, $07, $ef, $00, $05, $02
270a7     00 FD 00 01 
270ab     00 FD 02 0C 
270af     FF F4 2E F7 
270b3     06 FB 09 F9 | 	byte	$00, $fd, $00, $01, $00, $fd, $02, $0c, $ff, $f4, $2e, $f7, $06, $fb, $09, $f9
270b7     FF EA F0 01 
270bb     E9 02 14 FE 
270bf     06 03 10 FA 
270c3     F8 0E F6 2B | 	byte	$ff, $ea, $f0, $01, $e9, $02, $14, $fe, $06, $03, $10, $fa, $f8, $0e, $f6, $2b
270c7     D9 0F 0F E8 
270cb     F7 00 07 ED 
270cf     FC 04 EF 09 
270d3     EA 0B 0D FE | 	byte	$d9, $0f, $0f, $e8, $f7, $00, $07, $ed, $fc, $04, $ef, $09, $ea, $0b, $0d, $fe
270d7     0B 09 02 04 
270db     05 FE ED 08 
270df     F2 06 FD FB 
270e3     FD 12 02 FC | 	byte	$0b, $09, $02, $04, $05, $fe, $ed, $08, $f2, $06, $fd, $fb, $fd, $12, $02, $fc
270e7     0B 0F E9 0E 
270eb     F8 FC 06 FB 
270ef     1B F4 07 F8 
270f3     03 02 FB 0D | 	byte	$0b, $0f, $e9, $0e, $f8, $fc, $06, $fb, $1b, $f4, $07, $f8, $03, $02, $fb, $0d
270f7     07 E1 11 FD 
270fb     0A 07 07 01 
270ff     FF ED F1 FF 
27103     0A F2 07 05 | 	byte	$07, $e1, $11, $fd, $0a, $07, $07, $01, $ff, $ed, $f1, $ff, $0a, $f2, $07, $05
27107     02 F9 03 14 
2710b     F0 02 07 0A 
2710f     F6 E6 11 06 
27113     04 F7 00 06 | 	byte	$02, $f9, $03, $14, $f0, $02, $07, $0a, $f6, $e6, $11, $06, $04, $f7, $00, $06
27117     DA 12 FC 07 
2711b     FD 00 13 F8 
2711f     00 F9 06 15 
27123     E2 16 F9 F9 | 	byte	$da, $12, $fc, $07, $fd, $00, $13, $f8, $00, $f9, $06, $15, $e2, $16, $f9, $f9
27127     00 FA 0F FB 
2712b     F6 FD 01 00 
2712f     F8 13 02 01 
27133     04 04 F4 F6 | 	byte	$00, $fa, $0f, $fb, $f6, $fd, $01, $00, $f8, $13, $02, $01, $04, $04, $f4, $f6
27137     12 F8 FD FA 
2713b     EF 11 FC F4 
2713f     03 FF 04 F7 
27143     09 FB 0D 0A | 	byte	$12, $f8, $fd, $fa, $ef, $11, $fc, $f4, $03, $ff, $04, $f7, $09, $fb, $0d, $0a
27147     0D 05 F2 FA 
2714b     05 00 EE FC 
2714f     F9 FF FB 03 
27153     09 F8 06 05 | 	byte	$0d, $05, $f2, $fa, $05, $00, $ee, $fc, $f9, $ff, $fb, $03, $09, $f8, $06, $05
27157     00 FF 05 06 
2715b     F3 20 F9 FD 
2715f     FB EE 0A FA 
27163     FF F9 00 FC | 	byte	$00, $ff, $05, $06, $f3, $20, $f9, $fd, $fb, $ee, $0a, $fa, $ff, $f9, $00, $fc
27167     FF 0D EE 0C 
2716b     F7 05 06 F5 
2716f     0F FD 0A FA 
27173     FA 08 EC 07 | 	byte	$ff, $0d, $ee, $0c, $f7, $05, $06, $f5, $0f, $fd, $0a, $fa, $fa, $08, $ec, $07
27177     03 05 FA 00 
2717b     09 06 FB FD 
2717f     FA 02 EF 11 
27183     F2 05 00 05 | 	byte	$03, $05, $fa, $00, $09, $06, $fb, $fd, $fa, $02, $ef, $11, $f2, $05, $00, $05
27187     FE FD 02 04 
2718b     00 0C F1 09 
2718f     F8 0E 01 FA 
27193     13 EC 03 F8 | 	byte	$fe, $fd, $02, $04, $00, $0c, $f1, $09, $f8, $0e, $01, $fa, $13, $ec, $03, $f8
27197     0C F4 FE 04 
2719b     F9 07 F2 FA 
2719f     06 F9 04 00 
271a3     03 04 07 00 | 	byte	$0c, $f4, $fe, $04, $f9, $07, $f2, $fa, $06, $f9, $04, $00, $03, $04, $07, $00
271a7     02 0A F1 04 
271ab     07 F6 01 FB 
271af     03 FD 06 E9 
271b3     09 F9 01 FE | 	byte	$02, $0a, $f1, $04, $07, $f6, $01, $fb, $03, $fd, $06, $e9, $09, $f9, $01, $fe
271b7     FE 02 11 07 
271bb     EE 11 FD FC 
271bf     13 F3 02 03 
271c3     01 F6 03 0D | 	byte	$fe, $02, $11, $07, $ee, $11, $fd, $fc, $13, $f3, $02, $03, $01, $f6, $03, $0d
271c7     E6 27 E2 0C 
271cb     02 F5 09 FB 
271cf     00 FB 08 F0 
271d3     F6 11 F6 09 | 	byte	$e6, $27, $e2, $0c, $02, $f5, $09, $fb, $00, $fb, $08, $f0, $f6, $11, $f6, $09
271d7     00 F9 10 F8 
271db     05 FB 0A 0B 
271df     FA 15 F0 06 
271e3     F7 02 09 E8 | 	byte	$00, $f9, $10, $f8, $05, $fb, $0a, $0b, $fa, $15, $f0, $06, $f7, $02, $09, $e8
271e7     05 FB FE F2 
271eb     F3 21 01 03 
271ef     F5 05 08 EF 
271f3     18 FE 00 F6 | 	byte	$05, $fb, $fe, $f2, $f3, $21, $01, $03, $f5, $05, $08, $ef, $18, $fe, $00, $f6
271f7     05 03 03 F1 
271fb     03 07 FD E3 
271ff     02 05 EC 07 
27203     00 07 F8 FC | 	byte	$05, $03, $03, $f1, $03, $07, $fd, $e3, $02, $05, $ec, $07, $00, $07, $f8, $fc
27207     0B 18 FD FF 
2720b     0F FF E6 12 
2720f     F6 FB FD F9 
27213     0F F4 04 F7 | 	byte	$0b, $18, $fd, $ff, $0f, $ff, $e6, $12, $f6, $fb, $fd, $f9, $0f, $f4, $04, $f7
27217     07 00 EF 12 
2721b     EE 0D F9 12 
2721f     04 FC 1C F8 
27223     FC 03 F0 0A | 	byte	$07, $00, $ef, $12, $ee, $0d, $f9, $12, $04, $fc, $1c, $f8, $fc, $03, $f0, $0a
27227     F8 F6 FC 05 
2722b     FB 00 10 FF 
2722f     FA 07 F5 09 
27233     F5 03 0D 00 | 	byte	$f8, $f6, $fc, $05, $fb, $00, $10, $ff, $fa, $07, $f5, $09, $f5, $03, $0d, $00
27237     FE F8 09 F2 
2723b     03 02 00 03 
2723f     ED 0A 06 FB 
27243     06 FC 0D F9 | 	byte	$fe, $f8, $09, $f2, $03, $02, $00, $03, $ed, $0a, $06, $fb, $06, $fc, $0d, $f9
27247     FB 03 08 F8 
2724b     F3 FD 09 F3 
2724f     0A FD 03 02 
27253     05 0F 01 04 | 	byte	$fb, $03, $08, $f8, $f3, $fd, $09, $f3, $0a, $fd, $03, $02, $05, $0f, $01, $04
27257     FE 0C F9 F2 
2725b     06 EC FC 03 
2725f     00 03 03 00 
27263     00 09 F2 F8 | 	byte	$fe, $0c, $f9, $f2, $06, $ec, $fc, $03, $00, $03, $03, $00, $00, $09, $f2, $f8
27267     17 F5 08 FF 
2726b     02 05 F3 0B 
2726f     FA FA F5 01 
27273     03 EE 06 04 | 	byte	$17, $f5, $08, $ff, $02, $05, $f3, $0b, $fa, $fa, $f5, $01, $03, $ee, $06, $04
27277     00 03 FB 0B 
2727b     06 00 05 17 
2727f     F1 00 FC 03 
27283     F9 F8 F8 0A | 	byte	$00, $03, $fb, $0b, $06, $00, $05, $17, $f1, $00, $fc, $03, $f9, $f8, $f8, $0a
27287     02 F4 03 FF 
2728b     FA 0B 03 00 
2728f     F6 08 03 06 
27293     05 F6 0F E7 | 	byte	$02, $f4, $03, $ff, $fa, $0b, $03, $00, $f6, $08, $03, $06, $05, $f6, $0f, $e7
27297     0F FE FD F7 
2729b     FD 01 F0 08 
2729f     00 F9 0C EF 
272a3     10 06 00 11 | 	byte	$0f, $fe, $fd, $f7, $fd, $01, $f0, $08, $00, $f9, $0c, $ef, $10, $06, $00, $11
272a7     07 05 FC 0C 
272ab     F8 F9 F7 F2 
272af     0A F5 EE 04 
272b3     FD FC 07 08 | 	byte	$07, $05, $fc, $0c, $f8, $f9, $f7, $f2, $0a, $f5, $ee, $04, $fd, $fc, $07, $08
272b7     FF 08 05 FA 
272bb     16 FC FF 0F 
272bf     F1 01 F3 03 
272c3     EC 06 00 FF | 	byte	$ff, $08, $05, $fa, $16, $fc, $ff, $0f, $f1, $01, $f3, $03, $ec, $06, $00, $ff
272c7     0B FE F2 10 
272cb     FA 00 07 02 
272cf     FB FD FF 01 
272d3     02 02 F5 12 | 	byte	$0b, $fe, $f2, $10, $fa, $00, $07, $02, $fb, $fd, $ff, $01, $02, $02, $f5, $12
272d7     F4 F8 0B F2 
272db     08 05 0A F7 
272df     08 F2 FB 1B 
272e3     F1 07 FB FC | 	byte	$f4, $f8, $0b, $f2, $08, $05, $0a, $f7, $08, $f2, $fb, $1b, $f1, $07, $fb, $fc
272e7     FE F7 01 F5 
272eb     0F FA 03 0E 
272ef     F7 12 FE FC 
272f3     0B F4 07 EC | 	byte	$fe, $f7, $01, $f5, $0f, $fa, $03, $0e, $f7, $12, $fe, $fc, $0b, $f4, $07, $ec
272f7     03 FB FC 09 
272fb     02 00 FD F4 
272ff     0C F5 03 04 
27303     F6 00 07 0C | 	byte	$03, $fb, $fc, $09, $02, $00, $fd, $f4, $0c, $f5, $03, $04, $f6, $00, $07, $0c
27307     FF 08 FF 00 
2730b     04 EC 06 F6 
2730f     FD 03 F8 00 
27313     FD 04 FD 06 | 	byte	$ff, $08, $ff, $00, $04, $ec, $06, $f6, $fd, $03, $f8, $00, $fd, $04, $fd, $06
27317     0D F7 16 FF 
2731b     FA 0F F1 F9 
2731f     FC 09 FC F5 
27323     08 FB 06 F8 | 	byte	$0d, $f7, $16, $ff, $fa, $0f, $f1, $f9, $fc, $09, $fc, $f5, $08, $fb, $06, $f8
27327     F5 10 EF 01 
2732b     0E 02 03 04 
2732f     1C F8 01 F7 
27333     00 FE EA FE | 	byte	$f5, $10, $ef, $01, $0e, $02, $03, $04, $1c, $f8, $01, $f7, $00, $fe, $ea, $fe
27337     F2 01 02 FE 
2733b     0F FE FB 01 
2733f     10 FC F6 11 
27343     FB F7 0A 01 | 	byte	$f2, $01, $02, $fe, $0f, $fe, $fb, $01, $10, $fc, $f6, $11, $fb, $f7, $0a, $01
27347     04 F3 F1 04 
2734b     F9 F4 09 03 
2734f     02 02 0B F7 
27353     06 04 00 06 | 	byte	$04, $f3, $f1, $04, $f9, $f4, $09, $03, $02, $02, $0b, $f7, $06, $04, $00, $06
27357     00 F1 08 02 
2735b     F4 FB 03 F7 
2735f     FB FD F5 0D 
27363     F0 07 10 FB | 	byte	$00, $f1, $08, $02, $f4, $fb, $03, $f7, $fb, $fd, $f5, $0d, $f0, $07, $10, $fb
27367     F7 07 08 F9 
2736b     08 03 FB 0A 
2736f     F7 0C EF 01 
27373     F8 FA FB FB | 	byte	$f7, $07, $08, $f9, $08, $03, $fb, $0a, $f7, $0c, $ef, $01, $f8, $fa, $fb, $fb
27377     FE FD 01 08 
2737b     08 04 0D F8 
2737f     05 0B F6 03 
27383     0A F6 F9 FE | 	byte	$fe, $fd, $01, $08, $08, $04, $0d, $f8, $05, $0b, $f6, $03, $0a, $f6, $f9, $fe
27387     F5 00 FB 02 
2738b     05 F7 F7 0C 
2738f     06 00 12 0F 
27393     FB 02 FD 00 | 	byte	$f5, $00, $fb, $02, $05, $f7, $f7, $0c, $06, $00, $12, $0f, $fb, $02, $fd, $00
27397     F9 F3 FF 04 
2739b     FB EB 02 06 
2739f     00 00 0B 0A 
273a3     0A EF 09 05 | 	byte	$f9, $f3, $ff, $04, $fb, $eb, $02, $06, $00, $00, $0b, $0a, $0a, $ef, $09, $05
273a7     FA FB 0C 03 
273ab     EE 07 FD 07 
273af     F6 07 03 F7 
273b3     F8 FE 08 00 | 	byte	$fa, $fb, $0c, $03, $ee, $07, $fd, $07, $f6, $07, $03, $f7, $f8, $fe, $08, $00
273b7     F6 03 01 05 
273bb     FF 00 11 F6 
273bf     FD 01 07 FA 
273c3     F5 07 FA FB | 	byte	$f6, $03, $01, $05, $ff, $00, $11, $f6, $fd, $01, $07, $fa, $f5, $07, $fa, $fb
273c7     FC FE 04 03 
273cb     03 09 F9 FD 
273cf     00 03 FB 0B 
273d3     06 F3 03 00 | 	byte	$fc, $fe, $04, $03, $03, $09, $f9, $fd, $00, $03, $fb, $0b, $06, $f3, $03, $00
273d7     FA 02 FC 01 
273db     05 FA FE FA 
273df     01 FB 16 F5 
273e3     09 FD FC 0C | 	byte	$fa, $02, $fc, $01, $05, $fa, $fe, $fa, $01, $fb, $16, $f5, $09, $fd, $fc, $0c
273e7     FD 00 FB 07 
273eb     FE F3 05 FE 
273ef     F9 07 00 05 
273f3     FD 03 03 FF | 	byte	$fd, $00, $fb, $07, $fe, $f3, $05, $fe, $f9, $07, $00, $05, $fd, $03, $03, $ff
273f7     04 F7 01 F7 
273fb     00 FF FC 08 
273ff     F7 03 FA 02 
27403     00 06 05 05 | 	byte	$04, $f7, $01, $f7, $00, $ff, $fc, $08, $f7, $03, $fa, $02, $00, $06, $05, $05
27407     04 F7 03 02 
2740b     FA 03 00 F1 
2740f     00 00 F9 00 
27413     0F FC FE 07 | 	byte	$04, $f7, $03, $02, $fa, $03, $00, $f1, $00, $00, $f9, $00, $0f, $fc, $fe, $07
27417     F8 04 02 FE 
2741b     06 05 F9 0F 
2741f     F4 FC 02 05 
27423     FA 02 01 F5 | 	byte	$f8, $04, $02, $fe, $06, $05, $f9, $0f, $f4, $fc, $02, $05, $fa, $02, $01, $f5
27427     FE 03 EF 0C 
2742b     00 01 03 06 
2742f     FB FB 10 F6 
27433     15 EB 07 FC | 	byte	$fe, $03, $ef, $0c, $00, $01, $03, $06, $fb, $fb, $10, $f6, $15, $eb, $07, $fc
27437     FC 01 FC 00 
2743b     F9 0A FD F9 
2743f     00 FC 06 FD 
27443     09 07 FD 00 | 	byte	$fc, $01, $fc, $00, $f9, $0a, $fd, $f9, $00, $fc, $06, $fd, $09, $07, $fd, $00
27447     03 01 F8 06 
2744b     F8 00 09 F6 
2744f     FC 06 03 F9 
27453     0C FB FC FE | 	byte	$03, $01, $f8, $06, $f8, $00, $09, $f6, $fc, $06, $03, $f9, $0c, $fb, $fc, $fe
27457     F9 FC FC F6 
2745b     0C 07 F6 06 
2745f     07 F8 02 02 
27463     F4 04 04 F9 | 	byte	$f9, $fc, $fc, $f6, $0c, $07, $f6, $06, $07, $f8, $02, $02, $f4, $04, $04, $f9
27467     F5 06 F8 0C 
2746b     01 01 03 FC 
2746f     FC 03 00 FC 
27473     09 01 FF 03 | 	byte	$f5, $06, $f8, $0c, $01, $01, $03, $fc, $fc, $03, $00, $fc, $09, $01, $ff, $03
27477     FC F0 0C FA 
2747b     00 00 04 FB 
2747f     00 06 07 05 
27483     F7 01 0D F2 | 	byte	$fc, $f0, $0c, $fa, $00, $00, $04, $fb, $00, $06, $07, $05, $f7, $01, $0d, $f2
27487     0A FE 01 02 
2748b     FB FD F6 04 
2748f     EC 08 04 FD 
27493     08 FF 0B FD | 	byte	$0a, $fe, $01, $02, $fb, $fd, $f6, $04, $ec, $08, $04, $fd, $08, $ff, $0b, $fd
27497     00 04 0A F5 
2749b     FC 0B FA FA 
2749f     02 FF F8 FE 
274a3     FB 02 FE 01 | 	byte	$00, $04, $0a, $f5, $fc, $0b, $fa, $fa, $02, $ff, $f8, $fe, $fb, $02, $fe, $01
274a7     05 FF 01 FB 
274ab     FE 0B F7 0F 
274af     F8 08 FD FA 
274b3     01 FD 01 FB | 	byte	$05, $ff, $01, $fb, $fe, $0b, $f7, $0f, $f8, $08, $fd, $fa, $01, $fd, $01, $fb
274b7     07 FC F4 08 
274bb     FB 03 01 05 
274bf     FF FA 0C F8 
274c3     0C FC 02 03 | 	byte	$07, $fc, $f4, $08, $fb, $03, $01, $05, $ff, $fa, $0c, $f8, $0c, $fc, $02, $03
274c7     F3 04 FE FD 
274cb     FD 08 FD FC 
274cf     F8 01 01 08 
274d3     FB 09 08 FB | 	byte	$f3, $04, $fe, $fd, $fd, $08, $fd, $fc, $f8, $01, $01, $08, $fb, $09, $08, $fb
274d7     00 02 01 FA 
274db     FD 02 02 F8 
274df     F5 01 01 F8 
274e3     09 01 FA FE | 	byte	$00, $02, $01, $fa, $fd, $02, $02, $f8, $f5, $01, $01, $f8, $09, $01, $fa, $fe
274e7     01 FF 05 01 
274eb     09 02 00 F7 
274ef     05 F9 FB 07 
274f3     F4 07 F1 F9 | 	byte	$01, $ff, $05, $01, $09, $02, $00, $f7, $05, $f9, $fb, $07, $f4, $07, $f1, $f9
274f7     FE 03 06 F2 
274fb     13 FE 06 06 
274ff     00 09 F7 09 
27503     F9 FC F7 00 | 	byte	$fe, $03, $06, $f2, $13, $fe, $06, $06, $00, $09, $f7, $09, $f9, $fc, $f7, $00
27507     01 F9 08 F9 
2750b     01 00 FB 0A 
2750f     F9 00 FF 04 
27513     02 00 06 FB | 	byte	$01, $f9, $08, $f9, $01, $00, $fb, $0a, $f9, $00, $ff, $04, $02, $00, $06, $fb
27517     07 F9 F8 02 
2751b     00 F9 03 0B 
2751f     F7 05 03 FD 
27523     FE 00 04 00 | 	byte	$07, $f9, $f8, $02, $00, $f9, $03, $0b, $f7, $05, $03, $fd, $fe, $00, $04, $00
27527     FF 01 04 F8 
2752b     F9 06 FF FB 
2752f     01 F9 05 02 
27533     05 01 07 02 | 	byte	$ff, $01, $04, $f8, $f9, $06, $ff, $fb, $01, $f9, $05, $02, $05, $01, $07, $02
27537     01 F6 FE 01 
2753b     FE 04 01 FA 
2753f     03 01 FE 03 
27543     FE FE FA 08 | 	byte	$01, $f6, $fe, $01, $fe, $04, $01, $fa, $03, $01, $fe, $03, $fe, $fe, $fa, $08
27547     F5 03 FD 03 
2754b     09 FB 00 00 
2754f     03 F2 10 05 
27553     F4 0C FE FD | 	byte	$f5, $03, $fd, $03, $09, $fb, $00, $00, $03, $f2, $10, $05, $f4, $0c, $fe, $fd
27557     F9 02 F3 FD 
2755b     08 F7 07 02 
2755f     01 07 00 FE 
27563     F7 04 FB 06 | 	byte	$f9, $02, $f3, $fd, $08, $f7, $07, $02, $01, $07, $00, $fe, $f7, $04, $fb, $06
27567     FD FB 05 00 
2756b     FE 06 02 F7 
2756f     04 07 F8 FC 
27573     05 FB 05 FD | 	byte	$fd, $fb, $05, $00, $fe, $06, $02, $f7, $04, $07, $f8, $fc, $05, $fb, $05, $fd
27577     06 FB F7 00 
2757b     07 01 00 02 
2757f     03 00 01 FE 
27583     FF 04 01 03 | 	byte	$06, $fb, $f7, $00, $07, $01, $00, $02, $03, $00, $01, $fe, $ff, $04, $01, $03
27587     02 FC FF FE 
2758b     07 FA FE FC 
2758f     03 F6 F8 07 
27593     FA 01 07 07 | 	byte	$02, $fc, $ff, $fe, $07, $fa, $fe, $fc, $03, $f6, $f8, $07, $fa, $01, $07, $07
27597     FB FD 0A F7 
2759b     08 FE FD 05 
2759f     FC FB 01 FA 
275a3     01 05 F9 FF | 	byte	$fb, $fd, $0a, $f7, $08, $fe, $fd, $05, $fc, $fb, $01, $fa, $01, $05, $f9, $ff
275a7     06 FD FD 0F 
275ab     F9 FE 07 FA 
275af     FD 02 04 F9 
275b3     0C 03 FD 03 | 	byte	$06, $fd, $fd, $0f, $f9, $fe, $07, $fa, $fd, $02, $04, $f9, $0c, $03, $fd, $03
275b7     F5 01 FD F8 
275bb     FE 08 FB 01 
275bf     0C 02 02 03 
275c3     FE FE 02 F5 | 	byte	$f5, $01, $fd, $f8, $fe, $08, $fb, $01, $0c, $02, $02, $03, $fe, $fe, $02, $f5
275c7     00 05 FE FE 
275cb     FE 01 00 FE 
275cf     03 02 FB FE 
275d3     10 F9 F8 05 | 	byte	$00, $05, $fe, $fe, $fe, $01, $00, $fe, $03, $02, $fb, $fe, $10, $f9, $f8, $05
275d7     FE 00 FB FF 
275db     02 FF 05 01 
275df     07 F8 02 FF 
275e3     F7 04 FA 00 | 	byte	$fe, $00, $fb, $ff, $02, $ff, $05, $01, $07, $f8, $02, $ff, $f7, $04, $fa, $00
275e7     03 FB 02 00 
275eb     04 F7 04 FE 
275ef     02 02 FF 01 
275f3     FF FD FE 00 | 	byte	$03, $fb, $02, $00, $04, $f7, $04, $fe, $02, $02, $ff, $01, $ff, $fd, $fe, $00
275f7     F7 00 04 00 
275fb     FA 0D FA 00 
275ff     FF FF 03 FD 
27603     02 FE FF 03 | 	byte	$f7, $00, $04, $00, $fa, $0d, $fa, $00, $ff, $ff, $03, $fd, $02, $fe, $ff, $03
27607     00 04 FA 00 
2760b     FF 02 00 FE 
2760f     FC 04 00 FE 
27613     02 FE 00 FE | 	byte	$00, $04, $fa, $00, $ff, $02, $00, $fe, $fc, $04, $00, $fe, $02, $fe, $00, $fe
27617     05 F9 05 FB 
2761b     00 FE FE 05 
2761f     01 FD FC 03 
27623     00 FB 0A FC | 	byte	$05, $f9, $05, $fb, $00, $fe, $fe, $05, $01, $fd, $fc, $03, $00, $fb, $0a, $fc
27627     00 02 FF 02 
2762b     F9 01 03 F9 
2762f     04 FC 04 FE 
27633     FC 03 FD 06 | 	byte	$00, $02, $ff, $02, $f9, $01, $03, $f9, $04, $fc, $04, $fe, $fc, $03, $fd, $06
27637     FB FE 05 FD 
2763b     06 FF 03 FD 
2763f     FB 00 FF FD 
27643     FA 08 00 FD | 	byte	$fb, $fe, $05, $fd, $06, $ff, $03, $fd, $fb, $00, $ff, $fd, $fa, $08, $00, $fd
27647     FF FE 00 01 
2764b     01 03 F8 05 
2764f     FA 00 08 F7 
27653     02 FA 03 FB | 	byte	$ff, $fe, $00, $01, $01, $03, $f8, $05, $fa, $00, $08, $f7, $02, $fa, $03, $fb
27657     02 04 00 05 
2765b     FF 03 FB FB 
2765f     06 03 FD 00 
27663     05 F8 FC 03 | 	byte	$02, $04, $00, $05, $ff, $03, $fb, $fb, $06, $03, $fd, $00, $05, $f8, $fc, $03
27667     02 02 01 00 
2766b     FF FD FC 01 
2766f     04 01 04 02 
27673     F7 01 04 00 | 	byte	$02, $02, $01, $00, $ff, $fd, $fc, $01, $04, $01, $04, $02, $f7, $01, $04, $00
27677     09 FD FC 02 
2767b     FA F6 FD 07 
2767f     00 FE 01 FB 
27683     FF FD 05 09 | 	byte	$09, $fd, $fc, $02, $fa, $f6, $fd, $07, $00, $fe, $01, $fb, $ff, $fd, $05, $09
27687     00 00 FE FC 
2768b     02 FF FF 01 
2768f     04 FC FD 00 
27693     FC FE FD 06 | 	byte	$00, $00, $fe, $fc, $02, $ff, $ff, $01, $04, $fc, $fd, $00, $fc, $fe, $fd, $06
27697     FD FD FE 00 
2769b     00 02 04 03 
2769f     FC 06 00 FE 
276a3     FF 01 FD FD | 	byte	$fd, $fd, $fe, $00, $00, $02, $04, $03, $fc, $06, $00, $fe, $ff, $01, $fd, $fd
276a7     04 F9 FA 02 
276ab     FD 00 00 04 
276af     02 FD 02 04 
276b3     02 FA 00 01 | 	byte	$04, $f9, $fa, $02, $fd, $00, $00, $04, $02, $fd, $02, $04, $02, $fa, $00, $01
276b7     FA 05 FF FF 
276bb     00 FD 00 03 
276bf     FF FD 02 02 
276c3     FD FF 00 FD | 	byte	$fa, $05, $ff, $ff, $00, $fd, $00, $03, $ff, $fd, $02, $02, $fd, $ff, $00, $fd
276c7     05 FA 0B FE 
276cb     FE FE FF FE 
276cf     FC 03 FC 00 
276d3     02 FB 03 FF | 	byte	$05, $fa, $0b, $fe, $fe, $fe, $ff, $fe, $fc, $03, $fc, $00, $02, $fb, $03, $ff
276d7     09 00 00 04 
276db     FB FF FB 02 
276df     FB FD 04 00 
276e3     FE FF FF FF | 	byte	$09, $00, $00, $04, $fb, $ff, $fb, $02, $fb, $fd, $04, $00, $fe, $ff, $ff, $ff
276e7     00 02 01 02 
276eb     FC 02 01 FD 
276ef     FE 00 FD 03 
276f3     02 FD FF 02 | 	byte	$00, $02, $01, $02, $fc, $02, $01, $fd, $fe, $00, $fd, $03, $02, $fd, $ff, $02
276f7     FB 03 FD 00 
276fb     FE 05 00 01 
276ff     00 FE 03 FB 
27703     02 FD 00 01 | 	byte	$fb, $03, $fd, $00, $fe, $05, $00, $01, $00, $fe, $03, $fb, $02, $fd, $00, $01
27707     01 01 01 07 
2770b     FE FE FE F8 
2770f     03 FF 01 02 
27713     FC 01 FF FD | 	byte	$01, $01, $01, $07, $fe, $fe, $fe, $f8, $03, $ff, $01, $02, $fc, $01, $ff, $fd
27717     FE 00 03 FE 
2771b     07 FE FD FC 
2771f     05 FF FE 01 
27723     FC 03 FA 01 | 	byte	$fe, $00, $03, $fe, $07, $fe, $fd, $fc, $05, $ff, $fe, $01, $fc, $03, $fa, $01
27727     05 FE 05 01 
2772b     00 FE FC FE 
2772f     F9 08 F7 03 
27733     FE 02 00 00 | 	byte	$05, $fe, $05, $01, $00, $fe, $fc, $fe, $f9, $08, $f7, $03, $fe, $02, $00, $00
27737     FF 00 05 FF 
2773b     03 FE FF 04 
2773f     FC 01 FD FD 
27743     01 FC 03 FE | 	byte	$ff, $00, $05, $ff, $03, $fe, $ff, $04, $fc, $01, $fd, $fd, $01, $fc, $03, $fe
27747     00 01 03 FE 
2774b     FB 02 F9 01 
2774f     02 02 FF 01 
27753     01 01 01 FC | 	byte	$00, $01, $03, $fe, $fb, $02, $f9, $01, $02, $02, $ff, $01, $01, $01, $01, $fc
27757     00 03 01 FF 
2775b     FC 04 FE FA 
2775f     00 FB 04 FB 
27763     03 00 05 00 | 	byte	$00, $03, $01, $ff, $fc, $04, $fe, $fa, $00, $fb, $04, $fb, $03, $00, $05, $00
27767     08 02 F7 04 
2776b     FF 00 FD 00 
2776f     FE FE 01 FE 
27773     04 03 FD 01 | 	byte	$08, $02, $f7, $04, $ff, $00, $fd, $00, $fe, $fe, $01, $fe, $04, $03, $fd, $01
27777     FE 01 FB FD 
2777b     FF 00 01 FF 
2777f     01 FD 01 02 
27783     03 FE FF 01 | 	byte	$fe, $01, $fb, $fd, $ff, $00, $01, $ff, $01, $fd, $01, $02, $03, $fe, $ff, $01
27787     FE FF 05 FA 
2778b     02 01 FD FE 
2778f     FC FF FD 01 
27793     FE 07 FF 03 | 	byte	$fe, $ff, $05, $fa, $02, $01, $fd, $fe, $fc, $ff, $fd, $01, $fe, $07, $ff, $03
27797     00 01 FE 00 
2779b     00 00 00 F4 
2779f     DE 03 F7 00 
277a3     1A E9 EE D4 | 	byte	$00, $01, $fe, $00, $00, $00, $00, $f4, $de, $03, $f7, $00, $1a, $e9, $ee, $d4
277a7     14 0A DE E9 
277ab     09 EF 14 DE 
277af     FF 25 00 E9 
277b3     DE F0 0C 00 | 	byte	$14, $0a, $de, $e9, $09, $ef, $14, $de, $ff, $25, $00, $e9, $de, $f0, $0c, $00
277b7     F4 15 F3 09 
277bb     1A 0A FC 00 
277bf     EE F5 F9 0F 
277c3     FF 11 02 00 | 	byte	$f4, $15, $f3, $09, $1a, $0a, $fc, $00, $ee, $f5, $f9, $0f, $ff, $11, $02, $00
277c7     F4 13 00 EE 
277cb     F3 08 F6 00 
277cf     0D 04 06 0D 
277d3     0B 07 13 04 | 	byte	$f4, $13, $00, $ee, $f3, $08, $f6, $00, $0d, $04, $06, $0d, $0b, $07, $13, $04
277d7     02 F9 F9 F8 
277db     EF F7 02 F4 
277df     09 06 05 00 
277e3     FC 06 0A 02 | 	byte	$02, $f9, $f9, $f8, $ef, $f7, $02, $f4, $09, $06, $05, $00, $fc, $06, $0a, $02
277e7     08 F5 F1 FB 
277eb     FD 00 00 F8 
277ef     F7 FF 03 FC 
277f3     F6 F9 FF F6 | 	byte	$08, $f5, $f1, $fb, $fd, $00, $00, $f8, $f7, $ff, $03, $fc, $f6, $f9, $ff, $f6
277f7     04 07 FD 04 
277fb     FA FB 01 FF 
277ff     FF FB FD FB 
27803     F9 FB FC FB | 	byte	$04, $07, $fd, $04, $fa, $fb, $01, $ff, $ff, $fb, $fd, $fb, $f9, $fb, $fc, $fb
27807     FE FD F9 F6 
2780b     F6 FA FD F8 
2780f     F6 FF 00 02 
27813     FD 01 FB FB | 	byte	$fe, $fd, $f9, $f6, $f6, $fa, $fd, $f8, $f6, $ff, $00, $02, $fd, $01, $fb, $fb
27817     FD FD F9 F9 
2781b     F9 FC FB FD 
2781f     00 00 2A 1A 
27823     F4 D4 F4 F4 | 	byte	$fd, $fd, $f9, $f9, $f9, $fc, $fb, $fd, $00, $00, $2a, $1a, $f4, $d4, $f4, $f4
27827     1F D4 EE 2A 
2782b     E3 F4 E9 2A 
2782f     2A 00 14 DE 
27833     15 F4 D4 E6 | 	byte	$1f, $d4, $ee, $2a, $e3, $f4, $e9, $2a, $2a, $00, $14, $de, $15, $f4, $d4, $e6
27837     E9 04 2A E9 
2783b     FF 1A D9 E9 
2783f     D8 09 1E 2A 
27843     15 04 15 DE | 	byte	$e9, $04, $2a, $e9, $ff, $1a, $d9, $e9, $d8, $09, $1e, $2a, $15, $04, $15, $de
27847     1C E9 D4 2A 
2784b     04 2A FC D4 
2784f     0F 10 09 EC 
27853     18 EC 04 E9 | 	byte	$1c, $e9, $d4, $2a, $04, $2a, $fc, $d4, $0f, $10, $09, $ec, $18, $ec, $04, $e9
27857     0C 00 11 00 
2785b     DE DE FD F9 
2785f     DF 0D 2A 0F 
27863     04 03 F6 04 | 	byte	$0c, $00, $11, $00, $de, $de, $fd, $f9, $df, $0d, $2a, $0f, $04, $03, $f6, $04
27867     FC F9 00 04 
2786b     E9 18 18 E3 
2786f     FD 00 04 FC 
27873     0F 11 00 EE | 	byte	$fc, $f9, $00, $04, $e9, $18, $18, $e3, $fd, $00, $04, $fc, $0f, $11, $00, $ee
27877     F4 14 00 DE 
2787b     EA 08 F9 EB 
2787f     F4 ED F9 0C 
27883     0F F4 F8 0F | 	byte	$f4, $14, $00, $de, $ea, $08, $f9, $eb, $f4, $ed, $f9, $0c, $0f, $f4, $f8, $0f
27887     09 0D 14 08 
2788b     FA FF 00 E9 
2788f     F4 E9 DE E9 
27893     FB 0D FB 04 | 	byte	$09, $0d, $14, $08, $fa, $ff, $00, $e9, $f4, $e9, $de, $e9, $fb, $0d, $fb, $04
27897     06 02 09 0A 
2789b     F0 F9 FF FC 
2789f     02 EE F9 F9 
278a3     F6 F4 F4 00 | 	byte	$06, $02, $09, $0a, $f0, $f9, $ff, $fc, $02, $ee, $f9, $f9, $f6, $f4, $f4, $00
278a7     01 00 FC FF 
278ab     02 00 FC FA 
278af     FF 00 FC FC 
278b3     F9 FF 00 03 | 	byte	$01, $00, $fc, $ff, $02, $00, $fc, $fa, $ff, $00, $fc, $fc, $f9, $ff, $00, $03
278b7     F6 FF F7 FD 
278bb     FB FD F6 FF 
278bf     F5 00 F8 FF 
278c3     02 00 FD FC | 	byte	$f6, $ff, $f7, $fd, $fb, $fd, $f6, $ff, $f5, $00, $f8, $ff, $02, $00, $fd, $fc
278c7     00 FC 00 02 
278cb     F9 FB FC FB 
278cf     FF 02 00 02 
278d3     04 07 02 00 | 	byte	$00, $fc, $00, $02, $f9, $fb, $fc, $fb, $ff, $02, $00, $02, $04, $07, $02, $00
278d7     F8 F9 F6 F6 
278db     FD FC FC 02 
278df     03 08 0C 2A 
278e3     2A D4 D4 FF | 	byte	$f8, $f9, $f6, $f6, $fd, $fc, $fc, $02, $03, $08, $0c, $2a, $2a, $d4, $d4, $ff
278e7     D4 D4 25 E9 
278eb     1C 1E 04 D4 
278ef     DE 2A 2A 0C 
278f3     29 E9 F4 D6 | 	byte	$d4, $d4, $25, $e9, $1c, $1e, $04, $d4, $de, $2a, $2a, $0c, $29, $e9, $f4, $d6
278f7     D4 DE 1F DE 
278fb     25 F9 2A 29 
278ff     0A F4 04 1F 
27903     D4 F5 F5 F9 | 	byte	$d4, $de, $1f, $de, $25, $f9, $2a, $29, $0a, $f4, $04, $1f, $d4, $f5, $f5, $f9
27907     D4 04 D6 15 
2790b     07 18 FF 29 
2790f     00 07 D6 E9 
27913     14 E4 2A 2A | 	byte	$d4, $04, $d6, $15, $07, $18, $ff, $29, $00, $07, $d6, $e9, $14, $e4, $2a, $2a
27917     0B 0F D4 13 
2791b     E9 F9 E5 EE 
2791f     0F FF D4 18 
27923     0D 24 EB 2A | 	byte	$0b, $0f, $d4, $13, $e9, $f9, $e5, $ee, $0f, $ff, $d4, $18, $0d, $24, $eb, $2a
27927     00 00 D4 D4 
2792b     F7 F4 09 0A 
2792f     14 15 13 1A 
27933     F4 04 1A 0A | 	byte	$00, $00, $d4, $d4, $f7, $f4, $09, $0a, $14, $15, $13, $1a, $f4, $04, $1a, $0a
27937     DF E3 F4 F4 
2793b     08 00 F0 FF 
2793f     FC 04 02 EF 
27943     04 E2 FF 04 | 	byte	$df, $e3, $f4, $f4, $08, $00, $f0, $ff, $fc, $04, $02, $ef, $04, $e2, $ff, $04
27947     07 09 04 00 
2794b     F1 E3 F9 02 
2794f     02 F6 EE F4 
27953     F1 FB FF 18 | 	byte	$07, $09, $04, $00, $f1, $e3, $f9, $02, $02, $f6, $ee, $f4, $f1, $fb, $ff, $18
27957     02 00 EE FF 
2795b     FF 1C F0 F1 
2795f     F4 0C F4 08 
27963     04 F7 ED 02 | 	byte	$02, $00, $ee, $ff, $ff, $1c, $f0, $f1, $f4, $0c, $f4, $08, $04, $f7, $ed, $02
27967     EE F4 F4 F4 
2796b     F6 00 11 04 
2796f     09 0D E9 F0 
27973     2A D9 1E F1 | 	byte	$ee, $f4, $f4, $f4, $f6, $00, $11, $04, $09, $0d, $e9, $f0, $2a, $d9, $1e, $f1
27977     F4 18 E9 E9 
2797b     E9 D4 E7 2A 
2797f     15 D4 0F 1F 
27983     1A 2A 02 2A | 	byte	$f4, $18, $e9, $e9, $e9, $d4, $e7, $2a, $15, $d4, $0f, $1f, $1a, $2a, $02, $2a
27987     24 0A D4 D4 
2798b     E9 27 09 D4 
2798f     E9 D8 2A 00 
27993     D4 E9 0A D4 | 	byte	$24, $0a, $d4, $d4, $e9, $27, $09, $d4, $e9, $d8, $2a, $00, $d4, $e9, $0a, $d4
27997     FF 2A 2A 1F 
2799b     D4 E9 D4 DE 
2799f     2A 09 00 E9 
279a3     1F 2A 2A 2A | 	byte	$ff, $2a, $2a, $1f, $d4, $e9, $d4, $de, $2a, $09, $00, $e9, $1f, $2a, $2a, $2a
279a7     D4 2A 00 E9 
279ab     D4 D4 D4 DB 
279af     E0 DE 2A 1A 
279b3     D4 2A E9 0A | 	byte	$d4, $2a, $00, $e9, $d4, $d4, $d4, $db, $e0, $de, $2a, $1a, $d4, $2a, $e9, $0a
279b7     F4 2A 18 15 
279bb     2A 0A FF 15 
279bf     0F E7 F4 2A 
279c3     DE D4 14 00 | 	byte	$f4, $2a, $18, $15, $2a, $0a, $ff, $15, $0f, $e7, $f4, $2a, $de, $d4, $14, $00
279c7     E9 15 27 1E 
279cb     2A 27 D4 D4 
279cf     E9 00 14 2A 
279d3     2A D4 E9 D4 | 	byte	$e9, $15, $27, $1e, $2a, $27, $d4, $d4, $e9, $00, $14, $2a, $2a, $d4, $e9, $d4
279d7     D4 D8 2A 27 
279db     14 0A E9 2A 
279df     0A E3 D6 2A 
279e3     2A 00 E3 DE | 	byte	$d4, $d8, $2a, $27, $14, $0a, $e9, $2a, $0a, $e3, $d6, $2a, $2a, $00, $e3, $de
279e7     28 D6 DE D4 
279eb     F4 F4 2A 11 
279ef     27 2A 15 D6 
279f3     E0 27 D4 D8 | 	byte	$28, $d6, $de, $d4, $f4, $f4, $2a, $11, $27, $2a, $15, $d6, $e0, $27, $d4, $d8
279f7     D4 EE F1 D4 
279fb     D4 2A 1F 1E 
279ff     2A 25 1A D4 
27a03     D4 E3 29 D4 | 	byte	$d4, $ee, $f1, $d4, $d4, $2a, $1f, $1e, $2a, $25, $1a, $d4, $d4, $e3, $29, $d4
27a07     D4 D4 FF 0A 
27a0b     2A 2A 1F 27 
27a0f     2A 02 EE DA 
27a13     D4 D4 24 F6 | 	byte	$d4, $d4, $ff, $0a, $2a, $2a, $1f, $27, $2a, $02, $ee, $da, $d4, $d4, $24, $f6
27a17     E1 D4 15 D4 
27a1b     FF 2A 2A 2A 
27a1f     24 D4 FF 0A 
27a23     D4 D4 E9 E9 | 	byte	$e1, $d4, $15, $d4, $ff, $2a, $2a, $2a, $24, $d4, $ff, $0a, $d4, $d4, $e9, $e9
27a27     D4 F6 EC 2A 
27a2b     25 1F D8 EC 
27a2f     E9 2A 2A 21 
27a33     E5 1E 00 D4 | 	byte	$d4, $f6, $ec, $2a, $25, $1f, $d8, $ec, $e9, $2a, $2a, $21, $e5, $1e, $00, $d4
27a37     F4 09 F3 DE 
27a3b     E9 00 D9 D6 
27a3f     0D 00 F9 15 
27a43     28 24 0A FF | 	byte	$f4, $09, $f3, $de, $e9, $00, $d9, $d6, $0d, $00, $f9, $15, $28, $24, $0a, $ff
27a47     2A 00 D9 D6 
27a4b     1A 0F 0F E0 
27a4f     2A 15 E9 E9 
27a53     D4 D4 D9 EB | 	byte	$2a, $00, $d9, $d6, $1a, $0f, $0f, $e0, $2a, $15, $e9, $e9, $d4, $d4, $d9, $eb
27a57     D4 00 14 2A 
27a5b     00 2A 1F DE 
27a5f     2A D4 E3 D4 
27a63     14 15 D4 E9 | 	byte	$d4, $00, $14, $2a, $00, $2a, $1f, $de, $2a, $d4, $e3, $d4, $14, $15, $d4, $e9
27a67     E3 D4 14 2A 
27a6b     E9 F4 EE 2A 
27a6f     0A FF 1A D4 
27a73     FF 0F F4 0A | 	byte	$e3, $d4, $14, $2a, $e9, $f4, $ee, $2a, $0a, $ff, $1a, $d4, $ff, $0f, $f4, $0a
27a77     E9 D6 FF 2A 
27a7b     0A F4 2A EB 
27a7f     14 F9 E9 D4 
27a83     EE 1E EC D4 | 	byte	$e9, $d6, $ff, $2a, $0a, $f4, $2a, $eb, $14, $f9, $e9, $d4, $ee, $1e, $ec, $d4
27a87     D4 14 29 E3 
27a8b     14 0A 04 D8 
27a8f     EB 14 2A 0F 
27a93     14 DE DA D4 | 	byte	$d4, $14, $29, $e3, $14, $0a, $04, $d8, $eb, $14, $2a, $0f, $14, $de, $da, $d4
27a97     D6 2A 1C 1E 
27a9b     FF 11 E9 0F 
27a9f     FB E9 13 14 
27aa3     D6 F9 FE F4 | 	byte	$d6, $2a, $1c, $1e, $ff, $11, $e9, $0f, $fb, $e9, $13, $14, $d6, $f9, $fe, $f4
27aa7     EB 15 1A 14 
27aab     04 DE EB 27 
27aaf     E8 EE E9 2A 
27ab3     04 EE 0A E9 | 	byte	$eb, $15, $1a, $14, $04, $de, $eb, $27, $e8, $ee, $e9, $2a, $04, $ee, $0a, $e9
27ab7     F1 F0 F1 1A 
27abb     00 EB D4 24 
27abf     2A 15 0D E1 
27ac3     DE EB E9 F4 | 	byte	$f1, $f0, $f1, $1a, $00, $eb, $d4, $24, $2a, $15, $0d, $e1, $de, $eb, $e9, $f4
27ac7     0F 2A 0A D4 
27acb     FF EE 09 E9 
27acf     EB 00 DE 0F 
27ad3     1C 15 E9 FF | 	byte	$0f, $2a, $0a, $d4, $ff, $ee, $09, $e9, $eb, $00, $de, $0f, $1c, $15, $e9, $ff
27ad7     F9 DE E9 DE 
27adb     09 04 14 02 
27adf     09 E9 F9 0F 
27ae3     2A 04 DE EC | 	byte	$f9, $de, $e9, $de, $09, $04, $14, $02, $09, $e9, $f9, $0f, $2a, $04, $de, $ec
27ae7     00 E9 FE E9 
27aeb     FC EC EE E4 
27aef     E6 1A 00 FF 
27af3     F4 FF 0F 2A | 	byte	$00, $e9, $fe, $e9, $fc, $ec, $ee, $e4, $e6, $1a, $00, $ff, $f4, $ff, $0f, $2a
27af7     0A F6 EE 00 
27afb     D4 D8 29 EE 
27aff     E3 D4 0A 2A 
27b03     15 27 FF E9 | 	byte	$0a, $f6, $ee, $00, $d4, $d8, $29, $ee, $e3, $d4, $0a, $2a, $15, $27, $ff, $e9
27b07     0A D4 FF 15 
27b0b     0F 21 0A E9 
27b0f     2A 00 00 D9 
27b13     D4 D4 2A 00 | 	byte	$0a, $d4, $ff, $15, $0f, $21, $0a, $e9, $2a, $00, $00, $d9, $d4, $d4, $2a, $00
27b17     D8 1A D4 14 
27b1b     00 E9 FB 2A 
27b1f     2A 2A D4 13 
27b23     0F EE E9 F9 | 	byte	$d8, $1a, $d4, $14, $00, $e9, $fb, $2a, $2a, $2a, $d4, $13, $0f, $ee, $e9, $f9
27b27     E9 2A 15 DE 
27b2b     FF 15 F9 00 
27b2f     F1 2A 00 E9 
27b33     EE D4 00 E9 | 	byte	$e9, $2a, $15, $de, $ff, $15, $f9, $00, $f1, $2a, $00, $e9, $ee, $d4, $00, $e9
27b37     11 F4 2A 00 
27b3b     09 24 0A D4 
27b3f     0A 1A 15 DB 
27b43     FF E9 FF 00 | 	byte	$11, $f4, $2a, $00, $09, $24, $0a, $d4, $0a, $1a, $15, $db, $ff, $e9, $ff, $00
27b47     0D 0F 15 0A 
27b4b     06 1A D4 F2 
27b4f     E3 F4 DE 29 
27b53     F6 22 F9 E9 | 	byte	$0d, $0f, $15, $0a, $06, $1a, $d4, $f2, $e3, $f4, $de, $29, $f6, $22, $f9, $e9
27b57     E1 E9 25 04 
27b5b     04 0F DE 00 
27b5f     E9 F4 FC 2A 
27b63     2A 07 E9 E9 | 	byte	$e1, $e9, $25, $04, $04, $0f, $de, $00, $e9, $f4, $fc, $2a, $2a, $07, $e9, $e9
27b67     E3 DC EE F4 
27b6b     09 0F 29 D9 
27b6f     FC 0A E2 09 
27b73     EE D9 F9 22 | 	byte	$e3, $dc, $ee, $f4, $09, $0f, $29, $d9, $fc, $0a, $e2, $09, $ee, $d9, $f9, $22
27b77     F4 E3 F4 FF 
27b7b     0D E9 FF FF 
27b7f     2A 1A E6 E9 
27b83     0F D4 D4 DE | 	byte	$f4, $e3, $f4, $ff, $0d, $e9, $ff, $ff, $2a, $1a, $e6, $e9, $0f, $d4, $d4, $de
27b87     1F F4 ED 2A 
27b8b     1C 04 00 ED 
27b8f     FF F6 D4 D9 
27b93     EC E9 14 02 | 	byte	$1f, $f4, $ed, $2a, $1c, $04, $00, $ed, $ff, $f6, $d4, $d9, $ec, $e9, $14, $02
27b97     2A 25 04 F1 
27b9b     FF 15 11 00 
27b9f     D6 F7 FF EC 
27ba3     E9 D9 0F EE | 	byte	$2a, $25, $04, $f1, $ff, $15, $11, $00, $d6, $f7, $ff, $ec, $e9, $d9, $0f, $ee
27ba7     14 2A 1A F4 
27bab     02 0F 1E E9 
27baf     2A 15 D4 D4 
27bb3     D6 DC FF 2A | 	byte	$14, $2a, $1a, $f4, $02, $0f, $1e, $e9, $2a, $15, $d4, $d4, $d6, $dc, $ff, $2a
27bb7     14 2A 2A 2A 
27bbb     E3 F4 E6 E9 
27bbf     E9 1E F4 0D 
27bc3     F1 F4 D6 F9 | 	byte	$14, $2a, $2a, $2a, $e3, $f4, $e6, $e9, $e9, $1e, $f4, $0d, $f1, $f4, $d6, $f9
27bc7     F4 14 F4 F4 
27bcb     FF 15 E9 00 
27bcf     FF 0D 1E 15 
27bd3     14 DC 1E 00 | 	byte	$f4, $14, $f4, $f4, $ff, $15, $e9, $00, $ff, $0d, $1e, $15, $14, $dc, $1e, $00
27bd7     F2 F4 04 DE 
27bdb     25 D4 09 18 
27bdf     F9 D4 E3 F7 
27be3     14 F5 F9 0D | 	byte	$f2, $f4, $04, $de, $25, $d4, $09, $18, $f9, $d4, $e3, $f7, $14, $f5, $f9, $0d
27be7     DE 1E 0C F9 
27beb     1A 0D 02 00 
27bef     DB 18 D4 DE 
27bf3     FF F4 F9 04 | 	byte	$de, $1e, $0c, $f9, $1a, $0d, $02, $00, $db, $18, $d4, $de, $ff, $f4, $f9, $04
27bf7     14 F4 04 00 
27bfb     2A 11 EE D9 
27bff     E9 04 0A F5 
27c03     D4 D8 00 FD | 	byte	$14, $f4, $04, $00, $2a, $11, $ee, $d9, $e9, $04, $0a, $f5, $d4, $d8, $00, $fd
27c07     19 04 FC 29 
27c0b     F3 F9 15 D6 
27c0f     E9 06 F9 F9 
27c13     11 03 09 02 | 	byte	$19, $04, $fc, $29, $f3, $f9, $15, $d6, $e9, $06, $f9, $f9, $11, $03, $09, $02
27c17     FF 18 E9 EE 
27c1b     FF 14 EE E9 
27c1f     05 FB EE F9 
27c23     18 14 F9 F4 | 	byte	$ff, $18, $e9, $ee, $ff, $14, $ee, $e9, $05, $fb, $ee, $f9, $18, $14, $f9, $f4
27c27     E3 E3 09 1C 
27c2b     13 0B EC E0 
27c2f     FF 0D FF 0A 
27c33     FC F9 FB E9 | 	byte	$e3, $e3, $09, $1c, $13, $0b, $ec, $e0, $ff, $0d, $ff, $0a, $fc, $f9, $fb, $e9
27c37     04 1A 15 05 
27c3b     1E 0A ED F6 
27c3f     F7 F4 08 FF 
27c43     F9 0D E9 11 | 	byte	$04, $1a, $15, $05, $1e, $0a, $ed, $f6, $f7, $f4, $08, $ff, $f9, $0d, $e9, $11
27c47     D4 FF 17 E6 
27c4b     2A 18 04 0C 
27c4f     EE D6 14 27 
27c53     E9 DE E9 EE | 	byte	$d4, $ff, $17, $e6, $2a, $18, $04, $0c, $ee, $d6, $14, $27, $e9, $de, $e9, $ee
27c57     23 04 02 0F 
27c5b     2A F4 D4 E9 
27c5f     FF 1A 07 0A 
27c63     DE 14 13 1A | 	byte	$23, $04, $02, $0f, $2a, $f4, $d4, $e9, $ff, $1a, $07, $0a, $de, $14, $13, $1a
27c67     FC 25 DE D4 
27c6b     D4 E9 1A 21 
27c6f     1F 00 DE 00 
27c73     FF 0A F4 F4 | 	byte	$fc, $25, $de, $d4, $d4, $e9, $1a, $21, $1f, $00, $de, $00, $ff, $0a, $f4, $f4
27c77     D4 E6 13 EE 
27c7b     14 00 2A 15 
27c7f     1E 06 0F F4 
27c83     F4 FC F4 D4 | 	byte	$d4, $e6, $13, $ee, $14, $00, $2a, $15, $1e, $06, $0f, $f4, $f4, $fc, $f4, $d4
27c87     18 D8 FA E6 
27c8b     F9 FF EC 11 
27c8f     04 0C 00 F5 
27c93     07 EE 2A 00 | 	byte	$18, $d8, $fa, $e6, $f9, $ff, $ec, $11, $04, $0c, $00, $f5, $07, $ee, $2a, $00
27c97     E3 FF 00 FF 
27c9b     14 0A E7 ED 
27c9f     06 F9 EE EE 
27ca3     EE E6 FF 2A | 	byte	$e3, $ff, $00, $ff, $14, $0a, $e7, $ed, $06, $f9, $ee, $ee, $ee, $e6, $ff, $2a
27ca7     21 27 1F F4 
27cab     D4 F1 EE 11 
27caf     0A E6 E9 F4 
27cb3     F4 DF FC 0F | 	byte	$21, $27, $1f, $f4, $d4, $f1, $ee, $11, $0a, $e6, $e9, $f4, $f4, $df, $fc, $0f
27cb7     06 14 14 22 
27cbb     0F 21 00 E9 
27cbf     D4 EE D4 E9 
27cc3     FF 1F FC FF | 	byte	$06, $14, $14, $22, $0f, $21, $00, $e9, $d4, $ee, $d4, $e9, $ff, $1f, $fc, $ff
27cc7     15 00 16 EE 
27ccb     1C 15 04 D4 
27ccf     F4 D9 DB F9 
27cd3     FF 24 15 F5 | 	byte	$15, $00, $16, $ee, $1c, $15, $04, $d4, $f4, $d9, $db, $f9, $ff, $24, $15, $f5
27cd7     FC 2A 25 15 
27cdb     D4 DE EB D4 
27cdf     E9 F4 E3 13 
27ce3     0F 1E 27 1F | 	byte	$fc, $2a, $25, $15, $d4, $de, $eb, $d4, $e9, $f4, $e3, $13, $0f, $1e, $27, $1f
27ce7     D4 04 F0 0A 
27ceb     FF 06 D6 D8 
27cef     D6 E9 F9 2A 
27cf3     F4 14 1A 09 | 	byte	$d4, $04, $f0, $0a, $ff, $06, $d6, $d8, $d6, $e9, $f9, $2a, $f4, $14, $1a, $09
27cf7     EE E0 FF 03 
27cfb     F1 D9 F7 F4 
27cff     0F F6 00 D8 
27d03     06 00 0D E9 | 	byte	$ee, $e0, $ff, $03, $f1, $d9, $f7, $f4, $0f, $f6, $00, $d8, $06, $00, $0d, $e9
27d07     0F 14 10 00 
27d0b     EB 0F 04 0F 
27d0f     09 15 E6 F4 
27d13     F4 DE FB 00 | 	byte	$0f, $14, $10, $00, $eb, $0f, $04, $0f, $09, $15, $e6, $f4, $f4, $de, $fb, $00
27d17     08 EE F4 18 
27d1b     27 04 F4 F4 
27d1f     E9 F6 F6 F9 
27d23     0A 1E 18 1C | 	byte	$08, $ee, $f4, $18, $27, $04, $f4, $f4, $e9, $f6, $f6, $f9, $0a, $1e, $18, $1c
27d27     0D 11 0A E8 
27d2b     D4 DE 0F D4 
27d2f     FF F9 E9 15 
27d33     0B 08 E9 F4 | 	byte	$0d, $11, $0a, $e8, $d4, $de, $0f, $d4, $ff, $f9, $e9, $15, $0b, $08, $e9, $f4
27d37     13 02 0A 1E 
27d3b     00 F1 0C 10 
27d3f     F6 E9 08 EE 
27d43     FF 15 E3 FF | 	byte	$13, $02, $0a, $1e, $00, $f1, $0c, $10, $f6, $e9, $08, $ee, $ff, $15, $e3, $ff
27d47     21 F7 0F 0B 
27d4b     E9 E9 FF 0A 
27d4f     DE 0F 0F 0A 
27d53     EE 14 F6 F0 | 	byte	$21, $f7, $0f, $0b, $e9, $e9, $ff, $0a, $de, $0f, $0f, $0a, $ee, $14, $f6, $f0
27d57     FD 09 18 E9 
27d5b     FC 0F F9 08 
27d5f     FF 14 00 E3 
27d63     F9 F4 EE FF | 	byte	$fd, $09, $18, $e9, $fc, $0f, $f9, $08, $ff, $14, $00, $e3, $f9, $f4, $ee, $ff
27d67     FF 0A FC E0 
27d6b     FF 00 10 05 
27d6f     1E 00 08 F6 
27d73     E5 02 0D F4 | 	byte	$ff, $0a, $fc, $e0, $ff, $00, $10, $05, $1e, $00, $08, $f6, $e5, $02, $0d, $f4
27d77     F4 F6 ED E9 
27d7b     F9 02 09 1F 
27d7f     06 09 0A 0A 
27d83     E9 E3 F0 03 | 	byte	$f4, $f6, $ed, $e9, $f9, $02, $09, $1f, $06, $09, $0a, $0a, $e9, $e3, $f0, $03
27d87     FF 0A F7 F9 
27d8b     F2 F4 0F 1A 
27d8f     06 E9 F1 04 
27d93     FF 21 00 ED | 	byte	$ff, $0a, $f7, $f9, $f2, $f4, $0f, $1a, $06, $e9, $f1, $04, $ff, $21, $00, $ed
27d97     F9 F4 EB FD 
27d9b     EE 09 06 16 
27d9f     EB 14 0A F9 
27da3     11 E9 E2 F4 | 	byte	$f9, $f4, $eb, $fd, $ee, $09, $06, $16, $eb, $14, $0a, $f9, $11, $e9, $e2, $f4
27da7     F9 EB F1 FD 
27dab     F7 02 F4 08 
27daf     F9 0B F4 11 
27db3     0A 00 EC 14 | 	byte	$f9, $eb, $f1, $fd, $f7, $02, $f4, $08, $f9, $0b, $f4, $11, $0a, $00, $ec, $14
27db7     0A 06 F9 06 
27dbb     F4 FD F0 F9 
27dbf     FF 0D 02 F9 
27dc3     11 F4 FF 04 | 	byte	$0a, $06, $f9, $06, $f4, $fd, $f0, $f9, $ff, $0d, $02, $f9, $11, $f4, $ff, $04
27dc7     F0 F2 F1 FF 
27dcb     0A 0F 0A 02 
27dcf     EE 08 08 02 
27dd3     E9 D6 FF F2 | 	byte	$f0, $f2, $f1, $ff, $0a, $0f, $0a, $02, $ee, $08, $08, $02, $e9, $d6, $ff, $f2
27dd7     FF 18 00 14 
27ddb     04 F0 EF EC 
27ddf     04 00 EE 14 
27de3     05 13 0D 06 | 	byte	$ff, $18, $00, $14, $04, $f0, $ef, $ec, $04, $00, $ee, $14, $05, $13, $0d, $06
27de7     E9 F9 04 F4 
27deb     06 F4 F6 E3 
27def     F5 EA F9 0F 
27df3     00 F9 14 16 | 	byte	$e9, $f9, $04, $f4, $06, $f4, $f6, $e3, $f5, $ea, $f9, $0f, $00, $f9, $14, $16
27df7     04 F9 04 E9 
27dfb     EE 09 00 EC 
27dff     FD 08 02 FB 
27e03     02 0D 08 02 | 	byte	$04, $f9, $04, $e9, $ee, $09, $00, $ec, $fd, $08, $02, $fb, $02, $0d, $08, $02
27e07     F4 00 F9 E9 
27e0b     DE F9 E6 09 
27e0f     09 1A 0D 00 
27e13     06 0A F1 FF | 	byte	$f4, $00, $f9, $e9, $de, $f9, $e6, $09, $09, $1a, $0d, $00, $06, $0a, $f1, $ff
27e17     00 DF F4 04 
27e1b     DB FC 00 08 
27e1f     10 0D 04 FF 
27e23     0A F5 FC 00 | 	byte	$00, $df, $f4, $04, $db, $fc, $00, $08, $10, $0d, $04, $ff, $0a, $f5, $fc, $00
27e27     0B FF 02 00 
27e2b     FF F2 04 06 
27e2f     00 09 0A 00 
27e33     FD F7 FF 0E | 	byte	$0b, $ff, $02, $00, $ff, $f2, $04, $06, $00, $09, $0a, $00, $fd, $f7, $ff, $0e
27e37     10 00 05 02 
27e3b     FB 00 00 F0 
27e3f     F4 00 EE 02 
27e43     0D 0A 0F 1A | 	byte	$10, $00, $05, $02, $fb, $00, $00, $f0, $f4, $00, $ee, $02, $0d, $0a, $0f, $1a
27e47     0D FD FD FD 
27e4b     F5 EF F1 F9 
27e4f     FF 00 EE 0F 
27e53     15 07 F9 16 | 	byte	$0d, $fd, $fd, $fd, $f5, $ef, $f1, $f9, $ff, $00, $ee, $0f, $15, $07, $f9, $16
27e57     00 00 F4 0B 
27e5b     00 EA F4 06 
27e5f     0D FD F9 06 
27e63     00 FC F9 F6 | 	byte	$00, $00, $f4, $0b, $00, $ea, $f4, $06, $0d, $fd, $f9, $06, $00, $fc, $f9, $f6
27e67     F0 08 F1 FF 
27e6b     06 F9 F5 FF 
27e6f     EE F7 02 F6 
27e73     F9 0E 00 02 | 	byte	$f0, $08, $f1, $ff, $06, $f9, $f5, $ff, $ee, $f7, $02, $f6, $f9, $0e, $00, $02
27e77     F2 0B F4 F6 
27e7b     F0 F6 F0 F3 
27e7f     F4 08 F4 09 
27e83     06 F6 FC FB | 	byte	$f2, $0b, $f4, $f6, $f0, $f6, $f0, $f3, $f4, $08, $f4, $09, $06, $f6, $fc, $fb
27e87     EB F5 EE FF 
27e8b     03 F9 13 0A 
27e8f     F2 06 EE E9 
27e93     04 F5 04 F4 | 	byte	$eb, $f5, $ee, $ff, $03, $f9, $13, $0a, $f2, $06, $ee, $e9, $04, $f5, $04, $f4
27e97     FD F0 FD 04 
27e9b     0D FC 04 FF 
27e9f     03 00 F1 EE 
27ea3     E6 09 F6 02 | 	byte	$fd, $f0, $fd, $04, $0d, $fc, $04, $ff, $03, $00, $f1, $ee, $e6, $09, $f6, $02
27ea7     00 10 06 02 
27eab     0C 0A 04 04 
27eaf     F4 F5 02 F9 
27eb3     F6 F4 F1 F9 | 	byte	$00, $10, $06, $02, $0c, $0a, $04, $04, $f4, $f5, $02, $f9, $f6, $f4, $f1, $f9
27eb7     FF 13 04 02 
27ebb     0F 0F F6 FB 
27ebf     00 F9 FC F5 
27ec3     0B 0C 04 02 | 	byte	$ff, $13, $04, $02, $0f, $0f, $f6, $fb, $00, $f9, $fc, $f5, $0b, $0c, $04, $02
27ec7     08 03 00 14 
27ecb     0A 04 F4 FC 
27ecf     0A 0B 00 F9 
27ed3     EE FF 06 04 | 	byte	$08, $03, $00, $14, $0a, $04, $f4, $fc, $0a, $0b, $00, $f9, $ee, $ff, $06, $04
27ed7     F9 FF FC 06 
27edb     00 F2 0B 04 
27edf     09 08 00 06 
27ee3     04 F9 00 F7 | 	byte	$f9, $ff, $fc, $06, $00, $f2, $0b, $04, $09, $08, $00, $06, $04, $f9, $00, $f7
27ee7     FD 04 F4 FD 
27eeb     07 00 FD FF 
27eef     09 02 FB 05 
27ef3     04 F9 F9 FB | 	byte	$fd, $04, $f4, $fd, $07, $00, $fd, $ff, $09, $02, $fb, $05, $04, $f9, $f9, $fb
27ef7     F6 F9 F7 F9 
27efb     F8 02 FC 0D 
27eff     0B 00 F9 02 
27f03     00 ED FB FB | 	byte	$f6, $f9, $f7, $f9, $f8, $02, $fc, $0d, $0b, $00, $f9, $02, $00, $ed, $fb, $fb
27f07     02 02 F7 F6 
27f0b     04 02 FD 01 
27f0f     00 FA EC FD 
27f13     FB FD 00 04 | 	byte	$02, $02, $f7, $f6, $04, $02, $fd, $01, $00, $fa, $ec, $fd, $fb, $fd, $00, $04
27f17     00 05 04 F6 
27f1b     F4 FE F1 FF 
27f1f     00 06 00 F5 
27f23     F7 F9 06 00 | 	byte	$00, $05, $04, $f6, $f4, $fe, $f1, $ff, $00, $06, $00, $f5, $f7, $f9, $06, $00
27f27     F8 F9 E9 F9 
27f2b     04 00 04 0B 
27f2f     06 04 00 F9 
27f33     FD F4 FB F9 | 	byte	$f8, $f9, $e9, $f9, $04, $00, $04, $0b, $06, $04, $00, $f9, $fd, $f4, $fb, $f9
27f37     F5 F9 F9 FC 
27f3b     0A 0F 0F 0B 
27f3f     04 FB 00 FF 
27f43     F9 FF F6 FF | 	byte	$f5, $f9, $f9, $fc, $0a, $0f, $0f, $0b, $04, $fb, $00, $ff, $f9, $ff, $f6, $ff
27f47     FC FF F5 F4 
27f4b     F3 09 F9 08 
27f4f     FB 09 FD FB 
27f53     FD 00 F0 FF | 	byte	$fc, $ff, $f5, $f4, $f3, $09, $f9, $08, $fb, $09, $fd, $fb, $fd, $00, $f0, $ff
27f57     FB F7 FF 09 
27f5b     08 04 00 F5 
27f5f     FC FC F9 F9 
27f63     FD 03 FB FD | 	byte	$fb, $f7, $ff, $09, $08, $04, $00, $f5, $fc, $fc, $f9, $f9, $fd, $03, $fb, $fd
27f67     FC 04 00 F4 
27f6b     FF 00 F9 FF 
27f6f     00 FF FB FD 
27f73     04 08 FB 06 | 	byte	$fc, $04, $00, $f4, $ff, $00, $f9, $ff, $00, $ff, $fb, $fd, $04, $08, $fb, $06
27f77     F8 FB FC F6 
27f7b     F4 00 02 02 
27f7f     FD F7 FF 02 
27f83     06 01 02 02 | 	byte	$f8, $fb, $fc, $f6, $f4, $00, $02, $02, $fd, $f7, $ff, $02, $06, $01, $02, $02
27f87     00 02 F9 F6 
27f8b     F0 F4 F8 F6 
27f8f     FF 05 03 02 
27f93     07 02 00 FB | 	byte	$00, $02, $f9, $f6, $f0, $f4, $f8, $f6, $ff, $05, $03, $02, $07, $02, $00, $fb
27f97     02 05 FD FC 
27f9b     FD F9 E8 F4 
27f9f     F3 03 00 04 
27fa3     FB FD FD F9 | 	byte	$02, $05, $fd, $fc, $fd, $f9, $e8, $f4, $f3, $03, $00, $04, $fb, $fd, $fd, $f9
27fa7     04 07 F9 F9 
27fab     00 FB 08 00 
27faf     FD 04 00 F6 
27fb3     02 00 F6 F9 | 	byte	$04, $07, $f9, $f9, $00, $fb, $08, $00, $fd, $04, $00, $f6, $02, $00, $f6, $f9
27fb7     FC FC 04 FC 
27fbb     04 02 02 04 
27fbf     04 03 04 FF 
27fc3     F6 F4 FB FB | 	byte	$fc, $fc, $04, $fc, $04, $02, $02, $04, $04, $03, $04, $ff, $f6, $f4, $fb, $fb
27fc7     00 00 09 08 
27fcb     00 FC 02 00 
27fcf     FF 03 FF 00 
27fd3     FF 04 FD 06 | 	byte	$00, $00, $09, $08, $00, $fc, $02, $00, $ff, $03, $ff, $00, $ff, $04, $fd, $06
27fd7     04 03 04 00 
27fdb     FD 04 02 00 
27fdf     02 FC FD FF 
27fe3     08 0C 06 00 | 	byte	$04, $03, $04, $00, $fd, $04, $02, $00, $02, $fc, $fd, $ff, $08, $0c, $06, $00
27fe7     FC FF 04 06 
27feb     00 04 FC 05 
27fef     04 02 00 FE 
27ff3     F9 FD FB FF | 	byte	$fc, $ff, $04, $06, $00, $04, $fc, $05, $04, $02, $00, $fe, $f9, $fd, $fb, $ff
27ff7     FB FF 02 FC 
27ffb     FF 06 FC 03 
27fff     02 04 FF 06 
28003     00 FF FC FB | 	byte	$fb, $ff, $02, $fc, $ff, $06, $fc, $03, $02, $04, $ff, $06, $00, $ff, $fc, $fb
28007     FD 00 F8 F9 
2800b     F7 F6 F7 FB 
2800f     F7 FF 03 02 
28013     FC FF F9 FF | 	byte	$fd, $00, $f8, $f9, $f7, $f6, $f7, $fb, $f7, $ff, $03, $02, $fc, $ff, $f9, $ff
28017     00 FD F9 FA 
2801b     FC FD F9 FD 
2801f     F6 F4 FF F9 
28023     FC 00 FD FD | 	byte	$00, $fd, $f9, $fa, $fc, $fd, $f9, $fd, $f6, $f4, $ff, $f9, $fc, $00, $fd, $fd
28027     00 F8 FC F8 
2802b     FC 00 F5 F6 
2802f     F8 F9 F9 F6 
28033     F9 FF FC FF | 	byte	$00, $f8, $fc, $f8, $fc, $00, $f5, $f6, $f8, $f9, $f9, $f6, $f9, $ff, $fc, $ff
28037     02 02 03 03 
2803b     02 F9 F6 F6 
2803f     F6 F7 F5 FD 
28043     01 04 FE 01 | 	byte	$02, $02, $03, $03, $02, $f9, $f6, $f6, $f6, $f7, $f5, $fd, $01, $04, $fe, $01
28047     02 04 03 06 
2804b     00 FC F9 F7 
2804f     F9 FB FF 00 
28053     04 01 07 00 | 	byte	$02, $04, $03, $06, $00, $fc, $f9, $f7, $f9, $fb, $ff, $00, $04, $01, $07, $00
28057     FD F9 FB FB 
2805b     FD FC FD FB 
2805f     F7 FF 04 04 
28063     04 00 00 FF | 	byte	$fd, $f9, $fb, $fb, $fd, $fc, $fd, $fb, $f7, $ff, $04, $04, $04, $00, $00, $ff
28067     03 03 FD 02 
2806b     00 F7 00 F9 
2806f     FD FD 00 FD 
28073     00 00 FE 02 | 	byte	$03, $03, $fd, $02, $00, $f7, $00, $f9, $fd, $fd, $00, $fd, $00, $00, $fe, $02
28077     00 00 00 00 
2807b     FC FC FD FD 
2807f     00 00 02 00 
28083     FD F9 FB F7 | 	byte	$00, $00, $00, $00, $fc, $fc, $fd, $fd, $00, $00, $02, $00, $fd, $f9, $fb, $f7
28087     F9 F6 FA F9 
2808b     00 00 04 04 
2808f     00 00 FD 00 
28093     FB FC FC 02 | 	byte	$f9, $f6, $fa, $f9, $00, $00, $04, $04, $00, $00, $fd, $00, $fb, $fc, $fc, $02
28097     F9 FB FF 02 
2809b     FC FF FE F9 
2809f     FB FB FD FD 
280a3     FF 00 FF 00 | 	byte	$f9, $fb, $ff, $02, $fc, $ff, $fe, $f9, $fb, $fb, $fd, $fd, $ff, $00, $ff, $00
280a7     FB 00 FC FD 
280ab     03 02 02 02 
280af     02 06 00 FF 
280b3     F9 F6 FD FC | 	byte	$fb, $00, $fc, $fd, $03, $02, $02, $02, $02, $06, $00, $ff, $f9, $f6, $fd, $fc
280b7     FD 00 02 00 
280bb     FD 01 01 04 
280bf     02 02 02 03 
280c3     02 00 00 FB | 	byte	$fd, $00, $02, $00, $fd, $01, $01, $04, $02, $02, $02, $03, $02, $00, $00, $fb
280c7     FA F9 FC FF 
280cb     02 08 06 02 
280cf     03 02 02 FD 
280d3     FD FD F9 FB | 	byte	$fa, $f9, $fc, $ff, $02, $08, $06, $02, $03, $02, $02, $fd, $fd, $fd, $f9, $fb
280d7     FC FD FD FB 
280db     FF 05 04 05 
280df     06 00 00 FF 
280e3     FE 01 F9 FC | 	byte	$fc, $fd, $fd, $fb, $ff, $05, $04, $05, $06, $00, $00, $ff, $fe, $01, $f9, $fc
280e7     FF 00 FF 04 
280eb     01 02 04 00 
280ef     FC FC FD FD 
280f3     FF 01 02 02 | 	byte	$ff, $00, $ff, $04, $01, $02, $04, $00, $fc, $fc, $fd, $fd, $ff, $01, $02, $02
280f7     02 00 FD 00 
280fb     FD F9 FB F9 
280ff     FB FB FD 00 
28103     03 04 02 00 | 	byte	$02, $00, $fd, $00, $fd, $f9, $fb, $f9, $fb, $fb, $fd, $00, $03, $04, $02, $00
28107     FC FD FB FB 
2810b     FD FC 00 FC 
2810f     FD 02 00 00 
28113     00 FB FD FB | 	byte	$fc, $fd, $fb, $fb, $fd, $fc, $00, $fc, $fd, $02, $00, $00, $00, $fb, $fd, $fb
28117     FB F9 FC FE 
2811b     00 00 00 02 
2811f     03 01 00 00 
28123     FD F7 FC FA | 	byte	$fb, $f9, $fc, $fe, $00, $00, $00, $02, $03, $01, $00, $00, $fd, $f7, $fc, $fa
28127     FB F6 FB F9 
2812b     FF FB FF FF 
2812f     02 00 02 04 
28133     04 FC FD FF | 	byte	$fb, $f6, $fb, $f9, $ff, $fb, $ff, $ff, $02, $00, $02, $04, $04, $fc, $fd, $ff
28137     FC FC FB F9 
2813b     FB F9 F9 FD 
2813f     FD FB FF FE 
28143     FD FC FC FB | 	byte	$fc, $fc, $fb, $f9, $fb, $f9, $f9, $fd, $fd, $fb, $ff, $fe, $fd, $fc, $fc, $fb
28147     FC FC 00 FC 
2814b     FD FD 00 FC 
2814f     FD FD FD FB 
28153     FD FB FD FC | 	byte	$fc, $fc, $00, $fc, $fd, $fd, $00, $fc, $fd, $fd, $fd, $fb, $fd, $fb, $fd, $fc
28157     FB FF 00 FF 
2815b     00 FD FD FD 
2815f     FB FD 00 FB 
28163     FF 00 FD FE | 	byte	$fb, $ff, $00, $ff, $00, $fd, $fd, $fd, $fb, $fd, $00, $fb, $ff, $00, $fd, $fe
28167     FE 00 FD FD 
2816b     FC FC 00 01 
2816f     02 FD FE 00 
28173     01 02 02 00 | 	byte	$fe, $00, $fd, $fd, $fc, $fc, $00, $01, $02, $fd, $fe, $00, $01, $02, $02, $00
28177     FE FF FD FD 
2817b     FE FD FB FB 
2817f     FF 02 04 02 
28183     02 02 02 04 | 	byte	$fe, $ff, $fd, $fd, $fe, $fd, $fb, $fb, $ff, $02, $04, $02, $02, $02, $02, $04
28187     04 02 03 FD 
2818b     FD FD FB FF 
2818f     02 00 FF 02 
28193     01 00 FC FA | 	byte	$04, $02, $03, $fd, $fd, $fd, $fb, $ff, $02, $00, $ff, $02, $01, $00, $fc, $fa
28197     FA FB FE 00 
2819b     02 00 02 04 
2819f     02 01 00 01 
281a3     00 01 00 FC | 	byte	$fa, $fb, $fe, $00, $02, $00, $02, $04, $02, $01, $00, $01, $00, $01, $00, $fc
281a7     FD FC FD FB 
281ab     FB F9 FB FC 
281af     FD FF 00 01 
281b3     02 02 01 FD | 	byte	$fd, $fc, $fd, $fb, $fb, $f9, $fb, $fc, $fd, $ff, $00, $01, $02, $02, $01, $fd
281b7     FC FC FC FC 
281bb     FB F9 FB FD 
281bf     FC FC FB FF 
281c3     00 FF 01 00 | 	byte	$fc, $fc, $fc, $fc, $fb, $f9, $fb, $fd, $fc, $fc, $fb, $ff, $00, $ff, $01, $00
281c7     02 01 00 00 
281cb     FB F9 FB FB 
281cf     FB F9 FD FD 
281d3     FD FC FD 00 | 	byte	$02, $01, $00, $00, $fb, $f9, $fb, $fb, $fb, $f9, $fd, $fd, $fd, $fc, $fd, $00
281d7     00 00 00 00 
281db     FE FD FB FD 
281df     FC FC FD FF 
281e3     03 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $fd, $fb, $fd, $fc, $fc, $fd, $ff, $03, $00, $00, $00
281e7     00 00 00 00 
281eb     00 00       | 	byte	$00[6]
281ed     FF FD FD FB 
281f1     FD FD 00 01 
281f5     01 00 00 FE 
281f9     FF FC 00 00 | 	byte	$ff, $fd, $fd, $fb, $fd, $fd, $00, $01, $01, $00, $00, $fe, $ff, $fc, $00, $00
281fd     FD 00 02 02 
28201     02 00 00 00 
28205     FF 00 00 00 
28209     FD FD FD FC | 	byte	$fd, $00, $02, $02, $02, $00, $00, $00, $ff, $00, $00, $00, $fd, $fd, $fd, $fc
2820d     FB FE FD 00 
28211     FD 00 00 FC 
28215     FB FB FB FD 
28219     00 02 04 04 | 	byte	$fb, $fe, $fd, $00, $fd, $00, $00, $fc, $fb, $fb, $fb, $fd, $00, $02, $04, $04
2821d     03 00 00 00 
28221     00 FB FC FE 
28225     FD FD 00 FC 
28229     FD FD FC FC | 	byte	$03, $00, $00, $00, $00, $fb, $fc, $fe, $fd, $fd, $00, $fc, $fd, $fd, $fc, $fc
2822d     FD 00 02 04 
28231     00 00 FF FC 
28235     F9 F9 FB FB 
28239     FC FC FF 00 | 	byte	$fd, $00, $02, $04, $00, $00, $ff, $fc, $f9, $f9, $fb, $fb, $fc, $fc, $ff, $00
2823d     00 00 01 00 
28241     FE FE FE FD 
28245     FC FC FC FB 
28249     FB FB FC FF | 	byte	$00, $00, $01, $00, $fe, $fe, $fe, $fd, $fc, $fc, $fc, $fb, $fb, $fb, $fc, $ff
2824d     00 FF 00 00 
28251     00 00 FD FD 
28255     FD FD FD FD 
28259     FF FF FF FE | 	byte	$00, $ff, $00, $00, $00, $00, $fd, $fd, $fd, $fd, $fd, $fd, $ff, $ff, $ff, $fe
2825d     01 00 FF FC 
28261     FB FB FC FC 
28265     FC FC FC FF 
28269     00 02 02 01 | 	byte	$01, $00, $ff, $fc, $fb, $fb, $fc, $fc, $fc, $fc, $fc, $ff, $00, $02, $02, $01
2826d     00 00 00 FD 
28271     FD FD FD FC 
28275     FA F9 FC FC 
28279     FD 00 02 01 | 	byte	$00, $00, $00, $fd, $fd, $fd, $fd, $fc, $fa, $f9, $fc, $fc, $fd, $00, $02, $01
2827d     00 00 FF 00 
28281     FD FB FB FC 
28285     FC FF 02 00 
28289     00 00 02 02 | 	byte	$00, $00, $ff, $00, $fd, $fb, $fb, $fc, $fc, $ff, $02, $00, $00, $00, $02, $02
2828d     00 00 00 00 
28291     01 00 FF FE 
28295     01 00 FD FD 
28299     FD FD 00 00 | 	byte	$00, $00, $00, $00, $01, $00, $ff, $fe, $01, $00, $fd, $fd, $fd, $fd, $00, $00
2829d     02 00 FF FF 
282a1     00 00 02 02 
282a5     00 FE FE FB 
282a9     FC FD 00 01 | 	byte	$02, $00, $ff, $ff, $00, $00, $02, $02, $00, $fe, $fe, $fb, $fc, $fd, $00, $01
282ad     FF 00 FF 00 
282b1     00 00 FF FD 
282b5     FB FB FD FF 
282b9     00 00 FD FD | 	byte	$ff, $00, $ff, $00, $00, $00, $ff, $fd, $fb, $fb, $fd, $ff, $00, $00, $fd, $fd
282bd     FD FC FD FC 
282c1     FF FD FF 00 
282c5     00 FD FC FB 
282c9     FD FD FD FC | 	byte	$fd, $fc, $fd, $fc, $ff, $fd, $ff, $00, $00, $fd, $fc, $fb, $fd, $fd, $fd, $fc
282cd     FC FC FD FA 
282d1     FC FB FC FB 
282d5     FE FD FD FF 
282d9     FD FD FF FE | 	byte	$fc, $fc, $fd, $fa, $fc, $fb, $fc, $fb, $fe, $fd, $fd, $ff, $fd, $fd, $ff, $fe
282dd     FF FD FC FA 
282e1     F9 F9 FB FD 
282e5     FD FD FD FD 
282e9     FF 00 00 01 | 	byte	$ff, $fd, $fc, $fa, $f9, $f9, $fb, $fd, $fd, $fd, $fd, $fd, $ff, $00, $00, $01
282ed     FE FD 00 00 
282f1     FF FD FC FB 
282f5     FB FC FF FC 
282f9     FD 00 00 00 | 	byte	$fe, $fd, $00, $00, $ff, $fd, $fc, $fb, $fb, $fc, $ff, $fc, $fd, $00, $00, $00
282fd     00 02 02 01 
28301     00 FD FF FF 
28305     00 01 01 00 
28309     00 00 00 00 | 	byte	$00, $02, $02, $01, $00, $fd, $ff, $ff, $00, $01, $01, $00, $00, $00, $00, $00
2830d     FF 00 00 00 
28311     02 00 01 01 
28315     02 02 02 00 
28319     00 00 00 FC | 	byte	$ff, $00, $00, $00, $02, $00, $01, $01, $02, $02, $02, $00, $00, $00, $00, $fc
2831d     F5 F3 F6 01 
28321     0F 09 04 03 
28325     0B 03 F8 F2 
28329     F6 FF 0E 16 | 	byte	$f5, $f3, $f6, $01, $0f, $09, $04, $03, $0b, $03, $f8, $f2, $f6, $ff, $0e, $16
2832d     08 04 00 F9 
28331     F2 05 0B 00 
28335     F1 FB 0E 0E 
28339     0D 00 FF 05 | 	byte	$08, $04, $00, $f9, $f2, $05, $0b, $00, $f1, $fb, $0e, $0e, $0d, $00, $ff, $05
2833d     01 FE FE F9 
28341     F5 FC 0A 04 
28345     FD FD 00 07 
28349     11 03 F4 F4 | 	byte	$01, $fe, $fe, $f9, $f5, $fc, $0a, $04, $fd, $fd, $00, $07, $11, $03, $f4, $f4
2834d     04 07 07 01 
28351     FB 03 1D 1A 
28355     FA EE F6 F8 
28359     F9 0E 1B 0F | 	byte	$04, $07, $07, $01, $fb, $03, $1d, $1a, $fa, $ee, $f6, $f8, $f9, $0e, $1b, $0f
2835d     00 00 00 FA 
28361     F8 00 00 03 
28365     06 0A 0B 0A 
28369     F5 E6 F0 F8 | 	byte	$00, $00, $00, $fa, $f8, $00, $00, $03, $06, $0a, $0b, $0a, $f5, $e6, $f0, $f8
2836d     F9 FD 13 22 
28371     1B 13 F8 E9 
28375     ED 00 08 0F 
28379     12 04 FD 08 | 	byte	$f9, $fd, $13, $22, $1b, $13, $f8, $e9, $ed, $00, $08, $0f, $12, $04, $fd, $08
2837d     07 FC 00 00 
28381     FD 03 12 06 
28385     FA FE 0B 15 
28389     11 04 FB 0C | 	byte	$07, $fc, $00, $00, $fd, $03, $12, $06, $fa, $fe, $0b, $15, $11, $04, $fb, $0c
2838d     13 06 00 0B 
28391     07 03 FA F7 
28395     FA F6 EF F0 
28399     0A 0B 00 F6 | 	byte	$13, $06, $00, $0b, $07, $03, $fa, $f7, $fa, $f6, $ef, $f0, $0a, $0b, $00, $f6
2839d     FA F8 06 19 
283a1     0E 00 F5 FF 
283a5     06 0B 0B FF 
283a9     03 02 04 07 | 	byte	$fa, $f8, $06, $19, $0e, $00, $f5, $ff, $06, $0b, $0b, $ff, $03, $02, $04, $07
283ad     0C 01 F1 F6 
283b1     05 11 07 00 
283b5     F5 00 0C 12 
283b9     10 0E 10 0B | 	byte	$0c, $01, $f1, $f6, $05, $11, $07, $00, $f5, $00, $0c, $12, $10, $0e, $10, $0b
283bd     FD F4 EE F1 
283c1     F6 F9 F4 F7 
283c5     02 07 FE F5 
283c9     F9 F3 EF F7 | 	byte	$fd, $f4, $ee, $f1, $f6, $f9, $f4, $f7, $02, $07, $fe, $f5, $f9, $f3, $ef, $f7
283cd     0F 1E 1C 14 
283d1     00 FA F3 F7 
283d5     00 0E 0D 04 
283d9     0C 13 08 F9 | 	byte	$0f, $1e, $1c, $14, $00, $fa, $f3, $f7, $00, $0e, $0d, $04, $0c, $13, $08, $f9
283dd     F5 FB 10 1F 
283e1     13 02 FC 02 
283e5     02 07 F9 E9 
283e9     F1 F9 00 F2 | 	byte	$f5, $fb, $10, $1f, $13, $02, $fc, $02, $02, $07, $f9, $e9, $f1, $f9, $00, $f2
283ed     EF F3 F0 05 
283f1     07 05 FD F4 
283f5     FA 09 1F 1C 
283f9     05 FA FA FE | 	byte	$ef, $f3, $f0, $05, $07, $05, $fd, $f4, $fa, $09, $1f, $1c, $05, $fa, $fa, $fe
283fd     FB F7 FB 09 
28401     16 1E 15 07 
28405     04 FA F8 F9 
28409     0A 1D 1F 1A | 	byte	$fb, $f7, $fb, $09, $16, $1e, $15, $07, $04, $fa, $f8, $f9, $0a, $1d, $1f, $1a
2840d     05 F1 EA EA 
28411     ED F0 F0 EF 
28415     F3 05 0C FF 
28419     F8 F6 F8 02 | 	byte	$05, $f1, $ea, $ea, $ed, $f0, $f0, $ef, $f3, $05, $0c, $ff, $f8, $f6, $f8, $02
2841d     0E 0E 0E 19 
28421     1F 18 01 F8 
28425     EE F3 FA 01 
28429     12 1B 13 09 | 	byte	$0e, $0e, $0e, $19, $1f, $18, $01, $f8, $ee, $f3, $fa, $01, $12, $1b, $13, $09
2842d     02 11 2A 33 
28431     26 FE F0 EA 
28435     E5 E2 E2 E4 
28439     F2 06 12 0C | 	byte	$02, $11, $2a, $33, $26, $fe, $f0, $ea, $e5, $e2, $e2, $e4, $f2, $06, $12, $0c
2843d     EE DE DA ED 
28441     06 16 27 26 
28445     16 05 FA FB 
28449     03 07 07 FB | 	byte	$ee, $de, $da, $ed, $06, $16, $27, $26, $16, $05, $fa, $fb, $03, $07, $07, $fb
2844d     F5 F5 FC 0C 
28451     1C 26 32 36 
28455     27 0F F5 E9 
28459     DB DB E0 ED | 	byte	$f5, $f5, $fc, $0c, $1c, $26, $32, $36, $27, $0f, $f5, $e9, $db, $db, $e0, $ed
2845d     F3 00 12 12 
28461     0A E4 D1 CB 
28465     E0 03 24 36 
28469     35 24 13 FC | 	byte	$f3, $00, $12, $12, $0a, $e4, $d1, $cb, $e0, $03, $24, $36, $35, $24, $13, $fc
2846d     E8 E5 E6 EB 
28471     F1 F8 02 0E 
28475     1D 29 38 43 
28479     36 16 F6 D4 | 	byte	$e8, $e5, $e6, $eb, $f1, $f8, $02, $0e, $1d, $29, $38, $43, $36, $16, $f6, $d4
2847d     B9 B7 D9 00 
28481     1A 2C 2F 1B 
28485     FF D5 BA B2 
28489     D0 FC 2A 4B | 	byte	$b9, $b7, $d9, $00, $1a, $2c, $2f, $1b, $ff, $d5, $ba, $b2, $d0, $fc, $2a, $4b
2848d     49 33 11 FC 
28491     E3 D3 D2 D8 
28495     E2 F0 09 1E 
28499     2F 46 52 43 | 	byte	$49, $33, $11, $fc, $e3, $d3, $d2, $d8, $e2, $f0, $09, $1e, $2f, $46, $52, $43
2849d     18 F1 C6 AA 
284a1     AA D4 02 30 
284a5     51 4A 2F FE 
284a9     D8 B9 B1 C6 | 	byte	$18, $f1, $c6, $aa, $aa, $d4, $02, $30, $51, $4a, $2f, $fe, $d8, $b9, $b1, $c6
284ad     E8 13 3A 49 
284b1     45 32 0D EB 
284b5     D2 CF CC CD 
284b9     DB F5 19 47 | 	byte	$e8, $13, $3a, $49, $45, $32, $0d, $eb, $d2, $cf, $cc, $cd, $db, $f5, $19, $47
284bd     6A 63 39 00 
284c1     CB A8 A4 C9 
284c5     FD 33 5A 5B 
284c9     39 07 DB C1 | 	byte	$6a, $63, $39, $00, $cb, $a8, $a4, $c9, $fd, $33, $5a, $5b, $39, $07, $db, $c1
284cd     B5 C0 D8 FD 
284d1     23 43 4C 41 
284d5     20 FF E4 D2 
284d9     C2 B8 C5 E6 | 	byte	$b5, $c0, $d8, $fd, $23, $43, $4c, $41, $20, $ff, $e4, $d2, $c2, $b8, $c5, $e6
284dd     11 43 66 65 
284e1     3C 02 CB A6 
284e5     A5 D1 08 3C 
284e9     61 61 41 0F | 	byte	$11, $43, $66, $65, $3c, $02, $cb, $a6, $a5, $d1, $08, $3c, $61, $61, $41, $0f
284ed     E2 BC A8 B5 
284f1     DB 08 32 47 
284f5     42 31 10 FB 
284f9     ED E5 D0 B8 | 	byte	$e2, $bc, $a8, $b5, $db, $08, $32, $47, $42, $31, $10, $fb, $ed, $e5, $d0, $b8
284fd     BB DC 07 39 
28501     60 61 3D 03 
28505     CC A6 A3 C9 
28509     FE 31 5C 66 | 	byte	$bb, $dc, $07, $39, $60, $61, $3d, $03, $cc, $a6, $a3, $c9, $fe, $31, $5c, $66
2850d     4A 1B EA C5 
28511     AF B2 CD F6 
28515     22 43 4D 44 
28519     24 00 E4 D2 | 	byte	$4a, $1b, $ea, $c5, $af, $b2, $cd, $f6, $22, $43, $4d, $44, $24, $00, $e4, $d2
2851d     C4 BB C5 DE 
28521     05 36 61 5F 
28525     39 00 CA A1 
28529     9E C9 07 3D | 	byte	$c4, $bb, $c5, $de, $05, $36, $61, $5f, $39, $00, $ca, $a1, $9e, $c9, $07, $3d
2852d     61 62 43 16 
28531     EA C3 A9 AB 
28535     CB F9 26 47 
28539     50 41 22 00 | 	byte	$61, $62, $43, $16, $ea, $c3, $a9, $ab, $cb, $f9, $26, $47, $50, $41, $22, $00
2853d     EA D8 CA C0 
28541     C3 DB FE 24 
28545     49 5B 4B 23 
28549     F2 C7 A7 A7 | 	byte	$ea, $d8, $ca, $c0, $c3, $db, $fe, $24, $49, $5b, $4b, $23, $f2, $c7, $a7, $a7
2854d     C9 FE 32 5A 
28551     61 48 1C F1 
28555     CD B3 B1 C9 
28559     F1 1F 42 52 | 	byte	$c9, $fe, $32, $5a, $61, $48, $1c, $f1, $cd, $b3, $b1, $c9, $f1, $1f, $42, $52
2855d     49 2A 07 ED 
28561     D8 C6 BA C2 
28565     E1 09 31 57 
28569     5D 46 15 E4 | 	byte	$49, $2a, $07, $ed, $d8, $c6, $ba, $c2, $e1, $09, $31, $57, $5d, $46, $15, $e4
2856d     B8 9F B0 E0 
28571     15 45 62 5D 
28575     3A 0C E0 BE 
28579     AB B6 D8 07 | 	byte	$b8, $9f, $b0, $e0, $15, $45, $62, $5d, $3a, $0c, $e0, $be, $ab, $b6, $d8, $07
2857d     35 51 52 38 
28581     11 F1 E0 D6 
28585     CE C8 D2 EB 
28589     12 37 4C 4E | 	byte	$35, $51, $52, $38, $11, $f1, $e0, $d6, $ce, $c8, $d2, $eb, $12, $37, $4c, $4e
2858d     35 17 ED C7 
28591     AC AD CE 00 
28595     33 58 5A 3E 
28599     12 E7 C9 B8 | 	byte	$35, $17, $ed, $c7, $ac, $ad, $ce, $00, $33, $58, $5a, $3e, $12, $e7, $c9, $b8
2859d     BF D8 FD 26 
285a1     45 4D 38 12 
285a5     F2 E1 DB DB 
285a9     DC DE E9 01 | 	byte	$bf, $d8, $fd, $26, $45, $4d, $38, $12, $f2, $e1, $db, $db, $dc, $de, $e9, $01
285ad     1E 39 48 3C 
285b1     20 F7 CC AC 
285b5     A7 C9 FE 31 
285b9     58 5E 41 13 | 	byte	$1e, $39, $48, $3c, $20, $f7, $cc, $ac, $a7, $c9, $fe, $31, $58, $5e, $41, $13
285bd     E7 C7 B7 C2 
285c1     DD 00 23 3B 
285c5     3E 2B 10 F5 
285c9     E5 DE DD E0 | 	byte	$e7, $c7, $b7, $c2, $dd, $00, $23, $3b, $3e, $2b, $10, $f5, $e5, $de, $dd, $e0
285cd     E6 F0 FF 13 
285d1     24 2B 2E 29 
285d5     1A FD D9 C2 
285d9     BB D1 F4 18 | 	byte	$e6, $f0, $ff, $13, $24, $2b, $2e, $29, $1a, $fd, $d9, $c2, $bb, $d1, $f4, $18
285dd     36 44 35 16 
285e1     F4 DD D7 DA 
285e5     E9 F7 08 1C 
285e9     25 26 1C 0C | 	byte	$36, $44, $35, $16, $f4, $dd, $d7, $da, $e9, $f7, $08, $1c, $25, $26, $1c, $0c
285ed     FA ED E9 ED 
285f1     F4 FB FF FE 
285f5     01 0B 15 1A 
285f9     1C 1F 16 06 | 	byte	$fa, $ed, $e9, $ed, $f4, $fb, $ff, $fe, $01, $0b, $15, $1a, $1c, $1f, $16, $06
285fd     EE DB D2 DC 
28601     F4 0B 1C 22 
28605     1A 0A FC F4 
28609     F2 F6 F9 FD | 	byte	$ee, $db, $d2, $dc, $f4, $0b, $1c, $22, $1a, $0a, $fc, $f4, $f2, $f6, $f9, $fd
2860d     FE 08 0F 14 
28611     15 0E 07 01 
28615     01 01 FC F3 
28619     EB ED FB 0C | 	byte	$fe, $08, $0f, $14, $15, $0e, $07, $01, $01, $01, $fc, $f3, $eb, $ed, $fb, $0c
2861d     18 19 15 16 
28621     1C 1F 15 FA 
28625     DC C9 CE E7 
28629     04 1B 2C 2C | 	byte	$18, $19, $15, $16, $1c, $1f, $15, $fa, $dc, $c9, $ce, $e7, $04, $1b, $2c, $2c
2862d     1D 08 F5 EB 
28631     E4 E6 ED FA 
28635     09 18 1E 1E 
28639     18 0D 00 F2 | 	byte	$1d, $08, $f5, $eb, $e4, $e6, $ed, $fa, $09, $18, $1e, $1e, $18, $0d, $00, $f2
2863d     ED EE F3 F6 
28641     F8 FF 0C 17 
28645     1E 19 0A FA 
28649     F2 FC 07 0D | 	byte	$ed, $ee, $f3, $f6, $f8, $ff, $0c, $17, $1e, $19, $0a, $fa, $f2, $fc, $07, $0d
2864d     0A FF F2 EE 
28651     F5 FC FF 00 
28655     04 06 05 01 
28659     FE FB FC FE | 	byte	$0a, $ff, $f2, $ee, $f5, $fc, $ff, $00, $04, $06, $05, $01, $fe, $fb, $fc, $fe
2865d     06 0C 0D 0B 
28661     07 08 06 03 
28665     FC F6 F6 00 
28669     08 0B 07 02 | 	byte	$06, $0c, $0d, $0b, $07, $08, $06, $03, $fc, $f6, $f6, $00, $08, $0b, $07, $02
2866d     FC F6 F6 FD 
28671     03 05 06 10 
28675     1E 21 14 F8 
28679     E2 D7 D8 E6 | 	byte	$fc, $f6, $f6, $fd, $03, $05, $06, $10, $1e, $21, $14, $f8, $e2, $d7, $d8, $e6
2867d     F9 0D 1A 1D 
28681     16 05 F8 EF 
28685     EE F4 FC 05 
28689     0C 11 15 14 | 	byte	$f9, $0d, $1a, $1d, $16, $05, $f8, $ef, $ee, $f4, $fc, $05, $0c, $11, $15, $14
2868d     0E 04 FA F5 
28691     F4 F8 FD FF 
28695     00 05 0D 15 
28699     14 09 F9 EF | 	byte	$0e, $04, $fa, $f5, $f4, $f8, $fd, $ff, $00, $05, $0d, $15, $14, $09, $f9, $ef
2869d     EF F5 00 0C 
286a1     13 18 1C 16 
286a5     05 F1 E2 DD 
286a9     E1 F1 03 13 | 	byte	$ef, $f5, $00, $0c, $13, $18, $1c, $16, $05, $f1, $e2, $dd, $e1, $f1, $03, $13
286ad     1E 1D 12 02 
286b1     F5 EE EF F6 
286b5     FE 05 0E 14 
286b9     13 0F 08 02 | 	byte	$1e, $1d, $12, $02, $f5, $ee, $ef, $f6, $fe, $05, $0e, $14, $13, $0f, $08, $02
286bd     FC F9 F9 FB 
286c1     00 00 00 00 
286c5     00 00 00 00 
286c9     00 00 FF FF | 	byte	$fc, $f9, $f9, $fb, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $ff, $ff
286cd     FF FF FF FF 
286d1     FF          | 	byte	$ff[5]
286d2     00 00 00 00 
286d6     01 00 00 00 
286da     FF FE FE FE 
286de     FE FF 00 00 | 	byte	$00, $00, $00, $00, $01, $00, $00, $00, $ff, $fe, $fe, $fe, $fe, $ff, $00, $00
286e2     01 01 01 00 
286e6     00 FF FE FE 
286ea     FD FE FE FF 
286ee     00 01 01 01 | 	byte	$01, $01, $01, $00, $00, $ff, $fe, $fe, $fd, $fe, $fe, $ff, $00, $01, $01, $01
286f2     01 01 00 00 
286f6     FF FF FF FF 
286fa     FF FF 00 00 
286fe     00 00 00 00 | 	byte	$01, $01, $00, $00, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00, $00, $00, $00
28702     FF FF FF FF 
28706     FF FF FF FF 
2870a     FF FF FF FF 
2870e     FF FF FF FF | 	byte	$ff[16]
28712     FE FD FD FF 
28716     01 03 05 06 
2871a     06 05 03 01 
2871e     FE FC F9 F8 | 	byte	$fe, $fd, $fd, $ff, $01, $03, $05, $06, $06, $05, $03, $01, $fe, $fc, $f9, $f8
28722     F8 FA FD 00 
28726     03 05 06 05 
2872a     03 01 FD FB 
2872e     F8 F7 F8 FA | 	byte	$f8, $fa, $fd, $00, $03, $05, $06, $05, $03, $01, $fd, $fb, $f8, $f7, $f8, $fa
28732     FD 00 03 04 
28736     05 05 04 03 
2873a     01 00 FE FD 
2873e     FC FC FD FE | 	byte	$fd, $00, $03, $04, $05, $05, $04, $03, $01, $00, $fe, $fd, $fc, $fc, $fd, $fe
28742     00 01 02 02 
28746     02 01 01 00 
2874a     FE FE FD FC 
2874e     FC FD FD FE | 	byte	$00, $01, $02, $02, $02, $01, $01, $00, $fe, $fe, $fd, $fc, $fc, $fd, $fd, $fe
28752     FE FE FE FD 
28756     FC FD 00 04 
2875a     07 0A 0D 0D 
2875e     0A 07 03 FE | 	byte	$fe, $fe, $fe, $fd, $fc, $fd, $00, $04, $07, $0a, $0d, $0d, $0a, $07, $03, $fe
28762     F8 F4 F2 F3 
28766     F6 FA FF 05 
2876a     08 0A 09 07 
2876e     04 00 FA F6 | 	byte	$f8, $f4, $f2, $f3, $f6, $fa, $ff, $05, $08, $0a, $09, $07, $04, $00, $fa, $f6
28772     F3 F3 F5 F9 
28776     FE 02 06 08 
2877a     08 07 04 02 
2877e     00 FD FD FD | 	byte	$f3, $f3, $f5, $f9, $fe, $02, $06, $08, $08, $07, $04, $02, $00, $fd, $fd, $fd
28782     FF 01 02 03 
28786     02 00 FE FB 
2878a     F9 F8 F8 F9 
2878e     FB FE 00 02 | 	byte	$ff, $01, $02, $03, $02, $00, $fe, $fb, $f9, $f8, $f8, $f9, $fb, $fe, $00, $02
28792     02 02 00 FC 
28796     F9 F9 FC 02 
2879a     07 0C 11 12 
2879e     11 0E 09 03 | 	byte	$02, $02, $00, $fc, $f9, $f9, $fc, $02, $07, $0c, $11, $12, $11, $0e, $09, $03
287a2     FB F3 ED EC 
287a6     EE F3 FA 01 
287aa     06 0A 0C 0A 
287ae     08 02 FD F7 | 	byte	$fb, $f3, $ed, $ec, $ee, $f3, $fa, $01, $06, $0a, $0c, $0a, $08, $02, $fd, $f7
287b2     F3 F1 F3 F6 
287b6     FA FF 04 07 
287ba     08 08 06 03 
287be     00 FF FE FF | 	byte	$f3, $f1, $f3, $f6, $fa, $ff, $04, $07, $08, $08, $06, $03, $00, $ff, $fe, $ff
287c2     01 05 07 08 
287c6     07 03 FD F7 
287ca     F2 EF EF F2 
287ce     F5 FB FF 03 | 	byte	$01, $05, $07, $08, $07, $03, $fd, $f7, $f2, $ef, $ef, $f2, $f5, $fb, $ff, $03
287d2     05 06 05 02 
287d6     FC F7 F5 FA 
287da     01 09 10 18 
287de     1C 1C 17 0E | 	byte	$05, $06, $05, $02, $fc, $f7, $f5, $fa, $01, $09, $10, $18, $1c, $1c, $17, $0e
287e2     04 F6 EB E5 
287e6     E4 E6 ED F7 
287ea     01 09 0E 11 
287ee     0F 0B 04 00 | 	byte	$04, $f6, $eb, $e5, $e4, $e6, $ed, $f7, $01, $09, $0e, $11, $0f, $0b, $04, $00
287f2     F8 F3 F1 F3 
287f6     F7 FB 00 04 
287fa     05 06 03 01 
287fe     00 00 02 06 | 	byte	$f8, $f3, $f1, $f3, $f7, $fb, $00, $04, $05, $06, $03, $01, $00, $00, $02, $06
28802     09 0D 0F 0D 
28806     08 02 F8 F1 
2880a     EA E8 E8 ED 
2880e     F3 FA 01 05 | 	byte	$09, $0d, $0f, $0d, $08, $02, $f8, $f1, $ea, $e8, $e8, $ed, $f3, $fa, $01, $05
28812     08 08 07 04 
28816     FD F8 F6 FA 
2881a     04 0E 17 1E 
2881e     20 1E 18 0B | 	byte	$08, $08, $07, $04, $fd, $f8, $f6, $fa, $04, $0e, $17, $1e, $20, $1e, $18, $0b
28822     00 F0 E3 DF 
28826     DF E4 EB F8 
2882a     03 0B 10 10 
2882e     10 0A 04 FE | 	byte	$00, $f0, $e3, $df, $df, $e4, $eb, $f8, $03, $0b, $10, $10, $10, $0a, $04, $fe
28832     F8 F7 F6 F8 
28836     FB FD FF 00 
2883a     00 00 FD FD 
2883e     00 04 09 0C | 	byte	$f8, $f7, $f6, $f8, $fb, $fd, $ff, $00, $00, $00, $fd, $fd, $00, $04, $09, $0c
28842     10 10 0D 08 
28846     00 F8 EF E9 
2884a     E6 E6 E9 EF 
2884e     F6 FD 03 07 | 	byte	$10, $10, $0d, $08, $00, $f8, $ef, $e9, $e6, $e6, $e9, $ef, $f6, $fd, $03, $07
28852     07 06 00 00 
28856     01 09 10 18 
2885a     20 22 1E 18 
2885e     0E 01 F2 E4 | 	byte	$07, $06, $00, $00, $01, $09, $10, $18, $20, $22, $1e, $18, $0e, $01, $f2, $e4
28862     DA D8 DB E3 
28866     F0 FD 06 0D 
2886a     12 11 0F 0A 
2886e     06 00 FE FE | 	byte	$da, $d8, $db, $e3, $f0, $fd, $06, $0d, $12, $11, $0f, $0a, $06, $00, $fe, $fe
28872     FC FD FE FE 
28876     FD FB FA FA 
2887a     FB FF 03 0A 
2887e     0F 12 10 0B | 	byte	$fc, $fd, $fe, $fe, $fd, $fb, $fa, $fa, $fb, $ff, $03, $0a, $0f, $12, $10, $0b
28882     07 00 F5 EF 
28886     E9 E6 E8 EB 
2888a     F2 F8 FE 02 
2888e     05 04 00 04 | 	byte	$07, $00, $f5, $ef, $e9, $e6, $e8, $eb, $f2, $f8, $fe, $02, $05, $04, $00, $04
28892     09 12 1C 20 
28896     27 29 22 19 
2889a     09 FA E6 D9 
2889e     D3 D1 DC E2 | 	byte	$09, $12, $1c, $20, $27, $29, $22, $19, $09, $fa, $e6, $d9, $d3, $d1, $dc, $e2
288a2     F2 FE 09 0E 
288a6     0F 10 0D 09 
288aa     08 05 04 07 
288ae     05 04 01 00 | 	byte	$f2, $fe, $09, $0e, $0f, $10, $0d, $09, $08, $05, $04, $07, $05, $04, $01, $00
288b2     FA F5 F4 F4 
288b6     F8 FE 06 0C 
288ba     0F 0E 0A 02 
288be     FA F0 EA E7 | 	byte	$fa, $f5, $f4, $f4, $f8, $fe, $06, $0c, $0f, $0e, $0a, $02, $fa, $f0, $ea, $e7
288c2     E8 ED F3 FC 
288c6     02 05 06 07 
288ca     02 FD 02 06 
288ce     11 20 27 2F | 	byte	$e8, $ed, $f3, $fc, $02, $05, $06, $07, $02, $fd, $02, $06, $11, $20, $27, $2f
288d2     2F 24 14 00 
288d6     E5 D1 CC CC 
288da     CE E1 F2 FE 
288de     0B 10 0F 0B | 	byte	$2f, $24, $14, $00, $e5, $d1, $cc, $cc, $ce, $e1, $f2, $fe, $0b, $10, $0f, $0b
288e2     0A 07 04 0A 
288e6     0C 0F 12 0E 
288ea     09 FC F0 E6 
288ee     E2 E8 F2 FE | 	byte	$0a, $07, $04, $0a, $0c, $0f, $12, $0e, $09, $fc, $f0, $e6, $e2, $e8, $f2, $fe
288f2     0E 15 18 0E 
288f6     04 F7 EB E2 
288fa     E0 E5 F0 F9 
288fe     03 06 08 05 | 	byte	$0e, $15, $18, $0e, $04, $f7, $eb, $e2, $e0, $e5, $f0, $f9, $03, $06, $08, $05
28902     04 05 08 07 
28906     10 1D 21 2B 
2890a     2C 24 16 01 
2890e     EA CD C6 C7 | 	byte	$04, $05, $08, $07, $10, $1d, $21, $2b, $2c, $24, $16, $01, $ea, $cd, $c6, $c7
28912     CA DE F1 FE 
28916     0E 11 15 0F 
2891a     0C 0E 0C 11 
2891e     12 14 12 07 | 	byte	$ca, $de, $f1, $fe, $0e, $11, $15, $0f, $0c, $0e, $0c, $11, $12, $14, $12, $07
28922     FC E9 D4 CB 
28926     CA DD F7 14 
2892a     2C 34 33 24 
2892e     0A F1 D6 CA | 	byte	$fc, $e9, $d4, $cb, $ca, $dd, $f7, $14, $2c, $34, $33, $24, $0a, $f1, $d6, $ca
28932     CC D7 ED F7 
28936     00 03 02 02 
2893a     03 0D 1C 2C 
2893e     32 2A 20 15 | 	byte	$cc, $d7, $ed, $f7, $00, $03, $02, $02, $03, $0d, $1c, $2c, $32, $2a, $20, $15
28942     00 F7 F3 EE 
28946     EF EE EB E2 
2894a     DF E3 E5 FA 
2894e     0D 1B 2B 2D | 	byte	$00, $f7, $f3, $ee, $ef, $ee, $eb, $e2, $df, $e3, $e5, $fa, $0d, $1b, $2b, $2d
28952     26 1A 05 F5 
28956     E8 E9 EB F2 
2895a     FC F5 F0 EA 
2895e     E2 E9 F7 10 | 	byte	$26, $1a, $05, $f5, $e8, $e9, $eb, $f2, $fc, $f5, $f0, $ea, $e2, $e9, $f7, $10
28962     2D 42 49 3E 
28966     24 00 C8 BC 
2896a     BA BC D6 F1 
2896e     06 0F 10 0B | 	byte	$2d, $42, $49, $3e, $24, $00, $c8, $bc, $ba, $bc, $d6, $f1, $06, $0f, $10, $0b
28972     10 1C 27 34 
28976     36 30 17 EC 
2897a     C1 BE C1 DF 
2897e     09 1A 1E 11 | 	byte	$10, $1c, $27, $34, $36, $30, $17, $ec, $c1, $be, $c1, $df, $09, $1a, $1e, $11
28982     00 EF EB 07 
28986     1A 27 2C 11 
2898a     F1 D0 BE C8 
2898e     EB 11 21 23 | 	byte	$00, $ef, $eb, $07, $1a, $27, $2c, $11, $f1, $d0, $be, $c8, $eb, $11, $21, $23
28992     18 00 F0 F4 
28996     FE 14 1A 13 
2899a     00 EB E1 EC 
2899e     09 20 21 11 | 	byte	$18, $00, $f0, $f4, $fe, $14, $1a, $13, $00, $eb, $e1, $ec, $09, $20, $21, $11
289a2     EE CB BF D2 
289a6     F3 11 21 1C 
289aa     06 F4 F0 0A 
289ae     2C 3A 33 15 | 	byte	$ee, $cb, $bf, $d2, $f3, $11, $21, $1c, $06, $f4, $f0, $0a, $2c, $3a, $33, $15
289b2     EB B7 BB F0 
289b6     13 37 34 0C 
289ba     E4 BE D5 FA 
289be     24 39 1A F4 | 	byte	$eb, $b7, $bb, $f0, $13, $37, $34, $0c, $e4, $be, $d5, $fa, $24, $39, $1a, $f4
289c2     CF BF ED 19 
289c6     33 2C 0C E7 
289ca     C6 E2 0B 26 
289ce     2A 10 E3 BF | 	byte	$cf, $bf, $ed, $19, $33, $2c, $0c, $e7, $c6, $e2, $0b, $26, $2a, $10, $e3, $bf
289d2     CD FE 23 3F 
289d6     3A 1A F9 DD 
289da     DA E2 EF E7 
289de     D7 E2 EA 07 | 	byte	$cd, $fe, $23, $3f, $3a, $1a, $f9, $dd, $da, $e2, $ef, $e7, $d7, $e2, $ea, $07
289e2     24 31 2C 23 
289e6     1A 10 07 03 
289ea     F2 E6 C9 BC 
289ee     EF 28 3A 3D | 	byte	$24, $31, $2c, $23, $1a, $10, $07, $03, $f2, $e6, $c9, $bc, $ef, $28, $3a, $3d
289f2     29 00 E4 ED 
289f6     FD F6 ED DA 
289fa     C8 E8 17 34 
289fe     34 23 06 F2 | 	byte	$29, $00, $e4, $ed, $fd, $f6, $ed, $da, $c8, $e8, $17, $34, $34, $23, $06, $f2
28a02     F5 00 00 EF 
28a06     E1 DD EE 0B 
28a0a     1B 19 0D 0B 
28a0e     15 26 25 0A | 	byte	$f5, $00, $00, $ef, $e1, $dd, $ee, $0b, $1b, $19, $0d, $0b, $15, $26, $25, $0a
28a12     D9 B7 B9 DC 
28a16     FA 08 07 02 
28a1a     0C 1C 28 27 
28a1e     0F FE FC FE | 	byte	$d9, $b7, $b9, $dc, $fa, $08, $07, $02, $0c, $1c, $28, $27, $0f, $fe, $fc, $fe
28a22     02 00 F2 EE 
28a26     EB F5 24 4C 
28a2a     33 12 F6 D4 
28a2e     D8 EB ED E0 | 	byte	$02, $00, $f2, $ee, $eb, $f5, $24, $4c, $33, $12, $f6, $d4, $d8, $eb, $ed, $e0
28a32     DB FE 24 34 
28a36     34 19 00 EA 
28a3a     F1 F0 DC E2 
28a3e     F0 04 1D 27 | 	byte	$db, $fe, $24, $34, $34, $19, $00, $ea, $f1, $f0, $dc, $e2, $f0, $04, $1d, $27
28a42     17 02 00 00 
28a46     00 03 07 07 
28a4a     06 00 EE DA 
28a4e     E2 F4 01 09 | 	byte	$17, $02, $00, $00, $00, $03, $07, $07, $06, $00, $ee, $da, $e2, $f4, $01, $09
28a52     04 05 07 03 
28a56     03 F8 FE 00 
28a5a     16 1A 14 08 
28a5e     03 F2 E3 FE | 	byte	$04, $05, $07, $03, $03, $f8, $fe, $00, $16, $1a, $14, $08, $03, $f2, $e3, $fe
28a62     3D 27 FC F6 
28a66     EB EB F2 F5 
28a6a     DF DA 0D 2A 
28a6e     1A 09 07 03 | 	byte	$3d, $27, $fc, $f6, $eb, $eb, $f2, $f5, $df, $da, $0d, $2a, $1a, $09, $07, $03
28a72     F8 00 F2 D3 
28a76     E8 0D 1A 0F 
28a7a     0C 0C 07 08 
28a7e     F9 E9 ED 1B | 	byte	$f8, $00, $f2, $d3, $e8, $0d, $1a, $0f, $0c, $0c, $07, $08, $f9, $e9, $ed, $1b
28a82     32 13 F1 DF 
28a86     DA E2 EB F1 
28a8a     FA 16 2D 1F 
28a8e     04 F9 00 00 | 	byte	$32, $13, $f1, $df, $da, $e2, $eb, $f1, $fa, $16, $2d, $1f, $04, $f9, $00, $00
28a92     F6 F5 F0 FE 
28a96     1A 07 E3 3D 
28a9a     64 1F C7 D2 
28a9e     E9 C8 C5 F4 | 	byte	$f6, $f5, $f0, $fe, $1a, $07, $e3, $3d, $64, $1f, $c7, $d2, $e9, $c8, $c5, $f4
28aa2     E6 1A 53 32 
28aa6     00 FA 1A EE 
28aaa     C0 D4 DB F4 
28aae     1E 2E 13 12 | 	byte	$e6, $1a, $53, $32, $00, $fa, $1a, $ee, $c0, $d4, $db, $f4, $1e, $2e, $13, $12
28ab2     2B 11 DF CD 
28ab6     DB E4 FE 36 
28aba     3B 24 0F EE 
28abe     C8 BE D2 D1 | 	byte	$2b, $11, $df, $cd, $db, $e4, $fe, $36, $3b, $24, $0f, $ee, $c8, $be, $d2, $d1
28ac2     EA 24 38 1F 
28ac6     1C 25 13 EE 
28aca     E2 DF E4 FB 
28ace     0F 07 EE 1A | 	byte	$ea, $24, $38, $1f, $1c, $25, $13, $ee, $e2, $df, $e4, $fb, $0f, $07, $ee, $1a
28ad2     64 5F C7 C8 
28ad6     F8 DF AA D6 
28ada     FC 1A 45 43 
28ade     16 01 1F 00 | 	byte	$64, $5f, $c7, $c8, $f8, $df, $aa, $d6, $fc, $1a, $45, $43, $16, $01, $1f, $00
28ae2     AE BC ED FD 
28ae6     04 26 2A 24 
28aea     28 13 E3 CF 
28aee     E3 E1 ED 26 | 	byte	$ae, $bc, $ed, $fd, $04, $26, $2a, $24, $28, $13, $e3, $cf, $e3, $e1, $ed, $26
28af2     3C 1F 08 00 
28af6     E3 C8 CD DE 
28afa     F6 1E 28 13 
28afe     14 1E 0F F9 | 	byte	$3c, $1f, $08, $00, $e3, $c8, $cd, $de, $f6, $1e, $28, $13, $14, $1e, $0f, $f9
28b02     F8 F5 E8 F8 
28b06     12 12 03 03 
28b0a     05 2D 3F 00 
28b0e     CD F6 00 CF | 	byte	$f8, $f5, $e8, $f8, $12, $12, $03, $03, $05, $2d, $3f, $00, $cd, $f6, $00, $cf
28b12     C5 FE 1B 2D 
28b16     27 13 05 0D 
28b1a     00 CB C9 F9 
28b1e     03 FD 12 26 | 	byte	$c5, $fe, $1b, $2d, $27, $13, $05, $0d, $00, $cb, $c9, $f9, $03, $fd, $12, $26
28b22     21 16 07 EE 
28b26     E5 E8 ED 03 
28b2a     22 23 07 F8 
28b2e     F2 E3 DB ED | 	byte	$21, $16, $07, $ee, $e5, $e8, $ed, $03, $22, $23, $07, $f8, $f2, $e3, $db, $ed
28b32     FE 05 14 13 
28b36     03 03 08 03 
28b3a     FC FE FE FE 
28b3e     05 10 0B EE | 	byte	$fe, $05, $14, $13, $03, $03, $08, $03, $fc, $fe, $fe, $fe, $05, $10, $0b, $ee
28b42     1E 58 1F C3 
28b46     ED 08 CF B5 
28b4a     ED 09 1C 28 
28b4e     1A 08 1A 0F | 	byte	$1e, $58, $1f, $c3, $ed, $08, $cf, $b5, $ed, $09, $1c, $28, $1a, $08, $1a, $0f
28b52     D3 C9 F4 F6 
28b56     E8 05 21 1F 
28b5a     1F 13 FC F6 
28b5e     F0 DA E6 1E | 	byte	$d3, $c9, $f4, $f6, $e8, $05, $21, $1f, $1f, $13, $fc, $f6, $f0, $da, $e6, $1e
28b62     2E 13 03 08 
28b66     EE D0 D4 E6 
28b6a     FE 18 18 11 
28b6e     18 1A 07 F1 | 	byte	$2e, $13, $03, $08, $ee, $d0, $d4, $e6, $fe, $18, $18, $11, $18, $1a, $07, $f1
28b72     F1 EE E1 EA 
28b76     FB FB D4 3D 
28b7a     64 1F CF FE 
28b7e     0F AE AE DE | 	byte	$f1, $ee, $e1, $ea, $fb, $fb, $d4, $3d, $64, $1f, $cf, $fe, $0f, $ae, $ae, $de
28b82     FA 1E 2E 16 
28b86     1A 3D 16 CF 
28b8a     CD ED D7 D2 
28b8e     FE 1A 29 30 | 	byte	$fa, $1e, $2e, $16, $1a, $3d, $16, $cf, $cd, $ed, $d7, $d2, $fe, $1a, $29, $30
28b92     1F 09 08 F6 
28b96     CB DA 0D 1B 
28b9a     09 08 0F 00 
28b9e     EB DA DC F4 | 	byte	$1f, $09, $08, $f6, $cb, $da, $0d, $1b, $09, $08, $0f, $00, $eb, $da, $dc, $f4
28ba2     05 07 16 2B 
28ba6     26 14 04 FE 
28baa     F2 EB F1 F8 
28bae     00 08 14 0D | 	byte	$05, $07, $16, $2b, $26, $14, $04, $fe, $f2, $eb, $f1, $f8, $00, $08, $14, $0d
28bb2     09 03 FE 1E 
28bb6     1F DF E6 08 
28bba     00 DB F6 10 
28bbe     14 1C 10 00 | 	byte	$09, $03, $fe, $1e, $1f, $df, $e6, $08, $00, $db, $f6, $10, $14, $1c, $10, $00
28bc2     0C 0F EE DB 
28bc6     ED FE F9 FE 
28bca     10 18 1A 0B 
28bce     FB F9 05 0B | 	byte	$0c, $0f, $ee, $db, $ed, $fe, $f9, $fe, $10, $18, $1a, $0b, $fb, $f9, $05, $0b
28bd2     00 F4 FC 00 
28bd6     EB E4 FD 0F 
28bda     03 F6 04 17 
28bde     07 F1 F6 0D | 	byte	$00, $f4, $fc, $00, $eb, $e4, $fd, $0f, $03, $f6, $04, $17, $07, $f1, $f6, $0d
28be2     0F F1 FE 13 
28be6     1A 07 FE F2 
28bea     FE 2D 16 D7 
28bee     ED 13 EE D4 | 	byte	$0f, $f1, $fe, $13, $1a, $07, $fe, $f2, $fe, $2d, $16, $d7, $ed, $13, $ee, $d4
28bf2     F1 08 0D 14 
28bf6     07 04 1B 0F 
28bfa     E8 EA FD F9 
28bfe     F1 FB 03 0C | 	byte	$f1, $08, $0d, $14, $07, $04, $1b, $0f, $e8, $ea, $fd, $f9, $f1, $fb, $03, $0c
28c02     12 03 FD 08 
28c06     04 FA 05 16 
28c0a     03 F4 F5 E9 
28c0e     E3 F1 00 07 | 	byte	$12, $03, $fd, $08, $04, $fa, $05, $16, $03, $f4, $f5, $e9, $e3, $f1, $00, $07
28c12     0D 12 11 0D 
28c16     10 00 EE E9 
28c1a     ED DF E3 D7 
28c1e     ED 64 64 03 | 	byte	$0d, $12, $11, $0d, $10, $00, $ee, $e9, $ed, $df, $e3, $d7, $ed, $64, $64, $03
28c22     FE 38 00 B6 
28c26     B5 CD E6 0B 
28c2a     F6 FE 3D 47 
28c2e     0F FC 0C F6 | 	byte	$fe, $38, $00, $b6, $b5, $cd, $e6, $0b, $f6, $fe, $3d, $47, $0f, $fc, $0c, $f6
28c32     CB C2 D6 FA 
28c36     0D 04 0D 32 
28c3a     2D 03 FE 18 
28c3e     14 F6 DF DE | 	byte	$cb, $c2, $d6, $fa, $0d, $04, $0d, $32, $2d, $03, $fe, $18, $14, $f6, $df, $de
28c42     E7 DF CD E6 
28c46     12 1F 16 29 
28c4a     36 1F 00 00 
28c4e     EE E4 E4 EC | 	byte	$e7, $df, $cd, $e6, $12, $1f, $16, $29, $36, $1f, $00, $00, $ee, $e4, $e4, $ec
28c52     F8 0D 0F 14 
28c56     18 14 00 F6 
28c5a     12 1A E7 DE 
28c5e     FE 00 EE F4 | 	byte	$f8, $0d, $0f, $14, $18, $14, $00, $f6, $12, $1a, $e7, $de, $fe, $00, $ee, $f4
28c62     05 10 1E 13 
28c66     00 09 14 F6 
28c6a     E8 EE F8 F6 
28c6e     FB FD 09 18 | 	byte	$05, $10, $1e, $13, $00, $09, $14, $f6, $e8, $ee, $f8, $f6, $fb, $fd, $09, $18
28c72     0C FD 04 10 
28c76     16 0F 00 F6 
28c7a     FD E9 CC E2 
28c7e     FE FB FD 0C | 	byte	$0c, $fd, $04, $10, $16, $0f, $00, $f6, $fd, $e9, $cc, $e2, $fe, $fb, $fd, $0c
28c82     13 0D 0F 0D 
28c86     04 10 08 FA 
28c8a     FE 07 07 FB 
28c8e     FA FE 08 25 | 	byte	$13, $0d, $0f, $0d, $04, $10, $08, $fa, $fe, $07, $07, $fb, $fa, $fe, $08, $25
28c92     13 EE FE 14 
28c96     EE DE F6 FC 
28c9a     FA 03 00 FE 
28c9e     16 13 FB FE | 	byte	$13, $ee, $fe, $14, $ee, $de, $f6, $fc, $fa, $03, $00, $fe, $16, $13, $fb, $fe
28ca2     11 03 ED F5 
28ca6     F6 F6 FE FA 
28caa     F6 0C 11 04 
28cae     14 24 0F F6 | 	byte	$11, $03, $ed, $f5, $f6, $f6, $fe, $fa, $f6, $0c, $11, $04, $14, $24, $0f, $f6
28cb2     FA E9 DB E3 
28cb6     ED ED FE 07 
28cba     05 0C 17 0B 
28cbe     03 0F 07 F8 | 	byte	$fa, $e9, $db, $e3, $ed, $ed, $fe, $07, $05, $0c, $17, $0b, $03, $0f, $07, $f8
28cc2     03 01 EE E6 
28cc6     12 31 16 FB 
28cca     14 1A 00 EB 
28cce     EB ED F6 F2 | 	byte	$03, $01, $ee, $e6, $12, $31, $16, $fb, $14, $1a, $00, $eb, $eb, $ed, $f6, $f2
28cd2     E3 F1 14 0F 
28cd6     00 0D 16 0F 
28cda     03 FE F2 FA 
28cde     FB E9 EA 01 | 	byte	$e3, $f1, $14, $0f, $00, $0d, $16, $0f, $03, $fe, $f2, $fa, $fb, $e9, $ea, $01
28ce2     00 FB 0C 24 
28ce6     21 0F 00 FD 
28cea     F4 E3 D3 DB 
28cee     F1 F8 F9 08 | 	byte	$00, $fb, $0c, $24, $21, $0f, $00, $fd, $f4, $e3, $d3, $db, $f1, $f8, $f9, $08
28cf2     16 1C 1A 14 
28cf6     14 10 04 FB 
28cfa     F9 F9 EE E7 
28cfe     EB F0 12 28 | 	byte	$16, $1c, $1a, $14, $14, $10, $04, $fb, $f9, $f9, $ee, $e7, $eb, $f0, $12, $28
28d02     07 03 24 16 
28d06     F5 F6 FA F1 
28d0a     F1 EE E1 F6 
28d0e     10 00 FE 16 | 	byte	$07, $03, $24, $16, $f5, $f6, $fa, $f1, $f1, $ee, $e1, $f6, $10, $00, $fe, $16
28d12     1C 0B 08 07 
28d16     FC FE FB E7 
28d1a     ED 00 F6 FE 
28d1e     1E 18 07 0D | 	byte	$1c, $0b, $08, $07, $fc, $fe, $fb, $e7, $ed, $00, $f6, $fe, $1e, $18, $07, $0d
28d22     07 F1 EE F1 
28d26     E3 EB F4 ED 
28d2a     F6 08 07 0D 
28d2e     1C 1F 11 14 | 	byte	$07, $f1, $ee, $f1, $e3, $eb, $f4, $ed, $f6, $08, $07, $0d, $1c, $1f, $11, $14
28d32     1A 08 FA F6 
28d36     E8 ED EB FC 
28d3a     14 00 FE 17 
28d3e     16 00 00 05 | 	byte	$1a, $08, $fa, $f6, $e8, $ed, $eb, $fc, $14, $00, $fe, $17, $16, $00, $00, $05
28d42     01 F9 F8 EB 
28d46     F4 00 F9 F5 
28d4a     08 11 07 03 
28d4e     0D 04 00 04 | 	byte	$01, $f9, $f8, $eb, $f4, $00, $f9, $f5, $08, $11, $07, $03, $0d, $04, $00, $04
28d52     FB F4 FC FA 
28d56     FD 14 13 00 
28d5a     03 07 F1 ED 
28d5e     F6 F1 F4 FC | 	byte	$fb, $f4, $fc, $fa, $fd, $14, $13, $00, $03, $07, $f1, $ed, $f6, $f1, $f4, $fc
28d62     F9 F6 05 07 
28d66     FC 05 10 08 
28d6a     00 0D 0F EE 
28d6e     F5 1E 2A 00 | 	byte	$f9, $f6, $05, $07, $fc, $05, $10, $08, $00, $0d, $0f, $ee, $f5, $1e, $2a, $00
28d72     F1 0B 07 F1 
28d76     EC EB F4 FE 
28d7a     F6 E7 FE 16 
28d7e     0B FE 0C 12 | 	byte	$f1, $0b, $07, $f1, $ec, $eb, $f4, $fe, $f6, $e7, $fe, $16, $0b, $fe, $0c, $12
28d82     08 00 F6 F8 
28d86     00 F6 E9 F6 
28d8a     09 00 F5 0D 
28d8e     28 1F 07 00 | 	byte	$08, $00, $f6, $f8, $00, $f6, $e9, $f6, $09, $00, $f5, $0d, $28, $1f, $07, $00
28d92     03 F2 D8 D7 
28d96     E7 F1 EE F6 
28d9a     0C 1A 16 0D 
28d9e     16 1B 07 FD | 	byte	$03, $f2, $d8, $d7, $e7, $f1, $ee, $f6, $0c, $1a, $16, $0d, $16, $1b, $07, $fd
28da2     03 00 F2 EB 
28da6     EB E7 F6 1E 
28daa     21 F6 0D 28 
28dae     0B F1 FA F5 | 	byte	$03, $00, $f2, $eb, $eb, $e7, $f6, $1e, $21, $f6, $0d, $28, $0b, $f1, $fa, $f5
28db2     F1 EE E7 E6 
28db6     FE 0D FB 01 
28dba     1A 18 08 08 
28dbe     09 03 00 F5 | 	byte	$f1, $ee, $e7, $e6, $fe, $0d, $fb, $01, $1a, $18, $08, $08, $09, $03, $00, $f5
28dc2     E9 F5 FB EE 
28dc6     EC 09 24 1F 
28dca     0C 0D 13 00 
28dce     E3 DE EA E9 | 	byte	$e9, $f5, $fb, $ee, $ec, $09, $24, $1f, $0c, $0d, $13, $00, $e3, $de, $ea, $e9
28dd2     DC E6 FE 0D 
28dd6     04 12 28 25 
28dda     12 14 1A 0B 
28dde     FD F6 E9 E8 | 	byte	$dc, $e6, $fe, $0d, $04, $12, $28, $25, $12, $14, $1a, $0b, $fd, $f6, $e9, $e8
28de2     EB E1 E2 0D 
28de6     2D 07 FE 26 
28dea     1F 00 FA FD 
28dee     F4 F1 EA DB | 	byte	$eb, $e1, $e2, $0d, $2d, $07, $fe, $26, $1f, $00, $fa, $fd, $f4, $f1, $ea, $db
28df2     ED 0C 00 F1 
28df6     0D 1C 0F 09 
28dfa     11 0B 04 FD 
28dfe     EB EB FB F1 | 	byte	$ed, $0c, $00, $f1, $0d, $1c, $0f, $09, $11, $0b, $04, $fd, $eb, $eb, $fb, $f1
28e02     E2 FE 22 1F 
28e06     08 0B 14 03 
28e0a     EC E5 EB F0 
28e0e     E7 E2 ED 04 | 	byte	$e2, $fe, $22, $1f, $08, $0b, $14, $03, $ec, $e5, $eb, $f0, $e7, $e2, $ed, $04
28e12     07 00 14 2A 
28e16     1F 13 1A 16 
28e1a     0B 00 EB E9 
28e1e     EA E2 DB EA | 	byte	$07, $00, $14, $2a, $1f, $13, $1a, $16, $0b, $00, $eb, $e9, $ea, $e2, $db, $ea
28e22     1E 1A F6 0C 
28e26     28 14 F9 03 
28e2a     04 F6 F6 EB 
28e2e     E1 F6 08 F5 | 	byte	$1e, $1a, $f6, $0c, $28, $14, $f9, $03, $04, $f6, $f6, $eb, $e1, $f6, $08, $f5
28e32     F1 12 1A 07 
28e36     09 11 0C 03 
28e3a     00 F0 F1 FB 
28e3e     EE E6 0B 21 | 	byte	$f1, $12, $1a, $07, $09, $11, $0c, $03, $00, $f0, $f1, $fb, $ee, $e6, $0b, $21
28e42     0F 01 0D 0B 
28e46     F6 EC EE F1 
28e4a     F4 EC EA F6 
28e4e     07 03 FB 0D | 	byte	$0f, $01, $0d, $0b, $f6, $ec, $ee, $f1, $f4, $ec, $ea, $f6, $07, $03, $fb, $0d
28e52     24 16 0C 14 
28e56     18 0D FA F1 
28e5a     F0 EB EA E4 
28e5e     FE 1E 07 FE | 	byte	$24, $16, $0c, $14, $18, $0d, $fa, $f1, $f0, $eb, $ea, $e4, $fe, $1e, $07, $fe
28e62     16 1A 07 FE 
28e66     09 00 F9 F9 
28e6a     EC EB FE 03 
28e6e     F1 FA 10 0F | 	byte	$16, $1a, $07, $fe, $09, $00, $f9, $f9, $ec, $eb, $fe, $03, $f1, $fa, $10, $0f
28e72     03 09 11 08 
28e76     01 00 F8 F6 
28e7a     F9 F1 F0 0D 
28e7e     1C 0B FE 0C | 	byte	$03, $09, $11, $08, $01, $00, $f8, $f6, $f9, $f1, $f0, $0d, $1c, $0b, $fe, $0c
28e82     08 F5 EA EE 
28e86     F1 F1 ED EC 
28e8a     FC 08 07 03 
28e8e     16 1F 0F 0D | 	byte	$08, $f5, $ea, $ee, $f1, $f1, $ed, $ec, $fc, $08, $07, $03, $16, $1f, $0f, $0d
28e92     11 0B 03 FB 
28e96     F5 F2 ED E6 
28e9a     E6 F1 1A 1A 
28e9e     F9 08 1F 14 | 	byte	$11, $0b, $03, $fb, $f5, $f2, $ed, $e6, $e6, $f1, $1a, $1a, $f9, $08, $1f, $14
28ea2     FB FA 07 00 
28ea6     F0 F1 EB F4 
28eaa     00 00 F6 FE 
28eae     14 0D 04 08 | 	byte	$fb, $fa, $07, $00, $f0, $f1, $eb, $f4, $00, $00, $f6, $fe, $14, $0d, $04, $08
28eb2     12 08 00 F9 
28eb6     F9 F5 F2 EE 
28eba     F1 08 1E 16 
28ebe     04 08 0D 00 | 	byte	$12, $08, $00, $f9, $f9, $f5, $f2, $ee, $f1, $08, $1e, $16, $04, $08, $0d, $00
28ec2     EE E8 ED F4 
28ec6     F0 E8 ED FE 
28eca     08 03 0B 1E 
28ece     1A 13 11 0D | 	byte	$ee, $e8, $ed, $f4, $f0, $e8, $ed, $fe, $08, $03, $0b, $1e, $1a, $13, $11, $0d
28ed2     08 07 FD F2 
28ed6     F0 EE E7 EB 
28eda     FE 16 0B 00 
28ede     0D 16 0C 00 | 	byte	$08, $07, $fd, $f2, $f0, $ee, $e7, $eb, $fe, $16, $0b, $00, $0d, $16, $0c, $00
28ee2     03 FE FB F6 
28ee6     F5 ED F4 FE 
28eea     00 FB FE 09 
28eee     0B 0B 08 0B | 	byte	$03, $fe, $fb, $f6, $f5, $ed, $f4, $fe, $00, $fb, $fe, $09, $0b, $0b, $08, $0b
28ef2     08 07 00 FC 
28ef6     F6 F9 F9 F6 
28efa     F8 0C 14 0B 
28efe     03 05 03 FC | 	byte	$08, $07, $00, $fc, $f6, $f9, $f9, $f6, $f8, $0c, $14, $0b, $03, $05, $03, $fc
28f02     F6 F1 EC F4 
28f06     FA F2 F1 FE 
28f0a     08 05 08 11 
28f0e     11 10 0F 0F | 	byte	$f6, $f1, $ec, $f4, $fa, $f2, $f1, $fe, $08, $05, $08, $11, $11, $10, $0f, $0f
28f12     04 00 03 00 
28f16     F2 F1 F4 F9 
28f1a     04 0C 03 FE 
28f1e     05 0D 08 03 | 	byte	$04, $00, $03, $00, $f2, $f1, $f4, $f9, $04, $0c, $03, $fe, $05, $0d, $08, $03
28f22     00 00 FE 00 
28f26     FD F6 F6 FD 
28f2a     00 00 00 00 
28f2e     03 03 05 04 | 	byte	$00, $00, $fe, $00, $fd, $f6, $f6, $fd, $00, $00, $00, $00, $03, $03, $05, $04
28f32     03 03 07 04 
28f36     01 FE FC FC 
28f3a     FE FD 00 07 
28f3e     08 08 03 FC | 	byte	$03, $03, $07, $04, $01, $fe, $fc, $fc, $fe, $fd, $00, $07, $08, $08, $03, $fc
28f42     F9 FC FE 00 
28f46     00 00 FC FC 
28f4a     FB FB FB 01 
28f4e     03 00 03 05 | 	byte	$f9, $fc, $fe, $00, $00, $00, $fc, $fc, $fb, $fb, $fb, $01, $03, $00, $03, $05
28f52     03 00 03 00 
28f56     FD FB 03 05 
28f5a     04 08 07 03 
28f5e     00 07 03 03 | 	byte	$03, $00, $03, $00, $fd, $fb, $03, $05, $04, $08, $07, $03, $00, $07, $03, $03
28f62     00 00 FB FE 
28f66     FD 00 FB FD 
28f6a     FE 00 FD FE 
28f6e     00 00 FE FE | 	byte	$00, $00, $fb, $fe, $fd, $00, $fb, $fd, $fe, $00, $fd, $fe, $00, $00, $fe, $fe
28f72     00 00 00 00 
28f76     00          | 	byte	$00[5]
28f77     FE 00 01 00 
28f7b     00 01 00 00 
28f7f     00 03 01 00 
28f83     03 05 03 00 | 	byte	$fe, $00, $01, $00, $00, $01, $00, $00, $00, $03, $01, $00, $03, $05, $03, $00
28f87     00 00 00 00 
28f8b     00          | 	byte	$00[5]
28f8c     03 00 F9 F4 
28f90     05 12 03 E9 
28f94     F6 11 08 F2 
28f98     ED 03 0B 00 | 	byte	$03, $00, $f9, $f4, $05, $12, $03, $e9, $f6, $11, $08, $f2, $ed, $03, $0b, $00
28f9c     FA 00 09 05 
28fa0     03 01 03 05 
28fa4     08 04 03 01 
28fa8     04 03 00 00 | 	byte	$fa, $00, $09, $05, $03, $01, $03, $05, $08, $04, $03, $01, $04, $03, $00, $00
28fac     03 00 00 00 
28fb0     00 00 FD 00 
28fb4     00 00 FD FC 
28fb8     FE FE FD 00 | 	byte	$03, $00, $00, $00, $00, $00, $fd, $00, $00, $00, $fd, $fc, $fe, $fe, $fd, $00
28fbc     00 00 01 00 
28fc0     00 01 03 03 
28fc4     03 01 03 03 
28fc8     01 03 01 01 | 	byte	$00, $00, $01, $00, $00, $01, $03, $03, $03, $01, $03, $03, $01, $03, $01, $01
28fcc     01 00 00 01 
28fd0     01 01 FE FE 
28fd4     01 01 FD FC 
28fd8     00 01 FC FC | 	byte	$01, $00, $00, $01, $01, $01, $fe, $fe, $01, $01, $fd, $fc, $00, $01, $fc, $fc
28fdc     00 01 FB FB 
28fe0     01 03 00 FD 
28fe4     00 03 01 FE 
28fe8     00 03 00 00 | 	byte	$00, $01, $fb, $fb, $01, $03, $00, $fd, $00, $03, $01, $fe, $00, $03, $00, $00
28fec     01 03 01 00 
28ff0     01 03 03 01 
28ff4     03 04 03 03 
28ff8     00 01 01 00 | 	byte	$01, $03, $01, $00, $01, $03, $03, $01, $03, $04, $03, $03, $00, $01, $01, $00
28ffc     00 FE FE 00 
29000     FE FE FE FD 
29004     FE FE 00 FE 
29008     FE 00 00 FE | 	byte	$00, $fe, $fe, $00, $fe, $fe, $fe, $fd, $fe, $fe, $00, $fe, $fe, $00, $00, $fe
2900c     FE 00 00 00 
29010     01 01 00 01 
29014     01 01 01 00 
29018     01 01 01 00 | 	byte	$fe, $00, $00, $00, $01, $01, $00, $01, $01, $01, $01, $00, $01, $01, $01, $00
2901c     00 00 00 00 
29020     00          | 	byte	$00[5]
29021     01 00 00 00 
29025     00 00 00 00 
29029     00 00 00 00 
2902d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29031     00 00 01 00 
29035     00 00 00 00 
29039     00 00 00 00 
2903d     00 00 00 00 | 	byte	$00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29041     00 00 01 01 
29045     00 01 00 00 
29049     00 00 00 00 
2904d     01 01 01 01 | 	byte	$00, $00, $01, $01, $00, $01, $00, $00, $00, $00, $00, $00, $01, $01, $01, $01
29051     01 01 00 00 
29055     01 01 00 00 
29059     00 00 00 00 
2905d     00 00 00 00 | 	byte	$01, $01, $00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29061     00 00 00 00 
29065     00 00       | 	byte	$00[6]
29067     01 00 01 00 
2906b     00 01 00 00 
2906f     03 01 01 00 
29073     00 00 01 00 | 	byte	$01, $00, $01, $00, $00, $01, $00, $00, $03, $01, $01, $00, $00, $00, $01, $00
29077     00 01 01 00 
2907b     00 00 00 00 
2907f     00 00 00 00 
29083     00 00 00 00 | 	byte	$00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29087     00 00 00 01 
2908b     00 00 00 00 
2908f     00 00 00 00 
29093     00 00 00 00 | 	byte	$00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29097     00 00 00 00 
2909b     00 00 00 00 
2909f     00 00 00 00 
290a3     00          | 	byte	$00[13]
290a4     01 00 00 00 
290a8     00 00 00 00 
290ac     00 00 00 00 
290b0     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
290b4     00 00 00 00 
290b8     00 00 00 00 
290bc     00 00       | 	byte	$00[10]
290be     01 01 00 00 
290c2     00 00 00 00 
290c6     00 01 00 00 
290ca     00 00 00 00 | 	byte	$01, $01, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00
290ce     00 00 01 00 
290d2     00 00 00 00 
290d6     00 00 00 01 
290da     00 00 00 00 | 	byte	$00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00
290de     00 00 00 01 
290e2     00 00 00 00 
290e6     00 00 00 00 
290ea     01 00 00 00 | 	byte	$00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00
290ee     00 00 00 00 
290f2     00 00 00 00 
290f6     00 00 00 00 
290fa     00          | 	byte	$00[13]
290fb     01 00 00 00 
290ff     00 00 00 00 
29103     00 01 00 00 
29107     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00
2910b     00 00 01 01 
2910f     00 00 00 00 
29113     00 00 00 01 
29117     00 00 00 00 | 	byte	$00, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00
2911b     00 00 00 00 
2911f     00 00 00 00 
29123     00 00 00 00 | 	byte	$00[12]
29127     01 00 00 00 
2912b     00 00 00 00 
2912f     00 01 00 01 
29133     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $01, $00, $00, $00, $00
29137     00 00 00 00 
2913b     00 00 00 00 
2913f     00 00 00 00 
29143     00 00 00 00 
29147     00 00 00    | 	byte	$00[19]
2914a     01 00 00 00 
2914e     00 00 00 00 
29152     00 00 00 00 
29156     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2915a     00 00 00 00 
2915e     00 00 00 00 
29162     00 00 00 00 
29166     00 00 00 00 
2916a     00 00 00    | 	byte	$00[19]
2916d     01 00 01 00 
29171     00 00 00 00 
29175     00 01 00 00 
29179     00 00 00 00 | 	byte	$01, $00, $01, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00
2917d     00 00 00 00 
29181     00 00 00 00 
29185     00 00       | 	byte	$00[10]
29187     01 00 00 00 
2918b     00 00 00 00 
2918f     00 01 00 01 
29193     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $01, $00, $00, $00, $00
29197     00 01 01 00 
2919b     01 00 00 00 
2919f     00 00 01 00 
291a3     00 00 00 00 | 	byte	$00, $01, $01, $00, $01, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00
291a7     00 00 00 01 
291ab     01 01 00 00 
291af     01 00 00 00 
291b3     01 01 01 00 | 	byte	$00, $00, $00, $01, $01, $01, $00, $00, $01, $00, $00, $00, $01, $01, $01, $00
291b7     00 00 00 00 
291bb     00 00 00 00 
291bf     00 00 00 00 
291c3     00 00 00    | 	byte	$00[15]
291c6     01 00 00 00 
291ca     00 00 00 01 
291ce     01 00 00 00 
291d2     01 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $01, $01, $00, $00, $00, $01, $00, $00, $00
291d6     00 00 00 00 
291da     00 00 00 00 
291de     00 00 00 00 
291e2     00 00 00 00 
291e6     00          | 	byte	$00[17]
291e7     01 00 00 00 
291eb     00 00 00 00 
291ef     00 01 00 01 
291f3     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $01, $00, $00, $00, $00
291f7     00 00 00 00 
291fb     00 00 00 00 
291ff     00 00 00 00 
29203     00 00 00 00 
29207     00 00 00    | 	byte	$00[19]
2920a     01 00 00 00 
2920e     00 00 00 00 
29212     00 01 00 00 
29216     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00
2921a     00 00 00 00 
2921e     00 00 00 00 
29222     00 00       | 	byte	$00[10]
29224     01 00 00 00 
29228     00 00 00 00 
2922c     00 01 00 01 
29230     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $01, $00, $00, $00, $00
29234     00 00 01 00 
29238     00 00 00 00 
2923c     00 00 00 01 
29240     00 00 00 00 | 	byte	$00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00
29244     00 00 00 01 
29248     01 01 00 00 
2924c     00 00 01 03 
29250     05 05 16 F6 | 	byte	$00, $00, $00, $01, $01, $01, $00, $00, $00, $00, $01, $03, $05, $05, $16, $f6
29254     CD 1A 09 EE 
29258     BE FE 36 0D 
2925c     D7 FA FE 05 
29260     E6 ED 16 FE | 	byte	$cd, $1a, $09, $ee, $be, $fe, $36, $0d, $d7, $fa, $fe, $05, $e6, $ed, $16, $fe
29264     E9 ED 16 36 
29268     03 E7 ED 0D 
2926c     09 FB F1 FE 
29270     F8 FE FB 1A | 	byte	$e9, $ed, $16, $36, $03, $e7, $ed, $0d, $09, $fb, $f1, $fe, $f8, $fe, $fb, $1a
29274     1B F5 EA F5 
29278     FE 03 F6 08 
2927c     00 08 0D 03 
29280     08 05 0F 00 | 	byte	$1b, $f5, $ea, $f5, $fe, $03, $f6, $08, $00, $08, $0d, $03, $08, $05, $0f, $00
29284     F8 FB F4 00 
29288     FA FA FB FE 
2928c     0B 0D 03 00 
29290     F9 F8 FB FE | 	byte	$f8, $fb, $f4, $00, $fa, $fa, $fb, $fe, $0b, $0d, $03, $00, $f9, $f8, $fb, $fe
29294     FB FD 05 09 
29298     03 01 01 01 
2929c     01 00 03 FD 
292a0     FE FE 00 FB | 	byte	$fb, $fd, $05, $09, $03, $01, $01, $01, $01, $00, $03, $fd, $fe, $fe, $00, $fb
292a4     00 FD F9 FD 
292a8     01 00 04 00 
292ac     05 08 03 00 
292b0     FB FB FE 00 | 	byte	$00, $fd, $f9, $fd, $01, $00, $04, $00, $05, $08, $03, $00, $fb, $fb, $fe, $00
292b4     07 07 FE 01 
292b8     00 F9 F6 00 
292bc     00 00 FC 00 
292c0     0B 1A 1C 14 | 	byte	$07, $07, $fe, $01, $00, $f9, $f6, $00, $00, $00, $fc, $00, $0b, $1a, $1c, $14
292c4     0D 03 00 F5 
292c8     F0 E9 F1 FA 
292cc     FC 00 FE 03 
292d0     03 03 03 05 | 	byte	$0d, $03, $00, $f5, $f0, $e9, $f1, $fa, $fc, $00, $fe, $03, $03, $03, $03, $05
292d4     03 FD 00 FD 
292d8     F8 FC 04 0B 
292dc     0D 0F 0D 00 
292e0     F6 EB EA EE | 	byte	$03, $fd, $00, $fd, $f8, $fc, $04, $0b, $0d, $0f, $0d, $00, $f6, $eb, $ea, $ee
292e4     F6 03 14 17 
292e8     0C 07 03 FC 
292ec     F1 F0 F6 05 
292f0     10 0D 07 04 | 	byte	$f6, $03, $14, $17, $0c, $07, $03, $fc, $f1, $f0, $f6, $05, $10, $0d, $07, $04
292f4     09 14 07 F5 
292f8     ED F8 F9 F8 
292fc     FA FE 0D 17 
29300     0B F5 FA 1A | 	byte	$09, $14, $07, $f5, $ed, $f8, $f9, $f8, $fa, $fe, $0d, $17, $0b, $f5, $fa, $1a
29304     21 07 EB F0 
29308     F8 FA F6 F6 
2930c     FC 01 0D 0B 
29310     07 03 00 00 | 	byte	$21, $07, $eb, $f0, $f8, $fa, $f6, $f6, $fc, $01, $0d, $0b, $07, $03, $00, $00
29314     FB F1 F5 FE 
29318     03 01 FE FC 
2931c     FD 09 0D 0D 
29320     0B 08 00 EE | 	byte	$fb, $f1, $f5, $fe, $03, $01, $fe, $fc, $fd, $09, $0d, $0d, $0b, $08, $00, $ee
29324     E7 EB F0 F9 
29328     07 08 0C 0C 
2932c     07 00 F6 F6 
29330     F4 FC 07 0D | 	byte	$e7, $eb, $f0, $f9, $07, $08, $0c, $0c, $07, $00, $f6, $f6, $f4, $fc, $07, $0d
29334     08 0C 07 03 
29338     03 04 FB F5 
2933c     09 13 00 EC 
29340     EB F5 03 0F | 	byte	$08, $0c, $07, $03, $03, $04, $fb, $f5, $09, $13, $00, $ec, $eb, $f5, $03, $0f
29344     07 F9 FE 16 
29348     1F 11 F2 E6 
2934c     EC F6 F4 F2 
29350     FC 0B 16 13 | 	byte	$07, $f9, $fe, $16, $1f, $11, $f2, $e6, $ec, $f6, $f4, $f2, $fc, $0b, $16, $13
29354     07 00 00 00 
29358     FA F4 F4 FC 
2935c     01 0B 0B 00 
29360     F9 FE 00 F9 | 	byte	$07, $00, $00, $00, $fa, $f4, $f4, $fc, $01, $0b, $0b, $00, $f9, $fe, $00, $f9
29364     F1 F4 05 1E 
29368     29 1F 00 E9 
2936c     E1 DF DF ED 
29370     04 11 12 10 | 	byte	$f1, $f4, $05, $1e, $29, $1f, $00, $e9, $e1, $df, $df, $ed, $04, $11, $12, $10
29374     0C 00 F6 EB 
29378     EE FC 08 0D 
2937c     00 F6 05 1E 
29380     23 13 F2 E9 | 	byte	$0c, $00, $f6, $eb, $ee, $fc, $08, $0d, $00, $f6, $05, $1e, $23, $13, $f2, $e9
29384     F1 FE FB F0 
29388     04 26 28 07 
2938c     D7 C5 E6 FE 
29390     16 36 39 1F | 	byte	$f1, $fe, $fb, $f0, $04, $26, $28, $07, $d7, $c5, $e6, $fe, $16, $36, $39, $1f
29394     F6 DF C7 BA 
29398     DE 0D 28 27 
2939c     1B 13 0B FB 
293a0     E9 D8 DA F6 | 	byte	$f6, $df, $c7, $ba, $de, $0d, $28, $27, $1b, $13, $0b, $fb, $e9, $d8, $da, $f6
293a4     16 23 1A 0F 
293a8     07 F6 E5 DF 
293ac     EC FE 09 12 
293b0     1A 1A 14 14 | 	byte	$16, $23, $1a, $0f, $07, $f6, $e5, $df, $ec, $fe, $09, $12, $1a, $1a, $14, $14
293b4     13 00 CB BE 
293b8     E6 08 0D 12 
293bc     12 0F 00 F1 
293c0     ED F8 09 14 | 	byte	$13, $00, $cb, $be, $e6, $08, $0d, $12, $12, $0f, $00, $f1, $ed, $f8, $09, $14
293c4     08 F8 F6 05 
293c8     16 0F F6 E2 
293cc     FA 1E 1F 00 
293d0     ED 03 13 F2 | 	byte	$08, $f8, $f6, $05, $16, $0f, $f6, $e2, $fa, $1e, $1f, $00, $ed, $03, $13, $f2
293d4     CF E6 0D 1F 
293d8     16 00 FE 1E 
293dc     25 00 C7 C5 
293e0     F4 0D 11 0B | 	byte	$cf, $e6, $0d, $1f, $16, $00, $fe, $1e, $25, $00, $c7, $c5, $f4, $0d, $11, $0b
293e4     08 0D 10 08 
293e8     F1 DF EB 05 
293ec     16 08 FB FE 
293f0     0C 0C FB EE | 	byte	$08, $0d, $10, $08, $f1, $df, $eb, $05, $16, $08, $fb, $fe, $0c, $0c, $fb, $ee
293f4     F6 09 13 00 
293f8     EB EB FE 09 
293fc     0C 12 14 0B 
29400     03 08 04 EE | 	byte	$f6, $09, $13, $00, $eb, $eb, $fe, $09, $0c, $12, $14, $0b, $03, $08, $04, $ee
29404     DE ED 03 03 
29408     FC FD FE FE 
2940c     03 0D 10 0D 
29410     07 F2 E5 EA | 	byte	$de, $ed, $03, $03, $fc, $fd, $fe, $fe, $03, $0d, $10, $0d, $07, $f2, $e5, $ea
29414     09 25 1F 00 
29418     D4 D5 FE 2B 
2941c     38 16 E7 D2 
29420     EB FE F9 EE | 	byte	$09, $25, $1f, $00, $d4, $d5, $fe, $2b, $38, $16, $e7, $d2, $eb, $fe, $f9, $ee
29424     F4 0D 32 4D 
29428     32 DF A5 BE 
2942c     FE 12 0F 16 
29430     1F 1A 0B F1 | 	byte	$f4, $0d, $32, $4d, $32, $df, $a5, $be, $fe, $12, $0f, $16, $1f, $1a, $0b, $f1
29434     D5 D3 F6 1A 
29438     1F 0C 00 05 
2943c     04 F6 ED F8 
29440     09 0D 07 08 | 	byte	$d5, $d3, $f6, $1a, $1f, $0c, $00, $05, $04, $f6, $ed, $f8, $09, $0d, $07, $08
29444     03 F6 E7 EA 
29448     05 27 2E 13 
2944c     EE E3 F6 04 
29450     08 04 03 03 | 	byte	$03, $f6, $e7, $ea, $05, $27, $2e, $13, $ee, $e3, $f6, $04, $08, $04, $03, $03
29454     FD EB D8 DE 
29458     09 2D 32 13 
2945c     F1 E2 F0 FE 
29460     07 0B 10 0F | 	byte	$fd, $eb, $d8, $de, $09, $2d, $32, $13, $f1, $e2, $f0, $fe, $07, $0b, $10, $0f
29464     00 F5 FA 07 
29468     09 00 F2 EB 
2946c     EB EB FA 16 
29470     34 3D 23 EE | 	byte	$00, $f5, $fa, $07, $09, $00, $f2, $eb, $eb, $eb, $fa, $16, $34, $3d, $23, $ee
29474     B6 AE DB 14 
29478     2D 2A 1A 07 
2947c     F2 DF DA EA 
29480     05 17 1A 0F | 	byte	$b6, $ae, $db, $14, $2d, $2a, $1a, $07, $f2, $df, $da, $ea, $05, $17, $1a, $0f
29484     FB F4 FA 00 
29488     FE FA FD 03 
2948c     0B 0B 04 03 
29490     08 0B FB DF | 	byte	$fb, $f4, $fa, $00, $fe, $fa, $fd, $03, $0b, $0b, $04, $03, $08, $0b, $fb, $df
29494     E2 09 24 1F 
29498     07 F5 ED F4 
2949c     0D 1C 07 E5 
294a0     E2 FA 08 07 | 	byte	$e2, $09, $24, $1f, $07, $f5, $ed, $f4, $0d, $1c, $07, $e5, $e2, $fa, $08, $07
294a4     00 F5 ED FE 
294a8     1E 1F 00 E9 
294ac     F6 0D 0F 03 
294b0     FA 01 08 04 | 	byte	$00, $f5, $ed, $fe, $1e, $1f, $00, $e9, $f6, $0d, $0f, $03, $fa, $01, $08, $04
294b4     FA F8 01 0F 
294b8     07 EB D7 E5 
294bc     05 29 41 36 
294c0     00 AB AD EA | 	byte	$fa, $f8, $01, $0f, $07, $eb, $d7, $e5, $05, $29, $41, $36, $00, $ab, $ad, $ea
294c4     1A 29 23 13 
294c8     00 F5 F4 F1 
294cc     F1 FE 0D 11 
294d0     08 00 FE 00 | 	byte	$1a, $29, $23, $13, $00, $f5, $f4, $f1, $f1, $fe, $0d, $11, $08, $00, $fe, $00
294d4     04 03 F8 F0 
294d8     FA 08 0D 0C 
294dc     08 07 03 FC 
294e0     F0 ED FA 0D | 	byte	$04, $03, $f8, $f0, $fa, $08, $0d, $0c, $08, $07, $03, $fc, $f0, $ed, $fa, $0d
294e4     1A 13 03 F5 
294e8     F1 FE 17 1A 
294ec     F9 D7 E2 FE 
294f0     14 0D FB EC | 	byte	$1a, $13, $03, $f5, $f1, $fe, $17, $1a, $f9, $d7, $e2, $fe, $14, $0d, $fb, $ec
294f4     F4 0C 14 0F 
294f8     00 FC 01 09 
294fc     08 03 F9 FA 
29500     04 0B 05 FC | 	byte	$f4, $0c, $14, $0f, $00, $fc, $01, $09, $08, $03, $f9, $fa, $04, $0b, $05, $fc
29504     FA FB F9 F4 
29508     EE F1 09 32 
2950c     49 1F BF A3 
29510     CD 0D 31 2E | 	byte	$fa, $fb, $f9, $f4, $ee, $f1, $09, $32, $49, $1f, $bf, $a3, $cd, $0d, $31, $2e
29514     0F EE ED 03 
29518     04 F2 EE FD 
2951c     0D 14 0F 00 
29520     F4 FD 05 00 | 	byte	$0f, $ee, $ed, $03, $04, $f2, $ee, $fd, $0d, $14, $0f, $00, $f4, $fd, $05, $00
29524     F5 F1 FE 0D 
29528     13 0B 00 FA 
2952c     FD FB F5 F6 
29530     03 11 14 0F | 	byte	$f5, $f1, $fe, $0d, $13, $0b, $00, $fa, $fd, $fb, $f5, $f6, $03, $11, $14, $0f
29534     FB EC F6 07 
29538     16 13 00 E1 
2953c     E6 FE 11 08 
29540     F8 EE F5 01 | 	byte	$fb, $ec, $f6, $07, $16, $13, $00, $e1, $e6, $fe, $11, $08, $f8, $ee, $f5, $01
29544     12 14 08 FE 
29548     FB F8 FA 08 
2954c     13 0D 05 00 
29550     F9 F1 F8 FE | 	byte	$12, $14, $08, $fe, $fb, $f8, $fa, $08, $13, $0d, $05, $00, $f9, $f1, $f8, $fe
29554     00 FD F5 EE 
29558     FE 29 45 23 
2955c     C7 A3 BE 0D 
29560     38 32 0F E1 | 	byte	$00, $fd, $f5, $ee, $fe, $29, $45, $23, $c7, $a3, $be, $0d, $38, $32, $0f, $e1
29564     E6 05 0D 00 
29568     EE F5 09 18 
2956c     14 00 ED F6 
29570     05 07 FB F4 | 	byte	$e6, $05, $0d, $00, $ee, $f5, $09, $18, $14, $00, $ed, $f6, $05, $07, $fb, $f4
29574     FC 0C 14 0F 
29578     00 F9 FC FD 
2957c     FA F9 01 0D 
29580     13 0F 00 F0 | 	byte	$fc, $0c, $14, $0f, $00, $f9, $fc, $fd, $fa, $f9, $01, $0d, $13, $0f, $00, $f0
29584     F5 09 17 11 
29588     F9 E5 EB 03 
2958c     0F 07 F6 F1 
29590     FC 09 05 03 | 	byte	$f5, $09, $17, $11, $f9, $e5, $eb, $03, $0f, $07, $f6, $f1, $fc, $09, $05, $03
29594     07 0B 08 04 
29598     FC FB 00 08 
2959c     07 00 FD 00 
295a0     08 07 FB EE | 	byte	$07, $0b, $08, $04, $fc, $fb, $00, $08, $07, $00, $fd, $00, $08, $07, $fb, $ee
295a4     E7 E6 FD 26 
295a8     48 32 DF A7 
295ac     B5 FE 2D 32 
295b0     13 E4 E5 05 | 	byte	$e7, $e6, $fd, $26, $48, $32, $df, $a7, $b5, $fe, $2d, $32, $13, $e4, $e5, $05
295b4     14 08 EE E5 
295b8     FA 16 1A 08 
295bc     F2 F4 01 08 
295c0     00 F2 F4 03 | 	byte	$14, $08, $ee, $e5, $fa, $16, $1a, $08, $f2, $f4, $01, $08, $00, $f2, $f4, $03
295c4     14 13 03 FA 
295c8     FC 00 FC F6 
295cc     FB 05 10 13 
295d0     07 F5 F1 FE | 	byte	$14, $13, $03, $fa, $fc, $00, $fc, $f6, $fb, $05, $10, $13, $07, $f5, $f1, $fe
295d4     12 14 00 E7 
295d8     E9 FE 0F 0B 
295dc     FB EE F6 04 
295e0     08 08 09 07 | 	byte	$12, $14, $00, $e7, $e9, $fe, $0f, $0b, $fb, $ee, $f6, $04, $08, $08, $09, $07
295e4     00 00 04 00 
295e8     F6 FD 05 0D 
295ec     0D 07 FC F6 
295f0     F8 F6 F1 E8 | 	byte	$00, $00, $04, $00, $f6, $fd, $05, $0d, $0d, $07, $fc, $f6, $f8, $f6, $f1, $e8
295f4     ED 0D 3A 47 
295f8     0F BF AA D6 
295fc     1A 32 1F F5 
29600     E4 FE 16 0F | 	byte	$ed, $0d, $3a, $47, $0f, $bf, $aa, $d6, $1a, $32, $1f, $f5, $e4, $fe, $16, $0f
29604     F2 DC ED 0D 
29608     1E 13 FB F1 
2960c     FC 08 04 F5 
29610     F0 FC 0D 16 | 	byte	$f2, $dc, $ed, $0d, $1e, $13, $fb, $f1, $fc, $08, $04, $f5, $f0, $fc, $0d, $16
29614     0D 00 F9 00 
29618     00 FB F6 FC 
2961c     08 13 11 03 
29620     F2 F6 05 12 | 	byte	$0d, $00, $f9, $00, $00, $fb, $f6, $fc, $08, $13, $11, $03, $f2, $f6, $05, $12
29624     0F 00 EB F0 
29628     01 0B 04 FB 
2962c     F8 FE 03 00 
29630     FE 08 13 0D | 	byte	$0f, $00, $eb, $f0, $01, $0b, $04, $fb, $f8, $fe, $03, $00, $fe, $08, $13, $0d
29634     FB F4 FA 05 
29638     10 0B 00 F6 
2963c     FE 08 08 00 
29640     F5 F1 F5 F8 | 	byte	$fb, $f4, $fa, $05, $10, $0b, $00, $f6, $fe, $08, $08, $00, $f5, $f1, $f5, $f8
29644     00 16 32 27 
29648     EE C1 C5 F6 
2964c     24 25 0B EC 
29650     F1 0C 11 04 | 	byte	$00, $16, $32, $27, $ee, $c1, $c5, $f6, $24, $25, $0b, $ec, $f1, $0c, $11, $04
29654     EB E5 FE 12 
29658     18 08 F6 F6 
2965c     FE 07 00 F6 
29660     F6 FE 0D 11 | 	byte	$eb, $e5, $fe, $12, $18, $08, $f6, $f6, $fe, $07, $00, $f6, $f6, $fe, $0d, $11
29664     08 00 FE FD 
29668     F8 F8 FB 00 
2966c     09 0F 0B 03 
29670     F9 F9 04 10 | 	byte	$08, $00, $fe, $fd, $f8, $f8, $fb, $00, $09, $0f, $0b, $03, $f9, $f9, $04, $10
29674     08 F6 EB F4 
29678     01 08 03 FA 
2967c     F6 FE 05 0C 
29680     07 00 FC 03 | 	byte	$08, $f6, $eb, $f4, $01, $08, $03, $fa, $f6, $fe, $05, $0c, $07, $00, $fc, $03
29684     04 00 01 08 
29688     08 04 00 FA 
2968c     FC 00 01 00 
29690     F9 EC E7 FC | 	byte	$04, $00, $01, $08, $08, $04, $00, $fa, $fc, $00, $01, $00, $f9, $ec, $e7, $fc
29694     1E 3D 2E EE 
29698     B6 BE F6 25 
2969c     25 08 F0 F6 
296a0     0D 11 03 E9 | 	byte	$1e, $3d, $2e, $ee, $b6, $be, $f6, $25, $25, $08, $f0, $f6, $0d, $11, $03, $e9
296a4     E1 FA 12 1A 
296a8     0F F9 F5 FE 
296ac     05 01 F5 F2 
296b0     FC 0C 14 0F | 	byte	$e1, $fa, $12, $1a, $0f, $f9, $f5, $fe, $05, $01, $f5, $f2, $fc, $0c, $14, $0f
296b4     00 F6 FA 03 
296b8     07 FD F6 FB 
296bc     08 0F 0D 03 
296c0     F9 F8 FE 08 | 	byte	$00, $f6, $fa, $03, $07, $fd, $f6, $fb, $08, $0f, $0d, $03, $f9, $f8, $fe, $08
296c4     0F 08 F9 F1 
296c8     F4 FC 00 00 
296cc     00 03 03 03 
296d0     00 03 08 08 | 	byte	$0f, $08, $f9, $f1, $f4, $fc, $00, $00, $00, $03, $03, $03, $00, $03, $08, $08
296d4     03 FD FA FE 
296d8     04 0C 0B 05 
296dc     00 FB FB FD 
296e0     FC FB F8 F2 | 	byte	$03, $fd, $fa, $fe, $04, $0c, $0b, $05, $00, $fb, $fb, $fd, $fc, $fb, $f8, $f2
296e4     FA 16 35 27 
296e8     EE C7 C8 F1 
296ec     1E 1F 0F F6 
296f0     F8 08 0C 07 | 	byte	$fa, $16, $35, $27, $ee, $c7, $c8, $f1, $1e, $1f, $0f, $f6, $f8, $08, $0c, $07
296f4     F1 E5 F4 08 
296f8     18 14 03 F9 
296fc     F8 FE 00 FB 
29700     F8 FA 05 10 | 	byte	$f1, $e5, $f4, $08, $18, $14, $03, $f9, $f8, $fe, $00, $fb, $f8, $fa, $05, $10
29704     0F 08 00 FE 
29708     F9 F5 F6 FB 
2970c     03 0D 0D 09 
29710     03 FC F9 FE | 	byte	$0f, $08, $00, $fe, $f9, $f5, $f6, $fb, $03, $0d, $0d, $09, $03, $fc, $f9, $fe
29714     08 07 00 F5 
29718     F5 FC 00 00 
2971c     FD FB FE 05 
29720     08 07 00 00 | 	byte	$08, $07, $00, $f5, $f5, $fc, $00, $00, $fd, $fb, $fe, $05, $08, $07, $00, $00
29724     00 00 03 09 
29728     0B 07 00 FB 
2972c     FD 00 00 FE 
29730     FD F6 EB E7 | 	byte	$00, $00, $03, $09, $0b, $07, $00, $fb, $fd, $00, $00, $fe, $fd, $f6, $eb, $e7
29734     FD 1E 3C 28 
29738     EE C3 C2 ED 
2973c     16 1F 14 00 
29740     FB 04 09 08 | 	byte	$fd, $1e, $3c, $28, $ee, $c3, $c2, $ed, $16, $1f, $14, $00, $fb, $04, $09, $08
29744     F8 E7 EB FC 
29748     12 17 0F 03 
2974c     F9 F8 F9 F8 
29750     F8 FA 01 0D | 	byte	$f8, $e7, $eb, $fc, $12, $17, $0f, $03, $f9, $f8, $f9, $f8, $f8, $fa, $01, $0d
29754     0F 0D 04 00 
29758     FE F9 F5 F8 
2975c     FE 05 0B 0D 
29760     0C 04 FB F6 | 	byte	$0f, $0d, $04, $00, $fe, $f9, $f5, $f8, $fe, $05, $0b, $0d, $0c, $04, $fb, $f6
29764     F9 08 0D 04 
29768     FA F2 F8 FD 
2976c     00 03 01 FE 
29770     FC FE 07 0C | 	byte	$f9, $08, $0d, $04, $fa, $f2, $f8, $fd, $00, $03, $01, $fe, $fc, $fe, $07, $0c
29774     09 07 00 FC 
29778     FB FE 05 0B 
2977c     09 04 00 FE 
29780     FC FA F8 F6 | 	byte	$09, $07, $00, $fc, $fb, $fe, $05, $0b, $09, $04, $00, $fe, $fc, $fa, $f8, $f6
29784     F1 EB FA 1E 
29788     36 27 00 D8 
2978c     CF DE FC 0D 
29790     14 12 0C 07 | 	byte	$f1, $eb, $fa, $1e, $36, $27, $00, $d8, $cf, $de, $fc, $0d, $14, $12, $0c, $07
29794     03 03 00 F1 
29798     EB F1 FE 0C 
2979c     0F 0F 08 03 
297a0     FB F6 F4 F6 | 	byte	$03, $03, $00, $f1, $eb, $f1, $fe, $0c, $0f, $0f, $08, $03, $fb, $f6, $f4, $f6
297a4     FC 01 09 0D 
297a8     0F 0B 03 FA 
297ac     F4 F5 F8 FC 
297b0     01 08 0D 0C | 	byte	$fc, $01, $09, $0d, $0f, $0b, $03, $fa, $f4, $f5, $f8, $fc, $01, $08, $0d, $0c
297b4     07 03 00 FD 
297b8     F8 F5 F6 FC 
297bc     FE 00 03 04 
297c0     03 01 00 00 | 	byte	$07, $03, $00, $fd, $f8, $f5, $f6, $fc, $fe, $00, $03, $04, $03, $01, $00, $00
297c4     03 04 03 03 
297c8     00 00 00 01 
297cc     00 01 03 01 
297d0     00 00 FE FE | 	byte	$03, $04, $03, $03, $00, $00, $00, $01, $00, $01, $03, $01, $00, $00, $fe, $fe
297d4     FE FD FB FB 
297d8     01 0B 0B 00 
297dc     FA FD 00 01 
297e0     03 04 03 00 | 	byte	$fe, $fd, $fb, $fb, $01, $0b, $0b, $00, $fa, $fd, $00, $01, $03, $04, $03, $00
297e4     FE FB FE 04 
297e8     03 00 00 01 
297ec     03 00 FE FD 
297f0     FE 00 00 00 | 	byte	$fe, $fb, $fe, $04, $03, $00, $00, $01, $03, $00, $fe, $fd, $fe, $00, $00, $00
297f4     00 00 00 00 
297f8     00          | 	byte	$00[5]
297f9     01 01 00 00 
297fd     01 01 03 01 
29801     00 01 01 01 
29805     00 00 00 00 | 	byte	$01, $01, $00, $00, $01, $01, $03, $01, $00, $01, $01, $01, $00, $00, $00, $00
29809     03 04 03 00 
2980d     00 FE FE 00 
29811     01 00 00 00 
29815     FE FE FE FE | 	byte	$03, $04, $03, $00, $00, $fe, $fe, $00, $01, $00, $00, $00, $fe, $fe, $fe, $fe
29819     00 00 00 00 
2981d     00          | 	byte	$00[5]
2981e     03 03 03 04 
29822     04 03 03 03 
29826     03 03 00 FE 
2982a     FB FD 05 0B | 	byte	$03, $03, $03, $04, $04, $03, $03, $03, $03, $03, $00, $fe, $fb, $fd, $05, $0b
2982e     00 F6 F8 FE 
29832     00 03 05 07 
29836     04 00 FC FE 
2983a     04 05 00 00 | 	byte	$00, $f6, $f8, $fe, $00, $03, $05, $07, $04, $00, $fc, $fe, $04, $05, $00, $00
2983e     03 03 00 FE 
29842     FB FE 01 01 
29846     00 03 01 00 
2984a     00 00 00 01 | 	byte	$03, $03, $00, $fe, $fb, $fe, $01, $01, $00, $03, $01, $00, $00, $00, $00, $01
2984e     00 00 03 03 
29852     04 00 FE FD 
29856     00 01 00 01 
2985a     01 00 00 00 | 	byte	$00, $00, $03, $03, $04, $00, $fe, $fd, $00, $01, $00, $01, $01, $00, $00, $00
2985e     03 03 00 FE 
29862     FE 00 00 00 
29866     00 00 00 FE 
2986a     FD FE FE FE | 	byte	$03, $03, $00, $fe, $fe, $00, $00, $00, $00, $00, $00, $fe, $fd, $fe, $fe, $fe
2986e     FE 00 00 00 
29872     00 03 03 03 
29876     03 03 03 03 
2987a     00 00 00 FE | 	byte	$fe, $00, $00, $00, $00, $03, $03, $03, $03, $03, $03, $03, $00, $00, $00, $fe
2987e     FB FB 03 09 
29882     00 F6 FB 00 
29886     00 00 03 04 
2988a     03 00 FD FE | 	byte	$fb, $fb, $03, $09, $00, $f6, $fb, $00, $00, $00, $03, $04, $03, $00, $fd, $fe
2988e     03 03 00 00 
29892     00 00 00 FD 
29896     FE FE 00 00 
2989a     00 00 00 00 | 	byte	$03, $03, $00, $00, $00, $00, $00, $fd, $fe, $fe, $00, $00, $00, $00, $00, $00
2989e     00 01 01 03 
298a2     03 00 00 03 
298a6     03 03 00 00 
298aa     01 01 03 01 | 	byte	$00, $01, $01, $03, $03, $00, $00, $03, $03, $03, $00, $00, $01, $01, $03, $01
298ae     00 00 01 01 
298b2     00 00 01 00 
298b6     00 00 00 00 
298ba     FE FD FD FE | 	byte	$00, $00, $01, $01, $00, $00, $01, $00, $00, $00, $00, $00, $fe, $fd, $fd, $fe
298be     00 00 00 00 
298c2     00 00       | 	byte	$00[6]
298c4     01 03 03 03 
298c8     03 04 04 03 
298cc     01 00 00 00 
298d0     FE FC FE 05 | 	byte	$01, $03, $03, $03, $03, $04, $04, $03, $01, $00, $00, $00, $fe, $fc, $fe, $05
298d4     07 00 F9 FC 
298d8     FE 00 03 07 
298dc     05 03 00 FC 
298e0     FE 03 03 00 | 	byte	$07, $00, $f9, $fc, $fe, $00, $03, $07, $05, $03, $00, $fc, $fe, $03, $03, $00
298e4     00 01 00 00 
298e8     FE FE 00 00 
298ec     00 00 01 00 
298f0     00 00 00 01 | 	byte	$00, $01, $00, $00, $fe, $fe, $00, $00, $00, $00, $01, $00, $00, $00, $00, $01
298f4     01 00 01 01 
298f8     01 03 00 00 
298fc     00 00 03 01 
29900     00 00 00 00 | 	byte	$01, $00, $01, $01, $01, $03, $00, $00, $00, $00, $03, $01, $00, $00, $00, $00
29904     01 03 00 00 
29908     00 00 00 00 
2990c     00 00 FD FC 
29910     FD FE FE FE | 	byte	$01, $03, $00, $00, $00, $00, $00, $00, $00, $00, $fd, $fc, $fd, $fe, $fe, $fe
29914     FE 00 00 00 
29918     00 03 03 04 
2991c     03 03 03 01 
29920     00 00 01 00 | 	byte	$fe, $00, $00, $00, $00, $03, $03, $04, $03, $03, $03, $01, $00, $00, $01, $00
29924     FE FD 00 04 
29928     03 FB FB FE 
2992c     FE 00 03 05 
29930     03 01 FE FD | 	byte	$fe, $fd, $00, $04, $03, $fb, $fb, $fe, $fe, $00, $03, $05, $03, $01, $fe, $fd
29934     01 03 00 00 
29938     00 01 00 FD 
2993c     FD FE 00 00 
29940     00 00 00 00 | 	byte	$01, $03, $00, $00, $00, $01, $00, $fd, $fd, $fe, $00, $00, $00, $00, $00, $00
29944     00 01 00 01 
29948     00 00 00 03 
2994c     03 03 00 00 
29950     00 00 03 01 | 	byte	$00, $01, $00, $01, $00, $00, $00, $03, $03, $03, $00, $00, $00, $00, $03, $01
29954     01 00 03 03 
29958     03 00 00 00 
2995c     00 00 00 01 
29960     00 FD FD FE | 	byte	$01, $00, $03, $03, $03, $00, $00, $00, $00, $00, $00, $01, $00, $fd, $fd, $fe
29964     00 00 00 00 
29968     00          | 	byte	$00[5]
29969     01 01 03 03 
2996d     04 03 03 03 
29971     03 03 00 00 
29975     00 00 00 00 | 	byte	$01, $01, $03, $03, $04, $03, $03, $03, $03, $03, $00, $00, $00, $00, $00, $00
29979     03 07 01 FB 
2997d     FC FE 00 01 
29981     03 05 03 01 
29985     FE FD 00 03 | 	byte	$03, $07, $01, $fb, $fc, $fe, $00, $01, $03, $05, $03, $01, $fe, $fd, $00, $03
29989     00 00 01 01 
2998d     00 FE FD FE 
29991     00 00 00 01 
29995     00 00 00 00 | 	byte	$00, $00, $01, $01, $00, $fe, $fd, $fe, $00, $00, $00, $01, $00, $00, $00, $00
29999     00 00 00 00 
2999d     03 01 00 01 
299a1     00 00 00 00 
299a5     01 01 01 00 | 	byte	$00, $00, $00, $00, $03, $01, $00, $01, $00, $00, $00, $00, $01, $01, $01, $00
299a9     00 00 00 00 
299ad     03 01 FE FE 
299b1     00 00 00 00 
299b5     00 00 FE FC | 	byte	$00, $00, $00, $00, $03, $01, $fe, $fe, $00, $00, $00, $00, $00, $00, $fe, $fc
299b9     FC FE 00 00 
299bd     00 00 01 01 
299c1     00 00 03 04 
299c5     03 03 00 01 | 	byte	$fc, $fe, $00, $00, $00, $00, $01, $01, $00, $00, $03, $04, $03, $03, $00, $01
299c9     00 00 FD FD 
299cd     00 03 03 00 
299d1     FC FC FE 00 
299d5     01 03 04 03 | 	byte	$00, $00, $fd, $fd, $00, $03, $03, $00, $fc, $fc, $fe, $00, $01, $03, $04, $03
299d9     00 00 00 01 
299dd     01 00 00 00 
299e1     00 01 FE FE 
299e5     00 00 00 00 | 	byte	$00, $00, $00, $01, $01, $00, $00, $00, $00, $01, $fe, $fe, $00, $00, $00, $00
299e9     00 00 01 00 
299ed     00 00 00 00 
299f1     01 00 03 03 
299f5     00 00 00 00 | 	byte	$00, $00, $01, $00, $00, $00, $00, $00, $01, $00, $03, $03, $00, $00, $00, $00
299f9     01 01 03 01 
299fd     00 01 00 03 
29a01     03 00 00 00 
29a05     01 00 00 00 | 	byte	$01, $01, $03, $01, $00, $01, $00, $03, $03, $00, $00, $00, $01, $00, $00, $00
29a09     00 00 00 FE 
29a0d     FE FE FE 00 
29a11     00 00 01 01 
29a15     00 03 03 03 | 	byte	$00, $00, $00, $fe, $fe, $fe, $fe, $00, $00, $00, $01, $01, $00, $03, $03, $03
29a19     03 03 03 03 
29a1d     01 00 00 FE 
29a21     00 03 03 01 
29a25     FD FD 00 00 | 	byte	$03, $03, $03, $03, $01, $00, $00, $fe, $00, $03, $03, $01, $fd, $fd, $00, $00
29a29     00 03 04 03 
29a2d     00 00 00 03 
29a31     01 00 00 01 
29a35     00 00 00 FE | 	byte	$00, $03, $04, $03, $00, $00, $00, $03, $01, $00, $00, $01, $00, $00, $00, $fe
29a39     FE 00 00 00 
29a3d     00 00 00 00 
29a41     00 01 00 00 
29a45     00 01 03 01 | 	byte	$fe, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $01, $03, $01
29a49     00 00 00 00 
29a4d     00 00       | 	byte	$00[6]
29a4f     01 00 00 00 
29a53     00 01 00 01 
29a57     01 00 00 00 
29a5b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $01, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00
29a5f     00 00 FE FD 
29a63     FD FD FE FE 
29a67     01 00 00 00 
29a6b     00 00 03 03 | 	byte	$00, $00, $fe, $fd, $fd, $fd, $fe, $fe, $01, $00, $00, $00, $00, $00, $03, $03
29a6f     03 03 01 00 
29a73     00 00 FD FE 
29a77     00 01 03 01 
29a7b     FE FD 00 00 | 	byte	$03, $03, $01, $00, $00, $00, $fd, $fe, $00, $01, $03, $01, $fe, $fd, $00, $00
29a7f     01 03 04 03 
29a83     00 00 00 00 
29a87     00 01 00 01 
29a8b     00 00 00 00 | 	byte	$01, $03, $04, $03, $00, $00, $00, $00, $00, $01, $00, $01, $00, $00, $00, $00
29a8f     00 00 00 00 
29a93     01 00 00 00 
29a97     00 00 00 00 
29a9b     01 03 01 00 | 	byte	$00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $01, $03, $01, $00
29a9f     03 01 00 01 
29aa3     01 01 01 01 
29aa7     00 00 01 03 
29aab     03 01 00 00 | 	byte	$03, $01, $00, $01, $01, $01, $01, $01, $00, $00, $01, $03, $03, $01, $00, $00
29aaf     00 00 00 00 
29ab3     00 00       | 	byte	$00[6]
29ab5     FE FE FE FE 
29ab9     FE          | 	byte	$fe[5]
29aba     00 03 03 01 
29abe     00 00 00 03 
29ac2     04 03 04 03 
29ac6     00 00 00 00 | 	byte	$00, $03, $03, $01, $00, $00, $00, $03, $04, $03, $04, $03, $00, $00, $00, $00
29aca     01 03 04 03 
29ace     FE FD FE 00 
29ad2     01 03 03 03 
29ad6     00 FE FE 00 | 	byte	$01, $03, $04, $03, $fe, $fd, $fe, $00, $01, $03, $03, $03, $00, $fe, $fe, $00
29ada     01 00 00 00 
29ade     00 00 00 00 
29ae2     00 00 00 00 
29ae6     00 00 01 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00
29aea     00 00 00 00 
29aee     00          | 	byte	$00[5]
29aef     01 03 01 00 
29af3     00 00 00 00 
29af7     00 00 01 00 
29afb     00 00 00 00 | 	byte	$01, $03, $01, $00, $00, $00, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00
29aff     01 01 00 FE 
29b03     FE 00 00 00 
29b07     00 00 00 FE 
29b0b     FD FE FE FD | 	byte	$01, $01, $00, $fe, $fe, $00, $00, $00, $00, $00, $00, $fe, $fd, $fe, $fe, $fd
29b0f     FE 00 01 00 
29b13     00 01 00 03 
29b17     03 03 03 00 
29b1b     00 00 FE FE | 	byte	$fe, $00, $01, $00, $00, $01, $00, $03, $03, $03, $03, $00, $00, $00, $fe, $fe
29b1f     00 04 03 00 
29b23     FD FE 00 00 
29b27     03 03 03 01 
29b2b     00 FD 00 01 | 	byte	$00, $04, $03, $00, $fd, $fe, $00, $00, $03, $03, $03, $01, $00, $fd, $00, $01
29b2f     00 00 00 00 
29b33     00 00 00 00 
29b37     00 00 00 00 
29b3b     00 00 00 00 | 	byte	$00[16]
29b3f     01 01 00 00 
29b43     01 03 03 01 
29b47     03 01 00 01 
29b4b     00 00 00 00 | 	byte	$01, $01, $00, $00, $01, $03, $03, $01, $03, $01, $00, $01, $00, $00, $00, $00
29b4f     00 00 01 00 
29b53     01 01 03 00 
29b57     00 00 00 00 
29b5b     00 00 00 00 | 	byte	$00, $00, $01, $00, $01, $01, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00
29b5f     00 00 00 00 
29b63     FE 00 00 00 
29b67     03 01 01 03 
29b6b     03 03 03 03 | 	byte	$00, $00, $00, $00, $fe, $00, $00, $00, $03, $01, $01, $03, $03, $03, $03, $03
29b6f     03 01 00 00 
29b73     00 00 03 03 
29b77     00 FE FE 00 
29b7b     00 03 03 03 | 	byte	$03, $01, $00, $00, $00, $00, $03, $03, $00, $fe, $fe, $00, $00, $03, $03, $03
29b7f     03 00 FE 00 
29b83     00 00 01 00 
29b87     00 00 00 FE 
29b8b     00 00 00 01 | 	byte	$03, $00, $fe, $00, $00, $00, $01, $00, $00, $00, $00, $fe, $00, $00, $00, $01
29b8f     00 00 00 00 
29b93     00 00 00 00 
29b97     00 00 00 00 
29b9b     00 00       | 	byte	$00[14]
29b9d     01 00 00 00 
29ba1     01 00 00 00 
29ba5     00 00 00 00 
29ba9     00 00 00 00 | 	byte	$01, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
29bad     00 00 00 01 
29bb1     00 00 00 00 
29bb5     00 00 00 00 
29bb9     00 FE FE 00 | 	byte	$00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $fe, $00
29bbd     00 00 00 00 
29bc1     00          | 	byte	$00[5]
29bc2     01 01 01 01 
29bc6     01 01 01 01 | 	byte	$01[8]
29bca     00 00 00 00 
29bce     00          | 	byte	$00[5]
29bcf     03 03 00 FE 
29bd3     FE 00 00 01 
29bd7     03 03 01 00 
29bdb     00 00 01 00 | 	byte	$03, $03, $00, $fe, $fe, $00, $00, $01, $03, $03, $01, $00, $00, $00, $01, $00
29bdf     00 00 00 00 
29be3     00 00 00 00 
29be7     00          | 	byte	$00[9]
29be8     ED DB C8 B2 
29bec     A5 A1 AF C5 
29bf0     DC FD 24 43 
29bf4     58 5C 47 26 | 	byte	$ed, $db, $c8, $b2, $a5, $a1, $af, $c5, $dc, $fd, $24, $43, $58, $5c, $47, $26
29bf8     00 D9 C8 C5 
29bfc     C9 CD CD BF 
29c00     AB 8B 80 80 
29c04     88 A9 C9 ED | 	byte	$00, $d9, $c8, $c5, $c9, $cd, $cd, $bf, $ab, $8b, $80, $80, $88, $a9, $c9, $ed
29c08     09 21 35 49 
29c0c     5E 7C 7F 7F 
29c10     7F 7F 7F 6E 
29c14     33 06 F6 EC | 	byte	$09, $21, $35, $49, $5e, $7c, $7f, $7f, $7f, $7f, $7f, $6e, $33, $06, $f6, $ec
29c18     D9 BF A7 A2 
29c1c     AF C9 E3 0A 
29c20     31 55 6E 61 
29c24     40 0C DF C5 | 	byte	$d9, $bf, $a7, $a2, $af, $c9, $e3, $0a, $31, $55, $6e, $61, $40, $0c, $df, $c5
29c28     C1 C1 C5 C8 
29c2c     C5 B2 9E 80 
29c30     80 80 88 A7 
29c34     C9 ED 0A 21 | 	byte	$c1, $c1, $c5, $c8, $c5, $b2, $9e, $80, $80, $80, $88, $a7, $c9, $ed, $0a, $21
29c38     3B 55 72 7F 
29c3c     7F 7F 7F 7F 
29c40     7F 43 20 0E 
29c44     00 E6 BF 98 | 	byte	$3b, $55, $72, $7f, $7f, $7f, $7f, $7f, $7f, $43, $20, $0e, $00, $e6, $bf, $98
29c48     86 93 BC EF 
29c4c     24 51 76 7C 
29c50     67 3A 0C DB 
29c54     C1 B9 BF C1 | 	byte	$86, $93, $bc, $ef, $24, $51, $76, $7c, $67, $3a, $0c, $db, $c1, $b9, $bf, $c1
29c58     C6 C3 B8 A5 
29c5c     8B 80 80 80 
29c60     95 B6 D6 FA 
29c64     17 31 50 72 | 	byte	$c6, $c3, $b8, $a5, $8b, $80, $80, $80, $95, $b6, $d6, $fa, $17, $31, $50, $72
29c68     7F 7F 7F 7F 
29c6c     7F 7F       | 	byte	$7f[6]
29c6e     67 3A 1B 00 
29c72     DF B9 9E 98 
29c76     A2 BC E3 1D 
29c7a     4B 72 74 54 | 	byte	$67, $3a, $1b, $00, $df, $b9, $9e, $98, $a2, $bc, $e3, $1d, $4b, $72, $74, $54
29c7e     20 EC CC BF 
29c82     BF C3 C6 C9 
29c86     CD C1 AE 8B 
29c8a     80 80 80 95 | 	byte	$20, $ec, $cc, $bf, $bf, $c3, $c6, $c9, $cd, $c1, $ae, $8b, $80, $80, $80, $95
29c8e     BC E9 06 24 
29c92     3B 58 7D 7F 
29c96     7F 7F 7F 7F 
29c9a     7F 67 33 0F | 	byte	$bc, $e9, $06, $24, $3b, $58, $7d, $7f, $7f, $7f, $7f, $7f, $7f, $67, $33, $0f
29c9e     00 E2 BB 99 
29ca2     88 8F B6 F0 
29ca6     37 76 7F 69 
29caa     29 EC CC BF | 	byte	$00, $e2, $bb, $99, $88, $8f, $b6, $f0, $37, $76, $7f, $69, $29, $ec, $cc, $bf
29cae     C1 C3 C8 CD 
29cb2     D0 C5 A5 80 
29cb6     80 80 80 95 
29cba     C9 F0 10 29 | 	byte	$c1, $c3, $c8, $cd, $d0, $c5, $a5, $80, $80, $80, $80, $95, $c9, $f0, $10, $29
29cbe     44 63 7F 7F 
29cc2     7F 7F 7F 7F 
29cc6     7F 50 26 16 
29cca     06 E6 B3 87 | 	byte	$44, $63, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $50, $26, $16, $06, $e6, $b3, $87
29cce     80 87 BC 0E 
29cd2     5E 7F 7F 67 
29cd6     19 D9 BC B8 
29cda     BB C0 C3 C9 | 	byte	$80, $87, $bc, $0e, $5e, $7f, $7f, $67, $19, $d9, $bc, $b8, $bb, $c0, $c3, $c9
29cde     CC B2 91 80 
29ce2     80 80 80 A2 
29ce6     D6 FD 24 42 
29cea     5C 78 7F 7F | 	byte	$cc, $b2, $91, $80, $80, $80, $80, $a2, $d6, $fd, $24, $42, $5c, $78, $7f, $7f
29cee     7F 7F 7F 7F 
29cf2     7F          | 	byte	$7f[5]
29cf3     50 33 1B F3 
29cf7     CC A0 86 8B 
29cfb     B6 FD 58 7F 
29cff     7F 54 00 CC | 	byte	$50, $33, $1b, $f3, $cc, $a0, $86, $8b, $b6, $fd, $58, $7f, $7f, $54, $00, $cc
29d03     B4 B3 B8 BC 
29d07     C3 C6 C8 AB 
29d0b     80 80 80 80 
29d0f     80 B6 E3 0E | 	byte	$b4, $b3, $b8, $bc, $c3, $c6, $c8, $ab, $80, $80, $80, $80, $80, $b6, $e3, $0e
29d13     2D 49 65 7F 
29d17     7F 7F 7F 7F 
29d1b     7F 7F 74 33 
29d1f     06 EC E0 D2 | 	byte	$2d, $49, $65, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $74, $33, $06, $ec, $e0, $d2
29d23     B9 A7 AF E3 
29d27     31 69 6E 47 
29d2b     00 C5 B4 AF 
29d2f     B4 B9 C1 C8 | 	byte	$b9, $a7, $af, $e3, $31, $69, $6e, $47, $00, $c5, $b4, $af, $b4, $b9, $c1, $c8
29d33     C9 B8 8B 80 
29d37     80 80 80 AD 
29d3b     F6 28 4B 62 
29d3f     76 7F 7F 7F | 	byte	$c9, $b8, $8b, $80, $80, $80, $80, $ad, $f6, $28, $4b, $62, $76, $7f, $7f, $7f
29d43     7F 7F 7F 7F 
29d47     7F          | 	byte	$7f[5]
29d48     19 D2 B3 B4 
29d4c     B9 B9 C1 E9 
29d50     2A 62 67 40 
29d54     00 C6 B4 B4 | 	byte	$19, $d2, $b3, $b4, $b9, $b9, $c1, $e9, $2a, $62, $67, $40, $00, $c6, $b4, $b4
29d58     B8 C0 C3 C9 
29d5c     CC B8 91 80 
29d60     80 80 80 80 
29d64     D6 24 62 7F | 	byte	$b8, $c0, $c3, $c9, $cc, $b8, $91, $80, $80, $80, $80, $80, $d6, $24, $62, $7f
29d68     7F 7F 7F 7F 
29d6c     7F 7F 7F 7F 
29d70     7F          | 	byte	$7f[9]
29d71     33 CC 80 80 
29d75     80 A9 F0 3E 
29d79     77 7D 4D F3 
29d7d     BF AE B2 B4 | 	byte	$33, $cc, $80, $80, $80, $a9, $f0, $3e, $77, $7d, $4d, $f3, $bf, $ae, $b2, $b4
29d81     BC C0 C3 BF 
29d85     98 80 80 80 
29d89     80 80 B9 F6 
29d8d     2E 62 7F 7F | 	byte	$bc, $c0, $c3, $bf, $98, $80, $80, $80, $80, $80, $b9, $f6, $2e, $62, $7f, $7f
29d91     7F 7F 7F 7F 
29d95     7F 7F 7F 7F | 	byte	$7f[8]
29d99     33 E6 AD 8C 
29d9d     91 C3 17 48 
29da1     61 3A E6 BF 
29da5     B2 B2 B8 BC | 	byte	$33, $e6, $ad, $8c, $91, $c3, $17, $48, $61, $3a, $e6, $bf, $b2, $b2, $b8, $bc
29da9     C0 C5 BF 98 
29dad     80 80 80 80 
29db1     93 D6 14 44 
29db5     65 78 7F 7F | 	byte	$c0, $c5, $bf, $98, $80, $80, $80, $80, $93, $d6, $14, $44, $65, $78, $7f, $7f
29db9     7F 7F 7F 7F 
29dbd     7F 7F       | 	byte	$7f[6]
29dbf     74 20 D9 AB 
29dc3     AD D6 1D 35 
29dc7     3A 0C D2 B8 
29dcb     B4 B6 B9 C1 | 	byte	$74, $20, $d9, $ab, $ad, $d6, $1d, $35, $3a, $0c, $d2, $b8, $b4, $b6, $b9, $c1
29dcf     C8 C5 B4 8B 
29dd3     80 80 80 80 
29dd7     A7 E3 17 3C 
29ddb     5E 7D 7F 7F | 	byte	$c8, $c5, $b4, $8b, $80, $80, $80, $80, $a7, $e3, $17, $3c, $5e, $7d, $7f, $7f
29ddf     7F 7F 7F 7F 
29de3     7F          | 	byte	$7f[5]
29de4     6A 33 06 DB 
29de8     C5 C8 FA 3E 
29dec     54 5C 19 D2 
29df0     B4 AF B2 B6 | 	byte	$6a, $33, $06, $db, $c5, $c8, $fa, $3e, $54, $5c, $19, $d2, $b4, $af, $b2, $b6
29df4     B9 B9 B8 98 
29df8     80 80 80 80 
29dfc     8F D6 17 48 
29e00     65 7F 7F 7F | 	byte	$b9, $b9, $b8, $98, $80, $80, $80, $80, $8f, $d6, $17, $48, $65, $7f, $7f, $7f
29e04     7F 7F 7F 7F 
29e08     7F          | 	byte	$7f[5]
29e09     5A 33 06 E2 
29e0d     C5 C1 F0 3E 
29e11     55 5D 19 D2 
29e15     B6 AD AE B4 | 	byte	$5a, $33, $06, $e2, $c5, $c1, $f0, $3e, $55, $5d, $19, $d2, $b6, $ad, $ae, $b4
29e19     BB B6 AB 84 
29e1d     80 80 80 80 
29e21     A9 FD 4B 77 
29e25     7F 7F 7F 7F | 	byte	$bb, $b6, $ab, $84, $80, $80, $80, $80, $a9, $fd, $4b, $77, $7f, $7f, $7f, $7f
29e29     7F 7F 7F 7F 
29e2d     5D 33 00 D5 
29e31     C6 C6 F0 3E 
29e35     70 7D 40 E6 | 	byte	$7f, $7f, $7f, $7f, $5d, $33, $00, $d5, $c6, $c6, $f0, $3e, $70, $7d, $40, $e6
29e39     B4 A2 A1 A9 
29e3d     A9 9E 94 80 
29e41     80 80 80 80 
29e45     A2 0A 5D 7F | 	byte	$b4, $a2, $a1, $a9, $a9, $9e, $94, $80, $80, $80, $80, $80, $a2, $0a, $5d, $7f
29e49     7F 7F 7F 7F 
29e4d     7F 7F       | 	byte	$7f[6]
29e4f     70 47 13 DF 
29e53     B8 A0 A2 C0 
29e57     F0 4B 7F 7F 
29e5b     67 00 BF AB | 	byte	$70, $47, $13, $df, $b8, $a0, $a2, $c0, $f0, $4b, $7f, $7f, $67, $00, $bf, $ab
29e5f     A7 A9 A7 8B 
29e63     80 80 80 80 
29e67     80 80 C9 2A 
29e6b     6F 7F 7F 7F | 	byte	$a7, $a9, $a7, $8b, $80, $80, $80, $80, $80, $80, $c9, $2a, $6f, $7f, $7f, $7f
29e6f     7F 7F 7F 7F 
29e73     67 19 D9 9E 
29e77     84 80 A0 DA 
29e7b     2A 7F 7F 7F | 	byte	$7f, $7f, $7f, $7f, $67, $19, $d9, $9e, $84, $80, $a0, $da, $2a, $7f, $7f, $7f
29e7f     33 D9 B4 AB 
29e83     A9 AB 98 80 
29e87     80 80 80 80 
29e8b     80 D6 31 77 | 	byte	$33, $d9, $b4, $ab, $a9, $ab, $98, $80, $80, $80, $80, $80, $80, $d6, $31, $77
29e8f     7F 7F 7F 7F 
29e93     7F 7F 7F    | 	byte	$7f[7]
29e96     4D 00 B4 8B 
29e9a     80 80 93 E3 
29e9e     44 7F 7F 7F 
29ea2     20 D9 BF B6 | 	byte	$4d, $00, $b4, $8b, $80, $80, $93, $e3, $44, $7f, $7f, $7f, $20, $d9, $bf, $b6
29ea6     B8 B4 98 80 
29eaa     80 80 80 80 
29eae     B6 10 5D 7F 
29eb2     7F 7F 7F 7F | 	byte	$b8, $b4, $98, $80, $80, $80, $80, $80, $b6, $10, $5d, $7f, $7f, $7f, $7f, $7f
29eb6     7F 7F 7F 26 
29eba     B2 80 80 80 
29ebe     80 AF 14 78 
29ec2     7F 7F 4D F3 | 	byte	$7f, $7f, $7f, $26, $b2, $80, $80, $80, $80, $af, $14, $78, $7f, $7f, $4d, $f3
29ec6     CE BF B9 B8 
29eca     A5 80 80 80 
29ece     80 80 A2 F6 
29ed2     3C 76 7F 7F | 	byte	$ce, $bf, $b9, $b8, $a5, $80, $80, $80, $80, $80, $a2, $f6, $3c, $76, $7f, $7f
29ed6     7F 7F 7F 7F 
29eda     7F          | 	byte	$7f[5]
29edb     40 CC 91 80 
29edf     80 80 87 BC 
29ee3     17 78 7F 7F 
29ee7     33 EC CE B8 | 	byte	$40, $cc, $91, $80, $80, $80, $87, $bc, $17, $78, $7f, $7f, $33, $ec, $ce, $b8
29eeb     C0 B2 98 80 
29eef     80 80 80 82 
29ef3     BC FD 3E 72 
29ef7     7F 7F 7F 7F | 	byte	$c0, $b2, $98, $80, $80, $80, $80, $82, $bc, $fd, $3e, $72, $7f, $7f, $7f, $7f
29efb     7F 7F 74 00 
29eff     B2 A1 95 8D 
29f03     86 95 DC 3E 
29f07     78 7F 4D 00 | 	byte	$7f, $7f, $74, $00, $b2, $a1, $95, $8d, $86, $95, $dc, $3e, $78, $7f, $4d, $00
29f0b     D9 C1 B3 C9 
29f0f     C0 98 80 80 
29f13     80 80 86 D6 
29f17     2A 72 7F 7F | 	byte	$d9, $c1, $b3, $c9, $c0, $98, $80, $80, $80, $80, $86, $d6, $2a, $72, $7f, $7f
29f1b     7F 7F 7F 7F 
29f1f     7F 7F       | 	byte	$7f[6]
29f21     1C D2 9E 80 
29f25     80 80 A2 FD 
29f29     65 7F 7F 26 
29f2d     E6 D2 BC BF | 	byte	$1c, $d2, $9e, $80, $80, $80, $a2, $fd, $65, $7f, $7f, $26, $e6, $d2, $bc, $bf
29f31     C9 BB 84 80 
29f35     80 80 80 BC 
29f39     10 5E 7F 7F 
29f3d     7F 7F 7F 7F | 	byte	$c9, $bb, $84, $80, $80, $80, $80, $bc, $10, $5e, $7f, $7f, $7f, $7f, $7f, $7f
29f41     7F 7F 5A F3 
29f45     A5 80 80 80 
29f49     80 C9 21 72 
29f4d     7F 74 26 F6 | 	byte	$7f, $7f, $5a, $f3, $a5, $80, $80, $80, $80, $c9, $21, $72, $7f, $74, $26, $f6
29f51     CC C5 C1 DA 
29f55     B8 80 80 80 
29f59     80 80 C3 31 
29f5d     7F 7F 7F 7F | 	byte	$cc, $c5, $c1, $da, $b8, $80, $80, $80, $80, $80, $c3, $31, $7f, $7f, $7f, $7f
29f61     7F 7F 7F 7F 
29f65     7F          | 	byte	$7f[5]
29f66     40 CC 8B 80 
29f6a     80 80 80 A5 
29f6e     C9 F6 17 48 
29f72     78 7F 6E 19 | 	byte	$40, $cc, $8b, $80, $80, $80, $80, $a5, $c9, $f6, $17, $48, $78, $7f, $6e, $19
29f76     DF CC 98 80 
29f7a     80 80 80 80 
29f7e     80 BC 21 72 
29f82     7F 7F 7F 7F | 	byte	$df, $cc, $98, $80, $80, $80, $80, $80, $80, $bc, $21, $72, $7f, $7f, $7f, $7f
29f86     7F 7F 7F 40 
29f8a     DB 9A 80 80 
29f8e     80 80 80 BC 
29f92     FD 26 43 7F | 	byte	$7f, $7f, $7f, $40, $db, $9a, $80, $80, $80, $80, $80, $bc, $fd, $26, $43, $7f
29f96     7F 7F 7F 0C 
29f9a     D9 B2 87 80 
29f9e     80 80 80 80 
29fa2     80 BC 24 7F | 	byte	$7f, $7f, $7f, $0c, $d9, $b2, $87, $80, $80, $80, $80, $80, $80, $bc, $24, $7f
29fa6     7F 7F 7F 7F 
29faa     7F 7F 7F    | 	byte	$7f[7]
29fad     1C D9 9A 80 
29fb1     80 80 80 80 
29fb5     A0 D0 F0 31 
29fb9     7F 7F 7F 7F | 	byte	$1c, $d9, $9a, $80, $80, $80, $80, $80, $a0, $d0, $f0, $31, $7f, $7f, $7f, $7f
29fbd     33 E6 A5 98 
29fc1     9C 98 80 80 
29fc5     80 80 8F FD 
29fc9     7F 7F 7F 7F | 	byte	$33, $e6, $a5, $98, $9c, $98, $80, $80, $80, $80, $8f, $fd, $7f, $7f, $7f, $7f
29fcd     7F 7F 7F 7F 
29fd1     40 F3 B8 84 
29fd5     80 80 80 80 
29fd9     B6 F0 FD 17 | 	byte	$7f, $7f, $7f, $7f, $40, $f3, $b8, $84, $80, $80, $80, $80, $b6, $f0, $fd, $17
29fdd     3E 78 7F 7F 
29fe1     7F 7F 33 DA 
29fe5     98 80 82 9E 
29fe9     8B 80 80 80 | 	byte	$3e, $78, $7f, $7f, $7f, $7f, $33, $da, $98, $80, $82, $9e, $8b, $80, $80, $80
29fed     80 FD 7F 7F 
29ff1     7F 7F 7F 7F 
29ff5     7F 76 54 20 
29ff9     CC 80 80 80 | 	byte	$80, $fd, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $76, $54, $20, $cc, $80, $80, $80
29ffd     80 AF 0A 2A 
2a001     19 01 17 65 
2a005     7F 7F 7F 67 
2a009     EC B2 8B 94 | 	byte	$80, $af, $0a, $2a, $19, $01, $17, $65, $7f, $7f, $7f, $67, $ec, $b2, $8b, $94
2a00d     AB B2 84 80 
2a011     80 80 C9 58 
2a015     7F 7F 7F 7F 
2a019     7F 6E 78 74 | 	byte	$ab, $b2, $84, $80, $80, $80, $c9, $58, $7f, $7f, $7f, $7f, $7f, $6e, $78, $74
2a01d     54 00 98 80 
2a021     80 80 A9 F0 
2a025     21 29 21 20 
2a029     44 78 7F 7F | 	byte	$54, $00, $98, $80, $80, $80, $a9, $f0, $21, $29, $21, $20, $44, $78, $7f, $7f
2a02d     67 19 D9 BF 
2a031     99 AD B2 99 
2a035     82 80 AD DC 
2a039     0A 3C 5E 6B | 	byte	$67, $19, $d9, $bf, $99, $ad, $b2, $99, $82, $80, $ad, $dc, $0a, $3c, $5e, $6b
2a03d     65 5C 65 6F 
2a041     74 50 19 EF 
2a045     D6 DC E0 EF 
2a049     EF F3 EC F0 | 	byte	$65, $5c, $65, $6f, $74, $50, $19, $ef, $d6, $dc, $e0, $ef, $ef, $f3, $ec, $f0
2a04d     09 2A 3E 3A 
2a051     28 0C FA F4 
2a055     07 14 0C 00 
2a059     D2 B2 A6 BC | 	byte	$09, $2a, $3e, $3a, $28, $0c, $fa, $f4, $07, $14, $0c, $00, $d2, $b2, $a6, $bc
2a05d     E8 F5 ED D5 
2a061     CD E9 09 31 
2a065     48 4B 3A 2A 
2a069     2E 3E 4B 43 | 	byte	$e8, $f5, $ed, $d5, $cd, $e9, $09, $31, $48, $4b, $3a, $2a, $2e, $3e, $4b, $43
2a06d     33 13 F5 E8 
2a071     ED F4 FA EF 
2a075     ED E9 ED FA 
2a079     F6 F9 0E 24 | 	byte	$33, $13, $f5, $e8, $ed, $f4, $fa, $ef, $ed, $e9, $ed, $fa, $f6, $f9, $0e, $24
2a07d     2A 2A 28 33 
2a081     19 D2 A5 A0 
2a085     C3 C5 BF BF 
2a089     D6 DA E3 FD | 	byte	$2a, $2a, $28, $33, $19, $d2, $a5, $a0, $c3, $c5, $bf, $bf, $d6, $da, $e3, $fd
2a08d     37 6A 76 74 
2a091     70 6E 5D 47 
2a095     2A 06 E6 C0 
2a099     A5 AE C6 D6 | 	byte	$37, $6a, $76, $74, $70, $6e, $5d, $47, $2a, $06, $e6, $c0, $a5, $ae, $c6, $d6
2a09d     DB E0 EC FD 
2a0a1     10 2F 50 4D 
2a0a5     35 0C EC E0 
2a0a9     E7 ED E6 CC | 	byte	$db, $e0, $ec, $fd, $10, $2f, $50, $4d, $35, $0c, $ec, $e0, $e7, $ed, $e6, $cc
2a0ad     A6 A9 C9 FD 
2a0b1     31 44 43 33 
2a0b5     2D 28 35 3A 
2a0b9     33 13 E8 CC | 	byte	$a6, $a9, $c9, $fd, $31, $44, $43, $33, $2d, $28, $35, $3a, $33, $13, $e8, $cc
2a0bd     B4 C1 DA F0 
2a0c1     FA FD 0F 17 
2a0c5     19 29 42 58 
2a0c9     40 1C F6 E2 | 	byte	$b4, $c1, $da, $f0, $fa, $fd, $0f, $17, $19, $29, $42, $58, $40, $1c, $f6, $e2
2a0cd     DC D5 DA DA 
2a0d1     D3 CE D6 F0 
2a0d5     0A 1C 21 24 
2a0d9     29 28 21 0F | 	byte	$dc, $d5, $da, $da, $d3, $ce, $d6, $f0, $0a, $1c, $21, $24, $29, $28, $21, $0f
2a0dd     02 FA F0 EC 
2a0e1     E3 E7 ED F0 
2a0e5     F4 F9 0C 23 
2a0e9     28 20 14 13 | 	byte	$02, $fa, $f0, $ec, $e3, $e7, $ed, $f0, $f4, $f9, $0c, $23, $28, $20, $14, $13
2a0ed     10 0C 07 07 
2a0f1     00 F3 DC D6 
2a0f5     E0 F5 07 17 
2a0f9     16 06 F5 F0 | 	byte	$10, $0c, $07, $07, $00, $f3, $dc, $d6, $e0, $f5, $07, $17, $16, $06, $f5, $f0
2a0fd     FD 14 1D 16 
2a101     02 E8 DB E3 
2a105     F6 0A 0F 06 
2a109     F9 FA 03 0F | 	byte	$fd, $14, $1d, $16, $02, $e8, $db, $e3, $f6, $0a, $0f, $06, $f9, $fa, $03, $0f
2a10d     21 23 19 00 
2a111     EF F4 02 0E 
2a115     0C 01 F6 ED 
2a119     E9 ED FD 17 | 	byte	$21, $23, $19, $00, $ef, $f4, $02, $0e, $0c, $01, $f6, $ed, $e9, $ed, $fd, $17
2a11d     20 0C F5 F5 
2a121     FD 02 03 02 
2a125     01 02 01 FC 
2a129     FA FD 06 0F | 	byte	$20, $0c, $f5, $f5, $fd, $02, $03, $02, $01, $02, $01, $fc, $fa, $fd, $06, $0f
2a12d     13 0C 00 FA 
2a131     FD 10 17 0F 
2a135     06 F9 F0 F5 
2a139     FD 0A 0A 06 | 	byte	$13, $0c, $00, $fa, $fd, $10, $17, $0f, $06, $f9, $f0, $f5, $fd, $0a, $0a, $06
2a13d     FD FA FD 06 
2a141     14 14 0E 00 
2a145     F3 F5 FD 03 
2a149     06 00 F5 ED | 	byte	$fd, $fa, $fd, $06, $14, $14, $0e, $00, $f3, $f5, $fd, $03, $06, $00, $f5, $ed
2a14d     F0 03 14 17 
2a151     0F 06 01 07 
2a155     0F 13 0C 02 
2a159     F9 F4 F3 F6 | 	byte	$f0, $03, $14, $17, $0f, $06, $01, $07, $0f, $13, $0c, $02, $f9, $f4, $f3, $f6
2a15d     FD 09 06 FC 
2a161     F3 F4 FC 10 
2a165     21 19 06 F4 
2a169     E9 F0 FD 0F | 	byte	$fd, $09, $06, $fc, $f3, $f4, $fc, $10, $21, $19, $06, $f4, $e9, $f0, $fd, $0f
2a16d     0C F5 E9 F0 
2a171     FD 0A 17 1D 
2a175     14 00 EF F6 
2a179     09 0F 09 07 | 	byte	$0c, $f5, $e9, $f0, $fd, $0a, $17, $1d, $14, $00, $ef, $f6, $09, $0f, $09, $07
2a17d     09 F9 E0 E0 
2a181     F4 07 0C 0E 
2a185     0F 0C 02 09 
2a189     17 1B 0C F5 | 	byte	$09, $f9, $e0, $e0, $f4, $07, $0c, $0e, $0f, $0c, $02, $09, $17, $1b, $0c, $f5
2a18d     EC E7 E8 F6 
2a191     01 FC F4 FC 
2a195     09 0C 0C 0E 
2a199     0E 01 F6 FD | 	byte	$ec, $e7, $e8, $f6, $01, $fc, $f4, $fc, $09, $0c, $0c, $0e, $0e, $01, $f6, $fd
2a19d     13 16 06 F5 
2a1a1     F3 EF EF FA 
2a1a5     02 00 F4 F5 
2a1a9     03 10 17 20 | 	byte	$13, $16, $06, $f5, $f3, $ef, $ef, $fa, $02, $00, $f4, $f5, $03, $10, $17, $20
2a1ad     20 0C F3 E6 
2a1b1     F3 09 16 10 
2a1b5     00 E8 E3 F0 
2a1b9     0A 19 13 01 | 	byte	$20, $0c, $f3, $e6, $f3, $09, $16, $10, $00, $e8, $e3, $f0, $0a, $19, $13, $01
2a1bd     F4 F4 FC 0C 
2a1c1     1B 19 0C FC 
2a1c5     F4 F4 F4 F6 
2a1c9     FD 00 EF E6 | 	byte	$f4, $f4, $fc, $0c, $1b, $19, $0c, $fc, $f4, $f4, $f4, $f6, $fd, $00, $ef, $e6
2a1cd     F5 13 2A 1C 
2a1d1     00 E8 F0 0A 
2a1d5     20 1B 0E 00 
2a1d9     F5 F4 02 16 | 	byte	$f5, $13, $2a, $1c, $00, $e8, $f0, $0a, $20, $1b, $0e, $00, $f5, $f4, $02, $16
2a1dd     19 06 F4 E9 
2a1e1     EC F6 0E 21 
2a1e5     19 02 EF E3 
2a1e9     EF 03 0E 09 | 	byte	$19, $06, $f4, $e9, $ec, $f6, $0e, $21, $19, $02, $ef, $e3, $ef, $03, $0e, $09
2a1ed     F9 EF F0 FA 
2a1f1     0E 24 26 0C 
2a1f5     E8 DA EC 06 
2a1f9     10 10 09 00 | 	byte	$f9, $ef, $f0, $fa, $0e, $24, $26, $0c, $e8, $da, $ec, $06, $10, $10, $09, $00
2a1fd     F6 FA 10 20 
2a201     16 FC EF F9 
2a205     06 0E 13 13 
2a209     0C F5 E0 E3 | 	byte	$f6, $fa, $10, $20, $16, $fc, $ef, $f9, $06, $0e, $13, $13, $0c, $f5, $e0, $e3
2a20d     07 26 19 F3 
2a211     DF F0 0E 28 
2a215     35 26 00 D5 
2a219     C5 E9 1C 2A | 	byte	$07, $26, $19, $f3, $df, $f0, $0e, $28, $35, $26, $00, $d5, $c5, $e9, $1c, $2a
2a21d     13 F3 E9 F5 
2a221     02 0C 13 14 
2a225     02 EC E3 EF 
2a229     FA 00 03 06 | 	byte	$13, $f3, $e9, $f5, $02, $0c, $13, $14, $02, $ec, $e3, $ef, $fa, $00, $03, $06
2a22d     01 F4 E8 EF 
2a231     06 14 06 FA 
2a235     FD 03 09 10 
2a239     21 19 00 E7 | 	byte	$01, $f4, $e8, $ef, $06, $14, $06, $fa, $fd, $03, $09, $10, $21, $19, $00, $e7
2a23d     F4 0A 0C FA 
2a241     ED F4 07 0F 
2a245     0A 0C 14 0E 
2a249     F9 EF F5 01 | 	byte	$f4, $0a, $0c, $fa, $ed, $f4, $07, $0f, $0a, $0c, $14, $0e, $f9, $ef, $f5, $01
2a24d     0F 19 0F 03 
2a251     F9 F3 F5 FC 
2a255     06 07 00 F5 
2a259     F0 F6 03 10 | 	byte	$0f, $19, $0f, $03, $f9, $f3, $f5, $fc, $06, $07, $00, $f5, $f0, $f6, $03, $10
2a25d     17 14 06 F3 
2a261     ED FA FD 01 
2a265     FC F6 FC 06 
2a269     13 0F 02 FD | 	byte	$17, $14, $06, $f3, $ed, $fa, $fd, $01, $fc, $f6, $fc, $06, $13, $0f, $02, $fd
2a26d     FC 02 0A 02 
2a271     F9 EC F0 FD 
2a275     09 0F 09 F9 
2a279     F3 F5 FD 01 | 	byte	$fc, $02, $0a, $02, $f9, $ec, $f0, $fd, $09, $0f, $09, $f9, $f3, $f5, $fd, $01
2a27d     01 0A 0F 09 
2a281     03 FD 07 16 
2a285     0F 00 F3 F6 
2a289     06 0A 0E 0C | 	byte	$01, $0a, $0f, $09, $03, $fd, $07, $16, $0f, $00, $f3, $f6, $06, $0a, $0e, $0c
2a28d     0A 0C 00 F5 
2a291     09 19 19 0C 
2a295     F3 ED F0 FC 
2a299     10 19 14 02 | 	byte	$0a, $0c, $00, $f5, $09, $19, $19, $0c, $f3, $ed, $f0, $fc, $10, $19, $14, $02
2a29d     E8 E9 FD 0A 
2a2a1     07 F9 F3 FA 
2a2a5     FD 07 0C 07 
2a2a9     00 FC 02 09 | 	byte	$e8, $e9, $fd, $0a, $07, $f9, $f3, $fa, $fd, $07, $0c, $07, $00, $fc, $02, $09
2a2ad     02 FC F5 F6 
2a2b1     FD 06 13 13 
2a2b5     0F 09 00 FD 
2a2b9     FD F5 FD 07 | 	byte	$02, $fc, $f5, $f6, $fd, $06, $13, $13, $0f, $09, $00, $fd, $fd, $f5, $fd, $07
2a2bd     06 02 F9 FD 
2a2c1     09 03 02 00 
2a2c5     F9 03 0A 09 
2a2c9     02 FA FD 00 | 	byte	$06, $02, $f9, $fd, $09, $03, $02, $00, $f9, $03, $0a, $09, $02, $fa, $fd, $00
2a2cd     F3 F6 06 13 
2a2d1     0F F5 F0 FA 
2a2d5     FD 06 00 FD 
2a2d9     09 06 09 10 | 	byte	$f3, $f6, $06, $13, $0f, $f5, $f0, $fa, $fd, $06, $00, $fd, $09, $06, $09, $10
2a2dd     10 0E 00 F9 
2a2e1     FD 02 00 F3 
2a2e5     ED FA 01 06 
2a2e9     00 FA 02 09 | 	byte	$10, $0e, $00, $f9, $fd, $02, $00, $f3, $ed, $fa, $01, $06, $00, $fa, $02, $09
2a2ed     0E 0A FC F9 
2a2f1     F3 ED FD 07 
2a2f5     0E 0E 01 01 
2a2f9     FC FD 0A 09 | 	byte	$0e, $0a, $fc, $f9, $f3, $ed, $fd, $07, $0e, $0e, $01, $01, $fc, $fd, $0a, $09
2a2fd     06 F9 ED FC 
2a301     03 0F 1C 16 
2a305     00 DF DC FD 
2a309     14 28 20 00 | 	byte	$06, $f9, $ed, $fc, $03, $0f, $1c, $16, $00, $df, $dc, $fd, $14, $28, $20, $00
2a30d     E6 DA F6 14 
2a311     17 19 02 EC 
2a315     F4 03 16 14 
2a319     03 00 F9 F3 | 	byte	$e6, $da, $f6, $14, $17, $19, $02, $ec, $f4, $03, $16, $14, $03, $00, $f9, $f3
2a31d     FA 02 09 02 
2a321     F6 ED ED FD 
2a325     13 09 F4 F4 
2a329     07 16 0C FA | 	byte	$fa, $02, $09, $02, $f6, $ed, $ed, $fd, $13, $09, $f4, $f4, $07, $16, $0c, $fa
2a32d     F5 FD 0F 0F 
2a331     00 F9 FD 0F 
2a335     1C 06 EF EF 
2a339     FD 0E 0C 07 | 	byte	$f5, $fd, $0f, $0f, $00, $f9, $fd, $0f, $1c, $06, $ef, $ef, $fd, $0e, $0c, $07
2a33d     FC FD 10 0C 
2a341     00 01 09 06 
2a345     F5 FA 03 F9 
2a349     FD 06 09 0C | 	byte	$fc, $fd, $10, $0c, $00, $01, $09, $06, $f5, $fa, $03, $f9, $fd, $06, $09, $0c
2a34d     07 06 0E 0C 
2a351     0F 10 02 FA 
2a355     06 14 06 E8 
2a359     DA DB E3 F0 | 	byte	$07, $06, $0e, $0c, $0f, $10, $02, $fa, $06, $14, $06, $e8, $da, $db, $e3, $f0
2a35d     02 06 F6 E7 
2a361     E9 F9 17 2F 
2a365     2D 19 F5 ED 
2a369     0A 20 1C 0F | 	byte	$02, $06, $f6, $e7, $e9, $f9, $17, $2f, $2d, $19, $f5, $ed, $0a, $20, $1c, $0f
2a36d     02 F9 EC F0 
2a371     0A 19 13 00 
2a375     FC F5 E7 F0 
2a379     17 4B 4D 0C | 	byte	$02, $f9, $ec, $f0, $0a, $19, $13, $00, $fc, $f5, $e7, $f0, $17, $4b, $4d, $0c
2a37d     D2 C1 DC F5 
2a381     06 03 D2 B4 
2a385     AF C0 E2 FD 
2a389     0F 17 10 28 | 	byte	$d2, $c1, $dc, $f5, $06, $03, $d2, $b4, $af, $c0, $e2, $fd, $0f, $17, $10, $28
2a38d     4B 40 35 33 
2a391     1D 1C 10 01 
2a395     F3 D9 E3 ED 
2a399     E7 FD 1D 1D | 	byte	$4b, $40, $35, $33, $1d, $1c, $10, $01, $f3, $d9, $e3, $ed, $e7, $fd, $1d, $1d
2a39d     0E 03 44 72 
2a3a1     33 01 13 F9 
2a3a5     CC A1 82 84 
2a3a9     80 A2 B2 AD | 	byte	$0e, $03, $44, $72, $33, $01, $13, $f9, $cc, $a1, $82, $84, $80, $a2, $b2, $ad
2a3ad     D6 03 23 4B 
2a3b1     72 7F 77 4F 
2a3b5     47 2D 17 0F 
2a3b9     E8 CE BC BB | 	byte	$d6, $03, $23, $4b, $72, $7f, $77, $4f, $47, $2d, $17, $0f, $e8, $ce, $bc, $bb
2a3bd     D2 E2 FD 0A 
2a3c1     09 1B 31 4B 
2a3c5     5C 70 7F 5A 
2a3c9     E6 B6 D6 CE | 	byte	$d2, $e2, $fd, $0a, $09, $1b, $31, $4b, $5c, $70, $7f, $5a, $e6, $b6, $d6, $ce
2a3cd     9E 80 80 80 
2a3d1     80 8F FD 31 
2a3d5     3E 49 50 7F 
2a3d9     7F 7F 7F 4D | 	byte	$9e, $80, $80, $80, $80, $8f, $fd, $31, $3e, $49, $50, $7f, $7f, $7f, $7f, $4d
2a3dd     00 CC A7 B2 
2a3e1     A7 98 8D A0 
2a3e5     E3 14 21 42 
2a3e9     5D 76 7F 7F | 	byte	$00, $cc, $a7, $b2, $a7, $98, $8d, $a0, $e3, $14, $21, $42, $5d, $76, $7f, $7f
2a3ed     7F 40 DB B8 
2a3f1     B2 AD 8D 80 
2a3f5     80 80 80 95 
2a3f9     FD 5C 70 69 | 	byte	$7f, $40, $db, $b8, $b2, $ad, $8d, $80, $80, $80, $80, $95, $fd, $5c, $70, $69
2a3fd     7F 7F 7F 7F 
2a401     7F          | 	byte	$7f[5]
2a402     33 B8 80 80 
2a406     80 80 82 80 
2a40a     8F D6 1D 58 
2a40e     7F 7F 7F 7F | 	byte	$33, $b8, $80, $80, $80, $80, $82, $80, $8f, $d6, $1d, $58, $7f, $7f, $7f, $7f
2a412     7F 7F 0C CC 
2a416     B2 AB A0 80 
2a41a     80 80 80 80 
2a41e     95 E3 58 7F | 	byte	$7f, $7f, $0c, $cc, $b2, $ab, $a0, $80, $80, $80, $80, $80, $95, $e3, $58, $7f
2a422     7F 7F 7F 7F 
2a426     7F          | 	byte	$7f[5]
2a427     67 00 9E 80 
2a42b     80 80 80 80 
2a42f     95 C3 F0 31 
2a433     7F 7F 7F 7F | 	byte	$67, $00, $9e, $80, $80, $80, $80, $80, $95, $c3, $f0, $31, $7f, $7f, $7f, $7f
2a437     7F 7F 33 D2 
2a43b     AE A1 87 80 
2a43f     80 80 80 80 
2a443     A2 F0 5E 7F | 	byte	$7f, $7f, $33, $d2, $ae, $a1, $87, $80, $80, $80, $80, $80, $a2, $f0, $5e, $7f
2a447     7F 7F 7F 7F 
2a44b     67 00 C1 98 
2a44f     80 80 80 80 
2a453     80 AF 10 3E | 	byte	$7f, $7f, $7f, $7f, $67, $00, $c1, $98, $80, $80, $80, $80, $80, $af, $10, $3e
2a457     5C 7F 7F 7F 
2a45b     7F 7F 7F 00 
2a45f     BF AD 9E 80 
2a463     80 80 80 80 | 	byte	$5c, $7f, $7f, $7f, $7f, $7f, $7f, $00, $bf, $ad, $9e, $80, $80, $80, $80, $80
2a467     95 D0 FD 65 
2a46b     7F 7F 7F 7F 
2a46f     7F 0C CC AE 
2a473     99 80 80 80 | 	byte	$95, $d0, $fd, $65, $7f, $7f, $7f, $7f, $7f, $0c, $cc, $ae, $99, $80, $80, $80
2a477     80 80 C9 3E 
2a47b     7F 7F 7F 7F 
2a47f     7F 7F 7F 67 
2a483     00 BF AB 98 | 	byte	$80, $80, $c9, $3e, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $67, $00, $bf, $ab, $98
2a487     80 80 80 80 
2a48b     80          | 	byte	$80[5]
2a48c     A5 BC 24 7F 
2a490     7F 7F 7F 7F 
2a494     67 E6 BB A5 
2a498     80 80 80 80 | 	byte	$a5, $bc, $24, $7f, $7f, $7f, $7f, $7f, $67, $e6, $bb, $a5, $80, $80, $80, $80
2a49c     80 95 FD 4B 
2a4a0     72 7F 7F 7F 
2a4a4     7F 7F 67 29 
2a4a8     EC B8 9E 80 | 	byte	$80, $95, $fd, $4b, $72, $7f, $7f, $7f, $7f, $7f, $67, $29, $ec, $b8, $9e, $80
2a4ac     80 80 80 80 
2a4b0     9C B2 C9 31 
2a4b4     7F 7F 7F 7F 
2a4b8     7F 0C CC C1 | 	byte	$80, $80, $80, $80, $9c, $b2, $c9, $31, $7f, $7f, $7f, $7f, $7f, $0c, $cc, $c1
2a4bc     B2 80 80 80 
2a4c0     80 80 E3 44 
2a4c4     7F 7F 7F 7F 
2a4c8     7F 7F 7F 33 | 	byte	$b2, $80, $80, $80, $80, $80, $e3, $44, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $33
2a4cc     F3 D9 BF A5 
2a4d0     80 80 80 80 
2a4d4     80 BC FD 10 
2a4d8     31 7F 7F 7F | 	byte	$f3, $d9, $bf, $a5, $80, $80, $80, $80, $80, $bc, $fd, $10, $31, $7f, $7f, $7f
2a4dc     7F 7F 19 BF 
2a4e0     91 A6 80 80 
2a4e4     80 80 80 C9 
2a4e8     17 7C 7F 7F | 	byte	$7f, $7f, $19, $bf, $91, $a6, $80, $80, $80, $80, $80, $c9, $17, $7c, $7f, $7f
2a4ec     7F 7F 7F 74 
2a4f0     26 17 1C DF 
2a4f4     AB 80 80 80 
2a4f8     80 93 C9 E9 | 	byte	$7f, $7f, $7f, $74, $26, $17, $1c, $df, $ab, $80, $80, $80, $80, $93, $c9, $e9
2a4fc     E8 24 7F 7F 
2a500     7F 7F 7F 19 
2a504     C0 99 AF 8B 
2a508     80 80 80 80 | 	byte	$e8, $24, $7f, $7f, $7f, $7f, $7f, $19, $c0, $99, $af, $8b, $80, $80, $80, $80
2a50c     BC 17 72 7F 
2a510     7F 7F 7F 7F 
2a514     7F 40 0A 13 
2a518     E6 B4 80 80 | 	byte	$bc, $17, $72, $7f, $7f, $7f, $7f, $7f, $7f, $40, $0a, $13, $e6, $b4, $80, $80
2a51c     80 80 80 AD 
2a520     DC E3 24 7F 
2a524     7F 7F 7F 7F 
2a528     33 D2 9C B4 | 	byte	$80, $80, $80, $ad, $dc, $e3, $24, $7f, $7f, $7f, $7f, $7f, $33, $d2, $9c, $b4
2a52c     84 80 80 80 
2a530     80 C9 17 65 
2a534     7F 7F 7F 7F 
2a538     7F 74 26 29 | 	byte	$84, $80, $80, $80, $80, $c9, $17, $65, $7f, $7f, $7f, $7f, $7f, $74, $26, $29
2a53c     26 D9 AB 80 
2a540     80 80 80 8F 
2a544     AF C3 E9 65 
2a548     7F 7F 7F 7F | 	byte	$26, $d9, $ab, $80, $80, $80, $80, $8f, $af, $c3, $e9, $65, $7f, $7f, $7f, $7f
2a54c     7F 00 CC AB 
2a550     A2 80 80 80 
2a554     80 8F E9 2A 
2a558     70 7F 7F 7F | 	byte	$7f, $00, $cc, $ab, $a2, $80, $80, $80, $80, $8f, $e9, $2a, $70, $7f, $7f, $7f
2a55c     7F 7F 7F 33 
2a560     0C D5 B3 8B 
2a564     80 80 80 80 
2a568     80 BC E3 31 | 	byte	$7f, $7f, $7f, $33, $0c, $d5, $b3, $8b, $80, $80, $80, $80, $80, $bc, $e3, $31
2a56c     7F 7F 7F 7F 
2a570     7F          | 	byte	$7f[5]
2a571     33 D2 AD A9 
2a575     80 80 80 80 
2a579     80 C3 17 6F 
2a57d     7F 7F 7F 7F | 	byte	$33, $d2, $ad, $a9, $80, $80, $80, $80, $80, $c3, $17, $6f, $7f, $7f, $7f, $7f
2a581     7F 7F 47 0C 
2a585     D2 B3 98 80 
2a589     80 80 80 80 
2a58d     A2 D6 31 7F | 	byte	$7f, $7f, $47, $0c, $d2, $b3, $98, $80, $80, $80, $80, $80, $a2, $d6, $31, $7f
2a591     7F 7F 7F 7F 
2a595     33 D9 B4 AD 
2a599     80 80 80 80 
2a59d     80 BC 24 78 | 	byte	$7f, $7f, $7f, $7f, $33, $d9, $b4, $ad, $80, $80, $80, $80, $80, $bc, $24, $78
2a5a1     7F 7F 7F 7F 
2a5a5     7F 7F       | 	byte	$7f[6]
2a5a7     74 06 C5 AB 
2a5ab     8D 80 80 80 
2a5af     80 80 95 F0 
2a5b3     58 7F 7F 7F | 	byte	$74, $06, $c5, $ab, $8d, $80, $80, $80, $80, $80, $95, $f0, $58, $7f, $7f, $7f
2a5b7     7F 7F 33 D9 
2a5bb     B8 A5 80 80 
2a5bf     80 80 80 AF 
2a5c3     31 7F 7F 7F | 	byte	$7f, $7f, $33, $d9, $b8, $a5, $80, $80, $80, $80, $80, $af, $31, $7f, $7f, $7f
2a5c7     7F 7F 7F 7F 
2a5cb     7F          | 	byte	$7f[5]
2a5cc     00 C0 A7 8D 
2a5d0     80 80 80 80 
2a5d4     80 95 FD 65 
2a5d8     7F 7F 7F 7F | 	byte	$00, $c0, $a7, $8d, $80, $80, $80, $80, $80, $95, $fd, $65, $7f, $7f, $7f, $7f
2a5dc     7F 40 E6 B8 
2a5e0     A5 80 80 80 
2a5e4     80 80 AF 17 
2a5e8     65 7F 7F 7F | 	byte	$7f, $40, $e6, $b8, $a5, $80, $80, $80, $80, $80, $af, $17, $65, $7f, $7f, $7f
2a5ec     7F 7F 7F 4D 
2a5f0     F3 CC B2 A1 
2a5f4     80 80 80 80 
2a5f8     8F D0 ED 17 | 	byte	$7f, $7f, $7f, $4d, $f3, $cc, $b2, $a1, $80, $80, $80, $80, $8f, $d0, $ed, $17
2a5fc     7F 7F 7F 7F 
2a600     7F          | 	byte	$7f[5]
2a601     4D E6 B9 AD 
2a605     98 80 80 80 
2a609     80 95 0A 65 
2a60d     7F 7F 7F 7F | 	byte	$4d, $e6, $b9, $ad, $98, $80, $80, $80, $80, $95, $0a, $65, $7f, $7f, $7f, $7f
2a611     7F 7F 7F 0C 
2a615     CC B6 9E 80 
2a619     80 80 80 80 
2a61d     95 F0 31 7F | 	byte	$7f, $7f, $7f, $0c, $cc, $b6, $9e, $80, $80, $80, $80, $80, $95, $f0, $31, $7f
2a621     7F 7F 7F 7F 
2a625     7F          | 	byte	$7f[5]
2a626     0C D9 B2 91 
2a62a     80 80 80 80 
2a62e     AF 0A 48 7F 
2a632     7F 7F 7F 7F | 	byte	$0c, $d9, $b2, $91, $80, $80, $80, $80, $af, $0a, $48, $7f, $7f, $7f, $7f, $7f
2a636     7F 67 00 DF 
2a63a     C0 AE 80 80 
2a63e     80 80 80 AF 
2a642     24 50 3A 65 | 	byte	$7f, $67, $00, $df, $c0, $ae, $80, $80, $80, $80, $80, $af, $24, $50, $3a, $65
2a646     7F 7F 7F 7F 
2a64a     33 CE A5 95 
2a64e     84 80 80 80 
2a652     80 E3 44 7F | 	byte	$7f, $7f, $7f, $7f, $33, $ce, $a5, $95, $84, $80, $80, $80, $80, $e3, $44, $7f
2a656     7F 7F 7F 7F 
2a65a     7F          | 	byte	$7f[5]
2a65b     74 26 CC A2 
2a65f     D3 CE 84 80 
2a663     80 80 80 E3 
2a667     65 7F 5A 4B | 	byte	$74, $26, $cc, $a2, $d3, $ce, $84, $80, $80, $80, $80, $e3, $65, $7f, $5a, $4b
2a66b     7F 7F 7F 7F 
2a66f     40 D2 80 88 
2a673     94 87 95 AB 
2a677     C9 FD 3E 7F | 	byte	$7f, $7f, $7f, $7f, $40, $d2, $80, $88, $94, $87, $95, $ab, $c9, $fd, $3e, $7f
2a67b     7F 70 76 7D 
2a67f     77 67 0C C1 
2a683     9C C9 F6 CC 
2a687     8D A7 D3 F9 | 	byte	$7f, $70, $76, $7d, $77, $67, $0c, $c1, $9c, $c9, $f6, $cc, $8d, $a7, $d3, $f9
2a68b     ED 24 35 00 
2a68f     F0 1D 3E 47 
2a693     00 ED D2 C5 
2a697     FC 1C 0C 13 | 	byte	$ed, $24, $35, $00, $f0, $1d, $3e, $47, $00, $ed, $d2, $c5, $fc, $1c, $0c, $13
2a69b     10 2A 3A 48 
2a69f     54 3A 1C 1B 
2a6a3     F3 EC DA DA 
2a6a7     D9 CC F6 13 | 	byte	$10, $2a, $3a, $48, $54, $3a, $1c, $1b, $f3, $ec, $da, $da, $d9, $cc, $f6, $13
2a6ab     E8 E6 14 51 
2a6af     7F 67 26 CC 
2a6b3     80 80 D6 17 
2a6b7     00 9A 86 93 | 	byte	$e8, $e6, $14, $51, $7f, $67, $26, $cc, $80, $80, $d6, $17, $00, $9a, $86, $93
2a6bb     C9 3E 7F 7F 
2a6bf     78 48 50 40 
2a6c3     47 40 00 C1 
2a6c7     A7 A2 AD AD | 	byte	$c9, $3e, $7f, $7f, $78, $48, $50, $40, $47, $40, $00, $c1, $a7, $a2, $ad, $ad
2a6cb     C9 DC F6 28 
2a6cf     4B 65 61 43 
2a6d3     3B 33 29 F3 
2a6d7     D9 EF B9 91 | 	byte	$c9, $dc, $f6, $28, $4b, $65, $61, $43, $3b, $33, $29, $f3, $d9, $ef, $b9, $91
2a6db     95 B8 BC AE 
2a6df     C6 ED 03 44 
2a6e3     76 67 33 20 
2a6e7     23 20 F9 0A | 	byte	$95, $b8, $bc, $ae, $c6, $ed, $03, $44, $76, $67, $33, $20, $23, $20, $f9, $0a
2a6eb     19 EC CE D2 
2a6ef     E0 F5 FC 13 
2a6f3     1C 16 2A 37 
2a6f7     35 2D 19 2A | 	byte	$19, $ec, $ce, $d2, $e0, $f5, $fc, $13, $1c, $16, $2a, $37, $35, $2d, $19, $2a
2a6fb     26 00 C5 98 
2a6ff     C8 F0 FD 16 
2a703     F3 CC B2 B3 
2a707     F6 17 58 67 | 	byte	$26, $00, $c5, $98, $c8, $f0, $fd, $16, $f3, $cc, $b2, $b3, $f6, $17, $58, $67
2a70b     E6 C8 DA F6 
2a70f     31 42 3C 02 
2a713     B9 E9 19 3C 
2a717     55 33 0F F3 | 	byte	$e6, $c8, $da, $f6, $31, $42, $3c, $02, $b9, $e9, $19, $3c, $55, $33, $0f, $f3
2a71b     F6 36 26 0F 
2a71f     00 DF FA FC 
2a723     F9 EC B9 D0 
2a727     FA 17 19 ED | 	byte	$f6, $36, $26, $0f, $00, $df, $fa, $fc, $f9, $ec, $b9, $d0, $fa, $17, $19, $ed
2a72b     FD 14 17 33 
2a72f     2D 21 E6 AB 
2a733     DC E6 D6 F5 
2a737     E8 E6 D0 E3 | 	byte	$fd, $14, $17, $33, $2d, $21, $e6, $ab, $dc, $e6, $d6, $f5, $e8, $e6, $d0, $e3
2a73b     2A 33 43 54 
2a73f     36 33 26 1B 
2a743     0C E2 E9 F3 
2a747     DC E9 E6 F4 | 	byte	$2a, $33, $43, $54, $36, $33, $26, $1b, $0c, $e2, $e9, $f3, $dc, $e9, $e6, $f4
2a74b     F9 F4 0E 14 
2a74f     17 23 0C 03 
2a753     FC FD F3 D3 
2a757     E9 FA EF F6 | 	byte	$f9, $f4, $0e, $14, $17, $23, $0c, $03, $fc, $fd, $f3, $d3, $e9, $fa, $ef, $f6
2a75b     F3 FC 02 03 
2a75f     17 1B 1C 16 
2a763     F9 FD 0A 00 
2a767     EF E3 F3 07 | 	byte	$f3, $fc, $02, $03, $17, $1b, $1c, $16, $f9, $fd, $0a, $00, $ef, $e3, $f3, $07
2a76b     09 0C 14 0E 
2a76f     1D 1D 0E 0C 
2a773     17 16 07 F5 
2a777     F0 E9 E7 F0 | 	byte	$09, $0c, $14, $0e, $1d, $1d, $0e, $0c, $17, $16, $07, $f5, $f0, $e9, $e7, $f0
2a77b     F4 F3 F5 FC 
2a77f     07 01 06 0C 
2a783     0A 0E 0C 02 
2a787     F9 F4 F4 F5 | 	byte	$f4, $f3, $f5, $fc, $07, $01, $06, $0c, $0a, $0e, $0c, $02, $f9, $f4, $f4, $f5
2a78b     F5 F9 F5 F6 
2a78f     FD 09 09 14 
2a793     16 16 0C 06 
2a797     09 0F 06 03 | 	byte	$f5, $f9, $f5, $f6, $fd, $09, $09, $14, $16, $16, $0c, $06, $09, $0f, $06, $03
2a79b     F9 F0 EF F3 
2a79f     FC 02 FC FA 
2a7a3     FC FD 0C 19 
2a7a7     19 06 F4 F6 | 	byte	$f9, $f0, $ef, $f3, $fc, $02, $fc, $fa, $fc, $fd, $0c, $19, $19, $06, $f4, $f6
2a7ab     FA FD FD FC 
2a7af     F6 F4 F4 03 
2a7b3     17 1B 13 0A 
2a7b7     07 09 0C 0C | 	byte	$fa, $fd, $fd, $fc, $f6, $f4, $f4, $03, $17, $1b, $13, $0a, $07, $09, $0c, $0c
2a7bb     0C 06 FD FC 
2a7bf     FC F9 FC 03 
2a7c3     0F 0F 0A 06 
2a7c7     02 03 0C 0C | 	byte	$0c, $06, $fd, $fc, $fc, $f9, $fc, $03, $0f, $0f, $0a, $06, $02, $03, $0c, $0c
2a7cb     07 00 F9 EC 
2a7cf     E3 F4 0C 09 
2a7d3     FC F3 FA 0A 
2a7d7     10 14 16 07 | 	byte	$07, $00, $f9, $ec, $e3, $f4, $0c, $09, $fc, $f3, $fa, $0a, $10, $14, $16, $07
2a7db     FD 00 06 00 
2a7df     F5 F0 F3 ED 
2a7e3     F4 FA FA 02 
2a7e7     09 10 14 14 | 	byte	$fd, $00, $06, $00, $f5, $f0, $f3, $ed, $f4, $fa, $fa, $02, $09, $10, $14, $14
2a7eb     13 0C 06 02 
2a7ef     02 0F 09 F9 
2a7f3     F0 F4 F9 FA 
2a7f7     FD 01 03 07 | 	byte	$13, $0c, $06, $02, $02, $0f, $09, $f9, $f0, $f4, $f9, $fa, $fd, $01, $03, $07
2a7fb     0A 09 07 02 
2a7ff     03 06 07 09 
2a803     00 F3 F5 F6 
2a807     FC FC F6 FC | 	byte	$0a, $09, $07, $02, $03, $06, $07, $09, $00, $f3, $f5, $f6, $fc, $fc, $f6, $fc
2a80b     FC 03 10 0F 
2a80f     0C 06 02 09 
2a813     07 09 09 00 
2a817     FA F3 F6 00 | 	byte	$fc, $03, $10, $0f, $0c, $06, $02, $09, $07, $09, $09, $00, $fa, $f3, $f6, $00
2a81b     02 01 FD 02 
2a81f     06 09 0A 02 
2a823     FD 02 06 02 
2a827     FC F5 F6 F6 | 	byte	$02, $01, $fd, $02, $06, $09, $0a, $02, $fd, $02, $06, $02, $fc, $f5, $f6, $f6
2a82b     FC 06 06 03 
2a82f     06 03 06 09 
2a833     0A 01 FA F6 
2a837     FC FD 03 06 | 	byte	$fc, $06, $06, $03, $06, $03, $06, $09, $0a, $01, $fa, $f6, $fc, $fd, $03, $06
2a83b     00 FD FA 02 
2a83f     0A 07 06 02 
2a843     06 0F 09 01 
2a847     F9 ED F4 FD | 	byte	$00, $fd, $fa, $02, $0a, $07, $06, $02, $06, $0f, $09, $01, $f9, $ed, $f4, $fd
2a84b     02 03 FC 00 
2a84f     06 06 0E 0F 
2a853     0A 0A 09 07 
2a857     00 FA 02 01 | 	byte	$02, $03, $fc, $00, $06, $06, $0e, $0f, $0a, $0a, $09, $07, $00, $fa, $02, $01
2a85b     FC FA FA FD 
2a85f     00 02 06 09 
2a863     0C 0F 0C 0C 
2a867     07 09 07 01 | 	byte	$fc, $fa, $fa, $fd, $00, $02, $06, $09, $0c, $0f, $0c, $0c, $07, $09, $07, $01
2a86b     FD F6 F6 FD 
2a86f     FD 00 F5 F4 
2a873     FD 0A 0E 0E 
2a877     06 03 02 03 | 	byte	$fd, $f6, $f6, $fd, $fd, $00, $f5, $f4, $fd, $0a, $0e, $0e, $06, $03, $02, $03
2a87b     07 07 00 00 
2a87f     F6 F5 FA 00 
2a883     06 06 03 06 
2a887     07 0C 0F 0C | 	byte	$07, $07, $00, $00, $f6, $f5, $fa, $00, $06, $06, $03, $06, $07, $0c, $0f, $0c
2a88b     09 06 02 01 
2a88f     FA F6 F9 F6 
2a893     FC 00 00 07 
2a897     07 0A 09 02 | 	byte	$09, $06, $02, $01, $fa, $f6, $f9, $f6, $fc, $00, $00, $07, $07, $0a, $09, $02
2a89b     07 0A 06 00 
2a89f     FA FD F9 F4 
2a8a3     FA 01 02 FC 
2a8a7     FA 01 01 03 | 	byte	$07, $0a, $06, $00, $fa, $fd, $f9, $f4, $fa, $01, $02, $fc, $fa, $01, $01, $03
2a8ab     06 09 0C 09 
2a8af     03 02 FD FD 
2a8b3     FA FC F9 F9 
2a8b7     FD 00 02 06 | 	byte	$06, $09, $0c, $09, $03, $02, $fd, $fd, $fa, $fc, $f9, $f9, $fd, $00, $02, $06
2a8bb     02 06 02 03 
2a8bf     0C 0C 0C 06 
2a8c3     FD FC F9 FC 
2a8c7     00 FA FD FC | 	byte	$02, $06, $02, $03, $0c, $0c, $0c, $06, $fd, $fc, $f9, $fc, $00, $fa, $fd, $fc
2a8cb     F9 FA FC 02 
2a8cf     09 02 02 02 
2a8d3     02 03 02 07 
2a8d7     07 FA F5 F9 | 	byte	$f9, $fa, $fc, $02, $09, $02, $02, $02, $02, $03, $02, $07, $07, $fa, $f5, $f9
2a8db     06 0A 02 02 
2a8df     01 02 0A 0C 
2a8e3     09 06 07 0A 
2a8e7     02 02 09 01 | 	byte	$06, $0a, $02, $02, $01, $02, $0a, $0c, $09, $06, $07, $0a, $02, $02, $09, $01
2a8eb     01 01 FC 03 
2a8ef     09 09 0C 03 
2a8f3     FD FC 03 0A 
2a8f7     07 01 FC FD | 	byte	$01, $01, $fc, $03, $09, $09, $0c, $03, $fd, $fc, $03, $0a, $07, $01, $fc, $fd
2a8fb     03 01 00 FA 
2a8ff     F9 FC FD FC 
2a903     FC FC 01 00 
2a907     FA FA FD 06 | 	byte	$03, $01, $00, $fa, $f9, $fc, $fd, $fc, $fc, $fc, $01, $00, $fa, $fa, $fd, $06
2a90b     02 01 02 00 
2a90f     00 02 07 03 
2a913     06 03 00 03 
2a917     0A 06 06 09 | 	byte	$02, $01, $02, $00, $00, $02, $07, $03, $06, $03, $00, $03, $0a, $06, $06, $09
2a91b     0C 0F 0C 09 
2a91f     09 02 FD FC 
2a923     03 0F 0C 02 
2a927     FC FC 02 06 | 	byte	$0c, $0f, $0c, $09, $09, $02, $fd, $fc, $03, $0f, $0c, $02, $fc, $fc, $02, $06
2a92b     07 03 FC FC 
2a92f     FC 02 06 00 
2a933     FC FA FA FA 
2a937     FC FD 06 06 | 	byte	$07, $03, $fc, $fc, $fc, $02, $06, $00, $fc, $fa, $fa, $fa, $fc, $fd, $06, $06
2a93b     FC F6 FA 01 
2a93f     03 09 09 06 
2a943     06 09 0C 09 
2a947     00 FD 01 03 | 	byte	$fc, $f6, $fa, $01, $03, $09, $09, $06, $06, $09, $0c, $09, $00, $fd, $01, $03
2a94b     02 03 06 06 
2a94f     02 03 06 03 
2a953     00 00 FC FC 
2a957     FD 01 00 F9 | 	byte	$02, $03, $06, $06, $02, $03, $06, $03, $00, $00, $fc, $fc, $fd, $01, $00, $f9
2a95b     FA FD 02 02 
2a95f     00 FD F9 F5 
2a963     FA FD 07 0A 
2a967     01 FD FA FA | 	byte	$fa, $fd, $02, $02, $00, $fd, $f9, $f5, $fa, $fd, $07, $0a, $01, $fd, $fa, $fa
2a96b     07 0C 06 01 
2a96f     F9 FA 03 09 
2a973     09 02 02 07 
2a977     06 0C 0C 03 | 	byte	$07, $0c, $06, $01, $f9, $fa, $03, $09, $09, $02, $02, $07, $06, $0c, $0c, $03
2a97b     FC FC 07 0F 
2a97f     02 FD F9 FA 
2a983     FD 07 03 F9 
2a987     FC 00 00 01 | 	byte	$fc, $fc, $07, $0f, $02, $fd, $f9, $fa, $fd, $07, $03, $f9, $fc, $00, $00, $01
2a98b     FD 01 03 06 
2a98f     09 03 02 06 
2a993     06 01 02 03 
2a997     06 01 FA FC | 	byte	$fd, $01, $03, $06, $09, $03, $02, $06, $06, $01, $02, $03, $06, $01, $fa, $fc
2a99b     02 09 09 07 
2a99f     06 06 02 06 
2a9a3     06 06 03 FA 
2a9a7     FD FD FC 00 | 	byte	$02, $09, $09, $07, $06, $06, $02, $06, $06, $06, $03, $fa, $fd, $fd, $fc, $00
2a9ab     00 FA FC FD 
2a9af     07 06 03 09 
2a9b3     06 02 FD 00 
2a9b7     06 06 09 07 | 	byte	$00, $fa, $fc, $fd, $07, $06, $03, $09, $06, $02, $fd, $00, $06, $06, $09, $07
2a9bb     F9 F6 03 0C 
2a9bf     0C 06 00 F9 
2a9c3     F3 FC 0A 13 
2a9c7     0F 07 01 FD | 	byte	$f9, $f6, $03, $0c, $0c, $06, $00, $f9, $f3, $fc, $0a, $13, $0f, $07, $01, $fd
2a9cb     FD 09 0A 02 
2a9cf     FC FD 03 FD 
2a9d3     FC FD FC FD 
2a9d7     03 0C 0C 02 | 	byte	$fd, $09, $0a, $02, $fc, $fd, $03, $fd, $fc, $fd, $fc, $fd, $03, $0c, $0c, $02
2a9db     FA FA FC 03 
2a9df     09 00 FD FD 
2a9e3     F9 01 0A 09 
2a9e7     06 F9 FC 01 | 	byte	$fa, $fa, $fc, $03, $09, $00, $fd, $fd, $f9, $01, $0a, $09, $06, $f9, $fc, $01
2a9eb     07 06 FD FD 
2a9ef     07 09 07 02 
2a9f3     03 03 FC 02 
2a9f7     07 00 FD FD | 	byte	$07, $06, $fd, $fd, $07, $09, $07, $02, $03, $03, $fc, $02, $07, $00, $fd, $fd
2a9fb     01 01 FC 06 
2a9ff     0F 09 02 00 
2aa03     F4 F4 FA 06 
2aa07     07 01 FC FD | 	byte	$01, $01, $fc, $06, $0f, $09, $02, $00, $f4, $f4, $fa, $06, $07, $01, $fc, $fd
2aa0b     06 07 0C 07 
2aa0f     01 01 00 FC 
2aa13     F5 FA 02 03 
2aa17     FD FD 01 03 | 	byte	$06, $07, $0c, $07, $01, $01, $00, $fc, $f5, $fa, $02, $03, $fd, $fd, $01, $03
2aa1b     02 FC 02 06 
2aa1f     02 FD FD 0E 
2aa23     13 00 F4 F0 
2aa27     FD 10 0C 06 | 	byte	$02, $fc, $02, $06, $02, $fd, $fd, $0e, $13, $00, $f4, $f0, $fd, $10, $0c, $06
2aa2b     F9 F6 09 00 
2aa2f     FC 06 02 0E 
2aa33     03 F5 02 FC 
2aa37     02 06 F9 06 | 	byte	$f9, $f6, $09, $00, $fc, $06, $02, $0e, $03, $f5, $02, $fc, $02, $06, $f9, $06
2aa3b     00 F4 10 16 
2aa3f     19 0C F4 06 
2aa43     07 03 14 06 
2aa47     06 00 EF 02 | 	byte	$00, $f4, $10, $16, $19, $0c, $f4, $06, $07, $03, $14, $06, $06, $00, $ef, $02
2aa4b     FD FD 24 0C 
2aa4f     EC E8 E7 FC 
2aa53     F9 E9 FD F4 
2aa57     E3 E8 F0 09 | 	byte	$fd, $fd, $24, $0c, $ec, $e8, $e7, $fc, $f9, $e9, $fd, $f4, $e3, $e8, $f0, $09
2aa5b     19 1C 1B 01 
2aa5f     0A 19 17 1D 
2aa63     1C 13 06 F5 
2aa67     FD 00 FD 02 | 	byte	$19, $1c, $1b, $01, $0a, $19, $17, $1d, $1c, $13, $06, $f5, $fd, $00, $fd, $02
2aa6b     06 00 F5 FD 
2aa6f     0E 2A 4B 54 
2aa73     2D 19 DF AF 
2aa77     AB 98 8C 9C | 	byte	$06, $00, $f5, $fd, $0e, $2a, $4b, $54, $2d, $19, $df, $af, $ab, $98, $8c, $9c
2aa7b     A9 E0 F6 F5 
2aa7f     16 24 55 7F 
2aa83     7F 7F 54 19 
2aa87     0C D9 D3 CD | 	byte	$a9, $e0, $f6, $f5, $16, $24, $55, $7f, $7f, $7f, $54, $19, $0c, $d9, $d3, $cd
2aa8b     B3 BC B9 C6 
2aa8f     ED FD 17 37 
2aa93     36 51 50 4F 
2aa97     33 10 65 5A | 	byte	$b3, $bc, $b9, $c6, $ed, $fd, $17, $37, $36, $51, $50, $4f, $33, $10, $65, $5a
2aa9b     00 C1 8D 80 
2aa9f     80 80 88 A1 
2aaa3     A7 C6 DC 31 
2aaa7     7F 7F 7F 7F | 	byte	$00, $c1, $8d, $80, $80, $80, $88, $a1, $a7, $c6, $dc, $31, $7f, $7f, $7f, $7f
2aaab     78 62 36 0C 
2aaaf     B2 80 80 80 
2aab3     88 C3 E0 F0 
2aab7     FC 2A 6B 78 | 	byte	$78, $62, $36, $0c, $b2, $80, $80, $80, $88, $c3, $e0, $f0, $fc, $2a, $6b, $78
2aabb     7F 7F 74 2D 
2aabf     31 67 EC BB 
2aac3     8B 80 80 80 
2aac7     80 B8 80 80 | 	byte	$7f, $7f, $74, $2d, $31, $67, $ec, $bb, $8b, $80, $80, $80, $80, $b8, $80, $80
2aacb     F0 65 7F 7F 
2aacf     7F 7F 4D 13 
2aad3     13 D9 A5 80 
2aad7     80 80 80 A2 | 	byte	$f0, $65, $7f, $7f, $7f, $7f, $4d, $13, $13, $d9, $a5, $80, $80, $80, $80, $a2
2aadb     F4 0C 2E 65 
2aadf     7F 7F 7F 7F 
2aae3     7F 19 24 20 
2aae7     C5 9E 80 80 | 	byte	$f4, $0c, $2e, $65, $7f, $7f, $7f, $7f, $7f, $19, $24, $20, $c5, $9e, $80, $80
2aaeb     80 95 A7 A7 
2aaef     80 80 31 7F 
2aaf3     7F 7F 7F 4D 
2aaf7     DB C9 14 D9 | 	byte	$80, $95, $a7, $a7, $80, $80, $31, $7f, $7f, $7f, $7f, $4d, $db, $c9, $14, $d9
2aafb     80 80 80 80 
2aaff     C3 14 37 2D 
2ab03     1C 65 7F 7F 
2ab07     7F 7F 1B 50 | 	byte	$80, $80, $80, $80, $c3, $14, $37, $2d, $1c, $65, $7f, $7f, $7f, $7f, $1b, $50
2ab0b     00 B8 8B 80 
2ab0f     80 80 80 A1 
2ab13     91 80 AF 4B 
2ab17     7F 7F 7F 7F | 	byte	$00, $b8, $8b, $80, $80, $80, $80, $a1, $91, $80, $af, $4b, $7f, $7f, $7f, $7f
2ab1b     5A 06 F3 CE 
2ab1f     B8 80 80 80 
2ab23     80 B9 FD 10 
2ab27     37 62 7F 7F | 	byte	$5a, $06, $f3, $ce, $b8, $80, $80, $80, $80, $b9, $fd, $10, $37, $62, $7f, $7f
2ab2b     7F 7F 6E 00 
2ab2f     17 36 E6 B2 
2ab33     80 80 80 80 
2ab37     BC C5 B9 B6 | 	byte	$7f, $7f, $6e, $00, $17, $36, $e6, $b2, $80, $80, $80, $80, $bc, $c5, $b9, $b6
2ab3b     FD 7F 7F 7F 
2ab3f     7F 7F 0C 00 
2ab43     DB B8 8B 80 
2ab47     80 80 80 E3 | 	byte	$fd, $7f, $7f, $7f, $7f, $7f, $0c, $00, $db, $b8, $8b, $80, $80, $80, $80, $e3
2ab4b     0A 21 5C 7F 
2ab4f     7F 7F 7F 7F 
2ab53     33 03 37 33 
2ab57     D9 98 80 80 | 	byte	$0a, $21, $5c, $7f, $7f, $7f, $7f, $7f, $33, $03, $37, $33, $d9, $98, $80, $80
2ab5b     80 8F C8 C1 
2ab5f     B3 AF 24 7F 
2ab63     7F 7F 7F 4D 
2ab67     03 09 E8 D2 | 	byte	$80, $8f, $c8, $c1, $b3, $af, $24, $7f, $7f, $7f, $7f, $4d, $03, $09, $e8, $d2
2ab6b     80 80 80 80 
2ab6f     95 F0 10 35 
2ab73     65 7F 7F 7F 
2ab77     7F 6E 33 1D | 	byte	$80, $80, $80, $80, $95, $f0, $10, $35, $65, $7f, $7f, $7f, $7f, $6e, $33, $1d
2ab7b     5E 20 CC 80 
2ab7f     80 80 80 AF 
2ab83     A5 9E 9A C9 
2ab87     7F 7F 7F 7F | 	byte	$5e, $20, $cc, $80, $80, $80, $80, $af, $a5, $9e, $9a, $c9, $7f, $7f, $7f, $7f
2ab8b     7F 0E 17 0C 
2ab8f     DA AB 80 80 
2ab93     80 80 C3 F0 
2ab97     F6 31 65 7F | 	byte	$7f, $0e, $17, $0c, $da, $ab, $80, $80, $80, $80, $c3, $f0, $f6, $31, $65, $7f
2ab9b     7F 7F 7F 67 
2ab9f     1D 65 4D E6 
2aba3     98 80 80 80 
2aba7     86 93 8F 86 | 	byte	$7f, $7f, $7f, $67, $1d, $65, $4d, $e6, $98, $80, $80, $80, $86, $93, $8f, $86
2abab     BC 4B 7F 7F 
2abaf     7F 7F 67 2D 
2abb3     20 E6 B8 80 
2abb7     80 80 80 95 | 	byte	$bc, $4b, $7f, $7f, $7f, $7f, $67, $2d, $20, $e6, $b8, $80, $80, $80, $80, $95
2abbb     D3 F0 24 65 
2abbf     7F 7F 7F 7F 
2abc3     7B 3C 65 40 
2abc7     DB A5 80 80 | 	byte	$d3, $f0, $24, $65, $7f, $7f, $7f, $7f, $7b, $3c, $65, $40, $db, $a5, $80, $80
2abcb     80 80 80 80 
2abcf     82 C9 65 7F 
2abd3     7F 7F 7F 67 
2abd7     33 0C D5 B2 | 	byte	$80, $80, $80, $80, $82, $c9, $65, $7f, $7f, $7f, $7f, $67, $33, $0c, $d5, $b2
2abdb     80 80 80 80 
2abdf     95 C9 E3 17 
2abe3     65 7F 7F 7F 
2abe7     7F 77 55 65 | 	byte	$80, $80, $80, $80, $95, $c9, $e3, $17, $65, $7f, $7f, $7f, $7f, $77, $55, $65
2abeb     20 D2 A5 80 
2abef     80 80 80 80 
2abf3     80 8F DC 7F 
2abf7     7F 7F 7F 7F | 	byte	$20, $d2, $a5, $80, $80, $80, $80, $80, $80, $8f, $dc, $7f, $7f, $7f, $7f, $7f
2abfb     67 43 0C D2 
2abff     A7 80 80 80 
2ac03     80 95 D0 F0 
2ac07     24 78 7F 7F | 	byte	$67, $43, $0c, $d2, $a7, $80, $80, $80, $80, $95, $d0, $f0, $24, $78, $7f, $7f
2ac0b     7F 7F 7F 5D 
2ac0f     40 E6 B9 98 
2ac13     80 80 80 80 
2ac17     80 80 AF 24 | 	byte	$7f, $7f, $7f, $5d, $40, $e6, $b9, $98, $80, $80, $80, $80, $80, $80, $af, $24
2ac1b     7F 7F 7F 7F 
2ac1f     7F          | 	byte	$7f[5]
2ac20     67 13 DB B8 
2ac24     84 80 80 80 
2ac28     80 A9 E2 10 
2ac2c     55 7F 7F 7F | 	byte	$67, $13, $db, $b8, $84, $80, $80, $80, $80, $a9, $e2, $10, $55, $7f, $7f, $7f
2ac30     7F 7F 6E 67 
2ac34     00 C5 AB 80 
2ac38     80 80 80 80 
2ac3c     80 95 FD 7F | 	byte	$7f, $7f, $6e, $67, $00, $c5, $ab, $80, $80, $80, $80, $80, $80, $95, $fd, $7f
2ac40     7F 7F 7F 7F 
2ac44     7F          | 	byte	$7f[5]
2ac45     26 F9 CC A5 
2ac49     80 80 80 80 
2ac4d     93 D6 FD 24 
2ac51     5E 7F 7F 7F | 	byte	$26, $f9, $cc, $a5, $80, $80, $80, $80, $93, $d6, $fd, $24, $5e, $7f, $7f, $7f
2ac55     7F 7F 35 0C 
2ac59     D3 B8 98 80 
2ac5d     80 80 80 8C 
2ac61     AF CD 1D 7F | 	byte	$7f, $7f, $35, $0c, $d3, $b8, $98, $80, $80, $80, $80, $8c, $af, $cd, $1d, $7f
2ac65     7F 7F 7F 7F 
2ac69     67 00 D3 CD 
2ac6d     84 80 80 80 
2ac71     80 C3 F5 28 | 	byte	$7f, $7f, $7f, $7f, $67, $00, $d3, $cd, $84, $80, $80, $80, $80, $c3, $f5, $28
2ac75     58 7F 7F 7F 
2ac79     7F 7F 67 1C 
2ac7d     0C D2 B2 80 
2ac81     80 80 80 BB | 	byte	$58, $7f, $7f, $7f, $7f, $7f, $67, $1c, $0c, $d2, $b2, $80, $80, $80, $80, $bb
2ac85     C9 DC D9 FD 
2ac89     7F 7F 7F 7F 
2ac8d     7F 06 E6 E3 
2ac91     D9 98 80 80 | 	byte	$c9, $dc, $d9, $fd, $7f, $7f, $7f, $7f, $7f, $06, $e6, $e3, $d9, $98, $80, $80
2ac95     80 8F FD 24 
2ac99     33 36 51 7F 
2ac9d     7F 7F 7F 33 
2aca1     B9 E3 16 F3 | 	byte	$80, $8f, $fd, $24, $33, $36, $51, $7f, $7f, $7f, $7f, $33, $b9, $e3, $16, $f3
2aca5     C5 80 80 80 
2aca9     80 F0 42 33 
2acad     13 07 2A 7F 
2acb1     7F 7F 7F 00 | 	byte	$c5, $80, $80, $80, $80, $f0, $42, $33, $13, $07, $2a, $7f, $7f, $7f, $7f, $00
2acb5     BB D6 DA D2 
2acb9     98 80 80 95 
2acbd     F0 42 4F 47 
2acc1     51 6B 7F 7F | 	byte	$bb, $d6, $da, $d2, $98, $80, $80, $95, $f0, $42, $4f, $47, $51, $6b, $7f, $7f
2acc5     7F 43 D2 A2 
2acc9     F0 19 F3 A5 
2accd     86 AE A7 C3 
2acd1     FD 0E 0E 10 | 	byte	$7f, $43, $d2, $a2, $f0, $19, $f3, $a5, $86, $ae, $a7, $c3, $fd, $0e, $0e, $10
2acd5     28 50 56 48 
2acd9     33 01 F9 14 
2acdd     13 07 E6 E0 
2ace1     F9 FD 17 2E | 	byte	$28, $50, $56, $48, $33, $01, $f9, $14, $13, $07, $e6, $e0, $f9, $fd, $17, $2e
2ace5     1D 21 20 1C 
2ace9     21 26 21 13 
2aced     F9 F9 03 17 
2acf1     33 00 B4 D6 | 	byte	$1d, $21, $20, $1c, $21, $26, $21, $13, $f9, $f9, $03, $17, $33, $00, $b4, $d6
2acf5     17 33 1B FA 
2acf9     D9 B2 C1 FA 
2acfd     28 13 EC D9 
2ad01     CE E9 31 65 | 	byte	$17, $33, $1b, $fa, $d9, $b2, $c1, $fa, $28, $13, $ec, $d9, $ce, $e9, $31, $65
2ad05     54 1B 0A 1D 
2ad09     20 2A 37 1C 
2ad0d     F9 E6 E8 FD 
2ad11     F5 ED EF E3 | 	byte	$54, $1b, $0a, $1d, $20, $2a, $37, $1c, $f9, $e6, $e8, $fd, $f5, $ed, $ef, $e3
2ad15     FD 3B 44 42 
2ad19     26 F9 07 24 
2ad1d     35 26 CC 91 
2ad21     93 A0 DC F9 | 	byte	$fd, $3b, $44, $42, $26, $f9, $07, $24, $35, $26, $cc, $91, $93, $a0, $dc, $f9
2ad25     D5 B8 BC F6 
2ad29     4B 69 5E 3A 
2ad2d     1C 20 29 3A 
2ad31     33 F5 C8 B8 | 	byte	$d5, $b8, $bc, $f6, $4b, $69, $5e, $3a, $1c, $20, $29, $3a, $33, $f5, $c8, $b8
2ad35     C6 F0 02 F5 
2ad39     EF F5 24 3C 
2ad3d     31 3A 26 0C 
2ad41     17 17 1C EC | 	byte	$c6, $f0, $02, $f5, $ef, $f5, $24, $3c, $31, $3a, $26, $0c, $17, $17, $1c, $ec
2ad45     BB DC D9 CE 
2ad49     DA CC DC E8 
2ad4d     DB FD 28 24 
2ad51     2E 0C FD 17 | 	byte	$bb, $dc, $d9, $ce, $da, $cc, $dc, $e8, $db, $fd, $28, $24, $2e, $0c, $fd, $17
2ad55     0F 1D 0C EC 
2ad59     FD F6 F6 00 
2ad5d     F5 0A 13 1D 
2ad61     35 26 26 26 | 	byte	$0f, $1d, $0c, $ec, $fd, $f6, $f6, $00, $f5, $0a, $13, $1d, $35, $26, $26, $26
2ad65     02 10 1B 14 
2ad69     0F DB C6 D5 
2ad6d     DB F0 ED F6 
2ad71     19 F9 F0 0A | 	byte	$02, $10, $1b, $14, $0f, $db, $c6, $d5, $db, $f0, $ed, $f6, $19, $f9, $f0, $0a
2ad75     1B 36 1C FC 
2ad79     EC CC DC FA 
2ad7d     F6 F3 E6 F4 
2ad81     F9 ED 10 2F | 	byte	$1b, $36, $1c, $fc, $ec, $cc, $dc, $fa, $f6, $f3, $e6, $f4, $f9, $ed, $10, $2f
2ad85     29 26 16 24 
2ad89     23 0E 0E FC 
2ad8d     F4 00 02 0C 
2ad91     F5 ED FD 0A | 	byte	$29, $26, $16, $24, $23, $0e, $0e, $fc, $f4, $00, $02, $0c, $f5, $ed, $fd, $0a
2ad95     17 19 0F 0C 
2ad99     F9 F6 09 03 
2ad9d     FC EF ED F0 
2ada1     E8 F5 03 02 | 	byte	$17, $19, $0f, $0c, $f9, $f6, $09, $03, $fc, $ef, $ed, $f0, $e8, $f5, $03, $02
2ada5     FD FD 09 14 
2ada9     10 13 06 F6 
2adad     FD 06 09 02 
2adb1     F4 F5 FA 06 | 	byte	$fd, $fd, $09, $14, $10, $13, $06, $f6, $fd, $06, $09, $02, $f4, $f5, $fa, $06
2adb5     10 0E 06 01 
2adb9     03 14 13 0C 
2adbd     06 F3 F0 F6 
2adc1     FA FD F5 EF | 	byte	$10, $0e, $06, $01, $03, $14, $13, $0c, $06, $f3, $f0, $f6, $fa, $fd, $f5, $ef
2adc5     F9 FC 01 0C 
2adc9     0C 09 06 03 
2adcd     09 0E 0C 02 
2add1     F6 F6 F9 FA | 	byte	$f9, $fc, $01, $0c, $0c, $09, $06, $03, $09, $0e, $0c, $02, $f6, $f6, $f9, $fa
2add5     FD 00 02 FC 
2add9     FD 0E 10 0C 
2addd     09 06 0F 10 
2ade1     06 07 F9 EF | 	byte	$fd, $00, $02, $fc, $fd, $0e, $10, $0c, $09, $06, $0f, $10, $06, $07, $f9, $ef
2ade5     F5 FD 06 07 
2ade9     F9 F4 F6 03 
2aded     0F 0C 06 02 
2adf1     FC FD 02 02 | 	byte	$f5, $fd, $06, $07, $f9, $f4, $f6, $03, $0f, $0c, $06, $02, $fc, $fd, $02, $02
2adf5     00 F6 EF F3 
2adf9     FA FD 03 02 
2adfd     02 07 0C 0E 
2ae01     09 02 01 07 | 	byte	$00, $f6, $ef, $f3, $fa, $fd, $03, $02, $02, $07, $0c, $0e, $09, $02, $01, $07
2ae05     06 03 FC FA 
2ae09     FA FC 02 09 
2ae0d     06 02 00 06 
2ae11     0C 0C 09 06 | 	byte	$06, $03, $fc, $fa, $fa, $fc, $02, $09, $06, $02, $00, $06, $0c, $0c, $09, $06
2ae15     01 00 01 FD 
2ae19     FD F9 F5 FC 
2ae1d     FD 02 03 00 
2ae21     02 02 07 0E | 	byte	$01, $00, $01, $fd, $fd, $f9, $f5, $fc, $fd, $02, $03, $00, $02, $02, $07, $0e
2ae25     09 03 00 FA 
2ae29     FD 00 00 00 
2ae2d     F9 FC FD 03 
2ae31     0C 09 09 09 | 	byte	$09, $03, $00, $fa, $fd, $00, $00, $00, $f9, $fc, $fd, $03, $0c, $09, $09, $09
2ae35     09 0C 0E 01 
2ae39     FC FC 01 06 
2ae3d     02 01 00 FC 
2ae41     FD 07 0E 0C | 	byte	$09, $0c, $0e, $01, $fc, $fc, $01, $06, $02, $01, $00, $fc, $fd, $07, $0e, $0c
2ae45     06 07 09 09 
2ae49     0A 06 07 03 
2ae4d     FD 00 02 FC 
2ae51     F5 EF F6 FC | 	byte	$06, $07, $09, $09, $0a, $06, $07, $03, $fd, $00, $02, $fc, $f5, $ef, $f6, $fc
2ae55     01 07 07 06 
2ae59     06 09 0E 09 
2ae5d     02 FD FC 00 
2ae61     06 06 01 FC | 	byte	$01, $07, $07, $06, $06, $09, $0e, $09, $02, $fd, $fc, $00, $06, $06, $01, $fc
2ae65     FC 01 06 03 
2ae69     02 00 FD 03 
2ae6d     09 07 06 00 
2ae71     FD FC 02 07 | 	byte	$fc, $01, $06, $03, $02, $00, $fd, $03, $09, $07, $06, $00, $fd, $fc, $02, $07
2ae75     03 FD FA FC 
2ae79     02 0A 0C 09 
2ae7d     01 FD 01 06 
2ae81     06 01 F9 F9 | 	byte	$03, $fd, $fa, $fc, $02, $0a, $0c, $09, $01, $fd, $01, $06, $06, $01, $f9, $f9
2ae85     FD 03 01 01 
2ae89     02 00 FC 02 
2ae8d     09 09 02 FD 
2ae91     FC FC FD 01 | 	byte	$fd, $03, $01, $01, $02, $00, $fc, $02, $09, $09, $02, $fd, $fc, $fc, $fd, $01
2ae95     00 FD 01 FD 
2ae99     FD 02 09 0A 
2ae9d     09 06 03 01 
2aea1     01 01 02 01 | 	byte	$00, $fd, $01, $fd, $fd, $02, $09, $0a, $09, $06, $03, $01, $01, $01, $02, $01
2aea5     FD F9 F9 FC 
2aea9     03 0C 09 06 
2aead     06 09 06 06 
2aeb1     09 03 FD F9 | 	byte	$fd, $f9, $f9, $fc, $03, $0c, $09, $06, $06, $09, $06, $06, $09, $03, $fd, $f9
2aeb5     FA FC FD F6 
2aeb9     F9 FA FD 02 
2aebd     03 02 02 06 
2aec1     09 09 07 03 | 	byte	$fa, $fc, $fd, $f6, $f9, $fa, $fd, $02, $03, $02, $02, $06, $09, $09, $07, $03
2aec5     01 01 02 06 
2aec9     02 00 FD FA 
2aecd     FD 07 09 09 
2aed1     07 0A 0E 0F | 	byte	$01, $01, $02, $06, $02, $00, $fd, $fa, $fd, $07, $09, $09, $07, $0a, $0e, $0f
2aed5     0C 09 01 FD 
2aed9     01 06 00 FC 
2aedd     FA FD FD 02 
2aee1     06 02 00 00 | 	byte	$0c, $09, $01, $fd, $01, $06, $00, $fc, $fa, $fd, $fd, $02, $06, $02, $00, $00
2aee5     06 0A 09 03 
2aee9     FC F5 FA 01 
2aeed     02 00 FC F9 
2aef1     FA FD 09 0C | 	byte	$06, $0a, $09, $03, $fc, $f5, $fa, $01, $02, $00, $fc, $f9, $fa, $fd, $09, $0c
2aef5     0C 06 03 0A 
2aef9     0C 09 00 FC 
2aefd     FC FD 02 02 
2af01     01 FC FC FD | 	byte	$0c, $06, $03, $0a, $0c, $09, $00, $fc, $fc, $fd, $02, $02, $01, $fc, $fc, $fd
2af05     03 07 0C 09 
2af09     01 01 07 09 
2af0d     06 01 FD FD 
2af11     FC FA FC FC | 	byte	$03, $07, $0c, $09, $01, $01, $07, $09, $06, $01, $fd, $fd, $fc, $fa, $fc, $fc
2af15     FC FA FC FC 
2af19     03 0A 07 06 
2af1d     06 09 06 02 
2af21     01 FD 01 01 | 	byte	$fc, $fa, $fc, $fc, $03, $0a, $07, $06, $06, $09, $06, $02, $01, $fd, $01, $01
2af25     01 02 02 02 
2af29     01 02 06 02 
2af2d     06 03 02 03 
2af31     03 03 02 00 | 	byte	$01, $02, $02, $02, $01, $02, $06, $02, $06, $03, $02, $03, $03, $03, $02, $00
2af35     01 FD FD 01 
2af39     01 01 00 FD 
2af3d     07 06 06 06 
2af41     06 06 03 00 | 	byte	$01, $fd, $fd, $01, $01, $01, $00, $fd, $07, $06, $06, $06, $06, $06, $03, $00
2af45     FD FA FA FD 
2af49     00 FC FA 00 
2af4d     06 07 02 01 
2af51     03 03 02 00 | 	byte	$fd, $fa, $fa, $fd, $00, $fc, $fa, $00, $06, $07, $02, $01, $03, $03, $02, $00
2af55     01 00 FD 01 
2af59     00 FC FC FD 
2af5d     00 01 06 07 
2af61     01 FD FD 06 | 	byte	$01, $00, $fd, $01, $00, $fc, $fc, $fd, $00, $01, $06, $07, $01, $fd, $fd, $06
2af65     09 03 02 02 
2af69     06 07 07 03 
2af6d     01 02 01 06 
2af71     06 06 02 03 | 	byte	$09, $03, $02, $02, $06, $07, $07, $03, $01, $02, $01, $06, $06, $06, $02, $03
2af75     02 02 03 03 
2af79     01 01 01 01 
2af7d     00 00 FD 00 
2af81     03 06 07 06 | 	byte	$02, $02, $03, $03, $01, $01, $01, $01, $00, $00, $fd, $00, $03, $06, $07, $06
2af85     03 06 06 03 
2af89     03 09 09 07 
2af8d     03 03 03 02 
2af91     02 00 FD FD | 	byte	$03, $06, $06, $03, $03, $09, $09, $07, $03, $03, $03, $02, $02, $00, $fd, $fd
2af95     01 02 01 02 
2af99     03 06 02 02 
2af9d     03 02 02 00 
2afa1     00 01 02 06 | 	byte	$01, $02, $01, $02, $03, $06, $02, $02, $03, $02, $02, $00, $00, $01, $02, $06
2afa5     06 03 00 01 
2afa9     02 06 02 FC 
2afad     FC 06 0A 09 
2afb1     07 09 06 03 | 	byte	$06, $03, $00, $01, $02, $06, $02, $fc, $fc, $06, $0a, $09, $07, $09, $06, $03
2afb5     02 02 FD FC 
2afb9     FC FD 02 02 
2afbd     01 01 02 02 
2afc1     01 02 02 00 | 	byte	$02, $02, $fd, $fc, $fc, $fd, $02, $02, $01, $01, $02, $02, $01, $02, $02, $00
2afc5     00 01 01 02 
2afc9     FD 00 01 FD 
2afcd     FC FD FC FA 
2afd1     F6 FD 02 03 | 	byte	$00, $01, $01, $02, $fd, $00, $01, $fd, $fc, $fd, $fc, $fa, $f6, $fd, $02, $03
2afd5     03 00 02 06 
2afd9     07 06 01 01 
2afdd     03 06 07 03 
2afe1     02 06 06 06 | 	byte	$03, $00, $02, $06, $07, $06, $01, $01, $03, $06, $07, $03, $02, $06, $06, $06
2afe5     06 06 03 02 
2afe9     01 06 07 03 
2afed     01 FD FD 01 
2aff1     02 00 FD FC | 	byte	$06, $06, $03, $02, $01, $06, $07, $03, $01, $fd, $fd, $01, $02, $00, $fd, $fc
2aff5     FC FD F9 FD 
2aff9     02 01 03 06 
2affd     07 03 02 06 
2b001     03 01 00 01 | 	byte	$fc, $fd, $f9, $fd, $02, $01, $03, $06, $07, $03, $02, $06, $03, $01, $00, $01
2b005     00 01 01 01 
2b009     FD 02 03 03 
2b00d     06 06 02 02 
2b011     02 02 02 02 | 	byte	$00, $01, $01, $01, $fd, $02, $03, $03, $06, $06, $02, $02, $02, $02, $02, $02
2b015     06 06 03 03 
2b019     02 00 FC 01 
2b01d     06 03 06 03 
2b021     03 06 03 02 | 	byte	$06, $06, $03, $03, $02, $00, $fc, $01, $06, $03, $06, $03, $03, $06, $03, $02
2b025     02 01 FD 00 
2b029     03 03 03 02 
2b02d     00 03 07 0C 
2b031     06 02 01 03 | 	byte	$02, $01, $fd, $00, $03, $03, $03, $02, $00, $03, $07, $0c, $06, $02, $01, $03
2b035     06 06 06 02 
2b039     02 03 07 07 
2b03d     03 00 FD 00 
2b041     01 01 03 03 | 	byte	$06, $06, $06, $02, $02, $03, $07, $07, $03, $00, $fd, $00, $01, $01, $03, $03
2b045     03 02 02 02 
2b049     01 01 02 03 
2b04d     FD 00 02 02 
2b051     01 00 02 03 | 	byte	$03, $02, $02, $02, $01, $01, $02, $03, $fd, $00, $02, $02, $01, $00, $02, $03
2b055     03 01 01 03 
2b059     02 03 01 00 
2b05d     01 01 FD 00 
2b061     06 06 03 02 | 	byte	$03, $01, $01, $03, $02, $03, $01, $00, $01, $01, $fd, $00, $06, $06, $03, $02
2b065     02 00 FD 01 
2b069     06 02 02 06 
2b06d     09 09 02 01 
2b071     01 02 02 02 | 	byte	$02, $00, $fd, $01, $06, $02, $02, $06, $09, $09, $02, $01, $01, $02, $02, $02
2b075     03 02 02 03 
2b079     02 01 00 02 
2b07d     00 FD FC 01 
2b081     01 00 01 FD | 	byte	$03, $02, $02, $03, $02, $01, $00, $02, $00, $fd, $fc, $01, $01, $00, $01, $fd
2b085     01 02 02 06 
2b089     02 06 02 FC 
2b08d     FD 02 02 02 
2b091     01 01 02 00 | 	byte	$01, $02, $02, $06, $02, $06, $02, $fc, $fd, $02, $02, $02, $01, $01, $02, $00
2b095     02 01 02 03 
2b099     02 06 03 00 
2b09d     00 FD 02 03 
2b0a1     02 02 01 01 | 	byte	$02, $01, $02, $03, $02, $06, $03, $00, $00, $fd, $02, $03, $02, $02, $01, $01
2b0a5     02 00 01 01 
2b0a9     00 00 06 07 
2b0ad     02 01 FD FD 
2b0b1     FD 02 06 06 | 	byte	$02, $00, $01, $01, $00, $00, $06, $07, $02, $01, $fd, $fd, $fd, $02, $06, $06
2b0b5     03 06 03 02 
2b0b9     01 03 06 06 
2b0bd     03 03 06 06 
2b0c1     02 00 06 06 | 	byte	$03, $06, $03, $02, $01, $03, $06, $06, $03, $03, $06, $06, $02, $00, $06, $06
2b0c5     02 03 01 03 
2b0c9     03 FD 02 02 
2b0cd     02 02 03 02 
2b0d1     02 03 06 06 | 	byte	$02, $03, $01, $03, $03, $fd, $02, $02, $02, $02, $03, $02, $02, $03, $06, $06
2b0d5     02 06 FC FA 
2b0d9     02 03 06 03 
2b0dd     00 03 02 07 
2b0e1     07 06 07 02 | 	byte	$02, $06, $fc, $fa, $02, $03, $06, $03, $00, $03, $02, $07, $07, $06, $07, $02
2b0e5     01 02 01 00 
2b0e9     FD FC 01 06 
2b0ed     02 02 02 06 
2b0f1     00 01 03 03 | 	byte	$01, $02, $01, $00, $fd, $fc, $01, $06, $02, $02, $02, $06, $00, $01, $03, $03
2b0f5     06 03 00 02 
2b0f9     06 03 FD FD 
2b0fd     FD 01 07 09 
2b101     07 02 01 02 | 	byte	$06, $03, $00, $02, $06, $03, $fd, $fd, $fd, $01, $07, $09, $07, $02, $01, $02
2b105     00 FD FC FD 
2b109     00 01 06 02 
2b10d     FD FC 01 01 
2b111     02 03 06 06 | 	byte	$00, $fd, $fc, $fd, $00, $01, $06, $02, $fd, $fc, $01, $01, $02, $03, $06, $06
2b115     06 07 06 06 
2b119     02 06 06 06 
2b11d     03 03 02 00 
2b121     00 FC 00 01 | 	byte	$06, $07, $06, $06, $02, $06, $06, $06, $03, $03, $02, $00, $00, $fc, $00, $01
2b125     06 06 02 01 
2b129     00 FC FC FC 
2b12d     F9 FC FA FA 
2b131     FC FD FD 00 | 	byte	$06, $06, $02, $01, $00, $fc, $fc, $fc, $f9, $fc, $fa, $fa, $fc, $fd, $fd, $00
2b135     00 06 07 03 
2b139     02 02 03 02 
2b13d     01 06 09 07 
2b141     02 02 02 02 | 	byte	$00, $06, $07, $03, $02, $02, $03, $02, $01, $06, $09, $07, $02, $02, $02, $02
2b145     00 FD 03 06 
2b149     07 06 03 07 
2b14d     07 06 02 FD 
2b151     FD 02 01 FD | 	byte	$00, $fd, $03, $06, $07, $06, $03, $07, $07, $06, $02, $fd, $fd, $02, $01, $fd
2b155     FC FC 00 01 
2b159     02 02 01 01 
2b15d     03 02 01 03 
2b161     02 02 01 02 | 	byte	$fc, $fc, $00, $01, $02, $02, $01, $01, $03, $02, $01, $03, $02, $02, $01, $02
2b165     06 06 06 06 
2b169     03 02 03 01 
2b16d     02 03 02 06 
2b171     07 0C 0C 07 | 	byte	$06, $06, $06, $06, $03, $02, $03, $01, $02, $03, $02, $06, $07, $0c, $0c, $07
2b175     03 01 01 07 
2b179     09 06 03 FD 
2b17d     FD FD 02 06 
2b181     00 FD FD FD | 	byte	$03, $01, $01, $07, $09, $06, $03, $fd, $fd, $fd, $02, $06, $00, $fd, $fd, $fd
2b185     02 03 03 02 
2b189     FD FD 01 01 
2b18d     00 FD FD FD 
2b191     FA FD 00 03 | 	byte	$02, $03, $03, $02, $fd, $fd, $01, $01, $00, $fd, $fd, $fd, $fa, $fd, $00, $03
2b195     06 09 06 07 
2b199     03 02 00 FD 
2b19d     FD 01 01 02 
2b1a1     01 02 06 06 | 	byte	$06, $09, $06, $07, $03, $02, $00, $fd, $fd, $01, $01, $02, $01, $02, $06, $06
2b1a5     06 06 02 02 
2b1a9     07 06 03 FD 
2b1ad     FD 03 07 01 
2b1b1     01 06 06 02 | 	byte	$06, $06, $02, $02, $07, $06, $03, $fd, $fd, $03, $07, $01, $01, $06, $06, $02
2b1b5     07 07 02 01 
2b1b9     01 FD 01 03 
2b1bd     07 06 02 02 
2b1c1     02 01 02 03 | 	byte	$07, $07, $02, $01, $01, $fd, $01, $03, $07, $06, $02, $02, $02, $01, $02, $03
2b1c5     01 FC F9 FD 
2b1c9     01 00 FD FA 
2b1cd     01 06 00 FD 
2b1d1     F9 F6 FD FC | 	byte	$01, $fc, $f9, $fd, $01, $00, $fd, $fa, $01, $06, $00, $fd, $f9, $f6, $fd, $fc
2b1d5     FD 03 FD 02 
2b1d9     06 FA FC 01 
2b1dd     02 07 06 06 
2b1e1     06 01 03 07 | 	byte	$fd, $03, $fd, $02, $06, $fa, $fc, $01, $02, $07, $06, $06, $06, $01, $03, $07
2b1e5     02 07 03 FD 
2b1e9     F9 FD 03 06 
2b1ed     00 02 01 03 
2b1f1     07 07 01 02 | 	byte	$02, $07, $03, $fd, $f9, $fd, $03, $06, $00, $02, $01, $03, $07, $07, $01, $02
2b1f5     09 06 07 0A 
2b1f9     09 02 FA FD 
2b1fd     01 03 02 FD 
2b201     F5 F4 FA FD | 	byte	$09, $06, $07, $0a, $09, $02, $fa, $fd, $01, $03, $02, $fd, $f5, $f4, $fa, $fd
2b205     FD 00 07 06 
2b209     03 07 09 09 
2b20d     0F 0C 06 00 
2b211     02 07 0F 0E | 	byte	$fd, $00, $07, $06, $03, $07, $09, $09, $0f, $0c, $06, $00, $02, $07, $0f, $0e
2b215     0C 07 09 0E 
2b219     0F 1C 0F F3 
2b21d     E2 E0 E7 ED 
2b221     E6 EC EF EC | 	byte	$0c, $07, $09, $0e, $0f, $1c, $0f, $f3, $e2, $e0, $e7, $ed, $e6, $ec, $ef, $ec
2b225     F6 06 0C 17 
2b229     1B 1C 19 17 
2b22d     1D 1C 09 FD 
2b231     F4 F0 F3 F0 | 	byte	$f6, $06, $0c, $17, $1b, $1c, $19, $17, $1d, $1c, $09, $fd, $f4, $f0, $f3, $f0
2b235     F0 F4 F4 FA 
2b239     02 17 3E 5D 
2b23d     5D 42 06 D9 
2b241     CE C9 CC B2 | 	byte	$f0, $f4, $f4, $fa, $02, $17, $3e, $5d, $5d, $42, $06, $d9, $ce, $c9, $cc, $b2
2b245     8F 95 AD C9 
2b249     F4 0F 2A 37 
2b24d     44 65 7F 7B 
2b251     5D 33 0F F5 | 	byte	$8f, $95, $ad, $c9, $f4, $0f, $2a, $37, $44, $65, $7f, $7b, $5d, $33, $0f, $f5
2b255     D9 BB A5 99 
2b259     A6 BB D0 E9 
2b25d     FD 0E 20 48 
2b261     6F 6B 5D 72 | 	byte	$d9, $bb, $a5, $99, $a6, $bb, $d0, $e9, $fd, $0e, $20, $48, $6f, $6b, $5d, $72
2b265     7F 54 E6 A1 
2b269     9C 8B 80 80 
2b26d     80 80 86 C3 
2b271     17 48 6B 7F | 	byte	$7f, $54, $e6, $a1, $9c, $8b, $80, $80, $80, $80, $86, $c3, $17, $48, $6b, $7f
2b275     7F 7F 7F 7F 
2b279     6E 19 C5 B2 
2b27d     98 80 80 80 
2b281     95 AF E3 17 | 	byte	$7f, $7f, $7f, $7f, $6e, $19, $c5, $b2, $98, $80, $80, $80, $95, $af, $e3, $17
2b285     3B 4B 5E 72 
2b289     7F 7B 70 7F 
2b28d     67 00 B8 8C 
2b291     8B 80 80 80 | 	byte	$3b, $4b, $5e, $72, $7f, $7b, $70, $7f, $67, $00, $b8, $8c, $8b, $80, $80, $80
2b295     80 80 95 FD 
2b299     58 77 7F 7F 
2b29d     7F 7F 7F 61 
2b2a1     33 CE A2 98 | 	byte	$80, $80, $95, $fd, $58, $77, $7f, $7f, $7f, $7f, $7f, $61, $33, $ce, $a2, $98
2b2a5     87 80 80 80 
2b2a9     9C C9 0A 44 
2b2ad     56 61 61 7C 
2b2b1     7F 7F 56 6B | 	byte	$87, $80, $80, $80, $9c, $c9, $0a, $44, $56, $61, $61, $7c, $7f, $7f, $56, $6b
2b2b5     74 00 AB 80 
2b2b9     98 80 80 80 
2b2bd     80 80 95 FD 
2b2c1     76 7F 7F 7F | 	byte	$74, $00, $ab, $80, $98, $80, $80, $80, $80, $80, $95, $fd, $76, $7f, $7f, $7f
2b2c5     7F 7F 6A 5D 
2b2c9     33 BF A0 98 
2b2cd     87 80 80 80 
2b2d1     A1 C9 17 58 | 	byte	$7f, $7f, $6a, $5d, $33, $bf, $a0, $98, $87, $80, $80, $80, $a1, $c9, $17, $58
2b2d5     65 6A 67 78 
2b2d9     7F 67 58 61 
2b2dd     4D 00 B8 91 
2b2e1     98 80 80 80 | 	byte	$65, $6a, $67, $78, $7f, $67, $58, $61, $4d, $00, $b8, $91, $98, $80, $80, $80
2b2e5     80 80 8F F6 
2b2e9     65 7F 7F 7F 
2b2ed     7F 7F 7F 54 
2b2f1     2D CC 9E 99 | 	byte	$80, $80, $8f, $f6, $65, $7f, $7f, $7f, $7f, $7f, $7f, $54, $2d, $cc, $9e, $99
2b2f5     80 80 80 80 
2b2f9     80          | 	byte	$80[5]
2b2fa     C3 17 5C 65 
2b2fe     6F 72 7C 7F 
2b302     7B 5A 33 31 
2b306     3C E6 A7 80 | 	byte	$c3, $17, $5c, $65, $6f, $72, $7c, $7f, $7b, $5a, $33, $31, $3c, $e6, $a7, $80
2b30a     80 80 80 80 
2b30e     80 80       | 	byte	$80[6]
2b310     95 17 7F 7F 
2b314     7F 7F 7F 7F 
2b318     67 47 0C B2 
2b31c     87 80 88 80 | 	byte	$95, $17, $7f, $7f, $7f, $7f, $7f, $7f, $67, $47, $0c, $b2, $87, $80, $88, $80
2b320     80 80 95 DC 
2b324     31 76 7F 77 
2b328     69 77 7B 69 
2b32c     4D 13 0A 36 | 	byte	$80, $80, $95, $dc, $31, $76, $7f, $77, $69, $77, $7b, $69, $4d, $13, $0a, $36
2b330     00 B2 80 80 
2b334     80 80 80 95 
2b338     98 A2 FD 7F 
2b33c     7F 7F 7F 7F | 	byte	$00, $b2, $80, $80, $80, $80, $80, $95, $98, $a2, $fd, $7f, $7f, $7f, $7f, $7f
2b340     7B 54 40 26 
2b344     CC 80 80 95 
2b348     8B 80 80 AD 
2b34c     F0 3E 7F 7F | 	byte	$7b, $54, $40, $26, $cc, $80, $80, $95, $8b, $80, $80, $ad, $f0, $3e, $7f, $7f
2b350     67 50 56 6A 
2b354     67 3A 06 E9 
2b358     31 33 CC 80 
2b35c     80 82 93 8F | 	byte	$67, $50, $56, $6a, $67, $3a, $06, $e9, $31, $33, $cc, $80, $80, $82, $93, $8f
2b360     A1 9E 8F E3 
2b364     78 7F 7F 7F 
2b368     6E 5A 5A 62 
2b36c     5A 00 84 93 | 	byte	$a1, $9e, $8f, $e3, $78, $7f, $7f, $7f, $6e, $5a, $5a, $62, $5a, $00, $84, $93
2b370     9A 8C 80 82 
2b374     A2 D0 21 6F 
2b378     74 5A 48 56 
2b37c     69 67 54 19 | 	byte	$9a, $8c, $80, $82, $a2, $d0, $21, $6f, $74, $5a, $48, $56, $69, $67, $54, $19
2b380     BF E3 58 33 
2b384     BF 80 80 95 
2b388     AD B6 B9 98 
2b38c     8F FD 7F 7F | 	byte	$bf, $e3, $58, $33, $bf, $80, $80, $95, $ad, $b6, $b9, $98, $8f, $fd, $7f, $7f
2b390     7F 67 40 48 
2b394     5E 74 67 D9 
2b398     80 93 A7 A6 
2b39c     98 95 AF D6 | 	byte	$7f, $67, $40, $48, $5e, $74, $67, $d9, $80, $93, $a7, $a6, $98, $95, $af, $d6
2b3a0     24 6E 67 43 
2b3a4     35 43 63 62 
2b3a8     33 00 BF E0 
2b3ac     3E 54 00 80 | 	byte	$24, $6e, $67, $43, $35, $43, $63, $62, $33, $00, $bf, $e0, $3e, $54, $00, $80
2b3b0     80 80 BC D9 
2b3b4     E2 B9 A7 E3 
2b3b8     44 7F 7F 42 
2b3bc     20 2A 51 76 | 	byte	$80, $80, $bc, $d9, $e2, $b9, $a7, $e3, $44, $7f, $7f, $42, $20, $2a, $51, $76
2b3c0     67 06 AB 9A 
2b3c4     BC D9 D3 BF 
2b3c8     B6 C9 FD 36 
2b3cc     48 33 13 17 | 	byte	$67, $06, $ab, $9a, $bc, $d9, $d3, $bf, $b6, $c9, $fd, $36, $48, $33, $13, $17
2b3d0     3B 4D 40 13 
2b3d4     E6 DA FD 3E 
2b3d8     3A E6 9A 95 
2b3dc     B9 DB DF D2 | 	byte	$3b, $4d, $40, $13, $e6, $da, $fd, $3e, $3a, $e6, $9a, $95, $b9, $db, $df, $d2
2b3e0     BF B6 ED 24 
2b3e4     3E 26 02 06 
2b3e8     2E 58 70 54 
2b3ec     0C E6 E0 FD | 	byte	$bf, $b6, $ed, $24, $3e, $26, $02, $06, $2e, $58, $70, $54, $0c, $e6, $e0, $fd
2b3f0     14 00 DA BF 
2b3f4     C9 FC 13 19 
2b3f8     09 F9 02 17 
2b3fc     31 40 20 F9 | 	byte	$14, $00, $da, $bf, $c9, $fc, $13, $19, $09, $f9, $02, $17, $31, $40, $20, $f9
2b400     F6 03 1C 33 
2b404     0C DB B9 C6 
2b408     EF F3 D5 C1 
2b40c     BB DC FD 17 | 	byte	$f6, $03, $1c, $33, $0c, $db, $b9, $c6, $ef, $f3, $d5, $c1, $bb, $dc, $fd, $17
2b410     13 F9 F6 1D 
2b414     3E 4B 40 21 
2b418     0F 0F 21 2E 
2b41c     0C E8 D6 DA | 	byte	$13, $f9, $f6, $1d, $3e, $4b, $40, $21, $0f, $0f, $21, $2e, $0c, $e8, $d6, $da
2b420     F0 FC FA EC 
2b424     DF EF 0A 1D 
2b428     20 13 10 19 
2b42c     17 16 06 FD | 	byte	$f0, $fc, $fa, $ec, $df, $ef, $0a, $1d, $20, $13, $10, $19, $17, $16, $06, $fd
2b430     01 F6 F0 EF 
2b434     E7 E0 D9 E3 
2b438     FA F5 ED ED 
2b43c     F5 03 10 21 | 	byte	$01, $f6, $f0, $ef, $e7, $e0, $d9, $e3, $fa, $f5, $ed, $ed, $f5, $03, $10, $21
2b440     28 14 16 28 
2b444     28 19 06 07 
2b448     06 F9 F9 F5 
2b44c     E6 DF E6 FA | 	byte	$28, $14, $16, $28, $28, $19, $06, $07, $06, $f9, $f9, $f5, $e6, $df, $e6, $fa
2b450     06 0A 14 13 
2b454     07 0A 17 20 
2b458     19 0C 02 F6 
2b45c     F3 F4 F4 EF | 	byte	$06, $0a, $14, $13, $07, $0a, $17, $20, $19, $0c, $02, $f6, $f3, $f4, $f4, $ef
2b460     E8 F0 FA F3 
2b464     F0 F6 01 09 
2b468     06 06 0C 06 
2b46c     03 06 09 02 | 	byte	$e8, $f0, $fa, $f3, $f0, $f6, $01, $09, $06, $06, $0c, $06, $03, $06, $09, $02
2b470     FC FA 00 02 
2b474     03 01 00 00 
2b478     FC FC 02 09 
2b47c     0F 13 0A 06 | 	byte	$fc, $fa, $00, $02, $03, $01, $00, $00, $fc, $fc, $02, $09, $0f, $13, $0a, $06
2b480     06 10 14 0C 
2b484     02 F9 F3 F5 
2b488     F6 F6 F3 ED 
2b48c     F4 F9 FA 03 | 	byte	$06, $10, $14, $0c, $02, $f9, $f3, $f5, $f6, $f6, $f3, $ed, $f4, $f9, $fa, $03
2b490     10 14 0F 09 
2b494     0E 0E 03 00 
2b498     03 07 07 FC 
2b49c     F4 F3 EF F3 | 	byte	$10, $14, $0f, $09, $0e, $0e, $03, $00, $03, $07, $07, $fc, $f4, $f3, $ef, $f3
2b4a0     F9 02 0A 06 
2b4a4     03 09 10 1C 
2b4a8     20 16 0E 06 
2b4ac     06 0C 0A 02 | 	byte	$f9, $02, $0a, $06, $03, $09, $10, $1c, $20, $16, $0e, $06, $06, $0c, $0a, $02
2b4b0     FC F5 F6 F6 
2b4b4     FA 00 F9 F5 
2b4b8     F5 01 0C 0E 
2b4bc     0C 09 09 0A | 	byte	$fc, $f5, $f6, $f6, $fa, $00, $f9, $f5, $f5, $01, $0c, $0e, $0c, $09, $09, $0a
2b4c0     09 07 02 FD 
2b4c4     FA F9 F9 F6 
2b4c8     EF EF FA 02 
2b4cc     07 03 01 00 | 	byte	$09, $07, $02, $fd, $fa, $f9, $f9, $f6, $ef, $ef, $fa, $02, $07, $03, $01, $00
2b4d0     02 07 0A 06 
2b4d4     09 09 07 0A 
2b4d8     0A 06 00 F6 
2b4dc     F5 FA FD 00 | 	byte	$02, $07, $0a, $06, $09, $09, $07, $0a, $0a, $06, $00, $f6, $f5, $fa, $fd, $00
2b4e0     F6 F5 FD 06 
2b4e4     0C 0F 13 13 
2b4e8     0F 0C 0C 03 
2b4ec     03 06 06 03 | 	byte	$f6, $f5, $fd, $06, $0c, $0f, $13, $13, $0f, $0c, $0c, $03, $03, $06, $06, $03
2b4f0     02 FC F4 F4 
2b4f4     FA 01 01 FC 
2b4f8     FC FC FD 06 
2b4fc     09 07 03 00 | 	byte	$02, $fc, $f4, $f4, $fa, $01, $01, $fc, $fc, $fc, $fd, $06, $09, $07, $03, $00
2b500     06 09 07 00 
2b504     F5 F3 F4 F5 
2b508     FC 01 FD FD 
2b50c     02 06 06 02 | 	byte	$06, $09, $07, $00, $f5, $f3, $f4, $f5, $fc, $01, $fd, $fd, $02, $06, $06, $02
2b510     00 02 07 07 
2b514     09 06 01 02 
2b518     03 07 06 01 
2b51c     00 FD FD 09 | 	byte	$00, $02, $07, $07, $09, $06, $01, $02, $03, $07, $06, $01, $00, $fd, $fd, $09
2b520     0C 06 00 FD 
2b524     01 02 02 00 
2b528     00 FC FD 06 
2b52c     0C 06 00 00 | 	byte	$0c, $06, $00, $fd, $01, $02, $02, $00, $00, $fc, $fd, $06, $0c, $06, $00, $00
2b530     02 02 06 06 
2b534     00 FA F9 FD 
2b538     06 02 03 01 
2b53c     FD 02 0E 0E | 	byte	$02, $02, $06, $06, $00, $fa, $f9, $fd, $06, $02, $03, $01, $fd, $02, $0e, $0e
2b540     06 02 03 09 | 	byte	$06, $02, $03, $09
2b544                 | 	alignl
2b544                 | _hng030rm_spin2_dat_
2b544     00 00 00 00 
2b548     00 00 00 00 
2b54c     00 00 00 00 
2b550     00 00 00 00 
2b554     00 00 00    | vga_font       file "vgafont.def"
2b557     7E 81 A5 81 
2b55b     81 BD 99 81 
2b55f     81 7E 00 00 
2b563     00 00 00 00 | 	byte	$7e, $81, $a5, $81, $81, $bd, $99, $81, $81, $7e, $00, $00, $00, $00, $00, $00
2b567     7E FF DB FF 
2b56b     FF C3 E7 FF 
2b56f     FF 7E 00 00 
2b573     00 00 00 00 | 	byte	$7e, $ff, $db, $ff, $ff, $c3, $e7, $ff, $ff, $7e, $00, $00, $00, $00, $00, $00
2b577     00 36 7F 7F 
2b57b     7F 7F 3E 1C 
2b57f     08 00 00 00 
2b583     00 00 00 00 | 	byte	$00, $36, $7f, $7f, $7f, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00
2b587     00 08 1C 3E 
2b58b     7F 3E 1C 08 
2b58f     00 00 00 00 
2b593     00 00 00 00 | 	byte	$00, $08, $1c, $3e, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00
2b597     18 3C 3C E7 
2b59b     E7 E7 18 18 
2b59f     3C 00 00 00 
2b5a3     00 00 00 00 | 	byte	$18, $3c, $3c, $e7, $e7, $e7, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
2b5a7     18 3C 7E FF 
2b5ab     FF 7E 18 18 
2b5af     3C 00 00 00 
2b5b3     00 00 00 00 | 	byte	$18, $3c, $7e, $ff, $ff, $7e, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
2b5b7     00 00 00 18 
2b5bb     3C 3C 18 00 
2b5bf     00 00 00 00 
2b5c3     00 FF FF FF | 	byte	$00, $00, $00, $18, $3c, $3c, $18, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
2b5c7     FF FF FF E7 
2b5cb     C3 C3 E7 FF 
2b5cf     FF FF FF FF 
2b5d3     FF 00 00 00 | 	byte	$ff, $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
2b5d7     00 00 3C 66 
2b5db     42 42 66 3C 
2b5df     00 00 00 00 
2b5e3     00 FF FF FF | 	byte	$00, $00, $3c, $66, $42, $42, $66, $3c, $00, $00, $00, $00, $00, $ff, $ff, $ff
2b5e7     FF FF C3 99 
2b5eb     BD BD 99 C3 
2b5ef     FF FF FF FF 
2b5f3     FF 00 00 00 | 	byte	$ff, $ff, $c3, $99, $bd, $bd, $99, $c3, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
2b5f7     78 70 58 4C 
2b5fb     1E 33 33 33 
2b5ff     33 1E 00 00 
2b603     00 00 00 00 | 	byte	$78, $70, $58, $4c, $1e, $33, $33, $33, $33, $1e, $00, $00, $00, $00, $00, $00
2b607     3C 66 66 66 
2b60b     66 3C 18 7E 
2b60f     18 18 00 00 
2b613     00 00 00 00 | 	byte	$3c, $66, $66, $66, $66, $3c, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00
2b617     FC CC FC 0C 
2b61b     0C 0C 0C 0E 
2b61f     0F 07 00 00 
2b623     00 00 00 00 | 	byte	$fc, $cc, $fc, $0c, $0c, $0c, $0c, $0e, $0f, $07, $00, $00, $00, $00, $00, $00
2b627     FE C6 FE C6 
2b62b     C6 C6 C6 E6 
2b62f     E7 67 03 00 
2b633     00 00 00 00 | 	byte	$fe, $c6, $fe, $c6, $c6, $c6, $c6, $e6, $e7, $67, $03, $00, $00, $00, $00, $00
2b637     18 18 DB 3C 
2b63b     E7 3C DB 18 
2b63f     18 00 00 00 
2b643     00 00 00 01 | 	byte	$18, $18, $db, $3c, $e7, $3c, $db, $18, $18, $00, $00, $00, $00, $00, $00, $01
2b647     03 07 0F 1F 
2b64b     7F 1F 0F 07 
2b64f     03 01 00 00 
2b653     00 00 00 40 | 	byte	$03, $07, $0f, $1f, $7f, $1f, $0f, $07, $03, $01, $00, $00, $00, $00, $00, $40
2b657     60 70 78 7C 
2b65b     7F 7C 78 70 
2b65f     60 40 00 00 
2b663     00 00 00 00 | 	byte	$60, $70, $78, $7c, $7f, $7c, $78, $70, $60, $40, $00, $00, $00, $00, $00, $00
2b667     18 3C 7E 18 
2b66b     18 18 7E 3C 
2b66f     18 00 00 00 
2b673     00 00 00 00 | 	byte	$18, $3c, $7e, $18, $18, $18, $7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00
2b677     66 66 66 66 
2b67b     66 66 66    | 	byte	$66[7]
2b67e     00 66 66 00 
2b682     00 00 00 00 
2b686     00 FE DB DB 
2b68a     DB DE D8 D8 | 	byte	$00, $66, $66, $00, $00, $00, $00, $00, $00, $fe, $db, $db, $db, $de, $d8, $d8
2b68e     D8 D8 D8 00 
2b692     00 00 00 3E 
2b696     63 06 1C 36 
2b69a     63 63 36 1C | 	byte	$d8, $d8, $d8, $00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c
2b69e     30 63 3E 00 
2b6a2     00 00 00 00 
2b6a6     00 00 00 00 
2b6aa     00 00 00 7F | 	byte	$30, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2b6ae     7F 7F 7F 00 
2b6b2     00 00 00 00 
2b6b6     00 18 3C 7E 
2b6ba     18 18 18 7E | 	byte	$7f, $7f, $7f, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $7e
2b6be     3C 18 7E 00 
2b6c2     00 00 00 00 
2b6c6     00 18 3C 7E 
2b6ca     18 18 18 18 | 	byte	$3c, $18, $7e, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $18
2b6ce     18 18 18 00 
2b6d2     00 00 00 00 
2b6d6     00 18 18 18 
2b6da     18 18 18 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2b6de     7E 3C 18 00 
2b6e2     00 00 00 00 
2b6e6     00 00 00 18 
2b6ea     30 7F 30 18 | 	byte	$7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $18, $30, $7f, $30, $18
2b6ee     00 00 00 00 
2b6f2     00 00 00 00 
2b6f6     00 00 00    | 	byte	$00[11]
2b6f9     0C 06 7F 06 
2b6fd     0C 00 00 00 
2b701     00 00 00 00 
2b705     00 00 00 00 | 	byte	$0c, $06, $7f, $06, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2b709     00 03 03 03 
2b70d     7F 00 00 00 
2b711     00 00 00 00 
2b715     00 00 00 00 | 	byte	$00, $03, $03, $03, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2b719     14 36 7F 36 
2b71d     14 00 00 00 
2b721     00 00 00 00 
2b725     00 00 00 08 | 	byte	$14, $36, $7f, $36, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08
2b729     1C 1C 3E 3E 
2b72d     7F 7F 00 00 
2b731     00 00 00 00 
2b735     00 00 00 7F | 	byte	$1c, $1c, $3e, $3e, $7f, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2b739     7F 3E 3E 1C 
2b73d     1C 08 00 00 
2b741     00 00 00 00 
2b745     00 00 00 00 | 	byte	$7f, $3e, $3e, $1c, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2b749     00 00 00 00 
2b74d     00 00 00 00 
2b751     00 00 00 00 
2b755     00 00       | 	byte	$00[14]
2b757     18 3C 3C 3C 
2b75b     18 18 18 00 
2b75f     18 18 00 00 
2b763     00 00 66 66 | 	byte	$18, $3c, $3c, $3c, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $66, $66
2b767     66 24 00 00 
2b76b     00 00 00 00 
2b76f     00 00 00 00 
2b773     00 00 00 00 | 	byte	$66, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2b777     00 36 36 7F 
2b77b     36 36 36 7F 
2b77f     36 36 00 00 
2b783     00 00 18 18 | 	byte	$00, $36, $36, $7f, $36, $36, $36, $7f, $36, $36, $00, $00, $00, $00, $18, $18
2b787     3E 63 43 03 
2b78b     3E 60 60 61 
2b78f     63 3E 18 18 
2b793     00 00 00 00 | 	byte	$3e, $63, $43, $03, $3e, $60, $60, $61, $63, $3e, $18, $18, $00, $00, $00, $00
2b797     00 00 43 63 
2b79b     30 18 0C 06 
2b79f     63 61 00 00 
2b7a3     00 00 00 00 | 	byte	$00, $00, $43, $63, $30, $18, $0c, $06, $63, $61, $00, $00, $00, $00, $00, $00
2b7a7     1C 36 36 1C 
2b7ab     6E 3B 33 33 
2b7af     33 6E 00 00 
2b7b3     00 00 00 00 | 	byte	$1c, $36, $36, $1c, $6e, $3b, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00
2b7b7     0C 0C 0C 06 
2b7bb     00 00 00 00 
2b7bf     00 00 00 00 
2b7c3     00 00 00 00 | 	byte	$0c, $0c, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2b7c7     30 18 0C 0C 
2b7cb     0C 0C 0C 0C 
2b7cf     18 30 00 00 
2b7d3     00 00 00 00 | 	byte	$30, $18, $0c, $0c, $0c, $0c, $0c, $0c, $18, $30, $00, $00, $00, $00, $00, $00
2b7d7     0C 18 30 30 
2b7db     30 30 30 30 
2b7df     18 0C 00 00 
2b7e3     00 00 00 00 | 	byte	$0c, $18, $30, $30, $30, $30, $30, $30, $18, $0c, $00, $00, $00, $00, $00, $00
2b7e7     00 00 00 66 
2b7eb     3C FF 3C 66 
2b7ef     00 00 00 00 
2b7f3     00 00 00 00 | 	byte	$00, $00, $00, $66, $3c, $ff, $3c, $66, $00, $00, $00, $00, $00, $00, $00, $00
2b7f7     00 00 00 18 
2b7fb     18 7E 18 18 
2b7ff     00 00 00 00 
2b803     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00
2b807     00 00 00 00 
2b80b     00 00 00 00 | 	byte	$00[8]
2b80f     18 18 18 0C 
2b813     00 00 00 00 
2b817     00 00 00 00 
2b81b     00 7F 00 00 | 	byte	$18, $18, $18, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $00, $00
2b81f     00 00 00 00 
2b823     00 00 00 00 
2b827     00 00 00 00 
2b82b     00 00 00 00 | 	byte	$00[16]
2b82f     18 18 00 00 
2b833     00 00 00 00 
2b837     00 00 40 60 
2b83b     30 18 0C 06 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $40, $60, $30, $18, $0c, $06
2b83f     03 01 00 00 
2b843     00 00 00 00 
2b847     1C 36 63 63 
2b84b     6B 6B 63 63 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $1c, $36, $63, $63, $6b, $6b, $63, $63
2b84f     36 1C 00 00 
2b853     00 00 00 00 
2b857     18 1C 1E 18 
2b85b     18 18 18 18 | 	byte	$36, $1c, $00, $00, $00, $00, $00, $00, $18, $1c, $1e, $18, $18, $18, $18, $18
2b85f     18 7E 00 00 
2b863     00 00 00 00 
2b867     3E 63 60 30 
2b86b     18 0C 06 03 | 	byte	$18, $7e, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $30, $18, $0c, $06, $03
2b86f     63 7F 00 00 
2b873     00 00 00 00 
2b877     3E 63 60 60 
2b87b     3C 60 60 60 | 	byte	$63, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $60, $3c, $60, $60, $60
2b87f     63 3E 00 00 
2b883     00 00 00 00 
2b887     30 38 3C 36 
2b88b     33 7F 30 30 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $30, $38, $3c, $36, $33, $7f, $30, $30
2b88f     30 78 00 00 
2b893     00 00 00 00 
2b897     7F 03 03 03 
2b89b     3F 60 60 60 | 	byte	$30, $78, $00, $00, $00, $00, $00, $00, $7f, $03, $03, $03, $3f, $60, $60, $60
2b89f     63 3E 00 00 
2b8a3     00 00 00 00 
2b8a7     1C 06 03 03 
2b8ab     3F 63 63 63 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $1c, $06, $03, $03, $3f, $63, $63, $63
2b8af     63 3E 00 00 
2b8b3     00 00 00 00 
2b8b7     7F 63 60 60 
2b8bb     30 18 0C 0C | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $7f, $63, $60, $60, $30, $18, $0c, $0c
2b8bf     0C 0C 00 00 
2b8c3     00 00 00 00 
2b8c7     3E 63 63 63 
2b8cb     3E 63 63 63 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $3e, $63, $63, $63
2b8cf     63 3E 00 00 
2b8d3     00 00 00 00 
2b8d7     3E 63 63 63 
2b8db     7E 60 60 60 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $7e, $60, $60, $60
2b8df     30 1E 00 00 
2b8e3     00 00 00 00 
2b8e7     00 00 00 18 
2b8eb     18 00 00 00 | 	byte	$30, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
2b8ef     18 18 00 00 
2b8f3     00 00 00 00 
2b8f7     00 00 00 18 
2b8fb     18 00 00 00 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
2b8ff     18 18 0C 00 
2b903     00 00 00 00 
2b907     00 60 30 18 
2b90b     0C 06 0C 18 | 	byte	$18, $18, $0c, $00, $00, $00, $00, $00, $00, $60, $30, $18, $0c, $06, $0c, $18
2b90f     30 60 00 00 
2b913     00 00 00 00 
2b917     00 00 00 7E 
2b91b     00 00 7E 00 | 	byte	$30, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $00, $00, $7e, $00
2b91f     00 00 00 00 
2b923     00 00 00 00 
2b927     00          | 	byte	$00[9]
2b928     06 0C 18 30 
2b92c     60 30 18 0C 
2b930     06 00 00 00 
2b934     00 00 00 3E | 	byte	$06, $0c, $18, $30, $60, $30, $18, $0c, $06, $00, $00, $00, $00, $00, $00, $3e
2b938     63 63 30 18 
2b93c     18 18 00 18 
2b940     18 00 00 00 
2b944     00 00 00 00 | 	byte	$63, $63, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00
2b948     3E 63 63 7B 
2b94c     7B 7B 3B 03 
2b950     3E 00 00 00 
2b954     00 00 00 08 | 	byte	$3e, $63, $63, $7b, $7b, $7b, $3b, $03, $3e, $00, $00, $00, $00, $00, $00, $08
2b958     1C 36 63 63 
2b95c     7F 63 63 63 
2b960     63 00 00 00 
2b964     00 00 00 3F | 	byte	$1c, $36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3f
2b968     66 66 66 3E 
2b96c     66 66 66 66 
2b970     3F 00 00 00 
2b974     00 00 00 3C | 	byte	$66, $66, $66, $3e, $66, $66, $66, $66, $3f, $00, $00, $00, $00, $00, $00, $3c
2b978     66 43 03 03 
2b97c     03 03 43 66 
2b980     3C 00 00 00 
2b984     00 00 00 1F | 	byte	$66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00, $00, $1f
2b988     36 66 66 66 
2b98c     66 66 66 36 
2b990     1F 00 00 00 
2b994     00 00 00 7F | 	byte	$36, $66, $66, $66, $66, $66, $66, $36, $1f, $00, $00, $00, $00, $00, $00, $7f
2b998     66 46 16 1E 
2b99c     16 06 46 66 
2b9a0     7F 00 00 00 
2b9a4     00 00 00 7F | 	byte	$66, $46, $16, $1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $7f
2b9a8     66 46 16 1E 
2b9ac     16 06 06 06 
2b9b0     0F 00 00 00 
2b9b4     00 00 00 3C | 	byte	$66, $46, $16, $1e, $16, $06, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $3c
2b9b8     66 43 03 03 
2b9bc     7B 63 63 66 
2b9c0     5C 00 00 00 
2b9c4     00 00 00 63 | 	byte	$66, $43, $03, $03, $7b, $63, $63, $66, $5c, $00, $00, $00, $00, $00, $00, $63
2b9c8     63 63 63 7F 
2b9cc     63 63 63 63 
2b9d0     63 00 00 00 
2b9d4     00 00 00 3C | 	byte	$63, $63, $63, $7f, $63, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3c
2b9d8     18 18 18 18 
2b9dc     18 18 18 18 | 	byte	$18[8]
2b9e0     3C 00 00 00 
2b9e4     00 00 00 78 
2b9e8     30 30 30 30 
2b9ec     30 33 33 33 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $78, $30, $30, $30, $30, $30, $33, $33, $33
2b9f0     1E 00 00 00 
2b9f4     00 00 00 67 
2b9f8     66 66 36 1E 
2b9fc     1E 36 66 66 | 	byte	$1e, $00, $00, $00, $00, $00, $00, $67, $66, $66, $36, $1e, $1e, $36, $66, $66
2ba00     67 00 00 00 
2ba04     00 00 00 0F 
2ba08     06 06 06 06 
2ba0c     06 06 46 66 | 	byte	$67, $00, $00, $00, $00, $00, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
2ba10     7F 00 00 00 
2ba14     00 00 00 63 
2ba18     77 7F 7F 6B 
2ba1c     63 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $63, $77, $7f, $7f, $6b, $63, $63, $63, $63
2ba20     63 00 00 00 
2ba24     00 00 00 63 
2ba28     67 6F 7F 7B 
2ba2c     73 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63
2ba30     63 00 00 00 
2ba34     00 00 00 3E 
2ba38     63 63 63 63 
2ba3c     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
2ba40     3E 00 00 00 
2ba44     00 00 00 3F 
2ba48     66 66 66 3E 
2ba4c     06 06 06 06 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $06, $06, $06, $06
2ba50     0F 00 00 00 
2ba54     00 00 00 3E 
2ba58     63 63 63 63 
2ba5c     63 63 6B 7B | 	byte	$0f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $6b, $7b
2ba60     3E 30 70 00 
2ba64     00 00 00 3F 
2ba68     66 66 66 3E 
2ba6c     36 66 66 66 | 	byte	$3e, $30, $70, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66
2ba70     67 00 00 00 
2ba74     00 00 00 3E 
2ba78     63 63 06 1C 
2ba7c     30 60 63 63 | 	byte	$67, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
2ba80     3E 00 00 00 
2ba84     00 00 00 7E 
2ba88     7E 5A 18 18 
2ba8c     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
2ba90     3C 00 00 00 
2ba94     00 00 00 63 
2ba98     63 63 63 63 
2ba9c     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
2baa0     3E 00 00 00 
2baa4     00 00 00 63 
2baa8     63 63 63 63 
2baac     63 63 36 1C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $36, $1c
2bab0     08 00 00 00 
2bab4     00 00 00 63 
2bab8     63 63 63 6B 
2babc     6B 6B 7F 77 | 	byte	$08, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $6b, $6b, $6b, $7f, $77
2bac0     36 00 00 00 
2bac4     00 00 00 63 
2bac8     63 36 3E 1C 
2bacc     1C 3E 36 63 | 	byte	$36, $00, $00, $00, $00, $00, $00, $63, $63, $36, $3e, $1c, $1c, $3e, $36, $63
2bad0     63 00 00 00 
2bad4     00 00 00 66 
2bad8     66 66 66 3C 
2badc     18 18 18 18 | 	byte	$63, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18
2bae0     3C 00 00 00 
2bae4     00 00 00 7F 
2bae8     63 61 30 18 
2baec     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
2baf0     7F 00 00 00 
2baf4     00 00 00 3C 
2baf8     0C 0C 0C 0C 
2bafc     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $3c, $0c, $0c, $0c, $0c, $0c, $0c, $0c, $0c
2bb00     3C 00 00 00 
2bb04     00 00 00 00 
2bb08     01 03 07 0E 
2bb0c     1C 38 70 60 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $01, $03, $07, $0e, $1c, $38, $70, $60
2bb10     40 00 00 00 
2bb14     00 00 00 3C 
2bb18     30 30 30 30 
2bb1c     30 30 30 30 | 	byte	$40, $00, $00, $00, $00, $00, $00, $3c, $30, $30, $30, $30, $30, $30, $30, $30
2bb20     3C 00 00 00 
2bb24     1C 36 00 00 
2bb28     00 00 00 00 
2bb2c     00 00 00 00 | 	byte	$3c, $00, $00, $00, $1c, $36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bb30     00 00 00 00 
2bb34     00 00 00 00 
2bb38     00 00 00 00 
2bb3c     00 00 00 00 
2bb40     00          | 	byte	$00[17]
2bb41     FF 00 00 0C 
2bb45     18 00 00 00 
2bb49     00 00 00 00 
2bb4d     00 00 00 00 | 	byte	$ff, $00, $00, $0c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bb51     00 00 00 00 
2bb55     00 00 00 00 
2bb59     00          | 	byte	$00[9]
2bb5a     1E 30 3E 33 
2bb5e     33 33 6E 00 
2bb62     00 00 00 00 
2bb66     00 07 06 06 | 	byte	$1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $07, $06, $06
2bb6a     1E 36 66 66 
2bb6e     66 66 3E 00 
2bb72     00 00 00 00 
2bb76     00 00 00 00 | 	byte	$1e, $36, $66, $66, $66, $66, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bb7a     3E 63 03 03 
2bb7e     03 63 3E 00 
2bb82     00 00 00 00 
2bb86     00 38 30 30 | 	byte	$3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $30, $30
2bb8a     3C 36 33 33 
2bb8e     33 33 6E 00 
2bb92     00 00 00 00 
2bb96     00 00 00 00 | 	byte	$3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bb9a     3E 63 7F 03 
2bb9e     03 63 3E 00 
2bba2     00 00 00 00 
2bba6     00 38 6C 4C | 	byte	$3e, $63, $7f, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $6c, $4c
2bbaa     0C 1E 0C 0C 
2bbae     0C 0C 1E 00 
2bbb2     00 00 00 00 
2bbb6     00 00 00 00 | 	byte	$0c, $1e, $0c, $0c, $0c, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bbba     6E 33 33 33 
2bbbe     33 33 3E 30 
2bbc2     33 1E 00 00 
2bbc6     00 07 06 06 | 	byte	$6e, $33, $33, $33, $33, $33, $3e, $30, $33, $1e, $00, $00, $00, $07, $06, $06
2bbca     36 6E 66 66 
2bbce     66 66 67 00 
2bbd2     00 00 00 00 
2bbd6     00 18 18 00 | 	byte	$36, $6e, $66, $66, $66, $66, $67, $00, $00, $00, $00, $00, $00, $18, $18, $00
2bbda     1C 18 18 18 
2bbde     18 18 3C 00 
2bbe2     00 00 00 00 
2bbe6     00 60 60 00 | 	byte	$1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $60, $60, $00
2bbea     70 60 60 60 
2bbee     60 60 60 66 
2bbf2     66 3C 00 00 
2bbf6     00 07 06 06 | 	byte	$70, $60, $60, $60, $60, $60, $60, $66, $66, $3c, $00, $00, $00, $07, $06, $06
2bbfa     66 36 1E 1E 
2bbfe     36 66 67 00 
2bc02     00 00 00 00 
2bc06     00 1C 18 18 | 	byte	$66, $36, $1e, $1e, $36, $66, $67, $00, $00, $00, $00, $00, $00, $1c, $18, $18
2bc0a     18 18 18 18 
2bc0e     18 18       | 	byte	$18[6]
2bc10     3C 00 00 00 
2bc14     00 00 00 00 
2bc18     00 00 37 7F 
2bc1c     6B 6B 6B 6B | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $37, $7f, $6b, $6b, $6b, $6b
2bc20     63 00 00 00 
2bc24     00 00 00 00 
2bc28     00 00 3B 66 
2bc2c     66 66 66 66 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
2bc30     66 00 00 00 
2bc34     00 00 00 00 
2bc38     00 00 3E 63 
2bc3c     63 63 63 63 | 	byte	$66, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63
2bc40     3E 00 00 00 
2bc44     00 00 00 00 
2bc48     00 00 3B 66 
2bc4c     66 66 66 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
2bc50     3E 06 06 0F 
2bc54     00 00 00 00 
2bc58     00 00 6E 33 
2bc5c     33 33 33 33 | 	byte	$3e, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $6e, $33, $33, $33, $33, $33
2bc60     3E 30 30 78 
2bc64     00 00 00 00 
2bc68     00 00 3B 6E 
2bc6c     66 06 06 06 | 	byte	$3e, $30, $30, $78, $00, $00, $00, $00, $00, $00, $3b, $6e, $66, $06, $06, $06
2bc70     0F 00 00 00 
2bc74     00 00 00 00 
2bc78     00 00 3E 63 
2bc7c     06 1C 30 63 | 	byte	$0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63
2bc80     3E 00 00 00 
2bc84     00 00 00 08 
2bc88     0C 0C 3F 0C 
2bc8c     0C 0C 0C 6C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
2bc90     38 00 00 00 
2bc94     00 00 00 00 
2bc98     00 00 33 33 
2bc9c     33 33 33 33 | 	byte	$38, $00, $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33
2bca0     6E 00 00 00 
2bca4     00 00 00 00 
2bca8     00 00 63 63 
2bcac     63 63 63 36 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $36
2bcb0     1C 00 00 00 
2bcb4     00 00 00 00 
2bcb8     00 00 63 63 
2bcbc     6B 6B 6B 7F | 	byte	$1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $6b, $6b, $6b, $7f
2bcc0     36 00 00 00 
2bcc4     00 00 00 00 
2bcc8     00 00 63 36 
2bccc     1C 1C 1C 36 | 	byte	$36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $1c, $36
2bcd0     63 00 00 00 
2bcd4     00 00 00 00 
2bcd8     00 00 63 63 
2bcdc     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63
2bce0     7E 60 30 1F 
2bce4     00 00 00 00 
2bce8     00 00 7F 33 
2bcec     18 0C 06 63 | 	byte	$7e, $60, $30, $1f, $00, $00, $00, $00, $00, $00, $7f, $33, $18, $0c, $06, $63
2bcf0     7F 00 00 00 
2bcf4     00 00 00 70 
2bcf8     18 18 18 0E 
2bcfc     18 18 18 18 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $70, $18, $18, $18, $0e, $18, $18, $18, $18
2bd00     70 00 00 00 
2bd04     00 00 00 18 
2bd08     18 18 18 18 
2bd0c     18 18 18 18 | 	byte	$70, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18
2bd10     18 00 00 00 
2bd14     00 00 00 0E 
2bd18     18 18 18 70 
2bd1c     18 18 18 18 | 	byte	$18, $00, $00, $00, $00, $00, $00, $0e, $18, $18, $18, $70, $18, $18, $18, $18
2bd20     0E 00 00 00 
2bd24     6E 3B 00 00 
2bd28     00 00 00 00 
2bd2c     00 00 00 00 | 	byte	$0e, $00, $00, $00, $6e, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2bd30     00 00 00 00 
2bd34     00 00 00 00 
2bd38     00 00       | 	byte	$00[10]
2bd3a     08 1C 36 63 
2bd3e     63 63 7F 00 
2bd42     00 00 00 00 
2bd46     00 3C 66 43 | 	byte	$08, $1c, $36, $63, $63, $63, $7f, $00, $00, $00, $00, $00, $00, $3c, $66, $43
2bd4a     03 03 03 03 
2bd4e     43 66 3C 18 
2bd52     30 1E 00 00 
2bd56     00 00 33 00 | 	byte	$03, $03, $03, $03, $43, $66, $3c, $18, $30, $1e, $00, $00, $00, $00, $33, $00
2bd5a     33 33 33 33 
2bd5e     33 33       | 	byte	$33[6]
2bd60     6E 00 00 00 
2bd64     00 00 60 30 
2bd68     18 00 3E 63 
2bd6c     7F 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $7f, $03, $03, $63
2bd70     3E 00 00 00 
2bd74     00 00 08 1C 
2bd78     36 00 1E 30 
2bd7c     3E 33 33 33 | 	byte	$3e, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $1e, $30, $3e, $33, $33, $33
2bd80     6E 00 00 00 
2bd84     00 00 00 00 
2bd88     33 00 1E 30 
2bd8c     3E 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $33, $00, $1e, $30, $3e, $33, $33, $33
2bd90     6E 00 00 00 
2bd94     00 00 1C 36 
2bd98     1C 00 33 33 
2bd9c     33 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $1c, $36, $1c, $00, $33, $33, $33, $33, $33, $33
2bda0     6E 00 00 00 
2bda4     00 00 60 30 
2bda8     18 00 3E 63 
2bdac     03 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $03, $03, $03, $63
2bdb0     3E 00 00 00 
2bdb4     00 00 00 00 
2bdb8     00 00 3E 63 
2bdbc     03 03 03 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $03, $03, $03, $63
2bdc0     3E 18 30 1E 
2bdc4     00 00 00 1C 
2bdc8     58 78 38 18 
2bdcc     1C 1E 1A 18 | 	byte	$3e, $18, $30, $1e, $00, $00, $00, $1c, $58, $78, $38, $18, $1c, $1e, $1a, $18
2bdd0     3C 00 00 00 
2bdd4     00 00 00 00 
2bdd8     63 00 3E 63 
2bddc     7F 03 03 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $7f, $03, $03, $63
2bde0     3E 00 00 00 
2bde4     66 33 00 3E 
2bde8     63 63 63 63 
2bdec     63 63 63 63 | 	byte	$3e, $00, $00, $00, $66, $33, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
2bdf0     3E 00 00 00 
2bdf4     00 00 CC 66 
2bdf8     33 00 3E 63 
2bdfc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $cc, $66, $33, $00, $3e, $63, $63, $63, $63, $63
2be00     3E 00 00 00 
2be04     00 00 18 3C 
2be08     66 00 1C 18 
2be0c     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $18, $3c, $66, $00, $1c, $18, $18, $18, $18, $18
2be10     3C 00 00 00 
2be14     30 18 00 7F 
2be18     63 61 30 18 
2be1c     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
2be20     7F 00 00 00 
2be24     00 63 00 08 
2be28     1C 36 63 63 
2be2c     7F 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $63, $00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63
2be30     63 00 00 00 
2be34     30 18 00 3C 
2be38     66 43 03 03 
2be3c     03 03 43 66 | 	byte	$63, $00, $00, $00, $30, $18, $00, $3c, $66, $43, $03, $03, $03, $03, $43, $66
2be40     3C 00 00 00 
2be44     30 18 00 7F 
2be48     66 46 16 1E 
2be4c     16 06 46 66 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66
2be50     7F 00 00 00 
2be54     0C 06 00 0F 
2be58     06 06 06 06 
2be5c     06 06 46 66 | 	byte	$7f, $00, $00, $00, $0c, $06, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
2be60     7F 00 00 00 
2be64     30 18 00 1C 
2be68     18 18 18 18 
2be6c     18 18 18 18 | 	byte	$7f, $00, $00, $00, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $18, $18, $18
2be70     3C 00 00 00 
2be74     00 00 08 1C 
2be78     36 00 3E 63 
2be7c     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $3e, $63, $63, $63, $63, $63
2be80     3E 00 00 00 
2be84     00 00 00 00 
2be88     63 00 3E 63 
2be8c     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63
2be90     3E 00 00 00 
2be94     00 00 00 6F 
2be98     46 26 06 06 
2be9c     06 06 46 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $6f, $46, $26, $06, $06, $06, $06, $46, $66
2bea0     7F 00 00 00 
2bea4     00 00 00 6E 
2bea8     4C 2C 0C 0C 
2beac     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $6e, $4c, $2c, $0c, $0c, $0c, $0c, $0c, $0c
2beb0     1E 00 00 00 
2beb4     30 18 00 3E 
2beb8     63 63 06 1C 
2bebc     30 60 63 63 | 	byte	$1e, $00, $00, $00, $30, $18, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
2bec0     3E 00 00 00 
2bec4     00 00 60 30 
2bec8     18 00 3E 63 
2becc     06 1C 30 63 | 	byte	$3e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $06, $1c, $30, $63
2bed0     3E 00 00 00 
2bed4     00 63 00 3E 
2bed8     63 63 63 63 
2bedc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
2bee0     3E 00 00 00 
2bee4     00 63 00 63 
2bee8     63 63 63 63 
2beec     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
2bef0     3E 00 00 00 
2bef4     6C 38 00 7E 
2bef8     7E 5A 18 18 
2befc     18 18 18 18 | 	byte	$3e, $00, $00, $00, $6c, $38, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
2bf00     3C 00 00 00 
2bf04     00 00 60 48 
2bf08     2C 0C 3F 0C 
2bf0c     0C 0C 0C 6C | 	byte	$3c, $00, $00, $00, $00, $00, $60, $48, $2c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
2bf10     38 00 00 00 
2bf14     00 00 00 0F 
2bf18     26 36 1E 0E 
2bf1c     07 07 46 66 | 	byte	$38, $00, $00, $00, $00, $00, $00, $0f, $26, $36, $1e, $0e, $07, $07, $46, $66
2bf20     7F 00 00 00 
2bf24     00 00 00 00 
2bf28     00 63 36 1C 
2bf2c     1C 36 63 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $36, $63, $00
2bf30     00 00 00 00 
2bf34     00 00       | 	byte	$00[6]
2bf36     36 1C 08 00 
2bf3a     3E 63 03 03 
2bf3e     03 63 3E 00 
2bf42     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00
2bf46     30 18 0C 00 
2bf4a     1E 30 3E 33 
2bf4e     33 33 6E 00 
2bf52     00 00 00 00 | 	byte	$30, $18, $0c, $00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00
2bf56     60 30 18 00 
2bf5a     1C 18 18 18 
2bf5e     18 18 3C 00 
2bf62     00 00 00 00 | 	byte	$60, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00
2bf66     60 30 18 00 
2bf6a     3E 63 63 63 
2bf6e     63 63 3E 00 
2bf72     00 00 00 00 | 	byte	$60, $30, $18, $00, $3e, $63, $63, $63, $63, $63, $3e, $00, $00, $00, $00, $00
2bf76     30 18 0C 00 
2bf7a     33 33 33 33 
2bf7e     33 33 6E 00 
2bf82     00 00 00 00 | 	byte	$30, $18, $0c, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00
2bf86     00 08 1C 36 
2bf8a     63 63 7F 63 
2bf8e     63 63 63 18 
2bf92     0C 78 00 00 | 	byte	$00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63, $63, $18, $0c, $78, $00, $00
2bf96     00 00 00 00 
2bf9a     1E 30 3E 33 
2bf9e     33 33 6E 18 
2bfa2     0C 78 36 1C | 	byte	$00, $00, $00, $00, $1e, $30, $3e, $33, $33, $33, $6e, $18, $0c, $78, $36, $1c
2bfa6     00 7F 63 61 
2bfaa     30 18 0C 06 
2bfae     43 63 7F 00 
2bfb2     00 00 00 00 | 	byte	$00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00
2bfb6     36 1C 08 00 
2bfba     7F 33 18 0C 
2bfbe     06 63 7F 00 
2bfc2     00 00 00 00 | 	byte	$36, $1c, $08, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00
2bfc6     00 7F 66 46 
2bfca     16 1E 16 06 
2bfce     46 66 7F 18 
2bfd2     0C 78 00 00 | 	byte	$00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66, $7f, $18, $0c, $78, $00, $00
2bfd6     00 00 00 00 
2bfda     3E 63 7F 03 
2bfde     03 63 3E 18 
2bfe2     0C 78 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $7f, $03, $03, $63, $3e, $18, $0c, $78, $00, $00
2bfe6     00 3C 66 03 
2bfea     1F 03 0F 03 
2bfee     03 66 3C 00 
2bff2     00 00 00 00 | 	byte	$00, $3c, $66, $03, $1f, $03, $0f, $03, $03, $66, $3c, $00, $00, $00, $00, $00
2bff6     60 30 18 00 
2bffa     7F 33 18 0C 
2bffe     06 63 7F 00 
2c002     00 00 6C 38 | 	byte	$60, $30, $18, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $6c, $38
2c006     00 3C 66 43 
2c00a     03 03 03 03 
2c00e     43 66 3C 00 
2c012     00 00 00 00 | 	byte	$00, $3c, $66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00
2c016     00 00 00 00 
2c01a     3E 63 06 1C 
2c01e     30 63 3E 18 
2c022     30 1E 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63, $3e, $18, $30, $1e, $00, $00
2c026     00 00 00 00 
2c02a     00 00       | 	byte	$00[6]
2c02c     6C 36 1B 36 
2c030     6C 00 00 00 
2c034     00 00 00 00 
2c038     00 00 00 00 | 	byte	$6c, $36, $1b, $36, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c03c     1B 36 6C 36 
2c040     1B 00 00 00 
2c044     88 22 88 22 
2c048     88 22 88 22 | 	byte	$1b, $36, $6c, $36, $1b, $00, $00, $00, $88, $22, $88, $22, $88, $22, $88, $22
2c04c     88 22 88 22 
2c050     88 22 88 22 
2c054     AA 55 AA 55 
2c058     AA 55 AA 55 | 	byte	$88, $22, $88, $22, $88, $22, $88, $22, $aa, $55, $aa, $55, $aa, $55, $aa, $55
2c05c     AA 55 AA 55 
2c060     AA 55 AA 55 
2c064     BB EE BB EE 
2c068     BB EE BB EE | 	byte	$aa, $55, $aa, $55, $aa, $55, $aa, $55, $bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee
2c06c     BB EE BB EE 
2c070     BB EE BB EE 
2c074     18 18 18 18 
2c078     18 18 18 18 | 	byte	$bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee, $18, $18, $18, $18, $18, $18, $18, $18
2c07c     18 18 18 18 
2c080     18 18 18 18 
2c084     18 18 18 18 
2c088     18 18 18    | 	byte	$18[15]
2c08b     1F 18 18 18 
2c08f     18 18 18 18 
2c093     18 30 18 00 
2c097     08 1C 36 63 | 	byte	$1f, $18, $18, $18, $18, $18, $18, $18, $18, $30, $18, $00, $08, $1c, $36, $63
2c09b     63 7F 63 63 
2c09f     63 63 00 00 
2c0a3     00 1C 36 00 
2c0a7     08 1C 36 63 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $1c, $36, $00, $08, $1c, $36, $63
2c0ab     63 7F 63 63 
2c0af     63 63 00 00 
2c0b3     00 36 1C 00 
2c0b7     7F 66 46 16 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $36, $1c, $00, $7f, $66, $46, $16
2c0bb     1E 16 06 46 
2c0bf     66 7F 00 00 
2c0c3     00 00 00 00 
2c0c7     3E 63 63 06 | 	byte	$1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06
2c0cb     1C 30 60 63 
2c0cf     63 3E 18 30 
2c0d3     1E 6C 6C 6C 
2c0d7     6C 6C 6F 60 | 	byte	$1c, $30, $60, $63, $63, $3e, $18, $30, $1e, $6c, $6c, $6c, $6c, $6c, $6f, $60
2c0db     6F 6C 6C 6C 
2c0df     6C 6C 6C 6C 
2c0e3     6C 6C 6C 6C 
2c0e7     6C 6C 6C 6C | 	byte	$6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2c0eb     6C 6C 6C 6C 
2c0ef     6C 6C 6C 6C 
2c0f3     6C          | 	byte	$6c[9]
2c0f4     00 00 00 00 
2c0f8     00          | 	byte	$00[5]
2c0f9     7F 60 6F 6C 
2c0fd     6C 6C 6C 6C 
2c101     6C 6C 6C 6C 
2c105     6C 6C 6C 6C | 	byte	$7f, $60, $6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2c109     6F 60 7F 00 
2c10d     00 00 00 00 
2c111     00 00 00 18 
2c115     18 00 7F 63 | 	byte	$6f, $60, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $7f, $63
2c119     61 30 18 0C 
2c11d     06 43 63 7F 
2c121     00 00 00 00 
2c125     00 00 18 18 | 	byte	$61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00, $00, $18, $18
2c129     00 7F 33 18 
2c12d     0C 06 63 7F 
2c131     00 00 00 00 
2c135     00 00 00 00 | 	byte	$00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00, $00, $00, $00
2c139     00 00 1F 18 
2c13d     18 18 18 18 
2c141     18 18 18 18 
2c145     18 18 18 18 | 	byte	$00, $00, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2c149     18 18 F8 00 
2c14d     00 00 00 00 
2c151     00 00 00 18 
2c155     18 18 18 18 | 	byte	$18, $18, $f8, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
2c159     18 18 FF 00 
2c15d     00 00 00 00 
2c161     00 00 00 00 
2c165     00 00 00 00 | 	byte	$18, $18, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c169     00 00 FF 18 
2c16d     18 18 18 18 
2c171     18 18 18 18 
2c175     18 18 18 18 | 	byte	$00, $00, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2c179     18 18 F8 18 
2c17d     18 18 18 18 
2c181     18 18 18 00 
2c185     00 00 00 00 | 	byte	$18, $18, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
2c189     00 00 FF 00 
2c18d     00 00 00 00 
2c191     00 00 00 18 
2c195     18 18 18 18 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
2c199     18 18 FF 18 
2c19d     18 18 18 18 
2c1a1     18 18 18 63 
2c1a5     3E 00 08 1C | 	byte	$18, $18, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $63, $3e, $00, $08, $1c
2c1a9     36 63 63 7F 
2c1ad     63 63 63 63 
2c1b1     00 00 00 00 
2c1b5     00 00 63 3E | 	byte	$36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $63, $3e
2c1b9     00 1E 30 3E 
2c1bd     33 33 33 6E 
2c1c1     00 00 00 6C 
2c1c5     6C 6C 6C 6C | 	byte	$00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
2c1c9     EC 0C FC 00 
2c1cd     00 00 00 00 
2c1d1     00 00 00 00 
2c1d5     00 00 00 00 | 	byte	$ec, $0c, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c1d9     FC 0C EC 6C 
2c1dd     6C 6C 6C 6C 
2c1e1     6C 6C 6C 6C 
2c1e5     6C 6C 6C 6C | 	byte	$fc, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2c1e9     EF 00 FF 00 
2c1ed     00 00 00 00 
2c1f1     00 00 00 00 
2c1f5     00 00 00 00 | 	byte	$ef, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c1f9     FF 00 EF 6C 
2c1fd     6C 6C 6C 6C 
2c201     6C 6C 6C 6C 
2c205     6C 6C 6C 6C | 	byte	$ff, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2c209     EC 0C EC 6C 
2c20d     6C 6C 6C 6C 
2c211     6C 6C 6C 00 
2c215     00 00 00 00 | 	byte	$ec, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
2c219     FF 00 FF 00 
2c21d     00 00 00 00 
2c221     00 00 00 6C 
2c225     6C 6C 6C 6C | 	byte	$ff, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
2c229     EF 00 EF 6C 
2c22d     6C 6C 6C 6C 
2c231     6C 6C 6C 00 
2c235     00 00 00 00 | 	byte	$ef, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
2c239     63 3E 63 63 
2c23d     63 63 3E 63 
2c241     00 00 00 00 
2c245     00 00 30 7E | 	byte	$63, $3e, $63, $63, $63, $63, $3e, $63, $00, $00, $00, $00, $00, $00, $30, $7e
2c249     30 3C 36 33 
2c24d     33 33 33 6E 
2c251     00 00 00 00 
2c255     00 00 1F 36 | 	byte	$30, $3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $1f, $36
2c259     66 66 6F 66 
2c25d     66 66 36 1F 
2c261     00 00 00 36 
2c265     1C 00 1F 36 | 	byte	$66, $66, $6f, $66, $66, $66, $36, $1f, $00, $00, $00, $36, $1c, $00, $1f, $36
2c269     66 66 66 66 
2c26d     66 66       | 	byte	$66[6]
2c26f     36 1F 00 00 
2c273     00 00 63 00 
2c277     7F 66 46 16 
2c27b     1E 16 06 46 | 	byte	$36, $1f, $00, $00, $00, $00, $63, $00, $7f, $66, $46, $16, $1e, $16, $06, $46
2c27f     66 7F 00 00 
2c283     00 6C 38 00 
2c287     38 30 30 3C 
2c28b     36 33 33 33 | 	byte	$66, $7f, $00, $00, $00, $6c, $38, $00, $38, $30, $30, $3c, $36, $33, $33, $33
2c28f     33 6E 00 00 
2c293     00 36 1C 00 
2c297     63 67 6F 7F 
2c29b     7B 73 63 63 | 	byte	$33, $6e, $00, $00, $00, $36, $1c, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63
2c29f     63 63 00 00 
2c2a3     00 30 18 00 
2c2a7     3C 18 18 18 
2c2ab     18 18 18 18 | 	byte	$63, $63, $00, $00, $00, $30, $18, $00, $3c, $18, $18, $18, $18, $18, $18, $18
2c2af     18 3C 00 00 
2c2b3     00 3C 66 00 
2c2b7     3C 18 18 18 
2c2bb     18 18 18 18 | 	byte	$18, $3c, $00, $00, $00, $3c, $66, $00, $3c, $18, $18, $18, $18, $18, $18, $18
2c2bf     18 3C 00 00 
2c2c3     00 00 00 36 
2c2c7     1C 08 00 3E 
2c2cb     63 7F 03 03 | 	byte	$18, $3c, $00, $00, $00, $00, $00, $36, $1c, $08, $00, $3e, $63, $7f, $03, $03
2c2cf     63 3E 00 00 
2c2d3     00 18 18 18 
2c2d7     18 18 18 18 
2c2db     1F 00 00 00 | 	byte	$63, $3e, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $1f, $00, $00, $00
2c2df     00 00 00 00 
2c2e3     00 00 00 00 
2c2e7     00 00 00 00 | 	byte	$00[12]
2c2eb     F8 18 18 18 
2c2ef     18 18 18 18 
2c2f3     18 FF FF FF 
2c2f7     FF FF FF FF | 	byte	$f8, $18, $18, $18, $18, $18, $18, $18, $18, $ff, $ff, $ff, $ff, $ff, $ff, $ff
2c2fb     FF FF FF FF 
2c2ff     FF FF FF FF 
2c303     FF          | 	byte	$ff[9]
2c304     00 00 00 00 
2c308     00 00 00    | 	byte	$00[7]
2c30b     FF FF FF FF 
2c30f     FF FF FF FF 
2c313     FF          | 	byte	$ff[9]
2c314     00 00 00 7E 
2c318     7E 5A 18 18 
2c31c     18 18 18 18 
2c320     3C 18 30 1E | 	byte	$00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18, $3c, $18, $30, $1e
2c324     1C 36 1C 63 
2c328     63 63 63 63 
2c32c     63 63 63 63 
2c330     3E 00 00 00 | 	byte	$1c, $36, $1c, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
2c334     FF FF FF FF 
2c338     FF FF FF    | 	byte	$ff[7]
2c33b     00 00 00 00 
2c33f     00 00 00 00 
2c343     00          | 	byte	$00[9]
2c344     30 18 00 3E 
2c348     63 63 63 63 
2c34c     63 63 63 63 
2c350     3E 00 00 00 | 	byte	$30, $18, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
2c354     00 00 00 1E 
2c358     33 33 33 1B 
2c35c     33 63 63 63 
2c360     33 00 00 00 | 	byte	$00, $00, $00, $1e, $33, $33, $33, $1b, $33, $63, $63, $63, $33, $00, $00, $00
2c364     1C 36 00 3E 
2c368     63 63 63 63 
2c36c     63 63 63 63 
2c370     3E 00 00 00 | 	byte	$1c, $36, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
2c374     30 18 00 63 
2c378     67 6F 7F 7B 
2c37c     73 63 63 63 
2c380     63 00 00 00 | 	byte	$30, $18, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63, $63, $00, $00, $00
2c384     00 00 60 30 
2c388     18 00 3B 66 
2c38c     66 66 66 66 
2c390     66 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
2c394     00 00 36 1C 
2c398     08 00 3B 66 
2c39c     66 66 66 66 
2c3a0     66 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
2c3a4     36 1C 00 3E 
2c3a8     63 63 06 1C 
2c3ac     30 60 63 63 
2c3b0     3E 00 00 00 | 	byte	$36, $1c, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63, $3e, $00, $00, $00
2c3b4     00 00 36 1C 
2c3b8     08 00 3E 63 
2c3bc     06 1C 30 63 
2c3c0     3E 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3e, $63, $06, $1c, $30, $63, $3e, $00, $00, $00
2c3c4     30 18 00 3F 
2c3c8     66 66 66 3E 
2c3cc     36 66 66 66 
2c3d0     6F 00 00 00 | 	byte	$30, $18, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00
2c3d4     30 18 00 63 
2c3d8     63 63 63 63 
2c3dc     63 63 63 63 
2c3e0     3E 00 00 00 | 	byte	$30, $18, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
2c3e4     00 00 60 30 
2c3e8     18 00 3B 6E 
2c3ec     66 06 06 06 
2c3f0     0F 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00
2c3f4     66 33 00 63 
2c3f8     63 63 63 63 
2c3fc     63 63 63 63 
2c400     3E 00 00 00 | 	byte	$66, $33, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
2c404     00 00 60 30 
2c408     18 00 63 63 
2c40c     63 63 63 63 
2c410     7E 60 30 1F | 	byte	$00, $00, $60, $30, $18, $00, $63, $63, $63, $63, $63, $63, $7e, $60, $30, $1f
2c414     30 18 00 66 
2c418     66 66 66 3C 
2c41c     18 18 18 18 
2c420     3C 00 00 00 | 	byte	$30, $18, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18, $3c, $00, $00, $00
2c424     00 00 00 08 
2c428     0C 0C 3F 0C 
2c42c     0C 0C 0C 6C 
2c430     38 18 30 1E | 	byte	$00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c, $38, $18, $30, $1e
2c434     30 18 00 00 
2c438     00 00 00 00 
2c43c     00 00 00 00 
2c440     00 00 00 00 | 	byte	$30, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c444     00 00 00 00 
2c448     00 00 00 00 | 	byte	$00[8]
2c44c     7F 00 00 00 
2c450     00 00 00 00 
2c454     66 33 00 00 
2c458     00 00 00 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $66, $33, $00, $00, $00, $00, $00, $00
2c45c     00 00 00 00 
2c460     00 00 00 00 
2c464     00 00 00 00 
2c468     00 00 00 00 
2c46c     00 00 00 00 
2c470     00          | 	byte	$00[21]
2c471     0C 06 3C 36 
2c475     1C 00 00 00 
2c479     00 00 00 00 
2c47d     00 00 00 00 | 	byte	$0c, $06, $3c, $36, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c481     00 00 00 63 
2c485     3E 00 00 00 
2c489     00 00 00 00 
2c48d     00 00 00 00 | 	byte	$00, $00, $00, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c491     00 00 00 00 
2c495     3E 63 06 1C 
2c499     36 63 63 36 
2c49d     1C 30 63 3E | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c, $30, $63, $3e
2c4a1     00 00 00 00 
2c4a5     00 00 00 00 | 	byte	$00[8]
2c4a9     18 00 7E 00 
2c4ad     18 00 00 00 
2c4b1     00 00 00 00 
2c4b5     00 00 00 00 | 	byte	$18, $00, $7e, $00, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c4b9     00 00 00 00 
2c4bd     00 00 00 00 | 	byte	$00[8]
2c4c1     18 30 1E 00 
2c4c5     00 00 1C 36 
2c4c9     36 1C 00 00 
2c4cd     00 00 00 00 | 	byte	$18, $30, $1e, $00, $00, $00, $1c, $36, $36, $1c, $00, $00, $00, $00, $00, $00
2c4d1     00 00 00 00 
2c4d5     63 00 00 00 
2c4d9     00 00 00 00 
2c4dd     00 00 00 00 | 	byte	$00, $00, $00, $00, $63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c4e1     00 00 00 18 
2c4e5     18 00 00 00 
2c4e9     00 00 00 00 
2c4ed     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c4f1     00 00 00 00 
2c4f5     00          | 	byte	$00[5]
2c4f6     CC 66 33 00 
2c4fa     33 33 33 33 
2c4fe     33 33 6E 00 
2c502     00 00 36 1C | 	byte	$cc, $66, $33, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $36, $1c
2c506     00 3F 66 66 
2c50a     66 3E 36 66 
2c50e     66 66 6F 00 
2c512     00 00 00 00 | 	byte	$00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00, $00, $00
2c516     36 1C 08 00 
2c51a     3B 6E 66 06 
2c51e     06 06 0F 00 
2c522     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00, $00, $00
2c526     00 00 00 7E 
2c52a     7E 7E 7E 7E 
2c52e     7E 7E 00 00 
2c532     00 00 00 00 | 	byte	$00, $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00
2c536     00 00 00 00 
2c53a     00 00 00 00 
2c53e     00 00 00 00 
2c542     00 00       | 	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c544     00 00 00 00 
      ...             
2c574     00 00 00 00 
2c578     00 00 00    | st_font        file "st4font.def"
2c57b     FF FF 00 00 
2c57f     00 00 00 00 
2c583     00 18 18 18 
2c587     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2c58b     18 18 18 18 
2c58f     18 18 18 18 
2c593     18          | 	byte	$18[9]
2c594     00 00 00 00 
2c598     00 00 00    | 	byte	$00[7]
2c59b     FF FF 18 18 
2c59f     18 18 18 18 
2c5a3     18 18 18 18 
2c5a7     18 18 18 18 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2c5ab     FF FF 00 00 
2c5af     00 00 00 00 
2c5b3     00 18 18 18 
2c5b7     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2c5bb     1F 1F 18 18 
2c5bf     18 18 18 18 
2c5c3     18 18 18 18 
2c5c7     18 18 18 18 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2c5cb     F8 F8 18 18 
2c5cf     18 18 18 18 
2c5d3     18 00 00 00 
2c5d7     00 00 00 00 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2c5db     1F 1F 18 18 
2c5df     18 18 18 18 
2c5e3     18 00 00 00 
2c5e7     00 00 00 00 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2c5eb     F8 F8 18 18 
2c5ef     18 18 18 18 
2c5f3     18 18 18 18 
2c5f7     18 18 18 18 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2c5fb     1F 1F 00 00 
2c5ff     00 00 00 00 
2c603     00 18 18 18 
2c607     18 18 18 18 | 	byte	$1f, $1f, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2c60b     F8 F8 00 00 
2c60f     00 00 00 00 
2c613     00 18 18 18 
2c617     18 18 18 18 | 	byte	$f8, $f8, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2c61b     FF FF 18 18 
2c61f     18 18 18 18 
2c623     18 00 00 18 
2c627     3C 7E 66 66 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $00, $00, $18, $3c, $7e, $66, $66
2c62b     66 7E 7E 66 
2c62f     66 66 66 30 
2c633     18 00 00 7E 
2c637     7E 06 06 3E | 	byte	$66, $7e, $7e, $66, $66, $66, $66, $30, $18, $00, $00, $7e, $7e, $06, $06, $3e
2c63b     3E 06 06 06 
2c63f     06 7E 7E 18 
2c643     0C 30 18 3C 
2c647     7E 66 66 06 | 	byte	$3e, $06, $06, $06, $06, $7e, $7e, $18, $0c, $30, $18, $3c, $7e, $66, $66, $06
2c64b     06 06 06 66 
2c64f     66 7E 3C 00 
2c653     00 30 18 66 
2c657     66 66 6E 6E | 	byte	$06, $06, $06, $66, $66, $7e, $3c, $00, $00, $30, $18, $66, $66, $66, $6e, $6e
2c65b     7E 7E 76 76 
2c65f     66 66 66 00 
2c663     00 30 18 7C 
2c667     7E 06 06 0E | 	byte	$7e, $7e, $76, $76, $66, $66, $66, $00, $00, $30, $18, $7c, $7e, $06, $06, $0e
2c66b     1C 38 70 60 
2c66f     60 7E 3E 00 
2c673     00 30 18 7E 
2c677     7E 30 30 18 | 	byte	$1c, $38, $70, $60, $60, $7e, $3e, $00, $00, $30, $18, $7e, $7e, $30, $30, $18
2c67b     18 0C 0C 06 
2c67f     06 7E 7E 00 
2c683     00 18 18 00 
2c687     7E 7E 30 30 | 	byte	$18, $0c, $0c, $06, $06, $7e, $7e, $00, $00, $18, $18, $00, $7e, $7e, $30, $30
2c68b     18 18 0C 0C 
2c68f     06 7E 7E 00 
2c693     00 30 18 3C 
2c697     7E 66 66 66 | 	byte	$18, $18, $0c, $0c, $06, $7e, $7e, $00, $00, $30, $18, $3c, $7e, $66, $66, $66
2c69b     66 66 66 66 
2c69f     66          | 	byte	$66[5]
2c6a0     7E 3C 00 00 
2c6a4     00 00 06 06 
2c6a8     06 06 16 1E 
2c6ac     0E 06 06 06 | 	byte	$7e, $3c, $00, $00, $00, $00, $06, $06, $06, $06, $16, $1e, $0e, $06, $06, $06
2c6b0     7E 7E 00 00 
2c6b4     00 00 00 00 
2c6b8     00 3C 7C 60 
2c6bc     7C 7E 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $00, $00, $00, $3c, $7c, $60, $7c, $7e, $66, $66
2c6c0     7E 7C 30 18 
2c6c4     00 00 00 00 
2c6c8     00 3C 7E 66 
2c6cc     66 7E 06 06 | 	byte	$7e, $7c, $30, $18, $00, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $06, $06
2c6d0     7E 7C 18 0C 
2c6d4     00 00 30 18 
2c6d8     00 3C 3E 06 
2c6dc     06 06 06 06 | 	byte	$7e, $7c, $18, $0c, $00, $00, $30, $18, $00, $3c, $3e, $06, $06, $06, $06, $06
2c6e0     7E 7C 00 00 
2c6e4     00 00 30 18 
2c6e8     00 3E 7E 66 
2c6ec     66 66 66 66 | 	byte	$7e, $7c, $00, $00, $00, $00, $30, $18, $00, $3e, $7e, $66, $66, $66, $66, $66
2c6f0     66 66 00 00 
2c6f4     00 00 30 18 
2c6f8     00 7C 7E 06 
2c6fc     0E 3C 70 60 | 	byte	$66, $66, $00, $00, $00, $00, $30, $18, $00, $7c, $7e, $06, $0e, $3c, $70, $60
2c700     7E 3E 00 00 
2c704     00 00 30 18 
2c708     00 7E 7E 30 
2c70c     18 18 0C 0C | 	byte	$7e, $3e, $00, $00, $00, $00, $30, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
2c710     7E 7E 00 00 
2c714     00 00 18 18 
2c718     00 7E 7E 30 
2c71c     18 18 0C 0C | 	byte	$7e, $7e, $00, $00, $00, $00, $18, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
2c720     7E 7E 00 00 
2c724     00 00 30 18 
2c728     00 3C 7E 66 
2c72c     66 66 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $00, $3c, $7e, $66, $66, $66, $66, $66
2c730     7E 3C 00 00 
2c734     00 00 1C 1C 
2c738     18 18 38 3C 
2c73c     1C 18 18 18 | 	byte	$7e, $3c, $00, $00, $00, $00, $1c, $1c, $18, $18, $38, $3c, $1c, $18, $18, $18
2c740     3C 3C 00 00 
2c744     00 00 00 00 
2c748     00 00 00 00 
2c74c     00 00 00 00 | 	byte	$3c, $3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2c750     00 00 00 00 
2c754     00 00       | 	byte	$00[6]
2c756     18 18 18 18 
2c75a     18 18 18 18 | 	byte	$18[8]
2c75e     00 00 18 18 
2c762     00 00 00 00 
2c766     66 66 66 66 
2c76a     00 00 00 00 | 	byte	$00, $00, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $00, $00, $00, $00
2c76e     00 00 00 00 
2c772     00 00 00 00 
2c776     00          | 	byte	$00[9]
2c777     66 66 FF FF 
2c77b     66 66 FF FF 
2c77f     66 66 00 00 
2c783     00 00 18 18 | 	byte	$66, $66, $ff, $ff, $66, $66, $ff, $ff, $66, $66, $00, $00, $00, $00, $18, $18
2c787     7C 7E 06 06 
2c78b     3E 7C 60 60 
2c78f     7E 3E 18 18 
2c793     00 00 00 66 | 	byte	$7c, $7e, $06, $06, $3e, $7c, $60, $60, $7e, $3e, $18, $18, $00, $00, $00, $66
2c797     66 30 30 18 
2c79b     18 0C 0C 66 
2c79f     66 00 00 00 
2c7a3     00 00 3C 7E | 	byte	$66, $30, $30, $18, $18, $0c, $0c, $66, $66, $00, $00, $00, $00, $00, $3c, $7e
2c7a7     66 66 3C 1C 
2c7ab     1C FC FE 66 
2c7af     66 FE FC 00 
2c7b3     00 00 00 18 | 	byte	$66, $66, $3c, $1c, $1c, $fc, $fe, $66, $66, $fe, $fc, $00, $00, $00, $00, $18
2c7b7     18 18 18 18 
2c7bb     00 00 00 00 
2c7bf     00 00 00 00 
2c7c3     00 00 00 30 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $30
2c7c7     18 1C 0C 0C 
2c7cb     0C 0C 0C 0C 
2c7cf     1C 18 30 00 
2c7d3     00 00 00 0C | 	byte	$18, $1c, $0c, $0c, $0c, $0c, $0c, $0c, $1c, $18, $30, $00, $00, $00, $00, $0c
2c7d7     18 38 30 30 
2c7db     30 30 30 30 
2c7df     38 18 0C 00 
2c7e3     00 00 00 00 | 	byte	$18, $38, $30, $30, $30, $30, $30, $30, $38, $18, $0c, $00, $00, $00, $00, $00
2c7e7     66 66 3C 3C 
2c7eb     FF FF 3C 3C 
2c7ef     66 66 00 00 
2c7f3     00 00 00 00 | 	byte	$66, $66, $3c, $3c, $ff, $ff, $3c, $3c, $66, $66, $00, $00, $00, $00, $00, $00
2c7f7     00 18 18 18 
2c7fb     7E 7E 18 18 
2c7ff     18 00 00 00 
2c803     00 00 00 00 | 	byte	$00, $18, $18, $18, $7e, $7e, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2c807     00 00 00 00 
2c80b     00 00       | 	byte	$00[6]
2c80d     18 18 18 18 
2c811     18          | 	byte	$18[5]
2c812     0C 04 00 00 
2c816     00 00 00 00 
2c81a     7E 7E 00 00 
2c81e     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $00, $00, $00, $00
2c822     00 00 00 00 
2c826     00 00 00 00 
2c82a     00 00 00 00 
2c82e     00          | 	byte	$00[13]
2c82f     18 18 18 00 
2c833     00 00 00 60 
2c837     60 60 30 30 
2c83b     18 18 0C 0C | 	byte	$18, $18, $18, $00, $00, $00, $00, $60, $60, $60, $30, $30, $18, $18, $0c, $0c
2c83f     06 06 06 00 
2c843     00 00 00 3C 
2c847     7E 66 66 66 
2c84b     76 6E 66 66 | 	byte	$06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $76, $6e, $66, $66
2c84f     66 7E 3C 00 
2c853     00 00 00 18 
2c857     18 1C 1C 18 
2c85b     18 18 18 18 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $18, $18, $1c, $1c, $18, $18, $18, $18, $18
2c85f     18 7E 7E 00 
2c863     00 00 00 3C 
2c867     7E 66 66 30 
2c86b     30 18 18 0C | 	byte	$18, $7e, $7e, $00, $00, $00, $00, $3c, $7e, $66, $66, $30, $30, $18, $18, $0c
2c86f     0C 7E 7E 00 
2c873     00 00 00 7E 
2c877     7E 30 30 18 
2c87b     18 30 30 66 | 	byte	$0c, $7e, $7e, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $30, $30, $66
2c87f     66 7E 3C 00 
2c883     00 00 00 30 
2c887     30 38 38 3C 
2c88b     3C 36 36 7E | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $30, $30, $38, $38, $3c, $3c, $36, $36, $7e
2c88f     7E 30 30 00 
2c893     00 00 00 7E 
2c897     7E 06 06 3E 
2c89b     7E 60 60 60 | 	byte	$7e, $30, $30, $00, $00, $00, $00, $7e, $7e, $06, $06, $3e, $7e, $60, $60, $60
2c89f     66 7E 3C 00 
2c8a3     00 00 00 38 
2c8a7     3C 0E 06 06 
2c8ab     3E 7E 66 66 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $38, $3c, $0e, $06, $06, $3e, $7e, $66, $66
2c8af     66 7E 3C 00 
2c8b3     00 00 00 7E 
2c8b7     7E 60 60 30 
2c8bb     30 18 18 0C | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $7e, $7e, $60, $60, $30, $30, $18, $18, $0c
2c8bf     0C 0C 0C 00 
2c8c3     00 00 00 3C 
2c8c7     7E 66 66 3C 
2c8cb     3C 66 66 66 | 	byte	$0c, $0c, $0c, $00, $00, $00, $00, $3c, $7e, $66, $66, $3c, $3c, $66, $66, $66
2c8cf     66 7E 3C 00 
2c8d3     00 00 00 3C 
2c8d7     7E 66 66 7E 
2c8db     7C 60 60 60 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $7c, $60, $60, $60
2c8df     70 3C 1C 00 
2c8e3     00 00 00 00 
2c8e7     00 00 18 18 
2c8eb     18 00 00 00 | 	byte	$70, $3c, $1c, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $00
2c8ef     18 18 18 00 
2c8f3     00 00 00 00 
2c8f7     00 00 18 18 
2c8fb     18 00 00 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $18
2c8ff     18 18 18 0C 
2c903     04 00 00 00 
2c907     70 38 1C 0E 
2c90b     07 0E 1C 38 | 	byte	$18, $18, $18, $0c, $04, $00, $00, $00, $70, $38, $1c, $0e, $07, $0e, $1c, $38
2c90f     70 00 00 00 
2c913     00 00 00 00 
2c917     00 00 7E 7E 
2c91b     00 00 7E 7E | 	byte	$70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $7e, $7e
2c91f     00 00 00 00 
2c923     00 00 00 00 | 	byte	$00[8]
2c927     0E 1C 38 70 
2c92b     E0 70 38 1C 
2c92f     0E 00 00 00 
2c933     00 00 00 3C | 	byte	$0e, $1c, $38, $70, $e0, $70, $38, $1c, $0e, $00, $00, $00, $00, $00, $00, $3c
2c937     7E 66 66 30 
2c93b     30 18 18 18 
2c93f     00 18 18 00 
2c943     00 00 00 3C | 	byte	$7e, $66, $66, $30, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $3c
2c947     7E 66 66 66 
2c94b     66 36 06 66 
2c94f     66 7E 3C 00 
2c953     00 00 00 18 | 	byte	$7e, $66, $66, $66, $66, $36, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $18
2c957     3C 7E 66 66 
2c95b     66 7E 7E 66 
2c95f     66 66 66 00 
2c963     00 00 00 3E | 	byte	$3c, $7e, $66, $66, $66, $7e, $7e, $66, $66, $66, $66, $00, $00, $00, $00, $3e
2c967     7E 66 66 7E 
2c96b     3E 66 66 66 
2c96f     66 7E 3E 00 
2c973     00 00 00 3C | 	byte	$7e, $66, $66, $7e, $3e, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $3c
2c977     7E 66 66 06 
2c97b     06 06 06 66 
2c97f     66 7E 3C 00 
2c983     00 00 00 3E | 	byte	$7e, $66, $66, $06, $06, $06, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $3e
2c987     7E 66 66 66 
2c98b     66 66 66 66 
2c98f     66 7E 3E 00 
2c993     00 00 00 7E | 	byte	$7e, $66, $66, $66, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $7e
2c997     7E 06 06 3E 
2c99b     3E 06 06 06 
2c99f     06 7E 7E 00 
2c9a3     00 00 00 7E | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $7e, $7e, $00, $00, $00, $00, $7e
2c9a7     7E 06 06 3E 
2c9ab     3E 06 06 06 
2c9af     06 06 06 00 
2c9b3     00 00 00 7C | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $7c
2c9b7     7E 06 06 76 
2c9bb     76 66 66 66 
2c9bf     66 7E 3C 00 
2c9c3     00 00 00 66 | 	byte	$7e, $06, $06, $76, $76, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $66
2c9c7     66 66 66 7E 
2c9cb     7E 66 66 66 
2c9cf     66 66 66 00 
2c9d3     00 00 00 7E | 	byte	$66, $66, $66, $7e, $7e, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $7e
2c9d7     7E 18 18 18 
2c9db     18 18 18 18 
2c9df     18 7E 7E 00 
2c9e3     00 00 00 60 | 	byte	$7e, $18, $18, $18, $18, $18, $18, $18, $18, $7e, $7e, $00, $00, $00, $00, $60
2c9e7     60 60 60 60 
2c9eb     60 60 60    | 	byte	$60[7]
2c9ee     66 66 7E 3C 
2c9f2     00 00 00 00 
2c9f6     66 66 36 36 
2c9fa     1E 1E 36 36 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $36, $36, $1e, $1e, $36, $36
2c9fe     66 66 C6 C6 
2ca02     00 00 00 00 
2ca06     06 06 06 06 
2ca0a     06 06 06 06 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06
2ca0e     06 06 7E 7E 
2ca12     00 00 00 00 
2ca16     C6 C6 EE EE 
2ca1a     FE D6 D6 C6 | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $c6, $c6, $ee, $ee, $fe, $d6, $d6, $c6
2ca1e     C6 C6 C6 C6 
2ca22     00 00 00 00 
2ca26     66 66 66 6E 
2ca2a     6E 7E 7E 76 | 	byte	$c6, $c6, $c6, $c6, $00, $00, $00, $00, $66, $66, $66, $6e, $6e, $7e, $7e, $76
2ca2e     76 66 66 66 
2ca32     00 00 00 00 
2ca36     3C 7E 66 66 
2ca3a     66 66 66 66 | 	byte	$76, $66, $66, $66, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
2ca3e     66 66 7E 3C 
2ca42     00 00 00 00 
2ca46     3E 7E 66 66 
2ca4a     66 66 7E 3E | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $66, $7e, $3e
2ca4e     06 06 06 06 
2ca52     00 00 00 00 
2ca56     3C 7E 66 66 
2ca5a     66 66 66 66 | 	byte	$06, $06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
2ca5e     66 56 3E 6C 
2ca62     00 00 00 00 
2ca66     3E 7E 66 66 
2ca6a     66 7E 3E 36 | 	byte	$66, $56, $3e, $6c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $7e, $3e, $36
2ca6e     66 66 C6 C6 
2ca72     00 00 00 00 
2ca76     7C 7E 06 06 
2ca7a     0E 1C 38 70 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $7c, $7e, $06, $06, $0e, $1c, $38, $70
2ca7e     60 60 7E 3E 
2ca82     00 00 00 00 
2ca86     7E 7E 18 18 
2ca8a     18 18 18 18 | 	byte	$60, $60, $7e, $3e, $00, $00, $00, $00, $7e, $7e, $18, $18, $18, $18, $18, $18
2ca8e     18 18 18 18 
2ca92     00 00 00 00 
2ca96     66 66 66 66 
2ca9a     66 66 66 66 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
2ca9e     66 66 7E 3C 
2caa2     00 00 00 00 
2caa6     66 66 66 66 
2caaa     66 66 66 66 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
2caae     3C 3C 18 18 
2cab2     00 00 00 00 
2cab6     C6 C6 C6 C6 
2caba     C6 D6 D6 FE | 	byte	$3c, $3c, $18, $18, $00, $00, $00, $00, $c6, $c6, $c6, $c6, $c6, $d6, $d6, $fe
2cabe     FE EE C6 82 
2cac2     00 00 00 00 
2cac6     66 66 66 3C 
2caca     3C 18 18 3C | 	byte	$fe, $ee, $c6, $82, $00, $00, $00, $00, $66, $66, $66, $3c, $3c, $18, $18, $3c
2cace     3C 66 66 66 
2cad2     00 00 00 00 
2cad6     66 66 66 66 
2cada     66 3C 3C 18 | 	byte	$3c, $66, $66, $66, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c, $18
2cade     18 18 18 18 
2cae2     00 00 00 00 
2cae6     7E 7E 30 30 
2caea     18 18 0C 0C | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $0c, $0c
2caee     06 06 7E 7E 
2caf2     00 00 00 00 
2caf6     3C 3C 0C 0C 
2cafa     0C 0C 0C 0C | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $3c, $3c, $0c, $0c, $0c, $0c, $0c, $0c
2cafe     0C 0C 3C 3C 
2cb02     00 00 00 00 
2cb06     06 06 0C 0C 
2cb0a     18 18 30 30 | 	byte	$0c, $0c, $3c, $3c, $00, $00, $00, $00, $06, $06, $0c, $0c, $18, $18, $30, $30
2cb0e     60 60 C0 C0 
2cb12     00 00 00 00 
2cb16     3C 3C 30 30 
2cb1a     30 30 30 30 | 	byte	$60, $60, $c0, $c0, $00, $00, $00, $00, $3c, $3c, $30, $30, $30, $30, $30, $30
2cb1e     30 30 3C 3C 
2cb22     00 00 00 00 
2cb26     18 18 3C 3C 
2cb2a     66 66 00 00 | 	byte	$30, $30, $3c, $3c, $00, $00, $00, $00, $18, $18, $3c, $3c, $66, $66, $00, $00
2cb2e     00 00 00 00 
2cb32     00 00 00 00 
2cb36     00 00 00 00 
2cb3a     00 00 00 00 
2cb3e     00 00       | 	byte	$00[18]
2cb40     FE FE 00 00 
2cb44     00 00 0C 0C 
2cb48     18 18 00 00 
2cb4c     00 00 00 00 | 	byte	$fe, $fe, $00, $00, $00, $00, $0c, $0c, $18, $18, $00, $00, $00, $00, $00, $00
2cb50     00 00 00 00 
2cb54     00 00 00 00 
2cb58     00          | 	byte	$00[9]
2cb59     3C 7C 60 7C 
2cb5d     7E 66 66 7E 
2cb61     7C 00 00 00 
2cb65     00 06 06 06 | 	byte	$3c, $7c, $60, $7c, $7e, $66, $66, $7e, $7c, $00, $00, $00, $00, $06, $06, $06
2cb69     3E 7E 66 66 
2cb6d     66 66 66 7E 
2cb71     3E 00 00 00 
2cb75     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $00, $00, $00
2cb79     3C 3E 06 06 
2cb7d     06 06 06 7E 
2cb81     7C 00 00 00 
2cb85     00 60 60 60 | 	byte	$3c, $3e, $06, $06, $06, $06, $06, $7e, $7c, $00, $00, $00, $00, $60, $60, $60
2cb89     7C 7E 66 66 
2cb8d     66 66 66 7E 
2cb91     7C 00 00 00 
2cb95     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $00, $00, $00, $00, $00, $00, $00
2cb99     3C 7E 66 66 
2cb9d     7E 06 06 7E 
2cba1     7C 00 00 00 
2cba5     00 70 78 18 | 	byte	$3c, $7e, $66, $66, $7e, $06, $06, $7e, $7c, $00, $00, $00, $00, $70, $78, $18
2cba9     18 7E 7E 18 
2cbad     18 18 18 18 
2cbb1     18 00 00 00 
2cbb5     00 00 00 00 | 	byte	$18, $7e, $7e, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2cbb9     7C 7E 66 66 
2cbbd     66 66 7E 7C 
2cbc1     60 7E 3E 00 
2cbc5     00 06 06 06 | 	byte	$7c, $7e, $66, $66, $66, $66, $7e, $7c, $60, $7e, $3e, $00, $00, $06, $06, $06
2cbc9     3E 7E 66 66 
2cbcd     66 66 66 66 
2cbd1     66 00 00 00 
2cbd5     00 18 18 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $18, $18, $00
2cbd9     1C 1C 18 18 
2cbdd     18 18 18 3C 
2cbe1     3C 00 00 00 
2cbe5     00 30 30 00 | 	byte	$1c, $1c, $18, $18, $18, $18, $18, $3c, $3c, $00, $00, $00, $00, $30, $30, $00
2cbe9     30 30 30 30 
2cbed     30 30 30 30 
2cbf1     30          | 	byte	$30[9]
2cbf2     3E 1E 00 00 
2cbf6     06 06 06 36 
2cbfa     36 1E 1E 1E 
2cbfe     36 36 66 66 | 	byte	$3e, $1e, $00, $00, $06, $06, $06, $36, $36, $1e, $1e, $1e, $36, $36, $66, $66
2cc02     00 00 00 00 
2cc06     1C 1C 18 18 
2cc0a     18 18 18 18 
2cc0e     18 18 3C 3C | 	byte	$00, $00, $00, $00, $1c, $1c, $18, $18, $18, $18, $18, $18, $18, $18, $3c, $3c
2cc12     00 00 00 00 
2cc16     00 00 00    | 	byte	$00[7]
2cc19     6C FE FE D6 
2cc1d     D6 C6 C6 C6 
2cc21     C6 00 00 00 
2cc25     00 00 00 00 | 	byte	$6c, $fe, $fe, $d6, $d6, $c6, $c6, $c6, $c6, $00, $00, $00, $00, $00, $00, $00
2cc29     3E 7E 66 66 
2cc2d     66 66 66 66 
2cc31     66 00 00 00 
2cc35     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $00
2cc39     3C 7E 66 66 
2cc3d     66 66 66 7E 
2cc41     3C 00 00 00 
2cc45     00 00 00 00 | 	byte	$3c, $7e, $66, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $00, $00, $00
2cc49     3E 7E 66 66 
2cc4d     66 66 66 7E 
2cc51     3E 06 06 00 
2cc55     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $06, $06, $00, $00, $00, $00, $00
2cc59     7C 7E 66 66 
2cc5d     66 66 66 7E 
2cc61     7C 60 60 00 
2cc65     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $60, $60, $00, $00, $00, $00, $00
2cc69     3E 7E 66 06 
2cc6d     06 06 06 06 
2cc71     06 00 00 00 
2cc75     00 00 00 00 | 	byte	$3e, $7e, $66, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $00, $00, $00
2cc79     7C 7E 06 0E 
2cc7d     3C 70 60 7E 
2cc81     3E 00 00 00 
2cc85     00 00 18 18 | 	byte	$7c, $7e, $06, $0e, $3c, $70, $60, $7e, $3e, $00, $00, $00, $00, $00, $18, $18
2cc89     7E 7E 18 18 
2cc8d     18 18 18 78 
2cc91     70 00 00 00 
2cc95     00 00 00 00 | 	byte	$7e, $7e, $18, $18, $18, $18, $18, $78, $70, $00, $00, $00, $00, $00, $00, $00
2cc99     66 66 66 66 
2cc9d     66 66 66    | 	byte	$66[7]
2cca0     7E 7C 00 00 
2cca4     00 00 00 00 
2cca8     00 66 66 66 
2ccac     66 66 3C 3C | 	byte	$7e, $7c, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c
2ccb0     18 18 00 00 
2ccb4     00 00 00 00 
2ccb8     00 C6 C6 D6 
2ccbc     D6 FE FE EE | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $c6, $c6, $d6, $d6, $fe, $fe, $ee
2ccc0     C6 82 00 00 
2ccc4     00 00 00 00 
2ccc8     00 66 66 3C 
2cccc     3C 18 3C 3C | 	byte	$c6, $82, $00, $00, $00, $00, $00, $00, $00, $66, $66, $3c, $3c, $18, $3c, $3c
2ccd0     66 66 00 00 
2ccd4     00 00 00 00 
2ccd8     00 66 66 66 
2ccdc     66 66 66 7E | 	byte	$66, $66, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $7e
2cce0     7C 60 7E 3E 
2cce4     00 00 00 00 
2cce8     00 7E 7E 30 
2ccec     18 18 0C 0C | 	byte	$7c, $60, $7e, $3e, $00, $00, $00, $00, $00, $7e, $7e, $30, $18, $18, $0c, $0c
2ccf0     7E 7E 00 00 
2ccf4     00 00 30 18 
2ccf8     18 18 18 0C 
2ccfc     0C 18 18 18 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $18, $18, $18, $0c, $0c, $18, $18, $18
2cd00     18 30 00 00 
2cd04     00 00 18 18 
2cd08     18 18 18 18 
2cd0c     18 18 18 18 | 	byte	$18, $30, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2cd10     18 18 00 00 
2cd14     00 00 0C 18 
2cd18     18 18 18 30 
2cd1c     30 18 18 18 | 	byte	$18, $18, $00, $00, $00, $00, $0c, $18, $18, $18, $18, $30, $30, $18, $18, $18
2cd20     18 0C 00 00 
2cd24     00 00 6C 7E 
2cd28     36 00 00 00 
2cd2c     00 00 00 00 | 	byte	$18, $0c, $00, $00, $00, $00, $6c, $7e, $36, $00, $00, $00, $00, $00, $00, $00
2cd30     00 00 00 00 
2cd34     00 00 00 00 
2cd38     00          | 	byte	$00[9]
2cd39     18 18 18 18 
2cd3d     18 18 00 00 
2cd41     00 00 00    | 	byte	$18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
2cd44     00 00 00 00 
2cd48     00 FF FF FF | twocolors      long  $00000000,$FFFFFF00
2cd4c     00 00 00 00 
2cd50     00 80 80 80 
2cd54     00 00 00 FF 
2cd58     00 FF FF FF | fourcolors     long  $00000000,$80808000,$FF000000,$FFFFFF00 'black,red,gray,white
2cd5c     00 00 00 00 
2cd60     00          | vga16          long  $00000000,$00008000,$00800000,$00808000,$80000000,$80008000,$80400000,$AAAAAA00,$55555500,$0000FF00,$00FF0000,$00FFFF00,$FF000000,$FF00FF00,$FFFF0000,$FFFFFF00
2cd61     80 00 00 00 
2cd65     00 80 00 00 
2cd69     80 80 00 00 
2cd6d     00 00 80 00 | 	byte	$80, $00, $00, $00, $00, $80, $00, $00, $80, $80, $00, $00, $00, $00, $80, $00
2cd71     80 00 80 00 
2cd75     00 40 80 00 
2cd79     AA AA AA 00 
2cd7d     55 55 55 00 | 	byte	$80, $00, $80, $00, $00, $40, $80, $00, $aa, $aa, $aa, $00, $55, $55, $55, $00
2cd81     FF 00 00 00 
2cd85     00 FF 00 00 
2cd89     FF FF 00 00 
2cd8d     00 00 FF 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00
2cd91     FF 00 FF 00 
2cd95     00 FF FF 00 
2cd99     FF FF FF    | 	byte	$ff, $00, $ff, $00, $00, $ff, $ff, $00, $ff, $ff, $ff
2cd9c     00 00 00 00 
2cda0     00          | ataripalette   file "ataripalettep2.def"
2cda1     11 11 11 00 
2cda5     22 22 22 00 
2cda9     33 33 33 00 
2cdad     44 44 44 00 | 	byte	$11, $11, $11, $00, $22, $22, $22, $00, $33, $33, $33, $00, $44, $44, $44, $00
2cdb1     55 55 55 00 
2cdb5     66 66 66 00 
2cdb9     77 77 77 00 
2cdbd     88 88 88 00 | 	byte	$55, $55, $55, $00, $66, $66, $66, $00, $77, $77, $77, $00, $88, $88, $88, $00
2cdc1     99 99 99 00 
2cdc5     AA AA AA 00 
2cdc9     BB BB BB 00 
2cdcd     CC CC CC 00 | 	byte	$99, $99, $99, $00, $aa, $aa, $aa, $00, $bb, $bb, $bb, $00, $cc, $cc, $cc, $00
2cdd1     DD DD DD 00 
2cdd5     EE EE EE 00 
2cdd9     FF FF FF 00 
2cddd     00 0A 20 00 | 	byte	$dd, $dd, $dd, $00, $ee, $ee, $ee, $00, $ff, $ff, $ff, $00, $00, $0a, $20, $00
2cde1     00 14 40 00 
2cde5     00 1E 60 00 
2cde9     00 28 80 00 
2cded     00 32 9F 00 | 	byte	$00, $14, $40, $00, $00, $1e, $60, $00, $00, $28, $80, $00, $00, $32, $9f, $00
2cdf1     00 3C BF 00 
2cdf5     00 46 DF 00 
2cdf9     00 50 FF 00 
2cdfd     1C 63 FF 00 | 	byte	$00, $3c, $bf, $00, $00, $46, $df, $00, $00, $50, $ff, $00, $1c, $63, $ff, $00
2ce01     39 77 FF 00 
2ce05     55 8A FF 00 
2ce09     71 9E FF 00 
2ce0d     8E B1 FF 00 | 	byte	$39, $77, $ff, $00, $55, $8a, $ff, $00, $71, $9e, $ff, $00, $8e, $b1, $ff, $00
2ce11     AA C5 FF 00 
2ce15     C6 D8 FF 00 
2ce19     E3 EC FF 00 
2ce1d     00 00 20 00 | 	byte	$aa, $c5, $ff, $00, $c6, $d8, $ff, $00, $e3, $ec, $ff, $00, $00, $00, $20, $00
2ce21     00 00 40 00 
2ce25     00 00 60 00 
2ce29     00 00 80 00 
2ce2d     00 00 9F 00 | 	byte	$00, $00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00
2ce31     00 00 BF 00 
2ce35     00 00 DF 00 
2ce39     00 00 FF 00 
2ce3d     1C 1C FF 00 | 	byte	$00, $00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $1c, $1c, $ff, $00
2ce41     39 39 FF 00 
2ce45     55 55 FF 00 
2ce49     71 71 FF 00 
2ce4d     8E 8E FF 00 | 	byte	$39, $39, $ff, $00, $55, $55, $ff, $00, $71, $71, $ff, $00, $8e, $8e, $ff, $00
2ce51     AA AA FF 00 
2ce55     C6 C6 FF 00 
2ce59     E3 E3 FF 00 
2ce5d     10 00 20 00 | 	byte	$aa, $aa, $ff, $00, $c6, $c6, $ff, $00, $e3, $e3, $ff, $00, $10, $00, $20, $00
2ce61     20 00 40 00 
2ce65     30 00 60 00 
2ce69     40 00 80 00 
2ce6d     50 00 9F 00 | 	byte	$20, $00, $40, $00, $30, $00, $60, $00, $40, $00, $80, $00, $50, $00, $9f, $00
2ce71     60 00 BF 00 
2ce75     70 00 DF 00 
2ce79     80 00 FF 00 
2ce7d     8E 1C FF 00 | 	byte	$60, $00, $bf, $00, $70, $00, $df, $00, $80, $00, $ff, $00, $8e, $1c, $ff, $00
2ce81     9C 39 FF 00 
2ce85     AA 55 FF 00 
2ce89     B8 71 FF 00 
2ce8d     C7 8E FF 00 | 	byte	$9c, $39, $ff, $00, $aa, $55, $ff, $00, $b8, $71, $ff, $00, $c7, $8e, $ff, $00
2ce91     D5 AA FF 00 
2ce95     E3 C6 FF 00 
2ce99     F1 E3 FF 00 
2ce9d     20 00 20 00 | 	byte	$d5, $aa, $ff, $00, $e3, $c6, $ff, $00, $f1, $e3, $ff, $00, $20, $00, $20, $00
2cea1     40 00 40 00 
2cea5     60 00 60 00 
2cea9     80 00 80 00 
2cead     9F 00 9F 00 | 	byte	$40, $00, $40, $00, $60, $00, $60, $00, $80, $00, $80, $00, $9f, $00, $9f, $00
2ceb1     BF 00 BF 00 
2ceb5     DF 00 DF 00 
2ceb9     FF 00 FF 00 
2cebd     FF 1C FF 00 | 	byte	$bf, $00, $bf, $00, $df, $00, $df, $00, $ff, $00, $ff, $00, $ff, $1c, $ff, $00
2cec1     FF 39 FF 00 
2cec5     FF 55 FF 00 
2cec9     FF 71 FF 00 
2cecd     FF 8E FF 00 | 	byte	$ff, $39, $ff, $00, $ff, $55, $ff, $00, $ff, $71, $ff, $00, $ff, $8e, $ff, $00
2ced1     FF AA FF 00 
2ced5     FF C6 FF 00 
2ced9     FF E3 FF 00 
2cedd     20 00 10 00 | 	byte	$ff, $aa, $ff, $00, $ff, $c6, $ff, $00, $ff, $e3, $ff, $00, $20, $00, $10, $00
2cee1     40 00 20 00 
2cee5     60 00 30 00 
2cee9     80 00 40 00 
2ceed     9F 00 50 00 | 	byte	$40, $00, $20, $00, $60, $00, $30, $00, $80, $00, $40, $00, $9f, $00, $50, $00
2cef1     BF 00 60 00 
2cef5     DF 00 70 00 
2cef9     FF 00 80 00 
2cefd     FF 1C 8E 00 | 	byte	$bf, $00, $60, $00, $df, $00, $70, $00, $ff, $00, $80, $00, $ff, $1c, $8e, $00
2cf01     FF 39 9C 00 
2cf05     FF 55 AA 00 
2cf09     FF 71 B8 00 
2cf0d     FF 8E C7 00 | 	byte	$ff, $39, $9c, $00, $ff, $55, $aa, $00, $ff, $71, $b8, $00, $ff, $8e, $c7, $00
2cf11     FF AA D5 00 
2cf15     FF C6 E3 00 
2cf19     FF E3 F1 00 
2cf1d     20 00 00 00 | 	byte	$ff, $aa, $d5, $00, $ff, $c6, $e3, $00, $ff, $e3, $f1, $00, $20, $00, $00, $00
2cf21     40 00 00 00 
2cf25     60 00 00 00 
2cf29     80 00 00 00 
2cf2d     9F 00 00 00 | 	byte	$40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00, $00
2cf31     BF 00 00 00 
2cf35     DF 00 00 00 
2cf39     FF 00 00 00 
2cf3d     FF 1C 1C 00 | 	byte	$bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $00, $ff, $1c, $1c, $00
2cf41     FF 39 39 00 
2cf45     FF 55 55 00 
2cf49     FF 71 71 00 
2cf4d     FF 8E 8E 00 | 	byte	$ff, $39, $39, $00, $ff, $55, $55, $00, $ff, $71, $71, $00, $ff, $8e, $8e, $00
2cf51     FF AA AA 00 
2cf55     FF C6 C6 00 
2cf59     FF E3 E3 00 
2cf5d     20 08 00 00 | 	byte	$ff, $aa, $aa, $00, $ff, $c6, $c6, $00, $ff, $e3, $e3, $00, $20, $08, $00, $00
2cf61     40 10 00 00 
2cf65     60 18 00 00 
2cf69     80 20 00 00 
2cf6d     9F 28 00 00 | 	byte	$40, $10, $00, $00, $60, $18, $00, $00, $80, $20, $00, $00, $9f, $28, $00, $00
2cf71     BF 30 00 00 
2cf75     DF 38 00 00 
2cf79     FF 40 00 00 
2cf7d     FF 55 1C 00 | 	byte	$bf, $30, $00, $00, $df, $38, $00, $00, $ff, $40, $00, $00, $ff, $55, $1c, $00
2cf81     FF 6A 39 00 
2cf85     FF 80 55 00 
2cf89     FF 95 71 00 
2cf8d     FF AA 8E 00 | 	byte	$ff, $6a, $39, $00, $ff, $80, $55, $00, $ff, $95, $71, $00, $ff, $aa, $8e, $00
2cf91     FF BF AA 00 
2cf95     FF D5 C6 00 
2cf99     FF EA E3 00 
2cf9d     20 10 00 00 | 	byte	$ff, $bf, $aa, $00, $ff, $d5, $c6, $00, $ff, $ea, $e3, $00, $20, $10, $00, $00
2cfa1     40 20 00 00 
2cfa5     60 30 00 00 
2cfa9     80 40 00 00 
2cfad     9F 50 00 00 | 	byte	$40, $20, $00, $00, $60, $30, $00, $00, $80, $40, $00, $00, $9f, $50, $00, $00
2cfb1     BF 60 00 00 
2cfb5     DF 70 00 00 
2cfb9     FF 80 00 00 
2cfbd     FF 8E 1C 00 | 	byte	$bf, $60, $00, $00, $df, $70, $00, $00, $ff, $80, $00, $00, $ff, $8e, $1c, $00
2cfc1     FF 9C 39 00 
2cfc5     FF AA 55 00 
2cfc9     FF B8 71 00 
2cfcd     FF C7 8E 00 | 	byte	$ff, $9c, $39, $00, $ff, $aa, $55, $00, $ff, $b8, $71, $00, $ff, $c7, $8e, $00
2cfd1     FF D5 AA 00 
2cfd5     FF E3 C6 00 
2cfd9     FF F1 E3 00 
2cfdd     20 18 00 00 | 	byte	$ff, $d5, $aa, $00, $ff, $e3, $c6, $00, $ff, $f1, $e3, $00, $20, $18, $00, $00
2cfe1     40 30 00 00 
2cfe5     60 48 00 00 
2cfe9     80 60 00 00 
2cfed     9F 78 00 00 | 	byte	$40, $30, $00, $00, $60, $48, $00, $00, $80, $60, $00, $00, $9f, $78, $00, $00
2cff1     BF 90 00 00 
2cff5     DF A8 00 00 
2cff9     FF C0 00 00 
2cffd     FF C7 1C 00 | 	byte	$bf, $90, $00, $00, $df, $a8, $00, $00, $ff, $c0, $00, $00, $ff, $c7, $1c, $00
2d001     FF CE 39 00 
2d005     FF D5 55 00 
2d009     FF DC 71 00 
2d00d     FF E3 8E 00 | 	byte	$ff, $ce, $39, $00, $ff, $d5, $55, $00, $ff, $dc, $71, $00, $ff, $e3, $8e, $00
2d011     FF EA AA 00 
2d015     FF F1 C6 00 
2d019     FF F8 E3 00 
2d01d     18 20 00 00 | 	byte	$ff, $ea, $aa, $00, $ff, $f1, $c6, $00, $ff, $f8, $e3, $00, $18, $20, $00, $00
2d021     30 40 00 00 
2d025     48 60 00 00 
2d029     60 80 00 00 
2d02d     78 9F 00 00 | 	byte	$30, $40, $00, $00, $48, $60, $00, $00, $60, $80, $00, $00, $78, $9f, $00, $00
2d031     90 BF 00 00 
2d035     A8 DF 00 00 
2d039     C0 FF 00 00 
2d03d     C7 FF 1C 00 | 	byte	$90, $bf, $00, $00, $a8, $df, $00, $00, $c0, $ff, $00, $00, $c7, $ff, $1c, $00
2d041     CE FF 39 00 
2d045     D5 FF 55 00 
2d049     DC FF 71 00 
2d04d     E3 FF 8E 00 | 	byte	$ce, $ff, $39, $00, $d5, $ff, $55, $00, $dc, $ff, $71, $00, $e3, $ff, $8e, $00
2d051     EA FF AA 00 
2d055     F1 FF C6 00 
2d059     F8 FF E3 00 
2d05d     00 20 00 00 | 	byte	$ea, $ff, $aa, $00, $f1, $ff, $c6, $00, $f8, $ff, $e3, $00, $00, $20, $00, $00
2d061     00 40 00 00 
2d065     00 60 00 00 
2d069     00 80 00 00 
2d06d     00 9F 00 00 | 	byte	$00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00
2d071     00 BF 00 00 
2d075     00 DF 00 00 
2d079     00 FF 00 00 
2d07d     1C FF 1C 00 | 	byte	$00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $1c, $ff, $1c, $00
2d081     39 FF 39 00 
2d085     55 FF 55 00 
2d089     71 FF 71 00 
2d08d     8E FF 8E 00 | 	byte	$39, $ff, $39, $00, $55, $ff, $55, $00, $71, $ff, $71, $00, $8e, $ff, $8e, $00
2d091     AA FF AA 00 
2d095     C6 FF C6 00 
2d099     E3 FF E3 00 
2d09d     00 20 0A 00 | 	byte	$aa, $ff, $aa, $00, $c6, $ff, $c6, $00, $e3, $ff, $e3, $00, $00, $20, $0a, $00
2d0a1     00 40 14 00 
2d0a5     00 60 1E 00 
2d0a9     00 80 28 00 
2d0ad     00 9F 32 00 | 	byte	$00, $40, $14, $00, $00, $60, $1e, $00, $00, $80, $28, $00, $00, $9f, $32, $00
2d0b1     00 BF 3C 00 
2d0b5     00 DF 46 00 
2d0b9     00 FF 50 00 
2d0bd     1C FF 63 00 | 	byte	$00, $bf, $3c, $00, $00, $df, $46, $00, $00, $ff, $50, $00, $1c, $ff, $63, $00
2d0c1     39 FF 77 00 
2d0c5     55 FF 8A 00 
2d0c9     71 FF 9E 00 
2d0cd     8E FF B1 00 | 	byte	$39, $ff, $77, $00, $55, $ff, $8a, $00, $71, $ff, $9e, $00, $8e, $ff, $b1, $00
2d0d1     AA FF C5 00 
2d0d5     C6 FF D8 00 
2d0d9     E3 FF EC 00 
2d0dd     00 20 14 00 | 	byte	$aa, $ff, $c5, $00, $c6, $ff, $d8, $00, $e3, $ff, $ec, $00, $00, $20, $14, $00
2d0e1     00 40 28 00 
2d0e5     00 60 3C 00 
2d0e9     00 80 50 00 
2d0ed     00 9F 64 00 | 	byte	$00, $40, $28, $00, $00, $60, $3c, $00, $00, $80, $50, $00, $00, $9f, $64, $00
2d0f1     00 BF 78 00 
2d0f5     00 DF 8C 00 
2d0f9     00 FF A0 00 
2d0fd     1C FF AB 00 | 	byte	$00, $bf, $78, $00, $00, $df, $8c, $00, $00, $ff, $a0, $00, $1c, $ff, $ab, $00
2d101     39 FF B5 00 
2d105     55 FF C0 00 
2d109     71 FF CA 00 
2d10d     8E FF D5 00 | 	byte	$39, $ff, $b5, $00, $55, $ff, $c0, $00, $71, $ff, $ca, $00, $8e, $ff, $d5, $00
2d111     AA FF DF 00 
2d115     C6 FF EA 00 
2d119     E3 FF F4 00 
2d11d     00 20 20 00 | 	byte	$aa, $ff, $df, $00, $c6, $ff, $ea, $00, $e3, $ff, $f4, $00, $00, $20, $20, $00
2d121     00 40 40 00 
2d125     00 60 60 00 
2d129     00 80 80 00 
2d12d     00 9F 9F 00 | 	byte	$00, $40, $40, $00, $00, $60, $60, $00, $00, $80, $80, $00, $00, $9f, $9f, $00
2d131     00 BF BF 00 
2d135     00 DF DF 00 
2d139     00 FF FF 00 
2d13d     1C FF FF 00 | 	byte	$00, $bf, $bf, $00, $00, $df, $df, $00, $00, $ff, $ff, $00, $1c, $ff, $ff, $00
2d141     39 FF FF 00 
2d145     55 FF FF 00 
2d149     71 FF FF 00 
2d14d     8E FF FF 00 | 	byte	$39, $ff, $ff, $00, $55, $ff, $ff, $00, $71, $ff, $ff, $00, $8e, $ff, $ff, $00
2d151     AA FF FF 00 
2d155     C6 FF FF 00 
2d159     E3 FF FF 00 
2d15d     00 14 20 00 | 	byte	$aa, $ff, $ff, $00, $c6, $ff, $ff, $00, $e3, $ff, $ff, $00, $00, $14, $20, $00
2d161     00 28 40 00 
2d165     00 3C 60 00 
2d169     00 50 80 00 
2d16d     00 64 9F 00 | 	byte	$00, $28, $40, $00, $00, $3c, $60, $00, $00, $50, $80, $00, $00, $64, $9f, $00
2d171     00 78 BF 00 
2d175     00 8C DF 00 
2d179     00 A0 FF 00 
2d17d     1C AB FF 00 | 	byte	$00, $78, $bf, $00, $00, $8c, $df, $00, $00, $a0, $ff, $00, $1c, $ab, $ff, $00
2d181     39 B5 FF 00 
2d185     55 C0 FF 00 
2d189     71 CA FF 00 
2d18d     8E D5 FF 00 | 	byte	$39, $b5, $ff, $00, $55, $c0, $ff, $00, $71, $ca, $ff, $00, $8e, $d5, $ff, $00
2d191     AA DF FF 00 
2d195     C6 EA FF 00 
2d199     E3 F4 FF    | 	byte	$aa, $df, $ff, $00, $c6, $ea, $ff, $00, $e3, $f4, $ff
2d19c                 | '**********************************************************************************
2d19c                 | '
2d19c                 | '        Timings and colors definitions
2d19c                 | '
2d19c                 | '**********************************************************************************
2d19c                 | 
2d19c                 |    'streamer sets for text mode, to add to timings[0..5]
2d19c                 | ' todo for the retromachine: 768x576
2d19c                 | 
2d19c                 | '                     bf.hs, hs,  bf.vis  visible, lr bord, pixel, ud bord,  up p., vsync, down p., mode, cpl, scanlines,  clock,                  hubset                  total vis lines
2d19c     10 00 00 00 
2d1a0     50 00 00 00 
2d1a4     14 00 00 00 
2d1a8     00 04 00 00 | timings000      long   16,   80,    20,    1024,    112,     8,     48,      16,      16,    16,      0,  100,   480,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
2d1ac     70 00 00 00 
2d1b0     08 00 00 00 
2d1b4     30 00 00 00 
2d1b8     10 00 00 00 | 	byte	$70, $00, $00, $00, $08, $00, $00, $00, $30, $00, $00, $00, $10, $00, $00, $00
2d1bc     10 00 00 00 
2d1c0     10 00 00 00 
2d1c4     00 00 00 00 
2d1c8     64 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $00, $00, $00, $00, $64, $00, $00, $00
2d1cc     E0 01 00 00 
2d1d0     F6 32 24 15 
2d1d4     FB 6C C3 01 
2d1d8     40 02 00 00 | 	byte	$e0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
2d1dc                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   544'
2d1dc                 | 'timings064      long   8,   50,    8 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   540
2d1dc     30 00 00 00 
2d1e0     50 00 00 00 
2d1e4     34 00 00 00 
2d1e8     C0 03 00 00 | timings064      long   48,   80,    52 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     354693878,   %1_110000__11_0110_1100__1111_1011,   540
2d1ec     20 00 00 00 
2d1f0     08 00 00 00 
2d1f4     16 00 00 00 
2d1f8     18 00 00 00 | 	byte	$20, $00, $00, $00, $08, $00, $00, $00, $16, $00, $00, $00, $18, $00, $00, $00
2d1fc     24 00 00 00 
2d200     18 00 00 00 
2d204     40 00 00 00 
2d208     70 00 00 00 | 	byte	$24, $00, $00, $00, $18, $00, $00, $00, $40, $00, $00, $00, $70, $00, $00, $00
2d20c     F0 01 00 00 
2d210     F6 32 24 15 
2d214     FB 6C C3 01 
2d218     1C 02 00 00 | 	byte	$f0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $1c, $02, $00, $00
2d21c                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     320000000,   %1_0000_00__00_0000_1111__1111_1011,   544
2d21c     10 00 00 00 
2d220     40 00 00 00 
2d224     10 00 00 00 
2d228     30 03 00 00 | timings128      long   16,   64,    16,     816,      8,     8,     8,       32,      64,    32,    128,  100,   480,     283750000,   %1_111111__11_1000_1011__1111_1011,   496
2d22c     08 00 00 00 
2d230     08 00 00 00 
2d234     08 00 00 00 
2d238     20 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $20, $00, $00, $00
2d23c     40 00 00 00 
2d240     20 00 00 00 
2d244     80 00 00 00 
2d248     64 00 00 00 | 	byte	$40, $00, $00, $00, $20, $00, $00, $00, $80, $00, $00, $00, $64, $00, $00, $00
2d24c     E0 01 00 00 
2d250     70 AE E9 10 
2d254     FB 8B FF 01 
2d258     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $70, $ae, $e9, $10, $fb, $8b, $ff, $01, $f0, $01, $00, $00
2d25c     10 00 00 00 
2d260     42 00 00 00 
2d264     14 00 00 00 
2d268     00 04 00 00 | timings192      long   16,   66,    20,    1024,      0,     8,     0,       16,      16,    16,    192,  128,   576,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
2d26c     00 00 00 00 
2d270     08 00 00 00 
2d274     00 00 00 00 
2d278     10 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $10, $00, $00, $00
2d27c     10 00 00 00 
2d280     10 00 00 00 
2d284     C0 00 00 00 
2d288     80 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $c0, $00, $00, $00, $80, $00, $00, $00
2d28c     40 02 00 00 
2d290     F6 32 24 15 
2d294     FB 6C C3 01 
2d298     40 02 00 00 | 	byte	$40, $02, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
2d29c     50 00 00 00 
2d2a0     A0 00 00 00 
2d2a4     54 00 00 00 
2d2a8     30 03 00 00 | timings256      long   80,  160,    84,     816,      8,     8,     8,        8,      12,     8,    256,  100,   480,     357959184,   %1_110000__11_0110_0100__1111_1011,   496
2d2ac     08 00 00 00 
2d2b0     08 00 00 00 
2d2b4     08 00 00 00 
2d2b8     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
2d2bc     0C 00 00 00 
2d2c0     08 00 00 00 
2d2c4     00 01 00 00 
2d2c8     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $00, $01, $00, $00, $64, $00, $00, $00
2d2cc     E0 01 00 00 
2d2d0     10 06 56 15 
2d2d4     FB 64 C3 01 
2d2d8     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $10, $06, $56, $15, $fb, $64, $c3, $01, $f0, $01, $00, $00
2d2dc     50 00 00 00 
2d2e0     32 00 00 00 
2d2e4     50 00 00 00 
2d2e8     30 03 00 00 | timings320      long   80,   50,    80,     816,      8,     8,     8,        8,      12,     8,    320,  100,   480,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
2d2ec     08 00 00 00 
2d2f0     08 00 00 00 
2d2f4     08 00 00 00 
2d2f8     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
2d2fc     0C 00 00 00 
2d300     08 00 00 00 
2d304     40 01 00 00 
2d308     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $40, $01, $00, $00, $64, $00, $00, $00
2d30c     E0 01 00 00 
2d310     F2 CD 33 13 
2d314     FB 53 92 01 
2d318     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
2d31c     18 00 00 00 
2d320     30 00 00 00 
2d324     18 00 00 00 
2d328     30 03 00 00 | timings384      long   24,   48,    24,     816,      8,     8,     8,        8,      12,     8,    384,  100,   480,     286363636,   %1_010101__01_0011_1010__1111_1011,   496
2d32c     08 00 00 00 
2d330     08 00 00 00 
2d334     08 00 00 00 
2d338     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
2d33c     0C 00 00 00 
2d340     08 00 00 00 
2d344     80 01 00 00 
2d348     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $80, $01, $00, $00, $64, $00, $00, $00
2d34c     E0 01 00 00 
2d350     F4 8F 11 11 
2d354     FB 3A 55 01 
2d358     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f4, $8f, $11, $11, $fb, $3a, $55, $01, $f0, $01, $00, $00
2d35c     20 00 00 00 
2d360     40 00 00 00 
2d364     22 00 00 00 
2d368     80 03 00 00 | timings448      long   32,   64,    34,     896,      0,     8,     0,        8,      12,     8,    448,  112,   496,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
2d36c     00 00 00 00 
2d370     08 00 00 00 
2d374     00 00 00 00 
2d378     08 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $08, $00, $00, $00
2d37c     0C 00 00 00 
2d380     08 00 00 00 
2d384     C0 01 00 00 
2d388     70 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $c0, $01, $00, $00, $70, $00, $00, $00
2d38c     F0 01 00 00 
2d390     F2 CD 33 13 
2d394     FB 53 92 01 
2d398     F0 01 00 00 | 	byte	$f0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
2d39c                 | 'timings999      long    0,    0,     0,       0,      0,     0,     0,        0,       0,     0,      0,    0,     0,             0,                                    0,     0
2d39c     00 75 C7 97 
2d3a0     27 47 F6 0A 
2d3a4     05 79 CB 9B 
2d3a8     2B 4B EA 0F | vgacolors       byte   0, 117, 199, 151, 39, 71, 246, 10, 5, 121, 203, 155, 43, 75, 234, 15
2d3ac                 | 
2d3ac     28 12 64 FD | hdmi            setq    #9
2d3b0     00 DF 06 FB |                 rdlong  framebuf,  ptra                  'read pointers
2d3b4                 |            '     setq2   #255
2d3b4                 |             '    rdlong  $100, paletteptr 
2d3b4     00 26 6F FC |                 wrlong  #aend,#0                         'write driver length to hub#0: DEBUG/demo
2d3b8     3C 00 66 FD |                 setcmod #$100                            'enable HDMI mode
2d3bc     C0 F9 06 F6 |                 mov     ii,#448                          '7 << 6          
2d3c0     78 F9 02 F1 |                 add     ii,hbase
2d3c4     58 F8 62 FD |                 drvl    ii                                 '#7<<6 + hdmi_base      ' enable HDMI pins
2d3c8     7B 0B 80 FF 
2d3cc     7C 01 0B FC |                 wrpin   ##%10110_1111_0111_10_00000_0, ii  '#7<<6 + hdmi_base      ' a '123 ohm BITDAC for pins
2d3d0                 | 
2d3d0     66 66 86 FF 
2d3d4     1D 9A 65 FD |                 setxfrq ##$0CCCCCCC+1                   'set streamer freq to 1/10th clk
2d3d8                 | 
2d3d8                 | 
2d3d8                 | ''--------  frame rendering main loop  ---------------------------------------------------
2d3d8                 | 
2d3d8                 | p101
2d3d8     28 14 64 FD |                 setq    #10
2d3dc     00 DF 06 FB |                 rdlong  framebuf,  ptra
2d3e0     28 1E 64 FD |                 setq    #15
2d3e4     74 9B 02 FB |                 rdlong  m_bs,modeptr                     ' read timings
2d3e8     71 99 02 FB |                 rdlong  border,borderptr
2d3ec                 | 
2d3ec     01 C4 06 F1 |                 add     frames,#1
2d3f0     76 F5 02 F6 |                 mov     dlptr2,dlptr
2d3f4                 | 
2d3f4     73 C7 02 FB |                 rdlong  cursorx, cursorptr               ' read cursor position
2d3f8     63 C9 EA F8 |                 getbyte cursory, cursorx,#1              ' y position at byte #1
2d3fc     63 C3 F2 F8 |                 getbyte cursorsh,cursorx,#2              ' shape at byte #2
2d400     FF C6 06 F5 |                 and     cursorx,#255                     ' clear the cursor x varioble from y and shape
2d404                 |  '' up porch
2d404                 | 
2d404     48 FD 02 F6 |                 mov     hsync0,sync_000                  '
2d408     49 FF 02 F6 |                 mov     hsync1,sync_001
2d40c     37 A8 46 FB |                 callpa  i_upporch ,#blank
2d410     72 01 68 FC |                 wrlong  #0,vblankptr
2d414                 |                 
2d414     1F EA 16 F4 |                 testb   paletteptr,#31 wc
2d418     29 FE 65 3D |          if_nc  setq2   #255
2d41c     75 01 00 3B |          if_nc  rdlong  $000, paletteptr                'read palette
2d420                 | 
2d420                 | '' cursor blinking
2d420                 | 
2d420     04 C4 0E F4 |                 testb   frames,#4 wz                     ' cursor blinks at framerate/16, todo: define
2d424     81 C6 06 A6 |          if_z   mov     cursorx,#129                     ' to switch the cursor off, move it out of the screen
2d428                 | 
2d428                 | '' main screen
2d428                 | 
2d428     00 BE 06 F6 |                 mov linenum,#0
2d42c     00 18 07 F6 |                 mov rcnt,#0
2d430     00 1C 07 F6 |                 mov rcnt2a,#0
2d434                 | 
2d434                 | 
2d434     00 18 0F F2 | p301            cmp rcnt,#0 wz
2d438     18 00 90 AD |         if_z    jmp #p306
2d43c     01 18 87 F1 |                 sub rcnt,#1
2d440     90 F7 02 F6 |                 mov dl,rdl
2d444     8D 1D 0B F7 |                incmod rcnt2a,rcnt2 wz
2d448     8F F7 02 A1 |    if_z        add dl,roffset  
2d44c     7B 21 03 F6 |                 mov rdl,dl
2d450     04 00 90 FD |                 jmp #p307          
2d454                 |           
2d454                 |                 
2d454     7A F7 02 FB | p306            rdlong  dl,dlptr2
2d458     7B FB 1A F6 | p307            mov     framebuf2,dl wcz                  'read a line start in the framebuffer from DL entry
2d45c     6A FA 7A FD |                 rczr    framebuf2 wcz                     'but only if not %11 at lowest bits which means special DL entry
2d460     34 00 90 7D |    if_nz_or_nc  jmp     #p303                        
2d464                 | 
2d464                 | '' Special entry:
2d464                 | '' - repeat                 %nnnn_nnnn_nnnn_qqqq_mmmm_mmmm_mmmm_0111    repeat the next dl line n times, after q lines add offset m
2d464                 | '' - reload palette         %mmmm_mmmm_nnnn_nnnn_qqqq_qqqq_qqqq_1011    reload n palette entries from m color from palette_ptr+q
2d464                 | '' - set border color       %rrrr_rrrr_gggg_gggg_bbbb_bbbb_0001_0011    set border to rgb
2d464                 | '' - set border color       %0000_0000_0000_0000_pppp_pppp_0001_1011    set border color to palette entry #p
2d464                 | '' todo: set horizontal scroll (if needed)
2d464                 | 
2d464     02 FA 66 F0 |                 shl framebuf2,#2
2d468     7D 23 43 F8 |                 getnib dlc,framebuf2,#0
2d46c     04 22 0F F2 |                 cmp dlc,#%100 wz
2d470                 |   
2d470                 |                 
2d470     04 F4 06 F1 |                 add dlptr2,#4
2d474     BC FF 9F 5D |                              if_nz  jmp #p301  '' now ignore unknown instruction 
2d478     7A 21 03 FB |                  rdlong rdl,dlptr2
2d47c     7D 19 3B F9 |                  getword rcnt,framebuf2,#1 
2d480     04 18 47 F0 |                  shr rcnt,#4
2d484                 |              
2d484     7D 1B 63 F8 |                  getnib rcnt2,framebuf2,#4
2d488     7D 1F 33 F9 |                  getword roffset,framebuf2,#0
2d48c                 |                 
2d48c     04 1E 47 F0 |                  shr roffset,#4
2d490     0C 1E 67 F0 |                  shl roffset,#12
2d494                 |   
2d494     9C FF 9F FD |                  jmp #p301
2d498                 |                  
2d498                 |                  
2d498                 | p303           ' mov     framebuf2,dl                    ' read a line start in the framebuffer from DL entry
2d498     0C FA 46 F0 |                 shr     framebuf2,#12
2d49c     02 FA 66 F0 |                 shl     framebuf2,#2
2d4a0                 | 
2d4a0     7B 03 E3 F8 |                 getbyte t1,dl,#0
2d4a4     00 02 0F F2 |                 cmp     t1,#0 wz
2d4a8     34 00 90 AD |     if_z        jmp     #borderline
2d4ac                 | 
2d4ac     00 F6 16 F4 |                  testb   dl,#0  wc     ' bit 0 set = text OR extended:TODO
2d4b0     50 00 90 CD |           if_c   jmp     #textline
2d4b4     50 02 90 3D |           if_nc  jmp     #graphline
2d4b8                 | '
2d4b8     01 BE 06 F1 | p302            add     linenum,#1
2d4bc     04 F4 06 F1 |                 add     dlptr2,#4
2d4c0     5C BF 0A F2 |                 cmp     linenum,i_totalvis  wz
2d4c4     6C FF 9F 5D |          if_nz  jmp     #p301
2d4c8                 | 
2d4c8     72 03 68 FC | p112            wrlong  #1,vblankptr
2d4cc     07 AC 46 FB |                 callpa  i_downporch ,#blank             'bottom blanks
2d4d0                 | 
2d4d0     4A FD 02 F6 |                 mov     hsync0,sync_222                 'vsync on
2d4d4     4B FF 02 F6 |                 mov     hsync1,sync_223
2d4d8     04 AA 46 FB |                 callpa  i_vsync,#blank                  'vertical sync blanks
2d4dc     F8 FE 9F FD |                 jmp     #p101
2d4e0                 | 
2d4e0                 | '' ---------------  END of frame rendering loop -------------------------------------------
2d4e0                 | 
2d4e0                 | 
2d4e0     14 00 B0 FD | borderline      call    #hsync                      ' make a border
2d4e4     4C A1 C2 FC |                 xcont   m_vi,border
2d4e8     CC FF 9F FD |                 jmp     #p302
2d4ec                 | 
2d4ec                 | 
2d4ec     08 00 B0 FD | blank           call    #hsync                          'blank lines
2d4f0     7E A1 C2 FC |                 xcont   m_vi,hsync0
2d4f4     FD ED 6F 0B |         _ret_   djnz    pa,#blank
2d4f8                 | 
2d4f8     7E 9B C2 FC | hsync           xcont   m_bs,hsync0                     'horizontal sync
2d4fc     7F 9D B2 FC |                 xzero   m_sn,hsync1
2d500     7E 9F C2 0C |         _ret_   xcont   m_bv,hsync0
2d504                 | 
2d504                 | 
2d504                 | 
2d504                 | ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
2d504                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
2d504                 |   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
2d504                 | 
2d504                 | '' Display a text line DL[31..12]=addr, nibble #1=textline, zoom: todo
2d504                 | 
2d504     63 CD 02 F6 | textline        mov     cursorpos2,cursorx              ' we need another var for cursor as this code will repeat 16x for every char line
2d508                 | 
2d508     7B 01 53 F8 |                 getnib  fontline,dl,#2                 ' fontline is 0 to 15, a line in font def
2d50c     7B 17 5B F8 |                 getnib  zoom, dl,#3
2d510     03 16 07 F5 |                 and             zoom, #3
2d514                 | 
2d514                 | 
2d514                 | 
2d514     7B BD 02 F6 |                 mov     linestart,dl                    ' linestart will be used for checking cursor y and compute line start addr in the buffer
2d518     02 BC 46 F0 |                 shr     linestart,#2                    ' scanline to char line
2d51c     3F BC 06 F5 |                 and     linestart,#63
2d520     64 BD 0A F2 |                 cmp     linestart,cursory wz            ' if the cursor is not here
2d524     81 CC 06 56 |           if_nz mov     cursorpos2,#129                 ' move it out of the screen
2d528                 | 
2d528     CC FF BF FD |                 call    #hsync                          ' now call hsync to gain some time between xconts
2d52c                 | 
2d52c                 |                        ' if fontline =0, get a border color
2d52c                 | 
2d52c     51 03 33 F9 | p102            getword t1,m_border,#0
2d530     00 02 0F F2 |                 cmp     t1, #0 wz
2d534     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
2d538                 | 
2d538     61 01 1B F2 |                 cmp     fontline,cursorsh wcz           ' if the cursor have to be not displayed due to its shape
2d53c     81 CA 06 C6 |           if_c  mov     cursorpos,#129                  ' move it out of the screen
2d540     66 CB 02 36 |          if_nc  mov     cursorpos,cursorpos2
2d544     01 CA 06 F1 |                 add     cursorpos,#1                    ' we will substract #1 below so compensate this here
2d548     70 05 03 F6 |                 mov     t2,fontbuf                      ' font definition pointer
2d54c     80 05 03 F1 |                 add     t2,fontline                     ' add a current font line
2d550     52 BB 02 F6 |                 mov m_lut2, m_lut1
2d554     6A BB 02 F1 |                 add m_lut2, lutt1
2d558     58 0F 03 F6 |                 mov cpl2,i_cpl
2d55c                 | 
2d55c     02 16 0F F2 |                cmp zoom,#2 wz
2d560     E4 00 90 AD |           if_z jmp #p420
2d564     01 16 0F F2 |                cmp zoom,#1 wz
2d568     64 00 90 AD |           if_z jmp #p410
2d56c     00 16 0F F2 |                 cmp zoom,#0 wz
2d570     04 00 90 AD |           if_z jmp #p400
2d574     50 01 90 FD |                jmp #p430
2d578                 | 
2d578                 |                    '
2d578                 |  ''---------------------------------------------------------------------------------------------------------
2d578     7D 11 03 FB |  p400                   rdlong  char,framebuf2          ' read a long char                          '1
2d57c     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2d580     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
2d584     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
2d588     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2d58c     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
2d590     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
2d594     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
2d598     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2d59c     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
2d5a0                 | 
2d5a0     81 BB C2 FC |                         xcont m_lut2,t1
2d5a4                 | 
2d5a4     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
2d5a8     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2d5ac     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2d5b0     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2d5b4     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
2d5b8     01 C0 86 F1 |                         sub     lutaddr,#1
2d5bc                 | 
2d5bc     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2d5c0     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
2d5c4     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2d5c8                 | 
2d5c8     EB 0F 6F FB |                         djnz   cpl2,#p400
2d5cc                 |                         
2d5cc                 | 
2d5cc                 |                         
2d5cc     28 01 90 FD |  p401                   jmp    #p103
2d5d0                 | 
2d5d0                 | ''------------------------------------------------------------------------------------------------------------
2d5d0                 | 
2d5d0     01 0E 47 F0 |  p410                   shr cpl2,#1
2d5d4                 | 
2d5d4                 | ''---------------------------------------------------------------------------------------------------------
2d5d4     7D 11 03 FB |  p412                   rdlong  char,framebuf2          ' read a long char                          '1
2d5d8     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2d5dc     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
2d5e0     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
2d5e4     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2d5e8     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
2d5ec     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
2d5f0     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
2d5f4     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2d5f8     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
2d5fc                 | 
2d5fc                 | 
2d5fc     81 07 4B F8 |                         getnib t3,t1,#1                   ' 4 pixels to t3                                              '1  - +
2d600     81 03 43 F8 |                         getnib t1,t1,#0                   ' 4 pixels to t1                                                      '2  - +
2d604     63 02 63 FD |                         mergew t1                         ' make 01010101 from 1111                                     '3  - +
2d608     03 02 07 FA |                         mul t1,#3
2d60c     81 BB C2 FC |                         xcont m_lut2,t1
2d610     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
2d614     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2d618     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2d61c     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2d620     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
2d624     01 C0 86 F1 |                         sub     lutaddr,#1
2d628     63 06 63 FD |                         mergew t3
2d62c     03 06 07 FA |                         mul t3,#3
2d630     83 BB C2 FC |                         xcont m_lut2,t3
2d634                 | 
2d634     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2d638     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
2d63c                 | 
2d63c     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2d640                 | 
2d640     E4 0F 6F FB |                         djnz   cpl2,#p412
2d644     B0 00 90 FD |  p411                   jmp    #p103
2d648                 | 
2d648                 | ''------------------------------------------------------------------------------------------------------------
2d648                 | 
2d648     02 0E 47 F0 |  p420                   shr cpl2,#2
2d64c                 | 
2d64c                 | ''---------------------------------------------------------------------------------------
2d64c     7D 11 03 FB |  p422                   rdlong  char,framebuf2          ' read a long char                          '1
2d650     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2d654     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
2d658     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
2d65c     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2d660     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
2d664     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
2d668     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
2d66c     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2d670     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
2d674                 | 
2d674     61 02 63 FD |                         mergeb t1
2d678     81 07 3B F9 |                         getword t3,t1,#1
2d67c     0F 02 07 FA |                         mul t1,#15
2d680     81 BB C2 FC |                         xcont m_lut2,t1
2d684                 | 
2d684     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
2d688     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2d68c     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2d690     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2d694     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
2d698     01 C0 86 F1 |                         sub     lutaddr,#1
2d69c                 | 
2d69c     81 09 EB F8 |                         getbyte t4,t1,#1        '
2d6a0     84 BB C2 FC |                         xcont m_lut2,t4                                                                                                           '
2d6a4                 | 
2d6a4     0F 06 07 FA |                         mul t3,#15
2d6a8     83 BB C2 FC |                         xcont m_lut2,t3
2d6ac                 | 
2d6ac     83 0B EB F8 |                         getbyte t5,t3,#1
2d6b0     85 BB C2 FC |                         xcont m_lut2, t5
2d6b4     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2d6b8     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
2d6bc                 | 
2d6bc     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2d6c0                 | 
2d6c0     E2 0F 6F FB |                         djnz   cpl2,#p422
2d6c4     30 00 90 FD |  p421                   jmp    #p103
2d6c8                 | 
2d6c8                 | '--------------------------------------------------------------------------------------------------------------
2d6c8                 | 
2d6c8     7D 11 03 FB |  p430                   rdlong  char,framebuf2          ' read a long char                          '1
2d6cc     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2d6d0     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
2d6d4                 | 
2d6d4     00 BA C6 FC |                         xcont m_lut2,#0
2d6d8                 | 
2d6d8     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
2d6dc     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2d6e0     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2d6e4     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2d6e8     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
2d6ec     01 C0 86 F1 |                         sub     lutaddr,#1
2d6f0                 | 
2d6f0     F5 0F 6F FB |                         djnz   cpl2,#p430
2d6f4     00 00 90 FD |  p431                   jmp    #p103
2d6f8                 | 
2d6f8                 | ''------------------------------------------------------------------------------------------------------------
2d6f8                 | 
2d6f8                 | 
2d6f8                 | 
2d6f8     51 25 33 F9 | p103            getword  mb2,m_border,#0
2d6fc     00 24 0F F2 |                 cmp      mb2, #0 wz
2d700     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
2d704                 | 
2d704     B0 FD 9F FD |                 jmp #p302
2d708                 | 
2d708                 | '' -------------------------------------- END of text line ---------------------------------
2d708                 | 
2d708                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph - display a graphics line
2d708                 | 
2d708     EC FD BF FD | graphline       call    #hsync                          ' now call hsync to gain some time between xconts
2d70c                 | 
2d70c                 | 
2d70c     51 25 33 F9 | p202            getword mb2,m_border,#0
2d710     00 24 0F F2 |                 cmp     mb2, #0 wz
2d714     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
2d718                 | 
2d718                 | '----------------------------------------- display pixels
2d718                 | 
2d718     52 BB 02 F6 |                 mov     m_lut2,m_lut1                   ' m_lut1 loaded from hub timing block, pixel per long
2d71c     58 0F 03 F6 |                 mov     cpl2,i_cpl                      ' i_cpl in graphic modes is longs per line
2d720                 | 
2d720     7B 17 5B F8 |                 getnib  zoom, dl,#3
2d724     03 16 07 F5 |                 and             zoom, #3                        ' get a horizontal zoom for the line
2d728                 | 
2d728     7B BD 02 F6 |                 mov     colordepth,dl                   ' get a color depth, reuse linestart var f         '
2d72c     0C BC 06 F5 |                 and     colordepth,#12
2d730                 | 
2d730     00 BC 0E F2 |                 cmp     colordepth,#%0000 wz            ' 1 bpp modes
2d734     6B BB 02 A1 |           if_z  add     m_lut2,lutg1
2d738     64 00 90 AD |           if_z  jmp     #p240
2d73c                 | 
2d73c     04 BC 0E F2 |                 cmp     colordepth,#%0100 wz            ' 2 bpp modes
2d740     6C BB 02 A1 |           if_z  add     m_lut2,lutg2
2d744     98 00 90 AD |           if_z  jmp     #p250
2d748                 | 
2d748     08 BC 0E F2 |                 cmp     colordepth,#%1000 wz            ' 4 bpp modes
2d74c     6D BB 02 A1 |           if_z  add     m_lut2,lutg4
2d750     FC 00 90 AD |           if_z  jmp     #p260
2d754                 | 
2d754     6E BB 02 F1 |                 add m_lut2,lutg8                        ' 8 bpp modes
2d758                 | 
2d758                 | '' --- 8 bit color modes
2d758                 | 
2d758     00 16 0F F2 |                 cmp zoom, #%00 wz   '256 colors, zoom x1
2d75c     50 01 90 AD |                 if_z jmp #p251      'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
2d760                 | 
2d760     01 16 0F F2 |                 cmp zoom, #%01 wz   '256 colors, zoom x2
2d764     2A 0C 07 A6 |                 if_z mov skippattern,#%101010
2d768                 |        
2d768                 |  '  
2d768     02 16 0F F2 |                 cmp zoom, #%10 wz   '256 colors, zoom x4
2d76c     25 0C 07 A6 |                 if_z mov skippattern,#%100101
2d770                 |     
2d770                 |  
2d770     05 0C 07 56 |                 if_nz mov skippattern,#%000101
2d774     01 0E 47 50 |                 if_nz shr cpl2,#1         ' if 8x zoom, 2 xconts used in one loop, so divide loop count by 2
2d778                 |         
2d778                 | 
2d778                 |         
2d778     7D 11 03 FB | p235               rdlong  char,framebuf2
2d77c     32 0C 63 FD |                    skipf skippattern
2d780     02 FA 06 F1 |                    add     framebuf2,#2             '0 1 1
2d784     01 FA 06 F1 |                    add     framebuf2,#1             '1 0 0
2d788     50 10 FF F9 |                    movbyts char,#%01010000          '0 1 1
2d78c     00 10 FF F9 |                    movbyts char,#%00000000          '1 0 0
2d790     88 BB C2 FC |                    xcont   m_lut2,char              '0 0 0
2d794     88 BB C2 FC |                    xcont   m_lut2,char              '1 1 0
2d798     F7 0F 6F FB |                    djnz    cpl2,#p235
2d79c                 | 
2d79c     20 01 90 FD |                jmp    #p203
2d7a0                 |                   
2d7a0                 | 
2d7a0                 | 
2d7a0                 | '' --- 1 bit color modes
2d7a0                 | 
2d7a0     00 16 0F F2 | p240          cmp zoom, #%00 wz     '2 colors, zoom x1
2d7a4     08 01 90 AD |        if_z   jmp #p251              'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
2d7a8                 | 
2d7a8     01 16 0F F2 |               cmp zoom, #%01 wz     '2 colors, zoom x2
2d7ac     13 0C 07 A6 |        if_z   mov skippattern,#%10011
2d7b0     08 0C 07 56 |        if_nz  mov skippattern,#%01000
2d7b4                 | 
2d7b4                 | 
2d7b4     7D 11 E3 FA | p241               rdword  char,framebuf2
2d7b8     44 10 FF F9 |                    movbyts char,#%01000100
2d7bc     63 10 63 FD |                    mergew  char
2d7c0     32 0C 63 FD |                    skipf skippattern
2d7c4     44 10 FF F9 |                    movbyts char,#%01000100         ' 1 0
2d7c8     63 10 63 FD |                    mergew  char                    ' 1 0
2d7cc     88 BB C2 FC |                    xcont   m_lut2,char             ' 0 0
2d7d0     02 FA 06 F1 |                    add     framebuf2,#2                    ' 0 1
2d7d4     01 FA 06 F1 |                    add     framebuf2,#1                ' 1 0
2d7d8     F6 0F 6F FB |                    djnz   cpl2,#p241
2d7dc                 | 
2d7dc                 | 
2d7dc     E0 00 90 FD |                jmp    #p203
2d7e0                 | 
2d7e0                 | '' --- 2 bit color modes
2d7e0                 | 
2d7e0     00 16 0F F2 | p250          cmp zoom, #%00 wz     '4 colors, zoom x1
2d7e4     C8 00 90 AD |        if_z   jmp #p251
2d7e8                 | 
2d7e8     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
2d7ec     30 00 90 AD |        if_z   jmp #p252
2d7f0                 | 
2d7f0                 | 
2d7f0     7D 11 C3 FA | p254               rdbyte char,framebuf2
2d7f4     04 0A 07 F6 |                    mov  t5,#4
2d7f8     02 10 67 F0 | p255               shl  char,#2
2d7fc     88 03 53 F8 |                    getnib  t1,char,#2
2d800     03 02 07 F5 |                    and     t1,#3
2d804     55 02 07 FA |                    mul     t1,#$55
2d808     81 05 03 F9 |                    rolbyte  t2,t1,#0
2d80c     FA 0B 6F FB |                    djnz    t5,#p255
2d810     82 BB C2 FC |                    xcont   m_lut2,t2
2d814     01 FA 06 F1 |                    add     framebuf2,#1
2d818     F5 0F 6F FB |                    djnz    cpl2,#p254
2d81c     A0 00 90 FD |                    jmp     #p203
2d820                 | 
2d820     7D 11 E3 FA | p252               rdword char,framebuf2
2d824     08 0A 07 F6 |                    mov  t5,#8
2d828     02 10 67 F0 | p253               shl  char,#2
2d82c     88 03 63 F8 |                    getnib  t1,char,#4
2d830     03 02 07 F5 |                    and     t1,#3
2d834     05 02 07 FA |                    mul     t1,#5
2d838     81 05 83 F8 |                    rolnib  t2,t1,#0
2d83c     FA 0B 6F FB |                    djnz    t5,#p253
2d840     82 BB C2 FC |                    xcont   m_lut2,t2
2d844     02 FA 06 F1 |                    add     framebuf2,#2
2d848     F5 0F 6F FB |                    djnz    cpl2,#p252
2d84c     70 00 90 FD |                    jmp     #p203
2d850                 | 
2d850                 | '' ------ 4 bit color modes
2d850                 | 
2d850     00 16 0F F2 | p260          cmp zoom, #%00 wz     '4 colors, zoom x1, the same loop as 2bpp
2d854     58 00 90 AD |        if_z   jmp #p251
2d858                 | 
2d858     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
2d85c     2C 00 90 AD |        if_z   jmp #p262
2d860                 | 
2d860                 | 
2d860     7D 11 C3 FA | p263               rdbyte char,framebuf2
2d864     02 0A DC FC |                            rep #5,#2
2d868     88 05 8B F8 |                              rolnib t2,char,#1
2d86c     88 05 8B F8 |                                  rolnib t2,char,#1
2d870     88 05 8B F8 |                              rolnib t2,char,#1
2d874     88 05 8B F8 |                                  rolnib t2,char,#1
2d878     04 10 67 F0 |                              shl char,#4
2d87c     82 BB C2 FC |                    xcont   m_lut2,t2
2d880     01 FA 06 F1 |                    add     framebuf2,#1
2d884     F6 0F 6F FB |                    djnz    cpl2,#p263
2d888     34 00 90 FD |                    jmp     #p203
2d88c                 | 
2d88c     7D 11 E3 FA | p262               rdword  char,framebuf2
2d890     04 06 DC FC |                            rep #3,#4
2d894     88 05 9B F8 |                              rolnib t2,char,#3
2d898     88 05 9B F8 |                                  rolnib t2,char,#3
2d89c     04 10 67 F0 |                              shl char,#4
2d8a0     82 BB C2 FC |                    xcont   m_lut2,t2
2d8a4     02 FA 06 F1 |                    add     framebuf2,#2
2d8a8     F8 0F 6F FB |                    djnz    cpl2,#p262
2d8ac     10 00 90 FD |                    jmp     #p203
2d8b0                 | 
2d8b0                 | ''---------- all color modes without zoom
2d8b0                 | 
2d8b0     87 07 D8 FC | p251               rep  #3,cpl2
2d8b4     7D 11 03 FB |                    rdlong  char,framebuf2
2d8b8     04 FA 06 F1 |                    add     framebuf2,#4
2d8bc     88 BB C2 FC |                    xcont   m_lut2,char
2d8c0                 |           
2d8c0                 |  ''-----------------------------------------------------------------------------------------
2d8c0                 | p203           ' getword  mb2,m_border,#0
2d8c0     00 24 0F F2 |                 cmp      mb2, #0 wz
2d8c4     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
2d8c8                 | 
2d8c8     EC FB 9F FD |                 jmp #p302
2d8cc                 | 
2d8cc                 | '' -------------------------------------- END of graph  line ---------------------------------
2d8cc                 | 
2d8cc                 | '' consts and vars
2d8cc                 | 
2d8cc     52 4D 35 D5 | sync_000        long    %1101010100_1101010100_1101010100_10    '
2d8d0     AE 42 35 D5 | sync_001        long    %1101010100_1101010100_0010101011_10    '        hsync
2d8d4     52 45 15 55 | sync_222        long    %0101010100_0101010100_0101010100_10    'vsync
2d8d8     AE 4A 15 55 | sync_223        long    %0101010100_0101010100_1010101011_10    'vsync + hsync
2d8dc                 | 
2d8dc     00 2C 1A 00 | border          long    %00000000_00011010_00101100_00000000
2d8e0                 | 
2d8e0                 | '------ these longs will be set by setmode function
2d8e0                 | 
2d8e0     00 00 00 00 | m_bs            long    0        'blanks before sync
2d8e4     00 00 00 00 | m_sn            long    0        'sync
2d8e8     00 00 00 00 | m_bv            long    0        'blanks before visible
2d8ec     00 00 00 00 | m_vi            long    0        'visible pixels #
2d8f0     00 00 00 00 | m_border        long    0        'left/right borders
2d8f4     00 00 00 00 | m_lut1          long    0        'characters
2d8f8     00 00 00 00 | i_vborder       long    0        'up/down borders
2d8fc     00 00 00 00 | i_upporch       long    0        'up porch lines
2d900     00 00 00 00 | i_vsync         long    0        'vsync lines
2d904     00 00 00 00 | i_downporch     long    0        'down porch lines
2d908     00 00 00 00 | i_modenum       long    0        'mode #
2d90c     00 00 00 00 | i_cpl           long    0        'chars/longs per line
2d910     00 00 00 00 | i_lines         long    0        'scanlines #
2d914     00 00 00 00 | i_clock         long    0
2d918     00 00 00 00 | i_hubset        long    0
2d91c     00 00 00 00 | i_totalvis      long    0
2d920                 | 
2d920                 | '-------------------------------------
2d920                 | 
2d920     00 00 00 00 | m_lut2          long    0
2d924                 | 
2d924                 | colordepth
2d924     00 00 00 00 | linestart       long    0
2d928     00 00 00 00 | linenum         long    0
2d92c     00 01 00 00 | lutaddr         long    256
2d930                 | 
2d930     0E 00 00 00 | cursorsh        long    14
2d934     00 00 00 00 | frames          long    0
2d938     00 00 00 00 | cursorx         long    0
2d93c     00 00 00 00 | cursory         long    0
2d940     00 00 00 00 | cursorpos       long    0
2d944     00 00 00 00 | cursorpos2      long    0
2d948     00 00 00 00 | fontstart       long    0
2d94c     00 00 00 00 | border2         long 0
2d950     00 00 81 70 | lutiv           long $70810000
2d954     00 00 88 00 | lutt1           long $00880000
2d958     00 00 80 00 | lutg1           long $00800000
2d95c     00 00 80 10 | lutg2           long $10800000
2d960     00 00 80 20 | lutg4           long $20800000
2d964     00 00 80 30 | lutg8           long $30800000
2d968     00 00 00 00 | framebuf        long 0
2d96c     00 00 00 00 | fontbuf         long 0
2d970     00 00 00 00 | borderptr       long 0
2d974     00 00 00 00 | vblankptr       long 0
2d978     00 00 00 00 | cursorptr       long 0
2d97c     00 00 00 00 | modeptr         long 0
2d980     00 00 00 00 | paletteptr      long 0
2d984     00 00 00 00 | dlptr           long 0
2d988                 | fontnumptr      res     1
2d988                 | fontnumptr      res     1
2d988                 | hbase           res     1
2d988                 | hbase           res     1
2d988                 | borderptr2      res     1
2d988                 | borderptr2      res     1
2d988                 | dlptr2 res 1
2d988                 | dlptr2 res 1
2d988                 | dl              res 1
2d988                 | dl              res 1
2d988                 | ii              res     1
2d988                 | ii              res     1
2d988                 | framebuf2       res     1
2d988                 | framebuf2       res     1
2d988                 | hsync0          res     1
2d988                 | hsync0          res     1
2d988                 | hsync1          res     1
2d988                 | hsync1          res     1
2d988                 | fontline        res     1
2d988                 | fontline        res     1
2d988                 | t1              res     1
2d988                 | t1              res     1
2d988                 | t2              res     1
2d988                 | t2              res     1
2d988                 | t3 res 1
2d988                 | t3 res 1
2d988                 | t4 res 1
2d988                 | t4 res 1
2d988                 | t5 res 1
2d988                 | t5 res 1
2d988                 | skippattern res 1
2d988                 | skippattern res 1
2d988                 | cpl2 res 1
2d988                 | cpl2 res 1
2d988                 | char            res     1
2d988                 | char            res     1
2d988                 | backcolor       res     1
2d988                 | backcolor       res     1
2d988                 | charcolor       res     1
2d988                 | charcolor       res     1
2d988                 | zoom res 1
2d988                 | zoom res 1
2d988     00 00 00 00 | rcnt long 0 'dl repeat count
2d98c     00 00 00 00 | rcnt2 long 0
2d990     00 00 00 00 | rcnt2a long 0
2d994     00 00 00 00 | roffset long 0
2d998     00 00 00 00 | rdl long 0  'dl repeat line
2d99c     00 00 00 00 | dlc long 0 'dl command
2d9a0     00 00 00 00 | mb2 long 0
2d9a4     00 00 00 00 | aend             long 0
2d9a8                 |                 fit     496                     '
2d9a8                 | _trackerplayer_spin2_dat_
2d9a8                 | 
2d9a8     00 00 00 00 | null             long  0
2d9ac     46 52 45 51 
2d9b0     46 52 45 51 
2d9b4     46 52 45 51 
2d9b8     46 52 45 51 | frequencyLut     long  $51_45_52_46[VALUES_IN_PERIOD_TABLE] ' This table is runtime calculated to match any possible sys clock and mixing frequency combination [1024]
2d9bc     46 52 45 51 
2d9c0     46 52 45 51 
2d9c4     46 52 45 51 
2d9c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2d9cc     46 52 45 51 
2d9d0     46 52 45 51 
2d9d4     46 52 45 51 
2d9d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2d9dc     46 52 45 51 
2d9e0     46 52 45 51 
2d9e4     46 52 45 51 
2d9e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2d9ec     46 52 45 51 
2d9f0     46 52 45 51 
2d9f4     46 52 45 51 
2d9f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2d9fc     46 52 45 51 
2da00     46 52 45 51 
2da04     46 52 45 51 
2da08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da0c     46 52 45 51 
2da10     46 52 45 51 
2da14     46 52 45 51 
2da18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da1c     46 52 45 51 
2da20     46 52 45 51 
2da24     46 52 45 51 
2da28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da2c     46 52 45 51 
2da30     46 52 45 51 
2da34     46 52 45 51 
2da38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da3c     46 52 45 51 
2da40     46 52 45 51 
2da44     46 52 45 51 
2da48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da4c     46 52 45 51 
2da50     46 52 45 51 
2da54     46 52 45 51 
2da58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da5c     46 52 45 51 
2da60     46 52 45 51 
2da64     46 52 45 51 
2da68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da6c     46 52 45 51 
2da70     46 52 45 51 
2da74     46 52 45 51 
2da78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da7c     46 52 45 51 
2da80     46 52 45 51 
2da84     46 52 45 51 
2da88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da8c     46 52 45 51 
2da90     46 52 45 51 
2da94     46 52 45 51 
2da98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2da9c     46 52 45 51 
2daa0     46 52 45 51 
2daa4     46 52 45 51 
2daa8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2daac     46 52 45 51 
2dab0     46 52 45 51 
2dab4     46 52 45 51 
2dab8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dabc     46 52 45 51 
2dac0     46 52 45 51 
2dac4     46 52 45 51 
2dac8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dacc     46 52 45 51 
2dad0     46 52 45 51 
2dad4     46 52 45 51 
2dad8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dadc     46 52 45 51 
2dae0     46 52 45 51 
2dae4     46 52 45 51 
2dae8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2daec     46 52 45 51 
2daf0     46 52 45 51 
2daf4     46 52 45 51 
2daf8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dafc     46 52 45 51 
2db00     46 52 45 51 
2db04     46 52 45 51 
2db08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db0c     46 52 45 51 
2db10     46 52 45 51 
2db14     46 52 45 51 
2db18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db1c     46 52 45 51 
2db20     46 52 45 51 
2db24     46 52 45 51 
2db28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db2c     46 52 45 51 
2db30     46 52 45 51 
2db34     46 52 45 51 
2db38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db3c     46 52 45 51 
2db40     46 52 45 51 
2db44     46 52 45 51 
2db48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db4c     46 52 45 51 
2db50     46 52 45 51 
2db54     46 52 45 51 
2db58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db5c     46 52 45 51 
2db60     46 52 45 51 
2db64     46 52 45 51 
2db68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db6c     46 52 45 51 
2db70     46 52 45 51 
2db74     46 52 45 51 
2db78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db7c     46 52 45 51 
2db80     46 52 45 51 
2db84     46 52 45 51 
2db88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db8c     46 52 45 51 
2db90     46 52 45 51 
2db94     46 52 45 51 
2db98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2db9c     46 52 45 51 
2dba0     46 52 45 51 
2dba4     46 52 45 51 
2dba8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbac     46 52 45 51 
2dbb0     46 52 45 51 
2dbb4     46 52 45 51 
2dbb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbbc     46 52 45 51 
2dbc0     46 52 45 51 
2dbc4     46 52 45 51 
2dbc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbcc     46 52 45 51 
2dbd0     46 52 45 51 
2dbd4     46 52 45 51 
2dbd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbdc     46 52 45 51 
2dbe0     46 52 45 51 
2dbe4     46 52 45 51 
2dbe8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbec     46 52 45 51 
2dbf0     46 52 45 51 
2dbf4     46 52 45 51 
2dbf8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dbfc     46 52 45 51 
2dc00     46 52 45 51 
2dc04     46 52 45 51 
2dc08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc0c     46 52 45 51 
2dc10     46 52 45 51 
2dc14     46 52 45 51 
2dc18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc1c     46 52 45 51 
2dc20     46 52 45 51 
2dc24     46 52 45 51 
2dc28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc2c     46 52 45 51 
2dc30     46 52 45 51 
2dc34     46 52 45 51 
2dc38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc3c     46 52 45 51 
2dc40     46 52 45 51 
2dc44     46 52 45 51 
2dc48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc4c     46 52 45 51 
2dc50     46 52 45 51 
2dc54     46 52 45 51 
2dc58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc5c     46 52 45 51 
2dc60     46 52 45 51 
2dc64     46 52 45 51 
2dc68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc6c     46 52 45 51 
2dc70     46 52 45 51 
2dc74     46 52 45 51 
2dc78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc7c     46 52 45 51 
2dc80     46 52 45 51 
2dc84     46 52 45 51 
2dc88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc8c     46 52 45 51 
2dc90     46 52 45 51 
2dc94     46 52 45 51 
2dc98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dc9c     46 52 45 51 
2dca0     46 52 45 51 
2dca4     46 52 45 51 
2dca8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dcac     46 52 45 51 
2dcb0     46 52 45 51 
2dcb4     46 52 45 51 
2dcb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dcbc     46 52 45 51 
2dcc0     46 52 45 51 
2dcc4     46 52 45 51 
2dcc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dccc     46 52 45 51 
2dcd0     46 52 45 51 
2dcd4     46 52 45 51 
2dcd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dcdc     46 52 45 51 
2dce0     46 52 45 51 
2dce4     46 52 45 51 
2dce8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dcec     46 52 45 51 
2dcf0     46 52 45 51 
2dcf4     46 52 45 51 
2dcf8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dcfc     46 52 45 51 
2dd00     46 52 45 51 
2dd04     46 52 45 51 
2dd08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd0c     46 52 45 51 
2dd10     46 52 45 51 
2dd14     46 52 45 51 
2dd18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd1c     46 52 45 51 
2dd20     46 52 45 51 
2dd24     46 52 45 51 
2dd28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd2c     46 52 45 51 
2dd30     46 52 45 51 
2dd34     46 52 45 51 
2dd38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd3c     46 52 45 51 
2dd40     46 52 45 51 
2dd44     46 52 45 51 
2dd48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd4c     46 52 45 51 
2dd50     46 52 45 51 
2dd54     46 52 45 51 
2dd58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd5c     46 52 45 51 
2dd60     46 52 45 51 
2dd64     46 52 45 51 
2dd68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd6c     46 52 45 51 
2dd70     46 52 45 51 
2dd74     46 52 45 51 
2dd78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd7c     46 52 45 51 
2dd80     46 52 45 51 
2dd84     46 52 45 51 
2dd88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd8c     46 52 45 51 
2dd90     46 52 45 51 
2dd94     46 52 45 51 
2dd98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dd9c     46 52 45 51 
2dda0     46 52 45 51 
2dda4     46 52 45 51 
2dda8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2ddac     46 52 45 51 
2ddb0     46 52 45 51 
2ddb4     46 52 45 51 
2ddb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2ddbc     46 52 45 51 
2ddc0     46 52 45 51 
2ddc4     46 52 45 51 
2ddc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2ddcc     46 52 45 51 
2ddd0     46 52 45 51 
2ddd4     46 52 45 51 
2ddd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dddc     46 52 45 51 
2dde0     46 52 45 51 
2dde4     46 52 45 51 
2dde8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2ddec     46 52 45 51 
2ddf0     46 52 45 51 
2ddf4     46 52 45 51 
2ddf8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2ddfc     46 52 45 51 
2de00     46 52 45 51 
2de04     46 52 45 51 
2de08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de0c     46 52 45 51 
2de10     46 52 45 51 
2de14     46 52 45 51 
2de18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de1c     46 52 45 51 
2de20     46 52 45 51 
2de24     46 52 45 51 
2de28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de2c     46 52 45 51 
2de30     46 52 45 51 
2de34     46 52 45 51 
2de38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de3c     46 52 45 51 
2de40     46 52 45 51 
2de44     46 52 45 51 
2de48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de4c     46 52 45 51 
2de50     46 52 45 51 
2de54     46 52 45 51 
2de58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de5c     46 52 45 51 
2de60     46 52 45 51 
2de64     46 52 45 51 
2de68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de6c     46 52 45 51 
2de70     46 52 45 51 
2de74     46 52 45 51 
2de78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de7c     46 52 45 51 
2de80     46 52 45 51 
2de84     46 52 45 51 
2de88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de8c     46 52 45 51 
2de90     46 52 45 51 
2de94     46 52 45 51 
2de98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2de9c     46 52 45 51 
2dea0     46 52 45 51 
2dea4     46 52 45 51 
2dea8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2deac     46 52 45 51 
2deb0     46 52 45 51 
2deb4     46 52 45 51 
2deb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2debc     46 52 45 51 
2dec0     46 52 45 51 
2dec4     46 52 45 51 
2dec8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2decc     46 52 45 51 
2ded0     46 52 45 51 
2ded4     46 52 45 51 
2ded8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dedc     46 52 45 51 
2dee0     46 52 45 51 
2dee4     46 52 45 51 
2dee8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2deec     46 52 45 51 
2def0     46 52 45 51 
2def4     46 52 45 51 
2def8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2defc     46 52 45 51 
2df00     46 52 45 51 
2df04     46 52 45 51 
2df08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df0c     46 52 45 51 
2df10     46 52 45 51 
2df14     46 52 45 51 
2df18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df1c     46 52 45 51 
2df20     46 52 45 51 
2df24     46 52 45 51 
2df28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df2c     46 52 45 51 
2df30     46 52 45 51 
2df34     46 52 45 51 
2df38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df3c     46 52 45 51 
2df40     46 52 45 51 
2df44     46 52 45 51 
2df48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df4c     46 52 45 51 
2df50     46 52 45 51 
2df54     46 52 45 51 
2df58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df5c     46 52 45 51 
2df60     46 52 45 51 
2df64     46 52 45 51 
2df68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df6c     46 52 45 51 
2df70     46 52 45 51 
2df74     46 52 45 51 
2df78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df7c     46 52 45 51 
2df80     46 52 45 51 
2df84     46 52 45 51 
2df88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df8c     46 52 45 51 
2df90     46 52 45 51 
2df94     46 52 45 51 
2df98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2df9c     46 52 45 51 
2dfa0     46 52 45 51 
2dfa4     46 52 45 51 
2dfa8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dfac     46 52 45 51 
2dfb0     46 52 45 51 
2dfb4     46 52 45 51 
2dfb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dfbc     46 52 45 51 
2dfc0     46 52 45 51 
2dfc4     46 52 45 51 
2dfc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dfcc     46 52 45 51 
2dfd0     46 52 45 51 
2dfd4     46 52 45 51 
2dfd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dfdc     46 52 45 51 
2dfe0     46 52 45 51 
2dfe4     46 52 45 51 
2dfe8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dfec     46 52 45 51 
2dff0     46 52 45 51 
2dff4     46 52 45 51 
2dff8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2dffc     46 52 45 51 
2e000     46 52 45 51 
2e004     46 52 45 51 
2e008     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e00c     46 52 45 51 
2e010     46 52 45 51 
2e014     46 52 45 51 
2e018     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e01c     46 52 45 51 
2e020     46 52 45 51 
2e024     46 52 45 51 
2e028     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e02c     46 52 45 51 
2e030     46 52 45 51 
2e034     46 52 45 51 
2e038     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e03c     46 52 45 51 
2e040     46 52 45 51 
2e044     46 52 45 51 
2e048     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e04c     46 52 45 51 
2e050     46 52 45 51 
2e054     46 52 45 51 
2e058     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e05c     46 52 45 51 
2e060     46 52 45 51 
2e064     46 52 45 51 
2e068     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e06c     46 52 45 51 
2e070     46 52 45 51 
2e074     46 52 45 51 
2e078     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e07c     46 52 45 51 
2e080     46 52 45 51 
2e084     46 52 45 51 
2e088     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e08c     46 52 45 51 
2e090     46 52 45 51 
2e094     46 52 45 51 
2e098     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e09c     46 52 45 51 
2e0a0     46 52 45 51 
2e0a4     46 52 45 51 
2e0a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0ac     46 52 45 51 
2e0b0     46 52 45 51 
2e0b4     46 52 45 51 
2e0b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0bc     46 52 45 51 
2e0c0     46 52 45 51 
2e0c4     46 52 45 51 
2e0c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0cc     46 52 45 51 
2e0d0     46 52 45 51 
2e0d4     46 52 45 51 
2e0d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0dc     46 52 45 51 
2e0e0     46 52 45 51 
2e0e4     46 52 45 51 
2e0e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0ec     46 52 45 51 
2e0f0     46 52 45 51 
2e0f4     46 52 45 51 
2e0f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e0fc     46 52 45 51 
2e100     46 52 45 51 
2e104     46 52 45 51 
2e108     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e10c     46 52 45 51 
2e110     46 52 45 51 
2e114     46 52 45 51 
2e118     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e11c     46 52 45 51 
2e120     46 52 45 51 
2e124     46 52 45 51 
2e128     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e12c     46 52 45 51 
2e130     46 52 45 51 
2e134     46 52 45 51 
2e138     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e13c     46 52 45 51 
2e140     46 52 45 51 
2e144     46 52 45 51 
2e148     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e14c     46 52 45 51 
2e150     46 52 45 51 
2e154     46 52 45 51 
2e158     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e15c     46 52 45 51 
2e160     46 52 45 51 
2e164     46 52 45 51 
2e168     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e16c     46 52 45 51 
2e170     46 52 45 51 
2e174     46 52 45 51 
2e178     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e17c     46 52 45 51 
2e180     46 52 45 51 
2e184     46 52 45 51 
2e188     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e18c     46 52 45 51 
2e190     46 52 45 51 
2e194     46 52 45 51 
2e198     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e19c     46 52 45 51 
2e1a0     46 52 45 51 
2e1a4     46 52 45 51 
2e1a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1ac     46 52 45 51 
2e1b0     46 52 45 51 
2e1b4     46 52 45 51 
2e1b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1bc     46 52 45 51 
2e1c0     46 52 45 51 
2e1c4     46 52 45 51 
2e1c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1cc     46 52 45 51 
2e1d0     46 52 45 51 
2e1d4     46 52 45 51 
2e1d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1dc     46 52 45 51 
2e1e0     46 52 45 51 
2e1e4     46 52 45 51 
2e1e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1ec     46 52 45 51 
2e1f0     46 52 45 51 
2e1f4     46 52 45 51 
2e1f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e1fc     46 52 45 51 
2e200     46 52 45 51 
2e204     46 52 45 51 
2e208     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e20c     46 52 45 51 
2e210     46 52 45 51 
2e214     46 52 45 51 
2e218     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e21c     46 52 45 51 
2e220     46 52 45 51 
2e224     46 52 45 51 
2e228     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e22c     46 52 45 51 
2e230     46 52 45 51 
2e234     46 52 45 51 
2e238     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e23c     46 52 45 51 
2e240     46 52 45 51 
2e244     46 52 45 51 
2e248     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e24c     46 52 45 51 
2e250     46 52 45 51 
2e254     46 52 45 51 
2e258     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e25c     46 52 45 51 
2e260     46 52 45 51 
2e264     46 52 45 51 
2e268     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e26c     46 52 45 51 
2e270     46 52 45 51 
2e274     46 52 45 51 
2e278     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e27c     46 52 45 51 
2e280     46 52 45 51 
2e284     46 52 45 51 
2e288     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e28c     46 52 45 51 
2e290     46 52 45 51 
2e294     46 52 45 51 
2e298     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e29c     46 52 45 51 
2e2a0     46 52 45 51 
2e2a4     46 52 45 51 
2e2a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2ac     46 52 45 51 
2e2b0     46 52 45 51 
2e2b4     46 52 45 51 
2e2b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2bc     46 52 45 51 
2e2c0     46 52 45 51 
2e2c4     46 52 45 51 
2e2c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2cc     46 52 45 51 
2e2d0     46 52 45 51 
2e2d4     46 52 45 51 
2e2d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2dc     46 52 45 51 
2e2e0     46 52 45 51 
2e2e4     46 52 45 51 
2e2e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2ec     46 52 45 51 
2e2f0     46 52 45 51 
2e2f4     46 52 45 51 
2e2f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e2fc     46 52 45 51 
2e300     46 52 45 51 
2e304     46 52 45 51 
2e308     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e30c     46 52 45 51 
2e310     46 52 45 51 
2e314     46 52 45 51 
2e318     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e31c     46 52 45 51 
2e320     46 52 45 51 
2e324     46 52 45 51 
2e328     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e32c     46 52 45 51 
2e330     46 52 45 51 
2e334     46 52 45 51 
2e338     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e33c     46 52 45 51 
2e340     46 52 45 51 
2e344     46 52 45 51 
2e348     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e34c     46 52 45 51 
2e350     46 52 45 51 
2e354     46 52 45 51 
2e358     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e35c     46 52 45 51 
2e360     46 52 45 51 
2e364     46 52 45 51 
2e368     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e36c     46 52 45 51 
2e370     46 52 45 51 
2e374     46 52 45 51 
2e378     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e37c     46 52 45 51 
2e380     46 52 45 51 
2e384     46 52 45 51 
2e388     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e38c     46 52 45 51 
2e390     46 52 45 51 
2e394     46 52 45 51 
2e398     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e39c     46 52 45 51 
2e3a0     46 52 45 51 
2e3a4     46 52 45 51 
2e3a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3ac     46 52 45 51 
2e3b0     46 52 45 51 
2e3b4     46 52 45 51 
2e3b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3bc     46 52 45 51 
2e3c0     46 52 45 51 
2e3c4     46 52 45 51 
2e3c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3cc     46 52 45 51 
2e3d0     46 52 45 51 
2e3d4     46 52 45 51 
2e3d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3dc     46 52 45 51 
2e3e0     46 52 45 51 
2e3e4     46 52 45 51 
2e3e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3ec     46 52 45 51 
2e3f0     46 52 45 51 
2e3f4     46 52 45 51 
2e3f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e3fc     46 52 45 51 
2e400     46 52 45 51 
2e404     46 52 45 51 
2e408     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e40c     46 52 45 51 
2e410     46 52 45 51 
2e414     46 52 45 51 
2e418     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e41c     46 52 45 51 
2e420     46 52 45 51 
2e424     46 52 45 51 
2e428     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e42c     46 52 45 51 
2e430     46 52 45 51 
2e434     46 52 45 51 
2e438     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e43c     46 52 45 51 
2e440     46 52 45 51 
2e444     46 52 45 51 
2e448     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e44c     46 52 45 51 
2e450     46 52 45 51 
2e454     46 52 45 51 
2e458     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e45c     46 52 45 51 
2e460     46 52 45 51 
2e464     46 52 45 51 
2e468     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e46c     46 52 45 51 
2e470     46 52 45 51 
2e474     46 52 45 51 
2e478     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e47c     46 52 45 51 
2e480     46 52 45 51 
2e484     46 52 45 51 
2e488     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e48c     46 52 45 51 
2e490     46 52 45 51 
2e494     46 52 45 51 
2e498     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e49c     46 52 45 51 
2e4a0     46 52 45 51 
2e4a4     46 52 45 51 
2e4a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4ac     46 52 45 51 
2e4b0     46 52 45 51 
2e4b4     46 52 45 51 
2e4b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4bc     46 52 45 51 
2e4c0     46 52 45 51 
2e4c4     46 52 45 51 
2e4c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4cc     46 52 45 51 
2e4d0     46 52 45 51 
2e4d4     46 52 45 51 
2e4d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4dc     46 52 45 51 
2e4e0     46 52 45 51 
2e4e4     46 52 45 51 
2e4e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4ec     46 52 45 51 
2e4f0     46 52 45 51 
2e4f4     46 52 45 51 
2e4f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e4fc     46 52 45 51 
2e500     46 52 45 51 
2e504     46 52 45 51 
2e508     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e50c     46 52 45 51 
2e510     46 52 45 51 
2e514     46 52 45 51 
2e518     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e51c     46 52 45 51 
2e520     46 52 45 51 
2e524     46 52 45 51 
2e528     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e52c     46 52 45 51 
2e530     46 52 45 51 
2e534     46 52 45 51 
2e538     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e53c     46 52 45 51 
2e540     46 52 45 51 
2e544     46 52 45 51 
2e548     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2e54c                 | 
2e54c     00 00 00 00 
2e550     18 00 00 00 
2e554     31 00 00 00 
2e558     4A 00 00 00 | vibratoWaveform  long  0,    24,   49,   74,   97,   120,  141,  161
2e55c     61 00 00 00 
2e560     78 00 00 00 
2e564     8D 00 00 00 
2e568     A1 00 00 00 | 	byte	$61, $00, $00, $00, $78, $00, $00, $00, $8d, $00, $00, $00, $a1, $00, $00, $00
2e56c     B4 00 00 00 
2e570     C5 00 00 00 
2e574     D4 00 00 00 
2e578     E0 00 00 00 |                  long  180,  197,  212,  224,  235,  244,  250,  253
2e57c     EB 00 00 00 
2e580     F4 00 00 00 
2e584     FA 00 00 00 
2e588     FD 00 00 00 | 	byte	$eb, $00, $00, $00, $f4, $00, $00, $00, $fa, $00, $00, $00, $fd, $00, $00, $00
2e58c     FF 00 00 00 
2e590     FD 00 00 00 
2e594     FA 00 00 00 
2e598     F4 00 00 00 |                  long  255,  253,  250,  244,  235,  224,  212,  197
2e59c     EB 00 00 00 
2e5a0     E0 00 00 00 
2e5a4     D4 00 00 00 
2e5a8     C5 00 00 00 | 	byte	$eb, $00, $00, $00, $e0, $00, $00, $00, $d4, $00, $00, $00, $c5, $00, $00, $00
2e5ac     B4 00 00 00 
2e5b0     A1 00 00 00 
2e5b4     8D 00 00 00 
2e5b8     78 00 00 00 |                  long  180,  161,  141,  120,  97,   74,   49,   24
2e5bc     61 00 00 00 
2e5c0     4A 00 00 00 
2e5c4     31 00 00 00 
2e5c8     18 00 00 00 | 	byte	$61, $00, $00, $00, $4a, $00, $00, $00, $31, $00, $00, $00, $18, $00, $00, $00
2e5cc     00 00 00 00 
2e5d0     E8 FF FF FF 
2e5d4     CF FF FF FF 
2e5d8     B6 FF FF FF |                  long  0,   -24,  -49,  -74,  -97,  -120, -141, -161
2e5dc     9F FF FF FF 
2e5e0     88 FF FF FF 
2e5e4     73 FF FF FF 
2e5e8     5F FF FF FF | 	byte	$9f, $ff, $ff, $ff, $88, $ff, $ff, $ff, $73, $ff, $ff, $ff, $5f, $ff, $ff, $ff
2e5ec     4C FF FF FF 
2e5f0     3B FF FF FF 
2e5f4     2C FF FF FF 
2e5f8     20 FF FF FF |                  long -180, -197, -212, -224, -235, -244, -250, -253
2e5fc     15 FF FF FF 
2e600     0C FF FF FF 
2e604     06 FF FF FF 
2e608     03 FF FF FF | 	byte	$15, $ff, $ff, $ff, $0c, $ff, $ff, $ff, $06, $ff, $ff, $ff, $03, $ff, $ff, $ff
2e60c     01 FF FF FF 
2e610     03 FF FF FF 
2e614     06 FF FF FF 
2e618     0C FF FF FF |                  long -255, -253, -250, -244, -235, -224, -212, -197
2e61c     15 FF FF FF 
2e620     20 FF FF FF 
2e624     2C FF FF FF 
2e628     3B FF FF FF | 	byte	$15, $ff, $ff, $ff, $20, $ff, $ff, $ff, $2c, $ff, $ff, $ff, $3b, $ff, $ff, $ff
2e62c     4C FF FF FF 
2e630     5F FF FF FF 
2e634     73 FF FF FF 
2e638     88 FF FF FF |                  long -180, -161, -141, -120, -97,  -74,  -49,  -24
2e63c     9F FF FF FF 
2e640     B6 FF FF FF 
2e644     CF FF FF FF 
2e648     E8 FF FF FF | 	byte	$9f, $ff, $ff, $ff, $b6, $ff, $ff, $ff, $cf, $ff, $ff, $ff, $e8, $ff, $ff, $ff
2e64c                 | 
2e64c     58 03 28 03 
2e650     FA 02 D0 02 
2e654     A6 02 80 02 
2e658     5C 02 3A 02 | periodTable      word  856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480 , 453 ' C1
2e65c     1A 02 FC 01 
2e660     E0 01 C5 01 | 	byte	$1a, $02, $fc, $01, $e0, $01, $c5, $01
2e664     AC 01 94 01 
2e668     7D 01 68 01 
2e66c     53 01 40 01 
2e670     2E 01 1D 01 |                  word  428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240 , 226 ' C2
2e674     0D 01 FE 00 
2e678     F0 00 E2 00 | 	byte	$0d, $01, $fe, $00, $f0, $00, $e2, $00
2e67c     D6 00 CA 00 
2e680     BE 00 B4 00 
2e684     AA 00 A0 00 
2e688     97 00 8F 00 |                  word  214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120 , 113 ' C3
2e68c     87 00 7F 00 
2e690     78 00 71 00 | 	byte	$87, $00, $7f, $00, $78, $00, $71, $00
2e694     6B 00 22 03 
2e698     F5 02 CB 02 
2e69c     A2 02 7D 02 
2e6a0     59 02 37 02 |                  word  107 , 802 , 757 , 715 , 674 , 637 , 601 , 567 , 535 , 505 , 477 , 450
2e6a4     17 02 F9 01 
2e6a8     DD 01 C2 01 | 	byte	$17, $02, $f9, $01, $dd, $01, $c2, $01
2e6ac     A9 01 91 01 
2e6b0     7B 01 65 01 
2e6b4     51 01 3E 01 
2e6b8     2C 01 1C 01 |                  word  425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 239 , 225
2e6bc     0C 01 FD 00 
2e6c0     EF 00 E1 00 | 	byte	$0c, $01, $fd, $00, $ef, $00, $e1, $00
2e6c4     D5 00 C9 00 
2e6c8     BD 00 B3 00 
2e6cc     A9 00 9F 00 
2e6d0     96 00 8E 00 |                  word  213 , 201 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119 , 113
2e6d4     86 00 7E 00 
2e6d8     77 00 71 00 | 	byte	$86, $00, $7e, $00, $77, $00, $71, $00
2e6dc     4C 03 1C 03 
2e6e0     F0 02 C5 02 
2e6e4     9E 02 78 02 
2e6e8     55 02 33 02 |                  word  844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474 , 447
2e6ec     14 02 F6 01 
2e6f0     DA 01 BF 01 | 	byte	$14, $02, $f6, $01, $da, $01, $bf, $01
2e6f4     A6 01 8E 01 
2e6f8     78 01 63 01 
2e6fc     4F 01 3C 01 
2e700     2A 01 1A 01 |                  word  422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237 , 224
2e704     0A 01 FB 00 
2e708     ED 00 E0 00 | 	byte	$0a, $01, $fb, $00, $ed, $00, $e0, $00
2e70c     D3 00 C7 00 
2e710     BC 00 B1 00 
2e714     A7 00 9E 00 
2e718     95 00 8D 00 |                  word  211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118 , 112
2e71c     85 00 7D 00 
2e720     76 00 70 00 | 	byte	$85, $00, $7d, $00, $76, $00, $70, $00
2e724     46 03 17 03 
2e728     EA 02 C0 02 
2e72c     99 02 74 02 
2e730     50 02 2F 02 |                  word  838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470 , 444
2e734     10 02 F2 01 
2e738     D6 01 BC 01 | 	byte	$10, $02, $f2, $01, $d6, $01, $bc, $01
2e73c     A3 01 8B 01 
2e740     75 01 60 01 
2e744     4C 01 3A 01 
2e748     28 01 18 01 |                  word  419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235 , 222
2e74c     08 01 F9 00 
2e750     EB 00 DE 00 | 	byte	$08, $01, $f9, $00, $eb, $00, $de, $00
2e754     D1 00 C6 00 
2e758     BB 00 B0 00 
2e75c     A6 00 9D 00 
2e760     94 00 8C 00 |                  word  209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118 , 111
2e764     84 00 7D 00 
2e768     76 00 6F 00 | 	byte	$84, $00, $7d, $00, $76, $00, $6f, $00
2e76c     40 03 11 03 
2e770     E5 02 BB 02 
2e774     94 02 6F 02 
2e778     4C 02 2B 02 |                  word  832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 495 , 467 , 441
2e77c     0C 02 EF 01 
2e780     D3 01 B9 01 | 	byte	$0c, $02, $ef, $01, $d3, $01, $b9, $01
2e784     A0 01 88 01 
2e788     72 01 5E 01 
2e78c     4A 01 38 01 
2e790     26 01 16 01 |                  word  416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233 , 220
2e794     06 01 F7 00 
2e798     E9 00 DC 00 | 	byte	$06, $01, $f7, $00, $e9, $00, $dc, $00
2e79c     D0 00 C4 00 
2e7a0     B9 00 AF 00 
2e7a4     A5 00 9C 00 
2e7a8     93 00 8B 00 |                  word  208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 124 , 117 , 110
2e7ac     83 00 7C 00 
2e7b0     75 00 6E 00 | 	byte	$83, $00, $7c, $00, $75, $00, $6e, $00
2e7b4     3A 03 0B 03 
2e7b8     E0 02 B6 02 
2e7bc     8F 02 6B 02 
2e7c0     48 02 27 02 |                  word  826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463 , 437
2e7c4     08 02 EB 01 
2e7c8     CF 01 B5 01 | 	byte	$08, $02, $eb, $01, $cf, $01, $b5, $01
2e7cc     9D 01 86 01 
2e7d0     70 01 5B 01 
2e7d4     48 01 35 01 
2e7d8     24 01 14 01 |                  word  413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232 , 219
2e7dc     04 01 F5 00 
2e7e0     E8 00 DB 00 | 	byte	$04, $01, $f5, $00, $e8, $00, $db, $00
2e7e4     CE 00 C3 00 
2e7e8     B8 00 AE 00 
2e7ec     A4 00 9B 00 
2e7f0     92 00 8A 00 |                  word  206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116 , 109
2e7f4     82 00 7B 00 
2e7f8     74 00 6D 00 | 	byte	$82, $00, $7b, $00, $74, $00, $6d, $00
2e7fc     34 03 06 03 
2e800     DA 02 B1 02 
2e804     8B 02 66 02 
2e808     44 02 23 02 |                  word  820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460 , 434
2e80c     04 02 E7 01 
2e810     CC 01 B2 01 | 	byte	$04, $02, $e7, $01, $cc, $01, $b2, $01
2e814     9A 01 83 01 
2e818     6D 01 59 01 
2e81c     45 01 33 01 
2e820     22 01 12 01 |                  word  410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230 , 217
2e824     02 01 F4 00 
2e828     E6 00 D9 00 | 	byte	$02, $01, $f4, $00, $e6, $00, $d9, $00
2e82c     CD 00 C1 00 
2e830     B7 00 AC 00 
2e834     A3 00 9A 00 
2e838     91 00 89 00 |                  word  205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115 , 109
2e83c     81 00 7A 00 
2e840     73 00 6D 00 | 	byte	$81, $00, $7a, $00, $73, $00, $6d, $00
2e844     2E 03 00 03 
2e848     D5 02 AC 02 
2e84c     86 02 62 02 
2e850     3F 02 1F 02 |                  word  814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457 , 431
2e854     01 02 E4 01 
2e858     C9 01 AF 01 | 	byte	$01, $02, $e4, $01, $c9, $01, $af, $01
2e85c     97 01 80 01 
2e860     6B 01 56 01 
2e864     43 01 31 01 
2e868     20 01 10 01 |                  word  407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228 , 216
2e86c     00 01 F2 00 
2e870     E4 00 D8 00 | 	byte	$00, $01, $f2, $00, $e4, $00, $d8, $00
2e874     CC 00 C0 00 
2e878     B5 00 AB 00 
2e87c     A1 00 98 00 
2e880     90 00 88 00 |                  word  204 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114 , 108
2e884     80 00 79 00 
2e888     72 00 6C 00 | 	byte	$80, $00, $79, $00, $72, $00, $6c, $00
2e88c     8B 03 58 03 
2e890     28 03 FA 02 
2e894     D0 02 A6 02 
2e898     80 02 5C 02 |                  word  907 , 856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480
2e89c     3A 02 1A 02 
2e8a0     FC 01 E0 01 | 	byte	$3a, $02, $1a, $02, $fc, $01, $e0, $01
2e8a4     C5 01 AC 01 
2e8a8     94 01 7D 01 
2e8ac     68 01 53 01 
2e8b0     40 01 2E 01 |                  word  453 , 428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240
2e8b4     1D 01 0D 01 
2e8b8     FE 00 F0 00 | 	byte	$1d, $01, $0d, $01, $fe, $00, $f0, $00
2e8bc     E2 00 D6 00 
2e8c0     CA 00 BE 00 
2e8c4     B4 00 AA 00 
2e8c8     A0 00 97 00 |                  word  226 , 214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120
2e8cc     8F 00 87 00 
2e8d0     7F 00 78 00 | 	byte	$8f, $00, $87, $00, $7f, $00, $78, $00
2e8d4     84 03 52 03 
2e8d8     22 03 F5 02 
2e8dc     CB 02 A3 02 
2e8e0     7C 02 59 02 |                  word  900 , 850 , 802 , 757 , 715 , 675 , 636 , 601 , 567 , 535 , 505 , 477
2e8e4     37 02 17 02 
2e8e8     F9 01 DD 01 | 	byte	$37, $02, $17, $02, $f9, $01, $dd, $01
2e8ec     C2 01 A9 01 
2e8f0     91 01 7B 01 
2e8f4     65 01 51 01 
2e8f8     3E 01 2C 01 |                  word  450 , 425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 238
2e8fc     1C 01 0C 01 
2e900     FD 00 EE 00 | 	byte	$1c, $01, $0c, $01, $fd, $00, $ee, $00
2e904     E1 00 D4 00 
2e908     C8 00 BD 00 
2e90c     B3 00 A9 00 
2e910     9F 00 96 00 |                  word  225 , 212 , 200 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119
2e914     8E 00 86 00 
2e918     7E 00 77 00 | 	byte	$8e, $00, $86, $00, $7e, $00, $77, $00
2e91c     7E 03 4C 03 
2e920     1C 03 F0 02 
2e924     C5 02 9E 02 
2e928     78 02 55 02 |                  word  894 , 844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474
2e92c     33 02 14 02 
2e930     F6 01 DA 01 | 	byte	$33, $02, $14, $02, $f6, $01, $da, $01
2e934     BF 01 A6 01 
2e938     8E 01 78 01 
2e93c     63 01 4F 01 
2e940     3C 01 2A 01 |                  word  447 , 422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237
2e944     1A 01 0A 01 
2e948     FB 00 ED 00 | 	byte	$1a, $01, $0a, $01, $fb, $00, $ed, $00
2e94c     DF 00 D3 00 
2e950     C7 00 BC 00 
2e954     B1 00 A7 00 
2e958     9E 00 95 00 |                  word  223 , 211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118
2e95c     8D 00 85 00 
2e960     7D 00 76 00 | 	byte	$8d, $00, $85, $00, $7d, $00, $76, $00
2e964     77 03 46 03 
2e968     17 03 EA 02 
2e96c     C0 02 99 02 
2e970     74 02 50 02 |                  word  887 , 838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470
2e974     2F 02 10 02 
2e978     F2 01 D6 01 | 	byte	$2f, $02, $10, $02, $f2, $01, $d6, $01
2e97c     BC 01 A3 01 
2e980     8B 01 75 01 
2e984     60 01 4C 01 
2e988     3A 01 28 01 |                  word  444 , 419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235
2e98c     18 01 08 01 
2e990     F9 00 EB 00 | 	byte	$18, $01, $08, $01, $f9, $00, $eb, $00
2e994     DE 00 D1 00 
2e998     C6 00 BB 00 
2e99c     B0 00 A6 00 
2e9a0     9D 00 94 00 |                  word  222 , 209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118
2e9a4     8C 00 84 00 
2e9a8     7D 00 76 00 | 	byte	$8c, $00, $84, $00, $7d, $00, $76, $00
2e9ac     71 03 40 03 
2e9b0     11 03 E5 02 
2e9b4     BB 02 94 02 
2e9b8     6F 02 4C 02 |                  word  881 , 832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 494 , 467
2e9bc     2B 02 0C 02 
2e9c0     EE 01 D3 01 | 	byte	$2b, $02, $0c, $02, $ee, $01, $d3, $01
2e9c4     B9 01 A0 01 
2e9c8     88 01 72 01 
2e9cc     5E 01 4A 01 
2e9d0     38 01 26 01 |                  word  441 , 416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233
2e9d4     16 01 06 01 
2e9d8     F7 00 E9 00 | 	byte	$16, $01, $06, $01, $f7, $00, $e9, $00
2e9dc     DC 00 D0 00 
2e9e0     C4 00 B9 00 
2e9e4     AF 00 A5 00 
2e9e8     9C 00 93 00 |                  word  220 , 208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 123 , 117
2e9ec     8B 00 83 00 
2e9f0     7B 00 75 00 | 	byte	$8b, $00, $83, $00, $7b, $00, $75, $00
2e9f4     6B 03 3A 03 
2e9f8     0B 03 E0 02 
2e9fc     B6 02 8F 02 
2ea00     6B 02 48 02 |                  word  875 , 826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463
2ea04     27 02 08 02 
2ea08     EB 01 CF 01 | 	byte	$27, $02, $08, $02, $eb, $01, $cf, $01
2ea0c     B5 01 9D 01 
2ea10     86 01 70 01 
2ea14     5B 01 48 01 
2ea18     35 01 24 01 |                  word  437 , 413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232
2ea1c     14 01 04 01 
2ea20     F5 00 E8 00 | 	byte	$14, $01, $04, $01, $f5, $00, $e8, $00
2ea24     DB 00 CE 00 
2ea28     C3 00 B8 00 
2ea2c     AE 00 A4 00 
2ea30     9B 00 92 00 |                  word  219 , 206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116
2ea34     8A 00 82 00 
2ea38     7B 00 74 00 | 	byte	$8a, $00, $82, $00, $7b, $00, $74, $00
2ea3c     64 03 34 03 
2ea40     06 03 DA 02 
2ea44     B1 02 8B 02 
2ea48     66 02 44 02 |                  word  868 , 820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460
2ea4c     23 02 04 02 
2ea50     E7 01 CC 01 | 	byte	$23, $02, $04, $02, $e7, $01, $cc, $01
2ea54     B2 01 9A 01 
2ea58     83 01 6D 01 
2ea5c     59 01 45 01 
2ea60     33 01 22 01 |                  word  434 , 410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230
2ea64     12 01 02 01 
2ea68     F4 00 E6 00 | 	byte	$12, $01, $02, $01, $f4, $00, $e6, $00
2ea6c     D9 00 CD 00 
2ea70     C1 00 B7 00 
2ea74     AC 00 A3 00 
2ea78     9A 00 91 00 |                  word  217 , 205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115
2ea7c     89 00 81 00 
2ea80     7A 00 73 00 | 	byte	$89, $00, $81, $00, $7a, $00, $73, $00
2ea84     5E 03 2E 03 
2ea88     00 03 D5 02 
2ea8c     AC 02 86 02 
2ea90     62 02 3F 02 |                  word  862 , 814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457
2ea94     1F 02 01 02 
2ea98     E4 01 C9 01 | 	byte	$1f, $02, $01, $02, $e4, $01, $c9, $01
2ea9c     AF 01 97 01 
2eaa0     80 01 6B 01 
2eaa4     56 01 43 01 
2eaa8     31 01 20 01 |                  word  431 , 407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228
2eaac     10 01 00 01 
2eab0     F2 00 E4 00 | 	byte	$10, $01, $00, $01, $f2, $00, $e4, $00
2eab4     D8 00 CB 00 
2eab8     C0 00 B5 00 
2eabc     AB 00 A1 00 
2eac0     98 00 90 00 |                  word  216 , 203 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114
2eac4     88 00 80 00 
2eac8     79 00 72 00 | 	byte	$88, $00, $80, $00, $79, $00, $72, $00
2eacc                 | 	alignl
2eacc                 | _audio019_spin2_dat_
2eacc                 | 
2eacc                 | audio       org     0
2eacc     00 F2 07 F6 | 			mov     ptrb,#0
2ead0     08 7A 05 FC |             wrpin   dac,#left       ' Noise dither DACs at clk/90
2ead4     08 C8 1C FC |             wxpin   #100,#left
2ead8     09 7A 05 FC |             wrpin   dac,#right
2eadc     09 C8 1C FC |             wxpin   #100,#right
2eae0     41 90 64 FD |             dirh    #left addpins 1
2eae4     20 90 64 FD |             setse1  #%001<<6 + left ' Set the event - DAC empty
2eae8     75 E8 07 F6 |             mov     ijmp1,#isr1     ' Init the interrupt
2eaec     25 08 64 FD |             setint1 #4              ' Interrupt from DAC empty event
2eaf0                 |             
2eaf0                 | '---------------------------------------------------------------------------------        
2eaf0                 | '----------------- The main loop -------------------------------------------------
2eaf0                 | '---------------------------------------------------------------------------------
2eaf0                 | 
2eaf0     81 04 11 F2 | loop        cmp     time0,a21000000 wc  ' time counter overflow protection
2eaf4     10 00 90 CD |       if_c  jmp     #loop1
2eaf8                 |   
2eaf8     09 4A 05 F6 |             mov     cn,#9
2eafc     81 4A 8D F9 | p402        altd    cn,#a21000000
2eb00     80 00 80 F1 |             sub     0-0,a20000000
2eb04     FD 4B 6D FB |             djnz    cn,#p402
2eb08                 |     
2eb08     00 4A 05 F6 | loop1       mov     cn,#0             ' Find the channel to compute
2eb0c     83 4C 01 F6 |             mov     ct,time1           ' with the lowest next sample time
2eb10     84 4C 39 F3 |             fle     ct,time2 wcz       ' How to size-optimize this???
2eb14     01 4A 05 C6 |     if_c    mov     cn,#1
2eb18     85 4C 39 F3 |             fle     ct,time3 wcz
2eb1c     02 4A 05 C6 |     if_c    mov     cn,#2     
2eb20     86 4C 39 F3 |             fle     ct,time4 wcz
2eb24     03 4A 05 C6 |     if_c    mov     cn,#3
2eb28     87 4C 39 F3 |             fle     ct,time5 wcz
2eb2c     04 4A 05 C6 |     if_c    mov     cn,#4
2eb30     88 4C 39 F3 |             fle     ct,time6 wcz
2eb34     05 4A 05 C6 |     if_c    mov     cn,#5
2eb38     89 4C 39 F3 |             fle     ct,time7 wcz
2eb3c     06 4A 05 C6 |     if_c    mov     cn,#6
2eb40     8A 4C 39 F3 |             fle     ct,time8 wcz
2eb44     07 4A 05 C6 |     if_c    mov     cn,#7
2eb48                 | 
2eb48                 | 
2eb48                 | '----------------------------------------------------------------------------------
2eb48                 | '------------- Compute channel samples --------------------------------------------
2eb48                 | '----------------------------------------------------------------------------------
2eb48                 | 
2eb48                 | 
2eb48     A5 20 01 F6 | p401        mov     channeladd,cn              ' todo: reset channel times to enable proper streamed stereo audio
2eb4c     05 20 65 F0 |             shl     channeladd,#5
2eb50     90 F0 03 F1 |             add     ptra,channeladd
2eb54                 | 
2eb54     28 0E 64 FD |             setq    #7               
2eb58     00 31 05 FB |             rdlong  pointer0,ptra
2eb5c                 |             
2eb5c     9D 46 39 F9 |      	    getword apan0,volpan0,#1           ' extract vol,pan,skip and freq from longs 
2eb60     9D 44 31 F9 |     	    getword avol0,volpan0,#0
2eb64     9E 42 39 F9 | 	        getword askip0,freqskip0,#1    	    
2eb68     9E 40 31 F9 | 	        getword afreq0,freqskip0,#0
2eb6c                 | 
2eb6c     83 4A 95 F9 |             alts    cn, #time1
2eb70     00 4E 01 F6 |             mov     dt0,0-0   
2eb74     82 4E 81 F1 |             sub     dt0,time0
2eb78                 | 
2eb78     83 4A 8D F9 |             altd    cn, #time1
2eb7c     A0 00 00 F1 |             add     0-0,afreq0  	
2eb80                 | 
2eb80     A1 30 01 F1 |             add     pointer0,askip0
2eb84     9C 30 19 F2 |             cmp     pointer0,lend0 wcz
2eb88     9C 30 81 31 |     if_ge   sub     pointer0,lend0	        
2eb8c     9B 30 01 31 |     if_ge   add     pointer0,lstart0       
2eb90     98 24 01 F6 |             mov     qq,pointer0
2eb94     9A 24 01 F1 |             add     qq,sstart0
2eb98                 | 
2eb98     1F 34 0D F4 |             testb   sstart0,#31 wz
2eb9c                 | 
2eb9c     92 26 C1 5A |     if_nz   rdbyte  spl,qq
2eba0     08 26 65 50 |     if_nz   shl     spl,#8
2eba4     92 26 E1 AA |     if_z    rdword  spl,qq
2eba8                 | 
2eba8     A2 26 31 FA |             scas    spl,avol0
2ebac     00 26 01 F6 |             mov     spl,0-0
2ebb0                 |  
2ebb0     A3 26 31 FA |             scas    spl,apan0
2ebb4     00 50 01 F6 |             mov     ls0,0-0
2ebb8                 |  
2ebb8     AD 4A 8D F9 |             altd    cn,#ls1
2ebbc     A8 00 00 F6 |             mov     0-0,ls0
2ebc0                 |              
2ebc0     20 00 00 FF 
2ebc4     00 24 05 F6 |             mov     qq,##16384
2ebc8     A3 24 81 F1 |             sub     qq,apan0
2ebcc     92 26 31 FA |             scas    spl,qq
2ebd0     00 52 01 F6 |             mov     rs0, 0-0
2ebd4                 | 
2ebd4     B5 4A 8D F9 |             altd    cn,#rs1
2ebd8     A9 00 00 F6 |             mov     0-0,rs0
2ebdc                 | 
2ebdc     A9 32 29 F9 |             setword sample0,rs0,#1
2ebe0     A8 32 21 F9 |             setword sample0,ls0,#0
2ebe4                 |             
2ebe4                 | 
2ebe4     1E 34 1D F4 |             bitl   sstart0, #30 wcz            
2ebe8     00 30 05 A6 |     if_z    mov    pointer0, #0  
2ebec     02 35 65 AC |     if_z    wrlong sstart0, ptra[2]
2ebf0     28 02 64 FD | p403        setq #1
2ebf4                 |      
2ebf4     00 31 65 FC |             wrlong  pointer0,ptra
2ebf8     90 F0 83 F1 |             sub     ptra, channeladd
2ebfc     00 00 90 FD |             jmp     #p101
2ec00                 |                        
2ec00                 |             
2ec00                 |           
2ec00                 |             
2ec00                 | '------------------------ Channels end here --------------------       
2ec00                 | 
2ec00                 | ' Now add all channels and put the sample to the buffer    
2ec00                 | 
2ec00                 | 
2ec00     82 48 09 F2 | p101        cmp     oldt0,time0 wz   ' There must not be 2 entries with the same time
2ec04     01 22 85 A1 |     if_z    sub     front,#1         ' 
2ec08     FF 23 05 A5 |     if_z    and     front,#511     
2ec0c                 |            
2ec0c                 |     
2ec0c     00 58 05 F6 |             mov     rs,#0            ' Mix all channels to rs and ls
2ec10     00 56 05 F6 |             mov     ls,#0
2ec14     B5 58 01 F1 |             add     rs,rs1
2ec18     B6 58 01 F1 |             add     rs,rs2            'todo: in channel computing, mov rs to oldrs, hrer sub oldrs, abb newrs
2ec1c     B7 58 01 F1 |             add     rs,rs3
2ec20     B8 58 01 F1 |             add     rs,rs4
2ec24     B9 58 01 F1 |             add     rs,rs5
2ec28     BA 58 01 F1 |             add     rs,rs6
2ec2c     BB 58 01 F1 |             add     rs,rs7
2ec30     BC 58 01 F1 |             add     rs,rs8
2ec34                 | 
2ec34                 |            
2ec34     AD 56 01 F1 |             add     ls,ls1
2ec38     AE 56 01 F1 |             add     ls,ls2
2ec3c     AF 56 01 F1 |             add     ls,ls3
2ec40     B0 56 01 F1 |             add     ls,ls4
2ec44     B1 56 01 F1 |             add     ls,ls5
2ec48     B2 56 01 F1 |             add     ls,ls6
2ec4c     B3 56 01 F1 |             add     ls,ls7
2ec50     B4 56 01 F1 |             add     ls,ls8
2ec54                 | 
2ec54                 |  		
2ec54     0F 56 E5 F4 |             bitnot  ls,#15            ' convert to unsigned. TODO: compute and apply the gain for samples to not exceed 16 bit range
2ec58     0F 58 E5 F4 |             bitnot  rs,#15		      ' and these with $FFFF if a filter should be applied
2ec5c                 | 		    
2ec5c     AB 58 29 F9 |             setword rs,ls,#1         ' Pack L and R to one long    		
2ec60     AC 16 01 F6 |             mov newsample, rs
2ec64                 | 
2ec64     82 48 01 F6 |             mov     oldt0,time0      ' update global time
2ec68     A7 04 01 F1 |             add     time0,dt0    
2ec6c                 | 
2ec6c                 |             
2ec6c                 |  
2ec6c                 |                                      ' now push dt0 samples to the buffer
2ec6c     00 4E 0D F2 |             cmp      dt0,#0 wz
2ec70     94 FE 9F AD |     if_z    jmp      #loop1
2ec74     A7 18 01 F6 |             mov      t1,dt0
2ec78                 |   
2ec78     F9 1B 01 F6 | p301        mov     t2,ptrb         ' Check if the buffer is full	
2ec7c     01 1A 85 F1 |             sub     t2,#1
2ec80     FF 1B 05 F5 |             and     t2,#511
2ec84     91 1A 19 F2 |             cmp     t2,front wcz
2ec88     EC FF 9F AD |     if_e    jmp     #p301    
2ec8c                 |     
2ec8c     91 16 31 FC |             wrlut   newsample, front
2ec90     01 22 05 F1 |             add     front,#1
2ec94     FF 23 05 F5 |             and     front,#511
2ec98     F7 19 6D FB |             djnz    t1,#p301
2ec9c                 |             
2ec9c     50 FE 9F FD |             jmp     #loop            'loop
2eca0                 | 
2eca0                 | '-------------------------------------------------------------------------
2eca0                 | '------------------ This is the end of the main loop ---------------------
2eca0                 | '-------------------------------------------------------------------------
2eca0                 | 
2eca0                 | '--------------------------------------------------------------------------
2eca0                 | '------ Interrupt service -------------------------------------------------
2eca0                 | '------ Output the sample, get the next one if exists ---------------------
2eca0                 | '--------------------------------------------------------------------------
2eca0                 | 
2eca0     08 28 25 FC | isr1        wypin   lsample,#left        '2     The sample has to be outputted every 100 cycles     
2eca4     09 2A 25 FC |             wypin   rsample,#right       '4
2eca8                 |            
2eca8     91 F2 1B F2 |             cmp     ptrb,front wcz       '6    If the buffer is empty, do nothing 
2ecac     F5 FF 3B AB |     if_e    reti1                        '8/10
2ecb0                 | 
2ecb0     E1 2D A5 FA |             rdlut   lsnext,ptrb++        '11    else read the sample and its time from LUT
2ecb4     96 2A 39 F9 |           	getword rsample,lsnext,#1    '13
2ecb8     96 28 31 F9 |           	getword lsample,lsnext,#0    '15
2ecbc     F5 FF 3B FB |             reti1                        '17/19 
2ecc0                 |           
2ecc0                 | '---------------------------------------------------------------------------
2ecc0                 | '-------- End of interrupt -------------------------------------------------
2ecc0                 | '---------------------------------------------------------------------------    
2ecc0                 | 
2ecc0                 | 
2ecc0                 | '---------------------------------------------------------------------------
2ecc0                 | '------- Variables ---------------------------------------------------------
2ecc0                 | '---------------------------------------------------------------------------
2ecc0                 | 
2ecc0                 | ' constants
2ecc0                 | 
2ecc0     00 00 00 00 | hp long 0
2ecc4     00 00 00 00 | lp long 0
2ecc8     00 00 00 00 | bp long 0
2eccc     00 00 00 10 | a20000000   long $10000000
2ecd0     00 00 00 11 | a21000000   long $11000000  ' this const has to be immediately before time0 due to djnz loop initial pointer pointing one long before
2ecd4                 | 
2ecd4                 | ' Time variables
2ecd4                 | 
2ecd4     00 00 00 00 | time0       long 0    ' Global sample computing time
2ecd8     01 00 00 00 | time1       long 1    ' Local channels time
2ecdc     02 00 00 00 | time2       long 2
2ece0     03 00 00 00 | time3       long 3
2ece4     04 00 00 00 | time4       long 4
2ece8     05 00 00 00 | time5       long 5
2ecec     06 00 00 00 | time6       long 6
2ecf0     07 00 00 00 | time7       long 7
2ecf4     08 00 00 00 | time8       long 8
2ecf8                 | 
2ecf8                 | 
2ecf8                 | 
2ecf8     00 00 00 00 | newsample long 0
2ecfc                 | '
2ecfc     00 00 00 00 | t1 long 0
2ed00     00 00 00 00 | t2 long 0
2ed04                 | '
2ed04     00 00 00 00 | nrsample long 0
2ed08     00 00 00 00 | nlsample long 0
2ed0c                 | '
2ed0c     00 00 00 00 | channeladd long 0
2ed10                 | 
2ed10                 | 
2ed10     00 00 00 00 | front       long 0
2ed14                 | 
2ed14                 | ' temporary variables 
2ed14                 | '
2ed14     00 00 00 00 | qq          long 0
2ed18     00 00 00 00 | spl         long 0
2ed1c                 | 
2ed1c                 | ' circular buffer in LUT
2ed1c                 | 
2ed1c                 | 
2ed1c                 | '
2ed1c                 | 
2ed1c                 | ' Interrupt ISR variables
2ed1c                 | 
2ed1c                 | 
2ed1c     00 00 00 00 | lsample     long 0
2ed20     00 00 00 00 | rsample     long 0
2ed24     00 00 00 00 | lsnext      long 0
2ed28     00 00 00 00 | rsnext      long 0 
2ed2c                 | 
2ed2c                 | 
2ed2c     00 00 00 00 | pointer0    long 0
2ed30     00 00 00 00 | sample0     long 0
2ed34     00 00 00 00 | sstart0     long 0     ' start pointer and type at bit 31
2ed38     00 00 00 00 | lstart0     long 0
2ed3c     00 00 00 00 | lend0       long 0
2ed40     00 00 00 00 | volpan0     long 0
2ed44     00 00 00 00 | freqskip0   long 0
2ed48     00 00 00 00 | dummy0      long 0
2ed4c                 | 
2ed4c     00 00 00 00 | afreq0      long 0
2ed50     00 00 00 00 | askip0      long 0
2ed54     00 00 00 00 | avol0       long 0
2ed58     00 00 00 00 | apan0       long 0
2ed5c                 | 
2ed5c     FF FF FF FF | oldt0       long $FFFFFFFF    'Temporary time variables
2ed60     00 00 00 00 | cn          long 0
2ed64     00 00 00 00 | ct          long 0
2ed68     00 00 00 00 | dt0         long 0
2ed6c                 | 
2ed6c                 | ' Samples
2ed6c     00 00 00 00 | ls0         long 0
2ed70     00 00 00 00 | rs0         long 0
2ed74     00 00 00 00 | channel     long 0
2ed78     00 00 00 00 | ls          long 0    ' Global sample variable
2ed7c     00 00 00 00 | rs          long 0
2ed80                 | 
2ed80     00 00 00 00 | ls1         long 0    ' Channel samples
2ed84     00 00 00 00 | ls2         long 0
2ed88     00 00 00 00 | ls3         long 0
2ed8c     00 00 00 00 | ls4         long 0
2ed90     00 00 00 00 | ls5         long 0
2ed94     00 00 00 00 | ls6         long 0
2ed98     00 00 00 00 | ls7         long 0
2ed9c     00 00 00 00 | ls8         long 0
2eda0     00 00 00 00 | rs1         long 0
2eda4     00 00 00 00 | rs2         long 0
2eda8     00 00 00 00 | rs3         long 0
2edac     00 00 00 00 | rs4         long 0
2edb0     00 00 00 00 | rs5         long 0
2edb4     00 00 00 00 | rs6         long 0
2edb8     00 00 00 00 | rs7         long 0
2edbc     00 00 00 00 | rs8         long 0
2edc0                 | 
2edc0     44 00 17 00 | dac         long %10111_00000000_01_00010_0     'random dither, as 90 cycles period needed
2edc4                 | 
2edc4     00 00 00 00 
2edc8     00 00 00 00 | null  			long 	0,0           ' for channel reset
2edcc     73 32 00 04 
2edd0     00 00 10 00 
2edd4     00 00 00 00 
2edd8     00 00 00 00 | sinewave 		file 	"sinus.s2"    ' for testing
2eddc     00 00 C9 00 
2ede0     92 01 5B 02 
2ede4     24 03 ED 03 
2ede8     B6 04 7F 05 | 	byte	$00, $00, $c9, $00, $92, $01, $5b, $02, $24, $03, $ed, $03, $b6, $04, $7f, $05
2edec     48 06 11 07 
2edf0     D9 07 A2 08 
2edf4     6A 09 33 0A 
2edf8     FB 0A C4 0B | 	byte	$48, $06, $11, $07, $d9, $07, $a2, $08, $6a, $09, $33, $0a, $fb, $0a, $c4, $0b
2edfc     8C 0C 54 0D 
2ee00     1C 0E E3 0E 
2ee04     AB 0F 72 10 
2ee08     3A 11 01 12 | 	byte	$8c, $0c, $54, $0d, $1c, $0e, $e3, $0e, $ab, $0f, $72, $10, $3a, $11, $01, $12
2ee0c     C8 12 8F 13 
2ee10     55 14 1C 15 
2ee14     E2 15 A8 16 
2ee18     6E 17 33 18 | 	byte	$c8, $12, $8f, $13, $55, $14, $1c, $15, $e2, $15, $a8, $16, $6e, $17, $33, $18
2ee1c     F9 18 BE 19 
2ee20     82 1A 47 1B 
2ee24     0B 1C CF 1C 
2ee28     93 1D 57 1E | 	byte	$f9, $18, $be, $19, $82, $1a, $47, $1b, $0b, $1c, $cf, $1c, $93, $1d, $57, $1e
2ee2c     1A 1F DD 1F 
2ee30     9F 20 61 21 
2ee34     23 22 E5 22 
2ee38     A6 23 67 24 | 	byte	$1a, $1f, $dd, $1f, $9f, $20, $61, $21, $23, $22, $e5, $22, $a6, $23, $67, $24
2ee3c     28 25 E8 25 
2ee40     A8 26 67 27 
2ee44     26 28 E5 28 
2ee48     A3 29 61 2A | 	byte	$28, $25, $e8, $25, $a8, $26, $67, $27, $26, $28, $e5, $28, $a3, $29, $61, $2a
2ee4c     1F 2B DC 2B 
2ee50     99 2C 55 2D 
2ee54     11 2E CC 2E 
2ee58     87 2F 41 30 | 	byte	$1f, $2b, $dc, $2b, $99, $2c, $55, $2d, $11, $2e, $cc, $2e, $87, $2f, $41, $30
2ee5c     FB 30 B5 31 
2ee60     6E 32 26 33 
2ee64     DF 33 96 34 
2ee68     4D 35 04 36 | 	byte	$fb, $30, $b5, $31, $6e, $32, $26, $33, $df, $33, $96, $34, $4d, $35, $04, $36
2ee6c     BA 36 6F 37 
2ee70     24 38 D9 38 
2ee74     8C 39 40 3A 
2ee78     F2 3A A5 3B | 	byte	$ba, $36, $6f, $37, $24, $38, $d9, $38, $8c, $39, $40, $3a, $f2, $3a, $a5, $3b
2ee7c     56 3C 07 3D 
2ee80     B8 3D 68 3E 
2ee84     17 3F C5 3F 
2ee88     73 40 21 41 | 	byte	$56, $3c, $07, $3d, $b8, $3d, $68, $3e, $17, $3f, $c5, $3f, $73, $40, $21, $41
2ee8c     CE 41 7A 42 
2ee90     25 43 D0 43 
2ee94     7A 44 24 45 
2ee98     CD 45 75 46 | 	byte	$ce, $41, $7a, $42, $25, $43, $d0, $43, $7a, $44, $24, $45, $cd, $45, $75, $46
2ee9c     1C 47 C3 47 
2eea0     69 48 0F 49 
2eea4     B4 49 58 4A 
2eea8     FB 4A 9D 4B | 	byte	$1c, $47, $c3, $47, $69, $48, $0f, $49, $b4, $49, $58, $4a, $fb, $4a, $9d, $4b
2eeac     3F 4C E0 4C 
2eeb0     81 4D 20 4E 
2eeb4     BF 4E 5D 4F 
2eeb8     FB 4F 97 50 | 	byte	$3f, $4c, $e0, $4c, $81, $4d, $20, $4e, $bf, $4e, $5d, $4f, $fb, $4f, $97, $50
2eebc     33 51 CE 51 
2eec0     68 52 02 53 
2eec4     9B 53 32 54 
2eec8     C9 54 60 55 | 	byte	$33, $51, $ce, $51, $68, $52, $02, $53, $9b, $53, $32, $54, $c9, $54, $60, $55
2eecc     F5 55 8A 56 
2eed0     1D 57 B0 57 
2eed4     42 58 D3 58 
2eed8     64 59 F3 59 | 	byte	$f5, $55, $8a, $56, $1d, $57, $b0, $57, $42, $58, $d3, $58, $64, $59, $f3, $59
2eedc     82 5A 0F 5B 
2eee0     9C 5B 28 5C 
2eee4     B3 5C 3E 5D 
2eee8     C7 5D 4F 5E | 	byte	$82, $5a, $0f, $5b, $9c, $5b, $28, $5c, $b3, $5c, $3e, $5d, $c7, $5d, $4f, $5e
2eeec     D7 5E 5D 5F 
2eef0     E3 5F 68 60 
2eef4     EB 60 6E 61 
2eef8     F0 61 71 62 | 	byte	$d7, $5e, $5d, $5f, $e3, $5f, $68, $60, $eb, $60, $6e, $61, $f0, $61, $71, $62
2eefc     F1 62 70 63 
2ef00     EE 63 6C 64 
2ef04     E8 64 63 65 
2ef08     DD 65 56 66 | 	byte	$f1, $62, $70, $63, $ee, $63, $6c, $64, $e8, $64, $63, $65, $dd, $65, $56, $66
2ef0c     CF 66 46 67 
2ef10     BC 67 32 68 
2ef14     A6 68 19 69 
2ef18     8B 69 FD 69 | 	byte	$cf, $66, $46, $67, $bc, $67, $32, $68, $a6, $68, $19, $69, $8b, $69, $fd, $69
2ef1c     6D 6A DC 6A 
2ef20     4A 6B B7 6B 
2ef24     23 6C 8E 6C 
2ef28     F8 6C 61 6D | 	byte	$6d, $6a, $dc, $6a, $4a, $6b, $b7, $6b, $23, $6c, $8e, $6c, $f8, $6c, $61, $6d
2ef2c     C9 6D 30 6E 
2ef30     96 6E FB 6E 
2ef34     5E 6F C1 6F 
2ef38     22 70 83 70 | 	byte	$c9, $6d, $30, $6e, $96, $6e, $fb, $6e, $5e, $6f, $c1, $6f, $22, $70, $83, $70
2ef3c     E2 70 40 71 
2ef40     9D 71 F9 71 
2ef44     54 72 AE 72 
2ef48     07 73 5E 73 | 	byte	$e2, $70, $40, $71, $9d, $71, $f9, $71, $54, $72, $ae, $72, $07, $73, $5e, $73
2ef4c     B5 73 0A 74 
2ef50     5F 74 B2 74 
2ef54     04 75 55 75 
2ef58     A5 75 F3 75 | 	byte	$b5, $73, $0a, $74, $5f, $74, $b2, $74, $04, $75, $55, $75, $a5, $75, $f3, $75
2ef5c     41 76 8D 76 
2ef60     D8 76 22 77 
2ef64     6B 77 B3 77 
2ef68     FA 77 3F 78 | 	byte	$41, $76, $8d, $76, $d8, $76, $22, $77, $6b, $77, $b3, $77, $fa, $77, $3f, $78
2ef6c     84 78 C7 78 
2ef70     09 79 4A 79 
2ef74     89 79 C8 79 
2ef78     05 7A 41 7A | 	byte	$84, $78, $c7, $78, $09, $79, $4a, $79, $89, $79, $c8, $79, $05, $7a, $41, $7a
2ef7c     7C 7A B6 7A 
2ef80     EE 7A 26 7B 
2ef84     5C 7B 91 7B 
2ef88     C5 7B F8 7B | 	byte	$7c, $7a, $b6, $7a, $ee, $7a, $26, $7b, $5c, $7b, $91, $7b, $c5, $7b, $f8, $7b
2ef8c     29 7C 59 7C 
2ef90     88 7C B6 7C 
2ef94     E3 7C 0E 7D 
2ef98     39 7D 62 7D | 	byte	$29, $7c, $59, $7c, $88, $7c, $b6, $7c, $e3, $7c, $0e, $7d, $39, $7d, $62, $7d
2ef9c     89 7D B0 7D 
2efa0     D5 7D FA 7D 
2efa4     1D 7E 3E 7E 
2efa8     5F 7E 7E 7E | 	byte	$89, $7d, $b0, $7d, $d5, $7d, $fa, $7d, $1d, $7e, $3e, $7e, $5f, $7e, $7e, $7e
2efac     9C 7E B9 7E 
2efb0     D5 7E EF 7E 
2efb4     09 7F 21 7F 
2efb8     37 7F 4D 7F | 	byte	$9c, $7e, $b9, $7e, $d5, $7e, $ef, $7e, $09, $7f, $21, $7f, $37, $7f, $4d, $7f
2efbc     61 7F 74 7F 
2efc0     86 7F 97 7F 
2efc4     A6 7F B4 7F 
2efc8     C1 7F CD 7F | 	byte	$61, $7f, $74, $7f, $86, $7f, $97, $7f, $a6, $7f, $b4, $7f, $c1, $7f, $cd, $7f
2efcc     D8 7F E1 7F 
2efd0     E9 7F F0 7F 
2efd4     F5 7F F9 7F 
2efd8     FD 7F FE 7F | 	byte	$d8, $7f, $e1, $7f, $e9, $7f, $f0, $7f, $f5, $7f, $f9, $7f, $fd, $7f, $fe, $7f
2efdc     FF 7F FE 7F 
2efe0     FD 7F F9 7F 
2efe4     F5 7F F0 7F 
2efe8     E9 7F E1 7F | 	byte	$ff, $7f, $fe, $7f, $fd, $7f, $f9, $7f, $f5, $7f, $f0, $7f, $e9, $7f, $e1, $7f
2efec     D8 7F CD 7F 
2eff0     C1 7F B4 7F 
2eff4     A6 7F 97 7F 
2eff8     86 7F 74 7F | 	byte	$d8, $7f, $cd, $7f, $c1, $7f, $b4, $7f, $a6, $7f, $97, $7f, $86, $7f, $74, $7f
2effc     61 7F 4D 7F 
2f000     37 7F 21 7F 
2f004     09 7F EF 7E 
2f008     D5 7E B9 7E | 	byte	$61, $7f, $4d, $7f, $37, $7f, $21, $7f, $09, $7f, $ef, $7e, $d5, $7e, $b9, $7e
2f00c     9C 7E 7E 7E 
2f010     5F 7E 3E 7E 
2f014     1D 7E FA 7D 
2f018     D5 7D B0 7D | 	byte	$9c, $7e, $7e, $7e, $5f, $7e, $3e, $7e, $1d, $7e, $fa, $7d, $d5, $7d, $b0, $7d
2f01c     89 7D 62 7D 
2f020     39 7D 0E 7D 
2f024     E3 7C B6 7C 
2f028     88 7C 59 7C | 	byte	$89, $7d, $62, $7d, $39, $7d, $0e, $7d, $e3, $7c, $b6, $7c, $88, $7c, $59, $7c
2f02c     29 7C F8 7B 
2f030     C5 7B 91 7B 
2f034     5C 7B 26 7B 
2f038     EE 7A B6 7A | 	byte	$29, $7c, $f8, $7b, $c5, $7b, $91, $7b, $5c, $7b, $26, $7b, $ee, $7a, $b6, $7a
2f03c     7C 7A 41 7A 
2f040     05 7A C8 79 
2f044     89 79 4A 79 
2f048     09 79 C7 78 | 	byte	$7c, $7a, $41, $7a, $05, $7a, $c8, $79, $89, $79, $4a, $79, $09, $79, $c7, $78
2f04c     84 78 3F 78 
2f050     FA 77 B3 77 
2f054     6B 77 22 77 
2f058     D8 76 8D 76 | 	byte	$84, $78, $3f, $78, $fa, $77, $b3, $77, $6b, $77, $22, $77, $d8, $76, $8d, $76
2f05c     41 76 F3 75 
2f060     A5 75 55 75 
2f064     04 75 B2 74 
2f068     5F 74 0A 74 | 	byte	$41, $76, $f3, $75, $a5, $75, $55, $75, $04, $75, $b2, $74, $5f, $74, $0a, $74
2f06c     B5 73 5E 73 
2f070     07 73 AE 72 
2f074     54 72 F9 71 
2f078     9D 71 40 71 | 	byte	$b5, $73, $5e, $73, $07, $73, $ae, $72, $54, $72, $f9, $71, $9d, $71, $40, $71
2f07c     E2 70 83 70 
2f080     22 70 C1 6F 
2f084     5E 6F FB 6E 
2f088     96 6E 30 6E | 	byte	$e2, $70, $83, $70, $22, $70, $c1, $6f, $5e, $6f, $fb, $6e, $96, $6e, $30, $6e
2f08c     C9 6D 61 6D 
2f090     F8 6C 8E 6C 
2f094     23 6C B7 6B 
2f098     4A 6B DC 6A | 	byte	$c9, $6d, $61, $6d, $f8, $6c, $8e, $6c, $23, $6c, $b7, $6b, $4a, $6b, $dc, $6a
2f09c     6D 6A FD 69 
2f0a0     8B 69 19 69 
2f0a4     A6 68 32 68 
2f0a8     BC 67 46 67 | 	byte	$6d, $6a, $fd, $69, $8b, $69, $19, $69, $a6, $68, $32, $68, $bc, $67, $46, $67
2f0ac     CF 66 56 66 
2f0b0     DD 65 63 65 
2f0b4     E8 64 6C 64 
2f0b8     EE 63 70 63 | 	byte	$cf, $66, $56, $66, $dd, $65, $63, $65, $e8, $64, $6c, $64, $ee, $63, $70, $63
2f0bc     F1 62 71 62 
2f0c0     F0 61 6E 61 
2f0c4     EB 60 68 60 
2f0c8     E3 5F 5D 5F | 	byte	$f1, $62, $71, $62, $f0, $61, $6e, $61, $eb, $60, $68, $60, $e3, $5f, $5d, $5f
2f0cc     D7 5E 4F 5E 
2f0d0     C7 5D 3E 5D 
2f0d4     B3 5C 28 5C 
2f0d8     9C 5B 0F 5B | 	byte	$d7, $5e, $4f, $5e, $c7, $5d, $3e, $5d, $b3, $5c, $28, $5c, $9c, $5b, $0f, $5b
2f0dc     82 5A F3 59 
2f0e0     64 59 D3 58 
2f0e4     42 58 B0 57 
2f0e8     1D 57 8A 56 | 	byte	$82, $5a, $f3, $59, $64, $59, $d3, $58, $42, $58, $b0, $57, $1d, $57, $8a, $56
2f0ec     F5 55 60 55 
2f0f0     C9 54 32 54 
2f0f4     9B 53 02 53 
2f0f8     68 52 CE 51 | 	byte	$f5, $55, $60, $55, $c9, $54, $32, $54, $9b, $53, $02, $53, $68, $52, $ce, $51
2f0fc     33 51 97 50 
2f100     FB 4F 5D 4F 
2f104     BF 4E 20 4E 
2f108     81 4D E0 4C | 	byte	$33, $51, $97, $50, $fb, $4f, $5d, $4f, $bf, $4e, $20, $4e, $81, $4d, $e0, $4c
2f10c     3F 4C 9D 4B 
2f110     FB 4A 58 4A 
2f114     B4 49 0F 49 
2f118     69 48 C3 47 | 	byte	$3f, $4c, $9d, $4b, $fb, $4a, $58, $4a, $b4, $49, $0f, $49, $69, $48, $c3, $47
2f11c     1C 47 75 46 
2f120     CD 45 24 45 
2f124     7A 44 D0 43 
2f128     25 43 7A 42 | 	byte	$1c, $47, $75, $46, $cd, $45, $24, $45, $7a, $44, $d0, $43, $25, $43, $7a, $42
2f12c     CE 41 21 41 
2f130     73 40 C5 3F 
2f134     17 3F 68 3E 
2f138     B8 3D 07 3D | 	byte	$ce, $41, $21, $41, $73, $40, $c5, $3f, $17, $3f, $68, $3e, $b8, $3d, $07, $3d
2f13c     56 3C A5 3B 
2f140     F2 3A 40 3A 
2f144     8C 39 D9 38 
2f148     24 38 6F 37 | 	byte	$56, $3c, $a5, $3b, $f2, $3a, $40, $3a, $8c, $39, $d9, $38, $24, $38, $6f, $37
2f14c     BA 36 04 36 
2f150     4D 35 96 34 
2f154     DF 33 26 33 
2f158     6E 32 B5 31 | 	byte	$ba, $36, $04, $36, $4d, $35, $96, $34, $df, $33, $26, $33, $6e, $32, $b5, $31
2f15c     FB 30 41 30 
2f160     87 2F CC 2E 
2f164     11 2E 55 2D 
2f168     99 2C DC 2B | 	byte	$fb, $30, $41, $30, $87, $2f, $cc, $2e, $11, $2e, $55, $2d, $99, $2c, $dc, $2b
2f16c     1F 2B 61 2A 
2f170     A3 29 E5 28 
2f174     26 28 67 27 
2f178     A8 26 E8 25 | 	byte	$1f, $2b, $61, $2a, $a3, $29, $e5, $28, $26, $28, $67, $27, $a8, $26, $e8, $25
2f17c     28 25 67 24 
2f180     A6 23 E5 22 
2f184     23 22 61 21 
2f188     9F 20 DD 1F | 	byte	$28, $25, $67, $24, $a6, $23, $e5, $22, $23, $22, $61, $21, $9f, $20, $dd, $1f
2f18c     1A 1F 57 1E 
2f190     93 1D CF 1C 
2f194     0B 1C 47 1B 
2f198     82 1A BE 19 | 	byte	$1a, $1f, $57, $1e, $93, $1d, $cf, $1c, $0b, $1c, $47, $1b, $82, $1a, $be, $19
2f19c     F9 18 33 18 
2f1a0     6E 17 A8 16 
2f1a4     E2 15 1C 15 
2f1a8     55 14 8F 13 | 	byte	$f9, $18, $33, $18, $6e, $17, $a8, $16, $e2, $15, $1c, $15, $55, $14, $8f, $13
2f1ac     C8 12 01 12 
2f1b0     3A 11 72 10 
2f1b4     AB 0F E3 0E 
2f1b8     1C 0E 54 0D | 	byte	$c8, $12, $01, $12, $3a, $11, $72, $10, $ab, $0f, $e3, $0e, $1c, $0e, $54, $0d
2f1bc     8C 0C C4 0B 
2f1c0     FB 0A 33 0A 
2f1c4     6A 09 A2 08 
2f1c8     D9 07 11 07 | 	byte	$8c, $0c, $c4, $0b, $fb, $0a, $33, $0a, $6a, $09, $a2, $08, $d9, $07, $11, $07
2f1cc     48 06 7F 05 
2f1d0     B6 04 ED 03 
2f1d4     24 03 5B 02 
2f1d8     92 01 C9 00 | 	byte	$48, $06, $7f, $05, $b6, $04, $ed, $03, $24, $03, $5b, $02, $92, $01, $c9, $00
2f1dc     00 00 37 FF 
2f1e0     6E FE A5 FD 
2f1e4     DC FC 13 FC 
2f1e8     4A FB 81 FA | 	byte	$00, $00, $37, $ff, $6e, $fe, $a5, $fd, $dc, $fc, $13, $fc, $4a, $fb, $81, $fa
2f1ec     B8 F9 EF F8 
2f1f0     27 F8 5E F7 
2f1f4     96 F6 CD F5 
2f1f8     05 F5 3C F4 | 	byte	$b8, $f9, $ef, $f8, $27, $f8, $5e, $f7, $96, $f6, $cd, $f5, $05, $f5, $3c, $f4
2f1fc     74 F3 AC F2 
2f200     E4 F1 1D F1 
2f204     55 F0 8E EF 
2f208     C6 EE FF ED | 	byte	$74, $f3, $ac, $f2, $e4, $f1, $1d, $f1, $55, $f0, $8e, $ef, $c6, $ee, $ff, $ed
2f20c     38 ED 71 EC 
2f210     AB EB E4 EA 
2f214     1E EA 58 E9 
2f218     92 E8 CD E7 | 	byte	$38, $ed, $71, $ec, $ab, $eb, $e4, $ea, $1e, $ea, $58, $e9, $92, $e8, $cd, $e7
2f21c     07 E7 42 E6 
2f220     7E E5 B9 E4 
2f224     F5 E3 31 E3 
2f228     6D E2 A9 E1 | 	byte	$07, $e7, $42, $e6, $7e, $e5, $b9, $e4, $f5, $e3, $31, $e3, $6d, $e2, $a9, $e1
2f22c     E6 E0 23 E0 
2f230     61 DF 9F DE 
2f234     DD DD 1B DD 
2f238     5A DC 99 DB | 	byte	$e6, $e0, $23, $e0, $61, $df, $9f, $de, $dd, $dd, $1b, $dd, $5a, $dc, $99, $db
2f23c     D8 DA 18 DA 
2f240     58 D9 99 D8 
2f244     DA D7 1B D7 
2f248     5D D6 9F D5 | 	byte	$d8, $da, $18, $da, $58, $d9, $99, $d8, $da, $d7, $1b, $d7, $5d, $d6, $9f, $d5
2f24c     E1 D4 24 D4 
2f250     67 D3 AB D2 
2f254     EF D1 34 D1 
2f258     79 D0 BF CF | 	byte	$e1, $d4, $24, $d4, $67, $d3, $ab, $d2, $ef, $d1, $34, $d1, $79, $d0, $bf, $cf
2f25c     05 CF 4B CE 
2f260     92 CD DA CC 
2f264     21 CC 6A CB 
2f268     B3 CA FC C9 | 	byte	$05, $cf, $4b, $ce, $92, $cd, $da, $cc, $21, $cc, $6a, $cb, $b3, $ca, $fc, $c9
2f26c     46 C9 91 C8 
2f270     DC C7 27 C7 
2f274     74 C6 C0 C5 
2f278     0E C5 5B C4 | 	byte	$46, $c9, $91, $c8, $dc, $c7, $27, $c7, $74, $c6, $c0, $c5, $0e, $c5, $5b, $c4
2f27c     AA C3 F9 C2 
2f280     48 C2 98 C1 
2f284     E9 C0 3B C0 
2f288     8D BF DF BE | 	byte	$aa, $c3, $f9, $c2, $48, $c2, $98, $c1, $e9, $c0, $3b, $c0, $8d, $bf, $df, $be
2f28c     32 BE 86 BD 
2f290     DB BC 30 BC 
2f294     86 BB DC BA 
2f298     33 BA 8B B9 | 	byte	$32, $be, $86, $bd, $db, $bc, $30, $bc, $86, $bb, $dc, $ba, $33, $ba, $8b, $b9
2f29c     E4 B8 3D B8 
2f2a0     97 B7 F1 B6 
2f2a4     4C B6 A8 B5 
2f2a8     05 B5 63 B4 | 	byte	$e4, $b8, $3d, $b8, $97, $b7, $f1, $b6, $4c, $b6, $a8, $b5, $05, $b5, $63, $b4
2f2ac     C1 B3 20 B3 
2f2b0     7F B2 E0 B1 
2f2b4     41 B1 A3 B0 
2f2b8     05 B0 69 AF | 	byte	$c1, $b3, $20, $b3, $7f, $b2, $e0, $b1, $41, $b1, $a3, $b0, $05, $b0, $69, $af
2f2bc     CD AE 32 AE 
2f2c0     98 AD FE AC 
2f2c4     65 AC CE AB 
2f2c8     37 AB A0 AA | 	byte	$cd, $ae, $32, $ae, $98, $ad, $fe, $ac, $65, $ac, $ce, $ab, $37, $ab, $a0, $aa
2f2cc     0B AA 76 A9 
2f2d0     E3 A8 50 A8 
2f2d4     BE A7 2D A7 
2f2d8     9C A6 0D A6 | 	byte	$0b, $aa, $76, $a9, $e3, $a8, $50, $a8, $be, $a7, $2d, $a7, $9c, $a6, $0d, $a6
2f2dc     7E A5 F1 A4 
2f2e0     64 A4 D8 A3 
2f2e4     4D A3 C2 A2 
2f2e8     39 A2 B1 A1 | 	byte	$7e, $a5, $f1, $a4, $64, $a4, $d8, $a3, $4d, $a3, $c2, $a2, $39, $a2, $b1, $a1
2f2ec     29 A1 A3 A0 
2f2f0     1D A0 98 9F 
2f2f4     15 9F 92 9E 
2f2f8     10 9E 8F 9D | 	byte	$29, $a1, $a3, $a0, $1d, $a0, $98, $9f, $15, $9f, $92, $9e, $10, $9e, $8f, $9d
2f2fc     0F 9D 90 9C 
2f300     12 9C 94 9B 
2f304     18 9B 9D 9A 
2f308     23 9A AA 99 | 	byte	$0f, $9d, $90, $9c, $12, $9c, $94, $9b, $18, $9b, $9d, $9a, $23, $9a, $aa, $99
2f30c     31 99 BA 98 
2f310     44 98 CE 97 
2f314     5A 97 E7 96 
2f318     75 96 03 96 | 	byte	$31, $99, $ba, $98, $44, $98, $ce, $97, $5a, $97, $e7, $96, $75, $96, $03, $96
2f31c     93 95 24 95 
2f320     B6 94 49 94 
2f324     DD 93 72 93 
2f328     08 93 9F 92 | 	byte	$93, $95, $24, $95, $b6, $94, $49, $94, $dd, $93, $72, $93, $08, $93, $9f, $92
2f32c     37 92 D0 91 
2f330     6A 91 05 91 
2f334     A2 90 3F 90 
2f338     DE 8F 7D 8F | 	byte	$37, $92, $d0, $91, $6a, $91, $05, $91, $a2, $90, $3f, $90, $de, $8f, $7d, $8f
2f33c     1E 8F C0 8E 
2f340     63 8E 07 8E 
2f344     AC 8D 52 8D 
2f348     F9 8C A2 8C | 	byte	$1e, $8f, $c0, $8e, $63, $8e, $07, $8e, $ac, $8d, $52, $8d, $f9, $8c, $a2, $8c
2f34c     4B 8C F6 8B 
2f350     A1 8B 4E 8B 
2f354     FC 8A AB 8A 
2f358     5B 8A 0D 8A | 	byte	$4b, $8c, $f6, $8b, $a1, $8b, $4e, $8b, $fc, $8a, $ab, $8a, $5b, $8a, $0d, $8a
2f35c     BF 89 73 89 
2f360     28 89 DE 88 
2f364     95 88 4D 88 
2f368     06 88 C1 87 | 	byte	$bf, $89, $73, $89, $28, $89, $de, $88, $95, $88, $4d, $88, $06, $88, $c1, $87
2f36c     7C 87 39 87 
2f370     F7 86 B6 86 
2f374     77 86 38 86 
2f378     FB 85 BF 85 | 	byte	$7c, $87, $39, $87, $f7, $86, $b6, $86, $77, $86, $38, $86, $fb, $85, $bf, $85
2f37c     84 85 4A 85 
2f380     12 85 DA 84 
2f384     A4 84 6F 84 
2f388     3B 84 08 84 | 	byte	$84, $85, $4a, $85, $12, $85, $da, $84, $a4, $84, $6f, $84, $3b, $84, $08, $84
2f38c     D7 83 A7 83 
2f390     78 83 4A 83 
2f394     1D 83 F2 82 
2f398     C7 82 9E 82 | 	byte	$d7, $83, $a7, $83, $78, $83, $4a, $83, $1d, $83, $f2, $82, $c7, $82, $9e, $82
2f39c     77 82 50 82 
2f3a0     2B 82 06 82 
2f3a4     E3 81 C2 81 
2f3a8     A1 81 82 81 | 	byte	$77, $82, $50, $82, $2b, $82, $06, $82, $e3, $81, $c2, $81, $a1, $81, $82, $81
2f3ac     64 81 47 81 
2f3b0     2B 81 11 81 
2f3b4     F7 80 DF 80 
2f3b8     C9 80 B3 80 | 	byte	$64, $81, $47, $81, $2b, $81, $11, $81, $f7, $80, $df, $80, $c9, $80, $b3, $80
2f3bc     9F 80 8C 80 
2f3c0     7A 80 69 80 
2f3c4     5A 80 4C 80 
2f3c8     3F 80 33 80 | 	byte	$9f, $80, $8c, $80, $7a, $80, $69, $80, $5a, $80, $4c, $80, $3f, $80, $33, $80
2f3cc     28 80 1F 80 
2f3d0     17 80 10 80 
2f3d4     0B 80 07 80 
2f3d8     03 80 02 80 | 	byte	$28, $80, $1f, $80, $17, $80, $10, $80, $0b, $80, $07, $80, $03, $80, $02, $80
2f3dc     01 80 02 80 
2f3e0     03 80 07 80 
2f3e4     0B 80 10 80 
2f3e8     17 80 1F 80 | 	byte	$01, $80, $02, $80, $03, $80, $07, $80, $0b, $80, $10, $80, $17, $80, $1f, $80
2f3ec     28 80 33 80 
2f3f0     3F 80 4C 80 
2f3f4     5A 80 69 80 
2f3f8     7A 80 8C 80 | 	byte	$28, $80, $33, $80, $3f, $80, $4c, $80, $5a, $80, $69, $80, $7a, $80, $8c, $80
2f3fc     9F 80 B3 80 
2f400     C9 80 DF 80 
2f404     F7 80 11 81 
2f408     2B 81 47 81 | 	byte	$9f, $80, $b3, $80, $c9, $80, $df, $80, $f7, $80, $11, $81, $2b, $81, $47, $81
2f40c     64 81 82 81 
2f410     A1 81 C2 81 
2f414     E3 81 06 82 
2f418     2B 82 50 82 | 	byte	$64, $81, $82, $81, $a1, $81, $c2, $81, $e3, $81, $06, $82, $2b, $82, $50, $82
2f41c     77 82 9E 82 
2f420     C7 82 F2 82 
2f424     1D 83 4A 83 
2f428     78 83 A7 83 | 	byte	$77, $82, $9e, $82, $c7, $82, $f2, $82, $1d, $83, $4a, $83, $78, $83, $a7, $83
2f42c     D7 83 08 84 
2f430     3B 84 6F 84 
2f434     A4 84 DA 84 
2f438     12 85 4A 85 | 	byte	$d7, $83, $08, $84, $3b, $84, $6f, $84, $a4, $84, $da, $84, $12, $85, $4a, $85
2f43c     84 85 BF 85 
2f440     FB 85 38 86 
2f444     77 86 B6 86 
2f448     F7 86 39 87 | 	byte	$84, $85, $bf, $85, $fb, $85, $38, $86, $77, $86, $b6, $86, $f7, $86, $39, $87
2f44c     7C 87 C1 87 
2f450     06 88 4D 88 
2f454     95 88 DE 88 
2f458     28 89 73 89 | 	byte	$7c, $87, $c1, $87, $06, $88, $4d, $88, $95, $88, $de, $88, $28, $89, $73, $89
2f45c     BF 89 0D 8A 
2f460     5B 8A AB 8A 
2f464     FC 8A 4E 8B 
2f468     A1 8B F6 8B | 	byte	$bf, $89, $0d, $8a, $5b, $8a, $ab, $8a, $fc, $8a, $4e, $8b, $a1, $8b, $f6, $8b
2f46c     4B 8C A2 8C 
2f470     F9 8C 52 8D 
2f474     AC 8D 07 8E 
2f478     63 8E C0 8E | 	byte	$4b, $8c, $a2, $8c, $f9, $8c, $52, $8d, $ac, $8d, $07, $8e, $63, $8e, $c0, $8e
2f47c     1E 8F 7D 8F 
2f480     DE 8F 3F 90 
2f484     A2 90 05 91 
2f488     6A 91 D0 91 | 	byte	$1e, $8f, $7d, $8f, $de, $8f, $3f, $90, $a2, $90, $05, $91, $6a, $91, $d0, $91
2f48c     37 92 9F 92 
2f490     08 93 72 93 
2f494     DD 93 49 94 
2f498     B6 94 24 95 | 	byte	$37, $92, $9f, $92, $08, $93, $72, $93, $dd, $93, $49, $94, $b6, $94, $24, $95
2f49c     93 95 03 96 
2f4a0     75 96 E7 96 
2f4a4     5A 97 CE 97 
2f4a8     44 98 BA 98 | 	byte	$93, $95, $03, $96, $75, $96, $e7, $96, $5a, $97, $ce, $97, $44, $98, $ba, $98
2f4ac     31 99 AA 99 
2f4b0     23 9A 9D 9A 
2f4b4     18 9B 94 9B 
2f4b8     12 9C 90 9C | 	byte	$31, $99, $aa, $99, $23, $9a, $9d, $9a, $18, $9b, $94, $9b, $12, $9c, $90, $9c
2f4bc     0F 9D 8F 9D 
2f4c0     10 9E 92 9E 
2f4c4     15 9F 98 9F 
2f4c8     1D A0 A3 A0 | 	byte	$0f, $9d, $8f, $9d, $10, $9e, $92, $9e, $15, $9f, $98, $9f, $1d, $a0, $a3, $a0
2f4cc     29 A1 B1 A1 
2f4d0     39 A2 C2 A2 
2f4d4     4D A3 D8 A3 
2f4d8     64 A4 F1 A4 | 	byte	$29, $a1, $b1, $a1, $39, $a2, $c2, $a2, $4d, $a3, $d8, $a3, $64, $a4, $f1, $a4
2f4dc     7E A5 0D A6 
2f4e0     9C A6 2D A7 
2f4e4     BE A7 50 A8 
2f4e8     E3 A8 76 A9 | 	byte	$7e, $a5, $0d, $a6, $9c, $a6, $2d, $a7, $be, $a7, $50, $a8, $e3, $a8, $76, $a9
2f4ec     0B AA A0 AA 
2f4f0     37 AB CE AB 
2f4f4     65 AC FE AC 
2f4f8     98 AD 32 AE | 	byte	$0b, $aa, $a0, $aa, $37, $ab, $ce, $ab, $65, $ac, $fe, $ac, $98, $ad, $32, $ae
2f4fc     CD AE 69 AF 
2f500     05 B0 A3 B0 
2f504     41 B1 E0 B1 
2f508     7F B2 20 B3 | 	byte	$cd, $ae, $69, $af, $05, $b0, $a3, $b0, $41, $b1, $e0, $b1, $7f, $b2, $20, $b3
2f50c     C1 B3 63 B4 
2f510     05 B5 A8 B5 
2f514     4C B6 F1 B6 
2f518     97 B7 3D B8 | 	byte	$c1, $b3, $63, $b4, $05, $b5, $a8, $b5, $4c, $b6, $f1, $b6, $97, $b7, $3d, $b8
2f51c     E4 B8 8B B9 
2f520     33 BA DC BA 
2f524     86 BB 30 BC 
2f528     DB BC 86 BD | 	byte	$e4, $b8, $8b, $b9, $33, $ba, $dc, $ba, $86, $bb, $30, $bc, $db, $bc, $86, $bd
2f52c     32 BE DF BE 
2f530     8D BF 3B C0 
2f534     E9 C0 98 C1 
2f538     48 C2 F9 C2 | 	byte	$32, $be, $df, $be, $8d, $bf, $3b, $c0, $e9, $c0, $98, $c1, $48, $c2, $f9, $c2
2f53c     AA C3 5B C4 
2f540     0E C5 C0 C5 
2f544     74 C6 27 C7 
2f548     DC C7 91 C8 | 	byte	$aa, $c3, $5b, $c4, $0e, $c5, $c0, $c5, $74, $c6, $27, $c7, $dc, $c7, $91, $c8
2f54c     46 C9 FC C9 
2f550     B3 CA 6A CB 
2f554     21 CC DA CC 
2f558     92 CD 4B CE | 	byte	$46, $c9, $fc, $c9, $b3, $ca, $6a, $cb, $21, $cc, $da, $cc, $92, $cd, $4b, $ce
2f55c     05 CF BF CF 
2f560     79 D0 34 D1 
2f564     EF D1 AB D2 
2f568     67 D3 24 D4 | 	byte	$05, $cf, $bf, $cf, $79, $d0, $34, $d1, $ef, $d1, $ab, $d2, $67, $d3, $24, $d4
2f56c     E1 D4 9F D5 
2f570     5D D6 1B D7 
2f574     DA D7 99 D8 
2f578     58 D9 18 DA | 	byte	$e1, $d4, $9f, $d5, $5d, $d6, $1b, $d7, $da, $d7, $99, $d8, $58, $d9, $18, $da
2f57c     D8 DA 99 DB 
2f580     5A DC 1B DD 
2f584     DD DD 9F DE 
2f588     61 DF 23 E0 | 	byte	$d8, $da, $99, $db, $5a, $dc, $1b, $dd, $dd, $dd, $9f, $de, $61, $df, $23, $e0
2f58c     E6 E0 A9 E1 
2f590     6D E2 31 E3 
2f594     F5 E3 B9 E4 
2f598     7E E5 42 E6 | 	byte	$e6, $e0, $a9, $e1, $6d, $e2, $31, $e3, $f5, $e3, $b9, $e4, $7e, $e5, $42, $e6
2f59c     07 E7 CD E7 
2f5a0     92 E8 58 E9 
2f5a4     1E EA E4 EA 
2f5a8     AB EB 71 EC | 	byte	$07, $e7, $cd, $e7, $92, $e8, $58, $e9, $1e, $ea, $e4, $ea, $ab, $eb, $71, $ec
2f5ac     38 ED FF ED 
2f5b0     C6 EE 8E EF 
2f5b4     55 F0 1D F1 
2f5b8     E4 F1 AC F2 | 	byte	$38, $ed, $ff, $ed, $c6, $ee, $8e, $ef, $55, $f0, $1d, $f1, $e4, $f1, $ac, $f2
2f5bc     74 F3 3C F4 
2f5c0     05 F5 CD F5 
2f5c4     96 F6 5E F7 
2f5c8     27 F8 EF F8 | 	byte	$74, $f3, $3c, $f4, $05, $f5, $cd, $f5, $96, $f6, $5e, $f7, $27, $f8, $ef, $f8
2f5cc     B8 F9 81 FA 
2f5d0     4A FB 13 FC 
2f5d4     DC FC A5 FD 
2f5d8     6E FE 37 FF | 	byte	$b8, $f9, $81, $fa, $4a, $fb, $13, $fc, $dc, $fc, $a5, $fd, $6e, $fe, $37, $ff
2f5dc                 | 	alignl
2f5dc                 | __system__dat_
2f5dc     00 00 00 00 
2f5e0     00 00 00 00 | 	byte	$00[8]
2f5e4     03 00 00 00 
2f5e8     00 00 00 00 
2f5ec     00 00 00 00 
2f5f0     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2f5f4     00 00 00 00 
2f5f8     00 00 00 00 
2f5fc     00 00 00 00 
2f600     00 00 00 00 
2f604     00 00 00 00 | 	byte	$00[20]
2f608     05 00 00 00 
2f60c     00 00 00 00 
2f610     00 00 00 00 
2f614     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2f618     E0 F7 02 00 | 	long	@@@__system__dat_ + 516
2f61c     E8 F7 02 00 | 	long	@@@__system__dat_ + 524
2f620     00 00 00 00 | 	byte	$00, $00, $00, $00
2f624     F0 F7 02 00 | 	long	@@@__system__dat_ + 532
2f628     F8 F7 02 00 | 	long	@@@__system__dat_ + 540
2f62c     00 00 00 00 
2f630     00 00 00 00 | 	byte	$00[8]
2f634     01 00 00 00 
2f638     06 00 00 00 
2f63c     00 00 00 00 
2f640     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2f644     00 00 00 00 | 	byte	$00, $00, $00, $00
2f648     00 F8 02 00 | 	long	@@@__system__dat_ + 548
2f64c     08 F8 02 00 | 	long	@@@__system__dat_ + 556
2f650     00 00 00 00 | 	byte	$00, $00, $00, $00
2f654     10 F8 02 00 | 	long	@@@__system__dat_ + 564
2f658     18 F8 02 00 | 	long	@@@__system__dat_ + 572
2f65c     00 00 00 00 
2f660     00 00 00 00 | 	byte	$00[8]
2f664     01 00 00 00 
2f668     06 00 00 00 
2f66c     00 00 00 00 
2f670     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2f674     00 00 00 00 | 	byte	$00, $00, $00, $00
2f678     20 F8 02 00 | 	long	@@@__system__dat_ + 580
2f67c     28 F8 02 00 | 	long	@@@__system__dat_ + 588
2f680     00 00 00 00 | 	byte	$00, $00, $00, $00
2f684     30 F8 02 00 | 	long	@@@__system__dat_ + 596
2f688     38 F8 02 00 | 	long	@@@__system__dat_ + 604
2f68c     00 00 00 00 
      ...             
2f7dc     00 00 00 00 
2f7e0     00 00 00 00 | 	byte	$00[344]
2f7e4     58 6E 00 00 | 	long	@@@__system___tx
2f7e8     00 00 00 00 | 	byte	$00, $00, $00, $00
2f7ec     A0 6E 00 00 | 	long	@@@__system___rx
2f7f0     00 00 00 00 | 	byte	$00, $00, $00, $00
2f7f4     1C 89 00 00 | 	long	@@@__system___rxtxioctl_0179
2f7f8     00 00 00 00 | 	byte	$00, $00, $00, $00
2f7fc     8C 89 00 00 | 	long	@@@__system____dummy_flush_0180
2f800     00 00 00 00 | 	byte	$00, $00, $00, $00
2f804     58 6E 00 00 | 	long	@@@__system___tx
2f808     00 00 00 00 | 	byte	$00, $00, $00, $00
2f80c     A0 6E 00 00 | 	long	@@@__system___rx
2f810     00 00 00 00 | 	byte	$00, $00, $00, $00
2f814     1C 89 00 00 | 	long	@@@__system___rxtxioctl_0179
2f818     00 00 00 00 | 	byte	$00, $00, $00, $00
2f81c     8C 89 00 00 | 	long	@@@__system____dummy_flush_0180
2f820     00 00 00 00 | 	byte	$00, $00, $00, $00
2f824     58 6E 00 00 | 	long	@@@__system___tx
2f828     00 00 00 00 | 	byte	$00, $00, $00, $00
2f82c     A0 6E 00 00 | 	long	@@@__system___rx
2f830     00 00 00 00 | 	byte	$00, $00, $00, $00
2f834     1C 89 00 00 | 	long	@@@__system___rxtxioctl_0179
2f838     00 00 00 00 | 	byte	$00, $00, $00, $00
2f83c     8C 89 00 00 | 	long	@@@__system____dummy_flush_0180
2f840                 | __heap_base
2f840     00 00 00 00 
      ...             
30840     00 00 00 00 
30844     00 00 00 00 | 	long	0[1026]
30848                 | objmem
30848     00 00 00 00 
      ...             
31a68     00 00 00 00 
31a6c     00 00 00 00 | 	long	0[1162]
31a70                 | stackspace
31a70     00 00 00 00 | 	long	0[1]
31a74 10f             | 	org	COG_BSS_START
31a74 10f             | _var01
31a74 10f             | 	res	1
31a74 110             | _var02
31a74 110             | 	res	1
31a74 111             | _var03
31a74 111             | 	res	1
31a74 112             | _var04
31a74 112             | 	res	1
31a74 113             | _var05
31a74 113             | 	res	1
31a74 114             | _var06
31a74 114             | 	res	1
31a74 115             | _var07
31a74 115             | 	res	1
31a74 116             | _var08
31a74 116             | 	res	1
31a74 117             | _var09
31a74 117             | 	res	1
31a74 118             | _var10
31a74 118             | 	res	1
31a74 119             | _var11
31a74 119             | 	res	1
31a74 11a             | _var12
31a74 11a             | 	res	1
31a74 11b             | _var13
31a74 11b             | 	res	1
31a74 11c             | _var14
31a74 11c             | 	res	1
31a74 11d             | _var15
31a74 11d             | 	res	1
31a74 11e             | _var16
31a74 11e             | 	res	1
31a74 11f             | _var17
31a74 11f             | 	res	1
31a74 120             | _var18
31a74 120             | 	res	1
31a74 121             | _var19
31a74 121             | 	res	1
31a74 122             | _var20
31a74 122             | 	res	1
31a74 123             | _var21
31a74 123             | 	res	1
31a74 124             | _var22
31a74 124             | 	res	1
31a74 125             | _var23
31a74 125             | 	res	1
31a74 126             | _var24
31a74 126             | 	res	1
31a74 127             | _var25
31a74 127             | 	res	1
31a74 128             | _var26
31a74 128             | 	res	1
31a74 129             | _var27
31a74 129             | 	res	1
31a74 12a             | _var28
31a74 12a             | 	res	1
31a74 12b             | _var29
31a74 12b             | 	res	1
31a74 12c             | _var30
31a74 12c             | 	res	1
31a74 12d             | _var31
31a74 12d             | 	res	1
31a74 12e             | _var32
31a74 12e             | 	res	1
31a74 12f             | arg01
31a74 12f             | 	res	1
31a74 130             | arg02
31a74 130             | 	res	1
31a74 131             | arg03
31a74 131             | 	res	1
31a74 132             | arg04
31a74 132             | 	res	1
31a74 133             | arg05
31a74 133             | 	res	1
31a74 134             | arg06
31a74 134             | 	res	1
31a74 135             | arg07
31a74 135             | 	res	1
31a74 136             | local01
31a74 136             | 	res	1
31a74 137             | local02
31a74 137             | 	res	1
31a74 138             | local03
31a74 138             | 	res	1
31a74 139             | local04
31a74 139             | 	res	1
31a74 13a             | local05
31a74 13a             | 	res	1
31a74 13b             | local06
31a74 13b             | 	res	1
31a74 13c             | local07
31a74 13c             | 	res	1
31a74 13d             | local08
31a74 13d             | 	res	1
31a74 13e             | local09
31a74 13e             | 	res	1
31a74 13f             | local10
31a74 13f             | 	res	1
31a74 140             | local11
31a74 140             | 	res	1
31a74 141             | local12
31a74 141             | 	res	1
31a74 142             | local13
31a74 142             | 	res	1
31a74 143             | local14
31a74 143             | 	res	1
31a74 144             | local15
31a74 144             | 	res	1
31a74 145             | local16
31a74 145             | 	res	1
31a74 146             | local17
31a74 146             | 	res	1
31a74 147             | local18
31a74 147             | 	res	1
31a74 148             | local19
31a74 148             | 	res	1
31a74 149             | local20
31a74 149             | 	res	1
31a74 14a             | local21
31a74 14a             | 	res	1
31a74 14b             | local22
31a74 14b             | 	res	1
31a74 14c             | muldiva_
31a74 14c             | 	res	1
31a74 14d             | muldivb_
31a74 14d             | 	res	1
31a74 14e             | 	fit	480
31a74 14e             | 
