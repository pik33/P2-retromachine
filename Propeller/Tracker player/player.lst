00000                 | 
00000                 | #line 1 "D:/programowanie/20211226-P2-retromachine/Propeller/Tracker player/player.p2asm"
00000                 | con
00000                 | 	_clkfreq = 319215686
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 319215798
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $1cb2dfb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 2A 06 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 07 F1 03 F6 | 	mov	ptra, objptr
00410 003 04 00 00 FF 
00414 004 74 F0 07 F1 | 	add	ptra, ##2164
00418 005 14 EC 0F FB | 	rdlong	pa, #20 wz
0041c 006 E4 01 90 5D |  if_ne	jmp	#skip_clock_set_
00420 007 00 00 64 FD | 	hubset	#0
00424 008 96 E5 80 FF 
00428 009 00 F0 67 FD | 	hubset	##30092792
0042c 00a 86 01 80 FF 
00430 00b 1F 80 66 FD | 	waitx	##200000
00434 00c 96 E5 00 FF 
00438 00d FB ED 07 F6 | 	mov	pa, ##30092795
0043c 00e 00 EC 63 FD | 	hubset	pa
00440 00f 18 EC 67 FC | 	wrlong	pa, #24
00444 010 6C 83 89 FF 
00448 011 14 6C 6D FC | 	wrlong	##319215798, #20
0044c 012 B4 01 90 FD | 	jmp	#skip_clock_set_
00450 013 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 8C 08 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 5C 62 FD | 	cogid	arg01
00614 084 03 5C 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 00 0F 06 FB | 	rdlong	objptr, ptra
0061c 086 04 F0 07 F1 | 	add	ptra, #4
00620 087 00 2B 06 FB | 	rdlong	result1, ptra
00624 088 04 F0 07 F1 | 	add	ptra, #4
00628 089 00 5D 06 FB | 	rdlong	arg01, ptra
0062c 08a 04 F0 07 F1 | 	add	ptra, #4
00630 08b 00 5F 06 FB | 	rdlong	arg02, ptra
00634 08c 04 F0 07 F1 | 	add	ptra, #4
00638 08d 00 61 06 FB | 	rdlong	arg03, ptra
0063c 08e 04 F0 07 F1 | 	add	ptra, #4
00640 08f 00 63 06 FB | 	rdlong	arg04, ptra
00644 090 10 F0 87 F1 | 	sub	ptra, #16
00648 091 2D 2A 62 FD | 	call	result1
0064c 092 B8 FF 9F FD | 	jmp	#cogexit
00650 093             | FCACHE_LOAD_
00650 093 2B 3E 61 FD |     pop	fcache_tmpb_
00654 094 F6 3F 01 F1 |     add	fcache_tmpb_, pa
00658 095 2A 3E 61 FD |     push	fcache_tmpb_
0065c 096 F6 3F 81 F1 |     sub	fcache_tmpb_, pa
00660 097 02 EC 47 F0 |     shr	pa, #2
00664 098 00 EC 8F F9 |     altd	pa
00668 099 9E 00 00 F6 |     mov	 0-0, ret_instr_
0066c 09a 01 EC 87 F1 |     sub	pa, #1
00670 09b 28 EC 63 FD |     setq	pa
00674 09c 9F 00 00 FB |     rdlong	$0, fcache_tmpb_
00678 09d 00 00 80 FD |     jmp	#\$0 ' jmp to cache
0067c 09e             | ret_instr_
0067c 09e 2D 00 64 FD |     ret
00680 09f             | fcache_tmpb_
00680 09f 00 00 00 00 |     long 0
00684 0a0             | builtin_bytefill_
00684 0a0 01 60 56 F0 |         shr	arg03, #1 wc
00688 0a1 2E 5F 42 CC |  if_c   wrbyte	arg02, arg01
0068c 0a2 01 5C 06 C1 |  if_c   add	arg01, #1
00690 0a3 00 5E FE F9 |         movbyts	arg02, #0
00694 0a4             | builtin_wordfill_
00694 0a4 01 60 56 F0 |         shr	arg03, #1 wc
00698 0a5 2E 5F 52 CC |  if_c   wrword	arg02, arg01
0069c 0a6 02 5C 06 C1 |  if_c   add	arg01, #2
006a0 0a7 2F 5F 2A F9 |         setword	arg02, arg02, #1
006a4 0a8             | builtin_longfill_
006a4 0a8 2E 01 88 FC |         wrfast	#0,arg01
006a8 0a9 00 60 0E F2 |         cmp	arg03, #0 wz
006ac 0aa 30 03 D8 5C |  if_nz  rep	#1, arg03
006b0 0ab 17 5E 62 5D |  if_nz  wflong	arg02
006b4 0ac 2D 00 64 FD |         ret
006b8 0ad             | COUNT_
006b8 0ad 00 00 00 00 |     long 0
006bc 0ae             | RETADDR_
006bc 0ae 00 00 00 00 |     long 0
006c0 0af             | fp
006c0 0af 00 00 00 00 |     long 0
006c4 0b0             | pushregs_
006c4 0b0 2B EC 63 FD |     pop  pa
006c8 0b1 2B 5C 61 FD |     pop  RETADDR_
006cc 0b2 04 5A 95 FB |     tjz  COUNT_, #pushregs_done_
006d0 0b3 01 5A 85 F1 |     sub  COUNT_, #1
006d4 0b4 28 5A 61 FD |     setq COUNT_
006d8 0b5 00 6B 66 FC |     wrlong local01, ptra
006dc 0b6 01 5A 05 F1 |     add  COUNT_, #1
006e0 0b7             | pushregs_done_
006e0 0b7 02 5A 65 F0 |     shl  COUNT_, #2
006e4 0b8 AD F0 03 F1 |     add  ptra, COUNT_
006e8 0b9 02 5A 45 F0 |     shr  COUNT_, #2
006ec 0ba 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006f0 0bb 00 5B 65 FC |     wrlong COUNT_, ptra
006f4 0bc 0C F0 07 F1 |     add    ptra, #12
006f8 0bd F8 5F 01 F6 |     mov    fp, ptra
006fc 0be 2C EC 63 FD |     jmp  pa
00700 0bf             |  popregs_
00700 0bf 2B EC 63 FD |     pop    pa
00704 0c0 0C F0 87 F1 |     sub    ptra, #12
00708 0c1 28 04 64 FD |     setq   #2
0070c 0c2 00 5B 05 FB |     rdlong COUNT_, ptra
00710 0c3 06 5A 95 FB |     tjz    COUNT_, #popregs__ret
00714 0c4 02 5A 65 F0 |     shl    COUNT_, #2
00718 0c5 AD F0 83 F1 |     sub    ptra, COUNT_
0071c 0c6 02 5A 45 F0 |     shr    COUNT_, #2
00720 0c7 01 5A 85 F1 |     sub    COUNT_, #1
00724 0c8 28 5A 61 FD |     setq   COUNT_
00728 0c9 00 6B 06 FB |     rdlong local01, ptra
0072c 0ca             | popregs__ret
0072c 0ca 2A 5C 61 FD |     push   RETADDR_
00730 0cb 2C EC 63 FD |     jmp    pa
00734 0cc             | 
00734 0cc             | unsdivide_
00734 0cc 28 00 64 FD |        setq    #0
00738 0cd 86 0B 13 FD |        qdiv    muldiva_, muldivb_
0073c 0ce 18 0C 63 FD |        getqx   muldivb_
00740 0cf 19 0A 63 0D |  _ret_ getqy   muldiva_
00744 0d0             | 
00744 0d0             | divide_
00744 0d0 85 0B 53 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
00748 0d1 03 0C 86 F5 |        muxc    itmp2_,#%11                    'store sign of x
0074c 0d2 86 0D 5B F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
00750 0d3 02 0C 66 C5 |  if_c  xor     itmp2_,#%10                    'store sign of y
00754 0d4 2D 00 64 AD |  if_z  ret
00758 0d5 D8 FF BF FD |        call    #unsdivide_
0075c 0d6 01 0C D6 F7 |        test    itmp2_,#1        wc       'restore sign, remainder
00760 0d7 85 0B 83 F6 |        negc    muldiva_,muldiva_ 
00764 0d8 02 0C D6 F7 |        test    itmp2_,#%10      wc       'restore sign, division result
00768 0d9 86 0D 83 06 |  _ret_ negc    muldivb_,muldivb_
0076c 0da             | __pc long 0
0076c 0da 00 00 00 00 
00770 0db             | __setjmp
00770 0db 2B B4 61 FD |     pop __pc
00774 0dc 00 2A 06 F6 |     mov result1, #0
00778 0dd 00 2C 06 F6 |     mov result2, #0
0077c 0de 2E 07 02 F6 |     mov abortchain, arg01
00780 0df 2E 5F 61 FC |     wrlong fp, arg01
00784 0e0 04 5C 06 F1 |     add arg01, #4
00788 0e1 2E F1 63 FC |     wrlong ptra, arg01
0078c 0e2 04 5C 06 F1 |     add arg01, #4
00790 0e3 2E 0F 62 FC |     wrlong objptr, arg01
00794 0e4 04 5C 06 F1 |     add arg01, #4
00798 0e5 2E B5 61 FC |     wrlong __pc, arg01
0079c 0e6 2C B4 61 FD |     jmp __pc
007a0 0e7             | __unwind_pc long 0
007a0 0e7 00 00 00 00 
007a4 0e8             | __unwind_stack
007a4 0e8 2B CE 61 FD |    pop  __unwind_pc
007a8 0e9             | __unwind_loop
007a8 0e9 2F 5D 0A F2 |    cmp  arg01, arg02 wz
007ac 0ea 10 00 90 AD |   if_z jmp #__unwind_stack_ret
007b0 0eb 2E F1 03 F6 |    mov   ptra, arg01
007b4 0ec 48 FF BF FD |    call  #popregs_
007b8 0ed AF 5C 02 F6 |    mov   arg01, fp
007bc 0ee E8 FF 9F FD |    jmp   #__unwind_loop
007c0 0ef             | __unwind_stack_ret
007c0 0ef 2C CE 61 FD |    jmp  __unwind_pc
007c4 0f0             | __longjmp
007c4 0f0 2B B4 61 FD |     pop __pc
007c8 0f1 00 5C 0E F2 |     cmp    arg01, #0 wz
007cc 0f2 30 00 90 AD |  if_z jmp #nocatch
007d0 0f3 2F 2B 02 F6 |     mov result1, arg02
007d4 0f4 01 2C 06 F6 |     mov result2, #1
007d8 0f5 2E 5F 02 FB |     rdlong arg02, arg01
007dc 0f6 04 5C 06 F1 |     add arg01, #4
007e0 0f7 2E F1 03 FB |     rdlong ptra, arg01
007e4 0f8 04 5C 06 F1 |     add arg01, #4
007e8 0f9 2E 0F 02 FB |     rdlong objptr, arg01
007ec 0fa 04 5C 06 F1 |     add arg01, #4
007f0 0fb 2E B5 01 FB |     rdlong __pc, arg01
007f4 0fc AF 5C 02 F6 |     mov arg01, fp
007f8 0fd A8 FF BF FD |     call #__unwind_stack
007fc 0fe             | __longjmp_ret
007fc 0fe 2C B4 61 FD |     jmp  __pc
00800 0ff             | nocatch
00800 0ff 00 60 0E F2 |     cmp arg03, #0 wz
00804 100 00 FE 9F AD |  if_z jmp #cogexit
00808 101 F0 FF 9F FD |     jmp #__longjmp_ret
0080c 102             | 
0080c 102             | __heap_ptr
0080c 102 F0 86 02 00 | 	long	@__heap_base
00810 103             | abortchain
00810 103 00 00 00 00 | 	long	0
00814 104             | entryptr__
00814 104 04 04 00 00 | 	long	@entry
00818 105             | itmp1_
00818 105 00 00 00 00 | 	long	0
0081c 106             | itmp2_
0081c 106 00 00 00 00 | 	long	0
00820 107             | objptr
00820 107 F8 96 02 00 | 	long	@objmem
00824 108             | ptr___struct___bas_wrap_sender_tx_
00824 108 68 76 00 00 | 	long	@__struct___bas_wrap_sender_tx
00828 109             | ptr___struct__s_vfs_file_t_putchar_
00828 109 B0 75 00 00 | 	long	@__struct__s_vfs_file_t_putchar
0082c 10a             | ptr___system__dat__
0082c 10a 90 84 02 00 | 	long	@__system__dat_
00830 10b             | ptr__audio010_spin2_dat__
00830 10b AC 7D 02 00 | 	long	@_audio010_spin2_dat_
00834 10c             | ptr__dat__
00834 10c 04 77 00 00 | 	long	@_dat_
00838 10d             | ptr__hng030rm_spin2_dat__
00838 10d 24 48 02 00 | 	long	@_hng030rm_spin2_dat_
0083c 10e             | ptr__hng030rm_spin2_putchar_
0083c 10e CC 1C 00 00 | 	long	@_hng030rm_spin2_putchar
00840 10f             | ptr__hng030rm_spin2_putpixel1_
00840 10f A0 17 00 00 | 	long	@_hng030rm_spin2_putpixel1
00844 110             | ptr__hng030rm_spin2_putpixel2_
00844 110 88 18 00 00 | 	long	@_hng030rm_spin2_putpixel2
00848 111             | ptr__hng030rm_spin2_putpixel4_
00848 111 60 19 00 00 | 	long	@_hng030rm_spin2_putpixel4
0084c 112             | ptr__hng030rm_spin2_putpixel8_
0084c 112 38 1A 00 00 | 	long	@_hng030rm_spin2_putpixel8
00850 113             | ptr__retrocog_spin2_serialcog_
00850 113 C8 2B 00 00 | 	long	@_retrocog_spin2_serialcog
00854 114             | ptr__trackerplayer_spin2_dat__
00854 114 88 6C 02 00 | 	long	@_trackerplayer_spin2_dat_
00858 115             | result1
00858 115 00 00 00 00 | 	long	0
0085c 116             | result2
0085c 116 00 00 00 00 | 	long	0
00860 117             | result3
00860 117 00 00 00 00 | 	long	0
00864 118             | COG_BSS_START
00864 118             | 	fit	480
00864                 | 	orgh
00864                 | hubentry
00864                 | 
00864                 | ' 
00864                 | ' function addr(byref v as any)
00864                 | _addr
00864     00 5A 05 F6 | 	mov	COUNT_, #0
00868     B0 00 A0 FD | 	call	#pushregs_
0086c     08 F0 07 F1 | 	add	ptra, #8
00870     04 5E 05 F1 | 	add	fp, #4
00874     AF 5C 62 FC | 	wrlong	arg01, fp
00878                 | ' 
00878                 | ' return(cast(ulong,@v))
00878     2E 2B 02 F6 | 	mov	result1, arg01
0087c     04 5E 85 F1 | 	sub	fp, #4
00880     AF F0 03 F6 | 	mov	ptra, fp
00884     BF 00 A0 FD | 	call	#popregs_
00888                 | _addr_ret
00888     2D 00 64 FD | 	ret
0088c                 | 
0088c                 | _program
0088c     29 5A 05 F6 | 	mov	COUNT_, #41
00890     B0 00 A0 FD | 	call	#pushregs_
00894     EC 0E 06 F1 | 	add	objptr, #236
00898                 | ' 
00898                 | ' cog:=cogspin(16,serialcog(),@serialstack)
00898     07 6B 02 F6 | 	mov	local01, objptr
0089c     01 00 00 FF 
008a0     40 0F 06 F1 | 	add	objptr, ##832
008a4     07 6D 02 F6 | 	mov	local02, objptr
008a8     36 6B 62 FC | 	wrlong	local01, local02
008ac     04 6C 06 F1 | 	add	local02, #4
008b0     36 27 62 FC | 	wrlong	ptr__retrocog_spin2_serialcog_, local02
008b4     10 5C 06 F6 | 	mov	arg01, #16
008b8     28 0E 62 FD | 	setq	objptr
008bc     04 5D F2 FC | 	coginit	arg01, entryptr__ wc
008c0     01 5C 66 C6 |  if_b	neg	arg01, #1
008c4     2E 2B 02 F6 | 	mov	result1, arg01
008c8                 | ' return cog
008c8     00 0F 06 F1 | 	add	objptr, #256
008cc     07 2B 62 FC | 	wrlong	result1, objptr
008d0                 | ' c=rm.start()
008d0                 | ' return c
008d0     40 6E 06 F6 | 	mov	local03, #64
008d4     02 00 00 FF 
008d8     00 0F 86 F1 | 	sub	objptr, ##1280
008dc     07 71 02 F6 | 	mov	local04, objptr
008e0                 | ' 
008e0                 | ' ' initialize pointers and variables
008e0                 | ' 
008e0                 | ' border_ptr:=@bordercolor
008e0     24 0E 86 F1 | 	sub	objptr, #36
008e4     07 71 62 FC | 	wrlong	local04, objptr
008e8     08 00 00 FF 
008ec     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##4096
008f0                 | ' font_ptr:=@st_font
008f0     04 0E 86 F1 | 	sub	objptr, #4
008f4     07 1B 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
008f8                 | ' hdmibase:=base
008f8     20 0E 06 F1 | 	add	objptr, #32
008fc     07 01 68 FC | 	wrlong	#0, objptr
00900     24 0E 86 F1 | 	sub	objptr, #36
00904     0F 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel1_
00908                 | ' p1:=@putpixel1
00908     07 5D 02 F6 | 	mov	arg01, objptr
0090c     08 00 00 FF 
00910     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##4096
00914     BC 4D B0 FD | 	call	#__system___make_methodptr
00918     15 73 02 F6 | 	mov	local05, result1
0091c     DC 0E 06 F1 | 	add	objptr, #220
00920     07 73 62 FC | 	wrlong	local05, objptr
00924     DC 0E 86 F1 | 	sub	objptr, #220
00928     10 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel2_
0092c                 | ' p2:=@putpixel2
0092c     07 5D 02 F6 | 	mov	arg01, objptr
00930     A0 4D B0 FD | 	call	#__system___make_methodptr
00934     15 73 02 F6 | 	mov	local05, result1
00938     E0 0E 06 F1 | 	add	objptr, #224
0093c     07 73 62 FC | 	wrlong	local05, objptr
00940     E0 0E 86 F1 | 	sub	objptr, #224
00944     11 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel4_
00948                 | ' p4:=@putpixel4
00948     07 5D 02 F6 | 	mov	arg01, objptr
0094c     84 4D B0 FD | 	call	#__system___make_methodptr
00950     15 73 02 F6 | 	mov	local05, result1
00954     E4 0E 06 F1 | 	add	objptr, #228
00958     07 73 62 FC | 	wrlong	local05, objptr
0095c     E4 0E 86 F1 | 	sub	objptr, #228
00960     12 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel8_
00964                 | ' p8:=@putpixel8
00964     07 5D 02 F6 | 	mov	arg01, objptr
00968     68 4D B0 FD | 	call	#__system___make_methodptr
0096c     15 73 02 F6 | 	mov	local05, result1
00970     E8 0E 06 F1 | 	add	objptr, #232
00974     07 73 62 FC | 	wrlong	local05, objptr
00978     E8 0E 86 F1 | 	sub	objptr, #232
0097c                 | ' 
0097c                 | ' 
0097c                 | ' ' the mode has to be set here to enable computing the buffer length
0097c                 | ' 
0097c                 | ' setmode(mode)
0097c     40 5C 06 F6 | 	mov	arg01, #64
00980     04 18 B0 FD | 	call	#_hng030rm_spin2_setmode
00984     40 0E 06 F1 | 	add	objptr, #64
00988     07 75 02 F6 | 	mov	local06, objptr
0098c                 | ' 
0098c                 | ' vblank_ptr:=@vblank
0098c     34 0E 86 F1 | 	sub	objptr, #52
00990     07 75 62 FC | 	wrlong	local06, objptr
00994     28 0E 06 F1 | 	add	objptr, #40
00998     07 77 02 F6 | 	mov	local07, objptr
0099c                 | ' cursor_ptr:=@cursor_x
0099c     24 0E 86 F1 | 	sub	objptr, #36
009a0     07 77 62 FC | 	wrlong	local07, objptr
009a4     88 0E 06 F1 | 	add	objptr, #136
009a8     07 79 02 F6 | 	mov	local08, objptr
009ac                 | ' 
009ac                 | ' fontnum_ptr:=@fontnum
009ac     78 0E 86 F1 | 	sub	objptr, #120
009b0     07 79 62 FC | 	wrlong	local08, objptr
009b4                 | ' 
009b4                 | ' fontnum:=0  ' PC type font ' TODO: font# in buffer byte #1
009b4     78 0E 06 F1 | 	add	objptr, #120
009b8     07 01 68 FC | 	wrlong	#0, objptr
009bc     1C 0E 06 F1 | 	add	objptr, #28
009c0     07 5D 02 F6 | 	mov	arg01, objptr
009c4     B4 0E 86 F1 | 	sub	objptr, #180
009c8     0F 00 00 FF 
009cc     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7768
009d0     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
009d4     0F 00 00 FF 
009d8     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7768
009dc                 | ' bytemove(@colors,@vgacolors,16)
009dc     10 60 06 F6 | 	mov	arg03, #16
009e0     C8 4B B0 FD | 	call	#__system____builtin_memmove
009e4                 | ' 
009e4                 | ' ' initialize a cursor
009e4                 | ' 
009e4                 | ' cursor_x:=0
009e4     34 0E 06 F1 | 	add	objptr, #52
009e8     07 01 48 FC | 	wrbyte	#0, objptr
009ec                 | ' cursor_y:=0
009ec     01 0E 06 F1 | 	add	objptr, #1
009f0     07 01 48 FC | 	wrbyte	#0, objptr
009f4                 | ' cursor_sh:=14
009f4     01 0E 06 F1 | 	add	objptr, #1
009f8     07 1D 48 FC | 	wrbyte	#14, objptr
009fc     36 0E 86 F1 | 	sub	objptr, #54
00a00                 | ' 
00a00                 | ' 
00a00                 | ' ' start the cog
00a00                 | ' 
00a00                 | ' cog:=coginit(16,@hdmi, @buf_ptr)
00a00     0F 00 00 FF 
00a04     68 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7784
00a08     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
00a0c     0F 00 00 FF 
00a10     68 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7784
00a14     07 61 02 F6 | 	mov	arg03, objptr
00a18     10 5C 06 F6 | 	mov	arg01, #16
00a1c     28 60 62 FD | 	setq	arg03
00a20     2F 5D F2 FC | 	coginit	arg01, arg02 wc
00a24     01 5C 66 C6 |  if_b	neg	arg01, #1
00a28     2E 2B 02 F6 | 	mov	result1, arg01
00a2c     15 7B 02 F6 | 	mov	local09, result1
00a30     28 0E 06 F1 | 	add	objptr, #40
00a34     07 7B 62 FC | 	wrlong	local09, objptr
00a38     28 0E 86 F1 | 	sub	objptr, #40
00a3c                 | ' waitms(20)
00a3c     14 5C 06 F6 | 	mov	arg01, #20
00a40     EC 4D B0 FD | 	call	#__system___waitms
00a44                 | ' 
00a44                 | ' ' clear the screen and set the colors to green on black
00a44                 | ' 
00a44                 | ' cls(c_green,c_black)
00a44     C7 5C 06 F6 | 	mov	arg01, #199
00a48     00 5E 06 F6 | 	mov	arg02, #0
00a4c     90 10 B0 FD | 	call	#_hng030rm_spin2_cls
00a50                 | ' setbordercolor(0,0,128)
00a50     00 5C 06 F6 | 	mov	arg01, #0
00a54     00 5E 06 F6 | 	mov	arg02, #0
00a58     80 60 06 F6 | 	mov	arg03, #128
00a5c     5C 10 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a60                 | ' setwritecolors(c_green,c_black)
00a60     00 5E 06 F6 | 	mov	arg02, #0
00a64                 | ' 
00a64                 | ' 
00a64                 | ' write_color:=ff
00a64     38 0E 06 F1 | 	add	objptr, #56
00a68     07 8F 69 FC | 	wrlong	#199, objptr
00a6c                 | ' write_background:=bb
00a6c     04 0E 06 F1 | 	add	objptr, #4
00a70     07 01 68 FC | 	wrlong	#0, objptr
00a74                 | ' 
00a74                 | ' return cog
00a74     14 0E 86 F1 | 	sub	objptr, #20
00a78     07 2B 02 FB | 	rdlong	result1, objptr
00a7c     28 0E 86 F1 | 	sub	objptr, #40
00a80     00 5C 06 F6 | 	mov	arg01, #0
00a84     00 60 06 F6 | 	mov	arg03, #0
00a88     30 10 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a8c                 | ' v030.start(mode,pin)
00a8c                 | ' v030.setbordercolor(0,0,0)
00a8c                 | ' open SendRecvDevice(@v030.putchar, nil, nil) as #0
00a8c     07 5D 02 F6 | 	mov	arg01, objptr
00a90     0E 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putchar_
00a94     3C 4C B0 FD | 	call	#__system___make_methodptr
00a98     00 2E 06 F6 | 	mov	result3, #0
00a9c     00 2C 06 F6 | 	mov	result2, #0
00aa0     15 5F 02 F6 | 	mov	arg02, result1
00aa4     00 60 06 F6 | 	mov	arg03, #0
00aa8     00 62 06 F6 | 	mov	arg04, #0
00aac     00 5C 06 F6 | 	mov	arg01, #0
00ab0     4C 4E B0 FD | 	call	#__system___basic_open
00ab4     00 2A 06 F6 | 	mov	result1, #0
00ab8     9A 5C 06 F6 | 	mov	arg01, #154
00abc     93 5E 06 F6 | 	mov	arg02, #147
00ac0     1C 10 B0 FD | 	call	#_hng030rm_spin2_cls
00ac4     0C 5D 02 F6 | 	mov	arg01, ptr__dat__
00ac8     98 FD BF FD | 	call	#_addr
00acc     04 00 00 FF 
00ad0     4C 0E 06 F1 | 	add	objptr, ##2124
00ad4     07 2B 62 FC | 	wrlong	result1, objptr
00ad8     15 5D 02 F6 | 	mov	arg01, result1
00adc     00 5E 06 F6 | 	mov	arg02, #0
00ae0     01 00 00 FF 
00ae4     1C 0F 86 F1 | 	sub	objptr, ##796
00ae8     84 27 B0 FD | 	call	#_trackerplayer_spin2_initModule
00aec     02 00 00 FF 
00af0     30 0F 86 F1 | 	sub	objptr, ##1328
00af4     F4 5D 06 F6 | 	mov	arg01, #500
00af8     34 4D B0 FD | 	call	#__system___waitms
00afc     04 00 00 FF 
00b00     50 0E 06 F1 | 	add	objptr, ##2128
00b04     07 41 68 FC | 	wrlong	#32, objptr
00b08                 | ' 
00b08                 | ' 
00b08                 | ' ma=addr(module)
00b08                 | ' tracker.initmodule(ma,0)
00b08                 | ' waitms 500
00b08                 | ' samples=32: if peek(ma+1080)=asc("M") and peek(ma+1082)=asc("K") then samples=16
00b08     00 7C 06 F6 | 	mov	local10, #0
00b0c     04 0E 86 F1 | 	sub	objptr, #4
00b10     07 5D 02 FB | 	rdlong	arg01, objptr
00b14     02 00 00 FF 
00b18     38 5C 06 F1 | 	add	arg01, ##1080
00b1c                 | ' asm
00b1c     2E 7F C2 FA | 	rdbyte	local11, arg01
00b20                 | ' return r
00b20     07 7E 46 F7 | 	zerox	local11, #7
00b24     4D 7E 0E F2 | 	cmp	local11, #77 wz
00b28     01 7C 66 A6 |  if_e	neg	local10, #1
00b2c     00 80 06 F6 | 	mov	local12, #0
00b30     07 5D 02 FB | 	rdlong	arg01, objptr
00b34     04 00 00 FF 
00b38     4C 0E 86 F1 | 	sub	objptr, ##2124
00b3c     02 00 00 FF 
00b40     3A 5C 06 F1 | 	add	arg01, ##1082
00b44                 | ' asm
00b44     2E 2B C2 FA | 	rdbyte	result1, arg01
00b48                 | ' return r
00b48     15 83 02 F6 | 	mov	local13, result1
00b4c     07 82 46 F7 | 	zerox	local13, #7
00b50     4B 82 0E F2 | 	cmp	local13, #75 wz
00b54     01 80 66 A6 |  if_e	neg	local12, #1
00b58     40 7D CA F7 | 	test	local10, local12 wz
00b5c     04 00 00 5F 
00b60     50 0E 06 51 |  if_ne	add	objptr, ##2128
00b64     07 21 68 5C |  if_ne	wrlong	#16, objptr
00b68     04 00 00 5F 
00b6c     50 0E 86 51 |  if_ne	sub	objptr, ##2128
00b70     01 5E 06 F6 | 	mov	arg02, #1
00b74                 | ' 
00b74                 | ' ''---------- Set the (x,y) position of cursor
00b74                 | ' 
00b74                 | ' cursor_x:=x
00b74     34 0E 06 F1 | 	add	objptr, #52
00b78     07 03 48 FC | 	wrbyte	#1, objptr
00b7c                 | ' cursor_y:=y
00b7c     01 0E 06 F1 | 	add	objptr, #1
00b80     07 03 48 FC | 	wrbyte	#1, objptr
00b84     35 0E 86 F1 | 	sub	objptr, #53
00b88                 | ' position 1,1 : print samples;" ";"samples module"
00b88     00 5C 06 F6 | 	mov	arg01, #0
00b8c     F0 5F B0 FD | 	call	#__system___getiolock_0145
00b90     15 5D 02 F6 | 	mov	arg01, result1
00b94     7C 4B B0 FD | 	call	#__system___lockmem
00b98     00 2A 06 F6 | 	mov	result1, #0
00b9c     04 00 00 FF 
00ba0     50 0E 06 F1 | 	add	objptr, ##2128
00ba4     07 5F 02 FB | 	rdlong	arg02, objptr
00ba8     04 00 00 FF 
00bac     50 0E 86 F1 | 	sub	objptr, ##2128
00bb0     00 5C 06 F6 | 	mov	arg01, #0
00bb4     00 60 06 F6 | 	mov	arg03, #0
00bb8     0A 62 06 F6 | 	mov	arg04, #10
00bbc     2F 85 02 F6 | 	mov	local14, arg02
00bc0     00 86 06 F6 | 	mov	local15, #0
00bc4     0A 88 06 F6 | 	mov	local16, #10
00bc8     6C 5F B0 FD | 	call	#__system___gettxfunc
00bcc     15 8B 0A F6 | 	mov	local17, result1 wz
00bd0     00 2A 06 A6 |  if_e	mov	result1, #0
00bd4     14 00 90 AD |  if_e	jmp	#LR__0001
00bd8     45 5D 02 F6 | 	mov	arg01, local17
00bdc     00 5E 06 F6 | 	mov	arg02, #0
00be0     42 61 02 F6 | 	mov	arg03, local14
00be4     0A 62 06 F6 | 	mov	arg04, #10
00be8     64 4F B0 FD | 	call	#__system___fmtnum
00bec                 | LR__0001
00bec     3B 00 00 FF 
00bf0     F2 5E 06 F6 | 	mov	arg02, ##@LR__0436
00bf4     00 5C 06 F6 | 	mov	arg01, #0
00bf8     00 60 06 F6 | 	mov	arg03, #0
00bfc     B4 4D B0 FD | 	call	#__system___basic_print_string
00c00     3B 00 00 FF 
00c04     F4 5E 06 F6 | 	mov	arg02, ##@LR__0437
00c08     00 5C 06 F6 | 	mov	arg01, #0
00c0c     00 60 06 F6 | 	mov	arg03, #0
00c10     A0 4D B0 FD | 	call	#__system___basic_print_string
00c14     00 5C 06 F6 | 	mov	arg01, #0
00c18     0A 5E 06 F6 | 	mov	arg02, #10
00c1c     00 60 06 F6 | 	mov	arg03, #0
00c20     14 5F B0 FD | 	call	#__system___gettxfunc
00c24     15 8D 0A F6 | 	mov	local18, result1 wz
00c28     00 2A 06 A6 |  if_e	mov	result1, #0
00c2c     20 00 90 AD |  if_e	jmp	#LR__0002
00c30     46 8F 02 FB | 	rdlong	local19, local18
00c34     04 8C 06 F1 | 	add	local18, #4
00c38     46 91 02 FB | 	rdlong	local20, local18
00c3c     0A 5C 06 F6 | 	mov	arg01, #10
00c40     07 93 02 F6 | 	mov	local21, objptr
00c44     47 0F 02 F6 | 	mov	objptr, local19
00c48     2D 90 62 FD | 	call	local20
00c4c     49 0F 02 F6 | 	mov	objptr, local21
00c50                 | LR__0002
00c50     01 2A 06 F6 | 	mov	result1, #1
00c54     00 5C 06 F6 | 	mov	arg01, #0
00c58     24 5F B0 FD | 	call	#__system___getiolock_0145
00c5c     15 01 68 FC | 	wrlong	#0, result1
00c60     03 00 00 FF 
00c64     2C 0F 06 F1 | 	add	objptr, ##1836
00c68     03 00 00 FF 
00c6c     DC 16 06 F1 | 	add	ptr__audio010_spin2_dat__, ##1756
00c70                 | ' 
00c70                 | ' 
00c70                 | ' channel1[0]:=@null
00c70     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00c74                 | ' channel1[1]:=0
00c74     04 0E 06 F1 | 	add	objptr, #4
00c78     07 01 68 FC | 	wrlong	#0, objptr
00c7c                 | ' channel1[2]:=0
00c7c     04 0E 06 F1 | 	add	objptr, #4
00c80     07 01 68 FC | 	wrlong	#0, objptr
00c84                 | ' channel1[3]:=2
00c84     04 0E 06 F1 | 	add	objptr, #4
00c88     07 05 68 FC | 	wrlong	#2, objptr
00c8c                 | ' channel1[4]:=0
00c8c     04 0E 06 F1 | 	add	objptr, #4
00c90     07 01 68 FC | 	wrlong	#0, objptr
00c94                 | ' channel1[5]:=8192
00c94     04 0E 06 F1 | 	add	objptr, #4
00c98     10 00 80 FF 
00c9c     07 01 68 FC | 	wrlong	##8192, objptr
00ca0                 | ' channel1[6]:=101
00ca0     04 0E 06 F1 | 	add	objptr, #4
00ca4     07 CB 68 FC | 	wrlong	#101, objptr
00ca8                 | ' channel1[7]:=2
00ca8     04 0E 06 F1 | 	add	objptr, #4
00cac     07 05 68 FC | 	wrlong	#2, objptr
00cb0                 | ' 
00cb0                 | ' channel2[0]:=@null
00cb0     08 0E 06 F1 | 	add	objptr, #8
00cb4     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00cb8                 | ' channel2[1]:=0
00cb8     04 0E 06 F1 | 	add	objptr, #4
00cbc     07 01 68 FC | 	wrlong	#0, objptr
00cc0                 | ' channel2[2]:=0
00cc0     04 0E 06 F1 | 	add	objptr, #4
00cc4     07 01 68 FC | 	wrlong	#0, objptr
00cc8                 | ' channel2[3]:=2
00cc8     04 0E 06 F1 | 	add	objptr, #4
00ccc     07 05 68 FC | 	wrlong	#2, objptr
00cd0                 | ' channel2[4]:=0
00cd0     04 0E 06 F1 | 	add	objptr, #4
00cd4     07 01 68 FC | 	wrlong	#0, objptr
00cd8                 | ' channel2[5]:=8192
00cd8     04 0E 06 F1 | 	add	objptr, #4
00cdc     10 00 80 FF 
00ce0     07 01 68 FC | 	wrlong	##8192, objptr
00ce4                 | ' channel2[6]:=103
00ce4     04 0E 06 F1 | 	add	objptr, #4
00ce8     07 CF 68 FC | 	wrlong	#103, objptr
00cec                 | ' channel2[7]:=2
00cec     04 0E 06 F1 | 	add	objptr, #4
00cf0     07 05 68 FC | 	wrlong	#2, objptr
00cf4                 | ' 
00cf4                 | ' channel3[0]:=@null
00cf4     08 0E 06 F1 | 	add	objptr, #8
00cf8     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00cfc                 | ' channel3[1]:=0
00cfc     04 0E 06 F1 | 	add	objptr, #4
00d00     07 01 68 FC | 	wrlong	#0, objptr
00d04                 | ' channel3[2]:=0
00d04     04 0E 06 F1 | 	add	objptr, #4
00d08     07 01 68 FC | 	wrlong	#0, objptr
00d0c                 | ' channel3[3]:=2
00d0c     04 0E 06 F1 | 	add	objptr, #4
00d10     07 05 68 FC | 	wrlong	#2, objptr
00d14                 | ' channel3[4]:=0
00d14     04 0E 06 F1 | 	add	objptr, #4
00d18     07 01 68 FC | 	wrlong	#0, objptr
00d1c                 | ' channel3[5]:=8192
00d1c     04 0E 06 F1 | 	add	objptr, #4
00d20     10 00 80 FF 
00d24     07 01 68 FC | 	wrlong	##8192, objptr
00d28                 | ' channel3[6]:=107
00d28     04 0E 06 F1 | 	add	objptr, #4
00d2c     07 D7 68 FC | 	wrlong	#107, objptr
00d30                 | ' channel3[7]:=2
00d30     04 0E 06 F1 | 	add	objptr, #4
00d34     07 05 68 FC | 	wrlong	#2, objptr
00d38                 | ' 
00d38                 | ' channel4[0]:=@null
00d38     08 0E 06 F1 | 	add	objptr, #8
00d3c     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00d40                 | ' channel4[1]:=0
00d40     04 0E 06 F1 | 	add	objptr, #4
00d44     07 01 68 FC | 	wrlong	#0, objptr
00d48                 | ' channel4[2]:=0
00d48     04 0E 06 F1 | 	add	objptr, #4
00d4c     07 01 68 FC | 	wrlong	#0, objptr
00d50                 | ' channel4[3]:=2
00d50     04 0E 06 F1 | 	add	objptr, #4
00d54     07 05 68 FC | 	wrlong	#2, objptr
00d58                 | ' channel4[4]:=0
00d58     04 0E 06 F1 | 	add	objptr, #4
00d5c     07 01 68 FC | 	wrlong	#0, objptr
00d60                 | ' channel4[5]:=8192
00d60     04 0E 06 F1 | 	add	objptr, #4
00d64     10 00 80 FF 
00d68     07 01 68 FC | 	wrlong	##8192, objptr
00d6c                 | ' channel4[6]:=109
00d6c     04 0E 06 F1 | 	add	objptr, #4
00d70     07 DB 68 FC | 	wrlong	#109, objptr
00d74                 | ' channel4[7]:=2
00d74     04 0E 06 F1 | 	add	objptr, #4
00d78     07 05 68 FC | 	wrlong	#2, objptr
00d7c                 | ' channel4[8]:=1
00d7c     04 0E 06 F1 | 	add	objptr, #4
00d80     07 03 68 FC | 	wrlong	#1, objptr
00d84                 | ' 
00d84                 | ' channel5[0]:=@null
00d84     04 0E 06 F1 | 	add	objptr, #4
00d88     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00d8c                 | ' channel5[1]:=0
00d8c     04 0E 06 F1 | 	add	objptr, #4
00d90     07 01 68 FC | 	wrlong	#0, objptr
00d94                 | ' channel5[2]:=0
00d94     04 0E 06 F1 | 	add	objptr, #4
00d98     07 01 68 FC | 	wrlong	#0, objptr
00d9c                 | ' channel5[3]:=2
00d9c     04 0E 06 F1 | 	add	objptr, #4
00da0     07 05 68 FC | 	wrlong	#2, objptr
00da4                 | ' channel5[4]:=0
00da4     04 0E 06 F1 | 	add	objptr, #4
00da8     07 01 68 FC | 	wrlong	#0, objptr
00dac                 | ' channel5[5]:=8192
00dac     04 0E 06 F1 | 	add	objptr, #4
00db0     10 00 80 FF 
00db4     07 01 68 FC | 	wrlong	##8192, objptr
00db8                 | ' channel5[6]:=113
00db8     04 0E 06 F1 | 	add	objptr, #4
00dbc     07 E3 68 FC | 	wrlong	#113, objptr
00dc0                 | ' channel5[7]:=2
00dc0     04 0E 06 F1 | 	add	objptr, #4
00dc4     07 05 68 FC | 	wrlong	#2, objptr
00dc8                 | ' 
00dc8                 | ' channel6[0]:=@null
00dc8     08 0E 06 F1 | 	add	objptr, #8
00dcc     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00dd0                 | ' channel6[1]:=0
00dd0     04 0E 06 F1 | 	add	objptr, #4
00dd4     07 01 68 FC | 	wrlong	#0, objptr
00dd8                 | ' channel6[2]:=0
00dd8     04 0E 06 F1 | 	add	objptr, #4
00ddc     07 01 68 FC | 	wrlong	#0, objptr
00de0                 | ' channel6[3]:=2
00de0     04 0E 06 F1 | 	add	objptr, #4
00de4     07 05 68 FC | 	wrlong	#2, objptr
00de8                 | ' channel6[4]:=0
00de8     04 0E 06 F1 | 	add	objptr, #4
00dec     07 01 68 FC | 	wrlong	#0, objptr
00df0                 | ' channel6[5]:=8192
00df0     04 0E 06 F1 | 	add	objptr, #4
00df4     10 00 80 FF 
00df8     07 01 68 FC | 	wrlong	##8192, objptr
00dfc                 | ' channel6[6]:=127
00dfc     04 0E 06 F1 | 	add	objptr, #4
00e00     07 FF 68 FC | 	wrlong	#127, objptr
00e04                 | ' channel6[7]:=2
00e04     04 0E 06 F1 | 	add	objptr, #4
00e08     07 05 68 FC | 	wrlong	#2, objptr
00e0c                 | ' 
00e0c                 | ' channel7[0]:=@null
00e0c     08 0E 06 F1 | 	add	objptr, #8
00e10     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00e14                 | ' channel7[1]:=0
00e14     04 0E 06 F1 | 	add	objptr, #4
00e18     07 01 68 FC | 	wrlong	#0, objptr
00e1c                 | ' channel7[2]:=0
00e1c     04 0E 06 F1 | 	add	objptr, #4
00e20     07 01 68 FC | 	wrlong	#0, objptr
00e24                 | ' channel7[3]:=2
00e24     04 0E 06 F1 | 	add	objptr, #4
00e28     07 05 68 FC | 	wrlong	#2, objptr
00e2c                 | ' channel7[4]:=0
00e2c     04 0E 06 F1 | 	add	objptr, #4
00e30     07 01 68 FC | 	wrlong	#0, objptr
00e34                 | ' channel7[5]:=8192
00e34     04 0E 06 F1 | 	add	objptr, #4
00e38     10 00 80 FF 
00e3c     07 01 68 FC | 	wrlong	##8192, objptr
00e40                 | ' channel7[6]:=131
00e40     04 0E 06 F1 | 	add	objptr, #4
00e44     07 07 69 FC | 	wrlong	#131, objptr
00e48                 | ' channel7[7]:=2
00e48     04 0E 06 F1 | 	add	objptr, #4
00e4c     07 05 68 FC | 	wrlong	#2, objptr
00e50                 | ' 
00e50                 | ' channel8[0]:=@null
00e50     08 0E 06 F1 | 	add	objptr, #8
00e54     07 17 62 FC | 	wrlong	ptr__audio010_spin2_dat__, objptr
00e58                 | ' channel8[1]:=0
00e58     04 0E 06 F1 | 	add	objptr, #4
00e5c     07 01 68 FC | 	wrlong	#0, objptr
00e60                 | ' channel8[2]:=0
00e60     04 0E 06 F1 | 	add	objptr, #4
00e64     07 01 68 FC | 	wrlong	#0, objptr
00e68                 | ' channel8[3]:=2
00e68     04 0E 06 F1 | 	add	objptr, #4
00e6c     07 05 68 FC | 	wrlong	#2, objptr
00e70                 | ' channel8[4]:=0
00e70     04 0E 06 F1 | 	add	objptr, #4
00e74     07 01 68 FC | 	wrlong	#0, objptr
00e78                 | ' channel8[5]:=8192
00e78     04 0E 06 F1 | 	add	objptr, #4
00e7c     10 00 80 FF 
00e80     07 01 68 FC | 	wrlong	##8192, objptr
00e84                 | ' channel8[6]:=137
00e84     04 0E 06 F1 | 	add	objptr, #4
00e88     07 13 69 FC | 	wrlong	#137, objptr
00e8c                 | ' channel8[7]:=2
00e8c     04 0E 06 F1 | 	add	objptr, #4
00e90     07 05 68 FC | 	wrlong	#2, objptr
00e94                 | ' 
00e94                 | ' channel1[8]:=1
00e94     F8 0E 86 F1 | 	sub	objptr, #248
00e98     07 03 68 FC | 	wrlong	#1, objptr
00e9c                 | ' channel2[8]:=1
00e9c     24 0E 06 F1 | 	add	objptr, #36
00ea0     07 03 68 FC | 	wrlong	#1, objptr
00ea4                 | ' channel3[8]:=1
00ea4     24 0E 06 F1 | 	add	objptr, #36
00ea8     07 03 68 FC | 	wrlong	#1, objptr
00eac                 | ' channel4[8]:=1
00eac     24 0E 06 F1 | 	add	objptr, #36
00eb0     07 03 68 FC | 	wrlong	#1, objptr
00eb4                 | ' channel5[8]:=1
00eb4     24 0E 06 F1 | 	add	objptr, #36
00eb8     07 03 68 FC | 	wrlong	#1, objptr
00ebc                 | ' channel6[8]:=1
00ebc     24 0E 06 F1 | 	add	objptr, #36
00ec0     07 03 68 FC | 	wrlong	#1, objptr
00ec4                 | ' channel7[8]:=1
00ec4     24 0E 06 F1 | 	add	objptr, #36
00ec8     07 03 68 FC | 	wrlong	#1, objptr
00ecc                 | ' channel8[8]:=1
00ecc     24 0E 06 F1 | 	add	objptr, #36
00ed0     07 03 68 FC | 	wrlong	#1, objptr
00ed4     1C 0F 86 F1 | 	sub	objptr, #284
00ed8                 | ' 
00ed8                 | ' cog:=coginit(16,@audio,@channel1)
00ed8     03 00 00 FF 
00edc     DC 16 86 F1 | 	sub	ptr__audio010_spin2_dat__, ##1756
00ee0     0B 5F 02 F6 | 	mov	arg02, ptr__audio010_spin2_dat__
00ee4     07 61 02 F6 | 	mov	arg03, objptr
00ee8     10 5C 06 F6 | 	mov	arg01, #16
00eec     28 60 62 FD | 	setq	arg03
00ef0     2F 5D F2 FC | 	coginit	arg01, arg02 wc
00ef4     01 5C 66 C6 |  if_b	neg	arg01, #1
00ef8     2E 2B 02 F6 | 	mov	result1, arg01
00efc                 | ' return cog
00efc     28 0F 06 F1 | 	add	objptr, #296
00f00     07 01 68 FC | 	wrlong	#0, objptr
00f04     04 0E 06 F1 | 	add	objptr, #4
00f08     07 01 68 FC | 	wrlong	#0, objptr
00f0c     04 0E 06 F1 | 	add	objptr, #4
00f10     07 01 68 FC | 	wrlong	#0, objptr
00f14     04 0E 06 F1 | 	add	objptr, #4
00f18     07 01 68 FC | 	wrlong	#0, objptr
00f1c     04 00 00 FF 
00f20     60 0E 86 F1 | 	sub	objptr, ##2144
00f24                 | ' 
00f24                 | ' 
00f24                 | ' paula.start
00f24                 | ' 
00f24                 | ' old1=0 : old2=0 :old3=0 : old4=0
00f24                 | ' do
00f24                 | LR__0003
00f24                 | ' 
00f24                 | ' ''---------- Wait for start of vblank. Amount=delay in frames
00f24                 | ' 
00f24                 | ' repeat i from 1 to amount
00f24     01 94 06 F6 | 	mov	local22, #1
00f28                 | LR__0004
00f28                 | '   repeat until vblank==0
00f28                 | LR__0005
00f28     40 0E 06 F1 | 	add	objptr, #64
00f2c     07 97 0A FB | 	rdlong	local23, objptr wz
00f30     40 0E 86 F1 | 	sub	objptr, #64
00f34     0C 00 90 AD |  if_e	jmp	#LR__0006
00f38                 | '     waitus(100)
00f38     64 5C 06 F6 | 	mov	arg01, #100
00f3c     6C 49 B0 FD | 	call	#__system___waitus
00f40     E4 FF 9F FD | 	jmp	#LR__0005
00f44                 | LR__0006
00f44                 | '   repeat until vblank==1
00f44                 | LR__0007
00f44     40 0E 06 F1 | 	add	objptr, #64
00f48     07 97 02 FB | 	rdlong	local23, objptr
00f4c     40 0E 86 F1 | 	sub	objptr, #64
00f50     01 96 0E F2 | 	cmp	local23, #1 wz
00f54     0C 00 90 AD |  if_e	jmp	#LR__0008
00f58                 | '     waitus(100)
00f58     64 5C 06 F6 | 	mov	arg01, #100
00f5c     4C 49 B0 FD | 	call	#__system___waitus
00f60     E0 FF 9F FD | 	jmp	#LR__0007
00f64                 | LR__0008
00f64     F0 95 6E FB | 	djnz	local22, #LR__0004
00f68     02 00 00 FF 
00f6c     30 0F 06 F1 | 	add	objptr, ##1328
00f70     D8 29 B0 FD | 	call	#_trackerplayer_spin2_tick
00f74     A7 0E 06 F1 | 	add	objptr, #167
00f78     07 7D 02 FB | 	rdlong	local10, objptr
00f7c     55 0F 06 F1 | 	add	objptr, #341
00f80     07 7D 62 FC | 	wrlong	local10, objptr
00f84     04 0E 06 F1 | 	add	objptr, #4
00f88     07 03 68 FC | 	wrlong	#1, objptr
00f8c     45 0F 86 F1 | 	sub	objptr, #325
00f90     07 7D E2 FA | 	rdword	local10, objptr
00f94     08 0E 06 F1 | 	add	objptr, #8
00f98     07 99 02 FB | 	rdlong	local24, objptr
00f9c     4C 7D 82 F1 | 	sub	local10, local24
00fa0     41 0F 06 F1 | 	add	objptr, #321
00fa4     07 7D 62 FC | 	wrlong	local10, objptr
00fa8     49 0F 86 F1 | 	sub	objptr, #329
00fac     07 7D E2 FA | 	rdword	local10, objptr
00fb0     4D 0F 06 F1 | 	add	objptr, #333
00fb4     07 7D 62 FC | 	wrlong	local10, objptr
00fb8     09 0F 86 F1 | 	sub	objptr, #265
00fbc     07 9B 02 FB | 	rdlong	local25, objptr
00fc0     10 0E 06 F1 | 	add	objptr, #16
00fc4     07 99 02 FB | 	rdlong	local24, objptr
00fc8     4C 9B 02 F1 | 	add	local25, local24
00fcc     07 9A 66 F0 | 	shl	local25, #7
00fd0     FD 0E 06 F1 | 	add	objptr, #253
00fd4     07 9B 62 FC | 	wrlong	local25, objptr
00fd8     04 0E 06 F1 | 	add	objptr, #4
00fdc     0C 00 80 FF 
00fe0     07 01 68 FC | 	wrlong	##6144, objptr
00fe4     31 0F 86 F1 | 	sub	objptr, #305
00fe8     07 7D 02 FB | 	rdlong	local10, objptr
00fec     10 0E 06 F1 | 	add	objptr, #16
00ff0     07 99 02 FB | 	rdlong	local24, objptr
00ff4     4C 7D 02 F1 | 	add	local10, local24
00ff8     25 0F 06 F1 | 	add	objptr, #293
00ffc     07 7D 62 FC | 	wrlong	local10, objptr
01000     04 0E 06 F1 | 	add	objptr, #4
01004     07 03 68 FC | 	wrlong	#1, objptr
01008                 | ' 
01008                 | '     waitvbl
01008                 | '     tracker.tick
01008                 | '     
01008                 | ' 	paula.channel1(0)=tracker.currSamplePtr(0)
01008                 | ' 	paula.channel1(1)=1
01008                 | ' 	paula.channel1(2)=tracker.currsamplelength(0)-tracker.currrepeatLength(0)
01008                 | ' 	paula.channel1(3)=tracker.currsamplelength(0)
01008                 | ' 	paula.channel1(4)=(tracker.currVolume(0)+tracker.deltavolume(0))*128
01008                 | ' 	paula.channel1(5)=8192-2048
01008                 | ' 	paula.channel1(6)=tracker.currPeriod(0)+tracker.deltaperiod(0)
01008                 | ' 	paula.channel1(7)=1
01008                 | '     if tracker.trigger(0) <> old1 then paula.channel1(8)=0 :waitus(10) : paula.channel1(8)=1 :old1=tracker.trigger(0)
01008     22 0E 86 F1 | 	sub	objptr, #34
0100c     07 7D C2 FA | 	rdbyte	local10, objptr
01010     2E 0F 06 F1 | 	add	objptr, #302
01014     07 99 02 FB | 	rdlong	local24, objptr
01018     04 00 00 FF 
0101c     54 0E 86 F1 | 	sub	objptr, ##2132
01020     4C 7D 0A F2 | 	cmp	local10, local24 wz
01024     40 00 90 AD |  if_e	jmp	#LR__0009
01028     03 00 00 FF 
0102c     4C 0F 06 F1 | 	add	objptr, ##1868
01030     07 01 68 FC | 	wrlong	#0, objptr
01034     03 00 00 FF 
01038     4C 0F 86 F1 | 	sub	objptr, ##1868
0103c     0A 5C 06 F6 | 	mov	arg01, #10
01040     68 48 B0 FD | 	call	#__system___waitus
01044     03 00 00 FF 
01048     4C 0F 06 F1 | 	add	objptr, ##1868
0104c     07 03 68 FC | 	wrlong	#1, objptr
01050     26 0E 86 F1 | 	sub	objptr, #38
01054     07 7D C2 FA | 	rdbyte	local10, objptr
01058     2E 0F 06 F1 | 	add	objptr, #302
0105c     07 7D 62 FC | 	wrlong	local10, objptr
01060     04 00 00 FF 
01064     54 0E 86 F1 | 	sub	objptr, ##2132
01068                 | LR__0009
01068     03 00 00 FF 
0106c     50 0F 06 F1 | 	add	objptr, ##1872
01070     07 7D 02 FB | 	rdlong	local10, objptr
01074     14 0F 06 F1 | 	add	objptr, #276
01078     07 7D 62 FC | 	wrlong	local10, objptr
0107c     01 00 00 FF 
01080     89 0E 86 F1 | 	sub	objptr, ##649
01084     07 7D 02 FB | 	rdlong	local10, objptr
01088     75 0F 06 F1 | 	add	objptr, #373
0108c     07 7D 62 FC | 	wrlong	local10, objptr
01090     04 0E 06 F1 | 	add	objptr, #4
01094     07 03 68 FC | 	wrlong	#1, objptr
01098     67 0F 86 F1 | 	sub	objptr, #359
0109c     07 7D E2 FA | 	rdword	local10, objptr
010a0     0A 0E 06 F1 | 	add	objptr, #10
010a4     07 99 02 FB | 	rdlong	local24, objptr
010a8     4C 7D 82 F1 | 	sub	local10, local24
010ac     61 0F 06 F1 | 	add	objptr, #353
010b0     07 7D 62 FC | 	wrlong	local10, objptr
010b4     6B 0F 86 F1 | 	sub	objptr, #363
010b8     07 7D E2 FA | 	rdword	local10, objptr
010bc     6F 0F 06 F1 | 	add	objptr, #367
010c0     07 7D 62 FC | 	wrlong	local10, objptr
010c4     29 0F 86 F1 | 	sub	objptr, #297
010c8     07 9B 02 FB | 	rdlong	local25, objptr
010cc     10 0E 06 F1 | 	add	objptr, #16
010d0     07 99 02 FB | 	rdlong	local24, objptr
010d4     4C 9B 02 F1 | 	add	local25, local24
010d8     07 9A 66 F0 | 	shl	local25, #7
010dc     1D 0F 06 F1 | 	add	objptr, #285
010e0     07 9B 62 FC | 	wrlong	local25, objptr
010e4     04 0E 06 F1 | 	add	objptr, #4
010e8     14 00 80 FF 
010ec     07 01 68 FC | 	wrlong	##10240, objptr
010f0     51 0F 86 F1 | 	sub	objptr, #337
010f4     07 7D 02 FB | 	rdlong	local10, objptr
010f8     10 0E 06 F1 | 	add	objptr, #16
010fc     07 99 02 FB | 	rdlong	local24, objptr
01100     4C 7D 02 F1 | 	add	local10, local24
01104     45 0F 06 F1 | 	add	objptr, #325
01108     07 7D 62 FC | 	wrlong	local10, objptr
0110c     04 0E 06 F1 | 	add	objptr, #4
01110     07 03 68 FC | 	wrlong	#1, objptr
01114                 | ' 
01114                 | '     old12=paula.channel2(0)
01114                 | ' 	paula.channel2(0)=tracker.currSamplePtr(1)
01114                 | ' 	paula.channel2(1)=1
01114                 | ' 	paula.channel2(2)=tracker.currSampleLength(1)-tracker.currrepeatLength(1)
01114                 | ' 	paula.channel2(3)=tracker.currSampleLength(1)
01114                 | ' 	paula.channel2(4)=(tracker.currVolume(1)+tracker.deltavolume(1))*128
01114                 | ' 	paula.channel2(5)=8192+2048
01114                 | ' 	paula.channel2(6)=tracker.currPeriod(1)+tracker.deltaperiod(1)
01114                 | ' 	paula.channel2(7)=1
01114                 | '     if tracker.trigger(1) <> old2 then paula.channel2(8)=0 :waitus(10) : paula.channel2(8)=1 :old2=tracker.trigger(1)
01114     45 0E 86 F1 | 	sub	objptr, #69
01118     07 7D C2 FA | 	rdbyte	local10, objptr
0111c     31 0F 06 F1 | 	add	objptr, #305
01120     07 99 02 FB | 	rdlong	local24, objptr
01124     04 00 00 FF 
01128     58 0E 86 F1 | 	sub	objptr, ##2136
0112c     4C 7D 0A F2 | 	cmp	local10, local24 wz
01130     40 00 90 AD |  if_e	jmp	#LR__0010
01134     03 00 00 FF 
01138     70 0F 06 F1 | 	add	objptr, ##1904
0113c     07 01 68 FC | 	wrlong	#0, objptr
01140     03 00 00 FF 
01144     70 0F 86 F1 | 	sub	objptr, ##1904
01148     0A 5C 06 F6 | 	mov	arg01, #10
0114c     5C 47 B0 FD | 	call	#__system___waitus
01150     03 00 00 FF 
01154     70 0F 06 F1 | 	add	objptr, ##1904
01158     07 03 68 FC | 	wrlong	#1, objptr
0115c     49 0E 86 F1 | 	sub	objptr, #73
01160     07 7D C2 FA | 	rdbyte	local10, objptr
01164     31 0F 06 F1 | 	add	objptr, #305
01168     07 7D 62 FC | 	wrlong	local10, objptr
0116c     04 00 00 FF 
01170     58 0E 86 F1 | 	sub	objptr, ##2136
01174                 | LR__0010
01174     03 00 00 FF 
01178     74 0F 06 F1 | 	add	objptr, ##1908
0117c     07 7D 02 FB | 	rdlong	local10, objptr
01180     F4 0E 06 F1 | 	add	objptr, #244
01184     07 7D 62 FC | 	wrlong	local10, objptr
01188     01 00 00 FF 
0118c     89 0E 86 F1 | 	sub	objptr, ##649
01190     07 7D 02 FB | 	rdlong	local10, objptr
01194     95 0F 06 F1 | 	add	objptr, #405
01198     07 7D 62 FC | 	wrlong	local10, objptr
0119c     04 0E 06 F1 | 	add	objptr, #4
011a0     07 03 68 FC | 	wrlong	#1, objptr
011a4     89 0F 86 F1 | 	sub	objptr, #393
011a8     07 7D E2 FA | 	rdword	local10, objptr
011ac     0C 0E 06 F1 | 	add	objptr, #12
011b0     07 99 02 FB | 	rdlong	local24, objptr
011b4     4C 7D 82 F1 | 	sub	local10, local24
011b8     81 0F 06 F1 | 	add	objptr, #385
011bc     07 7D 62 FC | 	wrlong	local10, objptr
011c0     8D 0F 86 F1 | 	sub	objptr, #397
011c4     07 7D E2 FA | 	rdword	local10, objptr
011c8     91 0F 06 F1 | 	add	objptr, #401
011cc     07 7D 62 FC | 	wrlong	local10, objptr
011d0     49 0F 86 F1 | 	sub	objptr, #329
011d4     07 9B 02 FB | 	rdlong	local25, objptr
011d8     10 0E 06 F1 | 	add	objptr, #16
011dc     07 99 02 FB | 	rdlong	local24, objptr
011e0     4C 9B 02 F1 | 	add	local25, local24
011e4     07 9A 66 F0 | 	shl	local25, #7
011e8     3D 0F 06 F1 | 	add	objptr, #317
011ec     07 9B 62 FC | 	wrlong	local25, objptr
011f0     04 0E 06 F1 | 	add	objptr, #4
011f4     14 00 80 FF 
011f8     07 01 68 FC | 	wrlong	##10240, objptr
011fc     71 0F 86 F1 | 	sub	objptr, #369
01200     07 7D 02 FB | 	rdlong	local10, objptr
01204     10 0E 06 F1 | 	add	objptr, #16
01208     07 99 02 FB | 	rdlong	local24, objptr
0120c     4C 7D 02 F1 | 	add	local10, local24
01210     65 0F 06 F1 | 	add	objptr, #357
01214     07 7D 62 FC | 	wrlong	local10, objptr
01218     04 0E 06 F1 | 	add	objptr, #4
0121c     07 03 68 FC | 	wrlong	#1, objptr
01220                 | ' 
01220                 | '     old13=paula.channel3(0)
01220                 | ' 	paula.channel3(0)=tracker.currSamplePtr(2)
01220                 | ' 	paula.channel3(1)=1
01220                 | ' 	paula.channel3(2)=tracker.currSampleLength(2)-tracker.currrepeatLength(2)
01220                 | ' 	paula.channel3(3)=tracker.currSampleLength(2)
01220                 | ' 	paula.channel3(4)=(tracker.currVolume(2)+tracker.deltavolume(2))*128
01220                 | ' 	paula.channel3(5)=8192+2048
01220                 | ' 	paula.channel3(6)=tracker.currPeriod(2)+tracker.deltaperiod(2)
01220                 | ' 	paula.channel3(7)=1
01220                 | '     if tracker.trigger(2) <> old3 then paula.channel3(8)=0 :waitus(10) : paula.channel3(8)=1 :old3=tracker.trigger(02)
01220     68 0E 86 F1 | 	sub	objptr, #104
01224     07 7D C2 FA | 	rdbyte	local10, objptr
01228     34 0F 06 F1 | 	add	objptr, #308
0122c     07 99 02 FB | 	rdlong	local24, objptr
01230     04 00 00 FF 
01234     5C 0E 86 F1 | 	sub	objptr, ##2140
01238     4C 7D 0A F2 | 	cmp	local10, local24 wz
0123c     40 00 90 AD |  if_e	jmp	#LR__0011
01240     03 00 00 FF 
01244     94 0F 06 F1 | 	add	objptr, ##1940
01248     07 01 68 FC | 	wrlong	#0, objptr
0124c     03 00 00 FF 
01250     94 0F 86 F1 | 	sub	objptr, ##1940
01254     0A 5C 06 F6 | 	mov	arg01, #10
01258     50 46 B0 FD | 	call	#__system___waitus
0125c     03 00 00 FF 
01260     94 0F 06 F1 | 	add	objptr, ##1940
01264     07 03 68 FC | 	wrlong	#1, objptr
01268     6C 0E 86 F1 | 	sub	objptr, #108
0126c     07 7D C2 FA | 	rdbyte	local10, objptr
01270     34 0F 06 F1 | 	add	objptr, #308
01274     07 7D 62 FC | 	wrlong	local10, objptr
01278     04 00 00 FF 
0127c     5C 0E 86 F1 | 	sub	objptr, ##2140
01280                 | LR__0011
01280     03 00 00 FF 
01284     98 0F 06 F1 | 	add	objptr, ##1944
01288     07 7D 02 FB | 	rdlong	local10, objptr
0128c     D4 0E 06 F1 | 	add	objptr, #212
01290     07 7D 62 FC | 	wrlong	local10, objptr
01294     01 00 00 FF 
01298     89 0E 86 F1 | 	sub	objptr, ##649
0129c     07 7D 02 FB | 	rdlong	local10, objptr
012a0     B5 0F 06 F1 | 	add	objptr, #437
012a4     07 7D 62 FC | 	wrlong	local10, objptr
012a8     04 0E 06 F1 | 	add	objptr, #4
012ac     07 03 68 FC | 	wrlong	#1, objptr
012b0     AB 0F 86 F1 | 	sub	objptr, #427
012b4     07 7D E2 FA | 	rdword	local10, objptr
012b8     0E 0E 06 F1 | 	add	objptr, #14
012bc     07 99 02 FB | 	rdlong	local24, objptr
012c0     4C 7D 82 F1 | 	sub	local10, local24
012c4     A1 0F 06 F1 | 	add	objptr, #417
012c8     07 7D 62 FC | 	wrlong	local10, objptr
012cc     AF 0F 86 F1 | 	sub	objptr, #431
012d0     07 7D E2 FA | 	rdword	local10, objptr
012d4     B3 0F 06 F1 | 	add	objptr, #435
012d8     07 7D 62 FC | 	wrlong	local10, objptr
012dc     69 0F 86 F1 | 	sub	objptr, #361
012e0     07 9B 02 FB | 	rdlong	local25, objptr
012e4     10 0E 06 F1 | 	add	objptr, #16
012e8     07 99 02 FB | 	rdlong	local24, objptr
012ec     4C 9B 02 F1 | 	add	local25, local24
012f0     07 9A 66 F0 | 	shl	local25, #7
012f4     5D 0F 06 F1 | 	add	objptr, #349
012f8     07 9B 62 FC | 	wrlong	local25, objptr
012fc     04 0E 06 F1 | 	add	objptr, #4
01300     0C 00 80 FF 
01304     07 01 68 FC | 	wrlong	##6144, objptr
01308     91 0F 86 F1 | 	sub	objptr, #401
0130c     07 7D 02 FB | 	rdlong	local10, objptr
01310     10 0E 06 F1 | 	add	objptr, #16
01314     07 99 02 FB | 	rdlong	local24, objptr
01318     4C 7D 02 F1 | 	add	local10, local24
0131c     85 0F 06 F1 | 	add	objptr, #389
01320     07 7D 62 FC | 	wrlong	local10, objptr
01324     04 0E 06 F1 | 	add	objptr, #4
01328     07 03 68 FC | 	wrlong	#1, objptr
0132c                 | ' 
0132c                 | '     old14=paula.channel4(0)    
0132c                 | ' 	paula.channel4(0)=tracker.currSamplePtr(3)
0132c                 | ' 	paula.channel4(1)=1
0132c                 | ' 	paula.channel4(2)=tracker.currSampleLength(3)-tracker.currrepeatLength(3)
0132c                 | ' 	paula.channel4(3)=tracker.currSampleLength(3)
0132c                 | ' 	paula.channel4(4)=(tracker.currVolume(3)+tracker.deltavolume(3))*128
0132c                 | ' 	paula.channel4(5)=8192-2048
0132c                 | ' 	paula.channel4(6)=tracker.currPeriod(3)+tracker.deltaperiod(3)
0132c                 | ' 	paula.channel4(7)=1
0132c                 | '     if tracker.trigger(3) <> old4 then paula.channel4(8)=0 :waitus(10) : paula.channel4(8)=1 :old4=tracker.trigger(03)
0132c     8B 0E 86 F1 | 	sub	objptr, #139
01330     07 7D C2 FA | 	rdbyte	local10, objptr
01334     37 0F 06 F1 | 	add	objptr, #311
01338     07 99 02 FB | 	rdlong	local24, objptr
0133c     04 00 00 FF 
01340     60 0E 86 F1 | 	sub	objptr, ##2144
01344     4C 7D 0A F2 | 	cmp	local10, local24 wz
01348     40 00 90 AD |  if_e	jmp	#LR__0012
0134c     03 00 00 FF 
01350     B8 0F 06 F1 | 	add	objptr, ##1976
01354     07 01 68 FC | 	wrlong	#0, objptr
01358     03 00 00 FF 
0135c     B8 0F 86 F1 | 	sub	objptr, ##1976
01360     0A 5C 06 F6 | 	mov	arg01, #10
01364     44 45 B0 FD | 	call	#__system___waitus
01368     03 00 00 FF 
0136c     B8 0F 06 F1 | 	add	objptr, ##1976
01370     07 03 68 FC | 	wrlong	#1, objptr
01374     8F 0E 86 F1 | 	sub	objptr, #143
01378     07 7D C2 FA | 	rdbyte	local10, objptr
0137c     37 0F 06 F1 | 	add	objptr, #311
01380     07 7D 62 FC | 	wrlong	local10, objptr
01384     04 00 00 FF 
01388     60 0E 86 F1 | 	sub	objptr, ##2144
0138c                 | LR__0012
0138c     1A 2A 62 FD | 	getct	result1
01390     04 00 00 FF 
01394     70 0E 06 F1 | 	add	objptr, ##2160
01398     07 2B 62 FC | 	wrlong	result1, objptr
0139c                 | ' 
0139c                 | ' ''---------- Set the (x,y) position of cursor
0139c                 | ' 
0139c                 | ' cursor_x:=x
0139c     04 00 00 FF 
013a0     3C 0E 86 F1 | 	sub	objptr, ##2108
013a4     07 03 48 FC | 	wrbyte	#1, objptr
013a8                 | ' cursor_y:=y
013a8     01 0E 06 F1 | 	add	objptr, #1
013ac     07 07 48 FC | 	wrbyte	#3, objptr
013b0     02 00 00 FF 
013b4     B2 0F 06 F1 | 	add	objptr, ##1458
013b8     07 5D C2 FA | 	rdbyte	arg01, objptr
013bc     02 00 00 FF 
013c0     E7 0F 86 F1 | 	sub	objptr, ##1511
013c4     07 5C 46 F7 | 	zerox	arg01, #7
013c8     02 5E 06 F6 | 	mov	arg02, #2
013cc     08 0D B0 FD | 	call	#_hng030rm_spin2_inttostr2
013d0     15 5D 02 F6 | 	mov	arg01, result1
013d4     84 0A B0 FD | 	call	#_hng030rm_spin2_write
013d8     03 5E 06 F6 | 	mov	arg02, #3
013dc                 | ' 
013dc                 | ' ''---------- Set the (x,y) position of cursor
013dc                 | ' 
013dc                 | ' cursor_x:=x
013dc     34 0E 06 F1 | 	add	objptr, #52
013e0     07 09 48 FC | 	wrbyte	#4, objptr
013e4                 | ' cursor_y:=y
013e4     01 0E 06 F1 | 	add	objptr, #1
013e8     07 07 48 FC | 	wrbyte	#3, objptr
013ec     02 00 00 FF 
013f0     DA 0F 06 F1 | 	add	objptr, ##1498
013f4     07 5D 02 FB | 	rdlong	arg01, objptr
013f8     10 0E 06 F1 | 	add	objptr, #16
013fc     07 9D 02 FB | 	rdlong	local26, objptr
01400     03 00 00 FF 
01404     1F 0E 86 F1 | 	sub	objptr, ##1567
01408     4E 5D 02 F1 | 	add	arg01, local26
0140c     C8 0C B0 FD | 	call	#_hng030rm_spin2_inttostr2
01410     15 5D 02 F6 | 	mov	arg01, result1
01414     44 0A B0 FD | 	call	#_hng030rm_spin2_write
01418                 | ' 
01418                 | ' ''---------- Set the (x,y) position of cursor
01418                 | ' 
01418                 | ' cursor_x:=x
01418     34 0E 06 F1 | 	add	objptr, #52
0141c     07 17 48 FC | 	wrbyte	#11, objptr
01420                 | ' cursor_y:=y
01420     01 0E 06 F1 | 	add	objptr, #1
01424     07 07 48 FC | 	wrbyte	#3, objptr
01428     02 00 00 FF 
0142c     B3 0F 06 F1 | 	add	objptr, ##1459
01430     07 5D C2 FA | 	rdbyte	arg01, objptr
01434     02 00 00 FF 
01438     E8 0F 86 F1 | 	sub	objptr, ##1512
0143c     07 5C 46 F7 | 	zerox	arg01, #7
01440     02 5E 06 F6 | 	mov	arg02, #2
01444     90 0C B0 FD | 	call	#_hng030rm_spin2_inttostr2
01448     15 5D 02 F6 | 	mov	arg01, result1
0144c     0C 0A B0 FD | 	call	#_hng030rm_spin2_write
01450     03 5E 06 F6 | 	mov	arg02, #3
01454                 | ' 
01454                 | ' ''---------- Set the (x,y) position of cursor
01454                 | ' 
01454                 | ' cursor_x:=x
01454     34 0E 06 F1 | 	add	objptr, #52
01458     07 1D 48 FC | 	wrbyte	#14, objptr
0145c                 | ' cursor_y:=y
0145c     01 0E 06 F1 | 	add	objptr, #1
01460     07 07 48 FC | 	wrbyte	#3, objptr
01464     02 00 00 FF 
01468     DE 0F 06 F1 | 	add	objptr, ##1502
0146c     07 5D 02 FB | 	rdlong	arg01, objptr
01470     10 0E 06 F1 | 	add	objptr, #16
01474     07 9D 02 FB | 	rdlong	local26, objptr
01478     03 00 00 FF 
0147c     23 0E 86 F1 | 	sub	objptr, ##1571
01480     4E 5D 02 F1 | 	add	arg01, local26
01484     50 0C B0 FD | 	call	#_hng030rm_spin2_inttostr2
01488     15 5D 02 F6 | 	mov	arg01, result1
0148c     CC 09 B0 FD | 	call	#_hng030rm_spin2_write
01490                 | ' 
01490                 | ' ''---------- Set the (x,y) position of cursor
01490                 | ' 
01490                 | ' cursor_x:=x
01490     34 0E 06 F1 | 	add	objptr, #52
01494     07 2B 48 FC | 	wrbyte	#21, objptr
01498                 | ' cursor_y:=y
01498     01 0E 06 F1 | 	add	objptr, #1
0149c     07 07 48 FC | 	wrbyte	#3, objptr
014a0     02 00 00 FF 
014a4     B4 0F 06 F1 | 	add	objptr, ##1460
014a8     07 5D C2 FA | 	rdbyte	arg01, objptr
014ac     02 00 00 FF 
014b0     E9 0F 86 F1 | 	sub	objptr, ##1513
014b4     07 5C 46 F7 | 	zerox	arg01, #7
014b8     02 5E 06 F6 | 	mov	arg02, #2
014bc     18 0C B0 FD | 	call	#_hng030rm_spin2_inttostr2
014c0     15 5D 02 F6 | 	mov	arg01, result1
014c4     94 09 B0 FD | 	call	#_hng030rm_spin2_write
014c8     03 5E 06 F6 | 	mov	arg02, #3
014cc                 | ' 
014cc                 | ' ''---------- Set the (x,y) position of cursor
014cc                 | ' 
014cc                 | ' cursor_x:=x
014cc     34 0E 06 F1 | 	add	objptr, #52
014d0     07 31 48 FC | 	wrbyte	#24, objptr
014d4                 | ' cursor_y:=y
014d4     01 0E 06 F1 | 	add	objptr, #1
014d8     07 07 48 FC | 	wrbyte	#3, objptr
014dc     02 00 00 FF 
014e0     E2 0F 06 F1 | 	add	objptr, ##1506
014e4     07 5D 02 FB | 	rdlong	arg01, objptr
014e8     10 0E 06 F1 | 	add	objptr, #16
014ec     07 9D 02 FB | 	rdlong	local26, objptr
014f0     03 00 00 FF 
014f4     27 0E 86 F1 | 	sub	objptr, ##1575
014f8     4E 5D 02 F1 | 	add	arg01, local26
014fc     D8 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01500     15 5D 02 F6 | 	mov	arg01, result1
01504     54 09 B0 FD | 	call	#_hng030rm_spin2_write
01508                 | ' 
01508                 | ' ''---------- Set the (x,y) position of cursor
01508                 | ' 
01508                 | ' cursor_x:=x
01508     34 0E 06 F1 | 	add	objptr, #52
0150c     07 3F 48 FC | 	wrbyte	#31, objptr
01510                 | ' cursor_y:=y
01510     01 0E 06 F1 | 	add	objptr, #1
01514     07 07 48 FC | 	wrbyte	#3, objptr
01518     02 00 00 FF 
0151c     B5 0F 06 F1 | 	add	objptr, ##1461
01520     07 5D C2 FA | 	rdbyte	arg01, objptr
01524     02 00 00 FF 
01528     EA 0F 86 F1 | 	sub	objptr, ##1514
0152c     07 5C 46 F7 | 	zerox	arg01, #7
01530     02 5E 06 F6 | 	mov	arg02, #2
01534     A0 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01538     15 5D 02 F6 | 	mov	arg01, result1
0153c     1C 09 B0 FD | 	call	#_hng030rm_spin2_write
01540     03 5E 06 F6 | 	mov	arg02, #3
01544                 | ' 
01544                 | ' ''---------- Set the (x,y) position of cursor
01544                 | ' 
01544                 | ' cursor_x:=x
01544     34 0E 06 F1 | 	add	objptr, #52
01548     07 45 48 FC | 	wrbyte	#34, objptr
0154c                 | ' cursor_y:=y
0154c     01 0E 06 F1 | 	add	objptr, #1
01550     07 07 48 FC | 	wrbyte	#3, objptr
01554     02 00 00 FF 
01558     E6 0F 06 F1 | 	add	objptr, ##1510
0155c     07 5D 02 FB | 	rdlong	arg01, objptr
01560     10 0E 06 F1 | 	add	objptr, #16
01564     07 9D 02 FB | 	rdlong	local26, objptr
01568     03 00 00 FF 
0156c     2B 0E 86 F1 | 	sub	objptr, ##1579
01570     4E 5D 02 F1 | 	add	arg01, local26
01574     60 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01578     15 5D 02 F6 | 	mov	arg01, result1
0157c     DC 08 B0 FD | 	call	#_hng030rm_spin2_write
01580                 | ' 
01580                 | ' ''---------- Set the (x,y) position of cursor
01580                 | ' 
01580                 | ' cursor_x:=x
01580     34 0E 06 F1 | 	add	objptr, #52
01584     07 53 48 FC | 	wrbyte	#41, objptr
01588                 | ' cursor_y:=y
01588     01 0E 06 F1 | 	add	objptr, #1
0158c     07 07 48 FC | 	wrbyte	#3, objptr
01590                 | ' asm
01590     80 5C 06 FB | 	rdlong	arg01, #128
01594                 | ' return r
01594     08 5E 06 F6 | 	mov	arg02, #8
01598                 | ' 
01598                 | ' j:=i
01598                 | ' pos:=d-1
01598     07 9E 06 F6 | 	mov	local27, #7
0159c                 | ' k:=0
0159c     0F 0E 06 F1 | 	add	objptr, #15
015a0     07 5F 02 F1 | 	add	arg02, objptr
015a4                 | ' n_string[d]:=0
015a4     2F 01 48 FC | 	wrbyte	#0, arg02
015a8                 | ' repeat k from 0 to d-1
015a8     00 A0 06 F6 | 	mov	local28, #0
015ac     44 0E 86 F1 | 	sub	objptr, #68
015b0     01 A2 06 F6 | 	mov	local29, #1
015b4     08 A4 06 F6 | 	mov	local30, #8
015b8     64 EA 9F FE | 	loc	pa,	#(@LR__0014-@LR__0013)
015bc     93 00 A0 FD | 	call	#FCACHE_LOAD_
015c0                 | LR__0013
015c0     50 A7 02 F6 | 	mov	local31, local28
015c4     44 0E 06 F1 | 	add	objptr, #68
015c8     07 A7 02 F1 | 	add	local31, objptr
015cc                 | '   n_string[k]:=48
015cc     53 61 48 FC | 	wrbyte	#48, local31
015d0     01 A0 06 F1 | 	add	local28, #1
015d4     08 A0 0E F2 | 	cmp	local28, #8 wz
015d8     44 0E 86 F1 | 	sub	objptr, #68
015dc     E0 FF 9F 5D |  if_ne	jmp	#LR__0013
015e0                 | LR__0014
015e0                 | ' if (j<>0)
015e0     00 5C 0E F2 | 	cmp	arg01, #0 wz
015e4     40 00 90 AD |  if_e	jmp	#LR__0017
015e8                 | ' 
015e8                 | '   repeat while (pos>-1)
015e8                 | LR__0015
015e8     FF FF 7F FF 
015ec     FF 9F 5E F2 | 	cmps	local27, ##-1 wcz
015f0     34 00 90 ED |  if_be	jmp	#LR__0016
015f4     2E A9 02 F6 | 	mov	local32, arg01
015f8     0F A8 06 F5 | 	and	local32, #15
015fc                 | '     q:=j+//16
015fc                 | '     if (q>9)
015fc     09 A8 5E F2 | 	cmps	local32, #9 wcz
01600                 | '       q:=q+7
01600     07 A8 06 11 |  if_a	add	local32, #7
01604                 | '     q:=48+q
01604     30 A8 06 F1 | 	add	local32, #48
01608     4F AB 02 F6 | 	mov	local33, local27
0160c     44 0E 06 F1 | 	add	objptr, #68
01610     07 AB 02 F1 | 	add	local33, objptr
01614                 | '     n_string[pos]:=q
01614     55 A9 42 FC | 	wrbyte	local32, local33
01618                 | '     j:=j+/16
01618     04 5C 46 F0 | 	shr	arg01, #4
0161c                 | '     pos-=1
0161c     01 9E 86 F1 | 	sub	local27, #1
01620     44 0E 86 F1 | 	sub	objptr, #68
01624     C0 FF 9F FD | 	jmp	#LR__0015
01628                 | LR__0016
01628                 | LR__0017
01628     44 0E 06 F1 | 	add	objptr, #68
0162c     07 2B 02 F6 | 	mov	result1, objptr
01630     44 0E 86 F1 | 	sub	objptr, #68
01634                 | ' 
01634                 | ' q:=@n_string
01634                 | ' return q
01634     15 5D 02 F6 | 	mov	arg01, result1
01638     20 08 B0 FD | 	call	#_hng030rm_spin2_write
0163c     1A 2A 62 FD | 	getct	result1
01640     15 AD 02 F6 | 	mov	local34, result1
01644     04 00 00 FF 
01648     70 0E 06 F1 | 	add	objptr, ##2160
0164c     07 9D 02 FB | 	rdlong	local26, objptr
01650     4E AD 82 F1 | 	sub	local34, local26
01654     07 AD 62 FC | 	wrlong	local34, objptr
01658     03 5E 06 F6 | 	mov	arg02, #3
0165c                 | ' 
0165c                 | ' ''---------- Set the (x,y) position of cursor
0165c                 | ' 
0165c                 | ' cursor_x:=x
0165c     04 00 00 FF 
01660     3C 0E 86 F1 | 	sub	objptr, ##2108
01664     07 67 48 FC | 	wrbyte	#51, objptr
01668                 | ' cursor_y:=y
01668     01 0E 06 F1 | 	add	objptr, #1
0166c     07 07 48 FC | 	wrbyte	#3, objptr
01670     04 00 00 FF 
01674     3B 0E 06 F1 | 	add	objptr, ##2107
01678     07 0B 03 FB | 	rdlong	muldiva_, objptr
0167c     04 00 00 FF 
01680     70 0E 86 F1 | 	sub	objptr, ##2160
01684     40 0D 07 F6 | 	mov	muldivb_, #320
01688     D0 00 A0 FD | 	call	#divide_
0168c     86 AF 02 F6 | 	mov	local35, muldivb_
01690                 | ' 
01690                 | ' j:=i
01690     57 B1 0A F6 | 	mov	local36, local35 wz
01694                 | ' pos:=10
01694     0A B2 06 F6 | 	mov	local37, #10
01698                 | ' k:=0
01698     00 B4 06 F6 | 	mov	local38, #0
0169c                 | ' 
0169c                 | ' if (j==0)
0169c     18 00 90 5D |  if_ne	jmp	#LR__0018
016a0                 | '   n_string[0]:=48
016a0     44 0E 06 F1 | 	add	objptr, #68
016a4     07 61 48 FC | 	wrbyte	#48, objptr
016a8                 | '   n_string[1]:=0
016a8     01 0E 06 F1 | 	add	objptr, #1
016ac     07 01 48 FC | 	wrbyte	#0, objptr
016b0     45 0E 86 F1 | 	sub	objptr, #69
016b4                 | ' 
016b4                 | ' else
016b4     C4 00 90 FD | 	jmp	#LR__0025
016b8                 | LR__0018
016b8                 | '   if (j<0)
016b8     00 B0 5E F2 | 	cmps	local36, #0 wcz
016bc                 | '     j:=0-j
016bc     58 B1 62 C6 |  if_b	neg	local36, local36
016c0                 | '     k:=45
016c0     2D B4 06 C6 |  if_b	mov	local38, #45
016c4                 | ' 
016c4                 | '   n_string[11]:=0
016c4     4F 0E 06 F1 | 	add	objptr, #79
016c8     07 01 48 FC | 	wrbyte	#0, objptr
016cc     4F 0E 86 F1 | 	sub	objptr, #79
016d0     6C E9 9F FE | 	loc	pa,	#(@LR__0020-@LR__0019)
016d4     93 00 A0 FD | 	call	#FCACHE_LOAD_
016d8                 | '   repeat while (pos>-1)
016d8                 | LR__0019
016d8     FF FF 7F FF 
016dc     FF B3 5E F2 | 	cmps	local37, ##-1 wcz
016e0     34 00 90 ED |  if_be	jmp	#LR__0021
016e4     58 0B 03 F6 | 	mov	muldiva_, local36
016e8     0A 0C 07 F6 | 	mov	muldivb_, #10
016ec     D0 00 A0 FD | 	call	#divide_
016f0     85 B7 02 F6 | 	mov	local39, muldiva_
016f4                 | '     q:=j//10
016f4                 | '     q:=48+q
016f4     30 B6 06 F1 | 	add	local39, #48
016f8     59 B9 02 F6 | 	mov	local40, local37
016fc     44 0E 06 F1 | 	add	objptr, #68
01700     07 B9 02 F1 | 	add	local40, objptr
01704                 | '     n_string[pos]:=q
01704     5C B7 42 FC | 	wrbyte	local39, local40
01708                 | '     j:=j/10
01708     86 B1 02 F6 | 	mov	local36, muldivb_
0170c                 | '     pos-=1
0170c     01 B2 86 F1 | 	sub	local37, #1
01710     44 0E 86 F1 | 	sub	objptr, #68
01714     C0 FF 9F FD | 	jmp	#LR__0019
01718                 | LR__0020
01718                 | LR__0021
01718                 | '   repeat while n_string[0]==48
01718                 | LR__0022
01718     44 0E 06 F1 | 	add	objptr, #68
0171c     07 BB C2 FA | 	rdbyte	local41, objptr
01720     44 0E 86 F1 | 	sub	objptr, #68
01724     30 BA 0E F2 | 	cmp	local41, #48 wz
01728     20 00 90 5D |  if_ne	jmp	#LR__0023
0172c     44 0E 06 F1 | 	add	objptr, #68
01730     07 5D 02 F6 | 	mov	arg01, objptr
01734     44 0E 86 F1 | 	sub	objptr, #68
01738     2E 5F 02 F6 | 	mov	arg02, arg01
0173c     01 5E 06 F1 | 	add	arg02, #1
01740                 | '     bytemove(@n_string,@n_string+1,12)
01740     0C 60 06 F6 | 	mov	arg03, #12
01744     64 3E B0 FD | 	call	#__system____builtin_memmove
01748     CC FF 9F FD | 	jmp	#LR__0022
0174c                 | LR__0023
0174c                 | ' 
0174c                 | '   if k==45
0174c     2D B4 0E F2 | 	cmp	local38, #45 wz
01750     28 00 90 5D |  if_ne	jmp	#LR__0024
01754     44 0E 06 F1 | 	add	objptr, #68
01758     07 5F 02 F6 | 	mov	arg02, objptr
0175c     44 0E 86 F1 | 	sub	objptr, #68
01760     2F 5D 02 F6 | 	mov	arg01, arg02
01764     01 5C 06 F1 | 	add	arg01, #1
01768                 | '      bytemove(@n_string+1,@n_string,12)
01768     0C 60 06 F6 | 	mov	arg03, #12
0176c     3C 3E B0 FD | 	call	#__system____builtin_memmove
01770                 | '      n_string[0]:=k
01770     44 0E 06 F1 | 	add	objptr, #68
01774     07 B5 42 FC | 	wrbyte	local38, objptr
01778     44 0E 86 F1 | 	sub	objptr, #68
0177c                 | LR__0024
0177c                 | LR__0025
0177c     44 0E 06 F1 | 	add	objptr, #68
01780     07 2B 02 F6 | 	mov	result1, objptr
01784     44 0E 86 F1 | 	sub	objptr, #68
01788                 | ' 
01788                 | ' q:=@n_string
01788                 | ' return q
01788     15 5D 02 F6 | 	mov	arg01, result1
0178c     CC 06 B0 FD | 	call	#_hng030rm_spin2_write
01790     90 F7 9F FD | 	jmp	#LR__0003
01794     AF F0 03 F6 | 	mov	ptra, fp
01798     BF 00 A0 FD | 	call	#popregs_
0179c                 | _program_ret
0179c     2D 00 64 FD | 	ret
017a0                 | 
017a0                 | ' 
017a0                 | ' 
017a0                 | ' ''---------- putpixel - put a pixel on the screen
017a0                 | ' 
017a0                 | ' pub putpixel1(x,y,c) |byte b
017a0                 | _hng030rm_spin2_putpixel1
017a0                 | ' 
017a0                 | ' 
017a0                 | ' if ((x>=0) & (x<32*cpl) & (y>=0) & (y<lines))
017a0     00 30 06 F6 | 	mov	_var01, #0
017a4     00 5C 5E F2 | 	cmps	arg01, #0 wcz
017a8     01 30 66 36 |  if_ae	neg	_var01, #1
017ac     00 32 06 F6 | 	mov	_var02, #0
017b0     90 0E 06 F1 | 	add	objptr, #144
017b4     07 35 02 FB | 	rdlong	_var03, objptr
017b8     05 34 66 F0 | 	shl	_var03, #5
017bc     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
017c0     01 32 66 C6 |  if_b	neg	_var02, #1
017c4     19 31 02 F5 | 	and	_var01, _var02
017c8     00 36 06 F6 | 	mov	_var04, #0
017cc     00 5E 5E F2 | 	cmps	arg02, #0 wcz
017d0     01 36 66 36 |  if_ae	neg	_var04, #1
017d4     1B 31 02 F5 | 	and	_var01, _var04
017d8     00 38 06 F6 | 	mov	_var05, #0
017dc     04 0E 06 F1 | 	add	objptr, #4
017e0     07 3B 02 FB | 	rdlong	_var06, objptr
017e4     94 0E 86 F1 | 	sub	objptr, #148
017e8     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
017ec     01 38 66 C6 |  if_b	neg	_var05, #1
017f0     1C 31 CA F7 | 	test	_var01, _var05 wz
017f4     8C 00 90 AD |  if_e	jmp	#LR__0028
017f8     90 0E 06 F1 | 	add	objptr, #144
017fc     07 3D 02 FB | 	rdlong	_var07, objptr
01800     90 0E 86 F1 | 	sub	objptr, #144
01804     02 3C 66 F0 | 	shl	_var07, #2
01808     2F 3D 02 FD | 	qmul	_var07, arg02
0180c     18 3E 62 FD | 	getqx	_var08
01810     07 41 02 FB | 	rdlong	_var09, objptr
01814     1F 41 02 F1 | 	add	_var09, _var08
01818     2E 43 02 F6 | 	mov	_var10, arg01
0181c     03 42 46 F0 | 	shr	_var10, #3
01820     21 41 02 F1 | 	add	_var09, _var10
01824                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>3)]
01824     20 45 C2 FA | 	rdbyte	_var11, _var09
01828                 | '     if (c==0)
01828     00 60 0E F2 | 	cmp	arg03, #0 wz
0182c     18 00 90 5D |  if_ne	jmp	#LR__0026
01830     2E 31 52 F6 | 	abs	_var01, arg01 wc
01834     07 30 06 F5 | 	and	_var01, #7
01838     18 31 62 C6 |  if_b	neg	_var01, _var01
0183c     18 47 C2 F9 | 	decod	_var12, _var01
01840                 | '       b:=b & !(1<<(x//8))
01840     23 45 22 F5 | 	andn	_var11, _var12
01844                 | '     else
01844     14 00 90 FD | 	jmp	#LR__0027
01848                 | LR__0026
01848     2E 31 52 F6 | 	abs	_var01, arg01 wc
0184c     07 30 06 F5 | 	and	_var01, #7
01850     18 31 62 C6 |  if_b	neg	_var01, _var01
01854     18 49 C2 F9 | 	decod	_var13, _var01
01858                 | '       b:=b |(1<<(x//8))
01858     24 45 42 F5 | 	or	_var11, _var13
0185c                 | LR__0027
0185c     90 0E 06 F1 | 	add	objptr, #144
01860     07 4B 02 FB | 	rdlong	_var14, objptr
01864     90 0E 86 F1 | 	sub	objptr, #144
01868     02 4A 66 F0 | 	shl	_var14, #2
0186c     2F 4B 02 FD | 	qmul	_var14, arg02
01870     18 4C 62 FD | 	getqx	_var15
01874     07 4F 02 FB | 	rdlong	_var16, objptr
01878     26 4F 02 F1 | 	add	_var16, _var15
0187c     21 4F 02 F1 | 	add	_var16, _var10
01880                 | '     byte[buf_ptr+4*cpl*y+(x>>3)]:=b
01880     27 45 42 FC | 	wrbyte	_var11, _var16
01884                 | LR__0028
01884                 | _hng030rm_spin2_putpixel1_ret
01884     2D 00 64 FD | 	ret
01888                 | 
01888                 | ' 
01888                 | ' 
01888                 | ' pub putpixel2(x,y,c) |byte b
01888                 | _hng030rm_spin2_putpixel2
01888                 | ' 
01888                 | ' 
01888                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
01888     00 30 06 F6 | 	mov	_var01, #0
0188c     00 5C 5E F2 | 	cmps	arg01, #0 wcz
01890     01 30 66 36 |  if_ae	neg	_var01, #1
01894     00 32 06 F6 | 	mov	_var02, #0
01898     90 0E 06 F1 | 	add	objptr, #144
0189c     07 35 02 FB | 	rdlong	_var03, objptr
018a0     04 34 66 F0 | 	shl	_var03, #4
018a4     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
018a8     01 32 66 C6 |  if_b	neg	_var02, #1
018ac     19 31 02 F5 | 	and	_var01, _var02
018b0     00 36 06 F6 | 	mov	_var04, #0
018b4     00 5E 5E F2 | 	cmps	arg02, #0 wcz
018b8     01 36 66 36 |  if_ae	neg	_var04, #1
018bc     1B 31 02 F5 | 	and	_var01, _var04
018c0     00 38 06 F6 | 	mov	_var05, #0
018c4     04 0E 06 F1 | 	add	objptr, #4
018c8     07 3B 02 FB | 	rdlong	_var06, objptr
018cc     94 0E 86 F1 | 	sub	objptr, #148
018d0     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
018d4     01 38 66 C6 |  if_b	neg	_var05, #1
018d8     1C 31 CA F7 | 	test	_var01, _var05 wz
018dc     7C 00 90 AD |  if_e	jmp	#LR__0029
018e0     90 0E 06 F1 | 	add	objptr, #144
018e4     07 3D 02 FB | 	rdlong	_var07, objptr
018e8     90 0E 86 F1 | 	sub	objptr, #144
018ec     02 3C 66 F0 | 	shl	_var07, #2
018f0     2F 3D 02 FD | 	qmul	_var07, arg02
018f4     18 3E 62 FD | 	getqx	_var08
018f8     07 41 02 FB | 	rdlong	_var09, objptr
018fc     1F 41 02 F1 | 	add	_var09, _var08
01900     2E 43 02 F6 | 	mov	_var10, arg01
01904     02 42 46 F0 | 	shr	_var10, #2
01908     21 41 02 F1 | 	add	_var09, _var10
0190c                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>2)]
0190c     20 45 C2 FA | 	rdbyte	_var11, _var09
01910     2E 31 52 F6 | 	abs	_var01, arg01 wc
01914     03 30 06 F5 | 	and	_var01, #3
01918     18 31 62 C6 |  if_b	neg	_var01, _var01
0191c     01 30 66 F0 | 	shl	_var01, #1
01920     03 46 06 F6 | 	mov	_var12, #3
01924     18 47 62 F0 | 	shl	_var12, _var01
01928                 | '     b:=b & !(%11<<((x//4)<<1))
01928     23 45 22 F5 | 	andn	_var11, _var12
0192c     18 61 62 F0 | 	shl	arg03, _var01
01930                 | '     b:=b |(c<<((x//4)<<1))
01930     30 45 42 F5 | 	or	_var11, arg03
01934     90 0E 06 F1 | 	add	objptr, #144
01938     07 49 02 FB | 	rdlong	_var13, objptr
0193c     90 0E 86 F1 | 	sub	objptr, #144
01940     02 48 66 F0 | 	shl	_var13, #2
01944     2F 49 02 FD | 	qmul	_var13, arg02
01948     18 4A 62 FD | 	getqx	_var14
0194c     07 4D 02 FB | 	rdlong	_var15, objptr
01950     25 4D 02 F1 | 	add	_var15, _var14
01954     21 4D 02 F1 | 	add	_var15, _var10
01958                 | '     byte[buf_ptr+4*cpl*y+(x>>2)]:=b
01958     26 45 42 FC | 	wrbyte	_var11, _var15
0195c                 | LR__0029
0195c                 | _hng030rm_spin2_putpixel2_ret
0195c     2D 00 64 FD | 	ret
01960                 | 
01960                 | ' 
01960                 | ' 
01960                 | ' pub putpixel4(x,y,c) |byte b
01960                 | _hng030rm_spin2_putpixel4
01960                 | ' 
01960                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
01960     00 30 06 F6 | 	mov	_var01, #0
01964     00 5C 5E F2 | 	cmps	arg01, #0 wcz
01968     01 30 66 36 |  if_ae	neg	_var01, #1
0196c     00 32 06 F6 | 	mov	_var02, #0
01970     90 0E 06 F1 | 	add	objptr, #144
01974     07 35 02 FB | 	rdlong	_var03, objptr
01978     04 34 66 F0 | 	shl	_var03, #4
0197c     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
01980     01 32 66 C6 |  if_b	neg	_var02, #1
01984     19 31 02 F5 | 	and	_var01, _var02
01988     00 36 06 F6 | 	mov	_var04, #0
0198c     00 5E 5E F2 | 	cmps	arg02, #0 wcz
01990     01 36 66 36 |  if_ae	neg	_var04, #1
01994     1B 31 02 F5 | 	and	_var01, _var04
01998     00 38 06 F6 | 	mov	_var05, #0
0199c     04 0E 06 F1 | 	add	objptr, #4
019a0     07 3B 02 FB | 	rdlong	_var06, objptr
019a4     94 0E 86 F1 | 	sub	objptr, #148
019a8     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
019ac     01 38 66 C6 |  if_b	neg	_var05, #1
019b0     1C 31 CA F7 | 	test	_var01, _var05 wz
019b4     7C 00 90 AD |  if_e	jmp	#LR__0030
019b8     90 0E 06 F1 | 	add	objptr, #144
019bc     07 3D 02 FB | 	rdlong	_var07, objptr
019c0     90 0E 86 F1 | 	sub	objptr, #144
019c4     02 3C 66 F0 | 	shl	_var07, #2
019c8     2F 3D 02 FD | 	qmul	_var07, arg02
019cc     18 3E 62 FD | 	getqx	_var08
019d0     07 41 02 FB | 	rdlong	_var09, objptr
019d4     1F 41 02 F1 | 	add	_var09, _var08
019d8     2E 43 02 F6 | 	mov	_var10, arg01
019dc     01 42 46 F0 | 	shr	_var10, #1
019e0     21 41 02 F1 | 	add	_var09, _var10
019e4                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>1)]
019e4     20 45 C2 FA | 	rdbyte	_var11, _var09
019e8     2E 31 52 F6 | 	abs	_var01, arg01 wc
019ec     01 30 06 F5 | 	and	_var01, #1
019f0     18 31 62 C6 |  if_b	neg	_var01, _var01
019f4     02 30 66 F0 | 	shl	_var01, #2
019f8     0F 46 06 F6 | 	mov	_var12, #15
019fc     18 47 62 F0 | 	shl	_var12, _var01
01a00                 | '     b:=b & !(%1111<<((x//2)<<2))
01a00     23 45 22 F5 | 	andn	_var11, _var12
01a04     18 61 62 F0 | 	shl	arg03, _var01
01a08                 | '     b:=b |(c<<((x//2)<<2))
01a08     30 45 42 F5 | 	or	_var11, arg03
01a0c     90 0E 06 F1 | 	add	objptr, #144
01a10     07 49 02 FB | 	rdlong	_var13, objptr
01a14     90 0E 86 F1 | 	sub	objptr, #144
01a18     02 48 66 F0 | 	shl	_var13, #2
01a1c     2F 49 02 FD | 	qmul	_var13, arg02
01a20     18 4A 62 FD | 	getqx	_var14
01a24     07 4D 02 FB | 	rdlong	_var15, objptr
01a28     25 4D 02 F1 | 	add	_var15, _var14
01a2c     21 4D 02 F1 | 	add	_var15, _var10
01a30                 | '     byte[buf_ptr+4*cpl*y+(x>>1)]:=b
01a30     26 45 42 FC | 	wrbyte	_var11, _var15
01a34                 | LR__0030
01a34                 | _hng030rm_spin2_putpixel4_ret
01a34     2D 00 64 FD | 	ret
01a38                 | 
01a38                 | ' 
01a38                 | ' 
01a38                 | ' pub putpixel8(x,y,c)
01a38                 | _hng030rm_spin2_putpixel8
01a38                 | ' 
01a38                 | ' if ((x>=0) & (x<4*cpl) & (y>=0) & (y<lines))
01a38     00 30 06 F6 | 	mov	_var01, #0
01a3c     00 5C 5E F2 | 	cmps	arg01, #0 wcz
01a40     01 30 66 36 |  if_ae	neg	_var01, #1
01a44     00 32 06 F6 | 	mov	_var02, #0
01a48     90 0E 06 F1 | 	add	objptr, #144
01a4c     07 35 02 FB | 	rdlong	_var03, objptr
01a50     02 34 66 F0 | 	shl	_var03, #2
01a54     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
01a58     01 32 66 C6 |  if_b	neg	_var02, #1
01a5c     19 31 02 F5 | 	and	_var01, _var02
01a60     00 36 06 F6 | 	mov	_var04, #0
01a64     00 5E 5E F2 | 	cmps	arg02, #0 wcz
01a68     01 36 66 36 |  if_ae	neg	_var04, #1
01a6c     1B 31 02 F5 | 	and	_var01, _var04
01a70     00 38 06 F6 | 	mov	_var05, #0
01a74     04 0E 06 F1 | 	add	objptr, #4
01a78     07 3B 02 FB | 	rdlong	_var06, objptr
01a7c     94 0E 86 F1 | 	sub	objptr, #148
01a80     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
01a84     01 38 66 C6 |  if_b	neg	_var05, #1
01a88     1C 31 CA F7 | 	test	_var01, _var05 wz
01a8c     28 00 90 AD |  if_e	jmp	#LR__0031
01a90     90 0E 06 F1 | 	add	objptr, #144
01a94     07 3D 02 FB | 	rdlong	_var07, objptr
01a98     90 0E 86 F1 | 	sub	objptr, #144
01a9c     02 3C 66 F0 | 	shl	_var07, #2
01aa0     2F 3D 02 FD | 	qmul	_var07, arg02
01aa4     18 3E 62 FD | 	getqx	_var08
01aa8     07 41 02 FB | 	rdlong	_var09, objptr
01aac     1F 41 02 F1 | 	add	_var09, _var08
01ab0     2E 41 02 F1 | 	add	_var09, arg01
01ab4                 | '     byte[buf_ptr+4*cpl*y+x]:=c
01ab4     20 61 42 FC | 	wrbyte	arg03, _var09
01ab8                 | LR__0031
01ab8                 | _hng030rm_spin2_putpixel8_ret
01ab8     2D 00 64 FD | 	ret
01abc                 | 
01abc                 | ' 
01abc                 | ' ''---------- Set the border color, o is upper border, lines+1 is lower border
01abc                 | ' 
01abc                 | ' pub setbordercolor(r,g,b) | color
01abc                 | _hng030rm_spin2_setbordercolor
01abc     18 5C 66 F0 | 	shl	arg01, #24
01ac0     10 5E 66 F0 | 	shl	arg02, #16
01ac4     2F 5D 02 F1 | 	add	arg01, arg02
01ac8     08 60 66 F0 | 	shl	arg03, #8
01acc     30 5D 02 F1 | 	add	arg01, arg03
01ad0                 | ' 
01ad0                 | ' color:=r<<24+g<<16+b<<8
01ad0                 | ' bordercolor:=color
01ad0     2C 0E 06 F1 | 	add	objptr, #44
01ad4     07 5D 62 FC | 	wrlong	arg01, objptr
01ad8     2C 0E 86 F1 | 	sub	objptr, #44
01adc                 | _hng030rm_spin2_setbordercolor_ret
01adc     2D 00 64 FD | 	ret
01ae0                 | 
01ae0                 | ' 
01ae0                 | ' 
01ae0                 | ' '*************************************************************************
01ae0                 | ' '                                                                        *
01ae0                 | ' '  Text functions                                                        *
01ae0                 | ' '                                                                        *
01ae0                 | ' '*************************************************************************
01ae0                 | ' 
01ae0                 | ' ''---------- Clear the screen, set its foreground/background color
01ae0                 | ' 
01ae0                 | ' pub cls(fc,bc)   :c
01ae0                 | _hng030rm_spin2_cls
01ae0     07 5A 05 F6 | 	mov	COUNT_, #7
01ae4     B0 00 A0 FD | 	call	#pushregs_
01ae8     2E 6B 02 F6 | 	mov	local01, arg01
01aec     2F 6D 02 F6 | 	mov	local02, arg02
01af0                 | ' 
01af0                 | ' if (graphmode<512)
01af0     C4 0E 06 F1 | 	add	objptr, #196
01af4     07 6F 02 FB | 	rdlong	local03, objptr
01af8     C4 0E 86 F1 | 	sub	objptr, #196
01afc     01 00 00 FF 
01b00     00 6E 5E F2 | 	cmps	local03, ##512 wcz
01b04     34 00 90 3D |  if_ae	jmp	#LR__0032
01b08     35 71 02 F6 | 	mov	local04, local01
01b0c     18 70 66 F0 | 	shl	local04, #24
01b10     36 73 02 F6 | 	mov	local05, local02
01b14     10 72 66 F0 | 	shl	local05, #16
01b18     39 71 02 F1 | 	add	local04, local05
01b1c     20 70 06 F1 | 	add	local04, #32
01b20                 | '   c:=fc<<24+bc<<16+$20
01b20                 | '   longfill(buf_ptr,c,buflen)
01b20     07 5D 02 FB | 	rdlong	arg01, objptr
01b24     30 0E 06 F1 | 	add	objptr, #48
01b28     07 61 02 FB | 	rdlong	arg03, objptr
01b2c     30 0E 86 F1 | 	sub	objptr, #48
01b30     38 5F 02 F6 | 	mov	arg02, local04
01b34     A8 00 A0 FD | 	call	#\builtin_longfill_
01b38                 | ' else
01b38     AC 00 90 FD | 	jmp	#LR__0038
01b3c                 | LR__0032
01b3c                 | '   if (graphmode & 48) ==48
01b3c     C4 0E 06 F1 | 	add	objptr, #196
01b40     07 6F 02 FB | 	rdlong	local03, objptr
01b44     C4 0E 86 F1 | 	sub	objptr, #196
01b48     30 6E 06 F5 | 	and	local03, #48
01b4c     30 6E 0E F2 | 	cmp	local03, #48 wz
01b50                 | '     c:=bc
01b50     36 71 02 A6 |  if_e	mov	local04, local02
01b54     74 00 90 AD |  if_e	jmp	#LR__0037
01b58                 | '   elseif (graphmode & 48) ==32
01b58     C4 0E 06 F1 | 	add	objptr, #196
01b5c     07 6F 02 FB | 	rdlong	local03, objptr
01b60     C4 0E 86 F1 | 	sub	objptr, #196
01b64     30 6E 06 F5 | 	and	local03, #48
01b68     20 6E 0E F2 | 	cmp	local03, #32 wz
01b6c     10 00 90 5D |  if_ne	jmp	#LR__0033
01b70     36 71 02 F6 | 	mov	local04, local02
01b74     04 70 66 F0 | 	shl	local04, #4
01b78     36 71 02 F1 | 	add	local04, local02
01b7c                 | '     c:=bc<<4+bc
01b7c     4C 00 90 FD | 	jmp	#LR__0036
01b80                 | LR__0033
01b80                 | '   elseif (graphmode & 48) ==16
01b80     C4 0E 06 F1 | 	add	objptr, #196
01b84     07 6F 02 FB | 	rdlong	local03, objptr
01b88     C4 0E 86 F1 | 	sub	objptr, #196
01b8c     30 6E 06 F5 | 	and	local03, #48
01b90     10 6E 0E F2 | 	cmp	local03, #16 wz
01b94     28 00 90 5D |  if_ne	jmp	#LR__0034
01b98     36 71 02 F6 | 	mov	local04, local02
01b9c     06 70 66 F0 | 	shl	local04, #6
01ba0     36 75 02 F6 | 	mov	local06, local02
01ba4     04 74 66 F0 | 	shl	local06, #4
01ba8     3A 71 02 F1 | 	add	local04, local06
01bac     36 77 02 F6 | 	mov	local07, local02
01bb0     02 76 66 F0 | 	shl	local07, #2
01bb4     3B 71 02 F1 | 	add	local04, local07
01bb8     36 71 02 F1 | 	add	local04, local02
01bbc                 | '     c:=bc<<6+bc<<4+bc<<2+bc
01bbc                 | '   else
01bbc     0C 00 90 FD | 	jmp	#LR__0035
01bc0                 | LR__0034
01bc0                 | '     if bc==1
01bc0     01 6C 0E F2 | 	cmp	local02, #1 wz
01bc4                 | '       c:=255
01bc4     FF 70 06 A6 |  if_e	mov	local04, #255
01bc8                 | '     else
01bc8                 | '       c:=0
01bc8     00 70 06 56 |  if_ne	mov	local04, #0
01bcc                 | LR__0035
01bcc                 | LR__0036
01bcc                 | LR__0037
01bcc     30 0E 06 F1 | 	add	objptr, #48
01bd0     07 61 02 FB | 	rdlong	arg03, objptr
01bd4     30 0E 86 F1 | 	sub	objptr, #48
01bd8     02 60 66 F0 | 	shl	arg03, #2
01bdc                 | '   bytefill(buf_ptr,c,buflen*4)
01bdc     07 5D 02 FB | 	rdlong	arg01, objptr
01be0     38 5F 02 F6 | 	mov	arg02, local04
01be4     A0 00 A0 FD | 	call	#\builtin_bytefill_
01be8                 | LR__0038
01be8                 | ' setwritecolors(fc,bc)
01be8                 | ' 
01be8                 | ' 
01be8                 | ' write_color:=ff
01be8     38 0E 06 F1 | 	add	objptr, #56
01bec     07 6B 62 FC | 	wrlong	local01, objptr
01bf0                 | ' write_background:=bb
01bf0     04 0E 06 F1 | 	add	objptr, #4
01bf4     07 6D 62 FC | 	wrlong	local02, objptr
01bf8                 | ' cursor_x:=0
01bf8     08 0E 86 F1 | 	sub	objptr, #8
01bfc     07 01 48 FC | 	wrbyte	#0, objptr
01c00                 | ' cursor_y:=0
01c00     01 0E 06 F1 | 	add	objptr, #1
01c04     07 01 48 FC | 	wrbyte	#0, objptr
01c08     35 0E 86 F1 | 	sub	objptr, #53
01c0c     38 2B 02 F6 | 	mov	result1, local04
01c10     AF F0 03 F6 | 	mov	ptra, fp
01c14     BF 00 A0 FD | 	call	#popregs_
01c18                 | _hng030rm_spin2_cls_ret
01c18     2D 00 64 FD | 	ret
01c1c                 | 
01c1c                 | ' 
01c1c                 | ' ''--------- Output a string at position x,y without changing colors
01c1c                 | ' 
01c1c                 | ' pub outtextxy(x,y,text) | iii
01c1c                 | _hng030rm_spin2_outtextxy
01c1c     0B 5A 05 F6 | 	mov	COUNT_, #11
01c20     B0 00 A0 FD | 	call	#pushregs_
01c24     2E 6B 02 F6 | 	mov	local01, arg01
01c28                 | ' 
01c28                 | ' repeat iii from 0 to strsize(text)-1
01c28     00 6C 06 F6 | 	mov	local02, #0
01c2c     30 5D 02 F6 | 	mov	arg01, arg03
01c30     00 6E 06 F6 | 	mov	local03, #0
01c34     D8 E3 9F FE | 	loc	pa,	#(@LR__0040-@LR__0039)
01c38     93 00 A0 FD | 	call	#FCACHE_LOAD_
01c3c                 | LR__0039
01c3c     2E 71 CA FA | 	rdbyte	local04, arg01 wz
01c40     01 6E 06 51 |  if_ne	add	local03, #1
01c44     01 5C 06 51 |  if_ne	add	arg01, #1
01c48     F0 FF 9F 5D |  if_ne	jmp	#LR__0039
01c4c                 | LR__0040
01c4c     37 2B 02 F6 | 	mov	result1, local03
01c50     15 73 02 F6 | 	mov	local05, result1
01c54     01 72 86 F1 | 	sub	local05, #1
01c58     00 72 5E F2 | 	cmps	local05, #0 wcz
01c5c     01 74 06 16 |  if_a	mov	local06, #1
01c60     01 74 66 E6 |  if_be	neg	local06, #1
01c64     3A 73 02 F1 | 	add	local05, local06
01c68     E4 E3 9F FE | 	loc	pa,	#(@LR__0042-@LR__0041)
01c6c     93 00 A0 FD | 	call	#FCACHE_LOAD_
01c70                 | LR__0041
01c70     90 0E 06 F1 | 	add	objptr, #144
01c74     07 77 02 FB | 	rdlong	local07, objptr
01c78     90 0E 86 F1 | 	sub	objptr, #144
01c7c     2F 77 02 FD | 	qmul	local07, arg02
01c80     18 78 62 FD | 	getqx	local08
01c84     35 79 02 F1 | 	add	local08, local01
01c88     36 79 02 F1 | 	add	local08, local02
01c8c     02 78 66 F0 | 	shl	local08, #2
01c90     07 7B 02 FB | 	rdlong	local09, objptr
01c94     3C 7B 02 F1 | 	add	local09, local08
01c98     3D 7D 02 FB | 	rdlong	local10, local09
01c9c     FF 7C 26 F5 | 	andn	local10, #255
01ca0     30 7F 02 F6 | 	mov	local11, arg03
01ca4     36 7F 02 F1 | 	add	local11, local02
01ca8     3F 77 C2 FA | 	rdbyte	local07, local11
01cac     3B 7D 42 F5 | 	or	local10, local07
01cb0                 | '   long[buf_ptr+4*(cpl*y+x+iii)]:=(long[buf_ptr+4*(cpl*y+x+iii)] & $FFFFFF00)  | byte[text+iii]
01cb0     3D 7D 62 FC | 	wrlong	local10, local09
01cb4     3A 6D 02 F1 | 	add	local02, local06
01cb8     39 6D 0A F2 | 	cmp	local02, local05 wz
01cbc     B0 FF 9F 5D |  if_ne	jmp	#LR__0041
01cc0                 | LR__0042
01cc0     AF F0 03 F6 | 	mov	ptra, fp
01cc4     BF 00 A0 FD | 	call	#popregs_
01cc8                 | _hng030rm_spin2_outtextxy_ret
01cc8     2D 00 64 FD | 	ret
01ccc                 | 
01ccc                 | ' 
01ccc                 | ' ''---------- Output a char at the cursor position, move the cursor
01ccc                 | ' 
01ccc                 | ' pub putchar(achar) | c,x,y
01ccc                 | _hng030rm_spin2_putchar
01ccc     12 5A 05 F6 | 	mov	COUNT_, #18
01cd0     B0 00 A0 FD | 	call	#pushregs_
01cd4     2E 6B 02 F6 | 	mov	local01, arg01
01cd8                 | ' 
01cd8                 | ' if achar==10
01cd8     0A 6A 0E F2 | 	cmp	local01, #10 wz
01cdc     58 00 90 5D |  if_ne	jmp	#LR__0043
01ce0                 | '   crlf()
01ce0                 | ' 
01ce0                 | ' cursor_x:=0
01ce0     34 0E 06 F1 | 	add	objptr, #52
01ce4     07 01 48 FC | 	wrbyte	#0, objptr
01ce8                 | ' cursor_y+=1
01ce8     01 0E 06 F1 | 	add	objptr, #1
01cec     07 6D C2 FA | 	rdbyte	local02, objptr
01cf0     01 6C 06 F1 | 	add	local02, #1
01cf4     07 6D 42 FC | 	wrbyte	local02, objptr
01cf8                 | ' if cursor_y>lines-1
01cf8     5F 0E 06 F1 | 	add	objptr, #95
01cfc     07 6D 02 FB | 	rdlong	local02, objptr
01d00     01 6C 86 F1 | 	sub	local02, #1
01d04     5F 0E 86 F1 | 	sub	objptr, #95
01d08     07 6F C2 FA | 	rdbyte	local03, objptr
01d0c     35 0E 86 F1 | 	sub	objptr, #53
01d10     36 6F 5A F2 | 	cmps	local03, local02 wcz
01d14     38 01 90 ED |  if_be	jmp	#LR__0046
01d18                 | '   scrollup()
01d18     F4 02 B0 FD | 	call	#_hng030rm_spin2_scrollup
01d1c     94 0E 06 F1 | 	add	objptr, #148
01d20     07 71 02 FB | 	rdlong	local04, objptr
01d24     01 70 86 F1 | 	sub	local04, #1
01d28                 | '   cursor_y:=lines-1
01d28     5F 0E 86 F1 | 	sub	objptr, #95
01d2c     07 71 42 FC | 	wrbyte	local04, objptr
01d30     35 0E 86 F1 | 	sub	objptr, #53
01d34                 | ' else  
01d34     18 01 90 FD | 	jmp	#LR__0046
01d38                 | LR__0043
01d38                 | '   x:=cursor_x
01d38     34 0E 06 F1 | 	add	objptr, #52
01d3c     07 73 C2 FA | 	rdbyte	local05, objptr
01d40                 | '   y:=cursor_y
01d40     01 0E 06 F1 | 	add	objptr, #1
01d44     07 75 C2 FA | 	rdbyte	local06, objptr
01d48     03 0E 06 F1 | 	add	objptr, #3
01d4c     07 77 02 FB | 	rdlong	local07, objptr
01d50     18 76 66 F0 | 	shl	local07, #24
01d54     04 0E 06 F1 | 	add	objptr, #4
01d58     07 79 02 FB | 	rdlong	local08, objptr
01d5c     10 78 66 F0 | 	shl	local08, #16
01d60     3C 77 02 F1 | 	add	local07, local08
01d64                 | '   c:=write_color<<24+write_background<<16
01d64     54 0E 06 F1 | 	add	objptr, #84
01d68     07 7B 02 FB | 	rdlong	local09, objptr
01d6c     90 0E 86 F1 | 	sub	objptr, #144
01d70     3A 7B 02 FD | 	qmul	local09, local06
01d74     18 7C 62 FD | 	getqx	local10
01d78     39 7D 02 F1 | 	add	local10, local05
01d7c     02 7C 66 F0 | 	shl	local10, #2
01d80     07 7F 02 FB | 	rdlong	local11, objptr
01d84     3E 7F 02 F1 | 	add	local11, local10
01d88     3F 81 02 FB | 	rdlong	local12, local11
01d8c     7F 00 00 FF 
01d90     FF 81 06 F5 | 	and	local12, ##65535
01d94     3B 81 42 F5 | 	or	local12, local07
01d98                 | '   long[buf_ptr+4*(cpl*y+x)]:=long[buf_ptr+4*(cpl*y+x)] &$FFFF | c
01d98     3F 81 62 FC | 	wrlong	local12, local11
01d9c     90 0E 06 F1 | 	add	objptr, #144
01da0     07 7B 02 FB | 	rdlong	local09, objptr
01da4     90 0E 86 F1 | 	sub	objptr, #144
01da8     3A 7B 02 FD | 	qmul	local09, local06
01dac     18 82 62 FD | 	getqx	local13
01db0     39 83 02 F1 | 	add	local13, local05
01db4     02 82 66 F0 | 	shl	local13, #2
01db8     07 85 02 FB | 	rdlong	local14, objptr
01dbc     41 85 02 F1 | 	add	local14, local13
01dc0     42 87 02 FB | 	rdlong	local15, local14
01dc4     FF 86 26 F5 | 	andn	local15, #255
01dc8     FF 6A 06 F5 | 	and	local01, #255
01dcc     35 87 42 F5 | 	or	local15, local01
01dd0                 | '   long[buf_ptr+4*(cpl*y+x)]:=(long[buf_ptr+4*(cpl*y+x)] & $FFFFFF00)  |(achar & $000000FF)
01dd0     42 87 62 FC | 	wrlong	local15, local14
01dd4                 | '   cursor_x+=1
01dd4     34 0E 06 F1 | 	add	objptr, #52
01dd8     07 89 C2 FA | 	rdbyte	local16, objptr
01ddc     01 88 06 F1 | 	add	local16, #1
01de0     07 89 42 FC | 	wrbyte	local16, objptr
01de4                 | '   if cursor_x==cpl
01de4     07 89 C2 FA | 	rdbyte	local16, objptr
01de8     5C 0E 06 F1 | 	add	objptr, #92
01dec     07 8B 02 FB | 	rdlong	local17, objptr
01df0     90 0E 86 F1 | 	sub	objptr, #144
01df4     45 89 0A F2 | 	cmp	local16, local17 wz
01df8     54 00 90 5D |  if_ne	jmp	#LR__0045
01dfc                 | '     cursor_x:=0
01dfc     34 0E 06 F1 | 	add	objptr, #52
01e00     07 01 48 FC | 	wrbyte	#0, objptr
01e04                 | '     cursor_y+=1
01e04     01 0E 06 F1 | 	add	objptr, #1
01e08     07 89 C2 FA | 	rdbyte	local16, objptr
01e0c     01 88 06 F1 | 	add	local16, #1
01e10     07 89 42 FC | 	wrbyte	local16, objptr
01e14                 | '     if cursor_y>lines-1
01e14     5F 0E 06 F1 | 	add	objptr, #95
01e18     07 89 02 FB | 	rdlong	local16, objptr
01e1c     01 88 86 F1 | 	sub	local16, #1
01e20     5F 0E 86 F1 | 	sub	objptr, #95
01e24     07 8B C2 FA | 	rdbyte	local17, objptr
01e28     35 0E 86 F1 | 	sub	objptr, #53
01e2c     44 8B 5A F2 | 	cmps	local17, local16 wcz
01e30     1C 00 90 ED |  if_be	jmp	#LR__0044
01e34                 | '       scrollup()
01e34     D8 01 B0 FD | 	call	#_hng030rm_spin2_scrollup
01e38     94 0E 06 F1 | 	add	objptr, #148
01e3c     07 8D 02 FB | 	rdlong	local18, objptr
01e40     01 8C 86 F1 | 	sub	local18, #1
01e44                 | '       cursor_y:=lines-1
01e44     5F 0E 86 F1 | 	sub	objptr, #95
01e48     07 8D 42 FC | 	wrbyte	local18, objptr
01e4c     35 0E 86 F1 | 	sub	objptr, #53
01e50                 | LR__0044
01e50                 | LR__0045
01e50                 | LR__0046
01e50     AF F0 03 F6 | 	mov	ptra, fp
01e54     BF 00 A0 FD | 	call	#popregs_
01e58                 | _hng030rm_spin2_putchar_ret
01e58     2D 00 64 FD | 	ret
01e5c                 | 
01e5c                 | ' 
01e5c                 | ' ''--------- Output a string at the cursor position, move the cursor
01e5c                 | ' 
01e5c                 | ' pub write(text) | iii,c,ncx,ncy
01e5c                 | _hng030rm_spin2_write
01e5c     11 5A 05 F6 | 	mov	COUNT_, #17
01e60     B0 00 A0 FD | 	call	#pushregs_
01e64     2E 6B 02 F6 | 	mov	local01, arg01
01e68     38 0E 06 F1 | 	add	objptr, #56
01e6c     07 6D 02 FB | 	rdlong	local02, objptr
01e70     18 6C 66 F0 | 	shl	local02, #24
01e74     04 0E 06 F1 | 	add	objptr, #4
01e78     07 6F 02 FB | 	rdlong	local03, objptr
01e7c     10 6E 66 F0 | 	shl	local03, #16
01e80     37 6D 02 F1 | 	add	local02, local03
01e84                 | ' 
01e84                 | ' c:=write_color<<24+write_background<<16
01e84                 | ' 'debug(uhex_long(write_color))
01e84                 | ' ncy:=cursor_y
01e84     07 0E 86 F1 | 	sub	objptr, #7
01e88     07 71 C2 FA | 	rdbyte	local04, objptr
01e8c                 | ' ncx:=cursor_x+strsize(text)
01e8c     01 0E 86 F1 | 	sub	objptr, #1
01e90     07 73 C2 FA | 	rdbyte	local05, objptr
01e94     34 0E 86 F1 | 	sub	objptr, #52
01e98     35 5D 02 F6 | 	mov	arg01, local01
01e9c     00 74 06 F6 | 	mov	local06, #0
01ea0     6C E1 9F FE | 	loc	pa,	#(@LR__0048-@LR__0047)
01ea4     93 00 A0 FD | 	call	#FCACHE_LOAD_
01ea8                 | LR__0047
01ea8     2E 77 CA FA | 	rdbyte	local07, arg01 wz
01eac     01 74 06 51 |  if_ne	add	local06, #1
01eb0     01 5C 06 51 |  if_ne	add	arg01, #1
01eb4     F0 FF 9F 5D |  if_ne	jmp	#LR__0047
01eb8                 | LR__0048
01eb8     3A 2B 02 F6 | 	mov	result1, local06
01ebc     3A 73 02 F1 | 	add	local05, local06
01ec0     39 79 02 F6 | 	mov	local08, local05
01ec4     68 E1 9F FE | 	loc	pa,	#(@LR__0050-@LR__0049)
01ec8     93 00 A0 FD | 	call	#FCACHE_LOAD_
01ecc                 | ' repeat while ncx>cpl-1
01ecc                 | LR__0049
01ecc     90 0E 06 F1 | 	add	objptr, #144
01ed0     07 73 02 FB | 	rdlong	local05, objptr
01ed4     90 0E 86 F1 | 	sub	objptr, #144
01ed8     01 72 86 F1 | 	sub	local05, #1
01edc     39 79 5A F2 | 	cmps	local08, local05 wcz
01ee0     18 00 90 ED |  if_be	jmp	#LR__0051
01ee4                 | '   ncx-=cpl
01ee4     90 0E 06 F1 | 	add	objptr, #144
01ee8     07 7B 02 FB | 	rdlong	local09, objptr
01eec     90 0E 86 F1 | 	sub	objptr, #144
01ef0     3D 79 82 F1 | 	sub	local08, local09
01ef4                 | '   ncy+=1
01ef4     01 70 06 F1 | 	add	local04, #1
01ef8     D0 FF 9F FD | 	jmp	#LR__0049
01efc                 | LR__0050
01efc                 | LR__0051
01efc                 | ' repeat while ncy>lines-1
01efc                 | LR__0052
01efc     94 0E 06 F1 | 	add	objptr, #148
01f00     07 73 02 FB | 	rdlong	local05, objptr
01f04     94 0E 86 F1 | 	sub	objptr, #148
01f08     01 72 86 F1 | 	sub	local05, #1
01f0c     39 71 5A F2 | 	cmps	local04, local05 wcz
01f10     20 00 90 ED |  if_be	jmp	#LR__0053
01f14                 | '   ncy-=1
01f14     01 70 86 F1 | 	sub	local04, #1
01f18                 | '   scrollup()
01f18     F4 00 B0 FD | 	call	#_hng030rm_spin2_scrollup
01f1c                 | '   cursor_y-=1
01f1c     35 0E 06 F1 | 	add	objptr, #53
01f20     07 73 C2 FA | 	rdbyte	local05, objptr
01f24     01 72 86 F1 | 	sub	local05, #1
01f28     07 73 42 FC | 	wrbyte	local05, objptr
01f2c     35 0E 86 F1 | 	sub	objptr, #53
01f30     C8 FF 9F FD | 	jmp	#LR__0052
01f34                 | LR__0053
01f34                 | ' 
01f34                 | ' repeat iii from 0 to strsize(text)-1
01f34     00 7C 06 F6 | 	mov	local10, #0
01f38     35 5D 02 F6 | 	mov	arg01, local01
01f3c     00 74 06 F6 | 	mov	local06, #0
01f40     CC E0 9F FE | 	loc	pa,	#(@LR__0055-@LR__0054)
01f44     93 00 A0 FD | 	call	#FCACHE_LOAD_
01f48                 | LR__0054
01f48     2E 77 CA FA | 	rdbyte	local07, arg01 wz
01f4c     01 74 06 51 |  if_ne	add	local06, #1
01f50     01 5C 06 51 |  if_ne	add	arg01, #1
01f54     F0 FF 9F 5D |  if_ne	jmp	#LR__0054
01f58                 | LR__0055
01f58     3A 2B 02 F6 | 	mov	result1, local06
01f5c     15 7F 02 F6 | 	mov	local11, result1
01f60     01 7E 86 F1 | 	sub	local11, #1
01f64     00 7E 5E F2 | 	cmps	local11, #0 wcz
01f68     01 80 06 16 |  if_a	mov	local12, #1
01f6c     01 80 66 E6 |  if_be	neg	local12, #1
01f70     40 7F 02 F1 | 	add	local11, local12
01f74     E0 E0 9F FE | 	loc	pa,	#(@LR__0057-@LR__0056)
01f78     93 00 A0 FD | 	call	#FCACHE_LOAD_
01f7c                 | LR__0056
01f7c     90 0E 06 F1 | 	add	objptr, #144
01f80     07 83 02 FB | 	rdlong	local13, objptr
01f84     5B 0E 86 F1 | 	sub	objptr, #91
01f88     07 85 C2 FA | 	rdbyte	local14, objptr
01f8c     42 83 02 FD | 	qmul	local13, local14
01f90     18 86 62 FD | 	getqx	local15
01f94     01 0E 86 F1 | 	sub	objptr, #1
01f98     07 83 C2 FA | 	rdbyte	local13, objptr
01f9c     34 0E 86 F1 | 	sub	objptr, #52
01fa0     41 87 02 F1 | 	add	local15, local13
01fa4     3E 87 02 F1 | 	add	local15, local10
01fa8     02 86 66 F0 | 	shl	local15, #2
01fac     07 89 02 FB | 	rdlong	local16, objptr
01fb0     43 89 02 F1 | 	add	local16, local15
01fb4     44 8B 02 FB | 	rdlong	local17, local16
01fb8     7F 00 00 FF 
01fbc     FF 8B 06 F5 | 	and	local17, ##65535
01fc0     36 8B 42 F5 | 	or	local17, local02
01fc4                 | ' 
01fc4                 | '   long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)]:=long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)] &$FFFF | c
01fc4     44 8B 62 FC | 	wrlong	local17, local16
01fc8     40 7D 02 F1 | 	add	local10, local12
01fcc     3F 7D 0A F2 | 	cmp	local10, local11 wz
01fd0     A8 FF 9F 5D |  if_ne	jmp	#LR__0056
01fd4                 | LR__0057
01fd4                 | ' 
01fd4                 | ' outtextxy(cursor_x,cursor_y,text)
01fd4     34 0E 06 F1 | 	add	objptr, #52
01fd8     07 5D C2 FA | 	rdbyte	arg01, objptr
01fdc     01 0E 06 F1 | 	add	objptr, #1
01fe0     07 5F C2 FA | 	rdbyte	arg02, objptr
01fe4     35 0E 86 F1 | 	sub	objptr, #53
01fe8     35 61 02 F6 | 	mov	arg03, local01
01fec     2C FC BF FD | 	call	#_hng030rm_spin2_outtextxy
01ff0                 | ' 
01ff0                 | ' cursor_x:=ncx
01ff0     34 0E 06 F1 | 	add	objptr, #52
01ff4     07 79 42 FC | 	wrbyte	local08, objptr
01ff8                 | ' cursor_y:=ncy
01ff8     01 0E 06 F1 | 	add	objptr, #1
01ffc     07 71 42 FC | 	wrbyte	local04, objptr
02000     35 0E 86 F1 | 	sub	objptr, #53
02004     AF F0 03 F6 | 	mov	ptra, fp
02008     BF 00 A0 FD | 	call	#popregs_
0200c                 | _hng030rm_spin2_write_ret
0200c     2D 00 64 FD | 	ret
02010                 | 
02010                 | ' 
02010                 | ' ''-----------  Scroll the screen one line up
02010                 | ' 
02010                 | ' pub scrollup() | i
02010                 | _hng030rm_spin2_scrollup
02010     0A 5A 05 F6 | 	mov	COUNT_, #10
02014     B0 00 A0 FD | 	call	#pushregs_
02018     90 0E 06 F1 | 	add	objptr, #144
0201c     07 6B 02 FB | 	rdlong	local01, objptr
02020     90 0E 86 F1 | 	sub	objptr, #144
02024     02 6A 66 F0 | 	shl	local01, #2
02028     07 5F 02 FB | 	rdlong	arg02, objptr
0202c     35 5F 02 F1 | 	add	arg02, local01
02030     30 0E 06 F1 | 	add	objptr, #48
02034     07 61 02 FB | 	rdlong	arg03, objptr
02038     60 0E 06 F1 | 	add	objptr, #96
0203c     07 6D 02 FB | 	rdlong	local02, objptr
02040     90 0E 86 F1 | 	sub	objptr, #144
02044     36 61 82 F1 | 	sub	arg03, local02
02048                 | ' 
02048                 | ' longmove(buf_ptr,buf_ptr+4*cpl,buflen-cpl)
02048     07 5D 02 FB | 	rdlong	arg01, objptr
0204c     EC 35 B0 FD | 	call	#__system__longmove
02050                 | ' repeat i from buflen-cpl to buflen-1
02050     30 0E 06 F1 | 	add	objptr, #48
02054     07 6F 02 FB | 	rdlong	local03, objptr
02058     60 0E 06 F1 | 	add	objptr, #96
0205c     07 6D 02 FB | 	rdlong	local02, objptr
02060     36 6F 82 F1 | 	sub	local03, local02
02064     60 0E 86 F1 | 	sub	objptr, #96
02068     07 71 02 FB | 	rdlong	local04, objptr
0206c     01 70 86 F1 | 	sub	local04, #1
02070     07 73 02 FB | 	rdlong	local05, objptr
02074     60 0E 06 F1 | 	add	objptr, #96
02078     07 75 02 FB | 	rdlong	local06, objptr
0207c     90 0E 86 F1 | 	sub	objptr, #144
02080     3A 73 82 F1 | 	sub	local05, local06
02084     39 71 5A F2 | 	cmps	local04, local05 wcz
02088     01 76 06 16 |  if_a	mov	local07, #1
0208c     01 76 66 E6 |  if_be	neg	local07, #1
02090     3B 71 02 F1 | 	add	local04, local07
02094     98 DF 9F FE | 	loc	pa,	#(@LR__0059-@LR__0058)
02098     93 00 A0 FD | 	call	#FCACHE_LOAD_
0209c                 | LR__0058
0209c     37 79 02 F6 | 	mov	local08, local03
020a0     02 78 66 F0 | 	shl	local08, #2
020a4     07 7B 02 FB | 	rdlong	local09, objptr
020a8     3C 7B 02 F1 | 	add	local09, local08
020ac     3D 7D 02 FB | 	rdlong	local10, local09
020b0     80 FF 7F FF 
020b4     00 7C 06 F5 | 	and	local10, ##-65536
020b8     20 7C 46 F5 | 	or	local10, #32
020bc                 | '   long[buf_ptr+4*i]:=(long[buf_ptr+4*i] & $FFFF0000) | 32
020bc     3D 7D 62 FC | 	wrlong	local10, local09
020c0     3B 6F 02 F1 | 	add	local03, local07
020c4     38 6F 0A F2 | 	cmp	local03, local04 wz
020c8     D0 FF 9F 5D |  if_ne	jmp	#LR__0058
020cc                 | LR__0059
020cc     AF F0 03 F6 | 	mov	ptra, fp
020d0     BF 00 A0 FD | 	call	#popregs_
020d4                 | _hng030rm_spin2_scrollup_ret
020d4     2D 00 64 FD | 	ret
020d8                 | 
020d8                 | ' 
020d8                 | ' 
020d8                 | ' 
020d8                 | ' pub inttostr2(i,d):result |q,pos,k,j
020d8                 | _hng030rm_spin2_inttostr2
020d8                 | ' 
020d8                 | ' j:=i
020d8     2F 31 02 F6 | 	mov	_var01, arg02
020dc     01 30 86 F1 | 	sub	_var01, #1
020e0                 | ' pos:=d-1
020e0     18 33 02 F6 | 	mov	_var02, _var01
020e4                 | ' k:=0
020e4     44 0E 06 F1 | 	add	objptr, #68
020e8     07 5F 02 F1 | 	add	arg02, objptr
020ec                 | ' 
020ec                 | ' n_string[d]:=0
020ec     2F 01 48 FC | 	wrbyte	#0, arg02
020f0                 | ' repeat k from 0 to d-1
020f0     00 34 06 F6 | 	mov	_var03, #0
020f4     00 30 5E F2 | 	cmps	_var01, #0 wcz
020f8     44 0E 86 F1 | 	sub	objptr, #68
020fc     01 36 06 16 |  if_a	mov	_var04, #1
02100     01 36 66 E6 |  if_be	neg	_var04, #1
02104     1B 31 02 F1 | 	add	_var01, _var04
02108     14 DF 9F FE | 	loc	pa,	#(@LR__0061-@LR__0060)
0210c     93 00 A0 FD | 	call	#FCACHE_LOAD_
02110                 | LR__0060
02110     1A 39 02 F6 | 	mov	_var05, _var03
02114     44 0E 06 F1 | 	add	objptr, #68
02118     07 39 02 F1 | 	add	_var05, objptr
0211c                 | '   n_string[k]:=48
0211c     1C 61 48 FC | 	wrbyte	#48, _var05
02120     1B 35 02 F1 | 	add	_var03, _var04
02124     18 35 0A F2 | 	cmp	_var03, _var01 wz
02128     44 0E 86 F1 | 	sub	objptr, #68
0212c     E0 FF 9F 5D |  if_ne	jmp	#LR__0060
02130                 | LR__0061
02130                 | ' 
02130                 | ' if (j<>0)
02130     00 5C 0E F2 | 	cmp	arg01, #0 wz
02134     40 00 90 AD |  if_e	jmp	#LR__0064
02138                 | ' 
02138                 | '   repeat while (pos>-1)
02138                 | LR__0062
02138     FF FF 7F FF 
0213c     FF 33 5E F2 | 	cmps	_var02, ##-1 wcz
02140     34 00 90 ED |  if_be	jmp	#LR__0063
02144     2E 0B 03 F6 | 	mov	muldiva_, arg01
02148     0A 0C 07 F6 | 	mov	muldivb_, #10
0214c     CC 00 A0 FD | 	call	#unsdivide_
02150     85 3B 02 F6 | 	mov	_var06, muldiva_
02154                 | '     q:=j+//10
02154                 | '     q:=48+q
02154     30 3A 06 F1 | 	add	_var06, #48
02158     19 3D 02 F6 | 	mov	_var07, _var02
0215c     44 0E 06 F1 | 	add	objptr, #68
02160     07 3D 02 F1 | 	add	_var07, objptr
02164                 | '     n_string[pos]:=q
02164     1E 3B 42 FC | 	wrbyte	_var06, _var07
02168                 | '     j:=j+/10
02168     86 5D 02 F6 | 	mov	arg01, muldivb_
0216c                 | '     pos-=1
0216c     01 32 86 F1 | 	sub	_var02, #1
02170     44 0E 86 F1 | 	sub	objptr, #68
02174     C0 FF 9F FD | 	jmp	#LR__0062
02178                 | LR__0063
02178                 | LR__0064
02178     44 0E 06 F1 | 	add	objptr, #68
0217c     07 2B 02 F6 | 	mov	result1, objptr
02180     44 0E 86 F1 | 	sub	objptr, #68
02184                 | ' 
02184                 | ' 
02184                 | ' q:=@n_string
02184                 | ' return q
02184                 | _hng030rm_spin2_inttostr2_ret
02184     2D 00 64 FD | 	ret
02188                 | 
02188                 | ' 
02188                 | ' 
02188                 | ' 
02188                 | ' '*************************************************************************
02188                 | ' '                                                                        *
02188                 | ' '  Mode setting and driver start                                                          *
02188                 | ' '                                                                        *
02188                 | ' '*************************************************************************
02188                 | ' 
02188                 | ' ''---------  Set the graphics mode
02188                 | ' 
02188                 | ' 
02188                 | ' 
02188                 | ' pub setmode(mode) | i', 'xzoom, yzoom, azoom
02188                 | _hng030rm_spin2_setmode
02188     50 5A 05 F6 | 	mov	COUNT_, #80
0218c     B0 00 A0 FD | 	call	#pushregs_
02190     2E 6B 02 F6 | 	mov	local01, arg01
02194                 | ' 
02194                 | ' '' mode:tn_bb_cc_vv_hh
02194                 | ' '' hh - h.zoom, vv-v.zoom, cc-c.depth,
02194                 | ' '' bb - borders/total pixels, 00-wide/1140, 01 medium/1026, 10 narrow/912, 11 no border, 1024 px PAL, 880 px NTSC
02194                 | ' 
02194                 | ' if mode==(512+192+48)
02194     01 00 00 FF 
02198     F0 6A 0E F2 | 	cmp	local01, ##752 wz
0219c                 | '   return 'no RAM
0219c     1C 0A 90 AD |  if_e	jmp	#LR__0105
021a0                 | ' 
021a0                 | ' case_fast (mode>>6) & 7 ' timings are the same for graphic and text
021a0     35 6D 02 F6 | 	mov	local02, local01
021a4     06 6C 46 F0 | 	shr	local02, #6
021a8     07 6C 06 F5 | 	and	local02, #7
021ac     08 6C 26 F3 | 	fle	local02, #8
021b0     36 6F 02 F6 | 	mov	local03, local02
021b4     30 6E 62 FD | 	jmprel	local03
021b8                 | LR__0065
021b8     20 00 90 FD | 	jmp	#LR__0066
021bc     58 00 90 FD | 	jmp	#LR__0067
021c0     90 00 90 FD | 	jmp	#LR__0068
021c4     C8 00 90 FD | 	jmp	#LR__0069
021c8     00 01 90 FD | 	jmp	#LR__0070
021cc     38 01 90 FD | 	jmp	#LR__0071
021d0     70 01 90 FD | 	jmp	#LR__0072
021d4     A8 01 90 FD | 	jmp	#LR__0073
021d8     E4 01 90 FD | 	jmp	#LR__0074
021dc                 | LR__0066
021dc                 | ' 
021dc                 | '     0:  longmove(@timings,@timings000,16)   'PAL 50 Hz signaling 1140x624, active 800x480, 100x30 text, wide border, 2 colors per pixel, 00_00_00_00_00=0, 354_693_878 Hz
021dc     50 0E 06 F1 | 	add	objptr, #80
021e0     07 5D 02 F6 | 	mov	arg01, objptr
021e4     50 0E 86 F1 | 	sub	objptr, #80
021e8     0E 00 00 FF 
021ec     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7256
021f0     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
021f4     38 73 02 F6 | 	mov	local05, local04
021f8     10 74 06 F6 | 	mov	local06, #16
021fc     39 5F 02 F6 | 	mov	arg02, local05
02200     10 60 06 F6 | 	mov	arg03, #16
02204     0E 00 00 FF 
02208     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7256
0220c     2C 34 B0 FD | 	call	#__system__longmove
02210     15 77 02 F6 | 	mov	local07, result1
02214     A8 01 90 FD | 	jmp	#LR__0074
02218                 | LR__0067
02218                 | '     1:  longmove(@timings,@timings064,16)   'PAL 50 Hz signaling 1026x624, active 880x496, 110x31 text, medium border, 2 colors per pixel 00_01_00_00_00=64, 319_215_686 Hz
02218     50 0E 06 F1 | 	add	objptr, #80
0221c     07 5D 02 F6 | 	mov	arg01, objptr
02220     50 0E 86 F1 | 	sub	objptr, #80
02224     0E 00 00 FF 
02228     98 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7320
0222c     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02230     38 73 02 F6 | 	mov	local05, local04
02234     10 74 06 F6 | 	mov	local06, #16
02238     39 5F 02 F6 | 	mov	arg02, local05
0223c     10 60 06 F6 | 	mov	arg03, #16
02240     0E 00 00 FF 
02244     98 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7320
02248     F0 33 B0 FD | 	call	#__system__longmove
0224c     15 77 02 F6 | 	mov	local07, result1
02250     6C 01 90 FD | 	jmp	#LR__0074
02254                 | LR__0068
02254                 | '     2:  longmove(@timings,@timings128,16)   'PAL 50 Hz signaling 912x624, active 800x480, 100x30 text, medium border, 2 colors per pixel 00_10_00_00_00=64, 283750000z
02254     50 0E 06 F1 | 	add	objptr, #80
02258     07 5D 02 F6 | 	mov	arg01, objptr
0225c     50 0E 86 F1 | 	sub	objptr, #80
02260     0E 00 00 FF 
02264     D8 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7384
02268     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
0226c     38 73 02 F6 | 	mov	local05, local04
02270     10 74 06 F6 | 	mov	local06, #16
02274     39 5F 02 F6 | 	mov	arg02, local05
02278     10 60 06 F6 | 	mov	arg03, #16
0227c     0E 00 00 FF 
02280     D8 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7384
02284     B4 33 B0 FD | 	call	#__system__longmove
02288     15 77 02 F6 | 	mov	local07, result1
0228c     30 01 90 FD | 	jmp	#LR__0074
02290                 | LR__0069
02290                 | '     3:  longmove(@timings,@timings192,16)   'PAL 50 Hz signaling 1140x624, active 1024x576, 128x36 text, borderless, 2 colors per pixel 00_11_00_00_00=6192, 354_693_878 Hz
02290     50 0E 06 F1 | 	add	objptr, #80
02294     07 5D 02 F6 | 	mov	arg01, objptr
02298     50 0E 86 F1 | 	sub	objptr, #80
0229c     0E 00 00 FF 
022a0     18 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7448
022a4     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
022a8     38 73 02 F6 | 	mov	local05, local04
022ac     10 74 06 F6 | 	mov	local06, #16
022b0     39 5F 02 F6 | 	mov	arg02, local05
022b4     10 60 06 F6 | 	mov	arg03, #16
022b8     0E 00 00 FF 
022bc     18 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7448
022c0     78 33 B0 FD | 	call	#__system__longmove
022c4     15 77 02 F6 | 	mov	local07, result1
022c8     F4 00 90 FD | 	jmp	#LR__0074
022cc                 | LR__0070
022cc                 | '     4:  longmove(@timings,@timings256,16)   'NTSC 50 Hz signaling 1140x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_00_00_00_00=256, 357959184 Hz
022cc     50 0E 06 F1 | 	add	objptr, #80
022d0     07 5D 02 F6 | 	mov	arg01, objptr
022d4     50 0E 86 F1 | 	sub	objptr, #80
022d8     0E 00 00 FF 
022dc     58 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7512
022e0     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
022e4     38 73 02 F6 | 	mov	local05, local04
022e8     10 74 06 F6 | 	mov	local06, #16
022ec     39 5F 02 F6 | 	mov	arg02, local05
022f0     10 60 06 F6 | 	mov	arg03, #16
022f4     0E 00 00 FF 
022f8     58 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7512
022fc     3C 33 B0 FD | 	call	#__system__longmove
02300     15 77 02 F6 | 	mov	local07, result1
02304     B8 00 90 FD | 	jmp	#LR__0074
02308                 | LR__0071
02308                 | '     5:  longmove(@timings,@timings320,16)   'NTSC 50 Hz signaling 1026x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_01_00_00_00=320, 322162162 Hz
02308     50 0E 06 F1 | 	add	objptr, #80
0230c     07 5D 02 F6 | 	mov	arg01, objptr
02310     50 0E 86 F1 | 	sub	objptr, #80
02314     0E 00 00 FF 
02318     98 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7576
0231c     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02320     38 73 02 F6 | 	mov	local05, local04
02324     10 74 06 F6 | 	mov	local06, #16
02328     39 5F 02 F6 | 	mov	arg02, local05
0232c     10 60 06 F6 | 	mov	arg03, #16
02330     0E 00 00 FF 
02334     98 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7576
02338     00 33 B0 FD | 	call	#__system__longmove
0233c     15 77 02 F6 | 	mov	local07, result1
02340     7C 00 90 FD | 	jmp	#LR__0074
02344                 | LR__0072
02344                 | '     6:  longmove(@timings,@timings384,16)   'NTSC 50 Hz signaling 912x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_10_00_00_00=384, 286363636 Hz
02344     50 0E 06 F1 | 	add	objptr, #80
02348     07 5D 02 F6 | 	mov	arg01, objptr
0234c     50 0E 86 F1 | 	sub	objptr, #80
02350     0E 00 00 FF 
02354     D8 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7640
02358     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
0235c     38 73 02 F6 | 	mov	local05, local04
02360     10 74 06 F6 | 	mov	local06, #16
02364     39 5F 02 F6 | 	mov	arg02, local05
02368     10 60 06 F6 | 	mov	arg03, #16
0236c     0E 00 00 FF 
02370     D8 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7640
02374     C4 32 B0 FD | 	call	#__system__longmove
02378     15 77 02 F6 | 	mov	local07, result1
0237c     40 00 90 FD | 	jmp	#LR__0074
02380                 | LR__0073
02380                 | '     7:  longmove(@timings,@timings448,16)   'NTSC 50 Hz signaling 1026x524, active 880x496, 110x31 text, borderless, 2 colors per pixel, 01_11_00_00_00=496, 322162162 Hz
02380     50 0E 06 F1 | 	add	objptr, #80
02384     07 79 02 F6 | 	mov	local08, objptr
02388     3C 7B 02 F6 | 	mov	local09, local08
0238c     0F 00 00 FF 
02390     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7704
02394     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02398     38 73 02 F6 | 	mov	local05, local04
0239c     10 74 06 F6 | 	mov	local06, #16
023a0     3D 5D 02 F6 | 	mov	arg01, local09
023a4     39 5F 02 F6 | 	mov	arg02, local05
023a8     10 60 06 F6 | 	mov	arg03, #16
023ac     50 0E 86 F1 | 	sub	objptr, #80
023b0     0F 00 00 FF 
023b4     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7704
023b8     80 32 B0 FD | 	call	#__system__longmove
023bc     15 77 02 F6 | 	mov	local07, result1
023c0                 | LR__0074
023c0                 | ' 
023c0                 | ' ' 4-bit graphics: do nothing with timings :)
023c0                 | ' if mode<512
023c0     01 00 00 FF 
023c4     00 6A 5E F2 | 	cmps	local01, ##512 wcz
023c8     20 00 90 3D |  if_ae	jmp	#LR__0075
023cc     0C 00 00 FF 
023d0     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
023d4     0D 7D 02 F6 | 	mov	local10, ptr__hng030rm_spin2_dat__
023d8                 | '   palette_ptr:=@ataripalette
023d8     18 0E 06 F1 | 	add	objptr, #24
023dc     07 7D 62 FC | 	wrlong	local10, objptr
023e0     18 0E 86 F1 | 	sub	objptr, #24
023e4     0C 00 00 FF 
023e8     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
023ec                 | LR__0075
023ec                 | ' 
023ec                 | ' if (mode & (%10_00_11_0000))==(%10_00_11_0000) ' 8bit graphics, 4 pixels per long instead of 8, cpp x2
023ec     35 6D 02 F6 | 	mov	local02, local01
023f0     01 00 00 FF 
023f4     30 6C 06 F5 | 	and	local02, ##560
023f8     01 00 00 FF 
023fc     30 6C 0E F2 | 	cmp	local02, ##560 wz
02400     48 00 90 5D |  if_ne	jmp	#LR__0076
02404                 | '   timings[5]:=4
02404     64 0E 06 F1 | 	add	objptr, #100
02408     07 09 68 FC | 	wrlong	#4, objptr
0240c     18 0E 06 F1 | 	add	objptr, #24
02410     07 7F 02 FB | 	rdlong	local11, objptr
02414     01 7E 66 F0 | 	shl	local11, #1
02418                 | '   timings[11]:=timings[11]<<1
02418     07 7F 62 FC | 	wrlong	local11, objptr
0241c                 | '   putpixel:=p8
0241c     6C 0E 06 F1 | 	add	objptr, #108
02420     07 6D 02 FB | 	rdlong	local02, objptr
02424     10 0E 86 F1 | 	sub	objptr, #16
02428     07 6D 62 FC | 	wrlong	local02, objptr
0242c     0C 00 00 FF 
02430     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
02434     0D 81 02 F6 | 	mov	local12, ptr__hng030rm_spin2_dat__
02438                 | '   palette_ptr:=@ataripalette
02438     C0 0E 86 F1 | 	sub	objptr, #192
0243c     07 81 62 FC | 	wrlong	local12, objptr
02440     18 0E 86 F1 | 	sub	objptr, #24
02444     0C 00 00 FF 
02448     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
0244c                 | LR__0076
0244c                 | ' 
0244c                 | ' if (mode & (%10_00_11_0000))==(%10_00_01_0000) ' 2bit graphics, 16 pixels per long instead of 8, cpp /2
0244c     35 6D 02 F6 | 	mov	local02, local01
02450     01 00 00 FF 
02454     30 6C 06 F5 | 	and	local02, ##560
02458     01 00 00 FF 
0245c     10 6C 0E F2 | 	cmp	local02, ##528 wz
02460     48 00 90 5D |  if_ne	jmp	#LR__0077
02464                 | '   timings[5]:=16
02464     64 0E 06 F1 | 	add	objptr, #100
02468     07 21 68 FC | 	wrlong	#16, objptr
0246c     18 0E 06 F1 | 	add	objptr, #24
02470     07 83 02 FB | 	rdlong	local13, objptr
02474     01 82 46 F0 | 	shr	local13, #1
02478                 | '   timings[11]:=timings[11]>>1
02478     07 83 62 FC | 	wrlong	local13, objptr
0247c                 | '   putpixel:=p2
0247c     64 0E 06 F1 | 	add	objptr, #100
02480     07 6D 02 FB | 	rdlong	local02, objptr
02484     08 0E 86 F1 | 	sub	objptr, #8
02488     07 6D 62 FC | 	wrlong	local02, objptr
0248c     0C 00 00 FF 
02490     08 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6152
02494     0D 85 02 F6 | 	mov	local14, ptr__hng030rm_spin2_dat__
02498                 | '   palette_ptr:=@fourcolors
02498     C0 0E 86 F1 | 	sub	objptr, #192
0249c     07 85 62 FC | 	wrlong	local14, objptr
024a0     18 0E 86 F1 | 	sub	objptr, #24
024a4     0C 00 00 FF 
024a8     08 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6152
024ac                 | LR__0077
024ac                 | ' 
024ac                 | ' if (mode & (%10_00_11_0000))==(%10_00_00_0000) ' 1bit graphics, 32 pixels per long instead of 8, cpp /4
024ac     35 6D 02 F6 | 	mov	local02, local01
024b0     01 00 00 FF 
024b4     30 6C 06 F5 | 	and	local02, ##560
024b8     01 00 00 FF 
024bc     00 6C 0E F2 | 	cmp	local02, ##512 wz
024c0     48 00 90 5D |  if_ne	jmp	#LR__0078
024c4                 | '   timings[5]:=32
024c4     64 0E 06 F1 | 	add	objptr, #100
024c8     07 41 68 FC | 	wrlong	#32, objptr
024cc     18 0E 06 F1 | 	add	objptr, #24
024d0     07 87 02 FB | 	rdlong	local15, objptr
024d4     02 86 46 F0 | 	shr	local15, #2
024d8                 | '   timings[11]:=timings[11]>>2
024d8     07 87 62 FC | 	wrlong	local15, objptr
024dc                 | '   putpixel:=p1
024dc     60 0E 06 F1 | 	add	objptr, #96
024e0     07 6D 02 FB | 	rdlong	local02, objptr
024e4     04 0E 86 F1 | 	sub	objptr, #4
024e8     07 6D 62 FC | 	wrlong	local02, objptr
024ec     0C 00 00 FF 
024f0     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6144
024f4     0D 89 02 F6 | 	mov	local16, ptr__hng030rm_spin2_dat__
024f8                 | '   palette_ptr:=@twocolors
024f8     C0 0E 86 F1 | 	sub	objptr, #192
024fc     07 89 62 FC | 	wrlong	local16, objptr
02500     18 0E 86 F1 | 	sub	objptr, #24
02504     0C 00 00 FF 
02508     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6144
0250c                 | LR__0078
0250c                 | ' 
0250c                 | ' if (mode & (%10_00_11_0000))==(%10_00_10_0000) ' 4bit graphics,
0250c     35 6D 02 F6 | 	mov	local02, local01
02510     01 00 00 FF 
02514     30 6C 06 F5 | 	and	local02, ##560
02518     01 00 00 FF 
0251c     20 6C 0E F2 | 	cmp	local02, ##544 wz
02520     30 00 90 5D |  if_ne	jmp	#LR__0079
02524                 | '   putpixel:=p4
02524     E4 0E 06 F1 | 	add	objptr, #228
02528     07 6D 02 FB | 	rdlong	local02, objptr
0252c     0C 0E 86 F1 | 	sub	objptr, #12
02530     07 6D 62 FC | 	wrlong	local02, objptr
02534     0C 00 00 FF 
02538     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6168
0253c     0D 8B 02 F6 | 	mov	local17, ptr__hng030rm_spin2_dat__
02540                 | '   palette_ptr:=@vga16
02540     C0 0E 86 F1 | 	sub	objptr, #192
02544     07 8B 62 FC | 	wrlong	local17, objptr
02548     18 0E 86 F1 | 	sub	objptr, #24
0254c     0C 00 00 FF 
02550     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6168
02554                 | LR__0079
02554                 | ' 
02554                 | ' repeat i from 0 to 4
02554     00 8C 06 F6 | 	mov	local18, #0
02558     E8 DA 9F FE | 	loc	pa,	#(@LR__0081-@LR__0080)
0255c     93 00 A0 FD | 	call	#FCACHE_LOAD_
02560                 | LR__0080
02560     46 8F 02 F6 | 	mov	local19, local18
02564     02 8E 66 F0 | 	shl	local19, #2
02568     50 0E 06 F1 | 	add	objptr, #80
0256c     07 8F 02 F1 | 	add	local19, objptr
02570     2C 0E 86 F1 | 	sub	objptr, #44
02574     07 91 02 FB | 	rdlong	local20, objptr
02578     24 0E 86 F1 | 	sub	objptr, #36
0257c     11 90 66 F0 | 	shl	local20, #17
02580     47 93 02 FB | 	rdlong	local21, local19
02584     48 93 02 F1 | 	add	local21, local20
02588     49 95 02 F6 | 	mov	local22, local21
0258c     80 40 38 FF 
02590     00 94 06 F1 | 	add	local22, ##1887502336
02594                 | '   timings[i]:=timings[i]+hdmibase<<17+ timingsxxt
02594     47 95 62 FC | 	wrlong	local22, local19
02598     01 8C 06 F1 | 	add	local18, #1
0259c     05 8C 5E F2 | 	cmps	local18, #5 wcz
025a0     BC FF 9F CD |  if_b	jmp	#LR__0080
025a4                 | LR__0081
025a4     24 0E 06 F1 | 	add	objptr, #36
025a8     07 97 02 FB | 	rdlong	local23, objptr
025ac     11 96 66 F0 | 	shl	local23, #17
025b0     40 0E 06 F1 | 	add	objptr, #64
025b4     07 99 02 FB | 	rdlong	local24, objptr
025b8     4B 99 02 F1 | 	add	local24, local23
025bc                 | ' timings[5]:=timings[5]+hdmibase<<17
025bc     07 99 62 FC | 	wrlong	local24, objptr
025c0                 | ' clkfreq:=timings[13]
025c0     20 0E 06 F1 | 	add	objptr, #32
025c4     07 6D 02 FB | 	rdlong	local02, objptr
025c8     14 6C 66 FC | 	wrlong	local02, #20
025cc                 | ' hubset(timings[14])
025cc     04 0E 06 F1 | 	add	objptr, #4
025d0     07 5D 02 FB | 	rdlong	arg01, objptr
025d4     88 0E 86 F1 | 	sub	objptr, #136
025d8     00 5C 62 FD | 	hubset	arg01
025dc                 | ' waitms(1)
025dc     01 5C 06 F6 | 	mov	arg01, #1
025e0     4C 32 B0 FD | 	call	#__system___waitms
025e4     35 9B 02 F6 | 	mov	local25, local01
025e8     03 9A 06 F5 | 	and	local25, #3
025ec     4D 9D C2 F9 | 	decod	local26, local25
025f0                 | ' 
025f0                 | ' 
025f0                 | ' xzoom:=1<<(mode & 3)
025f0     CC 0E 06 F1 | 	add	objptr, #204
025f4     07 9D 62 FC | 	wrlong	local26, objptr
025f8                 | ' 
025f8                 | ' if (xzoom==8) && (((mode>>4)&3)<>3)
025f8     4E 79 02 F6 | 	mov	local08, local26
025fc     CC 0E 86 F1 | 	sub	objptr, #204
02600     08 78 0E F2 | 	cmp	local08, #8 wz
02604     24 00 90 5D |  if_ne	jmp	#LR__0082
02608     35 7B 02 F6 | 	mov	local09, local01
0260c     04 7A 46 F0 | 	shr	local09, #4
02610     03 7A 06 F5 | 	and	local09, #3
02614     03 7A 0E F2 | 	cmp	local09, #3 wz
02618     10 00 90 AD |  if_e	jmp	#LR__0082
0261c                 | '   xzoom:=4
0261c     04 6C 06 F6 | 	mov	local02, #4
02620     CC 0E 06 F1 | 	add	objptr, #204
02624     07 09 68 FC | 	wrlong	#4, objptr
02628     CC 0E 86 F1 | 	sub	objptr, #204
0262c                 | LR__0082
0262c     35 9F 02 F6 | 	mov	local27, local01
02630     02 9E 46 F0 | 	shr	local27, #2
02634     03 9E 06 F5 | 	and	local27, #3
02638     4F A1 C2 F9 | 	decod	local28, local27
0263c                 | ' 
0263c                 | ' yzoom:=1<<((mode>>2) & 3)
0263c     D0 0E 06 F1 | 	add	objptr, #208
02640     07 A1 62 FC | 	wrlong	local28, objptr
02644     04 0E 86 F1 | 	sub	objptr, #4
02648     07 79 02 FB | 	rdlong	local08, objptr
0264c     04 0E 06 F1 | 	add	objptr, #4
02650     07 71 02 FB | 	rdlong	local04, objptr
02654     38 79 02 FD | 	qmul	local08, local04
02658     18 A2 62 FD | 	getqx	local29
0265c                 | ' azoom:=xzoom*yzoom
0265c     04 0E 06 F1 | 	add	objptr, #4
02660     07 A3 62 FC | 	wrlong	local29, objptr
02664                 | ' 
02664                 | ' cpl:=timings[11]
02664     58 0E 86 F1 | 	sub	objptr, #88
02668     07 6D 02 FB | 	rdlong	local02, objptr
0266c     14 0E 06 F1 | 	add	objptr, #20
02670     07 6D 62 FC | 	wrlong	local02, objptr
02674     90 0E 86 F1 | 	sub	objptr, #144
02678                 | ' if (mode<512)
02678     01 00 00 FF 
0267c     00 6A 5E F2 | 	cmps	local01, ##512 wcz
02680     60 00 90 3D |  if_ae	jmp	#LR__0083
02684     80 0E 06 F1 | 	add	objptr, #128
02688     07 0B 03 FB | 	rdlong	muldiva_, objptr
0268c     04 0A 47 F0 | 	shr	muldiva_, #4
02690     50 0E 06 F1 | 	add	objptr, #80
02694     07 0D 03 FB | 	rdlong	muldivb_, objptr
02698     D0 0E 86 F1 | 	sub	objptr, #208
0269c     CC 00 A0 FD | 	call	#unsdivide_
026a0                 | '   lines:=(timings[12]>>4)+/yzoom
026a0     94 0E 06 F1 | 	add	objptr, #148
026a4     07 0D 63 FC | 	wrlong	muldivb_, objptr
026a8                 | '   if ((timings[12]>>4)+//yzoom) <>0
026a8     14 0E 86 F1 | 	sub	objptr, #20
026ac     07 0B 03 FB | 	rdlong	muldiva_, objptr
026b0     04 0A 47 F0 | 	shr	muldiva_, #4
026b4     50 0E 06 F1 | 	add	objptr, #80
026b8     07 0D 03 FB | 	rdlong	muldivb_, objptr
026bc     D0 0E 86 F1 | 	sub	objptr, #208
026c0     CC 00 A0 FD | 	call	#unsdivide_
026c4     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
026c8     AC 00 90 AD |  if_e	jmp	#LR__0086
026cc                 | '     lines +=1
026cc     94 0E 06 F1 | 	add	objptr, #148
026d0     07 6D 02 FB | 	rdlong	local02, objptr
026d4     01 6C 06 F1 | 	add	local02, #1
026d8     07 6D 62 FC | 	wrlong	local02, objptr
026dc     94 0E 86 F1 | 	sub	objptr, #148
026e0                 | ' 
026e0                 | ' else
026e0     94 00 90 FD | 	jmp	#LR__0086
026e4                 | LR__0083
026e4     80 0E 06 F1 | 	add	objptr, #128
026e8     07 0B 03 FB | 	rdlong	muldiva_, objptr
026ec     50 0E 06 F1 | 	add	objptr, #80
026f0     07 0D 03 FB | 	rdlong	muldivb_, objptr
026f4     D0 0E 86 F1 | 	sub	objptr, #208
026f8     D0 00 A0 FD | 	call	#divide_
026fc                 | '   lines:=timings[12]/yzoom
026fc     94 0E 06 F1 | 	add	objptr, #148
02700     07 0D 63 FC | 	wrlong	muldivb_, objptr
02704                 | '   if cpl//xzoom==0
02704     04 0E 86 F1 | 	sub	objptr, #4
02708     07 0B 03 FB | 	rdlong	muldiva_, objptr
0270c     3C 0E 06 F1 | 	add	objptr, #60
02710     07 0D 03 FB | 	rdlong	muldivb_, objptr
02714     CC 0E 86 F1 | 	sub	objptr, #204
02718     D0 00 A0 FD | 	call	#divide_
0271c     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
02720     28 00 90 5D |  if_ne	jmp	#LR__0084
02724                 | '     cpl:=cpl/xzoom
02724     90 0E 06 F1 | 	add	objptr, #144
02728     07 0B 03 FB | 	rdlong	muldiva_, objptr
0272c     3C 0E 06 F1 | 	add	objptr, #60
02730     07 0D 03 FB | 	rdlong	muldivb_, objptr
02734     CC 0E 86 F1 | 	sub	objptr, #204
02738     D0 00 A0 FD | 	call	#divide_
0273c     90 0E 06 F1 | 	add	objptr, #144
02740     07 0D 63 FC | 	wrlong	muldivb_, objptr
02744     90 0E 86 F1 | 	sub	objptr, #144
02748                 | '   else
02748     2C 00 90 FD | 	jmp	#LR__0085
0274c                 | LR__0084
0274c     90 0E 06 F1 | 	add	objptr, #144
02750     07 0B 03 FB | 	rdlong	muldiva_, objptr
02754     3C 0E 06 F1 | 	add	objptr, #60
02758     07 0D 03 FB | 	rdlong	muldivb_, objptr
0275c     CC 0E 86 F1 | 	sub	objptr, #204
02760     D0 00 A0 FD | 	call	#divide_
02764     86 A5 02 F6 | 	mov	local30, muldivb_
02768     01 A4 06 F1 | 	add	local30, #1
0276c                 | '     cpl:=cpl/xzoom+1
0276c     90 0E 06 F1 | 	add	objptr, #144
02770     07 A5 62 FC | 	wrlong	local30, objptr
02774     90 0E 86 F1 | 	sub	objptr, #144
02778                 | LR__0085
02778                 | LR__0086
02778     90 0E 06 F1 | 	add	objptr, #144
0277c     07 79 02 FB | 	rdlong	local08, objptr
02780     04 0E 06 F1 | 	add	objptr, #4
02784     07 71 02 FB | 	rdlong	local04, objptr
02788     38 79 02 FD | 	qmul	local08, local04
0278c     18 A6 62 FD | 	getqx	local31
02790                 | ' 
02790                 | ' buflen:=(cpl*lines)
02790     64 0E 86 F1 | 	sub	objptr, #100
02794     07 A7 62 FC | 	wrlong	local31, objptr
02798     30 0E 86 F1 | 	sub	objptr, #48
0279c     02 A6 66 F0 | 	shl	local31, #2
027a0     13 A8 C6 F9 | 	decod	local32, #19
027a4     53 A9 82 F1 | 	sub	local32, local31
027a8                 | ' buf_ptr:=$80000-4*buflen
027a8     07 A9 62 FC | 	wrlong	local32, objptr
027ac     50 0E 06 F1 | 	add	objptr, #80
027b0     07 AB 02 F6 | 	mov	local33, objptr
027b4                 | ' mode_ptr:=@timings
027b4     3C 0E 86 F1 | 	sub	objptr, #60
027b8     07 AB 62 FC | 	wrlong	local33, objptr
027bc                 | ' graphmode:=mode
027bc     B0 0E 06 F1 | 	add	objptr, #176
027c0     07 6B 62 FC | 	wrlong	local01, objptr
027c4     C4 0E 86 F1 | 	sub	objptr, #196
027c8                 | ' makedl(mode)
027c8     35 5D 02 F6 | 	mov	arg01, local01
027cc                 | ' 
027cc                 | ' ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
027cc                 | '   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
027cc                 | '   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
027cc                 | ' 
027cc                 | ' '   0 - display a up/down border line
027cc                 | ' 
027cc                 | ' '  ' aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - text line
027cc                 | ' '    aaaa_aaaa_aaaa_aaaa_aa00 - buffer start, has to be aligned, 1 long for char, ff_bb_rr_cc, foreground, background,reserved, charcode
027cc                 | ' '    zz - zoom, 00-x1, 01-x2, 10-x4, 11-blank line
027cc                 | ' '    nnnn - font line to display, 0..15
027cc                 | ' '    llllll - character line, determines the cursor Y position
027cc                 | ' 
027cc                 | ' 
027cc                 | ' if (mode &256==0)
027cc     00 5D CE F7 | 	test	arg01, #256 wz
027d0     1C 00 90 5D |  if_ne	jmp	#LR__0087
027d4     07 AD 02 FB | 	rdlong	local34, objptr
027d8     04 00 00 FF 
027dc     00 AD 86 F1 | 	sub	local34, ##2304
027e0                 | '   dl_ptr:=buf_ptr-4*576
027e0     1C 0E 06 F1 | 	add	objptr, #28
027e4     07 AD 62 FC | 	wrlong	local34, objptr
027e8     1C 0E 86 F1 | 	sub	objptr, #28
027ec                 | ' else
027ec     18 00 90 FD | 	jmp	#LR__0088
027f0                 | LR__0087
027f0     07 AF 02 FB | 	rdlong	local35, objptr
027f4     03 00 00 FF 
027f8     C0 AF 86 F1 | 	sub	local35, ##1984
027fc                 | '   dl_ptr:=buf_ptr-4*496
027fc     1C 0E 06 F1 | 	add	objptr, #28
02800     07 AF 62 FC | 	wrlong	local35, objptr
02804     1C 0E 86 F1 | 	sub	objptr, #28
02808                 | LR__0088
02808     2E B1 02 F6 | 	mov	local36, arg01
0280c     02 B0 46 F0 | 	shr	local36, #2
02810     03 B0 06 F5 | 	and	local36, #3
02814                 | '  ' dl_ptr:=buf_ptr-4*540
02814                 | ' 
02814                 | ' vzoom:=((mode>>2) & 3)
02814                 | ' 
02814                 | ' 
02814                 | ' if mode<512 '' text modes
02814     01 00 00 FF 
02818     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
0281c     E4 01 90 3D |  if_ae	jmp	#LR__0096
02820                 | ' 
02820                 | '   if timings[6]>0 'borders
02820     68 0E 06 F1 | 	add	objptr, #104
02824     07 B3 02 FB | 	rdlong	local37, objptr
02828     68 0E 86 F1 | 	sub	objptr, #104
0282c     00 B2 5E F2 | 	cmps	local37, #0 wcz
02830     D4 00 90 ED |  if_be	jmp	#LR__0093
02834                 | '     repeat i from 0 to timings[6]-1 '0 to -1
02834     00 B4 06 F6 | 	mov	local38, #0
02838     68 0E 06 F1 | 	add	objptr, #104
0283c     07 B7 02 FB | 	rdlong	local39, objptr
02840     68 0E 86 F1 | 	sub	objptr, #104
02844     01 B6 86 F1 | 	sub	local39, #1
02848     00 B6 5E F2 | 	cmps	local39, #0 wcz
0284c     01 B8 06 16 |  if_a	mov	local40, #1
02850     01 B8 66 E6 |  if_be	neg	local40, #1
02854     5C BB 02 F6 | 	mov	local41, local40
02858     5C B7 02 F1 | 	add	local39, local40
0285c     C8 D7 9F FE | 	loc	pa,	#(@LR__0090-@LR__0089)
02860     93 00 A0 FD | 	call	#FCACHE_LOAD_
02864                 | LR__0089
02864     5A BD 02 F6 | 	mov	local42, local38
02868     02 BC 66 F0 | 	shl	local42, #2
0286c     1C 0E 06 F1 | 	add	objptr, #28
02870     07 BF 02 FB | 	rdlong	local43, objptr
02874     1C 0E 86 F1 | 	sub	objptr, #28
02878     5E BF 02 F1 | 	add	local43, local42
0287c                 | '       long[dl_ptr+4*i]:=$0
0287c     5F 01 68 FC | 	wrlong	#0, local43
02880     5D B5 02 F1 | 	add	local38, local41
02884     5B B5 0A F2 | 	cmp	local38, local39 wz
02888     D8 FF 9F 5D |  if_ne	jmp	#LR__0089
0288c                 | LR__0090
0288c                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
0288c     68 0E 06 F1 | 	add	objptr, #104
02890     07 B5 02 FB | 	rdlong	local38, objptr
02894     18 0E 06 F1 | 	add	objptr, #24
02898     07 B9 02 FB | 	rdlong	local40, objptr
0289c     5C B5 02 F1 | 	add	local38, local40
028a0     0C 0E 06 F1 | 	add	objptr, #12
028a4     07 C1 02 FB | 	rdlong	local44, objptr
028a8     01 C0 86 F1 | 	sub	local44, #1
028ac     24 0E 86 F1 | 	sub	objptr, #36
028b0     07 C3 02 FB | 	rdlong	local45, objptr
028b4     18 0E 06 F1 | 	add	objptr, #24
028b8     07 C5 02 FB | 	rdlong	local46, objptr
028bc     80 0E 86 F1 | 	sub	objptr, #128
028c0     62 C3 02 F1 | 	add	local45, local46
028c4     61 C1 5A F2 | 	cmps	local44, local45 wcz
028c8     01 C6 06 16 |  if_a	mov	local47, #1
028cc     01 C6 66 E6 |  if_be	neg	local47, #1
028d0     63 C9 02 F6 | 	mov	local48, local47
028d4     63 C1 02 F1 | 	add	local44, local47
028d8     4C D7 9F FE | 	loc	pa,	#(@LR__0092-@LR__0091)
028dc     93 00 A0 FD | 	call	#FCACHE_LOAD_
028e0                 | LR__0091
028e0     5A CB 02 F6 | 	mov	local49, local38
028e4     02 CA 66 F0 | 	shl	local49, #2
028e8     1C 0E 06 F1 | 	add	objptr, #28
028ec     07 CD 02 FB | 	rdlong	local50, objptr
028f0     1C 0E 86 F1 | 	sub	objptr, #28
028f4     65 CD 02 F1 | 	add	local50, local49
028f8                 | '       long[dl_ptr+4*i]:=$0
028f8     66 01 68 FC | 	wrlong	#0, local50
028fc     64 B5 02 F1 | 	add	local38, local48
02900     60 B5 0A F2 | 	cmp	local38, local44 wz
02904     D8 FF 9F 5D |  if_ne	jmp	#LR__0091
02908                 | LR__0092
02908                 | LR__0093
02908     10 CE 06 F6 | 	mov	local51, #16
0290c     58 CF 62 F0 | 	shl	local51, local36
02910                 | '   lpc:=16<<vzoom
02910                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
02910     68 0E 06 F1 | 	add	objptr, #104
02914     07 B5 02 FB | 	rdlong	local38, objptr
02918     5A D1 02 F6 | 	mov	local52, local38
0291c     18 0E 06 F1 | 	add	objptr, #24
02920     07 D3 02 FB | 	rdlong	local53, objptr
02924     69 D1 02 F1 | 	add	local52, local53
02928     01 D0 86 F1 | 	sub	local52, #1
0292c     18 0E 86 F1 | 	sub	objptr, #24
02930     07 C7 02 FB | 	rdlong	local47, objptr
02934     68 0E 86 F1 | 	sub	objptr, #104
02938     63 D1 5A F2 | 	cmps	local52, local47 wcz
0293c     01 D4 06 16 |  if_a	mov	local54, #1
02940     01 D4 66 E6 |  if_be	neg	local54, #1
02944     6A D7 02 F6 | 	mov	local55, local54
02948     6A D1 02 F1 | 	add	local52, local54
0294c     60 D7 9F FE | 	loc	pa,	#(@LR__0095-@LR__0094)
02950     93 00 A0 FD | 	call	#FCACHE_LOAD_
02954                 | LR__0094
02954     5A 0B 03 F6 | 	mov	muldiva_, local38
02958     68 0E 06 F1 | 	add	objptr, #104
0295c     07 D9 02 FB | 	rdlong	local56, objptr
02960     68 0E 86 F1 | 	sub	objptr, #104
02964     6C 0B 83 F1 | 	sub	muldiva_, local56
02968     67 0D 03 F6 | 	mov	muldivb_, local51
0296c     CC 00 A0 FD | 	call	#unsdivide_
02970     58 0B 43 F0 | 	shr	muldiva_, local36
02974                 | '     fontline2:=((i-timings[6])+//lpc)>>vzoom
02974     85 DB 02 F6 | 	mov	local57, muldiva_
02978     5A 0B 03 F6 | 	mov	muldiva_, local38
0297c     68 0E 06 F1 | 	add	objptr, #104
02980     07 D9 02 FB | 	rdlong	local56, objptr
02984     68 0E 86 F1 | 	sub	objptr, #104
02988     6C 0B 83 F1 | 	sub	muldiva_, local56
0298c     67 0D 03 F6 | 	mov	muldivb_, local51
02990     CC 00 A0 FD | 	call	#unsdivide_
02994     86 DD 02 F6 | 	mov	local58, muldivb_
02998                 | '     charline:=(i-timings[6])+/lpc
02998     90 0E 06 F1 | 	add	objptr, #144
0299c     07 D9 02 FB | 	rdlong	local56, objptr
029a0     90 0E 86 F1 | 	sub	objptr, #144
029a4     6E D9 02 FD | 	qmul	local56, local58
029a8     18 DE 62 FD | 	getqx	local59
029ac     02 DE 66 F0 | 	shl	local59, #2
029b0     07 E1 02 FB | 	rdlong	local60, objptr
029b4     6F E1 02 F1 | 	add	local60, local59
029b8     2E E3 02 F6 | 	mov	local61, arg01
029bc     03 E2 06 F5 | 	and	local61, #3
029c0     71 E1 02 F1 | 	add	local60, local61
029c4                 | '     bufstart:=buf_ptr+4*((cpl)*charline)+(mode&3)
029c4     0C E0 66 F0 | 	shl	local60, #12
029c8     08 DA 66 F0 | 	shl	local57, #8
029cc     6D E1 02 F1 | 	add	local60, local57
029d0     02 DC 66 F0 | 	shl	local58, #2
029d4     6E E1 02 F1 | 	add	local60, local58
029d8     01 E0 06 F1 | 	add	local60, #1
029dc     5A E5 02 F6 | 	mov	local62, local38
029e0     02 E4 66 F0 | 	shl	local62, #2
029e4     1C 0E 06 F1 | 	add	objptr, #28
029e8     07 E7 02 FB | 	rdlong	local63, objptr
029ec     1C 0E 86 F1 | 	sub	objptr, #28
029f0     72 E7 02 F1 | 	add	local63, local62
029f4                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+(fontline2<<8)+(charline<<2)+1
029f4     73 E1 62 FC | 	wrlong	local60, local63
029f8     6B B5 02 F1 | 	add	local38, local55
029fc     68 B5 0A F2 | 	cmp	local38, local52 wz
02a00     50 FF 9F 5D |  if_ne	jmp	#LR__0094
02a04                 | LR__0095
02a04                 | LR__0096
02a04                 | ' 
02a04                 | ' 
02a04                 | ' 
02a04                 | ' if (mode>=512)' and (mode & (%10_00_00_0000))==(%10_00_00_0000) ' graphics -> all modes TODO :mode 560+192=752 = 10_11_11_0000 impossib,e because out of memory
02a04     01 00 00 FF 
02a08     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
02a0c     AC 01 90 CD |  if_b	jmp	#LR__0104
02a10                 | ' 
02a10                 | '   if timings[6]>0 'borders
02a10     68 0E 06 F1 | 	add	objptr, #104
02a14     07 B3 02 FB | 	rdlong	local37, objptr
02a18     68 0E 86 F1 | 	sub	objptr, #104
02a1c     00 B2 5E F2 | 	cmps	local37, #0 wcz
02a20     D4 00 90 ED |  if_be	jmp	#LR__0101
02a24                 | '     repeat i from 0 to timings[6]-1 '0 to -1
02a24     00 B4 06 F6 | 	mov	local38, #0
02a28     68 0E 06 F1 | 	add	objptr, #104
02a2c     07 E9 02 FB | 	rdlong	local64, objptr
02a30     68 0E 86 F1 | 	sub	objptr, #104
02a34     01 E8 86 F1 | 	sub	local64, #1
02a38     00 E8 5E F2 | 	cmps	local64, #0 wcz
02a3c     01 B8 06 16 |  if_a	mov	local40, #1
02a40     01 B8 66 E6 |  if_be	neg	local40, #1
02a44     5C EB 02 F6 | 	mov	local65, local40
02a48     5C E9 02 F1 | 	add	local64, local40
02a4c     D8 D5 9F FE | 	loc	pa,	#(@LR__0098-@LR__0097)
02a50     93 00 A0 FD | 	call	#FCACHE_LOAD_
02a54                 | LR__0097
02a54     5A ED 02 F6 | 	mov	local66, local38
02a58     02 EC 66 F0 | 	shl	local66, #2
02a5c     1C 0E 06 F1 | 	add	objptr, #28
02a60     07 EF 02 FB | 	rdlong	local67, objptr
02a64     1C 0E 86 F1 | 	sub	objptr, #28
02a68     76 EF 02 F1 | 	add	local67, local66
02a6c                 | '       long[dl_ptr+4*i]:=$0
02a6c     77 01 68 FC | 	wrlong	#0, local67
02a70     75 B5 02 F1 | 	add	local38, local65
02a74     74 B5 0A F2 | 	cmp	local38, local64 wz
02a78     D8 FF 9F 5D |  if_ne	jmp	#LR__0097
02a7c                 | LR__0098
02a7c                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
02a7c     68 0E 06 F1 | 	add	objptr, #104
02a80     07 B5 02 FB | 	rdlong	local38, objptr
02a84     18 0E 06 F1 | 	add	objptr, #24
02a88     07 B9 02 FB | 	rdlong	local40, objptr
02a8c     5C B5 02 F1 | 	add	local38, local40
02a90     0C 0E 06 F1 | 	add	objptr, #12
02a94     07 F1 02 FB | 	rdlong	local68, objptr
02a98     01 F0 86 F1 | 	sub	local68, #1
02a9c     24 0E 86 F1 | 	sub	objptr, #36
02aa0     07 C3 02 FB | 	rdlong	local45, objptr
02aa4     18 0E 06 F1 | 	add	objptr, #24
02aa8     07 C5 02 FB | 	rdlong	local46, objptr
02aac     80 0E 86 F1 | 	sub	objptr, #128
02ab0     62 C3 02 F1 | 	add	local45, local46
02ab4     61 F1 5A F2 | 	cmps	local68, local45 wcz
02ab8     01 C6 06 16 |  if_a	mov	local47, #1
02abc     01 C6 66 E6 |  if_be	neg	local47, #1
02ac0     63 F3 02 F6 | 	mov	local69, local47
02ac4     63 F1 02 F1 | 	add	local68, local47
02ac8     5C D5 9F FE | 	loc	pa,	#(@LR__0100-@LR__0099)
02acc     93 00 A0 FD | 	call	#FCACHE_LOAD_
02ad0                 | LR__0099
02ad0     5A F5 02 F6 | 	mov	local70, local38
02ad4     02 F4 66 F0 | 	shl	local70, #2
02ad8     1C 0E 06 F1 | 	add	objptr, #28
02adc     07 F7 02 FB | 	rdlong	local71, objptr
02ae0     1C 0E 86 F1 | 	sub	objptr, #28
02ae4     7A F7 02 F1 | 	add	local71, local70
02ae8                 | '       long[dl_ptr+4*i]:=$0
02ae8     7B 01 68 FC | 	wrlong	#0, local71
02aec     79 B5 02 F1 | 	add	local38, local69
02af0     78 B5 0A F2 | 	cmp	local38, local68 wz
02af4     D8 FF 9F 5D |  if_ne	jmp	#LR__0099
02af8                 | LR__0100
02af8                 | LR__0101
02af8                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
02af8     68 0E 06 F1 | 	add	objptr, #104
02afc     07 B5 02 FB | 	rdlong	local38, objptr
02b00     5A F9 02 F6 | 	mov	local72, local38
02b04     18 0E 06 F1 | 	add	objptr, #24
02b08     07 D3 02 FB | 	rdlong	local53, objptr
02b0c     69 F9 02 F1 | 	add	local72, local53
02b10     01 F8 86 F1 | 	sub	local72, #1
02b14     18 0E 86 F1 | 	sub	objptr, #24
02b18     07 C7 02 FB | 	rdlong	local47, objptr
02b1c     68 0E 86 F1 | 	sub	objptr, #104
02b20     63 F9 5A F2 | 	cmps	local72, local47 wcz
02b24     01 D4 06 16 |  if_a	mov	local54, #1
02b28     01 D4 66 E6 |  if_be	neg	local54, #1
02b2c     6A FB 02 F6 | 	mov	local73, local54
02b30     6A F9 02 F1 | 	add	local72, local54
02b34     48 D5 9F FE | 	loc	pa,	#(@LR__0103-@LR__0102)
02b38     93 00 A0 FD | 	call	#FCACHE_LOAD_
02b3c                 | LR__0102
02b3c     5A FD 02 F6 | 	mov	local74, local38
02b40     68 0E 06 F1 | 	add	objptr, #104
02b44     07 D9 02 FB | 	rdlong	local56, objptr
02b48     6C FD 82 F1 | 	sub	local74, local56
02b4c     58 FD 42 F0 | 	shr	local74, local36
02b50     28 0E 06 F1 | 	add	objptr, #40
02b54     07 D9 02 FB | 	rdlong	local56, objptr
02b58     90 0E 86 F1 | 	sub	objptr, #144
02b5c     7E D9 02 FD | 	qmul	local56, local74
02b60     18 FE 62 FD | 	getqx	local75
02b64     02 FE 66 F0 | 	shl	local75, #2
02b68     07 01 03 FB | 	rdlong	local76, objptr
02b6c     7F 01 03 F1 | 	add	local76, local75
02b70     2E 03 03 F6 | 	mov	local77, arg01
02b74     03 02 07 F5 | 	and	local77, #3
02b78     81 01 03 F1 | 	add	local76, local77
02b7c                 | '     bufstart:=buf_ptr+4*(cpl*((i-timings[6])>>vzoom))+(mode&3)
02b7c     0C 00 67 F0 | 	shl	local76, #12
02b80     02 00 07 F1 | 	add	local76, #2
02b84     2E 05 03 F6 | 	mov	local78, arg01
02b88     30 04 07 F5 | 	and	local78, #48
02b8c     02 04 47 F0 | 	shr	local78, #2
02b90     82 01 03 F1 | 	add	local76, local78
02b94     5A 07 03 F6 | 	mov	local79, local38
02b98     02 06 67 F0 | 	shl	local79, #2
02b9c     1C 0E 06 F1 | 	add	objptr, #28
02ba0     07 09 03 FB | 	rdlong	local80, objptr
02ba4     1C 0E 86 F1 | 	sub	objptr, #28
02ba8     83 09 03 F1 | 	add	local80, local79
02bac                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+2+(mode &48)>>2
02bac     84 01 63 FC | 	wrlong	local76, local80
02bb0     7D B5 02 F1 | 	add	local38, local73
02bb4     7C B5 0A F2 | 	cmp	local38, local72 wz
02bb8     80 FF 9F 5D |  if_ne	jmp	#LR__0102
02bbc                 | LR__0103
02bbc                 | LR__0104
02bbc                 | LR__0105
02bbc     AF F0 03 F6 | 	mov	ptra, fp
02bc0     BF 00 A0 FD | 	call	#popregs_
02bc4                 | _hng030rm_spin2_setmode_ret
02bc4     2D 00 64 FD | 	ret
02bc8                 | 
02bc8                 | ' 
02bc8                 | ' pub serialcog()| rr, mrr, srr, b, mb, midireport, kbmreport
02bc8                 | _retrocog_spin2_serialcog
02bc8     1C 5A 05 F6 | 	mov	COUNT_, #28
02bcc     B0 00 A0 FD | 	call	#pushregs_
02bd0                 | ' 
02bd0                 | ' 'start serial and midi
02bd0                 | ' 
02bd0                 | ' serial_start(rxpin, txpin, baudrate)
02bd0     20 5C 06 F6 | 	mov	arg01, #32
02bd4     21 5E 06 F6 | 	mov	arg02, #33
02bd8     A6 0E 00 FF 
02bdc     00 60 06 F6 | 	mov	arg03, ##1920000
02be0     D8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
02be4                 | ' serial_start(midiin,midiout,mbaudrate)
02be4     1D 5C 06 F6 | 	mov	arg01, #29
02be8     1E 5E 06 F6 | 	mov	arg02, #30
02bec     3D 00 00 FF 
02bf0     12 60 06 F6 | 	mov	arg03, ##31250
02bf4     C4 05 B0 FD | 	call	#_retrocog_spin2_serial_start
02bf8                 | ' serial_start(srxpin,stxpin,sbaudrate)
02bf8     42 0F 00 FF 
02bfc     80 6A 06 F6 | 	mov	local01, ##2000000
02c00     3F 5C 06 F6 | 	mov	arg01, #63
02c04     3E 5E 06 F6 | 	mov	arg02, #62
02c08     42 0F 00 FF 
02c0c     80 60 06 F6 | 	mov	arg03, ##2000000
02c10     A8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
02c14                 | ' 
02c14                 | ' mb:=(-1)
02c14     01 6C 66 F6 | 	neg	local02, #1
02c18                 | ' b:=(-1)
02c18     01 6E 66 F6 | 	neg	local03, #1
02c1c                 | ' 
02c1c                 | ' mousefront:=0
02c1c     00 70 06 F6 | 	mov	local04, #0
02c20     08 0E 06 F1 | 	add	objptr, #8
02c24     07 01 68 FC | 	wrlong	#0, objptr
02c28                 | ' mousetail:=0
02c28     04 0E 06 F1 | 	add	objptr, #4
02c2c     07 01 68 FC | 	wrlong	#0, objptr
02c30     0C 0E 86 F1 | 	sub	objptr, #12
02c34                 | ' kbdfront:=0
02c34     07 01 68 FC | 	wrlong	#0, objptr
02c38                 | ' kbdtail:=0
02c38     04 0E 06 F1 | 	add	objptr, #4
02c3c     07 01 68 FC | 	wrlong	#0, objptr
02c40                 | ' midifront:=0
02c40     0C 0E 06 F1 | 	add	objptr, #12
02c44     07 01 68 FC | 	wrlong	#0, objptr
02c48                 | ' miditail:=0
02c48     04 0E 06 F1 | 	add	objptr, #4
02c4c     07 01 68 FC | 	wrlong	#0, objptr
02c50                 | ' serialfront:=0
02c50     04 0E 06 F1 | 	add	objptr, #4
02c54     07 01 68 FC | 	wrlong	#0, objptr
02c58                 | ' serialtail:=0
02c58     04 0E 06 F1 | 	add	objptr, #4
02c5c     07 01 68 FC | 	wrlong	#0, objptr
02c60                 | ' long[$30]:=0
02c60     30 00 6C FC | 	wrlong	#0, #48
02c64                 | ' long[$34]:=0
02c64     34 00 6C FC | 	wrlong	#0, #52
02c68                 | ' long[$38]:=0
02c68     38 00 6C FC | 	wrlong	#0, #56
02c6c     1C 0E 86 F1 | 	sub	objptr, #28
02c70                 | ' long[$3C]:=0
02c70     3C 00 6C FC | 	wrlong	#0, #60
02c74                 | ' 
02c74                 | ' repeat
02c74                 | LR__0106
02c74                 | ' 
02c74                 | ' '  repeat 
02c74                 | '   rr:=rxcheck(rxpin)
02c74     20 5C 06 F6 | 	mov	arg01, #32
02c78     BC 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
02c7c     15 73 02 F6 | 	mov	local05, result1
02c80                 | '   mrr:=rxcheck(midiin)
02c80     1D 5C 06 F6 | 	mov	arg01, #29
02c84     B0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
02c88     15 75 02 F6 | 	mov	local06, result1
02c8c                 | '   srr:=rxcheck(srxpin)
02c8c     3F 70 06 F6 | 	mov	local04, #63
02c90     3F 5C 06 F6 | 	mov	arg01, #63
02c94     A0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
02c98     15 77 02 F6 | 	mov	local07, result1
02c9c     3B 79 02 F6 | 	mov	local08, local07
02ca0                 | ' 
02ca0                 | ' '  until rr>=0 || mrr>=0  || srr>=0
02ca0                 | ' 
02ca0                 | '   
02ca0                 | ' ' midi. Must be >= $80 for a command
02ca0                 | ' '$80-$8F - 3 bytes note off. note, velocity
02ca0                 | ' '$90-$9F - 3 bytes note on, note, velocity
02ca0                 | ' '$A0-$AF - 3 bytes poly aftertouch. note, value
02ca0                 | ' '$B0-$BF - 3 bytes control change, controller-value, 
02ca0                 | ' '$C0-$CF - 2 bytes program change
02ca0                 | ' '$D0-$DF - 2 bytes mono aftertouch
02ca0                 | ' '$E0-$EF - 3 bytes pitch bend, $2000 - center
02ca0                 | ' '$F0-$FF - 1 byte
02ca0                 | '   
02ca0                 | '   if srr>=0
02ca0     00 78 5E F2 | 	cmps	local08, #0 wcz
02ca4     7C 00 90 CD |  if_b	jmp	#LR__0108
02ca8                 | '   
02ca8                 | '     if serialfront<>((serialtail-1) //32)
02ca8     1C 0E 06 F1 | 	add	objptr, #28
02cac     07 77 02 FB | 	rdlong	local07, objptr
02cb0     3B 71 02 F6 | 	mov	local04, local07
02cb4     01 70 86 F1 | 	sub	local04, #1
02cb8     38 6B 52 F6 | 	abs	local01, local04 wc
02cbc     1F 6A 06 F5 | 	and	local01, #31
02cc0     35 6B 62 C6 |  if_b	neg	local01, local01
02cc4     04 0E 86 F1 | 	sub	objptr, #4
02cc8     07 7B 02 FB | 	rdlong	local09, objptr
02ccc     18 0E 86 F1 | 	sub	objptr, #24
02cd0     3D 7D 02 F6 | 	mov	local10, local09
02cd4     35 7D 0A F2 | 	cmp	local10, local01 wz
02cd8     48 00 90 AD |  if_e	jmp	#LR__0107
02cdc     18 0E 06 F1 | 	add	objptr, #24
02ce0     07 7D 02 FB | 	rdlong	local10, objptr
02ce4     01 00 00 FF 
02ce8     08 0F 06 F1 | 	add	objptr, ##776
02cec     07 7D 02 F1 | 	add	local10, objptr
02cf0     3E 7F 02 F6 | 	mov	local11, local10
02cf4                 | '       serialbuf[serialfront]:=srr
02cf4     3F 79 42 FC | 	wrbyte	local08, local11
02cf8                 | '       serialfront+=1
02cf8     01 00 00 FF 
02cfc     08 0F 86 F1 | 	sub	objptr, ##776
02d00     07 6B 02 FB | 	rdlong	local01, objptr
02d04     01 6A 06 F1 | 	add	local01, #1
02d08     07 6B 62 FC | 	wrlong	local01, objptr
02d0c                 | '       serialfront:=serialfront // 32
02d0c     35 77 02 F6 | 	mov	local07, local01
02d10     3B 71 52 F6 | 	abs	local04, local07 wc
02d14     1F 70 06 F5 | 	and	local04, #31
02d18     38 71 62 C6 |  if_b	neg	local04, local04
02d1c     07 71 62 FC | 	wrlong	local04, objptr
02d20     18 0E 86 F1 | 	sub	objptr, #24
02d24                 | LR__0107
02d24                 | LR__0108
02d24                 | '     
02d24                 | '   if ((mrr>=$80) && (mrr<=$BF)) || ((mrr>=$E0) && (mrr<=$EF)) 
02d24     80 74 5E F2 | 	cmps	local06, #128 wcz
02d28     08 00 90 CD |  if_b	jmp	#LR__0109
02d2c     BF 74 5E F2 | 	cmps	local06, #191 wcz
02d30     10 00 90 ED |  if_be	jmp	#LR__0110
02d34                 | LR__0109
02d34     E0 74 5E F2 | 	cmps	local06, #224 wcz
02d38     1C 00 90 CD |  if_b	jmp	#LR__0111
02d3c     EF 74 5E F2 | 	cmps	local06, #239 wcz
02d40     14 00 90 1D |  if_a	jmp	#LR__0111
02d44                 | LR__0110
02d44                 | '     mb:=2
02d44     02 6C 06 F6 | 	mov	local02, #2
02d48     3A 71 02 F6 | 	mov	local04, local06
02d4c     18 70 66 F0 | 	shl	local04, #24
02d50     38 81 02 F6 | 	mov	local12, local04
02d54                 | '     midireport:=mrr<<24
02d54     40 83 02 F6 | 	mov	local13, local12
02d58                 | LR__0111
02d58                 | ' 
02d58                 | '   if (mrr>=$C0) && (mrr<=$DF)
02d58     C0 74 5E F2 | 	cmps	local06, #192 wcz
02d5c     1C 00 90 CD |  if_b	jmp	#LR__0112
02d60     DF 74 5E F2 | 	cmps	local06, #223 wcz
02d64     14 00 90 1D |  if_a	jmp	#LR__0112
02d68                 | '     mb:=1
02d68     01 6C 06 F6 | 	mov	local02, #1
02d6c     3A 71 02 F6 | 	mov	local04, local06
02d70     18 70 66 F0 | 	shl	local04, #24
02d74     38 85 02 F6 | 	mov	local14, local04
02d78                 | '     midireport:=mrr<<24
02d78     42 83 02 F6 | 	mov	local13, local14
02d7c                 | LR__0112
02d7c                 | '   
02d7c                 | '   if (mrr>=$F0) 'TODO: do something with SYSEX, now a workaround for Novation Impulse
02d7c     F0 74 5E F2 | 	cmps	local06, #240 wcz
02d80     10 00 90 CD |  if_b	jmp	#LR__0113
02d84                 | '     mb:=4
02d84     04 6C 06 F6 | 	mov	local02, #4
02d88     3A 87 02 F6 | 	mov	local15, local06
02d8c     18 86 66 F0 | 	shl	local15, #24
02d90                 | '     midireport:=mrr<<24  
02d90     43 83 02 F6 | 	mov	local13, local15
02d94                 | LR__0113
02d94                 | '   
02d94                 | '   if (mrr<$80) && (mb>0) && (mrr>=0)
02d94     80 74 5E F2 | 	cmps	local06, #128 wcz
02d98     44 00 90 3D |  if_ae	jmp	#LR__0115
02d9c     00 6C 5E F2 | 	cmps	local02, #0 wcz
02da0     3C 00 90 ED |  if_be	jmp	#LR__0115
02da4     00 74 5E F2 | 	cmps	local06, #0 wcz
02da8     34 00 90 CD |  if_b	jmp	#LR__0115
02dac                 | '     
02dac                 | '     mb--
02dac     36 71 02 F6 | 	mov	local04, local02
02db0     36 77 02 F6 | 	mov	local07, local02
02db4     01 76 86 F1 | 	sub	local07, #1
02db8     3B 6D 02 F6 | 	mov	local02, local07
02dbc                 | '     if mb<3
02dbc     03 6C 5E F2 | 	cmps	local02, #3 wcz
02dc0     1C 00 90 3D |  if_ae	jmp	#LR__0114
02dc4     36 89 02 F6 | 	mov	local16, local02
02dc8     03 88 66 F0 | 	shl	local16, #3
02dcc     3A 8B 02 F6 | 	mov	local17, local06
02dd0     44 8B 62 F0 | 	shl	local17, local16
02dd4                 | '       midireport+=mrr<<(mb<<3)
02dd4     41 71 02 F6 | 	mov	local04, local13
02dd8     45 71 02 F1 | 	add	local04, local17
02ddc     38 83 02 F6 | 	mov	local13, local04
02de0                 | LR__0114
02de0                 | LR__0115
02de0                 | '   
02de0                 | '   if mb==0
02de0     00 6C 0E F2 | 	cmp	local02, #0 wz
02de4     84 00 90 5D |  if_ne	jmp	#LR__0117
02de8                 | '     
02de8                 | '     if midifront<>((miditail-1) //32)
02de8     14 0E 06 F1 | 	add	objptr, #20
02dec     07 77 02 FB | 	rdlong	local07, objptr
02df0     3B 71 02 F6 | 	mov	local04, local07
02df4     01 70 86 F1 | 	sub	local04, #1
02df8     38 6B 52 F6 | 	abs	local01, local04 wc
02dfc     1F 6A 06 F5 | 	and	local01, #31
02e00     35 6B 62 C6 |  if_b	neg	local01, local01
02e04     04 0E 86 F1 | 	sub	objptr, #4
02e08     07 7B 02 FB | 	rdlong	local09, objptr
02e0c     10 0E 86 F1 | 	sub	objptr, #16
02e10     3D 7D 02 F6 | 	mov	local10, local09
02e14     35 7D 0A F2 | 	cmp	local10, local01 wz
02e18     4C 00 90 AD |  if_e	jmp	#LR__0116
02e1c     10 0E 06 F1 | 	add	objptr, #16
02e20     07 7D 02 FB | 	rdlong	local10, objptr
02e24     02 7C 66 F0 | 	shl	local10, #2
02e28     01 00 00 FF 
02e2c     90 0E 06 F1 | 	add	objptr, ##656
02e30     07 7D 02 F1 | 	add	local10, objptr
02e34     3E 8D 02 F6 | 	mov	local18, local10
02e38                 | '       midibuf[midifront]:=midireport
02e38     46 83 62 FC | 	wrlong	local13, local18
02e3c                 | '       midifront+=1
02e3c     01 00 00 FF 
02e40     90 0E 86 F1 | 	sub	objptr, ##656
02e44     07 6B 02 FB | 	rdlong	local01, objptr
02e48     01 6A 06 F1 | 	add	local01, #1
02e4c     07 6B 62 FC | 	wrlong	local01, objptr
02e50                 | '       midifront:=midifront // 32
02e50     35 77 02 F6 | 	mov	local07, local01
02e54     3B 71 52 F6 | 	abs	local04, local07 wc
02e58     1F 70 06 F5 | 	and	local04, #31
02e5c     38 71 62 C6 |  if_b	neg	local04, local04
02e60     07 71 62 FC | 	wrlong	local04, objptr
02e64     10 0E 86 F1 | 	sub	objptr, #16
02e68                 | LR__0116
02e68                 | '     mb:=(-1)
02e68     01 6C 66 F6 | 	neg	local02, #1
02e6c                 | LR__0117
02e6c                 | ' 
02e6c                 | ' 'Keyboard and mouse
02e6c                 | ' 
02e6c                 | '   if (rr>=$80) && (rr<>$FF)
02e6c     80 72 5E F2 | 	cmps	local05, #128 wcz
02e70     1C 00 90 CD |  if_b	jmp	#LR__0118
02e74     FF 72 0E F2 | 	cmp	local05, #255 wz
02e78     14 00 90 AD |  if_e	jmp	#LR__0118
02e7c                 | '     b:=3
02e7c     03 6E 06 F6 | 	mov	local03, #3
02e80     39 71 02 F6 | 	mov	local04, local05
02e84     18 70 66 F0 | 	shl	local04, #24
02e88     38 8F 02 F6 | 	mov	local19, local04
02e8c                 | '     kbmreport:=rr<<24
02e8c     47 91 02 F6 | 	mov	local20, local19
02e90                 | LR__0118
02e90                 | '   
02e90                 | '   if (rr<$80) && (b>0) && (rr>=0)
02e90     80 72 5E F2 | 	cmps	local05, #128 wcz
02e94     38 00 90 3D |  if_ae	jmp	#LR__0119
02e98     00 6E 5E F2 | 	cmps	local03, #0 wcz
02e9c     30 00 90 ED |  if_be	jmp	#LR__0119
02ea0     00 72 5E F2 | 	cmps	local05, #0 wcz
02ea4     28 00 90 CD |  if_b	jmp	#LR__0119
02ea8                 | '     b--
02ea8     37 77 02 F6 | 	mov	local07, local03
02eac     01 76 86 F1 | 	sub	local07, #1
02eb0     3B 6F 02 F6 | 	mov	local03, local07
02eb4     37 93 02 F6 | 	mov	local21, local03
02eb8     03 92 66 F0 | 	shl	local21, #3
02ebc     39 95 02 F6 | 	mov	local22, local05
02ec0     49 95 62 F0 | 	shl	local22, local21
02ec4                 | '     kbmreport+=rr<<(b<<3)  
02ec4     48 71 02 F6 | 	mov	local04, local20
02ec8     4A 71 02 F1 | 	add	local04, local22
02ecc     38 91 02 F6 | 	mov	local20, local04
02ed0                 | LR__0119
02ed0                 | '   
02ed0                 | '   if (rr==$FF)
02ed0     FF 72 0E F2 | 	cmp	local05, #255 wz
02ed4                 | '     b:=0   
02ed4     00 6E 06 A6 |  if_e	mov	local03, #0
02ed8                 | ' 
02ed8                 | '   if b==0  
02ed8     00 6E 0E F2 | 	cmp	local03, #0 wz
02edc     14 01 90 5D |  if_ne	jmp	#LR__0124
02ee0                 | '  
02ee0                 | '     if (kbmreport +>= $80000000) && (kbmreport +< $87000000)  'mouse
02ee0     00 00 40 FF 
02ee4     00 90 1E F2 | 	cmp	local20, ##-2147483648 wcz
02ee8     84 00 90 CD |  if_b	jmp	#LR__0121
02eec     00 80 43 FF 
02ef0     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
02ef4     78 00 90 3D |  if_ae	jmp	#LR__0121
02ef8                 | '       if mousefront<>((mousetail-1) //128)
02ef8     0C 0E 06 F1 | 	add	objptr, #12
02efc     07 77 02 FB | 	rdlong	local07, objptr
02f00     3B 71 02 F6 | 	mov	local04, local07
02f04     01 70 86 F1 | 	sub	local04, #1
02f08     38 6B 52 F6 | 	abs	local01, local04 wc
02f0c     7F 6A 06 F5 | 	and	local01, #127
02f10     35 6B 62 C6 |  if_b	neg	local01, local01
02f14     04 0E 86 F1 | 	sub	objptr, #4
02f18     07 7B 02 FB | 	rdlong	local09, objptr
02f1c     08 0E 86 F1 | 	sub	objptr, #8
02f20     3D 7D 02 F6 | 	mov	local10, local09
02f24     35 7D 0A F2 | 	cmp	local10, local01 wz
02f28     44 00 90 AD |  if_e	jmp	#LR__0120
02f2c     08 0E 06 F1 | 	add	objptr, #8
02f30     07 7D 02 FB | 	rdlong	local10, objptr
02f34     02 7C 66 F0 | 	shl	local10, #2
02f38     98 0E 06 F1 | 	add	objptr, #152
02f3c     07 7D 02 F1 | 	add	local10, objptr
02f40     3E 97 02 F6 | 	mov	local23, local10
02f44                 | '         mousebuf[mousefront]:=kbmreport
02f44     4B 91 62 FC | 	wrlong	local20, local23
02f48                 | '         mousefront+=1
02f48     98 0E 86 F1 | 	sub	objptr, #152
02f4c     07 6B 02 FB | 	rdlong	local01, objptr
02f50     01 6A 06 F1 | 	add	local01, #1
02f54     07 6B 62 FC | 	wrlong	local01, objptr
02f58                 | '         mousefront:=mousefront // 128
02f58     35 77 02 F6 | 	mov	local07, local01
02f5c     3B 71 52 F6 | 	abs	local04, local07 wc
02f60     7F 70 06 F5 | 	and	local04, #127
02f64     38 71 62 C6 |  if_b	neg	local04, local04
02f68     07 71 62 FC | 	wrlong	local04, objptr
02f6c     08 0E 86 F1 | 	sub	objptr, #8
02f70                 | LR__0120
02f70                 | LR__0121
02f70                 | '     b:=(-1)
02f70     01 6E 66 F6 | 	neg	local03, #1
02f74                 | ' 
02f74                 | '     if (kbmreport +>= $87000000) && (kbmreport +< $8a000000)  'keyboard
02f74     00 80 43 FF 
02f78     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
02f7c     70 00 90 CD |  if_b	jmp	#LR__0123
02f80     00 00 45 FF 
02f84     00 90 1E F2 | 	cmp	local20, ##-1979711488 wcz
02f88     64 00 90 3D |  if_ae	jmp	#LR__0123
02f8c                 | '       if kbdfront<>((kbdtail-1) //32)
02f8c     04 0E 06 F1 | 	add	objptr, #4
02f90     07 77 02 FB | 	rdlong	local07, objptr
02f94     04 0E 86 F1 | 	sub	objptr, #4
02f98     3B 71 02 F6 | 	mov	local04, local07
02f9c     01 70 86 F1 | 	sub	local04, #1
02fa0     38 6B 52 F6 | 	abs	local01, local04 wc
02fa4     1F 6A 06 F5 | 	and	local01, #31
02fa8     35 6B 62 C6 |  if_b	neg	local01, local01
02fac     07 7D 02 FB | 	rdlong	local10, objptr
02fb0     35 7D 0A F2 | 	cmp	local10, local01 wz
02fb4     38 00 90 AD |  if_e	jmp	#LR__0122
02fb8     07 6B 02 FB | 	rdlong	local01, objptr
02fbc     02 6A 66 F0 | 	shl	local01, #2
02fc0     20 0E 06 F1 | 	add	objptr, #32
02fc4     07 6B 02 F1 | 	add	local01, objptr
02fc8     35 99 02 F6 | 	mov	local24, local01
02fcc                 | '         kbdbuf[kbdfront]:=kbmreport
02fcc     4C 91 62 FC | 	wrlong	local20, local24
02fd0                 | '         kbdfront+=1
02fd0     20 0E 86 F1 | 	sub	objptr, #32
02fd4     07 77 02 FB | 	rdlong	local07, objptr
02fd8     01 76 06 F1 | 	add	local07, #1
02fdc     07 77 62 FC | 	wrlong	local07, objptr
02fe0                 | '         kbdfront:=kbdfront // 32
02fe0     3B 71 52 F6 | 	abs	local04, local07 wc
02fe4     1F 70 06 F5 | 	and	local04, #31
02fe8     38 71 62 C6 |  if_b	neg	local04, local04
02fec     07 71 62 FC | 	wrlong	local04, objptr
02ff0                 | LR__0122
02ff0                 | LR__0123
02ff0                 | '     b:=(-1)
02ff0     01 6E 66 F6 | 	neg	local03, #1
02ff4                 | LR__0124
02ff4                 | ' 
02ff4                 | ' 
02ff4                 | '   if long[$30]==0
02ff4     30 70 0E FB | 	rdlong	local04, #48 wz
02ff8     5C 00 90 5D |  if_ne	jmp	#LR__0126
02ffc                 | '     if kbdfront<>kbdtail
02ffc     07 71 02 FB | 	rdlong	local04, objptr
03000     04 0E 06 F1 | 	add	objptr, #4
03004     07 6B 02 FB | 	rdlong	local01, objptr
03008     04 0E 86 F1 | 	sub	objptr, #4
0300c     35 71 0A F2 | 	cmp	local04, local01 wz
03010     44 00 90 AD |  if_e	jmp	#LR__0125
03014     04 0E 06 F1 | 	add	objptr, #4
03018     07 9B 02 FB | 	rdlong	local25, objptr
0301c     02 9A 66 F0 | 	shl	local25, #2
03020     1C 0E 06 F1 | 	add	objptr, #28
03024     07 9B 02 F1 | 	add	local25, objptr
03028                 | '       long[$30]:=kbdbuf[kbdtail]
03028     4D 71 02 FB | 	rdlong	local04, local25
0302c     30 70 66 FC | 	wrlong	local04, #48
03030                 | '       kbdtail++
03030     1C 0E 86 F1 | 	sub	objptr, #28
03034     07 7D 02 FB | 	rdlong	local10, objptr
03038     3E 6B 02 F6 | 	mov	local01, local10
0303c     01 6A 06 F1 | 	add	local01, #1
03040     07 6B 62 FC | 	wrlong	local01, objptr
03044                 | '       kbdtail:= kbdtail // 32
03044     35 71 52 F6 | 	abs	local04, local01 wc
03048     1F 70 06 F5 | 	and	local04, #31
0304c     38 71 62 C6 |  if_b	neg	local04, local04
03050     07 71 62 FC | 	wrlong	local04, objptr
03054     04 0E 86 F1 | 	sub	objptr, #4
03058                 | LR__0125
03058                 | LR__0126
03058                 | '       
03058                 | '   if long[$34]==0
03058     34 70 0E FB | 	rdlong	local04, #52 wz
0305c     64 00 90 5D |  if_ne	jmp	#LR__0128
03060                 | '     if mousefront<>mousetail
03060     08 0E 06 F1 | 	add	objptr, #8
03064     07 71 02 FB | 	rdlong	local04, objptr
03068     04 0E 06 F1 | 	add	objptr, #4
0306c     07 7D 02 FB | 	rdlong	local10, objptr
03070     0C 0E 86 F1 | 	sub	objptr, #12
03074     3E 6B 02 F6 | 	mov	local01, local10
03078     35 71 0A F2 | 	cmp	local04, local01 wz
0307c     44 00 90 AD |  if_e	jmp	#LR__0127
03080     0C 0E 06 F1 | 	add	objptr, #12
03084     07 9D 02 FB | 	rdlong	local26, objptr
03088     02 9C 66 F0 | 	shl	local26, #2
0308c     94 0E 06 F1 | 	add	objptr, #148
03090     07 9D 02 F1 | 	add	local26, objptr
03094                 | '       long[$34]:=mousebuf[mousetail]
03094     4E 71 02 FB | 	rdlong	local04, local26
03098     34 70 66 FC | 	wrlong	local04, #52
0309c                 | '       mousetail++
0309c     94 0E 86 F1 | 	sub	objptr, #148
030a0     07 7D 02 FB | 	rdlong	local10, objptr
030a4     3E 6B 02 F6 | 	mov	local01, local10
030a8     01 6A 06 F1 | 	add	local01, #1
030ac     07 6B 62 FC | 	wrlong	local01, objptr
030b0                 | '       mousetail:= mousetail // 128
030b0     35 71 52 F6 | 	abs	local04, local01 wc
030b4     7F 70 06 F5 | 	and	local04, #127
030b8     38 71 62 C6 |  if_b	neg	local04, local04
030bc     07 71 62 FC | 	wrlong	local04, objptr
030c0     0C 0E 86 F1 | 	sub	objptr, #12
030c4                 | LR__0127
030c4                 | LR__0128
030c4                 | ' 
030c4                 | '       
030c4                 | '   if long[$38]==0
030c4     38 70 0E FB | 	rdlong	local04, #56 wz
030c8     6C 00 90 5D |  if_ne	jmp	#LR__0130
030cc                 | '     if midifront<>miditail
030cc     10 0E 06 F1 | 	add	objptr, #16
030d0     07 71 02 FB | 	rdlong	local04, objptr
030d4     04 0E 06 F1 | 	add	objptr, #4
030d8     07 7D 02 FB | 	rdlong	local10, objptr
030dc     14 0E 86 F1 | 	sub	objptr, #20
030e0     3E 6B 02 F6 | 	mov	local01, local10
030e4     35 71 0A F2 | 	cmp	local04, local01 wz
030e8     4C 00 90 AD |  if_e	jmp	#LR__0129
030ec     14 0E 06 F1 | 	add	objptr, #20
030f0     07 9F 02 FB | 	rdlong	local27, objptr
030f4     02 9E 66 F0 | 	shl	local27, #2
030f8     01 00 00 FF 
030fc     8C 0E 06 F1 | 	add	objptr, ##652
03100     07 9F 02 F1 | 	add	local27, objptr
03104                 | '       long[$38]:=midibuf[miditail]
03104     4F 71 02 FB | 	rdlong	local04, local27
03108     38 70 66 FC | 	wrlong	local04, #56
0310c                 | '       miditail++
0310c     01 00 00 FF 
03110     8C 0E 86 F1 | 	sub	objptr, ##652
03114     07 7D 02 FB | 	rdlong	local10, objptr
03118     3E 6B 02 F6 | 	mov	local01, local10
0311c     01 6A 06 F1 | 	add	local01, #1
03120     07 6B 62 FC | 	wrlong	local01, objptr
03124                 | '       miditail:= miditail // 32
03124     35 71 52 F6 | 	abs	local04, local01 wc
03128     1F 70 06 F5 | 	and	local04, #31
0312c     38 71 62 C6 |  if_b	neg	local04, local04
03130     07 71 62 FC | 	wrlong	local04, objptr
03134     14 0E 86 F1 | 	sub	objptr, #20
03138                 | LR__0129
03138                 | LR__0130
03138                 | '       
03138                 | '   if long[$3c]==0
03138     3C 70 0E FB | 	rdlong	local04, #60 wz
0313c     34 FB 9F 5D |  if_ne	jmp	#LR__0106
03140                 | '     if serialfront<>serialtail
03140     18 0E 06 F1 | 	add	objptr, #24
03144     07 71 02 FB | 	rdlong	local04, objptr
03148     04 0E 06 F1 | 	add	objptr, #4
0314c     07 7D 02 FB | 	rdlong	local10, objptr
03150     1C 0E 86 F1 | 	sub	objptr, #28
03154     3E 6B 02 F6 | 	mov	local01, local10
03158     35 71 0A F2 | 	cmp	local04, local01 wz
0315c     14 FB 9F AD |  if_e	jmp	#LR__0106
03160                 | '       byte[$3c]:=255
03160     3C FE 4D FC | 	wrbyte	#255, #60
03164     1C 0E 06 F1 | 	add	objptr, #28
03168     07 A1 02 FB | 	rdlong	local28, objptr
0316c     01 00 00 FF 
03170     04 0F 06 F1 | 	add	objptr, ##772
03174     07 A1 02 F1 | 	add	local28, objptr
03178                 | '       byte[$3D]:=serialbuf[serialtail]
03178     50 71 C2 FA | 	rdbyte	local04, local28
0317c     3D 70 46 FC | 	wrbyte	local04, #61
03180                 | '       serialtail++
03180     01 00 00 FF 
03184     04 0F 86 F1 | 	sub	objptr, ##772
03188     07 7D 02 FB | 	rdlong	local10, objptr
0318c     3E 6B 02 F6 | 	mov	local01, local10
03190     01 6A 06 F1 | 	add	local01, #1
03194     07 6B 62 FC | 	wrlong	local01, objptr
03198                 | '       serialtail:= serialtail // 32
03198     35 71 52 F6 | 	abs	local04, local01 wc
0319c     1F 70 06 F5 | 	and	local04, #31
031a0     38 71 62 C6 |  if_b	neg	local04, local04
031a4     07 71 62 FC | 	wrlong	local04, objptr
031a8     1C 0E 86 F1 | 	sub	objptr, #28
031ac     C4 FA 9F FD | 	jmp	#LR__0106
031b0     AF F0 03 F6 | 	mov	ptra, fp
031b4     BF 00 A0 FD | 	call	#popregs_
031b8                 | _retrocog_spin2_serialcog_ret
031b8     2D 00 64 FD | 	ret
031bc                 | 
031bc                 | '       
031bc                 | ' 
031bc                 | ' ''---------------------- Serial functions from jm_serial.spin2, modified
031bc                 | ' 
031bc                 | ' pub serial_start(rxpin, txpin, baud) | bitmode
031bc                 | _retrocog_spin2_serial_start
031bc     04 5A 05 F6 | 	mov	COUNT_, #4
031c0     B0 00 A0 FD | 	call	#pushregs_
031c4     2E 6B 02 F6 | 	mov	local01, arg01
031c8     2F 6D 02 F6 | 	mov	local02, arg02
031cc                 | ' 
031cc                 | ' bitmode := muldiv64(clkfreq, $1_0000, baud) & $FFFFFC00       ' set bit timing
031cc     14 5C 06 FB | 	rdlong	arg01, #20
031d0     10 5E C6 F9 | 	decod	arg02, #16
031d4     2F 5D 02 FD | 	qmul	arg01, arg02
031d8     19 6E 62 FD | 	getqy	local03
031dc     18 70 62 FD | 	getqx	local04
031e0     28 6E 62 FD | 	setq	local03
031e4     30 71 12 FD | 	qdiv	local04, arg03
031e8     18 2A 62 FD | 	getqx	result1
031ec     15 61 02 F6 | 	mov	arg03, result1
031f0     FE FF 7F FF 
031f4     00 60 06 F5 | 	and	arg03, ##-1024
031f8                 | ' bitmode |= 7                                                  ' set bits (8)
031f8     07 60 46 F5 | 	or	arg03, #7
031fc                 | ' pinstart(rxpin,P_HIGH_15K|P_ASYNC_RX,bitmode,0)
031fc     40 6A 62 FD | 	dirl	local01
03200     08 00 80 FF 
03204     35 7D 08 FC | 	wrpin	##4158, local01
03208     35 61 12 FC | 	wxpin	arg03, local01
0320c     35 01 28 FC | 	wypin	#0, local01
03210     41 6A 62 FD | 	dirh	local01
03214                 | ' pinstart(txpin,P_ASYNC_TX|P_OE,bitmode,0)
03214     40 6C 62 FD | 	dirl	local02
03218     36 F9 08 FC | 	wrpin	#124, local02
0321c     36 61 12 FC | 	wxpin	arg03, local02
03220     36 01 28 FC | 	wypin	#0, local02
03224     41 6C 62 FD | 	dirh	local02
03228                 | ' pinhigh(rxpin)
03228     59 6A 62 FD | 	drvh	local01
0322c     AF F0 03 F6 | 	mov	ptra, fp
03230     BF 00 A0 FD | 	call	#popregs_
03234                 | _retrocog_spin2_serial_start_ret
03234     2D 00 64 FD | 	ret
03238                 | 
03238                 | ' 
03238                 | ' pub rxcheck(pin) : rxbyte | check
03238                 | _retrocog_spin2_rxcheck
03238     03 5A 05 F6 | 	mov	COUNT_, #3
0323c     B0 00 A0 FD | 	call	#pushregs_
03240     2E 6B 02 F6 | 	mov	local01, arg01
03244                 | ' 
03244                 | ' '' Check for serial input
03244                 | ' '' -- returns -1 if nothing available
03244                 | ' 
03244                 | '   rxbyte := -1
03244     01 6C 66 F6 | 	neg	local02, #1
03248                 | '   check := pinr(pin)
03248     35 5D 02 F6 | 	mov	arg01, local01
0324c     C0 25 B0 FD | 	call	#__system___pinread
03250     15 6F 0A F6 | 	mov	local03, result1 wz
03254                 | '   if (check)
03254                 | '     rxbyte := rdpin(pin) >> 24
03254     00 6C 06 56 |  if_ne	mov	local02, #0
03258     35 6D 8A 5A |  if_ne	rdpin	local02, local01
0325c     18 6C 46 50 |  if_ne	shr	local02, #24
03260     36 2B 02 F6 | 	mov	result1, local02
03264     AF F0 03 F6 | 	mov	ptra, fp
03268     BF 00 A0 FD | 	call	#popregs_
0326c                 | _retrocog_spin2_rxcheck_ret
0326c     2D 00 64 FD | 	ret
03270                 | 
03270                 | _trackerplayer_spin2_initModule
03270     3E 5A 05 F6 | 	mov	COUNT_, #62
03274     B0 00 A0 FD | 	call	#pushregs_
03278     24 F1 07 F1 | 	add	ptra, #292
0327c     AF 5C 62 FC | 	wrlong	arg01, fp
03280     04 5E 05 F1 | 	add	fp, #4
03284     AF 5E 62 FC | 	wrlong	arg02, fp
03288     04 5E 85 F1 | 	sub	fp, #4
0328c     AF 6A 02 FB | 	rdlong	local01, fp
03290     02 00 00 FF 
03294     38 6A 06 F1 | 	add	local01, ##1080
03298                 | ' 
03298                 | '   ' Set some data pointers
03298                 | '   magicFour      := hubPtr + 1080
03298     9D 0E 06 F1 | 	add	objptr, #157
0329c     07 6B 62 FC | 	wrlong	local01, objptr
032a0                 | '   nameStr        := hubPtr
032a0     AF 6C 02 FB | 	rdlong	local02, fp
032a4     97 0E 86 F1 | 	sub	objptr, #151
032a8     07 6D 62 FC | 	wrlong	local02, objptr
032ac     AF 6E 02 FB | 	rdlong	local03, fp
032b0     14 6E 06 F1 | 	add	local03, #20
032b4                 | '   samplesInfoLut := hubPtr + 20
032b4     04 0E 06 F1 | 	add	objptr, #4
032b8     07 6F 62 FC | 	wrlong	local03, objptr
032bc                 | ' 
032bc                 | '   ' Is this a 31 sample module?
032bc                 | '   if byte[magicFour][0] == "M" and byte[magicFour][2] == "K"
032bc     93 0E 06 F1 | 	add	objptr, #147
032c0     07 6D 02 FB | 	rdlong	local02, objptr
032c4     9D 0E 86 F1 | 	sub	objptr, #157
032c8     36 71 C2 FA | 	rdbyte	local04, local02
032cc     4D 70 0E F2 | 	cmp	local04, #77 wz
032d0     48 01 90 5D |  if_ne	jmp	#LR__0134
032d4     9D 0E 06 F1 | 	add	objptr, #157
032d8     07 73 02 FB | 	rdlong	local05, objptr
032dc     9D 0E 86 F1 | 	sub	objptr, #157
032e0     02 72 06 F1 | 	add	local05, #2
032e4     39 75 C2 FA | 	rdbyte	local06, local05
032e8     4B 74 0E F2 | 	cmp	local06, #75 wz
032ec     2C 01 90 5D |  if_ne	jmp	#LR__0134
032f0     AF 76 02 FB | 	rdlong	local07, fp
032f4     01 00 00 FF 
032f8     B6 77 06 F1 | 	add	local07, ##950
032fc                 | '     songLength          := byte[hubPtr + 950]
032fc     3B 6D C2 FA | 	rdbyte	local02, local07
03300     9A 0E 06 F1 | 	add	objptr, #154
03304     07 6D 42 FC | 	wrbyte	local02, objptr
03308     AF 78 02 FB | 	rdlong	local08, fp
0330c     01 00 00 FF 
03310     B7 79 06 F1 | 	add	local08, ##951
03314                 | '     unknown1            := byte[hubPtr + 951]
03314     3C 6D C2 FA | 	rdbyte	local02, local08
03318     02 0E 06 F1 | 	add	objptr, #2
0331c     07 6D 42 FC | 	wrbyte	local02, objptr
03320     AF 7A 02 FB | 	rdlong	local09, fp
03324     01 00 00 FF 
03328     B8 7B 06 F1 | 	add	local09, ##952
0332c                 | '     songPositionsLut    :=      hubPtr + 952
0332c     06 0E 86 F1 | 	sub	objptr, #6
03330     07 7B 62 FC | 	wrlong	local09, objptr
03334     AF 7C 02 FB | 	rdlong	local10, fp
03338     02 00 00 FF 
0333c     3C 7C 06 F1 | 	add	local10, ##1084
03340                 | '     patternsData        :=      hubPtr + 1084
03340     04 0E 86 F1 | 	sub	objptr, #4
03344     07 7D 62 FC | 	wrlong	local10, objptr
03348                 | '     numberOfInstruments := 31
03348     14 0E 06 F1 | 	add	objptr, #20
0334c     07 3F 48 FC | 	wrbyte	#31, objptr
03350                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03350     0B 0E 86 F1 | 	sub	objptr, #11
03354     07 01 48 FC | 	wrbyte	#0, objptr
03358     9B 0E 86 F1 | 	sub	objptr, #155
0335c                 | '     repeat i from 952 to 1079
0335c     08 5E 05 F1 | 	add	fp, #8
03360     01 00 80 FF 
03364     AF 70 6B FC | 	wrlong	##952, fp
03368     08 5E 85 F1 | 	sub	fp, #8
0336c     00 CD 9F FE | 	loc	pa,	#(@LR__0133-@LR__0131)
03370     93 00 A0 FD | 	call	#FCACHE_LOAD_
03374                 | LR__0131
03374                 | '       if byte[hubPtr][i] > numberOfPatterns
03374     AF 7E 02 FB | 	rdlong	local11, fp
03378     08 5E 05 F1 | 	add	fp, #8
0337c     AF 70 02 FB | 	rdlong	local04, fp
03380     08 5E 85 F1 | 	sub	fp, #8
03384     3F 71 02 F1 | 	add	local04, local11
03388     38 75 C2 FA | 	rdbyte	local06, local04
0338c     9B 0E 06 F1 | 	add	objptr, #155
03390     07 81 C2 FA | 	rdbyte	local12, objptr
03394     9B 0E 86 F1 | 	sub	objptr, #155
03398     40 75 5A F2 | 	cmps	local06, local12 wcz
0339c     24 00 90 ED |  if_be	jmp	#LR__0132
033a0     AF 7E 02 FB | 	rdlong	local11, fp
033a4     08 5E 05 F1 | 	add	fp, #8
033a8     AF 82 02 FB | 	rdlong	local13, fp
033ac     08 5E 85 F1 | 	sub	fp, #8
033b0     3F 83 02 F1 | 	add	local13, local11
033b4                 | '         numberOfPatterns := byte[hubPtr][i]
033b4     41 85 C2 FA | 	rdbyte	local14, local13
033b8     9B 0E 06 F1 | 	add	objptr, #155
033bc     07 85 42 FC | 	wrbyte	local14, objptr
033c0     9B 0E 86 F1 | 	sub	objptr, #155
033c4                 | LR__0132
033c4     08 5E 05 F1 | 	add	fp, #8
033c8     AF 84 02 FB | 	rdlong	local14, fp
033cc     01 84 06 F1 | 	add	local14, #1
033d0     AF 84 62 FC | 	wrlong	local14, fp
033d4     08 5E 85 F1 | 	sub	fp, #8
033d8     02 00 00 FF 
033dc     38 84 5E F2 | 	cmps	local14, ##1080 wcz
033e0     90 FF 9F CD |  if_b	jmp	#LR__0131
033e4                 | LR__0133
033e4                 | '     numberOfPatterns++
033e4     9B 0E 06 F1 | 	add	objptr, #155
033e8     07 85 C2 FA | 	rdbyte	local14, objptr
033ec     07 71 C2 FA | 	rdbyte	local04, objptr
033f0     01 70 06 F1 | 	add	local04, #1
033f4     07 71 42 FC | 	wrbyte	local04, objptr
033f8     07 87 C2 FA | 	rdbyte	local15, objptr
033fc     0A 86 66 F0 | 	shl	local15, #10
03400     09 0E 86 F1 | 	sub	objptr, #9
03404     07 89 02 FB | 	rdlong	local16, objptr
03408     43 89 02 F1 | 	add	local16, local15
0340c                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
0340c     84 0E 86 F1 | 	sub	objptr, #132
03410     07 89 62 FC | 	wrlong	local16, objptr
03414     0E 0E 86 F1 | 	sub	objptr, #14
03418                 | ' 
03418                 | '   ' This must be an oldschool 15 sample soundtracker module
03418                 | '   else
03418     18 01 90 FD | 	jmp	#LR__0138
0341c                 | LR__0134
0341c     AF 8A 02 FB | 	rdlong	local17, fp
03420     D6 8B 06 F1 | 	add	local17, #470
03424                 | '     songLength          := byte[hubPtr + 470]
03424     45 6D C2 FA | 	rdbyte	local02, local17
03428     9A 0E 06 F1 | 	add	objptr, #154
0342c     07 6D 42 FC | 	wrbyte	local02, objptr
03430     AF 8C 02 FB | 	rdlong	local18, fp
03434     D7 8D 06 F1 | 	add	local18, #471
03438                 | '     unknown1            := byte[hubPtr + 471]
03438     46 6D C2 FA | 	rdbyte	local02, local18
0343c     02 0E 06 F1 | 	add	objptr, #2
03440     07 6D 42 FC | 	wrbyte	local02, objptr
03444     AF 8E 02 FB | 	rdlong	local19, fp
03448     D8 8F 06 F1 | 	add	local19, #472
0344c                 | '     songPositionsLut    :=      hubPtr + 472
0344c     06 0E 86 F1 | 	sub	objptr, #6
03450     07 8F 62 FC | 	wrlong	local19, objptr
03454     AF 90 02 FB | 	rdlong	local20, fp
03458     01 00 00 FF 
0345c     58 90 06 F1 | 	add	local20, ##600
03460                 | '     patternsData        :=      hubPtr + 600
03460     04 0E 86 F1 | 	sub	objptr, #4
03464     07 91 62 FC | 	wrlong	local20, objptr
03468                 | '     numberOfInstruments := 15
03468     14 0E 06 F1 | 	add	objptr, #20
0346c     07 1F 48 FC | 	wrbyte	#15, objptr
03470                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03470     0B 0E 86 F1 | 	sub	objptr, #11
03474     07 01 48 FC | 	wrbyte	#0, objptr
03478     9B 0E 86 F1 | 	sub	objptr, #155
0347c                 | '     repeat i from 472 to 599
0347c     08 5E 05 F1 | 	add	fp, #8
03480     AF B0 6B FC | 	wrlong	#472, fp
03484     08 5E 85 F1 | 	sub	fp, #8
03488     E4 CB 9F FE | 	loc	pa,	#(@LR__0137-@LR__0135)
0348c     93 00 A0 FD | 	call	#FCACHE_LOAD_
03490                 | LR__0135
03490                 | '       if byte[hubPtr][i] > numberOfPatterns
03490     AF 7E 02 FB | 	rdlong	local11, fp
03494     08 5E 05 F1 | 	add	fp, #8
03498     AF 70 02 FB | 	rdlong	local04, fp
0349c     08 5E 85 F1 | 	sub	fp, #8
034a0     3F 71 02 F1 | 	add	local04, local11
034a4     38 75 C2 FA | 	rdbyte	local06, local04
034a8     9B 0E 06 F1 | 	add	objptr, #155
034ac     07 81 C2 FA | 	rdbyte	local12, objptr
034b0     9B 0E 86 F1 | 	sub	objptr, #155
034b4     40 75 5A F2 | 	cmps	local06, local12 wcz
034b8     24 00 90 ED |  if_be	jmp	#LR__0136
034bc     AF 7E 02 FB | 	rdlong	local11, fp
034c0     08 5E 05 F1 | 	add	fp, #8
034c4     AF 92 02 FB | 	rdlong	local21, fp
034c8     08 5E 85 F1 | 	sub	fp, #8
034cc     3F 93 02 F1 | 	add	local21, local11
034d0                 | '         numberOfPatterns := byte[hubPtr][i]
034d0     49 85 C2 FA | 	rdbyte	local14, local21
034d4     9B 0E 06 F1 | 	add	objptr, #155
034d8     07 85 42 FC | 	wrbyte	local14, objptr
034dc     9B 0E 86 F1 | 	sub	objptr, #155
034e0                 | LR__0136
034e0     08 5E 05 F1 | 	add	fp, #8
034e4     AF 84 02 FB | 	rdlong	local14, fp
034e8     01 84 06 F1 | 	add	local14, #1
034ec     AF 84 62 FC | 	wrlong	local14, fp
034f0     08 5E 85 F1 | 	sub	fp, #8
034f4     01 00 00 FF 
034f8     58 84 5E F2 | 	cmps	local14, ##600 wcz
034fc     90 FF 9F CD |  if_b	jmp	#LR__0135
03500                 | LR__0137
03500                 | '     numberOfPatterns++
03500     9B 0E 06 F1 | 	add	objptr, #155
03504     07 85 C2 FA | 	rdbyte	local14, objptr
03508     07 71 C2 FA | 	rdbyte	local04, objptr
0350c     01 70 06 F1 | 	add	local04, #1
03510     07 71 42 FC | 	wrbyte	local04, objptr
03514     07 95 C2 FA | 	rdbyte	local22, objptr
03518     0A 94 66 F0 | 	shl	local22, #10
0351c     09 0E 86 F1 | 	sub	objptr, #9
03520     07 97 02 FB | 	rdlong	local23, objptr
03524     4A 97 02 F1 | 	add	local23, local22
03528                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
03528     84 0E 86 F1 | 	sub	objptr, #132
0352c     07 97 62 FC | 	wrlong	local23, objptr
03530     0E 0E 86 F1 | 	sub	objptr, #14
03534                 | LR__0138
03534                 | ' 
03534                 | '   ' Iterate through all samples and fill in the sample pointer LUT
03534                 | '   tmpPtr := sampleDataPtr
03534     0E 0E 06 F1 | 	add	objptr, #14
03538     07 6D 02 FB | 	rdlong	local02, objptr
0353c     0C 5E 05 F1 | 	add	fp, #12
03540     AF 6C 62 FC | 	wrlong	local02, fp
03544                 | '   repeat i from 1 to numberOfInstruments
03544     04 5E 85 F1 | 	sub	fp, #4
03548     AF 02 68 FC | 	wrlong	#1, fp
0354c     08 5E 85 F1 | 	sub	fp, #8
03550     98 0E 06 F1 | 	add	objptr, #152
03554     07 71 C2 FA | 	rdbyte	local04, objptr
03558     01 70 5E F2 | 	cmps	local04, #1 wcz
0355c     01 84 06 16 |  if_a	mov	local14, #1
03560     01 84 66 E6 |  if_be	neg	local14, #1
03564     42 99 02 F6 | 	mov	local24, local14
03568     07 9B C2 FA | 	rdbyte	local25, objptr
0356c     A6 0E 86 F1 | 	sub	objptr, #166
03570     4C 9B 02 F1 | 	add	local25, local24
03574                 | LR__0139
03574     08 5E 05 F1 | 	add	fp, #8
03578     AF 9C 02 FB | 	rdlong	local26, fp
0357c     01 9C 86 F1 | 	sub	local26, #1
03580     02 9C 66 F0 | 	shl	local26, #2
03584     12 0E 06 F1 | 	add	objptr, #18
03588     07 9D 02 F1 | 	add	local26, objptr
0358c                 | '     samplesPtrLut[i-1] := tmpPtr
0358c     04 5E 05 F1 | 	add	fp, #4
03590     AF 80 02 FB | 	rdlong	local12, fp
03594     4E 81 62 FC | 	wrlong	local12, local26
03598     18 5E 05 F1 | 	add	fp, #24
0359c     AF 5E 02 F6 | 	mov	arg02, fp
035a0     14 5E 85 F1 | 	sub	fp, #20
035a4     AF 60 02 F6 | 	mov	arg03, fp
035a8     04 5E 05 F1 | 	add	fp, #4
035ac     AF 62 02 F6 | 	mov	arg04, fp
035b0     04 5E 05 F1 | 	add	fp, #4
035b4     AF 64 02 F6 | 	mov	arg05, fp
035b8     04 5E 05 F1 | 	add	fp, #4
035bc     AF 66 02 F6 | 	mov	arg06, fp
035c0     04 5E 05 F1 | 	add	fp, #4
035c4     AF 68 02 F6 | 	mov	arg07, fp
035c8                 | '     getSampleInfo(i, @d5, @samLength, @d1, @d2, @d3, @d4)
035c8     18 5E 85 F1 | 	sub	fp, #24
035cc     AF 5C 02 FB | 	rdlong	arg01, fp
035d0     08 5E 85 F1 | 	sub	fp, #8
035d4     12 0E 86 F1 | 	sub	objptr, #18
035d8     A0 07 B0 FD | 	call	#_trackerplayer_spin2_getSampleInfo
035dc                 | '     tmpPtr += samLength
035dc     0C 5E 05 F1 | 	add	fp, #12
035e0     AF 80 02 FB | 	rdlong	local12, fp
035e4     04 5E 05 F1 | 	add	fp, #4
035e8     AF 9E 02 FB | 	rdlong	local27, fp
035ec     4F 81 02 F1 | 	add	local12, local27
035f0     04 5E 85 F1 | 	sub	fp, #4
035f4     AF 80 62 FC | 	wrlong	local12, fp
035f8     04 5E 85 F1 | 	sub	fp, #4
035fc     AF 80 02 FB | 	rdlong	local12, fp
03600     4C 81 02 F1 | 	add	local12, local24
03604     AF 80 62 FC | 	wrlong	local12, fp
03608     08 5E 85 F1 | 	sub	fp, #8
0360c     4D 81 0A F2 | 	cmp	local12, local25 wz
03610     60 FF 9F 5D |  if_ne	jmp	#LR__0139
03614                 | ' 
03614                 | '   ' Below this point, all play routine variables are resest to their default values
03614                 | '   tickCounter                 := 0
03614     A1 0E 06 F1 | 	add	objptr, #161
03618     07 01 48 FC | 	wrbyte	#0, objptr
0361c                 | '   patternRow                  := 0
0361c     01 0E 06 F1 | 	add	objptr, #1
03620     07 01 48 FC | 	wrbyte	#0, objptr
03624                 | '   songPosition                := startPattern
03624     04 5E 05 F1 | 	add	fp, #4
03628     AF 6C 02 FB | 	rdlong	local02, fp
0362c     04 5E 85 F1 | 	sub	fp, #4
03630     01 0E 06 F1 | 	add	objptr, #1
03634     07 6D 42 FC | 	wrbyte	local02, objptr
03638                 | '   currentSongSpeed            := 6
03638     01 0E 06 F1 | 	add	objptr, #1
0363c     07 0D 48 FC | 	wrbyte	#6, objptr
03640                 | '   patternDelay                := 0
03640     01 0E 06 F1 | 	add	objptr, #1
03644     07 01 48 FC | 	wrbyte	#0, objptr
03648                 | '   ticksPerMinute              := 50 * 60
03648     02 0F 06 F1 | 	add	objptr, #258
0364c     05 00 80 FF 
03650     07 71 6B FC | 	wrlong	##3000, objptr
03654     A7 0F 86 F1 | 	sub	objptr, #423
03658     07 0B 03 FB | 	rdlong	muldiva_, objptr
0365c     32 0C 07 F6 | 	mov	muldivb_, #50
03660     D0 00 A0 FD | 	call	#divide_
03664                 | '   cyclesToWait                := systemClock / 50
03664     AB 0F 06 F1 | 	add	objptr, #427
03668     07 0D 63 FC | 	wrlong	muldivb_, objptr
0366c                 | '   sampleNumber_memory         := 0
0366c     35 0E 06 F1 | 	add	objptr, #53
03670     07 01 48 FC | 	wrbyte	#0, objptr
03674                 | '   lpFilter                    := 0
03674     25 0E 86 F1 | 	sub	objptr, #37
03678     07 01 48 FC | 	wrbyte	#0, objptr
0367c                 | '   cmdD_memoryX                := 0
0367c     29 0E 06 F1 | 	add	objptr, #41
03680     07 01 48 FC | 	wrbyte	#0, objptr
03684                 | '   cmdD_memoryY                := 0
03684     01 0E 06 F1 | 	add	objptr, #1
03688     07 01 48 FC | 	wrbyte	#0, objptr
0368c                 | '   cmdD_updatePosition         := false
0368c     01 0E 06 F1 | 	add	objptr, #1
03690     07 01 48 FC | 	wrbyte	#0, objptr
03694                 | '   cmdB_memoryZ                := 0
03694     01 0E 06 F1 | 	add	objptr, #1
03698     07 01 48 FC | 	wrbyte	#0, objptr
0369c                 | '   cmdB_updatePosition         := false
0369c     01 0E 06 F1 | 	add	objptr, #1
036a0     07 01 48 FC | 	wrbyte	#0, objptr
036a4                 | '   cmdE6_updatePositionCommon  := false
036a4     0D 0E 06 F1 | 	add	objptr, #13
036a8     07 01 48 FC | 	wrbyte	#0, objptr
036ac     F5 0F 86 F1 | 	sub	objptr, #501
036b0                 | ' 
036b0                 | '   repeat i from 0 to LAST_CHANNEL
036b0     08 5E 05 F1 | 	add	fp, #8
036b4     AF 00 68 FC | 	wrlong	#0, fp
036b8     08 5E 85 F1 | 	sub	fp, #8
036bc                 | LR__0140
036bc     08 5E 05 F1 | 	add	fp, #8
036c0     AF A0 02 FB | 	rdlong	local28, fp
036c4     01 A0 66 F0 | 	shl	local28, #1
036c8     D7 0E 06 F1 | 	add	objptr, #215
036cc     07 A1 02 F1 | 	add	local28, objptr
036d0                 | ' 
036d0                 | '     currRepeatPoint[i]        := 0
036d0     50 01 58 FC | 	wrword	#0, local28
036d4     AF A2 02 FB | 	rdlong	local29, fp
036d8     01 A2 66 F0 | 	shl	local29, #1
036dc     1C 0E 86 F1 | 	sub	objptr, #28
036e0     07 A3 02 F1 | 	add	local29, objptr
036e4                 | '     currSampleLength[i]       := 4
036e4     51 09 58 FC | 	wrword	#4, local29
036e8     14 A5 02 F6 | 	mov	local30, ptr__trackerplayer_spin2_dat__
036ec     AF A6 02 FB | 	rdlong	local31, fp
036f0     02 A6 66 F0 | 	shl	local31, #2
036f4     14 0E 86 F1 | 	sub	objptr, #20
036f8     07 A7 02 F1 | 	add	local31, objptr
036fc                 | '     currSamplePtr[i]          := @null
036fc     53 A5 62 FC | 	wrlong	local30, local31
03700     AF A8 02 FB | 	rdlong	local32, fp
03704     10 0E 06 F1 | 	add	objptr, #16
03708     07 A9 02 F1 | 	add	local32, objptr
0370c                 | '     currSampleNr[i]           := 0
0370c     54 01 48 FC | 	wrbyte	#0, local32
03710     AF AA 02 FB | 	rdlong	local33, fp
03714     02 AA 66 F0 | 	shl	local33, #2
03718     0C 0E 06 F1 | 	add	objptr, #12
0371c     07 AB 02 F1 | 	add	local33, objptr
03720                 | '     currRepeatLength[i]       := 1
03720     55 03 68 FC | 	wrlong	#1, local33
03724     AF AC 02 FB | 	rdlong	local34, fp
03728     02 AC 66 F0 | 	shl	local34, #2
0372c     1C 0E 06 F1 | 	add	objptr, #28
03730     07 AD 02 F1 | 	add	local34, objptr
03734                 | '     currPeriod[i]             := 400
03734     56 21 6B FC | 	wrlong	#400, local34
03738     AF AE 02 FB | 	rdlong	local35, fp
0373c     02 AE 66 F0 | 	shl	local35, #2
03740     48 0E 06 F1 | 	add	objptr, #72
03744     07 AF 02 F1 | 	add	local35, objptr
03748                 | '     lastSetPeriod[i]          := 400
03748     57 21 6B FC | 	wrlong	#400, local35
0374c     AF B0 02 FB | 	rdlong	local36, fp
03750     02 B0 66 F0 | 	shl	local36, #2
03754     10 0E 06 F1 | 	add	objptr, #16
03758     07 B1 02 F1 | 	add	local36, objptr
0375c                 | '     lastSetSamplePtr[i]       := 0
0375c     58 01 68 FC | 	wrlong	#0, local36
03760     AF B2 02 FB | 	rdlong	local37, fp
03764     02 B2 66 F0 | 	shl	local37, #2
03768     10 0E 06 F1 | 	add	objptr, #16
0376c     07 B3 02 F1 | 	add	local37, objptr
03770                 | '     lastSetSampleNr[i]        := 0
03770     59 01 68 FC | 	wrlong	#0, local37
03774     AF B4 02 FB | 	rdlong	local38, fp
03778     02 B4 66 F0 | 	shl	local38, #2
0377c     10 0E 06 F1 | 	add	objptr, #16
03780     07 B5 02 F1 | 	add	local38, objptr
03784                 | '     lastSetSampleLength[i]    := 0
03784     5A 01 68 FC | 	wrlong	#0, local38
03788     AF B6 02 FB | 	rdlong	local39, fp
0378c     02 B6 66 F0 | 	shl	local39, #2
03790     10 0E 06 F1 | 	add	objptr, #16
03794     07 B7 02 F1 | 	add	local39, objptr
03798                 | '     lastSetRepeatLength[i]    := 0
03798     5B 01 68 FC | 	wrlong	#0, local39
0379c     AF B8 02 FB | 	rdlong	local40, fp
037a0     02 B8 66 F0 | 	shl	local40, #2
037a4     10 0E 06 F1 | 	add	objptr, #16
037a8     07 B9 02 F1 | 	add	local40, objptr
037ac                 | '     lastSetRepeatPoint[i]     := 0
037ac     5C 01 68 FC | 	wrlong	#0, local40
037b0     AF BA 02 FB | 	rdlong	local41, fp
037b4     02 BA 66 F0 | 	shl	local41, #2
037b8     78 0E 86 F1 | 	sub	objptr, #120
037bc     07 BB 02 F1 | 	add	local41, objptr
037c0                 | '     currVolume[i]             := 0
037c0     5D 01 68 FC | 	wrlong	#0, local41
037c4     AF BC 02 FB | 	rdlong	local42, fp
037c8     01 BC 66 F0 | 	shl	local42, #1
037cc     20 0E 06 F1 | 	add	objptr, #32
037d0     07 BD 02 F1 | 	add	local42, objptr
037d4                 | '     currPanning[i]            := 0
037d4     5E 01 58 FC | 	wrword	#0, local42
037d8     AF BE 02 FB | 	rdlong	local43, fp
037dc     A9 0E 06 F1 | 	add	objptr, #169
037e0     07 BF 02 F1 | 	add	local43, objptr
037e4                 | '     cmd3_memoryZ[i]           := 0
037e4     5F 01 48 FC | 	wrbyte	#0, local43
037e8     AF C0 02 FB | 	rdlong	local44, fp
037ec     04 0E 06 F1 | 	add	objptr, #4
037f0     07 C1 02 F1 | 	add	local44, objptr
037f4                 | '     cmd4_memoryY[i]           := 0
037f4     60 01 48 FC | 	wrbyte	#0, local44
037f8     AF C2 02 FB | 	rdlong	local45, fp
037fc     04 0E 06 F1 | 	add	objptr, #4
03800     07 C3 02 F1 | 	add	local45, objptr
03804                 | '     cmd4_memoryX[i]           := 0
03804     61 01 48 FC | 	wrbyte	#0, local45
03808     AF C4 02 FB | 	rdlong	local46, fp
0380c     04 0E 06 F1 | 	add	objptr, #4
03810     07 C5 02 F1 | 	add	local46, objptr
03814                 | '     cmd7_memoryY[i]           := 0
03814     62 01 48 FC | 	wrbyte	#0, local46
03818     AF C6 02 FB | 	rdlong	local47, fp
0381c     04 0E 06 F1 | 	add	objptr, #4
03820     07 C7 02 F1 | 	add	local47, objptr
03824                 | '     cmd7_memoryX[i]           := 0
03824     63 01 48 FC | 	wrbyte	#0, local47
03828     AF C8 02 FB | 	rdlong	local48, fp
0382c     04 0E 06 F1 | 	add	objptr, #4
03830     07 C9 02 F1 | 	add	local48, objptr
03834                 | '     cmd9_memoryZ[i]           := 0
03834     64 01 48 FC | 	wrbyte	#0, local48
03838     AF CA 02 FB | 	rdlong	local49, fp
0383c     0D 0E 06 F1 | 	add	objptr, #13
03840     07 CB 02 F1 | 	add	local49, objptr
03844                 | '     cmdE6_memory[i]           := 0
03844     65 01 48 FC | 	wrbyte	#0, local49
03848     AF CC 02 FB | 	rdlong	local50, fp
0384c     04 0E 06 F1 | 	add	objptr, #4
03850     07 CD 02 F1 | 	add	local50, objptr
03854                 | '     cmdE6_counter[i]          := 0
03854     66 01 48 FC | 	wrbyte	#0, local50
03858     AF CE 02 FB | 	rdlong	local51, fp
0385c     04 0E 06 F1 | 	add	objptr, #4
03860     07 CF 02 F1 | 	add	local51, objptr
03864                 | '     cmdE6_updatePosition[i]   := false
03864     67 01 48 FC | 	wrbyte	#0, local51
03868     AF D0 02 FB | 	rdlong	local52, fp
0386c     11 0E 86 F1 | 	sub	objptr, #17
03870     07 D1 02 F1 | 	add	local52, objptr
03874                 | '     sampleNumber_memory[i]    := 0
03874     68 01 48 FC | 	wrbyte	#0, local52
03878     AF D2 02 FB | 	rdlong	local53, fp
0387c     59 0E 86 F1 | 	sub	objptr, #89
03880     07 D3 02 F1 | 	add	local53, objptr
03884                 | '     vibratoPos[i]             := 0
03884     69 01 48 FC | 	wrbyte	#0, local53
03888     AF D4 02 FB | 	rdlong	local54, fp
0388c     02 D4 66 F0 | 	shl	local54, #2
03890     10 0E 06 F1 | 	add	objptr, #16
03894     07 D5 02 F1 | 	add	local54, objptr
03898                 | '     portamentoPeriodMemory[i] := 0
03898     6A 01 68 FC | 	wrlong	#0, local54
0389c     AF D6 02 FB | 	rdlong	local55, fp
038a0     25 0E 06 F1 | 	add	objptr, #37
038a4     07 D7 02 F1 | 	add	local55, objptr
038a8                 | '     portaGlissando[i]         := 0
038a8     6B 01 48 FC | 	wrbyte	#0, local55
038ac     AF D8 02 FB | 	rdlong	local56, fp
038b0     04 0E 06 F1 | 	add	objptr, #4
038b4     07 D9 02 F1 | 	add	local56, objptr
038b8                 | '     vibratoType[i]            := 0
038b8     6C 01 48 FC | 	wrbyte	#0, local56
038bc     AF DA 02 FB | 	rdlong	local57, fp
038c0     04 0E 06 F1 | 	add	objptr, #4
038c4     07 DB 02 F1 | 	add	local57, objptr
038c8                 | '     tremoloType[i]            := 0
038c8     6D 01 48 FC | 	wrbyte	#0, local57
038cc     AF DC 02 FB | 	rdlong	local58, fp
038d0     39 0E 86 F1 | 	sub	objptr, #57
038d4     07 DD 02 F1 | 	add	local58, objptr
038d8                 | '     tremoloPos[i]             := 0
038d8     6E 01 48 FC | 	wrbyte	#0, local58
038dc     AF DE 02 FB | 	rdlong	local59, fp
038e0     02 DE 66 F0 | 	shl	local59, #2
038e4     7C 0E 86 F1 | 	sub	objptr, #124
038e8     07 DF 02 F1 | 	add	local59, objptr
038ec                 | '     deltaVolume[i]            := 0
038ec     6F 01 68 FC | 	wrlong	#0, local59
038f0     AF E0 02 FB | 	rdlong	local60, fp
038f4     02 E0 66 F0 | 	shl	local60, #2
038f8     20 0E 86 F1 | 	sub	objptr, #32
038fc     07 E1 02 F1 | 	add	local60, objptr
03900                 | '     deltaPeriod[i]            := 0
03900     70 01 68 FC | 	wrlong	#0, local60
03904     AF E2 02 FB | 	rdlong	local61, fp
03908     A0 0E 06 F1 | 	add	objptr, #160
0390c     07 E3 02 F1 | 	add	local61, objptr
03910                 | '     resetTremolo[i]           := 0
03910     71 01 48 FC | 	wrbyte	#0, local61
03914     AF E4 02 FB | 	rdlong	local62, fp
03918     04 0E 06 F1 | 	add	objptr, #4
0391c     07 E5 02 F1 | 	add	local62, objptr
03920                 | '     resetVibrato[i]           := 0
03920     72 01 48 FC | 	wrbyte	#0, local62
03924     AF 84 02 FB | 	rdlong	local14, fp
03928     01 84 06 F1 | 	add	local14, #1
0392c     AF 84 62 FC | 	wrlong	local14, fp
03930     08 5E 85 F1 | 	sub	fp, #8
03934     04 84 5E F2 | 	cmps	local14, #4 wcz
03938     93 0F 86 F1 | 	sub	objptr, #403
0393c     7C FD 9F CD |  if_b	jmp	#LR__0140
03940     AF F0 03 F6 | 	mov	ptra, fp
03944     BF 00 A0 FD | 	call	#popregs_
03948                 | _trackerplayer_spin2_initModule_ret
03948     2D 00 64 FD | 	ret
0394c                 | 
0394c                 | ' 
0394c                 | ' 
0394c                 | ' ' This routine needs to be ticked X number of times per second
0394c                 | ' ' in order to advance the tracker play routine
0394c                 | ' '
0394c                 | ' PUB tick() | channel, sampleNumber, period, effect, i
0394c                 | _trackerplayer_spin2_tick
0394c     12 5A 05 F6 | 	mov	COUNT_, #18
03950     B0 00 A0 FD | 	call	#pushregs_
03954     30 F0 07 F1 | 	add	ptra, #48
03958                 | ' 
03958                 | '   if currentSongSpeed == 0
03958     A4 0E 06 F1 | 	add	objptr, #164
0395c     07 6B CA FA | 	rdbyte	local01, objptr wz
03960     A4 0E 86 F1 | 	sub	objptr, #164
03964                 | '     return
03964     34 03 90 AD |  if_e	jmp	#LR__0152
03968                 | ' 
03968                 | '   ' Iterate over the channels and process everything
03968                 | '   repeat channel from 0 to LAST_CHANNEL
03968     AF 00 68 FC | 	wrlong	#0, fp
0396c                 | LR__0141
0396c     04 5E 05 F1 | 	add	fp, #4
03970     AF 62 02 F6 | 	mov	arg04, fp
03974     04 5E 05 F1 | 	add	fp, #4
03978     AF 64 02 F6 | 	mov	arg05, fp
0397c     04 5E 05 F1 | 	add	fp, #4
03980     AF 66 02 F6 | 	mov	arg06, fp
03984     0C 5E 85 F1 | 	sub	fp, #12
03988                 | ' 
03988                 | '     getNoteData(channel, songPosition, patternRow, @sampleNumber, @period, @effect)
03988     AF 5C 02 FB | 	rdlong	arg01, fp
0398c     A3 0E 06 F1 | 	add	objptr, #163
03990     07 5F C2 FA | 	rdbyte	arg02, objptr
03994     01 0E 86 F1 | 	sub	objptr, #1
03998     07 61 C2 FA | 	rdbyte	arg03, objptr
0399c     7F 5E 06 F5 | 	and	arg02, #127
039a0     0C 0E 86 F1 | 	sub	objptr, #12
039a4     07 6D 02 FB | 	rdlong	local02, objptr
039a8     36 5F 02 F1 | 	add	arg02, local02
039ac                 | ' 
039ac                 | '   ' Get the note data for a specific channel/song position/pattern row
039ac                 | '   patternNumber := byte[songPositionsLut][position & 127]
039ac     2F 6F C2 FA | 	rdbyte	local03, arg02
039b0     0A 6E 66 F0 | 	shl	local03, #10
039b4     04 0E 86 F1 | 	sub	objptr, #4
039b8     07 71 02 FB | 	rdlong	local04, objptr
039bc     92 0E 86 F1 | 	sub	objptr, #146
039c0     37 71 02 F1 | 	add	local04, local03
039c4                 | '   patternPtr    := patternsData + (patternNumber << 10)
039c4     3F 60 06 F5 | 	and	arg03, #63
039c8     04 60 66 F0 | 	shl	arg03, #4
039cc     30 71 02 F1 | 	add	local04, arg03
039d0     03 5C 06 F5 | 	and	arg01, #3
039d4     02 5C 66 F0 | 	shl	arg01, #2
039d8     2E 71 02 F1 | 	add	local04, arg01
039dc                 | '   dataPtr       := patternPtr + ((row & 63) << 4) + ((channel &3 ) << 2)
039dc     38 73 C2 FA | 	rdbyte	local05, local04
039e0     18 72 66 F0 | 	shl	local05, #24
039e4     01 70 06 F1 | 	add	local04, #1
039e8     38 75 C2 FA | 	rdbyte	local06, local04
039ec     10 74 66 F0 | 	shl	local06, #16
039f0     3A 73 42 F5 | 	or	local05, local06
039f4     01 70 06 F1 | 	add	local04, #1
039f8     38 77 C2 FA | 	rdbyte	local07, local04
039fc     08 76 66 F0 | 	shl	local07, #8
03a00     3B 73 42 F5 | 	or	local05, local07
03a04     01 70 06 F1 | 	add	local04, #1
03a08     38 79 C2 FA | 	rdbyte	local08, local04
03a0c     3C 73 42 F5 | 	or	local05, local08
03a10                 | '   data          := (byte[dataPtr][0] << 24) | (byte[dataPtr][1] << 16) | (byte[dataPtr][2] << 8) | byte[dataPtr][3]
03a10     39 7B 02 F6 | 	mov	local09, local05
03a14     0C 7A 46 F0 | 	shr	local09, #12
03a18     0F 7A 06 F5 | 	and	local09, #15
03a1c     39 7D 02 F6 | 	mov	local10, local05
03a20     18 7C 46 F0 | 	shr	local10, #24
03a24     F0 7C 06 F5 | 	and	local10, #240
03a28     3E 7B 42 F5 | 	or	local09, local10
03a2c                 | ' 
03a2c                 | '   ' Extract the different sub parts from the data
03a2c                 | '   long[sampleNumber] := ((data >> 12) & $F) | ((data >> 24) & $F0)
03a2c     31 7B 62 FC | 	wrlong	local09, arg04
03a30     39 7F 02 F6 | 	mov	local11, local05
03a34     10 7E 46 F0 | 	shr	local11, #16
03a38     07 00 00 FF 
03a3c     FF 7F 06 F5 | 	and	local11, ##4095
03a40                 | '   long[period]       :=  (data >> 16) & $FFF
03a40     32 7F 62 FC | 	wrlong	local11, arg05
03a44     07 00 00 FF 
03a48     FF 73 06 F5 | 	and	local05, ##4095
03a4c                 | '   long[effect]       :=   data & $FFF
03a4c     33 73 62 FC | 	wrlong	local05, arg06
03a50                 | '     processChannel(channel, sampleNumber, period, effect)
03a50     AF 5C 02 FB | 	rdlong	arg01, fp
03a54     04 5E 05 F1 | 	add	fp, #4
03a58     AF 5E 02 FB | 	rdlong	arg02, fp
03a5c     04 5E 05 F1 | 	add	fp, #4
03a60     AF 60 02 FB | 	rdlong	arg03, fp
03a64     04 5E 05 F1 | 	add	fp, #4
03a68     AF 62 02 FB | 	rdlong	arg04, fp
03a6c     0C 5E 85 F1 | 	sub	fp, #12
03a70     0C 05 B0 FD | 	call	#_trackerplayer_spin2_processChannel
03a74     AF 80 02 FB | 	rdlong	local12, fp
03a78     01 80 06 F1 | 	add	local12, #1
03a7c     AF 80 62 FC | 	wrlong	local12, fp
03a80     04 80 5E F2 | 	cmps	local12, #4 wcz
03a84     E4 FE 9F CD |  if_b	jmp	#LR__0141
03a88                 | ' 
03a88                 | '   ' Incrementation the main counter that drives the whole play routine
03a88                 | '   if ++tickCounter >= (currentSongSpeed + patternDelay)
03a88     A1 0E 06 F1 | 	add	objptr, #161
03a8c     07 6B C2 FA | 	rdbyte	local01, objptr
03a90     01 6A 06 F1 | 	add	local01, #1
03a94     07 6B 42 FC | 	wrbyte	local01, objptr
03a98     03 0E 06 F1 | 	add	objptr, #3
03a9c     07 83 C2 FA | 	rdbyte	local13, objptr
03aa0     01 0E 06 F1 | 	add	objptr, #1
03aa4     07 85 C2 FA | 	rdbyte	local14, objptr
03aa8     42 83 02 F1 | 	add	local13, local14
03aac     04 0E 86 F1 | 	sub	objptr, #4
03ab0     07 87 C2 FA | 	rdbyte	local15, objptr
03ab4     A1 0E 86 F1 | 	sub	objptr, #161
03ab8     41 87 5A F2 | 	cmps	local15, local13 wcz
03abc                 | '     tickCounter := 0
03abc     A1 0E 06 31 |  if_ae	add	objptr, #161
03ac0     07 01 48 3C |  if_ae	wrbyte	#0, objptr
03ac4     A1 0E 86 31 |  if_ae	sub	objptr, #161
03ac8                 | ' 
03ac8                 | '   ' If the tick is zero, increment the other counters and do some song positioning handling
03ac8                 | '   if tickCounter == 0
03ac8     A1 0E 06 F1 | 	add	objptr, #161
03acc     07 6B CA FA | 	rdbyte	local01, objptr wz
03ad0     A1 0E 86 F1 | 	sub	objptr, #161
03ad4     C4 01 90 5D |  if_ne	jmp	#LR__0151
03ad8                 | ' 
03ad8                 | '     ' Handle the "pattern repeat" command, "E6"
03ad8                 | '     if cmdE6_updatePositionCommon
03ad8     F5 0F 06 F1 | 	add	objptr, #501
03adc     07 6B CA FA | 	rdbyte	local01, objptr wz
03ae0     F5 0F 86 F1 | 	sub	objptr, #501
03ae4     8C 00 90 AD |  if_e	jmp	#LR__0145
03ae8                 | '       repeat i from 0 to LAST_CHANNEL
03ae8     10 5E 05 F1 | 	add	fp, #16
03aec     AF 00 68 FC | 	wrlong	#0, fp
03af0     10 5E 85 F1 | 	sub	fp, #16
03af4     7C C5 9F FE | 	loc	pa,	#(@LR__0144-@LR__0142)
03af8     93 00 A0 FD | 	call	#FCACHE_LOAD_
03afc                 | LR__0142
03afc                 | '         if cmdE6_updatePosition[i]
03afc     10 5E 05 F1 | 	add	fp, #16
03b00     AF 80 02 FB | 	rdlong	local12, fp
03b04     10 5E 85 F1 | 	sub	fp, #16
03b08     F1 0F 06 F1 | 	add	objptr, #497
03b0c     07 81 02 F1 | 	add	local12, objptr
03b10     40 85 CA FA | 	rdbyte	local14, local12 wz
03b14     F1 0F 86 F1 | 	sub	objptr, #497
03b18     24 00 90 AD |  if_e	jmp	#LR__0143
03b1c     10 5E 05 F1 | 	add	fp, #16
03b20     AF 88 02 FB | 	rdlong	local16, fp
03b24     10 5E 85 F1 | 	sub	fp, #16
03b28     E9 0F 06 F1 | 	add	objptr, #489
03b2c     07 89 02 F1 | 	add	local16, objptr
03b30                 | '           patternRow := cmdE6_memory[i]
03b30     44 81 C2 FA | 	rdbyte	local12, local16
03b34     47 0F 86 F1 | 	sub	objptr, #327
03b38     07 81 42 FC | 	wrbyte	local12, objptr
03b3c     A2 0E 86 F1 | 	sub	objptr, #162
03b40                 | LR__0143
03b40     10 5E 05 F1 | 	add	fp, #16
03b44     AF 8A 02 FB | 	rdlong	local17, fp
03b48     F1 0F 06 F1 | 	add	objptr, #497
03b4c     07 8B 02 F1 | 	add	local17, objptr
03b50                 | '         cmdE6_updatePosition[i] := false
03b50     45 01 48 FC | 	wrbyte	#0, local17
03b54     AF 80 02 FB | 	rdlong	local12, fp
03b58     01 80 06 F1 | 	add	local12, #1
03b5c     AF 80 62 FC | 	wrlong	local12, fp
03b60     10 5E 85 F1 | 	sub	fp, #16
03b64     04 80 5E F2 | 	cmps	local12, #4 wcz
03b68     F1 0F 86 F1 | 	sub	objptr, #497
03b6c     8C FF 9F CD |  if_b	jmp	#LR__0142
03b70                 | LR__0144
03b70     CC 00 90 FD | 	jmp	#LR__0149
03b74                 | LR__0145
03b74                 | ' 
03b74                 | '     ' Handle the "skip to next pattern with offset command", "D"
03b74                 | '     elseif cmdD_updatePosition
03b74     E6 0F 06 F1 | 	add	objptr, #486
03b78     07 6B CA FA | 	rdbyte	local01, objptr wz
03b7c     E6 0F 86 F1 | 	sub	objptr, #486
03b80     64 00 90 AD |  if_e	jmp	#LR__0146
03b84                 | '       if ++songPosition >= songLength
03b84     A3 0E 06 F1 | 	add	objptr, #163
03b88     07 6B C2 FA | 	rdbyte	local01, objptr
03b8c     01 6A 06 F1 | 	add	local01, #1
03b90     07 6B 42 FC | 	wrbyte	local01, objptr
03b94     07 83 C2 FA | 	rdbyte	local13, objptr
03b98     09 0E 86 F1 | 	sub	objptr, #9
03b9c     07 85 C2 FA | 	rdbyte	local14, objptr
03ba0     9A 0E 86 F1 | 	sub	objptr, #154
03ba4     42 83 5A F2 | 	cmps	local13, local14 wcz
03ba8                 | '         songPosition := 0
03ba8     A3 0E 06 31 |  if_ae	add	objptr, #163
03bac     07 01 48 3C |  if_ae	wrbyte	#0, objptr
03bb0     A3 0E 86 31 |  if_ae	sub	objptr, #163
03bb4     E4 0F 06 F1 | 	add	objptr, #484
03bb8     07 81 C2 FA | 	rdbyte	local12, objptr
03bbc     40 8D 02 F6 | 	mov	local18, local12
03bc0     02 8C 66 F0 | 	shl	local18, #2
03bc4     40 8D 02 F1 | 	add	local18, local12
03bc8     01 8C 66 F0 | 	shl	local18, #1
03bcc     01 0E 06 F1 | 	add	objptr, #1
03bd0     07 81 C2 FA | 	rdbyte	local12, objptr
03bd4     40 8D 02 F1 | 	add	local18, local12
03bd8                 | ' 
03bd8                 | '       patternRow := (cmdD_memoryX * 10) + cmdD_memoryY
03bd8     43 0F 86 F1 | 	sub	objptr, #323
03bdc     07 8D 42 FC | 	wrbyte	local18, objptr
03be0     A2 0E 86 F1 | 	sub	objptr, #162
03be4                 | ' 
03be4                 | '     ' If no "jump to row commands" are active, do a normal pattern incrementation
03be4                 | '     else
03be4     58 00 90 FD | 	jmp	#LR__0148
03be8                 | LR__0146
03be8                 | '       if ++patternRow >= PATTERN_LENGTH
03be8     A2 0E 06 F1 | 	add	objptr, #162
03bec     07 6B C2 FA | 	rdbyte	local01, objptr
03bf0     01 6A 06 F1 | 	add	local01, #1
03bf4     07 6B 42 FC | 	wrbyte	local01, objptr
03bf8     07 83 C2 FA | 	rdbyte	local13, objptr
03bfc     A2 0E 86 F1 | 	sub	objptr, #162
03c00     40 82 5E F2 | 	cmps	local13, #64 wcz
03c04     38 00 90 CD |  if_b	jmp	#LR__0147
03c08                 | '         patternRow := 0
03c08     A2 0E 06 F1 | 	add	objptr, #162
03c0c     07 01 48 FC | 	wrbyte	#0, objptr
03c10                 | ' 
03c10                 | '         if ++songPosition >= songLength
03c10     01 0E 06 F1 | 	add	objptr, #1
03c14     07 6B C2 FA | 	rdbyte	local01, objptr
03c18     01 6A 06 F1 | 	add	local01, #1
03c1c     07 6B 42 FC | 	wrbyte	local01, objptr
03c20     07 83 C2 FA | 	rdbyte	local13, objptr
03c24     09 0E 86 F1 | 	sub	objptr, #9
03c28     07 85 C2 FA | 	rdbyte	local14, objptr
03c2c     9A 0E 86 F1 | 	sub	objptr, #154
03c30     42 83 5A F2 | 	cmps	local13, local14 wcz
03c34                 | '           songPosition := 0
03c34     A3 0E 06 31 |  if_ae	add	objptr, #163
03c38     07 01 48 3C |  if_ae	wrbyte	#0, objptr
03c3c     A3 0E 86 31 |  if_ae	sub	objptr, #163
03c40                 | LR__0147
03c40                 | LR__0148
03c40                 | LR__0149
03c40                 | ' 
03c40                 | '     ' Handle "jump to song position" command, "B"
03c40                 | '     if cmdB_updatePosition
03c40     E8 0F 06 F1 | 	add	objptr, #488
03c44     07 6B CA FA | 	rdbyte	local01, objptr wz
03c48     E8 0F 86 F1 | 	sub	objptr, #488
03c4c     28 00 90 AD |  if_e	jmp	#LR__0150
03c50                 | ' 
03c50                 | '       songPosition := cmdB_memoryZ
03c50     E7 0F 06 F1 | 	add	objptr, #487
03c54     07 6B C2 FA | 	rdbyte	local01, objptr
03c58     44 0F 86 F1 | 	sub	objptr, #324
03c5c     07 6B 42 FC | 	wrbyte	local01, objptr
03c60                 | ' 
03c60                 | '       ifnot cmdD_updatePosition
03c60     43 0F 06 F1 | 	add	objptr, #323
03c64     07 6B CA FA | 	rdbyte	local01, objptr wz
03c68     E6 0F 86 F1 | 	sub	objptr, #486
03c6c                 | '         patternRow := 0
03c6c     A2 0E 06 A1 |  if_e	add	objptr, #162
03c70     07 01 48 AC |  if_e	wrbyte	#0, objptr
03c74     A2 0E 86 A1 |  if_e	sub	objptr, #162
03c78                 | LR__0150
03c78                 | ' 
03c78                 | '     ' We need to be sure that all positioning commands are reset for the next tick
03c78                 | '     cmdE6_updatePositionCommon := false
03c78     F5 0F 06 F1 | 	add	objptr, #501
03c7c     07 01 48 FC | 	wrbyte	#0, objptr
03c80                 | '     cmdB_updatePosition := false
03c80     0D 0E 86 F1 | 	sub	objptr, #13
03c84     07 01 48 FC | 	wrbyte	#0, objptr
03c88                 | '     cmdD_updatePosition := false
03c88     02 0E 86 F1 | 	sub	objptr, #2
03c8c     07 01 48 FC | 	wrbyte	#0, objptr
03c90                 | '     patternDelay := 0
03c90     41 0F 86 F1 | 	sub	objptr, #321
03c94     07 01 48 FC | 	wrbyte	#0, objptr
03c98     A5 0E 86 F1 | 	sub	objptr, #165
03c9c                 | LR__0151
03c9c                 | LR__0152
03c9c     AF F0 03 F6 | 	mov	ptra, fp
03ca0     BF 00 A0 FD | 	call	#popregs_
03ca4                 | _trackerplayer_spin2_tick_ret
03ca4     2D 00 64 FD | 	ret
03ca8                 | 
03ca8                 | ' 
03ca8                 | ' 
03ca8                 | ' PRI amigaPeriodToNote(period, fTune) : r | i
03ca8                 | _trackerplayer_spin2_amigaPeriodToNote
03ca8                 | ' 
03ca8                 | '   repeat i from 0 to LAST_POS_IN_PERIOD_TBL
03ca8     00 30 06 F6 | 	mov	_var01, #0
03cac     9C C3 9F FE | 	loc	pa,	#(@LR__0154-@LR__0153)
03cb0     93 00 A0 FD | 	call	#FCACHE_LOAD_
03cb4                 | LR__0153
03cb4                 | '     if (word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][i]) <= period
03cb4     06 00 00 FF 
03cb8     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
03cbc     14 33 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
03cc0     2F 35 02 F6 | 	mov	_var03, arg02
03cc4     03 34 66 F0 | 	shl	_var03, #3
03cc8     2F 35 02 F1 | 	add	_var03, arg02
03ccc     03 34 66 F0 | 	shl	_var03, #3
03cd0     1A 33 02 F1 | 	add	_var02, _var03
03cd4     18 37 02 F6 | 	mov	_var04, _var01
03cd8     01 36 66 F0 | 	shl	_var04, #1
03cdc     19 37 02 F1 | 	add	_var04, _var02
03ce0     1B 39 E2 FA | 	rdword	_var05, _var04
03ce4     2E 39 5A F2 | 	cmps	_var05, arg01 wcz
03ce8                 | '       quit
03ce8     06 00 00 FF 
03cec     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
03cf0     0C 00 90 ED |  if_be	jmp	#LR__0155
03cf4     01 30 06 F1 | 	add	_var01, #1
03cf8     24 30 5E F2 | 	cmps	_var01, #36 wcz
03cfc     B4 FF 9F CD |  if_b	jmp	#LR__0153
03d00                 | LR__0154
03d00                 | LR__0155
03d00                 | ' 
03d00                 | '   return i
03d00     18 2B 02 F6 | 	mov	result1, _var01
03d04                 | _trackerplayer_spin2_amigaPeriodToNote_ret
03d04     2D 00 64 FD | 	ret
03d08                 | 
03d08                 | ' 
03d08                 | ' 
03d08                 | ' PRI retunePeriod(period, fTune) | noteNumber
03d08                 | _trackerplayer_spin2_retunePeriod
03d08     06 5A 05 F6 | 	mov	COUNT_, #6
03d0c     B0 00 A0 FD | 	call	#pushregs_
03d10     2E 6B 02 F6 | 	mov	local01, arg01
03d14     2F 6D 02 F6 | 	mov	local02, arg02
03d18                 | ' 
03d18                 | '   if period > 0 and fTune < 16
03d18     00 6A 5E F2 | 	cmps	local01, #0 wcz
03d1c     50 00 90 ED |  if_be	jmp	#LR__0156
03d20     10 6C 5E F2 | 	cmps	local02, #16 wcz
03d24     48 00 90 3D |  if_ae	jmp	#LR__0156
03d28                 | '     noteNumber := amigaPeriodToNote(word[period], 0)
03d28     35 5D E2 FA | 	rdword	arg01, local01
03d2c     00 5E 06 F6 | 	mov	arg02, #0
03d30     74 FF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
03d34     15 6F 02 F6 | 	mov	local03, result1
03d38     06 00 00 FF 
03d3c     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
03d40     14 71 02 F6 | 	mov	local04, ptr__trackerplayer_spin2_dat__
03d44     36 73 02 F6 | 	mov	local05, local02
03d48     03 72 66 F0 | 	shl	local05, #3
03d4c     36 73 02 F1 | 	add	local05, local02
03d50     03 72 66 F0 | 	shl	local05, #3
03d54     39 71 02 F1 | 	add	local04, local05
03d58     01 6E 66 F0 | 	shl	local03, #1
03d5c     38 6F 02 F1 | 	add	local03, local04
03d60                 | '     word[period] := word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][noteNumber]
03d60     37 75 E2 FA | 	rdword	local06, local03
03d64     35 75 52 FC | 	wrword	local06, local01
03d68     06 00 00 FF 
03d6c     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
03d70                 | LR__0156
03d70     AF F0 03 F6 | 	mov	ptra, fp
03d74     BF 00 A0 FD | 	call	#popregs_
03d78                 | _trackerplayer_spin2_retunePeriod_ret
03d78     2D 00 64 FD | 	ret
03d7c                 | 
03d7c                 | ' 
03d7c                 | ' 
03d7c                 | ' pub getSampleInfo(sampleNumber, samplePtr, sampleLength, fTune, volume, repeatPoint, repeatLength) | sampleInfoPtr
03d7c                 | _trackerplayer_spin2_getSampleInfo
03d7c     2E 31 0A F6 | 	mov	_var01, arg01 wz
03d80                 | ' 
03d80                 | '   if sampleNumber == 0 or sampleNumber > LAST_SAMPLE_NUMBER ' Can't go beyond sample 31
03d80     08 00 90 AD |  if_e	jmp	#LR__0157
03d84     1F 30 5E F2 | 	cmps	_var01, #31 wcz
03d88     08 00 90 ED |  if_be	jmp	#LR__0158
03d8c                 | LR__0157
03d8c                 | '     long[samplePtr] := 0
03d8c     2F 01 68 FC | 	wrlong	#0, arg02
03d90                 | '     return
03d90     E0 00 90 FD | 	jmp	#_trackerplayer_spin2_getSampleInfo_ret
03d94                 | LR__0158
03d94                 | ' 
03d94                 | '   sampleNumber--
03d94     01 30 86 F1 | 	sub	_var01, #1
03d98     18 33 02 F6 | 	mov	_var02, _var01
03d9c     04 32 66 F0 | 	shl	_var02, #4
03da0     18 33 82 F1 | 	sub	_var02, _var01
03da4     01 32 66 F0 | 	shl	_var02, #1
03da8     0A 0E 06 F1 | 	add	objptr, #10
03dac     07 35 02 FB | 	rdlong	_var03, objptr
03db0     19 35 02 F1 | 	add	_var03, _var02
03db4                 | '   sampleInfoPtr      := samplesInfoLut + (sampleNumber * 30)
03db4     1A 37 02 F6 | 	mov	_var04, _var03
03db8     16 36 06 F1 | 	add	_var04, #22
03dbc     1B 39 C2 FA | 	rdbyte	_var05, _var04
03dc0     08 38 66 F0 | 	shl	_var05, #8
03dc4     1A 3B 02 F6 | 	mov	_var06, _var03
03dc8     17 3A 06 F1 | 	add	_var06, #23
03dcc     1D 3D C2 FA | 	rdbyte	_var07, _var06
03dd0     1E 39 42 F5 | 	or	_var05, _var07
03dd4     01 38 66 F0 | 	shl	_var05, #1
03dd8                 | '   long[sampleLength] := ((byte[sampleInfoPtr + 22] << 8) | byte[sampleInfoPtr + 23]) << 1
03dd8     30 39 62 FC | 	wrlong	_var05, arg03
03ddc     1A 3F 02 F6 | 	mov	_var08, _var03
03de0     18 3E 06 F1 | 	add	_var08, #24
03de4                 | '   long[fTune]        :=   byte[sampleInfoPtr + 24]
03de4     1F 41 C2 FA | 	rdbyte	_var09, _var08
03de8     31 41 62 FC | 	wrlong	_var09, arg04
03dec     1A 43 02 F6 | 	mov	_var10, _var03
03df0     19 42 06 F1 | 	add	_var10, #25
03df4                 | '   long[volume]       :=   byte[sampleInfoPtr + 25]
03df4     21 41 C2 FA | 	rdbyte	_var09, _var10
03df8     32 41 62 FC | 	wrlong	_var09, arg05
03dfc     1A 45 02 F6 | 	mov	_var11, _var03
03e00     1A 44 06 F1 | 	add	_var11, #26
03e04     22 47 C2 FA | 	rdbyte	_var12, _var11
03e08     08 46 66 F0 | 	shl	_var12, #8
03e0c     1A 49 02 F6 | 	mov	_var13, _var03
03e10     1B 48 06 F1 | 	add	_var13, #27
03e14     24 3D C2 FA | 	rdbyte	_var07, _var13
03e18     1E 47 42 F5 | 	or	_var12, _var07
03e1c     01 46 66 F0 | 	shl	_var12, #1
03e20                 | '   long[repeatPoint]  := ((byte[sampleInfoPtr + 26] << 8) | byte[sampleInfoPtr + 27]) << 1
03e20     33 47 62 FC | 	wrlong	_var12, arg06
03e24     1A 4B 02 F6 | 	mov	_var14, _var03
03e28     1C 4A 06 F1 | 	add	_var14, #28
03e2c     25 4D C2 FA | 	rdbyte	_var15, _var14
03e30     08 4C 66 F0 | 	shl	_var15, #8
03e34     1D 34 06 F1 | 	add	_var03, #29
03e38     1A 3D C2 FA | 	rdbyte	_var07, _var03
03e3c     1E 4D 42 F5 | 	or	_var15, _var07
03e40     01 4C 66 F0 | 	shl	_var15, #1
03e44                 | '   long[repeatLength] := ((byte[sampleInfoPtr + 28] << 8) | byte[sampleInfoPtr + 29]) << 1
03e44     34 4D 62 FC | 	wrlong	_var15, arg07
03e48     02 30 66 F0 | 	shl	_var01, #2
03e4c     08 0E 06 F1 | 	add	objptr, #8
03e50     07 31 02 F1 | 	add	_var01, objptr
03e54                 | '   long[samplePtr]    := samplesPtrLut[sampleNumber]
03e54     18 41 02 FB | 	rdlong	_var09, _var01
03e58     2F 41 62 FC | 	wrlong	_var09, arg02
03e5c                 | ' 
03e5c                 | '   if long[repeatLength] == 2 && long[repeatPoint] == 0
03e5c     34 41 02 FB | 	rdlong	_var09, arg07
03e60     02 40 0E F2 | 	cmp	_var09, #2 wz
03e64     12 0E 86 F1 | 	sub	objptr, #18
03e68     08 00 90 5D |  if_ne	jmp	#LR__0159
03e6c     33 3D 0A FB | 	rdlong	_var07, arg06 wz
03e70                 | '     long[repeatLength] := 1
03e70     34 03 68 AC |  if_e	wrlong	#1, arg07
03e74                 | LR__0159
03e74                 | _trackerplayer_spin2_getSampleInfo_ret
03e74     2D 00 64 FD | 	ret
03e78                 | 
03e78                 | ' 
03e78                 | ' 
03e78                 | ' PRI triggerNote(channel)
03e78                 | _trackerplayer_spin2_triggerNote
03e78     2E 31 02 F6 | 	mov	_var01, arg01
03e7c     02 30 66 F0 | 	shl	_var01, #2
03e80     47 0F 06 F1 | 	add	objptr, #327
03e84     07 31 02 F1 | 	add	_var01, objptr
03e88     2E 33 02 F6 | 	mov	_var02, arg01
03e8c     90 0E 86 F1 | 	sub	objptr, #144
03e90                 | ' 
03e90                 | '   currSampleNr[channel]     := lastSetSampleNr[channel]
03e90     18 35 02 FB | 	rdlong	_var03, _var01
03e94     07 33 02 F1 | 	add	_var02, objptr
03e98     19 35 42 FC | 	wrbyte	_var03, _var02
03e9c     2E 37 02 F6 | 	mov	_var04, arg01
03ea0     02 36 66 F0 | 	shl	_var04, #2
03ea4     80 0E 06 F1 | 	add	objptr, #128
03ea8     07 37 02 F1 | 	add	_var04, objptr
03eac     2E 39 02 F6 | 	mov	_var05, arg01
03eb0     02 38 66 F0 | 	shl	_var05, #2
03eb4     90 0E 86 F1 | 	sub	objptr, #144
03eb8                 | '   currSamplePtr[channel]    := lastSetSamplePtr[channel]              ' This triggers the actual sample playback
03eb8     1B 35 02 FB | 	rdlong	_var03, _var04
03ebc     07 39 02 F1 | 	add	_var05, objptr
03ec0     1C 35 62 FC | 	wrlong	_var03, _var05
03ec4     2E 3B 02 F6 | 	mov	_var06, arg01
03ec8     02 3A 66 F0 | 	shl	_var06, #2
03ecc     80 0E 06 F1 | 	add	objptr, #128
03ed0     07 3B 02 F1 | 	add	_var06, objptr
03ed4     2E 3D 02 F6 | 	mov	_var07, arg01
03ed8     02 3C 66 F0 | 	shl	_var07, #2
03edc     48 0E 86 F1 | 	sub	objptr, #72
03ee0                 | '   currPeriod[channel]       := lastSetPeriod[channel]
03ee0     1D 35 02 FB | 	rdlong	_var03, _var06
03ee4     07 3D 02 F1 | 	add	_var07, objptr
03ee8     1E 35 62 FC | 	wrlong	_var03, _var07
03eec     2E 3F 02 F6 | 	mov	_var08, arg01
03ef0     02 3E 66 F0 | 	shl	_var08, #2
03ef4     78 0E 06 F1 | 	add	objptr, #120
03ef8     07 3F 02 F1 | 	add	_var08, objptr
03efc     2E 41 02 F6 | 	mov	_var09, arg01
03f00     01 40 66 F0 | 	shl	_var09, #1
03f04     9C 0E 86 F1 | 	sub	objptr, #156
03f08                 | '   currSampleLength[channel] := lastSetSampleLength[channel]
03f08     1F 35 02 FB | 	rdlong	_var03, _var08
03f0c     07 41 02 F1 | 	add	_var09, objptr
03f10     20 35 52 FC | 	wrword	_var03, _var09
03f14     2E 43 02 F6 | 	mov	_var10, arg01
03f18     02 42 66 F0 | 	shl	_var10, #2
03f1c     AC 0E 06 F1 | 	add	objptr, #172
03f20     07 43 02 F1 | 	add	_var10, objptr
03f24     2E 45 02 F6 | 	mov	_var11, arg01
03f28     02 44 66 F0 | 	shl	_var11, #2
03f2c     A4 0E 86 F1 | 	sub	objptr, #164
03f30                 | '   currRepeatLength[channel] := lastSetRepeatLength[channel]
03f30     21 35 02 FB | 	rdlong	_var03, _var10
03f34     07 45 02 F1 | 	add	_var11, objptr
03f38     22 35 62 FC | 	wrlong	_var03, _var11
03f3c     2E 47 02 F6 | 	mov	_var12, arg01
03f40     02 46 66 F0 | 	shl	_var12, #2
03f44     B4 0E 06 F1 | 	add	objptr, #180
03f48     07 47 02 F1 | 	add	_var12, objptr
03f4c     2E 49 02 F6 | 	mov	_var13, arg01
03f50     01 48 66 F0 | 	shl	_var13, #1
03f54     A0 0E 86 F1 | 	sub	objptr, #160
03f58                 | '   currRepeatPoint[channel]  := lastSetRepeatPoint[channel]
03f58     23 35 02 FB | 	rdlong	_var03, _var12
03f5c     07 49 02 F1 | 	add	_var13, objptr
03f60     24 35 52 FC | 	wrword	_var03, _var13
03f64     1F 0F 06 F1 | 	add	objptr, #287
03f68     07 5D 02 F1 | 	add	arg01, objptr
03f6c     2E 4B C2 FA | 	rdbyte	_var14, arg01
03f70     01 4A 06 F1 | 	add	_var14, #1
03f74                 | '   trigger[channel]+=1                                                 ' @pik33 _ I have to know when the note is started
03f74     2E 4B 42 FC | 	wrbyte	_var14, arg01
03f78     F6 0F 86 F1 | 	sub	objptr, #502
03f7c                 | _trackerplayer_spin2_triggerNote_ret
03f7c     2D 00 64 FD | 	ret
03f80                 | 
03f80                 | ' 
03f80                 | ' PRI processChannel(channel, sampleNumber, period, effect) | sampleLength, volume, repeatPoint, repeatLength, samplePtr
03f80                 | _trackerplayer_spin2_processChannel
03f80     31 5A 05 F6 | 	mov	COUNT_, #49
03f84     B0 00 A0 FD | 	call	#pushregs_
03f88     D0 F0 07 F1 | 	add	ptra, #208
03f8c     AF 5C 62 FC | 	wrlong	arg01, fp
03f90     04 5E 05 F1 | 	add	fp, #4
03f94     AF 5E 62 FC | 	wrlong	arg02, fp
03f98     04 5E 05 F1 | 	add	fp, #4
03f9c     AF 60 62 FC | 	wrlong	arg03, fp
03fa0     04 5E 05 F1 | 	add	fp, #4
03fa4     AF 62 62 FC | 	wrlong	arg04, fp
03fa8     0C 5E 85 F1 | 	sub	fp, #12
03fac                 | ' 
03fac                 | '   channel := channel & 3
03fac     AF 6A 02 FB | 	rdlong	local01, fp
03fb0     03 6A 06 F5 | 	and	local01, #3
03fb4     AF 6A 62 FC | 	wrlong	local01, fp
03fb8     0C 5E 05 F1 | 	add	fp, #12
03fbc     AF 6C 02 FB | 	rdlong	local02, fp
03fc0     08 6C 46 F0 | 	shr	local02, #8
03fc4     36 6F 02 F6 | 	mov	local03, local02
03fc8     0F 6E 06 F5 | 	and	local03, #15
03fcc                 | '   cmd     := (effect >> 8) & $F
03fcc     BA 0F 06 F1 | 	add	objptr, #442
03fd0     07 6F 42 FC | 	wrbyte	local03, objptr
03fd4     AF 70 02 FB | 	rdlong	local04, fp
03fd8     04 70 46 F0 | 	shr	local04, #4
03fdc     38 73 02 F6 | 	mov	local05, local04
03fe0     0F 72 06 F5 | 	and	local05, #15
03fe4                 | '   x       := (effect >> 4) & $F
03fe4     03 0E 86 F1 | 	sub	objptr, #3
03fe8     07 73 42 FC | 	wrbyte	local05, objptr
03fec     AF 74 02 FB | 	rdlong	local06, fp
03ff0     0F 74 06 F5 | 	and	local06, #15
03ff4                 | '   y       := (effect     ) & $F
03ff4     01 0E 06 F1 | 	add	objptr, #1
03ff8     07 75 42 FC | 	wrbyte	local06, objptr
03ffc     AF 76 02 FB | 	rdlong	local07, fp
04000     0C 5E 85 F1 | 	sub	fp, #12
04004     FF 76 06 F5 | 	and	local07, #255
04008                 | '   z       := (effect     ) & $FF
04008     01 0E 06 F1 | 	add	objptr, #1
0400c     07 77 42 FC | 	wrbyte	local07, objptr
04010                 | ' 
04010                 | '   ' Handle everything that executes on "tick zero"
04010                 | '   if tickCounter == 0
04010     18 0F 86 F1 | 	sub	objptr, #280
04014     07 6B CA FA | 	rdbyte	local01, objptr wz
04018     A1 0E 86 F1 | 	sub	objptr, #161
0401c     F0 03 90 5D |  if_ne	jmp	#LR__0170
04020     AF 78 02 FB | 	rdlong	local08, fp
04024     02 78 66 F0 | 	shl	local08, #2
04028     EF 0E 06 F1 | 	add	objptr, #239
0402c     07 79 02 F1 | 	add	local08, objptr
04030                 | ' 
04030                 | '     ' These two variables are used for vibrato/tremolo/arpeggio effects and needs to be reset at "tick zero"
04030                 | '     deltaPeriod[channel] := 0
04030     3C 01 68 FC | 	wrlong	#0, local08
04034     AF 7A 02 FB | 	rdlong	local09, fp
04038     02 7A 66 F0 | 	shl	local09, #2
0403c     20 0E 06 F1 | 	add	objptr, #32
04040     07 7B 02 F1 | 	add	local09, objptr
04044                 | '     deltaVolume[channel] := 0
04044     3D 01 68 FC | 	wrlong	#0, local09
04048                 | ' 
04048                 | '     ' If the sample number is zero, the memory from "last set non zero sample number" is used
04048                 | '     if sampleNumber > 0
04048     04 5E 05 F1 | 	add	fp, #4
0404c     AF 6A 02 FB | 	rdlong	local01, fp
04050     04 5E 85 F1 | 	sub	fp, #4
04054     00 6A 5E F2 | 	cmps	local01, #0 wcz
04058     0F 0F 86 F1 | 	sub	objptr, #271
0405c     20 00 90 ED |  if_be	jmp	#LR__0160
04060     AF 7C 02 FB | 	rdlong	local10, fp
04064     E0 0F 06 F1 | 	add	objptr, #480
04068     07 7D 02 F1 | 	add	local10, objptr
0406c                 | '       sampleNumber_memory[channel] := sampleNumber
0406c     04 5E 05 F1 | 	add	fp, #4
04070     AF 6A 02 FB | 	rdlong	local01, fp
04074     04 5E 85 F1 | 	sub	fp, #4
04078     3E 6B 42 FC | 	wrbyte	local01, local10
0407c     E0 0F 86 F1 | 	sub	objptr, #480
04080                 | LR__0160
04080     AF 7E 02 FB | 	rdlong	local11, fp
04084     E0 0F 06 F1 | 	add	objptr, #480
04088     07 7F 02 F1 | 	add	local11, objptr
0408c     20 5E 05 F1 | 	add	fp, #32
04090     AF 80 02 F6 | 	mov	local12, fp
04094     10 5E 85 F1 | 	sub	fp, #16
04098     AF 82 02 F6 | 	mov	local13, fp
0409c     31 0E 86 F1 | 	sub	objptr, #49
040a0     07 85 02 F6 | 	mov	local14, objptr
040a4     04 5E 05 F1 | 	add	fp, #4
040a8     AF 86 02 F6 | 	mov	local15, fp
040ac     04 5E 05 F1 | 	add	fp, #4
040b0     AF 88 02 F6 | 	mov	local16, fp
040b4     04 5E 05 F1 | 	add	fp, #4
040b8     AF 8A 02 F6 | 	mov	local17, fp
040bc                 | ' 
040bc                 | '     ' Get data for the sample in use by the current channel (uses the memorized sample number)
040bc                 | '     getSampleInfo(sampleNumber_memory[channel], @samplePtr, @sampleLength, @fineTune, @volume, @repeatPoint, @repeatLength)
040bc     3F 5D C2 FA | 	rdbyte	arg01, local11
040c0     42 63 02 F6 | 	mov	arg04, local14
040c4     43 8D 02 F6 | 	mov	local18, local15
040c8     44 8F 02 F6 | 	mov	local19, local16
040cc     45 91 02 F6 | 	mov	local20, local17
040d0     40 5F 02 F6 | 	mov	arg02, local12
040d4     41 61 02 F6 | 	mov	arg03, local13
040d8     46 65 02 F6 | 	mov	arg05, local18
040dc     47 67 02 F6 | 	mov	arg06, local19
040e0     48 69 02 F6 | 	mov	arg07, local20
040e4     AF 0F 86 F1 | 	sub	objptr, #431
040e8     1C 5E 85 F1 | 	sub	fp, #28
040ec     8C FC BF FD | 	call	#_trackerplayer_spin2_getSampleInfo
040f0                 | ' 
040f0                 | '     ' Only set volume according to the default sample configuration if the sample number is non zero,
040f0                 | '     ' this allows for some tricks when used in combination with the sample number memory (commonly used in protracker modules)
040f0                 | '     if sampleNumber > 0
040f0     04 5E 05 F1 | 	add	fp, #4
040f4     AF 6A 02 FB | 	rdlong	local01, fp
040f8     04 5E 85 F1 | 	sub	fp, #4
040fc     00 6A 5E F2 | 	cmps	local01, #0 wcz
04100     24 00 90 ED |  if_be	jmp	#LR__0161
04104     AF 92 02 FB | 	rdlong	local21, fp
04108     02 92 66 F0 | 	shl	local21, #2
0410c     FF 0E 06 F1 | 	add	objptr, #255
04110     07 93 02 F1 | 	add	local21, objptr
04114                 | '       currVolume[channel] := volume
04114     14 5E 05 F1 | 	add	fp, #20
04118     AF 6A 02 FB | 	rdlong	local01, fp
0411c     14 5E 85 F1 | 	sub	fp, #20
04120     49 6B 62 FC | 	wrlong	local01, local21
04124     FF 0E 86 F1 | 	sub	objptr, #255
04128                 | LR__0161
04128                 | ' 
04128                 | '     ' Handle all commands that executes on "zero tick"
04128                 | '     sampleOffset := 0
04128     B3 0F 06 F1 | 	add	objptr, #435
0412c     07 01 68 FC | 	wrlong	#0, objptr
04130     B3 0F 86 F1 | 	sub	objptr, #435
04134                 | '     handleZeroTickCommands(channel)
04134     AF 5C 02 FB | 	rdlong	arg01, fp
04138     60 03 B0 FD | 	call	#_trackerplayer_spin2_handleZeroTickCommands
0413c                 | ' 
0413c                 | '     ' Prepare sample data for triggering (now or later)
0413c                 | '     if period > 0
0413c     08 5E 05 F1 | 	add	fp, #8
04140     AF 6A 02 FB | 	rdlong	local01, fp
04144     08 5E 85 F1 | 	sub	fp, #8
04148     00 6A 5E F2 | 	cmps	local01, #0 wcz
0414c     C8 02 90 ED |  if_be	jmp	#LR__0171
04150     08 5E 05 F1 | 	add	fp, #8
04154     AF 94 02 F6 | 	mov	local22, fp
04158                 | ' 
04158                 | '       retunePeriod(@period, fineTune)
04158     AF 0F 06 F1 | 	add	objptr, #431
0415c     07 5F 02 FB | 	rdlong	arg02, objptr
04160     AF 0F 86 F1 | 	sub	objptr, #431
04164     4A 5D 02 F6 | 	mov	arg01, local22
04168     08 5E 85 F1 | 	sub	fp, #8
0416c     98 FB BF FD | 	call	#_trackerplayer_spin2_retunePeriod
04170     AF 96 02 FB | 	rdlong	local23, fp
04174     D3 0E 06 F1 | 	add	objptr, #211
04178     07 97 02 F1 | 	add	local23, objptr
0417c                 | '       currFineTune[channel]        := fineTune
0417c     DC 0E 06 F1 | 	add	objptr, #220
04180     07 6B 02 FB | 	rdlong	local01, objptr
04184     4B 6B 42 FC | 	wrbyte	local01, local23
04188     AF 98 02 FB | 	rdlong	local24, fp
0418c     02 98 66 F0 | 	shl	local24, #2
04190     88 0E 86 F1 | 	sub	objptr, #136
04194     07 99 02 F1 | 	add	local24, objptr
04198                 | '       lastSetPeriod[channel]       := period
04198     08 5E 05 F1 | 	add	fp, #8
0419c     AF 6A 02 FB | 	rdlong	local01, fp
041a0     4C 6B 62 FC | 	wrlong	local01, local24
041a4     08 5E 85 F1 | 	sub	fp, #8
041a8     AF 9A 02 FB | 	rdlong	local25, fp
041ac     02 9A 66 F0 | 	shl	local25, #2
041b0     40 0E 06 F1 | 	add	objptr, #64
041b4     07 9B 02 F1 | 	add	local25, objptr
041b8                 | '       lastSetRepeatLength[channel] := repeatLength
041b8     1C 5E 05 F1 | 	add	fp, #28
041bc     AF 6A 02 FB | 	rdlong	local01, fp
041c0     4D 6B 62 FC | 	wrlong	local01, local25
041c4     1C 5E 85 F1 | 	sub	fp, #28
041c8     AF 9C 02 FB | 	rdlong	local26, fp
041cc     02 9C 66 F0 | 	shl	local26, #2
041d0     10 0E 06 F1 | 	add	objptr, #16
041d4     07 9D 02 F1 | 	add	local26, objptr
041d8                 | '       lastSetRepeatPoint[channel]  := repeatPoint
041d8     18 5E 05 F1 | 	add	fp, #24
041dc     AF 6A 02 FB | 	rdlong	local01, fp
041e0     4E 6B 62 FC | 	wrlong	local01, local26
041e4     08 5E 05 F1 | 	add	fp, #8
041e8     AF 9E 02 FB | 	rdlong	local27, fp
041ec     20 5E 85 F1 | 	sub	fp, #32
041f0     3C 0E 06 F1 | 	add	objptr, #60
041f4     07 A1 02 FB | 	rdlong	local28, objptr
041f8     50 9F 02 F1 | 	add	local27, local28
041fc     AF A2 02 FB | 	rdlong	local29, fp
04200     02 A2 66 F0 | 	shl	local29, #2
04204     7C 0E 86 F1 | 	sub	objptr, #124
04208     07 A3 02 F1 | 	add	local29, objptr
0420c                 | '       lastSetSamplePtr[channel]    := samplePtr + sampleOffset
0420c     51 9F 62 FC | 	wrlong	local27, local29
04210     AF A4 02 FB | 	rdlong	local30, fp
04214     02 A4 66 F0 | 	shl	local30, #2
04218     10 0E 06 F1 | 	add	objptr, #16
0421c     07 A5 02 F1 | 	add	local30, objptr
04220                 | '       lastSetSampleNr[channel]     := sampleNumber
04220     04 5E 05 F1 | 	add	fp, #4
04224     AF 6A 02 FB | 	rdlong	local01, fp
04228     52 6B 62 FC | 	wrlong	local01, local30
0422c                 | ' 
0422c                 | '       ' This calculates the correct sample length in all situations
0422c                 | '       if repeatLength > 2
0422c     18 5E 05 F1 | 	add	fp, #24
04230     AF 6A 02 FB | 	rdlong	local01, fp
04234     1C 5E 85 F1 | 	sub	fp, #28
04238     02 6A 5E F2 | 	cmps	local01, #2 wcz
0423c     47 0F 86 F1 | 	sub	objptr, #327
04240     20 00 90 ED |  if_be	jmp	#LR__0162
04244     18 5E 05 F1 | 	add	fp, #24
04248     AF A6 02 FB | 	rdlong	local31, fp
0424c     04 5E 05 F1 | 	add	fp, #4
04250     AF A0 02 FB | 	rdlong	local28, fp
04254     50 A7 02 F1 | 	add	local31, local28
04258                 | '         sampleLength := repeatPoint + repeatLength
04258     0C 5E 85 F1 | 	sub	fp, #12
0425c     AF A6 62 FC | 	wrlong	local31, fp
04260     10 5E 85 F1 | 	sub	fp, #16
04264                 | LR__0162
04264                 | ' 
04264                 | '       if sampleLength - sampleOffset < 1
04264     10 5E 05 F1 | 	add	fp, #16
04268     AF 6A 02 FB | 	rdlong	local01, fp
0426c     10 5E 85 F1 | 	sub	fp, #16
04270     B3 0F 06 F1 | 	add	objptr, #435
04274     07 A1 02 FB | 	rdlong	local28, objptr
04278     B3 0F 86 F1 | 	sub	objptr, #435
0427c     50 6B 82 F1 | 	sub	local01, local28
04280     01 6A 5E F2 | 	cmps	local01, #1 wcz
04284     1C 00 90 3D |  if_ae	jmp	#LR__0163
04288     AF A8 02 FB | 	rdlong	local32, fp
0428c     02 A8 66 F0 | 	shl	local32, #2
04290     57 0F 06 F1 | 	add	objptr, #343
04294     07 A9 02 F1 | 	add	local32, objptr
04298                 | '         lastSetSampleLength[channel] := 1
04298     54 03 68 FC | 	wrlong	#1, local32
0429c                 | '       else
0429c     57 0F 86 F1 | 	sub	objptr, #343
042a0     30 00 90 FD | 	jmp	#LR__0164
042a4                 | LR__0163
042a4     10 5E 05 F1 | 	add	fp, #16
042a8     AF AA 02 FB | 	rdlong	local33, fp
042ac     10 5E 85 F1 | 	sub	fp, #16
042b0     B3 0F 06 F1 | 	add	objptr, #435
042b4     07 A1 02 FB | 	rdlong	local28, objptr
042b8     50 AB 82 F1 | 	sub	local33, local28
042bc     AF AC 02 FB | 	rdlong	local34, fp
042c0     02 AC 66 F0 | 	shl	local34, #2
042c4     5C 0E 86 F1 | 	sub	objptr, #92
042c8     07 AD 02 F1 | 	add	local34, objptr
042cc                 | '         lastSetSampleLength[channel] := sampleLength - sampleOffset
042cc     56 AB 62 FC | 	wrlong	local33, local34
042d0     57 0F 86 F1 | 	sub	objptr, #343
042d4                 | LR__0164
042d4                 | ' 
042d4                 | '       ' When the sample offset is more than the actual sample length, use the repeat data as sample ptr and length
042d4                 | '       if sampleOffset > sampleLength
042d4     B3 0F 06 F1 | 	add	objptr, #435
042d8     07 6B 02 FB | 	rdlong	local01, objptr
042dc     B3 0F 86 F1 | 	sub	objptr, #435
042e0     10 5E 05 F1 | 	add	fp, #16
042e4     AF A0 02 FB | 	rdlong	local28, fp
042e8     10 5E 85 F1 | 	sub	fp, #16
042ec     50 6B 5A F2 | 	cmps	local01, local28 wcz
042f0     50 00 90 ED |  if_be	jmp	#LR__0165
042f4     20 5E 05 F1 | 	add	fp, #32
042f8     AF AE 02 FB | 	rdlong	local35, fp
042fc     08 5E 85 F1 | 	sub	fp, #8
04300     AF A0 02 FB | 	rdlong	local28, fp
04304     18 5E 85 F1 | 	sub	fp, #24
04308     50 AF 02 F1 | 	add	local35, local28
0430c     AF B0 02 FB | 	rdlong	local36, fp
04310     02 B0 66 F0 | 	shl	local36, #2
04314     37 0F 06 F1 | 	add	objptr, #311
04318     07 B1 02 F1 | 	add	local36, objptr
0431c                 | '         lastSetSamplePtr[channel] := samplePtr + repeatPoint
0431c     58 AF 62 FC | 	wrlong	local35, local36
04320     AF B2 02 FB | 	rdlong	local37, fp
04324     02 B2 66 F0 | 	shl	local37, #2
04328     20 0E 06 F1 | 	add	objptr, #32
0432c     07 B3 02 F1 | 	add	local37, objptr
04330                 | '         lastSetSampleLength[channel] := repeatLength
04330     1C 5E 05 F1 | 	add	fp, #28
04334     AF 6A 02 FB | 	rdlong	local01, fp
04338     1C 5E 85 F1 | 	sub	fp, #28
0433c     59 6B 62 FC | 	wrlong	local01, local37
04340     57 0F 86 F1 | 	sub	objptr, #343
04344                 | LR__0165
04344                 | ' 
04344                 | '       ' Trigger note/sample playback directly if no delay or portamento is active
04344                 | '       ifnot cmd == $3 || cmd == $5
04344     BA 0F 06 F1 | 	add	objptr, #442
04348     07 6B C2 FA | 	rdbyte	local01, objptr
0434c     BA 0F 86 F1 | 	sub	objptr, #442
04350     03 6A 0E F2 | 	cmp	local01, #3 wz
04354     54 00 90 AD |  if_e	jmp	#LR__0168
04358     BA 0F 06 F1 | 	add	objptr, #442
0435c     07 B5 C2 FA | 	rdbyte	local38, objptr
04360     BA 0F 86 F1 | 	sub	objptr, #442
04364     5A A1 02 F6 | 	mov	local28, local38
04368     05 A0 0E F2 | 	cmp	local28, #5 wz
0436c     3C 00 90 AD |  if_e	jmp	#LR__0168
04370                 | '         ifnot cmd == $E && x == $D
04370     BA 0F 06 F1 | 	add	objptr, #442
04374     07 B7 C2 FA | 	rdbyte	local39, objptr
04378     BA 0F 86 F1 | 	sub	objptr, #442
0437c     5B 6B 02 F6 | 	mov	local01, local39
04380     0E 6A 0E F2 | 	cmp	local01, #14 wz
04384     18 00 90 5D |  if_ne	jmp	#LR__0166
04388     B7 0F 06 F1 | 	add	objptr, #439
0438c     07 B5 C2 FA | 	rdbyte	local38, objptr
04390     B7 0F 86 F1 | 	sub	objptr, #439
04394     5A A1 02 F6 | 	mov	local28, local38
04398     0D A0 0E F2 | 	cmp	local28, #13 wz
0439c     0C 00 90 AD |  if_e	jmp	#LR__0167
043a0                 | LR__0166
043a0                 | '           triggerNote(channel)
043a0     AF 6A 02 FB | 	rdlong	local01, fp
043a4     35 5D 02 F6 | 	mov	arg01, local01
043a8     CC FA BF FD | 	call	#_trackerplayer_spin2_triggerNote
043ac                 | LR__0167
043ac                 | LR__0168
043ac                 | ' 
043ac                 | '       ' If the "reset vibrato/tremolo function/s" is/are set, it/they get reset at "zero tick"
043ac                 | '       if resetTremolo[channel] > 0
043ac     AF 6A 02 FB | 	rdlong	local01, fp
043b0     8F 0F 06 F1 | 	add	objptr, #399
043b4     07 6B 02 F1 | 	add	local01, objptr
043b8     35 A1 C2 FA | 	rdbyte	local28, local01
043bc     00 A0 5E F2 | 	cmps	local28, #0 wcz
043c0     8F 0F 86 F1 | 	sub	objptr, #399
043c4     14 00 90 ED |  if_be	jmp	#LR__0169
043c8     AF B8 02 FB | 	rdlong	local40, fp
043cc     8B 0F 06 F1 | 	add	objptr, #395
043d0     07 B9 02 F1 | 	add	local40, objptr
043d4                 | '         tremoloPos[channel] := 0
043d4     5C 01 48 FC | 	wrbyte	#0, local40
043d8     8B 0F 86 F1 | 	sub	objptr, #395
043dc                 | LR__0169
043dc                 | ' 
043dc                 | '       if resetVibrato[channel] > 0
043dc     AF 6A 02 FB | 	rdlong	local01, fp
043e0     93 0F 06 F1 | 	add	objptr, #403
043e4     07 6B 02 F1 | 	add	local01, objptr
043e8     35 A1 C2 FA | 	rdbyte	local28, local01
043ec     00 A0 5E F2 | 	cmps	local28, #0 wcz
043f0     93 0F 86 F1 | 	sub	objptr, #403
043f4     20 00 90 ED |  if_be	jmp	#LR__0171
043f8     AF BA 02 FB | 	rdlong	local41, fp
043fc     87 0F 06 F1 | 	add	objptr, #391
04400     07 BB 02 F1 | 	add	local41, objptr
04404                 | '         vibratoPos[channel] := 0
04404     5D 01 48 FC | 	wrbyte	#0, local41
04408     87 0F 86 F1 | 	sub	objptr, #391
0440c                 | ' 
0440c                 | '   else
0440c     08 00 90 FD | 	jmp	#LR__0171
04410                 | LR__0170
04410                 | '     ' Handle commands that executes on all "non zero ticks"
04410                 | '     handleNonZeroTickCommands(channel)
04410     AF 5C 02 FB | 	rdlong	arg01, fp
04414     E4 04 B0 FD | 	call	#_trackerplayer_spin2_handleNonZeroTickCommands
04418                 | LR__0171
04418                 | ' 
04418                 | '   ' Handle commands that executes on every tick
04418                 | '   handleEveryTickCommands(channel)
04418     AF 5C 02 FB | 	rdlong	arg01, fp
0441c     40 07 B0 FD | 	call	#_trackerplayer_spin2_handleEveryTickCommands
04420     AF BC 02 FB | 	rdlong	local42, fp
04424     02 BC 66 F0 | 	shl	local42, #2
04428     DF 0E 06 F1 | 	add	objptr, #223
0442c     07 BD 02 F1 | 	add	local42, objptr
04430     5E BF 02 FB | 	rdlong	local43, local42
04434     01 00 00 FF 
04438     58 BF 66 F3 | 	fles	local43, ##856
0443c                 | ' 
0443c                 | '   ' Handle boundaries that should be kept
0443c                 | '   currPeriod[channel] <#= MAXIMUM_PERIOD
0443c     5E BF 62 FC | 	wrlong	local43, local42
04440     AF C0 02 FB | 	rdlong	local44, fp
04444     02 C0 66 F0 | 	shl	local44, #2
04448     07 C1 02 F1 | 	add	local44, objptr
0444c     60 C3 02 FB | 	rdlong	local45, local44
04450     71 C2 46 F3 | 	fges	local45, #113
04454                 | '   currPeriod[channel] #>= MINIMUM_PERIOD
04454     60 C3 62 FC | 	wrlong	local45, local44
04458     AF C4 02 FB | 	rdlong	local46, fp
0445c     02 C4 66 F0 | 	shl	local46, #2
04460     20 0E 06 F1 | 	add	objptr, #32
04464     07 C5 02 F1 | 	add	local46, objptr
04468     62 C7 02 FB | 	rdlong	local47, local46
0446c     40 C6 66 F3 | 	fles	local47, #64
04470                 | '   currVolume[channel] <#= MAXIMUM_VOLUME
04470     62 C7 62 FC | 	wrlong	local47, local46
04474     AF C8 02 FB | 	rdlong	local48, fp
04478     02 C8 66 F0 | 	shl	local48, #2
0447c     07 C9 02 F1 | 	add	local48, objptr
04480     64 CB 02 FB | 	rdlong	local49, local48
04484     00 CA 46 F3 | 	fges	local49, #0
04488                 | '   currVolume[channel] #>= MINIMUM_VOLUME
04488     64 CB 62 FC | 	wrlong	local49, local48
0448c     FF 0E 86 F1 | 	sub	objptr, #255
04490     AF F0 03 F6 | 	mov	ptra, fp
04494     BF 00 A0 FD | 	call	#popregs_
04498                 | _trackerplayer_spin2_processChannel_ret
04498     2D 00 64 FD | 	ret
0449c                 | 
0449c                 | ' 
0449c                 | ' 
0449c                 | ' ' Handle all commands that executes on tick zero
0449c                 | ' '
0449c                 | ' PRI handleZeroTickCommands(channel)
0449c                 | _trackerplayer_spin2_handleZeroTickCommands
0449c     2E 31 02 F6 | 	mov	_var01, arg01
044a0                 | ' 
044a0                 | '   CASE_FAST cmd
044a0     BA 0F 06 F1 | 	add	objptr, #442
044a4     07 33 C2 FA | 	rdbyte	_var02, objptr
044a8     BA 0F 86 F1 | 	sub	objptr, #442
044ac     19 35 02 F6 | 	mov	_var03, _var02
044b0     09 34 86 F1 | 	sub	_var03, #9
044b4     07 34 26 F3 | 	fle	_var03, #7
044b8     1A 37 02 F6 | 	mov	_var04, _var03
044bc     30 36 62 FD | 	jmprel	_var04
044c0                 | LR__0172
044c0     1C 00 90 FD | 	jmp	#LR__0173
044c4     30 04 90 FD | 	jmp	#LR__0196
044c8     64 00 90 FD | 	jmp	#LR__0175
044cc     84 00 90 FD | 	jmp	#LR__0176
044d0     A0 00 90 FD | 	jmp	#LR__0177
044d4     D0 00 90 FD | 	jmp	#LR__0178
044d8     9C 03 90 FD | 	jmp	#LR__0193
044dc     18 04 90 FD | 	jmp	#LR__0196
044e0                 | LR__0173
044e0                 | ' 
044e0                 | '     $9:                          ' Set sample offset
044e0                 | '       if z > 0
044e0     B9 0F 06 F1 | 	add	objptr, #441
044e4     07 39 C2 FA | 	rdbyte	_var05, objptr
044e8     B9 0F 86 F1 | 	sub	objptr, #441
044ec     00 38 5E F2 | 	cmps	_var05, #0 wcz
044f0     1C 00 90 ED |  if_be	jmp	#LR__0174
044f4                 | '         cmd9_memoryZ[channel] := z
044f4     18 39 02 F6 | 	mov	_var05, _var01
044f8     DC 0F 06 F1 | 	add	objptr, #476
044fc     07 39 02 F1 | 	add	_var05, objptr
04500     23 0E 86 F1 | 	sub	objptr, #35
04504     07 3B C2 FA | 	rdbyte	_var06, objptr
04508     B9 0F 86 F1 | 	sub	objptr, #441
0450c     1C 3B 42 FC | 	wrbyte	_var06, _var05
04510                 | LR__0174
04510                 | ' 
04510                 | '       sampleOffset := cmd9_memoryZ[channel] << 8
04510     DC 0F 06 F1 | 	add	objptr, #476
04514     07 31 02 F1 | 	add	_var01, objptr
04518     18 39 C2 FA | 	rdbyte	_var05, _var01
0451c     08 38 66 F0 | 	shl	_var05, #8
04520     29 0E 86 F1 | 	sub	objptr, #41
04524     07 39 62 FC | 	wrlong	_var05, objptr
04528     B3 0F 86 F1 | 	sub	objptr, #435
0452c     C8 03 90 FD | 	jmp	#LR__0196
04530                 | LR__0175
04530                 | ' 
04530                 | '     $B:                          ' Jump position
04530                 | '       cmdB_memoryZ := z
04530     B9 0F 06 F1 | 	add	objptr, #441
04534     07 39 C2 FA | 	rdbyte	_var05, objptr
04538     2E 0E 06 F1 | 	add	objptr, #46
0453c     07 39 42 FC | 	wrbyte	_var05, objptr
04540                 | '       cmdB_updatePosition := true
04540     01 0E 06 F1 | 	add	objptr, #1
04544     FF FF FF FF 
04548     07 FF 4B FC | 	wrbyte	##-1, objptr
0454c     E8 0F 86 F1 | 	sub	objptr, #488
04550     A4 03 90 FD | 	jmp	#LR__0196
04554                 | LR__0176
04554                 | ' 
04554                 | '     $C:                          ' Set volume
04554                 | '       currVolume[channel] := z
04554     02 30 66 F0 | 	shl	_var01, #2
04558     FF 0E 06 F1 | 	add	objptr, #255
0455c     07 31 02 F1 | 	add	_var01, objptr
04560     BA 0E 06 F1 | 	add	objptr, #186
04564     07 3B C2 FA | 	rdbyte	_var06, objptr
04568     B9 0F 86 F1 | 	sub	objptr, #441
0456c     18 3B 62 FC | 	wrlong	_var06, _var01
04570     84 03 90 FD | 	jmp	#LR__0196
04574                 | LR__0177
04574                 | ' 
04574                 | '     $D:                          ' Pattern break
04574                 | '       cmdD_memoryX := x
04574     B7 0F 06 F1 | 	add	objptr, #439
04578     07 39 C2 FA | 	rdbyte	_var05, objptr
0457c     2D 0E 06 F1 | 	add	objptr, #45
04580     07 39 42 FC | 	wrbyte	_var05, objptr
04584                 | '       cmdD_memoryY := y
04584     2C 0E 86 F1 | 	sub	objptr, #44
04588     07 39 C2 FA | 	rdbyte	_var05, objptr
0458c     2D 0E 06 F1 | 	add	objptr, #45
04590     07 39 42 FC | 	wrbyte	_var05, objptr
04594                 | '       cmdD_updatePosition := true
04594     01 0E 06 F1 | 	add	objptr, #1
04598     FF FF FF FF 
0459c     07 FF 4B FC | 	wrbyte	##-1, objptr
045a0     E6 0F 86 F1 | 	sub	objptr, #486
045a4     50 03 90 FD | 	jmp	#LR__0196
045a8                 | LR__0178
045a8                 | ' 
045a8                 | '     $E:                          ' Handle "E commands" that execute on tick zero
045a8                 | ' 
045a8                 | '       CASE_FAST x
045a8     B7 0F 06 F1 | 	add	objptr, #439
045ac     07 3D C2 FA | 	rdbyte	_var07, objptr
045b0     B7 0F 86 F1 | 	sub	objptr, #439
045b4     1E 39 02 F6 | 	mov	_var05, _var07
045b8     0F 38 26 F3 | 	fle	_var05, #15
045bc     1C 3F 02 F6 | 	mov	_var08, _var05
045c0     30 3E 62 FD | 	jmprel	_var08
045c4                 | LR__0179
045c4     3C 00 90 FD | 	jmp	#LR__0180
045c8     58 00 90 FD | 	jmp	#LR__0181
045cc     8C 00 90 FD | 	jmp	#LR__0182
045d0     C0 00 90 FD | 	jmp	#LR__0183
045d4     DC 00 90 FD | 	jmp	#LR__0184
045d8     14 01 90 FD | 	jmp	#LR__0185
045dc     28 01 90 FD | 	jmp	#LR__0186
045e0     C0 01 90 FD | 	jmp	#LR__0189
045e4     10 03 90 FD | 	jmp	#LR__0196
045e8     0C 03 90 FD | 	jmp	#LR__0196
045ec     F0 01 90 FD | 	jmp	#LR__0190
045f0     24 02 90 FD | 	jmp	#LR__0191
045f4     00 03 90 FD | 	jmp	#LR__0196
045f8     FC 02 90 FD | 	jmp	#LR__0196
045fc     50 02 90 FD | 	jmp	#LR__0192
04600     F4 02 90 FD | 	jmp	#LR__0196
04604                 | LR__0180
04604                 | ' 
04604                 | '         $0: lpFilter := (!y) & 1                 ' Set lowpass filter On/Off
04604     B8 0F 06 F1 | 	add	objptr, #440
04608     07 3B C2 FA | 	rdbyte	_var06, objptr
0460c     1D 3B 22 F6 | 	not	_var06, _var06
04610     01 3A 06 F5 | 	and	_var06, #1
04614     03 0E 06 F1 | 	add	objptr, #3
04618     07 3B 42 FC | 	wrbyte	_var06, objptr
0461c     BB 0F 86 F1 | 	sub	objptr, #443
04620     D4 02 90 FD | 	jmp	#LR__0196
04624                 | LR__0181
04624                 | ' 
04624                 | '         $1: currPeriod[channel] -= y             ' Fine frequency slide up
04624     18 41 02 F6 | 	mov	_var09, _var01
04628     02 40 66 F0 | 	shl	_var09, #2
0462c     DF 0E 06 F1 | 	add	objptr, #223
04630     07 41 02 F1 | 	add	_var09, objptr
04634     20 3B 02 FB | 	rdlong	_var06, _var09
04638     D9 0E 06 F1 | 	add	objptr, #217
0463c     07 43 C2 FA | 	rdbyte	_var10, objptr
04640     21 3B 82 F1 | 	sub	_var06, _var10
04644     02 30 66 F0 | 	shl	_var01, #2
04648     D9 0E 86 F1 | 	sub	objptr, #217
0464c     07 31 02 F1 | 	add	_var01, objptr
04650     18 3B 62 FC | 	wrlong	_var06, _var01
04654     DF 0E 86 F1 | 	sub	objptr, #223
04658     9C 02 90 FD | 	jmp	#LR__0196
0465c                 | LR__0182
0465c                 | ' 
0465c                 | '         $2: currPeriod[channel] += y             ' Fine frequency slide down
0465c     18 41 02 F6 | 	mov	_var09, _var01
04660     02 40 66 F0 | 	shl	_var09, #2
04664     DF 0E 06 F1 | 	add	objptr, #223
04668     07 41 02 F1 | 	add	_var09, objptr
0466c     20 3B 02 FB | 	rdlong	_var06, _var09
04670     D9 0E 06 F1 | 	add	objptr, #217
04674     07 43 C2 FA | 	rdbyte	_var10, objptr
04678     21 3B 02 F1 | 	add	_var06, _var10
0467c     02 30 66 F0 | 	shl	_var01, #2
04680     D9 0E 86 F1 | 	sub	objptr, #217
04684     07 31 02 F1 | 	add	_var01, objptr
04688     18 3B 62 FC | 	wrlong	_var06, _var01
0468c     DF 0E 86 F1 | 	sub	objptr, #223
04690     64 02 90 FD | 	jmp	#LR__0196
04694                 | LR__0183
04694                 | ' 
04694                 | '         $3: portaGlissando[channel] := y & 1     ' Set portamento glissando On/Off
04694     B8 0F 06 F1 | 	add	objptr, #440
04698     07 3B C2 FA | 	rdbyte	_var06, objptr
0469c     01 3A 06 F5 | 	and	_var06, #1
046a0     04 0E 06 F1 | 	add	objptr, #4
046a4     07 31 02 F1 | 	add	_var01, objptr
046a8     18 3B 42 FC | 	wrbyte	_var06, _var01
046ac     BC 0F 86 F1 | 	sub	objptr, #444
046b0     44 02 90 FD | 	jmp	#LR__0196
046b4                 | LR__0184
046b4                 | ' 
046b4                 | '         $4:                                      ' Set vibrato waveform type
046b4                 | '           vibratoType[channel]  := y & 3
046b4     B8 0F 06 F1 | 	add	objptr, #440
046b8     07 3B C2 FA | 	rdbyte	_var06, objptr
046bc     03 3A 06 F5 | 	and	_var06, #3
046c0     18 45 02 F6 | 	mov	_var11, _var01
046c4     08 0E 06 F1 | 	add	objptr, #8
046c8     07 45 02 F1 | 	add	_var11, objptr
046cc     22 3B 42 FC | 	wrbyte	_var06, _var11
046d0                 | '           resetVibrato[channel] := y & 4
046d0     08 0E 86 F1 | 	sub	objptr, #8
046d4     07 3B C2 FA | 	rdbyte	_var06, objptr
046d8     04 3A 06 F5 | 	and	_var06, #4
046dc     25 0E 86 F1 | 	sub	objptr, #37
046e0     07 31 02 F1 | 	add	_var01, objptr
046e4     18 3B 42 FC | 	wrbyte	_var06, _var01
046e8     93 0F 86 F1 | 	sub	objptr, #403
046ec     08 02 90 FD | 	jmp	#LR__0196
046f0                 | LR__0185
046f0                 | ' 
046f0                 | '         $5: fineTune := y                        ' Set finetune
046f0     B8 0F 06 F1 | 	add	objptr, #440
046f4     07 3B C2 FA | 	rdbyte	_var06, objptr
046f8     09 0E 86 F1 | 	sub	objptr, #9
046fc     07 3B 62 FC | 	wrlong	_var06, objptr
04700     AF 0F 86 F1 | 	sub	objptr, #431
04704     F0 01 90 FD | 	jmp	#LR__0196
04708                 | LR__0186
04708                 | ' 
04708                 | '         $6:                                      ' Pattern looping
04708                 | '           if y == 0
04708     B8 0F 06 F1 | 	add	objptr, #440
0470c     07 3B CA FA | 	rdbyte	_var06, objptr wz
04710     B8 0F 86 F1 | 	sub	objptr, #440
04714     1C 00 90 5D |  if_ne	jmp	#LR__0187
04718                 | '             cmdE6_memory[channel] := patternRow
04718     E9 0F 06 F1 | 	add	objptr, #489
0471c     07 31 02 F1 | 	add	_var01, objptr
04720     47 0F 86 F1 | 	sub	objptr, #327
04724     07 45 C2 FA | 	rdbyte	_var11, objptr
04728     A2 0E 86 F1 | 	sub	objptr, #162
0472c     18 45 42 FC | 	wrbyte	_var11, _var01
04730                 | '           else
04730     C4 01 90 FD | 	jmp	#LR__0196
04734                 | LR__0187
04734                 | '             if ++cmdE6_counter[channel] <= y
04734     18 41 02 F6 | 	mov	_var09, _var01
04738     ED 0F 06 F1 | 	add	objptr, #493
0473c     07 41 02 F1 | 	add	_var09, objptr
04740     20 3B C2 FA | 	rdbyte	_var06, _var09
04744     01 3A 06 F1 | 	add	_var06, #1
04748     18 43 02 F6 | 	mov	_var10, _var01
0474c     07 43 02 F1 | 	add	_var10, objptr
04750     21 3B 42 FC | 	wrbyte	_var06, _var10
04754     21 47 C2 FA | 	rdbyte	_var12, _var10
04758     35 0E 86 F1 | 	sub	objptr, #53
0475c     07 49 C2 FA | 	rdbyte	_var13, objptr
04760     B8 0F 86 F1 | 	sub	objptr, #440
04764     24 47 5A F2 | 	cmps	_var12, _var13 wcz
04768     24 00 90 1D |  if_a	jmp	#LR__0188
0476c                 | '               cmdE6_updatePosition[channel] := true
0476c     F1 0F 06 F1 | 	add	objptr, #497
04770     07 31 02 F1 | 	add	_var01, objptr
04774     FF FF FF FF 
04778     18 FF 4B FC | 	wrbyte	##-1, _var01
0477c                 | '               cmdE6_updatePositionCommon    := true
0477c     04 0E 06 F1 | 	add	objptr, #4
04780     FF FF FF FF 
04784     07 FF 4B FC | 	wrbyte	##-1, objptr
04788     F5 0F 86 F1 | 	sub	objptr, #501
0478c                 | '             else
0478c     68 01 90 FD | 	jmp	#LR__0196
04790                 | LR__0188
04790                 | '               cmdE6_counter[channel] := 0
04790     ED 0F 06 F1 | 	add	objptr, #493
04794     07 31 02 F1 | 	add	_var01, objptr
04798     18 01 48 FC | 	wrbyte	#0, _var01
0479c     ED 0F 86 F1 | 	sub	objptr, #493
047a0     54 01 90 FD | 	jmp	#LR__0196
047a4                 | LR__0189
047a4                 | ' 
047a4                 | '         $7:                                      ' Set tremolo waveform type
047a4                 | '           tremoloType[channel] := y & 3
047a4     B8 0F 06 F1 | 	add	objptr, #440
047a8     07 3B C2 FA | 	rdbyte	_var06, objptr
047ac     03 3A 06 F5 | 	and	_var06, #3
047b0     18 45 02 F6 | 	mov	_var11, _var01
047b4     0C 0E 06 F1 | 	add	objptr, #12
047b8     07 45 02 F1 | 	add	_var11, objptr
047bc     22 3B 42 FC | 	wrbyte	_var06, _var11
047c0                 | '           resetTremolo[channel] := y & 4
047c0     0C 0E 86 F1 | 	sub	objptr, #12
047c4     07 3B C2 FA | 	rdbyte	_var06, objptr
047c8     04 3A 06 F5 | 	and	_var06, #4
047cc     29 0E 86 F1 | 	sub	objptr, #41
047d0     07 31 02 F1 | 	add	_var01, objptr
047d4     18 3B 42 FC | 	wrbyte	_var06, _var01
047d8     8F 0F 86 F1 | 	sub	objptr, #399
047dc     18 01 90 FD | 	jmp	#LR__0196
047e0                 | LR__0190
047e0                 | ' 
047e0                 | '         $A: currVolume[channel] += y             ' Fine volume slide up
047e0     18 41 02 F6 | 	mov	_var09, _var01
047e4     02 40 66 F0 | 	shl	_var09, #2
047e8     FF 0E 06 F1 | 	add	objptr, #255
047ec     07 41 02 F1 | 	add	_var09, objptr
047f0     20 3B 02 FB | 	rdlong	_var06, _var09
047f4     B9 0E 06 F1 | 	add	objptr, #185
047f8     07 43 C2 FA | 	rdbyte	_var10, objptr
047fc     21 3B 02 F1 | 	add	_var06, _var10
04800     02 30 66 F0 | 	shl	_var01, #2
04804     B9 0E 86 F1 | 	sub	objptr, #185
04808     07 31 02 F1 | 	add	_var01, objptr
0480c     18 3B 62 FC | 	wrlong	_var06, _var01
04810     FF 0E 86 F1 | 	sub	objptr, #255
04814     E0 00 90 FD | 	jmp	#LR__0196
04818                 | LR__0191
04818                 | ' 
04818                 | '         $B: currVolume[channel] -= y             ' Fine volume slide down
04818     18 41 02 F6 | 	mov	_var09, _var01
0481c     02 40 66 F0 | 	shl	_var09, #2
04820     FF 0E 06 F1 | 	add	objptr, #255
04824     07 41 02 F1 | 	add	_var09, objptr
04828     20 3B 02 FB | 	rdlong	_var06, _var09
0482c     B9 0E 06 F1 | 	add	objptr, #185
04830     07 43 C2 FA | 	rdbyte	_var10, objptr
04834     21 3B 82 F1 | 	sub	_var06, _var10
04838     02 30 66 F0 | 	shl	_var01, #2
0483c     B9 0E 86 F1 | 	sub	objptr, #185
04840     07 31 02 F1 | 	add	_var01, objptr
04844     18 3B 62 FC | 	wrlong	_var06, _var01
04848     FF 0E 86 F1 | 	sub	objptr, #255
0484c     A8 00 90 FD | 	jmp	#LR__0196
04850                 | LR__0192
04850                 | ' 
04850                 | '         $E: patternDelay := y * currentSongSpeed ' Pattern delay
04850     B8 0F 06 F1 | 	add	objptr, #440
04854     07 41 C2 FA | 	rdbyte	_var09, objptr
04858     14 0F 86 F1 | 	sub	objptr, #276
0485c     07 43 C2 FA | 	rdbyte	_var10, objptr
04860     21 41 02 FD | 	qmul	_var09, _var10
04864     18 3A 62 FD | 	getqx	_var06
04868     01 0E 06 F1 | 	add	objptr, #1
0486c     07 3B 42 FC | 	wrbyte	_var06, objptr
04870     A5 0E 86 F1 | 	sub	objptr, #165
04874     80 00 90 FD | 	jmp	#LR__0196
04878                 | LR__0193
04878                 | ' 
04878                 | '     $F:                          ' Set speed
04878                 | '       if z < 32
04878     B9 0F 06 F1 | 	add	objptr, #441
0487c     07 39 C2 FA | 	rdbyte	_var05, objptr
04880     B9 0F 86 F1 | 	sub	objptr, #441
04884     20 38 5E F2 | 	cmps	_var05, #32 wcz
04888     18 00 90 3D |  if_ae	jmp	#LR__0194
0488c                 | '         currentSongSpeed := z
0488c     B9 0F 06 F1 | 	add	objptr, #441
04890     07 39 C2 FA | 	rdbyte	_var05, objptr
04894     15 0F 86 F1 | 	sub	objptr, #277
04898     07 39 42 FC | 	wrbyte	_var05, objptr
0489c     A4 0E 86 F1 | 	sub	objptr, #164
048a0                 | '       else
048a0     54 00 90 FD | 	jmp	#LR__0195
048a4                 | LR__0194
048a4                 | '         ticksPerMinute := z * 24
048a4     B9 0F 06 F1 | 	add	objptr, #441
048a8     07 3D C2 FA | 	rdbyte	_var07, objptr
048ac     1E 39 02 F6 | 	mov	_var05, _var07
048b0     01 38 66 F0 | 	shl	_var05, #1
048b4     1E 39 02 F1 | 	add	_var05, _var07
048b8     03 38 66 F0 | 	shl	_var05, #3
048bc     12 0E 86 F1 | 	sub	objptr, #18
048c0     07 39 62 FC | 	wrlong	_var05, objptr
048c4     A7 0F 86 F1 | 	sub	objptr, #423
048c8                 | '         cyclesToWait   := (systemClock / ticksPerMinute) * 60
048c8     07 0B 03 FB | 	rdlong	muldiva_, objptr
048cc     A7 0F 06 F1 | 	add	objptr, #423
048d0     07 0D 03 FB | 	rdlong	muldivb_, objptr
048d4     A7 0F 86 F1 | 	sub	objptr, #423
048d8     D0 00 A0 FD | 	call	#divide_
048dc     86 3B 02 F6 | 	mov	_var06, muldivb_
048e0     04 3A 66 F0 | 	shl	_var06, #4
048e4     86 3B 82 F1 | 	sub	_var06, muldivb_
048e8     02 3A 66 F0 | 	shl	_var06, #2
048ec     AB 0F 06 F1 | 	add	objptr, #427
048f0     07 3B 62 FC | 	wrlong	_var06, objptr
048f4     AB 0F 86 F1 | 	sub	objptr, #427
048f8                 | LR__0195
048f8                 | LR__0196
048f8                 | _trackerplayer_spin2_handleZeroTickCommands_ret
048f8     2D 00 64 FD | 	ret
048fc                 | 
048fc                 | ' 
048fc                 | ' 
048fc                 | ' ' Handle all commands that executes on "non zero ticks"
048fc                 | ' '
048fc                 | ' PRI handleNonZeroTickCommands(channel)
048fc                 | _trackerplayer_spin2_handleNonZeroTickCommands
048fc     0A 5A 05 F6 | 	mov	COUNT_, #10
04900     B0 00 A0 FD | 	call	#pushregs_
04904     2E 6B 02 F6 | 	mov	local01, arg01
04908                 | ' 
04908                 | '   CASE_FAST cmd
04908     BA 0F 06 F1 | 	add	objptr, #442
0490c     07 6D C2 FA | 	rdbyte	local02, objptr
04910     BA 0F 86 F1 | 	sub	objptr, #442
04914     36 6F 02 F6 | 	mov	local03, local02
04918     01 6E 86 F1 | 	sub	local03, #1
0491c     0E 6E 26 F3 | 	fle	local03, #14
04920     37 71 02 F6 | 	mov	local04, local03
04924     30 70 62 FD | 	jmprel	local04
04928                 | LR__0197
04928     38 00 90 FD | 	jmp	#LR__0198
0492c     A0 00 90 FD | 	jmp	#LR__0199
04930     D4 00 90 FD | 	jmp	#LR__0200
04934     1C 02 90 FD | 	jmp	#LR__0210
04938     20 01 90 FD | 	jmp	#LR__0202
0493c     48 01 90 FD | 	jmp	#LR__0203
04940     50 01 90 FD | 	jmp	#LR__0204
04944     0C 02 90 FD | 	jmp	#LR__0210
04948     08 02 90 FD | 	jmp	#LR__0210
0494c     B0 01 90 FD | 	jmp	#LR__0207
04950     00 02 90 FD | 	jmp	#LR__0210
04954     FC 01 90 FD | 	jmp	#LR__0210
04958     F8 01 90 FD | 	jmp	#LR__0210
0495c     AC 01 90 FD | 	jmp	#LR__0208
04960     F0 01 90 FD | 	jmp	#LR__0210
04964                 | LR__0198
04964                 | ' 
04964                 | '     $1: currPeriod[channel] -= z        ' Frequency slide up
04964     35 73 02 F6 | 	mov	local05, local01
04968     02 72 66 F0 | 	shl	local05, #2
0496c     DF 0E 06 F1 | 	add	objptr, #223
04970     07 73 02 F1 | 	add	local05, objptr
04974     39 75 02 FB | 	rdlong	local06, local05
04978     DA 0E 06 F1 | 	add	objptr, #218
0497c     07 77 C2 FA | 	rdbyte	local07, objptr
04980     3B 75 82 F1 | 	sub	local06, local07
04984     35 79 02 F6 | 	mov	local08, local01
04988     02 78 66 F0 | 	shl	local08, #2
0498c     DA 0E 86 F1 | 	sub	objptr, #218
04990     07 79 02 F1 | 	add	local08, objptr
04994     3C 75 62 FC | 	wrlong	local06, local08
04998                 | ' 
04998                 | '        ' This simulates a bug in the original protracker play routine that is dependant on an UINT16 data type
04998                 | '       if currPeriod[channel] < 0
04998     35 75 02 F6 | 	mov	local06, local01
0499c     02 74 66 F0 | 	shl	local06, #2
049a0     07 75 02 F1 | 	add	local06, objptr
049a4     3A 7B 02 FB | 	rdlong	local09, local06
049a8     00 7A 5E F2 | 	cmps	local09, #0 wcz
049ac     DF 0E 86 F1 | 	sub	objptr, #223
049b0     A0 01 90 3D |  if_ae	jmp	#LR__0210
049b4                 | '         currPeriod[channel] := MAXIMUM_PERIOD
049b4     02 6A 66 F0 | 	shl	local01, #2
049b8     DF 0E 06 F1 | 	add	objptr, #223
049bc     07 6B 02 F1 | 	add	local01, objptr
049c0     01 00 80 FF 
049c4     35 B1 6A FC | 	wrlong	##856, local01
049c8     DF 0E 86 F1 | 	sub	objptr, #223
049cc     84 01 90 FD | 	jmp	#LR__0210
049d0                 | LR__0199
049d0                 | ' 
049d0                 | '     $2: currPeriod[channel] += z        ' Frequency slide down
049d0     35 73 02 F6 | 	mov	local05, local01
049d4     02 72 66 F0 | 	shl	local05, #2
049d8     DF 0E 06 F1 | 	add	objptr, #223
049dc     07 73 02 F1 | 	add	local05, objptr
049e0     39 75 02 FB | 	rdlong	local06, local05
049e4     DA 0E 06 F1 | 	add	objptr, #218
049e8     07 77 C2 FA | 	rdbyte	local07, objptr
049ec     3B 75 02 F1 | 	add	local06, local07
049f0     02 6A 66 F0 | 	shl	local01, #2
049f4     DA 0E 86 F1 | 	sub	objptr, #218
049f8     07 6B 02 F1 | 	add	local01, objptr
049fc     35 75 62 FC | 	wrlong	local06, local01
04a00     DF 0E 86 F1 | 	sub	objptr, #223
04a04     4C 01 90 FD | 	jmp	#LR__0210
04a08                 | LR__0200
04a08                 | ' 
04a08                 | '     $3:                                 ' Slide to note (portamento)
04a08                 | '       if z > 0
04a08     B9 0F 06 F1 | 	add	objptr, #441
04a0c     07 75 C2 FA | 	rdbyte	local06, objptr
04a10     B9 0F 86 F1 | 	sub	objptr, #441
04a14     00 74 5E F2 | 	cmps	local06, #0 wcz
04a18     1C 00 90 ED |  if_be	jmp	#LR__0201
04a1c                 | '         cmd3_memoryZ[channel] := z
04a1c     35 75 02 F6 | 	mov	local06, local01
04a20     C8 0F 06 F1 | 	add	objptr, #456
04a24     07 75 02 F1 | 	add	local06, objptr
04a28     0F 0E 86 F1 | 	sub	objptr, #15
04a2c     07 7B C2 FA | 	rdbyte	local09, objptr
04a30     B9 0F 86 F1 | 	sub	objptr, #441
04a34     3A 7B 42 FC | 	wrbyte	local09, local06
04a38                 | LR__0201
04a38                 | ' 
04a38                 | '       doPortamento(channel, lastSetPeriod[channel])
04a38     35 73 02 F6 | 	mov	local05, local01
04a3c     02 72 66 F0 | 	shl	local05, #2
04a40     27 0F 06 F1 | 	add	objptr, #295
04a44     07 73 02 F1 | 	add	local05, objptr
04a48     39 5F 02 FB | 	rdlong	arg02, local05
04a4c     35 5D 02 F6 | 	mov	arg01, local01
04a50     27 0F 86 F1 | 	sub	objptr, #295
04a54     64 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
04a58     F8 00 90 FD | 	jmp	#LR__0210
04a5c                 | LR__0202
04a5c                 | ' 
04a5c                 | '     $5:                                 ' Volume slide + portamento
04a5c                 | '       doVolumeSlide(channel)
04a5c     35 5D 02 F6 | 	mov	arg01, local01
04a60     54 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
04a64                 | '       doPortamento(channel, lastSetPeriod[channel])
04a64     35 73 02 F6 | 	mov	local05, local01
04a68     02 72 66 F0 | 	shl	local05, #2
04a6c     27 0F 06 F1 | 	add	objptr, #295
04a70     07 73 02 F1 | 	add	local05, objptr
04a74     39 5F 02 FB | 	rdlong	arg02, local05
04a78     35 5D 02 F6 | 	mov	arg01, local01
04a7c     27 0F 86 F1 | 	sub	objptr, #295
04a80     38 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
04a84     CC 00 90 FD | 	jmp	#LR__0210
04a88                 | LR__0203
04a88                 | ' 
04a88                 | '     $6: doVolumeSlide(channel)          ' Volume slide + Vibrato (note that vibrato is a)
04a88     35 5D 02 F6 | 	mov	arg01, local01
04a8c     28 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
04a90     C0 00 90 FD | 	jmp	#LR__0210
04a94                 | LR__0204
04a94                 | ' 
04a94                 | '     $7:                                 ' Tremolo
04a94                 | '       if x > 0
04a94     B7 0F 06 F1 | 	add	objptr, #439
04a98     07 75 C2 FA | 	rdbyte	local06, objptr
04a9c     B7 0F 86 F1 | 	sub	objptr, #439
04aa0     00 74 5E F2 | 	cmps	local06, #0 wcz
04aa4     1C 00 90 ED |  if_be	jmp	#LR__0205
04aa8                 | '         cmd7_memoryX[channel] := x
04aa8     35 75 02 F6 | 	mov	local06, local01
04aac     D8 0F 06 F1 | 	add	objptr, #472
04ab0     07 75 02 F1 | 	add	local06, objptr
04ab4     21 0E 86 F1 | 	sub	objptr, #33
04ab8     07 7B C2 FA | 	rdbyte	local09, objptr
04abc     B7 0F 86 F1 | 	sub	objptr, #439
04ac0     3A 7B 42 FC | 	wrbyte	local09, local06
04ac4                 | LR__0205
04ac4                 | '       if y > 0
04ac4     B8 0F 06 F1 | 	add	objptr, #440
04ac8     07 75 C2 FA | 	rdbyte	local06, objptr
04acc     B8 0F 86 F1 | 	sub	objptr, #440
04ad0     00 74 5E F2 | 	cmps	local06, #0 wcz
04ad4     1C 00 90 ED |  if_be	jmp	#LR__0206
04ad8                 | '         cmd7_memoryY[channel] := y
04ad8     35 75 02 F6 | 	mov	local06, local01
04adc     D4 0F 06 F1 | 	add	objptr, #468
04ae0     07 75 02 F1 | 	add	local06, objptr
04ae4     1C 0E 86 F1 | 	sub	objptr, #28
04ae8     07 7B C2 FA | 	rdbyte	local09, objptr
04aec     B8 0F 86 F1 | 	sub	objptr, #440
04af0     3A 7B 42 FC | 	wrbyte	local09, local06
04af4                 | LR__0206
04af4                 | ' 
04af4                 | '       doTremolo(channel)
04af4     35 5D 02 F6 | 	mov	arg01, local01
04af8     08 04 B0 FD | 	call	#_trackerplayer_spin2_doTremolo
04afc     54 00 90 FD | 	jmp	#LR__0210
04b00                 | LR__0207
04b00                 | ' 
04b00                 | '     $A: doVolumeSlide(channel)          ' Volume slide
04b00     35 5D 02 F6 | 	mov	arg01, local01
04b04     B0 08 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
04b08     48 00 90 FD | 	jmp	#LR__0210
04b0c                 | LR__0208
04b0c                 | ' 
04b0c                 | '     $E:                                 ' Retrig every Y ticks
04b0c                 | '       if (x == $9) && ((tickcounter // y) == 0)
04b0c     B7 0F 06 F1 | 	add	objptr, #439
04b10     07 73 C2 FA | 	rdbyte	local05, objptr
04b14     B7 0F 86 F1 | 	sub	objptr, #439
04b18     09 72 0E F2 | 	cmp	local05, #9 wz
04b1c     34 00 90 5D |  if_ne	jmp	#LR__0209
04b20     A1 0E 06 F1 | 	add	objptr, #161
04b24     07 77 C2 FA | 	rdbyte	local07, objptr
04b28     3B 0B 03 F6 | 	mov	muldiva_, local07
04b2c     17 0F 06 F1 | 	add	objptr, #279
04b30     07 7D C2 FA | 	rdbyte	local10, objptr
04b34     B8 0F 86 F1 | 	sub	objptr, #440
04b38     3E 0D 03 F6 | 	mov	muldivb_, local10
04b3c     D0 00 A0 FD | 	call	#divide_
04b40     85 7B 0A F6 | 	mov	local09, muldiva_ wz
04b44     0C 00 90 5D |  if_ne	jmp	#LR__0209
04b48                 | '         triggerNote(channel)
04b48     35 75 02 F6 | 	mov	local06, local01
04b4c     3A 5D 02 F6 | 	mov	arg01, local06
04b50     24 F3 BF FD | 	call	#_trackerplayer_spin2_triggerNote
04b54                 | LR__0209
04b54                 | LR__0210
04b54     AF F0 03 F6 | 	mov	ptra, fp
04b58     BF 00 A0 FD | 	call	#popregs_
04b5c                 | _trackerplayer_spin2_handleNonZeroTickCommands_ret
04b5c     2D 00 64 FD | 	ret
04b60                 | 
04b60                 | ' 
04b60                 | ' 
04b60                 | ' ' Handle all commands that executes on every tick
04b60                 | ' '
04b60                 | ' PRI handleEveryTickCommands(channel) | tempNote, arpCounter
04b60                 | _trackerplayer_spin2_handleEveryTickCommands
04b60     12 5A 05 F6 | 	mov	COUNT_, #18
04b64     B0 00 A0 FD | 	call	#pushregs_
04b68     2E 6B 02 F6 | 	mov	local01, arg01
04b6c                 | ' 
04b6c                 | '   CASE_FAST cmd
04b6c     BA 0F 06 F1 | 	add	objptr, #442
04b70     07 6D C2 FA | 	rdbyte	local02, objptr
04b74     BA 0F 86 F1 | 	sub	objptr, #442
04b78     36 6F 02 F6 | 	mov	local03, local02
04b7c     0F 6E 26 F3 | 	fle	local03, #15
04b80     37 71 02 F6 | 	mov	local04, local03
04b84     30 70 62 FD | 	jmprel	local04
04b88                 | LR__0211
04b88     3C 00 90 FD | 	jmp	#LR__0212
04b8c     68 03 90 FD | 	jmp	#LR__0226
04b90     64 03 90 FD | 	jmp	#LR__0226
04b94     60 03 90 FD | 	jmp	#LR__0226
04b98     E8 01 90 FD | 	jmp	#LR__0215
04b9c     58 03 90 FD | 	jmp	#LR__0226
04ba0     4C 02 90 FD | 	jmp	#LR__0218
04ba4     50 03 90 FD | 	jmp	#LR__0226
04ba8     4C 03 90 FD | 	jmp	#LR__0226
04bac     48 03 90 FD | 	jmp	#LR__0226
04bb0     44 03 90 FD | 	jmp	#LR__0226
04bb4     40 03 90 FD | 	jmp	#LR__0226
04bb8     3C 03 90 FD | 	jmp	#LR__0226
04bbc     38 03 90 FD | 	jmp	#LR__0226
04bc0     38 02 90 FD | 	jmp	#LR__0219
04bc4     30 03 90 FD | 	jmp	#LR__0226
04bc8                 | LR__0212
04bc8                 | ' 
04bc8                 | '     $0:                                 ' Arpeggio
04bc8                 | '       arpCounter := tickCounter // 3
04bc8     A1 0E 06 F1 | 	add	objptr, #161
04bcc     07 0B C3 FA | 	rdbyte	muldiva_, objptr
04bd0     A1 0E 86 F1 | 	sub	objptr, #161
04bd4     03 0C 07 F6 | 	mov	muldivb_, #3
04bd8     D0 00 A0 FD | 	call	#divide_
04bdc     85 73 02 F6 | 	mov	local05, muldiva_
04be0                 | '       if (tempNote := amigaPeriodToNote(currPeriod[channel], currFineTune[channel])) < 36
04be0     35 75 02 F6 | 	mov	local06, local01
04be4     02 74 66 F0 | 	shl	local06, #2
04be8     DF 0E 06 F1 | 	add	objptr, #223
04bec     07 75 02 F1 | 	add	local06, objptr
04bf0     3A 5D 02 FB | 	rdlong	arg01, local06
04bf4     35 77 02 F6 | 	mov	local07, local01
04bf8     0C 0E 86 F1 | 	sub	objptr, #12
04bfc     07 77 02 F1 | 	add	local07, objptr
04c00     3B 5F C2 FA | 	rdbyte	arg02, local07
04c04     D3 0E 86 F1 | 	sub	objptr, #211
04c08     9C F0 BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
04c0c     15 79 02 F6 | 	mov	local08, result1
04c10     3C 7B 02 F6 | 	mov	local09, local08
04c14     24 78 5E F2 | 	cmps	local08, #36 wcz
04c18     DC 02 90 3D |  if_ae	jmp	#LR__0226
04c1c                 | '         if arpCounter == 1 and x > 0
04c1c     01 72 0E F2 | 	cmp	local05, #1 wz
04c20     8C 00 90 5D |  if_ne	jmp	#LR__0213
04c24     B7 0F 06 F1 | 	add	objptr, #439
04c28     07 75 C2 FA | 	rdbyte	local06, objptr
04c2c     B7 0F 86 F1 | 	sub	objptr, #439
04c30     00 74 5E F2 | 	cmps	local06, #0 wcz
04c34     78 00 90 ED |  if_be	jmp	#LR__0213
04c38                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + x) - currPeriod[channel]
04c38     3D 7D 02 F6 | 	mov	local10, local09
04c3c     B7 0F 06 F1 | 	add	objptr, #439
04c40     07 77 C2 FA | 	rdbyte	local07, objptr
04c44     3B 7F 02 F6 | 	mov	local11, local07
04c48     3B 7D 02 F1 | 	add	local10, local07
04c4c     3E 81 02 F6 | 	mov	local12, local10
04c50     40 5D 02 F6 | 	mov	arg01, local12
04c54     06 00 00 FF 
04c58     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
04c5c     01 5C 66 F0 | 	shl	arg01, #1
04c60     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
04c64                 | ' 
04c64                 | '   return word[@periodTable][noteNumber]
04c64     2E 2B E2 FA | 	rdword	result1, arg01
04c68     06 00 00 FF 
04c6c     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
04c70     15 83 02 F6 | 	mov	local13, result1
04c74     35 85 02 F6 | 	mov	local14, local01
04c78     02 84 66 F0 | 	shl	local14, #2
04c7c     D8 0E 86 F1 | 	sub	objptr, #216
04c80     07 87 02 F6 | 	mov	local15, objptr
04c84     07 85 02 F1 | 	add	local14, objptr
04c88     41 75 02 F6 | 	mov	local06, local13
04c8c     42 89 02 FB | 	rdlong	local16, local14
04c90     44 75 82 F1 | 	sub	local06, local16
04c94     35 8B 02 F6 | 	mov	local17, local01
04c98     02 8A 66 F0 | 	shl	local17, #2
04c9c     10 0E 06 F1 | 	add	objptr, #16
04ca0     07 8D 02 F6 | 	mov	local18, objptr
04ca4     07 8B 02 F1 | 	add	local17, objptr
04ca8     45 75 62 FC | 	wrlong	local06, local17
04cac     EF 0E 86 F1 | 	sub	objptr, #239
04cb0                 | LR__0213
04cb0                 | '         if arpCounter == 2 and y > 0
04cb0     02 72 0E F2 | 	cmp	local05, #2 wz
04cb4     8C 00 90 5D |  if_ne	jmp	#LR__0214
04cb8     B8 0F 06 F1 | 	add	objptr, #440
04cbc     07 75 C2 FA | 	rdbyte	local06, objptr
04cc0     B8 0F 86 F1 | 	sub	objptr, #440
04cc4     00 74 5E F2 | 	cmps	local06, #0 wcz
04cc8     78 00 90 ED |  if_be	jmp	#LR__0214
04ccc                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + y) - currPeriod[channel]
04ccc     3D 7D 02 F6 | 	mov	local10, local09
04cd0     B8 0F 06 F1 | 	add	objptr, #440
04cd4     07 77 C2 FA | 	rdbyte	local07, objptr
04cd8     3B 7F 02 F6 | 	mov	local11, local07
04cdc     3B 7D 02 F1 | 	add	local10, local07
04ce0     3E 81 02 F6 | 	mov	local12, local10
04ce4     40 5D 02 F6 | 	mov	arg01, local12
04ce8     06 00 00 FF 
04cec     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
04cf0     01 5C 66 F0 | 	shl	arg01, #1
04cf4     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
04cf8                 | ' 
04cf8                 | '   return word[@periodTable][noteNumber]
04cf8     2E 2B E2 FA | 	rdword	result1, arg01
04cfc     06 00 00 FF 
04d00     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
04d04     15 83 02 F6 | 	mov	local13, result1
04d08     35 85 02 F6 | 	mov	local14, local01
04d0c     02 84 66 F0 | 	shl	local14, #2
04d10     D9 0E 86 F1 | 	sub	objptr, #217
04d14     07 87 02 F6 | 	mov	local15, objptr
04d18     07 85 02 F1 | 	add	local14, objptr
04d1c     41 75 02 F6 | 	mov	local06, local13
04d20     42 89 02 FB | 	rdlong	local16, local14
04d24     44 75 82 F1 | 	sub	local06, local16
04d28     35 8B 02 F6 | 	mov	local17, local01
04d2c     02 8A 66 F0 | 	shl	local17, #2
04d30     10 0E 06 F1 | 	add	objptr, #16
04d34     07 8D 02 F6 | 	mov	local18, objptr
04d38     07 8B 02 F1 | 	add	local17, objptr
04d3c     45 75 62 FC | 	wrlong	local06, local17
04d40     EF 0E 86 F1 | 	sub	objptr, #239
04d44                 | LR__0214
04d44                 | '         if arpCounter == 0 and (x + y) > 0
04d44     00 72 0E F2 | 	cmp	local05, #0 wz
04d48     AC 01 90 5D |  if_ne	jmp	#LR__0226
04d4c     B7 0F 06 F1 | 	add	objptr, #439
04d50     07 75 C2 FA | 	rdbyte	local06, objptr
04d54     01 0E 06 F1 | 	add	objptr, #1
04d58     07 77 C2 FA | 	rdbyte	local07, objptr
04d5c     B8 0F 86 F1 | 	sub	objptr, #440
04d60     3B 75 02 F1 | 	add	local06, local07
04d64     00 74 5E F2 | 	cmps	local06, #0 wcz
04d68     8C 01 90 ED |  if_be	jmp	#LR__0226
04d6c                 | '           deltaPeriod[channel] := 0
04d6c     02 6A 66 F0 | 	shl	local01, #2
04d70     EF 0E 06 F1 | 	add	objptr, #239
04d74     07 6B 02 F1 | 	add	local01, objptr
04d78     35 01 68 FC | 	wrlong	#0, local01
04d7c     EF 0E 86 F1 | 	sub	objptr, #239
04d80     74 01 90 FD | 	jmp	#LR__0226
04d84                 | LR__0215
04d84                 | ' 
04d84                 | '     $4:                                 ' Vibrato
04d84                 | '       if x > 0
04d84     B7 0F 06 F1 | 	add	objptr, #439
04d88     07 75 C2 FA | 	rdbyte	local06, objptr
04d8c     B7 0F 86 F1 | 	sub	objptr, #439
04d90     00 74 5E F2 | 	cmps	local06, #0 wcz
04d94     1C 00 90 ED |  if_be	jmp	#LR__0216
04d98                 | '         cmd4_memoryX[channel] := x
04d98     35 75 02 F6 | 	mov	local06, local01
04d9c     D0 0F 06 F1 | 	add	objptr, #464
04da0     07 75 02 F1 | 	add	local06, objptr
04da4     19 0E 86 F1 | 	sub	objptr, #25
04da8     07 7F C2 FA | 	rdbyte	local11, objptr
04dac     B7 0F 86 F1 | 	sub	objptr, #439
04db0     3A 7F 42 FC | 	wrbyte	local11, local06
04db4                 | LR__0216
04db4                 | '       if y > 0
04db4     B8 0F 06 F1 | 	add	objptr, #440
04db8     07 75 C2 FA | 	rdbyte	local06, objptr
04dbc     B8 0F 86 F1 | 	sub	objptr, #440
04dc0     00 74 5E F2 | 	cmps	local06, #0 wcz
04dc4     1C 00 90 ED |  if_be	jmp	#LR__0217
04dc8                 | '         cmd4_memoryY[channel] := y
04dc8     35 75 02 F6 | 	mov	local06, local01
04dcc     CC 0F 06 F1 | 	add	objptr, #460
04dd0     07 75 02 F1 | 	add	local06, objptr
04dd4     14 0E 86 F1 | 	sub	objptr, #20
04dd8     07 7F C2 FA | 	rdbyte	local11, objptr
04ddc     B8 0F 86 F1 | 	sub	objptr, #440
04de0     3A 7F 42 FC | 	wrbyte	local11, local06
04de4                 | LR__0217
04de4                 | ' 
04de4                 | '       doVibrato(channel)
04de4     35 5D 02 F6 | 	mov	arg01, local01
04de8     74 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
04dec     08 01 90 FD | 	jmp	#LR__0226
04df0                 | LR__0218
04df0                 | ' 
04df0                 | '     $6: doVibrato(channel)              ' Volume slide + Vibrato
04df0     35 5D 02 F6 | 	mov	arg01, local01
04df4     68 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
04df8     FC 00 90 FD | 	jmp	#LR__0226
04dfc                 | LR__0219
04dfc                 | ' 
04dfc                 | '     $E:
04dfc                 | '       if x == $C                        ' Cut note after Y ticks
04dfc     B7 0F 06 F1 | 	add	objptr, #439
04e00     07 75 C2 FA | 	rdbyte	local06, objptr
04e04     B7 0F 86 F1 | 	sub	objptr, #439
04e08     0C 74 0E F2 | 	cmp	local06, #12 wz
04e0c     34 00 90 5D |  if_ne	jmp	#LR__0220
04e10                 | '         if tickcounter == y
04e10     A1 0E 06 F1 | 	add	objptr, #161
04e14     07 75 C2 FA | 	rdbyte	local06, objptr
04e18     17 0F 06 F1 | 	add	objptr, #279
04e1c     07 7F C2 FA | 	rdbyte	local11, objptr
04e20     B8 0F 86 F1 | 	sub	objptr, #440
04e24     3F 75 0A F2 | 	cmp	local06, local11 wz
04e28     CC 00 90 5D |  if_ne	jmp	#LR__0225
04e2c                 | '           currVolume[channel] := 0
04e2c     02 6A 66 F0 | 	shl	local01, #2
04e30     FF 0E 06 F1 | 	add	objptr, #255
04e34     07 6B 02 F1 | 	add	local01, objptr
04e38     35 01 68 FC | 	wrlong	#0, local01
04e3c     FF 0E 86 F1 | 	sub	objptr, #255
04e40     B4 00 90 FD | 	jmp	#LR__0225
04e44                 | LR__0220
04e44                 | ' 
04e44                 | '       elseif x == $D                    ' Delay note Y ticks
04e44     B7 0F 06 F1 | 	add	objptr, #439
04e48     07 75 C2 FA | 	rdbyte	local06, objptr
04e4c     B7 0F 86 F1 | 	sub	objptr, #439
04e50     0D 74 0E F2 | 	cmp	local06, #13 wz
04e54     A0 00 90 5D |  if_ne	jmp	#LR__0224
04e58                 | '         if tickcounter == y
04e58     A1 0E 06 F1 | 	add	objptr, #161
04e5c     07 75 C2 FA | 	rdbyte	local06, objptr
04e60     17 0F 06 F1 | 	add	objptr, #279
04e64     07 7F C2 FA | 	rdbyte	local11, objptr
04e68     B8 0F 86 F1 | 	sub	objptr, #440
04e6c     3F 75 0A F2 | 	cmp	local06, local11 wz
04e70     0C 00 90 5D |  if_ne	jmp	#LR__0221
04e74                 | '           triggerNote(channel)
04e74     35 5D 02 F6 | 	mov	arg01, local01
04e78     FC EF BF FD | 	call	#_trackerplayer_spin2_triggerNote
04e7c     78 00 90 FD | 	jmp	#LR__0223
04e80                 | LR__0221
04e80                 | '         ' Do a "bugged trigger" if y >= currentSongSpeed
04e80                 | '         elseif (y >= currentSongSpeed) and tickcounter == (currentSongSpeed - 1)
04e80     B8 0F 06 F1 | 	add	objptr, #440
04e84     07 75 C2 FA | 	rdbyte	local06, objptr
04e88     14 0F 86 F1 | 	sub	objptr, #276
04e8c     07 7F C2 FA | 	rdbyte	local11, objptr
04e90     A4 0E 86 F1 | 	sub	objptr, #164
04e94     3F 75 5A F2 | 	cmps	local06, local11 wcz
04e98     5C 00 90 CD |  if_b	jmp	#LR__0222
04e9c     A4 0E 06 F1 | 	add	objptr, #164
04ea0     07 83 C2 FA | 	rdbyte	local13, objptr
04ea4     41 81 02 F6 | 	mov	local12, local13
04ea8     01 80 86 F1 | 	sub	local12, #1
04eac     03 0E 86 F1 | 	sub	objptr, #3
04eb0     07 87 C2 FA | 	rdbyte	local15, objptr
04eb4     A1 0E 86 F1 | 	sub	objptr, #161
04eb8     43 85 02 F6 | 	mov	local14, local15
04ebc     40 85 0A F2 | 	cmp	local14, local12 wz
04ec0     34 00 90 5D |  if_ne	jmp	#LR__0222
04ec4                 | '           currPeriod[channel] := lastSetPeriod[channel] ' Only set period, don't trigger a sample playback
04ec4     35 75 02 F6 | 	mov	local06, local01
04ec8     02 74 66 F0 | 	shl	local06, #2
04ecc     27 0F 06 F1 | 	add	objptr, #295
04ed0     07 7D 02 F6 | 	mov	local10, objptr
04ed4     07 75 02 F1 | 	add	local06, objptr
04ed8     35 7F 02 F6 | 	mov	local11, local01
04edc     02 7E 66 F0 | 	shl	local11, #2
04ee0     48 0E 86 F1 | 	sub	objptr, #72
04ee4     07 77 02 F6 | 	mov	local07, objptr
04ee8     3A 81 02 FB | 	rdlong	local12, local06
04eec     3B 7F 02 F1 | 	add	local11, local07
04ef0     3F 81 62 FC | 	wrlong	local12, local11
04ef4     DF 0E 86 F1 | 	sub	objptr, #223
04ef8                 | LR__0222
04ef8                 | LR__0223
04ef8                 | LR__0224
04ef8                 | LR__0225
04ef8                 | LR__0226
04ef8     AF F0 03 F6 | 	mov	ptra, fp
04efc     BF 00 A0 FD | 	call	#popregs_
04f00                 | _trackerplayer_spin2_handleEveryTickCommands_ret
04f00     2D 00 64 FD | 	ret
04f04                 | 
04f04                 | ' 
04f04                 | ' 
04f04                 | ' PRI doTremolo(channel) | depth, sineWave, speed
04f04                 | _trackerplayer_spin2_doTremolo
04f04     2E 31 02 F6 | 	mov	_var01, arg01
04f08     18 33 02 F6 | 	mov	_var02, _var01
04f0c     8B 0F 06 F1 | 	add	objptr, #395
04f10     07 33 02 F1 | 	add	_var02, objptr
04f14     05 00 00 FF 
04f18     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
04f1c     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
04f20     19 37 C2 FA | 	rdbyte	_var04, _var02
04f24     02 36 66 F0 | 	shl	_var04, #2
04f28     1A 37 02 F1 | 	add	_var04, _var03
04f2c                 | ' 
04f2c                 | '   sineWave := long[@vibratoWaveform][tremoloPos[channel]]
04f2c     1B 39 02 FB | 	rdlong	_var05, _var04
04f30     18 3B 02 F6 | 	mov	_var06, _var01
04f34     49 0E 06 F1 | 	add	objptr, #73
04f38     07 3B 02 F1 | 	add	_var06, objptr
04f3c                 | '   depth    := cmd7_memoryY[channel]
04f3c     1D 3D C2 FA | 	rdbyte	_var07, _var06
04f40     18 3F 02 F6 | 	mov	_var08, _var01
04f44     04 0E 06 F1 | 	add	objptr, #4
04f48     07 3F 02 F1 | 	add	_var08, objptr
04f4c                 | '   speed    := cmd7_memoryX[channel]
04f4c     1F 41 C2 FA | 	rdbyte	_var09, _var08
04f50                 | ' 
04f50                 | '   CASE_FAST vibratoType[channel]
04f50     18 43 02 F6 | 	mov	_var10, _var01
04f54     18 0E 86 F1 | 	sub	objptr, #24
04f58     07 45 02 F6 | 	mov	_var11, objptr
04f5c     07 43 02 F1 | 	add	_var10, objptr
04f60     21 47 C2 FA | 	rdbyte	_var12, _var10
04f64     03 46 26 F3 | 	fle	_var12, #3
04f68     23 49 02 F6 | 	mov	_var13, _var12
04f6c     05 00 00 FF 
04f70     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
04f74     C0 0F 86 F1 | 	sub	objptr, #448
04f78     30 48 62 FD | 	jmprel	_var13
04f7c                 | LR__0227
04f7c     0C 00 90 FD | 	jmp	#LR__0228
04f80     30 00 90 FD | 	jmp	#LR__0229
04f84     6C 00 90 FD | 	jmp	#LR__0230
04f88     B4 00 90 FD | 	jmp	#LR__0231
04f8c                 | LR__0228
04f8c                 | ' 
04f8c                 | '     0: deltaVolume[channel] := (depth * sineWave) SAR 6                                 ' Sine wave
04f8c     1C 3D 02 FD | 	qmul	_var07, _var05
04f90     18 4A 62 FD | 	getqx	_var14
04f94     06 4A C6 F0 | 	sar	_var14, #6
04f98     18 4D 02 F6 | 	mov	_var15, _var01
04f9c     02 4C 66 F0 | 	shl	_var15, #2
04fa0     0F 0F 06 F1 | 	add	objptr, #271
04fa4     07 4D 02 F1 | 	add	_var15, objptr
04fa8     26 4B 62 FC | 	wrlong	_var14, _var15
04fac     0F 0F 86 F1 | 	sub	objptr, #271
04fb0     8C 00 90 FD | 	jmp	#LR__0231
04fb4                 | LR__0229
04fb4                 | '     1: deltaVolume[channel] := (depth * (tremoloPos[channel] << 3) - 256) SAR 6         ' Ramp down wave
04fb4     18 4D 02 F6 | 	mov	_var15, _var01
04fb8     8B 0F 06 F1 | 	add	objptr, #395
04fbc     07 4D 02 F1 | 	add	_var15, objptr
04fc0     26 4F C2 FA | 	rdbyte	_var16, _var15
04fc4     03 4E 66 F0 | 	shl	_var16, #3
04fc8     27 3D 02 FD | 	qmul	_var07, _var16
04fcc     18 4A 62 FD | 	getqx	_var14
04fd0     00 4B 86 F1 | 	sub	_var14, #256
04fd4     06 4A C6 F0 | 	sar	_var14, #6
04fd8     18 51 02 F6 | 	mov	_var17, _var01
04fdc     02 50 66 F0 | 	shl	_var17, #2
04fe0     7C 0E 86 F1 | 	sub	objptr, #124
04fe4     07 51 02 F1 | 	add	_var17, objptr
04fe8     28 4B 62 FC | 	wrlong	_var14, _var17
04fec     0F 0F 86 F1 | 	sub	objptr, #271
04ff0     4C 00 90 FD | 	jmp	#LR__0231
04ff4                 | LR__0230
04ff4                 | '     2: deltaVolume[channel] := (depth * ((tremoloPos[channel] & 32) << 4) - 256) SAR 6  ' Square wave
04ff4     18 4D 02 F6 | 	mov	_var15, _var01
04ff8     8B 0F 06 F1 | 	add	objptr, #395
04ffc     07 53 02 F6 | 	mov	_var18, objptr
05000     07 4D 02 F1 | 	add	_var15, objptr
05004     26 4F C2 FA | 	rdbyte	_var16, _var15
05008     20 4E 06 F5 | 	and	_var16, #32
0500c     04 4E 66 F0 | 	shl	_var16, #4
05010     27 3D 02 FD | 	qmul	_var07, _var16
05014     18 54 62 FD | 	getqx	_var19
05018     2A 4B 02 F6 | 	mov	_var14, _var19
0501c     00 4B 86 F1 | 	sub	_var14, #256
05020     06 4A C6 F0 | 	sar	_var14, #6
05024     18 51 02 F6 | 	mov	_var17, _var01
05028     02 50 66 F0 | 	shl	_var17, #2
0502c     7C 0E 86 F1 | 	sub	objptr, #124
05030     07 57 02 F6 | 	mov	_var20, objptr
05034     07 51 02 F1 | 	add	_var17, objptr
05038     28 4B 62 FC | 	wrlong	_var14, _var17
0503c     0F 0F 86 F1 | 	sub	objptr, #271
05040                 | LR__0231
05040     8B 0F 06 F1 | 	add	objptr, #395
05044     07 31 02 F1 | 	add	_var01, objptr
05048     18 59 C2 FA | 	rdbyte	_var21, _var01
0504c     20 59 02 F1 | 	add	_var21, _var09
05050     3F 58 06 F5 | 	and	_var21, #63
05054                 | ' 
05054                 | '   tremoloPos[channel] := (tremoloPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
05054     18 59 42 FC | 	wrbyte	_var21, _var01
05058     8B 0F 86 F1 | 	sub	objptr, #395
0505c                 | _trackerplayer_spin2_doTremolo_ret
0505c     2D 00 64 FD | 	ret
05060                 | 
05060                 | ' 
05060                 | ' 
05060                 | ' PRI doVibrato(channel) | depth, sineWave, speed
05060                 | _trackerplayer_spin2_doVibrato
05060     2E 31 02 F6 | 	mov	_var01, arg01
05064     18 33 02 F6 | 	mov	_var02, _var01
05068     87 0F 06 F1 | 	add	objptr, #391
0506c     07 33 02 F1 | 	add	_var02, objptr
05070     05 00 00 FF 
05074     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
05078     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
0507c     19 37 C2 FA | 	rdbyte	_var04, _var02
05080     02 36 66 F0 | 	shl	_var04, #2
05084     1A 37 02 F1 | 	add	_var04, _var03
05088                 | ' 
05088                 | '   sineWave := long[@vibratoWaveform][vibratoPos[channel]]
05088     1B 39 02 FB | 	rdlong	_var05, _var04
0508c     18 3B 02 F6 | 	mov	_var06, _var01
05090     45 0E 06 F1 | 	add	objptr, #69
05094     07 3B 02 F1 | 	add	_var06, objptr
05098                 | '   depth    := cmd4_memoryY[channel]
05098     1D 3D C2 FA | 	rdbyte	_var07, _var06
0509c     18 3F 02 F6 | 	mov	_var08, _var01
050a0     04 0E 06 F1 | 	add	objptr, #4
050a4     07 3F 02 F1 | 	add	_var08, objptr
050a8                 | '   speed    := cmd4_memoryX[channel]
050a8     1F 41 C2 FA | 	rdbyte	_var09, _var08
050ac                 | ' 
050ac                 | '   CASE_FAST vibratoType[channel]
050ac     18 43 02 F6 | 	mov	_var10, _var01
050b0     10 0E 86 F1 | 	sub	objptr, #16
050b4     07 45 02 F6 | 	mov	_var11, objptr
050b8     07 43 02 F1 | 	add	_var10, objptr
050bc     21 47 C2 FA | 	rdbyte	_var12, _var10
050c0     03 46 26 F3 | 	fle	_var12, #3
050c4     23 49 02 F6 | 	mov	_var13, _var12
050c8     05 00 00 FF 
050cc     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
050d0     C0 0F 86 F1 | 	sub	objptr, #448
050d4     30 48 62 FD | 	jmprel	_var13
050d8                 | LR__0232
050d8     0C 00 90 FD | 	jmp	#LR__0233
050dc     30 00 90 FD | 	jmp	#LR__0234
050e0     6C 00 90 FD | 	jmp	#LR__0235
050e4     B4 00 90 FD | 	jmp	#LR__0236
050e8                 | LR__0233
050e8                 | ' 
050e8                 | '     0: deltaPeriod[channel] := (depth * sineWave) SAR 7                                 ' Sine wave
050e8     1C 3D 02 FD | 	qmul	_var07, _var05
050ec     18 4A 62 FD | 	getqx	_var14
050f0     07 4A C6 F0 | 	sar	_var14, #7
050f4     18 4D 02 F6 | 	mov	_var15, _var01
050f8     02 4C 66 F0 | 	shl	_var15, #2
050fc     EF 0E 06 F1 | 	add	objptr, #239
05100     07 4D 02 F1 | 	add	_var15, objptr
05104     26 4B 62 FC | 	wrlong	_var14, _var15
05108     EF 0E 86 F1 | 	sub	objptr, #239
0510c     8C 00 90 FD | 	jmp	#LR__0236
05110                 | LR__0234
05110                 | '     1: deltaPeriod[channel] := (depth * (vibratoPos[channel] << 3) - 256) SAR 7         ' Ramp down wave
05110     18 4D 02 F6 | 	mov	_var15, _var01
05114     87 0F 06 F1 | 	add	objptr, #391
05118     07 4D 02 F1 | 	add	_var15, objptr
0511c     26 4F C2 FA | 	rdbyte	_var16, _var15
05120     03 4E 66 F0 | 	shl	_var16, #3
05124     27 3D 02 FD | 	qmul	_var07, _var16
05128     18 4A 62 FD | 	getqx	_var14
0512c     00 4B 86 F1 | 	sub	_var14, #256
05130     07 4A C6 F0 | 	sar	_var14, #7
05134     18 51 02 F6 | 	mov	_var17, _var01
05138     02 50 66 F0 | 	shl	_var17, #2
0513c     98 0E 86 F1 | 	sub	objptr, #152
05140     07 51 02 F1 | 	add	_var17, objptr
05144     28 4B 62 FC | 	wrlong	_var14, _var17
05148     EF 0E 86 F1 | 	sub	objptr, #239
0514c     4C 00 90 FD | 	jmp	#LR__0236
05150                 | LR__0235
05150                 | '     2: deltaPeriod[channel] := (depth * ((vibratoPos[channel] & 32) << 4) - 256) SAR 7  ' Square wave
05150     18 4D 02 F6 | 	mov	_var15, _var01
05154     87 0F 06 F1 | 	add	objptr, #391
05158     07 53 02 F6 | 	mov	_var18, objptr
0515c     07 4D 02 F1 | 	add	_var15, objptr
05160     26 4F C2 FA | 	rdbyte	_var16, _var15
05164     20 4E 06 F5 | 	and	_var16, #32
05168     04 4E 66 F0 | 	shl	_var16, #4
0516c     27 3D 02 FD | 	qmul	_var07, _var16
05170     18 54 62 FD | 	getqx	_var19
05174     2A 4B 02 F6 | 	mov	_var14, _var19
05178     00 4B 86 F1 | 	sub	_var14, #256
0517c     07 4A C6 F0 | 	sar	_var14, #7
05180     18 51 02 F6 | 	mov	_var17, _var01
05184     02 50 66 F0 | 	shl	_var17, #2
05188     98 0E 86 F1 | 	sub	objptr, #152
0518c     07 57 02 F6 | 	mov	_var20, objptr
05190     07 51 02 F1 | 	add	_var17, objptr
05194     28 4B 62 FC | 	wrlong	_var14, _var17
05198     EF 0E 86 F1 | 	sub	objptr, #239
0519c                 | LR__0236
0519c     87 0F 06 F1 | 	add	objptr, #391
051a0     07 31 02 F1 | 	add	_var01, objptr
051a4     18 59 C2 FA | 	rdbyte	_var21, _var01
051a8     20 59 02 F1 | 	add	_var21, _var09
051ac     3F 58 06 F5 | 	and	_var21, #63
051b0                 | ' 
051b0                 | '   vibratoPos[channel] := (vibratoPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
051b0     18 59 42 FC | 	wrbyte	_var21, _var01
051b4     87 0F 86 F1 | 	sub	objptr, #391
051b8                 | _trackerplayer_spin2_doVibrato_ret
051b8     2D 00 64 FD | 	ret
051bc                 | 
051bc                 | ' 
051bc                 | ' 
051bc                 | ' PRI doPortamento(channel, period) | i, j, periodStep, tempPeriod
051bc                 | _trackerplayer_spin2_doPortamento
051bc                 | ' 
051bc                 | '   if period == currPeriod[channel]
051bc     2E 31 02 F6 | 	mov	_var01, arg01
051c0     02 30 66 F0 | 	shl	_var01, #2
051c4     DF 0E 06 F1 | 	add	objptr, #223
051c8     07 33 02 F6 | 	mov	_var02, objptr
051cc     07 31 02 F1 | 	add	_var01, objptr
051d0     18 35 02 FB | 	rdlong	_var03, _var01
051d4     1A 5F 0A F2 | 	cmp	arg02, _var03 wz
051d8                 | '     return
051d8     DF 0E 86 F1 | 	sub	objptr, #223
051dc     D4 01 90 AD |  if_e	jmp	#_trackerplayer_spin2_doPortamento_ret
051e0                 | ' 
051e0                 | '   if period > 0
051e0     00 5E 5E F2 | 	cmps	arg02, #0 wcz
051e4     1C 00 90 ED |  if_be	jmp	#LR__0237
051e8     2E 37 02 F6 | 	mov	_var04, arg01
051ec     02 36 66 F0 | 	shl	_var04, #2
051f0     97 0F 06 F1 | 	add	objptr, #407
051f4     07 37 02 F1 | 	add	_var04, objptr
051f8                 | '     portamentoPeriodMemory[channel] := period
051f8     1B 5F 62 FC | 	wrlong	arg02, _var04
051fc                 | '   else
051fc     97 0F 86 F1 | 	sub	objptr, #407
05200     18 00 90 FD | 	jmp	#LR__0238
05204                 | LR__0237
05204     2E 39 02 F6 | 	mov	_var05, arg01
05208     02 38 66 F0 | 	shl	_var05, #2
0520c     97 0F 06 F1 | 	add	objptr, #407
05210     07 39 02 F1 | 	add	_var05, objptr
05214                 | '     period := portamentoPeriodMemory[channel]
05214     1C 5F 02 FB | 	rdlong	arg02, _var05
05218     97 0F 86 F1 | 	sub	objptr, #407
0521c                 | LR__0238
0521c                 | ' 
0521c                 | '   if period > currPeriod[channel]
0521c     2E 31 02 F6 | 	mov	_var01, arg01
05220     02 30 66 F0 | 	shl	_var01, #2
05224     DF 0E 06 F1 | 	add	objptr, #223
05228     07 31 02 F1 | 	add	_var01, objptr
0522c     18 35 02 FB | 	rdlong	_var03, _var01
05230     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
05234     DF 0E 86 F1 | 	sub	objptr, #223
05238     50 00 90 ED |  if_be	jmp	#LR__0239
0523c     2E 3B 02 F6 | 	mov	_var06, arg01
05240     02 3A 66 F0 | 	shl	_var06, #2
05244     DF 0E 06 F1 | 	add	objptr, #223
05248     07 3B 02 F1 | 	add	_var06, objptr
0524c     2E 3D 02 F6 | 	mov	_var07, arg01
05250     E9 0E 06 F1 | 	add	objptr, #233
05254     1D 3F 02 FB | 	rdlong	_var08, _var06
05258     07 3D 02 F1 | 	add	_var07, objptr
0525c     1E 33 C2 FA | 	rdbyte	_var02, _var07
05260     19 3F 02 F1 | 	add	_var08, _var02
05264                 | '     currPeriod[channel] += cmd3_memoryZ[channel]
05264     1D 3F 62 FC | 	wrlong	_var08, _var06
05268     2E 41 02 F6 | 	mov	_var09, arg01
0526c     02 40 66 F0 | 	shl	_var09, #2
05270     E9 0E 86 F1 | 	sub	objptr, #233
05274     07 41 02 F1 | 	add	_var09, objptr
05278     20 43 02 FB | 	rdlong	_var10, _var09
0527c     2F 43 62 F3 | 	fles	_var10, arg02
05280                 | '     currPeriod[channel] <#= period
05280     20 43 62 FC | 	wrlong	_var10, _var09
05284     DF 0E 86 F1 | 	sub	objptr, #223
05288     6C 00 90 FD | 	jmp	#LR__0241
0528c                 | LR__0239
0528c                 | ' 
0528c                 | '   elseif period < currPeriod[channel]
0528c     2E 31 02 F6 | 	mov	_var01, arg01
05290     02 30 66 F0 | 	shl	_var01, #2
05294     DF 0E 06 F1 | 	add	objptr, #223
05298     07 31 02 F1 | 	add	_var01, objptr
0529c     18 35 02 FB | 	rdlong	_var03, _var01
052a0     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
052a4     DF 0E 86 F1 | 	sub	objptr, #223
052a8     4C 00 90 3D |  if_ae	jmp	#LR__0240
052ac     2E 45 02 F6 | 	mov	_var11, arg01
052b0     02 44 66 F0 | 	shl	_var11, #2
052b4     DF 0E 06 F1 | 	add	objptr, #223
052b8     07 45 02 F1 | 	add	_var11, objptr
052bc     2E 47 02 F6 | 	mov	_var12, arg01
052c0     E9 0E 06 F1 | 	add	objptr, #233
052c4     22 49 02 FB | 	rdlong	_var13, _var11
052c8     07 47 02 F1 | 	add	_var12, objptr
052cc     23 33 C2 FA | 	rdbyte	_var02, _var12
052d0     19 49 82 F1 | 	sub	_var13, _var02
052d4                 | '     currPeriod[channel] -= cmd3_memoryZ[channel]
052d4     22 49 62 FC | 	wrlong	_var13, _var11
052d8     2E 4B 02 F6 | 	mov	_var14, arg01
052dc     02 4A 66 F0 | 	shl	_var14, #2
052e0     E9 0E 86 F1 | 	sub	objptr, #233
052e4     07 4B 02 F1 | 	add	_var14, objptr
052e8     25 4D 02 FB | 	rdlong	_var15, _var14
052ec     2F 4D 42 F3 | 	fges	_var15, arg02
052f0                 | '     currPeriod[channel] #>= period
052f0     25 4D 62 FC | 	wrlong	_var15, _var14
052f4     DF 0E 86 F1 | 	sub	objptr, #223
052f8                 | LR__0240
052f8                 | LR__0241
052f8                 | ' 
052f8                 | '   ' Handle glissando if activated
052f8                 | '   if portaGlissando[channel] > 0
052f8     2E 31 02 F6 | 	mov	_var01, arg01
052fc     BC 0F 06 F1 | 	add	objptr, #444
05300     07 31 02 F1 | 	add	_var01, objptr
05304     18 35 C2 FA | 	rdbyte	_var03, _var01
05308     00 34 5E F2 | 	cmps	_var03, #0 wcz
0530c     BC 0F 86 F1 | 	sub	objptr, #444
05310     A0 00 90 ED |  if_be	jmp	#LR__0244
05314     2E 4F 02 F6 | 	mov	_var16, arg01
05318     02 4E 66 F0 | 	shl	_var16, #2
0531c     DF 0E 06 F1 | 	add	objptr, #223
05320     07 4F 02 F1 | 	add	_var16, objptr
05324                 | ' 
05324                 | '     tempPeriod := currPeriod[channel]
05324     27 51 02 FB | 	rdlong	_var17, _var16
05328                 | ' 
05328                 | '     repeat i from 0 to LAST_POS_IN_PERIOD_TBL
05328     00 52 06 F6 | 	mov	_var18, #0
0532c     DF 0E 86 F1 | 	sub	objptr, #223
05330     30 AD 9F FE | 	loc	pa,	#(@LR__0243-@LR__0242)
05334     93 00 A0 FD | 	call	#FCACHE_LOAD_
05338                 | LR__0242
05338     06 00 00 FF 
0533c     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05340     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
05344     2E 55 02 F6 | 	mov	_var19, arg01
05348     D3 0E 06 F1 | 	add	objptr, #211
0534c     07 55 02 F1 | 	add	_var19, objptr
05350     2A 33 C2 FA | 	rdbyte	_var02, _var19
05354     19 57 02 F6 | 	mov	_var20, _var02
05358     03 56 66 F0 | 	shl	_var20, #3
0535c     19 57 02 F1 | 	add	_var20, _var02
05360     03 56 66 F0 | 	shl	_var20, #3
05364     2B 35 02 F1 | 	add	_var03, _var20
05368     29 59 02 F6 | 	mov	_var21, _var18
0536c     01 58 66 F0 | 	shl	_var21, #1
05370     1A 59 02 F1 | 	add	_var21, _var03
05374                 | ' 
05374                 | '       periodStep := word[@periodTable + (currFineTune[channel] * BYTES_IN_PERIOD_TABLE)][i]
05374     2C 5B E2 FA | 	rdword	_var22, _var21
05378                 | '       if tempPeriod >= periodStep
05378     2D 51 5A F2 | 	cmps	_var17, _var22 wcz
0537c                 | '         i += 1000
0537c     06 00 00 FF 
05380     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05384     D3 0E 86 F1 | 	sub	objptr, #211
05388     01 00 00 3F 
0538c     E8 53 06 31 |  if_ae	add	_var18, ##1000
05390     01 52 06 F1 | 	add	_var18, #1
05394     24 52 5E F2 | 	cmps	_var18, #36 wcz
05398     9C FF 9F CD |  if_b	jmp	#LR__0242
0539c                 | LR__0243
0539c     28 5B 82 F1 | 	sub	_var22, _var17
053a0     02 5C 66 F0 | 	shl	arg01, #2
053a4     EF 0E 06 F1 | 	add	objptr, #239
053a8     07 5D 02 F1 | 	add	arg01, objptr
053ac                 | ' 
053ac                 | '     deltaPeriod[channel] := periodStep - tempPeriod
053ac     2E 5B 62 FC | 	wrlong	_var22, arg01
053b0     EF 0E 86 F1 | 	sub	objptr, #239
053b4                 | LR__0244
053b4                 | _trackerplayer_spin2_doPortamento_ret
053b4     2D 00 64 FD | 	ret
053b8                 | 
053b8                 | ' 
053b8                 | ' 
053b8                 | ' PRI doVolumeSlide(channel)
053b8                 | _trackerplayer_spin2_doVolumeSlide
053b8                 | ' 
053b8                 | '   if x > 0
053b8     B7 0F 06 F1 | 	add	objptr, #439
053bc     07 31 C2 FA | 	rdbyte	_var01, objptr
053c0     B7 0F 86 F1 | 	sub	objptr, #439
053c4     00 30 5E F2 | 	cmps	_var01, #0 wcz
053c8     28 00 90 ED |  if_be	jmp	#LR__0245
053cc     2E 33 02 F6 | 	mov	_var02, arg01
053d0     02 32 66 F0 | 	shl	_var02, #2
053d4     FF 0E 06 F1 | 	add	objptr, #255
053d8     07 33 02 F1 | 	add	_var02, objptr
053dc     19 35 02 FB | 	rdlong	_var03, _var02
053e0     B8 0E 06 F1 | 	add	objptr, #184
053e4     07 37 C2 FA | 	rdbyte	_var04, objptr
053e8     B7 0F 86 F1 | 	sub	objptr, #439
053ec     1B 35 02 F1 | 	add	_var03, _var04
053f0                 | '     currVolume[channel] += x
053f0     19 35 62 FC | 	wrlong	_var03, _var02
053f4                 | LR__0245
053f4                 | '   if y > 0
053f4     B8 0F 06 F1 | 	add	objptr, #440
053f8     07 31 C2 FA | 	rdbyte	_var01, objptr
053fc     B8 0F 86 F1 | 	sub	objptr, #440
05400     00 30 5E F2 | 	cmps	_var01, #0 wcz
05404     24 00 90 ED |  if_be	jmp	#LR__0246
05408     02 5C 66 F0 | 	shl	arg01, #2
0540c     FF 0E 06 F1 | 	add	objptr, #255
05410     07 5D 02 F1 | 	add	arg01, objptr
05414     2E 39 02 FB | 	rdlong	_var05, arg01
05418     B9 0E 06 F1 | 	add	objptr, #185
0541c     07 37 C2 FA | 	rdbyte	_var04, objptr
05420     B8 0F 86 F1 | 	sub	objptr, #440
05424     1B 39 82 F1 | 	sub	_var05, _var04
05428                 | '     currVolume[channel] -= y
05428     2E 39 62 FC | 	wrlong	_var05, arg01
0542c                 | LR__0246
0542c                 | _trackerplayer_spin2_doVolumeSlide_ret
0542c     2D 00 64 FD | 	ret
05430                 | hubexit
05430     81 00 80 FD | 	jmp	#cogexit
05434                 | 
05434                 | __system___setbaud
05434     14 0A 07 FB | 	rdlong	muldiva_, #20
05438     2E 0D 03 F6 | 	mov	muldivb_, arg01
0543c     D0 00 A0 FD | 	call	#divide_
05440     40 7C 64 FD | 	dirl	#62
05444     40 7E 64 FD | 	dirl	#63
05448     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
0544c     10 0C 67 F0 | 	shl	muldivb_, #16
05450     07 5E 06 F6 | 	mov	arg02, #7
05454     86 5F 02 F1 | 	add	arg02, muldivb_
05458     3E F8 0C FC | 	wrpin	#124, #62
0545c     3E 5E 16 FC | 	wxpin	arg02, #62
05460     3F 7C 0C FC | 	wrpin	#62, #63
05464     14 5E 06 F1 | 	add	arg02, #20
05468     3F 5E 16 FC | 	wxpin	arg02, #63
0546c     41 7C 64 FD | 	dirh	#62
05470     41 7E 64 FD | 	dirh	#63
05474                 | __system___setbaud_ret
05474     2D 00 64 FD | 	ret
05478                 | 
05478                 | __system___txraw
05478     02 5A 05 F6 | 	mov	COUNT_, #2
0547c     B0 00 A0 FD | 	call	#pushregs_
05480     2E 6B 02 F6 | 	mov	local01, arg01
05484     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
05488     0C 00 90 5D |  if_ne	jmp	#LR__0247
0548c     C2 01 00 FF 
05490     00 5C 06 F6 | 	mov	arg01, ##230400
05494     9C FF BF FD | 	call	#__system___setbaud
05498                 | LR__0247
05498     3E 6A 26 FC | 	wypin	local01, #62
0549c     1F 02 64 FD | 	waitx	#1
054a0     64 AB 9F FE | 	loc	pa,	#(@LR__0249-@LR__0248)
054a4     93 00 A0 FD | 	call	#FCACHE_LOAD_
054a8                 | LR__0248
054a8     40 7C 74 FD | 	testp	#62 wc
054ac     F8 FF 9F 3D |  if_nc	jmp	#LR__0248
054b0                 | LR__0249
054b0     01 2A 06 F6 | 	mov	result1, #1
054b4     AF F0 03 F6 | 	mov	ptra, fp
054b8     BF 00 A0 FD | 	call	#popregs_
054bc                 | __system___txraw_ret
054bc     2D 00 64 FD | 	ret
054c0                 | 
054c0                 | __system___rxraw
054c0     0D 5A 05 F6 | 	mov	COUNT_, #13
054c4     B0 00 A0 FD | 	call	#pushregs_
054c8     2E 6B 02 F6 | 	mov	local01, arg01
054cc     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
054d0     0C 00 90 5D |  if_ne	jmp	#LR__0250
054d4     C2 01 00 FF 
054d8     00 5C 06 F6 | 	mov	arg01, ##230400
054dc     54 FF BF FD | 	call	#__system___setbaud
054e0                 | LR__0250
054e0     00 6A 0E F2 | 	cmp	local01, #0 wz
054e4     18 00 90 AD |  if_e	jmp	#LR__0251
054e8     14 6E 06 FB | 	rdlong	local03, #20
054ec     0A 6E 46 F0 | 	shr	local03, #10
054f0     37 6B 02 FD | 	qmul	local01, local03
054f4     18 70 62 FD | 	getqx	local04
054f8     1A 72 62 FD | 	getct	local05
054fc     38 73 02 F1 | 	add	local05, local04
05500                 | LR__0251
05500     01 74 66 F6 | 	neg	local06, #1
05504     00 76 06 F6 | 	mov	local07, #0
05508     04 14 06 F1 | 	add	ptr___system__dat__, #4
0550c     0A 79 02 FB | 	rdlong	local08, ptr___system__dat__
05510     04 14 86 F1 | 	sub	ptr___system__dat__, #4
05514                 | LR__0252
05514     08 78 16 F4 | 	testb	local08, #8 wc
05518     09 78 76 F4 | 	testbn	local08, #9 andc
0551c     0A 78 46 F0 | 	shr	local08, #10
05520     01 76 06 C6 |  if_b	mov	local07, #1
05524     10 00 90 CD |  if_b	jmp	#LR__0253
05528     40 7E 6C FD | 	testp	#63 wz
0552c     01 76 06 A6 |  if_e	mov	local07, #1
05530     3F 78 8E AA |  if_e	rdpin	local08, #63
05534     04 78 46 A0 |  if_e	shr	local08, #4
05538                 | LR__0253
05538     00 6C 06 F6 | 	mov	local02, #0
0553c     00 76 0E F2 | 	cmp	local07, #0 wz
05540     01 6C 66 56 |  if_ne	neg	local02, #1
05544     00 7A 06 F6 | 	mov	local09, #0
05548     00 7C 06 F6 | 	mov	local10, #0
0554c     00 6A 0E F2 | 	cmp	local01, #0 wz
05550     01 7C 66 56 |  if_ne	neg	local10, #1
05554     00 7E 06 F6 | 	mov	local11, #0
05558     00 80 06 F6 | 	mov	local12, #0
0555c     1A 82 62 FD | 	getct	local13
05560     39 83 82 F1 | 	sub	local13, local05
05564     00 82 5E F2 | 	cmps	local13, #0 wcz
05568     01 80 66 C6 |  if_b	neg	local12, #1
0556c     00 80 0E F2 | 	cmp	local12, #0 wz
05570     01 7E 66 56 |  if_ne	neg	local11, #1
05574     3F 7D CA F7 | 	test	local10, local11 wz
05578     01 7A 66 56 |  if_ne	neg	local09, #1
0557c     3D 6D 4A F5 | 	or	local02, local09 wz
05580     90 FF 9F AD |  if_e	jmp	#LR__0252
05584     00 76 0E F2 | 	cmp	local07, #0 wz
05588     3C 75 02 56 |  if_ne	mov	local06, local08
0558c     FF 74 06 55 |  if_ne	and	local06, #255
05590     04 14 06 F1 | 	add	ptr___system__dat__, #4
05594     0A 79 62 FC | 	wrlong	local08, ptr___system__dat__
05598     04 14 86 F1 | 	sub	ptr___system__dat__, #4
0559c     3A 2B 02 F6 | 	mov	result1, local06
055a0     AF F0 03 F6 | 	mov	ptra, fp
055a4     BF 00 A0 FD | 	call	#popregs_
055a8                 | __system___rxraw_ret
055a8     2D 00 64 FD | 	ret
055ac                 | 
055ac                 | __system____builtin_memmove
055ac     2E 31 02 F6 | 	mov	_var01, arg01
055b0     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
055b4     50 00 90 3D |  if_ae	jmp	#LR__0261
055b8     64 AA 9F FE | 	loc	pa,	#(@LR__0255-@LR__0254)
055bc     93 00 A0 FD | 	call	#FCACHE_LOAD_
055c0                 | LR__0254
055c0     03 60 5E F2 | 	cmps	arg03, #3 wcz
055c4     18 00 90 ED |  if_be	jmp	#LR__0256
055c8     2F 33 02 FB | 	rdlong	_var02, arg02
055cc     2E 33 62 FC | 	wrlong	_var02, arg01
055d0     04 5C 06 F1 | 	add	arg01, #4
055d4     04 5E 06 F1 | 	add	arg02, #4
055d8     04 60 86 F1 | 	sub	arg03, #4
055dc     E0 FF 9F FD | 	jmp	#LR__0254
055e0                 | LR__0255
055e0                 | LR__0256
055e0     30 35 0A F6 | 	mov	_var03, arg03 wz
055e4     4C 00 90 AD |  if_e	jmp	#LR__0267
055e8     28 AA 9F FE | 	loc	pa,	#(@LR__0259-@LR__0257)
055ec     93 00 A0 FD | 	call	#FCACHE_LOAD_
055f0                 | LR__0257
055f0     1A 09 D8 FC | 	rep	@LR__0260, _var03
055f4                 | LR__0258
055f4     2F 33 C2 FA | 	rdbyte	_var02, arg02
055f8     2E 33 42 FC | 	wrbyte	_var02, arg01
055fc     01 5C 06 F1 | 	add	arg01, #1
05600     01 5E 06 F1 | 	add	arg02, #1
05604                 | LR__0259
05604                 | LR__0260
05604     2C 00 90 FD | 	jmp	#LR__0267
05608                 | LR__0261
05608     30 5D 02 F1 | 	add	arg01, arg03
0560c     30 5F 02 F1 | 	add	arg02, arg03
05610     30 37 0A F6 | 	mov	_var04, arg03 wz
05614     1C 00 90 AD |  if_e	jmp	#LR__0266
05618     F8 A9 9F FE | 	loc	pa,	#(@LR__0264-@LR__0262)
0561c     93 00 A0 FD | 	call	#FCACHE_LOAD_
05620                 | LR__0262
05620     1B 09 D8 FC | 	rep	@LR__0265, _var04
05624                 | LR__0263
05624     01 5C 86 F1 | 	sub	arg01, #1
05628     01 5E 86 F1 | 	sub	arg02, #1
0562c     2F 33 C2 FA | 	rdbyte	_var02, arg02
05630     2E 33 42 FC | 	wrbyte	_var02, arg01
05634                 | LR__0264
05634                 | LR__0265
05634                 | LR__0266
05634                 | LR__0267
05634     18 2B 02 F6 | 	mov	result1, _var01
05638                 | __system____builtin_memmove_ret
05638     2D 00 64 FD | 	ret
0563c                 | 
0563c                 | __system__longmove
0563c     2E 31 02 F6 | 	mov	_var01, arg01
05640     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
05644     28 00 90 3D |  if_ae	jmp	#LR__0272
05648     30 33 0A F6 | 	mov	_var02, arg03 wz
0564c     54 00 90 AD |  if_e	jmp	#LR__0278
05650     C0 A9 9F FE | 	loc	pa,	#(@LR__0270-@LR__0268)
05654     93 00 A0 FD | 	call	#FCACHE_LOAD_
05658                 | LR__0268
05658     19 09 D8 FC | 	rep	@LR__0271, _var02
0565c                 | LR__0269
0565c     2F 35 02 FB | 	rdlong	_var03, arg02
05660     2E 35 62 FC | 	wrlong	_var03, arg01
05664     04 5C 06 F1 | 	add	arg01, #4
05668     04 5E 06 F1 | 	add	arg02, #4
0566c                 | LR__0270
0566c                 | LR__0271
0566c     34 00 90 FD | 	jmp	#LR__0278
05670                 | LR__0272
05670     30 37 02 F6 | 	mov	_var04, arg03
05674     02 36 66 F0 | 	shl	_var04, #2
05678     1B 5D 02 F1 | 	add	arg01, _var04
0567c     1B 5F 02 F1 | 	add	arg02, _var04
05680     30 39 0A F6 | 	mov	_var05, arg03 wz
05684     1C 00 90 AD |  if_e	jmp	#LR__0277
05688     88 A9 9F FE | 	loc	pa,	#(@LR__0275-@LR__0273)
0568c     93 00 A0 FD | 	call	#FCACHE_LOAD_
05690                 | LR__0273
05690     1C 09 D8 FC | 	rep	@LR__0276, _var05
05694                 | LR__0274
05694     04 5C 86 F1 | 	sub	arg01, #4
05698     04 5E 86 F1 | 	sub	arg02, #4
0569c     2F 35 02 FB | 	rdlong	_var03, arg02
056a0     2E 35 62 FC | 	wrlong	_var03, arg01
056a4                 | LR__0275
056a4                 | LR__0276
056a4                 | LR__0277
056a4                 | LR__0278
056a4     18 2B 02 F6 | 	mov	result1, _var01
056a8                 | __system__longmove_ret
056a8     2D 00 64 FD | 	ret
056ac                 | 
056ac                 | __system____topofstack
056ac     00 5A 05 F6 | 	mov	COUNT_, #0
056b0     B0 00 A0 FD | 	call	#pushregs_
056b4     0C F0 07 F1 | 	add	ptra, #12
056b8     04 5E 05 F1 | 	add	fp, #4
056bc     AF 5C 62 FC | 	wrlong	arg01, fp
056c0     AF 2A 02 F6 | 	mov	result1, fp
056c4     04 5E 85 F1 | 	sub	fp, #4
056c8     AF F0 03 F6 | 	mov	ptra, fp
056cc     BF 00 A0 FD | 	call	#popregs_
056d0                 | __system____topofstack_ret
056d0     2D 00 64 FD | 	ret
056d4                 | 
056d4                 | __system___make_methodptr
056d4     04 5A 05 F6 | 	mov	COUNT_, #4
056d8     B0 00 A0 FD | 	call	#pushregs_
056dc     2E 6B 02 F6 | 	mov	local01, arg01
056e0     2F 6D 02 F6 | 	mov	local02, arg02
056e4     08 5C 06 F6 | 	mov	arg01, #8
056e8     84 0A B0 FD | 	call	#__system___gc_alloc_managed
056ec     15 6F 0A F6 | 	mov	local03, result1 wz
056f0     10 00 90 AD |  if_e	jmp	#LR__0279
056f4     37 6B 62 FC | 	wrlong	local01, local03
056f8     37 71 02 F6 | 	mov	local04, local03
056fc     04 70 06 F1 | 	add	local04, #4
05700     38 6D 62 FC | 	wrlong	local02, local04
05704                 | LR__0279
05704     37 2B 02 F6 | 	mov	result1, local03
05708     AF F0 03 F6 | 	mov	ptra, fp
0570c     BF 00 A0 FD | 	call	#popregs_
05710                 | __system___make_methodptr_ret
05710     2D 00 64 FD | 	ret
05714                 | 
05714                 | __system___lockmem
05714     02 5A 05 F6 | 	mov	COUNT_, #2
05718     B0 00 A0 FD | 	call	#pushregs_
0571c     01 2A 62 FD | 	cogid	result1
05720     15 6B 02 F6 | 	mov	local01, result1
05724     00 6B 06 F1 | 	add	local01, #256
05728                 | LR__0280
05728     2E 6D 0A FB | 	rdlong	local02, arg01 wz
0572c     2E 6B 62 AC |  if_e	wrlong	local01, arg01
05730     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05734     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05738     35 6D 0A F2 | 	cmp	local02, local01 wz
0573c     E8 FF 9F 5D |  if_ne	jmp	#LR__0280
05740     AF F0 03 F6 | 	mov	ptra, fp
05744     BF 00 A0 FD | 	call	#popregs_
05748                 | __system___lockmem_ret
05748     2D 00 64 FD | 	ret
0574c                 | 
0574c                 | __system___tx
0574c     02 5A 05 F6 | 	mov	COUNT_, #2
05750     B0 00 A0 FD | 	call	#pushregs_
05754     2E 6B 02 F6 | 	mov	local01, arg01
05758     0A 6A 0E F2 | 	cmp	local01, #10 wz
0575c     20 00 90 5D |  if_ne	jmp	#LR__0281
05760     08 14 06 F1 | 	add	ptr___system__dat__, #8
05764     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
05768     08 14 86 F1 | 	sub	ptr___system__dat__, #8
0576c     02 6C CE F7 | 	test	local02, #2 wz
05770     0C 00 90 AD |  if_e	jmp	#LR__0281
05774     0D 6C 06 F6 | 	mov	local02, #13
05778     0D 5C 06 F6 | 	mov	arg01, #13
0577c     F8 FC BF FD | 	call	#__system___txraw
05780                 | LR__0281
05780     35 5D 02 F6 | 	mov	arg01, local01
05784     F0 FC BF FD | 	call	#__system___txraw
05788     AF F0 03 F6 | 	mov	ptra, fp
0578c     BF 00 A0 FD | 	call	#popregs_
05790                 | __system___tx_ret
05790     2D 00 64 FD | 	ret
05794                 | 
05794                 | __system___rx
05794     02 5A 05 F6 | 	mov	COUNT_, #2
05798     B0 00 A0 FD | 	call	#pushregs_
0579c                 | LR__0282
0579c     00 5C 06 F6 | 	mov	arg01, #0
057a0     1C FD BF FD | 	call	#__system___rxraw
057a4     15 6B 02 F6 | 	mov	local01, result1
057a8     FF FF 7F FF 
057ac     FF 6B 0E F2 | 	cmp	local01, ##-1 wz
057b0     E8 FF 9F AD |  if_e	jmp	#LR__0282
057b4     0D 6A 0E F2 | 	cmp	local01, #13 wz
057b8     14 00 90 5D |  if_ne	jmp	#LR__0283
057bc     08 14 06 F1 | 	add	ptr___system__dat__, #8
057c0     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
057c4     08 14 86 F1 | 	sub	ptr___system__dat__, #8
057c8     02 6C CE F7 | 	test	local02, #2 wz
057cc     0A 6A 06 56 |  if_ne	mov	local01, #10
057d0                 | LR__0283
057d0     08 14 06 F1 | 	add	ptr___system__dat__, #8
057d4     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
057d8     08 14 86 F1 | 	sub	ptr___system__dat__, #8
057dc     01 6C CE F7 | 	test	local02, #1 wz
057e0     1C 00 90 AD |  if_e	jmp	#LR__0286
057e4     7F 6A 0E F2 | 	cmp	local01, #127 wz
057e8     0C 00 90 5D |  if_ne	jmp	#LR__0284
057ec     08 5C 06 F6 | 	mov	arg01, #8
057f0     58 FF BF FD | 	call	#__system___tx
057f4     08 00 90 FD | 	jmp	#LR__0285
057f8                 | LR__0284
057f8     35 5D 02 F6 | 	mov	arg01, local01
057fc     4C FF BF FD | 	call	#__system___tx
05800                 | LR__0285
05800                 | LR__0286
05800     35 2B 02 F6 | 	mov	result1, local01
05804     AF F0 03 F6 | 	mov	ptra, fp
05808     BF 00 A0 FD | 	call	#popregs_
0580c                 | __system___rx_ret
0580c     2D 00 64 FD | 	ret
05810                 | 
05810                 | __system___pinread
05810     20 5C CE F7 | 	test	arg01, #32 wz
05814     FF 31 02 56 |  if_ne	mov	_var01, inb
05818     FE 31 02 A6 |  if_e	mov	_var01, ina
0581c     18 2B 02 F6 | 	mov	result1, _var01
05820     2E 2B 42 F0 | 	shr	result1, arg01
05824     06 5C 46 F0 | 	shr	arg01, #6
05828     2E 2B 42 F7 | 	zerox	result1, arg01
0582c                 | __system___pinread_ret
0582c     2D 00 64 FD | 	ret
05830                 | 
05830                 | __system___waitms
05830     03 5A 05 F6 | 	mov	COUNT_, #3
05834     B0 00 A0 FD | 	call	#pushregs_
05838     2E 6B 02 F6 | 	mov	local01, arg01
0583c     14 6C 06 FB | 	rdlong	local02, #20
05840     D4 A7 9F FE | 	loc	pa,	#(@LR__0288-@LR__0287)
05844     93 00 A0 FD | 	call	#FCACHE_LOAD_
05848                 | LR__0287
05848     01 00 00 FF 
0584c     E8 6B 5E F2 | 	cmps	local01, ##1000 wcz
05850     1F 6C 62 1D |  if_a	waitx	local02
05854     01 00 00 1F 
05858     E8 6B 86 11 |  if_a	sub	local01, ##1000
0585c     E8 FF 9F 1D |  if_a	jmp	#LR__0287
05860                 | LR__0288
05860     0C 14 06 F1 | 	add	ptr___system__dat__, #12
05864     0A 6F 0A FB | 	rdlong	local03, ptr___system__dat__ wz
05868     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
0586c     20 00 90 5D |  if_ne	jmp	#LR__0289
05870     36 0B 03 F6 | 	mov	muldiva_, local02
05874     01 00 00 FF 
05878     E8 0D 07 F6 | 	mov	muldivb_, ##1000
0587c     CC 00 A0 FD | 	call	#unsdivide_
05880     86 6F 02 F6 | 	mov	local03, muldivb_
05884     0C 14 06 F1 | 	add	ptr___system__dat__, #12
05888     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
0588c     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
05890                 | LR__0289
05890     00 6A 5E F2 | 	cmps	local01, #0 wcz
05894     37 6B 02 1D |  if_a	qmul	local01, local03
05898     18 5C 62 1D |  if_a	getqx	arg01
0589c     1F 5C 62 1D |  if_a	waitx	arg01
058a0     AF F0 03 F6 | 	mov	ptra, fp
058a4     BF 00 A0 FD | 	call	#popregs_
058a8                 | __system___waitms_ret
058a8     2D 00 64 FD | 	ret
058ac                 | 
058ac                 | __system___waitus
058ac     02 5A 05 F6 | 	mov	COUNT_, #2
058b0     B0 00 A0 FD | 	call	#pushregs_
058b4     2E 6B 02 F6 | 	mov	local01, arg01
058b8     10 14 06 F1 | 	add	ptr___system__dat__, #16
058bc     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
058c0     10 14 86 F1 | 	sub	ptr___system__dat__, #16
058c4     20 00 90 5D |  if_ne	jmp	#LR__0290
058c8     14 0A 07 FB | 	rdlong	muldiva_, #20
058cc     A1 07 00 FF 
058d0     40 0C 07 F6 | 	mov	muldivb_, ##1000000
058d4     CC 00 A0 FD | 	call	#unsdivide_
058d8     86 6D 02 F6 | 	mov	local02, muldivb_
058dc     10 14 06 F1 | 	add	ptr___system__dat__, #16
058e0     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
058e4     10 14 86 F1 | 	sub	ptr___system__dat__, #16
058e8                 | LR__0290
058e8     36 6B 02 FD | 	qmul	local01, local02
058ec     18 5C 62 FD | 	getqx	arg01
058f0     1F 5C 62 FD | 	waitx	arg01
058f4     AF F0 03 F6 | 	mov	ptra, fp
058f8     BF 00 A0 FD | 	call	#popregs_
058fc                 | __system___waitus_ret
058fc     2D 00 64 FD | 	ret
05900                 | 
05900                 | __system___basic_open
05900     05 5A 05 F6 | 	mov	COUNT_, #5
05904     B0 00 A0 FD | 	call	#pushregs_
05908     2F 6B 02 F6 | 	mov	local01, arg02
0590c     30 6D 02 F6 | 	mov	local02, arg03
05910     31 6F 02 F6 | 	mov	local03, arg04
05914     5C 10 B0 FD | 	call	#__system____getftab
05918     15 71 0A F6 | 	mov	local04, result1 wz
0591c     18 00 90 5D |  if_ne	jmp	#LR__0291
05920     03 5D 02 F6 | 	mov	arg01, abortchain
05924     0C 5E 06 F6 | 	mov	arg02, #12
05928     01 60 06 F6 | 	mov	arg03, #1
0592c     F0 00 A0 FD | 	call	#__longjmp
05930     01 2A 66 F6 | 	neg	result1, #1
05934     70 00 90 FD | 	jmp	#LR__0295
05938                 | LR__0291
05938     00 6A 0E F2 | 	cmp	local01, #0 wz
0593c     48 00 90 AD |  if_e	jmp	#LR__0293
05940     04 5C 06 F6 | 	mov	arg01, #4
05944     28 08 B0 FD | 	call	#__system___gc_alloc_managed
05948     15 73 0A F6 | 	mov	local05, result1 wz
0594c     18 00 90 5D |  if_ne	jmp	#LR__0292
05950     03 5D 02 F6 | 	mov	arg01, abortchain
05954     07 5E 06 F6 | 	mov	arg02, #7
05958     01 60 06 F6 | 	mov	arg03, #1
0595c     F0 00 A0 FD | 	call	#__longjmp
05960     01 2A 66 F6 | 	neg	result1, #1
05964     40 00 90 FD | 	jmp	#LR__0295
05968                 | LR__0292
05968     39 6B 62 FC | 	wrlong	local01, local05
0596c     08 5F 02 F6 | 	mov	arg02, ptr___struct___bas_wrap_sender_tx_
05970     39 5D 02 F6 | 	mov	arg01, local05
05974     5C FD BF FD | 	call	#__system___make_methodptr
05978     18 70 06 F1 | 	add	local04, #24
0597c     38 2B 62 FC | 	wrlong	result1, local04
05980     18 70 86 F1 | 	sub	local04, #24
05984     0C 00 90 FD | 	jmp	#LR__0294
05988                 | LR__0293
05988     18 70 06 F1 | 	add	local04, #24
0598c     38 6B 62 FC | 	wrlong	local01, local04
05990     18 70 86 F1 | 	sub	local04, #24
05994                 | LR__0294
05994     1C 70 06 F1 | 	add	local04, #28
05998     38 6D 62 FC | 	wrlong	local02, local04
0599c     04 70 06 F1 | 	add	local04, #4
059a0     38 6F 62 FC | 	wrlong	local03, local04
059a4     00 2A 06 F6 | 	mov	result1, #0
059a8                 | LR__0295
059a8     AF F0 03 F6 | 	mov	ptra, fp
059ac     BF 00 A0 FD | 	call	#popregs_
059b0                 | __system___basic_open_ret
059b0     2D 00 64 FD | 	ret
059b4                 | 
059b4                 | __system___basic_print_string
059b4     03 5A 05 F6 | 	mov	COUNT_, #3
059b8     B0 00 A0 FD | 	call	#pushregs_
059bc     2F 6B 02 F6 | 	mov	local01, arg02
059c0     30 6D 02 F6 | 	mov	local02, arg03
059c4     70 11 B0 FD | 	call	#__system___gettxfunc
059c8     15 6F 0A F6 | 	mov	local03, result1 wz
059cc     00 2A 06 A6 |  if_e	mov	result1, #0
059d0     1C 00 90 AD |  if_e	jmp	#LR__0296
059d4     00 6A 0E F2 | 	cmp	local01, #0 wz
059d8     00 2A 06 A6 |  if_e	mov	result1, #0
059dc     10 00 90 AD |  if_e	jmp	#LR__0296
059e0     37 5D 02 F6 | 	mov	arg01, local03
059e4     36 5F 02 F6 | 	mov	arg02, local02
059e8     35 61 02 F6 | 	mov	arg03, local01
059ec     6C 00 B0 FD | 	call	#__system___fmtstr
059f0                 | LR__0296
059f0     AF F0 03 F6 | 	mov	ptra, fp
059f4     BF 00 A0 FD | 	call	#popregs_
059f8                 | __system___basic_print_string_ret
059f8     2D 00 64 FD | 	ret
059fc                 | 
059fc                 | __system___fmtchar
059fc     00 5A 05 F6 | 	mov	COUNT_, #0
05a00     B0 00 A0 FD | 	call	#pushregs_
05a04     18 F0 07 F1 | 	add	ptra, #24
05a08     04 5E 05 F1 | 	add	fp, #4
05a0c     AF 5C 62 FC | 	wrlong	arg01, fp
05a10     04 5E 05 F1 | 	add	fp, #4
05a14     AF 5E 62 FC | 	wrlong	arg02, fp
05a18     04 5E 05 F1 | 	add	fp, #4
05a1c     AF 60 62 FC | 	wrlong	arg03, fp
05a20     04 5E 05 F1 | 	add	fp, #4
05a24     AF 60 42 FC | 	wrbyte	arg03, fp
05a28     01 5E 05 F1 | 	add	fp, #1
05a2c     AF 00 48 FC | 	wrbyte	#0, fp
05a30     01 5E 85 F1 | 	sub	fp, #1
05a34     AF 60 02 F6 | 	mov	arg03, fp
05a38     0C 5E 85 F1 | 	sub	fp, #12
05a3c     AF 5C 02 FB | 	rdlong	arg01, fp
05a40     04 5E 05 F1 | 	add	fp, #4
05a44     AF 5E 02 FB | 	rdlong	arg02, fp
05a48     08 5E 85 F1 | 	sub	fp, #8
05a4c     0C 00 B0 FD | 	call	#__system___fmtstr
05a50     AF F0 03 F6 | 	mov	ptra, fp
05a54     BF 00 A0 FD | 	call	#popregs_
05a58                 | __system___fmtchar_ret
05a58     2D 00 64 FD | 	ret
05a5c                 | 
05a5c                 | __system___fmtstr
05a5c     0E 5A 05 F6 | 	mov	COUNT_, #14
05a60     B0 00 A0 FD | 	call	#pushregs_
05a64     2E 6B 02 F6 | 	mov	local01, arg01
05a68     2F 6D 02 F6 | 	mov	local02, arg02
05a6c     30 6F 02 F6 | 	mov	local03, arg03
05a70     36 71 02 F6 | 	mov	local04, local02
05a74     FF 70 06 F5 | 	and	local04, #255
05a78     37 5D 02 F6 | 	mov	arg01, local03
05a7c     00 72 06 F6 | 	mov	local05, #0
05a80     8C A5 9F FE | 	loc	pa,	#(@LR__0298-@LR__0297)
05a84     93 00 A0 FD | 	call	#FCACHE_LOAD_
05a88                 | LR__0297
05a88     2E 75 CA FA | 	rdbyte	local06, arg01 wz
05a8c     01 72 06 51 |  if_ne	add	local05, #1
05a90     01 5C 06 51 |  if_ne	add	arg01, #1
05a94     F0 FF 9F 5D |  if_ne	jmp	#LR__0297
05a98                 | LR__0298
05a98     39 2B 02 F6 | 	mov	result1, local05
05a9c     15 77 02 F6 | 	mov	local07, result1
05aa0     00 70 0E F2 | 	cmp	local04, #0 wz
05aa4     04 00 90 AD |  if_e	jmp	#LR__0299
05aa8     38 77 7A F3 | 	fles	local07, local04 wcz
05aac                 | LR__0299
05aac     35 5D 02 F6 | 	mov	arg01, local01
05ab0     36 5F 02 F6 | 	mov	arg02, local02
05ab4     3B 61 02 F6 | 	mov	arg03, local07
05ab8     02 62 06 F6 | 	mov	arg04, #2
05abc     2C 0F B0 FD | 	call	#__system___fmtpad
05ac0     15 79 02 F6 | 	mov	local08, result1
05ac4     00 78 5E F2 | 	cmps	local08, #0 wcz
05ac8     3C 2B 02 C6 |  if_b	mov	result1, local08
05acc     74 00 90 CD |  if_b	jmp	#LR__0302
05ad0     00 76 5E F2 | 	cmps	local07, #0 wcz
05ad4     44 00 90 ED |  if_be	jmp	#LR__0301
05ad8     3B 7B 02 F6 | 	mov	local09, local07
05adc                 | LR__0300
05adc     35 7D 02 F6 | 	mov	local10, local01
05ae0     3E 7F 02 FB | 	rdlong	local11, local10
05ae4     04 7C 06 F1 | 	add	local10, #4
05ae8     3E 81 02 FB | 	rdlong	local12, local10
05aec     37 5D C2 FA | 	rdbyte	arg01, local03
05af0     07 83 02 F6 | 	mov	local13, objptr
05af4     3F 0F 02 F6 | 	mov	objptr, local11
05af8     01 6E 06 F1 | 	add	local03, #1
05afc     2D 80 62 FD | 	call	local12
05b00     41 0F 02 F6 | 	mov	objptr, local13
05b04     15 85 02 F6 | 	mov	local14, result1
05b08     00 84 5E F2 | 	cmps	local14, #0 wcz
05b0c     42 2B 02 C6 |  if_b	mov	result1, local14
05b10     30 00 90 CD |  if_b	jmp	#LR__0302
05b14     42 79 02 F1 | 	add	local08, local14
05b18     F0 7B 6E FB | 	djnz	local09, #LR__0300
05b1c                 | LR__0301
05b1c     35 5D 02 F6 | 	mov	arg01, local01
05b20     36 5F 02 F6 | 	mov	arg02, local02
05b24     3B 61 02 F6 | 	mov	arg03, local07
05b28     01 62 06 F6 | 	mov	arg04, #1
05b2c     BC 0E B0 FD | 	call	#__system___fmtpad
05b30     15 85 02 F6 | 	mov	local14, result1
05b34     00 84 5E F2 | 	cmps	local14, #0 wcz
05b38     42 2B 02 C6 |  if_b	mov	result1, local14
05b3c     42 79 02 31 |  if_ae	add	local08, local14
05b40     3C 2B 02 36 |  if_ae	mov	result1, local08
05b44                 | LR__0302
05b44     AF F0 03 F6 | 	mov	ptra, fp
05b48     BF 00 A0 FD | 	call	#popregs_
05b4c                 | __system___fmtstr_ret
05b4c     2D 00 64 FD | 	ret
05b50                 | 
05b50                 | __system___fmtnum
05b50     07 5A 05 F6 | 	mov	COUNT_, #7
05b54     B0 00 A0 FD | 	call	#pushregs_
05b58     78 F0 07 F1 | 	add	ptra, #120
05b5c     04 5E 05 F1 | 	add	fp, #4
05b60     AF 5C 62 FC | 	wrlong	arg01, fp
05b64     04 5E 05 F1 | 	add	fp, #4
05b68     AF 5E 62 FC | 	wrlong	arg02, fp
05b6c     04 5E 05 F1 | 	add	fp, #4
05b70     AF 60 62 FC | 	wrlong	arg03, fp
05b74     04 5E 05 F1 | 	add	fp, #4
05b78     AF 62 62 FC | 	wrlong	arg04, fp
05b7c     04 5E 05 F1 | 	add	fp, #4
05b80     AF 6A 02 F6 | 	mov	local01, fp
05b84     44 5E 05 F1 | 	add	fp, #68
05b88     AF 6A 62 FC | 	wrlong	local01, fp
05b8c     04 5E 05 F1 | 	add	fp, #4
05b90     AF 00 68 FC | 	wrlong	#0, fp
05b94     54 5E 85 F1 | 	sub	fp, #84
05b98     AF 6A 02 FB | 	rdlong	local01, fp
05b9c     10 6A 46 F0 | 	shr	local01, #16
05ba0     3F 6A 06 F5 | 	and	local01, #63
05ba4     58 5E 05 F1 | 	add	fp, #88
05ba8     AF 6A 62 FC | 	wrlong	local01, fp
05bac     58 5E 85 F1 | 	sub	fp, #88
05bb0     AF 6A 02 FB | 	rdlong	local01, fp
05bb4     FF 6A 06 F5 | 	and	local01, #255
05bb8     5C 5E 05 F1 | 	add	fp, #92
05bbc     AF 6A 62 FC | 	wrlong	local01, fp
05bc0     5C 5E 85 F1 | 	sub	fp, #92
05bc4     AF 6A 02 FB | 	rdlong	local01, fp
05bc8     1A 6A 46 F0 | 	shr	local01, #26
05bcc     03 6A 06 F5 | 	and	local01, #3
05bd0     60 5E 05 F1 | 	add	fp, #96
05bd4     AF 6A 62 FC | 	wrlong	local01, fp
05bd8     08 5E 85 F1 | 	sub	fp, #8
05bdc     AF 6A 02 FB | 	rdlong	local01, fp
05be0     60 5E 85 F1 | 	sub	fp, #96
05be4     00 6A 5E F2 | 	cmps	local01, #0 wcz
05be8     14 00 90 ED |  if_be	jmp	#LR__0303
05bec     60 5E 05 F1 | 	add	fp, #96
05bf0     AF 6A 02 FB | 	rdlong	local01, fp
05bf4     01 6A 86 F1 | 	sub	local01, #1
05bf8     AF 6A 62 FC | 	wrlong	local01, fp
05bfc     60 5E 85 F1 | 	sub	fp, #96
05c00                 | LR__0303
05c00     64 5E 05 F1 | 	add	fp, #100
05c04     AF 6C 02 FB | 	rdlong	local02, fp
05c08     64 5E 85 F1 | 	sub	fp, #100
05c0c     40 6C 5E F2 | 	cmps	local02, #64 wcz
05c10     14 00 90 1D |  if_a	jmp	#LR__0304
05c14     64 5E 05 F1 | 	add	fp, #100
05c18     AF 6E 02 FB | 	rdlong	local03, fp
05c1c     64 5E 85 F1 | 	sub	fp, #100
05c20     37 71 0A F6 | 	mov	local04, local03 wz
05c24     0C 00 90 5D |  if_ne	jmp	#LR__0305
05c28                 | LR__0304
05c28     64 5E 05 F1 | 	add	fp, #100
05c2c     AF 80 68 FC | 	wrlong	#64, fp
05c30     64 5E 85 F1 | 	sub	fp, #100
05c34                 | LR__0305
05c34     68 5E 05 F1 | 	add	fp, #104
05c38     AF 6A 02 FB | 	rdlong	local01, fp
05c3c     68 5E 85 F1 | 	sub	fp, #104
05c40     03 6A 0E F2 | 	cmp	local01, #3 wz
05c44     10 00 90 5D |  if_ne	jmp	#LR__0306
05c48     68 5E 05 F1 | 	add	fp, #104
05c4c     AF 00 68 FC | 	wrlong	#0, fp
05c50     68 5E 85 F1 | 	sub	fp, #104
05c54     30 00 90 FD | 	jmp	#LR__0308
05c58                 | LR__0306
05c58     0C 5E 05 F1 | 	add	fp, #12
05c5c     AF 6A 02 FB | 	rdlong	local01, fp
05c60     0C 5E 85 F1 | 	sub	fp, #12
05c64     00 6A 5E F2 | 	cmps	local01, #0 wcz
05c68     1C 00 90 3D |  if_ae	jmp	#LR__0307
05c6c     68 5E 05 F1 | 	add	fp, #104
05c70     AF 08 68 FC | 	wrlong	#4, fp
05c74     5C 5E 85 F1 | 	sub	fp, #92
05c78     AF 6A 02 FB | 	rdlong	local01, fp
05c7c     35 6B 62 F6 | 	neg	local01, local01
05c80     AF 6A 62 FC | 	wrlong	local01, fp
05c84     0C 5E 85 F1 | 	sub	fp, #12
05c88                 | LR__0307
05c88                 | LR__0308
05c88     68 5E 05 F1 | 	add	fp, #104
05c8c     AF 6A 0A FB | 	rdlong	local01, fp wz
05c90     68 5E 85 F1 | 	sub	fp, #104
05c94     EC 00 90 AD |  if_e	jmp	#LR__0315
05c98     5C 5E 05 F1 | 	add	fp, #92
05c9c     AF 70 02 FB | 	rdlong	local04, fp
05ca0     01 70 06 F1 | 	add	local04, #1
05ca4     AF 70 62 FC | 	wrlong	local04, fp
05ca8     04 5E 05 F1 | 	add	fp, #4
05cac     AF 6A 02 FB | 	rdlong	local01, fp
05cb0     04 5E 05 F1 | 	add	fp, #4
05cb4     AF 70 02 FB | 	rdlong	local04, fp
05cb8     64 5E 85 F1 | 	sub	fp, #100
05cbc     38 6B 0A F2 | 	cmp	local01, local04 wz
05cc0     3C 00 90 5D |  if_ne	jmp	#LR__0310
05cc4     60 5E 05 F1 | 	add	fp, #96
05cc8     AF 70 02 FB | 	rdlong	local04, fp
05ccc     01 70 86 F1 | 	sub	local04, #1
05cd0     AF 70 62 FC | 	wrlong	local04, fp
05cd4     AF 6A 0A FB | 	rdlong	local01, fp wz
05cd8     60 5E 85 F1 | 	sub	fp, #96
05cdc     20 00 90 5D |  if_ne	jmp	#LR__0309
05ce0     04 5E 05 F1 | 	add	fp, #4
05ce4     AF 5C 02 FB | 	rdlong	arg01, fp
05ce8     04 5E 05 F1 | 	add	fp, #4
05cec     AF 5E 02 FB | 	rdlong	arg02, fp
05cf0     08 5E 85 F1 | 	sub	fp, #8
05cf4     23 60 06 F6 | 	mov	arg03, #35
05cf8     00 FD BF FD | 	call	#__system___fmtchar
05cfc     70 01 90 FD | 	jmp	#LR__0320
05d00                 | LR__0309
05d00                 | LR__0310
05d00     68 5E 05 F1 | 	add	fp, #104
05d04     AF 6A 02 FB | 	rdlong	local01, fp
05d08     68 5E 85 F1 | 	sub	fp, #104
05d0c     02 6A 0E F2 | 	cmp	local01, #2 wz
05d10     20 00 90 5D |  if_ne	jmp	#LR__0311
05d14     58 5E 05 F1 | 	add	fp, #88
05d18     AF 6A 02 FB | 	rdlong	local01, fp
05d1c     35 71 02 F6 | 	mov	local04, local01
05d20     01 70 06 F1 | 	add	local04, #1
05d24     AF 70 62 FC | 	wrlong	local04, fp
05d28     58 5E 85 F1 | 	sub	fp, #88
05d2c     35 41 48 FC | 	wrbyte	#32, local01
05d30     50 00 90 FD | 	jmp	#LR__0314
05d34                 | LR__0311
05d34     68 5E 05 F1 | 	add	fp, #104
05d38     AF 6A 02 FB | 	rdlong	local01, fp
05d3c     68 5E 85 F1 | 	sub	fp, #104
05d40     04 6A 0E F2 | 	cmp	local01, #4 wz
05d44     20 00 90 5D |  if_ne	jmp	#LR__0312
05d48     58 5E 05 F1 | 	add	fp, #88
05d4c     AF 6A 02 FB | 	rdlong	local01, fp
05d50     35 71 02 F6 | 	mov	local04, local01
05d54     01 70 06 F1 | 	add	local04, #1
05d58     AF 70 62 FC | 	wrlong	local04, fp
05d5c     58 5E 85 F1 | 	sub	fp, #88
05d60     35 5B 48 FC | 	wrbyte	#45, local01
05d64     1C 00 90 FD | 	jmp	#LR__0313
05d68                 | LR__0312
05d68     58 5E 05 F1 | 	add	fp, #88
05d6c     AF 6A 02 FB | 	rdlong	local01, fp
05d70     35 71 02 F6 | 	mov	local04, local01
05d74     01 70 06 F1 | 	add	local04, #1
05d78     AF 70 62 FC | 	wrlong	local04, fp
05d7c     58 5E 85 F1 | 	sub	fp, #88
05d80     35 57 48 FC | 	wrbyte	#43, local01
05d84                 | LR__0313
05d84                 | LR__0314
05d84                 | LR__0315
05d84     58 5E 05 F1 | 	add	fp, #88
05d88     AF 5C 02 FB | 	rdlong	arg01, fp
05d8c     4C 5E 85 F1 | 	sub	fp, #76
05d90     AF 5E 02 FB | 	rdlong	arg02, fp
05d94     04 5E 05 F1 | 	add	fp, #4
05d98     AF 60 02 FB | 	rdlong	arg03, fp
05d9c     50 5E 05 F1 | 	add	fp, #80
05da0     AF 62 02 FB | 	rdlong	arg04, fp
05da4     00 72 06 F6 | 	mov	local05, #0
05da8     58 5E 85 F1 | 	sub	fp, #88
05dac     AF 74 02 FB | 	rdlong	local06, fp
05db0     08 5E 85 F1 | 	sub	fp, #8
05db4     1D 74 2E F4 | 	testbn	local06, #29 wz
05db8     01 72 06 56 |  if_ne	mov	local05, #1
05dbc     39 65 02 F6 | 	mov	arg05, local05
05dc0     E8 0C B0 FD | 	call	#__system___uitoa
05dc4     15 77 02 F6 | 	mov	local07, result1
05dc8     5C 5E 05 F1 | 	add	fp, #92
05dcc     AF 6A 02 FB | 	rdlong	local01, fp
05dd0     3B 6B 02 F1 | 	add	local01, local07
05dd4     AF 6A 62 FC | 	wrlong	local01, fp
05dd8     08 5E 05 F1 | 	add	fp, #8
05ddc     AF 70 02 FB | 	rdlong	local04, fp
05de0     64 5E 85 F1 | 	sub	fp, #100
05de4     38 6B 5A F2 | 	cmps	local01, local04 wcz
05de8     64 00 90 ED |  if_be	jmp	#LR__0319
05dec     50 A2 9F FE | 	loc	pa,	#(@LR__0317-@LR__0316)
05df0     93 00 A0 FD | 	call	#FCACHE_LOAD_
05df4                 | LR__0316
05df4     64 5E 05 F1 | 	add	fp, #100
05df8     AF 6A 02 FB | 	rdlong	local01, fp
05dfc     35 71 02 F6 | 	mov	local04, local01
05e00     01 70 86 F1 | 	sub	local04, #1
05e04     AF 70 62 FC | 	wrlong	local04, fp
05e08     64 5E 85 F1 | 	sub	fp, #100
05e0c     00 6A 5E F2 | 	cmps	local01, #0 wcz
05e10     20 00 90 ED |  if_be	jmp	#LR__0318
05e14     58 5E 05 F1 | 	add	fp, #88
05e18     AF 6A 02 FB | 	rdlong	local01, fp
05e1c     35 71 02 F6 | 	mov	local04, local01
05e20     01 70 06 F1 | 	add	local04, #1
05e24     AF 70 62 FC | 	wrlong	local04, fp
05e28     58 5E 85 F1 | 	sub	fp, #88
05e2c     35 47 48 FC | 	wrbyte	#35, local01
05e30     C0 FF 9F FD | 	jmp	#LR__0316
05e34                 | LR__0317
05e34                 | LR__0318
05e34     58 5E 05 F1 | 	add	fp, #88
05e38     AF 6A 02 FB | 	rdlong	local01, fp
05e3c     35 71 02 F6 | 	mov	local04, local01
05e40     01 70 06 F1 | 	add	local04, #1
05e44     AF 70 62 FC | 	wrlong	local04, fp
05e48     58 5E 85 F1 | 	sub	fp, #88
05e4c     35 01 48 FC | 	wrbyte	#0, local01
05e50                 | LR__0319
05e50     14 5E 05 F1 | 	add	fp, #20
05e54     AF 60 02 F6 | 	mov	arg03, fp
05e58     10 5E 85 F1 | 	sub	fp, #16
05e5c     AF 5C 02 FB | 	rdlong	arg01, fp
05e60     04 5E 05 F1 | 	add	fp, #4
05e64     AF 5E 02 FB | 	rdlong	arg02, fp
05e68     08 5E 85 F1 | 	sub	fp, #8
05e6c     EC FB BF FD | 	call	#__system___fmtstr
05e70                 | LR__0320
05e70     AF F0 03 F6 | 	mov	ptra, fp
05e74     BF 00 A0 FD | 	call	#popregs_
05e78                 | __system___fmtnum_ret
05e78     2D 00 64 FD | 	ret
05e7c                 | 
05e7c                 | __system___gc_ptrs
05e7c     0A 5A 05 F6 | 	mov	COUNT_, #10
05e80     B0 00 A0 FD | 	call	#pushregs_
05e84     02 6B 02 F6 | 	mov	local01, __heap_ptr
05e88     35 6D 02 F6 | 	mov	local02, local01
05e8c     07 00 00 FF 
05e90     F8 6D 06 F1 | 	add	local02, ##4088
05e94     35 6F 0A FB | 	rdlong	local03, local01 wz
05e98     74 00 90 5D |  if_ne	jmp	#LR__0321
05e9c     36 71 02 F6 | 	mov	local04, local02
05ea0     35 71 82 F1 | 	sub	local04, local01
05ea4     35 03 58 FC | 	wrword	#1, local01
05ea8     35 73 02 F6 | 	mov	local05, local01
05eac     02 72 06 F1 | 	add	local05, #2
05eb0     36 00 80 FF 
05eb4     39 21 59 FC | 	wrword	##27792, local05
05eb8     35 75 02 F6 | 	mov	local06, local01
05ebc     04 74 06 F1 | 	add	local06, #4
05ec0     3A 01 58 FC | 	wrword	#0, local06
05ec4     35 77 02 F6 | 	mov	local07, local01
05ec8     06 76 06 F1 | 	add	local07, #6
05ecc     3B 03 58 FC | 	wrword	#1, local07
05ed0     10 6A 06 F1 | 	add	local01, #16
05ed4     38 6F 52 F6 | 	abs	local03, local04 wc
05ed8     04 6E 46 F0 | 	shr	local03, #4
05edc     37 6F 62 C6 |  if_b	neg	local03, local03
05ee0     35 6F 52 FC | 	wrword	local03, local01
05ee4     35 79 02 F6 | 	mov	local08, local01
05ee8     02 78 06 F1 | 	add	local08, #2
05eec     36 00 80 FF 
05ef0     3C 1F 59 FC | 	wrword	##27791, local08
05ef4     35 7B 02 F6 | 	mov	local09, local01
05ef8     04 7A 06 F1 | 	add	local09, #4
05efc     3D 01 58 FC | 	wrword	#0, local09
05f00     35 7D 02 F6 | 	mov	local10, local01
05f04     06 7C 06 F1 | 	add	local10, #6
05f08     3E 01 58 FC | 	wrword	#0, local10
05f0c     10 6A 86 F1 | 	sub	local01, #16
05f10                 | LR__0321
05f10     36 2D 02 F6 | 	mov	result2, local02
05f14     35 2B 02 F6 | 	mov	result1, local01
05f18     AF F0 03 F6 | 	mov	ptra, fp
05f1c     BF 00 A0 FD | 	call	#popregs_
05f20                 | __system___gc_ptrs_ret
05f20     2D 00 64 FD | 	ret
05f24                 | 
05f24                 | __system___gc_nextBlockPtr
05f24     02 5A 05 F6 | 	mov	COUNT_, #2
05f28     B0 00 A0 FD | 	call	#pushregs_
05f2c     2E 6B 02 F6 | 	mov	local01, arg01
05f30     35 6D EA FA | 	rdword	local02, local01 wz
05f34     10 00 90 5D |  if_ne	jmp	#LR__0322
05f38     3B 00 00 FF 
05f3c     A0 5C 06 F6 | 	mov	arg01, ##@LR__0433
05f40     F8 01 B0 FD | 	call	#__system___gc_errmsg
05f44     0C 00 90 FD | 	jmp	#LR__0323
05f48                 | LR__0322
05f48     04 6C 66 F0 | 	shl	local02, #4
05f4c     35 2B 02 F6 | 	mov	result1, local01
05f50     36 2B 02 F1 | 	add	result1, local02
05f54                 | LR__0323
05f54     AF F0 03 F6 | 	mov	ptra, fp
05f58     BF 00 A0 FD | 	call	#popregs_
05f5c                 | __system___gc_nextBlockPtr_ret
05f5c     2D 00 64 FD | 	ret
05f60                 | 
05f60                 | __system___gc_tryalloc
05f60     1B 5A 05 F6 | 	mov	COUNT_, #27
05f64     B0 00 A0 FD | 	call	#pushregs_
05f68     2E 6B 02 F6 | 	mov	local01, arg01
05f6c     2F 6D 02 F6 | 	mov	local02, arg02
05f70     08 FF BF FD | 	call	#__system___gc_ptrs
05f74     15 6F 02 F6 | 	mov	local03, result1
05f78     16 71 02 F6 | 	mov	local04, result2
05f7c     37 73 02 F6 | 	mov	local05, local03
05f80     00 74 06 F6 | 	mov	local06, #0
05f84     D0 A0 9F FE | 	loc	pa,	#(@LR__0325-@LR__0324)
05f88     93 00 A0 FD | 	call	#FCACHE_LOAD_
05f8c                 | LR__0324
05f8c     39 77 02 F6 | 	mov	local07, local05
05f90     06 72 06 F1 | 	add	local05, #6
05f94     39 79 02 F6 | 	mov	local08, local05
05f98     37 7B 02 F6 | 	mov	local09, local03
05f9c     3C 7D E2 FA | 	rdword	local10, local08
05fa0     3D 5D 02 F6 | 	mov	arg01, local09
05fa4     3E 5F 0A F6 | 	mov	arg02, local10 wz
05fa8     00 2A 06 A6 |  if_e	mov	result1, #0
05fac     04 5E 66 50 |  if_ne	shl	arg02, #4
05fb0     2F 5D 02 51 |  if_ne	add	arg01, arg02
05fb4     2E 2B 02 56 |  if_ne	mov	result1, arg01
05fb8     15 7F 02 F6 | 	mov	local11, result1
05fbc     3F 73 0A F6 | 	mov	local05, local11 wz
05fc0     39 7B 02 56 |  if_ne	mov	local09, local05
05fc4     3D 81 02 56 |  if_ne	mov	local12, local09
05fc8     40 75 E2 5A |  if_ne	rdword	local06, local12
05fcc     00 72 0E F2 | 	cmp	local05, #0 wz
05fd0     10 00 90 AD |  if_e	jmp	#LR__0326
05fd4     38 73 5A F2 | 	cmps	local05, local04 wcz
05fd8     08 00 90 3D |  if_ae	jmp	#LR__0326
05fdc     3A 6B 5A F2 | 	cmps	local01, local06 wcz
05fe0     A8 FF 9F 1D |  if_a	jmp	#LR__0324
05fe4                 | LR__0325
05fe4                 | LR__0326
05fe4     00 72 0E F2 | 	cmp	local05, #0 wz
05fe8     39 2B 02 A6 |  if_e	mov	result1, local05
05fec     40 01 90 AD |  if_e	jmp	#LR__0329
05ff0     39 83 02 F6 | 	mov	local13, local05
05ff4     06 82 06 F1 | 	add	local13, #6
05ff8     41 85 E2 FA | 	rdword	local14, local13
05ffc     3A 6B 5A F2 | 	cmps	local01, local06 wcz
06000     CC 00 90 3D |  if_ae	jmp	#LR__0328
06004     39 87 02 F6 | 	mov	local15, local05
06008     43 6B 52 FC | 	wrword	local01, local15
0600c     35 89 02 F6 | 	mov	local16, local01
06010     04 88 66 F0 | 	shl	local16, #4
06014     39 8B 02 F6 | 	mov	local17, local05
06018     44 8B 02 F1 | 	add	local17, local16
0601c     3A 8D 02 F6 | 	mov	local18, local06
06020     35 8D 82 F1 | 	sub	local18, local01
06024     45 8F 02 F6 | 	mov	local19, local17
06028     47 8D 52 FC | 	wrword	local18, local19
0602c     45 91 02 F6 | 	mov	local20, local17
06030     02 90 06 F1 | 	add	local20, #2
06034     36 00 80 FF 
06038     48 1F 59 FC | 	wrword	##27791, local20
0603c     45 93 02 F6 | 	mov	local21, local17
06040     04 92 06 F1 | 	add	local21, #4
06044     39 5F 0A F6 | 	mov	arg02, local05 wz
06048     00 2A 06 A6 |  if_e	mov	result1, #0
0604c     37 5F 82 51 |  if_ne	sub	arg02, local03
06050     04 5E 46 50 |  if_ne	shr	arg02, #4
06054     2F 2B 02 56 |  if_ne	mov	result1, arg02
06058     49 2B 52 FC | 	wrword	result1, local21
0605c     45 95 02 F6 | 	mov	local22, local17
06060     41 7B E2 FA | 	rdword	local09, local13
06064     06 94 06 F1 | 	add	local22, #6
06068     4A 7B 52 FC | 	wrword	local09, local22
0606c     45 97 02 F6 | 	mov	local23, local17
06070     4B 5F 0A F6 | 	mov	arg02, local23 wz
06074     00 2A 06 A6 |  if_e	mov	result1, #0
06078     37 5F 82 51 |  if_ne	sub	arg02, local03
0607c     04 5E 46 50 |  if_ne	shr	arg02, #4
06080     2F 2B 02 56 |  if_ne	mov	result1, arg02
06084     15 85 02 F6 | 	mov	local14, result1
06088     45 5D 02 F6 | 	mov	arg01, local17
0608c     94 FE BF FD | 	call	#__system___gc_nextBlockPtr
06090     15 99 0A F6 | 	mov	local24, result1 wz
06094     38 00 90 AD |  if_e	jmp	#LR__0327
06098     38 99 5A F2 | 	cmps	local24, local04 wcz
0609c     30 00 90 3D |  if_ae	jmp	#LR__0327
060a0     4C 9B 02 F6 | 	mov	local25, local24
060a4     04 9A 06 F1 | 	add	local25, #4
060a8     37 7B 02 F6 | 	mov	local09, local03
060ac     4B 7D 02 F6 | 	mov	local10, local23
060b0     3D 5D 02 F6 | 	mov	arg01, local09
060b4     3E 5F 0A F6 | 	mov	arg02, local10 wz
060b8     00 2A 06 A6 |  if_e	mov	result1, #0
060bc     2E 5F 82 51 |  if_ne	sub	arg02, arg01
060c0     04 5E 46 50 |  if_ne	shr	arg02, #4
060c4     2F 2B 02 56 |  if_ne	mov	result1, arg02
060c8     15 7F 02 F6 | 	mov	local11, result1
060cc     4D 7F 52 FC | 	wrword	local11, local25
060d0                 | LR__0327
060d0                 | LR__0328
060d0     06 76 06 F1 | 	add	local07, #6
060d4     3B 85 52 FC | 	wrword	local14, local07
060d8     36 00 00 FF 
060dc     80 7A 06 F6 | 	mov	local09, ##27776
060e0     36 7B 42 F5 | 	or	local09, local02
060e4     39 9D 02 F6 | 	mov	local26, local05
060e8     02 9C 06 F1 | 	add	local26, #2
060ec     01 2A 62 FD | 	cogid	result1
060f0     15 7B 42 F5 | 	or	local09, result1
060f4     4E 7B 52 FC | 	wrword	local09, local26
060f8     37 9F 02 F6 | 	mov	local27, local03
060fc     08 9E 06 F1 | 	add	local27, #8
06100     4F 7B E2 FA | 	rdword	local09, local27
06104     41 7B 52 FC | 	wrword	local09, local13
06108     39 5F 0A F6 | 	mov	arg02, local05 wz
0610c     00 2A 06 A6 |  if_e	mov	result1, #0
06110     37 5F 82 51 |  if_ne	sub	arg02, local03
06114     04 5E 46 50 |  if_ne	shr	arg02, #4
06118     2F 2B 02 56 |  if_ne	mov	result1, arg02
0611c     4F 2B 52 FC | 	wrword	result1, local27
06120     08 72 06 F1 | 	add	local05, #8
06124     39 2B 02 F6 | 	mov	result1, local05
06128     00 C0 31 FF 
0612c     00 2A 46 F5 | 	or	result1, ##1669332992
06130                 | LR__0329
06130     AF F0 03 F6 | 	mov	ptra, fp
06134     BF 00 A0 FD | 	call	#popregs_
06138                 | __system___gc_tryalloc_ret
06138     2D 00 64 FD | 	ret
0613c                 | 
0613c                 | __system___gc_errmsg
0613c     02 5A 05 F6 | 	mov	COUNT_, #2
06140     B0 00 A0 FD | 	call	#pushregs_
06144     2E 6B 02 F6 | 	mov	local01, arg01
06148                 | LR__0330
06148     35 6D CA FA | 	rdbyte	local02, local01 wz
0614c     01 6A 06 F1 | 	add	local01, #1
06150     0C 00 90 AD |  if_e	jmp	#LR__0331
06154     36 5D 02 F6 | 	mov	arg01, local02
06158     F0 F5 BF FD | 	call	#__system___tx
0615c     E8 FF 9F FD | 	jmp	#LR__0330
06160                 | LR__0331
06160     00 2A 06 F6 | 	mov	result1, #0
06164     AF F0 03 F6 | 	mov	ptra, fp
06168     BF 00 A0 FD | 	call	#popregs_
0616c                 | __system___gc_errmsg_ret
0616c     2D 00 64 FD | 	ret
06170                 | 
06170                 | __system___gc_alloc_managed
06170     02 5A 05 F6 | 	mov	COUNT_, #2
06174     B0 00 A0 FD | 	call	#pushregs_
06178     2E 6B 02 F6 | 	mov	local01, arg01
0617c     00 5E 06 F6 | 	mov	arg02, #0
06180     30 00 B0 FD | 	call	#__system___gc_doalloc
06184     15 6D 0A F6 | 	mov	local02, result1 wz
06188     18 00 90 5D |  if_ne	jmp	#LR__0332
0618c     00 6A 5E F2 | 	cmps	local01, #0 wcz
06190     10 00 90 ED |  if_be	jmp	#LR__0332
06194     3B 00 00 FF 
06198     BC 5C 06 F6 | 	mov	arg01, ##@LR__0434
0619c     9C FF BF FD | 	call	#__system___gc_errmsg
061a0     04 00 90 FD | 	jmp	#LR__0333
061a4                 | LR__0332
061a4     36 2B 02 F6 | 	mov	result1, local02
061a8                 | LR__0333
061a8     AF F0 03 F6 | 	mov	ptra, fp
061ac     BF 00 A0 FD | 	call	#popregs_
061b0                 | __system___gc_alloc_managed_ret
061b0     2D 00 64 FD | 	ret
061b4                 | 
061b4                 | __system___gc_doalloc
061b4     07 5A 05 F6 | 	mov	COUNT_, #7
061b8     B0 00 A0 FD | 	call	#pushregs_
061bc     2E 6B 0A F6 | 	mov	local01, arg01 wz
061c0     2F 6D 02 F6 | 	mov	local02, arg02
061c4     00 2A 06 A6 |  if_e	mov	result1, #0
061c8     8C 00 90 AD |  if_e	jmp	#LR__0341
061cc     17 6A 06 F1 | 	add	local01, #23
061d0     0F 6A 26 F5 | 	andn	local01, #15
061d4     04 6A 46 F0 | 	shr	local01, #4
061d8     14 14 06 F1 | 	add	ptr___system__dat__, #20
061dc     0A 6F 02 F6 | 	mov	local03, ptr___system__dat__
061e0     37 5D 02 F6 | 	mov	arg01, local03
061e4     14 14 86 F1 | 	sub	ptr___system__dat__, #20
061e8     28 F5 BF FD | 	call	#__system___lockmem
061ec     35 5D 02 F6 | 	mov	arg01, local01
061f0     36 5F 02 F6 | 	mov	arg02, local02
061f4     68 FD BF FD | 	call	#__system___gc_tryalloc
061f8     15 71 0A F6 | 	mov	local04, result1 wz
061fc     14 00 90 5D |  if_ne	jmp	#LR__0334
06200     10 03 B0 FD | 	call	#__system___gc_docollect
06204     35 5D 02 F6 | 	mov	arg01, local01
06208     36 5F 02 F6 | 	mov	arg02, local02
0620c     50 FD BF FD | 	call	#__system___gc_tryalloc
06210     15 71 02 F6 | 	mov	local04, result1
06214                 | LR__0334
06214     37 01 68 FC | 	wrlong	#0, local03
06218     00 70 0E F2 | 	cmp	local04, #0 wz
0621c     34 00 90 AD |  if_e	jmp	#LR__0340
06220     04 6A 66 F0 | 	shl	local01, #4
06224     08 6A 86 F1 | 	sub	local01, #8
06228     35 73 52 F6 | 	abs	local05, local01 wc
0622c     02 72 46 F0 | 	shr	local05, #2
06230     39 73 62 C6 |  if_b	neg	local05, local05
06234     39 75 0A F6 | 	mov	local06, local05 wz
06238     38 77 02 F6 | 	mov	local07, local04
0623c     14 00 90 AD |  if_e	jmp	#LR__0339
06240     C8 9D 9F FE | 	loc	pa,	#(@LR__0337-@LR__0335)
06244     93 00 A0 FD | 	call	#FCACHE_LOAD_
06248                 | LR__0335
06248     3A 05 D8 FC | 	rep	@LR__0338, local06
0624c                 | LR__0336
0624c     3B 01 68 FC | 	wrlong	#0, local07
06250     04 76 06 F1 | 	add	local07, #4
06254                 | LR__0337
06254                 | LR__0338
06254                 | LR__0339
06254                 | LR__0340
06254     38 2B 02 F6 | 	mov	result1, local04
06258                 | LR__0341
06258     AF F0 03 F6 | 	mov	ptra, fp
0625c     BF 00 A0 FD | 	call	#popregs_
06260                 | __system___gc_doalloc_ret
06260     2D 00 64 FD | 	ret
06264                 | 
06264                 | __system___gc_isvalidptr
06264     30 31 02 F6 | 	mov	_var01, arg03
06268     18 33 02 F6 | 	mov	_var02, _var01
0626c     00 F8 7F FF 
06270     00 32 06 F5 | 	and	_var02, ##-1048576
06274     00 C0 31 FF 
06278     00 32 0E F2 | 	cmp	_var02, ##1669332992 wz
0627c     00 2A 06 56 |  if_ne	mov	result1, #0
06280     60 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
06284     08 30 86 F1 | 	sub	_var01, #8
06288     18 35 02 F6 | 	mov	_var03, _var01
0628c     00 F8 7F FF 
06290     00 34 26 F5 | 	andn	_var03, ##-1048576
06294     2E 35 5A F2 | 	cmps	_var03, arg01 wcz
06298     08 00 90 CD |  if_b	jmp	#LR__0342
0629c     2F 35 5A F2 | 	cmps	_var03, arg02 wcz
062a0     08 00 90 CD |  if_b	jmp	#LR__0343
062a4                 | LR__0342
062a4     00 2A 06 F6 | 	mov	result1, #0
062a8     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
062ac                 | LR__0343
062ac     1A 33 02 F6 | 	mov	_var02, _var03
062b0     2E 33 62 F5 | 	xor	_var02, arg01
062b4     0F 32 0E F5 | 	and	_var02, #15 wz
062b8     00 2A 06 56 |  if_ne	mov	result1, #0
062bc     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
062c0     1A 37 02 F6 | 	mov	_var04, _var03
062c4     02 36 06 F1 | 	add	_var04, #2
062c8     1B 33 E2 FA | 	rdword	_var02, _var04
062cc     7F 00 00 FF 
062d0     C0 33 06 F5 | 	and	_var02, ##65472
062d4     36 00 00 FF 
062d8     80 32 0E F2 | 	cmp	_var02, ##27776 wz
062dc     00 2A 06 56 |  if_ne	mov	result1, #0
062e0     1A 2B 02 A6 |  if_e	mov	result1, _var03
062e4                 | __system___gc_isvalidptr_ret
062e4     2D 00 64 FD | 	ret
062e8                 | 
062e8                 | __system___gc_dofree
062e8     1A 5A 05 F6 | 	mov	COUNT_, #26
062ec     B0 00 A0 FD | 	call	#pushregs_
062f0     2E 6B 02 F6 | 	mov	local01, arg01
062f4     84 FB BF FD | 	call	#__system___gc_ptrs
062f8     16 6D 02 F6 | 	mov	local02, result2
062fc     15 6F 02 F6 | 	mov	local03, result1
06300     35 71 02 F6 | 	mov	local04, local01
06304     02 70 06 F1 | 	add	local04, #2
06308     36 00 80 FF 
0630c     38 1F 59 FC | 	wrword	##27791, local04
06310     35 73 02 F6 | 	mov	local05, local01
06314     35 5D 02 F6 | 	mov	arg01, local01
06318     08 FC BF FD | 	call	#__system___gc_nextBlockPtr
0631c     15 75 02 F6 | 	mov	local06, result1
06320     2C 9D 9F FE | 	loc	pa,	#(@LR__0345-@LR__0344)
06324     93 00 A0 FD | 	call	#FCACHE_LOAD_
06328                 | LR__0344
06328     04 72 06 F1 | 	add	local05, #4
0632c     39 77 02 F6 | 	mov	local07, local05
06330     3B 5F EA FA | 	rdword	arg02, local07 wz
06334     37 5D 02 F6 | 	mov	arg01, local03
06338     00 2A 06 A6 |  if_e	mov	result1, #0
0633c     04 5E 66 50 |  if_ne	shl	arg02, #4
06340     2F 5D 02 51 |  if_ne	add	arg01, arg02
06344     2E 2B 02 56 |  if_ne	mov	result1, arg01
06348     15 73 0A F6 | 	mov	local05, result1 wz
0634c     28 00 90 AD |  if_e	jmp	#LR__0346
06350     39 5D 02 F6 | 	mov	arg01, local05
06354     00 78 06 F6 | 	mov	local08, #0
06358     02 5C 06 F1 | 	add	arg01, #2
0635c     2E 7B E2 FA | 	rdword	local09, arg01
06360     36 00 00 FF 
06364     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06368     01 78 66 A6 |  if_e	neg	local08, #1
0636c     3C 2B 02 F6 | 	mov	result1, local08
06370     15 7D 0A F6 | 	mov	local10, result1 wz
06374     B0 FF 9F AD |  if_e	jmp	#LR__0344
06378                 | LR__0345
06378                 | LR__0346
06378     00 72 0E F2 | 	cmp	local05, #0 wz
0637c     37 73 02 A6 |  if_e	mov	local05, local03
06380     39 7F 02 F6 | 	mov	local11, local05
06384     06 7E 06 F1 | 	add	local11, #6
06388     35 81 02 F6 | 	mov	local12, local01
0638c     3F 83 E2 FA | 	rdword	local13, local11
06390     06 80 06 F1 | 	add	local12, #6
06394     40 83 52 FC | 	wrword	local13, local12
06398     35 5F 0A F6 | 	mov	arg02, local01 wz
0639c     00 2A 06 A6 |  if_e	mov	result1, #0
063a0     37 5F 82 51 |  if_ne	sub	arg02, local03
063a4     04 5E 46 50 |  if_ne	shr	arg02, #4
063a8     2F 2B 02 56 |  if_ne	mov	result1, arg02
063ac     15 85 02 F6 | 	mov	local14, result1
063b0     3F 85 52 FC | 	wrword	local14, local11
063b4     37 73 0A F2 | 	cmp	local05, local03 wz
063b8     74 00 90 AD |  if_e	jmp	#LR__0349
063bc     39 5D 02 F6 | 	mov	arg01, local05
063c0     60 FB BF FD | 	call	#__system___gc_nextBlockPtr
063c4     35 2B 0A F2 | 	cmp	result1, local01 wz
063c8     64 00 90 5D |  if_ne	jmp	#LR__0348
063cc     39 87 02 F6 | 	mov	local15, local05
063d0     43 89 E2 FA | 	rdword	local16, local15
063d4     35 8B 02 F6 | 	mov	local17, local01
063d8     45 7D E2 FA | 	rdword	local10, local17
063dc     3E 89 02 F1 | 	add	local16, local10
063e0     43 89 52 FC | 	wrword	local16, local15
063e4     38 01 58 FC | 	wrword	#0, local04
063e8     35 5D 02 F6 | 	mov	arg01, local01
063ec     34 FB BF FD | 	call	#__system___gc_nextBlockPtr
063f0     15 75 02 F6 | 	mov	local06, result1
063f4     36 75 5A F2 | 	cmps	local06, local02 wcz
063f8     24 00 90 3D |  if_ae	jmp	#LR__0347
063fc     3A 8D 02 F6 | 	mov	local18, local06
06400     04 8C 06 F1 | 	add	local18, #4
06404     39 5F 0A F6 | 	mov	arg02, local05 wz
06408     00 2A 06 A6 |  if_e	mov	result1, #0
0640c     37 5F 82 51 |  if_ne	sub	arg02, local03
06410     04 5E 46 50 |  if_ne	shr	arg02, #4
06414     2F 2B 02 56 |  if_ne	mov	result1, arg02
06418     15 85 02 F6 | 	mov	local14, result1
0641c     46 85 52 FC | 	wrword	local14, local18
06420                 | LR__0347
06420     40 83 E2 FA | 	rdword	local13, local12
06424     3F 83 52 FC | 	wrword	local13, local11
06428     40 01 58 FC | 	wrword	#0, local12
0642c     39 6B 02 F6 | 	mov	local01, local05
06430                 | LR__0348
06430                 | LR__0349
06430     35 5D 02 F6 | 	mov	arg01, local01
06434     EC FA BF FD | 	call	#__system___gc_nextBlockPtr
06438     15 8F 0A F6 | 	mov	local19, result1 wz
0643c     C4 00 90 AD |  if_e	jmp	#LR__0351
06440     36 8F 5A F2 | 	cmps	local19, local02 wcz
06444     BC 00 90 3D |  if_ae	jmp	#LR__0351
06448     47 5D 02 F6 | 	mov	arg01, local19
0644c     00 78 06 F6 | 	mov	local08, #0
06450     02 5C 06 F1 | 	add	arg01, #2
06454     2E 7B E2 FA | 	rdword	local09, arg01
06458     36 00 00 FF 
0645c     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06460     01 78 66 A6 |  if_e	neg	local08, #1
06464     3C 2B 0A F6 | 	mov	result1, local08 wz
06468     98 00 90 AD |  if_e	jmp	#LR__0351
0646c     35 73 02 F6 | 	mov	local05, local01
06470     47 6B 02 F6 | 	mov	local01, local19
06474     39 91 02 F6 | 	mov	local20, local05
06478     48 93 E2 FA | 	rdword	local21, local20
0647c     35 95 02 F6 | 	mov	local22, local01
06480     4A 7D E2 FA | 	rdword	local10, local22
06484     3E 93 02 F1 | 	add	local21, local10
06488     48 93 52 FC | 	wrword	local21, local20
0648c     35 97 02 F6 | 	mov	local23, local01
06490     06 96 06 F1 | 	add	local23, #6
06494     39 99 02 F6 | 	mov	local24, local05
06498     4B 83 E2 FA | 	rdword	local13, local23
0649c     06 98 06 F1 | 	add	local24, #6
064a0     4C 83 52 FC | 	wrword	local13, local24
064a4     35 9B 02 F6 | 	mov	local25, local01
064a8     02 9A 06 F1 | 	add	local25, #2
064ac     4D 55 59 FC | 	wrword	#170, local25
064b0     4B 01 58 FC | 	wrword	#0, local23
064b4     35 83 02 F6 | 	mov	local13, local01
064b8     41 5D 02 F6 | 	mov	arg01, local13
064bc     64 FA BF FD | 	call	#__system___gc_nextBlockPtr
064c0     15 7D 02 F6 | 	mov	local10, result1
064c4     3E 75 0A F6 | 	mov	local06, local10 wz
064c8     38 00 90 AD |  if_e	jmp	#LR__0350
064cc     36 75 5A F2 | 	cmps	local06, local02 wcz
064d0     30 00 90 3D |  if_ae	jmp	#LR__0350
064d4     3A 9D 02 F6 | 	mov	local26, local06
064d8     04 9C 06 F1 | 	add	local26, #4
064dc     37 83 02 F6 | 	mov	local13, local03
064e0     39 7D 02 F6 | 	mov	local10, local05
064e4     41 5D 02 F6 | 	mov	arg01, local13
064e8     3E 5F 0A F6 | 	mov	arg02, local10 wz
064ec     00 2A 06 A6 |  if_e	mov	result1, #0
064f0     2E 5F 82 51 |  if_ne	sub	arg02, arg01
064f4     04 5E 46 50 |  if_ne	shr	arg02, #4
064f8     2F 2B 02 56 |  if_ne	mov	result1, arg02
064fc     15 85 02 F6 | 	mov	local14, result1
06500     4E 85 52 FC | 	wrword	local14, local26
06504                 | LR__0350
06504                 | LR__0351
06504     3A 2B 02 F6 | 	mov	result1, local06
06508     AF F0 03 F6 | 	mov	ptra, fp
0650c     BF 00 A0 FD | 	call	#popregs_
06510                 | __system___gc_dofree_ret
06510     2D 00 64 FD | 	ret
06514                 | 
06514                 | __system___gc_docollect
06514     0C 5A 05 F6 | 	mov	COUNT_, #12
06518     B0 00 A0 FD | 	call	#pushregs_
0651c     5C F9 BF FD | 	call	#__system___gc_ptrs
06520     16 6B 02 F6 | 	mov	local01, result2
06524     15 6D 02 F6 | 	mov	local02, result1
06528     36 5D 02 F6 | 	mov	arg01, local02
0652c     F4 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06530     15 6F 0A F6 | 	mov	local03, result1 wz
06534     01 2A 62 FD | 	cogid	result1
06538     15 71 02 F6 | 	mov	local04, result1
0653c     2C 00 90 AD |  if_e	jmp	#LR__0353
06540                 | LR__0352
06540     35 6F 5A F2 | 	cmps	local03, local01 wcz
06544     24 00 90 3D |  if_ae	jmp	#LR__0353
06548     37 73 02 F6 | 	mov	local05, local03
0654c     02 72 06 F1 | 	add	local05, #2
06550     39 75 E2 FA | 	rdword	local06, local05
06554     20 74 26 F5 | 	andn	local06, #32
06558     39 75 52 FC | 	wrword	local06, local05
0655c     37 5D 02 F6 | 	mov	arg01, local03
06560     C0 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06564     15 6F 0A F6 | 	mov	local03, result1 wz
06568     D4 FF 9F 5D |  if_ne	jmp	#LR__0352
0656c                 | LR__0353
0656c     00 76 06 F6 | 	mov	local07, #0
06570     00 5C 06 F6 | 	mov	arg01, #0
06574     34 F1 BF FD | 	call	#__system____topofstack
06578     15 79 02 F6 | 	mov	local08, result1
0657c     3B 5D 02 F6 | 	mov	arg01, local07
06580     3C 5F 02 F6 | 	mov	arg02, local08
06584     A0 00 B0 FD | 	call	#__system___gc_markhub
06588     2C 01 B0 FD | 	call	#__system___gc_markcog
0658c     36 5D 02 F6 | 	mov	arg01, local02
06590     90 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06594     15 7B 0A F6 | 	mov	local09, result1 wz
06598     10 00 90 5D |  if_ne	jmp	#LR__0354
0659c     3B 00 00 FF 
065a0     D9 5C 06 F6 | 	mov	arg01, ##@LR__0435
065a4     94 FB BF FD | 	call	#__system___gc_errmsg
065a8     70 00 90 FD | 	jmp	#LR__0360
065ac                 | LR__0354
065ac                 | LR__0355
065ac     3D 6F 02 F6 | 	mov	local03, local09
065b0     37 5D 02 F6 | 	mov	arg01, local03
065b4     6C F9 BF FD | 	call	#__system___gc_nextBlockPtr
065b8     15 7B 02 F6 | 	mov	local09, result1
065bc     37 7D 02 F6 | 	mov	local10, local03
065c0     02 7C 06 F1 | 	add	local10, #2
065c4     3E 7F E2 FA | 	rdword	local11, local10
065c8     20 7E CE F7 | 	test	local11, #32 wz
065cc     3C 00 90 5D |  if_ne	jmp	#LR__0358
065d0     3F 81 02 F6 | 	mov	local12, local11
065d4     10 80 0E F5 | 	and	local12, #16 wz
065d8     30 00 90 5D |  if_ne	jmp	#LR__0358
065dc     3F 77 02 F6 | 	mov	local07, local11
065e0     0F 76 06 F5 | 	and	local07, #15
065e4     3B 7F 02 F6 | 	mov	local11, local07
065e8     38 7F 0A F2 | 	cmp	local11, local04 wz
065ec     08 00 90 AD |  if_e	jmp	#LR__0356
065f0     0E 7E 0E F2 | 	cmp	local11, #14 wz
065f4     14 00 90 5D |  if_ne	jmp	#LR__0357
065f8                 | LR__0356
065f8     37 77 02 F6 | 	mov	local07, local03
065fc     3B 5D 02 F6 | 	mov	arg01, local07
06600     E4 FC BF FD | 	call	#__system___gc_dofree
06604     15 81 02 F6 | 	mov	local12, result1
06608     40 7B 02 F6 | 	mov	local09, local12
0660c                 | LR__0357
0660c                 | LR__0358
0660c     00 7A 0E F2 | 	cmp	local09, #0 wz
06610     08 00 90 AD |  if_e	jmp	#LR__0359
06614     35 7B 5A F2 | 	cmps	local09, local01 wcz
06618     90 FF 9F CD |  if_b	jmp	#LR__0355
0661c                 | LR__0359
0661c                 | LR__0360
0661c     AF F0 03 F6 | 	mov	ptra, fp
06620     BF 00 A0 FD | 	call	#popregs_
06624                 | __system___gc_docollect_ret
06624     2D 00 64 FD | 	ret
06628                 | 
06628                 | __system___gc_markhub
06628     0A 5A 05 F6 | 	mov	COUNT_, #10
0662c     B0 00 A0 FD | 	call	#pushregs_
06630     2E 6B 02 F6 | 	mov	local01, arg01
06634     2F 6D 02 F6 | 	mov	local02, arg02
06638     40 F8 BF FD | 	call	#__system___gc_ptrs
0663c     15 6F 02 F6 | 	mov	local03, result1
06640     16 71 02 F6 | 	mov	local04, result2
06644                 | LR__0361
06644     36 6B 5A F2 | 	cmps	local01, local02 wcz
06648     60 00 90 3D |  if_ae	jmp	#LR__0362
0664c     35 61 02 FB | 	rdlong	arg03, local01
06650     04 6A 06 F1 | 	add	local01, #4
06654     37 5D 02 F6 | 	mov	arg01, local03
06658     38 5F 02 F6 | 	mov	arg02, local04
0665c     04 FC BF FD | 	call	#__system___gc_isvalidptr
06660     15 73 0A F6 | 	mov	local05, result1 wz
06664     DC FF 9F AD |  if_e	jmp	#LR__0361
06668     39 5D 02 F6 | 	mov	arg01, local05
0666c     00 74 06 F6 | 	mov	local06, #0
06670     02 5C 06 F1 | 	add	arg01, #2
06674     2E 77 E2 FA | 	rdword	local07, arg01
06678     36 00 00 FF 
0667c     8F 76 0E F2 | 	cmp	local07, ##27791 wz
06680     01 74 66 A6 |  if_e	neg	local06, #1
06684     3A 2B 02 F6 | 	mov	result1, local06
06688     15 79 0A F6 | 	mov	local08, result1 wz
0668c     B4 FF 9F 5D |  if_ne	jmp	#LR__0361
06690     39 7B 02 F6 | 	mov	local09, local05
06694     02 7A 06 F1 | 	add	local09, #2
06698     3D 7D E2 FA | 	rdword	local10, local09
0669c     0F 7C 26 F5 | 	andn	local10, #15
066a0     2E 7C 46 F5 | 	or	local10, #46
066a4     3D 7D 52 FC | 	wrword	local10, local09
066a8     98 FF 9F FD | 	jmp	#LR__0361
066ac                 | LR__0362
066ac     AF F0 03 F6 | 	mov	ptra, fp
066b0     BF 00 A0 FD | 	call	#popregs_
066b4                 | __system___gc_markhub_ret
066b4     2D 00 64 FD | 	ret
066b8                 | 
066b8                 | __system___gc_markcog
066b8     06 5A 05 F6 | 	mov	COUNT_, #6
066bc     B0 00 A0 FD | 	call	#pushregs_
066c0     B8 F7 BF FD | 	call	#__system___gc_ptrs
066c4     15 6B 02 F6 | 	mov	local01, result1
066c8     16 6D 02 F6 | 	mov	local02, result2
066cc     00 6E 06 F6 | 	mov	local03, #0
066d0                 | LR__0363
066d0     F0 71 06 F6 | 	mov	local04, #496
066d4     37 71 82 F1 | 	sub	local04, local03
066d8     F0 71 06 F1 | 	add	local04, #496
066dc                 | 	'.live	local04
066dc     00 70 96 F9 | 	alts	local04, #0
066e0     38 73 02 F6 | 	mov	local05, local04
066e4     36 5F 02 F6 | 	mov	arg02, local02
066e8     35 5D 02 F6 | 	mov	arg01, local01
066ec     39 61 02 F6 | 	mov	arg03, local05
066f0     70 FB BF FD | 	call	#__system___gc_isvalidptr
066f4     15 73 0A F6 | 	mov	local05, result1 wz
066f8     10 00 90 AD |  if_e	jmp	#LR__0364
066fc     02 72 06 F1 | 	add	local05, #2
06700     39 75 E2 FA | 	rdword	local06, local05
06704     20 74 46 F5 | 	or	local06, #32
06708     39 75 52 FC | 	wrword	local06, local05
0670c                 | LR__0364
0670c     01 6E 06 F1 | 	add	local03, #1
06710     F0 6F 5E F2 | 	cmps	local03, #496 wcz
06714     B8 FF 9F CD |  if_b	jmp	#LR__0363
06718     AF F0 03 F6 | 	mov	ptra, fp
0671c     BF 00 A0 FD | 	call	#popregs_
06720                 | __system___gc_markcog_ret
06720     2D 00 64 FD | 	ret
06724                 | 
06724                 | __system__write
06724     03 5A 05 F6 | 	mov	COUNT_, #3
06728     B0 00 A0 FD | 	call	#pushregs_
0672c     2E 6B 02 F6 | 	mov	local01, arg01
06730     2F 6D 02 F6 | 	mov	local02, arg02
06734     30 6F 02 F6 | 	mov	local03, arg03
06738     0A 6A 1E F2 | 	cmp	local01, #10 wcz
0673c     1C 00 90 CD |  if_b	jmp	#LR__0365
06740     01 00 00 FF 
06744     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
06748     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
0674c     01 00 00 FF 
06750     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
06754     01 2A 66 F6 | 	neg	result1, #1
06758     28 00 90 FD | 	jmp	#LR__0366
0675c                 | LR__0365
0675c     35 5D 02 F6 | 	mov	arg01, local01
06760     01 5C 66 F0 | 	shl	arg01, #1
06764     35 5D 02 F1 | 	add	arg01, local01
06768     04 5C 66 F0 | 	shl	arg01, #4
0676c     1C 14 06 F1 | 	add	ptr___system__dat__, #28
06770     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
06774     36 5F 02 F6 | 	mov	arg02, local02
06778     37 61 02 F6 | 	mov	arg03, local03
0677c     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
06780     4C 09 B0 FD | 	call	#__system___vfswrite
06784                 | LR__0366
06784     AF F0 03 F6 | 	mov	ptra, fp
06788     BF 00 A0 FD | 	call	#popregs_
0678c                 | __system__write_ret
0678c     2D 00 64 FD | 	ret
06790                 | 
06790                 | __system__read
06790     03 5A 05 F6 | 	mov	COUNT_, #3
06794     B0 00 A0 FD | 	call	#pushregs_
06798     2E 6B 02 F6 | 	mov	local01, arg01
0679c     2F 6D 02 F6 | 	mov	local02, arg02
067a0     30 6F 02 F6 | 	mov	local03, arg03
067a4     0A 6A 1E F2 | 	cmp	local01, #10 wcz
067a8     1C 00 90 CD |  if_b	jmp	#LR__0367
067ac     01 00 00 FF 
067b0     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
067b4     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
067b8     01 00 00 FF 
067bc     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
067c0     01 2A 66 F6 | 	neg	result1, #1
067c4     28 00 90 FD | 	jmp	#LR__0368
067c8                 | LR__0367
067c8     35 5D 02 F6 | 	mov	arg01, local01
067cc     01 5C 66 F0 | 	shl	arg01, #1
067d0     35 5D 02 F1 | 	add	arg01, local01
067d4     04 5C 66 F0 | 	shl	arg01, #4
067d8     1C 14 06 F1 | 	add	ptr___system__dat__, #28
067dc     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
067e0     36 5F 02 F6 | 	mov	arg02, local02
067e4     37 61 02 F6 | 	mov	arg03, local03
067e8     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
067ec     A4 0A B0 FD | 	call	#__system___vfsread
067f0                 | LR__0368
067f0     AF F0 03 F6 | 	mov	ptra, fp
067f4     BF 00 A0 FD | 	call	#popregs_
067f8                 | __system__read_ret
067f8     2D 00 64 FD | 	ret
067fc                 | 
067fc                 | __system__close
067fc     01 5A 05 F6 | 	mov	COUNT_, #1
06800     B0 00 A0 FD | 	call	#pushregs_
06804     2E 6B 02 F6 | 	mov	local01, arg01
06808     0A 6A 1E F2 | 	cmp	local01, #10 wcz
0680c     1C 00 90 CD |  if_b	jmp	#LR__0369
06810     01 00 00 FF 
06814     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
06818     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
0681c     01 00 00 FF 
06820     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
06824     01 2A 66 F6 | 	neg	result1, #1
06828     20 00 90 FD | 	jmp	#LR__0370
0682c                 | LR__0369
0682c     35 5D 02 F6 | 	mov	arg01, local01
06830     01 5C 66 F0 | 	shl	arg01, #1
06834     35 5D 02 F1 | 	add	arg01, local01
06838     04 5C 66 F0 | 	shl	arg01, #4
0683c     1C 14 06 F1 | 	add	ptr___system__dat__, #28
06840     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
06844     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
06848     80 03 B0 FD | 	call	#__system___closeraw
0684c                 | LR__0370
0684c     AF F0 03 F6 | 	mov	ptra, fp
06850     BF 00 A0 FD | 	call	#popregs_
06854                 | __system__close_ret
06854     2D 00 64 FD | 	ret
06858                 | 
06858                 | __system__lseek
06858     09 5A 05 F6 | 	mov	COUNT_, #9
0685c     B0 00 A0 FD | 	call	#pushregs_
06860     2E 6B 02 F6 | 	mov	local01, arg01
06864     2F 6D 02 F6 | 	mov	local02, arg02
06868     30 6F 02 F6 | 	mov	local03, arg03
0686c     0A 6A 1E F2 | 	cmp	local01, #10 wcz
06870     1C 00 90 CD |  if_b	jmp	#LR__0371
06874     01 00 00 FF 
06878     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
0687c     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
06880     01 00 00 FF 
06884     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
06888     01 2A 66 F6 | 	neg	result1, #1
0688c     D8 00 90 FD | 	jmp	#LR__0375
06890                 | LR__0371
06890     35 71 02 F6 | 	mov	local04, local01
06894     01 70 66 F0 | 	shl	local04, #1
06898     35 71 02 F1 | 	add	local04, local01
0689c     04 70 66 F0 | 	shl	local04, #4
068a0     1C 14 06 F1 | 	add	ptr___system__dat__, #28
068a4     0A 71 02 F1 | 	add	local04, ptr___system__dat__
068a8     2C 70 06 F1 | 	add	local04, #44
068ac     38 73 0A FB | 	rdlong	local05, local04 wz
068b0     2C 70 86 F1 | 	sub	local04, #44
068b4     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
068b8     1C 00 90 5D |  if_ne	jmp	#LR__0372
068bc     01 00 00 FF 
068c0     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
068c4     0A 21 68 FC | 	wrlong	#16, ptr___system__dat__
068c8     01 00 00 FF 
068cc     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
068d0     01 2A 66 F6 | 	neg	result1, #1
068d4     90 00 90 FD | 	jmp	#LR__0375
068d8                 | LR__0372
068d8     08 70 06 F1 | 	add	local04, #8
068dc     38 73 02 FB | 	rdlong	local05, local04
068e0     08 70 86 F1 | 	sub	local04, #8
068e4     40 72 CE F7 | 	test	local05, #64 wz
068e8     14 00 90 AD |  if_e	jmp	#LR__0373
068ec     08 70 06 F1 | 	add	local04, #8
068f0     38 73 02 FB | 	rdlong	local05, local04
068f4     80 72 46 F5 | 	or	local05, #128
068f8     38 73 62 FC | 	wrlong	local05, local04
068fc     08 70 86 F1 | 	sub	local04, #8
06900                 | LR__0373
06900     2C 70 06 F1 | 	add	local04, #44
06904     38 73 02 FB | 	rdlong	local05, local04
06908     2C 70 86 F1 | 	sub	local04, #44
0690c     39 75 02 FB | 	rdlong	local06, local05
06910     04 72 06 F1 | 	add	local05, #4
06914     39 77 02 FB | 	rdlong	local07, local05
06918     38 5D 02 F6 | 	mov	arg01, local04
0691c     36 5F 02 F6 | 	mov	arg02, local02
06920     37 61 02 F6 | 	mov	arg03, local03
06924     07 79 02 F6 | 	mov	local08, objptr
06928     3A 0F 02 F6 | 	mov	objptr, local06
0692c     2D 76 62 FD | 	call	local07
06930     3C 0F 02 F6 | 	mov	objptr, local08
06934     15 7B 02 F6 | 	mov	local09, result1
06938     00 7A 5E F2 | 	cmps	local09, #0 wcz
0693c     24 00 90 3D |  if_ae	jmp	#LR__0374
06940     3D 5D 6A F6 | 	neg	arg01, local09 wz
06944     01 00 00 FF 
06948     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
0694c     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
06950     01 00 00 FF 
06954     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
06958     01 2A 66 56 |  if_ne	neg	result1, #1
0695c     00 2A 06 A6 |  if_e	mov	result1, #0
06960     04 00 90 FD | 	jmp	#LR__0375
06964                 | LR__0374
06964     3D 2B 02 F6 | 	mov	result1, local09
06968                 | LR__0375
06968     AF F0 03 F6 | 	mov	ptra, fp
0696c     BF 00 A0 FD | 	call	#popregs_
06970                 | __system__lseek_ret
06970     2D 00 64 FD | 	ret
06974                 | 
06974                 | __system____getftab
06974     0A 5C 1E F2 | 	cmp	arg01, #10 wcz
06978     00 2A 06 36 |  if_ae	mov	result1, #0
0697c     1C 00 90 3D |  if_ae	jmp	#__system____getftab_ret
06980     2E 2B 02 F6 | 	mov	result1, arg01
06984     01 2A 66 F0 | 	shl	result1, #1
06988     2E 2B 02 F1 | 	add	result1, arg01
0698c     04 2A 66 F0 | 	shl	result1, #4
06990     1C 14 06 F1 | 	add	ptr___system__dat__, #28
06994     0A 2B 02 F1 | 	add	result1, ptr___system__dat__
06998     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
0699c                 | __system____getftab_ret
0699c     2D 00 64 FD | 	ret
069a0                 | 
069a0                 | __system___strrev
069a0     2E 31 CA FA | 	rdbyte	_var01, arg01 wz
069a4     40 00 90 AD |  if_e	jmp	#__system___strrev_ret
069a8     2E 33 02 F6 | 	mov	_var02, arg01
069ac     5C 96 9F FE | 	loc	pa,	#(@LR__0377-@LR__0376)
069b0     93 00 A0 FD | 	call	#FCACHE_LOAD_
069b4                 | LR__0376
069b4     19 31 CA FA | 	rdbyte	_var01, _var02 wz
069b8     01 32 06 51 |  if_ne	add	_var02, #1
069bc     F4 FF 9F 5D |  if_ne	jmp	#LR__0376
069c0                 | LR__0377
069c0     01 32 86 F1 | 	sub	_var02, #1
069c4                 | LR__0378
069c4     2E 33 5A F2 | 	cmps	_var02, arg01 wcz
069c8     1C 00 90 ED |  if_be	jmp	#LR__0379
069cc     2E 35 C2 FA | 	rdbyte	_var03, arg01
069d0     19 37 C2 FA | 	rdbyte	_var04, _var02
069d4     2E 37 42 FC | 	wrbyte	_var04, arg01
069d8     19 35 42 FC | 	wrbyte	_var03, _var02
069dc     01 5C 06 F1 | 	add	arg01, #1
069e0     01 32 86 F1 | 	sub	_var02, #1
069e4     DC FF 9F FD | 	jmp	#LR__0378
069e8                 | LR__0379
069e8                 | __system___strrev_ret
069e8     2D 00 64 FD | 	ret
069ec                 | 
069ec                 | __system___fmtpad
069ec     0C 5A 05 F6 | 	mov	COUNT_, #12
069f0     B0 00 A0 FD | 	call	#pushregs_
069f4     2E 6B 02 F6 | 	mov	local01, arg01
069f8     2F 6D 02 F6 | 	mov	local02, arg02
069fc     31 6F 02 F6 | 	mov	local03, arg04
06a00     36 71 EA F8 | 	getbyte	local04, local02, #1
06a04     16 6C 46 F0 | 	shr	local02, #22
06a08     03 6C 0E F5 | 	and	local02, #3 wz
06a0c     00 72 06 F6 | 	mov	local05, #0
06a10     01 6C 06 A6 |  if_e	mov	local02, #1
06a14     37 6D CA F7 | 	test	local02, local03 wz
06a18     00 2A 06 A6 |  if_e	mov	result1, #0
06a1c     80 00 90 AD |  if_e	jmp	#LR__0383
06a20     30 71 82 F1 | 	sub	local04, arg03
06a24     38 75 02 F6 | 	mov	local06, local04
06a28     00 74 5E F2 | 	cmps	local06, #0 wcz
06a2c     00 2A 06 E6 |  if_be	mov	result1, #0
06a30     6C 00 90 ED |  if_be	jmp	#LR__0383
06a34     03 6C 0E F2 | 	cmp	local02, #3 wz
06a38     18 00 90 5D |  if_ne	jmp	#LR__0380
06a3c     01 6E 0E F2 | 	cmp	local03, #1 wz
06a40     6E 76 62 FD | 	wrz	local07
06a44     3B 75 02 F1 | 	add	local06, local07
06a48     3A 75 52 F6 | 	abs	local06, local06 wc
06a4c     01 74 46 F0 | 	shr	local06, #1
06a50     3A 75 62 C6 |  if_b	neg	local06, local06
06a54                 | LR__0380
06a54     00 74 5E F2 | 	cmps	local06, #0 wcz
06a58     40 00 90 ED |  if_be	jmp	#LR__0382
06a5c     3A 79 02 F6 | 	mov	local08, local06
06a60                 | LR__0381
06a60     35 7B 02 F6 | 	mov	local09, local01
06a64     3D 77 02 FB | 	rdlong	local07, local09
06a68     04 7A 06 F1 | 	add	local09, #4
06a6c     3D 7D 02 FB | 	rdlong	local10, local09
06a70     20 5C 06 F6 | 	mov	arg01, #32
06a74     07 7F 02 F6 | 	mov	local11, objptr
06a78     3B 0F 02 F6 | 	mov	objptr, local07
06a7c     2D 7C 62 FD | 	call	local10
06a80     3F 0F 02 F6 | 	mov	objptr, local11
06a84     15 81 02 F6 | 	mov	local12, result1
06a88     00 80 5E F2 | 	cmps	local12, #0 wcz
06a8c     40 2B 02 C6 |  if_b	mov	result1, local12
06a90     0C 00 90 CD |  if_b	jmp	#LR__0383
06a94     40 73 02 F1 | 	add	local05, local12
06a98     F1 79 6E FB | 	djnz	local08, #LR__0381
06a9c                 | LR__0382
06a9c     39 2B 02 F6 | 	mov	result1, local05
06aa0                 | LR__0383
06aa0     AF F0 03 F6 | 	mov	ptra, fp
06aa4     BF 00 A0 FD | 	call	#popregs_
06aa8                 | __system___fmtpad_ret
06aa8     2D 00 64 FD | 	ret
06aac                 | 
06aac                 | __system___uitoa
06aac     09 5A 05 F6 | 	mov	COUNT_, #9
06ab0     B0 00 A0 FD | 	call	#pushregs_
06ab4     2E 6B 02 F6 | 	mov	local01, arg01
06ab8     2F 6D 02 F6 | 	mov	local02, arg02
06abc     30 6F 02 F6 | 	mov	local03, arg03
06ac0     31 71 02 F6 | 	mov	local04, arg04
06ac4     32 73 0A F6 | 	mov	local05, arg05 wz
06ac8     35 75 02 F6 | 	mov	local06, local01
06acc     00 76 06 F6 | 	mov	local07, #0
06ad0     37 78 06 56 |  if_ne	mov	local08, #55
06ad4     57 78 06 A6 |  if_e	mov	local08, #87
06ad8                 | LR__0384
06ad8     36 0B 03 F6 | 	mov	muldiva_, local02
06adc     37 0D 03 F6 | 	mov	muldivb_, local03
06ae0     CC 00 A0 FD | 	call	#unsdivide_
06ae4     85 7B 02 F6 | 	mov	local09, muldiva_
06ae8     0A 7A 1E F2 | 	cmp	local09, #10 wcz
06aec     30 7A 06 C1 |  if_b	add	local09, #48
06af0     3C 7B 02 31 |  if_ae	add	local09, local08
06af4     3A 7B 42 FC | 	wrbyte	local09, local06
06af8     36 0B 03 F6 | 	mov	muldiva_, local02
06afc     37 0D 03 F6 | 	mov	muldivb_, local03
06b00     01 74 06 F1 | 	add	local06, #1
06b04     CC 00 A0 FD | 	call	#unsdivide_
06b08     86 6D 0A F6 | 	mov	local02, muldivb_ wz
06b0c     01 76 06 F1 | 	add	local07, #1
06b10     C4 FF 9F 5D |  if_ne	jmp	#LR__0384
06b14     38 77 1A F2 | 	cmp	local07, local04 wcz
06b18     BC FF 9F CD |  if_b	jmp	#LR__0384
06b1c     3A 01 48 FC | 	wrbyte	#0, local06
06b20     35 5D 02 F6 | 	mov	arg01, local01
06b24     78 FE BF FD | 	call	#__system___strrev
06b28     3B 2B 02 F6 | 	mov	result1, local07
06b2c     AF F0 03 F6 | 	mov	ptra, fp
06b30     BF 00 A0 FD | 	call	#popregs_
06b34                 | __system___uitoa_ret
06b34     2D 00 64 FD | 	ret
06b38                 | 
06b38                 | __system___gettxfunc
06b38     03 5A 05 F6 | 	mov	COUNT_, #3
06b3c     B0 00 A0 FD | 	call	#pushregs_
06b40     30 FE BF FD | 	call	#__system____getftab
06b44     15 6B 0A F6 | 	mov	local01, result1 wz
06b48     14 00 90 AD |  if_e	jmp	#LR__0385
06b4c     08 6A 06 F1 | 	add	local01, #8
06b50     35 6D 02 FB | 	rdlong	local02, local01
06b54     08 6A 86 F1 | 	sub	local01, #8
06b58     36 6F 0A F6 | 	mov	local03, local02 wz
06b5c     08 00 90 5D |  if_ne	jmp	#LR__0386
06b60                 | LR__0385
06b60     00 2A 06 F6 | 	mov	result1, #0
06b64     0C 00 90 FD | 	jmp	#LR__0387
06b68                 | LR__0386
06b68     35 5D 02 F6 | 	mov	arg01, local01
06b6c     09 5F 02 F6 | 	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
06b70     60 EB BF FD | 	call	#__system___make_methodptr
06b74                 | LR__0387
06b74     AF F0 03 F6 | 	mov	ptra, fp
06b78     BF 00 A0 FD | 	call	#popregs_
06b7c                 | __system___gettxfunc_ret
06b7c     2D 00 64 FD | 	ret
06b80                 | 
06b80                 | __system___getiolock_0145
06b80     03 5A 05 F6 | 	mov	COUNT_, #3
06b84     B0 00 A0 FD | 	call	#pushregs_
06b88     E8 FD BF FD | 	call	#__system____getftab
06b8c     15 6B 0A F6 | 	mov	local01, result1 wz
06b90     14 00 90 AD |  if_e	jmp	#LR__0388
06b94     08 6A 06 F1 | 	add	local01, #8
06b98     35 6D 02 FB | 	rdlong	local02, local01
06b9c     08 6A 86 F1 | 	sub	local01, #8
06ba0     36 6F 0A F6 | 	mov	local03, local02 wz
06ba4     10 00 90 5D |  if_ne	jmp	#LR__0389
06ba8                 | LR__0388
06ba8     18 14 06 F1 | 	add	ptr___system__dat__, #24
06bac     0A 2B 02 F6 | 	mov	result1, ptr___system__dat__
06bb0     18 14 86 F1 | 	sub	ptr___system__dat__, #24
06bb4     08 00 90 FD | 	jmp	#LR__0390
06bb8                 | LR__0389
06bb8     0C 6A 06 F1 | 	add	local01, #12
06bbc     35 2B 02 F6 | 	mov	result1, local01
06bc0                 | LR__0390
06bc0     AF F0 03 F6 | 	mov	ptra, fp
06bc4     BF 00 A0 FD | 	call	#popregs_
06bc8                 | __system___getiolock_0145_ret
06bc8     2D 00 64 FD | 	ret
06bcc                 | 
06bcc                 | __system___closeraw
06bcc     06 5A 05 F6 | 	mov	COUNT_, #6
06bd0     B0 00 A0 FD | 	call	#pushregs_
06bd4     2E 6B 02 F6 | 	mov	local01, arg01
06bd8     00 6C 06 F6 | 	mov	local02, #0
06bdc     08 6A 06 F1 | 	add	local01, #8
06be0     35 6F 0A FB | 	rdlong	local03, local01 wz
06be4     08 6A 86 F1 | 	sub	local01, #8
06be8     1C 00 90 5D |  if_ne	jmp	#LR__0391
06bec     01 00 00 FF 
06bf0     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
06bf4     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
06bf8     01 00 00 FF 
06bfc     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
06c00     01 2A 66 F6 | 	neg	result1, #1
06c04     90 00 90 FD | 	jmp	#LR__0394
06c08                 | LR__0391
06c08     28 6A 06 F1 | 	add	local01, #40
06c0c     35 6F 0A FB | 	rdlong	local03, local01 wz
06c10     28 6A 86 F1 | 	sub	local01, #40
06c14     2C 00 90 AD |  if_e	jmp	#LR__0392
06c18     28 6A 06 F1 | 	add	local01, #40
06c1c     35 6F 02 FB | 	rdlong	local03, local01
06c20     28 6A 86 F1 | 	sub	local01, #40
06c24     37 71 02 FB | 	rdlong	local04, local03
06c28     04 6E 06 F1 | 	add	local03, #4
06c2c     37 73 02 FB | 	rdlong	local05, local03
06c30     35 5D 02 F6 | 	mov	arg01, local01
06c34     07 75 02 F6 | 	mov	local06, objptr
06c38     38 0F 02 F6 | 	mov	objptr, local04
06c3c     2D 72 62 FD | 	call	local05
06c40     3A 0F 02 F6 | 	mov	objptr, local06
06c44                 | LR__0392
06c44     20 6A 06 F1 | 	add	local01, #32
06c48     35 6F 0A FB | 	rdlong	local03, local01 wz
06c4c     20 6A 86 F1 | 	sub	local01, #32
06c50     30 00 90 AD |  if_e	jmp	#LR__0393
06c54     20 6A 06 F1 | 	add	local01, #32
06c58     35 6F 02 FB | 	rdlong	local03, local01
06c5c     20 6A 86 F1 | 	sub	local01, #32
06c60     37 71 02 FB | 	rdlong	local04, local03
06c64     04 6E 06 F1 | 	add	local03, #4
06c68     37 73 02 FB | 	rdlong	local05, local03
06c6c     35 5D 02 F6 | 	mov	arg01, local01
06c70     07 75 02 F6 | 	mov	local06, objptr
06c74     38 0F 02 F6 | 	mov	objptr, local04
06c78     2D 72 62 FD | 	call	local05
06c7c     3A 0F 02 F6 | 	mov	objptr, local06
06c80     15 6D 02 F6 | 	mov	local02, result1
06c84                 | LR__0393
06c84     35 5D 02 F6 | 	mov	arg01, local01
06c88     00 5E 06 F6 | 	mov	arg02, #0
06c8c     30 60 06 F6 | 	mov	arg03, #48
06c90     A0 00 A0 FD | 	call	#\builtin_bytefill_
06c94     36 2B 02 F6 | 	mov	result1, local02
06c98                 | LR__0394
06c98     AF F0 03 F6 | 	mov	ptra, fp
06c9c     BF 00 A0 FD | 	call	#popregs_
06ca0                 | __system___closeraw_ret
06ca0     2D 00 64 FD | 	ret
06ca4                 | 
06ca4                 | __system____default_getc
06ca4     0C 5A 05 F6 | 	mov	COUNT_, #12
06ca8     B0 00 A0 FD | 	call	#pushregs_
06cac     2E 6B 02 F6 | 	mov	local01, arg01
06cb0     35 6D 02 FB | 	rdlong	local02, local01
06cb4     08 6C 06 F1 | 	add	local02, #8
06cb8     36 6F 02 FB | 	rdlong	local03, local02
06cbc     08 6C 86 F1 | 	sub	local02, #8
06cc0     02 6E CE F7 | 	test	local03, #2 wz
06cc4     08 00 90 AD |  if_e	jmp	#LR__0395
06cc8     35 5D 02 F6 | 	mov	arg01, local01
06ccc     FC 01 B0 FD | 	call	#__system____default_flush
06cd0                 | LR__0395
06cd0     08 6C 06 F1 | 	add	local02, #8
06cd4     36 6F 02 FB | 	rdlong	local03, local02
06cd8     01 6E 46 F5 | 	or	local03, #1
06cdc     36 6F 62 FC | 	wrlong	local03, local02
06ce0     08 6C 86 F1 | 	sub	local02, #8
06ce4     36 71 0A FB | 	rdlong	local04, local02 wz
06ce8     7C 00 90 5D |  if_ne	jmp	#LR__0397
06cec     35 5D 02 F6 | 	mov	arg01, local01
06cf0     2E 73 02 FB | 	rdlong	local05, arg01
06cf4     0C 72 06 F1 | 	add	local05, #12
06cf8     39 5F 02 F6 | 	mov	arg02, local05
06cfc     0C 72 86 F1 | 	sub	local05, #12
06d00     10 5C 06 F1 | 	add	arg01, #16
06d04     2E 75 02 FB | 	rdlong	local06, arg01
06d08     10 5C 86 F1 | 	sub	arg01, #16
06d0c     3A 77 02 FB | 	rdlong	local07, local06
06d10     04 74 06 F1 | 	add	local06, #4
06d14     3A 79 02 FB | 	rdlong	local08, local06
06d18     0A 60 C6 F9 | 	decod	arg03, #10
06d1c     07 7B 02 F6 | 	mov	local09, objptr
06d20     3B 0F 02 F6 | 	mov	objptr, local07
06d24     2D 78 62 FD | 	call	local08
06d28     3D 0F 02 F6 | 	mov	objptr, local09
06d2c     15 7D 02 F6 | 	mov	local10, result1
06d30     00 7C 5E F2 | 	cmps	local10, #0 wcz
06d34     01 2A 66 C6 |  if_b	neg	result1, #1
06d38     28 00 90 CD |  if_b	jmp	#LR__0396
06d3c     39 7D 62 FC | 	wrlong	local10, local05
06d40     0C 72 06 F1 | 	add	local05, #12
06d44     39 7F 02 F6 | 	mov	local11, local05
06d48     08 72 86 F1 | 	sub	local05, #8
06d4c     39 7F 62 FC | 	wrlong	local11, local05
06d50     04 72 06 F1 | 	add	local05, #4
06d54     39 75 02 FB | 	rdlong	local06, local05
06d58     01 74 46 F5 | 	or	local06, #1
06d5c     39 75 62 FC | 	wrlong	local06, local05
06d60     3E 2B 02 F6 | 	mov	result1, local10
06d64                 | LR__0396
06d64     15 71 02 F6 | 	mov	local04, result1
06d68                 | LR__0397
06d68     00 70 5E F2 | 	cmps	local04, #0 wcz
06d6c     01 2A 66 E6 |  if_be	neg	result1, #1
06d70     1C 00 90 ED |  if_be	jmp	#LR__0398
06d74     01 70 86 F1 | 	sub	local04, #1
06d78     36 71 62 FC | 	wrlong	local04, local02
06d7c     04 6C 06 F1 | 	add	local02, #4
06d80     36 81 02 FB | 	rdlong	local12, local02
06d84     40 2B C2 FA | 	rdbyte	result1, local12
06d88     01 80 06 F1 | 	add	local12, #1
06d8c     36 81 62 FC | 	wrlong	local12, local02
06d90                 | LR__0398
06d90     AF F0 03 F6 | 	mov	ptra, fp
06d94     BF 00 A0 FD | 	call	#popregs_
06d98                 | __system____default_getc_ret
06d98     2D 00 64 FD | 	ret
06d9c                 | 
06d9c                 | __system____default_putc
06d9c     06 5A 05 F6 | 	mov	COUNT_, #6
06da0     B0 00 A0 FD | 	call	#pushregs_
06da4     2E 6B 02 F6 | 	mov	local01, arg01
06da8     2F 6D 02 F6 | 	mov	local02, arg02
06dac     36 6F 02 FB | 	rdlong	local03, local02
06db0     08 6E 06 F1 | 	add	local03, #8
06db4     37 71 02 FB | 	rdlong	local04, local03
06db8     08 6E 86 F1 | 	sub	local03, #8
06dbc     01 70 CE F7 | 	test	local04, #1 wz
06dc0     08 00 90 AD |  if_e	jmp	#LR__0399
06dc4     36 5D 02 F6 | 	mov	arg01, local02
06dc8     00 01 B0 FD | 	call	#__system____default_flush
06dcc                 | LR__0399
06dcc     08 6E 06 F1 | 	add	local03, #8
06dd0     37 71 02 FB | 	rdlong	local04, local03
06dd4     02 70 46 F5 | 	or	local04, #2
06dd8     37 71 62 FC | 	wrlong	local04, local03
06ddc     08 6E 86 F1 | 	sub	local03, #8
06de0     37 73 02 FB | 	rdlong	local05, local03
06de4     39 75 02 F6 | 	mov	local06, local05
06de8     0C 6E 06 F1 | 	add	local03, #12
06dec     37 75 02 F1 | 	add	local06, local03
06df0     3A 6B 42 FC | 	wrbyte	local01, local06
06df4     FF 6A 06 F5 | 	and	local01, #255
06df8     01 72 06 F1 | 	add	local05, #1
06dfc     0C 6E 86 F1 | 	sub	local03, #12
06e00     37 73 62 FC | 	wrlong	local05, local03
06e04     02 00 00 FF 
06e08     00 72 0E F2 | 	cmp	local05, ##1024 wz
06e0c     10 00 90 5D |  if_ne	jmp	#LR__0400
06e10     36 5D 02 F6 | 	mov	arg01, local02
06e14     B4 00 B0 FD | 	call	#__system____default_flush
06e18     00 2A 0E F2 | 	cmp	result1, #0 wz
06e1c     01 6A 66 56 |  if_ne	neg	local01, #1
06e20                 | LR__0400
06e20     35 2B 02 F6 | 	mov	result1, local01
06e24     AF F0 03 F6 | 	mov	ptra, fp
06e28     BF 00 A0 FD | 	call	#popregs_
06e2c                 | __system____default_putc_ret
06e2c     2D 00 64 FD | 	ret
06e30                 | 
06e30                 | __system____default_putc_terminal
06e30     06 5A 05 F6 | 	mov	COUNT_, #6
06e34     B0 00 A0 FD | 	call	#pushregs_
06e38     2E 6B 02 F6 | 	mov	local01, arg01
06e3c     2F 6D 02 F6 | 	mov	local02, arg02
06e40     36 6F 02 FB | 	rdlong	local03, local02
06e44     08 6E 06 F1 | 	add	local03, #8
06e48     37 71 02 FB | 	rdlong	local04, local03
06e4c     08 6E 86 F1 | 	sub	local03, #8
06e50     01 70 CE F7 | 	test	local04, #1 wz
06e54     08 00 90 AD |  if_e	jmp	#LR__0401
06e58     36 5D 02 F6 | 	mov	arg01, local02
06e5c     6C 00 B0 FD | 	call	#__system____default_flush
06e60                 | LR__0401
06e60     08 6E 06 F1 | 	add	local03, #8
06e64     37 71 02 FB | 	rdlong	local04, local03
06e68     02 70 46 F5 | 	or	local04, #2
06e6c     37 71 62 FC | 	wrlong	local04, local03
06e70     08 6E 86 F1 | 	sub	local03, #8
06e74     37 73 02 FB | 	rdlong	local05, local03
06e78     39 75 02 F6 | 	mov	local06, local05
06e7c     0C 6E 06 F1 | 	add	local03, #12
06e80     37 75 02 F1 | 	add	local06, local03
06e84     3A 6B 42 FC | 	wrbyte	local01, local06
06e88     FF 6A 06 F5 | 	and	local01, #255
06e8c     0C 6E 86 F1 | 	sub	local03, #12
06e90     01 72 06 F1 | 	add	local05, #1
06e94     37 73 62 FC | 	wrlong	local05, local03
06e98     0A 6A 0E F2 | 	cmp	local01, #10 wz
06e9c     0C 00 90 AD |  if_e	jmp	#LR__0402
06ea0     02 00 00 FF 
06ea4     00 72 0E F2 | 	cmp	local05, ##1024 wz
06ea8     10 00 90 5D |  if_ne	jmp	#LR__0403
06eac                 | LR__0402
06eac     36 5D 02 F6 | 	mov	arg01, local02
06eb0     18 00 B0 FD | 	call	#__system____default_flush
06eb4     00 2A 0E F2 | 	cmp	result1, #0 wz
06eb8     01 6A 66 56 |  if_ne	neg	local01, #1
06ebc                 | LR__0403
06ebc     35 2B 02 F6 | 	mov	result1, local01
06ec0     AF F0 03 F6 | 	mov	ptra, fp
06ec4     BF 00 A0 FD | 	call	#popregs_
06ec8                 | __system____default_putc_terminal_ret
06ec8     2D 00 64 FD | 	ret
06ecc                 | 
06ecc                 | __system____default_flush
06ecc     0F 5A 05 F6 | 	mov	COUNT_, #15
06ed0     B0 00 A0 FD | 	call	#pushregs_
06ed4     2E 6B 02 F6 | 	mov	local01, arg01
06ed8     35 6D 02 FB | 	rdlong	local02, local01
06edc     36 6F 02 FB | 	rdlong	local03, local02
06ee0     08 6C 06 F1 | 	add	local02, #8
06ee4     36 71 02 FB | 	rdlong	local04, local02
06ee8     08 6C 86 F1 | 	sub	local02, #8
06eec     02 70 CE F7 | 	test	local04, #2 wz
06ef0     B8 00 90 AD |  if_e	jmp	#LR__0406
06ef4     00 6E 5E F2 | 	cmps	local03, #0 wcz
06ef8     30 01 90 ED |  if_be	jmp	#LR__0408
06efc     08 6A 06 F1 | 	add	local01, #8
06f00     35 71 02 FB | 	rdlong	local04, local01
06f04     08 6A 86 F1 | 	sub	local01, #8
06f08     40 70 CE F7 | 	test	local04, #64 wz
06f0c     5C 00 90 AD |  if_e	jmp	#LR__0405
06f10     08 6A 06 F1 | 	add	local01, #8
06f14     35 71 02 FB | 	rdlong	local04, local01
06f18     08 6A 86 F1 | 	sub	local01, #8
06f1c     80 70 CE F7 | 	test	local04, #128 wz
06f20     48 00 90 AD |  if_e	jmp	#LR__0404
06f24     2C 6A 06 F1 | 	add	local01, #44
06f28     35 71 02 FB | 	rdlong	local04, local01
06f2c     2C 6A 86 F1 | 	sub	local01, #44
06f30     38 73 02 FB | 	rdlong	local05, local04
06f34     04 70 06 F1 | 	add	local04, #4
06f38     38 75 02 FB | 	rdlong	local06, local04
06f3c     35 5D 02 F6 | 	mov	arg01, local01
06f40     00 5E 06 F6 | 	mov	arg02, #0
06f44     02 60 06 F6 | 	mov	arg03, #2
06f48     07 77 02 F6 | 	mov	local07, objptr
06f4c     39 0F 02 F6 | 	mov	objptr, local05
06f50     2D 74 62 FD | 	call	local06
06f54     3B 0F 02 F6 | 	mov	objptr, local07
06f58     08 6A 06 F1 | 	add	local01, #8
06f5c     35 71 02 FB | 	rdlong	local04, local01
06f60     80 70 26 F5 | 	andn	local04, #128
06f64     35 71 62 FC | 	wrlong	local04, local01
06f68     08 6A 86 F1 | 	sub	local01, #8
06f6c                 | LR__0404
06f6c                 | LR__0405
06f6c     0C 6C 06 F1 | 	add	local02, #12
06f70     36 5F 02 F6 | 	mov	arg02, local02
06f74     0C 6C 86 F1 | 	sub	local02, #12
06f78     14 6A 06 F1 | 	add	local01, #20
06f7c     35 71 02 FB | 	rdlong	local04, local01
06f80     14 6A 86 F1 | 	sub	local01, #20
06f84     38 73 02 FB | 	rdlong	local05, local04
06f88     04 70 06 F1 | 	add	local04, #4
06f8c     38 75 02 FB | 	rdlong	local06, local04
06f90     35 5D 02 F6 | 	mov	arg01, local01
06f94     37 61 02 F6 | 	mov	arg03, local03
06f98     07 77 02 F6 | 	mov	local07, objptr
06f9c     39 0F 02 F6 | 	mov	objptr, local05
06fa0     2D 74 62 FD | 	call	local06
06fa4     3B 0F 02 F6 | 	mov	objptr, local07
06fa8     80 00 90 FD | 	jmp	#LR__0408
06fac                 | LR__0406
06fac     08 6C 06 F1 | 	add	local02, #8
06fb0     36 71 02 FB | 	rdlong	local04, local02
06fb4     08 6C 86 F1 | 	sub	local02, #8
06fb8     01 70 CE F7 | 	test	local04, #1 wz
06fbc     6C 00 90 AD |  if_e	jmp	#LR__0407
06fc0     00 6E 0E F2 | 	cmp	local03, #0 wz
06fc4     64 00 90 AD |  if_e	jmp	#LR__0407
06fc8     2C 6A 06 F1 | 	add	local01, #44
06fcc     35 79 02 FB | 	rdlong	local08, local01
06fd0     2C 6A 86 F1 | 	sub	local01, #44
06fd4     3C 71 02 F6 | 	mov	local04, local08
06fd8     38 73 02 FB | 	rdlong	local05, local04
06fdc     04 70 06 F1 | 	add	local04, #4
06fe0     38 7B 02 FB | 	rdlong	local09, local04
06fe4     04 70 86 F1 | 	sub	local04, #4
06fe8     3D 75 02 F6 | 	mov	local06, local09
06fec     35 7D 02 F6 | 	mov	local10, local01
06ff0     37 7F 02 F6 | 	mov	local11, local03
06ff4     3F 7F 62 F6 | 	neg	local11, local11
06ff8     3F 81 02 F6 | 	mov	local12, local11
06ffc     01 76 06 F6 | 	mov	local07, #1
07000     3E 5D 02 F6 | 	mov	arg01, local10
07004     40 5F 02 F6 | 	mov	arg02, local12
07008     01 60 06 F6 | 	mov	arg03, #1
0700c     07 83 02 F6 | 	mov	local13, objptr
07010     39 0F 02 F6 | 	mov	objptr, local05
07014     2D 74 62 FD | 	call	local06
07018     41 0F 02 F6 | 	mov	objptr, local13
0701c     15 85 02 F6 | 	mov	local14, result1
07020     42 87 02 F6 | 	mov	local15, local14
07024     00 86 5E F2 | 	cmps	local15, #0 wcz
07028     37 87 02 36 |  if_ae	mov	local15, local03
0702c                 | LR__0407
0702c                 | LR__0408
0702c     36 01 68 FC | 	wrlong	#0, local02
07030     04 6C 06 F1 | 	add	local02, #4
07034     36 01 68 FC | 	wrlong	#0, local02
07038     04 6C 06 F1 | 	add	local02, #4
0703c     36 01 68 FC | 	wrlong	#0, local02
07040     00 2A 06 F6 | 	mov	result1, #0
07044     AF F0 03 F6 | 	mov	ptra, fp
07048     BF 00 A0 FD | 	call	#popregs_
0704c                 | __system____default_flush_ret
0704c     2D 00 64 FD | 	ret
07050                 | 
07050                 | __system___rxtxioctl_0174
07050     02 5A 05 F6 | 	mov	COUNT_, #2
07054     B0 00 A0 FD | 	call	#pushregs_
07058     2F 6B 02 F6 | 	mov	local01, arg02
0705c     30 6D 02 F6 | 	mov	local02, arg03
07060     00 6B 0E F2 | 	cmp	local01, #256 wz
07064     0C 00 90 AD |  if_e	jmp	#LR__0409
07068     01 6B 0E F2 | 	cmp	local01, #257 wz
0706c     1C 00 90 AD |  if_e	jmp	#LR__0410
07070     30 00 90 FD | 	jmp	#LR__0411
07074                 | LR__0409
07074     08 14 06 F1 | 	add	ptr___system__dat__, #8
07078     0A 2B 02 FB | 	rdlong	result1, ptr___system__dat__
0707c     08 14 86 F1 | 	sub	ptr___system__dat__, #8
07080     36 2B 62 FC | 	wrlong	result1, local02
07084     00 2A 06 F6 | 	mov	result1, #0
07088     30 00 90 FD | 	jmp	#LR__0412
0708c                 | LR__0410
0708c     36 5D 02 FB | 	rdlong	arg01, local02
07090     08 14 06 F1 | 	add	ptr___system__dat__, #8
07094     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
07098     08 14 86 F1 | 	sub	ptr___system__dat__, #8
0709c     00 2A 06 F6 | 	mov	result1, #0
070a0     18 00 90 FD | 	jmp	#LR__0412
070a4                 | LR__0411
070a4     01 00 00 FF 
070a8     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
070ac     0A 15 68 FC | 	wrlong	#10, ptr___system__dat__
070b0     01 00 00 FF 
070b4     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
070b8     01 2A 66 F6 | 	neg	result1, #1
070bc                 | LR__0412
070bc     AF F0 03 F6 | 	mov	ptra, fp
070c0     BF 00 A0 FD | 	call	#popregs_
070c4                 | __system___rxtxioctl_0174_ret
070c4     2D 00 64 FD | 	ret
070c8                 | 
070c8                 | __system____dummy_flush_0175
070c8     00 2A 06 F6 | 	mov	result1, #0
070cc                 | __system____dummy_flush_0175_ret
070cc     2D 00 64 FD | 	ret
070d0                 | 
070d0                 | __system___vfswrite
070d0     0B 5A 05 F6 | 	mov	COUNT_, #11
070d4     B0 00 A0 FD | 	call	#pushregs_
070d8     2E 6B 02 F6 | 	mov	local01, arg01
070dc     2F 6D 02 F6 | 	mov	local02, arg02
070e0     30 6F 02 F6 | 	mov	local03, arg03
070e4     36 71 02 F6 | 	mov	local04, local02
070e8     08 6A 06 F1 | 	add	local01, #8
070ec     35 73 02 FB | 	rdlong	local05, local01
070f0     08 6A 86 F1 | 	sub	local01, #8
070f4     02 72 CE F7 | 	test	local05, #2 wz
070f8     1C 00 90 5D |  if_ne	jmp	#LR__0413
070fc     01 00 00 FF 
07100     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07104     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07108     01 00 00 FF 
0710c     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07110     01 2A 66 F6 | 	neg	result1, #1
07114     70 01 90 FD | 	jmp	#LR__0421
07118                 | LR__0413
07118     08 6A 06 F1 | 	add	local01, #8
0711c     35 73 02 FB | 	rdlong	local05, local01
07120     08 6A 86 F1 | 	sub	local01, #8
07124     40 72 CE F7 | 	test	local05, #64 wz
07128     5C 00 90 AD |  if_e	jmp	#LR__0415
0712c     08 6A 06 F1 | 	add	local01, #8
07130     35 73 02 FB | 	rdlong	local05, local01
07134     08 6A 86 F1 | 	sub	local01, #8
07138     80 72 CE F7 | 	test	local05, #128 wz
0713c     48 00 90 AD |  if_e	jmp	#LR__0414
07140     2C 6A 06 F1 | 	add	local01, #44
07144     35 73 02 FB | 	rdlong	local05, local01
07148     2C 6A 86 F1 | 	sub	local01, #44
0714c     39 75 02 FB | 	rdlong	local06, local05
07150     04 72 06 F1 | 	add	local05, #4
07154     39 77 02 FB | 	rdlong	local07, local05
07158     35 5D 02 F6 | 	mov	arg01, local01
0715c     00 5E 06 F6 | 	mov	arg02, #0
07160     02 60 06 F6 | 	mov	arg03, #2
07164     07 79 02 F6 | 	mov	local08, objptr
07168     3A 0F 02 F6 | 	mov	objptr, local06
0716c     2D 76 62 FD | 	call	local07
07170     3C 0F 02 F6 | 	mov	objptr, local08
07174     08 6A 06 F1 | 	add	local01, #8
07178     35 73 02 FB | 	rdlong	local05, local01
0717c     80 72 26 F5 | 	andn	local05, #128
07180     35 73 62 FC | 	wrlong	local05, local01
07184     08 6A 86 F1 | 	sub	local01, #8
07188                 | LR__0414
07188                 | LR__0415
07188     14 6A 06 F1 | 	add	local01, #20
0718c     35 73 0A FB | 	rdlong	local05, local01 wz
07190     14 6A 86 F1 | 	sub	local01, #20
07194     7C 00 90 AD |  if_e	jmp	#LR__0417
07198     14 6A 06 F1 | 	add	local01, #20
0719c     35 73 02 FB | 	rdlong	local05, local01
071a0     14 6A 86 F1 | 	sub	local01, #20
071a4     39 75 02 FB | 	rdlong	local06, local05
071a8     04 72 06 F1 | 	add	local05, #4
071ac     39 77 02 FB | 	rdlong	local07, local05
071b0     36 5F 02 F6 | 	mov	arg02, local02
071b4     37 61 02 F6 | 	mov	arg03, local03
071b8     35 5D 02 F6 | 	mov	arg01, local01
071bc     07 79 02 F6 | 	mov	local08, objptr
071c0     3A 0F 02 F6 | 	mov	objptr, local06
071c4     2D 76 62 FD | 	call	local07
071c8     3C 0F 02 F6 | 	mov	objptr, local08
071cc     15 7B 02 F6 | 	mov	local09, result1
071d0     00 7A 5E F2 | 	cmps	local09, #0 wcz
071d4     34 00 90 3D |  if_ae	jmp	#LR__0416
071d8     08 6A 06 F1 | 	add	local01, #8
071dc     35 73 02 FB | 	rdlong	local05, local01
071e0     20 72 46 F5 | 	or	local05, #32
071e4     35 73 62 FC | 	wrlong	local05, local01
071e8     01 00 00 FF 
071ec     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
071f0     0A 7B 62 FC | 	wrlong	local09, ptr___system__dat__
071f4     01 00 00 FF 
071f8     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
071fc     00 7A 0E F2 | 	cmp	local09, #0 wz
07200     01 2A 66 56 |  if_ne	neg	result1, #1
07204     00 2A 06 A6 |  if_e	mov	result1, #0
07208     7C 00 90 FD | 	jmp	#LR__0421
0720c                 | LR__0416
0720c     3D 2B 02 F6 | 	mov	result1, local09
07210     74 00 90 FD | 	jmp	#LR__0421
07214                 | LR__0417
07214     18 6A 06 F1 | 	add	local01, #24
07218     35 7D 0A FB | 	rdlong	local10, local01 wz
0721c     18 6A 86 F1 | 	sub	local01, #24
07220     1C 00 90 5D |  if_ne	jmp	#LR__0418
07224     01 00 00 FF 
07228     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
0722c     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07230     01 00 00 FF 
07234     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07238     01 2A 66 F6 | 	neg	result1, #1
0723c     48 00 90 FD | 	jmp	#LR__0421
07240                 | LR__0418
07240     00 7A 06 F6 | 	mov	local09, #0
07244                 | LR__0419
07244     00 6E 1E F2 | 	cmp	local03, #0 wcz
07248     38 00 90 ED |  if_be	jmp	#LR__0420
0724c     3E 73 02 F6 | 	mov	local05, local10
07250     39 75 02 FB | 	rdlong	local06, local05
07254     04 72 06 F1 | 	add	local05, #4
07258     39 77 02 FB | 	rdlong	local07, local05
0725c     38 5D C2 FA | 	rdbyte	arg01, local04
07260     35 5F 02 F6 | 	mov	arg02, local01
07264     07 7F 02 F6 | 	mov	local11, objptr
07268     3A 0F 02 F6 | 	mov	objptr, local06
0726c     01 70 06 F1 | 	add	local04, #1
07270     2D 76 62 FD | 	call	local07
07274     3F 0F 02 F6 | 	mov	objptr, local11
07278     15 7B 02 F1 | 	add	local09, result1
0727c     01 6E 86 F1 | 	sub	local03, #1
07280     C0 FF 9F FD | 	jmp	#LR__0419
07284                 | LR__0420
07284     3D 2B 02 F6 | 	mov	result1, local09
07288                 | LR__0421
07288     AF F0 03 F6 | 	mov	ptra, fp
0728c     BF 00 A0 FD | 	call	#popregs_
07290                 | __system___vfswrite_ret
07290     2D 00 64 FD | 	ret
07294                 | 
07294                 | __system___vfsread
07294     0F 5A 05 F6 | 	mov	COUNT_, #15
07298     B0 00 A0 FD | 	call	#pushregs_
0729c     2C F0 07 F1 | 	add	ptra, #44
072a0     04 5E 05 F1 | 	add	fp, #4
072a4     AF 5C 62 FC | 	wrlong	arg01, fp
072a8     04 5E 05 F1 | 	add	fp, #4
072ac     AF 5E 62 FC | 	wrlong	arg02, fp
072b0     04 5E 05 F1 | 	add	fp, #4
072b4     AF 60 62 FC | 	wrlong	arg03, fp
072b8     04 5E 85 F1 | 	sub	fp, #4
072bc     AF 6A 02 FB | 	rdlong	local01, fp
072c0     14 5E 05 F1 | 	add	fp, #20
072c4     AF 6A 62 FC | 	wrlong	local01, fp
072c8     04 5E 05 F1 | 	add	fp, #4
072cc     AF 00 68 FC | 	wrlong	#0, fp
072d0     1C 5E 85 F1 | 	sub	fp, #28
072d4     AF 6C 02 FB | 	rdlong	local02, fp
072d8     04 5E 85 F1 | 	sub	fp, #4
072dc     08 6C 06 F1 | 	add	local02, #8
072e0     36 6B 02 FB | 	rdlong	local01, local02
072e4     01 6A CE F7 | 	test	local01, #1 wz
072e8     1C 00 90 5D |  if_ne	jmp	#LR__0422
072ec     01 00 00 FF 
072f0     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
072f4     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
072f8     01 00 00 FF 
072fc     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07300     01 2A 66 F6 | 	neg	result1, #1
07304     9C 02 90 FD | 	jmp	#LR__0430
07308                 | LR__0422
07308     04 5E 05 F1 | 	add	fp, #4
0730c     AF 6A 02 FB | 	rdlong	local01, fp
07310     04 5E 85 F1 | 	sub	fp, #4
07314     10 6A 06 F1 | 	add	local01, #16
07318     35 6F 0A FB | 	rdlong	local03, local01 wz
0731c     B4 00 90 AD |  if_e	jmp	#LR__0424
07320     04 5E 05 F1 | 	add	fp, #4
07324     AF 70 02 FB | 	rdlong	local04, fp
07328     10 70 06 F1 | 	add	local04, #16
0732c     38 6B 02 FB | 	rdlong	local01, local04
07330     35 6D 02 FB | 	rdlong	local02, local01
07334     04 6A 06 F1 | 	add	local01, #4
07338     35 6F 02 FB | 	rdlong	local03, local01
0733c     AF 5C 02 FB | 	rdlong	arg01, fp
07340     04 5E 05 F1 | 	add	fp, #4
07344     AF 5E 02 FB | 	rdlong	arg02, fp
07348     04 5E 05 F1 | 	add	fp, #4
0734c     AF 60 02 FB | 	rdlong	arg03, fp
07350     0C 5E 85 F1 | 	sub	fp, #12
07354     07 73 02 F6 | 	mov	local05, objptr
07358     36 0F 02 F6 | 	mov	objptr, local02
0735c     2D 6E 62 FD | 	call	local03
07360     39 0F 02 F6 | 	mov	objptr, local05
07364     10 5E 05 F1 | 	add	fp, #16
07368     AF 2A 62 FC | 	wrlong	result1, fp
0736c     10 5E 85 F1 | 	sub	fp, #16
07370     00 2A 5E F2 | 	cmps	result1, #0 wcz
07374     4C 00 90 3D |  if_ae	jmp	#LR__0423
07378     04 5E 05 F1 | 	add	fp, #4
0737c     AF 6A 02 FB | 	rdlong	local01, fp
07380     35 71 02 F6 | 	mov	local04, local01
07384     08 70 06 F1 | 	add	local04, #8
07388     38 6F 02 FB | 	rdlong	local03, local04
0738c     20 6E 46 F5 | 	or	local03, #32
07390     08 6A 06 F1 | 	add	local01, #8
07394     35 6F 62 FC | 	wrlong	local03, local01
07398     0C 5E 05 F1 | 	add	fp, #12
0739c     AF 5C 0A FB | 	rdlong	arg01, fp wz
073a0     10 5E 85 F1 | 	sub	fp, #16
073a4     01 00 00 FF 
073a8     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
073ac     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
073b0     01 00 00 FF 
073b4     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
073b8     01 2A 66 56 |  if_ne	neg	result1, #1
073bc     00 2A 06 A6 |  if_e	mov	result1, #0
073c0     E0 01 90 FD | 	jmp	#LR__0430
073c4                 | LR__0423
073c4     10 5E 05 F1 | 	add	fp, #16
073c8     AF 2A 02 FB | 	rdlong	result1, fp
073cc     10 5E 85 F1 | 	sub	fp, #16
073d0     D0 01 90 FD | 	jmp	#LR__0430
073d4                 | LR__0424
073d4     04 5E 05 F1 | 	add	fp, #4
073d8     AF 6A 02 FB | 	rdlong	local01, fp
073dc     1C 6A 06 F1 | 	add	local01, #28
073e0     35 6F 02 FB | 	rdlong	local03, local01
073e4     14 5E 05 F1 | 	add	fp, #20
073e8     AF 6E 62 FC | 	wrlong	local03, fp
073ec     AF 6A 0A FB | 	rdlong	local01, fp wz
073f0     18 5E 85 F1 | 	sub	fp, #24
073f4     1C 00 90 5D |  if_ne	jmp	#LR__0425
073f8     01 00 00 FF 
073fc     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07400     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07404     01 00 00 FF 
07408     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
0740c     01 2A 66 F6 | 	neg	result1, #1
07410     90 01 90 FD | 	jmp	#LR__0430
07414                 | LR__0425
07414     04 5E 05 F1 | 	add	fp, #4
07418     AF 6A 02 FB | 	rdlong	local01, fp
0741c     04 5E 85 F1 | 	sub	fp, #4
07420     24 6A 06 F1 | 	add	local01, #36
07424     35 6F 0A FB | 	rdlong	local03, local01 wz
07428     A0 00 90 AD |  if_e	jmp	#LR__0427
0742c     24 5E 05 F1 | 	add	fp, #36
07430     AF 74 02 F6 | 	mov	local06, fp
07434     20 5E 85 F1 | 	sub	fp, #32
07438     AF 76 02 FB | 	rdlong	local07, fp
0743c     3B 71 02 F6 | 	mov	local04, local07
07440     24 70 06 F1 | 	add	local04, #36
07444     38 79 02 FB | 	rdlong	local08, local04
07448     3C 6B 02 F6 | 	mov	local01, local08
0744c     35 6D 02 FB | 	rdlong	local02, local01
07450     04 6A 06 F1 | 	add	local01, #4
07454     35 7B 02 FB | 	rdlong	local09, local01
07458     3D 6F 02 F6 | 	mov	local03, local09
0745c     3B 7D 02 F6 | 	mov	local10, local07
07460     04 5E 85 F1 | 	sub	fp, #4
07464     3E 7F 02 F6 | 	mov	local11, local10
07468     00 81 06 F6 | 	mov	local12, #256
0746c     3A 83 02 F6 | 	mov	local13, local06
07470     3F 5D 02 F6 | 	mov	arg01, local11
07474     00 5F 06 F6 | 	mov	arg02, #256
07478     41 61 02 F6 | 	mov	arg03, local13
0747c     07 85 02 F6 | 	mov	local14, objptr
07480     36 0F 02 F6 | 	mov	objptr, local02
07484     2D 6E 62 FD | 	call	local03
07488     42 0F 02 F6 | 	mov	objptr, local14
0748c     15 87 02 F6 | 	mov	local15, result1
07490     10 5E 05 F1 | 	add	fp, #16
07494     AF 86 62 FC | 	wrlong	local15, fp
07498     AF 6C 0A FB | 	rdlong	local02, fp wz
0749c     10 5E 85 F1 | 	sub	fp, #16
074a0     28 00 90 5D |  if_ne	jmp	#LR__0426
074a4     24 5E 05 F1 | 	add	fp, #36
074a8     AF 70 02 FB | 	rdlong	local04, fp
074ac     24 5E 85 F1 | 	sub	fp, #36
074b0     38 6F 02 F6 | 	mov	local03, local04
074b4     02 6E 0E F5 | 	and	local03, #2 wz
074b8     10 00 90 AD |  if_e	jmp	#LR__0426
074bc     01 6A 06 F6 | 	mov	local01, #1
074c0     20 5E 05 F1 | 	add	fp, #32
074c4     AF 02 68 FC | 	wrlong	#1, fp
074c8     20 5E 85 F1 | 	sub	fp, #32
074cc                 | LR__0426
074cc                 | LR__0427
074cc     10 5E 05 F1 | 	add	fp, #16
074d0     AF 00 68 FC | 	wrlong	#0, fp
074d4     10 5E 85 F1 | 	sub	fp, #16
074d8                 | LR__0428
074d8     0C 5E 05 F1 | 	add	fp, #12
074dc     AF 6A 02 FB | 	rdlong	local01, fp
074e0     0C 5E 85 F1 | 	sub	fp, #12
074e4     00 6A 1E F2 | 	cmp	local01, #0 wcz
074e8     AC 00 90 ED |  if_be	jmp	#LR__0429
074ec     18 5E 05 F1 | 	add	fp, #24
074f0     AF 6A 02 FB | 	rdlong	local01, fp
074f4     35 6D 02 FB | 	rdlong	local02, local01
074f8     04 6A 06 F1 | 	add	local01, #4
074fc     35 6F 02 FB | 	rdlong	local03, local01
07500     14 5E 85 F1 | 	sub	fp, #20
07504     AF 5C 02 FB | 	rdlong	arg01, fp
07508     04 5E 85 F1 | 	sub	fp, #4
0750c     07 7F 02 F6 | 	mov	local11, objptr
07510     36 0F 02 F6 | 	mov	objptr, local02
07514     2D 6E 62 FD | 	call	local03
07518     3F 0F 02 F6 | 	mov	objptr, local11
0751c     15 7D 02 F6 | 	mov	local10, result1
07520     14 5E 05 F1 | 	add	fp, #20
07524     AF 7C 62 FC | 	wrlong	local10, fp
07528     14 5E 85 F1 | 	sub	fp, #20
0752c     00 7C 5E F2 | 	cmps	local10, #0 wcz
07530     64 00 90 CD |  if_b	jmp	#LR__0429
07534     1C 5E 05 F1 | 	add	fp, #28
07538     AF 6A 02 FB | 	rdlong	local01, fp
0753c     35 6F 02 F6 | 	mov	local03, local01
07540     01 6E 06 F1 | 	add	local03, #1
07544     AF 6E 62 FC | 	wrlong	local03, fp
07548     08 5E 85 F1 | 	sub	fp, #8
0754c     AF 76 02 FB | 	rdlong	local07, fp
07550     35 77 42 FC | 	wrbyte	local07, local01
07554     04 5E 85 F1 | 	sub	fp, #4
07558     AF 6A 02 FB | 	rdlong	local01, fp
0755c     01 6A 06 F1 | 	add	local01, #1
07560     AF 6A 62 FC | 	wrlong	local01, fp
07564     04 5E 85 F1 | 	sub	fp, #4
07568     AF 6A 02 FB | 	rdlong	local01, fp
0756c     01 6A 86 F1 | 	sub	local01, #1
07570     AF 6A 62 FC | 	wrlong	local01, fp
07574     14 5E 05 F1 | 	add	fp, #20
07578     AF 6A 0A FB | 	rdlong	local01, fp wz
0757c     20 5E 85 F1 | 	sub	fp, #32
07580     54 FF 9F AD |  if_e	jmp	#LR__0428
07584     14 5E 05 F1 | 	add	fp, #20
07588     AF 6E 02 FB | 	rdlong	local03, fp
0758c     14 5E 85 F1 | 	sub	fp, #20
07590     0A 6E 0E F2 | 	cmp	local03, #10 wz
07594     40 FF 9F 5D |  if_ne	jmp	#LR__0428
07598                 | LR__0429
07598     10 5E 05 F1 | 	add	fp, #16
0759c     AF 2A 02 FB | 	rdlong	result1, fp
075a0     10 5E 85 F1 | 	sub	fp, #16
075a4                 | LR__0430
075a4     AF F0 03 F6 | 	mov	ptra, fp
075a8     BF 00 A0 FD | 	call	#popregs_
075ac                 | __system___vfsread_ret
075ac     2D 00 64 FD | 	ret
075b0                 | 
075b0                 | __struct__s_vfs_file_t_putchar
075b0     04 5A 05 F6 | 	mov	COUNT_, #4
075b4     B0 00 A0 FD | 	call	#pushregs_
075b8     18 0E 06 F1 | 	add	objptr, #24
075bc     07 6B 0A FB | 	rdlong	local01, objptr wz
075c0     18 0E 86 F1 | 	sub	objptr, #24
075c4     00 2A 06 A6 |  if_e	mov	result1, #0
075c8     3C 00 90 AD |  if_e	jmp	#LR__0431
075cc     18 0E 06 F1 | 	add	objptr, #24
075d0     07 6B 02 FB | 	rdlong	local01, objptr
075d4     18 0E 86 F1 | 	sub	objptr, #24
075d8     35 6D 02 FB | 	rdlong	local02, local01
075dc     04 6A 06 F1 | 	add	local01, #4
075e0     35 6F 02 FB | 	rdlong	local03, local01
075e4     07 5F 02 F6 | 	mov	arg02, objptr
075e8     07 71 02 F6 | 	mov	local04, objptr
075ec     36 0F 02 F6 | 	mov	objptr, local02
075f0     2D 6E 62 FD | 	call	local03
075f4     38 0F 02 F6 | 	mov	objptr, local04
075f8     00 2A 5E F2 | 	cmps	result1, #0 wcz
075fc     00 6A 06 C6 |  if_b	mov	local01, #0
07600     01 6A 06 36 |  if_ae	mov	local01, #1
07604     35 2B 02 F6 | 	mov	result1, local01
07608                 | LR__0431
07608     AF F0 03 F6 | 	mov	ptra, fp
0760c     BF 00 A0 FD | 	call	#popregs_
07610                 | __struct__s_vfs_file_t_putchar_ret
07610     2D 00 64 FD | 	ret
07614                 | 
07614                 | __struct__s_vfs_file_t_getchar
07614     04 5A 05 F6 | 	mov	COUNT_, #4
07618     B0 00 A0 FD | 	call	#pushregs_
0761c     1C 0E 06 F1 | 	add	objptr, #28
07620     07 6B 0A FB | 	rdlong	local01, objptr wz
07624     1C 0E 86 F1 | 	sub	objptr, #28
07628     01 2A 66 A6 |  if_e	neg	result1, #1
0762c     2C 00 90 AD |  if_e	jmp	#LR__0432
07630                 | '         return getcf(__this);
07630     1C 0E 06 F1 | 	add	objptr, #28
07634     07 6B 02 FB | 	rdlong	local01, objptr
07638     1C 0E 86 F1 | 	sub	objptr, #28
0763c     35 6D 02 FB | 	rdlong	local02, local01
07640     04 6A 06 F1 | 	add	local01, #4
07644     35 6F 02 FB | 	rdlong	local03, local01
07648     07 5D 02 F6 | 	mov	arg01, objptr
0764c     07 71 02 F6 | 	mov	local04, objptr
07650     36 0F 02 F6 | 	mov	objptr, local02
07654     2D 6E 62 FD | 	call	local03
07658     38 0F 02 F6 | 	mov	objptr, local04
0765c                 | LR__0432
0765c     AF F0 03 F6 | 	mov	ptra, fp
07660     BF 00 A0 FD | 	call	#popregs_
07664                 | __struct__s_vfs_file_t_getchar_ret
07664     2D 00 64 FD | 	ret
07668                 | 
07668                 | __struct___bas_wrap_sender_tx
07668     04 5A 05 F6 | 	mov	COUNT_, #4
0766c     B0 00 A0 FD | 	call	#pushregs_
07670     07 6B 02 FB | 	rdlong	local01, objptr
07674     35 6D 02 FB | 	rdlong	local02, local01
07678     04 6A 06 F1 | 	add	local01, #4
0767c     35 6F 02 FB | 	rdlong	local03, local01
07680     07 71 02 F6 | 	mov	local04, objptr
07684     36 0F 02 F6 | 	mov	objptr, local02
07688     2D 6E 62 FD | 	call	local03
0768c     38 0F 02 F6 | 	mov	objptr, local04
07690     01 2A 06 F6 | 	mov	result1, #1
07694     AF F0 03 F6 | 	mov	ptra, fp
07698     BF 00 A0 FD | 	call	#popregs_
0769c                 | __struct___bas_wrap_sender_tx_ret
0769c     2D 00 64 FD | 	ret
076a0                 | 
076a0                 | LR__0433
076a0     20 21 21 21 
076a4     20 63 6F 72 
076a8     72 75 70 74 
076ac     65 64 20 68 
076b0     65 61 70 3F 
076b4     3F 3F 20 21 
076b8     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
076bb     00          | 	byte	0
076bc                 | LR__0434
076bc     20 21 21 21 
076c0     20 6F 75 74 
076c4     20 6F 66 20 
076c8     68 65 61 70 
076cc     20 6D 65 6D 
076d0     6F 72 79 20 
076d4     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
076d8     00          | 	byte	0
076d9                 | LR__0435
076d9     20 21 21 21 
076dd     20 63 6F 72 
076e1     72 75 70 74 
076e5     65 64 20 68 
076e9     65 61 70 20 
076ed     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
076f1     00          | 	byte	0
076f2                 | LR__0436
076f2     20          | 	byte	" "
076f3     00          | 	byte	0
076f4                 | LR__0437
076f4     73 61 6D 70 
076f8     6C 65 73 20 
076fc     6D 6F 64 75 
07700     6C 65       | 	byte	"samples module"
07702     00          | 	byte	0
07703     00          | 	alignl
07704                 | _dat_
07704     6C 61 6E 64 
07708     20 6F 66 20 
0770c     73 68 61 64 
07710     6F 77 73 00 | module file "../../../mod/lshadows.mod"
07714     00 00 00 00 
07718     73 74 2D 35 
0771c     35 3A 61 2D 
07720     43 50 54 4E | 	byte	$00, $00, $00, $00, $73, $74, $2d, $35, $35, $3a, $61, $2d, $43, $50, $54, $4e
07724     53 74 72 69 
07728     6E 67 73 31 
0772c     00 00 08 62 
07730     00 18 02 A2 | 	byte	$53, $74, $72, $69, $6e, $67, $73, $31, $00, $00, $08, $62, $00, $18, $02, $a2
07734     05 C0 73 74 
07738     2D 35 35 3A 
0773c     61 2D 47 75 
07740     69 74 61 72 | 	byte	$05, $c0, $73, $74, $2d, $35, $35, $3a, $61, $2d, $47, $75, $69, $74, $61, $72
07744     32 00 00 00 
07748     00 00 00 00 
0774c     17 D3 00 2B 
07750     00 00 00 01 | 	byte	$32, $00, $00, $00, $00, $00, $00, $00, $17, $d3, $00, $2b, $00, $00, $00, $01
07754     73 74 2D 35 
07758     35 3A 61 2D 
0775c     42 61 63 6B 
07760     67 72 6F 75 | 	byte	$73, $74, $2d, $35, $35, $3a, $61, $2d, $42, $61, $63, $6b, $67, $72, $6f, $75
07764     6E 64 00 00 
07768     00 00 12 F0 
0776c     00 12 02 B8 
07770     0F 50 73 74 | 	byte	$6e, $64, $00, $00, $00, $00, $12, $f0, $00, $12, $02, $b8, $0f, $50, $73, $74
07774     2D 35 35 3A 
07778     61 2D 6D 6F 
0777c     62 79 70 69 
07780     61 6E 6F 00 | 	byte	$2d, $35, $35, $3a, $61, $2d, $6d, $6f, $62, $79, $70, $69, $61, $6e, $6f, $00
07784     00 00 00 00 
07788     41 EB 00 14 
0778c     00 00 00 01 
07790     00 00 00 00 | 	byte	$00, $00, $00, $00, $41, $eb, $00, $14, $00, $00, $00, $01, $00, $00, $00, $00
07794     00 00 00 00 
07798     00 00 00 00 
0779c     00 00 00 00 
077a0     00 00 00 00 
077a4     00 00 00 00 
077a8     00 00 00 00 
077ac     00          | 	byte	$00[25]
077ad     01 73 74 2D 
077b1     35 35 3A 61 
077b5     2D 62 61 73 
077b9     73 64 72 75 | 	byte	$01, $73, $74, $2d, $35, $35, $3a, $61, $2d, $62, $61, $73, $73, $64, $72, $75
077bd     6D 32 00 00 
077c1     00 00 00 0D 
077c5     21 00 40 00 
077c9     00 00 01 73 | 	byte	$6d, $32, $00, $00, $00, $00, $00, $0d, $21, $00, $40, $00, $00, $00, $01, $73
077cd     74 2D 35 35 
077d1     3A 61 2D 68 
077d5     69 67 68 68 
077d9     61 74 31 00 | 	byte	$74, $2d, $35, $35, $3a, $61, $2d, $68, $69, $67, $68, $68, $61, $74, $31, $00
077dd     00 00 00 00 
077e1     00          | 	byte	$00[5]
077e2     03 B6 00 25 
077e6     00 00 00 01 
077ea     73 74 2D 35 
077ee     35 3A 61 2D | 	byte	$03, $b6, $00, $25, $00, $00, $00, $01, $73, $74, $2d, $35, $35, $3a, $61, $2d
077f2     6C 6F 6E 67 
077f6     68 69 68 61 
077fa     74 00 00 00 
077fe     00 00 10 4E | 	byte	$6c, $6f, $6e, $67, $68, $69, $68, $61, $74, $00, $00, $00, $00, $00, $10, $4e
07802     00 2B 00 00 
07806     00 01 73 74 
0780a     2D 35 35 3A 
0780e     61 2D 73 6E | 	byte	$00, $2b, $00, $00, $00, $01, $73, $74, $2d, $35, $35, $3a, $61, $2d, $73, $6e
07812     61 72 65 31 
07816     00 00 00 00 
0781a     00 00 00 00 
0781e     10 3D 00 40 | 	byte	$61, $72, $65, $31, $00, $00, $00, $00, $00, $00, $00, $00, $10, $3d, $00, $40
07822     00 00 00 01 
07826     00 00 00 00 
0782a     00 00 00 00 
0782e     00 00 00 00 | 	byte	$00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07832     00 00 00 00 
07836     00 00 00 00 
0783a     00 00 00 00 
0783e     00 00 00 00 
07842     00          | 	byte	$00[17]
07843     01 00 00 00 
07847     00 00 00 00 
0784b     00 00 00 00 
0784f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07853     00 00 00 00 
07857     00 00 00 00 
0785b     00 00 00 00 
0785f     00 00       | 	byte	$00[14]
07861     01 00 00 00 
07865     00 00 00 00 
07869     00 00 00 00 
0786d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07871     00 00 00 00 
07875     00 00 00 00 
07879     00 00 00 00 
0787d     00 00       | 	byte	$00[14]
0787f     01 00 00 00 
07883     00 00 00 00 
07887     00 00 00 00 
0788b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0788f     00 00 00 00 
07893     00 00 00 00 
07897     00 00 00 00 
0789b     00 00       | 	byte	$00[14]
0789d     01 00 00 00 
078a1     00 00 00 00 
078a5     00 00 00 00 
078a9     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078ad     00 00 00 00 
078b1     00 00 00 00 
078b5     00 00 00 00 
078b9     00 00       | 	byte	$00[14]
078bb     01 00 00 00 
078bf     00 00 00 00 
078c3     00 00 00 00 
078c7     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078cb     00 00 00 00 
078cf     00 00 00 00 
078d3     00 00 00 00 
078d7     00 00       | 	byte	$00[14]
078d9     01 00 00 00 
078dd     00 00 00 00 
078e1     00 00 00 00 
078e5     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
078e9     00 00 00 00 
078ed     00 00 00 00 
078f1     00 00 00 00 
078f5     00 00       | 	byte	$00[14]
078f7     01 00 00 00 
078fb     00 00 00 00 
078ff     00 00 00 00 
07903     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07907     00 00 00 00 
0790b     00 00 00 00 
0790f     00 00 00 00 
07913     00 00       | 	byte	$00[14]
07915     01 00 00 00 
07919     00 00 00 00 
0791d     00 00 00 00 
07921     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07925     00 00 00 00 
07929     00 00 00 00 
0792d     00 00 00 00 
07931     00 00       | 	byte	$00[14]
07933     01 00 00 00 
07937     00 00 00 00 
0793b     00 00 00 00 
0793f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07943     00 00 00 00 
07947     00 00 00 00 
0794b     00 00 00 00 
0794f     00 00       | 	byte	$00[14]
07951     01 00 00 00 
07955     00 00 00 00 
07959     00 00 00 00 
0795d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07961     00 00 00 00 
07965     00 00 00 00 
07969     00 00 00 00 
0796d     00 00       | 	byte	$00[14]
0796f     01 00 00 00 
07973     00 00 00 00 
07977     00 00 00 00 
0797b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0797f     00 00 00 00 
07983     00 00 00 00 
07987     00 00 00 00 
0798b     00 00       | 	byte	$00[14]
0798d     01 00 00 00 
07991     00 00 00 00 
07995     00 00 00 00 
07999     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0799d     00 00 00 00 
079a1     00 00 00 00 
079a5     00 00 00 00 
079a9     00 00       | 	byte	$00[14]
079ab     01 00 00 00 
079af     00 00 00 00 
079b3     00 00 00 00 
079b7     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079bb     00 00 00 00 
079bf     00 00 00 00 
079c3     00 00 00 00 
079c7     00 00       | 	byte	$00[14]
079c9     01 00 00 00 
079cd     00 00 00 00 
079d1     00 00 00 00 
079d5     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079d9     00 00 00 00 
079dd     00 00 00 00 
079e1     00 00 00 00 
079e5     00 00       | 	byte	$00[14]
079e7     01 00 00 00 
079eb     00 00 00 00 
079ef     00 00 00 00 
079f3     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
079f7     00 00 00 00 
079fb     00 00 00 00 
079ff     00 00 00 00 
07a03     00 00       | 	byte	$00[14]
07a05     01 00 00 00 
07a09     00 00 00 00 
07a0d     00 00 00 00 
07a11     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a15     00 00 00 00 
07a19     00 00 00 00 
07a1d     00 00 00 00 
07a21     00 00       | 	byte	$00[14]
07a23     01 00 00 00 
07a27     00 00 00 00 
07a2b     00 00 00 00 
07a2f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a33     00 00 00 00 
07a37     00 00 00 00 
07a3b     00 00 00 00 
07a3f     00 00       | 	byte	$00[14]
07a41     01 00 00 00 
07a45     00 00 00 00 
07a49     00 00 00 00 
07a4d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a51     00 00 00 00 
07a55     00 00 00 00 
07a59     00 00 00 00 
07a5d     00 00       | 	byte	$00[14]
07a5f     01 00 00 00 
07a63     00 00 00 00 
07a67     00 00 00 00 
07a6b     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a6f     00 00 00 00 
07a73     00 00 00 00 
07a77     00 00 00 00 
07a7b     00 00       | 	byte	$00[14]
07a7d     01 00 00 00 
07a81     00 00 00 00 
07a85     00 00 00 00 
07a89     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07a8d     00 00 00 00 
07a91     00 00 00 00 
07a95     00 00 00 00 
07a99     00 00       | 	byte	$00[14]
07a9b     01 00 00 00 
07a9f     00 00 00 00 
07aa3     00 00 00 00 
07aa7     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07aab     00 00 00 00 
07aaf     00 00 00 00 
07ab3     00 00 00 00 
07ab7     00 00       | 	byte	$00[14]
07ab9     01 20 00 00 
07abd     01 02 03 04 
07ac1     05 06 07 08 
07ac5     09 0A 0B 0C | 	byte	$01, $20, $00, $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $0a, $0b, $0c
07ac9     0D 06 07 08 
07acd     09 0A 0B 0C 
07ad1     0D 16 17 18 
07ad5     19 0A 0B 0C | 	byte	$0d, $06, $07, $08, $09, $0a, $0b, $0c, $0d, $16, $17, $18, $19, $0a, $0b, $0c
07ad9     0D 1E 1F 00 
07add     00 00 00 00 
07ae1     00 00 00 00 
07ae5     00 00 00 00 | 	byte	$0d, $1e, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ae9     00 00 00 00 
      ...             
07b35     00 00 00 00 
07b39     00 00 00    | 	byte	$00[83]
07b3c     4D 2E 4B 2E 
07b40     02 1A 3C 00 
07b44     01 FC 1C 00 
07b48     01 FC 1C 01 | 	byte	$4d, $2e, $4b, $2e, $02, $1a, $3c, $00, $01, $fc, $1c, $00, $01, $fc, $1c, $01
07b4c     00 00 0F 07 
07b50     00 00 0C 01 
07b54     00 00 0C 01 
07b58     00 00 0C 02 | 	byte	$00, $00, $0f, $07, $00, $00, $0c, $01, $00, $00, $0c, $01, $00, $00, $0c, $02
07b5c     00 00 00 00 
07b60     00 00       | 	byte	$00[6]
07b62     0C 02 00 00 
07b66     0C 02 00 00 
07b6a     0C 03 00 00 
07b6e     00 00 00 00 | 	byte	$0c, $02, $00, $00, $0c, $02, $00, $00, $0c, $03, $00, $00, $00, $00, $00, $00
07b72     0C 03 00 00 
07b76     0C 03 00 00 
07b7a     0C 04 00 00 
07b7e     00 00 00 00 | 	byte	$0c, $03, $00, $00, $0c, $03, $00, $00, $0c, $04, $00, $00, $00, $00, $00, $00
07b82     0C 04 00 00 
07b86     0C 04 00 00 
07b8a     0C 05 00 00 
07b8e     00 00 00 00 | 	byte	$0c, $04, $00, $00, $0c, $04, $00, $00, $0c, $05, $00, $00, $00, $00, $00, $00
07b92     0C 05 00 00 
07b96     0C 05 00 00 
07b9a     0C 06 00 00 
07b9e     00 00 00 00 | 	byte	$0c, $05, $00, $00, $0c, $05, $00, $00, $0c, $06, $00, $00, $00, $00, $00, $00
07ba2     0C 06 00 00 
07ba6     0C 06 00 00 
07baa     0C 07 00 00 
07bae     00 00 00 00 | 	byte	$0c, $06, $00, $00, $0c, $06, $00, $00, $0c, $07, $00, $00, $00, $00, $00, $00
07bb2     0C 07 00 00 
07bb6     0C 07 00 00 
07bba     0C 08 00 00 
07bbe     00 00 00 00 | 	byte	$0c, $07, $00, $00, $0c, $07, $00, $00, $0c, $08, $00, $00, $00, $00, $00, $00
07bc2     0C 08 00 00 
07bc6     0C 08 00 00 
07bca     0C 09 00 00 
07bce     00 00 00 00 | 	byte	$0c, $08, $00, $00, $0c, $08, $00, $00, $0c, $09, $00, $00, $00, $00, $00, $00
07bd2     0C 09 00 00 
07bd6     0C 09 00 00 
07bda     0C 0A 00 00 
07bde     00 00 00 00 | 	byte	$0c, $09, $00, $00, $0c, $09, $00, $00, $0c, $0a, $00, $00, $00, $00, $00, $00
07be2     0C 0A 00 00 
07be6     0C 0A 00 00 
07bea     0C 0B 00 00 
07bee     00 00 00 00 | 	byte	$0c, $0a, $00, $00, $0c, $0a, $00, $00, $0c, $0b, $00, $00, $00, $00, $00, $00
07bf2     0C 0B 00 00 
07bf6     0C 0B 00 00 
07bfa     0C 0C 00 00 
07bfe     00 00 00 00 | 	byte	$0c, $0b, $00, $00, $0c, $0b, $00, $00, $0c, $0c, $00, $00, $00, $00, $00, $00
07c02     0C 0C 00 00 
07c06     0C 0C 00 00 
07c0a     0C 0D 00 00 
07c0e     00 00 00 00 | 	byte	$0c, $0c, $00, $00, $0c, $0c, $00, $00, $0c, $0d, $00, $00, $00, $00, $00, $00
07c12     0C 0D 00 00 
07c16     0C 0D 00 00 
07c1a     0C 0E 00 00 
07c1e     00 00 00 00 | 	byte	$0c, $0d, $00, $00, $0c, $0d, $00, $00, $0c, $0e, $00, $00, $00, $00, $00, $00
07c22     0C 0E 00 00 
07c26     0C 0E 00 00 
07c2a     0C 0F 00 00 
07c2e     00 00 00 00 | 	byte	$0c, $0e, $00, $00, $0c, $0e, $00, $00, $0c, $0f, $00, $00, $00, $00, $00, $00
07c32     0C 0F 00 00 
07c36     0C 0F 00 00 
07c3a     00 00 00 00 
07c3e     00 00 00 00 | 	byte	$0c, $0f, $00, $00, $0c, $0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c42     0C 10 00 00 
07c46     0C 10 02 FA 
07c4a     10 00 00 00 
07c4e     00 00 00 00 | 	byte	$0c, $10, $00, $00, $0c, $10, $02, $fa, $10, $00, $00, $00, $00, $00, $00, $00
07c52     0C 11 00 00 
07c56     0C 11 00 00 
07c5a     00 00 00 00 
07c5e     00 00 00 00 | 	byte	$0c, $11, $00, $00, $0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c62     00 00 00 00 
07c66     0C 12 00 00 
07c6a     00 00 00 00 
07c6e     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $12, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c72     00 00 00 00 
07c76     0C 13 00 00 
07c7a     00 00 00 00 
07c7e     00 00 01 AC | 	byte	$00, $00, $00, $00, $0c, $13, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac
07c82     30 00 00 00 
07c86     0C 14 00 00 
07c8a     00 00 00 00 
07c8e     00 00 00 00 | 	byte	$30, $00, $00, $00, $0c, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07c92     00 00 00 00 
07c96     0C 15 00 00 
07c9a     00 00 00 00 
07c9e     00 00 00 00 | 	byte	$00, $00, $00, $00, $0c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ca2     00 00 00 00 
      ...             
07cfa     00 00 00 00 
07cfe     00 00       | 	byte	$00[94]
07d00     01 E0 30 00 
07d04     00 00 00 00 
07d08     02 A6 10 00 
07d0c     00 00 00 00 | 	byte	$01, $e0, $30, $00, $00, $00, $00, $00, $02, $a6, $10, $00, $00, $00, $00, $00
07d10     00 00 00 00 
      ...             
07d38     00 00 00 00 
07d3c     00 00 00 00 | 	byte	$00[48]
07d40     01 68 30 00 
07d44     00 00 00 00 
07d48     02 5C 10 00 
07d4c     00 00 00 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $02, $5c, $10, $00, $00, $00, $00, $00
07d50     00 00 00 00 
      ...             
07e38     00 00 00 00 
07e3c     00 00 00 00 | 	byte	$00[240]
07e40     01 0D 30 00 
07e44     00 00 00 00 
07e48     02 FA 10 00 
07e4c     00 00 00 00 | 	byte	$01, $0d, $30, $00, $00, $00, $00, $00, $02, $fa, $10, $00, $00, $00, $00, $00
07e50     00 00 00 00 
      ...             
07e9c     00 00 00 00 
07ea0     00 00       | 	byte	$00[82]
07ea2     0C 11 00 00 
07ea6     00 00 00 00 
07eaa     00 00 00 00 
07eae     00 00 00 00 | 	byte	$0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07eb2     0C 11 00 00 
07eb6     00 00 00 00 
07eba     00 00 00 00 
07ebe     00 00 00 00 | 	byte	$0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ec2     0C 09 00 00 
07ec6     00 00 00 00 
07eca     00 00 00 00 
07ece     00 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ed2     0C 09 00 00 
07ed6     00 00 00 00 
07eda     00 00 00 00 
07ede     00 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ee2     0C 08 00 00 
07ee6     00 00 00 00 
07eea     00 00 00 00 
07eee     00 00 00 00 | 	byte	$0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ef2     0C 08 00 00 
07ef6     00 00 00 00 
07efa     00 00 00 00 
07efe     00 00 00 00 | 	byte	$0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07f02     0C 07 00 00 
07f06     00 00 00 00 
07f0a     00 00 01 C5 
07f0e     20 00 00 00 | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
07f12     0C 07 00 00 
07f16     00 00 00 00 
07f1a     00 00 00 00 
07f1e     00 00 00 00 | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07f22     0C 04 00 00 
07f26     00 00 00 00 
07f2a     00 00 00 00 
07f2e     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07f32     0C 04 00 00 
07f36     00 00 00 00 
07f3a     00 00 00 00 
07f3e     00 00 02 1A | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $1a
07f42     30 00 01 FC 
07f46     10 00 01 FC 
07f4a     1C 03 01 53 
07f4e     20 00 00 00 | 	byte	$30, $00, $01, $fc, $10, $00, $01, $fc, $1c, $03, $01, $53, $20, $00, $00, $00
07f52     00 00 00 00 
      ...             
07f76     00 00 00 00 
07f7a     00 00 00 00 | 	byte	$00[44]
07f7e     0A 05 00 00 
07f82     00 00 00 00 
07f86     00 00 00 00 
07f8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07f8e     00 00 00 00 
      ...             
07fa6     00 00 00 00 
07faa     00 00       | 	byte	$00[30]
07fac     01 53 20 00 
07fb0     00 00 00 00 
07fb4     00 00 00 00 
07fb8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07fbc     00 00 00 00 
07fc0     00 00 00 00 
07fc4     00 00 00 00 
07fc8     00 00 00 00 
07fcc     00          | 	byte	$00[17]
07fcd     AA 20 00 00 
07fd1     00 00 00 00 
07fd5     00 00 00 00 
07fd9     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07fdd     00 00 00 00 
07fe1     00 00 00 00 
07fe5     00 00 00 00 
07fe9     00 00 00    | 	byte	$00[15]
07fec     01 53 20 00 
07ff0     00 00 00 00 
07ff4     00 00 00 00 
07ff8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
07ffc     00 00 00 00 
08000     00 00 00 00 
08004     00 00 00 00 
08008     00 00 00 00 
0800c     00 00       | 	byte	$00[18]
0800e     0A 05 00 00 
08012     00 00 00 00 
08016     00 00 00 00 
0801a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0801e     00 00 00 00 
08022     00 00 00 00 
08026     00 00 00 00 
0802a     00 00       | 	byte	$00[14]
0802c     01 53 20 00 
08030     00 00 00 00 
08034     00 00 00 00 
08038     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0803c     00 00 00 00 
08040     00 00 00 00 
08044     00 00 00 00 | 	byte	$00[12]
08048     02 FA 10 00 
0804c     01 FC 20 00 
08050     00 00 00 00 
08054     00 00 00 00 | 	byte	$02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
08058     00 00 00 00 
      ...             
08078     00 00 00 00 
0807c     00 00       | 	byte	$00[38]
0807e     0A 05 01 AC 
08082     30 00 00 00 
08086     00 00 00 00 
0808a     00 00 00 00 | 	byte	$0a, $05, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0808e     00 00 00 00 
      ...             
080a6     00 00 00 00 
080aa     00 00       | 	byte	$00[30]
080ac     01 FC 20 00 
080b0     00 00 00 00 
080b4     00 00 00 00 
080b8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080bc     00 00 00 00 
080c0     00 00 00 00 
080c4     00 00 00 00 
080c8     00 00 00 00 
080cc     00          | 	byte	$00[17]
080cd     FE 20 00 00 
080d1     00 00 00 00 
080d5     00 00 00 00 
080d9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080dd     00 00 00 00 
080e1     00 00 00 00 
080e5     00 00 00 00 
080e9     00 00 00    | 	byte	$00[15]
080ec     01 FC 20 00 
080f0     00 00 00 00 
080f4     00 00 00 00 
080f8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
080fc     00 00 00 00 
08100     01 E0 30 00 
08104     00 00 00 00 
08108     02 A6 10 00 | 	byte	$00, $00, $00, $00, $01, $e0, $30, $00, $00, $00, $00, $00, $02, $a6, $10, $00
0810c     00 00 00 00 
08110     00 00 00 00 
08114     00 00 00 00 
08118     00 00 00 00 
0811c     00 00       | 	byte	$00[18]
0811e     0A 05 00 00 
08122     00 00 00 00 
08126     00 00 00 00 
0812a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0812e     20 00 00 00 
08132     00 00 00 00 
08136     00 00 00 00 
0813a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0813e     00 00 01 68 
08142     30 00 00 00 
08146     00 00 02 5C 
0814a     10 00 01 94 | 	byte	$00, $00, $01, $68, $30, $00, $00, $00, $00, $00, $02, $5c, $10, $00, $01, $94
0814e     20 00 00 00 
08152     00 00 00 00 
08156     00 00 00 00 
0815a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0815e     00 00 00 00 
      ...             
08176     00 00 00 00 
0817a     00 00 00 00 | 	byte	$00[32]
0817e     0A 05 00 00 
08182     00 00 00 00 
08186     00 00 00 00 
0818a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0818e     00 00 00 00 
      ...             
081a6     00 00 00 00 
081aa     00 00       | 	byte	$00[30]
081ac     01 94 20 00 
081b0     00 00 00 00 
081b4     00 00 00 00 
081b8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
081bc     00 00 00 00 
081c0     00 00 00 00 
081c4     00 00 00 00 
081c8     00 00 00 00 
081cc     00          | 	byte	$00[17]
081cd     CA 20 00 00 
081d1     00 00 00 00 
081d5     00 00 00 00 
081d9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
081dd     00 00 00 00 
081e1     00 00 00 00 
081e5     00 00 00 00 
081e9     00 00 00    | 	byte	$00[15]
081ec     01 94 20 00 
081f0     00 00 00 00 
081f4     00 00 00 00 
081f8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
081fc     00 00 00 00 
      ...             
08218     00 00 00 00 
0821c     00 00       | 	byte	$00[34]
0821e     0A 05 00 00 
08222     00 00 00 00 
08226     00 00 00 00 
0822a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0822e     20 00 00 00 
08232     00 00 00 00 
08236     00 00 00 00 
0823a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0823e     00 00 01 0D 
08242     30 00 00 00 
08246     00 00 02 FA 
0824a     10 00 01 FC | 	byte	$00, $00, $01, $0d, $30, $00, $00, $00, $00, $00, $02, $fa, $10, $00, $01, $fc
0824e     20 00 00 00 
08252     00 00 00 00 
08256     00 00 00 00 
0825a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0825e     00 00 00 00 
      ...             
08276     00 00 00 00 
0827a     00 00 00 00 | 	byte	$00[32]
0827e     0A 05 00 00 
08282     00 00 00 00 
08286     00 00 00 00 
0828a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0828e     00 00 00 00 
08292     00 00 00 00 
08296     00 00 00 00 
0829a     00 00 00 00 
0829e     00 00 00 00 | 	byte	$00[20]
082a2     0C 11 00 00 
082a6     00 00 00 00 
082aa     00 00 01 FC 
082ae     20 00 00 00 | 	byte	$0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
082b2     0C 11 00 00 
082b6     00 00 00 00 
082ba     00 00 00 00 
082be     00 00 00 00 | 	byte	$0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
082c2     0C 09 00 00 
082c6     00 00 00 00 
082ca     00 00 00 FE 
082ce     20 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00
082d2     0C 09 00 00 
082d6     00 00 00 00 
082da     00 00 00 00 
082de     00 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
082e2     0C 08 00 00 
082e6     00 00 00 00 
082ea     00 00 01 FC 
082ee     20 00 00 00 | 	byte	$0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
082f2     0C 08 00 00 
082f6     00 00 00 00 
082fa     00 00 00 00 
082fe     00 00 00 00 | 	byte	$0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08302     0C 07 00 00 
08306     00 00 00 00 
0830a     00 00 00 00 
0830e     00 00 00 00 | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08312     0C 07 00 00 
08316     00 00 00 00 
0831a     00 00 00 00 
0831e     0A 05 00 00 | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
08322     0C 04 00 00 
08326     00 00 00 00 
0832a     00 00 01 FC 
0832e     20 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
08332     0C 04 00 00 
08336     00 00 00 00 
0833a     00 00 00 00 
0833e     00 00 00 F0 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0
08342     40 00 01 FC 
08346     10 00 01 FC 
0834a     1C 03 01 53 
0834e     20 00 00 00 | 	byte	$40, $00, $01, $fc, $10, $00, $01, $fc, $1c, $03, $01, $53, $20, $00, $00, $00
08352     00 00 00 00 
      ...             
08376     00 00 00 00 
0837a     00 00 00 00 | 	byte	$00[44]
0837e     0A 05 00 00 
08382     00 00 00 00 
08386     00 00 00 00 
0838a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0838e     00 00 00 00 
      ...             
083a6     00 00 00 00 
083aa     00 00       | 	byte	$00[30]
083ac     01 53 20 00 
083b0     00 00 00 00 
083b4     00 00 00 00 
083b8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083bc     00 00 00 00 
083c0     00 00 00 00 
083c4     00 00 00 00 
083c8     00 00 00 00 
083cc     00          | 	byte	$00[17]
083cd     AA 20 00 00 
083d1     00 00 00 00 
083d5     00 00 00 00 
083d9     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083dd     00 00 00 00 
083e1     00 00 00 00 
083e5     00 00 00 00 
083e9     00 00 00    | 	byte	$00[15]
083ec     01 53 20 00 
083f0     00 00 00 00 
083f4     00 00 00 00 
083f8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083fc     00 00 00 00 
08400     00          | 	byte	$00[5]
08401     F0 40 00 00 
08405     00 00 00 00 
08409     00 00 00 00 
0840d     00 00 00 00 | 	byte	$f0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08411     00 00 00 00 
08415     00 00 00 00 
08419     00 00 00 00 
0841d     00          | 	byte	$00[13]
0841e     0A 05 00 E2 
08422     40 00 00 00 
08426     00 00 00 00 
0842a     00 00 01 53 | 	byte	$0a, $05, $00, $e2, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53
0842e     20 00 00 00 
08432     00 00 00 00 
08436     00 00 00 00 
0843a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0843e     00 00 00 00 
08442     00 00 00 00 
08446     00 00       | 	byte	$00[10]
08448     02 FA 10 00 
0844c     01 FC 20 00 
08450     00 00 00 00 
08454     00 00 00 00 | 	byte	$02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
08458     00 00 00 00 
0845c     00 00 00 00 
08460     00          | 	byte	$00[9]
08461     F0 40 00 00 
08465     00 00 00 00 
08469     00 00 00 00 
0846d     00 00 00 00 | 	byte	$f0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08471     00 00 00 00 
08475     00 00 00 00 
08479     00 00 00 00 
0847d     00          | 	byte	$00[13]
0847e     0A 05 00 00 
08482     00 00 00 00 
08486     00 00 00 00 
0848a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0848e     00 00 00 00 
08492     00 00 00 00 
08496     00 00 00 00 
0849a     00 00 00 00 
0849e     00 00       | 	byte	$00[18]
084a0     01 0D 40 00 
084a4     00 00 00 00 
084a8     00 00 00 00 
084ac     01 FC 20 00 | 	byte	$01, $0d, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00
084b0     00 00 00 00 
      ...             
084c8     00 00 00 00 
084cc     00          | 	byte	$00[29]
084cd     FE 20 00 00 
084d1     00 00 00 00 
084d5     00 00 00 00 
084d9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084dd     00 00 00 01 
084e1     2E 40 00 00 
084e5     00 00 00 00 
084e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $2e, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
084ed     FC 20 00 00 
084f1     00 00 00 00 
084f5     00 00 00 00 
084f9     00 00 00 00 | 	byte	$fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084fd     00 00 00 01 
08501     0D 40 00 00 
08505     00 00 00 02 
08509     A6 10 00 00 | 	byte	$00, $00, $00, $01, $0d, $40, $00, $00, $00, $00, $00, $02, $a6, $10, $00, $00
0850d     00 00 00 00 
08511     00 00 00 00 
08515     00 00 00 00 
08519     00 00 00 00 
0851d     00          | 	byte	$00[17]
0851e     0A 05 01 2E 
08522     40 00 00 00 
08526     00 00 00 00 
0852a     00 00 01 C5 | 	byte	$0a, $05, $01, $2e, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0852e     20 00 00 00 
08532     00 00 00 00 
08536     00 00 00 00 
0853a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0853e     00 00 01 0D 
08542     40 00 00 00 
08546     00 00 02 5C 
0854a     10 00 01 94 | 	byte	$00, $00, $01, $0d, $40, $00, $00, $00, $00, $00, $02, $5c, $10, $00, $01, $94
0854e     20 00 00 00 
08552     00 00 00 00 
08556     00 00 00 00 
0855a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0855e     00 00 00 F0 
08562     40 00 00 00 
08566     00 00 00 00 
0856a     00 00 00 00 | 	byte	$00, $00, $00, $f0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0856e     00 00 00 00 
08572     00 00 00 00 
08576     00 00 00 00 
0857a     00 00 00 00 | 	byte	$00[16]
0857e     0A 05 00 00 
08582     00 00 00 00 
08586     00 00 00 00 
0858a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0858e     00 00 00 00 
      ...             
085a6     00 00 00 00 
085aa     00 00       | 	byte	$00[30]
085ac     01 94 20 00 
085b0     00 00 00 00 
085b4     00 00 00 00 
085b8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085bc     00 00 00 00 
085c0     00 00 00 00 
085c4     00 00 00 00 
085c8     00 00 00 00 
085cc     00          | 	byte	$00[17]
085cd     CA 20 00 00 
085d1     00 00 00 00 
085d5     00 00 00 00 
085d9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085dd     00 00 00 00 
085e1     00 00 00 00 
085e5     00 00 00 00 
085e9     00 00 00    | 	byte	$00[15]
085ec     01 94 20 00 
085f0     00 00 00 00 
085f4     00 00 00 00 
085f8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085fc     00 00 00 00 
      ...             
08618     00 00 00 00 
0861c     00 00       | 	byte	$00[34]
0861e     0A 05 00 00 
08622     00 00 00 00 
08626     00 00 00 00 
0862a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0862e     20 00 00 00 
08632     00 00 00 00 
08636     00 00 00 00 
0863a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0863e     00 00 01 0D 
08642     3C 00 00 00 
08646     00 00 02 FA 
0864a     10 00 01 FC | 	byte	$00, $00, $01, $0d, $3c, $00, $00, $00, $00, $00, $02, $fa, $10, $00, $01, $fc
0864e     20 00 00 00 
08652     0A 10 00 00 
08656     00 00 00 00 
0865a     00 00 00 00 | 	byte	$20, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0865e     00 00 00 00 
08662     0A 10 00 00 
08666     00 00 00 00 
0866a     00 00 00 00 | 	byte	$00, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0866e     00 00 00 00 
08672     0A 10 00 00 
08676     00 00 00 00 
0867a     00 00 00 00 | 	byte	$00, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0867e     0A 05 00 00 
08682     00 00 00 00 
08686     00 00 00 00 
0868a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0868e     00 00 00 00 
08692     0A 10 00 00 
08696     00 00 00 00 
0869a     00 00 00 00 | 	byte	$00, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0869e     00 00 00 00 
086a2     00 00 00 00 
086a6     00 00 00 00 
086aa     00 00       | 	byte	$00[14]
086ac     01 FC 20 00 
086b0     00 00 00 00 
086b4     00 00 00 00 
086b8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
086bc     00 00 00 00 
086c0     00 00 00 00 
086c4     00 00 00 00 
086c8     00 00 00 00 
086cc     00          | 	byte	$00[17]
086cd     FE 20 00 00 
086d1     00 00 00 00 
086d5     00 00 00 00 
086d9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
086dd     00 00 00 00 
086e1     00          | 	byte	$00[5]
086e2     0A 01 00 00 
086e6     00 00 00 00 
086ea     00 00 01 FC 
086ee     20 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
086f2     00 00 00 00 
086f6     00 00 00 00 
086fa     00 00 00 00 
086fe     00 00 00 00 | 	byte	$00[16]
08702     0A 01 00 00 
08706     00 00 00 00 
0870a     00 00 00 00 
0870e     00 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08712     00 00 00 00 
08716     00 00 00 00 
0871a     00 00 00 00 | 	byte	$00[12]
0871e     0A 05 00 00 
08722     0A 01 00 00 
08726     00 00 00 00 
0872a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0872e     20 00 00 00 
08732     00 00 00 00 
08736     00 00 00 00 
0873a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0873e     00 00 00 F0 
08742     40 00 01 FC 
08746     10 00 01 FC 
0874a     1C 03 01 53 | 	byte	$00, $00, $00, $f0, $40, $00, $01, $fc, $10, $00, $01, $fc, $1c, $03, $01, $53
0874e     20 00 00 00 
08752     00 00 00 00 
08756     00 00 00 00 
0875a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0875e     00 00 00 00 
      ...             
08776     00 00 00 00 
0877a     00 00 00 00 | 	byte	$00[32]
0877e     0A 05 00 00 
08782     00 00 00 00 
08786     00 00 00 00 
0878a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0878e     00 00 00 00 
      ...             
087a6     00 00 00 00 
087aa     00 00       | 	byte	$00[30]
087ac     01 53 20 00 
087b0     00 00 00 00 
087b4     00 00 00 00 
087b8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087bc     00 00 00 00 
087c0     00 00 00 00 
087c4     00 00 00 00 
087c8     00 00 00 00 
087cc     00          | 	byte	$00[17]
087cd     AA 20 00 00 
087d1     00 00 00 00 
087d5     00 00 00 00 
087d9     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087dd     00 00 00 00 
087e1     00 00 00 00 
087e5     00 00 00 00 
087e9     00 00 00    | 	byte	$00[15]
087ec     01 53 20 00 
087f0     00 00 00 00 
087f4     00 00 00 00 
087f8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087fc     00 00 00 00 
08800     00          | 	byte	$00[5]
08801     CA 40 00 00 
08805     00 00 00 00 
08809     00 00 00 00 
0880d     00 00 00 00 | 	byte	$ca, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08811     00 00 00 00 
08815     00 00 00 00 
08819     00 00 00 00 
0881d     00          | 	byte	$00[13]
0881e     0A 05 00 E2 
08822     40 00 00 00 
08826     00 00 00 00 
0882a     00 00 01 53 | 	byte	$0a, $05, $00, $e2, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53
0882e     20 00 00 00 
08832     00 00 00 00 
08836     00 00 00 00 
0883a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0883e     00 00 00 00 
08842     00 00 00 00 
08846     00 00       | 	byte	$00[10]
08848     02 FA 10 00 
0884c     01 FC 20 00 
08850     00 00 00 00 
08854     00 00 00 00 | 	byte	$02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
08858     00 00 00 00 
0885c     00 00 00 00 
08860     00          | 	byte	$00[9]
08861     F0 40 00 00 
08865     00 00 00 00 
08869     00 00 00 00 
0886d     00 00 00 00 | 	byte	$f0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08871     00 00 00 00 
08875     00 00 00 00 
08879     00 00 00 00 
0887d     00          | 	byte	$00[13]
0887e     0A 05 00 00 
08882     00 00 00 00 
08886     00 00 00 00 
0888a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0888e     00 00 00 00 
08892     00 00 00 00 
08896     00 00 00 00 
0889a     00 00 00 00 
0889e     00 00       | 	byte	$00[18]
088a0     01 0D 40 00 
088a4     00 00 00 00 
088a8     00 00 00 00 
088ac     01 FC 20 00 | 	byte	$01, $0d, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00
088b0     00 00 00 00 
      ...             
088c8     00 00 00 00 
088cc     00          | 	byte	$00[29]
088cd     FE 20 00 00 
088d1     00 00 00 00 
088d5     00 00 00 00 
088d9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088dd     00 00 00 01 
088e1     2E 40 00 00 
088e5     00 00 00 00 
088e9     00 00 00 01 | 	byte	$00, $00, $00, $01, $2e, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
088ed     FC 20 00 00 
088f1     00 00 00 00 
088f5     00 00 00 00 
088f9     00 00 00 00 | 	byte	$fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088fd     00 00 00 01 
08901     0D 40 00 00 
08905     00 00 00 02 
08909     A6 10 00 00 | 	byte	$00, $00, $00, $01, $0d, $40, $00, $00, $00, $00, $00, $02, $a6, $10, $00, $00
0890d     00 00 00 00 
08911     00 00 00 00 
08915     00 00 00 00 
08919     00 00 00 00 
0891d     00          | 	byte	$00[17]
0891e     0A 05 01 2E 
08922     40 00 00 00 
08926     00 00 00 00 
0892a     00 00 01 C5 | 	byte	$0a, $05, $01, $2e, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
0892e     20 00 00 00 
08932     00 00 00 00 
08936     00 00 00 00 
0893a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0893e     00 00 00 B4 
08942     40 00 00 00 
08946     00 00 02 5C 
0894a     10 00 01 94 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $00, $00, $00, $02, $5c, $10, $00, $01, $94
0894e     20 00 00 00 
08952     00 00 00 00 
08956     00 00 00 00 
0895a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0895e     00 00 00 00 
      ...             
08976     00 00 00 00 
0897a     00 00 00 00 | 	byte	$00[32]
0897e     0A 05 00 00 
08982     00 00 00 00 
08986     00 00 00 00 
0898a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0898e     00 00 00 00 
      ...             
089a6     00 00 00 00 
089aa     00 00       | 	byte	$00[30]
089ac     01 94 20 00 
089b0     00 00 00 00 
089b4     00 00 00 00 
089b8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089bc     00 00 00 00 
089c0     00 00 00 00 
089c4     00 00 00 00 
089c8     00 00 00 00 
089cc     00          | 	byte	$00[17]
089cd     CA 20 00 00 
089d1     00 00 00 00 
089d5     00 00 00 00 
089d9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089dd     00 00 00 00 
089e1     00 00 00 00 
089e5     00 00 00 00 
089e9     00 00 00    | 	byte	$00[15]
089ec     01 94 20 00 
089f0     00 00 00 00 
089f4     00 00 00 00 
089f8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
089fc     00 00 00 00 
08a00     01 0D 3C 05 
08a04     00 00 00 00 
08a08     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $0d, $3c, $05, $00, $00, $00, $00, $00, $00, $00, $00
08a0c     00 00 00 00 
08a10     00 00       | 	byte	$00[6]
08a12     0A 10 00 00 
08a16     00 00 00 00 
08a1a     00 00 00 00 
08a1e     0A 05 00 00 | 	byte	$0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
08a22     0A 10 00 00 
08a26     00 00 00 00 
08a2a     00 00 01 C5 
08a2e     20 00 00 00 | 	byte	$0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
08a32     0A 10 00 00 
08a36     00 00 00 00 
08a3a     00 00 00 00 
08a3e     00 00 00 F0 | 	byte	$0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0
08a42     30 00 00 00 
08a46     00 00 02 FA 
08a4a     10 00 01 FC 
08a4e     20 00 00 00 | 	byte	$30, $00, $00, $00, $00, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00
08a52     00 00 00 00 
      ...             
08a76     00 00 00 00 
08a7a     00 00 00 00 | 	byte	$00[44]
08a7e     0A 05 00 00 
08a82     00 00 00 00 
08a86     00 00 00 00 
08a8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a8e     00 00 00 00 
      ...             
08aa6     00 00 00 00 
08aaa     00 00       | 	byte	$00[30]
08aac     01 FC 20 00 
08ab0     00 00 00 00 
08ab4     00 00 00 00 
08ab8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08abc     00 00 00 00 
08ac0     00 00 00 00 
08ac4     00 00 00 00 
08ac8     00 00 00 00 
08acc     00          | 	byte	$00[17]
08acd     FE 20 00 00 
08ad1     00 00 00 00 
08ad5     00 00 00 00 
08ad9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08add     00 00 00 00 
08ae1     00          | 	byte	$00[5]
08ae2     0A 01 00 00 
08ae6     00 00 00 00 
08aea     00 00 01 FC 
08aee     20 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
08af2     0A 00 00 00 
08af6     00 00 00 00 
08afa     00 00 00 00 
08afe     00 00 00 00 | 	byte	$0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b02     0A 01 00 00 
08b06     00 00 00 00 
08b0a     00 00 00 00 
08b0e     00 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b12     0A 00 00 00 
08b16     00 00 00 00 
08b1a     00 00 00 00 
08b1e     0A 05 00 00 | 	byte	$0a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
08b22     0A 01 00 00 
08b26     00 00 00 00 
08b2a     00 00 01 C5 
08b2e     20 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
08b32     0A 02 00 00 
08b36     00 00 00 00 
08b3a     00 00 00 00 
08b3e     00 00 00 B4 | 	byte	$0a, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $b4
08b42     40 00 02 5C 
08b46     10 00 01 FC 
08b4a     10 00 01 94 
08b4e     20 00 00 00 | 	byte	$40, $00, $02, $5c, $10, $00, $01, $fc, $10, $00, $01, $94, $20, $00, $00, $00
08b52     00 00 00 00 
      ...             
08b76     00 00 00 00 
08b7a     00 00 00 00 | 	byte	$00[44]
08b7e     0A 05 00 00 
08b82     00 00 00 00 
08b86     00 00 00 00 
08b8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b8e     00 00 00 00 
      ...             
08ba6     00 00 00 00 
08baa     00 00       | 	byte	$00[30]
08bac     01 94 20 00 
08bb0     00 00 00 00 
08bb4     00 00 00 00 
08bb8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bbc     00 00 00 00 
08bc0     00 00 00 00 
08bc4     00 00 00 00 
08bc8     00 00 00 00 
08bcc     00          | 	byte	$00[17]
08bcd     CA 20 00 00 
08bd1     00 00 00 00 
08bd5     00 00 00 00 
08bd9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bdd     00 00 00 00 
08be1     00 00 00 00 
08be5     00 00 00 00 
08be9     00 00 00    | 	byte	$00[15]
08bec     01 94 20 00 
08bf0     00 00 00 00 
08bf4     00 00 00 00 
08bf8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bfc     00 00 00 00 
08c00     00          | 	byte	$00[5]
08c01     97 40 00 00 
08c05     00 00 00 00 
08c09     00 00 00 00 
08c0d     00 00 00 00 | 	byte	$97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c11     00 00 00 00 
08c15     00 00 00 00 
08c19     00 00 00 00 
08c1d     00          | 	byte	$00[13]
08c1e     0A 05 00 87 
08c22     40 00 02 A6 
08c26     10 00 00 00 
08c2a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $02, $a6, $10, $00, $00, $00, $00, $00, $01, $c5
08c2e     20 00 00 00 
08c32     00 00 00 00 
08c36     00 00 00 00 
08c3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c3e     00 00 00 00 
08c42     00 00       | 	byte	$00[6]
08c44     02 FA 10 00 
08c48     00 00 00 00 
08c4c     01 FC 20 00 
08c50     00 00 00 00 | 	byte	$02, $fa, $10, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00
08c54     00 00 00 00 
08c58     00 00 00 00 
08c5c     00 00 00 00 
08c60     00          | 	byte	$00[13]
08c61     97 40 00 00 
08c65     00 00 00 00 
08c69     00 00 00 00 
08c6d     00 00 00 00 | 	byte	$97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c71     00 00 00 00 
      ...             
08c99     00 00 00 00 
08c9d     00          | 	byte	$00[45]
08c9e     0A 05 00 87 
08ca2     40 00 00 00 
08ca6     00 00 00 00 
08caa     00 00 01 FC | 	byte	$0a, $05, $00, $87, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc
08cae     20 00 00 00 
08cb2     00 00 00 00 
08cb6     00 00 00 00 
08cba     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cbe     00 00 00 00 
08cc2     00 00 00 00 
08cc6     00 00 00 00 
08cca     00 00 00    | 	byte	$00[15]
08ccd     FE 20 00 00 
08cd1     00 00 00 00 
08cd5     00 00 00 00 
08cd9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cdd     00 00 00 00 
08ce1     97 40 00 00 
08ce5     00 00 00 00 
08ce9     00 00 00 01 | 	byte	$00, $00, $00, $00, $97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08ced     FC 20 00 00 
08cf1     00 00 00 00 
08cf5     00 00 00 00 
08cf9     00 00 00 00 | 	byte	$fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cfd     00 00 00 00 
08d01     A0 40 00 00 
08d05     00 00 00 00 
08d09     00 00 00 00 | 	byte	$00, $00, $00, $00, $a0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d0d     00 00 00 00 
08d11     00 00 00 00 
08d15     00 00 00 00 
08d19     00 00 00 00 
08d1d     00          | 	byte	$00[17]
08d1e     0A 05 00 97 
08d22     40 00 02 A6 
08d26     10 00 00 00 
08d2a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $02, $a6, $10, $00, $00, $00, $00, $00, $01, $c5
08d2e     20 00 00 00 
08d32     00 00 00 00 
08d36     00 00 00 00 
08d3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d3e     00 00 00 CA 
08d42     40 00 02 5C 
08d46     10 00 00 00 
08d4a     00 00 01 94 | 	byte	$00, $00, $00, $ca, $40, $00, $02, $5c, $10, $00, $00, $00, $00, $00, $01, $94
08d4e     20 00 00 00 
08d52     00 00 00 00 
08d56     00 00 00 00 
08d5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d5e     00 00 00 B4 
08d62     40 00 00 00 
08d66     00 00 00 00 
08d6a     00 00 00 00 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d6e     00 00 00 00 
08d72     00 00 00 00 
08d76     00 00 00 00 
08d7a     00 00 00 00 | 	byte	$00[16]
08d7e     0A 05 00 B4 
08d82     40 00 00 00 
08d86     00 00 00 00 
08d8a     00 00 00 00 | 	byte	$0a, $05, $00, $b4, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d8e     00 00 00 00 
      ...             
08da6     00 00 00 00 
08daa     00 00       | 	byte	$00[30]
08dac     01 94 20 00 
08db0     00 00 00 00 
08db4     00 00 00 00 
08db8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08dbc     00 00 00 00 
08dc0     00 00 00 00 
08dc4     00 00 00 00 
08dc8     00 00 00 00 
08dcc     00          | 	byte	$00[17]
08dcd     CA 20 00 00 
08dd1     00 00 00 00 
08dd5     00 00 00 00 
08dd9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ddd     00 00 00 00 
08de1     00 00 00 00 
08de5     00 00 00 00 
08de9     00 00 00    | 	byte	$00[15]
08dec     01 94 20 00 
08df0     00 00 00 00 
08df4     00 00 00 00 
08df8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08dfc     00 00 00 00 
08e00     00          | 	byte	$00[5]
08e01     CA 40 00 00 
08e05     00 00 00 00 
08e09     00 00 00 00 
08e0d     00 00 00 00 | 	byte	$ca, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e11     00 00 00 00 
08e15     00 00 00 00 
08e19     00 00 00 00 
08e1d     00          | 	byte	$00[13]
08e1e     0A 05 00 B4 
08e22     40 00 00 00 
08e26     00 00 00 00 
08e2a     00 00 01 C5 | 	byte	$0a, $05, $00, $b4, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $c5
08e2e     20 00 00 00 
08e32     00 00 00 00 
08e36     00 00 00 00 
08e3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e3e     00 00 00 E2 
08e42     40 00 01 7D 
08e46     10 00 00 00 
08e4a     00 00 01 FC | 	byte	$00, $00, $00, $e2, $40, $00, $01, $7d, $10, $00, $00, $00, $00, $00, $01, $fc
08e4e     20 00 00 00 
08e52     00 00 00 00 
08e56     00 00 00 00 
08e5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e5e     00 00 00 00 
      ...             
08ea6     00 00 00 00 
08eaa     00 00       | 	byte	$00[78]
08eac     01 FC 20 00 
08eb0     00 00 00 00 
08eb4     00 00 00 00 
08eb8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ebc     00 00 00 00 
08ec0     00 00 00 00 
08ec4     00 00 00 00 
08ec8     00 00 00 00 
08ecc     00          | 	byte	$00[17]
08ecd     FE 20 00 00 
08ed1     00 00 00 00 
08ed5     00 00 00 00 
08ed9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08edd     00 00 00 00 
08ee1     00 00 00 00 
08ee5     00 00 00 00 
08ee9     00 00 00    | 	byte	$00[15]
08eec     01 FC 20 00 
08ef0     00 00 00 00 
08ef4     00 00 00 00 
08ef8     00 00 00 00 | 	byte	$01, $fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08efc     00 00 00 00 
      ...             
08f24     00 00 00 00 
08f28     00 00 00 00 | 	byte	$00[48]
08f2c     01 C5 20 00 
08f30     00 00 00 00 
08f34     00 00 00 00 
08f38     00 00 00 00 | 	byte	$01, $c5, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f3c     00 00 00 00 
08f40     00          | 	byte	$00[5]
08f41     B4 40 00 02 
08f45     5C 10 00 01 
08f49     FC 10 00 01 
08f4d     94 20 00 00 | 	byte	$b4, $40, $00, $02, $5c, $10, $00, $01, $fc, $10, $00, $01, $94, $20, $00, $00
08f51     00 00 00 00 
      ...             
08f79     00 00 00 00 
08f7d     00          | 	byte	$00[45]
08f7e     0A 05 00 00 
08f82     00 00 00 00 
08f86     00 00 00 00 
08f8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f8e     00 00 00 00 
      ...             
08fa6     00 00 00 00 
08faa     00 00       | 	byte	$00[30]
08fac     01 94 20 00 
08fb0     00 00 00 00 
08fb4     00 00 00 00 
08fb8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fbc     00 00 00 00 
08fc0     00 00 00 00 
08fc4     00 00 00 00 
08fc8     00 00 00 00 
08fcc     00          | 	byte	$00[17]
08fcd     CA 20 00 00 
08fd1     00 00 00 00 
08fd5     00 00 00 00 
08fd9     00 00 00 00 | 	byte	$ca, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fdd     00 00 00 00 
08fe1     00 00 00 00 
08fe5     00 00 00 00 
08fe9     00 00 00    | 	byte	$00[15]
08fec     01 94 20 00 
08ff0     00 00 00 00 
08ff4     00 00 00 00 
08ff8     00 00 00 00 | 	byte	$01, $94, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ffc     00 00 00 00 
09000     00          | 	byte	$00[5]
09001     97 40 00 00 
09005     00 00 00 00 
09009     00 00 00 00 
0900d     00 00 00 00 | 	byte	$97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09011     00 00 00 00 
09015     00 00 00 00 
09019     00 00 00 00 
0901d     00          | 	byte	$00[13]
0901e     0A 05 00 87 
09022     40 00 02 A6 
09026     10 00 00 00 
0902a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $02, $a6, $10, $00, $00, $00, $00, $00, $01, $c5
0902e     20 00 00 00 
09032     00 00 00 00 
09036     00 00 00 00 
0903a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0903e     00 00 00 00 
09042     00 00       | 	byte	$00[6]
09044     02 FA 10 00 
09048     00 00 00 00 
0904c     01 FC 20 00 
09050     00 00 00 00 | 	byte	$02, $fa, $10, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00
09054     00 00 00 00 
09058     00 00 00 00 
0905c     00 00 00 00 
09060     00          | 	byte	$00[13]
09061     97 40 00 00 
09065     00 00 00 00 
09069     00 00 00 00 
0906d     00 00 00 00 | 	byte	$97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09071     00 00 00 00 
09075     00 00 00 00 
09079     00 00 00 00 
0907d     00          | 	byte	$00[13]
0907e     0A 05 00 00 
09082     00 00 00 00 
09086     00 00 00 00 
0908a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0908e     00 00 00 00 
09092     00 00 00 00 
09096     00 00 00 00 
0909a     00 00 00 00 
0909e     00 00 00    | 	byte	$00[19]
090a1     A0 40 00 00 
090a5     00 00 00 00 
090a9     00 00 00 01 
090ad     FC 20 00 00 | 	byte	$a0, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
090b1     00 00 00 00 
090b5     00 00 00 00 
090b9     00 00 00 00 
090bd     00 00 00 00 
090c1     00 00 00 00 
090c5     00 00 00 00 
090c9     00 00 00 00 | 	byte	$00[28]
090cd     FE 20 00 00 
090d1     00 00 00 00 
090d5     00 00 00 00 
090d9     00 00 00 00 | 	byte	$fe, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090dd     00 00 00 00 
090e1     97 40 00 00 
090e5     00 00 00 00 
090e9     00 00 00 01 | 	byte	$00, $00, $00, $00, $97, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
090ed     FC 20 00 00 
090f1     00 00 00 00 
090f5     00 00 00 00 
090f9     00 00 00 00 | 	byte	$fc, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090fd     00 00 00 00 
      ...             
09119     00 00 00 00 
0911d     00          | 	byte	$00[33]
0911e     0A 05 00 87 
09122     40 00 02 A6 
09126     10 00 00 00 
0912a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $02, $a6, $10, $00, $00, $00, $00, $00, $01, $c5
0912e     20 00 00 00 
09132     00 00 00 00 
09136     00 00 00 00 
0913a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0913e     00 00 00 97 
09142     40 00 01 FC 
09146     10 00 00 00 
0914a     00 00 01 53 | 	byte	$00, $00, $00, $97, $40, $00, $01, $fc, $10, $00, $00, $00, $00, $00, $01, $53
0914e     20 00 00 00 
09152     00 00 00 00 
09156     00 00 00 00 
0915a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0915e     00 00 00 00 
      ...             
09176     00 00 00 00 
0917a     00 00 00 00 | 	byte	$00[32]
0917e     0A 05 00 00 
09182     00 00 00 00 
09186     00 00 00 00 
0918a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0918e     00 00 00 00 
      ...             
091a6     00 00 00 00 
091aa     00 00       | 	byte	$00[30]
091ac     01 53 20 00 
091b0     00 00 00 00 
091b4     00 00 00 00 
091b8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
091bc     00 00 00 00 
091c0     00 00 00 00 
091c4     00 00 00 00 
091c8     00 00 00 00 
091cc     00          | 	byte	$00[17]
091cd     AA 20 00 00 
091d1     00 00 00 00 
091d5     00 00 00 00 
091d9     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
091dd     00 00 00 00 
091e1     00 00 00 00 
091e5     00 00 00 00 
091e9     00 00 00    | 	byte	$00[15]
091ec     01 53 20 00 
091f0     00 00 00 00 
091f4     00 00 00 00 
091f8     00 00 00 00 | 	byte	$01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
091fc     00 00 00 00 
      ...             
09218     00 00 00 00 
0921c     00 00       | 	byte	$00[34]
0921e     0A 05 00 00 
09222     00 00 00 00 
09226     00 00 00 00 
0922a     00 00 00 AA | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $aa
0922e     20 00 00 00 
09232     00 00 00 00 
09236     00 00 00 00 
0923a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0923e     00 00 00 00 
09242     00 00 00 00 
09246     00 00 00 00 | 	byte	$00[12]
0924a     0A 01 01 53 
0924e     20 00 00 00 
09252     00 00 00 00 
09256     00 00 00 00 | 	byte	$0a, $01, $01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0925a     00 00 00 00 
0925e     00 00 00 00 
09262     00 00 00 00 
09266     00 00 00 00 | 	byte	$00[16]
0926a     0A 01 00 00 
0926e     00 00 00 00 
09272     00 00 00 00 
09276     00 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0927a     00 00 00 00 
0927e     0A 05 00 00 
09282     00 00 00 00 
09286     00 00 00 00 | 	byte	$00, $00, $00, $00, $0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0928a     0A 01 00 00 
0928e     00 00 00 00 
09292     00 00 00 00 
09296     00 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0929a     00 00 00 00 
0929e     00 00 00 00 
092a2     00 00 00 00 
092a6     00 00 00 00 | 	byte	$00[16]
092aa     0A 01 01 53 
092ae     20 00 00 00 
092b2     00 00 00 00 
092b6     00 00 00 00 | 	byte	$0a, $01, $01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
092ba     00 00 00 00 
092be     00 00 00 00 
092c2     00 00 00 00 
092c6     00 00 00 00 | 	byte	$00[16]
092ca     0A 01 00 AA 
092ce     20 00 00 00 
092d2     00 00 00 00 
092d6     00 00 00 00 | 	byte	$0a, $01, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
092da     00 00 00 00 
092de     00 00 00 00 
092e2     00 00 00 00 
092e6     00 00 00 00 | 	byte	$00[16]
092ea     0A 01 01 53 
092ee     20 00 00 00 
092f2     00 00 00 00 
092f6     00 00 00 00 | 	byte	$0a, $01, $01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
092fa     00 00 00 00 
092fe     00 00 00 00 
09302     00 00 00 00 
09306     00 00 00 00 | 	byte	$00[16]
0930a     0A 01 00 00 
0930e     00 00 00 00 
09312     00 00 00 00 
09316     00 00 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0931a     00 00 00 00 
0931e     0A 05 00 8F 
09322     90 00 00 00 
09326     00 00 00 7F | 	byte	$00, $00, $00, $00, $0a, $05, $00, $8f, $90, $00, $00, $00, $00, $00, $00, $7f
0932a     8A 01 01 53 
0932e     20 00 00 00 
09332     00 00 00 00 
09336     00 00 00 00 | 	byte	$8a, $01, $01, $53, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0933a     00 00 00 00 
0933e     00 00 00    | 	byte	$00[7]
09341     F0 4E 01 00 
09345     D6 60 00 01 
09349     FC 1C 18 01 
0934d     53 20 00 00 | 	byte	$f0, $4e, $01, $00, $d6, $60, $00, $01, $fc, $1c, $18, $01, $53, $20, $00, $00
09351     00 00 00 00 
09355     00 00 00 00 
09359     00 00 00 00 
0935d     00 00 00 00 
09361     00 00 00 00 | 	byte	$00[20]
09365     7F 70 00 00 
09369     00 00 00 00 
0936d     00 00 00 00 
09371     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09375     00 00 00 00 
09379     00 00 00 00 
0937d     00          | 	byte	$00[9]
0937e     0A 05 00 00 
09382     00 00 00 A0 
09386     90 00 00 00 
0938a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0938e     00 00 00 00 
09392     00 00 00 00 
09396     00 00 00 00 
0939a     00 00 00 00 
0939e     00 00 00 00 
093a2     00 00 00    | 	byte	$00[23]
093a5     D6 60 00 00 
093a9     00 00 00 01 
093ad     53 20 00 00 
093b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
093b5     00 00 00 00 
093b9     00 00 00 00 
093bd     00 00 00 00 
093c1     00 00 00 00 | 	byte	$00[16]
093c5     D6 60 00 00 
093c9     00 00 00 00 
093cd     AA 20 00 00 
093d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
093d5     00 00 00 00 
093d9     00 00 00 00 
093dd     00 00 00 00 
093e1     00 00 00 00 | 	byte	$00[16]
093e5     7F 70 00 00 
093e9     00 00 00 01 
093ed     53 20 00 00 
093f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
093f5     00 00 00 00 
093f9     00 00 00 00 
093fd     00 00 00 00 | 	byte	$00[12]
09401     F0 40 00 00 
09405     A0 90 00 00 
09409     00 00 00 00 
0940d     00 0A 05 00 | 	byte	$f0, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00
09411     00 00 00 00 
09415     00 00 00 00 
09419     00 00 00 00 
0941d     00 00 00 00 | 	byte	$00[16]
09421     E2 40 00 00 
09425     8F 80 00 00 
09429     00 00 00 01 
0942d     53 20 00 00 | 	byte	$e2, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00
09431     00 00 00 00 
09435     00 00 00 00 
09439     00 00 00 00 
0943d     00 00 00 00 
09441     00 00 00 00 | 	byte	$00[20]
09445     D6 60 00 02 
09449     FA 10 00 01 
0944d     FC 20 00 00 
09451     00 00 00 00 | 	byte	$d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
09455     00 00 00 00 
09459     00 00 00 00 
0945d     00 00 00 00 | 	byte	$00[12]
09461     F0 40 00 00 
09465     7F 70 00 00 
09469     00 00 00 00 
0946d     00 00 00 00 | 	byte	$f0, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09471     00 00 00 00 
09475     00 00 00 00 
09479     00 00 00 00 
0947d     00          | 	byte	$00[13]
0947e     0A 05 00 00 
09482     00 00 00 A0 
09486     90 00 00 00 
0948a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0948e     00 00 00 00 
09492     00 00 00 00 
09496     00 00 00 00 
0949a     00 00 00 00 
0949e     00 00       | 	byte	$00[18]
094a0     01 0D 40 00 
094a4     00 D6 60 00 
094a8     00 00 00 00 
094ac     01 FC 20 00 | 	byte	$01, $0d, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00
094b0     00 00 00 00 
094b4     00 00 00 00 
094b8     00 00 00 00 
094bc     00 00 00 00 
094c0     00 00 00 00 
094c4     00          | 	byte	$00[21]
094c5     D6 60 00 00 
094c9     00 00 00 00 
094cd     FE 20 00 00 
094d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
094d5     00 00 00 00 
094d9     00 00 00 00 
094dd     00 00 00    | 	byte	$00[11]
094e0     01 2E 40 00 
094e4     00 8F 80 00 
094e8     00 00 00 00 
094ec     01 FC 20 00 | 	byte	$01, $2e, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00
094f0     00 00 00 00 
094f4     00 00 00 00 
094f8     00 00 00 00 
094fc     00 00 00 00 | 	byte	$00[16]
09500     01 0D 40 00 
09504     00 A0 90 00 
09508     02 A6 10 00 
0950c     00 00 00 00 | 	byte	$01, $0d, $40, $00, $00, $a0, $90, $00, $02, $a6, $10, $00, $00, $00, $00, $00
09510     00 00 00 00 
09514     00 00 00 00 
09518     00 00 00 00 
0951c     00 00       | 	byte	$00[14]
0951e     0A 05 01 2E 
09522     40 00 00 8F 
09526     80 00 00 00 
0952a     00 00 01 C5 | 	byte	$0a, $05, $01, $2e, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0952e     20 00 00 00 
09532     00 00 00 00 
09536     00 00 00 00 
0953a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0953e     00 00 01 0D 
09542     40 00 00 D6 
09546     60 00 02 5C 
0954a     10 00 01 94 | 	byte	$00, $00, $01, $0d, $40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0954e     20 00 00 00 
09552     00 00 00 00 
09556     00 00 00 00 
0955a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0955e     00 00 00 F0 
09562     40 00 00 7F 
09566     70 00 00 00 
0956a     00 00 00 00 | 	byte	$00, $00, $00, $f0, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0956e     00 00 00 00 
09572     00 00 00 00 
09576     00 00 00 00 
0957a     00 00 00 00 
0957e     00 00 00 00 
09582     00 00 00    | 	byte	$00[23]
09585     A0 90 00 00 
09589     00 00 00 00 
0958d     00 0A 05 00 
09591     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00, $00, $00, $00
09595     00 00 00 00 
09599     00 00 00 00 
0959d     00 00 00 00 
095a1     00 00 00 00 | 	byte	$00[16]
095a5     D6 60 00 00 
095a9     00 00 00 01 
095ad     94 20 00 00 
095b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
095b5     00 00 00 00 
095b9     00 00 00 00 
095bd     00 00 00 00 
095c1     00 00 00 00 | 	byte	$00[16]
095c5     D6 60 00 00 
095c9     00 00 00 00 
095cd     CA 20 00 00 
095d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
095d5     00 00 00 00 
095d9     00 00 00 00 
095dd     00 00 00 00 
095e1     00 00 00 00 | 	byte	$00[16]
095e5     7F 70 00 00 
095e9     00 00 00 01 
095ed     94 20 00 00 
095f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
095f5     00 00 00 00 
095f9     00 00 00 00 
095fd     00 00 00 00 
09601     00 00 00 00 | 	byte	$00[16]
09605     A0 90 00 00 
09609     00 00 00 00 
0960d     00 00 00 00 
09611     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09615     00 00 00 00 
09619     00 00 00 00 
0961d     00          | 	byte	$00[9]
0961e     0A 05 00 00 
09622     00 00 00 8F 
09626     80 00 00 00 
0962a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0962e     20 00 00 00 
09632     00 00 00 00 
09636     00 00 00 00 
0963a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0963e     00 00 01 0D 
09642     3C 00 00 D6 
09646     60 00 02 FA 
0964a     10 00 01 FC | 	byte	$00, $00, $01, $0d, $3c, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0964e     20 00 00 00 
09652     0A 10 00 00 
09656     00 00 00 00 
0965a     00 00 00 00 | 	byte	$20, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0965e     00 00 00 00 
09662     00 00 00    | 	byte	$00[7]
09665     7F 70 00 00 
09669     00 00 00 00 
0966d     00 00 00 00 
09671     00 0A 10 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $10, $00
09675     00 00 00 00 
09679     00 00 00 00 
0967d     00          | 	byte	$00[9]
0967e     0A 05 00 00 
09682     00 00 00 A0 
09686     90 00 00 00 
0968a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0968e     00 00 00 00 
09692     0A 10 00 00 
09696     00 00 00 00 
0969a     00 00 00 00 | 	byte	$00, $00, $00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0969e     00 00 00 00 
096a2     00 00 00    | 	byte	$00[7]
096a5     D6 60 00 00 
096a9     00 00 00 01 
096ad     FC 20 00 00 
096b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
096b5     00 00 00 00 
096b9     00 00 00 00 
096bd     00 00 00 00 
096c1     00 00 00 00 | 	byte	$00[16]
096c5     D6 60 00 00 
096c9     00 00 00 00 
096cd     FE 20 00 00 
096d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
096d5     00 00 00 00 
096d9     00 00 00 00 
096dd     00 00 00 00 
096e1     00          | 	byte	$00[13]
096e2     0A 01 00 8F 
096e6     80 00 00 00 
096ea     00 00 01 FC 
096ee     20 00 00 00 | 	byte	$0a, $01, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
096f2     00 00 00 00 
096f6     00 00 00 00 
096fa     00 00 00 00 
096fe     00 00 00 00 | 	byte	$00[16]
09702     0A 01 00 A0 
09706     90 00 00 00 
0970a     00 00 00 00 
0970e     00 00 00 00 | 	byte	$0a, $01, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09712     00 00 00 00 
09716     00 00 00 00 
0971a     00 00 00 00 | 	byte	$00[12]
0971e     0A 05 00 00 
09722     0A 01 00 8F 
09726     80 00 00 00 
0972a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $0a, $01, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0972e     20 00 00 00 
09732     00 00 00 00 
09736     00 00 00 00 
0973a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0973e     00 00 00 F0 
09742     4F 07 00 D6 
09746     60 00 01 FC 
0974a     1C 18 01 53 | 	byte	$00, $00, $00, $f0, $4f, $07, $00, $d6, $60, $00, $01, $fc, $1c, $18, $01, $53
0974e     20 00 00 00 
09752     00 00 00 00 
09756     00 00 00 00 
0975a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0975e     00 00 00 00 
09762     00 00 00    | 	byte	$00[7]
09765     7F 70 00 00 
09769     00 00 00 00 
0976d     00 00 00 00 
09771     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09775     00 00 00 00 
09779     00 00 00 00 
0977d     00          | 	byte	$00[9]
0977e     0A 05 00 00 
09782     00 00 00 A0 
09786     90 00 00 00 
0978a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0978e     00 00 00 00 
09792     00 00 00 00 
09796     00 00 00 00 
0979a     00 00 00 00 
0979e     00 00 00 00 
097a2     00 00 00    | 	byte	$00[23]
097a5     D6 60 00 00 
097a9     00 00 00 01 
097ad     53 20 00 00 
097b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
097b5     00 00 00 00 
097b9     00 00 00 00 
097bd     00 00 00 00 
097c1     00 00 00 00 | 	byte	$00[16]
097c5     D6 60 00 00 
097c9     00 00 00 00 
097cd     AA 20 00 00 
097d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
097d5     00 00 00 00 
097d9     00 00 00 00 
097dd     00 00 00 00 
097e1     00 00 00 00 | 	byte	$00[16]
097e5     7F 70 00 00 
097e9     00 00 00 01 
097ed     53 20 00 00 
097f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
097f5     00 00 00 00 
097f9     00 00 00 00 
097fd     00 00 00 00 | 	byte	$00[12]
09801     CA 40 00 00 
09805     A0 90 00 00 
09809     00 00 00 00 
0980d     00 00 00 00 | 	byte	$ca, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09811     00 00 00 00 
09815     00 00 00 00 
09819     00 00 00 00 
0981d     00          | 	byte	$00[13]
0981e     0A 05 00 E2 
09822     40 00 00 8F 
09826     80 00 00 00 
0982a     00 00 01 53 | 	byte	$0a, $05, $00, $e2, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53
0982e     20 00 00 00 
09832     00 00 00 00 
09836     00 00 00 00 
0983a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0983e     00 00 00 00 
09842     00 00 00    | 	byte	$00[7]
09845     D6 60 00 02 
09849     FA 10 00 01 
0984d     FC 20 00 00 
09851     00 00 00 00 | 	byte	$d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
09855     00 00 00 00 
09859     00 00 00 00 
0985d     00 00 00 00 | 	byte	$00[12]
09861     F0 40 00 00 
09865     7F 70 00 00 
09869     00 00 00 00 
0986d     00 00 00 00 | 	byte	$f0, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09871     00 00 00 00 
09875     00 00 00 00 
09879     00 00 00 00 
0987d     00          | 	byte	$00[13]
0987e     0A 05 00 00 
09882     00 00 00 A0 
09886     90 00 00 00 
0988a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0988e     00 00 00 00 
09892     00 00 00 00 
09896     00 00 00 00 
0989a     00 00 00 00 
0989e     00 00       | 	byte	$00[18]
098a0     01 0D 40 00 
098a4     00 D6 60 00 
098a8     00 00 00 00 
098ac     01 FC 20 00 | 	byte	$01, $0d, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00
098b0     00 00 00 00 
098b4     00 00 00 00 
098b8     00 00 00 00 
098bc     00 00 00 00 
098c0     00 00 00 00 
098c4     00          | 	byte	$00[21]
098c5     D6 60 00 00 
098c9     00 00 00 00 
098cd     FE 20 00 00 
098d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
098d5     00 00 00 00 
098d9     00 00 00 00 
098dd     00 00 00    | 	byte	$00[11]
098e0     01 2E 40 00 
098e4     00 7F 70 00 
098e8     00 00 00 00 
098ec     01 FC 20 00 | 	byte	$01, $2e, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00
098f0     00 00 00 00 
098f4     00 00 00 00 
098f8     00 00 00 00 
098fc     00 00 00 00 | 	byte	$00[16]
09900     01 0D 40 00 
09904     00 A0 90 00 
09908     02 A6 10 00 
0990c     00 00 00 00 | 	byte	$01, $0d, $40, $00, $00, $a0, $90, $00, $02, $a6, $10, $00, $00, $00, $00, $00
09910     00 00 00 00 
09914     00 00 00 00 
09918     00 00 00 00 
0991c     00 00       | 	byte	$00[14]
0991e     0A 05 01 2E 
09922     40 00 00 8F 
09926     80 00 00 00 
0992a     00 00 01 C5 | 	byte	$0a, $05, $01, $2e, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0992e     20 00 00 00 
09932     00 00 00 00 
09936     00 00 00 00 
0993a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0993e     00 00 00 B4 
09942     40 00 00 D6 
09946     60 00 02 5C 
0994a     10 00 01 94 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0994e     20 00 00 00 
09952     00 00 00 00 
09956     00 00 00 00 
0995a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0995e     00 00 00 00 
09962     00 00 00    | 	byte	$00[7]
09965     7F 70 00 00 
09969     00 00 00 00 
0996d     00 00 00 00 
09971     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09975     00 00 00 00 
09979     00 00 00 00 
0997d     00          | 	byte	$00[9]
0997e     0A 05 00 00 
09982     00 00 00 A0 
09986     90 00 00 00 
0998a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0998e     00 00 00 00 
09992     00 00 00 00 
09996     00 00 00 00 
0999a     00 00 00 00 
0999e     00 00 00 00 
099a2     00 00 00    | 	byte	$00[23]
099a5     D6 60 00 00 
099a9     00 00 00 01 
099ad     94 20 00 00 
099b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
099b5     00 00 00 00 
099b9     00 00 00 00 
099bd     00 00 00 00 
099c1     00 00 00 00 | 	byte	$00[16]
099c5     D6 60 00 00 
099c9     00 00 00 00 
099cd     CA 20 00 00 
099d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
099d5     00 00 00 00 
099d9     00 00 00 00 
099dd     00 00 00 00 
099e1     00 00 00 00 | 	byte	$00[16]
099e5     7F 70 00 00 
099e9     00 00 00 01 
099ed     94 20 00 00 
099f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
099f5     00 00 00 00 
099f9     00 00 00 00 
099fd     00 00 00    | 	byte	$00[11]
09a00     01 0D 3C 00 
09a04     00 A0 90 00 
09a08     00 00 00 00 
09a0c     00 00 00 00 | 	byte	$01, $0d, $3c, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a10     00 00 0A 10 
09a14     00 00 00 00 
09a18     00 00 00 00 
09a1c     00 00 0A 05 | 	byte	$00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05
09a20     00 00 0A 10 
09a24     00 8F 80 00 
09a28     00 00 00 00 
09a2c     01 C5 20 00 | 	byte	$00, $00, $0a, $10, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00
09a30     00 00 0A 10 
09a34     00 00 00 00 
09a38     00 00 00 00 
09a3c     00 00 00 00 | 	byte	$00, $00, $0a, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a40     00 F0 30 00 
09a44     00 D6 60 00 
09a48     02 FA 10 00 
09a4c     01 FC 20 00 | 	byte	$00, $f0, $30, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00
09a50     00 00 00 00 
09a54     00 00 00 00 
09a58     00 00 00 00 
09a5c     00 00 00 00 
09a60     00 00       | 	byte	$00[18]
09a62     04 72 00 7F 
09a66     70 00 00 00 
09a6a     00 00 00 00 
09a6e     00 00 00 00 | 	byte	$04, $72, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a72     04 00 00 00 
09a76     00 00 00 00 
09a7a     00 00 00 00 
09a7e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
09a82     04 00 00 A0 
09a86     90 00 00 00 
09a8a     00 00 00 00 
09a8e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a92     04 00 00 00 
09a96     00 00 00 00 
09a9a     00 00 00 00 
09a9e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09aa2     04 00 00 D6 
09aa6     60 00 00 00 
09aaa     00 00 01 FC 
09aae     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
09ab2     04 00 00 00 
09ab6     00 00 00 00 
09aba     00 00 00 00 
09abe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ac2     04 00 00 D6 
09ac6     60 00 00 00 
09aca     00 00 00 FE 
09ace     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00
09ad2     04 00 00 00 
09ad6     00 00 00 00 
09ada     00 00 00 00 
09ade     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ae2     04 00 00 7F 
09ae6     70 00 00 00 
09aea     00 00 01 FC 
09aee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
09af2     04 00 00 00 
09af6     00 00 00 00 
09afa     00 00 00 00 
09afe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b02     04 00 00 A0 
09b06     90 00 00 00 
09b0a     00 00 00 00 
09b0e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b12     04 00 00 00 
09b16     00 00 00 00 
09b1a     00 00 00 00 
09b1e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
09b22     04 00 00 8F 
09b26     80 00 00 00 
09b2a     00 00 01 C5 
09b2e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
09b32     04 00 00 00 
09b36     00 00 00 00 
09b3a     00 00 00 00 
09b3e     00 00 00 B4 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $b4
09b42     40 00 00 D6 
09b46     60 00 02 5C 
09b4a     10 00 01 94 
09b4e     20 00 00 00 | 	byte	$40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94, $20, $00, $00, $00
09b52     00 00 00 00 
09b56     00 00 00 00 
09b5a     00 00 00 00 
09b5e     00 00 00 00 
09b62     00 00 00    | 	byte	$00[19]
09b65     7F 70 00 00 
09b69     00 00 00 00 
09b6d     00 00 00 00 
09b71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b75     00 00 00 00 
09b79     00 00 00 00 
09b7d     00          | 	byte	$00[9]
09b7e     0A 05 00 00 
09b82     00 00 00 A0 
09b86     90 00 00 00 
09b8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
09b8e     00 00 00 00 
09b92     00 00 00 00 
09b96     00 00 00 00 
09b9a     00 00 00 00 
09b9e     00 00 00 00 
09ba2     00 00 00    | 	byte	$00[23]
09ba5     D6 60 00 00 
09ba9     00 00 00 01 
09bad     94 20 00 00 
09bb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09bb5     00 00 00 00 
09bb9     00 00 00 00 
09bbd     00 00 00 00 
09bc1     00 00 00 00 | 	byte	$00[16]
09bc5     D6 60 00 00 
09bc9     00 00 00 00 
09bcd     CA 20 00 00 
09bd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
09bd5     00 00 00 00 
09bd9     00 00 00 00 
09bdd     00 00 00 00 
09be1     00 00 00 00 | 	byte	$00[16]
09be5     7F 70 00 00 
09be9     00 00 00 01 
09bed     94 20 00 00 
09bf1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09bf5     00 00 00 00 
09bf9     00 00 00 00 
09bfd     00 00 00 00 | 	byte	$00[12]
09c01     97 40 00 00 
09c05     A0 90 00 00 
09c09     00 00 00 00 
09c0d     00 00 00 00 | 	byte	$97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c11     00 00 00 00 
09c15     00 00 00 00 
09c19     00 00 00 00 
09c1d     00          | 	byte	$00[13]
09c1e     0A 05 00 87 
09c22     40 00 00 8F 
09c26     80 00 00 00 
09c2a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
09c2e     20 00 00 00 
09c32     00 00 00 00 
09c36     00 00 00 00 
09c3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c3e     00 00 00 00 
09c42     00 00 00    | 	byte	$00[7]
09c45     D6 60 00 02 
09c49     FA 10 00 01 
09c4d     FC 20 00 00 
09c51     00 00 00 00 | 	byte	$d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
09c55     00 00 00 00 
09c59     00 00 00 00 
09c5d     00 00 00 00 | 	byte	$00[12]
09c61     97 40 00 00 
09c65     7F 70 00 00 
09c69     00 00 00 00 
09c6d     00 00 00 00 | 	byte	$97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c71     00 00 00 00 
09c75     00 00 00 00 
09c79     00 00 00 00 
09c7d     00          | 	byte	$00[13]
09c7e     0A 05 00 00 
09c82     00 00 00 A0 
09c86     90 00 00 00 
09c8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
09c8e     00 00 00 00 
09c92     00 00 00 00 
09c96     00 00 00 00 
09c9a     00 00 00 00 
09c9e     00 00 00    | 	byte	$00[19]
09ca1     87 40 00 00 
09ca5     D6 60 00 00 
09ca9     00 00 00 01 
09cad     FC 20 00 00 | 	byte	$87, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
09cb1     00 00 00 00 
09cb5     00 00 00 00 
09cb9     00 00 00 00 
09cbd     00 00 00 00 
09cc1     00 00 00 00 | 	byte	$00[20]
09cc5     D6 60 00 00 
09cc9     00 00 00 00 
09ccd     FE 20 00 00 
09cd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
09cd5     00 00 00 00 
09cd9     00 00 00 00 
09cdd     00 00 00 00 | 	byte	$00[12]
09ce1     97 40 00 00 
09ce5     8F 80 00 00 
09ce9     00 00 00 01 
09ced     FC 20 00 00 | 	byte	$97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
09cf1     00 00 00 00 
09cf5     00 00 00 00 
09cf9     00 00 00 00 
09cfd     00 00 00 00 | 	byte	$00[16]
09d01     A0 40 00 00 
09d05     A0 90 00 00 
09d09     00 00 00 00 
09d0d     00 00 00 00 | 	byte	$a0, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d11     00 00 00 00 
09d15     00 00 00 00 
09d19     00 00 00 00 
09d1d     00          | 	byte	$00[13]
09d1e     0A 05 00 97 
09d22     40 00 00 8F 
09d26     80 00 00 00 
09d2a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
09d2e     20 00 00 00 
09d32     00 00 00 00 
09d36     00 00 00 00 
09d3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d3e     00 00 00 CA 
09d42     40 00 00 D6 
09d46     60 00 01 FC 
09d4a     10 00 01 94 | 	byte	$00, $00, $00, $ca, $40, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $94
09d4e     20 00 00 00 
09d52     00 00 00 00 
09d56     00 00 00 00 
09d5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d5e     00 00 00 B4 
09d62     40 00 00 7F 
09d66     70 00 00 00 
09d6a     00 00 00 00 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
09d6e     00 00 00 00 
09d72     00 00 00 00 
09d76     00 00 00 00 
09d7a     00 00 00 00 | 	byte	$00[16]
09d7e     0A 05 00 B4 
09d82     40 00 00 A0 
09d86     90 00 00 00 
09d8a     00 00 00 00 | 	byte	$0a, $05, $00, $b4, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
09d8e     00 00 00 00 
09d92     00 00 00 00 
09d96     00 00 00 00 
09d9a     00 00 00 00 
09d9e     00 00 00 00 
09da2     00 00 00    | 	byte	$00[23]
09da5     D6 60 00 00 
09da9     00 00 00 01 
09dad     94 20 00 00 
09db1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09db5     00 00 00 00 
09db9     00 00 00 00 
09dbd     00 00 00 00 
09dc1     00 00 00 00 | 	byte	$00[16]
09dc5     D6 60 00 00 
09dc9     00 00 00 00 
09dcd     CA 20 00 00 
09dd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
09dd5     00 00 00 00 
09dd9     00 00 00 00 
09ddd     00 00 00 00 
09de1     00 00 00 00 | 	byte	$00[16]
09de5     7F 70 00 00 
09de9     00 00 00 01 
09ded     94 20 00 00 
09df1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09df5     00 00 00 00 
09df9     00 00 00 00 
09dfd     00 00 00 00 | 	byte	$00[12]
09e01     CA 40 00 00 
09e05     A0 90 00 00 
09e09     00 00 00 00 
09e0d     00 00 00 00 | 	byte	$ca, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e11     00 00 00 00 
09e15     00 00 00 00 
09e19     00 00 00 00 
09e1d     00          | 	byte	$00[13]
09e1e     0A 05 00 B4 
09e22     40 00 00 8F 
09e26     80 00 00 00 
09e2a     00 00 01 C5 | 	byte	$0a, $05, $00, $b4, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
09e2e     20 00 00 00 
09e32     00 00 00 00 
09e36     00 00 00 00 
09e3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e3e     00 00 00 E2 
09e42     40 00 00 D6 
09e46     60 00 02 FA 
09e4a     10 00 01 FC | 	byte	$00, $00, $00, $e2, $40, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
09e4e     20 00 00 00 
09e52     00 00 00 00 
09e56     00 00 00 00 
09e5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e5e     00 00 00 00 
09e62     00 00 00    | 	byte	$00[7]
09e65     7F 70 00 00 
09e69     00 00 00 00 
09e6d     00 00 00 00 
09e71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e75     00 00 00 00 
09e79     00 00 00 00 
09e7d     00          | 	byte	$00[9]
09e7e     0A 05 00 00 
09e82     00 00 00 A0 
09e86     90 00 00 00 
09e8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
09e8e     00 00 00 00 
09e92     00 00 00 00 
09e96     00 00 00 00 
09e9a     00 00 00 00 
09e9e     00 00 00 00 
09ea2     00 00 00    | 	byte	$00[23]
09ea5     D6 60 00 00 
09ea9     00 00 00 01 
09ead     FC 20 00 00 
09eb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
09eb5     00 00 00 00 
09eb9     00 00 00 00 
09ebd     00 00 00 00 
09ec1     00 00 00 00 | 	byte	$00[16]
09ec5     D6 60 00 00 
09ec9     00 00 00 00 
09ecd     FE 20 00 00 
09ed1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
09ed5     00 00 00 00 
09ed9     00 00 00 00 
09edd     00 00 00 00 
09ee1     00 00 00 00 | 	byte	$00[16]
09ee5     8F 80 00 00 
09ee9     00 00 00 01 
09eed     FC 20 00 00 
09ef1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
09ef5     00 00 00 00 
09ef9     00 00 00 00 
09efd     00 00 00 00 
09f01     00 00 00 00 | 	byte	$00[16]
09f05     A0 90 00 00 
09f09     00 00 00 00 
09f0d     00 00 00 00 
09f11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f15     00 00 00 00 
09f19     00 00 00 00 
09f1d     00          | 	byte	$00[9]
09f1e     0A 05 00 00 
09f22     00 00 00 8F 
09f26     80 00 00 00 
09f2a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
09f2e     20 00 00 00 
09f32     00 00 00 00 
09f36     00 00 00 00 
09f3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f3e     00 00 00 B4 
09f42     40 00 00 D6 
09f46     60 00 02 5C 
09f4a     10 00 01 94 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
09f4e     20 00 00 00 
09f52     00 00 00 00 
09f56     00 00 00 00 
09f5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f5e     00 00 00 00 
09f62     00 00 00    | 	byte	$00[7]
09f65     7F 70 00 00 
09f69     00 00 00 00 
09f6d     00 00 00 00 
09f71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f75     00 00 00 00 
09f79     00 00 00 00 
09f7d     00          | 	byte	$00[9]
09f7e     0A 05 00 00 
09f82     00 00 00 A0 
09f86     90 00 00 00 
09f8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
09f8e     00 00 00 00 
09f92     00 00 00 00 
09f96     00 00 00 00 
09f9a     00 00 00 00 
09f9e     00 00 00 00 
09fa2     00 00 00    | 	byte	$00[23]
09fa5     D6 60 00 00 
09fa9     00 00 00 01 
09fad     94 20 00 00 
09fb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09fb5     00 00 00 00 
09fb9     00 00 00 00 
09fbd     00 00 00 00 
09fc1     00 00 00 00 | 	byte	$00[16]
09fc5     D6 60 00 00 
09fc9     00 00 00 00 
09fcd     CA 20 00 00 
09fd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
09fd5     00 00 00 00 
09fd9     00 00 00 00 
09fdd     00 00 00 00 
09fe1     00 00 00 00 | 	byte	$00[16]
09fe5     8F 80 00 00 
09fe9     00 00 00 01 
09fed     94 20 00 00 
09ff1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
09ff5     00 00 00 00 
09ff9     00 00 00 00 
09ffd     00 00 00 00 | 	byte	$00[12]
0a001     97 40 00 00 
0a005     A0 90 00 00 
0a009     00 00 00 00 
0a00d     00 00 00 00 | 	byte	$97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a011     00 00 00 00 
0a015     00 00 00 00 
0a019     00 00 00 00 
0a01d     00          | 	byte	$00[13]
0a01e     0A 05 00 87 
0a022     40 00 00 8F 
0a026     80 00 00 00 
0a02a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0a02e     20 00 00 00 
0a032     00 00 00 00 
0a036     00 00 00 00 
0a03a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a03e     00 00 00 00 
0a042     00 00 00    | 	byte	$00[7]
0a045     D6 60 00 02 
0a049     FA 10 00 01 
0a04d     FC 20 00 00 
0a051     00 00 00 00 | 	byte	$d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0a055     00 00 00 00 
0a059     00 00 00 00 
0a05d     00 00 00 00 | 	byte	$00[12]
0a061     97 40 00 00 
0a065     7F 70 00 00 
0a069     00 00 00 00 
0a06d     00 00 00 00 | 	byte	$97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a071     00 00 00 00 
0a075     00 00 00 00 
0a079     00 00 00 00 
0a07d     00          | 	byte	$00[13]
0a07e     0A 05 00 00 
0a082     00 00 00 A0 
0a086     90 00 00 00 
0a08a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a08e     00 00 00 00 
0a092     00 00 00 00 
0a096     00 00 00 00 
0a09a     00 00 00 00 
0a09e     00 00 00    | 	byte	$00[19]
0a0a1     A0 40 00 00 
0a0a5     D6 60 00 00 
0a0a9     00 00 00 01 
0a0ad     FC 20 00 00 | 	byte	$a0, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0a0b1     00 00 00 00 
0a0b5     00 00 00 00 
0a0b9     00 00 00 00 
0a0bd     00 00 00 00 
0a0c1     00 00 00 00 | 	byte	$00[20]
0a0c5     D6 60 00 00 
0a0c9     00 00 00 00 
0a0cd     FE 20 00 00 
0a0d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0a0d5     00 00 00 00 
0a0d9     00 00 00 00 
0a0dd     00 00 00 00 | 	byte	$00[12]
0a0e1     97 40 00 00 
0a0e5     7F 70 00 00 
0a0e9     00 00 00 01 
0a0ed     FC 20 00 00 | 	byte	$97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0a0f1     00 00 00 00 
0a0f5     00 00 00 00 
0a0f9     00 00 00 00 
0a0fd     00 00 00 00 
0a101     00 00 00 00 | 	byte	$00[20]
0a105     A0 90 00 00 
0a109     00 00 00 00 
0a10d     00 00 00 00 
0a111     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a115     00 00 00 00 
0a119     00 00 00 00 
0a11d     00          | 	byte	$00[9]
0a11e     0A 05 00 87 
0a122     40 00 00 8F 
0a126     80 00 00 00 
0a12a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0a12e     20 00 00 00 
0a132     00 00 00 00 
0a136     00 00 00 00 
0a13a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a13e     00 00 00 97 
0a142     40 00 00 D6 
0a146     60 00 01 FC 
0a14a     10 00 01 53 | 	byte	$00, $00, $00, $97, $40, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $53
0a14e     20 00 00 00 
0a152     00 00 00 00 
0a156     00 00 00 00 
0a15a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a15e     00 00 00 00 
0a162     00 00 00    | 	byte	$00[7]
0a165     7F 70 00 00 
0a169     00 00 00 00 
0a16d     00 00 00 00 
0a171     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a175     00 00 00 00 
0a179     00 00 00 00 
0a17d     00          | 	byte	$00[9]
0a17e     0A 05 00 00 
0a182     00 00 00 A0 
0a186     90 00 00 00 
0a18a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a18e     00 00 00 00 
0a192     00 00 00 00 
0a196     00 00 00 00 
0a19a     00 00 00 00 
0a19e     00 00 00 00 
0a1a2     00 00 00    | 	byte	$00[23]
0a1a5     D6 60 00 00 
0a1a9     00 00 00 01 
0a1ad     53 20 00 00 
0a1b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a1b5     00 00 00 00 
0a1b9     00 00 00 00 
0a1bd     00 00 00 00 
0a1c1     00 00 00 00 | 	byte	$00[16]
0a1c5     D6 60 00 00 
0a1c9     00 00 00 00 
0a1cd     AA 20 00 00 
0a1d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0a1d5     00 00 00 00 
0a1d9     00 00 00 00 
0a1dd     00 00 00 00 
0a1e1     00 00 00 00 | 	byte	$00[16]
0a1e5     7F 70 00 00 
0a1e9     00 00 00 01 
0a1ed     53 20 00 00 
0a1f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a1f5     00 00 00 00 
0a1f9     00 00 00 00 
0a1fd     00 00 00 00 
0a201     00 00 00 00 | 	byte	$00[16]
0a205     A0 90 00 00 
0a209     00 00 00 00 
0a20d     00 00 00 00 
0a211     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a215     00 00 00 00 
0a219     00 00 00 00 
0a21d     00          | 	byte	$00[9]
0a21e     0A 05 00 00 
0a222     00 00 00 8F 
0a226     80 00 00 00 
0a22a     00 00 00 AA | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $00, $aa
0a22e     20 00 00 00 
0a232     00 00 00 00 
0a236     00 00 00 00 
0a23a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a23e     00 00 00 00 
0a242     00 00 00    | 	byte	$00[7]
0a245     D6 60 00 00 
0a249     00 00 00 01 
0a24d     53 20 00 00 
0a251     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a255     00 00 00 00 
0a259     00 00 00 00 
0a25d     00 00 00 00 
0a261     00 00 00 00 | 	byte	$00[16]
0a265     7F 70 00 00 
0a269     00 00 00 00 
0a26d     00 00 00 00 
0a271     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a275     00 00 00 00 
0a279     00 00 00 00 
0a27d     00          | 	byte	$00[9]
0a27e     0A 05 00 00 
0a282     00 00 00 A0 
0a286     90 00 00 00 
0a28a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a28e     00 00 00 00 
0a292     00 00 00 00 
0a296     00 00 00 00 
0a29a     00 00 00 00 
0a29e     00 00 00 00 
0a2a2     00 00 00    | 	byte	$00[23]
0a2a5     D6 60 00 00 
0a2a9     00 00 00 01 
0a2ad     53 20 00 00 
0a2b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a2b5     00 00 00 00 
0a2b9     00 00 00 00 
0a2bd     00 00 00 00 
0a2c1     00 00 00 00 | 	byte	$00[16]
0a2c5     D6 60 00 00 
0a2c9     00 00 00 00 
0a2cd     AA 20 00 00 
0a2d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0a2d5     00 00 00 00 
0a2d9     00 00 00 00 
0a2dd     00 00 00 00 
0a2e1     00 00 00 00 | 	byte	$00[16]
0a2e5     8F 80 00 00 
0a2e9     00 00 00 01 
0a2ed     53 20 00 00 
0a2f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a2f5     00 00 00 00 
0a2f9     00 00 00 00 
0a2fd     00 00 00 00 
0a301     00 00 00 00 | 	byte	$00[16]
0a305     A0 90 00 00 
0a309     00 00 00 00 
0a30d     00 00 00 00 
0a311     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a315     00 00 00 00 
0a319     00 00 00 00 
0a31d     00          | 	byte	$00[9]
0a31e     0A 05 00 00 
0a322     00 00 00 A0 
0a326     90 00 00 00 
0a32a     00 00 01 68 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $68
0a32e     20 00 00 00 
0a332     00 00 00 00 
0a336     00 00 00 00 
0a33a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a33e     00 00 00 78 
0a342     40 00 00 D6 
0a346     60 00 02 5C 
0a34a     10 00 01 94 | 	byte	$00, $00, $00, $78, $40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0a34e     20 00 00 00 
0a352     00 00 00 00 
0a356     00 00 00 00 
0a35a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a35e     00 00 00 00 
0a362     00 00 00    | 	byte	$00[7]
0a365     7F 70 00 00 
0a369     00 00 00 00 
0a36d     00 00 00 00 
0a371     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a375     00 00 00 00 
0a379     00 00 00 00 
0a37d     00          | 	byte	$00[9]
0a37e     0A 05 00 00 
0a382     00 00 00 A0 
0a386     90 00 00 00 
0a38a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a38e     00 00 00 00 
0a392     00 00 00 00 
0a396     00 00 00 00 
0a39a     00 00 00 00 
0a39e     00 00 00 00 
0a3a2     00 00 00    | 	byte	$00[23]
0a3a5     D6 60 00 00 
0a3a9     00 00 00 01 
0a3ad     94 20 00 00 
0a3b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
0a3b5     00 00 00 00 
0a3b9     00 00 00 00 
0a3bd     00 00 00 00 
0a3c1     00 00 00 00 | 	byte	$00[16]
0a3c5     D6 60 00 00 
0a3c9     00 00 00 00 
0a3cd     CA 20 00 00 
0a3d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
0a3d5     00 00 00 00 
0a3d9     00 00 00 00 
0a3dd     00 00 00 00 | 	byte	$00[12]
0a3e1     78 40 00 00 
0a3e5     8F 80 00 00 
0a3e9     00 00 00 01 
0a3ed     94 20 00 00 | 	byte	$78, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00
0a3f1     00 00 00 00 
0a3f5     00 00 00 00 
0a3f9     00 00 00 00 
0a3fd     00 00 00 00 | 	byte	$00[16]
0a401     87 40 00 00 
0a405     A0 90 00 00 
0a409     00 00 00 00 
0a40d     00 00 00 00 | 	byte	$87, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a411     00 00 00 00 
0a415     00 00 00 00 
0a419     00 00 00 00 
0a41d     00          | 	byte	$00[13]
0a41e     0A 05 00 97 
0a422     40 00 00 8F 
0a426     80 00 00 00 
0a42a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0a42e     20 00 00 00 
0a432     00 00 00 00 
0a436     00 00 00 00 
0a43a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a43e     00 00 00 87 
0a442     40 00 00 D6 
0a446     60 00 02 FA 
0a44a     10 00 01 FC | 	byte	$00, $00, $00, $87, $40, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0a44e     20 00 00 00 
0a452     00 00 00 00 
0a456     00 00 00 00 
0a45a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a45e     00 00 00 97 
0a462     40 00 00 7F 
0a466     70 00 00 00 
0a46a     00 00 00 00 | 	byte	$00, $00, $00, $97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0a46e     00 00 00 00 
0a472     00 00 00 00 
0a476     00 00 00 00 
0a47a     00 00 00 00 | 	byte	$00[16]
0a47e     0A 05 00 87 
0a482     40 00 00 A0 
0a486     90 00 00 00 
0a48a     00 00 00 00 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a48e     00 00 00 00 
0a492     00 00 00 00 
0a496     00 00 00 00 
0a49a     00 00 00 00 
0a49e     00 00 00    | 	byte	$00[19]
0a4a1     B4 40 00 00 
0a4a5     D6 60 00 00 
0a4a9     00 00 00 01 
0a4ad     FC 20 00 00 | 	byte	$b4, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0a4b1     00 00 00 00 
0a4b5     00 00 00 00 
0a4b9     00 00 00 00 
0a4bd     00 00 00 00 
0a4c1     00 00 00 00 | 	byte	$00[20]
0a4c5     D6 60 00 00 
0a4c9     00 00 00 00 
0a4cd     FE 20 00 00 
0a4d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0a4d5     00 00 00 00 
0a4d9     00 00 00 00 
0a4dd     00 00 00 00 
0a4e1     00 00 00 00 | 	byte	$00[16]
0a4e5     7F 70 00 00 
0a4e9     00 00 00 01 
0a4ed     FC 20 00 00 
0a4f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0a4f5     00 00 00 00 
0a4f9     00 00 00 00 
0a4fd     00 00 00 00 | 	byte	$00[12]
0a501     A0 40 00 00 
0a505     A0 90 00 00 
0a509     00 00 00 00 
0a50d     00 00 00 00 | 	byte	$a0, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a511     00 00 00 00 
0a515     00 00 00 00 
0a519     00 00 00 00 
0a51d     00          | 	byte	$00[13]
0a51e     0A 05 00 97 
0a522     40 00 00 8F 
0a526     80 00 00 00 
0a52a     00 00 01 FC | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0a52e     20 00 00 00 
0a532     00 00 00 00 
0a536     00 00 00 00 
0a53a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a53e     00 00 00 00 
0a542     00 00 00    | 	byte	$00[7]
0a545     D6 60 00 01 
0a549     FC 10 00 01 
0a54d     53 20 00 00 
0a551     00 00 00 00 | 	byte	$d6, $60, $00, $01, $fc, $10, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a555     00 00 00 00 
0a559     00 00 00 00 
0a55d     00 00 00 00 
0a561     00 00 00 00 | 	byte	$00[16]
0a565     7F 70 00 00 
0a569     00 00 00 00 
0a56d     00 00 00 00 
0a571     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a575     00 00 00 00 
0a579     00 00 00 00 
0a57d     00          | 	byte	$00[9]
0a57e     0A 05 00 00 
0a582     00 00 00 A0 
0a586     90 00 00 00 
0a58a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a58e     00 00 00 00 
0a592     00 00 00 00 
0a596     00 00 00 00 
0a59a     00 00 00 00 
0a59e     00 00 00 00 
0a5a2     00 00 00    | 	byte	$00[23]
0a5a5     D6 60 00 00 
0a5a9     00 00 00 01 
0a5ad     53 20 00 00 
0a5b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0a5b5     00 00 00 00 
0a5b9     00 00 00 00 
0a5bd     00 00 00    | 	byte	$00[11]
0a5c0     01 68 30 00 
0a5c4     00 D6 60 00 
0a5c8     00 00 00 00 
0a5cc     00 AA 20 00 | 	byte	$01, $68, $30, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00
0a5d0     00 00 00 00 
0a5d4     00 00 00 00 
0a5d8     00 00 00 00 
0a5dc     00 00 00 00 
0a5e0     00 00       | 	byte	$00[18]
0a5e2     04 72 00 7F 
0a5e6     70 00 00 00 
0a5ea     00 00 01 53 
0a5ee     20 00 00 00 | 	byte	$04, $72, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0a5f2     04 00 00 00 
0a5f6     00 00 00 00 
0a5fa     00 00 00 00 
0a5fe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a602     04 00 00 A0 
0a606     90 00 00 00 
0a60a     00 00 00 00 
0a60e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a612     04 00 00 00 
0a616     00 00 00 00 
0a61a     00 00 00 00 
0a61e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0a622     04 00 00 8F 
0a626     80 00 00 00 
0a62a     00 00 01 68 
0a62e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $68, $20, $00, $00, $00
0a632     04 00 00 00 
0a636     00 00 00 00 
0a63a     00 00 00 00 
0a63e     00 00 01 0D | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $0d
0a642     30 00 00 D6 
0a646     60 00 00 00 
0a64a     00 00 01 53 
0a64e     20 00 00 00 | 	byte	$30, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0a652     04 00 00 00 
0a656     00 00 00 00 
0a65a     00 00 00 00 
0a65e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a662     04 00 00 7F 
0a666     70 00 00 00 
0a66a     00 00 00 00 
0a66e     00 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a672     04 00 00 00 
0a676     00 00 00 00 
0a67a     00 00 00 00 
0a67e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0a682     04 00 00 A0 
0a686     90 00 00 00 
0a68a     00 00 00 00 
0a68e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a692     04 00 00 00 
0a696     00 00 00 00 
0a69a     00 00 00 00 
0a69e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a6a2     04 00 00 D6 
0a6a6     60 00 00 00 
0a6aa     00 00 01 53 
0a6ae     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0a6b2     04 00 00 00 
0a6b6     00 00 00 00 
0a6ba     00 00 00 00 
0a6be     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a6c2     04 00 00 D6 
0a6c6     60 00 00 00 
0a6ca     00 00 00 AA 
0a6ce     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00
0a6d2     04 00 00 00 
0a6d6     00 00 00 00 
0a6da     00 00 00 00 
0a6de     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a6e2     04 00 00 8F 
0a6e6     80 00 00 00 
0a6ea     00 00 01 53 
0a6ee     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0a6f2     04 00 00 00 
0a6f6     00 00 00 00 
0a6fa     00 00 00 00 
0a6fe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a702     04 00 00 A0 
0a706     90 00 00 00 
0a70a     00 00 00 00 
0a70e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a712     0A 01 00 00 
0a716     00 00 00 00 
0a71a     00 00 00 00 
0a71e     0A 05 00 00 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0a722     0A 01 00 A0 
0a726     90 00 00 00 
0a72a     00 00 01 68 
0a72e     20 00 00 00 | 	byte	$0a, $01, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $68, $20, $00, $00, $00
0a732     0A 01 00 00 
0a736     00 00 00 00 
0a73a     00 00 00 00 
0a73e     00 00 00 78 | 	byte	$0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $78
0a742     40 00 00 D6 
0a746     60 00 02 5C 
0a74a     10 00 01 94 
0a74e     20 00 00 00 | 	byte	$40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94, $20, $00, $00, $00
0a752     00 00 00 00 
0a756     00 00 00 00 
0a75a     00 00 00 00 
0a75e     00 00 00 00 
0a762     00 00 00    | 	byte	$00[19]
0a765     7F 70 00 00 
0a769     00 00 00 00 
0a76d     00 00 00 00 
0a771     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a775     00 00 00 00 
0a779     00 00 00 00 
0a77d     00          | 	byte	$00[9]
0a77e     0A 05 00 00 
0a782     00 00 00 A0 
0a786     90 00 00 00 
0a78a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a78e     00 00 00 00 
0a792     00 00 00 00 
0a796     00 00 00 00 
0a79a     00 00 00 00 
0a79e     00 00 00 00 
0a7a2     00 00 00    | 	byte	$00[23]
0a7a5     D6 60 00 00 
0a7a9     00 00 00 01 
0a7ad     94 20 00 00 
0a7b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
0a7b5     00 00 00 00 
0a7b9     00 00 00 00 
0a7bd     00 00 00 00 
0a7c1     00 00 00 00 | 	byte	$00[16]
0a7c5     D6 60 00 00 
0a7c9     00 00 00 00 
0a7cd     CA 20 00 00 
0a7d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
0a7d5     00 00 00 00 
0a7d9     00 00 00 00 
0a7dd     00 00 00 00 | 	byte	$00[12]
0a7e1     78 40 00 00 
0a7e5     8F 80 00 00 
0a7e9     00 00 00 01 
0a7ed     94 20 00 00 | 	byte	$78, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00
0a7f1     00 00 00 00 
0a7f5     00 00 00 00 
0a7f9     00 00 00 00 
0a7fd     00 00 00 00 | 	byte	$00[16]
0a801     87 40 00 00 
0a805     A0 90 00 00 
0a809     00 00 00 00 
0a80d     00 00 00 00 | 	byte	$87, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a811     00 00 00 00 
0a815     00 00 00 00 
0a819     00 00 00 00 
0a81d     00          | 	byte	$00[13]
0a81e     0A 05 00 97 
0a822     40 00 00 8F 
0a826     80 00 00 00 
0a82a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0a82e     20 00 00 00 
0a832     00 00 00 00 
0a836     00 00 00 00 
0a83a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a83e     00 00 00 87 
0a842     40 00 00 D6 
0a846     60 00 02 FA 
0a84a     10 00 01 FC | 	byte	$00, $00, $00, $87, $40, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0a84e     20 00 00 00 
0a852     00 00 00 00 
0a856     00 00 00 00 
0a85a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a85e     00 00 00 97 
0a862     40 00 00 7F 
0a866     70 00 00 00 
0a86a     00 00 00 00 | 	byte	$00, $00, $00, $97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0a86e     00 00 00 00 
0a872     00 00 00 00 
0a876     00 00 00 00 
0a87a     00 00 00 00 | 	byte	$00[16]
0a87e     0A 05 00 87 
0a882     40 00 00 A0 
0a886     90 00 00 00 
0a88a     00 00 00 00 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a88e     00 00 00 00 
0a892     00 00 00 00 
0a896     00 00 00 00 
0a89a     00 00 00 00 
0a89e     00 00 00    | 	byte	$00[19]
0a8a1     B4 40 00 00 
0a8a5     D6 60 00 00 
0a8a9     00 00 00 01 
0a8ad     FC 20 00 00 | 	byte	$b4, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0a8b1     00 00 00 00 
0a8b5     00 00 00 00 
0a8b9     00 00 00 00 
0a8bd     00 00 00 00 
0a8c1     00 00 00 00 | 	byte	$00[20]
0a8c5     D6 60 00 00 
0a8c9     00 00 00 00 
0a8cd     FE 20 00 00 
0a8d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0a8d5     00 00 00 00 
0a8d9     00 00 00 00 
0a8dd     00 00 00 00 
0a8e1     00 00 00 00 | 	byte	$00[16]
0a8e5     7F 70 00 00 
0a8e9     00 00 00 01 
0a8ed     FC 20 00 00 
0a8f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0a8f5     00 00 00 00 
0a8f9     00 00 00 00 
0a8fd     00 00 00 00 | 	byte	$00[12]
0a901     CA 40 00 00 
0a905     A0 90 00 00 
0a909     00 00 00 00 
0a90d     00 00 00 00 | 	byte	$ca, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a911     00 00 00 00 
0a915     00 00 00 00 
0a919     00 00 00 00 
0a91d     00          | 	byte	$00[13]
0a91e     0A 05 00 E2 
0a922     40 00 00 8F 
0a926     80 00 00 00 
0a92a     00 00 02 1A | 	byte	$0a, $05, $00, $e2, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $02, $1a
0a92e     20 00 00 00 
0a932     00 00 00 00 
0a936     00 00 00 00 
0a93a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a93e     00 00 00 00 
0a942     00 00 00    | 	byte	$00[7]
0a945     D6 60 00 01 
0a949     C5 10 00 01 
0a94d     2E 20 00 00 
0a951     00 00 00 00 | 	byte	$d6, $60, $00, $01, $c5, $10, $00, $01, $2e, $20, $00, $00, $00, $00, $00, $00
0a955     00 00 00 00 
0a959     00 00 00 00 
0a95d     00 00 00 00 
0a961     00 00 00 00 | 	byte	$00[16]
0a965     7F 70 00 00 
0a969     00 00 00 00 
0a96d     00 00 00 00 
0a971     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a975     00 00 00 00 
0a979     00 00 00 00 
0a97d     00          | 	byte	$00[9]
0a97e     0A 05 00 00 
0a982     00 00 00 A0 
0a986     90 00 00 00 
0a98a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0a98e     00 00 00 00 
0a992     00 00 00 00 
0a996     00 00 00 00 
0a99a     00 00 00 00 
0a99e     00 00 00 00 
0a9a2     00 00 00    | 	byte	$00[23]
0a9a5     D6 60 00 00 
0a9a9     00 00 00 01 
0a9ad     2E 20 00 00 
0a9b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $2e, $20, $00, $00, $00, $00, $00, $00
0a9b5     00 00 00 00 
0a9b9     00 00 00 00 
0a9bd     00 00 00 00 
0a9c1     00 00 00 00 | 	byte	$00[16]
0a9c5     D6 60 00 00 
0a9c9     00 00 00 00 
0a9cd     97 20 00 00 
0a9d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $97, $20, $00, $00, $00, $00, $00, $00
0a9d5     00 00 00 00 
0a9d9     00 00 00 00 
0a9dd     00 00 00 00 
0a9e1     00 00 00 00 | 	byte	$00[16]
0a9e5     7F 70 00 00 
0a9e9     00 00 00 01 
0a9ed     2E 20 00 00 
0a9f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $2e, $20, $00, $00, $00, $00, $00, $00
0a9f5     00 00 00 00 
0a9f9     00 00 00 00 
0a9fd     00 00 00 00 
0aa01     00 00 00 00 | 	byte	$00[16]
0aa05     A0 90 00 00 
0aa09     00 00 00 00 
0aa0d     00 00 00 00 
0aa11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa15     00 00 00 00 
0aa19     00 00 00 00 
0aa1d     00          | 	byte	$00[9]
0aa1e     0A 05 00 F0 
0aa22     40 00 00 8F 
0aa26     80 00 00 00 
0aa2a     00 00 01 53 | 	byte	$0a, $05, $00, $f0, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53
0aa2e     20 00 00 00 
0aa32     00 00 00 00 
0aa36     00 00 00 00 
0aa3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa3e     00 00 00 E2 
0aa42     40 00 00 D6 
0aa46     60 00 00 00 
0aa4a     00 00 01 2E | 	byte	$00, $00, $00, $e2, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $2e
0aa4e     20 00 00 00 
0aa52     00 00 00 00 
0aa56     00 00 00 00 
0aa5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa5e     00 00 00 00 
0aa62     00 00 00    | 	byte	$00[7]
0aa65     7F 70 00 00 
0aa69     00 00 00 00 
0aa6d     00 00 00 00 
0aa71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa75     00 00 00 00 
0aa79     00 00 00 00 
0aa7d     00          | 	byte	$00[9]
0aa7e     0A 05 00 00 
0aa82     00 00 00 A0 
0aa86     90 00 00 00 
0aa8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0aa8e     00 00 00 00 
0aa92     00 00 00 00 
0aa96     00 00 00 00 
0aa9a     00 00 00 00 
0aa9e     00 00 00    | 	byte	$00[19]
0aaa1     F0 40 00 00 
0aaa5     D6 60 00 00 
0aaa9     00 00 00 01 
0aaad     2E 20 00 00 | 	byte	$f0, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $2e, $20, $00, $00
0aab1     00 00 00 00 
0aab5     00 00 00 00 
0aab9     00 00 00 00 
0aabd     00 00 00 00 | 	byte	$00[16]
0aac1     E2 40 00 00 
0aac5     D6 60 00 00 
0aac9     00 00 00 00 
0aacd     97 20 00 00 | 	byte	$e2, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $97, $20, $00, $00
0aad1     00 00 00 00 
0aad5     00 00 00 00 
0aad9     00 00 00 00 
0aadd     00 00 00 00 
0aae1     00 00 00 00 | 	byte	$00[20]
0aae5     8F 80 00 00 
0aae9     00 00 00 01 
0aaed     2E 20 00 00 
0aaf1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $2e, $20, $00, $00, $00, $00, $00, $00
0aaf5     00 00 00 00 
0aaf9     00 00 00 00 
0aafd     00 00 00 00 
0ab01     00 00 00 00 | 	byte	$00[16]
0ab05     A0 90 00 00 
0ab09     00 00 00 00 
0ab0d     00 00 00 00 
0ab11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab15     00 00 00 00 
0ab19     00 00 00 00 
0ab1d     00          | 	byte	$00[9]
0ab1e     0A 05 00 CA 
0ab22     40 00 00 A0 
0ab26     90 00 00 00 
0ab2a     00 00 02 1A | 	byte	$0a, $05, $00, $ca, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $02, $1a
0ab2e     20 00 00 00 
0ab32     00 00 00 00 
0ab36     00 00 00 00 
0ab3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab3e     00 00 00 B4 
0ab42     4F 07 00 D6 
0ab46     60 00 01 7D 
0ab4a     10 00 01 FC | 	byte	$00, $00, $00, $b4, $4f, $07, $00, $d6, $60, $00, $01, $7d, $10, $00, $01, $fc
0ab4e     20 00 00 00 
0ab52     00 00 00 00 
0ab56     00 00 00 00 
0ab5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab5e     00 00 00 00 
0ab62     00 00 00    | 	byte	$00[7]
0ab65     7F 70 00 00 
0ab69     00 00 00 00 
0ab6d     00 00 00 00 
0ab71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab75     00 00 00 00 
0ab79     00 00 00 00 
0ab7d     00          | 	byte	$00[9]
0ab7e     0A 05 00 00 
0ab82     00 00 00 A0 
0ab86     90 00 00 00 
0ab8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0ab8e     00 00 00 00 
0ab92     00 00 00 00 
0ab96     00 00 00 00 
0ab9a     00 00 00 00 
0ab9e     00 00 00 00 
0aba2     00 00 00    | 	byte	$00[23]
0aba5     D6 60 00 00 
0aba9     00 00 00 01 
0abad     FC 20 00 00 
0abb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0abb5     00 00 00 00 
0abb9     00 00 00 00 
0abbd     00 00 00 00 
0abc1     00 00 00 00 | 	byte	$00[16]
0abc5     D6 60 00 00 
0abc9     00 00 00 00 
0abcd     FE 20 00 00 
0abd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0abd5     00 00 00 00 
0abd9     00 00 00 00 
0abdd     00 00 00 00 | 	byte	$00[12]
0abe1     B4 40 00 00 
0abe5     8F 80 00 00 
0abe9     00 00 00 01 
0abed     FC 20 00 00 | 	byte	$b4, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0abf1     00 00 00 00 
0abf5     00 00 00 00 
0abf9     00 00 00 00 
0abfd     00 00 00 00 | 	byte	$00[16]
0ac01     97 40 00 00 
0ac05     A0 90 00 00 
0ac09     00 00 00 00 
0ac0d     00 00 00 00 | 	byte	$97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac11     00 00 00 00 
0ac15     00 00 00 00 
0ac19     00 00 00 00 
0ac1d     00          | 	byte	$00[13]
0ac1e     0A 05 00 B4 
0ac22     40 00 00 8F 
0ac26     80 00 00 00 
0ac2a     00 00 01 FC | 	byte	$0a, $05, $00, $b4, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0ac2e     20 00 00 00 
0ac32     00 00 00 00 
0ac36     00 00 00 00 
0ac3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac3e     00 00 00 87 
0ac42     40 00 00 D6 
0ac46     60 00 01 53 
0ac4a     10 00 01 C5 | 	byte	$00, $00, $00, $87, $40, $00, $00, $d6, $60, $00, $01, $53, $10, $00, $01, $c5
0ac4e     20 00 00 00 
0ac52     00 00 00 00 
0ac56     00 00 00 00 
0ac5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac5e     00 00 00 97 
0ac62     40 00 00 7F 
0ac66     70 00 00 00 
0ac6a     00 00 00 00 | 	byte	$00, $00, $00, $97, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0ac6e     00 00 00 00 
0ac72     00 00 00 00 
0ac76     00 00 00 00 
0ac7a     00 00 00 00 | 	byte	$00[16]
0ac7e     0A 05 00 87 
0ac82     40 00 00 A0 
0ac86     90 00 00 00 
0ac8a     00 00 00 00 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0ac8e     00 00 00 00 
0ac92     00 00 00 00 
0ac96     00 00 00 00 
0ac9a     00 00 00 00 
0ac9e     00 00 00    | 	byte	$00[19]
0aca1     87 40 00 00 
0aca5     D6 60 00 00 
0aca9     00 00 00 01 
0acad     C5 20 00 00 | 	byte	$87, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0acb1     00 00 00 00 
0acb5     00 00 00 00 
0acb9     00 00 00 00 
0acbd     00 00 00 00 
0acc1     00 00 00 00 | 	byte	$00[20]
0acc5     D6 60 00 00 
0acc9     00 00 00 00 
0accd     E2 20 00 00 
0acd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $e2, $20, $00, $00, $00, $00, $00, $00
0acd5     00 00 00 00 
0acd9     00 00 00 00 
0acdd     00 00 00 00 | 	byte	$00[12]
0ace1     87 40 00 00 
0ace5     7F 70 00 00 
0ace9     00 00 00 01 
0aced     C5 20 00 00 | 	byte	$87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0acf1     00 00 00 00 
0acf5     00 00 00 00 
0acf9     00 00 00 00 
0acfd     00 00 00 00 | 	byte	$00[16]
0ad01     97 40 00 00 
0ad05     A0 90 00 00 
0ad09     00 00 00 00 
0ad0d     00 00 00 00 | 	byte	$97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad11     00 00 00 00 
0ad15     00 00 00 00 
0ad19     00 00 00 00 
0ad1d     00          | 	byte	$00[13]
0ad1e     0A 05 00 87 
0ad22     40 00 00 8F 
0ad26     80 00 00 00 
0ad2a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0ad2e     20 00 00 00 
0ad32     00 00 00 00 
0ad36     00 00 00 00 
0ad3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad3e     00 00 00 78 
0ad42     40 00 00 D6 
0ad46     60 00 02 5C 
0ad4a     10 00 01 94 | 	byte	$00, $00, $00, $78, $40, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0ad4e     20 00 00 00 
0ad52     00 00 00 00 
0ad56     00 00 00 00 
0ad5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad5e     00 00 00 00 
0ad62     00 00 00    | 	byte	$00[7]
0ad65     7F 70 00 00 
0ad69     00 00 00 00 
0ad6d     00 00 00 00 
0ad71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad75     00 00 00 00 
0ad79     00 00 00 00 
0ad7d     00          | 	byte	$00[9]
0ad7e     0A 05 00 00 
0ad82     00 00 00 A0 
0ad86     90 00 00 00 
0ad8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0ad8e     00 00 00 00 
0ad92     00 00 00 00 
0ad96     00 00 00 00 
0ad9a     00 00 00 00 
0ad9e     00 00 00 00 
0ada2     00 00 00    | 	byte	$00[23]
0ada5     D6 60 00 00 
0ada9     00 00 00 01 
0adad     94 20 00 00 
0adb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
0adb5     00 00 00 00 
0adb9     00 00 00 00 
0adbd     00 00 00 00 
0adc1     00 00 00 00 | 	byte	$00[16]
0adc5     D6 60 00 00 
0adc9     00 00 00 00 
0adcd     CA 20 00 00 
0add1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
0add5     00 00 00 00 
0add9     00 00 00 00 
0addd     00 00 00 00 | 	byte	$00[12]
0ade1     87 40 00 00 
0ade5     7F 70 00 00 
0ade9     00 00 00 01 
0aded     94 20 00 00 | 	byte	$87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00
0adf1     00 00 00 00 
0adf5     00 00 00 00 
0adf9     00 00 00 00 
0adfd     00 00 00 00 
0ae01     00 00 00 00 | 	byte	$00[20]
0ae05     A0 90 00 00 
0ae09     00 00 00 00 
0ae0d     00 00 00 00 
0ae11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae15     00 00 00 00 
0ae19     00 00 00 00 
0ae1d     00          | 	byte	$00[9]
0ae1e     0A 05 00 87 
0ae22     40 00 00 8F 
0ae26     80 00 00 00 
0ae2a     00 00 01 C5 | 	byte	$0a, $05, $00, $87, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0ae2e     20 00 00 78 
0ae32     40 00 00 00 
0ae36     00 00 00 00 
0ae3a     00 00 00 00 | 	byte	$20, $00, $00, $78, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae3e     00 00 00 B4 
0ae42     40 00 00 D6 
0ae46     60 00 00 00 
0ae4a     00 00 01 94 | 	byte	$00, $00, $00, $b4, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94
0ae4e     20 00 00 00 
0ae52     00 00 00 00 
0ae56     00 00 00 00 
0ae5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae5e     00 00 00 00 
0ae62     00 00 00    | 	byte	$00[7]
0ae65     7F 70 00 00 
0ae69     00 00 00 00 
0ae6d     00 00 00 00 
0ae71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae75     00 00 00 00 
0ae79     00 00 00 00 
0ae7d     00          | 	byte	$00[9]
0ae7e     0A 05 00 00 
0ae82     00 00 00 A0 
0ae86     90 00 00 00 
0ae8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0ae8e     00 00 00 00 
0ae92     00 00 00 00 
0ae96     00 00 00 00 
0ae9a     00 00 00 00 
0ae9e     00 00 00 00 
0aea2     00 00 00    | 	byte	$00[23]
0aea5     D6 60 00 00 
0aea9     00 00 00 01 
0aead     94 20 00 00 
0aeb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
0aeb5     00 00 00 00 
0aeb9     00 00 00 00 
0aebd     00 00 00 00 
0aec1     00 00 00 00 | 	byte	$00[16]
0aec5     D6 60 00 00 
0aec9     00 00 00 00 
0aecd     CA 20 00 00 
0aed1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00, $00, $00, $00
0aed5     00 00 00 00 
0aed9     00 00 00 00 
0aedd     00 00 00 00 
0aee1     00 00 00 00 | 	byte	$00[16]
0aee5     8F 80 00 00 
0aee9     00 00 00 01 
0aeed     94 20 00 00 
0aef1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00, $00, $00, $00
0aef5     00 00 00 00 
0aef9     00 00 00 00 
0aefd     00 00 00 00 
0af01     00 00 00 00 | 	byte	$00[16]
0af05     A0 90 00 00 
0af09     00 00 00 00 
0af0d     00 00 00 00 
0af11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af15     00 00 00 00 
0af19     00 00 00 00 
0af1d     00          | 	byte	$00[9]
0af1e     0A 05 00 00 
0af22     00 00 00 A0 
0af26     90 00 00 00 
0af2a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $c5
0af2e     20 00 00 00 
0af32     00 00 00 00 
0af36     00 00 00 00 
0af3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af3e     00 00 00 B4 
0af42     4F 07 00 D6 
0af46     60 00 01 7D 
0af4a     10 00 01 FC | 	byte	$00, $00, $00, $b4, $4f, $07, $00, $d6, $60, $00, $01, $7d, $10, $00, $01, $fc
0af4e     20 00 00 00 
0af52     00 00 00 00 
0af56     00 00 00 00 
0af5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af5e     00 00 00 00 
0af62     00 00 00    | 	byte	$00[7]
0af65     7F 70 00 00 
0af69     00 00 00 00 
0af6d     00 00 00 00 
0af71     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af75     00 00 00 00 
0af79     00 00 00 00 
0af7d     00          | 	byte	$00[9]
0af7e     0A 05 00 00 
0af82     00 00 00 A0 
0af86     90 00 00 00 
0af8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0af8e     00 00 00 00 
0af92     00 00 00 00 
0af96     00 00 00 00 
0af9a     00 00 00 00 
0af9e     00 00 00 00 
0afa2     00 00 00    | 	byte	$00[23]
0afa5     D6 60 00 00 
0afa9     00 00 00 01 
0afad     FC 20 00 00 
0afb1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0afb5     00 00 00 00 
0afb9     00 00 00 00 
0afbd     00 00 00 00 
0afc1     00 00 00 00 | 	byte	$00[16]
0afc5     D6 60 00 00 
0afc9     00 00 00 00 
0afcd     FE 20 00 00 
0afd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0afd5     00 00 00 00 
0afd9     00 00 00 00 
0afdd     00 00 00 00 
0afe1     00 00 00 00 | 	byte	$00[16]
0afe5     8F 80 00 00 
0afe9     00 00 00 01 
0afed     FC 20 00 00 
0aff1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0aff5     00 00 00 00 
0aff9     00 00 00 00 
0affd     00 00 00 00 
0b001     00 00 00 00 | 	byte	$00[16]
0b005     A0 90 00 00 
0b009     00 00 00 00 
0b00d     00 00 00 00 
0b011     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b015     00 00 00 00 
0b019     00 00 00 00 
0b01d     00          | 	byte	$00[9]
0b01e     0A 05 00 00 
0b022     00 00 00 8F 
0b026     80 00 00 00 
0b02a     00 00 01 FC | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0b02e     20 00 00 00 
0b032     00 00 00 00 
0b036     00 00 00 00 
0b03a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b03e     00 00 00 78 
0b042     40 00 00 D6 
0b046     60 00 02 A6 
0b04a     10 00 01 C5 | 	byte	$00, $00, $00, $78, $40, $00, $00, $d6, $60, $00, $02, $a6, $10, $00, $01, $c5
0b04e     20 00 00 00 
0b052     00 00 00 00 
0b056     00 00 00 00 
0b05a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b05e     00 00 00 87 
0b062     40 00 00 7F 
0b066     70 00 00 00 
0b06a     00 00 00 00 | 	byte	$00, $00, $00, $87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0b06e     00 00 00 00 
0b072     00 00 00 00 
0b076     00 00 00 00 
0b07a     00 00 00 00 | 	byte	$00[16]
0b07e     0A 05 00 97 
0b082     40 00 00 A0 
0b086     90 00 00 00 
0b08a     00 00 00 00 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0b08e     00 00 00 00 
0b092     00 00 00 00 
0b096     00 00 00 00 
0b09a     00 00 00 00 
0b09e     00 00 00    | 	byte	$00[19]
0b0a1     87 40 00 00 
0b0a5     D6 60 00 00 
0b0a9     00 00 00 01 
0b0ad     C5 20 00 00 | 	byte	$87, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0b0b1     00 00 00 00 
0b0b5     00 00 00 00 
0b0b9     00 00 00 00 
0b0bd     00 00 00 00 
0b0c1     00 00 00 00 | 	byte	$00[20]
0b0c5     D6 60 00 00 
0b0c9     00 00 00 00 
0b0cd     E2 20 00 00 
0b0d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $e2, $20, $00, $00, $00, $00, $00, $00
0b0d5     00 00 00 00 
0b0d9     00 00 00 00 
0b0dd     00 00 00 00 | 	byte	$00[12]
0b0e1     87 40 00 00 
0b0e5     7F 70 00 00 
0b0e9     00 00 00 01 
0b0ed     C5 20 00 00 | 	byte	$87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0b0f1     00 00 00 00 
0b0f5     00 00 00 00 
0b0f9     00 00 00 00 
0b0fd     00 00 00 00 
0b101     00 00 00 00 | 	byte	$00[20]
0b105     A0 90 00 00 
0b109     00 00 00 00 
0b10d     00 00 00 00 
0b111     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b115     00 00 00 00 
0b119     00 00 00 00 
0b11d     00          | 	byte	$00[9]
0b11e     0A 05 00 97 
0b122     40 00 00 8F 
0b126     80 00 00 00 
0b12a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0b12e     20 00 00 87 
0b132     40 00 00 00 
0b136     00 00 00 00 
0b13a     00 00 00 00 | 	byte	$20, $00, $00, $87, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b13e     00 00 00 97 
0b142     40 00 00 D6 
0b146     60 00 01 FC 
0b14a     10 00 01 53 | 	byte	$00, $00, $00, $97, $40, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $53
0b14e     20 00 00 00 
0b152     00 00 00 00 
0b156     00 00 00 00 
0b15a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b15e     00 00 00 00 
0b162     00 00 00    | 	byte	$00[7]
0b165     7F 70 00 00 
0b169     00 00 00 00 
0b16d     00 00 00 00 
0b171     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b175     00 00 00 00 
0b179     00 00 00 00 
0b17d     00          | 	byte	$00[9]
0b17e     0A 05 00 00 
0b182     00 00 00 A0 
0b186     90 00 00 00 
0b18a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0b18e     00 00 00 00 
0b192     00 00 00 00 
0b196     00 00 00 00 
0b19a     00 00 00 00 
0b19e     00 00 00 00 
0b1a2     00 00 00    | 	byte	$00[23]
0b1a5     D6 60 00 00 
0b1a9     00 00 00 01 
0b1ad     53 20 00 00 
0b1b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0b1b5     00 00 00 00 
0b1b9     00 00 00 00 
0b1bd     00 00 00 00 
0b1c1     00 00 00 00 | 	byte	$00[16]
0b1c5     D6 60 00 00 
0b1c9     00 00 00 00 
0b1cd     AA 20 00 00 
0b1d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0b1d5     00 00 00 00 
0b1d9     00 00 00 00 
0b1dd     00 00 00 00 
0b1e1     00 00 00 00 | 	byte	$00[16]
0b1e5     7F 70 00 00 
0b1e9     00 00 00 01 
0b1ed     53 20 00 00 
0b1f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0b1f5     00 00 00 00 
0b1f9     00 00 00 00 
0b1fd     00 00 00 00 
0b201     00 00 00 00 | 	byte	$00[16]
0b205     A0 90 00 00 
0b209     00 00 00 00 
0b20d     00 00 00 00 
0b211     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b215     00 00 00 00 
0b219     00 00 00 00 
0b21d     00          | 	byte	$00[9]
0b21e     0A 05 00 A0 
0b222     40 00 00 8F 
0b226     80 00 00 00 
0b22a     00 00 01 68 | 	byte	$0a, $05, $00, $a0, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $68
0b22e     20 00 00 00 
0b232     00 00 00 00 
0b236     00 00 00 00 
0b23a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b23e     00 00 00 97 
0b242     40 00 00 D6 
0b246     60 00 00 00 
0b24a     00 00 01 53 | 	byte	$00, $00, $00, $97, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53
0b24e     20 00 00 00 
0b252     00 00 00 00 
0b256     00 00 00 00 
0b25a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b25e     00 00 00 00 
0b262     00 00 00    | 	byte	$00[7]
0b265     7F 70 00 00 
0b269     00 00 00 00 
0b26d     00 00 00 00 
0b271     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b275     00 00 00 00 
0b279     00 00 00 00 
0b27d     00          | 	byte	$00[9]
0b27e     0A 05 00 00 
0b282     00 00 00 A0 
0b286     90 00 00 00 
0b28a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0b28e     00 00 00 00 
0b292     00 00 00 00 
0b296     00 00 00 00 
0b29a     00 00 00 00 
0b29e     00 00 00 00 
0b2a2     00 00 00    | 	byte	$00[23]
0b2a5     D6 60 00 00 
0b2a9     00 00 00 01 
0b2ad     53 20 00 00 
0b2b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0b2b5     00 00 00 00 
0b2b9     00 00 00 00 
0b2bd     00 00 00 00 
0b2c1     00 00 00 00 | 	byte	$00[16]
0b2c5     D6 60 00 00 
0b2c9     00 00 00 00 
0b2cd     AA 20 00 00 
0b2d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0b2d5     00 00 00 00 
0b2d9     00 00 00 00 
0b2dd     00 00 00 00 
0b2e1     00 00 00 00 | 	byte	$00[16]
0b2e5     8F 80 00 00 
0b2e9     00 00 00 01 
0b2ed     53 20 00 00 
0b2f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0b2f5     00 00 00 00 
0b2f9     00 00 00 00 
0b2fd     00 00 00 00 
0b301     00 00 00 00 | 	byte	$00[16]
0b305     A0 90 00 00 
0b309     00 00 00 00 
0b30d     00 00 00 00 
0b311     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b315     00 00 00 00 
0b319     00 00 00 00 
0b31d     00          | 	byte	$00[9]
0b31e     0A 05 00 00 
0b322     00 00 00 A0 
0b326     90 00 00 00 
0b32a     00 00 01 53 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $53
0b32e     20 00 00 00 
0b332     00 00 00 00 
0b336     00 00 00 00 
0b33a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b33e     00 00 00 00 
      ...             
0d33a     00 00 00 00 
0d33e     00 00 00    | 	byte	$00[8195]
0d341     D6 3C 18 00 
0d345     D6 60 00 01 
0d349     FC 1C 18 01 
0d34d     53 20 00 00 | 	byte	$d6, $3c, $18, $00, $d6, $60, $00, $01, $fc, $1c, $18, $01, $53, $20, $00, $00
0d351     00 00 00 00 
0d355     00 00 00 00 
0d359     00 00 00 00 
0d35d     00 00 00 00 
0d361     00 00 00 00 | 	byte	$00[20]
0d365     7F 70 00 00 
0d369     00 00 00 00 
0d36d     00 00 00 00 
0d371     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d375     00 00 00 00 
0d379     00 00 00 00 
0d37d     00          | 	byte	$00[9]
0d37e     0A 05 00 00 
0d382     04 72 00 A0 
0d386     90 00 00 00 
0d38a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $04, $72, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d38e     00 00 00 00 
0d392     04 00 00 00 
0d396     00 00 00 00 
0d39a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d39e     00 00 00 00 
0d3a2     04 00 00 D6 
0d3a6     60 00 00 00 
0d3aa     00 00 01 53 | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53
0d3ae     20 00 00 00 
0d3b2     04 00 00 00 
0d3b6     00 00 00 00 
0d3ba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d3be     00 00 00 00 
0d3c2     04 00 00 D6 
0d3c6     60 00 00 00 
0d3ca     00 00 00 AA | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $aa
0d3ce     20 00 00 00 
0d3d2     04 00 00 00 
0d3d6     00 00 00 00 
0d3da     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d3de     00 00 00 00 
0d3e2     04 00 00 7F 
0d3e6     70 00 00 00 
0d3ea     00 00 01 53 | 	byte	$00, $00, $00, $00, $04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $53
0d3ee     20 00 00 00 
0d3f2     04 00 00 00 
0d3f6     00 00 00 00 
0d3fa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d3fe     00 00 00 00 
0d402     04 00 00 A0 
0d406     90 00 00 00 
0d40a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d40e     00 00 00 00 
0d412     04 00 00 00 
0d416     00 00 00 00 
0d41a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d41e     0A 05 00 00 
0d422     04 00 00 8F 
0d426     80 00 00 00 
0d42a     00 00 01 53 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53
0d42e     20 00 00 00 
0d432     04 00 00 00 
0d436     00 00 00 00 
0d43a     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d43e     00 00 00 CA 
0d442     00 00 00 D6 
0d446     60 00 02 FA 
0d44a     10 00 01 FC | 	byte	$00, $00, $00, $ca, $00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0d44e     20 00 00 00 
0d452     03 1F 00 00 
0d456     00 00 00 00 
0d45a     00 00 00 00 | 	byte	$20, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d45e     00 00 00 D6 
0d462     03 1F 00 7F 
0d466     70 00 00 00 
0d46a     00 00 00 00 | 	byte	$00, $00, $00, $d6, $03, $1f, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0d46e     00 00 00 00 
0d472     03 1F 00 00 
0d476     00 00 00 00 
0d47a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d47e     0A 05 00 CA 
0d482     03 1F 00 A0 
0d486     90 00 00 00 
0d48a     00 00 00 00 | 	byte	$0a, $05, $00, $ca, $03, $1f, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d48e     00 00 00 00 
0d492     03 1F 00 00 
0d496     00 00 00 00 
0d49a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d49e     00 00 01 0D 
0d4a2     00 00 00 D6 
0d4a6     60 00 00 00 
0d4aa     00 00 01 FC | 	byte	$00, $00, $01, $0d, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc
0d4ae     20 00 00 00 
0d4b2     00 00 00 00 
0d4b6     00 00 00 00 
0d4ba     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d4be     00 00 00 00 
0d4c2     04 72 00 D6 
0d4c6     60 00 00 00 
0d4ca     00 00 00 FE | 	byte	$00, $00, $00, $00, $04, $72, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $fe
0d4ce     20 00 00 00 
0d4d2     04 00 00 00 
0d4d6     00 00 00 00 
0d4da     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d4de     00 00 00 00 
0d4e2     04 00 00 7F 
0d4e6     70 00 00 00 
0d4ea     00 00 01 FC | 	byte	$00, $00, $00, $00, $04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc
0d4ee     20 00 00 00 
0d4f2     04 00 00 00 
0d4f6     00 00 00 00 
0d4fa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d4fe     00 00 00 00 
0d502     04 00 00 A0 
0d506     90 00 02 A6 
0d50a     10 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $a0, $90, $00, $02, $a6, $10, $00, $00, $00
0d50e     00 00 00 00 
0d512     04 00 00 00 
0d516     00 00 00 00 
0d51a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d51e     0A 05 00 F0 
0d522     00 00 00 8F 
0d526     80 00 00 00 
0d52a     00 00 01 C5 | 	byte	$0a, $05, $00, $f0, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0d52e     20 00 00 00 
0d532     03 1F 00 00 
0d536     00 00 00 00 
0d53a     00 00 00 00 | 	byte	$20, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d53e     00 00 01 40 
0d542     00 00 00 D6 
0d546     60 00 02 5C 
0d54a     10 00 01 94 | 	byte	$00, $00, $01, $40, $00, $00, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0d54e     20 00 00 00 
0d552     00 00 00 00 
0d556     00 00 00 00 
0d55a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d55e     00 00 00 00 
0d562     00 00 00    | 	byte	$00[7]
0d565     7F 70 00 00 
0d569     00 00 00 00 
0d56d     00 00 00 00 
0d571     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d575     00 00 00 00 
0d579     00 00 00 00 
0d57d     00          | 	byte	$00[9]
0d57e     0A 05 00 00 
0d582     04 72 00 A0 
0d586     90 00 00 00 
0d58a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $04, $72, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d58e     00 00 00 00 
0d592     04 00 00 00 
0d596     00 00 00 00 
0d59a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d59e     00 00 00 00 
0d5a2     04 00 00 D6 
0d5a6     60 00 00 00 
0d5aa     00 00 01 94 | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94
0d5ae     20 00 00 00 
0d5b2     04 00 00 00 
0d5b6     00 00 00 00 
0d5ba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d5be     00 00 00 00 
0d5c2     04 00 00 D6 
0d5c6     60 00 00 00 
0d5ca     00 00 00 CA | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $ca
0d5ce     20 00 00 00 
0d5d2     04 00 00 00 
0d5d6     00 00 00 00 
0d5da     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d5de     00 00 01 0D 
0d5e2     00 00 00 7F 
0d5e6     70 00 00 00 
0d5ea     00 00 01 94 | 	byte	$00, $00, $01, $0d, $00, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $94
0d5ee     20 00 00 00 
0d5f2     00 00 00 00 
0d5f6     00 00 00 00 
0d5fa     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d5fe     00 00 00 F0 
0d602     00 00 00 A0 
0d606     90 00 00 00 
0d60a     00 00 00 00 | 	byte	$00, $00, $00, $f0, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d60e     00 00 00 00 
0d612     00 00 00 00 
0d616     00 00 00 00 
0d61a     00 00 00 00 | 	byte	$00[16]
0d61e     0A 05 00 00 
0d622     00 00 00 8F 
0d626     80 00 00 00 
0d62a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0d62e     20 00 00 00 
0d632     00 00 00 00 
0d636     00 00 00 00 
0d63a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d63e     00 00 00 F0 
0d642     00 00 00 D6 
0d646     60 00 02 FA 
0d64a     10 00 01 FC | 	byte	$00, $00, $00, $f0, $00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0d64e     20 00 00 00 
0d652     03 1F 00 00 
0d656     00 00 00 00 
0d65a     00 00 00 00 | 	byte	$20, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d65e     00 00 01 0D 
0d662     03 1F 00 7F 
0d666     70 00 00 00 
0d66a     00 00 00 00 | 	byte	$00, $00, $01, $0d, $03, $1f, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0d66e     00 00 00 00 
0d672     03 1F 00 00 
0d676     00 00 00 00 
0d67a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d67e     0A 05 00 F0 
0d682     03 1F 00 A0 
0d686     90 00 00 00 
0d68a     00 00 00 00 | 	byte	$0a, $05, $00, $f0, $03, $1f, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0d68e     00 00 00 00 
0d692     03 1F 00 00 
0d696     00 00 00 00 
0d69a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d69e     00 00 00 D6 
0d6a2     00 00 00 D6 
0d6a6     60 00 00 00 
0d6aa     00 00 01 FC | 	byte	$00, $00, $00, $d6, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc
0d6ae     20 00 00 00 
0d6b2     00 00 00 00 
0d6b6     00 00 00 00 
0d6ba     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d6be     00 00 00 00 
0d6c2     00 00 00    | 	byte	$00[7]
0d6c5     D6 60 00 00 
0d6c9     00 00 00 00 
0d6cd     FE 20 00 00 
0d6d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0d6d5     00 00 00 00 
0d6d9     00 00 00 00 
0d6dd     00 00 00 00 | 	byte	$00[12]
0d6e1     D6 00 00 00 
0d6e5     7F 70 00 00 
0d6e9     00 00 00 01 
0d6ed     FC 20 00 00 | 	byte	$d6, $00, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0d6f1     00 03 1F 00 
0d6f5     00 00 00 00 
0d6f9     00 00 00 00 
0d6fd     00 00 00 00 | 	byte	$00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d701     F0 03 1F 00 
0d705     A0 90 00 00 
0d709     00 00 00 00 
0d70d     00 00 00 00 | 	byte	$f0, $03, $1f, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d711     00 03 1F 00 
0d715     00 00 00 00 
0d719     00 00 00 00 
0d71d     00 0A 05 01 | 	byte	$00, $03, $1f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $01
0d721     0D 00 00 00 
0d725     8F 80 00 00 
0d729     00 00 00 01 
0d72d     C5 20 00 00 | 	byte	$0d, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0d731     00 00 00 00 
0d735     00 00 00 00 
0d739     00 00 00 00 
0d73d     00 00 00 00 | 	byte	$00[16]
0d741     D6 3C 18 00 
0d745     D6 60 00 01 
0d749     FC 1C 18 01 
0d74d     53 2F 07 00 | 	byte	$d6, $3c, $18, $00, $d6, $60, $00, $01, $fc, $1c, $18, $01, $53, $2f, $07, $00
0d751     00 00 00 00 
0d755     00 00 00 00 
0d759     00 00 00 00 
0d75d     00 00 00 00 
0d761     00          | 	byte	$00[17]
0d762     04 72 00 7F 
0d766     70 00 00 00 
0d76a     00 00 00 00 
0d76e     00 00 00 00 | 	byte	$04, $72, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d772     04 00 00 00 
0d776     00 00 00 00 
0d77a     00 00 00 00 
0d77e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0d782     04 00 00 A0 
0d786     90 00 00 00 
0d78a     00 00 00 00 
0d78e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d792     04 00 00 00 
0d796     00 00 00 00 
0d79a     00 00 00 00 
0d79e     00 00 00 B4 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $b4
0d7a2     00 00 00 D6 
0d7a6     60 00 00 00 
0d7aa     00 00 01 53 
0d7ae     20 00 00 00 | 	byte	$00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0d7b2     04 00 00 00 
0d7b6     00 00 00 00 
0d7ba     00 00 00 00 
0d7be     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d7c2     04 00 00 D6 
0d7c6     60 00 00 00 
0d7ca     00 00 00 AA 
0d7ce     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00
0d7d2     04 00 00 00 
0d7d6     00 00 00 00 
0d7da     00 00 00 00 
0d7de     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d7e2     04 00 00 7F 
0d7e6     70 00 00 00 
0d7ea     00 00 01 53 
0d7ee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0d7f2     04 00 00 00 
0d7f6     00 00 00 00 
0d7fa     00 00 00 00 
0d7fe     00 00 00 87 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $87
0d802     00 00 00 A0 
0d806     90 00 00 00 
0d80a     00 00 00 00 
0d80e     00 00 00 00 | 	byte	$00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d812     04 00 00 00 
0d816     00 00 00 00 
0d81a     00 00 00 00 
0d81e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0d822     04 00 00 8F 
0d826     80 00 00 00 
0d82a     00 00 01 53 
0d82e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0d832     04 00 00 00 
0d836     00 00 00 00 
0d83a     00 00 00 00 
0d83e     00 00 00 87 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $87
0d842     00 00 00 D6 
0d846     60 00 02 FA 
0d84a     10 00 01 FC 
0d84e     20 00 00 00 | 	byte	$00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00
0d852     04 00 00 00 
0d856     00 00 00 00 
0d85a     00 00 00 00 
0d85e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d862     04 00 00 7F 
0d866     70 00 00 00 
0d86a     00 00 00 00 
0d86e     00 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d872     04 00 00 00 
0d876     00 00 00 00 
0d87a     00 00 00 00 
0d87e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0d882     04 00 00 A0 
0d886     90 00 00 00 
0d88a     00 00 00 00 
0d88e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d892     04 00 00 00 
0d896     00 00 00 00 
0d89a     00 00 00 00 
0d89e     00 00 00 8F | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $8f
0d8a2     00 00 00 D6 
0d8a6     60 00 00 00 
0d8aa     00 00 01 FC 
0d8ae     20 00 00 00 | 	byte	$00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
0d8b2     04 00 00 00 
0d8b6     00 00 00 00 
0d8ba     00 00 00 00 
0d8be     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d8c2     04 00 00 D6 
0d8c6     60 00 00 00 
0d8ca     00 00 00 FE 
0d8ce     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00
0d8d2     04 00 00 00 
0d8d6     00 00 00 00 
0d8da     00 00 00 00 
0d8de     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d8e2     04 00 00 7F 
0d8e6     70 00 00 00 
0d8ea     00 00 01 FC 
0d8ee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
0d8f2     04 00 00 00 
0d8f6     00 00 00 00 
0d8fa     00 00 00 00 
0d8fe     00 00 00 B4 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $b4
0d902     00 00 00 A0 
0d906     90 00 02 A6 
0d90a     10 00 00 00 
0d90e     00 00 00 00 | 	byte	$00, $00, $00, $a0, $90, $00, $02, $a6, $10, $00, $00, $00, $00, $00, $00, $00
0d912     04 00 00 00 
0d916     00 00 00 00 
0d91a     00 00 00 00 
0d91e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0d922     04 00 00 8F 
0d926     80 00 00 00 
0d92a     00 00 01 C5 
0d92e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
0d932     04 00 00 00 
0d936     00 00 00 00 
0d93a     00 00 00 00 
0d93e     00 00 00 A0 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $a0
0d942     03 01 00 D6 
0d946     60 00 02 5C 
0d94a     10 00 01 94 
0d94e     20 00 00 00 | 	byte	$03, $01, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94, $20, $00, $00, $00
0d952     03 01 00 00 
0d956     00 00 00 00 
0d95a     00 00 00 00 
0d95e     00 00 00 00 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d962     03 01 00 7F 
0d966     70 00 00 00 
0d96a     00 00 00 00 
0d96e     00 00 00 00 | 	byte	$03, $01, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d972     03 01 00 00 
0d976     00 00 00 00 
0d97a     00 00 00 00 
0d97e     0A 05 00 00 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0d982     04 00 00 A0 
0d986     90 00 00 00 
0d98a     00 00 00 00 
0d98e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d992     04 00 00 00 
0d996     00 00 00 00 
0d99a     00 00 00 00 
0d99e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d9a2     04 00 00 D6 
0d9a6     60 00 00 00 
0d9aa     00 00 01 94 
0d9ae     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00
0d9b2     04 00 00 00 
0d9b6     00 00 00 00 
0d9ba     00 00 00 00 
0d9be     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d9c2     04 00 00 D6 
0d9c6     60 00 00 00 
0d9ca     00 00 00 CA 
0d9ce     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00
0d9d2     04 00 00 00 
0d9d6     00 00 00 00 
0d9da     00 00 00 00 
0d9de     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d9e2     04 00 00 7F 
0d9e6     70 00 00 00 
0d9ea     00 00 01 94 
0d9ee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00
0d9f2     04 00 00 00 
0d9f6     00 00 00 00 
0d9fa     00 00 00 00 
0d9fe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da02     04 00 00 A0 
0da06     90 00 00 00 
0da0a     00 00 00 00 
0da0e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da12     04 00 00 00 
0da16     00 00 00 00 
0da1a     00 00 00 00 
0da1e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0da22     04 00 00 8F 
0da26     80 00 00 00 
0da2a     00 00 01 C5 
0da2e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
0da32     04 00 00 00 
0da36     00 00 00 00 
0da3a     00 00 00 00 
0da3e     00 00 00 78 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $78
0da42     00 00 00 D6 
0da46     60 00 02 FA 
0da4a     10 00 01 FC 
0da4e     20 00 00 00 | 	byte	$00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00
0da52     04 00 00 00 
0da56     00 00 00 00 
0da5a     00 00 00 00 
0da5e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da62     04 00 00 7F 
0da66     70 00 00 00 
0da6a     00 00 00 00 
0da6e     00 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da72     04 00 00 00 
0da76     00 00 00 00 
0da7a     00 00 00 00 
0da7e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0da82     04 00 00 A0 
0da86     90 00 00 00 
0da8a     00 00 00 00 
0da8e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0da92     04 00 00 00 
0da96     00 00 00 00 
0da9a     00 00 00 00 
0da9e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0daa2     04 00 00 D6 
0daa6     60 00 00 00 
0daaa     00 00 01 FC 
0daae     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
0dab2     04 00 00 00 
0dab6     00 00 00 00 
0daba     00 00 00 00 
0dabe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dac2     04 00 00 D6 
0dac6     60 00 00 00 
0daca     00 00 00 FE 
0dace     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00
0dad2     04 00 00 00 
0dad6     00 00 00 00 
0dada     00 00 00 00 
0dade     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dae2     04 00 00 7F 
0dae6     70 00 00 00 
0daea     00 00 01 FC 
0daee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00
0daf2     04 00 00 00 
0daf6     00 00 00 00 
0dafa     00 00 00 00 
0dafe     00 00 00 8F | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $8f
0db02     00 00 00 A0 
0db06     90 00 00 00 
0db0a     00 00 00 00 
0db0e     00 00 00 00 | 	byte	$00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0db12     04 00 00 00 
0db16     00 00 00 00 
0db1a     00 00 00 00 
0db1e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0db22     04 00 00 8F 
0db26     80 00 00 00 
0db2a     00 00 01 C5 
0db2e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
0db32     04 00 00 00 
0db36     00 00 00 00 
0db3a     00 00 00 00 
0db3e     00 00 00 A0 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $a0
0db42     3C 18 00 D6 
0db46     60 00 02 5C 
0db4a     10 00 01 94 
0db4e     20 00 00 00 | 	byte	$3c, $18, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94, $20, $00, $00, $00
0db52     00 00 00 00 
0db56     00 00 00 00 
0db5a     00 00 00 00 
0db5e     00 00 00 00 | 	byte	$00[16]
0db62     04 72 00 7F 
0db66     70 00 00 00 
0db6a     00 00 00 00 
0db6e     00 00 00 00 | 	byte	$04, $72, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0db72     04 00 00 00 
0db76     00 00 00 00 
0db7a     00 00 00 00 
0db7e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0db82     04 00 00 A0 
0db86     90 00 00 00 
0db8a     00 00 00 00 
0db8e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0db92     04 00 00 00 
0db96     00 00 00 00 
0db9a     00 00 00 00 
0db9e     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dba2     04 00 00 D6 
0dba6     60 00 00 00 
0dbaa     00 00 01 94 
0dbae     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00
0dbb2     04 00 00 00 
0dbb6     00 00 00 00 
0dbba     00 00 00 00 
0dbbe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dbc2     04 00 00 D6 
0dbc6     60 00 00 00 
0dbca     00 00 00 CA 
0dbce     20 00 00 00 | 	byte	$04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $ca, $20, $00, $00, $00
0dbd2     04 00 00 00 
0dbd6     00 00 00 00 
0dbda     00 00 00 00 
0dbde     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dbe2     04 00 00 7F 
0dbe6     70 00 00 00 
0dbea     00 00 01 94 
0dbee     20 00 00 00 | 	byte	$04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $94, $20, $00, $00, $00
0dbf2     04 00 00 00 
0dbf6     00 00 00 00 
0dbfa     00 00 00 00 
0dbfe     00 00 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dc02     04 00 00 A0 
0dc06     90 00 00 00 
0dc0a     00 00 00 00 
0dc0e     00 00 00 00 | 	byte	$04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dc12     04 00 00 00 
0dc16     00 00 00 00 
0dc1a     00 00 00 00 
0dc1e     0A 05 00 00 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $00
0dc22     04 00 00 8F 
0dc26     80 00 00 00 
0dc2a     00 00 01 C5 
0dc2e     20 00 00 00 | 	byte	$04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $00
0dc32     04 00 00 00 
0dc36     00 00 00 00 
0dc3a     00 00 00 00 
0dc3e     00 00 00 87 | 	byte	$04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $87
0dc42     00 00 00 D6 
0dc46     60 00 02 FA 
0dc4a     10 00 01 FC 
0dc4e     20 00 00 00 | 	byte	$00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc, $20, $00, $00, $00
0dc52     00 00 00 00 
0dc56     00 00 00 00 
0dc5a     00 00 00 00 
0dc5e     00 00 00    | 	byte	$00[15]
0dc61     8F 00 00 00 
0dc65     7F 70 00 00 
0dc69     00 00 00 00 
0dc6d     00 00 00 00 | 	byte	$8f, $00, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dc71     00 00 00 00 
0dc75     00 00 00 00 
0dc79     00 00 00 00 
0dc7d     00          | 	byte	$00[13]
0dc7e     0A 05 00 00 
0dc82     00 00 00 A0 
0dc86     90 00 00 00 
0dc8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0dc8e     00 00 00 00 
0dc92     00 00 00 00 
0dc96     00 00 00 00 
0dc9a     00 00 00 00 
0dc9e     00 00 00    | 	byte	$00[19]
0dca1     B4 00 00 00 
0dca5     D6 60 00 00 
0dca9     00 00 00 01 
0dcad     FC 20 00 00 | 	byte	$b4, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0dcb1     00 00 00 00 
0dcb5     00 00 00 00 
0dcb9     00 00 00 00 
0dcbd     00 00 00 00 
0dcc1     00 00 00 00 | 	byte	$00[20]
0dcc5     D6 60 00 00 
0dcc9     00 00 00 00 
0dccd     FE 20 00 00 
0dcd1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0dcd5     00 00 00 00 
0dcd9     00 00 00 00 
0dcdd     00 00 00 00 | 	byte	$00[12]
0dce1     87 00 00 00 
0dce5     8F 80 00 00 
0dce9     00 00 00 01 
0dced     FC 20 00 00 | 	byte	$87, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0dcf1     00 00 00 00 
0dcf5     00 00 00 00 
0dcf9     00 00 00 00 
0dcfd     00 00 00 00 
0dd01     00 00 00 00 | 	byte	$00[20]
0dd05     A0 90 00 00 
0dd09     00 00 00 00 
0dd0d     00 00 00 00 
0dd11     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd15     00 00 00 00 
0dd19     00 00 00 00 
0dd1d     00          | 	byte	$00[9]
0dd1e     0A 05 00 B4 
0dd22     00 00 00 8F 
0dd26     80 00 00 00 
0dd2a     00 00 01 C5 | 	byte	$0a, $05, $00, $b4, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0dd2e     20 00 00 00 
0dd32     00 00 00 00 
0dd36     00 00 00 00 
0dd3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd3e     00 00 00 A0 
0dd42     03 01 00 D6 
0dd46     60 00 01 FC 
0dd4a     10 00 01 94 | 	byte	$00, $00, $00, $a0, $03, $01, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $94
0dd4e     20 00 00 00 
0dd52     03 01 00 00 
0dd56     00 00 00 00 
0dd5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd5e     00 00 00 00 
0dd62     03 01 00 7F 
0dd66     70 00 00 00 
0dd6a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $01, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0dd6e     00 00 00 00 
0dd72     04 72 00 00 
0dd76     00 00 00 00 
0dd7a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $72, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd7e     0A 05 00 00 
0dd82     04 00 00 A0 
0dd86     90 00 00 00 
0dd8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0dd8e     00 00 00 00 
0dd92     04 00 00 00 
0dd96     00 00 00 00 
0dd9a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dd9e     00 00 00 00 
0dda2     04 00 00 D6 
0dda6     60 00 00 00 
0ddaa     00 00 01 94 | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94
0ddae     20 00 00 00 
0ddb2     04 00 00 00 
0ddb6     00 00 00 00 
0ddba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ddbe     00 00 00 00 
0ddc2     04 00 00 D6 
0ddc6     60 00 00 00 
0ddca     00 00 00 CA | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $ca
0ddce     20 00 00 00 
0ddd2     04 00 00 00 
0ddd6     00 00 00 00 
0ddda     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ddde     00 00 00 00 
0dde2     04 00 00 7F 
0dde6     70 00 00 00 
0ddea     00 00 01 94 | 	byte	$00, $00, $00, $00, $04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $94
0ddee     20 00 00 00 
0ddf2     04 00 00 00 
0ddf6     00 00 00 00 
0ddfa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ddfe     00 00 00 00 
0de02     04 00 00 A0 
0de06     90 00 00 00 
0de0a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0de0e     00 00 00 00 
0de12     04 00 00 00 
0de16     00 00 00 00 
0de1a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0de1e     0A 05 00 00 
0de22     04 00 00 8F 
0de26     80 00 00 00 
0de2a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0de2e     20 00 00 00 
0de32     04 00 00 00 
0de36     00 00 00 00 
0de3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0de3e     00 00 00 78 
0de42     00 00 00 D6 
0de46     60 00 02 FA 
0de4a     10 00 01 FC | 	byte	$00, $00, $00, $78, $00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0de4e     20 00 00 00 
0de52     00 00 00 00 
0de56     00 00 00 00 
0de5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0de5e     00 00 00 00 
0de62     00 00 00    | 	byte	$00[7]
0de65     7F 70 00 00 
0de69     00 00 00 00 
0de6d     00 00 00 00 
0de71     00 04 72 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $04, $72, $00
0de75     00 00 00 00 
0de79     00 00 00 00 
0de7d     00          | 	byte	$00[9]
0de7e     0A 05 00 00 
0de82     04 00 00 A0 
0de86     90 00 00 00 
0de8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0de8e     00 00 00 00 
0de92     04 00 00 00 
0de96     00 00 00 00 
0de9a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0de9e     00 00 00 00 
0dea2     04 00 00 D6 
0dea6     60 00 00 00 
0deaa     00 00 01 FC | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc
0deae     20 00 00 00 
0deb2     04 00 00 00 
0deb6     00 00 00 00 
0deba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0debe     00 00 00 00 
0dec2     04 00 00 D6 
0dec6     60 00 00 00 
0deca     00 00 00 FE | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $fe
0dece     20 00 00 00 
0ded2     04 00 00 00 
0ded6     00 00 00 00 
0deda     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dede     00 00 00 00 
0dee2     04 00 00 8F 
0dee6     80 00 00 00 
0deea     00 00 01 FC | 	byte	$00, $00, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0deee     20 00 00 00 
0def2     04 00 00 00 
0def6     00 00 00 00 
0defa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0defe     00 00 00 8F 
0df02     00 00 00 A0 
0df06     90 00 00 00 
0df0a     00 00 00 00 | 	byte	$00, $00, $00, $8f, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0df0e     00 00 00 00 
0df12     00 00 00 00 
0df16     00 00 00 00 
0df1a     00 00 00 00 | 	byte	$00[16]
0df1e     0A 05 00 00 
0df22     00 00 00 8F 
0df26     80 00 00 00 
0df2a     00 00 01 FC | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0df2e     20 00 00 00 
0df32     00 00 00 00 
0df36     00 00 00 00 
0df3a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df3e     00 00 00 A0 
0df42     0C 18 00 D6 
0df46     60 00 02 5C 
0df4a     10 00 01 94 | 	byte	$00, $00, $00, $a0, $0c, $18, $00, $d6, $60, $00, $02, $5c, $10, $00, $01, $94
0df4e     20 00 00 00 
0df52     00 00 00 00 
0df56     00 00 00 00 
0df5a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df5e     00 00 00 00 
0df62     04 72 00 7F 
0df66     70 00 00 00 
0df6a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $72, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0df6e     00 00 00 00 
0df72     04 00 00 00 
0df76     00 00 00 00 
0df7a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df7e     0A 05 00 00 
0df82     04 00 00 A0 
0df86     90 00 00 00 
0df8a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0df8e     00 00 00 00 
0df92     04 00 00 00 
0df96     00 00 00 00 
0df9a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0df9e     00 00 00 00 
0dfa2     04 00 00 D6 
0dfa6     60 00 00 00 
0dfaa     00 00 01 94 | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $94
0dfae     20 00 00 00 
0dfb2     04 00 00 00 
0dfb6     00 00 00 00 
0dfba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dfbe     00 00 00 00 
0dfc2     04 00 00 D6 
0dfc6     60 00 00 00 
0dfca     00 00 00 CA | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $ca
0dfce     20 00 00 00 
0dfd2     04 00 00 00 
0dfd6     00 00 00 00 
0dfda     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dfde     00 00 00 00 
0dfe2     04 00 00 8F 
0dfe6     80 00 00 00 
0dfea     00 00 01 94 | 	byte	$00, $00, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $94
0dfee     20 00 00 00 
0dff2     04 00 00 00 
0dff6     00 00 00 00 
0dffa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0dffe     00 00 00 00 
0e002     04 00 00 A0 
0e006     90 00 00 00 
0e00a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0e00e     00 00 00 00 
0e012     04 00 00 00 
0e016     00 00 00 00 
0e01a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e01e     0A 05 00 00 
0e022     04 00 00 8F 
0e026     80 00 00 00 
0e02a     00 00 01 C5 | 	byte	$0a, $05, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0e02e     20 00 00 00 
0e032     04 00 00 00 
0e036     00 00 00 00 
0e03a     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e03e     00 00 00 78 
0e042     00 00 00 D6 
0e046     60 00 02 FA 
0e04a     10 00 01 FC | 	byte	$00, $00, $00, $78, $00, $00, $00, $d6, $60, $00, $02, $fa, $10, $00, $01, $fc
0e04e     20 00 00 00 
0e052     00 00 00 00 
0e056     00 00 00 00 
0e05a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e05e     00 00 00 87 
0e062     00 00 00 7F 
0e066     70 00 00 00 
0e06a     00 00 00 00 | 	byte	$00, $00, $00, $87, $00, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0e06e     00 00 00 00 
0e072     00 00 00 00 
0e076     00 00 00 00 
0e07a     00 00 00 00 | 	byte	$00[16]
0e07e     0A 05 00 78 
0e082     00 00 00 A0 
0e086     90 00 00 00 
0e08a     00 00 00 00 | 	byte	$0a, $05, $00, $78, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0e08e     00 00 00 00 
0e092     00 00 00 00 
0e096     00 00 00 00 
0e09a     00 00 00 00 
0e09e     00 00 00    | 	byte	$00[19]
0e0a1     A0 00 00 00 
0e0a5     D6 60 00 00 
0e0a9     00 00 00 01 
0e0ad     FC 20 00 00 | 	byte	$a0, $00, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0e0b1     00 00 00 00 
0e0b5     00 00 00 00 
0e0b9     00 00 00 00 
0e0bd     00 00 00 00 
0e0c1     00 00 00 00 | 	byte	$00[20]
0e0c5     D6 60 00 00 
0e0c9     00 00 00 00 
0e0cd     FE 20 00 00 
0e0d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0e0d5     00 00 00 00 
0e0d9     00 00 00 00 
0e0dd     00 00 00 00 | 	byte	$00[12]
0e0e1     87 00 00 00 
0e0e5     7F 70 00 00 
0e0e9     00 00 00 01 
0e0ed     FC 20 00 00 | 	byte	$87, $00, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00
0e0f1     00 00 00 00 
0e0f5     00 00 00 00 
0e0f9     00 00 00 00 
0e0fd     00 00 00 00 
0e101     00 00 00 00 | 	byte	$00[20]
0e105     A0 90 00 00 
0e109     00 00 00 00 
0e10d     00 00 00 00 
0e111     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e115     00 00 00 00 
0e119     00 00 00 00 
0e11d     00          | 	byte	$00[9]
0e11e     0A 05 00 8F 
0e122     00 00 00 8F 
0e126     80 00 00 00 
0e12a     00 00 01 C5 | 	byte	$0a, $05, $00, $8f, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0e12e     20 00 00 00 
0e132     00 00 00 00 
0e136     00 00 00 00 
0e13a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e13e     00 00 00 8F 
0e142     00 00 00 D6 
0e146     60 00 01 FC 
0e14a     10 00 01 53 | 	byte	$00, $00, $00, $8f, $00, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $53
0e14e     20 00 00 87 
0e152     03 01 00 00 
0e156     00 00 00 00 
0e15a     00 00 00 00 | 	byte	$20, $00, $00, $87, $03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e15e     00 00 00 00 
0e162     03 01 00 7F 
0e166     70 00 00 00 
0e16a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $01, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0e16e     00 00 00 00 
0e172     03 01 00 00 
0e176     00 00 00 00 
0e17a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e17e     0A 05 00 00 
0e182     03 01 00 A0 
0e186     90 00 00 00 
0e18a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $03, $01, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0e18e     00 00 00 00 
0e192     03 01 00 00 
0e196     00 00 00 00 
0e19a     00 00 00 00 | 	byte	$00, $00, $00, $00, $03, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e19e     00 00 00 00 
0e1a2     04 00 00 D6 
0e1a6     60 00 00 00 
0e1aa     00 00 01 53 | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53
0e1ae     20 00 00 00 
0e1b2     04 00 00 00 
0e1b6     00 00 00 00 
0e1ba     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e1be     00 00 00 00 
0e1c2     04 00 00 D6 
0e1c6     60 00 00 00 
0e1ca     00 00 00 AA | 	byte	$00, $00, $00, $00, $04, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $00, $aa
0e1ce     20 00 00 00 
0e1d2     04 00 00 00 
0e1d6     00 00 00 00 
0e1da     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e1de     00 00 00 00 
0e1e2     04 00 00 7F 
0e1e6     70 00 00 00 
0e1ea     00 00 01 53 | 	byte	$00, $00, $00, $00, $04, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $53
0e1ee     20 00 00 00 
0e1f2     04 00 00 00 
0e1f6     00 00 00 00 
0e1fa     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e1fe     00 00 00 00 
0e202     04 00 00 A0 
0e206     90 00 00 00 
0e20a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0e20e     00 00 00 00 
0e212     04 00 00 00 
0e216     00 00 00 00 
0e21a     00 00 00 00 | 	byte	$00, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e21e     0A 05 00 00 
0e222     04 00 00 8F 
0e226     80 00 00 00 
0e22a     00 00 00 AA | 	byte	$0a, $05, $00, $00, $04, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $00, $aa
0e22e     20 00 00 00 
0e232     04 00 00 00 
0e236     00 00 00 00 
0e23a     00 00 00 00 | 	byte	$20, $00, $00, $00, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e23e     00 00 00 00 
0e242     0A 01 00 D6 
0e246     60 00 00 00 
0e24a     00 00 01 53 | 	byte	$00, $00, $00, $00, $0a, $01, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53
0e24e     20 00 00 00 
0e252     00 00 00 00 
0e256     00 00 00 00 
0e25a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e25e     00 00 00 00 
0e262     00 00 00    | 	byte	$00[7]
0e265     7F 70 00 00 
0e269     00 00 00 00 
0e26d     00 00 00 00 
0e271     00 0A 01 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0a, $01, $00
0e275     00 00 00 00 
0e279     00 00 00 00 
0e27d     00          | 	byte	$00[9]
0e27e     0A 05 00 00 
0e282     00 00 00 A0 
0e286     90 00 00 00 
0e28a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0e28e     00 00 00 00 
0e292     00 00 00 00 
0e296     00 00 00 00 
0e29a     00 00 00 00 
0e29e     00 00 00 00 | 	byte	$00[20]
0e2a2     0A 01 00 D6 
0e2a6     60 00 00 00 
0e2aa     00 00 01 53 
0e2ae     20 00 00 00 | 	byte	$0a, $01, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00
0e2b2     00 00 00 00 
0e2b6     00 00 00 00 
0e2ba     00 00 00 00 
0e2be     00 00 00 00 
0e2c2     00 00 00    | 	byte	$00[19]
0e2c5     D6 60 00 00 
0e2c9     00 00 00 00 
0e2cd     AA 20 00 00 
0e2d1     00 0A 01 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $0a, $01, $00
0e2d5     00 00 00 00 
0e2d9     00 00 00 00 
0e2dd     00 00 00 00 
0e2e1     00 00 00 00 | 	byte	$00[16]
0e2e5     8F 80 00 00 
0e2e9     00 00 00 01 
0e2ed     53 20 00 00 
0e2f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0e2f5     00 00 00 00 
0e2f9     00 00 00 00 
0e2fd     00 00 00 00 
0e301     00          | 	byte	$00[13]
0e302     0A 01 00 A0 
0e306     90 00 00 00 
0e30a     00 00 00 00 
0e30e     00 00 00 00 | 	byte	$0a, $01, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e312     00 00 00 00 
0e316     00 00 00 00 
0e31a     00 00 00 00 | 	byte	$00[12]
0e31e     0A 05 00 00 
0e322     00 00 00 A0 
0e326     90 00 00 00 
0e32a     00 00 01 68 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $68
0e32e     20 00 00 00 
0e332     0A 01 00 00 
0e336     00 00 00 00 
0e33a     00 00 00 00 | 	byte	$20, $00, $00, $00, $0a, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0e33e     00 00 00 00 
      ...             
0f33a     00 00 00 00 
0f33e     00 00 00    | 	byte	$00[4099]
0f341     B4 4F 07 00 
0f345     D6 60 00 01 
0f349     7D 10 00 01 
0f34d     FC 20 00 00 | 	byte	$b4, $4f, $07, $00, $d6, $60, $00, $01, $7d, $10, $00, $01, $fc, $20, $00, $00
0f351     00 00 00 00 
0f355     00 00 00 00 
0f359     00 00 00 00 
0f35d     00 00 00 00 
0f361     00 00 00 00 | 	byte	$00[20]
0f365     7F 70 00 00 
0f369     00 00 00 00 
0f36d     00 00 00 00 
0f371     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f375     00 00 00 00 
0f379     00 00 00 00 
0f37d     00          | 	byte	$00[9]
0f37e     0A 05 00 00 
0f382     00 00 00 A0 
0f386     90 00 00 00 
0f38a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f38e     00 00 00 00 
0f392     00 00 00 00 
0f396     00 00 00 00 
0f39a     00 00 00 00 
0f39e     00 00 00 00 
0f3a2     00 00 00    | 	byte	$00[23]
0f3a5     D6 60 00 00 
0f3a9     00 00 00 01 
0f3ad     FC 20 00 00 
0f3b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0f3b5     00 00 00 00 
0f3b9     00 00 00 00 
0f3bd     00 00 00 00 
0f3c1     00 00 00 00 | 	byte	$00[16]
0f3c5     D6 60 00 00 
0f3c9     00 00 00 00 
0f3cd     FE 20 00 00 
0f3d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0f3d5     00 00 00 00 
0f3d9     00 00 00 00 
0f3dd     00 00 00 00 
0f3e1     00 00 00 00 | 	byte	$00[16]
0f3e5     8F 80 00 00 
0f3e9     00 00 00 01 
0f3ed     FC 20 00 00 
0f3f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0f3f5     00 00 00 00 
0f3f9     00 00 00 00 
0f3fd     00 00 00 00 
0f401     00 00 00 00 | 	byte	$00[16]
0f405     A0 90 00 00 
0f409     00 00 00 00 
0f40d     00 00 00 00 
0f411     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f415     00 00 00 00 
0f419     00 00 00 00 
0f41d     00          | 	byte	$00[9]
0f41e     0A 05 00 00 
0f422     00 00 00 8F 
0f426     80 00 00 00 
0f42a     00 00 01 FC | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0f42e     20 00 00 00 
0f432     00 00 00 00 
0f436     00 00 00 00 
0f43a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f43e     00 00 00 78 
0f442     40 00 00 D6 
0f446     60 00 02 A6 
0f44a     10 00 01 C5 | 	byte	$00, $00, $00, $78, $40, $00, $00, $d6, $60, $00, $02, $a6, $10, $00, $01, $c5
0f44e     20 00 00 00 
0f452     00 00 00 00 
0f456     00 00 00 00 
0f45a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f45e     00 00 00 87 
0f462     40 00 00 7F 
0f466     70 00 00 00 
0f46a     00 00 00 00 | 	byte	$00, $00, $00, $87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0f46e     00 00 00 00 
0f472     00 00 00 00 
0f476     00 00 00 00 
0f47a     00 00 00 00 | 	byte	$00[16]
0f47e     0A 05 00 97 
0f482     40 00 00 A0 
0f486     90 00 00 00 
0f48a     00 00 00 00 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f48e     00 00 00 00 
0f492     00 00 00 00 
0f496     00 00 00 00 
0f49a     00 00 00 00 
0f49e     00 00 00    | 	byte	$00[19]
0f4a1     87 40 00 00 
0f4a5     D6 60 00 00 
0f4a9     00 00 00 01 
0f4ad     C5 20 00 00 | 	byte	$87, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0f4b1     00 00 00 00 
0f4b5     00 00 00 00 
0f4b9     00 00 00 00 
0f4bd     00 00 00 00 
0f4c1     00 00 00 00 | 	byte	$00[20]
0f4c5     D6 60 00 00 
0f4c9     00 00 00 00 
0f4cd     E2 20 00 00 
0f4d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $e2, $20, $00, $00, $00, $00, $00, $00
0f4d5     00 00 00 00 
0f4d9     00 00 00 00 
0f4dd     00 00 00 00 | 	byte	$00[12]
0f4e1     87 40 00 00 
0f4e5     7F 70 00 00 
0f4e9     00 00 00 01 
0f4ed     C5 20 00 00 | 	byte	$87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0f4f1     00 00 00 00 
0f4f5     00 00 00 00 
0f4f9     00 00 00 00 
0f4fd     00 00 00 00 
0f501     00 00 00 00 | 	byte	$00[20]
0f505     A0 90 00 00 
0f509     00 00 00 00 
0f50d     00 00 00 00 
0f511     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f515     00 00 00 00 
0f519     00 00 00 00 
0f51d     00          | 	byte	$00[9]
0f51e     0A 05 00 97 
0f522     40 00 00 8F 
0f526     80 00 00 00 
0f52a     00 00 01 C5 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $c5
0f52e     20 00 00 87 
0f532     40 00 00 00 
0f536     00 00 00 00 
0f53a     00 00 00 00 | 	byte	$20, $00, $00, $87, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f53e     00 00 00 97 
0f542     40 00 00 D6 
0f546     60 00 01 FC 
0f54a     10 00 01 53 | 	byte	$00, $00, $00, $97, $40, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $53
0f54e     20 00 00 00 
0f552     00 00 00 00 
0f556     00 00 00 00 
0f55a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f55e     00 00 00 00 
0f562     00 00 00    | 	byte	$00[7]
0f565     7F 70 00 00 
0f569     00 00 00 00 
0f56d     00 00 00 00 
0f571     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f575     00 00 00 00 
0f579     00 00 00 00 
0f57d     00          | 	byte	$00[9]
0f57e     0A 05 00 00 
0f582     00 00 00 A0 
0f586     90 00 00 00 
0f58a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f58e     00 00 00 00 
0f592     00 00 00 00 
0f596     00 00 00 00 
0f59a     00 00 00 00 
0f59e     00 00 00 00 
0f5a2     00 00 00    | 	byte	$00[23]
0f5a5     D6 60 00 00 
0f5a9     00 00 00 01 
0f5ad     53 20 00 00 
0f5b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0f5b5     00 00 00 00 
0f5b9     00 00 00 00 
0f5bd     00 00 00 00 
0f5c1     00 00 00 00 | 	byte	$00[16]
0f5c5     D6 60 00 00 
0f5c9     00 00 00 00 
0f5cd     AA 20 00 00 
0f5d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0f5d5     00 00 00 00 
0f5d9     00 00 00 00 
0f5dd     00 00 00 00 
0f5e1     00 00 00 00 | 	byte	$00[16]
0f5e5     7F 70 00 00 
0f5e9     00 00 00 01 
0f5ed     53 20 00 00 
0f5f1     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0f5f5     00 00 00 00 
0f5f9     00 00 00 00 
0f5fd     00 00 00 00 
0f601     00 00 00 00 | 	byte	$00[16]
0f605     A0 90 00 00 
0f609     00 00 00 00 
0f60d     00 00 00 00 
0f611     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f615     00 00 00 00 
0f619     00 00 00 00 
0f61d     00          | 	byte	$00[9]
0f61e     0A 05 00 00 
0f622     00 00 00 8F 
0f626     80 00 00 00 
0f62a     00 00 01 68 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $68
0f62e     20 00 00 00 
0f632     00 00 00 00 
0f636     00 00 00 00 
0f63a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f63e     00 00 00 00 
0f642     00 00 00    | 	byte	$00[7]
0f645     D6 60 00 00 
0f649     00 00 00 01 
0f64d     53 20 00 00 
0f651     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0f655     00 00 00 00 
0f659     00 00 00 00 
0f65d     00 00 00 00 
0f661     00 00 00 00 | 	byte	$00[16]
0f665     7F 70 00 00 
0f669     00 00 00 00 
0f66d     00 00 00 00 
0f671     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f675     00 00 00 00 
0f679     00 00 00 00 
0f67d     00          | 	byte	$00[9]
0f67e     0A 05 00 00 
0f682     00 00 00 A0 
0f686     90 00 00 00 
0f68a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f68e     00 00 00 00 
0f692     00 00 00 00 
0f696     00 00 00 00 
0f69a     00 00 00 00 
0f69e     00 00 00 00 
0f6a2     00 00 00    | 	byte	$00[23]
0f6a5     D6 60 00 00 
0f6a9     00 00 00 01 
0f6ad     53 20 00 00 
0f6b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0f6b5     00 00 00 00 
0f6b9     00 00 00 00 
0f6bd     00 00 00 00 
0f6c1     00 00 00 00 | 	byte	$00[16]
0f6c5     D6 6F 08 00 
0f6c9     00 00 00 00 
0f6cd     AA 20 00 00 
0f6d1     00 00 00 00 | 	byte	$d6, $6f, $08, $00, $00, $00, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0f6d5     00 00 00 00 
0f6d9     00 00 00 00 
0f6dd     00 00 00 00 
0f6e1     00 00 00 00 | 	byte	$00[16]
0f6e5     8F 80 00 00 
0f6e9     00 00 00 01 
0f6ed     53 20 00 00 
0f6f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $53, $20, $00, $00, $00, $00, $00, $00
0f6f5     00 00 00 00 
0f6f9     00 00 00 00 
0f6fd     00 00 00 00 
0f701     00 00 00 00 | 	byte	$00[16]
0f705     A0 90 00 00 
0f709     00 00 00 00 
0f70d     00 00 00 00 
0f711     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f715     00 00 00 00 
0f719     00 00 00 00 
0f71d     00          | 	byte	$00[9]
0f71e     0A 05 00 00 
0f722     00 00 00 A0 
0f726     90 00 00 00 
0f72a     00 00 01 53 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $01, $53
0f72e     20 00 00 00 
0f732     00 00 00 00 
0f736     00 00 00 00 
0f73a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f73e     00 00 00 B4 
0f742     4F 09 00 D6 
0f746     60 00 01 7D 
0f74a     10 00 01 FC | 	byte	$00, $00, $00, $b4, $4f, $09, $00, $d6, $60, $00, $01, $7d, $10, $00, $01, $fc
0f74e     20 00 00 00 
0f752     00 00 00 00 
0f756     00 00 00 00 
0f75a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f75e     00 00 00 00 
0f762     00 00 00    | 	byte	$00[7]
0f765     7F 70 00 00 
0f769     00 00 00 00 
0f76d     00 00 00 00 
0f771     00 00 00 00 | 	byte	$7f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f775     00 00 00 00 
0f779     00 00 00 00 
0f77d     00          | 	byte	$00[9]
0f77e     0A 05 00 00 
0f782     00 00 00 A0 
0f786     90 00 00 00 
0f78a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f78e     00 00 00 00 
0f792     00 00 00 00 
0f796     00 00 00 00 
0f79a     00 00 00 00 
0f79e     00 00 00 00 
0f7a2     00 00 00    | 	byte	$00[23]
0f7a5     D6 60 00 00 
0f7a9     00 00 00 01 
0f7ad     FC 20 00 00 
0f7b1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0f7b5     00 00 00 00 
0f7b9     00 00 00 00 
0f7bd     00 00 00 00 
0f7c1     00 00 00 00 | 	byte	$00[16]
0f7c5     D6 60 00 00 
0f7c9     00 00 00 00 
0f7cd     FE 20 00 00 
0f7d1     00 00 00 00 | 	byte	$d6, $60, $00, $00, $00, $00, $00, $00, $fe, $20, $00, $00, $00, $00, $00, $00
0f7d5     00 00 00 00 
0f7d9     00 00 00 00 
0f7dd     00 00 00 00 
0f7e1     00 00 00 00 | 	byte	$00[16]
0f7e5     8F 80 00 00 
0f7e9     00 00 00 01 
0f7ed     FC 20 00 00 
0f7f1     00 00 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $fc, $20, $00, $00, $00, $00, $00, $00
0f7f5     00 00 00 00 
0f7f9     00 00 00 00 
0f7fd     00 00 00 00 
0f801     00 00 00 00 | 	byte	$00[16]
0f805     A0 90 00 00 
0f809     00 00 00 00 
0f80d     00 00 00 00 
0f811     00 00 00 00 | 	byte	$a0, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f815     00 00 00 00 
0f819     00 00 00 00 
0f81d     00          | 	byte	$00[9]
0f81e     0A 05 00 00 
0f822     00 00 00 8F 
0f826     80 00 00 00 
0f82a     00 00 01 FC | 	byte	$0a, $05, $00, $00, $00, $00, $00, $8f, $80, $00, $00, $00, $00, $00, $01, $fc
0f82e     20 00 00 00 
0f832     00 00 00 00 
0f836     00 00 00 00 
0f83a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f83e     00 00 00 78 
0f842     4F 0A 00 D6 
0f846     60 00 02 A6 
0f84a     10 00 01 C5 | 	byte	$00, $00, $00, $78, $4f, $0a, $00, $d6, $60, $00, $02, $a6, $10, $00, $01, $c5
0f84e     20 00 00 00 
0f852     00 00 00 00 
0f856     00 00 00 00 
0f85a     00 00 00 00 | 	byte	$20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f85e     00 00 00 87 
0f862     40 00 00 7F 
0f866     70 00 00 00 
0f86a     00 00 00 00 | 	byte	$00, $00, $00, $87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $00, $00
0f86e     00 00 00 00 
0f872     00 00 00 00 
0f876     00 00 00 00 
0f87a     00 00 00 00 | 	byte	$00[16]
0f87e     0A 05 00 97 
0f882     40 00 00 A0 
0f886     90 00 00 00 
0f88a     00 00 00 00 | 	byte	$0a, $05, $00, $97, $40, $00, $00, $a0, $90, $00, $00, $00, $00, $00, $00, $00
0f88e     00 00 00 00 
0f892     00 00 00 00 
0f896     00 00 00 00 
0f89a     00 00 00 00 
0f89e     00 00 00    | 	byte	$00[19]
0f8a1     87 40 00 00 
0f8a5     D6 60 00 00 
0f8a9     00 00 00 01 
0f8ad     C5 20 00 00 | 	byte	$87, $40, $00, $00, $d6, $60, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0f8b1     00 00 00 00 
0f8b5     00 00 00 00 
0f8b9     00 00 00 00 
0f8bd     00 00 00 00 
0f8c1     00          | 	byte	$00[17]
0f8c2     0F 0B 00 D6 
0f8c6     60 00 01 53 
0f8ca     10 00 00 E2 
0f8ce     20 00 00 00 | 	byte	$0f, $0b, $00, $d6, $60, $00, $01, $53, $10, $00, $00, $e2, $20, $00, $00, $00
0f8d2     00 00 00 00 
0f8d6     00 00 00 00 
0f8da     00 00 00 00 
0f8de     00 00 00    | 	byte	$00[15]
0f8e1     87 40 00 00 
0f8e5     7F 70 00 00 
0f8e9     00 00 00 01 
0f8ed     C5 20 00 00 | 	byte	$87, $40, $00, $00, $7f, $70, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00
0f8f1     00 00 00 00 
0f8f5     00 00 00 00 
0f8f9     00 00 00 00 
0f8fd     00 00 00 00 
0f901     00 00 00 00 | 	byte	$00[20]
0f905     8F 70 00 00 
0f909     00 00 00 00 
0f90d     00 00 00 00 
0f911     00 00 00 00 | 	byte	$8f, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f915     8F 70 00 00 
0f919     00 00 00 00 
0f91d     00 0A 05 00 
0f921     97 40 00 00 | 	byte	$8f, $70, $00, $00, $00, $00, $00, $00, $00, $0a, $05, $00, $97, $40, $00, $00
0f925     8F 80 00 00 
0f929     00 00 00 01 
0f92d     C5 20 00 00 
0f931     87 40 00 00 | 	byte	$8f, $80, $00, $00, $00, $00, $00, $01, $c5, $20, $00, $00, $87, $40, $00, $00
0f935     00 00 00 00 
0f939     00 00 00 00 
0f93d     00 00 00 00 | 	byte	$00[12]
0f941     97 40 00 00 
0f945     D6 60 00 01 
0f949     FC 10 00 01 
0f94d     53 20 00 00 | 	byte	$97, $40, $00, $00, $d6, $60, $00, $01, $fc, $10, $00, $01, $53, $20, $00, $00
0f951     00 00 00 00 
0f955     00 00 00 00 
0f959     00          | 	byte	$00[9]
0f95a     0F 06 00 00 
0f95e     00 00 00 00 
0f962     00 00 00 00 
0f966     00 00 00 00 | 	byte	$0f, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f96a     00 00 00 00 
0f96e     00 00 00 00 
0f972     00 00 00 00 
0f976     00 00 00 00 
0f97a     00 00 00 00 | 	byte	$00[20]
0f97e     0A 05 00 00 
0f982     00 00 00 00 
0f986     00 00 00 00 
0f98a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f98e     00 00 00 00 
      ...             
0f9c2     00 00 00 00 
0f9c6     00 00 00 00 | 	byte	$00[60]
0f9ca     0C 17 00 00 
0f9ce     00 00 00 00 
0f9d2     00 00 00 00 
0f9d6     00 00 00 00 | 	byte	$0c, $17, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f9da     0C 16 00 00 
0f9de     00 00 00 00 
0f9e2     00 00 00 00 
0f9e6     00 00 00 00 | 	byte	$0c, $16, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f9ea     0C 15 00 00 
0f9ee     00 00 00 00 
0f9f2     00 00 00 00 
0f9f6     00 00 00 00 | 	byte	$0c, $15, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0f9fa     0C 14 00 00 
0f9fe     00 00 00 00 
0fa02     00 00 00 00 
0fa06     00 00 00 00 | 	byte	$0c, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa0a     0C 13 00 00 
0fa0e     00 00 00 00 
0fa12     00 00 00 00 
0fa16     00 00 00 00 | 	byte	$0c, $13, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa1a     0C 12 00 00 
0fa1e     0A 05 00 00 
0fa22     00 00 00 00 
0fa26     00 00 00 00 | 	byte	$0c, $12, $00, $00, $0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa2a     0C 11 00 00 
0fa2e     00 00 00 00 
0fa32     00 00 00 00 
0fa36     00 00 00 00 | 	byte	$0c, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa3a     0C 10 00 00 
0fa3e     00 00 00 00 
0fa42     00 00 00 00 
0fa46     00 00 00 00 | 	byte	$0c, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa4a     0C 09 00 00 
0fa4e     00 00 00 00 
0fa52     00 00 00 00 
0fa56     00 00 00 00 | 	byte	$0c, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa5a     0C 08 00 00 
0fa5e     00 00 00 00 
0fa62     00 00 00 00 
0fa66     00 00 00 00 | 	byte	$0c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa6a     0C 07 00 00 
0fa6e     00 00 00 00 
0fa72     00 00 00 00 
0fa76     00 00 00 00 | 	byte	$0c, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa7a     0C 06 00 00 
0fa7e     0A 05 00 00 
0fa82     00 00 00 00 
0fa86     00 00 00 00 | 	byte	$0c, $06, $00, $00, $0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa8a     0C 05 00 00 
0fa8e     00 00 00 00 
0fa92     00 00 00 00 
0fa96     00 00 00 00 | 	byte	$0c, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fa9a     0C 04 00 00 
0fa9e     00 00 00 00 
0faa2     00 00 00 00 
0faa6     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0faaa     0C 03 00 00 
0faae     00 00 00 00 
0fab2     00 00 00 00 
0fab6     00 00 00 00 | 	byte	$0c, $03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0faba     0C 02 00 00 
0fabe     00 00 00 00 
0fac2     00 00 00 00 
0fac6     00 00 00 00 | 	byte	$0c, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0faca     0C 01 00 00 
0face     00 00 00 00 
0fad2     00 00 00 00 
0fad6     00 00 00 00 | 	byte	$0c, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fada     0C 00 00 00 
0fade     00 00 00 00 
0fae2     00 00 00 00 
0fae6     00 00 00 00 | 	byte	$0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0faea     00 00 00 00 
      ...             
0fb16     00 00 00 00 
0fb1a     00 00 00 00 | 	byte	$00[52]
0fb1e     0A 05 00 00 
0fb22     00 00 00 00 
0fb26     00 00 00 00 
0fb2a     00 00 00 00 | 	byte	$0a, $05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0fb2e     00 00 00 00 
0fb32     00 00 00 00 
0fb36     00 00 00 00 
0fb3a     00 00 00 00 
0fb3e     00 00 00 00 
0fb42     00 00       | 	byte	$00[22]
0fb44     1C 16 20 22 
0fb48     24 20 00 00 
0fb4c     0A 1A 18 E9 
0fb50     F4 F8 EB EC | 	byte	$1c, $16, $20, $22, $24, $20, $00, $00, $0a, $1a, $18, $e9, $f4, $f8, $eb, $ec
0fb54     E4 D7 CB CB 
0fb58     E1 F1 E3 F2 
0fb5c     01 0F 18 16 
0fb60     17 16 29 31 | 	byte	$e4, $d7, $cb, $cb, $e1, $f1, $e3, $f2, $01, $0f, $18, $16, $17, $16, $29, $31
0fb64     3B 25 18 21 
0fb68     13 04 EE D3 
0fb6c     CE C0 D6 ED 
0fb70     E3 DC F3 02 | 	byte	$3b, $25, $18, $21, $13, $04, $ee, $d3, $ce, $c0, $d6, $ed, $e3, $dc, $f3, $02
0fb74     0D 10 F9 00 
0fb78     18 1D 1C FB 
0fb7c     EF 00 FC F7 
0fb80     00 DC D6 DE | 	byte	$0d, $10, $f9, $00, $18, $1d, $1c, $fb, $ef, $00, $fc, $f7, $00, $dc, $d6, $de
0fb84     F6 18 13 1A 
0fb88     1D 23 26 11 
0fb8c     07 FD 09 16 
0fb90     1B 08 EE ED | 	byte	$f6, $18, $13, $1a, $1d, $23, $26, $11, $07, $fd, $09, $16, $1b, $08, $ee, $ed
0fb94     F1 ED F3 DB 
0fb98     C5 C9 D3 F1 
0fb9c     E4 F3 01 01 
0fba0     15 18 18 06 | 	byte	$f1, $ed, $f3, $db, $c5, $c9, $d3, $f1, $e4, $f3, $01, $01, $15, $18, $18, $06
0fba4     23 35 3E 37 
0fba8     1F 1F 16 08 
0fbac     FA E0 C5 C2 
0fbb0     CB F1 E1 D2 | 	byte	$23, $35, $3e, $37, $1f, $1f, $16, $08, $fa, $e0, $c5, $c2, $cb, $f1, $e1, $d2
0fbb4     EA FD 0A 03 
0fbb8     0D F9 04 1D 
0fbbc     22 15 F0 FA 
0fbc0     01 F8 FE F1 | 	byte	$ea, $fd, $0a, $03, $0d, $f9, $04, $1d, $22, $15, $f0, $fa, $01, $f8, $fe, $f1
0fbc4     D2 D8 E9 11 
0fbc8     23 18 18 27 
0fbcc     20 16 FE F9 
0fbd0     0A 0E 2E 13 | 	byte	$d2, $d8, $e9, $11, $23, $18, $18, $27, $20, $16, $fe, $f9, $0a, $0e, $2e, $13
0fbd4     F2 EF EB F4 
0fbd8     ED EB C5 C1 
0fbdc     D2 E5 F3 E3 
0fbe0     EC 01 1A 1B | 	byte	$f2, $ef, $eb, $f4, $ed, $eb, $c5, $c1, $d2, $e5, $f3, $e3, $ec, $01, $1a, $1b
0fbe4     14 0C 0E 34 
0fbe8     45 4A 29 1C 
0fbec     2A 10 FA E5 
0fbf0     C9 BF C2 E8 | 	byte	$14, $0c, $0e, $34, $45, $4a, $29, $1c, $2a, $10, $fa, $e5, $c9, $bf, $c2, $e8
0fbf4     F3 D0 D7 F1 
0fbf8     06 05 F8 02 
0fbfc     03 1A 1F 22 
0fc00     07 EC FC 06 | 	byte	$f3, $d0, $d7, $f1, $06, $05, $f8, $02, $03, $1a, $1f, $22, $07, $ec, $fc, $06
0fc04     0B F4 CC D3 
0fc08     EA 0B 1E 13 
0fc0c     1E 1D 1C 11 
0fc10     02 FC FE 14 | 	byte	$0b, $f4, $cc, $d3, $ea, $0b, $1e, $13, $1e, $1d, $1c, $11, $02, $fc, $fe, $14
0fc14     20 19 07 E8 
0fc18     F5 F5 F6 F2 
0fc1c     BE C2 D3 E6 
0fc20     F4 DB E8 08 | 	byte	$20, $19, $07, $e8, $f5, $f5, $f6, $f2, $be, $c2, $d3, $e6, $f4, $db, $e8, $08
0fc24     15 1E 11 0C 
0fc28     0C 2C 45 42 
0fc2c     42 25 22 0A 
0fc30     FE EB BD C1 | 	byte	$15, $1e, $11, $0c, $0c, $2c, $45, $42, $42, $25, $22, $0a, $fe, $eb, $bd, $c1
0fc34     C7 E1 EC D5 
0fc38     DC E6 01 09 
0fc3c     F8 06 FF 11 
0fc40     27 18 13 00 | 	byte	$c7, $e1, $ec, $d5, $dc, $e6, $01, $09, $f8, $06, $ff, $11, $27, $18, $13, $00
0fc44     04 02 03 04 
0fc48     CD CC DC 01 
0fc4c     20 0E 1F 23 
0fc50     14 11 F4 FD | 	byte	$04, $02, $03, $04, $cd, $cc, $dc, $01, $20, $0e, $1f, $23, $14, $11, $f4, $fd
0fc54     0D 01 20 1D 
0fc58     12 F3 E5 FD 
0fc5c     FE EC D1 C9 
0fc60     C8 DC EB E6 | 	byte	$0d, $01, $20, $1d, $12, $f3, $e5, $fd, $fe, $ec, $d1, $c9, $c8, $dc, $eb, $e6
0fc64     F7 03 0D 20 
0fc68     FF 08 12 13 
0fc6c     44 45 45 38 
0fc70     15 0D 02 E2 | 	byte	$f7, $03, $0d, $20, $ff, $08, $12, $13, $44, $45, $45, $38, $15, $0d, $02, $e2
0fc74     D9 CC C5 D6 
0fc78     DA E9 DB DF 
0fc7c     05 04 FF FD 
0fc80     FF 0B 17 17 | 	byte	$d9, $cc, $c5, $d6, $da, $e9, $db, $df, $05, $04, $ff, $fd, $ff, $0b, $17, $17
0fc84     25 0F FE 02 
0fc88     03 05 DA C5 
0fc8c     DB FB 17 1A 
0fc90     23 23 0A 0B | 	byte	$25, $0f, $fe, $02, $03, $05, $da, $c5, $db, $fb, $17, $1a, $23, $23, $0a, $0b
0fc94     FA FC 09 02 
0fc98     19 1B 0F 07 
0fc9c     F4 ED FE 04 
0fca0     E1 BF BC DC | 	byte	$fa, $fc, $09, $02, $19, $1b, $0f, $07, $f4, $ed, $fe, $04, $e1, $bf, $bc, $dc
0fca4     E6 F0 F5 00 
0fca8     FD 13 0F 01 
0fcac     00 17 3D 4A 
0fcb0     3F 42 29 04 | 	byte	$e6, $f0, $f5, $00, $fd, $13, $0f, $01, $00, $17, $3d, $4a, $3f, $42, $29, $04
0fcb4     01 F8 EF CA 
0fcb8     BD D0 DF E2 
0fcbc     DC E9 F2 F9 
0fcc0     FB FE FF FC | 	byte	$01, $f8, $ef, $ca, $bd, $d0, $df, $e2, $dc, $e9, $f2, $f9, $fb, $fe, $ff, $fc
0fcc4     0A 22 1E 18 
0fcc8     16 FD 00 04 
0fccc     EE D0 D3 F3 
0fcd0     16 15 22 22 | 	byte	$0a, $22, $1e, $18, $16, $fd, $00, $04, $ee, $d0, $d3, $f3, $16, $15, $22, $22
0fcd4     FA 08 FF FD 
0fcd8     05 09 0E 0B 
0fcdc     0D 14 0B E6 
0fce0     FF FE F6 DA | 	byte	$fa, $08, $ff, $fd, $05, $09, $0e, $0b, $0d, $14, $0b, $e6, $ff, $fe, $f6, $da
0fce4     B9 D4 E0 EC 
0fce8     FC F9 F4 08 
0fcec     03 04 07 1C 
0fcf0     2E 2B 4D 44 | 	byte	$b9, $d4, $e0, $ec, $fc, $f9, $f4, $08, $03, $04, $07, $1c, $2e, $2b, $4d, $44
0fcf4     30 1E 03 02 
0fcf8     F4 E9 D4 BE 
0fcfc     CE E6 EC D2 
0fd00     E3 F3 EA F2 | 	byte	$30, $1e, $03, $02, $f4, $e9, $d4, $be, $ce, $e6, $ec, $d2, $e3, $f3, $ea, $f2
0fd04     FB 06 FE FF 
0fd08     20 19 17 0D 
0fd0c     FF 0E F9 EF 
0fd10     F4 E9 F8 12 | 	byte	$fb, $06, $fe, $ff, $20, $19, $17, $0d, $ff, $0e, $f9, $ef, $f4, $e9, $f8, $12
0fd14     26 25 FF FC 
0fd18     FD F6 FF 10 
0fd1c     12 F4 FE 1A 
0fd20     12 04 F7 05 | 	byte	$26, $25, $ff, $fc, $fd, $f6, $ff, $10, $12, $f4, $fe, $1a, $12, $04, $f7, $05
0fd24     FA EF CC C9 
0fd28     DE DB EE FC 
0fd2c     F7 FB F8 02 
0fd30     07 1E 2D 2A | 	byte	$fa, $ef, $cc, $c9, $de, $db, $ee, $fc, $f7, $fb, $f8, $02, $07, $1e, $2d, $2a
0fd34     32 43 42 2C 
0fd38     0F 07 FB F7 
0fd3c     E9 D6 C1 C7 
0fd40     E3 EA DC E0 | 	byte	$32, $43, $42, $2c, $0f, $07, $fb, $f7, $e9, $d6, $c1, $c7, $e3, $ea, $dc, $e0
0fd44     F1 EB F1 01 
0fd48     03 01 F6 17 
0fd4c     1E 20 12 07 
0fd50     07 00 03 EE | 	byte	$f1, $eb, $f1, $01, $03, $01, $f6, $17, $1e, $20, $12, $07, $07, $00, $03, $ee
0fd54     F6 FF 1A 1B 
0fd58     0B 00 E2 ED 
0fd5c     FE 11 10 FB 
0fd60     F3 07 10 09 | 	byte	$f6, $ff, $1a, $1b, $0b, $00, $e2, $ed, $fe, $11, $10, $fb, $f3, $07, $10, $09
0fd64     15 01 FE FE 
0fd68     ED E2 C5 C8 
0fd6c     DD F5 FD F2 
0fd70     F5 F4 04 23 | 	byte	$15, $01, $fe, $fe, $ed, $e2, $c5, $c8, $dd, $f5, $fd, $f2, $f5, $f4, $04, $23
0fd74     2A 1F 2A 30 
0fd78     43 37 24 13 
0fd7c     02 FD F6 FE 
0fd80     D8 B1 D4 E9 | 	byte	$2a, $1f, $2a, $30, $43, $37, $24, $13, $02, $fd, $f6, $fe, $d8, $b1, $d4, $e9
0fd84     E2 DA D6 E6 
0fd88     EC FE 07 F9 
0fd8c     F4 F6 16 21 
0fd90     25 21 03 0B | 	byte	$e2, $da, $d6, $e6, $ec, $fe, $07, $f9, $f4, $f6, $16, $21, $25, $21, $03, $0b
0fd94     10 07 FB E5 
0fd98     03 13 10 02 
0fd9c     E4 EA EA 0C 
0fda0     17 0A FC EF | 	byte	$10, $07, $fb, $e5, $03, $13, $10, $02, $e4, $ea, $ea, $0c, $17, $0a, $fc, $ef
0fda4     0F 18 16 07 
0fda8     00 FE FB EF 
0fdac     D9 C1 C4 EB 
0fdb0     F3 F9 EF EE | 	byte	$0f, $18, $16, $07, $00, $fe, $fb, $ef, $d9, $c1, $c4, $eb, $f3, $f9, $ef, $ee
0fdb4     FC 1C 24 1B 
0fdb8     2B 2A 2F 39 
0fdbc     38 27 0D F9 
0fdc0     0E 07 ED CF | 	byte	$fc, $1c, $24, $1b, $2b, $2a, $2f, $39, $38, $27, $0d, $f9, $0e, $07, $ed, $cf
0fdc4     B4 E0 E3 DA 
0fdc8     D5 CE E8 F6 
0fdcc     FF FC F5 F3 
0fdd0     F7 21 30 26 | 	byte	$b4, $e0, $e3, $da, $d5, $ce, $e8, $f6, $ff, $fc, $f5, $f3, $f7, $21, $30, $26
0fdd4     1B FB 14 21 
0fdd8     01 F8 EA 08 
0fddc     07 F8 F0 DC 
0fde0     F0 FE 0E 11 | 	byte	$1b, $fb, $14, $21, $01, $f8, $ea, $08, $07, $f8, $f0, $dc, $f0, $fe, $0e, $11
0fde4     04 04 F1 15 
0fde8     22 11 0B F7 
0fdec     02 FE E7 DA 
0fdf0     BB C7 EB F8 | 	byte	$04, $04, $f1, $15, $22, $11, $0b, $f7, $02, $fe, $e7, $da, $bb, $c7, $eb, $f8
0fdf4     F1 E4 EF 0F 
0fdf8     1E 27 24 2D 
0fdfc     26 31 3C 28 
0fe00     27 06 09 11 | 	byte	$f1, $e4, $ef, $0f, $1e, $27, $24, $2d, $26, $31, $3c, $28, $27, $06, $09, $11
0fe04     F4 E9 D3 CD 
0fe08     DD DE C9 C3 
0fe0c     D7 EF F3 F8 
0fe10     F6 F7 F0 04 | 	byte	$f4, $e9, $d3, $cd, $dd, $de, $c9, $c3, $d7, $ef, $f3, $f8, $f6, $f7, $f0, $04
0fe14     31 39 29 1C 
0fe18     10 FA 0C FB 
0fe1c     02 0E F7 FF 
0fe20     E6 E3 F2 F3 | 	byte	$31, $39, $29, $1c, $10, $fa, $0c, $fb, $02, $0e, $f7, $ff, $e6, $e3, $f2, $f3
0fe24     FC 05 10 19 
0fe28     0C 17 27 15 
0fe2c     08 F1 01 F4 
0fe30     E0 D6 CB D6 | 	byte	$fc, $05, $10, $19, $0c, $17, $27, $15, $08, $f1, $01, $f4, $e0, $d6, $cb, $d6
0fe34     D1 E3 EE E9 
0fe38     E6 03 17 1A 
0fe3c     28 35 33 2A 
0fe40     3A 3A 35 17 | 	byte	$d1, $e3, $ee, $e9, $e6, $03, $17, $1a, $28, $35, $33, $2a, $3a, $3a, $35, $17
0fe44     11 07 EF E7 
0fe48     DD E8 D2 D0 
0fe4c     D5 C1 C6 D4 
0fe50     E4 F0 F7 FD | 	byte	$11, $07, $ef, $e7, $dd, $e8, $d2, $d0, $d5, $c1, $c6, $d4, $e4, $f0, $f7, $fd
0fe54     06 15 24 34 
0fe58     3A 18 0E 26 
0fe5c     12 05 F3 EC 
0fe60     F4 E7 E7 E0 | 	byte	$06, $15, $24, $34, $3a, $18, $0e, $26, $12, $05, $f3, $ec, $f4, $e7, $e7, $e0
0fe64     E5 F3 FE 02 
0fe68     05 12 1A 18 
0fe6c     15 21 24 0C 
0fe70     F1 F6 FB E4 | 	byte	$e5, $f3, $fe, $02, $05, $12, $1a, $18, $15, $21, $24, $0c, $f1, $f6, $fb, $e4
0fe74     D7 C1 D0 E4 
0fe78     DA E6 E4 F3 
0fe7c     0E 14 26 38 
0fe80     2E 27 2C 3D | 	byte	$d7, $c1, $d0, $e4, $da, $e6, $e4, $f3, $0e, $14, $26, $38, $2e, $27, $2c, $3d
0fe84     37 31 1E 13 
0fe88     16 E6 E9 E1 
0fe8c     CD CB C8 D0 
0fe90     C2 BC D7 E3 | 	byte	$37, $31, $1e, $13, $16, $e6, $e9, $e1, $cd, $cb, $c8, $d0, $c2, $bc, $d7, $e3
0fe94     EE 03 03 10 
0fe98     18 33 3B 31 
0fe9c     1F 17 2A 13 
0fea0     FF F6 D1 D9 | 	byte	$ee, $03, $03, $10, $18, $33, $3b, $31, $1f, $17, $2a, $13, $ff, $f6, $d1, $d9
0fea4     E0 E5 EA E6 
0fea8     F7 FA FE 11 
0feac     1B 16 13 17 
0feb0     28 26 00 F5 | 	byte	$e0, $e5, $ea, $e6, $f7, $fa, $fe, $11, $1b, $16, $13, $17, $28, $26, $00, $f5
0feb4     FC F8 E0 CE 
0feb8     D7 D1 D6 E3 
0febc     E8 E7 F7 03 
0fec0     1E 2C 29 20 | 	byte	$fc, $f8, $e0, $ce, $d7, $d1, $d6, $e3, $e8, $e7, $f7, $03, $1e, $2c, $29, $20
0fec4     1F 2F 2E 3E 
0fec8     39 1F 17 0B 
0fecc     00 E7 D3 CC 
0fed0     C4 C2 CB C8 | 	byte	$1f, $2f, $2e, $3e, $39, $1f, $17, $0b, $00, $e7, $d3, $cc, $c4, $c2, $cb, $c8
0fed4     C2 CF DE F6 
0fed8     0A 11 18 2C 
0fedc     32 37 33 2A 
0fee0     20 1B 21 06 | 	byte	$c2, $cf, $de, $f6, $0a, $11, $18, $2c, $32, $37, $33, $2a, $20, $1b, $21, $06
0fee4     D4 CA C8 CE 
0fee8     EF F3 EA EB 
0feec     EC 0A 17 13 
0fef0     1B 16 1A 27 | 	byte	$d4, $ca, $c8, $ce, $ef, $f3, $ea, $eb, $ec, $0a, $17, $13, $1b, $16, $1a, $27
0fef4     1E 07 ED E7 
0fef8     00 E8 DE D6 
0fefc     C9 D5 E5 F8 
0ff00     F1 F4 07 1E | 	byte	$1e, $07, $ed, $e7, $00, $e8, $de, $d6, $c9, $d5, $e5, $f8, $f1, $f4, $07, $1e
0ff04     33 20 1C 17 
0ff08     2C 35 43 39 
0ff0c     1A 0D 0D 09 
0ff10     E0 D0 BE AF | 	byte	$33, $20, $1c, $17, $2c, $35, $43, $39, $1a, $0d, $0d, $09, $e0, $d0, $be, $af
0ff14     CA CD C4 C3 
0ff18     C8 E8 FD 15 
0ff1c     21 25 2E 34 
0ff20     45 32 27 1F | 	byte	$ca, $cd, $c4, $c3, $c8, $e8, $fd, $15, $21, $25, $2e, $34, $45, $32, $27, $1f
0ff24     1A 26 E7 CB 
0ff28     C4 B3 E1 F0 
0ff2c     F2 EC DD FD 
0ff30     11 16 1A 13 | 	byte	$1a, $26, $e7, $cb, $c4, $b3, $e1, $f0, $f2, $ec, $dd, $fd, $11, $16, $1a, $13
0ff34     1B 1D 23 19 
0ff38     F8 F3 F1 F8 
0ff3c     EE DA D1 C4 
0ff40     E0 FC FB F3 | 	byte	$1b, $1d, $23, $19, $f8, $f3, $f1, $f8, $ee, $da, $d1, $c4, $e0, $fc, $fb, $f3
0ff44     F1 12 21 25 
0ff48     1F 18 22 2C 
0ff4c     44 41 21 0F 
0ff50     10 0C F9 D3 | 	byte	$f1, $12, $21, $25, $1f, $18, $22, $2c, $44, $41, $21, $0f, $10, $0c, $f9, $d3
0ff54     BF BB C0 D1 
0ff58     CC C0 C4 D5 
0ff5c     EE 10 1E 26 
0ff60     31 30 37 4A | 	byte	$bf, $bb, $c0, $d1, $cc, $c0, $c4, $d5, $ee, $10, $1e, $26, $31, $30, $37, $4a
0ff64     34 1F 1E 1D 
0ff68     0B E1 BF BC 
0ff6c     C5 E5 F6 E8 
0ff70     DE E5 FD 17 | 	byte	$34, $1f, $1e, $1d, $0b, $e1, $bf, $bc, $c5, $e5, $f6, $e8, $de, $e5, $fd, $17
0ff74     15 19 1F 17 
0ff78     17 25 01 EC 
0ff7c     FC F6 F4 DC 
0ff80     D1 DC D0 E5 | 	byte	$15, $19, $1f, $17, $17, $25, $01, $ec, $fc, $f6, $f4, $dc, $d1, $dc, $d0, $e5
0ff84     FF 03 F0 F4 
0ff88     17 2A 22 16 
0ff8c     26 2F 2A 42 
0ff90     34 19 16 0E | 	byte	$ff, $03, $f0, $f4, $17, $2a, $22, $16, $26, $2f, $2a, $42, $34, $19, $16, $0e
0ff94     04 EC C7 C2 
0ff98     B8 BE D1 C2 
0ff9c     C6 C3 E1 08 
0ffa0     10 23 2D 3A | 	byte	$04, $ec, $c7, $c2, $b8, $be, $d1, $c2, $c6, $c3, $e1, $08, $10, $23, $2d, $3a
0ffa4     30 41 3A 1C 
0ffa8     20 1D 17 F4 
0ffac     C9 C4 C7 D4 
0ffb0     EB F4 E4 DE | 	byte	$30, $41, $3a, $1c, $20, $1d, $17, $f4, $c9, $c4, $c7, $d4, $eb, $f4, $e4, $de
0ffb4     F2 14 14 15 
0ffb8     22 1F 16 1E 
0ffbc     0E EE F0 FD 
0ffc0     FC EF D7 CC | 	byte	$f2, $14, $14, $15, $22, $1f, $16, $1e, $0e, $ee, $f0, $fd, $fc, $ef, $d7, $cc
0ffc4     D9 D8 EF 0B 
0ffc8     F6 F0 05 27 
0ffcc     29 14 29 32 
0ffd0     2A 2D 38 1F | 	byte	$d9, $d8, $ef, $0b, $f6, $f0, $05, $27, $29, $14, $29, $32, $2a, $2d, $38, $1f
0ffd4     13 0F 0A FE 
0ffd8     D5 C0 C5 B8 
0ffdc     C3 CA C5 C3 
0ffe0     D0 F6 1A 19 | 	byte	$13, $0f, $0a, $fe, $d5, $c0, $c5, $b8, $c3, $ca, $c5, $c3, $d0, $f6, $1a, $19
0ffe4     25 3D 3B 37 
0ffe8     30 2C 20 22 
0ffec     14 11 E9 BC 
0fff0     D1 C4 DD E6 | 	byte	$25, $3d, $3b, $37, $30, $2c, $20, $22, $14, $11, $e9, $bc, $d1, $c4, $dd, $e6
0fff4     EA F1 E0 05 
0fff8     1B 0D 15 2C 
0fffc     1B 1A 01 FB 
10000     FA ED 01 F9 | 	byte	$ea, $f1, $e0, $05, $1b, $0d, $15, $2c, $1b, $1a, $01, $fb, $fa, $ed, $01, $f9
10004     ED C4 CB E0 
10008     E9 EC FF 11 
1000c     F8 0E 2E 30 
10010     20 22 37 38 | 	byte	$ed, $c4, $cb, $e0, $e9, $ec, $ff, $11, $f8, $0e, $2e, $30, $20, $22, $37, $38
10014     26 13 22 1E 
10018     04 FB F3 D1 
1001c     C1 BE BB C2 
10020     C4 C3 CA EA | 	byte	$26, $13, $22, $1e, $04, $fb, $f3, $d1, $c1, $be, $bb, $c2, $c4, $c3, $ca, $ea
10024     03 0E 1F 36 
10028     32 3A 32 20 
1002c     30 25 25 12 
10030     FC E9 C7 C6 | 	byte	$03, $0e, $1f, $36, $32, $3a, $32, $20, $30, $25, $25, $12, $fc, $e9, $c7, $c6
10034     C5 D6 EB E7 
10038     E2 07 10 10 
1003c     12 26 2C 17 
10040     00 F5 FD E9 | 	byte	$c5, $d6, $eb, $e7, $e2, $07, $10, $10, $12, $26, $2c, $17, $00, $f5, $fd, $e9
10044     F7 FA EF E9 
10048     CA D6 E1 E4 
1004c     F6 08 0B 14 
10050     1F 27 2E 2B | 	byte	$f7, $fa, $ef, $e9, $ca, $d6, $e1, $e4, $f6, $08, $0b, $14, $1f, $27, $2e, $2b
10054     29 33 24 12 
10058     1F 1E 18 05 
1005c     F7 EC C9 C6 
10060     C1 AD C2 C7 | 	byte	$29, $33, $24, $12, $1f, $1e, $18, $05, $f7, $ec, $c9, $c6, $c1, $ad, $c2, $c7
10064     BE D4 F7 10 
10068     15 26 35 3C 
1006c     2F 1A 26 34 
10070     24 17 0F 0A | 	byte	$be, $d4, $f7, $10, $15, $26, $35, $3c, $2f, $1a, $26, $34, $24, $17, $0f, $0a
10074     DC BD C9 CD 
10078     DC E4 F1 FA 
1007c     04 0A 12 24 
10080     21 26 04 F3 | 	byte	$dc, $bd, $c9, $cd, $dc, $e4, $f1, $fa, $04, $0a, $12, $24, $21, $26, $04, $f3
10084     FA F2 F3 F0 
10088     F2 F4 E6 D3 
1008c     D3 D5 DE FF 
10090     0F 1B 17 2A | 	byte	$fa, $f2, $f3, $f0, $f2, $f4, $e6, $d3, $d3, $d5, $de, $ff, $0f, $1b, $17, $2a
10094     39 37 2F 2E 
10098     30 09 13 1F 
1009c     1C 0D F8 EF 
100a0     E2 C3 BA B1 | 	byte	$39, $37, $2f, $2e, $30, $09, $13, $1f, $1c, $0d, $f8, $ef, $e2, $c3, $ba, $b1
100a4     B0 C7 CB D2 
100a8     E4 00 16 25 
100ac     2D 38 2D 21 
100b0     28 21 2A 2A | 	byte	$b0, $c7, $cb, $d2, $e4, $00, $16, $25, $2d, $38, $2d, $21, $28, $21, $2a, $2a
100b4     15 04 07 E3 
100b8     BF BB C9 EA 
100bc     E5 FA 07 0B 
100c0     0B 16 28 26 | 	byte	$15, $04, $07, $e3, $bf, $bb, $c9, $ea, $e5, $fa, $07, $0b, $0b, $16, $28, $26
100c4     16 EE F5 F4 
100c8     ED ED EC F5 
100cc     ED D7 D6 C9 
100d0     D3 FC FB 11 | 	byte	$16, $ee, $f5, $f4, $ed, $ed, $ec, $f5, $ed, $d7, $d6, $c9, $d3, $fc, $fb, $11
100d4     29 24 2F 30 
100d8     48 35 29 1B 
100dc     12 1B 16 1A 
100e0     0A F6 EC D8 | 	byte	$29, $24, $2f, $30, $48, $35, $29, $1b, $12, $1b, $16, $1a, $0a, $f6, $ec, $d8
100e4     C1 B2 A9 B6 
100e8     CD CA D9 E9 
100ec     01 24 2C 2E 
100f0     31 25 23 27 | 	byte	$c1, $b2, $a9, $b6, $cd, $ca, $d9, $e9, $01, $24, $2c, $2e, $31, $25, $23, $27
100f4     1A 29 29 11 
100f8     0A FF E5 BC 
100fc     BB D5 E0 F2 
10100     FE 08 0E 06 | 	byte	$1a, $29, $29, $11, $0a, $ff, $e5, $bc, $bb, $d5, $e0, $f2, $fe, $08, $0e, $06
10104     18 23 1F 11 
10108     E3 F6 F5 F0 
1010c     EE ED F2 F3 
10110     D7 C0 D2 DA | 	byte	$18, $23, $1f, $11, $e3, $f6, $f5, $f0, $ee, $ed, $f2, $f3, $d7, $c0, $d2, $da
10114     00 09 0E 32 
10118     29 32 3C 3F 
1011c     35 24 1F 1A 
10120     11 18 17 04 | 	byte	$00, $09, $0e, $32, $29, $32, $3c, $3f, $35, $24, $1f, $1a, $11, $18, $17, $04
10124     F3 DD D4 C7 
10128     AA A7 C3 C9 
1012c     C5 DA F1 06 
10130     18 2E 31 2B | 	byte	$f3, $dd, $d4, $c7, $aa, $a7, $c3, $c9, $c5, $da, $f1, $06, $18, $2e, $31, $2b
10134     1A 21 2F 23 
10138     2B 2C 0E 08 
1013c     F6 D7 C7 C3 
10140     D9 EE E8 FC | 	byte	$1a, $21, $2f, $23, $2b, $2c, $0e, $08, $f6, $d7, $c7, $c3, $d9, $ee, $e8, $fc
10144     06 09 10 16 
10148     23 27 FB E9 
1014c     FE ED EB F3 
10150     F0 F3 EE C9 | 	byte	$06, $09, $10, $16, $23, $27, $fb, $e9, $fe, $ed, $eb, $f3, $f0, $f3, $ee, $c9
10154     CE D4 E3 00 
10158     08 17 2E 2E 
1015c     32 35 43 35 
10160     25 1C 18 16 | 	byte	$ce, $d4, $e3, $00, $08, $17, $2e, $2e, $32, $35, $43, $35, $25, $1c, $18, $16
10164     15 17 F9 EA 
10168     D9 C8 C5 AE 
1016c     AA C2 C7 C7 
10170     D7 02 14 21 | 	byte	$15, $17, $f9, $ea, $d9, $c8, $c5, $ae, $aa, $c2, $c7, $c7, $d7, $02, $14, $21
10174     26 2F 2E 21 
10178     26 31 2D 21 
1017c     1C 13 FB E3 
10180     DB D0 CA D7 | 	byte	$26, $2f, $2e, $21, $26, $31, $2d, $21, $1c, $13, $fb, $e3, $db, $d0, $ca, $d7
10184     E6 F4 FE 03 
10188     07 12 1E 29 
1018c     12 03 F1 EC 
10190     F3 EB FC EC | 	byte	$e6, $f4, $fe, $03, $07, $12, $1e, $29, $12, $03, $f1, $ec, $f3, $eb, $fc, $ec
10194     F0 E0 C7 D3 
10198     CE F3 0D 06 
1019c     1B 2E 31 30 
101a0     34 47 35 2A | 	byte	$f0, $e0, $c7, $d3, $ce, $f3, $0d, $06, $1b, $2e, $31, $30, $34, $47, $35, $2a
101a4     26 14 17 0F 
101a8     0B FA E1 D5 
101ac     C5 B9 AE B2 
101b0     C2 C3 C7 EE | 	byte	$26, $14, $17, $0f, $0b, $fa, $e1, $d5, $c5, $b9, $ae, $b2, $c2, $c3, $c7, $ee
101b4     02 11 20 24 
101b8     2E 2E 2C 32 
101bc     25 20 2C 20 
101c0     11 EE D3 E6 | 	byte	$02, $11, $20, $24, $2e, $2e, $2c, $32, $25, $20, $2c, $20, $11, $ee, $d3, $e6
101c4     C2 D0 F3 E3 
101c8     EB F2 0A 19 
101cc     05 18 26 12 
101d0     02 FE EC E6 | 	byte	$c2, $d0, $f3, $e3, $eb, $f2, $0a, $19, $05, $18, $26, $12, $02, $fe, $ec, $e6
101d4     F3 FD 02 DB 
101d8     C3 D0 D3 E2 
101dc     F8 0C 0B 06 
101e0     34 41 27 2D | 	byte	$f3, $fd, $02, $db, $c3, $d0, $d3, $e2, $f8, $0c, $0b, $06, $34, $41, $27, $2d
101e4     43 43 38 21 
101e8     14 15 16 FB 
101ec     FF E5 B2 C3 
101f0     BB B5 B7 BB | 	byte	$43, $43, $38, $21, $14, $15, $16, $fb, $ff, $e5, $b2, $c3, $bb, $b5, $b7, $bb
101f4     C6 CC E9 19 
101f8     15 17 25 2A 
101fc     3C 30 2D 2C 
10200     24 22 1D 06 | 	byte	$c6, $cc, $e9, $19, $15, $17, $25, $2a, $3c, $30, $2d, $2c, $24, $22, $1d, $06
10204     DC D5 E1 E0 
10208     DC DF E1 E6 
1020c     F4 09 17 0B 
10210     10 20 20 08 | 	byte	$dc, $d5, $e1, $e0, $dc, $df, $e1, $e6, $f4, $09, $17, $0b, $10, $20, $20, $08
10214     E8 F1 FA F2 
10218     F8 F8 D5 C4 
1021c     CD DF E6 04 
10220     08 07 17 29 | 	byte	$e8, $f1, $fa, $f2, $f8, $f8, $d5, $c4, $cd, $df, $e6, $04, $08, $07, $17, $29
10224     3F 29 31 47 
10228     3D 34 22 24 
1022c     1D FD FF F0 
10230     D2 BD B9 BD | 	byte	$3f, $29, $31, $47, $3d, $34, $22, $24, $1d, $fd, $ff, $f0, $d2, $bd, $b9, $bd
10234     B4 BA BB C3 
10238     CE F4 17 17 
1023c     1E 22 2D 3A 
10240     33 34 32 20 | 	byte	$b4, $ba, $bb, $c3, $ce, $f4, $17, $17, $1e, $22, $2d, $3a, $33, $34, $32, $20
10244     0A 13 F0 D4 
10248     E5 E3 E3 DE 
1024c     E4 E7 E7 F8 
10250     17 14 0A 15 | 	byte	$0a, $13, $f0, $d4, $e5, $e3, $e3, $de, $e4, $e7, $e7, $f8, $17, $14, $0a, $15
10254     23 15 01 FF 
10258     00 EF E6 F0 
1025c     ED D2 CB C9 
10260     E2 F2 08 0C | 	byte	$23, $15, $01, $ff, $00, $ef, $e6, $f0, $ed, $d2, $cb, $c9, $e2, $f2, $08, $0c
10264     05 19 2C 36 
10268     30 3C 42 3F 
1026c     3F 30 19 05 
10270     EB F5 EC C5 | 	byte	$05, $19, $2c, $36, $30, $3c, $42, $3f, $3f, $30, $19, $05, $eb, $f5, $ec, $c5
10274     BB BA BB AE 
10278     BD D1 C6 DB 
1027c     04 1F 1C 15 
10280     2C 31 3C 3E | 	byte	$bb, $ba, $bb, $ae, $bd, $d1, $c6, $db, $04, $1f, $1c, $15, $2c, $31, $3c, $3e
10284     2A 2B 01 FE 
10288     08 E3 DA DB 
1028c     E8 F3 ED EA 
10290     E2 E4 07 1A | 	byte	$2a, $2b, $01, $fe, $08, $e3, $da, $db, $e8, $f3, $ed, $ea, $e2, $e4, $07, $1a
10294     1B 0C 1B 24 
10298     19 10 F2 F1 
1029c     D9 E2 04 DF 
102a0     CB C4 CB F5 | 	byte	$1b, $0c, $1b, $24, $19, $10, $f2, $f1, $d9, $e2, $04, $df, $cb, $c4, $cb, $f5
102a4     01 06 07 07 
102a8     23 2E 33 37 
102ac     3D 4A 45 41 
102b0     23 09 EF E8 | 	byte	$01, $06, $07, $07, $23, $2e, $33, $37, $3d, $4a, $45, $41, $23, $09, $ef, $e8
102b4     07 DF BE A9 
102b8     B9 C6 B8 C1 
102bc     C6 D1 E2 07 
102c0     26 1E 12 2C | 	byte	$07, $df, $be, $a9, $b9, $c6, $b8, $c1, $c6, $d1, $e2, $07, $26, $1e, $12, $2c
102c4     49 41 30 22 
102c8     1B FE FD FD 
102cc     E3 D4 DE F6 
102d0     F7 ED DB E7 | 	byte	$49, $41, $30, $22, $1b, $fe, $fd, $fd, $e3, $d4, $de, $f6, $f7, $ed, $db, $e7
102d4     FB 09 1F 15 
102d8     10 23 27 12 
102dc     00 EF E0 D9 
102e0     F4 F6 D1 C1 | 	byte	$fb, $09, $1f, $15, $10, $23, $27, $12, $00, $ef, $e0, $d9, $f4, $f6, $d1, $c1
102e4     C5 E5 F9 FF 
102e8     0B 11 16 1D 
102ec     35 3B 2C 40 
102f0     50 47 36 18 | 	byte	$c5, $e5, $f9, $ff, $0b, $11, $16, $1d, $35, $3b, $2c, $40, $50, $47, $36, $18
102f4     FF EC EC F5 
102f8     D3 B5 B4 C2 
102fc     C2 BD BE D0 
10300     D9 F0 11 24 | 	byte	$ff, $ec, $ec, $f5, $d3, $b5, $b4, $c2, $c2, $bd, $be, $d0, $d9, $f0, $11, $24
10304     1B 1D 34 3F 
10308     39 2C 1F 00 
1030c     FF 09 F0 D6 
10310     D1 EF FD F4 | 	byte	$1b, $1d, $34, $3f, $39, $2c, $1f, $00, $ff, $09, $f0, $d6, $d1, $ef, $fd, $f4
10314     EB E1 EB FA 
10318     16 21 14 08 
1031c     1B 2E 15 01 
10320     E9 D7 DE F7 | 	byte	$eb, $e1, $eb, $fa, $16, $21, $14, $08, $1b, $2e, $15, $01, $e9, $d7, $de, $f7
10324     E7 CC CA CC 
10328     EA F9 FF 08 
1032c     0F 22 28 3B 
10330     3F 34 38 49 | 	byte	$e7, $cc, $ca, $cc, $ea, $f9, $ff, $08, $0f, $22, $28, $3b, $3f, $34, $38, $49
10334     48 2B 08 FC 
10338     F5 EE E4 C5 
1033c     B2 B3 BD D2 
10340     CA C1 C9 E3 | 	byte	$48, $2b, $08, $fc, $f5, $ee, $e4, $c5, $b2, $b3, $bd, $d2, $ca, $c1, $c9, $e3
10344     01 16 23 23 
10348     1D 2E 41 35 
1034c     2C 18 00 08 
10350     EB E7 E3 D3 | 	byte	$01, $16, $23, $23, $1d, $2e, $41, $35, $2c, $18, $00, $08, $eb, $e7, $e3, $d3
10354     F0 FE F5 DD 
10358     E8 04 0A 14 
1035c     1B 19 11 0E 
10360     22 15 F1 F2 | 	byte	$f0, $fe, $f5, $dd, $e8, $04, $0a, $14, $1b, $19, $11, $0e, $22, $15, $f1, $f2
10364     E4 E6 E2 CD 
10368     D9 C8 D2 EE 
1036c     FD 00 09 1C 
10370     2A 2F 31 32 | 	byte	$e4, $e6, $e2, $cd, $d9, $c8, $d2, $ee, $fd, $00, $09, $1c, $2a, $2f, $31, $32
10374     39 3B 45 41 
10378     1C 19 F9 F2 
1037c     F0 C9 D0 B4 
10380     B8 D6 BC BB | 	byte	$39, $3b, $45, $41, $1c, $19, $f9, $f2, $f0, $c9, $d0, $b4, $b8, $d6, $bc, $bb
10384     C6 DD F7 FC 
10388     19 20 1E 22 
1038c     21 39 2E 27 
10390     28 12 00 D3 | 	byte	$c6, $dd, $f7, $fc, $19, $20, $1e, $22, $21, $39, $2e, $27, $28, $12, $00, $d3
10394     EC EA D4 F0 
10398     FF F5 E4 EC 
1039c     0B 12 09 0F 
103a0     1D 13 0F 07 | 	byte	$ec, $ea, $d4, $f0, $ff, $f5, $e4, $ec, $0b, $12, $09, $0f, $1d, $13, $0f, $07
103a4     FD 00 F9 EE 
103a8     EA D5 D6 D1 
103ac     CB E7 E9 F5 
103b0     0A 10 2D 26 | 	byte	$fd, $00, $f9, $ee, $ea, $d5, $d6, $d1, $cb, $e7, $e9, $f5, $0a, $10, $2d, $26
103b4     1E 29 34 3F 
103b8     37 37 2E 20 
103bc     18 14 FD DB 
103c0     CA C7 C3 C0 | 	byte	$1e, $29, $34, $3f, $37, $37, $2e, $20, $18, $14, $fd, $db, $ca, $c7, $c3, $c0
103c4     C8 BD C2 D2 
103c8     E4 00 00 0E 
103cc     17 1A 1E 26 
103d0     1C 22 31 30 | 	byte	$c8, $bd, $c2, $d2, $e4, $00, $00, $0e, $17, $1a, $1e, $26, $1c, $22, $31, $30
103d4     21 EF D6 E9 
103d8     E5 ED F5 FE 
103dc     EF E5 01 10 
103e0     11 05 11 11 | 	byte	$21, $ef, $d6, $e9, $e5, $ed, $f5, $fe, $ef, $e5, $01, $10, $11, $05, $11, $11
103e4     0A 12 EF F1 
103e8     01 FA 01 EE 
103ec     D3 D4 CB DC 
103f0     E8 EE FE FE | 	byte	$0a, $12, $ef, $f1, $01, $fa, $01, $ee, $d3, $d4, $cb, $dc, $e8, $ee, $fe, $fe
103f4     1D 37 24 16 
103f8     1D 39 36 30 
103fc     36 1D 20 16 
10400     12 11 D6 C1 | 	byte	$1d, $37, $24, $16, $1d, $39, $36, $30, $36, $1d, $20, $16, $12, $11, $d6, $c1
10404     C4 C8 D1 BC 
10408     C2 CD CE ED 
1040c     FE 0E 0C 0E 
10410     15 1B 20 10 | 	byte	$c4, $c8, $d1, $bc, $c2, $cd, $ce, $ed, $fe, $0e, $0c, $0e, $15, $1b, $20, $10
10414     23 2F 2D 23 
10418     F8 D6 DC E7 
1041c     FD 04 FD FA 
10420     E7 01 18 0F | 	byte	$23, $2f, $2d, $23, $f8, $d6, $dc, $e7, $fd, $04, $fd, $fa, $e7, $01, $18, $0f
10424     08 05 0F 0D 
10428     04 E4 DF F4 
1042c     01 07 F5 E0 
10430     CC C3 DD F6 | 	byte	$08, $05, $0f, $0d, $04, $e4, $df, $f4, $01, $07, $f5, $e0, $cc, $c3, $dd, $f6
10434     F7 FC 09 1D 
10438     2E 20 15 1A 
1043c     2B 3D 32 2D 
10440     24 12 11 0F | 	byte	$f7, $fc, $09, $1d, $2e, $20, $15, $1a, $2b, $3d, $32, $2d, $24, $12, $11, $0f
10444     12 ED C8 C1 
10448     C7 D6 C4 BC 
1044c     CA D3 E9 08 
10450     12 0C 09 11 | 	byte	$12, $ed, $c8, $c1, $c7, $d6, $c4, $bc, $ca, $d3, $e9, $08, $12, $0c, $09, $11
10454     1A 15 0F 19 
10458     28 2D 25 01 
1045c     DC D8 EA F6 
10460     0E 09 F7 F8 | 	byte	$1a, $15, $0f, $19, $28, $2d, $25, $01, $dc, $d8, $ea, $f6, $0e, $09, $f7, $f8
10464     04 12 0C 08 
10468     04 06 0F 01 
1046c     DB E7 E7 F3 
10470     06 05 EF C9 | 	byte	$04, $12, $0c, $08, $04, $06, $0f, $01, $db, $e7, $e7, $f3, $06, $05, $ef, $c9
10474     C3 E4 F8 F8 
10478     09 07 17 2B 
1047c     21 19 11 24 
10480     35 32 26 26 | 	byte	$c3, $e4, $f8, $f8, $09, $07, $17, $2b, $21, $19, $11, $24, $35, $32, $26, $26
10484     11 05 16 15 
10488     FA CC BF CE 
1048c     D5 CC B9 C6 
10490     D3 EC 03 13 | 	byte	$11, $05, $16, $15, $fa, $cc, $bf, $ce, $d5, $cc, $b9, $c6, $d3, $ec, $03, $13
10494     0D 03 09 17 
10498     12 11 21 16 
1049c     20 2F 11 E5 
104a0     D6 DE 02 13 | 	byte	$0d, $03, $09, $17, $12, $11, $21, $16, $20, $2f, $11, $e5, $d6, $de, $02, $13
104a4     0F 07 F0 FF 
104a8     12 14 07 01 
104ac     04 0F F8 D5 
104b0     DE DF EC 07 | 	byte	$0f, $07, $f0, $ff, $12, $14, $07, $01, $04, $0f, $f8, $d5, $de, $df, $ec, $07
104b4     0E 00 D9 BF 
104b8     D6 F5 05 02 
104bc     00 19 27 18 
104c0     10 1E 1E 26 | 	byte	$0e, $00, $d9, $bf, $d6, $f5, $05, $02, $00, $19, $27, $18, $10, $1e, $1e, $26
104c4     34 29 22 13 
104c8     07 18 18 FB 
104cc     DE C7 C7 D9 
104d0     D0 C2 C2 CA | 	byte	$34, $29, $22, $13, $07, $18, $18, $fb, $de, $c7, $c7, $d9, $d0, $c2, $c2, $ca
104d4     F0 04 0B 0E 
104d8     00 03 0A 0B 
104dc     0E 17 1A 20 
104e0     20 1C F5 E0 | 	byte	$f0, $04, $0b, $0e, $00, $03, $0a, $0b, $0e, $17, $1a, $20, $20, $1c, $f5, $e0
104e4     EF FD 13 16 
104e8     09 FC F9 0D 
104ec     0F 0E 05 00 
104f0     0D EB CC DB | 	byte	$ef, $fd, $13, $16, $09, $fc, $f9, $0d, $0f, $0e, $05, $00, $0d, $eb, $cc, $db
104f4     E1 EC FC 1D 
104f8     0B D8 D0 CF 
104fc     EF FB 02 15 
10500     0E 11 18 15 | 	byte	$e1, $ec, $fc, $1d, $0b, $d8, $d0, $cf, $ef, $fb, $02, $15, $0e, $11, $18, $15
10504     1D 16 2F 28 
10508     1A 24 19 12 
1050c     FF 1B 08 E9 
10510     E0 D1 D1 BF | 	byte	$1d, $16, $2f, $28, $1a, $24, $19, $12, $ff, $1b, $08, $e9, $e0, $d1, $d1, $bf
10514     C0 CB D9 EB 
10518     FE 0B 0E FB 
1051c     FB 09 FF 0C 
10520     26 1E 19 10 | 	byte	$c0, $cb, $d9, $eb, $fe, $0b, $0e, $fb, $fb, $09, $ff, $0c, $26, $1e, $19, $10
10524     18 07 EC F5 
10528     FF FF 18 18 
1052c     05 FF FC 13 
10530     0E FE 06 FF | 	byte	$18, $07, $ec, $f5, $ff, $ff, $18, $18, $05, $ff, $fc, $13, $0e, $fe, $06, $ff
10534     D6 C4 DA F4 
10538     EB FB 16 12 
1053c     ED D3 D3 E6 
10540     05 06 10 15 | 	byte	$d6, $c4, $da, $f4, $eb, $fb, $16, $12, $ed, $d3, $d3, $e6, $05, $06, $10, $15
10544     0D 12 0F 18 
10548     1A 2B 1F 13 
1054c     29 24 0C 09 
10550     11 15 F6 E4 | 	byte	$0d, $12, $0f, $18, $1a, $2b, $1f, $13, $29, $24, $0c, $09, $11, $15, $f6, $e4
10554     DD B8 BC C3 
10558     D5 E1 D3 04 
1055c     0F 08 F6 FE 
10560     06 ED 15 2B | 	byte	$dd, $b8, $bc, $c3, $d5, $e1, $d3, $04, $0f, $08, $f6, $fe, $06, $ed, $15, $2b
10564     1B 0B 16 22 
10568     17 F3 FB FC 
1056c     00 15 12 13 
10570     FF F7 11 09 | 	byte	$1b, $0b, $16, $22, $17, $f3, $fb, $fc, $00, $15, $12, $13, $ff, $f7, $11, $09
10574     FA 04 F1 C7 
10578     CF DF E9 EF 
1057c     F7 1A 15 EC 
10580     DF E5 E6 FF | 	byte	$fa, $04, $f1, $c7, $cf, $df, $e9, $ef, $f7, $1a, $15, $ec, $df, $e5, $e6, $ff
10584     08 1C 11 F6 
10588     0D 1D 16 10 
1058c     11 15 21 26 
10590     26 14 13 0A | 	byte	$08, $1c, $11, $f6, $0d, $1d, $16, $10, $11, $15, $21, $26, $26, $14, $13, $0a
10594     1D 0D E6 CE 
10598     B5 C4 C8 D7 
1059c     D6 DB FF 05 
105a0     02 F7 FC FB | 	byte	$1d, $0d, $e6, $ce, $b5, $c4, $c8, $d7, $d6, $db, $ff, $05, $02, $f7, $fc, $fb
105a4     FD 1E 23 15 
105a8     07 15 2B 2E 
105ac     F4 E8 FA 06 
105b0     14 10 1E 09 | 	byte	$fd, $1e, $23, $15, $07, $15, $2b, $2e, $f4, $e8, $fa, $06, $14, $10, $1e, $09
105b4     F3 08 0D 00 
105b8     EE D3 D7 E2 
105bc     D6 DD F1 02 
105c0     1A 1A FF E6 | 	byte	$f3, $08, $0d, $00, $ee, $d3, $d7, $e2, $d6, $dd, $f1, $02, $1a, $1a, $ff, $e6
105c4     D3 E3 10 11 
105c8     06 03 05 12 
105cc     0B 13 0A 05 
105d0     0D 23 37 27 | 	byte	$d3, $e3, $10, $11, $06, $03, $05, $12, $0b, $13, $0a, $05, $0d, $23, $37, $27
105d4     12 0D 20 23 
105d8     08 E2 D0 BC 
105dc     C9 CD D1 D7 
105e0     D6 FE 06 04 | 	byte	$12, $0d, $20, $23, $08, $e2, $d0, $bc, $c9, $cd, $d1, $d7, $d6, $fe, $06, $04
105e4     F2 EF FF FF 
105e8     20 21 11 0D 
105ec     21 2B 24 EF 
105f0     E2 F7 0B 1F | 	byte	$f2, $ef, $ff, $ff, $20, $21, $11, $0d, $21, $2b, $24, $ef, $e2, $f7, $0b, $1f
105f4     18 10 00 02 
105f8     07 04 F9 E6 
105fc     E3 D9 D9 DD 
10600     D9 F2 0D 19 | 	byte	$18, $10, $00, $02, $07, $04, $f9, $e6, $e3, $d9, $d9, $dd, $d9, $f2, $0d, $19
10604     27 00 D1 E7 
10608     E3 07 18 05 
1060c     FB 02 0C 0E 
10610     02 F9 09 19 | 	byte	$27, $00, $d1, $e7, $e3, $07, $18, $05, $fb, $02, $0c, $0e, $02, $f9, $09, $19
10614     32 26 22 22 
10618     1E 1D 1E 0D 
1061c     E2 D1 CD D1 
10620     CF C6 D3 DD | 	byte	$32, $26, $22, $22, $1e, $1d, $1e, $0d, $e2, $d1, $cd, $d1, $cf, $c6, $d3, $dd
10624     F9 08 F5 ED 
10628     EE F7 0B 17 
1062c     19 11 1E 1D 
10630     2A 23 F7 E9 | 	byte	$f9, $08, $f5, $ed, $ee, $f7, $0b, $17, $19, $11, $1e, $1d, $2a, $23, $f7, $e9
10634     EE 13 25 13 
10638     0E 0A F8 FF 
1063c     FD ED E9 DF 
10640     DC E3 E1 DB | 	byte	$ee, $13, $25, $13, $0e, $0a, $f8, $ff, $fd, $ed, $e9, $df, $dc, $e3, $e1, $db
10644     FD 18 1B 1C 
10648     F4 E6 E5 E2 
1064c     0A 10 FE FC 
10650     00 0A 05 FF | 	byte	$fd, $18, $1b, $1c, $f4, $e6, $e5, $e2, $0a, $10, $fe, $fc, $00, $0a, $05, $ff
10654     FA 03 1A 29 
10658     27 26 32 2A 
1065c     1C 20 07 DF 
10660     D4 D7 DD CA | 	byte	$fa, $03, $1a, $29, $27, $26, $32, $2a, $1c, $20, $07, $df, $d4, $d7, $dd, $ca
10664     BF D6 E0 F3 
10668     F4 F1 F8 ED 
1066c     F8 08 19 0E 
10670     0E 24 29 23 | 	byte	$bf, $d6, $e0, $f3, $f4, $f1, $f8, $ed, $f8, $08, $19, $0e, $0e, $24, $29, $23
10674     13 FC EB EB 
10678     13 26 12 0F 
1067c     0F 09 FD E8 
10680     E8 F2 E9 E3 | 	byte	$13, $fc, $eb, $eb, $13, $26, $12, $0f, $0f, $09, $fd, $e8, $e8, $f2, $e9, $e3
10684     E7 DD E0 FD 
10688     17 15 13 0C 
1068c     DE E9 F3 FD 
10690     FE EF 01 FF | 	byte	$e7, $dd, $e0, $fd, $17, $15, $13, $0c, $de, $e9, $f3, $fd, $fe, $ef, $01, $ff
10694     FA FB FD 00 
10698     FA 0D 2F 30 
1069c     24 38 39 22 
106a0     19 0E E6 E3 | 	byte	$fa, $fb, $fd, $00, $fa, $0d, $2f, $30, $24, $38, $39, $22, $19, $0e, $e6, $e3
106a4     E0 DA DD BE 
106a8     D0 D8 E3 EE 
106ac     E2 FC F4 F8 
106b0     02 13 0A 0D | 	byte	$e0, $da, $dd, $be, $d0, $d8, $e3, $ee, $e2, $fc, $f4, $f8, $02, $13, $0a, $0d
106b4     25 23 2B 19 
106b8     FF F0 F4 06 
106bc     1A 15 13 11 
106c0     02 F7 EB F1 | 	byte	$25, $23, $2b, $19, $ff, $f0, $f4, $06, $1a, $15, $13, $11, $02, $f7, $eb, $f1
106c4     EA EB EB E6 
106c8     E3 E7 09 0D 
106cc     10 14 02 F5 
106d0     E6 F3 F8 EF | 	byte	$ea, $eb, $eb, $e6, $e3, $e7, $09, $0d, $10, $14, $02, $f5, $e6, $f3, $f8, $ef
106d4     F8 F7 FA F9 
106d8     F6 00 00 01 
106dc     0D 25 31 2F 
106e0     41 3C 25 1C | 	byte	$f8, $f7, $fa, $f9, $f6, $00, $00, $01, $0d, $25, $31, $2f, $41, $3c, $25, $1c
106e4     0E E6 E7 E3 
106e8     E2 CF C7 D3 
106ec     D1 DC E6 EA 
106f0     F5 F5 F1 03 | 	byte	$0e, $e6, $e7, $e3, $e2, $cf, $c7, $d3, $d1, $dc, $e6, $ea, $f5, $f5, $f1, $03
106f4     08 08 15 27 
106f8     27 24 1F EF 
106fc     FD F9 FA 1B 
10700     0F 15 12 0B | 	byte	$08, $08, $15, $27, $27, $24, $1f, $ef, $fd, $f9, $fa, $1b, $0f, $15, $12, $0b
10704     FC E6 E7 EE 
10708     EF F8 F6 E4 
1070c     FB 08 07 0B 
10710     13 FA EC EA | 	byte	$fc, $e6, $e7, $ee, $ef, $f8, $f6, $e4, $fb, $08, $07, $0b, $13, $fa, $ec, $ea
10714     F0 EE E1 F6 
10718     F0 FC F9 FB 
1071c     02 FD 04 10 
10720     20 2D 34 40 | 	byte	$f0, $ee, $e1, $f6, $f0, $fc, $f9, $fb, $02, $fd, $04, $10, $20, $2d, $34, $40
10724     43 35 1C FB 
10728     E9 F3 E9 DB 
1072c     D9 D4 D5 CB 
10730     D7 DD E6 F9 | 	byte	$43, $35, $1c, $fb, $e9, $f3, $e9, $db, $d9, $d4, $d5, $cb, $d7, $dd, $e6, $f9
10734     F6 F7 FF F7 
10738     02 20 27 2D 
1073c     26 13 F4 F5 
10740     06 F1 09 10 | 	byte	$f6, $f7, $ff, $f7, $02, $20, $27, $2d, $26, $13, $f4, $f5, $06, $f1, $09, $10
10744     19 19 06 00 
10748     E3 F1 F4 F3 
1074c     FF F0 F5 05 
10750     01 02 05 00 | 	byte	$19, $19, $06, $00, $e3, $f1, $f4, $f3, $ff, $f0, $f5, $05, $01, $02, $05, $00
10754     05 ED F9 E6 
10758     D6 E5 EE FA 
1075c     EE 00 FC FA 
10760     04 07 19 14 | 	byte	$05, $ed, $f9, $e6, $d6, $e5, $ee, $fa, $ee, $00, $fc, $fa, $04, $07, $19, $14
10764     2B 43 46 42 
10768     39 14 F5 EA 
1076c     F1 F0 DB DA 
10770     DF D5 C4 D0 | 	byte	$2b, $43, $46, $42, $39, $14, $f5, $ea, $f1, $f0, $db, $da, $df, $d5, $c4, $d0
10774     DF E5 F4 F8 
10778     FC F3 F2 12 
1077c     20 29 29 18 
10780     11 FD FE FD | 	byte	$df, $e5, $f4, $f8, $fc, $f3, $f2, $12, $20, $29, $29, $18, $11, $fd, $fe, $fd
10784     E7 07 18 1F 
10788     19 09 04 E8 
1078c     EA F6 F7 08 
10790     F5 FB 0A 07 | 	byte	$e7, $07, $18, $1f, $19, $09, $04, $e8, $ea, $f6, $f7, $08, $f5, $fb, $0a, $07
10794     00 FB FC F6 
10798     F1 F6 DC D3 
1079c     E3 EC FA FE 
107a0     FE FD F1 01 | 	byte	$00, $fb, $fc, $f6, $f1, $f6, $dc, $d3, $e3, $ec, $fa, $fe, $fe, $fd, $f1, $01
107a4     1A 18 10 25 
107a8     51 49 45 2F 
107ac     0D 0A E0 F3 
107b0     F3 D2 DD DB | 	byte	$1a, $18, $10, $25, $51, $49, $45, $2f, $0d, $0a, $e0, $f3, $f3, $d2, $dd, $db
107b4     DB CA C5 E9 
107b8     E0 E7 FF FA 
107bc     F1 F0 12 27 
107c0     32 1C 0D 0B | 	byte	$db, $ca, $c5, $e9, $e0, $e7, $ff, $fa, $f1, $f0, $12, $27, $32, $1c, $0d, $0b
107c4     FF FD F7 F1 
107c8     F9 18 2B 15 
107cc     0C 08 F2 E2 
107d0     F6 13 0D F8 | 	byte	$ff, $fd, $f7, $f1, $f9, $18, $2b, $15, $0c, $08, $f2, $e2, $f6, $13, $0d, $f8
107d4     04 11 03 F7 
107d8     EC F4 F5 EF 
107dc     ED D0 D0 DD 
107e0     F7 00 FB FD | 	byte	$04, $11, $03, $f7, $ec, $f4, $f5, $ef, $ed, $d0, $d0, $dd, $f7, $00, $fb, $fd
107e4     F8 00 08 1C 
107e8     1A 0E 30 50 
107ec     4F 3C 23 10 
107f0     03 E1 F0 F1 | 	byte	$f8, $00, $08, $1c, $1a, $0e, $30, $50, $4f, $3c, $23, $10, $03, $e1, $f0, $f1
107f4     D1 E1 E3 DC 
107f8     C8 C8 DF E5 
107fc     F1 F9 F3 E8 
10800     F8 1A 2D 24 | 	byte	$d1, $e1, $e3, $dc, $c8, $c8, $df, $e5, $f1, $f9, $f3, $e8, $f8, $1a, $2d, $24
10804     10 07 12 08 
10808     F3 FB E6 06 
1080c     26 23 1A 05 
10810     06 FA ED F8 | 	byte	$10, $07, $12, $08, $f3, $fb, $e6, $06, $26, $23, $1a, $05, $06, $fa, $ed, $f8
10814     0D 00 FC 0F 
10818     11 0D EA EB 
1081c     F7 F8 ED D5 
10820     D0 D4 EA F9 | 	byte	$0d, $00, $fc, $0f, $11, $0d, $ea, $eb, $f7, $f8, $ed, $d5, $d0, $d4, $ea, $f9
10824     FB 00 F5 FA 
10828     02 0C 1E 0C 
1082c     1E 42 4A 4C 
10830     37 16 15 0E | 	byte	$fb, $00, $f5, $fa, $02, $0c, $1e, $0c, $1e, $42, $4a, $4c, $37, $16, $15, $0e
10834     F7 DD C0 DC 
10838     DC D8 E1 DC 
1083c     E8 D6 E4 EB 
10840     E9 E5 F3 1B | 	byte	$f7, $dd, $c0, $dc, $dc, $d8, $e1, $dc, $e8, $d6, $e4, $eb, $e9, $e5, $f3, $1b
10844     18 23 14 07 
10848     05 0F 18 FF 
1084c     FD 02 11 2C 
10850     1E 15 12 FA | 	byte	$18, $23, $14, $07, $05, $0f, $18, $ff, $fd, $02, $11, $2c, $1e, $15, $12, $fa
10854     EA EF 01 EF 
10858     F4 03 0B 05 
1085c     FA FA EC F2 
10860     F8 DF DB C5 | 	byte	$ea, $ef, $01, $ef, $f4, $03, $0b, $05, $fa, $fa, $ec, $f2, $f8, $df, $db, $c5
10864     D8 EE F1 FD 
10868     F1 FC FC 00 
1086c     1E 1C 21 42 
10870     44 50 42 2B | 	byte	$d8, $ee, $f1, $fd, $f1, $fc, $fc, $00, $1e, $1c, $21, $42, $44, $50, $42, $2b
10874     21 0C 0C F7 
10878     D6 D2 CF D5 
1087c     DE D5 DF DE 
10880     CA D9 E1 E8 | 	byte	$21, $0c, $0c, $f7, $d6, $d2, $cf, $d5, $de, $d5, $df, $de, $ca, $d9, $e1, $e8
10884     E6 05 15 1C 
10888     1E 09 0B 06 
1088c     18 1A FB FE 
10890     FE 15 28 1E | 	byte	$e6, $05, $15, $1c, $1e, $09, $0b, $06, $18, $1a, $fb, $fe, $fe, $15, $28, $1e
10894     1E 0D F1 EB 
10898     F5 0B FC 01 
1089c     08 11 03 F1 
108a0     F1 E9 FA F5 | 	byte	$1e, $0d, $f1, $eb, $f5, $0b, $fc, $01, $08, $11, $03, $f1, $f1, $e9, $fa, $f5
108a4     D7 D5 C4 D9 
108a8     F3 F9 FB F0 
108ac     F1 FB 0B 20 
108b0     22 2F 43 44 | 	byte	$d7, $d5, $c4, $d9, $f3, $f9, $fb, $f0, $f1, $fb, $0b, $20, $22, $2f, $43, $44
108b4     4D 3F 30 1B 
108b8     07 12 00 E9 
108bc     D6 C0 D7 DE 
108c0     D1 CC C4 CB | 	byte	$4d, $3f, $30, $1b, $07, $12, $00, $e9, $d6, $c0, $d7, $de, $d1, $cc, $c4, $cb
108c4     CE DE F1 F6 
108c8     01 0B 25 14 
108cc     08 0B 15 25 
108d0     1C 00 00 FE | 	byte	$ce, $de, $f1, $f6, $01, $0b, $25, $14, $08, $0b, $15, $25, $1c, $00, $00, $fe
108d4     09 28 1B 1C 
108d8     0B F3 E5 F5 
108dc     0F 0C 04 01 
108e0     10 FE E6 E5 | 	byte	$09, $28, $1b, $1c, $0b, $f3, $e5, $f5, $0f, $0c, $04, $01, $10, $fe, $e6, $e5
108e4     F0 FA EF E2 
108e8     DA CF CC EB 
108ec     FE F3 ED F3 
108f0     03 12 1B 24 | 	byte	$f0, $fa, $ef, $e2, $da, $cf, $cc, $eb, $fe, $f3, $ed, $f3, $03, $12, $1b, $24
108f4     37 3D 4C 47 
108f8     32 30 22 19 
108fc     0A 0B F0 E0 
10900     CB C6 E6 C8 | 	byte	$37, $3d, $4c, $47, $32, $30, $22, $19, $0a, $0b, $f0, $e0, $cb, $c6, $e6, $c8
10904     C1 C1 BF D5 
10908     DE EF FF FD 
1090c     0B 17 09 06 
10910     0E 25 1E 22 | 	byte	$c1, $c1, $bf, $d5, $de, $ef, $ff, $fd, $0b, $17, $09, $06, $0e, $25, $1e, $22
10914     0F 01 06 FF 
10918     1E 1E 1A 06 
1091c     E4 F6 FE 03 
10920     0E 15 10 01 | 	byte	$0f, $01, $06, $ff, $1e, $1e, $1a, $06, $e4, $f6, $fe, $03, $0e, $15, $10, $01
10924     F4 E5 E3 E8 
10928     EE F7 F0 D7 
1092c     D7 CD D9 F0 
10930     F1 F7 F3 FE | 	byte	$f4, $e5, $e3, $e8, $ee, $f7, $f0, $d7, $d7, $cd, $d9, $f0, $f1, $f7, $f3, $fe
10934     24 1B 2E 3A 
10938     3F 49 32 33 
1093c     32 25 1E 06 
10940     0C FC E1 DD | 	byte	$24, $1b, $2e, $3a, $3f, $49, $32, $33, $32, $25, $1e, $06, $0c, $fc, $e1, $dd
10944     C9 C7 CA BE 
10948     BC C1 D4 E5 
1094c     ED 09 07 03 
10950     03 FD 01 18 | 	byte	$c9, $c7, $ca, $be, $bc, $c1, $d4, $e5, $ed, $09, $07, $03, $03, $fd, $01, $18
10954     29 26 19 18 
10958     03 04 08 0B 
1095c     1F 1F FD FB 
10960     FC FA 05 16 | 	byte	$29, $26, $19, $18, $03, $04, $08, $0b, $1f, $1f, $fd, $fb, $fc, $fa, $05, $16
10964     1E 17 F3 D9 
10968     E2 DE EC E6 
1096c     EC 02 DB DA 
10970     D0 D0 E7 EB | 	byte	$1e, $17, $f3, $d9, $e2, $de, $ec, $e6, $ec, $02, $db, $da, $d0, $d0, $e7, $eb
10974     FE 0B 19 20 
10978     15 34 3F 40 
1097c     3A 2C 31 2A 
10980     2F 1D FF FF | 	byte	$fe, $0b, $19, $20, $15, $34, $3f, $40, $3a, $2c, $31, $2a, $2f, $1d, $ff, $ff
10984     F7 EB DE C4 
10988     BF C3 B0 C4 
1098c     CF D8 EC FB 
10990     0C 0A FA F2 | 	byte	$f7, $eb, $de, $c4, $bf, $c3, $b0, $c4, $cf, $d8, $ec, $fb, $0c, $0a, $fa, $f2
10994     F6 09 26 2D 
10998     1F 1A 16 0A 
1099c     FD 07 09 0E 
109a0     16 15 0C 01 | 	byte	$f6, $09, $26, $2d, $1f, $1a, $16, $0a, $fd, $07, $09, $0e, $16, $15, $0c, $01
109a4     F7 0B 1F 25 
109a8     0C E2 D6 D8 
109ac     E5 E0 E4 F0 
109b0     F2 EB CE D2 | 	byte	$f7, $0b, $1f, $25, $0c, $e2, $d6, $d8, $e5, $e0, $e4, $f0, $f2, $eb, $ce, $d2
109b4     CA D1 ED 04 
109b8     25 20 1A 27 
109bc     36 40 3F 2D 
109c0     2B 32 2C 23 | 	byte	$ca, $d1, $ed, $04, $25, $20, $1a, $27, $36, $40, $3f, $2d, $2b, $32, $2c, $23
109c4     16 09 F0 FA 
109c8     F5 DC B7 B2 
109cc     BF BD C6 D6 
109d0     E8 FA F9 0F | 	byte	$16, $09, $f0, $fa, $f5, $dc, $b7, $b2, $bf, $bd, $c6, $d6, $e8, $fa, $f9, $0f
109d4     09 EE E7 F6 
109d8     21 2E 24 21 
109dc     17 13 0B 08 
109e0     03 02 11 11 | 	byte	$09, $ee, $e7, $f6, $21, $2e, $24, $21, $17, $13, $0b, $08, $03, $02, $11, $11
109e4     19 08 FB 09 
109e8     0F 22 14 F0 
109ec     D9 CD D8 DE 
109f0     E1 F1 F4 F1 | 	byte	$19, $08, $fb, $09, $0f, $22, $14, $f0, $d9, $cd, $d8, $de, $e1, $f1, $f4, $f1
109f4     EB D4 C8 CB 
109f8     DE F5 12 2D 
109fc     2C 20 31 31 
10a00     3E 31 25 2E | 	byte	$eb, $d4, $c8, $cb, $de, $f5, $12, $2d, $2c, $20, $31, $31, $3e, $31, $25, $2e
10a04     2E 2E 10 09 
10a08     06 FD 05 E3 
10a0c     D2 B9 A9 B5 
10a10     BA DC E3 E8 | 	byte	$2e, $2e, $10, $09, $06, $fd, $05, $e3, $d2, $b9, $a9, $b5, $ba, $dc, $e3, $e8
10a14     0E FA 00 F9 
10a18     EB F8 FB 1C 
10a1c     2E 20 1E 14 
10a20     18 14 03 01 | 	byte	$0e, $fa, $00, $f9, $eb, $f8, $fb, $1c, $2e, $20, $1e, $14, $18, $14, $03, $01
10a24     06 16 0B 0F 
10a28     0F 08 15 14 
10a2c     14 11 E6 D9 
10a30     CA D4 DF DD | 	byte	$06, $16, $0b, $0f, $0f, $08, $15, $14, $14, $11, $e6, $d9, $ca, $d4, $df, $dd
10a34     F1 F3 F3 E4 
10a38     CB D1 C8 E5 
10a3c     04 1C 38 23 
10a40     30 38 37 42 | 	byte	$f1, $f3, $f3, $e4, $cb, $d1, $c8, $e5, $04, $1c, $38, $23, $30, $38, $37, $42
10a44     20 2D 34 1C 
10a48     1E 06 12 05 
10a4c     EF F7 E0 C2 
10a50     A8 AD BF C6 | 	byte	$20, $2d, $34, $1c, $1e, $06, $12, $05, $ef, $f7, $e0, $c2, $a8, $ad, $bf, $c6
10a54     D6 F1 F5 0C 
10a58     01 02 FF EA 
10a5c     02 0B 23 2C 
10a60     1D 1D 0D 1F | 	byte	$d6, $f1, $f5, $0c, $01, $02, $ff, $ea, $02, $0b, $23, $2c, $1d, $1d, $0d, $1f
10a64     0F F9 05 FF 
10a68     13 07 F5 1C 
10a6c     12 1C 21 05 
10a70     08 DF CB DD | 	byte	$0f, $f9, $05, $ff, $13, $07, $f5, $1c, $12, $1c, $21, $05, $08, $df, $cb, $dd
10a74     D6 DC E9 EE 
10a78     F5 E3 D8 D5 
10a7c     C9 D0 F2 0A 
10a80     1E 2F 2D 35 | 	byte	$d6, $dc, $e9, $ee, $f5, $e3, $d8, $d5, $c9, $d0, $f2, $0a, $1e, $2f, $2d, $35
10a84     3B 42 37 2F 
10a88     35 1B 19 10 
10a8c     0E 10 F3 F7 
10a90     F1 CA B5 A5 | 	byte	$3b, $42, $37, $2f, $35, $1b, $19, $10, $0e, $10, $f3, $f7, $f1, $ca, $b5, $a5
10a94     AF C4 C4 E1 
10a98     F6 00 12 03 
10a9c     FE FD F9 0A 
10aa0     21 25 28 1C | 	byte	$af, $c4, $c4, $e1, $f6, $00, $12, $03, $fe, $fd, $f9, $0a, $21, $25, $28, $1c
10aa4     16 18 1E 03 
10aa8     01 FC F2 07 
10aac     F3 05 12 11 
10ab0     21 1A 0F FF | 	byte	$16, $18, $1e, $03, $01, $fc, $f2, $07, $f3, $05, $12, $11, $21, $1a, $0f, $ff
10ab4     DB C8 E0 DD 
10ab8     ED F3 EC EA 
10abc     DE D6 CC CE 
10ac0     D6 FD 16 20 | 	byte	$db, $c8, $e0, $dd, $ed, $f3, $ec, $ea, $de, $d6, $cc, $ce, $d6, $fd, $16, $20
10ac4     2D 2B 3E 48 
10ac8     38 3F 32 27 
10acc     1C 06 16 14 
10ad0     04 F7 F1 E3 | 	byte	$2d, $2b, $3e, $48, $38, $3f, $32, $27, $1c, $06, $16, $14, $04, $f7, $f1, $e3
10ad4     C6 B2 A1 B6 
10ad8     C2 C8 E0 F7 
10adc     00 FF 13 04 
10ae0     0F 04 10 2A | 	byte	$c6, $b2, $a1, $b6, $c2, $c8, $e0, $f7, $00, $ff, $13, $04, $0f, $04, $10, $2a
10ae4     21 29 1D 14 
10ae8     22 0E 04 FE 
10aec     E5 EB F4 F7 
10af0     01 14 15 0F | 	byte	$21, $29, $1d, $14, $22, $0e, $04, $fe, $e5, $eb, $f4, $f7, $01, $14, $15, $0f
10af4     1B 0E F4 DB 
10af8     DC E0 D6 F6 
10afc     FA E3 E1 E6 
10b00     D7 D2 D5 EF | 	byte	$1b, $0e, $f4, $db, $dc, $e0, $d6, $f6, $fa, $e3, $e1, $e6, $d7, $d2, $d5, $ef
10b04     15 17 1D 2D 
10b08     3F 37 40 45 
10b0c     44 32 0B 13 
10b10     13 12 12 FD | 	byte	$15, $17, $1d, $2d, $3f, $37, $40, $45, $44, $32, $0b, $13, $13, $12, $12, $fd
10b14     EF EB CB B9 
10b18     AA A7 B7 CB 
10b1c     D5 E3 F7 00 
10b20     0B 09 0C 19 | 	byte	$ef, $eb, $cb, $b9, $aa, $a7, $b7, $cb, $d5, $e3, $f7, $00, $0b, $09, $0c, $19
10b24     12 22 20 20 
10b28     27 17 1A 18 
10b2c     00 FF EB DB 
10b30     EB FC 07 08 | 	byte	$12, $22, $20, $20, $27, $17, $1a, $18, $00, $ff, $eb, $db, $eb, $fc, $07, $08
10b34     0E 15 0F 22 
10b38     08 F1 E3 DB 
10b3c     E6 E7 ED E8 
10b40     DE E7 DC CE | 	byte	$0e, $15, $0f, $22, $08, $f1, $e3, $db, $e6, $e7, $ed, $e8, $de, $e7, $dc, $ce
10b44     DE DA FE 1E 
10b48     1B 1F 34 45 
10b4c     39 43 44 30 
10b50     21 10 1E 12 | 	byte	$de, $da, $fe, $1e, $1b, $1f, $34, $45, $39, $43, $44, $30, $21, $10, $1e, $12
10b54     10 0A F0 EB 
10b58     E0 BE AF A3 
10b5c     B2 C6 C9 D4 
10b60     DE 06 0C 04 | 	byte	$10, $0a, $f0, $eb, $e0, $be, $af, $a3, $b2, $c6, $c9, $d4, $de, $06, $0c, $04
10b64     1D 18 21 25 
10b68     1B 23 27 21 
10b6c     1E 18 15 F5 
10b70     E5 CF DF FA | 	byte	$1d, $18, $21, $25, $1b, $23, $27, $21, $1e, $18, $15, $f5, $e5, $cf, $df, $fa
10b74     FE FB 04 19 
10b78     0E 0A 1B FC 
10b7c     ED DE ED ED 
10b80     DB ED EC EB | 	byte	$fe, $fb, $04, $19, $0e, $0a, $1b, $fc, $ed, $de, $ed, $ed, $db, $ed, $ec, $eb
10b84     E5 D0 DC DD 
10b88     EF 0B 1A 1E 
10b8c     24 3D 43 3E 
10b90     45 2B 23 26 | 	byte	$e5, $d0, $dc, $dd, $ef, $0b, $1a, $1e, $24, $3d, $43, $3e, $45, $2b, $23, $26
10b94     16 1C 12 0B 
10b98     05 E5 F4 CE 
10b9c     B7 A4 A8 C5 
10ba0     C5 C4 D4 ED | 	byte	$16, $1c, $12, $0b, $05, $e5, $f4, $ce, $b7, $a4, $a8, $c5, $c5, $c4, $d4, $ed
10ba4     0D FD 0D 24 
10ba8     13 33 24 21 
10bac     23 1B 28 1C 
10bb0     19 02 E2 D8 | 	byte	$0d, $fd, $0d, $24, $13, $33, $24, $21, $23, $1b, $28, $1c, $19, $02, $e2, $d8
10bb4     D3 F0 06 FB 
10bb8     FA 03 1C 11 
10bbc     12 0D EF F2 
10bc0     E8 E2 E2 E4 | 	byte	$d3, $f0, $06, $fb, $fa, $03, $1c, $11, $12, $0d, $ef, $f2, $e8, $e2, $e2, $e4
10bc4     E7 F0 E6 EA 
10bc8     D4 D4 EE FC 
10bcc     1F 1D 26 2C 
10bd0     3E 47 31 31 | 	byte	$e7, $f0, $e6, $ea, $d4, $d4, $ee, $fc, $1f, $1d, $26, $2c, $3e, $47, $31, $31
10bd4     1A 2D 26 0F 
10bd8     1F 08 01 F5 
10bdc     E9 E6 C2 AA 
10be0     A6 B3 C3 C9 | 	byte	$1a, $2d, $26, $0f, $1f, $08, $01, $f5, $e9, $e6, $c2, $aa, $a6, $b3, $c3, $c9
10be4     C8 DD 01 0E 
10be8     0E 1D 1C 26 
10bec     30 22 25 21 
10bf0     26 23 0F 11 | 	byte	$c8, $dd, $01, $0e, $0e, $1d, $1c, $26, $30, $22, $25, $21, $26, $23, $0f, $11
10bf4     EA CA DE E9 
10bf8     03 FD FD 03 
10bfc     0C 10 09 0A 
10c00     F7 F6 F1 EC | 	byte	$ea, $ca, $de, $e9, $03, $fd, $fd, $03, $0c, $10, $09, $0a, $f7, $f6, $f1, $ec
10c04     00 00 00 00 
10c08     FC F8 FE FC 
10c0c     F7 FD FE F9 
10c10     F8 FF F9 F4 | 	byte	$00, $00, $00, $00, $fc, $f8, $fe, $fc, $f7, $fd, $fe, $f9, $f8, $ff, $f9, $f4
10c14     F9 FB F7 FA 
10c18     FD FD F9 FC 
10c1c     FC F9 F8 FB 
10c20     F1 F0 EF F0 | 	byte	$f9, $fb, $f7, $fa, $fd, $fd, $f9, $fc, $fc, $f9, $f8, $fb, $f1, $f0, $ef, $f0
10c24     EE EA EC E8 
10c28     E4 E2 DD D9 
10c2c     D9 D6 D7 D4 
10c30     DA E0 DC E0 | 	byte	$ee, $ea, $ec, $e8, $e4, $e2, $dd, $d9, $d9, $d6, $d7, $d4, $da, $e0, $dc, $e0
10c34     E7 E8 EA ED 
10c38     F1 FA FC FE 
10c3c     07 0D 12 19 
10c40     1A 1E 2A 25 | 	byte	$e7, $e8, $ea, $ed, $f1, $fa, $fc, $fe, $07, $0d, $12, $19, $1a, $1e, $2a, $25
10c44     21 28 2A 24 
10c48     26 24 25 27 
10c4c     25 23 22 21 
10c50     1F 18 10 0C | 	byte	$21, $28, $2a, $24, $26, $24, $25, $27, $25, $23, $22, $21, $1f, $18, $10, $0c
10c54     07 03 FF FA 
10c58     F6 ED E7 DC 
10c5c     D1 CE C6 BF 
10c60     BE B3 AF AF | 	byte	$07, $03, $ff, $fa, $f6, $ed, $e7, $dc, $d1, $ce, $c6, $bf, $be, $b3, $af, $af
10c64     AA A6 A7 A7 
10c68     AE AB B5 C9 
10c6c     D4 E4 F8 02 
10c70     11 1D 20 26 | 	byte	$aa, $a6, $a7, $a7, $ae, $ab, $b5, $c9, $d4, $e4, $f8, $02, $11, $1d, $20, $26
10c74     2C 2C 34 3A 
10c78     3E 44 44 3D 
10c7c     3A 32 2A 2B 
10c80     25 21 20 1D | 	byte	$2c, $2c, $34, $3a, $3e, $44, $44, $3d, $3a, $32, $2a, $2b, $25, $21, $20, $1d
10c84     18 17 15 11 
10c88     0C 09 0B 0E 
10c8c     13 11 15 17 
10c90     10 0C 0C 08 | 	byte	$18, $17, $15, $11, $0c, $09, $0b, $0e, $13, $11, $15, $17, $10, $0c, $0c, $08
10c94     09 08 0B 0F 
10c98     11 12 10 0A 
10c9c     09 08 07 0A 
10ca0     0E 0F 0B 0C | 	byte	$09, $08, $0b, $0f, $11, $12, $10, $0a, $09, $08, $07, $0a, $0e, $0f, $0b, $0c
10ca4     03 FD 00 05 
10ca8     07 12 21 2B 
10cac     2B 34 36 30 
10cb0     2A 29 23 1E | 	byte	$03, $fd, $00, $05, $07, $12, $21, $2b, $2b, $34, $36, $30, $2a, $29, $23, $1e
10cb4     1E 1F 1A 14 
10cb8     11 06 FD F6 
10cbc     EC E5 DD D8 
10cc0     D7 D2 D3 DB | 	byte	$1e, $1f, $1a, $14, $11, $06, $fd, $f6, $ec, $e5, $dd, $d8, $d7, $d2, $d3, $db
10cc4     DA E0 E9 ED 
10cc8     EF F7 F8 FB 
10ccc     FD FC FC FA 
10cd0     F8 FD FD F8 | 	byte	$da, $e0, $e9, $ed, $ef, $f7, $f8, $fb, $fd, $fc, $fc, $fa, $f8, $fd, $fd, $f8
10cd4     FC FD F8 FA 
10cd8     FB FA FA F9 
10cdc     F5 F6 FA FB 
10ce0     F8 FB 01 FD | 	byte	$fc, $fd, $f8, $fa, $fb, $fa, $fa, $f9, $f5, $f6, $fa, $fb, $f8, $fb, $01, $fd
10ce4     FB F9 F9 F9 
10ce8     F4 F1 F2 F0 
10cec     F3 F0 EA ED 
10cf0     E8 E2 DE DA | 	byte	$fb, $f9, $f9, $f9, $f4, $f1, $f2, $f0, $f3, $f0, $ea, $ed, $e8, $e2, $de, $da
10cf4     DA DA D6 D6 
10cf8     D9 DC E2 DD 
10cfc     E2 E9 E9 EA 
10d00     F2 F2 F5 01 | 	byte	$da, $da, $d6, $d6, $d9, $dc, $e2, $dd, $e2, $e9, $e9, $ea, $f2, $f2, $f5, $01
10d04     06 08 11 18 
10d08     1E 21 23 26 
10d0c     2A 25 25 24 
10d10     26 2A 2C 2D | 	byte	$06, $08, $11, $18, $1e, $21, $23, $26, $2a, $25, $25, $24, $26, $2a, $2c, $2d
10d14     2D 2C 28 20 
10d18     1F 1B 16 15 
10d1c     10 09 07 00 
10d20     FA F4 EB E2 | 	byte	$2d, $2c, $28, $20, $1f, $1b, $16, $15, $10, $09, $07, $00, $fa, $f4, $eb, $e2
10d24     DC D2 CC C7 
10d28     C3 BA B6 B1 
10d2c     AD A8 A3 A4 
10d30     A2 A5 B0 C3 | 	byte	$dc, $d2, $cc, $c7, $c3, $ba, $b6, $b1, $ad, $a8, $a3, $a4, $a2, $a5, $b0, $c3
10d34     D1 E3 ED F6 
10d38     FF 0A 12 18 
10d3c     26 30 32 3A 
10d40     40 3D 3C 39 | 	byte	$d1, $e3, $ed, $f6, $ff, $0a, $12, $18, $26, $30, $32, $3a, $40, $3d, $3c, $39
10d44     36 2F 2F 31 
10d48     27 25 25 1E 
10d4c     17 14 0F 0E 
10d50     0D 0E 13 13 | 	byte	$36, $2f, $2f, $31, $27, $25, $25, $1e, $17, $14, $0f, $0e, $0d, $0e, $13, $13
10d54     13 16 11 09 
10d58     09 08 05 0D 
10d5c     10 11 11 0E 
10d60     09 08 05 08 | 	byte	$13, $16, $11, $09, $09, $08, $05, $0d, $10, $11, $11, $0e, $09, $08, $05, $08
10d64     0D 0D 10 12 
10d68     0E 0A 06 FF 
10d6c     F9 F9 FE 00 
10d70     0C 1B 1F 25 | 	byte	$0d, $0d, $10, $12, $0e, $0a, $06, $ff, $f9, $f9, $fe, $00, $0c, $1b, $1f, $25
10d74     2B 2B 2A 29 
10d78     27 28 27 27 
10d7c     24 1F 1E 1A 
10d80     10 09 01 F9 | 	byte	$2b, $2b, $2a, $29, $27, $28, $27, $27, $24, $1f, $1e, $1a, $10, $09, $01, $f9
10d84     EF E6 E0 DD 
10d88     D7 D5 D3 D4 
10d8c     DC DE E1 E8 
10d90     EF EF F3 F5 | 	byte	$ef, $e6, $e0, $dd, $d7, $d5, $d3, $d4, $dc, $de, $e1, $e8, $ef, $ef, $f3, $f5
10d94     F6 FC FC F5 
10d98     F8 FB FB F9 
10d9c     FB FE FD FB 
10da0     FA F9 F8 F8 | 	byte	$f6, $fc, $fc, $f5, $f8, $fb, $fb, $f9, $fb, $fe, $fd, $fb, $fa, $f9, $f8, $f8
10da4     F8 F8 F7 FB 
10da8     00 FC FC FE 
10dac     FB FB F9 F4 
10db0     F7 F8 F5 F4 | 	byte	$f8, $f8, $f7, $fb, $00, $fc, $fc, $fe, $fb, $fb, $f9, $f4, $f7, $f8, $f5, $f4
10db4     F2 F1 EF EC 
10db8     E7 E4 E1 DC 
10dbc     DA D8 D8 D9 
10dc0     DB DB DC DE | 	byte	$f2, $f1, $ef, $ec, $e7, $e4, $e1, $dc, $da, $d8, $d8, $d9, $db, $db, $dc, $de
10dc4     E1 E2 E5 E9 
10dc8     ED EF EF F7 
10dcc     FF 06 10 19 
10dd0     1B 1E 1E 1F | 	byte	$e1, $e2, $e5, $e9, $ed, $ef, $ef, $f7, $ff, $06, $10, $19, $1b, $1e, $1e, $1f
10dd4     20 22 26 26 
10dd8     27 2D 2C 2A 
10ddc     2E 2C 25 24 
10de0     20 1D 1C 18 | 	byte	$20, $22, $26, $26, $27, $2d, $2c, $2a, $2e, $2c, $25, $24, $20, $1d, $1c, $18
10de4     14 0F 09 08 
10de8     01 F6 F1 EC 
10dec     DE D8 D6 D1 
10df0     CB C6 BD B5 | 	byte	$14, $0f, $09, $08, $01, $f6, $f1, $ec, $de, $d8, $d6, $d1, $cb, $c6, $bd, $b5
10df4     AB A7 A3 A1 
10df8     A5 AD B7 C0 
10dfc     CA D6 DF E6 
10e00     F6 FE 0B 1D | 	byte	$ab, $a7, $a3, $a1, $a5, $ad, $b7, $c0, $ca, $d6, $df, $e6, $f6, $fe, $0b, $1d
10e04     23 2B 32 36 
10e08     37 37 39 3A 
10e0c     35 38 39 31 
10e10     2F 2A 20 19 | 	byte	$23, $2b, $32, $36, $37, $37, $39, $3a, $35, $38, $39, $31, $2f, $2a, $20, $19
10e14     13 12 13 15 
10e18     17 18 16 13 
10e1c     0E 08 09 0D 
10e20     0C 0D 12 10 | 	byte	$13, $12, $13, $15, $17, $18, $16, $13, $0e, $08, $09, $0d, $0c, $0d, $12, $10
10e24     10 0E 08 05 
10e28     07 06 08 0D 
10e2c     15 15 13 11 
10e30     09 02 FE F7 | 	byte	$10, $0e, $08, $05, $07, $06, $08, $0d, $15, $15, $13, $11, $09, $02, $fe, $f7
10e34     F7 FD 01 06 
10e38     0B 15 1E 1E 
10e3c     1F 26 28 26 
10e40     28 29 2A 2B | 	byte	$f7, $fd, $01, $06, $0b, $15, $1e, $1e, $1f, $26, $28, $26, $28, $29, $2a, $2b
10e44     2A 25 21 1C 
10e48     17 0F 06 FD 
10e4c     F5 ED E5 DE 
10e50     DC D9 D8 D6 | 	byte	$2a, $25, $21, $1c, $17, $0f, $06, $fd, $f5, $ed, $e5, $de, $dc, $d9, $d8, $d6
10e54     D7 DD E2 E5 
10e58     E8 EC F1 F4 
10e5c     F3 F6 F6 F6 
10e60     F9 F9 F9 FB | 	byte	$d7, $dd, $e2, $e5, $e8, $ec, $f1, $f4, $f3, $f6, $f6, $f6, $f9, $f9, $f9, $fb
10e64     FD FC FA F8 
10e68     F9 F8 F3 F6 
10e6c     F9 F8 FA FD 
10e70     FA FB FD F9 | 	byte	$fd, $fc, $fa, $f8, $f9, $f8, $f3, $f6, $f9, $f8, $fa, $fd, $fa, $fb, $fd, $f9
10e74     F8 FA F8 F7 
10e78     F6 F6 F9 F5 
10e7c     F3 F4 EF E9 
10e80     E8 E6 E2 E2 | 	byte	$f8, $fa, $f8, $f7, $f6, $f6, $f9, $f5, $f3, $f4, $ef, $e9, $e8, $e6, $e2, $e2
10e84     DF DA D6 DA 
10e88     DA DA DF E2 
10e8c     E3 DF DD E3 
10e90     E6 E8 F1 F6 | 	byte	$df, $da, $d6, $da, $da, $da, $df, $e2, $e3, $df, $dd, $e3, $e6, $e8, $f1, $f6
10e94     FC 07 0B 11 
10e98     14 17 19 18 
10e9c     1D 23 22 25 
10ea0     29 28 29 2E | 	byte	$fc, $07, $0b, $11, $14, $17, $19, $18, $1d, $23, $22, $25, $29, $28, $29, $2e
10ea4     2C 28 27 25 
10ea8     21 1F 1E 1D 
10eac     19 15 11 09 
10eb0     01 FD F7 EF | 	byte	$2c, $28, $27, $25, $21, $1f, $1e, $1d, $19, $15, $11, $09, $01, $fd, $f7, $ef
10eb4     EB E6 E0 DA 
10eb8     D3 C9 BF B8 
10ebc     B1 A9 AB AA 
10ec0     AA AF AF B3 | 	byte	$eb, $e6, $e0, $da, $d3, $c9, $bf, $b8, $b1, $a9, $ab, $aa, $aa, $af, $af, $b3
10ec4     C0 C7 CF DC 
10ec8     EA FA 05 10 
10ecc     1D 23 24 27 
10ed0     2D 32 3A 3F | 	byte	$c0, $c7, $cf, $dc, $ea, $fa, $05, $10, $1d, $23, $24, $27, $2d, $32, $3a, $3f
10ed4     3F 3E 3C 31 
10ed8     26 21 20 1D 
10edc     1B 1C 1E 1E 
10ee0     19 15 13 0F | 	byte	$3f, $3e, $3c, $31, $26, $21, $20, $1d, $1b, $1c, $1e, $1e, $19, $15, $13, $0f
10ee4     0D 0D 0E 11 
10ee8     14 15 12 0D 
10eec     0B 08 03 04 
10ef0     09 0E 13 15 | 	byte	$0d, $0d, $0e, $11, $14, $15, $12, $0d, $0b, $08, $03, $04, $09, $0e, $13, $15
10ef4     13 14 11 0B 
10ef8     05 FF FC FB 
10efc     F9 FB 03 06 
10f00     0B 11 12 15 | 	byte	$13, $14, $11, $0b, $05, $ff, $fc, $fb, $f9, $fb, $03, $06, $0b, $11, $12, $15
10f04     1F 22 21 25 
10f08     28 2B 2C 2C 
10f0c     2C 2A 26 22 
10f10     1B 13 0C 04 | 	byte	$1f, $22, $21, $25, $28, $2b, $2c, $2c, $2c, $2a, $26, $22, $1b, $13, $0c, $04
10f14     F9 F1 ED E6 
10f18     DD DD DA D9 
10f1c     DA DD E0 E4 
10f20     E7 EB EB ED | 	byte	$f9, $f1, $ed, $e6, $dd, $dd, $da, $d9, $da, $dd, $e0, $e4, $e7, $eb, $eb, $ed
10f24     F2 F1 F2 F7 
10f28     F9 FB FA FC 
10f2c     FD F8 F6 F8 
10f30     F8 F7 F8 F9 | 	byte	$f2, $f1, $f2, $f7, $f9, $fb, $fa, $fc, $fd, $f8, $f6, $f8, $f8, $f7, $f8, $f9
10f34     F8 FB FC FA 
10f38     FA FC F9 F7 
10f3c     F7 FB FB FB 
10f40     FB F9 F5 F6 | 	byte	$f8, $fb, $fc, $fa, $fa, $fc, $f9, $f7, $f7, $fb, $fb, $fb, $fb, $f9, $f5, $f6
10f44     F5 F3 F1 F0 
10f48     ED E6 E3 E2 
10f4c     DD DE DE DA 
10f50     DD E0 DD DD | 	byte	$f5, $f3, $f1, $f0, $ed, $e6, $e3, $e2, $dd, $de, $de, $da, $dd, $e0, $dd, $dd
10f54     DC DA DC DE 
10f58     E2 E8 ED F3 
10f5c     F8 FE 04 09 
10f60     0D 12 13 14 | 	byte	$dc, $da, $dc, $de, $e2, $e8, $ed, $f3, $f8, $fe, $04, $09, $0d, $12, $13, $14
10f64     18 1D 20 22 
10f68     27 29 28 28 
10f6c     28 28 28 26 
10f70     26 25 24 22 | 	byte	$18, $1d, $20, $22, $27, $29, $28, $28, $28, $28, $28, $26, $26, $25, $24, $22
10f74     1C 15 13 0F 
10f78     08 03 01 FD 
10f7c     F7 ED E6 E1 
10f80     D7 CD C8 BF | 	byte	$1c, $15, $13, $0f, $08, $03, $01, $fd, $f7, $ed, $e6, $e1, $d7, $cd, $c8, $bf
10f84     BA B6 B0 AE 
10f88     AF AC A9 AB 
10f8c     B0 BD CB D7 
10f90     E8 F4 FB 01 | 	byte	$ba, $b6, $b0, $ae, $af, $ac, $a9, $ab, $b0, $bd, $cb, $d7, $e8, $f4, $fb, $01
10f94     06 0B 1A 26 
10f98     2E 36 3E 40 
10f9c     3C 38 33 2C 
10fa0     2A 27 24 24 | 	byte	$06, $0b, $1a, $26, $2e, $36, $3e, $40, $3c, $38, $33, $2c, $2a, $27, $24, $24
10fa4     24 25 20 18 
10fa8     16 15 0F 10 
10fac     13 15 16 15 
10fb0     12 0E 0C 0B | 	byte	$24, $25, $20, $18, $16, $15, $0f, $10, $13, $15, $16, $15, $12, $0e, $0c, $0b
10fb4     05 03 07 0A 
10fb8     0D 11 14 15 
10fbc     12 0F 0D 08 
10fc0     04 01 FE FC | 	byte	$05, $03, $07, $0a, $0d, $11, $14, $15, $12, $0f, $0d, $08, $04, $01, $fe, $fc
10fc4     FD FF FF 02 
10fc8     08 0C 0E 14 
10fcc     19 1D 20 26 
10fd0     29 2B 2E 2F | 	byte	$fd, $ff, $ff, $02, $08, $0c, $0e, $14, $19, $1d, $20, $26, $29, $2b, $2e, $2f
10fd4     2E 2E 2B 27 
10fd8     20 19 14 09 
10fdc     00 FA F0 E8 
10fe0     E5 DF DD DE | 	byte	$2e, $2e, $2b, $27, $20, $19, $14, $09, $00, $fa, $f0, $e8, $e5, $df, $dd, $de
10fe4     DF DE E1 E2 
10fe8     E4 E4 E6 E9 
10fec     ED F1 F3 F5 
10ff0     F7 FA FB FA | 	byte	$df, $de, $e1, $e2, $e4, $e4, $e6, $e9, $ed, $f1, $f3, $f5, $f7, $fa, $fb, $fa
10ff4     F9 F7 F5 F5 
10ff8     F7 F7 FB FD 
10ffc     FA F9 F9 F8 
11000     F8 F9 F9 F9 | 	byte	$f9, $f7, $f5, $f5, $f7, $f7, $fb, $fd, $fa, $f9, $f9, $f8, $f8, $f9, $f9, $f9
11004     F9 FA FB F8 
11008     F9 FB F9 F8 
1100c     F7 F5 F4 F0 
11010     EA E7 E5 E4 | 	byte	$f9, $fa, $fb, $f8, $f9, $fb, $f9, $f8, $f7, $f5, $f4, $f0, $ea, $e7, $e5, $e4
11014     E6 E1 DF E1 
11018     DF D9 DA DD 
1101c     DB DA D9 DC 
11020     E1 E4 EB F0 | 	byte	$e6, $e1, $df, $e1, $df, $d9, $da, $dd, $db, $da, $d9, $dc, $e1, $e4, $eb, $f0
11024     F5 FB FF 00 
11028     06 0B 0E 11 
1102c     17 1E 1F 21 
11030     24 22 24 26 | 	byte	$f5, $fb, $ff, $00, $06, $0b, $0e, $11, $17, $1e, $1f, $21, $24, $22, $24, $26
11034     26 29 2B 2C 
11038     29 25 24 22 
1103c     1C 18 16 13 
11040     0F 0C 08 02 | 	byte	$26, $29, $2b, $2c, $29, $25, $24, $22, $1c, $18, $16, $13, $0f, $0c, $08, $02
11044     FB F6 EC E0 
11048     DA D7 D0 CA 
1104c     C5 BF B7 AE 
11050     A6 A3 A5 AD | 	byte	$fb, $f6, $ec, $e0, $da, $d7, $d0, $ca, $c5, $bf, $b7, $ae, $a6, $a3, $a5, $ad
11054     B6 BD C6 D3 
11058     D9 DE E5 F0 
1105c     FC 07 16 24 
11060     2E 38 38 34 | 	byte	$b6, $bd, $c6, $d3, $d9, $de, $e5, $f0, $fc, $07, $16, $24, $2e, $38, $38, $34
11064     34 33 30 30 
11068     30 30 2D 27 
1106c     26 22 1B 19 
11070     16 14 18 1A | 	byte	$34, $33, $30, $30, $30, $30, $2d, $27, $26, $22, $1b, $19, $16, $14, $18, $1a
11074     17 18 19 14 
11078     0D 0A 09 07 
1107c     07 08 0A 0F 
11080     10 12 13 13 | 	byte	$17, $18, $19, $14, $0d, $0a, $09, $07, $07, $08, $0a, $0f, $10, $12, $13, $13
11084     12 0E 0A 09 
11088     06 03 00 FE 
1108c     FE 00 00 00 
11090     04 07 0B 0F | 	byte	$12, $0e, $0a, $09, $06, $03, $00, $fe, $fe, $00, $00, $00, $04, $07, $0b, $0f
11094     14 1A 1F 22 
11098     28 29 2C 30 
1109c     2F 2E 2E 2B 
110a0     26 20 18 0E | 	byte	$14, $1a, $1f, $22, $28, $29, $2c, $30, $2f, $2e, $2e, $2b, $26, $20, $18, $0e
110a4     05 FC F5 EF 
110a8     E9 E7 E5 E1 
110ac     E0 E1 E0 E0 
110b0     E1 E1 E2 E5 | 	byte	$05, $fc, $f5, $ef, $e9, $e7, $e5, $e1, $e0, $e1, $e0, $e0, $e1, $e1, $e2, $e5
110b4     EC F0 F3 F8 
110b8     FA F7 F5 F5 
110bc     F8 F6 F6 F8 
110c0     F9 F9 FB F9 | 	byte	$ec, $f0, $f3, $f8, $fa, $f7, $f5, $f5, $f8, $f6, $f6, $f8, $f9, $f9, $fb, $f9
110c4     F9 FA F9 F8 
110c8     F8 FA FA F7 
110cc     F6 F8 FA FB 
110d0     FD FD FB F9 | 	byte	$f9, $fa, $f9, $f8, $f8, $fa, $fa, $f7, $f6, $f8, $fa, $fb, $fd, $fd, $fb, $f9
110d4     F7 F4 F1 F1 
110d8     EE EA E9 E9 
110dc     E7 E4 E4 E3 
110e0     DF DD DC D8 | 	byte	$f7, $f4, $f1, $f1, $ee, $ea, $e9, $e9, $e7, $e4, $e4, $e3, $df, $dd, $dc, $d8
110e4     D6 D8 DA DB 
110e8     DF E6 EB ED 
110ec     EF F3 F7 FA 
110f0     00 07 0B 13 | 	byte	$d6, $d8, $da, $db, $df, $e6, $eb, $ed, $ef, $f3, $f7, $fa, $00, $07, $0b, $13
110f4     17 16 18 1D 
110f8     1E 20 21 24 
110fc     28 29 2A 2B 
11100     28 27 23 1E | 	byte	$17, $16, $18, $1d, $1e, $20, $21, $24, $28, $29, $2a, $2b, $28, $27, $23, $1e
11104     1C 1D 1D 19 
11108     17 14 0C 05 
1110c     FE F6 F1 EE 
11110     E8 E1 DB D4 | 	byte	$1c, $1d, $1d, $19, $17, $14, $0c, $05, $fe, $f6, $f1, $ee, $e8, $e1, $db, $d4
11114     C9 BE B7 B1 
11118     AA A9 AE B3 
1111c     B9 BC BD C2 
11120     C7 CE D9 E9 | 	byte	$c9, $be, $b7, $b1, $aa, $a9, $ae, $b3, $b9, $bc, $bd, $c2, $c7, $ce, $d9, $e9
11124     F8 06 12 1C 
11128     24 28 2B 2E 
1112c     2F 34 36 34 
11130     34 32 2C 26 | 	byte	$f8, $06, $12, $1c, $24, $28, $2b, $2e, $2f, $34, $36, $34, $34, $32, $2c, $26
11134     20 1C 1C 1B 
11138     1B 1C 1D 1D 
1113c     1C 17 13 10 
11140     0D 09 07 08 | 	byte	$20, $1c, $1c, $1b, $1b, $1c, $1d, $1d, $1c, $17, $13, $10, $0d, $09, $07, $08
11144     09 0A 0E 0F 
11148     10 13 13 11 
1114c     0F 0E 0D 09 
11150     06 05 02 FF | 	byte	$09, $0a, $0e, $0f, $10, $13, $13, $11, $0f, $0e, $0d, $09, $06, $05, $02, $ff
11154     00 FF FD FE 
11158     02 04 05 0C 
1115c     12 17 1B 1E 
11160     21 27 2B 2F | 	byte	$00, $ff, $fd, $fe, $02, $04, $05, $0c, $12, $17, $1b, $1e, $21, $27, $2b, $2f
11164     31 33 33 2F 
11168     29 24 1D 13 
1116c     0A 02 FB F4 
11170     F1 EE EB E8 | 	byte	$31, $33, $33, $2f, $29, $24, $1d, $13, $0a, $02, $fb, $f4, $f1, $ee, $eb, $e8
11174     E5 E1 DD DE 
11178     E0 DF E3 E8 
1117c     EC F0 F2 F3 
11180     F5 F4 F4 F7 | 	byte	$e5, $e1, $dd, $de, $e0, $df, $e3, $e8, $ec, $f0, $f2, $f3, $f5, $f4, $f4, $f7
11184     F6 F8 F9 F6 
11188     F6 F8 F9 FA 
1118c     FA FA FA F8 
11190     F6 F6 F6 F7 | 	byte	$f6, $f8, $f9, $f6, $f6, $f8, $f9, $fa, $fa, $fa, $fa, $f8, $f6, $f6, $f6, $f7
11194     F9 FA F9 FC 
11198     FF FD FB FA 
1119c     F9 F6 F4 F0 
111a0     EE EF EE EC | 	byte	$f9, $fa, $f9, $fc, $ff, $fd, $fb, $fa, $f9, $f6, $f4, $f0, $ee, $ef, $ee, $ec
111a4     EA EB EA E5 
111a8     E0 DD D9 D9 
111ac     D9 D9 DC E1 
111b0     E1 E1 E3 E8 | 	byte	$ea, $eb, $ea, $e5, $e0, $dd, $d9, $d9, $d9, $d9, $dc, $e1, $e1, $e1, $e3, $e8
111b4     EC EE F1 F8 
111b8     FE 02 08 0C 
111bc     10 13 13 15 
111c0     1A 1D 21 27 | 	byte	$ec, $ee, $f1, $f8, $fe, $02, $08, $0c, $10, $13, $13, $15, $1a, $1d, $21, $27
111c4     2A 2A 28 25 
111c8     24 24 25 24 
111cc     23 23 21 1C 
111d0     18 12 0E 08 | 	byte	$2a, $2a, $28, $25, $24, $24, $25, $24, $23, $23, $21, $1c, $18, $12, $0e, $08
111d4     02 00 FD F8 
111d8     F2 EA DE D5 
111dc     CC C3 BC B9 
111e0     B9 B6 B3 B3 | 	byte	$02, $00, $fd, $f8, $f2, $ea, $de, $d5, $cc, $c3, $bc, $b9, $b9, $b6, $b3, $b3
111e4     B2 B1 B3 B6 
111e8     BD C8 D8 E4 
111ec     EE FC 07 0C 
111f0     13 1D 24 2B | 	byte	$b2, $b1, $b3, $b6, $bd, $c8, $d8, $e4, $ee, $fc, $07, $0c, $13, $1d, $24, $2b
111f4     32 36 36 35 
111f8     33 2D 27 23 
111fc     21 20 1F 20 
11200     21 21 21 1F | 	byte	$32, $36, $36, $35, $33, $2d, $27, $23, $21, $20, $1f, $20, $21, $21, $21, $1f
11204     1B 17 14 11 
11208     0A 09 0B 09 
1120c     0A 0C 0E 10 
11210     12 11 12 10 | 	byte	$1b, $17, $14, $11, $0a, $09, $0b, $09, $0a, $0c, $0e, $10, $12, $11, $12, $10
11214     10 0F 0A 09 
11218     0A 07 02 00 
1121c     FD FC FC FE 
11220     00 01 04 07 | 	byte	$10, $0f, $0a, $09, $0a, $07, $02, $00, $fd, $fc, $fc, $fe, $00, $01, $04, $07
11224     0A 10 15 19 
11228     1D 22 2A 30 
1122c     32 36 36 31 
11230     2C 26 1E 16 | 	byte	$0a, $10, $15, $19, $1d, $22, $2a, $30, $32, $36, $36, $31, $2c, $26, $1e, $16
11234     0F 08 02 FE 
11238     FA F5 EF E9 
1123c     E5 E2 E0 DF 
11240     E0 E3 E5 E6 | 	byte	$0f, $08, $02, $fe, $fa, $f5, $ef, $e9, $e5, $e2, $e0, $df, $e0, $e3, $e5, $e6
11244     E7 EB EF F1 
11248     F2 F3 F5 F5 
1124c     F5 F4 F4 F7 
11250     F9 F8 F8 FA | 	byte	$e7, $eb, $ef, $f1, $f2, $f3, $f5, $f5, $f5, $f4, $f4, $f7, $f9, $f8, $f8, $fa
11254     FB F9 F7 F6 
11258     F6 F6 F5 F5 
1125c     F8 FB FB FD 
11260     FF FF FE FB | 	byte	$fb, $f9, $f7, $f6, $f6, $f6, $f5, $f5, $f8, $fb, $fb, $fd, $ff, $ff, $fe, $fb
11264     F8 F6 F2 F2 
11268     F3 F3 F3 F3 
1126c     EE EB EA E6 
11270     E0 DE DE DB | 	byte	$f8, $f6, $f2, $f2, $f3, $f3, $f3, $f3, $ee, $eb, $ea, $e6, $e0, $de, $de, $db
11274     DA DA DD DE 
11278     DF E0 E0 E0 
1127c     E6 EB F0 F7 
11280     FE FF FF 03 | 	byte	$da, $da, $dd, $de, $df, $e0, $e0, $e0, $e6, $eb, $f0, $f7, $fe, $ff, $ff, $03
11284     07 0A 11 17 
11288     1A 1E 23 24 
1128c     22 22 25 24 
11290     24 28 2A 2A | 	byte	$07, $0a, $11, $17, $1a, $1e, $23, $24, $22, $22, $25, $24, $24, $28, $2a, $2a
11294     29 24 1F 1B 
11298     18 17 13 10 
1129c     10 0B 05 FE 
112a0     F5 EC E4 DB | 	byte	$29, $24, $1f, $1b, $18, $17, $13, $10, $10, $0b, $05, $fe, $f5, $ec, $e4, $db
112a4     D4 CD CA C7 
112a8     C0 B9 B6 B1 
112ac     AD AB B0 B6 
112b0     BE C8 D1 D9 | 	byte	$d4, $cd, $ca, $c7, $c0, $b9, $b6, $b1, $ad, $ab, $b0, $b6, $be, $c8, $d1, $d9
112b4     E4 EC F3 FF 
112b8     0B 18 22 2A 
112bc     30 34 33 31 
112c0     2E 2A 26 24 | 	byte	$e4, $ec, $f3, $ff, $0b, $18, $22, $2a, $30, $34, $33, $31, $2e, $2a, $26, $24
112c4     22 22 24 26 
112c8     24 23 22 20 
112cc     1B 18 14 0F 
112d0     0C 0B 0A 0B | 	byte	$22, $22, $24, $26, $24, $23, $22, $20, $1b, $18, $14, $0f, $0c, $0b, $0a, $0b
112d4     0D 0E 0E 0E 
112d8     0F 11 10 11 
112dc     10 0F 0D 0B 
112e0     07 06 03 00 | 	byte	$0d, $0e, $0e, $0e, $0f, $11, $10, $11, $10, $0f, $0d, $0b, $07, $06, $03, $00
112e4     FD FC FD FE 
112e8     FE 00 01 03 
112ec     07 08 0C 14 
112f0     1B 23 29 30 | 	byte	$fd, $fc, $fd, $fe, $fe, $00, $01, $03, $07, $08, $0c, $14, $1b, $23, $29, $30
112f4     36 38 35 30 
112f8     2C 28 23 1C 
112fc     17 12 0C 03 
11300     FD F8 F3 EE | 	byte	$36, $38, $35, $30, $2c, $28, $23, $1c, $17, $12, $0c, $03, $fd, $f8, $f3, $ee
11304     EA E6 E4 E2 
11308     E1 E1 E2 E5 
1130c     E7 E8 EC F0 
11310     F0 EF F2 F3 | 	byte	$ea, $e6, $e4, $e2, $e1, $e1, $e2, $e5, $e7, $e8, $ec, $f0, $f0, $ef, $f2, $f3
11314     F1 F3 F5 F6 
11318     F7 F8 F8 F8 
1131c     F9 FA F7 F4 
11320     F5 F3 F2 F6 | 	byte	$f1, $f3, $f5, $f6, $f7, $f8, $f8, $f8, $f9, $fa, $f7, $f4, $f5, $f3, $f2, $f6
11324     F9 FB FF FE 
11328     FE FC FB FA 
1132c     F7 F5 F6 F5 
11330     F4 F4 F6 F4 | 	byte	$f9, $fb, $ff, $fe, $fe, $fc, $fb, $fa, $f7, $f5, $f6, $f5, $f4, $f4, $f6, $f4
11334     F2 EE E9 E4 
11338     E3 E2 E0 DF 
1133c     DF DD DA D8 
11340     DA DE E0 E4 | 	byte	$f2, $ee, $e9, $e4, $e3, $e2, $e0, $df, $df, $dd, $da, $d8, $da, $de, $e0, $e4
11344     E8 EA EE F3 
11348     F4 F4 F9 FE 
1134c     04 0B 11 17 
11350     19 1A 19 1A | 	byte	$e8, $ea, $ee, $f3, $f4, $f4, $f9, $fe, $04, $0b, $11, $17, $19, $1a, $19, $1a
11354     1D 21 24 27 
11358     2A 2C 2B 27 
1135c     23 22 1E 1D 
11360     1C 1C 1B 1A | 	byte	$1d, $21, $24, $27, $2a, $2c, $2b, $27, $23, $22, $1e, $1d, $1c, $1c, $1b, $1a
11364     15 0F 08 01 
11368     F8 F0 EA E6 
1136c     E0 DA D4 CC 
11370     C5 BD B6 B2 | 	byte	$15, $0f, $08, $01, $f8, $f0, $ea, $e6, $e0, $da, $d4, $cc, $c5, $bd, $b6, $b2
11374     B0 B2 B4 B7 
11378     BC C1 C6 CE 
1137c     D5 DE EB F6 
11380     03 12 1E 26 | 	byte	$b0, $b2, $b4, $b7, $bc, $c1, $c6, $ce, $d5, $de, $eb, $f6, $03, $12, $1e, $26
11384     2B 2D 2D 2D 
11388     2B 28 26 25 
1138c     25 25 26 27 
11390     29 27 22 1F | 	byte	$2b, $2d, $2d, $2d, $2b, $28, $26, $25, $25, $25, $26, $27, $29, $27, $22, $1f
11394     1C 19 16 11 
11398     0E 0E 0E 0C 
1139c     0B 0E 0F 0F 
113a0     0F 10 12 12 | 	byte	$1c, $19, $16, $11, $0e, $0e, $0e, $0c, $0b, $0e, $0f, $0f, $0f, $10, $12, $12
113a4     12 10 0D 0B 
113a8     09 04 02 01 
113ac     01 FF FE 01 
113b0     00 FC FC FC | 	byte	$12, $10, $0d, $0b, $09, $04, $02, $01, $01, $ff, $fe, $01, $00, $fc, $fc, $fc
113b4     FC 02 09 11 
113b8     1A 22 28 2C 
113bc     30 33 33 30 
113c0     30 2D 28 22 | 	byte	$fc, $02, $09, $11, $1a, $22, $28, $2c, $30, $33, $33, $30, $30, $2d, $28, $22
113c4     1C 16 10 0A 
113c8     04 FD F8 F4 
113cc     EE E9 E7 E4 
113d0     E3 E2 E3 E5 | 	byte	$1c, $16, $10, $0a, $04, $fd, $f8, $f4, $ee, $e9, $e7, $e4, $e3, $e2, $e3, $e5
113d4     E6 E7 EA EB 
113d8     EE F1 F1 F0 
113dc     F1 F3 F3 F4 
113e0     F7 FA FB F9 | 	byte	$e6, $e7, $ea, $eb, $ee, $f1, $f1, $f0, $f1, $f3, $f3, $f4, $f7, $fa, $fb, $f9
113e4     F8 F5 F4 F4 
113e8     F3 F3 F5 F7 
113ec     F9 FB FB FE 
113f0     FE FB F8 F6 | 	byte	$f8, $f5, $f4, $f4, $f3, $f3, $f5, $f7, $f9, $fb, $fb, $fe, $fe, $fb, $f8, $f6
113f4     F6 F8 F9 F8 
113f8     F7 F7 F5 F2 
113fc     F0 EF ED EB 
11400     E8 E5 E3 E0 | 	byte	$f6, $f8, $f9, $f8, $f7, $f7, $f5, $f2, $f0, $ef, $ed, $eb, $e8, $e5, $e3, $e0
11404     DC D9 D8 DA 
11408     DD DF E3 E6 
1140c     E6 E7 E6 E7 
11410     EB F2 F8 FE | 	byte	$dc, $d9, $d8, $da, $dd, $df, $e3, $e6, $e6, $e7, $e6, $e7, $eb, $f2, $f8, $fe
11414     05 0A 0C 0E 
11418     0F 10 13 17 
1141c     1B 21 26 28 
11420     28 27 26 23 | 	byte	$05, $0a, $0c, $0e, $0f, $10, $13, $17, $1b, $21, $26, $28, $28, $27, $26, $23
11424     21 21 21 22 
11428     22 22 20 1C 
1142c     18 11 0A 05 
11430     00 FB F6 EF | 	byte	$21, $21, $21, $22, $22, $22, $20, $1c, $18, $11, $0a, $05, $00, $fb, $f6, $ef
11434     E9 E1 DA D2 
11438     C8 C2 BE BA 
1143c     B7 B7 B8 B8 
11440     B5 B7 BE C3 | 	byte	$e9, $e1, $da, $d2, $c8, $c2, $be, $ba, $b7, $b7, $b8, $b8, $b5, $b7, $be, $c3
11444     CC D6 DF EE 
11448     FE 0A 13 1E 
1144c     26 25 24 26 
11450     26 26 26 26 | 	byte	$cc, $d6, $df, $ee, $fe, $0a, $13, $1e, $26, $25, $24, $26, $26, $26, $26, $26
11454     27 28 29 28 
11458     27 26 25 20 
1145c     1D 1C 19 14 
11460     12 10 0E 0D | 	byte	$27, $28, $29, $28, $27, $26, $25, $20, $1d, $1c, $19, $14, $12, $10, $0e, $0d
11464     0D 0D 0E 0F 
11468     11 13 14 15 
1146c     14 0F 0C 0A 
11470     07 05 05 06 | 	byte	$0d, $0d, $0e, $0f, $11, $13, $14, $15, $14, $0f, $0c, $0a, $07, $05, $05, $06
11474     06 05 02 FD 
11478     FA F9 F7 F7 
1147c     FB 01 07 0E 
11480     15 1D 23 28 | 	byte	$06, $05, $02, $fd, $fa, $f9, $f7, $f7, $fb, $01, $07, $0e, $15, $1d, $23, $28
11484     2D 30 33 34 
11488     32 2F 2B 27 
1148c     23 1D 16 10 
11490     0A 04 FD F7 | 	byte	$2d, $30, $33, $34, $32, $2f, $2b, $27, $23, $1d, $16, $10, $0a, $04, $fd, $f7
11494     F4 F0 EC E8 
11498     E5 E4 E4 E5 
1149c     E6 E9 EB EC 
114a0     EB EB EC EF | 	byte	$f4, $f0, $ec, $e8, $e5, $e4, $e4, $e5, $e6, $e9, $eb, $ec, $eb, $eb, $ec, $ef
114a4     F1 F2 F3 F6 
114a8     F7 F8 F9 F8 
114ac     F6 F4 F2 F1 
114b0     F2 F5 F7 F8 | 	byte	$f1, $f2, $f3, $f6, $f7, $f8, $f9, $f8, $f6, $f4, $f2, $f1, $f2, $f5, $f7, $f8
114b4     F9 FA FA F9 
114b8     F9 F9 F9 FA 
114bc     FA F9 FA F9 
114c0     F7 F5 F5 F5 | 	byte	$f9, $fa, $fa, $f9, $f9, $f9, $f9, $fa, $fa, $f9, $fa, $f9, $f7, $f5, $f5, $f5
114c4     F4 F4 F3 EF 
114c8     EB E7 E1 DE 
114cc     DD DD DE DF 
114d0     E1 E3 E1 E1 | 	byte	$f4, $f4, $f3, $ef, $eb, $e7, $e1, $de, $dd, $dd, $de, $df, $e1, $e3, $e1, $e1
114d4     DF DF E1 E6 
114d8     EB F1 F8 FE 
114dc     FF 00 04 06 
114e0     06 0C 11 17 | 	byte	$df, $df, $e1, $e6, $eb, $f1, $f8, $fe, $ff, $00, $04, $06, $06, $0c, $11, $17
114e4     1D 22 23 23 
114e8     23 22 20 21 
114ec     25 26 24 24 
114f0     25 24 20 1D | 	byte	$1d, $22, $23, $23, $23, $22, $20, $21, $25, $26, $24, $24, $25, $24, $20, $1d
114f4     18 15 12 0E 
114f8     08 03 FE F6 
114fc     ED E6 DF D8 
11500     D1 CC C7 C2 | 	byte	$18, $15, $12, $0e, $08, $03, $fe, $f6, $ed, $e6, $df, $d8, $d1, $cc, $c7, $c2
11504     BE BB B8 B5 
11508     B4 B3 B3 BA 
1150c     C3 CC D9 E7 
11510     F5 00 0B 13 | 	byte	$be, $bb, $b8, $b5, $b4, $b3, $b3, $ba, $c3, $cc, $d9, $e7, $f5, $00, $0b, $13
11514     18 1C 1F 1F 
11518     22 25 26 27 
1151c     27 28 2A 29 
11520     27 27 26 23 | 	byte	$18, $1c, $1f, $1f, $22, $25, $26, $27, $27, $28, $2a, $29, $27, $27, $26, $23
11524     21 1E 1C 18 
11528     14 11 0D 0B 
1152c     0B 0D 10 12 
11530     16 16 14 11 | 	byte	$21, $1e, $1c, $18, $14, $11, $0d, $0b, $0b, $0d, $10, $12, $16, $16, $14, $11
11534     0F 0D 0B 09 
11538     09 0A 0B 0A 
1153c     07 03 00 FC 
11540     F8 F5 F5 F8 | 	byte	$0f, $0d, $0b, $09, $09, $0a, $0b, $0a, $07, $03, $00, $fc, $f8, $f5, $f5, $f8
11544     FA FD 01 08 
11548     10 17 1E 24 
1154c     29 2E 31 31 
11550     33 33 30 2C | 	byte	$fa, $fd, $01, $08, $10, $17, $1e, $24, $29, $2e, $31, $31, $33, $33, $30, $2c
11554     26 20 1B 15 
11558     11 0B 05 FF 
1155c     F8 F2 EF EC 
11560     EA E8 E7 E7 | 	byte	$26, $20, $1b, $15, $11, $0b, $05, $ff, $f8, $f2, $ef, $ec, $ea, $e8, $e7, $e7
11564     E7 E8 E9 E9 
11568     E9 EA EA EC 
1156c     EF F4 F6 F6 
11570     F8 F7 F5 F4 | 	byte	$e7, $e8, $e9, $e9, $e9, $ea, $ea, $ec, $ef, $f4, $f6, $f6, $f8, $f7, $f5, $f4
11574     F4 F2 F2 F4 
11578     F6 F6 F7 F9 
1157c     F7 F6 F7 F8 
11580     F9 FB FC FB | 	byte	$f4, $f2, $f2, $f4, $f6, $f6, $f7, $f9, $f7, $f6, $f7, $f8, $f9, $fb, $fc, $fb
11584     FA F9 F7 F5 
11588     F7 F9 F9 F8 
1158c     F9 F8 F3 ED 
11590     E9 E6 E4 E2 | 	byte	$fa, $f9, $f7, $f5, $f7, $f9, $f9, $f8, $f9, $f8, $f3, $ed, $e9, $e6, $e4, $e2
11594     E2 E2 E3 E3 
11598     E0 DD DD DD 
1159c     DB DD E2 E9 
115a0     ED F0 F3 F4 | 	byte	$e2, $e2, $e3, $e3, $e0, $dd, $dd, $dd, $db, $dd, $e2, $e9, $ed, $f0, $f3, $f4
115a4     F6 F9 FB 00 
115a8     07 0C 10 16 
115ac     19 1B 1C 1D 
115b0     1F 20 22 24 | 	byte	$f6, $f9, $fb, $00, $07, $0c, $10, $16, $19, $1b, $1c, $1d, $1f, $20, $22, $24
115b4     26 27 26 25 
115b8     23 22 22 20 
115bc     1E 1B 18 15 
115c0     0F 09 03 FC | 	byte	$26, $27, $26, $25, $23, $22, $22, $20, $1e, $1b, $18, $15, $0f, $09, $03, $fc
115c4     F4 EC E6 E0 
115c8     DB D5 D0 CA 
115cc     C5 C0 B9 B4 
115d0     B1 B0 B1 B5 | 	byte	$f4, $ec, $e6, $e0, $db, $d5, $d0, $ca, $c5, $c0, $b9, $b4, $b1, $b0, $b1, $b5
115d4     BD C8 D4 E0 
115d8     EB F5 FF 07 
115dc     0E 13 17 1C 
115e0     1F 21 24 27 | 	byte	$bd, $c8, $d4, $e0, $eb, $f5, $ff, $07, $0e, $13, $17, $1c, $1f, $21, $24, $27
115e4     29 28 26 26 
115e8     28 28 28 27 
115ec     25 22 1D 16 
115f0     11 0F 0D 0D | 	byte	$29, $28, $26, $26, $28, $28, $28, $27, $25, $22, $1d, $16, $11, $0f, $0d, $0d
115f4     0E 12 13 15 
115f8     14 12 10 0F 
115fc     0D 0D 0C 0E 
11600     0F 0D 0B 0A | 	byte	$0e, $12, $13, $15, $14, $12, $10, $0f, $0d, $0d, $0c, $0e, $0f, $0d, $0b, $0a
11604     07 04 02 FE 
11608     F9 F6 F5 F4 
1160c     F6 FB FF 03 
11610     09 10 17 1F | 	byte	$07, $04, $02, $fe, $f9, $f6, $f5, $f4, $f6, $fb, $ff, $03, $09, $10, $17, $1f
11614     27 2C 2F 32 
11618     32 31 2F 2E 
1161c     2B 26 21 1C 
11620     15 0F 0A 03 | 	byte	$27, $2c, $2f, $32, $32, $31, $2f, $2e, $2b, $26, $21, $1c, $15, $0f, $0a, $03
11624     FD F7 F3 EF 
11628     ED ED EC E8 
1162c     E7 E7 E6 E5 
11630     E5 E8 EB EE | 	byte	$fd, $f7, $f3, $ef, $ed, $ed, $ec, $e8, $e7, $e7, $e6, $e5, $e5, $e8, $eb, $ee
11634     F1 F3 F5 F6 
11638     F4 F1 F2 F4 
1163c     F4 F4 F5 F6 
11640     F6 F5 F3 F3 | 	byte	$f1, $f3, $f5, $f6, $f4, $f1, $f2, $f4, $f4, $f4, $f5, $f6, $f6, $f5, $f3, $f3
11644     F5 F7 F8 F9 
11648     FB FB F9 F7 
1164c     F7 F7 F7 F9 
11650     FB FC FD FC | 	byte	$f5, $f7, $f8, $f9, $fb, $fb, $f9, $f7, $f7, $f7, $f7, $f9, $fb, $fc, $fd, $fc
11654     F9 F5 F2 EE 
11658     EB EA E9 E9 
1165c     E8 E6 E3 E1 
11660     DD DB DB DD | 	byte	$f9, $f5, $f2, $ee, $eb, $ea, $e9, $e9, $e8, $e6, $e3, $e1, $dd, $db, $db, $dd
11664     E0 E2 E4 E7 
11668     E9 EB EB EC 
1166c     F0 F5 FA 01 
11670     05 0B 0D 0E | 	byte	$e0, $e2, $e4, $e7, $e9, $eb, $eb, $ec, $f0, $f5, $fa, $01, $05, $0b, $0d, $0e
11674     11 14 18 1B 
11678     1D 20 23 24 
1167c     25 24 23 23 
11680     24 23 23 23 | 	byte	$11, $14, $18, $1b, $1d, $20, $23, $24, $25, $24, $23, $23, $24, $23, $23, $23
11684     23 21 1D 19 
11688     14 0E 07 FF 
1168c     F9 F4 EE E8 
11690     E3 DF DA D3 | 	byte	$23, $21, $1d, $19, $14, $0e, $07, $ff, $f9, $f4, $ee, $e8, $e3, $df, $da, $d3
11694     CA C3 BD B6 
11698     B2 B0 B0 B4 
1169c     BC C3 CD D9 
116a0     E3 EB F3 FB | 	byte	$ca, $c3, $bd, $b6, $b2, $b0, $b0, $b4, $bc, $c3, $cd, $d9, $e3, $eb, $f3, $fb
116a4     03 0A 13 18 
116a8     1B 20 22 21 
116ac     20 22 26 27 
116b0     29 2C 2C 28 | 	byte	$03, $0a, $13, $18, $1b, $20, $22, $21, $20, $22, $26, $27, $29, $2c, $2c, $28
116b4     25 20 1A 15 
116b8     13 11 11 13 
116bc     14 13 13 12 
116c0     12 12 11 11 | 	byte	$25, $20, $1a, $15, $13, $11, $11, $13, $14, $13, $13, $12, $12, $12, $11, $11
116c4     0F 0E 0F 0F 
116c8     0F 0F 0F 0C 
116cc     08 05 01 FE 
116d0     FB F9 F6 F4 | 	byte	$0f, $0e, $0f, $0f, $0f, $0f, $0f, $0c, $08, $05, $01, $fe, $fb, $f9, $f6, $f4
116d4     F4 F5 F8 FF 
116d8     06 0B 12 1A 
116dc     21 26 2A 2E 
116e0     30 31 31 30 | 	byte	$f4, $f5, $f8, $ff, $06, $0b, $12, $1a, $21, $26, $2a, $2e, $30, $31, $31, $30
116e4     2E 2C 26 20 
116e8     1A 15 0E 07 
116ec     00 FD FB F7 
116f0     F3 F1 EE EB | 	byte	$2e, $2c, $26, $20, $1a, $15, $0e, $07, $00, $fd, $fb, $f7, $f3, $f1, $ee, $eb
116f4     E7 E4 E4 E4 
116f8     E7 EA EC EF 
116fc     F1 F1 F1 F1 
11700     F2 F3 F3 F5 | 	byte	$e7, $e4, $e4, $e4, $e7, $ea, $ec, $ef, $f1, $f1, $f1, $f1, $f2, $f3, $f3, $f5
11704     F5 F4 F3 F2 
11708     F2 F3 F3 F5 
1170c     F7 F8 F9 F8 
11710     F7 F7 F6 F6 | 	byte	$f5, $f4, $f3, $f2, $f2, $f3, $f3, $f5, $f7, $f8, $f9, $f8, $f7, $f7, $f6, $f6
11714     F6 F7 FB FD 
11718     FE FD FC F8 
1171c     F6 F4 F3 F3 
11720     F2 F0 EE EC | 	byte	$f6, $f7, $fb, $fd, $fe, $fd, $fc, $f8, $f6, $f4, $f3, $f3, $f2, $f0, $ee, $ec
11724     E9 E5 E1 DE 
11728     DE DE E0 E1 
1172c     E2 E3 E4 E3 
11730     E2 E3 E8 EC | 	byte	$e9, $e5, $e1, $de, $de, $de, $e0, $e1, $e2, $e3, $e4, $e3, $e2, $e3, $e8, $ec
11734     EE F3 F9 FD 
11738     00 03 05 09 
1173c     0D 10 14 19 
11740     1D 1F 20 21 | 	byte	$ee, $f3, $f9, $fd, $00, $03, $05, $09, $0d, $10, $14, $19, $1d, $1f, $20, $21
11744     22 21 22 22 
11748     23 24 26 27 
1174c     26 25 23 1D 
11750     16 11 0B 05 | 	byte	$22, $21, $22, $22, $23, $24, $26, $27, $26, $25, $23, $1d, $16, $11, $0b, $05
11754     00 FB F6 F1 
11758     ED E8 E1 DA 
1175c     D3 C9 C0 B9 
11760     B5 B2 B3 B7 | 	byte	$00, $fb, $f6, $f1, $ed, $e8, $e1, $da, $d3, $c9, $c0, $b9, $b5, $b2, $b3, $b7
11764     BB C0 C8 CE 
11768     D6 DE E9 F3 
1176c     FC 05 0C 11 
11770     14 16 17 19 | 	byte	$bb, $c0, $c8, $ce, $d6, $de, $e9, $f3, $fc, $05, $0c, $11, $14, $16, $17, $19
11774     1E 23 27 2B 
11778     2E 2B 28 26 
1177c     22 20 1C 19 
11780     17 16 14 14 | 	byte	$1e, $23, $27, $2b, $2e, $2b, $28, $26, $22, $20, $1c, $19, $17, $16, $14, $14
11784     14 16 15 12 
11788     10 10 11 12 
1178c     11 11 12 11 
11790     0F 0F 0F 0E | 	byte	$14, $16, $15, $12, $10, $10, $11, $12, $11, $11, $12, $11, $0f, $0f, $0f, $0e
11794     0B 07 04 01 
11798     FD F9 F4 F2 
1179c     F2 F3 F5 F9 
117a0     01 08 0E 14 | 	byte	$0b, $07, $04, $01, $fd, $f9, $f4, $f2, $f2, $f3, $f5, $f9, $01, $08, $0e, $14
117a4     1B 21 25 29 
117a8     2D 31 32 33 
117ac     32 2F 2A 25 
117b0     1E 17 12 0D | 	byte	$1b, $21, $25, $29, $2d, $31, $32, $33, $32, $2f, $2a, $25, $1e, $17, $12, $0d
117b4     09 05 01 FE 
117b8     F9 F4 EF EB 
117bc     E8 E7 E6 E7 
117c0     E9 EA EB EB | 	byte	$09, $05, $01, $fe, $f9, $f4, $ef, $eb, $e8, $e7, $e6, $e7, $e9, $ea, $eb, $eb
117c4     ED EE F0 F1 
117c8     F3 F3 F4 F3 
117cc     F2 F1 F1 F1 
117d0     F2 F3 F7 F9 | 	byte	$ed, $ee, $f0, $f1, $f3, $f3, $f4, $f3, $f2, $f1, $f1, $f1, $f2, $f3, $f7, $f9
117d4     F8 F6 F5 F4 
117d8     F4 F4 F4 F6 
117dc     FA FC FC FC 
117e0     FD FB F8 F7 | 	byte	$f8, $f6, $f5, $f4, $f4, $f4, $f4, $f6, $fa, $fc, $fc, $fc, $fd, $fb, $f8, $f7
117e4     F7 F8 F8 F8 
117e8     F6 F3 F0 EC 
117ec     E7 E4 E4 E3 
117f0     E2 E2 E3 E2 | 	byte	$f7, $f8, $f8, $f8, $f6, $f3, $f0, $ec, $e7, $e4, $e4, $e3, $e2, $e2, $e3, $e2
117f4     E1 E0 DF DE 
117f8     E0 E3 E6 E9 
117fc     EE F1 F3 F6 
11800     FA FD 00 05 | 	byte	$e1, $e0, $df, $de, $e0, $e3, $e6, $e9, $ee, $f1, $f3, $f6, $fa, $fd, $00, $05
11804     09 0D 12 17 
11808     1A 1C 1D 1D 
1180c     1D 1E 1F 21 
11810     24 27 28 29 | 	byte	$09, $0d, $12, $17, $1a, $1c, $1d, $1d, $1d, $1e, $1f, $21, $24, $27, $28, $29
11814     29 27 23 1F 
11818     1A 15 0F 09 
1181c     05 03 FF FB 
11820     F6 F0 E9 DF | 	byte	$29, $27, $23, $1f, $1a, $15, $0f, $09, $05, $03, $ff, $fb, $f6, $f0, $e9, $df
11824     D7 CF C7 C0 
11828     BB B8 B8 B9 
1182c     B9 BA BE C6 
11830     CE D8 E5 F0 | 	byte	$d7, $cf, $c7, $c0, $bb, $b8, $b8, $b9, $b9, $ba, $be, $c6, $ce, $d8, $e5, $f0
11834     F7 FB FE 02 
11838     08 0F 14 19 
1183c     1E 23 27 28 
11840     2A 2C 29 24 | 	byte	$f7, $fb, $fe, $02, $08, $0f, $14, $19, $1e, $23, $27, $28, $2a, $2c, $29, $24
11844     21 20 1E 1D 
11848     1B 1A 18 16 
1184c     15 13 13 13 
11850     12 12 12 12 | 	byte	$21, $20, $1e, $1d, $1b, $1a, $18, $16, $15, $13, $13, $13, $12, $12, $12, $12
11854     12 11 11 11 
11858     10 10 10 0F 
1185c     0D 0B 07 02 
11860     FD F9 F5 F1 | 	byte	$12, $11, $11, $11, $10, $10, $10, $0f, $0d, $0b, $07, $02, $fd, $f9, $f5, $f1
11864     F1 F2 F4 F8 
11868     FD 03 08 0E 
1186c     13 18 1F 26 
11870     2C 30 34 36 | 	byte	$f1, $f2, $f4, $f8, $fd, $03, $08, $0e, $13, $18, $1f, $26, $2c, $30, $34, $36
11874     33 2F 2B 26 
11878     21 1D 19 14 
1187c     10 0C 06 00 
11880     FC F8 F3 EF | 	byte	$33, $2f, $2b, $26, $21, $1d, $19, $14, $10, $0c, $06, $00, $fc, $f8, $f3, $ef
11884     EC EB E9 E8 
11888     E8 E8 E8 EA 
1188c     EC EE F1 F4 
11890     F2 F1 F0 EF | 	byte	$ec, $eb, $e9, $e8, $e8, $e8, $e8, $ea, $ec, $ee, $f1, $f4, $f2, $f1, $f0, $ef
11894     EF EF F1 F3 
11898     F5 F7 F7 F6 
1189c     F5 F3 F1 F1 
118a0     F2 F5 F8 FA | 	byte	$ef, $ef, $f1, $f3, $f5, $f7, $f7, $f6, $f5, $f3, $f1, $f1, $f2, $f5, $f8, $fa
118a4     FB FB FB FA 
118a8     F9 F9 FA FA 
118ac     FB FB FB F9 
118b0     F6 F3 EF EC | 	byte	$fb, $fb, $fb, $fa, $f9, $f9, $fa, $fa, $fb, $fb, $fb, $f9, $f6, $f3, $ef, $ec
118b4     EA E9 E8 E7 
118b8     E5 E3 E2 E0 
118bc     DF DF DF E0 
118c0     E0 E2 E6 E8 | 	byte	$ea, $e9, $e8, $e7, $e5, $e3, $e2, $e0, $df, $df, $df, $e0, $e0, $e2, $e6, $e8
118c4     EA ED EF F1 
118c8     F4 F7 FC 02 
118cc     08 0C 10 13 
118d0     15 16 18 1A | 	byte	$ea, $ed, $ef, $f1, $f4, $f7, $fc, $02, $08, $0c, $10, $13, $15, $16, $18, $1a
118d4     1B 1C 1D 20 
118d8     24 27 29 2A 
118dc     29 28 24 1F 
118e0     1A 18 14 10 | 	byte	$1b, $1c, $1d, $20, $24, $27, $29, $2a, $29, $28, $24, $1f, $1a, $18, $14, $10
118e4     0D 0A 08 03 
118e8     FC F5 ED E5 
118ec     DE D7 D1 CB 
118f0     C5 BD B6 B5 | 	byte	$0d, $0a, $08, $03, $fc, $f5, $ed, $e5, $de, $d7, $d1, $cb, $c5, $bd, $b6, $b5
118f4     B6 B9 BE C5 
118f8     CD D5 DD E4 
118fc     EB F0 F5 F9 
11900     FF 07 0F 16 | 	byte	$b6, $b9, $be, $c5, $cd, $d5, $dd, $e4, $eb, $f0, $f5, $f9, $ff, $07, $0f, $16
11904     1C 22 24 25 
11908     26 26 25 25 
1190c     24 22 20 1F 
11910     1E 1A 18 17 | 	byte	$1c, $22, $24, $25, $26, $26, $25, $25, $24, $22, $20, $1f, $1e, $1a, $18, $17
11914     15 14 14 14 
11918     14 13 13 12 
1191c     11 12 12 10 
11920     11 13 13 12 | 	byte	$15, $14, $14, $14, $14, $13, $13, $12, $11, $12, $12, $10, $11, $13, $13, $12
11924     10 0D 09 04 
11928     FE F9 F5 F4 
1192c     F2 F2 F5 F8 
11930     FA FC FF 05 | 	byte	$10, $0d, $09, $04, $fe, $f9, $f5, $f4, $f2, $f2, $f5, $f8, $fa, $fc, $ff, $05
11934     0C 14 1D 24 
11938     2A 2F 31 31 
1193c     31 30 2D 2A 
11940     26 22 1E 1A | 	byte	$0c, $14, $1d, $24, $2a, $2f, $31, $31, $31, $30, $2d, $2a, $26, $22, $1e, $1a
11944     15 0F 0A 05 
11948     01 FC F8 F5 
1194c     F1 ED E9 E8 
11950     E7 E7 E9 EB | 	byte	$15, $0f, $0a, $05, $01, $fc, $f8, $f5, $f1, $ed, $e9, $e8, $e7, $e7, $e9, $eb
11954     EE F0 F1 F1 
11958     EF ED ED EE 
1195c     EF F1 F4 F6 
11960     F6 F5 F4 F3 | 	byte	$ee, $f0, $f1, $f1, $ef, $ed, $ed, $ee, $ef, $f1, $f4, $f6, $f6, $f5, $f4, $f3
11964     F1 F1 F1 F2 
11968     F4 F6 F7 F8 
1196c     F8 F8 F7 F7 
11970     F9 FB FB FC | 	byte	$f1, $f1, $f1, $f2, $f4, $f6, $f7, $f8, $f8, $f8, $f7, $f7, $f9, $fb, $fb, $fc
11974     FD FB F9 F7 
11978     F6 F5 F3 F1 
1197c     EE ED EC E9 
11980     E6 E4 E3 E1 | 	byte	$fd, $fb, $f9, $f7, $f6, $f5, $f3, $f1, $ee, $ed, $ec, $e9, $e6, $e4, $e3, $e1
11984     DE DF E0 E2 
11988     E3 E4 E5 E5 
1198c     E6 E7 E9 ED 
11990     F2 F5 F9 FE | 	byte	$de, $df, $e0, $e2, $e3, $e4, $e5, $e5, $e6, $e7, $e9, $ed, $f2, $f5, $f9, $fe
11994     04 09 0C 0F 
11998     10 12 13 13 
1199c     16 19 1D 20 
119a0     23 27 2A 2A | 	byte	$04, $09, $0c, $0f, $10, $12, $13, $13, $16, $19, $1d, $20, $23, $27, $2a, $2a
119a4     28 25 21 1F 
119a8     1E 1C 1B 18 
119ac     15 10 0A 05 
119b0     01 FB F5 F0 | 	byte	$28, $25, $21, $1f, $1e, $1c, $1b, $18, $15, $10, $0a, $05, $01, $fb, $f5, $f0
119b4     E9 E1 D9 D1 
119b8     C9 C1 BC B8 
119bc     B7 BB C0 C5 
119c0     CB D1 D6 DA | 	byte	$e9, $e1, $d9, $d1, $c9, $c1, $bc, $b8, $b7, $bb, $c0, $c5, $cb, $d1, $d6, $da
119c4     DE E4 EA F2 
119c8     F9 01 09 12 
119cc     17 1A 1D 20 
119d0     23 23 24 25 | 	byte	$de, $e4, $ea, $f2, $f9, $01, $09, $12, $17, $1a, $1d, $20, $23, $23, $24, $25
119d4     25 23 22 1F 
119d8     1D 1C 1A 17 
119dc     17 17 16 15 
119e0     14 14 13 12 | 	byte	$25, $23, $22, $1f, $1d, $1c, $1a, $17, $17, $17, $16, $15, $14, $14, $13, $12
119e4     11 11 11 13 
119e8     15 15 16 15 
119ec     12 0E 08 03 
119f0     00 FD FA F8 | 	byte	$11, $11, $11, $13, $15, $15, $16, $15, $12, $0e, $08, $03, $00, $fd, $fa, $f8
119f4     F6 F4 F2 F2 
119f8     F3 F5 FA 01 
119fc     08 10 18 1F 
11a00     25 28 2C 2E | 	byte	$f6, $f4, $f2, $f2, $f3, $f5, $fa, $01, $08, $10, $18, $1f, $25, $28, $2c, $2e
11a04     30 31 2F 2E 
11a08     2A 27 23 1D 
11a0c     18 14 10 0B 
11a10     07 03 FE F8 | 	byte	$30, $31, $2f, $2e, $2a, $27, $23, $1d, $18, $14, $10, $0b, $07, $03, $fe, $f8
11a14     F3 EF EB E9 
11a18     EA EB ED EE 
11a1c     EF EE EE ED 
11a20     EC EC EE F0 | 	byte	$f3, $ef, $eb, $e9, $ea, $eb, $ed, $ee, $ef, $ee, $ee, $ed, $ec, $ec, $ee, $f0
11a24     F1 F2 F4 F5 
11a28     F3 F2 F1 F1 
11a2c     F2 F3 F3 F3 
11a30     F4 F4 F3 F3 | 	byte	$f1, $f2, $f4, $f5, $f3, $f2, $f1, $f1, $f2, $f3, $f3, $f3, $f4, $f4, $f3, $f3
11a34     F5 F6 F7 F9 
11a38     FA FB FC FC 
11a3c     FB FA FA F9 
11a40     F7 F6 F6 F5 | 	byte	$f5, $f6, $f7, $f9, $fa, $fb, $fc, $fc, $fb, $fa, $fa, $f9, $f7, $f6, $f6, $f5
11a44     F3 F1 EE EA 
11a48     E6 E4 E3 E2 
11a4c     E3 E3 E2 E2 
11a50     E3 E4 E3 E3 | 	byte	$f3, $f1, $ee, $ea, $e6, $e4, $e3, $e2, $e3, $e3, $e2, $e2, $e3, $e4, $e3, $e3
11a54     E3 E3 E5 E9 
11a58     ED F2 F7 FC 
11a5c     01 05 0A 0B 
11a60     0A 0A 0C 0E | 	byte	$e3, $e3, $e5, $e9, $ed, $f2, $f7, $fc, $01, $05, $0a, $0b, $0a, $0a, $0c, $0e
11a64     13 18 1E 22 
11a68     25 25 25 25 
11a6c     26 25 25 24 
11a70     23 21 1E 1A | 	byte	$13, $18, $1e, $22, $25, $25, $25, $25, $26, $25, $25, $24, $23, $21, $1e, $1a
11a74     18 14 0F 0B 
11a78     07 04 FF F9 
11a7c     F1 E8 DF D6 
11a80     CD C6 C1 BE | 	byte	$18, $14, $0f, $0b, $07, $04, $ff, $f9, $f1, $e8, $df, $d6, $cd, $c6, $c1, $be
11a84     BE BF C1 C5 
11a88     C8 CA CD D1 
11a8c     D7 DD E3 EB 
11a90     F3 FC 02 08 | 	byte	$be, $bf, $c1, $c5, $c8, $ca, $cd, $d1, $d7, $dd, $e3, $eb, $f3, $fc, $02, $08
11a94     0F 14 18 1C 
11a98     1F 22 24 24 
11a9c     24 23 21 20 
11aa0     1E 1C 1B 1B | 	byte	$0f, $14, $18, $1c, $1f, $22, $24, $24, $24, $23, $21, $20, $1e, $1c, $1b, $1b
11aa4     1A 19 18 17 
11aa8     14 12 11 10 
11aac     10 13 15 17 
11ab0     17 18 16 13 | 	byte	$1a, $19, $18, $17, $14, $12, $11, $10, $10, $13, $15, $17, $17, $18, $16, $13
11ab4     10 0E 0A 08 
11ab8     05 02 FE FA 
11abc     F6 F1 EF EF 
11ac0     F0 F3 F8 FE | 	byte	$10, $0e, $0a, $08, $05, $02, $fe, $fa, $f6, $f1, $ef, $ef, $f0, $f3, $f8, $fe
11ac4     05 0B 12 18 
11ac8     1E 23 28 2C 
11acc     30 32 31 2F 
11ad0     2C 29 25 21 | 	byte	$05, $0b, $12, $18, $1e, $23, $28, $2c, $30, $32, $31, $2f, $2c, $29, $25, $21
11ad4     1E 1B 17 12 
11ad8     0D 07 01 FB 
11adc     F6 F1 F0 F0 
11ae0     EE EE EE EE | 	byte	$1e, $1b, $17, $12, $0d, $07, $01, $fb, $f6, $f1, $f0, $f0, $ee, $ee, $ee, $ee
11ae4     EC EB EB EC 
11ae8     ED EE F0 F0 
11aec     F1 F2 F1 F1 
11af0     F1 F3 F3 F3 | 	byte	$ec, $eb, $eb, $ec, $ed, $ee, $f0, $f0, $f1, $f2, $f1, $f1, $f1, $f3, $f3, $f3
11af4     F3 F3 F2 F2 
11af8     F2 F2 F2 F3 
11afc     F3 F5 F8 FA 
11b00     FB FB FA FA | 	byte	$f3, $f3, $f2, $f2, $f2, $f2, $f2, $f3, $f3, $f5, $f8, $fa, $fb, $fb, $fa, $fa
11b04     F9 F9 FA FA 
11b08     FB F9 F8 F7 
11b0c     F6 F2 EE EB 
11b10     E8 E7 E5 E5 | 	byte	$f9, $f9, $fa, $fa, $fb, $f9, $f8, $f7, $f6, $f2, $ee, $eb, $e8, $e7, $e5, $e5
11b14     E5 E5 E4 E3 
11b18     E2 E3 E3 E1 
11b1c     DF DE E1 E5 
11b20     EB F1 F8 FD | 	byte	$e5, $e5, $e4, $e3, $e2, $e3, $e3, $e1, $df, $de, $e1, $e5, $eb, $f1, $f8, $fd
11b24     FF FF FF 01 
11b28     03 06 0A 0F 
11b2c     14 18 1B 1D 
11b30     20 21 23 23 | 	byte	$ff, $ff, $ff, $01, $03, $06, $0a, $0f, $14, $18, $1b, $1d, $20, $21, $23, $23
11b34     25 26 27 26 
11b38     24 22 1F 1C 
11b3c     19 17 15 13 
11b40     10 0B 05 FF | 	byte	$25, $26, $27, $26, $24, $22, $1f, $1c, $19, $17, $15, $13, $10, $0b, $05, $ff
11b44     F7 ED E4 DC 
11b48     D4 CD C9 C6 
11b4c     C3 C3 C4 C3 
11b50     C3 C5 C9 CD | 	byte	$f7, $ed, $e4, $dc, $d4, $cd, $c9, $c6, $c3, $c3, $c4, $c3, $c3, $c5, $c9, $cd
11b54     D1 D8 DE E4 
11b58     EC F3 F9 01 
11b5c     08 0D 13 18 
11b60     1D 20 22 23 | 	byte	$d1, $d8, $de, $e4, $ec, $f3, $f9, $01, $08, $0d, $13, $18, $1d, $20, $22, $23
11b64     22 20 1F 1E 
11b68     1F 1F 1F 1E 
11b6c     1D 1B 18 14 
11b70     12 11 11 11 | 	byte	$22, $20, $1f, $1e, $1f, $1f, $1f, $1e, $1d, $1b, $18, $14, $12, $11, $11, $11
11b74     13 16 17 17 
11b78     17 15 14 14 
11b7c     12 10 0F 0E 
11b80     0A 04 00 FB | 	byte	$13, $16, $17, $17, $17, $15, $14, $14, $12, $10, $0f, $0e, $0a, $04, $00, $fb
11b84     F6 F2 EF EF 
11b88     F1 F3 F6 F9 
11b8c     FE 04 0A 11 
11b90     19 20 26 2A | 	byte	$f6, $f2, $ef, $ef, $f1, $f3, $f6, $f9, $fe, $04, $0a, $11, $19, $20, $26, $2a
11b94     2D 2E 2F 2E 
11b98     2D 2B 2A 28 
11b9c     25 21 1C 16 
11ba0     0F 09 03 FF | 	byte	$2d, $2e, $2f, $2e, $2d, $2b, $2a, $28, $25, $21, $1c, $16, $0f, $09, $03, $ff
11ba4     FB F9 F6 F4 
11ba8     F2 EF ED EC 
11bac     EC EC ED ED 
11bb0     EE EF EF EF | 	byte	$fb, $f9, $f6, $f4, $f2, $ef, $ed, $ec, $ec, $ec, $ed, $ed, $ee, $ef, $ef, $ef
11bb4     EF F0 F1 F1 
11bb8     F1 F2 F4 F5 
11bbc     F4 F2 F0 F0 
11bc0     EF EF F1 F3 | 	byte	$ef, $f0, $f1, $f1, $f1, $f2, $f4, $f5, $f4, $f2, $f0, $f0, $ef, $ef, $f1, $f3
11bc4     F5 F6 F7 F8 
11bc8     FA F9 F8 F8 
11bcc     F9 FA FB FC 
11bd0     FC FC FA F8 | 	byte	$f5, $f6, $f7, $f8, $fa, $f9, $f8, $f8, $f9, $fa, $fb, $fc, $fc, $fc, $fa, $f8
11bd4     F5 F4 F2 EE 
11bd8     EA E8 E7 E6 
11bdc     E7 E9 E8 E7 
11be0     E4 E0 DD DC | 	byte	$f5, $f4, $f2, $ee, $ea, $e8, $e7, $e6, $e7, $e9, $e8, $e7, $e4, $e0, $dd, $dc
11be4     DD DF E2 E8 
11be8     ED F0 F4 F6 
11bec     F7 F8 FB FD 
11bf0     00 04 09 0D | 	byte	$dd, $df, $e2, $e8, $ed, $f0, $f4, $f6, $f7, $f8, $fb, $fd, $00, $04, $09, $0d
11bf4     10 13 16 18 
11bf8     1B 1E 21 23 
11bfc     26 27 26 24 
11c00     23 21 1F 1E | 	byte	$10, $13, $16, $18, $1b, $1e, $21, $23, $26, $27, $26, $24, $23, $21, $1f, $1e
11c04     1E 1C 1B 19 
11c08     15 11 0A 03 
11c0c     FB F3 EB E4 
11c10     DD D7 D2 CC | 	byte	$1e, $1c, $1b, $19, $15, $11, $0a, $03, $fb, $f3, $eb, $e4, $dd, $d7, $d2, $cc
11c14     C8 C6 C5 C3 
11c18     C3 C4 C7 CA 
11c1c     CF D4 D8 DE 
11c20     E3 E9 EF F7 | 	byte	$c8, $c6, $c5, $c3, $c3, $c4, $c7, $ca, $cf, $d4, $d8, $de, $e3, $e9, $ef, $f7
11c24     00 08 0F 15 
11c28     1A 1C 1D 1C 
11c2c     1C 1D 1F 20 
11c30     21 22 21 1F | 	byte	$00, $08, $0f, $15, $1a, $1c, $1d, $1c, $1c, $1d, $1f, $20, $21, $22, $21, $1f
11c34     1C 18 16 14 
11c38     13 13 13 14 
11c3c     16 16 16 16 
11c40     16 16 16 16 | 	byte	$1c, $18, $16, $14, $13, $13, $13, $14, $16, $16, $16, $16, $16, $16, $16, $16
11c44     16 15 13 0F 
11c48     0B 06 01 FC 
11c4c     F8 F5 F3 F1 
11c50     F0 F0 F1 F4 | 	byte	$16, $15, $13, $0f, $0b, $06, $01, $fc, $f8, $f5, $f3, $f1, $f0, $f0, $f1, $f4
11c54     F8 FE 06 0E 
11c58     14 1B 20 25 
11c5c     27 29 2B 2E 
11c60     2F 30 2E 2C | 	byte	$f8, $fe, $06, $0e, $14, $1b, $20, $25, $27, $29, $2b, $2e, $2f, $30, $2e, $2c
11c64     29 23 1D 18 
11c68     13 0F 0A 05 
11c6c     01 FD FA F7 
11c70     F3 F1 EF EE | 	byte	$29, $23, $1d, $18, $13, $0f, $0a, $05, $01, $fd, $fa, $f7, $f3, $f1, $ef, $ee
11c74     ED ED EF EF 
11c78     EE EE EE EE 
11c7c     EE EF F0 F2 
11c80     F3 F4 F3 F3 | 	byte	$ed, $ed, $ef, $ef, $ee, $ee, $ee, $ee, $ee, $ef, $f0, $f2, $f3, $f4, $f3, $f3
11c84     F3 F1 EF EE 
11c88     EF F0 F1 F3 
11c8c     F4 F5 F5 F6 
11c90     F6 F7 F9 F9 | 	byte	$f3, $f1, $ef, $ee, $ef, $f0, $f1, $f3, $f4, $f5, $f5, $f6, $f6, $f7, $f9, $f9
11c94     F9 FA FA FB 
11c98     FD FE FD FB 
11c9c     F7 F4 F0 ED 
11ca0     ED ED EC EC | 	byte	$f9, $fa, $fa, $fb, $fd, $fe, $fd, $fb, $f7, $f4, $f0, $ed, $ed, $ed, $ec, $ec
11ca4     EC EB E8 E5 
11ca8     E1 DE DD DD 
11cac     DE E1 E4 E8 
11cb0     EA EC EF F0 | 	byte	$ec, $eb, $e8, $e5, $e1, $de, $dd, $dd, $de, $e1, $e4, $e8, $ea, $ec, $ef, $f0
11cb4     F2 F5 F8 FB 
11cb8     FE 02 05 07 
11cbc     0A 0D 10 15 
11cc0     1A 1E 21 23 | 	byte	$f2, $f5, $f8, $fb, $fe, $02, $05, $07, $0a, $0d, $10, $15, $1a, $1e, $21, $23
11cc4     24 24 22 21 
11cc8     21 21 22 22 
11ccc     22 22 21 1D 
11cd0     19 14 0F 08 | 	byte	$24, $24, $22, $21, $21, $21, $22, $22, $22, $22, $21, $1d, $19, $14, $0f, $08
11cd4     01 F9 F3 ED 
11cd8     E6 DF D9 D3 
11cdc     CE C9 C6 C5 
11ce0     C5 C6 C8 CA | 	byte	$01, $f9, $f3, $ed, $e6, $df, $d9, $d3, $ce, $c9, $c6, $c5, $c5, $c6, $c8, $ca
11ce4     CD CF D1 D4 
11ce8     D9 E1 E9 F3 
11cec     FC 04 0A 0E 
11cf0     11 13 15 19 | 	byte	$cd, $cf, $d1, $d4, $d9, $e1, $e9, $f3, $fc, $04, $0a, $0e, $11, $13, $15, $19
11cf4     1B 1D 20 22 
11cf8     23 21 20 1E 
11cfc     1B 18 16 16 
11d00     16 16 15 15 | 	byte	$1b, $1d, $20, $22, $23, $21, $20, $1e, $1b, $18, $16, $16, $16, $16, $15, $15
11d04     15 15 14 14 
11d08     16 18 19 18 
11d0c     18 16 14 11 
11d10     0C 08 05 01 | 	byte	$15, $15, $14, $14, $16, $18, $19, $18, $18, $16, $14, $11, $0c, $08, $05, $01
11d14     FC F7 F4 F1 
11d18     EE EC EE F1 
11d1c     F6 FC 03 09 
11d20     0E 13 17 1C | 	byte	$fc, $f7, $f4, $f1, $ee, $ec, $ee, $f1, $f6, $fc, $03, $09, $0e, $13, $17, $1c
11d24     22 28 2B 2E 
11d28     2F 31 2F 2D 
11d2c     2A 26 22 1D 
11d30     18 14 10 0C | 	byte	$22, $28, $2b, $2e, $2f, $31, $2f, $2d, $2a, $26, $22, $1d, $18, $14, $10, $0c
11d34     06 01 FD FA 
11d38     F7 F5 F3 F1 
11d3c     F0 F0 EE ED 
11d40     ED ED ED ED | 	byte	$06, $01, $fd, $fa, $f7, $f5, $f3, $f1, $f0, $f0, $ee, $ed, $ed, $ed, $ed, $ed
11d44     EE F0 F2 F3 
11d48     F3 F2 F1 F1 
11d4c     F0 F0 F0 F0 
11d50     F0 EF F0 F1 | 	byte	$ee, $f0, $f2, $f3, $f3, $f2, $f1, $f1, $f0, $f0, $f0, $f0, $f0, $ef, $f0, $f1
11d54     F2 F4 F5 F5 
11d58     F5 F5 F5 F7 
11d5c     F9 FB FD FE 
11d60     FF FE FC F8 | 	byte	$f2, $f4, $f5, $f5, $f5, $f5, $f5, $f7, $f9, $fb, $fd, $fe, $ff, $fe, $fc, $f8
11d64     F6 F4 F2 F2 
11d68     F2 F2 F1 EF 
11d6c     ED EA E7 E3 
11d70     E1 DF DF E0 | 	byte	$f6, $f4, $f2, $f2, $f2, $f2, $f1, $ef, $ed, $ea, $e7, $e3, $e1, $df, $df, $e0
11d74     E1 E1 E3 E5 
11d78     E6 E8 EA ED 
11d7c     F1 F4 F7 F9 
11d80     FB FD FE 00 | 	byte	$e1, $e1, $e3, $e5, $e6, $e8, $ea, $ed, $f1, $f4, $f7, $f9, $fb, $fd, $fe, $00
11d84     04 0A 10 14 
11d88     19 1D 1F 20 
11d8c     1F 1F 1F 20 
11d90     21 22 24 25 | 	byte	$04, $0a, $10, $14, $19, $1d, $1f, $20, $1f, $1f, $1f, $20, $21, $22, $24, $25
11d94     26 25 23 20 
11d98     1D 18 12 0D 
11d9c     07 01 FB F5 
11da0     EE E7 E0 D8 | 	byte	$26, $25, $23, $20, $1d, $18, $12, $0d, $07, $01, $fb, $f5, $ee, $e7, $e0, $d8
11da4     D2 CF CD CA 
11da8     CA CB C9 C8 
11dac     C8 C8 CB D0 
11db0     D5 DC E5 EE | 	byte	$d2, $cf, $cd, $ca, $ca, $cb, $c9, $c8, $c8, $c8, $cb, $d0, $d5, $dc, $e5, $ee
11db4     F5 FB 00 05 
11db8     09 0C 11 16 
11dbc     1B 1E 20 20 
11dc0     20 1F 1E 1C | 	byte	$f5, $fb, $00, $05, $09, $0c, $11, $16, $1b, $1e, $20, $20, $20, $1f, $1e, $1c
11dc4     1C 1C 1A 19 
11dc8     17 16 15 13 
11dcc     13 14 15 16 
11dd0     18 18 1A 1A | 	byte	$1c, $1c, $1a, $19, $17, $16, $15, $13, $13, $14, $15, $16, $18, $18, $1a, $1a
11dd4     18 16 14 13 
11dd8     11 0E 0A 05 
11ddc     FF F9 F3 F0 
11de0     EF EF EF F1 | 	byte	$18, $16, $14, $13, $11, $0e, $0a, $05, $ff, $f9, $f3, $f0, $ef, $ef, $ef, $f1
11de4     F4 F8 FD 02 
11de8     06 0B 11 18 
11dec     1E 24 29 2D 
11df0     2F 30 2F 2E | 	byte	$f4, $f8, $fd, $02, $06, $0b, $11, $18, $1e, $24, $29, $2d, $2f, $30, $2f, $2e
11df4     2C 2A 26 21 
11df8     1D 19 14 0F 
11dfc     0B 06 01 FE 
11e00     FB F9 F7 F5 | 	byte	$2c, $2a, $26, $21, $1d, $19, $14, $0f, $0b, $06, $01, $fe, $fb, $f9, $f7, $f5
11e04     F2 EF ED EC 
11e08     EC ED EE EF 
11e0c     EF F0 F1 F1 
11e10     F2 F2 F2 F1 | 	byte	$f2, $ef, $ed, $ec, $ec, $ed, $ee, $ef, $ef, $f0, $f1, $f1, $f2, $f2, $f2, $f1
11e14     F1 EF EF EF 
11e18     EF F0 F1 F2 
11e1c     F3 F2 F1 F1 
11e20     F1 F3 F5 F7 | 	byte	$f1, $ef, $ef, $ef, $ef, $f0, $f1, $f2, $f3, $f2, $f1, $f1, $f1, $f3, $f5, $f7
11e24     FA FD FF FE 
11e28     FD FB F9 F7 
11e2c     F6 F6 F6 F6 
11e30     F6 F4 F2 F0 | 	byte	$fa, $fd, $ff, $fe, $fd, $fb, $f9, $f7, $f6, $f6, $f6, $f6, $f6, $f4, $f2, $f0
11e34     ED EA E7 E5 
11e38     E4 E3 E2 E1 
11e3c     E1 E0 E0 E1 
11e40     E3 E7 EB EE | 	byte	$ed, $ea, $e7, $e5, $e4, $e3, $e2, $e1, $e1, $e0, $e0, $e1, $e3, $e7, $eb, $ee
11e44     F0 F2 F3 F4 
11e48     F4 F6 F9 FD 
11e4c     03 08 0E 13 
11e50     17 18 19 1B | 	byte	$f0, $f2, $f3, $f4, $f4, $f6, $f9, $fd, $03, $08, $0e, $13, $17, $18, $19, $1b
11e54     1B 1B 1C 1E 
11e58     20 23 25 27 
11e5c     28 27 24 21 
11e60     1E 1C 18 13 | 	byte	$1b, $1b, $1c, $1e, $20, $23, $25, $27, $28, $27, $24, $21, $1e, $1c, $18, $13
11e64     0E 09 03 FB 
11e68     F3 EB E5 E0 
11e6c     DB D6 D3 D1 
11e70     CF CB C8 C7 | 	byte	$0e, $09, $03, $fb, $f3, $eb, $e5, $e0, $db, $d6, $d3, $d1, $cf, $cb, $c8, $c7
11e74     C6 C6 C8 CE 
11e78     D4 DA E0 E6 
11e7c     EC F1 F6 FC 
11e80     03 0A 10 14 | 	byte	$c6, $c6, $c8, $ce, $d4, $da, $e0, $e6, $ec, $f1, $f6, $fc, $03, $0a, $10, $14
11e84     17 1A 1B 1D 
11e88     1D 1E 1E 1E 
11e8c     1E 1D 1C 1A 
11e90     17 14 12 13 | 	byte	$17, $1a, $1b, $1d, $1d, $1e, $1e, $1e, $1e, $1d, $1c, $1a, $17, $14, $12, $13
11e94     14 15 17 17 
11e98     17 18 18 19 
11e9c     1A 1A 19 17 
11ea0     14 10 0C 07 | 	byte	$14, $15, $17, $17, $17, $18, $18, $19, $1a, $1a, $19, $17, $14, $10, $0c, $07
11ea4     01 FB F7 F3 
11ea8     F1 F1 F1 F1 
11eac     F2 F3 F7 FB 
11eb0     00 06 0D 13 | 	byte	$01, $fb, $f7, $f3, $f1, $f1, $f1, $f1, $f2, $f3, $f7, $fb, $00, $06, $0d, $13
11eb4     19 1F 24 29 
11eb8     2C 2E 2F 2F 
11ebc     2E 2D 2A 26 
11ec0     21 1C 17 12 | 	byte	$19, $1f, $24, $29, $2c, $2e, $2f, $2f, $2e, $2d, $2a, $26, $21, $1c, $17, $12
11ec4     0E 0B 08 04 
11ec8     00 FC F9 F6 
11ecc     F3 F1 EF EF 
11ed0     EE EE EE EE | 	byte	$0e, $0b, $08, $04, $00, $fc, $f9, $f6, $f3, $f1, $ef, $ef, $ee, $ee, $ee, $ee
11ed4     EF F1 F1 F2 
11ed8     F3 F2 F0 EF 
11edc     EF EF F0 F1 
11ee0     F1 F1 F2 F1 | 	byte	$ef, $f1, $f1, $f2, $f3, $f2, $f0, $ef, $ef, $ef, $f0, $f1, $f1, $f1, $f2, $f1
11ee4     EF EE EE EF 
11ee8     F0 F3 F6 F9 
11eec     FB FC FC FB 
11ef0     FA F9 F8 F8 | 	byte	$ef, $ee, $ee, $ef, $f0, $f3, $f6, $f9, $fb, $fc, $fc, $fb, $fa, $f9, $f8, $f8
11ef4     F9 FA F9 F9 
11ef8     F7 F5 F2 F0 
11efc     EE ED EB E9 
11f00     E7 E5 E3 E1 | 	byte	$f9, $fa, $f9, $f9, $f7, $f5, $f2, $f0, $ee, $ed, $eb, $e9, $e7, $e5, $e3, $e1
11f04     DE DE E0 E2 
11f08     E5 E8 EB ED 
11f0c     EE EE EE EE 
11f10     F0 F2 F5 FB | 	byte	$de, $de, $e0, $e2, $e5, $e8, $eb, $ed, $ee, $ee, $ee, $ee, $f0, $f2, $f5, $fb
11f14     01 06 0B 0F 
11f18     12 14 14 14 
11f1c     15 18 1B 1D 
11f20     20 23 24 25 | 	byte	$01, $06, $0b, $0f, $12, $14, $14, $14, $15, $18, $1b, $1d, $20, $23, $24, $25
11f24     26 26 25 24 
11f28     23 20 1D 1A 
11f2c     14 0D 06 FF 
11f30     F9 F3 ED E8 | 	byte	$26, $26, $25, $24, $23, $20, $1d, $1a, $14, $0d, $06, $ff, $f9, $f3, $ed, $e8
11f34     E3 DF DB D5 
11f38     D0 CC C9 C7 
11f3c     C7 C9 CB CE 
11f40     D1 D5 D9 DE | 	byte	$e3, $df, $db, $d5, $d0, $cc, $c9, $c7, $c7, $c9, $cb, $ce, $d1, $d5, $d9, $de
11f44     E3 E9 EF F7 
11f48     FE 05 0B 0F 
11f4c     11 13 16 19 
11f50     1C 1E 1F 1F | 	byte	$e3, $e9, $ef, $f7, $fe, $05, $0b, $0f, $11, $13, $16, $19, $1c, $1e, $1f, $1f
11f54     1E 1C 1A 18 
11f58     17 16 15 14 
11f5c     14 15 15 15 
11f60     16 17 19 1A | 	byte	$1e, $1c, $1a, $18, $17, $16, $15, $14, $14, $15, $15, $15, $16, $17, $19, $1a
11f64     1C 1C 1C 1A 
11f68     16 11 0D 09 
11f6c     04 00 FB F7 
11f70     F4 F2 F0 F0 | 	byte	$1c, $1c, $1c, $1a, $16, $11, $0d, $09, $04, $00, $fb, $f7, $f4, $f2, $f0, $f0
11f74     F0 F1 F3 F6 
11f78     FC 02 08 0E 
11f7c     13 18 1E 23 
11f80     28 2C 30 31 | 	byte	$f0, $f1, $f3, $f6, $fc, $02, $08, $0e, $13, $18, $1e, $23, $28, $2c, $30, $31
11f84     30 2E 2B 27 
11f88     23 1F 1C 18 
11f8c     15 11 0C 08 
11f90     05 01 FD FA | 	byte	$30, $2e, $2b, $27, $23, $1f, $1c, $18, $15, $11, $0c, $08, $05, $01, $fd, $fa
11f94     F7 F4 F1 EF 
11f98     EF EF EF F0 
11f9c     F1 F2 F2 F1 
11fa0     F0 EF EF EF | 	byte	$f7, $f4, $f1, $ef, $ef, $ef, $ef, $f0, $f1, $f2, $f2, $f1, $f0, $ef, $ef, $ef
11fa4     EF F1 F2 F3 
11fa8     F2 F1 EF EE 
11fac     EC EC EC EE 
11fb0     F2 F4 F6 F8 | 	byte	$ef, $f1, $f2, $f3, $f2, $f1, $ef, $ee, $ec, $ec, $ec, $ee, $f2, $f4, $f6, $f8
11fb4     FA F9 F8 F8 
11fb8     F9 FA FA FB 
11fbc     FB FB FA F8 
11fc0     F6 F5 F5 F3 | 	byte	$fa, $f9, $f8, $f8, $f9, $fa, $fa, $fb, $fb, $fb, $fa, $f8, $f6, $f5, $f5, $f3
11fc4     F2 F1 EF EC 
11fc8     E8 E4 E2 E1 
11fcc     E0 E0 E2 E4 
11fd0     E7 E9 EA EB | 	byte	$f2, $f1, $ef, $ec, $e8, $e4, $e2, $e1, $e0, $e0, $e2, $e4, $e7, $e9, $ea, $eb
11fd4     EA E9 E9 E9 
11fd8     EB EF F5 FA 
11fdc     FF 03 07 0A 
11fe0     0B 0D 0F 12 | 	byte	$ea, $e9, $e9, $e9, $eb, $ef, $f5, $fa, $ff, $03, $07, $0a, $0b, $0d, $0f, $12
11fe4     14 17 19 1C 
11fe8     1E 1F 21 23 
11fec     25 26 27 28 
11ff0     27 25 22 1D | 	byte	$14, $17, $19, $1c, $1e, $1f, $21, $23, $25, $26, $27, $28, $27, $25, $22, $1d
11ff4     16 10 0A 05 
11ff8     00 FB F6 F0 
11ffc     EB E5 DF D9 
12000     D4 CF CD CB | 	byte	$16, $10, $0a, $05, $00, $fb, $f6, $f0, $eb, $e5, $df, $d9, $d4, $cf, $cd, $cb
12004     CB CB CC CD 
12008     CE CE D1 D7 
1200c     DE E5 EB F2 
12010     F7 FD 02 06 | 	byte	$cb, $cb, $cc, $cd, $ce, $ce, $d1, $d7, $de, $e5, $eb, $f2, $f7, $fd, $02, $06
12014     0C 10 13 16 
12018     1A 1C 1D 1D 
1201c     1D 1C 1B 1A 
12020     19 17 16 14 | 	byte	$0c, $10, $13, $16, $1a, $1c, $1d, $1d, $1d, $1c, $1b, $1a, $19, $17, $16, $14
12024     13 13 13 15 
12028     17 19 1A 1B 
1202c     1D 1D 1C 1A 
12030     18 14 10 0B | 	byte	$13, $13, $13, $15, $17, $19, $1a, $1b, $1d, $1d, $1c, $1a, $18, $14, $10, $0b
12034     08 04 00 FB 
12038     F7 F3 F0 EF 
1203c     EF EF F2 F5 
12040     F8 FB 00 05 | 	byte	$08, $04, $00, $fb, $f7, $f3, $f0, $ef, $ef, $ef, $f2, $f5, $f8, $fb, $00, $05
12044     0B 12 19 20 
12048     26 2A 2D 2E 
1204c     2F 2E 2C 2A 
12050     27 24 20 1C | 	byte	$0b, $12, $19, $20, $26, $2a, $2d, $2e, $2f, $2e, $2c, $2a, $27, $24, $20, $1c
12054     18 15 11 0E 
12058     0A 06 02 FD 
1205c     F8 F5 F3 F1 
12060     F1 F1 F2 F3 | 	byte	$18, $15, $11, $0e, $0a, $06, $02, $fd, $f8, $f5, $f3, $f1, $f1, $f1, $f2, $f3
12064     F2 F1 F0 EF 
12068     EE EE EE F0 
1206c     F2 F3 F4 F3 
12070     F1 EF ED EB | 	byte	$f2, $f1, $f0, $ef, $ee, $ee, $ee, $f0, $f2, $f3, $f4, $f3, $f1, $ef, $ed, $eb
12074     EB EC EE F0 
12078     F2 F4 F5 F6 
1207c     F6 F6 F7 F9 
12080     FA FB FB FB | 	byte	$eb, $ec, $ee, $f0, $f2, $f4, $f5, $f6, $f6, $f6, $f7, $f9, $fa, $fb, $fb, $fb
12084     FA F9 F9 F9 
12088     F9 F9 F8 F7 
1208c     F5 F3 F0 EC 
12090     E8 E5 E3 E1 | 	byte	$fa, $f9, $f9, $f9, $f9, $f9, $f8, $f7, $f5, $f3, $f0, $ec, $e8, $e5, $e3, $e1
12094     E1 E3 E5 E7 
12098     E8 E9 E8 E6 
1209c     E5 E5 E6 E8 
120a0     EB EF F3 F7 | 	byte	$e1, $e3, $e5, $e7, $e8, $e9, $e8, $e6, $e5, $e5, $e6, $e8, $eb, $ef, $f3, $f7
120a4     FB FE 01 04 
120a8     07 09 0D 10 
120ac     13 15 16 18 
120b0     18 1B 1E 21 | 	byte	$fb, $fe, $01, $04, $07, $09, $0d, $10, $13, $15, $16, $18, $18, $1b, $1e, $21
120b4     25 29 2A 2A 
120b8     28 27 23 1E 
120bc     19 14 10 0C 
120c0     08 03 FE F7 | 	byte	$25, $29, $2a, $2a, $28, $27, $23, $1e, $19, $14, $10, $0c, $08, $03, $fe, $f7
120c4     F1 E9 E3 DE 
120c8     DA D7 D3 D1 
120cc     CE CC CB CB 
120d0     CB CD D1 D4 | 	byte	$f1, $e9, $e3, $de, $da, $d7, $d3, $d1, $ce, $cc, $cb, $cb, $cb, $cd, $d1, $d4
120d4     D9 DF E6 EB 
120d8     F0 F5 FB 01 
120dc     07 0B 10 13 
120e0     15 17 1A 1C | 	byte	$d9, $df, $e6, $eb, $f0, $f5, $fb, $01, $07, $0b, $10, $13, $15, $17, $1a, $1c
120e4     1D 1D 1B 1A 
120e8     18 17 15 13 
120ec     12 12 13 14 
120f0     16 19 1B 1C | 	byte	$1d, $1d, $1b, $1a, $18, $17, $15, $13, $12, $12, $13, $14, $16, $19, $1b, $1c
120f4     1D 1D 1C 1A 
120f8     19 17 15 11 
120fc     0C 07 02 FD 
12100     F9 F5 F3 F2 | 	byte	$1d, $1d, $1c, $1a, $19, $17, $15, $11, $0c, $07, $02, $fd, $f9, $f5, $f3, $f2
12104     F1 F0 F0 F1 
12108     F3 F6 FA 00 
1210c     07 0D 14 1A 
12110     20 25 29 2C | 	byte	$f1, $f0, $f0, $f1, $f3, $f6, $fa, $00, $07, $0d, $14, $1a, $20, $25, $29, $2c
12114     2E 2F 2D 2B 
12118     28 25 23 20 
1211c     1D 1A 17 13 
12120     0F 0A 05 00 | 	byte	$2e, $2f, $2d, $2b, $28, $25, $23, $20, $1d, $1a, $17, $13, $0f, $0a, $05, $00
12124     FC F8 F6 F5 
12128     F5 F5 F4 F3 
1212c     F1 F0 EE EE 
12130     EF F0 F2 F3 | 	byte	$fc, $f8, $f6, $f5, $f5, $f5, $f4, $f3, $f1, $f0, $ee, $ee, $ef, $f0, $f2, $f3
12134     F4 F4 F3 F1 
12138     EF ED ED ED 
1213c     ED EE EE EE 
12140     EF F0 F1 F3 | 	byte	$f4, $f4, $f3, $f1, $ef, $ed, $ed, $ed, $ed, $ee, $ee, $ee, $ef, $f0, $f1, $f3
12144     F5 F7 F8 F9 
12148     FA F9 F9 F9 
1214c     F9 F9 F9 FA 
12150     FB FC FB FA | 	byte	$f5, $f7, $f8, $f9, $fa, $f9, $f9, $f9, $f9, $f9, $f9, $fa, $fb, $fc, $fb, $fa
12154     F8 F4 F0 EB 
12158     E8 E6 E6 E6 
1215c     E6 E7 E8 E8 
12160     E7 E6 E5 E4 | 	byte	$f8, $f4, $f0, $eb, $e8, $e6, $e6, $e6, $e6, $e7, $e8, $e8, $e7, $e6, $e5, $e4
12164     E4 E4 E5 E8 
12168     EC EE F0 F3 
1216c     F5 F8 FC 01 
12170     05 09 0C 0D | 	byte	$e4, $e4, $e5, $e8, $ec, $ee, $f0, $f3, $f5, $f8, $fc, $01, $05, $09, $0c, $0d
12174     0E 0F 11 12 
12178     14 17 1C 21 
1217c     26 29 2A 2A 
12180     28 25 23 21 | 	byte	$0e, $0f, $11, $12, $14, $17, $1c, $21, $26, $29, $2a, $2a, $28, $25, $23, $21
12184     1E 1B 17 13 
12188     0E 09 02 FC 
1218c     F6 F1 EB E6 
12190     E1 DD D9 D5 | 	byte	$1e, $1b, $17, $13, $0e, $09, $02, $fc, $f6, $f1, $eb, $e6, $e1, $dd, $d9, $d5
12194     D1 CE CD CD 
12198     CD CE D0 D2 
1219c     D5 D9 DE E5 
121a0     EB F0 F5 FB | 	byte	$d1, $ce, $cd, $cd, $cd, $ce, $d0, $d2, $d5, $d9, $de, $e5, $eb, $f0, $f5, $fb
121a4     00 05 09 0D 
121a8     12 15 17 19 
121ac     1C 1D 1C 1A 
121b0     18 16 14 12 | 	byte	$00, $05, $09, $0d, $12, $15, $17, $19, $1c, $1d, $1c, $1a, $18, $16, $14, $12
121b4     11 12 14 15 
121b8     16 18 19 1B 
121bc     1C 1C 1D 1E 
121c0     1C 1A 17 13 | 	byte	$11, $12, $14, $15, $16, $18, $19, $1b, $1c, $1c, $1d, $1e, $1c, $1a, $17, $13
121c4     0E 0A 06 01 
121c8     FE FB F7 F3 
121cc     F1 EF EE EE 
121d0     F0 F3 F6 FB | 	byte	$0e, $0a, $06, $01, $fe, $fb, $f7, $f3, $f1, $ef, $ee, $ee, $f0, $f3, $f6, $fb
121d4     FF 05 0D 14 
121d8     1A 20 26 29 
121dc     2B 2C 2C 2A 
121e0     29 28 26 24 | 	byte	$ff, $05, $0d, $14, $1a, $20, $26, $29, $2b, $2c, $2c, $2a, $29, $28, $26, $24
121e4     22 1F 1B 17 
121e8     12 0D 08 03 
121ec     00 FE FC FA 
121f0     F8 F6 F4 F2 | 	byte	$22, $1f, $1b, $17, $12, $0d, $08, $03, $00, $fe, $fc, $fa, $f8, $f6, $f4, $f2
121f4     F0 EF EF F0 
121f8     F1 F2 F3 F3 
121fc     F2 F1 F1 F0 
12200     F0 EF EE EE | 	byte	$f0, $ef, $ef, $f0, $f1, $f2, $f3, $f3, $f2, $f1, $f1, $f0, $f0, $ef, $ee, $ee
12204     ED EC EC EC 
12208     ED EE F0 F2 
1220c     F4 F6 F7 F8 
12210     F8 F7 F7 F6 | 	byte	$ed, $ec, $ec, $ec, $ed, $ee, $f0, $f2, $f4, $f6, $f7, $f8, $f8, $f7, $f7, $f6
12214     F6 F8 FB FD 
12218     FF FE FD FB 
1221c     F8 F4 F0 ED 
12220     EB E9 E9 E9 | 	byte	$f6, $f8, $fb, $fd, $ff, $fe, $fd, $fb, $f8, $f4, $f0, $ed, $eb, $e9, $e9, $e9
12224     EA EA E9 E6 
12228     E4 E4 E4 E4 
1222c     E4 E5 E6 E7 
12230     E8 EA EC EE | 	byte	$ea, $ea, $e9, $e6, $e4, $e4, $e4, $e4, $e4, $e5, $e6, $e7, $e8, $ea, $ec, $ee
12234     F1 F5 FA FF 
12238     03 06 08 09 
1223c     09 09 0A 0E 
12240     12 17 1B 1F | 	byte	$f1, $f5, $fa, $ff, $03, $06, $08, $09, $09, $09, $0a, $0e, $12, $17, $1b, $1f
12244     23 25 27 27 
12248     28 27 26 24 
1224c     22 20 1C 17 
12250     12 0D 08 03 | 	byte	$23, $25, $27, $27, $28, $27, $26, $24, $22, $20, $1c, $17, $12, $0d, $08, $03
12254     FD F8 F3 ED 
12258     E8 E2 DE DA 
1225c     D6 D2 D0 CF 
12260     CE CE CE D0 | 	byte	$fd, $f8, $f3, $ed, $e8, $e2, $de, $da, $d6, $d2, $d0, $cf, $ce, $ce, $ce, $d0
12264     D3 D7 DA DF 
12268     E4 EA EF F4 
1226c     F9 FE 03 08 
12270     0D 11 16 19 | 	byte	$d3, $d7, $da, $df, $e4, $ea, $ef, $f4, $f9, $fe, $03, $08, $0d, $11, $16, $19
12274     1B 1B 1A 19 
12278     17 15 14 14 
1227c     13 13 13 13 
12280     14 16 18 1B | 	byte	$1b, $1b, $1a, $19, $17, $15, $14, $14, $13, $13, $13, $13, $14, $16, $18, $1b
12284     1D 1F 1F 1E 
12288     1C 1B 18 15 
1228c     12 0F 0B 06 
12290     02 FD F9 F6 | 	byte	$1d, $1f, $1f, $1e, $1c, $1b, $18, $15, $12, $0f, $0b, $06, $02, $fd, $f9, $f6
12294     F3 F0 EF EE 
12298     EE EF F2 F5 
1229c     FA 00 07 0F 
122a0     16 1C 20 24 | 	byte	$f3, $f0, $ef, $ee, $ee, $ef, $f2, $f5, $fa, $00, $07, $0f, $16, $1c, $20, $24
122a4     27 28 29 2A 
122a8     2B 2B 2A 28 
122ac     26 23 1E 19 
122b0     14 10 0D 0A | 	byte	$27, $28, $29, $2a, $2b, $2b, $2a, $28, $26, $23, $1e, $19, $14, $10, $0d, $0a
122b4     06 04 00 FD 
122b8     FA F7 F4 F3 
122bc     F2 F2 F2 F2 
122c0     F2 F2 F2 F2 | 	byte	$06, $04, $00, $fd, $fa, $f7, $f4, $f3, $f2, $f2, $f2, $f2, $f2, $f2, $f2, $f2
122c4     F2 F2 F2 F1 
122c8     F0 F0 EF EE 
122cc     EC EB EB EB 
122d0     EB ED F0 F3 | 	byte	$f2, $f2, $f2, $f1, $f0, $f0, $ef, $ee, $ec, $eb, $eb, $eb, $eb, $ed, $f0, $f3
122d4     F5 F6 F5 F5 
122d8     F5 F4 F4 F5 
122dc     F7 FA FC FF 
122e0     00 00 FD FA | 	byte	$f5, $f6, $f5, $f5, $f5, $f4, $f4, $f5, $f7, $fa, $fc, $ff, $00, $00, $fd, $fa
122e4     F6 F4 F2 F0 
122e8     EE EE ED EC 
122ec     EA E9 E8 E7 
122f0     E5 E5 E5 E5 | 	byte	$f6, $f4, $f2, $f0, $ee, $ee, $ed, $ec, $ea, $e9, $e8, $e7, $e5, $e5, $e5, $e5
122f4     E6 E6 E5 E5 
122f8     E5 E5 E7 EC 
122fc     F1 F5 F9 FD 
12300     FF 01 02 02 | 	byte	$e6, $e6, $e5, $e5, $e5, $e5, $e7, $ec, $f1, $f5, $f9, $fd, $ff, $01, $02, $02
12304     04 06 09 0C 
12308     10 15 18 1B 
1230c     1E 21 24 26 
12310     28 29 28 27 | 	byte	$04, $06, $09, $0c, $10, $15, $18, $1b, $1e, $21, $24, $26, $28, $29, $28, $27
12314     25 22 1E 1B 
12318     17 12 0D 09 
1231c     04 FE F9 F3 
12320     EE E9 E4 DE | 	byte	$25, $22, $1e, $1b, $17, $12, $0d, $09, $04, $fe, $f9, $f3, $ee, $e9, $e4, $de
12324     DA D7 D4 D2 
12328     D0 CF CF CF 
1232c     D1 D4 D8 DC 
12330     E0 E3 E8 ED | 	byte	$da, $d7, $d4, $d2, $d0, $cf, $cf, $cf, $d1, $d4, $d8, $dc, $e0, $e3, $e8, $ed
12334     F2 F8 FE 04 
12338     0A 0F 12 15 
1233c     16 17 18 19 
12340     19 17 15 13 | 	byte	$f2, $f8, $fe, $04, $0a, $0f, $12, $15, $16, $17, $18, $19, $19, $17, $15, $13
12344     11 11 11 12 
12348     14 17 19 1B 
1234c     1C 1E 1E 1E 
12350     1D 1C 1B 19 | 	byte	$11, $11, $11, $12, $14, $17, $19, $1b, $1c, $1e, $1e, $1e, $1d, $1c, $1b, $19
12354     16 12 0E 0A 
12358     06 01 FD FA 
1235c     F6 F3 F0 ED 
12360     ED EC EE F1 | 	byte	$16, $12, $0e, $0a, $06, $01, $fd, $fa, $f6, $f3, $f0, $ed, $ed, $ec, $ee, $f1
12364     F6 FC 03 0A 
12368     10 15 1A 1E 
1236c     21 24 28 2B 
12370     2D 2D 2C 2A | 	byte	$f6, $fc, $03, $0a, $10, $15, $1a, $1e, $21, $24, $28, $2b, $2d, $2d, $2c, $2a
12374     27 24 20 1C 
12378     1A 17 13 0F 
1237c     0B 07 03 FF 
12380     FC FA F7 F5 | 	byte	$27, $24, $20, $1c, $1a, $17, $13, $0f, $0b, $07, $03, $ff, $fc, $fa, $f7, $f5
12384     F4 F4 F4 F3 
12388     F2 F2 F2 F2 
1238c     F2 F2 F3 F3 
12390     F2 F1 EE EC | 	byte	$f4, $f4, $f4, $f3, $f2, $f2, $f2, $f2, $f2, $f2, $f3, $f3, $f2, $f1, $ee, $ec
12394     EB EA EA EB 
12398     ED EF F1 F3 
1239c     F4 F3 F2 F1 
123a0     F1 F1 F3 F6 | 	byte	$eb, $ea, $ea, $eb, $ed, $ef, $f1, $f3, $f4, $f3, $f2, $f1, $f1, $f1, $f3, $f6
123a4     F8 FB FD FE 
123a8     FF FE FD FA 
123ac     F7 F5 F4 F3 
123b0     F2 F0 EF ED | 	byte	$f8, $fb, $fd, $fe, $ff, $fe, $fd, $fa, $f7, $f5, $f4, $f3, $f2, $f0, $ef, $ed
123b4     EB E9 E9 E9 
123b8     E9 E8 E7 E6 
123bc     E5 E3 E1 E1 
123c0     E2 E4 E8 EC | 	byte	$eb, $e9, $e9, $e9, $e9, $e8, $e7, $e6, $e5, $e3, $e1, $e1, $e2, $e4, $e8, $ec
123c4     F0 F4 F7 F8 
123c8     F9 FB FD FF 
123cc     01 04 07 0A 
123d0     0D 0F 12 16 | 	byte	$f0, $f4, $f7, $f8, $f9, $fb, $fd, $ff, $01, $04, $07, $0a, $0d, $0f, $12, $16
123d4     1A 1E 21 24 
123d8     27 28 29 28 
123dc     27 25 21 1E 
123e0     1A 17 13 0E | 	byte	$1a, $1e, $21, $24, $27, $28, $29, $28, $27, $25, $21, $1e, $1a, $17, $13, $0e
123e4     0A 05 FF FA 
123e8     F4 EF EA E5 
123ec     E0 DC D8 D5 
123f0     D2 D1 D1 D2 | 	byte	$0a, $05, $ff, $fa, $f4, $ef, $ea, $e5, $e0, $dc, $d8, $d5, $d2, $d1, $d1, $d2
123f4     D3 D4 D6 D7 
123f8     D9 DD E1 E7 
123fc     EE F4 F9 FE 
12400     03 08 0C 10 | 	byte	$d3, $d4, $d6, $d7, $d9, $dd, $e1, $e7, $ee, $f4, $f9, $fe, $03, $08, $0c, $10
12404     14 17 18 18 
12408     17 15 13 12 
1240c     10 10 10 12 
12410     14 16 18 19 | 	byte	$14, $17, $18, $18, $17, $15, $13, $12, $10, $10, $10, $12, $14, $16, $18, $19
12414     1B 1C 1D 1E 
12418     1F 1E 1D 1A 
1241c     18 15 12 0E 
12420     0A 07 03 FE | 	byte	$1b, $1c, $1d, $1e, $1f, $1e, $1d, $1a, $18, $15, $12, $0e, $0a, $07, $03, $fe
12424     FA F5 F1 ED 
12428     EB EB ED F0 
1242c     F4 F9 FE 03 
12430     08 0C 11 17 | 	byte	$fa, $f5, $f1, $ed, $eb, $eb, $ed, $f0, $f4, $f9, $fe, $03, $08, $0c, $11, $17
12434     1E 23 27 2A 
12438     2C 2C 2B 2A 
1243c     28 26 23 21 
12440     1E 1B 18 14 | 	byte	$1e, $23, $27, $2a, $2c, $2c, $2b, $2a, $28, $26, $23, $21, $1e, $1b, $18, $14
12444     0F 0B 06 02 
12448     FF FD FB F9 
1244c     F7 F5 F4 F3 
12450     F3 F3 F3 F3 | 	byte	$0f, $0b, $06, $02, $ff, $fd, $fb, $f9, $f7, $f5, $f4, $f3, $f3, $f3, $f3, $f3
12454     F4 F5 F5 F4 
12458     F3 F0 ED EB 
1245c     EA EA EB ED 
12460     EE F0 F1 F1 | 	byte	$f4, $f5, $f5, $f4, $f3, $f0, $ed, $eb, $ea, $ea, $eb, $ed, $ee, $f0, $f1, $f1
12464     F0 F0 EF EF 
12468     EF F0 F3 F6 
1246c     F9 FB FC FD 
12470     FD FC FC FB | 	byte	$f0, $f0, $ef, $ef, $ef, $f0, $f3, $f6, $f9, $fb, $fc, $fd, $fd, $fc, $fc, $fb
12474     FA F9 F7 F5 
12478     F3 F1 EF ED 
1247c     ED ED ED EC 
12480     EC EA E8 E5 | 	byte	$fa, $f9, $f7, $f5, $f3, $f1, $ef, $ed, $ed, $ed, $ed, $ec, $ec, $ea, $e8, $e5
12484     E2 E1 E1 E1 
12488     E3 E6 E9 EC 
1248c     EE EF F2 F4 
12490     F6 F8 FA FD | 	byte	$e2, $e1, $e1, $e1, $e3, $e6, $e9, $ec, $ee, $ef, $f2, $f4, $f6, $f8, $fa, $fd
12494     FF 01 03 06 
12498     08 0B 0E 11 
1249c     16 1A 1E 22 
124a0     25 27 28 28 | 	byte	$ff, $01, $03, $06, $08, $0b, $0e, $11, $16, $1a, $1e, $22, $25, $27, $28, $28
124a4     27 26 24 21 
124a8     1E 1B 17 13 
124ac     0F 0A 05 01 
124b0     FC F6 F0 EA | 	byte	$27, $26, $24, $21, $1e, $1b, $17, $13, $0f, $0a, $05, $01, $fc, $f6, $f0, $ea
124b4     E4 E0 DC D9 
124b8     D7 D6 D5 D3 
124bc     D2 D2 D3 D4 
124c0     D7 DA DF E3 | 	byte	$e4, $e0, $dc, $d9, $d7, $d6, $d5, $d3, $d2, $d2, $d3, $d4, $d7, $da, $df, $e3
124c4     E8 EC F2 F8 
124c8     FD 02 08 0E 
124cc     12 14 15 15 
124d0     14 13 12 11 | 	byte	$e8, $ec, $f2, $f8, $fd, $02, $08, $0e, $12, $14, $15, $15, $14, $13, $12, $11
124d4     11 11 11 11 
124d8     12 14 16 18 
124dc     1A 1C 1E 1F 
124e0     1F 1E 1D 1B | 	byte	$11, $11, $11, $11, $12, $14, $16, $18, $1a, $1c, $1e, $1f, $1f, $1e, $1d, $1b
124e4     1A 17 16 13 
124e8     10 0C 07 02 
124ec     FC F6 F1 EF 
124f0     ED ED EE EF | 	byte	$1a, $17, $16, $13, $10, $0c, $07, $02, $fc, $f6, $f1, $ef, $ed, $ed, $ee, $ef
124f4     F1 F4 F7 FB 
124f8     01 06 0C 12 
124fc     19 1F 24 27 
12500     29 2A 2A 2A | 	byte	$f1, $f4, $f7, $fb, $01, $06, $0c, $12, $19, $1f, $24, $27, $29, $2a, $2a, $2a
12504     29 28 27 25 
12508     22 1F 1B 17 
1250c     13 0F 0B 07 
12510     04 01 FF FC | 	byte	$29, $28, $27, $25, $22, $1f, $1b, $17, $13, $0f, $0b, $07, $04, $01, $ff, $fc
12514     FA F7 F4 F3 
12518     F3 F4 F5 F6 
1251c     F6 F6 F5 F3 
12520     F0 EE ED EC | 	byte	$fa, $f7, $f4, $f3, $f3, $f4, $f5, $f6, $f6, $f6, $f5, $f3, $f0, $ee, $ed, $ec
12524     EC EC ED EF 
12528     F0 F0 EF EE 
1252c     ED ED ED EE 
12530     F0 F1 F3 F5 | 	byte	$ec, $ec, $ed, $ef, $f0, $f0, $ef, $ee, $ed, $ed, $ed, $ee, $f0, $f1, $f3, $f5
12534     F7 F8 F9 FA 
12538     FC FD FE FD 
1253c     FC FB F8 F5 
12540     F3 F1 F0 F0 | 	byte	$f7, $f8, $f9, $fa, $fc, $fd, $fe, $fd, $fc, $fb, $f8, $f5, $f3, $f1, $f0, $f0
12544     F1 F1 F0 EF 
12548     EC EA E7 E5 
1254c     E3 E2 E2 E2 
12550     E4 E5 E8 E9 | 	byte	$f1, $f1, $f0, $ef, $ec, $ea, $e7, $e5, $e3, $e2, $e2, $e2, $e4, $e5, $e8, $e9
12554     EB ED EF F0 
12558     F3 F5 F8 FA 
1255c     FC FE 00 02 
12560     04 06 09 0E | 	byte	$eb, $ed, $ef, $f0, $f3, $f5, $f8, $fa, $fc, $fe, $00, $02, $04, $06, $09, $0e
12564     12 16 1B 1F 
12568     22 25 27 28 
1256c     29 27 26 23 
12570     20 1E 1B 18 | 	byte	$12, $16, $1b, $1f, $22, $25, $27, $28, $29, $27, $26, $23, $20, $1e, $1b, $18
12574     15 11 0C 06 
12578     00 FA F5 EF 
1257c     EA E6 E3 DF 
12580     DC D9 D7 D5 | 	byte	$15, $11, $0c, $06, $00, $fa, $f5, $ef, $ea, $e6, $e3, $df, $dc, $d9, $d7, $d5
12584     D3 D3 D3 D5 
12588     D6 D8 DA DD 
1258c     E1 E6 EC F2 
12590     F9 FF 04 09 | 	byte	$d3, $d3, $d3, $d5, $d6, $d8, $da, $dd, $e1, $e6, $ec, $f2, $f9, $ff, $04, $09
12594     0D 10 11 12 
12598     12 13 12 11 
1259c     10 10 10 10 
125a0     10 12 14 17 | 	byte	$0d, $10, $11, $12, $12, $13, $12, $11, $10, $10, $10, $10, $10, $12, $14, $17
125a4     1A 1C 1D 1E 
125a8     1D 1D 1D 1D 
125ac     1D 1C 1B 17 
125b0     14 0F 09 04 | 	byte	$1a, $1c, $1d, $1e, $1d, $1d, $1d, $1d, $1d, $1c, $1b, $17, $14, $0f, $09, $04
125b4     FF FA F6 F2 
125b8     F0 EF EF EE 
125bc     EE EF F2 F5 
125c0     FA 01 07 0E | 	byte	$ff, $fa, $f6, $f2, $f0, $ef, $ef, $ee, $ee, $ef, $f2, $f5, $fa, $01, $07, $0e
125c4     14 19 1E 22 
125c8     25 27 29 2A 
125cc     2B 2A 29 27 
125d0     25 21 1D 1A | 	byte	$14, $19, $1e, $22, $25, $27, $29, $2a, $2b, $2a, $29, $27, $25, $21, $1d, $1a
125d4     17 14 11 0D 
125d8     09 05 01 FD 
125dc     FA F8 F6 F6 
125e0     F6 F7 F8 F8 | 	byte	$17, $14, $11, $0d, $09, $05, $01, $fd, $fa, $f8, $f6, $f6, $f6, $f7, $f8, $f8
125e4     F7 F6 F4 F1 
125e8     EF EE EE EE 
125ec     EE EF EF F0 
125f0     EF ED EC EC | 	byte	$f7, $f6, $f4, $f1, $ef, $ee, $ee, $ee, $ee, $ef, $ef, $f0, $ef, $ed, $ec, $ec
125f4     EC EC ED EE 
125f8     EF F0 F2 F2 
125fc     F3 F5 F8 FB 
12600     FD FE FF FD | 	byte	$ec, $ec, $ed, $ee, $ef, $f0, $f2, $f2, $f3, $f5, $f8, $fb, $fd, $fe, $ff, $fd
12604     FC F9 F7 F5 
12608     F4 F4 F4 F4 
1260c     F4 F3 F2 EF 
12610     ED EA E8 E5 | 	byte	$fc, $f9, $f7, $f5, $f4, $f4, $f4, $f4, $f4, $f3, $f2, $ef, $ed, $ea, $e8, $e5
12614     E4 E3 E3 E4 
12618     E4 E5 E6 E8 
1261c     E9 EA EC EF 
12620     F1 F4 F6 F7 | 	byte	$e4, $e3, $e3, $e4, $e4, $e5, $e6, $e8, $e9, $ea, $ec, $ef, $f1, $f4, $f6, $f7
12624     F9 FA FC FE 
12628     01 03 06 09 
1262c     0D 11 16 1B 
12630     20 24 26 27 | 	byte	$f9, $fa, $fc, $fe, $01, $03, $06, $09, $0d, $11, $16, $1b, $20, $24, $26, $27
12634     27 26 25 24 
12638     23 22 20 1D 
1263c     19 15 10 0B 
12640     05 00 FB F6 | 	byte	$27, $26, $25, $24, $23, $22, $20, $1d, $19, $15, $10, $0b, $05, $00, $fb, $f6
12644     F1 EC E8 E3 
12648     E0 DC DA D8 
1264c     D7 D6 D5 D5 
12650     D5 D5 D6 D8 | 	byte	$f1, $ec, $e8, $e3, $e0, $dc, $da, $d8, $d7, $d6, $d5, $d5, $d5, $d5, $d6, $d8
12654     DC E2 E8 EE 
12658     F4 FA FF 04 
1265c     07 0A 0D 10 
12660     11 12 11 10 | 	byte	$dc, $e2, $e8, $ee, $f4, $fa, $ff, $04, $07, $0a, $0d, $10, $11, $12, $11, $10
12664     0E 0D 0D 0E 
12668     10 13 14 16 
1266c     17 19 1A 1A 
12670     1C 1D 1E 1F | 	byte	$0e, $0d, $0d, $0e, $10, $13, $14, $16, $17, $19, $1a, $1a, $1c, $1d, $1e, $1f
12674     1F 1F 1D 1A 
12678     16 11 0D 08 
1267c     03 FF FB F7 
12680     F3 F0 EE ED | 	byte	$1f, $1f, $1d, $1a, $16, $11, $0d, $08, $03, $ff, $fb, $f7, $f3, $f0, $ee, $ed
12684     ED ED EF F2 
12688     F7 FC 02 08 
1268c     0D 12 17 1C 
12690     21 25 28 2A | 	byte	$ed, $ed, $ef, $f2, $f7, $fc, $02, $08, $0d, $12, $17, $1c, $21, $25, $28, $2a
12694     2B 2A 29 27 
12698     25 23 21 1E 
1269c     1C 19 16 12 
126a0     0D 08 03 FF | 	byte	$2b, $2a, $29, $27, $25, $23, $21, $1e, $1c, $19, $16, $12, $0d, $08, $03, $ff
126a4     FC FA F9 F9 
126a8     FA FA FA F9 
126ac     F7 F5 F3 F1 
126b0     F0 F0 F0 F0 | 	byte	$fc, $fa, $f9, $f9, $fa, $fa, $fa, $f9, $f7, $f5, $f3, $f1, $f0, $f0, $f0, $f0
126b4     F1 F1 F0 EE 
126b8     ED EC EC ED 
126bc     ED ED ED ED 
126c0     ED ED EE F0 | 	byte	$f1, $f1, $f0, $ee, $ed, $ec, $ec, $ed, $ed, $ed, $ed, $ed, $ed, $ed, $ee, $f0
126c4     F3 F5 F8 FA 
126c8     FC FE FD FB 
126cc     FA F9 F7 F6 
126d0     F6 F6 F7 F6 | 	byte	$f3, $f5, $f8, $fa, $fc, $fe, $fd, $fb, $fa, $f9, $f7, $f6, $f6, $f6, $f7, $f6
126d4     F5 F4 F3 F0 
126d8     EE EB E9 E7 
126dc     E6 E5 E5 E4 
126e0     E4 E4 E4 E6 | 	byte	$f5, $f4, $f3, $f0, $ee, $eb, $e9, $e7, $e6, $e5, $e5, $e4, $e4, $e4, $e4, $e6
126e4     E8 EA EB ED 
126e8     EF F1 F3 F5 
126ec     F7 F8 F9 FA 
126f0     FC FE 01 04 | 	byte	$e8, $ea, $eb, $ed, $ef, $f1, $f3, $f5, $f7, $f8, $f9, $fa, $fc, $fe, $01, $04
126f4     09 0E 13 18 
126f8     1C 1F 21 23 
126fc     24 25 26 27 
12700     26 25 22 20 | 	byte	$09, $0e, $13, $18, $1c, $1f, $21, $23, $24, $25, $26, $27, $26, $25, $22, $20
12704     1C 18 14 10 
12708     0C 07 02 FC 
1270c     F7 F1 ED E8 
12710     E5 E2 E0 DD | 	byte	$1c, $18, $14, $10, $0c, $07, $02, $fc, $f7, $f1, $ed, $e8, $e5, $e2, $e0, $dd
12714     DB D9 D7 D5 
12718     D3 D3 D3 D6 
1271c     DA DF E4 E9 
12720     EE F3 F8 FE | 	byte	$db, $d9, $d7, $d5, $d3, $d3, $d3, $d6, $da, $df, $e4, $e9, $ee, $f3, $f8, $fe
12724     04 08 0B 0D 
12728     0E 0E 0D 0D 
1272c     0D 0D 0D 0E 
12730     10 11 12 14 | 	byte	$04, $08, $0b, $0d, $0e, $0e, $0d, $0d, $0d, $0d, $0d, $0e, $10, $11, $12, $14
12734     14 15 17 19 
12738     1C 1E 20 21 
1273c     21 20 1E 1C 
12740     19 15 11 0D | 	byte	$14, $15, $17, $19, $1c, $1e, $20, $21, $21, $20, $1e, $1c, $19, $15, $11, $0d
12744     08 04 00 FB 
12748     F6 F2 EF EC 
1274c     EC ED EF F1 
12750     F4 F7 FB 00 | 	byte	$08, $04, $00, $fb, $f6, $f2, $ef, $ec, $ec, $ed, $ef, $f1, $f4, $f7, $fb, $00
12754     05 0B 12 18 
12758     1E 22 26 28 
1275c     29 29 28 27 
12760     27 26 24 23 | 	byte	$05, $0b, $12, $18, $1e, $22, $26, $28, $29, $29, $28, $27, $27, $26, $24, $23
12764     21 1E 1A 15 
12768     10 0B 06 02 
1276c     00 FE FE FE 
12770     FD FC FB F9 | 	byte	$21, $1e, $1a, $15, $10, $0b, $06, $02, $00, $fe, $fe, $fe, $fd, $fc, $fb, $f9
12774     F7 F5 F4 F3 
12778     F3 F2 F2 F1 
1277c     F0 EF EF EF 
12780     EE EE EE ED | 	byte	$f7, $f5, $f4, $f3, $f3, $f2, $f2, $f1, $f0, $ef, $ef, $ef, $ee, $ee, $ee, $ed
12784     ED EC EB EA 
12788     EA EB ED EF 
1278c     F2 F5 F8 F9 
12790     FB FB FB FA | 	byte	$ed, $ec, $eb, $ea, $ea, $eb, $ed, $ef, $f2, $f5, $f8, $f9, $fb, $fb, $fb, $fa
12794     F9 F8 F8 F8 
12798     F9 F9 F9 F8 
1279c     F6 F5 F3 F2 
127a0     F0 EE EC EA | 	byte	$f9, $f8, $f8, $f8, $f9, $f9, $f9, $f8, $f6, $f5, $f3, $f2, $f0, $ee, $ec, $ea
127a4     E8 E6 E5 E5 
127a8     E5 E5 E5 E6 
127ac     E6 E8 EA EB 
127b0     ED F0 F2 F3 | 	byte	$e8, $e6, $e5, $e5, $e5, $e5, $e5, $e6, $e6, $e8, $ea, $eb, $ed, $f0, $f2, $f3
127b4     F4 F4 F5 F6 
127b8     F8 FA FE 02 
127bc     06 0A 0E 12 
127c0     16 19 1D 21 | 	byte	$f4, $f4, $f5, $f6, $f8, $fa, $fe, $02, $06, $0a, $0e, $12, $16, $19, $1d, $21
127c4     24 26 27 27 
127c8     26 25 24 22 
127cc     20 1D 1A 16 
127d0     11 0D 07 01 | 	byte	$24, $26, $27, $27, $26, $25, $24, $22, $20, $1d, $1a, $16, $11, $0d, $07, $01
127d4     FB F6 F1 EE 
127d8     EB E9 E6 E2 
127dc     DE DA D8 D6 
127e0     D5 D4 D5 D5 | 	byte	$fb, $f6, $f1, $ee, $eb, $e9, $e6, $e2, $de, $da, $d8, $d6, $d5, $d4, $d5, $d5
127e4     D7 DA DE E3 
127e8     E9 EF F5 FA 
127ec     FF 03 07 08 
127f0     09 0A 0B 0C | 	byte	$d7, $da, $de, $e3, $e9, $ef, $f5, $fa, $ff, $03, $07, $08, $09, $0a, $0b, $0c
127f4     0C 0D 0E 0F 
127f8     0F 0F 0F 10 
127fc     12 14 16 18 
12800     1B 1E 1F 21 | 	byte	$0c, $0d, $0e, $0f, $0f, $0f, $0f, $10, $12, $14, $16, $18, $1b, $1e, $1f, $21
12804     21 20 1F 1D 
12808     1B 19 16 12 
1280c     0E 08 03 FE 
12810     F9 F4 F2 F0 | 	byte	$21, $20, $1f, $1d, $1b, $19, $16, $12, $0e, $08, $03, $fe, $f9, $f4, $f2, $f0
12814     EE EE EE EE 
12818     F0 F2 F5 F9 
1281c     FF 06 0D 13 
12820     1A 1E 22 23 | 	byte	$ee, $ee, $ee, $ee, $f0, $f2, $f5, $f9, $ff, $06, $0d, $13, $1a, $1e, $22, $23
12824     25 26 27 28 
12828     28 29 29 27 
1282c     25 21 1D 17 
12830     12 0D 0A 07 | 	byte	$25, $26, $27, $28, $28, $29, $29, $27, $25, $21, $1d, $17, $12, $0d, $0a, $07
12834     05 03 02 00 
12838     FE FD FB FA 
1283c     F8 F7 F6 F5 
12840     F4 F3 F1 F1 | 	byte	$05, $03, $02, $00, $fe, $fd, $fb, $fa, $f8, $f7, $f6, $f5, $f4, $f3, $f1, $f1
12844     F1 F1 F1 F1 
12848     F0 F0 EE ED 
1284c     EB EA E9 E8 
12850     E8 EA EC EF | 	byte	$f1, $f1, $f1, $f1, $f0, $f0, $ee, $ed, $eb, $ea, $e9, $e8, $e8, $ea, $ec, $ef
12854     F2 F5 F6 F8 
12858     F8 F8 F8 F9 
1285c     FA FA FA FA 
12860     FA FA F9 F8 | 	byte	$f2, $f5, $f6, $f8, $f8, $f8, $f8, $f9, $fa, $fa, $fa, $fa, $fa, $fa, $f9, $f8
12864     F8 F7 F6 F4 
12868     F2 F0 EE EB 
1286c     E9 E8 E7 E6 
12870     E4 E4 E4 E4 | 	byte	$f8, $f7, $f6, $f4, $f2, $f0, $ee, $eb, $e9, $e8, $e7, $e6, $e4, $e4, $e4, $e4
12874     E5 E7 EA EC 
12878     EE EF EF F0 
1287c     F0 F0 F2 F4 
12880     F6 F9 FC FE | 	byte	$e5, $e7, $ea, $ec, $ee, $ef, $ef, $f0, $f0, $f0, $f2, $f4, $f6, $f9, $fc, $fe
12884     01 04 08 0D 
12888     11 16 1A 1E 
1288c     22 24 26 26 
12890     26 25 25 25 | 	byte	$01, $04, $08, $0d, $11, $16, $1a, $1e, $22, $24, $26, $26, $26, $25, $25, $25
12894     24 22 1F 1A 
12898     15 10 0A 06 
1289c     01 FD F8 F4 
128a0     F1 ED E9 E6 | 	byte	$24, $22, $1f, $1a, $15, $10, $0a, $06, $01, $fd, $f8, $f4, $f1, $ed, $e9, $e6
128a4     E2 DF DC D9 
128a8     D7 D5 D4 D4 
128ac     D4 D6 DA E0 
128b0     E6 EB F1 F6 | 	byte	$e2, $df, $dc, $d9, $d7, $d5, $d4, $d4, $d4, $d6, $da, $e0, $e6, $eb, $f1, $f6
128b4     FA FD 00 03 
128b8     06 07 09 0A 
128bc     0C 0D 0D 0D 
128c0     0D 0D 0D 0D | 	byte	$fa, $fd, $00, $03, $06, $07, $09, $0a, $0c, $0d, $0d, $0d, $0d, $0d, $0d, $0d
128c4     0F 12 15 18 
128c8     1A 1C 1D 1F 
128cc     1F 20 21 20 
128d0     1F 1D 1A 16 | 	byte	$0f, $12, $15, $18, $1a, $1c, $1d, $1f, $1f, $20, $21, $20, $1f, $1d, $1a, $16
128d4     11 0C 07 01 
128d8     FD F9 F6 F3 
128dc     F1 EF ED EC 
128e0     EC EE F1 F5 | 	byte	$11, $0c, $07, $01, $fd, $f9, $f6, $f3, $f1, $ef, $ed, $ec, $ec, $ee, $f1, $f5
128e4     FB 01 08 0F 
128e8     14 18 1B 1E 
128ec     20 23 26 29 
128f0     2A 2B 2B 29 | 	byte	$fb, $01, $08, $0f, $14, $18, $1b, $1e, $20, $23, $26, $29, $2a, $2b, $2b, $29
128f4     26 22 1E 1A 
128f8     16 12 0F 0C 
128fc     09 07 04 02 
12900     00 FF FE FC | 	byte	$26, $22, $1e, $1a, $16, $12, $0f, $0c, $09, $07, $04, $02, $00, $ff, $fe, $fc
12904     FB FA F8 F6 
12908     F4 F3 F3 F2 
1290c     F2 F2 F2 F3 
12910     F2 F1 EF ED | 	byte	$fb, $fa, $f8, $f6, $f4, $f3, $f3, $f2, $f2, $f2, $f2, $f3, $f2, $f1, $ef, $ed
12914     EA E8 E7 E8 
12918     E9 EB ED EF 
1291c     F1 F2 F3 F5 
12920     F6 F7 F8 F8 | 	byte	$ea, $e8, $e7, $e8, $e9, $eb, $ed, $ef, $f1, $f2, $f3, $f5, $f6, $f7, $f8, $f8
12924     F9 F9 F9 FA 
12928     FA FA FA FA 
1292c     F9 F7 F6 F5 
12930     F3 F2 F0 EF | 	byte	$f9, $f9, $f9, $fa, $fa, $fa, $fa, $fa, $f9, $f7, $f6, $f5, $f3, $f2, $f0, $ef
12934     ED EA E8 E6 
12938     E4 E3 E4 E5 
1293c     E7 E9 EA EB 
12940     EC EC ED ED | 	byte	$ed, $ea, $e8, $e6, $e4, $e3, $e4, $e5, $e7, $e9, $ea, $eb, $ec, $ec, $ed, $ed
12944     EE EF F0 F2 
12948     F4 F6 F8 FA 
1294c     FC FF 03 09 
12950     0E 13 17 1B | 	byte	$ee, $ef, $f0, $f2, $f4, $f6, $f8, $fa, $fc, $ff, $03, $09, $0e, $13, $17, $1b
12954     1D 1F 21 24 
12958     26 27 28 27 
1295c     26 24 21 1D 
12960     18 14 10 0B | 	byte	$1d, $1f, $21, $24, $26, $27, $28, $27, $26, $24, $21, $1d, $18, $14, $10, $0b
12964     07 03 FE FA 
12968     F5 F1 EE EB 
1296c     E8 E4 E0 DD 
12970     D9 D6 D4 D4 | 	byte	$07, $03, $fe, $fa, $f5, $f1, $ee, $eb, $e8, $e4, $e0, $dd, $d9, $d6, $d4, $d4
12974     D4 D6 D9 DD 
12978     E2 E8 ED F1 
1297c     F4 F8 FB FE 
12980     02 05 08 0A | 	byte	$d4, $d6, $d9, $dd, $e2, $e8, $ed, $f1, $f4, $f8, $fb, $fe, $02, $05, $08, $0a
12984     0B 0B 0A 0A 
12988     0A 0A 0B 0D 
1298c     0E 11 13 15 
12990     17 19 1B 1D | 	byte	$0b, $0b, $0a, $0a, $0a, $0a, $0b, $0d, $0e, $11, $13, $15, $17, $19, $1b, $1d
12994     1F 21 22 22 
12998     21 1F 1C 18 
1299c     14 10 0B 07 
129a0     02 FE FA F6 | 	byte	$1f, $21, $22, $22, $21, $1f, $1c, $18, $14, $10, $0b, $07, $02, $fe, $fa, $f6
129a4     F3 EF ED EB 
129a8     EA EB EF F4 
129ac     F8 FD 03 08 
129b0     0C 10 14 18 | 	byte	$f3, $ef, $ed, $eb, $ea, $eb, $ef, $f4, $f8, $fd, $03, $08, $0c, $10, $14, $18
129b4     1D 21 25 28 
129b8     2A 2B 2A 28 
129bc     27 24 21 1E 
129c0     1A 17 13 0F | 	byte	$1d, $21, $25, $28, $2a, $2b, $2a, $28, $27, $24, $21, $1e, $1a, $17, $13, $0f
129c4     0C 09 07 05 
129c8     03 02 01 00 
129cc     FE FC F9 F7 
129d0     F5 F3 F3 F3 | 	byte	$0c, $09, $07, $05, $03, $02, $01, $00, $fe, $fc, $f9, $f7, $f5, $f3, $f3, $f3
129d4     F4 F5 F5 F5 
129d8     F3 F1 EE EC 
129dc     EA E9 E8 E8 
129e0     E9 EA EB ED | 	byte	$f4, $f5, $f5, $f5, $f3, $f1, $ee, $ec, $ea, $e9, $e8, $e8, $e9, $ea, $eb, $ed
129e4     EF F1 F2 F3 
129e8     F4 F5 F6 F6 
129ec     F7 F8 F9 FA 
129f0     FB FB FA F9 | 	byte	$ef, $f1, $f2, $f3, $f4, $f5, $f6, $f6, $f7, $f8, $f9, $fa, $fb, $fb, $fa, $f9
129f4     F9 F8 F8 F8 
129f8     F7 F6 F3 F0 
129fc     ED EB E9 E6 
12a00     E5 E5 E6 E6 | 	byte	$f9, $f8, $f8, $f8, $f7, $f6, $f3, $f0, $ed, $eb, $e9, $e6, $e5, $e5, $e6, $e6
12a04     E8 E9 EA EA 
12a08     EA EA EA EC 
12a0c     EE EF F0 F0 
12a10     F1 F1 F3 F5 | 	byte	$e8, $e9, $ea, $ea, $ea, $ea, $ea, $ec, $ee, $ef, $f0, $f0, $f1, $f1, $f3, $f5
12a14     F9 FD 01 05 
12a18     09 0D 11 14 
12a1c     17 1B 1F 22 
12a20     26 27 29 28 | 	byte	$f9, $fd, $01, $05, $09, $0d, $11, $14, $17, $1b, $1f, $22, $26, $27, $29, $28
12a24     27 25 23 20 
12a28     1D 19 15 10 
12a2c     0C 07 03 FF 
12a30     FB F8 F4 F0 | 	byte	$27, $25, $23, $20, $1d, $19, $15, $10, $0c, $07, $03, $ff, $fb, $f8, $f4, $f0
12a34     ED E9 E5 E0 
12a38     DC D8 D6 D4 
12a3c     D4 D6 D9 DC 
12a40     DF E3 E7 EB | 	byte	$ed, $e9, $e5, $e0, $dc, $d8, $d6, $d4, $d4, $d6, $d9, $dc, $df, $e3, $e7, $eb
12a44     EF F3 F7 FC 
12a48     FF 02 05 07 
12a4c     08 08 08 08 
12a50     09 09 0A 0B | 	byte	$ef, $f3, $f7, $fc, $ff, $02, $05, $07, $08, $08, $08, $08, $09, $09, $0a, $0b
12a54     0D 0E 0F 11 
12a58     14 17 1A 1C 
12a5c     1F 21 23 23 
12a60     21 20 1E 1B | 	byte	$0d, $0e, $0f, $11, $14, $17, $1a, $1c, $1f, $21, $23, $23, $21, $20, $1e, $1b
12a64     17 14 11 0D 
12a68     08 03 FE F9 
12a6c     F4 F0 ED EB 
12a70     EB EC EF F2 | 	byte	$17, $14, $11, $0d, $08, $03, $fe, $f9, $f4, $f0, $ed, $eb, $eb, $ec, $ef, $f2
12a74     F5 F8 FB FF 
12a78     04 09 0F 15 
12a7c     1A 1E 22 26 
12a80     28 29 2A 29 | 	byte	$f5, $f8, $fb, $ff, $04, $09, $0f, $15, $1a, $1e, $22, $26, $28, $29, $2a, $29
12a84     28 26 24 21 
12a88     1E 1A 16 12 
12a8c     0F 0C 0A 08 
12a90     07 06 04 02 | 	byte	$28, $26, $24, $21, $1e, $1a, $16, $12, $0f, $0c, $0a, $08, $07, $06, $04, $02
12a94     00 FD FA F8 
12a98     F6 F6 F6 F6 
12a9c     F6 F6 F6 F5 
12aa0     F3 F1 EF ED | 	byte	$00, $fd, $fa, $f8, $f6, $f6, $f6, $f6, $f6, $f6, $f6, $f5, $f3, $f1, $ef, $ed
12aa4     EB E9 E8 E8 
12aa8     E8 E9 EB ED 
12aac     EE F0 F0 F0 
12ab0     F1 F2 F4 F6 | 	byte	$eb, $e9, $e8, $e8, $e8, $e9, $eb, $ed, $ee, $f0, $f0, $f0, $f1, $f2, $f4, $f6
12ab4     F7 F9 F9 FA 
12ab8     FA FA FA FA 
12abc     FA FA FA FA 
12ac0     F9 F7 F5 F1 | 	byte	$f7, $f9, $f9, $fa, $fa, $fa, $fa, $fa, $fa, $fa, $fa, $fa, $f9, $f7, $f5, $f1
12ac4     EE EB E9 E9 
12ac8     E8 E8 E7 E7 
12acc     E7 E7 E7 E8 
12ad0     EA EB EC ED | 	byte	$ee, $eb, $e9, $e9, $e8, $e8, $e7, $e7, $e7, $e7, $e7, $e8, $ea, $eb, $ec, $ed
12ad4     ED ED ED ED 
12ad8     ED          | 	byte	$ed[5]
12ad9     EE F1 F4 F7 
12add     FB FE 00 03 
12ae1     06 0A 0F 14 
12ae5     18 1D 21 24 | 	byte	$ee, $f1, $f4, $f7, $fb, $fe, $00, $03, $06, $0a, $0f, $14, $18, $1d, $21, $24
12ae9     25 27 28 28 
12aed     27 25 22 20 
12af1     1C 18 14 10 
12af5     0C 08 04 01 | 	byte	$25, $27, $28, $28, $27, $25, $22, $20, $1c, $18, $14, $10, $0c, $08, $04, $01
12af9     FE FA F6 F2 
12afd     ED E8 E4 DF 
12b01     DB D9 D8 D7 
12b05     D7 D8 DB DD | 	byte	$fe, $fa, $f6, $f2, $ed, $e8, $e4, $df, $db, $d9, $d8, $d7, $d7, $d8, $db, $dd
12b09     DF E2 E7 EB 
12b0d     F0 F4 F8 FC 
12b11     FF 01 02 04 
12b15     05 06 07 08 | 	byte	$df, $e2, $e7, $eb, $f0, $f4, $f8, $fc, $ff, $01, $02, $04, $05, $06, $07, $08
12b19     08 09 0A 0A 
12b1d     0B 0C 0E 11 
12b21     15 18 1C 1F 
12b25     20 21 22 21 | 	byte	$08, $09, $0a, $0a, $0b, $0c, $0e, $11, $15, $18, $1c, $1f, $20, $21, $22, $21
12b29     20 1F 1D 1B 
12b2d     19 16 12 0D 
12b31     07 01 FB F6 
12b35     F3 F0 EF EE | 	byte	$20, $1f, $1d, $1b, $19, $16, $12, $0d, $07, $01, $fb, $f6, $f3, $f0, $ef, $ee
12b39     EE EE EF F1 
12b3d     F3 F6 FA FE 
12b41     04 0A 10 15 
12b45     1A 1E 22 25 | 	byte	$ee, $ee, $ef, $f1, $f3, $f6, $fa, $fe, $04, $0a, $10, $15, $1a, $1e, $22, $25
12b49     27 28 29 2A 
12b4d     29 26 23 20 
12b51     1C 18 15 13 
12b55     11 0F 0D 0B | 	byte	$27, $28, $29, $2a, $29, $26, $23, $20, $1c, $18, $15, $13, $11, $0f, $0d, $0b
12b59     09 07 04 01 
12b5d     FE FC FA F9 
12b61     F8 F8 F8 F8 
12b65     F7 F7 F6 F5 | 	byte	$09, $07, $04, $01, $fe, $fc, $fa, $f9, $f8, $f8, $f8, $f8, $f7, $f7, $f6, $f5
12b69     F3 F0 ED EB 
12b6d     EA E9 E9 EA 
12b71     EA EB EB EC 
12b75     ED EE EF F0 | 	byte	$f3, $f0, $ed, $eb, $ea, $e9, $e9, $ea, $ea, $eb, $eb, $ec, $ed, $ee, $ef, $f0
12b79     F1 F3 F5 F6 
12b7d     F7 F8 F8 F8 
12b81     F8 F9 FB FC 
12b85     FD FC FB F9 | 	byte	$f1, $f3, $f5, $f6, $f7, $f8, $f8, $f8, $f8, $f9, $fb, $fc, $fd, $fc, $fb, $f9
12b89     F7 F5 F3 F1 
12b8d     EF ED EB EA 
12b91     E8 E7 E6 E6 
12b95     E7 E8 EA EB | 	byte	$f7, $f5, $f3, $f1, $ef, $ed, $eb, $ea, $e8, $e7, $e6, $e6, $e7, $e8, $ea, $eb
12b99     EC EC EB EA 
12b9d     EA EA EB EC 
12ba1     EE F0 F3 F5 
12ba5     F6 F9 FC FF | 	byte	$ec, $ec, $eb, $ea, $ea, $ea, $eb, $ec, $ee, $f0, $f3, $f5, $f6, $f9, $fc, $ff
12ba9     02 06 0A 0F 
12bad     14 19 1D 20 
12bb1     24 25 27 28 
12bb5     28 27 24 22 | 	byte	$02, $06, $0a, $0f, $14, $19, $1d, $20, $24, $25, $27, $28, $28, $27, $24, $22
12bb9     1E 1B 17 14 
12bbd     10 0D 0A 07 
12bc1     03 FF FB F6 
12bc5     F1 EC E8 E4 | 	byte	$1e, $1b, $17, $14, $10, $0d, $0a, $07, $03, $ff, $fb, $f6, $f1, $ec, $e8, $e4
12bc9     E1 DE DB D9 
12bcd     D8 D8 D8 DA 
12bd1     DD E0 E4 E8 
12bd5     ED F1 F4 F7 | 	byte	$e1, $de, $db, $d9, $d8, $d8, $d8, $da, $dd, $e0, $e4, $e8, $ed, $f1, $f4, $f7
12bd9     FA FD FF 02 
12bdd     04 05 06 07 
12be1     07 07 07 07 
12be5     07 09 0C 0F | 	byte	$fa, $fd, $ff, $02, $04, $05, $06, $07, $07, $07, $07, $07, $07, $09, $0c, $0f
12be9     13 17 1A 1C 
12bed     1E 1E 1F 20 
12bf1     21 22 21 20 
12bf5     1D 1A 15 10 | 	byte	$13, $17, $1a, $1c, $1e, $1e, $1f, $20, $21, $22, $21, $20, $1d, $1a, $15, $10
12bf9     0A 05 00 FB 
12bfd     F7 F4 F2 F0 
12c01     EE EE EE EE 
12c05     EF F2 F5 FA | 	byte	$0a, $05, $00, $fb, $f7, $f4, $f2, $f0, $ee, $ee, $ee, $ee, $ef, $f2, $f5, $fa
12c09     FF 05 0A 0F 
12c0d     14 19 1D 22 
12c11     26 28 2A 2A 
12c15     29 27 24 21 | 	byte	$ff, $05, $0a, $0f, $14, $19, $1d, $22, $26, $28, $2a, $2a, $29, $27, $24, $21
12c19     1E 1B 19 17 
12c1d     15 13 11 0E 
12c21     0C 09 06 03 
12c25     01 FE FC FA | 	byte	$1e, $1b, $19, $17, $15, $13, $11, $0e, $0c, $09, $06, $03, $01, $fe, $fc, $fa
12c29     FA FA FA FA 
12c2d     F9 F8 F7 F5 
12c31     F3 F1 EF ED 
12c35     EB EB EA EA | 	byte	$fa, $fa, $fa, $fa, $f9, $f8, $f7, $f5, $f3, $f1, $ef, $ed, $eb, $eb, $ea, $ea
12c39     EA EA EA EA 
12c3d     EB EC EE F0 
12c41     F1 F2 F3 F4 
12c45     F4 F4 F5 F7 | 	byte	$ea, $ea, $ea, $ea, $eb, $ec, $ee, $f0, $f1, $f2, $f3, $f4, $f4, $f4, $f5, $f7
12c49     F9 FA FC FD 
12c4d     FD FB FA F9 
12c51     F8 F7 F6 F4 
12c55     F2 F0 EC EA | 	byte	$f9, $fa, $fc, $fd, $fd, $fb, $fa, $f9, $f8, $f7, $f6, $f4, $f2, $f0, $ec, $ea
12c59     E7 E7 E7 E8 
12c5d     E9 EA EB EB 
12c61     EB EA EA EA 
12c65     E9 E9 EA EB | 	byte	$e7, $e7, $e7, $e8, $e9, $ea, $eb, $eb, $eb, $ea, $ea, $ea, $e9, $e9, $ea, $eb
12c69     ED EF F0 F1 
12c6d     F3 F5 F7 FA 
12c71     FE 01 05 0A 
12c75     0F 13 18 1D | 	byte	$ed, $ef, $f0, $f1, $f3, $f5, $f7, $fa, $fe, $01, $05, $0a, $0f, $13, $18, $1d
12c79     21 24 27 28 
12c7d     28 27 25 22 
12c81     20 1D 1B 18 
12c85     16 13 0F 0C | 	byte	$21, $24, $27, $28, $28, $27, $25, $22, $20, $1d, $1b, $18, $16, $13, $0f, $0c
12c89     08 03 FF FB 
12c8d     F6 F2 ED E9 
12c91     E5 E2 DE DB 
12c95     D9 D9 D9 DA | 	byte	$08, $03, $ff, $fb, $f6, $f2, $ed, $e9, $e5, $e2, $de, $db, $d9, $d9, $d9, $da
12c99     DC DF E2 E5 
12c9d     E8 EC F0 F3 
12ca1     F6 F9 FC 00 
12ca5     02 04 05 04 | 	byte	$dc, $df, $e2, $e5, $e8, $ec, $f0, $f3, $f6, $f9, $fc, $00, $02, $04, $05, $04
12ca9     04 03 03 04 
12cad     06 09 0C 0E 
12cb1     11 14 16 18 
12cb5     1A 1C 1F 21 | 	byte	$04, $03, $03, $04, $06, $09, $0c, $0e, $11, $14, $16, $18, $1a, $1c, $1f, $21
12cb9     22 23 23 22 
12cbd     20 1C 18 13 
12cc1     0F 09 05 00 
12cc5     FC F9 F5 F2 | 	byte	$22, $23, $23, $22, $20, $1c, $18, $13, $0f, $09, $05, $00, $fc, $f9, $f5, $f2
12cc9     EF ED ED ED 
12ccd     EE F0 F3 F6 
12cd1     FA FE 02 07 
12cd5     0D 13 1A 20 | 	byte	$ef, $ed, $ed, $ed, $ee, $f0, $f3, $f6, $fa, $fe, $02, $07, $0d, $13, $1a, $20
12cd9     24 27 28 28 
12cdd     27 26 24 23 
12ce1     21 1E 1C 1A 
12ce5     19 17 15 12 | 	byte	$24, $27, $28, $28, $27, $26, $24, $23, $21, $1e, $1c, $1a, $19, $17, $15, $12
12ce9     0F 0B 08 05 
12ced     03 01 FF FD 
12cf1     FD FD FC FB 
12cf5     FA F9 F8 F6 | 	byte	$0f, $0b, $08, $05, $03, $01, $ff, $fd, $fd, $fd, $fc, $fb, $fa, $f9, $f8, $f6
12cf9     F4 F2 F1 F0 
12cfd     EE EC EB E9 
12d01     E8 E8 E8 EA 
12d05     EB ED EE EF | 	byte	$f4, $f2, $f1, $f0, $ee, $ec, $eb, $e9, $e8, $e8, $e8, $ea, $eb, $ed, $ee, $ef
12d09     F0 F0 F0 F0 
12d0d     F1 F4 F6 F8 
12d11     F9 FA FB FB 
12d15     FB FB FB FC | 	byte	$f0, $f0, $f0, $f0, $f1, $f4, $f6, $f8, $f9, $fa, $fb, $fb, $fb, $fb, $fb, $fc
12d19     FB FA F8 F6 
12d1d     F3 F0 ED EB 
12d21     EA E9 E9 EA 
12d25     EB EB EB EB | 	byte	$fb, $fa, $f8, $f6, $f3, $f0, $ed, $eb, $ea, $e9, $e9, $ea, $eb, $eb, $eb, $eb
12d29     EA EA E9 E9 
12d2d     E9 EA EA EB 
12d31     EC ED EE EF 
12d35     F0 F2 F4 F7 | 	byte	$ea, $ea, $e9, $e9, $e9, $ea, $ea, $eb, $ec, $ed, $ee, $ef, $f0, $f2, $f4, $f7
12d39     F9 FC 00 04 
12d3d     08 0E 14 1A 
12d41     1E 22 25 26 
12d45     27 26 24 23 | 	byte	$f9, $fc, $00, $04, $08, $0e, $14, $1a, $1e, $22, $25, $26, $27, $26, $24, $23
12d49     22 20 1E 1C 
12d4d     1A 17 14 10 
12d51     0C 08 04 00 
12d55     FC F7 F3 EE | 	byte	$22, $20, $1e, $1c, $1a, $17, $14, $10, $0c, $08, $04, $00, $fc, $f7, $f3, $ee
12d59     EA E5 E2 DE 
12d5d     DC DA DA DA 
12d61     DC DE E0 E2 
12d65     E5 E8 EB EF | 	byte	$ea, $e5, $e2, $de, $dc, $da, $da, $da, $dc, $de, $e0, $e2, $e5, $e8, $eb, $ef
12d69     F3 F7 FB FE 
12d6d     FF 00 01 01 
12d71     01 01 02 04 
12d75     05 07 09 0B | 	byte	$f3, $f7, $fb, $fe, $ff, $00, $01, $01, $01, $01, $02, $04, $05, $07, $09, $0b
12d79     0D 10 12 14 
12d7d     17 1A 1E 21 
12d81     23 24 24 23 
12d85     21 1E 1B 17 | 	byte	$0d, $10, $12, $14, $17, $1a, $1e, $21, $23, $24, $24, $23, $21, $1e, $1b, $17
12d89     13 0F 0A 06 
12d8d     01 FC F8 F4 
12d91     F1 EF EF EF 
12d95     EF EF F0 F1 | 	byte	$13, $0f, $0a, $06, $01, $fc, $f8, $f4, $f1, $ef, $ef, $ef, $ef, $ef, $f0, $f1
12d99     F3 F7 FC 02 
12d9d     09 0F 15 1B 
12da1     20 23 25 27 
12da5     26 25 24 23 | 	byte	$f3, $f7, $fc, $02, $09, $0f, $15, $1b, $20, $23, $25, $27, $26, $25, $24, $23
12da9     22 21 1F 1E 
12dad     1C 1B 18 15 
12db1     11 0E 0A 07 
12db5     05 03 02 01 | 	byte	$22, $21, $1f, $1e, $1c, $1b, $18, $15, $11, $0e, $0a, $07, $05, $03, $02, $01
12db9     00 FF FD FC 
12dbd     FB F9 F9 F8 
12dc1     F7 F6 F4 F2 
12dc5     EF ED EB E9 | 	byte	$00, $ff, $fd, $fc, $fb, $f9, $f9, $f8, $f7, $f6, $f4, $f2, $ef, $ed, $eb, $e9
12dc9     E9 E9 EA EB 
12dcd     EC ED EC EC 
12dd1     EC ED EE F0 
12dd5     F2 F3 F4 F5 | 	byte	$e9, $e9, $ea, $eb, $ec, $ed, $ec, $ec, $ec, $ed, $ee, $f0, $f2, $f3, $f4, $f5
12dd9     F7 F7 F8 FA 
12ddd     FB FC FD FE 
12de1     FD FB F9 F6 
12de5     F4 F1 EF ED | 	byte	$f7, $f7, $f8, $fa, $fb, $fc, $fd, $fe, $fd, $fb, $f9, $f6, $f4, $f1, $ef, $ed
12de9     EC EC EB EB 
12ded     EB EB EB EA 
12df1     EA EA EA EA 
12df5     EA EA EA EA | 	byte	$ec, $ec, $eb, $eb, $eb, $eb, $eb, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea, $ea
12df9     EA EB EC EE 
12dfd     EF F0 F1 F3 
12e01     F5 F7 FA FE 
12e05     04 0A 10 16 | 	byte	$ea, $eb, $ec, $ee, $ef, $f0, $f1, $f3, $f5, $f7, $fa, $fe, $04, $0a, $10, $16
12e09     1B 1F 22 23 
12e0d     24 25 25 24 
12e11     23 22 20 1F 
12e15     1D 1A 17 14 | 	byte	$1b, $1f, $22, $23, $24, $25, $25, $24, $23, $22, $20, $1f, $1d, $1a, $17, $14
12e19     10 0D 09 05 
12e1d     01 FD F8 F3 
12e21     EE EA E5 E2 
12e25     E0 DE DD DC | 	byte	$10, $0d, $09, $05, $01, $fd, $f8, $f3, $ee, $ea, $e5, $e2, $e0, $de, $dd, $dc
12e29     DC DC DD DF 
12e2d     E1 E5 E9 ED 
12e31     F1 F5 F8 FA 
12e35     FC FD FD FE | 	byte	$dc, $dc, $dd, $df, $e1, $e5, $e9, $ed, $f1, $f5, $f8, $fa, $fc, $fd, $fd, $fe
12e39     FF 00 01 03 
12e3d     04 05 06 07 
12e41     09 0B 0E 11 
12e45     15 19 1C 20 | 	byte	$ff, $00, $01, $03, $04, $05, $06, $07, $09, $0b, $0e, $11, $15, $19, $1c, $20
12e49     22 23 24 23 
12e4d     22 20 1F 1C 
12e51     18 14 0F 09 
12e55     04 FF FC F9 | 	byte	$22, $23, $24, $23, $22, $20, $1f, $1c, $18, $14, $0f, $09, $04, $ff, $fc, $f9
12e59     F6 F3 F1 EF 
12e5d     EE ED ED ED 
12e61     EF F2 F7 FC 
12e65     03 0A 10 16 | 	byte	$f6, $f3, $f1, $ef, $ee, $ed, $ed, $ed, $ef, $f2, $f7, $fc, $03, $0a, $10, $16
12e69     1B 1F 22 23 
12e6d     24 24 24 23 
12e71     23 23 22 21 
12e75     20 1D 1A 17 | 	byte	$1b, $1f, $22, $23, $24, $24, $24, $23, $23, $23, $22, $21, $20, $1d, $1a, $17
12e79     13 10 0D 0B 
12e7d     09 07 05 03 
12e81     02 00 FE FD 
12e85     FD FC FC FB | 	byte	$13, $10, $0d, $0b, $09, $07, $05, $03, $02, $00, $fe, $fd, $fd, $fc, $fc, $fb
12e89     FA F8 F5 F2 
12e8d     EF ED ED EC 
12e91     EC EB EB EB 
12e95     EA EA EA EB | 	byte	$fa, $f8, $f5, $f2, $ef, $ed, $ed, $ec, $ec, $eb, $eb, $eb, $ea, $ea, $ea, $eb
12e99     EB EC EE EF 
12e9d     F0 F1 F2 F2 
12ea1     F4 F6 F8 FA 
12ea5     FC FD FE FE | 	byte	$eb, $ec, $ee, $ef, $f0, $f1, $f2, $f2, $f4, $f6, $f8, $fa, $fc, $fd, $fe, $fe
12ea9     FD FC FA F7 
12ead     F5 F3 F1 F0 
12eb1     EF EE ED EC 
12eb5     EB EB EB EB | 	byte	$fd, $fc, $fa, $f7, $f5, $f3, $f1, $f0, $ef, $ee, $ed, $ec, $eb, $eb, $eb, $eb
12eb9     EB EB EA E9 
12ebd     E9 E9 E9 E9 
12ec1     EA EB EC ED 
12ec5     EE EE EE EF | 	byte	$eb, $eb, $ea, $e9, $e9, $e9, $e9, $e9, $ea, $eb, $ec, $ed, $ee, $ee, $ee, $ef
12ec9     F0 F2 F6 FB 
12ecd     00 05 0B 11 
12ed1     15 1A 1D 20 
12ed5     22 23 24 24 | 	byte	$f0, $f2, $f6, $fb, $00, $05, $0b, $11, $15, $1a, $1d, $20, $22, $23, $24, $24
12ed9     24 23 22 21 
12edd     1F 1D 1A 18 
12ee1     15 12 0E 0A 
12ee5     06 01 FC F7 | 	byte	$24, $23, $22, $21, $1f, $1d, $1a, $18, $15, $12, $0e, $0a, $06, $01, $fc, $f7
12ee9     F3 EF EB E8 
12eed     E4 E1 DF DD 
12ef1     DB DB DC DD 
12ef5     E0 E3 E8 EC | 	byte	$f3, $ef, $eb, $e8, $e4, $e1, $df, $dd, $db, $db, $dc, $dd, $e0, $e3, $e8, $ec
12ef9     EF F2 F4 F6 
12efd     F8 F9 FB FC 
12f01     FE FF 01 02 
12f05     02 03 03 03 | 	byte	$ef, $f2, $f4, $f6, $f8, $f9, $fb, $fc, $fe, $ff, $01, $02, $02, $03, $03, $03
12f09     05 07 0B 0F 
12f0d     13 16 19 1C 
12f11     1F 21 23 24 
12f15     25 23 21 1F | 	byte	$05, $07, $0b, $0f, $13, $16, $19, $1c, $1f, $21, $23, $24, $25, $23, $21, $1f
12f19     1B 17 12 0E 
12f1d     09 05 01 FD 
12f21     FA F7 F4 F1 
12f25     EE EC EB EB | 	byte	$1b, $17, $12, $0e, $09, $05, $01, $fd, $fa, $f7, $f4, $f1, $ee, $ec, $eb, $eb
12f29     EC EE F2 F7 
12f2d     FD 04 0B 11 
12f31     16 1A 1D 1F 
12f35     20 21 22 24 | 	byte	$ec, $ee, $f2, $f7, $fd, $04, $0b, $11, $16, $1a, $1d, $1f, $20, $21, $22, $24
12f39     24 25 24 23 
12f3d     22 1F 1C 19 
12f41     16 14 11 0F 
12f45     0D 0A 07 04 | 	byte	$24, $25, $24, $23, $22, $1f, $1c, $19, $16, $14, $11, $0f, $0d, $0a, $07, $04
12f49     02 02 01 01 
12f4d     00 FF FE FD 
12f51     FA F8 F6 F4 
12f55     F2 F0 EF EE | 	byte	$02, $02, $01, $01, $00, $ff, $fe, $fd, $fa, $f8, $f6, $f4, $f2, $f0, $ef, $ee
12f59     ED EC EA EA 
12f5d     E9 EA EA EB 
12f61     EC EC ED EE 
12f65     EE EE EF F0 | 	byte	$ed, $ec, $ea, $ea, $e9, $ea, $ea, $eb, $ec, $ec, $ed, $ee, $ee, $ee, $ef, $f0
12f69     F2 F4 F7 FA 
12f6d     FC FD FE FE 
12f71     FD FC FA F9 
12f75     F7 F5 F3 F2 | 	byte	$f2, $f4, $f7, $fa, $fc, $fd, $fe, $fe, $fd, $fc, $fa, $f9, $f7, $f5, $f3, $f2
12f79     F0 EF EE ED 
12f7d     ED ED EC EC 
12f81     EB EA E9 E9 
12f85     E9 E9 EA EA | 	byte	$f0, $ef, $ee, $ed, $ed, $ed, $ec, $ec, $eb, $ea, $e9, $e9, $e9, $e9, $ea, $ea
12f89     EB EB EC EC 
12f8d     EB EB EC EC 
12f91     ED EF F2 F6 
12f95     FB 01 06 0C | 	byte	$eb, $eb, $ec, $ec, $eb, $eb, $ec, $ec, $ed, $ef, $f2, $f6, $fb, $01, $06, $0c
12f99     11 15 18 1C 
12f9d     1F 21 23 23 
12fa1     23 23 22 21 
12fa5     21 20 1E 1C | 	byte	$11, $15, $18, $1c, $1f, $21, $23, $23, $23, $23, $22, $21, $21, $20, $1e, $1c
12fa9     19 16 12 0E 
12fad     0A 05 01 FD 
12fb1     F9 F5 F1 ED 
12fb5     E9 E4 E1 DE | 	byte	$19, $16, $12, $0e, $0a, $05, $01, $fd, $f9, $f5, $f1, $ed, $e9, $e4, $e1, $de
12fb9     DC DC DC DD 
12fbd     E0 E3 E6 E9 
12fc1     EC EE F0 F2 
12fc5     F4 F7 FA FC | 	byte	$dc, $dc, $dc, $dd, $e0, $e3, $e6, $e9, $ec, $ee, $f0, $f2, $f4, $f7, $fa, $fc
12fc9     FE FF FF FF 
12fcd     FF FF 00 02 
12fd1     04 06 08 0B 
12fd5     0F 12 15 19 | 	byte	$fe, $ff, $ff, $ff, $ff, $ff, $00, $02, $04, $06, $08, $0b, $0f, $12, $15, $19
12fd9     1D 20 22 24 
12fdd     25 25 23 21 
12fe1     1D 1A 16 12 
12fe5     0E 0A 06 02 | 	byte	$1d, $20, $22, $24, $25, $25, $23, $21, $1d, $1a, $16, $12, $0e, $0a, $06, $02
12fe9     FE FB F7 F4 
12fed     F0 ED EB E9 
12ff1     EA EB EE F4 
12ff5     FA 00 06 0B | 	byte	$fe, $fb, $f7, $f4, $f0, $ed, $eb, $e9, $ea, $eb, $ee, $f4, $fa, $00, $06, $0b
12ff9     10 14 17 1A 
12ffd     1D 20 23 24 
13001     25 25 24 23 
13005     22 20 1F 1D | 	byte	$10, $14, $17, $1a, $1d, $20, $23, $24, $25, $25, $24, $23, $22, $20, $1f, $1d
13009     1B 18 14 11 
1300d     0E 0B 08 07 
13011     06 05 05 04 
13015     02 01 FF FD | 	byte	$1b, $18, $14, $11, $0e, $0b, $08, $07, $06, $05, $05, $04, $02, $01, $ff, $fd
13019     FB F9 F8 F6 
1301d     F5 F3 F1 F0 
13021     EE EC EA EA 
13025     EA EA EB EC | 	byte	$fb, $f9, $f8, $f6, $f5, $f3, $f1, $f0, $ee, $ec, $ea, $ea, $ea, $ea, $eb, $ec
13029     EC EC EC EB 
1302d     EB EC ED EF 
13031     F1 F3 F6 F8 
13035     FA FC FD FD | 	byte	$ec, $ec, $ec, $eb, $eb, $ec, $ed, $ef, $f1, $f3, $f6, $f8, $fa, $fc, $fd, $fd
13039     FD FD FB FA 
1303d     F8 F7 F5 F3 
13041     F2 F1 F0 EF 
13045     EF EE ED EC | 	byte	$fd, $fd, $fb, $fa, $f8, $f7, $f5, $f3, $f2, $f1, $f0, $ef, $ef, $ee, $ed, $ec
13049     EA EA EA EA 
1304d     EA EA EA    | 	byte	$ea[7]
13050     EB EB EC EB 
13054     EB EA E9 E9 
13058     E9 EB ED F0 
1305c     F3 F7 FB 00 | 	byte	$eb, $eb, $ec, $eb, $eb, $ea, $e9, $e9, $e9, $eb, $ed, $f0, $f3, $f7, $fb, $00
13060     06 0B 10 15 
13064     19 1C 1E 20 
13068     21 22 22 22 
1306c     23 23 22 21 | 	byte	$06, $0b, $10, $15, $19, $1c, $1e, $20, $21, $22, $22, $22, $23, $23, $22, $21
13070     1F 1C 19 15 
13074     12 0E 0A 06 
13078     02 FE FA F6 
1307c     F2 ED E8 E4 | 	byte	$1f, $1c, $19, $15, $12, $0e, $0a, $06, $02, $fe, $fa, $f6, $f2, $ed, $e8, $e4
13080     E0 DE DE DE 
13084     DF E0 E2 E4 
13088     E5 E7 EA ED 
1308c     F0 F3 F6 F8 | 	byte	$e0, $de, $de, $de, $df, $e0, $e2, $e4, $e5, $e7, $ea, $ed, $f0, $f3, $f6, $f8
13090     FA FB FC FC 
13094     FD FD FE FE 
13098     FF 01 03 05 
1309c     07 0A 0E 12 | 	byte	$fa, $fb, $fc, $fc, $fd, $fd, $fe, $fe, $ff, $01, $03, $05, $07, $0a, $0e, $12
130a0     16 1A 1E 21 
130a4     23 24 25 24 
130a8     22 20 1C 19 
130ac     16 12 0F 0B | 	byte	$16, $1a, $1e, $21, $23, $24, $25, $24, $22, $20, $1c, $19, $16, $12, $0f, $0b
130b0     07 03 FF FB 
130b4     F6 F2 EE EB 
130b8     E9 E9 EA ED 
130bc     F2 F6 FA FF | 	byte	$07, $03, $ff, $fb, $f6, $f2, $ee, $eb, $e9, $e9, $ea, $ed, $f2, $f6, $fa, $ff
130c0     04 08 0D 12 
130c4     17 1B 1E 20 
130c8     22 23 23 23 
130cc     24 24 23 22 | 	byte	$04, $08, $0d, $12, $17, $1b, $1e, $20, $22, $23, $23, $23, $24, $24, $23, $22
130d0     20 1D 1A 16 
130d4     13 10 0E 0C 
130d8     0A 09 08 07 
130dc     05 04 02 00 | 	byte	$20, $1d, $1a, $16, $13, $10, $0e, $0c, $0a, $09, $08, $07, $05, $04, $02, $00
130e0     FE FD FC FB 
130e4     F9 F8 F5 F3 
130e8     F1 EE ED EC 
130ec     EC EC EC EC | 	byte	$fe, $fd, $fc, $fb, $f9, $f8, $f5, $f3, $f1, $ee, $ed, $ec, $ec, $ec, $ec, $ec
130f0     EC EB EA EA 
130f4     EA EA EA EB 
130f8     ED EF F2 F4 
130fc     F6 F8 FA FC | 	byte	$ec, $eb, $ea, $ea, $ea, $ea, $ea, $eb, $ed, $ef, $f2, $f4, $f6, $f8, $fa, $fc
13100     FD FE FD FC 
13104     FA F9 F7 F6 
13108     F5 F4 F3 F2 
1310c     F1 F0 EF ED | 	byte	$fd, $fe, $fd, $fc, $fa, $f9, $f7, $f6, $f5, $f4, $f3, $f2, $f1, $f0, $ef, $ed
13110     EC EB EA EA 
13114     EA EA EB EC 
13118     EC EC EB EB 
1311c     EA E9 E9 E9 | 	byte	$ec, $eb, $ea, $ea, $ea, $ea, $eb, $ec, $ec, $ec, $eb, $eb, $ea, $e9, $e9, $e9
13120     E9 E9 EA EC 
13124     EF F2 F6 FB 
13128     01 06 0C 10 
1312c     14 17 1A 1C | 	byte	$e9, $e9, $ea, $ec, $ef, $f2, $f6, $fb, $01, $06, $0c, $10, $14, $17, $1a, $1c
13130     1E 20 21 22 
13134     23 24 23 22 
13138     21 1F 1C 18 
1313c     15 12 0F 0C | 	byte	$1e, $20, $21, $22, $23, $24, $23, $22, $21, $1f, $1c, $18, $15, $12, $0f, $0c
13140     08 04 00 FB 
13144     F5 F0 EC E8 
13148     E5 E3 E1 E0 
1314c     E0 E0 E0 E2 | 	byte	$08, $04, $00, $fb, $f5, $f0, $ec, $e8, $e5, $e3, $e1, $e0, $e0, $e0, $e0, $e2
13150     E4 E6 E9 EC 
13154     EE F1 F4 F6 
13158     F7 F8 F9 FA 
1315c     FB FC FD FD | 	byte	$e4, $e6, $e9, $ec, $ee, $f1, $f4, $f6, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fd
13160     FE FE FF 01 
13164     03 06 0A 0E 
13168     13 17 1B 1F 
1316c     21 23 24 24 | 	byte	$fe, $fe, $ff, $01, $03, $06, $0a, $0e, $13, $17, $1b, $1f, $21, $23, $24, $24
13170     23 21 1F 1C 
13174     19 17 14 11 
13178     0D 09 04 FE 
1317c     F9 F4 F0 ED | 	byte	$23, $21, $1f, $1c, $19, $17, $14, $11, $0d, $09, $04, $fe, $f9, $f4, $f0, $ed
13180     EB EB EB EC 
13184     EF F1 F4 F8 
13188     FE 03 09 0F 
1318c     13 17 1A 1C | 	byte	$eb, $eb, $eb, $ec, $ef, $f1, $f4, $f8, $fe, $03, $09, $0f, $13, $17, $1a, $1c
13190     1E 20 22 23 
13194     25 25 25 24 
13198     21 1F 1B 18 
1319c     15 12 11 0F | 	byte	$1e, $20, $22, $23, $25, $25, $25, $24, $21, $1f, $1b, $18, $15, $12, $11, $0f
131a0     0E 0C 0A 09 
131a4     07 05 04 02 
131a8     01 00 FF FD 
131ac     FB F9 F7 F4 | 	byte	$0e, $0c, $0a, $09, $07, $05, $04, $02, $01, $00, $ff, $fd, $fb, $f9, $f7, $f4
131b0     F2 F0 EF EE 
131b4     EE ED ED EC 
131b8     EB EA EA E9 
131bc     E9 E9 E9 EA | 	byte	$f2, $f0, $ef, $ee, $ee, $ed, $ed, $ec, $eb, $ea, $ea, $e9, $e9, $e9, $e9, $ea
131c0     EB ED EF F2 
131c4     F5 F7 F9 FB 
131c8     FC FD FC FC 
131cc     FB F9 F8 F7 | 	byte	$eb, $ed, $ef, $f2, $f5, $f7, $f9, $fb, $fc, $fd, $fc, $fc, $fb, $f9, $f8, $f7
131d0     F7 F6 F5 F4 
131d4     F3 F1 F0 EE 
131d8     EC EC EB EB 
131dc     EB EB EC EC | 	byte	$f7, $f6, $f5, $f4, $f3, $f1, $f0, $ee, $ec, $ec, $eb, $eb, $eb, $eb, $ec, $ec
131e0     ED EC EC EB 
131e4     EA E9 E9 E8 
131e8     E7 E7 E7 E9 
131ec     EB EF F3 F8 | 	byte	$ed, $ec, $ec, $eb, $ea, $e9, $e9, $e8, $e7, $e7, $e7, $e9, $eb, $ef, $f3, $f8
131f0     FC 01 06 0A 
131f4     0F 12 16 18 
131f8     1B 1D 20 22 
131fc     23 24 23 22 | 	byte	$fc, $01, $06, $0a, $0f, $12, $16, $18, $1b, $1d, $20, $22, $23, $24, $23, $22
13200     21 1F 1D 1C 
13204     1A 18 15 11 
13208     0D 08 04 FF 
1320c     FA F5 F1 ED | 	byte	$21, $1f, $1d, $1c, $1a, $18, $15, $11, $0d, $08, $04, $ff, $fa, $f5, $f1, $ed
13210     EA E7 E4 E2 
13214     E0 E0 E0 E1 
13218     E3 E5 E7 EA 
1321c     EC EF F1 F3 | 	byte	$ea, $e7, $e4, $e2, $e0, $e0, $e0, $e1, $e3, $e5, $e7, $ea, $ec, $ef, $f1, $f3
13220     F5 F6 F8 F9 
13224     FA FB FB FB 
13228     FB FC FC FE 
1322c     00 03 06 0A | 	byte	$f5, $f6, $f8, $f9, $fa, $fb, $fb, $fb, $fb, $fc, $fc, $fe, $00, $03, $06, $0a
13230     0F 14 19 1D 
13234     20 21 22 22 
13238     21 21 20 1F 
1323c     1E 1C 19 16 | 	byte	$0f, $14, $19, $1d, $20, $21, $22, $22, $21, $21, $20, $1f, $1e, $1c, $19, $16
13240     12 0C 07 01 
13244     FC F8 F4 F1 
13248     EF EC EA EA 
1324c     EB ED F0 F5 | 	byte	$12, $0c, $07, $01, $fc, $f8, $f4, $f1, $ef, $ec, $ea, $ea, $eb, $ed, $f0, $f5
13250     FA FF 04 09 
13254     0D 10 14 17 
13258     1A 1E 21 24 
1325c     25 26 25 24 | 	byte	$fa, $ff, $04, $09, $0d, $10, $14, $17, $1a, $1e, $21, $24, $25, $26, $25, $24
13260     22 1F 1D 1B 
13264     18 17 14 12 
13268     10 0E 0C 0A 
1326c     09 07 07 06 | 	byte	$22, $1f, $1d, $1b, $18, $17, $14, $12, $10, $0e, $0c, $0a, $09, $07, $07, $06
13270     04 03 02 FF 
13274     FD FA F8 F6 
13278     F5 F3 F2 F0 
1327c     EF EE ED EC | 	byte	$04, $03, $02, $ff, $fd, $fa, $f8, $f6, $f5, $f3, $f2, $f0, $ef, $ee, $ed, $ec
13280     EC EB EA E9 
13284     E8 E8 E8 E8 
13288     E9 EB ED F0 
1328c     F3 F6 F8 FA | 	byte	$ec, $eb, $ea, $e9, $e8, $e8, $e8, $e8, $e9, $eb, $ed, $f0, $f3, $f6, $f8, $fa
13290     FB FB FC FB 
13294     FB FA FA F9 
13298     F9 F8 F7 F6 
1329c     F4 F2 F0 EF | 	byte	$fb, $fb, $fc, $fb, $fb, $fa, $fa, $f9, $f9, $f8, $f7, $f6, $f4, $f2, $f0, $ef
132a0     EE ED EC EC 
132a4     EC EC EC ED 
132a8     ED ED ED EC 
132ac     EA E9 E8 E7 | 	byte	$ee, $ed, $ec, $ec, $ec, $ec, $ec, $ed, $ed, $ed, $ed, $ec, $ea, $e9, $e8, $e7
132b0     E6 E6 E6 E7 
132b4     E9 EC EF F4 
132b8     F9 FD 01 04 
132bc     08 0C 10 15 | 	byte	$e6, $e6, $e6, $e7, $e9, $ec, $ef, $f4, $f9, $fd, $01, $04, $08, $0c, $10, $15
132c0     19 1C 1F 20 
132c4     21 22 22 22 
132c8     22 21 20 1F 
132cc     1E 1B 18 15 | 	byte	$19, $1c, $1f, $20, $21, $22, $22, $22, $22, $21, $20, $1f, $1e, $1b, $18, $15
132d0     10 0C 08 04 
132d4     FF FB F7 F2 
132d8     EE EA E7 E5 
132dc     E3 E1 E1 E1 | 	byte	$10, $0c, $08, $04, $ff, $fb, $f7, $f2, $ee, $ea, $e7, $e5, $e3, $e1, $e1, $e1
132e0     E3 E4 E6 E8 
132e4     EA EC EF F1 
132e8     F3 F5 F7 F8 
132ec     F9 F9 FA FA | 	byte	$e3, $e4, $e6, $e8, $ea, $ec, $ef, $f1, $f3, $f5, $f7, $f8, $f9, $f9, $fa, $fa
132f0     FA FA FA FA 
132f4     FC FE 02 07 
132f8     0D 11 16 19 
132fc     1C 1D 1E 1F | 	byte	$fa, $fa, $fa, $fa, $fc, $fe, $02, $07, $0d, $11, $16, $19, $1c, $1d, $1e, $1f
13300     21 22 23 23 
13304     21 20 1C 18 
13308     14 10 0B 07 
1330c     02 FD F9 F4 | 	byte	$21, $22, $23, $23, $21, $20, $1c, $18, $14, $10, $0b, $07, $02, $fd, $f9, $f4
13310     F0 ED EB EA 
13314     EA EC EF F2 
13318     F7 FA FE 02 
1331c     06 0A 0E 13 | 	byte	$f0, $ed, $eb, $ea, $ea, $ec, $ef, $f2, $f7, $fa, $fe, $02, $06, $0a, $0e, $13
13320     18 1C 20 22 
13324     23 24 24 23 
13328     22 21 1F 1E 
1332c     1C 19 17 14 | 	byte	$18, $1c, $20, $22, $23, $24, $24, $23, $22, $21, $1f, $1e, $1c, $19, $17, $14
13330     11 0F 0E 0D 
13334     0C 0B 0A 08 
13338     07 05 03 01 
1333c     FF FD FB F9 | 	byte	$11, $0f, $0e, $0d, $0c, $0b, $0a, $08, $07, $05, $03, $01, $ff, $fd, $fb, $f9
13340     F7 F5 F3 F2 
13344     F1 F0 EF ED 
13348     EC EB EA E9 
1334c     E8 E7 E7 E7 | 	byte	$f7, $f5, $f3, $f2, $f1, $f0, $ef, $ed, $ec, $eb, $ea, $e9, $e8, $e7, $e7, $e7
13350     E8 EA EC EE 
13354     F1 F4 F6 F8 
13358     F9 FA FA FA 
1335c     FB FB FB FB | 	byte	$e8, $ea, $ec, $ee, $f1, $f4, $f6, $f8, $f9, $fa, $fa, $fa, $fb, $fb, $fb, $fb
13360     FA F9 F8 F7 
13364     F5 F4 F2 F0 
13368     EE ED EC EC 
1336c     EC ED ED EE | 	byte	$fa, $f9, $f8, $f7, $f5, $f4, $f2, $f0, $ee, $ed, $ec, $ec, $ec, $ed, $ed, $ee
13370     EE EE ED ED 
13374     EB EA E8 E6 
13378     E5 E4 E5 E6 
1337c     E8 EB EE F0 | 	byte	$ee, $ee, $ed, $ed, $eb, $ea, $e8, $e6, $e5, $e4, $e5, $e6, $e8, $eb, $ee, $f0
13380     F4 F7 FB FE 
13384     03 08 0D 11 
13388     15 19 1B 1D 
1338c     1E 1F 20 22 | 	byte	$f4, $f7, $fb, $fe, $03, $08, $0d, $11, $15, $19, $1b, $1d, $1e, $1f, $20, $22
13390     22 23 22 21 
13394     20 1E 1B 18 
13398     14 11 0D 09 
1339c     05 00 FC F7 | 	byte	$22, $23, $22, $21, $20, $1e, $1b, $18, $14, $11, $0d, $09, $05, $00, $fc, $f7
133a0     F2 EE EB E8 
133a4     E6 E4 E3 E3 
133a8     E3 E3 E5 E7 
133ac     E8 EA ED EF | 	byte	$f2, $ee, $eb, $e8, $e6, $e4, $e3, $e3, $e3, $e3, $e5, $e7, $e8, $ea, $ed, $ef
133b0     F1 F3 F5 F7 
133b4     F8 F9 F9 F8 
133b8     F7 F6 F6 F7 
133bc     F9 FC 01 05 | 	byte	$f1, $f3, $f5, $f7, $f8, $f9, $f9, $f8, $f7, $f6, $f6, $f7, $f9, $fc, $01, $05
133c0     09 0D 10 13 
133c4     16 19 1C 1F 
133c8     21 23 24 24 
133cc     22 21 1F 1C | 	byte	$09, $0d, $10, $13, $16, $19, $1c, $1f, $21, $23, $24, $24, $22, $21, $1f, $1c
133d0     18 15 11 0D 
133d4     08 02 FD F7 
133d8     F2 EF EC EC 
133dc     EC ED EE F0 | 	byte	$18, $15, $11, $0d, $08, $02, $fd, $f7, $f2, $ef, $ec, $ec, $ec, $ed, $ee, $f0
133e0     F2 F5 F8 FB 
133e4     00 05 0A 10 
133e8     15 19 1C 1F 
133ec     20 21 22 23 | 	byte	$f2, $f5, $f8, $fb, $00, $05, $0a, $10, $15, $19, $1c, $1f, $20, $21, $22, $23
133f0     24 23 22 20 
133f4     1D 1A 18 16 
133f8     14 12 10 0F 
133fc     0E 0D 0C 0B | 	byte	$24, $23, $22, $20, $1d, $1a, $18, $16, $14, $12, $10, $0f, $0e, $0d, $0c, $0b
13400     09 07 05 03 
13404     01 FF FD FB 
13408     F9 F7 F6 F4 
1340c     F3 F2 F1 EF | 	byte	$09, $07, $05, $03, $01, $ff, $fd, $fb, $f9, $f7, $f6, $f4, $f3, $f2, $f1, $ef
13410     EE EC EB E9 
13414     E7 E6 E6 E6 
13418     E7 E9 EB ED 
1341c     EF F1 F3 F5 | 	byte	$ee, $ec, $eb, $e9, $e7, $e6, $e6, $e6, $e7, $e9, $eb, $ed, $ef, $f1, $f3, $f5
13420     F7 F8 F9 FA 
13424     FA FB FB FB 
13428     FB FB FA F9 
1342c     F7 F5 F3 F1 | 	byte	$f7, $f8, $f9, $fa, $fa, $fb, $fb, $fb, $fb, $fb, $fa, $f9, $f7, $f5, $f3, $f1
13430     F0 EE ED ED 
13434     ED ED EE EF 
13438     F0 F0 EF ED 
1343c     EC EA E8 E6 | 	byte	$f0, $ee, $ed, $ed, $ed, $ed, $ee, $ef, $f0, $f0, $ef, $ed, $ec, $ea, $e8, $e6
13440     E5 E5 E5 E6 
13444     E7 E9 EB EC 
13448     EF F2 F6 FA 
1344c     FF 04 08 0D | 	byte	$e5, $e5, $e5, $e6, $e7, $e9, $eb, $ec, $ef, $f2, $f6, $fa, $ff, $04, $08, $0d
13450     11 14 17 19 
13454     1B 1D 1F 21 
13458     22 23 23 22 
1345c     21 20 1E 1C | 	byte	$11, $14, $17, $19, $1b, $1d, $1f, $21, $22, $23, $23, $22, $21, $20, $1e, $1c
13460     19 15 12 0D 
13464     09 05 01 FC 
13468     F8 F3 F0 EC 
1346c     E9 E7 E5 E4 | 	byte	$19, $15, $12, $0d, $09, $05, $01, $fc, $f8, $f3, $f0, $ec, $e9, $e7, $e5, $e4
13470     E4 E4 E5 E6 
13474     E7 E8 EA ED 
13478     F0 F3 F6 F7 
1347c     F8 F7 F6 F5 | 	byte	$e4, $e4, $e5, $e6, $e7, $e8, $ea, $ed, $f0, $f3, $f6, $f7, $f8, $f7, $f6, $f5
13480     F4 F4 F5 F6 
13484     F8 FB FE 01 
13488     04 08 0B 0F 
1348c     12 16 1A 1D | 	byte	$f4, $f4, $f5, $f6, $f8, $fb, $fe, $01, $04, $08, $0b, $0f, $12, $16, $1a, $1d
13490     20 21 23 23 
13494     23 22 21 20 
13498     1E 1A 16 11 
1349c     0C 06 00 FB | 	byte	$20, $21, $23, $23, $23, $22, $21, $20, $1e, $1a, $16, $11, $0c, $06, $00, $fb
134a0     F6 F3 F0 EF 
134a4     EE EE EE EE 
134a8     EE F0 F3 F7 
134ac     FC 01 06 0B | 	byte	$f6, $f3, $f0, $ef, $ee, $ee, $ee, $ee, $ee, $f0, $f3, $f7, $fc, $01, $06, $0b
134b0     0F 13 17 1A 
134b4     1D 20 21 23 
134b8     24 23 22 21 
134bc     1F 1C 1A 18 | 	byte	$0f, $13, $17, $1a, $1d, $20, $21, $23, $24, $23, $22, $21, $1f, $1c, $1a, $18
134c0     16 14 13 12 
134c4     10 0F 0E 0D 
134c8     0B 09 08 05 
134cc     03 01 FF FD | 	byte	$16, $14, $13, $12, $10, $0f, $0e, $0d, $0b, $09, $08, $05, $03, $01, $ff, $fd
134d0     FB F9 F8 F7 
134d4     F6 F4 F3 F1 
134d8     F0 ED EB E9 
134dc     E7 E7 E6 E6 | 	byte	$fb, $f9, $f8, $f7, $f6, $f4, $f3, $f1, $f0, $ed, $eb, $e9, $e7, $e7, $e6, $e6
134e0     E6 E7 E9 EB 
134e4     ED EF F2 F3 
134e8     F4 F6 F7 F8 
134ec     F9 FA FB FC | 	byte	$e6, $e7, $e9, $eb, $ed, $ef, $f2, $f3, $f4, $f6, $f7, $f8, $f9, $fa, $fb, $fc
134f0     FC FC FB FA 
134f4     F8 F7 F5 F2 
134f8     F0 EF EE EE 
134fc     EE EE F0 F1 | 	byte	$fc, $fc, $fb, $fa, $f8, $f7, $f5, $f2, $f0, $ef, $ee, $ee, $ee, $ee, $f0, $f1
13500     F1 F0 EF ED 
13504     EC EA E8 E7 
13508     E7 E6 E6 E6 
1350c     E6 E7 E8 E9 | 	byte	$f1, $f0, $ef, $ed, $ec, $ea, $e8, $e7, $e7, $e6, $e6, $e6, $e6, $e7, $e8, $e9
13510     EB EE F2 F6 
13514     FB FF 04 07 
13518     0B 0F 13 16 
1351c     19 1B 1D 1F | 	byte	$eb, $ee, $f2, $f6, $fb, $ff, $04, $07, $0b, $0f, $13, $16, $19, $1b, $1d, $1f
13520     20 22 23 23 
13524     23 22 20 1F 
13528     1C 19 15 12 
1352c     0E 0A 05 01 | 	byte	$20, $22, $23, $23, $23, $22, $20, $1f, $1c, $19, $15, $12, $0e, $0a, $05, $01
13530     FD F8 F4 F0 
13534     ED EB E9 E7 
13538     E5 E4 E4 E4 
1353c     E5 E7 EA ED | 	byte	$fd, $f8, $f4, $f0, $ed, $eb, $e9, $e7, $e5, $e4, $e4, $e4, $e5, $e7, $ea, $ed
13540     F0 F3 F4 F5 
13544     F5 F4 F4 F4 
13548     F4 F4 F4 F6 
1354c     F7 F9 FB FD | 	byte	$f0, $f3, $f4, $f5, $f5, $f4, $f4, $f4, $f4, $f4, $f4, $f6, $f7, $f9, $fb, $fd
13550     FF 03 07 0B 
13554     0F 14 17 1A 
13558     1C 1E 20 21 
1355c     23 24 24 23 | 	byte	$ff, $03, $07, $0b, $0f, $14, $17, $1a, $1c, $1e, $20, $21, $23, $24, $24, $23
13560     22 1E 1A 15 
13564     0F 09 04 00 
13568     FC F8 F5 F2 
1356c     EF ED EC EC | 	byte	$22, $1e, $1a, $15, $0f, $09, $04, $00, $fc, $f8, $f5, $f2, $ef, $ed, $ec, $ec
13570     EC EE F0 F3 
13574     F8 FC 01 05 
13578     09 0E 12 16 
1357c     1A 1E 20 22 | 	byte	$ec, $ee, $f0, $f3, $f8, $fc, $01, $05, $09, $0e, $12, $16, $1a, $1e, $20, $22
13580     23 23 22 21 
13584     1F 1D 1B 1A 
13588     18 16 15 14 
1358c     13 11 10 0F | 	byte	$23, $23, $22, $21, $1f, $1d, $1b, $1a, $18, $16, $15, $14, $13, $11, $10, $0f
13590     0D 0C 0A 08 
13594     05 03 01 FF 
13598     FD FC FB FA 
1359c     F8 F7 F5 F3 | 	byte	$0d, $0c, $0a, $08, $05, $03, $01, $ff, $fd, $fc, $fb, $fa, $f8, $f7, $f5, $f3
135a0     F1 EF ED EB 
135a4     E8 E6 E6 E6 
135a8     E6 E7 E8 EA 
135ac     EB ED EF F0 | 	byte	$f1, $ef, $ed, $eb, $e8, $e6, $e6, $e6, $e6, $e7, $e8, $ea, $eb, $ed, $ef, $f0
135b0     F2 F4 F5 F7 
135b4     F8 F9 FA FB 
135b8     FC FD FC FB 
135bc     FA F8 F5 F3 | 	byte	$f2, $f4, $f5, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fc, $fb, $fa, $f8, $f5, $f3
135c0     F1 F0 F0 F0 
135c4     F0 F0 F1 F1 
135c8     F1 F0 EF EE 
135cc     EC EB EA E9 | 	byte	$f1, $f0, $f0, $f0, $f0, $f0, $f1, $f1, $f1, $f0, $ef, $ee, $ec, $eb, $ea, $e9
135d0     E8 E7 E6 E5 
135d4     E5 E5 E6 E7 
135d8     E9 EC EF F2 
135dc     F6 FA FE 02 | 	byte	$e8, $e7, $e6, $e5, $e5, $e5, $e6, $e7, $e9, $ec, $ef, $f2, $f6, $fa, $fe, $02
135e0     07 0B 0E 12 
135e4     15 18 1A 1C 
135e8     1F 20 22 23 
135ec     23 23 21 20 | 	byte	$07, $0b, $0e, $12, $15, $18, $1a, $1c, $1f, $20, $22, $23, $23, $23, $21, $20
135f0     1F 1D 1A 16 
135f4     12 0E 09 05 
135f8     01 FD F9 F6 
135fc     F3 EF EC E9 | 	byte	$1f, $1d, $1a, $16, $12, $0e, $09, $05, $01, $fd, $f9, $f6, $f3, $ef, $ec, $e9
13600     E6 E4 E4 E4 
13604     E5 E7 EA ED 
13608     F0 F1 F2 F3 
1360c     F3 F3 F3 F4 | 	byte	$e6, $e4, $e4, $e4, $e5, $e7, $ea, $ed, $f0, $f1, $f2, $f3, $f3, $f3, $f3, $f4
13610     F4 F4 F4 F4 
13614     F5 F5 F7 F9 
13618     FC FF 04 08 
1361c     0C 10 13 15 | 	byte	$f4, $f4, $f4, $f4, $f5, $f5, $f7, $f9, $fc, $ff, $04, $08, $0c, $10, $13, $15
13620     17 1A 1D 21 
13624     24 26 27 25 
13628     23 20 1C 18 
1362c     13 0F 0A 05 | 	byte	$17, $1a, $1d, $21, $24, $26, $27, $25, $23, $20, $1c, $18, $13, $0f, $0a, $05
13630     01 FD F9 F5 
13634     F1 EF ED EC 
13638     EC ED EE F1 
1363c     F3 F7 FB FF | 	byte	$01, $fd, $f9, $f5, $f1, $ef, $ed, $ec, $ec, $ed, $ee, $f1, $f3, $f7, $fb, $ff
13640     04 09 0E 12 
13644     17 1A 1D 20 
13648     21 22 21 21 
1364c     20 1E 1D 1B | 	byte	$04, $09, $0e, $12, $17, $1a, $1d, $20, $21, $22, $21, $21, $20, $1e, $1d, $1b
13650     1A 18 16 15 
13654     14 14 13 12 
13658     10 0E 0C 0A 
1365c     08 05 03 01 | 	byte	$1a, $18, $16, $15, $14, $14, $13, $12, $10, $0e, $0c, $0a, $08, $05, $03, $01
13660     00 FE FD FC 
13664     FB F9 F8 F6 
13668     F3 F1 EE EC 
1366c     EA E8 E7 E6 | 	byte	$00, $fe, $fd, $fc, $fb, $f9, $f8, $f6, $f3, $f1, $ee, $ec, $ea, $e8, $e7, $e6
13670     E6 E7 E7 E8 
13674     E9 EB ED EE 
13678     F0 F1 F3 F4 
1367c     F6 F8 FA FC | 	byte	$e6, $e7, $e7, $e8, $e9, $eb, $ed, $ee, $f0, $f1, $f3, $f4, $f6, $f8, $fa, $fc
13680     FD FD FD FB 
13684     FA F8 F6 F4 
13688     F2 F1 F1 F1 
1368c     F1 F2 F1 F1 | 	byte	$fd, $fd, $fd, $fb, $fa, $f8, $f6, $f4, $f2, $f1, $f1, $f1, $f1, $f2, $f1, $f1
13690     F1 F1 F0 EF 
13694     EE ED EC EA 
13698     E9 E7 E6 E5 
1369c     E5 E5 E5 E6 | 	byte	$f1, $f1, $f0, $ef, $ee, $ed, $ec, $ea, $e9, $e7, $e6, $e5, $e5, $e5, $e5, $e6
136a0     E7 E9 EB EE 
136a4     F2 F6 FA FE 
136a8     02 06 09 0D 
136ac     10 14 17 1A | 	byte	$e7, $e9, $eb, $ee, $f2, $f6, $fa, $fe, $02, $06, $09, $0d, $10, $14, $17, $1a
136b0     1C 1E 20 21 
136b4     22 23 24 23 
136b8     22 1F 1D 19 
136bc     15 11 0E 0A | 	byte	$1c, $1e, $20, $21, $22, $23, $24, $23, $22, $1f, $1d, $19, $15, $11, $0e, $0a
136c0     06 03 FF FC 
136c4     F7 F3 EE EA 
136c8     E8 E6 E5 E6 
136cc     E7 E9 EA EC | 	byte	$06, $03, $ff, $fc, $f7, $f3, $ee, $ea, $e8, $e6, $e5, $e6, $e7, $e9, $ea, $ec
136d0     ED EF F0 F1 
136d4     F2 F2 F3 F4 
136d8     F4 F3 F3 F2 
136dc     F2 F2 F4 F7 | 	byte	$ed, $ef, $f0, $f1, $f2, $f2, $f3, $f4, $f4, $f3, $f3, $f2, $f2, $f2, $f4, $f7
136e0     FA FE 01 04 
136e4     07 09 0C 0F 
136e8     14 18 1C 20 
136ec     23 25 26 25 | 	byte	$fa, $fe, $01, $04, $07, $09, $0c, $0f, $14, $18, $1c, $20, $23, $25, $26, $25
136f0     24 22 1F 1C 
136f4     18 14 10 0B 
136f8     06 01 FC F8 
136fc     F5 F2 EF EE | 	byte	$24, $22, $1f, $1c, $18, $14, $10, $0b, $06, $01, $fc, $f8, $f5, $f2, $ef, $ee
13700     ED ED ED EE 
13704     F0 F2 F6 FA 
13708     FF 04 09 0E 
1370c     13 16 1A 1D | 	byte	$ed, $ed, $ed, $ee, $f0, $f2, $f6, $fa, $ff, $04, $09, $0e, $13, $16, $1a, $1d
13710     1F 20 21 21 
13714     20 1F 1D 1C 
13718     1B 1A 19 18 
1371c     16 16 15 13 | 	byte	$1f, $20, $21, $21, $20, $1f, $1d, $1c, $1b, $1a, $19, $18, $16, $16, $15, $13
13720     12 10 0E 0C 
13724     0A 07 05 03 
13728     02 01 00 FF 
1372c     FE FC FA F8 | 	byte	$12, $10, $0e, $0c, $0a, $07, $05, $03, $02, $01, $00, $ff, $fe, $fc, $fa, $f8
13730     F5 F3 F0 EE 
13734     EB E9 E8 E7 
13738     E7 E7 E7 E8 
1373c     E9 E9 EA EB | 	byte	$f5, $f3, $f0, $ee, $eb, $e9, $e8, $e7, $e7, $e7, $e7, $e8, $e9, $e9, $ea, $eb
13740     ED EE F0 F2 
13744     F5 F7 FA FB 
13748     FD FD FC FB 
1374c     FA F8 F7 F5 | 	byte	$ed, $ee, $f0, $f2, $f5, $f7, $fa, $fb, $fd, $fd, $fc, $fb, $fa, $f8, $f7, $f5
13750     F4 F3 F3 F2 
13754     F2 F2 F2 F2 
13758     F2 F2 F1 F1 
1375c     F0 EE ED EB | 	byte	$f4, $f3, $f3, $f2, $f2, $f2, $f2, $f2, $f2, $f2, $f1, $f1, $f0, $ee, $ed, $eb
13760     EA E8 E7 E6 
13764     E5 E4 E4 E4 
13768     E5 E7 E9 EC 
1376c     EF F2 F5 F8 | 	byte	$ea, $e8, $e7, $e6, $e5, $e4, $e4, $e4, $e5, $e7, $e9, $ec, $ef, $f2, $f5, $f8
13770     FC 01 05 09 
13774     0D 10 13 16 
13778     18 1B 1D 20 
1377c     22 23 24 24 | 	byte	$fc, $01, $05, $09, $0d, $10, $13, $16, $18, $1b, $1d, $20, $22, $23, $24, $24
13780     23 21 1E 1B 
13784     18 16 13 10 
13788     0D 09 05 00 
1378c     FB F6 F2 EE | 	byte	$23, $21, $1e, $1b, $18, $16, $13, $10, $0d, $09, $05, $00, $fb, $f6, $f2, $ee
13790     EB E9 E8 E8 
13794     E9 E9 EA EB 
13798     EB ED EF F1 
1379c     F2 F3 F4 F3 | 	byte	$eb, $e9, $e8, $e8, $e9, $e9, $ea, $eb, $eb, $ed, $ef, $f1, $f2, $f3, $f4, $f3
137a0     F2 F1 F0 F0 
137a4     F1 F2 F4 F6 
137a8     F9 FB FD FE 
137ac     01 04 07 0C | 	byte	$f2, $f1, $f0, $f0, $f1, $f2, $f4, $f6, $f9, $fb, $fd, $fe, $01, $04, $07, $0c
137b0     10 15 1A 1E 
137b4     21 23 24 25 
137b8     25 24 22 20 
137bc     1C 18 14 0F | 	byte	$10, $15, $1a, $1e, $21, $23, $24, $25, $25, $24, $22, $20, $1c, $18, $14, $0f
137c0     0A 05 01 FC 
137c4     F9 F6 F3 F0 
137c8     EE ED EC EC 
137cc     ED EF F2 F6 | 	byte	$0a, $05, $01, $fc, $f9, $f6, $f3, $f0, $ee, $ed, $ec, $ec, $ed, $ef, $f2, $f6
137d0     FA FF 04 09 
137d4     0E 12 16 1A 
137d8     1C 1E 1F 20 
137dc     20 1F 1E 1D | 	byte	$fa, $ff, $04, $09, $0e, $12, $16, $1a, $1c, $1e, $1f, $20, $20, $1f, $1e, $1d
137e0     1C 1B 1A 19 
137e4     18 18 17 16 
137e8     14 13 10 0E 
137ec     0B 09 08 06 | 	byte	$1c, $1b, $1a, $19, $18, $18, $17, $16, $14, $13, $10, $0e, $0b, $09, $08, $06
137f0     05 03 02 01 
137f4     00 FF FD FB 
137f8     F8 F5 F2 F0 
137fc     ED EB E9 E8 | 	byte	$05, $03, $02, $01, $00, $ff, $fd, $fb, $f8, $f5, $f2, $f0, $ed, $eb, $e9, $e8
13800     E8 E8 E8 E8 
13804     E8 E8 E8    | 	byte	$e8[7]
13807     E9 EA EC EE 
1380b     F1 F4 F6 F9 
1380f     FA FC FC FC 
13813     FB FA F9 F8 | 	byte	$e9, $ea, $ec, $ee, $f1, $f4, $f6, $f9, $fa, $fc, $fc, $fc, $fb, $fa, $f9, $f8
13817     F7 F6 F4 F3 
1381b     F3 F3 F3 F3 
1381f     F3 F3 F2 F2 
13823     F1 F0 F0 EF | 	byte	$f7, $f6, $f4, $f3, $f3, $f3, $f3, $f3, $f3, $f3, $f2, $f2, $f1, $f0, $f0, $ef
13827     ED EC EA E8 
1382b     E6 E5 E5 E4 
1382f     E5 E5 E6 E7 
13833     E9 EB EE F1 | 	byte	$ed, $ec, $ea, $e8, $e6, $e5, $e5, $e4, $e5, $e5, $e6, $e7, $e9, $eb, $ee, $f1
13837     F4 F9 FD 01 
1383b     04 08 0B 0D 
1383f     10 14 18 1C 
13843     1F 22 23 24 | 	byte	$f4, $f9, $fd, $01, $04, $08, $0b, $0d, $10, $14, $18, $1c, $1f, $22, $23, $24
13847     23 22 21 1F 
1384b     1E 1C 1A 18 
1384f     15 11 0D 09 
13853     04 FE FA F6 | 	byte	$23, $22, $21, $1f, $1e, $1c, $1a, $18, $15, $11, $0d, $09, $04, $fe, $fa, $f6
13857     F2 F0 ED EB 
1385b     EA E9 E9 E9 
1385f     EA EB EE F0 
13863     F1 F2 F3 F2 | 	byte	$f2, $f0, $ed, $eb, $ea, $e9, $e9, $e9, $ea, $eb, $ee, $f0, $f1, $f2, $f3, $f2
13867     F1 F0 F0 F0 
1386b     F0 F1 F2 F4 
1386f     F5 F5 F6 F8 
13873     FA FD 00 04 | 	byte	$f1, $f0, $f0, $f0, $f0, $f1, $f2, $f4, $f5, $f5, $f6, $f8, $fa, $fd, $00, $04
13877     08 0C 11 15 
1387b     1A 1D 20 22 
1387f     24 25 26 24 
13883     23 20 1C 18 | 	byte	$08, $0c, $11, $15, $1a, $1d, $20, $22, $24, $25, $26, $24, $23, $20, $1c, $18
13887     13 0F 0A 06 
1388b     02 FD FA F6 
1388f     F3 F0 EE EC 
13893     EC EC ED EF | 	byte	$13, $0f, $0a, $06, $02, $fd, $fa, $f6, $f3, $f0, $ee, $ec, $ec, $ec, $ed, $ef
13897     F1 F5 FA FF 
1389b     04 09 0E 12 
1389f     15 19 1B 1D 
138a3     1E 1F 1E 1E | 	byte	$f1, $f5, $fa, $ff, $04, $09, $0e, $12, $15, $19, $1b, $1d, $1e, $1f, $1e, $1e
138a7     1D 1C 1C 1B 
138ab     1B 1A 1A 19 
138af     17 16 14 12 
138b3     10 0D 0B 0A | 	byte	$1d, $1c, $1c, $1b, $1b, $1a, $1a, $19, $17, $16, $14, $12, $10, $0d, $0b, $0a
138b7     08 07 06 05 
138bb     04 03 02 00 
138bf     FD FB F8 F4 
138c3     F2 EF ED EC | 	byte	$08, $07, $06, $05, $04, $03, $02, $00, $fd, $fb, $f8, $f4, $f2, $ef, $ed, $ec
138c7     EA E9 E9 E8 
138cb     E7 E7 E6 E6 
138cf     E7 E8 EA ED 
138d3     EF F2 F5 F6 | 	byte	$ea, $e9, $e9, $e8, $e7, $e7, $e6, $e6, $e7, $e8, $ea, $ed, $ef, $f2, $f5, $f6
138d7     F8 FA FB FC 
138db     FC FB FA F8 
138df     F7 F6 F5 F5 
138e3     F4 F4 F3 F3 | 	byte	$f8, $fa, $fb, $fc, $fc, $fb, $fa, $f8, $f7, $f6, $f5, $f5, $f4, $f4, $f3, $f3
138e7     F3 F3 F3 F3 
138eb     F3          | 	byte	$f3[5]
138ec     F2 F1 F0 EF 
138f0     ED EB E9 E8 
138f4     E7 E6 E5 E5 
138f8     E5 E5 E5 E6 | 	byte	$f2, $f1, $f0, $ef, $ed, $eb, $e9, $e8, $e7, $e6, $e5, $e5, $e5, $e5, $e5, $e6
138fc     E8 EB EE F2 
13900     F5 F9 FC FE 
13904     01 05 08 0C 
13908     11 15 19 1D | 	byte	$e8, $eb, $ee, $f2, $f5, $f9, $fc, $fe, $01, $05, $08, $0c, $11, $15, $19, $1d
1390c     1F 21 22 22 
13910     21 21 21 21 
13914     1F 1E 1C 19 
13918     15 11 0C 08 | 	byte	$1f, $21, $22, $22, $21, $21, $21, $21, $1f, $1e, $1c, $19, $15, $11, $0c, $08
1391c     03 FF FB F8 
13920     F4 F1 ED EB 
13924     EA E9 EA EB 
13928     ED EF F0 F1 | 	byte	$03, $ff, $fb, $f8, $f4, $f1, $ed, $eb, $ea, $e9, $ea, $eb, $ed, $ef, $f0, $f1
1392c     F1 F1 F0 F0 
13930     F0 F0 F1 F1 
13934     F2 F2 F2 F3 
13938     F3 F3 F4 F6 | 	byte	$f1, $f1, $f0, $f0, $f0, $f0, $f1, $f1, $f2, $f2, $f2, $f3, $f3, $f3, $f4, $f6
1393c     F9 FC 00 04 
13940     08 0C 10 15 
13944     19 1D 21 24 
13948     25 26 26 24 | 	byte	$f9, $fc, $00, $04, $08, $0c, $10, $15, $19, $1d, $21, $24, $25, $26, $26, $24
1394c     22 1F 1B 17 
13950     13 0F 0B 06 
13954     02 FE FA F7 
13958     F4 F0 EE EC | 	byte	$22, $1f, $1b, $17, $13, $0f, $0b, $06, $02, $fe, $fa, $f7, $f4, $f0, $ee, $ec
1395c     EB EB ED EF 
13960     F2 F5 FA FE 
13964     03 09 0D 12 
13968     15 18 1A 1C | 	byte	$eb, $eb, $ed, $ef, $f2, $f5, $fa, $fe, $03, $09, $0d, $12, $15, $18, $1a, $1c
1396c     1D 1D 1D 1C 
13970     1C 1C 1C 1C 
13974     1C 1B 1A 19 
13978     18 16 14 11 | 	byte	$1d, $1d, $1d, $1c, $1c, $1c, $1c, $1c, $1c, $1b, $1a, $19, $18, $16, $14, $11
1397c     0F 0D 0C 0A 
13980     0A 09 08 07 
13984     06 04 02 00 
13988     FD FA F7 F4 | 	byte	$0f, $0d, $0c, $0a, $0a, $09, $08, $07, $06, $04, $02, $00, $fd, $fa, $f7, $f4
1398c     F2 F0 EE ED 
13990     EC EA E8 E7 
13994     E6 E6 E6 E6 
13998     E7 E9 EA EC | 	byte	$f2, $f0, $ee, $ed, $ec, $ea, $e8, $e7, $e6, $e6, $e6, $e6, $e7, $e9, $ea, $ec
1399c     EF F2 F5 F7 
139a0     F9 FA FB FB 
139a4     FA FA F9 F8 
139a8     F7 F7 F6 F5 | 	byte	$ef, $f2, $f5, $f7, $f9, $fa, $fb, $fb, $fa, $fa, $f9, $f8, $f7, $f7, $f6, $f5
139ac     F4 F4 F3 F3 
139b0     F4 F4 F4 F4 
139b4     F3 F2 F1 EF 
139b8     EE ED EB EA | 	byte	$f4, $f4, $f3, $f3, $f4, $f4, $f4, $f4, $f3, $f2, $f1, $ef, $ee, $ed, $eb, $ea
139bc     E8 E7 E5 E4 
139c0     E3 E3 E4 E5 
139c4     E7 EA EC EF 
139c8     F1 F4 F6 F9 | 	byte	$e8, $e7, $e5, $e4, $e3, $e3, $e4, $e5, $e7, $ea, $ec, $ef, $f1, $f4, $f6, $f9
139cc     FC FF 04 09 
139d0     0E 12 16 19 
139d4     1B 1C 1E 1F 
139d8     21 22 23 23 | 	byte	$fc, $ff, $04, $09, $0e, $12, $16, $19, $1b, $1c, $1e, $1f, $21, $22, $23, $23
139dc     22 21 1E 1B 
139e0     18 14 11 0D 
139e4     09 05 00 FC 
139e8     F7 F3 F0 EE | 	byte	$22, $21, $1e, $1b, $18, $14, $11, $0d, $09, $05, $00, $fc, $f7, $f3, $f0, $ee
139ec     ED EC EC ED 
139f0     EE EF EF F0 
139f4     F0 F0 F0 F0 
139f8     F0 F1 F2 F2 | 	byte	$ed, $ec, $ec, $ed, $ee, $ef, $ef, $f0, $f0, $f0, $f0, $f0, $f0, $f1, $f2, $f2
139fc     F1 F1 F1 F1 
13a00     F1 F1       | 	byte	$f1[6]
13a02     F3 F5 F7 F9 
13a06     FC FF 02 07 
13a0a     0B 10 15 1A 
13a0e     1E 21 24 25 | 	byte	$f3, $f5, $f7, $f9, $fc, $ff, $02, $07, $0b, $10, $15, $1a, $1e, $21, $24, $25
13a12     26 25 24 21 
13a16     1E 1B 17 13 
13a1a     0F 0B 07 03 
13a1e     FF FA F6 F3 | 	byte	$26, $25, $24, $21, $1e, $1b, $17, $13, $0f, $0b, $07, $03, $ff, $fa, $f6, $f3
13a22     F0 EE EC EB 
13a26     EB EC EE F1 
13a2a     F5 FA FF 04 
13a2e     09 0E 12 15 | 	byte	$f0, $ee, $ec, $eb, $eb, $ec, $ee, $f1, $f5, $fa, $ff, $04, $09, $0e, $12, $15
13a32     17 19 1A 1B 
13a36     1B 1C 1C 1C 
13a3a     1D 1D 1D 1D 
13a3e     1C 1A 19 17 | 	byte	$17, $19, $1a, $1b, $1b, $1c, $1c, $1c, $1d, $1d, $1d, $1d, $1c, $1a, $19, $17
13a42     15 13 11 0F 
13a46     0E 0D 0C 0B 
13a4a     0B 0A 08 07 
13a4e     04 01 FF FC | 	byte	$15, $13, $11, $0f, $0e, $0d, $0c, $0b, $0b, $0a, $08, $07, $04, $01, $ff, $fc
13a52     FA F8 F6 F3 
13a56     F1 EF ED EB 
13a5a     EA E8 E7 E6 
13a5e     E5 E5 E5 E6 | 	byte	$fa, $f8, $f6, $f3, $f1, $ef, $ed, $eb, $ea, $e8, $e7, $e6, $e5, $e5, $e5, $e6
13a62     E8 EB ED F0 
13a66     F3 F5 F7 F8 
13a6a     F9 FA FA FA 
13a6e     FA F9 F8 F7 | 	byte	$e8, $eb, $ed, $f0, $f3, $f5, $f7, $f8, $f9, $fa, $fa, $fa, $fa, $f9, $f8, $f7
13a72     F6 F5 F5 F5 
13a76     F5 F5 F5 F5 
13a7a     F5 F4 F4 F3 
13a7e     F2 F2 F0 EF | 	byte	$f6, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f4, $f4, $f3, $f2, $f2, $f0, $ef
13a82     EE EC E9 E7 
13a86     E5 E4 E3 E3 
13a8a     E4 E6 E7 E9 
13a8e     EA EB EC EE | 	byte	$ee, $ec, $e9, $e7, $e5, $e4, $e3, $e3, $e4, $e6, $e7, $e9, $ea, $eb, $ec, $ee
13a92     F0 F4 F8 FC 
13a96     01 06 0A 0D 
13a9a     11 13 16 19 
13a9e     1C 1F 21 22 | 	byte	$f0, $f4, $f8, $fc, $01, $06, $0a, $0d, $11, $13, $16, $19, $1c, $1f, $21, $22
13aa2     23 23 22 21 
13aa6     1F 1E 1C 19 
13aaa     16 12 0E 09 
13aae     04 FF FB F6 | 	byte	$23, $23, $22, $21, $1f, $1e, $1c, $19, $16, $12, $0e, $09, $04, $ff, $fb, $f6
13ab2     F3 F1 F0 EF 
13ab6     EF EF EF EE 
13aba     EE EF EF EF 
13abe     F0 F1 F1 F2 | 	byte	$f3, $f1, $f0, $ef, $ef, $ef, $ef, $ee, $ee, $ef, $ef, $ef, $f0, $f1, $f1, $f2
13ac2     F2 F1 F0 F0 
13ac6     F0 F0 F0 F1 
13aca     F1 F2 F3 F5 
13ace     F8 FB FE 02 | 	byte	$f2, $f1, $f0, $f0, $f0, $f0, $f0, $f1, $f1, $f2, $f3, $f5, $f8, $fb, $fe, $02
13ad2     06 0B 10 15 
13ad6     1A 1E 22 24 
13ada     25 25 24 23 
13ade     21 1E 1B 18 | 	byte	$06, $0b, $10, $15, $1a, $1e, $22, $24, $25, $25, $24, $23, $21, $1e, $1b, $18
13ae2     14 10 0C 07 
13ae6     03 FF FB F7 
13aea     F3 F0 EE EC 
13aee     EB EB EC EE | 	byte	$14, $10, $0c, $07, $03, $ff, $fb, $f7, $f3, $f0, $ee, $ec, $eb, $eb, $ec, $ee
13af2     F1 F5 FA FF 
13af6     04 09 0D 11 
13afa     13 15 17 18 
13afe     19 1A 1B 1C | 	byte	$f1, $f5, $fa, $ff, $04, $09, $0d, $11, $13, $15, $17, $18, $19, $1a, $1b, $1c
13b02     1D 1D 1D 1D 
13b06     1D          | 	byte	$1d[5]
13b07     1C 1A 18 16 
13b0b     14 12 11 10 
13b0f     0F 0F 0E 0C 
13b13     0B 0A 08 07 | 	byte	$1c, $1a, $18, $16, $14, $12, $11, $10, $0f, $0f, $0e, $0c, $0b, $0a, $08, $07
13b17     05 02 00 FD 
13b1b     FB F8 F6 F4 
13b1f     F2 F0 EE EC 
13b23     EA E8 E6 E4 | 	byte	$05, $02, $00, $fd, $fb, $f8, $f6, $f4, $f2, $f0, $ee, $ec, $ea, $e8, $e6, $e4
13b27     E4 E4 E5 E7 
13b2b     EA EC EE F0 
13b2f     F2 F4 F6 F8 
13b33     F9 FA FA F9 | 	byte	$e4, $e4, $e5, $e7, $ea, $ec, $ee, $f0, $f2, $f4, $f6, $f8, $f9, $fa, $fa, $f9
13b37     F9 F8 F7 F7 
13b3b     F6 F6 F6 F5 
13b3f     F5 F5 F5 F4 
13b43     F4 F4 F4 F4 | 	byte	$f9, $f8, $f7, $f7, $f6, $f6, $f6, $f5, $f5, $f5, $f5, $f4, $f4, $f4, $f4, $f4
13b47     F4 F3 F1 EF 
13b4b     ED EA E8 E6 
13b4f     E5 E5 E5 E6 
13b53     E6 E7 E7 E7 | 	byte	$f4, $f3, $f1, $ef, $ed, $ea, $e8, $e6, $e5, $e5, $e5, $e6, $e6, $e7, $e7, $e7
13b57     E8 E8 EA ED 
13b5b     F1 F5 F9 FD 
13b5f     00 04 07 0B 
13b63     0F 13 16 1A | 	byte	$e8, $e8, $ea, $ed, $f1, $f5, $f9, $fd, $00, $04, $07, $0b, $0f, $13, $16, $1a
13b67     1C 1F 20 21 
13b6b     22 22 22 22 
13b6f     21 1F 1D 1A 
13b73     16 12 0D 08 | 	byte	$1c, $1f, $20, $21, $22, $22, $22, $22, $21, $1f, $1d, $1a, $16, $12, $0d, $08
13b77     03 FF FB F8 
13b7b     F6 F4 F2 F1 
13b7f     F0 EF EE EE 
13b83     EF F0 F0 F1 | 	byte	$03, $ff, $fb, $f8, $f6, $f4, $f2, $f1, $f0, $ef, $ee, $ee, $ef, $f0, $f0, $f1
13b87     F1 F1 F1 F1 
13b8b     F1 F1       | 	byte	$f1[6]
13b8d     F0 F0 F0 F0 
13b91     F0 F0       | 	byte	$f0[6]
13b93     F1 F2 F3 F4 
13b97     F6 F9 FD 01 
13b9b     07 0C 11 16 
13b9f     1B 1E 21 23 | 	byte	$f1, $f2, $f3, $f4, $f6, $f9, $fd, $01, $07, $0c, $11, $16, $1b, $1e, $21, $23
13ba3     24 25 24 23 
13ba7     21 1E 1B 00 
13bab     00 00 00 01 
13baf     04 04 05 07 | 	byte	$24, $25, $24, $23, $21, $1e, $1b, $00, $00, $00, $00, $01, $04, $04, $05, $07
13bb3     FF F8 FC FF 
13bb7     FD FC 02 03 
13bbb     FD FA FA FF 
13bbf     05 06 07 04 | 	byte	$ff, $f8, $fc, $ff, $fd, $fc, $02, $03, $fd, $fa, $fa, $ff, $05, $06, $07, $04
13bc3     FA FE 03 05 
13bc7     00 FE 02 05 
13bcb     FD F4 FB 03 
13bcf     06 05 06 04 | 	byte	$fa, $fe, $03, $05, $00, $fe, $02, $05, $fd, $f4, $fb, $03, $06, $05, $06, $04
13bd3     F9 F9 FD 00 
13bd7     FC FE 04 04 
13bdb     FD FB FB 00 
13bdf     06 07 07 00 | 	byte	$f9, $f9, $fd, $00, $fc, $fe, $04, $04, $fd, $fb, $fb, $00, $06, $07, $07, $00
13be3     F9 FF 04 02 
13be7     FD FF 03 03 
13beb     F8 F4 FC 04 
13bef     07 06 06 FC | 	byte	$f9, $ff, $04, $02, $fd, $ff, $03, $03, $f8, $f4, $fc, $04, $07, $06, $06, $fc
13bf3     F6 FB 00 01 
13bf7     FD 00 05 05 
13bfb     FD FD FC 02 
13bff     07 08 07 FB | 	byte	$f6, $fb, $00, $01, $fd, $00, $05, $05, $fd, $fd, $fc, $02, $07, $08, $07, $fb
13c03     F8 00 03 FF 
13c07     FD 00 03 FF 
13c0b     F6 F6 FD 05 
13c0f     08 07 01 F6 | 	byte	$f8, $00, $03, $ff, $fd, $00, $03, $ff, $f6, $f6, $fd, $05, $08, $07, $01, $f6
13c13     F8 FD 01 01 
13c17     FD 02 07 06 
13c1b     FE FE FD 04 
13c1f     08 09 05 F8 | 	byte	$f8, $fd, $01, $01, $fd, $02, $07, $06, $fe, $fe, $fd, $04, $08, $09, $05, $f8
13c23     FA 01 01 FC 
13c27     FE 02 02 FB 
13c2b     F6 F8 FF 07 
13c2f     09 05 F8 F5 | 	byte	$fa, $01, $01, $fc, $fe, $02, $02, $fb, $f6, $f8, $ff, $07, $09, $05, $f8, $f5
13c33     FA FF 03 01 
13c37     FF 06 09 06 
13c3b     00 00 FE 05 
13c3f     0A 0A 00 F6 | 	byte	$fa, $ff, $03, $01, $ff, $06, $09, $06, $00, $00, $fe, $05, $0a, $0a, $00, $f6
13c43     FB 00 FD FC 
13c47     00 02 FF F9 
13c4b     F7 F9 01 09 
13c4f     0A FD F3 F9 | 	byte	$fb, $00, $fd, $fc, $00, $02, $ff, $f9, $f7, $f9, $01, $09, $0a, $fd, $f3, $f9
13c53     FD 01 04 01 
13c57     01 07 0B 07 
13c5b     01 01 FF 07 
13c5f     0A 08 FB F5 | 	byte	$fd, $01, $04, $01, $01, $07, $0b, $07, $01, $01, $ff, $07, $0a, $08, $fb, $f5
13c63     FC FD FB FD 
13c67     01 01 FB F8 
13c6b     F8 FA 02 0A 
13c6f     05 F4 F6 FA | 	byte	$fc, $fd, $fb, $fd, $01, $01, $fb, $f8, $f8, $fa, $02, $0a, $05, $f4, $f6, $fa
13c73     FF 03 05 02 
13c77     03 0A 0C 07 
13c7b     02 02 01 08 
13c7f     0B 06 F7 F6 | 	byte	$ff, $03, $05, $02, $03, $0a, $0c, $07, $02, $02, $01, $08, $0b, $06, $f7, $f6
13c83     FB FA FB FF 
13c87     01 FF F9 F8 
13c8b     F9 FB 03 09 
13c8f     FB F3 F8 FD | 	byte	$fb, $fa, $fb, $ff, $01, $ff, $f9, $f8, $f9, $fb, $03, $09, $fb, $f3, $f8, $fd
13c93     01 05 06 03 
13c97     06 0C 0D 07 
13c9b     03 04 02 09 
13c9f     0C 02 F4 F8 | 	byte	$01, $05, $06, $03, $06, $0c, $0d, $07, $03, $04, $02, $09, $0c, $02, $f4, $f8
13ca3     F8 F8 FD 00 
13ca7     00 FC F7 FB 
13cab     FB FC 05 01 
13caf     F5 F7 FA 00 | 	byte	$f8, $f8, $fd, $00, $00, $fc, $f7, $fb, $fb, $fc, $05, $01, $f5, $f7, $fa, $00
13cb3     03 07 06 03 
13cb7     09 0E 0D 07 
13cbb     04 04 02 0A 
13cbf     0A FB F4 F7 | 	byte	$03, $07, $06, $03, $09, $0e, $0d, $07, $04, $04, $02, $0a, $0a, $fb, $f4, $f7
13cc3     F5 F8 FE 00 
13cc7     FE F7 F7 FC 
13ccb     FC FE 01 F8 
13ccf     F6 F9 FD 02 | 	byte	$f5, $f8, $fe, $00, $fe, $f7, $f7, $fc, $fc, $fe, $01, $f8, $f6, $f9, $fd, $02
13cd3     05 09 07 05 
13cd7     0B 10 0E 08 
13cdb     05 05 03 0B 
13cdf     07 F6 F5 F3 | 	byte	$05, $09, $07, $05, $0b, $10, $0e, $08, $05, $05, $03, $0b, $07, $f6, $f5, $f3
13ce3     F3 FA 00 FF 
13ce7     FB F5 FA FE 
13ceb     FD FD F6 F6 
13cef     FA FC 00 04 | 	byte	$f3, $fa, $00, $ff, $fb, $f5, $fa, $fe, $fd, $fd, $f6, $f6, $fa, $fc, $00, $04
13cf3     08 0A 07 07 
13cf7     0D 11 0F 07 
13cfb     06 06 05 0B 
13cff     02 F4 F4 F1 | 	byte	$08, $0a, $07, $07, $0d, $11, $0f, $07, $06, $06, $05, $0b, $02, $f4, $f4, $f1
13d03     F4 FC 00 FE 
13d07     F7 F5 FB 00 
13d0b     FD F5 F0 F9 
13d0f     FD FE 03 07 | 	byte	$f4, $fc, $00, $fe, $f7, $f5, $fb, $00, $fd, $f5, $f0, $f9, $fd, $fe, $03, $07
13d13     0B 0B 07 0A 
13d17     0F 12 0E 07 
13d1b     07 06 05 0A 
13d1f     FC F3 F1 EF | 	byte	$0b, $0b, $07, $0a, $0f, $12, $0e, $07, $07, $06, $05, $0a, $fc, $f3, $f1, $ef
13d23     F6 FD FE FA 
13d27     F4 F7 FD 01 
13d2b     F9 EB F2 FC 
13d2f     00 01 05 0A | 	byte	$f6, $fd, $fe, $fa, $f4, $f7, $fd, $01, $f9, $eb, $f2, $fc, $00, $01, $05, $0a
13d33     0D 0B 08 0B 
13d37     11 13 0E 06 
13d3b     08 07 07 06 
13d3f     F7 F1 ED F0 | 	byte	$0d, $0b, $08, $0b, $11, $13, $0e, $06, $08, $07, $07, $06, $f7, $f1, $ed, $f0
13d43     F7 FD FD F6 
13d47     F3 F9 FE 00 
13d4b     EF E8 F6 00 
13d4f     02 04 08 0C | 	byte	$f7, $fd, $fd, $f6, $f3, $f9, $fe, $00, $ef, $e8, $f6, $00, $02, $04, $08, $0c
13d53     0E 0B 09 0E 
13d57     13 14 0D 06 
13d5b     0A 08 07 02 
13d5f     F4 EE ED F2 | 	byte	$0e, $0b, $09, $0e, $13, $14, $0d, $06, $0a, $08, $07, $02, $f4, $ee, $ed, $f2
13d63     F8 FC FA F3 
13d67     F6 FB 00 FA 
13d6b     E6 EB F8 03 
13d6f     05 06 0A 0F | 	byte	$f8, $fc, $fa, $f3, $f6, $fb, $00, $fa, $e6, $eb, $f8, $03, $05, $06, $0a, $0f
13d73     10 0B 0B 10 
13d77     15 15 0C 07 
13d7b     0B 08 06 FB 
13d7f     F0 EB EE F4 | 	byte	$10, $0b, $0b, $10, $15, $15, $0c, $07, $0b, $08, $06, $fb, $f0, $eb, $ee, $f4
13d83     F8 FA F4 F2 
13d87     F8 FD FF EF 
13d8b     E6 EF FD 06 
13d8f     08 09 0D 11 | 	byte	$f8, $fa, $f4, $f2, $f8, $fd, $ff, $ef, $e6, $ef, $fd, $06, $08, $09, $0d, $11
13d93     11 0B 0C 12 
13d97     16 15 0A 07 
13d9b     0C 07 03 F6 
13d9f     EC EA EF F4 | 	byte	$11, $0b, $0c, $12, $16, $15, $0a, $07, $0c, $07, $03, $f6, $ec, $ea, $ef, $f4
13da3     F8 F6 F1 F5 
13da7     F9 FE F7 E9 
13dab     EA F2 00 08 
13daf     0A 0C 0F 13 | 	byte	$f8, $f6, $f1, $f5, $f9, $fe, $f7, $e9, $ea, $f2, $00, $08, $0a, $0c, $0f, $13
13db3     11 0B 0E 13 
13db7     17 15 09 09 
13dbb     0C 07 00 F0 
13dbf     E9 EB F1 F5 | 	byte	$11, $0b, $0e, $13, $17, $15, $09, $09, $0c, $07, $00, $f0, $e9, $eb, $f1, $f5
13dc3     F5 F0 F1 F7 
13dc7     FC FB EC EA 
13dcb     ED F5 03 0B 
13dcf     0D 0E 11 14 | 	byte	$f5, $f0, $f1, $f7, $fc, $fb, $ec, $ea, $ed, $f5, $03, $0b, $0d, $0e, $11, $14
13dd3     11 0C 10 15 
13dd7     18 12 07 0A 
13ddb     0D 07 F9 EA 
13ddf     E9 ED F2 F4 | 	byte	$11, $0c, $10, $15, $18, $12, $07, $0a, $0d, $07, $f9, $ea, $e9, $ed, $f2, $f4
13de3     EF ED F5 F9 
13de7     FC F1 E9 EF 
13deb     F0 F9 07 0E 
13def     10 10 13 16 | 	byte	$ef, $ed, $f5, $f9, $fc, $f1, $e9, $ef, $f0, $f9, $07, $0e, $10, $10, $13, $16
13df3     11 0E 11 17 
13df7     18 0F 08 0B 
13dfb     0D 04 F1 E6 
13dff     EA EE F2 F1 | 	byte	$11, $0e, $11, $17, $18, $0f, $08, $0b, $0d, $04, $f1, $e6, $ea, $ee, $f2, $f1
13e03     E9 EE F6 FB 
13e07     F9 E9 EB F2 
13e0b     F3 FB 0A 11 
13e0f     12 13 16 17 | 	byte	$e9, $ee, $f6, $fb, $f9, $e9, $eb, $f2, $f3, $fb, $0a, $11, $12, $13, $16, $17
13e13     10 0F 13 18 
13e17     17 0C 08 0C 
13e1b     0E 01 E8 E6 
13e1f     EC F0 F1 E8 | 	byte	$10, $0f, $13, $18, $17, $0c, $08, $0c, $0e, $01, $e8, $e6, $ec, $f0, $f1, $e8
13e23     E7 F1 F9 FC 
13e27     EE E6 F0 F5 
13e2b     F5 FF 0C 13 
13e2f     14 15 18 17 | 	byte	$e7, $f1, $f9, $fc, $ee, $e6, $f0, $f5, $f5, $ff, $0c, $13, $14, $15, $18, $17
13e33     11 10 15 19 
13e37     15 0B 0A 0D 
13e3b     0D F8 E3 E8 
13e3f     ED F0 EB E3 | 	byte	$11, $10, $15, $19, $15, $0b, $0a, $0d, $0d, $f8, $e3, $e8, $ed, $f0, $eb, $e3
13e43     E9 F3 FA F7 
13e47     E7 EB F3 F7 
13e4b     F8 03 0F 16 
13e4f     16 17 19 17 | 	byte	$e9, $f3, $fa, $f7, $e7, $eb, $f3, $f7, $f8, $03, $0f, $16, $16, $17, $19, $17
13e53     11 12 16 1A 
13e57     12 0A 0B 0E 
13e5b     0B EE E0 EA 
13e5f     EE EE E3 E3 | 	byte	$11, $12, $16, $1a, $12, $0a, $0b, $0e, $0b, $ee, $e0, $ea, $ee, $ee, $e3, $e3
13e63     EC F5 FA ED 
13e67     E5 EF F8 FB 
13e6b     FC 05 12 19 
13e6f     19 19 1B 17 | 	byte	$ec, $f5, $fa, $ed, $e5, $ef, $f8, $fb, $fc, $05, $12, $19, $19, $19, $1b, $17
13e73     12 13 17 18 
13e77     0E 0A 0B 0D 
13e7b     05 E8 E1 EB 
13e7f     EE E5 DE E7 | 	byte	$12, $13, $17, $18, $0e, $0a, $0b, $0d, $05, $e8, $e1, $eb, $ee, $e5, $de, $e7
13e83     EE F7 F5 E6 
13e87     EA F2 FA FD 
13e8b     FE 09 15 1B 
13e8f     1B 1B 1C 17 | 	byte	$ee, $f7, $f5, $e6, $ea, $f2, $fa, $fd, $fe, $09, $15, $1b, $1b, $1b, $1c, $17
13e93     13 14 17 15 
13e97     0B 0C 0C 0C 
13e9b     FF E3 E1 EC 
13e9f     EA DD E0 E9 | 	byte	$13, $14, $17, $15, $0b, $0c, $0c, $0c, $ff, $e3, $e1, $ec, $ea, $dd, $e0, $e9
13ea3     F1 F7 EC E5 
13ea7     EE F6 FE 00 
13eab     01 0B 18 1D 
13eaf     1D 1D 1C 15 | 	byte	$f1, $f7, $ec, $e5, $ee, $f6, $fe, $00, $01, $0b, $18, $1d, $1d, $1d, $1c, $15
13eb3     14 15 18 11 
13eb7     09 0D 0C 07 
13ebb     FB DF E4 EC 
13ebf     E0 DA E4 EC | 	byte	$14, $15, $18, $11, $09, $0d, $0c, $07, $fb, $df, $e4, $ec, $e0, $da, $e4, $ec
13ec3     F4 F2 E4 E9 
13ec7     F2 F9 01 03 
13ecb     04 0F 1B 1F 
13ecf     1F 1F 1B 16 | 	byte	$f4, $f2, $e4, $e9, $f2, $f9, $01, $03, $04, $0f, $1b, $1f, $1f, $1f, $1b, $16
13ed3     15 16 17 0B 
13ed7     0A 0E 09 04 
13edb     F6 DE E4 E4 
13edf     D8 DE E7 EF | 	byte	$15, $16, $17, $0b, $0a, $0e, $09, $04, $f6, $de, $e4, $e4, $d8, $de, $e7, $ef
13ee3     F4 E9 E3 ED 
13ee7     F6 FC 04 05 
13eeb     07 12 1E 21 
13eef     20 20 1B 16 | 	byte	$f4, $e9, $e3, $ed, $f6, $fc, $04, $05, $07, $12, $1e, $21, $20, $20, $1b, $16
13ef3     16 16 14 07 
13ef7     0A 0D 06 01 
13efb     F5 DC E3 DB 
13eff     D8 E1 E9 F1 | 	byte	$16, $16, $14, $07, $0a, $0d, $06, $01, $f5, $dc, $e3, $db, $d8, $e1, $e9, $f1
13f03     EF E1 E6 F0 
13f07     F9 00 07 07 
13f0b     09 15 20 23 
13f0f     21 21 1A 16 | 	byte	$ef, $e1, $e6, $f0, $f9, $00, $07, $07, $09, $15, $20, $23, $21, $21, $1a, $16
13f13     17 17 10 05 
13f17     0D 0C 01 01 
13f1b     EF DB DA D5 
13f1f     DC E3 EC F3 | 	byte	$17, $17, $10, $05, $0d, $0c, $01, $01, $ef, $db, $da, $d5, $dc, $e3, $ec, $f3
13f23     E8 DF EA F5 
13f27     FD 03 0A 0A 
13f2b     0B 17 22 24 
13f2f     23 21 19 17 | 	byte	$e8, $df, $ea, $f5, $fd, $03, $0a, $0a, $0b, $17, $22, $24, $23, $21, $19, $17
13f33     18 17 0B 04 
13f37     0D 07 00 01 
13f3b     EE D5 D2 D7 
13f3f     DE E6 EE F0 | 	byte	$18, $17, $0b, $04, $0d, $07, $00, $01, $ee, $d5, $d2, $d7, $de, $e6, $ee, $f0
13f43     E0 E2 EE F8 
13f47     00 07 0D 0C 
13f4b     0E 1B 24 25 
13f4f     24 21 19 18 | 	byte	$e0, $e2, $ee, $f8, $00, $07, $0d, $0c, $0e, $1b, $24, $25, $24, $21, $19, $18
13f53     18 15 05 05 
13f57     0B 03 00 00 
13f5b     E9 CA CE DA 
13f5f     E0 E8 F0 E9 | 	byte	$18, $15, $05, $05, $0b, $03, $00, $00, $e9, $ca, $ce, $da, $e0, $e8, $f0, $e9
13f63     DB E5 F1 FB 
13f67     03 09 10 0E 
13f6b     10 1D 25 27 
13f6f     25 20 19 18 | 	byte	$db, $e5, $f1, $fb, $03, $09, $10, $0e, $10, $1d, $25, $27, $25, $20, $19, $18
13f73     19 12 01 05 
13f77     07 02 01 00 
13f7b     DE C2 D1 DD 
13f7f     E3 EA EF E0 | 	byte	$19, $12, $01, $05, $07, $02, $01, $00, $de, $c2, $d1, $dd, $e3, $ea, $ef, $e0
13f83     DD E9 F5 FE 
13f87     06 0D 12 10 
13f8b     12 1E 28 28 
13f8f     25 1F 19 19 | 	byte	$dd, $e9, $f5, $fe, $06, $0d, $12, $10, $12, $1e, $28, $28, $25, $1f, $19, $19
13f93     19 0C FE 03 
13f97     04 03 02 FD 
13f9b     D0 C2 D4 DF 
13f9f     E5 EC E9 DB | 	byte	$19, $0c, $fe, $03, $04, $03, $02, $fd, $d0, $c2, $d4, $df, $e5, $ec, $e9, $db
13fa3     E2 EC F8 02 
13fa7     0A 10 15 12 
13fab     16 20 29 29 
13faf     26 1E 19 1A | 	byte	$e2, $ec, $f8, $02, $0a, $10, $15, $12, $16, $20, $29, $29, $26, $1e, $19, $1a
13fb3     18 07 FD FF 
13fb7     03 03 01 F1 
13fbb     C7 C5 D8 E0 
13fbf     E8 ED E1 DB | 	byte	$18, $07, $fd, $ff, $03, $03, $01, $f1, $c7, $c5, $d8, $e0, $e8, $ed, $e1, $db
13fc3     E6 F0 FA 05 
13fc7     0D 13 18 14 
13fcb     17 23 2B 2A 
13fcf     25 1D 1A 1A | 	byte	$e6, $f0, $fa, $05, $0d, $13, $18, $14, $17, $23, $2b, $2a, $25, $1d, $1a, $1a
13fd3     16 01 F9 FD 
13fd7     04 04 FF E3 
13fdb     C3 C8 DA E3 
13fdf     EA E8 D9 E0 | 	byte	$16, $01, $f9, $fd, $04, $04, $ff, $e3, $c3, $c8, $da, $e3, $ea, $e8, $d9, $e0
13fe3     EA F4 FD 08 
13fe7     10 15 19 16 
13feb     19 25 2C 2B 
13fef     24 1C 1B 1A | 	byte	$ea, $f4, $fd, $08, $10, $15, $19, $16, $19, $25, $2c, $2b, $24, $1c, $1b, $1a
13ff3     13 FD F5 FC 
13ff7     06 03 F4 D9 
13ffb     C3 CB DD E5 
13fff     EB E0 D8 E4 | 	byte	$13, $fd, $f5, $fc, $06, $03, $f4, $d9, $c3, $cb, $dd, $e5, $eb, $e0, $d8, $e4
14003     EE F6 01 0C 
14007     13 18 1B 17 
1400b     1B 27 2D 2B 
1400f     22 1C 1B 1A | 	byte	$ee, $f6, $01, $0c, $13, $18, $1b, $17, $1b, $27, $2d, $2b, $22, $1c, $1b, $1a
14013     0E F8 F3 FE 
14017     07 FF EA D8 
1401b     C4 CF DF E8 
1401f     E7 D7 DC E8 | 	byte	$0e, $f8, $f3, $fe, $07, $ff, $ea, $d8, $c4, $cf, $df, $e8, $e7, $d7, $dc, $e8
14023     F1 FA 04 0F 
14027     16 1B 1D 19 
1402b     1E 28 2E 2B 
1402f     21 1C 1C 18 | 	byte	$f1, $fa, $04, $0f, $16, $1b, $1d, $19, $1e, $28, $2e, $2b, $21, $1c, $1c, $18
14033     05 F2 F3 FE 
14037     05 F6 E5 D6 
1403b     C4 D1 E2 E9 
1403f     DE D3 E1 EC | 	byte	$05, $f2, $f3, $fe, $05, $f6, $e5, $d6, $c4, $d1, $e2, $e9, $de, $d3, $e1, $ec
14043     F5 FC 07 11 
14047     19 1E 1F 1B 
1404b     1F 2A 2F 2B 
1404f     20 1C 1C 15 | 	byte	$f5, $fc, $07, $11, $19, $1e, $1f, $1b, $1f, $2a, $2f, $2b, $20, $1c, $1c, $15
14053     00 EE F5 FF 
14057     01 EE E4 D3 
1405b     C6 D5 E5 E7 
1405f     D4 D5 E5 F1 | 	byte	$00, $ee, $f5, $ff, $01, $ee, $e4, $d3, $c6, $d5, $e5, $e7, $d4, $d5, $e5, $f1
14063     F8 00 0A 14 
14067     1C 20 21 1C 
1406b     21 2C 30 29 
1406f     1F 1C 1A 10 | 	byte	$f8, $00, $0a, $14, $1c, $20, $21, $1c, $21, $2c, $30, $29, $1f, $1c, $1a, $10
14073     F7 EE F5 FC 
14077     F9 E8 E5 D2 
1407b     C8 D7 E6 DD 
1407f     D0 DC E9 F4 | 	byte	$f7, $ee, $f5, $fc, $f9, $e8, $e5, $d2, $c8, $d7, $e6, $dd, $d0, $dc, $e9, $f4
14083     FC 04 0E 17 
14087     1F 23 24 1E 
1408b     22 2D 31 29 
1408f     1E 1D 19 08 | 	byte	$fc, $04, $0e, $17, $1f, $23, $24, $1e, $22, $2d, $31, $29, $1e, $1d, $19, $08
14093     F3 EF F4 F8 
14097     F2 E8 E3 D0 
1409b     CA DA E4 D3 
1409f     D2 E0 EE F8 | 	byte	$f3, $ef, $f4, $f8, $f2, $e8, $e3, $d0, $ca, $da, $e4, $d3, $d2, $e0, $ee, $f8
140a3     00 06 10 1B 
140a7     22 25 24 1F 
140ab     25 2F 31 25 
140af     1D 1D 13 03 | 	byte	$00, $06, $10, $1b, $22, $25, $24, $1f, $25, $2f, $31, $25, $1d, $1d, $13, $03
140b3     F1 EF F0 F4 
140b7     EE E9 E0 CE 
140bb     CD DC DB CC 
140bf     D6 E4 F2 FB | 	byte	$f1, $ef, $f0, $f4, $ee, $e9, $e0, $ce, $cd, $dc, $db, $cc, $d6, $e4, $f2, $fb
140c3     03 09 13 1D 
140c7     24 27 26 21 
140cb     26 30 30 25 
140cf     1D 1B 0E FF | 	byte	$03, $09, $13, $1d, $24, $27, $26, $21, $26, $30, $30, $25, $1d, $1b, $0e, $ff
140d3     F0 EC ED EF 
140d7     ED EA DC CC 
140db     D0 DB CF CE 
140df     DC E9 F6 00 | 	byte	$f0, $ec, $ed, $ef, $ed, $ea, $dc, $cc, $d0, $db, $cf, $ce, $dc, $e9, $f6, $00
140e3     07 0D 16 21 
140e7     26 2A 27 22 
140eb     27 31 30 22 
140ef     1D 16 09 FE | 	byte	$07, $0d, $16, $21, $26, $2a, $27, $22, $27, $31, $30, $22, $1d, $16, $09, $fe
140f3     EE EA EC EA 
140f7     EE EA D8 CD 
140fb     D1 D1 C9 D4 
140ff     E1 ED FA 04 | 	byte	$ee, $ea, $ec, $ea, $ee, $ea, $d8, $cd, $d1, $d1, $c9, $d4, $e1, $ed, $fa, $04
14103     0A 10 19 23 
14107     29 2C 29 23 
1410b     29 32 2E 21 
1410f     1C 0F 06 FC | 	byte	$0a, $10, $19, $23, $29, $2c, $29, $23, $29, $32, $2e, $21, $1c, $0f, $06, $fc
14113     E9 E8 E7 E8 
14117     F0 E7 D2 CE 
1411b     CE C5 CB D8 
1411f     E5 F1 FD 08 | 	byte	$e9, $e8, $e7, $e8, $f0, $e7, $d2, $ce, $ce, $c5, $cb, $d8, $e5, $f1, $fd, $08
14123     0E 13 1C 25 
14127     2C 2E 2A 24 
1412b     2A 33 2C 20 
1412f     16 0A 06 F6 | 	byte	$0e, $13, $1c, $25, $2c, $2e, $2a, $24, $2a, $33, $2c, $20, $16, $0a, $06, $f6
14133     E7 E8 E2 E9 
14137     F1 E5 CE CF 
1413b     C2 C0 D1 DE 
1413f     E9 F6 03 0B | 	byte	$e7, $e8, $e2, $e9, $f1, $e5, $ce, $cf, $c2, $c0, $d1, $de, $e9, $f6, $03, $0b
14143     11 16 1E 28 
14147     2E 31 2C 25 
1414b     2B 32 2A 1E 
1414f     10 06 04 F3 | 	byte	$11, $16, $1e, $28, $2e, $31, $2c, $25, $2b, $32, $2a, $1e, $10, $06, $04, $f3
14153     E7 E5 DE EB 
14157     F2 DD CC CA 
1415b     B7 C4 D8 E2 
1415f     EE FB 06 10 | 	byte	$e7, $e5, $de, $eb, $f2, $dd, $cc, $ca, $b7, $c4, $d8, $e2, $ee, $fb, $06, $10
14163     15 19 21 2B 
14167     31 32 2C 27 
1416b     2D 32 29 1A 
1416f     0A 06 01 F2 | 	byte	$15, $19, $21, $2b, $31, $32, $2c, $27, $2d, $32, $29, $1a, $0a, $06, $01, $f2
14173     E7 DF DD ED 
14177     F1 D7 C9 BD 
1417b     B4 CA DB E7 
1417f     F2 FF 0A 13 | 	byte	$e7, $df, $dd, $ed, $f1, $d7, $c9, $bd, $b4, $ca, $db, $e7, $f2, $ff, $0a, $13
14183     18 1C 24 2D 
14187     33 34 2D 28 
1418b     2E 31 25 15 
1418f     07 04 FF F1 | 	byte	$18, $1c, $24, $2d, $33, $34, $2d, $28, $2e, $31, $25, $15, $07, $04, $ff, $f1
14193     E5 DA DE EE 
14197     ED D0 C0 B1 
1419b     BA D0 E1 EB 
1419f     F7 02 0E 16 | 	byte	$e5, $da, $de, $ee, $ed, $d0, $c0, $b1, $ba, $d0, $e1, $eb, $f7, $02, $0e, $16
141a3     1B 1F 27 2F 
141a7     35 36 2D 28 
141ab     2E 2F 21 0F 
141af     05 01 FF F1 | 	byte	$1b, $1f, $27, $2f, $35, $36, $2d, $28, $2e, $2f, $21, $0f, $05, $01, $ff, $f1
141b3     DF D7 E0 F0 
141b7     E7 C6 B3 B1 
141bb     BE D6 E5 F0 
141bf     FB 08 13 1B | 	byte	$df, $d7, $e0, $f0, $e7, $c6, $b3, $b1, $be, $d6, $e5, $f0, $fb, $08, $13, $1b
141c3     1F 23 29 32 
141c7     36 37 2D 29 
141cb     2E 2B 1B 0C 
141cf     01 FF FF F0 | 	byte	$1f, $23, $29, $32, $36, $37, $2d, $29, $2e, $2b, $1b, $0c, $01, $ff, $ff, $f0
141d3     DA D7 E2 F0 
141d7     DD B7 AB B8 
141db     C4 DA EA F5 
141df     00 0C 16 1E | 	byte	$da, $d7, $e2, $f0, $dd, $b7, $ab, $b8, $c4, $da, $ea, $f5, $00, $0c, $16, $1e
141e3     22 25 2B 35 
141e7     39 39 30 2A 
141eb     2E 26 16 09 
141ef     FF 01 FF E9 | 	byte	$22, $25, $2b, $35, $39, $39, $30, $2a, $2e, $26, $16, $09, $ff, $01, $ff, $e9
141f3     D5 D7 E3 EC 
141f7     CA A6 B0 BC 
141fb     CA E0 EF F9 
141ff     04 10 1A 21 | 	byte	$d5, $d7, $e3, $ec, $ca, $a6, $b0, $bc, $ca, $e0, $ef, $f9, $04, $10, $1a, $21
14203     25 27 2E 36 
14207     3A 39 2F 2A 
1420b     2B 20 13 05 
1420f     FE 01 FE E2 | 	byte	$25, $27, $2e, $36, $3a, $39, $2f, $2a, $2b, $20, $13, $05, $fe, $01, $fe, $e2
14213     D2 D9 E4 E3 
14217     B2 A4 B6 C2 
1421b     CF E6 F4 FE 
1421f     0A 14 1E 24 | 	byte	$d2, $d9, $e4, $e3, $b2, $a4, $b6, $c2, $cf, $e6, $f4, $fe, $0a, $14, $1e, $24
14223     28 2A 2F 38 
14227     3B 3B 2F 2A 
1422b     25 1C 10 00 
1422f     FF 01 FC DC | 	byte	$28, $2a, $2f, $38, $3b, $3b, $2f, $2a, $25, $1c, $10, $00, $ff, $01, $fc, $dc
14233     D1 D9 E3 C9 
14237     A4 AC BB C7 
1423b     D4 EB F9 04 
1423f     0E 19 22 28 | 	byte	$d1, $d9, $e3, $c9, $a4, $ac, $bb, $c7, $d4, $eb, $f9, $04, $0e, $19, $22, $28
14243     2B 2C 32 39 
14247     3D 3B 30 28 
1424b     20 19 0C 00 
1424f     00 01 F4 D5 | 	byte	$2b, $2c, $32, $39, $3d, $3b, $30, $28, $20, $19, $0c, $00, $00, $01, $f4, $d5
14253     D3 DB D8 B1 
14257     A6 B1 C2 CB 
1425b     DB F2 FE 08 
1425f     12 1C 25 2B | 	byte	$d3, $db, $d8, $b1, $a6, $b1, $c2, $cb, $db, $f2, $fe, $08, $12, $1c, $25, $2b
14263     2E 2F 33 3B 
14267     3E 3C 30 23 
1426b     1B 16 07 01 
1426f     00 00 ED D3 | 	byte	$2e, $2f, $33, $3b, $3e, $3c, $30, $23, $1b, $16, $07, $01, $00, $00, $ed, $d3
14273     D5 D9 BC A5 
14277     AD B7 C7 D1 
1427b     E1 F5 03 0D 
1427f     16 20 29 2D | 	byte	$d5, $d9, $bc, $a5, $ad, $b7, $c7, $d1, $e1, $f5, $03, $0d, $16, $20, $29, $2d
14283     30 31 35 3C 
14287     3F 3C 2C 1D 
1428b     18 11 06 01 
1428f     00 FB E3 D3 | 	byte	$30, $31, $35, $3c, $3f, $3c, $2c, $1d, $18, $11, $06, $01, $00, $fb, $e3, $d3
14293     D5 C7 A7 A9 
14297     B3 BD CD D7 
1429b     E5 FB 08 11 
1429f     1A 24 2B 30 | 	byte	$d5, $c7, $a7, $a9, $b3, $bd, $cd, $d7, $e5, $fb, $08, $11, $1a, $24, $2b, $30
142a3     33 34 37 3C 
142a7     3F 3D 29 19 
142ab     14 0F 06 02 
142af     FF F3 DE D4 | 	byte	$33, $34, $37, $3c, $3f, $3d, $29, $19, $14, $0f, $06, $02, $ff, $f3, $de, $d4
142b3     CF B3 9F AD 
142b7     BA C2 D2 DC 
142bb     EC FF 0C 15 
142bf     1E 27 2E 33 | 	byte	$cf, $b3, $9f, $ad, $ba, $c2, $d2, $dc, $ec, $ff, $0c, $15, $1e, $27, $2e, $33
142c3     35 35 38 3E 
142c7     40 39 25 16 
142cb     10 0D 06 02 
142cf     FB EA DB D1 | 	byte	$35, $35, $38, $3e, $40, $39, $25, $16, $10, $0d, $06, $02, $fb, $ea, $db, $d1
142d3     BC A3 9F B4 
142d7     BF C7 D7 E2 
142db     F1 04 10 1A 
142df     22 2B 31 35 | 	byte	$bc, $a3, $9f, $b4, $bf, $c7, $d7, $e2, $f1, $04, $10, $1a, $22, $2b, $31, $35
142e3     37 37 38 3E 
142e7     3F 36 21 12 
142eb     0D 0C 06 01 
142ef     F3 E5 DA C4 | 	byte	$37, $37, $38, $3e, $3f, $36, $21, $12, $0d, $0c, $06, $01, $f3, $e5, $da, $c4
142f3     AD 9F A2 BB 
142f7     C6 CE DC E7 
142fb     F4 09 15 1D 
142ff     25 2D 34 38 | 	byte	$ad, $9f, $a2, $bb, $c6, $ce, $dc, $e7, $f4, $09, $15, $1d, $25, $2d, $34, $38
14303     39 38 39 3E 
14307     3C 32 20 0D 
1430b     0A 0B 06 FD 
1430f     EC E3 CF B4 | 	byte	$39, $38, $39, $3e, $3c, $32, $20, $0d, $0a, $0b, $06, $fd, $ec, $e3, $cf, $b4
14313     A9 9A A8 C1 
14317     CB D3 E1 EC 
1431b     F9 0D 1A 22 
1431f     29 31 36 3A | 	byte	$a9, $9a, $a8, $c1, $cb, $d3, $e1, $ec, $f9, $0d, $1a, $22, $29, $31, $36, $3a
14323     3B 3A 3A 3D 
14327     38 31 1F 09 
1432b     0A 0A 05 F6 
1432f     E7 DF BE AE | 	byte	$3b, $3a, $3a, $3d, $38, $31, $1f, $09, $0a, $0a, $05, $f6, $e7, $df, $be, $ae
14333     A7 9A AC C6 
14337     D1 D7 E6 F2 
1433b     FD 12 1D 25 
1433f     2C 33 38 3B | 	byte	$a7, $9a, $ac, $c6, $d1, $d7, $e6, $f2, $fd, $12, $1d, $25, $2c, $33, $38, $3b
14343     3C 3B 3A 39 
14347     34 30 1A 07 
1434b     0A 0A 02 ED 
1434f     E6 D0 B0 B2 | 	byte	$3c, $3b, $3a, $39, $34, $30, $1a, $07, $0a, $0a, $02, $ed, $e6, $d0, $b0, $b2
14353     A1 9D B4 CB 
14357     D6 DC EB F7 
1435b     01 15 21 28 
1435f     2F 35 3A 3D | 	byte	$a1, $9d, $b4, $cb, $d6, $dc, $eb, $f7, $01, $15, $21, $28, $2f, $35, $3a, $3d
14363     3D 3C 39 34 
14367     32 2F 17 06 
1436b     08 07 FA E9 
1436f     E1 BD AD B2 | 	byte	$3d, $3c, $39, $34, $32, $2f, $17, $06, $08, $07, $fa, $e9, $e1, $bd, $ad, $b2
14373     9F A3 B8 D1 
14377     DC E1 EF FB 
1437b     04 18 24 2B 
1437f     31 37 3C 3E | 	byte	$9f, $a3, $b8, $d1, $dc, $e1, $ef, $fb, $04, $18, $24, $2b, $31, $37, $3c, $3e
14383     3F 3D 36 30 
14387     31 2B 15 06 
1438b     06 02 F2 E9 
1438f     D3 B0 B4 B0 | 	byte	$3f, $3d, $36, $30, $31, $2b, $15, $06, $06, $02, $f2, $e9, $d3, $b0, $b4, $b0
14393     9F AA BD D6 
14397     E1 E7 F4 FF 
1439b     08 1B 27 2E 
1439f     34 39 3D 40 | 	byte	$9f, $aa, $bd, $d6, $e1, $e7, $f4, $ff, $08, $1b, $27, $2e, $34, $39, $3d, $40
143a3     3F 3B 32 2E 
143a7     30 28 12 06 
143ab     04 F7 ED E2 
143af     C2 AF B7 AC | 	byte	$3f, $3b, $32, $2e, $30, $28, $12, $06, $04, $f7, $ed, $e2, $c2, $af, $b7, $ac
143b3     A1 B0 C2 D9 
143b7     E7 EA F8 03 
143bb     0D 1E 2A 31 
143bf     36 3B 3E 40 | 	byte	$a1, $b0, $c2, $d9, $e7, $ea, $f8, $03, $0d, $1e, $2a, $31, $36, $3b, $3e, $40
143c3     3F 38 2E 2E 
143c7     2D 22 13 06 
143cb     FD EF EC D4 
143cf     B8 B2 B8 A8 | 	byte	$3f, $38, $2e, $2e, $2d, $22, $13, $06, $fd, $ef, $ec, $d4, $b8, $b2, $b8, $a8
143d3     A6 B5 C7 DF 
143d7     EC EF FC 07 
143db     0F 21 2D 33 
143df     38 3C 3F 41 | 	byte	$a6, $b5, $c7, $df, $ec, $ef, $fc, $07, $0f, $21, $2d, $33, $38, $3c, $3f, $41
143e3     3E 34 2D 2D 
143e7     29 20 13 04 
143eb     F0 EB E4 C8 
143ef     B8 B5 B7 A8 | 	byte	$3e, $34, $2d, $2d, $29, $20, $13, $04, $f0, $eb, $e4, $c8, $b8, $b5, $b7, $a8
143f3     AC BB CD E2 
143f7     F1 F3 FF 0C 
143fb     13 22 30 36 
143ff     3A 3E 40 40 | 	byte	$ac, $bb, $cd, $e2, $f1, $f3, $ff, $0c, $13, $22, $30, $36, $3a, $3e, $40, $40
14403     3A 31 2D 2B 
14407     25 1E 12 FB 
1440b     E9 EA D6 C3 
1440f     B8 BA B5 A8 | 	byte	$3a, $31, $2d, $2b, $25, $1e, $12, $fb, $e9, $ea, $d6, $c3, $b8, $ba, $b5, $a8
14413     B3 C1 D0 E8 
14417     F5 F7 03 0F 
1441b     15 24 32 38 
1441f     3C 3F 41 3E | 	byte	$b3, $c1, $d0, $e8, $f5, $f7, $03, $0f, $15, $24, $32, $38, $3c, $3f, $41, $3e
14423     35 31 2D 27 
14427     22 1B 10 F1 
1442b     E7 DF CB C4 
1442f     BA BE B2 AB | 	byte	$35, $31, $2d, $27, $22, $1b, $10, $f1, $e7, $df, $cb, $c4, $ba, $be, $b2, $ab
14433     B9 C5 D6 EB 
14437     FA FB 06 13 
1443b     18 27 34 39 
1443f     3C 3F 40 39 | 	byte	$b9, $c5, $d6, $eb, $fa, $fb, $06, $13, $18, $27, $34, $39, $3c, $3f, $40, $39
14443     33 31 2C 23 
14447     20 18 05 EC 
1444b     E4 D0 CA C5 
1444f     BC C1 B0 B0 | 	byte	$33, $31, $2c, $23, $20, $18, $05, $ec, $e4, $d0, $ca, $c5, $bc, $c1, $b0, $b0
14453     BF CB D9 F0 
14457     FE FF 08 15 
1445b     1B 28 35 3B 
1445f     3E 40 3E 36 | 	byte	$bf, $cb, $d9, $f0, $fe, $ff, $08, $15, $1b, $28, $35, $3b, $3e, $40, $3e, $36
14463     32 31 28 22 
14467     1D 11 FC EC 
1446b     D8 C8 CE C4 
1446f     C0 C1 B0 B4 | 	byte	$32, $31, $28, $22, $1d, $11, $fc, $ec, $d8, $c8, $ce, $c4, $c0, $c1, $b0, $b4
14473     C4 D0 DD F4 
14477     02 02 0C 18 
1447b     1D 2A 37 3C 
1447f     3F 40 3A 33 | 	byte	$c4, $d0, $dd, $f4, $02, $02, $0c, $18, $1d, $2a, $37, $3c, $3f, $40, $3a, $33
14483     32 2E 25 22 
14487     19 06 FA E8 
1448b     C9 C9 CF C4 
1448f     C6 C1 AF B9 | 	byte	$32, $2e, $25, $22, $19, $06, $fa, $e8, $c9, $c9, $cf, $c4, $c6, $c1, $af, $b9
14493     C9 D4 E3 F6 
14497     06 05 0F 1A 
1449b     1F 2C 38 3D 
1449f     3F 3D 35 32 | 	byte	$c9, $d4, $e3, $f6, $06, $05, $0f, $1a, $1f, $2c, $38, $3d, $3f, $3d, $35, $32
144a3     32 2B 23 1F 
144a7     0F FD FC DB 
144ab     C2 CE CE C6 
144af     CB BF B1 BF | 	byte	$32, $2b, $23, $1f, $0f, $fd, $fc, $db, $c2, $ce, $ce, $c6, $cb, $bf, $b1, $bf
144b3     CE D9 E7 FA 
144b7     0A 08 10 1D 
144bb     22 2D 39 3E 
144bf     3F 39 34 33 | 	byte	$ce, $d9, $e7, $fa, $0a, $08, $10, $1d, $22, $2d, $39, $3e, $3f, $39, $34, $33
144c3     2F 27 24 1A 
144c7     03 FD F7 D0 
144cb     C2 D1 CD C9 
144cf     CE BF B5 C4 | 	byte	$2f, $27, $24, $1a, $03, $fd, $f7, $d0, $c2, $d1, $cd, $c9, $ce, $bf, $b5, $c4
144d3     D3 DD EB FF 
144d7     0C 0A 13 1F 
144db     24 2E 3B 3F 
144df     3C 35 33 32 | 	byte	$d3, $dd, $eb, $ff, $0c, $0a, $13, $1f, $24, $2e, $3b, $3f, $3c, $35, $33, $32
144e3     2B 26 22 0F 
144e7     FD FF ED C5 
144eb     C8 D2 CC CE 
144ef     D1 BF B8 C8 | 	byte	$2b, $26, $22, $0f, $fd, $ff, $ed, $c5, $c8, $d2, $cc, $ce, $d1, $bf, $b8, $c8
144f3     D7 E3 EE 02 
144f7     0E 0C 15 20 
144fb     25 31 3B 3E 
144ff     38 33 33 30 | 	byte	$d7, $e3, $ee, $02, $0e, $0c, $15, $20, $25, $31, $3b, $3e, $38, $33, $33, $30
14503     28 26 1B 05 
14507     FF FD E0 C4 
1450b     CD D3 CD D3 
1450f     D3 BE BC CC | 	byte	$28, $26, $1b, $05, $ff, $fd, $e0, $c4, $cd, $d3, $cd, $d3, $d3, $be, $bc, $cc
14513     DA E6 F3 05 
14517     11 0E 16 22 
1451b     26 32 3C 3B 
1451f     34 33 32 2B | 	byte	$da, $e6, $f3, $05, $11, $0e, $16, $22, $26, $32, $3c, $3b, $34, $33, $32, $2b
14523     26 22 11 01 
14527     FF F4 D3 C9 
1452b     D0 D1 D0 D7 
1452f     D5 BE C0 D0 | 	byte	$26, $22, $11, $01, $ff, $f4, $d3, $c9, $d0, $d1, $d0, $d7, $d5, $be, $c0, $d0
14533     DD EA F6 08 
14537     12 10 18 23 
1453b     27 33 3B 36 
1453f     33 33 30 28 | 	byte	$dd, $ea, $f6, $08, $12, $10, $18, $23, $27, $33, $3b, $36, $33, $33, $30, $28
14543     27 1A 09 02 
14547     FE E6 D0 CD 
1454b     D3 D1 D4 DB 
1454f     D6 C0 C6 D4 | 	byte	$27, $1a, $09, $02, $fe, $e6, $d0, $cd, $d3, $d1, $d4, $db, $d6, $c0, $c6, $d4
14553     E2 EE F9 0C 
14557     14 11 19 24 
1455b     28 34 38 33 
1455f     33 32 2B 27 | 	byte	$e2, $ee, $f9, $0c, $14, $11, $19, $24, $28, $34, $38, $33, $33, $32, $2b, $27
14563     22 12 07 03 
14567     F8 DC D2 D1 
1456b     D5 D2 D9 DF 
1456f     D3 C1 CA D8 | 	byte	$22, $12, $07, $03, $f8, $dc, $d2, $d1, $d5, $d2, $d9, $df, $d3, $c1, $ca, $d8
14573     E5 F1 FD 10 
14577     15 12 1B 25 
1457b     29 32 33 32 
1457f     33 2F 29 27 | 	byte	$e5, $f1, $fd, $10, $15, $12, $1b, $25, $29, $32, $33, $32, $33, $2f, $29, $27
14583     1B 0C 07 01 
14587     EB D7 D5 D5 
1458b     D5 D4 DC E2 
1458f     D3 C3 CE DB | 	byte	$1b, $0c, $07, $01, $eb, $d7, $d5, $d5, $d5, $d4, $dc, $e2, $d3, $c3, $ce, $db
14593     E8 F4 00 12 
14597     16 13 1C 25 
1459b     29 30 30 32 
1459f     31 2B 29 23 | 	byte	$e8, $f4, $00, $12, $16, $13, $1c, $25, $29, $30, $30, $32, $31, $2b, $29, $23
145a3     11 0C 07 FB 
145a7     E2 D8 D7 D8 
145ab     D5 D7 E1 E5 
145af     D3 C6 D2 DE | 	byte	$11, $0c, $07, $fb, $e2, $d8, $d7, $d8, $d5, $d7, $e1, $e5, $d3, $c6, $d2, $de
145b3     EB F7 04 14 
145b7     16 14 1D 26 
145bb     28 2C 30 32 
145bf     2D 29 29 1C | 	byte	$eb, $f7, $04, $14, $16, $14, $1d, $26, $28, $2c, $30, $32, $2d, $29, $29, $1c
145c3     0E 0D 05 F1 
145c7     DB DB DA DA 
145cb     D6 DC E5 E7 
145cf     D1 C9 D6 E1 | 	byte	$0e, $0d, $05, $f1, $db, $db, $da, $da, $d6, $dc, $e5, $e7, $d1, $c9, $d6, $e1
145d3     EE F9 06 17 
145d7     16 15 1F 25 
145db     25 2A 30 2E 
145df     2A 2A 25 13 | 	byte	$ee, $f9, $06, $17, $16, $15, $1f, $25, $25, $2a, $30, $2e, $2a, $2a, $25, $13
145e3     0F 0D 00 E6 
145e7     DB DE DE DC 
145eb     D8 DF E9 E8 
145ef     D2 CC D9 E5 | 	byte	$0f, $0d, $00, $e6, $db, $de, $de, $dc, $d8, $df, $e9, $e8, $d2, $cc, $d9, $e5
145f3     F0 FD 09 19 
145f7     16 16 1F 23 
145fb     21 2A 2F 2A 
145ff     2A 29 1C 0F | 	byte	$f0, $fd, $09, $19, $16, $16, $1f, $23, $21, $2a, $2f, $2a, $2a, $29, $1c, $0f
14603     10 0C F3 DF 
14607     DE E1 E0 DD 
1460b     DA E4 EC E8 
1460f     D2 D0 DC E8 | 	byte	$10, $0c, $f3, $df, $de, $e1, $e0, $dd, $da, $e4, $ec, $e8, $d2, $d0, $dc, $e8
14613     F4 00 0C 1B 
14617     16 17 20 20 
1461b     20 2B 2B 29 
1461f     2B 26 16 10 | 	byte	$f4, $00, $0c, $1b, $16, $17, $20, $20, $20, $2b, $2b, $29, $2b, $26, $16, $10
14623     11 06 E8 DE 
14627     E0 E4 E3 DE 
1462b     DC E9 EF E7 
1462f     D1 D4 DF EA | 	byte	$11, $06, $e8, $de, $e0, $e4, $e3, $de, $dc, $e9, $ef, $e7, $d1, $d4, $df, $ea
14633     F6 02 0F 1B 
14637     15 18 1D 1B 
1463b     21 29 28 2A 
1463f     2A 1E 11 12 | 	byte	$f6, $02, $0f, $1b, $15, $18, $1d, $1b, $21, $29, $28, $2a, $2a, $1e, $11, $12
14643     11 FA DF E2 
14647     E3 E7 E5 DF 
1464b     E1 EC F1 E6 
1464f     D1 D8 E2 ED | 	byte	$11, $fa, $df, $e2, $e3, $e7, $e5, $df, $e1, $ec, $f1, $e6, $d1, $d8, $e2, $ed
14653     F8 05 12 1B 
14657     15 18 1A 19 
1465b     21 25 29 2B 
1465f     27 17 11 13 | 	byte	$f8, $05, $12, $1b, $15, $18, $1a, $19, $21, $25, $29, $2b, $27, $17, $11, $13
14663     0C E9 DE E4 
14667     E6 EA E7 E1 
1466b     E4 F0 F4 E2 
1466f     D2 DB E5 EF | 	byte	$0c, $e9, $de, $e4, $e6, $ea, $e7, $e1, $e4, $f0, $f4, $e2, $d2, $db, $e5, $ef
14673     FC 08 17 1A 
14677     15 16 16 18 
1467b     1E 25 2A 2B 
1467f     21 13 13 13 | 	byte	$fc, $08, $17, $1a, $15, $16, $16, $18, $1e, $25, $2a, $2b, $21, $13, $13, $13
14683     01 E0 E2 E6 
14687     EB EC E8 E2 
1468b     E8 F3 F5 DF 
1468f     D3 DF E8 F1 | 	byte	$01, $e0, $e2, $e6, $eb, $ec, $e8, $e2, $e8, $f3, $f5, $df, $d3, $df, $e8, $f1
14693     FE 0C 19 19 
14697     14 13 15 16 
1469b     1E 28 2B 29 
1469f     1B 13 14 10 | 	byte	$fe, $0c, $19, $19, $14, $13, $15, $16, $1e, $28, $2b, $29, $1b, $13, $14, $10
146a3     EE DE E5 EA 
146a7     EE EE EA E5 
146ab     ED F5 F3 DA 
146af     D6 E1 EA F5 | 	byte	$ee, $de, $e5, $ea, $ee, $ee, $ea, $e5, $ed, $f5, $f3, $da, $d6, $e1, $ea, $f5
146b3     01 0E 1C 17 
146b7     11 10 13 14 
146bb     20 29 2B 25 
146bf     15 14 15 02 | 	byte	$01, $0e, $1c, $17, $11, $10, $13, $14, $20, $29, $2b, $25, $15, $14, $15, $02
146c3     E4 E3 E8 ED 
146c7     F2 EF EC E9 
146cb     F1 F8 F2 D8 
146cf     DB E3 ED F7 | 	byte	$e4, $e3, $e8, $ed, $f2, $ef, $ec, $e9, $f1, $f8, $f2, $d8, $db, $e3, $ed, $f7
146d3     04 11 1D 14 
146d7     0E 0E 0F 15 
146db     23 2A 2A 1D 
146df     13 15 10 F1 | 	byte	$04, $11, $1d, $14, $0e, $0e, $0f, $15, $23, $2a, $2a, $1d, $13, $15, $10, $f1
146e3     E2 E5 EA F2 
146e7     F4 F0 EE EC 
146eb     F5 F9 EC D6 
146ef     DD E7 F0 FA | 	byte	$e2, $e5, $ea, $f2, $f4, $f0, $ee, $ec, $f5, $f9, $ec, $d6, $dd, $e7, $f0, $fa
146f3     07 15 1C 0F 
146f7     0B 0D 0E 19 
146fb     26 2A 27 17 
146ff     15 15 02 E9 | 	byte	$07, $15, $1c, $0f, $0b, $0d, $0e, $19, $26, $2a, $27, $17, $15, $15, $02, $e9
14703     E5 E7 EE F5 
14707     F6 F2 F1 F0 
1470b     F7 FA E6 D7 
1470f     E1 E9 F2 FD | 	byte	$e5, $e7, $ee, $f5, $f6, $f2, $f1, $f0, $f7, $fa, $e6, $d7, $e1, $e9, $f2, $fd
14713     0A 1A 18 0A 
14717     09 0B 0F 1C 
1471b     27 2A 21 14 
1471f     16 0E F4 E8 | 	byte	$0a, $1a, $18, $0a, $09, $0b, $0f, $1c, $27, $2a, $21, $14, $16, $0e, $f4, $e8
14723     E7 EA F3 F8 
14727     F7 F4 F5 F3 
1472b     FA F9 E0 D9 
1472f     E3 EB F4 00 | 	byte	$e7, $ea, $f3, $f8, $f7, $f4, $f5, $f3, $fa, $f9, $e0, $d9, $e3, $eb, $f4, $00
14733     0E 1C 12 06 
14737     06 0A 12 1F 
1473b     28 29 1A 14 
1473f     14 FE EC EB | 	byte	$0e, $1c, $12, $06, $06, $0a, $12, $1f, $28, $29, $1a, $14, $14, $fe, $ec, $eb
14743     E8 ED F7 FB 
14747     F8 F6 F7 F6 
1474b     FC F4 DB DD 
1474f     E5 EE F7 03 | 	byte	$e8, $ed, $f7, $fb, $f8, $f6, $f7, $f6, $fc, $f4, $db, $dd, $e5, $ee, $f7, $03
14753     12 1B 0A 03 
14757     05 0C 14 23 
1475b     29 23 15 15 
1475f     0A F2 EF EC | 	byte	$12, $1b, $0a, $03, $05, $0c, $14, $23, $29, $23, $15, $15, $0a, $f2, $ef, $ec
14763     EA F2 FB FE 
14767     F8 F9 FA F9 
1476b     FD EB DA E1 
1476f     E8 EF FA 06 | 	byte	$ea, $f2, $fb, $fe, $f8, $f9, $fa, $f9, $fd, $eb, $da, $e1, $e8, $ef, $fa, $06
14773     15 18 05 01 
14777     06 0E 16 24 
1477b     29 1E 15 14 
1477f     FB EF F2 EE | 	byte	$15, $18, $05, $01, $06, $0e, $16, $24, $29, $1e, $15, $14, $fb, $ef, $f2, $ee
14783     ED F6 FF 01 
14787     FA FC FD FB 
1478b     FD E5 DB E3 
1478f     EB F2 FC 08 | 	byte	$ed, $f6, $ff, $01, $fa, $fc, $fd, $fb, $fd, $e5, $db, $e3, $eb, $f2, $fc, $08
14793     15 12 00 00 
14797     09 0F 19 25 
1479b     26 18 14 05 
1479f     EF F4 F4 EF | 	byte	$15, $12, $00, $00, $09, $0f, $19, $25, $26, $18, $14, $05, $ef, $f4, $f4, $ef
147a3     F0 FA 02 03 
147a7     FC 00 FF FD 
147ab     F8 E0 DE E6 
147af     EC F5 FE 0B | 	byte	$f0, $fa, $02, $03, $fc, $00, $ff, $fd, $f8, $e0, $de, $e6, $ec, $f5, $fe, $0b
147b3     14 0C FE 02 
147b7     0B 0F 1C 27 
147bb     20 14 0E F4 
147bf     F2 F8 F6 F0 | 	byte	$14, $0c, $fe, $02, $0b, $0f, $1c, $27, $20, $14, $0e, $f4, $f2, $f8, $f6, $f0
147c3     F4 FF 05 04 
147c7     FE 03 01 FE 
147cb     EF DC E2 E8 
147cf     EF F6 01 0B | 	byte	$f4, $ff, $05, $04, $fe, $03, $01, $fe, $ef, $dc, $e2, $e8, $ef, $f6, $01, $0b
147d3     12 06 FE 05 
147d7     0C 11 1D 26 
147db     1B 12 FE F0 
147df     F8 FC F7 F2 | 	byte	$12, $06, $fe, $05, $0c, $11, $1d, $26, $1b, $12, $fe, $f0, $f8, $fc, $f7, $f2
147e3     F6 03 08 06 
147e7     00 05 03 FE 
147eb     E8 DD E5 EB 
147ef     F2 F9 03 09 | 	byte	$f6, $03, $08, $06, $00, $05, $03, $fe, $e8, $dd, $e5, $eb, $f2, $f9, $03, $09
147f3     0F 03 00 06 
147f7     0D 12 1F 22 
147fb     15 06 F0 F5 
147ff     FC FE F9 F4 | 	byte	$0f, $03, $00, $06, $0d, $12, $1f, $22, $15, $06, $f0, $f5, $fc, $fe, $f9, $f4
14803     FB 07 0C 08 
14807     02 07 04 F8 
1480b     E2 E0 E7 ED 
1480f     F3 FB 02 07 | 	byte	$fb, $07, $0c, $08, $02, $07, $04, $f8, $e2, $e0, $e7, $ed, $f3, $fb, $02, $07
14813     0C 02 01 08 
14817     0E 13 20 1B 
1481b     0D F4 F1 FA 
1481f     00 00 F9 F6 | 	byte	$0c, $02, $01, $08, $0e, $13, $20, $1b, $0d, $f4, $f1, $fa, $00, $00, $f9, $f6
14823     00 0B 0E 08 
14827     04 09 03 F0 
1482b     DE E4 EA EF 
1482f     F5 FC 00 05 | 	byte	$00, $0b, $0e, $08, $04, $09, $03, $f0, $de, $e4, $ea, $ef, $f5, $fc, $00, $05
14833     0B 02 03 09 
14837     0E 14 1D 13 
1483b     F8 EF F8 FF 
1483f     04 02 FA F9 | 	byte	$0b, $02, $03, $09, $0e, $14, $1d, $13, $f8, $ef, $f8, $ff, $04, $02, $fa, $f9
14843     04 0E 11 0A 
14847     06 0A FF E6 
1484b     DF E7 EC F1 
1484f     F7 FB FD 04 | 	byte	$04, $0e, $11, $0a, $06, $0a, $ff, $e6, $df, $e7, $ec, $f1, $f7, $fb, $fd, $04
14853     0C 03 04 0A 
14857     0F 15 16 02 
1485b     EE F6 FD 03 
1485f     07 04 FC FD | 	byte	$0c, $03, $04, $0a, $0f, $15, $16, $02, $ee, $f6, $fd, $03, $07, $04, $fc, $fd
14863     08 11 14 0B 
14867     08 0A F9 E1 
1486b     E4 EA EF F3 
1486f     F8 F8 FA 04 | 	byte	$08, $11, $14, $0b, $08, $0a, $f9, $e1, $e4, $ea, $ef, $f3, $f8, $f8, $fa, $04
14873     0E 03 06 0B 
14877     10 13 08 EE 
1487b     F1 FA 02 07 
1487f     0A 06 FE 00 | 	byte	$0e, $03, $06, $0b, $10, $13, $08, $ee, $f1, $fa, $02, $07, $0a, $06, $fe, $00
14883     0C 14 16 0D 
14887     0A 08 EC E0 
1488b     E7 EC F1 F5 
1488f     F6 F6 F9 05 | 	byte	$0c, $14, $16, $0d, $0a, $08, $ec, $e0, $e7, $ec, $f1, $f5, $f6, $f6, $f9, $05
14893     0F 04 07 0B 
14897     0F 0A F0 EB 
1489b     F7 FF 06 0B 
1489f     0D 07 00 03 | 	byte	$0f, $04, $07, $0b, $0f, $0a, $f0, $eb, $f7, $ff, $06, $0b, $0d, $07, $00, $03
148a3     0F 17 18 0E 
148a7     0B 01 E3 E2 
148ab     EA EF F3 F5 
148af     F3 F4 F9 08 | 	byte	$0f, $17, $18, $0e, $0b, $01, $e3, $e2, $ea, $ef, $f3, $f5, $f3, $f4, $f9, $08
148b3     0F 05 08 0C 
148b7     0D F3 E4 F3 
148bb     FD 04 0A 0F 
148bf     0F 09 04 06 | 	byte	$0f, $05, $08, $0c, $0d, $f3, $e4, $f3, $fd, $04, $0a, $0f, $0f, $09, $04, $06
148c3     11 19 1A 10 
148c7     0B F7 DE E7 
148cb     EC F1 F5 F4 
148cf     F1 F3 FA 0A | 	byte	$11, $19, $1a, $10, $0b, $f7, $de, $e7, $ec, $f1, $f5, $f4, $f1, $f3, $fa, $0a
148d3     11 06 08 0D 
148d7     FD DD E8 F7 
148db     01 08 0E 13 
148df     11 0B 06 0A | 	byte	$11, $06, $08, $0d, $fd, $dd, $e8, $f7, $01, $08, $0e, $13, $11, $0b, $06, $0a
148e3     15 1C 1C 11 
148e7     08 EB DE EB 
148eb     F0 F3 F5 F0 
148ef     EF F2 FC 0B | 	byte	$15, $1c, $1c, $11, $08, $eb, $de, $eb, $f0, $f3, $f5, $f0, $ef, $f2, $fc, $0b
148f3     12 07 09 08 
148f7     E1 D6 EE FD 
148fb     05 0D 12 16 
148ff     12 0D 08 0D | 	byte	$12, $07, $09, $08, $e1, $d6, $ee, $fd, $05, $0d, $12, $16, $12, $0d, $08, $0d
14903     16 1D 1E 12 
14907     00 DF E2 EC 
1490b     F2 F5 F3 EE 
1490f     EE F2 FE 0D | 	byte	$16, $1d, $1e, $12, $00, $df, $e2, $ec, $f2, $f5, $f3, $ee, $ee, $f2, $fe, $0d
14913     13 08 08 F1 
14917     D2 DE F4 01 
1491b     0A 11 16 18 
1491f     14 0F 0B 0F | 	byte	$13, $08, $08, $f1, $d2, $de, $f4, $01, $0a, $11, $16, $18, $14, $0f, $0b, $0f
14923     19 1F 1F 14 
14927     F5 D8 E5 EF 
1492b     F4 F5 EF EE 
1492f     EE F3 FF 0E | 	byte	$19, $1f, $1f, $14, $f5, $d8, $e5, $ef, $f4, $f5, $ef, $ee, $ee, $f3, $ff, $0e
14933     15 08 00 DA 
14937     D3 E2 F7 05 
1493b     0E 15 1A 1A 
1493f     16 12 0E 11 | 	byte	$15, $08, $00, $da, $d3, $e2, $f7, $05, $0e, $15, $1a, $1a, $16, $12, $0e, $11
14943     1A 21 21 12 
14947     EC D6 E7 F2 
1494b     F6 F2 EE ED 
1494f     ED F5 FF 0E | 	byte	$1a, $21, $21, $12, $ec, $d6, $e7, $f2, $f6, $f2, $ee, $ed, $ed, $f5, $ff, $0e
14953     16 07 E6 CE 
14957     DA E8 FA 0A 
1495b     12 19 1E 1C 
1495f     18 14 11 14 | 	byte	$16, $07, $e6, $ce, $da, $e8, $fa, $0a, $12, $19, $1e, $1c, $18, $14, $11, $14
14963     1B 22 22 0F 
14967     DE D6 EA F4 
1496b     F5 F0 EE EC 
1496f     EE F6 01 0D | 	byte	$1b, $22, $22, $0f, $de, $d6, $ea, $f4, $f5, $f0, $ee, $ec, $ee, $f6, $01, $0d
14973     17 FB D1 D3 
14977     DF EA FE 0D 
1497b     17 1C 20 1D 
1497f     1A 17 13 15 | 	byte	$17, $fb, $d1, $d3, $df, $ea, $fe, $0d, $17, $1c, $20, $1d, $1a, $17, $13, $15
14983     1C 23 24 0A 
14987     D8 DA EA F5 
1498b     F3 EF EF EC 
1498f     F0 F8 01 0E | 	byte	$1c, $23, $24, $0a, $d8, $da, $ea, $f5, $f3, $ef, $ef, $ec, $f0, $f8, $01, $0e
14993     14 E2 CC D9 
14997     E4 EF 01 11 
1499b     1A 20 23 1F 
1499f     1D 19 16 17 | 	byte	$14, $e2, $cc, $d9, $e4, $ef, $01, $11, $1a, $20, $23, $1f, $1d, $19, $16, $17
149a3     1C 24 23 FC 
149a7     D5 DC EB F4 
149ab     F1 F0 EF ED 
149af     F2 F9 01 0C | 	byte	$1c, $24, $23, $fc, $d5, $dc, $eb, $f4, $f1, $f0, $ef, $ed, $f2, $f9, $01, $0c
149b3     03 D4 D2 DE 
149b7     E8 F2 02 14 
149bb     1E 24 25 20 
149bf     1F 1C 19 19 | 	byte	$03, $d4, $d2, $de, $e8, $f2, $02, $14, $1e, $24, $25, $20, $1f, $1c, $19, $19
149c3     1D 24 20 F8 
149c7     D5 DE EB F0 
149cb     F0 F1 EE EE 
149cf     F3 F9 01 03 | 	byte	$1d, $24, $20, $f8, $d5, $de, $eb, $f0, $f0, $f1, $ee, $ee, $f3, $f9, $01, $03
149d3     E8 D5 D8 E3 
149d7     ED F6 05 16 
149db     21 27 25 21 
149df     21 1D 1C 1B | 	byte	$e8, $d5, $d8, $e3, $ed, $f6, $05, $16, $21, $27, $25, $21, $21, $1d, $1c, $1b
149e3     1C 23 1C EF 
149e7     D8 DD E9 ED 
149eb     F1 F1 EE F0 
149ef     F4 FA FF EE | 	byte	$1c, $23, $1c, $ef, $d8, $dd, $e9, $ed, $f1, $f1, $ee, $f0, $f4, $fa, $ff, $ee
149f3     DB DF DE E7 
149f7     F2 FA 07 18 
149fb     24 29 27 23 
149ff     23 1F 1E 1D | 	byte	$db, $df, $de, $e7, $f2, $fa, $07, $18, $24, $29, $27, $23, $23, $1f, $1e, $1d
14a03     1D 22 10 EB 
14a07     DD DF E4 EB 
14a0b     F2 F1 F0 F3 
14a0f     F6 FA F4 D4 | 	byte	$1d, $22, $10, $eb, $dd, $df, $e4, $eb, $f2, $f1, $f0, $f3, $f6, $fa, $f4, $d4
14a13     D9 E9 E4 EC 
14a17     F5 FE 09 1A 
14a1b     26 2B 27 25 
14a1f     25 21 21 1F | 	byte	$d9, $e9, $e4, $ec, $f5, $fe, $09, $1a, $26, $2b, $27, $25, $25, $21, $21, $1f
14a23     1D 1F 07 E7 
14a27     E4 DE DF EA 
14a2b     F2 F1 F2 F4 
14a2f     F6 F7 DE CA | 	byte	$1d, $1f, $07, $e7, $e4, $de, $df, $ea, $f2, $f1, $f2, $f4, $f6, $f7, $de, $ca
14a33     DF F0 EB F1 
14a37     F9 03 0A 1A 
14a3b     29 2D 28 28 
14a3f     26 23 23 21 | 	byte	$df, $f0, $eb, $f1, $f9, $03, $0a, $1a, $29, $2d, $28, $28, $26, $23, $23, $21
14a43     1F 1A F8 E7 
14a47     E9 DC DD EA 
14a4b     F0 F2 F5 F7 
14a4f     F8 EB C7 CF | 	byte	$1f, $1a, $f8, $e7, $e9, $dc, $dd, $ea, $f0, $f2, $f5, $f7, $f8, $eb, $c7, $cf
14a53     E1 F6 F4 F5 
14a57     FD 05 0D 19 
14a5b     28 2C 29 2A 
14a5f     27 24 25 23 | 	byte	$e1, $f6, $f4, $f5, $fd, $05, $0d, $19, $28, $2c, $29, $2a, $27, $24, $25, $23
14a63     1F 13 EF EA 
14a67     EB DC DD E7 
14a6b     EE F3 F7 F9 
14a6f     F5 D1 C1 D4 | 	byte	$1f, $13, $ef, $ea, $eb, $dc, $dd, $e7, $ee, $f3, $f7, $f9, $f5, $d1, $c1, $d4
14a73     E6 F9 FE FA 
14a77     02 09 10 1A 
14a7b     28 2C 2A 2B 
14a7f     28 26 26 25 | 	byte	$e6, $f9, $fe, $fa, $02, $09, $10, $1a, $28, $2c, $2a, $2b, $28, $26, $26, $25
14a83     20 08 E5 EB 
14a87     EB E0 DE E3 
14a8b     EC F6 FA FA 
14a8f     E7 C1 C7 D8 | 	byte	$20, $08, $e5, $eb, $eb, $e0, $de, $e3, $ec, $f6, $fa, $fa, $e7, $c1, $c7, $d8
14a93     E7 FA 06 00 
14a97     05 0C 13 1A 
14a9b     26 2B 2B 2D 
14a9f     28 27 28 27 | 	byte	$e7, $fa, $06, $00, $05, $0c, $13, $1a, $26, $2b, $2b, $2d, $28, $27, $28, $27
14aa3     20 FE E0 E9 
14aa7     E9 E5 DF E0 
14aab     EB F6 FB F6 
14aaf     CE BF CE DB | 	byte	$20, $fe, $e0, $e9, $e9, $e5, $df, $e0, $eb, $f6, $fb, $f6, $ce, $bf, $ce, $db
14ab3     EB FB 0C 07 
14ab7     09 0F 15 1B 
14abb     25 29 2C 2D 
14abf     29 28 29 28 | 	byte	$eb, $fb, $0c, $07, $09, $0f, $15, $1b, $25, $29, $2c, $2d, $29, $28, $29, $28
14ac3     1D F3 DD E5 
14ac7     E9 EA DF DF 
14acb     EB F7 FB E5 
14acf     C1 C8 D2 E0 | 	byte	$1d, $f3, $dd, $e5, $e9, $ea, $df, $df, $eb, $f7, $fb, $e5, $c1, $c8, $d2, $e0
14ad3     ED FE 0F 0F 
14ad7     0E 13 18 1D 
14adb     22 27 2D 2D 
14adf     29 29 29 29 | 	byte	$ed, $fe, $0f, $0f, $0e, $13, $18, $1d, $22, $27, $2d, $2d, $29, $29, $29, $29
14ae3     1A EA DA E1 
14ae7     EA EC E0 E0 
14aeb     EB F6 F5 CE 
14aef     C2 CE D7 E4 | 	byte	$1a, $ea, $da, $e1, $ea, $ec, $e0, $e0, $eb, $f6, $f5, $ce, $c2, $ce, $d7, $e4
14af3     F2 00 13 17 
14af7     12 16 1A 1F 
14afb     20 25 2D 2D 
14aff     2A 2B 2B 29 | 	byte	$f2, $00, $13, $17, $12, $16, $1a, $1f, $20, $25, $2d, $2d, $2a, $2b, $2b, $29
14b03     16 E6 D7 DF 
14b07     EB EB E4 E2 
14b0b     EA F5 E5 C4 
14b0f     C9 D3 DC E7 | 	byte	$16, $e6, $d7, $df, $eb, $eb, $e4, $e2, $ea, $f5, $e5, $c4, $c9, $d3, $dc, $e7
14b13     F5 04 14 1C 
14b17     16 19 1C 20 
14b1b     1E 24 2C 2C 
14b1f     2B 2B 2B 28 | 	byte	$f5, $04, $14, $1c, $16, $19, $1c, $20, $1e, $24, $2c, $2c, $2b, $2b, $2b, $28
14b23     0A E0 D6 E0 
14b27     E9 EB E9 E5 
14b2b     EA EC CF C4 
14b2f     D0 D8 E0 EB | 	byte	$0a, $e0, $d6, $e0, $e9, $eb, $e9, $e5, $ea, $ec, $cf, $c4, $d0, $d8, $e0, $eb
14b33     F8 07 15 20 
14b37     1A 1C 1E 21 
14b3b     1D 22 2B 2B 
14b3f     2B 2C 2B 25 | 	byte	$f8, $07, $15, $20, $1a, $1c, $1e, $21, $1d, $22, $2b, $2b, $2b, $2c, $2b, $25
14b43     05 DB D8 DF 
14b47     E5 EC EC E7 
14b4b     E9 DA C4 CA 
14b4f     D5 DD E5 F0 | 	byte	$05, $db, $d8, $df, $e5, $ec, $ec, $e7, $e9, $da, $c4, $ca, $d5, $dd, $e5, $f0
14b53     FC 09 18 24 
14b57     1E 20 21 22 
14b5b     1C 22 29 2A 
14b5f     2C 2C 2B 20 | 	byte	$fc, $09, $18, $24, $1e, $20, $21, $22, $1c, $22, $29, $2a, $2c, $2c, $2b, $20
14b63     F9 D8 DA DD 
14b67     E3 ED EF EA 
14b6b     E2 C8 C1 D1 
14b6f     DA E2 E9 F3 | 	byte	$f9, $d8, $da, $dd, $e3, $ed, $ef, $ea, $e2, $c8, $c1, $d1, $da, $e2, $e9, $f3
14b73     FF 0C 19 27 
14b77     22 22 23 21 
14b7b     1C 21 27 29 
14b7f     2D 2D 2B 19 | 	byte	$ff, $0c, $19, $27, $22, $22, $23, $21, $1c, $21, $27, $29, $2d, $2d, $2b, $19
14b83     EF D8 DA DA 
14b87     E4 EE F2 E9 
14b8b     D3 BC C5 D5 
14b8f     DF E6 EE F7 | 	byte	$ef, $d8, $da, $da, $e4, $ee, $f2, $e9, $d3, $bc, $c5, $d5, $df, $e6, $ee, $f7
14b93     02 0F 1C 29 
14b97     25 25 25 21 
14b9b     1B 20 25 28 
14b9f     2C 2D 2A 0F | 	byte	$02, $0f, $1c, $29, $25, $25, $25, $21, $1b, $20, $25, $28, $2c, $2d, $2a, $0f
14ba3     E7 D9 D9 DA 
14ba7     E6 EF F3 E5 
14bab     C4 BA CA D9 
14baf     E3 EB F2 FB | 	byte	$e7, $d9, $d9, $da, $e6, $ef, $f3, $e5, $c4, $ba, $ca, $d9, $e3, $eb, $f2, $fb
14bb3     06 11 1E 2C 
14bb7     29 27 27 20 
14bbb     1C 1F 23 28 
14bbf     2C 2D 26 06 | 	byte	$06, $11, $1e, $2c, $29, $27, $27, $20, $1c, $1f, $23, $28, $2c, $2d, $26, $06
14bc3     E1 D8 D7 DC 
14bc7     E7 F0 F2 D8 
14bcb     BA BC CF DC 
14bcf     E8 EF F7 FF | 	byte	$e1, $d8, $d7, $dc, $e7, $f0, $f2, $d8, $ba, $bc, $cf, $dc, $e8, $ef, $f7, $ff
14bd3     09 15 20 2E 
14bd7     2B 29 28 1F 
14bdb     1D 1D 22 29 
14bdf     2C 2C 1D 01 | 	byte	$09, $15, $20, $2e, $2b, $29, $28, $1f, $1d, $1d, $22, $29, $2c, $2c, $1d, $01
14be3     DF D6 D8 DE 
14be7     E9 F1 EC C9 
14beb     B5 C2 D3 E0 
14bef     EB F4 FB 03 | 	byte	$df, $d6, $d8, $de, $e9, $f1, $ec, $c9, $b5, $c2, $d3, $e0, $eb, $f4, $fb, $03
14bf3     0D 17 24 2F 
14bf7     2E 2A 28 1E 
14bfb     1D 1C 22 29 
14bff     2C 28 17 F7 | 	byte	$0d, $17, $24, $2f, $2e, $2a, $28, $1e, $1d, $1c, $22, $29, $2c, $28, $17, $f7
14c03     DA D6 DB DF 
14c07     EA EF DF BC 
14c0b     B8 C8 D7 E4 
14c0f     F0 F7 FE 06 | 	byte	$da, $d6, $db, $df, $ea, $ef, $df, $bc, $b8, $c8, $d7, $e4, $f0, $f7, $fe, $06
14c13     10 1B 26 32 
14c17     2F 2C 28 1E 
14c1b     1C 1A 23 28 
14c1f     2A 23 11 EE | 	byte	$10, $1b, $26, $32, $2f, $2c, $28, $1e, $1c, $1a, $23, $28, $2a, $23, $11, $ee
14c23     D5 D9 DC E1 
14c27     EB E9 D0 B8 
14c2b     BE CE DB E9 
14c2f     F3 FB 02 0A | 	byte	$d5, $d9, $dc, $e1, $eb, $e9, $d0, $b8, $be, $ce, $db, $e9, $f3, $fb, $02, $0a
14c33     14 1F 29 34 
14c37     2F 2D 27 1F 
14c3b     1A 1A 24 28 
14c3f     26 1E 0B E6 | 	byte	$14, $1f, $29, $34, $2f, $2d, $27, $1f, $1a, $1a, $24, $28, $26, $1e, $0b, $e6
14c43     D3 DA DE E2 
14c47     EA DF C2 B8 
14c4b     C5 D3 E0 ED 
14c4f     F6 FF 06 0D | 	byte	$d3, $da, $de, $e2, $ea, $df, $c2, $b8, $c5, $d3, $e0, $ed, $f6, $ff, $06, $0d
14c53     17 21 2B 36 
14c57     30 2D 26 1E 
14c5b     18 1B 24 27 
14c5f     21 1B 05 DD | 	byte	$17, $21, $2b, $36, $30, $2d, $26, $1e, $18, $1b, $24, $27, $21, $1b, $05, $dd
14c63     D5 DD DF E4 
14c67     E5 CF BB BE 
14c6b     C9 D7 E5 F1 
14c6f     FA 02 09 10 | 	byte	$d5, $dd, $df, $e4, $e5, $cf, $bb, $be, $c9, $d7, $e5, $f1, $fa, $02, $09, $10
14c73     1B 24 2F 37 
14c77     2F 2C 25 1D 
14c7b     17 1C 24 23 
14c7f     1D 16 FA D8 | 	byte	$1b, $24, $2f, $37, $2f, $2c, $25, $1d, $17, $1c, $24, $23, $1d, $16, $fa, $d8
14c83     D7 DE E1 E4 
14c87     D9 C0 BD C4 
14c8b     CF DD E9 F4 
14c8f     FE 05 0C 15 | 	byte	$d7, $de, $e1, $e4, $d9, $c0, $bd, $c4, $cf, $dd, $e9, $f4, $fe, $05, $0c, $15
14c93     1E 27 31 39 
14c97     30 2C 24 1B 
14c9b     17 1D 23 1F 
14c9f     1A 10 F4 D6 | 	byte	$1e, $27, $31, $39, $30, $2c, $24, $1b, $17, $1d, $23, $1f, $1a, $10, $f4, $d6
14ca3     DA DF E1 DE 
14ca7     CA BA C3 C8 
14cab     D4 E2 EF F8 
14caf     02 09 0F 18 | 	byte	$da, $df, $e1, $de, $ca, $ba, $c3, $c8, $d4, $e2, $ef, $f8, $02, $09, $0f, $18
14cb3     21 2A 35 3A 
14cb7     2F 2B 22 19 
14cbb     18 1E 20 1A 
14cbf     16 0D EB D5 | 	byte	$21, $2a, $35, $3a, $2f, $2b, $22, $19, $18, $1e, $20, $1a, $16, $0d, $eb, $d5
14cc3     DC E1 E1 D3 
14cc7     BA BE C7 CC 
14ccb     D9 E6 F2 FC 
14ccf     05 0C 13 1C | 	byte	$dc, $e1, $e1, $d3, $ba, $be, $c7, $cc, $d9, $e6, $f2, $fc, $05, $0c, $13, $1c
14cd3     25 2D 37 3A 
14cd7     2F 2A 20 19 
14cdb     19 1D 1B 17 
14cdf     13 08 E3 D5 | 	byte	$25, $2d, $37, $3a, $2f, $2a, $20, $19, $19, $1d, $1b, $17, $13, $08, $e3, $d5
14ce3     DD E1 DC C0 
14ce7     B5 C5 CB D1 
14ceb     DE EC F7 FF 
14cef     08 0E 16 1F | 	byte	$dd, $e1, $dc, $c0, $b5, $c5, $cb, $d1, $de, $ec, $f7, $ff, $08, $0e, $16, $1f
14cf3     28 2F 39 38 
14cf7     2E 28 1E 18 
14cfb     19 1A 18 13 
14cff     11 01 DB D7 | 	byte	$28, $2f, $39, $38, $2e, $28, $1e, $18, $19, $1a, $18, $13, $11, $01, $db, $d7
14d03     DF E1 CD B1 
14d07     BC C9 CE D6 
14d0b     E3 F1 FA 03 
14d0f     0B 12 1A 22 | 	byte	$df, $e1, $cd, $b1, $bc, $c9, $ce, $d6, $e3, $f1, $fa, $03, $0b, $12, $1a, $22
14d13     2B 32 3C 36 
14d17     2D 26 1D 18 
14d1b     18 17 14 11 
14d1f     11 FB D6 D9 | 	byte	$2b, $32, $3c, $36, $2d, $26, $1d, $18, $18, $17, $14, $11, $11, $fb, $d6, $d9
14d23     DF DC B9 AF 
14d27     C2 CE D0 DB 
14d2b     E9 F6 FF 06 
14d2f     0E 15 1D 26 | 	byte	$df, $dc, $b9, $af, $c2, $ce, $d0, $db, $e9, $f6, $ff, $06, $0e, $15, $1d, $26
14d33     2E 36 3D 34 
14d37     2D 24 1B 18 
14d3b     15 14 11 11 
14d3f     11 F0 D3 DB | 	byte	$2e, $36, $3d, $34, $2d, $24, $1b, $18, $15, $14, $11, $11, $11, $f0, $d3, $db
14d43     E0 CC A9 B7 
14d47     C8 D1 D3 DF 
14d4b     EE FA 02 09 
14d4f     10 18 21 2A | 	byte	$e0, $cc, $a9, $b7, $c8, $d1, $d3, $df, $ee, $fa, $02, $09, $10, $18, $21, $2a
14d53     31 39 3C 32 
14d57     2C 21 1A 15 
14d5b     11 10 0F 12 
14d5f     0C E7 D3 DC | 	byte	$31, $39, $3c, $32, $2c, $21, $1a, $15, $11, $10, $0f, $12, $0c, $e7, $d3, $dc
14d63     D9 B1 A8 C0 
14d67     CD D3 D8 E5 
14d6b     F4 FE 05 0C 
14d6f     13 1C 25 2D | 	byte	$d9, $b1, $a8, $c0, $cd, $d3, $d8, $e5, $f4, $fe, $05, $0c, $13, $1c, $25, $2d
14d73     34 3B 3A 2F 
14d77     2A 1F 19 12 
14d7b     0F 0F 10 11 
14d7f     05 DD D5 DC | 	byte	$34, $3b, $3a, $2f, $2a, $1f, $19, $12, $0f, $0f, $10, $11, $05, $dd, $d5, $dc
14d83     C7 A5 B3 C6 
14d87     D2 D5 DB EB 
14d8b     F9 02 08 0F 
14d8f     17 1F 29 31 | 	byte	$c7, $a5, $b3, $c6, $d2, $d5, $db, $eb, $f9, $02, $08, $0f, $17, $1f, $29, $31
14d93     37 3E 37 2F 
14d97     27 1D 16 0E 
14d9b     0D 0F 11 11 
14d9f     FC D9 D8 D2 | 	byte	$37, $3e, $37, $2f, $27, $1d, $16, $0e, $0d, $0f, $11, $11, $fc, $d9, $d8, $d2
14da3     AE A6 BA CC 
14da7     D5 D7 E1 F1 
14dab     FE 05 0B 11 
14daf     1A 23 2C 34 | 	byte	$ae, $a6, $ba, $cc, $d5, $d7, $e1, $f1, $fe, $05, $0b, $11, $1a, $23, $2c, $34
14db3     3B 3E 33 2F 
14db7     25 1C 11 0B 
14dbb     0D 10 11 0D 
14dbf     EF D8 D4 BA | 	byte	$3b, $3e, $33, $2f, $25, $1c, $11, $0b, $0d, $10, $11, $0d, $ef, $d8, $d4, $ba
14dc3     A6 AD C3 D1 
14dc7     D7 DA E7 F6 
14dcb     02 08 0D 15 
14dcf     1E 27 2F 37 | 	byte	$a6, $ad, $c3, $d1, $d7, $da, $e7, $f6, $02, $08, $0d, $15, $1e, $27, $2f, $37
14dd3     3D 3B 31 2E 
14dd7     21 17 0C 0A 
14ddb     0D 10 10 04 
14ddf     E6 D8 C3 AE | 	byte	$3d, $3b, $31, $2e, $21, $17, $0c, $0a, $0d, $10, $10, $04, $e6, $d8, $c3, $ae
14de3     A7 B7 C9 D6 
14de7     D8 DE EE FD 
14deb     06 0B 10 19 
14def     22 2C 33 3A | 	byte	$a7, $b7, $c9, $d6, $d8, $de, $ee, $fd, $06, $0b, $10, $19, $22, $2c, $33, $3a
14df3     3F 36 32 2C 
14df7     1F 11 09 0A 
14dfb     0F 10 0E F9 
14dff     E1 CC B2 A9 | 	byte	$3f, $36, $32, $2c, $1f, $11, $09, $0a, $0f, $10, $0e, $f9, $e1, $cc, $b2, $a9
14e03     AA BF CF D8 
14e07     DA E5 F4 02 
14e0b     09 0E 14 1C 
14e0f     27 30 37 3D | 	byte	$aa, $bf, $cf, $d8, $da, $e5, $f4, $02, $09, $0e, $14, $1c, $27, $30, $37, $3d
14e13     3D 33 32 28 
14e17     19 0C 07 0B 
14e1b     10 11 08 ED 
14e1f     DD B7 AD A7 | 	byte	$3d, $33, $32, $28, $19, $0c, $07, $0b, $10, $11, $08, $ed, $dd, $b7, $ad, $a7
14e23     B1 C6 D5 DA 
14e27     DD EA FA 06 
14e2b     0B 10 17 21 
14e2f     2B 33 39 3E | 	byte	$b1, $c6, $d5, $da, $dd, $ea, $fa, $06, $0b, $10, $17, $21, $2b, $33, $39, $3e
14e33     39 32 32 24 
14e37     13 07 07 0D 
14e3b     0F 0F FF E5 
14e3f     CC AF AB A9 | 	byte	$39, $32, $32, $24, $13, $07, $07, $0d, $0f, $0f, $ff, $e5, $cc, $af, $ab, $a9
14e43     BC CD D9 DB 
14e47     E2 F2 FF 09 
14e4b     0E 13 1B 25 
14e4f     2F 37 3C 3F | 	byte	$bc, $cd, $d9, $db, $e2, $f2, $ff, $09, $0e, $13, $1b, $25, $2f, $37, $3c, $3f
14e53     37 34 2E 1E 
14e57     0C 05 08 0E 
14e5b     0F 0B F2 D7 
14e5f     B9 B0 A8 AF | 	byte	$37, $34, $2e, $1e, $0c, $05, $08, $0e, $0f, $0b, $f2, $d7, $b9, $b0, $a8, $af
14e63     C3 D4 DD DE 
14e67     E7 F7 05 0C 
14e6b     10 17 1F 2A 
14e6f     33 39 3E 3E | 	byte	$c3, $d4, $dd, $de, $e7, $f7, $05, $0c, $10, $17, $1f, $2a, $33, $39, $3e, $3e
14e73     34 35 2A 16 
14e77     08 04 0A 0E 
14e7b     0E 03 E0 C4 
14e7f     B8 AC A8 B6 | 	byte	$34, $35, $2a, $16, $08, $04, $0a, $0e, $0e, $03, $e0, $c4, $b8, $ac, $a8, $b6
14e83     CA D9 DF E1 
14e87     EE FD 09 0E 
14e8b     12 1A 23 2D 
14e8f     36 3B 40 3B | 	byte	$ca, $d9, $df, $e1, $ee, $fd, $09, $0e, $12, $1a, $23, $2d, $36, $3b, $40, $3b
14e93     33 34 25 12 
14e97     04 04 0B 0E 
14e9b     0C F2 C9 BE 
14e9f     B8 A9 AD BD | 	byte	$33, $34, $25, $12, $04, $04, $0b, $0e, $0c, $f2, $c9, $be, $b8, $a9, $ad, $bd
14ea3     D2 DE E2 E7 
14ea7     F3 03 0D 11 
14eab     16 1D 27 30 
14eaf     39 3E 41 38 | 	byte	$d2, $de, $e2, $e7, $f3, $03, $0d, $11, $16, $1d, $27, $30, $39, $3e, $41, $38
14eb3     34 31 1C 0E 
14eb7     01 06 0B 0D 
14ebb     07 D9 BA C2 
14ebf     B3 A8 B3 C7 | 	byte	$34, $31, $1c, $0e, $01, $06, $0b, $0d, $07, $d9, $ba, $c2, $b3, $a8, $b3, $c7
14ec3     D7 E3 E4 EB 
14ec7     FA 07 10 14 
14ecb     19 21 2B 34 
14ecf     3A 40 41 37 | 	byte	$d7, $e3, $e4, $eb, $fa, $07, $10, $14, $19, $21, $2b, $34, $3a, $40, $41, $37
14ed3     34 29 17 08 
14ed7     00 07 0B 0B 
14edb     F5 BE BE C2 
14edf     AD AC B9 CC | 	byte	$34, $29, $17, $08, $00, $07, $0b, $0b, $f5, $be, $be, $c2, $ad, $ac, $b9, $cc
14ee3     DE E7 E8 F1 
14ee7     FF 0D 13 17 
14eeb     1C 25 2F 37 
14eef     3D 41 40 34 | 	byte	$de, $e7, $e8, $f1, $ff, $0d, $13, $17, $1c, $25, $2f, $37, $3d, $41, $40, $34
14ef3     32 22 14 05 
14ef7     00 07 0B 05 
14efb     D6 B5 C4 BC 
14eff     AA B3 C1 D3 | 	byte	$32, $22, $14, $05, $00, $07, $0b, $05, $d6, $b5, $c4, $bc, $aa, $b3, $c1, $d3
14f03     E4 EB EC F6 
14f07     04 10 16 19 
14f0b     1E 27 32 39 
14f0f     3F 42 3E 33 | 	byte	$e4, $eb, $ec, $f6, $04, $10, $16, $19, $1e, $27, $32, $39, $3f, $42, $3e, $33
14f13     2E 1C 11 02 
14f17     01 07 0A F4 
14f1b     BD BB C4 B3 
14f1f     AE B9 C7 DA | 	byte	$2e, $1c, $11, $02, $01, $07, $0a, $f4, $bd, $bb, $c4, $b3, $ae, $b9, $c7, $da
14f23     E9 EF F0 FB 
14f27     09 14 19 1B 
14f2b     22 2A 34 3C 
14f2f     40 42 3E 30 | 	byte	$e9, $ef, $f0, $fb, $09, $14, $19, $1b, $22, $2a, $34, $3c, $40, $42, $3e, $30
14f33     27 19 0C 01 
14f37     01 07 02 D4 
14f3b     B6 BF BE AF 
14f3f     B4 BE CD E1 | 	byte	$27, $19, $0c, $01, $01, $07, $02, $d4, $b6, $bf, $be, $af, $b4, $be, $cd, $e1
14f43     EF F2 F4 FF 
14f47     0E 17 1B 1E 
14f4b     24 2E 36 3D 
14f4f     41 42 3A 2C | 	byte	$ef, $f2, $f4, $ff, $0e, $17, $1b, $1e, $24, $2e, $36, $3d, $41, $42, $3a, $2c
14f53     23 15 0A FF 
14f57     01 05 EF C4 
14f5b     B9 C0 B8 B1 
14f5f     B9 C4 D3 E7 | 	byte	$23, $15, $0a, $ff, $01, $05, $ef, $c4, $b9, $c0, $b8, $b1, $b9, $c4, $d3, $e7
14f63     F4 F7 F9 03 
14f67     12 1A 1E 20 
14f6b     26 30 39 3E 
14f6f     42 42 36 26 | 	byte	$f4, $f7, $f9, $03, $12, $1a, $1e, $20, $26, $30, $39, $3e, $42, $42, $36, $26
14f73     20 12 08 FF 
14f77     01 F7 DB BD 
14f7b     BA BA B4 B5 
14f7f     C1 C9 DA ED | 	byte	$20, $12, $08, $ff, $01, $f7, $db, $bd, $ba, $ba, $b4, $b5, $c1, $c9, $da, $ed
14f83     F9 FA FC 09 
14f87     15 1D 20 22 
14f8b     29 32 3A 3F 
14f8f     42 41 30 23 | 	byte	$f9, $fa, $fc, $09, $15, $1d, $20, $22, $29, $32, $3a, $3f, $42, $41, $30, $23
14f93     1D 0E 05 FE 
14f97     FC E7 CF BB 
14f9b     B9 B5 B5 B9 
14f9f     C7 CF E1 F1 | 	byte	$1d, $0e, $05, $fe, $fc, $e7, $cf, $bb, $b9, $b5, $b5, $b9, $c7, $cf, $e1, $f1
14fa3     FD FE 01 0D 
14fa7     18 20 23 25 
14fab     2C 34 3C 40 
14faf     42 3D 2B 21 | 	byte	$fd, $fe, $01, $0d, $18, $20, $23, $25, $2c, $34, $3c, $40, $42, $3d, $2b, $21
14fb3     19 0B 06 FD 
14fb7     ED DA CB B8 
14fbb     B3 B6 B6 BF 
14fbf     CC D4 E5 F6 | 	byte	$19, $0b, $06, $fd, $ed, $da, $cb, $b8, $b3, $b6, $b6, $bf, $cc, $d4, $e5, $f6
14fc3     02 03 05 10 
14fc7     1C 23 26 28 
14fcb     2D 35 3D 41 
14fcf     41 37 28 1F | 	byte	$02, $03, $05, $10, $1c, $23, $26, $28, $2d, $35, $3d, $41, $41, $37, $28, $1f
14fd3     14 09 04 F6 
14fd7     DD D6 C5 B1 
14fdb     B0 B7 B8 C5 
14fdf     D1 DA EB FD | 	byte	$14, $09, $04, $f6, $dd, $d6, $c5, $b1, $b0, $b7, $b8, $c5, $d1, $da, $eb, $fd
14fe3     07 06 09 13 
14fe7     1F 25 27 28 
14feb     2E 36 3D 41 
14fef     3D 33 28 1B | 	byte	$07, $06, $09, $13, $1f, $25, $27, $28, $2e, $36, $3d, $41, $3d, $33, $28, $1b
14ff3     10 09 02 E5 
14ff7     D3 D5 BD AB 
14ffb     B4 B7 BB CB 
14fff     D7 E0 EF 01 | 	byte	$10, $09, $02, $e5, $d3, $d5, $bd, $ab, $b4, $b7, $bb, $cb, $d7, $e0, $ef, $01
15003     0B 0B 0D 16 
15007     22 28 29 2A 
1500b     2F 37 3E 3F 
1500f     39 31 26 16 | 	byte	$0b, $0b, $0d, $16, $22, $28, $29, $2a, $2f, $37, $3e, $3f, $39, $31, $26, $16
15013     0C 09 F9 D5 
15017     D4 CF B0 AB 
1501b     B7 B6 C0 D1 
1501f     DD E5 F4 05 | 	byte	$0c, $09, $f9, $d5, $d4, $cf, $b0, $ab, $b7, $b6, $c0, $d1, $dd, $e5, $f4, $05
15023     10 10 11 19 
15027     24 2A 2B 2C 
1502b     30 38 3E 3C 
1502f     35 31 24 0F | 	byte	$10, $10, $11, $19, $24, $2a, $2b, $2c, $30, $38, $3e, $3c, $35, $31, $24, $0f
15033     0C 06 E8 CF 
15037     D6 C5 A6 B1 
1503b     B8 B7 C5 D7 
1503f     E3 EB F8 0A | 	byte	$0c, $06, $e8, $cf, $d6, $c5, $a6, $b1, $b8, $b7, $c5, $d7, $e3, $eb, $f8, $0a
15043     14 15 14 1C 
15047     25 2C 2D 2D 
1504b     31 37 3C 38 
1504f     33 30 22 0B | 	byte	$14, $15, $14, $1c, $25, $2c, $2d, $2d, $31, $37, $3c, $38, $33, $30, $22, $0b
15053     0C FC D7 D2 
15057     D3 B6 A7 B7 
1505b     B8 B9 CA DC 
1505f     E9 F0 FC 0E | 	byte	$0c, $fc, $d7, $d2, $d3, $b6, $a7, $b7, $b8, $b9, $ca, $dc, $e9, $f0, $fc, $0e
15063     18 1A 18 1E 
15067     28 2E 2F 2E 
1506b     31 37 38 33 
1506f     32 2F 1B 08 | 	byte	$18, $1a, $18, $1e, $28, $2e, $2f, $2e, $31, $37, $38, $33, $32, $2f, $1b, $08
15073     08 E9 D2 D5 
15077     C9 AA AD B9 
1507b     B7 BD D0 E2 
1507f     EE F5 FF 11 | 	byte	$08, $e9, $d2, $d5, $c9, $aa, $ad, $b9, $b7, $bd, $d0, $e2, $ee, $f5, $ff, $11
15083     1D 1F 1B 20 
15087     29 2F 31 30 
1508b     31 35 32 32 
1508f     32 2B 18 08 | 	byte	$1d, $1f, $1b, $20, $29, $2f, $31, $30, $31, $35, $32, $32, $32, $2b, $18, $08
15093     FF DF D4 D2 
15097     BD AA B1 BB 
1509b     B7 C3 D5 E5 
1509f     F3 FA 03 14 | 	byte	$ff, $df, $d4, $d2, $bd, $aa, $b1, $bb, $b7, $c3, $d5, $e5, $f3, $fa, $03, $14
150a3     20 23 1F 23 
150a7     2A 30 33 31 
150ab     31 30 2E 31 
150af     31 27 16 05 | 	byte	$20, $23, $1f, $23, $2a, $30, $33, $31, $31, $30, $2e, $31, $31, $27, $16, $05
150b3     EE D9 D5 CA 
150b7     B7 AA B7 BA 
150bb     B9 C9 D8 EA 
150bf     F9 00 07 16 | 	byte	$ee, $d9, $d5, $ca, $b7, $aa, $b7, $ba, $b9, $c9, $d8, $ea, $f9, $00, $07, $16
150c3     23 28 23 24 
150c7     2A 31 33 32 
150cb     2E 2A 2C 30 
150cf     2C 23 17 FC | 	byte	$23, $28, $23, $24, $2a, $31, $33, $32, $2e, $2a, $2c, $30, $2c, $23, $17, $fc
150d3     E1 DA CF C5 
150d7     B8 AB BA B9 
150db     BD CC DD ED 
150df     FC 06 0B 19 | 	byte	$e1, $da, $cf, $c5, $b8, $ab, $ba, $b9, $bd, $cc, $dd, $ed, $fc, $06, $0b, $19
150e3     25 2C 28 26 
150e7     2B 32 34 32 
150eb     2A 26 2B 2E 
150ef     29 20 12 F2 | 	byte	$25, $2c, $28, $26, $2b, $32, $34, $32, $2a, $26, $2b, $2e, $29, $20, $12, $f2
150f3     DA D8 C8 C7 
150f7     B7 AD BB B9 
150fb     C2 D0 E0 F1 
150ff     00 0A 0F 19 | 	byte	$da, $d8, $c8, $c7, $b7, $ad, $bb, $b9, $c2, $d0, $e0, $f1, $00, $0a, $0f, $19
15103     28 2F 2D 29 
15107     2C 32 35 31 
1510b     25 24 2A 2A 
1510f     25 1F 0C E6 | 	byte	$28, $2f, $2d, $29, $2c, $32, $35, $31, $25, $24, $2a, $2a, $25, $1f, $0c, $e6
15113     D8 D0 C7 CA 
15117     B6 B0 B9 BB 
1511b     C7 D6 E3 F4 
1511f     04 0E 13 1A | 	byte	$d8, $d0, $c7, $ca, $b6, $b0, $b9, $bb, $c7, $d6, $e3, $f4, $04, $0e, $13, $1a
15123     29 32 32 2C 
15127     2C 31 34 2D 
1512b     24 23 26 25 
1512f     24 1B 00 E3 | 	byte	$29, $32, $32, $2c, $2c, $31, $34, $2d, $24, $23, $26, $25, $24, $1b, $00, $e3
15133     D4 C9 CC CC 
15137     B7 B3 B8 BD 
1513b     CB D9 E8 F7 
1513f     06 12 18 1D | 	byte	$d4, $c9, $cc, $cc, $b7, $b3, $b8, $bd, $cb, $d9, $e8, $f7, $06, $12, $18, $1d
15143     29 33 36 2F 
15147     2D 31 31 29 
1514b     24 22 21 21 
1514f     22 13 F1 E4 | 	byte	$29, $33, $36, $2f, $2d, $31, $31, $29, $24, $22, $21, $21, $22, $13, $f1, $e4
15153     CD C6 D1 CE 
15157     B7 B7 B6 BF 
1515b     D1 DE EB F8 
1515f     07 14 1D 1F | 	byte	$cd, $c6, $d1, $ce, $b7, $b7, $b6, $bf, $d1, $de, $eb, $f8, $07, $14, $1d, $1f
15163     29 34 39 34 
15167     2F 2F 2C 27 
1516b     25 21 1C 1F 
1516f     1E 05 E9 E2 | 	byte	$29, $34, $39, $34, $2f, $2f, $2c, $27, $25, $21, $1c, $1f, $1e, $05, $e9, $e2
15173     CA C8 D5 CE 
15177     B9 B9 B7 C2 
1517b     D4 E1 EE FB 
1517f     09 16 21 23 | 	byte	$ca, $c8, $d5, $ce, $b9, $b9, $b7, $c2, $d4, $e1, $ee, $fb, $09, $16, $21, $23
15183     28 34 3B 39 
15187     31 2C 27 27 
1518b     26 1D 19 1D 
1518f     16 F6 E7 DA | 	byte	$28, $34, $3b, $39, $31, $2c, $27, $27, $26, $1d, $19, $1d, $16, $f6, $e7, $da
15193     CD CD D9 CF 
15197     BA BB B8 C7 
1519b     D7 E6 F1 FE 
1519f     0B 18 23 27 | 	byte	$cd, $cd, $d9, $cf, $ba, $bb, $b8, $c7, $d7, $e6, $f1, $fe, $0b, $18, $23, $27
151a3     29 34 3B 3D 
151a7     32 28 23 26 
151ab     23 1A 19 1A 
151af     07 EB E4 D5 | 	byte	$29, $34, $3b, $3d, $32, $28, $23, $26, $23, $1a, $19, $1a, $07, $eb, $e4, $d5
151b3     D3 D2 D9 CE 
151b7     BC BC BB CA 
151bb     DB E9 F5 01 
151bf     0D 1A 25 2B | 	byte	$d3, $d2, $d9, $ce, $bc, $bc, $bb, $ca, $db, $e9, $f5, $01, $0d, $1a, $25, $2b
151c3     2B 32 3C 3F 
151c7     33 24 22 23 
151cb     1F 1B 19 14 
151cf     F4 E6 DD D5 | 	byte	$2b, $32, $3c, $3f, $33, $24, $22, $23, $1f, $1b, $19, $14, $f4, $e6, $dd, $d5
151d3     D8 D9 DA CD 
151d7     BF BD BF CD 
151db     DD ED F8 04 
151df     0E 1A 27 2E | 	byte	$d8, $d9, $da, $cd, $bf, $bd, $bf, $cd, $dd, $ed, $f8, $04, $0e, $1a, $27, $2e
151e3     2E 32 3C 3E 
151e7     32 24 22 1F 
151eb     1C 1C 19 09 
151ef     E8 E2 D9 D8 | 	byte	$2e, $32, $3c, $3e, $32, $24, $22, $1f, $1c, $1c, $19, $09, $e8, $e2, $d9, $d8
151f3     DD DF DA CC 
151f7     C2 BF C4 D3 
151fb     E1 F0 FC 06 
151ff     10 1B 27 30 | 	byte	$dd, $df, $da, $cc, $c2, $bf, $c4, $d3, $e1, $f0, $fc, $06, $10, $1b, $27, $30
15203     30 32 3A 3A 
15207     30 26 21 1B 
1520b     1B 1C 17 F5 
1520f     E1 DB D8 DB | 	byte	$30, $32, $3a, $3a, $30, $26, $21, $1b, $1b, $1c, $17, $f5, $e1, $db, $d8, $db
15213     E1 E5 DB C9 
15217     C6 C1 C9 D6 
1521b     E5 F2 FF 09 
1521f     12 1D 27 31 | 	byte	$e1, $e5, $db, $c9, $c6, $c1, $c9, $d6, $e5, $f2, $ff, $09, $12, $1d, $27, $31
15223     32 32 38 36 
15227     31 26 1D 19 
1522b     1B 1B 0C E9 
1522f     DD D6 DA DF | 	byte	$32, $32, $38, $36, $31, $26, $1d, $19, $1b, $1b, $0c, $e9, $dd, $d6, $da, $df
15233     E5 E9 DA C7 
15237     C9 C3 CD DA 
1523b     E9 F5 02 0C 
1523f     14 1E 28 31 | 	byte	$e5, $e9, $da, $c7, $c9, $c3, $cd, $da, $e9, $f5, $02, $0c, $14, $1e, $28, $31
15243     34 32 33 32 
15247     32 24 1B 1B 
1524b     1B 17 F9 E4 
1524f     D8 D7 DD E3 | 	byte	$34, $32, $33, $32, $32, $24, $1b, $1b, $1b, $17, $f9, $e4, $d8, $d7, $dd, $e3
15253     E9 ED D8 C7 
15257     CB C6 D3 DF 
1525b     EC F8 03 0E 
1525f     16 1F 28 31 | 	byte	$e9, $ed, $d8, $c7, $cb, $c6, $d3, $df, $ec, $f8, $03, $0e, $16, $1f, $28, $31
15263     36 31 2D 31 
15267     31 24 1C 1B 
1526b     1A 0A ED E1 
1526f     D4 D8 DF E8 | 	byte	$36, $31, $2d, $31, $31, $24, $1c, $1b, $1a, $0a, $ed, $e1, $d4, $d8, $df, $e8
15273     ED EF D6 C8 
15277     CD CB D7 E3 
1527b     EF FB 07 10 
1527f     18 1F 28 32 | 	byte	$ed, $ef, $d6, $c8, $cd, $cb, $d7, $e3, $ef, $fb, $07, $10, $18, $1f, $28, $32
15283     36 2D 29 30 
15287     2C 23 1C 1B 
1528b     15 F7 E9 DB 
1528f     D5 DB E3 EC | 	byte	$36, $2d, $29, $30, $2c, $23, $1c, $1b, $15, $f7, $e9, $db, $d5, $db, $e3, $ec
15293     F0 EF D5 CA 
15297     CF CE DB E6 
1529b     F2 FF 09 12 
1529f     1A 21 29 31 | 	byte	$f0, $ef, $d5, $ca, $cf, $ce, $db, $e6, $f2, $ff, $09, $12, $1a, $21, $29, $31
152a3     34 2A 28 2C 
152a7     29 24 1D 1A 
152ab     07 EE E6 D7 
152af     D8 DD E7 F0 | 	byte	$34, $2a, $28, $2c, $29, $24, $1d, $1a, $07, $ee, $e6, $d7, $d8, $dd, $e7, $f0
152b3     F4 EE D2 CE 
152b7     D0 D2 DF EB 
152bb     F6 02 0B 14 
152bf     1C 22 2A 31 | 	byte	$f4, $ee, $d2, $ce, $d0, $d2, $df, $eb, $f6, $02, $0b, $14, $1c, $22, $2a, $31
152c3     31 28 26 28 
152c7     2A 26 1D 14 
152cb     F5 ED E1 D6 
152cf     DB E1 EB F3 | 	byte	$31, $28, $26, $28, $2a, $26, $1d, $14, $f5, $ed, $e1, $d6, $db, $e1, $eb, $f3
152d3     F7 EA D2 D2 
152d7     D2 D7 E2 EE 
152db     F9 04 0E 15 
152df     1D 23 2A 2F | 	byte	$f7, $ea, $d2, $d2, $d2, $d7, $e2, $ee, $f9, $04, $0e, $15, $1d, $23, $2a, $2f
152e3     2C 27 22 26 
152e7     2A 26 1B 01 
152eb     EF ED DB D8 
152ef     DE E4 EF F7 | 	byte	$2c, $27, $22, $26, $2a, $26, $1b, $01, $ef, $ed, $db, $d8, $de, $e4, $ef, $f7
152f3     F9 E3 D5 D5 
152f7     D5 DB E6 F0 
152fb     FC 06 0F 17 
152ff     1E 24 2A 2A | 	byte	$f9, $e3, $d5, $d5, $d5, $db, $e6, $f0, $fc, $06, $0f, $17, $1e, $24, $2a, $2a
15303     29 26 1F 27 
15307     2A 25 12 F3 
1530b     F1 E9 D7 DB 
1530f     E1 E8 F3 FA | 	byte	$29, $26, $1f, $27, $2a, $25, $12, $f3, $f1, $e9, $d7, $db, $e1, $e8, $f3, $fa
15313     F7 DE D9 D7 
15317     D7 DF EA F4 
1531b     FF 0A 11 19 
1531f     1F 25 27 26 | 	byte	$f7, $de, $d9, $d7, $d7, $df, $ea, $f4, $ff, $0a, $11, $19, $1f, $25, $27, $26
15323     29 22 1E 27 
15327     2A 21 FF EF 
1532b     F3 E4 D8 DF 
1532f     E5 EE F7 FD | 	byte	$29, $22, $1e, $27, $2a, $21, $ff, $ef, $f3, $e4, $d8, $df, $e5, $ee, $f7, $fd
15333     F1 DC DE DA 
15337     DA E3 ED F7 
1533b     01 0B 13 19 
1533f     20 25 23 24 | 	byte	$f1, $dc, $de, $da, $da, $e3, $ed, $f7, $01, $0b, $13, $19, $20, $25, $23, $24
15343     26 1F 1F 28 
15347     2A 12 F2 F4 
1534b     F2 DE DC E2 
1534f     E8 F3 FB FF | 	byte	$26, $1f, $1f, $28, $2a, $12, $f2, $f4, $f2, $de, $dc, $e2, $e8, $f3, $fb, $ff
15353     E9 DC E2 DC 
15357     DD E6 F1 FA 
1535b     04 0E 15 1B 
1535f     21 22 1F 23 | 	byte	$e9, $dc, $e2, $dc, $dd, $e6, $f1, $fa, $04, $0e, $15, $1b, $21, $22, $1f, $23
15363     22 1E 20 27 
15367     21 FE F2 F6 
1536b     EC DE DF E4 
1536f     ED F7 FE FD | 	byte	$22, $1e, $20, $27, $21, $fe, $f2, $f6, $ec, $de, $df, $e4, $ed, $f7, $fe, $fd
15373     E5 E0 E5 DE 
15377     E0 EA F3 FD 
1537b     06 10 17 1C 
1537f     20 1F 1E 21 | 	byte	$e5, $e0, $e5, $de, $e0, $ea, $f3, $fd, $06, $10, $17, $1c, $20, $1f, $1e, $21
15383     20 1E 20 25 
15387     0F F8 F6 F6 
1538b     E7 E0 E2 E8 
1538f     F2 FC 02 F7 | 	byte	$20, $1e, $20, $25, $0f, $f8, $f6, $f6, $e7, $e0, $e2, $e8, $f2, $fc, $02, $f7
15393     E0 E5 E8 E1 
15397     E3 ED F6 00 
1539b     08 12 19 1D 
1539f     1E 1B 1D 1F | 	byte	$e0, $e5, $e8, $e1, $e3, $ed, $f6, $00, $08, $12, $19, $1d, $1e, $1b, $1d, $1f
153a3     21 1E 20 18 
153a7     FF FC F9 F3 
153ab     E7 E4 E6 EB 
153af     F6 00 04 EF | 	byte	$21, $1e, $20, $18, $ff, $fc, $f9, $f3, $e7, $e4, $e6, $eb, $f6, $00, $04, $ef
153b3     DF EA EB E3 
153b7     E6 F0 FA 02 
153bb     0C 14 1A 1D 
153bf     1A 1A 1B 1D | 	byte	$df, $ea, $eb, $e3, $e6, $f0, $fa, $02, $0c, $14, $1a, $1d, $1a, $1a, $1b, $1d
153c3     21 1E 19 05 
153c7     00 FE F9 EE 
153cb     E7 E6 E9 EE 
153cf     FB 04 01 E6 | 	byte	$21, $1e, $19, $05, $00, $fe, $f9, $ee, $e7, $e6, $e9, $ee, $fb, $04, $01, $e6
153d3     E3 EE ED E5 
153d7     EA F2 FC 04 
153db     0D 16 1B 19 
153df     17 19 19 1D | 	byte	$e3, $ee, $ed, $e5, $ea, $f2, $fc, $04, $0d, $16, $1b, $19, $17, $19, $19, $1d
153e3     21 1B 06 FE 
153e7     04 FF F5 EB 
153eb     EA E9 EC F2 
153ef     FF 07 F9 E2 | 	byte	$21, $1b, $06, $fe, $04, $ff, $f5, $eb, $ea, $e9, $ec, $f2, $ff, $07, $f9, $e2
153f3     E8 F1 EE E8 
153f7     ED F5 FF 07 
153fb     0F 17 1A 15 
153ff     16 18 19 1F | 	byte	$e8, $f1, $ee, $e8, $ed, $f5, $ff, $07, $0f, $17, $1a, $15, $16, $18, $19, $1f
15403     1F 09 F9 03 
15407     07 FF F1 EC 
1540b     EC ED EF F7 
1540f     04 08 EF E3 | 	byte	$1f, $09, $f9, $03, $07, $ff, $f1, $ec, $ec, $ed, $ef, $f7, $04, $08, $ef, $e3
15413     ED F4 EF EA 
15417     F0 F9 01 09 
1541b     11 17 17 13 
1541f     16 16 19 1F | 	byte	$ed, $f4, $ef, $ea, $f0, $f9, $01, $09, $11, $17, $17, $13, $16, $16, $19, $1f
15423     15 F9 FD 07 
15427     08 FC EE F0 
1542b     EE F0 F3 FC 
1542f     08 03 EA E7 | 	byte	$15, $f9, $fd, $07, $08, $fc, $ee, $f0, $ee, $f0, $f3, $fc, $08, $03, $ea, $e7
15433     F1 F6 EF ED 
15437     F3 FB 03 0C 
1543b     13 17 13 12 
1543f     14 14 1B 1C | 	byte	$f1, $f6, $ef, $ed, $f3, $fb, $03, $0c, $13, $17, $13, $12, $14, $14, $1b, $1c
15443     FE F4 02 0A 
15447     07 F4 EE F2 
1544b     F1 F4 F6 01 
1544f     0B F8 E6 EC | 	byte	$fe, $f4, $02, $0a, $07, $f4, $ee, $f2, $f1, $f4, $f6, $01, $0b, $f8, $e6, $ec
15453     F4 F7 F0 EF 
15457     F5 FE 05 0D 
1545b     14 14 10 13 
1545f     13 15 1B 0C | 	byte	$f4, $f7, $f0, $ef, $f5, $fe, $05, $0d, $14, $14, $10, $13, $13, $15, $1b, $0c
15463     F2 FB 07 0C 
15467     03 F0 F3 F5 
1546b     F4 F7 FB 06 
1546f     0A F0 E7 EF | 	byte	$f2, $fb, $07, $0c, $03, $f0, $f3, $f5, $f4, $f7, $fb, $06, $0a, $f0, $e7, $ef
15473     F8 F7 F1 F1 
15477     F7 00 08 0F 
1547b     13 10 10 12 
1547f     12 17 11 F7 | 	byte	$f8, $f7, $f1, $f1, $f7, $00, $08, $0f, $13, $10, $10, $12, $12, $17, $11, $f7
15483     F4 00 0B 0D 
15487     F9 F0 F7 F7 
1548b     F7 FB FF 0A 
1548f     02 EB EB F2 | 	byte	$f4, $00, $0b, $0d, $f9, $f0, $f7, $f7, $f7, $fb, $ff, $0a, $02, $eb, $eb, $f2
15493     F9 F7 F3 F2 
15497     F9 02 0A 10 
1549b     10 0E 10 10 
1549f     12 14 FD F3 | 	byte	$f9, $f7, $f3, $f2, $f9, $02, $0a, $10, $10, $0e, $10, $10, $12, $14, $fd, $f3
154a3     F9 06 0E 09 
154a7     F3 F4 FA F8 
154ab     FB FF 05 0C 
154af     F9 EA EE F7 | 	byte	$f9, $06, $0e, $09, $f3, $f4, $fa, $f8, $fb, $ff, $05, $0c, $f9, $ea, $ee, $f7
154b3     FA F7 F4 F3 
154b7     FC 04 0C 0F 
154bb     0D 0E 10 0F 
154bf     12 05 F4 F7 | 	byte	$fa, $f7, $f4, $f3, $fc, $04, $0c, $0f, $0d, $0e, $10, $0f, $12, $05, $f4, $f7
154c3     FE 0B 0F FF 
154c7     F2 F9 FC FB 
154cb     FF 03 08 09 
154cf     F1 EB F1 F9 | 	byte	$fe, $0b, $0f, $ff, $f2, $f9, $fc, $fb, $ff, $03, $08, $09, $f1, $eb, $f1, $f9
154d3     F9 F9 F4 F6 
154d7     FE 07 0D 0D 
154db     0B 0F 0E 0F 
154df     09 F5 F6 F9 | 	byte	$f9, $f9, $f4, $f6, $fe, $07, $0d, $0d, $0b, $0f, $0e, $0f, $09, $f5, $f6, $f9
154e3     04 0E 0A F7 
154e7     F6 FD FE FD 
154eb     03 08 0D 04 
154ef     EE ED F4 FB | 	byte	$04, $0e, $0a, $f7, $f6, $fd, $fe, $fd, $03, $08, $0d, $04, $ee, $ed, $f4, $fb
154f3     F9 FA F3 F7 
154f7     01 09 0C 09 
154fb     0B 0E 0D 0B 
154ff     F9 F3 F8 FC | 	byte	$f9, $fa, $f3, $f7, $01, $09, $0c, $09, $0b, $0e, $0d, $0b, $f9, $f3, $f8, $fc
15503     09 10 02 F4 
15507     FA 01 00 00 
1550b     08 0C 0F FA 
1550f     EC F0 F8 FA | 	byte	$09, $10, $02, $f4, $fa, $01, $00, $00, $08, $0c, $0f, $fa, $ec, $f0, $f8, $fa
15513     FB F9 F2 FB 
15517     03 0A 08 08 
1551b     0D 0E 0C FD 
1551f     EF F8 FA 01 | 	byte	$fb, $f9, $f2, $fb, $03, $0a, $08, $08, $0d, $0e, $0c, $fd, $ef, $f8, $fa, $01
15523     0E 0C F9 F7 
15527     FD 03 02 05 
1552b     0C 11 0D F3 
1552f     EC F2 FA F9 | 	byte	$0e, $0c, $f9, $f7, $fd, $03, $02, $05, $0c, $11, $0d, $f3, $ec, $f2, $fa, $f9
15533     FD F7 F4 FC 
15537     05 07 05 08 
1553b     0D 0C 02 EF 
1553f     F4 FA FC 08 | 	byte	$fd, $f7, $f4, $fc, $05, $07, $05, $08, $0d, $0c, $02, $ef, $f4, $fa, $fc, $08
15543     0F 02 F8 FB 
15547     02 06 04 08 
1554b     10 14 07 EF 
1554f     EE F5 FB FA | 	byte	$0f, $02, $f8, $fb, $02, $06, $04, $08, $10, $14, $07, $ef, $ee, $f5, $fb, $fa
15553     FE F3 F6 FF 
15557     05 04 04 09 
1555b     0C 08 F3 ED 
1555f     F9 FC FF 0C | 	byte	$fe, $f3, $f6, $ff, $05, $04, $04, $09, $0c, $08, $f3, $ed, $f9, $fc, $ff, $0c
15563     09 FD FA FF 
15567     06 08 07 0D 
1556b     15 16 FF ED 
1556f     F0 F8 FA FC | 	byte	$09, $fd, $fa, $ff, $06, $08, $07, $0d, $15, $16, $ff, $ed, $f0, $f8, $fa, $fc
15573     FC F2 F8 01 
15577     04 01 05 0B 
1557b     0B FA E8 F3 
1557f     FC FD 04 0C | 	byte	$fc, $f2, $f8, $01, $04, $01, $05, $0b, $0b, $fa, $e8, $f3, $fc, $fd, $04, $0c
15583     02 FD FD 03 
15587     09 09 0A 11 
1558b     19 15 F8 ED 
1558f     F2 FB FA FE | 	byte	$02, $fd, $fd, $03, $09, $09, $0a, $11, $19, $15, $f8, $ed, $f2, $fb, $fa, $fe
15593     F8 F2 FB 01 
15597     00 01 06 0B 
1559b     05 EA EA F7 
1559f     FE FF 08 05 | 	byte	$f8, $f2, $fb, $01, $00, $01, $06, $0b, $05, $ea, $ea, $f7, $fe, $ff, $08, $05
155a3     01 FF 00 07 
155a7     0C 0B 0D 14 
155ab     1B 0D F3 EE 
155af     F4 FB FA FE | 	byte	$01, $ff, $00, $07, $0c, $0b, $0d, $14, $1b, $0d, $f3, $ee, $f4, $fb, $fa, $fe
155b3     F5 F4 FD 00 
155b7     FE 02 07 09 
155bb     F5 E3 F1 FB 
155bf     00 01 05 01 | 	byte	$f5, $f4, $fd, $00, $fe, $02, $07, $09, $f5, $e3, $f1, $fb, $00, $01, $05, $01
155c3     04 01 04 0A 
155c7     0F 0D 11 19 
155cb     1E 08 F0 F0 
155cf     F8 FC FB FC | 	byte	$04, $01, $04, $0a, $0f, $0d, $11, $19, $1e, $08, $f0, $f0, $f8, $fc, $fb, $fc
155d3     F2 F6 FD FC 
155d7     FD 03 07 FF 
155db     E5 E7 F4 FF 
155df     01 02 FF 03 | 	byte	$f2, $f6, $fd, $fc, $fd, $03, $07, $ff, $e5, $e7, $f4, $ff, $01, $02, $ff, $03
155e3     06 03 08 0E 
155e7     10 0F 13 1C 
155eb     1E 02 EF F2 
155ef     FA FC FB F8 | 	byte	$06, $03, $08, $0e, $10, $0f, $13, $1c, $1e, $02, $ef, $f2, $fa, $fc, $fb, $f8
155f3     F2 F8 FB FA 
155f7     FE 04 07 EF 
155fb     DF EC F9 02 
155ff     02 FB FE 08 | 	byte	$f2, $f8, $fb, $fa, $fe, $04, $07, $ef, $df, $ec, $f9, $02, $02, $fb, $fe, $08
15603     08 06 0A 11 
15607     11 11 17 1F 
1560b     1C FC F0 F4 
1560f     FB FC FA F5 | 	byte	$08, $06, $0a, $11, $11, $11, $17, $1f, $1c, $fc, $f0, $f4, $fb, $fc, $fa, $f5
15613     F3 F8 F7 FA 
15617     00 04 FB E1 
1561b     E4 F0 FD 04 
1561f     FE F7 03 0B | 	byte	$f3, $f8, $f7, $fa, $00, $04, $fb, $e1, $e4, $f0, $fd, $04, $fe, $f7, $03, $0b
15623     0A 09 0E 13 
15627     12 13 1A 21 
1562b     18 F8 F1 F5 
1562f     FD FC F7 F2 | 	byte	$0a, $09, $0e, $13, $12, $13, $1a, $21, $18, $f8, $f1, $f5, $fd, $fc, $f7, $f2
15633     F4 F5 F5 FB 
15637     01 02 E9 DC 
1563b     E9 F5 00 04 
1563f     F6 F9 09 0F | 	byte	$f4, $f5, $f5, $fb, $01, $02, $e9, $dc, $e9, $f5, $00, $04, $f6, $f9, $09, $0f
15643     0D 0C 12 15 
15647     14 17 1D 23 
1564b     11 F6 F3 F7 
1564f     FE FB F3 F2 | 	byte	$0d, $0c, $12, $15, $14, $17, $1d, $23, $11, $f6, $f3, $f7, $fe, $fb, $f3, $f2
15653     F4 F2 F6 FC 
15657     01 F6 DD E1 
1565b     EC F8 03 FE 
1565f     F2 FF 0C 12 | 	byte	$f4, $f2, $f6, $fc, $01, $f6, $dd, $e1, $ec, $f8, $03, $fe, $f2, $ff, $0c, $12
15663     0F 0F 14 16 
15667     14 19 1F 23 
1566b     0C F4 F4 F9 
1566f     FF F8 F0 F2 | 	byte	$0f, $0f, $14, $16, $14, $19, $1f, $23, $0c, $f4, $f4, $f9, $ff, $f8, $f0, $f2
15673     F1 F0 F7 FE 
15677     FF E6 D9 E5 
1567b     F1 FB 01 F7 
1567f     F6 05 10 16 | 	byte	$f1, $f0, $f7, $fe, $ff, $e6, $d9, $e5, $f1, $fb, $01, $f7, $f6, $05, $10, $16
15683     12 12 17 17 
15687     16 1B 21 22 
1568b     08 F5 F5 FB 
1568f     FF F3 EE F2 | 	byte	$12, $12, $17, $17, $16, $1b, $21, $22, $08, $f5, $f5, $fb, $ff, $f3, $ee, $f2
15693     ED F1 F9 FE 
15697     F5 D9 DE E9 
1569b     F4 FC F9 F7 
1569f     FB 0A 14 19 | 	byte	$ed, $f1, $f9, $fe, $f5, $d9, $de, $e9, $f4, $fc, $f9, $f7, $fb, $0a, $14, $19
156a3     14 15 1A 18 
156a7     17 1D 23 20 
156ab     04 F6 F6 FB 
156af     FF EE ED EE | 	byte	$14, $15, $1a, $18, $17, $1d, $23, $20, $04, $f6, $f6, $fb, $ff, $ee, $ed, $ee
156b3     EB F2 FA FD 
156b7     E4 D5 E2 EC 
156bb     F6 F8 F6 FC 
156bf     FF 0C 17 1B | 	byte	$eb, $f2, $fa, $fd, $e4, $d5, $e2, $ec, $f6, $f8, $f6, $fc, $ff, $0c, $17, $1b
156c3     17 18 1B 18 
156c7     19 20 25 1C 
156cb     00 F7 F7 FC 
156cf     FC EB EC EB | 	byte	$17, $18, $1b, $18, $19, $20, $25, $1c, $00, $f7, $f7, $fc, $fc, $eb, $ec, $eb
156d3     EC F4 FA F3 
156d7     D8 D8 E6 F0 
156db     F5 F1 F9 00 
156df     03 11 1B 1E | 	byte	$ec, $f4, $fa, $f3, $d8, $d8, $e6, $f0, $f5, $f1, $f9, $00, $03, $11, $1b, $1e
156e3     19 1A 1B 18 
156e7     1B 22 26 1A 
156eb     FD F9 F8 FC 
156ef     F7 E6 E9 EA | 	byte	$19, $1a, $1b, $18, $1b, $22, $26, $1a, $fd, $f9, $f8, $fc, $f7, $e6, $e9, $ea
156f3     ED F4 F9 E5 
156f7     D1 DD EA F2 
156fb     EF F1 FE 04 
156ff     07 14 1E 21 | 	byte	$ed, $f4, $f9, $e5, $d1, $dd, $ea, $f2, $ef, $f1, $fe, $04, $07, $14, $1e, $21
15703     1C 1C 1C 18 
15707     1C 23 26 13 
1570b     FC FA F9 FC 
1570f     F3 E3 E6 EB | 	byte	$1c, $1c, $1c, $18, $1c, $23, $26, $13, $fc, $fa, $f9, $fc, $f3, $e3, $e6, $eb
15713     EE F5 F1 D6 
15717     D4 E0 EC EF 
1571b     EA F5 02 09 
1571f     0B 17 22 25 | 	byte	$ee, $f5, $f1, $d6, $d4, $e0, $ec, $ef, $ea, $f5, $02, $09, $0b, $17, $22, $25
15723     1F 1F 1C 19 
15727     1E 24 26 0F 
1572b     FC FC F9 FB 
1572f     EF DF E4 EC | 	byte	$1f, $1f, $1c, $19, $1e, $24, $26, $0f, $fc, $fc, $f9, $fb, $ef, $df, $e4, $ec
15733     F0 F4 E1 D0 
15737     D9 E4 ED E8 
1573b     EA F9 07 0D 
1573f     0E 1A 24 28 | 	byte	$f0, $f4, $e1, $d0, $d9, $e4, $ed, $e8, $ea, $f9, $07, $0d, $0e, $1a, $24, $28
15743     22 1F 1C 1A 
15747     1F 25 23 08 
1574b     FC FE FA F8 
1574f     EA DC E5 EE | 	byte	$22, $1f, $1c, $1a, $1f, $25, $23, $08, $fc, $fe, $fa, $f8, $ea, $dc, $e5, $ee
15753     F0 EC D5 D1 
15757     DC E6 E8 E5 
1575b     F0 FC 0A 11 
1575f     12 1C 27 2B | 	byte	$f0, $ec, $d5, $d1, $dc, $e6, $e8, $e5, $f0, $fc, $0a, $11, $12, $1c, $27, $2b
15763     25 20 1B 1B 
15767     20 25 21 05 
1576b     FD FE FB F3 
1576f     E4 DD E6 EF | 	byte	$25, $20, $1b, $1b, $20, $25, $21, $05, $fd, $fe, $fb, $f3, $e4, $dd, $e6, $ef
15773     EF E1 CD D6 
15777     E0 E6 E2 E8 
1577b     F4 00 0D 16 
1577f     16 1E 2A 2E | 	byte	$ef, $e1, $cd, $d6, $e0, $e6, $e2, $e8, $f4, $00, $0d, $16, $16, $1e, $2a, $2e
15783     28 21 1B 1C 
15787     21 25 1C 01 
1578b     FF 00 FB EC 
1578f     DF DF E6 EF | 	byte	$28, $21, $1b, $1c, $21, $25, $1c, $01, $ff, $00, $fb, $ec, $df, $df, $e6, $ef
15793     E8 D2 CD DA 
15797     E4 E2 E0 EC 
1579b     F8 04 11 1A 
1579f     1A 20 2B 30 | 	byte	$e8, $d2, $cd, $da, $e4, $e2, $e0, $ec, $f8, $04, $11, $1a, $1a, $20, $2b, $30
157a3     2C 21 1B 1D 
157a7     21 23 18 FE 
157ab     FF 02 FA E3 
157af     DF E2 E5 EE | 	byte	$2c, $21, $1b, $1d, $21, $23, $18, $fe, $ff, $02, $fa, $e3, $df, $e2, $e5, $ee
157b3     DB C8 D2 DE 
157b7     E3 DC E2 F1 
157bb     FC 07 13 1D 
157bf     1E 22 2C 32 | 	byte	$db, $c8, $d2, $de, $e3, $dc, $e2, $f1, $fc, $07, $13, $1d, $1e, $22, $2c, $32
157c3     2F 21 1B 1D 
157c7     21 21 11 FC 
157cb     01 03 F3 DD 
157cf     E0 E4 E4 E7 | 	byte	$2f, $21, $1b, $1d, $21, $21, $11, $fc, $01, $03, $f3, $dd, $e0, $e4, $e4, $e7
157d3     D1 C7 D5 E0 
157d7     DE DB E8 F4 
157db     01 0A 16 21 
157df     23 23 2F 35 | 	byte	$d1, $c7, $d5, $e0, $de, $db, $e8, $f4, $01, $0a, $16, $21, $23, $23, $2f, $35
157e3     31 22 1B 1E 
157e7     21 1D 0C FA 
157eb     02 03 EE DB 
157ef     E0 E6 E1 DB | 	byte	$31, $22, $1b, $1e, $21, $1d, $0c, $fa, $02, $03, $ee, $db, $e0, $e6, $e1, $db
157f3     C7 CB D8 E0 
157f7     DA DE EB F9 
157fb     04 0E 1A 24 
157ff     27 26 2F 36 | 	byte	$c7, $cb, $d8, $e0, $da, $de, $eb, $f9, $04, $0e, $1a, $24, $27, $26, $2f, $36
15803     34 23 1D 1F 
15807     1F 1A 04 F9 
1580b     01 FF EB DB 
1580f     E1 E6 DC CC | 	byte	$34, $23, $1d, $1f, $1f, $1a, $04, $f9, $01, $ff, $eb, $db, $e1, $e6, $dc, $cc
15813     C7 D1 DB DC 
15817     DA E5 EF FC 
1581b     09 11 1B 25 
1581f     2C 29 2F 37 | 	byte	$c7, $d1, $db, $dc, $da, $e5, $ef, $fc, $09, $11, $1b, $25, $2c, $29, $2f, $37
15823     35 26 1E 1E 
15827     1D 14 FF F9 
1582b     FF FB EB DC 
1582f     E2 E4 D4 C0 | 	byte	$35, $26, $1e, $1e, $1d, $14, $ff, $f9, $ff, $fb, $eb, $dc, $e2, $e4, $d4, $c0
15833     CB D5 DB D7 
15837     DD E9 F4 FF 
1583b     0C 15 1D 27 
1583f     2F 2D 2F 37 | 	byte	$cb, $d5, $db, $d7, $dd, $e9, $f4, $ff, $0c, $15, $1d, $27, $2f, $2d, $2f, $37
15843     34 29 1F 1E 
15847     1A 0F F9 F8 
1584b     FA F8 E9 DE 
1584f     DF DF C9 BD | 	byte	$34, $29, $1f, $1e, $1a, $0f, $f9, $f8, $fa, $f8, $e9, $de, $df, $df, $c9, $bd
15853     D0 DA D7 D6 
15857     E3 EE F8 02 
1585b     0F 18 20 29 
1585f     31 32 30 36 | 	byte	$d0, $da, $d7, $d6, $e3, $ee, $f8, $02, $0f, $18, $20, $29, $31, $32, $30, $36
15863     33 2C 22 1E 
15867     18 08 F2 F6 
1586b     F6 F6 EA E0 
1586f     DC D4 C1 C2 | 	byte	$33, $2c, $22, $1e, $18, $08, $f2, $f6, $f6, $f6, $ea, $e0, $dc, $d4, $c1, $c2
15873     D4 DC D4 D9 
15877     E8 F3 FC 05 
1587b     11 1B 22 2A 
1587f     32 36 31 33 | 	byte	$d4, $dc, $d4, $d9, $e8, $f3, $fc, $05, $11, $1b, $22, $2a, $32, $36, $31, $33
15883     32 2F 26 1D 
15887     14 01 EF F1 
1588b     F3 F4 EA E1 
1588f     D7 C4 C1 C9 | 	byte	$32, $2f, $26, $1d, $14, $01, $ef, $f1, $f3, $f4, $ea, $e1, $d7, $c4, $c1, $c9
15893     D4 DA D4 DF 
15897     EC F8 00 09 
1589b     13 1D 25 2B 
1589f     33 39 35 30 | 	byte	$d4, $da, $d4, $df, $ec, $f8, $00, $09, $13, $1d, $25, $2b, $33, $39, $35, $30
158a3     30 2F 29 1C 
158a7     10 F9 EA EB 
158ab     F2 F2 E7 E0 
158af     CE BB C7 D0 | 	byte	$30, $2f, $29, $1c, $10, $f9, $ea, $eb, $f2, $f2, $e7, $e0, $ce, $bb, $c7, $d0
158b3     D3 D6 D8 E3 
158b7     F0 FB 06 0D 
158bb     16 20 28 2D 
158bf     34 3B 38 2E | 	byte	$d3, $d6, $d8, $e3, $f0, $fb, $06, $0d, $16, $20, $28, $2d, $34, $3b, $38, $2e
158c3     2D 30 2C 1B 
158c7     0C F0 E6 E9 
158cb     F1 F0 E3 DB 
158cf     C1 BD CB D6 | 	byte	$2d, $30, $2c, $1b, $0c, $f0, $e6, $e9, $f1, $f0, $e3, $db, $c1, $bd, $cb, $d6
158d3     D2 D2 DF E7 
158d7     F3 00 09 11 
158db     19 22 2B 2F 
158df     34 3B 3B 2D | 	byte	$d2, $d2, $df, $e7, $f3, $00, $09, $11, $19, $22, $2b, $2f, $34, $3b, $3b, $2d
158e3     2B 30 2C 1C 
158e7     03 E8 E3 E8 
158eb     F0 EA DF CF 
158ef     BC C3 D0 DA | 	byte	$2b, $30, $2c, $1c, $03, $e8, $e3, $e8, $f0, $ea, $df, $cf, $bc, $c3, $d0, $da
158f3     D1 D4 E4 ED 
158f7     F7 03 0E 15 
158fb     1C 23 2C 31 
158ff     35 3B 3D 2E | 	byte	$d1, $d4, $e4, $ed, $f7, $03, $0e, $15, $1c, $23, $2c, $31, $35, $3b, $3d, $2e
15903     29 2F 2A 1C 
15907     FA DF E1 E9 
1590b     EE E5 D5 C3 
1590f     C2 C9 D3 DB | 	byte	$29, $2f, $2a, $1c, $fa, $df, $e1, $e9, $ee, $e5, $d5, $c3, $c2, $c9, $d3, $db
15913     D1 D7 E8 F2 
15917     FB 06 11 19 
1591b     1E 26 2D 33 
1591f     36 3A 3C 2E | 	byte	$d1, $d7, $e8, $f2, $fb, $06, $11, $19, $1e, $26, $2d, $33, $36, $3a, $3c, $2e
15923     28 2D 29 18 
15927     F0 DC E2 E9 
1592b     EB DE C4 C2 
1592f     C9 CE D7 D9 | 	byte	$28, $2d, $29, $18, $f0, $dc, $e2, $e9, $eb, $de, $c4, $c2, $c9, $ce, $d7, $d9
15933     D4 DC EE F7 
15937     FF 0A 13 1C 
1593b     22 27 2E 35 
1593f     38 3A 3A 2F | 	byte	$d4, $dc, $ee, $f7, $ff, $0a, $13, $1c, $22, $27, $2e, $35, $38, $3a, $3a, $2f
15943     27 2C 26 11 
15947     E4 DD E3 E8 
1594b     E6 CB B9 C9 
1594f     CF D2 D8 D6 | 	byte	$27, $2c, $26, $11, $e4, $dd, $e3, $e8, $e6, $cb, $b9, $c9, $cf, $d2, $d8, $d6
15953     DB E0 F2 FC 
15957     03 0C 17 1F 
1595b     25 29 2F 35 
1595f     39 3A 38 31 | 	byte	$db, $e0, $f2, $fc, $03, $0c, $17, $1f, $25, $29, $2f, $35, $39, $3a, $38, $31
15963     28 29 23 03 
15967     DE DE E3 E5 
1596b     DC B9 BB CE 
1596f     D5 D7 D6 D7 | 	byte	$28, $29, $23, $03, $de, $de, $e3, $e5, $dc, $b9, $bb, $ce, $d5, $d7, $d6, $d7
15973     E2 E6 F5 01 
15977     07 10 19 22 
1597b     28 2C 31 36 
1597f     39 39 35 30 | 	byte	$e2, $e6, $f5, $01, $07, $10, $19, $22, $28, $2c, $31, $36, $39, $39, $35, $30
15983     27 26 19 F4 
15987     DF DF E2 DF 
1598b     C7 B2 C1 D3 
1598f     DB DA D3 D9 | 	byte	$27, $26, $19, $f4, $df, $df, $e2, $df, $c7, $b2, $c1, $d3, $db, $da, $d3, $d9
15993     E8 EC F8 06 
15997     0B 13 1C 25 
1599b     2B 2E 32 37 
1599f     3A 38 32 30 | 	byte	$e8, $ec, $f8, $06, $0b, $13, $1c, $25, $2b, $2e, $32, $37, $3a, $38, $32, $30
159a3     28 22 0E EA 
159a7     E2 E0 DF CE 
159ab     B8 B7 C6 D8 
159af     E0 D9 D2 E0 | 	byte	$28, $22, $0e, $ea, $e2, $e0, $df, $ce, $b8, $b7, $c6, $d8, $e0, $d9, $d2, $e0
159b3     EE F2 FC 0A 
159b7     0F 16 1E 27 
159bb     2D 31 33 38 
159bf     3A 36 31 30 | 	byte	$ee, $f2, $fc, $0a, $0f, $16, $1e, $27, $2d, $31, $33, $38, $3a, $36, $31, $30
159c3     27 1C FA E7 
159c7     E5 E1 D5 BC 
159cb     B9 BB CC DC 
159cf     E4 D7 D4 E6 | 	byte	$27, $1c, $fa, $e7, $e5, $e1, $d5, $bc, $b9, $bb, $cc, $dc, $e4, $d7, $d4, $e6
159d3     F4 F7 00 0E 
159d7     13 19 21 28 
159db     2F 32 34 37 
159df     3A 34 2E 30 | 	byte	$f4, $f7, $00, $0e, $13, $19, $21, $28, $2f, $32, $34, $37, $3a, $34, $2e, $30
159e3     25 10 ED E8 
159e7     E7 DB BE B9 
159eb     BC BF D0 E0 
159ef     E4 D5 DA EA | 	byte	$25, $10, $ed, $e8, $e7, $db, $be, $b9, $bc, $bf, $d0, $e0, $e4, $d5, $da, $ea
159f3     FA FD 05 11 
159f7     16 1C 23 2B 
159fb     31 34 36 38 
159ff     39 32 2D 2E | 	byte	$fa, $fd, $05, $11, $16, $1c, $23, $2b, $31, $34, $36, $38, $39, $32, $2d, $2e
15a03     23 FD E6 EA 
15a07     E5 C9 B4 BE 
15a0b     BE C2 D4 E4 
15a0f     E1 D8 DF EF | 	byte	$23, $fd, $e6, $ea, $e5, $c9, $b4, $be, $be, $c2, $d4, $e4, $e1, $d8, $df, $ef
15a13     FE 02 09 15 
15a17     1A 1F 25 2C 
15a1b     32 35 37 38 
15a1f     37 30 2C 2D | 	byte	$fe, $02, $09, $15, $1a, $1f, $25, $2c, $32, $35, $37, $38, $37, $30, $2c, $2d
15a23     19 ED E5 EC 
15a27     D9 B6 B8 C2 
15a2b     C0 C8 D8 E4 
15a2f     DF DE E4 F3 | 	byte	$19, $ed, $e5, $ec, $d9, $b6, $b8, $c2, $c0, $c8, $d8, $e4, $df, $de, $e4, $f3
15a33     04 07 0D 18 
15a37     1C 20 27 2D 
15a3b     33 37 38 38 
15a3f     35 2E 2B 2A | 	byte	$04, $07, $0d, $18, $1c, $20, $27, $2d, $33, $37, $38, $38, $35, $2e, $2b, $2a
15a43     09 E4 E8 E7 
15a47     C2 B2 BE C6 
15a4b     C3 CC DD E0 
15a4f     E1 E3 EA F9 | 	byte	$09, $e4, $e8, $e7, $c2, $b2, $be, $c6, $c3, $cc, $dd, $e0, $e1, $e3, $ea, $f9
15a53     08 0B 10 1C 
15a57     1F 23 2A 2F 
15a5b     34 38 38 38 
15a5f     33 2B 2A 22 | 	byte	$08, $0b, $10, $1c, $1f, $23, $2a, $2f, $34, $38, $38, $38, $33, $2b, $2a, $22
15a63     F9 E0 E8 D3 
15a67     B7 B9 C2 C6 
15a6b     C5 D3 DC DD 
15a6f     E6 E8 EF FD | 	byte	$f9, $e0, $e8, $d3, $b7, $b9, $c2, $c6, $c5, $d3, $dc, $dd, $e6, $e8, $ef, $fd
15a73     0D 0F 15 1F 
15a77     22 25 2B 31 
15a7b     35 38 39 37 
15a7f     30 29 27 16 | 	byte	$0d, $0f, $15, $1f, $22, $25, $2b, $31, $35, $38, $39, $37, $30, $29, $27, $16
15a83     EA E0 DC C2 
15a87     BA BE C7 C7 
15a8b     C8 D6 D9 E0 
15a8f     EC EC F3 03 | 	byte	$ea, $e0, $dc, $c2, $ba, $be, $c7, $c7, $c8, $d6, $d9, $e0, $ec, $ec, $f3, $03
15a93     11 12 19 22 
15a97     24 27 2D 32 
15a9b     36 3A 39 36 
15a9f     2E 27 21 09 | 	byte	$11, $12, $19, $22, $24, $27, $2d, $32, $36, $3a, $39, $36, $2e, $27, $21, $09
15aa3     E3 DE C9 BD 
15aa7     BE C3 CA C8 
15aab     CD D5 D7 E5 
15aaf     F0 F1 F8 08 | 	byte	$e3, $de, $c9, $bd, $be, $c3, $ca, $c8, $cd, $d5, $d7, $e5, $f0, $f1, $f8, $08
15ab3     15 16 1E 25 
15ab7     26 29 2E 33 
15abb     37 39 39 34 
15abf     2A 23 19 FE | 	byte	$15, $16, $1e, $25, $26, $29, $2e, $33, $37, $39, $39, $34, $2a, $23, $19, $fe
15ac3     E0 CE BF C1 
15ac7     C2 C6 CD C9 
15acb     D0 D2 DA ED 
15acf     F4 F5 FD 0C | 	byte	$e0, $ce, $bf, $c1, $c2, $c6, $cd, $c9, $d0, $d2, $da, $ed, $f4, $f5, $fd, $0c
15ad3     19 19 22 27 
15ad7     27 2B 2F 34 
15adb     38 3A 39 33 
15adf     27 1D 12 F2 | 	byte	$19, $19, $22, $27, $27, $2b, $2f, $34, $38, $3a, $39, $33, $27, $1d, $12, $f2
15ae3     D6 BE C0 C4 
15ae7     C6 CA CD CA 
15aeb     CD D0 E1 F2 
15aef     F7 F9 01 11 | 	byte	$d6, $be, $c0, $c4, $c6, $ca, $cd, $ca, $cd, $d0, $e1, $f2, $f7, $f9, $01, $11
15af3     1C 1C 25 29 
15af7     29 2C 30 35 
15afb     38 3A 39 30 
15aff     22 18 09 E6 | 	byte	$1c, $1c, $25, $29, $29, $2c, $30, $35, $38, $3a, $39, $30, $22, $18, $09, $e6
15b03     C4 BC C3 C8 
15b07     C8 CD CD CA 
15b0b     C9 D3 E7 F7 
15b0f     FA FD 06 15 | 	byte	$c4, $bc, $c3, $c8, $c8, $cd, $cd, $ca, $c9, $d3, $e7, $f7, $fa, $fd, $06, $15
15b13     1E 20 28 2A 
15b17     2A 2D 31 35 
15b1b     39 3A 38 2C 
15b1f     1B 15 FE D5 | 	byte	$1e, $20, $28, $2a, $2a, $2d, $31, $35, $39, $3a, $38, $2c, $1b, $15, $fe, $d5
15b23     BA C0 C6 CA 
15b27     CB CF CC C5 
15b2b     C9 DB EE FA 
15b2f     FC 00 0A 1A | 	byte	$ba, $c0, $c6, $ca, $cb, $cf, $cc, $c5, $c9, $db, $ee, $fa, $fc, $00, $0a, $1a
15b33     20 23 2B 2B 
15b37     2C 2F 33 36 
15b3b     39 3A 35 26 
15b3f     17 10 EC C1 | 	byte	$20, $23, $2b, $2b, $2c, $2f, $33, $36, $39, $3a, $35, $26, $17, $10, $ec, $c1
15b43     BB C2 C8 CC 
15b47     CC D0 C7 C0 
15b4b     CF E3 F4 FD 
15b4f     FF 04 10 1D | 	byte	$bb, $c2, $c8, $cc, $cc, $d0, $c7, $c0, $cf, $e3, $f4, $fd, $ff, $04, $10, $1d
15b53     21 27 2D 2C 
15b57     2D 30 34 37 
15b5b     3A 3A 32 1E 
15b5f     15 07 D9 BA | 	byte	$21, $27, $2d, $2c, $2d, $30, $34, $37, $3a, $3a, $32, $1e, $15, $07, $d9, $ba
15b63     BF C5 CC CC 
15b67     CF CE BD C3 
15b6b     D5 E8 FA FF 
15b6f     01 08 15 22 | 	byte	$bf, $c5, $cc, $cc, $cf, $ce, $bd, $c3, $d5, $e8, $fa, $ff, $01, $08, $15, $22
15b73     23 2B 2E 2C 
15b77     2E 31 35 38 
15b7b     3B 3A 2C 18 
15b7f     13 F7 C1 BE | 	byte	$23, $2b, $2e, $2c, $2e, $31, $35, $38, $3b, $3a, $2c, $18, $13, $f7, $c1, $be
15b83     C2 C8 CE CE 
15b87     D1 C4 B9 CA 
15b8b     DE EF FE 01 
15b8f     04 0D 1A 23 | 	byte	$c2, $c8, $ce, $ce, $d1, $c4, $b9, $ca, $de, $ef, $fe, $01, $04, $0d, $1a, $23
15b93     26 2E 2E 2D 
15b97     2F 32 35 38 
15b9b     3B 37 23 15 
15b9f     0D E0 BC C1 | 	byte	$26, $2e, $2e, $2d, $2f, $32, $35, $38, $3b, $37, $23, $15, $0d, $e0, $bc, $c1
15ba3     C5 CB CF CF 
15ba7     CD B9 BE D1 
15bab     E4 F7 01 02 
15baf     08 11 20 24 | 	byte	$c5, $cb, $cf, $cf, $cd, $b9, $be, $d1, $e4, $f7, $01, $02, $08, $11, $20, $24
15bb3     2A 31 2F 2E 
15bb7     30 33 36 39 
15bbb     3B 32 1D 14 
15bbf     FF CA BE C3 | 	byte	$2a, $31, $2f, $2e, $30, $33, $36, $39, $3b, $32, $1d, $14, $ff, $ca, $be, $c3
15bc3     C6 CD CF CF 
15bc7     C0 B4 C6 D8 
15bcb     EB FC 02 04 
15bcf     0B 17 23 25 | 	byte	$c6, $cd, $cf, $cf, $c0, $b4, $c6, $d8, $eb, $fc, $02, $04, $0b, $17, $23, $25
15bd3     2E 32 2E 2F 
15bd7     31 34 37 3A 
15bdb     38 2B 19 10 
15bdf     EA C2 C0 C6 | 	byte	$2e, $32, $2e, $2f, $31, $34, $37, $3a, $38, $2b, $19, $10, $ea, $c2, $c0, $c6
15be3     C9 CF CE C9 
15be7     B6 BA CD DF 
15beb     F3 00 03 07 
15bef     10 1C 25 28 | 	byte	$c9, $cf, $ce, $c9, $b6, $ba, $cd, $df, $f3, $00, $03, $07, $10, $1c, $25, $28
15bf3     32 31 2E 2F 
15bf7     32 35 38 3B 
15bfb     35 24 16 03 
15bff     D9 C1 C3 C9 | 	byte	$32, $31, $2e, $2f, $32, $35, $38, $3b, $35, $24, $16, $03, $d9, $c1, $c3, $c9
15c03     CC CE CB BD 
15c07     B4 C1 D3 E7 
15c0b     F9 03 03 09 
15c0f     14 20 25 2D | 	byte	$cc, $ce, $cb, $bd, $b4, $c1, $d3, $e7, $f9, $03, $03, $09, $14, $20, $25, $2d
15c13     33 30 2F 31 
15c17     33 36 3A 39 
15c1b     2F 21 0F F1 
15c1f     D2 BE C5 CB | 	byte	$33, $30, $2f, $31, $33, $36, $3a, $39, $2f, $21, $0f, $f1, $d2, $be, $c5, $cb
15c23     CD CD C1 B6 
15c27     B7 C8 DB EE 
15c2b     FF 03 04 0E 
15c2f     19 24 26 31 | 	byte	$cd, $cd, $c1, $b6, $b7, $c8, $db, $ee, $ff, $03, $04, $0e, $19, $24, $26, $31
15c33     33 30 30 32 
15c37     35 38 3A 35 
15c3b     2B 1C 00 E8 
15c3f     CC BD C7 CD | 	byte	$33, $30, $30, $32, $35, $38, $3a, $35, $2b, $1c, $00, $e8, $cc, $bd, $c7, $cd
15c43     CD C5 B9 B5 
15c47     BC D0 E1 F5 
15c4b     01 03 08 12 
15c4f     1E 25 29 34 | 	byte	$cd, $c5, $b9, $b5, $bc, $d0, $e1, $f5, $01, $03, $08, $12, $1e, $25, $29, $34
15c53     33 2F 31 33 
15c57     36 39 38 30 
15c5b     28 14 F4 E4 
15c5f     C6 BE CA CF | 	byte	$33, $2f, $31, $33, $36, $39, $38, $30, $28, $14, $f4, $e4, $c6, $be, $ca, $cf
15c63     CA BA B7 B6 
15c67     C2 D6 EA FB 
15c6b     04 05 0B 17 
15c6f     22 26 2D 35 | 	byte	$ca, $ba, $b7, $b6, $c2, $d6, $ea, $fb, $04, $05, $0b, $17, $22, $26, $2d, $35
15c73     32 30 31 34 
15c77     36 39 35 2E 
15c7b     23 06 EA E4 
15c7f     C2 C1 CD CE | 	byte	$32, $30, $31, $34, $36, $39, $35, $2e, $23, $06, $ea, $e4, $c2, $c1, $cd, $ce
15c83     C0 B6 B7 B9 
15c87     CB DC EF 01 
15c8b     05 06 0F 1A 
15c8f     25 27 32 36 | 	byte	$c0, $b6, $b7, $b9, $cb, $dc, $ef, $01, $05, $06, $0f, $1a, $25, $27, $32, $36
15c93     31 31 32 35 
15c97     37 37 31 2C 
15c9b     1C F7 EA DE 
15c9f     BE C5 CF C8 | 	byte	$31, $31, $32, $35, $37, $37, $31, $2c, $1c, $f7, $ea, $de, $be, $c5, $cf, $c8
15ca3     B6 B8 B6 BD 
15ca7     D0 E2 F6 04 
15cab     05 09 13 1F 
15caf     27 29 35 35 | 	byte	$b6, $b8, $b6, $bd, $d0, $e2, $f6, $04, $05, $09, $13, $1f, $27, $29, $35, $35
15cb3     31 31 33 36 
15cb7     37 33 2F 2B 
15cbb     0E EC EE D7 
15cbf     BB C9 CF BD | 	byte	$31, $31, $33, $36, $37, $33, $2f, $2b, $0e, $ec, $ee, $d7, $bb, $c9, $cf, $bd
15cc3     B5 B9 B7 C2 
15cc7     D6 E9 FC 06 
15ccb     07 0C 17 22 
15ccf     28 2C 36 34 | 	byte	$b5, $b9, $b7, $c2, $d6, $e9, $fc, $06, $07, $0c, $17, $22, $28, $2c, $36, $34
15cd3     31 32 33 36 
15cd7     34 2F 2E 25 
15cdb     FE E8 EF CF 
15cdf     BB CD C7 B7 | 	byte	$31, $32, $33, $36, $34, $2f, $2e, $25, $fe, $e8, $ef, $cf, $bb, $cd, $c7, $b7
15ce3     B9 B9 B9 CA 
15ce7     DC F0 01 08 
15ceb     08 10 1A 26 
15cef     28 30 38 34 | 	byte	$b9, $b9, $b9, $ca, $dc, $f0, $01, $08, $08, $10, $1a, $26, $28, $30, $38, $34
15cf3     31 32 34 35 
15cf7     31 2E 2E 1B 
15cfb     EF EB ED CB 
15cff     BE CA BD B8 | 	byte	$31, $32, $34, $35, $31, $2e, $2e, $1b, $ef, $eb, $ed, $cb, $be, $ca, $bd, $b8
15d03     BB B8 BC D0 
15d07     E2 F3 05 09 
15d0b     0A 13 1D 27 
15d0f     29 32 38 34 | 	byte	$bb, $b8, $bc, $d0, $e2, $f3, $05, $09, $0a, $13, $1d, $27, $29, $32, $38, $34
15d13     31 32 34 32 
15d17     2D 2E 2C 0C 
15d1b     E9 EE E9 C5 
15d1f     C1 C3 BA BB | 	byte	$31, $32, $34, $32, $2d, $2e, $2c, $0c, $e9, $ee, $e9, $c5, $c1, $c3, $ba, $bb
15d23     BC B8 C2 D5 
15d27     E6 F9 09 0B 
15d2b     0D 15 20 29 
15d2f     2B 35 38 33 | 	byte	$bc, $b8, $c2, $d5, $e6, $f9, $09, $0b, $0d, $15, $20, $29, $2b, $35, $38, $33
15d33     31 33 33 2E 
15d37     2C 2F 25 FB 
15d3b     E9 EE E3 C5 
15d3f     BF BC BD BE | 	byte	$31, $33, $33, $2e, $2c, $2f, $25, $fb, $e9, $ee, $e3, $c5, $bf, $bc, $bd, $be
15d43     BD BA C7 D9 
15d47     EC FE 0C 0D 
15d4b     0F 19 23 2B 
15d4f     2C 37 38 34 | 	byte	$bd, $ba, $c7, $d9, $ec, $fe, $0c, $0d, $0f, $19, $23, $2b, $2c, $37, $38, $34
15d53     31 32 2F 2A 
15d57     2C 2E 19 F2 
15d5b     EB EC E1 C1 
15d5f     B9 BB C0 C2 | 	byte	$31, $32, $2f, $2a, $2c, $2e, $19, $f2, $eb, $ec, $e1, $c1, $b9, $bb, $c0, $c2
15d63     BC BC CD DD 
15d67     F0 04 0F 0F 
15d6b     12 1B 26 2C 
15d6f     2E 38 38 33 | 	byte	$bc, $bc, $cd, $dd, $f0, $04, $0f, $0f, $12, $1b, $26, $2c, $2e, $38, $38, $33
15d73     31 30 2A 29 
15d77     2D 29 06 EF 
15d7b     E9 EC E0 BA 
15d7f     B6 BE C3 C4 | 	byte	$31, $30, $2a, $29, $2d, $29, $06, $ef, $e9, $ec, $e0, $ba, $b6, $be, $c3, $c4
15d83     BB BF D1 E4 
15d87     F4 08 12 11 
15d8b     15 1D 28 2D 
15d8f     30 39 38 33 | 	byte	$bb, $bf, $d1, $e4, $f4, $08, $12, $11, $15, $1d, $28, $2d, $30, $39, $38, $33
15d93     31 2B 27 29 
15d97     2C 1E FC EF 
15d9b     E7 EE DA B1 
15d9f     B7 C2 C8 C6 | 	byte	$31, $2b, $27, $29, $2c, $1e, $fc, $ef, $e7, $ee, $da, $b1, $b7, $c2, $c8, $c6
15da3     BD C4 D6 E7 
15da7     F8 0B 15 13 
15dab     17 1F 2A 2E 
15daf     30 3A 38 33 | 	byte	$bd, $c4, $d6, $e7, $f8, $0b, $15, $13, $17, $1f, $2a, $2e, $30, $3a, $38, $33
15db3     2E 27 25 28 
15db7     27 0F F8 EB 
15dbb     E8 EF CD AE 
15dbf     BC C5 CC C7 | 	byte	$2e, $27, $25, $28, $27, $0f, $f8, $eb, $e8, $ef, $cd, $ae, $bc, $c5, $cc, $c7
15dc3     BE CA DA EC 
15dc7     FD 10 17 15 
15dcb     19 22 2B 2F 
15dcf     32 3B 39 32 | 	byte	$be, $ca, $da, $ec, $fd, $10, $17, $15, $19, $22, $2b, $2f, $32, $3b, $39, $32
15dd3     29 23 25 28 
15dd7     1E 03 F5 E9 
15ddb     EA EC C2 B0 
15ddf     BE CA D0 C7 | 	byte	$29, $23, $25, $28, $1e, $03, $f5, $e9, $ea, $ec, $c2, $b0, $be, $ca, $d0, $c7
15de3     C1 CE DF EF 
15de7     01 12 19 17 
15deb     1B 24 2D 2F 
15def     33 3B 39 2F | 	byte	$c1, $ce, $df, $ef, $01, $12, $19, $17, $1b, $24, $2d, $2f, $33, $3b, $39, $2f
15df3     24 22 25 24 
15df7     0D FC F2 EA 
15dfb     EC E3 BD B3 
15dff     C1 CD D3 C8 | 	byte	$24, $22, $25, $24, $0d, $fc, $f2, $ea, $ec, $e3, $bd, $b3, $c1, $cd, $d3, $c8
15e03     C4 D4 E2 F3 
15e07     03 16 1C 1A 
15e0b     1D 25 2E 30 
15e0f     32 3B 37 2B | 	byte	$c4, $d4, $e2, $f3, $03, $16, $1c, $1a, $1d, $25, $2e, $30, $32, $3b, $37, $2b
15e13     22 22 24 18 
15e17     01 FB F0 ED 
15e1b     EA DA B9 B6 
15e1f     C4 D3 D7 C9 | 	byte	$22, $22, $24, $18, $01, $fb, $f0, $ed, $ea, $da, $b9, $b6, $c4, $d3, $d7, $c9
15e23     CA D8 E8 F6 
15e27     07 18 20 1C 
15e2b     1F 26 2F 31 
15e2f     33 3B 35 26 | 	byte	$ca, $d8, $e8, $f6, $07, $18, $20, $1c, $1f, $26, $2f, $31, $33, $3b, $35, $26
15e33     21 21 20 08 
15e37     FB F8 F1 EF 
15e3b     E4 D0 BB BA 
15e3f     C8 D7 DA CB | 	byte	$21, $21, $20, $08, $fb, $f8, $f1, $ef, $e4, $d0, $bb, $ba, $c8, $d7, $da, $cb
15e43     CE DB EB FA 
15e47     0A 1B 23 1F 
15e4b     21 27 2F 32 
15e4f     32 3A 31 24 | 	byte	$ce, $db, $eb, $fa, $0a, $1b, $23, $1f, $21, $27, $2f, $32, $32, $3a, $31, $24
15e53     21 20 13 FB 
15e57     F9 F6 F3 EE 
15e5b     DE CC BC BD 
15e5f     CD DC DC CE | 	byte	$21, $20, $13, $fb, $f9, $f6, $f3, $ee, $de, $cc, $bc, $bd, $cd, $dc, $dc, $ce
15e63     D2 E0 ED FD 
15e67     0C 1D 26 22 
15e6b     22 28 30 33 
15e6f     32 36 2C 24 | 	byte	$d2, $e0, $ed, $fd, $0c, $1d, $26, $22, $22, $28, $30, $33, $32, $36, $2c, $24
15e73     21 1C 01 F4 
15e77     F8 F8 F6 EA 
15e7b     DA CA BF C0 
15e7f     D1 E0 E0 D3 | 	byte	$21, $1c, $01, $f4, $f8, $f8, $f6, $ea, $da, $ca, $bf, $c0, $d1, $e0, $e0, $d3
15e83     D7 E4 F1 FF 
15e87     0F 1F 28 24 
15e8b     24 29 2F 34 
15e8f     30 30 2B 25 | 	byte	$d7, $e4, $f1, $ff, $0f, $1f, $28, $24, $24, $29, $2f, $34, $30, $30, $2b, $25
15e93     20 0D F3 F3 
15e97     F7 F8 F6 E6 
15e9b     D8 C5 C2 C5 
15e9f     D4 E5 E2 D8 | 	byte	$20, $0d, $f3, $f3, $f7, $f8, $f6, $e6, $d8, $c5, $c2, $c5, $d4, $e5, $e2, $d8
15ea3     DC E7 F4 02 
15ea7     10 21 2B 28 
15eab     25 29 2F 34 
15eaf     2C 2A 2B 25 | 	byte	$dc, $e7, $f4, $02, $10, $21, $2b, $28, $25, $29, $2f, $34, $2c, $2a, $2b, $25
15eb3     1A FA EF F3 
15eb7     F8 F8 F2 E5 
15ebb     D6 C2 C7 CA 
15ebf     D7 E7 E4 DD | 	byte	$1a, $fa, $ef, $f3, $f8, $f8, $f2, $e5, $d6, $c2, $c7, $ca, $d7, $e7, $e4, $dd
15ec3     E1 EA F7 03 
15ec7     12 21 2C 2B 
15ecb     26 29 2F 33 
15ecf     28 27 2C 25 | 	byte	$e1, $ea, $f7, $03, $12, $21, $2c, $2b, $26, $29, $2f, $33, $28, $27, $2c, $25
15ed3     0B F0 EF F5 
15ed7     F8 F7 ED E6 
15edb     D4 C2 CB D0 
15edf     DB EA E7 E3 | 	byte	$0b, $f0, $ef, $f5, $f8, $f7, $ed, $e6, $d4, $c2, $cb, $d0, $db, $ea, $e7, $e3
15ee3     E6 EE F9 06 
15ee7     13 20 2E 2F 
15eeb     28 29 2D 2E 
15eef     25 25 2B 1E | 	byte	$e6, $ee, $f9, $06, $13, $20, $2e, $2f, $28, $29, $2d, $2e, $25, $25, $2b, $1e
15ef3     F9 ED F0 F7 
15ef7     F7 F3 EA E9 
15efb     CE C3 CF D7 
15eff     DF EC E9 E9 | 	byte	$f9, $ed, $f0, $f7, $f7, $f3, $ea, $e9, $ce, $c3, $cf, $d7, $df, $ec, $e9, $e9
15f03     EC F2 FC 07 
15f07     14 22 2F 32 
15f0b     2B 29 2B 29 
15f0f     24 23 27 0A | 	byte	$ec, $f2, $fc, $07, $14, $22, $2f, $32, $2b, $29, $2b, $29, $24, $23, $27, $0a
15f13     F2 EE F3 F7 
15f17     F5 ED EB E6 
15f1b     CC C7 D2 DD 
15f1f     E3 ED EB EF | 	byte	$f2, $ee, $f3, $f7, $f5, $ed, $eb, $e6, $cc, $c7, $d2, $dd, $e3, $ed, $eb, $ef
15f23     F2 F6 FE 09 
15f27     14 21 30 34 
15f2b     2D 29 26 23 
15f2f     25 21 18 FF | 	byte	$f2, $f6, $fe, $09, $14, $21, $30, $34, $2d, $29, $26, $23, $25, $21, $18, $ff
15f33     F4 F0 F4 F7 
15f37     F1 E7 ED E1 
15f3b     CD CC D6 E3 
15f3f     E7 ED ED F5 | 	byte	$f4, $f0, $f4, $f7, $f1, $e7, $ed, $e1, $cd, $cc, $d6, $e3, $e7, $ed, $ed, $f5
15f43     F8 FA 01 0B 
15f47     15 21 2D 36 
15f4b     31 29 21 21 
15f4f     25 19 02 FC | 	byte	$f8, $fa, $01, $0b, $15, $21, $2d, $36, $31, $29, $21, $21, $25, $19, $02, $fc
15f53     F6 F4 F7 F6 
15f57     E9 E6 EE DB 
15f5b     D0 D1 DA E8 
15f5f     ED ED EE FA | 	byte	$f6, $f4, $f7, $f6, $e9, $e6, $ee, $db, $d0, $d1, $da, $e8, $ed, $ed, $ee, $fa
15f63     FF FF 03 0C 
15f67     15 20 2B 37 
15f6b     34 25 1D 1F 
15f6f     22 09 F5 FD | 	byte	$ff, $ff, $03, $0c, $15, $20, $2b, $37, $34, $25, $1d, $1f, $22, $09, $f5, $fd
15f73     FA F8 F8 F2 
15f77     E2 E7 E9 D7 
15f7b     D6 D7 DE EC 
15f7f     F3 ED F0 FE | 	byte	$fa, $f8, $f8, $f2, $e2, $e7, $e9, $d7, $d6, $d7, $de, $ec, $f3, $ed, $f0, $fe
15f83     05 05 07 0E 
15f87     16 1F 2A 36 
15f8b     35 24 1C 1E 
15f8f     14 F9 F5 FB | 	byte	$05, $05, $07, $0e, $16, $1f, $2a, $36, $35, $24, $1c, $1e, $14, $f9, $f5, $fb
15f93     FF FD FA EA 
15f97     E0 EA E2 D5 
15f9b     DC DE E3 EE 
15f9f     F8 EE EF 00 | 	byte	$ff, $fd, $fa, $ea, $e0, $ea, $e2, $d5, $dc, $de, $e3, $ee, $f8, $ee, $ef, $00
15fa3     09 0A 0A 0F 
15fa7     16 1F 27 33 
15fab     32 24 1C 17 
15faf     FD F9 F5 FA | 	byte	$09, $0a, $0a, $0f, $16, $1f, $27, $33, $32, $24, $1c, $17, $fd, $f9, $f5, $fa
15fb3     03 02 FA E3 
15fb7     E1 E8 D9 D7 
15fbb     E1 E4 E9 F1 
15fbf     FC F0 F0 02 | 	byte	$03, $02, $fa, $e3, $e1, $e8, $d9, $d7, $e1, $e4, $e9, $f1, $fc, $f0, $f0, $02
15fc3     0D 10 0F 11 
15fc7     17 1D 26 2D 
15fcb     2E 27 1D 02 
15fcf     F3 FB F7 FA | 	byte	$0d, $10, $0f, $11, $17, $1d, $26, $2d, $2e, $27, $1d, $02, $f3, $fb, $f7, $fa
15fd3     06 07 F6 E0 
15fd7     E5 E2 D2 DB 
15fdb     E4 EA F0 F5 
15fdf     FD F3 F3 04 | 	byte	$06, $07, $f6, $e0, $e5, $e2, $d2, $db, $e4, $ea, $f0, $f5, $fd, $f3, $f3, $04
15fe3     10 15 13 13 
15fe7     17 1D 24 26 
15feb     2A 2A 10 F3 
15fef     F5 FA FA FB | 	byte	$10, $15, $13, $13, $17, $1d, $24, $26, $2a, $2a, $10, $f3, $f5, $fa, $fa, $fb
15ff3     07 07 EE E3 
15ff7     E7 DA D0 E0 
15ffb     E7 EF F6 FA 
15fff     FD F6 F6 06 | 	byte	$07, $07, $ee, $e3, $e7, $da, $d0, $e0, $e7, $ef, $f6, $fa, $fd, $f6, $f6, $06
16003     11 18 18 16 
16007     18 1D 1F 1F 
1600b     27 23 00 F2 
1600f     F7 F9 FF FE | 	byte	$11, $18, $18, $16, $18, $1d, $1f, $1f, $27, $23, $00, $f2, $f7, $f9, $ff, $fe
16013     07 03 EC E8 
16017     E5 D1 D3 E3 
1601b     EB F3 FB FF 
1601f     FC F8 FA 06 | 	byte	$07, $03, $ec, $e8, $e5, $d1, $d3, $e3, $eb, $f3, $fb, $ff, $fc, $f8, $fa, $06
16023     13 1B 1B 18 
16027     18 1B 19 1B 
1602b     23 0F FB F8 
1602f     F7 F9 02 01 | 	byte	$13, $1b, $1b, $18, $18, $1b, $19, $1b, $23, $0f, $fb, $f8, $f7, $f9, $02, $01
16033     04 FC EF EC 
16037     E0 CD D9 E6 
1603b     ED F7 01 03 
1603f     FC FA FE 07 | 	byte	$04, $fc, $ef, $ec, $e0, $cd, $d9, $e6, $ed, $f7, $01, $03, $fc, $fa, $fe, $07
16043     14 1C 1E 1B 
16047     19 18 14 19 
1604b     13 02 01 FB 
1604f     F7 FA 05 05 | 	byte	$14, $1c, $1e, $1b, $19, $18, $14, $19, $13, $02, $01, $fb, $f7, $fa, $05, $05
16053     FC F6 F3 EE 
16057     D8 CE DE EA 
1605b     F0 FB 04 07 
1605f     FC FD 02 08 | 	byte	$fc, $f6, $f3, $ee, $d8, $ce, $de, $ea, $f0, $fb, $04, $07, $fc, $fd, $02, $08
16063     16 1D 20 1D 
16067     19 13 12 10 
1606b     FD 02 06 FD 
1606f     F8 FD 06 04 | 	byte	$16, $1d, $20, $1d, $19, $13, $12, $10, $fd, $02, $06, $fd, $f8, $fd, $06, $04
16073     F4 F6 F5 ED 
16077     D3 D5 E2 ED 
1607b     F2 FE 08 08 
1607f     FB FF 05 08 | 	byte	$f4, $f6, $f5, $ed, $d3, $d5, $e2, $ed, $f2, $fe, $08, $08, $fb, $ff, $05, $08
16083     16 1F 21 1E 
16087     16 0F 0E FC 
1608b     F6 06 09 FF 
1608f     FA 00 07 FE | 	byte	$16, $1f, $21, $1e, $16, $0f, $0e, $fc, $f6, $06, $09, $ff, $fa, $00, $07, $fe
16093     F2 F7 F8 E7 
16097     D2 DB E6 EF 
1609b     F6 01 0A 08 
1609f     FB 02 08 0A | 	byte	$f2, $f7, $f8, $e7, $d2, $db, $e6, $ef, $f6, $01, $0a, $08, $fb, $02, $08, $0a
160a3     17 20 22 1D 
160a7     13 0D 02 ED 
160ab     F9 09 0B 00 
160af     FD 02 04 F9 | 	byte	$17, $20, $22, $1d, $13, $0d, $02, $ed, $f9, $09, $0b, $00, $fd, $02, $04, $f9
160b3     F4 F8 F8 E1 
160b7     D6 E0 EB F2 
160bb     F9 04 0C 06 
160bf     FD 05 0B 0B | 	byte	$f4, $f8, $f8, $e1, $d6, $e0, $eb, $f2, $f9, $04, $0c, $06, $fd, $05, $0b, $0b
160c3     17 21 23 1B 
160c7     10 08 EE EC 
160cb     FC 0A 0C 02 
160cf     01 03 FB F9 | 	byte	$17, $21, $23, $1b, $10, $08, $ee, $ec, $fc, $0a, $0c, $02, $01, $03, $fb, $f9
160d3     F6 F8 F5 DE 
160d7     DB E5 EE F5 
160db     FC 06 0D 05 
160df     00 07 0D 0D | 	byte	$f6, $f8, $f5, $de, $db, $e5, $ee, $f5, $fc, $06, $0d, $05, $00, $07, $0d, $0d
160e3     18 21 22 17 
160e7     0D F8 E7 F1 
160eb     FE 0C 0D 05 
160ef     03 FE F6 FD | 	byte	$18, $21, $22, $17, $0d, $f8, $e7, $f1, $fe, $0c, $0d, $05, $03, $fe, $f6, $fd
160f3     F8 F9 F0 DC 
160f7     E1 E9 F2 F8 
160fb     FE 08 0B 02 
160ff     03 0A 0F 0E | 	byte	$f8, $f9, $f0, $dc, $e1, $e9, $f2, $f8, $fe, $08, $0b, $02, $03, $0a, $0f, $0e
16103     18 21 1E 13 
16107     04 E9 EA F4 
1610b     FF 0C 0D 09 
1610f     03 F6 F6 01 | 	byte	$18, $21, $1e, $13, $04, $e9, $ea, $f4, $ff, $0c, $0d, $09, $03, $f6, $f6, $01
16113     FA F9 EB DD 
16117     E7 EE F6 FB 
1611b     00 0A 09 02 
1611f     06 0C 11 0F | 	byte	$fa, $f9, $eb, $dd, $e7, $ee, $f6, $fb, $00, $0a, $09, $02, $06, $0c, $11, $0f
16123     18 20 1A 10 
16127     F3 E6 EE F7 
1612b     02 0B 0F 0B 
1612f     FC F3 FB 02 | 	byte	$18, $20, $1a, $10, $f3, $e6, $ee, $f7, $02, $0b, $0f, $0b, $fc, $f3, $fb, $02
16133     FB F8 E5 E1 
16137     EA F2 F9 FD 
1613b     03 0A 05 03 
1613f     09 0F 13 10 | 	byte	$fb, $f8, $e5, $e1, $ea, $f2, $f9, $fd, $03, $0a, $05, $03, $09, $0f, $13, $10
16143     18 1C 16 02 
16147     E9 EB F1 F9 
1614b     03 0B 11 08 
1614f     F4 F6 FF 04 | 	byte	$18, $1c, $16, $02, $e9, $eb, $f1, $f9, $03, $0b, $11, $08, $f4, $f6, $ff, $04
16153     FC F5 E3 E6 
16157     EE F5 FD 00 
1615b     05 09 01 04 
1615f     0A 10 13 10 | 	byte	$fc, $f5, $e3, $e6, $ee, $f5, $fd, $00, $05, $09, $01, $04, $0a, $10, $13, $10
16163     16 17 11 F1 
16167     E8 EE F5 FC 
1616b     04 0D 11 FF 
1616f     F4 FB 02 05 | 	byte	$16, $17, $11, $f1, $e8, $ee, $f5, $fc, $04, $0d, $11, $ff, $f4, $fb, $02, $05
16173     FD F1 E3 EA 
16177     F2 F9 FF 02 
1617b     07 05 FF 06 
1617f     0C 12 14 10 | 	byte	$fd, $f1, $e3, $ea, $f2, $f9, $ff, $02, $07, $05, $ff, $06, $0c, $12, $14, $10
16183     13 14 03 E9 
16187     EC F2 F7 00 
1618b     00 00 00 00 
1618f     00 00 00 FB | 	byte	$13, $14, $03, $e9, $ec, $f2, $f7, $00, $00, $00, $00, $00, $00, $00, $00, $fb
16193     FB FC FC FC 
16197     FC FC FC FD 
1619b     FD FD FC FE 
1619f     FE FE FE FE | 	byte	$fb, $fc, $fc, $fc, $fc, $fc, $fc, $fd, $fd, $fd, $fc, $fe, $fe, $fe, $fe, $fe
161a3     FE FE FE FE 
161a7     FE FE       | 	byte	$fe[6]
161a9     FF FE FD FE 
161ad     FF FF FE FD 
161b1     FD FE FE FD 
161b5     FC FD FD FC | 	byte	$ff, $fe, $fd, $fe, $ff, $ff, $fe, $fd, $fd, $fe, $fe, $fd, $fc, $fd, $fd, $fc
161b9     FC FC FC FC 
161bd     FC          | 	byte	$fc[5]
161be     FB FB FC FC 
161c2     FC FB FA FB 
161c6     FC FB FB FC 
161ca     FC FC FC FB | 	byte	$fb, $fb, $fc, $fc, $fc, $fb, $fa, $fb, $fc, $fb, $fb, $fc, $fc, $fc, $fc, $fb
161ce     FC FC FC FC 
161d2     FC          | 	byte	$fc[5]
161d3     FD FE FD FD 
161d7     FE FE FF FF 
161db     FE FD FE FF 
161df     FE FE FE FF | 	byte	$fd, $fe, $fd, $fd, $fe, $fe, $ff, $ff, $fe, $fd, $fe, $ff, $fe, $fe, $fe, $ff
161e3     FE FF FE FF 
161e7     00 FE FE FC 
161eb     FE FC FC FC 
161ef     FA F9 F4 F3 | 	byte	$fe, $ff, $fe, $ff, $00, $fe, $fe, $fc, $fe, $fc, $fc, $fc, $fa, $f9, $f4, $f3
161f3     F5 F4 F8 FA 
161f7     F8 F7 F8 F9 
161fb     F6 F2 F3 F2 
161ff     F5 F5 F4 F7 | 	byte	$f5, $f4, $f8, $fa, $f8, $f7, $f8, $f9, $f6, $f2, $f3, $f2, $f5, $f5, $f4, $f7
16203     F9 F9 FB F3 
16207     F7 F8 F7 F8 
1620b     F8 FD 01 02 
1620f     00 03 FF 00 | 	byte	$f9, $f9, $fb, $f3, $f7, $f8, $f7, $f8, $f8, $fd, $01, $02, $00, $03, $ff, $00
16213     02 00 03 02 
16217     07 04 07 04 
1621b     2B 00 FB 07 
1621f     4E 00 F7 12 | 	byte	$02, $00, $03, $02, $07, $04, $07, $04, $2b, $00, $fb, $07, $4e, $00, $f7, $12
16223     20 D4 1F 10 
16227     F0 EF 10 0F 
1622b     E4 EF 18 F5 
1622f     F4 98 B7 FA | 	byte	$20, $d4, $1f, $10, $f0, $ef, $10, $0f, $e4, $ef, $18, $f5, $f4, $98, $b7, $fa
16233     ED E4 DF 20 
16237     F7 10 DF 2F 
1623b     57 20 27 5F 
1623f     50 F3 3F 3F | 	byte	$ed, $e4, $df, $20, $f7, $10, $df, $2f, $57, $20, $27, $5f, $50, $f3, $3f, $3f
16243     28 E3 4F 40 
16247     1F 70 30 17 
1624b     73 58 18 F6 
1624f     FC 1B D4 17 | 	byte	$28, $e3, $4f, $40, $1f, $70, $30, $17, $73, $58, $18, $f6, $fc, $1b, $d4, $17
16253     1F 10 EF C8 
16257     1B E0 D7 2A 
1625b     C0 8F BB C0 
1625f     D6 8C DB 88 | 	byte	$1f, $10, $ef, $c8, $1b, $e0, $d7, $2a, $c0, $8f, $bb, $c0, $d6, $8c, $db, $88
16263     80 9F E4 A0 
16267     80 99 B7 C0 
1626b     83 CA C7 E8 
1626f     85 DF D0 0F | 	byte	$80, $9f, $e4, $a0, $80, $99, $b7, $c0, $83, $ca, $c7, $e8, $85, $df, $d0, $0f
16273     E0 D7 4F 20 
16277     0F 30 27 18 
1627b     E9 DF 3F 50 
1627f     3C 20 1F 6C | 	byte	$e0, $d7, $4f, $20, $0f, $30, $27, $18, $e9, $df, $3f, $50, $3c, $20, $1f, $6c
16283     54 40 4F 40 
16287     27 F4 37 38 
1628b     F7 4F E8 F7 
1628f     F0 DD 02 B8 | 	byte	$54, $40, $4f, $40, $27, $f4, $37, $38, $f7, $4f, $e8, $f7, $f0, $dd, $02, $b8
16293     D7 BF E0 BD 
16297     FF E0 A3 9F 
1629b     F7 00 BF C8 
1629f     EF 10 AF E8 | 	byte	$d7, $bf, $e0, $bd, $ff, $e0, $a3, $9f, $f7, $00, $bf, $c8, $ef, $10, $af, $e8
162a3     DF 2F 00 B7 
162a7     FF 40 E4 1F 
162ab     1B 3F 50 F8 
162af     37 6A 30 C8 | 	byte	$df, $2f, $00, $b7, $ff, $40, $e4, $1f, $1b, $3f, $50, $f8, $37, $6a, $30, $c8
162b3     CF 27 38 00 
162b7     17 32 5F 20 
162bb     4F 60 0F 4F 
162bf     21 36 10 3F | 	byte	$cf, $27, $38, $00, $17, $32, $5f, $20, $4f, $60, $0f, $4f, $21, $36, $10, $3f
162c3     60 00 C8 FF 
162c7     28 C7 FF EB 
162cb     00 88 BF F7 
162cf     10 88 8B BF | 	byte	$60, $00, $c8, $ff, $28, $c7, $ff, $eb, $00, $88, $bf, $f7, $10, $88, $8b, $bf
162d3     DC AF D0 DF 
162d7     20 C0 9B F7 
162db     F4 DF E0 DF 
162df     34 F7 00 2F | 	byte	$dc, $af, $d0, $df, $20, $c0, $9b, $f7, $f4, $df, $e0, $df, $34, $f7, $00, $2f
162e3     68 40 10 3F 
162e7     78 40 14 D7 
162eb     3F 20 EF 3C 
162ef     0F 4A 2F 6C | 	byte	$68, $40, $10, $3f, $78, $40, $14, $d7, $3f, $20, $ef, $3c, $0f, $4a, $2f, $6c
162f3     47 5C 2F 54 
162f7     00 2F 4F 60 
162fb     20 FF 10 F7 
162ff     F0 FF 24 D4 | 	byte	$47, $5c, $2f, $54, $00, $2f, $4f, $60, $20, $ff, $10, $f7, $f0, $ff, $24, $d4
16303     B1 B3 CC D7 
16307     D0 80 9F B0 
1630b     80 97 BF C9 
1630f     AC 84 AF D0 | 	byte	$b1, $b3, $cc, $d7, $d0, $80, $9f, $b0, $80, $97, $bf, $c9, $ac, $84, $af, $d0
16313     AF B8 CF 10 
16317     C7 FF 40 13 
1631b     28 FF 77 68 
1631f     52 24 40 E8 | 	byte	$af, $b8, $cf, $10, $c7, $ff, $40, $13, $28, $ff, $77, $68, $52, $24, $40, $e8
16323     FF FB 1A D8 
16327     DF 1B 30 0F 
1632b     04 3F 00 DF 
1632f     2C 17 74 48 | 	byte	$ff, $fb, $1a, $d8, $df, $1b, $30, $0f, $04, $3f, $00, $df, $2c, $17, $74, $48
16333     1F 10 EB 05 
16337     0C F7 10 E0 
1633b     AD BF B8 A7 
1633f     A0 80 AB 80 | 	byte	$1f, $10, $eb, $05, $0c, $f7, $10, $e0, $ad, $bf, $b8, $a7, $a0, $80, $ab, $80
16343     80 8F BF A0 
16347     81 C4 80 9B 
1634b     B0 87 AC B7 
1634f     EF 3F 20 F7 | 	byte	$80, $8f, $bf, $a0, $81, $c4, $80, $9b, $b0, $87, $ac, $b7, $ef, $3f, $20, $f7
16353     37 4B 5D 5A 
16357     73 50 3F 28 
1635b     0F 4C 32 3F 
1635f     40 07 5F 50 | 	byte	$37, $4b, $5d, $5a, $73, $50, $3f, $28, $0f, $4c, $32, $3f, $40, $07, $5f, $50
16363     6F 7C 40 28 
16367     1F 7F 7F 60 
1636b     31 48 10 4F 
1636f     30 2F 30 0F | 	byte	$6f, $7c, $40, $28, $1f, $7f, $7f, $60, $31, $48, $10, $4f, $30, $2f, $30, $0f
16373     00 BF 1F C8 
16377     AF B0 80 9F 
1637b     98 9F BF A8 
1637f     80 8E 80 A7 | 	byte	$00, $bf, $1f, $c8, $af, $b0, $80, $9f, $98, $9f, $bf, $a8, $80, $8e, $80, $a7
16383     A0 80 80 A7 
16387     DF F2 EC D8 
1638b     DF 52 18 5F 
1638f     70 4C 4C 08 | 	byte	$a0, $80, $80, $a7, $df, $f2, $ec, $d8, $df, $52, $18, $5f, $70, $4c, $4c, $08
16393     3F 40 4D 40 
16397     1F 40 3F 70 
1639b     66 30 0F 5C 
1639f     1F 5F 40 35 | 	byte	$3f, $40, $4d, $40, $1f, $40, $3f, $70, $66, $30, $0f, $5c, $1f, $5f, $40, $35
163a3     08 FF 40 EB 
163a7     3F 00 E7 18 
163ab     B4 D7 0C A8 
163af     AF 90 80 97 | 	byte	$08, $ff, $40, $eb, $3f, $00, $e7, $18, $b4, $d7, $0c, $a8, $af, $90, $80, $97
163b3     AF D7 C4 A0 
163b7     8B AB BA 90 
163bb     97 B0 8F EF 
163bf     E8 FD F0 EF | 	byte	$af, $d7, $c4, $a0, $8b, $ab, $ba, $90, $97, $b0, $8f, $ef, $e8, $fd, $f0, $ef
163c3     40 17 5E 65 
163c7     74 52 38 17 
163cb     63 18 3F 50 
163cf     1F 34 3F 7F | 	byte	$40, $17, $5e, $65, $74, $52, $38, $17, $63, $18, $3f, $50, $1f, $34, $3f, $7f
163d3     58 47 18 1F 
163d7     60 10 37 40 
163db     F2 17 10 FB 
163df     2C E4 DF D0 | 	byte	$58, $47, $18, $1f, $60, $10, $37, $40, $f2, $17, $10, $fb, $2c, $e4, $df, $d0
163e3     B5 C7 C2 A0 
163e7     81 80 80 80 
163eb     B7 B0 80 96 
163ef     80 B7 80 80 | 	byte	$b5, $c7, $c2, $a0, $81, $80, $80, $80, $b7, $b0, $80, $96, $80, $b7, $80, $80
163f3     80 80 8D B7 
163f7     D0 BF B8 EF 
163fb     00 DF 6B 50 
163ff     58 28 1F 28 | 	byte	$80, $80, $8d, $b7, $d0, $bf, $b8, $ef, $00, $df, $6b, $50, $58, $28, $1f, $28
16403     1F 4C 11 47 
16407     30 27 7F 7E 
1640b     44 5F 60 4F 
1640f     50 2B 5C 42 | 	byte	$1f, $4c, $11, $47, $30, $27, $7f, $7e, $44, $5f, $60, $4f, $50, $2b, $5c, $42
16413     10 27 38 28 
16417     0C FF 00 BC 
1641b     E3 C0 D7 C0 
1641f     80 80 80 99 | 	byte	$10, $27, $38, $28, $0c, $ff, $00, $bc, $e3, $c0, $d7, $c0, $80, $80, $80, $99
16423     AB B8 9B B8 
16427     B7 E0 94 9F 
1642b     90 BF D8 A7 
1642f     0C DB F0 D3 | 	byte	$ab, $b8, $9b, $b8, $b7, $e0, $94, $9f, $90, $bf, $d8, $a7, $0c, $db, $f0, $d3
16433     2F 42 57 70 
16437     54 33 48 18 
1643b     2F 50 04 1B 
1643f     41 5F 7F 60 | 	byte	$2f, $42, $57, $70, $54, $33, $48, $18, $2f, $50, $04, $1b, $41, $5f, $7f, $60
16443     57 76 58 57 
16447     50 5F 60 27 
1644b     58 27 64 08 
1644f     1B 20 00 B0 | 	byte	$57, $76, $58, $57, $50, $5f, $60, $27, $58, $27, $64, $08, $1b, $20, $00, $b0
16453     DF 00 C4 88 
16457     80 8E 80 A7 
1645b     8B CB 84 B7 
1645f     FC B0 82 AF | 	byte	$df, $00, $c4, $88, $80, $8e, $80, $a7, $8b, $cb, $84, $b7, $fc, $b0, $82, $af
16463     DC 98 AF 0F 
16467     04 D1 F7 FC 
1646b     3F 50 47 70 
1646f     54 10 37 40 | 	byte	$dc, $98, $af, $0f, $04, $d1, $f7, $fc, $3f, $50, $47, $70, $54, $10, $37, $40
16473     29 00 FF 38 
16477     27 62 34 5F 
1647b     68 47 60 4F 
1647f     72 53 50 2F | 	byte	$29, $00, $ff, $38, $27, $62, $34, $5f, $68, $47, $60, $4f, $72, $53, $50, $2f
16483     6E 40 44 1F 
16487     5C 08 F2 E5 
1648b     1F 08 A0 AB 
1648f     84 80 87 9F | 	byte	$6e, $40, $44, $1f, $5c, $08, $f2, $e5, $1f, $08, $a0, $ab, $84, $80, $87, $9f
16493     88 83 B7 CF 
16497     90 8F A4 8F 
1649b     94 80 AF EE 
1649f     C0 97 EB E7 | 	byte	$88, $83, $b7, $cf, $90, $8f, $a4, $8f, $94, $80, $af, $ee, $c0, $97, $eb, $e7
164a3     07 1F 4F 40 
164a7     0D 20 1F 38 
164ab     E0 DF 07 1D 
164af     F2 2B 2F 57 | 	byte	$07, $1f, $4f, $40, $0d, $20, $1f, $38, $e0, $df, $07, $1d, $f2, $2b, $2f, $57
164b3     30 23 3D 5C 
164b7     40 15 3F 40 
164bb     2B 28 1F 48 
164bf     00 EC F7 F0 | 	byte	$30, $23, $3d, $5c, $40, $15, $3f, $40, $2b, $28, $1f, $48, $00, $ec, $f7, $f0
164c3     E7 04 C0 80 
164c7     80 9F 88 80 
164cb     8B 9F A0 9F 
164cf     B0 A7 B8 80 | 	byte	$e7, $04, $c0, $80, $80, $9f, $88, $80, $8b, $9f, $a0, $9f, $b0, $a7, $b8, $80
164d3     A4 A7 EA CC 
164d7     DB E5 F7 03 
164db     2F 5B 6E 4C 
164df     3F 58 60 34 | 	byte	$a4, $a7, $ea, $cc, $db, $e5, $f7, $03, $2f, $5b, $6e, $4c, $3f, $58, $60, $34
164e3     0F 1F 40 20 
164e7     17 3F 70 28 
164eb     47 52 6F 44 
164ef     2F 5F 60 21 | 	byte	$0f, $1f, $40, $20, $17, $3f, $70, $28, $47, $52, $6f, $44, $2f, $5f, $60, $21
164f3     3F 74 40 25 
164f7     39 28 E6 1F 
164fb     48 00 A0 BF 
164ff     B0 A0 86 8B | 	byte	$3f, $74, $40, $25, $39, $28, $e6, $1f, $48, $00, $a0, $bf, $b0, $a0, $86, $8b
16503     B6 98 A3 B7 
16507     D8 A0 8D A3 
1650b     B4 9C BF EB 
1650f     D8 C7 D5 17 | 	byte	$b6, $98, $a3, $b7, $d8, $a0, $8d, $a3, $b4, $9c, $bf, $eb, $d8, $c7, $d5, $17
16513     37 44 3B 4E 
16517     43 56 40 07 
1651b     28 04 0F F6 
1651f     37 30 18 0F | 	byte	$37, $44, $3b, $4e, $43, $56, $40, $07, $28, $04, $0f, $f6, $37, $30, $18, $0f
16523     57 50 2A 37 
16527     51 30 2F 41 
1652b     4B 40 4B 40 
1652f     F0 1F 30 3B | 	byte	$57, $50, $2a, $37, $51, $30, $2f, $41, $4b, $40, $4b, $40, $f0, $1f, $30, $3b
16533     10 EF E2 D0 
16537     A4 88 8F A9 
1653b     95 97 BF D0 
1653f     A8 97 A9 B8 | 	byte	$10, $ef, $e2, $d0, $a4, $88, $8f, $a9, $95, $97, $bf, $d0, $a8, $97, $a9, $b8
16543     92 9F DF F0 
16547     A8 BF DF 2F 
1654b     20 0F 3B 5F 
1654f     40 2F 38 2F | 	byte	$92, $9f, $df, $f0, $a8, $bf, $df, $2f, $20, $0f, $3b, $5f, $40, $2f, $38, $2f
16553     20 E9 0F 4D 
16557     20 F7 3F 50 
1655b     3F 42 55 40 
1655f     2F 68 28 1D | 	byte	$20, $e9, $0f, $4d, $20, $f7, $3f, $50, $3f, $42, $55, $40, $2f, $68, $28, $1d
16563     5B 68 30 F5 
16567     2B 3A 20 00 
1656b     FE 08 E0 8C 
1656f     93 98 85 80 | 	byte	$5b, $68, $30, $f5, $2b, $3a, $20, $00, $fe, $08, $e0, $8c, $93, $98, $85, $80
16573     8B A5 BF A0 
16577     97 B2 A7 9C 
1657b     8D BF E0 C4 
1657f     99 DF 0B 08 | 	byte	$8b, $a5, $bf, $a0, $97, $b2, $a7, $9c, $8d, $bf, $e0, $c4, $99, $df, $0b, $08
16583     EE 1F 5A 48 
16587     20 37 50 00 
1658b     F0 0F 2C 00 
1658f     FF 1C 07 3F | 	byte	$ee, $1f, $5a, $48, $20, $37, $50, $00, $f0, $0f, $2c, $00, $ff, $1c, $07, $3f
16593     4E 38 20 4F 
16597     50 20 07 4F 
1659b     66 40 02 0F 
1659f     4B 28 E8 17 | 	byte	$4e, $38, $20, $4f, $50, $20, $07, $4f, $66, $40, $02, $0f, $4b, $28, $e8, $17
165a3     30 F0 B8 A7 
165a7     BE 84 80 8C 
165ab     9F A4 A3 AE 
165af     B7 B8 99 A7 | 	byte	$30, $f0, $b8, $a7, $be, $84, $80, $8c, $9f, $a4, $a3, $ae, $b7, $b8, $99, $a7
165b3     BF E3 C2 B8 
165b7     CF 13 F4 E7 
165bb     2F 4A 40 3F 
165bf     5B 50 24 1C | 	byte	$bf, $e3, $c2, $b8, $cf, $13, $f4, $e7, $2f, $4a, $40, $3f, $5b, $50, $24, $1c
165c3     13 0E 27 18 
165c7     F6 07 3F 44 
165cb     24 3F 5E 50 
165cf     34 1D 4F 78 | 	byte	$13, $0e, $27, $18, $f6, $07, $3f, $44, $24, $3f, $5e, $50, $34, $1d, $4f, $78
165d3     40 33 36 3F 
165d7     34 07 27 2F 
165db     10 D9 E0 C8 
165df     A0 80 8F 97 | 	byte	$40, $33, $36, $3f, $34, $07, $27, $2f, $10, $d9, $e0, $c8, $a0, $80, $8f, $97
165e3     9E 8F AF BF 
165e7     A6 98 9F CF 
165eb     D0 A7 CB EB 
165ef     DC D5 FF 1C | 	byte	$9e, $8f, $af, $bf, $a6, $98, $9f, $cf, $d0, $a7, $cb, $eb, $dc, $d5, $ff, $1c
165f3     15 2F 55 56 
165f7     46 44 28 08 
165fb     1F 38 08 F3 
165ff     27 2A 27 26 | 	byte	$15, $2f, $55, $56, $46, $44, $28, $08, $1f, $38, $08, $f3, $27, $2a, $27, $26
16603     37 74 48 2B 
16607     3F 5B 5A 49 
1660b     52 54 40 33 
1660f     34 38 30 18 | 	byte	$37, $74, $48, $2b, $3f, $5b, $5a, $49, $52, $54, $40, $33, $34, $38, $30, $18
16613     13 0C F0 B0 
16617     8D 96 93 94 
1661b     84 9F D0 90 
1661f     81 A7 D4 98 | 	byte	$13, $0c, $f0, $b0, $8d, $96, $93, $94, $84, $9f, $d0, $90, $81, $a7, $d4, $98
16623     8F BF D4 B0 
16627     BF EB F0 E3 
1662b     0F 2B 37 45 
1662f     44 0C 1F 20 | 	byte	$8f, $bf, $d4, $b0, $bf, $eb, $f0, $e3, $0f, $2b, $37, $45, $44, $0c, $1f, $20
16633     1D 00 DB 0B 
16637     14 F4 E7 27 
1663b     4D 28 07 1F 
1663f     46 2C 1D 35 | 	byte	$1d, $00, $db, $0b, $14, $f4, $e7, $27, $4d, $28, $07, $1f, $46, $2c, $1d, $35
16643     50 30 13 1F 
16647     3A 20 F7 1B 
1664b     11 10 C0 93 
1664f     9F A0 80 80 | 	byte	$50, $30, $13, $1f, $3a, $20, $f7, $1b, $11, $10, $c0, $93, $9f, $a0, $80, $80
16653     97 AC 80 80 
16657     9F AC 90 8B 
1665b     A9 B5 A7 B7 
1665f     C8 BF F8 D5 | 	byte	$97, $ac, $80, $80, $9f, $ac, $90, $8b, $a9, $b5, $a7, $b7, $c8, $bf, $f8, $d5
16663     FF 2F 4D 44 
16667     20 1F 34 30 
1666b     00 EF 16 22 
1666f     F0 EF 1B 4D | 	byte	$ff, $2f, $4d, $44, $20, $1f, $34, $30, $00, $ef, $16, $22, $f0, $ef, $1b, $4d
16673     40 13 2F 4B 
16677     42 22 3B 65 
1667b     48 30 37 4E 
1667f     40 10 17 4F | 	byte	$40, $13, $2f, $4b, $42, $22, $3b, $65, $48, $30, $37, $4e, $40, $10, $17, $4f
16683     40 00 D1 E0 
16687     C0 8C 8F AE 
1668b     A8 A0 93 B3 
1668f     A8 B7 B0 9D | 	byte	$40, $00, $d1, $e0, $c0, $8c, $8f, $ae, $a8, $a0, $93, $b3, $a8, $b7, $b0, $9d
16693     C7 C0 BF C7 
16697     E5 E8 DF ED 
1669b     1F 5B 4C 34 
1669f     37 57 40 22 | 	byte	$c7, $c0, $bf, $c7, $e5, $e8, $df, $ed, $1f, $5b, $4c, $34, $37, $57, $40, $22
166a3     0F 2F 34 03 
166a7     FC 1F 47 40 
166ab     26 3F 4A 43 
166af     40 33 56 58 | 	byte	$0f, $2f, $34, $03, $fc, $1f, $47, $40, $26, $3f, $4a, $43, $40, $33, $56, $58
166b3     40 37 57 40 
166b7     18 1F 4C 34 
166bb     10 01 F8 D8 
166bf     8C A5 A0 99 | 	byte	$40, $37, $57, $40, $18, $1f, $4c, $34, $10, $01, $f8, $d8, $8c, $a5, $a0, $99
166c3     98 95 96 A5 
166c7     A8 A0 9F A9 
166cb     B5 AE B7 CF 
166cf     DC C8 BB FF | 	byte	$98, $95, $96, $a5, $a8, $a0, $9f, $a9, $b5, $ae, $b7, $cf, $dc, $c8, $bb, $ff
166d3     27 36 24 2F 
166d7     4B 38 23 20 
166db     1F 2C 00 F5 
166df     0C 13 1A 1F | 	byte	$27, $36, $24, $2f, $4b, $38, $23, $20, $1f, $2c, $00, $f5, $0c, $13, $1a, $1f
166e3     27 37 30 28 
166e7     3B 40 33 2F 
166eb     4F 4C 34 18 
166ef     1F 48 1C 1F | 	byte	$27, $37, $30, $28, $3b, $40, $33, $2f, $4f, $4c, $34, $18, $1f, $48, $1c, $1f
166f3     30 12 E0 BC 
166f7     AC AB A0 8E 
166fb     8F 93 A1 96 
166ff     A0 9B A7 A8 | 	byte	$30, $12, $e0, $bc, $ac, $ab, $a0, $8e, $8f, $93, $a1, $96, $a0, $9b, $a7, $a8
16703     93 AD CB C8 
16707     B6 A3 D7 FF 
1670b     07 12 1F 47 
1670f     2C 14 2B 38 | 	byte	$93, $ad, $cb, $c8, $b6, $a3, $d7, $ff, $07, $12, $1f, $47, $2c, $14, $2b, $38
16713     1A 04 F5 0B 
16717     14 FC 13 2F 
1671b     44 12 37 4B 
1671f     50 30 1F 65 | 	byte	$1a, $04, $f5, $0b, $14, $fc, $13, $2f, $44, $12, $37, $4b, $50, $30, $1f, $65
16723     64 40 2F 49 
16727     40 36 31 48 
1672b     42 20 EC CD 
1672f     D4 C0 A8 8F | 	byte	$64, $40, $2f, $49, $40, $36, $31, $48, $42, $20, $ec, $cd, $d4, $c0, $a8, $8f
16733     9D B2 A0 97 
16737     AF B0 B0 90 
1673b     A7 CF D8 C0 
1673f     A3 BF F6 EE | 	byte	$9d, $b2, $a0, $97, $af, $b0, $b0, $90, $a7, $cf, $d8, $c0, $a3, $bf, $f6, $ee
16743     F6 2F 40 3B 
16747     18 2F 46 40 
1674b     14 FB 27 08 
1674f     04 02 27 40 | 	byte	$f6, $2f, $40, $3b, $18, $2f, $46, $40, $14, $fb, $27, $08, $04, $02, $27, $40
16753     14 1B 4F 50 
16757     24 27 47 60 
1675b     41 4C 2F 48 
1675f     2A 36 3C 4E | 	byte	$14, $1b, $4f, $50, $24, $27, $47, $60, $41, $4c, $2f, $48, $2a, $36, $3c, $4e
16763     30 18 D8 EB 
16767     E0 B8 A0 97 
1676b     A7 A4 92 AA 
1676f     BB B8 96 95 | 	byte	$30, $18, $d8, $eb, $e0, $b8, $a0, $97, $a7, $a4, $92, $aa, $bb, $b8, $96, $95
16773     BF E0 B8 AB 
16777     BF DF D2 E5 
1677b     FF 37 38 0B 
1677f     2F 3D 44 20 | 	byte	$bf, $e0, $b8, $ab, $bf, $df, $d2, $e5, $ff, $37, $38, $0b, $2f, $3d, $44, $20
16783     0C 18 14 E8 
16787     FF 12 20 FC 
1678b     1F 33 3F 28 
1678f     27 35 4F 4A | 	byte	$0c, $18, $14, $e8, $ff, $12, $20, $fc, $1f, $33, $3f, $28, $27, $35, $4f, $4a
16793     4D 4C 36 3E 
16797     30 3B 5C 47 
1679b     30 05 02 F8 
1679f     D8 B6 AA A3 | 	byte	$4d, $4c, $36, $3e, $30, $3b, $5c, $47, $30, $05, $02, $f8, $d8, $b6, $aa, $a3
167a3     A8 8E A5 BE 
167a7     B0 90 97 BB 
167ab     BF C8 A3 C7 
167af     C8 C3 C7 17 | 	byte	$a8, $8e, $a5, $be, $b0, $90, $97, $bb, $bf, $c8, $a3, $c7, $c8, $c3, $c7, $17
167b3     1F 24 0D 33 
167b7     42 3F 28 2F 
167bb     28 05 04 0B 
167bf     1A FA 03 0F | 	byte	$1f, $24, $0d, $33, $42, $3f, $28, $2f, $28, $05, $04, $0b, $1a, $fa, $03, $0f
167c3     3B 2C 27 38 
167c7     1F 39 47 4B 
167cb     53 42 2C 24 
167cf     37 58 46 34 | 	byte	$3b, $2c, $27, $38, $1f, $39, $47, $4b, $53, $42, $2c, $24, $37, $58, $46, $34
167d3     24 0C 10 E0 
167d7     D0 B9 BC 88 
167db     8B 9C B3 A0 
167df     89 8B AB B0 | 	byte	$24, $0c, $10, $e0, $d0, $b9, $bc, $88, $8b, $9c, $b3, $a0, $89, $8b, $ab, $b0
167e3     9F B8 BF B8 
167e7     99 BF DF 0C 
167eb     EC 0F 26 28 
167ef     20 2F 3C 20 | 	byte	$9f, $b8, $bf, $b8, $99, $bf, $df, $0c, $ec, $0f, $26, $28, $20, $2f, $3c, $20
167f3     04 F3 1F 08 
167f7     E9 F1 FF 15 
167fb     23 20 1F 29 
167ff     23 30 2F 64 | 	byte	$04, $f3, $1f, $08, $e9, $f1, $ff, $15, $23, $20, $1f, $29, $23, $30, $2f, $64
16803     46 34 19 37 
16807     48 53 40 2F 
1680b     3E 10 FA EE 
1680f     F4 C4 A0 86 | 	byte	$46, $34, $19, $37, $48, $53, $40, $2f, $3e, $10, $fa, $ee, $f4, $c4, $a0, $86
16813     A7 B0 A9 82 
16817     9F A0 9E 9D 
1681b     B7 DC A8 9B 
1681f     AD DD E0 E7 | 	byte	$a7, $b0, $a9, $82, $9f, $a0, $9e, $9d, $b7, $dc, $a8, $9b, $ad, $dd, $e0, $e7
16823     FB 17 28 14 
16827     2D 4C 30 09 
1682b     13 13 1A FC 
1682f     F4 EF FF 20 | 	byte	$fb, $17, $28, $14, $2d, $4c, $30, $09, $13, $13, $1a, $fc, $f4, $ef, $ff, $20
16833     0F 2A 27 28 
16837     11 37 47 5F 
1683b     50 22 2A 4F 
1683f     54 47 44 4F | 	byte	$0f, $2a, $27, $28, $11, $37, $47, $5f, $50, $22, $2a, $4f, $54, $47, $44, $4f
16843     40 10 0B 19 
16847     0C C0 9B AF 
1684b     B4 B0 8F AB 
1684f     9D A0 93 B7 | 	byte	$40, $10, $0b, $19, $0c, $c0, $9b, $af, $b4, $b0, $8f, $ab, $9d, $a0, $93, $b7
16853     C8 B8 A8 9F 
16857     BF D7 CE EF 
1685b     10 07 1A 27 
1685f     47 3A 34 18 | 	byte	$c8, $b8, $a8, $9f, $bf, $d7, $ce, $ef, $10, $07, $1a, $27, $47, $3a, $34, $18
16863     1D 28 1D 00 
16867     F2 06 FB 22 
1686b     1F 28 23 20 
1686f     0F 3F 53 56 | 	byte	$1d, $28, $1d, $00, $f2, $06, $fb, $22, $1f, $28, $23, $20, $0f, $3f, $53, $56
16873     32 23 3F 41 
16877     49 36 5F 40 
1687b     20 0F 2B 24 
1687f     E0 B4 B3 BA | 	byte	$32, $23, $3f, $41, $49, $36, $5f, $40, $20, $0f, $2b, $24, $e0, $b4, $b3, $ba
16883     A4 9B AC 9A 
16887     93 92 9B C7 
1688b     B8 A3 A8 AB 
1688f     B2 BF E9 D8 | 	byte	$a4, $9b, $ac, $9a, $93, $92, $9b, $c7, $b8, $a3, $a8, $ab, $b2, $bf, $e9, $d8
16893     F5 F6 1F 1E 
16897     3E 28 18 19 
1689b     1D 12 16 F0 
1689f     E7 F3 F0 0F | 	byte	$f5, $f6, $1f, $1e, $3e, $28, $18, $19, $1d, $12, $16, $f0, $e7, $f3, $f0, $0f
168a3     14 27 04 FF 
168a7     1B 37 51 34 
168ab     3B 28 34 2F 
168af     3F 5C 40 34 | 	byte	$14, $27, $04, $ff, $1b, $37, $51, $34, $3b, $28, $34, $2f, $3f, $5c, $40, $34
168b3     1F 2C 32 02 
168b7     E8 D0 AD B8 
168bb     9A AD A4 91 
168bf     82 97 AA AB | 	byte	$1f, $2c, $32, $02, $e8, $d0, $ad, $b8, $9a, $ad, $a4, $91, $82, $97, $aa, $ab
168c3     AC B0 A8 9F 
168c7     BB CB E0 E7 
168cb     E0 FF 2F 2A 
168cf     3B 34 23 2A | 	byte	$ac, $b0, $a8, $9f, $bb, $cb, $e0, $e7, $e0, $ff, $2f, $2a, $3b, $34, $23, $2a
168d3     2C 31 10 15 
168d7     F0 F5 07 25 
168db     3A 10 0F 17 
168df     3F 40 3F 56 | 	byte	$2c, $31, $10, $15, $f0, $f5, $07, $25, $3a, $10, $0f, $17, $3f, $40, $3f, $56
168e3     49 2B 30 3B 
168e7     6F 50 3B 46 
168eb     35 44 25 28 
168ef     F5 E4 C0 AF | 	byte	$49, $2b, $30, $3b, $6f, $50, $3b, $46, $35, $44, $25, $28, $f5, $e4, $c0, $af
168f3     B8 BC 9A 90 
168f7     8F 97 AB AB 
168fb     B6 A3 B8 94 
168ff     AF D4 CF D0 | 	byte	$b8, $bc, $9a, $90, $8f, $97, $ab, $ab, $b6, $a3, $b8, $94, $af, $d4, $cf, $d0
16903     CF FB 1F 31 
16907     26 2B 29 28 
1690b     27 24 2C 08 
1690f     F0 E7 03 2B | 	byte	$cf, $fb, $1f, $31, $26, $2b, $29, $28, $27, $24, $2c, $08, $f0, $e7, $03, $2b
16913     18 07 0F 15 
16917     36 1C 4F 54 
1691b     38 1C 2F 54 
1691f     4D 48 3F 39 | 	byte	$18, $07, $0f, $15, $36, $1c, $4f, $54, $38, $1c, $2f, $54, $4d, $48, $3f, $39
16923     48 30 30 34 
16927     08 E0 BF C9 
1692b     C2 AA B0 80 
1692f     95 97 9F B2 | 	byte	$48, $30, $30, $34, $08, $e0, $bf, $c9, $c2, $aa, $b0, $80, $95, $97, $9f, $b2
16933     AB A8 9B 9F 
16937     B3 CF C8 BE 
1693b     CF FF 1B 1C 
1693f     27 28 20 25 | 	byte	$ab, $a8, $9b, $9f, $b3, $cf, $c8, $be, $cf, $ff, $1b, $1c, $27, $28, $20, $25
16943     23 3F 20 F4 
16947     F0 EF 1D 0C 
1694b     10 0D 10 0C 
1694f     1F 40 4B 40 | 	byte	$23, $3f, $20, $f4, $f0, $ef, $1d, $0c, $10, $0d, $10, $0c, $1f, $40, $4b, $40
16953     37 1C 3F 4D 
16957     4A 4C 39 50 
1695b     2D 45 48 1D 
1695f     18 D8 CF D5 | 	byte	$37, $1c, $3f, $4d, $4a, $4c, $39, $50, $2d, $45, $48, $1d, $18, $d8, $cf, $d5
16963     CC B0 99 8C 
16967     90 97 AC AF 
1696b     B0 9A 9F A5 
1696f     BF C0 C4 BE | 	byte	$cc, $b0, $99, $8c, $90, $97, $ac, $af, $b0, $9a, $9f, $a5, $bf, $c0, $c4, $be
16973     D7 FF 08 27 
16977     2A 20 13 25 
1697b     3F 32 10 F7 
1697f     F5 01 F9 13 | 	byte	$d7, $ff, $08, $27, $2a, $20, $13, $25, $3f, $32, $10, $f7, $f5, $01, $f9, $13
16983     1D F0 FF 0D 
16987     2F 38 35 40 
1698b     1E 37 30 3F 
1698f     60 3A 41 47 | 	byte	$1d, $f0, $ff, $0d, $2f, $38, $35, $40, $1e, $37, $30, $3f, $60, $3a, $41, $47
16993     3C 4C 47 30 
16997     04 EC E8 DF 
1699b     D0 B2 A2 88 
1699f     8F 99 B7 A8 | 	byte	$3c, $4c, $47, $30, $04, $ec, $e8, $df, $d0, $b2, $a2, $88, $8f, $99, $b7, $a8
169a3     9D 9F 9E B6 
169a7     AF C2 BF C0 
169ab     CB F3 17 25 
169af     18 0F 1F 3E | 	byte	$9d, $9f, $9e, $b6, $af, $c2, $bf, $c0, $cb, $f3, $17, $25, $18, $0f, $1f, $3e
169b3     3A 22 24 00 
169b7     FC F3 17 20 
169bb     FB 00 F7 1F 
169bf     33 29 43 38 | 	byte	$3a, $22, $24, $00, $fc, $f3, $17, $20, $fb, $00, $f7, $1f, $33, $29, $43, $38
169c3     18 33 3D 53 
169c7     3F 48 39 43 
169cb     44 4F 48 2C 
169cf     08 F8 F9 D8 | 	byte	$18, $33, $3d, $53, $3f, $48, $39, $43, $44, $4f, $48, $2c, $08, $f8, $f9, $d8
169d3     E0 B4 A0 89 
169d7     8F A7 AF A2 
169db     96 A6 A4 AB 
169df     AF C3 B4 B7 | 	byte	$e0, $b4, $a0, $89, $8f, $a7, $af, $a2, $96, $a6, $a4, $ab, $af, $c3, $b4, $b7
169e3     C7 FF 1A F9 
169e7     12 17 2C 20 
169eb     32 3C 10 F8 
169ef     01 03 1F 00 | 	byte	$c7, $ff, $1a, $f9, $12, $17, $2c, $20, $32, $3c, $10, $f8, $01, $03, $1f, $00
169f3     FF 00 03 19 
169f7     2F 40 2E 30 
169fb     21 3F 3C 55 
169ff     48 47 38 47 | 	byte	$ff, $00, $03, $19, $2f, $40, $2e, $30, $21, $3f, $3c, $55, $48, $47, $38, $47
16a03     5C 4F 4A 29 
16a07     18 FB 04 EC 
16a0b     E0 B0 93 8F 
16a0f     9B AC 9B A7 | 	byte	$5c, $4f, $4a, $29, $18, $fb, $04, $ec, $e0, $b0, $93, $8f, $9b, $ac, $9b, $a7
16a13     95 A8 95 AF 
16a17     C0 AC A2 B7 
16a1b     E5 FF EE 17 
16a1f     18 0D 27 2F | 	byte	$95, $a8, $95, $af, $c0, $ac, $a2, $b7, $e5, $ff, $ee, $17, $18, $0d, $27, $2f
16a23     4E 24 08 FF 
16a27     1E 02 07 0C 
16a2b     FD F0 F7 29 
16a2f     2F 34 1C 2F | 	byte	$4e, $24, $08, $ff, $1e, $02, $07, $0c, $fd, $f0, $f7, $29, $2f, $34, $1c, $2f
16a33     24 2F 47 4F 
16a37     44 33 40 47 
16a3b     5B 50 4E 30 
16a3f     1B 0A 17 10 | 	byte	$24, $2f, $47, $4f, $44, $33, $40, $47, $5b, $50, $4e, $30, $1b, $0a, $17, $10
16a43     D4 C0 97 A2 
16a47     9B A2 AB A8 
16a4b     90 9F A5 C7 
16a4f     A0 9B B3 BF | 	byte	$d4, $c0, $97, $a2, $9b, $a2, $ab, $a8, $90, $9f, $a5, $c7, $a0, $9b, $b3, $bf
16a53     D0 DB 03 05 
16a57     05 F7 2F 40 
16a5b     38 1A 13 18 
16a5f     07 14 0F 18 | 	byte	$d0, $db, $03, $05, $05, $f7, $2f, $40, $38, $1a, $13, $18, $07, $14, $0f, $18
16a63     E4 F3 0F 29 
16a67     23 36 28 1F 
16a6b     2C 33 4E 44 
16a6f     44 2B 47 46 | 	byte	$e4, $f3, $0f, $29, $23, $36, $28, $1f, $2c, $33, $4e, $44, $44, $2b, $47, $46
16a73     59 58 44 28 
16a77     1A 1F 30 00 
16a7b     D8 C8 A4 A1 
16a7f     9F C2 A4 98 | 	byte	$59, $58, $44, $28, $1a, $1f, $30, $00, $d8, $c8, $a4, $a1, $9f, $c2, $a4, $98
16a83     97 BF B0 A8 
16a87     A1 AF C0 A9 
16a8b     DB F7 09 E6 
16a8f     FF 23 2F 38 | 	byte	$97, $bf, $b0, $a8, $a1, $af, $c0, $a9, $db, $f7, $09, $e6, $ff, $23, $2f, $38
16a93     26 2C 18 06 
16a97     0F 27 04 FD 
16a9b     EC F3 0B 1F 
16a9f     2C 1F 28 0F | 	byte	$26, $2c, $18, $06, $0f, $27, $04, $fd, $ec, $f3, $0b, $1f, $2c, $1f, $28, $0f
16aa3     33 35 47 40 
16aa7     40 24 47 41 
16aab     5F 50 35 24 
16aaf     2F 30 10 06 | 	byte	$33, $35, $47, $40, $40, $24, $47, $41, $5f, $50, $35, $24, $2f, $30, $10, $06
16ab3     EC C0 90 AD 
16ab7     AE AC 8C 8F 
16abb     B4 A0 A2 93 
16abf     B7 A0 97 AF | 	byte	$ec, $c0, $90, $ad, $ae, $ac, $8c, $8f, $b4, $a0, $a2, $93, $b7, $a0, $97, $af
16ac3     DF F0 DC D7 
16ac7     0F 1C 0F 3D 
16acb     28 20 01 1D 
16acf     12 1E 00 EB | 	byte	$df, $f0, $dc, $d7, $0f, $1c, $0f, $3d, $28, $20, $01, $1d, $12, $1e, $00, $eb
16ad3     E3 F7 03 26 
16ad7     20 19 20 0F 
16adb     2C 33 45 40 
16adf     2A 1B 47 60 | 	byte	$e3, $f7, $03, $26, $20, $19, $20, $0f, $2c, $33, $45, $40, $2a, $1b, $47, $60
16ae3     50 38 3B 44 
16ae7     16 2F 24 20 
16aeb     D0 A7 BE B9 
16aef     B0 87 9F AB | 	byte	$50, $38, $3b, $44, $16, $2f, $24, $20, $d0, $a7, $be, $b9, $b0, $87, $9f, $ab
16af3     A0 95 B3 A9 
16af7     B2 84 9F D4 
16afb     D7 D4 DF F4 
16aff     FB 1F 1F 38 | 	byte	$a0, $95, $b3, $a9, $b2, $84, $9f, $d4, $d7, $d4, $df, $f4, $fb, $1f, $1f, $38
16b03     20 1E 07 2A 
16b07     12 24 02 DF 
16b0b     EC F7 0A 17 
16b0f     24 17 24 02 | 	byte	$20, $1e, $07, $2a, $12, $24, $02, $df, $ec, $f7, $0a, $17, $24, $17, $24, $02
16b13     2B 3F 51 30 
16b17     0F 4F 47 54 
16b1b     3B 5E 48 20 
16b1f     25 47 40 00 | 	byte	$2b, $3f, $51, $30, $0f, $4f, $47, $54, $3b, $5e, $48, $20, $25, $47, $40, $00
16b23     C6 DF D0 A0 
16b27     A2 93 B7 90 
16b2b     93 A7 C4 90 
16b2f     93 9D AB BE | 	byte	$c6, $df, $d0, $a0, $a2, $93, $b7, $90, $93, $a7, $c4, $90, $93, $9d, $ab, $be
16b33     DD D2 DB F1 
16b37     F7 23 26 29 
16b3b     27 18 0E 2B 
16b3f     28 17 00 DF | 	byte	$dd, $d2, $db, $f1, $f7, $23, $26, $29, $27, $18, $0e, $2b, $28, $17, $00, $df
16b43     F7 F0 07 0C 
16b47     2F 20 ED 1B 
16b4b     37 48 26 26 
16b4f     3D 44 33 4F | 	byte	$f7, $f0, $07, $0c, $2f, $20, $ed, $1b, $37, $48, $26, $26, $3d, $44, $33, $4f
16b53     57 58 18 2F 
16b57     59 47 20 FF 
16b5b     00 EE C4 9E 
16b5f     BD B0 92 95 | 	byte	$57, $58, $18, $2f, $59, $47, $20, $ff, $00, $ee, $c4, $9e, $bd, $b0, $92, $95
16b63     AF AC A8 9C 
16b67     92 A0 A3 BF 
16b6b     CF CC C7 F3 
16b6f     F7 17 24 25 | 	byte	$af, $ac, $a8, $9c, $92, $a0, $a3, $bf, $cf, $cc, $c7, $f3, $f7, $17, $24, $25
16b73     20 0D 27 21 
16b77     33 04 FB FC 
16b7b     E0 DF 0F 2A 
16b7f     18 F0 FF 31 | 	byte	$20, $0d, $27, $21, $33, $04, $fb, $fc, $e0, $df, $0f, $2a, $18, $f0, $ff, $31
16b83     27 28 1F 4A 
16b87     24 1F 47 68 
16b8b     48 31 2E 4F 
16b8f     58 30 1B 31 | 	byte	$27, $28, $1f, $4a, $24, $1f, $47, $68, $48, $31, $2e, $4f, $58, $30, $1b, $31
16b93     08 CC CF C8 
16b97     B4 98 98 9F 
16b9b     B5 A8 9F A8 
16b9f     8A 9F A7 BF | 	byte	$08, $cc, $cf, $c8, $b4, $98, $98, $9f, $b5, $a8, $9f, $a8, $8a, $9f, $a7, $bf
16ba3     C4 C7 D0 DF 
16ba7     0B 13 27 20 
16bab     0C 1F 39 22 
16baf     21 1A 1C E0 | 	byte	$c4, $c7, $d0, $df, $0b, $13, $27, $20, $0c, $1f, $39, $22, $21, $1a, $1c, $e0
16bb3     D7 05 1F 20 
16bb7     EB 0B 2B 18 
16bbb     07 3F 40 1A 
16bbf     18 37 5F 58 | 	byte	$d7, $05, $1f, $20, $eb, $0b, $2b, $18, $07, $3f, $40, $1a, $18, $37, $5f, $58
16bc3     20 2F 5D 48 
16bc7     31 3F 40 20 
16bcb     00 DC E7 D0 
16bcf     9F A8 99 A7 | 	byte	$20, $2f, $5d, $48, $31, $3f, $40, $20, $00, $dc, $e7, $d0, $9f, $a8, $99, $a7
16bd3     AE B7 98 9B 
16bd7     9A 95 AE BF 
16bdb     BB CF C4 D7 
16bdf     13 1B 14 FF | 	byte	$ae, $b7, $98, $9b, $9a, $95, $ae, $bf, $bb, $cf, $c4, $d7, $13, $1b, $14, $ff
16be3     37 28 1A 1F 
16be7     3B 30 F0 D1 
16beb     F7 24 F0 FB 
16bef     1C 12 0C 0D | 	byte	$37, $28, $1a, $1f, $3b, $30, $f0, $d1, $f7, $24, $f0, $fb, $1c, $12, $0c, $0d
16bf3     27 4B 20 01 
16bf7     37 66 44 2B 
16bfb     4A 43 50 3C 
16bff     3F 55 38 20 | 	byte	$27, $4b, $20, $01, $37, $66, $44, $2b, $4a, $43, $50, $3c, $3f, $55, $38, $20
16c03     06 00 E4 D4 
16c07     B0 9A A7 B6 
16c0b     A7 B8 98 A6 
16c0f     98 97 A7 BF | 	byte	$06, $00, $e4, $d4, $b0, $9a, $a7, $b6, $a7, $b8, $98, $a6, $98, $97, $a7, $bf
16c13     C8 AD BF FF 
16c17     06 FC 0B 26 
16c1b     2C 10 0F 47 
16c1f     44 00 FA 00 | 	byte	$c8, $ad, $bf, $ff, $06, $fc, $0b, $26, $2c, $10, $0f, $47, $44, $00, $fa, $00
16c23     FD 00 F7 0F 
16c27     1A 02 F9 2F 
16c2b     40 10 17 29 
16c2f     47 4A 3A 3F | 	byte	$fd, $00, $f7, $0f, $1a, $02, $f9, $2f, $40, $10, $17, $29, $47, $4a, $3a, $3f
16c33     49 42 3F 47 
16c37     4E 40 49 20 
16c3b     0B 12 F0 D2 
16c3f     B2 A3 AE B3 | 	byte	$49, $42, $3f, $47, $4e, $40, $49, $20, $0b, $12, $f0, $d2, $b2, $a3, $ae, $b3
16c43     B2 A7 B0 A0 
16c47     89 9F BE B0 
16c4b     A6 BF DA F3 
16c4f     E2 F7 2F 18 | 	byte	$b2, $a7, $b0, $a0, $89, $9f, $be, $b0, $a6, $bf, $da, $f3, $e2, $f7, $2f, $18
16c53     FF 1F 3B 40 
16c57     20 0A 01 0C 
16c5b     E0 E7 1D 0C 
16c5f     E7 FF 1F 2C | 	byte	$ff, $1f, $3b, $40, $20, $0a, $01, $0c, $e0, $e7, $1d, $0c, $e7, $ff, $1f, $2c
16c63     10 07 19 33 
16c67     38 2F 49 38 
16c6b     3B 41 32 47 
16c6f     4C 44 38 20 | 	byte	$10, $07, $19, $33, $38, $2f, $49, $38, $3b, $41, $32, $47, $4c, $44, $38, $20
16c73     21 10 F8 D0 
16c77     B4 B8 A7 A4 
16c7b     B7 C0 98 8F 
16c7f     99 A7 B4 8E | 	byte	$21, $10, $f8, $d0, $b4, $b8, $a7, $a4, $b7, $c0, $98, $8f, $99, $a7, $b4, $8e
16c83     AF D0 C8 BF 
16c87     F7 13 0A FE 
16c8b     FF 27 40 20 
16c8f     1D 2E 08 E2 | 	byte	$af, $d0, $c8, $bf, $f7, $13, $0a, $fe, $ff, $27, $40, $20, $1d, $2e, $08, $e2
16c93     EB 0F 00 F0 
16c97     E7 07 2C 06 
16c9b     07 11 16 2B 
16c9f     2F 33 3F 40 | 	byte	$eb, $0f, $00, $f0, $e7, $07, $2c, $06, $07, $11, $16, $2b, $2f, $33, $3f, $40
16ca3     3A 2B 3F 46 
16ca7     4D 44 2F 33 
16cab     30 18 E6 F0 
16caf     C4 A6 AB B5 | 	byte	$3a, $2b, $3f, $46, $4d, $44, $2f, $33, $30, $18, $e6, $f0, $c4, $a6, $ab, $b5
16cb3     C9 AC 88 9F 
16cb7     B8 98 8F AE 
16cbb     BF BA BB CB 
16cbf     0F 02 EE FB | 	byte	$c9, $ac, $88, $9f, $b8, $98, $8f, $ae, $bf, $ba, $bb, $cb, $0f, $02, $ee, $fb
16cc3     2F 28 1D 37 
16cc7     38 20 00 ED 
16ccb     0F 10 E7 F1 
16ccf     FF 1E 18 06 | 	byte	$2f, $28, $1d, $37, $38, $20, $00, $ed, $0f, $10, $e7, $f1, $ff, $1e, $18, $06
16cd3     06 0F 28 17 
16cd7     33 39 47 40 
16cdb     2F 2D 47 60 
16cdf     32 3F 4C 39 | 	byte	$06, $0f, $28, $17, $33, $39, $47, $40, $2f, $2d, $47, $60, $32, $3f, $4c, $39
16ce3     2C 13 09 F0 
16ce7     C0 A7 CB D4 
16ceb     A0 9F AD B3 
16cef     A4 8F 9F BB | 	byte	$2c, $13, $09, $f0, $c0, $a7, $cb, $d4, $a0, $9f, $ad, $b3, $a4, $8f, $9f, $bb
16cf3     B2 A3 C7 FF 
16cf7     EC EB FF 0F 
16cfb     21 19 2F 44 
16cff     2A 10 FF 0F | 	byte	$b2, $a3, $c7, $ff, $ec, $eb, $ff, $0f, $21, $19, $2f, $44, $2a, $10, $ff, $0f
16d03     0A F8 E8 E7 
16d07     15 0E 08 FD 
16d0b     0F 08 1B 18 
16d0f     1F 4D 40 25 | 	byte	$0a, $f8, $e8, $e7, $15, $0e, $08, $fd, $0f, $08, $1b, $18, $1f, $4d, $40, $25
16d13     2B 47 3F 42 
16d17     3B 48 4F 30 
16d1b     25 39 10 D4 
16d1f     C4 C7 D8 B0 | 	byte	$2b, $47, $3f, $42, $3b, $48, $4f, $30, $25, $39, $10, $d4, $c4, $c7, $d8, $b0
16d23     A7 AB C2 A2 
16d27     89 A6 AC 98 
16d2b     9F B3 D5 E0 
16d2f     D7 F7 F9 0C | 	byte	$a7, $ab, $c2, $a2, $89, $a6, $ac, $98, $9f, $b3, $d5, $e0, $d7, $f7, $f9, $0c
16d33     FE 2B 38 37 
16d37     24 0F 1A 16 
16d3b     02 E0 FB F8 
16d3f     0F 0A 00 FF | 	byte	$fe, $2b, $38, $37, $24, $0f, $1a, $16, $02, $e0, $fb, $f8, $0f, $0a, $00, $ff
16d43     20 00 FF 27 
16d47     38 34 30 28 
16d4b     37 46 24 47 
16d4f     49 46 32 3B | 	byte	$20, $00, $ff, $27, $38, $34, $30, $28, $37, $46, $24, $47, $49, $46, $32, $3b
16d53     44 28 00 E0 
16d57     DB E0 B0 A7 
16d5b     C7 B4 A4 95 
16d5f     AB A8 8F 98 | 	byte	$44, $28, $00, $e0, $db, $e0, $b0, $a7, $c7, $b4, $a4, $95, $ab, $a8, $8f, $98
16d63     9F C4 BB CF 
16d67     E0 F7 E8 F7 
16d6b     09 2F 40 19 
16d6f     1F 27 1C 06 | 	byte	$9f, $c4, $bb, $cf, $e0, $f7, $e8, $f7, $09, $2f, $40, $19, $1f, $27, $1c, $06
16d73     F8 E5 FD 0A 
16d77     F2 FF 1B 01 
16d7b     05 F6 0F 36 
16d7f     22 27 36 3C | 	byte	$f8, $e5, $fd, $0a, $f2, $ff, $1b, $01, $05, $f6, $0f, $36, $22, $27, $36, $3c
16d83     30 27 40 4D 
16d87     40 37 39 4F 
16d8b     48 00 11 FC 
16d8f     F0 B4 BF C8 | 	byte	$30, $27, $40, $4d, $40, $37, $39, $4f, $48, $00, $11, $fc, $f0, $b4, $bf, $c8
16d93     B7 B4 9D B3 
16d97     A8 A0 88 A3 
16d9b     A6 BA B5 CF 
16d9f     EF EA D5 F7 | 	byte	$b7, $b4, $9d, $b3, $a8, $a0, $88, $a3, $a6, $ba, $b5, $cf, $ef, $ea, $d5, $f7
16da3     26 2B 28 21 
16da7     22 39 20 F0 
16dab     07 FC FE F8 
16daf     F3 1C 10 00 | 	byte	$26, $2b, $28, $21, $22, $39, $20, $f0, $07, $fc, $fe, $f8, $f3, $1c, $10, $00
16db3     F3 0E 17 1F 
16db7     17 3F 30 36 
16dbb     20 2F 54 36 
16dbf     34 2B 67 44 | 	byte	$f3, $0e, $17, $1f, $17, $3f, $30, $36, $20, $2f, $54, $36, $34, $2b, $67, $44
16dc3     2C 22 27 00 
16dc7     E1 C6 D3 CC 
16dcb     B8 AD B4 B9 
16dcf     AA 95 97 AA | 	byte	$2c, $22, $27, $00, $e1, $c6, $d3, $cc, $b8, $ad, $b4, $b9, $aa, $95, $97, $aa
16dd3     A6 A3 C7 E1 
16dd7     D6 DF DD F7 
16ddb     2F 14 1F 2B 
16ddf     3B 32 14 09 | 	byte	$a6, $a3, $c7, $e1, $d6, $df, $dd, $f7, $2f, $14, $1f, $2b, $3b, $32, $14, $09
16de3     13 00 EF FA 
16de7     0E 18 00 07 
16deb     00 0F 08 0F 
16def     2B 2B 30 19 | 	byte	$13, $00, $ef, $fa, $0e, $18, $00, $07, $00, $0f, $08, $0f, $2b, $2b, $30, $19
16df3     2F 44 32 29 
16df7     3F 48 49 42 
16dfb     37 38 26 0A 
16dff     E9 E0 DA CC | 	byte	$2f, $44, $32, $29, $3f, $48, $49, $42, $37, $38, $26, $0a, $e9, $e0, $da, $cc
16e03     B8 B6 CB B0 
16e07     98 AF A0 97 
16e0b     A9 AB D7 D2 
16e0f     CC CF E9 07 | 	byte	$b8, $b6, $cb, $b0, $98, $af, $a0, $97, $a9, $ab, $d7, $d2, $cc, $cf, $e9, $07
16e13     13 0B 1F 33 
16e17     31 20 13 20 
16e1b     F8 F4 E3 FF 
16e1f     00 F8 FB F6 | 	byte	$13, $0b, $1f, $33, $31, $20, $13, $20, $f8, $f4, $e3, $ff, $00, $f8, $fb, $f6
16e23     F3 EF F9 0F 
16e27     26 08 17 29 
16e2b     2D 28 23 2C 
16e2f     32 3F 38 3B | 	byte	$f3, $ef, $f9, $0f, $26, $08, $17, $29, $2d, $28, $23, $2c, $32, $3f, $38, $3b
16e33     38 34 24 00 
16e37     EF 00 C0 BF 
16e3b     C2 B7 BC AC 
16e3f     AA A7 A0 8D | 	byte	$38, $34, $24, $00, $ef, $00, $c0, $bf, $c2, $b7, $bc, $ac, $aa, $a7, $a0, $8d
16e43     A7 B7 D6 C0 
16e47     C7 D7 FE F0 
16e4b     FF 23 2A 2E 
16e4f     21 2D 28 0C | 	byte	$a7, $b7, $d6, $c0, $c7, $d7, $fe, $f0, $ff, $23, $2a, $2e, $21, $2d, $28, $0c
16e53     FA FB F0 FF 
16e57     02 F3 09 00 
16e5b     E7 F9 0D 15 
16e5f     14 1D 27 34 | 	byte	$fa, $fb, $f0, $ff, $02, $f3, $09, $00, $e7, $f9, $0d, $15, $14, $1d, $27, $34
16e63     32 2A 33 31 
16e67     3F 44 30 57 
16e6b     48 31 2F 22 
16e6f     03 F2 D8 CF | 	byte	$32, $2a, $33, $31, $3f, $44, $30, $57, $48, $31, $2f, $22, $03, $f2, $d8, $cf
16e73     D0 BD C2 B3 
16e77     BA AA 9B 91 
16e7b     AF C4 B3 BF 
16e7f     D5 E5 E0 EF | 	byte	$d0, $bd, $c2, $b3, $ba, $aa, $9b, $91, $af, $c4, $b3, $bf, $d5, $e5, $e0, $ef
16e83     0F 22 16 2D 
16e87     38 29 30 08 
16e8b     05 07 FA F3 
16e8f     09 07 00 EB | 	byte	$0f, $22, $16, $2d, $38, $29, $30, $08, $05, $07, $fa, $f3, $09, $07, $00, $eb
16e93     F8 F7 16 02 
16e97     1F 18 27 40 
16e9b     20 27 41 38 
16e9f     2F 47 47 51 | 	byte	$f8, $f7, $16, $02, $1f, $18, $27, $40, $20, $27, $41, $38, $2f, $47, $47, $51
16ea3     44 3F 38 28 
16ea7     08 F3 E8 D3 
16eab     D8 B2 BD CC 
16eaf     B0 90 97 A4 | 	byte	$44, $3f, $38, $28, $08, $f3, $e8, $d3, $d8, $b2, $bd, $cc, $b0, $90, $97, $a4
16eb3     AA AE AD D5 
16eb7     D4 CF F1 F8 
16ebb     07 1C 1D 33 
16ebf     40 33 22 1B | 	byte	$aa, $ae, $ad, $d5, $d4, $cf, $f1, $f8, $07, $1c, $1d, $33, $40, $33, $22, $1b
16ec3     18 00 FF FF 
16ec7     1B 00 F3 F8 
16ecb     EA FB 06 F3 
16ecf     0F 28 1B 1F | 	byte	$18, $00, $ff, $ff, $1b, $00, $f3, $f8, $ea, $fb, $06, $f3, $0f, $28, $1b, $1f
16ed3     23 2F 2C 2F 
16ed7     27 3F 40 39 
16edb     42 30 3E 18 
16edf     00 F1 00 C4 | 	byte	$23, $2f, $2c, $2f, $27, $3f, $40, $39, $42, $30, $3e, $18, $00, $f1, $00, $c4
16ee3     BD CA C2 BA 
16ee7     98 93 A2 88 
16eeb     8F A8 9F BB 
16eef     BE CE D9 F5 | 	byte	$bd, $ca, $c2, $ba, $98, $93, $a2, $88, $8f, $a8, $9f, $bb, $be, $ce, $d9, $f5
16ef3     F3 07 2B 2F 
16ef7     37 28 32 24 
16efb     09 0F 10 FF 
16eff     1F 00 FB 03 | 	byte	$f3, $07, $2b, $2f, $37, $28, $32, $24, $09, $0f, $10, $ff, $1f, $00, $fb, $03
16f03     04 F4 07 0E 
16f07     13 24 12 2F 
16f0b     24 23 2C 2F 
16f0f     30 3B 40 2B | 	byte	$04, $f4, $07, $0e, $13, $24, $12, $2f, $24, $23, $2c, $2f, $30, $3b, $40, $2b
16f13     4F 48 21 1E 
16f17     10 02 E4 C7 
16f1b     E9 D0 B8 B7 
16f1f     B2 A0 94 9B | 	byte	$4f, $48, $21, $1e, $10, $02, $e4, $c7, $e9, $d0, $b8, $b7, $b2, $a0, $94, $9b
16f23     97 A6 AC B3 
16f27     BF D2 D7 E1 
16f2b     EB 1F 16 1F 
16f2f     3A 2C 27 20 | 	byte	$97, $a6, $ac, $b3, $bf, $d2, $d7, $e1, $eb, $1f, $16, $1f, $3a, $2c, $27, $20
16f33     10 07 19 04 
16f37     07 06 FF 08 
16f3b     EE F7 09 0C 
16f3f     06 1D 18 17 | 	byte	$10, $07, $19, $04, $07, $06, $ff, $08, $ee, $f7, $09, $0c, $06, $1d, $18, $17
16f43     2E 1A 1F 3E 
16f47     20 2F 34 3F 
16f4b     48 2C 2F 2C 
16f4f     10 EC F6 E8 | 	byte	$2e, $1a, $1f, $3e, $20, $2f, $34, $3f, $48, $2c, $2f, $2c, $10, $ec, $f6, $e8
16f53     D3 D2 CE C0 
16f57     B3 A2 9D 9E 
16f5b     9D AE A3 BF 
16f5f     D1 C7 D3 ED | 	byte	$d3, $d2, $ce, $c0, $b3, $a2, $9d, $9e, $9d, $ae, $a3, $bf, $d1, $c7, $d3, $ed
16f63     F4 0F 24 26 
16f67     3B 33 29 23 
16f6b     14 16 12 06 
16f6f     09 16 00 F9 | 	byte	$f4, $0f, $24, $26, $3b, $33, $29, $23, $14, $16, $12, $06, $09, $16, $00, $f9
16f73     08 F4 0B 10 
16f77     FF 27 1A 1A 
16f7b     1F 2D 34 28 
16f7f     23 37 40 33 | 	byte	$08, $f4, $0b, $10, $ff, $27, $1a, $1a, $1f, $2d, $34, $28, $23, $37, $40, $33
16f83     39 47 30 18 
16f87     14 FC F4 DC 
16f8b     E6 D8 C2 C6 
16f8f     B0 A1 A2 A0 | 	byte	$39, $47, $30, $18, $14, $fc, $f4, $dc, $e6, $d8, $c2, $c6, $b0, $a1, $a2, $a0
16f93     8D A7 B0 B3 
16f97     C1 C3 CF DF 
16f9b     EF 0B 1A 23 
16f9f     33 2E 18 1F | 	byte	$8d, $a7, $b0, $b3, $c1, $c3, $cf, $df, $ef, $0b, $1a, $23, $33, $2e, $18, $1f
16fa3     20 F8 0F 00 
16fa7     FF 0A F8 F4 
16fab     F9 F8 FB 02 
16faf     0F 1A 0D 17 | 	byte	$20, $f8, $0f, $00, $ff, $0a, $f8, $f4, $f9, $f8, $fb, $02, $0f, $1a, $0d, $17
16fb3     27 2E 18 2F 
16fb7     38 24 2F 37 
16fbb     48 30 34 24 
16fbf     06 FA F7 E0 | 	byte	$27, $2e, $18, $2f, $38, $24, $2f, $37, $48, $30, $34, $24, $06, $fa, $f7, $e0
16fc3     DB E0 C0 B7 
16fc7     B8 A4 9C 99 
16fcb     99 A6 A5 B7 
16fcf     BE C5 BF EB | 	byte	$db, $e0, $c0, $b7, $b8, $a4, $9c, $99, $99, $a6, $a5, $b7, $be, $c5, $bf, $eb
16fd3     E8 FF 29 20 
16fd7     27 2E 28 1B 
16fdb     14 05 11 02 
16fdf     07 00 FF F4 | 	byte	$e8, $ff, $29, $20, $27, $2e, $28, $1b, $14, $05, $11, $02, $07, $00, $ff, $f4
16fe3     F5 F4 F7 16 
16fe7     00 19 1D 22 
16feb     1E 2B 39 2C 
16fef     21 35 3A 34 | 	byte	$f5, $f4, $f7, $16, $00, $19, $1d, $22, $1e, $2b, $39, $2c, $21, $35, $3a, $34
16ff3     3F 40 30 1C 
16ff7     18 FC F7 E4 
16ffb     E5 D0 C9 C0 
16fff     B4 A0 9B 9C | 	byte	$3f, $40, $30, $1c, $18, $fc, $f7, $e4, $e5, $d0, $c9, $c0, $b4, $a0, $9b, $9c
17003     8E A7 AC AC 
17007     B9 CA C2 DF 
1700b     EE 0F 1C 23 
1700f     32 33 30 1A | 	byte	$8e, $a7, $ac, $ac, $b9, $ca, $c2, $df, $ee, $0f, $1c, $23, $32, $33, $30, $1a
17013     23 1A 17 16 
17017     0B 1B 02 FC 
1701b     FF 0B 00 07 
1701f     1D 24 10 1F | 	byte	$23, $1a, $17, $16, $0b, $1b, $02, $fc, $ff, $0b, $00, $07, $1d, $24, $10, $1f
17023     36 30 2C 3B 
17027     32 33 3D 43 
1702b     4A 40 39 24 
1702f     1E 05 05 F4 | 	byte	$36, $30, $2c, $3b, $32, $33, $3d, $43, $4a, $40, $39, $24, $1e, $05, $05, $f4
17033     E4 E8 D2 C0 
17037     BD AA 97 9F 
1703b     98 9F A3 B7 
1703f     B6 B2 BF D9 | 	byte	$e4, $e8, $d2, $c0, $bd, $aa, $97, $9f, $98, $9f, $a3, $b7, $b6, $b2, $bf, $d9
17043     EF F7 15 23 
17047     2A 2E 24 21 
1704b     22 13 13 16 
1704f     18 04 FF 06 | 	byte	$ef, $f7, $15, $23, $2a, $2e, $24, $21, $22, $13, $13, $16, $18, $04, $ff, $06
17053     F8 F0 FF 0C 
17057     02 0B 0E 19 
1705b     19 2B 28 22 
1705f     24 27 38 35 | 	byte	$f8, $f0, $ff, $0c, $02, $0b, $0e, $19, $19, $2b, $28, $22, $24, $27, $38, $35
17063     3F 3A 28 21 
17067     16 00 FE FC 
1706b     E0 DF D8 CC 
1706f     AC A4 A0 94 | 	byte	$3f, $3a, $28, $21, $16, $00, $fe, $fc, $e0, $df, $d8, $cc, $ac, $a4, $a0, $94
17073     8F 9B AF A8 
17077     A6 B7 C3 CF 
1707b     E3 FF 1C 1F 
1707f     27 27 33 28 | 	byte	$8f, $9b, $af, $a8, $a6, $b7, $c3, $cf, $e3, $ff, $1c, $1f, $27, $27, $33, $28
17083     13 1E 23 10 
17087     0D 1C 02 F8 
1708b     F7 02 F7 07 
1708f     0C 07 0C 13 | 	byte	$13, $1e, $23, $10, $0d, $1c, $02, $f8, $f7, $02, $f7, $07, $0c, $07, $0c, $13
17093     2C 27 28 27 
17097     2C 22 3F 40 
1709b     40 3C 2D 28 
1709f     14 15 04 F2 | 	byte	$2c, $27, $28, $27, $2c, $22, $3f, $40, $40, $3c, $2d, $28, $14, $15, $04, $f2
170a3     FC F3 E0 C3 
170a7     C8 B0 90 92 
170ab     99 A4 9F 9B 
170af     AB AE B8 BE | 	byte	$fc, $f3, $e0, $c3, $c8, $b0, $90, $92, $99, $a4, $9f, $9b, $ab, $ae, $b8, $be
170b3     DF FD 04 0B 
170b7     2F 28 22 1A 
170bb     1B 1D 0F 1B 
170bf     12 11 08 03 | 	byte	$df, $fd, $04, $0b, $2f, $28, $22, $1a, $1b, $1d, $0f, $1b, $12, $11, $08, $03
170c3     FC F7 0B 0F 
170c7     02 F9 1B 1C 
170cb     27 26 27 2A 
170cf     27 33 33 4B | 	byte	$fc, $f7, $0b, $0f, $02, $f9, $1b, $1c, $27, $26, $27, $2a, $27, $33, $33, $4b
170d3     48 32 3A 30 
170d7     34 00 0F 18 
170db     FA EC E7 F1 
170df     D0 A8 A5 A7 | 	byte	$48, $32, $3a, $30, $34, $00, $0f, $18, $fa, $ec, $e7, $f1, $d0, $a8, $a5, $a7
170e3     A8 9F A0 AE 
170e7     B8 9E B3 C7 
170eb     E5 DF FF 17 
170ef     16 1F 26 12 | 	byte	$a8, $9f, $a0, $ae, $b8, $9e, $b3, $c7, $e5, $df, $ff, $17, $16, $1f, $26, $12
170f3     11 13 1C 09 
170f7     0D 16 04 EB 
170fb     FD FC 07 00 
170ff     F7 0A 03 1F | 	byte	$11, $13, $1c, $09, $0d, $16, $04, $eb, $fd, $fc, $07, $00, $f7, $0a, $03, $1f
17103     26 27 30 21 
17107     2C 22 47 50 
1710b     2B 3F 4B 40 
1710f     14 1F 20 10 | 	byte	$26, $27, $30, $21, $2c, $22, $47, $50, $2b, $3f, $4b, $40, $14, $1f, $20, $10
17113     E9 FF FC F8 
17117     C4 B3 B3 AC 
1711b     98 A3 A7 AD 
1711f     99 AB B7 BE | 	byte	$e9, $ff, $fc, $f8, $c4, $b3, $b3, $ac, $98, $a3, $a7, $ad, $99, $ab, $b7, $be
17123     D3 D9 F7 07 
17127     19 21 14 0C 
1712b     1F 10 07 10 
1712f     16 12 EF FA | 	byte	$d3, $d9, $f7, $07, $19, $21, $14, $0c, $1f, $10, $07, $10, $16, $12, $ef, $fa
17133     F3 05 00 F3 
17137     00 F9 13 0F 
1713b     1B 37 28 0F 
1713f     2D 3F 40 30 | 	byte	$f3, $05, $00, $f3, $00, $f9, $13, $0f, $1b, $37, $28, $0f, $2d, $3f, $40, $30
17143     3F 51 40 28 
17147     2E 2E 1C F8 
1714b     FD 0F 00 EA 
1714f     C8 CC AC A1 | 	byte	$3f, $51, $40, $28, $2e, $2e, $1c, $f8, $fd, $0f, $00, $ea, $c8, $cc, $ac, $a1
17153     A0 A1 A6 9F 
17157     9A A7 B0 BF 
1715b     CC C3 EF 06 
1715f     0B 13 17 20 | 	byte	$a0, $a1, $a6, $9f, $9a, $a7, $b0, $bf, $cc, $c3, $ef, $06, $0b, $13, $17, $20
17163     0A 11 05 1F 
17167     1C 00 F6 F9 
1716b     FD 09 EC F5 
1716f     08 EA F7 17 | 	byte	$0a, $11, $05, $1f, $1c, $00, $f6, $f9, $fd, $09, $ec, $f5, $08, $ea, $f7, $17
17173     30 1C 0F 1F 
17177     39 2D 33 36 
1717b     4F 40 37 34 
1717f     3B 30 04 09 | 	byte	$30, $1c, $0f, $1f, $39, $2d, $33, $36, $4f, $40, $37, $34, $3b, $30, $04, $09
17183     0C 08 04 F2 
17187     D8 C8 B0 A9 
1718b     A8 A3 AE 98 
1718f     9F AB BF B3 | 	byte	$0c, $08, $04, $f2, $d8, $c8, $b0, $a9, $a8, $a3, $ae, $98, $9f, $ab, $bf, $b3
17193     BF D9 F7 02 
17197     0B 0F 2F 20 
1719b     08 17 12 2B 
1719f     20 F7 FF 0B | 	byte	$bf, $d9, $f7, $02, $0b, $0f, $2f, $20, $08, $17, $12, $2b, $20, $f7, $ff, $0b
171a3     FA F3 01 02 
171a7     E8 E7 0F 13 
171ab     1A 0F 27 20 
171af     27 29 3B 4A | 	byte	$fa, $f3, $01, $02, $e8, $e7, $0f, $13, $1a, $0f, $27, $20, $27, $29, $3b, $4a
171b3     42 3C 3F 48 
171b7     36 38 10 1B 
171bb     12 19 10 FA 
171bf     F0 D8 B8 B3 | 	byte	$42, $3c, $3f, $48, $36, $38, $10, $1b, $12, $19, $10, $fa, $f0, $d8, $b8, $b3
171c3     B9 B0 A8 A1 
171c7     AD AE BF AA 
171cb     BF EC E7 F7 
171cf     0F 22 2F 12 | 	byte	$b9, $b0, $a8, $a1, $ad, $ae, $bf, $aa, $bf, $ec, $e7, $f7, $0f, $22, $2f, $12
171d3     07 2B 23 20 
171d7     0B 17 04 F7 
171db     00 06 04 E7 
171df     E3 FD 08 FF | 	byte	$07, $2b, $23, $20, $0b, $17, $04, $f7, $00, $06, $04, $e7, $e3, $fd, $08, $ff
171e3     0D 0F 23 08 
171e7     1B 2E 2D 38 
171eb     31 32 37 36 
171ef     34 28 0A 17 | 	byte	$0d, $0f, $23, $08, $1b, $2e, $2d, $38, $31, $32, $37, $36, $34, $28, $0a, $17
171f3     16 13 08 0A 
171f7     E8 C7 C8 B4 
171fb     B7 A5 9C AD 
171ff     B0 9B AD AB | 	byte	$16, $13, $08, $0a, $e8, $c7, $c8, $b4, $b7, $a5, $9c, $ad, $b0, $9b, $ad, $ab
17203     CB D8 CF F3 
17207     17 24 01 13 
1720b     1B 1E 16 20 
1720f     15 14 F0 0B | 	byte	$cb, $d8, $cf, $f3, $17, $24, $01, $13, $1b, $1e, $16, $20, $15, $14, $f0, $0b
17213     10 06 00 DF 
17217     F9 F8 F3 FF 
1721b     15 11 13 04 
1721f     1B 24 2F 30 | 	byte	$10, $06, $00, $df, $f9, $f8, $f3, $ff, $15, $11, $13, $04, $1b, $24, $2f, $30
17223     23 34 3A 3C 
17227     20 23 20 0B 
1722b     0F 1E 0D 08 
1722f     E0 CF E0 B8 | 	byte	$23, $34, $3a, $3c, $20, $23, $20, $0b, $0f, $1e, $0d, $08, $e0, $cf, $e0, $b8
17233     AF A4 AF AE 
17237     A8 96 AB C3 
1723b     C0 AF DF FF 
1723f     0A 0F 03 25 | 	byte	$af, $a4, $af, $ae, $a8, $96, $ab, $c3, $c0, $af, $df, $ff, $0a, $0f, $03, $25
17243     0C 17 22 1F 
17247     18 03 FF 15 
1724b     10 00 F8 F0 
1724f     F9 F0 F7 05 | 	byte	$0c, $17, $22, $1f, $18, $03, $ff, $15, $10, $00, $f8, $f0, $f9, $f0, $f7, $05
17253     17 10 0E 0A 
17257     1D 36 28 19 
1725b     37 44 2F 3E 
1725f     26 2F 20 09 | 	byte	$17, $10, $0e, $0a, $1d, $36, $28, $19, $37, $44, $2f, $3e, $26, $2f, $20, $09
17263     1B 32 18 02 
17267     F0 F4 E8 C0 
1726b     AE BD D0 A0 
1726f     9F AF BB B4 | 	byte	$1b, $32, $18, $02, $f0, $f4, $e8, $c0, $ae, $bd, $d0, $a0, $9f, $af, $bb, $b4
17273     AA C7 E9 ED 
17277     07 0C 0D 15 
1727b     07 17 2B 22 
1727f     06 FF 13 13 | 	byte	$aa, $c7, $e9, $ed, $07, $0c, $0d, $15, $07, $17, $2b, $22, $06, $ff, $13, $13
17283     08 FF 01 F4 
17287     F0 EE F9 03 
1728b     1F 08 FD 1F 
1728f     20 27 20 1D | 	byte	$08, $ff, $01, $f4, $f0, $ee, $f9, $03, $1f, $08, $fd, $1f, $20, $27, $20, $1d
17293     36 38 2C 33 
17297     38 20 0D 0E 
1729b     1F 29 14 EE 
1729f     0F 00 C8 BC | 	byte	$36, $38, $2c, $33, $38, $20, $0d, $0e, $1f, $29, $14, $ee, $0f, $00, $c8, $bc
172a3     C9 C4 B0 95 
172a7     AD B0 A7 A9 
172ab     AB BF D3 E7 
172af     F7 0F 04 FF | 	byte	$c9, $c4, $b0, $95, $ad, $b0, $a7, $a9, $ab, $bf, $d3, $e7, $f7, $0f, $04, $ff
172b3     06 1F 24 0F 
172b7     04 07 10 01 
172bb     10 00 FF FA 
172bf     E0 DF FF 0C | 	byte	$06, $1f, $24, $0f, $04, $07, $10, $01, $10, $00, $ff, $fa, $e0, $df, $ff, $0c
172c3     02 03 06 1F 
172c7     19 1E 27 32 
172cb     23 3E 33 44 
172cf     38 14 07 35 | 	byte	$02, $03, $06, $1f, $19, $1e, $27, $32, $23, $3e, $33, $44, $38, $14, $07, $35
172d3     24 0B 1B 17 
172d7     18 E0 D7 E8 
172db     D6 B4 AC AF 
172df     A7 B1 A6 AD | 	byte	$24, $0b, $1b, $17, $18, $e0, $d7, $e8, $d6, $b4, $ac, $af, $a7, $b1, $a6, $ad
172e3     A9 BB C1 EF 
172e7     06 00 F0 FF 
172eb     1A 12 16 14 
172ef     06 05 0D F9 | 	byte	$a9, $bb, $c1, $ef, $06, $00, $f0, $ff, $1a, $12, $16, $14, $06, $05, $0d, $f9
172f3     07 0D F8 E5 
172f7     E0 E3 0D F0 
172fb     F3 06 0E 05 
172ff     1A 1D 26 28 | 	byte	$07, $0d, $f8, $e5, $e0, $e3, $0d, $f0, $f3, $06, $0e, $05, $1a, $1d, $26, $28
17303     16 37 58 38 
17307     24 1F 2F 22 
1730b     10 1F 35 14 
1730f     FA F6 F0 E8 | 	byte	$16, $37, $58, $38, $24, $1f, $2f, $22, $10, $1f, $35, $14, $fa, $f6, $f0, $e8
17313     C6 BC AD B8 
17317     A9 A7 AC AF 
1731b     A2 AB D7 F9 
1731f     EC F3 FE 03 | 	byte	$c6, $bc, $ad, $b8, $a9, $a7, $ac, $af, $a2, $ab, $d7, $f9, $ec, $f3, $fe, $03
17323     1B 1C 0E 1E 
17327     0A 0F 00 05 
1732b     25 10 E2 E7 
1732f     FD F6 F7 FA | 	byte	$1b, $1c, $0e, $1e, $0a, $0f, $00, $05, $25, $10, $e2, $e7, $fd, $f6, $f7, $fa
17333     F7 17 02 07 
17337     2E 2C 18 17 
1733b     3F 51 48 2B 
1733f     3F 30 24 15 | 	byte	$f7, $17, $02, $07, $2e, $2c, $18, $17, $3f, $51, $48, $2b, $3f, $30, $24, $15
17343     2F 30 23 18 
17347     05 FF 04 E2 
1734b     C8 C2 BC AC 
1734f     A9 B7 B4 96 | 	byte	$2f, $30, $23, $18, $05, $ff, $04, $e2, $c8, $c2, $bc, $ac, $a9, $b7, $b4, $96
17353     A7 AF CF F1 
17357     E4 EF F7 0F 
1735b     1C 12 17 27 
1735f     18 F7 17 2A | 	byte	$a7, $af, $cf, $f1, $e4, $ef, $f7, $0f, $1c, $12, $17, $27, $18, $f7, $17, $2a
17363     10 0E F0 FB 
17367     FC F2 EB 07 
1736b     00 F8 FD 1B 
1736f     2A 10 0F 27 | 	byte	$10, $0e, $f0, $fb, $fc, $f2, $eb, $07, $00, $f8, $fd, $1b, $2a, $10, $0f, $27
17373     43 40 3B 46 
17377     31 2C 20 25 
1737b     2A 36 1C 16 
1737f     0D 14 00 E3 | 	byte	$43, $40, $3b, $46, $31, $2c, $20, $25, $2a, $36, $1c, $16, $0d, $14, $00, $e3
17383     E4 C0 B7 B8 
17387     B5 B2 A2 9C 
1738b     9B AF CF D9 
1738f     D6 DF 0F 00 | 	byte	$e4, $c0, $b7, $b8, $b5, $b2, $a2, $9c, $9b, $af, $cf, $d9, $d6, $df, $0f, $00
17393     FF 24 20 13 
17397     08 0C 1F 26 
1739b     08 09 05 FC 
1739f     F0 F7 FA FA | 	byte	$ff, $24, $20, $13, $08, $0c, $1f, $26, $08, $09, $05, $fc, $f0, $f7, $fa, $fa
173a3     F4 EF 17 1C 
173a7     0A 0D 17 1F 
173ab     33 42 3A 3B 
173af     30 27 16 2B | 	byte	$f4, $ef, $17, $1c, $0a, $0d, $17, $1f, $33, $42, $3a, $3b, $30, $27, $16, $2b
173b3     30 18 20 12 
173b7     0A 0C F8 EA 
173bb     CE C6 B0 B6 
173bf     B6 B7 A0 83 | 	byte	$30, $18, $20, $12, $0a, $0c, $f8, $ea, $ce, $c6, $b0, $b6, $b6, $b7, $a0, $83
173c3     9F B8 AA BF 
173c7     D7 E3 D7 E7 
173cb     FF 16 00 F6 
173cf     FF 18 0C 07 | 	byte	$9f, $b8, $aa, $bf, $d7, $e3, $d7, $e7, $ff, $16, $00, $f6, $ff, $18, $0c, $07
173d3     13 0E 02 E8 
173d7     F3 08 F4 DC 
173db     EF 05 07 15 
173df     09 10 17 2C | 	byte	$13, $0e, $02, $e8, $f3, $08, $f4, $dc, $ef, $05, $07, $15, $09, $10, $17, $2c
173e3     2D 3F 4E 3A 
173e7     30 2B 2C 2E 
173eb     32 32 20 27 
173ef     1C 1A 10 03 | 	byte	$2d, $3f, $4e, $3a, $30, $2b, $2c, $2e, $32, $32, $20, $27, $1c, $1a, $10, $03
173f3     F8 C0 BF DF 
173f7     D4 A0 A2 AE 
173fb     AE A7 BB D9 
173ff     E0 D8 DE FF | 	byte	$f8, $c0, $bf, $df, $d4, $a0, $a2, $ae, $ae, $a7, $bb, $d9, $e0, $d8, $de, $ff
17403     1A 0C 08 06 
17407     17 18 0F 17 
1740b     2F 14 EF 06 
1740f     0A 04 EC EC | 	byte	$1a, $0c, $08, $06, $17, $18, $0f, $17, $2f, $14, $ef, $06, $0a, $04, $ec, $ec
17413     ED 07 0A 05 
17417     0D 10 11 1B 
1741b     37 48 41 40 
1741f     28 31 30 36 | 	byte	$ed, $07, $0a, $05, $0d, $10, $11, $1b, $37, $48, $41, $40, $28, $31, $30, $36
17423     36 24 33 28 
17427     16 17 31 08 
1742b     C9 CF E7 D0 
1742f     AC AF A6 A0 | 	byte	$36, $24, $33, $28, $16, $17, $31, $08, $c9, $cf, $e7, $d0, $ac, $af, $a6, $a0
17433     94 A7 C6 BF 
17437     C4 CB E6 FB 
1743b     08 ED 0B 10 
1743f     00 FD 1F 22 | 	byte	$94, $a7, $c6, $bf, $c4, $cb, $e6, $fb, $08, $ed, $0b, $10, $00, $fd, $1f, $22
17443     14 00 FF 09 
17447     08 F0 E7 E4 
1744b     F9 F6 FF 06 
1744f     FB 0C 04 1F | 	byte	$14, $00, $ff, $09, $08, $f0, $e7, $e4, $f9, $f6, $ff, $06, $fb, $0c, $04, $1f
17453     33 3F 43 34 
17457     29 33 30 20 
1745b     33 40 1C 0A 
1745f     27 40 06 F4 | 	byte	$33, $3f, $43, $34, $29, $33, $30, $20, $33, $40, $1c, $0a, $27, $40, $06, $f4
17463     D8 EC D0 C0 
17467     B7 B8 98 95 
1746b     9A A7 B9 B6 
1746f     B3 CF E5 E0 | 	byte	$d8, $ec, $d0, $c0, $b7, $b8, $98, $95, $9a, $a7, $b9, $b6, $b3, $cf, $e5, $e0
17473     F7 00 FE F1 
17477     F7 0F 19 18 
1747b     10 FA 0F 08 
1747f     FA F4 E1 ED | 	byte	$f7, $00, $fe, $f1, $f7, $0f, $19, $18, $10, $fa, $0f, $08, $fa, $f4, $e1, $ed
17483     F0 F5 F8 F5 
17487     FA F9 FE 17 
1748b     38 30 2B 33 
1748f     34 18 1F 3B | 	byte	$f0, $f5, $f8, $f5, $fa, $f9, $fe, $17, $38, $30, $2b, $33, $34, $18, $1f, $3b
17493     38 18 17 33 
17497     36 20 0F 0C 
1749b     EC E8 DC D8 
1749f     B8 BB A0 9D | 	byte	$38, $18, $17, $33, $36, $20, $0f, $0c, $ec, $e8, $dc, $d8, $b8, $bb, $a0, $9d
174a3     AF AE AE BB 
174a7     CA D2 D7 F7 
174ab     00 FF 00 F1 
174af     07 20 1B 1C | 	byte	$af, $ae, $ae, $bb, $ca, $d2, $d7, $f7, $00, $ff, $00, $f1, $07, $20, $1b, $1c
174b3     0B 1A 1D 18 
174b7     02 05 F8 FE 
174bb     00 03 02 05 
174bf     00 F3 1F 26 | 	byte	$0b, $1a, $1d, $18, $02, $05, $f8, $fe, $00, $03, $02, $05, $00, $f3, $1f, $26
174c3     24 35 4C 32 
174c7     1A 27 4C 30 
174cb     1C 1F 33 32 
174cf     28 2E 18 0C | 	byte	$24, $35, $4c, $32, $1a, $27, $4c, $30, $1c, $1f, $33, $32, $28, $2e, $18, $0c
174d3     F8 EC EE E0 
174d7     C0 B0 A6 AE 
174db     A0 AB B6 B3 
174df     C5 C2 DB F6 | 	byte	$f8, $ec, $ee, $e0, $c0, $b0, $a6, $ae, $a0, $ab, $b6, $b3, $c5, $c2, $db, $f6
174e3     F8 EE EE F7 
174e7     0F 18 07 12 
174eb     0F 1A 0C 18 
174ef     00 07 00 EC | 	byte	$f8, $ee, $ee, $f7, $0f, $18, $07, $12, $0f, $1a, $0c, $18, $00, $07, $00, $ec
174f3     F7 13 00 ED 
174f7     FB 0F 08 0D 
174fb     3F 44 30 1D 
174ff     33 3F 28 22 | 	byte	$f7, $13, $00, $ed, $fb, $0f, $08, $0d, $3f, $44, $30, $1d, $33, $3f, $28, $22
17503     27 20 2B 2A 
17507     2E 22 1B 0C 
1750b     EF 03 F4 D7 
1750f     C8 B2 AE A9 | 	byte	$27, $20, $2b, $2a, $2e, $22, $1b, $0c, $ef, $03, $f4, $d7, $c8, $b2, $ae, $a9
17513     A8 AB BD B0 
17517     BF BF E7 F6 
1751b     F0 E4 F3 03 
1751f     01 0E 0C 06 | 	byte	$a8, $ab, $bd, $b0, $bf, $bf, $e7, $f6, $f0, $e4, $f3, $03, $01, $0e, $0c, $06
17523     17 10 04 0F 
17527     0C 00 E4 FB 
1752b     0C F0 EB FF 
1752f     00 EA FF 1F | 	byte	$17, $10, $04, $0f, $0c, $00, $e4, $fb, $0c, $f0, $eb, $ff, $00, $ea, $ff, $1f
17533     38 24 28 2F 
17537     32 29 2F 28 
1753b     13 27 20 2A 
1753f     30 20 0B 0E | 	byte	$38, $24, $28, $2f, $32, $29, $2f, $28, $13, $27, $20, $2a, $30, $20, $0b, $0e
17543     F8 FF F2 D3 
17547     C8 B6 A8 A1 
1754b     A6 A9 AF A8 
1754f     AF CF DF E6 | 	byte	$f8, $ff, $f2, $d3, $c8, $b6, $a8, $a1, $a6, $a9, $af, $a8, $af, $cf, $df, $e6
17553     EB E4 F3 02 
17557     00 04 03 14 
1755b     08 03 17 18 
1755f     F0 FD 02 FE | 	byte	$eb, $e4, $f3, $02, $00, $04, $03, $14, $08, $03, $17, $18, $f0, $fd, $02, $fe
17563     F0 F5 05 F8 
17567     E0 EF 1B 19 
1756b     1D 35 30 2F 
1756f     3B 32 33 34 | 	byte	$f0, $f5, $05, $f8, $e0, $ef, $1b, $19, $1d, $35, $30, $2f, $3b, $32, $33, $34
17573     18 2B 32 31 
17577     30 23 1A 15 
1757b     08 FC 04 E8 
1757f     D2 C0 B0 AD | 	byte	$18, $2b, $32, $31, $30, $23, $1a, $15, $08, $fc, $04, $e8, $d2, $c0, $b0, $ad
17583     B0 A4 A9 AB 
17587     B7 CB DF EA 
1758b     EB EB 07 08 
1758f     FD 1D 1A 07 | 	byte	$b0, $a4, $a9, $ab, $b7, $cb, $df, $ea, $eb, $eb, $07, $08, $fd, $1d, $1a, $07
17593     13 23 20 0A 
17597     09 11 0A E9 
1759b     FF 0D F8 DF 
1759f     F7 F4 FF 16 | 	byte	$13, $23, $20, $0a, $09, $11, $0a, $e9, $ff, $0d, $f8, $df, $f7, $f4, $ff, $16
175a3     19 2F 2A 2B 
175a7     3B 40 2A 32 
175ab     22 27 38 36 
175af     28 2C 20 1B | 	byte	$19, $2f, $2a, $2b, $3b, $40, $2a, $32, $22, $27, $38, $36, $28, $2c, $20, $1b
175b3     0A 07 04 F0 
175b7     D0 B8 B4 B0 
175bb     A9 9E A5 A6 
175bf     A5 CF CE D3 | 	byte	$0a, $07, $04, $f0, $d0, $b8, $b4, $b0, $a9, $9e, $a5, $a6, $a5, $cf, $ce, $d3
175c3     EF F4 F1 FF 
175c7     11 13 10 0F 
175cb     27 28 10 13 
175cf     2E 08 FD 0F | 	byte	$ef, $f4, $f1, $ff, $11, $13, $10, $0f, $27, $28, $10, $13, $2e, $08, $fd, $0f
175d3     0F 04 EC E6 
175d7     F1 EE F3 13 
175db     10 13 23 20 
175df     2F 30 24 22 | 	byte	$0f, $04, $ec, $e6, $f1, $ee, $f3, $13, $10, $13, $23, $20, $2f, $30, $24, $22
175e3     14 1F 25 24 
175e7     21 1A 18 04 
175eb     08 06 08 E0 
175ef     CA C6 AE AC | 	byte	$14, $1f, $25, $24, $21, $1a, $18, $04, $08, $06, $08, $e0, $ca, $c6, $ae, $ac
175f3     A8 98 93 A7 
175f7     A2 AF C1 D1 
175fb     D9 DB E7 FF 
175ff     04 EF 0F 18 | 	byte	$a8, $98, $93, $a7, $a2, $af, $c1, $d1, $d9, $db, $e7, $ff, $04, $ef, $0f, $18
17603     0C 0F 1F 18 
17607     12 04 0B 1C 
1760b     02 01 00 E5 
1760f     ED F0 FD 0D | 	byte	$0c, $0f, $1f, $18, $12, $04, $0b, $1c, $02, $01, $00, $e5, $ed, $f0, $fd, $0d
17613     07 1C 16 27 
17617     2D 2E 24 19 
1761b     24 1C 23 23 
1761f     27 22 0D 16 | 	byte	$07, $1c, $16, $27, $2d, $2e, $24, $19, $24, $1c, $23, $23, $27, $22, $0d, $16
17623     19 10 07 00 
17627     DA D3 CC C0 
1762b     AC AA A7 A9 
1762f     AA B7 D7 CD | 	byte	$19, $10, $07, $00, $da, $d3, $cc, $c0, $ac, $aa, $a7, $a9, $aa, $b7, $d7, $cd
17633     CE EF 02 F2 
17637     FF 0D 17 11 
1763b     0B 25 28 10 
1763f     17 19 17 18 | 	byte	$ce, $ef, $02, $f2, $ff, $0d, $17, $11, $0b, $25, $28, $10, $17, $19, $17, $18
17643     13 12 F8 F4 
17647     F2 F3 06 07 
1764b     18 0D 23 2D 
1764f     34 2A 29 30 | 	byte	$13, $12, $f8, $f4, $f2, $f3, $06, $07, $18, $0d, $23, $2d, $34, $2a, $29, $30
17653     26 19 2B 34 
17657     20 1E 18 17 
1765b     17 20 0A 00 
1765f     F0 E2 D2 BC | 	byte	$26, $19, $2b, $34, $20, $1e, $18, $17, $17, $20, $0a, $00, $f0, $e2, $d2, $bc
17663     B5 B7 A8 9E 
17667     B7 C0 BB C7 
1766b     DB EF EC EB 
1766f     0F 0A 02 0D | 	byte	$b5, $b7, $a8, $9e, $b7, $c0, $bb, $c7, $db, $ef, $ec, $eb, $0f, $0a, $02, $0d
17673     17 24 0A 19 
17677     0C 1B 14 17 
1767b     18 09 02 F3 
1767f     F5 F8 0F 03 | 	byte	$17, $24, $0a, $19, $0c, $1b, $14, $17, $18, $09, $02, $f3, $f5, $f8, $0f, $03
17683     07 13 2B 1C 
17687     2B 30 28 1C 
1768b     1F 20 1B 28 
1768f     14 0C 06 17 | 	byte	$07, $13, $2b, $1c, $2b, $30, $28, $1c, $1f, $20, $1b, $28, $14, $0c, $06, $17
17693     08 07 00 FB 
17697     E8 C8 C1 C0 
1769b     AC 9C 9C A7 
1769f     B1 A3 BB C6 | 	byte	$08, $07, $00, $fb, $e8, $c8, $c1, $c0, $ac, $9c, $9c, $a7, $b1, $a3, $bb, $c6
176a3     D7 D6 DF 00 
176a7     FB 08 FF 17 
176ab     20 18 0C 13 
176af     10 15 18 13 | 	byte	$d7, $d6, $df, $00, $fb, $08, $ff, $17, $20, $18, $0c, $13, $10, $15, $18, $13
176b3     14 07 F0 E5 
176b7     FF FC F7 FD 
176bb     17 18 1B 2B 
176bf     34 2C 2F 30 | 	byte	$14, $07, $f0, $e5, $ff, $fc, $f7, $fd, $17, $18, $1b, $2b, $34, $2c, $2f, $30
176c3     1F 30 30 2B 
176c7     14 1F 28 20 
176cb     0C 1B 1A 02 
176cf     E8 D7 E0 B4 | 	byte	$1f, $30, $30, $2b, $14, $1f, $28, $20, $0c, $1b, $1a, $02, $e8, $d7, $e0, $b4
176d3     AE A2 AF A8 
176d7     9F B4 B7 CB 
176db     CD D9 EF 00 
176df     F1 07 10 1F | 	byte	$ae, $a2, $af, $a8, $9f, $b4, $b7, $cb, $cd, $d9, $ef, $00, $f1, $07, $10, $1f
176e3     1C 18 04 17 
176e7     20 0D 1E 1F 
176eb     18 F4 F4 F6 
176ef     F4 E7 FA F7 | 	byte	$1c, $18, $04, $17, $20, $0d, $1e, $1f, $18, $f4, $f4, $f6, $f4, $e7, $fa, $f7
176f3     07 0E 17 20 
176f7     29 2C 22 22 
176fb     27 38 1B 1E 
176ff     1B 27 18 0F | 	byte	$07, $0e, $17, $20, $29, $2c, $22, $22, $27, $38, $1b, $1e, $1b, $27, $18, $0f
17703     20 1F 18 F4 
17707     F9 F0 D0 B4 
1770b     B2 AD AD A0 
1770f     A3 B5 B4 B5 | 	byte	$20, $1f, $18, $f4, $f9, $f0, $d0, $b4, $b2, $ad, $ad, $a0, $a3, $b5, $b4, $b5
17713     CF DE DE F3 
17717     E8 FF 18 12 
1771b     11 12 12 10 
1771f     0D 1F 30 1A | 	byte	$cf, $de, $de, $f3, $e8, $ff, $18, $12, $11, $12, $12, $10, $0d, $1f, $30, $1a
17723     13 04 03 F5 
17727     F8 EE F7 03 
1772b     0D 0E 0F 33 
1772f     24 23 20 2F | 	byte	$13, $04, $03, $f5, $f8, $ee, $f7, $03, $0d, $0e, $0f, $33, $24, $23, $20, $2f
17733     30 25 20 21 
17737     24 19 16 1E 
1773b     24 16 10 08 
1773f     03 E8 C8 BF | 	byte	$30, $25, $20, $21, $24, $19, $16, $1e, $24, $16, $10, $08, $03, $e8, $c8, $bf
17743     C8 A8 9F AE 
17747     A6 AF AF BA 
1774b     CF DC D9 E7 
1774f     EF 0D 08 15 | 	byte	$c8, $a8, $9f, $ae, $a6, $af, $af, $ba, $cf, $dc, $d9, $e7, $ef, $0d, $08, $15
17753     14 11 06 0D 
17757     1F 23 25 1D 
1775b     1D 06 03 F8 
1775f     EB F1 F8 FD | 	byte	$14, $11, $06, $0d, $1f, $23, $25, $1d, $1d, $06, $03, $f8, $eb, $f1, $f8, $fd
17763     FB 0F 1C 1C 
17767     13 1B 2A 28 
1776b     1A 17 21 18 
1776f     0E 0F 11 17 | 	byte	$fb, $0f, $1c, $1c, $13, $1b, $2a, $28, $1a, $17, $21, $18, $0e, $0f, $11, $17
17773     18 01 1F 14 
17777     F0 EB E0 C2 
1777b     B7 A8 A7 A7 
1777f     A0 A3 A7 BF | 	byte	$18, $01, $1f, $14, $f0, $eb, $e0, $c2, $b7, $a8, $a7, $a7, $a0, $a3, $a7, $bf
17783     C9 C7 CF E6 
17787     F3 FB 07 12 
1778b     0A FC 07 10 
1778f     17 26 1D 24 | 	byte	$c9, $c7, $cf, $e6, $f3, $fb, $07, $12, $0a, $fc, $07, $10, $17, $26, $1d, $24
17793     1C 18 00 F8 
17797     F7 FE F3 F8 
1779b     0B 19 18 11 
1779f     1B 33 21 29 | 	byte	$1c, $18, $00, $f8, $f7, $fe, $f3, $f8, $0b, $19, $18, $11, $1b, $33, $21, $29
177a3     24 23 2C 0C 
177a7     07 1F 14 FF 
177ab     0F 1B 16 08 
177af     FB F4 DC D0 | 	byte	$24, $23, $2c, $0c, $07, $1f, $14, $ff, $0f, $1b, $16, $08, $fb, $f4, $dc, $d0
177b3     B6 B6 AF B0 
177b7     A1 A3 B3 BF 
177bb     C4 C5 DD E2 
177bf     EF 03 0F 12 | 	byte	$b6, $b6, $af, $b0, $a1, $a3, $b3, $bf, $c4, $c5, $dd, $e2, $ef, $03, $0f, $12
177c3     0D 00 07 17 
177c7     21 24 21 2F 
177cb     34 18 0B 0B 
177cf     0B 00 F1 0F | 	byte	$0d, $00, $07, $17, $21, $24, $21, $2f, $34, $18, $0b, $0b, $0b, $00, $f1, $0f
177d3     18 17 1E 10 
177d7     2B 38 26 27 
177db     3A 30 18 1B 
177df     1E 14 08 07 | 	byte	$18, $17, $1e, $10, $2b, $38, $26, $27, $3a, $30, $18, $1b, $1e, $14, $08, $07
177e3     0D 17 14 0E 
177e7     00 FA E2 CE 
177eb     C0 BF BA A7 
177ef     A4 AF B6 BF | 	byte	$0d, $17, $14, $0e, $00, $fa, $e2, $ce, $c0, $bf, $ba, $a7, $a4, $af, $b6, $bf
177f3     C8 C3 D9 ED 
177f7     F3 07 13 1A 
177fb     04 FD 16 18 
177ff     13 1E 27 38 | 	byte	$c8, $c3, $d9, $ed, $f3, $07, $13, $1a, $04, $fd, $16, $18, $13, $1e, $27, $38
17803     20 17 1C 04 
17807     FF F8 F5 06 
1780b     0F 04 05 1A 
1780f     17 19 23 2C | 	byte	$20, $17, $1c, $04, $ff, $f8, $f5, $06, $0f, $04, $05, $1a, $17, $19, $23, $2c
17813     28 20 17 1A 
17817     13 0E FE 00 
1781b     09 10 0E 05 
1781f     0C 02 E2 CE | 	byte	$28, $20, $17, $1a, $13, $0e, $fe, $00, $09, $10, $0e, $05, $0c, $02, $e2, $ce
17823     D5 BC B9 A8 
17827     A6 AF B3 BA 
1782b     B7 BF D7 D0 
1782f     EF 0B 0A 00 | 	byte	$d5, $bc, $b9, $a8, $a6, $af, $b3, $ba, $b7, $bf, $d7, $d0, $ef, $0b, $0a, $00
17833     F9 07 0C F7 
17837     0F 1E 1E 20 
1783b     21 14 16 10 
1783f     F0 EF 0C 00 | 	byte	$f9, $07, $0c, $f7, $0f, $1e, $1e, $20, $21, $14, $16, $10, $f0, $ef, $0c, $00
17843     03 09 12 0A 
17847     13 24 2B 30 
1784b     28 24 20 23 
1784f     11 0C F9 0F | 	byte	$03, $09, $12, $0a, $13, $24, $2b, $30, $28, $24, $20, $23, $11, $0c, $f9, $0f
17853     08 FC 0F 18 
17857     08 F4 E0 E7 
1785b     D0 C4 B2 A8 
1785f     B9 B2 AB BF | 	byte	$08, $fc, $0f, $18, $08, $f4, $e0, $e7, $d0, $c4, $b2, $a8, $b9, $b2, $ab, $bf
17863     C2 C0 C3 DF 
17867     07 04 FF 12 
1786b     12 02 0B 13 
1786f     13 2B 2A 1D | 	byte	$c2, $c0, $c3, $df, $07, $04, $ff, $12, $12, $02, $0b, $13, $13, $2b, $2a, $1d
17873     32 30 18 F8 
17877     05 06 02 FD 
1787b     0F 13 13 04 
1787f     1F 2E 34 37 | 	byte	$32, $30, $18, $f8, $05, $06, $02, $fd, $0f, $13, $13, $04, $1f, $2e, $34, $37
17883     2A 2F 41 22 
17887     12 16 16 0C 
1788b     FE 17 20 16 
1788f     0A F1 FA F2 | 	byte	$2a, $2f, $41, $22, $12, $16, $16, $0c, $fe, $17, $20, $16, $0a, $f1, $fa, $f2
17893     CC BA BC B3 
17897     A8 A3 BF C0 
1789b     A9 A7 CF E4 
1789f     DF FF 00 07 | 	byte	$cc, $ba, $bc, $b3, $a8, $a3, $bf, $c0, $a9, $a7, $cf, $e4, $df, $ff, $00, $07
178a3     04 01 FE 0B 
178a7     15 14 13 27 
178ab     2C 21 14 00 
178af     03 00 F5 03 | 	byte	$04, $01, $fe, $0b, $15, $14, $13, $27, $2c, $21, $14, $00, $03, $00, $f5, $03
178b3     06 08 FC FB 
178b7     1F 2D 24 22 
178bb     37 40 24 1B 
178bf     23 14 08 00 | 	byte	$06, $08, $fc, $fb, $1f, $2d, $24, $22, $37, $40, $24, $1b, $23, $14, $08, $00
178c3     03 1F 20 0A 
178c7     FC FF 04 DC 
178cb     D0 C2 C2 A0 
178cf     A7 BB AA A6 | 	byte	$03, $1f, $20, $0a, $fc, $ff, $04, $dc, $d0, $c2, $c2, $a0, $a7, $bb, $aa, $a6
178d3     A4 A7 BB D2 
178d7     DF ED F3 02 
178db     F0 F1 FF 06 
178df     02 01 17 2B | 	byte	$a4, $a7, $bb, $d2, $df, $ed, $f3, $02, $f0, $f1, $ff, $06, $02, $01, $17, $2b
178e3     22 1F 14 06 
178e7     07 FA FF 09 
178eb     12 FA F5 1D 
178ef     28 18 2B 34 | 	byte	$22, $1f, $14, $06, $07, $fa, $ff, $09, $12, $fa, $f5, $1d, $28, $18, $2b, $34
178f3     31 3A 28 2D 
178f7     20 18 00 FF 
178fb     16 19 14 03 
178ff     13 00 EA F3 | 	byte	$31, $3a, $28, $2d, $20, $18, $00, $ff, $16, $19, $14, $03, $13, $00, $ea, $f3
17903     E4 C0 B7 B5 
17907     B6 AF B7 B0 
1790b     9B AB C7 D1 
1790f     E3 F6 FF 00 | 	byte	$e4, $c0, $b7, $b5, $b6, $af, $b7, $b0, $9b, $ab, $c7, $d1, $e3, $f6, $ff, $00
17913     F5 05 0B 08 
17917     07 13 27 29 
1791b     33 29 24 15 
1791f     00 FF 1F 02 | 	byte	$f5, $05, $0b, $08, $07, $13, $27, $29, $33, $29, $24, $15, $00, $ff, $1f, $02
17923     FC 00 06 0F 
17927     13 21 1F 2D 
1792b     30 2C 2D 29 
1792f     22 00 FF 13 | 	byte	$fc, $00, $06, $0f, $13, $21, $1f, $2d, $30, $2c, $2d, $29, $22, $00, $ff, $13
17933     0A 07 1D 11 
17937     08 01 0D 00 
1793b     D8 D4 C2 B6 
1793f     BC C0 B0 A6 | 	byte	$0a, $07, $1d, $11, $08, $01, $0d, $00, $d8, $d4, $c2, $b6, $bc, $c0, $b0, $a6
17943     A2 AF B8 C7 
17947     DF F2 EE EF 
1794b     FB FA FC FF 
1794f     FA 0F 20 12 | 	byte	$a2, $af, $b8, $c7, $df, $f2, $ee, $ef, $fb, $fa, $fc, $ff, $fa, $0f, $20, $12
17953     2F 38 14 08 
17957     0F 1C 08 06 
1795b     00 01 09 0D 
1795f     17 21 1F 2F | 	byte	$2f, $38, $14, $08, $0f, $1c, $08, $06, $00, $01, $09, $0d, $17, $21, $1f, $2f
17963     28 3B 44 2A 
17967     1A 11 1C 04 
1796b     07 1F 18 06 
1796f     13 10 07 0C | 	byte	$28, $3b, $44, $2a, $1a, $11, $1c, $04, $07, $1f, $18, $06, $13, $10, $07, $0c
17973     F0 D4 C7 C9 
17977     CA C0 AE AB 
1797b     AC A6 B5 D5 
1797f     D9 E3 F3 F0 | 	byte	$f0, $d4, $c7, $c9, $ca, $c0, $ae, $ab, $ac, $a6, $b5, $d5, $d9, $e3, $f3, $f0
17983     FF F8 ED FC 
17987     04 FD 05 27 
1798b     32 1A 0D 0B 
1798f     1E 12 03 00 | 	byte	$ff, $f8, $ed, $fc, $04, $fd, $05, $27, $32, $1a, $0d, $0b, $1e, $12, $03, $00
17993     F6 03 00 FD 
17997     17 11 0F 0F 
1799b     2F 3C 28 21 
1799f     1F 10 FF 10 | 	byte	$f6, $03, $00, $fd, $17, $11, $0f, $0f, $2f, $3c, $28, $21, $1f, $10, $ff, $10
179a3     03 0C 08 00 
179a7     FB 08 0A 00 
179ab     E4 C8 D3 D6 
179af     C0 BD C0 A3 | 	byte	$03, $0c, $08, $00, $fb, $08, $0a, $00, $e4, $c8, $d3, $d6, $c0, $bd, $c0, $a3
179b3     AF AB BB DB 
179b7     D9 DB F7 0B 
179bb     F8 FB 0B 00 
179bf     FD 05 1F 34 | 	byte	$af, $ab, $bb, $db, $d9, $db, $f7, $0b, $f8, $fb, $0b, $00, $fd, $05, $1f, $34
179c3     2C 26 10 13 
179c7     22 15 10 FD 
179cb     04 F6 FC 05 
179cf     13 F8 0B 27 | 	byte	$2c, $26, $10, $13, $22, $15, $10, $fd, $04, $f6, $fc, $05, $13, $f8, $0b, $27
179d3     23 2F 36 2A 
179d7     14 1A 0A 0F 
179db     08 0C 08 01 
179df     F7 17 18 FA | 	byte	$23, $2f, $36, $2a, $14, $1a, $0a, $0f, $08, $0c, $08, $01, $f7, $17, $18, $fa
179e3     EC D5 D5 DC 
179e7     C8 BA BC A8 
179eb     9F AF BD C1 
179ef     CF E4 EE F2 | 	byte	$ec, $d5, $d5, $dc, $c8, $ba, $bc, $a8, $9f, $af, $bd, $c1, $cf, $e4, $ee, $f2
179f3     F6 0C F9 FA 
179f7     F2 07 17 29 
179fb     28 1A 10 19 
179ff     24 10 1A 04 | 	byte	$f6, $0c, $f9, $fa, $f2, $07, $17, $29, $28, $1a, $10, $19, $24, $10, $1a, $04
17a03     F5 03 10 F8 
17a07     FE 0B 0F 1F 
17a0b     25 39 40 2C 
17a0f     1C 22 14 0F | 	byte	$f5, $03, $10, $f8, $fe, $0b, $0f, $1f, $25, $39, $40, $2c, $1c, $22, $14, $0f
17a13     20 0C 00 02 
17a17     09 1B 18 F8 
17a1b     EC E7 DC D5 
17a1f     D8 C2 B3 AE | 	byte	$20, $0c, $00, $02, $09, $1b, $18, $f8, $ec, $e7, $dc, $d5, $d8, $c2, $b3, $ae
17a23     B3 B0 AF CE 
17a27     DB E0 E3 FF 
17a2b     06 07 F8 F9 
17a2f     F4 FF 27 1C | 	byte	$b3, $b0, $af, $ce, $db, $e0, $e3, $ff, $06, $07, $f8, $f9, $f4, $ff, $27, $1c
17a33     20 17 15 0D 
17a37     29 18 FC FE 
17a3b     FF 00 F2 F0 
17a3f     F2 FE FC 07 | 	byte	$20, $17, $15, $0d, $29, $18, $fc, $fe, $ff, $00, $f2, $f0, $f2, $fe, $fc, $07
17a43     27 29 2F 30 
17a47     1A 14 0F 19 
17a4b     1A 06 F4 0B 
17a4f     16 0D 11 03 | 	byte	$27, $29, $2f, $30, $1a, $14, $0f, $19, $1a, $06, $f4, $0b, $16, $0d, $11, $03
17a53     F8 E0 EA E6 
17a57     D0 BC BF B8 
17a5b     A9 AB BB C8 
17a5f     C3 D9 DD EF | 	byte	$f8, $e0, $ea, $e6, $d0, $bc, $bf, $b8, $a9, $ab, $bb, $c8, $c3, $d9, $dd, $ef
17a63     FF 08 E8 E3 
17a67     FB 0A 0F 1D 
17a6b     15 0C 0F 20 
17a6f     16 10 04 08 | 	byte	$ff, $08, $e8, $e3, $fb, $0a, $0f, $1d, $15, $0c, $0f, $20, $16, $10, $04, $08
17a73     04 F2 F7 F8 
17a77     E9 F7 05 0C 
17a7b     1F 2F 37 32 
17a7f     14 17 2F 22 | 	byte	$04, $f2, $f7, $f8, $e9, $f7, $05, $0c, $1f, $2f, $37, $32, $14, $17, $2f, $22
17a83     0C 03 12 18 
17a87     17 1F 24 0C 
17a8b     00 FF FD EC 
17a8f     E0 D8 C4 BA | 	byte	$0c, $03, $12, $18, $17, $1f, $24, $0c, $00, $ff, $fd, $ec, $e0, $d8, $c4, $ba
17a93     B4 B3 B6 BF 
17a97     C9 BF D5 F5 
17a9b     F8 E4 E1 E4 
17a9f     E7 03 FD 0A | 	byte	$b4, $b3, $b6, $bf, $c9, $bf, $d5, $f5, $f8, $e4, $e1, $e4, $e7, $03, $fd, $0a
17aa3     03 0F 17 18 
17aa7     0D 1D 14 07 
17aab     06 08 FE F6 
17aaf     F5 07 08 0D | 	byte	$03, $0f, $17, $18, $0d, $1d, $14, $07, $06, $08, $fe, $f6, $f5, $07, $08, $0d
17ab3     2F 42 32 28 
17ab7     27 33 2A 26 
17abb     1C 12 0F 1E 
17abf     21 23 17 1C | 	byte	$2f, $42, $32, $28, $27, $33, $2a, $26, $1c, $12, $0f, $1e, $21, $23, $17, $1c
17ac3     06 00 FC F9 
17ac7     EC D3 CE C0 
17acb     B9 AF C9 BA 
17acf     BF C7 DF F6 | 	byte	$06, $00, $fc, $f9, $ec, $d3, $ce, $c0, $b9, $af, $c9, $ba, $bf, $c7, $df, $f6
17ad3     F4 E6 E3 E4 
17ad7     F3 03 00 FF 
17adb     0C 11 18 1A 
17adf     19 1C 10 0B | 	byte	$f4, $e6, $e3, $e4, $f3, $03, $00, $ff, $0c, $11, $18, $1a, $19, $1c, $10, $0b
17ae3     0C FC FB FC 
17ae7     F6 F0 FF 1F 
17aeb     30 2B 30 2A 
17aef     25 2A 2D 26 | 	byte	$0c, $fc, $fb, $fc, $f6, $f0, $ff, $1f, $30, $2b, $30, $2a, $25, $2a, $2d, $26
17af3     04 0E 15 19 
17af7     0C 17 18 10 
17afb     FC 03 01 EC 
17aff     EE E0 C1 B9 | 	byte	$04, $0e, $15, $19, $0c, $17, $18, $10, $fc, $03, $01, $ec, $ee, $e0, $c1, $b9
17b03     BB BC BD B0 
17b07     B7 CF E3 E9 
17b0b     EE E2 DF E5 
17b0f     ED FB F4 FF | 	byte	$bb, $bc, $bd, $b0, $b7, $cf, $e3, $e9, $ee, $e2, $df, $e5, $ed, $fb, $f4, $ff
17b13     07 0A 13 14 
17b17     13 19 18 06 
17b1b     04 03 0E F0 
17b1f     F2 F9 0F 1A | 	byte	$07, $0a, $13, $14, $13, $19, $18, $06, $04, $03, $0e, $f0, $f2, $f9, $0f, $1a
17b23     27 33 30 1C 
17b27     2F 31 26 18 
17b2b     14 14 08 09 
17b2f     1E 18 08 0F | 	byte	$27, $33, $30, $1c, $2f, $31, $26, $18, $14, $14, $08, $09, $1e, $18, $08, $0f
17b33     08 FC 00 FF 
17b37     F4 D4 C3 C3 
17b3b     CC B6 B9 B3 
17b3f     BF D5 DD EE | 	byte	$08, $fc, $00, $ff, $f4, $d4, $c3, $c3, $cc, $b6, $b9, $b3, $bf, $d5, $dd, $ee
17b43     EE E3 E2 E6 
17b47     E9 F9 F0 FA 
17b4b     03 0F 06 0B 
17b4f     1E 19 08 07 | 	byte	$ee, $e3, $e2, $e6, $e9, $f9, $f0, $fa, $03, $0f, $06, $0b, $1e, $19, $08, $07
17b53     0A 04 FA EE 
17b57     FC EF FF 1A 
17b5b     2B 26 23 31 
17b5f     36 24 27 30 | 	byte	$0a, $04, $fa, $ee, $fc, $ef, $ff, $1a, $2b, $26, $23, $31, $36, $24, $27, $30
17b63     10 06 0F 11 
17b67     0C 0A 08 0F 
17b6b     F8 EF 0B 00 
17b6f     E4 CC CB CE | 	byte	$10, $06, $0f, $11, $0c, $0a, $08, $0f, $f8, $ef, $0b, $00, $e4, $cc, $cb, $ce
17b73     C3 B4 BF B4 
17b77     BF D6 E3 EC 
17b7b     F1 E9 EC F0 
17b7f     F7 F3 FD 07 | 	byte	$c3, $b4, $bf, $b4, $bf, $d6, $e3, $ec, $f1, $e9, $ec, $f0, $f7, $f3, $fd, $07
17b83     00 05 0B 19 
17b87     14 03 11 0E 
17b8b     00 FD 02 F0 
17b8f     E4 EF 16 10 | 	byte	$00, $05, $0b, $19, $14, $03, $11, $0e, $00, $fd, $02, $f0, $e4, $ef, $16, $10
17b93     0F 2B 30 24 
17b97     2F 38 2E 28 
17b9b     13 1C 14 10 
17b9f     0F 1B 11 0C | 	byte	$0f, $2b, $30, $24, $2f, $38, $2e, $28, $13, $1c, $14, $10, $0f, $1b, $11, $0c
17ba3     00 0F 14 F0 
17ba7     E9 E5 D8 CF 
17bab     CC C3 C0 B5 
17baf     C7 D9 E7 E4 | 	byte	$00, $0f, $14, $f0, $e9, $e5, $d8, $cf, $cc, $c3, $c0, $b5, $c7, $d9, $e7, $e4
17bb3     E7 F4 EE EA 
17bb7     EF FB F9 FC 
17bbb     FB 0D 07 0B 
17bbf     0C 19 11 FB | 	byte	$e7, $f4, $ee, $ea, $ef, $fb, $f9, $fc, $fb, $0d, $07, $0b, $0c, $19, $11, $fb
17bc3     0B 10 F2 E1 
17bc7     F6 F4 FA 07 
17bcb     16 17 19 24 
17bcf     2E 2A 1C 23 | 	byte	$0b, $10, $f2, $e1, $f6, $f4, $fa, $07, $16, $17, $19, $24, $2e, $2a, $1c, $23
17bd3     16 13 06 07 
17bd7     18 14 FC 0B 
17bdb     10 0C 04 F9 
17bdf     F6 DA D9 D6 | 	byte	$16, $13, $06, $07, $18, $14, $fc, $0b, $10, $0c, $04, $f9, $f6, $da, $d9, $d6
17be3     D1 C0 B1 AF 
17be7     C7 CB CF DC 
17beb     E5 EC DB E7 
17bef     E9 F3 E8 EF | 	byte	$d1, $c0, $b1, $af, $c7, $cb, $cf, $dc, $e5, $ec, $db, $e7, $e9, $f3, $e8, $ef
17bf3     00 00 F9 0F 
17bf7     18 06 0B 0F 
17bfb     12 FA F8 EB 
17bff     F3 EC FB 09 | 	byte	$00, $00, $f9, $0f, $18, $06, $0b, $0f, $12, $fa, $f8, $eb, $f3, $ec, $fb, $09
17c03     0A 0F 1F 24 
17c07     2B 22 1F 30 
17c0b     12 07 0F 1C 
17c0f     0C 02 0F 13 | 	byte	$0a, $0f, $1f, $24, $2b, $22, $1f, $30, $12, $07, $0f, $1c, $0c, $02, $0f, $13
17c13     02 0D 08 F9 
17c17     F0 D6 E9 D8 
17c1b     CE B6 B6 BB 
17c1f     BA C2 CF E1 | 	byte	$02, $0d, $08, $f9, $f0, $d6, $e9, $d8, $ce, $b6, $b6, $bb, $ba, $c2, $cf, $e1
17c23     E0 DA DF F6 
17c27     E0 E5 F9 FF 
17c2b     F4 FB 15 10 
17c2f     13 0C 17 19 | 	byte	$e0, $da, $df, $f6, $e0, $e5, $f9, $ff, $f4, $fb, $15, $10, $13, $0c, $17, $19
17c33     10 0B 00 F1 
17c37     FD FC 07 10 
17c3b     0B 1E 2A 26 
17c3f     29 36 34 28 | 	byte	$10, $0b, $00, $f1, $fd, $fc, $07, $10, $0b, $1e, $2a, $26, $29, $36, $34, $28
17c43     17 26 14 14 
17c47     14 1B 18 06 
17c4b     1B 1E 12 F2 
17c4f     F5 F6 F0 E0 | 	byte	$17, $26, $14, $14, $14, $1b, $18, $06, $1b, $1e, $12, $f2, $f5, $f6, $f0, $e0
17c53     D7 CA CB C2 
17c57     B7 DB E0 DC 
17c5b     E1 F1 E2 DE 
17c5f     EE F3 F0 EB | 	byte	$d7, $ca, $cb, $c2, $b7, $db, $e0, $dc, $e1, $f1, $e2, $de, $ee, $f3, $f0, $eb
17c63     EF 05 08 0B 
17c67     14 0B 17 19 
17c6b     0F 08 00 F4 
17c6f     03 FC 03 0A | 	byte	$ef, $05, $08, $0b, $14, $0b, $17, $19, $0f, $08, $00, $f4, $03, $fc, $03, $0a
17c73     1D 24 13 35 
17c77     36 38 28 28 
17c7b     20 11 0C 13 
17c7f     10 00 FC 0B | 	byte	$1d, $24, $13, $35, $36, $38, $28, $28, $20, $11, $0c, $13, $10, $00, $fc, $0b
17c83     14 00 00 EA 
17c87     EF F0 DD D5 
17c8b     D6 C4 B0 B5 
17c8f     BF C1 CB D9 | 	byte	$14, $00, $00, $ea, $ef, $f0, $dd, $d5, $d6, $c4, $b0, $b5, $bf, $c1, $cb, $d9
17c93     DC D8 D5 E7 
17c97     E4 D8 E7 E7 
17c9b     E7 FF 00 03 
17c9f     08 07 1B 0E | 	byte	$dc, $d8, $d5, $e7, $e4, $d8, $e7, $e7, $e7, $ff, $00, $03, $08, $07, $1b, $0e
17ca3     12 F8 FF 0C 
17ca7     F4 FF 0D 1A 
17cab     11 19 2B 36 
17caf     32 3A 3B 34 | 	byte	$12, $f8, $ff, $0c, $f4, $ff, $0d, $1a, $11, $19, $2b, $36, $32, $3a, $3b, $34
17cb3     1C 1F 24 11 
17cb7     0E 0A 0A 14 
17cbb     14 00 FC 00 
17cbf     F0 E5 EC E0 | 	byte	$1c, $1f, $24, $11, $0e, $0a, $0a, $14, $14, $00, $fc, $00, $f0, $e5, $ec, $e0
17cc3     CD C4 BB BB 
17cc7     B8 C7 DF D2 
17ccb     D9 E4 D9 EB 
17ccf     E6 E9 E0 E7 | 	byte	$cd, $c4, $bb, $bb, $b8, $c7, $df, $d2, $d9, $e4, $d9, $eb, $e6, $e9, $e0, $e7
17cd3     FE F6 0C 00 
17cd7     0B 1A 14 0A 
17cdb     0A 0C 04 F0 
17cdf     FF 09 09 07 | 	byte	$fe, $f6, $0c, $00, $0b, $1a, $14, $0a, $0a, $0c, $04, $f0, $ff, $09, $09, $07
17ce3     0F 23 20 2B 
17ce7     41 3C 30 2C 
17ceb     24 23 24 0E 
17cef     03 15 1C 09 | 	byte	$0f, $23, $20, $2b, $41, $3c, $30, $2c, $24, $23, $24, $0e, $03, $15, $1c, $09
17cf3     0D 0E 00 F8 
17cf7     EC F6 F0 DB 
17cfb     DE C6 B6 C7 
17cff     C3 CF D3 E3 | 	byte	$0d, $0e, $00, $f8, $ec, $f6, $f0, $db, $de, $c6, $b6, $c7, $c3, $cf, $d3, $e3
17d03     D8 DD F0 E5 
17d07     E6 E3 E7 F5 
17d0b     F8 FA 03 0B 
17d0f     18 0C 0F 16 | 	byte	$d8, $dd, $f0, $e5, $e6, $e3, $e7, $f5, $f8, $fa, $03, $0b, $18, $0c, $0f, $16
17d13     12 00 F5 05 
17d17     09 FB FF 10 
17d1b     07 17 23 2F 
17d1f     3F 38 28 1F | 	byte	$12, $00, $f5, $05, $09, $fb, $ff, $10, $07, $17, $23, $2f, $3f, $38, $28, $1f
17d23     35 20 0A 0B 
17d27     0E 0C 02 07 
17d2b     16 F8 F7 F1 
17d2f     ED F0 EA E0 | 	byte	$35, $20, $0a, $0b, $0e, $0c, $02, $07, $16, $f8, $f7, $f1, $ed, $f0, $ea, $e0
17d33     C5 C7 BC AF 
17d37     BF CD CE CA 
17d3b     CF E3 E5 DD 
17d3f     DC DE EF EC | 	byte	$c5, $c7, $bc, $af, $bf, $cd, $ce, $ca, $cf, $e3, $e5, $dd, $dc, $de, $ef, $ec
17d43     EB F7 0B 0A 
17d47     04 07 1F 18 
17d4b     02 0C 05 06 
17d4f     05 04 09 15 | 	byte	$eb, $f7, $0b, $0a, $04, $07, $1f, $18, $02, $0c, $05, $06, $05, $04, $09, $15
17d53     0A 07 2D 47 
17d57     3C 35 34 3D 
17d5b     34 16 25 18 
17d5f     15 11 13 13 | 	byte	$0a, $07, $2d, $47, $3c, $35, $34, $3d, $34, $16, $25, $18, $15, $11, $13, $13
17d63     16 10 F4 F5 
17d67     FE F8 EC EA 
17d6b     E0 C8 BA C3 
17d6f     CB C9 C7 CE | 	byte	$16, $10, $f4, $f5, $fe, $f8, $ec, $ea, $e0, $c8, $ba, $c3, $cb, $c9, $c7, $ce
17d73     D9 DD DE D9 
17d77     DD DE E8 DC 
17d7b     E7 FF FA F7 
17d7f     03 11 16 14 | 	byte	$d9, $dd, $de, $d9, $dd, $de, $e8, $dc, $e7, $ff, $fa, $f7, $03, $11, $16, $14
17d83     06 05 0A 03 
17d87     FF 0F 08 FE 
17d8b     FF 13 2F 2A 
17d8f     33 3C 37 2C | 	byte	$06, $05, $0a, $03, $ff, $0f, $08, $fe, $ff, $13, $2f, $2a, $33, $3c, $37, $2c
17d93     2B 26 15 18 
17d97     10 05 11 1B 
17d9b     0C F8 F8 00 
17d9f     F1 EF FB F2 | 	byte	$2b, $26, $15, $18, $10, $05, $11, $1b, $0c, $f8, $f8, $00, $f1, $ef, $fb, $f2
17da3     D2 C8 C6 C1 
17da7     C0 BE C9 C4 
17dab     D9 D8 D3 D9 
17daf     E0 D2 D5 E3 | 	byte	$d2, $c8, $c6, $c1, $c0, $be, $c9, $c4, $d9, $d8, $d3, $d9, $e0, $d2, $d5, $e3
17db3     E8 EE F0 F5 
17db7     03 15 08 0D 
17dbb     10 0C 00 FB 
17dbf     13 10 FA F5 | 	byte	$e8, $ee, $f0, $f5, $03, $15, $08, $0d, $10, $0c, $00, $fb, $13, $10, $fa, $f5
17dc3     0C 15 1B 2B 
17dc7     36 34 3B 2E 
17dcb     28 27 24 12 
17dcf     09 13 1C 10 | 	byte	$0c, $15, $1b, $2b, $36, $34, $3b, $2e, $28, $27, $24, $12, $09, $13, $1c, $10
17dd3     00 09 FC EF 
17dd7     EF FF FA E8 
17ddb     DE D0 C7 C7 
17ddf     C0 B7 CB D6 | 	byte	$00, $09, $fc, $ef, $ef, $ff, $fa, $e8, $de, $d0, $c7, $c7, $c0, $b7, $cb, $d6
17de3     CF D3 E3 E0 
17de7     DC D6 DB EC 
17deb     ED EC ED FF 
17def     0B 0A 0F 1B | 	byte	$cf, $d3, $e3, $e0, $dc, $d6, $db, $ec, $ed, $ec, $ed, $ff, $0b, $0a, $0f, $1b
17df3     14 04 05 14 
17df7     15 08 03 01 
17dfb     0A 17 1C 25 
17dff     3B 40 36 29 | 	byte	$14, $04, $05, $14, $15, $08, $03, $01, $0a, $17, $1c, $25, $3b, $40, $36, $29
17e03     37 3C 20 0F 
17e07     1C 20 14 13 
17e0b     10 04 F9 F5 
17e0f     F4 FB 04 F0 | 	byte	$37, $3c, $20, $0f, $1c, $20, $14, $13, $10, $04, $f9, $f5, $f4, $fb, $04, $f0
17e13     DC DD DA C4 
17e17     BF C3 D6 D0 
17e1b     D1 DF EB E2 
17e1f     D6 D7 EB F0 | 	byte	$dc, $dd, $da, $c4, $bf, $c3, $d6, $d0, $d1, $df, $eb, $e2, $d6, $d7, $eb, $f0
17e23     E3 EB F9 04 
17e27     FE 0F 1C 18 
17e2b     0C 0D 0E 15 
17e2f     1A 08 00 06 | 	byte	$e3, $eb, $f9, $04, $fe, $0f, $1c, $18, $0c, $0d, $0e, $15, $1a, $08, $00, $06
17e33     0E 09 0F 2B 
17e37     38 30 29 39 
17e3b     33 28 1C 14 
17e3f     13 15 14 0A | 	byte	$0e, $09, $0f, $2b, $38, $30, $29, $39, $33, $28, $1c, $14, $13, $15, $14, $0a
17e43     07 08 F0 ED 
17e47     FA 00 F2 E7 
17e4b     E6 E2 CA BE 
17e4f     BF BF CD BD | 	byte	$07, $08, $f0, $ed, $fa, $00, $f2, $e7, $e6, $e2, $ca, $be, $bf, $bf, $cd, $bd
17e53     CB E0 DD CC 
17e57     CF DE DB D9 
17e5b     DF EE E8 EF 
17e5f     02 07 0F 0C | 	byte	$cb, $e0, $dd, $cc, $cf, $de, $db, $d9, $df, $ee, $e8, $ef, $02, $07, $0f, $0c
17e63     0F 0B 16 14 
17e67     13 0B 0E 0A 
17e6b     FB 07 21 1E 
17e6f     27 31 31 30 | 	byte	$0f, $0b, $16, $14, $13, $0b, $0e, $0a, $fb, $07, $21, $1e, $27, $31, $31, $30
17e73     34 28 18 1B 
17e77     18 15 11 16 
17e7b     08 FC F3 FF 
17e7f     00 F7 00 F3 | 	byte	$34, $28, $18, $1b, $18, $15, $11, $16, $08, $fc, $f3, $ff, $00, $f7, $00, $f3
17e83     F0 E0 D0 CB 
17e87     CC C0 C0 C9 
17e8b     DB D8 CC D7 
17e8f     D8 D3 D7 DE | 	byte	$f0, $e0, $d0, $cb, $cc, $c0, $c0, $c9, $db, $d8, $cc, $d7, $d8, $d3, $d7, $de
17e93     E1 E3 E3 EF 
17e97     03 04 01 05 
17e9b     0C 14 10 0B 
17e9f     1B 18 09 FD | 	byte	$e1, $e3, $e3, $ef, $03, $04, $01, $05, $0c, $14, $10, $0b, $1b, $18, $09, $fd
17ea3     0B 15 1B 1C 
17ea7     2B 33 39 36 
17eab     30 29 23 20 
17eaf     10 1B 20 0A | 	byte	$0b, $15, $1b, $1c, $2b, $33, $39, $36, $30, $29, $23, $20, $10, $1b, $20, $0a
17eb3     00 FF FC FF 
17eb7     F0 EF 02 F6 
17ebb     E9 D7 DB D4 
17ebf     C0 BC CD D2 | 	byte	$00, $ff, $fc, $ff, $f0, $ef, $02, $f6, $e9, $d7, $db, $d4, $c0, $bc, $cd, $d2
17ec3     D1 D2 D7 DF 
17ec7     D8 D6 DB E8 
17ecb     DD E2 E3 FB 
17ecf     04 FB F7 0D | 	byte	$d1, $d2, $d7, $df, $d8, $d6, $db, $e8, $dd, $e2, $e3, $fb, $04, $fb, $f7, $0d
17ed3     14 0D 0B 15 
17ed7     20 13 0A FF 
17edb     13 18 17 1D 
17edf     27 3A 3A 30 | 	byte	$14, $0d, $0b, $15, $20, $13, $0a, $ff, $13, $18, $17, $1d, $27, $3a, $3a, $30
17ee3     33 33 20 1E 
17ee7     19 26 20 04 
17eeb     00 06 04 F0 
17eef     E8 FF 04 EA | 	byte	$33, $33, $20, $1e, $19, $26, $20, $04, $00, $06, $04, $f0, $e8, $ff, $04, $ea
17ef3     E5 E8 E2 CC 
17ef7     C5 C3 CF D3 
17efb     D0 D5 DA DC 
17eff     DC D6 DF E8 | 	byte	$e5, $e8, $e2, $cc, $c5, $c3, $cf, $d3, $d0, $d5, $da, $dc, $dc, $d6, $df, $e8
17f03     D6 DF E7 F9 
17f07     F2 EF FB 05 
17f0b     08 00 07 18 
17f0f     16 0C 03 05 | 	byte	$d6, $df, $e7, $f9, $f2, $ef, $fb, $05, $08, $00, $07, $18, $16, $0c, $03, $05
17f13     17 10 07 1F 
17f17     2E 36 33 37 
17f1b     38 2C 24 25 
17f1f     26 2A 18 09 | 	byte	$17, $10, $07, $1f, $2e, $36, $33, $37, $38, $2c, $24, $25, $26, $2a, $18, $09
17f23     0E 08 F8 F1 
17f27     FC F8 F7 F0 
17f2b     E9 E6 DC CC 
17f2f     CA C0 C6 CF | 	byte	$0e, $08, $f8, $f1, $fc, $f8, $f7, $f0, $e9, $e6, $dc, $cc, $ca, $c0, $c6, $cf
17f33     C5 D4 D1 DB 
17f37     CC D7 DE D7 
17f3b     D8 DB ED EC 
17f3f     E7 EE F9 FA | 	byte	$c5, $d4, $d1, $db, $cc, $d7, $de, $d7, $d8, $db, $ed, $ec, $e7, $ee, $f9, $fa
17f43     FF FB 06 13 
17f47     0A 08 03 08 
17f4b     0B 08 0B 1B 
17f4f     1F 2F 35 3B | 	byte	$ff, $fb, $06, $13, $0a, $08, $03, $08, $0b, $08, $0b, $1b, $1f, $2f, $35, $3b
17f53     36 2A 27 33 
17f57     2A 1C 1F 1E 
17f5b     12 03 06 F5 
17f5f     FF F1 FF F2 | 	byte	$36, $2a, $27, $33, $2a, $1c, $1f, $1e, $12, $03, $06, $f5, $ff, $f1, $ff, $f2
17f63     ED E8 DC D4 
17f67     C3 C3 C3 C7 
17f6b     CE C7 CC D4 
17f6f     D6 D7 D4 D3 | 	byte	$ed, $e8, $dc, $d4, $c3, $c3, $c3, $c7, $ce, $c7, $cc, $d4, $d6, $d7, $d4, $d3
17f73     E3 E6 E9 EB 
17f77     EF FE 02 FF 
17f7b     09 12 18 12 
17f7f     19 1A 14 0E | 	byte	$e3, $e6, $e9, $eb, $ef, $fe, $02, $ff, $09, $12, $18, $12, $19, $1a, $14, $0e
17f83     15 14 15 18 
17f87     1F 39 40 38 
17f8b     27 3D 38 2C 
17f8f     2C 27 2D 18 | 	byte	$15, $14, $15, $18, $1f, $39, $40, $38, $27, $3d, $38, $2c, $2c, $27, $2d, $18
17f93     16 0C 05 04 
17f97     FB 01 01 00 
17f9b     F9 EC E8 E4 
17f9f     CE C9 CC D3 | 	byte	$16, $0c, $05, $04, $fb, $01, $01, $00, $f9, $ec, $e8, $e4, $ce, $c9, $cc, $d3
17fa3     D5 C5 CF E3 
17fa7     DC CE CD DD 
17fab     EA E4 DF EB 
17faf     FD F3 F3 FF | 	byte	$d5, $c5, $cf, $e3, $dc, $ce, $cd, $dd, $ea, $e4, $df, $eb, $fd, $f3, $f3, $ff
17fb3     0F 0A 0C 0C 
17fb7     1B 10 0B 0A 
17fbb     0F 18 FA 0F 
17fbf     2E 2D 2A 23 | 	byte	$0f, $0a, $0c, $0c, $1b, $10, $0b, $0a, $0f, $18, $fa, $0f, $2e, $2d, $2a, $23
17fc3     31 2A 2D 24 
17fc7     1B 1F 1C 10 
17fcb     08 00 FF F8 
17fcf     EE FA F7 F4 | 	byte	$31, $2a, $2d, $24, $1b, $1f, $1c, $10, $08, $00, $ff, $f8, $ee, $fa, $f7, $f4
17fd3     F4 E2 E9 D8 
17fd7     C4 C7 D1 CE 
17fdb     C1 C4 D7 E0 
17fdf     CA C2 D3 E5 | 	byte	$f4, $e2, $e9, $d8, $c4, $c7, $d1, $ce, $c1, $c4, $d7, $e0, $ca, $c2, $d3, $e5
17fe3     DA DB E7 ED 
17fe7     F1 EA FB 00 
17feb     0B 12 07 1E 
17fef     18 11 16 1B | 	byte	$da, $db, $e7, $ed, $f1, $ea, $fb, $00, $0b, $12, $07, $1e, $18, $11, $16, $1b
17ff3     14 08 13 1D 
17ff7     26 2E 2C 2C 
17ffb     30 2F 2C 24 
17fff     1E 21 18 10 | 	byte	$14, $08, $13, $1d, $26, $2e, $2c, $2c, $30, $2f, $2c, $24, $1e, $21, $18, $10
18003     0C FE 01 F4 
18007     F7 FC F8 FA 
1800b     F8 F1 E4 DB 
1800f     D0 D5 D4 C9 | 	byte	$0c, $fe, $01, $f4, $f7, $fc, $f8, $fa, $f8, $f1, $e4, $db, $d0, $d5, $d4, $c9
18013     C3 D3 DA D3 
18017     D0 CC D9 D8 
1801b     DF E6 E3 EC 
1801f     E4 F2 F8 F8 | 	byte	$c3, $d3, $da, $d3, $d0, $cc, $d9, $d8, $df, $e6, $e3, $ec, $e4, $f2, $f8, $f8
18023     05 0F 18 0E 
18027     15 1F 1E 16 
1802b     13 13 17 1E 
1802f     27 2E 27 2F | 	byte	$05, $0f, $18, $0e, $15, $1f, $1e, $16, $13, $13, $17, $1e, $27, $2e, $27, $2f
18033     30 33 30 21 
18037     20 27 1E 18 
1803b     0A 03 02 00 
1803f     F7 F4 FE 02 | 	byte	$30, $33, $30, $21, $20, $27, $1e, $18, $0a, $03, $02, $00, $f7, $f4, $fe, $02
18043     FC F0 E2 E6 
18047     E8 D5 D2 CA 
1804b     D9 D4 D7 D9 
1804f     CA D1 D1 D7 | 	byte	$fc, $f0, $e2, $e6, $e8, $d5, $d2, $ca, $d9, $d4, $d7, $d9, $ca, $d1, $d1, $d7
18053     E0 DE DE DB 
18057     E8 E6 E0 F3 
1805b     04 00 FE 05 
1805f     16 18 12 0B | 	byte	$e0, $de, $de, $db, $e8, $e6, $e0, $f3, $04, $00, $fe, $05, $16, $18, $12, $0b
18063     0C 13 14 16 
18067     27 28 29 2D 
1806b     30 34 30 24 
1806f     23 27 20 12 | 	byte	$0c, $13, $14, $16, $27, $28, $29, $2d, $30, $34, $30, $24, $23, $27, $20, $12
18073     0E 0C FA FC 
18077     F0 F3 00 F9 
1807b     F0 DE E7 E6 
1807f     D6 D0 C8 C9 | 	byte	$0e, $0c, $fa, $fc, $f0, $f3, $00, $f9, $f0, $de, $e7, $e6, $d6, $d0, $c8, $c9
18083     CD CD D1 CE 
18087     CB C7 CB DB 
1808b     DC D5 D9 DC 
1808f     DD D8 DF F5 | 	byte	$cd, $cd, $d1, $ce, $cb, $c7, $cb, $db, $dc, $d5, $d9, $dc, $dd, $d8, $df, $f5
18093     F9 FA F7 07 
18097     17 13 10 0F 
1809b     0F 0F 16 1D 
1809f     29 25 29 31 | 	byte	$f9, $fa, $f7, $07, $17, $13, $10, $0f, $0f, $0f, $16, $1d, $29, $25, $29, $31
180a3     3C 34 28 31 
180a7     2C 2A 21 1C 
180ab     18 08 08 F4 
180af     F3 FF 02 F4 | 	byte	$3c, $34, $28, $31, $2c, $2a, $21, $1c, $18, $08, $08, $f4, $f3, $ff, $02, $f4
180b3     E7 E9 EC E9 
180b7     D8 CE CC CF 
180bb     CD D3 D7 CC 
180bf     CA CF DE DA | 	byte	$e7, $e9, $ec, $e9, $d8, $ce, $cc, $cf, $cd, $d3, $d7, $cc, $ca, $cf, $de, $da
180c3     D9 E3 E0 DF 
180c7     D7 DF F3 FB 
180cb     F2 FB 03 0F 
180cf     17 16 16 12 | 	byte	$d9, $e3, $e0, $df, $d7, $df, $f3, $fb, $f2, $fb, $03, $0f, $17, $16, $16, $12
180d3     10 17 26 22 
180d7     1B 2B 35 36 
180db     32 37 36 2C 
180df     2F 2C 23 21 | 	byte	$10, $17, $26, $22, $1b, $2b, $35, $36, $32, $37, $36, $2c, $2f, $2c, $23, $21
180e3     1C 0C FA F8 
180e7     FB 05 FA EC 
180eb     E8 F1 F0 E0 
180ef     D8 D1 D0 C7 | 	byte	$1c, $0c, $fa, $f8, $fb, $05, $fa, $ec, $e8, $f1, $f0, $e0, $d8, $d1, $d0, $c7
180f3     D3 D6 C9 C9 
180f7     CF D3 D3 D7 
180fb     E3 E6 D6 D9 
180ff     E3 ED F3 F6 | 	byte	$d3, $d6, $c9, $c9, $cf, $d3, $d3, $d7, $e3, $e6, $d6, $d9, $e3, $ed, $f3, $f6
18103     FD 01 03 0A 
18107     1F 20 0A 0E 
1810b     1B 23 18 17 
1810f     2D 29 2D 36 | 	byte	$fd, $01, $03, $0a, $1f, $20, $0a, $0e, $1b, $23, $18, $17, $2d, $29, $2d, $36
18113     37 30 35 33 
18117     2D 2C 2A 24 
1811b     14 08 F9 FF 
1811f     03 00 F0 EC | 	byte	$37, $30, $35, $33, $2d, $2c, $2a, $24, $14, $08, $f9, $ff, $03, $00, $f0, $ec
18123     F3 EC E4 E4 
18127     D2 C6 C7 D3 
1812b     D4 C3 C7 D3 
1812f     D0 C7 D7 E3 | 	byte	$f3, $ec, $e4, $e4, $d2, $c6, $c7, $d3, $d4, $c3, $c7, $d3, $d0, $c7, $d7, $e3
18133     E2 DA D7 E3 
18137     EC E4 F3 01 
1813b     FC F4 FF 23 
1813f     1A 06 13 23 | 	byte	$e2, $da, $d7, $e3, $ec, $e4, $f3, $01, $fc, $f4, $ff, $23, $1a, $06, $13, $23
18143     1A 1A 1E 1E 
18147     21 2B 31 30 
1814b     33 34 36 32 
1814f     29 32 2C 25 | 	byte	$1a, $1a, $1e, $1e, $21, $2b, $31, $30, $33, $34, $36, $32, $29, $32, $2c, $25
18153     14 FC FF 0B 
18157     FC F7 F6 F3 
1815b     E8 EF F4 E2 
1815f     C9 CF DC D0 | 	byte	$14, $fc, $ff, $0b, $fc, $f7, $f6, $f3, $e8, $ef, $f4, $e2, $c9, $cf, $dc, $d0
18163     C8 D1 D3 CD 
18167     C8 CE E2 E0 
1816b     DE DD DF E3 
1816f     DF F1 FC F2 | 	byte	$c8, $d1, $d3, $cd, $c8, $ce, $e2, $e0, $de, $dd, $df, $e3, $df, $f1, $fc, $f2
18173     E3 FF 14 10 
18177     0C 13 10 15 
1817b     1D 18 19 18 
1817f     1B 26 24 27 | 	byte	$e3, $ff, $14, $10, $0c, $13, $10, $15, $1d, $18, $19, $18, $1b, $26, $24, $27
18183     30 2C 31 26 
18187     26 33 32 18 
1818b     0B 0C 05 FE 
1818f     00 03 F0 DF | 	byte	$30, $2c, $31, $26, $26, $33, $32, $18, $0b, $0c, $05, $fe, $00, $03, $f0, $df
18193     F3 02 E4 D3 
18197     D9 D4 D0 C7 
1819b     D3 D0 C8 BE 
1819f     C7 CE D2 D4 | 	byte	$f3, $02, $e4, $d3, $d9, $d4, $d0, $c7, $d3, $d0, $c8, $be, $c7, $ce, $d2, $d4
181a3     DB DC D3 CF 
181a7     E7 F7 E8 E5 
181ab     F2 FF 0B 0E 
181af     0B 17 11 1B | 	byte	$db, $dc, $d3, $cf, $e7, $f7, $e8, $e5, $f2, $ff, $0b, $0e, $0b, $17, $11, $1b
181b3     1E 17 1B 1E 
181b7     21 27 26 29 
181bb     38 38 28 2D 
181bf     39 3A 2E 20 | 	byte	$1e, $17, $1b, $1e, $21, $27, $26, $29, $38, $38, $28, $2d, $39, $3a, $2e, $20
181c3     1F 12 00 13 
181c7     12 FA F0 FC 
181cb     01 F8 EB EC 
181cf     E6 D8 D1 D7 | 	byte	$1f, $12, $00, $13, $12, $fa, $f0, $fc, $01, $f8, $eb, $ec, $e6, $d8, $d1, $d7
181d3     DA D2 C8 C3 
181d7     D1 CE CE DF 
181db     E8 CC CF E6 
181df     EF F0 E2 EF | 	byte	$da, $d2, $c8, $c3, $d1, $ce, $ce, $df, $e8, $cc, $cf, $e6, $ef, $f0, $e2, $ef
181e3     F8 F9 0B 12 
181e7     0D 11 1A 19 
181eb     21 19 1B 23 
181ef     23 1C 27 33 | 	byte	$f8, $f9, $0b, $12, $0d, $11, $1a, $19, $21, $19, $1b, $23, $23, $1c, $27, $33
181f3     34 28 23 39 
181f7     30 29 30 26 
181fb     08 03 0E 0E 
181ff     FC ED EE F3 | 	byte	$34, $28, $23, $39, $30, $29, $30, $26, $08, $03, $0e, $0e, $fc, $ed, $ee, $f3
18203     EE ED E7 E1 
18207     DA CC CF D3 
1820b     CC BC C7 C0 
1820f     B5 C3 D2 DA | 	byte	$ee, $ed, $e7, $e1, $da, $cc, $cf, $d3, $cc, $bc, $c7, $c0, $b5, $c3, $d2, $da
18213     C8 BF CF DE 
18217     D7 E1 DD D7 
1821b     EB F6 FF 01 
1821f     02 09 1B 14 | 	byte	$c8, $bf, $cf, $de, $d7, $e1, $dd, $d7, $eb, $f6, $ff, $01, $02, $09, $1b, $14
18223     13 1B 27 28 
18227     12 1F 3B 30 
1822b     27 31 32 29 
1822f     35 3C 34 20 | 	byte	$13, $1b, $27, $28, $12, $1f, $3b, $30, $27, $31, $32, $29, $35, $3c, $34, $20
18233     0F 1A 13 10 
18237     00 F8 F1 F7 
1823b     F4 ED F8 E2 
1823f     DA D9 D4 D1 | 	byte	$0f, $1a, $13, $10, $00, $f8, $f1, $f7, $f4, $ed, $f8, $e2, $da, $d9, $d4, $d1
18243     D4 D3 C4 B8 
18247     BD D7 D4 CC 
1824b     C8 C8 CB D5 
1824f     D8 D8 D8 D7 | 	byte	$d4, $d3, $c4, $b8, $bd, $d7, $d4, $cc, $c8, $c8, $cb, $d5, $d8, $d8, $d8, $d7
18253     E5 F2 F4 F9 
18257     FC 0F 16 06 
1825b     17 2C 22 13 
1825f     29 2E 31 31 | 	byte	$e5, $f2, $f4, $f9, $fc, $0f, $16, $06, $17, $2c, $22, $13, $29, $2e, $31, $31
18263     39 34 2B 39 
18267     40 44 30 2A 
1826b     1A 1D 20 0D 
1826f     09 02 F4 F6 | 	byte	$39, $34, $2b, $39, $40, $44, $30, $2a, $1a, $1d, $20, $0d, $09, $02, $f4, $f6
18273     FE F8 F4 F0 
18277     E6 E0 D4 DF 
1827b     E8 D2 C4 C7 
1827f     CF D7 DC D6 | 	byte	$fe, $f8, $f4, $f0, $e6, $e0, $d4, $df, $e8, $d2, $c4, $c7, $cf, $d7, $dc, $d6
18283     D3 CF D5 E5 
18287     E0 DE D8 E3 
1828b     F1 F0 EB FF 
1828f     10 FE 06 15 | 	byte	$d3, $cf, $d5, $e5, $e0, $de, $d8, $e3, $f1, $f0, $eb, $ff, $10, $fe, $06, $15
18293     22 20 1F 1B 
18297     1F 26 2F 38 
1829b     2C 2C 2E 31 
1829f     3F 40 2C 20 | 	byte	$22, $20, $1f, $1b, $1f, $26, $2f, $38, $2c, $2c, $2e, $31, $3f, $40, $2c, $20
182a3     23 1A 17 12 
182a7     05 00 F4 F6 
182ab     F6 F2 F9 F0 
182af     D8 D3 E1 E0 | 	byte	$23, $1a, $17, $12, $05, $00, $f4, $f6, $f6, $f2, $f9, $f0, $d8, $d3, $e1, $e0
182b3     D9 C9 C7 CA 
182b7     CA D3 D6 D2 
182bb     CB CE D3 E3 
182bf     D8 D3 E1 E3 | 	byte	$d9, $c9, $c7, $ca, $ca, $d3, $d6, $d2, $cb, $ce, $d3, $e3, $d8, $d3, $e1, $e3
182c3     DC E6 FD FC 
182c7     00 FE 07 0F 
182cb     1C 21 20 13 
182cf     23 29 2B 31 | 	byte	$dc, $e6, $fd, $fc, $00, $fe, $07, $0f, $1c, $21, $20, $13, $23, $29, $2b, $31
182d3     36 24 2D 3B 
182d7     3D 40 31 28 
182db     24 24 20 19 
182df     0A 0B 00 F1 | 	byte	$36, $24, $2d, $3b, $3d, $40, $31, $28, $24, $24, $20, $19, $0a, $0b, $00, $f1
182e3     F8 01 FC E6 
182e7     DC DE E3 E0 
182eb     D8 D2 C5 CC 
182ef     CE D3 D6 D4 | 	byte	$f8, $01, $fc, $e6, $dc, $de, $e3, $e0, $d8, $d2, $c5, $cc, $ce, $d3, $d6, $d4
182f3     C4 D1 DA D8 
182f7     D4 DC DD DD 
182fb     D7 EB F5 FB 
182ff     FC FA FF 13 | 	byte	$c4, $d1, $da, $d8, $d4, $dc, $dd, $dd, $d7, $eb, $f5, $fb, $fc, $fa, $ff, $13
18303     1F 13 17 16 
18307     19 26 2B 2B 
1830b     2A 24 27 3C 
1830f     3D 40 30 24 | 	byte	$1f, $13, $17, $16, $19, $26, $2b, $2b, $2a, $24, $27, $3c, $3d, $40, $30, $24
18313     25 24 18 15 
18317     16 03 F4 EF 
1831b     04 00 EE E0 
1831f     DF DD E1 D8 | 	byte	$25, $24, $18, $15, $16, $03, $f4, $ef, $04, $00, $ee, $e0, $df, $dd, $e1, $d8
18323     D3 D0 C7 C9 
18327     D3 D5 D0 CF 
1832b     CD D6 D1 DC 
1832f     DD DE D6 DB | 	byte	$d3, $d0, $c7, $c9, $d3, $d5, $d0, $cf, $cd, $d6, $d1, $dc, $dd, $de, $d6, $db
18333     DC EF FA F2 
18337     F3 FF 0E 13 
1833b     1B 16 1B 14 
1833f     17 27 2F 2C | 	byte	$dc, $ef, $fa, $f2, $f3, $ff, $0e, $13, $1b, $16, $1b, $14, $17, $27, $2f, $2c
18343     1F 1F 2B 3C 
18347     34 36 32 26 
1834b     1C 1E 23 20 
1834f     10 FD FE 01 | 	byte	$1f, $1f, $2b, $3c, $34, $36, $32, $26, $1c, $1e, $23, $20, $10, $fd, $fe, $01
18353     04 F8 F0 EC 
18357     E7 E0 E3 E6 
1835b     DE CC C7 D7 
1835f     DC D4 D1 D8 | 	byte	$04, $f8, $f0, $ec, $e7, $e0, $e3, $e6, $de, $cc, $c7, $d7, $dc, $d4, $d1, $d8
18363     CE D5 DC DF 
18367     E5 E2 D8 D3 
1836b     EB F3 F9 F0 
1836f     FD 07 0E 12 | 	byte	$ce, $d5, $dc, $df, $e5, $e2, $d8, $d3, $eb, $f3, $f9, $f0, $fd, $07, $0e, $12
18373     25 24 16 14 
18377     1F 36 30 26 
1837b     1D 2A 32 35 
1837f     33 3D 38 1C | 	byte	$25, $24, $16, $14, $1f, $36, $30, $26, $1d, $2a, $32, $35, $33, $3d, $38, $1c
18383     1A 27 30 14 
18387     04 FF 04 FE 
1838b     FE F2 F2 E2 
1838f     DC DD E9 DC | 	byte	$1a, $27, $30, $14, $04, $ff, $04, $fe, $fe, $f2, $f2, $e2, $dc, $dd, $e9, $dc
18393     CE CA C7 D3 
18397     D2 D4 CC D6 
1839b     CA C9 D7 E7 
1839f     E0 CD CD DB | 	byte	$ce, $ca, $c7, $d3, $d2, $d4, $cc, $d6, $ca, $c9, $d7, $e7, $e0, $cd, $cd, $db
183a3     EE E3 EE F0 
183a7     F8 F6 07 17 
183ab     1C 10 07 11 
183af     1F 2C 24 1C | 	byte	$ee, $e3, $ee, $f0, $f8, $f6, $07, $17, $1c, $10, $07, $11, $1f, $2c, $24, $1c
183b3     1D 23 25 2F 
183b7     3B 38 19 1A 
183bb     25 2B 1C 0E 
183bf     02 03 00 F7 | 	byte	$1d, $23, $25, $2f, $3b, $38, $19, $1a, $25, $2b, $1c, $0e, $02, $03, $00, $f7
183c3     FE F4 EC DA 
183c7     E3 E2 E5 DA 
183cb     C9 C9 D3 D4 
183cf     CF DA D2 CB | 	byte	$fe, $f4, $ec, $da, $e3, $e2, $e5, $da, $c9, $c9, $d3, $d4, $cf, $da, $d2, $cb
183d3     C4 D3 E7 DC 
183d7     CE CD D7 D7 
183db     DE E4 EF E8 
183df     E9 F9 0F 15 | 	byte	$c4, $d3, $e7, $dc, $ce, $cd, $d7, $d7, $de, $e4, $ef, $e8, $e9, $f9, $0f, $15
183e3     10 03 0B 17 
183e7     24 22 25 22 
183eb     17 1F 2F 3E 
183ef     31 30 22 29 | 	byte	$10, $03, $0b, $17, $24, $22, $25, $22, $17, $1f, $2f, $3e, $31, $30, $22, $29
183f3     2A 2F 26 1A 
183f7     14 10 10 0C 
183fb     08 03 F8 EB 
183ff     F9 F8 E7 E0 | 	byte	$2a, $2f, $26, $1a, $14, $10, $10, $0c, $08, $03, $f8, $eb, $f9, $f8, $e7, $e0
18403     DC DB D6 DF 
18407     E8 E0 CD D2 
1840b     D9 E2 E1 DC 
1840f     D7 D8 D1 DF | 	byte	$dc, $db, $d6, $df, $e8, $e0, $cd, $d2, $d9, $e2, $e1, $dc, $d7, $d8, $d1, $df
18413     E9 EF E8 E3 
18417     F5 03 13 0A 
1841b     09 06 0F 10 
1841f     1F 29 22 16 | 	byte	$e9, $ef, $e8, $e3, $f5, $03, $13, $0a, $09, $06, $0f, $10, $1f, $29, $22, $16
18423     17 2C 32 39 
18427     2C 29 29 2C 
1842b     2C 2E 21 1A 
1842f     18 0C 11 17 | 	byte	$17, $2c, $32, $39, $2c, $29, $29, $2c, $2c, $2e, $21, $1a, $18, $0c, $11, $17
18433     0A F8 F6 FB 
18437     F4 E6 E5 E2 
1843b     D0 C6 D7 E4 
1843f     E0 CA C7 D8 | 	byte	$0a, $f8, $f6, $fb, $f4, $e6, $e5, $e2, $d0, $c6, $d7, $e4, $e0, $ca, $c7, $d8
18443     D6 DB D6 DE 
18447     D2 CD CD DF 
1844b     E6 E0 DC DF 
1844f     F7 03 0A 04 | 	byte	$d6, $db, $d6, $de, $d2, $cd, $cd, $df, $e6, $e0, $dc, $df, $f7, $03, $0a, $04
18453     07 01 0D 1B 
18457     25 26 1C 12 
1845b     1B 31 36 33 
1845f     2C 2A 2F 30 | 	byte	$07, $01, $0d, $1b, $25, $26, $1c, $12, $1b, $31, $36, $33, $2c, $2a, $2f, $30
18463     25 2D 28 18 
18467     08 13 20 0C 
1846b     FA FD 04 F2 
1846f     F0 E7 EC D8 | 	byte	$25, $2d, $28, $18, $08, $13, $20, $0c, $fa, $fd, $04, $f2, $f0, $e7, $ec, $d8
18473     C9 CF E3 E6 
18477     D2 CE D3 D9 
1847b     D4 DE DF E0 
1847f     D0 CE D3 E7 | 	byte	$c9, $cf, $e3, $e6, $d2, $ce, $d3, $d9, $d4, $de, $df, $e0, $d0, $ce, $d3, $e7
18483     E4 D5 DE E9 
18487     F7 03 0A 06 
1848b     07 04 0F 1F 
1848f     28 20 1A 13 | 	byte	$e4, $d5, $de, $e9, $f7, $03, $0a, $06, $07, $04, $0f, $1f, $28, $20, $1a, $13
18493     1F 37 33 2A 
18497     2D 34 2A 21 
1849b     2A 35 20 0B 
1849f     13 1B 10 03 | 	byte	$1f, $37, $33, $2a, $2d, $34, $2a, $21, $2a, $35, $20, $0b, $13, $1b, $10, $03
184a3     04 00 F9 F0 
184a7     F3 F0 E1 CC 
184ab     C9 D7 E0 DD 
184af     D3 D2 CF D7 | 	byte	$04, $00, $f9, $f0, $f3, $f0, $e1, $cc, $c9, $d7, $e0, $dd, $d3, $d2, $cf, $d7
184b3     D8 DE E4 D9 
184b7     CE CF DF E0 
184bb     E2 D8 DB E9 
184bf     F7 FF 0D 00 | 	byte	$d8, $de, $e4, $d9, $ce, $cf, $df, $e0, $e2, $d8, $db, $e9, $f7, $ff, $0d, $00
184c3     FF 07 13 1F 
184c7     26 1A 12 19 
184cb     2B 2E 27 33 
184cf     33 28 21 31 | 	byte	$ff, $07, $13, $1f, $26, $1a, $12, $19, $2b, $2e, $27, $33, $33, $28, $21, $31
184d3     2C 1F 18 11 
184d7     14 0E 10 0C 
184db     04 F8 FA F8 
184df     F5 E8 D8 D2 | 	byte	$2c, $1f, $18, $11, $14, $0e, $10, $0c, $04, $f8, $fa, $f8, $f5, $e8, $d8, $d2
184e3     D2 D5 DD DC 
184e7     D8 D2 CF D7 
184eb     E3 E1 DF DC 
184ef     D1 DC DE DC | 	byte	$d2, $d5, $dd, $dc, $d8, $d2, $cf, $d7, $e3, $e1, $df, $dc, $d1, $dc, $de, $dc
184f3     DE D9 D9 EB 
184f7     F9 02 06 FC 
184fb     FF 07 18 20 
184ff     1B 12 1B 1E | 	byte	$de, $d9, $d9, $eb, $f9, $02, $06, $fc, $ff, $07, $18, $20, $1b, $12, $1b, $1e
18503     1C 31 38 2C 
18507     2B 2D 33 2A 
1850b     26 26 20 11 
1850f     12 13 13 10 | 	byte	$1c, $31, $38, $2c, $2b, $2d, $33, $2a, $26, $26, $20, $11, $12, $13, $13, $10
18513     00 FB 01 04 
18517     F4 E8 DA DA 
1851b     DD DB E7 E5 
1851f     D8 D7 D6 E3 | 	byte	$00, $fb, $01, $04, $f4, $e8, $da, $da, $dd, $db, $e7, $e5, $d8, $d7, $d6, $e3
18523     ED E6 E0 E5 
18527     DC DD DC E3 
1852b     E0 D4 D7 EB 
1852f     FB FC FC F0 | 	byte	$ed, $e6, $e0, $e5, $dc, $dd, $dc, $e3, $e0, $d4, $d7, $eb, $fb, $fc, $fc, $f0
18533     F7 11 08 0B 
18537     13 16 10 0F 
1853b     1F 2E 2E 26 
1853f     2D 2C 2C 2A | 	byte	$f7, $11, $08, $0b, $13, $16, $10, $0f, $1f, $2e, $2e, $26, $2d, $2c, $2c, $2a
18543     28 23 1D 13 
18547     0E 1A 16 0B 
1854b     00 FC 0A 00 
1854f     F4 E6 DD D8 | 	byte	$28, $23, $1d, $13, $0e, $1a, $16, $0b, $00, $fc, $0a, $00, $f4, $e6, $dd, $d8
18553     D9 D1 DF E4 
18557     D2 C6 D2 E1 
1855b     E4 DA DF E0 
1855f     DA D5 DF D8 | 	byte	$d9, $d1, $df, $e4, $d2, $c6, $d2, $e1, $e4, $da, $df, $e0, $da, $d5, $df, $d8
18563     D4 D4 CF E7 
18567     F9 FA F0 EF 
1856b     FF FF 02 07 
1856f     13 08 07 13 | 	byte	$d4, $d4, $cf, $e7, $f9, $fa, $f0, $ef, $ff, $ff, $02, $07, $13, $08, $07, $13
18573     1B 23 2B 26 
18577     21 33 2A 26 
1857b     28 28 1B 13 
1857f     0F 19 16 0C | 	byte	$1b, $23, $2b, $26, $21, $33, $2a, $26, $28, $28, $1b, $13, $0f, $19, $16, $0c
18583     02 02 0B 08 
18587     F2 EA E3 DC 
1858b     D3 D7 E3 DC 
1858f     D0 D1 DA D7 | 	byte	$02, $02, $0b, $08, $f2, $ea, $e3, $dc, $d3, $d7, $e3, $dc, $d0, $d1, $da, $d7
18593     DF EA E0 E1 
18597     DF E0 DC E1 
1859b     D7 D2 DC ED 
1859f     F5 F6 FA F8 | 	byte	$df, $ea, $e0, $e1, $df, $e0, $dc, $e1, $d7, $d2, $dc, $ed, $f5, $f6, $fa, $f8
185a3     FB FE 0D 0A 
185a7     0C 14 10 0F 
185ab     1F 27 2B 2E 
185af     2E 33 33 32 | 	byte	$fb, $fe, $0d, $0a, $0c, $14, $10, $0f, $1f, $27, $2b, $2e, $2e, $33, $33, $32
185b3     34 2D 24 1F 
185b7     1E 1F 1E 10 
185bb     0E 0F 12 06 
185bf     05 F9 E8 D7 | 	byte	$34, $2d, $24, $1f, $1e, $1f, $1e, $10, $0e, $0f, $12, $06, $05, $f9, $e8, $d7
185c3     E5 E6 DC DA 
185c7     DF D5 CF DF 
185cb     E4 E5 E1 DC 
185cf     DF E2 E0 D4 | 	byte	$e5, $e6, $dc, $da, $df, $d5, $cf, $df, $e4, $e5, $e1, $dc, $df, $e2, $e0, $d4
185d3     D1 D7 E1 DE 
185d7     EB FF F8 EB 
185db     FA FE 05 08 
185df     03 09 0F 11 | 	byte	$d1, $d7, $e1, $de, $eb, $ff, $f8, $eb, $fa, $fe, $05, $08, $03, $09, $0f, $11
185e3     12 1F 27 2C 
185e7     26 2D 33 34 
185eb     2E 2C 20 23 
185ef     24 1E 16 18 | 	byte	$12, $1f, $27, $2c, $26, $2d, $33, $34, $2e, $2c, $20, $23, $24, $1e, $16, $18
185f3     1A 10 0F 1D 
185f7     10 F0 E6 EF 
185fb     E6 DA DE E2 
185ff     DC D1 CF DD | 	byte	$1a, $10, $0f, $1d, $10, $f0, $e6, $ef, $e6, $da, $de, $e2, $dc, $d1, $cf, $dd
18603     E5 E3 DB D9 
18607     E5 E5 D0 CF 
1860b     DC D2 D7 DF 
1860f     EF FA F6 EC | 	byte	$e5, $e3, $db, $d9, $e5, $e5, $d0, $cf, $dc, $d2, $d7, $df, $ef, $fa, $f6, $ec
18613     F5 FF 01 00 
18617     FF 0A 11 06 
1861b     0F 1D 21 21 
1861f     23 2B 32 35 | 	byte	$f5, $ff, $01, $00, $ff, $0a, $11, $06, $0f, $1d, $21, $21, $23, $2b, $32, $35
18623     28 1F 23 24 
18627     10 0F 1E 10 
1862b     00 0B 19 0A 
1862f     FC F0 E5 E1 | 	byte	$28, $1f, $23, $24, $10, $0f, $1e, $10, $00, $0b, $19, $0a, $fc, $f0, $e5, $e1
18633     DC D9 D8 DE 
18637     D8 D0 CD E3 
1863b     E2 D6 DF E8 
1863f     E0 DA D9 D6 | 	byte	$dc, $d9, $d8, $de, $d8, $d0, $cd, $e3, $e2, $d6, $df, $e8, $e0, $da, $d9, $d6
18643     D0 D1 D3 E2 
18647     EA F7 F1 EB 
1864b     FB 03 FE 00 
1864f     08 0E 10 0B | 	byte	$d0, $d1, $d3, $e2, $ea, $f7, $f1, $eb, $fb, $03, $fe, $00, $08, $0e, $10, $0b
18653     12 23 2A 22 
18657     25 3B 3C 34 
1865b     2F 34 28 1B 
1865f     26 20 16 0E | 	byte	$12, $23, $2a, $22, $25, $3b, $3c, $34, $2f, $34, $28, $1b, $26, $20, $16, $0e
18663     13 18 19 11 
18667     05 F8 EB EA 
1866b     E0 DC E7 E0 
1866f     D0 D7 DC D8 | 	byte	$13, $18, $19, $11, $05, $f8, $eb, $ea, $e0, $dc, $e7, $e0, $d0, $d7, $dc, $d8
18673     DF E5 E5 E4 
18677     DE E6 D8 D1 
1867b     D4 CE D6 E3 
1867f     EC EC F2 F7 | 	byte	$df, $e5, $e5, $e4, $de, $e6, $d8, $d1, $d4, $ce, $d6, $e3, $ec, $ec, $f2, $f7
18683     FD FB FF 00 
18687     0B 10 04 0B 
1868b     19 21 15 1F 
1868f     31 2E 30 39 | 	byte	$fd, $fb, $ff, $00, $0b, $10, $04, $0b, $19, $21, $15, $1f, $31, $2e, $30, $39
18693     34 26 23 25 
18697     1E 18 11 14 
1869b     13 15 18 0E 
1869f     08 00 EC E0 | 	byte	$34, $26, $23, $25, $1e, $18, $11, $14, $13, $15, $18, $0e, $08, $00, $ec, $e0
186a3     EB E0 DB DE 
186a7     DC D9 CD DD 
186ab     E1 E0 E3 E7 
186af     DE E0 E0 D2 | 	byte	$eb, $e0, $db, $de, $dc, $d9, $cd, $dd, $e1, $e0, $e3, $e7, $de, $e0, $e0, $d2
186b3     C7 CD DB D9 
186b7     E5 EB F2 FB 
186bb     FC F6 FF 0E 
186bf     0A 01 0F 15 | 	byte	$c7, $cd, $db, $d9, $e5, $eb, $f2, $fb, $fc, $f6, $ff, $0e, $0a, $01, $0f, $15
186c3     13 13 1F 28 
186c7     25 2D 39 3E 
186cb     30 2A 29 2C 
186cf     20 18 0E 13 | 	byte	$13, $13, $1f, $28, $25, $2d, $39, $3e, $30, $2a, $29, $2c, $20, $18, $0e, $13
186d3     1C 08 0F 16 
186d7     0A F4 EA EF 
186db     E0 D7 E3 E4 
186df     D2 D0 D2 D8 | 	byte	$1c, $08, $0f, $16, $0a, $f4, $ea, $ef, $e0, $d7, $e3, $e4, $d2, $d0, $d2, $d8
186e3     DB E5 E0 DA 
186e7     E4 E5 D4 C9 
186eb     C7 CD D3 D4 
186ef     D5 E5 F7 EA | 	byte	$db, $e5, $e0, $da, $e4, $e5, $d4, $c9, $c7, $cd, $d3, $d4, $d5, $e5, $f7, $ea
186f3     E7 F3 05 F8 
186f7     F6 03 07 03 
186fb     09 16 18 17 
186ff     19 2F 31 32 | 	byte	$e7, $f3, $05, $f8, $f6, $03, $07, $03, $09, $16, $18, $17, $19, $2f, $31, $32
18703     2C 21 2F 26 
18707     18 11 1C 17 
1870b     0C 0F 1F 14 
1870f     06 02 FC EA | 	byte	$2c, $21, $2f, $26, $18, $11, $1c, $17, $0c, $0f, $1f, $14, $06, $02, $fc, $ea
18713     E3 E9 E6 E2 
18717     E1 D4 D5 E3 
1871b     E5 E3 E5 EB 
1871f     EE F0 E0 D3 | 	byte	$e3, $e9, $e6, $e2, $e1, $d4, $d5, $e3, $e5, $e3, $e5, $eb, $ee, $f0, $e0, $d3
18723     D9 DB D2 D3 
18727     EB F5 F0 ED 
1872b     FF 00 FD FF 
1872f     07 0E FE 0B | 	byte	$d9, $db, $d2, $d3, $eb, $f5, $f0, $ed, $ff, $00, $fd, $ff, $07, $0e, $fe, $0b
18733     19 1A 17 18 
18737     23 34 36 30 
1873b     31 37 32 20 
1873f     23 25 18 11 | 	byte	$19, $1a, $17, $18, $23, $34, $36, $30, $31, $37, $32, $20, $23, $25, $18, $11
18743     1B 1F 18 17 
18747     1A 04 F8 F0 
1874b     E8 EC EF E2 
1874f     D3 D9 DB E3 | 	byte	$1b, $1f, $18, $17, $1a, $04, $f8, $f0, $e8, $ec, $ef, $e2, $d3, $d9, $db, $e3
18753     DC DD E2 EF 
18757     F0 DD DB DB 
1875b     D4 C3 CF DB 
1875f     E7 E3 E7 F5 | 	byte	$dc, $dd, $e2, $ef, $f0, $dd, $db, $db, $d4, $c3, $cf, $db, $e7, $e3, $e7, $f5
18763     F7 F3 FB 04 
18767     01 FF FF 0F 
1876b     19 10 0B 1D 
1876f     2F 2A 29 3B | 	byte	$f7, $f3, $fb, $04, $01, $ff, $ff, $0f, $19, $10, $0b, $1d, $2f, $2a, $29, $3b
18773     3C 30 28 31 
18777     2C 15 1C 19 
1877b     17 17 1E 18 
1877f     14 0A F2 EC | 	byte	$3c, $30, $28, $31, $2c, $15, $1c, $19, $17, $17, $1e, $18, $14, $0a, $f2, $ec
18783     EB F0 E4 DC 
18787     CE D7 DC D8 
1878b     CF DD E8 E2 
1878f     E0 E5 E2 D4 | 	byte	$eb, $f0, $e4, $dc, $ce, $d7, $dc, $d8, $cf, $dd, $e8, $e2, $e0, $e5, $e2, $d4
18793     C7 C9 D5 D5 
18797     D9 E7 F0 EF 
1879b     EF F6 02 00 
1879f     F7 F7 0B 16 | 	byte	$c7, $c9, $d5, $d5, $d9, $e7, $f0, $ef, $ef, $f6, $02, $00, $f7, $f7, $0b, $16
187a3     08 02 0F 20 
187a7     13 1B 37 30 
187ab     21 2B 2E 1C 
187af     1B 10 11 0F | 	byte	$08, $02, $0f, $20, $13, $1b, $37, $30, $21, $2b, $2e, $1c, $1b, $10, $11, $0f
187b3     0E 07 15 1A 
187b7     10 FC F0 EF 
187bb     F0 EC D8 D4 
187bf     DB DC D6 D1 | 	byte	$0e, $07, $15, $1a, $10, $fc, $f0, $ef, $f0, $ec, $d8, $d4, $db, $dc, $d6, $d1
187c3     D8 E6 E5 DF 
187c7     EE ED DC D3 
187cb     D3 D1 D0 D7 
187cf     EA F1 EC F1 | 	byte	$d8, $e6, $e5, $df, $ee, $ed, $dc, $d3, $d3, $d1, $d0, $d7, $ea, $f1, $ec, $f1
187d3     FF 09 07 FC 
187d7     FF 16 14 08 
187db     0D 1C 0F 19 
187df     25 2E 32 35 | 	byte	$ff, $09, $07, $fc, $ff, $16, $14, $08, $0d, $1c, $0f, $19, $25, $2e, $32, $35
187e3     33 36 32 22 
187e7     21 1E 18 0A 
187eb     11 1B 23 20 
187ef     0C 01 01 FE | 	byte	$33, $36, $32, $22, $21, $1e, $18, $0a, $11, $1b, $23, $20, $0c, $01, $01, $fe
187f3     F4 EA E6 E2 
187f7     E4 D8 DA E1 
187fb     DE DE E7 EE 
187ff     F2 E6 DB DC | 	byte	$f4, $ea, $e6, $e2, $e4, $d8, $da, $e1, $de, $de, $e7, $ee, $f2, $e6, $db, $dc
18803     D4 CB D2 DB 
18807     E6 E3 DF F3 
1880b     07 F8 EC FF 
1880f     06 FD 06 10 | 	byte	$d4, $cb, $d2, $db, $e6, $e3, $df, $f3, $07, $f8, $ec, $ff, $06, $fd, $06, $10
18813     06 FF 08 17 
18817     1C 21 23 2C 
1881b     33 28 26 22 
1881f     18 1A 08 01 | 	byte	$06, $ff, $08, $17, $1c, $21, $23, $2c, $33, $28, $26, $22, $18, $1a, $08, $01
18823     0D 1E 18 10 
18827     02 02 05 F4 
1882b     E3 EA E4 DC 
1882f     DB DC D9 D6 | 	byte	$0d, $1e, $18, $10, $02, $02, $05, $f4, $e3, $ea, $e4, $dc, $db, $dc, $d9, $d6
18833     D3 DF EA E9 
18837     E6 E4 E0 D8 
1883b     C8 C6 DF E0 
1883f     CE D7 FB FC | 	byte	$d3, $df, $ea, $e9, $e6, $e4, $e0, $d8, $c8, $c6, $df, $e0, $ce, $d7, $fb, $fc
18843     F0 F7 FF 00 
18847     FF 07 0D 08 
1884b     00 FF 19 11 
1884f     17 22 29 2C | 	byte	$f0, $f7, $ff, $00, $ff, $07, $0d, $08, $00, $ff, $19, $11, $17, $22, $29, $2c
18853     2E 26 23 2A 
18857     1C 0F 04 06 
1885b     19 1F 0C 0D 
1885f     12 08 FC F0 | 	byte	$2e, $26, $23, $2a, $1c, $0f, $04, $06, $19, $1f, $0c, $0d, $12, $08, $fc, $f0
18863     EF ED E2 DB 
18867     E4 E0 D4 D1 
1886b     D7 E3 E8 E4 
1886f     E7 F1 E0 C3 | 	byte	$ef, $ed, $e2, $db, $e4, $e0, $d4, $d1, $d7, $e3, $e8, $e4, $e7, $f1, $e0, $c3
18873     CF DF D0 CB 
18877     D9 E9 ED F9 
1887b     F4 FF 00 F8 
1887f     07 0E 05 02 | 	byte	$cf, $df, $d0, $cb, $d9, $e9, $ed, $f9, $f4, $ff, $00, $f8, $07, $0e, $05, $02
18883     09 06 13 16 
18887     17 25 2F 2D 
1888b     2F 2B 32 30 
1888f     18 0B 12 17 | 	byte	$09, $06, $13, $16, $17, $25, $2f, $2d, $2f, $2b, $32, $30, $18, $0b, $12, $17
18893     18 16 16 18 
18897     14 09 01 FD 
1889b     F4 EB E8 EA 
1889f     EA DC D0 DA | 	byte	$18, $16, $16, $18, $14, $09, $01, $fd, $f4, $eb, $e8, $ea, $ea, $dc, $d0, $da
188a3     E8 DC DF FA 
188a7     FA E0 D9 DF 
188ab     D6 D4 CE D7 
188af     E2 E5 EF FF | 	byte	$e8, $dc, $df, $fa, $fa, $e0, $d9, $df, $d6, $d4, $ce, $d7, $e2, $e5, $ef, $ff
188b3     FA F2 05 09 
188b7     07 0B 08 06 
188bb     0D 0E 13 12 
188bf     1B 2A 2E 23 | 	byte	$fa, $f2, $05, $09, $07, $0b, $08, $06, $0d, $0e, $13, $12, $1b, $2a, $2e, $23
188c3     29 3B 32 24 
188c7     18 13 10 13 
188cb     0F 13 18 12 
188cf     0F 0D 03 F8 | 	byte	$29, $3b, $32, $24, $18, $13, $10, $13, $0f, $13, $18, $12, $0f, $0d, $03, $f8
188d3     F0 EB F1 EC 
188d7     DA D5 E4 D8 
188db     D1 DF F2 F1 
188df     E9 E3 E3 E0 | 	byte	$f0, $eb, $f1, $ec, $da, $d5, $e4, $d8, $d1, $df, $f2, $f1, $e9, $e3, $e3, $e0
188e3     CC CF D6 D2 
188e7     D7 EF F1 F5 
188eb     F6 FB 07 06 
188ef     08 08 08 07 | 	byte	$cc, $cf, $d6, $d2, $d7, $ef, $f1, $f5, $f6, $fb, $07, $06, $08, $08, $08, $07
188f3     14 0C 04 17 
188f7     24 20 1B 2D 
188fb     32 33 28 21 
188ff     1E 14 0C 0D | 	byte	$14, $0c, $04, $17, $24, $20, $1b, $2d, $32, $33, $28, $21, $1e, $14, $0c, $0d
18903     0F 12 11 13 
18907     12 12 02 EF 
1890b     F4 F8 EA DE 
1890f     E5 DC D3 D0 | 	byte	$0f, $12, $11, $13, $12, $12, $02, $ef, $f4, $f8, $ea, $de, $e5, $dc, $d3, $d0
18913     D7 E3 ED E6 
18917     EE EC DD DD 
1891b     D5 CF CE D5 
1891f     DE E7 EE EF | 	byte	$d7, $e3, $ed, $e6, $ee, $ec, $dd, $dd, $d5, $cf, $ce, $d5, $de, $e7, $ee, $ef
18923     F7 F6 06 0B 
18927     03 FE 0F 10 
1892b     02 07 12 17 
1892f     14 13 1F 2C | 	byte	$f7, $f6, $06, $0b, $03, $fe, $0f, $10, $02, $07, $12, $17, $14, $13, $1f, $2c
18933     32 30 2C 28 
18937     19 18 10 13 
1893b     11 10 0F 1B 
1893f     1C 08 FC 00 | 	byte	$32, $30, $2c, $28, $19, $18, $10, $13, $11, $10, $0f, $1b, $1c, $08, $fc, $00
18943     F8 EF EA E4 
18947     E7 D8 CB D6 
1894b     D8 DD E3 EB 
1894f     E8 E7 E3 DB | 	byte	$f8, $ef, $ea, $e4, $e7, $d8, $cb, $d6, $d8, $dd, $e3, $eb, $e8, $e7, $e3, $db
18953     D2 C8 CC D3 
18957     DB E4 EC E6 
1895b     EB 05 04 FA 
1895f     03 0F 0C 00 | 	byte	$d2, $c8, $cc, $d3, $db, $e4, $ec, $e6, $eb, $05, $04, $fa, $03, $0f, $0c, $00
18963     0B 10 17 0C 
18967     0F 1F 25 2B 
1896b     33 34 31 2E 
1896f     20 17 1B 1C | 	byte	$0b, $10, $17, $0c, $0f, $1f, $25, $2b, $33, $34, $31, $2e, $20, $17, $1b, $1c
18973     09 0F 1E 1C 
18977     1C 09 05 06 
1897b     F8 F0 F0 ED 
1897f     E0 D8 D1 D3 | 	byte	$09, $0f, $1e, $1c, $1c, $09, $05, $06, $f8, $f0, $f0, $ed, $e0, $d8, $d1, $d3
18983     D9 DB E1 E9 
18987     EC E9 E6 DC 
1898b     D8 D2 C2 CF 
1898f     E7 E6 D5 E7 | 	byte	$d9, $db, $e1, $e9, $ec, $e9, $e6, $dc, $d8, $d2, $c2, $cf, $e7, $e6, $d5, $e7
18993     00 FC FA FF 
18997     0F 0C 02 07 
1899b     13 0D 0E 0D 
1899f     13 17 23 2B | 	byte	$00, $fc, $fa, $ff, $0f, $0c, $02, $07, $13, $0d, $0e, $0d, $13, $17, $23, $2b
189a3     29 3B 34 22 
189a7     27 22 1C 10 
189ab     07 17 1F 19 
189af     0F 0E 08 03 | 	byte	$29, $3b, $34, $22, $27, $22, $1c, $10, $07, $17, $1f, $19, $0f, $0e, $08, $03
189b3     F8 F1 F4 EE 
189b7     E0 CF D1 CC 
189bb     D5 D0 D3 E3 
189bf     E7 E0 DC E5 | 	byte	$f8, $f1, $f4, $ee, $e0, $cf, $d1, $cc, $d5, $d0, $d3, $e3, $e7, $e0, $dc, $e5
189c3     D0 BE CD DA 
189c7     D7 D0 DB EF 
189cb     EF ED FE 02 
189cf     03 00 03 08 | 	byte	$d0, $be, $cd, $da, $d7, $d0, $db, $ef, $ef, $ed, $fe, $02, $03, $00, $03, $08
189d3     07 12 04 FF 
189d7     13 13 17 1F 
189db     2C 2E 2A 25 
189df     29 25 14 0F | 	byte	$07, $12, $04, $ff, $13, $13, $17, $1f, $2c, $2e, $2a, $25, $29, $25, $14, $0f
189e3     11 17 19 19 
189e7     12 13 0C FB 
189eb     01 FB F6 E8 
189ef     E1 D8 D1 D0 | 	byte	$11, $17, $19, $19, $12, $13, $0c, $fb, $01, $fb, $f6, $e8, $e1, $d8, $d1, $d0
189f3     C9 D1 DA D8 
189f7     DD E7 E3 D4 
189fb     C3 CD D3 CF 
189ff     D3 DF E1 E3 | 	byte	$c9, $d1, $da, $d8, $dd, $e7, $e3, $d4, $c3, $cd, $d3, $cf, $d3, $df, $e1, $e3
18a03     EE 03 00 02 
18a07     0A 04 0F 13 
18a0b     10 0F 13 0D 
18a0f     0E 11 1F 2B | 	byte	$ee, $03, $00, $02, $0a, $04, $0f, $13, $10, $0f, $13, $0d, $0e, $11, $1f, $2b
18a13     2A 28 2E 34 
18a17     26 25 18 13 
18a1b     17 13 17 1C 
18a1f     19 0E 0A 09 | 	byte	$2a, $28, $2e, $34, $26, $25, $18, $13, $17, $13, $17, $1c, $19, $0e, $0a, $09
18a23     04 00 FA ED 
18a27     EF E0 D3 D5 
18a2b     DC D8 D0 D7 
18a2f     F3 F0 DE D7 | 	byte	$04, $00, $fa, $ed, $ef, $e0, $d3, $d5, $dc, $d8, $d0, $d7, $f3, $f0, $de, $d7
18a33     D7 D8 CA D3 
18a37     E0 DB DF E5 
18a3b     EB FF 06 FF 
18a3f     03 0F 14 0E | 	byte	$d7, $d8, $ca, $d3, $e0, $db, $df, $e5, $eb, $ff, $06, $ff, $03, $0f, $14, $0e
18a43     13 17 15 0A 
18a47     03 1B 25 26 
18a4b     22 27 36 33 
18a4f     24 23 23 14 | 	byte	$13, $17, $15, $0a, $03, $1b, $25, $26, $22, $27, $36, $33, $24, $23, $23, $14
18a53     0B 15 1E 1A 
18a57     16 0A 09 0E 
18a5b     07 00 F9 F7 
18a5f     F0 D8 D6 E0 | 	byte	$0b, $15, $1e, $1a, $16, $0a, $09, $0e, $07, $00, $f9, $f7, $f0, $d8, $d6, $e0
18a63     D8 CC C7 E5 
18a67     EC E0 DF DC 
18a6b     CD CF CA CF 
18a6f     D7 D6 D2 D7 | 	byte	$d8, $cc, $c7, $e5, $ec, $e0, $df, $dc, $cd, $cf, $ca, $cf, $d7, $d6, $d2, $d7
18a73     EF F4 F6 F4 
18a77     FF 0B 07 07 
18a7b     13 13 0C 02 
18a7f     05 19 1E 1A | 	byte	$ef, $f4, $f6, $f4, $ff, $0b, $07, $07, $13, $13, $0c, $02, $05, $19, $1e, $1a
18a83     1E 2F 30 2B 
18a87     2E 28 20 18 
18a8b     0F 19 1C 1B 
18a8f     16 08 11 0C | 	byte	$1e, $2f, $30, $2b, $2e, $28, $20, $18, $0f, $19, $1c, $1b, $16, $08, $11, $0c
18a93     03 00 01 F8 
18a97     E8 DE E9 E0 
18a9b     D2 D2 D2 DF 
18a9f     EB E7 DC DC | 	byte	$03, $00, $01, $f8, $e8, $de, $e9, $e0, $d2, $d2, $d2, $df, $eb, $e7, $dc, $dc
18aa3     D6 CB CF D3 
18aa7     D8 D3 CF DF 
18aab     EF ED F7 FC 
18aaf     FF 06 0B 0F | 	byte	$d6, $cb, $cf, $d3, $d8, $d3, $cf, $df, $ef, $ed, $f7, $fc, $ff, $06, $0b, $0f
18ab3     13 13 0C 0A 
18ab7     11 13 1E 23 
18abb     22 2D 33 36 
18abf     30 27 22 17 | 	byte	$13, $13, $0c, $0a, $11, $13, $1e, $23, $22, $2d, $33, $36, $30, $27, $22, $17
18ac3     10 19 1C 16 
18ac7     10 0B 0E 04 
18acb     05 0A FA F5 
18acf     F0 E9 DE E2 | 	byte	$10, $19, $1c, $16, $10, $0b, $0e, $04, $05, $0a, $fa, $f5, $f0, $e9, $de, $e2
18ad3     D8 CD D3 DF 
18ad7     EA E8 E3 E0 
18adb     D8 D2 D9 D0 
18adf     CD D1 D4 DB | 	byte	$d8, $cd, $d3, $df, $ea, $e8, $e3, $e0, $d8, $d2, $d9, $d0, $cd, $d1, $d4, $db
18ae3     E5 EC F0 F2 
18ae7     F5 FD 0A 09 
18aeb     09 0E 07 02 
18aef     05 0F 1C 1A | 	byte	$e5, $ec, $f0, $f2, $f5, $fd, $0a, $09, $09, $0e, $07, $02, $05, $0f, $1c, $1a
18af3     16 2B 36 37 
18af7     30 29 24 17 
18afb     1F 1A 1A 1C 
18aff     18 04 07 10 | 	byte	$16, $2b, $36, $37, $30, $29, $24, $17, $1f, $1a, $1a, $1c, $18, $04, $07, $10
18b03     06 02 FE F2 
18b07     F1 F0 E4 DC 
18b0b     D2 CF D7 DF 
18b0f     EA EC E0 DC | 	byte	$06, $02, $fe, $f2, $f1, $f0, $e4, $dc, $d2, $cf, $d7, $df, $ea, $ec, $e0, $dc
18b13     E0 DD D4 D3 
18b17     D6 D5 D8 DD 
18b1b     ED F4 F1 EF 
18b1f     FB 07 0F 0B | 	byte	$e0, $dd, $d4, $d3, $d6, $d5, $d8, $dd, $ed, $f4, $f1, $ef, $fb, $07, $0f, $0b
18b23     0D 16 09 07 
18b27     0B 19 18 15 
18b2b     1F 2D 38 3C 
18b2f     34 2A 2C 24 | 	byte	$0d, $16, $09, $07, $0b, $19, $18, $15, $1f, $2d, $38, $3c, $34, $2a, $2c, $24
18b33     1C 26 24 1A 
18b37     14 0D 0C 0E 
18b3b     08 00 F8 F3 
18b3f     F9 EC DA D8 | 	byte	$1c, $26, $24, $1a, $14, $0d, $0c, $0e, $08, $00, $f8, $f3, $f9, $ec, $da, $d8
18b43     D0 C7 CF E1 
18b47     E0 DB D7 D7 
18b4b     DA D6 CE CF 
18b4f     D0 CF D5 DB | 	byte	$d0, $c7, $cf, $e1, $e0, $db, $d7, $d7, $da, $d6, $ce, $cf, $d0, $cf, $d5, $db
18b53     ED E8 E7 EF 
18b57     F8 FF 03 0D 
18b5b     0C 03 04 07 
18b5f     08 0E 12 08 | 	byte	$ed, $e8, $e7, $ef, $f8, $ff, $03, $0d, $0c, $03, $04, $07, $08, $0e, $12, $08
18b63     1D 31 31 2D 
18b67     30 29 23 21 
18b6b     1F 22 1D 18 
18b6f     10 06 0B 10 | 	byte	$1d, $31, $31, $2d, $30, $29, $23, $21, $1f, $22, $1d, $18, $10, $06, $0b, $10
18b73     00 F6 F5 F7 
18b77     F3 E8 D8 CC 
18b7b     C8 C9 CF DB 
18b7f     D4 D7 D6 D3 | 	byte	$00, $f6, $f5, $f7, $f3, $e8, $d8, $cc, $c8, $c9, $cf, $db, $d4, $d7, $d6, $d3
18b83     D7 D0 CF CF 
18b87     CC CF D7 E0 
18b8b     E4 E8 ED EE 
18b8f     F1 0B 0C 05 | 	byte	$d7, $d0, $cf, $cf, $cc, $cf, $d7, $e0, $e4, $e8, $ed, $ee, $f1, $0b, $0c, $05
18b93     0C 0E 0B 0D 
18b97     0E 09 13 16 
18b9b     1E 2D 36 37 
18b9f     33 2C 2E 2E | 	byte	$0c, $0e, $0b, $0d, $0e, $09, $13, $16, $1e, $2d, $36, $37, $33, $2c, $2e, $2e
18ba3     2B 2E 28 20 
18ba7     18 1A 19 17 
18bab     10 04 03 09 
18baf     00 F0 E0 D9 | 	byte	$2b, $2e, $28, $20, $18, $1a, $19, $17, $10, $04, $03, $09, $00, $f0, $e0, $d9
18bb3     D8 D0 D5 DA 
18bb7     DC DA D5 D4 
18bbb     DA D9 CE C9 
18bbf     D2 DE D4 DD | 	byte	$d8, $d0, $d5, $da, $dc, $da, $d5, $d4, $da, $d9, $ce, $c9, $d2, $de, $d4, $dd
18bc3     EF F2 E7 F3 
18bc7     FF 0F 14 0E 
18bcb     0F 1D 18 0F 
18bcf     11 17 18 12 | 	byte	$ef, $f2, $e7, $f3, $ff, $0f, $14, $0e, $0f, $1d, $18, $0f, $11, $17, $18, $12
18bd3     1F 33 36 30 
18bd7     33 30 2B 2B 
18bdb     2E 25 26 20 
18bdf     16 18 17 14 | 	byte	$1f, $33, $36, $30, $33, $30, $2b, $2b, $2e, $25, $26, $20, $16, $18, $17, $14
18be3     08 00 09 0C 
18be7     00 E9 E0 DB 
18beb     D8 CD D5 D9 
18bef     DC D0 CB D7 | 	byte	$08, $00, $09, $0c, $00, $e9, $e0, $db, $d8, $cd, $d5, $d9, $dc, $d0, $cb, $d7
18bf3     D8 C6 C6 D1 
18bf7     C9 C7 CF DA 
18bfb     DD E2 DE EB 
18bff     FB 03 02 05 | 	byte	$d8, $c6, $c6, $d1, $c9, $c7, $cf, $da, $dd, $e2, $de, $eb, $fb, $03, $02, $05
18c03     15 14 0C 0A 
18c07     0D 0C 0B 13 
18c0b     1A 23 31 29 
18c0f     26 26 27 29 | 	byte	$15, $14, $0c, $0a, $0d, $0c, $0b, $13, $1a, $23, $31, $29, $26, $26, $27, $29
18c13     21 1F 1C 16 
18c17     0E 13 10 08 
18c1b     00 03 0C 06 
18c1f     F8 EC E9 E0 | 	byte	$21, $1f, $1c, $16, $0e, $13, $10, $08, $00, $03, $0c, $06, $f8, $ec, $e9, $e0
18c23     D4 D2 E3 D9 
18c27     D1 D9 DE D2 
18c2b     D2 D2 CC CE 
18c2f     CA CF D6 D8 | 	byte	$d4, $d2, $e3, $d9, $d1, $d9, $de, $d2, $d2, $d2, $cc, $ce, $ca, $cf, $d6, $d8
18c33     DB DE E5 EE 
18c37     F9 03 07 0D 
18c3b     12 19 18 0B 
18c3f     15 12 14 17 | 	byte	$db, $de, $e5, $ee, $f9, $03, $07, $0d, $12, $19, $18, $0b, $15, $12, $14, $17
18c43     25 31 33 2A 
18c47     2F 2E 2D 2E 
18c4b     28 26 1E 1C 
18c4f     19 14 0A 0C | 	byte	$25, $31, $33, $2a, $2f, $2e, $2d, $2e, $28, $26, $1e, $1c, $19, $14, $0a, $0c
18c53     07 0F 0A 01 
18c57     FC F6 E0 D9 
18c5b     E4 D8 D5 DB 
18c5f     DE D8 D3 D4 | 	byte	$07, $0f, $0a, $01, $fc, $f6, $e0, $d9, $e4, $d8, $d5, $db, $de, $d8, $d3, $d4
18c63     D9 D3 CA C7 
18c67     CF D4 CE D3 
18c6b     D9 E0 DB EB 
18c6f     FD 00 01 0E | 	byte	$d9, $d3, $ca, $c7, $cf, $d4, $ce, $d3, $d9, $e0, $db, $eb, $fd, $00, $01, $0e
18c73     17 17 10 13 
18c77     1C 0E 0F 1D 
18c7b     29 2B 2F 2E 
18c7f     2D 2A 2F 30 | 	byte	$17, $17, $10, $13, $1c, $0e, $0f, $1d, $29, $2b, $2f, $2e, $2d, $2a, $2f, $30
18c83     20 1C 1C 1E 
18c87     12 08 00 0E 
18c8b     08 FA 07 0A 
18c8f     F8 E7 E3 E1 | 	byte	$20, $1c, $1c, $1e, $12, $08, $00, $0e, $08, $fa, $07, $0a, $f8, $e7, $e3, $e1
18c93     DA D2 DB DE 
18c97     DC D2 D7 DD 
18c9b     D8 D0 CA D3 
18c9f     D0 CB CF DC | 	byte	$da, $d2, $db, $de, $dc, $d2, $d7, $dd, $d8, $d0, $ca, $d3, $d0, $cb, $cf, $dc
18ca3     D7 DB DD EF 
18ca7     F4 FD 0B 0F 
18cab     0F 16 1A 13 
18caf     10 0F 1C 17 | 	byte	$d7, $db, $dd, $ef, $f4, $fd, $0b, $0f, $0f, $16, $1a, $13, $10, $0f, $1c, $17
18cb3     25 2F 34 29 
18cb7     2B 33 33 30 
18cbb     20 23 29 18 
18cbf     07 12 0F 04 | 	byte	$25, $2f, $34, $29, $2b, $33, $33, $30, $20, $23, $29, $18, $07, $12, $0f, $04
18cc3     FB 09 0C 00 
18cc7     F2 ED E8 D8 
18ccb     D1 D6 DD D8 
18ccf     D2 D3 DE D8 | 	byte	$fb, $09, $0c, $00, $f2, $ed, $e8, $d8, $d1, $d6, $dd, $d8, $d2, $d3, $de, $d8
18cd3     D6 D4 CE D0 
18cd7     CF D7 D6 D5 
18cdb     D5 DF DC E7 
18cdf     F5 03 00 03 | 	byte	$d6, $d4, $ce, $d0, $cf, $d7, $d6, $d5, $d5, $df, $dc, $e7, $f5, $03, $00, $03
18ce3     15 13 10 0C 
18ce7     13 08 0A 18 
18ceb     23 2B 29 1E 
18cef     33 36 28 26 | 	byte	$15, $13, $10, $0c, $13, $08, $0a, $18, $23, $2b, $29, $1e, $33, $36, $28, $26
18cf3     2B 2C 18 16 
18cf7     13 10 06 02 
18cfb     07 09 00 FF 
18cff     F9 EE DA D2 | 	byte	$2b, $2c, $18, $16, $13, $10, $06, $02, $07, $09, $00, $ff, $f9, $ee, $da, $d2
18d03     DF D6 D4 D1 
18d07     D6 D4 D3 D4 
18d0b     DA D0 CB D4 
18d0f     D4 D2 CF DD | 	byte	$df, $d6, $d4, $d1, $d6, $d4, $d3, $d4, $da, $d0, $cb, $d4, $d4, $d2, $cf, $dd
18d13     D8 D4 DB EF 
18d17     F7 F7 FF 0E 
18d1b     0C 13 13 0C 
18d1f     10 04 0B 1D | 	byte	$d8, $d4, $db, $ef, $f7, $f7, $ff, $0e, $0c, $13, $13, $0c, $10, $04, $0b, $1d
18d23     22 1F 23 2F 
18d27     2C 26 2C 30 
18d2b     2B 20 1D 1F 
18d2f     10 0C 08 0B | 	byte	$22, $1f, $23, $2f, $2c, $26, $2c, $30, $2b, $20, $1d, $1f, $10, $0c, $08, $0b
18d33     0A 01 09 0C 
18d37     00 E8 E3 E1 
18d3b     DE D2 DC DB 
18d3f     D2 D1 D9 E0 | 	byte	$0a, $01, $09, $0c, $00, $e8, $e3, $e1, $de, $d2, $dc, $db, $d2, $d1, $d9, $e0
18d43     D4 D0 D6 D8 
18d47     D4 D6 DC DC 
18d4b     D3 DF E1 EB 
18d4f     F8 FD 06 0C | 	byte	$d4, $d0, $d6, $d8, $d4, $d6, $dc, $dc, $d3, $df, $e1, $eb, $f8, $fd, $06, $0c
18d53     0F 18 1B 12 
18d57     05 0F 1C 18 
18d5b     1F 27 2F 29 
18d5f     27 36 35 31 | 	byte	$0f, $18, $1b, $12, $05, $0f, $1c, $18, $1f, $27, $2f, $29, $27, $36, $35, $31
18d63     28 2F 2C 20 
18d67     12 1C 18 0C 
18d6b     0B 0F 20 10 
18d6f     00 F8 F6 E8 | 	byte	$28, $2f, $2c, $20, $12, $1c, $18, $0c, $0b, $0f, $20, $10, $00, $f8, $f6, $e8
18d73     E2 E5 E0 D6 
18d77     DA DB E0 DA 
18d7b     D7 DB D4 D6 
18d7f     DA D8 DB D9 | 	byte	$e2, $e5, $e0, $d6, $da, $db, $e0, $da, $d7, $db, $d4, $d6, $da, $d8, $db, $d9
18d83     D7 D7 DF E9 
18d87     EF F9 FA FF 
18d8b     13 17 13 06 
18d8f     09 12 09 0E | 	byte	$d7, $d7, $df, $e9, $ef, $f9, $fa, $ff, $13, $17, $13, $06, $09, $12, $09, $0e
18d93     18 25 20 1F 
18d97     25 30 26 27 
18d9b     2B 28 20 16 
18d9f     18 19 0C 04 | 	byte	$18, $25, $20, $1f, $25, $30, $26, $27, $2b, $28, $20, $16, $18, $19, $0c, $04
18da3     0E 17 10 0C 
18da7     06 F4 EC E6 
18dab     E4 E3 D6 D8 
18daf     D8 D4 D5 D9 | 	byte	$0e, $17, $10, $0c, $06, $f4, $ec, $e6, $e4, $e3, $d6, $d8, $d8, $d4, $d5, $d9
18db3     D6 CF D1 D3 
18db7     D3 D9 D4 D2 
18dbb     D6 CF D7 E5 
18dbf     F1 EA EF 03 | 	byte	$d6, $cf, $d1, $d3, $d3, $d9, $d4, $d2, $d6, $cf, $d7, $e5, $f1, $ea, $ef, $03
18dc3     0F 10 0C 0C 
18dc7     0B 08 07 13 
18dcb     1B 1C 1E 25 
18dcf     29 27 2B 31 | 	byte	$0f, $10, $0c, $0c, $0b, $08, $07, $13, $1b, $1c, $1e, $25, $29, $27, $2b, $31
18dd3     2E 24 1F 27 
18dd7     20 14 0C 0C 
18ddb     11 17 16 18 
18ddf     08 F4 F4 F3 | 	byte	$2e, $24, $1f, $27, $20, $14, $0c, $0c, $11, $17, $16, $18, $08, $f4, $f4, $f3
18de3     EA E0 E0 DA 
18de7     D7 DA D2 D9 
18deb     DA CF CF D5 
18def     D9 D6 D9 D4 | 	byte	$ea, $e0, $e0, $da, $d7, $da, $d2, $d9, $da, $cf, $cf, $d5, $d9, $d6, $d9, $d4
18df3     CE D2 DE E7 
18df7     E5 E7 F3 06 
18dfb     0B 0F 13 0C 
18dff     0B 0B 0F 11 | 	byte	$ce, $d2, $de, $e7, $e5, $e7, $f3, $06, $0b, $0f, $13, $0c, $0b, $0b, $0f, $11
18e03     17 1D 23 25 
18e07     24 27 37 30 
18e0b     27 2A 2A 2A 
18e0f     21 16 10 11 | 	byte	$17, $1d, $23, $25, $24, $27, $37, $30, $27, $2a, $2a, $2a, $21, $16, $10, $11
18e13     11 17 20 18 
18e17     08 06 F9 FC 
18e1b     F2 E6 E4 E1 
18e1f     DC D7 DE D9 | 	byte	$11, $17, $20, $18, $08, $06, $f9, $fc, $f2, $e6, $e4, $e1, $dc, $d7, $de, $d9
18e23     D6 D0 D3 D4 
18e27     DA DC D6 CE 
18e2b     CD D9 DE DD 
18e2f     E1 E6 EE FB | 	byte	$d6, $d0, $d3, $d4, $da, $dc, $d6, $ce, $cd, $d9, $de, $dd, $e1, $e6, $ee, $fb
18e33     09 0E 0C 0C 
18e37     08 0C 0F 09 
18e3b     13 1F 1A 1D 
18e3f     23 29 2F 28 | 	byte	$09, $0e, $0c, $0c, $08, $0c, $0f, $09, $13, $1f, $1a, $1d, $23, $29, $2f, $28
18e43     23 27 2D 22 
18e47     21 18 04 0C 
18e4b     11 17 18 10 
18e4f     02 01 00 F7 | 	byte	$23, $27, $2d, $22, $21, $18, $04, $0c, $11, $17, $18, $10, $02, $01, $00, $f7
18e53     F0 EA E5 DF 
18e57     D9 D7 DA D9 
18e5b     D4 D0 CD D3 
18e5f     DE DA CE C7 | 	byte	$f0, $ea, $e5, $df, $d9, $d7, $da, $d9, $d4, $d0, $cd, $d3, $de, $da, $ce, $c7
18e63     CF D5 D8 D8 
18e67     D8 DF EB F3 
18e6b     06 08 02 0B 
18e6f     0C 04 09 11 | 	byte	$cf, $d5, $d8, $d8, $d8, $df, $eb, $f3, $06, $08, $02, $0b, $0c, $04, $09, $11
18e73     15 15 14 16 
18e77     27 29 21 25 
18e7b     1E 21 27 27 
18e7f     18 0C FE 03 | 	byte	$15, $15, $14, $16, $27, $29, $21, $25, $1e, $21, $27, $27, $18, $0c, $fe, $03
18e83     0D 10 10 0A 
18e87     04 00 FD F8 
18e8b     F6 EC E3 DC 
18e8f     D9 DB DD DA | 	byte	$0d, $10, $10, $0a, $04, $00, $fd, $f8, $f6, $ec, $e3, $dc, $d9, $db, $dd, $da
18e93     D0 CD D2 DA 
18e97     DC D8 CE CA 
18e9b     D3 DA D7 DD 
18e9f     D9 DD EB FB | 	byte	$d0, $cd, $d2, $da, $dc, $d8, $ce, $ca, $d3, $da, $d7, $dd, $d9, $dd, $eb, $fb
18ea3     FF 07 0C 08 
18ea7     0F 08 0F 1B 
18eab     16 12 1B 1F 
18eaf     25 2C 27 24 | 	byte	$ff, $07, $0c, $08, $0f, $08, $0f, $1b, $16, $12, $1b, $1f, $25, $2c, $27, $24
18eb3     25 28 2C 2D 
18eb7     20 0E 06 0B 
18ebb     15 10 12 10 
18ebf     0A 05 02 00 | 	byte	$25, $28, $2c, $2d, $20, $0e, $06, $0b, $15, $10, $12, $10, $0a, $05, $02, $00
18ec3     F8 F4 EC E3 
18ec7     DE E5 E6 DC 
18ecb     D6 D4 D9 E5 
18ecf     E0 D8 D4 D4 | 	byte	$f8, $f4, $ec, $e3, $de, $e5, $e6, $dc, $d6, $d4, $d9, $e5, $e0, $d8, $d4, $d4
18ed3     D4 E1 DD D5 
18ed7     DD DD EB F3 
18edb     F8 02 0B 04 
18edf     03 07 0E 12 | 	byte	$d4, $e1, $dd, $d5, $dd, $dd, $eb, $f3, $f8, $02, $0b, $04, $03, $07, $0e, $12
18ee3     10 0B 13 1E 
18ee7     23 2A 23 23 
18eeb     28 2B 33 30 
18eef     20 10 0F 11 | 	byte	$10, $0b, $13, $1e, $23, $2a, $23, $23, $28, $2b, $33, $30, $20, $10, $0f, $11
18ef3     11 16 18 12 
18ef7     0A 06 04 01 
18efb     02 F2 EA E4 
18eff     E3 EC E8 D5 | 	byte	$11, $16, $18, $12, $0a, $06, $04, $01, $02, $f2, $ea, $e4, $e3, $ec, $e8, $d5
18f03     D3 DF DD E2 
18f07     E2 D8 D5 D7 
18f0b     DB E1 DC D5 
18f0f     DB E0 E5 EF | 	byte	$d3, $df, $dd, $e2, $e2, $d8, $d5, $d7, $db, $e1, $dc, $d5, $db, $e0, $e5, $ef
18f13     FC 00 03 00 
18f17     01 0B 0B 10 
18f1b     09 07 13 1D 
18f1f     22 21 1D 1E | 	byte	$fc, $00, $03, $00, $01, $0b, $0b, $10, $09, $07, $13, $1d, $22, $21, $1d, $1e
18f23     23 30 30 27 
18f27     1A 10 0C 0F 
18f2b     13 10 16 10 
18f2f     07 05 07 00 | 	byte	$23, $30, $30, $27, $1a, $10, $0c, $0f, $13, $10, $16, $10, $07, $05, $07, $00
18f33     01 F8 E3 E7 
18f37     EB E8 E0 D5 
18f3b     D0 DD E0 DD 
18f3f     DD D6 D1 D7 | 	byte	$01, $f8, $e3, $e7, $eb, $e8, $e0, $d5, $d0, $dd, $e0, $dd, $dd, $d6, $d1, $d7
18f43     DF D8 D9 D7 
18f47     DA DA DF EE 
18f4b     F9 FB 00 FB 
18f4f     03 0A 0E 09 | 	byte	$df, $d8, $d9, $d7, $da, $da, $df, $ee, $f9, $fb, $00, $fb, $03, $0a, $0e, $09
18f53     07 0A 0F 1F 
18f57     22 1C 19 23 
18f5b     2B 2E 30 2E 
18f5f     22 17 14 12 | 	byte	$07, $0a, $0f, $1f, $22, $1c, $19, $23, $2b, $2e, $30, $2e, $22, $17, $14, $12
18f63     1B 1B 16 18 
18f67     0C 05 0F 0E 
18f6b     FC F4 EB EE 
18f6f     F0 EA DC DB | 	byte	$1b, $1b, $16, $18, $0c, $05, $0f, $0e, $fc, $f4, $eb, $ee, $f0, $ea, $dc, $db
18f73     D8 DD E3 E0 
18f77     DC D6 D5 DB 
18f7b     DA DC DE D9 
18f7f     D7 D8 DF EF | 	byte	$d8, $dd, $e3, $e0, $dc, $d6, $d5, $db, $da, $dc, $de, $d9, $d7, $d8, $df, $ef
18f83     FD F6 F9 03 
18f87     03 03 0A 0A 
18f8b     01 05 16 20 
18f8f     1A 19 1C 1F | 	byte	$fd, $f6, $f9, $03, $03, $03, $0a, $0a, $01, $05, $16, $20, $1a, $19, $1c, $1f
18f93     2D 2D 31 2D 
18f97     1C 15 1A 12 
18f9b     19 1F 18 0C 
18f9f     0C 0D 12 08 | 	byte	$2d, $2d, $31, $2d, $1c, $15, $1a, $12, $19, $1f, $18, $0c, $0c, $0d, $12, $08
18fa3     F8 F4 F2 EE 
18fa7     EF E8 DC D2 
18fab     D3 E2 DC D4 
18faf     D4 D8 D1 D3 | 	byte	$f8, $f4, $f2, $ee, $ef, $e8, $dc, $d2, $d3, $e2, $dc, $d4, $d4, $d8, $d1, $d3
18fb3     D5 D7 DD D6 
18fb7     CC D7 E7 EE 
18fbb     F0 F7 FE 00 
18fbf     03 0E 08 03 | 	byte	$d5, $d7, $dd, $d6, $cc, $d7, $e7, $ee, $f0, $f7, $fe, $00, $03, $0e, $08, $03
18fc3     05 0F 1D 1E 
18fc7     16 1D 1E 1F 
18fcb     2D 30 2C 28 
18fcf     20 12 11 16 | 	byte	$05, $0f, $1d, $1e, $16, $1d, $1e, $1f, $2d, $30, $2c, $28, $20, $12, $11, $16
18fd3     1B 1C 0E 09 
18fd7     14 16 0C 00 
18fdb     00 FC F0 F1 
18fdf     F5 E8 D8 D8 | 	byte	$1b, $1c, $0e, $09, $14, $16, $0c, $00, $00, $fc, $f0, $f1, $f5, $e8, $d8, $d8
18fe3     DF E0 DA D6 
18fe7     D9 D8 D0 CB 
18feb     DB E0 D4 CA 
18fef     D1 DA DB E7 | 	byte	$df, $e0, $da, $d6, $d9, $d8, $d0, $cb, $db, $e0, $d4, $ca, $d1, $da, $db, $e7
18ff3     F0 EF F4 FE 
18ff7     01 06 00 FF 
18ffb     06 09 13 1C 
18fff     14 11 1A 21 | 	byte	$f0, $ef, $f4, $fe, $01, $06, $00, $ff, $06, $09, $13, $1c, $14, $11, $1a, $21
19003     26 2C 2A 23 
19007     18 0C 0F 19 
1900b     1B 0C 07 0F 
1900f     11 0C 0B 08 | 	byte	$26, $2c, $2a, $23, $18, $0c, $0f, $19, $1b, $0c, $07, $0f, $11, $0c, $0b, $08
19013     F8 F4 F5 F4 
19017     F0 E4 D7 DD 
1901b     E3 DC D8 E1 
1901f     E0 D0 CF DF | 	byte	$f8, $f4, $f5, $f4, $f0, $e4, $d7, $dd, $e3, $dc, $d8, $e1, $e0, $d0, $cf, $df
19023     E0 D8 D9 D2 
19027     D1 D9 E7 EF 
1902b     EC EF FE 04 
1902f     01 07 08 00 | 	byte	$e0, $d8, $d9, $d2, $d1, $d9, $e7, $ef, $ec, $ef, $fe, $04, $01, $07, $08, $00
19033     07 17 1A 1B 
19037     1A 1C 1F 26 
1903b     2B 32 32 26 
1903f     18 19 23 20 | 	byte	$07, $17, $1a, $1b, $1a, $1c, $1f, $26, $2b, $32, $32, $26, $18, $19, $23, $20
19043     19 18 12 13 
19047     1C 1A 10 0A 
1904b     01 FF FD F8 
1904f     F0 E7 E2 DD | 	byte	$19, $18, $12, $13, $1c, $1a, $10, $0a, $01, $ff, $fd, $f8, $f0, $e7, $e2, $dd
19053     DB E3 E2 DA 
19057     D5 D3 D5 DA 
1905b     DD D9 D0 C9 
1905f     CF DD DE DC | 	byte	$db, $e3, $e2, $da, $d5, $d3, $d5, $da, $dd, $d9, $d0, $c9, $cf, $dd, $de, $dc
19063     E7 EE F7 FF 
19067     FE FD FF 01 
1906b     07 10 16 14 
1906f     12 14 17 23 | 	byte	$e7, $ee, $f7, $ff, $fe, $fd, $ff, $01, $07, $10, $16, $14, $12, $14, $17, $23
19073     2F 30 22 1F 
19077     1E 1A 1F 1E 
1907b     14 0F 10 17 
1907f     18 13 0B 05 | 	byte	$2f, $30, $22, $1f, $1e, $1a, $1f, $1e, $14, $0f, $10, $17, $18, $13, $0b, $05
19083     07 02 F8 F7 
19087     F6 E6 DE E3 
1908b     E9 E4 E0 DC 
1908f     D9 D8 DF E5 | 	byte	$07, $02, $f8, $f7, $f6, $e6, $de, $e3, $e9, $e4, $e0, $dc, $d9, $d8, $df, $e5
19093     E2 D9 D8 D8 
19097     DA E3 E6 E3 
1909b     E7 F6 FC FC 
1909f     FE 00 FE 05 | 	byte	$e2, $d9, $d8, $d8, $da, $e3, $e6, $e3, $e7, $f6, $fc, $fc, $fe, $00, $fe, $05
190a3     0C 11 17 14 
190a7     0C 13 23 29 
190ab     2A 29 22 1C 
190af     1E 20 20 1A | 	byte	$0c, $11, $17, $14, $0c, $13, $23, $29, $2a, $29, $22, $1c, $1e, $20, $20, $1a
190b3     11 0C 15 1C 
190b7     12 09 0A 08 
190bb     00 FC FC F6 
190bf     EA E1 E1 E5 | 	byte	$11, $0c, $15, $1c, $12, $09, $0a, $08, $00, $fc, $fc, $f6, $ea, $e1, $e1, $e5
190c3     E4 E3 DD D2 
190c7     D4 DE DF DF 
190cb     DE D6 D0 D6 
190cf     DD DC DC E0 | 	byte	$e4, $e3, $dd, $d2, $d4, $de, $df, $df, $de, $d6, $d0, $d6, $dd, $dc, $dc, $e0
190d3     E9 F3 F9 F8 
190d7     F8 FF FC FF 
190db     0D 17 12 0C 
190df     0D 15 1F 2A | 	byte	$e9, $f3, $f9, $f8, $f8, $ff, $fc, $ff, $0d, $17, $12, $0c, $0d, $15, $1f, $2a
190e3     2C 24 20 22 
190e7     22 26 24 18 
190eb     10 17 1D 1A 
190ef     17 14 0E 0C | 	byte	$2c, $24, $20, $22, $22, $26, $24, $18, $10, $17, $1d, $1a, $17, $14, $0e, $0c
190f3     09 08 05 FC 
190f7     F0 E7 E4 EB 
190fb     EF E4 D9 D7 
190ff     D9 DB E3 E3 | 	byte	$09, $08, $05, $fc, $f0, $e7, $e4, $eb, $ef, $e4, $d9, $d7, $d9, $db, $e3, $e3
19103     DC D7 D6 D5 
19107     D8 DE D8 D9 
1910b     E3 EF F0 F7 
1910f     F8 F4 F4 FF | 	byte	$dc, $d7, $d6, $d5, $d8, $de, $d8, $d9, $e3, $ef, $f0, $f7, $f8, $f4, $f4, $ff
19113     09 0F 10 08 
19117     03 0B 1B 23 
1911b     25 22 1A 19 
1911f     23 26 1C 15 | 	byte	$09, $0f, $10, $08, $03, $0b, $1b, $23, $25, $22, $1a, $19, $23, $26, $1c, $15
19123     13 13 17 18 
19127     18 14 0B 0C 
1912b     0C 08 05 02 
1912f     F0 E3 E9 EC | 	byte	$13, $13, $17, $18, $18, $14, $0b, $0c, $0c, $08, $05, $02, $f0, $e3, $e9, $ec
19133     EB E7 DC D0 
19137     D5 DF E1 E1 
1913b     DE D9 D6 DD 
1913f     DB DB DE DF | 	byte	$eb, $e7, $dc, $d0, $d5, $df, $e1, $e1, $de, $d9, $d6, $dd, $db, $db, $de, $df
19143     E3 EB F7 FC 
19147     F8 F4 F7 00 
1914b     0E 16 11 08 
1914f     07 0F 1B 2C | 	byte	$e3, $eb, $f7, $fc, $f8, $f4, $f7, $00, $0e, $16, $11, $08, $07, $0f, $1b, $2c
19153     2A 1C 1F 27 
19157     2B 27 21 20 
1915b     1A 15 18 22 
1915f     1C 14 10 08 | 	byte	$2a, $1c, $1f, $27, $2b, $27, $21, $20, $1a, $15, $18, $22, $1c, $14, $10, $08
19163     0D 12 0C FC 
19167     F4 E8 E7 ED 
1916b     EF E4 D6 D2 
1916f     CF D7 DE DC | 	byte	$0d, $12, $0c, $fc, $f4, $e8, $e7, $ed, $ef, $e4, $d6, $d2, $cf, $d7, $de, $dc
19173     D2 D3 D4 D0 
19177     D0 D7 D6 D0 
1917b     D7 E5 F1 F3 
1917f     EC E9 EF FF | 	byte	$d2, $d3, $d4, $d0, $d0, $d7, $d6, $d0, $d7, $e5, $f1, $f3, $ec, $e9, $ef, $ff
19183     07 07 10 08 
19187     FC 07 1F 28 
1918b     1C 17 1E 28 
1918f     23 23 24 1A | 	byte	$07, $07, $10, $08, $fc, $07, $1f, $28, $1c, $17, $1e, $28, $23, $23, $24, $1a
19193     13 16 16 1B 
19197     1C 10 08 0A 
1919b     11 0E 0B 00 
1919f     F0 EC F0 F0 | 	byte	$13, $16, $16, $1b, $1c, $10, $08, $0a, $11, $0e, $0b, $00, $f0, $ec, $f0, $f0
191a3     ED E9 D8 CD 
191a7     D5 DF DC D4 
191ab     D7 D9 D3 D1 
191af     D5 DA D3 D3 | 	byte	$ed, $e9, $d8, $cd, $d5, $df, $dc, $d4, $d7, $d9, $d3, $d1, $d5, $da, $d3, $d3
191b3     D9 E7 F8 F0 
191b7     E9 EF F6 FB 
191bb     0B 15 11 04 
191bf     03 17 23 21 | 	byte	$d9, $e7, $f8, $f0, $e9, $ef, $f6, $fb, $0b, $15, $11, $04, $03, $17, $23, $21
191c3     1C 22 22 26 
191c7     28 27 25 1E 
191cb     18 10 17 1F 
191cf     1A 10 09 0A | 	byte	$1c, $22, $22, $26, $28, $27, $25, $1e, $18, $10, $17, $1f, $1a, $10, $09, $0a
191d3     0F 15 0A 00 
191d7     F9 F4 EF F1 
191db     F8 EC D9 D7 
191df     DB E0 DB DF | 	byte	$0f, $15, $0a, $00, $f9, $f4, $ef, $f1, $f8, $ec, $d9, $d7, $db, $e0, $db, $df
191e3     DE D8 DA D8 
191e7     DF E0 D3 CF 
191eb     E5 ED F1 F4 
191ef     F4 ED EF FF | 	byte	$de, $d8, $da, $d8, $df, $e0, $d3, $cf, $e5, $ed, $f1, $f4, $f4, $ed, $ef, $ff
191f3     13 16 08 07 
191f7     0D 17 1E 23 
191fb     20 1F 23 28 
191ff     2B 2C 28 1C | 	byte	$13, $16, $08, $07, $0d, $17, $1e, $23, $20, $1f, $23, $28, $2b, $2c, $28, $1c
19203     18 18 1A 1F 
19207     1A 0C 09 0E 
1920b     14 10 0D 04 
1920f     F5 F0 F3 FC | 	byte	$18, $18, $1a, $1f, $1a, $0c, $09, $0e, $14, $10, $0d, $04, $f5, $f0, $f3, $fc
19213     F0 E5 E0 DA 
19217     D7 DF DF DE 
1921b     DE D5 DA E3 
1921f     E0 D4 D5 D9 | 	byte	$f0, $e5, $e0, $da, $d7, $df, $df, $de, $de, $d5, $da, $e3, $e0, $d4, $d5, $d9
19223     DD E4 EF F8 
19227     E8 DD EF 05 
1922b     07 01 01 05 
1922f     09 0D 15 18 | 	byte	$dd, $e4, $ef, $f8, $e8, $dd, $ef, $05, $07, $01, $01, $05, $09, $0d, $15, $18
19233     1B 1B 18 23 
19237     28 26 21 18 
1923b     12 16 1D 18 
1923f     12 0D 0B 0C | 	byte	$1b, $1b, $18, $23, $28, $26, $21, $18, $12, $16, $1d, $18, $12, $0d, $0b, $0c
19243     0D 15 10 00 
19247     F2 FD F6 F3 
1924b     F2 E9 E1 D7 
1924f     D4 DD E6 D9 | 	byte	$0d, $15, $10, $00, $f2, $fd, $f6, $f3, $f2, $e9, $e1, $d7, $d4, $dd, $e6, $d9
19253     D2 D8 E2 E0 
19257     D7 D7 DA D4 
1925b     D7 E7 F5 F0 
1925f     E0 E3 F5 01 | 	byte	$d2, $d8, $e2, $e0, $d7, $d7, $da, $d4, $d7, $e7, $f5, $f0, $e0, $e3, $f5, $01
19263     04 05 02 0B 
19267     0B 0F 17 1E 
1926b     1C 18 1C 27 
1926f     2F 29 20 1C | 	byte	$04, $05, $02, $0b, $0b, $0f, $17, $1e, $1c, $18, $1c, $27, $2f, $29, $20, $1c
19273     1B 1D 1D 16 
19277     1C 18 07 0F 
1927b     1C 19 0C 01 
1927f     00 04 FC F5 | 	byte	$1b, $1d, $1d, $16, $1c, $18, $07, $0f, $1c, $19, $0c, $01, $00, $04, $fc, $f5
19283     FA F4 E0 D7 
19287     DF E3 DE D6 
1928b     DB DE DA DA 
1928f     DE DA D0 CC | 	byte	$fa, $f4, $e0, $d7, $df, $e3, $de, $d6, $db, $de, $da, $da, $de, $da, $d0, $cc
19293     DF EB EA E4 
19297     DB E6 F3 F9 
1929b     FB 00 04 05 
1929f     07 0B 16 19 | 	byte	$df, $eb, $ea, $e4, $db, $e6, $f3, $f9, $fb, $00, $04, $05, $07, $0b, $16, $19
192a3     13 13 1D 24 
192a7     2D 22 1A 1F 
192ab     1C 15 1D 1C 
192af     12 0D 0C 15 | 	byte	$13, $13, $1d, $24, $2d, $22, $1a, $1f, $1c, $15, $1d, $1c, $12, $0d, $0c, $15
192b3     19 10 06 08 
192b7     00 FA FC 01 
192bb     FA E8 DB E1 
192bf     E0 DE DA D9 | 	byte	$19, $10, $06, $08, $00, $fa, $fc, $01, $fa, $e8, $db, $e1, $e0, $de, $da, $d9
192c3     DC D7 DE E3 
192c7     DC D1 CF D5 
192cb     E3 E6 E1 E0 
192cf     E1 E5 EC F7 | 	byte	$dc, $d7, $de, $e3, $dc, $d1, $cf, $d5, $e3, $e6, $e1, $e0, $e1, $e5, $ec, $f7
192d3     FD 00 01 02 
192d7     0D 10 15 18 
192db     0E 17 29 27 
192df     24 27 26 1D | 	byte	$fd, $00, $01, $02, $0d, $10, $15, $18, $0e, $17, $29, $27, $24, $27, $26, $1d
192e3     1F 20 21 1C 
192e7     10 13 18 14 
192eb     16 16 10 04 
192ef     FF 06 07 00 | 	byte	$1f, $20, $21, $1c, $10, $13, $18, $14, $16, $16, $10, $04, $ff, $06, $07, $00
192f3     F8 E9 E7 E4 
192f7     DB DE E0 D9 
192fb     D4 D9 E2 E3 
192ff     D4 CB CF DB | 	byte	$f8, $e9, $e7, $e4, $db, $de, $e0, $d9, $d4, $d9, $e2, $e3, $d4, $cb, $cf, $db
19303     DE DF DD DE 
19307     DE DE EB F7 
1930b     F6 FE 01 01 
1930f     0F 17 12 0F | 	byte	$de, $df, $dd, $de, $de, $de, $eb, $f7, $f6, $fe, $01, $01, $0f, $17, $12, $0f
19313     17 19 1F 27 
19317     29 28 20 19 
1931b     21 22 18 10 
1931f     11 14 0C 0D | 	byte	$17, $19, $1f, $27, $29, $28, $20, $19, $21, $22, $18, $10, $11, $14, $0c, $0d
19323     14 10 02 FC 
19327     FB 03 00 F8 
1932b     F4 EC E1 DE 
1932f     DF E1 DA D0 | 	byte	$14, $10, $02, $fc, $fb, $03, $00, $f8, $f4, $ec, $e1, $de, $df, $e1, $da, $d0
19333     D7 E3 E3 DA 
19337     D3 CF DA DC 
1933b     DA E1 E0 DA 
1933f     DE E1 E9 F7 | 	byte	$d7, $e3, $e3, $da, $d3, $cf, $da, $dc, $da, $e1, $e0, $da, $de, $e1, $e9, $f7
19343     FA F3 FE 0B 
19347     0E 0F 0E 10 
1934b     14 19 23 2B 
1934f     2A 25 21 27 | 	byte	$fa, $f3, $fe, $0b, $0e, $0f, $0e, $10, $14, $19, $23, $2b, $2a, $25, $21, $27
19353     27 20 1F 1E 
19357     19 14 10 1A 
1935b     19 0E 04 03 
1935f     07 05 02 00 | 	byte	$27, $20, $1f, $1e, $19, $14, $10, $1a, $19, $0e, $04, $03, $07, $05, $02, $00
19363     FA EE E2 E5 
19367     E6 DE D7 D6 
1936b     DF E8 E0 DC 
1936f     DD D8 D8 E1 | 	byte	$fa, $ee, $e2, $e5, $e6, $de, $d7, $d6, $df, $e8, $e0, $dc, $dd, $d8, $d8, $e1
19373     E3 DF E3 E0 
19377     D9 E3 EE F1 
1937b     F3 F5 FF 08 
1937f     09 0D 0F 11 | 	byte	$e3, $df, $e3, $e0, $d9, $e3, $ee, $f1, $f3, $f5, $ff, $08, $09, $0d, $0f, $11
19383     0D 17 2A 28 
19387     27 29 29 29 
1938b     28 28 27 23 
1938f     1C 18 1C 1E | 	byte	$0d, $17, $2a, $28, $27, $29, $29, $29, $28, $28, $27, $23, $1c, $18, $1c, $1e
19393     1A 10 08 09 
19397     04 04 09 02 
1939b     F4 EA E4 EA 
1939f     E2 D4 D2 DD | 	byte	$1a, $10, $08, $09, $04, $04, $09, $02, $f4, $ea, $e4, $ea, $e2, $d4, $d2, $dd
193a3     DD DC E1 DA 
193a7     D8 D9 D7 DF 
193ab     E6 E2 DE DB 
193af     DD E8 EB ED | 	byte	$dd, $dc, $e1, $da, $d8, $d9, $d7, $df, $e6, $e2, $de, $db, $dd, $e8, $eb, $ed
193b3     EF F9 FE 01 
193b7     0F 0E 08 0A 
193bb     11 1A 1D 21 
193bf     25 26 23 1F | 	byte	$ef, $f9, $fe, $01, $0f, $0e, $08, $0a, $11, $1a, $1d, $21, $25, $26, $23, $1f
193c3     23 27 20 19 
193c7     14 17 1B 13 
193cb     13 0C 03 01 
193cf     03 07 06 00 | 	byte	$23, $27, $20, $19, $14, $17, $1b, $13, $13, $0c, $03, $01, $03, $07, $06, $00
193d3     EC EB EE E2 
193d7     DB D8 D4 D9 
193db     DE DE E0 DD 
193df     D8 D5 DD E9 | 	byte	$ec, $eb, $ee, $e2, $db, $d8, $d4, $d9, $de, $de, $e0, $dd, $d8, $d5, $dd, $e9
193e3     E6 E0 DF E2 
193e7     E7 E3 E9 F3 
193eb     F2 F5 FF 0B 
193ef     0A 08 09 0A | 	byte	$e6, $e0, $df, $e2, $e7, $e3, $e9, $f3, $f2, $f5, $ff, $0b, $0a, $08, $09, $0a
193f3     0D 18 19 1F 
193f7     23 24 1C 1F 
193fb     2E 24 1E 1C 
193ff     1E 1C 1A 1B | 	byte	$0d, $18, $19, $1f, $23, $24, $1c, $1f, $2e, $24, $1e, $1c, $1e, $1c, $1a, $1b
19403     17 14 05 03 
19407     13 14 03 FF 
1940b     F9 F4 F1 E4 
1940f     DF DC DB D8 | 	byte	$17, $14, $05, $03, $13, $14, $03, $ff, $f9, $f4, $f1, $e4, $df, $dc, $db, $d8
19413     DD E3 E0 D9 
19417     D5 D9 E7 E4 
1941b     E0 E2 E4 DC 
1941f     E0 E7 ED E7 | 	byte	$dd, $e3, $e0, $d9, $d5, $d9, $e7, $e4, $e0, $e2, $e4, $dc, $e0, $e7, $ed, $e7
19423     EE F8 03 07 
19427     07 09 08 0D 
1942b     0C 0F 1C 20 
1942f     1E 19 1D 23 | 	byte	$ee, $f8, $03, $07, $07, $09, $08, $0d, $0c, $0f, $1c, $20, $1e, $19, $1d, $23
19433     23 20 17 19 
19437     1C 12 17 1D 
1943b     0C 01 07 0F 
1943f     0F 06 00 FE | 	byte	$23, $20, $17, $19, $1c, $12, $17, $1d, $0c, $01, $07, $0f, $0f, $06, $00, $fe
19443     F9 EE E8 E7 
19447     DD D7 D3 D9 
1944b     DF DC D1 CF 
1944f     D4 DA D9 DF | 	byte	$f9, $ee, $e8, $e7, $dd, $d7, $d3, $d9, $df, $dc, $d1, $cf, $d4, $da, $d9, $df
19453     E1 D8 DB DE 
19457     E3 E2 E5 E9 
1945b     F1 FF 01 06 
1945f     0B 0B 07 07 | 	byte	$e1, $d8, $db, $de, $e3, $e2, $e5, $e9, $f1, $ff, $01, $06, $0b, $0b, $07, $07
19463     13 1A 1C 1F 
19467     18 1D 29 22 
1946b     1C 20 1A 15 
1946f     1A 20 1B 0E | 	byte	$13, $1a, $1c, $1f, $18, $1d, $29, $22, $1c, $20, $1a, $15, $1a, $20, $1b, $0e
19473     07 0B 16 10 
19477     0E 0D 08 FD 
1947b     F9 F6 F4 E4 
1947f     D9 DD E5 E6 | 	byte	$07, $0b, $16, $10, $0e, $0d, $08, $fd, $f9, $f6, $f4, $e4, $d9, $dd, $e5, $e6
19483     D8 DA DA D8 
19487     D9 E3 E4 DF 
1948b     E0 DE DF E3 
1948f     E3 E1 E3 EF | 	byte	$d8, $da, $da, $d8, $d9, $e3, $e4, $df, $e0, $de, $df, $e3, $e3, $e1, $e3, $ef
19493     FB FD 07 0C 
19497     08 07 08 0F 
1949b     1D 18 17 1F 
1949f     23 20 20 27 | 	byte	$fb, $fd, $07, $0c, $08, $07, $08, $0f, $1d, $18, $17, $1f, $23, $20, $20, $27
194a3     20 1A 12 1D 
194a7     21 1C 0C 09 
194ab     0C 0D 0D 0B 
194af     11 09 03 FC | 	byte	$20, $1a, $12, $1d, $21, $1c, $0c, $09, $0c, $0d, $0d, $0b, $11, $09, $03, $fc
194b3     FE FC EC E0 
194b7     DF E3 E0 DF 
194bb     E0 D8 D3 D8 
194bf     DC E1 DE DF | 	byte	$fe, $fc, $ec, $e0, $df, $e3, $e0, $df, $e0, $d8, $d3, $d8, $dc, $e1, $de, $df
194c3     DD DA DF E0 
194c7     D8 DD E2 E7 
194cb     F3 F7 FF 0D 
194cf     06 FB 07 17 | 	byte	$dd, $da, $df, $e0, $d8, $dd, $e2, $e7, $f3, $f7, $ff, $0d, $06, $fb, $07, $17
194d3     13 13 17 21 
194d7     1C 1D 23 27 
194db     18 11 1B 1F 
194df     20 13 10 0D | 	byte	$13, $13, $17, $21, $1c, $1d, $23, $27, $18, $11, $1b, $1f, $20, $13, $10, $0d
194e3     06 07 09 0E 
194e7     0F 04 FD 05 
194eb     04 F6 EE E8 
194ef     E0 E4 E3 E3 | 	byte	$06, $07, $09, $0e, $0f, $04, $fd, $05, $04, $f6, $ee, $e8, $e0, $e4, $e3, $e3
194f3     DD D8 D9 DB 
194f7     D9 E1 E4 DE 
194fb     DF DB DD E0 
194ff     DB D7 E3 E5 | 	byte	$dd, $d8, $d9, $db, $d9, $e1, $e4, $de, $df, $db, $dd, $e0, $db, $d7, $e3, $e5
19503     E7 F6 05 06 
19507     00 03 0B 15 
1950b     10 15 1F 1F 
1950f     1D 23 2E 2A | 	byte	$e7, $f6, $05, $06, $00, $03, $0b, $15, $10, $15, $1f, $1f, $1d, $23, $2e, $2a
19513     1C 1D 24 27 
19517     24 1C 18 10 
1951b     08 07 16 12 
1951f     08 0B 0B 07 | 	byte	$1c, $1d, $24, $27, $24, $1c, $18, $10, $08, $07, $16, $12, $08, $0b, $0b, $07
19523     03 00 F8 EE 
19527     E5 EB EA E2 
1952b     E1 DD D9 DE 
1952f     DF DF E3 DE | 	byte	$03, $00, $f8, $ee, $e5, $eb, $ea, $e2, $e1, $dd, $d9, $de, $df, $df, $e3, $de
19533     DF E1 E0 D8 
19537     D7 DC D8 DA 
1953b     E5 F7 FA F7 
1953f     FB 01 02 07 | 	byte	$df, $e1, $e0, $d8, $d7, $dc, $d8, $da, $e5, $f7, $fa, $f7, $fb, $01, $02, $07
19543     0D 16 12 0F 
19547     1B 23 24 20 
1954b     1A 1F 25 20 
1954f     1D 23 1A 08 | 	byte	$0d, $16, $12, $0f, $1b, $23, $24, $20, $1a, $1f, $25, $20, $1d, $23, $1a, $08
19553     07 0E 11 0C 
19557     07 0E 0A 07 
1955b     07 00 F2 F2 
1955f     EA E7 E9 E2 | 	byte	$07, $0e, $11, $0c, $07, $0e, $0a, $07, $07, $00, $f2, $f2, $ea, $e7, $e9, $e2
19563     E0 DC D8 DB 
19567     E3 E0 DC E3 
1956b     E7 E0 DC DF 
1956f     E3 D9 D3 DF | 	byte	$e0, $dc, $d8, $db, $e3, $e0, $dc, $e3, $e7, $e0, $dc, $df, $e3, $d9, $d3, $df
19573     EE F5 F2 FB 
19577     04 FC FF 0C 
1957b     0F 0F 0E 0F 
1957f     1D 24 1A 1A | 	byte	$ee, $f5, $f2, $fb, $04, $fc, $ff, $0c, $0f, $0f, $0e, $0f, $1d, $24, $1a, $1a
19583     22 1E 1F 25 
19587     25 21 12 0E 
1958b     12 10 10 13 
1958f     0A 0E 11 0B | 	byte	$22, $1e, $1f, $25, $25, $21, $12, $0e, $12, $10, $10, $13, $0a, $0e, $11, $0b
19593     06 01 FA F2 
19597     F0 EC EA E8 
1959b     DE D7 DB E1 
1959f     DC D7 DF E7 | 	byte	$06, $01, $fa, $f2, $f0, $ec, $ea, $e8, $de, $d7, $db, $e1, $dc, $d7, $df, $e7
195a3     E0 DB DF E3 
195a7     DD D0 D7 E4 
195ab     E8 EF F7 FD 
195af     FE FE 03 0F | 	byte	$e0, $db, $df, $e3, $dd, $d0, $d7, $e4, $e8, $ef, $f7, $fd, $fe, $fe, $03, $0f
195b3     0E 04 0F 1C 
195b7     1B 1B 1C 1E 
195bb     1D 1B 25 28 
195bf     20 1F 16 0B | 	byte	$0e, $04, $0f, $1c, $1b, $1b, $1c, $1e, $1d, $1b, $25, $28, $20, $1f, $16, $0b
195c3     0F 15 10 0B 
195c7     0E 10 0F 0D 
195cb     06 01 FE F6 
195cf     F0 F1 EC E2 | 	byte	$0f, $15, $10, $0b, $0e, $10, $0f, $0d, $06, $01, $fe, $f6, $f0, $f1, $ec, $e2
195d3     DB DF DE DA 
195d7     D8 DB E6 E0 
195db     D9 E4 E6 DA 
195df     D4 D4 D6 DE | 	byte	$db, $df, $de, $da, $d8, $db, $e6, $e0, $d9, $e4, $e6, $da, $d4, $d4, $d6, $de
195e3     E3 EB F8 F6 
195e7     F3 FF 07 05 
195eb     06 09 11 11 
195ef     14 1C 1A 14 | 	byte	$e3, $eb, $f8, $f6, $f3, $ff, $07, $05, $06, $09, $11, $11, $14, $1c, $1a, $14
195f3     1A 20 21 23 
195f7     22 18 13 13 
195fb     0F 0D 0F 0A 
195ff     0B 0F 0C 08 | 	byte	$1a, $20, $21, $23, $22, $18, $13, $13, $0f, $0d, $0f, $0a, $0b, $0f, $0c, $08
19603     09 04 F8 F7 
19607     F8 F3 E8 E0 
1960b     E0 E0 D8 D7 
1960f     DE E0 DB DF | 	byte	$09, $04, $f8, $f7, $f8, $f3, $e8, $e0, $e0, $e0, $d8, $d7, $de, $e0, $db, $df
19613     E1 E3 E2 D8 
19617     D9 D7 D0 D9 
1961b     E9 EC EF F3 
1961f     FC 06 02 FF | 	byte	$e1, $e3, $e2, $d8, $d9, $d7, $d0, $d9, $e9, $ec, $ef, $f3, $fc, $06, $02, $ff
19623     0B 0D 0F 17 
19627     1C 18 1C 1C 
1962b     19 23 2C 27 
1962f     24 1F 16 15 | 	byte	$0b, $0d, $0f, $17, $1c, $18, $1c, $1c, $19, $23, $2c, $27, $24, $1f, $16, $15
19633     18 14 0F 13 
19637     13 10 13 13 
1963b     0E 04 01 06 
1963f     02 F2 EC F2 | 	byte	$18, $14, $0f, $13, $13, $10, $13, $13, $0e, $04, $01, $06, $02, $f2, $ec, $f2
19643     E8 DD DD DF 
19647     E2 DE DA E3 
1964b     E8 E0 DF E0 
1964f     D4 D1 D3 DB | 	byte	$e8, $dd, $dd, $df, $e2, $de, $da, $e3, $e8, $e0, $df, $e0, $d4, $d1, $d3, $db
19653     E3 E3 EB F7 
19657     FA FB 03 04 
1965b     01 0D 11 0F 
1965f     17 1B 17 13 | 	byte	$e3, $e3, $eb, $f7, $fa, $fb, $03, $04, $01, $0d, $11, $0f, $17, $1b, $17, $13
19663     1A 21 26 26 
19667     20 1C 1E 16 
1966b     10 11 12 0F 
1966f     0F 0F 15 12 | 	byte	$1a, $21, $26, $26, $20, $1c, $1e, $16, $10, $11, $12, $0f, $0f, $0f, $15, $12
19673     03 06 0C 02 
19677     FA F5 F0 F0 
1967b     E4 DA E1 E1 
1967f     D9 DD E0 E0 | 	byte	$03, $06, $0c, $02, $fa, $f5, $f0, $f0, $e4, $da, $e1, $e1, $d9, $dd, $e0, $e0
19683     E3 E1 E4 DE 
19687     D1 CF D8 D8 
1968b     DB E7 EA ED 
1968f     FC FF FB 01 | 	byte	$e3, $e1, $e4, $de, $d1, $cf, $d8, $d8, $db, $e7, $ea, $ed, $fc, $ff, $fb, $01
19693     09 09 0B 13 
19697     15 17 14 0F 
1969b     19 23 22 22 
1969f     23 1E 1A 14 | 	byte	$09, $09, $0b, $13, $15, $17, $14, $0f, $19, $23, $22, $22, $23, $1e, $1a, $14
196a3     0F 16 0E 09 
196a7     13 17 0E 0B 
196ab     0A 0A 0B 00 
196af     FB FE F1 EA | 	byte	$0f, $16, $0e, $09, $13, $17, $0e, $0b, $0a, $0a, $0b, $00, $fb, $fe, $f1, $ea
196b3     E6 DE E0 DF 
196b7     DC DE DE DC 
196bb     E5 E8 DC D7 
196bf     D9 D1 D2 D7 | 	byte	$e6, $de, $e0, $df, $dc, $de, $de, $dc, $e5, $e8, $dc, $d7, $d9, $d1, $d2, $d7
196c3     DC DE EB F1 
196c7     F2 FC 00 FF 
196cb     05 0B 0C 13 
196cf     17 10 11 14 | 	byte	$dc, $de, $eb, $f1, $f2, $fc, $00, $ff, $05, $0b, $0c, $13, $17, $10, $11, $14
196d3     1A 21 1F 23 
196d7     24 1C 14 18 
196db     14 0A 0E 0F 
196df     13 10 09 0F | 	byte	$1a, $21, $1f, $23, $24, $1c, $14, $18, $14, $0a, $0e, $0f, $13, $10, $09, $0f
196e3     10 04 08 09 
196e7     00 FA F4 F0 
196eb     E9 E2 DE E7 
196ef     E2 D9 E3 E8 | 	byte	$10, $04, $08, $09, $00, $fa, $f4, $f0, $e9, $e2, $de, $e7, $e2, $d9, $e3, $e8
196f3     E6 E6 E6 DA 
196f7     D5 DA D4 D2 
196fb     DA E2 E4 EB 
196ff     F3 F8 FD FC | 	byte	$e6, $e6, $e6, $da, $d5, $da, $d4, $d2, $da, $e2, $e4, $eb, $f3, $f8, $fd, $fc
19703     03 0B 0C 0F 
19707     13 11 12 17 
1970b     17 1E 2B 22 
1970f     22 20 1D 1D | 	byte	$03, $0b, $0c, $0f, $13, $11, $12, $17, $17, $1e, $2b, $22, $22, $20, $1d, $1d
19713     10 0B 16 14 
19717     0E 0F 13 0E 
1971b     0C 0C 0D 0E 
1971f     01 FF 00 F1 | 	byte	$10, $0b, $16, $14, $0e, $0f, $13, $0e, $0c, $0c, $0d, $0e, $01, $ff, $00, $f1
19723     E4 E7 EA E3 
19727     E0 E3 E2 E7 
1972b     ED E5 E0 E1 
1972f     DA D2 D2 D2 | 	byte	$e4, $e7, $ea, $e3, $e0, $e3, $e2, $e7, $ed, $e5, $e0, $e1, $da, $d2, $d2, $d2
19733     D9 DD DD E5 
19737     ED F3 F3 F8 
1973b     FB 09 0B 07 
1973f     0E 0C 09 0F | 	byte	$d9, $dd, $dd, $e5, $ed, $f3, $f3, $f8, $fb, $09, $0b, $07, $0e, $0c, $09, $0f
19743     16 1E 22 1C 
19747     1F 20 18 11 
1974b     14 0D 0F 11 
1974f     0D 10 12 0B | 	byte	$16, $1e, $22, $1c, $1f, $20, $18, $11, $14, $0d, $0f, $11, $0d, $10, $12, $0b
19753     0B 0F 0C 0A 
19757     0B 02 F6 F4 
1975b     EE E7 E9 E8 
1975f     DC E2 E7 E4 | 	byte	$0b, $0f, $0c, $0a, $0b, $02, $f6, $f4, $ee, $e7, $e9, $e8, $dc, $e2, $e7, $e4
19763     E8 E8 E5 DE 
19767     D8 D6 D5 D3 
1976b     D3 DE DE E3 
1976f     EF F0 EF F9 | 	byte	$e8, $e8, $e5, $de, $d8, $d6, $d5, $d3, $d3, $de, $de, $e3, $ef, $f0, $ef, $f9
19773     FF 07 09 08 
19777     0C 08 07 0F 
1977b     18 18 1F 24 
1977f     1E 1D 1C 16 | 	byte	$ff, $07, $09, $08, $0c, $08, $07, $0f, $18, $18, $1f, $24, $1e, $1d, $1c, $16
19783     11 0E 11 12 
19787     11 0A 0E 13 
1978b     0A 07 0F 10 
1978f     04 01 F8 F0 | 	byte	$11, $0e, $11, $12, $11, $0a, $0e, $13, $0a, $07, $0f, $10, $04, $01, $f8, $f0
19793     EE EB E6 E0 
19797     E2 E2 E3 E3 
1979b     EB EC E5 E0 
1979f     DF D8 D6 D8 | 	byte	$ee, $eb, $e6, $e0, $e2, $e2, $e3, $e3, $eb, $ec, $e5, $e0, $df, $d8, $d6, $d8
197a3     D7 DD DF E7 
197a7     EE F0 F1 FB 
197ab     01 06 0C 09 
197af     06 0B 0A 0D | 	byte	$d7, $dd, $df, $e7, $ee, $f0, $f1, $fb, $01, $06, $0c, $09, $06, $0b, $0a, $0d
197b3     15 1A 21 22 
197b7     20 19 1D 18 
197bb     0E 11 17 10 
197bf     0B 14 0F 0A | 	byte	$15, $1a, $21, $22, $20, $19, $1d, $18, $0e, $11, $17, $10, $0b, $14, $0f, $0a
197c3     08 0D 10 0F 
197c7     08 00 FA F5 
197cb     ED E9 E6 E6 
197cf     E3 DC E1 E5 | 	byte	$08, $0d, $10, $0f, $08, $00, $fa, $f5, $ed, $e9, $e6, $e6, $e3, $dc, $e1, $e5
197d3     E9 EC E5 E0 
197d7     E0 DC D6 D7 
197db     D9 DD E3 E7 
197df     EF F4 F2 FF | 	byte	$e9, $ec, $e5, $e0, $e0, $dc, $d6, $d7, $d9, $dd, $e3, $e7, $ef, $f4, $f2, $ff
197e3     09 0A 0A 0E 
197e7     0A 07 0A 0E 
197eb     17 1C 1F 1C 
197ef     20 1C 14 15 | 	byte	$09, $0a, $0a, $0e, $0a, $07, $0a, $0e, $17, $1c, $1f, $1c, $20, $1c, $14, $15
197f3     15 11 0F 13 
197f7     13 10 12 0D 
197fb     09 12 16 13 
197ff     08 05 04 F5 | 	byte	$15, $11, $0f, $13, $13, $10, $12, $0d, $09, $12, $16, $13, $08, $05, $04, $f5
19803     F0 F1 EC E4 
19807     E5 E3 E4 E9 
1980b     EB EC E8 E3 
1980f     E6 E0 D6 DA | 	byte	$f0, $f1, $ec, $e4, $e5, $e3, $e4, $e9, $eb, $ec, $e8, $e3, $e6, $e0, $d6, $da
19813     DB DC E6 EE 
19817     EB EF F7 00 
1981b     06 0B 0C 0B 
1981f     08 01 07 12 | 	byte	$db, $dc, $e6, $ee, $eb, $ef, $f7, $00, $06, $0b, $0c, $0b, $08, $01, $07, $12
19823     13 17 1F 23 
19827     18 14 19 15 
1982b     0F 10 10 12 
1982f     0F 0E 08 07 | 	byte	$13, $17, $1f, $23, $18, $14, $19, $15, $0f, $10, $10, $12, $0f, $0e, $08, $07
19833     0E 12 10 0D 
19837     0D 08 FD F6 
1983b     F0 F1 E8 E2 
1983f     E6 E1 E5 EC | 	byte	$0e, $12, $10, $0d, $0d, $08, $fd, $f6, $f0, $f1, $e8, $e2, $e6, $e1, $e5, $ec
19843     EC EA EA E6 
19847     E2 E0 D8 D4 
1984b     DA E1 E1 E7 
1984f     EB EF F9 FC | 	byte	$ec, $ea, $ea, $e6, $e2, $e0, $d8, $d4, $da, $e1, $e1, $e7, $eb, $ef, $f9, $fc
19853     02 0B 0F 06 
19857     00 07 0D 08 
1985b     13 1B 1C 1B 
1985f     17 17 17 10 | 	byte	$02, $0b, $0f, $06, $00, $07, $0d, $08, $13, $1b, $1c, $1b, $17, $17, $17, $10
19863     0E 0F 13 13 
19867     0C 06 07 0C 
1986b     08 0F 10 11 
1986f     0C 01 FC FA | 	byte	$0e, $0f, $13, $13, $0c, $06, $07, $0c, $08, $0f, $10, $11, $0c, $01, $fc, $fa
19873     F6 F0 E6 E3 
19877     E9 E7 E3 E9 
1987b     F0 EA E5 EB 
1987f     E6 DC D4 D7 | 	byte	$f6, $f0, $e6, $e3, $e9, $e7, $e3, $e9, $f0, $ea, $e5, $eb, $e6, $dc, $d4, $d7
19883     DE DE DF E5 
19887     EC EF EF F9 
1988b     0D 0C 04 05 
1988f     06 07 07 0A | 	byte	$de, $de, $df, $e5, $ec, $ef, $ef, $f9, $0d, $0c, $04, $05, $06, $07, $07, $0a
19893     13 1A 1C 19 
19897     19 18 18 10 
1989b     0D 17 1A 12 
1989f     0B 0B 0F 0A | 	byte	$13, $1a, $1c, $19, $19, $18, $18, $10, $0d, $17, $1a, $12, $0b, $0b, $0f, $0a
198a3     0B 14 17 12 
198a7     0E 06 00 00 
198ab     FC EE EA EC 
198af     E8 E6 EA EF | 	byte	$0b, $14, $17, $12, $0e, $06, $00, $00, $fc, $ee, $ea, $ec, $e8, $e6, $ea, $ef
198b3     EE EB ED ED 
198b7     E4 DA D5 DB 
198bb     DE D5 DB E6 
198bf     E2 E2 EB F9 | 	byte	$ee, $eb, $ed, $ed, $e4, $da, $d5, $db, $de, $d5, $db, $e6, $e2, $e2, $eb, $f9
198c3     01 02 FD 01 
198c7     00 FA FF 03 
198cb     09 0F 10 11 
198cf     15 13 0C 09 | 	byte	$01, $02, $fd, $01, $00, $fa, $ff, $03, $09, $0f, $10, $11, $15, $13, $0c, $09
198d3     0F 16 0E 09 
198d7     0C 0A 06 06 
198db     0B 11 14 12 
198df     0C 0C 05 FE | 	byte	$0f, $16, $0e, $09, $0c, $0a, $06, $06, $0b, $11, $14, $12, $0c, $0c, $05, $fe
198e3     F8 F3 EE EC 
198e7     E8 E9 E7 EB 
198eb     F2 EF F1 ED 
198ef     E4 DF E1 DA | 	byte	$f8, $f3, $ee, $ec, $e8, $e9, $e7, $eb, $f2, $ef, $f1, $ed, $e4, $df, $e1, $da
198f3     D7 DB DF E0 
198f7     DE E0 EF F6 
198fb     FC 04 04 03 
198ff     03 FE 00 07 | 	byte	$d7, $db, $df, $e0, $de, $e0, $ef, $f6, $fc, $04, $04, $03, $03, $fe, $00, $07
19903     0B 0E 12 18 
19907     1A 11 0F 15 
1990b     15 11 16 14 
1990f     0F 0E 0B 07 | 	byte	$0b, $0e, $12, $18, $1a, $11, $0f, $15, $15, $11, $16, $14, $0f, $0e, $0b, $07
19913     0F 17 18 13 
19917     17 16 08 03 
1991b     05 FA F3 F1 
1991f     ED EE E8 E7 | 	byte	$0f, $17, $18, $13, $17, $16, $08, $03, $05, $fa, $f3, $f1, $ed, $ee, $e8, $e7
19923     EF F6 EE EA 
19927     E8 E3 E0 D8 
1992b     D6 DD D8 D7 
1992f     D9 DE E5 EF | 	byte	$ef, $f6, $ee, $ea, $e8, $e3, $e0, $d8, $d6, $dd, $d8, $d7, $d9, $de, $e5, $ef
19933     F6 FF 04 00 
19937     FC FA 01 02 
1993b     FF 07 17 18 
1993f     0D 0E 13 12 | 	byte	$f6, $ff, $04, $00, $fc, $fa, $01, $02, $ff, $07, $17, $18, $0d, $0e, $13, $12
19943     0F 0F 10 12 
19947     0F 0A 03 09 
1994b     0E 0D 11 16 
1994f     12 12 09 03 | 	byte	$0f, $0f, $10, $12, $0f, $0a, $03, $09, $0e, $0d, $11, $16, $12, $12, $09, $03
19953     03 FC F2 F3 
19957     F1 E6 E5 E9 
1995b     EF F3 EB EC 
1995f     F0 E6 DC DC | 	byte	$03, $fc, $f2, $f3, $f1, $e6, $e5, $e9, $ef, $f3, $eb, $ec, $f0, $e6, $dc, $dc
19963     DA DC DC D5 
19967     D7 DF E5 E9 
1996b     F1 FF 04 FC 
1996f     FB 01 00 FB | 	byte	$da, $dc, $dc, $d5, $d7, $df, $e5, $e9, $f1, $ff, $04, $fc, $fb, $01, $00, $fb
19973     03 0D 14 14 
19977     10 12 15 16 
1997b     10 0F 1B 1A 
1997f     0D 0C 0C 0A | 	byte	$03, $0d, $14, $14, $10, $12, $15, $16, $10, $0f, $1b, $1a, $0d, $0c, $0c, $0a
19983     0D 0D 11 17 
19987     17 0E 0C 07 
1998b     02 FC F6 F4 
1998f     F1 E4 E5 EE | 	byte	$0d, $0d, $11, $17, $17, $0e, $0c, $07, $02, $fc, $f6, $f4, $f1, $e4, $e5, $ee
19993     EE EF EF F0 
19997     F0 E8 DE DF 
1999b     DF E0 DB D8 
1999f     DD E1 E0 E7 | 	byte	$ee, $ef, $ef, $f0, $f0, $e8, $de, $df, $df, $e0, $db, $d8, $dd, $e1, $e0, $e7
199a3     FB 01 FE 02 
199a7     06 01 FE 02 
199ab     0A 12 17 13 
199af     11 1E 1C 12 | 	byte	$fb, $01, $fe, $02, $06, $01, $fe, $02, $0a, $12, $17, $13, $11, $1e, $1c, $12
199b3     16 18 1C 1A 
199b7     12 0F 10 09 
199bb     0B 13 13 15 
199bf     19 12 0E 0C | 	byte	$16, $18, $1c, $1a, $12, $0f, $10, $09, $0b, $13, $13, $15, $19, $12, $0e, $0c
199c3     04 03 00 F4 
199c7     F0 EA EA EE 
199cb     EE EB F1 F6 
199cf     F0 E6 E1 E3 | 	byte	$04, $03, $00, $f4, $f0, $ea, $ea, $ee, $ee, $eb, $f1, $f6, $f0, $e6, $e1, $e3
199d3     E1 DA DB E0 
199d7     DA D7 DF ED 
199db     F2 F6 FF 03 
199df     FF FC F8 FF | 	byte	$e1, $da, $db, $e0, $da, $d7, $df, $ed, $f2, $f6, $ff, $03, $ff, $fc, $f8, $ff
199e3     0C 08 09 13 
199e7     15 14 12 11 
199eb     15 17 13 16 
199ef     14 0D 09 08 | 	byte	$0c, $08, $09, $13, $15, $14, $12, $11, $15, $17, $13, $16, $14, $0d, $09, $08
199f3     08 11 12 15 
199f7     1B 14 0C 0A 
199fb     09 05 00 F8 
199ff     F0 EE EF EC | 	byte	$08, $11, $12, $15, $1b, $14, $0c, $0a, $09, $05, $00, $f8, $f0, $ee, $ef, $ec
19a03     EA EF F7 F8 
19a07     EC E9 EA E2 
19a0b     DA DD E3 D8 
19a0f     D1 D9 DD E7 | 	byte	$ea, $ef, $f7, $f8, $ec, $e9, $ea, $e2, $da, $dd, $e3, $d8, $d1, $d9, $dd, $e7
19a13     EC F1 FF 06 
19a17     F9 F1 FB 01 
19a1b     01 01 07 11 
19a1f     10 0C 11 15 | 	byte	$ec, $f1, $ff, $06, $f9, $f1, $fb, $01, $01, $01, $07, $11, $10, $0c, $11, $15
19a23     11 16 16 16 
19a27     13 0A 08 09 
19a2b     0B 0C 12 19 
19a2f     18 13 0E 0D | 	byte	$11, $16, $16, $16, $13, $0a, $08, $09, $0b, $0c, $12, $19, $18, $13, $0e, $0d
19a33     0F 09 00 F5 
19a37     F5 F8 F0 E7 
19a3b     ED F6 F8 F0 
19a3f     F2 F1 E2 E3 | 	byte	$0f, $09, $00, $f5, $f5, $f8, $f0, $e7, $ed, $f6, $f8, $f0, $f2, $f1, $e2, $e3
19a43     E1 E1 E0 D6 
19a47     D3 DC E0 DD 
19a4b     E7 FB 02 FC 
19a4f     F8 FA 02 FC | 	byte	$e1, $e1, $e0, $d6, $d3, $dc, $e0, $dd, $e7, $fb, $02, $fc, $f8, $fa, $02, $fc
19a53     FA 07 0B 0D 
19a57     0F 0E 11 13 
19a5b     11 14 17 14 
19a5f     10 0D 06 03 | 	byte	$fa, $07, $0b, $0d, $0f, $0e, $11, $13, $11, $14, $17, $14, $10, $0d, $06, $03
19a63     08 0C 0F 16 
19a67     14 10 0E 0F 
19a6b     12 08 FE FC 
19a6f     00 F2 E7 EF | 	byte	$08, $0c, $0f, $16, $14, $10, $0e, $0f, $12, $08, $fe, $fc, $00, $f2, $e7, $ef
19a73     F0 EE F3 F6 
19a77     F4 EC E1 E0 
19a7b     E6 E0 D4 D5 
19a7f     DA D4 D5 DB | 	byte	$f0, $ee, $f3, $f6, $f4, $ec, $e1, $e0, $e6, $e0, $d4, $d5, $da, $d4, $d5, $db
19a83     EF FA F6 F8 
19a87     FD FA F9 FB 
19a8b     00 05 08 0C 
19a8f     10 11 0D 11 | 	byte	$ef, $fa, $f6, $f8, $fd, $fa, $f9, $fb, $00, $05, $08, $0c, $10, $11, $0d, $11
19a93     18 17 18 19 
19a97     14 0D 09 0C 
19a9b     0C 0D 17 1B 
19a9f     17 0F 17 1E | 	byte	$18, $17, $18, $19, $14, $0d, $09, $0c, $0c, $0d, $17, $1b, $17, $0f, $17, $1e
19aa3     10 06 09 04 
19aa7     FA F6 F0 EF 
19aab     EC F0 F6 FD 
19aaf     F0 E7 EB EA | 	byte	$10, $06, $09, $04, $fa, $f6, $f0, $ef, $ec, $f0, $f6, $fd, $f0, $e7, $eb, $ea
19ab3     E4 DA DC E1 
19ab7     D8 CD D7 E6 
19abb     EC F1 F7 FC 
19abf     FC FA F7 FB | 	byte	$e4, $da, $dc, $e1, $d8, $cd, $d7, $e6, $ec, $f1, $f7, $fc, $fc, $fa, $f7, $fb
19ac3     FF 00 09 0F 
19ac7     0B 0F 10 13 
19acb     13 19 1C 19 
19acf     14 0B 09 05 | 	byte	$ff, $00, $09, $0f, $0b, $0f, $10, $13, $13, $19, $1c, $19, $14, $0b, $09, $05
19ad3     05 0F 15 08 
19ad7     0C 13 13 0C 
19adb     08 06 03 FD 
19adf     F2 F1 F0 E2 | 	byte	$05, $0f, $15, $08, $0c, $13, $13, $0c, $08, $06, $03, $fd, $f2, $f1, $f0, $e2
19ae3     E3 EF F8 F0 
19ae7     E7 ED F0 E0 
19aeb     DB E2 E2 D6 
19aef     CF D3 D7 DE | 	byte	$e3, $ef, $f8, $f0, $e7, $ed, $f0, $e0, $db, $e2, $e2, $d6, $cf, $d3, $d7, $de
19af3     E7 EF F8 F8 
19af7     F8 FC F8 F9 
19afb     FF 03 06 0B 
19aff     0D 0C 0D 11 | 	byte	$e7, $ef, $f8, $f8, $f8, $fc, $f8, $f9, $ff, $03, $06, $0b, $0d, $0c, $0d, $11
19b03     15 1C 19 14 
19b07     18 0D 03 05 
19b0b     0E 10 0A 0C 
19b0f     0F 15 12 0A | 	byte	$15, $1c, $19, $14, $18, $0d, $03, $05, $0e, $10, $0a, $0c, $0f, $15, $12, $0a
19b13     0F 0D 02 FF 
19b17     00 F8 E8 E5 
19b1b     F2 F8 F0 EC 
19b1f     F6 F6 E8 E3 | 	byte	$0f, $0d, $02, $ff, $00, $f8, $e8, $e5, $f2, $f8, $f0, $ec, $f6, $f6, $e8, $e3
19b23     E7 E7 E3 D6 
19b27     D5 D8 D7 DD 
19b2b     E7 EF F6 FA 
19b2f     FD F9 F8 FB | 	byte	$e7, $e7, $e3, $d6, $d5, $d8, $d7, $dd, $e7, $ef, $f6, $fa, $fd, $f9, $f8, $fb
19b33     FE 04 03 07 
19b37     0E 08 0B 13 
19b3b     16 16 1B 21 
19b3f     18 0C 0A 0E | 	byte	$fe, $04, $03, $07, $0e, $08, $0b, $13, $16, $16, $1b, $21, $18, $0c, $0a, $0e
19b43     13 0E 0C 16 
19b47     19 12 11 17 
19b4b     16 0B 07 0C 
19b4f     04 F4 EB F3 | 	byte	$13, $0e, $0c, $16, $19, $12, $11, $17, $16, $0b, $07, $0c, $04, $f4, $eb, $f3
19b53     F4 EC F0 F3 
19b57     F7 F2 E8 E9 
19b5b     EC E8 E0 DC 
19b5f     DB D8 D7 DC | 	byte	$f4, $ec, $f0, $f3, $f7, $f2, $e8, $e9, $ec, $e8, $e0, $dc, $db, $d8, $d7, $dc
19b63     E3 EF F4 F9 
19b67     FE F9 FC FD 
19b6b     FD FF 06 09 
19b6f     04 07 0D 0A | 	byte	$e3, $ef, $f4, $f9, $fe, $f9, $fc, $fd, $fd, $ff, $06, $09, $04, $07, $0d, $0a
19b73     0E 16 1D 1E 
19b77     10 09 0E 0E 
19b7b     08 07 0F 10 
19b7f     09 0D 13 12 | 	byte	$0e, $16, $1d, $1e, $10, $09, $0e, $0e, $08, $07, $0f, $10, $09, $0d, $13, $12
19b83     03 07 12 08 
19b87     F8 EE F0 F0 
19b8b     E7 E6 F0 F3 
19b8f     ED E8 E8 E7 | 	byte	$03, $07, $12, $08, $f8, $ee, $f0, $f0, $e7, $e6, $f0, $f3, $ed, $e8, $e8, $e7
19b93     E7 E5 DE DA 
19b97     D8 D4 D5 D9 
19b9b     DF EB F2 F7 
19b9f     FA FE FA F9 | 	byte	$e7, $e5, $de, $da, $d8, $d4, $d5, $d9, $df, $eb, $f2, $f7, $fa, $fe, $fa, $f9
19ba3     02 04 02 07 
19ba7     0B 0C 0A 07 
19bab     0F 1D 20 14 
19baf     10 14 10 0B | 	byte	$02, $04, $02, $07, $0b, $0c, $0a, $07, $0f, $1d, $20, $14, $10, $14, $10, $0b
19bb3     09 13 10 0B 
19bb7     13 19 12 0C 
19bbb     0F 17 14 05 
19bbf     FE FE F8 EC | 	byte	$09, $13, $10, $0b, $13, $19, $12, $0c, $0f, $17, $14, $05, $fe, $fe, $f8, $ec
19bc3     EB F3 F6 F3 
19bc7     EC EA ED E9 
19bcb     E7 E4 E0 DB 
19bcf     D5 D3 D1 D5 | 	byte	$eb, $f3, $f6, $f3, $ec, $ea, $ed, $e9, $e7, $e4, $e0, $db, $d5, $d3, $d1, $d5
19bd3     E1 E5 E9 F5 
19bd7     FB F8 F9 FE 
19bdb     00 00 01 07 
19bdf     0F 08 02 0B | 	byte	$e1, $e5, $e9, $f5, $fb, $f8, $f9, $fe, $00, $00, $01, $07, $0f, $08, $02, $0b
19be3     17 1B 16 17 
19be7     19 0E 09 11 
19beb     11 0C 0B 11 
19bef     18 14 0D 0D | 	byte	$17, $1b, $16, $17, $19, $0e, $09, $11, $11, $0c, $0b, $11, $18, $14, $0d, $0d
19bf3     14 18 10 09 
19bf7     06 00 F8 EB 
19bfb     EF F4 F6 F0 
19bff     ED EE E9 E7 | 	byte	$14, $18, $10, $09, $06, $00, $f8, $eb, $ef, $f4, $f6, $f0, $ed, $ee, $e9, $e7
19c03     E9 E4 DF DC 
19c07     D5 D0 D2 D6 
19c0b     DB E3 EC F3 
19c0f     F8 F7 FC 00 | 	byte	$e9, $e4, $df, $dc, $d5, $d0, $d2, $d6, $db, $e3, $ec, $f3, $f8, $f7, $fc, $00
19c13     FD FD 05 0F 
19c17     0B FF 06 12 
19c1b     12 16 1C 18 
19c1f     0F 0D 11 0F | 	byte	$fd, $fd, $05, $0f, $0b, $ff, $06, $12, $12, $16, $1c, $18, $0f, $0d, $11, $0f
19c23     09 09 0F 16 
19c27     0E 0B 0F 13 
19c2b     13 10 10 0E 
19c2f     08 00 F3 F1 | 	byte	$09, $09, $0f, $16, $0e, $0b, $0f, $13, $13, $10, $10, $0e, $08, $00, $f3, $f1
19c33     F4 F4 F6 F4 
19c37     F0 F1 EE EA 
19c3b     EB E9 E1 DC 
19c3f     D9 D3 D4 D9 | 	byte	$f4, $f4, $f6, $f4, $f0, $f1, $ee, $ea, $eb, $e9, $e1, $dc, $d9, $d3, $d4, $d9
19c43     DF E7 EA F3 
19c47     F9 FF FE F8 
19c4b     FE 09 0B 07 
19c4f     07 09 0B 0D | 	byte	$df, $e7, $ea, $f3, $f9, $ff, $fe, $f8, $fe, $09, $0b, $07, $07, $09, $0b, $0d
19c53     17 1C 1B 13 
19c57     0F 16 10 08 
19c5b     0A 12 14 0C 
19c5f     0A 0F 12 10 | 	byte	$17, $1c, $1b, $13, $0f, $16, $10, $08, $0a, $12, $14, $0c, $0a, $0f, $12, $10
19c63     0E 13 16 0C 
19c67     02 FD F5 F2 
19c6b     F4 F6 F4 F6 
19c6f     F2 EC EE EE | 	byte	$0e, $13, $16, $0c, $02, $fd, $f5, $f2, $f4, $f6, $f4, $f6, $f2, $ec, $ee, $ee
19c73     EE E6 E0 DE 
19c77     D6 D1 D1 D7 
19c7b     E0 E0 E3 F3 
19c7f     FC F8 F6 FE | 	byte	$ee, $e6, $e0, $de, $d6, $d1, $d1, $d7, $e0, $e0, $e3, $f3, $fc, $f8, $f6, $fe
19c83     03 02 06 07 
19c87     06 04 06 0F 
19c8b     19 17 13 13 
19c8f     17 12 09 07 | 	byte	$03, $02, $06, $07, $06, $04, $06, $0f, $19, $17, $13, $13, $17, $12, $09, $07
19c93     0D 13 0C 04 
19c97     0B 11 0C 07 
19c9b     0F 13 10 0A 
19c9f     00 FB F4 F0 | 	byte	$0d, $13, $0c, $04, $0b, $11, $0c, $07, $0f, $13, $10, $0a, $00, $fb, $f4, $f0
19ca3     F2 F3 F3 F0 
19ca7     EF ED EB EC 
19cab     EB E6 E3 E0 
19caf     D2 D1 DA DC | 	byte	$f2, $f3, $f3, $f0, $ef, $ed, $eb, $ec, $eb, $e6, $e3, $e0, $d2, $d1, $da, $dc
19cb3     D7 DF F1 F6 
19cb7     F5 F6 FB 03 
19cbb     03 07 0B 08 
19cbf     04 06 0F 14 | 	byte	$d7, $df, $f1, $f6, $f5, $f6, $fb, $03, $03, $07, $0b, $08, $04, $06, $0f, $14
19cc3     14 17 18 19 
19cc7     16 0E 0B 0F 
19ccb     12 0B 0B 0D 
19ccf     0C 0E 09 0D | 	byte	$14, $17, $18, $19, $16, $0e, $0b, $0f, $12, $0b, $0b, $0d, $0c, $0e, $09, $0d
19cd3     13 16 11 08 
19cd7     04 00 F8 F5 
19cdb     F8 F8 F7 F6 
19cdf     F1 F3 F2 EF | 	byte	$13, $16, $11, $08, $04, $00, $f8, $f5, $f8, $f8, $f7, $f6, $f1, $f3, $f2, $ef
19ce3     EF EE E5 DE 
19ce7     DC D8 D6 D7 
19ceb     DB E3 EE F2 
19cef     F5 F7 FB FF | 	byte	$ef, $ee, $e5, $de, $dc, $d8, $d6, $d7, $db, $e3, $ee, $f2, $f5, $f7, $fb, $ff
19cf3     03 0B 08 01 
19cf7     03 08 0D 0F 
19cfb     11 16 1D 16 
19cff     0E 11 10 0E | 	byte	$03, $0b, $08, $01, $03, $08, $0d, $0f, $11, $16, $1d, $16, $0e, $11, $10, $0e
19d03     0C 0D 0C 0A 
19d07     0A 0A 0A 0B 
19d0b     11 13 13 0A 
19d0f     02 FE F8 F7 | 	byte	$0c, $0d, $0c, $0a, $0a, $0a, $0a, $0b, $11, $13, $13, $0a, $02, $fe, $f8, $f7
19d13     F9 F6 F2 F6 
19d17     F4 EC EF F5 
19d1b     F0 E8 E3 E1 
19d1f     E0 D6 D2 D4 | 	byte	$f9, $f6, $f2, $f6, $f4, $ec, $ef, $f5, $f0, $e8, $e3, $e1, $e0, $d6, $d2, $d4
19d23     D7 DF E7 EE 
19d27     F1 F0 F5 FF 
19d2b     03 03 03 00 
19d2f     02 07 06 09 | 	byte	$d7, $df, $e7, $ee, $f1, $f0, $f5, $ff, $03, $03, $03, $00, $02, $07, $06, $09
19d33     13 19 16 10 
19d37     11 14 12 0C 
19d3b     0C 0E 10 09 
19d3f     07 08 09 0B | 	byte	$13, $19, $16, $10, $11, $14, $12, $0c, $0c, $0e, $10, $09, $07, $08, $09, $0b
19d43     0F 13 10 0C 
19d47     04 FC F9 F8 
19d4b     F4 F4 F5 F2 
19d4f     EE ED F3 F4 | 	byte	$0f, $13, $10, $0c, $04, $fc, $f9, $f8, $f4, $f4, $f5, $f2, $ee, $ed, $f3, $f4
19d53     ED E9 E9 E9 
19d57     E3 D8 D7 D8 
19d5b     D9 DD E7 EE 
19d5f     EF F0 F1 FC | 	byte	$ed, $e9, $e9, $e9, $e3, $d8, $d7, $d8, $d9, $dd, $e7, $ee, $ef, $f0, $f1, $fc
19d63     03 03 FD 01 
19d67     02 01 02 06 
19d6b     0F 15 14 0D 
19d6f     0F 14 0E 0A | 	byte	$03, $03, $fd, $01, $02, $01, $02, $06, $0f, $15, $14, $0d, $0f, $14, $0e, $0a
19d73     0D 0F 0E 0A 
19d77     08 07 0A 08 
19d7b     0C 14 15 0C 
19d7f     06 04 FD FA | 	byte	$0d, $0f, $0e, $0a, $08, $07, $0a, $08, $0c, $14, $15, $0c, $06, $04, $fd, $fa
19d83     F7 FA F8 F5 
19d87     F2 F0 F4 F8 
19d8b     F1 ED EF EC 
19d8f     E6 E0 D8 D7 | 	byte	$f7, $fa, $f8, $f5, $f2, $f0, $f4, $f8, $f1, $ed, $ef, $ec, $e6, $e0, $d8, $d7
19d93     DB DF E4 EC 
19d97     EC EC F3 FA 
19d9b     00 FE FD FC 
19d9f     FF FC F9 02 | 	byte	$db, $df, $e4, $ec, $ec, $ec, $f3, $fa, $00, $fe, $fd, $fc, $ff, $fc, $f9, $02
19da3     0D 0E 0A 0A 
19da7     0F 0F 0D 08 
19dab     0A 0F 0E 07 
19daf     05 07 07 09 | 	byte	$0d, $0e, $0a, $0a, $0f, $0f, $0d, $08, $0a, $0f, $0e, $07, $05, $07, $07, $09
19db3     0E 13 14 0F 
19db7     0C 04 00 FD 
19dbb     FC F7 F5 F2 
19dbf     F2 F2 F2 F2 | 	byte	$0e, $13, $14, $0f, $0c, $04, $00, $fd, $fc, $f7, $f5, $f2, $f2, $f2, $f2, $f2
19dc3     F3 EE ED F3 
19dc7     EA E0 DC DB 
19dcb     DB DD E3 EB 
19dcf     EC ED F4 FE | 	byte	$f3, $ee, $ed, $f3, $ea, $e0, $dc, $db, $db, $dd, $e3, $eb, $ec, $ed, $f4, $fe
19dd3     FF 00 01 01 
19dd7     00 FE 01 03 
19ddb     09 0D 0D 0D 
19ddf     13 11 0E 0E | 	byte	$ff, $00, $01, $01, $00, $fe, $01, $03, $09, $0d, $0d, $0d, $13, $11, $0e, $0e
19de3     0F 12 11 0E 
19de7     08 05 07 0C 
19deb     0C 11 15 10 
19def     0C 07 03 FE | 	byte	$0f, $12, $11, $0e, $08, $05, $07, $0c, $0c, $11, $15, $10, $0c, $07, $03, $fe
19df3     FD F8 F5 F7 
19df7     F1 F0 F3 F1 
19dfb     EF EE EF F0 
19dff     E8 E0 D9 D8 | 	byte	$fd, $f8, $f5, $f7, $f1, $f0, $f3, $f1, $ef, $ee, $ef, $f0, $e8, $e0, $d9, $d8
19e03     D8 DD E3 E3 
19e07     E3 ED F4 F6 
19e0b     FA 00 02 FE 
19e0f     FE FD 01 02 | 	byte	$d8, $dd, $e3, $e3, $e3, $ed, $f4, $f6, $fa, $00, $02, $fe, $fe, $fd, $01, $02
19e13     03 08 0D 0F 
19e17     0C 0D 0C 0C 
19e1b     0B 0F 0F 08 
19e1f     03 04 06 06 | 	byte	$03, $08, $0d, $0f, $0c, $0d, $0c, $0c, $0b, $0f, $0f, $08, $03, $04, $06, $06
19e23     0D 11 12 11 
19e27     0D 0B 08 02 
19e2b     01 FC F8 F8 
19e2f     FA F6 F1 F0 | 	byte	$0d, $11, $12, $11, $0d, $0b, $08, $02, $01, $fc, $f8, $f8, $fa, $f6, $f1, $f0
19e33     F4 F4 F0 ED 
19e37     ED E8 D8 D7 
19e3b     DE E0 DF DF 
19e3f     E7 EF F4 F8 | 	byte	$f4, $f4, $f0, $ed, $ed, $e8, $d8, $d7, $de, $e0, $df, $df, $e7, $ef, $f4, $f8
19e43     FE 03 03 00 
19e47     FF 04 04 02 
19e4b     03 0D 0F 0F 
19e4f     0F 0F 0F 0D | 	byte	$fe, $03, $03, $00, $ff, $04, $04, $02, $03, $0d, $0f, $0f, $0f, $0f, $0f, $0d
19e53     0F 10 0F 0D 
19e57     03 01 04 07 
19e5b     0C 0D 0D 11 
19e5f     12 0A 07 08 | 	byte	$0f, $10, $0f, $0d, $03, $01, $04, $07, $0c, $0d, $0d, $11, $12, $0a, $07, $08
19e63     04 FB F8 FC 
19e67     FC F4 EE F5 
19e6b     F6 F0 EF F4 
19e6f     F0 E1 DC DE | 	byte	$04, $fb, $f8, $fc, $fc, $f4, $ee, $f5, $f6, $f0, $ef, $f4, $f0, $e1, $dc, $de
19e73     DF DC DB DE 
19e77     E7 EB EE F5 
19e7b     FF 02 FF 00 
19e7f     03 04 03 02 | 	byte	$df, $dc, $db, $de, $e7, $eb, $ee, $f5, $ff, $02, $ff, $00, $03, $04, $03, $02
19e83     05 07 0F 13 
19e87     0B 0C 12 11 
19e8b     0F 0F 13 10 
19e8f     04 02 09 0A | 	byte	$05, $07, $0f, $13, $0b, $0c, $12, $11, $0f, $0f, $13, $10, $04, $02, $09, $0a
19e93     0A 0D 13 11 
19e97     0E 0B 0D 0B 
19e9b     00 FC FF FF 
19e9f     F6 F1 F5 F4 | 	byte	$0a, $0d, $13, $11, $0e, $0b, $0d, $0b, $00, $fc, $ff, $ff, $f6, $f1, $f5, $f4
19ea3     F1 F3 F5 F6 
19ea7     F0 E3 E0 E0 
19eab     DE DC DB DE 
19eaf     E1 E7 EF F7 | 	byte	$f1, $f3, $f5, $f6, $f0, $e3, $e0, $e0, $de, $dc, $db, $de, $e1, $e7, $ef, $f7
19eb3     F9 FA FE FD 
19eb7     FC 03 00 FA 
19ebb     FF 09 0A 08 
19ebf     09 0F 0E 09 | 	byte	$f9, $fa, $fe, $fd, $fc, $03, $00, $fa, $ff, $09, $0a, $08, $09, $0f, $0e, $09
19ec3     0E 14 11 05 
19ec7     01 04 07 06 
19ecb     07 0E 0E 0C 
19ecf     0D 0F 0C 03 | 	byte	$0e, $14, $11, $05, $01, $04, $07, $06, $07, $0e, $0e, $0c, $0d, $0f, $0c, $03
19ed3     03 02 FE FC 
19ed7     FC F8 F3 F0 
19edb     F3 F9 F8 F6 
19edf     F0 E9 E4 E1 | 	byte	$03, $02, $fe, $fc, $fc, $f8, $f3, $f0, $f3, $f9, $f8, $f6, $f0, $e9, $e4, $e1
19ee3     DF DD DC DC 
19ee7     E1 E9 EB F2 
19eeb     FB F9 FA FF 
19eef     03 00 FC FF | 	byte	$df, $dd, $dc, $dc, $e1, $e9, $eb, $f2, $fb, $f9, $fa, $ff, $03, $00, $fc, $ff
19ef3     06 07 08 0D 
19ef7     0E 0A 0C 12 
19efb     17 14 0E 0C 
19eff     09 06 03 09 | 	byte	$06, $07, $08, $0d, $0e, $0a, $0c, $12, $17, $14, $0e, $0c, $09, $06, $03, $09
19f03     0C 09 07 0F 
19f07     10 0E 07 05 
19f0b     06 03 FE FF 
19f0f     FE F6 F0 F2 | 	byte	$0c, $09, $07, $0f, $10, $0e, $07, $05, $06, $03, $fe, $ff, $fe, $f6, $f0, $f2
19f13     F7 F7 F8 F3 
19f17     F0 EC E4 E2 
19f1b     E0 D9 DA DC 
19f1f     DF E4 EC F1 | 	byte	$f7, $f7, $f8, $f3, $f0, $ec, $e4, $e2, $e0, $d9, $da, $dc, $df, $e4, $ec, $f1
19f23     F2 F5 FD 02 
19f27     FC FA 00 00 
19f2b     FF 03 0A 0C 
19f2f     06 05 0F 16 | 	byte	$f2, $f5, $fd, $02, $fc, $fa, $00, $00, $ff, $03, $0a, $0c, $06, $05, $0f, $16
19f33     13 10 13 0E 
19f37     08 07 0A 0A 
19f3b     09 08 0D 12 
19f3f     10 0C 0A 08 | 	byte	$13, $10, $13, $0e, $08, $07, $0a, $0a, $09, $08, $0d, $12, $10, $0c, $0a, $08
19f43     05 00 00 00 
19f47     FE F6 F0 F5 
19f4b     F9 F8 F8 F4 
19f4f     F0 F0 EB E3 | 	byte	$05, $00, $00, $00, $fe, $f6, $f0, $f5, $f9, $f8, $f8, $f4, $f0, $f0, $eb, $e3
19f53     E0 E0 DE DC 
19f57     DF EA EF EC 
19f5b     F3 FD 00 FE 
19f5f     FF 02 00 FC | 	byte	$e0, $e0, $de, $dc, $df, $ea, $ef, $ec, $f3, $fd, $00, $fe, $ff, $02, $00, $fc
19f63     00 09 0D 06 
19f67     03 0C 12 13 
19f6b     14 13 11 0E 
19f6f     09 09 09 05 | 	byte	$00, $09, $0d, $06, $03, $0c, $12, $13, $14, $13, $11, $0e, $09, $09, $09, $05
19f73     04 07 0C 0C 
19f77     0F 0C 07 04 
19f7b     01 01 02 FC 
19f7f     F8 F4 EE F0 | 	byte	$04, $07, $0c, $0c, $0f, $0c, $07, $04, $01, $01, $02, $fc, $f8, $f4, $ee, $f0
19f83     F7 F6 F2 F0 
19f87     F0 EE E6 E2 
19f8b     E3 DD D6 DB 
19f8f     E3 E4 E3 E8 | 	byte	$f7, $f6, $f2, $f0, $f0, $ee, $e6, $e2, $e3, $dd, $d6, $db, $e3, $e4, $e3, $e8
19f93     F3 F8 F9 FB 
19f97     00 FD F8 FC 
19f9b     03 04 03 03 
19f9f     02 09 0E 13 | 	byte	$f3, $f8, $f9, $fb, $00, $fd, $f8, $fc, $03, $04, $03, $03, $02, $09, $0e, $13
19fa3     13 13 0D 0C 
19fa7     0E 09 07 07 
19fab     06 07 0B 0C 
19faf     0E 0E 09 06 | 	byte	$13, $13, $0d, $0c, $0e, $09, $07, $07, $06, $07, $0b, $0c, $0e, $0e, $09, $06
19fb3     07 04 03 00 
19fb7     FB F4 F2 F7 
19fbb     F9 F5 F4 F9 
19fbf     F5 EF EF EC | 	byte	$07, $04, $03, $00, $fb, $f4, $f2, $f7, $f9, $f5, $f4, $f9, $f5, $ef, $ef, $ec
19fc3     E4 DE DF E4 
19fc7     E4 E3 E8 F0 
19fcb     F0 F3 FF 04 
19fcf     FF FA FC 00 | 	byte	$e4, $de, $df, $e4, $e4, $e3, $e8, $f0, $f0, $f3, $ff, $04, $ff, $fa, $fc, $00
19fd3     03 03 01 04 
19fd7     04 06 0E 13 
19fdb     12 11 12 0E 
19fdf     0B 0B 09 06 | 	byte	$03, $03, $01, $04, $04, $06, $0e, $13, $12, $11, $12, $0e, $0b, $0b, $09, $06
19fe3     05 05 0B 0E 
19fe7     0D 0C 0A 08 
19feb     07 07 07 00 
19fef     F8 F6 F8 F4 | 	byte	$05, $05, $0b, $0e, $0d, $0c, $0a, $08, $07, $07, $07, $00, $f8, $f6, $f8, $f4
19ff3     F2 F7 F8 F3 
19ff7     EE F1 F2 EA 
19ffb     E0 DD E2 DE 
19fff     DD E4 E8 E7 | 	byte	$f2, $f7, $f8, $f3, $ee, $f1, $f2, $ea, $e0, $dd, $e2, $de, $dd, $e4, $e8, $e7
1a003     EC F7 FF 00 
1a007     FC FC FF 01 
1a00b     00 03 05 00 
1a00f     01 09 0E 12 | 	byte	$ec, $f7, $ff, $00, $fc, $fc, $ff, $01, $00, $03, $05, $00, $01, $09, $0e, $12
1a013     13 10 0F 0D 
1a017     0D 0E 06 02 
1a01b     05 08 09 08 
1a01f     0D 0F 0B 04 | 	byte	$13, $10, $0f, $0d, $0d, $0e, $06, $02, $05, $08, $09, $08, $0d, $0f, $0b, $04
1a023     0B 10 06 FE 
1a027     FC FC F6 F2 
1a02b     F7 F9 F2 EE 
1a02f     F5 F6 EC E4 | 	byte	$0b, $10, $06, $fe, $fc, $fc, $f6, $f2, $f7, $f9, $f2, $ee, $f5, $f6, $ec, $e4
1a033     E6 E0 DB DD 
1a037     E1 E3 E2 E3 
1a03b     EB F6 FC FB 
1a03f     FC F9 FB 02 | 	byte	$e6, $e0, $db, $dd, $e1, $e3, $e2, $e3, $eb, $f6, $fc, $fb, $fc, $f9, $fb, $02
1a043     03 00 FE FF 
1a047     03 05 09 11 
1a04b     12 0C 0B 0E 
1a04f     0F 0A 02 03 | 	byte	$03, $00, $fe, $ff, $03, $05, $09, $11, $12, $0c, $0b, $0e, $0f, $0a, $02, $03
1a053     07 05 04 0B 
1a057     0C 06 04 0B 
1a05b     0E 09 01 01 
1a05f     01 F8 F4 FB | 	byte	$07, $05, $04, $0b, $0c, $06, $04, $0b, $0e, $09, $01, $01, $01, $f8, $f4, $fb
1a063     FB F4 F4 F8 
1a067     F4 F2 F1 EC 
1a06b     E2 DE E0 E3 
1a06f     E3 DF E3 EB | 	byte	$fb, $f4, $f4, $f8, $f4, $f2, $f1, $ec, $e2, $de, $e0, $e3, $e3, $df, $e3, $eb
1a073     EF F5 FE 00 
1a077     FA FB 02 04 
1a07b     01 01 03 00 
1a07f     00 08 0F 10 | 	byte	$ef, $f5, $fe, $00, $fa, $fb, $02, $04, $01, $01, $03, $00, $00, $08, $0f, $10
1a083     0C 0C 10 10 
1a087     08 05 04 01 
1a08b     00 03 06 07 
1a08f     04 04 09 0A | 	byte	$0c, $0c, $10, $10, $08, $05, $04, $01, $00, $03, $06, $07, $04, $04, $09, $0a
1a093     07 08 06 FC 
1a097     F9 FE FC F6 
1a09b     F7 F8 F7 F5 
1a09f     F7 F6 F1 E8 | 	byte	$07, $08, $06, $fc, $f9, $fe, $fc, $f6, $f7, $f8, $f7, $f5, $f7, $f6, $f1, $e8
1a0a3     E0 E4 E3 E0 
1a0a7     E0 E2 E3 E7 
1a0ab     F2 FB FB FA 
1a0af     FC 01 03 01 | 	byte	$e0, $e4, $e3, $e0, $e0, $e2, $e3, $e7, $f2, $fb, $fb, $fa, $fc, $01, $03, $01
1a0b3     01 00 FE FE 
1a0b7     07 0D 0A 09 
1a0bb     0F 0F 0C 0C 
1a0bf     0B 05 FE FF | 	byte	$01, $00, $fe, $fe, $07, $0d, $0a, $09, $0f, $0f, $0c, $0c, $0b, $05, $fe, $ff
1a0c3     05 08 01 05 
1a0c7     09 06 05 0F 
1a0cb     0F 04 00 03 
1a0cf     00 FA FB FC | 	byte	$05, $08, $01, $05, $09, $06, $05, $0f, $0f, $04, $00, $03, $00, $fa, $fb, $fc
1a0d3     FB F6 F6 FC 
1a0d7     FE F4 EB E8 
1a0db     E7 E4 E6 E4 
1a0df     E0 E0 E9 F1 | 	byte	$fb, $f6, $f6, $fc, $fe, $f4, $eb, $e8, $e7, $e4, $e6, $e4, $e0, $e0, $e9, $f1
1a0e3     F5 F8 FA FB 
1a0e7     FB FE 01 02 
1a0eb     FB F8 FD 03 
1a0ef     06 07 0A 0D | 	byte	$f5, $f8, $fa, $fb, $fb, $fe, $01, $02, $fb, $f8, $fd, $03, $06, $07, $0a, $0d
1a0f3     0E 0B 0F 12 
1a0f7     08 00 04 07 
1a0fb     03 03 07 06 
1a0ff     03 07 0D 0E | 	byte	$0e, $0b, $0f, $12, $08, $00, $04, $07, $03, $03, $07, $06, $03, $07, $0d, $0e
1a103     09 04 03 00 
1a107     FC FC FE F9 
1a10b     F0 F4 FB FA 
1a10f     F4 F2 EE E3 | 	byte	$09, $04, $03, $00, $fc, $fc, $fe, $f9, $f0, $f4, $fb, $fa, $f4, $f2, $ee, $e3
1a113     E1 E5 E6 E0 
1a117     D9 DF E7 EB 
1a11b     EE F7 F8 F4 
1a11f     F7 FF 03 FC | 	byte	$e1, $e5, $e6, $e0, $d9, $df, $e7, $eb, $ee, $f7, $f8, $f4, $f7, $ff, $03, $fc
1a123     F6 F8 FF 01 
1a127     00 07 0C 0A 
1a12b     0A 0F 13 10 
1a12f     09 07 02 02 | 	byte	$f6, $f8, $ff, $01, $00, $07, $0c, $0a, $0a, $0f, $13, $10, $09, $07, $02, $02
1a133     07 09 03 03 
1a137     08 0B 0D 0E 
1a13b     0D 0C 05 FE 
1a13f     01 05 00 F4 | 	byte	$07, $09, $03, $03, $08, $0b, $0d, $0e, $0d, $0c, $05, $fe, $01, $05, $00, $f4
1a143     F3 F8 F9 F9 
1a147     FA F8 EE E5 
1a14b     E6 EE E8 E0 
1a14f     DD E3 E7 E7 | 	byte	$f3, $f8, $f9, $f9, $fa, $f8, $ee, $e5, $e6, $ee, $e8, $e0, $dd, $e3, $e7, $e7
1a153     EF F7 FA F7 
1a157     FA 05 09 00 
1a15b     FC FF 02 03 
1a15f     06 0B 09 09 | 	byte	$ef, $f7, $fa, $f7, $fa, $05, $09, $00, $fc, $ff, $02, $03, $06, $0b, $09, $09
1a163     0F 12 13 15 
1a167     11 0A 06 09 
1a16b     09 08 03 05 
1a16f     0B 0A 08 0F | 	byte	$0f, $12, $13, $15, $11, $0a, $06, $09, $09, $08, $03, $05, $0b, $0a, $08, $0f
1a173     15 0C 00 03 
1a177     09 05 FC F6 
1a17b     F7 F7 F6 F9 
1a17f     FC F8 EC E6 | 	byte	$15, $0c, $00, $03, $09, $05, $fc, $f6, $f7, $f7, $f6, $f9, $fc, $f8, $ec, $e6
1a183     EA EC E8 E1 
1a187     DF E1 E1 E5 
1a18b     EF F3 F0 F0 
1a18f     FA 02 02 FE | 	byte	$ea, $ec, $e8, $e1, $df, $e1, $e1, $e5, $ef, $f3, $f0, $f0, $fa, $02, $02, $fe
1a193     FE FE FD FF 
1a197     02 04 07 07 
1a19b     07 0E 13 12 
1a19f     0F 07 03 09 | 	byte	$fe, $fe, $fd, $ff, $02, $04, $07, $07, $07, $0e, $13, $12, $0f, $07, $03, $09
1a1a3     08 00 00 03 
1a1a7     03 00 07 10 
1a1ab     0E 04 FE 03 
1a1af     06 03 FF FC | 	byte	$08, $00, $00, $03, $03, $00, $07, $10, $0e, $04, $fe, $03, $06, $03, $ff, $fc
1a1b3     F6 F2 F7 FF 
1a1b7     FC F4 EC EC 
1a1bb     F0 EB E7 E8 
1a1bf     E5 DF E1 EA | 	byte	$f6, $f2, $f7, $ff, $fc, $f4, $ec, $ec, $f0, $eb, $e7, $e8, $e5, $df, $e1, $ea
1a1c3     F0 EC ED F6 
1a1c7     FD 00 05 03 
1a1cb     00 00 00 01 
1a1cf     07 07 05 07 | 	byte	$f0, $ec, $ed, $f6, $fd, $00, $05, $03, $00, $00, $00, $01, $07, $07, $05, $07
1a1d3     0B 11 16 12 
1a1d7     0C 0B 0B 07 
1a1db     03 04 06 00 
1a1df     FC 01 0C 0E | 	byte	$0b, $11, $16, $12, $0c, $0b, $0b, $07, $03, $04, $06, $00, $fc, $01, $0c, $0e
1a1e3     08 02 03 07 
1a1e7     04 06 04 00 
1a1eb     F4 F2 FB 01 
1a1ef     F8 F1 F3 F1 | 	byte	$08, $02, $03, $07, $04, $06, $04, $00, $f4, $f2, $fb, $01, $f8, $f1, $f3, $f1
1a1f3     EC EB EF EC 
1a1f7     E0 DC E6 EC 
1a1fb     E7 E7 EC F3 
1a1ff     FB FC 00 02 | 	byte	$ec, $eb, $ef, $ec, $e0, $dc, $e6, $ec, $e7, $e7, $ec, $f3, $fb, $fc, $00, $02
1a203     FF FD FD 00 
1a207     06 06 02 01 
1a20b     0B 14 10 0D 
1a20f     0E 10 09 05 | 	byte	$ff, $fd, $fd, $00, $06, $06, $02, $01, $0b, $14, $10, $0d, $0e, $10, $09, $05
1a213     09 0A 04 FC 
1a217     FF 09 0B 09 
1a21b     0A 05 03 03 
1a21f     07 0C 07 F8 | 	byte	$09, $0a, $04, $fc, $ff, $09, $0b, $09, $0a, $05, $03, $03, $07, $0c, $07, $f8
1a223     F2 FA FF FA 
1a227     F6 F6 F5 EE 
1a22b     EC F3 F1 E8 
1a22f     E1 E1 E6 E9 | 	byte	$f2, $fa, $ff, $fa, $f6, $f6, $f5, $ee, $ec, $f3, $f1, $e8, $e1, $e1, $e6, $e9
1a233     E4 E5 EC F1 
1a237     F4 F9 FF FD 
1a23b     FA F8 FB 03 
1a23f     04 00 FC 03 | 	byte	$e4, $e5, $ec, $f1, $f4, $f9, $ff, $fd, $fa, $f8, $fb, $03, $04, $00, $fc, $03
1a243     0E 0C 09 0F 
1a247     11 0C 03 0A 
1a24b     10 08 FE FC 
1a24f     01 07 08 09 | 	byte	$0e, $0c, $09, $0f, $11, $0c, $03, $0a, $10, $08, $fe, $fc, $01, $07, $08, $09
1a253     0A 05 FF 03 
1a257     0F 0E 00 F9 
1a25b     FB FE FB FE 
1a25f     FF F8 F1 F1 | 	byte	$0a, $05, $ff, $03, $0f, $0e, $00, $f9, $fb, $fe, $fb, $fe, $ff, $f8, $f1, $f1
1a263     F4 F6 F0 E8 
1a267     E5 E7 E9 E7 
1a26b     E6 E9 EE F1 
1a26f     F4 FC 00 FE | 	byte	$f4, $f6, $f0, $e8, $e5, $e7, $e9, $e7, $e6, $e9, $ee, $f1, $f4, $fc, $00, $fe
1a273     F9 FA 03 06 
1a277     00 FD FF 07 
1a27b     08 0A 0F 10 
1a27f     0C 09 09 0D | 	byte	$f9, $fa, $03, $06, $00, $fd, $ff, $07, $08, $0a, $0f, $10, $0c, $09, $09, $0d
1a283     0C 05 00 FF 
1a287     03 03 09 0D 
1a28b     06 FF 02 0E 
1a28f     0E 06 02 FD | 	byte	$0c, $05, $00, $ff, $03, $03, $09, $0d, $06, $ff, $02, $0e, $0e, $06, $02, $fd
1a293     F9 FA FC FE 
1a297     F9 F3 F1 F3 
1a29b     F3 F0 EB E8 
1a29f     E6 E5 E4 E6 | 	byte	$f9, $fa, $fc, $fe, $f9, $f3, $f1, $f3, $f3, $f0, $eb, $e8, $e6, $e5, $e4, $e6
1a2a3     E5 E5 E9 EE 
1a2a7     F6 FD FC F6 
1a2ab     F8 FF 02 FE 
1a2af     FD 00 FE FD | 	byte	$e5, $e5, $e9, $ee, $f6, $fd, $fc, $f6, $f8, $ff, $02, $fe, $fd, $00, $fe, $fd
1a2b3     03 09 0B 0B 
1a2b7     08 06 09 0A 
1a2bb     07 02 FD FC 
1a2bf     FF 07 0E 04 | 	byte	$03, $09, $0b, $0b, $08, $06, $09, $0a, $07, $02, $fd, $fc, $ff, $07, $0e, $04
1a2c3     FE 02 09 0B 
1a2c7     09 07 03 FC 
1a2cb     F8 FB 01 FE 
1a2cf     F6 F1 F5 F8 | 	byte	$fe, $02, $09, $0b, $09, $07, $03, $fc, $f8, $fb, $01, $fe, $f6, $f1, $f5, $f8
1a2d3     F1 EC ED EC 
1a2d7     E6 E5 E7 E8 
1a2db     E6 E5 E9 F1 
1a2df     FC FA F8 FB | 	byte	$f1, $ec, $ed, $ec, $e6, $e5, $e7, $e8, $e6, $e5, $e9, $f1, $fc, $fa, $f8, $fb
1a2e3     FF FF FF 03 
1a2e7     01 FF FD 00 
1a2eb     07 0E 0A 09 
1a2ef     0C 0F 0C 09 | 	byte	$ff, $ff, $ff, $03, $01, $ff, $fd, $00, $07, $0e, $0a, $09, $0c, $0f, $0c, $09
1a2f3     0D 08 FB FB 
1a2f7     07 0E 0A 02 
1a2fb     03 07 0A 0D 
1a2ff     0F 0C 06 00 | 	byte	$0d, $08, $fb, $fb, $07, $0e, $0a, $02, $03, $07, $0a, $0d, $0f, $0c, $06, $00
1a303     FF 05 06 FD 
1a307     F8 FC FC F8 
1a30b     F1 F2 F3 ED 
1a30f     E6 E6 EC EB | 	byte	$ff, $05, $06, $fd, $f8, $fc, $fc, $f8, $f1, $f2, $f3, $ed, $e6, $e6, $ec, $eb
1a313     E1 E0 EC F5 
1a317     F5 F5 F7 FB 
1a31b     FF FF FF 02 
1a31f     02 FD FA 01 | 	byte	$e1, $e0, $ec, $f5, $f5, $f5, $f7, $fb, $ff, $ff, $ff, $02, $02, $fd, $fa, $01
1a323     0A 0A 07 0D 
1a327     0E 0A 0B 0F 
1a32b     0C 00 F8 FF 
1a32f     07 07 00 FF | 	byte	$0a, $0a, $07, $0d, $0e, $0a, $0b, $0f, $0c, $00, $f8, $ff, $07, $07, $00, $ff
1a333     01 05 06 09 
1a337     0F 0B 00 FF 
1a33b     05 04 00 FC 
1a33f     FA F9 F8 F5 | 	byte	$01, $05, $06, $09, $0f, $0b, $00, $ff, $05, $04, $00, $fc, $fa, $f9, $f8, $f5
1a343     F1 F1 F0 E8 
1a347     E5 EB E9 E1 
1a34b     DF E1 E9 EF 
1a34f     F0 F0 F7 F9 | 	byte	$f1, $f1, $f0, $e8, $e5, $eb, $e9, $e1, $df, $e1, $e9, $ef, $f0, $f0, $f7, $f9
1a353     FB FC 00 04 
1a357     FC F9 FF 05 
1a35b     06 07 0B 0C 
1a35f     0A 0E 12 12 | 	byte	$fb, $fc, $00, $04, $fc, $f9, $ff, $05, $06, $07, $0b, $0c, $0a, $0e, $12, $12
1a363     08 00 FE 03 
1a367     0A 06 02 03 
1a36b     00 FF 0A 12 
1a36f     0C 02 05 07 | 	byte	$08, $00, $fe, $03, $0a, $06, $02, $03, $00, $ff, $0a, $12, $0c, $02, $05, $07
1a373     03 00 FF FE 
1a377     FC F8 F7 F6 
1a37b     F6 EE EB EA 
1a37f     E9 EA E8 E1 | 	byte	$03, $00, $ff, $fe, $fc, $f8, $f7, $f6, $f6, $ee, $eb, $ea, $e9, $ea, $e8, $e1
1a383     DF E2 E9 EC 
1a387     EB EF F2 F3 
1a38b     F7 FC FB FB 
1a38f     FC FC FA FE | 	byte	$df, $e2, $e9, $ec, $eb, $ef, $f2, $f3, $f7, $fc, $fb, $fb, $fc, $fc, $fa, $fe
1a393     05 08 06 06 
1a397     0C 11 14 0E 
1a39b     04 02 07 07 
1a39f     07 0A 08 00 | 	byte	$05, $08, $06, $06, $0c, $11, $14, $0e, $04, $02, $07, $07, $07, $0a, $08, $00
1a3a3     FE 07 0E 0C 
1a3a7     09 09 09 08 
1a3ab     04 03 05 02 
1a3af     FA FB FF FC | 	byte	$fe, $07, $0e, $0c, $09, $09, $09, $08, $04, $03, $05, $02, $fa, $fb, $ff, $fc
1a3b3     F4 F0 F1 F1 
1a3b7     EE EB E9 E6 
1a3bb     E6 E6 E9 EE 
1a3bf     F0 EF EF F5 | 	byte	$f4, $f0, $f1, $f1, $ee, $eb, $e9, $e6, $e6, $e6, $e9, $ee, $f0, $ef, $ef, $f5
1a3c3     FA FA F9 FC 
1a3c7     FC F8 F8 FF 
1a3cb     03 04 00 03 
1a3cf     0C 14 0E 07 | 	byte	$fa, $fa, $f9, $fc, $fc, $f8, $f8, $ff, $03, $04, $00, $03, $0c, $14, $0e, $07
1a3d3     08 06 00 03 
1a3d7     0C 0A 00 FB 
1a3db     01 07 08 07 
1a3df     07 08 06 01 | 	byte	$08, $06, $00, $03, $0c, $0a, $00, $fb, $01, $07, $08, $07, $07, $08, $06, $01
1a3e3     03 03 03 FC 
1a3e7     F9 FB FC F8 
1a3eb     F1 EE F0 F0 
1a3ef     EC E9 E8 E6 | 	byte	$03, $03, $03, $fc, $f9, $fb, $fc, $f8, $f1, $ee, $f0, $f0, $ec, $e9, $e8, $e6
1a3f3     E3 E5 EB EF 
1a3f7     ED EC F3 F7 
1a3fb     F8 FA FD FE 
1a3ff     FC F7 F9 04 | 	byte	$e3, $e5, $eb, $ef, $ed, $ec, $f3, $f7, $f8, $fa, $fd, $fe, $fc, $f7, $f9, $04
1a403     08 00 FD 0B 
1a407     13 10 0F 0F 
1a40b     0A 03 06 0F 
1a40f     0F 0A 02 03 | 	byte	$08, $00, $fd, $0b, $13, $10, $0f, $0f, $0a, $03, $06, $0f, $0f, $0a, $02, $03
1a413     07 07 09 0D 
1a417     0C 09 07 07 
1a41b     09 05 01 FC 
1a41f     FD FF FE F6 | 	byte	$07, $07, $09, $0d, $0c, $09, $07, $07, $09, $05, $01, $fc, $fd, $ff, $fe, $f6
1a423     EF EE F1 F0 
1a427     E9 E8 E8 E4 
1a42b     E2 E7 EA EC 
1a42f     EC ED F1 F6 | 	byte	$ef, $ee, $f1, $f0, $e9, $e8, $e8, $e4, $e2, $e7, $ea, $ec, $ec, $ed, $f1, $f6
1a433     F8 F9 FE FC 
1a437     F2 F7 02 00 
1a43b     F9 FB 03 07 
1a43f     0B 11 0E 07 | 	byte	$f8, $f9, $fe, $fc, $f2, $f7, $02, $00, $f9, $fb, $03, $07, $0b, $11, $0e, $07
1a443     00 01 06 0A 
1a447     07 04 02 00 
1a44b     01 05 0B 0A 
1a44f     07 07 0B 0C | 	byte	$00, $01, $06, $0a, $07, $04, $02, $00, $01, $05, $0b, $0a, $07, $07, $0b, $0c
1a453     06 03 03 01 
1a457     FF 00 00 F4 
1a45b     F1 F3 F3 F1 
1a45f     EE E9 E5 E5 | 	byte	$06, $03, $03, $01, $ff, $00, $00, $f4, $f1, $f3, $f3, $f1, $ee, $e9, $e5, $e5
1a463     E7 E9 ED EC 
1a467     EB F2 F2 F5 
1a46b     01 06 00 F6 
1a46f     FF 03 FE FE | 	byte	$e7, $e9, $ed, $ec, $eb, $f2, $f2, $f5, $01, $06, $00, $f6, $ff, $03, $fe, $fe
1a473     03 00 01 09 
1a477     13 15 0A 01 
1a47b     04 08 07 05 
1a47f     07 06 01 FC | 	byte	$03, $00, $01, $09, $13, $15, $0a, $01, $04, $08, $07, $05, $07, $06, $01, $fc
1a483     FF 07 08 05 
1a487     05 0B 0E 0A 
1a48b     07 04 01 03 
1a48f     03 01 FE F8 | 	byte	$ff, $07, $08, $05, $05, $0b, $0e, $0a, $07, $04, $01, $03, $03, $01, $fe, $f8
1a493     F3 F3 F6 F1 
1a497     EC E9 E4 E7 
1a49b     E8 E4 E8 EF 
1a49f     EC E4 EF FF | 	byte	$f3, $f3, $f6, $f1, $ec, $e9, $e4, $e7, $e8, $e4, $e8, $ef, $ec, $e4, $ef, $ff
1a4a3     01 F8 F8 FD 
1a4a7     01 FE FD FF 
1a4ab     00 FE 03 0F 
1a4af     17 10 07 05 | 	byte	$01, $f8, $f8, $fd, $01, $fe, $fd, $ff, $00, $fe, $03, $0f, $17, $10, $07, $05
1a4b3     07 08 07 0A 
1a4b7     09 03 00 01 
1a4bb     06 06 06 07 
1a4bf     0A 0F 0F 0A | 	byte	$07, $08, $07, $0a, $09, $03, $00, $01, $06, $06, $06, $07, $0a, $0f, $0f, $0a
1a4c3     04 07 08 04 
1a4c7     04 04 00 FA 
1a4cb     F5 F7 FA F4 
1a4cf     E8 E7 EB E8 | 	byte	$04, $07, $08, $04, $04, $04, $00, $fa, $f5, $f7, $fa, $f4, $e8, $e7, $eb, $e8
1a4d3     E2 E7 EE E6 
1a4d7     E1 EA F7 F9 
1a4db     F8 F8 FA FC 
1a4df     FC FD FF FB | 	byte	$e2, $e7, $ee, $e6, $e1, $ea, $f7, $f9, $f8, $f8, $fa, $fc, $fc, $fd, $ff, $fb
1a4e3     FA FD 06 11 
1a4e7     11 0C 06 04 
1a4eb     06 07 0B 08 
1a4ef     03 00 00 FE | 	byte	$fa, $fd, $06, $11, $11, $0c, $06, $04, $06, $07, $0b, $08, $03, $00, $00, $fe
1a4f3     00 02 01 03 
1a4f7     0B 0E 0B 07 
1a4fb     03 06 07 04 
1a4ff     05 03 FC F8 | 	byte	$00, $02, $01, $03, $0b, $0e, $0b, $07, $03, $06, $07, $04, $05, $03, $fc, $f8
1a503     FB FE F5 F0 
1a507     F0 EC E5 E6 
1a50b     EC EC E4 E3 
1a50f     E7 EF F1 F7 | 	byte	$fb, $fe, $f5, $f0, $f0, $ec, $e5, $e6, $ec, $ec, $e4, $e3, $e7, $ef, $f1, $f7
1a513     FB F8 F8 FD 
1a517     00 FE F9 F8 
1a51b     FC 01 09 0E 
1a51f     11 0D 03 04 | 	byte	$fb, $f8, $f8, $fd, $00, $fe, $f9, $f8, $fc, $01, $09, $0e, $11, $0d, $03, $04
1a523     0B 0D 0A 07 
1a527     04 00 03 02 
1a52b     00 FF 02 09 
1a52f     0D 0C 08 07 | 	byte	$0b, $0d, $0a, $07, $04, $00, $03, $02, $00, $ff, $02, $09, $0d, $0c, $08, $07
1a533     06 05 05 07 
1a537     04 FE FD FD 
1a53b     F8 F5 F6 F4 
1a53f     EA E4 E7 EF | 	byte	$06, $05, $05, $07, $04, $fe, $fd, $fd, $f8, $f5, $f6, $f4, $ea, $e4, $e7, $ef
1a543     EC E3 E3 E7 
1a547     E7 E8 EE F7 
1a54b     F7 F4 F7 FC 
1a54f     FF FA F6 F7 | 	byte	$ec, $e3, $e3, $e7, $e7, $e8, $ee, $f7, $f7, $f4, $f7, $fc, $ff, $fa, $f6, $f7
1a553     F8 FE 06 0E 
1a557     0D 07 06 05 
1a55b     09 0C 09 06 
1a55f     06 05 03 00 | 	byte	$f8, $fe, $06, $0e, $0d, $07, $06, $05, $09, $0c, $09, $06, $06, $05, $03, $00
1a563     FD FF 03 06 
1a567     06 0A 0C 06 
1a56b     00 03 0A 05 
1a56f     FC FF 00 FC | 	byte	$fd, $ff, $03, $06, $06, $0a, $0c, $06, $00, $03, $0a, $05, $fc, $ff, $00, $fc
1a573     F4 F5 FA F1 
1a577     E6 E6 EC EC 
1a57b     E7 E4 E7 E2 
1a57f     E3 E6 EB F1 | 	byte	$f4, $f5, $fa, $f1, $e6, $e6, $ec, $ec, $e7, $e4, $e7, $e2, $e3, $e6, $eb, $f1
1a583     F2 F2 F6 FB 
1a587     FD F8 F8 F4 
1a58b     F6 FF 03 0A 
1a58f     0E 0B 06 05 | 	byte	$f2, $f2, $f6, $fb, $fd, $f8, $f8, $f4, $f6, $ff, $03, $0a, $0e, $0b, $06, $05
1a593     09 0F 0D 09 
1a597     08 0C 08 00 
1a59b     FE 03 06 03 
1a59f     07 0E 0E 04 | 	byte	$09, $0f, $0d, $09, $08, $0c, $08, $00, $fe, $03, $06, $03, $07, $0e, $0e, $04
1a5a3     03 09 0C 04 
1a5a7     02 05 03 FC 
1a5ab     FA FE FD F3 
1a5af     EC EE ED ED | 	byte	$03, $09, $0c, $04, $02, $05, $03, $fc, $fa, $fe, $fd, $f3, $ec, $ee, $ed, $ed
1a5b3     EB E8 E8 E6 
1a5b7     E5 E5 EA EE 
1a5bb     F1 F5 F3 F7 
1a5bf     FD FB F6 F3 | 	byte	$eb, $e8, $e8, $e6, $e5, $e5, $ea, $ee, $f1, $f5, $f3, $f7, $fd, $fb, $f6, $f3
1a5c3     F6 FC FF 05 
1a5c7     09 0A 04 03 
1a5cb     09 0A 09 09 
1a5cf     0D 0C 06 02 | 	byte	$f6, $fc, $ff, $05, $09, $0a, $04, $03, $09, $0a, $09, $09, $0d, $0c, $06, $02
1a5d3     04 03 00 04 
1a5d7     0B 0E 07 07 
1a5db     0A 0A 07 07 
1a5df     07 05 00 00 | 	byte	$04, $03, $00, $04, $0b, $0e, $07, $07, $0a, $0a, $07, $07, $07, $05, $00, $00
1a5e3     00 FD F8 F6 
1a5e7     F0 EE EE ED 
1a5eb     EE ED E8 E6 
1a5ef     E8 E7 E7 ED | 	byte	$00, $fd, $f8, $f6, $f0, $ee, $ee, $ed, $ee, $ed, $e8, $e6, $e8, $e7, $e7, $ed
1a5f3     F0 F2 F5 F9 
1a5f7     FB F9 F5 F3 
1a5fb     F3 F7 FF 05 
1a5ff     06 06 05 06 | 	byte	$f0, $f2, $f5, $f9, $fb, $f9, $f5, $f3, $f3, $f7, $ff, $05, $06, $06, $05, $06
1a603     07 05 09 0D 
1a607     0E 0A 07 07 
1a60b     04 FF 03 09 
1a60f     0B 08 08 0E | 	byte	$07, $05, $09, $0d, $0e, $0a, $07, $07, $04, $ff, $03, $09, $0b, $08, $08, $0e
1a613     0A 04 07 0C 
1a617     07 01 01 02 
1a61b     00 FC F7 F6 
1a61f     F2 EC ED EC | 	byte	$0a, $04, $07, $0c, $07, $01, $01, $02, $00, $fc, $f7, $f6, $f2, $ec, $ed, $ec
1a623     EC EB E9 E5 
1a627     E5 E7 E9 EB 
1a62b     EE F2 F6 FA 
1a62f     FC FC F8 F2 | 	byte	$ec, $eb, $e9, $e5, $e5, $e7, $e9, $eb, $ee, $f2, $f6, $fa, $fc, $fc, $f8, $f2
1a633     F5 FB 01 02 
1a637     06 0A 0B 06 
1a63b     03 07 0F 0F 
1a63f     0A 0C 0E 09 | 	byte	$f5, $fb, $01, $02, $06, $0a, $0b, $06, $03, $07, $0f, $0f, $0a, $0c, $0e, $09
1a643     00 00 08 09 
1a647     06 07 0D 0C 
1a64b     08 09 0A 0A 
1a64f     05 01 05 03 | 	byte	$00, $00, $08, $09, $06, $07, $0d, $0c, $08, $09, $0a, $0a, $05, $01, $05, $03
1a653     FE FC F9 F6 
1a657     F2 ED EC ED 
1a65b     EE EA E8 E7 
1a65f     E7 E6 E4 E9 | 	byte	$fe, $fc, $f9, $f6, $f2, $ed, $ec, $ed, $ee, $ea, $e8, $e7, $e7, $e6, $e4, $e9
1a663     EF F3 F3 F7 
1a667     FC FA F6 F3 
1a66b     F6 FC FE FF 
1a66f     07 0A 04 FF | 	byte	$ef, $f3, $f3, $f7, $fc, $fa, $f6, $f3, $f6, $fc, $fe, $ff, $07, $0a, $04, $ff
1a673     03 09 08 08 
1a677     0F 10 09 02 
1a67b     04 06 04 06 
1a67f     08 0B 0E 0C | 	byte	$03, $09, $08, $08, $0f, $10, $09, $02, $04, $06, $04, $06, $08, $0b, $0e, $0c
1a683     0B 0B 0B 09 
1a687     07 06 07 06 
1a68b     01 FE FC FA 
1a68f     F5 F1 EE EF | 	byte	$0b, $0b, $0b, $09, $07, $06, $07, $06, $01, $fe, $fc, $fa, $f5, $f1, $ee, $ef
1a693     F0 ED EC EB 
1a697     E8 E6 E7 EB 
1a69b     EE F1 F6 F9 
1a69f     FC F6 F3 F6 | 	byte	$f0, $ed, $ec, $eb, $e8, $e6, $e7, $eb, $ee, $f1, $f6, $f9, $fc, $f6, $f3, $f6
1a6a3     F7 F6 F9 02 
1a6a7     08 03 FF 03 
1a6ab     05 03 06 0E 
1a6af     0E 0A 06 06 | 	byte	$f7, $f6, $f9, $02, $08, $03, $ff, $03, $05, $03, $06, $0e, $0e, $0a, $06, $06
1a6b3     04 04 03 07 
1a6b7     07 08 0B 0F 
1a6bb     0D 09 07 07 
1a6bf     09 07 06 03 | 	byte	$04, $04, $03, $07, $07, $08, $0b, $0f, $0d, $09, $07, $07, $09, $07, $06, $03
1a6c3     00 FC FB F8 
1a6c7     F2 F0 EE EC 
1a6cb     EB ED EB E7 
1a6cf     E3 E2 E4 E7 | 	byte	$00, $fc, $fb, $f8, $f2, $f0, $ee, $ec, $eb, $ed, $eb, $e7, $e3, $e2, $e4, $e7
1a6d3     E9 EF F5 F7 
1a6d7     F6 F7 F8 F5 
1a6db     F2 F7 FF 04 
1a6df     02 05 07 03 | 	byte	$e9, $ef, $f5, $f7, $f6, $f7, $f8, $f5, $f2, $f7, $ff, $04, $02, $05, $07, $03
1a6e3     00 05 0B 10 
1a6e7     0D 09 07 08 
1a6eb     06 03 03 06 
1a6ef     07 07 0D 0F | 	byte	$00, $05, $0b, $10, $0d, $09, $07, $08, $06, $03, $03, $06, $07, $07, $0d, $0f
1a6f3     0C 07 08 0B 
1a6f7     09 09 08 06 
1a6fb     02 00 FC FB 
1a6ff     F8 F0 EC EC | 	byte	$0c, $07, $08, $0b, $09, $09, $08, $06, $02, $00, $fc, $fb, $f8, $f0, $ec, $ec
1a703     EF F0 EB E5 
1a707     E4 E5 E3 E2 
1a70b     E7 F0 F2 F0 
1a70f     F6 FB F6 EF | 	byte	$ef, $f0, $eb, $e5, $e4, $e5, $e3, $e2, $e7, $f0, $f2, $f0, $f6, $fb, $f6, $ef
1a713     F1 F9 FC FF 
1a717     03 05 02 00 
1a71b     FF 06 0A 0B 
1a71f     09 07 07 04 | 	byte	$f1, $f9, $fc, $ff, $03, $05, $02, $00, $ff, $06, $0a, $0b, $09, $07, $07, $04
1a723     04 04 04 00 
1a727     01 07 0C 0C 
1a72b     09 06 04 09 
1a72f     09 07 07 04 | 	byte	$04, $04, $04, $00, $01, $07, $0c, $0c, $09, $06, $04, $09, $09, $07, $07, $04
1a733     00 FE FE FB 
1a737     F6 F0 EB EC 
1a73b     F0 F0 EB E5 
1a73f     E5 E2 E0 E3 | 	byte	$00, $fe, $fe, $fb, $f6, $f0, $eb, $ec, $f0, $f0, $eb, $e5, $e5, $e2, $e0, $e3
1a743     EA EC EC F3 
1a747     F9 F7 F2 F1 
1a74b     F5 F8 FB 01 
1a74f     05 08 03 01 | 	byte	$ea, $ec, $ec, $f3, $f9, $f7, $f2, $f1, $f5, $f8, $fb, $01, $05, $08, $03, $01
1a753     06 0B 0E 0F 
1a757     0F 0C 09 0A 
1a75b     0D 07 03 04 
1a75f     05 09 0E 0D | 	byte	$06, $0b, $0e, $0f, $0f, $0c, $09, $0a, $0d, $07, $03, $04, $05, $09, $0e, $0d
1a763     0A 09 08 07 
1a767     0A 0C 08 01 
1a76b     FE FF FF FB 
1a76f     F4 ED ED EF | 	byte	$0a, $09, $08, $07, $0a, $0c, $08, $01, $fe, $ff, $ff, $fb, $f4, $ed, $ed, $ef
1a773     F0 EE EB E8 
1a777     E2 DF E1 E3 
1a77b     E6 E7 EC F1 
1a77f     F4 F7 F3 F1 | 	byte	$f0, $ee, $eb, $e8, $e2, $df, $e1, $e3, $e6, $e7, $ec, $f1, $f4, $f7, $f3, $f1
1a783     F1 F4 FB 01 
1a787     06 03 00 04 
1a78b     07 08 0F 13 
1a78f     0F 0B 0C 0D | 	byte	$f1, $f4, $fb, $01, $06, $03, $00, $04, $07, $08, $0f, $13, $0f, $0b, $0c, $0d
1a793     0E 0A 05 03 
1a797     07 0B 0D 0F 
1a79b     0C 08 08 0D 
1a79f     0F 0B 08 04 | 	byte	$0e, $0a, $05, $03, $07, $0b, $0d, $0f, $0c, $08, $08, $0d, $0f, $0b, $08, $04
1a7a3     03 04 03 00 
1a7a7     F6 F3 F2 F0 
1a7ab     F3 F6 F1 E8 
1a7af     E4 E7 E7 E5 | 	byte	$03, $04, $03, $00, $f6, $f3, $f2, $f0, $f3, $f6, $f1, $e8, $e4, $e7, $e7, $e5
1a7b3     E5 E9 ED F1 
1a7b7     F6 F5 F3 F1 
1a7bb     EF F3 FC 00 
1a7bf     00 01 FF FE | 	byte	$e5, $e9, $ed, $f1, $f6, $f5, $f3, $f1, $ef, $f3, $fc, $00, $00, $01, $ff, $fe
1a7c3     03 0A 0D 0D 
1a7c7     0C 0A 0B 0F 
1a7cb     0E 07 03 05 
1a7cf     06 07 0D 0E | 	byte	$03, $0a, $0d, $0d, $0c, $0a, $0b, $0f, $0e, $07, $03, $05, $06, $07, $0d, $0e
1a7d3     08 06 07 0C 
1a7d7     0C 09 05 00 
1a7db     02 04 00 F9 
1a7df     F4 F1 EE EF | 	byte	$08, $06, $07, $0c, $0c, $09, $05, $00, $02, $04, $00, $f9, $f4, $f1, $ee, $ef
1a7e3     F5 F3 EC E7 
1a7e7     E6 E5 E5 E5 
1a7eb     E3 E5 E9 ED 
1a7ef     F6 F7 F0 E9 | 	byte	$f5, $f3, $ec, $e7, $e6, $e5, $e5, $e5, $e3, $e5, $e9, $ed, $f6, $f7, $f0, $e9
1a7f3     EF F5 F7 FF 
1a7f7     00 FE FC FF 
1a7fb     04 0A 0E 0C 
1a7ff     09 0C 10 10 | 	byte	$ef, $f5, $f7, $ff, $00, $fe, $fc, $ff, $04, $0a, $0e, $0c, $09, $0c, $10, $10
1a803     0E 0B 04 03 
1a807     07 0D 0F 0A 
1a80b     08 08 0D 0F 
1a80f     0E 0A 05 07 | 	byte	$0e, $0b, $04, $03, $07, $0d, $0f, $0a, $08, $08, $0d, $0f, $0e, $0a, $05, $07
1a813     06 05 03 00 
1a817     F6 F0 F2 F6 
1a81b     F6 F4 EF E8 
1a81f     E8 EA E9 E7 | 	byte	$06, $05, $03, $00, $f6, $f0, $f2, $f6, $f6, $f4, $ef, $e8, $e8, $ea, $e9, $e7
1a823     E5 E3 E7 F3 
1a827     F6 F2 F0 EE 
1a82b     EF F4 FB 01 
1a82f     03 FE F9 FE | 	byte	$e5, $e3, $e7, $f3, $f6, $f2, $f0, $ee, $ef, $f4, $fb, $01, $03, $fe, $f9, $fe
1a833     09 0D 07 0A 
1a837     0E 0E 0D 0F 
1a83b     11 08 01 03 
1a83f     0B 0C 0B 09 | 	byte	$09, $0d, $07, $0a, $0e, $0e, $0d, $0f, $11, $08, $01, $03, $0b, $0c, $0b, $09
1a843     08 09 0E 0F 
1a847     0B 08 05 03 
1a84b     05 09 02 F8 
1a84f     F2 F1 F2 F4 | 	byte	$08, $09, $0e, $0f, $0b, $08, $05, $03, $05, $09, $02, $f8, $f2, $f1, $f2, $f4
1a853     F3 F0 EA E6 
1a857     E3 E7 E8 E2 
1a85b     DC DF E9 EF 
1a85f     F2 EF EB EC | 	byte	$f3, $f0, $ea, $e6, $e3, $e7, $e8, $e2, $dc, $df, $e9, $ef, $f2, $ef, $eb, $ec
1a863     F0 F1 F7 FF 
1a867     00 F8 F4 FF 
1a86b     07 04 03 09 
1a86f     0C 0C 0E 14 | 	byte	$f0, $f1, $f7, $ff, $00, $f8, $f4, $ff, $07, $04, $03, $09, $0c, $0c, $0e, $14
1a873     10 05 00 05 
1a877     0F 0F 08 08 
1a87b     0D 0D 0E 12 
1a87f     14 0A 04 07 | 	byte	$10, $05, $00, $05, $0f, $0f, $08, $08, $0d, $0d, $0e, $12, $14, $0a, $04, $07
1a883     0C 0C 08 00 
1a887     F4 F2 F5 F8 
1a88b     F8 F4 EA E6 
1a88f     E9 ED E9 E2 | 	byte	$0c, $0c, $08, $00, $f4, $f2, $f5, $f8, $f8, $f4, $ea, $e6, $e9, $ed, $e9, $e2
1a893     E0 DF E7 EF 
1a897     F0 EE EE EC 
1a89b     EB F0 FB FE 
1a89f     FA F5 F7 FE | 	byte	$e0, $df, $e7, $ef, $f0, $ee, $ee, $ec, $eb, $f0, $fb, $fe, $fa, $f5, $f7, $fe
1a8a3     05 05 03 04 
1a8a7     09 0D 0F 12 
1a8ab     0E 03 FE 07 
1a8af     0C 0B 07 07 | 	byte	$05, $05, $03, $04, $09, $0d, $0f, $12, $0e, $03, $fe, $07, $0c, $0b, $07, $07
1a8b3     06 07 10 15 
1a8b7     0F 06 03 07 
1a8bb     0F 0E 05 FA 
1a8bf     F4 F2 F6 FA | 	byte	$06, $07, $10, $15, $0f, $06, $03, $07, $0f, $0e, $05, $fa, $f4, $f2, $f6, $fa
1a8c3     F8 F0 E9 E6 
1a8c7     E8 ED E9 E0 
1a8cb     DD E1 E6 EB 
1a8cf     EF EE E8 E8 | 	byte	$f8, $f0, $e9, $e6, $e8, $ed, $e9, $e0, $dd, $e1, $e6, $eb, $ef, $ee, $e8, $e8
1a8d3     EF F7 F9 F8 
1a8d7     FB F9 F8 FF 
1a8db     08 09 03 03 
1a8df     0A 13 15 0E | 	byte	$ef, $f7, $f9, $f8, $fb, $f9, $f8, $ff, $08, $09, $03, $03, $0a, $13, $15, $0e
1a8e3     0A 06 01 04 
1a8e7     0D 0F 06 02 
1a8eb     07 0C 11 13 
1a8ef     0E 05 05 0A | 	byte	$0a, $06, $01, $04, $0d, $0f, $06, $02, $07, $0c, $11, $13, $0e, $05, $05, $0a
1a8f3     10 11 08 FA 
1a8f7     F3 F7 FB FD 
1a8fb     F9 F0 E9 EB 
1a8ff     EC E9 E4 E3 | 	byte	$10, $11, $08, $fa, $f3, $f7, $fb, $fd, $f9, $f0, $e9, $eb, $ec, $e9, $e4, $e3
1a903     E0 DE E3 ED 
1a907     EF E8 E5 EB 
1a90b     F0 F2 F5 F6 
1a90f     F6 F6 F8 FF | 	byte	$e0, $de, $e3, $ed, $ef, $e8, $e5, $eb, $f0, $f2, $f5, $f6, $f6, $f6, $f8, $ff
1a913     07 04 FE 03 
1a917     0F 15 10 10 
1a91b     0F 08 02 09 
1a91f     13 11 06 03 | 	byte	$07, $04, $fe, $03, $0f, $15, $10, $10, $0f, $08, $02, $09, $13, $11, $06, $03
1a923     0B 12 17 16 
1a927     11 09 08 0F 
1a92b     15 12 0A 00 
1a92f     F6 FA FF 00 | 	byte	$0b, $12, $17, $16, $11, $09, $08, $0f, $15, $12, $0a, $00, $f6, $fa, $ff, $00
1a933     FA F3 F0 EC 
1a937     E9 EB EC E4 
1a93b     DA DE E7 EC 
1a93f     E7 E4 E7 ED | 	byte	$fa, $f3, $f0, $ec, $e9, $eb, $ec, $e4, $da, $de, $e7, $ec, $e7, $e4, $e7, $ed
1a943     F0 F1 F5 F8 
1a947     F3 F4 FD 04 
1a94b     05 02 00 05 
1a94f     0E 15 16 11 | 	byte	$f0, $f1, $f5, $f8, $f3, $f4, $fd, $04, $05, $02, $00, $05, $0e, $15, $16, $11
1a953     0C 08 07 0D 
1a957     12 0E 07 06 
1a95b     0C 11 15 14 
1a95f     10 0A 0A 0E | 	byte	$0c, $08, $07, $0d, $12, $0e, $07, $06, $0c, $11, $15, $14, $10, $0a, $0a, $0e
1a963     14 14 08 FA 
1a967     F8 FC FE F8 
1a96b     F6 F6 EE E8 
1a96f     E8 EA E5 E0 | 	byte	$14, $14, $08, $fa, $f8, $fc, $fe, $f8, $f6, $f6, $ee, $e8, $e8, $ea, $e5, $e0
1a973     DC DD E1 E6 
1a977     E3 E3 E5 E8 
1a97b     ED F0 F3 F2 
1a97f     F0 F5 FC FF | 	byte	$dc, $dd, $e1, $e6, $e3, $e3, $e5, $e8, $ed, $f0, $f3, $f2, $f0, $f5, $fc, $ff
1a983     FF 01 03 02 
1a987     07 12 15 12 
1a98b     0C 09 0A 0B 
1a98f     0F 0E 09 04 | 	byte	$ff, $01, $03, $02, $07, $12, $15, $12, $0c, $09, $0a, $0b, $0f, $0e, $09, $04
1a993     0A 12 13 13 
1a997     12 10 0A 0D 
1a99b     14 15 0C 02 
1a99f     FE FC FC FD | 	byte	$0a, $12, $13, $13, $12, $10, $0a, $0d, $14, $15, $0c, $02, $fe, $fc, $fc, $fd
1a9a3     FE F8 F1 EE 
1a9a7     EE EA E7 E4 
1a9ab     E3 DF DF E3 
1a9af     E6 E4 E4 E7 | 	byte	$fe, $f8, $f1, $ee, $ee, $ea, $e7, $e4, $e3, $df, $df, $e3, $e6, $e4, $e4, $e7
1a9b3     EE F2 F0 F0 
1a9b7     F1 F4 F8 FC 
1a9bb     FD FF 00 00 
1a9bf     06 0F 14 10 | 	byte	$ee, $f2, $f0, $f0, $f1, $f4, $f8, $fc, $fd, $ff, $00, $00, $06, $0f, $14, $10
1a9c3     0D 0D 0D 0B 
1a9c7     0E 0C 0B 08 
1a9cb     07 0E 12 16 
1a9cf     13 0E 0E 12 | 	byte	$0d, $0d, $0d, $0b, $0e, $0c, $0b, $08, $07, $0e, $12, $16, $13, $0e, $0e, $12
1a9d3     13 11 0C 08 
1a9d7     00 FA FB FC 
1a9db     FA F5 F2 EF 
1a9df     EA E4 E3 E5 | 	byte	$13, $11, $0c, $08, $00, $fa, $fb, $fc, $fa, $f5, $f2, $ef, $ea, $e4, $e3, $e5
1a9e3     E1 DA DA DF 
1a9e7     E2 DD DD E6 
1a9eb     EC EC E9 ED 
1a9ef     F0 F2 F4 F9 | 	byte	$e1, $da, $da, $df, $e2, $dd, $dd, $e6, $ec, $ec, $e9, $ed, $f0, $f2, $f4, $f9
1a9f3     FC FC FD FF 
1a9f7     03 0B 13 12 
1a9fb     0D 0C 10 10 
1a9ff     0C 0B 0F 0C | 	byte	$fc, $fc, $fd, $ff, $03, $0b, $13, $12, $0d, $0c, $10, $10, $0c, $0b, $0f, $0c
1aa03     06 0D 14 13 
1aa07     10 12 13 10 
1aa0b     10 13 13 0C 
1aa0f     01 FE 00 FF | 	byte	$06, $0d, $14, $13, $10, $12, $13, $10, $10, $13, $13, $0c, $01, $fe, $00, $ff
1aa13     FA F7 F8 F6 
1aa17     EE E7 E7 E8 
1aa1b     E6 E0 DF E2 
1aa1f     E2 E0 E1 E7 | 	byte	$fa, $f7, $f8, $f6, $ee, $e7, $e7, $e8, $e6, $e0, $df, $e2, $e2, $e0, $e1, $e7
1aa23     EB EC EC EF 
1aa27     F0 F0 F6 FB 
1aa2b     F9 F8 FC FF 
1aa2f     03 09 0E 0E | 	byte	$eb, $ec, $ec, $ef, $f0, $f0, $f6, $fb, $f9, $f8, $fc, $ff, $03, $09, $0e, $0e
1aa33     0E 0F 10 0C 
1aa37     0C 0D 0A 07 
1aa3b     08 0D 11 0F 
1aa3f     0F 13 13 0E | 	byte	$0e, $0f, $10, $0c, $0c, $0d, $0a, $07, $08, $0d, $11, $0f, $0f, $13, $13, $0e
1aa43     0F 12 10 08 
1aa47     03 01 FE FC 
1aa4b     FA FC FA F2 
1aa4f     EC EB E8 E5 | 	byte	$0f, $12, $10, $08, $03, $01, $fe, $fc, $fa, $fc, $fa, $f2, $ec, $eb, $e8, $e5
1aa53     E3 E4 DF DD 
1aa57     DC DC DF E3 
1aa5b     E7 E8 E7 EA 
1aa5f     EC EE F0 F5 | 	byte	$e3, $e4, $df, $dd, $dc, $dc, $df, $e3, $e7, $e8, $e7, $ea, $ec, $ee, $f0, $f5
1aa63     F7 F3 F5 FE 
1aa67     03 04 07 0F 
1aa6b     10 0E 0F 11 
1aa6f     0E 09 08 0B | 	byte	$f7, $f3, $f5, $fe, $03, $04, $07, $0f, $10, $0e, $0f, $11, $0e, $09, $08, $0b
1aa73     0E 0B 0C 11 
1aa77     15 14 12 12 
1aa7b     13 14 10 0D 
1aa7f     0D 08 00 FE | 	byte	$0e, $0b, $0c, $11, $15, $14, $12, $12, $13, $14, $10, $0d, $0d, $08, $00, $fe
1aa83     00 00 FB F8 
1aa87     F4 EC E8 E7 
1aa8b     EA E8 E0 DC 
1aa8f     DD DD DE E2 | 	byte	$00, $00, $fb, $f8, $f4, $ec, $e8, $e7, $ea, $e8, $e0, $dc, $dd, $dd, $de, $e2
1aa93     E7 E9 E8 E9 
1aa97     EC EE F1 F6 
1aa9b     F4 F0 F5 FF 
1aa9f     01 FF 05 0F | 	byte	$e7, $e9, $e8, $e9, $ec, $ee, $f1, $f6, $f4, $f0, $f5, $ff, $01, $ff, $05, $0f
1aaa3     11 0F 0F 14 
1aaa7     10 07 07 0F 
1aaab     10 0B 0C 11 
1aaaf     13 13 16 17 | 	byte	$11, $0f, $0f, $14, $10, $07, $07, $0f, $10, $0b, $0c, $11, $13, $13, $16, $17
1aab3     13 10 11 14 
1aab7     10 07 01 00 
1aabb     FF FE FD FD 
1aabf     F8 F0 E8 EA | 	byte	$13, $10, $11, $14, $10, $07, $01, $00, $ff, $fe, $fd, $fd, $f8, $f0, $e8, $ea
1aac3     EE ED E4 DE 
1aac7     DE DF E0 E4 
1aacb     E8 EB EA EA 
1aacf     ED F2 F3 F2 | 	byte	$ee, $ed, $e4, $de, $de, $df, $e0, $e4, $e8, $eb, $ea, $ea, $ed, $f2, $f3, $f2
1aad3     F4 F3 F4 FE 
1aad7     01 01 02 09 
1aadb     0F 11 13 13 
1aadf     0F 0B 0B 0F | 	byte	$f4, $f3, $f4, $fe, $01, $01, $02, $09, $0f, $11, $13, $13, $0f, $0b, $0b, $0f
1aae3     10 0E 0E 11 
1aae7     13 15 19 19 
1aaeb     14 12 13 14 
1aaef     11 0C 06 00 | 	byte	$10, $0e, $0e, $11, $13, $15, $19, $19, $14, $12, $13, $14, $11, $0c, $06, $00
1aaf3     FE FE FF 00 
1aaf7     F9 F0 E9 E9 
1aafb     EC EC E5 DC 
1aaff     D9 D9 D9 DE | 	byte	$fe, $fe, $ff, $00, $f9, $f0, $e9, $e9, $ec, $ec, $e5, $dc, $d9, $d9, $d9, $de
1ab03     E5 E7 E2 E3 
1ab07     EB EF EE EB 
1ab0b     EE F1 F0 F5 
1ab0f     FE 01 FE 03 | 	byte	$e5, $e7, $e2, $e3, $eb, $ef, $ee, $eb, $ee, $f1, $f0, $f5, $fe, $01, $fe, $03
1ab13     0E 13 12 12 
1ab17     11 0F 0C 0D 
1ab1b     11 13 0D 0D 
1ab1f     14 1B 1C 19 | 	byte	$0e, $13, $12, $12, $11, $0f, $0c, $0d, $11, $13, $0d, $0d, $14, $1b, $1c, $19
1ab23     18 16 17 16 
1ab27     14 0E 08 00 
1ab2b     FE FE 00 01 
1ab2f     FA F1 EB EA | 	byte	$18, $16, $17, $16, $14, $0e, $08, $00, $fe, $fe, $00, $01, $fa, $f1, $eb, $ea
1ab33     EC EB E6 E0 
1ab37     DA D9 DB DF 
1ab3b     E4 E5 E3 E7 
1ab3f     ED F0 EE EE | 	byte	$ec, $eb, $e6, $e0, $da, $d9, $db, $df, $e4, $e5, $e3, $e7, $ed, $f0, $ee, $ee
1ab43     F1 F1 F1 F6 
1ab47     FF 00 FC FF 
1ab4b     0F 14 0F 0F 
1ab4f     13 10 0A 0B | 	byte	$f1, $f1, $f1, $f6, $ff, $00, $fc, $ff, $0f, $14, $0f, $0f, $13, $10, $0a, $0b
1ab53     11 11 0B 0B 
1ab57     13 19 1B 19 
1ab5b     18 17 15 14 
1ab5f     13 10 08 00 | 	byte	$11, $11, $0b, $0b, $13, $19, $1b, $19, $18, $17, $15, $14, $13, $10, $08, $00
1ab63     FD 00 01 FE 
1ab67     FA F3 EE E9 
1ab6b     E9 EC E9 E0 
1ab6f     D7 D7 DD E1 | 	byte	$fd, $00, $01, $fe, $fa, $f3, $ee, $e9, $e9, $ec, $e9, $e0, $d7, $d7, $dd, $e1
1ab73     E0 E1 E4 E8 
1ab77     ED EF EE EC 
1ab7b     F0 F1 F0 F5 
1ab7f     FB FC FA FF | 	byte	$e0, $e1, $e4, $e8, $ed, $ef, $ee, $ec, $f0, $f1, $f0, $f5, $fb, $fc, $fa, $ff
1ab83     09 0F 10 0E 
1ab87     0F 0D 0A 0A 
1ab8b     0F 0E 08 0A 
1ab8f     13 19 18 19 | 	byte	$09, $0f, $10, $0e, $0f, $0d, $0a, $0a, $0f, $0e, $08, $0a, $13, $19, $18, $19
1ab93     1A 17 15 15 
1ab97     16 11 08 01 
1ab9b     00 01 02 00 
1ab9f     FC F7 F0 EB | 	byte	$1a, $17, $15, $15, $16, $11, $08, $01, $00, $01, $02, $00, $fc, $f7, $f0, $eb
1aba3     EB EE E8 E0 
1aba7     D7 DA DB DC 
1abab     DE E0 E3 E6 
1abaf     E9 EE EF EB | 	byte	$eb, $ee, $e8, $e0, $d7, $da, $db, $dc, $de, $e0, $e3, $e6, $e9, $ee, $ef, $eb
1abb3     EB F2 F4 F2 
1abb7     F7 FB FC FF 
1abbb     0B 11 11 0F 
1abbf     10 0F 0C 0A | 	byte	$eb, $f2, $f4, $f2, $f7, $fb, $fc, $ff, $0b, $11, $11, $0f, $10, $0f, $0c, $0a
1abc3     0C 0D 0B 09 
1abc7     0F 17 1B 18 
1abcb     15 15 16 15 
1abcf     13 0F 08 02 | 	byte	$0c, $0d, $0b, $09, $0f, $17, $1b, $18, $15, $15, $16, $15, $13, $0f, $08, $02
1abd3     00 00 00 FF 
1abd7     FE F6 EE EC 
1abdb     EC EC E7 DC 
1abdf     D7 D9 D9 D8 | 	byte	$00, $00, $00, $ff, $fe, $f6, $ee, $ec, $ec, $ec, $e7, $dc, $d7, $d9, $d9, $d8
1abe3     DB DF E1 E5 
1abe7     EB ED EB E9 
1abeb     EE F2 F1 F1 
1abef     F7 FB FC FE | 	byte	$db, $df, $e1, $e5, $eb, $ed, $eb, $e9, $ee, $f2, $f1, $f1, $f7, $fb, $fc, $fe
1abf3     07 10 10 0C 
1abf7     0C 0F 0D 08 
1abfb     0B 0E 09 07 
1abff     0F 18 18 18 | 	byte	$07, $10, $10, $0c, $0c, $0f, $0d, $08, $0b, $0e, $09, $07, $0f, $18, $18, $18
1ac03     19 18 17 16 
1ac07     17 12 0D 07 
1ac0b     01 03 05 03 
1ac0f     FE FA F4 F0 | 	byte	$19, $18, $17, $16, $17, $12, $0d, $07, $01, $03, $05, $03, $fe, $fa, $f4, $f0
1ac13     EF ED E8 E0 
1ac17     DA D8 D7 D9 
1ac1b     DA DB DF E3 
1ac1f     E8 EB E9 E6 | 	byte	$ef, $ed, $e8, $e0, $da, $d8, $d7, $d9, $da, $db, $df, $e3, $e8, $eb, $e9, $e6
1ac23     E8 EF F0 ED 
1ac27     F1 F8 F8 FB 
1ac2b     03 0C 0C 0C 
1ac2f     0D 0D 0B 0A | 	byte	$e8, $ef, $f0, $ed, $f1, $f8, $f8, $fb, $03, $0c, $0c, $0c, $0d, $0d, $0b, $0a
1ac33     09 0A 08 07 
1ac37     0E 15 19 1A 
1ac3b     18 1A 19 16 
1ac3f     14 14 0E 07 | 	byte	$09, $0a, $08, $07, $0e, $15, $19, $1a, $18, $1a, $19, $16, $14, $14, $0e, $07
1ac43     04 03 05 06 
1ac47     01 FC F8 F6 
1ac4b     F1 F0 ED E4 
1ac4f     DD DC DA D9 | 	byte	$04, $03, $05, $06, $01, $fc, $f8, $f6, $f1, $f0, $ed, $e4, $dd, $dc, $da, $d9
1ac53     DA DF E3 E5 
1ac57     E9 EC EC EA 
1ac5b     EB EE F0 F2 
1ac5f     F3 F7 FC 00 | 	byte	$da, $df, $e3, $e5, $e9, $ec, $ec, $ea, $eb, $ee, $f0, $f2, $f3, $f7, $fc, $00
1ac63     05 0F 13 10 
1ac67     0E 13 13 0E 
1ac6b     0B 0E 0E 0A 
1ac6f     0F 18 1B 1C | 	byte	$05, $0f, $13, $10, $0e, $13, $13, $0e, $0b, $0e, $0e, $0a, $0f, $18, $1b, $1c
1ac73     1C 1A 18 18 
1ac77     17 14 0F 08 
1ac7b     04 05 06 02 
1ac7f     00 00 FC F4 | 	byte	$1c, $1a, $18, $18, $17, $14, $0f, $08, $04, $05, $06, $02, $00, $00, $fc, $f4
1ac83     F0 F1 ED E4 
1ac87     DF DC DA D8 
1ac8b     D9 DD E0 E3 
1ac8f     E7 EB EA E6 | 	byte	$f0, $f1, $ed, $e4, $df, $dc, $da, $d8, $d9, $dd, $e0, $e3, $e7, $eb, $ea, $e6
1ac93     E7 EE EE EC 
1ac97     EE F4 F7 F9 
1ac9b     FF 0B 0E 0C 
1ac9f     0C 0E 0F 0E | 	byte	$e7, $ee, $ee, $ec, $ee, $f4, $f7, $f9, $ff, $0b, $0e, $0c, $0c, $0e, $0f, $0e
1aca3     08 08 0B 0A 
1aca7     0B 15 1B 1A 
1acab     1B 1C 1B 18 
1acaf     18 16 0F 0A | 	byte	$08, $08, $0b, $0a, $0b, $15, $1b, $1a, $1b, $1c, $1b, $18, $18, $16, $0f, $0a
1acb3     07 06 04 03 
1acb7     03 00 FC F8 
1acbb     F4 F0 EC E7 
1acbf     E1 DE DB D5 | 	byte	$07, $06, $04, $03, $03, $00, $fc, $f8, $f4, $f0, $ec, $e7, $e1, $de, $db, $d5
1acc3     D8 DD DF E1 
1acc7     E6 EA E9 E7 
1accb     E7 EA EC EE 
1accf     ED EE F7 FE | 	byte	$d8, $dd, $df, $e1, $e6, $ea, $e9, $e7, $e7, $ea, $ec, $ee, $ed, $ee, $f7, $fe
1acd3     01 07 0F 0E 
1acd7     0C 0F 12 0C 
1acdb     09 09 0A 0B 
1acdf     0C 13 1A 1C | 	byte	$01, $07, $0f, $0e, $0c, $0f, $12, $0c, $09, $09, $0a, $0b, $0c, $13, $1a, $1c
1ace3     1B 1A 1C 1B 
1ace7     16 10 0E 0C 
1aceb     07 02 01 01 
1acef     00 00 FD F6 | 	byte	$1b, $1a, $1c, $1b, $16, $10, $0e, $0c, $07, $02, $01, $01, $00, $00, $fd, $f6
1acf3     F2 F0 EB E6 
1acf7     E0 DC D8 D3 
1acfb     D5 D9 DF E2 
1acff     E5 E9 E9 E6 | 	byte	$f2, $f0, $eb, $e6, $e0, $dc, $d8, $d3, $d5, $d9, $df, $e2, $e5, $e9, $e9, $e6
1ad03     E5 EB EE EA 
1ad07     EA F1 F9 FD 
1ad0b     01 0A 0F 10 
1ad0f     0E 13 17 11 | 	byte	$e5, $eb, $ee, $ea, $ea, $f1, $f9, $fd, $01, $0a, $0f, $10, $0e, $13, $17, $11
1ad13     0A 0C 10 0F 
1ad17     10 17 1C 1C 
1ad1b     1E 21 20 1B 
1ad1f     18 16 11 0E | 	byte	$0a, $0c, $10, $0f, $10, $17, $1c, $1c, $1e, $21, $20, $1b, $18, $16, $11, $0e
1ad23     0B 07 04 02 
1ad27     01 02 00 F8 
1ad2b     F1 F0 EC E6 
1ad2f     E2 DE D6 D2 | 	byte	$0b, $07, $04, $02, $01, $02, $00, $f8, $f1, $f0, $ec, $e6, $e2, $de, $d6, $d2
1ad33     D6 DC DC DE 
1ad37     E5 E8 E4 E1 
1ad3b     E3 E7 E8 E6 
1ad3f     E4 EB F6 F9 | 	byte	$d6, $dc, $dc, $de, $e5, $e8, $e4, $e1, $e3, $e7, $e8, $e6, $e4, $eb, $f6, $f9
1ad43     FE 04 09 09 
1ad47     0B 0F 10 0B 
1ad4b     07 07 0A 0C 
1ad4f     0F 16 18 1C | 	byte	$fe, $04, $09, $09, $0b, $0f, $10, $0b, $07, $07, $0a, $0c, $0f, $16, $18, $1c
1ad53     1D 1F 1F 1B 
1ad57     16 12 10 0E 
1ad5b     0A 04 01 03 
1ad5f     05 03 FE F8 | 	byte	$1d, $1f, $1f, $1b, $16, $12, $10, $0e, $0a, $04, $01, $03, $05, $03, $fe, $f8
1ad63     F3 F0 EB E7 
1ad67     E3 DC D6 D3 
1ad6b     D6 DA DF E2 
1ad6f     E5 E7 E6 E4 | 	byte	$f3, $f0, $eb, $e7, $e3, $dc, $d6, $d3, $d6, $da, $df, $e2, $e5, $e7, $e6, $e4
1ad73     E6 E7 E8 E8 
1ad77     E8 EE F7 FC 
1ad7b     00 05 0B 0C 
1ad7f     0D 11 16 10 | 	byte	$e6, $e7, $e8, $e8, $e8, $ee, $f7, $fc, $00, $05, $0b, $0c, $0d, $11, $16, $10
1ad83     06 08 0F 0F 
1ad87     0F 16 1C 1D 
1ad8b     1F 20 20 1C 
1ad8f     17 13 12 10 | 	byte	$06, $08, $0f, $0f, $0f, $16, $1c, $1d, $1f, $20, $20, $1c, $17, $13, $12, $10
1ad93     0C 05 01 03 
1ad97     05 05 01 F8 
1ad9b     F1 F0 EE E7 
1ad9f     E3 DE D8 D3 | 	byte	$0c, $05, $01, $03, $05, $05, $01, $f8, $f1, $f0, $ee, $e7, $e3, $de, $d8, $d3
1ada3     D5 DA DF E0 
1ada7     E3 E7 E7 E3 
1adab     E3 E7 E8 E5 
1adaf     E4 ED F6 F9 | 	byte	$d5, $da, $df, $e0, $e3, $e7, $e7, $e3, $e3, $e7, $e8, $e5, $e4, $ed, $f6, $f9
1adb3     FB 01 07 0A 
1adb7     0C 10 12 0F 
1adbb     08 07 0B 0F 
1adbf     11 14 1A 1C | 	byte	$fb, $01, $07, $0a, $0c, $10, $12, $0f, $08, $07, $0b, $0f, $11, $14, $1a, $1c
1adc3     20 22 23 1F 
1adc7     18 16 16 13 
1adcb     0F 09 04 06 
1adcf     0B 09 02 FC | 	byte	$20, $22, $23, $1f, $18, $16, $16, $13, $0f, $09, $04, $06, $0b, $09, $02, $fc
1add3     F7 F4 EE E9 
1add7     E7 E4 DA D3 
1addb     D5 DC DF DF 
1addf     E3 E9 EA E4 | 	byte	$f7, $f4, $ee, $e9, $e7, $e4, $da, $d3, $d5, $dc, $df, $df, $e3, $e9, $ea, $e4
1ade3     E4 E7 E8 E6 
1ade7     E7 EB F3 FA 
1adeb     FB FD 05 0B 
1adef     0C 0E 13 10 | 	byte	$e4, $e7, $e8, $e6, $e7, $eb, $f3, $fa, $fb, $fd, $05, $0b, $0c, $0e, $13, $10
1adf3     09 06 0B 11 
1adf7     10 12 1A 1F 
1adfb     20 22 24 22 
1adff     1D 18 15 17 | 	byte	$09, $06, $0b, $11, $10, $12, $1a, $1f, $20, $22, $24, $22, $1d, $18, $15, $17
1ae03     12 0A 04 07 
1ae07     0C 0A 05 FE 
1ae0b     FA F4 F0 EB 
1ae0f     E8 E4 DC D3 | 	byte	$12, $0a, $04, $07, $0c, $0a, $05, $fe, $fa, $f4, $f0, $eb, $e8, $e4, $dc, $d3
1ae13     D2 D7 DC DC 
1ae17     DF E4 E6 E5 
1ae1b     E2 E3 E4 E2 
1ae1f     E4 E9 F1 F4 | 	byte	$d2, $d7, $dc, $dc, $df, $e4, $e6, $e5, $e2, $e3, $e4, $e2, $e4, $e9, $f1, $f4
1ae23     F8 FC 03 09 
1ae27     09 0E 14 14 
1ae2b     0C 06 0A 10 
1ae2f     11 0F 17 1F | 	byte	$f8, $fc, $03, $09, $09, $0e, $14, $14, $0c, $06, $0a, $10, $11, $0f, $17, $1f
1ae33     20 20 23 22 
1ae37     1C 19 18 16 
1ae3b     11 0B 07 08 
1ae3f     09 08 08 03 | 	byte	$20, $20, $23, $22, $1c, $19, $18, $16, $11, $0b, $07, $08, $09, $08, $08, $03
1ae43     FC F5 F1 EE 
1ae47     EA E5 DE D6 
1ae4b     D1 D5 D9 DA 
1ae4f     DC E3 E5 E2 | 	byte	$fc, $f5, $f1, $ee, $ea, $e5, $de, $d6, $d1, $d5, $d9, $da, $dc, $e3, $e5, $e2
1ae53     E0 E2 E0 DF 
1ae57     E1 E6 EB EF 
1ae5b     F6 F9 FD 03 
1ae5f     09 0C 0F 11 | 	byte	$e0, $e2, $e0, $df, $e1, $e6, $eb, $ef, $f6, $f9, $fd, $03, $09, $0c, $0f, $11
1ae63     0C 06 07 0B 
1ae67     0E 0F 15 1B 
1ae6b     1F 21 22 21 
1ae6f     1E 1B 18 16 | 	byte	$0c, $06, $07, $0b, $0e, $0f, $15, $1b, $1f, $21, $22, $21, $1e, $1b, $18, $16
1ae73     12 0E 0A 09 
1ae77     0B 0C 0A 04 
1ae7b     00 F9 F4 EF 
1ae7f     EA E8 E0 D5 | 	byte	$12, $0e, $0a, $09, $0b, $0c, $0a, $04, $00, $f9, $f4, $ef, $ea, $e8, $e0, $d5
1ae83     D2 D4 D9 D9 
1ae87     DC E0 E6 E5 
1ae8b     E1 DF E0 E2 
1ae8f     E5 E6 E9 F1 | 	byte	$d2, $d4, $d9, $d9, $dc, $e0, $e6, $e5, $e1, $df, $e0, $e2, $e5, $e6, $e9, $f1
1ae93     F8 F9 FB 03 
1ae97     09 0D 0E 11 
1ae9b     10 08 06 0B 
1ae9f     0F 10 13 1D | 	byte	$f8, $f9, $fb, $03, $09, $0d, $0e, $11, $10, $08, $06, $0b, $0f, $10, $13, $1d
1aea3     22 20 20 23 
1aea7     23 1C 18 16 
1aeab     14 12 0B 07 
1aeaf     0C 0E 0B 07 | 	byte	$22, $20, $20, $23, $23, $1c, $18, $16, $14, $12, $0b, $07, $0c, $0e, $0b, $07
1aeb3     00 FA F6 F1 
1aeb7     EC E7 E2 D8 
1aebb     D2 D1 D5 D6 
1aebf     D7 DD E4 E1 | 	byte	$00, $fa, $f6, $f1, $ec, $e7, $e2, $d8, $d2, $d1, $d5, $d6, $d7, $dd, $e4, $e1
1aec3     DC DC DF DE 
1aec7     DF E3 E6 ED 
1aecb     F1 F4 F8 FF 
1aecf     07 0A 0D 13 | 	byte	$dc, $dc, $df, $de, $df, $e3, $e6, $ed, $f1, $f4, $f8, $ff, $07, $0a, $0d, $13
1aed3     10 08 05 0B 
1aed7     0F 0F 14 1B 
1aedb     20 1F 1F 23 
1aedf     23 1C 18 17 | 	byte	$10, $08, $05, $0b, $0f, $0f, $14, $1b, $20, $1f, $1f, $23, $23, $1c, $18, $17
1aee3     14 10 0E 0B 
1aee7     0B 0C 0B 07 
1aeeb     01 FE F7 F1 
1aeef     EC EB E4 D8 | 	byte	$14, $10, $0e, $0b, $0b, $0c, $0b, $07, $01, $fe, $f7, $f1, $ec, $eb, $e4, $d8
1aef3     D1 D3 D5 D3 
1aef7     D7 DF E3 E0 
1aefb     DA DB DE DC 
1aeff     DE E1 E3 E8 | 	byte	$d1, $d3, $d5, $d3, $d7, $df, $e3, $e0, $da, $db, $de, $dc, $de, $e1, $e3, $e8
1af03     EF F3 F5 FC 
1af07     03 09 0C 0F 
1af0b     0F 0B 06 09 
1af0f     0E 11 17 1C | 	byte	$ef, $f3, $f5, $fc, $03, $09, $0c, $0f, $0f, $0b, $06, $09, $0e, $11, $17, $1c
1af13     1F 1E 22 26 
1af17     24 20 18 17 
1af1b     18 14 0E 0B 
1af1f     0D 0D 0A 07 | 	byte	$1f, $1e, $22, $26, $24, $20, $18, $17, $18, $14, $0e, $0b, $0d, $0d, $0a, $07
1af23     04 00 F8 F2 
1af27     F0 EB E6 DD 
1af2b     D5 D1 D3 D6 
1af2f     D9 DF E1 E0 | 	byte	$04, $00, $f8, $f2, $f0, $eb, $e6, $dd, $d5, $d1, $d3, $d6, $d9, $df, $e1, $e0
1af33     DE DC DC DC 
1af37     E0 E3 E4 E6 
1af3b     EF F4 F6 FB 
1af3f     03 08 0C 0F | 	byte	$de, $dc, $dc, $dc, $e0, $e3, $e4, $e6, $ef, $f4, $f6, $fb, $03, $08, $0c, $0f
1af43     11 0C 08 07 
1af47     0F 16 18 1C 
1af4b     20 21 23 27 
1af4f     28 22 1C 1A | 	byte	$11, $0c, $08, $07, $0f, $16, $18, $1c, $20, $21, $23, $27, $28, $22, $1c, $1a
1af53     18 16 13 0F 
1af57     0D 0C 0E 0C 
1af5b     06 00 FC F6 
1af5f     F0 ED EA E2 | 	byte	$18, $16, $13, $0f, $0d, $0c, $0e, $0c, $06, $00, $fc, $f6, $f0, $ed, $ea, $e2
1af63     D8 D1 D2 D6 
1af67     D9 DF E1 E1 
1af6b     DE DB DC DF 
1af6f     DF E2 E4 E7 | 	byte	$d8, $d1, $d2, $d6, $d9, $df, $e1, $e1, $de, $db, $dc, $df, $df, $e2, $e4, $e7
1af73     ED F2 F4 F9 
1af77     01 07 09 0F 
1af7b     11 0C 05 06 
1af7f     0E 15 18 19 | 	byte	$ed, $f2, $f4, $f9, $01, $07, $09, $0f, $11, $0c, $05, $06, $0e, $15, $18, $19
1af83     1D 20 23 27 
1af87     28 23 1E 19 
1af8b     18 19 14 0F 
1af8f     0F 10 0E 0B | 	byte	$1d, $20, $23, $27, $28, $23, $1e, $19, $18, $19, $14, $0f, $0f, $10, $0e, $0b
1af93     09 04 FE F5 
1af97     F0 F0 EE E2 
1af9b     D6 D2 D6 D7 
1af9f     D9 DF E3 E1 | 	byte	$09, $04, $fe, $f5, $f0, $f0, $ee, $e2, $d6, $d2, $d6, $d7, $d9, $df, $e3, $e1
1afa3     DC DB DD DF 
1afa7     E1 E4 E5 E6 
1afab     EB F3 F7 F8 
1afaf     FE 07 0C 0E | 	byte	$dc, $db, $dd, $df, $e1, $e4, $e5, $e6, $eb, $f3, $f7, $f8, $fe, $07, $0c, $0e
1afb3     0F 0C 07 05 
1afb7     0D 15 18 19 
1afbb     1E 21 20 26 
1afbf     2A 24 1C 19 | 	byte	$0f, $0c, $07, $05, $0d, $15, $18, $19, $1e, $21, $20, $26, $2a, $24, $1c, $19
1afc3     19 18 16 11 
1afc7     0F 10 0F 0C 
1afcb     09 04 FC F4 
1afcf     F0 EF E9 E0 | 	byte	$19, $18, $16, $11, $0f, $10, $0f, $0c, $09, $04, $fc, $f4, $f0, $ef, $e9, $e0
1afd3     D6 D0 CF D2 
1afd7     D8 DD DF DC 
1afdb     D8 D9 DB DA 
1afdf     DE E3 E1 E1 | 	byte	$d6, $d0, $cf, $d2, $d8, $dd, $df, $dc, $d8, $d9, $db, $da, $de, $e3, $e1, $e1
1afe3     EA F3 F4 F6 
1afe7     FD 06 0B 0E 
1afeb     0E 0B 05 05 
1afef     0B 13 18 19 | 	byte	$ea, $f3, $f4, $f6, $fd, $06, $0b, $0e, $0e, $0b, $05, $05, $0b, $13, $18, $19
1aff3     1B 1F 25 27 
1aff7     27 24 1F 1B 
1affb     19 19 18 16 
1afff     11 0F 10 11 | 	byte	$1b, $1f, $25, $27, $27, $24, $1f, $1b, $19, $19, $18, $16, $11, $0f, $10, $11
1b003     0C 06 FE F9 
1b007     F4 F0 EE E4 
1b00b     D8 D3 D1 D3 
1b00f     D7 DD DE DD | 	byte	$0c, $06, $fe, $f9, $f4, $f0, $ee, $e4, $d8, $d3, $d1, $d3, $d7, $dd, $de, $dd
1b013     D8 D5 D8 DC 
1b017     DE DF E0 E1 
1b01b     E9 F0 F2 F3 
1b01f     FB 05 0B 0A | 	byte	$d8, $d5, $d8, $dc, $de, $df, $e0, $e1, $e9, $f0, $f2, $f3, $fb, $05, $0b, $0a
1b023     0B 0C 05 01 
1b027     09 15 18 17 
1b02b     1A 1F 22 27 
1b02f     27 24 1C 19 | 	byte	$0b, $0c, $05, $01, $09, $15, $18, $17, $1a, $1f, $22, $27, $27, $24, $1c, $19
1b033     18 1A 19 14 
1b037     0F 11 13 0F 
1b03b     0B 08 03 FC 
1b03f     F4 F2 F1 E8 | 	byte	$18, $1a, $19, $14, $0f, $11, $13, $0f, $0b, $08, $03, $fc, $f4, $f2, $f1, $e8
1b043     DA D3 D3 D6 
1b047     D8 DC DF DC 
1b04b     D7 D7 DB DA 
1b04f     DB DF E0 DF | 	byte	$da, $d3, $d3, $d6, $d8, $dc, $df, $dc, $d7, $d7, $db, $da, $db, $df, $e0, $df
1b053     E6 F0 F3 F1 
1b057     F9 02 09 0D 
1b05b     0E 0B 08 06 
1b05f     0A 13 18 18 | 	byte	$e6, $f0, $f3, $f1, $f9, $02, $09, $0d, $0e, $0b, $08, $06, $0a, $13, $18, $18
1b063     1A 1F 23 26 
1b067     28 28 20 18 
1b06b     18 1B 19 15 
1b06f     11 10 10 0E | 	byte	$1a, $1f, $23, $26, $28, $28, $20, $18, $18, $1b, $19, $15, $11, $10, $10, $0e
1b073     0B 07 02 FA 
1b077     F4 F2 F0 E8 
1b07b     DC D4 D1 D1 
1b07f     D6 DC DD D8 | 	byte	$0b, $07, $02, $fa, $f4, $f2, $f0, $e8, $dc, $d4, $d1, $d1, $d6, $dc, $dd, $d8
1b083     D4 D6 D8 D8 
1b087     D8 DA DE DE 
1b08b     E1 E9 F0 F0 
1b08f     F3 FE 06 08 | 	byte	$d4, $d6, $d8, $d8, $d8, $da, $de, $de, $e1, $e9, $f0, $f0, $f3, $fe, $06, $08
1b093     08 0A 06 02 
1b097     07 0F 16 16 
1b09b     17 1C 1F 27 
1b09f     28 24 1E 1B | 	byte	$08, $0a, $06, $02, $07, $0f, $16, $16, $17, $1c, $1f, $27, $28, $24, $1e, $1b
1b0a3     19 19 19 18 
1b0a7     13 10 0F 10 
1b0ab     0E 0B 04 FD 
1b0af     F8 F4 F3 EC | 	byte	$19, $19, $19, $18, $13, $10, $0f, $10, $0e, $0b, $04, $fd, $f8, $f4, $f3, $ec
1b0b3     E0 D6 D3 D5 
1b0b7     D9 DB DD DA 
1b0bb     D5 D7 D8 D7 
1b0bf     D8 DC DC DA | 	byte	$e0, $d6, $d3, $d5, $d9, $db, $dd, $da, $d5, $d7, $d8, $d7, $d8, $dc, $dc, $da
1b0c3     E1 EA EC EB 
1b0c7     F0 FC 04 07 
1b0cb     07 08 07 03 
1b0cf     06 0F 18 18 | 	byte	$e1, $ea, $ec, $eb, $f0, $fc, $04, $07, $07, $08, $07, $03, $06, $0f, $18, $18
1b0d3     16 1E 25 28 
1b0d7     2A 29 23 1D 
1b0db     1C 1F 20 1D 
1b0df     16 13 14 15 | 	byte	$16, $1e, $25, $28, $2a, $29, $23, $1d, $1c, $1f, $20, $1d, $16, $13, $14, $15
1b0e3     11 0D 0B 03 
1b0e7     F9 F6 F7 F0 
1b0eb     E2 D8 D6 D8 
1b0ef     DB DD DC DB | 	byte	$11, $0d, $0b, $03, $f9, $f6, $f7, $f0, $e2, $d8, $d6, $d8, $db, $dd, $dc, $db
1b0f3     D9 D8 D9 DA 
1b0f7     D9 D9 DC DF 
1b0fb     E2 E8 ED EE 
1b0ff     F1 FB 03 07 | 	byte	$d9, $d8, $d9, $da, $d9, $d9, $dc, $df, $e2, $e8, $ed, $ee, $f1, $fb, $03, $07
1b103     09 09 04 03 
1b107     09 11 16 15 
1b10b     17 1E 23 27 
1b10f     2A 29 23 1E | 	byte	$09, $09, $04, $03, $09, $11, $16, $15, $17, $1e, $23, $27, $2a, $29, $23, $1e
1b113     1C 1F 20 1C 
1b117     16 14 15 12 
1b11b     11 0F 08 00 
1b11f     FA F9 F7 EC | 	byte	$1c, $1f, $20, $1c, $16, $14, $15, $12, $11, $0f, $08, $00, $fa, $f9, $f7, $ec
1b123     E0 D8 D9 D8 
1b127     D8 DB DC D8 
1b12b     D6 D7 DA D9 
1b12f     D6 D9 DB DE | 	byte	$e0, $d8, $d9, $d8, $d8, $db, $dc, $d8, $d6, $d7, $da, $d9, $d6, $d9, $db, $de
1b133     E1 E7 EB EC 
1b137     F0 F9 02 07 
1b13b     05 04 05 05 
1b13f     07 0F 14 15 | 	byte	$e1, $e7, $eb, $ec, $f0, $f9, $02, $07, $05, $04, $05, $05, $07, $0f, $14, $15
1b143     16 1D 23 29 
1b147     29 25 1E 1C 
1b14b     1F 1F 1C 1A 
1b14f     16 14 14 13 | 	byte	$16, $1d, $23, $29, $29, $25, $1e, $1c, $1f, $1f, $1c, $1a, $16, $14, $14, $13
1b153     11 0F 08 00 
1b157     FC FA F5 EA 
1b15b     E1 DA D8 D8 
1b15f     DA DC DA D7 | 	byte	$11, $0f, $08, $00, $fc, $fa, $f5, $ea, $e1, $da, $d8, $d8, $da, $dc, $da, $d7
1b163     D7 D9 D8 D6 
1b167     D5 D9 DD DC 
1b16b     DE E7 EC EA 
1b16f     ED F8 03 05 | 	byte	$d7, $d9, $d8, $d6, $d5, $d9, $dd, $dc, $de, $e7, $ec, $ea, $ed, $f8, $03, $05
1b173     03 03 07 07 
1b177     07 0F 14 16 
1b17b     17 1D 27 2B 
1b17f     28 26 23 1F | 	byte	$03, $03, $07, $07, $07, $0f, $14, $16, $17, $1d, $27, $2b, $28, $26, $23, $1f
1b183     1D 20 21 1C 
1b187     17 15 16 17 
1b18b     12 0D 0A 04 
1b18f     00 F8 F4 EC | 	byte	$1d, $20, $21, $1c, $17, $15, $16, $17, $12, $0d, $0a, $04, $00, $f8, $f4, $ec
1b193     E2 DA D8 D8 
1b197     D8 DA DA D8 
1b19b     D6 D8 D8 D5 
1b19f     D6 D8 DC DC | 	byte	$e2, $da, $d8, $d8, $d8, $da, $da, $d8, $d6, $d8, $d8, $d5, $d6, $d8, $dc, $dc
1b1a3     DF E3 E8 EA 
1b1a7     EE F7 FF 03 
1b1ab     03 04 07 04 
1b1af     05 0D 13 13 | 	byte	$df, $e3, $e8, $ea, $ee, $f7, $ff, $03, $03, $04, $07, $04, $05, $0d, $13, $13
1b1b3     12 1B 24 27 
1b1b7     27 26 24 1F 
1b1bb     1E 1F 21 1D 
1b1bf     18 18 17 14 | 	byte	$12, $1b, $24, $27, $27, $26, $24, $1f, $1e, $1f, $21, $1d, $18, $18, $17, $14
1b1c3     10 0F 0E 08 
1b1c7     FC FA F8 F0 
1b1cb     E3 DE DC D9 
1b1cf     D6 D6 D8 DA | 	byte	$10, $0f, $0e, $08, $fc, $fa, $f8, $f0, $e3, $de, $dc, $d9, $d6, $d6, $d8, $da
1b1d3     D8 D6 D8 D7 
1b1d7     D4 D6 DA DD 
1b1db     DF E1 E6 E9 
1b1df     EB F3 FB 01 | 	byte	$d8, $d6, $d8, $d7, $d4, $d6, $da, $dd, $df, $e1, $e6, $e9, $eb, $f3, $fb, $01
1b1e3     02 02 04 06 
1b1e7     06 07 0D 13 
1b1eb     15 19 1F 26 
1b1ef     28 28 24 1F | 	byte	$02, $02, $04, $06, $06, $07, $0d, $13, $15, $19, $1f, $26, $28, $28, $24, $1f
1b1f3     1F 21 20 1C 
1b1f7     1C 1C 18 14 
1b1fb     12 12 10 0B 
1b1ff     03 FC F9 F2 | 	byte	$1f, $21, $20, $1c, $1c, $1c, $18, $14, $12, $12, $10, $0b, $03, $fc, $f9, $f2
1b203     E9 E3 DE DA 
1b207     D7 D9 DB DA 
1b20b     D6 D6 D8 D4 
1b20f     D0 D2 D7 DB | 	byte	$e9, $e3, $de, $da, $d7, $d9, $db, $da, $d6, $d6, $d8, $d4, $d0, $d2, $d7, $db
1b213     DA DA E0 E7 
1b217     EA E9 F3 FF 
1b21b     01 FF 01 06 
1b21f     06 04 09 11 | 	byte	$da, $da, $e0, $e7, $ea, $e9, $f3, $ff, $01, $ff, $01, $06, $06, $04, $09, $11
1b223     16 17 1D 25 
1b227     28 27 26 24 
1b22b     22 20 1E 1F 
1b22f     21 1E 18 16 | 	byte	$16, $17, $1d, $25, $28, $27, $26, $24, $22, $20, $1e, $1f, $21, $1e, $18, $16
1b233     15 13 11 0E 
1b237     08 00 FA F4 
1b23b     F0 E8 E3 DC 
1b23f     D6 D7 D9 DB | 	byte	$15, $13, $11, $0e, $08, $00, $fa, $f4, $f0, $e8, $e3, $dc, $d6, $d7, $d9, $db
1b243     D8 D6 D7 D6 
1b247     D1 D1 D5 DA 
1b24b     D9 D9 DE E4 
1b24f     E8 E9 EF F9 | 	byte	$d8, $d6, $d7, $d6, $d1, $d1, $d5, $da, $d9, $d9, $de, $e4, $e8, $e9, $ef, $f9
1b253     FE 00 02 07 
1b257     06 02 07 0F 
1b25b     14 15 19 23 
1b25f     27 25 26 27 | 	byte	$fe, $00, $02, $07, $06, $02, $07, $0f, $14, $15, $19, $23, $27, $25, $26, $27
1b263     23 1E 1F 21 
1b267     22 21 1C 19 
1b26b     17 14 13 14 
1b26f     0F 04 FD FB | 	byte	$23, $1e, $1f, $21, $22, $21, $1c, $19, $17, $14, $13, $14, $0f, $04, $fd, $fb
1b273     F6 EE E8 E2 
1b277     DE D9 DB DF 
1b27b     DF DC DB D8 
1b27f     D6 D6 D8 DA | 	byte	$f6, $ee, $e8, $e2, $de, $d9, $db, $df, $df, $dc, $db, $d8, $d6, $d6, $d8, $da
1b283     DB DE DF E3 
1b287     E7 E9 ED F4 
1b28b     FB 00 00 03 
1b28f     06 04 04 0B | 	byte	$db, $de, $df, $e3, $e7, $e9, $ed, $f4, $fb, $00, $00, $03, $06, $04, $04, $0b
1b293     13 18 1B 1F 
1b297     24 28 29 27 
1b29b     24 20 20 21 
1b29f     22 22 20 1C | 	byte	$13, $18, $1b, $1f, $24, $28, $29, $27, $24, $20, $20, $21, $22, $22, $20, $1c
1b2a3     18 14 15 16 
1b2a7     12 07 FE FB 
1b2ab     F6 F0 E9 E2 
1b2af     DD D9 D9 DE | 	byte	$18, $14, $15, $16, $12, $07, $fe, $fb, $f6, $f0, $e9, $e2, $dd, $d9, $d9, $de
1b2b3     DE DB D7 D7 
1b2b7     D6 D2 D3 D6 
1b2bb     D8 D9 D8 DD 
1b2bf     E6 E7 E6 EB | 	byte	$de, $db, $d7, $d7, $d6, $d2, $d3, $d6, $d8, $d9, $d8, $dd, $e6, $e7, $e6, $eb
1b2c3     F7 FE FE FF 
1b2c7     03 03 00 03 
1b2cb     0F 18 18 1B 
1b2cf     22 28 2A 28 | 	byte	$f7, $fe, $fe, $ff, $03, $03, $00, $03, $0f, $18, $18, $1b, $22, $28, $2a, $28
1b2d3     26 24 20 20 
1b2d7     23 26 23 1C 
1b2db     18 18 18 18 
1b2df     14 0C 02 FE | 	byte	$26, $24, $20, $20, $23, $26, $23, $1c, $18, $18, $18, $18, $14, $0c, $02, $fe
1b2e3     F8 F2 EC E8 
1b2e7     DE D7 D8 DF 
1b2eb     E0 DB D7 D8 
1b2ef     D8 D2 D3 D7 | 	byte	$f8, $f2, $ec, $e8, $de, $d7, $d8, $df, $e0, $db, $d7, $d8, $d8, $d2, $d3, $d7
1b2f3     D9 D9 D8 DD 
1b2f7     E5 E7 E6 EB 
1b2fb     F5 FA FC 00 
1b2ff     03 00 FD 03 | 	byte	$d9, $d9, $d8, $dd, $e5, $e7, $e6, $eb, $f5, $fa, $fc, $00, $03, $00, $fd, $03
1b303     0F 14 14 17 
1b307     21 27 26 25 
1b30b     25 22 1D 1E 
1b30f     22 24 21 1C | 	byte	$0f, $14, $14, $17, $21, $27, $26, $25, $25, $22, $1d, $1e, $22, $24, $21, $1c
1b313     17 16 18 18 
1b317     14 0C 02 FD 
1b31b     F9 F3 ED E6 
1b31f     DE D8 DB DE | 	byte	$17, $16, $18, $18, $14, $0c, $02, $fd, $f9, $f3, $ed, $e6, $de, $d8, $db, $de
1b323     DE DC D9 D8 
1b327     D5 D3 D5 D7 
1b32b     D6 D6 DA DE 
1b32f     E3 E6 E6 EA | 	byte	$de, $dc, $d9, $d8, $d5, $d3, $d5, $d7, $d6, $d6, $da, $de, $e3, $e6, $e6, $ea
1b333     F3 FB FE FF 
1b337     00 FF FF 03 
1b33b     0D 14 17 18 
1b33f     1F 26 29 28 | 	byte	$f3, $fb, $fe, $ff, $00, $ff, $ff, $03, $0d, $14, $17, $18, $1f, $26, $29, $28
1b343     26 22 1E 1F 
1b347     23 26 24 1D 
1b34b     1A 19 18 1A 
1b34f     18 10 05 FE | 	byte	$26, $22, $1e, $1f, $23, $26, $24, $1d, $1a, $19, $18, $1a, $18, $10, $05, $fe
1b353     FC F6 F0 E7 
1b357     DE D8 D9 DD 
1b35b     DD D9 D6 D5 
1b35f     D5 D3 D2 D2 | 	byte	$fc, $f6, $f0, $e7, $de, $d8, $d9, $dd, $dd, $d9, $d6, $d5, $d5, $d3, $d2, $d2
1b363     D3 D6 D7 DA 
1b367     E0 E5 E4 E5 
1b36b     EE FA FE FE 
1b36f     FE 00 00 01 | 	byte	$d3, $d6, $d7, $da, $e0, $e5, $e4, $e5, $ee, $fa, $fe, $fe, $fe, $00, $00, $01
1b373     0B 13 16 16 
1b377     1D 26 27 27 
1b37b     26 21 1C 1E 
1b37f     22 24 23 1D | 	byte	$0b, $13, $16, $16, $1d, $26, $27, $27, $26, $21, $1c, $1e, $22, $24, $23, $1d
1b383     18 18 19 1A 
1b387     18 10 07 01 
1b38b     FD F8 F1 EA 
1b38f     E2 DB DA DE | 	byte	$18, $18, $19, $1a, $18, $10, $07, $01, $fd, $f8, $f1, $ea, $e2, $db, $da, $de
1b393     E0 DC D6 D5 
1b397     D6 D5 D3 D3 
1b39b     D3 D4 D7 DB 
1b39f     DF E2 E3 E3 | 	byte	$e0, $dc, $d6, $d5, $d6, $d5, $d3, $d3, $d3, $d4, $d7, $db, $df, $e2, $e3, $e3
1b3a3     EC F7 FC FC 
1b3a7     FE FF FD 00 
1b3ab     09 11 14 13 
1b3af     19 23 27 26 | 	byte	$ec, $f7, $fc, $fc, $fe, $ff, $fd, $00, $09, $11, $14, $13, $19, $23, $27, $26
1b3b3     23 20 1D 1E 
1b3b7     21 25 24 1F 
1b3bb     19 1A 1B 1C 
1b3bf     1B 13 0A 06 | 	byte	$23, $20, $1d, $1e, $21, $25, $24, $1f, $19, $1a, $1b, $1c, $1b, $13, $0a, $06
1b3c3     03 FE F8 F0 
1b3c7     E6 E0 DF E1 
1b3cb     E1 DC D8 D7 
1b3cf     D8 D6 D4 D2 | 	byte	$03, $fe, $f8, $f0, $e6, $e0, $df, $e1, $e1, $dc, $d8, $d7, $d8, $d6, $d4, $d2
1b3d3     D0 D2 D6 DA 
1b3d7     DD DF E0 E0 
1b3db     E7 F3 FA F9 
1b3df     F8 FB FD FD | 	byte	$d0, $d2, $d6, $da, $dd, $df, $e0, $e0, $e7, $f3, $fa, $f9, $f8, $fb, $fd, $fd
1b3e3     03 0E 11 11 
1b3e7     16 1F 26 26 
1b3eb     23 22 1E 1E 
1b3ef     23 25 26 22 | 	byte	$03, $0e, $11, $11, $16, $1f, $26, $26, $23, $22, $1e, $1e, $23, $25, $26, $22
1b3f3     1D 1B 1C 1E 
1b3f7     1D 18 10 0B 
1b3fb     07 00 FA F4 
1b3ff     EB E2 E0 E2 | 	byte	$1d, $1b, $1c, $1e, $1d, $18, $10, $0b, $07, $00, $fa, $f4, $eb, $e2, $e0, $e2
1b403     E3 DF D8 D8 
1b407     DA D9 D4 D2 
1b40b     D0 D2 D6 DB 
1b40f     DD DF E1 E1 | 	byte	$e3, $df, $d8, $d8, $da, $d9, $d4, $d2, $d0, $d2, $d6, $db, $dd, $df, $e1, $e1
1b413     E7 F0 F8 FA 
1b417     F9 F9 FC FF 
1b41b     05 0B 0F 12 
1b41f     16 1F 27 27 | 	byte	$e7, $f0, $f8, $fa, $f9, $f9, $fc, $ff, $05, $0b, $0f, $12, $16, $1f, $27, $27
1b423     24 22 21 1F 
1b427     22 24 26 23 
1b42b     1E 1C 1C 1E 
1b42f     1E 18 11 0C | 	byte	$24, $22, $21, $1f, $22, $24, $26, $23, $1e, $1c, $1c, $1e, $1e, $18, $11, $0c
1b433     0A 03 FA F4 
1b437     ED E6 E2 E3 
1b43b     E3 E0 DB D9 
1b43f     DA DA D5 D2 | 	byte	$0a, $03, $fa, $f4, $ed, $e6, $e2, $e3, $e3, $e0, $db, $d9, $da, $da, $d5, $d2
1b443     D1 D0 D6 DC 
1b447     DC DB DE E1 
1b44b     E5 ED F5 F8 
1b44f     F6 F7 FD 00 | 	byte	$d1, $d0, $d6, $dc, $dc, $db, $de, $e1, $e5, $ed, $f5, $f8, $f6, $f7, $fd, $00
1b453     01 07 0F 11 
1b457     15 1E 27 29 
1b45b     25 23 22 23 
1b45f     23 24 24 24 | 	byte	$01, $07, $0f, $11, $15, $1e, $27, $29, $25, $23, $22, $23, $23, $24, $24, $24
1b463     22 1F 1D 1E 
1b467     1E 1B 16 10 
1b46b     0C 05 FE F5 
1b46f     EE EA E5 E3 | 	byte	$22, $1f, $1d, $1e, $1e, $1b, $16, $10, $0c, $05, $fe, $f5, $ee, $ea, $e5, $e3
1b473     E2 DE DB D9 
1b477     DA DA D5 D0 
1b47b     CF D0 D5 DA 
1b47f     DA DA DC DF | 	byte	$e2, $de, $db, $d9, $da, $da, $d5, $d0, $cf, $d0, $d5, $da, $da, $da, $dc, $df
1b483     E2 EB F3 F5 
1b487     F4 F5 F9 FF 
1b48b     01 03 09 10 
1b48f     15 1B 23 26 | 	byte	$e2, $eb, $f3, $f5, $f4, $f5, $f9, $ff, $01, $03, $09, $10, $15, $1b, $23, $26
1b493     24 22 22 21 
1b497     20 21 22 23 
1b49b     20 1F 1E 1C 
1b49f     1B 1A 16 12 | 	byte	$24, $22, $22, $21, $20, $21, $22, $23, $20, $1f, $1e, $1c, $1b, $1a, $16, $12
1b4a3     0E 05 FC F4 
1b4a7     F0 EC E6 E2 
1b4ab     E1 E0 DB D8 
1b4af     DB DC D6 CF | 	byte	$0e, $05, $fc, $f4, $f0, $ec, $e6, $e2, $e1, $e0, $db, $d8, $db, $dc, $d6, $cf
1b4b3     CF D2 D4 D9 
1b4b7     DB D8 D9 E1 
1b4bb     E6 E9 F1 F7 
1b4bf     F6 F7 FC 00 | 	byte	$cf, $d2, $d4, $d9, $db, $d8, $d9, $e1, $e6, $e9, $f1, $f7, $f6, $f7, $fc, $00
1b4c3     01 03 07 0F 
1b4c7     15 1C 23 25 
1b4cb     22 22 24 23 
1b4cf     20 1F 1F 22 | 	byte	$01, $03, $07, $0f, $15, $1c, $23, $25, $22, $22, $24, $23, $20, $1f, $1f, $22
1b4d3     21 1E 1C 1A 
1b4d7     1A 19 16 13 
1b4db     10 08 FC F5 
1b4df     F2 F0 E9 E3 | 	byte	$21, $1e, $1c, $1a, $1a, $19, $16, $13, $10, $08, $fc, $f5, $f2, $f0, $e9, $e3
1b4e3     E0 E0 DB DC 
1b4e7     DD D9 D5 D2 
1b4eb     D0 D0 D3 D8 
1b4ef     DA D7 D8 DE | 	byte	$e0, $e0, $db, $dc, $dd, $d9, $d5, $d2, $d0, $d0, $d3, $d8, $da, $d7, $d8, $de
1b4f3     E4 E9 EE F1 
1b4f7     F2 F5 FA FE 
1b4fb     00 FF 05 0E 
1b4ff     15 19 1E 24 | 	byte	$e4, $e9, $ee, $f1, $f2, $f5, $fa, $fe, $00, $ff, $05, $0e, $15, $19, $1e, $24
1b503     23 22 23 23 
1b507     1F 1E 1F 1F 
1b50b     21 21 1C 19 
1b50f     19 1B 1A 16 | 	byte	$23, $22, $23, $23, $1f, $1e, $1f, $1f, $21, $21, $1c, $19, $19, $1b, $1a, $16
1b513     10 08 00 F8 
1b517     F5 F2 EC E4 
1b51b     E0 E0 DE DC 
1b51f     DC DC D6 D0 | 	byte	$10, $08, $00, $f8, $f5, $f2, $ec, $e4, $e0, $e0, $de, $dc, $dc, $dc, $d6, $d0
1b523     D0 D1 D3 D7 
1b527     D7 D5 D7 DF 
1b52b     E5 E7 EB F1 
1b52f     F4 F4 F8 FF | 	byte	$d0, $d1, $d3, $d7, $d7, $d5, $d7, $df, $e5, $e7, $eb, $f1, $f4, $f4, $f8, $ff
1b533     FF FE 03 0D 
1b537     16 1A 1D 20 
1b53b     23 23 24 24 
1b53f     20 1E 1E 21 | 	byte	$ff, $fe, $03, $0d, $16, $1a, $1d, $20, $23, $23, $24, $24, $20, $1e, $1e, $21
1b543     23 21 1C 19 
1b547     19 1C 1C 18 
1b54b     12 0A FE F7 
1b54f     F8 F8 EC E3 | 	byte	$23, $21, $1c, $19, $19, $1c, $1c, $18, $12, $0a, $fe, $f7, $f8, $f8, $ec, $e3
1b553     E2 E1 DF DE 
1b557     DE DC D6 D3 
1b55b     D1 D2 D4 D7 
1b55f     D7 D4 D7 DF | 	byte	$e2, $e1, $df, $de, $de, $dc, $d6, $d3, $d1, $d2, $d4, $d7, $d7, $d4, $d7, $df
1b563     E4 E7 E9 EF 
1b567     F4 F7 F9 FE 
1b56b     FE FE 05 0F 
1b56f     16 18 1E 23 | 	byte	$e4, $e7, $e9, $ef, $f4, $f7, $f9, $fe, $fe, $fe, $05, $0f, $16, $18, $1e, $23
1b573     24 25 27 27 
1b577     22 1F 1F 24 
1b57b     28 24 1C 18 
1b57f     1C 1F 1D 1A | 	byte	$24, $25, $27, $27, $22, $1f, $1f, $24, $28, $24, $1c, $18, $1c, $1f, $1d, $1a
1b583     13 08 00 FC 
1b587     FC F8 F0 E7 
1b58b     E4 E3 E0 E0 
1b58f     DF DC D6 D3 | 	byte	$13, $08, $00, $fc, $fc, $f8, $f0, $e7, $e4, $e3, $e0, $e0, $df, $dc, $d6, $d3
1b593     D3 D5 D3 D3 
1b597     D5 D4 D6 DE 
1b59b     E1 E2 E6 EC 
1b59f     EF F1 F5 F9 | 	byte	$d3, $d5, $d3, $d3, $d5, $d4, $d6, $de, $e1, $e2, $e6, $ec, $ef, $f1, $f5, $f9
1b5a3     FC FB 01 0E 
1b5a7     16 18 1B 21 
1b5ab     26 27 27 27 
1b5af     23 20 23 27 | 	byte	$fc, $fb, $01, $0e, $16, $18, $1b, $21, $26, $27, $27, $27, $23, $20, $23, $27
1b5b3     28 24 20 1C 
1b5b7     1E 20 20 1C 
1b5bb     16 0D 02 FE 
1b5bf     FF FA F0 E8 | 	byte	$28, $24, $20, $1c, $1e, $20, $20, $1c, $16, $0d, $02, $fe, $ff, $fa, $f0, $e8
1b5c3     E6 E6 E2 E0 
1b5c7     E0 DD D8 D7 
1b5cb     D5 D4 D3 D4 
1b5cf     D5 D5 D7 DC | 	byte	$e6, $e6, $e2, $e0, $e0, $dd, $d8, $d7, $d5, $d4, $d3, $d4, $d5, $d5, $d7, $dc
1b5d3     E2 E3 E3 E9 
1b5d7     F0 F3 F3 F6 
1b5db     FB FC FF 09 
1b5df     12 16 19 1E | 	byte	$e2, $e3, $e3, $e9, $f0, $f3, $f3, $f6, $fb, $fc, $ff, $09, $12, $16, $19, $1e
1b5e3     23 25 26 25 
1b5e7     22 1F 22 26 
1b5eb     27 23 1D 1A 
1b5ef     1C 1F 1F 1A | 	byte	$23, $25, $26, $25, $22, $1f, $22, $26, $27, $23, $1d, $1a, $1c, $1f, $1f, $1a
1b5f3     14 0C 01 FE 
1b5f7     FC F8 F2 E9 
1b5fb     E4 E3 E3 E0 
1b5ff     DE DC D8 D7 | 	byte	$14, $0c, $01, $fe, $fc, $f8, $f2, $e9, $e4, $e3, $e3, $e0, $de, $dc, $d8, $d7
1b603     D6 D2 D1 D2 
1b607     D5 D6 D6 D9 
1b60b     E0 E2 E2 E7 
1b60f     ED F0 F1 F4 | 	byte	$d6, $d2, $d1, $d2, $d5, $d6, $d6, $d9, $e0, $e2, $e2, $e7, $ed, $f0, $f1, $f4
1b613     F8 FB FE 05 
1b617     0E 13 16 1B 
1b61b     23 26 24 24 
1b61f     24 22 23 25 | 	byte	$f8, $fb, $fe, $05, $0e, $13, $16, $1b, $23, $26, $24, $24, $24, $22, $23, $25
1b623     26 27 21 1C 
1b627     1C 21 23 1E 
1b62b     17 11 08 00 
1b62f     FE FC F4 EC | 	byte	$26, $27, $21, $1c, $1c, $21, $23, $1e, $17, $11, $08, $00, $fe, $fc, $f4, $ec
1b633     E7 E5 E3 E0 
1b637     DE DE DB D7 
1b63b     D5 D3 D3 D1 
1b63f     D3 D5 D7 D8 | 	byte	$e7, $e5, $e3, $e0, $de, $de, $db, $d7, $d5, $d3, $d3, $d1, $d3, $d5, $d7, $d8
1b643     DD E0 E1 E5 
1b647     EB EF EF F1 
1b64b     F7 FB FC 01 
1b64f     0A 11 15 19 | 	byte	$dd, $e0, $e1, $e5, $eb, $ef, $ef, $f1, $f7, $fb, $fc, $01, $0a, $11, $15, $19
1b653     1F 24 24 24 
1b657     24 22 22 23 
1b65b     27 27 21 1C 
1b65f     1E 23 20 1E | 	byte	$1f, $24, $24, $24, $24, $22, $22, $23, $27, $27, $21, $1c, $1e, $23, $20, $1e
1b663     1A 14 0B 01 
1b667     FE FD F7 ED 
1b66b     E8 E6 E3 DF 
1b66f     DD DD DA D7 | 	byte	$1a, $14, $0b, $01, $fe, $fd, $f7, $ed, $e8, $e6, $e3, $df, $dd, $dd, $da, $d7
1b673     D4 D2 D0 CF 
1b677     D2 D5 D7 D7 
1b67b     DB DF E1 E3 
1b67f     E9 EF F0 F0 | 	byte	$d4, $d2, $d0, $cf, $d2, $d5, $d7, $d7, $db, $df, $e1, $e3, $e9, $ef, $f0, $f0
1b683     F4 FB FE FF 
1b687     05 0C 13 17 
1b68b     1E 21 22 23 
1b68f     24 22 1F 22 | 	byte	$f4, $fb, $fe, $ff, $05, $0c, $13, $17, $1e, $21, $22, $23, $24, $22, $1f, $22
1b693     25 23 21 1E 
1b697     1D 21 21 1E 
1b69b     19 16 10 06 
1b69f     00 FC F8 F2 | 	byte	$25, $23, $21, $1e, $1d, $21, $21, $1e, $19, $16, $10, $06, $00, $fc, $f8, $f2
1b6a3     EB E6 E2 DE 
1b6a7     DD DC D8 D5 
1b6ab     D4 D2 CF CC 
1b6af     CE D3 D5 D3 | 	byte	$eb, $e6, $e2, $de, $dd, $dc, $d8, $d5, $d4, $d2, $cf, $cc, $ce, $d3, $d5, $d3
1b6b3     D3 DA DF E1 
1b6b7     E3 E8 EC ED 
1b6bb     EF F7 FB FC 
1b6bf     FF 07 0F 14 | 	byte	$d3, $da, $df, $e1, $e3, $e8, $ec, $ed, $ef, $f7, $fb, $fc, $ff, $07, $0f, $14
1b6c3     18 1F 22 22 
1b6c7     20 22 22 22 
1b6cb     23 24 24 22 
1b6cf     20 21 24 22 | 	byte	$18, $1f, $22, $22, $20, $22, $22, $22, $23, $24, $24, $22, $20, $21, $24, $22
1b6d3     1E 1C 18 0E 
1b6d7     07 02 FF F8 
1b6db     F2 ED E9 E4 
1b6df     E0 E0 E0 DC | 	byte	$1e, $1c, $18, $0e, $07, $02, $ff, $f8, $f2, $ed, $e9, $e4, $e0, $e0, $e0, $dc
1b6e3     DA D8 D3 CF 
1b6e7     CF D6 D9 D7 
1b6eb     D6 DB E1 E3 
1b6ef     E6 E9 ED EC | 	byte	$da, $d8, $d3, $cf, $cf, $d6, $d9, $d7, $d6, $db, $e1, $e3, $e6, $e9, $ed, $ec
1b6f3     F0 F8 FE FC 
1b6f7     FC 06 0F 14 
1b6fb     19 1F 23 22 
1b6ff     21 23 23 23 | 	byte	$f0, $f8, $fe, $fc, $fc, $06, $0f, $14, $19, $1f, $23, $22, $21, $23, $23, $23
1b703     23 23 22 23 
1b707     23 22 23 20 
1b70b     1E 1D 19 10 
1b70f     07 03 00 FA | 	byte	$23, $23, $22, $23, $23, $22, $23, $20, $1e, $1d, $19, $10, $07, $03, $00, $fa
1b713     F4 EE EC E6 
1b717     E0 DF E0 DE 
1b71b     DB D8 D1 CD 
1b71f     D0 D5 D7 D6 | 	byte	$f4, $ee, $ec, $e6, $e0, $df, $e0, $de, $db, $d8, $d1, $cd, $d0, $d5, $d7, $d6
1b723     D4 D9 DF E3 
1b727     E4 E7 EA EC 
1b72b     EF F4 FC FE 
1b72f     FD 01 0A 13 | 	byte	$d4, $d9, $df, $e3, $e4, $e7, $ea, $ec, $ef, $f4, $fc, $fe, $fd, $01, $0a, $13
1b733     19 1E 20 20 
1b737     22 23 24 23 
1b73b     22 23 23 23 
1b73f     23 21 22 21 | 	byte	$19, $1e, $20, $20, $22, $23, $24, $23, $22, $23, $23, $23, $23, $21, $22, $21
1b743     1F 1D 1B 15 
1b747     0B 04 01 FE 
1b74b     F9 F5 F0 E8 
1b74f     E1 E0 E3 E1 | 	byte	$1f, $1d, $1b, $15, $0b, $04, $01, $fe, $f9, $f5, $f0, $e8, $e1, $e0, $e3, $e1
1b753     DC D8 D4 CF 
1b757     CF D2 D7 D7 
1b75b     D3 D3 DC E3 
1b75f     E2 E1 E6 E9 | 	byte	$dc, $d8, $d4, $cf, $cf, $d2, $d7, $d7, $d3, $d3, $dc, $e3, $e2, $e1, $e6, $e9
1b763     EC F1 F8 FC 
1b767     FA FB 03 0F 
1b76b     17 19 1E 1F 
1b76f     1E 1F 23 23 | 	byte	$ec, $f1, $f8, $fc, $fa, $fb, $03, $0f, $17, $19, $1e, $1f, $1e, $1f, $23, $23
1b773     20 1E 20 23 
1b777     22 21 20 20 
1b77b     1E 1C 1C 16 
1b77f     0C 05 01 FE | 	byte	$20, $1e, $20, $23, $22, $21, $20, $20, $1e, $1c, $1c, $16, $0c, $05, $01, $fe
1b783     F8 F8 F3 EA 
1b787     E1 E0 E4 E5 
1b78b     DE D8 D5 D0 
1b78f     CE D3 D7 D6 | 	byte	$f8, $f8, $f3, $ea, $e1, $e0, $e4, $e5, $de, $d8, $d5, $d0, $ce, $d3, $d7, $d6
1b793     D3 D5 DB E2 
1b797     E4 E3 E7 EA 
1b79b     EC F1 F9 FF 
1b79f     FC FA 02 0F | 	byte	$d3, $d5, $db, $e2, $e4, $e3, $e7, $ea, $ec, $f1, $f9, $ff, $fc, $fa, $02, $0f
1b7a3     17 19 1D 20 
1b7a7     21 23 26 26 
1b7ab     23 23 21 23 
1b7af     24 26 23 21 | 	byte	$17, $19, $1d, $20, $21, $23, $26, $26, $23, $23, $21, $23, $24, $26, $23, $21
1b7b3     1F 1F 1F 1B 
1b7b7     12 08 01 00 
1b7bb     FC FA F4 EA 
1b7bf     E3 E1 E3 E3 | 	byte	$1f, $1f, $1f, $1b, $12, $08, $01, $00, $fc, $fa, $f4, $ea, $e3, $e1, $e3, $e3
1b7c3     E0 DC D6 CF 
1b7c7     CE D3 D7 D6 
1b7cb     D3 D3 D8 DF 
1b7cf     E3 E1 E2 E6 | 	byte	$e0, $dc, $d6, $cf, $ce, $d3, $d7, $d6, $d3, $d3, $d8, $df, $e3, $e1, $e2, $e6
1b7d3     E9 EE F5 FB 
1b7d7     F9 F6 FB 07 
1b7db     15 17 18 1B 
1b7df     1E 20 23 24 | 	byte	$e9, $ee, $f5, $fb, $f9, $f6, $fb, $07, $15, $17, $18, $1b, $1e, $20, $23, $24
1b7e3     20 1F 1F 22 
1b7e7     26 24 22 21 
1b7eb     1F 1E 1F 1C 
1b7ef     14 0A 02 00 | 	byte	$20, $1f, $1f, $22, $26, $24, $22, $21, $1f, $1e, $1f, $1c, $14, $0a, $02, $00
1b7f3     00 FE F7 ED 
1b7f7     E6 E3 E6 E7 
1b7fb     E3 DC D8 D4 
1b7ff     D2 D3 D6 D8 | 	byte	$00, $fe, $f7, $ed, $e6, $e3, $e6, $e7, $e3, $dc, $d8, $d4, $d2, $d3, $d6, $d8
1b803     D6 D4 D6 DF 
1b807     E5 E3 E0 E3 
1b80b     E9 EF F4 F9 
1b80f     F8 F5 FA 06 | 	byte	$d6, $d4, $d6, $df, $e5, $e3, $e0, $e3, $e9, $ef, $f4, $f9, $f8, $f5, $fa, $06
1b813     11 14 17 19 
1b817     1C 1E 21 24 
1b81b     20 1D 1D 20 
1b81f     23 24 20 1E | 	byte	$11, $14, $17, $19, $1c, $1e, $21, $24, $20, $1d, $1d, $20, $23, $24, $20, $1e
1b823     1C 1C 1E 1E 
1b827     14 06 01 00 
1b82b     FD FA F6 ED 
1b82f     E4 DF E3 E6 | 	byte	$1c, $1c, $1e, $1e, $14, $06, $01, $00, $fd, $fa, $f6, $ed, $e4, $df, $e3, $e6
1b833     E1 D9 D5 D2 
1b837     D0 D1 D4 D4 
1b83b     D3 D1 D5 DD 
1b83f     E2 E0 DF E3 | 	byte	$e1, $d9, $d5, $d2, $d0, $d1, $d4, $d4, $d3, $d1, $d5, $dd, $e2, $e0, $df, $e3
1b843     E7 EC F3 F8 
1b847     F8 F3 F7 03 
1b84b     0F 14 15 17 
1b84f     1D 1F 23 23 | 	byte	$e7, $ec, $f3, $f8, $f8, $f3, $f7, $03, $0f, $14, $15, $17, $1d, $1f, $23, $23
1b853     20 1F 20 23 
1b857     25 26 24 20 
1b85b     1F 21 23 20 
1b85f     16 0C 06 04 | 	byte	$20, $1f, $20, $23, $25, $26, $24, $20, $1f, $21, $23, $20, $16, $0c, $06, $04
1b863     03 00 F9 F0 
1b867     E8 E7 E9 E8 
1b86b     E3 DE DB D7 
1b86f     D3 D6 D9 D8 | 	byte	$03, $00, $f9, $f0, $e8, $e7, $e9, $e8, $e3, $de, $db, $d7, $d3, $d6, $d9, $d8
1b873     D6 D6 D9 E1 
1b877     E6 E3 E0 E4 
1b87b     EB EF F3 F6 
1b87f     F8 F6 F7 03 | 	byte	$d6, $d6, $d9, $e1, $e6, $e3, $e0, $e4, $eb, $ef, $f3, $f6, $f8, $f6, $f7, $03
1b883     0F 12 13 16 
1b887     1A 1E 1F 20 
1b88b     1F 1C 1C 20 
1b88f     25 24 20 1E | 	byte	$0f, $12, $13, $16, $1a, $1e, $1f, $20, $1f, $1c, $1c, $20, $25, $24, $20, $1e
1b893     20 21 21 1F 
1b897     18 0E 06 04 
1b89b     03 00 FA F0 
1b89f     E9 E7 E7 E8 | 	byte	$20, $21, $21, $1f, $18, $0e, $06, $04, $03, $00, $fa, $f0, $e9, $e7, $e7, $e8
1b8a3     E4 E0 D9 D8 
1b8a7     D6 D6 D6 D6 
1b8ab     D7 D7 D8 DD 
1b8af     E3 E2 E0 E3 | 	byte	$e4, $e0, $d9, $d8, $d6, $d6, $d6, $d6, $d7, $d7, $d8, $dd, $e3, $e2, $e0, $e3
1b8b3     E9 EE F3 F6 
1b8b7     F7 F5 F7 FF 
1b8bb     0D 11 11 16 
1b8bf     1B 1D 1F 21 | 	byte	$e9, $ee, $f3, $f6, $f7, $f5, $f7, $ff, $0d, $11, $11, $16, $1b, $1d, $1f, $21
1b8c3     20 1E 1F 22 
1b8c7     25 24 22 20 
1b8cb     1F 20 22 21 
1b8cf     1A 10 09 07 | 	byte	$20, $1e, $1f, $22, $25, $24, $22, $20, $1f, $20, $22, $21, $1a, $10, $09, $07
1b8d3     05 00 FA F4 
1b8d7     ED E7 E7 E9 
1b8db     E5 E0 DA D7 
1b8df     D5 D5 D6 D5 | 	byte	$05, $00, $fa, $f4, $ed, $e7, $e7, $e9, $e5, $e0, $da, $d7, $d5, $d5, $d6, $d5
1b8e3     D3 D6 D8 DB 
1b8e7     DF E0 DE DF 
1b8eb     E7 EB EF F2 
1b8ef     F4 F4 F6 FC | 	byte	$d3, $d6, $d8, $db, $df, $e0, $de, $df, $e7, $eb, $ef, $f2, $f4, $f4, $f6, $fc
1b8f3     07 0F 11 11 
1b8f7     16 1C 1E 1F 
1b8fb     1D 1D 1F 20 
1b8ff     21 21 20 20 | 	byte	$07, $0f, $11, $11, $16, $1c, $1e, $1f, $1d, $1d, $1f, $20, $21, $21, $20, $20
1b903     1F 1F 20 20 
1b907     19 12 0C 07 
1b90b     04 01 FE F8 
1b90f     EE EA EA EB | 	byte	$1f, $1f, $20, $20, $19, $12, $0c, $07, $04, $01, $fe, $f8, $ee, $ea, $ea, $eb
1b913     E6 E0 DD DB 
1b917     D9 D7 D6 D8 
1b91b     D8 D8 D8 DC 
1b91f     E1 E2 DF E0 | 	byte	$e6, $e0, $dd, $db, $d9, $d7, $d6, $d8, $d8, $d8, $d8, $dc, $e1, $e2, $df, $e0
1b923     E7 ED F0 F2 
1b927     F5 F7 F7 FB 
1b92b     07 0F 11 11 
1b92f     17 1C 1D 1E | 	byte	$e7, $ed, $f0, $f2, $f5, $f7, $f7, $fb, $07, $0f, $11, $11, $17, $1c, $1d, $1e
1b933     1F 1F 1F 20 
1b937     22 23 22 1F 
1b93b     20 21 20 1F 
1b93f     1B 14 0D 08 | 	byte	$1f, $1f, $1f, $20, $22, $23, $22, $1f, $20, $21, $20, $1f, $1b, $14, $0d, $08
1b943     05 01 FE F8 
1b947     F0 EA E9 EB 
1b94b     E7 E0 DD DA 
1b94f     D8 D6 D7 D5 | 	byte	$05, $01, $fe, $f8, $f0, $ea, $e9, $eb, $e7, $e0, $dd, $da, $d8, $d6, $d7, $d5
1b953     D6 D8 D9 DB 
1b957     DD DF DF DF 
1b95b     E5 E9 ED F0 
1b95f     F3 F4 F5 FC | 	byte	$d6, $d8, $d9, $db, $dd, $df, $df, $df, $e5, $e9, $ed, $f0, $f3, $f4, $f5, $fc
1b963     07 0D 0F 11 
1b967     17 1D 1D 1C 
1b96b     1E 20 1F 1F 
1b96f     21 20 21 21 | 	byte	$07, $0d, $0f, $11, $17, $1d, $1d, $1c, $1e, $20, $1f, $1f, $21, $20, $21, $21
1b973     1F 1E 1F 20 
1b977     1B 13 0C 08 
1b97b     06 00 FC F8 
1b97f     F0 EC EA E8 | 	byte	$1f, $1e, $1f, $20, $1b, $13, $0c, $08, $06, $00, $fc, $f8, $f0, $ec, $ea, $e8
1b983     E5 E1 DE DC 
1b987     D9 D6 D7 D7 
1b98b     D7 D9 DA DB 
1b98f     DE DF E0 E0 | 	byte	$e5, $e1, $de, $dc, $d9, $d6, $d7, $d7, $d7, $d9, $da, $db, $de, $df, $e0, $e0
1b993     E4 EB EE EE 
1b997     F1 F6 F8 FB 
1b99b     03 0B 0F 10 
1b99f     15 1A 1C 1C | 	byte	$e4, $eb, $ee, $ee, $f1, $f6, $f8, $fb, $03, $0b, $0f, $10, $15, $1a, $1c, $1c
1b9a3     1E 1F 1F 20 
1b9a7     20 20 21 21 
1b9ab     20 1F 1F 1F 
1b9af     1A 13 0D 08 | 	byte	$1e, $1f, $1f, $20, $20, $20, $21, $21, $20, $1f, $1f, $1f, $1a, $13, $0d, $08
1b9b3     04 FE FC F8 
1b9b7     F0 EA E9 E8 
1b9bb     E3 DF DC DA 
1b9bf     D9 D7 D5 D5 | 	byte	$04, $fe, $fc, $f8, $f0, $ea, $e9, $e8, $e3, $df, $dc, $da, $d9, $d7, $d5, $d5
1b9c3     D8 DA DA D8 
1b9c7     DC E1 E0 DF 
1b9cb     E3 EB EC ED 
1b9cf     F0 F5 F6 F8 | 	byte	$d8, $da, $da, $d8, $dc, $e1, $e0, $df, $e3, $eb, $ec, $ed, $f0, $f5, $f6, $f8
1b9d3     FF 09 0D 0F 
1b9d7     13 19 19 19 
1b9db     1C 1F 1F 1E 
1b9df     20 21 23 23 | 	byte	$ff, $09, $0d, $0f, $13, $19, $19, $19, $1c, $1f, $1f, $1e, $20, $21, $23, $23
1b9e3     20 20 22 22 
1b9e7     1C 16 10 0C 
1b9eb     05 00 FE FC 
1b9ef     F4 EE EB E9 | 	byte	$20, $20, $22, $22, $1c, $16, $10, $0c, $05, $00, $fe, $fc, $f4, $ee, $eb, $e9
1b9f3     E5 E1 DF DC 
1b9f7     DA D8 D7 D8 
1b9fb     D9 DA DB DB 
1b9ff     DE E0 E1 E2 | 	byte	$e5, $e1, $df, $dc, $da, $d8, $d7, $d8, $d9, $da, $db, $db, $de, $e0, $e1, $e2
1ba03     E6 EB EC EE 
1ba07     F3 F7 F7 F8 
1ba0b     03 0C 0E 0F 
1ba0f     14 18 1A 1B | 	byte	$e6, $eb, $ec, $ee, $f3, $f7, $f7, $f8, $03, $0c, $0e, $0f, $14, $18, $1a, $1b
1ba13     1D 1F 1F 1F 
1ba17     1F 21 23 24 
1ba1b     21 1F 20 20 
1ba1f     1C 16 10 09 | 	byte	$1d, $1f, $1f, $1f, $1f, $21, $23, $24, $21, $1f, $20, $20, $1c, $16, $10, $09
1ba23     04 00 FF FB 
1ba27     F1 EC EA E8 
1ba2b     E2 E0 DE DC 
1ba2f     D8 D7 D8 D8 | 	byte	$04, $00, $ff, $fb, $f1, $ec, $ea, $e8, $e2, $e0, $de, $dc, $d8, $d7, $d8, $d8
1ba33     DA DB DB DB 
1ba37     DF E3 E3 E1 
1ba3b     E6 EB EF F1 
1ba3f     F3 F8 F9 FB | 	byte	$da, $db, $db, $db, $df, $e3, $e3, $e1, $e6, $eb, $ef, $f1, $f3, $f8, $f9, $fb
1ba43     03 0C 0F 0F 
1ba47     13 17 18 1B 
1ba4b     1E 1F 1E 1E 
1ba4f     1F 23 25 23 | 	byte	$03, $0c, $0f, $0f, $13, $17, $18, $1b, $1e, $1f, $1e, $1e, $1f, $23, $25, $23
1ba53     20 1F 22 21 
1ba57     1B 16 11 0A 
1ba5b     03 02 00 FD 
1ba5f     F4 EE EA E8 | 	byte	$20, $1f, $22, $21, $1b, $16, $11, $0a, $03, $02, $00, $fd, $f4, $ee, $ea, $e8
1ba63     E4 E1 DE DA 
1ba67     D9 D9 D8 D7 
1ba6b     D9 DC DB DB 
1ba6f     DF E3 E4 E0 | 	byte	$e4, $e1, $de, $da, $d9, $d9, $d8, $d7, $d9, $dc, $db, $db, $df, $e3, $e4, $e0
1ba73     E4 EA ED F0 
1ba77     F3 F7 F7 FA 
1ba7b     03 0E 0F 0D 
1ba7f     11 17 1A 19 | 	byte	$e4, $ea, $ed, $f0, $f3, $f7, $f7, $fa, $03, $0e, $0f, $0d, $11, $17, $1a, $19
1ba83     1B 1F 1E 1C 
1ba87     1C 21 24 23 
1ba8b     1F 1E 20 22 
1ba8f     1D 17 10 0A | 	byte	$1b, $1f, $1e, $1c, $1c, $21, $24, $23, $1f, $1e, $20, $22, $1d, $17, $10, $0a
1ba93     04 02 02 FE 
1ba97     F6 F0 EB E9 
1ba9b     E6 E2 E0 DC 
1ba9f     D9 D8 D8 D8 | 	byte	$04, $02, $02, $fe, $f6, $f0, $eb, $e9, $e6, $e2, $e0, $dc, $d9, $d8, $d8, $d8
1baa3     D8 D9 D8 DA 
1baa7     DE E1 E0 DE 
1baab     E1 E7 EC EE 
1baaf     F2 F7 F6 F8 | 	byte	$d8, $d9, $d8, $da, $de, $e1, $e0, $de, $e1, $e7, $ec, $ee, $f2, $f7, $f6, $f8
1bab3     01 0B 0F 0D 
1bab7     0F 15 19 1A 
1babb     1C 1E 1D 1C 
1babf     1F 21 23 24 | 	byte	$01, $0b, $0f, $0d, $0f, $15, $19, $1a, $1c, $1e, $1d, $1c, $1f, $21, $23, $24
1bac3     20 1E 1F 22 
1bac7     1E 19 13 0C 
1bacb     04 03 06 03 
1bacf     F9 F0 EE EC | 	byte	$20, $1e, $1f, $22, $1e, $19, $13, $0c, $04, $03, $06, $03, $f9, $f0, $ee, $ec
1bad3     E8 E3 E1 DE 
1bad7     DB DB DB DA 
1badb     D8 D8 D9 DB 
1badf     DE E1 E2 E0 | 	byte	$e8, $e3, $e1, $de, $db, $db, $db, $da, $d8, $d8, $d9, $db, $de, $e1, $e2, $e0
1bae3     DF E3 EB EF 
1bae7     F0 F1 F5 F8 
1baeb     FF 07 0C 0D 
1baef     0D 11 17 19 | 	byte	$df, $e3, $eb, $ef, $f0, $f1, $f5, $f8, $ff, $07, $0c, $0d, $0d, $11, $17, $19
1baf3     1A 1D 1C 1B 
1baf7     1B 1F 22 22 
1bafb     1E 1A 1E 21 
1baff     1D 18 11 0A | 	byte	$1a, $1d, $1c, $1b, $1b, $1f, $22, $22, $1e, $1a, $1e, $21, $1d, $18, $11, $0a
1bb03     04 02 03 01 
1bb07     FA F0 EC EA 
1bb0b     E7 E4 E1 DD 
1bb0f     D9 DC DD DA | 	byte	$04, $02, $03, $01, $fa, $f0, $ec, $ea, $e7, $e4, $e1, $dd, $d9, $dc, $dd, $da
1bb13     D7 D8 DB DD 
1bb17     DE E0 E3 E0 
1bb1b     DE E3 EB EE 
1bb1f     EE F1 F5 F7 | 	byte	$d7, $d8, $db, $dd, $de, $e0, $e3, $e0, $de, $e3, $eb, $ee, $ee, $f1, $f5, $f7
1bb23     FC 06 0D 0C 
1bb27     0B 11 18 1B 
1bb2b     1B 1C 1E 1E 
1bb2f     1D 1F 23 24 | 	byte	$fc, $06, $0d, $0c, $0b, $11, $18, $1b, $1b, $1c, $1e, $1e, $1d, $1f, $23, $24
1bb33     20 1C 1E 22 
1bb37     20 1A 13 0C 
1bb3b     06 04 04 01 
1bb3f     FB F2 EE EB | 	byte	$20, $1c, $1e, $22, $20, $1a, $13, $0c, $06, $04, $04, $01, $fb, $f2, $ee, $eb
1bb43     E8 E4 E1 DE 
1bb47     DC DD DD DB 
1bb4b     D9 D9 D9 DC 
1bb4f     DF E2 E2 DE | 	byte	$e8, $e4, $e1, $de, $dc, $dd, $dd, $db, $d9, $d9, $d9, $dc, $df, $e2, $e2, $de
1bb53     DC E1 E9 ED 
1bb57     ED EF F3 F7 
1bb5b     FB 01 09 0A 
1bb5f     09 0D 15 18 | 	byte	$dc, $e1, $e9, $ed, $ed, $ef, $f3, $f7, $fb, $01, $09, $0a, $09, $0d, $15, $18
1bb63     1A 1B 1C 1C 
1bb67     1D 1F 23 24 
1bb6b     20 1C 1F 23 
1bb6f     20 1A 15 0F | 	byte	$1a, $1b, $1c, $1c, $1d, $1f, $23, $24, $20, $1c, $1f, $23, $20, $1a, $15, $0f
1bb73     08 04 06 05 
1bb77     FE F4 EE ED 
1bb7b     EB E6 E1 DE 
1bb7f     DD DE DE DC | 	byte	$08, $04, $06, $05, $fe, $f4, $ee, $ed, $eb, $e6, $e1, $de, $dd, $de, $de, $dc
1bb83     D9 D7 DA DF 
1bb87     E0 E0 E1 E1 
1bb8b     DD DF E7 EC 
1bb8f     ED ED F1 F5 | 	byte	$d9, $d7, $da, $df, $e0, $e0, $e1, $e1, $dd, $df, $e7, $ec, $ed, $ed, $f1, $f5
1bb93     F9 FF 05 08 
1bb97     08 0B 13 18 
1bb9b     18 19 1B 1B 
1bb9f     1C 1F 23 24 | 	byte	$f9, $ff, $05, $08, $08, $0b, $13, $18, $18, $19, $1b, $1b, $1c, $1f, $23, $24
1bba3     21 1D 1F 24 
1bba7     23 1D 16 11 
1bbab     0C 07 07 07 
1bbaf     00 F8 F1 EF | 	byte	$21, $1d, $1f, $24, $23, $1d, $16, $11, $0c, $07, $07, $07, $00, $f8, $f1, $ef
1bbb3     EA E6 E3 E0 
1bbb7     DC DD E0 DE 
1bbbb     D8 D6 D9 DE 
1bbbf     E0 E0 E0 E0 | 	byte	$ea, $e6, $e3, $e0, $dc, $dd, $e0, $de, $d8, $d6, $d9, $de, $e0, $e0, $e0, $e0
1bbc3     E0 DF E5 EB 
1bbc7     EC ED F0 F6 
1bbcb     F8 FD 03 07 
1bbcf     07 09 0F 17 | 	byte	$e0, $df, $e5, $eb, $ec, $ed, $f0, $f6, $f8, $fd, $03, $07, $07, $09, $0f, $17
1bbd3     18 18 19 1B 
1bbd7     1D 1F 21 23 
1bbdb     24 21 21 25 
1bbdf     24 20 1A 15 | 	byte	$18, $18, $19, $1b, $1d, $1f, $21, $23, $24, $21, $21, $25, $24, $20, $1a, $15
1bbe3     0F 0B 0C 0A 
1bbe7     04 FC F5 F2 
1bbeb     EE E9 E4 E2 
1bbef     E0 DF E0 DE | 	byte	$0f, $0b, $0c, $0a, $04, $fc, $f5, $f2, $ee, $e9, $e4, $e2, $e0, $df, $e0, $de
1bbf3     DA D8 DA DE 
1bbf7     E1 E2 E1 E2 
1bbfb     E0 DE E3 EB 
1bbff     EE EC EF F6 | 	byte	$da, $d8, $da, $de, $e1, $e2, $e1, $e2, $e0, $de, $e3, $eb, $ee, $ec, $ef, $f6
1bc03     FB FC 00 06 
1bc07     09 09 0E 13 
1bc0b     17 17 18 1B 
1bc0f     1C 1E 21 22 | 	byte	$fb, $fc, $00, $06, $09, $09, $0e, $13, $17, $17, $18, $1b, $1c, $1e, $21, $22
1bc13     23 22 21 23 
1bc17     24 20 19 15 
1bc1b     11 0C 09 08 
1bc1f     04 FC F6 F2 | 	byte	$23, $22, $21, $23, $24, $20, $19, $15, $11, $0c, $09, $08, $04, $fc, $f6, $f2
1bc23     EE E8 E4 E1 
1bc27     DE DE DF DC 
1bc2b     D8 D4 D7 DD 
1bc2f     DF DF DF E0 | 	byte	$ee, $e8, $e4, $e1, $de, $de, $df, $dc, $d8, $d4, $d7, $dd, $df, $df, $df, $e0
1bc33     E0 DD DF E7 
1bc37     EC EB ED F3 
1bc3b     F9 FC FF 03 
1bc3f     07 08 0C 13 | 	byte	$e0, $dd, $df, $e7, $ec, $eb, $ed, $f3, $f9, $fc, $ff, $03, $07, $08, $0c, $13
1bc43     16 15 17 1B 
1bc47     1D 1C 1E 21 
1bc4b     24 22 20 23 
1bc4f     24 20 1A 15 | 	byte	$16, $15, $17, $1b, $1d, $1c, $1e, $21, $24, $22, $20, $23, $24, $20, $1a, $15
1bc53     11 0D 0B 08 
1bc57     04 FE F8 F3 
1bc5b     EE E8 E4 E3 
1bc5f     E1 DF DF DC | 	byte	$11, $0d, $0b, $08, $04, $fe, $f8, $f3, $ee, $e8, $e4, $e3, $e1, $df, $df, $dc
1bc63     D9 D7 D7 DC 
1bc67     E1 E1 DF DF 
1bc6b     E0 DE E1 E7 
1bc6f     EA EB EE F4 | 	byte	$d9, $d7, $d7, $dc, $e1, $e1, $df, $df, $e0, $de, $e1, $e7, $ea, $eb, $ee, $f4
1bc73     FA FB FD 03 
1bc77     07 07 0B 10 
1bc7b     14 14 16 19 
1bc7f     1C 1C 1D 1F | 	byte	$fa, $fb, $fd, $03, $07, $07, $0b, $10, $14, $14, $16, $19, $1c, $1c, $1d, $1f
1bc83     22 23 21 22 
1bc87     21 1D 18 16 
1bc8b     13 0D 09 08 
1bc8f     06 00 F8 F4 | 	byte	$22, $23, $21, $22, $21, $1d, $18, $16, $13, $0d, $09, $08, $06, $00, $f8, $f4
1bc93     F0 E8 E5 E4 
1bc97     E3 E1 E0 DE 
1bc9b     D9 D8 DA DF 
1bc9f     E2 E0 DF E0 | 	byte	$f0, $e8, $e5, $e4, $e3, $e1, $e0, $de, $d9, $d8, $da, $df, $e2, $e0, $df, $e0
1bca3     E1 DE DF E7 
1bca7     EB EB ED F4 
1bcab     FB FA FC 02 
1bcaf     07 09 0B 0F | 	byte	$e1, $de, $df, $e7, $eb, $eb, $ed, $f4, $fb, $fa, $fc, $02, $07, $09, $0b, $0f
1bcb3     12 14 17 1B 
1bcb7     1C 1A 1C 21 
1bcbb     23 22 21 22 
1bcbf     21 1C 18 15 | 	byte	$12, $14, $17, $1b, $1c, $1a, $1c, $21, $23, $22, $21, $22, $21, $1c, $18, $15
1bcc3     12 0C 09 07 
1bcc7     04 00 FA F4 
1bccb     EC E7 E6 E5 
1bccf     E2 E0 E0 DE | 	byte	$12, $0c, $09, $07, $04, $00, $fa, $f4, $ec, $e7, $e6, $e5, $e2, $e0, $e0, $de
1bcd3     D9 D7 D9 DF 
1bcd7     E1 E0 DE DF 
1bcdb     E0 DE DE E3 
1bcdf     E7 EA EC F2 | 	byte	$d9, $d7, $d9, $df, $e1, $e0, $de, $df, $e0, $de, $de, $e3, $e7, $ea, $ec, $f2
1bce3     F7 F8 F9 FF 
1bce7     05 06 07 0C 
1bceb     0F 11 15 18 
1bcef     1B 1A 1B 1F | 	byte	$f7, $f8, $f9, $ff, $05, $06, $07, $0c, $0f, $11, $15, $18, $1b, $1a, $1b, $1f
1bcf3     23 24 23 21 
1bcf7     20 1C 1B 17 
1bcfb     13 0E 0B 09 
1bcff     07 02 FC F6 | 	byte	$23, $24, $23, $21, $20, $1c, $1b, $17, $13, $0e, $0b, $09, $07, $02, $fc, $f6
1bd03     F0 E9 E7 E6 
1bd07     E5 E3 E1 DE 
1bd0b     DC DB DC DF 
1bd0f     E2 E2 E0 E0 | 	byte	$f0, $e9, $e7, $e6, $e5, $e3, $e1, $de, $dc, $db, $dc, $df, $e2, $e2, $e0, $e0
1bd13     E1 E0 DE E3 
1bd17     E9 EA EC F2 
1bd1b     F8 F8 F8 FF 
1bd1f     06 08 06 0B | 	byte	$e1, $e0, $de, $e3, $e9, $ea, $ec, $f2, $f8, $f8, $f8, $ff, $06, $08, $06, $0b
1bd23     10 13 16 19 
1bd27     1B 1A 1A 1F 
1bd2b     25 24 23 23 
1bd2f     21 1D 1B 19 | 	byte	$10, $13, $16, $19, $1b, $1a, $1a, $1f, $25, $24, $23, $23, $21, $1d, $1b, $19
1bd33     16 10 0B 09 
1bd37     09 04 FE F6 
1bd3b     F0 EA E8 E7 
1bd3f     E6 E3 E0 E0 | 	byte	$16, $10, $0b, $09, $09, $04, $fe, $f6, $f0, $ea, $e8, $e7, $e6, $e3, $e0, $e0
1bd43     DC DA DB DF 
1bd47     E3 E1 E0 E0 
1bd4b     E1 E0 DC E1 
1bd4f     E7 E9 EB EF | 	byte	$dc, $da, $db, $df, $e3, $e1, $e0, $e0, $e1, $e0, $dc, $e1, $e7, $e9, $eb, $ef
1bd53     F5 F8 F8 FD 
1bd57     03 04 05 09 
1bd5b     0E 0F 14 1A 
1bd5f     1B 18 1A 1F | 	byte	$f5, $f8, $f8, $fd, $03, $04, $05, $09, $0e, $0f, $14, $1a, $1b, $18, $1a, $1f
1bd63     26 26 24 23 
1bd67     22 1F 1C 1A 
1bd6b     18 11 0E 0C 
1bd6f     0A 06 00 FA | 	byte	$26, $26, $24, $23, $22, $1f, $1c, $1a, $18, $11, $0e, $0c, $0a, $06, $00, $fa
1bd73     F2 EC EB EB 
1bd77     E8 E4 E2 E1 
1bd7b     E0 DE DE E0 
1bd7f     E4 E5 E3 E1 | 	byte	$f2, $ec, $eb, $eb, $e8, $e4, $e2, $e1, $e0, $de, $de, $e0, $e4, $e5, $e3, $e1
1bd83     E2 E2 E0 E1 
1bd87     E7 EB EC EF 
1bd8b     F4 F7 F8 FC 
1bd8f     01 03 03 05 | 	byte	$e2, $e2, $e0, $e1, $e7, $eb, $ec, $ef, $f4, $f7, $f8, $fc, $01, $03, $03, $05
1bd93     0B 0F 13 16 
1bd97     18 17 18 1E 
1bd9b     23 25 24 22 
1bd9f     1F 1E 1C 1B | 	byte	$0b, $0f, $13, $16, $18, $17, $18, $1e, $23, $25, $24, $22, $1f, $1e, $1c, $1b
1bda3     16 10 0D 0D 
1bda7     0C 07 00 FA 
1bdab     F4 EE EB E9 
1bdaf     E8 E5 E2 E1 | 	byte	$16, $10, $0d, $0d, $0c, $07, $00, $fa, $f4, $ee, $eb, $e9, $e8, $e5, $e2, $e1
1bdb3     E0 DE DE DF 
1bdb7     E3 E3 E2 E1 
1bdbb     E2 E0 DD E0 
1bdbf     E7 EB EA EE | 	byte	$e0, $de, $de, $df, $e3, $e3, $e2, $e1, $e2, $e0, $dd, $e0, $e7, $eb, $ea, $ee
1bdc3     F5 F9 F8 FB 
1bdc7     01 04 03 05 
1bdcb     0B 0F 14 16 
1bdcf     17 16 18 1F | 	byte	$f5, $f9, $f8, $fb, $01, $04, $03, $05, $0b, $0f, $14, $16, $17, $16, $18, $1f
1bdd3     24 25 23 21 
1bdd7     20 1E 1C 1A 
1bddb     18 12 0E 0D 
1bddf     0B 07 00 F9 | 	byte	$24, $25, $23, $21, $20, $1e, $1c, $1a, $18, $12, $0e, $0d, $0b, $07, $00, $f9
1bde3     F2 ED EC EA 
1bde7     E6 E2 E1 E1 
1bdeb     E0 DD DC DF 
1bdef     E3 E4 E2 E0 | 	byte	$f2, $ed, $ec, $ea, $e6, $e2, $e1, $e1, $e0, $dd, $dc, $df, $e3, $e4, $e2, $e0
1bdf3     E1 E0 DE DF 
1bdf7     E6 EA EC EE 
1bdfb     F3 F7 F8 FB 
1bdff     FF 02 01 03 | 	byte	$e1, $e0, $de, $df, $e6, $ea, $ec, $ee, $f3, $f7, $f8, $fb, $ff, $02, $01, $03
1be03     09 0F 12 14 
1be07     16 15 17 1D 
1be0b     24 24 22 21 
1be0f     20 1E 1C 1B | 	byte	$09, $0f, $12, $14, $16, $15, $17, $1d, $24, $24, $22, $21, $20, $1e, $1c, $1b
1be13     17 12 0F 0F 
1be17     0C 06 00 FC 
1be1b     F5 EF EC EA 
1be1f     E7 E3 E1 E1 | 	byte	$17, $12, $0f, $0f, $0c, $06, $00, $fc, $f5, $ef, $ec, $ea, $e7, $e3, $e1, $e1
1be23     E0 DF DE DF 
1be27     E3 E7 E5 E1 
1be2b     E0 E2 E1 E2 
1be2f     E7 EC ED EE | 	byte	$e0, $df, $de, $df, $e3, $e7, $e5, $e1, $e0, $e2, $e1, $e2, $e7, $ec, $ed, $ee
1be33     F3 F9 F9 FA 
1be37     FF 02 01 02 
1be3b     08 0F 12 13 
1be3f     13 15 19 1E | 	byte	$f3, $f9, $f9, $fa, $ff, $02, $01, $02, $08, $0f, $12, $13, $13, $15, $19, $1e
1be43     21 22 22 22 
1be47     1F 1C 1A 19 
1be4b     17 12 0F 0E 
1be4f     0C 04 FE FB | 	byte	$21, $22, $22, $22, $1f, $1c, $1a, $19, $17, $12, $0f, $0e, $0c, $04, $fe, $fb
1be53     F4 EE EB E8 
1be57     E4 E2 E2 E2 
1be5b     E0 DD DC E0 
1be5f     E6 E6 E2 E0 | 	byte	$f4, $ee, $eb, $e8, $e4, $e2, $e2, $e2, $e0, $dd, $dc, $e0, $e6, $e6, $e2, $e0
1be63     E1 E1 E0 E1 
1be67     E7 EC EB ED 
1be6b     F3 FA FA F9 
1be6f     FD 01 00 03 | 	byte	$e1, $e1, $e0, $e1, $e7, $ec, $eb, $ed, $f3, $fa, $fa, $f9, $fd, $01, $00, $03
1be73     0A 0E 0F 0F 
1be77     13 16 18 1E 
1be7b     21 21 20 20 
1be7f     1D 1C 1B 17 | 	byte	$0a, $0e, $0f, $0f, $13, $16, $18, $1e, $21, $21, $20, $20, $1d, $1c, $1b, $17
1be83     13 12 10 0E 
1be87     07 02 00 FB 
1be8b     F2 EC EB E8 
1be8f     E3 E5 E4 E2 | 	byte	$13, $12, $10, $0e, $07, $02, $00, $fb, $f2, $ec, $eb, $e8, $e3, $e5, $e4, $e2
1be93     E0 DE DF E4 
1be97     E8 E7 E3 E0 
1be9b     E1 E3 E3 E7 
1be9f     E9 EA EC F2 | 	byte	$e0, $de, $df, $e4, $e8, $e7, $e3, $e0, $e1, $e3, $e3, $e7, $e9, $ea, $ec, $f2
1bea3     F9 FA F9 FB 
1bea7     FF 00 00 05 
1beab     0B 0E 0D 0F 
1beaf     14 17 1B 1F | 	byte	$f9, $fa, $f9, $fb, $ff, $00, $00, $05, $0b, $0e, $0d, $0f, $14, $17, $1b, $1f
1beb3     20 21 23 21 
1beb7     1F 1B 19 19 
1bebb     17 13 11 0E 
1bebf     08 03 00 FC | 	byte	$20, $21, $23, $21, $1f, $1b, $19, $19, $17, $13, $11, $0e, $08, $03, $00, $fc
1bec3     F6 EE E9 E6 
1bec7     E4 E6 E5 E2 
1becb     E0 DE DF E4 
1becf     E7 E6 E3 E0 | 	byte	$f6, $ee, $e9, $e6, $e4, $e6, $e5, $e2, $e0, $de, $df, $e4, $e7, $e6, $e3, $e0
1bed3     E1 E3 E4 E6 
1bed7     E8 EB EB EF 
1bedb     F8 FE FA F7 
1bedf     FC 02 03 04 | 	byte	$e1, $e3, $e4, $e6, $e8, $eb, $eb, $ef, $f8, $fe, $fa, $f7, $fc, $02, $03, $04
1bee3     07 0C 0E 11 
1bee7     15 17 1B 1F 
1beeb     1F 20 23 24 
1beef     20 1C 1A 19 | 	byte	$07, $0c, $0e, $11, $15, $17, $1b, $1f, $1f, $20, $23, $24, $20, $1c, $1a, $19
1bef3     19 17 14 10 
1bef7     09 05 03 01 
1befb     F8 F0 EB E8 
1beff     E7 E6 E6 E4 | 	byte	$19, $17, $14, $10, $09, $05, $03, $01, $f8, $f0, $eb, $e8, $e7, $e6, $e6, $e4
1bf03     E1 DE DE E1 
1bf07     E7 E9 E3 E0 
1bf0b     E0 E5 E5 E3 
1bf0f     E5 E9 EB EE | 	byte	$e1, $de, $de, $e1, $e7, $e9, $e3, $e0, $e0, $e5, $e5, $e3, $e5, $e9, $eb, $ee
1bf13     F6 FD FC F8 
1bf17     F9 FF 04 04 
1bf1b     05 0B 0C 0E 
1bf1f     13 17 1A 1A | 	byte	$f6, $fd, $fc, $f8, $f9, $ff, $04, $04, $05, $0b, $0c, $0e, $13, $17, $1a, $1a
1bf23     1D 1F 23 24 
1bf27     20 1B 1A 1A 
1bf2b     19 18 16 11 
1bf2f     0B 05 04 04 | 	byte	$1d, $1f, $23, $24, $20, $1b, $1a, $1a, $19, $18, $16, $11, $0b, $05, $04, $04
1bf33     FD F3 EC E9 
1bf37     E9 E7 E7 E5 
1bf3b     E2 E0 DD E1 
1bf3f     E5 E8 E5 E0 | 	byte	$fd, $f3, $ec, $e9, $e9, $e7, $e7, $e5, $e2, $e0, $dd, $e1, $e5, $e8, $e5, $e0
1bf43     DF E2 E5 E4 
1bf47     E3 E6 E7 EB 
1bf4b     F2 FB FA F4 
1bf4f     F6 FE 02 01 | 	byte	$df, $e2, $e5, $e4, $e3, $e6, $e7, $eb, $f2, $fb, $fa, $f4, $f6, $fe, $02, $01
1bf53     02 07 0A 0C 
1bf57     0F 16 18 18 
1bf5b     19 1C 21 24 
1bf5f     21 1A 18 19 | 	byte	$02, $07, $0a, $0c, $0f, $16, $18, $18, $19, $1c, $21, $24, $21, $1a, $18, $19
1bf63     1A 19 16 11 
1bf67     0C 07 05 04 
1bf6b     00 F6 EE EB 
1bf6f     E8 E7 E8 E7 | 	byte	$1a, $19, $16, $11, $0c, $07, $05, $04, $00, $f6, $ee, $eb, $e8, $e7, $e8, $e7
1bf73     E3 E0 DE E2 
1bf77     E6 E7 E6 E1 
1bf7b     E0 E2 E6 E5 
1bf7f     E3 E5 E7 EB | 	byte	$e3, $e0, $de, $e2, $e6, $e7, $e6, $e1, $e0, $e2, $e6, $e5, $e3, $e5, $e7, $eb
1bf83     F1 F8 FB F6 
1bf87     F3 F9 01 03 
1bf8b     00 03 08 0C 
1bf8f     0F 13 17 17 | 	byte	$f1, $f8, $fb, $f6, $f3, $f9, $01, $03, $00, $03, $08, $0c, $0f, $13, $17, $17
1bf93     19 1C 1F 23 
1bf97     22 1C 18 18 
1bf9b     19 19 16 12 
1bf9f     0C 07 06 05 | 	byte	$19, $1c, $1f, $23, $22, $1c, $18, $18, $19, $19, $16, $12, $0c, $07, $06, $05
1bfa3     00 F8 F0 EA 
1bfa7     E9 E8 E8 E6 
1bfab     E4 E0 DF E0 
1bfaf     E4 E7 E7 E1 | 	byte	$00, $f8, $f0, $ea, $e9, $e8, $e8, $e6, $e4, $e0, $df, $e0, $e4, $e7, $e7, $e1
1bfb3     DF E0 E7 E7 
1bfb7     E2 E2 E7 EB 
1bfbb     EF F5 F9 F8 
1bfbf     F4 F7 FE 02 | 	byte	$df, $e0, $e7, $e7, $e2, $e2, $e7, $eb, $ef, $f5, $f9, $f8, $f4, $f7, $fe, $02
1bfc3     FF FF 06 0A 
1bfc7     0F 12 16 17 
1bfcb     17 1A 1F 24 
1bfcf     23 1C 18 18 | 	byte	$ff, $ff, $06, $0a, $0f, $12, $16, $17, $17, $1a, $1f, $24, $23, $1c, $18, $18
1bfd3     1B 19 16 13 
1bfd7     0F 09 04 04 
1bfdb     03 FA F0 E9 
1bfdf     E8 E8 E8 E6 | 	byte	$1b, $19, $16, $13, $0f, $09, $04, $04, $03, $fa, $f0, $e9, $e8, $e8, $e8, $e6
1bfe3     E3 E1 E0 DF 
1bfe7     E3 E6 E6 E4 
1bfeb     E1 E1 E4 E6 
1bfef     E4 E3 E5 EA | 	byte	$e3, $e1, $e0, $df, $e3, $e6, $e6, $e4, $e1, $e1, $e4, $e6, $e4, $e3, $e5, $ea
1bff3     EE F3 F8 F8 
1bff7     F4 F6 FD 01 
1bffb     FE FE 04 0B 
1bfff     0D 10 14 17 | 	byte	$ee, $f3, $f8, $f8, $f4, $f6, $fd, $01, $fe, $fe, $04, $0b, $0d, $10, $14, $17
1c003     17 1A 1D 23 
1c007     24 20 19 19 
1c00b     1C 1B 18 16 
1c00f     12 0C 08 07 | 	byte	$17, $1a, $1d, $23, $24, $20, $19, $19, $1c, $1b, $18, $16, $12, $0c, $08, $07
1c013     05 00 F3 EE 
1c017     EB E9 E9 E8 
1c01b     E6 E3 E0 E1 
1c01f     E4 E6 E5 E4 | 	byte	$05, $00, $f3, $ee, $eb, $e9, $e9, $e8, $e6, $e3, $e0, $e1, $e4, $e6, $e5, $e4
1c023     E3 E3 E4 E7 
1c027     E4 E3 E6 EB 
1c02b     EF F1 F7 F9 
1c02f     F7 F5 F9 00 | 	byte	$e3, $e3, $e4, $e7, $e4, $e3, $e6, $eb, $ef, $f1, $f7, $f9, $f7, $f5, $f9, $00
1c033     FF FC 01 09 
1c037     0D 0F 11 13 
1c03b     16 19 1D 21 
1c03f     22 20 1A 1A | 	byte	$ff, $fc, $01, $09, $0d, $0f, $11, $13, $16, $19, $1d, $21, $22, $20, $1a, $1a
1c043     1B 1A 18 17 
1c047     14 0E 09 0A 
1c04b     08 02 F7 F1 
1c04f     EE EC EB EA | 	byte	$1b, $1a, $18, $17, $14, $0e, $09, $0a, $08, $02, $f7, $f1, $ee, $ec, $eb, $ea
1c053     E8 E5 E4 E3 
1c057     E4 E5 E6 E7 
1c05b     E6 E3 E4 E7 
1c05f     E6 E3 E4 EB | 	byte	$e8, $e5, $e4, $e3, $e4, $e5, $e6, $e7, $e6, $e3, $e4, $e7, $e6, $e3, $e4, $eb
1c063     EF F1 F5 F9 
1c067     F8 F7 F9 FC 
1c06b     FE FC FF 07 
1c06f     0C 0C 0F 12 | 	byte	$ef, $f1, $f5, $f9, $f8, $f7, $f9, $fc, $fe, $fc, $ff, $07, $0c, $0c, $0f, $12
1c073     15 17 1A 1E 
1c077     21 1F 19 19 
1c07b     1B 1B 18 15 
1c07f     14 10 0C 09 | 	byte	$15, $17, $1a, $1e, $21, $1f, $19, $19, $1b, $1b, $18, $15, $14, $10, $0c, $09
1c083     07 02 FA F2 
1c087     EE EC ED EC 
1c08b     E9 E7 E6 E6 
1c08f     E4 E5 E7 E8 | 	byte	$07, $02, $fa, $f2, $ee, $ec, $ed, $ec, $e9, $e7, $e6, $e6, $e4, $e5, $e7, $e8
1c093     E8 E6 E4 E6 
1c097     E7 E6 E7 EA 
1c09b     EF F1 F6 FA 
1c09f     FB F8 F8 FC | 	byte	$e8, $e6, $e4, $e6, $e7, $e6, $e7, $ea, $ef, $f1, $f6, $fa, $fb, $f8, $f8, $fc
1c0a3     FF FC FF 07 
1c0a7     0D 0D 0C 11 
1c0ab     17 19 19 1C 
1c0af     21 21 1C 19 | 	byte	$ff, $fc, $ff, $07, $0d, $0d, $0c, $11, $17, $19, $19, $1c, $21, $21, $1c, $19
1c0b3     1B 1C 19 16 
1c0b7     16 13 0E 0B 
1c0bb     09 04 FC F4 
1c0bf     F1 EF EC EB | 	byte	$1b, $1c, $19, $16, $16, $13, $0e, $0b, $09, $04, $fc, $f4, $f1, $ef, $ec, $eb
1c0c3     EB EA E8 E6 
1c0c7     E4 E6 E7 E8 
1c0cb     E9 E7 E4 E5 
1c0cf     E7 E6 E6 E9 | 	byte	$eb, $ea, $e8, $e6, $e4, $e6, $e7, $e8, $e9, $e7, $e4, $e5, $e7, $e6, $e6, $e9
1c0d3     ED EF F2 F8 
1c0d7     FC F8 F6 F8 
1c0db     FC FC FE 03 
1c0df     08 0A 0B 0F | 	byte	$ed, $ef, $f2, $f8, $fc, $f8, $f6, $f8, $fc, $fc, $fe, $03, $08, $0a, $0b, $0f
1c0e3     14 16 18 1A 
1c0e7     1F 1E 1C 1A 
1c0eb     1A 19 15 15 
1c0ef     17 12 0C 08 | 	byte	$14, $16, $18, $1a, $1f, $1e, $1c, $1a, $1a, $19, $15, $15, $17, $12, $0c, $08
1c0f3     08 03 FC F4 
1c0f7     F0 ED EB EA 
1c0fb     EA E8 E7 E6 
1c0ff     E3 E2 E5 E8 | 	byte	$08, $03, $fc, $f4, $f0, $ed, $eb, $ea, $ea, $e8, $e7, $e6, $e3, $e2, $e5, $e8
1c103     E9 E6 E2 E3 
1c107     E6 E7 E5 E7 
1c10b     EB EE F2 F6 
1c10f     FA FA F6 F6 | 	byte	$e9, $e6, $e2, $e3, $e6, $e7, $e5, $e7, $eb, $ee, $f2, $f6, $fa, $fa, $f6, $f6
1c113     F9 FC FD 03 
1c117     07 08 0B 0E 
1c11b     13 16 16 18 
1c11f     1D 1F 1E 1A | 	byte	$f9, $fc, $fd, $03, $07, $08, $0b, $0e, $13, $16, $16, $18, $1d, $1f, $1e, $1a
1c123     1A 1A 18 16 
1c127     15 14 10 0A 
1c12b     07 04 00 F8 
1c12f     F2 ED EA EA | 	byte	$1a, $1a, $18, $16, $15, $14, $10, $0a, $07, $04, $00, $f8, $f2, $ed, $ea, $ea
1c133     EB EB E7 E5 
1c137     E3 E3 E4 E7 
1c13b     E8 E8 E4 E1 
1c13f     E5 E8 E7 E5 | 	byte	$eb, $eb, $e7, $e5, $e3, $e3, $e4, $e7, $e8, $e8, $e4, $e1, $e5, $e8, $e7, $e5
1c143     E9 EC F1 F7 
1c147     FC FA F5 F4 
1c14b     F9 FD FE 00 
1c14f     06 0A 0B 0C | 	byte	$e9, $ec, $f1, $f7, $fc, $fa, $f5, $f4, $f9, $fd, $fe, $00, $06, $0a, $0b, $0c
1c153     13 17 17 17 
1c157     1B 20 20 1B 
1c15b     19 19 18 16 
1c15f     17 16 10 0A | 	byte	$13, $17, $17, $17, $1b, $20, $20, $1b, $19, $19, $18, $16, $17, $16, $10, $0a
1c163     08 06 00 F8 
1c167     F3 EE EA EA 
1c16b     EC EC E8 E5 
1c16f     E3 E3 E5 E7 | 	byte	$08, $06, $00, $f8, $f3, $ee, $ea, $ea, $ec, $ec, $e8, $e5, $e3, $e3, $e5, $e7
1c173     E8 E7 E4 E3 
1c177     E6 E8 E7 E5 
1c17b     E7 EC F0 F5 
1c17f     FA FC F6 F3 | 	byte	$e8, $e7, $e4, $e3, $e6, $e8, $e7, $e5, $e7, $ec, $f0, $f5, $fa, $fc, $f6, $f3
1c183     F7 FC FE FF 
1c187     03 07 0A 0B 
1c18b     0F 13 14 14 
1c18f     18 1E 1E 1A | 	byte	$f7, $fc, $fe, $ff, $03, $07, $0a, $0b, $0f, $13, $14, $14, $18, $1e, $1e, $1a
1c193     18 17 16 14 
1c197     15 17 12 0B 
1c19b     07 07 02 FC 
1c19f     F4 F0 EC ED | 	byte	$18, $17, $16, $14, $15, $17, $12, $0b, $07, $07, $02, $fc, $f4, $f0, $ec, $ed
1c1a3     ED EC E9 E7 
1c1a7     E5 E5 E6 E8 
1c1ab     E8 E8 E5 E3 
1c1af     E4 E9 E8 E5 | 	byte	$ed, $ec, $e9, $e7, $e5, $e5, $e6, $e8, $e8, $e8, $e5, $e3, $e4, $e9, $e8, $e5
1c1b3     E5 EB F1 F6 
1c1b7     F8 F9 F8 F4 
1c1bb     F6 FA FC FE 
1c1bf     01 07 09 0B | 	byte	$e5, $eb, $f1, $f6, $f8, $f9, $f8, $f4, $f6, $fa, $fc, $fe, $01, $07, $09, $0b
1c1c3     0F 13 13 13 
1c1c7     17 1F 20 1C 
1c1cb     18 18 17 16 
1c1cf     17 18 14 0E | 	byte	$0f, $13, $13, $13, $17, $1f, $20, $1c, $18, $18, $17, $16, $17, $18, $14, $0e
1c1d3     08 07 04 00 
1c1d7     F7 F0 EC EC 
1c1db     EF EF EA E6 
1c1df     E6 E6 E7 E7 | 	byte	$08, $07, $04, $00, $f7, $f0, $ec, $ec, $ef, $ef, $ea, $e6, $e6, $e6, $e7, $e7
1c1e3     E7 E8 E7 E4 
1c1e7     E4 E8 E8 E5 
1c1eb     E4 EA F1 F5 
1c1ef     F8 FA F8 F3 | 	byte	$e7, $e8, $e7, $e4, $e4, $e8, $e8, $e5, $e4, $ea, $f1, $f5, $f8, $fa, $f8, $f3
1c1f3     F5 FB FE FE 
1c1f7     01 08 0C 0D 
1c1fb     0F 14 16 16 
1c1ff     19 1F 21 1E | 	byte	$f5, $fb, $fe, $fe, $01, $08, $0c, $0d, $0f, $14, $16, $16, $19, $1f, $21, $1e
1c203     1A 17 18 18 
1c207     19 19 15 0E 
1c20b     0A 0A 04 FE 
1c20f     F8 F0 EE EE | 	byte	$1a, $17, $18, $18, $19, $19, $15, $0e, $0a, $0a, $04, $fe, $f8, $f0, $ee, $ee
1c213     EF EE EB E8 
1c217     E7 E7 E8 E9 
1c21b     E9 E9 E8 E6 
1c21f     E7 EA E9 E5 | 	byte	$ef, $ee, $eb, $e8, $e7, $e7, $e8, $e9, $e9, $e9, $e8, $e6, $e7, $ea, $e9, $e5
1c223     E5 EC F3 F6 
1c227     F8 FA FA F5 
1c22b     F5 F9 FD FD 
1c22f     FF 06 0A 0C | 	byte	$e5, $ec, $f3, $f6, $f8, $fa, $fa, $f5, $f5, $f9, $fd, $fd, $ff, $06, $0a, $0c
1c233     0D 12 14 13 
1c237     17 1E 20 1C 
1c23b     19 18 17 17 
1c23f     18 19 16 0F | 	byte	$0d, $12, $14, $13, $17, $1e, $20, $1c, $19, $18, $17, $17, $18, $19, $16, $0f
1c243     0A 09 07 00 
1c247     F8 F1 EF F0 
1c24b     F0 EF EC E8 
1c24f     E8 E9 E9 E8 | 	byte	$0a, $09, $07, $00, $f8, $f1, $ef, $f0, $f0, $ef, $ec, $e8, $e8, $e9, $e9, $e8
1c253     E8 E9 E9 E7 
1c257     E6 E8 EA E6 
1c25b     E4 E9 F1 F6 
1c25f     F6 F7 F8 F5 | 	byte	$e8, $e9, $e9, $e7, $e6, $e8, $ea, $e6, $e4, $e9, $f1, $f6, $f6, $f7, $f8, $f5
1c263     F3 F7 F9 FA 
1c267     FE 04 08 08 
1c26b     0B 0F 11 11 
1c26f     15 1C 1F 1B | 	byte	$f3, $f7, $f9, $fa, $fe, $04, $08, $08, $0b, $0f, $11, $11, $15, $1c, $1f, $1b
1c273     17 15 15 17 
1c277     18 17 14 0E 
1c27b     0B 09 04 FD 
1c27f     F8 F3 EF EE | 	byte	$17, $15, $15, $17, $18, $17, $14, $0e, $0b, $09, $04, $fd, $f8, $f3, $ef, $ee
1c283     EF EE EB E8 
1c287     E7 E8 E8 E7 
1c28b     E7 E7 E8 E8 
1c28f     E7 E8 E8 E6 | 	byte	$ef, $ee, $eb, $e8, $e7, $e8, $e8, $e7, $e7, $e7, $e8, $e8, $e7, $e8, $e8, $e6
1c293     E5 EB F2 F6 
1c297     F7 F9 F9 F6 
1c29b     F4 F8 FC FD 
1c29f     FF 04 09 0B | 	byte	$e5, $eb, $f2, $f6, $f7, $f9, $f9, $f6, $f4, $f8, $fc, $fd, $ff, $04, $09, $0b
1c2a3     0B 0F 11 12 
1c2a7     17 1C 1E 1A 
1c2ab     17 16 16 16 
1c2af     18 18 15 0F | 	byte	$0b, $0f, $11, $12, $17, $1c, $1e, $1a, $17, $16, $16, $16, $18, $18, $15, $0f
1c2b3     0B 09 06 00 
1c2b7     F8 F3 F0 F0 
1c2bb     F0 ED EA E9 
1c2bf     E9 E9 E8 E7 | 	byte	$0b, $09, $06, $00, $f8, $f3, $f0, $f0, $f0, $ed, $ea, $e9, $e9, $e9, $e8, $e7
1c2c3     E7 E8 E9 E8 
1c2c7     E6 E8 E9 E7 
1c2cb     E5 EC F3 F6 
1c2cf     F6 F8 F9 F6 | 	byte	$e7, $e8, $e9, $e8, $e6, $e8, $e9, $e7, $e5, $ec, $f3, $f6, $f6, $f8, $f9, $f6
1c2d3     F4 F7 FB FD 
1c2d7     FF 06 09 0A 
1c2db     0C 0F 0F 11 
1c2df     17 1E 1C 18 | 	byte	$f4, $f7, $fb, $fd, $ff, $06, $09, $0a, $0c, $0f, $0f, $11, $17, $1e, $1c, $18
1c2e3     15 16 16 17 
1c2e7     18 16 13 0E 
1c2eb     0A 07 02 FC 
1c2ef     F8 F2 EF EF | 	byte	$15, $16, $16, $17, $18, $16, $13, $0e, $0a, $07, $02, $fc, $f8, $f2, $ef, $ef
1c2f3     F0 ED EA E7 
1c2f7     E8 EA E9 E5 
1c2fb     E6 E8 E8 E7 
1c2ff     E6 E7 E6 E4 | 	byte	$f0, $ed, $ea, $e7, $e8, $ea, $e9, $e5, $e6, $e8, $e8, $e7, $e6, $e7, $e6, $e4
1c303     E7 EE F3 F5 
1c307     F6 F8 F6 F2 
1c30b     F3 F8 FB FC 
1c30f     00 07 09 09 | 	byte	$e7, $ee, $f3, $f5, $f6, $f8, $f6, $f2, $f3, $f8, $fb, $fc, $00, $07, $09, $09
1c313     0B 0F 10 13 
1c317     19 1B 18 17 
1c31b     15 14 14 17 
1c31f     1A 16 11 0C | 	byte	$0b, $0f, $10, $13, $19, $1b, $18, $17, $15, $14, $14, $17, $1a, $16, $11, $0c
1c323     0B 08 01 FC 
1c327     F8 F2 F0 F1 
1c32b     F0 EC EA EA 
1c32f     EC EB E9 E8 | 	byte	$0b, $08, $01, $fc, $f8, $f2, $f0, $f1, $f0, $ec, $ea, $ea, $ec, $eb, $e9, $e8
1c333     E8 EA E9 E8 
1c337     E7 E9 E8 E5 
1c33b     E7 EF F6 F7 
1c33f     F5 F8 F9 F4 | 	byte	$e8, $ea, $e9, $e8, $e7, $e9, $e8, $e5, $e7, $ef, $f6, $f7, $f5, $f8, $f9, $f4
1c343     F3 F6 FB FE 
1c347     FF 05 09 08 
1c34b     09 0E 0F 11 
1c34f     17 1B 1B 16 | 	byte	$f3, $f6, $fb, $fe, $ff, $05, $09, $08, $09, $0e, $0f, $11, $17, $1b, $1b, $16
1c353     13 13 14 16 
1c357     18 18 13 0E 
1c35b     0B 08 04 FF 
1c35f     FB F5 F1 F1 | 	byte	$13, $13, $14, $16, $18, $18, $13, $0e, $0b, $08, $04, $ff, $fb, $f5, $f1, $f1
1c363     F1 EF EC EA 
1c367     EC EE ED EA 
1c36b     E8 EA EC EB 
1c36f     E8 E9 EB E8 | 	byte	$f1, $ef, $ec, $ea, $ec, $ee, $ed, $ea, $e8, $ea, $ec, $eb, $e8, $e9, $eb, $e8
1c373     E6 EA F3 F7 
1c377     F6 F6 F8 F7 
1c37b     F3 F4 F7 FB 
1c37f     FE 01 07 08 | 	byte	$e6, $ea, $f3, $f7, $f6, $f6, $f8, $f7, $f3, $f4, $f7, $fb, $fe, $01, $07, $08
1c383     09 0C 10 11 
1c387     14 1A 1E 1C 
1c38b     18 15 16 17 
1c38f     19 1A 18 14 | 	byte	$09, $0c, $10, $11, $14, $1a, $1e, $1c, $18, $15, $16, $17, $19, $1a, $18, $14
1c393     10 0D 0A 04 
1c397     00 FC F6 F1 
1c39b     F1 F2 F0 EC 
1c39f     EB ED EF ED | 	byte	$10, $0d, $0a, $04, $00, $fc, $f6, $f1, $f1, $f2, $f0, $ec, $eb, $ed, $ef, $ed
1c3a3     EA E8 EA EC 
1c3a7     EB E9 E8 E8 
1c3ab     E7 E7 ED F3 
1c3af     F6 F6 F6 F7 | 	byte	$ea, $e8, $ea, $ec, $eb, $e9, $e8, $e8, $e7, $e7, $ed, $f3, $f6, $f6, $f6, $f7
1c3b3     F6 F2 F3 F8 
1c3b7     FC FE 02 07 
1c3bb     07 09 0D 10 
1c3bf     13 17 1B 1B | 	byte	$f6, $f2, $f3, $f8, $fc, $fe, $02, $07, $07, $09, $0d, $10, $13, $17, $1b, $1b
1c3c3     18 17 15 13 
1c3c7     16 1B 19 15 
1c3cb     10 0E 0C 06 
1c3cf     00 FE F9 F3 | 	byte	$18, $17, $15, $13, $16, $1b, $19, $15, $10, $0e, $0c, $06, $00, $fe, $f9, $f3
1c3d3     F0 F0 F0 EC 
1c3d7     EB EB ED ED 
1c3db     EA E8 E8 EA 
1c3df     EA EA E9 E9 | 	byte	$f0, $f0, $f0, $ec, $eb, $eb, $ed, $ed, $ea, $e8, $e8, $ea, $ea, $ea, $e9, $e9
1c3e3     E7 E6 E9 F1 
1c3e7     F5 F4 F4 F8 
1c3eb     F8 F3 F1 F6 
1c3ef     FC FC FE 03 | 	byte	$e7, $e6, $e9, $f1, $f5, $f4, $f4, $f8, $f8, $f3, $f1, $f6, $fc, $fc, $fe, $03
1c3f3     07 07 09 0D 
1c3f7     0F 14 18 1A 
1c3fb     18 16 15 13 
1c3ff     15 17 19 17 | 	byte	$07, $07, $09, $0d, $0f, $14, $18, $1a, $18, $16, $15, $13, $15, $17, $19, $17
1c403     12 0F 0C 08 
1c407     04 00 FC F4 
1c40b     F2 F1 F0 ED 
1c40f     EA EA ED ED | 	byte	$12, $0f, $0c, $08, $04, $00, $fc, $f4, $f2, $f1, $f0, $ed, $ea, $ea, $ed, $ed
1c413     EA E7 E8 E9 
1c417     EA E9 E8 E9 
1c41b     E9 E7 E7 ED 
1c41f     F4 F5 F3 F5 | 	byte	$ea, $e7, $e8, $e9, $ea, $e9, $e8, $e9, $e9, $e7, $e7, $ed, $f4, $f5, $f3, $f5
1c423     F7 F4 F1 F3 
1c427     F8 FC FC 01 
1c42b     04 05 08 0C 
1c42f     0F 11 16 18 | 	byte	$f7, $f4, $f1, $f3, $f8, $fc, $fc, $01, $04, $05, $08, $0c, $0f, $11, $16, $18
1c433     19 17 14 14 
1c437     15 18 19 18 
1c43b     14 10 0D 09 
1c43f     06 02 00 F8 | 	byte	$19, $17, $14, $14, $15, $18, $19, $18, $14, $10, $0d, $09, $06, $02, $00, $f8
1c443     F3 F1 F1 F0 
1c447     EC E9 EC EE 
1c44b     ED E9 E7 E8 
1c44f     EB EB EA E7 | 	byte	$f3, $f1, $f1, $f0, $ec, $e9, $ec, $ee, $ed, $e9, $e7, $e8, $eb, $eb, $ea, $e7
1c453     E9 E9 E7 EB 
1c457     F1 F6 F6 F5 
1c45b     F7 F6 F2 F3 
1c45f     F7 FB FC FE | 	byte	$e9, $e9, $e7, $eb, $f1, $f6, $f6, $f5, $f7, $f6, $f2, $f3, $f7, $fb, $fc, $fe
1c463     03 07 06 09 
1c467     0E 11 15 17 
1c46b     18 17 15 13 
1c46f     11 15 19 18 | 	byte	$03, $07, $06, $09, $0e, $11, $15, $17, $18, $17, $15, $13, $11, $15, $19, $18
1c473     13 0D 0B 08 
1c477     04 00 FC F8 
1c47b     F2 F1 F0 EE 
1c47f     EC E9 EB ED | 	byte	$13, $0d, $0b, $08, $04, $00, $fc, $f8, $f2, $f1, $f0, $ee, $ec, $e9, $eb, $ed
1c483     EC E9 E7 E7 
1c487     E8 EA EA E9 
1c48b     E9 E8 E7 EA 
1c48f     F0 F6 F5 F4 | 	byte	$ec, $e9, $e7, $e7, $e8, $ea, $ea, $e9, $e9, $e8, $e7, $ea, $f0, $f6, $f5, $f4
1c493     F6 F7 F3 F0 
1c497     F6 FC FC FC 
1c49b     00 06 07 09 
1c49f     0B 0F 13 17 | 	byte	$f6, $f7, $f3, $f0, $f6, $fc, $fc, $fc, $00, $06, $07, $09, $0b, $0f, $13, $17
1c4a3     17 16 15 13 
1c4a7     11 15 19 18 
1c4ab     15 11 0D 0B 
1c4af     07 04 00 FB | 	byte	$17, $16, $15, $13, $11, $15, $19, $18, $15, $11, $0d, $0b, $07, $04, $00, $fb
1c4b3     F5 F3 F3 F1 
1c4b7     ED EB ED EF 
1c4bb     F0 EB E8 E8 
1c4bf     E9 EB EA EA | 	byte	$f5, $f3, $f3, $f1, $ed, $eb, $ed, $ef, $f0, $eb, $e8, $e8, $e9, $eb, $ea, $ea
1c4c3     EA E9 E7 E8 
1c4c7     EF F5 F6 F3 
1c4cb     F4 F6 F3 F1 
1c4cf     F3 F9 FC FC | 	byte	$ea, $e9, $e7, $e8, $ef, $f5, $f6, $f3, $f4, $f6, $f3, $f1, $f3, $f9, $fc, $fc
1c4d3     FF 05 06 08 
1c4d7     0C 0F 12 15 
1c4db     18 17 15 12 
1c4df     12 16 1A 19 | 	byte	$ff, $05, $06, $08, $0c, $0f, $12, $15, $18, $17, $15, $12, $12, $16, $1a, $19
1c4e3     14 11 0F 0C 
1c4e7     07 04 01 FD 
1c4eb     F8 F3 F2 F1 
1c4ef     EF EC EC EE | 	byte	$14, $11, $0f, $0c, $07, $04, $01, $fd, $f8, $f3, $f2, $f1, $ef, $ec, $ec, $ee
1c4f3     F0 EC E9 E7 
1c4f7     E7 EA EC EA 
1c4fb     E8 E9 E9 E9 
1c4ff     EF F4 F6 F5 | 	byte	$f0, $ec, $e9, $e7, $e7, $ea, $ec, $ea, $e8, $e9, $e9, $e9, $ef, $f4, $f6, $f5
1c503     F5 F7 F4 F2 
1c507     F5 FA FD FC 
1c50b     00 05 07 09 
1c50f     0B 0F 13 16 | 	byte	$f5, $f7, $f4, $f2, $f5, $fa, $fd, $fc, $00, $05, $07, $09, $0b, $0f, $13, $16
1c513     17 17 17 15 
1c517     13 15 19 1A 
1c51b     17 13 10 0E 
1c51f     0A 06 03 00 | 	byte	$17, $17, $17, $15, $13, $15, $19, $1a, $17, $13, $10, $0e, $0a, $06, $03, $00
1c523     FA F7 F4 F3 
1c527     F0 EF EF F0 
1c52b     F1 F0 EC EA 
1c52f     EA EB EE ED | 	byte	$fa, $f7, $f4, $f3, $f0, $ef, $ef, $f0, $f1, $f0, $ec, $ea, $ea, $eb, $ee, $ed
1c533     EB EB EA EA 
1c537     EE F3 F6 F4 
1c53b     F4 F7 F6 F2 
1c53f     F2 F7 FC FB | 	byte	$eb, $eb, $ea, $ea, $ee, $f3, $f6, $f4, $f4, $f7, $f6, $f2, $f2, $f7, $fc, $fb
1c543     FB FF 06 07 
1c547     09 0C 10 14 
1c54b     15 14 14 14 
1c54f     13 14 17 18 | 	byte	$fb, $ff, $06, $07, $09, $0c, $10, $14, $15, $14, $14, $14, $13, $14, $17, $18
1c553     18 14 11 0F 
1c557     09 06 05 01 
1c55b     FC F6 F5 F4 
1c55f     F2 EF EE F0 | 	byte	$18, $14, $11, $0f, $09, $06, $05, $01, $fc, $f6, $f5, $f4, $f2, $ef, $ee, $f0
1c563     F2 F0 EC EA 
1c567     EA EB ED EC 
1c56b     EB EB EB EA 
1c56f     EB F1 F6 F4 | 	byte	$f2, $f0, $ec, $ea, $ea, $eb, $ed, $ec, $eb, $eb, $eb, $ea, $eb, $f1, $f6, $f4
1c573     F3 F4 F6 F3 
1c577     F1 F5 F9 FA 
1c57b     FB FF 03 06 
1c57f     08 0B 0F 13 | 	byte	$f3, $f4, $f6, $f3, $f1, $f5, $f9, $fa, $fb, $ff, $03, $06, $08, $0b, $0f, $13
1c583     13 14 16 15 
1c587     13 13 17 19 
1c58b     18 13 10 0E 
1c58f     09 05 03 00 | 	byte	$13, $14, $16, $15, $13, $13, $17, $19, $18, $13, $10, $0e, $09, $05, $03, $00
1c593     FC F6 F3 F1 
1c597     F0 EE ED EE 
1c59b     F0 F0 EC E9 
1c59f     E7 EA ED ED | 	byte	$fc, $f6, $f3, $f1, $f0, $ee, $ed, $ee, $f0, $f0, $ec, $e9, $e7, $ea, $ed, $ed
1c5a3     EB E9 EA EB 
1c5a7     EB EF F3 F4 
1c5ab     F3 F4 F6 F4 
1c5af     F1 F4 F8 FB | 	byte	$eb, $e9, $ea, $eb, $eb, $ef, $f3, $f4, $f3, $f4, $f6, $f4, $f1, $f4, $f8, $fb
1c5b3     FA FE 03 06 
1c5b7     07 09 0F 13 
1c5bb     13 13 14 17 
1c5bf     16 13 15 19 | 	byte	$fa, $fe, $03, $06, $07, $09, $0f, $13, $13, $13, $14, $17, $16, $13, $15, $19
1c5c3     19 15 12 0F 
1c5c7     0C 08 05 02 
1c5cb     FD F9 F6 F2 
1c5cf     F0 EE EE EF | 	byte	$19, $15, $12, $0f, $0c, $08, $05, $02, $fd, $f9, $f6, $f2, $f0, $ee, $ee, $ef
1c5d3     F1 F0 ED EB 
1c5d7     EA EB EC EF 
1c5db     ED EB EB EB 
1c5df     EC EF F4 F5 | 	byte	$f1, $f0, $ed, $eb, $ea, $eb, $ec, $ef, $ed, $eb, $eb, $eb, $ec, $ef, $f4, $f5
1c5e3     F3 F3 F6 F5 
1c5e7     F1 F0 F7 FA 
1c5eb     FB FA FF 05 
1c5ef     07 07 0C 10 | 	byte	$f3, $f3, $f6, $f5, $f1, $f0, $f7, $fa, $fb, $fa, $ff, $05, $07, $07, $0c, $10
1c5f3     11 11 13 15 
1c5f7     14 13 15 18 
1c5fb     18 14 11 10 
1c5ff     0C 05 03 02 | 	byte	$11, $11, $13, $15, $14, $13, $15, $18, $18, $14, $11, $10, $0c, $05, $03, $02
1c603     00 F8 F4 F2 
1c607     F0 EE ED ED 
1c60b     EF F0 EE EA 
1c60f     E8 EA EC EE | 	byte	$00, $f8, $f4, $f2, $f0, $ee, $ed, $ed, $ef, $f0, $ee, $ea, $e8, $ea, $ec, $ee
1c613     EC EA EB EB 
1c617     EC EF F3 F6 
1c61b     F4 F3 F6 F6 
1c61f     F2 F2 F7 FA | 	byte	$ec, $ea, $eb, $eb, $ec, $ef, $f3, $f6, $f4, $f3, $f6, $f6, $f2, $f2, $f7, $fa
1c623     FA FA FF 03 
1c627     05 07 0B 0F 
1c62b     0F 0F 11 15 
1c62f     14 11 13 18 | 	byte	$fa, $fa, $ff, $03, $05, $07, $0b, $0f, $0f, $0f, $11, $15, $14, $11, $13, $18
1c633     17 13 11 10 
1c637     0C 07 03 02 
1c63b     00 FA F6 F3 
1c63f     F0 F0 EE EE | 	byte	$17, $13, $11, $10, $0c, $07, $03, $02, $00, $fa, $f6, $f3, $f0, $f0, $ee, $ee
1c643     EF F0 EE EB 
1c647     EA EA EC F0 
1c64b     EF EB EB ED 
1c64f     EF F1 F4 F6 | 	byte	$ef, $f0, $ee, $eb, $ea, $ea, $ec, $f0, $ef, $eb, $eb, $ed, $ef, $f1, $f4, $f6
1c653     F6 F6 F8 F8 
1c657     F4 F3 F8 FC 
1c65b     FB FA FF 05 
1c65f     06 06 0B 10 | 	byte	$f6, $f6, $f8, $f8, $f4, $f3, $f8, $fc, $fb, $fa, $ff, $05, $06, $06, $0b, $10
1c663     11 0F 11 15 
1c667     16 13 13 17 
1c66b     18 16 12 11 
1c66f     0D 08 06 04 | 	byte	$11, $0f, $11, $15, $16, $13, $13, $17, $18, $16, $12, $11, $0d, $08, $06, $04
1c673     00 FC F8 F5 
1c677     F2 F0 F0 F0 
1c67b     F1 F1 EE EB 
1c67f     EA EC EE EF | 	byte	$00, $fc, $f8, $f5, $f2, $f0, $f0, $f0, $f1, $f1, $ee, $eb, $ea, $ec, $ee, $ef
1c683     EE EC EC EE 
1c687     EE F0 F4 F7 
1c68b     F6 F5 F7 F9 
1c68f     F6 F4 F8 FC | 	byte	$ee, $ec, $ec, $ee, $ee, $f0, $f4, $f7, $f6, $f5, $f7, $f9, $f6, $f4, $f8, $fc
1c693     FC FC FF 06 
1c697     08 09 0C 0F 
1c69b     11 10 13 16 
1c69f     16 13 16 18 | 	byte	$fc, $fc, $ff, $06, $08, $09, $0c, $0f, $11, $10, $13, $16, $16, $13, $16, $18
1c6a3     18 15 13 13 
1c6a7     0F 08 06 04 
1c6ab     01 FD F8 F5 
1c6af     F3 F2 F0 F0 | 	byte	$18, $15, $13, $13, $0f, $08, $06, $04, $01, $fd, $f8, $f5, $f3, $f2, $f0, $f0
1c6b3     F1 F1 F0 EC 
1c6b7     E9 EB EE F0 
1c6bb     EE EA EA ED 
1c6bf     EF EF F2 F6 | 	byte	$f1, $f1, $f0, $ec, $e9, $eb, $ee, $f0, $ee, $ea, $ea, $ed, $ef, $ef, $f2, $f6
1c6c3     F6 F5 F7 F8 
1c6c7     F6 F4 F7 FC 
1c6cb     FC FA FF 07 
1c6cf     06 07 0B 11 | 	byte	$f6, $f5, $f7, $f8, $f6, $f4, $f7, $fc, $fc, $fa, $ff, $07, $06, $07, $0b, $11
1c6d3     11 0E 10 15 
1c6d7     15 13 12 16 
1c6db     17 13 11 10 
1c6df     0E 08 04 03 | 	byte	$11, $0e, $10, $15, $15, $13, $12, $16, $17, $13, $11, $10, $0e, $08, $04, $03
1c6e3     00 FC F9 F6 
1c6e7     F2 F0 F0 F1 
1c6eb     F1 F1 F0 EC 
1c6ef     EB EC ED EF | 	byte	$00, $fc, $f9, $f6, $f2, $f0, $f0, $f1, $f1, $f1, $f0, $ec, $eb, $ec, $ed, $ef
1c6f3     F0 EC EA EC 
1c6f7     EE F0 F2 F4 
1c6fb     F3 F3 F6 F7 
1c6ff     F4 F3 F6 FA | 	byte	$f0, $ec, $ea, $ec, $ee, $f0, $f2, $f4, $f3, $f3, $f6, $f7, $f4, $f3, $f6, $fa
1c703     FB FA FE 04 
1c707     06 05 09 0E 
1c70b     0F 0E 0F 12 
1c70f     13 12 12 14 | 	byte	$fb, $fa, $fe, $04, $06, $05, $09, $0e, $0f, $0e, $0f, $12, $13, $12, $12, $14
1c713     13 11 11 11 
1c717     0C 06 03 02 
1c71b     00 FC F8 F6 
1c71f     F3 F1 F0 F1 | 	byte	$13, $11, $11, $11, $0c, $06, $03, $02, $00, $fc, $f8, $f6, $f3, $f1, $f0, $f1
1c723     F3 F2 F0 EC 
1c727     EB EC EF F2 
1c72b     F0 EB EB EE 
1c72f     F0 F0 F2 F4 | 	byte	$f3, $f2, $f0, $ec, $eb, $ec, $ef, $f2, $f0, $eb, $eb, $ee, $f0, $f0, $f2, $f4
1c733     F4 F3 F4 F8 
1c737     F6 F4 F5 F9 
1c73b     FC FB FE 04 
1c73f     06 06 0A 0F | 	byte	$f4, $f3, $f4, $f8, $f6, $f4, $f5, $f9, $fc, $fb, $fe, $04, $06, $06, $0a, $0f
1c743     0F 0D 0F 13 
1c747     13 12 12 14 
1c74b     13 10 0F 10 
1c74f     0C 06 02 00 | 	byte	$0f, $0d, $0f, $13, $13, $12, $12, $14, $13, $10, $0f, $10, $0c, $06, $02, $00
1c753     00 FC F9 F5 
1c757     F1 F0 F1 F2 
1c75b     F2 F1 F0 ED 
1c75f     EB EB EF F2 | 	byte	$00, $fc, $f9, $f5, $f1, $f0, $f1, $f2, $f2, $f1, $f0, $ed, $eb, $eb, $ef, $f2
1c763     F0 EC EA EE 
1c767     F0 F1 F2 F3 
1c76b     F3 F3 F6 F8 
1c76f     F6 F3 F7 FA | 	byte	$f0, $ec, $ea, $ee, $f0, $f1, $f2, $f3, $f3, $f3, $f6, $f8, $f6, $f3, $f7, $fa
1c773     FB FB FF 05 
1c777     06 05 0A 0F 
1c77b     0F 0C 0F 11 
1c77f     14 13 13 12 | 	byte	$fb, $fb, $ff, $05, $06, $05, $0a, $0f, $0f, $0c, $0f, $11, $14, $13, $13, $12
1c783     11 10 10 10 
1c787     0A 04 01 00 
1c78b     FD FA F8 F4 
1c78f     F1 EF EF F1 | 	byte	$11, $10, $10, $10, $0a, $04, $01, $00, $fd, $fa, $f8, $f4, $f1, $ef, $ef, $f1
1c793     F2 F1 EE EA 
1c797     EB EE F0 F1 
1c79b     EE EB EB EF 
1c79f     F0 F0 F1 F2 | 	byte	$f2, $f1, $ee, $ea, $eb, $ee, $f0, $f1, $ee, $eb, $eb, $ef, $f0, $f0, $f1, $f2
1c7a3     F2 F2 F5 F8 
1c7a7     F4 F2 F5 F8 
1c7ab     FA FB FF 03 
1c7af     03 05 0B 0E | 	byte	$f2, $f2, $f5, $f8, $f4, $f2, $f5, $f8, $fa, $fb, $ff, $03, $03, $05, $0b, $0e
1c7b3     0C 0C 0F 12 
1c7b7     12 12 13 12 
1c7bb     10 0E 10 10 
1c7bf     0A 03 00 FE | 	byte	$0c, $0c, $0f, $12, $12, $12, $13, $12, $10, $0e, $10, $10, $0a, $03, $00, $fe
1c7c3     FE FC F8 F3 
1c7c7     F0 F0 F0 F3 
1c7cb     F2 F1 F0 EC 
1c7cf     EB EE F2 F4 | 	byte	$fe, $fc, $f8, $f3, $f0, $f0, $f0, $f3, $f2, $f1, $f0, $ec, $eb, $ee, $f2, $f4
1c7d3     F1 EC EC F1 
1c7d7     F4 F3 F2 F3 
1c7db     F4 F5 F6 F9 
1c7df     F8 F5 F5 F9 | 	byte	$f1, $ec, $ec, $f1, $f4, $f3, $f2, $f3, $f4, $f5, $f6, $f9, $f8, $f5, $f5, $f9
1c7e3     FB FC FF 05 
1c7e7     05 06 0C 11 
1c7eb     0E 0C 0F 13 
1c7ef     15 15 14 13 | 	byte	$fb, $fc, $ff, $05, $05, $06, $0c, $11, $0e, $0c, $0f, $13, $15, $15, $14, $13
1c7f3     11 10 12 10 
1c7f7     0C 06 01 FE 
1c7fb     FC FC FB F6 
1c7ff     F0 EE F0 F2 | 	byte	$11, $10, $12, $10, $0c, $06, $01, $fe, $fc, $fc, $fb, $f6, $f0, $ee, $f0, $f2
1c803     F3 F1 EF ED 
1c807     EC EE F1 F4 
1c80b     F3 EE EC EF 
1c80f     F5 F4 F3 F4 | 	byte	$f3, $f1, $ef, $ed, $ec, $ee, $f1, $f4, $f3, $ee, $ec, $ef, $f5, $f4, $f3, $f4
1c813     F4 F4 F6 FA 
1c817     F9 F5 F4 F8 
1c81b     FD FC FD 02 
1c81f     06 06 09 0E | 	byte	$f4, $f4, $f6, $fa, $f9, $f5, $f4, $f8, $fd, $fc, $fd, $02, $06, $06, $09, $0e
1c823     0F 0D 0D 0F 
1c827     14 15 16 14 
1c82b     12 10 11 12 
1c82f     0F 08 02 00 | 	byte	$0f, $0d, $0d, $0f, $14, $15, $16, $14, $12, $10, $11, $12, $0f, $08, $02, $00
1c833     FF FE FC F8 
1c837     F2 F0 F0 F2 
1c83b     F3 F3 F1 EF 
1c83f     ED EE F2 F6 | 	byte	$ff, $fe, $fc, $f8, $f2, $f0, $f0, $f2, $f3, $f3, $f1, $ef, $ed, $ee, $f2, $f6
1c843     F3 F0 EE F1 
1c847     F5 F5 F4 F4 
1c84b     F5 F5 F6 F9 
1c84f     FB F7 F4 F7 | 	byte	$f3, $f0, $ee, $f1, $f5, $f5, $f4, $f4, $f5, $f5, $f6, $f9, $fb, $f7, $f4, $f7
1c853     FC FD FD 00 
1c857     02 04 07 0C 
1c85b     0E 0A 0B 0F 
1c85f     13 13 13 14 | 	byte	$fc, $fd, $fd, $00, $02, $04, $07, $0c, $0e, $0a, $0b, $0f, $13, $13, $13, $14
1c863     12 10 10 13 
1c867     10 0B 05 00 
1c86b     FF FF 00 F8 
1c86f     F2 F0 F1 F3 | 	byte	$12, $10, $10, $13, $10, $0b, $05, $00, $ff, $ff, $00, $f8, $f2, $f0, $f1, $f3
1c873     F3 F2 F0 EE 
1c877     EC ED EF F2 
1c87b     F3 F0 EC EE 
1c87f     F4 F6 F3 F1 | 	byte	$f3, $f2, $f0, $ee, $ec, $ed, $ef, $f2, $f3, $f0, $ec, $ee, $f4, $f6, $f3, $f1
1c883     F3 F6 F6 F7 
1c887     F8 F7 F4 F6 
1c88b     F9 FB FB FE 
1c88f     02 03 05 0B | 	byte	$f3, $f6, $f6, $f7, $f8, $f7, $f4, $f6, $f9, $fb, $fb, $fe, $02, $03, $05, $0b
1c893     0E 0B 09 0D 
1c897     12 14 14 12 
1c89b     10 10 0F 13 
1c89f     10 0A 05 01 | 	byte	$0e, $0b, $09, $0d, $12, $14, $14, $12, $10, $10, $0f, $13, $10, $0a, $05, $01
1c8a3     00 FF 00 FA 
1c8a7     F4 F0 EF F3 
1c8ab     F4 F3 EF EF 
1c8af     EE EE EF F2 | 	byte	$00, $ff, $00, $fa, $f4, $f0, $ef, $f3, $f4, $f3, $ef, $ef, $ee, $ee, $ef, $f2
1c8b3     F3 F1 EE EF 
1c8b7     F3 F6 F4 F1 
1c8bb     F3 F5 F5 F6 
1c8bf     F8 F8 F4 F4 | 	byte	$f3, $f1, $ee, $ef, $f3, $f6, $f4, $f1, $f3, $f5, $f5, $f6, $f8, $f8, $f4, $f4
1c8c3     F9 FC FB FC 
1c8c7     00 04 06 09 
1c8cb     0C 0A 09 0C 
1c8cf     0F 11 13 14 | 	byte	$f9, $fc, $fb, $fc, $00, $04, $06, $09, $0c, $0a, $09, $0c, $0f, $11, $13, $14
1c8d3     10 0E 0F 11 
1c8d7     10 0A 05 01 
1c8db     00 FF 00 FC 
1c8df     F6 F2 F1 F3 | 	byte	$10, $0e, $0f, $11, $10, $0a, $05, $01, $00, $ff, $00, $fc, $f6, $f2, $f1, $f3
1c8e3     F4 F4 F2 F0 
1c8e7     EF ED F0 F3 
1c8eb     F3 F2 F0 EF 
1c8ef     F3 F6 F4 F1 | 	byte	$f4, $f4, $f2, $f0, $ef, $ed, $f0, $f3, $f3, $f2, $f0, $ef, $f3, $f6, $f4, $f1
1c8f3     F3 F5 F5 F5 
1c8f7     F7 F9 F6 F5 
1c8fb     F8 FB FC FD 
1c8ff     FF 03 06 09 | 	byte	$f3, $f5, $f5, $f5, $f7, $f9, $f6, $f5, $f8, $fb, $fc, $fd, $ff, $03, $06, $09
1c903     0C 0B 09 0C 
1c907     0F 12 13 13 
1c90b     12 10 0F 10 
1c90f     10 0D 07 02 | 	byte	$0c, $0b, $09, $0c, $0f, $12, $13, $13, $12, $10, $0f, $10, $10, $0d, $07, $02
1c913     FE 00 FF FC 
1c917     F6 F1 F0 F3 
1c91b     F3 F3 F0 F0 
1c91f     EE ED EE EF | 	byte	$fe, $00, $ff, $fc, $f6, $f1, $f0, $f3, $f3, $f3, $f0, $f0, $ee, $ed, $ee, $ef
1c923     F2 F2 F0 ED 
1c927     F0 F5 F4 F1 
1c92b     F0 F2 F3 F3 
1c92f     F4 F7 F5 F4 | 	byte	$f2, $f2, $f0, $ed, $f0, $f5, $f4, $f1, $f0, $f2, $f3, $f3, $f4, $f7, $f5, $f4
1c933     F6 F8 F8 FA 
1c937     FF 03 03 06 
1c93b     0A 0B 09 09 
1c93f     0E 10 12 13 | 	byte	$f6, $f8, $f8, $fa, $ff, $03, $03, $06, $0a, $0b, $09, $09, $0e, $10, $12, $13
1c943     11 0F 0E 0F 
1c947     0F 0C 07 03 
1c94b     FF FE FD FC 
1c94f     F8 F2 F0 F0 | 	byte	$11, $0f, $0e, $0f, $0f, $0c, $07, $03, $ff, $fe, $fd, $fc, $f8, $f2, $f0, $f0
1c953     F3 F3 F1 F0 
1c957     EF EF EF F0 
1c95b     F3 F3 F3 F0 
1c95f     F1 F6 F6 F4 | 	byte	$f3, $f3, $f1, $f0, $ef, $ef, $ef, $f0, $f3, $f3, $f3, $f0, $f1, $f6, $f6, $f4
1c963     F2 F4 F4 F4 
1c967     F5 F8 F8 F5 
1c96b     F5 F8 FA FB 
1c96f     FE 01 04 06 | 	byte	$f2, $f4, $f4, $f4, $f5, $f8, $f8, $f5, $f5, $f8, $fa, $fb, $fe, $01, $04, $06
1c973     0A 09 09 0B 
1c977     0D 0F 11 14 
1c97b     14 11 0F 10 
1c97f     10 0F 0A 06 | 	byte	$0a, $09, $09, $0b, $0d, $0f, $11, $14, $14, $11, $0f, $10, $10, $0f, $0a, $06
1c983     01 00 00 FE 
1c987     FA F6 F2 F3 
1c98b     F4 F4 F3 F3 
1c98f     F1 F0 EF F1 | 	byte	$01, $00, $00, $fe, $fa, $f6, $f2, $f3, $f4, $f4, $f3, $f3, $f1, $f0, $ef, $f1
1c993     F4 F5 F4 F2 
1c997     F1 F6 F8 F4 
1c99b     F2 F4 F6 F5 
1c99f     F4 F7 FA F7 | 	byte	$f4, $f5, $f4, $f2, $f1, $f6, $f8, $f4, $f2, $f4, $f6, $f5, $f4, $f7, $fa, $f7
1c9a3     F4 F6 F9 FB 
1c9a7     FD 01 03 06 
1c9ab     08 0A 09 09 
1c9af     0C 0F 13 14 | 	byte	$f4, $f6, $f9, $fb, $fd, $01, $03, $06, $08, $0a, $09, $09, $0c, $0f, $13, $14
1c9b3     13 11 10 10 
1c9b7     10 0E 0B 07 
1c9bb     03 FF 00 00 
1c9bf     FB F5 F2 F3 | 	byte	$13, $11, $10, $10, $10, $0e, $0b, $07, $03, $ff, $00, $00, $fb, $f5, $f2, $f3
1c9c3     F4 F4 F4 F1 
1c9c7     F2 F0 F0 F1 
1c9cb     F2 F4 F4 F3 
1c9cf     F2 F5 F8 F5 | 	byte	$f4, $f4, $f4, $f1, $f2, $f0, $f0, $f1, $f2, $f4, $f4, $f3, $f2, $f5, $f8, $f5
1c9d3     F3 F3 F5 F5 
1c9d7     F5 F8 F9 F6 
1c9db     F5 F7 F8 F9 
1c9df     FC 00 02 04 | 	byte	$f3, $f3, $f5, $f5, $f5, $f8, $f9, $f6, $f5, $f7, $f8, $f9, $fc, $00, $02, $04
1c9e3     07 09 09 09 
1c9e7     0B 0E 11 13 
1c9eb     13 0F 0E 0F 
1c9ef     0F 0C 09 06 | 	byte	$07, $09, $09, $09, $0b, $0e, $11, $13, $13, $0f, $0e, $0f, $0f, $0c, $09, $06
1c9f3     02 00 FF FD 
1c9f7     FA F6 F3 F1 
1c9fb     F2 F4 F3 F1 
1c9ff     F0 F0 F0 F1 | 	byte	$02, $00, $ff, $fd, $fa, $f6, $f3, $f1, $f2, $f4, $f3, $f1, $f0, $f0, $f0, $f1
1ca03     F2 F3 F4 F4 
1ca07     F3 F5 F8 F6 
1ca0b     F3 F3 F5 F4 
1ca0f     F5 F7 FC F8 | 	byte	$f2, $f3, $f4, $f4, $f3, $f5, $f8, $f6, $f3, $f3, $f5, $f4, $f5, $f7, $fc, $f8
1ca13     F4 F5 F8 FB 
1ca17     FB FE 01 05 
1ca1b     07 07 07 08 
1ca1f     0B 0E 0F 13 | 	byte	$f4, $f5, $f8, $fb, $fb, $fe, $01, $05, $07, $07, $07, $08, $0b, $0e, $0f, $13
1ca23     13 10 0E 0F 
1ca27     0E 0C 0A 07 
1ca2b     02 FE 00 FE 
1ca2f     FB F5 F2 F3 | 	byte	$13, $10, $0e, $0f, $0e, $0c, $0a, $07, $02, $fe, $00, $fe, $fb, $f5, $f2, $f3
1ca33     F4 F4 F1 F1 
1ca37     F0 F0 EF EF 
1ca3b     F2 F4 F5 F3 
1ca3f     F2 F6 F8 F6 | 	byte	$f4, $f4, $f1, $f1, $f0, $f0, $ef, $ef, $f2, $f4, $f5, $f3, $f2, $f6, $f8, $f6
1ca43     F2 F2 F6 F6 
1ca47     F4 F7 FB FA 
1ca4b     F5 F6 F7 FA 
1ca4f     FC FF 03 05 | 	byte	$f2, $f2, $f6, $f6, $f4, $f7, $fb, $fa, $f5, $f6, $f7, $fa, $fc, $ff, $03, $05
1ca53     07 07 07 07 
1ca57     0A 0D 11 16 
1ca5b     13 10 0F 10 
1ca5f     0F 0B 0A 08 | 	byte	$07, $07, $07, $07, $0a, $0d, $11, $16, $13, $10, $0f, $10, $0f, $0b, $0a, $08
1ca63     03 00 FE 00 
1ca67     FC F8 F3 F3 
1ca6b     F5 F4 F3 F1 
1ca6f     F0 F0 F0 F1 | 	byte	$03, $00, $fe, $00, $fc, $f8, $f3, $f3, $f5, $f4, $f3, $f1, $f0, $f0, $f0, $f1
1ca73     F2 F3 F5 F6 
1ca77     F4 F5 F8 F8 
1ca7b     F4 F3 F4 F5 
1ca7f     F6 F7 FB FB | 	byte	$f2, $f3, $f5, $f6, $f4, $f5, $f8, $f8, $f4, $f3, $f4, $f5, $f6, $f7, $fb, $fb
1ca83     F6 F5 F7 F9 
1ca87     FA FD 01 05 
1ca8b     05 04 06 07 
1ca8f     08 0B 0F 13 | 	byte	$f6, $f5, $f7, $f9, $fa, $fd, $01, $05, $05, $04, $06, $07, $08, $0b, $0f, $13
1ca93     13 10 0D 0D 
1ca97     0E 0C 0A 08 
1ca9b     04 00 FF FF 
1ca9f     FC F8 F4 F3 | 	byte	$13, $10, $0d, $0d, $0e, $0c, $0a, $08, $04, $00, $ff, $ff, $fc, $f8, $f4, $f3
1caa3     F4 F3 F3 F2 
1caa7     F1 F1 F0 F0 
1caab     F2 F3 F4 F5 
1caaf     F4 F5 F7 F7 | 	byte	$f4, $f3, $f3, $f2, $f1, $f1, $f0, $f0, $f2, $f3, $f4, $f5, $f4, $f5, $f7, $f7
1cab3     F3 F1 F3 F5 
1cab7     F4 F4 FA FB 
1cabb     F7 F4 F6 F9 
1cabf     FB FD FF 04 | 	byte	$f3, $f1, $f3, $f5, $f4, $f4, $fa, $fb, $f7, $f4, $f6, $f9, $fb, $fd, $ff, $04
1cac3     06 05 04 06 
1cac7     08 0B 0E 12 
1cacb     13 10 0D 0D 
1cacf     0D 0B 09 08 | 	byte	$06, $05, $04, $06, $08, $0b, $0e, $12, $13, $10, $0d, $0d, $0d, $0b, $09, $08
1cad3     04 00 FD FE 
1cad7     FC F9 F4 F3 
1cadb     F4 F5 F3 F1 
1cadf     F1 F2 F1 F1 | 	byte	$04, $00, $fd, $fe, $fc, $f9, $f4, $f3, $f4, $f5, $f3, $f1, $f1, $f2, $f1, $f1
1cae3     F2 F3 F5 F6 
1cae7     F5 F5 F8 F8 
1caeb     F4 F1 F3 F7 
1caef     F6 F6 F9 FC | 	byte	$f2, $f3, $f5, $f6, $f5, $f5, $f8, $f8, $f4, $f1, $f3, $f7, $f6, $f6, $f9, $fc
1caf3     F9 F6 F6 F9 
1caf7     FC FD 01 06 
1cafb     06 05 05 07 
1caff     08 09 0D 13 | 	byte	$f9, $f6, $f6, $f9, $fc, $fd, $01, $06, $06, $05, $05, $07, $08, $09, $0d, $13
1cb03     15 10 0C 0E 
1cb07     0F 0C 09 08 
1cb0b     06 00 FE FE 
1cb0f     FD F9 F6 F4 | 	byte	$15, $10, $0c, $0e, $0f, $0c, $09, $08, $06, $00, $fe, $fe, $fd, $f9, $f6, $f4
1cb13     F4 F5 F4 F3 
1cb17     F1 F1 F2 F3 
1cb1b     F4 F4 F4 F7 
1cb1f     F8 F7 F8 F8 | 	byte	$f4, $f5, $f4, $f3, $f1, $f1, $f2, $f3, $f4, $f4, $f4, $f7, $f8, $f7, $f8, $f8
1cb23     F6 F3 F4 F7 
1cb27     F6 F6 FB FD 
1cb2b     F9 F4 F6 FA 
1cb2f     FC FC FF 06 | 	byte	$f6, $f3, $f4, $f7, $f6, $f6, $fb, $fd, $f9, $f4, $f6, $fa, $fc, $fc, $ff, $06
1cb33     07 05 03 06 
1cb37     08 0B 0D 13 
1cb3b     15 11 0D 0D 
1cb3f     0D 0C 0A 08 | 	byte	$07, $05, $03, $06, $08, $0b, $0d, $13, $15, $11, $0d, $0d, $0d, $0c, $0a, $08
1cb43     05 00 00 FF 
1cb47     FE FA F5 F4 
1cb4b     F4 F6 F4 F2 
1cb4f     F2 F2 F3 F3 | 	byte	$05, $00, $00, $ff, $fe, $fa, $f5, $f4, $f4, $f6, $f4, $f2, $f2, $f2, $f3, $f3
1cb53     F4 F4 F6 F7 
1cb57     F7 F8 F9 F9 
1cb5b     F6 F2 F3 F7 
1cb5f     F7 F5 F7 FC | 	byte	$f4, $f4, $f6, $f7, $f7, $f8, $f9, $f9, $f6, $f2, $f3, $f7, $f7, $f5, $f7, $fc
1cb63     FB F4 F3 F8 
1cb67     FC FC FE 05 
1cb6b     07 05 03 05 
1cb6f     07 0A 0D 12 | 	byte	$fb, $f4, $f3, $f8, $fc, $fc, $fe, $05, $07, $05, $03, $05, $07, $0a, $0d, $12
1cb73     14 10 0C 0C 
1cb77     0D 0C 08 08 
1cb7b     07 02 FE FE 
1cb7f     FE FB F5 F3 | 	byte	$14, $10, $0c, $0c, $0d, $0c, $08, $08, $07, $02, $fe, $fe, $fe, $fb, $f5, $f3
1cb83     F4 F6 F4 F2 
1cb87     F0 F2 F4 F4 
1cb8b     F3 F3 F4 F8 
1cb8f     F9 F8 F8 FA | 	byte	$f4, $f6, $f4, $f2, $f0, $f2, $f4, $f4, $f3, $f3, $f4, $f8, $f9, $f8, $f8, $fa
1cb93     F7 F3 F3 F6 
1cb97     F8 F7 F9 FB 
1cb9b     FA F4 F3 F7 
1cb9f     FB FB FE 05 | 	byte	$f7, $f3, $f3, $f6, $f8, $f7, $f9, $fb, $fa, $f4, $f3, $f7, $fb, $fb, $fe, $05
1cba3     07 02 01 04 
1cba7     07 07 0B 11 
1cbab     14 0F 0A 0A 
1cbaf     0D 0A 08 07 | 	byte	$07, $02, $01, $04, $07, $07, $0b, $11, $14, $0f, $0a, $0a, $0d, $0a, $08, $07
1cbb3     04 00 FE FE 
1cbb7     FC F8 F4 F3 
1cbbb     F3 F3 F2 F1 
1cbbf     F1 F2 F3 F4 | 	byte	$04, $00, $fe, $fe, $fc, $f8, $f4, $f3, $f3, $f3, $f2, $f1, $f1, $f2, $f3, $f4
1cbc3     F4 F3 F3 F6 
1cbc7     F8 F9 F9 F8 
1cbcb     F4 F1 F3 F6 
1cbcf     F6 F6 F8 FC | 	byte	$f4, $f3, $f3, $f6, $f8, $f9, $f9, $f8, $f4, $f1, $f3, $f6, $f6, $f6, $f8, $fc
1cbd3     F8 F2 F4 F9 
1cbd7     FB FB FF 06 
1cbdb     06 02 02 05 
1cbdf     08 0B 0F 13 | 	byte	$f8, $f2, $f4, $f9, $fb, $fb, $ff, $06, $06, $02, $02, $05, $08, $0b, $0f, $13
1cbe3     12 0D 0B 0C 
1cbe7     0D 0A 09 08 
1cbeb     04 00 00 00 
1cbef     FC F8 F4 F4 | 	byte	$12, $0d, $0b, $0c, $0d, $0a, $09, $08, $04, $00, $00, $00, $fc, $f8, $f4, $f4
1cbf3     F5 F4 F3 F1 
1cbf7     F2 F3 F5 F4 
1cbfb     F3 F3 F6 F8 
1cbff     FB F9 F9 F8 | 	byte	$f5, $f4, $f3, $f1, $f2, $f3, $f5, $f4, $f3, $f3, $f6, $f8, $fb, $f9, $f9, $f8
1cc03     F3 F1 F3 F8 
1cc07     F8 F8 F9 FC 
1cc0b     F8 F3 F4 F9 
1cc0f     FB FC 01 05 | 	byte	$f3, $f1, $f3, $f8, $f8, $f8, $f9, $fc, $f8, $f3, $f4, $f9, $fb, $fc, $01, $05
1cc13     04 00 01 05 
1cc17     07 09 0F 14 
1cc1b     11 0B 09 0C 
1cc1f     0D 09 07 05 | 	byte	$04, $00, $01, $05, $07, $09, $0f, $14, $11, $0b, $09, $0c, $0d, $09, $07, $05
1cc23     03 FF FF FD 
1cc27     FA F8 F4 F3 
1cc2b     F3 F2 F2 F1 
1cc2f     F1 F1 F4 F4 | 	byte	$03, $ff, $ff, $fd, $fa, $f8, $f4, $f3, $f3, $f2, $f2, $f1, $f1, $f1, $f4, $f4
1cc33     F3 F3 F4 F8 
1cc37     FB FA F9 F8 
1cc3b     F4 F1 F4 F7 
1cc3f     F8 F8 FB FD | 	byte	$f3, $f3, $f4, $f8, $fb, $fa, $f9, $f8, $f4, $f1, $f4, $f7, $f8, $f8, $fb, $fd
1cc43     F8 F3 F4 FA 
1cc47     FC FB FF 06 
1cc4b     05 00 00 03 
1cc4f     07 09 0E 12 | 	byte	$f8, $f3, $f4, $fa, $fc, $fb, $ff, $06, $05, $00, $00, $03, $07, $09, $0e, $12
1cc53     12 0D 0A 0B 
1cc57     0C 0A 08 06 
1cc5b     03 00 00 FE 
1cc5f     FD F9 F5 F4 | 	byte	$12, $0d, $0a, $0b, $0c, $0a, $08, $06, $03, $00, $00, $fe, $fd, $f9, $f5, $f4
1cc63     F4 F4 F2 F1 
1cc67     F2 F3 F5 F5 
1cc6b     F4 F4 F4 F7 
1cc6f     FB FC FB F9 | 	byte	$f4, $f4, $f2, $f1, $f2, $f3, $f5, $f5, $f4, $f4, $f4, $f7, $fb, $fc, $fb, $f9
1cc73     F6 F2 F2 F6 
1cc77     F8 F7 F8 FC 
1cc7b     FB F4 F2 F7 
1cc7f     FC FC FD 03 | 	byte	$f6, $f2, $f2, $f6, $f8, $f7, $f8, $fc, $fb, $f4, $f2, $f7, $fc, $fc, $fd, $03
1cc83     06 02 FF 02 
1cc87     05 08 0C 11 
1cc8b     13 10 0B 0B 
1cc8f     0C 0B 08 08 | 	byte	$06, $02, $ff, $02, $05, $08, $0c, $11, $13, $10, $0b, $0b, $0c, $0b, $08, $08
1cc93     06 02 00 FE 
1cc97     00 FC F8 F4 
1cc9b     F4 F5 F4 F3 
1cc9f     F1 F2 F4 F6 | 	byte	$06, $02, $00, $fe, $00, $fc, $f8, $f4, $f4, $f5, $f4, $f3, $f1, $f2, $f4, $f6
1cca3     F6 F3 F3 F7 
1cca7     FB FD FC FA 
1ccab     F9 F6 F3 F3 
1ccaf     F9 FA FB FB | 	byte	$f6, $f3, $f3, $f7, $fb, $fd, $fc, $fa, $f9, $f6, $f3, $f3, $f9, $fa, $fb, $fb
1ccb3     FC F9 F6 F7 
1ccb7     FA FD FE 01 
1ccbb     06 05 00 01 
1ccbf     05 09 0B 0F | 	byte	$fc, $f9, $f6, $f7, $fa, $fd, $fe, $01, $06, $05, $00, $01, $05, $09, $0b, $0f
1ccc3     13 11 0D 0A 
1ccc7     0B 0B 0A 08 
1cccb     06 03 00 00 
1cccf     FF FC F9 F6 | 	byte	$13, $11, $0d, $0a, $0b, $0b, $0a, $08, $06, $03, $00, $00, $ff, $fc, $f9, $f6
1ccd3     F4 F4 F3 F3 
1ccd7     F2 F2 F3 F6 
1ccdb     F7 F5 F3 F4 
1ccdf     F9 FE FE FB | 	byte	$f4, $f4, $f3, $f3, $f2, $f2, $f3, $f6, $f7, $f5, $f3, $f4, $f9, $fe, $fe, $fb
1cce3     F9 F6 F3 F3 
1cce7     F7 FA FA FA 
1cceb     FD FC F6 F5 
1ccef     FB FE FC 00 | 	byte	$f9, $f6, $f3, $f3, $f7, $fa, $fa, $fa, $fd, $fc, $f6, $f5, $fb, $fe, $fc, $00
1ccf3     06 06 01 FF 
1ccf7     04 09 0B 0E 
1ccfb     11 11 0E 0A 
1ccff     0A 0B 0A 08 | 	byte	$06, $06, $01, $ff, $04, $09, $0b, $0e, $11, $11, $0e, $0a, $0a, $0b, $0a, $08
1cd03     05 03 00 00 
1cd07     00 FD F9 F6 
1cd0b     F6 F5 F4 F3 
1cd0f     F1 F2 F4 F7 | 	byte	$05, $03, $00, $00, $00, $fd, $f9, $f6, $f6, $f5, $f4, $f3, $f1, $f2, $f4, $f7
1cd13     F7 F4 F3 F4 
1cd17     F8 FC FE FC 
1cd1b     F9 F5 F1 F2 
1cd1f     F7 F9 F8 F8 | 	byte	$f7, $f4, $f3, $f4, $f8, $fc, $fe, $fc, $f9, $f5, $f1, $f2, $f7, $f9, $f8, $f8
1cd23     FB FC F6 F3 
1cd27     F7 FC FC FE 
1cd2b     03 04 00 FF 
1cd2f     03 07 08 0D | 	byte	$fb, $fc, $f6, $f3, $f7, $fc, $fc, $fe, $03, $04, $00, $ff, $03, $07, $08, $0d
1cd33     11 10 0C 09 
1cd37     0A 0A 08 06 
1cd3b     04 03 00 00 
1cd3f     FE FC FA F7 | 	byte	$11, $10, $0c, $09, $0a, $0a, $08, $06, $04, $03, $00, $00, $fe, $fc, $fa, $f7
1cd43     F4 F3 F4 F3 
1cd47     F1 F1 F3 F6 
1cd4b     F7 F5 F3 F3 
1cd4f     F7 FD FF FC | 	byte	$f4, $f3, $f4, $f3, $f1, $f1, $f3, $f6, $f7, $f5, $f3, $f3, $f7, $fd, $ff, $fc
1cd53     F8 F8 F4 F2 
1cd57     F4 F8 FA FA 
1cd5b     FB FC F8 F5 
1cd5f     F7 FB FD FE | 	byte	$f8, $f8, $f4, $f2, $f4, $f8, $fa, $fa, $fb, $fc, $f8, $f5, $f7, $fb, $fd, $fe
1cd63     03 05 01 00 
1cd67     03 06 07 0B 
1cd6b     0F 11 0E 0A 
1cd6f     09 0A 08 07 | 	byte	$03, $05, $01, $00, $03, $06, $07, $0b, $0f, $11, $0e, $0a, $09, $0a, $08, $07
1cd73     05 03 01 00 
1cd77     FF FC FA F8 
1cd7b     F7 F5 F3 F2 
1cd7f     F2 F2 F3 F5 | 	byte	$05, $03, $01, $00, $ff, $fc, $fa, $f8, $f7, $f5, $f3, $f2, $f2, $f2, $f3, $f5
1cd83     F7 F8 F4 F3 
1cd87     F6 FC FF FE 
1cd8b     F9 F7 F6 F3 
1cd8f     F4 F7 F8 F9 | 	byte	$f7, $f8, $f4, $f3, $f6, $fc, $ff, $fe, $f9, $f7, $f6, $f3, $f4, $f7, $f8, $f9
1cd93     FA FC F8 F4 
1cd97     F4 FA FD FC 
1cd9b     FF 03 02 FF 
1cd9f     FF 05 08 0B | 	byte	$fa, $fc, $f8, $f4, $f4, $fa, $fd, $fc, $ff, $03, $02, $ff, $ff, $05, $08, $0b
1cda3     0E 10 0E 0C 
1cda7     0B 0A 08 07 
1cdab     07 04 03 00 
1cdaf     00 FE FC F8 | 	byte	$0e, $10, $0e, $0c, $0b, $0a, $08, $07, $07, $04, $03, $00, $00, $fe, $fc, $f8
1cdb3     F6 F5 F3 F2 
1cdb7     F0 F1 F3 F5 
1cdbb     F7 F5 F3 F3 
1cdbf     F5 FA FE FD | 	byte	$f6, $f5, $f3, $f2, $f0, $f1, $f3, $f5, $f7, $f5, $f3, $f3, $f5, $fa, $fe, $fd
1cdc3     FA F8 F5 F2 
1cdc7     F2 F6 F8 F8 
1cdcb     F8 FC FA F4 
1cdcf     F2 F7 FC FC | 	byte	$fa, $f8, $f5, $f2, $f2, $f6, $f8, $f8, $f8, $fc, $fa, $f4, $f2, $f7, $fc, $fc
1cdd3     FE 01 02 FF 
1cdd7     01 05 07 09 
1cddb     0E 0F 0F 0C 
1cddf     0B 0A 07 06 | 	byte	$fe, $01, $02, $ff, $01, $05, $07, $09, $0e, $0f, $0f, $0c, $0b, $0a, $07, $06
1cde3     05 04 03 00 
1cde7     FE FC FC FA 
1cdeb     F7 F4 F2 F1 
1cdef     F1 F0 F2 F4 | 	byte	$05, $04, $03, $00, $fe, $fc, $fc, $fa, $f7, $f4, $f2, $f1, $f1, $f0, $f2, $f4
1cdf3     F6 F7 F5 F3 
1cdf7     F5 FB FF 00 
1cdfb     FA F8 F7 F4 
1cdff     F3 F5 F8 FB | 	byte	$f6, $f7, $f5, $f3, $f5, $fb, $ff, $00, $fa, $f8, $f7, $f4, $f3, $f5, $f8, $fb
1ce03     FB FB FA F7 
1ce07     F5 F9 FC FD 
1ce0b     FF 03 03 00 
1ce0f     01 06 09 0A | 	byte	$fb, $fb, $fa, $f7, $f5, $f9, $fc, $fd, $ff, $03, $03, $00, $01, $06, $09, $0a
1ce13     0C 10 10 0F 
1ce17     0D 0A 08 07 
1ce1b     07 06 04 02 
1ce1f     00 FE FC FA | 	byte	$0c, $10, $10, $0f, $0d, $0a, $08, $07, $07, $06, $04, $02, $00, $fe, $fc, $fa
1ce23     F9 F7 F4 F1 
1ce27     F0 F1 F2 F3 
1ce2b     F6 F7 F7 F5 
1ce2f     F6 F8 FE 00 | 	byte	$f9, $f7, $f4, $f1, $f0, $f1, $f2, $f3, $f6, $f7, $f7, $f5, $f6, $f8, $fe, $00
1ce33     FD F9 F8 F6 
1ce37     F4 F5 F8 FB 
1ce3b     FB FC FC F8 
1ce3f     F4 F7 FC FE | 	byte	$fd, $f9, $f8, $f6, $f4, $f5, $f8, $fb, $fb, $fc, $fc, $f8, $f4, $f7, $fc, $fe
1ce43     FE FF 03 02 
1ce47     01 03 07 09 
1ce4b     0B 0F 10 10 
1ce4f     0F 0C 09 07 | 	byte	$fe, $ff, $03, $02, $01, $03, $07, $09, $0b, $0f, $10, $10, $0f, $0c, $09, $07
1ce53     08 07 06 03 
1ce57     01 00 FE FC 
1ce5b     FA F8 F4 F2 
1ce5f     F1 F0 F1 F3 | 	byte	$08, $07, $06, $03, $01, $00, $fe, $fc, $fa, $f8, $f4, $f2, $f1, $f0, $f1, $f3
1ce63     F6 F7 F6 F4 
1ce67     F5 F8 FD 00 
1ce6b     00 FA F9 F7 
1ce6f     F4 F5 F9 FC | 	byte	$f6, $f7, $f6, $f4, $f5, $f8, $fd, $00, $00, $fa, $f9, $f7, $f4, $f5, $f9, $fc
1ce73     FC FC FD FC 
1ce77     F8 F7 FB FE 
1ce7b     FE FF 03 01 
1ce7f     01 04 07 08 | 	byte	$fc, $fc, $fd, $fc, $f8, $f7, $fb, $fe, $fe, $ff, $03, $01, $01, $04, $07, $08
1ce83     0B 0F 11 0F 
1ce87     0D 0C 09 07 
1ce8b     06 04 04 03 
1ce8f     01 FE FC FC | 	byte	$0b, $0f, $11, $0f, $0d, $0c, $09, $07, $06, $04, $04, $03, $01, $fe, $fc, $fc
1ce93     FA F8 F3 F0 
1ce97     F0 F1 F0 F1 
1ce9b     F4 F6 F6 F4 
1ce9f     F3 F7 FC 00 | 	byte	$fa, $f8, $f3, $f0, $f0, $f1, $f0, $f1, $f4, $f6, $f6, $f4, $f3, $f7, $fc, $00
1cea3     FD F8 F7 F7 
1cea7     F5 F3 F6 FA 
1ceab     FC FA FA FA 
1ceaf     F7 F7 F9 FB | 	byte	$fd, $f8, $f7, $f7, $f5, $f3, $f6, $fa, $fc, $fa, $fa, $fa, $f7, $f7, $f9, $fb
1ceb3     FC FE FF 00 
1ceb7     00 01 05 07 
1cebb     09 0C 0F 0E 
1cebf     0C 0A 07 05 | 	byte	$fc, $fe, $ff, $00, $00, $01, $05, $07, $09, $0c, $0f, $0e, $0c, $0a, $07, $05
1cec3     05 05 03 01 
1cec7     00 FF FE FC 
1cecb     F9 F8 F6 F2 
1cecf     F0 F0 F1 F2 | 	byte	$05, $05, $03, $01, $00, $ff, $fe, $fc, $f9, $f8, $f6, $f2, $f0, $f0, $f1, $f2
1ced3     F4 F6 F7 F6 
1ced7     F3 F6 FB 00 
1cedb     00 FA F7 F7 
1cedf     F5 F4 F6 F9 | 	byte	$f4, $f6, $f7, $f6, $f3, $f6, $fb, $00, $00, $fa, $f7, $f7, $f5, $f4, $f6, $f9
1cee3     FA FA FB FC 
1cee7     F9 F7 F9 FC 
1ceeb     FE FD 00 01 
1ceef     01 01 03 06 | 	byte	$fa, $fa, $fb, $fc, $f9, $f7, $f9, $fc, $fe, $fd, $00, $01, $01, $01, $03, $06
1cef3     0A 0D 0F 0E 
1cef7     0D 0C 08 05 
1cefb     04 04 04 03 
1ceff     01 FF FE FC | 	byte	$0a, $0d, $0f, $0e, $0d, $0c, $08, $05, $04, $04, $04, $03, $01, $ff, $fe, $fc
1cf03     FA F9 F6 F3 
1cf07     F1 F1 F1 F2 
1cf0b     F5 F8 F8 F5 
1cf0f     F4 F7 FC FF | 	byte	$fa, $f9, $f6, $f3, $f1, $f1, $f1, $f2, $f5, $f8, $f8, $f5, $f4, $f7, $fc, $ff
1cf13     FE FA F8 F7 
1cf17     F6 F3 F5 F9 
1cf1b     FA F8 F9 FC 
1cf1f     FA F8 F8 FA | 	byte	$fe, $fa, $f8, $f7, $f6, $f3, $f5, $f9, $fa, $f8, $f9, $fc, $fa, $f8, $f8, $fa
1cf23     FC FE FF 00 
1cf27     00 01 04 07 
1cf2b     09 0C 0F 0F 
1cf2f     0D 0C 08 05 | 	byte	$fc, $fe, $ff, $00, $00, $01, $04, $07, $09, $0c, $0f, $0f, $0d, $0c, $08, $05
1cf33     04 03 02 02 
1cf37     03 00 FC FB 
1cf3b     FA FA F7 F3 
1cf3f     F0 F0 F1 F2 | 	byte	$04, $03, $02, $02, $03, $00, $fc, $fb, $fa, $fa, $f7, $f3, $f0, $f0, $f1, $f2
1cf43     F4 F7 F8 F6 
1cf47     F4 F7 FB FF 
1cf4b     00 FB F6 F6 
1cf4f     F7 F3 F3 F6 | 	byte	$f4, $f7, $f8, $f6, $f4, $f7, $fb, $ff, $00, $fb, $f6, $f6, $f7, $f3, $f3, $f6
1cf53     F8 F8 F8 F9 
1cf57     F9 F8 F7 F8 
1cf5b     FA FD FD FF 
1cf5f     00 00 02 06 | 	byte	$f8, $f8, $f8, $f9, $f9, $f8, $f7, $f8, $fa, $fd, $fd, $ff, $00, $00, $02, $06
1cf63     09 0C 0D 0D 
1cf67     0E 0C 08 03 
1cf6b     03 03 02 02 
1cf6f     01 00 FC FA | 	byte	$09, $0c, $0d, $0d, $0e, $0c, $08, $03, $03, $03, $02, $02, $01, $00, $fc, $fa
1cf73     F8 F8 F8 F4 
1cf77     F0 F0 F0 F3 
1cf7b     F7 F8 F8 F8 
1cf7f     F7 F8 FE 00 | 	byte	$f8, $f8, $f8, $f4, $f0, $f0, $f0, $f3, $f7, $f8, $f8, $f8, $f7, $f8, $fe, $00
1cf83     01 FD F8 F8 
1cf87     F7 F6 F5 F7 
1cf8b     FA F8 FA FC 
1cf8f     FC F8 F6 F8 | 	byte	$01, $fd, $f8, $f8, $f7, $f6, $f5, $f7, $fa, $f8, $fa, $fc, $fc, $f8, $f6, $f8
1cf93     FD FE FE FF 
1cf97     01 02 03 07 
1cf9b     0B 0E 0F 0E 
1cf9f     0E 0E 0A 06 | 	byte	$fd, $fe, $fe, $ff, $01, $02, $03, $07, $0b, $0e, $0f, $0e, $0e, $0e, $0a, $06
1cfa3     04 03 03 03 
1cfa7     03 01 FC FA 
1cfab     FA FA F8 F3 
1cfaf     F0 F0 F0 F2 | 	byte	$04, $03, $03, $03, $03, $01, $fc, $fa, $fa, $fa, $f8, $f3, $f0, $f0, $f0, $f2
1cfb3     F4 F8 F9 F7 
1cfb7     F5 F8 FE 01 
1cfbb     01 FB F8 F8 
1cfbf     F9 F6 F4 F8 | 	byte	$f4, $f8, $f9, $f7, $f5, $f8, $fe, $01, $01, $fb, $f8, $f8, $f9, $f6, $f4, $f8
1cfc3     FA F9 F9 FC 
1cfc7     FC F8 F7 F8 
1cfcb     FD FE FE FF 
1cfcf     01 01 04 08 | 	byte	$fa, $f9, $f9, $fc, $fc, $f8, $f7, $f8, $fd, $fe, $fe, $ff, $01, $01, $04, $08
1cfd3     0C 0E 0E 0F 
1cfd7     10 0E 08 05 
1cfdb     05 03 03 04 
1cfdf     04 01 FC FA | 	byte	$0c, $0e, $0e, $0f, $10, $0e, $08, $05, $05, $03, $03, $04, $04, $01, $fc, $fa
1cfe3     FA FA F8 F3 
1cfe7     F0 EF F0 F2 
1cfeb     F6 F7 F8 F7 
1cfef     F7 FB FE 02 | 	byte	$fa, $fa, $f8, $f3, $f0, $ef, $f0, $f2, $f6, $f7, $f8, $f7, $f7, $fb, $fe, $02
1cff3     02 FC F8 F8 
1cff7     F9 F7 F6 F9 
1cffb     FA FA FB FD 
1cfff     FD F8 F7 FA | 	byte	$02, $fc, $f8, $f8, $f9, $f7, $f6, $f9, $fa, $fa, $fb, $fd, $fd, $f8, $f7, $fa
1d003     FE FE FD 00 
1d007     01 02 03 08 
1d00b     0D 0E 0E 0E 
1d00f     0F 0F 09 05 | 	byte	$fe, $fe, $fd, $00, $01, $02, $03, $08, $0d, $0e, $0e, $0e, $0f, $0f, $09, $05
1d013     03 03 03 05 
1d017     04 00 FC F9 
1d01b     FA F9 F7 F2 
1d01f     EF EE EE F0 | 	byte	$03, $03, $03, $05, $04, $00, $fc, $f9, $fa, $f9, $f7, $f2, $ef, $ee, $ee, $f0
1d023     F5 F7 F7 F6 
1d027     F6 F8 FD 01 
1d02b     00 FA F7 F8 
1d02f     F9 F6 F4 F8 | 	byte	$f5, $f7, $f7, $f6, $f6, $f8, $fd, $01, $00, $fa, $f7, $f8, $f9, $f6, $f4, $f8
1d033     FA F9 F8 FC 
1d037     FE FA F5 F6 
1d03b     FC FF FD FD 
1d03f     FF 00 03 07 | 	byte	$fa, $f9, $f8, $fc, $fe, $fa, $f5, $f6, $fc, $ff, $fd, $fd, $ff, $00, $03, $07
1d043     0B 0D 0D 0D 
1d047     0F 0F 0A 05 
1d04b     03 03 01 03 
1d04f     06 03 FE F8 | 	byte	$0b, $0d, $0d, $0d, $0f, $0f, $0a, $05, $03, $03, $01, $03, $06, $03, $fe, $f8
1d053     F9 FA F9 F4 
1d057     F0 EC ED EF 
1d05b     F1 F5 F7 F6 
1d05f     F5 F6 FA FF | 	byte	$f9, $fa, $f9, $f4, $f0, $ec, $ed, $ef, $f1, $f5, $f7, $f6, $f5, $f6, $fa, $ff
1d063     01 FC F7 F6 
1d067     F8 F8 F4 F4 
1d06b     F8 F9 F9 FA 
1d06f     FD FD F8 F6 | 	byte	$01, $fc, $f7, $f6, $f8, $f8, $f4, $f4, $f8, $f9, $f9, $fa, $fd, $fd, $f8, $f6
1d073     FA FE FE FC 
1d077     FE 00 00 03 
1d07b     09 0C 0B 0B 
1d07f     0E 0F 0C 06 | 	byte	$fa, $fe, $fe, $fc, $fe, $00, $00, $03, $09, $0c, $0b, $0b, $0e, $0f, $0c, $06
1d083     03 02 02 03 
1d087     05 05 01 FB 
1d08b     F8 FA FC F9 
1d08f     F3 EE ED EF | 	byte	$03, $02, $02, $03, $05, $05, $01, $fb, $f8, $fa, $fc, $f9, $f3, $ee, $ed, $ef
1d093     F1 F5 F7 F7 
1d097     F7 F7 FA FF 
1d09b     01 00 FC F8 
1d09f     F8 F9 F8 F6 | 	byte	$f1, $f5, $f7, $f7, $f7, $f7, $fa, $ff, $01, $00, $fc, $f8, $f8, $f9, $f8, $f6
1d0a3     F7 F9 FA FB 
1d0a7     FE FF FB F8 
1d0ab     F8 FE 00 FC 
1d0af     FD FF 01 01 | 	byte	$f7, $f9, $fa, $fb, $fe, $ff, $fb, $f8, $f8, $fe, $00, $fc, $fd, $ff, $01, $01
1d0b3     06 0B 0C 0B 
1d0b7     0A 0E 0F 0A 
1d0bb     04 01 01 02 
1d0bf     03 06 03 00 | 	byte	$06, $0b, $0c, $0b, $0a, $0e, $0f, $0a, $04, $01, $01, $02, $03, $06, $03, $00
1d0c3     FA FA FC FC 
1d0c7     F7 F0 EE EC 
1d0cb     EE F3 F7 F6 
1d0cf     F5 F5 F8 FB | 	byte	$fa, $fa, $fc, $fc, $f7, $f0, $ee, $ec, $ee, $f3, $f7, $f6, $f5, $f5, $f8, $fb
1d0d3     FF 00 FD F8 
1d0d7     F6 F8 F8 F4 
1d0db     F4 F7 F8 F8 
1d0df     FA FE FD F7 | 	byte	$ff, $00, $fd, $f8, $f6, $f8, $f8, $f4, $f4, $f7, $f8, $f8, $fa, $fe, $fd, $f7
1d0e3     F4 F9 FF FD 
1d0e7     FA FC 00 FF 
1d0eb     03 07 0B 0A 
1d0ef     09 0B 0E 0B | 	byte	$f4, $f9, $ff, $fd, $fa, $fc, $00, $ff, $03, $07, $0b, $0a, $09, $0b, $0e, $0b
1d0f3     05 01 00 00 
1d0f7     01 05 04 00 
1d0fb     F9 F8 FC FC 
1d0ff     F8 F2 EE EE | 	byte	$05, $01, $00, $00, $01, $05, $04, $00, $f9, $f8, $fc, $fc, $f8, $f2, $ee, $ee
1d103     EF F1 F5 F7 
1d107     F7 F6 F7 FA 
1d10b     00 01 FF F8 
1d10f     F6 F9 F9 F6 | 	byte	$ef, $f1, $f5, $f7, $f7, $f6, $f7, $fa, $00, $01, $ff, $f8, $f6, $f9, $f9, $f6
1d113     F3 F6 FA FA 
1d117     FB FD 00 FC 
1d11b     F7 F9 FF 00 
1d11f     FD FE FF 02 | 	byte	$f3, $f6, $fa, $fa, $fb, $fd, $00, $fc, $f7, $f9, $ff, $00, $fd, $fe, $ff, $02
1d123     03 07 0C 0C 
1d127     09 0C 0F 0E 
1d12b     07 01 01 01 
1d12f     02 03 04 02 | 	byte	$03, $07, $0c, $0c, $09, $0c, $0f, $0e, $07, $01, $01, $01, $02, $03, $04, $02
1d133     FC FA FB FD 
1d137     FC F6 F0 EE 
1d13b     EF F1 F5 F7 
1d13f     F8 F8 F8 FA | 	byte	$fc, $fa, $fb, $fd, $fc, $f6, $f0, $ee, $ef, $f1, $f5, $f7, $f8, $f8, $f8, $fa
1d143     FE 00 00 FD 
1d147     F8 F7 FA F8 
1d14b     F5 F6 F8 FA 
1d14f     FB FD 00 FC | 	byte	$fe, $00, $00, $fd, $f8, $f7, $fa, $f8, $f5, $f6, $f8, $fa, $fb, $fd, $00, $fc
1d153     F8 F9 FF FF 
1d157     FC FD 00 03 
1d15b     02 06 0C 0E 
1d15f     0A 0C 0F 0F | 	byte	$f8, $f9, $ff, $ff, $fc, $fd, $00, $03, $02, $06, $0c, $0e, $0a, $0c, $0f, $0f
1d163     09 03 01 01 
1d167     03 04 05 02 
1d16b     FD FB FC FE 
1d16f     FB F6 F1 EE | 	byte	$09, $03, $01, $01, $03, $04, $05, $02, $fd, $fb, $fc, $fe, $fb, $f6, $f1, $ee
1d173     EF F1 F6 F8 
1d177     F8 F7 F8 FA 
1d17b     FE FF 00 FC 
1d17f     F9 F8 F9 F8 | 	byte	$ef, $f1, $f6, $f8, $f8, $f7, $f8, $fa, $fe, $ff, $00, $fc, $f9, $f8, $f9, $f8
1d183     F4 F6 F9 F9 
1d187     F9 FC 00 FE 
1d18b     F8 F8 FE 00 
1d18f     FC FC 00 03 | 	byte	$f4, $f6, $f9, $f9, $f9, $fc, $00, $fe, $f8, $f8, $fe, $00, $fc, $fc, $00, $03
1d193     03 07 0B 0C 
1d197     0C 0D 0F 0E 
1d19b     08 03 00 FF 
1d19f     01 03 04 02 | 	byte	$03, $07, $0b, $0c, $0c, $0d, $0f, $0e, $08, $03, $00, $ff, $01, $03, $04, $02
1d1a3     FD F9 FB FD 
1d1a7     FC F6 F0 ED 
1d1ab     EE EF F3 F6 
1d1af     F6 F7 F7 F8 | 	byte	$fd, $f9, $fb, $fd, $fc, $f6, $f0, $ed, $ee, $ef, $f3, $f6, $f6, $f7, $f7, $f8
1d1b3     FC FE FF FE 
1d1b7     F9 F7 F9 F8 
1d1bb     F5 F3 F8 FA 
1d1bf     FA FB FF 00 | 	byte	$fc, $fe, $ff, $fe, $f9, $f7, $f9, $f8, $f5, $f3, $f8, $fa, $fa, $fb, $ff, $00
1d1c3     FC F9 FD 00 
1d1c7     FC FD FF 02 
1d1cb     03 06 0C 0D 
1d1cf     0C 0B 0F 0F | 	byte	$fc, $f9, $fd, $00, $fc, $fd, $ff, $02, $03, $06, $0c, $0d, $0c, $0b, $0f, $0f
1d1d3     09 03 00 00 
1d1d7     01 02 03 02 
1d1db     FE FB FA FC 
1d1df     FC F8 F1 ED | 	byte	$09, $03, $00, $00, $01, $02, $03, $02, $fe, $fb, $fa, $fc, $fc, $f8, $f1, $ed
1d1e3     EC F0 F3 F6 
1d1e7     F7 F6 F8 FA 
1d1eb     FC FE FF 00 
1d1ef     FB F8 F8 F8 | 	byte	$ec, $f0, $f3, $f6, $f7, $f6, $f8, $fa, $fc, $fe, $ff, $00, $fb, $f8, $f8, $f8
1d1f3     F6 F5 F7 F8 
1d1f7     F9 FB FF 00 
1d1fb     FA F8 FC 00 
1d1ff     FC FA FF 03 | 	byte	$f6, $f5, $f7, $f8, $f9, $fb, $ff, $00, $fa, $f8, $fc, $00, $fc, $fa, $ff, $03
1d203     02 03 09 0D 
1d207     0C 0B 0C 0E 
1d20b     0A 05 01 00 
1d20f     00 02 03 02 | 	byte	$02, $03, $09, $0d, $0c, $0b, $0c, $0e, $0a, $05, $01, $00, $00, $02, $03, $02
1d213     FE FA FA FC 
1d217     FC F8 F2 EE 
1d21b     ED EE F1 F4 
1d21f     F7 F7 F7 F8 | 	byte	$fe, $fa, $fa, $fc, $fc, $f8, $f2, $ee, $ed, $ee, $f1, $f4, $f7, $f7, $f7, $f8
1d223     FC FE FF FE 
1d227     FC F8 F8 F8 
1d22b     F6 F4 F7 FA 
1d22f     F9 FA FE 02 | 	byte	$fc, $fe, $ff, $fe, $fc, $f8, $f8, $f8, $f6, $f4, $f7, $fa, $f9, $fa, $fe, $02
1d233     FE F9 FB 00 
1d237     FE FC FF 02 
1d23b     03 05 0A 0D 
1d23f     0C 0B 0E 0F | 	byte	$fe, $f9, $fb, $00, $fe, $fc, $ff, $02, $03, $05, $0a, $0d, $0c, $0b, $0e, $0f
1d243     0B 06 02 00 
1d247     00 01 02 03 
1d24b     FF FC FA FC 
1d24f     FC F9 F3 EE | 	byte	$0b, $06, $02, $00, $00, $01, $02, $03, $ff, $fc, $fa, $fc, $fc, $f9, $f3, $ee
1d253     EC EE EF F2 
1d257     F4 F5 F7 F8 
1d25b     F9 FC FE FE 
1d25f     FC F8 F7 F8 | 	byte	$ec, $ee, $ef, $f2, $f4, $f5, $f7, $f8, $f9, $fc, $fe, $fe, $fc, $f8, $f7, $f8
1d263     F7 F4 F4 F8 
1d267     F9 F9 FC 00 
1d26b     00 F9 FA FD 
1d26f     FC FA FC 01 | 	byte	$f7, $f4, $f4, $f8, $f9, $f9, $fc, $00, $00, $f9, $fa, $fd, $fc, $fa, $fc, $01
1d273     02 02 07 0C 
1d277     0C 09 0B 0E 
1d27b     0C 08 02 00 
1d27f     00 01 01 01 | 	byte	$02, $02, $07, $0c, $0c, $09, $0b, $0e, $0c, $08, $02, $00, $00, $01, $01, $01
1d283     00 FE FB FB 
1d287     FC FA F6 F0 
1d28b     EE ED F0 F3 
1d28f     F4 F5 F7 F8 | 	byte	$00, $fe, $fb, $fb, $fc, $fa, $f6, $f0, $ee, $ed, $f0, $f3, $f4, $f5, $f7, $f8
1d293     FB FC FE FE 
1d297     FE FC F9 F8 
1d29b     F8 F7 F7 F9 
1d29f     FA FA FD 02 | 	byte	$fb, $fc, $fe, $fe, $fe, $fc, $f9, $f8, $f8, $f7, $f7, $f9, $fa, $fa, $fd, $02
1d2a3     02 FC FB FE 
1d2a7     FF FC FC 01 
1d2ab     04 04 07 0C 
1d2af     0C 0B 0C 0E | 	byte	$02, $fc, $fb, $fe, $ff, $fc, $fc, $01, $04, $04, $07, $0c, $0c, $0b, $0c, $0e
1d2b3     0D 09 05 02 
1d2b7     00 01 02 03 
1d2bb     01 FE FC FD 
1d2bf     FD FB F6 F0 | 	byte	$0d, $09, $05, $02, $00, $01, $02, $03, $01, $fe, $fc, $fd, $fd, $fb, $f6, $f0
1d2c3     EF EE EE F1 
1d2c7     F3 F7 F7 F8 
1d2cb     F9 FC FD FE 
1d2cf     FE FB F8 F8 | 	byte	$ef, $ee, $ee, $f1, $f3, $f7, $f7, $f8, $f9, $fc, $fd, $fe, $fe, $fb, $f8, $f8
1d2d3     F7 F6 F6 F8 
1d2d7     FA F9 FB 00 
1d2db     03 FE FA FC 
1d2df     FE FC FC FF | 	byte	$f7, $f6, $f6, $f8, $fa, $f9, $fb, $00, $03, $fe, $fa, $fc, $fe, $fc, $fc, $ff
1d2e3     03 03 06 0B 
1d2e7     0C 0A 0C 0E 
1d2eb     0C 08 04 03 
1d2ef     00 FF 00 01 | 	byte	$03, $03, $06, $0b, $0c, $0a, $0c, $0e, $0c, $08, $04, $03, $00, $ff, $00, $01
1d2f3     02 FF FE FC 
1d2f7     FE FC F8 F3 
1d2fb     EE EE EF F1 
1d2ff     F4 F6 F8 FB | 	byte	$02, $ff, $fe, $fc, $fe, $fc, $f8, $f3, $ee, $ee, $ef, $f1, $f4, $f6, $f8, $fb
1d303     FB FB FC FF 
1d307     FF FC F8 F8 
1d30b     F8 F8 F6 F7 
1d30f     FA FB FB 01 | 	byte	$fb, $fb, $fc, $ff, $ff, $fc, $f8, $f8, $f8, $f8, $f6, $f7, $fa, $fb, $fb, $01
1d313     03 00 FC FD 
1d317     FE FB FC 00 
1d31b     03 03 05 0A 
1d31f     0D 0C 0B 0C | 	byte	$03, $00, $fc, $fd, $fe, $fb, $fc, $00, $03, $03, $05, $0a, $0d, $0c, $0b, $0c
1d323     0C 0A 06 01 
1d327     00 00 01 01 
1d32b     00 00 FE FD 
1d32f     FE FA F8 F4 | 	byte	$0c, $0a, $06, $01, $00, $00, $01, $01, $00, $00, $fe, $fd, $fe, $fa, $f8, $f4
1d333     EF ED EE F1 
1d337     F3 F6 F7 F8 
1d33b     FA FB FC FD 
1d33f     FE FC F8 F7 | 	byte	$ef, $ed, $ee, $f1, $f3, $f6, $f7, $f8, $fa, $fb, $fc, $fd, $fe, $fc, $f8, $f7
1d343     F7 F6 F6 F7 
1d347     F9 F9 FB FF 
1d34b     03 00 FB FC 
1d34f     FE FC FA FE | 	byte	$f7, $f6, $f6, $f7, $f9, $f9, $fb, $ff, $03, $00, $fb, $fc, $fe, $fc, $fa, $fe
1d353     03 03 05 09 
1d357     0B 0B 0B 0C 
1d35b     0C 09 06 02 
1d35f     00 FE 00 00 | 	byte	$03, $03, $05, $09, $0b, $0b, $0b, $0c, $0c, $09, $06, $02, $00, $fe, $00, $00
1d363     01 FF FD FE 
1d367     FD FC F8 F2 
1d36b     EE ED EE F0 
1d36f     F2 F5 F8 F9 | 	byte	$01, $ff, $fd, $fe, $fd, $fc, $f8, $f2, $ee, $ed, $ee, $f0, $f2, $f5, $f8, $f9
1d373     FA FC FC FE 
1d377     FF FC F8 F7 
1d37b     F7 F7 F4 F6 
1d37f     F9 F9 FB FF | 	byte	$fa, $fc, $fc, $fe, $ff, $fc, $f8, $f7, $f7, $f7, $f4, $f6, $f9, $f9, $fb, $ff
1d383     03 00 FC FC 
1d387     FC FA FB FE 
1d38b     01 01 05 09 
1d38f     0A 08 09 0C | 	byte	$03, $00, $fc, $fc, $fc, $fa, $fb, $fe, $01, $01, $05, $09, $0a, $08, $09, $0c
1d393     0B 08 04 00 
1d397     00 FF FF 00 
1d39b     00 FF FE FD 
1d39f     FC FB F8 F3 | 	byte	$0b, $08, $04, $00, $00, $ff, $ff, $00, $00, $ff, $fe, $fd, $fc, $fb, $f8, $f3
1d3a3     EE EC EE F1 
1d3a7     F3 F3 F6 F9 
1d3ab     FC FC FC FE 
1d3af     00 FE F9 F7 | 	byte	$ee, $ec, $ee, $f1, $f3, $f3, $f6, $f9, $fc, $fc, $fc, $fe, $00, $fe, $f9, $f7
1d3b3     F8 F8 F6 F7 
1d3b7     F8 FA FC 01 
1d3bb     03 00 FC FD 
1d3bf     FC FB FA FE | 	byte	$f8, $f8, $f6, $f7, $f8, $fa, $fc, $01, $03, $00, $fc, $fd, $fc, $fb, $fa, $fe
1d3c3     02 04 05 08 
1d3c7     0A 0A 0B 0C 
1d3cb     0B 0A 06 01 
1d3cf     00 FF 00 01 | 	byte	$02, $04, $05, $08, $0a, $0a, $0b, $0c, $0b, $0a, $06, $01, $00, $ff, $00, $01
1d3d3     01 FF FE FE 
1d3d7     FE FB F7 F2 
1d3db     EE ED EE F0 
1d3df     F1 F3 F6 F8 | 	byte	$01, $ff, $fe, $fe, $fe, $fb, $f7, $f2, $ee, $ed, $ee, $f0, $f1, $f3, $f6, $f8
1d3e3     FA FC FC FC 
1d3e7     FD FC F8 F6 
1d3eb     F6 F5 F3 F5 
1d3ef     F8 F9 FB FF | 	byte	$fa, $fc, $fc, $fc, $fd, $fc, $f8, $f6, $f6, $f5, $f3, $f5, $f8, $f9, $fb, $ff
1d3f3     03 00 FB FB 
1d3f7     FB F9 F9 FD 
1d3fb     00 03 06 08 
1d3ff     09 08 0A 0C | 	byte	$03, $00, $fb, $fb, $fb, $f9, $f9, $fd, $00, $03, $06, $08, $09, $08, $0a, $0c
1d403     0C 08 04 00 
1d407     00 FF FF 00 
1d40b     00 00 FE FD 
1d40f     FE FC F7 F1 | 	byte	$0c, $08, $04, $00, $00, $ff, $ff, $00, $00, $00, $fe, $fd, $fe, $fc, $f7, $f1
1d413     EE ED EF F1 
1d417     F1 F3 F7 FB 
1d41b     FC FC FC FD 
1d41f     FF FE F8 F7 | 	byte	$ee, $ed, $ef, $f1, $f1, $f3, $f7, $fb, $fc, $fc, $fc, $fd, $ff, $fe, $f8, $f7
1d423     F8 F8 F5 F5 
1d427     F8 FB FE 01 
1d42b     03 00 FE FD 
1d42f     FC FB FB FF | 	byte	$f8, $f8, $f5, $f5, $f8, $fb, $fe, $01, $03, $00, $fe, $fd, $fc, $fb, $fb, $ff
1d433     03 04 07 09 
1d437     0B 09 0B 0D 
1d43b     0C 0B 06 01 
1d43f     FE 00 01 00 | 	byte	$03, $04, $07, $09, $0b, $09, $0b, $0d, $0c, $0b, $06, $01, $fe, $00, $01, $00
1d443     00 FE 00 00 
1d447     FE FC F8 F3 
1d44b     EF EE EF F1 
1d44f     F2 F3 F5 F9 | 	byte	$00, $fe, $00, $00, $fe, $fc, $f8, $f3, $ef, $ee, $ef, $f1, $f2, $f3, $f5, $f9
1d453     FC FD FC FB 
1d457     FC FE FB F7 
1d45b     F7 F7 F5 F5 
1d45f     F8 FA FC 00 | 	byte	$fc, $fd, $fc, $fb, $fc, $fe, $fb, $f7, $f7, $f7, $f5, $f5, $f8, $fa, $fc, $00
1d463     03 02 FE FC 
1d467     FC FC FB FD 
1d46b     02 05 07 07 
1d46f     08 0A 0C 0E | 	byte	$03, $02, $fe, $fc, $fc, $fc, $fb, $fd, $02, $05, $07, $07, $08, $0a, $0c, $0e
1d473     0E 0C 09 04 
1d477     00 00 02 02 
1d47b     01 00 FF 00 
1d47f     00 FE FA F4 | 	byte	$0e, $0c, $09, $04, $00, $00, $02, $02, $01, $00, $ff, $00, $00, $fe, $fa, $f4
1d483     F0 EF EF F0 
1d487     F1 F2 F4 F9 
1d48b     FC FC FC FC 
1d48f     FE FF FC F9 | 	byte	$f0, $ef, $ef, $f0, $f1, $f2, $f4, $f9, $fc, $fc, $fc, $fc, $fe, $ff, $fc, $f9
1d493     F8 F8 F6 F4 
1d497     F7 FB FC FE 
1d49b     01 05 03 00 
1d49f     FC FC FC FD | 	byte	$f8, $f8, $f6, $f4, $f7, $fb, $fc, $fe, $01, $05, $03, $00, $fc, $fc, $fc, $fd
1d4a3     01 05 07 09 
1d4a7     08 0A 0B 0E 
1d4ab     0E 0E 0A 05 
1d4af     02 01 02 01 | 	byte	$01, $05, $07, $09, $08, $0a, $0b, $0e, $0e, $0e, $0a, $05, $02, $01, $02, $01
1d4b3     00 00 00 FF 
1d4b7     FF FD FB F6 
1d4bb     F1 ED EE F0 
1d4bf     F0 F0 F1 F6 | 	byte	$00, $00, $00, $ff, $ff, $fd, $fb, $f6, $f1, $ed, $ee, $f0, $f0, $f0, $f1, $f6
1d4c3     FB FD FB FA 
1d4c7     FB FE FD F9 
1d4cb     F7 F7 F6 F4 
1d4cf     F3 F7 FB FD | 	byte	$fb, $fd, $fb, $fa, $fb, $fe, $fd, $f9, $f7, $f7, $f6, $f4, $f3, $f7, $fb, $fd
1d4d3     FF 01 02 FF 
1d4d7     FC FB FA FB 
1d4db     FE 03 06 06 
1d4df     07 08 0A 0B | 	byte	$ff, $01, $02, $ff, $fc, $fb, $fa, $fb, $fe, $03, $06, $06, $07, $08, $0a, $0b
1d4e3     0C 0C 0A 06 
1d4e7     01 00 01 01 
1d4eb     00 FF FF FF 
1d4ef     FF FE FB F7 | 	byte	$0c, $0c, $0a, $06, $01, $00, $01, $01, $00, $ff, $ff, $ff, $ff, $fe, $fb, $f7
1d4f3     F2 EF EE EE 
1d4f7     F0 F0 F1 F5 
1d4fb     F8 FC FC FB 
1d4ff     F9 FB FE FC | 	byte	$f2, $ef, $ee, $ee, $f0, $f0, $f1, $f5, $f8, $fc, $fc, $fb, $f9, $fb, $fe, $fc
1d503     F8 F6 F6 F6 
1d507     F4 F7 F9 FD 
1d50b     FF 01 03 00 
1d50f     FC FB FB FC | 	byte	$f8, $f6, $f6, $f6, $f4, $f7, $f9, $fd, $ff, $01, $03, $00, $fc, $fb, $fb, $fc
1d513     FD 01 06 08 
1d517     07 07 0A 0D 
1d51b     0E 0C 0B 08 
1d51f     04 01 01 01 | 	byte	$fd, $01, $06, $08, $07, $07, $0a, $0d, $0e, $0c, $0b, $08, $04, $01, $01, $01
1d523     00 00 FF FF 
1d527     00 00 FC F8 
1d52b     F3 F0 EE EF 
1d52f     EF F0 F0 F4 | 	byte	$00, $00, $ff, $ff, $00, $00, $fc, $f8, $f3, $f0, $ee, $ef, $ef, $f0, $f0, $f4
1d533     F9 FC FB FA 
1d537     FA FC FD FC 
1d53b     F8 F7 F7 F4 
1d53f     F3 F6 FA FC | 	byte	$f9, $fc, $fb, $fa, $fa, $fc, $fd, $fc, $f8, $f7, $f7, $f4, $f3, $f6, $fa, $fc
1d543     FE 00 04 02 
1d547     FD FA FC FD 
1d54b     FE FF 05 07 
1d54f     07 07 09 0C | 	byte	$fe, $00, $04, $02, $fd, $fa, $fc, $fd, $fe, $ff, $05, $07, $07, $07, $09, $0c
1d553     0C 0C 0B 08 
1d557     04 01 01 01 
1d55b     00 FE 00 01 
1d55f     00 FE FC FA | 	byte	$0c, $0c, $0b, $08, $04, $01, $01, $01, $00, $fe, $00, $01, $00, $fe, $fc, $fa
1d563     F6 F0 EE F0 
1d567     F0 EF EF F2 
1d56b     F7 FC FA F8 
1d56f     F8 FA FC FB | 	byte	$f6, $f0, $ee, $f0, $f0, $ef, $ef, $f2, $f7, $fc, $fa, $f8, $f8, $fa, $fc, $fb
1d573     F7 F4 F5 F4 
1d577     F3 F3 F7 FB 
1d57b     FD FF 02 01 
1d57f     FD F9 F9 FA | 	byte	$f7, $f4, $f5, $f4, $f3, $f3, $f7, $fb, $fd, $ff, $02, $01, $fd, $f9, $f9, $fa
1d583     FC FF 03 05 
1d587     04 06 09 0B 
1d58b     0A 09 09 09 
1d58f     04 00 00 01 | 	byte	$fc, $ff, $03, $05, $04, $06, $09, $0b, $0a, $09, $09, $09, $04, $00, $00, $01
1d593     00 FE FF 00 
1d597     00 FE FC F8 
1d59b     F5 F1 EF EE 
1d59f     EE EF F0 F3 | 	byte	$00, $fe, $ff, $00, $00, $fe, $fc, $f8, $f5, $f1, $ef, $ee, $ee, $ef, $f0, $f3
1d5a3     F7 FA FC FA 
1d5a7     F9 FA FC FD 
1d5ab     FA F6 F5 F6 
1d5af     F4 F3 F7 FB | 	byte	$f7, $fa, $fc, $fa, $f9, $fa, $fc, $fd, $fa, $f6, $f5, $f6, $f4, $f3, $f7, $fb
1d5b3     FE 00 03 03 
1d5b7     00 FA FA FC 
1d5bb     FE FF 03 08 
1d5bf     08 07 09 0C | 	byte	$fe, $00, $03, $03, $00, $fa, $fa, $fc, $fe, $ff, $03, $08, $08, $07, $09, $0c
1d5c3     0E 0C 0B 0A 
1d5c7     08 04 03 02 
1d5cb     00 00 00 01 
1d5cf     01 00 FE FB | 	byte	$0e, $0c, $0b, $0a, $08, $04, $03, $02, $00, $00, $00, $01, $01, $00, $fe, $fb
1d5d3     F7 F2 F0 EF 
1d5d7     EF EF EF F2 
1d5db     F7 FB FB F9 
1d5df     F8 FA FC FD | 	byte	$f7, $f2, $f0, $ef, $ef, $ef, $ef, $f2, $f7, $fb, $fb, $f9, $f8, $fa, $fc, $fd
1d5e3     F9 F6 F6 F6 
1d5e7     F3 F2 F6 FB 
1d5eb     FE FE 01 05 
1d5ef     01 FA F8 FC | 	byte	$f9, $f6, $f6, $f6, $f3, $f2, $f6, $fb, $fe, $fe, $01, $05, $01, $fa, $f8, $fc
1d5f3     FF FF 03 07 
1d5f7     09 07 09 0D 
1d5fb     0E 0D 0C 0C 
1d5ff     09 04 02 03 | 	byte	$ff, $ff, $03, $07, $09, $07, $09, $0d, $0e, $0d, $0c, $0c, $09, $04, $02, $03
1d603     02 00 FF 02 
1d607     03 00 FE FC 
1d60b     F9 F5 F0 EE 
1d60f     EE F0 EF F2 | 	byte	$02, $00, $ff, $02, $03, $00, $fe, $fc, $f9, $f5, $f0, $ee, $ee, $f0, $ef, $f2
1d613     F6 FB FD FB 
1d617     F9 F9 FC FE 
1d61b     FB F6 F5 F6 
1d61f     F5 F2 F4 FA | 	byte	$f6, $fb, $fd, $fb, $f9, $f9, $fc, $fe, $fb, $f6, $f5, $f6, $f5, $f2, $f4, $fa
1d623     FE FF 01 04 
1d627     00 FC F9 FC 
1d62b     FE FE 01 07 
1d62f     09 07 09 0D | 	byte	$fe, $ff, $01, $04, $00, $fc, $f9, $fc, $fe, $fe, $01, $07, $09, $07, $09, $0d
1d633     0F 0C 0B 0C 
1d637     0C 06 02 02 
1d63b     02 00 FF 00 
1d63f     01 00 FD FB | 	byte	$0f, $0c, $0b, $0c, $0c, $06, $02, $02, $02, $00, $ff, $00, $01, $00, $fd, $fb
1d643     F8 F4 F0 ED 
1d647     ED ED EE F1 
1d64b     F4 F9 FA FA 
1d64f     F9 F9 FB FC | 	byte	$f8, $f4, $f0, $ed, $ed, $ed, $ee, $f1, $f4, $f9, $fa, $fa, $f9, $f9, $fb, $fc
1d653     FB F8 F5 F5 
1d657     F4 F2 F3 F8 
1d65b     FC 00 00 03 
1d65f     02 FB F8 FB | 	byte	$fb, $f8, $f5, $f5, $f4, $f2, $f3, $f8, $fc, $00, $00, $03, $02, $fb, $f8, $fb
1d663     FE FD FF 05 
1d667     08 07 07 0B 
1d66b     0E 0C 0B 0B 
1d66f     0A 07 03 01 | 	byte	$fe, $fd, $ff, $05, $08, $07, $07, $0b, $0e, $0c, $0b, $0b, $0a, $07, $03, $01
1d673     00 00 FF 00 
1d677     00 FF FC FB 
1d67b     F8 F5 F0 EC 
1d67f     ED ED EE EF | 	byte	$00, $00, $ff, $00, $00, $ff, $fc, $fb, $f8, $f5, $f0, $ec, $ed, $ed, $ee, $ef
1d683     F3 F8 FA F9 
1d687     F8 F8 FB FD 
1d68b     FC F8 F6 F7 
1d68f     F6 F3 F2 F8 | 	byte	$f3, $f8, $fa, $f9, $f8, $f8, $fb, $fd, $fc, $f8, $f6, $f7, $f6, $f3, $f2, $f8
1d693     FE FF 00 03 
1d697     04 FE F8 FA 
1d69b     FE FE FF 03 
1d69f     07 07 08 0B | 	byte	$fe, $ff, $00, $03, $04, $fe, $f8, $fa, $fe, $fe, $ff, $03, $07, $07, $08, $0b
1d6a3     0D 0B 0B 0C 
1d6a7     0C 07 03 02 
1d6ab     02 01 FF 00 
1d6af     01 02 FE FC | 	byte	$0d, $0b, $0b, $0c, $0c, $07, $03, $02, $02, $01, $ff, $00, $01, $02, $fe, $fc
1d6b3     FA F8 F2 EE 
1d6b7     ED EE EF F0 
1d6bb     F3 F7 FA FC 
1d6bf     F9 F8 FA FD | 	byte	$fa, $f8, $f2, $ee, $ed, $ee, $ef, $f0, $f3, $f7, $fa, $fc, $f9, $f8, $fa, $fd
1d6c3     FD F9 F6 F6 
1d6c7     F7 F3 F2 F7 
1d6cb     FD 00 00 03 
1d6cf     03 FD F9 FA | 	byte	$fd, $f9, $f6, $f6, $f7, $f3, $f2, $f7, $fd, $00, $00, $03, $03, $fd, $f9, $fa
1d6d3     FE FD FE 03 
1d6d7     08 07 07 09 
1d6db     0E 0C 0A 0A 
1d6df     0C 08 04 02 | 	byte	$fe, $fd, $fe, $03, $08, $07, $07, $09, $0e, $0c, $0a, $0a, $0c, $08, $04, $02
1d6e3     01 00 FF 00 
1d6e7     01 01 00 FD 
1d6eb     FA F7 F2 F0 
1d6ef     EE EE EE F0 | 	byte	$01, $00, $ff, $00, $01, $01, $00, $fd, $fa, $f7, $f2, $f0, $ee, $ee, $ee, $f0
1d6f3     F2 F7 F9 FA 
1d6f7     F9 F9 F9 FA 
1d6fb     FB F9 F6 F6 
1d6ff     F5 F2 F1 F6 | 	byte	$f2, $f7, $f9, $fa, $f9, $f9, $f9, $fa, $fb, $f9, $f6, $f6, $f5, $f2, $f1, $f6
1d703     FC FE FE 02 
1d707     04 FE F8 F8 
1d70b     FD FC FD 01 
1d70f     07 07 06 08 | 	byte	$fc, $fe, $fe, $02, $04, $fe, $f8, $f8, $fd, $fc, $fd, $01, $07, $07, $06, $08
1d713     0B 0B 0A 0A 
1d717     0A 06 03 02 
1d71b     00 FF FE 00 
1d71f     01 01 FE FC | 	byte	$0b, $0b, $0a, $0a, $0a, $06, $03, $02, $00, $ff, $fe, $00, $01, $01, $fe, $fc
1d723     FA F8 F3 F0 
1d727     ED EE EE EF 
1d72b     F1 F6 FA FB 
1d72f     F9 F8 F8 FC | 	byte	$fa, $f8, $f3, $f0, $ed, $ee, $ee, $ef, $f1, $f6, $fa, $fb, $f9, $f8, $f8, $fc
1d733     FD FA F6 F6 
1d737     F7 F4 F1 F5 
1d73b     FC FF FF 01 
1d73f     04 02 FA F9 | 	byte	$fd, $fa, $f6, $f6, $f7, $f4, $f1, $f5, $fc, $ff, $ff, $01, $04, $02, $fa, $f9
1d743     FB FE FE 02 
1d747     07 07 07 09 
1d74b     0C 0C 0A 0B 
1d74f     0C 09 05 03 | 	byte	$fb, $fe, $fe, $02, $07, $07, $07, $09, $0c, $0c, $0a, $0b, $0c, $09, $05, $03
1d753     02 02 00 FF 
1d757     01 03 02 FE 
1d75b     FB F9 F7 F3 
1d75f     F0 EF EF F1 | 	byte	$02, $02, $00, $ff, $01, $03, $02, $fe, $fb, $f9, $f7, $f3, $f0, $ef, $ef, $f1
1d763     F3 F7 FB FC 
1d767     FC F9 F9 FB 
1d76b     FD FC F8 F6 
1d76f     F4 F4 F2 F3 | 	byte	$f3, $f7, $fb, $fc, $fc, $f9, $f9, $fb, $fd, $fc, $f8, $f6, $f4, $f4, $f2, $f3
1d773     F9 FD FE FF 
1d777     05 02 FB F8 
1d77b     FB FD FC 01 
1d77f     07 09 06 07 | 	byte	$f9, $fd, $fe, $ff, $05, $02, $fb, $f8, $fb, $fd, $fc, $01, $07, $09, $06, $07
1d783     0C 0E 0B 0B 
1d787     0B 0A 07 04 
1d78b     01 00 00 00 
1d78f     02 03 01 FE | 	byte	$0c, $0e, $0b, $0b, $0b, $0a, $07, $04, $01, $00, $00, $00, $02, $03, $01, $fe
1d793     FB F9 F5 F2 
1d797     F0 EF EE EE 
1d79b     F1 F7 FC FC 
1d79f     F9 F8 F9 FB | 	byte	$fb, $f9, $f5, $f2, $f0, $ef, $ee, $ee, $f1, $f7, $fc, $fc, $f9, $f8, $f9, $fb
1d7a3     FD FC F8 F6 
1d7a7     F5 F4 F3 F5 
1d7ab     FB FE FD 01 
1d7af     07 04 FB F8 | 	byte	$fd, $fc, $f8, $f6, $f5, $f4, $f3, $f5, $fb, $fe, $fd, $01, $07, $04, $fb, $f8
1d7b3     FB FE FF 02 
1d7b7     07 08 07 09 
1d7bb     0D 0C 0C 0C 
1d7bf     0B 0A 07 05 | 	byte	$fb, $fe, $ff, $02, $07, $08, $07, $09, $0d, $0c, $0c, $0c, $0b, $0a, $07, $05
1d7c3     03 01 FE 00 
1d7c7     02 04 02 FE 
1d7cb     FA F8 F6 F3 
1d7cf     F0 EE ED EE | 	byte	$03, $01, $fe, $00, $02, $04, $02, $fe, $fa, $f8, $f6, $f3, $f0, $ee, $ed, $ee
1d7d3     F1 F5 F9 FB 
1d7d7     F9 F7 F6 F9 
1d7db     FD FC F8 F4 
1d7df     F4 F5 F3 F3 | 	byte	$f1, $f5, $f9, $fb, $f9, $f7, $f6, $f9, $fd, $fc, $f8, $f4, $f4, $f5, $f3, $f3
1d7e3     F8 FC FE FF 
1d7e7     05 03 FC F7 
1d7eb     F9 FC FD 01 
1d7ef     07 07 04 07 | 	byte	$f8, $fc, $fe, $ff, $05, $03, $fc, $f7, $f9, $fc, $fd, $01, $07, $07, $04, $07
1d7f3     0B 0C 0A 09 
1d7f7     09 09 07 05 
1d7fb     01 00 FF FF 
1d7ff     01 04 02 FE | 	byte	$0b, $0c, $0a, $09, $09, $09, $07, $05, $01, $00, $ff, $ff, $01, $04, $02, $fe
1d803     F9 F7 F5 F4 
1d807     F0 ED EC ED 
1d80b     F1 F6 FA FB 
1d80f     F8 F7 F7 FA | 	byte	$f9, $f7, $f5, $f4, $f0, $ed, $ec, $ed, $f1, $f6, $fa, $fb, $f8, $f7, $f7, $fa
1d813     FC FC F8 F4 
1d817     F4 F4 F3 F4 
1d81b     F9 FB FD 01 
1d81f     06 02 FA F6 | 	byte	$fc, $fc, $f8, $f4, $f4, $f4, $f3, $f4, $f9, $fb, $fd, $01, $06, $02, $fa, $f6
1d823     FA FD FF 01 
1d827     06 07 05 07 
1d82b     0C 0D 0A 0A 
1d82f     09 09 08 06 | 	byte	$fa, $fd, $ff, $01, $06, $07, $05, $07, $0c, $0d, $0a, $0a, $09, $09, $08, $06
1d833     02 FF FE 00 
1d837     04 05 01 FC 
1d83b     FA F8 F6 F3 
1d83f     F0 ED EC EE | 	byte	$02, $ff, $fe, $00, $04, $05, $01, $fc, $fa, $f8, $f6, $f3, $f0, $ed, $ec, $ee
1d843     F1 F8 FB FB 
1d847     F8 F6 F8 FC 
1d84b     FD FB F6 F4 
1d84f     F5 F5 F3 F4 | 	byte	$f1, $f8, $fb, $fb, $f8, $f6, $f8, $fc, $fd, $fb, $f6, $f4, $f5, $f5, $f3, $f4
1d853     F9 FD FE 02 
1d857     06 04 FB F8 
1d85b     FA FD 00 02 
1d85f     06 05 04 07 | 	byte	$f9, $fd, $fe, $02, $06, $04, $fb, $f8, $fa, $fd, $00, $02, $06, $05, $04, $07
1d863     0C 0C 08 08 
1d867     09 09 08 05 
1d86b     02 00 FE 00 
1d86f     03 05 02 FE | 	byte	$0c, $0c, $08, $08, $09, $09, $08, $05, $02, $00, $fe, $00, $03, $05, $02, $fe
1d873     F9 F8 F8 F7 
1d877     F2 EE EC EE 
1d87b     F2 F7 F9 F9 
1d87f     F8 F7 F7 F9 | 	byte	$f9, $f8, $f8, $f7, $f2, $ee, $ec, $ee, $f2, $f7, $f9, $f9, $f8, $f7, $f7, $f9
1d883     FC FC F8 F3 
1d887     F3 F5 F4 F2 
1d88b     F5 FA FC FF 
1d88f     04 04 FC F6 | 	byte	$fc, $fc, $f8, $f3, $f3, $f5, $f4, $f2, $f5, $fa, $fc, $ff, $04, $04, $fc, $f6
1d893     F8 FB FD 00 
1d897     03 04 03 05 
1d89b     09 0B 08 07 
1d89f     07 08 09 07 | 	byte	$f8, $fb, $fd, $00, $03, $04, $03, $05, $09, $0b, $08, $07, $07, $08, $09, $07
1d8a3     02 FE FD FF 
1d8a7     02 03 02 00 
1d8ab     FA F8 F7 F7 
1d8af     F4 F0 EC EC | 	byte	$02, $fe, $fd, $ff, $02, $03, $02, $00, $fa, $f8, $f7, $f7, $f4, $f0, $ec, $ec
1d8b3     F0 F6 F9 FA 
1d8b7     F9 F8 F8 F9 
1d8bb     FB FA F9 F6 
1d8bf     F4 F4 F3 F2 | 	byte	$f0, $f6, $f9, $fa, $f9, $f8, $f8, $f9, $fb, $fa, $f9, $f6, $f4, $f4, $f3, $f2
1d8c3     F4 F8 FB FE 
1d8c7     03 06 00 F8 
1d8cb     F7 FB FE FF 
1d8cf     02 04 05 06 | 	byte	$f4, $f8, $fb, $fe, $03, $06, $00, $f8, $f7, $fb, $fe, $ff, $02, $04, $05, $06
1d8d3     09 0B 0B 0A 
1d8d7     09 09 09 09 
1d8db     06 01 FF 00 
1d8df     02 05 06 01 | 	byte	$09, $0b, $0b, $0a, $09, $09, $09, $09, $06, $01, $ff, $00, $02, $05, $06, $01
1d8e3     FC FB FA FA 
1d8e7     F7 F3 F0 EF 
1d8eb     EF F4 F9 FC 
1d8ef     FC FA F8 FA | 	byte	$fc, $fb, $fa, $fa, $f7, $f3, $f0, $ef, $ef, $f4, $f9, $fc, $fc, $fa, $f8, $fa
1d8f3     FC FC FB F8 
1d8f7     F6 F6 F6 F4 
1d8fb     F3 F8 FC FF 
1d8ff     01 04 04 FE | 	byte	$fc, $fc, $fb, $f8, $f6, $f6, $f6, $f4, $f3, $f8, $fc, $ff, $01, $04, $04, $fe
1d903     F8 F9 FD FF 
1d907     01 05 06 06 
1d90b     08 0B 0B 09 
1d90f     09 0A 0A 09 | 	byte	$f8, $f9, $fd, $ff, $01, $05, $06, $06, $08, $0b, $0b, $09, $09, $0a, $0a, $09
1d913     07 03 FF FF 
1d917     00 04 06 03 
1d91b     FE FA F9 F9 
1d91f     F9 F4 F0 EC | 	byte	$07, $03, $ff, $ff, $00, $04, $06, $03, $fe, $fa, $f9, $f9, $f9, $f4, $f0, $ec
1d923     EE F3 F7 F9 
1d927     FA FA F9 F9 
1d92b     FA FB FC FA 
1d92f     F7 F4 F5 F5 | 	byte	$ee, $f3, $f7, $f9, $fa, $fa, $f9, $f9, $fa, $fb, $fc, $fa, $f7, $f4, $f5, $f5
1d933     F3 F5 F9 FC 
1d937     00 03 03 00 
1d93b     F8 F8 FB FE 
1d93f     00 02 06 07 | 	byte	$f3, $f5, $f9, $fc, $00, $03, $03, $00, $f8, $f8, $fb, $fe, $00, $02, $06, $07
1d943     06 09 0C 0B 
1d947     09 09 0A 0B 
1d94b     09 05 00 FF 
1d94f     00 03 06 04 | 	byte	$06, $09, $0c, $0b, $09, $09, $0a, $0b, $09, $05, $00, $ff, $00, $03, $06, $04
1d953     00 FC FA F8 
1d957     F8 F6 F1 ED 
1d95b     EC F0 F5 F8 
1d95f     FA F9 F8 F8 | 	byte	$00, $fc, $fa, $f8, $f8, $f6, $f1, $ed, $ec, $f0, $f5, $f8, $fa, $f9, $f8, $f8
1d963     F8 F9 F9 FA 
1d967     F8 F4 F3 F3 
1d96b     F2 F3 F7 FA 
1d96f     FD 00 03 FF | 	byte	$f8, $f9, $f9, $fa, $f8, $f4, $f3, $f3, $f2, $f3, $f7, $fa, $fd, $00, $03, $ff
1d973     F8 F6 F8 FC 
1d977     FF 00 03 05 
1d97b     06 07 09 0A 
1d97f     0A 09 0A 0A | 	byte	$f8, $f6, $f8, $fc, $ff, $00, $03, $05, $06, $07, $09, $0a, $0a, $09, $0a, $0a
1d983     0B 07 01 FF 
1d987     00 03 06 05 
1d98b     01 FD FB FA 
1d98f     F8 F7 F2 F0 | 	byte	$0b, $07, $01, $ff, $00, $03, $06, $05, $01, $fd, $fb, $fa, $f8, $f7, $f2, $f0
1d993     ED EF F1 F6 
1d997     FA FA F9 F8 
1d99b     F8 F9 FA FB 
1d99f     F8 F6 F5 F4 | 	byte	$ed, $ef, $f1, $f6, $fa, $fa, $f9, $f8, $f8, $f9, $fa, $fb, $f8, $f6, $f5, $f4
1d9a3     F3 F3 F7 FB 
1d9a7     FE FF 01 00 
1d9ab     FD F8 F7 FA 
1d9af     FE 01 03 05 | 	byte	$f3, $f3, $f7, $fb, $fe, $ff, $01, $00, $fd, $f8, $f7, $fa, $fe, $01, $03, $05
1d9b3     06 07 09 0A 
1d9b7     09 09 09 0B 
1d9bb     0A 08 04 02 
1d9bf     00 01 03 06 | 	byte	$06, $07, $09, $0a, $09, $09, $09, $0b, $0a, $08, $04, $02, $00, $01, $03, $06
1d9c3     04 00 FC FA 
1d9c7     FA F9 F6 F1 
1d9cb     EE EF F2 F5 
1d9cf     F8 FA FA F9 | 	byte	$04, $00, $fc, $fa, $fa, $f9, $f6, $f1, $ee, $ef, $f2, $f5, $f8, $fa, $fa, $f9
1d9d3     F7 F8 F9 FB 
1d9d7     FB F8 F4 F4 
1d9db     F4 F4 F5 F8 
1d9df     FC FF 00 01 | 	byte	$f7, $f8, $f9, $fb, $fb, $f8, $f4, $f4, $f4, $f4, $f5, $f8, $fc, $ff, $00, $01
1d9e3     00 FA F8 F9 
1d9e7     FC 00 02 04 
1d9eb     05 06 07 0A 
1d9ef     09 09 08 09 | 	byte	$00, $fa, $f8, $f9, $fc, $00, $02, $04, $05, $06, $07, $0a, $09, $09, $08, $09
1d9f3     0A 09 05 01 
1d9f7     00 02 03 05 
1d9fb     03 01 FD FA 
1d9ff     F9 F8 F8 F2 | 	byte	$0a, $09, $05, $01, $00, $02, $03, $05, $03, $01, $fd, $fa, $f9, $f8, $f8, $f2
1da03     EF ED EF F4 
1da07     F7 F9 F9 F8 
1da0b     F7 F6 F7 F8 
1da0f     FA F8 F4 F2 | 	byte	$ef, $ed, $ef, $f4, $f7, $f9, $f9, $f8, $f7, $f6, $f7, $f8, $fa, $f8, $f4, $f2
1da13     F1 F3 F4 F7 
1da17     F9 FC FF 00 
1da1b     00 FC F7 F7 
1da1f     FB FF 00 02 | 	byte	$f1, $f3, $f4, $f7, $f9, $fc, $ff, $00, $00, $fc, $f7, $f7, $fb, $ff, $00, $02
1da23     04 05 06 07 
1da27     09 0A 09 07 
1da2b     09 09 07 03 
1da2f     00 00 02 05 | 	byte	$04, $05, $06, $07, $09, $0a, $09, $07, $09, $09, $07, $03, $00, $00, $02, $05
1da33     05 02 FD FA 
1da37     F9 F9 F8 F4 
1da3b     F0 ED EE F1 
1da3f     F6 F9 FA F9 | 	byte	$05, $02, $fd, $fa, $f9, $f9, $f8, $f4, $f0, $ed, $ee, $f1, $f6, $f9, $fa, $f9
1da43     F7 F6 F8 F9 
1da47     FB FA F6 F3 
1da4b     F3 F4 F4 F6 
1da4f     F9 FC FF 00 | 	byte	$f7, $f6, $f8, $f9, $fb, $fa, $f6, $f3, $f3, $f4, $f4, $f6, $f9, $fc, $ff, $00
1da53     01 FE FA F7 
1da57     F9 FF 01 03 
1da5b     04 06 07 07 
1da5f     09 0A 0A 09 | 	byte	$01, $fe, $fa, $f7, $f9, $ff, $01, $03, $04, $06, $07, $07, $09, $0a, $0a, $09
1da63     09 09 08 04 
1da67     02 01 02 03 
1da6b     05 05 00 FC 
1da6f     F8 F9 FA F7 | 	byte	$09, $09, $08, $04, $02, $01, $02, $03, $05, $05, $00, $fc, $f8, $f9, $fa, $f7
1da73     F2 EE EE F2 
1da77     F6 F9 FA FB 
1da7b     F9 F7 F6 F8 
1da7f     FC FB F8 F3 | 	byte	$f2, $ee, $ee, $f2, $f6, $f9, $fa, $fb, $f9, $f7, $f6, $f8, $fc, $fb, $f8, $f3
1da83     F3 F5 F6 F6 
1da87     F8 FC FF FF 
1da8b     00 00 FC F8 
1da8f     F8 FD 00 03 | 	byte	$f3, $f5, $f6, $f6, $f8, $fc, $ff, $ff, $00, $00, $fc, $f8, $f8, $fd, $00, $03
1da93     05 06 07 07 
1da97     09 0B 0B 09 
1da9b     09 0B 0B 07 
1da9f     03 02 03 05 | 	byte	$05, $06, $07, $07, $09, $0b, $0b, $09, $09, $0b, $0b, $07, $03, $02, $03, $05
1daa3     06 05 03 FE 
1daa7     FB FA FA FA 
1daab     F5 F0 EE F0 
1daaf     F5 F9 FA F9 | 	byte	$06, $05, $03, $fe, $fb, $fa, $fa, $fa, $f5, $f0, $ee, $f0, $f5, $f9, $fa, $f9
1dab3     F9 F8 F7 F7 
1dab7     F9 FC F9 F5 
1dabb     F2 F3 F6 F6 
1dabf     F7 F9 FE 00 | 	byte	$f9, $f8, $f7, $f7, $f9, $fc, $f9, $f5, $f2, $f3, $f6, $f6, $f7, $f9, $fe, $00
1dac3     00 00 FD F8 
1dac7     F8 FC 01 01 
1dacb     02 06 07 07 
1dacf     07 0A 0B 0A | 	byte	$00, $00, $fd, $f8, $f8, $fc, $01, $01, $02, $06, $07, $07, $07, $0a, $0b, $0a
1dad3     08 09 0B 08 
1dad7     03 01 02 04 
1dadb     06 06 03 FE 
1dadf     FB FB FA F9 | 	byte	$08, $09, $0b, $08, $03, $01, $02, $04, $06, $06, $03, $fe, $fb, $fb, $fa, $f9
1dae3     F4 F0 EE EF 
1dae7     F3 F6 F9 FA 
1daeb     F9 F7 F6 F7 
1daef     F8 FA F9 F5 | 	byte	$f4, $f0, $ee, $ef, $f3, $f6, $f9, $fa, $f9, $f7, $f6, $f7, $f8, $fa, $f9, $f5
1daf3     F3 F3 F5 F4 
1daf7     F5 F8 FC FE 
1dafb     FE 00 FF F9 
1daff     F6 F9 FF 02 | 	byte	$f3, $f3, $f5, $f4, $f5, $f8, $fc, $fe, $fe, $00, $ff, $f9, $f6, $f9, $ff, $02
1db03     01 03 06 08 
1db07     07 0A 0A 08 
1db0b     08 0A 0A 07 
1db0f     03 01 02 03 | 	byte	$01, $03, $06, $08, $07, $0a, $0a, $08, $08, $0a, $0a, $07, $03, $01, $02, $03
1db13     04 05 03 FF 
1db17     FA F9 FB FA 
1db1b     F6 F0 ED EF 
1db1f     F3 F6 F8 F8 | 	byte	$04, $05, $03, $ff, $fa, $f9, $fb, $fa, $f6, $f0, $ed, $ef, $f3, $f6, $f8, $f8
1db23     F8 F7 F6 F5 
1db27     F7 FA F9 F4 
1db2b     F1 F2 F5 F5 
1db2f     F4 F7 FC FF | 	byte	$f8, $f7, $f6, $f5, $f7, $fa, $f9, $f4, $f1, $f2, $f5, $f5, $f4, $f7, $fc, $ff
1db33     FE FF 00 F9 
1db37     F7 FA FF 01 
1db3b     01 04 07 07 
1db3f     08 0A 0C 09 | 	byte	$fe, $ff, $00, $f9, $f7, $fa, $ff, $01, $01, $04, $07, $07, $08, $0a, $0c, $09
1db43     08 0A 0C 09 
1db47     05 01 03 06 
1db4b     06 05 03 00 
1db4f     FC FB FB FA | 	byte	$08, $0a, $0c, $09, $05, $01, $03, $06, $06, $05, $03, $00, $fc, $fb, $fb, $fa
1db53     F8 F1 EE EF 
1db57     F2 F6 F8 F8 
1db5b     F8 F8 F6 F6 
1db5f     F7 F8 F9 F6 | 	byte	$f8, $f1, $ee, $ef, $f2, $f6, $f8, $f8, $f8, $f8, $f6, $f6, $f7, $f8, $f9, $f6
1db63     F3 F2 F4 F6 
1db67     F5 F7 FB FE 
1db6b     FE FF 00 FA 
1db6f     F7 F9 FF 01 | 	byte	$f3, $f2, $f4, $f6, $f5, $f7, $fb, $fe, $fe, $ff, $00, $fa, $f7, $f9, $ff, $01
1db73     00 03 07 08 
1db77     07 08 0A 0A 
1db7b     09 0A 0B 0A 
1db7f     06 03 03 05 | 	byte	$00, $03, $07, $08, $07, $08, $0a, $0a, $09, $0a, $0b, $0a, $06, $03, $03, $05
1db83     06 05 03 00 
1db87     FC FA FB FB 
1db8b     F6 F1 EE EF 
1db8f     F2 F4 F6 F8 | 	byte	$06, $05, $03, $00, $fc, $fa, $fb, $fb, $f6, $f1, $ee, $ef, $f2, $f4, $f6, $f8
1db93     F8 F7 F5 F4 
1db97     F6 F8 F8 F5 
1db9b     F2 F2 F3 F4 
1db9f     F2 F5 FB FD | 	byte	$f8, $f7, $f5, $f4, $f6, $f8, $f8, $f5, $f2, $f2, $f3, $f4, $f2, $f5, $fb, $fd
1dba3     FC FC FE FC 
1dba7     F6 F7 FC 00 
1dbab     00 01 06 07 
1dbaf     06 07 09 07 | 	byte	$fc, $fc, $fe, $fc, $f6, $f7, $fc, $00, $00, $01, $06, $07, $06, $07, $09, $07
1dbb3     08 09 0B 0A 
1dbb7     05 02 02 05 
1dbbb     05 04 03 02 
1dbbf     FE FA FB FC | 	byte	$08, $09, $0b, $0a, $05, $02, $02, $05, $05, $04, $03, $02, $fe, $fa, $fb, $fc
1dbc3     F8 F3 EF EE 
1dbc7     F1 F4 F6 F6 
1dbcb     F8 F8 F7 F6 
1dbcf     F4 F8 FA F8 | 	byte	$f8, $f3, $ef, $ee, $f1, $f4, $f6, $f6, $f8, $f8, $f7, $f6, $f4, $f8, $fa, $f8
1dbd3     F3 F1 F4 F6 
1dbd7     F4 F5 FB 00 
1dbdb     FE FE FF FD 
1dbdf     F8 F9 FE 00 | 	byte	$f3, $f1, $f4, $f6, $f4, $f5, $fb, $00, $fe, $fe, $ff, $fd, $f8, $f9, $fe, $00
1dbe3     00 01 07 09 
1dbe7     06 07 0A 09 
1dbeb     09 09 0C 0B 
1dbef     07 03 02 05 | 	byte	$00, $01, $07, $09, $06, $07, $0a, $09, $09, $09, $0c, $0b, $07, $03, $02, $05
1dbf3     06 05 03 01 
1dbf7     FE FD FC FC 
1dbfb     F9 F4 F0 F0 
1dbff     F3 F4 F6 F7 | 	byte	$06, $05, $03, $01, $fe, $fd, $fc, $fc, $f9, $f4, $f0, $f0, $f3, $f4, $f6, $f7
1dc03     F8 F8 F7 F6 
1dc07     F6 F7 F9 F8 
1dc0b     F5 F3 F5 F5 
1dc0f     F4 F7 FC FF | 	byte	$f8, $f8, $f7, $f6, $f6, $f7, $f9, $f8, $f5, $f3, $f5, $f5, $f4, $f7, $fc, $ff
1dc13     FD FE 00 00 
1dc17     F9 F8 FE 01 
1dc1b     FF 01 07 09 
1dc1f     08 07 09 09 | 	byte	$fd, $fe, $00, $00, $f9, $f8, $fe, $01, $ff, $01, $07, $09, $08, $07, $09, $09
1dc23     0A 0B 0C 0A 
1dc27     07 04 03 05 
1dc2b     06 05 04 02 
1dc2f     FF FC FD FE | 	byte	$0a, $0b, $0c, $0a, $07, $04, $03, $05, $06, $05, $04, $02, $ff, $fc, $fd, $fe
1dc33     FA F4 F0 F1 
1dc37     F3 F5 F5 F7 
1dc3b     F8 F9 F7 F5 
1dc3f     F4 F7 F9 F8 | 	byte	$fa, $f4, $f0, $f1, $f3, $f5, $f5, $f7, $f8, $f9, $f7, $f5, $f4, $f7, $f9, $f8
1dc43     F4 F2 F4 F5 
1dc47     F4 F4 FA FE 
1dc4b     FC FC FE FF 
1dc4f     FB F8 FC FF | 	byte	$f4, $f2, $f4, $f5, $f4, $f4, $fa, $fe, $fc, $fc, $fe, $ff, $fb, $f8, $fc, $ff
1dc53     00 01 05 08 
1dc57     07 07 09 09 
1dc5b     08 09 0C 0B 
1dc5f     07 03 03 06 | 	byte	$00, $01, $05, $08, $07, $07, $09, $09, $08, $09, $0c, $0b, $07, $03, $03, $06
1dc63     06 05 03 02 
1dc67     00 FE FC FD 
1dc6b     FB F6 F2 F0 
1dc6f     F3 F5 F5 F6 | 	byte	$06, $05, $03, $02, $00, $fe, $fc, $fd, $fb, $f6, $f2, $f0, $f3, $f5, $f5, $f6
1dc73     F6 F8 F8 F6 
1dc77     F4 F5 F8 F9 
1dc7b     F6 F2 F1 F4 
1dc7f     F4 F3 F8 FD | 	byte	$f6, $f8, $f8, $f6, $f4, $f5, $f8, $f9, $f6, $f2, $f1, $f4, $f4, $f3, $f8, $fd
1dc83     FC FC FD FF 
1dc87     FC F8 FB FF 
1dc8b     00 00 03 09 
1dc8f     08 05 07 08 | 	byte	$fc, $fc, $fd, $ff, $fc, $f8, $fb, $ff, $00, $00, $03, $09, $08, $05, $07, $08
1dc93     09 09 0A 0B 
1dc97     08 05 03 03 
1dc9b     05 06 03 02 
1dc9f     00 00 FD FD | 	byte	$09, $09, $0a, $0b, $08, $05, $03, $03, $05, $06, $03, $02, $00, $00, $fd, $fd
1dca3     FB F8 F3 F1 
1dca7     F2 F3 F3 F5 
1dcab     F6 F7 F8 F6 
1dcaf     F4 F5 F7 F8 | 	byte	$fb, $f8, $f3, $f1, $f2, $f3, $f3, $f5, $f6, $f7, $f8, $f6, $f4, $f5, $f7, $f8
1dcb3     F8 F4 F2 F4 
1dcb7     F5 F3 F6 FC 
1dcbb     FD FA FB FF 
1dcbf     FE F9 F9 FD | 	byte	$f8, $f4, $f2, $f4, $f5, $f3, $f6, $fc, $fd, $fa, $fb, $ff, $fe, $f9, $f9, $fd
1dcc3     FF FF 01 06 
1dcc7     09 07 06 07 
1dccb     09 09 0B 0B 
1dccf     0A 07 04 03 | 	byte	$ff, $ff, $01, $06, $09, $07, $06, $07, $09, $09, $0b, $0b, $0a, $07, $04, $03
1dcd3     06 06 04 03 
1dcd7     02 00 FE FD 
1dcdb     FD FA F5 F1 
1dcdf     F1 F3 F4 F3 | 	byte	$06, $06, $04, $03, $02, $00, $fe, $fd, $fd, $fa, $f5, $f1, $f1, $f3, $f4, $f3
1dce3     F3 F7 F8 F7 
1dce7     F4 F4 F6 F8 
1dceb     F9 F5 F1 F4 
1dcef     F6 F4 F3 F9 | 	byte	$f3, $f7, $f8, $f7, $f4, $f4, $f6, $f8, $f9, $f5, $f1, $f4, $f6, $f4, $f3, $f9
1dcf3     FE FC FA FD 
1dcf7     FF FC F8 FB 
1dcfb     FE FE 00 05 
1dcff     07 06 06 07 | 	byte	$fe, $fc, $fa, $fd, $ff, $fc, $f8, $fb, $fe, $fe, $00, $05, $07, $06, $06, $07
1dd03     09 08 0A 0B 
1dd07     0C 08 04 03 
1dd0b     05 06 04 02 
1dd0f     02 01 FF FD | 	byte	$09, $08, $0a, $0b, $0c, $08, $04, $03, $05, $06, $04, $02, $02, $01, $ff, $fd
1dd13     FC FB F7 F3 
1dd17     F1 F2 F4 F4 
1dd1b     F4 F5 F8 F8 
1dd1f     F6 F3 F4 F7 | 	byte	$fc, $fb, $f7, $f3, $f1, $f2, $f4, $f4, $f4, $f5, $f8, $f8, $f6, $f3, $f4, $f7
1dd23     F9 F7 F3 F2 
1dd27     F5 F5 F4 F7 
1dd2b     FB FB FA FC 
1dd2f     FF FC F8 FA | 	byte	$f9, $f7, $f3, $f2, $f5, $f5, $f4, $f7, $fb, $fb, $fa, $fc, $ff, $fc, $f8, $fa
1dd33     FE FE FE 02 
1dd37     07 06 04 05 
1dd3b     07 08 08 0A 
1dd3f     0A 08 04 03 | 	byte	$fe, $fe, $fe, $02, $07, $06, $04, $05, $07, $08, $08, $0a, $0a, $08, $04, $03
1dd43     03 05 06 03 
1dd47     02 00 FF FE 
1dd4b     FE FC F8 F5 
1dd4f     F3 F3 F3 F4 | 	byte	$03, $05, $06, $03, $02, $00, $ff, $fe, $fe, $fc, $f8, $f5, $f3, $f3, $f3, $f4
1dd53     F4 F6 F7 F8 
1dd57     F6 F5 F6 F6 
1dd5b     F8 F8 F5 F3 
1dd5f     F4 F6 F5 F7 | 	byte	$f4, $f6, $f7, $f8, $f6, $f5, $f6, $f6, $f8, $f8, $f5, $f3, $f4, $f6, $f5, $f7
1dd63     FB FC FA FB 
1dd67     FF FF FA F9 
1dd6b     FD FF FF 00 
1dd6f     06 08 06 05 | 	byte	$fb, $fc, $fa, $fb, $ff, $ff, $fa, $f9, $fd, $ff, $ff, $00, $06, $08, $06, $05
1dd73     07 08 0A 0B 
1dd77     0B 09 07 05 
1dd7b     04 06 06 04 
1dd7f     04 03 01 00 | 	byte	$07, $08, $0a, $0b, $0b, $09, $07, $05, $04, $06, $06, $04, $04, $03, $01, $00
1dd83     00 FE FC F8 
1dd87     F4 F3 F5 F5 
1dd8b     F4 F4 F6 F8 
1dd8f     F8 F5 F4 F7 | 	byte	$00, $fe, $fc, $f8, $f4, $f3, $f5, $f5, $f4, $f4, $f6, $f8, $f8, $f5, $f4, $f7
1dd93     F8 F8 F5 F3 
1dd97     F4 F6 F5 F4 
1dd9b     F9 FD FB FA 
1dd9f     FD 00 FC F9 | 	byte	$f8, $f8, $f5, $f3, $f4, $f6, $f5, $f4, $f9, $fd, $fb, $fa, $fd, $00, $fc, $f9
1dda3     FB FF 00 00 
1dda7     03 07 06 05 
1ddab     07 08 09 0A 
1ddaf     0B 0B 08 05 | 	byte	$fb, $ff, $00, $00, $03, $07, $06, $05, $07, $08, $09, $0a, $0b, $0b, $08, $05
1ddb3     03 06 07 04 
1ddb7     03 03 03 00 
1ddbb     00 FE FC FA 
1ddbf     F6 F3 F3 F5 | 	byte	$03, $06, $07, $04, $03, $03, $03, $00, $00, $fe, $fc, $fa, $f6, $f3, $f3, $f5
1ddc3     F5 F4 F5 F6 
1ddc7     F8 F7 F5 F5 
1ddcb     F7 F8 F7 F3 
1ddcf     F3 F5 F6 F5 | 	byte	$f5, $f4, $f5, $f6, $f8, $f7, $f5, $f5, $f7, $f8, $f7, $f3, $f3, $f5, $f6, $f5
1ddd3     F7 FC FC FB 
1ddd7     FD FF FD FA 
1dddb     FC FE FF FE 
1dddf     02 07 06 04 | 	byte	$f7, $fc, $fc, $fb, $fd, $ff, $fd, $fa, $fc, $fe, $ff, $fe, $02, $07, $06, $04
1dde3     06 09 0A 0A 
1dde7     0A 0A 0A 07 
1ddeb     06 05 06 06 
1ddef     04 03 01 01 | 	byte	$06, $09, $0a, $0a, $0a, $0a, $0a, $07, $06, $05, $06, $06, $04, $03, $01, $01
1ddf3     00 00 FD FA 
1ddf7     F8 F5 F4 F3 
1ddfb     F4 F4 F4 F6 
1ddff     F7 F6 F5 F6 | 	byte	$00, $00, $fd, $fa, $f8, $f5, $f4, $f3, $f4, $f4, $f4, $f6, $f7, $f6, $f5, $f6
1de03     F6 F7 F6 F4 
1de07     F3 F5 F5 F4 
1de0b     F7 F9 FB F9 
1de0f     FC FF FE FB | 	byte	$f6, $f7, $f6, $f4, $f3, $f5, $f5, $f4, $f7, $f9, $fb, $f9, $fc, $ff, $fe, $fb
1de13     F9 FD FE FE 
1de17     FF 03 06 05 
1de1b     06 07 08 09 
1de1f     0A 0A 09 06 | 	byte	$f9, $fd, $fe, $fe, $ff, $03, $06, $05, $06, $07, $08, $09, $0a, $0a, $09, $06
1de23     06 05 05 04 
1de27     04 04 02 01 
1de2b     FF 00 FE FB 
1de2f     F8 F4 F3 F3 | 	byte	$06, $05, $05, $04, $04, $04, $02, $01, $ff, $00, $fe, $fb, $f8, $f4, $f3, $f3
1de33     F3 F3 F3 F5 
1de37     F6 F6 F4 F4 
1de3b     F6 F7 F7 F3 
1de3f     F2 F4 F6 F4 | 	byte	$f3, $f3, $f3, $f5, $f6, $f6, $f4, $f4, $f6, $f7, $f7, $f3, $f2, $f4, $f6, $f4
1de43     F4 F8 FC FB 
1de47     FB FE 00 FE 
1de4b     FB FD FF 00 
1de4f     00 04 06 05 | 	byte	$f4, $f8, $fc, $fb, $fb, $fe, $00, $fe, $fb, $fd, $ff, $00, $00, $04, $06, $05
1de53     06 07 09 09 
1de57     0A 0B 0A 08 
1de5b     05 05 07 06 
1de5f     04 03 03 03 | 	byte	$06, $07, $09, $09, $0a, $0b, $0a, $08, $05, $05, $07, $06, $04, $03, $03, $03
1de63     01 00 FF FD 
1de67     FA F6 F4 F4 
1de6b     F4 F4 F3 F3 
1de6f     F5 F7 F6 F6 | 	byte	$01, $00, $ff, $fd, $fa, $f6, $f4, $f4, $f4, $f4, $f3, $f3, $f5, $f7, $f6, $f6
1de73     F5 F6 F7 F6 
1de77     F3 F3 F4 F5 
1de7b     F5 F7 F9 FA 
1de7f     FB FC FF FE | 	byte	$f5, $f6, $f7, $f6, $f3, $f3, $f4, $f5, $f5, $f7, $f9, $fa, $fb, $fc, $ff, $fe
1de83     FC FC FE FE 
1de87     FE 02 06 06 
1de8b     04 06 08 09 
1de8f     09 09 09 09 | 	byte	$fc, $fc, $fe, $fe, $fe, $02, $06, $06, $04, $06, $08, $09, $09, $09, $09, $09
1de93     07 06 05 05 
1de97     04 03 03 02 
1de9b     02 01 FF FE 
1de9f     F9 F8 F6 F4 | 	byte	$07, $06, $05, $05, $04, $03, $03, $02, $02, $01, $ff, $fe, $f9, $f8, $f6, $f4
1dea3     F3 F3 F4 F4 
1dea7     F6 F6 F5 F5 
1deab     F5 F6 F6 F5 
1deaf     F4 F3 F3 F3 | 	byte	$f3, $f3, $f4, $f4, $f6, $f6, $f5, $f5, $f5, $f6, $f6, $f5, $f4, $f3, $f3, $f3
1deb3     F4 F6 F8 F9 
1deb7     F9 FB FE FF 
1debb     FC FC FD FE 
1debf     FF FF 03 05 | 	byte	$f4, $f6, $f8, $f9, $f9, $fb, $fe, $ff, $fc, $fc, $fd, $fe, $ff, $ff, $03, $05
1dec3     05 06 07 08 
1dec7     09 0A 09 07 
1decb     07 06 05 05 
1decf     03 02 03 02 | 	byte	$05, $06, $07, $08, $09, $0a, $09, $07, $07, $06, $05, $05, $03, $02, $03, $02
1ded3     01 00 00 FE 
1ded7     FA F6 F4 F4 
1dedb     F3 F2 F1 F2 
1dedf     F4 F6 F6 F4 | 	byte	$01, $00, $00, $fe, $fa, $f6, $f4, $f4, $f3, $f2, $f1, $f2, $f4, $f6, $f6, $f4
1dee3     F4 F5 F6 F6 
1dee7     F4 F3 F4 F4 
1deeb     F5 F5 F8 FA 
1deef     FA FB FD FF | 	byte	$f4, $f5, $f6, $f6, $f4, $f3, $f4, $f4, $f5, $f5, $f8, $fa, $fa, $fb, $fd, $ff
1def3     FE FC FC FD 
1def7     00 00 03 05 
1defb     05 06 07 09 
1deff     09 09 0B 09 | 	byte	$fe, $fc, $fc, $fd, $00, $00, $03, $05, $05, $06, $07, $09, $09, $09, $0b, $09
1df03     08 06 06 06 
1df07     05 03 02 03 
1df0b     03 02 01 FE 
1df0f     FC FA F8 F6 | 	byte	$08, $06, $06, $06, $05, $03, $02, $03, $03, $02, $01, $fe, $fc, $fa, $f8, $f6
1df13     F4 F3 F4 F3 
1df17     F4 F6 F7 F7 
1df1b     F6 F5 F7 F7 
1df1f     F7 F4 F3 F5 | 	byte	$f4, $f3, $f4, $f3, $f4, $f6, $f7, $f7, $f6, $f5, $f7, $f7, $f7, $f4, $f3, $f5
1df23     F6 F7 F8 F8 
1df27     F9 FC FE 00 
1df2b     FE FD FE FE 
1df2f     FE FF 02 05 | 	byte	$f6, $f7, $f8, $f8, $f9, $fc, $fe, $00, $fe, $fd, $fe, $fe, $fe, $ff, $02, $05
1df33     05 04 06 09 
1df37     0A 09 09 08 
1df3b     09 07 07 05 
1df3f     04 03 03 03 | 	byte	$05, $04, $06, $09, $0a, $09, $09, $08, $09, $07, $07, $05, $04, $03, $03, $03
1df43     03 03 01 00 
1df47     FC F9 F8 F6 
1df4b     F4 F3 F2 F3 
1df4f     F5 F6 F6 F6 | 	byte	$03, $03, $01, $00, $fc, $f9, $f8, $f6, $f4, $f3, $f2, $f3, $f5, $f6, $f6, $f6
1df53     F5 F6 F6 F6 
1df57     F6 F5 F4 F5 
1df5b     F6 F7 F8 F9 
1df5f     F9 FB FE 00 | 	byte	$f5, $f6, $f6, $f6, $f6, $f5, $f4, $f5, $f6, $f7, $f8, $f9, $f9, $fb, $fe, $00
1df63     00 FE FC FC 
1df67     FF 00 01 03 
1df6b     05 06 07 08 
1df6f     0A 0A 09 09 | 	byte	$00, $fe, $fc, $fc, $ff, $00, $01, $03, $05, $06, $07, $08, $0a, $0a, $09, $09
1df73     09 08 07 06 
1df77     04 02 02 03 
1df7b     04 03 00 00 
1df7f     FD FB F8 F6 | 	byte	$09, $08, $07, $06, $04, $02, $02, $03, $04, $03, $00, $00, $fd, $fb, $f8, $f6
1df83     F4 F3 F2 F2 
1df87     F3 F5 F6 F6 
1df8b     F4 F5 F6 F7 
1df8f     F6 F3 F3 F4 | 	byte	$f4, $f3, $f2, $f2, $f3, $f5, $f6, $f6, $f4, $f5, $f6, $f7, $f6, $f3, $f3, $f4
1df93     F7 F7 F7 F8 
1df97     F9 FA FC FF 
1df9b     00 FE FC FC 
1df9f     FE FF 01 03 | 	byte	$f7, $f7, $f7, $f8, $f9, $fa, $fc, $ff, $00, $fe, $fc, $fc, $fe, $ff, $01, $03
1dfa3     04 04 05 08 
1dfa7     09 09 08 09 
1dfab     09 08 06 05 
1dfaf     04 02 01 03 | 	byte	$04, $04, $05, $08, $09, $09, $08, $09, $09, $08, $06, $05, $04, $02, $01, $03
1dfb3     03 04 02 00 
1dfb7     FC FB F9 F7 
1dfbb     F4 F2 F1 F3 
1dfbf     F3 F4 F4 F5 | 	byte	$03, $04, $02, $00, $fc, $fb, $f9, $f7, $f4, $f2, $f1, $f3, $f3, $f4, $f4, $f5
1dfc3     F5 F5 F5 F6 
1dfc7     F6 F4 F3 F3 
1dfcb     F5 F7 F7 F7 
1dfcf     F7 F9 FC FF | 	byte	$f5, $f5, $f5, $f6, $f6, $f4, $f3, $f3, $f5, $f7, $f7, $f7, $f7, $f9, $fc, $ff
1dfd3     01 FE FC FC 
1dfd7     FE FF 00 03 
1dfdb     05 04 04 07 
1dfdf     0A 0A 08 07 | 	byte	$01, $fe, $fc, $fc, $fe, $ff, $00, $03, $05, $04, $04, $07, $0a, $0a, $08, $07
1dfe3     08 09 08 05 
1dfe7     03 01 02 03 
1dfeb     05 04 02 00 
1dfef     FD FB F8 F8 | 	byte	$08, $09, $08, $05, $03, $01, $02, $03, $05, $04, $02, $00, $fd, $fb, $f8, $f8
1dff3     F4 F1 F0 F1 
1dff7     F3 F5 F4 F4 
1dffb     F4 F5 F6 F6 
1dfff     F6 F4 F3 F3 | 	byte	$f4, $f1, $f0, $f1, $f3, $f5, $f4, $f4, $f4, $f5, $f6, $f6, $f6, $f4, $f3, $f3
1e003     F6 F7 F6 F7 
1e007     F8 F9 FB FF 
1e00b     02 00 FB FA 
1e00f     FE 00 00 01 | 	byte	$f6, $f7, $f6, $f7, $f8, $f9, $fb, $ff, $02, $00, $fb, $fa, $fe, $00, $00, $01
1e013     03 05 05 07 
1e017     0A 09 08 08 
1e01b     09 09 07 06 
1e01f     03 01 00 02 | 	byte	$03, $05, $05, $07, $0a, $09, $08, $08, $09, $09, $07, $06, $03, $01, $00, $02
1e023     05 05 02 FE 
1e027     FD FC FB F8 
1e02b     F4 F1 F1 F1 
1e02f     F3 F3 F4 F6 | 	byte	$05, $05, $02, $fe, $fd, $fc, $fb, $f8, $f4, $f1, $f1, $f1, $f3, $f3, $f4, $f6
1e033     F4 F4 F4 F6 
1e037     F7 F4 F2 F2 
1e03b     F6 F8 F6 F4 
1e03f     F6 F9 FB FE | 	byte	$f4, $f4, $f4, $f6, $f7, $f4, $f2, $f2, $f6, $f8, $f6, $f4, $f6, $f9, $fb, $fe
1e043     01 00 FB FA 
1e047     FC FE FF 01 
1e04b     03 03 03 05 
1e04f     09 09 06 06 | 	byte	$01, $00, $fb, $fa, $fc, $fe, $ff, $01, $03, $03, $03, $05, $09, $09, $06, $06
1e053     07 09 08 04 
1e057     02 01 01 01 
1e05b     03 06 04 00 
1e05f     FD FC FC F9 | 	byte	$07, $09, $08, $04, $02, $01, $01, $01, $03, $06, $04, $00, $fd, $fc, $fc, $f9
1e063     F6 F2 F0 F0 
1e067     F3 F4 F4 F4 
1e06b     F4 F5 F5 F6 
1e06f     F6 F6 F4 F3 | 	byte	$f6, $f2, $f0, $f0, $f3, $f4, $f4, $f4, $f4, $f5, $f5, $f6, $f6, $f6, $f4, $f3
1e073     F6 F8 F8 F6 
1e077     F7 F9 FC FF 
1e07b     03 02 FC F9 
1e07f     FD 00 00 FF | 	byte	$f6, $f8, $f8, $f6, $f7, $f9, $fc, $ff, $03, $02, $fc, $f9, $fd, $00, $00, $ff
1e083     03 04 04 06 
1e087     09 0A 08 07 
1e08b     07 0A 0A 07 
1e08f     03 00 00 03 | 	byte	$03, $04, $04, $06, $09, $0a, $08, $07, $07, $0a, $0a, $07, $03, $00, $00, $03
1e093     06 07 04 00 
1e097     00 FF FE FA 
1e09b     F6 F4 F1 F1 
1e09f     F2 F4 F5 F5 | 	byte	$06, $07, $04, $00, $00, $ff, $fe, $fa, $f6, $f4, $f1, $f1, $f2, $f4, $f5, $f5
1e0a3     F4 F4 F6 F7 
1e0a7     F7 F7 F4 F3 
1e0ab     F6 F9 F8 F5 
1e0af     F6 F9 FC FD | 	byte	$f4, $f4, $f6, $f7, $f7, $f7, $f4, $f3, $f6, $f9, $f8, $f5, $f6, $f9, $fc, $fd
1e0b3     02 04 00 FA 
1e0b7     FB FF 01 00 
1e0bb     01 03 04 06 
1e0bf     09 0A 08 07 | 	byte	$02, $04, $00, $fa, $fb, $ff, $01, $00, $01, $03, $04, $06, $09, $0a, $08, $07
1e0c3     08 0B 09 08 
1e0c7     03 01 01 01 
1e0cb     04 07 07 02 
1e0cf     FF FF FF FE | 	byte	$08, $0b, $09, $08, $03, $01, $01, $01, $04, $07, $07, $02, $ff, $ff, $ff, $fe
1e0d3     F9 F4 F2 F1 
1e0d7     F2 F3 F4 F5 
1e0db     F5 F6 F5 F5 
1e0df     F7 F8 F6 F2 | 	byte	$f9, $f4, $f2, $f1, $f2, $f3, $f4, $f5, $f5, $f6, $f5, $f5, $f7, $f8, $f6, $f2
1e0e3     F3 F8 F8 F5 
1e0e7     F3 F7 FB FD 
1e0eb     00 03 00 FB 
1e0ef     FA FF 00 00 | 	byte	$f3, $f8, $f8, $f5, $f3, $f7, $fb, $fd, $00, $03, $00, $fb, $fa, $ff, $00, $00
1e0f3     01 03 03 03 
1e0f7     07 0B 08 06 
1e0fb     06 0A 0B 08 
1e0ff     03 00 00 01 | 	byte	$01, $03, $03, $03, $07, $0b, $08, $06, $06, $0a, $0b, $08, $03, $00, $00, $01
1e103     03 06 07 04 
1e107     00 FE 00 00 
1e10b     FB F6 F2 F0 
1e10f     F2 F4 F5 F5 | 	byte	$03, $06, $07, $04, $00, $fe, $00, $00, $fb, $f6, $f2, $f0, $f2, $f4, $f5, $f5
1e113     F4 F4 F5 F5 
1e117     F5 F6 F6 F4 
1e11b     F2 F5 F8 F5 
1e11f     F3 F6 F9 FC | 	byte	$f4, $f4, $f5, $f5, $f5, $f6, $f6, $f4, $f2, $f5, $f8, $f5, $f3, $f6, $f9, $fc
1e123     FF 03 01 FC 
1e127     F9 FD 00 FF 
1e12b     FF 03 05 04 
1e12f     06 09 0A 07 | 	byte	$ff, $03, $01, $fc, $f9, $fd, $00, $ff, $ff, $03, $05, $04, $06, $09, $0a, $07
1e133     07 07 0A 0A 
1e137     06 01 00 00 
1e13b     03 06 07 05 
1e13f     00 00 FF FF | 	byte	$07, $07, $0a, $0a, $06, $01, $00, $00, $03, $06, $07, $05, $00, $00, $ff, $ff
1e143     FC F8 F3 F1 
1e147     F1 F1 F4 F5 
1e14b     F4 F4 F4 F5 
1e14f     F5 F7 F7 F4 | 	byte	$fc, $f8, $f3, $f1, $f1, $f1, $f4, $f5, $f4, $f4, $f4, $f5, $f5, $f7, $f7, $f4
1e153     F2 F5 F8 F5 
1e157     F2 F5 F9 FB 
1e15b     FC 01 03 FE 
1e15f     F9 F9 00 00 | 	byte	$f2, $f5, $f8, $f5, $f2, $f5, $f9, $fb, $fc, $01, $03, $fe, $f9, $f9, $00, $00
1e163     FF 01 03 04 
1e167     05 07 0A 08 
1e16b     07 07 0B 0A 
1e16f     06 02 00 00 | 	byte	$ff, $01, $03, $04, $05, $07, $0a, $08, $07, $07, $0b, $0a, $06, $02, $00, $00
1e173     01 03 07 06 
1e177     02 00 FE 00 
1e17b     FE F8 F3 F0 
1e17f     F0 F1 F3 F3 | 	byte	$01, $03, $07, $06, $02, $00, $fe, $00, $fe, $f8, $f3, $f0, $f0, $f1, $f3, $f3
1e183     F4 F6 F4 F3 
1e187     F3 F6 F7 F6 
1e18b     F1 F3 F8 F7 
1e18f     F3 F3 F7 FC | 	byte	$f4, $f6, $f4, $f3, $f3, $f6, $f7, $f6, $f1, $f3, $f8, $f7, $f3, $f3, $f7, $fc
1e193     FD 01 03 00 
1e197     FA FA FE FF 
1e19b     FE 01 03 03 
1e19f     03 07 0A 09 | 	byte	$fd, $01, $03, $00, $fa, $fa, $fe, $ff, $fe, $01, $03, $03, $03, $07, $0a, $09
1e1a3     07 07 0A 0B 
1e1a7     08 02 00 00 
1e1ab     02 04 06 06 
1e1af     04 00 FF 00 | 	byte	$07, $07, $0a, $0b, $08, $02, $00, $00, $02, $04, $06, $06, $04, $00, $ff, $00
1e1b3     00 FB F6 F1 
1e1b7     F0 F1 F3 F3 
1e1bb     F4 F5 F4 F4 
1e1bf     F3 F4 F6 F7 | 	byte	$00, $fb, $f6, $f1, $f0, $f1, $f3, $f3, $f4, $f5, $f4, $f4, $f3, $f4, $f6, $f7
1e1c3     F3 F1 F5 F6 
1e1c7     F4 F2 F6 F9 
1e1cb     FA FF 03 01 
1e1cf     FA F8 FC FF | 	byte	$f3, $f1, $f5, $f6, $f4, $f2, $f6, $f9, $fa, $ff, $03, $01, $fa, $f8, $fc, $ff
1e1d3     FD FE 02 03 
1e1d7     03 03 07 09 
1e1db     07 06 07 09 
1e1df     08 04 00 00 | 	byte	$fd, $fe, $02, $03, $03, $03, $07, $09, $07, $06, $07, $09, $08, $04, $00, $00
1e1e3     00 03 06 07 
1e1e7     04 00 FF 00 
1e1eb     FF FB F6 F2 
1e1ef     F0 EF F0 F3 | 	byte	$00, $03, $06, $07, $04, $00, $ff, $00, $ff, $fb, $f6, $f2, $f0, $ef, $f0, $f3
1e1f3     F5 F6 F4 F3 
1e1f7     F4 F5 F7 F8 
1e1fb     F5 F3 F6 F8 
1e1ff     F5 F3 F7 FB | 	byte	$f5, $f6, $f4, $f3, $f4, $f5, $f7, $f8, $f5, $f3, $f6, $f8, $f5, $f3, $f7, $fb
1e203     FC FE 04 04 
1e207     00 F9 FB FE 
1e20b     FF FF 02 03 
1e20f     03 05 08 09 | 	byte	$fc, $fe, $04, $04, $00, $f9, $fb, $fe, $ff, $ff, $02, $03, $03, $05, $08, $09
1e213     07 07 09 0B 
1e217     09 05 02 01 
1e21b     01 03 05 08 
1e21f     07 03 00 00 | 	byte	$07, $07, $09, $0b, $09, $05, $02, $01, $01, $03, $05, $08, $07, $03, $00, $00
1e223     01 FF F9 F3 
1e227     F1 F1 F1 F3 
1e22b     F4 F6 F6 F5 
1e22f     F4 F4 F7 FA | 	byte	$01, $ff, $f9, $f3, $f1, $f1, $f1, $f3, $f4, $f6, $f6, $f5, $f4, $f4, $f7, $fa
1e233     F7 F3 F4 F8 
1e237     F7 F4 F6 FA 
1e23b     FC FE 03 05 
1e23f     00 FA FB FE | 	byte	$f7, $f3, $f4, $f8, $f7, $f4, $f6, $fa, $fc, $fe, $03, $05, $00, $fa, $fb, $fe
1e243     FE 00 01 03 
1e247     02 03 07 09 
1e24b     08 07 07 09 
1e24f     0A 07 02 00 | 	byte	$fe, $00, $01, $03, $02, $03, $07, $09, $08, $07, $07, $09, $0a, $07, $02, $00
1e253     01 03 06 07 
1e257     07 04 01 FF 
1e25b     01 00 FC F5 
1e25f     F1 F0 F1 F3 | 	byte	$01, $03, $06, $07, $07, $04, $01, $ff, $01, $00, $fc, $f5, $f1, $f0, $f1, $f3
1e263     F5 F7 F6 F4 
1e267     F3 F4 F6 F8 
1e26b     F8 F3 F3 F6 
1e26f     F6 F4 F5 F8 | 	byte	$f5, $f7, $f6, $f4, $f3, $f4, $f6, $f8, $f8, $f3, $f3, $f6, $f6, $f4, $f5, $f8
1e273     FA FD 02 06 
1e277     01 F9 F9 FE 
1e27b     00 FE 00 02 
1e27f     02 03 06 09 | 	byte	$fa, $fd, $02, $06, $01, $f9, $f9, $fe, $00, $fe, $00, $02, $02, $03, $06, $09
1e283     08 07 07 09 
1e287     09 07 03 00 
1e28b     00 01 05 08 
1e28f     07 03 00 01 | 	byte	$08, $07, $07, $09, $09, $07, $03, $00, $00, $01, $05, $08, $07, $03, $00, $01
1e293     01 00 FC F5 
1e297     F2 F0 F0 F1 
1e29b     F3 F6 F6 F4 
1e29f     F2 F3 F7 F9 | 	byte	$01, $00, $fc, $f5, $f2, $f0, $f0, $f1, $f3, $f6, $f6, $f4, $f2, $f3, $f7, $f9
1e2a3     F7 F4 F3 F7 
1e2a7     F7 F3 F3 F8 
1e2ab     FB FD 00 04 
1e2af     03 FC F9 FC | 	byte	$f7, $f4, $f3, $f7, $f7, $f3, $f3, $f8, $fb, $fd, $00, $04, $03, $fc, $f9, $fc
1e2b3     FF FF 00 01 
1e2b7     02 02 05 09 
1e2bb     07 06 07 09 
1e2bf     09 07 03 00 | 	byte	$ff, $ff, $00, $01, $02, $02, $05, $09, $07, $06, $07, $09, $09, $07, $03, $00
1e2c3     00 01 03 07 
1e2c7     07 05 01 00 
1e2cb     01 01 FE F6 
1e2cf     F0 F0 F0 F1 | 	byte	$00, $01, $03, $07, $07, $05, $01, $00, $01, $01, $fe, $f6, $f0, $f0, $f0, $f1
1e2d3     F3 F4 F6 F6 
1e2d7     F3 F2 F4 F8 
1e2db     F8 F4 F2 F4 
1e2df     F7 F4 F3 F6 | 	byte	$f3, $f4, $f6, $f6, $f3, $f2, $f4, $f8, $f8, $f4, $f2, $f4, $f7, $f4, $f3, $f6
1e2e3     F9 FC FF 04 
1e2e7     02 FC FA FC 
1e2eb     FE FE FF 01 
1e2ef     02 03 03 08 | 	byte	$f9, $fc, $ff, $04, $02, $fc, $fa, $fc, $fe, $fe, $ff, $01, $02, $03, $03, $08
1e2f3     09 07 06 07 
1e2f7     09 08 04 01 
1e2fb     00 01 04 07 
1e2ff     07 06 02 01 | 	byte	$09, $07, $06, $07, $09, $08, $04, $01, $00, $01, $04, $07, $07, $06, $02, $01
1e303     02 01 00 F8 
1e307     F2 F0 EF F0 
1e30b     F3 F4 F6 F4 
1e30f     F3 F3 F4 F7 | 	byte	$02, $01, $00, $f8, $f2, $f0, $ef, $f0, $f3, $f4, $f6, $f4, $f3, $f3, $f4, $f7
1e313     F8 F4 F3 F5 
1e317     F6 F3 F3 F6 
1e31b     FA FB FF 03 
1e31f     04 FE F9 FB | 	byte	$f8, $f4, $f3, $f5, $f6, $f3, $f3, $f6, $fa, $fb, $ff, $03, $04, $fe, $f9, $fb
1e323     FE FE FE 00 
1e327     01 03 03 07 
1e32b     08 06 06 07 
1e32f     09 08 05 01 | 	byte	$fe, $fe, $fe, $00, $01, $03, $03, $07, $08, $06, $06, $07, $09, $08, $05, $01
1e333     00 00 03 07 
1e337     08 06 02 00 
1e33b     02 02 FF F8 
1e33f     F2 F0 EF F0 | 	byte	$00, $00, $03, $07, $08, $06, $02, $00, $02, $02, $ff, $f8, $f2, $f0, $ef, $f0
1e343     F1 F4 F6 F5 
1e347     F3 F2 F3 F7 
1e34b     F8 F4 F2 F4 
1e34f     F6 F4 F2 F3 | 	byte	$f1, $f4, $f6, $f5, $f3, $f2, $f3, $f7, $f8, $f4, $f2, $f4, $f6, $f4, $f2, $f3
1e353     F8 FB FF 01 
1e357     03 00 FA FB 
1e35b     FC FD FE FF 
1e35f     01 01 03 06 | 	byte	$f8, $fb, $ff, $01, $03, $00, $fa, $fb, $fc, $fd, $fe, $ff, $01, $01, $03, $06
1e363     07 07 05 06 
1e367     09 08 04 00 
1e36b     FF 01 02 05 
1e36f     07 06 03 01 | 	byte	$07, $07, $05, $06, $09, $08, $04, $00, $ff, $01, $02, $05, $07, $06, $03, $01
1e373     01 02 00 FA 
1e377     F3 EF EF F0 
1e37b     F1 F3 F5 F6 
1e37f     F4 F2 F3 F6 | 	byte	$01, $02, $00, $fa, $f3, $ef, $ef, $f0, $f1, $f3, $f5, $f6, $f4, $f2, $f3, $f6
1e383     F8 F7 F4 F3 
1e387     F5 F4 F3 F5 
1e38b     F8 FB FE 03 
1e38f     03 00 FC FB | 	byte	$f8, $f7, $f4, $f3, $f5, $f4, $f3, $f5, $f8, $fb, $fe, $03, $03, $00, $fc, $fb
1e393     FD FE FD FF 
1e397     02 03 05 06 
1e39b     08 08 07 07 
1e39f     09 0A 07 03 | 	byte	$fd, $fe, $fd, $ff, $02, $03, $05, $06, $08, $08, $07, $07, $09, $0a, $07, $03
1e3a3     01 01 03 06 
1e3a7     07 07 04 03 
1e3ab     03 03 00 FC 
1e3af     F6 F1 F0 F0 | 	byte	$01, $01, $03, $06, $07, $07, $04, $03, $03, $03, $00, $fc, $f6, $f1, $f0, $f0
1e3b3     F1 F3 F6 F6 
1e3b7     F6 F3 F3 F6 
1e3bb     F8 F8 F6 F5 
1e3bf     F6 F5 F3 F4 | 	byte	$f1, $f3, $f6, $f6, $f6, $f3, $f3, $f6, $f8, $f8, $f6, $f5, $f6, $f5, $f3, $f4
1e3c3     F9 FB FE 00 
1e3c7     04 03 FE FB 
1e3cb     FC FE FE FE 
1e3cf     01 03 05 06 | 	byte	$f9, $fb, $fe, $00, $04, $03, $fe, $fb, $fc, $fe, $fe, $fe, $01, $03, $05, $06
1e3d3     07 08 07 08 
1e3d7     09 0A 07 04 
1e3db     01 01 02 04 
1e3df     07 07 05 02 | 	byte	$07, $08, $07, $08, $09, $0a, $07, $04, $01, $01, $02, $04, $07, $07, $05, $02
1e3e3     02 04 02 FE 
1e3e7     F7 F2 F0 F0 
1e3eb     F0 F1 F4 F7 
1e3ef     F7 F4 F2 F5 | 	byte	$02, $04, $02, $fe, $f7, $f2, $f0, $f0, $f0, $f1, $f4, $f7, $f7, $f4, $f2, $f5
1e3f3     F8 F8 F7 F5 
1e3f7     F6 F5 F4 F3 
1e3fb     F7 FA FD FF 
1e3ff     03 03 00 FC | 	byte	$f8, $f8, $f7, $f5, $f6, $f5, $f4, $f3, $f7, $fa, $fd, $ff, $03, $03, $00, $fc
1e403     FC FC FD FE 
1e407     FF 03 03 05 
1e40b     07 08 07 07 
1e40f     09 0A 08 04 | 	byte	$fc, $fc, $fd, $fe, $ff, $03, $03, $05, $07, $08, $07, $07, $09, $0a, $08, $04
1e413     00 00 03 04 
1e417     07 07 06 04 
1e41b     03 03 02 00 
1e41f     F8 F3 F0 EF | 	byte	$00, $00, $03, $04, $07, $07, $06, $04, $03, $03, $02, $00, $f8, $f3, $f0, $ef
1e423     F1 F3 F4 F6 
1e427     F6 F4 F3 F4 
1e42b     F7 F8 F8 F6 
1e42f     F4 F4 F4 F4 | 	byte	$f1, $f3, $f4, $f6, $f6, $f4, $f3, $f4, $f7, $f8, $f8, $f6, $f4, $f4, $f4, $f4
1e433     F7 F9 FC 00 
1e437     03 03 FE FC 
1e43b     FC FB FC FC 
1e43f     FF 03 04 05 | 	byte	$f7, $f9, $fc, $00, $03, $03, $fe, $fc, $fc, $fb, $fc, $fc, $ff, $03, $04, $05
1e443     05 06 07 07 
1e447     07 09 07 05 
1e44b     01 00 01 04 
1e44f     06 07 04 03 | 	byte	$05, $06, $07, $07, $07, $09, $07, $05, $01, $00, $01, $04, $06, $07, $04, $03
1e453     04 04 03 00 
1e457     F8 F4 F0 EF 
1e45b     EF F0 F4 F6 
1e45f     F6 F3 F2 F3 | 	byte	$04, $04, $03, $00, $f8, $f4, $f0, $ef, $ef, $f0, $f4, $f6, $f6, $f3, $f2, $f3
1e463     F6 F7 F6 F5 
1e467     F4 F4 F3 F3 
1e46b     F5 F9 FC FE 
1e46f     01 03 01 FC | 	byte	$f6, $f7, $f6, $f5, $f4, $f4, $f3, $f3, $f5, $f9, $fc, $fe, $01, $03, $01, $fc
1e473     FA FB FC FD 
1e477     FE 01 04 06 
1e47b     06 07 07 07 
1e47f     08 09 08 05 | 	byte	$fa, $fb, $fc, $fd, $fe, $01, $04, $06, $06, $07, $07, $07, $08, $09, $08, $05
1e483     02 01 02 03 
1e487     05 06 06 05 
1e48b     03 03 04 00 
1e48f     FA F3 F0 EF | 	byte	$02, $01, $02, $03, $05, $06, $06, $05, $03, $03, $04, $00, $fa, $f3, $f0, $ef
1e493     F0 F0 F3 F5 
1e497     F7 F4 F2 F2 
1e49b     F4 F7 F7 F5 
1e49f     F3 F3 F3 F3 | 	byte	$f0, $f0, $f3, $f5, $f7, $f4, $f2, $f2, $f4, $f7, $f7, $f5, $f3, $f3, $f3, $f3
1e4a3     F3 F7 FB FF 
1e4a7     01 01 00 FE 
1e4ab     FA FA FB FC 
1e4af     FE 00 03 04 | 	byte	$f3, $f7, $fb, $ff, $01, $01, $00, $fe, $fa, $fa, $fb, $fc, $fe, $00, $03, $04
1e4b3     05 07 07 06 
1e4b7     07 09 09 06 
1e4bb     02 00 02 04 
1e4bf     06 06 06 06 | 	byte	$05, $07, $07, $06, $07, $09, $09, $06, $02, $00, $02, $04, $06, $06, $06, $06
1e4c3     04 04 03 00 
1e4c7     FC F5 F1 EF 
1e4cb     EF F0 F3 F5 
1e4cf     F5 F4 F3 F2 | 	byte	$04, $04, $03, $00, $fc, $f5, $f1, $ef, $ef, $f0, $f3, $f5, $f5, $f4, $f3, $f2
1e4d3     F3 F5 F6 F6 
1e4d7     F4 F2 F2 F3 
1e4db     F3 F6 F9 FD 
1e4df     00 01 01 FE | 	byte	$f3, $f5, $f6, $f6, $f4, $f2, $f2, $f3, $f3, $f6, $f9, $fd, $00, $01, $01, $fe
1e4e3     F9 F9 FB FB 
1e4e7     FB FF 03 04 
1e4eb     05 05 06 07 
1e4ef     07 09 08 07 | 	byte	$f9, $f9, $fb, $fb, $fb, $ff, $03, $04, $05, $05, $06, $07, $07, $09, $08, $07
1e4f3     03 01 01 03 
1e4f7     05 07 06 04 
1e4fb     03 05 04 01 
1e4ff     FC F6 F2 EF | 	byte	$03, $01, $01, $03, $05, $07, $06, $04, $03, $05, $04, $01, $fc, $f6, $f2, $ef
1e503     EE EF F1 F4 
1e507     F4 F4 F2 F2 
1e50b     F4 F5 F6 F6 
1e50f     F6 F4 F3 F3 | 	byte	$ee, $ef, $f1, $f4, $f4, $f4, $f2, $f2, $f4, $f5, $f6, $f6, $f6, $f4, $f3, $f3
1e513     F3 F5 FA FE 
1e517     FF 01 02 01 
1e51b     FD F9 FA FC 
1e51f     FC FF 02 05 | 	byte	$f3, $f5, $fa, $fe, $ff, $01, $02, $01, $fd, $f9, $fa, $fc, $fc, $ff, $02, $05
1e523     06 06 07 07 
1e527     07 09 0A 08 
1e52b     05 02 01 03 
1e52f     05 06 07 07 | 	byte	$06, $06, $07, $07, $07, $09, $0a, $08, $05, $02, $01, $03, $05, $06, $07, $07
1e533     06 05 04 04 
1e537     00 F9 F3 F0 
1e53b     F0 F0 F1 F3 
1e53f     F6 F6 F4 F3 | 	byte	$06, $05, $04, $04, $00, $f9, $f3, $f0, $f0, $f0, $f1, $f3, $f6, $f6, $f4, $f3
1e543     F4 F5 F7 F8 
1e547     F7 F4 F4 F5 
1e54b     F4 F5 F8 FE 
1e54f     00 01 01 02 | 	byte	$f4, $f5, $f7, $f8, $f7, $f4, $f4, $f5, $f4, $f5, $f8, $fe, $00, $01, $01, $02
1e553     00 FB FA FB 
1e557     FC FE 01 06 
1e55b     06 05 07 07 
1e55f     07 00 00 00 | 	byte	$00, $fb, $fa, $fb, $fc, $fe, $01, $06, $06, $05, $07, $07, $07, $00, $00, $00
1e563     00 00 00 00 
1e567     00 00 00 00 
1e56b     00 00 00 00 
1e56f     00 00 00 00 
1e573     00 00 00 00 
1e577     00 00 00    | 	byte	$00[23]
1e57a     F7 04 F9 05 
1e57e     FC FF 30 C4 
1e582     4F 40 A8 DF 
1e586     7C 57 20 C7 | 	byte	$f7, $04, $f9, $05, $fc, $ff, $30, $c4, $4f, $40, $a8, $df, $7c, $57, $20, $c7
1e58a     1F 70 60 06 
1e58e     D4 E7 54 38 
1e592     37 63 00 BB 
1e596     67 4F 46 A4 | 	byte	$1f, $70, $60, $06, $d4, $e7, $54, $38, $37, $63, $00, $bb, $67, $4f, $46, $a4
1e59a     3F 60 2E 29 
1e59e     39 5B 18 CF 
1e5a2     1D 38 33 46 
1e5a6     18 1F 20 0F | 	byte	$3f, $60, $2e, $29, $39, $5b, $18, $cf, $1d, $38, $33, $46, $18, $1f, $20, $0f
1e5aa     21 21 2B 1C 
1e5ae     FF 27 18 0E 
1e5b2     E8 F9 07 FA 
1e5b6     F1 FC D0 A0 | 	byte	$21, $21, $2b, $1c, $ff, $27, $18, $0e, $e8, $f9, $07, $fa, $f1, $fc, $d0, $a0
1e5ba     CF 0C 00 E4 
1e5be     90 AF D9 D9 
1e5c2     E4 AC AF 98 
1e5c6     C7 EC B0 B3 | 	byte	$cf, $0c, $00, $e4, $90, $af, $d9, $d9, $e4, $ac, $af, $98, $c7, $ec, $b0, $b3
1e5ca     B9 B6 B2 AF 
1e5ce     BB C1 BF C5 
1e5d2     BA BC C6 C6 
1e5d6     C7 C1 C7 CB | 	byte	$b9, $b6, $b2, $af, $bb, $c1, $bf, $c5, $ba, $bc, $c6, $c6, $c7, $c1, $c7, $cb
1e5da     CB D6 CF C6 
1e5de     C5 D3 DB D8 
1e5e2     D6 CC D3 DA 
1e5e6     E7 E5 D3 DC | 	byte	$cb, $d6, $cf, $c6, $c5, $d3, $db, $d8, $d6, $cc, $d3, $da, $e7, $e5, $d3, $dc
1e5ea     DA F8 F1 E7 
1e5ee     05 00 E6 F7 
1e5f2     0F 41 30 E8 
1e5f6     EF 3F 5C 4E | 	byte	$da, $f8, $f1, $e7, $05, $00, $e6, $f7, $0f, $41, $30, $e8, $ef, $3f, $5c, $4e
1e5fa     30 F8 0F 77 
1e5fe     7E 48 24 27 
1e602     3F 6E 62 63 
1e606     64 26 2F 5D | 	byte	$30, $f8, $0f, $77, $7e, $48, $24, $27, $3f, $6e, $62, $63, $64, $26, $2f, $5d
1e60a     60 57 60 67 
1e60e     40 2E 53 57 
1e612     54 53 45 41 
1e616     43 4C 56 48 | 	byte	$60, $57, $60, $67, $40, $2e, $53, $57, $54, $53, $45, $41, $43, $4c, $56, $48
1e61a     3B 38 40 47 
1e61e     41 38 29 37 
1e622     43 34 30 28 
1e626     29 2B 31 2C | 	byte	$3b, $38, $40, $47, $41, $38, $29, $37, $43, $34, $30, $28, $29, $2b, $31, $2c
1e62a     2B 26 18 1E 
1e62e     26 1F 1E 1C 
1e632     19 12 15 17 
1e636     13 13 0F 0F | 	byte	$2b, $26, $18, $1e, $26, $1f, $1e, $1c, $19, $12, $15, $17, $13, $13, $0f, $0f
1e63a     0F 10 FC 03 
1e63e     07 07 08 F4 
1e642     F4 F0 E8 DC 
1e646     E7 F3 F0 D4 | 	byte	$0f, $10, $fc, $03, $07, $07, $08, $f4, $f4, $f0, $e8, $dc, $e7, $f3, $f0, $d4
1e64a     C7 CF D9 D6 
1e64e     D7 D9 C1 B3 
1e652     BB C7 D6 CC 
1e656     B1 AA AD BC | 	byte	$c7, $cf, $d9, $d6, $d7, $d9, $c1, $b3, $bb, $c7, $d6, $cc, $b1, $aa, $ad, $bc
1e65a     CE B8 A2 B7 
1e65e     C0 AE A3 B9 
1e662     BF BE B1 9F 
1e666     B3 C6 B5 BD | 	byte	$ce, $b8, $a2, $b7, $c0, $ae, $a3, $b9, $bf, $be, $b1, $9f, $b3, $c6, $b5, $bd
1e66a     BA B3 B9 C7 
1e66e     CF B8 B3 BF 
1e672     BF D3 E6 D8 
1e676     C9 CE C6 C5 | 	byte	$ba, $b3, $b9, $c7, $cf, $b8, $b3, $bf, $bf, $d3, $e6, $d8, $c9, $ce, $c6, $c5
1e67a     D7 F3 F8 E9 
1e67e     DE D3 DF F5 
1e682     E8 EF 0F 0C 
1e686     EC D3 EF 0F | 	byte	$d7, $f3, $f8, $e9, $de, $d3, $df, $f5, $e8, $ef, $0f, $0c, $ec, $d3, $ef, $0f
1e68a     08 07 00 F0 
1e68e     FF 00 0E 18 
1e692     00 E9 F5 0C 
1e696     16 06 FF 09 | 	byte	$08, $07, $00, $f0, $ff, $00, $0e, $18, $00, $e9, $f5, $0c, $16, $06, $ff, $09
1e69a     01 03 01 0B 
1e69e     11 04 06 0A 
1e6a2     FC FF 00 03 
1e6a6     00 F9 07 0F | 	byte	$01, $03, $01, $0b, $11, $04, $06, $0a, $fc, $ff, $00, $03, $00, $f9, $07, $0f
1e6aa     02 01 EB F3 
1e6ae     F4 FC 03 F8 
1e6b2     EF F8 EE FF 
1e6b6     FC E8 DC DF | 	byte	$02, $01, $eb, $f3, $f4, $fc, $03, $f8, $ef, $f8, $ee, $ff, $fc, $e8, $dc, $df
1e6ba     FB 01 E8 E9 
1e6be     E9 E3 EF ED 
1e6c2     EF F0 E7 F4 
1e6c6     F6 F3 F2 F0 | 	byte	$fb, $01, $e8, $e9, $e9, $e3, $ef, $ed, $ef, $f0, $e7, $f4, $f6, $f3, $f2, $f0
1e6ca     F3 F0 ED F8 
1e6ce     F4 FB 00 EC 
1e6d2     F9 FF F5 FC 
1e6d6     FF FF FC F6 | 	byte	$f3, $f0, $ed, $f8, $f4, $fb, $00, $ec, $f9, $ff, $f5, $fc, $ff, $ff, $fc, $f6
1e6da     F6 FF 00 F8 
1e6de     ED 0B 03 07 
1e6e2     00 F6 F7 FE 
1e6e6     16 11 FC F9 | 	byte	$f6, $ff, $00, $f8, $ed, $0b, $03, $07, $00, $f6, $f7, $fe, $16, $11, $fc, $f9
1e6ea     09 03 0F 11 
1e6ee     0E 0D 0F 13 
1e6f2     1C 19 16 15 
1e6f6     1C 24 13 16 | 	byte	$09, $03, $0f, $11, $0e, $0d, $0f, $13, $1c, $19, $16, $15, $1c, $24, $13, $16
1e6fa     15 1F 23 19 
1e6fe     19 1F 1C 1F 
1e702     18 0F 27 18 
1e706     19 1F 0E 18 | 	byte	$15, $1f, $23, $19, $19, $1f, $1c, $1f, $18, $0f, $27, $18, $19, $1f, $0e, $18
1e70a     0A 27 30 08 
1e70e     FD 0F 1F 23 
1e712     1F 17 11 1C 
1e716     27 26 18 1E | 	byte	$0a, $27, $30, $08, $fd, $0f, $1f, $23, $1f, $17, $11, $1c, $27, $26, $18, $1e
1e71a     29 22 31 2A 
1e71e     31 31 29 2E 
1e722     23 39 43 3C 
1e726     44 40 40 38 | 	byte	$29, $22, $31, $2a, $31, $31, $29, $2e, $23, $39, $43, $3c, $44, $40, $40, $38
1e72a     3C 4B 4D 4C 
1e72e     41 53 58 54 
1e732     47 46 46 58 
1e736     61 53 55 49 | 	byte	$3c, $4b, $4d, $4c, $41, $53, $58, $54, $47, $46, $46, $58, $61, $53, $55, $49
1e73a     47 5D 60 4F 
1e73e     54 46 57 58 
1e742     47 4B 40 47 
1e746     48 2D 41 40 | 	byte	$47, $5d, $60, $4f, $54, $46, $57, $58, $47, $4b, $40, $47, $48, $2d, $41, $40
1e74a     40 30 34 33 
1e74e     31 27 30 2A 
1e752     26 21 23 26 
1e756     18 0F 1D 18 | 	byte	$40, $30, $34, $33, $31, $27, $30, $2a, $26, $21, $23, $26, $18, $0f, $1d, $18
1e75a     13 17 10 11 
1e75e     09 07 16 08 
1e762     03 FF FC FF 
1e766     F6 FB F8 E1 | 	byte	$13, $17, $10, $11, $09, $07, $16, $08, $03, $ff, $fc, $ff, $f6, $fb, $f8, $e1
1e76a     E0 EB EB E1 
1e76e     D8 D7 E2 D9 
1e772     D7 D3 C9 D1 
1e776     C4 C9 C9 C4 | 	byte	$e0, $eb, $eb, $e1, $d8, $d7, $e2, $d9, $d7, $d3, $c9, $d1, $c4, $c9, $c9, $c4
1e77a     BF C0 D5 CC 
1e77e     C3 B5 B6 B9 
1e782     C6 C7 CA B5 
1e786     B3 C7 B8 B6 | 	byte	$bf, $c0, $d5, $cc, $c3, $b5, $b6, $b9, $c6, $c7, $ca, $b5, $b3, $c7, $b8, $b6
1e78a     B8 BD CE B4 
1e78e     A7 C7 C4 BF 
1e792     B1 BC BF C1 
1e796     BD C7 CF C3 | 	byte	$b8, $bd, $ce, $b4, $a7, $c7, $c4, $bf, $b1, $bc, $bf, $c1, $bd, $c7, $cf, $c3
1e79a     B8 BB D7 CF 
1e79e     D8 D9 C4 C7 
1e7a2     D7 E4 EE CC 
1e7a6     D7 E0 EA 09 | 	byte	$b8, $bb, $d7, $cf, $d8, $d9, $c4, $c7, $d7, $e4, $ee, $cc, $d7, $e0, $ea, $09
1e7aa     E8 D3 E8 F3 
1e7ae     09 F6 EC F3 
1e7b2     F9 13 07 F8 
1e7b6     EB 0F 1E 0F | 	byte	$e8, $d3, $e8, $f3, $09, $f6, $ec, $f3, $f9, $13, $07, $f8, $eb, $0f, $1e, $0f
1e7ba     FC F4 09 0F 
1e7be     1B 1E 02 03 
1e7c2     05 19 19 08 
1e7c6     0B 18 0F 0C | 	byte	$fc, $f4, $09, $0f, $1b, $1e, $02, $03, $05, $19, $19, $08, $0b, $18, $0f, $0c
1e7ca     13 13 04 07 
1e7ce     08 09 01 FF 
1e7d2     11 00 F3 FB 
1e7d6     FF 0C F8 E5 | 	byte	$13, $13, $04, $07, $08, $09, $01, $ff, $11, $00, $f3, $fb, $ff, $0c, $f8, $e5
1e7da     F1 F8 EE F0 
1e7de     F1 EC D4 E7 
1e7e2     E4 E8 D8 D3 
1e7e6     D9 EB E9 CE | 	byte	$f1, $f8, $ee, $f0, $f1, $ec, $d4, $e7, $e4, $e8, $d8, $d3, $d9, $eb, $e9, $ce
1e7ea     D5 DA D7 DC 
1e7ee     D8 DC D0 C7 
1e7f2     D7 DD DC D0 
1e7f6     C7 DF D5 D6 | 	byte	$d5, $da, $d7, $dc, $d8, $dc, $d0, $c7, $d7, $dd, $dc, $d0, $c7, $df, $d5, $d6
1e7fa     D5 E0 D6 CB 
1e7fe     DE DC DF EC 
1e802     DC D8 D3 E7 
1e806     F0 E2 DA E3 | 	byte	$d5, $e0, $d6, $cb, $de, $dc, $df, $ec, $dc, $d8, $d3, $e7, $f0, $e2, $da, $e3
1e80a     F9 F8 E1 EE 
1e80e     FC 01 F8 FB 
1e812     03 FF 0F 10 
1e816     06 0B 19 1F | 	byte	$f9, $f8, $e1, $ee, $fc, $01, $f8, $fb, $03, $ff, $0f, $10, $06, $0b, $19, $1f
1e81a     1C 1E 1D 1E 
1e81e     33 30 33 29 
1e822     2F 3C 41 47 
1e826     38 38 41 43 | 	byte	$1c, $1e, $1d, $1e, $33, $30, $33, $29, $2f, $3c, $41, $47, $38, $38, $41, $43
1e82a     4C 47 55 48 
1e82e     45 4F 51 63 
1e832     58 46 53 57 
1e836     60 4F 56 51 | 	byte	$4c, $47, $55, $48, $45, $4f, $51, $63, $58, $46, $53, $57, $60, $4f, $56, $51
1e83a     53 49 51 58 
1e83e     4C 4F 56 4F 
1e842     47 47 46 44 
1e846     43 39 40 34 | 	byte	$53, $49, $51, $58, $4c, $4f, $56, $4f, $47, $47, $46, $44, $43, $39, $40, $34
1e84a     39 30 30 31 
1e84e     2B 26 27 24 
1e852     1C 13 1C 21 
1e856     19 00 0C 07 | 	byte	$39, $30, $30, $31, $2b, $26, $27, $24, $1c, $13, $1c, $21, $19, $00, $0c, $07
1e85a     0D 0A F8 F6 
1e85e     F9 F9 F8 F0 
1e862     EA D4 CF E3 
1e866     DB E1 D3 CC | 	byte	$0d, $0a, $f8, $f6, $f9, $f9, $f8, $f0, $ea, $d4, $cf, $e3, $db, $e1, $d3, $cc
1e86a     B8 BC C7 D1 
1e86e     C5 AC B5 B8 
1e872     B1 BC A9 B1 
1e876     B2 BB B0 9F | 	byte	$b8, $bc, $c7, $d1, $c5, $ac, $b5, $b8, $b1, $bc, $a9, $b1, $b2, $bb, $b0, $9f
1e87a     AB AA BC AA 
1e87e     B4 B3 B3 B5 
1e882     AE A7 B1 B6 
1e886     B9 A9 AB B4 | 	byte	$ab, $aa, $bc, $aa, $b4, $b3, $b3, $b5, $ae, $a7, $b1, $b6, $b9, $a9, $ab, $b4
1e88a     AD BC B5 B6 
1e88e     BA AE B3 BC 
1e892     BF BB BF BB 
1e896     B3 C3 C7 BF | 	byte	$ad, $bc, $b5, $b6, $ba, $ae, $b3, $bc, $bf, $bb, $bf, $bb, $b3, $c3, $c7, $bf
1e89a     CA BF CF CE 
1e89e     CF D7 CB D3 
1e8a2     DF E6 E7 DB 
1e8a6     DE E7 F3 F4 | 	byte	$ca, $bf, $cf, $ce, $cf, $d7, $cb, $d3, $df, $e6, $e7, $db, $de, $e7, $f3, $f4
1e8aa     EE F0 F0 FB 
1e8ae     F6 07 00 FF 
1e8b2     03 F0 EF 07 
1e8b6     0D 18 01 FF | 	byte	$ee, $f0, $f0, $fb, $f6, $07, $00, $ff, $03, $f0, $ef, $07, $0d, $18, $01, $ff
1e8ba     04 07 13 FF 
1e8be     08 FE 0D 0F 
1e8c2     10 00 FB 09 
1e8c6     13 14 0E 01 | 	byte	$04, $07, $13, $ff, $08, $fe, $0d, $0f, $10, $00, $fb, $09, $13, $14, $0e, $01
1e8ca     01 0B 1B 10 
1e8ce     07 14 19 15 
1e8d2     0E 07 19 1E 
1e8d6     19 13 19 1D | 	byte	$01, $0b, $1b, $10, $07, $14, $19, $15, $0e, $07, $19, $1e, $19, $13, $19, $1d
1e8da     1F 18 1A 1C 
1e8de     1F 1C 25 21 
1e8e2     19 23 23 2A 
1e8e6     20 18 2F 23 | 	byte	$1f, $18, $1a, $1c, $1f, $1c, $25, $21, $19, $23, $23, $2a, $20, $18, $2f, $23
1e8ea     23 1C 1F 2C 
1e8ee     26 1A 1B 1C 
1e8f2     23 2C 1C 0F 
1e8f6     1D 1F 27 1C | 	byte	$23, $1c, $1f, $2c, $26, $1a, $1b, $1c, $23, $2c, $1c, $0f, $1d, $1f, $27, $1c
1e8fa     15 1E 13 26 
1e8fe     1C 23 21 08 
1e902     19 1C 2B 2A 
1e906     18 11 1C 1F | 	byte	$15, $1e, $13, $26, $1c, $23, $21, $08, $19, $1c, $2b, $2a, $18, $11, $1c, $1f
1e90a     2B 26 21 1C 
1e90e     1F 2C 2C 1A 
1e912     1F 23 31 28 
1e916     2B 27 2A 23 | 	byte	$2b, $26, $21, $1c, $1f, $2c, $2c, $1a, $1f, $23, $31, $28, $2b, $27, $2a, $23
1e91a     29 2A 27 2B 
1e91e     27 33 38 27 
1e922     2C 23 27 31 
1e926     27 35 27 1F | 	byte	$29, $2a, $27, $2b, $27, $33, $38, $27, $2c, $23, $27, $31, $27, $35, $27, $1f
1e92a     2B 31 26 22 
1e92e     21 2A 21 25 
1e932     29 28 17 1D 
1e936     27 30 22 18 | 	byte	$2b, $31, $26, $22, $21, $2a, $21, $25, $29, $28, $17, $1d, $27, $30, $22, $18
1e93a     17 19 1B 23 
1e93e     30 1F 07 1B 
1e942     27 32 1C 0B 
1e946     1B 2B 2C 23 | 	byte	$17, $19, $1b, $23, $30, $1f, $07, $1b, $27, $32, $1c, $0b, $1b, $2b, $2c, $23
1e94a     1C 19 1C 1F 
1e94e     2B 30 1C 19 
1e952     0B 27 2C 1A 
1e956     17 10 18 1F | 	byte	$1c, $19, $1c, $1f, $2b, $30, $1c, $19, $0b, $27, $2c, $1a, $17, $10, $18, $1f
1e95a     1F 20 0F 0F 
1e95e     0C 0B 1C 14 
1e962     07 07 0F 0A 
1e966     0B 06 05 07 | 	byte	$1f, $20, $0f, $0f, $0c, $0b, $1c, $14, $07, $07, $0f, $0a, $0b, $06, $05, $07
1e96a     09 01 07 07 
1e96e     0A 01 03 02 
1e972     F8 FF 0C 03 
1e976     00 FC F9 03 | 	byte	$09, $01, $07, $07, $0a, $01, $03, $02, $f8, $ff, $0c, $03, $00, $fc, $f9, $03
1e97a     02 FA F6 F9 
1e97e     F6 F3 F8 F3 
1e982     F1 EC F0 EE 
1e986     F0 F1 EB DB | 	byte	$02, $fa, $f6, $f9, $f6, $f3, $f8, $f3, $f1, $ec, $f0, $ee, $f0, $f1, $eb, $db
1e98a     D5 EB F3 E0 
1e98e     CF CE D3 E6 
1e992     D3 CF C9 C7 
1e996     CB D7 DE C8 | 	byte	$d5, $eb, $f3, $e0, $cf, $ce, $d3, $e6, $d3, $cf, $c9, $c7, $cb, $d7, $de, $c8
1e99a     BE B3 BF E7 
1e99e     D3 C3 B8 C3 
1e9a2     CE C9 C9 BF 
1e9a6     BF BF CB CB | 	byte	$be, $b3, $bf, $e7, $d3, $c3, $b8, $c3, $ce, $c9, $c9, $bf, $bf, $bf, $cb, $cb
1e9aa     C8 B5 C3 C6 
1e9ae     C3 BF D7 D4 
1e9b2     C0 B6 BB CF 
1e9b6     CE CF D8 BB | 	byte	$c8, $b5, $c3, $c6, $c3, $bf, $d7, $d4, $c0, $b6, $bb, $cf, $ce, $cf, $d8, $bb
1e9ba     C7 D1 D3 D3 
1e9be     CC D7 E4 D9 
1e9c2     D3 D5 EB EC 
1e9c6     D8 DD E3 F3 | 	byte	$c7, $d1, $d3, $d3, $cc, $d7, $e4, $d9, $d3, $d5, $eb, $ec, $d8, $dd, $e3, $f3
1e9ca     F6 E7 E0 EF 
1e9ce     00 F0 E8 F3 
1e9d2     F5 F8 F8 FF 
1e9d6     F0 EF F3 F0 | 	byte	$f6, $e7, $e0, $ef, $00, $f0, $e8, $f3, $f5, $f8, $f8, $ff, $f0, $ef, $f3, $f0
1e9da     05 F6 F1 FE 
1e9de     F8 EF F9 00 
1e9e2     F6 F0 ED F5 
1e9e6     FB 00 F8 EC | 	byte	$05, $f6, $f1, $fe, $f8, $ef, $f9, $00, $f6, $f0, $ed, $f5, $fb, $00, $f8, $ec
1e9ea     F7 F8 F7 FF 
1e9ee     00 FE F5 F7 
1e9f2     07 03 F6 F1 
1e9f6     FF 07 04 F8 | 	byte	$f7, $f8, $f7, $ff, $00, $fe, $f5, $f7, $07, $03, $f6, $f1, $ff, $07, $04, $f8
1e9fa     03 F3 F5 09 
1e9fe     11 F9 FD 02 
1ea02     FE 01 06 03 
1ea06     06 02 00 07 | 	byte	$03, $f3, $f5, $09, $11, $f9, $fd, $02, $fe, $01, $06, $03, $06, $02, $00, $07
1ea0a     0B 03 03 07 
1ea0e     07 FC 0D 0C 
1ea12     02 FC 14 0C 
1ea16     FF 09 16 03 | 	byte	$0b, $03, $03, $07, $07, $fc, $0d, $0c, $02, $fc, $14, $0c, $ff, $09, $16, $03
1ea1a     09 07 07 0F 
1ea1e     0C 00 0E 00 
1ea22     03 0C 10 09 
1ea26     F9 FF 09 03 | 	byte	$09, $07, $07, $0f, $0c, $00, $0e, $00, $03, $0c, $10, $09, $f9, $ff, $09, $03
1ea2a     03 FE 07 00 
1ea2e     FC FB 07 08 
1ea32     F4 F5 FB 07 
1ea36     0C F4 F9 F8 | 	byte	$03, $fe, $07, $00, $fc, $fb, $07, $08, $f4, $f5, $fb, $07, $0c, $f4, $f9, $f8
1ea3a     01 09 00 01 
1ea3e     F8 FF 0C 09 
1ea42     FE 01 06 02 
1ea46     05 0B 00 09 | 	byte	$01, $09, $00, $01, $f8, $ff, $0c, $09, $fe, $01, $06, $02, $05, $0b, $00, $09
1ea4a     0C 09 07 0B 
1ea4e     13 11 00 0B 
1ea52     0F 11 1D 0C 
1ea56     FC 0B 18 18 | 	byte	$0c, $09, $07, $0b, $13, $11, $00, $0b, $0f, $11, $1d, $0c, $fc, $0b, $18, $18
1ea5a     0F 01 0F 16 
1ea5e     19 13 0C 0B 
1ea62     19 0E 1C 09 
1ea66     09 1F 1C 17 | 	byte	$0f, $01, $0f, $16, $19, $13, $0c, $0b, $19, $0e, $1c, $09, $09, $1f, $1c, $17
1ea6a     10 07 17 14 
1ea6e     0E 17 23 14 
1ea72     07 0C 19 18 
1ea76     0F 17 19 0A | 	byte	$10, $07, $17, $14, $0e, $17, $23, $14, $07, $0c, $19, $18, $0f, $17, $19, $0a
1ea7a     0C 11 13 0E 
1ea7e     0C 07 0F 0F 
1ea82     04 F8 0C 07 
1ea86     00 07 FC FB | 	byte	$0c, $11, $13, $0e, $0c, $07, $0f, $0f, $04, $f8, $0c, $07, $00, $07, $fc, $fb
1ea8a     FE FC F2 FB 
1ea8e     F8 F9 F2 F5 
1ea92     F1 F1 F0 F1 
1ea96     EF F3 EC E7 | 	byte	$fe, $fc, $f2, $fb, $f8, $f9, $f2, $f5, $f1, $f1, $f0, $f1, $ef, $f3, $ec, $e7
1ea9a     FB F8 EC F0 
1ea9e     E7 F5 F6 F3 
1eaa2     F3 F1 F6 F4 
1eaa6     F3 FF 07 F8 | 	byte	$fb, $f8, $ec, $f0, $e7, $f5, $f6, $f3, $f3, $f1, $f6, $f4, $f3, $ff, $07, $f8
1eaaa     F8 FC 06 09 
1eaae     07 0C 07 07 
1eab2     0C 03 0C 18 
1eab6     03 0E 07 0E | 	byte	$f8, $fc, $06, $09, $07, $0c, $07, $07, $0c, $03, $0c, $18, $03, $0e, $07, $0e
1eaba     19 13 0D 09 
1eabe     0B 14 13 18 
1eac2     00 03 0F 14 
1eac6     0F 0F 05 07 | 	byte	$19, $13, $0d, $09, $0b, $14, $13, $18, $00, $03, $0f, $14, $0f, $0f, $05, $07
1eaca     07 0B 0C 03 
1eace     03 0E 0E 08 
1ead2     FE 01 07 08 
1ead6     05 0E 08 FF | 	byte	$07, $0b, $0c, $03, $03, $0e, $0e, $08, $fe, $01, $07, $08, $05, $0e, $08, $ff
1eada     00 01 0F 10 
1eade     03 FE FF 0F 
1eae2     13 08 0E 02 
1eae6     00 07 1A 0C | 	byte	$00, $01, $0f, $10, $03, $fe, $ff, $0f, $13, $08, $0e, $02, $00, $07, $1a, $0c
1eaea     03 0B 07 0C 
1eaee     0F 06 03 03 
1eaf2     04 0D 13 04 
1eaf6     FC FF 0C 03 | 	byte	$03, $0b, $07, $0c, $0f, $06, $03, $03, $04, $0d, $13, $04, $fc, $ff, $0c, $03
1eafa     01 FE 09 06 
1eafe     01 FF 09 03 
1eb02     FC FE 0F 0B 
1eb06     13 07 01 04 | 	byte	$01, $fe, $09, $06, $01, $ff, $09, $03, $fc, $fe, $0f, $0b, $13, $07, $01, $04
1eb0a     03 19 16 03 
1eb0e     04 07 0D 13 
1eb12     11 0E 04 0C 
1eb16     0F 0A 0A 0A | 	byte	$03, $19, $16, $03, $04, $07, $0d, $13, $11, $0e, $04, $0c, $0f, $0a, $0a, $0a
1eb1a     0C 04 05 03 
1eb1e     FF 0E 00 06 
1eb22     FB F9 00 F8 
1eb26     FB FF F6 F6 | 	byte	$0c, $04, $05, $03, $ff, $0e, $00, $06, $fb, $f9, $00, $f8, $fb, $ff, $f6, $f6
1eb2a     EB FE F6 ED 
1eb2e     F3 F3 F7 F0 
1eb32     FB F0 EC F0 
1eb36     E6 F7 F4 F0 | 	byte	$eb, $fe, $f6, $ed, $f3, $f3, $f7, $f0, $fb, $f0, $ec, $f0, $e6, $f7, $f4, $f0
1eb3a     F0 E7 F3 EE 
1eb3e     F0 EE E9 F0 
1eb42     F0 F3 F0 E7 
1eb46     EC F3 F4 EC | 	byte	$f0, $e7, $f3, $ee, $f0, $ee, $e9, $f0, $f0, $f3, $f0, $e7, $ec, $f3, $f4, $ec
1eb4a     E7 F0 E7 F9 
1eb4e     F3 F9 E8 E3 
1eb52     F3 F9 F8 F8 
1eb56     E7 F3 F6 FD | 	byte	$e7, $f0, $e7, $f9, $f3, $f9, $e8, $e3, $f3, $f9, $f8, $f8, $e7, $f3, $f6, $fd
1eb5a     FA FC F8 F8 
1eb5e     FF 04 FF 01 
1eb62     09 0A F6 FB 
1eb66     0F 15 12 06 | 	byte	$fa, $fc, $f8, $f8, $ff, $04, $ff, $01, $09, $0a, $f6, $fb, $0f, $15, $12, $06
1eb6a     0D 09 0B 18 
1eb6e     16 14 0F 0E 
1eb72     18 14 0C 1E 
1eb76     1F 1C 0C 0D | 	byte	$0d, $09, $0b, $18, $16, $14, $0f, $0e, $18, $14, $0c, $1e, $1f, $1c, $0c, $0d
1eb7a     1D 23 1F 11 
1eb7e     11 17 1C 18 
1eb82     1D 1E 0E 15 
1eb86     22 16 1F 13 | 	byte	$1d, $23, $1f, $11, $11, $17, $1c, $18, $1d, $1e, $0e, $15, $22, $16, $1f, $13
1eb8a     18 16 18 1A 
1eb8e     11 19 16 0F 
1eb92     18 18 18 14 
1eb96     0F 13 19 23 | 	byte	$18, $16, $18, $1a, $11, $19, $16, $0f, $18, $18, $18, $14, $0f, $13, $19, $23
1eb9a     0C 0E 0E 15 
1eb9e     11 16 13 07 
1eba2     03 0E 0C 16 
1eba6     0A 07 07 07 | 	byte	$0c, $0e, $0e, $15, $11, $16, $13, $07, $03, $0e, $0c, $16, $0a, $07, $07, $07
1ebaa     0E 03 03 00 
1ebae     F7 03 02 FE 
1ebb2     03 F8 ED F3 
1ebb6     F5 FE FE F0 | 	byte	$0e, $03, $03, $00, $f7, $03, $02, $fe, $03, $f8, $ed, $f3, $f5, $fe, $fe, $f0
1ebba     E2 E3 F3 F9 
1ebbe     E8 E1 E2 E0 
1ebc2     E7 F0 E7 E5 
1ebc6     D6 E3 E3 E3 | 	byte	$e2, $e3, $f3, $f9, $e8, $e1, $e2, $e0, $e7, $f0, $e7, $e5, $d6, $e3, $e3, $e3
1ebca     E7 D8 D9 E6 
1ebce     E0 E1 E0 D6 
1ebd2     E3 E3 E7 E5 
1ebd6     E0 D8 DC D9 | 	byte	$e7, $d8, $d9, $e6, $e0, $e1, $e0, $d6, $e3, $e3, $e7, $e5, $e0, $d8, $dc, $d9
1ebda     E9 F0 E0 E1 
1ebde     E1 E1 E2 E3 
1ebe2     E6 EB E6 E7 
1ebe6     E7 E9 ED E4 | 	byte	$e9, $f0, $e0, $e1, $e1, $e1, $e2, $e3, $e6, $eb, $e6, $e7, $e7, $e9, $ed, $e4
1ebea     E7 EA EE F3 
1ebee     EE E9 EB EA 
1ebf2     EB F8 F8 F6 
1ebf6     F0 EF F0 FF | 	byte	$e7, $ea, $ee, $f3, $ee, $e9, $eb, $ea, $eb, $f8, $f8, $f6, $f0, $ef, $f0, $ff
1ebfa     00 FC F3 F3 
1ebfe     FD 06 0B 04 
1ec02     F4 03 0A 03 
1ec06     06 09 00 0B | 	byte	$00, $fc, $f3, $f3, $fd, $06, $0b, $04, $f4, $03, $0a, $03, $06, $09, $00, $0b
1ec0a     0C 0B 07 04 
1ec0e     05 0F 09 0F 
1ec12     09 07 0E 04 
1ec16     07 09 09 0F | 	byte	$0c, $0b, $07, $04, $05, $0f, $09, $0f, $09, $07, $0e, $04, $07, $09, $09, $0f
1ec1a     06 F9 07 06 
1ec1e     11 03 00 04 
1ec22     05 09 01 04 
1ec26     00 F8 F8 0B | 	byte	$06, $f9, $07, $06, $11, $03, $00, $04, $05, $09, $01, $04, $00, $f8, $f8, $0b
1ec2a     11 F8 F2 F8 
1ec2e     0B 0D F8 F2 
1ec32     F1 01 03 FE 
1ec36     00 EA F3 F9 | 	byte	$11, $f8, $f2, $f8, $0b, $0d, $f8, $f2, $f1, $01, $03, $fe, $00, $ea, $f3, $f9
1ec3a     F7 F8 F6 F8 
1ec3e     F8 F3 FB F1 
1ec42     F9 FB FD F8 
1ec46     F9 F8 F6 FA | 	byte	$f7, $f8, $f6, $f8, $f8, $f3, $fb, $f1, $f9, $fb, $fd, $f8, $f9, $f8, $f6, $fa
1ec4a     FD FF 06 F1 
1ec4e     FB 03 06 FF 
1ec52     FE 00 FB 0C 
1ec56     07 03 FB 03 | 	byte	$fd, $ff, $06, $f1, $fb, $03, $06, $ff, $fe, $00, $fb, $0c, $07, $03, $fb, $03
1ec5a     0D 04 FF 00 
1ec5e     FB 0C 07 00 
1ec62     FD FC 05 00 
1ec66     FC 06 00 FE | 	byte	$0d, $04, $ff, $00, $fb, $0c, $07, $00, $fd, $fc, $05, $00, $fc, $06, $00, $fe
1ec6a     FE FE 07 FE 
1ec6e     FA FE 01 FE 
1ec72     FA FC FD FF 
1ec76     07 03 F6 FC | 	byte	$fe, $fe, $07, $fe, $fa, $fe, $01, $fe, $fa, $fc, $fd, $ff, $07, $03, $f6, $fc
1ec7a     00 06 01 FE 
1ec7e     FC 07 03 FE 
1ec82     F8 FF 09 00 
1ec86     03 03 03 09 | 	byte	$00, $06, $01, $fe, $fc, $07, $03, $fe, $f8, $ff, $09, $00, $03, $03, $03, $09
1ec8a     03 FF 03 07 
1ec8e     0A 00 01 03 
1ec92     06 09 05 07 
1ec96     04 07 FF 04 | 	byte	$03, $ff, $03, $07, $0a, $00, $01, $03, $06, $09, $05, $07, $04, $07, $ff, $04
1ec9a     03 11 09 04 
1ec9e     04 FB 07 12 
1eca2     01 05 07 04 
1eca6     0F 06 03 07 | 	byte	$03, $11, $09, $04, $04, $fb, $07, $12, $01, $05, $07, $04, $0f, $06, $03, $07
1ecaa     06 0F 0A 07 
1ecae     06 04 07 07 
1ecb2     07 09 05 07 
1ecb6     07 03 06 03 | 	byte	$06, $0f, $0a, $07, $06, $04, $07, $07, $07, $09, $05, $07, $07, $03, $06, $03
1ecba     F9 05 0E 07 
1ecbe     03 F8 03 03 
1ecc2     03 06 FD FC 
1ecc6     02 00 0E F8 | 	byte	$f9, $05, $0e, $07, $03, $f8, $03, $03, $03, $06, $fd, $fc, $02, $00, $0e, $f8
1ecca     F3 01 05 01 
1ecce     03 F8 FC FF 
1ecd2     03 01 00 F3 
1ecd6     05 04 03 F8 | 	byte	$f3, $01, $05, $01, $03, $f8, $fc, $ff, $03, $01, $00, $f3, $05, $04, $03, $f8
1ecda     F9 03 07 07 
1ecde     00 F8 07 03 
1ece2     02 04 FF 01 
1ece6     07 09 07 01 | 	byte	$f9, $03, $07, $07, $00, $f8, $07, $03, $02, $04, $ff, $01, $07, $09, $07, $01
1ecea     03 08 04 01 
1ecee     02 0C 07 07 
1ecf2     00 07 07 01 
1ecf6     03 0C 00 05 | 	byte	$03, $08, $04, $01, $02, $0c, $07, $07, $00, $07, $07, $01, $03, $0c, $00, $05
1ecfa     06 07 06 04 
1ecfe     FE FE 0B 03 
1ed02     00 03 09 FC 
1ed06     FE 02 07 00 | 	byte	$06, $07, $06, $04, $fe, $fe, $0b, $03, $00, $03, $09, $fc, $fe, $02, $07, $00
1ed0a     04 F8 03 00 
1ed0e     00 FF 03 FD 
1ed12     F9 FD 0C 00 
1ed16     F8 F8 07 03 | 	byte	$04, $f8, $03, $00, $00, $ff, $03, $fd, $f9, $fd, $0c, $00, $f8, $f8, $07, $03
1ed1a     FF F8 FB F8 
1ed1e     02 05 FC F8 
1ed22     FB 03 09 FC 
1ed26     FD 0B 0C FE | 	byte	$ff, $f8, $fb, $f8, $02, $05, $fc, $f8, $fb, $03, $09, $fc, $fd, $0b, $0c, $fe
1ed2a     00 03 16 0C 
1ed2e     00 03 0B 13 
1ed32     0E 0E 0C 0F 
1ed36     0F 15 13 10 | 	byte	$00, $03, $16, $0c, $00, $03, $0b, $13, $0e, $0e, $0c, $0f, $0f, $15, $13, $10
1ed3a     0F 15 12 16 
1ed3e     13 11 13 0F 
1ed42     10 15 18 13 
1ed46     08 0E 0F 18 | 	byte	$0f, $15, $12, $16, $13, $11, $13, $0f, $10, $15, $18, $13, $08, $0e, $0f, $18
1ed4a     11 10 07 09 
1ed4e     13 0C 04 03 
1ed52     08 0B 0C 08 
1ed56     FD 07 00 03 | 	byte	$11, $10, $07, $09, $13, $0c, $04, $03, $08, $0b, $0c, $08, $fd, $07, $00, $03
1ed5a     02 FB FF 04 
1ed5e     FC FC FF 01 
1ed62     F9 F7 FD F6 
1ed66     FB FC FB F8 | 	byte	$02, $fb, $ff, $04, $fc, $fc, $ff, $01, $f9, $f7, $fd, $f6, $fb, $fc, $fb, $f8
1ed6a     F8 F4 F5 F8 
1ed6e     FF 00 F0 F7 
1ed72     F9 FA F5 F3 
1ed76     F8 FB F4 F8 | 	byte	$f8, $f4, $f5, $f8, $ff, $00, $f0, $f7, $f9, $fa, $f5, $f3, $f8, $fb, $f4, $f8
1ed7a     F8 F1 F1 EF 
1ed7e     F9 FC F8 F4 
1ed82     F3 F6 FB F8 
1ed86     F9 F8 F0 F3 | 	byte	$f8, $f1, $f1, $ef, $f9, $fc, $f8, $f4, $f3, $f6, $fb, $f8, $f9, $f8, $f0, $f3
1ed8a     03 FC 00 F8 
1ed8e     F6 F8 01 FB 
1ed92     01 03 00 FF 
1ed96     00 03 07 00 | 	byte	$03, $fc, $00, $f8, $f6, $f8, $01, $fb, $01, $03, $00, $ff, $00, $03, $07, $00
1ed9a     03 07 01 03 
1ed9e     09 07 09 07 
1eda2     07 04 08 07 
1eda6     0B 09 09 01 | 	byte	$03, $07, $01, $03, $09, $07, $09, $07, $07, $04, $08, $07, $0b, $09, $09, $01
1edaa     05 07 08 FF 
1edae     0C 01 06 06 
1edb2     02 FF 08 04 
1edb6     FE F8 01 03 | 	byte	$05, $07, $08, $ff, $0c, $01, $06, $06, $02, $ff, $08, $04, $fe, $f8, $01, $03
1edba     02 01 02 FC 
1edbe     FC F9 01 03 
1edc2     FA FB FF F9 
1edc6     FF 00 FD FC | 	byte	$02, $01, $02, $fc, $fc, $f9, $01, $03, $fa, $fb, $ff, $f9, $ff, $00, $fd, $fc
1edca     F9 FE FC F7 
1edce     03 06 01 FD 
1edd2     F3 FE 00 03 
1edd6     FE F8 FC FD | 	byte	$f9, $fe, $fc, $f7, $03, $06, $01, $fd, $f3, $fe, $00, $03, $fe, $f8, $fc, $fd
1edda     01 03 01 F6 
1edde     FD 01 FF FD 
1ede2     FB FF 00 FF 
1ede6     F8 FB FF 03 | 	byte	$01, $03, $01, $f6, $fd, $01, $ff, $fd, $fb, $ff, $00, $ff, $f8, $fb, $ff, $03
1edea     F6 FC FB FF 
1edee     03 00 FC FB 
1edf2     F8 FC FA FC 
1edf6     FD 00 FC F9 | 	byte	$f6, $fc, $fb, $ff, $03, $00, $fc, $fb, $f8, $fc, $fa, $fc, $fd, $00, $fc, $f9
1edfa     F8 FC FC FF 
1edfe     FA F8 F4 FF 
1ee02     01 00 FB F7 
1ee06     F7 00 FE FE | 	byte	$f8, $fc, $fc, $ff, $fa, $f8, $f4, $ff, $01, $00, $fb, $f7, $f7, $00, $fe, $fe
1ee0a     FC F4 FD 00 
1ee0e     FB 03 00 F8 
1ee12     FF FB FC FF 
1ee16     01 05 FD 01 | 	byte	$fc, $f4, $fd, $00, $fb, $03, $00, $f8, $ff, $fb, $fc, $ff, $01, $05, $fd, $01
1ee1a     FE FE 03 00 
1ee1e     FF 00 FC 07 
1ee22     07 00 03 05 
1ee26     03 03 FE 01 | 	byte	$fe, $fe, $03, $00, $ff, $00, $fc, $07, $07, $00, $03, $05, $03, $03, $fe, $01
1ee2a     03 06 0F 03 
1ee2e     01 06 05 03 
1ee32     06 03 03 06 
1ee36     0B 0E 01 03 | 	byte	$03, $06, $0f, $03, $01, $06, $05, $03, $06, $03, $03, $06, $0b, $0e, $01, $03
1ee3a     FF FF 05 07 
1ee3e     0C 07 FC FF 
1ee42     03 00 06 01 
1ee46     00 FC 04 FF | 	byte	$ff, $ff, $05, $07, $0c, $07, $fc, $ff, $03, $00, $06, $01, $00, $fc, $04, $ff
1ee4a     03 03 00 FD 
1ee4e     FC FE 03 FF 
1ee52     F8 FC FC 03 
1ee56     FC F8 FB F8 | 	byte	$03, $03, $00, $fd, $fc, $fe, $03, $ff, $f8, $fc, $fc, $03, $fc, $f8, $fb, $f8
1ee5a     FB 06 00 F3 
1ee5e     F0 FC 06 00 
1ee62     F0 EF FB F8 
1ee66     F8 F9 F9 F4 | 	byte	$fb, $06, $00, $f3, $f0, $fc, $06, $00, $f0, $ef, $fb, $f8, $f8, $f9, $f9, $f4
1ee6a     F1 F8 FA FC 
1ee6e     F8 F4 F3 F3 
1ee72     FC FF F8 F5 
1ee76     EB FE F9 F8 | 	byte	$f1, $f8, $fa, $fc, $f8, $f4, $f3, $f3, $fc, $ff, $f8, $f5, $eb, $fe, $f9, $f8
1ee7a     FC F8 F0 FC 
1ee7e     FB F9 F8 F8 
1ee82     F8 F8 FD F8 
1ee86     FB 00 FB F6 | 	byte	$fc, $f8, $f0, $fc, $fb, $f9, $f8, $f8, $f8, $f8, $fd, $f8, $fb, $00, $fb, $f6
1ee8a     F1 FB FF 03 
1ee8e     FA F8 F8 F3 
1ee92     FD 00 FB F6 
1ee96     F3 FF F8 FB | 	byte	$f1, $fb, $ff, $03, $fa, $f8, $f8, $f3, $fd, $00, $fb, $f6, $f3, $ff, $f8, $fb
1ee9a     FC F6 F3 F6 
1ee9e     F7 F9 F9 FE 
1eea2     F3 F3 F8 FC 
1eea6     FC F8 F5 F6 | 	byte	$fc, $f6, $f3, $f6, $f7, $f9, $f9, $fe, $f3, $f3, $f8, $fc, $fc, $f8, $f5, $f6
1eeaa     FC F4 F9 F8 
1eeae     F6 FB FE F9 
1eeb2     F9 F3 F9 FC 
1eeb6     03 00 F1 F8 | 	byte	$fc, $f4, $f9, $f8, $f6, $fb, $fe, $f9, $f9, $f3, $f9, $fc, $03, $00, $f1, $f8
1eeba     FD 01 03 00 
1eebe     F3 F9 FD 03 
1eec2     03 F9 F7 FC 
1eec6     FF 07 00 FF | 	byte	$fd, $01, $03, $00, $f3, $f9, $fd, $03, $03, $f9, $f7, $fc, $ff, $07, $00, $ff
1eeca     03 F8 F6 03 
1eece     07 08 00 FA 
1eed2     FE 01 0B 03 
1eed6     FC 06 00 05 | 	byte	$03, $f8, $f6, $03, $07, $08, $00, $fa, $fe, $01, $0b, $03, $fc, $06, $00, $05
1eeda     03 FE 03 03 
1eede     06 00 FB 03 
1eee2     0B 04 00 F8 
1eee6     03 09 04 FB | 	byte	$03, $fe, $03, $03, $06, $00, $fb, $03, $0b, $04, $00, $f8, $03, $09, $04, $fb
1eeea     00 03 06 01 
1eeee     FF 04 00 FF 
1eef2     06 03 07 00 
1eef6     FF 0B 01 03 | 	byte	$00, $03, $06, $01, $ff, $04, $00, $ff, $06, $03, $07, $00, $ff, $0b, $01, $03
1eefa     07 04 03 FF 
1eefe     07 0B 03 07 
1ef02     01 09 0E 0C 
1ef06     06 09 07 04 | 	byte	$07, $04, $03, $ff, $07, $0b, $03, $07, $01, $09, $0e, $0c, $06, $09, $07, $04
1ef0a     06 07 0F 09 
1ef0e     02 0B 0C 0F 
1ef12     0F 07 07 06 
1ef16     0F 18 0C 09 | 	byte	$06, $07, $0f, $09, $02, $0b, $0c, $0f, $0f, $07, $07, $06, $0f, $18, $0c, $09
1ef1a     09 0C 0B 13 
1ef1e     14 0E 09 09 
1ef22     0F 16 13 0C 
1ef26     07 0D 16 11 | 	byte	$09, $0c, $0b, $13, $14, $0e, $09, $09, $0f, $16, $13, $0c, $07, $0d, $16, $11
1ef2a     13 0D 09 0F 
1ef2e     12 13 0F 0F 
1ef32     0E 0B 13 11 
1ef36     0C 09 0C 0D | 	byte	$13, $0d, $09, $0f, $12, $13, $0f, $0f, $0e, $0b, $13, $11, $0c, $09, $0c, $0d
1ef3a     0F 12 0A 08 
1ef3e     09 0A 07 09 
1ef42     0C 07 07 0C 
1ef46     02 FF 05 07 | 	byte	$0f, $12, $0a, $08, $09, $0a, $07, $09, $0c, $07, $07, $0c, $02, $ff, $05, $07
1ef4a     0C 01 FF 07 
1ef4e     01 0D 02 F7 
1ef52     01 09 05 00 
1ef56     F9 FF FF 03 | 	byte	$0c, $01, $ff, $07, $01, $0d, $02, $f7, $01, $09, $05, $00, $f9, $ff, $ff, $03
1ef5a     00 FF F8 03 
1ef5e     00 01 FF FC 
1ef62     F8 00 FA FF 
1ef66     FE 00 FF F9 | 	byte	$00, $ff, $f8, $03, $00, $01, $ff, $fc, $f8, $00, $fa, $ff, $fe, $00, $ff, $f9
1ef6a     FD 05 03 FD 
1ef6e     F8 FC FC 03 
1ef72     03 00 FA FA 
1ef76     03 03 06 00 | 	byte	$fd, $05, $03, $fd, $f8, $fc, $fc, $03, $03, $00, $fa, $fa, $03, $03, $06, $00
1ef7a     FB FE 00 03 
1ef7e     06 FD 07 01 
1ef82     F4 FF 02 00 
1ef86     03 FE 01 05 | 	byte	$fb, $fe, $00, $03, $06, $fd, $07, $01, $f4, $ff, $02, $00, $03, $fe, $01, $05
1ef8a     FC FC FF 01 
1ef8e     FC FE FC 01 
1ef92     FC FB F9 FC 
1ef96     F8 FC FD F8 | 	byte	$fc, $fc, $ff, $01, $fc, $fe, $fc, $01, $fc, $fb, $f9, $fc, $f8, $fc, $fd, $f8
1ef9a     F3 00 F8 F6 
1ef9e     FB F4 F8 F9 
1efa2     F6 F6 F4 F8 
1efa6     F6 F8 F8 F1 | 	byte	$f3, $00, $f8, $f6, $fb, $f4, $f8, $f9, $f6, $f6, $f4, $f8, $f6, $f8, $f8, $f1
1efaa     F5 F8 F3 F0 
1efae     F5 F8 F9 F3 
1efb2     F0 F6 FC F2 
1efb6     F3 F3 F5 F6 | 	byte	$f5, $f8, $f3, $f0, $f5, $f8, $f9, $f3, $f0, $f6, $fc, $f2, $f3, $f3, $f5, $f6
1efba     F8 F8 F5 F3 
1efbe     F5 F9 F8 FB 
1efc2     F9 F3 F6 F8 
1efc6     FE FE FA F2 | 	byte	$f8, $f8, $f5, $f3, $f5, $f9, $f8, $fb, $f9, $f3, $f6, $f8, $fe, $fe, $fa, $f2
1efca     F7 FC 01 FC 
1efce     F9 FC FA FB 
1efd2     FF 06 03 F8 
1efd6     FB FC FF 03 | 	byte	$f7, $fc, $01, $fc, $f9, $fc, $fa, $fb, $ff, $06, $03, $f8, $fb, $fc, $ff, $03
1efda     07 00 F8 FF 
1efde     0B 04 FF 00 
1efe2     FB FF 07 04 
1efe6     07 04 03 02 | 	byte	$07, $00, $f8, $ff, $0b, $04, $ff, $00, $fb, $ff, $07, $04, $07, $04, $03, $02
1efea     02 01 09 07 
1efee     06 05 07 07 
1eff2     01 07 06 07 
1eff6     0C 0A 03 07 | 	byte	$02, $01, $09, $07, $06, $05, $07, $07, $01, $07, $06, $07, $0c, $0a, $03, $07
1effa     09 0F 05 03 
1effe     0C 03 07 0C 
1f002     0B 07 07 03 
1f006     05 06 06 05 | 	byte	$09, $0f, $05, $03, $0c, $03, $07, $0c, $0b, $07, $07, $03, $05, $06, $06, $05
1f00a     07 07 00 07 
1f00e     08 00 03 07 
1f012     01 02 00 01 
1f016     07 04 FF 02 | 	byte	$07, $07, $00, $07, $08, $00, $03, $07, $01, $02, $00, $01, $07, $04, $ff, $02
1f01a     01 04 04 07 
1f01e     00 FD 00 FB 
1f022     03 05 06 00 
1f026     F8 F9 01 03 | 	byte	$01, $04, $04, $07, $00, $fd, $00, $fb, $03, $05, $06, $00, $f8, $f9, $01, $03
1f02a     03 FB F8 FB 
1f02e     FC 03 FA F3 
1f032     F8 FF F6 F9 
1f036     F7 F6 F8 FA | 	byte	$03, $fb, $f8, $fb, $fc, $03, $fa, $f3, $f8, $ff, $f6, $f9, $f7, $f6, $f8, $fa
1f03a     F7 F9 F1 F9 
1f03e     FC F4 F8 F8 
1f042     F5 F7 FE 00 
1f046     F3 F9 FB F9 | 	byte	$f7, $f9, $f1, $f9, $fc, $f4, $f8, $f8, $f5, $f7, $fe, $00, $f3, $f9, $fb, $f9
1f04a     FF FB FF FC 
1f04e     F9 FC 00 08 
1f052     FE FC FC FF 
1f056     06 01 03 00 | 	byte	$ff, $fb, $ff, $fc, $f9, $fc, $00, $08, $fe, $fc, $fc, $ff, $06, $01, $03, $00
1f05a     FE 09 04 04 
1f05e     03 03 06 09 
1f062     0A 03 03 07 
1f066     0B 09 09 07 | 	byte	$fe, $09, $04, $04, $03, $03, $06, $09, $0a, $03, $03, $07, $0b, $09, $09, $07
1f06a     06 0A 0E 0B 
1f06e     0C 04 09 0C 
1f072     0F 0B 0B 09 
1f076     0C 08 07 0F | 	byte	$06, $0a, $0e, $0b, $0c, $04, $09, $0c, $0f, $0b, $0b, $09, $0c, $08, $07, $0f
1f07a     0C 0B 04 07 
1f07e     06 0E 11 0B 
1f082     FE FC 06 07 
1f086     0F 08 FA FD | 	byte	$0c, $0b, $04, $07, $06, $0e, $11, $0b, $fe, $fc, $06, $07, $0f, $08, $fa, $fd
1f08a     03 07 07 FE 
1f08e     F9 FF 01 FE 
1f092     F8 FE FD FA 
1f096     F8 FB F8 FB | 	byte	$03, $07, $07, $fe, $f9, $ff, $01, $fe, $f8, $fe, $fd, $fa, $f8, $fb, $f8, $fb
1f09a     F8 F7 F8 F8 
1f09e     F0 F7 F5 F3 
1f0a2     F3 F7 F2 F0 
1f0a6     F1 F0 F0 F5 | 	byte	$f8, $f7, $f8, $f8, $f0, $f7, $f5, $f3, $f3, $f7, $f2, $f0, $f1, $f0, $f0, $f5
1f0aa     F3 EC F0 F4 
1f0ae     EE ED F3 F4 
1f0b2     F3 F0 ED F0 
1f0b6     F3 F7 F0 F3 | 	byte	$f3, $ec, $f0, $f4, $ee, $ed, $f3, $f4, $f3, $f0, $ed, $f0, $f3, $f7, $f0, $f3
1f0ba     F0 F0 F7 F9 
1f0be     F4 F6 F3 F6 
1f0c2     F8 F8 F8 F8 
1f0c6     F8 F3 FB FC | 	byte	$f0, $f0, $f7, $f9, $f4, $f6, $f3, $f6, $f8, $f8, $f8, $f8, $f8, $f3, $fb, $fc
1f0ca     F8 F9 F8 F8 
1f0ce     FF FF FE FB 
1f0d2     FE FC FC 01 
1f0d6     03 FE FB 01 | 	byte	$f8, $f9, $f8, $f8, $ff, $ff, $fe, $fb, $fe, $fc, $fc, $01, $03, $fe, $fb, $01
1f0da     06 03 02 00 
1f0de     00 04 07 09 
1f0e2     FD FF 04 07 
1f0e6     07 09 06 02 | 	byte	$06, $03, $02, $00, $00, $04, $07, $09, $fd, $ff, $04, $07, $07, $09, $06, $02
1f0ea     01 03 0E 0C 
1f0ee     01 FD 03 03 
1f0f2     0B 0E 0C 01 
1f0f6     F8 FF 09 0C | 	byte	$01, $03, $0e, $0c, $01, $fd, $03, $03, $0b, $0e, $0c, $01, $f8, $ff, $09, $0c
1f0fa     06 00 04 05 
1f0fe     06 06 06 01 
1f102     01 03 03 04 
1f106     03 03 03 FF | 	byte	$06, $00, $04, $05, $06, $06, $06, $01, $01, $03, $03, $04, $03, $03, $03, $ff
1f10a     03 01 03 06 
1f10e     FF FF 04 00 
1f112     02 FF 02 FD 
1f116     FF FF 03 01 | 	byte	$03, $01, $03, $06, $ff, $ff, $04, $00, $02, $ff, $02, $fd, $ff, $ff, $03, $01
1f11a     FE FC FC 03 
1f11e     FC F9 FF FB 
1f122     FC 01 FE F8 
1f126     F8 F9 FC FE | 	byte	$fe, $fc, $fc, $03, $fc, $f9, $ff, $fb, $fc, $01, $fe, $f8, $f8, $f9, $fc, $fe
1f12a     FC F8 F4 F9 
1f12e     FD FB FD FE 
1f132     F9 F9 F6 FC 
1f136     03 00 FC F8 | 	byte	$fc, $f8, $f4, $f9, $fd, $fb, $fd, $fe, $f9, $f9, $f6, $fc, $03, $00, $fc, $f8
1f13a     FB 01 FF 02 
1f13e     00 FC FE FE 
1f142     07 0B 00 FC 
1f146     01 07 09 07 | 	byte	$fb, $01, $ff, $02, $00, $fc, $fe, $fe, $07, $0b, $00, $fc, $01, $07, $09, $07
1f14a     02 01 07 0D 
1f14e     08 03 06 07 
1f152     06 0C 0B 07 
1f156     0B 0C 07 07 | 	byte	$02, $01, $07, $0d, $08, $03, $06, $07, $06, $0c, $0b, $07, $0b, $0c, $07, $07
1f15a     0F 0E 07 0C 
1f15e     0D 0C 0F 0E 
1f162     0A 0D 0F 13 
1f166     0F 0E 0D 13 | 	byte	$0f, $0e, $07, $0c, $0d, $0c, $0f, $0e, $0a, $0d, $0f, $13, $0f, $0e, $0d, $13
1f16a     13 10 0D 0E 
1f16e     0E 16 13 0F 
1f172     0C 11 14 0F 
1f176     0E 11 16 13 | 	byte	$13, $10, $0d, $0e, $0e, $16, $13, $0f, $0c, $11, $14, $0f, $0e, $11, $16, $13
1f17a     0F 0E 0F 11 
1f17e     14 14 13 10 
1f182     0B 0F 17 0F 
1f186     0F 0B 0D 11 | 	byte	$0f, $0e, $0f, $11, $14, $14, $13, $10, $0b, $0f, $17, $0f, $0f, $0b, $0d, $11
1f18a     10 0F 0B 09 
1f18e     0D 0B 0C 09 
1f192     05 0A 0C 04 
1f196     04 06 06 03 | 	byte	$10, $0f, $0b, $09, $0d, $0b, $0c, $09, $05, $0a, $0c, $04, $04, $06, $06, $03
1f19a     FE FE 03 03 
1f19e     01 FB FC FC 
1f1a2     FD FE FD FB 
1f1a6     FD F9 F8 FA | 	byte	$fe, $fe, $03, $03, $01, $fb, $fc, $fc, $fd, $fe, $fd, $fb, $fd, $f9, $f8, $fa
1f1aa     F9 F9 FC F6 
1f1ae     F8 FB F9 F9 
1f1b2     F8 FA FB F8 
1f1b6     F4 FC F9 F3 | 	byte	$f9, $f9, $fc, $f6, $f8, $fb, $f9, $f9, $f8, $fa, $fb, $f8, $f4, $fc, $f9, $f3
1f1ba     FB F8 F3 F9 
1f1be     FB F6 F3 F2 
1f1c2     F7 FC F8 EE 
1f1c6     F3 F8 F8 F3 | 	byte	$fb, $f8, $f3, $f9, $fb, $f6, $f3, $f2, $f7, $fc, $f8, $ee, $f3, $f8, $f8, $f3
1f1ca     F2 F2 F1 F3 
1f1ce     F8 F1 F3 F3 
1f1d2     F4 F2 F6 F8 
1f1d6     F8 F3 F0 F7 | 	byte	$f2, $f2, $f1, $f3, $f8, $f1, $f3, $f3, $f4, $f2, $f6, $f8, $f8, $f3, $f0, $f7
1f1da     FC FA F9 F3 
1f1de     F6 FC FD FF 
1f1e2     FA F5 FC 00 
1f1e6     03 FC F8 FB | 	byte	$fc, $fa, $f9, $f3, $f6, $fc, $fd, $ff, $fa, $f5, $fc, $00, $03, $fc, $f8, $fb
1f1ea     01 03 02 FF 
1f1ee     FF FC 01 03 
1f1f2     03 00 00 01 
1f1f6     01 03 03 01 | 	byte	$01, $03, $02, $ff, $ff, $fc, $01, $03, $03, $00, $00, $01, $01, $03, $03, $01
1f1fa     03 00 FF 03 
1f1fe     07 06 FF 01 
1f202     03 00 03 02 
1f206     03 01 FF 03 | 	byte	$03, $00, $ff, $03, $07, $06, $ff, $01, $03, $00, $03, $02, $03, $01, $ff, $03
1f20a     04 00 00 03 
1f20e     00 FE 01 01 
1f212     FF 00 FC FF 
1f216     00 FE FC FE | 	byte	$04, $00, $00, $03, $00, $fe, $01, $01, $ff, $00, $fc, $ff, $00, $fe, $fc, $fe
1f21a     01 00 FE FE 
1f21e     00 FC F9 FF 
1f222     01 FF FF FB 
1f226     FD FC FF 00 | 	byte	$01, $00, $fe, $fe, $00, $fc, $f9, $ff, $01, $ff, $ff, $fb, $fd, $fc, $ff, $00
1f22a     00 F8 FC FE 
1f22e     01 FC FC FB 
1f232     FB F8 FB FE 
1f236     FC FB F8 F8 | 	byte	$00, $f8, $fc, $fe, $01, $fc, $fc, $fb, $fb, $f8, $fb, $fe, $fc, $fb, $f8, $f8
1f23a     F8 FB FC FB 
1f23e     F3 F3 F9 FE 
1f242     F8 F1 F7 FB 
1f246     FB F6 F8 FB | 	byte	$f8, $fb, $fc, $fb, $f3, $f3, $f9, $fe, $f8, $f1, $f7, $fb, $fb, $f6, $f8, $fb
1f24a     F8 F8 F9 FC 
1f24e     FC FB FA F9 
1f252     FF FC FC 01 
1f256     FB FC FB FF | 	byte	$f8, $f8, $f9, $fc, $fc, $fb, $fa, $f9, $ff, $fc, $fc, $01, $fb, $fc, $fb, $ff
1f25a     FF FF FE FD 
1f25e     00 00 FC 01 
1f262     01 FF FF FE 
1f266     FF 03 00 FF | 	byte	$ff, $ff, $fe, $fd, $00, $00, $fc, $01, $01, $ff, $ff, $fe, $ff, $03, $00, $ff
1f26a     FF FF 01 03 
1f26e     03 00 FF FE 
1f272     03 03 03 FF 
1f276     06 06 05 07 | 	byte	$ff, $ff, $01, $03, $03, $00, $ff, $fe, $03, $03, $03, $ff, $06, $06, $05, $07
1f27a     06 02 06 09 
1f27e     09 07 07 07 
1f282     07 09 09 09 
1f286     07 09 0C 06 | 	byte	$06, $02, $06, $09, $09, $07, $07, $07, $07, $09, $09, $09, $07, $09, $0c, $06
1f28a     09 0C 0B 07 
1f28e     07 09 0C 09 
1f292     07 05 08 07 
1f296     09 07 07 0A | 	byte	$09, $0c, $0b, $07, $07, $09, $0c, $09, $07, $05, $08, $07, $09, $07, $07, $0a
1f29a     07 03 07 08 
1f29e     06 03 03 06 
1f2a2     08 07 07 07 
1f2a6     03 00 01 07 | 	byte	$07, $03, $07, $08, $06, $03, $03, $06, $08, $07, $07, $07, $03, $00, $01, $07
1f2aa     08 00 07 06 
1f2ae     FE FF 01 07 
1f2b2     06 00 FE FD 
1f2b6     01 04 01 FC | 	byte	$08, $00, $07, $06, $fe, $ff, $01, $07, $06, $00, $fe, $fd, $01, $04, $01, $fc
1f2ba     F9 FC FF FE 
1f2be     F9 FB F9 F8 
1f2c2     F9 FC F8 FB 
1f2c6     F8 FB F9 F7 | 	byte	$f9, $fc, $ff, $fe, $f9, $fb, $f9, $f8, $f9, $fc, $f8, $fb, $f8, $fb, $f9, $f7
1f2ca     F8 F8 F6 F8 
1f2ce     F8 F8 F3 F6 
1f2d2     FB FC F8 F4 
1f2d6     F9 F5 FC FD | 	byte	$f8, $f8, $f6, $f8, $f8, $f8, $f3, $f6, $fb, $fc, $f8, $f4, $f9, $f5, $fc, $fd
1f2da     F9 FC F8 FB 
1f2de     FE FE FF F8 
1f2e2     F9 FE FE FE 
1f2e6     FB FC FF FE | 	byte	$f9, $fc, $f8, $fb, $fe, $fe, $ff, $f8, $f9, $fe, $fe, $fe, $fb, $fc, $ff, $fe
1f2ea     FA FC FC FF 
1f2ee     00 FC FE FE 
1f2f2     FF FE FD FD 
1f2f6     FC FC 01 00 | 	byte	$fa, $fc, $fc, $ff, $00, $fc, $fe, $fe, $ff, $fe, $fd, $fd, $fc, $fc, $01, $00
1f2fa     FD FC FE 01 
1f2fe     01 FE FC FD 
1f302     03 04 FB FE 
1f306     03 01 02 FE | 	byte	$fd, $fc, $fe, $01, $01, $fe, $fc, $fd, $03, $04, $fb, $fe, $03, $01, $02, $fe
1f30a     FC 01 06 04 
1f30e     FE FF 01 00 
1f312     FF 03 02 00 
1f316     FF FF 03 FF | 	byte	$fc, $01, $06, $04, $fe, $ff, $01, $00, $ff, $03, $02, $00, $ff, $ff, $03, $ff
1f31a     01 01 01 FD 
1f31e     FF 03 FF FF 
1f322     FC FD FF FE 
1f326     01 FC FB FE | 	byte	$01, $01, $01, $fd, $ff, $03, $ff, $ff, $fc, $fd, $ff, $fe, $01, $fc, $fb, $fe
1f32a     FC FB FC F8 
1f32e     FD FC FA F8 
1f332     F8 F9 FB F8 
1f336     FB F8 F8 FB | 	byte	$fc, $fb, $fc, $f8, $fd, $fc, $fa, $f8, $f8, $f9, $fb, $f8, $fb, $f8, $f8, $fb
1f33a     FA FC F8 F4 
1f33e     FA FC FC F9 
1f342     F8 FB FB F9 
1f346     00 F9 F8 FE | 	byte	$fa, $fc, $f8, $f4, $fa, $fc, $fc, $f9, $f8, $fb, $fb, $f9, $00, $f9, $f8, $fe
1f34a     FC FE FD FB 
1f34e     01 00 FF FF 
1f352     FC FF FF 02 
1f356     03 01 00 FE | 	byte	$fc, $fe, $fd, $fb, $01, $00, $ff, $ff, $fc, $ff, $ff, $02, $03, $01, $00, $fe
1f35a     FF 03 04 01 
1f35e     06 00 03 03 
1f362     03 06 03 03 
1f366     03 FE 05 0C | 	byte	$ff, $03, $04, $01, $06, $00, $03, $03, $03, $06, $03, $03, $03, $fe, $05, $0c
1f36a     06 00 01 07 
1f36e     07 06 04 03 
1f372     04 07 0B 0C 
1f376     04 FF 07 0F | 	byte	$06, $00, $01, $07, $07, $06, $04, $03, $04, $07, $0b, $0c, $04, $ff, $07, $0f
1f37a     0C 07 05 09 
1f37e     0C 09 0B 0C 
1f382     09 09 08 0C 
1f386     0D 08 04 07 | 	byte	$0c, $07, $05, $09, $0c, $09, $0b, $0c, $09, $09, $08, $0c, $0d, $08, $04, $07
1f38a     0B 0E 0C 07 
1f38e     04 07 09 0C 
1f392     0A 08 07 07 
1f396     0B 0E 03 07 | 	byte	$0b, $0e, $0c, $07, $04, $07, $09, $0c, $0a, $08, $07, $07, $0b, $0e, $03, $07
1f39a     08 07 09 09 
1f39e     07 07 07 0A 
1f3a2     07 07 07 08 
1f3a6     09 0B 06 07 | 	byte	$08, $07, $09, $09, $07, $07, $07, $0a, $07, $07, $07, $08, $09, $0b, $06, $07
1f3aa     09 09 0A 09 
1f3ae     07 0B 08 08 
1f3b2     09 07 09 06 
1f3b6     09 0C 06 07 | 	byte	$09, $09, $0a, $09, $07, $0b, $08, $08, $09, $07, $09, $06, $09, $0c, $06, $07
1f3ba     09 04 06 07 
1f3be     0A 07 06 04 
1f3c2     06 06 06 03 
1f3c6     07 05 01 03 | 	byte	$09, $04, $06, $07, $0a, $07, $06, $04, $06, $06, $06, $03, $07, $05, $01, $03
1f3ca     05 01 01 00 
1f3ce     FF 03 03 01 
1f3d2     FF FF 00 01 
1f3d6     FF FC FB FE | 	byte	$05, $01, $01, $00, $ff, $03, $03, $01, $ff, $ff, $00, $01, $ff, $fc, $fb, $fe
1f3da     00 FE FC F9 
1f3de     F9 FD FC FC 
1f3e2     F8 FE FC F6 
1f3e6     F9 FE F9 FB | 	byte	$00, $fe, $fc, $f9, $f9, $fd, $fc, $fc, $f8, $fe, $fc, $f6, $f9, $fe, $f9, $fb
1f3ea     F8 F7 F8 F8 
1f3ee     FB FA F9 F6 
1f3f2     F9 FA FC F8 
1f3f6     F9 FB F8 F8 | 	byte	$f8, $f7, $f8, $f8, $fb, $fa, $f9, $f6, $f9, $fa, $fc, $f8, $f9, $fb, $f8, $f8
1f3fa     FA FB FE F8 
1f3fe     F6 F7 FC FD 
1f402     FC F6 F8 F8 
1f406     FB FD F9 F9 | 	byte	$fa, $fb, $fe, $f8, $f6, $f7, $fc, $fd, $fc, $f6, $f8, $f8, $fb, $fd, $f9, $f9
1f40a     F8 F9 FC FC 
1f40e     F8 F8 FC FF 
1f412     F8 F7 FC F9 
1f416     FA FB FC FC | 	byte	$f8, $f9, $fc, $fc, $f8, $f8, $fc, $ff, $f8, $f7, $fc, $f9, $fa, $fb, $fc, $fc
1f41a     FD F8 F8 FF 
1f41e     FF FC FB FC 
1f422     F9 FF 01 FE 
1f426     FD FB FB 00 | 	byte	$fd, $f8, $f8, $ff, $ff, $fc, $fb, $fc, $f9, $ff, $01, $fe, $fd, $fb, $fb, $00
1f42a     01 FF FE FC 
1f42e     FC FD 01 01 
1f432     FC FC FC FF 
1f436     00 01 00 FC | 	byte	$01, $ff, $fe, $fc, $fc, $fd, $01, $01, $fc, $fc, $fc, $ff, $00, $01, $00, $fc
1f43a     FC FF 01 03 
1f43e     01 FC FE 03 
1f442     00 FF 00 FE 
1f446     01 04 01 FF | 	byte	$fc, $ff, $01, $03, $01, $fc, $fe, $03, $00, $ff, $00, $fe, $01, $04, $01, $ff
1f44a     FF 00 FF 00 
1f44e     04 03 FF 01 
1f452     00 03 04 01 
1f456     FF FF FF FF | 	byte	$ff, $00, $ff, $00, $04, $03, $ff, $01, $00, $03, $04, $01, $ff, $ff, $ff, $ff
1f45a     04 04 00 FC 
1f45e     FE 01 FF 01 
1f462     FF 00 FE FC 
1f466     01 01 FF FD | 	byte	$04, $04, $00, $fc, $fe, $01, $ff, $01, $ff, $00, $fe, $fc, $01, $01, $ff, $fd
1f46a     FB FC FF FF 
1f46e     00 FD FC FE 
1f472     00 01 00 FB 
1f476     FC FF 01 FF | 	byte	$fb, $fc, $ff, $ff, $00, $fd, $fc, $fe, $00, $01, $00, $fb, $fc, $ff, $01, $ff
1f47a     00 FF FD FF 
1f47e     01 FF 03 03 
1f482     FF FE 00 03 
1f486     01 FE FE 00 | 	byte	$00, $ff, $fd, $ff, $01, $ff, $03, $03, $ff, $fe, $00, $03, $01, $fe, $fe, $00
1f48a     FF 03 FE FC 
1f48e     FB FF 03 00 
1f492     FB F9 FC 01 
1f496     01 FE FA FC | 	byte	$ff, $03, $fe, $fc, $fb, $ff, $03, $00, $fb, $f9, $fc, $01, $01, $fe, $fa, $fc
1f49a     FF FE FF 00 
1f49e     00 FC FC FC 
1f4a2     01 01 FC FB 
1f4a6     FB 01 03 00 | 	byte	$ff, $fe, $ff, $00, $00, $fc, $fc, $fc, $01, $01, $fc, $fb, $fb, $01, $03, $00
1f4aa     FF FE FC 01 
1f4ae     04 01 FE FC 
1f4b2     02 01 FF 00 
1f4b6     FD FF 03 FF | 	byte	$ff, $fe, $fc, $01, $04, $01, $fe, $fc, $02, $01, $ff, $00, $fd, $ff, $03, $ff
1f4ba     03 01 FF FF 
1f4be     00 01 03 02 
1f4c2     00 FC 00 03 
1f4c6     00 FF 01 00 | 	byte	$03, $01, $ff, $ff, $00, $01, $03, $02, $00, $fc, $00, $03, $00, $ff, $01, $00
1f4ca     01 02 FF 05 
1f4ce     01 FF 03 04 
1f4d2     03 02 02 03 
1f4d6     03 04 08 06 | 	byte	$01, $02, $ff, $05, $01, $ff, $03, $04, $03, $02, $02, $03, $03, $04, $08, $06
1f4da     01 05 06 05 
1f4de     0B 0B 07 07 
1f4e2     06 07 0D 09 
1f4e6     07 07 09 09 | 	byte	$01, $05, $06, $05, $0b, $0b, $07, $07, $06, $07, $0d, $09, $07, $07, $09, $09
1f4ea     07 0B 09 07 
1f4ee     07 08 09 0C 
1f4f2     08 08 07 06 
1f4f6     06 07 07 03 | 	byte	$07, $0b, $09, $07, $07, $08, $09, $0c, $08, $08, $07, $06, $06, $07, $07, $03
1f4fa     07 09 03 02 
1f4fe     04 03 03 01 
1f502     01 01 01 00 
1f506     01 01 00 FF | 	byte	$07, $09, $03, $02, $04, $03, $03, $01, $01, $01, $01, $00, $01, $01, $00, $ff
1f50a     FF FE FC FC 
1f50e     01 01 FE F9 
1f512     FD 00 FF FF 
1f516     FB FF FC FB | 	byte	$ff, $fe, $fc, $fc, $01, $01, $fe, $f9, $fd, $00, $ff, $ff, $fb, $ff, $fc, $fb
1f51a     FE FF FE FC 
1f51e     FC FE FC F9 
1f522     FC FB FC FD 
1f526     FE FD F9 F8 | 	byte	$fe, $ff, $fe, $fc, $fc, $fe, $fc, $f9, $fc, $fb, $fc, $fd, $fe, $fd, $f9, $f8
1f52a     FF FE F8 F8 
1f52e     FA FF FC F8 
1f532     FA FB F9 F9 
1f536     FC FE FC FC | 	byte	$ff, $fe, $f8, $f8, $fa, $ff, $fc, $f8, $fa, $fb, $f9, $f9, $fc, $fe, $fc, $fc
1f53a     FB FC FF FC 
1f53e     FE FD FC FD 
1f542     FF FC FF FB 
1f546     FF 00 00 FC | 	byte	$fb, $fc, $ff, $fc, $fe, $fd, $fc, $fd, $ff, $fc, $ff, $fb, $ff, $00, $00, $fc
1f54a     FF FE 03 FE 
1f54e     FC FE 00 01 
1f552     01 FE FC FD 
1f556     01 00 FF FC | 	byte	$ff, $fe, $03, $fe, $fc, $fe, $00, $01, $01, $fe, $fc, $fd, $01, $00, $ff, $fc
1f55a     FF FE FF FF 
1f55e     FF FE FB FE 
1f562     01 FF FE FC 
1f566     FE FF FE FE | 	byte	$ff, $fe, $ff, $ff, $ff, $fe, $fb, $fe, $01, $ff, $fe, $fc, $fe, $ff, $fe, $fe
1f56a     00 FC FC FD 
1f56e     FE 00 FE FC 
1f572     FC FC FE 00 
1f576     FC FE FB FC | 	byte	$00, $fc, $fc, $fd, $fe, $00, $fe, $fc, $fc, $fc, $fe, $00, $fc, $fe, $fb, $fc
1f57a     FE 00 FC FB 
1f57e     FC FF FE FE 
1f582     FE FB FC FE 
1f586     FF FC FE FF | 	byte	$fe, $00, $fc, $fb, $fc, $ff, $fe, $fe, $fe, $fb, $fc, $fe, $ff, $fc, $fe, $ff
1f58a     FF FE FE FC 
1f58e     FF 03 00 FE 
1f592     FF FF 01 03 
1f596     01 FF FF 05 | 	byte	$ff, $fe, $fe, $fc, $ff, $03, $00, $fe, $ff, $ff, $01, $03, $01, $ff, $ff, $05
1f59a     04 00 00 03 
1f59e     04 03 05 03 
1f5a2     02 03 05 06 
1f5a6     03 03 04 07 | 	byte	$04, $00, $00, $03, $04, $03, $05, $03, $02, $03, $05, $06, $03, $03, $04, $07
1f5aa     05 03 04 07 
1f5ae     06 03 03 05 
1f5b2     08 07 01 03 
1f5b6     06 07 07 07 | 	byte	$05, $03, $04, $07, $06, $03, $03, $05, $08, $07, $01, $03, $06, $07, $07, $07
1f5ba     04 03 07 07 
1f5be     07 07 03 06 
1f5c2     07 09 06 05 
1f5c6     07 07 07 07 | 	byte	$04, $03, $07, $07, $07, $07, $03, $06, $07, $09, $06, $05, $07, $07, $07, $07
1f5ca     07 07 07 07 
1f5ce     07 07       | 	byte	$07[6]
1f5d0     0B 06 07 08 
1f5d4     07 07 0B 07 
1f5d8     06 06 07 09 
1f5dc     08 07 08 08 | 	byte	$0b, $06, $07, $08, $07, $07, $0b, $07, $06, $06, $07, $09, $08, $07, $08, $08
1f5e0     07 07 07 07 
1f5e4     07 07       | 	byte	$07[6]
1f5e6     08 06 07 06 
1f5ea     07 06 07 06 
1f5ee     06 07 04 01 
1f5f2     06 07 03 01 | 	byte	$08, $06, $07, $06, $07, $06, $07, $06, $06, $07, $04, $01, $06, $07, $03, $01
1f5f6     03 03 03 03 
1f5fa     04 01 00 01 
1f5fe     02 01 03 04 
1f602     00 FF FE FF | 	byte	$03, $03, $03, $03, $04, $01, $00, $01, $02, $01, $03, $04, $00, $ff, $fe, $ff
1f606     04 03 FF FF 
1f60a     01 02 01 00 
1f60e     FF FF FE FF 
1f612     01 00 FE FE | 	byte	$04, $03, $ff, $ff, $01, $02, $01, $00, $ff, $ff, $fe, $ff, $01, $00, $fe, $fe
1f616     FE FC FD FF 
1f61a     FE FD FB F9 
1f61e     FD FD FD FA 
1f622     F9 F9 FB FB | 	byte	$fe, $fc, $fd, $ff, $fe, $fd, $fb, $f9, $fd, $fd, $fd, $fa, $f9, $f9, $fb, $fb
1f626     FA F8 F8 FA 
1f62a     F9 F8 F8 FB 
1f62e     F9 F8 F8 F8 
1f632     FA FB F8 F9 | 	byte	$fa, $f8, $f8, $fa, $f9, $f8, $f8, $fb, $f9, $f8, $f8, $f8, $fa, $fb, $f8, $f9
1f636     FB F8 F8 FB 
1f63a     FC FC F9 FB 
1f63e     F9 F9 FC FC 
1f642     FE FC FB FD | 	byte	$fb, $f8, $f8, $fb, $fc, $fc, $f9, $fb, $f9, $f9, $fc, $fc, $fe, $fc, $fb, $fd
1f646     FF FF FC FC 
1f64a     FF FF FC FC 
1f64e     FF 00 00 F9 
1f652     FB FF FE 00 | 	byte	$ff, $ff, $fc, $fc, $ff, $ff, $fc, $fc, $ff, $00, $00, $f9, $fb, $ff, $fe, $00
1f656     FF FF FE FC 
1f65a     FE FC FF 00 
1f65e     FE FC FD FF 
1f662     FF FF FC FC | 	byte	$ff, $ff, $fe, $fc, $fe, $fc, $ff, $00, $fe, $fc, $fd, $ff, $ff, $ff, $fc, $fc
1f666     FC FF FE FE 
1f66a     FE FC FB FE 
1f66e     FB FD FE FC 
1f672     FC FD FE FB | 	byte	$fc, $ff, $fe, $fe, $fe, $fc, $fb, $fe, $fb, $fd, $fe, $fc, $fc, $fd, $fe, $fb
1f676     FE FE FB FC 
1f67a     FE FC FC FE 
1f67e     FC FE FC FE 
1f682     FF FE FE FC | 	byte	$fe, $fe, $fb, $fc, $fe, $fc, $fc, $fe, $fc, $fe, $fc, $fe, $ff, $fe, $fe, $fc
1f686     FD FE FF 00 
1f68a     FE FB FD FF 
1f68e     FF FC FB FE 
1f692     FE FC FC FB | 	byte	$fd, $fe, $ff, $00, $fe, $fb, $fd, $ff, $ff, $fc, $fb, $fe, $fe, $fc, $fc, $fb
1f696     FD FC F9 FC 
1f69a     FB FB FB FC 
1f69e     FC FB FC FA 
1f6a2     FB FC FB F9 | 	byte	$fd, $fc, $f9, $fc, $fb, $fb, $fb, $fc, $fc, $fb, $fc, $fa, $fb, $fc, $fb, $f9
1f6a6     FC FD FC FC 
1f6aa     FC FC FE FF 
1f6ae     FC F8 FE FF 
1f6b2     FF FE FB FC | 	byte	$fc, $fd, $fc, $fc, $fc, $fc, $fe, $ff, $fc, $f8, $fe, $ff, $ff, $fe, $fb, $fc
1f6b6     00 FF FE FC 
1f6ba     FB FF 00 00 
1f6be     00 FE FE FE 
1f6c2     FE FF 00 00 | 	byte	$00, $ff, $fe, $fc, $fb, $ff, $00, $00, $00, $fe, $fe, $fe, $fe, $ff, $00, $00
1f6c6     FF FE 00 01 
1f6ca     01 FE FF 01 
1f6ce     01 00 03 03 
1f6d2     FF 03 05 03 | 	byte	$ff, $fe, $00, $01, $01, $fe, $ff, $01, $01, $00, $03, $03, $ff, $03, $05, $03
1f6d6     01 03 03 04 
1f6da     03 05 06 05 
1f6de     03 03 07 07 
1f6e2     06 04 05 07 | 	byte	$01, $03, $03, $04, $03, $05, $06, $05, $03, $03, $07, $07, $06, $04, $05, $07
1f6e6     07 07 07 07 
1f6ea     06 07 07 07 
1f6ee     06 06 06 07 
1f6f2     07 07 07 07 | 	byte	$07, $07, $07, $07, $06, $07, $07, $07, $06, $06, $06, $07, $07, $07, $07, $07
1f6f6     06 06 06 0A 
1f6fa     07 06 07 06 
1f6fe     07 07 06 04 
1f702     04 07 09 04 | 	byte	$06, $06, $06, $0a, $07, $06, $07, $06, $07, $07, $06, $04, $04, $07, $09, $04
1f706     05 04 06 06 
1f70a     05 06 03 07 
1f70e     07 05 03 00 
1f712     04 07 04 00 | 	byte	$05, $04, $06, $06, $05, $06, $03, $07, $07, $05, $03, $00, $04, $07, $04, $00
1f716     01 03 04 03 
1f71a     02 02 02 01 
1f71e     06 03 01 00 
1f722     01 03 01 FF | 	byte	$01, $03, $04, $03, $02, $02, $02, $01, $06, $03, $01, $00, $01, $03, $01, $ff
1f726     03 00 FF 00 
1f72a     03 01 FF FF 
1f72e     00 01 03 FE 
1f732     FE 00 02 00 | 	byte	$03, $00, $ff, $00, $03, $01, $ff, $ff, $00, $01, $03, $fe, $fe, $00, $02, $00
1f736     FF 00 FE FE 
1f73a     00 04 00 FC 
1f73e     FE FF FF 01 
1f742     FF FF FC FB | 	byte	$ff, $00, $fe, $fe, $00, $04, $00, $fc, $fe, $ff, $ff, $01, $ff, $ff, $fc, $fb
1f746     FF 01 00 FC 
1f74a     FD FE FC FE 
1f74e     00 00 FD FC 
1f752     FB FC FE FF | 	byte	$ff, $01, $00, $fc, $fd, $fe, $fc, $fe, $00, $00, $fd, $fc, $fb, $fc, $fe, $ff
1f756     00 FC F9 FD 
1f75a     01 FF FC FC 
1f75e     FF 00 FD FC 
1f762     FF 03 00 FC | 	byte	$00, $fc, $f9, $fd, $01, $ff, $fc, $fc, $ff, $00, $fd, $fc, $ff, $03, $00, $fc
1f766     FE FF 00 FE 
1f76a     00 FF 00 FD 
1f76e     FF 00 FF FE 
1f772     FE FF FF FE | 	byte	$fe, $ff, $00, $fe, $00, $ff, $00, $fd, $ff, $00, $ff, $fe, $fe, $ff, $ff, $fe
1f776     01 FE FE FC 
1f77a     FC FF 00 FC 
1f77e     FE FC FE FD 
1f782     FC FC FB FC | 	byte	$01, $fe, $fe, $fc, $fc, $ff, $00, $fc, $fe, $fc, $fe, $fd, $fc, $fc, $fb, $fc
1f786     FF FC FB FB 
1f78a     FB FD FC FC 
1f78e     FC FB FC FC 
1f792     FA FC FB F9 | 	byte	$ff, $fc, $fb, $fb, $fb, $fd, $fc, $fc, $fc, $fb, $fc, $fc, $fa, $fc, $fb, $f9
1f796     FC FC FC F9 
1f79a     F8 FC FB FC 
1f79e     FC FB FB FC 
1f7a2     FC FC FD FD | 	byte	$fc, $fc, $fc, $f9, $f8, $fc, $fb, $fc, $fc, $fb, $fb, $fc, $fc, $fc, $fd, $fd
1f7a6     FC FB FD FF 
1f7aa     FF FC FD FE 
1f7ae     FF FE FF FE 
1f7b2     FF 03 00 FF | 	byte	$fc, $fb, $fd, $ff, $ff, $fc, $fd, $fe, $ff, $fe, $ff, $fe, $ff, $03, $00, $ff
1f7b6     00 00 01 00 
1f7ba     00 03 01 02 
1f7be     01 01 03 03 
1f7c2     03 04 03 03 | 	byte	$00, $00, $01, $00, $00, $03, $01, $02, $01, $01, $03, $03, $03, $04, $03, $03
1f7c6     03 03 05 03 
1f7ca     06 07 07 06 
1f7ce     03 04 07 07 
1f7d2     06 06 07 07 | 	byte	$03, $03, $05, $03, $06, $07, $07, $06, $03, $04, $07, $07, $06, $06, $07, $07
1f7d6     07 09 06 07 
1f7da     07 09 07 07 
1f7de     07 07 07 07 
1f7e2     07 07 07 06 | 	byte	$07, $09, $06, $07, $07, $09, $07, $07, $07, $07, $07, $07, $07, $07, $07, $06
1f7e6     06 09 08 06 
1f7ea     07 07 07 06 
1f7ee     04 05 07 04 
1f7f2     06 06 04 01 | 	byte	$06, $09, $08, $06, $07, $07, $07, $06, $04, $05, $07, $04, $06, $06, $04, $01
1f7f6     03 07 04 03 
1f7fa     01 03 04 03 
1f7fe     03 02 01 03 
1f802     03 01 01 03 | 	byte	$03, $07, $04, $03, $01, $03, $04, $03, $03, $02, $01, $03, $03, $01, $01, $03
1f806     03 03 00 FF 
1f80a     03 02 02 01 
1f80e     01 03 01 02 
1f812     02 01 02 01 | 	byte	$03, $03, $00, $ff, $03, $02, $02, $01, $01, $03, $01, $02, $02, $01, $02, $01
1f816     03 03 01 FF 
1f81a     01 01 03 00 
1f81e     FF 01 02 00 
1f822     01 00 01 03 | 	byte	$03, $03, $01, $ff, $01, $01, $03, $00, $ff, $01, $02, $00, $01, $00, $01, $03
1f826     03 01 00 FF 
1f82a     01 FF 03 03 
1f82e     01 01 00 FF 
1f832     02 00 03 01 | 	byte	$03, $01, $00, $ff, $01, $ff, $03, $03, $01, $01, $00, $ff, $02, $00, $03, $01
1f836     01 02 01 01 
1f83a     01 01 00 FF 
1f83e     02 01 01 01 
1f842     01 01 FF 00 | 	byte	$01, $02, $01, $01, $01, $01, $00, $ff, $02, $01, $01, $01, $01, $01, $ff, $00
1f846     03 03 00 FF 
1f84a     00 01 02 00 
1f84e     00 00 00 00 
1f852     FE 01 01 FF | 	byte	$03, $03, $00, $ff, $00, $01, $02, $00, $00, $00, $00, $00, $fe, $01, $01, $ff
1f856     FE FF 00 01 
1f85a     FE FE FD FF 
1f85e     FF FF FD FC 
1f862     FF 00 FE FF | 	byte	$fe, $ff, $00, $01, $fe, $fe, $fd, $ff, $ff, $ff, $fd, $fc, $ff, $00, $fe, $ff
1f866     FC FE FE FF 
1f86a     FC FC FE FF 
1f86e     FE FC FE FF 
1f872     FC FB FE FF | 	byte	$fc, $fe, $fe, $ff, $fc, $fc, $fe, $ff, $fe, $fc, $fe, $ff, $fc, $fb, $fe, $ff
1f876     FE FC FC FB 
1f87a     FC FE FC FC 
1f87e     FC FC FC FC 
1f882     FF FC FC FC | 	byte	$fe, $fc, $fc, $fb, $fc, $fe, $fc, $fc, $fc, $fc, $fc, $fc, $ff, $fc, $fc, $fc
1f886     FD FF FC FC 
1f88a     FC FC FE 00 
1f88e     00 FC F9 FC 
1f892     00 00 FD FC | 	byte	$fd, $ff, $fc, $fc, $fc, $fc, $fe, $00, $00, $fc, $f9, $fc, $00, $00, $fd, $fc
1f896     FE FF FF FC 
1f89a     FE FF FE FE 
1f89e     FF FF FE FD 
1f8a2     FF FE FF 00 | 	byte	$fe, $ff, $ff, $fc, $fe, $ff, $fe, $fe, $ff, $ff, $fe, $fd, $ff, $fe, $ff, $00
1f8a6     FF FE FC FE 
1f8aa     FF FF FF FE 
1f8ae     FF FE FE FF 
1f8b2     FE FF FE FE | 	byte	$ff, $fe, $fc, $fe, $ff, $ff, $ff, $fe, $ff, $fe, $fe, $ff, $fe, $ff, $fe, $fe
1f8b6     FD FE FF FE 
1f8ba     FE FC F9 FE 
1f8be     FF FE FC FA 
1f8c2     FC FC FC FC | 	byte	$fd, $fe, $ff, $fe, $fe, $fc, $f9, $fe, $ff, $fe, $fc, $fa, $fc, $fc, $fc, $fc
1f8c6     FB F9 F9 FD 
1f8ca     FB F9 F9 F9 
1f8ce     FB FA FB FA 
1f8d2     F8 F9 F8 FB | 	byte	$fb, $f9, $f9, $fd, $fb, $f9, $f9, $f9, $fb, $fa, $fb, $fa, $f8, $f9, $f8, $fb
1f8d6     FB FB FC F9 
1f8da     F8 F9 FB FC 
1f8de     FA F9 F9 FA 
1f8e2     FB FB FB FA | 	byte	$fb, $fb, $fc, $f9, $f8, $f9, $fb, $fc, $fa, $f9, $f9, $fa, $fb, $fb, $fb, $fa
1f8e6     FA F9 FA FE 
1f8ea     FC F9 FA FC 
1f8ee     FC F9 FC FC 
1f8f2     FC FC FC FE | 	byte	$fa, $f9, $fa, $fe, $fc, $f9, $fa, $fc, $fc, $f9, $fc, $fc, $fc, $fc, $fc, $fe
1f8f6     FD FC FD FE 
1f8fa     FE FF 00 01 
1f8fe     FF FF 03 03 
1f902     FF FF 01 05 | 	byte	$fd, $fc, $fd, $fe, $fe, $ff, $00, $01, $ff, $ff, $03, $03, $ff, $ff, $01, $05
1f906     06 03 02 03 
1f90a     03 06 05 05 
1f90e     04 05 07 07 
1f912     05 04 07 09 | 	byte	$06, $03, $02, $03, $03, $06, $05, $05, $04, $05, $07, $07, $05, $04, $07, $09
1f916     07 05 07 09 
1f91a     07 06 07 07 
1f91e     07 08 07 07 
1f922     07 06 09 0A | 	byte	$07, $05, $07, $09, $07, $06, $07, $07, $07, $08, $07, $07, $07, $06, $09, $0a
1f926     08 06 09 0B 
1f92a     09 07 07 07 
1f92e     09 09 09 07 
1f932     07 07 08 08 | 	byte	$08, $06, $09, $0b, $09, $07, $07, $07, $09, $09, $09, $07, $07, $07, $08, $08
1f936     07 07 07 07 
1f93a     06 07 07 06 
1f93e     07 05 03 03 
1f942     03 05 03 03 | 	byte	$07, $07, $07, $07, $06, $07, $07, $06, $07, $05, $03, $03, $03, $05, $03, $03
1f946     04 01 03 03 
1f94a     03 01 01 01 
1f94e     02 02 01 00 
1f952     00 FF 00 03 | 	byte	$04, $01, $03, $03, $03, $01, $01, $01, $02, $02, $01, $00, $00, $ff, $00, $03
1f956     03 00 FE FF 
1f95a     00 01 00 FE 
1f95e     FF 00 01 00 
1f962     FF FF FE FF | 	byte	$03, $00, $fe, $ff, $00, $01, $00, $fe, $ff, $00, $01, $00, $ff, $ff, $fe, $ff
1f966     01 00 01 FE 
1f96a     FE FF 00 00 
1f96e     00 00 FD FF 
1f972     01 01 01 FF | 	byte	$01, $00, $01, $fe, $fe, $ff, $00, $00, $00, $00, $fd, $ff, $01, $01, $01, $ff
1f976     FE FF 01 01 
1f97a     00 FE 00 01 
1f97e     00 FF 00 01 
1f982     02 00 FF 00 | 	byte	$fe, $ff, $01, $01, $00, $fe, $00, $01, $00, $ff, $00, $01, $02, $00, $ff, $00
1f986     03 01 FF 00 
1f98a     00 00 01 00 
1f98e     FF 00 00 00 
1f992     00 FF 00 FF | 	byte	$03, $01, $ff, $00, $00, $00, $01, $00, $ff, $00, $00, $00, $00, $ff, $00, $ff
1f996     00 00 FE FF 
1f99a     00 FF FE FE 
1f99e     FF 00 FE FF 
1f9a2     00 FE FE FE | 	byte	$00, $00, $fe, $ff, $00, $ff, $fe, $fe, $ff, $00, $fe, $ff, $00, $fe, $fe, $fe
1f9a6     FC FE FF 00 
1f9aa     FE FC FD FF 
1f9ae     FF FF FE FD 
1f9b2     FE FE FE FC | 	byte	$fc, $fe, $ff, $00, $fe, $fc, $fd, $ff, $ff, $ff, $fe, $fd, $fe, $fe, $fe, $fc
1f9b6     FE FE FC FB 
1f9ba     FC FC FF FC 
1f9be     F9 FC FC FE 
1f9c2     FC FB FB FA | 	byte	$fe, $fe, $fc, $fb, $fc, $fc, $ff, $fc, $f9, $fc, $fc, $fe, $fc, $fb, $fb, $fa
1f9c6     FC FC FC FA 
1f9ca     F9 F9 FC FB 
1f9ce     FB FB F9 FB 
1f9d2     FC FA FC FC | 	byte	$fc, $fc, $fc, $fa, $f9, $f9, $fc, $fb, $fb, $fb, $f9, $fb, $fc, $fa, $fc, $fc
1f9d6     F9 F9 FB FC 
1f9da     FC FB F9 FB 
1f9de     FE FC FB FB 
1f9e2     FC FC FC FB | 	byte	$f9, $f9, $fb, $fc, $fc, $fb, $f9, $fb, $fe, $fc, $fb, $fb, $fc, $fc, $fc, $fb
1f9e6     FC FE FB FD 
1f9ea     FE FC FE FC 
1f9ee     FD FE FF FF 
1f9f2     FE FF FF FF | 	byte	$fc, $fe, $fb, $fd, $fe, $fc, $fe, $fc, $fd, $fe, $ff, $ff, $fe, $ff, $ff, $ff
1f9f6     FF 00 01 00 
1f9fa     FE FF 00 01 
1f9fe     01 00 00 00 
1fa02     01 03 00 03 | 	byte	$ff, $00, $01, $00, $fe, $ff, $00, $01, $01, $00, $00, $00, $01, $03, $00, $03
1fa06     02 01 02 03 
1fa0a     04 01 01 03 
1fa0e     03 04 04 03 
1fa12     03 03 05 06 | 	byte	$02, $01, $02, $03, $04, $01, $01, $03, $03, $04, $04, $03, $03, $03, $05, $06
1fa16     03 03 06 06 
1fa1a     06 04 06 07 
1fa1e     07 06 07 03 
1fa22     06 07 07 07 | 	byte	$03, $03, $06, $06, $06, $04, $06, $07, $07, $06, $07, $03, $06, $07, $07, $07
1fa26     07 06 07 07 
1fa2a     07 06 06 07 
1fa2e     07 07 07 07 
1fa32     07 07 06 07 | 	byte	$07, $06, $07, $07, $07, $06, $06, $07, $07, $07, $07, $07, $07, $07, $06, $07
1fa36     07 06 06 07 
1fa3a     06 05 05 06 
1fa3e     05 06 06 03 
1fa42     04 06 06 03 | 	byte	$07, $06, $06, $07, $06, $05, $05, $06, $05, $06, $06, $03, $04, $06, $06, $03
1fa46     03 03 04 06 
1fa4a     04 03 03 04 
1fa4e     03 03 06 04 
1fa52     03 03 03 04 | 	byte	$03, $03, $04, $06, $04, $03, $03, $04, $03, $03, $06, $04, $03, $03, $03, $04
1fa56     03 02 03 03 
1fa5a     03 03 01 03 
1fa5e     02 03 03 01 
1fa62     00 01 01 01 | 	byte	$03, $02, $03, $03, $03, $03, $01, $03, $02, $03, $03, $01, $00, $01, $01, $01
1fa66     03 00 FE 00 
1fa6a     01 00 00 01 
1fa6e     00 FE 00 FE 
1fa72     FF 00 FF FF | 	byte	$03, $00, $fe, $00, $01, $00, $00, $01, $00, $fe, $00, $fe, $ff, $00, $ff, $ff
1fa76     FE FF FF FE 
1fa7a     FF FF FF FE 
1fa7e     FE FF FF FE 
1fa82     FC FE FE FE | 	byte	$fe, $ff, $ff, $fe, $ff, $ff, $ff, $fe, $fe, $ff, $ff, $fe, $fc, $fe, $fe, $fe
1fa86     FF FE FE FE 
1fa8a     FE FD FC FE 
1fa8e     FE FE FE FC 
1fa92     FC FE FE FF | 	byte	$ff, $fe, $fe, $fe, $fe, $fd, $fc, $fe, $fe, $fe, $fe, $fc, $fc, $fe, $fe, $ff
1fa96     FC FC FE FF 
1fa9a     FE FF FE FE 
1fa9e     FE FE FF FF 
1faa2     FF 00 FE FE | 	byte	$fc, $fc, $fe, $ff, $fe, $ff, $fe, $fe, $fe, $fe, $ff, $ff, $ff, $00, $fe, $fe
1faa6     00 00 00 00 
1faaa     FF FF FF 01 
1faae     01 00 FF FF 
1fab2     00 00 00 FF | 	byte	$00, $00, $00, $00, $ff, $ff, $ff, $01, $01, $00, $ff, $ff, $00, $00, $00, $ff
1fab6     01 00 FF 00 
1faba     FF 00 00 FF 
1fabe     00 FF FF 01 
1fac2     00 00 FF FE | 	byte	$01, $00, $ff, $00, $ff, $00, $00, $ff, $00, $ff, $ff, $01, $00, $00, $ff, $fe
1fac6     01 00 FF FF 
1faca     00 00 FF FE 
1face     FF FF FF FF 
1fad2     FF FE FE FD | 	byte	$01, $00, $ff, $ff, $00, $00, $ff, $fe, $ff, $ff, $ff, $ff, $ff, $fe, $fe, $fd
1fad6     FE FE FE FD 
1fada     FC FC FC FC 
1fade     FC FC FC FA 
1fae2     FB FC FC FB | 	byte	$fe, $fe, $fe, $fd, $fc, $fc, $fc, $fc, $fc, $fc, $fc, $fa, $fb, $fc, $fc, $fb
1fae6     F9 F9 F9 FC 
1faea     FB F9 FA F9 
1faee     F9 F9 F9 F9 
1faf2     F9 FA FB FB | 	byte	$f9, $f9, $f9, $fc, $fb, $f9, $fa, $f9, $f9, $f9, $f9, $f9, $f9, $fa, $fb, $fb
1faf6     FB FA FB F9 
1fafa     F8 FA FB FB 
1fafe     FC FC FA F9 
1fb02     F9 FC FC FC | 	byte	$fb, $fa, $fb, $f9, $f8, $fa, $fb, $fb, $fc, $fc, $fa, $f9, $f9, $fc, $fc, $fc
1fb06     FB FC FC FC 
1fb0a     FC FC FD FC 
1fb0e     FB FC FE FF 
1fb12     FC FD FD FE | 	byte	$fb, $fc, $fc, $fc, $fc, $fc, $fd, $fc, $fb, $fc, $fe, $ff, $fc, $fd, $fd, $fe
1fb16     FE FE FF FE 
1fb1a     FF FE FF FF 
1fb1e     00 00 00 00 
1fb22     FF 00 01 00 | 	byte	$fe, $fe, $ff, $fe, $ff, $fe, $ff, $ff, $00, $00, $00, $00, $ff, $00, $01, $00
1fb26     FF 01 01 01 
1fb2a     01 02 01 01 
1fb2e     01 01 02 03 
1fb32     03 03 03 03 | 	byte	$ff, $01, $01, $01, $01, $02, $01, $01, $01, $01, $02, $03, $03, $03, $03, $03
1fb36     01 02 03 03 
1fb3a     03 03 03 03 
1fb3e     03 03 04 04 
1fb42     03 04 05 04 | 	byte	$01, $02, $03, $03, $03, $03, $03, $03, $03, $03, $04, $04, $03, $04, $05, $04
1fb46     05 05 04 04 
1fb4a     05 04 06 06 
1fb4e     06 06 06 05 
1fb52     04 06 07 04 | 	byte	$05, $05, $04, $04, $05, $04, $06, $06, $06, $06, $06, $05, $04, $06, $07, $04
1fb56     03 04 06 05 
1fb5a     05 05 03 03 
1fb5e     04 06 06 03 
1fb62     01 02 05 05 | 	byte	$03, $04, $06, $05, $05, $05, $03, $03, $04, $06, $06, $03, $01, $02, $05, $05
1fb66     03 03 01 01 
1fb6a     03 02 03 03 
1fb6e     01 01 00 03 
1fb72     03 00 00 01 | 	byte	$03, $03, $01, $01, $03, $02, $03, $03, $01, $01, $00, $03, $03, $00, $00, $01
1fb76     03 01 00 00 
1fb7a     01 01 00 01 
1fb7e     00 FF 00 00 
1fb82     00 FF FF FE | 	byte	$03, $01, $00, $00, $01, $01, $00, $01, $00, $ff, $00, $00, $00, $ff, $ff, $fe
1fb86     FF 00 FF FF 
1fb8a     01 FF FF FF 
1fb8e     FF FF FF FF 
1fb92     FF FF FF 00 | 	byte	$ff, $00, $ff, $ff, $01, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $00
1fb96     00 FF 00 00 
1fb9a     00 00 00 FF 
1fb9e     00 01 01 01 
1fba2     01 01 FF 01 | 	byte	$00, $ff, $00, $00, $00, $00, $00, $ff, $00, $01, $01, $01, $01, $01, $ff, $01
1fba6     02 03 03 01 
1fbaa     01 02 01 03 
1fbae     03 03 01 03 
1fbb2     03 03 03 04 | 	byte	$02, $03, $03, $01, $01, $02, $01, $03, $03, $03, $01, $03, $03, $03, $03, $04
1fbb6     03 03 03 01 
1fbba     05 06 03 01 
1fbbe     01 03 05 03 
1fbc2     03 03 01 03 | 	byte	$03, $03, $03, $01, $05, $06, $03, $01, $01, $03, $05, $03, $03, $03, $01, $03
1fbc6     03 03 00 01 
1fbca     03 03 00 01 
1fbce     01 01 00 FF 
1fbd2     FF 00 00 00 | 	byte	$03, $03, $00, $01, $03, $03, $00, $01, $01, $01, $00, $ff, $ff, $00, $00, $00
1fbd6     FF FE FE FF 
1fbda     FF FE FD FF 
1fbde     FF FD FC FC 
1fbe2     FF FE FC FC | 	byte	$ff, $fe, $fe, $ff, $ff, $fe, $fd, $ff, $ff, $fd, $fc, $fc, $ff, $fe, $fc, $fc
1fbe6     FD FE FE FD 
1fbea     FE FC FC FE 
1fbee     FE FC FC FE 
1fbf2     FE FC FC FE | 	byte	$fd, $fe, $fe, $fd, $fe, $fc, $fc, $fe, $fe, $fc, $fc, $fe, $fe, $fc, $fc, $fe
1fbf6     FD FC FC FC 
1fbfa     FE FC FA FC 
1fbfe     FE FC FC FC 
1fc02     FC FC FC FD | 	byte	$fd, $fc, $fc, $fc, $fe, $fc, $fa, $fc, $fe, $fc, $fc, $fc, $fc, $fc, $fc, $fd
1fc06     FC FB FB FD 
1fc0a     FE FE FC FC 
1fc0e     FC FE FE FE 
1fc12     FF FE FC FF | 	byte	$fc, $fb, $fb, $fd, $fe, $fe, $fc, $fc, $fc, $fe, $fe, $fe, $ff, $fe, $fc, $ff
1fc16     FF FF 00 FE 
1fc1a     FE FF 01 00 
1fc1e     FF FF 00 FF 
1fc22     00 FF 00 00 | 	byte	$ff, $ff, $00, $fe, $fe, $ff, $01, $00, $ff, $ff, $00, $ff, $00, $ff, $00, $00
1fc26     00 00 00 00 
1fc2a     00 00       | 	byte	$00[6]
1fc2c     01 01 00 FF 
1fc30     00 01 01 00 
1fc34     FF 01 00 00 
1fc38     01 00 FF 01 | 	byte	$01, $01, $00, $ff, $00, $01, $01, $00, $ff, $01, $00, $00, $01, $00, $ff, $01
1fc3c     01 01 00 00 
1fc40     03 01 01 01 
1fc44     02 01 01 01 
1fc48     01 01 01 01 | 	byte	$01, $01, $00, $00, $03, $01, $01, $01, $02, $01, $01, $01, $01, $01, $01, $01
1fc4c     01 03 02 00 
1fc50     01 01 01 03 
1fc54     03 03 00 FF 
1fc58     03 03 01 01 | 	byte	$01, $03, $02, $00, $01, $01, $01, $03, $03, $03, $00, $ff, $03, $03, $01, $01
1fc5c     00 01 02 03 
1fc60     03 02 01 00 
1fc64     01 03 02 01 
1fc68     01 00 00 01 | 	byte	$00, $01, $02, $03, $03, $02, $01, $00, $01, $03, $02, $01, $01, $00, $00, $01
1fc6c     02 01 01 00 
1fc70     01 00 01 01 
1fc74     00 00 00 00 
1fc78     01 00 FF 00 | 	byte	$02, $01, $01, $00, $01, $00, $01, $01, $00, $00, $00, $00, $01, $00, $ff, $00
1fc7c     01 01 00 00 
1fc80     01 01 00 01 
1fc84     01 01 02 01 
1fc88     01 01 01 01 | 	byte	$01, $01, $00, $00, $01, $01, $00, $01, $01, $01, $02, $01, $01, $01, $01, $01
1fc8c     03 01 02 01 
1fc90     03 02 03 02 
1fc94     01 03 03 01 
1fc98     03 03 03 01 | 	byte	$03, $01, $02, $01, $03, $02, $03, $02, $01, $03, $03, $01, $03, $03, $03, $01
1fc9c     01 03 03 03 
1fca0     01 01 01 03 
1fca4     02 01 01 01 
1fca8     01 01 01 01 | 	byte	$01, $03, $03, $03, $01, $01, $01, $03, $02, $01, $01, $01, $01, $01, $01, $01
1fcac     01 03 01 01 
1fcb0     03 01 01 00 
1fcb4     01 03 03 01 
1fcb8     01 00 00 03 | 	byte	$01, $03, $01, $01, $03, $01, $01, $00, $01, $03, $03, $01, $01, $00, $00, $03
1fcbc     03 01 00 FF 
1fcc0     00 01 01 01 
1fcc4     FF FF 00 00 
1fcc8     01 00 FE FF | 	byte	$03, $01, $00, $ff, $00, $01, $01, $01, $ff, $ff, $00, $00, $01, $00, $fe, $ff
1fccc     00 01 00 FF 
1fcd0     FF FF FF 00 
1fcd4     FF FF FE FE 
1fcd8     FF 00 FF FE | 	byte	$00, $01, $00, $ff, $ff, $ff, $ff, $00, $ff, $ff, $fe, $fe, $ff, $00, $ff, $fe
1fcdc     FF FF FE 00 
1fce0     FF 00 FE FE 
1fce4     00 00 FF FE 
1fce8     FE FE 00 00 | 	byte	$ff, $ff, $fe, $00, $ff, $00, $fe, $fe, $00, $00, $ff, $fe, $fe, $fe, $00, $00
1fcec     00 FF FE FF 
1fcf0     FF FE FF FF 
1fcf4     FF FE FE FE 
1fcf8     FE FF FE FD | 	byte	$00, $ff, $fe, $ff, $ff, $fe, $ff, $ff, $ff, $fe, $fe, $fe, $fe, $ff, $fe, $fd
1fcfc     FF FE FE FF 
1fd00     FE FE FE FE 
1fd04     FF FE FD FE 
1fd08     FD FE FF FE | 	byte	$ff, $fe, $fe, $ff, $fe, $fe, $fe, $fe, $ff, $fe, $fd, $fe, $fd, $fe, $ff, $fe
1fd0c     FE FE FC FE 
1fd10     FF FF FD FC 
1fd14     FE 00 FF FE 
1fd18     FC FC FE FF | 	byte	$fe, $fe, $fc, $fe, $ff, $ff, $fd, $fc, $fe, $00, $ff, $fe, $fc, $fc, $fe, $ff
1fd1c     FF FE FD FE 
1fd20     FD FE FE FE 
1fd24     FE FC FE FF 
1fd28     FF FE FE FD | 	byte	$ff, $fe, $fd, $fe, $fd, $fe, $fe, $fe, $fe, $fc, $fe, $ff, $ff, $fe, $fe, $fd
1fd2c     FE FE FE FF 
1fd30     FE FC FC FE 
1fd34     FF FF FE FC 
1fd38     FD FF FF FF | 	byte	$fe, $fe, $fe, $ff, $fe, $fc, $fc, $fe, $ff, $ff, $fe, $fc, $fd, $ff, $ff, $ff
1fd3c     FE FC FE 00 
1fd40     FF FF FE FE 
1fd44     FF FF FF FF 
1fd48     FF FE FF FF | 	byte	$fe, $fc, $fe, $00, $ff, $ff, $fe, $fe, $ff, $ff, $ff, $ff, $ff, $fe, $ff, $ff
1fd4c     FF FF FF FF 
1fd50     FF          | 	byte	$ff[5]
1fd51     00 00 00 FF 
1fd55     FE FF 00 00 
1fd59     FF FE FF 00 
1fd5d     FF FF FF FF | 	byte	$00, $00, $00, $ff, $fe, $ff, $00, $00, $ff, $fe, $ff, $00, $ff, $ff, $ff, $ff
1fd61     FF FE FF FF 
1fd65     00 00 FE FF 
1fd69     FF FF FF 00 
1fd6d     00 FF FF 00 | 	byte	$ff, $fe, $ff, $ff, $00, $00, $fe, $ff, $ff, $ff, $ff, $00, $00, $ff, $ff, $00
1fd71     00 00 FF FF 
1fd75     FF 00 01 01 
1fd79     01 00 00 03 
1fd7d     03 00 03 03 | 	byte	$00, $00, $ff, $ff, $ff, $00, $01, $01, $01, $00, $00, $03, $03, $00, $03, $03
1fd81     02 03 03 03 
1fd85     04 03 03 03 
1fd89     03 05 05 03 
1fd8d     04 04 03 03 | 	byte	$02, $03, $03, $03, $04, $03, $03, $03, $03, $05, $05, $03, $04, $04, $03, $03
1fd91     03 04 04 03 
1fd95     03 04 04 03 
1fd99     03 03 03 04 
1fd9d     04 03 03 04 | 	byte	$03, $04, $04, $03, $03, $04, $04, $03, $03, $03, $03, $04, $04, $03, $03, $04
1fda1     03 03 03 03 
1fda5     03 03 03    | 	byte	$03[7]
1fda8     02 03 01 03 
1fdac     04 03 01 03 
1fdb0     03 03 01 01 
1fdb4     03 03 02 01 | 	byte	$02, $03, $01, $03, $04, $03, $01, $03, $03, $03, $01, $01, $03, $03, $02, $01
1fdb8     01 01 01 01 
1fdbc     01 01 01    | 	byte	$01[7]
1fdbf     00 00 01 01 
1fdc3     00 FF FF 01 
1fdc7     01 00 FF FF 
1fdcb     00 00 00 00 | 	byte	$00, $00, $01, $01, $00, $ff, $ff, $01, $01, $00, $ff, $ff, $00, $00, $00, $00
1fdcf     FE FF 00 00 
1fdd3     00 00 FF FF 
1fdd7     00 00 00 00 
1fddb     FF 00 00 00 | 	byte	$fe, $ff, $00, $00, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00, $00, $00
1fddf     00 00 00 00 
1fde3     00 00       | 	byte	$00[6]
1fde5     FF 01 01 00 
1fde9     FF 00 01 00 
1fded     01 00 00 FF 
1fdf1     00 00 00 FF | 	byte	$ff, $01, $01, $00, $ff, $00, $01, $00, $01, $00, $00, $ff, $00, $00, $00, $ff
1fdf5     00 00 00 FF 
1fdf9     01 00 FF FF 
1fdfd     FF FF 00 FF 
1fe01     FE FF FF FF | 	byte	$00, $00, $00, $ff, $01, $00, $ff, $ff, $ff, $ff, $00, $ff, $fe, $ff, $ff, $ff
1fe05     FF FF FE FE 
1fe09     FF FF FE FE 
1fe0d     FE FF FE FF 
1fe11     FE FE FE FD | 	byte	$ff, $ff, $fe, $fe, $ff, $ff, $fe, $fe, $fe, $ff, $fe, $ff, $fe, $fe, $fe, $fd
1fe15     FE FF FE FD 
1fe19     FD FE FE FE 
1fe1d     FE FF FE FC 
1fe21     FD FE FF FE | 	byte	$fe, $ff, $fe, $fd, $fd, $fe, $fe, $fe, $fe, $ff, $fe, $fc, $fd, $fe, $ff, $fe
1fe25     FF FE FE FF 
1fe29     FF FF FF FE 
1fe2d     FF 00 00 FF 
1fe31     FF 00 00 00 | 	byte	$ff, $fe, $fe, $ff, $ff, $ff, $ff, $fe, $ff, $00, $00, $ff, $ff, $00, $00, $00
1fe35     FF 00 00 00 
1fe39     00 FF 00 00 
1fe3d     FF 01 00 00 
1fe41     00 FF 01 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $01, $00, $00, $00, $ff, $01, $00
1fe45     00 FF 00 01 
1fe49     00 FF 00 FF 
1fe4d     00 00 00 00 
1fe51     00 FF FF 00 | 	byte	$00, $ff, $00, $01, $00, $ff, $00, $ff, $00, $00, $00, $00, $00, $ff, $ff, $00
1fe55     00 FF FF 00 
1fe59     00 00 00 00 
1fe5d     00 00 FF 00 
1fe61     00 FF 00 FF | 	byte	$00, $ff, $ff, $00, $00, $00, $00, $00, $00, $00, $ff, $00, $00, $ff, $00, $ff
1fe65     00 01 00 FF 
1fe69     FF 00 00 00 
1fe6d     00 00 00 00 
1fe71     01 00 01 01 | 	byte	$00, $01, $00, $ff, $ff, $00, $00, $00, $00, $00, $00, $00, $01, $00, $01, $01
1fe75     00 00 01 01 
1fe79     01 01 01 01 
1fe7d     01 01 02 01 
1fe81     01 01 01 01 | 	byte	$00, $00, $01, $01, $01, $01, $01, $01, $01, $01, $02, $01, $01, $01, $01, $01
1fe85     03 03 01 01 
1fe89     01 03 03 01 
1fe8d     01 01 01 03 
1fe91     03 02 01 00 | 	byte	$03, $03, $01, $01, $01, $03, $03, $01, $01, $01, $01, $03, $03, $02, $01, $00
1fe95     01 03 02 01 
1fe99     01 01 03 01 
1fe9d     01 01 01 01 
1fea1     01 01 01 01 | 	byte	$01, $03, $02, $01, $01, $01, $03, $01, $01, $01, $01, $01, $01, $01, $01, $01
1fea5     01 01 00 01 
1fea9     01 01 01 01 
1fead     00 00 01 01 
1feb1     01 01 00 01 | 	byte	$01, $01, $00, $01, $01, $01, $01, $01, $00, $00, $01, $01, $01, $01, $00, $01
1feb5     01 01 01 01 
1feb9     01 01 01 01 | 	byte	$01[8]
1febd     00 01 01 00 
1fec1     01 01 00 00 
1fec5     00 00 00 00 
1fec9     00 00 FF 00 | 	byte	$00, $01, $01, $00, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $ff, $00
1fecd     00 FF 00 FF 
1fed1     FF FF FF 01 
1fed5     00 FF FF FF 
1fed9     00 00 FF FF | 	byte	$00, $ff, $00, $ff, $ff, $ff, $ff, $01, $00, $ff, $ff, $ff, $00, $00, $ff, $ff
1fedd     FF FF FF 00 
1fee1     00 FF FE FF 
1fee5     00 FF FF FF 
1fee9     FF FF FF FF | 	byte	$ff, $ff, $ff, $00, $00, $ff, $fe, $ff, $00, $ff, $ff, $ff, $ff, $ff, $ff, $ff
1feed     FF FF FF FE 
1fef1     FF FF FF FF 
1fef5     FE FE FE FF 
1fef9     FF FE FE FF | 	byte	$ff, $ff, $ff, $fe, $ff, $ff, $ff, $ff, $fe, $fe, $fe, $ff, $ff, $fe, $fe, $ff
1fefd     FF FF FF FF 
1ff01     FF FF FF FF | 	byte	$ff[8]
1ff05     00 FF FF 00 
1ff09     00 FF 00 FF 
1ff0d     00 00 00 01 
1ff11     01 01 00 00 | 	byte	$00, $ff, $ff, $00, $00, $ff, $00, $ff, $00, $00, $00, $01, $01, $01, $00, $00
1ff15     01 03 01 01 
1ff19     01 01 03 02 
1ff1d     03 02 02 01 
1ff21     02 03 02 01 | 	byte	$01, $03, $01, $01, $01, $01, $03, $02, $03, $02, $02, $01, $02, $03, $02, $01
1ff25     01 01 03 03 
1ff29     02 01 01 01 
1ff2d     02 01 01 00 
1ff31     00 02 01 00 | 	byte	$01, $01, $03, $03, $02, $01, $01, $01, $02, $01, $01, $00, $00, $02, $01, $00
1ff35     00 00 00 FF 
1ff39     00 00 FF 00 
1ff3d     FF FE FF FF 
1ff41     FF FF FF FE | 	byte	$00, $00, $00, $ff, $00, $00, $ff, $00, $ff, $fe, $ff, $ff, $ff, $ff, $ff, $fe
1ff45     FE FE FE FE 
1ff49     FE FE       | 	byte	$fe[6]
1ff4b     FD FE FE FE 
1ff4f     FE FD FD FE 
1ff53     FD FD FE FE 
1ff57     FD FC FE FE | 	byte	$fd, $fe, $fe, $fe, $fe, $fd, $fd, $fe, $fd, $fd, $fe, $fe, $fd, $fc, $fe, $fe
1ff5b     FE FE FE FC 
1ff5f     FC FD FE FE 
1ff63     FC FC FE FE 
1ff67     FE FC FD FE | 	byte	$fe, $fe, $fe, $fc, $fc, $fd, $fe, $fe, $fc, $fc, $fe, $fe, $fe, $fc, $fd, $fe
1ff6b     FE FE FE FE 
1ff6f     FE FE       | 	byte	$fe[6]
1ff71     FF FF FF FF 
1ff75     FE FF 00 00 
1ff79     00 FF FF FF 
1ff7d     01 00 00 00 | 	byte	$ff, $ff, $ff, $ff, $fe, $ff, $00, $00, $00, $ff, $ff, $ff, $01, $00, $00, $00
1ff81     FF 01 02 01 
1ff85     00 00 01 01 
1ff89     01 01 00 01 
1ff8d     01 00 00 01 | 	byte	$ff, $01, $02, $01, $00, $00, $01, $01, $01, $01, $00, $01, $01, $00, $00, $01
1ff91     01 01 01 01 
1ff95     00 01 00 01 
1ff99     01 00 00 01 
1ff9d     01 00 00 01 | 	byte	$01, $01, $01, $01, $00, $01, $00, $01, $01, $00, $00, $01, $01, $00, $00, $01
1ffa1     00 00 00 00 
1ffa5     00          | 	byte	$00[5]
1ffa6     01 02 00 02 
1ffaa     FF 01 00 FC 
1ffae     08 07 EC 2B 
1ffb2     D3 10 D9 55 | 	byte	$01, $02, $00, $02, $ff, $01, $00, $fc, $08, $07, $ec, $2b, $d3, $10, $d9, $55
1ffb6     B5 FE 4F DF 
1ffba     C5 78 BE 28 
1ffbe     05 E6 2E BC 
1ffc2     5D D1 05 E9 | 	byte	$b5, $fe, $4f, $df, $c5, $78, $be, $28, $05, $e6, $2e, $bc, $5d, $d1, $05, $e9
1ffc6     27 DB 2E D0 
1ffca     2E C0 57 97 
1ffce     33 D0 1D F7 
1ffd2     CD 3A CC 3C | 	byte	$27, $db, $2e, $d0, $2e, $c0, $57, $97, $33, $d0, $1d, $f7, $cd, $3a, $cc, $3c
1ffd6     8F 6C 96 60 
1ffda     A3 63 A7 4A 
1ffde     DE 08 0F 03 
1ffe2     DD 25 EC 1B | 	byte	$8f, $6c, $96, $60, $a3, $63, $a7, $4a, $de, $08, $0f, $03, $dd, $25, $ec, $1b
1ffe6     A9 68 A6 3B 
1ffea     C4 5E 90 5E 
1ffee     B8 7F 87 67 
1fff2     D9 F6 38 A4 | 	byte	$a9, $68, $a6, $3b, $c4, $5e, $90, $5e, $b8, $7f, $87, $67, $d9, $f6, $38, $a4
1fff6     53 BE 64 9D 
1fffa     41 E9 07 E4 
1fffe     2D CC 59 AA 
20002     56 E0 F9 1C | 	byte	$53, $be, $64, $9d, $41, $e9, $07, $e4, $2d, $cc, $59, $aa, $56, $e0, $f9, $1c
20006     DB 31 C8 3C 
2000a     AB 5E 9C 4F 
2000e     D0 33 D4 4D 
20012     A0 61 BD 2D | 	byte	$db, $31, $c8, $3c, $ab, $5e, $9c, $4f, $d0, $33, $d4, $4d, $a0, $61, $bd, $2d
20016     DC 34 C0 1A 
2001a     E5 38 D5 FD 
2001e     0F D3 2A C3 
20022     37 CC 49 B0 | 	byte	$dc, $34, $c0, $1a, $e5, $38, $d5, $fd, $0f, $d3, $2a, $c3, $37, $cc, $49, $b0
20026     28 F2 E5 34 
2002a     C8 3E DB F3 
2002e     0D 30 B2 40 
20032     D9 15 0B FE | 	byte	$28, $f2, $e5, $34, $c8, $3e, $db, $f3, $0d, $30, $b2, $40, $d9, $15, $0b, $fe
20036     FE DF 1B AD 
2003a     3E C4 0B 0E 
2003e     FD 37 B3 5E 
20042     AD 4D CA 38 | 	byte	$fe, $df, $1b, $ad, $3e, $c4, $0b, $0e, $fd, $37, $b3, $5e, $ad, $4d, $ca, $38
20046     CB 3C DF 01 
2004a     20 F8 DD 42 
2004e     D5 2F CB 47 
20052     B2 5D 9C 48 | 	byte	$cb, $3c, $df, $01, $20, $f8, $dd, $42, $d5, $2f, $cb, $47, $b2, $5d, $9c, $48
20056     C9 0D FB E5 
2005a     29 D0 36 D3 
2005e     30 B0 49 C7 
20062     28 D0 23 D5 | 	byte	$c9, $0d, $fb, $e5, $29, $d0, $36, $d3, $30, $b0, $49, $c7, $28, $d0, $23, $d5
20066     22 F0 EB 29 
2006a     D8 1B 05 DD 
2006e     2C CC 39 D3 
20072     2B D9 41 A2 | 	byte	$22, $f0, $eb, $29, $d8, $1b, $05, $dd, $2c, $cc, $39, $d3, $2b, $d9, $41, $a2
20076     64 AB 2C FB 
2007a     D8 23 E0 11 
2007e     F5 17 09 E1 
20082     2C E1 0B FD | 	byte	$64, $ab, $2c, $fb, $d8, $23, $e0, $11, $f5, $17, $09, $e1, $2c, $e1, $0b, $fd
20086     EF 17 B6 44 
2008a     E3 F7 20 D8 
2008e     1B 0B EC 03 
20092     13 DF 25 CB | 	byte	$ef, $17, $b6, $44, $e3, $f7, $20, $d8, $1b, $0b, $ec, $03, $13, $df, $25, $cb
20096     38 BE 40 B5 
2009a     3D C5 52 C3 
2009e     29 D6 2F C2 
200a2     43 D2 1A F2 | 	byte	$38, $be, $40, $b5, $3d, $c5, $52, $c3, $29, $d6, $2f, $c2, $43, $d2, $1a, $f2
200a6     10 F0 08 0A 
200aa     09 F0 FF 23 
200ae     C8 45 BD 42 
200b2     D7 2A D1 41 | 	byte	$10, $f0, $08, $0a, $09, $f0, $ff, $23, $c8, $45, $bd, $42, $d7, $2a, $d1, $41
200b6     DE 06 0B F6 
200ba     13 F8 14 EB 
200be     25 DD 23 EF 
200c2     09 E1 22 DC | 	byte	$de, $06, $0b, $f6, $13, $f8, $14, $eb, $25, $dd, $23, $ef, $09, $e1, $22, $dc
200c6     30 CD 31 F7 
200ca     F5 07 1A DB 
200ce     12 07 F5 10 
200d2     F3 12 F1 1F | 	byte	$30, $cd, $31, $f7, $f5, $07, $1a, $db, $12, $07, $f5, $10, $f3, $12, $f1, $1f
200d6     FD EC 34 CF 
200da     2A E4 2F CF 
200de     2E F2 FF 06 
200e2     16 F8 0E FB | 	byte	$fd, $ec, $34, $cf, $2a, $e4, $2f, $cf, $2e, $f2, $ff, $06, $16, $f8, $0e, $fb
200e6     07 25 D8 25 
200ea     E8 12 FA 0B 
200ee     E6 25 D0 3C 
200f2     C4 2E E0 1B | 	byte	$07, $25, $d8, $25, $e8, $12, $fa, $0b, $e6, $25, $d0, $3c, $c4, $2e, $e0, $1b
200f6     EC 0B 05 F9 
200fa     1A D7 20 FD 
200fe     01 04 DC 35 
20102     DF 16 E5 2C | 	byte	$ec, $0b, $05, $f9, $1a, $d7, $20, $fd, $01, $04, $dc, $35, $df, $16, $e5, $2c
20106     BE 3C DF 1E 
2010a     EE 10 04 06 
2010e     FD 0F F1 0B 
20112     F2 17 D8 2C | 	byte	$be, $3c, $df, $1e, $ee, $10, $04, $06, $fd, $0f, $f1, $0b, $f2, $17, $d8, $2c
20116     F3 F5 1A DF 
2011a     28 E9 FD 16 
2011e     EA 02 08 00 
20122     FB 02 01 10 | 	byte	$f3, $f5, $1a, $df, $28, $e9, $fd, $16, $ea, $02, $08, $00, $fb, $02, $01, $10
20126     E2 20 D8 36 
2012a     DE 17 F1 0D 
2012e     FE 04 FC 18 
20132     E9 17 EE 09 | 	byte	$e2, $20, $d8, $36, $de, $17, $f1, $0d, $fe, $04, $fc, $18, $e9, $17, $ee, $09
20136     1B E8 21 E0 
2013a     29 F2 23 D9 
2013e     2C CC 46 C0 
20142     35 E8 0B 0B | 	byte	$1b, $e8, $21, $e0, $29, $f2, $23, $d9, $2c, $cc, $46, $c0, $35, $e8, $0b, $0b
20146     EB 2A E5 17 
2014a     F2 FD 22 E3 
2014e     14 09 E6 FF 
20152     04 FC 0B 0D | 	byte	$eb, $2a, $e5, $17, $f2, $fd, $22, $e3, $14, $09, $e6, $ff, $04, $fc, $0b, $0d
20156     D6 46 C8 1C 
2015a     08 0D E0 46 
2015e     C8 22 E2 F7 
20162     2A D8 2F DD | 	byte	$d6, $46, $c8, $1c, $08, $0d, $e0, $46, $c8, $22, $e2, $f7, $2a, $d8, $2f, $dd
20166     27 ED 24 C9 
2016a     3B DF F6 25 
2016e     E3 17 E8 1F 
20172     E9 07 F3 08 | 	byte	$27, $ed, $24, $c9, $3b, $df, $f6, $25, $e3, $17, $e8, $1f, $e9, $07, $f3, $08
20176     FD F0 1E D4 
2017a     28 E5 1F E5 
2017e     11 F8 F0 2D 
20182     C0 44 C4 35 | 	byte	$fd, $f0, $1e, $d4, $28, $e5, $1f, $e5, $11, $f8, $f0, $2d, $c0, $44, $c4, $35
20186     DC 2A D4 36 
2018a     D0 2B DE FD 
2018e     12 FB F3 02 
20192     F5 11 FB E9 | 	byte	$dc, $2a, $d4, $36, $d0, $2b, $de, $fd, $12, $fb, $f3, $02, $f5, $11, $fb, $e9
20196     20 D8 34 D3 
2019a     2A DC 29 E6 
2019e     10 FA F7 0B 
201a2     13 D3 36 D1 | 	byte	$20, $d8, $34, $d3, $2a, $dc, $29, $e6, $10, $fa, $f7, $0b, $13, $d3, $36, $d1
201a6     16 FD F1 16 
201aa     11 C4 4B C2 
201ae     43 AF 5A BD 
201b2     20 06 E3 23 | 	byte	$16, $fd, $f1, $16, $11, $c4, $4b, $c2, $43, $af, $5a, $bd, $20, $06, $e3, $23
201b6     E6 07 FA 02 
201ba     FC 10 F6 F8 
201be     1B D6 38 CF 
201c2     18 FD 02 18 | 	byte	$e6, $07, $fa, $02, $fc, $10, $f6, $f8, $1b, $d6, $38, $cf, $18, $fd, $02, $18
201c6     D0 40 CC 21 
201ca     F3 02 FF 1A 
201ce     F0 00 10 E8 
201d2     21 EB 20 E0 | 	byte	$d0, $40, $cc, $21, $f3, $02, $ff, $1a, $f0, $00, $10, $e8, $21, $eb, $20, $e0
201d6     29 D3 25 E5 
201da     0F FB 10 E9 
201de     27 D2 1F DD 
201e2     1F F5 01 FB | 	byte	$29, $d3, $25, $e5, $0f, $fb, $10, $e9, $27, $d2, $1f, $dd, $1f, $f5, $01, $fb
201e6     1B EC FA 1E 
201ea     E6 09 FD 0B 
201ee     F1 0E F7 0D 
201f2     EE 1C F1 0E | 	byte	$1b, $ec, $fa, $1e, $e6, $09, $fd, $0b, $f1, $0e, $f7, $0d, $ee, $1c, $f1, $0e
201f6     05 F5 20 E3 
201fa     21 E8 08 06 
201fe     01 EA 20 F0 
20202     04 0D F9 09 | 	byte	$05, $f5, $20, $e3, $21, $e8, $08, $06, $01, $ea, $20, $f0, $04, $0d, $f9, $09
20206     E6 2C D7 20 
2020a     EF 0D 05 F3 
2020e     07 FC 17 D4 
20212     3B C8 14 0A | 	byte	$e6, $2c, $d7, $20, $ef, $0d, $05, $f3, $07, $fc, $17, $d4, $3b, $c8, $14, $0a
20216     F0 0A 00 00 
2021a     01 06 F1 22 
2021e     DC 18 FE 04 
20222     F1 27 CA 3E | 	byte	$f0, $0a, $00, $00, $01, $06, $f1, $22, $dc, $18, $fe, $04, $f1, $27, $ca, $3e
20226     D0 25 E2 27 
2022a     DC 21 E9 1C 
2022e     DE 2B E3 09 
20232     07 F2 17 F0 | 	byte	$d0, $25, $e2, $27, $dc, $21, $e9, $1c, $de, $2b, $e3, $09, $07, $f2, $17, $f0
20236     1C D9 2D E3 
2023a     11 FD 09 F9 
2023e     16 DF 2C E0 
20242     1C FC 06 0A | 	byte	$1c, $d9, $2d, $e3, $11, $fd, $09, $f9, $16, $df, $2c, $e0, $1c, $fc, $06, $0a
20246     F1 05 04 06 
2024a     F5 18 F6 08 
2024e     FC 10 F1 21 
20252     E3 15 F9 00 | 	byte	$f1, $05, $04, $06, $f5, $18, $f6, $08, $fc, $10, $f1, $21, $e3, $15, $f9, $00
20256     09 FD FF 09 
2025a     ED 1A E8 1E 
2025e     E4 21 E1 0E 
20262     FE F1 14 07 | 	byte	$09, $fd, $ff, $09, $ed, $1a, $e8, $1e, $e4, $21, $e1, $0e, $fe, $f1, $14, $07
20266     E6 25 EA 06 
2026a     09 00 FC 05 
2026e     00 F2 1D EE 
20272     18 E8 27 DE | 	byte	$e6, $25, $ea, $06, $09, $00, $fc, $05, $00, $f2, $1d, $ee, $18, $e8, $27, $de
20276     1A EF 17 DC 
2027a     29 E0 10 FD 
2027e     FA 10 EF 17 
20282     EF 12 EF 1A | 	byte	$1a, $ef, $17, $dc, $29, $e0, $10, $fd, $fa, $10, $ef, $17, $ef, $12, $ef, $1a
20286     D9 30 DC 13 
2028a     EB 2B C7 43 
2028e     D2 1C EE 13 
20292     E5 17 E9 18 | 	byte	$d9, $30, $dc, $13, $eb, $2b, $c7, $43, $d2, $1c, $ee, $13, $e5, $17, $e9, $18
20296     F0 07 02 01 
2029a     F3 13 F8 04 
2029e     0D ED 14 ED 
202a2     0A E5 27 DF | 	byte	$f0, $07, $02, $01, $f3, $13, $f8, $04, $0d, $ed, $14, $ed, $0a, $e5, $27, $df
202a6     0F FB 08 F7 
202aa     1C E5 17 F1 
202ae     FA 11 EE 17 
202b2     FD F3 20 DF | 	byte	$0f, $fb, $08, $f7, $1c, $e5, $17, $f1, $fa, $11, $ee, $17, $fd, $f3, $20, $df
202b6     24 DF 20 ED 
202ba     FC 17 EE 16 
202be     E4 17 E4 21 
202c2     E9 07 06 FE | 	byte	$24, $df, $20, $ed, $fc, $17, $ee, $16, $e4, $17, $e4, $21, $e9, $07, $06, $fe
202c6     FA 11 E9 11 
202ca     01 F8 09 01 
202ce     FD 0D 07 ED 
202d2     15 ED 1B E1 | 	byte	$fa, $11, $e9, $11, $01, $f8, $09, $01, $fd, $0d, $07, $ed, $15, $ed, $1b, $e1
202d6     28 DD 25 D5 
202da     31 DC 1C EC 
202de     18 E9 18 EB 
202e2     12 FA 05 07 | 	byte	$28, $dd, $25, $d5, $31, $dc, $1c, $ec, $18, $e9, $18, $eb, $12, $fa, $05, $07
202e6     F5 10 E9 1B 
202ea     F0 FB 17 DD 
202ee     2B D3 28 E3 
202f2     16 F9 FC 08 | 	byte	$f5, $10, $e9, $1b, $f0, $fb, $17, $dd, $2b, $d3, $28, $e3, $16, $f9, $fc, $08
202f6     01 00 F9 13 
202fa     EF 0F F2 04 
202fe     FD 02 03 FC 
20302     0D EF 1C E4 | 	byte	$01, $00, $f9, $13, $ef, $0f, $f2, $04, $fd, $02, $03, $fc, $0d, $ef, $1c, $e4
20306     21 E5 15 F0 
2030a     17 E9 15 F5 
2030e     01 0B EF 13 
20312     F7 00 0A E5 | 	byte	$21, $e5, $15, $f0, $17, $e9, $15, $f5, $01, $0b, $ef, $13, $f7, $00, $0a, $e5
20316     24 D9 20 FD 
2031a     F6 08 FA 0E 
2031e     EE 16 EA 1C 
20322     E8 1E E4 22 | 	byte	$24, $d9, $20, $fd, $f6, $08, $fa, $0e, $ee, $16, $ea, $1c, $e8, $1e, $e4, $22
20326     DD 2B CF 37 
2032a     CB 2C E4 11 
2032e     FB F5 1F D1 
20332     30 DC 27 DD | 	byte	$dd, $2b, $cf, $37, $cb, $2c, $e4, $11, $fb, $f5, $1f, $d1, $30, $dc, $27, $dd
20336     22 E9 06 0F 
2033a     E6 1C E8 17 
2033e     F2 04 FE 04 
20342     FC 09 FF F7 | 	byte	$22, $e9, $06, $0f, $e6, $1c, $e8, $17, $f2, $04, $fe, $04, $fc, $09, $ff, $f7
20346     16 EA 17 F1 
2034a     0A 02 FD 01 
2034e     05 04 F1 22 
20352     D7 30 D7 22 | 	byte	$16, $ea, $17, $f1, $0a, $02, $fd, $01, $05, $04, $f1, $22, $d7, $30, $d7, $22
20356     F0 0F F6 12 
2035a     ED 14 F3 07 
2035e     04 00 F9 16 
20362     E1 27 DF 22 | 	byte	$f0, $0f, $f6, $12, $ed, $14, $f3, $07, $04, $00, $f9, $16, $e1, $27, $df, $22
20366     E3 0E FE F7 
2036a     14 EF 15 ED 
2036e     1A F1 FE 0D 
20372     F8 FE 08 F2 | 	byte	$e3, $0e, $fe, $f7, $14, $ef, $15, $ed, $1a, $f1, $fe, $0d, $f8, $fe, $08, $f2
20376     10 F8 02 0D 
2037a     EE 15 F0 0D 
2037e     F9 01 02 06 
20382     00 06 F9 10 | 	byte	$10, $f8, $02, $0d, $ee, $15, $f0, $0d, $f9, $01, $02, $06, $00, $06, $f9, $10
20386     F6 15 F3 0B 
2038a     FE FD 00 03 
2038e     03 EE 18 E9 
20392     18 EA 15 F1 | 	byte	$f6, $15, $f3, $0b, $fe, $fd, $00, $03, $03, $ee, $18, $e9, $18, $ea, $15, $f1
20396     09 F8 0E F2 
2039a     08 01 02 01 
2039e     03 FC 06 FC 
203a2     02 01 00 01 | 	byte	$09, $f8, $0e, $f2, $08, $01, $02, $01, $03, $fc, $06, $fc, $02, $01, $00, $01
203a6     FF 00 00 01 
203aa     00 FC 06 F6 
203ae     12 EB 11 F8 
203b2     05 F9 0A F6 | 	byte	$ff, $00, $00, $01, $00, $fc, $06, $f6, $12, $eb, $11, $f8, $05, $f9, $0a, $f6
203b6     07 FC 07 FA 
203ba     03 06 FD FE 
203be     07 FC FC 0D 
203c2     F1 0F F2 10 | 	byte	$07, $fc, $07, $fa, $03, $06, $fd, $fe, $07, $fc, $fc, $0d, $f1, $0f, $f2, $10
203c6     F1 10 F6 00 
203ca     06 F8 06 FD 
203ce     00 F8 09 FC 
203d2     05 F8 08 F8 | 	byte	$f1, $10, $f6, $00, $06, $f8, $06, $fd, $00, $f8, $09, $fc, $05, $f8, $08, $f8
203d6     05 00 FC 09 
203da     F1 12 EB 15 
203de     F3 04 04 F9 
203e2     13 E9 18 ED | 	byte	$05, $00, $fc, $09, $f1, $12, $eb, $15, $f3, $04, $04, $f9, $13, $e9, $18, $ed
203e6     0F F8 07 FC 
203ea     07 FF F8 0D 
203ee     F9 04 FF 04 
203f2     F7 0F F6 05 | 	byte	$0f, $f8, $07, $fc, $07, $ff, $f8, $0d, $f9, $04, $ff, $04, $f7, $0f, $f6, $05
203f6     FF 03 01 00 
203fa     FE 04 FE 01 
203fe     FD 05 FF 00 
20402     04 F9 10 F1 | 	byte	$ff, $03, $01, $00, $fe, $04, $fe, $01, $fd, $05, $ff, $00, $04, $f9, $10, $f1
20406     0E F2 15 EA 
2040a     13 ED 13 ED 
2040e     0B F6 0D EF 
20412     0E F3 0E EF | 	byte	$0e, $f2, $15, $ea, $13, $ed, $13, $ed, $0b, $f6, $0d, $ef, $0e, $f3, $0e, $ef
20416     03 03 FA 06 
2041a     FC 01 00 03 
2041e     F8 09 FB 04 
20422     F2 15 EF 0B | 	byte	$03, $03, $fa, $06, $fc, $01, $00, $03, $f8, $09, $fb, $04, $f2, $15, $ef, $0b
20426     F9 02 07 F3 
2042a     11 F2 0A FF 
2042e     F8 09 F9 FF 
20432     0A F5 09 F1 | 	byte	$f9, $02, $07, $f3, $11, $f2, $0a, $ff, $f8, $09, $f9, $ff, $0a, $f5, $09, $f1
20436     12 EC 0E FC 
2043a     05 F5 0D F8 
2043e     FF 02 01 FF 
20442     FD 0E EF 0F | 	byte	$12, $ec, $0e, $fc, $05, $f5, $0d, $f8, $ff, $02, $01, $ff, $fd, $0e, $ef, $0f
20446     F3 08 FC 02 
2044a     FF 00 01 03 
2044e     FA 03 01 07 
20452     F6 0D F9 04 | 	byte	$f3, $08, $fc, $02, $ff, $00, $01, $03, $fa, $03, $01, $07, $f6, $0d, $f9, $04
20456     FF 03 FB 06 
2045a     FA FC 03 FD 
2045e     09 FB 05 FB 
20462     07 FA 06 06 | 	byte	$ff, $03, $fb, $06, $fa, $fc, $03, $fd, $09, $fb, $05, $fb, $07, $fa, $06, $06
20466     F5 11 EF 11 
2046a     EF 14 EE 12 
2046e     F5 09 FD FC 
20472     00 0D F1 13 | 	byte	$f5, $11, $ef, $11, $ef, $14, $ee, $12, $f5, $09, $fd, $fc, $00, $0d, $f1, $13
20476     EE 11 F1 13 
2047a     F1 0B F5 0D 
2047e     EB 18 E0 16 
20482     F0 03 01 FA | 	byte	$ee, $11, $f1, $13, $f1, $0b, $f5, $0d, $eb, $18, $e0, $16, $f0, $03, $01, $fa
20486     0A F6 07 F7 
2048a     0A F8 06 02 
2048e     FD 05 FC 04 
20492     FC 05 FC 04 | 	byte	$0a, $f6, $07, $f7, $0a, $f8, $06, $02, $fd, $05, $fc, $04, $fc, $05, $fc, $04
20496     FE FF 03 FC 
2049a     07 F5 0E F3 
2049e     09 FB 02 01 
204a2     03 FC 08 F9 | 	byte	$fe, $ff, $03, $fc, $07, $f5, $0e, $f3, $09, $fb, $02, $01, $03, $fc, $08, $f9
204a6     08 FD FD 09 
204aa     FA 06 FC 00 
204ae     03 01 FE 07 
204b2     FD 01 0A F5 | 	byte	$08, $fd, $fd, $09, $fa, $06, $fc, $00, $03, $01, $fe, $07, $fd, $01, $0a, $f5
204b6     06 FF 04 FD 
204ba     03 FE 06 F8 
204be     0D FB 05 01 
204c2     00 FC 0F F2 | 	byte	$06, $ff, $04, $fd, $03, $fe, $06, $f8, $0d, $fb, $05, $01, $00, $fc, $0f, $f2
204c6     0D F8 11 EF 
204ca     14 EF 0E EE 
204ce     16 EF 02 06 
204d2     F8 0A F6 06 | 	byte	$0d, $f8, $11, $ef, $14, $ef, $0e, $ee, $16, $ef, $02, $06, $f8, $0a, $f6, $06
204d6     FA 0E F1 09 
204da     FE 01 04 F7 
204de     0A F9 03 FF 
204e2     FF 09 F3 0E | 	byte	$fa, $0e, $f1, $09, $fe, $01, $04, $f7, $0a, $f9, $03, $ff, $ff, $09, $f3, $0e
204e6     F5 0A F7 05 
204ea     FC 03 FA 0A 
204ee     F8 05 FD 0B 
204f2     F5 0B F7 08 | 	byte	$f5, $0a, $f7, $05, $fc, $03, $fa, $0a, $f8, $05, $fd, $0b, $f5, $0b, $f7, $08
204f6     F9 06 00 FC 
204fa     07 F8 08 F7 
204fe     10 EA 1A EC 
20502     14 F5 07 FD | 	byte	$f9, $06, $00, $fc, $07, $f8, $08, $f7, $10, $ea, $1a, $ec, $14, $f5, $07, $fd
20506     FD 03 FF 03 
2050a     FB 0B F6 08 
2050e     F8 09 FA 04 
20512     FD 08 F5 0D | 	byte	$fd, $03, $ff, $03, $fb, $0b, $f6, $08, $f8, $09, $fa, $04, $fd, $08, $f5, $0d
20516     F6 0B F8 07 
2051a     F7 0A FA 04 
2051e     FF 03 02 FB 
20522     07 F7 08 FB | 	byte	$f6, $0b, $f8, $07, $f7, $0a, $fa, $04, $ff, $03, $02, $fb, $07, $f7, $08, $fb
20526     04 FD 02 01 
2052a     FD 07 FB 05 
2052e     01 FF 03 F9 
20532     09 FB 01 04 | 	byte	$04, $fd, $02, $01, $fd, $07, $fb, $05, $01, $ff, $03, $f9, $09, $fb, $01, $04
20536     F9 08 F9 02 
2053a     02 FB 05 FA 
2053e     05 FF FF FF 
20542     08 F7 03 01 | 	byte	$f9, $08, $f9, $02, $02, $fb, $05, $fa, $05, $ff, $ff, $ff, $08, $f7, $03, $01
20546     00 05 F6 0E 
2054a     EF 11 F0 0B 
2054e     F9 01 02 FD 
20552     04 FE 02 FA | 	byte	$00, $05, $f6, $0e, $ef, $11, $f0, $0b, $f9, $01, $02, $fd, $04, $fe, $02, $fa
20556     0F F1 0B F9 
2055a     08 F9 04 FE 
2055e     FF 02 02 FC 
20562     06 FC 03 FE | 	byte	$0f, $f1, $0b, $f9, $08, $f9, $04, $fe, $ff, $02, $02, $fc, $06, $fc, $03, $fe
20566     02 FE 03 FB 
2056a     04 FD 00 05 
2056e     F7 08 F9 0A 
20572     F9 FF 04 FE | 	byte	$02, $fe, $03, $fb, $04, $fd, $00, $05, $f7, $08, $f9, $0a, $f9, $ff, $04, $fe
20576     01 03 FF 02 
2057a     FE 04 FF 04 
2057e     FF 07 01 01 
20582     00 07 FB 04 | 	byte	$01, $03, $ff, $02, $fe, $04, $ff, $04, $ff, $07, $01, $01, $00, $07, $fb, $04
20586     01 01 01 01 
2058a     04 FF 02 04 
2058e     FC 04 02 FB 
20592     08 FE 03 FD | 	byte	$01, $01, $01, $01, $04, $ff, $02, $04, $fc, $04, $02, $fb, $08, $fe, $03, $fd
20596     0A F9 07 FD 
2059a     04 FB 03 01 
2059e     02 02 01 00 
205a2     FF 08 F7 09 | 	byte	$0a, $f9, $07, $fd, $04, $fb, $03, $01, $02, $02, $01, $00, $ff, $08, $f7, $09
205a6     FA 09 F9 08 
205aa     F7 0E F5 09 
205ae     FC 03 FD 08 
205b2     FC 09 F8 0B | 	byte	$fa, $09, $f9, $08, $f7, $0e, $f5, $09, $fc, $03, $fd, $08, $fc, $09, $f8, $0b
205b6     FA 04 01 02 
205ba     03 FC 09 F9 
205be     09 FA 0D F8 
205c2     0D F6 0D F9 | 	byte	$fa, $04, $01, $02, $03, $fc, $09, $f9, $09, $fa, $0d, $f8, $0d, $f6, $0d, $f9
205c6     09 FA 07 FF 
205ca     02 00 03 01 
205ce     06 FC 0B F9 
205d2     0A F6 12 F6 | 	byte	$09, $fa, $07, $ff, $02, $00, $03, $01, $06, $fc, $0b, $f9, $0a, $f6, $12, $f6
205d6     09 FD 07 FF 
205da     FF 07 FD 05 
205de     FF 05 FF 01 
205e2     05 FA 07 FC | 	byte	$09, $fd, $07, $ff, $ff, $07, $fd, $05, $ff, $05, $ff, $01, $05, $fa, $07, $fc
205e6     01 02 FF 00 
205ea     FD 04 FC 01 
205ee     02 03 FC FD 
205f2     05 FF 02 FD | 	byte	$01, $02, $ff, $00, $fd, $04, $fc, $01, $02, $03, $fc, $fd, $05, $ff, $02, $fd
205f6     06 F8 09 F5 
205fa     08 FD 00 01 
205fe     01 00 02 FE 
20602     02 00 02 FA | 	byte	$06, $f8, $09, $f5, $08, $fd, $00, $01, $01, $00, $02, $fe, $02, $00, $02, $fa
20606     0A FC 00 FC 
2060a     03 FE 02 FF 
2060e     FE 08 F7 0D 
20612     F7 06 FA 09 | 	byte	$0a, $fc, $00, $fc, $03, $fe, $02, $ff, $fe, $08, $f7, $0d, $f7, $06, $fa, $09
20616     F9 04 FA 09 
2061a     F6 0A F9 05 
2061e     FD 04 FA 0A 
20622     FC 01 FF 08 | 	byte	$f9, $04, $fa, $09, $f6, $0a, $f9, $05, $fd, $04, $fa, $0a, $fc, $01, $ff, $08
20626     F9 06 FD 03 
2062a     FE 04 02 00 
2062e     00 02 01 00 
20632     03 FE 07 FF | 	byte	$f9, $06, $fd, $03, $fe, $04, $02, $00, $00, $02, $01, $00, $03, $fe, $07, $ff
20636     FC 08 F8 06 
2063a     FD 01 FD 03 
2063e     FF 05 F7 11 
20642     F2 0A F9 0A | 	byte	$fc, $08, $f8, $06, $fd, $01, $fd, $03, $ff, $05, $f7, $11, $f2, $0a, $f9, $0a
20646     F8 04 FC 03 
2064a     FE 03 FF FF 
2064e     01 00 00 FF 
20652     02 01 FD 04 | 	byte	$f8, $04, $fc, $03, $fe, $03, $ff, $ff, $01, $00, $00, $ff, $02, $01, $fd, $04
20656     00 FC 07 F8 
2065a     08 FC 06 F7 
2065e     09 F7 09 FB 
20662     01 FE 06 F8 | 	byte	$00, $fc, $07, $f8, $08, $fc, $06, $f7, $09, $f7, $09, $fb, $01, $fe, $06, $f8
20666     0B F8 04 02 
2066a     FF 01 03 FB 
2066e     07 F9 04 01 
20672     00 02 03 FA | 	byte	$0b, $f8, $04, $02, $ff, $01, $03, $fb, $07, $f9, $04, $01, $00, $02, $03, $fa
20676     07 FC 02 FD 
2067a     05 FD 01 01 
2067e     00 00 02 02 
20682     FD 04 FE 03 | 	byte	$07, $fc, $02, $fd, $05, $fd, $01, $01, $00, $00, $02, $02, $fd, $04, $fe, $03
20686     00 FF 02 00 
2068a     03 FC 0A FA 
2068e     0A F7 07 FD 
20692     01 FF 01 00 | 	byte	$00, $ff, $02, $00, $03, $fc, $0a, $fa, $0a, $f7, $07, $fd, $01, $ff, $01, $00
20696     FE 01 FD 03 
2069a     FF 01 FF FF 
2069e     03 F9 0A F7 
206a2     04 01 FE FF | 	byte	$fe, $01, $fd, $03, $ff, $01, $ff, $ff, $03, $f9, $0a, $f7, $04, $01, $fe, $ff
206a6     02 00 01 00 
206aa     00 01 00 FF 
206ae     02 FC 06 FB 
206b2     03 FC 08 F9 | 	byte	$02, $00, $01, $00, $00, $01, $00, $ff, $02, $fc, $06, $fb, $03, $fc, $08, $f9
206b6     05 FF FF 05 
206ba     FC 03 FE 06 
206be     FB 07 FD 04 
206c2     FF 02 FF 01 | 	byte	$05, $ff, $ff, $05, $fc, $03, $fe, $06, $fb, $07, $fd, $04, $ff, $02, $ff, $01
206c6     01 00 FD 02 
206ca     01 FD 03 FE 
206ce     04 FB 06 FB 
206d2     05 FD 03 01 | 	byte	$01, $00, $fd, $02, $01, $fd, $03, $fe, $04, $fb, $06, $fb, $05, $fd, $03, $01
206d6     FD 03 FB 06 
206da     FC 01 FD 07 
206de     F7 07 F7 0A 
206e2     F9 07 FD 03 | 	byte	$fd, $03, $fb, $06, $fc, $01, $fd, $07, $f7, $07, $f7, $0a, $f9, $07, $fd, $03
206e6     FF 03 FD 01 
206ea     01 00 00 03 
206ee     FD 01 01 00 
206f2     FE 04 FF 00 | 	byte	$ff, $03, $fd, $01, $01, $00, $00, $03, $fd, $01, $01, $00, $fe, $04, $ff, $00
206f6     01 FD 05 F9 
206fa     06 FC 04 FB 
206fe     01 02 01 02 
20702     FB 05 FC 04 | 	byte	$01, $fd, $05, $f9, $06, $fc, $04, $fb, $01, $02, $01, $02, $fb, $05, $fc, $04
20706     FE FF 00 02 
2070a     FD 04 FE 02 
2070e     00 00 00 00 
20712     C9 44 91 15 | 	byte	$fe, $ff, $00, $02, $fd, $04, $fe, $02, $00, $00, $00, $00, $c9, $44, $91, $15
20716     0E 63 81 4E 
2071a     CF 13 49 BD 
2071e     2E D5 02 38 
20722     A7 59 10 06 | 	byte	$0e, $63, $81, $4e, $cf, $13, $49, $bd, $2e, $d5, $02, $38, $a7, $59, $10, $06
20726     81 7F F9 A3 
2072a     4C 07 D3 3F 
2072e     DB 27 07 1D 
20732     02 CB 28 26 | 	byte	$81, $7f, $f9, $a3, $4c, $07, $d3, $3f, $db, $27, $07, $1d, $02, $cb, $28, $26
20736     DF 0F E7 42 
2073a     A9 51 AA 7F 
2073e     81 79 BD C9 
20742     32 07 DF 1F | 	byte	$df, $0f, $e7, $42, $a9, $51, $aa, $7f, $81, $79, $bd, $c9, $32, $07, $df, $1f
20746     D9 10 FA 16 
2074a     2E 82 53 EA 
2074e     47 D4 CF 38 
20752     E6 6B B0 1D | 	byte	$d9, $10, $fa, $16, $2e, $82, $53, $ea, $47, $d4, $cf, $38, $e6, $6b, $b0, $1d
20756     17 D1 3A 07 
2075a     EF E2 2F 1E 
2075e     05 0D 8D 7F 
20762     BB 13 F7 F1 | 	byte	$17, $d1, $3a, $07, $ef, $e2, $2f, $1e, $05, $0d, $8d, $7f, $bb, $13, $f7, $f1
20766     65 81 32 D8 
2076a     72 9E 56 81 
2076e     7F E5 EC F8 
20772     E1 41 9B 57 | 	byte	$65, $81, $32, $d8, $72, $9e, $56, $81, $7f, $e5, $ec, $f8, $e1, $41, $9b, $57
20776     DE 0D 4C DC 
2077a     B1 35 38 1A 
2077e     A9 15 73 81 
20782     45 F4 18 CF | 	byte	$de, $0d, $4c, $dc, $b1, $35, $38, $1a, $a9, $15, $73, $81, $45, $f4, $18, $cf
20786     18 33 EA F8 
2078a     EE 43 D7 FA 
2078e     0F F6 E7 36 
20792     D8 DD 7F 81 | 	byte	$18, $33, $ea, $f8, $ee, $43, $d7, $fa, $0f, $f6, $e7, $36, $d8, $dd, $7f, $81
20796     26 33 D2 2C 
2079a     E8 3A 92 3B 
2079e     EF 3D E1 02 
207a2     0B F3 EE 7F | 	byte	$26, $33, $d2, $2c, $e8, $3a, $92, $3b, $ef, $3d, $e1, $02, $0b, $f3, $ee, $7f
207a6     81 45 34 9C 
207aa     7F 8A 23 29 
207ae     C7 D7 74 A5 
207b2     0D 27 EB E1 | 	byte	$81, $45, $34, $9c, $7f, $8a, $23, $29, $c7, $d7, $74, $a5, $0d, $27, $eb, $e1
207b6     63 93 3B EA 
207ba     1C DB C6 66 
207be     FC FA E3 0C 
207c2     2F 17 B8 30 | 	byte	$63, $93, $3b, $ea, $1c, $db, $c6, $66, $fc, $fa, $e3, $0c, $2f, $17, $b8, $30
207c6     FC 30 8F 4E 
207ca     16 A1 73 CE 
207ce     0B A2 7F 0C 
207d2     B3 F0 6E 8A | 	byte	$fc, $30, $8f, $4e, $16, $a1, $73, $ce, $0b, $a2, $7f, $0c, $b3, $f0, $6e, $8a
207d6     6B F5 B9 75 
207da     92 40 E1 13 
207de     FC F1 1A EF 
207e2     1D FE D5 18 | 	byte	$6b, $f5, $b9, $75, $92, $40, $e1, $13, $fc, $f1, $1a, $ef, $1d, $fe, $d5, $18
207e6     04 0C BC 58 
207ea     EF BF 53 CB 
207ee     1D 3F A3 0B 
207f2     17 33 F3 B8 | 	byte	$04, $0c, $bc, $58, $ef, $bf, $53, $cb, $1d, $3f, $a3, $0b, $17, $33, $f3, $b8
207f6     64 B1 06 20 
207fa     F9 0E 0C D7 
207fe     0D FF 21 DE 
20802     23 23 CE FB | 	byte	$64, $b1, $06, $20, $f9, $0e, $0c, $d7, $0d, $ff, $21, $de, $23, $23, $ce, $fb
20806     FD 38 BB 35 
2080a     E4 40 9B 4C 
2080e     09 E7 F6 18 
20812     17 E2 03 EE | 	byte	$fd, $38, $bb, $35, $e4, $40, $9b, $4c, $09, $e7, $f6, $18, $17, $e2, $03, $ee
20816     18 0D DB 45 
2081a     B4 4D D2 18 
2081e     FC 17 BF 5A 
20822     B5 1B EC 4A | 	byte	$18, $0d, $db, $45, $b4, $4d, $d2, $18, $fc, $17, $bf, $5a, $b5, $1b, $ec, $4a
20826     AF 26 F4 F9 
2082a     28 BD 45 1D 
2082e     B3 D7 7F 8A 
20832     58 F0 D6 43 | 	byte	$af, $26, $f4, $f9, $28, $bd, $45, $1d, $b3, $d7, $7f, $8a, $58, $f0, $d6, $43
20836     EE F7 00 F0 
2083a     2E E0 17 F9 
2083e     24 B8 4B B9 
20842     61 A7 2E FC | 	byte	$ee, $f7, $00, $f0, $2e, $e0, $17, $f9, $24, $b8, $4b, $b9, $61, $a7, $2e, $fc
20846     13 CE 29 1A 
2084a     C9 51 90 4B 
2084e     EB EE F7 33 
20852     E3 ED F8 25 | 	byte	$13, $ce, $29, $1a, $c9, $51, $90, $4b, $eb, $ee, $f7, $33, $e3, $ed, $f8, $25
20856     FD 33 9D 47 
2085a     E3 35 95 5D 
2085e     F3 FF D5 60 
20862     DA FB F8 01 | 	byte	$fd, $33, $9d, $47, $e3, $35, $95, $5d, $f3, $ff, $d5, $60, $da, $fb, $f8, $01
20866     16 31 B6 20 
2086a     0F DD 11 F1 
2086e     1C 14 B7 40 
20872     B0 65 DE A7 | 	byte	$16, $31, $b6, $20, $0f, $dd, $11, $f1, $1c, $14, $b7, $40, $b0, $65, $de, $a7
20876     7F B8 F5 0C 
2087a     3B AD 1C 0C 
2087e     0F 00 DB 57 
20882     B3 3D D3 47 | 	byte	$7f, $b8, $f5, $0c, $3b, $ad, $1c, $0c, $0f, $00, $db, $57, $b3, $3d, $d3, $47
20886     C3 26 D8 05 
2088a     41 AE 1F F4 
2088e     36 C8 00 F8 
20892     19 FE 14 C8 | 	byte	$c3, $26, $d8, $05, $41, $ae, $1f, $f4, $36, $c8, $00, $f8, $19, $fe, $14, $c8
20896     4D E0 E0 48 
2089a     9E 5C C7 64 
2089e     95 25 0F 25 
208a2     DF FB 37 DE | 	byte	$4d, $e0, $e0, $48, $9e, $5c, $c7, $64, $95, $25, $0f, $25, $df, $fb, $37, $de
208a6     EB 33 D3 41 
208aa     BD 04 1E 21 
208ae     9F 5D EC D8 
208b2     13 22 F7 CB | 	byte	$eb, $33, $d3, $41, $bd, $04, $1e, $21, $9f, $5d, $ec, $d8, $13, $22, $f7, $cb
208b6     3E DF 12 FD 
208ba     ED 0C 1E F8 
208be     AD 7F C6 2C 
208c2     9E 58 DA 30 | 	byte	$3e, $df, $12, $fd, $ed, $0c, $1e, $f8, $ad, $7f, $c6, $2c, $9e, $58, $da, $30
208c6     0B C7 15 05 
208ca     F6 14 EE F3 
208ce     E7 6B A0 40 
208d2     C5 32 EF EE | 	byte	$0b, $c7, $15, $05, $f6, $14, $ee, $f3, $e7, $6b, $a0, $40, $c5, $32, $ef, $ee
208d6     42 CC F1 54 
208da     C2 CD 70 D6 
208de     0C F3 07 F8 
208e2     27 E7 EE 29 | 	byte	$42, $cc, $f1, $54, $c2, $cd, $70, $d6, $0c, $f3, $07, $f8, $27, $e7, $ee, $29
208e6     D7 12 22 CF 
208ea     1F 01 DB 1B 
208ee     01 00 1F 97 
208f2     7F 8A 28 FA | 	byte	$d7, $12, $22, $cf, $1f, $01, $db, $1b, $01, $00, $1f, $97, $7f, $8a, $28, $fa
208f6     0D F2 34 B9 
208fa     2E FD E2 2F 
208fe     D7 49 DD E9 
20902     14 13 DB 51 | 	byte	$0d, $f2, $34, $b9, $2e, $fd, $e2, $2f, $d7, $49, $dd, $e9, $14, $13, $db, $51
20906     8F 51 E4 1F 
2090a     BF 6E B4 DC 
2090e     3A 02 EE FC 
20912     0D 1E B6 52 | 	byte	$8f, $51, $e4, $1f, $bf, $6e, $b4, $dc, $3a, $02, $ee, $fc, $0d, $1e, $b6, $52
20916     CF 24 DB 27 
2091a     C6 50 BC 39 
2091e     DB 1F 15 EC 
20922     0B ED 42 C9 | 	byte	$cf, $24, $db, $27, $c6, $50, $bc, $39, $db, $1f, $15, $ec, $0b, $ed, $42, $c9
20926     F2 43 B2 2C 
2092a     2E A8 1E EE 
2092e     36 FE A7 6C 
20932     A9 69 BC 03 | 	byte	$f2, $43, $b2, $2c, $2e, $a8, $1e, $ee, $36, $fe, $a7, $6c, $a9, $69, $bc, $03
20936     40 9B 4A F1 
2093a     0E DD 2A CB 
2093e     58 C6 08 03 
20942     3D 95 67 C3 | 	byte	$40, $9b, $4a, $f1, $0e, $dd, $2a, $cb, $58, $c6, $08, $03, $3d, $95, $67, $c3
20946     57 AC 0B 0B 
2094a     DE 3E F5 EF 
2094e     E6 03 4D E4 
20952     CE 3F D3 32 | 	byte	$57, $ac, $0b, $0b, $de, $3e, $f5, $ef, $e6, $03, $4d, $e4, $ce, $3f, $d3, $32
20956     D1 2B E0 13 
2095a     E4 0B 01 1C 
2095e     07 C8 1C 03 
20962     2B D2 2E EF | 	byte	$d1, $2b, $e0, $13, $e4, $0b, $01, $1c, $07, $c8, $1c, $03, $2b, $d2, $2e, $ef
20966     AE 7F 8C 45 
2096a     DE F0 2F F3 
2096e     E5 59 A5 36 
20972     D6 19 FE 5C | 	byte	$ae, $7f, $8c, $45, $de, $f0, $2f, $f3, $e5, $59, $a5, $36, $d6, $19, $fe, $5c
20976     87 43 C1 57 
2097a     A6 79 81 67 
2097e     AD 5B CA 2F 
20982     C3 4B C0 23 | 	byte	$87, $43, $c1, $57, $a6, $79, $81, $67, $ad, $5b, $ca, $2f, $c3, $4b, $c0, $23
20986     43 81 71 B2 
2098a     48 E8 14 DD 
2098e     F3 55 B1 2E 
20992     E1 0B 13 FD | 	byte	$43, $81, $71, $b2, $48, $e8, $14, $dd, $f3, $55, $b1, $2e, $e1, $0b, $13, $fd
20996     FF 06 E1 23 
2099a     05 FC C4 51 
2099e     DC 11 1B D9 
209a2     1D D9 07 3E | 	byte	$ff, $06, $e1, $23, $05, $fc, $c4, $51, $dc, $11, $1b, $d9, $1d, $d9, $07, $3e
209a6     BC 11 2C CD 
209aa     2B D1 5C BA 
209ae     29 C6 23 13 
209b2     DA 4A EF D8 | 	byte	$bc, $11, $2c, $cd, $2b, $d1, $5c, $ba, $29, $c6, $23, $13, $da, $4a, $ef, $d8
209b6     14 36 A3 66 
209ba     99 4C D7 27 
209be     CB 31 0F FE 
209c2     F4 F4 E5 42 | 	byte	$14, $36, $a3, $66, $99, $4c, $d7, $27, $cb, $31, $0f, $fe, $f4, $f4, $e5, $42
209c6     BE 1E 3B AF 
209ca     1B 2C E8 28 
209ce     89 7C D4 FE 
209d2     01 0F 02 DA | 	byte	$be, $1e, $3b, $af, $1b, $2c, $e8, $28, $89, $7c, $d4, $fe, $01, $0f, $02, $da
209d6     49 B5 29 0E 
209da     C3 4F C7 21 
209de     FD 2C A2 55 
209e2     C1 55 BB 21 | 	byte	$49, $b5, $29, $0e, $c3, $4f, $c7, $21, $fd, $2c, $a2, $55, $c1, $55, $bb, $21
209e6     D1 30 DB 52 
209ea     F1 C0 1A 01 
209ee     2E E0 FD E0 
209f2     35 EF 08 F3 | 	byte	$d1, $30, $db, $52, $f1, $c0, $1a, $01, $2e, $e0, $fd, $e0, $35, $ef, $08, $f3
209f6     36 D4 E3 2A 
209fa     1D E5 FA 16 
209fe     FE ED FD 30 
20a02     CB 24 C3 4A | 	byte	$36, $d4, $e3, $2a, $1d, $e5, $fa, $16, $fe, $ed, $fd, $30, $cb, $24, $c3, $4a
20a06     C1 1B 07 EE 
20a0a     17 FF FC 25 
20a0e     00 C9 1F 02 
20a12     2E CF F1 47 | 	byte	$c1, $1b, $07, $ee, $17, $ff, $fc, $25, $00, $c9, $1f, $02, $2e, $cf, $f1, $47
20a16     E0 1F CE 1F 
20a1a     0B F8 0A DA 
20a1e     04 31 E4 F6 
20a22     F8 2D E7 F5 | 	byte	$e0, $1f, $ce, $1f, $0b, $f8, $0a, $da, $04, $31, $e4, $f6, $f8, $2d, $e7, $f5
20a26     DC 60 CD 13 
20a2a     D7 34 F5 0E 
20a2e     E0 33 BF 3C 
20a32     CF 30 E9 FC | 	byte	$dc, $60, $cd, $13, $d7, $34, $f5, $0e, $e0, $33, $bf, $3c, $cf, $30, $e9, $fc
20a36     23 ED 0F 01 
20a3a     1C C7 28 FF 
20a3e     FF EA 47 C7 
20a42     F3 31 E3 15 | 	byte	$23, $ed, $0f, $01, $1c, $c7, $28, $ff, $ff, $ea, $47, $c7, $f3, $31, $e3, $15
20a46     18 A7 47 DB 
20a4a     35 DD 0F FC 
20a4e     11 C9 0B 37 
20a52     E6 0E ED 1C | 	byte	$18, $a7, $47, $db, $35, $dd, $0f, $fc, $11, $c9, $0b, $37, $e6, $0e, $ed, $1c
20a56     E6 1C F9 41 
20a5a     AB 2F F1 E4 
20a5e     50 A7 47 EF 
20a62     D9 48 E4 F9 | 	byte	$e6, $1c, $f9, $41, $ab, $2f, $f1, $e4, $50, $a7, $47, $ef, $d9, $48, $e4, $f9
20a66     E9 25 FB F3 
20a6a     12 04 CE 50 
20a6e     F5 B3 3C 12 
20a72     E6 19 BE 6C | 	byte	$e9, $25, $fb, $f3, $12, $04, $ce, $50, $f5, $b3, $3c, $12, $e6, $19, $be, $6c
20a76     B8 5A A3 2F 
20a7a     EF FC 1A 19 
20a7e     A2 26 30 D5 
20a82     31 CF 21 D9 | 	byte	$b8, $5a, $a3, $2f, $ef, $fc, $1a, $19, $a2, $26, $30, $d5, $31, $cf, $21, $d9
20a86     28 E8 2C BA 
20a8a     51 B0 45 D6 
20a8e     F5 25 04 E9 
20a92     27 C0 58 C0 | 	byte	$28, $e8, $2c, $ba, $51, $b0, $45, $d6, $f5, $25, $04, $e9, $27, $c0, $58, $c0
20a96     37 D5 2A CA 
20a9a     1C 0F 1D B8 
20a9e     1E 13 13 FC 
20aa2     D1 36 FF B9 | 	byte	$37, $d5, $2a, $ca, $1c, $0f, $1d, $b8, $1e, $13, $13, $fc, $d1, $36, $ff, $b9
20aa6     4E DE 01 0B 
20aaa     13 CA 36 E3 
20aae     1C 11 C4 1A 
20ab2     1B 0F 15 9F | 	byte	$4e, $de, $01, $0b, $13, $ca, $36, $e3, $1c, $11, $c4, $1a, $1b, $0f, $15, $9f
20ab6     59 DF FC 2B 
20aba     D6 1C F2 FE 
20abe     FE 2F E7 0E 
20ac2     DF 14 02 FB | 	byte	$59, $df, $fc, $2b, $d6, $1c, $f2, $fe, $fe, $2f, $e7, $0e, $df, $14, $02, $fb
20ac6     12 FB EE 1C 
20aca     EE 07 19 C1 
20ace     53 C6 FC 1C 
20ad2     34 B4 4A A4 | 	byte	$12, $fb, $ee, $1c, $ee, $07, $19, $c1, $53, $c6, $fc, $1c, $34, $b4, $4a, $a4
20ad6     2F 30 E6 02 
20ada     DB 3E F1 05 
20ade     EF 12 19 D7 
20ae2     DD 50 D6 EF | 	byte	$2f, $30, $e6, $02, $db, $3e, $f1, $05, $ef, $12, $19, $d7, $dd, $50, $d6, $ef
20ae6     29 EC 12 E7 
20aea     18 F2 F9 FE 
20aee     23 E3 28 C3 
20af2     43 E7 0C BC | 	byte	$29, $ec, $12, $e7, $18, $f2, $f9, $fe, $23, $e3, $28, $c3, $43, $e7, $0c, $bc
20af6     7F 9E 37 EE 
20afa     FC 1B 00 07 
20afe     DD 3C E7 E9 
20b02     24 FA D4 2C | 	byte	$7f, $9e, $37, $ee, $fc, $1b, $00, $07, $dd, $3c, $e7, $e9, $24, $fa, $d4, $2c
20b06     12 CA 1E 0C 
20b0a     ED 28 BA 2A 
20b0e     11 D2 32 FA 
20b12     F7 EE 2C D8 | 	byte	$12, $ca, $1e, $0c, $ed, $28, $ba, $2a, $11, $d2, $32, $fa, $f7, $ee, $2c, $d8
20b16     1E EC 1E F8 
20b1a     F6 05 1F FC 
20b1e     F7 E8 33 E8 
20b22     12 F9 DF 4C | 	byte	$1e, $ec, $1e, $f8, $f6, $05, $1f, $fc, $f7, $e8, $33, $e8, $12, $f9, $df, $4c
20b26     C2 FA 1B 19 
20b2a     07 AC 27 32 
20b2e     CF 0B 27 DD 
20b32     05 00 1C DE | 	byte	$c2, $fa, $1b, $19, $07, $ac, $27, $32, $cf, $0b, $27, $dd, $05, $00, $1c, $de
20b36     10 11 D3 3E 
20b3a     FA DD 2C F6 
20b3e     E5 06 3F D1 
20b42     16 C2 55 C7 | 	byte	$10, $11, $d3, $3e, $fa, $dd, $2c, $f6, $e5, $06, $3f, $d1, $16, $c2, $55, $c7
20b46     08 1C FC 03 
20b4a     06 BC 57 F8 
20b4e     D4 2D E7 1B 
20b52     F7 08 17 BE | 	byte	$08, $1c, $fc, $03, $06, $bc, $57, $f8, $d4, $2d, $e7, $1b, $f7, $08, $17, $be
20b56     17 03 2D EC 
20b5a     E6 21 10 C2 
20b5e     3B 00 EE 01 
20b62     12 00 0C FE | 	byte	$17, $03, $2d, $ec, $e6, $21, $10, $c2, $3b, $00, $ee, $01, $12, $00, $0c, $fe
20b66     E2 33 C5 35 
20b6a     0F D6 14 EE 
20b6e     FD 1C F9 10 
20b72     C2 53 B5 1F | 	byte	$e2, $33, $c5, $35, $0f, $d6, $14, $ee, $fd, $1c, $f9, $10, $c2, $53, $b5, $1f
20b76     1F 06 B9 3E 
20b7a     E9 35 EE D7 
20b7e     1C 03 FE 1A 
20b82     F8 F5 F1 2F | 	byte	$1f, $06, $b9, $3e, $e9, $35, $ee, $d7, $1c, $03, $fe, $1a, $f8, $f5, $f1, $2f
20b86     E5 DF 4C E2 
20b8a     D6 1E 22 DF 
20b8e     11 FF E3 1F 
20b92     FE 16 F5 F6 | 	byte	$e5, $df, $4c, $e2, $d6, $1e, $22, $df, $11, $ff, $e3, $1f, $fe, $16, $f5, $f6
20b96     FF 05 24 DD 
20b9a     04 15 C9 49 
20b9e     D7 05 1E E4 
20ba2     F6 2F DC 0E | 	byte	$ff, $05, $24, $dd, $04, $15, $c9, $49, $d7, $05, $1e, $e4, $f6, $2f, $dc, $0e
20ba6     18 EF 0A E1 
20baa     46 C5 2F E0 
20bae     10 06 0A D2 
20bb2     18 1C D1 39 | 	byte	$18, $ef, $0a, $e1, $46, $c5, $2f, $e0, $10, $06, $0a, $d2, $18, $1c, $d1, $39
20bb6     E6 11 E6 1A 
20bba     D3 50 C6 22 
20bbe     F6 07 FC E2 
20bc2     55 BF 1D 03 | 	byte	$e6, $11, $e6, $1a, $d3, $50, $c6, $22, $f6, $07, $fc, $e2, $55, $bf, $1d, $03
20bc6     10 C0 40 F3 
20bca     08 EE C6 45 
20bce     25 CB 23 D3 
20bd2     37 CB 53 CC | 	byte	$10, $c0, $40, $f3, $08, $ee, $c6, $45, $25, $cb, $23, $d3, $37, $cb, $53, $cc
20bd6     00 0A 06 1F 
20bda     F6 E3 F0 4B 
20bde     D4 0B 11 F4 
20be2     F1 05 06 07 | 	byte	$00, $0a, $06, $1f, $f6, $e3, $f0, $4b, $d4, $0b, $11, $f4, $f1, $05, $06, $07
20be6     0E 0A BD 48 
20bea     DF 04 03 1C 
20bee     F1 D8 40 0A 
20bf2     D6 02 17 CF | 	byte	$0e, $0a, $bd, $48, $df, $04, $03, $1c, $f1, $d8, $40, $0a, $d6, $02, $17, $cf
20bf6     3B 09 D7 34 
20bfa     D8 FC 18 17 
20bfe     DC 28 C8 41 
20c02     DB 27 F9 D0 | 	byte	$3b, $09, $d7, $34, $d8, $fc, $18, $17, $dc, $28, $c8, $41, $db, $27, $f9, $d0
20c06     0B 34 C8 52 
20c0a     B0 0C 33 BA 
20c0e     2A 16 EC 06 
20c12     EB 26 F3 EA | 	byte	$0b, $34, $c8, $52, $b0, $0c, $33, $ba, $2a, $16, $ec, $06, $eb, $26, $f3, $ea
20c16     2B F7 E3 31 
20c1a     03 F8 F6 01 
20c1e     F0 2B EE 1D 
20c22     AE 5D C3 02 | 	byte	$2b, $f7, $e3, $31, $03, $f8, $f6, $01, $f0, $2b, $ee, $1d, $ae, $5d, $c3, $02
20c26     13 10 AD 42 
20c2a     2B B5 2E ED 
20c2e     0A ED 39 DB 
20c32     17 F0 0B 18 | 	byte	$13, $10, $ad, $42, $2b, $b5, $2e, $ed, $0a, $ed, $39, $db, $17, $f0, $0b, $18
20c36     0E C1 3C F5 
20c3a     09 EE 08 20 
20c3e     C0 3B E9 F7 
20c42     19 11 CD 2B | 	byte	$0e, $c1, $3c, $f5, $09, $ee, $08, $20, $c0, $3b, $e9, $f7, $19, $11, $cd, $2b
20c46     0C C2 1E 14 
20c4a     10 BA 49 E3 
20c4e     11 F4 F6 0A 
20c52     0F 04 FF F6 | 	byte	$0c, $c2, $1e, $14, $10, $ba, $49, $e3, $11, $f4, $f6, $0a, $0f, $04, $ff, $f6
20c56     FE 24 FE EC 
20c5a     0B 1B 01 E1 
20c5e     00 2A FE D8 
20c62     20 EA 0C 36 | 	byte	$fe, $24, $fe, $ec, $0b, $1b, $01, $e1, $00, $2a, $fe, $d8, $20, $ea, $0c, $36
20c66     B3 1C 08 E7 
20c6a     02 FE 23 F0 
20c6e     FA 0C E2 31 
20c72     FD EF 03 FB | 	byte	$b3, $1c, $08, $e7, $02, $fe, $23, $f0, $fa, $0c, $e2, $31, $fd, $ef, $03, $fb
20c76     27 00 FC EC 
20c7a     05 00 2A E4 
20c7e     FE 1B D6 05 
20c82     2C D9 13 0A | 	byte	$27, $00, $fc, $ec, $05, $00, $2a, $e4, $fe, $1b, $d6, $05, $2c, $d9, $13, $0a
20c86     FB D9 1B 16 
20c8a     FC F2 FC 0A 
20c8e     19 E9 33 C9 
20c92     15 06 E0 14 | 	byte	$fb, $d9, $1b, $16, $fc, $f2, $fc, $0a, $19, $e9, $33, $c9, $15, $06, $e0, $14
20c96     2C DA 05 FC 
20c9a     07 1B DC 0C 
20c9e     09 0C EF 14 
20ca2     E4 3D CB 20 | 	byte	$2c, $da, $05, $fc, $07, $1b, $dc, $0c, $09, $0c, $ef, $14, $e4, $3d, $cb, $20
20ca6     E0 29 DB 18 
20caa     FB D7 49 D8 
20cae     19 EF 09 FC 
20cb2     17 FF DC 30 | 	byte	$e0, $29, $db, $18, $fb, $d7, $49, $d8, $19, $ef, $09, $fc, $17, $ff, $dc, $30
20cb6     EF 01 19 E1 
20cba     06 2D D6 0F 
20cbe     F4 2C CC 30 
20cc2     D8 20 12 B8 | 	byte	$ef, $01, $19, $e1, $06, $2d, $d6, $0f, $f4, $2c, $cc, $30, $d8, $20, $12, $b8
20cc6     3C E0 26 E9 
20cca     FC 0F E6 20 
20cce     0A FA F8 E7 
20cd2     50 D5 20 BA | 	byte	$3c, $e0, $26, $e9, $fc, $0f, $e6, $20, $0a, $fa, $f8, $e7, $50, $d5, $20, $ba
20cd6     43 F3 EB 0E 
20cda     0D 19 D3 FF 
20cde     FD 21 02 D2 
20ce2     4F B6 FD 3F | 	byte	$43, $f3, $eb, $0e, $0d, $19, $d3, $ff, $fd, $21, $02, $d2, $4f, $b6, $fd, $3f
20ce6     DF 13 D6 2B 
20cea     FC F4 2E DE 
20cee     33 BB 23 FF 
20cf2     05 14 DF F1 | 	byte	$df, $13, $d6, $2b, $fc, $f4, $2e, $de, $33, $bb, $23, $ff, $05, $14, $df, $f1
20cf6     28 CF 44 E3 
20cfa     07 FC FE 18 
20cfe     EE 09 18 E2 
20d02     E7 1F 0D 18 | 	byte	$28, $cf, $44, $e3, $07, $fc, $fe, $18, $ee, $09, $18, $e2, $e7, $1f, $0d, $18
20d06     DC E6 01 4E 
20d0a     C7 1F E2 19 
20d0e     E2 2C FE F1 
20d12     FC F6 3C BF | 	byte	$dc, $e6, $01, $4e, $c7, $1f, $e2, $19, $e2, $2c, $fe, $f1, $fc, $f6, $3c, $bf
20d16     33 FB FF F5 
20d1a     F2 1C 27 EB 
20d1e     E1 F8 25 F3 
20d22     07 ED 0F 25 | 	byte	$33, $fb, $ff, $f5, $f2, $1c, $27, $eb, $e1, $f8, $25, $f3, $07, $ed, $0f, $25
20d26     AF 5C DB 0F 
20d2a     E5 0A 31 C6 
20d2e     3E CD F8 32 
20d32     D8 1A EB 0C | 	byte	$af, $5c, $db, $0f, $e5, $0a, $31, $c6, $3e, $cd, $f8, $32, $d8, $1a, $eb, $0c
20d36     07 FD 06 07 
20d3a     FD F9 28 C8 
20d3e     2E E4 2F CD 
20d42     22 EB 02 37 | 	byte	$07, $fd, $06, $07, $fd, $f9, $28, $c8, $2e, $e4, $2f, $cd, $22, $eb, $02, $37
20d46     CF FD 2E D7 
20d4a     1C FF D0 5F 
20d4e     A3 60 B1 17 
20d52     06 EF 18 F1 | 	byte	$cf, $fd, $2e, $d7, $1c, $ff, $d0, $5f, $a3, $60, $b1, $17, $06, $ef, $18, $f1
20d56     1C F2 11 FC 
20d5a     F4 16 06 E9 
20d5e     2D C1 30 00 
20d62     07 F3 E9 35 | 	byte	$1c, $f2, $11, $fc, $f4, $16, $06, $e9, $2d, $c1, $30, $00, $07, $f3, $e9, $35
20d66     E9 FC 12 E4 
20d6a     23 E5 02 29 
20d6e     D3 18 F6 07 
20d72     F2 30 E3 F3 | 	byte	$e9, $fc, $12, $e4, $23, $e5, $02, $29, $d3, $18, $f6, $07, $f2, $30, $e3, $f3
20d76     09 0C 19 CA 
20d7a     23 12 E0 E4 
20d7e     3A F0 21 F3 
20d82     BE 3B 0F F0 | 	byte	$09, $0c, $19, $ca, $23, $12, $e0, $e4, $3a, $f0, $21, $f3, $be, $3b, $0f, $f0
20d86     1C EF F6 F7 
20d8a     1E FF 17 C8 
20d8e     37 E8 FC 09 
20d92     0C FF E8 F5 | 	byte	$1c, $ef, $f6, $f7, $1e, $ff, $17, $c8, $37, $e8, $fc, $09, $0c, $ff, $e8, $f5
20d96     18 28 C3 39 
20d9a     CC 33 BC 46 
20d9e     0A D3 07 18 
20da2     F0 25 EF DC | 	byte	$18, $28, $c3, $39, $cc, $33, $bc, $46, $0a, $d3, $07, $18, $f0, $25, $ef, $dc
20da6     45 C4 2C 11 
20daa     C7 22 F5 0C 
20dae     16 CE 2F EC 
20db2     03 07 FC 26 | 	byte	$45, $c4, $2c, $11, $c7, $22, $f5, $0c, $16, $ce, $2f, $ec, $03, $07, $fc, $26
20db6     E3 F0 0E 20 
20dba     FB EC 13 15 
20dbe     C9 1A F0 3A 
20dc2     D3 05 FC 2C | 	byte	$e3, $f0, $0e, $20, $fb, $ec, $13, $15, $c9, $1a, $f0, $3a, $d3, $05, $fc, $2c
20dc6     DE EF 1C 14 
20dca     FF D7 26 04 
20dce     E4 2B E7 0C 
20dd2     F3 13 1F BB | 	byte	$de, $ef, $1c, $14, $ff, $d7, $26, $04, $e4, $2b, $e7, $0c, $f3, $13, $1f, $bb
20dd6     34 F0 18 FC 
20dda     F5 FF 0E F3 
20dde     09 FE F3 09 
20de2     09 F9 F6 2B | 	byte	$34, $f0, $18, $fc, $f5, $ff, $0e, $f3, $09, $fe, $f3, $09, $09, $f9, $f6, $2b
20de6     D2 26 F4 03 
20dea     ED 27 F6 0C 
20dee     DB 0F 27 E2 
20df2     28 C6 1D 23 | 	byte	$d2, $26, $f4, $03, $ed, $27, $f6, $0c, $db, $0f, $27, $e2, $28, $c6, $1d, $23
20df6     DD 2E C7 09 
20dfa     3C DB 0A E3 
20dfe     18 04 E1 29 
20e02     FB F2 FE 0C | 	byte	$dd, $2e, $c7, $09, $3c, $db, $0a, $e3, $18, $04, $e1, $29, $fb, $f2, $fe, $0c
20e06     16 F7 D4 2E 
20e0a     E3 1F E7 0B 
20e0e     01 09 F0 FC 
20e12     1C 12 EC F8 | 	byte	$16, $f7, $d4, $2e, $e3, $1f, $e7, $0b, $01, $09, $f0, $fc, $1c, $12, $ec, $f8
20e16     1D F1 1E E7 
20e1a     18 E0 0B 14 
20e1e     13 E8 CD 44 
20e22     FA DD 52 BB | 	byte	$1d, $f1, $1e, $e7, $18, $e0, $0b, $14, $13, $e8, $cd, $44, $fa, $dd, $52, $bb
20e26     0C FC 0F F8 
20e2a     F9 19 D5 34 
20e2e     C3 50 C4 27 
20e32     E7 07 18 0C | 	byte	$0c, $fc, $0f, $f8, $f9, $19, $d5, $34, $c3, $50, $c4, $27, $e7, $07, $18, $0c
20e36     E4 0C 1E E7 
20e3a     F0 31 F7 E6 
20e3e     07 0F 27 C9 
20e42     13 0A F3 07 | 	byte	$e4, $0c, $1e, $e7, $f0, $31, $f7, $e6, $07, $0f, $27, $c9, $13, $0a, $f3, $07
20e46     00 06 06 FA 
20e4a     E6 29 F5 FC 
20e4e     14 F4 FF 14 
20e52     CF 34 F3 08 | 	byte	$00, $06, $06, $fa, $e6, $29, $f5, $fc, $14, $f4, $ff, $14, $cf, $34, $f3, $08
20e56     FC 04 FB EE 
20e5a     34 D5 07 13 
20e5e     FC 03 09 07 
20e62     05 09 EB 0B | 	byte	$fc, $04, $fb, $ee, $34, $d5, $07, $13, $fc, $03, $09, $07, $05, $09, $eb, $0b
20e66     09 07 E4 1B 
20e6a     E7 1F EB 1C 
20e6e     DB 14 EB 25 
20e72     11 C2 25 02 | 	byte	$09, $07, $e4, $1b, $e7, $1f, $eb, $1c, $db, $14, $eb, $25, $11, $c2, $25, $02
20e76     0B E5 FF 42 
20e7a     BC 14 F3 34 
20e7e     C4 42 CA 4E 
20e82     BE 1F FC 01 | 	byte	$0b, $e5, $ff, $42, $bc, $14, $f3, $34, $c4, $42, $ca, $4e, $be, $1f, $fc, $01
20e86     FF ED 27 EB 
20e8a     00 0F EF 10 
20e8e     02 FF F7 FF 
20e92     1E EF 00 16 | 	byte	$ff, $ed, $27, $eb, $00, $0f, $ef, $10, $02, $ff, $f7, $ff, $1e, $ef, $00, $16
20e96     DB 39 CA 0E 
20e9a     06 04 0D DC 
20e9e     0D 2E D1 0A 
20ea2     05 28 D4 1F | 	byte	$db, $39, $ca, $0e, $06, $04, $0d, $dc, $0d, $2e, $d1, $0a, $05, $28, $d4, $1f
20ea6     C8 4C D4 12 
20eaa     F9 1F EC 03 
20eae     FA 01 18 EE 
20eb2     09 07 DC 29 | 	byte	$c8, $4c, $d4, $12, $f9, $1f, $ec, $03, $fa, $01, $18, $ee, $09, $07, $dc, $29
20eb6     08 FA D3 1C 
20eba     F9 2E E0 F5 
20ebe     26 E9 0A 0C 
20ec2     F6 1F DA 23 | 	byte	$08, $fa, $d3, $1c, $f9, $2e, $e0, $f5, $26, $e9, $0a, $0c, $f6, $1f, $da, $23
20ec6     DF 16 FB 18 
20eca     DC 35 BA 48 
20ece     DD 17 DD 03 
20ed2     2D E3 10 F6 | 	byte	$df, $16, $fb, $18, $dc, $35, $ba, $48, $dd, $17, $dd, $03, $2d, $e3, $10, $f6
20ed6     08 E6 11 08 
20eda     17 C9 2E 15 
20ede     DB 15 EA 39 
20ee2     CC F9 3A D5 | 	byte	$08, $e6, $11, $08, $17, $c9, $2e, $15, $db, $15, $ea, $39, $cc, $f9, $3a, $d5
20ee6     07 16 DA 33 
20eea     E0 11 FC 1E 
20eee     F6 EB 01 24 
20ef2     E9 19 E0 1C | 	byte	$07, $16, $da, $33, $e0, $11, $fc, $1e, $f6, $eb, $01, $24, $e9, $19, $e0, $1c
20ef6     DF 2E E9 E3 
20efa     2F D7 3C DE 
20efe     E8 2E F6 06 
20f02     DB 2F ED 18 | 	byte	$df, $2e, $e9, $e3, $2f, $d7, $3c, $de, $e8, $2e, $f6, $06, $db, $2f, $ed, $18
20f06     E0 1F 03 05 
20f0a     DB 27 0F FF 
20f0e     EB FC 1B F3 
20f12     F4 0C 07 EE | 	byte	$e0, $1f, $03, $05, $db, $27, $0f, $ff, $eb, $fc, $1b, $f3, $f4, $0c, $07, $ee
20f16     12 F1 04 07 
20f1a     1E D3 1B FB 
20f1e     1C F0 0C DB 
20f22     2F E3 23 E3 | 	byte	$12, $f1, $04, $07, $1e, $d3, $1b, $fb, $1c, $f0, $0c, $db, $2f, $e3, $23, $e3
20f26     27 DC 05 23 
20f2a     D8 30 D6 11 
20f2e     16 DB 13 1F 
20f32     E0 07 F0 17 | 	byte	$27, $dc, $05, $23, $d8, $30, $d6, $11, $16, $db, $13, $1f, $e0, $07, $f0, $17
20f36     0F D4 31 FF 
20f3a     E6 10 FA FE 
20f3e     0F F0 0E F0 
20f42     1C E2 24 F8 | 	byte	$0f, $d4, $31, $ff, $e6, $10, $fa, $fe, $0f, $f0, $0e, $f0, $1c, $e2, $24, $f8
20f46     FF FC 1E F9 
20f4a     F8 06 06 03 
20f4e     09 FC F1 14 
20f52     F7 18 DE 10 | 	byte	$ff, $fc, $1e, $f9, $f8, $06, $06, $03, $09, $fc, $f1, $14, $f7, $18, $de, $10
20f56     03 03 EF 02 
20f5a     07 F8 1B DC 
20f5e     0B FF 0F F5 
20f62     05 16 07 EE | 	byte	$03, $03, $ef, $02, $07, $f8, $1b, $dc, $0b, $ff, $0f, $f5, $05, $16, $07, $ee
20f66     DD 5B DE E7 
20f6a     27 FE F3 09 
20f6e     EA 2C E7 0A 
20f72     09 E7 03 28 | 	byte	$dd, $5b, $de, $e7, $27, $fe, $f3, $09, $ea, $2c, $e7, $0a, $09, $e7, $03, $28
20f76     D0 2C E9 EF 
20f7a     2E D7 12 1B 
20f7e     D4 16 11 E2 
20f82     24 E6 13 F3 | 	byte	$d0, $2c, $e9, $ef, $2e, $d7, $12, $1b, $d4, $16, $11, $e2, $24, $e6, $13, $f3
20f86     20 E0 07 1D 
20f8a     FF E5 18 0E 
20f8e     EF 15 F2 03 
20f92     F3 26 F8 E6 | 	byte	$20, $e0, $07, $1d, $ff, $e5, $18, $0e, $ef, $15, $f2, $03, $f3, $26, $f8, $e6
20f96     24 D9 17 FC 
20f9a     05 03 F1 FF 
20f9e     13 F0 01 1B 
20fa2     E1 FE 24 E4 | 	byte	$24, $d9, $17, $fc, $05, $03, $f1, $ff, $13, $f0, $01, $1b, $e1, $fe, $24, $e4
20fa6     0D 0F F5 13 
20faa     FA F1 39 D7 
20fae     0C 07 EF 12 
20fb2     FF 05 F2 04 | 	byte	$0d, $0f, $f5, $13, $fa, $f1, $39, $d7, $0c, $07, $ef, $12, $ff, $05, $f2, $04
20fb6     0F F3 F6 07 
20fba     15 DD 0F 16 
20fbe     D7 31 ED F1 
20fc2     0E 0F F9 E3 | 	byte	$0f, $f3, $f6, $07, $15, $dd, $0f, $16, $d7, $31, $ed, $f1, $0e, $0f, $f9, $e3
20fc6     39 E7 0D FC 
20fca     24 C5 40 EF 
20fce     FE DB 47 EC 
20fd2     E3 27 ED F9 | 	byte	$39, $e7, $0d, $fc, $24, $c5, $40, $ef, $fe, $db, $47, $ec, $e3, $27, $ed, $f9
20fd6     14 EF 0A 0C 
20fda     EF 2C AB 59 
20fde     E2 EC 27 CB 
20fe2     36 EB FC 14 | 	byte	$14, $ef, $0a, $0c, $ef, $2c, $ab, $59, $e2, $ec, $27, $cb, $36, $eb, $fc, $14
20fe6     05 E2 2B 0C 
20fea     DB 1F DC 2A 
20fee     F5 03 0C F2 
20ff2     17 FF E3 36 | 	byte	$05, $e2, $2b, $0c, $db, $1f, $dc, $2a, $f5, $03, $0c, $f2, $17, $ff, $e3, $36
20ff6     E2 F8 0E F6 
20ffa     0F F8 FE FC 
20ffe     08 EA 1E F8 
21002     F7 13 EC 23 | 	byte	$e2, $f8, $0e, $f6, $0f, $f8, $fe, $fc, $08, $ea, $1e, $f8, $f7, $13, $ec, $23
21006     E7 12 F2 14 
2100a     FB 05 08 E7 
2100e     1C E8 13 28 
21012     BC 36 07 D8 | 	byte	$e7, $12, $f2, $14, $fb, $05, $08, $e7, $1c, $e8, $13, $28, $bc, $36, $07, $d8
21016     26 F3 09 F0 
2101a     0C F0 2B D3 
2101e     24 F3 EF 00 
21022     1E F9 EB 1A | 	byte	$26, $f3, $09, $f0, $0c, $f0, $2b, $d3, $24, $f3, $ef, $00, $1e, $f9, $eb, $1a
21026     D8 51 C7 17 
2102a     FF FF 18 D5 
2102e     2E FA FA F9 
21032     2E D9 18 F8 | 	byte	$d8, $51, $c7, $17, $ff, $ff, $18, $d5, $2e, $fa, $fa, $f9, $2e, $d9, $18, $f8
21036     00 04 F2 09 
2103a     0D 02 E0 1F 
2103e     FA 00 04 EF 
21042     FF 0C 01 03 | 	byte	$00, $04, $f2, $09, $0d, $02, $e0, $1f, $fa, $00, $04, $ef, $ff, $0c, $01, $03
21046     F6 1D FC D3 
2104a     3F F9 E5 18 
2104e     02 03 03 22 
21052     BF 2E FB 03 | 	byte	$f6, $1d, $fc, $d3, $3f, $f9, $e5, $18, $02, $03, $03, $22, $bf, $2e, $fb, $03
21056     FE F0 1D EB 
2105a     1A FB E4 25 
2105e     E8 04 11 EB 
21062     11 F2 03 0E | 	byte	$fe, $f0, $1d, $eb, $1a, $fb, $e4, $25, $e8, $04, $11, $eb, $11, $f2, $03, $0e
21066     06 E9 05 28 
2106a     C9 25 03 0B 
2106e     D9 29 03 04 
21072     E8 1A F6 F4 | 	byte	$06, $e9, $05, $28, $c9, $25, $03, $0b, $d9, $29, $03, $04, $e8, $1a, $f6, $f4
21076     2D E7 F5 24 
2107a     E8 FC 19 DB 
2107e     2F D7 1C F1 
21082     02 1E CF 09 | 	byte	$2d, $e7, $f5, $24, $e8, $fc, $19, $db, $2f, $d7, $1c, $f1, $02, $1e, $cf, $09
21086     19 19 CF 22 
2108a     EA 30 E7 05 
2108e     FC 0C F5 03 
21092     FE 16 F7 F9 | 	byte	$19, $19, $cf, $22, $ea, $30, $e7, $05, $fc, $0c, $f5, $03, $fe, $16, $f7, $f9
21096     1B D9 2E E1 
2109a     06 01 FF 07 
2109e     EF 1B F8 EA 
210a2     40 D4 05 0C | 	byte	$1b, $d9, $2e, $e1, $06, $01, $ff, $07, $ef, $1b, $f8, $ea, $40, $d4, $05, $0c
210a6     EF FF 29 ED 
210aa     0F F7 F4 13 
210ae     F5 0C F3 F9 
210b2     25 E3 19 FB | 	byte	$ef, $ff, $29, $ed, $0f, $f7, $f4, $13, $f5, $0c, $f3, $f9, $25, $e3, $19, $fb
210b6     0B EF 16 F1 
210ba     F4 17 F7 0C 
210be     F2 06 1A ED 
210c2     FF 11 02 E0 | 	byte	$0b, $ef, $16, $f1, $f4, $17, $f7, $0c, $f2, $06, $1a, $ed, $ff, $11, $02, $e0
210c6     1C F2 39 C7 
210ca     10 17 F6 F5 
210ce     0D FD F3 2A 
210d2     DD 14 F7 25 | 	byte	$1c, $f2, $39, $c7, $10, $17, $f6, $f5, $0d, $fd, $f3, $2a, $dd, $14, $f7, $25
210d6     F0 F9 F4 03 
210da     14 F9 0D D4 
210de     24 16 E1 14 
210e2     05 F0 1A E0 | 	byte	$f0, $f9, $f4, $03, $14, $f9, $0d, $d4, $24, $16, $e1, $14, $05, $f0, $1a, $e0
210e6     0E 1B F0 03 
210ea     06 04 03 F9 
210ee     04 15 E4 1C 
210f2     08 D3 3E DF | 	byte	$0e, $1b, $f0, $03, $06, $04, $03, $f9, $04, $15, $e4, $1c, $08, $d3, $3e, $df
210f6     1E D8 1E EE 
210fa     01 17 E5 0E 
210fe     0C F1 F9 11 
21102     08 EF 07 00 | 	byte	$1e, $d8, $1e, $ee, $01, $17, $e5, $0e, $0c, $f1, $f9, $11, $08, $ef, $07, $00
21106     E4 3B F7 F5 
2110a     F8 10 F9 23 
2110e     F7 E9 F3 38 
21112     00 E5 0D 0A | 	byte	$e4, $3b, $f7, $f5, $f8, $10, $f9, $23, $f7, $e9, $f3, $38, $00, $e5, $0d, $0a
21116     FA F9 10 ED 
2111a     26 CE 16 13 
2111e     E9 03 19 F3 
21122     E0 33 CD 33 | 	byte	$fa, $f9, $10, $ed, $26, $ce, $16, $13, $e9, $03, $19, $f3, $e0, $33, $cd, $33
21126     DA F8 2C F9 
2112a     09 E9 08 07 
2112e     13 DB 2B F0 
21132     FF 19 EA 02 | 	byte	$da, $f8, $2c, $f9, $09, $e9, $08, $07, $13, $db, $2b, $f0, $ff, $19, $ea, $02
21136     1D 01 E4 18 
2113a     E9 20 ED F2 
2113e     10 13 02 CD 
21142     0F 27 04 DC | 	byte	$1d, $01, $e4, $18, $e9, $20, $ed, $f2, $10, $13, $02, $cd, $0f, $27, $04, $dc
21146     FB 06 17 F6 
2114a     0E FD EF 15 
2114e     04 0E ED FD 
21152     31 C0 32 06 | 	byte	$fb, $06, $17, $f6, $0e, $fd, $ef, $15, $04, $0e, $ed, $fd, $31, $c0, $32, $06
21156     EB 1C D8 22 
2115a     EC 0A 16 D9 
2115e     01 21 ED 10 
21162     FF F6 07 0A | 	byte	$eb, $1c, $d8, $22, $ec, $0a, $16, $d9, $01, $21, $ed, $10, $ff, $f6, $07, $0a
21166     D8 34 F3 F8 
2116a     0F E0 30 F1 
2116e     09 D7 47 D3 
21172     13 FE EF 3E | 	byte	$d8, $34, $f3, $f8, $0f, $e0, $30, $f1, $09, $d7, $47, $d3, $13, $fe, $ef, $3e
21176     D9 F4 43 B9 
2117a     21 F3 14 DF 
2117e     1F 00 DE 36 
21182     DE 11 FA 0F | 	byte	$d9, $f4, $43, $b9, $21, $f3, $14, $df, $1f, $00, $de, $36, $de, $11, $fa, $0f
21186     DE 0C 18 EA 
2118a     03 17 EB 01 
2118e     36 D1 06 0E 
21192     06 F9 07 14 | 	byte	$de, $0c, $18, $ea, $03, $17, $eb, $01, $36, $d1, $06, $0e, $06, $f9, $07, $14
21196     F5 F1 02 11 
2119a     F9 0C E5 1C 
2119e     F1 0E F3 1E 
211a2     D8 2C E0 14 | 	byte	$f5, $f1, $02, $11, $f9, $0c, $e5, $1c, $f1, $0e, $f3, $1e, $d8, $2c, $e0, $14
211a6     EA 17 EF 1F 
211aa     EE F3 24 E0 
211ae     3E BD 30 F3 
211b2     03 F1 25 D2 | 	byte	$ea, $17, $ef, $1f, $ee, $f3, $24, $e0, $3e, $bd, $30, $f3, $03, $f1, $25, $d2
211b6     33 DD 06 09 
211ba     0A FE E9 0D 
211be     18 0C E3 18 
211c2     EA 09 00 0C | 	byte	$33, $dd, $06, $09, $0a, $fe, $e9, $0d, $18, $0c, $e3, $18, $ea, $09, $00, $0c
211c6     DC 38 D6 0B 
211ca     0B 16 D0 3C 
211ce     D6 31 C2 2E 
211d2     FB ED 18 F8 | 	byte	$dc, $38, $d6, $0b, $0b, $16, $d0, $3c, $d6, $31, $c2, $2e, $fb, $ed, $18, $f8
211d6     05 0B 07 E0 
211da     38 D2 11 21 
211de     CF 13 20 E8 
211e2     F7 0E EC 1E | 	byte	$05, $0b, $07, $e0, $38, $d2, $11, $21, $cf, $13, $20, $e8, $f7, $0e, $ec, $1e
211e6     E5 28 E5 05 
211ea     0D 13 DB 37 
211ee     D8 D7 67 BE 
211f2     1E EC 04 12 | 	byte	$e5, $28, $e5, $05, $0d, $13, $db, $37, $d8, $d7, $67, $be, $1e, $ec, $04, $12
211f6     F1 1E DC 27 
211fa     EE 0E DF 20 
211fe     FE FE 10 D0 
21202     27 FA 18 D8 | 	byte	$f1, $1e, $dc, $27, $ee, $0e, $df, $20, $fe, $fe, $10, $d0, $27, $fa, $18, $d8
21206     1C FD F1 37 
2120a     E8 0F E7 08 
2120e     0E 08 D9 22 
21212     E9 1F F2 F5 | 	byte	$1c, $fd, $f1, $37, $e8, $0f, $e7, $08, $0e, $08, $d9, $22, $e9, $1f, $f2, $f5
21216     1F 01 C9 44 
2121a     DA 22 EF 10 
2121e     E7 22 DC 1E 
21222     FE 0D 05 DD | 	byte	$1f, $01, $c9, $44, $da, $22, $ef, $10, $e7, $22, $dc, $1e, $fe, $0d, $05, $dd
21226     1C F8 25 D7 
2122a     0E EB 21 E8 
2122e     20 E2 FA 1A 
21232     F7 24 D7 0F | 	byte	$1c, $f8, $25, $d7, $0e, $eb, $21, $e8, $20, $e2, $fa, $1a, $f7, $24, $d7, $0f
21236     10 F7 F4 14 
2123a     F2 2C DB 05 
2123e     FD 0E 0F F4 
21242     FB 01 F3 34 | 	byte	$10, $f7, $f4, $14, $f2, $2c, $db, $05, $fd, $0e, $0f, $f4, $fb, $01, $f3, $34
21246     DE 07 01 F6 
2124a     19 F4 10 E5 
2124e     10 10 E3 26 
21252     E6 14 F4 18 | 	byte	$de, $07, $01, $f6, $19, $f4, $10, $e5, $10, $10, $e3, $26, $e6, $14, $f4, $18
21256     D7 3C E3 F8 
2125a     FC 1A E6 27 
2125e     D5 1E 0A E9 
21262     F4 21 04 0C | 	byte	$d7, $3c, $e3, $f8, $fc, $1a, $e6, $27, $d5, $1e, $0a, $e9, $f4, $21, $04, $0c
21266     DC 0E 1D DF 
2126a     1F F5 EC 21 
2126e     F5 0B 01 E9 
21272     07 0B 11 EF | 	byte	$dc, $0e, $1d, $df, $1f, $f5, $ec, $21, $f5, $0b, $01, $e9, $07, $0b, $11, $ef
21276     F5 27 F6 E3 
2127a     1E F5 11 0E 
2127e     E1 1B DC 2D 
21282     EF 04 F6 EE | 	byte	$f5, $27, $f6, $e3, $1e, $f5, $11, $0e, $e1, $1b, $dc, $2d, $ef, $04, $f6, $ee
21286     2A 0C CC 24 
2128a     13 E8 08 16 
2128e     E4 28 DE 17 
21292     E6 33 EF E5 | 	byte	$2a, $0c, $cc, $24, $13, $e8, $08, $16, $e4, $28, $de, $17, $e6, $33, $ef, $e5
21296     10 16 ED 0F 
2129a     EC 08 06 0E 
2129e     E0 0C 0C FE 
212a2     FB FF 0A 00 | 	byte	$10, $16, $ed, $0f, $ec, $08, $06, $0e, $e0, $0c, $0c, $fe, $fb, $ff, $0a, $00
212a6     F7 0C 07 0C 
212aa     F9 08 F5 03 
212ae     15 F3 07 05 
212b2     DC 21 05 03 | 	byte	$f7, $0c, $07, $0c, $f9, $08, $f5, $03, $15, $f3, $07, $05, $dc, $21, $05, $03
212b6     00 02 EE 28 
212ba     EC FA 00 14 
212be     F2 EF 29 EB 
212c2     FA 06 FC 20 | 	byte	$00, $02, $ee, $28, $ec, $fa, $00, $14, $f2, $ef, $29, $eb, $fa, $06, $fc, $20
212c6     ED 0E E4 20 
212ca     F6 F6 17 EF 
212ce     0B F6 07 0A 
212d2     EF 28 E9 00 | 	byte	$ed, $0e, $e4, $20, $f6, $f6, $17, $ef, $0b, $f6, $07, $0a, $ef, $28, $e9, $00
212d6     1D E6 0C 0A 
212da     F7 FF 0A 00 
212de     FB 04 FD 0D 
212e2     EC 2C D4 12 | 	byte	$1d, $e6, $0c, $0a, $f7, $ff, $0a, $00, $fb, $04, $fd, $0d, $ec, $2c, $d4, $12
212e6     17 E0 30 C8 
212ea     34 DE 1D F0 
212ee     13 F0 0E F7 
212f2     0C FF 0C F7 | 	byte	$17, $e0, $30, $c8, $34, $de, $1d, $f0, $13, $f0, $0e, $f7, $0c, $ff, $0c, $f7
212f6     F8 1B F2 FC 
212fa     F9 F8 2E CF 
212fe     11 1E E4 1C 
21302     EB FD 2A EA | 	byte	$f8, $1b, $f2, $fc, $f9, $f8, $2e, $cf, $11, $1e, $e4, $1c, $eb, $fd, $2a, $ea
21306     0D FF F8 01 
2130a     08 FB 0B FB 
2130e     F9 13 01 03 
21312     FF F5 1E 0E | 	byte	$0d, $ff, $f8, $01, $08, $fb, $0b, $fb, $f9, $13, $01, $03, $ff, $f5, $1e, $0e
21316     BC 44 D9 06 
2131a     0D EA 07 14 
2131e     EB 1C FF EC 
21322     19 E7 2F F0 | 	byte	$bc, $44, $d9, $06, $0d, $ea, $07, $14, $eb, $1c, $ff, $ec, $19, $e7, $2f, $f0
21326     EC 07 11 E7 
2132a     2F DB FD 24 
2132e     EE FA 05 32 
21332     CB 13 07 F5 | 	byte	$ec, $07, $11, $e7, $2f, $db, $fd, $24, $ee, $fa, $05, $32, $cb, $13, $07, $f5
21336     05 02 0F E6 
2133a     18 F1 FA 20 
2133e     FD E9 13 16 
21342     ED 07 EE FD | 	byte	$05, $02, $0f, $e6, $18, $f1, $fa, $20, $fd, $e9, $13, $16, $ed, $07, $ee, $fd
21346     29 E3 04 04 
2134a     03 04 F8 1E 
2134e     EB 01 22 DA 
21352     0E 19 EC EC | 	byte	$29, $e3, $04, $04, $03, $04, $f8, $1e, $eb, $01, $22, $da, $0e, $19, $ec, $ec
21356     24 E6 00 1C 
2135a     EE 07 F6 17 
2135e     F6 0F 07 D4 
21362     2A FB 00 FB | 	byte	$24, $e6, $00, $1c, $ee, $07, $f6, $17, $f6, $0f, $07, $d4, $2a, $fb, $00, $fb
21366     06 00 03 F4 
2136a     2C F4 EB 03 
2136e     1F D9 2B DE 
21372     19 F4 F9 18 | 	byte	$06, $00, $03, $f4, $2c, $f4, $eb, $03, $1f, $d9, $2b, $de, $19, $f4, $f9, $18
21376     EF 13 DA 1F 
2137a     0F E5 29 E8 
2137e     FC 17 F4 05 
21382     FC 18 DA 27 | 	byte	$ef, $13, $da, $1f, $0f, $e5, $29, $e8, $fc, $17, $f4, $05, $fc, $18, $da, $27
21386     ED 08 FE 01 
2138a     15 E3 21 03 
2138e     E9 0C 03 F6 
21392     10 0A E0 06 | 	byte	$ed, $08, $fe, $01, $15, $e3, $21, $03, $e9, $0c, $03, $f6, $10, $0a, $e0, $06
21396     14 FC ED 13 
2139a     0D 0E D5 2C 
2139e     EC 13 F3 03 
213a2     0E 0A EA 0D | 	byte	$14, $fc, $ed, $13, $0d, $0e, $d5, $2c, $ec, $13, $f3, $03, $0e, $0a, $ea, $0d
213a6     04 07 FA 02 
213aa     F2 2F D3 0F 
213ae     14 E9 11 02 
213b2     E7 09 13 F3 | 	byte	$04, $07, $fa, $02, $f2, $2f, $d3, $0f, $14, $e9, $11, $02, $e7, $09, $13, $f3
213b6     10 ED 0E 02 
213ba     E0 2F 03 E4 
213be     13 F8 0F F7 
213c2     01 0F EA 1B | 	byte	$10, $ed, $0e, $02, $e0, $2f, $03, $e4, $13, $f8, $0f, $f7, $01, $0f, $ea, $1b
213c6     F1 1D DA 21 
213ca     EE 02 1A F8 
213ce     F6 13 F3 17 
213d2     DF 10 0F F3 | 	byte	$f1, $1d, $da, $21, $ee, $02, $1a, $f8, $f6, $13, $f3, $17, $df, $10, $0f, $f3
213d6     09 F4 0C EE 
213da     34 C4 2F E3 
213de     1B EB 18 F1 
213e2     FD 1B FB F1 | 	byte	$09, $f4, $0c, $ee, $34, $c4, $2f, $e3, $1b, $eb, $18, $f1, $fd, $1b, $fb, $f1
213e6     0C 03 14 EB 
213ea     0F FA FE 28 
213ee     CA 39 D1 2C 
213f2     E9 F9 1E DD | 	byte	$0c, $03, $14, $eb, $0f, $fa, $fe, $28, $ca, $39, $d1, $2c, $e9, $f9, $1e, $dd
213f6     19 F0 18 F2 
213fa     02 FC 13 04 
213fe     E9 0C 11 EB 
21402     19 FC F8 FC | 	byte	$19, $f0, $18, $f2, $02, $fc, $13, $04, $e9, $0c, $11, $eb, $19, $fc, $f8, $fc
21406     0A 15 EF 06 
2140a     F8 23 D1 40 
2140e     CF 06 16 05 
21412     DF 24 E5 1A | 	byte	$0a, $15, $ef, $06, $f8, $23, $d1, $40, $cf, $06, $16, $05, $df, $24, $e5, $1a
21416     FB 04 EC 15 
2141a     11 F0 FE 06 
2141e     05 02 F1 16 
21422     F3 0E F6 01 | 	byte	$fb, $04, $ec, $15, $11, $f0, $fe, $06, $05, $02, $f1, $16, $f3, $0e, $f6, $01
21426     19 D8 2E F5 
2142a     F9 14 0F D4 
2142e     0C 2C DB 13 
21432     E9 1E E8 11 | 	byte	$19, $d8, $2e, $f5, $f9, $14, $0f, $d4, $0c, $2c, $db, $13, $e9, $1e, $e8, $11
21436     09 E3 13 12 
2143a     DE 16 0B F7 
2143e     01 0F EA 03 
21442     1E F5 FF FE | 	byte	$09, $e3, $13, $12, $de, $16, $0b, $f7, $01, $0f, $ea, $03, $1e, $f5, $ff, $fe
21446     F3 25 05 EF 
2144a     F8 1A EF 0D 
2144e     FC 05 FA F3 
21452     2C D5 18 07 | 	byte	$f3, $25, $05, $ef, $f8, $1a, $ef, $0d, $fc, $05, $fa, $f3, $2c, $d5, $18, $07
21456     F0 10 EF 1D 
2145a     DD 1F F6 05 
2145e     FB 11 E9 0F 
21462     0E EF 0D FF | 	byte	$f0, $10, $ef, $1d, $dd, $1f, $f6, $05, $fb, $11, $e9, $0f, $0e, $ef, $0d, $ff
21466     10 E9 1F F6 
2146a     FA FA 23 F3 
2146e     F6 00 07 FF 
21472     13 E4 0F 0C | 	byte	$10, $e9, $1f, $f6, $fa, $fa, $23, $f3, $f6, $00, $07, $ff, $13, $e4, $0f, $0c
21476     EF 08 EE 1B 
2147a     F8 FE FD 05 
2147e     07 00 FE 02 
21482     05 FE 17 FB | 	byte	$ef, $08, $ee, $1b, $f8, $fe, $fd, $05, $07, $00, $fe, $02, $05, $fe, $17, $fb
21486     F4 16 02 F8 
2148a     0C F9 08 F9 
2148e     19 CF 20 15 
21492     EC F7 13 F3 | 	byte	$f4, $16, $02, $f8, $0c, $f9, $08, $f9, $19, $cf, $20, $15, $ec, $f7, $13, $f3
21496     0D 00 04 E9 
2149a     17 02 FC F4 
2149e     11 0C EE 07 
214a2     FC 11 0A EC | 	byte	$0d, $00, $04, $e9, $17, $02, $fc, $f4, $11, $0c, $ee, $07, $fc, $11, $0a, $ec
214a6     04 0E F7 17 
214aa     F4 F9 15 FC 
214ae     F1 17 FF F4 
214b2     0A 00 0F EF | 	byte	$04, $0e, $f7, $17, $f4, $f9, $15, $fc, $f1, $17, $ff, $f4, $0a, $00, $0f, $ef
214b6     09 01 FC 09 
214ba     00 F1 0C 0F 
214be     FE E6 18 F6 
214c2     07 12 DC 28 | 	byte	$09, $01, $fc, $09, $00, $f1, $0c, $0f, $fe, $e6, $18, $f6, $07, $12, $dc, $28
214c6     F3 02 08 E7 
214ca     2F EC F0 13 
214ce     17 E4 05 0C 
214d2     FF 04 00 F6 | 	byte	$f3, $02, $08, $e7, $2f, $ec, $f0, $13, $17, $e4, $05, $0c, $ff, $04, $00, $f6
214d6     10 F7 04 F8 
214da     0A 04 FA 0C 
214de     EF 08 16 EA 
214e2     07 09 FF 01 | 	byte	$10, $f7, $04, $f8, $0a, $04, $fa, $0c, $ef, $08, $16, $ea, $07, $09, $ff, $01
214e6     0F E6 26 EA 
214ea     0D F9 1E D4 
214ee     23 F8 03 09 
214f2     EF 17 FB F0 | 	byte	$0f, $e6, $26, $ea, $0d, $f9, $1e, $d4, $23, $f8, $03, $09, $ef, $17, $fb, $f0
214f6     18 07 E1 11 
214fa     13 F6 EC 21 
214fe     F0 FE 05 0A 
21502     F9 FA 1F DF | 	byte	$18, $07, $e1, $11, $13, $f6, $ec, $21, $f0, $fe, $05, $0a, $f9, $fa, $1f, $df
21506     0C 0B 07 F3 
2150a     07 05 FA 1B 
2150e     EE 05 00 FF 
21512     12 D9 3E CB | 	byte	$0c, $0b, $07, $f3, $07, $05, $fa, $1b, $ee, $05, $00, $ff, $12, $d9, $3e, $cb
21516     2B E0 0A 0E 
2151a     F5 FC 19 F1 
2151e     FD 0B F3 1A 
21522     04 E4 1C F0 | 	byte	$2b, $e0, $0a, $0e, $f5, $fc, $19, $f1, $fd, $0b, $f3, $1a, $04, $e4, $1c, $f0
21526     08 07 FA F9 
2152a     19 00 EF 16 
2152e     ED 1E FB F4 
21532     0A F7 0E 01 | 	byte	$08, $07, $fa, $f9, $19, $00, $ef, $16, $ed, $1e, $fb, $f4, $0a, $f7, $0e, $01
21536     F8 02 FF 0E 
2153a     FE FB FC 0D 
2153e     03 FE FC 11 
21542     F3 12 EA 16 | 	byte	$f8, $02, $ff, $0e, $fe, $fb, $fc, $0d, $03, $fe, $fc, $11, $f3, $12, $ea, $16
21546     F3 0A F7 0C 
2154a     01 FB 03 0C 
2154e     FE FE 0D FF 
21552     EF 1C 02 E8 | 	byte	$f3, $0a, $f7, $0c, $01, $fb, $03, $0c, $fe, $fe, $0d, $ff, $ef, $1c, $02, $e8
21556     1B FC F8 0C 
2155a     F7 0B FC 03 
2155e     FD 08 FE F6 
21562     18 EF 11 E5 | 	byte	$1b, $fc, $f8, $0c, $f7, $0b, $fc, $03, $fd, $08, $fe, $f6, $18, $ef, $11, $e5
21566     1E FA 01 0D 
2156a     F0 08 0D 04 
2156e     E8 13 0D EB 
21572     07 0B F4 01 | 	byte	$1e, $fa, $01, $0d, $f0, $08, $0d, $04, $e8, $13, $0d, $eb, $07, $0b, $f4, $01
21576     FD 24 DD FC 
2157a     1E F8 0C EF 
2157e     06 0B 16 D9 
21582     23 00 F0 16 | 	byte	$fd, $24, $dd, $fc, $1e, $f8, $0c, $ef, $06, $0b, $16, $d9, $23, $00, $f0, $16
21586     EA 15 F8 13 
2158a     F3 00 09 FC 
2158e     00 FD 05 FC 
21592     03 14 DD 1B | 	byte	$ea, $15, $f8, $13, $f3, $00, $09, $fc, $00, $fd, $05, $fc, $03, $14, $dd, $1b
21596     09 E8 23 EB 
2159a     0F EC 21 E7 
2159e     17 EF 08 0C 
215a2     F6 0E EE 14 | 	byte	$09, $e8, $23, $eb, $0f, $ec, $21, $e7, $17, $ef, $08, $0c, $f6, $0e, $ee, $14
215a6     01 01 F2 18 
215aa     FE 08 EC 0E 
215ae     F4 19 EA 08 
215b2     01 07 0B F0 | 	byte	$01, $01, $f2, $18, $fe, $08, $ec, $0e, $f4, $19, $ea, $08, $01, $07, $0b, $f0
215b6     07 16 D9 2A 
215ba     EB 17 D9 18 
215be     FC 07 06 F4 
215c2     0C F4 1C EE | 	byte	$07, $16, $d9, $2a, $eb, $17, $d9, $18, $fc, $07, $06, $f4, $0c, $f4, $1c, $ee
215c6     13 E2 22 01 
215ca     05 F7 0F ED 
215ce     10 F3 12 F7 
215d2     04 FB 03 09 | 	byte	$13, $e2, $22, $01, $05, $f7, $0f, $ed, $10, $f3, $12, $f7, $04, $fb, $03, $09
215d6     F6 0F F4 08 
215da     F1 08 12 FD 
215de     F7 FC 12 F8 
215e2     13 E7 16 FF | 	byte	$f6, $0f, $f4, $08, $f1, $08, $12, $fd, $f7, $fc, $12, $f8, $13, $e7, $16, $ff
215e6     0B F6 06 F8 
215ea     27 E0 F1 39 
215ee     C8 23 F7 F9 
215f2     0B 05 03 07 | 	byte	$0b, $f6, $06, $f8, $27, $e0, $f1, $39, $c8, $23, $f7, $f9, $0b, $05, $03, $07
215f6     EB 18 FF F6 
215fa     FE 14 E4 1F 
215fe     E6 07 1C E7 
21602     FF 16 02 F0 | 	byte	$eb, $18, $ff, $f6, $fe, $14, $e4, $1f, $e6, $07, $1c, $e7, $ff, $16, $02, $f0
21606     12 F4 0D 11 
2160a     E6 02 0F FC 
2160e     15 DE 2D E2 
21612     15 F2 1F E5 | 	byte	$12, $f4, $0d, $11, $e6, $02, $0f, $fc, $15, $de, $2d, $e2, $15, $f2, $1f, $e5
21616     08 01 00 1C 
2161a     D7 0C 0C F6 
2161e     1A DA 21 FC 
21622     FD 09 FB FA | 	byte	$08, $01, $00, $1c, $d7, $0c, $0c, $f6, $1a, $da, $21, $fc, $fd, $09, $fb, $fa
21626     1C F1 01 00 
2162a     14 E6 13 FC 
2162e     0B FF 03 F8 
21632     1C DE 2F C3 | 	byte	$1c, $f1, $01, $00, $14, $e6, $13, $fc, $0b, $ff, $03, $f8, $1c, $de, $2f, $c3
21636     39 E8 FC 16 
2163a     ED 00 12 F6 
2163e     EE 28 E9 12 
21642     F2 0D FC F7 | 	byte	$39, $e8, $fc, $16, $ed, $00, $12, $f6, $ee, $28, $e9, $12, $f2, $0d, $fc, $f7
21646     21 D9 20 FC 
2164a     EE 17 F8 FA 
2164e     17 E8 2B D3 
21652     27 F4 08 FF | 	byte	$21, $d9, $20, $fc, $ee, $17, $f8, $fa, $17, $e8, $2b, $d3, $27, $f4, $08, $ff
21656     09 ED 05 0F 
2165a     FD 00 0E E1 
2165e     1A ED 1E EF 
21662     FB 17 F5 04 | 	byte	$09, $ed, $05, $0f, $fd, $00, $0e, $e1, $1a, $ed, $1e, $ef, $fb, $17, $f5, $04
21666     FF FC 0B FC 
2166a     FF F9 17 FE 
2166e     05 E1 24 FC 
21672     F5 0D F8 0D | 	byte	$ff, $fc, $0b, $fc, $ff, $f9, $17, $fe, $05, $e1, $24, $fc, $f5, $0d, $f8, $0d
21676     F6 05 04 01 
2167a     03 FC 11 F4 
2167e     11 F8 F8 14 
21682     FD 03 FC 00 | 	byte	$f6, $05, $04, $01, $03, $fc, $11, $f4, $11, $f8, $f8, $14, $fd, $03, $fc, $00
21686     11 F3 F2 17 
2168a     0F DE 16 07 
2168e     FD FE 0F EB 
21692     14 F9 FC FD | 	byte	$11, $f3, $f2, $17, $0f, $de, $16, $07, $fd, $fe, $0f, $eb, $14, $f9, $fc, $fd
21696     16 01 E9 0F 
2169a     1C DB 20 F6 
2169e     03 09 FB FE 
216a2     12 F0 07 01 | 	byte	$16, $01, $e9, $0f, $1c, $db, $20, $f6, $03, $09, $fb, $fe, $12, $f0, $07, $01
216a6     01 10 EC FE 
216aa     14 EB 1C EA 
216ae     1B F1 0F EE 
216b2     07 14 F3 01 | 	byte	$01, $10, $ec, $fe, $14, $eb, $1c, $ea, $1b, $f1, $0f, $ee, $07, $14, $f3, $01
216b6     FA 0E F7 07 
216ba     0D F8 18 E6 
216be     04 0F FA 00 
216c2     FD 0F F7 F2 | 	byte	$fa, $0e, $f7, $07, $0d, $f8, $18, $e6, $04, $0f, $fa, $00, $fd, $0f, $f7, $f2
216c6     1F E1 14 07 
216ca     FD F8 12 02 
216ce     EE 10 0C FF 
216d2     EE 16 F0 FD | 	byte	$1f, $e1, $14, $07, $fd, $f8, $12, $02, $ee, $10, $0c, $ff, $ee, $16, $f0, $fd
216d6     14 08 EE 09 
216da     09 F1 1B 06 
216de     ED 0C FF 00 
216e2     F8 16 FA F1 | 	byte	$14, $08, $ee, $09, $09, $f1, $1b, $06, $ed, $0c, $ff, $00, $f8, $16, $fa, $f1
216e6     16 FC F4 28 
216ea     CF 18 08 08 
216ee     F9 F4 17 EA 
216f2     16 F7 EC 2F | 	byte	$16, $fc, $f4, $28, $cf, $18, $08, $08, $f9, $f4, $17, $ea, $16, $f7, $ec, $2f
216f6     F1 F4 FC 16 
216fa     06 01 07 00 
216fe     EA 25 F6 EC 
21702     27 E6 F1 34 | 	byte	$f1, $f4, $fc, $16, $06, $01, $07, $00, $ea, $25, $f6, $ec, $27, $e6, $f1, $34
21706     E5 FF F9 17 
2170a     01 EC 09 01 
2170e     FE 07 01 FC 
21712     05 02 07 03 | 	byte	$e5, $ff, $f9, $17, $01, $ec, $09, $01, $fe, $07, $01, $fc, $05, $02, $07, $03
21716     FA FE 16 F8 
2171a     FC 26 D8 03 
2171e     1C F8 F4 FE 
21722     0D 01 F6 0F | 	byte	$fa, $fe, $16, $f8, $fc, $26, $d8, $03, $1c, $f8, $f4, $fe, $0d, $01, $f6, $0f
21726     FE F7 18 05 
2172a     E6 02 23 E5 
2172e     0C F7 0F EF 
21732     13 04 EF 12 | 	byte	$fe, $f7, $18, $05, $e6, $02, $23, $e5, $0c, $f7, $0f, $ef, $13, $04, $ef, $12
21736     F4 0F F5 1D 
2173a     D6 23 FA FD 
2173e     FD 04 01 07 
21742     F0 20 EB 05 | 	byte	$f4, $0f, $f5, $1d, $d6, $23, $fa, $fd, $fd, $04, $01, $07, $f0, $20, $eb, $05
21746     1B F6 FD FE 
2174a     03 0B FC F7 
2174e     07 FA 0E F8 
21752     F5 18 F0 11 | 	byte	$1b, $f6, $fd, $fe, $03, $0b, $fc, $f7, $07, $fa, $0e, $f8, $f5, $18, $f0, $11
21756     E9 15 F9 0C 
2175a     FA FD 15 F0 
2175e     F7 13 FE FC 
21762     11 F8 F6 17 | 	byte	$e9, $15, $f9, $0c, $fa, $fd, $15, $f0, $f7, $13, $fe, $fc, $11, $f8, $f6, $17
21766     01 F1 13 00 
2176a     05 F9 FC 0E 
2176e     0A F7 06 DE 
21772     2F 00 EF 08 | 	byte	$01, $f1, $13, $00, $05, $f9, $fc, $0e, $0a, $f7, $06, $de, $2f, $00, $ef, $08
21776     F5 03 11 FF 
2177a     02 F2 F8 1A 
2177e     F8 0E E7 11 
21782     05 03 FF 01 | 	byte	$f5, $03, $11, $ff, $02, $f2, $f8, $1a, $f8, $0e, $e7, $11, $05, $03, $ff, $01
21786     0F EF 02 FF 
2178a     1C ED 24 C5 
2178e     30 F7 FD 17 
21792     E8 16 03 E7 | 	byte	$0f, $ef, $02, $ff, $1c, $ed, $24, $c5, $30, $f7, $fd, $17, $e8, $16, $03, $e7
21796     23 E6 20 E0 
2179a     18 FC FE FA 
2179e     F3 2A EB 03 
217a2     00 0B F5 00 | 	byte	$23, $e6, $20, $e0, $18, $fc, $fe, $fa, $f3, $2a, $eb, $03, $00, $0b, $f5, $00
217a6     19 DF 1F F3 
217aa     07 F5 17 FB 
217ae     F1 2A D3 1B 
217b2     0A FC FA FB | 	byte	$19, $df, $1f, $f3, $07, $f5, $17, $fb, $f1, $2a, $d3, $1b, $0a, $fc, $fa, $fb
217b6     1D EC 01 0F 
217ba     EE 12 FD FE 
217be     F9 19 EC 16 
217c2     E7 07 22 E8 | 	byte	$1d, $ec, $01, $0f, $ee, $12, $fd, $fe, $f9, $19, $ec, $16, $e7, $07, $22, $e8
217c6     F5 0F 04 FA 
217ca     02 03 05 F8 
217ce     13 F0 0C F6 
217d2     21 DB 18 01 | 	byte	$f5, $0f, $04, $fa, $02, $03, $05, $f8, $13, $f0, $0c, $f6, $21, $db, $18, $01
217d6     05 ED 21 F2 
217da     06 F0 20 E9 
217de     16 F7 F7 09 
217e2     08 03 FC 0B | 	byte	$05, $ed, $21, $f2, $06, $f0, $20, $e9, $16, $f7, $f7, $09, $08, $03, $fc, $0b
217e6     EE 00 0E 00 
217ea     03 F4 11 F1 
217ee     15 EE 13 F5 
217f2     1C DE 23 E8 | 	byte	$ee, $00, $0e, $00, $03, $f4, $11, $f1, $15, $ee, $13, $f5, $1c, $de, $23, $e8
217f6     16 ED 1F EC 
217fa     FB 1C F5 03 
217fe     FA 12 EF 1C 
21802     F7 01 FC 01 | 	byte	$16, $ed, $1f, $ec, $fb, $1c, $f5, $03, $fa, $12, $ef, $1c, $f7, $01, $fc, $01
21806     0E FD FA 10 
2180a     DF 1F 0A E0 
2180e     1E E4 23 E2 
21812     1C E1 0F 13 | 	byte	$0e, $fd, $fa, $10, $df, $1f, $0a, $e0, $1e, $e4, $23, $e2, $1c, $e1, $0f, $13
21816     FD F4 08 F9 
2181a     14 F9 0C F7 
2181e     0F 04 04 E3 
21822     38 CB 24 F3 | 	byte	$fd, $f4, $08, $f9, $14, $f9, $0c, $f7, $0f, $04, $04, $e3, $38, $cb, $24, $f3
21826     01 F8 10 F8 
2182a     15 E0 15 F8 
2182e     16 F0 FC 09 
21832     03 00 F6 16 | 	byte	$01, $f8, $10, $f8, $15, $e0, $15, $f8, $16, $f0, $fc, $09, $03, $00, $f6, $16
21836     F3 07 FF FD 
2183a     11 E6 2C E3 
2183e     06 0F 00 F6 
21842     10 EF 16 FA | 	byte	$f3, $07, $ff, $fd, $11, $e6, $2c, $e3, $06, $0f, $00, $f6, $10, $ef, $16, $fa
21846     F6 0B 0B FD 
2184a     F4 12 04 FD 
2184e     F9 11 F0 02 
21852     0D 03 EA 11 | 	byte	$f6, $0b, $0b, $fd, $f4, $12, $04, $fd, $f9, $11, $f0, $02, $0d, $03, $ea, $11
21856     0D E7 16 EE 
2185a     20 EF 0B F6 
2185e     0D 04 FE 01 
21862     10 F7 F6 10 | 	byte	$0d, $e7, $16, $ee, $20, $ef, $0b, $f6, $0d, $04, $fe, $01, $10, $f7, $f6, $10
21866     09 F3 01 17 
2186a     E5 17 06 E6 
2186e     18 F9 0F EF 
21872     FA 13 F5 04 | 	byte	$09, $f3, $01, $17, $e5, $17, $06, $e6, $18, $f9, $0f, $ef, $fa, $13, $f5, $04
21876     13 DA 22 F9 
2187a     F5 28 D4 23 
2187e     F4 08 00 F9 
21882     17 EB 15 03 | 	byte	$13, $da, $22, $f9, $f5, $28, $d4, $23, $f4, $08, $00, $f9, $17, $eb, $15, $03
21886     F5 FC 24 DD 
2188a     1C EA 25 DC 
2188e     21 E8 07 FD 
21892     19 E8 0D F4 | 	byte	$f5, $fc, $24, $dd, $1c, $ea, $25, $dc, $21, $e8, $07, $fd, $19, $e8, $0d, $f4
21896     1B EE 13 EC 
2189a     02 13 F4 0F 
2189e     EE 14 F3 01 
218a2     19 E8 0C 07 | 	byte	$1b, $ee, $13, $ec, $02, $13, $f4, $0f, $ee, $14, $f3, $01, $19, $e8, $0c, $07
218a6     FB 10 08 F3 
218aa     FB 11 04 F9 
218ae     0B F8 F3 18 
218b2     06 EE 0F F7 | 	byte	$fb, $10, $08, $f3, $fb, $11, $04, $f9, $0b, $f8, $f3, $18, $06, $ee, $0f, $f7
218b6     FE 12 F3 16 
218ba     DE 26 EB 04 
218be     03 04 FE 03 
218c2     F6 14 EC 1D | 	byte	$fe, $12, $f3, $16, $de, $26, $eb, $04, $03, $04, $fe, $03, $f6, $14, $ec, $1d
218c6     F1 09 F8 12 
218ca     F5 1B EB 00 
218ce     03 0F F8 04 
218d2     01 F3 17 F8 | 	byte	$f1, $09, $f8, $12, $f5, $1b, $eb, $00, $03, $0f, $f8, $04, $01, $f3, $17, $f8
218d6     FE 03 0B EB 
218da     0D 0C F8 EF 
218de     26 EF F4 1E 
218e2     F4 F9 0D 03 | 	byte	$fe, $03, $0b, $eb, $0d, $0c, $f8, $ef, $26, $ef, $f4, $1e, $f4, $f9, $0d, $03
218e6     08 F2 0C 01 
218ea     04 FE FB 14 
218ee     01 EB 12 0E 
218f2     DD 27 F7 03 | 	byte	$08, $f2, $0c, $01, $04, $fe, $fb, $14, $01, $eb, $12, $0e, $dd, $27, $f7, $03
218f6     FB 05 03 03 
218fa     FE 00 01 FC 
218fe     0F F0 06 0A 
21902     04 F4 05 12 | 	byte	$fb, $05, $03, $03, $fe, $00, $01, $fc, $0f, $f0, $06, $0a, $04, $f4, $05, $12
21906     F0 04 03 04 
2190a     07 F8 17 E5 
2190e     17 FC FA 08 
21912     0C 04 E4 1A | 	byte	$f0, $04, $03, $04, $07, $f8, $17, $e5, $17, $fc, $fa, $08, $0c, $04, $e4, $1a
21916     F9 13 F6 FD 
2191a     07 01 06 FF 
2191e     FE FE 0C F5 
21922     0A FB 01 11 | 	byte	$f9, $13, $f6, $fd, $07, $01, $06, $ff, $fe, $fe, $0c, $f5, $0a, $fb, $01, $11
21926     F4 F8 13 FE 
2192a     FF FF 0C E4 
2192e     1D 01 FE F8 
21932     04 03 09 F9 | 	byte	$f4, $f8, $13, $fe, $ff, $ff, $0c, $e4, $1d, $01, $fe, $f8, $04, $03, $09, $f9
21936     05 03 F7 0F 
2193a     FA 16 E4 12 
2193e     F7 17 F0 08 
21942     0C F6 06 0A | 	byte	$05, $03, $f7, $0f, $fa, $16, $e4, $12, $f7, $17, $f0, $08, $0c, $f6, $06, $0a
21946     F6 07 00 FE 
2194a     FD 07 FE FA 
2194e     05 02 FF F5 
21952     14 FE 00 FC | 	byte	$f6, $07, $00, $fe, $fd, $07, $fe, $fa, $05, $02, $ff, $f5, $14, $fe, $00, $fc
21956     FC 10 00 FF 
2195a     FA 11 00 FB 
2195e     00 0F EE 1B 
21962     E8 12 07 F9 | 	byte	$fc, $10, $00, $ff, $fa, $11, $00, $fb, $00, $0f, $ee, $1b, $e8, $12, $07, $f9
21966     03 F2 1E F6 
2196a     FF EE 1F E6 
2196e     12 F6 0E 06 
21972     F7 02 0B FC | 	byte	$03, $f2, $1e, $f6, $ff, $ee, $1f, $e6, $12, $f6, $0e, $06, $f7, $02, $0b, $fc
21976     FE 13 E8 0F 
2197a     01 05 F5 10 
2197e     F4 0F F8 FF 
21982     1C E0 1B 0B | 	byte	$fe, $13, $e8, $0f, $01, $05, $f5, $10, $f4, $0f, $f8, $ff, $1c, $e0, $1b, $0b
21986     E9 0E 18 F1 
2198a     FF 01 09 F3 
2198e     19 EC 08 FA 
21992     04 06 08 EA | 	byte	$e9, $0e, $18, $f1, $ff, $01, $09, $f3, $19, $ec, $08, $fa, $04, $06, $08, $ea
21996     13 ED 13 00 
2199a     FC 0B F0 0D 
2199e     16 D9 27 F8 
219a2     FC FF 15 03 | 	byte	$13, $ed, $13, $00, $fc, $0b, $f0, $0d, $16, $d9, $27, $f8, $fc, $ff, $15, $03
219a6     F7 01 09 F3 
219aa     25 D9 13 08 
219ae     FA F7 0E 03 
219b2     FA FC 16 E2 | 	byte	$f7, $01, $09, $f3, $25, $d9, $13, $08, $fa, $f7, $0e, $03, $fa, $fc, $16, $e2
219b6     1C EF 1B E3 
219ba     10 FD 0C F3 
219be     06 09 F1 07 
219c2     12 F7 F3 09 | 	byte	$1c, $ef, $1b, $e3, $10, $fd, $0c, $f3, $06, $09, $f1, $07, $12, $f7, $f3, $09
219c6     0C 02 05 FC 
219ca     FF FB 19 FE 
219ce     F8 FD 18 EE 
219d2     0E F6 0D 05 | 	byte	$0c, $02, $05, $fc, $ff, $fb, $19, $fe, $f8, $fd, $18, $ee, $0e, $f6, $0d, $05
219d6     E7 17 FC 03 
219da     F4 0E FC FC 
219de     0E FD FF FE 
219e2     10 EF 0B 0F | 	byte	$e7, $17, $fc, $03, $f4, $0e, $fc, $fc, $0e, $fd, $ff, $fe, $10, $ef, $0b, $0f
219e6     FB F4 18 EC 
219ea     0F 01 07 F0 
219ee     0E 06 FC FC 
219f2     0C FC F7 11 | 	byte	$fb, $f4, $18, $ec, $0f, $01, $07, $f0, $0e, $06, $fc, $fc, $0c, $fc, $f7, $11
219f6     FB FE 0B F4 
219fa     09 14 E2 11 
219fe     11 EF FA 1C 
21a02     ED 0C FB 06 | 	byte	$fb, $fe, $0b, $f4, $09, $14, $e2, $11, $11, $ef, $fa, $1c, $ed, $0c, $fb, $06
21a06     FF F8 12 08 
21a0a     E9 13 F4 0C 
21a0e     0F F6 FD 0B 
21a12     00 01 0F E7 | 	byte	$ff, $f8, $12, $08, $e9, $13, $f4, $0c, $0f, $f6, $fd, $0b, $00, $01, $0f, $e7
21a16     0E FD 0F F3 
21a1a     FC 11 F7 FE 
21a1e     0C EE 0E 11 
21a22     F3 F7 07 12 | 	byte	$0e, $fd, $0f, $f3, $fc, $11, $f7, $fe, $0c, $ee, $0e, $11, $f3, $f7, $07, $12
21a26     F7 FE 10 EA 
21a2a     10 02 09 F6 
21a2e     0A 00 F3 18 
21a32     FE F5 0B F8 | 	byte	$f7, $fe, $10, $ea, $10, $02, $09, $f6, $0a, $00, $f3, $18, $fe, $f5, $0b, $f8
21a36     0C F7 15 EC 
21a3a     0A FE 05 01 
21a3e     0C FD F0 18 
21a42     FD 0F ED 08 | 	byte	$0c, $f7, $15, $ec, $0a, $fe, $05, $01, $0c, $fd, $f0, $18, $fd, $0f, $ed, $08
21a46     03 F8 16 F3 
21a4a     05 01 F0 1A 
21a4e     F2 08 FC 08 
21a52     F0 11 FD 17 | 	byte	$03, $f8, $16, $f3, $05, $01, $f0, $1a, $f2, $08, $fc, $08, $f0, $11, $fd, $17
21a56     E3 15 F5 08 
21a5a     0F FA FB 06 
21a5e     02 06 FF 0A 
21a62     ED 0C 0A F1 | 	byte	$e3, $15, $f5, $08, $0f, $fa, $fb, $06, $02, $06, $ff, $0a, $ed, $0c, $0a, $f1
21a66     16 EE 0F EE 
21a6a     19 01 EC 1A 
21a6e     ED 0C F9 11 
21a72     EF 1F DC 16 | 	byte	$16, $ee, $0f, $ee, $19, $01, $ec, $1a, $ed, $0c, $f9, $11, $ef, $1f, $dc, $16
21a76     04 09 F2 0A 
21a7a     01 00 F7 17 
21a7e     03 EF 0E FF 
21a82     0F F6 FE 02 | 	byte	$04, $09, $f2, $0a, $01, $00, $f7, $17, $03, $ef, $0e, $ff, $0f, $f6, $fe, $02
21a86     0B FC F6 25 
21a8a     E7 03 FD 07 
21a8e     FF 09 EB 23 
21a92     E3 0F F3 18 | 	byte	$0b, $fc, $f6, $25, $e7, $03, $fd, $07, $ff, $09, $eb, $23, $e3, $0f, $f3, $18
21a96     E3 29 E7 06 
21a9a     06 0C FB F5 
21a9e     11 12 F0 FF 
21aa2     07 08 F3 0D | 	byte	$e3, $29, $e7, $06, $06, $0c, $fb, $f5, $11, $12, $f0, $ff, $07, $08, $f3, $0d
21aa6     03 07 FC FC 
21aaa     09 FA 0D F9 
21aae     00 F9 10 E8 
21ab2     18 F5 0F F1 | 	byte	$03, $07, $fc, $fc, $09, $fa, $0d, $f9, $00, $f9, $10, $e8, $18, $f5, $0f, $f1
21ab6     09 FE 0B FB 
21aba     F7 1C EA 13 
21abe     00 FD 04 FC 
21ac2     03 18 EA 0E | 	byte	$09, $fe, $0b, $fb, $f7, $1c, $ea, $13, $00, $fd, $04, $fc, $03, $18, $ea, $0e
21ac6     F5 07 0B 01 
21aca     06 F0 0E 01 
21ace     07 EA 23 E4 
21ad2     09 06 F9 0A | 	byte	$f5, $07, $0b, $01, $06, $f0, $0e, $01, $07, $ea, $23, $e4, $09, $06, $f9, $0a
21ad6     F1 17 F3 03 
21ada     FB 13 FC FD 
21ade     F1 19 02 0C 
21ae2     EB 09 08 02 | 	byte	$f1, $17, $f3, $03, $fb, $13, $fc, $fd, $f1, $19, $02, $0c, $eb, $09, $08, $02
21ae6     06 F9 0D F7 
21aea     03 0B FC F4 
21aee     18 EA 13 FB 
21af2     06 F3 13 FC | 	byte	$06, $f9, $0d, $f7, $03, $0b, $fc, $f4, $18, $ea, $13, $fb, $06, $f3, $13, $fc
21af6     FC 0F F7 FF 
21afa     05 04 FF FB 
21afe     0C FF FC 0B 
21b02     FC F7 16 FC | 	byte	$fc, $0f, $f7, $ff, $05, $04, $ff, $fb, $0c, $ff, $fc, $0b, $fc, $f7, $16, $fc
21b06     06 FB F7 23 
21b0a     F1 FA 0C FE 
21b0e     04 07 F3 13 
21b12     ED 0B 08 F3 | 	byte	$06, $fb, $f7, $23, $f1, $fa, $0c, $fe, $04, $07, $f3, $13, $ed, $0b, $08, $f3
21b16     0D F8 06 FF 
21b1a     F8 17 E2 24 
21b1e     DF 18 FD F8 
21b22     10 00 FB 15 | 	byte	$0d, $f8, $06, $ff, $f8, $17, $e2, $24, $df, $18, $fd, $f8, $10, $00, $fb, $15
21b26     E9 13 FF 07 
21b2a     08 F2 07 FD 
21b2e     0B 01 03 EA 
21b32     1F F7 FE F5 | 	byte	$e9, $13, $ff, $07, $08, $f2, $07, $fd, $0b, $01, $03, $ea, $1f, $f7, $fe, $f5
21b36     27 D2 28 EC 
21b3a     07 03 00 F2 
21b3e     25 E6 06 0C 
21b42     F0 0F 00 04 | 	byte	$27, $d2, $28, $ec, $07, $03, $00, $f2, $25, $e6, $06, $0c, $f0, $0f, $00, $04
21b46     03 F3 18 ED 
21b4a     13 00 FD FC 
21b4e     07 0D F8 05 
21b52     04 EE 28 D4 | 	byte	$03, $f3, $18, $ed, $13, $00, $fd, $fc, $07, $0d, $f8, $05, $04, $ee, $28, $d4
21b56     22 F7 FC 00 
21b5a     04 FE 14 E8 
21b5e     04 05 FD 07 
21b62     09 EE 0B 07 | 	byte	$22, $f7, $fc, $00, $04, $fe, $14, $e8, $04, $05, $fd, $07, $09, $ee, $0b, $07
21b66     07 FF FD 07 
21b6a     06 FA 0D 03 
21b6e     F6 0D 06 E8 
21b72     27 E4 10 03 | 	byte	$07, $ff, $fd, $07, $06, $fa, $0d, $03, $f6, $0d, $06, $e8, $27, $e4, $10, $03
21b76     ED 03 14 F7 
21b7a     05 F7 13 FB 
21b7e     F8 0C 00 FD 
21b82     09 FA FE 0A | 	byte	$ed, $03, $14, $f7, $05, $f7, $13, $fb, $f8, $0c, $00, $fd, $09, $fa, $fe, $0a
21b86     11 E3 18 F5 
21b8a     06 04 FF 01 
21b8e     0A 01 F8 17 
21b92     ED 13 F6 16 | 	byte	$11, $e3, $18, $f5, $06, $04, $ff, $01, $0a, $01, $f8, $17, $ed, $13, $f6, $16
21b96     E9 0F 08 F8 
21b9a     F4 16 FD 01 
21b9e     FE FC 06 FC 
21ba2     0F E7 12 0A | 	byte	$e9, $0f, $08, $f8, $f4, $16, $fd, $01, $fe, $fc, $06, $fc, $0f, $e7, $12, $0a
21ba6     FA F4 12 FC 
21baa     05 FE 06 FA 
21bae     0F 04 03 F7 
21bb2     0C FA 08 04 | 	byte	$fa, $f4, $12, $fc, $05, $fe, $06, $fa, $0f, $04, $03, $f7, $0c, $fa, $08, $04
21bb6     F8 0B EE 17 
21bba     F4 0C FF EE 
21bbe     26 D6 26 F0 
21bc2     03 FE 08 03 | 	byte	$f8, $0b, $ee, $17, $f4, $0c, $ff, $ee, $26, $d6, $26, $f0, $03, $fe, $08, $03
21bc6     0B EC 13 F9 
21bca     03 00 07 F6 
21bce     0F 00 FB 03 
21bd2     0A F7 07 06 | 	byte	$0b, $ec, $13, $f9, $03, $00, $07, $f6, $0f, $00, $fb, $03, $0a, $f7, $07, $06
21bd6     EF 1F EF 0B 
21bda     FC 03 07 FA 
21bde     08 FE F2 13 
21be2     00 00 F6 06 | 	byte	$ef, $1f, $ef, $0b, $fc, $03, $07, $fa, $08, $fe, $f2, $13, $00, $00, $f6, $06
21be6     09 F9 09 F3 
21bea     0F F9 02 03 
21bee     10 EC 15 FB 
21bf2     09 01 F4 0D | 	byte	$09, $f9, $09, $f3, $0f, $f9, $02, $03, $10, $ec, $15, $fb, $09, $01, $f4, $0d
21bf6     0A F1 18 F1 
21bfa     FF 12 EF 0A 
21bfe     02 FE FD 07 
21c02     F6 0C 08 EF | 	byte	$0a, $f1, $18, $f1, $ff, $12, $ef, $0a, $02, $fe, $fd, $07, $f6, $0c, $08, $ef
21c06     0F FE 02 01 
21c0a     FF 05 09 F0 
21c0e     18 F7 FE 0B 
21c12     FC FF 07 0A | 	byte	$0f, $fe, $02, $01, $ff, $05, $09, $f0, $18, $f7, $fe, $0b, $fc, $ff, $07, $0a
21c16     EE 0F 00 01 
21c1a     05 FB 0B FB 
21c1e     FC 1B EE FB 
21c22     19 F9 F6 16 | 	byte	$ee, $0f, $00, $01, $05, $fb, $0b, $fb, $fc, $1b, $ee, $fb, $19, $f9, $f6, $16
21c26     F6 04 F7 0C 
21c2a     06 F4 0F F9 
21c2e     F6 16 F8 F9 
21c32     0F FE FF FE | 	byte	$f6, $04, $f7, $0c, $06, $f4, $0f, $f9, $f6, $16, $f8, $f9, $0f, $fe, $ff, $fe
21c36     0F F3 0F FE 
21c3a     FB 07 02 02 
21c3e     05 FE FF 01 
21c42     0C FC FD 09 | 	byte	$0f, $f3, $0f, $fe, $fb, $07, $02, $02, $05, $fe, $ff, $01, $0c, $fc, $fd, $09
21c46     F8 01 18 E8 
21c4a     05 14 EC 0E 
21c4e     00 0C E4 15 
21c52     0D E8 1B F2 | 	byte	$f8, $01, $18, $e8, $05, $14, $ec, $0e, $00, $0c, $e4, $15, $0d, $e8, $1b, $f2
21c56     04 04 0C F6 
21c5a     FC 11 FB F3 
21c5e     1E F2 02 0A 
21c62     F4 0B 03 FA | 	byte	$04, $04, $0c, $f6, $fc, $11, $fb, $f3, $1e, $f2, $02, $0a, $f4, $0b, $03, $fa
21c66     07 01 09 F3 
21c6a     0F 00 FC FD 
21c6e     1A DB 1B 01 
21c72     F8 04 01 0C | 	byte	$07, $01, $09, $f3, $0f, $00, $fc, $fd, $1a, $db, $1b, $01, $f8, $04, $01, $0c
21c76     F4 FF 07 02 
21c7a     F8 17 ED 05 
21c7e     06 0E EE 11 
21c82     FD F8 1B EF | 	byte	$f4, $ff, $07, $02, $f8, $17, $ed, $05, $06, $0e, $ee, $11, $fd, $f8, $1b, $ef
21c86     07 FE 0E F7 
21c8a     05 01 07 F7 
21c8e     05 0B F8 03 
21c92     FE 07 04 01 | 	byte	$07, $fe, $0e, $f7, $05, $01, $07, $f7, $05, $0b, $f8, $03, $fe, $07, $04, $01
21c96     FE 0A F7 0B 
21c9a     F7 0A FD 08 
21c9e     FD F6 0E 04 
21ca2     01 FC 06 FD | 	byte	$fe, $0a, $f7, $0b, $f7, $0a, $fd, $08, $fd, $f6, $0e, $04, $01, $fc, $06, $fd
21ca6     09 00 07 EF 
21caa     21 E7 0D 06 
21cae     FC FD 0F F6 
21cb2     0B F4 11 00 | 	byte	$09, $00, $07, $ef, $21, $e7, $0d, $06, $fc, $fd, $0f, $f6, $0b, $f4, $11, $00
21cb6     F9 07 01 FD 
21cba     07 FD 04 08 
21cbe     F0 0B 07 00 
21cc2     FB 07 FE 03 | 	byte	$f9, $07, $01, $fd, $07, $fd, $04, $08, $f0, $0b, $07, $00, $fb, $07, $fe, $03
21cc6     03 FC 05 FD 
21cca     06 04 FE FD 
21cce     0C FF F8 03 
21cd2     12 F4 04 06 | 	byte	$03, $fc, $05, $fd, $06, $04, $fe, $fd, $0c, $ff, $f8, $03, $12, $f4, $04, $06
21cd6     FE FE 01 0C 
21cda     F3 07 07 FB 
21cde     FE 0F F4 09 
21ce2     F6 11 FA 01 | 	byte	$fe, $fe, $01, $0c, $f3, $07, $07, $fb, $fe, $0f, $f4, $09, $f6, $11, $fa, $01
21ce6     FB 0A 01 FF 
21cea     05 F9 0F F6 
21cee     12 EE 19 EF 
21cf2     16 F0 07 0F | 	byte	$fb, $0a, $01, $ff, $05, $f9, $0f, $f6, $12, $ee, $19, $ef, $16, $f0, $07, $0f
21cf6     F4 00 07 FF 
21cfa     03 05 FC 01 
21cfe     05 0C E9 0F 
21d02     12 E7 10 F8 | 	byte	$f4, $00, $07, $ff, $03, $05, $fc, $01, $05, $0c, $e9, $0f, $12, $e7, $10, $f8
21d06     0B FB 0A F3 
21d0a     0C 02 03 FE 
21d0e     04 FF 06 01 
21d12     FD 0F F6 0A | 	byte	$0b, $fb, $0a, $f3, $0c, $02, $03, $fe, $04, $ff, $06, $01, $fd, $0f, $f6, $0a
21d16     FD FF 13 E4 
21d1a     21 FA F6 04 
21d1e     14 E7 19 FB 
21d22     F9 FB 0A 06 | 	byte	$fd, $ff, $13, $e4, $21, $fa, $f6, $04, $14, $e7, $19, $fb, $f9, $fb, $0a, $06
21d26     F7 02 04 F6 
21d2a     0F 01 F7 0B 
21d2e     0B E9 11 0A 
21d32     FE FB 0A FE | 	byte	$f7, $02, $04, $f6, $0f, $01, $f7, $0b, $0b, $e9, $11, $0a, $fe, $fb, $0a, $fe
21d36     FF 09 01 FF 
21d3a     01 02 0C FA 
21d3e     06 FE 06 FF 
21d42     F7 0E 07 F0 | 	byte	$ff, $09, $01, $ff, $01, $02, $0c, $fa, $06, $fe, $06, $ff, $f7, $0e, $07, $f0
21d46     08 F8 0F FA 
21d4a     0B F7 01 07 
21d4e     06 F8 FE 0E 
21d52     FC 02 03 FA | 	byte	$08, $f8, $0f, $fa, $0b, $f7, $01, $07, $06, $f8, $fe, $0e, $fc, $02, $03, $fa
21d56     10 FF FF F7 
21d5a     18 F0 10 01 
21d5e     F6 0D 00 FF 
21d62     07 F4 0F FB | 	byte	$10, $ff, $ff, $f7, $18, $f0, $10, $01, $f6, $0d, $00, $ff, $07, $f4, $0f, $fb
21d66     05 01 FD 05 
21d6a     03 FB FF 0F 
21d6e     F4 F6 1A EE 
21d72     12 F5 0B FE | 	byte	$05, $01, $fd, $05, $03, $fb, $ff, $0f, $f4, $f6, $1a, $ee, $12, $f5, $0b, $fe
21d76     01 0F F8 F8 
21d7a     0F 08 F2 0D 
21d7e     FF 00 05 FE 
21d82     03 FF 09 F9 | 	byte	$01, $0f, $f8, $f8, $0f, $08, $f2, $0d, $ff, $00, $05, $fe, $03, $ff, $09, $f9
21d86     04 03 F9 14 
21d8a     F6 FF 08 F0 
21d8e     1B E7 14 F6 
21d92     04 07 F8 02 | 	byte	$04, $03, $f9, $14, $f6, $ff, $08, $f0, $1b, $e7, $14, $f6, $04, $07, $f8, $02
21d96     0F F3 07 05 
21d9a     00 05 FC 06 
21d9e     08 FB 03 02 
21da2     FE 05 0D EF | 	byte	$0f, $f3, $07, $05, $00, $05, $fc, $06, $08, $fb, $03, $02, $fe, $05, $0d, $ef
21da6     0C 09 FB 02 
21daa     FF 02 09 F7 
21dae     13 F0 06 00 
21db2     09 F8 07 00 | 	byte	$0c, $09, $fb, $02, $ff, $02, $09, $f7, $13, $f0, $06, $00, $09, $f8, $07, $00
21db6     00 00 04 0B 
21dba     E8 1C F9 FF 
21dbe     01 0D F1 0E 
21dc2     FA 03 03 06 | 	byte	$00, $00, $04, $0b, $e8, $1c, $f9, $ff, $01, $0d, $f1, $0e, $fa, $03, $03, $06
21dc6     FB 05 03 FB 
21dca     0B 02 F4 0F 
21dce     01 F6 12 FB 
21dd2     01 06 F6 0E | 	byte	$fb, $05, $03, $fb, $0b, $02, $f4, $0f, $01, $f6, $12, $fb, $01, $06, $f6, $0e
21dd6     F7 0B FF F3 
21dda     18 F4 04 01 
21dde     04 F6 1B E9 
21de2     0F F4 14 F6 | 	byte	$f7, $0b, $ff, $f3, $18, $f4, $04, $01, $04, $f6, $1b, $e9, $0f, $f4, $14, $f6
21de6     0E F1 0D 02 
21dea     FE 09 FA 04 
21dee     04 00 05 FA 
21df2     03 07 01 F7 | 	byte	$0e, $f1, $0d, $02, $fe, $09, $fa, $04, $04, $00, $05, $fa, $03, $07, $01, $f7
21df6     0C FD 07 FC 
21dfa     05 03 FC 07 
21dfe     FD 03 03 01 
21e02     FA 0F FF FB | 	byte	$0c, $fd, $07, $fc, $05, $03, $fc, $07, $fd, $03, $03, $01, $fa, $0f, $ff, $fb
21e06     03 0C F5 11 
21e0a     F8 03 00 04 
21e0e     04 04 F8 0C 
21e12     F8 08 02 01 | 	byte	$03, $0c, $f5, $11, $f8, $03, $00, $04, $04, $04, $f8, $0c, $f8, $08, $02, $01
21e16     FF 03 FE 08 
21e1a     05 F2 0E 07 
21e1e     F0 0D FA 10 
21e22     F1 0B 01 FA | 	byte	$ff, $03, $fe, $08, $05, $f2, $0e, $07, $f0, $0d, $fa, $10, $f1, $0b, $01, $fa
21e26     07 07 FD FD 
21e2a     0C F9 05 01 
21e2e     08 FF 03 00 
21e32     F6 16 F8 01 | 	byte	$07, $07, $fd, $fd, $0c, $f9, $05, $01, $08, $ff, $03, $00, $f6, $16, $f8, $01
21e36     08 FE FB 11 
21e3a     F5 10 F3 07 
21e3e     FC 0A 02 FF 
21e42     FD 01 07 FE | 	byte	$08, $fe, $fb, $11, $f5, $10, $f3, $07, $fc, $0a, $02, $ff, $fd, $01, $07, $fe
21e46     07 F4 0F FC 
21e4a     03 FE 00 0A 
21e4e     FA FF 0E F3 
21e52     0B 0A F5 04 | 	byte	$07, $f4, $0f, $fc, $03, $fe, $00, $0a, $fa, $ff, $0e, $f3, $0b, $0a, $f5, $04
21e56     04 06 02 FA 
21e5a     12 F2 0B FC 
21e5e     09 F6 07 01 
21e62     03 FE 0D EE | 	byte	$04, $06, $02, $fa, $12, $f2, $0b, $fc, $09, $f6, $07, $01, $03, $fe, $0d, $ee
21e66     13 F0 15 FB 
21e6a     FA 00 0E F9 
21e6e     03 06 FE 01 
21e72     FE 0D F4 0C | 	byte	$13, $f0, $15, $fb, $fa, $00, $0e, $f9, $03, $06, $fe, $01, $fe, $0d, $f4, $0c
21e76     FE FE 07 01 
21e7a     06 F5 0F FD 
21e7e     FC 0D FC 01 
21e82     06 FF FC 0E | 	byte	$fe, $fe, $07, $01, $06, $f5, $0f, $fd, $fc, $0d, $fc, $01, $06, $ff, $fc, $0e
21e86     F2 17 E6 13 
21e8a     01 FC 08 F8 
21e8e     07 FE 09 FF 
21e92     00 FE FE 0B | 	byte	$f2, $17, $e6, $13, $01, $fc, $08, $f8, $07, $fe, $09, $ff, $00, $fe, $fe, $0b
21e96     02 F7 0C FE 
21e9a     07 FF FC 08 
21e9e     08 F5 0B FE 
21ea2     0A F4 07 06 | 	byte	$02, $f7, $0c, $fe, $07, $ff, $fc, $08, $08, $f5, $0b, $fe, $0a, $f4, $07, $06
21ea6     FB 02 04 FF 
21eaa     FA 09 0B F0 
21eae     07 02 06 F6 
21eb2     10 FC FB 0A | 	byte	$fb, $02, $04, $ff, $fa, $09, $0b, $f0, $07, $02, $06, $f6, $10, $fc, $fb, $0a
21eb6     FE 01 FE 10 
21eba     EF 12 F6 0A 
21ebe     FC 07 FD 03 
21ec2     08 FA 04 07 | 	byte	$fe, $01, $fe, $10, $ef, $12, $f6, $0a, $fc, $07, $fd, $03, $08, $fa, $04, $07
21ec6     F4 0A 03 07 
21eca     F8 00 00 0F 
21ece     F5 06 FD 0B 
21ed2     F8 0B F7 06 | 	byte	$f4, $0a, $03, $07, $f8, $00, $00, $0f, $f5, $06, $fd, $0b, $f8, $0b, $f7, $06
21ed6     03 01 FF 00 
21eda     02 08 FB 00 
21ede     0B F4 0C 01 
21ee2     F8 07 0C F2 | 	byte	$03, $01, $ff, $00, $02, $08, $fb, $00, $0b, $f4, $0c, $01, $f8, $07, $0c, $f2
21ee6     0F F9 06 00 
21eea     04 01 00 FF 
21eee     07 FE 06 FC 
21ef2     03 07 FD FC | 	byte	$0f, $f9, $06, $00, $04, $01, $00, $ff, $07, $fe, $06, $fc, $03, $07, $fd, $fc
21ef6     0C FF F8 0A 
21efa     07 F9 00 08 
21efe     FA 09 0A EF 
21f02     0D 00 03 01 | 	byte	$0c, $ff, $f8, $0a, $07, $f9, $00, $08, $fa, $09, $0a, $ef, $0d, $00, $03, $01
21f06     FC 0B FF FE 
21f0a     FE 0A FE 03 
21f0e     01 FF 0C F8 
21f12     07 FF 00 07 | 	byte	$fc, $0b, $ff, $fe, $fe, $0a, $fe, $03, $01, $ff, $0c, $f8, $07, $ff, $00, $07
21f16     00 FF 07 FE 
21f1a     FE 0E F6 07 
21f1e     FE 0A FC FA 
21f22     13 FF F2 0D | 	byte	$00, $ff, $07, $fe, $fe, $0e, $f6, $07, $fe, $0a, $fc, $fa, $13, $ff, $f2, $0d
21f26     06 F6 0E FA 
21f2a     02 FD 0E FF 
21f2e     F6 0F F8 08 
21f32     FE 08 FC FC | 	byte	$06, $f6, $0e, $fa, $02, $fd, $0e, $ff, $f6, $0f, $f8, $08, $fe, $08, $fc, $fc
21f36     0D FE FC 09 
21f3a     01 00 00 02 
21f3e     FF 07 FC 0C 
21f42     FB 03 FE 03 | 	byte	$0d, $fe, $fc, $09, $01, $00, $00, $02, $ff, $07, $fc, $0c, $fb, $03, $fe, $03
21f46     08 FA FE 0F 
21f4a     FD FE FF 07 
21f4e     01 07 FA 01 
21f52     0D F3 09 02 | 	byte	$08, $fa, $fe, $0f, $fd, $fe, $ff, $07, $01, $07, $fa, $01, $0d, $f3, $09, $02
21f56     00 FC 06 0D 
21f5a     EE 14 FD F8 
21f5e     0C 01 FE 02 
21f62     03 FF 02 09 | 	byte	$00, $fc, $06, $0d, $ee, $14, $fd, $f8, $0c, $01, $fe, $02, $03, $ff, $02, $09
21f66     F9 03 06 FA 
21f6a     08 FE 09 F8 
21f6e     09 F8 08 01 
21f72     FD 08 FD 00 | 	byte	$f9, $03, $06, $fa, $08, $fe, $09, $f8, $09, $f8, $08, $01, $fd, $08, $fd, $00
21f76     04 FE 08 FA 
21f7a     06 05 FE 06 
21f7e     FF 08 F4 11 
21f82     F9 FF 10 F0 | 	byte	$04, $fe, $08, $fa, $06, $05, $fe, $06, $ff, $08, $f4, $11, $f9, $ff, $10, $f0
21f86     04 06 09 F7 
21f8a     FE 0D FC 05 
21f8e     FB 08 00 07 
21f92     F8 07 01 00 | 	byte	$04, $06, $09, $f7, $fe, $0d, $fc, $05, $fb, $08, $00, $07, $f8, $07, $01, $00
21f96     05 FC 07 FC 
21f9a     06 FB 0C FB 
21f9e     02 FE 09 00 
21fa2     FC 06 02 01 | 	byte	$05, $fc, $07, $fc, $06, $fb, $0c, $fb, $02, $fe, $09, $00, $fc, $06, $02, $01
21fa6     00 09 F5 0B 
21faa     05 F3 11 FB 
21fae     0A F8 07 00 
21fb2     04 01 00 04 | 	byte	$00, $09, $f5, $0b, $05, $f3, $11, $fb, $0a, $f8, $07, $00, $04, $01, $00, $04
21fb6     FF 02 03 F9 
21fba     12 F8 03 FC 
21fbe     08 03 FF 06 
21fc2     F3 13 F4 0D | 	byte	$ff, $02, $03, $f9, $12, $f8, $03, $fc, $08, $03, $ff, $06, $f3, $13, $f4, $0d
21fc6     F7 0C FA 07 
21fca     FC 06 FB 0B 
21fce     F9 0F F7 02 
21fd2     02 06 FD 07 | 	byte	$f7, $0c, $fa, $07, $fc, $06, $fb, $0b, $f9, $0f, $f7, $02, $02, $06, $fd, $07
21fd6     F8 08 03 08 
21fda     F3 0B 00 03 
21fde     FB 09 FB 08 
21fe2     FA 07 FF 02 | 	byte	$f8, $08, $03, $08, $f3, $0b, $00, $03, $fb, $09, $fb, $08, $fa, $07, $ff, $02
21fe6     00 04 FA 0B 
21fea     FC 02 05 01 
21fee     FC 0B F9 0C 
21ff2     F4 0E F4 0B | 	byte	$00, $04, $fa, $0b, $fc, $02, $05, $01, $fc, $0b, $f9, $0c, $f4, $0e, $f4, $0b
21ff6     01 F9 08 FF 
21ffa     09 F6 09 FF 
21ffe     03 FD 06 03 
22002     04 F9 08 FC | 	byte	$01, $f9, $08, $ff, $09, $f6, $09, $ff, $03, $fd, $06, $03, $04, $f9, $08, $fc
22006     0A FC FF 0A 
2200a     F7 08 FF 05 
2200e     02 FE 04 FD 
22012     0C FA F8 0D | 	byte	$0a, $fc, $ff, $0a, $f7, $08, $ff, $05, $02, $fe, $04, $fd, $0c, $fa, $f8, $0d
22016     06 F9 0C FA 
2201a     02 0A FA 04 
2201e     02 07 FC FC 
22022     0C FF FF 04 | 	byte	$06, $f9, $0c, $fa, $02, $0a, $fa, $04, $02, $07, $fc, $fc, $0c, $ff, $ff, $04
22026     01 FB 0F F7 
2202a     01 09 FD 03 
2202e     03 FE 06 FD 
22032     09 FB 02 04 | 	byte	$01, $fb, $0f, $f7, $01, $09, $fd, $03, $03, $fe, $06, $fd, $09, $fb, $02, $04
22036     FF 02 08 FD 
2203a     FB 16 F0 07 
2203e     FE 0C F8 07 
22042     FE 01 07 FD | 	byte	$ff, $02, $08, $fd, $fb, $16, $f0, $07, $fe, $0c, $f8, $07, $fe, $01, $07, $fd
22046     FE 09 03 FC 
2204a     03 05 03 FD 
2204e     01 05 03 FE 
22052     00 02 06 FC | 	byte	$fe, $09, $03, $fc, $03, $05, $03, $fd, $01, $05, $03, $fe, $00, $02, $06, $fc
22056     06 05 F5 11 
2205a     FA FF 01 0B 
2205e     F7 07 00 04 
22062     F8 0B FE FE | 	byte	$06, $05, $f5, $11, $fa, $ff, $01, $0b, $f7, $07, $00, $04, $f8, $0b, $fe, $fe
22066     06 02 FF 04 
2206a     03 FF 02 07 
2206e     FF FE 05 03 
22072     03 FC 06 03 | 	byte	$06, $02, $ff, $04, $03, $ff, $02, $07, $ff, $fe, $05, $03, $03, $fc, $06, $03
22076     FA 07 02 03 
2207a     FC 0A F7 04 
2207e     06 FD 02 01 
22082     03 FE 0B FB | 	byte	$fa, $07, $02, $03, $fc, $0a, $f7, $04, $06, $fd, $02, $01, $03, $fe, $0b, $fb
22086     FE 0F F4 09 
2208a     01 02 FA 07 
2208e     06 FC 04 01 
22092     FF 07 FB 0A | 	byte	$fe, $0f, $f4, $09, $01, $02, $fa, $07, $06, $fc, $04, $01, $ff, $07, $fb, $0a
22096     FB 02 08 FB 
2209a     08 FC FF 0B 
2209e     F9 03 08 FC 
220a2     03 03 02 FC | 	byte	$fb, $02, $08, $fb, $08, $fc, $ff, $0b, $f9, $03, $08, $fc, $03, $03, $02, $fc
220a6     0A FE 03 F9 
220aa     0F F9 01 05 
220ae     FD 06 03 FE 
220b2     00 0F F6 FE | 	byte	$0a, $fe, $03, $f9, $0f, $f9, $01, $05, $fd, $06, $03, $fe, $00, $0f, $f6, $fe
220b6     17 F0 08 03 
220ba     FC 03 06 FE 
220be     05 F6 12 F4 
220c2     09 FF FF 06 | 	byte	$17, $f0, $08, $03, $fc, $03, $06, $fe, $05, $f6, $12, $f4, $09, $ff, $ff, $06
220c6     FF 03 05 FA 
220ca     0A FC 07 FC 
220ce     06 06 FA 06 
220d2     FC 0A FB 08 | 	byte	$ff, $03, $05, $fa, $0a, $fc, $07, $fc, $06, $06, $fa, $06, $fc, $0a, $fb, $08
220d6     F9 08 FF 00 
220da     06 FC 03 06 
220de     00 01 00 06 
220e2     FF 03 FF 0A | 	byte	$f9, $08, $ff, $00, $06, $fc, $03, $06, $00, $01, $00, $06, $ff, $03, $ff, $0a
220e6     F7 07 03 FF 
220ea     FE 03 01 07 
220ee     F1 13 F8 03 
220f2     07 F8 07 04 | 	byte	$f7, $07, $03, $ff, $fe, $03, $01, $07, $f1, $13, $f8, $03, $07, $f8, $07, $04
220f6     FC 00 0A 00 
220fa     FC 0D F6 0A 
220fe     01 04 F8 0E 
22102     FD 01 FF 04 | 	byte	$fc, $00, $0a, $00, $fc, $0d, $f6, $0a, $01, $04, $f8, $0e, $fd, $01, $ff, $04
22106     FF 03 00 FC 
2210a     09 FF 03 FC 
2210e     09 F9 0B 01 
22112     FC 05 03 07 | 	byte	$ff, $03, $00, $fc, $09, $ff, $03, $fc, $09, $f9, $0b, $01, $fc, $05, $03, $07
22116     FB 01 08 FC 
2211a     03 03 FF 06 
2211e     00 FE 00 08 
22122     FD 00 05 FF | 	byte	$fb, $01, $08, $fc, $03, $03, $ff, $06, $00, $fe, $00, $08, $fd, $00, $05, $ff
22126     04 FE 00 08 
2212a     FD 03 06 FC 
2212e     06 02 03 FE 
22132     06 FF 04 03 | 	byte	$04, $fe, $00, $08, $fd, $03, $06, $fc, $06, $02, $03, $fe, $06, $ff, $04, $03
22136     FC 06 02 02 
2213a     FE 06 FC 07 
2213e     0A F0 0E FB 
22142     0B FA 04 02 | 	byte	$fc, $06, $02, $02, $fe, $06, $fc, $07, $0a, $f0, $0e, $fb, $0b, $fa, $04, $02
22146     01 04 FF FF 
2214a     03 09 F4 0D 
2214e     FC 02 03 00 
22152     FE 06 07 F7 | 	byte	$01, $04, $ff, $ff, $03, $09, $f4, $0d, $fc, $02, $03, $00, $fe, $06, $07, $f7
22156     09 01 00 00 
2215a     07 FE FF 0A 
2215e     FE FA 0F F5 
22162     07 00 01 04 | 	byte	$09, $01, $00, $00, $07, $fe, $ff, $0a, $fe, $fa, $0f, $f5, $07, $00, $01, $04
22166     00 01 02 01 
2216a     03 FF FD 11 
2216e     F0 07 0C F7 
22172     04 05 FE 05 | 	byte	$00, $01, $02, $01, $03, $ff, $fd, $11, $f0, $07, $0c, $f7, $04, $05, $fe, $05
22176     FF 06 FA 09 
2217a     01 FE 06 FC 
2217e     03 08 FB 05 
22182     FC 07 F8 0A | 	byte	$ff, $06, $fa, $09, $01, $fe, $06, $fc, $03, $08, $fb, $05, $fc, $07, $f8, $0a
22186     FF 06 F9 08 
2218a     02 FB 0B FB 
2218e     03 02 03 01 
22192     01 00 03 06 | 	byte	$ff, $06, $f9, $08, $02, $fb, $0b, $fb, $03, $02, $03, $01, $01, $00, $03, $06
22196     FF 01 FE 0A 
2219a     FF 00 03 00 
2219e     03 05 FC 05 
221a2     00 FF 0A F8 | 	byte	$ff, $01, $fe, $0a, $ff, $00, $03, $00, $03, $05, $fc, $05, $00, $ff, $0a, $f8
221a6     03 07 F9 0E 
221aa     F9 FF 07 00 
221ae     03 FE 04 00 
221b2     04 08 F7 03 | 	byte	$03, $07, $f9, $0e, $f9, $ff, $07, $00, $03, $fe, $04, $00, $04, $08, $f7, $03
221b6     07 FD 04 00 
221ba     03 03 02 FE 
221be     07 00 FD 06 
221c2     04 00 FD 03 | 	byte	$07, $fd, $04, $00, $03, $03, $02, $fe, $07, $00, $fd, $06, $04, $00, $fd, $03
221c6     06 FF 00 05 
221ca     FF 04 04 FE 
221ce     02 03 03 00 
221d2     03 FF 03 FC | 	byte	$06, $ff, $00, $05, $ff, $04, $04, $fe, $02, $03, $03, $00, $03, $ff, $03, $fc
221d6     0A F9 0B F7 
221da     09 01 02 00 
221de     04 FF 04 F9 
221e2     0D FB 03 06 | 	byte	$0a, $f9, $0b, $f7, $09, $01, $02, $00, $04, $ff, $04, $f9, $0d, $fb, $03, $06
221e6     FA 05 01 FF 
221ea     04 02 FB 0C 
221ee     F8 0C FC FF 
221f2     05 FF 07 FB | 	byte	$fa, $05, $01, $ff, $04, $02, $fb, $0c, $f8, $0c, $fc, $ff, $05, $ff, $07, $fb
221f6     06 03 01 FF 
221fa     04 03 FE 03 
221fe     03 FE 06 FE 
22202     03 FF 01 07 | 	byte	$06, $03, $01, $ff, $04, $03, $fe, $03, $03, $fe, $06, $fe, $03, $ff, $01, $07
22206     FD 06 03 FB 
2220a     0A FF FD 0D 
2220e     F4 0A 02 FF 
22212     04 02 FF FF | 	byte	$fd, $06, $03, $fb, $0a, $ff, $fd, $0d, $f4, $0a, $02, $ff, $04, $02, $ff, $ff
22216     08 FE 06 FA 
2221a     0C F7 0D 02 
2221e     FA 02 07 04 
22222     FD 02 01 04 | 	byte	$08, $fe, $06, $fa, $0c, $f7, $0d, $02, $fa, $02, $07, $04, $fd, $02, $01, $04
22226     04 FC 03 08 
2222a     F8 05 03 03 
2222e     FC 08 FE 06 
22232     FC 0A F8 0A | 	byte	$04, $fc, $03, $08, $f8, $05, $03, $03, $fc, $08, $fe, $06, $fc, $0a, $f8, $0a
22236     00 03 FE 09 
2223a     FE FE 07 FF 
2223e     FF 04 FF 02 
22242     01 01 00 02 | 	byte	$00, $03, $fe, $09, $fe, $fe, $07, $ff, $ff, $04, $ff, $02, $01, $01, $00, $02
22246     02 03 FF 07 
2224a     FE 00 07 FC 
2224e     08 FC 08 FB 
22252     07 03 FB 0C | 	byte	$02, $03, $ff, $07, $fe, $00, $07, $fc, $08, $fc, $08, $fb, $07, $03, $fb, $0c
22256     FC FC 0A FF 
2225a     01 FD 09 F7 
2225e     0E F7 08 FB 
22262     09 01 00 00 | 	byte	$fc, $fc, $0a, $ff, $01, $fd, $09, $f7, $0e, $f7, $08, $fb, $09, $01, $00, $00
22266     06 FC 05 05 
2226a     FF FD 0C FD 
2226e     FE 09 F5 0C 
22272     00 05 F8 06 | 	byte	$06, $fc, $05, $05, $ff, $fd, $0c, $fd, $fe, $09, $f5, $0c, $00, $05, $f8, $06
22276     08 FC 04 02 
2227a     FF 04 02 02 
2227e     03 02 FF 02 
22282     04 03 F9 0A | 	byte	$08, $fc, $04, $02, $ff, $04, $02, $02, $03, $02, $ff, $02, $04, $03, $f9, $0a
22286     F9 0B FC 01 
2228a     FD 09 FE 03 
2228e     FC 0C FC FD 
22292     0B FE 00 06 | 	byte	$f9, $0b, $fc, $01, $fd, $09, $fe, $03, $fc, $0c, $fc, $fd, $0b, $fe, $00, $06
22296     01 03 FC 0A 
2229a     FB 05 04 FB 
2229e     05 01 02 01 
222a2     FD 06 FD 0A | 	byte	$01, $03, $fc, $0a, $fb, $05, $04, $fb, $05, $01, $02, $01, $fd, $06, $fd, $0a
222a6     FB FE 07 05 
222aa     F8 0D F8 06 
222ae     04 00 01 00 
222b2     05 FF FF 0A | 	byte	$fb, $fe, $07, $05, $f8, $0d, $f8, $06, $04, $00, $01, $00, $05, $ff, $ff, $0a
222b6     FA 03 07 F8 
222ba     07 00 FF 08 
222be     F9 0A FB 07 
222c2     02 FD 0A FA | 	byte	$fa, $03, $07, $f8, $07, $00, $ff, $08, $f9, $0a, $fb, $07, $02, $fd, $0a, $fa
222c6     03 09 FC 03 
222ca     03 01 FC 08 
222ce     FF FF 02 02 
222d2     06 FB 06 FC | 	byte	$03, $09, $fc, $03, $03, $01, $fc, $08, $ff, $ff, $02, $02, $06, $fb, $06, $fc
222d6     0B FC 04 FF 
222da     03 03 02 FC 
222de     07 03 FE 01 
222e2     06 FC 04 04 | 	byte	$0b, $fc, $04, $ff, $03, $03, $02, $fc, $07, $03, $fe, $01, $06, $fc, $04, $04
222e6     FC 05 FE 07 
222ea     FB 04 06 FC 
222ee     04 03 FE 06 
222f2     FF 0B F7 09 | 	byte	$fc, $05, $fe, $07, $fb, $04, $06, $fc, $04, $03, $fe, $06, $ff, $0b, $f7, $09
222f6     FF 05 FF 06 
222fa     FD 02 01 03 
222fe     FE 00 07 FD 
22302     FF FF 06 06 | 	byte	$ff, $05, $ff, $06, $fd, $02, $01, $03, $fe, $00, $07, $fd, $ff, $ff, $06, $06
22306     F7 09 FC 07 
2230a     FE 03 FE 09 
2230e     FE 03 03 FE 
22312     05 05 FF 00 | 	byte	$f7, $09, $fc, $07, $fe, $03, $fe, $09, $fe, $03, $03, $fe, $05, $05, $ff, $00
22316     05 00 04 00 
2231a     01 03 03 FE 
2231e     04 03 01 02 
22322     02 04 01 FE | 	byte	$05, $00, $04, $00, $01, $03, $03, $fe, $04, $03, $01, $02, $02, $04, $01, $fe
22326     08 FB 02 06 
2232a     FE 00 07 01 
2232e     FB 0B F8 0B 
22332     03 FC 03 05 | 	byte	$08, $fb, $02, $06, $fe, $00, $07, $01, $fb, $0b, $f8, $0b, $03, $fc, $03, $05
22336     FF 00 0A FA 
2233a     03 02 04 01 
2233e     FE 07 FD 03 
22342     05 FD 02 05 | 	byte	$ff, $00, $0a, $fa, $03, $02, $04, $01, $fe, $07, $fd, $03, $05, $fd, $02, $05
22346     FC 07 FC 03 
2234a     03 03 FD 01 
2234e     08 FF 00 03 
22352     02 03 FE 05 | 	byte	$fc, $07, $fc, $03, $03, $03, $fd, $01, $08, $ff, $00, $03, $02, $03, $fe, $05
22356     02 02 05 FD 
2235a     00 07 01 01 
2235e     03 FD 07 FF 
22362     03 FE 03 05 | 	byte	$02, $02, $05, $fd, $00, $07, $01, $01, $03, $fd, $07, $ff, $03, $fe, $03, $05
22366     FC FF 07 FF 
2236a     00 03 01 FD 
2236e     08 03 FB 05 
22372     00 04 00 02 | 	byte	$fc, $ff, $07, $ff, $00, $03, $01, $fd, $08, $03, $fb, $05, $00, $04, $00, $02
22376     02 03 02 FF 
2237a     03 03 01 04 
2237e     FD 06 00 03 
22382     02 FE 07 00 | 	byte	$02, $03, $02, $ff, $03, $03, $01, $04, $fd, $06, $00, $03, $02, $fe, $07, $00
22386     FC 03 05 FB 
2238a     06 06 F7 09 
2238e     00 FF 06 00 
22392     FF 03 03 01 | 	byte	$fc, $03, $05, $fb, $06, $06, $f7, $09, $00, $ff, $06, $00, $ff, $03, $03, $01
22396     FF 05 01 01 
2239a     03 02 01 03 
2239e     02 01 03 03 
223a2     02 02 00 03 | 	byte	$ff, $05, $01, $01, $03, $02, $01, $03, $02, $01, $03, $03, $02, $02, $00, $03
223a6     FF 05 00 01 
223aa     04 FE 01 04 
223ae     01 02 FE 03 
223b2     01 03 02 02 | 	byte	$ff, $05, $00, $01, $04, $fe, $01, $04, $01, $02, $fe, $03, $01, $03, $02, $02
223b6     FF 02 03 05 
223ba     FC 04 04 FE 
223be     06 FF 01 02 
223c2     06 F8 0B FE | 	byte	$ff, $02, $03, $05, $fc, $04, $04, $fe, $06, $ff, $01, $02, $06, $f8, $0b, $fe
223c6     FF 07 F8 08 
223ca     FE 06 FC 05 
223ce     03 FC 08 FD 
223d2     04 FF 06 FC | 	byte	$ff, $07, $f8, $08, $fe, $06, $fc, $05, $03, $fc, $08, $fd, $04, $ff, $06, $fc
223d6     05 02 00 01 
223da     00 06 FD 03 
223de     04 FE 06 FD 
223e2     03 03 00 FF | 	byte	$05, $02, $00, $01, $00, $06, $fd, $03, $04, $fe, $06, $fd, $03, $03, $00, $ff
223e6     04 02 01 04 
223ea     FE 00 0B FB 
223ee     01 05 FF 02 
223f2     01 03 FE 03 | 	byte	$04, $02, $01, $04, $fe, $00, $0b, $fb, $01, $05, $ff, $02, $01, $03, $fe, $03
223f6     03 FC 06 02 
223fa     FD 06 00 04 
223fe     FF 02 01 03 
22402     04 FE 01 07 | 	byte	$03, $fc, $06, $02, $fd, $06, $00, $04, $ff, $02, $01, $03, $04, $fe, $01, $07
22406     FD 03 03 FE 
2240a     03 03 FE 03 
2240e     03 03 FF 05 
22412     00 00 05 01 | 	byte	$fd, $03, $03, $fe, $03, $03, $fe, $03, $03, $03, $ff, $05, $00, $00, $05, $01
22416     FE 06 00 05 
2241a     FF 02 00 03 
2241e     03 00 01 02 
22422     FF 02 03 01 | 	byte	$fe, $06, $00, $05, $ff, $02, $00, $03, $03, $00, $01, $02, $ff, $02, $03, $01
22426     FF 01 05 FF 
2242a     03 00 02 04 
2242e     04 02 FC 07 
22432     04 FD 01 03 | 	byte	$ff, $01, $05, $ff, $03, $00, $02, $04, $04, $02, $fc, $07, $04, $fd, $01, $03
22436     04 01 FF 01 
2243a     06 FF 03 FE 
2243e     04 01 FE 07 
22442     00 FE 04 03 | 	byte	$04, $01, $ff, $01, $06, $ff, $03, $fe, $04, $01, $fe, $07, $00, $fe, $04, $03
22446     FC 08 00 FE 
2244a     04 06 FC 05 
2244e     02 01 01 01 
22452     02 02 02 FE | 	byte	$fc, $08, $00, $fe, $04, $06, $fc, $05, $02, $01, $01, $01, $02, $02, $02, $fe
22456     04 FF 02 03 
2245a     03 03 FE 04 
2245e     02 04 FE 06 
22462     FC 06 02 FF | 	byte	$04, $ff, $02, $03, $03, $03, $fe, $04, $02, $04, $fe, $06, $fc, $06, $02, $ff
22466     FF 07 FD 01 
2246a     06 FD 05 FE 
2246e     04 FF 05 00 
22472     02 01 05 FE | 	byte	$ff, $07, $fd, $01, $06, $fd, $05, $fe, $04, $ff, $05, $00, $02, $01, $05, $fe
22476     04 01 06 FE 
2247a     03 01 03 FE 
2247e     04 00 00 03 
22482     01 FE 07 FE | 	byte	$04, $01, $06, $fe, $03, $01, $03, $fe, $04, $00, $00, $03, $01, $fe, $07, $fe
22486     02 02 02 00 
2248a     05 FE 03 02 
2248e     01 00 02 03 
22492     00 03 FF 05 | 	byte	$02, $02, $02, $00, $05, $fe, $03, $02, $01, $00, $02, $03, $00, $03, $ff, $05
22496     FF 04 02 FF 
2249a     03 04 FC 06 
2249e     FF 03 03 FE 
224a2     00 05 02 00 | 	byte	$ff, $04, $02, $ff, $03, $04, $fc, $06, $ff, $03, $03, $fe, $00, $05, $02, $00
224a6     02 03 03 FF 
224aa     03 01 02 02 
224ae     FE 05 FF 03 
224b2     FE 04 00 02 | 	byte	$02, $03, $03, $ff, $03, $01, $02, $02, $fe, $05, $ff, $03, $fe, $04, $00, $02
224b6     00 03 02 01 
224ba     04 FD 09 FD 
224be     03 00 03 01 
224c2     04 FF 01 07 | 	byte	$00, $03, $02, $01, $04, $fd, $09, $fd, $03, $00, $03, $01, $04, $ff, $01, $07
224c6     00 FE 07 FC 
224ca     04 01 03 01 
224ce     00 03 02 01 
224d2     04 00 01 03 | 	byte	$00, $fe, $07, $fc, $04, $01, $03, $01, $00, $03, $02, $01, $04, $00, $01, $03
224d6     02 02 02 00 
224da     03 02 01 FF 
224de     03 01 03 00 
224e2     03 01 02 02 | 	byte	$02, $02, $02, $00, $03, $02, $01, $ff, $03, $01, $03, $00, $03, $01, $02, $02
224e6     01 02 03 FE 
224ea     05 FF 02 03 
224ee     02 00 01 03 
224f2     03 FF 03 FF | 	byte	$01, $02, $03, $fe, $05, $ff, $02, $03, $02, $00, $01, $03, $03, $ff, $03, $ff
224f6     07 FD 04 00 
224fa     02 02 03 FE 
224fe     03 01 02 01 
22502     05 FD 05 02 | 	byte	$07, $fd, $04, $00, $02, $02, $03, $fe, $03, $01, $02, $01, $05, $fd, $05, $02
22506     FE 04 01 00 
2250a     03 03 FF 02 
2250e     03 00 06 FE 
22512     02 00 05 01 | 	byte	$fe, $04, $01, $00, $03, $03, $ff, $02, $03, $00, $06, $fe, $02, $00, $05, $01
22516     00 03 00 04 
2251a     FE 06 00 00 
2251e     05 FD 04 02 
22522     02 00 05 01 | 	byte	$00, $03, $00, $04, $fe, $06, $00, $00, $05, $fd, $04, $02, $02, $00, $05, $01
22526     00 05 00 01 
2252a     03 01 02 02 
2252e     04 FE 04 01 
22532     02 00 04 FE | 	byte	$00, $05, $00, $01, $03, $01, $02, $02, $04, $fe, $04, $01, $02, $00, $04, $fe
22536     04 00 02 01 
2253a     03 00 03 01 
2253e     03 FF 04 01 
22542     02 02 03 FF | 	byte	$04, $00, $02, $01, $03, $00, $03, $01, $03, $ff, $04, $01, $02, $02, $03, $ff
22546     04 00 02 02 
2254a     01 01 01 06 
2254e     FE FF 08 FD 
22552     03 01 02 03 | 	byte	$04, $00, $02, $02, $01, $01, $01, $06, $fe, $ff, $08, $fd, $03, $01, $02, $03
22556     00 01 02 03 
2255a     02 01 00 03 
2255e     04 FE 03 01 
22562     FF 06 FF 00 | 	byte	$00, $01, $02, $03, $02, $01, $00, $03, $04, $fe, $03, $01, $ff, $06, $ff, $00
22566     05 01 00 02 
2256a     03 00 04 FF 
2256e     02 02 03 01 
22572     02 00 03 02 | 	byte	$05, $01, $00, $02, $03, $00, $04, $ff, $02, $02, $03, $01, $02, $00, $03, $02
22576     FF 04 02 FE 
2257a     07 FD 03 01 
2257e     03 01 00 02 
22582     03 01 01 02 | 	byte	$ff, $04, $02, $fe, $07, $fd, $03, $01, $03, $01, $00, $02, $03, $01, $01, $02
22586     03 FE 05 00 
2258a     02 02 00 02 
2258e     03 01 02 01 
22592     00 05 00 01 | 	byte	$03, $fe, $05, $00, $02, $02, $00, $02, $03, $01, $02, $01, $00, $05, $00, $01
22596     05 FE 03 03 
2259a     FF 05 FF 03 
2259e     00 06 FE 03 
225a2     00 03 01 03 | 	byte	$05, $fe, $03, $03, $ff, $05, $ff, $03, $00, $06, $fe, $03, $00, $03, $01, $03
225a6     00 03 01 01 
225aa     00 04 02 FF 
225ae     03 00 03 03 
225b2     00 03 FF 02 | 	byte	$00, $03, $01, $01, $00, $04, $02, $ff, $03, $00, $03, $03, $00, $03, $ff, $02
225b6     03 FF 07 FF 
225ba     FE 04 04 FF 
225be     05 00 FF 04 
225c2     01 02 02 02 | 	byte	$03, $ff, $07, $ff, $fe, $04, $04, $ff, $05, $00, $ff, $04, $01, $02, $02, $02
225c6     00 02 03 FF 
225ca     04 FF 02 01 
225ce     02 03 02 03 
225d2     FE 04 FF 03 | 	byte	$00, $02, $03, $ff, $04, $ff, $02, $01, $02, $03, $02, $03, $fe, $04, $ff, $03
225d6     03 FD 03 03 
225da     00 03 00 02 
225de     01 03 00 02 
225e2     03 FE 06 00 | 	byte	$03, $fd, $03, $03, $00, $03, $00, $02, $01, $03, $00, $02, $03, $fe, $06, $00
225e6     00 06 FF 02 
225ea     03 01 00 03 
225ee     02 00 03 03 
225f2     FF 03 02 02 | 	byte	$00, $06, $ff, $02, $03, $01, $00, $03, $02, $00, $03, $03, $ff, $03, $02, $02
225f6     FF 06 00 01 
225fa     03 01 01 03 
225fe     01 FF 03 03 
22602     FE 06 FD 03 | 	byte	$ff, $06, $00, $01, $03, $01, $01, $03, $01, $ff, $03, $03, $fe, $06, $fd, $03
22606     03 02 00 01 
2260a     03 00 03 01 
2260e     01 04 FF 02 
22612     01 03 01 02 | 	byte	$03, $02, $00, $01, $03, $00, $03, $01, $01, $04, $ff, $02, $01, $03, $01, $02
22616     01 03 FF 03 
2261a     03 00 01 03 
2261e     FF 03 01 01 
22622     02 03 FF 03 | 	byte	$01, $03, $ff, $03, $03, $00, $01, $03, $ff, $03, $01, $01, $02, $03, $ff, $03
22626     02 02 FF 05 
2262a     01 03 01 02 
2262e     FF 07 FF 00 
22632     04 01 03 00 | 	byte	$02, $02, $ff, $05, $01, $03, $01, $02, $ff, $07, $ff, $00, $04, $01, $03, $00
22636     03 01 01 04 
2263a     FE 03 02 02 
2263e     00 02 05 FF 
22642     03 02 01 03 | 	byte	$03, $01, $01, $04, $fe, $03, $02, $02, $00, $02, $05, $ff, $03, $02, $01, $03
22646     02 FF 03 03 
2264a     02 00 04 01 
2264e     01 01 02 02 
22652     01 02 01 02 | 	byte	$02, $ff, $03, $03, $02, $00, $04, $01, $01, $01, $02, $02, $01, $02, $01, $02
22656     03 01 FF 04 
2265a     00 01 06 FC 
2265e     04 01 02 01 
22662     02 01 02 00 | 	byte	$03, $01, $ff, $04, $00, $01, $06, $fc, $04, $01, $02, $01, $02, $01, $02, $00
22666     05 FD 03 03 
2266a     FE 06 FF 03 
2266e     02 01 00 04 
22672     01 03 01 03 | 	byte	$05, $fd, $03, $03, $fe, $06, $ff, $03, $02, $01, $00, $04, $01, $03, $01, $03
22676     00 01 05 FF 
2267a     00 02 03 00 
2267e     01 03 FF 02 
22682     06 F9 09 00 | 	byte	$00, $01, $05, $ff, $00, $02, $03, $00, $01, $03, $ff, $02, $06, $f9, $09, $00
22686     00 01 03 00 
2268a     03 03 FE 06 
2268e     00 00 05 00 
22692     02 02 01 03 | 	byte	$00, $01, $03, $00, $03, $03, $fe, $06, $00, $00, $05, $00, $02, $02, $01, $03
22696     FF 03 00 03 
2269a     02 00 04 00 
2269e     02 01 00 03 
226a2     00 02 02 02 | 	byte	$ff, $03, $00, $03, $02, $00, $04, $00, $02, $01, $00, $03, $00, $02, $02, $02
226a6     FF 07 FE 03 
226aa     03 FF 03 00 
226ae     06 FF 01 03 
226b2     00 03 FF 05 | 	byte	$ff, $07, $fe, $03, $03, $ff, $03, $00, $06, $ff, $01, $03, $00, $03, $ff, $05
226b6     00 02 04 FD 
226ba     06 02 FF 07 
226be     FC 06 FF 03 
226c2     00 02 03 FF | 	byte	$00, $02, $04, $fd, $06, $02, $ff, $07, $fc, $06, $ff, $03, $00, $02, $03, $ff
226c6     03 01 02 00 
226ca     05 FD 06 00 
226ce     03 00 03 00 
226d2     05 FE 05 FE | 	byte	$03, $01, $02, $00, $05, $fd, $06, $00, $03, $00, $03, $00, $05, $fe, $05, $fe
226d6     06 FF 02 00 
226da     03 03 00 03 
226de     00 01 04 FD 
226e2     06 FF 03 01 | 	byte	$06, $ff, $02, $00, $03, $03, $00, $03, $00, $01, $04, $fd, $06, $ff, $03, $01
226e6     02 02 00 03 
226ea     02 FF 04 00 
226ee     03 02 02 01 
226f2     02 02 01 01 | 	byte	$02, $02, $00, $03, $02, $ff, $04, $00, $03, $02, $02, $01, $02, $02, $01, $01
226f6     03 FF 03 02 
226fa     02 FF 05 01 
226fe     00 05 FD 04 
22702     03 01 00 03 | 	byte	$03, $ff, $03, $02, $02, $ff, $05, $01, $00, $05, $fd, $04, $03, $01, $00, $03
22706     00 02 02 00 
2270a     03 00 03 01 
2270e     01 03 00 03 
22712     01 02 02 FE | 	byte	$00, $02, $02, $00, $03, $00, $03, $01, $01, $03, $00, $03, $01, $02, $02, $fe
22716     06 FF 03 03 
2271a     01 02 05 FE 
2271e     03 02 03 00 
22722     03 02 02 00 | 	byte	$06, $ff, $03, $03, $01, $02, $05, $fe, $03, $02, $03, $00, $03, $02, $02, $00
22726     03 01 FF 06 
2272a     FE 04 00 03 
2272e     02 01 01 03 
22732     03 01 00 05 | 	byte	$03, $01, $ff, $06, $fe, $04, $00, $03, $02, $01, $01, $03, $03, $01, $00, $05
22736     00 03 02 01 
2273a     00 04 01 00 
2273e     01 06 00 00 
22742     03 00 01 05 | 	byte	$00, $03, $02, $01, $00, $04, $01, $00, $01, $06, $00, $00, $03, $00, $01, $05
22746     FF 01 03 02 
2274a     01 01 02 02 
2274e     02 01 01 03 
22752     00 03 00 03 | 	byte	$ff, $01, $03, $02, $01, $01, $02, $02, $02, $01, $01, $03, $00, $03, $00, $03
22756     02 01 03 FF 
2275a     04 03 FF 03 
2275e     03 FF 04 FF 
22762     04 01 03 00 | 	byte	$02, $01, $03, $ff, $04, $03, $ff, $03, $03, $ff, $04, $ff, $04, $01, $03, $00
22766     00 06 FF 00 
2276a     06 FF 02 02 
2276e     01 02 03 FF 
22772     01 04 01 03 | 	byte	$00, $06, $ff, $00, $06, $ff, $02, $02, $01, $02, $03, $ff, $01, $04, $01, $03
22776     FF 05 00 02 
2277a     02 00 03 01 
2277e     01 00 03 01 
22782     00 03 02 01 | 	byte	$ff, $05, $00, $02, $02, $00, $03, $01, $01, $00, $03, $01, $00, $03, $02, $01
22786     01 02 04 FF 
2278a     04 FE 05 FF 
2278e     02 02 01 02 
22792     01 02 02 00 | 	byte	$01, $02, $04, $ff, $04, $fe, $05, $ff, $02, $02, $01, $02, $01, $02, $02, $00
22796     03 01 01 03 
2279a     00 03 FF 04 
2279e     01 00 03 02 
227a2     01 FF 06 FF | 	byte	$03, $01, $01, $03, $00, $03, $ff, $04, $01, $00, $03, $02, $01, $ff, $06, $ff
227a6     03 02 00 03 
227aa     00 00 00 00 
227ae     FA F7 07 28 
227b2     28 10 03 F1 | 	byte	$03, $02, $00, $03, $00, $00, $00, $00, $fa, $f7, $07, $28, $28, $10, $03, $f1
227b6     F7 EB ED F6 
227ba     FD F1 F1 03 
227be     FC 22 1B 00 
227c2     E8 EB 12 0F | 	byte	$f7, $eb, $ed, $f6, $fd, $f1, $f1, $03, $fc, $22, $1b, $00, $e8, $eb, $12, $0f
227c6     00 07 00 FC 
227ca     01 FA FD 1B 
227ce     45 31 6A 7C 
227d2     75 69 03 61 | 	byte	$00, $07, $00, $fc, $01, $fa, $fd, $1b, $45, $31, $6a, $7c, $75, $69, $03, $61
227d6     79 63 57 43 
227da     2D 3F 1F 18 
227de     57 03 34 09 
227e2     12 C7 FF C4 | 	byte	$79, $63, $57, $43, $2d, $3f, $1f, $18, $57, $03, $34, $09, $12, $c7, $ff, $c4
227e6     D9 A6 06 45 
227ea     AF C0 F1 E4 
227ee     F1 DC 93 8D 
227f2     C7 34 ED B4 | 	byte	$d9, $a6, $06, $45, $af, $c0, $f1, $e4, $f1, $dc, $93, $8d, $c7, $34, $ed, $b4
227f6     97 22 0F FC 
227fa     2E 33 1F 88 
227fe     E8 72 7F 18 
22802     5B 51 2B 40 | 	byte	$97, $22, $0f, $fc, $2e, $33, $1f, $88, $e8, $72, $7f, $18, $5b, $51, $2b, $40
22806     3A F1 80 80 
2280a     00 A9 80 94 
2280e     82 0A 0C 19 
22812     D2 C0 27 10 | 	byte	$3a, $f1, $80, $80, $00, $a9, $80, $94, $82, $0a, $0c, $19, $d2, $c0, $27, $10
22816     B8 80 B1 9C 
2281a     80 80 CF F0 
2281e     D8 E5 99 B8 
22822     2A 01 E7 DF | 	byte	$b8, $80, $b1, $9c, $80, $80, $cf, $f0, $d8, $e5, $99, $b8, $2a, $01, $e7, $df
22826     3F 60 18 01 
2282a     ED EE 06 0C 
2282e     3C D3 FF 09 
22832     21 C9 F9 19 | 	byte	$3f, $60, $18, $01, $ed, $ee, $06, $0c, $3c, $d3, $ff, $09, $21, $c9, $f9, $19
22836     00 18 4C 0F 
2283a     F7 EA FD FD 
2283e     18 60 43 24 
22842     F7 7F 55 51 | 	byte	$00, $18, $4c, $0f, $f7, $ea, $fd, $fd, $18, $60, $43, $24, $f7, $7f, $55, $51
22846     F3 09 EB 03 
2284a     F9 45 21 0A 
2284e     49 1E 0A 5E 
22852     7F 3F 48 DF | 	byte	$f3, $09, $eb, $03, $f9, $45, $21, $0a, $49, $1e, $0a, $5e, $7f, $3f, $48, $df
22856     27 7F 37 22 
2285a     1F 40 19 5A 
2285e     24 6A 4B 33 
22862     33 43 1B DB | 	byte	$27, $7f, $37, $22, $1f, $40, $19, $5a, $24, $6a, $4b, $33, $33, $43, $1b, $db
22866     F9 01 D9 D0 
2286a     F9 BD B4 F4 
2286e     16 E8 E1 B1 
22872     C9 EA B7 DF | 	byte	$f9, $01, $d9, $d0, $f9, $bd, $b4, $f4, $16, $e8, $e1, $b1, $c9, $ea, $b7, $df
22876     15 B8 A3 FF 
2287a     D6 C7 8B A9 
2287e     C4 C7 C7 AF 
22882     B5 D3 EE E5 | 	byte	$15, $b8, $a3, $ff, $d6, $c7, $8b, $a9, $c4, $c7, $c7, $af, $b5, $d3, $ee, $e5
22886     D9 2D 10 CF 
2288a     B5 13 09 93 
2288e     BA 1B B8 C0 
22892     A6 B8 F7 13 | 	byte	$d9, $2d, $10, $cf, $b5, $13, $09, $93, $ba, $1b, $b8, $c0, $a6, $b8, $f7, $13
22896     C0 BE A8 A3 
2289a     84 80 AF B7 
2289e     E7 DB F7 FA 
228a2     F9 E1 F7 07 | 	byte	$c0, $be, $a8, $a3, $84, $80, $af, $b7, $e7, $db, $f7, $fa, $f9, $e1, $f7, $07
228a6     F9 E1 ED 31 
228aa     13 03 24 3D 
228ae     21 33 51 49 
228b2     48 79 63 33 | 	byte	$f9, $e1, $ed, $31, $13, $03, $24, $3d, $21, $33, $51, $49, $48, $79, $63, $33
228b6     6F 58 31 36 
228ba     57 3A 5D 61 
228be     52 1C 2B 46 
228c2     6C 4F 67 60 | 	byte	$6f, $58, $31, $36, $57, $3a, $5d, $61, $52, $1c, $2b, $46, $6c, $4f, $67, $60
228c6     60 57 12 19 
228ca     49 37 31 3D 
228ce     45 2E 2B EB 
228d2     FD F0 09 FA | 	byte	$60, $57, $12, $19, $49, $37, $31, $3d, $45, $2e, $2b, $eb, $fd, $f0, $09, $fa
228d6     CD EB 19 EE 
228da     F3 13 04 ED 
228de     19 39 F7 0C 
228e2     F7 DF 04 F4 | 	byte	$cd, $eb, $19, $ee, $f3, $13, $04, $ed, $19, $39, $f7, $0c, $f7, $df, $04, $f4
228e6     B8 0F 19 0F 
228ea     BD 04 0F EA 
228ee     07 E1 E1 09 
228f2     EA B4 FA F9 | 	byte	$b8, $0f, $19, $0f, $bd, $04, $0f, $ea, $07, $e1, $e1, $09, $ea, $b4, $fa, $f9
228f6     B4 A2 DF F9 
228fa     F0 9F FD F3 
228fe     DC 1B 42 00 
22902     C7 E1 AF CD | 	byte	$b4, $a2, $df, $f9, $f0, $9f, $fd, $f3, $dc, $1b, $42, $00, $c7, $e1, $af, $cd
22906     C7 D9 A5 A8 
2290a     03 03 28 16 
2290e     0F FC B1 88 
22912     B4 1E 03 F4 | 	byte	$c7, $d9, $a5, $a8, $03, $03, $28, $16, $0f, $fc, $b1, $88, $b4, $1e, $03, $f4
22916     2E 2D F7 C0 
2291a     DF FF B8 FC 
2291e     A9 BD 00 15 
22922     18 DF AC 16 | 	byte	$2e, $2d, $f7, $c0, $df, $ff, $b8, $fc, $a9, $bd, $00, $15, $18, $df, $ac, $16
22926     22 01 EB D3 
2292a     A2 B5 18 F7 
2292e     0F 1F 4B 4F 
22932     57 30 42 5B | 	byte	$22, $01, $eb, $d3, $a2, $b5, $18, $f7, $0f, $1f, $4b, $4f, $57, $30, $42, $5b
22936     FC 09 EA 27 
2293a     60 55 7F 7F 
2293e     6F 0A 18 55 
22942     37 4E 6A 7F | 	byte	$fc, $09, $ea, $27, $60, $55, $7f, $7f, $6f, $0a, $18, $55, $37, $4e, $6a, $7f
22946     19 45 60 48 
2294a     48 5D 6A 0F 
2294e     D6 06 07 12 
22952     2D 48 37 13 | 	byte	$19, $45, $60, $48, $48, $5d, $6a, $0f, $d6, $06, $07, $12, $2d, $48, $37, $13
22956     49 E8 DC C1 
2295a     CC 0F F0 06 
2295e     DC 15 07 18 
22962     FA E8 E5 BA | 	byte	$49, $e8, $dc, $c1, $cc, $0f, $f0, $06, $dc, $15, $07, $18, $fa, $e8, $e5, $ba
22966     2A D5 D3 F1 
2296a     06 EA 13 0A 
2296e     12 F9 E2 E7 
22972     B4 F1 D5 D8 | 	byte	$2a, $d5, $d3, $f1, $06, $ea, $13, $0a, $12, $f9, $e2, $e7, $b4, $f1, $d5, $d8
22976     BE F3 F9 C7 
2297a     D6 F3 F7 00 
2297e     D9 BA BD A2 
22982     0A A8 BB 80 | 	byte	$be, $f3, $f9, $c7, $d6, $f3, $f7, $00, $d9, $ba, $bd, $a2, $0a, $a8, $bb, $80
22986     80 D9 D9 D0 
2298a     CF F3 91 E2 
2298e     97 A6 B4 C7 
22992     8A C7 CF DF | 	byte	$80, $d9, $d9, $d0, $cf, $f3, $91, $e2, $97, $a6, $b4, $c7, $8a, $c7, $cf, $df
22996     EB E1 F1 15 
2299a     E5 EB 04 09 
2299e     2D 09 2A 30 
229a2     31 45 21 37 | 	byte	$eb, $e1, $f1, $15, $e5, $eb, $04, $09, $2d, $09, $2a, $30, $31, $45, $21, $37
229a6     2E 36 40 67 
229aa     22 54 57 7F 
229ae     6F 3F 52 5A 
229b2     57 30 3C 7F | 	byte	$2e, $36, $40, $67, $22, $54, $57, $7f, $6f, $3f, $52, $5a, $57, $30, $3c, $7f
229b6     61 4E 3F 5B 
229ba     7E 25 27 1F 
229be     2D 51 39 1F 
229c2     0C 49 58 25 | 	byte	$61, $4e, $3f, $5b, $7e, $25, $27, $1f, $2d, $51, $39, $1f, $0c, $49, $58, $25
229c6     EA 18 D9 04 
229ca     E2 C9 BA C9 
229ce     2A EB E8 E5 
229d2     E2 15 F4 F7 | 	byte	$ea, $18, $d9, $04, $e2, $c9, $ba, $c9, $2a, $eb, $e8, $e5, $e2, $15, $f4, $f7
229d6     BD BD CD 16 
229da     01 CC 9D A2 
229de     9A 8E D0 E4 
229e2     B8 F0 EB 0C | 	byte	$bd, $bd, $cd, $16, $01, $cc, $9d, $a2, $9a, $8e, $d0, $e4, $b8, $f0, $eb, $0c
229e6     03 C4 F1 10 
229ea     DF E1 BB 80 
229ee     FD F3 F7 C4 
229f2     BA 9C BB AF | 	byte	$03, $c4, $f1, $10, $df, $e1, $bb, $80, $fd, $f3, $f7, $c4, $ba, $9c, $bb, $af
229f6     91 DF F7 09 
229fa     F4 EA 9D B5 
229fe     D9 ED 9C CF 
22a02     EA 18 F3 D6 | 	byte	$91, $df, $f7, $09, $f4, $ea, $9d, $b5, $d9, $ed, $9c, $cf, $ea, $18, $f3, $d6
22a06     D9 E4 28 13 
22a0a     F1 D6 C7 33 
22a0e     2B 3D 22 42 
22a12     0A 06 C0 15 | 	byte	$d9, $e4, $28, $13, $f1, $d6, $c7, $33, $2b, $3d, $22, $42, $0a, $06, $c0, $15
22a16     57 03 C0 64 
22a1a     00 7F 60 7F 
22a1e     7B 5D 1E 01 
22a22     4B 66 7F 4B | 	byte	$57, $03, $c0, $64, $00, $7f, $60, $7f, $7b, $5d, $1e, $01, $4b, $66, $7f, $4b
22a26     39 3A 2B 40 
22a2a     4F 4B 33 43 
22a2e     1B 67 2A 2B 
22a32     3F 30 43 EA | 	byte	$39, $3a, $2b, $40, $4f, $4b, $33, $43, $1b, $67, $2a, $2b, $3f, $30, $43, $ea
22a36     04 2D 24 E8 
22a3a     0F EA 46 28 
22a3e     04 A0 FA FF 
22a42     DF 2E 91 49 | 	byte	$04, $2d, $24, $e8, $0f, $ea, $46, $28, $04, $a0, $fa, $ff, $df, $2e, $91, $49
22a46     0C 10 C9 BA 
22a4a     C0 C7 9D DF 
22a4e     FD AF F9 AC 
22a52     EE BD FF 8B | 	byte	$0c, $10, $c9, $ba, $c0, $c7, $9d, $df, $fd, $af, $f9, $ac, $ee, $bd, $ff, $8b
22a56     EA 3F DF C7 
22a5a     9A D8 B4 A5 
22a5e     F0 1E 21 21 
22a62     F7 E5 F3 B2 | 	byte	$ea, $3f, $df, $c7, $9a, $d8, $b4, $a5, $f0, $1e, $21, $21, $f7, $e5, $f3, $b2
22a66     03 C4 F4 D0 
22a6a     EB 18 37 18 
22a6e     37 45 E8 BE 
22a72     2B A9 BD 4F | 	byte	$03, $c4, $f4, $d0, $eb, $18, $37, $18, $37, $45, $e8, $be, $2b, $a9, $bd, $4f
22a76     06 F4 06 BB 
22a7a     0D 03 1E 0C 
22a7e     31 B4 BD 8A 
22a82     CD B5 DC BB | 	byte	$06, $f4, $06, $bb, $0d, $03, $1e, $0c, $31, $b4, $bd, $8a, $cd, $b5, $dc, $bb
22a86     15 06 22 F4 
22a8a     EE E7 1F F4 
22a8e     D6 27 04 21 
22a92     FA DF E8 FC | 	byte	$15, $06, $22, $f4, $ee, $e7, $1f, $f4, $d6, $27, $04, $21, $fa, $df, $e8, $fc
22a96     21 33 27 12 
22a9a     22 30 31 40 
22a9e     D9 E8 E8 55 
22aa2     5D 0D 4C 5A | 	byte	$21, $33, $27, $12, $22, $30, $31, $40, $d9, $e8, $e8, $55, $5d, $0d, $4c, $5a
22aa6     ED 0C 34 C3 
22aaa     18 3A 18 64 
22aae     F0 06 FD 09 
22ab2     22 E7 45 F7 | 	byte	$ed, $0c, $34, $c3, $18, $3a, $18, $64, $f0, $06, $fd, $09, $22, $e7, $45, $f7
22ab6     E8 2D E1 CD 
22aba     3F 21 1E DF 
22abe     DC DC 04 18 
22ac2     07 36 DF E2 | 	byte	$e8, $2d, $e1, $cd, $3f, $21, $1e, $df, $dc, $dc, $04, $18, $07, $36, $df, $e2
22ac6     16 21 0C CC 
22aca     2E D8 D2 22 
22ace     2E 48 1F 1E 
22ad2     2B E8 EB EB | 	byte	$16, $21, $0c, $cc, $2e, $d8, $d2, $22, $2e, $48, $1f, $1e, $2b, $e8, $eb, $eb
22ad6     F7 21 F7 C3 
22ada     D6 19 CD CA 
22ade     06 00 D3 D2 
22ae2     DF F7 0C 3F | 	byte	$f7, $21, $f7, $c3, $d6, $19, $cd, $ca, $06, $00, $d3, $d2, $df, $f7, $0c, $3f
22ae6     E8 9A CA A3 
22aea     E7 12 E8 F9 
22aee     FA 0A 10 ED 
22af2     D9 1C D9 BB | 	byte	$e8, $9a, $ca, $a3, $e7, $12, $e8, $f9, $fa, $0a, $10, $ed, $d9, $1c, $d9, $bb
22af6     FA 07 EE E4 
22afa     E4 C7 DC D5 
22afe     FD E7 34 F9 
22b02     1E F1 12 0A | 	byte	$fa, $07, $ee, $e4, $e4, $c7, $dc, $d5, $fd, $e7, $34, $f9, $1e, $f1, $12, $0a
22b06     E4 E7 06 54 
22b0a     0F 36 27 01 
22b0e     27 15 09 2D 
22b12     18 F7 28 51 | 	byte	$e4, $e7, $06, $54, $0f, $36, $27, $01, $27, $15, $09, $2d, $18, $f7, $28, $51
22b16     2A 1B 30 FF 
22b1a     06 31 39 19 
22b1e     33 13 36 00 
22b22     06 3C 27 27 | 	byte	$2a, $1b, $30, $ff, $06, $31, $39, $19, $33, $13, $36, $00, $06, $3c, $27, $27
22b26     34 58 18 30 
22b2a     2A 21 E5 F1 
22b2e     DF 12 3F 1B 
22b32     36 0A F7 D9 | 	byte	$34, $58, $18, $30, $2a, $21, $e5, $f1, $df, $12, $3f, $1b, $36, $0a, $f7, $d9
22b36     FF 22 06 13 
22b3a     0A E4 A9 BA 
22b3e     0A BA FD 13 
22b42     F9 D2 93 F0 | 	byte	$ff, $22, $06, $13, $0a, $e4, $a9, $ba, $0a, $ba, $fd, $13, $f9, $d2, $93, $f0
22b46     F1 BB DC C7 
22b4a     A9 AF 01 F4 
22b4e     E5 ED EE 03 
22b52     10 F4 D8 01 | 	byte	$f1, $bb, $dc, $c7, $a9, $af, $01, $f4, $e5, $ed, $ee, $03, $10, $f4, $d8, $01
22b56     D5 BD F1 BD 
22b5a     FA E8 04 FA 
22b5e     07 DF 07 06 
22b62     C7 E1 ED CC | 	byte	$d5, $bd, $f1, $bd, $fa, $e8, $04, $fa, $07, $df, $07, $06, $c7, $e1, $ed, $cc
22b66     FF 28 D8 10 
22b6a     1F 37 0A 0F 
22b6e     DE 22 07 00 
22b72     0C 4F 6F 3A | 	byte	$ff, $28, $d8, $10, $1f, $37, $0a, $0f, $de, $22, $07, $00, $0c, $4f, $6f, $3a
22b76     36 30 21 21 
22b7a     27 27 2A 13 
22b7e     2D FC EE 21 
22b82     2B FD F3 1C | 	byte	$36, $30, $21, $21, $27, $27, $2a, $13, $2d, $fc, $ee, $21, $2b, $fd, $f3, $1c
22b86     D8 1E 30 21 
22b8a     12 03 19 F7 
22b8e     E8 F6 0C 21 
22b92     0C 22 30 0F | 	byte	$d8, $1e, $30, $21, $12, $03, $19, $f7, $e8, $f6, $0c, $21, $0c, $22, $30, $0f
22b96     1E EE BE CD 
22b9a     C1 F4 DF 01 
22b9e     E8 18 36 09 
22ba2     D5 37 F3 F0 | 	byte	$1e, $ee, $be, $cd, $c1, $f4, $df, $01, $e8, $18, $36, $09, $d5, $37, $f3, $f0
22ba6     F6 C9 E7 06 
22baa     2A 06 E8 E8 
22bae     F9 DF D8 B5 
22bb2     E8 D0 E2 04 | 	byte	$f6, $c9, $e7, $06, $2a, $06, $e8, $e8, $f9, $df, $d8, $b5, $e8, $d0, $e2, $04
22bb6     DF 2E 06 1B 
22bba     D8 D5 07 04 
22bbe     12 F9 0F DF 
22bc2     9D D9 F7 D3 | 	byte	$df, $2e, $06, $1b, $d8, $d5, $07, $04, $12, $f9, $0f, $df, $9d, $d9, $f7, $d3
22bc6     DC 0F E2 0F 
22bca     0C 13 18 10 
22bce     DC 06 0A 10 
22bd2     1E 1B FD FF | 	byte	$dc, $0f, $e2, $0f, $0c, $13, $18, $10, $dc, $06, $0a, $10, $1e, $1b, $fd, $ff
22bd6     09 FC 3C 07 
22bda     24 0F 18 37 
22bde     19 21 DF F3 
22be2     1E E4 21 2A | 	byte	$09, $fc, $3c, $07, $24, $0f, $18, $37, $19, $21, $df, $f3, $1e, $e4, $21, $2a
22be6     03 07 F0 F0 
22bea     FD 0A FA 2B 
22bee     33 F0 FD 1C 
22bf2     EE FD 28 1F | 	byte	$03, $07, $f0, $f0, $fd, $0a, $fa, $2b, $33, $f0, $fd, $1c, $ee, $fd, $28, $1f
22bf6     21 10 DF EA 
22bfa     FD 22 12 ED 
22bfe     E4 F1 EB C7 
22c02     F3 D6 CC F9 | 	byte	$21, $10, $df, $ea, $fd, $22, $12, $ed, $e4, $f1, $eb, $c7, $f3, $d6, $cc, $f9
22c06     03 F7 12 48 
22c0a     FA BD 03 09 
22c0e     06 12 F1 FC 
22c12     F0 E5 D6 25 | 	byte	$03, $f7, $12, $48, $fa, $bd, $03, $09, $06, $12, $f1, $fc, $f0, $e5, $d6, $25
22c16     12 0F FA FC 
22c1a     30 28 24 06 
22c1e     2B 2B 34 18 
22c22     FD F3 22 DC | 	byte	$12, $0f, $fa, $fc, $30, $28, $24, $06, $2b, $2b, $34, $18, $fd, $f3, $22, $dc
22c26     F4 FF F3 F9 
22c2a     EB 10 03 21 
22c2e     F7 12 06 F1 
22c32     F0 F4 06 04 | 	byte	$f4, $ff, $f3, $f9, $eb, $10, $03, $21, $f7, $12, $06, $f1, $f0, $f4, $06, $04
22c36     48 1C E1 03 
22c3a     0F 07 04 E2 
22c3e     E7 EB F7 F1 
22c42     FF 15 F6 1F | 	byte	$48, $1c, $e1, $03, $0f, $07, $04, $e2, $e7, $eb, $f7, $f1, $ff, $15, $f6, $1f
22c46     DC D6 FA 10 
22c4a     E7 F7 F3 2B 
22c4e     3D E1 FA D2 
22c52     D6 DC 04 13 | 	byte	$dc, $d6, $fa, $10, $e7, $f7, $f3, $2b, $3d, $e1, $fa, $d2, $d6, $dc, $04, $13
22c56     F0 E8 E5 F1 
22c5a     E7 F7 F7 09 
22c5e     EA CF 00 D3 
22c62     E1 03 DF CA | 	byte	$f0, $e8, $e5, $f1, $e7, $f7, $f7, $09, $ea, $cf, $00, $d3, $e1, $03, $df, $ca
22c66     FD E2 E5 F4 
22c6a     CC E8 07 EB 
22c6e     D3 00 03 EE 
22c72     F4 F7 FF ED | 	byte	$fd, $e2, $e5, $f4, $cc, $e8, $07, $eb, $d3, $00, $03, $ee, $f4, $f7, $ff, $ed
22c76     28 00 27 27 
22c7a     0C 12 21 37 
22c7e     FA 2A 42 2B 
22c82     1B 07 F7 21 | 	byte	$28, $00, $27, $27, $0c, $12, $21, $37, $fa, $2a, $42, $2b, $1b, $07, $f7, $21
22c86     EE 1F 33 34 
22c8a     46 58 2A 00 
22c8e     12 09 0F 1F 
22c92     06 1C 18 0C | 	byte	$ee, $1f, $33, $34, $46, $58, $2a, $00, $12, $09, $0f, $1f, $06, $1c, $18, $0c
22c96     27 34 4C 24 
22c9a     13 FA 13 1E 
22c9e     19 DE F3 E8 
22ca2     0A F7 CF F4 | 	byte	$27, $34, $4c, $24, $13, $fa, $13, $1e, $19, $de, $f3, $e8, $0a, $f7, $cf, $f4
22ca6     EB F1 E7 1F 
22caa     FA E7 E2 F7 
22cae     E4 F4 AF ED 
22cb2     ED E4 D8 C7 | 	byte	$eb, $f1, $e7, $1f, $fa, $e7, $e2, $f7, $e4, $f4, $af, $ed, $ed, $e4, $d8, $c7
22cb6     EA DF EB CF 
22cba     F1 E5 E8 DF 
22cbe     E4 F7 EB C9 
22cc2     BB D8 F9 EA | 	byte	$ea, $df, $eb, $cf, $f1, $e5, $e8, $df, $e4, $f7, $eb, $c9, $bb, $d8, $f9, $ea
22cc6     12 FC E2 DC 
22cca     12 2B E5 F9 
22cce     FA EB 28 E8 
22cd2     E8 2D 1B 00 | 	byte	$12, $fc, $e2, $dc, $12, $2b, $e5, $f9, $fa, $eb, $28, $e8, $e8, $2d, $1b, $00
22cd6     0A DF FA F0 
22cda     2B 1B 25 E4 
22cde     DB 18 EB 24 
22ce2     12 37 15 10 | 	byte	$0a, $df, $fa, $f0, $2b, $1b, $25, $e4, $db, $18, $eb, $24, $12, $37, $15, $10
22ce6     49 07 1F 2E 
22cea     EA FD 19 18 
22cee     22 F9 04 0F 
22cf2     0A 0C 2E FC | 	byte	$49, $07, $1f, $2e, $ea, $fd, $19, $18, $22, $f9, $04, $0f, $0a, $0c, $2e, $fc
22cf6     16 1C 15 0C 
22cfa     13 0A 00 1F 
22cfe     12 0D 27 10 
22d02     00 27 2D 0F | 	byte	$16, $1c, $15, $0c, $13, $0a, $00, $1f, $12, $0d, $27, $10, $00, $27, $2d, $0f
22d06     12 40 04 F4 
22d0a     12 2A 1C E8 
22d0e     03 19 0C 19 
22d12     FA 10 01 0D | 	byte	$12, $40, $04, $f4, $12, $2a, $1c, $e8, $03, $19, $0c, $19, $fa, $10, $01, $0d
22d16     1E E2 FD 1F 
22d1a     FF 10 F1 E8 
22d1e     F6 E5 DC FC 
22d22     DC DF 00 06 | 	byte	$1e, $e2, $fd, $1f, $ff, $10, $f1, $e8, $f6, $e5, $dc, $fc, $dc, $df, $00, $06
22d26     E8 E2 C7 F1 
22d2a     CA DF D8 C0 
22d2e     D6 F0 C1 D0 
22d32     EA D6 12 D0 | 	byte	$e8, $e2, $c7, $f1, $ca, $df, $d8, $c0, $d6, $f0, $c1, $d0, $ea, $d6, $12, $d0
22d36     D8 1B EE FD 
22d3a     0F EB FA D0 
22d3e     FD FA FA F7 
22d42     F0 09 E8 1B | 	byte	$d8, $1b, $ee, $fd, $0f, $eb, $fa, $d0, $fd, $fa, $fa, $f7, $f0, $09, $e8, $1b
22d46     30 0C 10 33 
22d4a     2B 03 45 3C 
22d4e     06 F7 2B 1E 
22d52     30 15 18 34 | 	byte	$30, $0c, $10, $33, $2b, $03, $45, $3c, $06, $f7, $2b, $1e, $30, $15, $18, $34
22d56     04 E5 1E 30 
22d5a     13 07 2E DE 
22d5e     F4 FA EE F7 
22d62     F3 04 EE F0 | 	byte	$04, $e5, $1e, $30, $13, $07, $2e, $de, $f4, $fa, $ee, $f7, $f3, $04, $ee, $f0
22d66     EA 03 EA 07 
22d6a     00 F4 E5 18 
22d6e     15 F7 1B EB 
22d72     0C F1 0A 10 | 	byte	$ea, $03, $ea, $07, $00, $f4, $e5, $18, $15, $f7, $1b, $eb, $0c, $f1, $0a, $10
22d76     FD 2B 0A 2D 
22d7a     37 EE 16 2B 
22d7e     0A 1B 19 15 
22d82     25 4C 15 1C | 	byte	$fd, $2b, $0a, $2d, $37, $ee, $16, $2b, $0a, $1b, $19, $15, $25, $4c, $15, $1c
22d86     06 00 03 EB 
22d8a     04 00 04 0F 
22d8e     F0 FF 0A F6 
22d92     12 ED F7 07 | 	byte	$06, $00, $03, $eb, $04, $00, $04, $0f, $f0, $ff, $0a, $f6, $12, $ed, $f7, $07
22d96     E7 F9 06 D6 
22d9a     F3 F3 EA CC 
22d9e     D8 F4 F1 06 
22da2     ED FA F1 C7 | 	byte	$e7, $f9, $06, $d6, $f3, $f3, $ea, $cc, $d8, $f4, $f1, $06, $ed, $fa, $f1, $c7
22da6     EA 04 EB FD 
22daa     C4 C1 E2 D0 
22dae     F1 F3 0F DF 
22db2     F1 24 C9 F1 | 	byte	$ea, $04, $eb, $fd, $c4, $c1, $e2, $d0, $f1, $f3, $0f, $df, $f1, $24, $c9, $f1
22db6     DB FD F7 13 
22dba     FD EB FD 07 
22dbe     E8 00 0C 01 
22dc2     0D F9 07 04 | 	byte	$db, $fd, $f7, $13, $fd, $eb, $fd, $07, $e8, $00, $0c, $01, $0d, $f9, $07, $04
22dc6     F0 12 19 09 
22dca     F1 2B 13 03 
22dce     15 F4 03 2B 
22dd2     E8 03 1E 01 | 	byte	$f0, $12, $19, $09, $f1, $2b, $13, $03, $15, $f4, $03, $2b, $e8, $03, $1e, $01
22dd6     10 18 18 1C 
22dda     00 18 06 1E 
22dde     0D 06 04 FC 
22de2     E8 10 00 EE | 	byte	$10, $18, $18, $1c, $00, $18, $06, $1e, $0d, $06, $04, $fc, $e8, $10, $00, $ee
22de6     01 00 FA FD 
22dea     0F F0 4B 27 
22dee     27 52 1F 06 
22df2     12 1E 28 10 | 	byte	$01, $00, $fa, $fd, $0f, $f0, $4b, $27, $27, $52, $1f, $06, $12, $1e, $28, $10
22df6     10 09 1B 15 
22dfa     09 27 F7 15 
22dfe     10 33 F9 01 
22e02     00 FD F7 03 | 	byte	$10, $09, $1b, $15, $09, $27, $f7, $15, $10, $33, $f9, $01, $00, $fd, $f7, $03
22e06     1B 1B 13 D9 
22e0a     F7 07 DB 19 
22e0e     F3 D3 01 EE 
22e12     E2 DF DF E8 | 	byte	$1b, $1b, $13, $d9, $f7, $07, $db, $19, $f3, $d3, $01, $ee, $e2, $df, $df, $e8
22e16     D5 DC D6 E4 
22e1a     E1 DB FA F6 
22e1e     EB FA ED E7 
22e22     F7 F0 E8 EB | 	byte	$d5, $dc, $d6, $e4, $e1, $db, $fa, $f6, $eb, $fa, $ed, $e7, $f7, $f0, $e8, $eb
22e26     06 D6 D8 C9 
22e2a     F1 F9 EE CA 
22e2e     FD F3 FF E7 
22e32     FC D6 E5 12 | 	byte	$06, $d6, $d8, $c9, $f1, $f9, $ee, $ca, $fd, $f3, $ff, $e7, $fc, $d6, $e5, $12
22e36     0F FF FF DF 
22e3a     21 E8 E2 10 
22e3e     00 DF 00 F3 
22e42     27 18 24 0F | 	byte	$0f, $ff, $ff, $df, $21, $e8, $e2, $10, $00, $df, $00, $f3, $27, $18, $24, $0f
22e46     07 24 00 30 
22e4a     06 10 15 30 
22e4e     19 06 1E 0F 
22e52     0A 22 1C 15 | 	byte	$07, $24, $00, $30, $06, $10, $15, $30, $19, $06, $1e, $0f, $0a, $22, $1c, $15
22e56     30 FD 16 3C 
22e5a     18 39 0C 1E 
22e5e     25 18 04 30 
22e62     1F 21 18 27 | 	byte	$30, $fd, $16, $3c, $18, $39, $0c, $1e, $25, $18, $04, $30, $1f, $21, $18, $27
22e66     FD 0C 25 F3 
22e6a     1E 0A 13 0C 
22e6e     24 FA ED 33 
22e72     10 22 03 1E | 	byte	$fd, $0c, $25, $f3, $1e, $0a, $13, $0c, $24, $fa, $ed, $33, $10, $22, $03, $1e
22e76     0D 2E FD 1E 
22e7a     F1 EE 00 15 
22e7e     03 FA 09 EA 
22e82     DF EE DC F0 | 	byte	$0d, $2e, $fd, $1e, $f1, $ee, $00, $15, $03, $fa, $09, $ea, $df, $ee, $dc, $f0
22e86     E8 E5 F1 BD 
22e8a     C7 E1 DF DF 
22e8e     D9 E1 E5 E2 
22e92     E7 E2 C3 D6 | 	byte	$e8, $e5, $f1, $bd, $c7, $e1, $df, $df, $d9, $e1, $e5, $e2, $e7, $e2, $c3, $d6
22e96     C7 EA CA F7 
22e9a     F3 E5 03 DF 
22e9e     F9 E2 E8 E8 
22ea2     C0 CD D0 F4 | 	byte	$c7, $ea, $ca, $f7, $f3, $e5, $03, $df, $f9, $e2, $e8, $e8, $c0, $cd, $d0, $f4
22ea6     06 04 EE 0A 
22eaa     EB F7 FF 06 
22eae     07 1C 01 0C 
22eb2     D2 24 07 03 | 	byte	$06, $04, $ee, $0a, $eb, $f7, $ff, $06, $07, $1c, $01, $0c, $d2, $24, $07, $03
22eb6     21 07 0C F4 
22eba     1F FA 21 15 
22ebe     1E 2A 19 03 
22ec2     19 07 01 FA | 	byte	$21, $07, $0c, $f4, $1f, $fa, $21, $15, $1e, $2a, $19, $03, $19, $07, $01, $fa
22ec6     12 F4 0C 21 
22eca     FC 0C 39 1B 
22ece     00 09 1C 30 
22ed2     06 09 09 0C | 	byte	$12, $f4, $0c, $21, $fc, $0c, $39, $1b, $00, $09, $1c, $30, $06, $09, $09, $0c
22ed6     1E 1B 3C 18 
22eda     1E 3A 36 0A 
22ede     1F 06 1B 22 
22ee2     03 06 1F F3 | 	byte	$1e, $1b, $3c, $18, $1e, $3a, $36, $0a, $1f, $06, $1b, $22, $03, $06, $1f, $f3
22ee6     1B F0 1F 21 
22eea     15 E8 00 F9 
22eee     18 18 15 09 
22ef2     12 FF DF F7 | 	byte	$1b, $f0, $1f, $21, $15, $e8, $00, $f9, $18, $18, $15, $09, $12, $ff, $df, $f7
22ef6     F7 FA DF E1 
22efa     F6 F0 E4 E8 
22efe     E8 F1 CC FD 
22f02     E4 FC DE EB | 	byte	$f7, $fa, $df, $e1, $f6, $f0, $e4, $e8, $e8, $f1, $cc, $fd, $e4, $fc, $de, $eb
22f06     E4 D0 AE ED 
22f0a     D6 ED E2 E2 
22f0e     D2 B8 00 D3 
22f12     EE 00 F1 E2 | 	byte	$e4, $d0, $ae, $ed, $d6, $ed, $e2, $e2, $d2, $b8, $00, $d3, $ee, $00, $f1, $e2
22f16     E1 EB 07 18 
22f1a     04 04 FA 06 
22f1e     EB 1B 0D E8 
22f22     03 06 24 10 | 	byte	$e1, $eb, $07, $18, $04, $04, $fa, $06, $eb, $1b, $0d, $e8, $03, $06, $24, $10
22f26     04 13 0C 10 
22f2a     2B 0D 04 04 
22f2e     09 04 F7 FD 
22f32     03 15 FC F1 | 	byte	$04, $13, $0c, $10, $2b, $0d, $04, $04, $09, $04, $f7, $fd, $03, $15, $fc, $f1
22f36     F7 12 03 06 
22f3a     00 EE 04 0C 
22f3e     FD 03 09 07 
22f42     10 FF 06 07 | 	byte	$f7, $12, $03, $06, $00, $ee, $04, $0c, $fd, $03, $09, $07, $10, $ff, $06, $07
22f46     E2 DC 27 0F 
22f4a     13 16 15 16 
22f4e     0F 3C 0C 30 
22f52     03 1F E1 12 | 	byte	$e2, $dc, $27, $0f, $13, $16, $15, $16, $0f, $3c, $0c, $30, $03, $1f, $e1, $12
22f56     F1 15 09 0F 
22f5a     18 FA 12 04 
22f5e     1C 12 04 0C 
22f62     04 19 00 13 | 	byte	$f1, $15, $09, $0f, $18, $fa, $12, $04, $1c, $12, $04, $0c, $04, $19, $00, $13
22f66     0A FA 04 1E 
22f6a     FD 22 F7 FC 
22f6e     FC F4 1B F9 
22f72     FA EA FF 0F | 	byte	$0a, $fa, $04, $1e, $fd, $22, $f7, $fc, $fc, $f4, $1b, $f9, $fa, $ea, $ff, $0f
22f76     FF F1 09 19 
22f7a     21 ED F1 FF 
22f7e     1E 1E F3 FF 
22f82     06 F9 07 04 | 	byte	$ff, $f1, $09, $19, $21, $ed, $f1, $ff, $1e, $1e, $f3, $ff, $06, $f9, $07, $04
22f86     1B F3 CC 12 
22f8a     ED F7 EA EA 
22f8e     09 D6 F0 D8 
22f92     01 E2 F7 F1 | 	byte	$1b, $f3, $cc, $12, $ed, $f7, $ea, $ea, $09, $d6, $f0, $d8, $01, $e2, $f7, $f1
22f96     12 E8 FD E8 
22f9a     E8 F6 E7 EE 
22f9e     E8 FF D8 F7 
22fa2     06 00 0F 09 | 	byte	$12, $e8, $fd, $e8, $e8, $f6, $e7, $ee, $e8, $ff, $d8, $f7, $06, $00, $0f, $09
22fa6     0C ED FF FA 
22faa     1F FA 01 F7 
22fae     00 E8 FD F3 
22fb2     09 F1 10 0A | 	byte	$0c, $ed, $ff, $fa, $1f, $fa, $01, $f7, $00, $e8, $fd, $f3, $09, $f1, $10, $0a
22fb6     ED F1 0C 07 
22fba     E5 F1 0F 21 
22fbe     19 EE F4 D6 
22fc2     13 10 12 FC | 	byte	$ed, $f1, $0c, $07, $e5, $f1, $0f, $21, $19, $ee, $f4, $d6, $13, $10, $12, $fc
22fc6     1B 06 06 0C 
22fca     15 18 07 19 
22fce     10 21 0C 0F 
22fd2     03 19 01 25 | 	byte	$1b, $06, $06, $0c, $15, $18, $07, $19, $10, $21, $0c, $0f, $03, $19, $01, $25
22fd6     30 15 FA 15 
22fda     0D 0F 19 0F 
22fde     E8 2A 0A F4 
22fe2     DF 0A 10 10 | 	byte	$30, $15, $fa, $15, $0d, $0f, $19, $0f, $e8, $2a, $0a, $f4, $df, $0a, $10, $10
22fe6     06 04 F0 21 
22fea     0A 10 01 1B 
22fee     07 F9 04 07 
22ff2     F1 EE F3 EE | 	byte	$06, $04, $f0, $21, $0a, $10, $01, $1b, $07, $f9, $04, $07, $f1, $ee, $f3, $ee
22ff6     F0 D6 06 D8 
22ffa     0A 00 EB E2 
22ffe     EE EA FC 00 
23002     E1 03 00 15 | 	byte	$f0, $d6, $06, $d8, $0a, $00, $eb, $e2, $ee, $ea, $fc, $00, $e1, $03, $00, $15
23006     E2 FD E5 EE 
2300a     EA E4 FC D6 
2300e     0A E8 ED D8 
23012     EA DF 04 DF | 	byte	$e2, $fd, $e5, $ee, $ea, $e4, $fc, $d6, $0a, $e8, $ed, $d8, $ea, $df, $04, $df
23016     F3 DC DF F1 
2301a     F9 F9 F0 15 
2301e     FA 09 F3 F7 
23022     07 07 ED 07 | 	byte	$f3, $dc, $df, $f1, $f9, $f9, $f0, $15, $fa, $09, $f3, $f7, $07, $07, $ed, $07
23026     33 09 19 16 
2302a     12 15 2E 0D 
2302e     04 1B 27 2A 
23032     28 2B 18 2D | 	byte	$33, $09, $19, $16, $12, $15, $2e, $0d, $04, $1b, $27, $2a, $28, $2b, $18, $2d
23036     19 19 07 18 
2303a     FC 1E 09 19 
2303e     1C DB FA 09 
23042     F3 0F FA FA | 	byte	$19, $19, $07, $18, $fc, $1e, $09, $19, $1c, $db, $fa, $09, $f3, $0f, $fa, $fa
23046     F7 FD F9 09 
2304a     F9 E4 12 F4 
2304e     FF EA F7 F0 
23052     07 03 DF F4 | 	byte	$f7, $fd, $f9, $09, $f9, $e4, $12, $f4, $ff, $ea, $f7, $f0, $07, $03, $df, $f4
23056     FA F4 EB 01 
2305a     F9 E2 FC 09 
2305e     07 F4 FA 0F 
23062     0F 03 07 0C | 	byte	$fa, $f4, $eb, $01, $f9, $e2, $fc, $09, $07, $f4, $fa, $0f, $0f, $03, $07, $0c
23066     0F EB FD EB 
2306a     0A 19 06 E8 
2306e     0A 07 FD 03 
23072     10 EB F4 FD | 	byte	$0f, $eb, $fd, $eb, $0a, $19, $06, $e8, $0a, $07, $fd, $03, $10, $eb, $f4, $fd
23076     06 09 F7 F4 
2307a     DB E8 F9 FA 
2307e     EE E8 E5 0A 
23082     0A F0 E8 ED | 	byte	$06, $09, $f7, $f4, $db, $e8, $f9, $fa, $ee, $e8, $e5, $0a, $0a, $f0, $e8, $ed
23086     0A 10 03 10 
2308a     FD 04 0F 1E 
2308e     1F 06 10 0F 
23092     06 13 1B 04 | 	byte	$0a, $10, $03, $10, $fd, $04, $0f, $1e, $1f, $06, $10, $0f, $06, $13, $1b, $04
23096     E8 06 FD 1B 
2309a     27 06 01 04 
2309e     FA 1C ED 03 
230a2     0F 10 FA E8 | 	byte	$e8, $06, $fd, $1b, $27, $06, $01, $04, $fa, $1c, $ed, $03, $0f, $10, $fa, $e8
230a6     1C 12 F0 0C 
230aa     03 F7 F1 E4 
230ae     0C EB 00 07 
230b2     0C 15 03 F7 | 	byte	$1c, $12, $f0, $0c, $03, $f7, $f1, $e4, $0c, $eb, $00, $07, $0c, $15, $03, $f7
230b6     01 00 07 12 
230ba     F4 F1 06 0A 
230be     EE F7 F3 FA 
230c2     0C F1 EE F1 | 	byte	$01, $00, $07, $12, $f4, $f1, $06, $0a, $ee, $f7, $f3, $fa, $0c, $f1, $ee, $f1
230c6     01 12 F1 EE 
230ca     F3 F0 F0 EB 
230ce     DF FD E2 F3 
230d2     FC F3 ED F1 | 	byte	$01, $12, $f1, $ee, $f3, $f0, $f0, $eb, $df, $fd, $e2, $f3, $fc, $f3, $ed, $f1
230d6     F3 FC EE 30 
230da     07 01 07 06 
230de     1C E8 1B FC 
230e2     10 13 15 FC | 	byte	$f3, $fc, $ee, $30, $07, $01, $07, $06, $1c, $e8, $1b, $fc, $10, $13, $15, $fc
230e6     19 31 37 0C 
230ea     01 12 0D 15 
230ee     01 01 0F 07 
230f2     0F F7 06 0F | 	byte	$19, $31, $37, $0c, $01, $12, $0d, $15, $01, $01, $0f, $07, $0f, $f7, $06, $0f
230f6     06 16 FF 01 
230fa     00 EB F1 E5 
230fe     F7 04 F4 F4 
23102     07 EA F3 F1 | 	byte	$06, $16, $ff, $01, $00, $eb, $f1, $e5, $f7, $04, $f4, $f4, $07, $ea, $f3, $f1
23106     03 FF F4 13 
2310a     12 00 EA 0F 
2310e     FD 0F 0C F4 
23112     0F 13 1B 0F | 	byte	$03, $ff, $f4, $13, $12, $00, $ea, $0f, $fd, $0f, $0c, $f4, $0f, $13, $1b, $0f
23116     06 E8 12 09 
2311a     EB FF 06 07 
2311e     FF 00 FA F7 
23122     E2 F4 09 F4 | 	byte	$06, $e8, $12, $09, $eb, $ff, $06, $07, $ff, $00, $fa, $f7, $e2, $f4, $09, $f4
23126     0D EE FF 09 
2312a     FD FF 03 F7 
2312e     03 00 D9 F0 
23132     F9 0A 15 E8 | 	byte	$0d, $ee, $ff, $09, $fd, $ff, $03, $f7, $03, $00, $d9, $f0, $f9, $0a, $15, $e8
23136     00 07 03 0A 
2313a     F3 F9 01 09 
2313e     F9 0F 04 0D 
23142     F4 00 F6 03 | 	byte	$00, $07, $03, $0a, $f3, $f9, $01, $09, $f9, $0f, $04, $0d, $f4, $00, $f6, $03
23146     03 00 12 F9 
2314a     EA F9 03 00 
2314e     F7 03 F6 FC 
23152     FD F9 00 09 | 	byte	$03, $00, $12, $f9, $ea, $f9, $03, $00, $f7, $03, $f6, $fc, $fd, $f9, $00, $09
23156     1C FD FC EE 
2315a     06 07 EA FD 
2315e     15 15 F7 FF 
23162     EA EE 09 0C | 	byte	$1c, $fd, $fc, $ee, $06, $07, $ea, $fd, $15, $15, $f7, $ff, $ea, $ee, $09, $0c
23166     30 07 F7 18 
2316a     07 06 EE 04 
2316e     FC 03 FF 03 
23172     F1 FF F4 F3 | 	byte	$30, $07, $f7, $18, $07, $06, $ee, $04, $fc, $03, $ff, $03, $f1, $ff, $f4, $f3
23176     03 0A 07 07 
2317a     F4 EB 15 03 
2317e     EB F6 F7 F7 
23182     F4 F9 00 F4 | 	byte	$03, $0a, $07, $07, $f4, $eb, $15, $03, $eb, $f6, $f7, $f7, $f4, $f9, $00, $f4
23186     FF 00 FF E8 
2318a     E4 E1 E2 E2 
2318e     FD 0A F7 F4 
23192     EA 1C 0D 07 | 	byte	$ff, $00, $ff, $e8, $e4, $e1, $e2, $e2, $fd, $0a, $f7, $f4, $ea, $1c, $0d, $07
23196     19 01 0A 03 
2319a     1F 15 06 15 
2319e     28 1F 18 1B 
231a2     00 21 0C 27 | 	byte	$19, $01, $0a, $03, $1f, $15, $06, $15, $28, $1f, $18, $1b, $00, $21, $0c, $27
231a6     F7 FC 00 13 
231aa     03 F6 24 06 
231ae     00 F0 0C 07 
231b2     06 F4 ED 09 | 	byte	$f7, $fc, $00, $13, $03, $f6, $24, $06, $00, $f0, $0c, $07, $06, $f4, $ed, $09
231b6     0C F0 ED 07 
231ba     F9 EE 06 E8 
231be     F7 F9 06 F9 
231c2     EA F9 F1 FA | 	byte	$0c, $f0, $ed, $07, $f9, $ee, $06, $e8, $f7, $f9, $06, $f9, $ea, $f9, $f1, $fa
231c6     E1 03 04 EE 
231ca     F1 EE 01 07 
231ce     FF F7 DB FC 
231d2     EA 00 0F DC | 	byte	$e1, $03, $04, $ee, $f1, $ee, $01, $07, $ff, $f7, $db, $fc, $ea, $00, $0f, $dc
231d6     F9 F1 FD 06 
231da     F4 03 EA 04 
231de     F7 0F FD FD 
231e2     EE 04 1B 03 | 	byte	$f9, $f1, $fd, $06, $f4, $03, $ea, $04, $f7, $0f, $fd, $fd, $ee, $04, $1b, $03
231e6     18 04 F9 09 
231ea     13 FD 09 0F 
231ee     FA FD 0F 01 
231f2     04 13 06 0F | 	byte	$18, $04, $f9, $09, $13, $fd, $09, $0f, $fa, $fd, $0f, $01, $04, $13, $06, $0f
231f6     E8 13 15 0C 
231fa     00 04 03 19 
231fe     04 12 16 FA 
23202     0A 19 12 F4 | 	byte	$e8, $13, $15, $0c, $00, $04, $03, $19, $04, $12, $16, $fa, $0a, $19, $12, $f4
23206     06 0A 09 10 
2320a     09 1B 1B 03 
2320e     00 0F 16 19 
23212     13 19 16 01 | 	byte	$06, $0a, $09, $10, $09, $1b, $1b, $03, $00, $0f, $16, $19, $13, $19, $16, $01
23216     0C 06 FF 1E 
2321a     09 00 16 0A 
2321e     00 04 0F 0C 
23222     FF 00 0F F0 | 	byte	$0c, $06, $ff, $1e, $09, $00, $16, $0a, $00, $04, $0f, $0c, $ff, $00, $0f, $f0
23226     FC FA F6 00 
2322a     ED F0 E4 E8 
2322e     DF FD FF D8 
23232     09 EE F7 EE | 	byte	$fc, $fa, $f6, $00, $ed, $f0, $e4, $e8, $df, $fd, $ff, $d8, $09, $ee, $f7, $ee
23236     C3 F4 EB F6 
2323a     E5 EB FC 01 
2323e     04 FF 16 FA 
23242     F6 18 00 F7 | 	byte	$c3, $f4, $eb, $f6, $e5, $eb, $fc, $01, $04, $ff, $16, $fa, $f6, $18, $00, $f7
23246     0C 09 F7 EB 
2324a     DE FC 0C 04 
2324e     00 FD 0A F9 
23252     DB 00 F1 12 | 	byte	$0c, $09, $f7, $eb, $de, $fc, $0c, $04, $00, $fd, $0a, $f9, $db, $00, $f1, $12
23256     FA F0 0A E8 
2325a     D2 F7 F3 06 
2325e     F1 15 F3 F9 
23262     F4 01 1E F1 | 	byte	$fa, $f0, $0a, $e8, $d2, $f7, $f3, $06, $f1, $15, $f3, $f9, $f4, $01, $1e, $f1
23266     0C 16 22 24 
2326a     04 0F 13 24 
2326e     16 1B 04 1C 
23272     12 0C F7 15 | 	byte	$0c, $16, $22, $24, $04, $0f, $13, $24, $16, $1b, $04, $1c, $12, $0c, $f7, $15
23276     16 FA 01 F4 
2327a     E8 07 F7 00 
2327e     07 0C 0C F6 
23282     07 12 0C 18 | 	byte	$16, $fa, $01, $f4, $e8, $07, $f7, $00, $07, $0c, $0c, $f6, $07, $12, $0c, $18
23286     03 06 1C 10 
2328a     0A 00 13 10 
2328e     0A 0F 00 00 
23292     F0 21 21 EA | 	byte	$03, $06, $1c, $10, $0a, $00, $13, $10, $0a, $0f, $00, $00, $f0, $21, $21, $ea
23296     0C ED FF 16 
2329a     FD F1 0D F7 
2329e     00 10 00 04 
232a2     FC F1 EB F9 | 	byte	$0c, $ed, $ff, $16, $fd, $f1, $0d, $f7, $00, $10, $00, $04, $fc, $f1, $eb, $f9
232a6     0A EA F4 EB 
232aa     F4 FC EB DF 
232ae     E2 00 DF D0 
232b2     E8 C4 F9 EE | 	byte	$0a, $ea, $f4, $eb, $f4, $fc, $eb, $df, $e2, $00, $df, $d0, $e8, $c4, $f9, $ee
232b6     E7 E5 E4 E8 
232ba     E8 E8 EB 01 
232be     CF E5 E4 E4 
232c2     EE 07 00 F9 | 	byte	$e7, $e5, $e4, $e8, $e8, $e8, $eb, $01, $cf, $e5, $e4, $e4, $ee, $07, $00, $f9
232c6     07 FF 0C 0A 
232ca     00 FD 01 21 
232ce     03 12 1B 18 
232d2     1C 2A 10 0F | 	byte	$07, $ff, $0c, $0a, $00, $fd, $01, $21, $03, $12, $1b, $18, $1c, $2a, $10, $0f
232d6     00 16 09 0F 
232da     1B 18 18 00 
232de     FF 07 FC 13 
232e2     07 FA FA 12 | 	byte	$00, $16, $09, $0f, $1b, $18, $18, $00, $ff, $07, $fc, $13, $07, $fa, $fa, $12
232e6     12 F6 FD 09 
232ea     13 0A 07 06 
232ee     06 18 03 03 
232f2     09 FF 12 16 | 	byte	$12, $f6, $fd, $09, $13, $0a, $07, $06, $06, $18, $03, $03, $09, $ff, $12, $16
232f6     01 03 0C FC 
232fa     FF 06 06 16 
232fe     01 EA 1B FC 
23302     09 FD 07 04 | 	byte	$01, $03, $0c, $fc, $ff, $06, $06, $16, $01, $ea, $1b, $fc, $09, $fd, $07, $04
23306     06 0C 09 F3 
2330a     FF 0A 12 15 
2330e     03 F7 0D F7 
23312     FC 12 07 0A | 	byte	$06, $0c, $09, $f3, $ff, $0a, $12, $15, $03, $f7, $0d, $f7, $fc, $12, $07, $0a
23316     10 F9 FD 07 
2331a     FC F4 F0 E5 
2331e     FC 07 F9 FD 
23322     E8 FA 09 10 | 	byte	$10, $f9, $fd, $07, $fc, $f4, $f0, $e5, $fc, $07, $f9, $fd, $e8, $fa, $09, $10
23326     FD FD 03 F4 
2332a     F3 12 F9 FD 
2332e     03 EE 0F F3 
23332     FC E5 F4 00 | 	byte	$fd, $fd, $03, $f4, $f3, $12, $f9, $fd, $03, $ee, $0f, $f3, $fc, $e5, $f4, $00
23336     F1 F1 E1 F9 
2333a     EE F7 12 00 
2333e     E4 F3 09 FD 
23342     03 15 E8 F3 | 	byte	$f1, $f1, $e1, $f9, $ee, $f7, $12, $00, $e4, $f3, $09, $fd, $03, $15, $e8, $f3
23346     00 03 F4 1B 
2334a     F9 04 06 F6 
2334e     FC 10 F7 FC 
23352     EB 0C 04 F9 | 	byte	$00, $03, $f4, $1b, $f9, $04, $06, $f6, $fc, $10, $f7, $fc, $eb, $0c, $04, $f9
23356     F0 03 09 FA 
2335a     FD 06 04 09 
2335e     0F F1 F1 1F 
23362     F9 F7 09 07 | 	byte	$f0, $03, $09, $fa, $fd, $06, $04, $09, $0f, $f1, $f1, $1f, $f9, $f7, $09, $07
23366     01 15 04 F0 
2336a     FF 03 1B 0F 
2336e     00 03 27 04 
23372     0A 03 03 18 | 	byte	$01, $15, $04, $f0, $ff, $03, $1b, $0f, $00, $03, $27, $04, $0a, $03, $03, $18
23376     1C 0C F7 1F 
2337a     00 19 09 FA 
2337e     0C 1B 06 E8 
23382     13 06 F7 10 | 	byte	$1c, $0c, $f7, $1f, $00, $19, $09, $fa, $0c, $1b, $06, $e8, $13, $06, $f7, $10
23386     FD F9 0F 0F 
2338a     03 FC 01 09 
2338e     16 10 E2 09 
23392     12 07 1E FA | 	byte	$fd, $f9, $0f, $0f, $03, $fc, $01, $09, $16, $10, $e2, $09, $12, $07, $1e, $fa
23396     07 27 15 FF 
2339a     00 FA 16 07 
2339e     F4 FC 03 FA 
233a2     F6 03 FD ED | 	byte	$07, $27, $15, $ff, $00, $fa, $16, $07, $f4, $fc, $03, $fa, $f6, $03, $fd, $ed
233a6     0F F7 E5 F0 
233aa     09 06 04 D8 
233ae     F0 13 EE E8 
233b2     0F FC E8 F7 | 	byte	$0f, $f7, $e5, $f0, $09, $06, $04, $d8, $f0, $13, $ee, $e8, $0f, $fc, $e8, $f7
233b6     F1 EB F7 F4 
233ba     F3 E2 E5 EB 
233be     13 00 DC FF 
233c2     F3 EA E8 FD | 	byte	$f1, $eb, $f7, $f4, $f3, $e2, $e5, $eb, $13, $00, $dc, $ff, $f3, $ea, $e8, $fd
233c6     FF F7 EE F0 
233ca     10 F1 ED 01 
233ce     F3 F1 07 F1 
233d2     F0 07 F7 F7 | 	byte	$ff, $f7, $ee, $f0, $10, $f1, $ed, $01, $f3, $f1, $07, $f1, $f0, $07, $f7, $f7
233d6     FA 09 FD 0C 
233da     1C 03 0F 00 
233de     12 2B 03 06 
233e2     24 15 09 0F | 	byte	$fa, $09, $fd, $0c, $1c, $03, $0f, $00, $12, $2b, $03, $06, $24, $15, $09, $0f
233e6     18 10 12 04 
233ea     06 0F FA 19 
233ee     12 13 00 03 
233f2     09 16 F7 F7 | 	byte	$18, $10, $12, $04, $06, $0f, $fa, $19, $12, $13, $00, $03, $09, $16, $f7, $f7
233f6     F0 09 0F 03 
233fa     03 0F F7 03 
233fe     FA F7 F9 F0 
23402     06 EE 0A 00 | 	byte	$f0, $09, $0f, $03, $03, $0f, $f7, $03, $fa, $f7, $f9, $f0, $06, $ee, $0a, $00
23406     00 07 FA FA 
2340a     09 FD EA 0F 
2340e     0C 13 0C 07 
23412     00 07 03 F6 | 	byte	$00, $07, $fa, $fa, $09, $fd, $ea, $0f, $0c, $13, $0c, $07, $00, $07, $03, $f6
23416     15 FA 00 06 
2341a     07 F1 00 0A 
2341e     FD 04 F3 F6 
23422     03 FF EB F7 | 	byte	$15, $fa, $00, $06, $07, $f1, $00, $0a, $fd, $04, $f3, $f6, $03, $ff, $eb, $f7
23426     F0 EE 06 E5 
2342a     D2 04 F3 09 
2342e     EA 00 FA 01 
23432     EB EE 1E 04 | 	byte	$f0, $ee, $06, $e5, $d2, $04, $f3, $09, $ea, $00, $fa, $01, $eb, $ee, $1e, $04
23436     07 10 09 03 
2343a     0F 12 F9 12 
2343e     27 0F 27 0A 
23442     EE 1C 15 18 | 	byte	$07, $10, $09, $03, $0f, $12, $f9, $12, $27, $0f, $27, $0a, $ee, $1c, $15, $18
23446     10 09 0A 21 
2344a     0F 03 09 07 
2344e     0F 1B F3 DF 
23452     1E 00 F4 03 | 	byte	$10, $09, $0a, $21, $0f, $03, $09, $07, $0f, $1b, $f3, $df, $1e, $00, $f4, $03
23456     FA ED 07 00 
2345a     DC 0C F7 F0 
2345e     E8 FC F6 09 
23462     00 F4 00 F9 | 	byte	$fa, $ed, $07, $00, $dc, $0c, $f7, $f0, $e8, $fc, $f6, $09, $00, $f4, $00, $f9
23466     01 0C F7 E8 
2346a     0D 06 F0 06 
2346e     01 F7 19 19 
23472     F7 18 01 03 | 	byte	$01, $0c, $f7, $e8, $0d, $06, $f0, $06, $01, $f7, $19, $19, $f7, $18, $01, $03
23476     12 E7 EE 0C 
2347a     FD F9 0A 10 
2347e     F3 FA FD FA 
23482     19 FC ED FD | 	byte	$12, $e7, $ee, $0c, $fd, $f9, $0a, $10, $f3, $fa, $fd, $fa, $19, $fc, $ed, $fd
23486     00 03 F3 FA 
2348a     09 10 03 DF 
2348e     09 0F EA 1B 
23492     F9 FD 1F 0F | 	byte	$00, $03, $f3, $fa, $09, $10, $03, $df, $09, $0f, $ea, $1b, $f9, $fd, $1f, $0f
23496     F4 03 13 03 
2349a     0F 16 FD 19 
2349e     1B 07 12 06 
234a2     03 0F 06 07 | 	byte	$f4, $03, $13, $03, $0f, $16, $fd, $19, $1b, $07, $12, $06, $03, $0f, $06, $07
234a6     07 0C 04 15 
234aa     01 F1 1B 01 
234ae     E4 09 09 E8 
234b2     03 F0 E8 E5 | 	byte	$07, $0c, $04, $15, $01, $f1, $1b, $01, $e4, $09, $09, $e8, $03, $f0, $e8, $e5
234b6     FF F3 FF F7 
234ba     F1 04 03 E1 
234be     FD FF FD EE 
234c2     F0 E7 00 06 | 	byte	$ff, $f3, $ff, $f7, $f1, $04, $03, $e1, $fd, $ff, $fd, $ee, $f0, $e7, $00, $06
234c6     F1 F3 FC FC 
234ca     04 01 F7 FC 
234ce     09 01 1B FA 
234d2     FC F7 FF 09 | 	byte	$f1, $f3, $fc, $fc, $04, $01, $f7, $fc, $09, $01, $1b, $fa, $fc, $f7, $ff, $09
234d6     09 03 07 24 
234da     FA F4 12 12 
234de     00 0C 15 FD 
234e2     04 0C F3 F9 | 	byte	$09, $03, $07, $24, $fa, $f4, $12, $12, $00, $0c, $15, $fd, $04, $0c, $f3, $f9
234e6     0C 0A 06 03 
234ea     FF F9 04 F7 
234ee     F7 F6 00 F0 
234f2     ED 0D FC FA | 	byte	$0c, $0a, $06, $03, $ff, $f9, $04, $f7, $f7, $f6, $00, $f0, $ed, $0d, $fc, $fa
234f6     01 06 F7 F3 
234fa     00 04 F1 FA 
234fe     03 FA 09 FF 
23502     E8 FA FD 04 | 	byte	$01, $06, $f7, $f3, $00, $04, $f1, $fa, $03, $fa, $09, $ff, $e8, $fa, $fd, $04
23506     E2 F3 EE F7 
2350a     F4 F7 EB FD 
2350e     07 E5 F6 EE 
23512     FF 0C FC F3 | 	byte	$e2, $f3, $ee, $f7, $f4, $f7, $eb, $fd, $07, $e5, $f6, $ee, $ff, $0c, $fc, $f3
23516     03 FF 01 F3 
2351a     F7 F0 06 07 
2351e     FD 03 FD 06 
23522     0F 06 EE 2D | 	byte	$03, $ff, $01, $f3, $f7, $f0, $06, $07, $fd, $03, $fd, $06, $0f, $06, $ee, $2d
23526     15 FC 07 0F 
2352a     FA 06 1C 03 
2352e     FD 12 10 0F 
23532     FF 0C 19 15 | 	byte	$15, $fc, $07, $0f, $fa, $06, $1c, $03, $fd, $12, $10, $0f, $ff, $0c, $19, $15
23536     F7 00 FD 18 
2353a     FD 1C 07 0F 
2353e     0F F7 2B 04 
23542     01 07 03 03 | 	byte	$f7, $00, $fd, $18, $fd, $1c, $07, $0f, $0f, $f7, $2b, $04, $01, $07, $03, $03
23546     19 0D F7 04 
2354a     0F EE 27 06 
2354e     09 10 0F 01 
23552     F7 00 00 15 | 	byte	$19, $0d, $f7, $04, $0f, $ee, $27, $06, $09, $10, $0f, $01, $f7, $00, $00, $15
23556     03 F4 09 0A 
2355a     F3 06 01 ED 
2355e     00 07 EE F7 
23562     F6 F4 01 EA | 	byte	$03, $f4, $09, $0a, $f3, $06, $01, $ed, $00, $07, $ee, $f7, $f6, $f4, $01, $ea
23566     D9 EE F9 D8 
2356a     F1 F0 E5 F4 
2356e     EA EA E8 F3 
23572     E4 00 00 E5 | 	byte	$d9, $ee, $f9, $d8, $f1, $f0, $e5, $f4, $ea, $ea, $e8, $f3, $e4, $00, $00, $e5
23576     F7 FF F4 FC 
2357a     01 F4 FA EA 
2357e     03 FF FD F7 
23582     F7 FC 0F 12 | 	byte	$f7, $ff, $f4, $fc, $01, $f4, $fa, $ea, $03, $ff, $fd, $f7, $f7, $fc, $0f, $12
23586     00 E5 FC 16 
2358a     00 03 0D FA 
2358e     0F 10 01 19 
23592     03 10 04 06 | 	byte	$00, $e5, $fc, $16, $00, $03, $0d, $fa, $0f, $10, $01, $19, $03, $10, $04, $06
23596     0C 0F 0A 0D 
2359a     1B FA 12 21 
2359e     0D 0F 27 0D 
235a2     18 1E F9 FD | 	byte	$0c, $0f, $0a, $0d, $1b, $fa, $12, $21, $0d, $0f, $27, $0d, $18, $1e, $f9, $fd
235a6     07 10 0A 0C 
235aa     12 0C 1C 13 
235ae     0A FD FF 0C 
235b2     09 04 01 09 | 	byte	$07, $10, $0a, $0c, $12, $0c, $1c, $13, $0a, $fd, $ff, $0c, $09, $04, $01, $09
235b6     00 FC 0A FA 
235ba     FC 19 0C FA 
235be     10 01 F7 01 
235c2     03 1B 18 F4 | 	byte	$00, $fc, $0a, $fa, $fc, $19, $0c, $fa, $10, $01, $f7, $01, $03, $1b, $18, $f4
235c6     01 06 00 EE 
235ca     FA F9 00 00 
235ce     04 06 F6 FD 
235d2     F4 F9 FD EA | 	byte	$01, $06, $00, $ee, $fa, $f9, $00, $00, $04, $06, $f6, $fd, $f4, $f9, $fd, $ea
235d6     FA F9 F1 0F 
235da     F0 D6 03 F3 
235de     EB F3 E4 F1 
235e2     F0 EA E1 F7 | 	byte	$fa, $f9, $f1, $0f, $f0, $d6, $03, $f3, $eb, $f3, $e4, $f1, $f0, $ea, $e1, $f7
235e6     E2 E5 E7 E7 
235ea     F4 04 EE E8 
235ee     F0 00 04 F6 
235f2     03 FC 09 00 | 	byte	$e2, $e5, $e7, $e7, $f4, $04, $ee, $e8, $f0, $00, $04, $f6, $03, $fc, $09, $00
235f6     FA 01 F3 FD 
235fa     18 06 0C 18 
235fe     01 03 09 04 
23602     1E 1B FD E5 | 	byte	$fa, $01, $f3, $fd, $18, $06, $0c, $18, $01, $03, $09, $04, $1e, $1b, $fd, $e5
23606     00 0A 13 03 
2360a     F9 FC 09 0A 
2360e     FA F7 FA 10 
23612     16 00 00 04 | 	byte	$00, $0a, $13, $03, $f9, $fc, $09, $0a, $fa, $f7, $fa, $10, $16, $00, $00, $04
23616     FF 10 03 F7 
2361a     01 18 06 01 
2361e     01 15 FC 0A 
23622     00 10 07 09 | 	byte	$ff, $10, $03, $f7, $01, $18, $06, $01, $01, $15, $fc, $0a, $00, $10, $07, $09
23626     03 00 FD F7 
2362a     1B 0C FD 13 
2362e     F7 07 04 04 
23632     07 06 01 0F | 	byte	$03, $00, $fd, $f7, $1b, $0c, $fd, $13, $f7, $07, $04, $04, $07, $06, $01, $0f
23636     01 03 01 01 
2363a     04 06 00 04 
2363e     07 03 0C 03 
23642     03 04 0F 03 | 	byte	$01, $03, $01, $01, $04, $06, $00, $04, $07, $03, $0c, $03, $03, $04, $0f, $03
23646     F7 F4 04 03 
2364a     F7 16 09 01 
2364e     12 0A 03 0D 
23652     1B F4 F4 06 | 	byte	$f7, $f4, $04, $03, $f7, $16, $09, $01, $12, $0a, $03, $0d, $1b, $f4, $f4, $06
23656     04 FF F4 F9 
2365a     FC F7 00 FC 
2365e     00 FA E8 EE 
23662     F1 F1 F0 FD | 	byte	$04, $ff, $f4, $f9, $fc, $f7, $00, $fc, $00, $fa, $e8, $ee, $f1, $f1, $f0, $fd
23666     F0 ED F0 FD 
2366a     FD EE F4 FA 
2366e     F4 00 01 EB 
23672     EE FF F6 F0 | 	byte	$f0, $ed, $f0, $fd, $fd, $ee, $f4, $fa, $f4, $00, $01, $eb, $ee, $ff, $f6, $f0
23676     FC EE F7 F3 
2367a     00 F9 ED FF 
2367e     F0 F3 FD F3 
23682     F7 09 06 03 | 	byte	$fc, $ee, $f7, $f3, $00, $f9, $ed, $ff, $f0, $f3, $fd, $f3, $f7, $09, $06, $03
23686     FC F7 FD 03 
2368a     F9 F3 00 FD 
2368e     10 0A 0A 01 
23692     0C 06 0F 0C | 	byte	$fc, $f7, $fd, $03, $f9, $f3, $00, $fd, $10, $0a, $0a, $01, $0c, $06, $0f, $0c
23696     06 19 18 19 
2369a     0F 1B 28 1C 
2369e     10 18 19 0C 
236a2     04 27 24 06 | 	byte	$06, $19, $18, $19, $0f, $1b, $28, $1c, $10, $18, $19, $0c, $04, $27, $24, $06
236a6     0F 0F 0F 06 
236aa     0A 0C 13 0C 
236ae     06 01 00 FC 
236b2     16 06 04 18 | 	byte	$0f, $0f, $0f, $06, $0a, $0c, $13, $0c, $06, $01, $00, $fc, $16, $06, $04, $18
236b6     FD EE 06 06 
236ba     FC F1 F4 12 
236be     01 EE 00 FA 
236c2     EB F4 F9 FD | 	byte	$fd, $ee, $06, $06, $fc, $f1, $f4, $12, $01, $ee, $00, $fa, $eb, $f4, $f9, $fd
236c6     E8 01 FD F4 
236ca     ED FA F4 F7 
236ce     F1 F7 FD E5 
236d2     FD F7 F1 F1 | 	byte	$e8, $01, $fd, $f4, $ed, $fa, $f4, $f7, $f1, $f7, $fd, $e5, $fd, $f7, $f1, $f1
236d6     01 FD E7 F3 
236da     EA FF F7 F0 
236de     F3 03 F9 E8 
236e2     12 EE F4 F0 | 	byte	$01, $fd, $e7, $f3, $ea, $ff, $f7, $f0, $f3, $03, $f9, $e8, $12, $ee, $f4, $f0
236e6     EB EE EA F9 
236ea     F7 F7 FA F4 
236ee     EB FA 0F F9 
236f2     FA FC 0F 00 | 	byte	$eb, $ee, $ea, $f9, $f7, $f7, $fa, $f4, $eb, $fa, $0f, $f9, $fa, $fc, $0f, $00
236f6     0F F6 03 00 
236fa     0F 18 07 04 
236fe     18 06 09 FA 
23702     09 16 06 FF | 	byte	$0f, $f6, $03, $00, $0f, $18, $07, $04, $18, $06, $09, $fa, $09, $16, $06, $ff
23706     1F 0F F4 09 
2370a     16 01 13 16 
2370e     18 00 13 0C 
23712     18 03 0F 09 | 	byte	$1f, $0f, $f4, $09, $16, $01, $13, $16, $18, $00, $13, $0c, $18, $03, $0f, $09
23716     03 0F 04 18 
2371a     16 0C 18 0C 
2371e     0D FF 04 0F 
23722     03 F4 01 07 | 	byte	$03, $0f, $04, $18, $16, $0c, $18, $0c, $0d, $ff, $04, $0f, $03, $f4, $01, $07
23726     00 10 01 04 
2372a     09 0F 03 F1 
2372e     04 04 04 01 
23732     FD F4 ED 09 | 	byte	$00, $10, $01, $04, $09, $0f, $03, $f1, $04, $04, $04, $01, $fd, $f4, $ed, $09
23736     06 00 F9 FC 
2373a     09 F4 EE F4 
2373e     F7 EB F7 F4 
23742     EB FD F9 F4 | 	byte	$06, $00, $f9, $fc, $09, $f4, $ee, $f4, $f7, $eb, $f7, $f4, $eb, $fd, $f9, $f4
23746     EE E8 FD FD 
2374a     FC 06 F9 E8 
2374e     E8 F9 F3 FC 
23752     03 F4 FA 00 | 	byte	$ee, $e8, $fd, $fd, $fc, $06, $f9, $e8, $e8, $f9, $f3, $fc, $03, $f4, $fa, $00
23756     F7 F7 EE 00 
2375a     01 06 00 FA 
2375e     F4 FA 0C FD 
23762     FC F0 EB 06 | 	byte	$f7, $f7, $ee, $00, $01, $06, $00, $fa, $f4, $fa, $0c, $fd, $fc, $f0, $eb, $06
23766     10 04 F9 EB 
2376a     12 F6 F7 0A 
2376e     E8 0A 09 0F 
23772     09 00 00 0C | 	byte	$10, $04, $f9, $eb, $12, $f6, $f7, $0a, $e8, $0a, $09, $0f, $09, $00, $00, $0c
23776     0D 00 FD 10 
2377a     0A FD FD 1C 
2377e     0A 1C 04 10 
23782     04 0A 06 13 | 	byte	$0d, $00, $fd, $10, $0a, $fd, $fd, $1c, $0a, $1c, $04, $10, $04, $0a, $06, $13
23786     1C FA 0F 0A 
2378a     10 18 09 0A 
2378e     FC 0F 10 09 
23792     EB FA 04 06 | 	byte	$1c, $fa, $0f, $0a, $10, $18, $09, $0a, $fc, $0f, $10, $09, $eb, $fa, $04, $06
23796     09 00 EE F7 
2379a     F1 06 03 FA 
2379e     03 F1 00 FC 
237a2     01 F1 F1 FC | 	byte	$09, $00, $ee, $f7, $f1, $06, $03, $fa, $03, $f1, $00, $fc, $01, $f1, $f1, $fc
237a6     F4 FD 01 01 
237aa     06 0F 13 00 
237ae     19 FA 03 03 
237b2     00 04 0F FD | 	byte	$f4, $fd, $01, $01, $06, $0f, $13, $00, $19, $fa, $03, $03, $00, $04, $0f, $fd
237b6     0C 10 0A 0F 
237ba     0F 16 0A 07 
237be     00 F7 0A FD 
237c2     F1 F1 F9 04 | 	byte	$0c, $10, $0a, $0f, $0f, $16, $0a, $07, $00, $f7, $0a, $fd, $f1, $f1, $f9, $04
237c6     0D F7 F7 E8 
237ca     F0 ED F4 F4 
237ce     E2 FA E8 E8 
237d2     EB F4 01 FA | 	byte	$0d, $f7, $f7, $e8, $f0, $ed, $f4, $f4, $e2, $fa, $e8, $e8, $eb, $f4, $01, $fa
237d6     FA 01 E8 EB 
237da     F9 DB F0 F3 
237de     F0 F4 FC F9 
237e2     F4 F1 FA FF | 	byte	$fa, $01, $e8, $eb, $f9, $db, $f0, $f3, $f0, $f4, $fc, $f9, $f4, $f1, $fa, $ff
237e6     FC 04 EA F1 
237ea     10 FF 03 0F 
237ee     06 F7 00 03 
237f2     FD FA 0C 0A | 	byte	$fc, $04, $ea, $f1, $10, $ff, $03, $0f, $06, $f7, $00, $03, $fd, $fa, $0c, $0a
237f6     00 03 0A 06 
237fa     FC 09 03 01 
237fe     0A 16 0A 07 
23802     0C 0C 06 18 | 	byte	$00, $03, $0a, $06, $fc, $09, $03, $01, $0a, $16, $0a, $07, $0c, $0c, $06, $18
23806     04 1B 18 0F 
2380a     0D 13 00 09 
2380e     1E 27 07 01 
23812     1C 13 10 03 | 	byte	$04, $1b, $18, $0f, $0d, $13, $00, $09, $1e, $27, $07, $01, $1c, $13, $10, $03
23816     0A 09 06 16 
2381a     0D FD 0F FF 
2381e     0F F9 00 0D 
23822     0A F9 EB 01 | 	byte	$0a, $09, $06, $16, $0d, $fd, $0f, $ff, $0f, $f9, $00, $0d, $0a, $f9, $eb, $01
23826     00 FC F3 DF 
2382a     F7 FD 06 E8 
2382e     F0 F4 01 F0 
23832     FA 04 F1 0D | 	byte	$00, $fc, $f3, $df, $f7, $fd, $06, $e8, $f0, $f4, $01, $f0, $fa, $04, $f1, $0d
23836     FC 07 F7 F1 
2383a     04 F4 F7 09 
2383e     FF FC FC FF 
23842     FD F0 06 EE | 	byte	$fc, $07, $f7, $f1, $04, $f4, $f7, $09, $ff, $fc, $fc, $ff, $fd, $f0, $06, $ee
23846     FF F7 F7 F4 
2384a     F9 01 EE 0F 
2384e     F0 F0 00 F3 
23852     FA 00 F7 F9 | 	byte	$ff, $f7, $f7, $f4, $f9, $01, $ee, $0f, $f0, $f0, $00, $f3, $fa, $00, $f7, $f9
23856     0C 03 0A 0A 
2385a     07 0F 03 FD 
2385e     F7 01 06 00 
23862     0F FF 16 13 | 	byte	$0c, $03, $0a, $0a, $07, $0f, $03, $fd, $f7, $01, $06, $00, $0f, $ff, $16, $13
23866     00 0F 04 01 
2386a     10 0C F6 F4 
2386e     06 0C 10 10 
23872     00 10 09 15 | 	byte	$00, $0f, $04, $01, $10, $0c, $f6, $f4, $06, $0c, $10, $10, $00, $10, $09, $15
23876     06 FD FF FD 
2387a     0A 06 09 F4 
2387e     F9 F3 FA 00 
23882     03 0F F6 09 | 	byte	$06, $fd, $ff, $fd, $0a, $06, $09, $f4, $f9, $f3, $fa, $00, $03, $0f, $f6, $09
23886     F4 FA 03 FC 
2388a     03 FC 0F 03 
2388e     F7 ED F7 EE 
23892     0A 00 0A F7 | 	byte	$f4, $fa, $03, $fc, $03, $fc, $0f, $03, $f7, $ed, $f7, $ee, $0a, $00, $0a, $f7
23896     E8 F1 04 00 
2389a     FF 00 F1 10 
2389e     FD FA FD FF 
238a2     01 03 1E 0F | 	byte	$e8, $f1, $04, $00, $ff, $00, $f1, $10, $fd, $fa, $fd, $ff, $01, $03, $1e, $0f
238a6     0F 19 19 09 
238aa     04 15 1C 10 
238ae     15 07 10 16 
238b2     09 06 12 13 | 	byte	$0f, $19, $19, $09, $04, $15, $1c, $10, $15, $07, $10, $16, $09, $06, $12, $13
238b6     06 01 06 01 
238ba     07 07 03 F9 
238be     F7 07 06 FD 
238c2     FA 0F FA F0 | 	byte	$06, $01, $06, $01, $07, $07, $03, $f9, $f7, $07, $06, $fd, $fa, $0f, $fa, $f0
238c6     F4 F9 E1 E8 
238ca     FA ED EB E8 
238ce     E4 F6 FA E7 
238d2     F3 FD F9 FA | 	byte	$f4, $f9, $e1, $e8, $fa, $ed, $eb, $e8, $e4, $f6, $fa, $e7, $f3, $fd, $f9, $fa
238d6     FF F4 FF FD 
238da     FA 06 F0 F0 
238de     03 09 09 00 
238e2     07 01 FA 00 | 	byte	$ff, $f4, $ff, $fd, $fa, $06, $f0, $f0, $03, $09, $09, $00, $07, $01, $fa, $00
238e6     06 09 01 03 
238ea     F0 F6 01 0C 
238ee     07 06 FF FD 
238f2     FC F7 0C 00 | 	byte	$06, $09, $01, $03, $f0, $f6, $01, $0c, $07, $06, $ff, $fd, $fc, $f7, $0c, $00
238f6     F7 F3 EB 03 
238fa     07 FD FD FD 
238fe     09 0F 0C F1 
23902     F7 09 0C 0C | 	byte	$f7, $f3, $eb, $03, $07, $fd, $fd, $fd, $09, $0f, $0c, $f1, $f7, $09, $0c, $0c
23906     04 0F 06 09 
2390a     07 FD 16 10 
2390e     07 0D 06 07 
23912     09 09 10 0F | 	byte	$04, $0f, $06, $09, $07, $fd, $16, $10, $07, $0d, $06, $07, $09, $09, $10, $0f
23916     07 07 09 FC 
2391a     12 0C FF 07 
2391e     12 FC 0A 0C 
23922     00 04 06 FD | 	byte	$07, $07, $09, $fc, $12, $0c, $ff, $07, $12, $fc, $0a, $0c, $00, $04, $06, $fd
23926     04 07 09 04 
2392a     00 FA 09 0C 
2392e     0A 03 F7 FA 
23932     FC FF F9 03 | 	byte	$04, $07, $09, $04, $00, $fa, $09, $0c, $0a, $03, $f7, $fa, $fc, $ff, $f9, $03
23936     FF 00 F9 FA 
2393a     FA 01 F9 F7 
2393e     00 FD EB 0A 
23942     EE E8 F0 FA | 	byte	$ff, $00, $f9, $fa, $fa, $01, $f9, $f7, $00, $fd, $eb, $0a, $ee, $e8, $f0, $fa
23946     F3 EB ED E8 
2394a     00 F7 F0 E8 
2394e     DF F3 FC ED 
23952     E5 F7 E4 F3 | 	byte	$f3, $eb, $ed, $e8, $00, $f7, $f0, $e8, $df, $f3, $fc, $ed, $e5, $f7, $e4, $f3
23956     F4 E8 E8 FF 
2395a     00 E7 FF FD 
2395e     F3 FF 0D 0A 
23962     0D 10 0F 01 | 	byte	$f4, $e8, $e8, $ff, $00, $e7, $ff, $fd, $f3, $ff, $0d, $0a, $0d, $10, $0f, $01
23966     0A 0F 13 1E 
2396a     00 19 13 1B 
2396e     0F 07 0A 1B 
23972     12 06 0C 0C | 	byte	$0a, $0f, $13, $1e, $00, $19, $13, $1b, $0f, $07, $0a, $1b, $12, $06, $0c, $0c
23976     00 09 FD 00 
2397a     18 0A 04 01 
2397e     F7 0F 04 06 
23982     04 00 01 07 | 	byte	$00, $09, $fd, $00, $18, $0a, $04, $01, $f7, $0f, $04, $06, $04, $00, $01, $07
23986     06 07 0C 00 
2398a     16 18 04 10 
2398e     01 0C 0C 07 
23992     12 16 09 12 | 	byte	$06, $07, $0c, $00, $16, $18, $04, $10, $01, $0c, $0c, $07, $12, $16, $09, $12
23996     FD FF 09 0C 
2399a     FD 07 F9 06 
2399e     03 FF FF 0C 
239a2     01 00 FC F0 | 	byte	$fd, $ff, $09, $0c, $fd, $07, $f9, $06, $03, $ff, $ff, $0c, $01, $00, $fc, $f0
239a6     F1 FD 01 F0 
239aa     DC FD FD F9 
239ae     F1 F4 F6 F0 
239b2     FA F4 F3 EA | 	byte	$f1, $fd, $01, $f0, $dc, $fd, $fd, $f9, $f1, $f4, $f6, $f0, $fa, $f4, $f3, $ea
239b6     00 F4 ED E8 
239ba     06 00 FF E5 
239be     F7 FC F9 F7 
239c2     F6 F7 00 FD | 	byte	$00, $f4, $ed, $e8, $06, $00, $ff, $e5, $f7, $fc, $f9, $f7, $f6, $f7, $00, $fd
239c6     F4 F9 00 06 
239ca     FF EE 09 0A 
239ce     0A 01 03 FC 
239d2     FC 06 F1 01 | 	byte	$f4, $f9, $00, $06, $ff, $ee, $09, $0a, $0a, $01, $03, $fc, $fc, $06, $f1, $01
239d6     12 F7 FF 03 
239da     07 09 09 F4 
239de     F7 00 09 03 
239e2     06 00 0F 0F | 	byte	$12, $f7, $ff, $03, $07, $09, $09, $f4, $f7, $00, $09, $03, $06, $00, $0f, $0f
239e6     0F 00 07 0C 
239ea     13 FF 09 FF 
239ee     0A 01 07 16 
239f2     FA 10 09 FA | 	byte	$0f, $00, $07, $0c, $13, $ff, $09, $ff, $0a, $01, $07, $16, $fa, $10, $09, $fa
239f6     F4 FF 00 07 
239fa     FA F7 06 F7 
239fe     F7 06 03 FC 
23a02     0A 00 0A FD | 	byte	$f4, $ff, $00, $07, $fa, $f7, $06, $f7, $f7, $06, $03, $fc, $0a, $00, $0a, $fd
23a06     00 04 09 06 
23a0a     07 16 06 07 
23a0e     07 18 00 F9 
23a12     04 0A 15 15 | 	byte	$00, $04, $09, $06, $07, $16, $06, $07, $07, $18, $00, $f9, $04, $0a, $15, $15
23a16     03 0C 12 01 
23a1a     10 15 04 0F 
23a1e     22 0D 12 0A 
23a22     01 16 0A FF | 	byte	$03, $0c, $12, $01, $10, $15, $04, $0f, $22, $0d, $12, $0a, $01, $16, $0a, $ff
23a26     FC 12 FD 04 
23a2a     F6 F3 FC FC 
23a2e     00 F7 EB ED 
23a32     F1 E8 EB EB | 	byte	$fc, $12, $fd, $04, $f6, $f3, $fc, $fc, $00, $f7, $eb, $ed, $f1, $e8, $eb, $eb
23a36     F4 F7 F0 E5 
23a3a     F4 F3 E8 E5 
23a3e     E4 F1 E2 ED 
23a42     F7 E7 FA FF | 	byte	$f4, $f7, $f0, $e5, $f4, $f3, $e8, $e5, $e4, $f1, $e2, $ed, $f7, $e7, $fa, $ff
23a46     F0 03 F9 03 
23a4a     13 01 F7 03 
23a4e     10 FC 04 06 
23a52     09 06 15 06 | 	byte	$f0, $03, $f9, $03, $13, $01, $f7, $03, $10, $fc, $04, $06, $09, $06, $15, $06
23a56     04 09 04 0A 
23a5a     0C 0F 00 15 
23a5e     F9 FC 0A FA 
23a62     FA 06 FC FF | 	byte	$04, $09, $04, $0a, $0c, $0f, $00, $15, $f9, $fc, $0a, $fa, $fa, $06, $fc, $ff
23a66     09 07 0A 03 
23a6a     FD FA F1 F3 
23a6e     03 09 F9 04 
23a72     F7 00 00 FF | 	byte	$09, $07, $0a, $03, $fd, $fa, $f1, $f3, $03, $09, $f9, $04, $f7, $00, $00, $ff
23a76     F3 06 F4 FA 
23a7a     01 0C FD 01 
23a7e     00 FD 04 0F 
23a82     0A 03 0A 0F | 	byte	$f3, $06, $f4, $fa, $01, $0c, $fd, $01, $00, $fd, $04, $0f, $0a, $03, $0a, $0f
23a86     F9 13 18 24 
23a8a     15 04 10 0C 
23a8e     04 09 0F 06 
23a92     13 03 04 03 | 	byte	$f9, $13, $18, $24, $15, $04, $10, $0c, $04, $09, $0f, $06, $13, $03, $04, $03
23a96     06 FD 09 07 
23a9a     FD 04 FD EB 
23a9e     F6 F7 FD F7 
23aa2     FD F6 EA FA | 	byte	$06, $fd, $09, $07, $fd, $04, $fd, $eb, $f6, $f7, $fd, $f7, $fd, $f6, $ea, $fa
23aa6     00 EB FC 00 
23aaa     03 FD FA F9 
23aae     FC F7 03 07 
23ab2     FA F4 07 F7 | 	byte	$00, $eb, $fc, $00, $03, $fd, $fa, $f9, $fc, $f7, $03, $07, $fa, $f4, $07, $f7
23ab6     03 0A 00 07 
23aba     0C FA 03 F4 
23abe     F7 FA FD F3 
23ac2     06 FC ED F1 | 	byte	$03, $0a, $00, $07, $0c, $fa, $03, $f4, $f7, $fa, $fd, $f3, $06, $fc, $ed, $f1
23ac6     09 FF EE 03 
23aca     FF 0F FF F1 
23ace     FC FC 03 00 
23ad2     06 F4 FC 01 | 	byte	$09, $ff, $ee, $03, $ff, $0f, $ff, $f1, $fc, $fc, $03, $00, $06, $f4, $fc, $01
23ad6     F9 F4 01 03 
23ada     F4 FA 00 01 
23ade     F1 00 FF 03 
23ae2     FA FA 0C 01 | 	byte	$f9, $f4, $01, $03, $f4, $fa, $00, $01, $f1, $00, $ff, $03, $fa, $fa, $0c, $01
23ae6     01 09 0D 0A 
23aea     09 00 06 06 
23aee     0C FD 0A 0A 
23af2     FC 07 03 0A | 	byte	$01, $09, $0d, $0a, $09, $00, $06, $06, $0c, $fd, $0a, $0a, $fc, $07, $03, $0a
23af6     0A 09 FD 12 
23afa     04 0A 01 06 
23afe     FD 0A 04 FD 
23b02     0F 01 01 12 | 	byte	$0a, $09, $fd, $12, $04, $0a, $01, $06, $fd, $0a, $04, $fd, $0f, $01, $01, $12
23b06     0F FD 00 01 
23b0a     01 0F 01 09 
23b0e     FC 0A 04 07 
23b12     FD 01 0A 03 | 	byte	$0f, $fd, $00, $01, $01, $0f, $01, $09, $fc, $0a, $04, $07, $fd, $01, $0a, $03
23b16     F7 00 01 01 
23b1a     FA 03 FA 00 
23b1e     07 FD FA F9 
23b22     FF F9 F7 EB | 	byte	$f7, $00, $01, $01, $fa, $03, $fa, $00, $07, $fd, $fa, $f9, $ff, $f9, $f7, $eb
23b26     FC F7 ED F4 
23b2a     FA F3 F9 FC 
23b2e     F4 FC FF FA 
23b32     0A 00 F4 00 | 	byte	$fc, $f7, $ed, $f4, $fa, $f3, $f9, $fc, $f4, $fc, $ff, $fa, $0a, $00, $f4, $00
23b36     09 FA 03 09 
23b3a     09 0F 18 F1 
23b3e     13 0F 06 0A 
23b42     FA 00 07 0A | 	byte	$09, $fa, $03, $09, $09, $0f, $18, $f1, $13, $0f, $06, $0a, $fa, $00, $07, $0a
23b46     01 0A FF 03 
23b4a     01 FD F3 00 
23b4e     03 FF 00 FA 
23b52     03 F6 ED 06 | 	byte	$01, $0a, $ff, $03, $01, $fd, $f3, $00, $03, $ff, $00, $fa, $03, $f6, $ed, $06
23b56     FC F6 F0 F9 
23b5a     03 F7 FA 03 
23b5e     00 F7 FA 0C 
23b62     06 FF FC F9 | 	byte	$fc, $f6, $f0, $f9, $03, $f7, $fa, $03, $00, $f7, $fa, $0c, $06, $ff, $fc, $f9
23b66     FA 04 00 09 
23b6a     03 15 09 06 
23b6e     0A 04 03 00 
23b72     FF 0F 0F 0A | 	byte	$fa, $04, $00, $09, $03, $15, $09, $06, $0a, $04, $03, $00, $ff, $0f, $0f, $0a
23b76     0F FD 12 03 
23b7a     13 F7 01 09 
23b7e     0D 00 F7 FC 
23b82     01 07 00 00 | 	byte	$0f, $fd, $12, $03, $13, $f7, $01, $09, $0d, $00, $f7, $fc, $01, $07, $00, $00
23b86     03 00 F1 FA 
23b8a     F7 F4 FD F3 
23b8e     00 F9 F7 01 
23b92     F0 FF 00 01 | 	byte	$03, $00, $f1, $fa, $f7, $f4, $fd, $f3, $00, $f9, $f7, $01, $f0, $ff, $00, $01
23b96     0C FD 06 09 
23b9a     01 01 F4 FD 
23b9e     0A 07 06 00 
23ba2     FA 09 07 FA | 	byte	$0c, $fd, $06, $09, $01, $01, $f4, $fd, $0a, $07, $06, $00, $fa, $09, $07, $fa
23ba6     0F 0C FD FC 
23baa     09 00 FD FA 
23bae     FF 03 F7 FC 
23bb2     06 F7 F7 FA | 	byte	$0f, $0c, $fd, $fc, $09, $00, $fd, $fa, $ff, $03, $f7, $fc, $06, $f7, $f7, $fa
23bb6     01 00 F3 F6 
23bba     F3 F7 FA FC 
23bbe     F7 03 03 0A 
23bc2     F7 F0 03 01 | 	byte	$01, $00, $f3, $f6, $f3, $f7, $fa, $fc, $f7, $03, $03, $0a, $f7, $f0, $03, $01
23bc6     01 FF 07 F6 
23bca     07 0F 0A 03 
23bce     FC 06 06 ED 
23bd2     04 04 FD FC | 	byte	$01, $ff, $07, $f6, $07, $0f, $0a, $03, $fc, $06, $06, $ed, $04, $04, $fd, $fc
23bd6     F7 03 00 07 
23bda     0F 07 09 F7 
23bde     00 09 FD F7 
23be2     F9 03 09 03 | 	byte	$f7, $03, $00, $07, $0f, $07, $09, $f7, $00, $09, $fd, $f7, $f9, $03, $09, $03
23be6     00 FC FD F9 
23bea     FC 0D FF 0F 
23bee     03 01 01 0D 
23bf2     0A F9 00 00 | 	byte	$00, $fc, $fd, $f9, $fc, $0d, $ff, $0f, $03, $01, $01, $0d, $0a, $f9, $00, $00
23bf6     FC 03 FA 06 
23bfa     03 06 04 06 
23bfe     F9 01 FC FC 
23c02     10 0A 0F 01 | 	byte	$fc, $03, $fa, $06, $03, $06, $04, $06, $f9, $01, $fc, $fc, $10, $0a, $0f, $01
23c06     0C 03 01 09 
23c0a     0A 06 00 04 
23c0e     FF 0C FA F7 
23c12     F4 09 0F 0C | 	byte	$0c, $03, $01, $09, $0a, $06, $00, $04, $ff, $0c, $fa, $f7, $f4, $09, $0f, $0c
23c16     00 F7 01 06 
23c1a     09 04 F0 FC 
23c1e     00 FF 03 00 
23c22     01 01 F9 F9 | 	byte	$00, $f7, $01, $06, $09, $04, $f0, $fc, $00, $ff, $03, $00, $01, $01, $f9, $f9
23c26     04 0F 01 FC 
23c2a     F4 00 FF 00 
23c2e     F7 ED F7 FA 
23c32     00 F7 F1 F7 | 	byte	$04, $0f, $01, $fc, $f4, $00, $ff, $00, $f7, $ed, $f7, $fa, $00, $f7, $f1, $f7
23c36     F9 F0 00 FF 
23c3a     FA FD 00 FA 
23c3e     01 FA EE F3 
23c42     FD 00 00 04 | 	byte	$f9, $f0, $00, $ff, $fa, $fd, $00, $fa, $01, $fa, $ee, $f3, $fd, $00, $00, $04
23c46     FA F0 F3 FF 
23c4a     04 FD FD 0A 
23c4e     07 06 03 FD 
23c52     0F 0F 0F FD | 	byte	$fa, $f0, $f3, $ff, $04, $fd, $fd, $0a, $07, $06, $03, $fd, $0f, $0f, $0f, $fd
23c56     12 04 00 10 
23c5a     18 09 0C 0A 
23c5e     04 0A 09 00 
23c62     03 03 00 10 | 	byte	$12, $04, $00, $10, $18, $09, $0c, $0a, $04, $0a, $09, $00, $03, $03, $00, $10
23c66     FA 01 00 03 
23c6a     00 FC 06 FF 
23c6e     F3 FA F9 07 
23c72     01 FD FD F7 | 	byte	$fa, $01, $00, $03, $00, $fc, $06, $ff, $f3, $fa, $f9, $07, $01, $fd, $fd, $f7
23c76     03 07 F4 01 
23c7a     01 03 04 07 
23c7e     09 01 07 09 
23c82     FC 09 0A 04 | 	byte	$03, $07, $f4, $01, $01, $03, $04, $07, $09, $01, $07, $09, $fc, $09, $0a, $04
23c86     04 03 0A 0A 
23c8a     09 00 01 01 
23c8e     07 0F 01 00 
23c92     04 F6 0A 04 | 	byte	$04, $03, $0a, $0a, $09, $00, $01, $01, $07, $0f, $01, $00, $04, $f6, $0a, $04
23c96     F3 FF FF FA 
23c9a     F9 00 F9 F7 
23c9e     06 00 FD FA 
23ca2     F7 03 01 F7 | 	byte	$f3, $ff, $ff, $fa, $f9, $00, $f9, $f7, $06, $00, $fd, $fa, $f7, $03, $01, $f7
23ca6     ED 00 FC 06 
23caa     FD FC F4 FA 
23cae     F1 FC 07 EE 
23cb2     FD F9 F3 00 | 	byte	$ed, $00, $fc, $06, $fd, $fc, $f4, $fa, $f1, $fc, $07, $ee, $fd, $f9, $f3, $00
23cb6     FF FF FA 03 
23cba     FD 03 06 F7 
23cbe     FC 00 00 06 
23cc2     00 FF 0A 07 | 	byte	$ff, $ff, $fa, $03, $fd, $03, $06, $f7, $fc, $00, $00, $06, $00, $ff, $0a, $07
23cc6     03 00 00 FF 
23cca     09 09 FC FC 
23cce     10 03 00 FD 
23cd2     03 09 FC F0 | 	byte	$03, $00, $00, $ff, $09, $09, $fc, $fc, $10, $03, $00, $fd, $03, $09, $fc, $f0
23cd6     FA 04 07 0A 
23cda     09 04 01 07 
23cde     F3 03 03 09 
23ce2     0C 00 FA 00 | 	byte	$fa, $04, $07, $0a, $09, $04, $01, $07, $f3, $03, $03, $09, $0c, $00, $fa, $00
23ce6     06 0D 01 FA 
23cea     0F 0A 03 04 
23cee     01 01 09 0C 
23cf2     FF F7 FD 10 | 	byte	$06, $0d, $01, $fa, $0f, $0a, $03, $04, $01, $01, $09, $0c, $ff, $f7, $fd, $10
23cf6     06 F4 03 04 
23cfa     03 01 00 01 
23cfe     01 FF 09 F4 
23d02     F4 0A FF 09 | 	byte	$06, $f4, $03, $04, $03, $01, $00, $01, $01, $ff, $09, $f4, $f4, $0a, $ff, $09
23d06     06 03 09 09 
23d0a     09 00 03 FA 
23d0e     00 07 FF 03 
23d12     03 F9 03 FC | 	byte	$06, $03, $09, $09, $09, $00, $03, $fa, $00, $07, $ff, $03, $03, $f9, $03, $fc
23d16     00 07 F7 FD 
23d1a     F7 F7 FF 03 
23d1e     06 F7 FA 07 
23d22     03 FA FD 03 | 	byte	$00, $07, $f7, $fd, $f7, $f7, $ff, $03, $06, $f7, $fa, $07, $03, $fa, $fd, $03
23d26     FF FA F7 FA 
23d2a     FC 00 F4 FD 
23d2e     F7 F4 03 F7 
23d32     FC 03 F4 FC | 	byte	$ff, $fa, $f7, $fa, $fc, $00, $f4, $fd, $f7, $f4, $03, $f7, $fc, $03, $f4, $fc
23d36     FC 06 03 FA 
23d3a     FC 06 07 03 
23d3e     06 06 00 FD 
23d42     FA 03 06 03 | 	byte	$fc, $06, $03, $fa, $fc, $06, $07, $03, $06, $06, $00, $fd, $fa, $03, $06, $03
23d46     04 FD 01 0F 
23d4a     09 FD FF 01 
23d4e     09 FD 01 09 
23d52     FD FD 07 06 | 	byte	$04, $fd, $01, $0f, $09, $fd, $ff, $01, $09, $fd, $01, $09, $fd, $fd, $07, $06
23d56     FC F7 04 03 
23d5a     06 FC 00 01 
23d5e     00 FD FF FA 
23d62     07 0A 03 04 | 	byte	$fc, $f7, $04, $03, $06, $fc, $00, $01, $00, $fd, $ff, $fa, $07, $0a, $03, $04
23d66     04 00 00 00 
23d6a     07 07 FF FF 
23d6e     0A 0D 03 01 
23d72     FF FC FA 07 | 	byte	$04, $00, $00, $00, $07, $07, $ff, $ff, $0a, $0d, $03, $01, $ff, $fc, $fa, $07
23d76     09 09 06 01 
23d7a     03 06 0D 0A 
23d7e     03 04 04 F7 
23d82     FC FD 00 06 | 	byte	$09, $09, $06, $01, $03, $06, $0d, $0a, $03, $04, $04, $f7, $fc, $fd, $00, $06
23d86     04 FF FC 07 
23d8a     0D 06 00 F9 
23d8e     03 01 00 FA 
23d92     01 FD FF 01 | 	byte	$04, $ff, $fc, $07, $0d, $06, $00, $f9, $03, $01, $00, $fa, $01, $fd, $ff, $01
23d96     04 00 FD FA 
23d9a     FD 04 F4 F7 
23d9e     FF 00 F9 FF 
23da2     FA F4 FD FA | 	byte	$04, $00, $fd, $fa, $fd, $04, $f4, $f7, $ff, $00, $f9, $ff, $fa, $f4, $fd, $fa
23da6     F9 F9 FD 03 
23daa     FA F7 F7 00 
23dae     F9 FA F7 F9 
23db2     F7 00 FA 04 | 	byte	$f9, $f9, $fd, $03, $fa, $f7, $f7, $00, $f9, $fa, $f7, $f9, $f7, $00, $fa, $04
23db6     06 FA FD FF 
23dba     0F 0A 03 00 
23dbe     03 09 07 00 
23dc2     0C 07 0F 0F | 	byte	$06, $fa, $fd, $ff, $0f, $0a, $03, $00, $03, $09, $07, $00, $0c, $07, $0f, $0f
23dc6     03 07 0A 04 
23dca     06 06 01 06 
23dce     0A 00 FF 00 
23dd2     01 09 06 F7 | 	byte	$03, $07, $0a, $04, $06, $06, $01, $06, $0a, $00, $ff, $00, $01, $09, $06, $f7
23dd6     F7 00 00 04 
23dda     FF 09 00 06 
23dde     0C FC F7 F9 
23de2     FD 00 FC 00 | 	byte	$f7, $00, $00, $04, $ff, $09, $00, $06, $0c, $fc, $f7, $f9, $fd, $00, $fc, $00
23de6     01 00 F7 F9 
23dea     00 03 03 00 
23dee     FA FA 00 FD 
23df2     FF F6 FD 0A | 	byte	$01, $00, $f7, $f9, $00, $03, $03, $00, $fa, $fa, $00, $fd, $ff, $f6, $fd, $0a
23df6     00 FA 01 03 
23dfa     FD 03 00 FA 
23dfe     F9 00 FD FC 
23e02     F4 FA F9 FD | 	byte	$00, $fa, $01, $03, $fd, $03, $00, $fa, $f9, $00, $fd, $fc, $f4, $fa, $f9, $fd
23e06     FC FC 03 01 
23e0a     F7 FC FC FF 
23e0e     04 FD FD F7 
23e12     00 00 03 FD | 	byte	$fc, $fc, $03, $01, $f7, $fc, $fc, $ff, $04, $fd, $fd, $f7, $00, $00, $03, $fd
23e16     00 00 01 03 
23e1a     0A 01 03 0A 
23e1e     03 01 FC 07 
23e22     03 00 06 F9 | 	byte	$00, $00, $01, $03, $0a, $01, $03, $0a, $03, $01, $fc, $07, $03, $00, $06, $f9
23e26     04 03 03 03 
23e2a     FD 01 03 09 
23e2e     03 01 FF 07 
23e32     03 07 03 FD | 	byte	$04, $03, $03, $03, $fd, $01, $03, $09, $03, $01, $ff, $07, $03, $07, $03, $fd
23e36     06 0F 0A 04 
23e3a     07 04 06 06 
23e3e     06 01 01 04 
23e42     06 06 F9 04 | 	byte	$06, $0f, $0a, $04, $07, $04, $06, $06, $06, $01, $01, $04, $06, $06, $f9, $04
23e46     00 10 09 01 
23e4a     04 06 06 07 
23e4e     07 04 03 07 
23e52     01 03 F7 F7 | 	byte	$00, $10, $09, $01, $04, $06, $06, $07, $07, $04, $03, $07, $01, $03, $f7, $f7
23e56     FD 04 FD 03 
23e5a     FA F6 FD 01 
23e5e     FD F7 FD 04 
23e62     FA FA F3 FA | 	byte	$fd, $04, $fd, $03, $fa, $f6, $fd, $01, $fd, $f7, $fd, $04, $fa, $fa, $f3, $fa
23e66     FF FA 01 F9 
23e6a     EB F1 FA F9 
23e6e     F7 00 F9 FC 
23e72     0F FD F4 FD | 	byte	$ff, $fa, $01, $f9, $eb, $f1, $fa, $f9, $f7, $00, $f9, $fc, $0f, $fd, $f4, $fd
23e76     F4 F6 03 01 
23e7a     FA F9 00 FF 
23e7e     F4 01 09 04 
23e82     03 F4 FD FD | 	byte	$f4, $f6, $03, $01, $fa, $f9, $00, $ff, $f4, $01, $09, $04, $03, $f4, $fd, $fd
23e86     03 FD 01 F7 
23e8a     F9 01 06 FC 
23e8e     FA FF 03 04 
23e92     07 06 FF 07 | 	byte	$03, $fd, $01, $f7, $f9, $01, $06, $fc, $fa, $ff, $03, $04, $07, $06, $ff, $07
23e96     03 09 0D 0A 
23e9a     12 04 0D 06 
23e9e     04 07 07 03 
23ea2     0F 0A 0A 07 | 	byte	$03, $09, $0d, $0a, $12, $04, $0d, $06, $04, $07, $07, $03, $0f, $0a, $0a, $07
23ea6     04 10 0D 07 
23eaa     00 FF 03 03 
23eae     0A 00 FF 04 
23eb2     FD 00 FF FC | 	byte	$04, $10, $0d, $07, $00, $ff, $03, $03, $0a, $00, $ff, $04, $fd, $00, $ff, $fc
23eb6     FD 0C 06 F7 
23eba     07 00 03 01 
23ebe     F0 F4 07 03 
23ec2     FC F9 FD FD | 	byte	$fd, $0c, $06, $f7, $07, $00, $03, $01, $f0, $f4, $07, $03, $fc, $f9, $fd, $fd
23ec6     03 FA F1 FF 
23eca     07 FA FA F7 
23ece     00 03 FA FA 
23ed2     01 06 00 F6 | 	byte	$03, $fa, $f1, $ff, $07, $fa, $fa, $f7, $00, $03, $fa, $fa, $01, $06, $00, $f6
23ed6     F7 F0 03 01 
23eda     FD 03 FF F9 
23ede     F9 03 FA F1 
23ee2     F0 FF FD F3 | 	byte	$f7, $f0, $03, $01, $fd, $03, $ff, $f9, $f9, $03, $fa, $f1, $f0, $ff, $fd, $f3
23ee6     F7 FD FD FD 
23eea     00 03 06 01 
23eee     00 FF F7 F7 
23ef2     F4 01 00 09 | 	byte	$f7, $fd, $fd, $fd, $00, $03, $06, $01, $00, $ff, $f7, $f7, $f4, $01, $00, $09
23ef6     FC F7 01 00 
23efa     00 00 09 00 
23efe     06 00 01 00 
23f02     13 18 01 09 | 	byte	$fc, $f7, $01, $00, $00, $00, $09, $00, $06, $00, $01, $00, $13, $18, $01, $09
23f06     06 06 06 FD 
23f0a     F7 06 00 07 
23f0e     12 07 06 00 
23f12     03 0C 06 06 | 	byte	$06, $06, $06, $fd, $f7, $06, $00, $07, $12, $07, $06, $00, $03, $0c, $06, $06
23f16     03 FA FC F9 
23f1a     FA 00 FF 04 
23f1e     03 01 F9 04 
23f22     04 FD 07 FD | 	byte	$03, $fa, $fc, $f9, $fa, $00, $ff, $04, $03, $01, $f9, $04, $04, $fd, $07, $fd
23f26     00 00 01 04 
23f2a     00 F7 01 04 
23f2e     04 FF FF 00 
23f32     06 09 09 00 | 	byte	$00, $00, $01, $04, $00, $f7, $01, $04, $04, $ff, $ff, $00, $06, $09, $09, $00
23f36     FA 0A 04 F9 
23f3a     00 FD FC 06 
23f3e     00 FD FD 06 
23f42     10 07 FF 06 | 	byte	$fa, $0a, $04, $f9, $00, $fd, $fc, $06, $00, $fd, $fd, $06, $10, $07, $ff, $06
23f46     FD FC FA 06 
23f4a     04 07 06 06 
23f4e     01 FA FD 06 
23f52     04 FD FA 03 | 	byte	$fd, $fc, $fa, $06, $04, $07, $06, $06, $01, $fa, $fd, $06, $04, $fd, $fa, $03
23f56     04 FD FC 0F 
23f5a     03 FD 01 FA 
23f5e     00 F9 F4 F1 
23f62     F9 F7 03 F4 | 	byte	$04, $fd, $fc, $0f, $03, $fd, $01, $fa, $00, $f9, $f4, $f1, $f9, $f7, $03, $f4
23f66     F3 F7 F0 ED 
23f6a     F7 FF 00 00 
23f6e     FA FF FF FD 
23f72     FC F3 FC 01 | 	byte	$f3, $f7, $f0, $ed, $f7, $ff, $00, $00, $fa, $ff, $ff, $fd, $fc, $f3, $fc, $01
23f76     FC FA FF 03 
23f7a     0A 00 06 FD 
23f7e     03 06 0D 0A 
23f82     0A 09 03 09 | 	byte	$fc, $fa, $ff, $03, $0a, $00, $06, $fd, $03, $06, $0d, $0a, $0a, $09, $03, $09
23f86     0F 03 0D 10 
23f8a     0A 0F 09 04 
23f8e     06 0D 0A FD 
23f92     03 03 03 03 | 	byte	$0f, $03, $0d, $10, $0a, $0f, $09, $04, $06, $0d, $0a, $fd, $03, $03, $03, $03
23f96     01 07 0C FC 
23f9a     FF 06 09 06 
23f9e     06 01 03 09 
23fa2     07 06 01 FA | 	byte	$01, $07, $0c, $fc, $ff, $06, $09, $06, $06, $01, $03, $09, $07, $06, $01, $fa
23fa6     03 07 01 FA 
23faa     FD 00 F9 FD 
23fae     01 06 03 01 
23fb2     00 03 10 0C | 	byte	$03, $07, $01, $fa, $fd, $00, $f9, $fd, $01, $06, $03, $01, $00, $03, $10, $0c
23fb6     0A 09 03 FC 
23fba     06 07 00 00 
23fbe     FF 03 FF 04 
23fc2     00 FA FD 00 | 	byte	$0a, $09, $03, $fc, $06, $07, $00, $00, $ff, $03, $ff, $04, $00, $fa, $fd, $00
23fc6     FA FF FD 01 
23fca     F9 FA F9 F7 
23fce     F4 F7 F9 FF 
23fd2     EE F9 F9 F6 | 	byte	$fa, $ff, $fd, $01, $f9, $fa, $f9, $f7, $f4, $f7, $f9, $ff, $ee, $f9, $f9, $f6
23fd6     F7 FF FC F7 
23fda     F7 F4 F4 F3 
23fde     F0 F6 FD FD 
23fe2     04 00 F7 FC | 	byte	$f7, $ff, $fc, $f7, $f7, $f4, $f4, $f3, $f0, $f6, $fd, $fd, $04, $00, $f7, $fc
23fe6     06 03 FD FA 
23fea     00 00 00 FC 
23fee     03 0A 06 00 
23ff2     04 06 09 09 | 	byte	$06, $03, $fd, $fa, $00, $00, $00, $fc, $03, $0a, $06, $00, $04, $06, $09, $09
23ff6     0C 0C 0C 0C 
23ffa     06 0C 0A 07 
23ffe     0A 09 04 04 
24002     06 0F 03 07 | 	byte	$0c, $0c, $0c, $0c, $06, $0c, $0a, $07, $0a, $09, $04, $04, $06, $0f, $03, $07
24006     0F 04 FC FF 
2400a     09 0D 04 03 
2400e     FD 03 09 FD 
24012     06 03 FF FC | 	byte	$0f, $04, $fc, $ff, $09, $0d, $04, $03, $fd, $03, $09, $fd, $06, $03, $ff, $fc
24016     03 06 00 04 
2401a     09 0C 03 00 
2401e     04 06 00 03 
24022     00 03 FD 00 | 	byte	$03, $06, $00, $04, $09, $0c, $03, $00, $04, $06, $00, $03, $00, $03, $fd, $00
24026     FD 01 FD FF 
2402a     00 FF F7 06 
2402e     06 FC FD 00 
24032     04 07 F7 FA | 	byte	$fd, $01, $fd, $ff, $00, $ff, $f7, $06, $06, $fc, $fd, $00, $04, $07, $f7, $fa
24036     FA 00 FA F4 
2403a     FC FA 00 00 
2403e     F7 FC 00 00 
24042     03 FD FC FC | 	byte	$fa, $00, $fa, $f4, $fc, $fa, $00, $00, $f7, $fc, $00, $00, $03, $fd, $fc, $fc
24046     FC F9 F3 F4 
2404a     FF FA FD F7 
2404e     F7 FC 03 03 
24052     FC FA FF FF | 	byte	$fc, $f9, $f3, $f4, $ff, $fa, $fd, $f7, $f7, $fc, $03, $03, $fc, $fa, $ff, $ff
24056     00 01 03 00 
2405a     03 FF 01 0A 
2405e     06 FD 06 00 
24062     06 01 06 06 | 	byte	$00, $01, $03, $00, $03, $ff, $01, $0a, $06, $fd, $06, $00, $06, $01, $06, $06
24066     04 01 0C 07 
2406a     FD F7 0A 00 
2406e     FA FF 09 04 
24072     07 01 00 FA | 	byte	$04, $01, $0c, $07, $fd, $f7, $0a, $00, $fa, $ff, $09, $04, $07, $01, $00, $fa
24076     00 06 FD FA 
2407a     03 06 0A 03 
2407e     00 FD 0A 03 
24082     07 00 0A 0C | 	byte	$00, $06, $fd, $fa, $03, $06, $0a, $03, $00, $fd, $0a, $03, $07, $00, $0a, $0c
24086     06 01 03 09 
2408a     00 04 00 01 
2408e     FF F9 FD FC 
24092     FC F9 F6 FD | 	byte	$06, $01, $03, $09, $00, $04, $00, $01, $ff, $f9, $fd, $fc, $fc, $f9, $f6, $fd
24096     FD F7 F1 FA 
2409a     FC 03 01 FA 
2409e     F7 FC FD F9 
240a2     FF FF F9 00 | 	byte	$fd, $f7, $f1, $fa, $fc, $03, $01, $fa, $f7, $fc, $fd, $f9, $ff, $ff, $f9, $00
240a6     00 FC 03 00 
240aa     09 09 01 FD 
240ae     01 07 04 0A 
240b2     07 07 09 0F | 	byte	$00, $fc, $03, $00, $09, $09, $01, $fd, $01, $07, $04, $0a, $07, $07, $09, $0f
240b6     09 03 0C 0D 
240ba     0C 0F 0C 10 
240be     03 F9 04 03 
240c2     FD 01 00 FA | 	byte	$09, $03, $0c, $0d, $0c, $0f, $0c, $10, $03, $f9, $04, $03, $fd, $01, $00, $fa
240c6     FF FC 00 F7 
240ca     F9 FC FA F7 
240ce     FF 03 FF F9 
240d2     FC 01 00 00 | 	byte	$ff, $fc, $00, $f7, $f9, $fc, $fa, $f7, $ff, $03, $ff, $f9, $fc, $01, $00, $00
240d6     00 FC 00 FD 
240da     FD F7 FC FD 
240de     09 03 04 03 
240e2     06 00 00 FD | 	byte	$00, $fc, $00, $fd, $fd, $f7, $fc, $fd, $09, $03, $04, $03, $06, $00, $00, $fd
240e6     01 00 00 01 
240ea     06 FD FF 00 
240ee     FA F9 04 03 
240f2     03 04 F7 F9 | 	byte	$01, $00, $00, $01, $06, $fd, $ff, $00, $fa, $f9, $04, $03, $03, $04, $f7, $f9
240f6     F9 FC FA FA 
240fa     FD 04 FD 03 
240fe     F7 00 03 03 
24102     00 00 FA FD | 	byte	$f9, $fc, $fa, $fa, $fd, $04, $fd, $03, $f7, $00, $03, $03, $00, $00, $fa, $fd
24106     FD 01 FF 04 
2410a     04 06 06 04 
2410e     FD 00 03 0C 
24112     06 06 FD FD | 	byte	$fd, $01, $ff, $04, $04, $06, $06, $04, $fd, $00, $03, $0c, $06, $06, $fd, $fd
24116     0F 09 0C 0D 
2411a     00 01 01 07 
2411e     06 FD FA 03 
24122     09 03 01 06 | 	byte	$0f, $09, $0c, $0d, $00, $01, $01, $07, $06, $fd, $fa, $03, $09, $03, $01, $06
24126     00 00 09 0A 
2412a     04 0F 06 FF 
2412e     03 06 04 06 
24132     FD FA FF 01 | 	byte	$00, $00, $09, $0a, $04, $0f, $06, $ff, $03, $06, $04, $06, $fd, $fa, $ff, $01
24136     FC FA 01 00 
2413a     FA 00 04 FF 
2413e     FC FA FD 00 
24142     F7 F4 F6 FA | 	byte	$fc, $fa, $01, $00, $fa, $00, $04, $ff, $fc, $fa, $fd, $00, $f7, $f4, $f6, $fa
24146     FD F6 ED F4 
2414a     FA F7 F7 F6 
2414e     F9 03 01 03 
24152     F7 F9 FD FD | 	byte	$fd, $f6, $ed, $f4, $fa, $f7, $f7, $f6, $f9, $03, $01, $03, $f7, $f9, $fd, $fd
24156     F7 03 03 03 
2415a     06 09 06 04 
2415e     FF FD FD 03 
24162     00 00 0F 04 | 	byte	$f7, $03, $03, $03, $06, $09, $06, $04, $ff, $fd, $fd, $03, $00, $00, $0f, $04
24166     00 04 01 FD 
2416a     04 00 00 09 
2416e     01 01 0F 04 
24172     F7 FD 01 03 | 	byte	$00, $04, $01, $fd, $04, $00, $00, $09, $01, $01, $0f, $04, $f7, $fd, $01, $03
24176     04 01 00 FA 
2417a     F4 FD 06 FD 
2417e     FC 03 FD F9 
24182     FD 00 00 FF | 	byte	$04, $01, $00, $fa, $f4, $fd, $06, $fd, $fc, $03, $fd, $f9, $fd, $00, $00, $ff
24186     FC FF FF 03 
2418a     03 07 06 04 
2418e     0D 07 03 03 
24192     04 07 10 0F | 	byte	$fc, $ff, $ff, $03, $03, $07, $06, $04, $0d, $07, $03, $03, $04, $07, $10, $0f
24196     06 09 09 0A 
2419a     0C 09 00 01 
2419e     01 03 04 FA 
241a2     FA FC 00 09 | 	byte	$06, $09, $09, $0a, $0c, $09, $00, $01, $01, $03, $04, $fa, $fa, $fc, $00, $09
241a6     FF FD F7 FA 
241aa     FA F3 F9 F7 
241ae     FF FC F9 FA 
241b2     FF FA FC FF | 	byte	$ff, $fd, $f7, $fa, $fa, $f3, $f9, $f7, $ff, $fc, $f9, $fa, $ff, $fa, $fc, $ff
241b6     01 04 03 FA 
241ba     FC 03 00 FD 
241be     03 01 01 FC 
241c2     FD 01 07 09 | 	byte	$01, $04, $03, $fa, $fc, $03, $00, $fd, $03, $01, $01, $fc, $fd, $01, $07, $09
241c6     03 FD FD FD 
241ca     03 04 01 03 
241ce     00 FA 00 06 
241d2     03 FA 01 06 | 	byte	$03, $fd, $fd, $fd, $03, $04, $01, $03, $00, $fa, $00, $06, $03, $fa, $01, $06
241d6     01 00 FD 01 
241da     00 04 03 FD 
241de     00 00 00 03 
241e2     00 00 04 00 | 	byte	$01, $00, $fd, $01, $00, $04, $03, $fd, $00, $00, $00, $03, $00, $00, $04, $00
241e6     FD 00 FF FF 
241ea     01 03 FF 00 
241ee     03 F9 F7 FC 
241f2     FD 01 FD F9 | 	byte	$fd, $00, $ff, $ff, $01, $03, $ff, $00, $03, $f9, $f7, $fc, $fd, $01, $fd, $f9
241f6     F9 FD FF FD 
241fa     00 FC FD FC 
241fe     FA 03 FF FF 
24202     01 FF 00 00 | 	byte	$f9, $fd, $ff, $fd, $00, $fc, $fd, $fc, $fa, $03, $ff, $ff, $01, $ff, $00, $00
24206     04 06 01 01 
2420a     FF FD 06 0A 
2420e     0C 06 04 07 
24212     06 06 0C 0A | 	byte	$04, $06, $01, $01, $ff, $fd, $06, $0a, $0c, $06, $04, $07, $06, $06, $0c, $0a
24216     0F 07 03 09 
2421a     09 03 00 06 
2421e     FD 03 07 03 
24222     00 07 09 06 | 	byte	$0f, $07, $03, $09, $09, $03, $00, $06, $fd, $03, $07, $03, $00, $07, $09, $06
24226     03 03 01 04 
2422a     FD FA 03 F9 
2422e     FD 04 01 00 
24232     00 01 01 03 | 	byte	$03, $03, $01, $04, $fd, $fa, $03, $f9, $fd, $04, $01, $00, $00, $01, $01, $03
24236     00 FA FF FC 
2423a     F9 01 FF FF 
2423e     FF 00 FF 04 
24242     01 00 FF FF | 	byte	$00, $fa, $ff, $fc, $f9, $01, $ff, $ff, $ff, $00, $ff, $04, $01, $00, $ff, $ff
24246     F7 FC F7 FD 
2424a     04 FC F7 01 
2424e     FD F7 FA F9 
24252     FC 00 FF FC | 	byte	$f7, $fc, $f7, $fd, $04, $fc, $f7, $01, $fd, $f7, $fa, $f9, $fc, $00, $ff, $fc
24256     00 FD FF 09 
2425a     06 FC FA FA 
2425e     01 03 FA FA 
24262     00 00 01 04 | 	byte	$00, $fd, $ff, $09, $06, $fc, $fa, $fa, $01, $03, $fa, $fa, $00, $00, $01, $04
24266     06 01 FD FC 
2426a     06 04 01 FD 
2426e     FA 03 00 FF 
24272     FD 04 03 FD | 	byte	$06, $01, $fd, $fc, $06, $04, $01, $fd, $fa, $03, $00, $ff, $fd, $04, $03, $fd
24276     00 03 FD 03 
2427a     06 04 01 00 
2427e     00 07 0C 09 
24282     01 00 03 03 | 	byte	$00, $03, $fd, $03, $06, $04, $01, $00, $00, $07, $0c, $09, $01, $00, $03, $03
24286     00 00 03 01 
2428a     03 00 FC 09 
2428e     07 01 06 04 
24292     00 06 04 06 | 	byte	$00, $00, $03, $01, $03, $00, $fc, $09, $07, $01, $06, $04, $00, $06, $04, $06
24296     03 03 01 07 
2429a     0A 06 07 06 
2429e     00 06 00 06 
242a2     01 04 04 09 | 	byte	$03, $03, $01, $07, $0a, $06, $07, $06, $00, $06, $00, $06, $01, $04, $04, $09
242a6     06 FC FC 03 
242aa     00 00 FA FA 
242ae     FA FA F9 00 
242b2     04 FA FD FC | 	byte	$06, $fc, $fc, $03, $00, $00, $fa, $fa, $fa, $fa, $f9, $00, $04, $fa, $fd, $fc
242b6     F6 F4 F9 F7 
242ba     FC FA F0 FC 
242be     FF 00 F7 F4 
242c2     FD 01 FF F9 | 	byte	$f6, $f4, $f9, $f7, $fc, $fa, $f0, $fc, $ff, $00, $f7, $f4, $fd, $01, $ff, $f9
242c6     00 06 03 01 
242ca     FC F9 FD 00 
242ce     00 01 01 00 
242d2     FF FA FA FD | 	byte	$00, $06, $03, $01, $fc, $f9, $fd, $00, $00, $01, $01, $00, $ff, $fa, $fa, $fd
242d6     00 03 07 03 
242da     FD 03 03 FD 
242de     00 FD 01 06 
242e2     04 00 06 07 | 	byte	$00, $03, $07, $03, $fd, $03, $03, $fd, $00, $fd, $01, $06, $04, $00, $06, $07
242e6     03 00 07 03 
242ea     03 FD FD 06 
242ee     09 03 04 09 
242f2     FF FC 04 07 | 	byte	$03, $00, $07, $03, $03, $fd, $fd, $06, $09, $03, $04, $09, $ff, $fc, $04, $07
242f6     0D 0A 07 03 
242fa     00 03 03 00 
242fe     04 09 09 FF 
24302     FF FF 03 06 | 	byte	$0d, $0a, $07, $03, $00, $03, $03, $00, $04, $09, $09, $ff, $ff, $ff, $03, $06
24306     01 FC 00 00 
2430a     04 FD F7 03 
2430e     01 00 FD FD 
24312     03 01 FD 00 | 	byte	$01, $fc, $00, $00, $04, $fd, $f7, $03, $01, $00, $fd, $fd, $03, $01, $fd, $00
24316     FF 07 FD 04 
2431a     00 00 09 07 
2431e     00 FA 03 04 
24322     03 FC FC 01 | 	byte	$ff, $07, $fd, $04, $00, $00, $09, $07, $00, $fa, $03, $04, $03, $fc, $fc, $01
24326     04 01 00 FC 
2432a     FA 01 FD F9 
2432e     FC 06 00 FC 
24332     00 03 04 06 | 	byte	$04, $01, $00, $fc, $fa, $01, $fd, $f9, $fc, $06, $00, $fc, $00, $03, $04, $06
24336     00 FF FD FD 
2433a     04 09 01 FC 
2433e     FD 00 04 FF 
24342     FC FF FC 01 | 	byte	$00, $ff, $fd, $fd, $04, $09, $01, $fc, $fd, $00, $04, $ff, $fc, $ff, $fc, $01
24346     FD 00 FD FD 
2434a     F7 FA FD 07 
2434e     04 00 FF 00 
24352     00 FC FF 01 | 	byte	$fd, $00, $fd, $fd, $f7, $fa, $fd, $07, $04, $00, $ff, $00, $00, $fc, $ff, $01
24356     FC FF 01 06 
2435a     00 FC FD 00 
2435e     01 FD 01 07 
24362     01 04 06 00 | 	byte	$fc, $ff, $01, $06, $00, $fc, $fd, $00, $01, $fd, $01, $07, $01, $04, $06, $00
24366     FF 01 00 03 
2436a     06 04 00 F7 
2436e     03 00 03 04 
24372     FD 03 00 06 | 	byte	$ff, $01, $00, $03, $06, $04, $00, $f7, $03, $00, $03, $04, $fd, $03, $00, $06
24376     01 FD FC FF 
2437a     01 06 FD 01 
2437e     01 00 FC FD 
24382     00 01 FF FD | 	byte	$01, $fd, $fc, $ff, $01, $06, $fd, $01, $01, $00, $fc, $fd, $00, $01, $ff, $fd
24386     00 03 01 00 
2438a     FF 04 09 00 
2438e     00 00 00 00 
24392     FF 04 04 01 | 	byte	$00, $03, $01, $00, $ff, $04, $09, $00, $00, $00, $00, $00, $ff, $04, $04, $01
24396     03 01 09 09 
2439a     00 00 03 06 
2439e     07 07 09 00 
243a2     00 00 00 04 | 	byte	$03, $01, $09, $09, $00, $00, $03, $06, $07, $07, $09, $00, $00, $00, $00, $04
243a6     06 06 04 00 
243aa     01 01 FF 01 
243ae     FF 00 FA FD 
243b2     FD FC 00 03 | 	byte	$06, $06, $04, $00, $01, $01, $ff, $01, $ff, $00, $fa, $fd, $fd, $fc, $00, $03
243b6     00 00 F9 F9 
243ba     FD F9 FD F7 
243be     FD FC FD FD 
243c2     F7 FF FC FC | 	byte	$00, $00, $f9, $f9, $fd, $f9, $fd, $f7, $fd, $fc, $fd, $fd, $f7, $ff, $fc, $fc
243c6     FF 00 03 03 
243ca     FD FF FD FA 
243ce     FF FC 00 00 
243d2     FA F9 03 00 | 	byte	$ff, $00, $03, $03, $fd, $ff, $fd, $fa, $ff, $fc, $00, $00, $fa, $f9, $03, $00
243d6     FF 03 04 FD 
243da     FD FD 00 FF 
243de     07 07 FA 03 
243e2     09 06 04 00 | 	byte	$ff, $03, $04, $fd, $fd, $fd, $00, $ff, $07, $07, $fa, $03, $09, $06, $04, $00
243e6     00 03 03 04 
243ea     01 03 0C 04 
243ee     01 FF 04 0F 
243f2     09 01 01 01 | 	byte	$00, $03, $03, $04, $01, $03, $0c, $04, $01, $ff, $04, $0f, $09, $01, $01, $01
243f6     03 03 04 04 
243fa     06 0A 04 03 
243fe     03 07 0A 03 
24402     06 FF FF 01 | 	byte	$03, $03, $04, $04, $06, $0a, $04, $03, $03, $07, $0a, $03, $06, $ff, $ff, $01
24406     03 03 03 FD 
2440a     01 00 06 03 
2440e     04 01 F7 FC 
24412     FF FC FD F9 | 	byte	$03, $03, $03, $fd, $01, $00, $06, $03, $04, $01, $f7, $fc, $ff, $fc, $fd, $f9
24416     FC 01 FD FD 
2441a     F6 FD 01 03 
2441e     00 FD 01 00 
24422     FD FC FF 00 | 	byte	$fc, $01, $fd, $fd, $f6, $fd, $01, $03, $00, $fd, $01, $00, $fd, $fc, $ff, $00
24426     06 01 03 03 
2442a     00 FF 09 06 
2442e     00 01 03 FD 
24432     FF 03 FF 04 | 	byte	$06, $01, $03, $03, $00, $ff, $09, $06, $00, $01, $03, $fd, $ff, $03, $ff, $04
24436     09 07 FC FD 
2443a     FF FC 00 FA 
2443e     FA FC FA 03 
24442     01 FF F7 F9 | 	byte	$09, $07, $fc, $fd, $ff, $fc, $00, $fa, $fa, $fc, $fa, $03, $01, $ff, $f7, $f9
24446     01 03 FA FA 
2444a     FC FC 04 06 
2444e     00 FD 00 01 
24452     00 00 FA 00 | 	byte	$01, $03, $fa, $fa, $fc, $fc, $04, $06, $00, $fd, $00, $01, $00, $00, $fa, $00
24456     01 04 06 00 
2445a     01 03 04 06 
2445e     06 06 06 01 
24462     03 06 06 06 | 	byte	$01, $04, $06, $00, $01, $03, $04, $06, $06, $06, $06, $01, $03, $06, $06, $06
24466     FA 03 06 01 
2446a     01 06 00 01 
2446e     FF FD FC FD 
24472     06 03 00 00 | 	byte	$fa, $03, $06, $01, $01, $06, $00, $01, $ff, $fd, $fc, $fd, $06, $03, $00, $00
24476     FA FF FF 01 
2447a     FA 00 06 04 
2447e     FD FF 00 00 
24482     03 01 FD FF | 	byte	$fa, $ff, $ff, $01, $fa, $00, $06, $04, $fd, $ff, $00, $00, $03, $01, $fd, $ff
24486     00 03 0A 00 
2448a     FA FF 03 09 
2448e     03 03 06 03 
24492     09 0A 04 00 | 	byte	$00, $03, $0a, $00, $fa, $ff, $03, $09, $03, $03, $06, $03, $09, $0a, $04, $00
24496     FD FD FD FF 
2449a     FD FD FF FF 
2449e     F9 FD F7 FA 
244a2     00 00 FC F7 | 	byte	$fd, $fd, $fd, $ff, $fd, $fd, $ff, $ff, $f9, $fd, $f7, $fa, $00, $00, $fc, $f7
244a6     FC 00 01 01 
244aa     03 03 01 01 
244ae     FD FD 00 03 
244b2     01 FF FD 01 | 	byte	$fc, $00, $01, $01, $03, $03, $01, $01, $fd, $fd, $00, $03, $01, $ff, $fd, $01
244b6     00 03 06 01 
244ba     FD FF FD 03 
244be     01 FF 00 00 
244c2     06 04 03 00 | 	byte	$00, $03, $06, $01, $fd, $ff, $fd, $03, $01, $ff, $00, $00, $06, $04, $03, $00
244c6     03 04 03 03 
244ca     04 00 FD 00 
244ce     FD 00 04 00 
244d2     03 00 FD 03 | 	byte	$03, $04, $03, $03, $04, $00, $fd, $00, $fd, $00, $04, $00, $03, $00, $fd, $03
244d6     00 FC FF FC 
244da     F7 00 01 FF 
244de     FA F9 FF 03 
244e2     FD F9 FF 01 | 	byte	$00, $fc, $ff, $fc, $f7, $00, $01, $ff, $fa, $f9, $ff, $03, $fd, $f9, $ff, $01
244e6     01 00 04 00 
244ea     03 03 04 01 
244ee     01 00 FD 03 
244f2     07 04 09 03 | 	byte	$01, $00, $04, $00, $03, $03, $04, $01, $01, $00, $fd, $03, $07, $04, $09, $03
244f6     06 09 01 04 
244fa     00 FC FD 00 
244fe     01 FD F7 FC 
24502     03 04 FF 00 | 	byte	$06, $09, $01, $04, $00, $fc, $fd, $00, $01, $fd, $f7, $fc, $03, $04, $ff, $00
24506     00 FD 01 06 
2450a     FF FD 04 03 
2450e     00 FD 00 FC 
24512     FD FF 04 0D | 	byte	$00, $fd, $01, $06, $ff, $fd, $04, $03, $00, $fd, $00, $fc, $fd, $ff, $04, $0d
24516     07 00 09 04 
2451a     07 01 F9 00 
2451e     01 FD FD 00 
24522     00 FF FA F9 | 	byte	$07, $00, $09, $04, $07, $01, $f9, $00, $01, $fd, $fd, $00, $00, $ff, $fa, $f9
24526     00 FD FC FD 
2452a     00 FD 00 FF 
2452e     FD FD 03 00 
24532     FF 03 00 03 | 	byte	$00, $fd, $fc, $fd, $00, $fd, $00, $ff, $fd, $fd, $03, $00, $ff, $03, $00, $03
24536     01 FA FD 01 
2453a     FD 03 01 FA 
2453e     FA FD FF 01 
24542     03 FF 06 0A | 	byte	$01, $fa, $fd, $01, $fd, $03, $01, $fa, $fa, $fd, $ff, $01, $03, $ff, $06, $0a
24546     09 06 09 04 
2454a     03 04 03 09 
2454e     00 00 03 06 
24552     03 01 01 06 | 	byte	$09, $06, $09, $04, $03, $04, $03, $09, $00, $00, $03, $06, $03, $01, $01, $06
24556     06 06 FD 00 
2455a     00 00 FD FD 
2455e     FD FF 0A 04 
24562     01 00 FC FC | 	byte	$06, $06, $fd, $00, $00, $00, $fd, $fd, $fd, $ff, $0a, $04, $01, $00, $fc, $fc
24566     01 F9 FA FF 
2456a     FD FC FD F7 
2456e     F9 00 00 01 
24572     FD FC FD 00 | 	byte	$01, $f9, $fa, $ff, $fd, $fc, $fd, $f7, $f9, $00, $00, $01, $fd, $fc, $fd, $00
24576     00 00 00 FC 
2457a     06 07 01 FD 
2457e     FF 00 09 06 
24582     FD 01 09 07 | 	byte	$00, $00, $00, $fc, $06, $07, $01, $fd, $ff, $00, $09, $06, $fd, $01, $09, $07
24586     01 FD FC 01 
2458a     09 01 FD FA 
2458e     01 07 09 01 
24592     FF FD 07 09 | 	byte	$01, $fd, $fc, $01, $09, $01, $fd, $fa, $01, $07, $09, $01, $ff, $fd, $07, $09
24596     04 00 FD 09 
2459a     03 01 06 09 
2459e     09 09 04 01 
245a2     00 04 FF 00 | 	byte	$04, $00, $fd, $09, $03, $01, $06, $09, $09, $09, $04, $01, $00, $04, $ff, $00
245a6     0A 07 00 FC 
245aa     00 0A 01 FD 
245ae     00 03 00 FD 
245b2     F7 00 00 01 | 	byte	$0a, $07, $00, $fc, $00, $0a, $01, $fd, $00, $03, $00, $fd, $f7, $00, $00, $01
245b6     00 F9 FA FF 
245ba     FF FC FF 00 
245be     FC 01 00 03 
245c2     FD F9 01 01 | 	byte	$00, $f9, $fa, $ff, $ff, $fc, $ff, $00, $fc, $01, $00, $03, $fd, $f9, $01, $01
245c6     FC FD FA FA 
245ca     F9 FD FF FA 
245ce     FD FC FA FD 
245d2     FD F9 F9 FC | 	byte	$fc, $fd, $fa, $fa, $f9, $fd, $ff, $fa, $fd, $fc, $fa, $fd, $fd, $f9, $f9, $fc
245d6     03 FD FC FD 
245da     0A 06 F7 F7 
245de     FA 00 04 00 
245e2     FD FC FD 00 | 	byte	$03, $fd, $fc, $fd, $0a, $06, $f7, $f7, $fa, $00, $04, $00, $fd, $fc, $fd, $00
245e6     FF 00 00 03 
245ea     00 FD 00 00 
245ee     04 01 FF 00 
245f2     03 03 0A 04 | 	byte	$ff, $00, $00, $03, $00, $fd, $00, $00, $04, $01, $ff, $00, $03, $03, $0a, $04
245f6     03 06 01 01 
245fa     04 09 09 09 
245fe     03 03 0F 0F 
24602     09 04 03 0A | 	byte	$03, $06, $01, $01, $04, $09, $09, $09, $03, $03, $0f, $0f, $09, $04, $03, $0a
24606     09 06 FF 03 
2460a     09 07 01 FC 
2460e     FF FF 00 01 
24612     01 F9 00 07 | 	byte	$09, $06, $ff, $03, $09, $07, $01, $fc, $ff, $ff, $00, $01, $01, $f9, $00, $07
24616     FD F7 FD FC 
2461a     FA FC 00 FF 
2461e     00 FD F7 FD 
24622     00 00 00 06 | 	byte	$fd, $f7, $fd, $fc, $fa, $fc, $00, $ff, $00, $fd, $f7, $fd, $00, $00, $00, $06
24626     00 FF 00 FD 
2462a     01 06 01 04 
2462e     00 FF 01 0A 
24632     07 00 FD 01 | 	byte	$00, $ff, $00, $fd, $01, $06, $01, $04, $00, $ff, $01, $0a, $07, $00, $fd, $01
24636     03 01 FD 00 
2463a     FD F9 FF FA 
2463e     F7 FF 04 00 
24642     FF FF FD FD | 	byte	$03, $01, $fd, $00, $fd, $f9, $ff, $fa, $f7, $ff, $04, $00, $ff, $ff, $fd, $fd
24646     FC F7 FC FC 
2464a     FA 03 00 FD 
2464e     FC 00 04 01 
24652     01 00 01 00 | 	byte	$fc, $f7, $fc, $fc, $fa, $03, $00, $fd, $fc, $00, $04, $01, $01, $00, $01, $00
24656     FD FD 00 03 
2465a     06 FF FF 06 
2465e     03 00 03 03 
24662     FD 03 06 00 | 	byte	$fd, $fd, $00, $03, $06, $ff, $ff, $06, $03, $00, $03, $03, $fd, $03, $06, $00
24666     04 06 00 FF 
2466a     01 FD FD FF 
2466e     01 01 00 01 
24672     01 00 FA 03 | 	byte	$04, $06, $00, $ff, $01, $fd, $fd, $ff, $01, $01, $00, $01, $01, $00, $fa, $03
24676     04 00 07 01 
2467a     00 00 01 00 
2467e     03 06 03 06 
24682     06 FF 01 03 | 	byte	$04, $00, $07, $01, $00, $00, $01, $00, $03, $06, $03, $06, $06, $ff, $01, $03
24686     00 01 FA 04 
2468a     06 00 FF 01 
2468e     04 01 04 09 
24692     04 01 00 FA | 	byte	$00, $01, $fa, $04, $06, $00, $ff, $01, $04, $01, $04, $09, $04, $01, $00, $fa
24696     FA FC FD 01 
2469a     00 00 FD FA 
2469e     01 00 FF 01 
246a2     06 01 FD FD | 	byte	$fa, $fc, $fd, $01, $00, $00, $fd, $fa, $01, $00, $ff, $01, $06, $01, $fd, $fd
246a6     FF FD 01 01 
246aa     01 00 FF 00 
246ae     04 04 00 04 
246b2     00 00 03 FF | 	byte	$ff, $fd, $01, $01, $01, $00, $ff, $00, $04, $04, $00, $04, $00, $00, $03, $ff
246b6     FA 06 00 FD 
246ba     09 07 00 FF 
246be     FF 00 00 00 
246c2     01 00 00 00 | 	byte	$fa, $06, $00, $fd, $09, $07, $00, $ff, $ff, $00, $00, $00, $01, $00, $00, $00
246c6     03 00 FC FC 
246ca     FD FC F7 F7 
246ce     FA FC 00 FA 
246d2     F3 F6 F7 FA | 	byte	$03, $00, $fc, $fc, $fd, $fc, $f7, $f7, $fa, $fc, $00, $fa, $f3, $f6, $f7, $fa
246d6     F9 F9 FD FD 
246da     FC F7 F7 FD 
246de     03 00 FA 00 
246e2     03 09 0C 06 | 	byte	$f9, $f9, $fd, $fd, $fc, $f7, $f7, $fd, $03, $00, $fa, $00, $03, $09, $0c, $06
246e6     00 03 07 0F 
246ea     0F 06 04 09 
246ee     0A 0A 09 04 
246f2     0A 0A 03 01 | 	byte	$00, $03, $07, $0f, $0f, $06, $04, $09, $0a, $0a, $09, $04, $0a, $0a, $03, $01
246f6     01 04 09 0A 
246fa     04 09 09 07 
246fe     06 03 06 04 
24702     03 03 07 09 | 	byte	$01, $04, $09, $0a, $04, $09, $09, $07, $06, $03, $06, $04, $03, $03, $07, $09
24706     00 00 03 04 
2470a     04 03 00 FD 
2470e     00 06 06 06 
24712     01 03 00 FA | 	byte	$00, $00, $03, $04, $04, $03, $00, $fd, $00, $06, $06, $06, $01, $03, $00, $fa
24716     FA FF 01 04 
2471a     03 00 FF FF 
2471e     03 00 FF FC 
24722     FC FD FC F7 | 	byte	$fa, $ff, $01, $04, $03, $00, $ff, $ff, $03, $00, $ff, $fc, $fc, $fd, $fc, $f7
24726     F6 FD 00 FC 
2472a     F4 F9 FD FA 
2472e     FC FA F9 FA 
24732     FA F7 F6 F7 | 	byte	$f6, $fd, $00, $fc, $f4, $f9, $fd, $fa, $fc, $fa, $f9, $fa, $fa, $f7, $f6, $f7
24736     FC F9 F7 F9 
2473a     FD FD FD FF 
2473e     01 FC FC FF 
24742     00 FD 01 00 | 	byte	$fc, $f9, $f7, $f9, $fd, $fd, $fd, $ff, $01, $fc, $fc, $ff, $00, $fd, $01, $00
24746     00 03 FF FF 
2474a     03 06 06 01 
2474e     01 04 07 04 
24752     03 09 04 01 | 	byte	$00, $03, $ff, $ff, $03, $06, $06, $01, $01, $04, $07, $04, $03, $09, $04, $01
24756     04 07 04 03 
2475a     04 04 06 06 
2475e     04 01 03 06 
24762     06 03 03 01 | 	byte	$04, $07, $04, $03, $04, $04, $06, $06, $04, $01, $03, $06, $06, $03, $03, $01
24766     01 04 03 06 
2476a     06 03 01 03 
2476e     07 06 09 07 
24772     07 09 09 06 | 	byte	$01, $04, $03, $06, $06, $03, $01, $03, $07, $06, $09, $07, $07, $09, $09, $06
24776     06 03 03 04 
2477a     01 01 04 04 
2477e     06 01 00 00 
24782     00 00 FD FF | 	byte	$06, $03, $03, $04, $01, $01, $04, $04, $06, $01, $00, $00, $00, $00, $fd, $ff
24786     FD FA 00 00 
2478a     FD FD FD FC 
2478e     FC FA F9 F9 
24792     F9 F7 FC 00 | 	byte	$fd, $fa, $00, $00, $fd, $fd, $fd, $fc, $fc, $fa, $f9, $f9, $f9, $f7, $fc, $00
24796     FD FA 00 FF 
2479a     FF FF FF 00 
2479e     04 04 FD FA 
247a2     01 01 03 00 | 	byte	$fd, $fa, $00, $ff, $ff, $ff, $ff, $00, $04, $04, $fd, $fa, $01, $01, $03, $00
247a6     00 00 01 01 
247aa     00 00 03 00 
247ae     04 00 FC FC 
247b2     FF FF 00 01 | 	byte	$00, $00, $01, $01, $00, $00, $03, $00, $04, $00, $fc, $fc, $ff, $ff, $00, $01
247b6     FC FC 01 FD 
247ba     FF 01 FA F7 
247be     FA FD FF 00 
247c2     FC F9 00 00 | 	byte	$fc, $fc, $01, $fd, $ff, $01, $fa, $f7, $fa, $fd, $ff, $00, $fc, $f9, $00, $00
247c6     FA FA FA FC 
247ca     FC 01 00 FC 
247ce     FC FD 01 00 
247d2     00 06 06 04 | 	byte	$fa, $fa, $fa, $fc, $fc, $01, $00, $fc, $fc, $fd, $01, $00, $00, $06, $06, $04
247d6     03 01 01 03 
247da     04 09 06 03 
247de     01 07 06 00 
247e2     00 06 07 04 | 	byte	$03, $01, $01, $03, $04, $09, $06, $03, $01, $07, $06, $00, $00, $06, $07, $04
247e6     03 03 03 07 
247ea     01 00 01 FD 
247ee     03 01 06 01 
247f2     FC 03 06 03 | 	byte	$03, $03, $03, $07, $01, $00, $01, $fd, $03, $01, $06, $01, $fc, $03, $06, $03
247f6     00 04 03 03 
247fa     01 03 06 03 
247fe     04 06 03 04 
24802     03 09 04 03 | 	byte	$00, $04, $03, $03, $01, $03, $06, $03, $04, $06, $03, $04, $03, $09, $04, $03
24806     04 09 0C 04 
2480a     03 06 03 FC 
2480e     01 07 03 00 
24812     03 04 04 06 | 	byte	$04, $09, $0c, $04, $03, $06, $03, $fc, $01, $07, $03, $00, $03, $04, $04, $06
24816     00 FC FF FF 
2481a     FA FC FD F7 
2481e     FA 00 FC FD 
24822     FC F9       | 	byte	$00, $fc, $ff, $ff, $fa, $fc, $fd, $f7, $fa, $00, $fc, $fd, $fc, $f9
24824                 | 	alignl
24824                 | _hng030rm_spin2_dat_
24824     00 00 00 00 
24828     00 00 00 00 
2482c     00 00 00 00 
24830     00 00 00 00 
24834     00 00 00    | vga_font       file "vgafont.def"
24837     7E 81 A5 81 
2483b     81 BD 99 81 
2483f     81 7E 00 00 
24843     00 00 00 00 | 	byte	$7e, $81, $a5, $81, $81, $bd, $99, $81, $81, $7e, $00, $00, $00, $00, $00, $00
24847     7E FF DB FF 
2484b     FF C3 E7 FF 
2484f     FF 7E 00 00 
24853     00 00 00 00 | 	byte	$7e, $ff, $db, $ff, $ff, $c3, $e7, $ff, $ff, $7e, $00, $00, $00, $00, $00, $00
24857     00 36 7F 7F 
2485b     7F 7F 3E 1C 
2485f     08 00 00 00 
24863     00 00 00 00 | 	byte	$00, $36, $7f, $7f, $7f, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00
24867     00 08 1C 3E 
2486b     7F 3E 1C 08 
2486f     00 00 00 00 
24873     00 00 00 00 | 	byte	$00, $08, $1c, $3e, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00
24877     18 3C 3C E7 
2487b     E7 E7 18 18 
2487f     3C 00 00 00 
24883     00 00 00 00 | 	byte	$18, $3c, $3c, $e7, $e7, $e7, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
24887     18 3C 7E FF 
2488b     FF 7E 18 18 
2488f     3C 00 00 00 
24893     00 00 00 00 | 	byte	$18, $3c, $7e, $ff, $ff, $7e, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
24897     00 00 00 18 
2489b     3C 3C 18 00 
2489f     00 00 00 00 
248a3     00 FF FF FF | 	byte	$00, $00, $00, $18, $3c, $3c, $18, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
248a7     FF FF FF E7 
248ab     C3 C3 E7 FF 
248af     FF FF FF FF 
248b3     FF 00 00 00 | 	byte	$ff, $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
248b7     00 00 3C 66 
248bb     42 42 66 3C 
248bf     00 00 00 00 
248c3     00 FF FF FF | 	byte	$00, $00, $3c, $66, $42, $42, $66, $3c, $00, $00, $00, $00, $00, $ff, $ff, $ff
248c7     FF FF C3 99 
248cb     BD BD 99 C3 
248cf     FF FF FF FF 
248d3     FF 00 00 00 | 	byte	$ff, $ff, $c3, $99, $bd, $bd, $99, $c3, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
248d7     78 70 58 4C 
248db     1E 33 33 33 
248df     33 1E 00 00 
248e3     00 00 00 00 | 	byte	$78, $70, $58, $4c, $1e, $33, $33, $33, $33, $1e, $00, $00, $00, $00, $00, $00
248e7     3C 66 66 66 
248eb     66 3C 18 7E 
248ef     18 18 00 00 
248f3     00 00 00 00 | 	byte	$3c, $66, $66, $66, $66, $3c, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00
248f7     FC CC FC 0C 
248fb     0C 0C 0C 0E 
248ff     0F 07 00 00 
24903     00 00 00 00 | 	byte	$fc, $cc, $fc, $0c, $0c, $0c, $0c, $0e, $0f, $07, $00, $00, $00, $00, $00, $00
24907     FE C6 FE C6 
2490b     C6 C6 C6 E6 
2490f     E7 67 03 00 
24913     00 00 00 00 | 	byte	$fe, $c6, $fe, $c6, $c6, $c6, $c6, $e6, $e7, $67, $03, $00, $00, $00, $00, $00
24917     18 18 DB 3C 
2491b     E7 3C DB 18 
2491f     18 00 00 00 
24923     00 00 00 01 | 	byte	$18, $18, $db, $3c, $e7, $3c, $db, $18, $18, $00, $00, $00, $00, $00, $00, $01
24927     03 07 0F 1F 
2492b     7F 1F 0F 07 
2492f     03 01 00 00 
24933     00 00 00 40 | 	byte	$03, $07, $0f, $1f, $7f, $1f, $0f, $07, $03, $01, $00, $00, $00, $00, $00, $40
24937     60 70 78 7C 
2493b     7F 7C 78 70 
2493f     60 40 00 00 
24943     00 00 00 00 | 	byte	$60, $70, $78, $7c, $7f, $7c, $78, $70, $60, $40, $00, $00, $00, $00, $00, $00
24947     18 3C 7E 18 
2494b     18 18 7E 3C 
2494f     18 00 00 00 
24953     00 00 00 00 | 	byte	$18, $3c, $7e, $18, $18, $18, $7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00
24957     66 66 66 66 
2495b     66 66 66    | 	byte	$66[7]
2495e     00 66 66 00 
24962     00 00 00 00 
24966     00 FE DB DB 
2496a     DB DE D8 D8 | 	byte	$00, $66, $66, $00, $00, $00, $00, $00, $00, $fe, $db, $db, $db, $de, $d8, $d8
2496e     D8 D8 D8 00 
24972     00 00 00 3E 
24976     63 06 1C 36 
2497a     63 63 36 1C | 	byte	$d8, $d8, $d8, $00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c
2497e     30 63 3E 00 
24982     00 00 00 00 
24986     00 00 00 00 
2498a     00 00 00 7F | 	byte	$30, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2498e     7F 7F 7F 00 
24992     00 00 00 00 
24996     00 18 3C 7E 
2499a     18 18 18 7E | 	byte	$7f, $7f, $7f, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $7e
2499e     3C 18 7E 00 
249a2     00 00 00 00 
249a6     00 18 3C 7E 
249aa     18 18 18 18 | 	byte	$3c, $18, $7e, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $18
249ae     18 18 18 00 
249b2     00 00 00 00 
249b6     00 18 18 18 
249ba     18 18 18 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
249be     7E 3C 18 00 
249c2     00 00 00 00 
249c6     00 00 00 18 
249ca     30 7F 30 18 | 	byte	$7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $18, $30, $7f, $30, $18
249ce     00 00 00 00 
249d2     00 00 00 00 
249d6     00 00 00    | 	byte	$00[11]
249d9     0C 06 7F 06 
249dd     0C 00 00 00 
249e1     00 00 00 00 
249e5     00 00 00 00 | 	byte	$0c, $06, $7f, $06, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
249e9     00 03 03 03 
249ed     7F 00 00 00 
249f1     00 00 00 00 
249f5     00 00 00 00 | 	byte	$00, $03, $03, $03, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
249f9     14 36 7F 36 
249fd     14 00 00 00 
24a01     00 00 00 00 
24a05     00 00 00 08 | 	byte	$14, $36, $7f, $36, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08
24a09     1C 1C 3E 3E 
24a0d     7F 7F 00 00 
24a11     00 00 00 00 
24a15     00 00 00 7F | 	byte	$1c, $1c, $3e, $3e, $7f, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
24a19     7F 3E 3E 1C 
24a1d     1C 08 00 00 
24a21     00 00 00 00 
24a25     00 00 00 00 | 	byte	$7f, $3e, $3e, $1c, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24a29     00 00 00 00 
24a2d     00 00 00 00 
24a31     00 00 00 00 
24a35     00 00       | 	byte	$00[14]
24a37     18 3C 3C 3C 
24a3b     18 18 18 00 
24a3f     18 18 00 00 
24a43     00 00 66 66 | 	byte	$18, $3c, $3c, $3c, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $66, $66
24a47     66 24 00 00 
24a4b     00 00 00 00 
24a4f     00 00 00 00 
24a53     00 00 00 00 | 	byte	$66, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24a57     00 36 36 7F 
24a5b     36 36 36 7F 
24a5f     36 36 00 00 
24a63     00 00 18 18 | 	byte	$00, $36, $36, $7f, $36, $36, $36, $7f, $36, $36, $00, $00, $00, $00, $18, $18
24a67     3E 63 43 03 
24a6b     3E 60 60 61 
24a6f     63 3E 18 18 
24a73     00 00 00 00 | 	byte	$3e, $63, $43, $03, $3e, $60, $60, $61, $63, $3e, $18, $18, $00, $00, $00, $00
24a77     00 00 43 63 
24a7b     30 18 0C 06 
24a7f     63 61 00 00 
24a83     00 00 00 00 | 	byte	$00, $00, $43, $63, $30, $18, $0c, $06, $63, $61, $00, $00, $00, $00, $00, $00
24a87     1C 36 36 1C 
24a8b     6E 3B 33 33 
24a8f     33 6E 00 00 
24a93     00 00 00 00 | 	byte	$1c, $36, $36, $1c, $6e, $3b, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00
24a97     0C 0C 0C 06 
24a9b     00 00 00 00 
24a9f     00 00 00 00 
24aa3     00 00 00 00 | 	byte	$0c, $0c, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24aa7     30 18 0C 0C 
24aab     0C 0C 0C 0C 
24aaf     18 30 00 00 
24ab3     00 00 00 00 | 	byte	$30, $18, $0c, $0c, $0c, $0c, $0c, $0c, $18, $30, $00, $00, $00, $00, $00, $00
24ab7     0C 18 30 30 
24abb     30 30 30 30 
24abf     18 0C 00 00 
24ac3     00 00 00 00 | 	byte	$0c, $18, $30, $30, $30, $30, $30, $30, $18, $0c, $00, $00, $00, $00, $00, $00
24ac7     00 00 00 66 
24acb     3C FF 3C 66 
24acf     00 00 00 00 
24ad3     00 00 00 00 | 	byte	$00, $00, $00, $66, $3c, $ff, $3c, $66, $00, $00, $00, $00, $00, $00, $00, $00
24ad7     00 00 00 18 
24adb     18 7E 18 18 
24adf     00 00 00 00 
24ae3     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00
24ae7     00 00 00 00 
24aeb     00 00 00 00 | 	byte	$00[8]
24aef     18 18 18 0C 
24af3     00 00 00 00 
24af7     00 00 00 00 
24afb     00 7F 00 00 | 	byte	$18, $18, $18, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $00, $00
24aff     00 00 00 00 
24b03     00 00 00 00 
24b07     00 00 00 00 
24b0b     00 00 00 00 | 	byte	$00[16]
24b0f     18 18 00 00 
24b13     00 00 00 00 
24b17     00 00 40 60 
24b1b     30 18 0C 06 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $40, $60, $30, $18, $0c, $06
24b1f     03 01 00 00 
24b23     00 00 00 00 
24b27     1C 36 63 63 
24b2b     6B 6B 63 63 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $1c, $36, $63, $63, $6b, $6b, $63, $63
24b2f     36 1C 00 00 
24b33     00 00 00 00 
24b37     18 1C 1E 18 
24b3b     18 18 18 18 | 	byte	$36, $1c, $00, $00, $00, $00, $00, $00, $18, $1c, $1e, $18, $18, $18, $18, $18
24b3f     18 7E 00 00 
24b43     00 00 00 00 
24b47     3E 63 60 30 
24b4b     18 0C 06 03 | 	byte	$18, $7e, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $30, $18, $0c, $06, $03
24b4f     63 7F 00 00 
24b53     00 00 00 00 
24b57     3E 63 60 60 
24b5b     3C 60 60 60 | 	byte	$63, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $60, $3c, $60, $60, $60
24b5f     63 3E 00 00 
24b63     00 00 00 00 
24b67     30 38 3C 36 
24b6b     33 7F 30 30 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $30, $38, $3c, $36, $33, $7f, $30, $30
24b6f     30 78 00 00 
24b73     00 00 00 00 
24b77     7F 03 03 03 
24b7b     3F 60 60 60 | 	byte	$30, $78, $00, $00, $00, $00, $00, $00, $7f, $03, $03, $03, $3f, $60, $60, $60
24b7f     63 3E 00 00 
24b83     00 00 00 00 
24b87     1C 06 03 03 
24b8b     3F 63 63 63 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $1c, $06, $03, $03, $3f, $63, $63, $63
24b8f     63 3E 00 00 
24b93     00 00 00 00 
24b97     7F 63 60 60 
24b9b     30 18 0C 0C | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $7f, $63, $60, $60, $30, $18, $0c, $0c
24b9f     0C 0C 00 00 
24ba3     00 00 00 00 
24ba7     3E 63 63 63 
24bab     3E 63 63 63 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $3e, $63, $63, $63
24baf     63 3E 00 00 
24bb3     00 00 00 00 
24bb7     3E 63 63 63 
24bbb     7E 60 60 60 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $7e, $60, $60, $60
24bbf     30 1E 00 00 
24bc3     00 00 00 00 
24bc7     00 00 00 18 
24bcb     18 00 00 00 | 	byte	$30, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
24bcf     18 18 00 00 
24bd3     00 00 00 00 
24bd7     00 00 00 18 
24bdb     18 00 00 00 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
24bdf     18 18 0C 00 
24be3     00 00 00 00 
24be7     00 60 30 18 
24beb     0C 06 0C 18 | 	byte	$18, $18, $0c, $00, $00, $00, $00, $00, $00, $60, $30, $18, $0c, $06, $0c, $18
24bef     30 60 00 00 
24bf3     00 00 00 00 
24bf7     00 00 00 7E 
24bfb     00 00 7E 00 | 	byte	$30, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $00, $00, $7e, $00
24bff     00 00 00 00 
24c03     00 00 00 00 
24c07     00          | 	byte	$00[9]
24c08     06 0C 18 30 
24c0c     60 30 18 0C 
24c10     06 00 00 00 
24c14     00 00 00 3E | 	byte	$06, $0c, $18, $30, $60, $30, $18, $0c, $06, $00, $00, $00, $00, $00, $00, $3e
24c18     63 63 30 18 
24c1c     18 18 00 18 
24c20     18 00 00 00 
24c24     00 00 00 00 | 	byte	$63, $63, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00
24c28     3E 63 63 7B 
24c2c     7B 7B 3B 03 
24c30     3E 00 00 00 
24c34     00 00 00 08 | 	byte	$3e, $63, $63, $7b, $7b, $7b, $3b, $03, $3e, $00, $00, $00, $00, $00, $00, $08
24c38     1C 36 63 63 
24c3c     7F 63 63 63 
24c40     63 00 00 00 
24c44     00 00 00 3F | 	byte	$1c, $36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3f
24c48     66 66 66 3E 
24c4c     66 66 66 66 
24c50     3F 00 00 00 
24c54     00 00 00 3C | 	byte	$66, $66, $66, $3e, $66, $66, $66, $66, $3f, $00, $00, $00, $00, $00, $00, $3c
24c58     66 43 03 03 
24c5c     03 03 43 66 
24c60     3C 00 00 00 
24c64     00 00 00 1F | 	byte	$66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00, $00, $1f
24c68     36 66 66 66 
24c6c     66 66 66 36 
24c70     1F 00 00 00 
24c74     00 00 00 7F | 	byte	$36, $66, $66, $66, $66, $66, $66, $36, $1f, $00, $00, $00, $00, $00, $00, $7f
24c78     66 46 16 1E 
24c7c     16 06 46 66 
24c80     7F 00 00 00 
24c84     00 00 00 7F | 	byte	$66, $46, $16, $1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $7f
24c88     66 46 16 1E 
24c8c     16 06 06 06 
24c90     0F 00 00 00 
24c94     00 00 00 3C | 	byte	$66, $46, $16, $1e, $16, $06, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $3c
24c98     66 43 03 03 
24c9c     7B 63 63 66 
24ca0     5C 00 00 00 
24ca4     00 00 00 63 | 	byte	$66, $43, $03, $03, $7b, $63, $63, $66, $5c, $00, $00, $00, $00, $00, $00, $63
24ca8     63 63 63 7F 
24cac     63 63 63 63 
24cb0     63 00 00 00 
24cb4     00 00 00 3C | 	byte	$63, $63, $63, $7f, $63, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3c
24cb8     18 18 18 18 
24cbc     18 18 18 18 | 	byte	$18[8]
24cc0     3C 00 00 00 
24cc4     00 00 00 78 
24cc8     30 30 30 30 
24ccc     30 33 33 33 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $78, $30, $30, $30, $30, $30, $33, $33, $33
24cd0     1E 00 00 00 
24cd4     00 00 00 67 
24cd8     66 66 36 1E 
24cdc     1E 36 66 66 | 	byte	$1e, $00, $00, $00, $00, $00, $00, $67, $66, $66, $36, $1e, $1e, $36, $66, $66
24ce0     67 00 00 00 
24ce4     00 00 00 0F 
24ce8     06 06 06 06 
24cec     06 06 46 66 | 	byte	$67, $00, $00, $00, $00, $00, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
24cf0     7F 00 00 00 
24cf4     00 00 00 63 
24cf8     77 7F 7F 6B 
24cfc     63 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $63, $77, $7f, $7f, $6b, $63, $63, $63, $63
24d00     63 00 00 00 
24d04     00 00 00 63 
24d08     67 6F 7F 7B 
24d0c     73 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63
24d10     63 00 00 00 
24d14     00 00 00 3E 
24d18     63 63 63 63 
24d1c     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
24d20     3E 00 00 00 
24d24     00 00 00 3F 
24d28     66 66 66 3E 
24d2c     06 06 06 06 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $06, $06, $06, $06
24d30     0F 00 00 00 
24d34     00 00 00 3E 
24d38     63 63 63 63 
24d3c     63 63 6B 7B | 	byte	$0f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $6b, $7b
24d40     3E 30 70 00 
24d44     00 00 00 3F 
24d48     66 66 66 3E 
24d4c     36 66 66 66 | 	byte	$3e, $30, $70, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66
24d50     67 00 00 00 
24d54     00 00 00 3E 
24d58     63 63 06 1C 
24d5c     30 60 63 63 | 	byte	$67, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
24d60     3E 00 00 00 
24d64     00 00 00 7E 
24d68     7E 5A 18 18 
24d6c     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
24d70     3C 00 00 00 
24d74     00 00 00 63 
24d78     63 63 63 63 
24d7c     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
24d80     3E 00 00 00 
24d84     00 00 00 63 
24d88     63 63 63 63 
24d8c     63 63 36 1C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $36, $1c
24d90     08 00 00 00 
24d94     00 00 00 63 
24d98     63 63 63 6B 
24d9c     6B 6B 7F 77 | 	byte	$08, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $6b, $6b, $6b, $7f, $77
24da0     36 00 00 00 
24da4     00 00 00 63 
24da8     63 36 3E 1C 
24dac     1C 3E 36 63 | 	byte	$36, $00, $00, $00, $00, $00, $00, $63, $63, $36, $3e, $1c, $1c, $3e, $36, $63
24db0     63 00 00 00 
24db4     00 00 00 66 
24db8     66 66 66 3C 
24dbc     18 18 18 18 | 	byte	$63, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18
24dc0     3C 00 00 00 
24dc4     00 00 00 7F 
24dc8     63 61 30 18 
24dcc     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
24dd0     7F 00 00 00 
24dd4     00 00 00 3C 
24dd8     0C 0C 0C 0C 
24ddc     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $3c, $0c, $0c, $0c, $0c, $0c, $0c, $0c, $0c
24de0     3C 00 00 00 
24de4     00 00 00 00 
24de8     01 03 07 0E 
24dec     1C 38 70 60 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $01, $03, $07, $0e, $1c, $38, $70, $60
24df0     40 00 00 00 
24df4     00 00 00 3C 
24df8     30 30 30 30 
24dfc     30 30 30 30 | 	byte	$40, $00, $00, $00, $00, $00, $00, $3c, $30, $30, $30, $30, $30, $30, $30, $30
24e00     3C 00 00 00 
24e04     1C 36 00 00 
24e08     00 00 00 00 
24e0c     00 00 00 00 | 	byte	$3c, $00, $00, $00, $1c, $36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24e10     00 00 00 00 
24e14     00 00 00 00 
24e18     00 00 00 00 
24e1c     00 00 00 00 
24e20     00          | 	byte	$00[17]
24e21     FF 00 00 0C 
24e25     18 00 00 00 
24e29     00 00 00 00 
24e2d     00 00 00 00 | 	byte	$ff, $00, $00, $0c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24e31     00 00 00 00 
24e35     00 00 00 00 
24e39     00          | 	byte	$00[9]
24e3a     1E 30 3E 33 
24e3e     33 33 6E 00 
24e42     00 00 00 00 
24e46     00 07 06 06 | 	byte	$1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $07, $06, $06
24e4a     1E 36 66 66 
24e4e     66 66 3E 00 
24e52     00 00 00 00 
24e56     00 00 00 00 | 	byte	$1e, $36, $66, $66, $66, $66, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00
24e5a     3E 63 03 03 
24e5e     03 63 3E 00 
24e62     00 00 00 00 
24e66     00 38 30 30 | 	byte	$3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $30, $30
24e6a     3C 36 33 33 
24e6e     33 33 6E 00 
24e72     00 00 00 00 
24e76     00 00 00 00 | 	byte	$3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $00, $00, $00
24e7a     3E 63 7F 03 
24e7e     03 63 3E 00 
24e82     00 00 00 00 
24e86     00 38 6C 4C | 	byte	$3e, $63, $7f, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $6c, $4c
24e8a     0C 1E 0C 0C 
24e8e     0C 0C 1E 00 
24e92     00 00 00 00 
24e96     00 00 00 00 | 	byte	$0c, $1e, $0c, $0c, $0c, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00
24e9a     6E 33 33 33 
24e9e     33 33 3E 30 
24ea2     33 1E 00 00 
24ea6     00 07 06 06 | 	byte	$6e, $33, $33, $33, $33, $33, $3e, $30, $33, $1e, $00, $00, $00, $07, $06, $06
24eaa     36 6E 66 66 
24eae     66 66 67 00 
24eb2     00 00 00 00 
24eb6     00 18 18 00 | 	byte	$36, $6e, $66, $66, $66, $66, $67, $00, $00, $00, $00, $00, $00, $18, $18, $00
24eba     1C 18 18 18 
24ebe     18 18 3C 00 
24ec2     00 00 00 00 
24ec6     00 60 60 00 | 	byte	$1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $60, $60, $00
24eca     70 60 60 60 
24ece     60 60 60 66 
24ed2     66 3C 00 00 
24ed6     00 07 06 06 | 	byte	$70, $60, $60, $60, $60, $60, $60, $66, $66, $3c, $00, $00, $00, $07, $06, $06
24eda     66 36 1E 1E 
24ede     36 66 67 00 
24ee2     00 00 00 00 
24ee6     00 1C 18 18 | 	byte	$66, $36, $1e, $1e, $36, $66, $67, $00, $00, $00, $00, $00, $00, $1c, $18, $18
24eea     18 18 18 18 
24eee     18 18       | 	byte	$18[6]
24ef0     3C 00 00 00 
24ef4     00 00 00 00 
24ef8     00 00 37 7F 
24efc     6B 6B 6B 6B | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $37, $7f, $6b, $6b, $6b, $6b
24f00     63 00 00 00 
24f04     00 00 00 00 
24f08     00 00 3B 66 
24f0c     66 66 66 66 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
24f10     66 00 00 00 
24f14     00 00 00 00 
24f18     00 00 3E 63 
24f1c     63 63 63 63 | 	byte	$66, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63
24f20     3E 00 00 00 
24f24     00 00 00 00 
24f28     00 00 3B 66 
24f2c     66 66 66 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
24f30     3E 06 06 0F 
24f34     00 00 00 00 
24f38     00 00 6E 33 
24f3c     33 33 33 33 | 	byte	$3e, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $6e, $33, $33, $33, $33, $33
24f40     3E 30 30 78 
24f44     00 00 00 00 
24f48     00 00 3B 6E 
24f4c     66 06 06 06 | 	byte	$3e, $30, $30, $78, $00, $00, $00, $00, $00, $00, $3b, $6e, $66, $06, $06, $06
24f50     0F 00 00 00 
24f54     00 00 00 00 
24f58     00 00 3E 63 
24f5c     06 1C 30 63 | 	byte	$0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63
24f60     3E 00 00 00 
24f64     00 00 00 08 
24f68     0C 0C 3F 0C 
24f6c     0C 0C 0C 6C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
24f70     38 00 00 00 
24f74     00 00 00 00 
24f78     00 00 33 33 
24f7c     33 33 33 33 | 	byte	$38, $00, $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33
24f80     6E 00 00 00 
24f84     00 00 00 00 
24f88     00 00 63 63 
24f8c     63 63 63 36 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $36
24f90     1C 00 00 00 
24f94     00 00 00 00 
24f98     00 00 63 63 
24f9c     6B 6B 6B 7F | 	byte	$1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $6b, $6b, $6b, $7f
24fa0     36 00 00 00 
24fa4     00 00 00 00 
24fa8     00 00 63 36 
24fac     1C 1C 1C 36 | 	byte	$36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $1c, $36
24fb0     63 00 00 00 
24fb4     00 00 00 00 
24fb8     00 00 63 63 
24fbc     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63
24fc0     7E 60 30 1F 
24fc4     00 00 00 00 
24fc8     00 00 7F 33 
24fcc     18 0C 06 63 | 	byte	$7e, $60, $30, $1f, $00, $00, $00, $00, $00, $00, $7f, $33, $18, $0c, $06, $63
24fd0     7F 00 00 00 
24fd4     00 00 00 70 
24fd8     18 18 18 0E 
24fdc     18 18 18 18 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $70, $18, $18, $18, $0e, $18, $18, $18, $18
24fe0     70 00 00 00 
24fe4     00 00 00 18 
24fe8     18 18 18 18 
24fec     18 18 18 18 | 	byte	$70, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18
24ff0     18 00 00 00 
24ff4     00 00 00 0E 
24ff8     18 18 18 70 
24ffc     18 18 18 18 | 	byte	$18, $00, $00, $00, $00, $00, $00, $0e, $18, $18, $18, $70, $18, $18, $18, $18
25000     0E 00 00 00 
25004     6E 3B 00 00 
25008     00 00 00 00 
2500c     00 00 00 00 | 	byte	$0e, $00, $00, $00, $6e, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25010     00 00 00 00 
25014     00 00 00 00 
25018     00 00       | 	byte	$00[10]
2501a     08 1C 36 63 
2501e     63 63 7F 00 
25022     00 00 00 00 
25026     00 3C 66 43 | 	byte	$08, $1c, $36, $63, $63, $63, $7f, $00, $00, $00, $00, $00, $00, $3c, $66, $43
2502a     03 03 03 03 
2502e     43 66 3C 18 
25032     30 1E 00 00 
25036     00 00 33 00 | 	byte	$03, $03, $03, $03, $43, $66, $3c, $18, $30, $1e, $00, $00, $00, $00, $33, $00
2503a     33 33 33 33 
2503e     33 33       | 	byte	$33[6]
25040     6E 00 00 00 
25044     00 00 60 30 
25048     18 00 3E 63 
2504c     7F 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $7f, $03, $03, $63
25050     3E 00 00 00 
25054     00 00 08 1C 
25058     36 00 1E 30 
2505c     3E 33 33 33 | 	byte	$3e, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $1e, $30, $3e, $33, $33, $33
25060     6E 00 00 00 
25064     00 00 00 00 
25068     33 00 1E 30 
2506c     3E 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $33, $00, $1e, $30, $3e, $33, $33, $33
25070     6E 00 00 00 
25074     00 00 1C 36 
25078     1C 00 33 33 
2507c     33 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $1c, $36, $1c, $00, $33, $33, $33, $33, $33, $33
25080     6E 00 00 00 
25084     00 00 60 30 
25088     18 00 3E 63 
2508c     03 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $03, $03, $03, $63
25090     3E 00 00 00 
25094     00 00 00 00 
25098     00 00 3E 63 
2509c     03 03 03 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $03, $03, $03, $63
250a0     3E 18 30 1E 
250a4     00 00 00 1C 
250a8     58 78 38 18 
250ac     1C 1E 1A 18 | 	byte	$3e, $18, $30, $1e, $00, $00, $00, $1c, $58, $78, $38, $18, $1c, $1e, $1a, $18
250b0     3C 00 00 00 
250b4     00 00 00 00 
250b8     63 00 3E 63 
250bc     7F 03 03 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $7f, $03, $03, $63
250c0     3E 00 00 00 
250c4     66 33 00 3E 
250c8     63 63 63 63 
250cc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $66, $33, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
250d0     3E 00 00 00 
250d4     00 00 CC 66 
250d8     33 00 3E 63 
250dc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $cc, $66, $33, $00, $3e, $63, $63, $63, $63, $63
250e0     3E 00 00 00 
250e4     00 00 18 3C 
250e8     66 00 1C 18 
250ec     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $18, $3c, $66, $00, $1c, $18, $18, $18, $18, $18
250f0     3C 00 00 00 
250f4     30 18 00 7F 
250f8     63 61 30 18 
250fc     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
25100     7F 00 00 00 
25104     00 63 00 08 
25108     1C 36 63 63 
2510c     7F 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $63, $00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63
25110     63 00 00 00 
25114     30 18 00 3C 
25118     66 43 03 03 
2511c     03 03 43 66 | 	byte	$63, $00, $00, $00, $30, $18, $00, $3c, $66, $43, $03, $03, $03, $03, $43, $66
25120     3C 00 00 00 
25124     30 18 00 7F 
25128     66 46 16 1E 
2512c     16 06 46 66 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66
25130     7F 00 00 00 
25134     0C 06 00 0F 
25138     06 06 06 06 
2513c     06 06 46 66 | 	byte	$7f, $00, $00, $00, $0c, $06, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
25140     7F 00 00 00 
25144     30 18 00 1C 
25148     18 18 18 18 
2514c     18 18 18 18 | 	byte	$7f, $00, $00, $00, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $18, $18, $18
25150     3C 00 00 00 
25154     00 00 08 1C 
25158     36 00 3E 63 
2515c     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $3e, $63, $63, $63, $63, $63
25160     3E 00 00 00 
25164     00 00 00 00 
25168     63 00 3E 63 
2516c     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63
25170     3E 00 00 00 
25174     00 00 00 6F 
25178     46 26 06 06 
2517c     06 06 46 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $6f, $46, $26, $06, $06, $06, $06, $46, $66
25180     7F 00 00 00 
25184     00 00 00 6E 
25188     4C 2C 0C 0C 
2518c     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $6e, $4c, $2c, $0c, $0c, $0c, $0c, $0c, $0c
25190     1E 00 00 00 
25194     30 18 00 3E 
25198     63 63 06 1C 
2519c     30 60 63 63 | 	byte	$1e, $00, $00, $00, $30, $18, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
251a0     3E 00 00 00 
251a4     00 00 60 30 
251a8     18 00 3E 63 
251ac     06 1C 30 63 | 	byte	$3e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $06, $1c, $30, $63
251b0     3E 00 00 00 
251b4     00 63 00 3E 
251b8     63 63 63 63 
251bc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
251c0     3E 00 00 00 
251c4     00 63 00 63 
251c8     63 63 63 63 
251cc     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
251d0     3E 00 00 00 
251d4     6C 38 00 7E 
251d8     7E 5A 18 18 
251dc     18 18 18 18 | 	byte	$3e, $00, $00, $00, $6c, $38, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
251e0     3C 00 00 00 
251e4     00 00 60 48 
251e8     2C 0C 3F 0C 
251ec     0C 0C 0C 6C | 	byte	$3c, $00, $00, $00, $00, $00, $60, $48, $2c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
251f0     38 00 00 00 
251f4     00 00 00 0F 
251f8     26 36 1E 0E 
251fc     07 07 46 66 | 	byte	$38, $00, $00, $00, $00, $00, $00, $0f, $26, $36, $1e, $0e, $07, $07, $46, $66
25200     7F 00 00 00 
25204     00 00 00 00 
25208     00 63 36 1C 
2520c     1C 36 63 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $36, $63, $00
25210     00 00 00 00 
25214     00 00       | 	byte	$00[6]
25216     36 1C 08 00 
2521a     3E 63 03 03 
2521e     03 63 3E 00 
25222     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00
25226     30 18 0C 00 
2522a     1E 30 3E 33 
2522e     33 33 6E 00 
25232     00 00 00 00 | 	byte	$30, $18, $0c, $00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00
25236     60 30 18 00 
2523a     1C 18 18 18 
2523e     18 18 3C 00 
25242     00 00 00 00 | 	byte	$60, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00
25246     60 30 18 00 
2524a     3E 63 63 63 
2524e     63 63 3E 00 
25252     00 00 00 00 | 	byte	$60, $30, $18, $00, $3e, $63, $63, $63, $63, $63, $3e, $00, $00, $00, $00, $00
25256     30 18 0C 00 
2525a     33 33 33 33 
2525e     33 33 6E 00 
25262     00 00 00 00 | 	byte	$30, $18, $0c, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00
25266     00 08 1C 36 
2526a     63 63 7F 63 
2526e     63 63 63 18 
25272     0C 78 00 00 | 	byte	$00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63, $63, $18, $0c, $78, $00, $00
25276     00 00 00 00 
2527a     1E 30 3E 33 
2527e     33 33 6E 18 
25282     0C 78 36 1C | 	byte	$00, $00, $00, $00, $1e, $30, $3e, $33, $33, $33, $6e, $18, $0c, $78, $36, $1c
25286     00 7F 63 61 
2528a     30 18 0C 06 
2528e     43 63 7F 00 
25292     00 00 00 00 | 	byte	$00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00
25296     36 1C 08 00 
2529a     7F 33 18 0C 
2529e     06 63 7F 00 
252a2     00 00 00 00 | 	byte	$36, $1c, $08, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00
252a6     00 7F 66 46 
252aa     16 1E 16 06 
252ae     46 66 7F 18 
252b2     0C 78 00 00 | 	byte	$00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66, $7f, $18, $0c, $78, $00, $00
252b6     00 00 00 00 
252ba     3E 63 7F 03 
252be     03 63 3E 18 
252c2     0C 78 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $7f, $03, $03, $63, $3e, $18, $0c, $78, $00, $00
252c6     00 3C 66 03 
252ca     1F 03 0F 03 
252ce     03 66 3C 00 
252d2     00 00 00 00 | 	byte	$00, $3c, $66, $03, $1f, $03, $0f, $03, $03, $66, $3c, $00, $00, $00, $00, $00
252d6     60 30 18 00 
252da     7F 33 18 0C 
252de     06 63 7F 00 
252e2     00 00 6C 38 | 	byte	$60, $30, $18, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $6c, $38
252e6     00 3C 66 43 
252ea     03 03 03 03 
252ee     43 66 3C 00 
252f2     00 00 00 00 | 	byte	$00, $3c, $66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00
252f6     00 00 00 00 
252fa     3E 63 06 1C 
252fe     30 63 3E 18 
25302     30 1E 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63, $3e, $18, $30, $1e, $00, $00
25306     00 00 00 00 
2530a     00 00       | 	byte	$00[6]
2530c     6C 36 1B 36 
25310     6C 00 00 00 
25314     00 00 00 00 
25318     00 00 00 00 | 	byte	$6c, $36, $1b, $36, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2531c     1B 36 6C 36 
25320     1B 00 00 00 
25324     88 22 88 22 
25328     88 22 88 22 | 	byte	$1b, $36, $6c, $36, $1b, $00, $00, $00, $88, $22, $88, $22, $88, $22, $88, $22
2532c     88 22 88 22 
25330     88 22 88 22 
25334     AA 55 AA 55 
25338     AA 55 AA 55 | 	byte	$88, $22, $88, $22, $88, $22, $88, $22, $aa, $55, $aa, $55, $aa, $55, $aa, $55
2533c     AA 55 AA 55 
25340     AA 55 AA 55 
25344     BB EE BB EE 
25348     BB EE BB EE | 	byte	$aa, $55, $aa, $55, $aa, $55, $aa, $55, $bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee
2534c     BB EE BB EE 
25350     BB EE BB EE 
25354     18 18 18 18 
25358     18 18 18 18 | 	byte	$bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee, $18, $18, $18, $18, $18, $18, $18, $18
2535c     18 18 18 18 
25360     18 18 18 18 
25364     18 18 18 18 
25368     18 18 18    | 	byte	$18[15]
2536b     1F 18 18 18 
2536f     18 18 18 18 
25373     18 30 18 00 
25377     08 1C 36 63 | 	byte	$1f, $18, $18, $18, $18, $18, $18, $18, $18, $30, $18, $00, $08, $1c, $36, $63
2537b     63 7F 63 63 
2537f     63 63 00 00 
25383     00 1C 36 00 
25387     08 1C 36 63 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $1c, $36, $00, $08, $1c, $36, $63
2538b     63 7F 63 63 
2538f     63 63 00 00 
25393     00 36 1C 00 
25397     7F 66 46 16 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $36, $1c, $00, $7f, $66, $46, $16
2539b     1E 16 06 46 
2539f     66 7F 00 00 
253a3     00 00 00 00 
253a7     3E 63 63 06 | 	byte	$1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06
253ab     1C 30 60 63 
253af     63 3E 18 30 
253b3     1E 6C 6C 6C 
253b7     6C 6C 6F 60 | 	byte	$1c, $30, $60, $63, $63, $3e, $18, $30, $1e, $6c, $6c, $6c, $6c, $6c, $6f, $60
253bb     6F 6C 6C 6C 
253bf     6C 6C 6C 6C 
253c3     6C 6C 6C 6C 
253c7     6C 6C 6C 6C | 	byte	$6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
253cb     6C 6C 6C 6C 
253cf     6C 6C 6C 6C 
253d3     6C          | 	byte	$6c[9]
253d4     00 00 00 00 
253d8     00          | 	byte	$00[5]
253d9     7F 60 6F 6C 
253dd     6C 6C 6C 6C 
253e1     6C 6C 6C 6C 
253e5     6C 6C 6C 6C | 	byte	$7f, $60, $6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
253e9     6F 60 7F 00 
253ed     00 00 00 00 
253f1     00 00 00 18 
253f5     18 00 7F 63 | 	byte	$6f, $60, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $7f, $63
253f9     61 30 18 0C 
253fd     06 43 63 7F 
25401     00 00 00 00 
25405     00 00 18 18 | 	byte	$61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00, $00, $18, $18
25409     00 7F 33 18 
2540d     0C 06 63 7F 
25411     00 00 00 00 
25415     00 00 00 00 | 	byte	$00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00, $00, $00, $00
25419     00 00 1F 18 
2541d     18 18 18 18 
25421     18 18 18 18 
25425     18 18 18 18 | 	byte	$00, $00, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
25429     18 18 F8 00 
2542d     00 00 00 00 
25431     00 00 00 18 
25435     18 18 18 18 | 	byte	$18, $18, $f8, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
25439     18 18 FF 00 
2543d     00 00 00 00 
25441     00 00 00 00 
25445     00 00 00 00 | 	byte	$18, $18, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25449     00 00 FF 18 
2544d     18 18 18 18 
25451     18 18 18 18 
25455     18 18 18 18 | 	byte	$00, $00, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
25459     18 18 F8 18 
2545d     18 18 18 18 
25461     18 18 18 00 
25465     00 00 00 00 | 	byte	$18, $18, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
25469     00 00 FF 00 
2546d     00 00 00 00 
25471     00 00 00 18 
25475     18 18 18 18 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
25479     18 18 FF 18 
2547d     18 18 18 18 
25481     18 18 18 63 
25485     3E 00 08 1C | 	byte	$18, $18, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $63, $3e, $00, $08, $1c
25489     36 63 63 7F 
2548d     63 63 63 63 
25491     00 00 00 00 
25495     00 00 63 3E | 	byte	$36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $63, $3e
25499     00 1E 30 3E 
2549d     33 33 33 6E 
254a1     00 00 00 6C 
254a5     6C 6C 6C 6C | 	byte	$00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
254a9     EC 0C FC 00 
254ad     00 00 00 00 
254b1     00 00 00 00 
254b5     00 00 00 00 | 	byte	$ec, $0c, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
254b9     FC 0C EC 6C 
254bd     6C 6C 6C 6C 
254c1     6C 6C 6C 6C 
254c5     6C 6C 6C 6C | 	byte	$fc, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
254c9     EF 00 FF 00 
254cd     00 00 00 00 
254d1     00 00 00 00 
254d5     00 00 00 00 | 	byte	$ef, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
254d9     FF 00 EF 6C 
254dd     6C 6C 6C 6C 
254e1     6C 6C 6C 6C 
254e5     6C 6C 6C 6C | 	byte	$ff, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
254e9     EC 0C EC 6C 
254ed     6C 6C 6C 6C 
254f1     6C 6C 6C 00 
254f5     00 00 00 00 | 	byte	$ec, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
254f9     FF 00 FF 00 
254fd     00 00 00 00 
25501     00 00 00 6C 
25505     6C 6C 6C 6C | 	byte	$ff, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
25509     EF 00 EF 6C 
2550d     6C 6C 6C 6C 
25511     6C 6C 6C 00 
25515     00 00 00 00 | 	byte	$ef, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
25519     63 3E 63 63 
2551d     63 63 3E 63 
25521     00 00 00 00 
25525     00 00 30 7E | 	byte	$63, $3e, $63, $63, $63, $63, $3e, $63, $00, $00, $00, $00, $00, $00, $30, $7e
25529     30 3C 36 33 
2552d     33 33 33 6E 
25531     00 00 00 00 
25535     00 00 1F 36 | 	byte	$30, $3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $1f, $36
25539     66 66 6F 66 
2553d     66 66 36 1F 
25541     00 00 00 36 
25545     1C 00 1F 36 | 	byte	$66, $66, $6f, $66, $66, $66, $36, $1f, $00, $00, $00, $36, $1c, $00, $1f, $36
25549     66 66 66 66 
2554d     66 66       | 	byte	$66[6]
2554f     36 1F 00 00 
25553     00 00 63 00 
25557     7F 66 46 16 
2555b     1E 16 06 46 | 	byte	$36, $1f, $00, $00, $00, $00, $63, $00, $7f, $66, $46, $16, $1e, $16, $06, $46
2555f     66 7F 00 00 
25563     00 6C 38 00 
25567     38 30 30 3C 
2556b     36 33 33 33 | 	byte	$66, $7f, $00, $00, $00, $6c, $38, $00, $38, $30, $30, $3c, $36, $33, $33, $33
2556f     33 6E 00 00 
25573     00 36 1C 00 
25577     63 67 6F 7F 
2557b     7B 73 63 63 | 	byte	$33, $6e, $00, $00, $00, $36, $1c, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63
2557f     63 63 00 00 
25583     00 30 18 00 
25587     3C 18 18 18 
2558b     18 18 18 18 | 	byte	$63, $63, $00, $00, $00, $30, $18, $00, $3c, $18, $18, $18, $18, $18, $18, $18
2558f     18 3C 00 00 
25593     00 3C 66 00 
25597     3C 18 18 18 
2559b     18 18 18 18 | 	byte	$18, $3c, $00, $00, $00, $3c, $66, $00, $3c, $18, $18, $18, $18, $18, $18, $18
2559f     18 3C 00 00 
255a3     00 00 00 36 
255a7     1C 08 00 3E 
255ab     63 7F 03 03 | 	byte	$18, $3c, $00, $00, $00, $00, $00, $36, $1c, $08, $00, $3e, $63, $7f, $03, $03
255af     63 3E 00 00 
255b3     00 18 18 18 
255b7     18 18 18 18 
255bb     1F 00 00 00 | 	byte	$63, $3e, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $1f, $00, $00, $00
255bf     00 00 00 00 
255c3     00 00 00 00 
255c7     00 00 00 00 | 	byte	$00[12]
255cb     F8 18 18 18 
255cf     18 18 18 18 
255d3     18 FF FF FF 
255d7     FF FF FF FF | 	byte	$f8, $18, $18, $18, $18, $18, $18, $18, $18, $ff, $ff, $ff, $ff, $ff, $ff, $ff
255db     FF FF FF FF 
255df     FF FF FF FF 
255e3     FF          | 	byte	$ff[9]
255e4     00 00 00 00 
255e8     00 00 00    | 	byte	$00[7]
255eb     FF FF FF FF 
255ef     FF FF FF FF 
255f3     FF          | 	byte	$ff[9]
255f4     00 00 00 7E 
255f8     7E 5A 18 18 
255fc     18 18 18 18 
25600     3C 18 30 1E | 	byte	$00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18, $3c, $18, $30, $1e
25604     1C 36 1C 63 
25608     63 63 63 63 
2560c     63 63 63 63 
25610     3E 00 00 00 | 	byte	$1c, $36, $1c, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
25614     FF FF FF FF 
25618     FF FF FF    | 	byte	$ff[7]
2561b     00 00 00 00 
2561f     00 00 00 00 
25623     00          | 	byte	$00[9]
25624     30 18 00 3E 
25628     63 63 63 63 
2562c     63 63 63 63 
25630     3E 00 00 00 | 	byte	$30, $18, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
25634     00 00 00 1E 
25638     33 33 33 1B 
2563c     33 63 63 63 
25640     33 00 00 00 | 	byte	$00, $00, $00, $1e, $33, $33, $33, $1b, $33, $63, $63, $63, $33, $00, $00, $00
25644     1C 36 00 3E 
25648     63 63 63 63 
2564c     63 63 63 63 
25650     3E 00 00 00 | 	byte	$1c, $36, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
25654     30 18 00 63 
25658     67 6F 7F 7B 
2565c     73 63 63 63 
25660     63 00 00 00 | 	byte	$30, $18, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63, $63, $00, $00, $00
25664     00 00 60 30 
25668     18 00 3B 66 
2566c     66 66 66 66 
25670     66 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
25674     00 00 36 1C 
25678     08 00 3B 66 
2567c     66 66 66 66 
25680     66 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
25684     36 1C 00 3E 
25688     63 63 06 1C 
2568c     30 60 63 63 
25690     3E 00 00 00 | 	byte	$36, $1c, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63, $3e, $00, $00, $00
25694     00 00 36 1C 
25698     08 00 3E 63 
2569c     06 1C 30 63 
256a0     3E 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3e, $63, $06, $1c, $30, $63, $3e, $00, $00, $00
256a4     30 18 00 3F 
256a8     66 66 66 3E 
256ac     36 66 66 66 
256b0     6F 00 00 00 | 	byte	$30, $18, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00
256b4     30 18 00 63 
256b8     63 63 63 63 
256bc     63 63 63 63 
256c0     3E 00 00 00 | 	byte	$30, $18, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
256c4     00 00 60 30 
256c8     18 00 3B 6E 
256cc     66 06 06 06 
256d0     0F 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00
256d4     66 33 00 63 
256d8     63 63 63 63 
256dc     63 63 63 63 
256e0     3E 00 00 00 | 	byte	$66, $33, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
256e4     00 00 60 30 
256e8     18 00 63 63 
256ec     63 63 63 63 
256f0     7E 60 30 1F | 	byte	$00, $00, $60, $30, $18, $00, $63, $63, $63, $63, $63, $63, $7e, $60, $30, $1f
256f4     30 18 00 66 
256f8     66 66 66 3C 
256fc     18 18 18 18 
25700     3C 00 00 00 | 	byte	$30, $18, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18, $3c, $00, $00, $00
25704     00 00 00 08 
25708     0C 0C 3F 0C 
2570c     0C 0C 0C 6C 
25710     38 18 30 1E | 	byte	$00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c, $38, $18, $30, $1e
25714     30 18 00 00 
25718     00 00 00 00 
2571c     00 00 00 00 
25720     00 00 00 00 | 	byte	$30, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25724     00 00 00 00 
25728     00 00 00 00 | 	byte	$00[8]
2572c     7F 00 00 00 
25730     00 00 00 00 
25734     66 33 00 00 
25738     00 00 00 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $66, $33, $00, $00, $00, $00, $00, $00
2573c     00 00 00 00 
25740     00 00 00 00 
25744     00 00 00 00 
25748     00 00 00 00 
2574c     00 00 00 00 
25750     00          | 	byte	$00[21]
25751     0C 06 3C 36 
25755     1C 00 00 00 
25759     00 00 00 00 
2575d     00 00 00 00 | 	byte	$0c, $06, $3c, $36, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25761     00 00 00 63 
25765     3E 00 00 00 
25769     00 00 00 00 
2576d     00 00 00 00 | 	byte	$00, $00, $00, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25771     00 00 00 00 
25775     3E 63 06 1C 
25779     36 63 63 36 
2577d     1C 30 63 3E | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c, $30, $63, $3e
25781     00 00 00 00 
25785     00 00 00 00 | 	byte	$00[8]
25789     18 00 7E 00 
2578d     18 00 00 00 
25791     00 00 00 00 
25795     00 00 00 00 | 	byte	$18, $00, $7e, $00, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25799     00 00 00 00 
2579d     00 00 00 00 | 	byte	$00[8]
257a1     18 30 1E 00 
257a5     00 00 1C 36 
257a9     36 1C 00 00 
257ad     00 00 00 00 | 	byte	$18, $30, $1e, $00, $00, $00, $1c, $36, $36, $1c, $00, $00, $00, $00, $00, $00
257b1     00 00 00 00 
257b5     63 00 00 00 
257b9     00 00 00 00 
257bd     00 00 00 00 | 	byte	$00, $00, $00, $00, $63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
257c1     00 00 00 18 
257c5     18 00 00 00 
257c9     00 00 00 00 
257cd     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
257d1     00 00 00 00 
257d5     00          | 	byte	$00[5]
257d6     CC 66 33 00 
257da     33 33 33 33 
257de     33 33 6E 00 
257e2     00 00 36 1C | 	byte	$cc, $66, $33, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $36, $1c
257e6     00 3F 66 66 
257ea     66 3E 36 66 
257ee     66 66 6F 00 
257f2     00 00 00 00 | 	byte	$00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00, $00, $00
257f6     36 1C 08 00 
257fa     3B 6E 66 06 
257fe     06 06 0F 00 
25802     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00, $00, $00
25806     00 00 00 7E 
2580a     7E 7E 7E 7E 
2580e     7E 7E 00 00 
25812     00 00 00 00 | 	byte	$00, $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00
25816     00 00 00 00 
2581a     00 00 00 00 
2581e     00 00 00 00 
25822     00 00       | 	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25824     00 00 00 00 
      ...             
25854     00 00 00 00 
25858     00 00 00    | st_font        file "st4font.def"
2585b     FF FF 00 00 
2585f     00 00 00 00 
25863     00 18 18 18 
25867     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2586b     18 18 18 18 
2586f     18 18 18 18 
25873     18          | 	byte	$18[9]
25874     00 00 00 00 
25878     00 00 00    | 	byte	$00[7]
2587b     FF FF 18 18 
2587f     18 18 18 18 
25883     18 18 18 18 
25887     18 18 18 18 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2588b     FF FF 00 00 
2588f     00 00 00 00 
25893     00 18 18 18 
25897     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2589b     1F 1F 18 18 
2589f     18 18 18 18 
258a3     18 18 18 18 
258a7     18 18 18 18 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
258ab     F8 F8 18 18 
258af     18 18 18 18 
258b3     18 00 00 00 
258b7     00 00 00 00 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
258bb     1F 1F 18 18 
258bf     18 18 18 18 
258c3     18 00 00 00 
258c7     00 00 00 00 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
258cb     F8 F8 18 18 
258cf     18 18 18 18 
258d3     18 18 18 18 
258d7     18 18 18 18 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
258db     1F 1F 00 00 
258df     00 00 00 00 
258e3     00 18 18 18 
258e7     18 18 18 18 | 	byte	$1f, $1f, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
258eb     F8 F8 00 00 
258ef     00 00 00 00 
258f3     00 18 18 18 
258f7     18 18 18 18 | 	byte	$f8, $f8, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
258fb     FF FF 18 18 
258ff     18 18 18 18 
25903     18 00 00 18 
25907     3C 7E 66 66 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $00, $00, $18, $3c, $7e, $66, $66
2590b     66 7E 7E 66 
2590f     66 66 66 30 
25913     18 00 00 7E 
25917     7E 06 06 3E | 	byte	$66, $7e, $7e, $66, $66, $66, $66, $30, $18, $00, $00, $7e, $7e, $06, $06, $3e
2591b     3E 06 06 06 
2591f     06 7E 7E 18 
25923     0C 30 18 3C 
25927     7E 66 66 06 | 	byte	$3e, $06, $06, $06, $06, $7e, $7e, $18, $0c, $30, $18, $3c, $7e, $66, $66, $06
2592b     06 06 06 66 
2592f     66 7E 3C 00 
25933     00 30 18 66 
25937     66 66 6E 6E | 	byte	$06, $06, $06, $66, $66, $7e, $3c, $00, $00, $30, $18, $66, $66, $66, $6e, $6e
2593b     7E 7E 76 76 
2593f     66 66 66 00 
25943     00 30 18 7C 
25947     7E 06 06 0E | 	byte	$7e, $7e, $76, $76, $66, $66, $66, $00, $00, $30, $18, $7c, $7e, $06, $06, $0e
2594b     1C 38 70 60 
2594f     60 7E 3E 00 
25953     00 30 18 7E 
25957     7E 30 30 18 | 	byte	$1c, $38, $70, $60, $60, $7e, $3e, $00, $00, $30, $18, $7e, $7e, $30, $30, $18
2595b     18 0C 0C 06 
2595f     06 7E 7E 00 
25963     00 18 18 00 
25967     7E 7E 30 30 | 	byte	$18, $0c, $0c, $06, $06, $7e, $7e, $00, $00, $18, $18, $00, $7e, $7e, $30, $30
2596b     18 18 0C 0C 
2596f     06 7E 7E 00 
25973     00 30 18 3C 
25977     7E 66 66 66 | 	byte	$18, $18, $0c, $0c, $06, $7e, $7e, $00, $00, $30, $18, $3c, $7e, $66, $66, $66
2597b     66 66 66 66 
2597f     66          | 	byte	$66[5]
25980     7E 3C 00 00 
25984     00 00 06 06 
25988     06 06 16 1E 
2598c     0E 06 06 06 | 	byte	$7e, $3c, $00, $00, $00, $00, $06, $06, $06, $06, $16, $1e, $0e, $06, $06, $06
25990     7E 7E 00 00 
25994     00 00 00 00 
25998     00 3C 7C 60 
2599c     7C 7E 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $00, $00, $00, $3c, $7c, $60, $7c, $7e, $66, $66
259a0     7E 7C 30 18 
259a4     00 00 00 00 
259a8     00 3C 7E 66 
259ac     66 7E 06 06 | 	byte	$7e, $7c, $30, $18, $00, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $06, $06
259b0     7E 7C 18 0C 
259b4     00 00 30 18 
259b8     00 3C 3E 06 
259bc     06 06 06 06 | 	byte	$7e, $7c, $18, $0c, $00, $00, $30, $18, $00, $3c, $3e, $06, $06, $06, $06, $06
259c0     7E 7C 00 00 
259c4     00 00 30 18 
259c8     00 3E 7E 66 
259cc     66 66 66 66 | 	byte	$7e, $7c, $00, $00, $00, $00, $30, $18, $00, $3e, $7e, $66, $66, $66, $66, $66
259d0     66 66 00 00 
259d4     00 00 30 18 
259d8     00 7C 7E 06 
259dc     0E 3C 70 60 | 	byte	$66, $66, $00, $00, $00, $00, $30, $18, $00, $7c, $7e, $06, $0e, $3c, $70, $60
259e0     7E 3E 00 00 
259e4     00 00 30 18 
259e8     00 7E 7E 30 
259ec     18 18 0C 0C | 	byte	$7e, $3e, $00, $00, $00, $00, $30, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
259f0     7E 7E 00 00 
259f4     00 00 18 18 
259f8     00 7E 7E 30 
259fc     18 18 0C 0C | 	byte	$7e, $7e, $00, $00, $00, $00, $18, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
25a00     7E 7E 00 00 
25a04     00 00 30 18 
25a08     00 3C 7E 66 
25a0c     66 66 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $00, $3c, $7e, $66, $66, $66, $66, $66
25a10     7E 3C 00 00 
25a14     00 00 1C 1C 
25a18     18 18 38 3C 
25a1c     1C 18 18 18 | 	byte	$7e, $3c, $00, $00, $00, $00, $1c, $1c, $18, $18, $38, $3c, $1c, $18, $18, $18
25a20     3C 3C 00 00 
25a24     00 00 00 00 
25a28     00 00 00 00 
25a2c     00 00 00 00 | 	byte	$3c, $3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25a30     00 00 00 00 
25a34     00 00       | 	byte	$00[6]
25a36     18 18 18 18 
25a3a     18 18 18 18 | 	byte	$18[8]
25a3e     00 00 18 18 
25a42     00 00 00 00 
25a46     66 66 66 66 
25a4a     00 00 00 00 | 	byte	$00, $00, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $00, $00, $00, $00
25a4e     00 00 00 00 
25a52     00 00 00 00 
25a56     00          | 	byte	$00[9]
25a57     66 66 FF FF 
25a5b     66 66 FF FF 
25a5f     66 66 00 00 
25a63     00 00 18 18 | 	byte	$66, $66, $ff, $ff, $66, $66, $ff, $ff, $66, $66, $00, $00, $00, $00, $18, $18
25a67     7C 7E 06 06 
25a6b     3E 7C 60 60 
25a6f     7E 3E 18 18 
25a73     00 00 00 66 | 	byte	$7c, $7e, $06, $06, $3e, $7c, $60, $60, $7e, $3e, $18, $18, $00, $00, $00, $66
25a77     66 30 30 18 
25a7b     18 0C 0C 66 
25a7f     66 00 00 00 
25a83     00 00 3C 7E | 	byte	$66, $30, $30, $18, $18, $0c, $0c, $66, $66, $00, $00, $00, $00, $00, $3c, $7e
25a87     66 66 3C 1C 
25a8b     1C FC FE 66 
25a8f     66 FE FC 00 
25a93     00 00 00 18 | 	byte	$66, $66, $3c, $1c, $1c, $fc, $fe, $66, $66, $fe, $fc, $00, $00, $00, $00, $18
25a97     18 18 18 18 
25a9b     00 00 00 00 
25a9f     00 00 00 00 
25aa3     00 00 00 30 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $30
25aa7     18 1C 0C 0C 
25aab     0C 0C 0C 0C 
25aaf     1C 18 30 00 
25ab3     00 00 00 0C | 	byte	$18, $1c, $0c, $0c, $0c, $0c, $0c, $0c, $1c, $18, $30, $00, $00, $00, $00, $0c
25ab7     18 38 30 30 
25abb     30 30 30 30 
25abf     38 18 0C 00 
25ac3     00 00 00 00 | 	byte	$18, $38, $30, $30, $30, $30, $30, $30, $38, $18, $0c, $00, $00, $00, $00, $00
25ac7     66 66 3C 3C 
25acb     FF FF 3C 3C 
25acf     66 66 00 00 
25ad3     00 00 00 00 | 	byte	$66, $66, $3c, $3c, $ff, $ff, $3c, $3c, $66, $66, $00, $00, $00, $00, $00, $00
25ad7     00 18 18 18 
25adb     7E 7E 18 18 
25adf     18 00 00 00 
25ae3     00 00 00 00 | 	byte	$00, $18, $18, $18, $7e, $7e, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
25ae7     00 00 00 00 
25aeb     00 00       | 	byte	$00[6]
25aed     18 18 18 18 
25af1     18          | 	byte	$18[5]
25af2     0C 04 00 00 
25af6     00 00 00 00 
25afa     7E 7E 00 00 
25afe     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $00, $00, $00, $00
25b02     00 00 00 00 
25b06     00 00 00 00 
25b0a     00 00 00 00 
25b0e     00          | 	byte	$00[13]
25b0f     18 18 18 00 
25b13     00 00 00 60 
25b17     60 60 30 30 
25b1b     18 18 0C 0C | 	byte	$18, $18, $18, $00, $00, $00, $00, $60, $60, $60, $30, $30, $18, $18, $0c, $0c
25b1f     06 06 06 00 
25b23     00 00 00 3C 
25b27     7E 66 66 66 
25b2b     76 6E 66 66 | 	byte	$06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $76, $6e, $66, $66
25b2f     66 7E 3C 00 
25b33     00 00 00 18 
25b37     18 1C 1C 18 
25b3b     18 18 18 18 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $18, $18, $1c, $1c, $18, $18, $18, $18, $18
25b3f     18 7E 7E 00 
25b43     00 00 00 3C 
25b47     7E 66 66 30 
25b4b     30 18 18 0C | 	byte	$18, $7e, $7e, $00, $00, $00, $00, $3c, $7e, $66, $66, $30, $30, $18, $18, $0c
25b4f     0C 7E 7E 00 
25b53     00 00 00 7E 
25b57     7E 30 30 18 
25b5b     18 30 30 66 | 	byte	$0c, $7e, $7e, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $30, $30, $66
25b5f     66 7E 3C 00 
25b63     00 00 00 30 
25b67     30 38 38 3C 
25b6b     3C 36 36 7E | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $30, $30, $38, $38, $3c, $3c, $36, $36, $7e
25b6f     7E 30 30 00 
25b73     00 00 00 7E 
25b77     7E 06 06 3E 
25b7b     7E 60 60 60 | 	byte	$7e, $30, $30, $00, $00, $00, $00, $7e, $7e, $06, $06, $3e, $7e, $60, $60, $60
25b7f     66 7E 3C 00 
25b83     00 00 00 38 
25b87     3C 0E 06 06 
25b8b     3E 7E 66 66 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $38, $3c, $0e, $06, $06, $3e, $7e, $66, $66
25b8f     66 7E 3C 00 
25b93     00 00 00 7E 
25b97     7E 60 60 30 
25b9b     30 18 18 0C | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $7e, $7e, $60, $60, $30, $30, $18, $18, $0c
25b9f     0C 0C 0C 00 
25ba3     00 00 00 3C 
25ba7     7E 66 66 3C 
25bab     3C 66 66 66 | 	byte	$0c, $0c, $0c, $00, $00, $00, $00, $3c, $7e, $66, $66, $3c, $3c, $66, $66, $66
25baf     66 7E 3C 00 
25bb3     00 00 00 3C 
25bb7     7E 66 66 7E 
25bbb     7C 60 60 60 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $7c, $60, $60, $60
25bbf     70 3C 1C 00 
25bc3     00 00 00 00 
25bc7     00 00 18 18 
25bcb     18 00 00 00 | 	byte	$70, $3c, $1c, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $00
25bcf     18 18 18 00 
25bd3     00 00 00 00 
25bd7     00 00 18 18 
25bdb     18 00 00 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $18
25bdf     18 18 18 0C 
25be3     04 00 00 00 
25be7     70 38 1C 0E 
25beb     07 0E 1C 38 | 	byte	$18, $18, $18, $0c, $04, $00, $00, $00, $70, $38, $1c, $0e, $07, $0e, $1c, $38
25bef     70 00 00 00 
25bf3     00 00 00 00 
25bf7     00 00 7E 7E 
25bfb     00 00 7E 7E | 	byte	$70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $7e, $7e
25bff     00 00 00 00 
25c03     00 00 00 00 | 	byte	$00[8]
25c07     0E 1C 38 70 
25c0b     E0 70 38 1C 
25c0f     0E 00 00 00 
25c13     00 00 00 3C | 	byte	$0e, $1c, $38, $70, $e0, $70, $38, $1c, $0e, $00, $00, $00, $00, $00, $00, $3c
25c17     7E 66 66 30 
25c1b     30 18 18 18 
25c1f     00 18 18 00 
25c23     00 00 00 3C | 	byte	$7e, $66, $66, $30, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $3c
25c27     7E 66 66 66 
25c2b     66 36 06 66 
25c2f     66 7E 3C 00 
25c33     00 00 00 18 | 	byte	$7e, $66, $66, $66, $66, $36, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $18
25c37     3C 7E 66 66 
25c3b     66 7E 7E 66 
25c3f     66 66 66 00 
25c43     00 00 00 3E | 	byte	$3c, $7e, $66, $66, $66, $7e, $7e, $66, $66, $66, $66, $00, $00, $00, $00, $3e
25c47     7E 66 66 7E 
25c4b     3E 66 66 66 
25c4f     66 7E 3E 00 
25c53     00 00 00 3C | 	byte	$7e, $66, $66, $7e, $3e, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $3c
25c57     7E 66 66 06 
25c5b     06 06 06 66 
25c5f     66 7E 3C 00 
25c63     00 00 00 3E | 	byte	$7e, $66, $66, $06, $06, $06, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $3e
25c67     7E 66 66 66 
25c6b     66 66 66 66 
25c6f     66 7E 3E 00 
25c73     00 00 00 7E | 	byte	$7e, $66, $66, $66, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $7e
25c77     7E 06 06 3E 
25c7b     3E 06 06 06 
25c7f     06 7E 7E 00 
25c83     00 00 00 7E | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $7e, $7e, $00, $00, $00, $00, $7e
25c87     7E 06 06 3E 
25c8b     3E 06 06 06 
25c8f     06 06 06 00 
25c93     00 00 00 7C | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $7c
25c97     7E 06 06 76 
25c9b     76 66 66 66 
25c9f     66 7E 3C 00 
25ca3     00 00 00 66 | 	byte	$7e, $06, $06, $76, $76, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $66
25ca7     66 66 66 7E 
25cab     7E 66 66 66 
25caf     66 66 66 00 
25cb3     00 00 00 7E | 	byte	$66, $66, $66, $7e, $7e, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $7e
25cb7     7E 18 18 18 
25cbb     18 18 18 18 
25cbf     18 7E 7E 00 
25cc3     00 00 00 60 | 	byte	$7e, $18, $18, $18, $18, $18, $18, $18, $18, $7e, $7e, $00, $00, $00, $00, $60
25cc7     60 60 60 60 
25ccb     60 60 60    | 	byte	$60[7]
25cce     66 66 7E 3C 
25cd2     00 00 00 00 
25cd6     66 66 36 36 
25cda     1E 1E 36 36 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $36, $36, $1e, $1e, $36, $36
25cde     66 66 C6 C6 
25ce2     00 00 00 00 
25ce6     06 06 06 06 
25cea     06 06 06 06 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06
25cee     06 06 7E 7E 
25cf2     00 00 00 00 
25cf6     C6 C6 EE EE 
25cfa     FE D6 D6 C6 | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $c6, $c6, $ee, $ee, $fe, $d6, $d6, $c6
25cfe     C6 C6 C6 C6 
25d02     00 00 00 00 
25d06     66 66 66 6E 
25d0a     6E 7E 7E 76 | 	byte	$c6, $c6, $c6, $c6, $00, $00, $00, $00, $66, $66, $66, $6e, $6e, $7e, $7e, $76
25d0e     76 66 66 66 
25d12     00 00 00 00 
25d16     3C 7E 66 66 
25d1a     66 66 66 66 | 	byte	$76, $66, $66, $66, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
25d1e     66 66 7E 3C 
25d22     00 00 00 00 
25d26     3E 7E 66 66 
25d2a     66 66 7E 3E | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $66, $7e, $3e
25d2e     06 06 06 06 
25d32     00 00 00 00 
25d36     3C 7E 66 66 
25d3a     66 66 66 66 | 	byte	$06, $06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
25d3e     66 56 3E 6C 
25d42     00 00 00 00 
25d46     3E 7E 66 66 
25d4a     66 7E 3E 36 | 	byte	$66, $56, $3e, $6c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $7e, $3e, $36
25d4e     66 66 C6 C6 
25d52     00 00 00 00 
25d56     7C 7E 06 06 
25d5a     0E 1C 38 70 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $7c, $7e, $06, $06, $0e, $1c, $38, $70
25d5e     60 60 7E 3E 
25d62     00 00 00 00 
25d66     7E 7E 18 18 
25d6a     18 18 18 18 | 	byte	$60, $60, $7e, $3e, $00, $00, $00, $00, $7e, $7e, $18, $18, $18, $18, $18, $18
25d6e     18 18 18 18 
25d72     00 00 00 00 
25d76     66 66 66 66 
25d7a     66 66 66 66 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
25d7e     66 66 7E 3C 
25d82     00 00 00 00 
25d86     66 66 66 66 
25d8a     66 66 66 66 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
25d8e     3C 3C 18 18 
25d92     00 00 00 00 
25d96     C6 C6 C6 C6 
25d9a     C6 D6 D6 FE | 	byte	$3c, $3c, $18, $18, $00, $00, $00, $00, $c6, $c6, $c6, $c6, $c6, $d6, $d6, $fe
25d9e     FE EE C6 82 
25da2     00 00 00 00 
25da6     66 66 66 3C 
25daa     3C 18 18 3C | 	byte	$fe, $ee, $c6, $82, $00, $00, $00, $00, $66, $66, $66, $3c, $3c, $18, $18, $3c
25dae     3C 66 66 66 
25db2     00 00 00 00 
25db6     66 66 66 66 
25dba     66 3C 3C 18 | 	byte	$3c, $66, $66, $66, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c, $18
25dbe     18 18 18 18 
25dc2     00 00 00 00 
25dc6     7E 7E 30 30 
25dca     18 18 0C 0C | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $0c, $0c
25dce     06 06 7E 7E 
25dd2     00 00 00 00 
25dd6     3C 3C 0C 0C 
25dda     0C 0C 0C 0C | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $3c, $3c, $0c, $0c, $0c, $0c, $0c, $0c
25dde     0C 0C 3C 3C 
25de2     00 00 00 00 
25de6     06 06 0C 0C 
25dea     18 18 30 30 | 	byte	$0c, $0c, $3c, $3c, $00, $00, $00, $00, $06, $06, $0c, $0c, $18, $18, $30, $30
25dee     60 60 C0 C0 
25df2     00 00 00 00 
25df6     3C 3C 30 30 
25dfa     30 30 30 30 | 	byte	$60, $60, $c0, $c0, $00, $00, $00, $00, $3c, $3c, $30, $30, $30, $30, $30, $30
25dfe     30 30 3C 3C 
25e02     00 00 00 00 
25e06     18 18 3C 3C 
25e0a     66 66 00 00 | 	byte	$30, $30, $3c, $3c, $00, $00, $00, $00, $18, $18, $3c, $3c, $66, $66, $00, $00
25e0e     00 00 00 00 
25e12     00 00 00 00 
25e16     00 00 00 00 
25e1a     00 00 00 00 
25e1e     00 00       | 	byte	$00[18]
25e20     FE FE 00 00 
25e24     00 00 0C 0C 
25e28     18 18 00 00 
25e2c     00 00 00 00 | 	byte	$fe, $fe, $00, $00, $00, $00, $0c, $0c, $18, $18, $00, $00, $00, $00, $00, $00
25e30     00 00 00 00 
25e34     00 00 00 00 
25e38     00          | 	byte	$00[9]
25e39     3C 7C 60 7C 
25e3d     7E 66 66 7E 
25e41     7C 00 00 00 
25e45     00 06 06 06 | 	byte	$3c, $7c, $60, $7c, $7e, $66, $66, $7e, $7c, $00, $00, $00, $00, $06, $06, $06
25e49     3E 7E 66 66 
25e4d     66 66 66 7E 
25e51     3E 00 00 00 
25e55     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $00, $00, $00
25e59     3C 3E 06 06 
25e5d     06 06 06 7E 
25e61     7C 00 00 00 
25e65     00 60 60 60 | 	byte	$3c, $3e, $06, $06, $06, $06, $06, $7e, $7c, $00, $00, $00, $00, $60, $60, $60
25e69     7C 7E 66 66 
25e6d     66 66 66 7E 
25e71     7C 00 00 00 
25e75     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $00, $00, $00, $00, $00, $00, $00
25e79     3C 7E 66 66 
25e7d     7E 06 06 7E 
25e81     7C 00 00 00 
25e85     00 70 78 18 | 	byte	$3c, $7e, $66, $66, $7e, $06, $06, $7e, $7c, $00, $00, $00, $00, $70, $78, $18
25e89     18 7E 7E 18 
25e8d     18 18 18 18 
25e91     18 00 00 00 
25e95     00 00 00 00 | 	byte	$18, $7e, $7e, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
25e99     7C 7E 66 66 
25e9d     66 66 7E 7C 
25ea1     60 7E 3E 00 
25ea5     00 06 06 06 | 	byte	$7c, $7e, $66, $66, $66, $66, $7e, $7c, $60, $7e, $3e, $00, $00, $06, $06, $06
25ea9     3E 7E 66 66 
25ead     66 66 66 66 
25eb1     66 00 00 00 
25eb5     00 18 18 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $18, $18, $00
25eb9     1C 1C 18 18 
25ebd     18 18 18 3C 
25ec1     3C 00 00 00 
25ec5     00 30 30 00 | 	byte	$1c, $1c, $18, $18, $18, $18, $18, $3c, $3c, $00, $00, $00, $00, $30, $30, $00
25ec9     30 30 30 30 
25ecd     30 30 30 30 
25ed1     30          | 	byte	$30[9]
25ed2     3E 1E 00 00 
25ed6     06 06 06 36 
25eda     36 1E 1E 1E 
25ede     36 36 66 66 | 	byte	$3e, $1e, $00, $00, $06, $06, $06, $36, $36, $1e, $1e, $1e, $36, $36, $66, $66
25ee2     00 00 00 00 
25ee6     1C 1C 18 18 
25eea     18 18 18 18 
25eee     18 18 3C 3C | 	byte	$00, $00, $00, $00, $1c, $1c, $18, $18, $18, $18, $18, $18, $18, $18, $3c, $3c
25ef2     00 00 00 00 
25ef6     00 00 00    | 	byte	$00[7]
25ef9     6C FE FE D6 
25efd     D6 C6 C6 C6 
25f01     C6 00 00 00 
25f05     00 00 00 00 | 	byte	$6c, $fe, $fe, $d6, $d6, $c6, $c6, $c6, $c6, $00, $00, $00, $00, $00, $00, $00
25f09     3E 7E 66 66 
25f0d     66 66 66 66 
25f11     66 00 00 00 
25f15     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $00
25f19     3C 7E 66 66 
25f1d     66 66 66 7E 
25f21     3C 00 00 00 
25f25     00 00 00 00 | 	byte	$3c, $7e, $66, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $00, $00, $00
25f29     3E 7E 66 66 
25f2d     66 66 66 7E 
25f31     3E 06 06 00 
25f35     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $06, $06, $00, $00, $00, $00, $00
25f39     7C 7E 66 66 
25f3d     66 66 66 7E 
25f41     7C 60 60 00 
25f45     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $60, $60, $00, $00, $00, $00, $00
25f49     3E 7E 66 06 
25f4d     06 06 06 06 
25f51     06 00 00 00 
25f55     00 00 00 00 | 	byte	$3e, $7e, $66, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $00, $00, $00
25f59     7C 7E 06 0E 
25f5d     3C 70 60 7E 
25f61     3E 00 00 00 
25f65     00 00 18 18 | 	byte	$7c, $7e, $06, $0e, $3c, $70, $60, $7e, $3e, $00, $00, $00, $00, $00, $18, $18
25f69     7E 7E 18 18 
25f6d     18 18 18 78 
25f71     70 00 00 00 
25f75     00 00 00 00 | 	byte	$7e, $7e, $18, $18, $18, $18, $18, $78, $70, $00, $00, $00, $00, $00, $00, $00
25f79     66 66 66 66 
25f7d     66 66 66    | 	byte	$66[7]
25f80     7E 7C 00 00 
25f84     00 00 00 00 
25f88     00 66 66 66 
25f8c     66 66 3C 3C | 	byte	$7e, $7c, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c
25f90     18 18 00 00 
25f94     00 00 00 00 
25f98     00 C6 C6 D6 
25f9c     D6 FE FE EE | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $c6, $c6, $d6, $d6, $fe, $fe, $ee
25fa0     C6 82 00 00 
25fa4     00 00 00 00 
25fa8     00 66 66 3C 
25fac     3C 18 3C 3C | 	byte	$c6, $82, $00, $00, $00, $00, $00, $00, $00, $66, $66, $3c, $3c, $18, $3c, $3c
25fb0     66 66 00 00 
25fb4     00 00 00 00 
25fb8     00 66 66 66 
25fbc     66 66 66 7E | 	byte	$66, $66, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $7e
25fc0     7C 60 7E 3E 
25fc4     00 00 00 00 
25fc8     00 7E 7E 30 
25fcc     18 18 0C 0C | 	byte	$7c, $60, $7e, $3e, $00, $00, $00, $00, $00, $7e, $7e, $30, $18, $18, $0c, $0c
25fd0     7E 7E 00 00 
25fd4     00 00 30 18 
25fd8     18 18 18 0C 
25fdc     0C 18 18 18 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $18, $18, $18, $0c, $0c, $18, $18, $18
25fe0     18 30 00 00 
25fe4     00 00 18 18 
25fe8     18 18 18 18 
25fec     18 18 18 18 | 	byte	$18, $30, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
25ff0     18 18 00 00 
25ff4     00 00 0C 18 
25ff8     18 18 18 30 
25ffc     30 18 18 18 | 	byte	$18, $18, $00, $00, $00, $00, $0c, $18, $18, $18, $18, $30, $30, $18, $18, $18
26000     18 0C 00 00 
26004     00 00 6C 7E 
26008     36 00 00 00 
2600c     00 00 00 00 | 	byte	$18, $0c, $00, $00, $00, $00, $6c, $7e, $36, $00, $00, $00, $00, $00, $00, $00
26010     00 00 00 00 
26014     00 00 00 00 
26018     00          | 	byte	$00[9]
26019     18 18 18 18 
2601d     18 18 00 00 
26021     00 00 00    | 	byte	$18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
26024     00 00 00 00 
26028     00 FF FF FF | twocolors      long  $00000000,$FFFFFF00
2602c     00 00 00 00 
26030     00 80 80 80 
26034     00 00 00 FF 
26038     00 FF FF FF | fourcolors     long  $00000000,$80808000,$FF000000,$FFFFFF00 'black,red,gray,white
2603c     00 00 00 00 
26040     00          | vga16          long  $00000000,$00008000,$00800000,$00808000,$80000000,$80008000,$80400000,$AAAAAA00,$55555500,$0000FF00,$00FF0000,$00FFFF00,$FF000000,$FF00FF00,$FFFF0000,$FFFFFF00
26041     80 00 00 00 
26045     00 80 00 00 
26049     80 80 00 00 
2604d     00 00 80 00 | 	byte	$80, $00, $00, $00, $00, $80, $00, $00, $80, $80, $00, $00, $00, $00, $80, $00
26051     80 00 80 00 
26055     00 40 80 00 
26059     AA AA AA 00 
2605d     55 55 55 00 | 	byte	$80, $00, $80, $00, $00, $40, $80, $00, $aa, $aa, $aa, $00, $55, $55, $55, $00
26061     FF 00 00 00 
26065     00 FF 00 00 
26069     FF FF 00 00 
2606d     00 00 FF 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00
26071     FF 00 FF 00 
26075     00 FF FF 00 
26079     FF FF FF    | 	byte	$ff, $00, $ff, $00, $00, $ff, $ff, $00, $ff, $ff, $ff
2607c     00 00 00 00 
26080     00          | ataripalette   file "ataripalettep2.def"
26081     11 11 11 00 
26085     22 22 22 00 
26089     33 33 33 00 
2608d     44 44 44 00 | 	byte	$11, $11, $11, $00, $22, $22, $22, $00, $33, $33, $33, $00, $44, $44, $44, $00
26091     55 55 55 00 
26095     66 66 66 00 
26099     77 77 77 00 
2609d     88 88 88 00 | 	byte	$55, $55, $55, $00, $66, $66, $66, $00, $77, $77, $77, $00, $88, $88, $88, $00
260a1     99 99 99 00 
260a5     AA AA AA 00 
260a9     BB BB BB 00 
260ad     CC CC CC 00 | 	byte	$99, $99, $99, $00, $aa, $aa, $aa, $00, $bb, $bb, $bb, $00, $cc, $cc, $cc, $00
260b1     DD DD DD 00 
260b5     EE EE EE 00 
260b9     FF FF FF 00 
260bd     00 0A 20 00 | 	byte	$dd, $dd, $dd, $00, $ee, $ee, $ee, $00, $ff, $ff, $ff, $00, $00, $0a, $20, $00
260c1     00 14 40 00 
260c5     00 1E 60 00 
260c9     00 28 80 00 
260cd     00 32 9F 00 | 	byte	$00, $14, $40, $00, $00, $1e, $60, $00, $00, $28, $80, $00, $00, $32, $9f, $00
260d1     00 3C BF 00 
260d5     00 46 DF 00 
260d9     00 50 FF 00 
260dd     1C 63 FF 00 | 	byte	$00, $3c, $bf, $00, $00, $46, $df, $00, $00, $50, $ff, $00, $1c, $63, $ff, $00
260e1     39 77 FF 00 
260e5     55 8A FF 00 
260e9     71 9E FF 00 
260ed     8E B1 FF 00 | 	byte	$39, $77, $ff, $00, $55, $8a, $ff, $00, $71, $9e, $ff, $00, $8e, $b1, $ff, $00
260f1     AA C5 FF 00 
260f5     C6 D8 FF 00 
260f9     E3 EC FF 00 
260fd     00 00 20 00 | 	byte	$aa, $c5, $ff, $00, $c6, $d8, $ff, $00, $e3, $ec, $ff, $00, $00, $00, $20, $00
26101     00 00 40 00 
26105     00 00 60 00 
26109     00 00 80 00 
2610d     00 00 9F 00 | 	byte	$00, $00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00
26111     00 00 BF 00 
26115     00 00 DF 00 
26119     00 00 FF 00 
2611d     1C 1C FF 00 | 	byte	$00, $00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $1c, $1c, $ff, $00
26121     39 39 FF 00 
26125     55 55 FF 00 
26129     71 71 FF 00 
2612d     8E 8E FF 00 | 	byte	$39, $39, $ff, $00, $55, $55, $ff, $00, $71, $71, $ff, $00, $8e, $8e, $ff, $00
26131     AA AA FF 00 
26135     C6 C6 FF 00 
26139     E3 E3 FF 00 
2613d     10 00 20 00 | 	byte	$aa, $aa, $ff, $00, $c6, $c6, $ff, $00, $e3, $e3, $ff, $00, $10, $00, $20, $00
26141     20 00 40 00 
26145     30 00 60 00 
26149     40 00 80 00 
2614d     50 00 9F 00 | 	byte	$20, $00, $40, $00, $30, $00, $60, $00, $40, $00, $80, $00, $50, $00, $9f, $00
26151     60 00 BF 00 
26155     70 00 DF 00 
26159     80 00 FF 00 
2615d     8E 1C FF 00 | 	byte	$60, $00, $bf, $00, $70, $00, $df, $00, $80, $00, $ff, $00, $8e, $1c, $ff, $00
26161     9C 39 FF 00 
26165     AA 55 FF 00 
26169     B8 71 FF 00 
2616d     C7 8E FF 00 | 	byte	$9c, $39, $ff, $00, $aa, $55, $ff, $00, $b8, $71, $ff, $00, $c7, $8e, $ff, $00
26171     D5 AA FF 00 
26175     E3 C6 FF 00 
26179     F1 E3 FF 00 
2617d     20 00 20 00 | 	byte	$d5, $aa, $ff, $00, $e3, $c6, $ff, $00, $f1, $e3, $ff, $00, $20, $00, $20, $00
26181     40 00 40 00 
26185     60 00 60 00 
26189     80 00 80 00 
2618d     9F 00 9F 00 | 	byte	$40, $00, $40, $00, $60, $00, $60, $00, $80, $00, $80, $00, $9f, $00, $9f, $00
26191     BF 00 BF 00 
26195     DF 00 DF 00 
26199     FF 00 FF 00 
2619d     FF 1C FF 00 | 	byte	$bf, $00, $bf, $00, $df, $00, $df, $00, $ff, $00, $ff, $00, $ff, $1c, $ff, $00
261a1     FF 39 FF 00 
261a5     FF 55 FF 00 
261a9     FF 71 FF 00 
261ad     FF 8E FF 00 | 	byte	$ff, $39, $ff, $00, $ff, $55, $ff, $00, $ff, $71, $ff, $00, $ff, $8e, $ff, $00
261b1     FF AA FF 00 
261b5     FF C6 FF 00 
261b9     FF E3 FF 00 
261bd     20 00 10 00 | 	byte	$ff, $aa, $ff, $00, $ff, $c6, $ff, $00, $ff, $e3, $ff, $00, $20, $00, $10, $00
261c1     40 00 20 00 
261c5     60 00 30 00 
261c9     80 00 40 00 
261cd     9F 00 50 00 | 	byte	$40, $00, $20, $00, $60, $00, $30, $00, $80, $00, $40, $00, $9f, $00, $50, $00
261d1     BF 00 60 00 
261d5     DF 00 70 00 
261d9     FF 00 80 00 
261dd     FF 1C 8E 00 | 	byte	$bf, $00, $60, $00, $df, $00, $70, $00, $ff, $00, $80, $00, $ff, $1c, $8e, $00
261e1     FF 39 9C 00 
261e5     FF 55 AA 00 
261e9     FF 71 B8 00 
261ed     FF 8E C7 00 | 	byte	$ff, $39, $9c, $00, $ff, $55, $aa, $00, $ff, $71, $b8, $00, $ff, $8e, $c7, $00
261f1     FF AA D5 00 
261f5     FF C6 E3 00 
261f9     FF E3 F1 00 
261fd     20 00 00 00 | 	byte	$ff, $aa, $d5, $00, $ff, $c6, $e3, $00, $ff, $e3, $f1, $00, $20, $00, $00, $00
26201     40 00 00 00 
26205     60 00 00 00 
26209     80 00 00 00 
2620d     9F 00 00 00 | 	byte	$40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00, $00
26211     BF 00 00 00 
26215     DF 00 00 00 
26219     FF 00 00 00 
2621d     FF 1C 1C 00 | 	byte	$bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $00, $ff, $1c, $1c, $00
26221     FF 39 39 00 
26225     FF 55 55 00 
26229     FF 71 71 00 
2622d     FF 8E 8E 00 | 	byte	$ff, $39, $39, $00, $ff, $55, $55, $00, $ff, $71, $71, $00, $ff, $8e, $8e, $00
26231     FF AA AA 00 
26235     FF C6 C6 00 
26239     FF E3 E3 00 
2623d     20 08 00 00 | 	byte	$ff, $aa, $aa, $00, $ff, $c6, $c6, $00, $ff, $e3, $e3, $00, $20, $08, $00, $00
26241     40 10 00 00 
26245     60 18 00 00 
26249     80 20 00 00 
2624d     9F 28 00 00 | 	byte	$40, $10, $00, $00, $60, $18, $00, $00, $80, $20, $00, $00, $9f, $28, $00, $00
26251     BF 30 00 00 
26255     DF 38 00 00 
26259     FF 40 00 00 
2625d     FF 55 1C 00 | 	byte	$bf, $30, $00, $00, $df, $38, $00, $00, $ff, $40, $00, $00, $ff, $55, $1c, $00
26261     FF 6A 39 00 
26265     FF 80 55 00 
26269     FF 95 71 00 
2626d     FF AA 8E 00 | 	byte	$ff, $6a, $39, $00, $ff, $80, $55, $00, $ff, $95, $71, $00, $ff, $aa, $8e, $00
26271     FF BF AA 00 
26275     FF D5 C6 00 
26279     FF EA E3 00 
2627d     20 10 00 00 | 	byte	$ff, $bf, $aa, $00, $ff, $d5, $c6, $00, $ff, $ea, $e3, $00, $20, $10, $00, $00
26281     40 20 00 00 
26285     60 30 00 00 
26289     80 40 00 00 
2628d     9F 50 00 00 | 	byte	$40, $20, $00, $00, $60, $30, $00, $00, $80, $40, $00, $00, $9f, $50, $00, $00
26291     BF 60 00 00 
26295     DF 70 00 00 
26299     FF 80 00 00 
2629d     FF 8E 1C 00 | 	byte	$bf, $60, $00, $00, $df, $70, $00, $00, $ff, $80, $00, $00, $ff, $8e, $1c, $00
262a1     FF 9C 39 00 
262a5     FF AA 55 00 
262a9     FF B8 71 00 
262ad     FF C7 8E 00 | 	byte	$ff, $9c, $39, $00, $ff, $aa, $55, $00, $ff, $b8, $71, $00, $ff, $c7, $8e, $00
262b1     FF D5 AA 00 
262b5     FF E3 C6 00 
262b9     FF F1 E3 00 
262bd     20 18 00 00 | 	byte	$ff, $d5, $aa, $00, $ff, $e3, $c6, $00, $ff, $f1, $e3, $00, $20, $18, $00, $00
262c1     40 30 00 00 
262c5     60 48 00 00 
262c9     80 60 00 00 
262cd     9F 78 00 00 | 	byte	$40, $30, $00, $00, $60, $48, $00, $00, $80, $60, $00, $00, $9f, $78, $00, $00
262d1     BF 90 00 00 
262d5     DF A8 00 00 
262d9     FF C0 00 00 
262dd     FF C7 1C 00 | 	byte	$bf, $90, $00, $00, $df, $a8, $00, $00, $ff, $c0, $00, $00, $ff, $c7, $1c, $00
262e1     FF CE 39 00 
262e5     FF D5 55 00 
262e9     FF DC 71 00 
262ed     FF E3 8E 00 | 	byte	$ff, $ce, $39, $00, $ff, $d5, $55, $00, $ff, $dc, $71, $00, $ff, $e3, $8e, $00
262f1     FF EA AA 00 
262f5     FF F1 C6 00 
262f9     FF F8 E3 00 
262fd     18 20 00 00 | 	byte	$ff, $ea, $aa, $00, $ff, $f1, $c6, $00, $ff, $f8, $e3, $00, $18, $20, $00, $00
26301     30 40 00 00 
26305     48 60 00 00 
26309     60 80 00 00 
2630d     78 9F 00 00 | 	byte	$30, $40, $00, $00, $48, $60, $00, $00, $60, $80, $00, $00, $78, $9f, $00, $00
26311     90 BF 00 00 
26315     A8 DF 00 00 
26319     C0 FF 00 00 
2631d     C7 FF 1C 00 | 	byte	$90, $bf, $00, $00, $a8, $df, $00, $00, $c0, $ff, $00, $00, $c7, $ff, $1c, $00
26321     CE FF 39 00 
26325     D5 FF 55 00 
26329     DC FF 71 00 
2632d     E3 FF 8E 00 | 	byte	$ce, $ff, $39, $00, $d5, $ff, $55, $00, $dc, $ff, $71, $00, $e3, $ff, $8e, $00
26331     EA FF AA 00 
26335     F1 FF C6 00 
26339     F8 FF E3 00 
2633d     00 20 00 00 | 	byte	$ea, $ff, $aa, $00, $f1, $ff, $c6, $00, $f8, $ff, $e3, $00, $00, $20, $00, $00
26341     00 40 00 00 
26345     00 60 00 00 
26349     00 80 00 00 
2634d     00 9F 00 00 | 	byte	$00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00
26351     00 BF 00 00 
26355     00 DF 00 00 
26359     00 FF 00 00 
2635d     1C FF 1C 00 | 	byte	$00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $1c, $ff, $1c, $00
26361     39 FF 39 00 
26365     55 FF 55 00 
26369     71 FF 71 00 
2636d     8E FF 8E 00 | 	byte	$39, $ff, $39, $00, $55, $ff, $55, $00, $71, $ff, $71, $00, $8e, $ff, $8e, $00
26371     AA FF AA 00 
26375     C6 FF C6 00 
26379     E3 FF E3 00 
2637d     00 20 0A 00 | 	byte	$aa, $ff, $aa, $00, $c6, $ff, $c6, $00, $e3, $ff, $e3, $00, $00, $20, $0a, $00
26381     00 40 14 00 
26385     00 60 1E 00 
26389     00 80 28 00 
2638d     00 9F 32 00 | 	byte	$00, $40, $14, $00, $00, $60, $1e, $00, $00, $80, $28, $00, $00, $9f, $32, $00
26391     00 BF 3C 00 
26395     00 DF 46 00 
26399     00 FF 50 00 
2639d     1C FF 63 00 | 	byte	$00, $bf, $3c, $00, $00, $df, $46, $00, $00, $ff, $50, $00, $1c, $ff, $63, $00
263a1     39 FF 77 00 
263a5     55 FF 8A 00 
263a9     71 FF 9E 00 
263ad     8E FF B1 00 | 	byte	$39, $ff, $77, $00, $55, $ff, $8a, $00, $71, $ff, $9e, $00, $8e, $ff, $b1, $00
263b1     AA FF C5 00 
263b5     C6 FF D8 00 
263b9     E3 FF EC 00 
263bd     00 20 14 00 | 	byte	$aa, $ff, $c5, $00, $c6, $ff, $d8, $00, $e3, $ff, $ec, $00, $00, $20, $14, $00
263c1     00 40 28 00 
263c5     00 60 3C 00 
263c9     00 80 50 00 
263cd     00 9F 64 00 | 	byte	$00, $40, $28, $00, $00, $60, $3c, $00, $00, $80, $50, $00, $00, $9f, $64, $00
263d1     00 BF 78 00 
263d5     00 DF 8C 00 
263d9     00 FF A0 00 
263dd     1C FF AB 00 | 	byte	$00, $bf, $78, $00, $00, $df, $8c, $00, $00, $ff, $a0, $00, $1c, $ff, $ab, $00
263e1     39 FF B5 00 
263e5     55 FF C0 00 
263e9     71 FF CA 00 
263ed     8E FF D5 00 | 	byte	$39, $ff, $b5, $00, $55, $ff, $c0, $00, $71, $ff, $ca, $00, $8e, $ff, $d5, $00
263f1     AA FF DF 00 
263f5     C6 FF EA 00 
263f9     E3 FF F4 00 
263fd     00 20 20 00 | 	byte	$aa, $ff, $df, $00, $c6, $ff, $ea, $00, $e3, $ff, $f4, $00, $00, $20, $20, $00
26401     00 40 40 00 
26405     00 60 60 00 
26409     00 80 80 00 
2640d     00 9F 9F 00 | 	byte	$00, $40, $40, $00, $00, $60, $60, $00, $00, $80, $80, $00, $00, $9f, $9f, $00
26411     00 BF BF 00 
26415     00 DF DF 00 
26419     00 FF FF 00 
2641d     1C FF FF 00 | 	byte	$00, $bf, $bf, $00, $00, $df, $df, $00, $00, $ff, $ff, $00, $1c, $ff, $ff, $00
26421     39 FF FF 00 
26425     55 FF FF 00 
26429     71 FF FF 00 
2642d     8E FF FF 00 | 	byte	$39, $ff, $ff, $00, $55, $ff, $ff, $00, $71, $ff, $ff, $00, $8e, $ff, $ff, $00
26431     AA FF FF 00 
26435     C6 FF FF 00 
26439     E3 FF FF 00 
2643d     00 14 20 00 | 	byte	$aa, $ff, $ff, $00, $c6, $ff, $ff, $00, $e3, $ff, $ff, $00, $00, $14, $20, $00
26441     00 28 40 00 
26445     00 3C 60 00 
26449     00 50 80 00 
2644d     00 64 9F 00 | 	byte	$00, $28, $40, $00, $00, $3c, $60, $00, $00, $50, $80, $00, $00, $64, $9f, $00
26451     00 78 BF 00 
26455     00 8C DF 00 
26459     00 A0 FF 00 
2645d     1C AB FF 00 | 	byte	$00, $78, $bf, $00, $00, $8c, $df, $00, $00, $a0, $ff, $00, $1c, $ab, $ff, $00
26461     39 B5 FF 00 
26465     55 C0 FF 00 
26469     71 CA FF 00 
2646d     8E D5 FF 00 | 	byte	$39, $b5, $ff, $00, $55, $c0, $ff, $00, $71, $ca, $ff, $00, $8e, $d5, $ff, $00
26471     AA DF FF 00 
26475     C6 EA FF 00 
26479     E3 F4 FF    | 	byte	$aa, $df, $ff, $00, $c6, $ea, $ff, $00, $e3, $f4, $ff
2647c                 | '**********************************************************************************
2647c                 | '
2647c                 | '        Timings and colors definitions
2647c                 | '
2647c                 | '**********************************************************************************
2647c                 | 
2647c                 |    'streamer sets for text mode, to add to timings[0..5]
2647c                 | ' todo for the retromachine: 768x576
2647c                 | 
2647c                 | '                     bf.hs, hs,  bf.vis  visible, lr bord, pixel, ud bord,  up p., vsync, down p., mode, cpl, scanlines,  clock,                  hubset                  total vis lines
2647c     10 00 00 00 
26480     50 00 00 00 
26484     14 00 00 00 
26488     00 04 00 00 | timings000      long   16,   80,    20,    1024,    112,     8,     48,      16,      16,    16,      0,  100,   480,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
2648c     70 00 00 00 
26490     08 00 00 00 
26494     30 00 00 00 
26498     10 00 00 00 | 	byte	$70, $00, $00, $00, $08, $00, $00, $00, $30, $00, $00, $00, $10, $00, $00, $00
2649c     10 00 00 00 
264a0     10 00 00 00 
264a4     00 00 00 00 
264a8     64 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $00, $00, $00, $00, $64, $00, $00, $00
264ac     E0 01 00 00 
264b0     F6 32 24 15 
264b4     FB 6C C3 01 
264b8     40 02 00 00 | 	byte	$e0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
264bc     12 00 00 00 
264c0     30 00 00 00 
264c4     10 00 00 00 
264c8     B0 03 00 00 | timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   544
264cc     18 00 00 00 
264d0     08 00 00 00 
264d4     18 00 00 00 
264d8     18 00 00 00 | 	byte	$18, $00, $00, $00, $08, $00, $00, $00, $18, $00, $00, $00, $18, $00, $00, $00
264dc     20 00 00 00 
264e0     18 00 00 00 
264e4     40 00 00 00 
264e8     70 00 00 00 | 	byte	$20, $00, $00, $00, $18, $00, $00, $00, $40, $00, $00, $00, $70, $00, $00, $00
264ec     F0 01 00 00 
264f0     46 D8 06 13 
264f4     FB 2D CB 01 
264f8     20 02 00 00 | 	byte	$f0, $01, $00, $00, $46, $d8, $06, $13, $fb, $2d, $cb, $01, $20, $02, $00, $00
264fc                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     320000000,   %1_0000_00__00_0000_1111__1111_1011,   544
264fc     10 00 00 00 
26500     40 00 00 00 
26504     10 00 00 00 
26508     30 03 00 00 | timings128      long   16,   64,    16,     816,      8,     8,     8,       32,      64,    32,    128,  100,   480,     283750000,   %1_111111__11_1000_1011__1111_1011,   496
2650c     08 00 00 00 
26510     08 00 00 00 
26514     08 00 00 00 
26518     20 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $20, $00, $00, $00
2651c     40 00 00 00 
26520     20 00 00 00 
26524     80 00 00 00 
26528     64 00 00 00 | 	byte	$40, $00, $00, $00, $20, $00, $00, $00, $80, $00, $00, $00, $64, $00, $00, $00
2652c     E0 01 00 00 
26530     70 AE E9 10 
26534     FB 8B FF 01 
26538     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $70, $ae, $e9, $10, $fb, $8b, $ff, $01, $f0, $01, $00, $00
2653c     10 00 00 00 
26540     50 00 00 00 
26544     14 00 00 00 
26548     00 04 00 00 | timings192      long   16,   80,    20,    1024,      0,     8,     0,       16,      16,    16,    192,  128,   576,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
2654c     00 00 00 00 
26550     08 00 00 00 
26554     00 00 00 00 
26558     10 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $10, $00, $00, $00
2655c     10 00 00 00 
26560     10 00 00 00 
26564     C0 00 00 00 
26568     80 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $c0, $00, $00, $00, $80, $00, $00, $00
2656c     40 02 00 00 
26570     F6 32 24 15 
26574     FB 6C C3 01 
26578     40 02 00 00 | 	byte	$40, $02, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
2657c     50 00 00 00 
26580     A0 00 00 00 
26584     54 00 00 00 
26588     30 03 00 00 | timings256      long   80,  160,    84,     816,      8,     8,     8,        8,      12,     8,    256,  100,   480,     357959184,   %1_110000__11_0110_0100__1111_1011,   496
2658c     08 00 00 00 
26590     08 00 00 00 
26594     08 00 00 00 
26598     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
2659c     0C 00 00 00 
265a0     08 00 00 00 
265a4     00 01 00 00 
265a8     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $00, $01, $00, $00, $64, $00, $00, $00
265ac     E0 01 00 00 
265b0     10 06 56 15 
265b4     FB 64 C3 01 
265b8     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $10, $06, $56, $15, $fb, $64, $c3, $01, $f0, $01, $00, $00
265bc     50 00 00 00 
265c0     32 00 00 00 
265c4     50 00 00 00 
265c8     30 03 00 00 | timings320      long   80,   50,    80,     816,      8,     8,     8,        8,      12,     8,    320,  100,   480,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
265cc     08 00 00 00 
265d0     08 00 00 00 
265d4     08 00 00 00 
265d8     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
265dc     0C 00 00 00 
265e0     08 00 00 00 
265e4     40 01 00 00 
265e8     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $40, $01, $00, $00, $64, $00, $00, $00
265ec     E0 01 00 00 
265f0     F2 CD 33 13 
265f4     FB 53 92 01 
265f8     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
265fc     18 00 00 00 
26600     30 00 00 00 
26604     18 00 00 00 
26608     30 03 00 00 | timings384      long   24,   48,    24,     816,      8,     8,     8,        8,      12,     8,    384,  100,   480,     286363636,   %1_010101__01_0011_1010__1111_1011,   496
2660c     08 00 00 00 
26610     08 00 00 00 
26614     08 00 00 00 
26618     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
2661c     0C 00 00 00 
26620     08 00 00 00 
26624     80 01 00 00 
26628     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $80, $01, $00, $00, $64, $00, $00, $00
2662c     E0 01 00 00 
26630     F4 8F 11 11 
26634     FB 3A 55 01 
26638     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f4, $8f, $11, $11, $fb, $3a, $55, $01, $f0, $01, $00, $00
2663c     20 00 00 00 
26640     40 00 00 00 
26644     22 00 00 00 
26648     80 03 00 00 | timings448      long   32,   64,    34,     896,      0,     8,     0,        8,      12,     8,    448,  112,   496,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
2664c     00 00 00 00 
26650     08 00 00 00 
26654     00 00 00 00 
26658     08 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $08, $00, $00, $00
2665c     0C 00 00 00 
26660     08 00 00 00 
26664     C0 01 00 00 
26668     70 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $c0, $01, $00, $00, $70, $00, $00, $00
2666c     F0 01 00 00 
26670     F2 CD 33 13 
26674     FB 53 92 01 
26678     F0 01 00 00 | 	byte	$f0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
2667c                 | 'timings999      long    0,    0,     0,       0,      0,     0,     0,        0,       0,     0,      0,    0,     0,             0,                                    0,     0
2667c     00 75 C7 97 
26680     27 47 F6 0A 
26684     05 79 CB 9B 
26688     2B 4B EA 0F | vgacolors       byte   0, 117, 199, 151, 39, 71, 246, 10, 5, 121, 203, 155, 43, 75, 234, 15
2668c                 | 
2668c     28 12 64 FD | hdmi            setq    #9
26690     00 DF 06 FB |                 rdlong  framebuf,  ptra                  'read pointers
26694                 |            '     setq2   #255
26694                 |             '    rdlong  $100, paletteptr 
26694     00 26 6F FC |                 wrlong  #aend,#0                         'write driver length to hub#0: DEBUG/demo
26698     3C 00 66 FD |                 setcmod #$100                            'enable HDMI mode
2669c     C0 F9 06 F6 |                 mov     ii,#448                          '7 << 6          
266a0     78 F9 02 F1 |                 add     ii,hbase
266a4     58 F8 62 FD |                 drvl    ii                                 '#7<<6 + hdmi_base      ' enable HDMI pins
266a8     7B 0B 80 FF 
266ac     7C 01 0B FC |                 wrpin   ##%10110_1111_0111_10_00000_0, ii  '#7<<6 + hdmi_base      ' a '123 ohm BITDAC for pins
266b0                 | 
266b0     66 66 86 FF 
266b4     1D 9A 65 FD |                 setxfrq ##$0CCCCCCC+1                   'set streamer freq to 1/10th clk
266b8                 | 
266b8                 | 
266b8                 | ''--------  frame rendering main loop  ---------------------------------------------------
266b8                 | 
266b8                 | p101
266b8     28 14 64 FD |                 setq    #10
266bc     00 DF 06 FB |                 rdlong  framebuf,  ptra
266c0     28 1E 64 FD |                 setq    #15
266c4     74 9B 02 FB |                 rdlong  m_bs,modeptr                     ' read timings
266c8     71 99 02 FB |                 rdlong  border,borderptr
266cc                 | 
266cc     01 C4 06 F1 |                 add     frames,#1
266d0     76 F5 02 F6 |                 mov     dlptr2,dlptr
266d4                 | 
266d4     73 C7 02 FB |                 rdlong  cursorx, cursorptr               ' read cursor position
266d8     63 C9 EA F8 |                 getbyte cursory, cursorx,#1              ' y position at byte #1
266dc     63 C3 F2 F8 |                 getbyte cursorsh,cursorx,#2              ' shape at byte #2
266e0     FF C6 06 F5 |                 and     cursorx,#255                     ' clear the cursor x varioble from y and shape
266e4                 |  '' up porch
266e4                 | 
266e4     48 FD 02 F6 |                 mov     hsync0,sync_000                  '
266e8     49 FF 02 F6 |                 mov     hsync1,sync_001
266ec     37 A8 46 FB |                 callpa  i_upporch ,#blank
266f0     72 01 68 FC |                 wrlong  #0,vblankptr
266f4                 |                 
266f4     1F EA 16 F4 |                 testb   paletteptr,#31 wc
266f8     29 FE 65 3D |          if_nc  setq2   #255
266fc     75 01 00 3B |          if_nc  rdlong  $000, paletteptr                'read palette
26700                 | 
26700                 | '' cursor blinking
26700                 | 
26700     04 C4 0E F4 |                 testb   frames,#4 wz                     ' cursor blinks at framerate/16, todo: define
26704     81 C6 06 A6 |          if_z   mov     cursorx,#129                     ' to switch the cursor off, move it out of the screen
26708                 | 
26708                 | '' main screen
26708                 | 
26708     00 BE 06 F6 |                 mov linenum,#0
2670c     00 18 07 F6 |                 mov rcnt,#0
26710     00 1C 07 F6 |                 mov rcnt2a,#0
26714                 | 
26714                 | 
26714     00 18 0F F2 | p301            cmp rcnt,#0 wz
26718     18 00 90 AD |         if_z    jmp #p306
2671c     01 18 87 F1 |                 sub rcnt,#1
26720     90 F7 02 F6 |                 mov dl,rdl
26724     8D 1D 0B F7 |                incmod rcnt2a,rcnt2 wz
26728     8F F7 02 A1 |    if_z        add dl,roffset  
2672c     7B 21 03 F6 |                 mov rdl,dl
26730     04 00 90 FD |                 jmp #p307          
26734                 |           
26734                 |                 
26734     7A F7 02 FB | p306            rdlong  dl,dlptr2
26738     7B FB 1A F6 | p307            mov     framebuf2,dl wcz                  'read a line start in the framebuffer from DL entry
2673c     6A FA 7A FD |                 rczr    framebuf2 wcz                     'but only if not %11 at lowest bits which means special DL entry
26740     34 00 90 7D |    if_nz_or_nc  jmp     #p303                        
26744                 | 
26744                 | '' Special entry:
26744                 | '' - repeat                 %nnnn_nnnn_nnnn_qqqq_mmmm_mmmm_mmmm_0111    repeat the next dl line n times, after q lines add offset m
26744                 | '' - reload palette         %mmmm_mmmm_nnnn_nnnn_qqqq_qqqq_qqqq_1011    reload n palette entries from m color from palette_ptr+q
26744                 | '' - set border color       %rrrr_rrrr_gggg_gggg_bbbb_bbbb_0001_0011    set border to rgb
26744                 | '' - set border color       %0000_0000_0000_0000_pppp_pppp_0001_1011    set border color to palette entry #p
26744                 | '' todo: set horizontal scroll (if needed)
26744                 | 
26744     02 FA 66 F0 |                 shl framebuf2,#2
26748     7D 23 43 F8 |                 getnib dlc,framebuf2,#0
2674c     04 22 0F F2 |                 cmp dlc,#%100 wz
26750                 |   
26750                 |                 
26750     04 F4 06 F1 |                 add dlptr2,#4
26754     BC FF 9F 5D |                              if_nz  jmp #p301  '' now ignore unknown instruction 
26758     7A 21 03 FB |                  rdlong rdl,dlptr2
2675c     7D 19 3B F9 |                  getword rcnt,framebuf2,#1 
26760     04 18 47 F0 |                  shr rcnt,#4
26764                 |              
26764     7D 1B 63 F8 |                  getnib rcnt2,framebuf2,#4
26768     7D 1F 33 F9 |                  getword roffset,framebuf2,#0
2676c                 |                 
2676c     04 1E 47 F0 |                  shr roffset,#4
26770     0C 1E 67 F0 |                  shl roffset,#12
26774                 |   
26774     9C FF 9F FD |                  jmp #p301
26778                 |                  
26778                 |                  
26778                 | p303           ' mov     framebuf2,dl                    ' read a line start in the framebuffer from DL entry
26778     0C FA 46 F0 |                 shr     framebuf2,#12
2677c     02 FA 66 F0 |                 shl     framebuf2,#2
26780                 | 
26780     7B 03 E3 F8 |                 getbyte t1,dl,#0
26784     00 02 0F F2 |                 cmp     t1,#0 wz
26788     34 00 90 AD |     if_z        jmp     #borderline
2678c                 | 
2678c     00 F6 16 F4 |                  testb   dl,#0  wc     ' bit 0 set = text OR extended:TODO
26790     50 00 90 CD |           if_c   jmp     #textline
26794     50 02 90 3D |           if_nc  jmp     #graphline
26798                 | '
26798     01 BE 06 F1 | p302            add     linenum,#1
2679c     04 F4 06 F1 |                 add     dlptr2,#4
267a0     5C BF 0A F2 |                 cmp     linenum,i_totalvis  wz
267a4     6C FF 9F 5D |          if_nz  jmp     #p301
267a8                 | 
267a8     72 03 68 FC | p112            wrlong  #1,vblankptr
267ac     07 AC 46 FB |                 callpa  i_downporch ,#blank             'bottom blanks
267b0                 | 
267b0     4A FD 02 F6 |                 mov     hsync0,sync_222                 'vsync on
267b4     4B FF 02 F6 |                 mov     hsync1,sync_223
267b8     04 AA 46 FB |                 callpa  i_vsync,#blank                  'vertical sync blanks
267bc     F8 FE 9F FD |                 jmp     #p101
267c0                 | 
267c0                 | '' ---------------  END of frame rendering loop -------------------------------------------
267c0                 | 
267c0                 | 
267c0     14 00 B0 FD | borderline      call    #hsync                      ' make a border
267c4     4C A1 C2 FC |                 xcont   m_vi,border
267c8     CC FF 9F FD |                 jmp     #p302
267cc                 | 
267cc                 | 
267cc     08 00 B0 FD | blank           call    #hsync                          'blank lines
267d0     7E A1 C2 FC |                 xcont   m_vi,hsync0
267d4     FD ED 6F 0B |         _ret_   djnz    pa,#blank
267d8                 | 
267d8     7E 9B C2 FC | hsync           xcont   m_bs,hsync0                     'horizontal sync
267dc     7F 9D B2 FC |                 xzero   m_sn,hsync1
267e0     7E 9F C2 0C |         _ret_   xcont   m_bv,hsync0
267e4                 | 
267e4                 | 
267e4                 | 
267e4                 | ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
267e4                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
267e4                 |   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
267e4                 | 
267e4                 | '' Display a text line DL[31..12]=addr, nibble #1=textline, zoom: todo
267e4                 | 
267e4     63 CD 02 F6 | textline        mov     cursorpos2,cursorx              ' we need another var for cursor as this code will repeat 16x for every char line
267e8                 | 
267e8     7B 01 53 F8 |                 getnib  fontline,dl,#2                 ' fontline is 0 to 15, a line in font def
267ec     7B 17 5B F8 |                 getnib  zoom, dl,#3
267f0     03 16 07 F5 |                 and             zoom, #3
267f4                 | 
267f4                 | 
267f4                 | 
267f4     7B BD 02 F6 |                 mov     linestart,dl                    ' linestart will be used for checking cursor y and compute line start addr in the buffer
267f8     02 BC 46 F0 |                 shr     linestart,#2                    ' scanline to char line
267fc     3F BC 06 F5 |                 and     linestart,#63
26800     64 BD 0A F2 |                 cmp     linestart,cursory wz            ' if the cursor is not here
26804     81 CC 06 56 |           if_nz mov     cursorpos2,#129                 ' move it out of the screen
26808                 | 
26808     CC FF BF FD |                 call    #hsync                          ' now call hsync to gain some time between xconts
2680c                 | 
2680c                 |                        ' if fontline =0, get a border color
2680c                 | 
2680c     51 03 33 F9 | p102            getword t1,m_border,#0
26810     00 02 0F F2 |                 cmp     t1, #0 wz
26814     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
26818                 | 
26818     61 01 1B F2 |                 cmp     fontline,cursorsh wcz           ' if the cursor have to be not displayed due to its shape
2681c     81 CA 06 C6 |           if_c  mov     cursorpos,#129                  ' move it out of the screen
26820     66 CB 02 36 |          if_nc  mov     cursorpos,cursorpos2
26824     01 CA 06 F1 |                 add     cursorpos,#1                    ' we will substract #1 below so compensate this here
26828     70 05 03 F6 |                 mov     t2,fontbuf                      ' font definition pointer
2682c     80 05 03 F1 |                 add     t2,fontline                     ' add a current font line
26830     52 BB 02 F6 |                 mov m_lut2, m_lut1
26834     6A BB 02 F1 |                 add m_lut2, lutt1
26838     58 0F 03 F6 |                 mov cpl2,i_cpl
2683c                 | 
2683c     02 16 0F F2 |                cmp zoom,#2 wz
26840     E4 00 90 AD |           if_z jmp #p420
26844     01 16 0F F2 |                cmp zoom,#1 wz
26848     64 00 90 AD |           if_z jmp #p410
2684c     00 16 0F F2 |                 cmp zoom,#0 wz
26850     04 00 90 AD |           if_z jmp #p400
26854     50 01 90 FD |                jmp #p430
26858                 | 
26858                 |                    '
26858                 |  ''---------------------------------------------------------------------------------------------------------
26858     7D 11 03 FB |  p400                   rdlong  char,framebuf2          ' read a long char                          '1
2685c     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
26860     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
26864     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
26868     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2686c     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
26870     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
26874     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
26878     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2687c     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
26880                 | 
26880     81 BB C2 FC |                         xcont m_lut2,t1
26884                 | 
26884     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
26888     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2688c     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
26890     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
26894     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
26898     01 C0 86 F1 |                         sub     lutaddr,#1
2689c                 | 
2689c     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
268a0     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
268a4     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
268a8                 | 
268a8     EB 0F 6F FB |                         djnz   cpl2,#p400
268ac     28 01 90 FD |  p401                   jmp    #p103
268b0                 | 
268b0                 | ''------------------------------------------------------------------------------------------------------------
268b0                 | 
268b0     01 0E 47 F0 |  p410                   shr cpl2,#1
268b4                 | 
268b4                 | ''---------------------------------------------------------------------------------------------------------
268b4     7D 11 03 FB |  p412                   rdlong  char,framebuf2          ' read a long char                          '1
268b8     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
268bc     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
268c0     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
268c4     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
268c8     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
268cc     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
268d0     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
268d4     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
268d8     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
268dc                 | 
268dc                 | 
268dc     81 07 4B F8 |                         getnib t3,t1,#1                   ' 4 pixels to t3                                              '1  - +
268e0     81 03 43 F8 |                         getnib t1,t1,#0                   ' 4 pixels to t1                                                      '2  - +
268e4     63 02 63 FD |                         mergew t1                         ' make 01010101 from 1111                                     '3  - +
268e8     03 02 07 FA |                         mul t1,#3
268ec     81 BB C2 FC |                         xcont m_lut2,t1
268f0     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
268f4     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
268f8     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
268fc     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
26900     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
26904     01 C0 86 F1 |                         sub     lutaddr,#1
26908     63 06 63 FD |                         mergew t3
2690c     03 06 07 FA |                         mul t3,#3
26910     83 BB C2 FC |                         xcont m_lut2,t3
26914                 | 
26914     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
26918     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
2691c                 | 
2691c     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
26920                 | 
26920     E4 0F 6F FB |                         djnz   cpl2,#p412
26924     B0 00 90 FD |  p411                   jmp    #p103
26928                 | 
26928                 | ''------------------------------------------------------------------------------------------------------------
26928                 | 
26928     02 0E 47 F0 |  p420                   shr cpl2,#2
2692c                 | 
2692c                 | ''---------------------------------------------------------------------------------------
2692c     7D 11 03 FB |  p422                   rdlong  char,framebuf2          ' read a long char                          '1
26930     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
26934     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
26938     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
2693c     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
26940     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
26944     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
26948     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
2694c     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
26950     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
26954                 | 
26954     61 02 63 FD |                         mergeb t1
26958     81 07 3B F9 |                         getword t3,t1,#1
2695c     0F 02 07 FA |                         mul t1,#15
26960     81 BB C2 FC |                         xcont m_lut2,t1
26964                 | 
26964     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
26968     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2696c     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
26970     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
26974     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
26978     01 C0 86 F1 |                         sub     lutaddr,#1
2697c                 | 
2697c     81 09 EB F8 |                         getbyte t4,t1,#1        '
26980     84 BB C2 FC |                         xcont m_lut2,t4                                                                                                           '
26984                 | 
26984     0F 06 07 FA |                         mul t3,#15
26988     83 BB C2 FC |                         xcont m_lut2,t3
2698c                 | 
2698c     83 0B EB F8 |                         getbyte t5,t3,#1
26990     85 BB C2 FC |                         xcont m_lut2, t5
26994     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
26998     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
2699c                 | 
2699c     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
269a0                 | 
269a0     E2 0F 6F FB |                         djnz   cpl2,#p422
269a4     30 00 90 FD |  p421                   jmp    #p103
269a8                 | 
269a8                 | '--------------------------------------------------------------------------------------------------------------
269a8                 | 
269a8     7D 11 03 FB |  p430                   rdlong  char,framebuf2          ' read a long char                          '1
269ac     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
269b0     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
269b4                 | 
269b4     00 BA C6 FC |                         xcont m_lut2,#0
269b8                 | 
269b8     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
269bc     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
269c0     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
269c4     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
269c8     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
269cc     01 C0 86 F1 |                         sub     lutaddr,#1
269d0                 | 
269d0     F5 0F 6F FB |                         djnz   cpl2,#p430
269d4     00 00 90 FD |  p431                   jmp    #p103
269d8                 | 
269d8                 | ''------------------------------------------------------------------------------------------------------------
269d8                 | 
269d8                 | 
269d8                 | 
269d8     51 25 33 F9 | p103            getword  mb2,m_border,#0
269dc     00 24 0F F2 |                 cmp      mb2, #0 wz
269e0     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
269e4                 | 
269e4     B0 FD 9F FD |                 jmp #p302
269e8                 | 
269e8                 | '' -------------------------------------- END of text line ---------------------------------
269e8                 | 
269e8                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph - display a graphics line
269e8                 | 
269e8     EC FD BF FD | graphline       call    #hsync                          ' now call hsync to gain some time between xconts
269ec                 | 
269ec                 | 
269ec     51 25 33 F9 | p202            getword mb2,m_border,#0
269f0     00 24 0F F2 |                 cmp     mb2, #0 wz
269f4     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
269f8                 | 
269f8                 | '----------------------------------------- display pixels
269f8                 | 
269f8     52 BB 02 F6 |                 mov     m_lut2,m_lut1                   ' m_lut1 loaded from hub timing block, pixel per long
269fc     58 0F 03 F6 |                 mov     cpl2,i_cpl                      ' i_cpl in graphic modes is longs per line
26a00                 | 
26a00     7B 17 5B F8 |                 getnib  zoom, dl,#3
26a04     03 16 07 F5 |                 and             zoom, #3                        ' get a horizontal zoom for the line
26a08                 | 
26a08     7B BD 02 F6 |                 mov     colordepth,dl                   ' get a color depth, reuse linestart var f         '
26a0c     0C BC 06 F5 |                 and     colordepth,#12
26a10                 | 
26a10     00 BC 0E F2 |                 cmp     colordepth,#%0000 wz            ' 1 bpp modes
26a14     6B BB 02 A1 |           if_z  add     m_lut2,lutg1
26a18     64 00 90 AD |           if_z  jmp     #p240
26a1c                 | 
26a1c     04 BC 0E F2 |                 cmp     colordepth,#%0100 wz            ' 2 bpp modes
26a20     6C BB 02 A1 |           if_z  add     m_lut2,lutg2
26a24     98 00 90 AD |           if_z  jmp     #p250
26a28                 | 
26a28     08 BC 0E F2 |                 cmp     colordepth,#%1000 wz            ' 4 bpp modes
26a2c     6D BB 02 A1 |           if_z  add     m_lut2,lutg4
26a30     FC 00 90 AD |           if_z  jmp     #p260
26a34                 | 
26a34     6E BB 02 F1 |                 add m_lut2,lutg8                        ' 8 bpp modes
26a38                 | 
26a38                 | '' --- 8 bit color modes
26a38                 | 
26a38     00 16 0F F2 |                 cmp zoom, #%00 wz   '256 colors, zoom x1
26a3c     50 01 90 AD |                 if_z jmp #p251      'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
26a40                 | 
26a40     01 16 0F F2 |                 cmp zoom, #%01 wz   '256 colors, zoom x2
26a44     2A 0C 07 A6 |                 if_z mov skippattern,#%101010
26a48                 |        
26a48                 |  '  
26a48     02 16 0F F2 |                 cmp zoom, #%10 wz   '256 colors, zoom x4
26a4c     25 0C 07 A6 |                 if_z mov skippattern,#%100101
26a50                 |     
26a50                 |  
26a50     05 0C 07 56 |                 if_nz mov skippattern,#%000101
26a54     01 0E 47 50 |                 if_nz shr cpl2,#1         ' if 8x zoom, 2 xconts used in one loop, so divide loop count by 2
26a58                 |         
26a58                 | 
26a58                 |         
26a58     7D 11 03 FB | p235               rdlong  char,framebuf2
26a5c     32 0C 63 FD |                    skipf skippattern
26a60     02 FA 06 F1 |                    add     framebuf2,#2             '0 1 1
26a64     01 FA 06 F1 |                    add     framebuf2,#1             '1 0 0
26a68     50 10 FF F9 |                    movbyts char,#%01010000          '0 1 1
26a6c     00 10 FF F9 |                    movbyts char,#%00000000          '1 0 0
26a70     88 BB C2 FC |                    xcont   m_lut2,char              '0 0 0
26a74     88 BB C2 FC |                    xcont   m_lut2,char              '1 1 0
26a78     F7 0F 6F FB |                    djnz    cpl2,#p235
26a7c                 | 
26a7c     20 01 90 FD |                jmp    #p203
26a80                 |                   
26a80                 | 
26a80                 | 
26a80                 | '' --- 1 bit color modes
26a80                 | 
26a80     00 16 0F F2 | p240          cmp zoom, #%00 wz     '2 colors, zoom x1
26a84     08 01 90 AD |        if_z   jmp #p251              'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
26a88                 | 
26a88     01 16 0F F2 |               cmp zoom, #%01 wz     '2 colors, zoom x2
26a8c     13 0C 07 A6 |        if_z   mov skippattern,#%10011
26a90     08 0C 07 56 |        if_nz  mov skippattern,#%01000
26a94                 | 
26a94                 | 
26a94     7D 11 E3 FA | p241               rdword  char,framebuf2
26a98     44 10 FF F9 |                    movbyts char,#%01000100
26a9c     63 10 63 FD |                    mergew  char
26aa0     32 0C 63 FD |                    skipf skippattern
26aa4     44 10 FF F9 |                    movbyts char,#%01000100         ' 1 0
26aa8     63 10 63 FD |                    mergew  char                    ' 1 0
26aac     88 BB C2 FC |                    xcont   m_lut2,char             ' 0 0
26ab0     02 FA 06 F1 |                    add     framebuf2,#2                    ' 0 1
26ab4     01 FA 06 F1 |                    add     framebuf2,#1                ' 1 0
26ab8     F6 0F 6F FB |                    djnz   cpl2,#p241
26abc                 | 
26abc                 | 
26abc     E0 00 90 FD |                jmp    #p203
26ac0                 | 
26ac0                 | '' --- 2 bit color modes
26ac0                 | 
26ac0     00 16 0F F2 | p250          cmp zoom, #%00 wz     '4 colors, zoom x1
26ac4     C8 00 90 AD |        if_z   jmp #p251
26ac8                 | 
26ac8     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
26acc     30 00 90 AD |        if_z   jmp #p252
26ad0                 | 
26ad0                 | 
26ad0     7D 11 C3 FA | p254               rdbyte char,framebuf2
26ad4     04 0A 07 F6 |                    mov  t5,#4
26ad8     02 10 67 F0 | p255               shl  char,#2
26adc     88 03 53 F8 |                    getnib  t1,char,#2
26ae0     03 02 07 F5 |                    and     t1,#3
26ae4     55 02 07 FA |                    mul     t1,#$55
26ae8     81 05 03 F9 |                    rolbyte  t2,t1,#0
26aec     FA 0B 6F FB |                    djnz    t5,#p255
26af0     82 BB C2 FC |                    xcont   m_lut2,t2
26af4     01 FA 06 F1 |                    add     framebuf2,#1
26af8     F5 0F 6F FB |                    djnz    cpl2,#p254
26afc     A0 00 90 FD |                    jmp     #p203
26b00                 | 
26b00     7D 11 E3 FA | p252               rdword char,framebuf2
26b04     08 0A 07 F6 |                    mov  t5,#8
26b08     02 10 67 F0 | p253               shl  char,#2
26b0c     88 03 63 F8 |                    getnib  t1,char,#4
26b10     03 02 07 F5 |                    and     t1,#3
26b14     05 02 07 FA |                    mul     t1,#5
26b18     81 05 83 F8 |                    rolnib  t2,t1,#0
26b1c     FA 0B 6F FB |                    djnz    t5,#p253
26b20     82 BB C2 FC |                    xcont   m_lut2,t2
26b24     02 FA 06 F1 |                    add     framebuf2,#2
26b28     F5 0F 6F FB |                    djnz    cpl2,#p252
26b2c     70 00 90 FD |                    jmp     #p203
26b30                 | 
26b30                 | '' ------ 4 bit color modes
26b30                 | 
26b30     00 16 0F F2 | p260          cmp zoom, #%00 wz     '4 colors, zoom x1, the same loop as 2bpp
26b34     58 00 90 AD |        if_z   jmp #p251
26b38                 | 
26b38     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
26b3c     2C 00 90 AD |        if_z   jmp #p262
26b40                 | 
26b40                 | 
26b40     7D 11 C3 FA | p263               rdbyte char,framebuf2
26b44     02 0A DC FC |                            rep #5,#2
26b48     88 05 8B F8 |                              rolnib t2,char,#1
26b4c     88 05 8B F8 |                                  rolnib t2,char,#1
26b50     88 05 8B F8 |                              rolnib t2,char,#1
26b54     88 05 8B F8 |                                  rolnib t2,char,#1
26b58     04 10 67 F0 |                              shl char,#4
26b5c     82 BB C2 FC |                    xcont   m_lut2,t2
26b60     01 FA 06 F1 |                    add     framebuf2,#1
26b64     F6 0F 6F FB |                    djnz    cpl2,#p263
26b68     34 00 90 FD |                    jmp     #p203
26b6c                 | 
26b6c     7D 11 E3 FA | p262               rdword  char,framebuf2
26b70     04 06 DC FC |                            rep #3,#4
26b74     88 05 9B F8 |                              rolnib t2,char,#3
26b78     88 05 9B F8 |                                  rolnib t2,char,#3
26b7c     04 10 67 F0 |                              shl char,#4
26b80     82 BB C2 FC |                    xcont   m_lut2,t2
26b84     02 FA 06 F1 |                    add     framebuf2,#2
26b88     F8 0F 6F FB |                    djnz    cpl2,#p262
26b8c     10 00 90 FD |                    jmp     #p203
26b90                 | 
26b90                 | ''---------- all color modes without zoom
26b90                 | 
26b90     87 07 D8 FC | p251               rep  #3,cpl2
26b94     7D 11 03 FB |                    rdlong  char,framebuf2
26b98     04 FA 06 F1 |                    add     framebuf2,#4
26b9c     88 BB C2 FC |                    xcont   m_lut2,char
26ba0                 |           
26ba0                 |  ''-----------------------------------------------------------------------------------------
26ba0                 | p203           ' getword  mb2,m_border,#0
26ba0     00 24 0F F2 |                 cmp      mb2, #0 wz
26ba4     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
26ba8                 | 
26ba8     EC FB 9F FD |                 jmp #p302
26bac                 | 
26bac                 | '' -------------------------------------- END of graph  line ---------------------------------
26bac                 | 
26bac                 | '' consts and vars
26bac                 | 
26bac     52 4D 35 D5 | sync_000        long    %1101010100_1101010100_1101010100_10    '
26bb0     AE 42 35 D5 | sync_001        long    %1101010100_1101010100_0010101011_10    '        hsync
26bb4     52 45 15 55 | sync_222        long    %0101010100_0101010100_0101010100_10    'vsync
26bb8     AE 4A 15 55 | sync_223        long    %0101010100_0101010100_1010101011_10    'vsync + hsync
26bbc                 | 
26bbc     00 2C 1A 00 | border          long    %00000000_00011010_00101100_00000000
26bc0                 | 
26bc0                 | '------ these longs will be set by setmode function
26bc0                 | 
26bc0     00 00 00 00 | m_bs            long    0        'blanks before sync
26bc4     00 00 00 00 | m_sn            long    0        'sync
26bc8     00 00 00 00 | m_bv            long    0        'blanks before visible
26bcc     00 00 00 00 | m_vi            long    0        'visible pixels #
26bd0     00 00 00 00 | m_border        long    0        'left/right borders
26bd4     00 00 00 00 | m_lut1          long    0        'characters
26bd8     00 00 00 00 | i_vborder       long    0        'up/down borders
26bdc     00 00 00 00 | i_upporch       long    0        'up porch lines
26be0     00 00 00 00 | i_vsync         long    0        'vsync lines
26be4     00 00 00 00 | i_downporch     long    0        'down porch lines
26be8     00 00 00 00 | i_modenum       long    0        'mode #
26bec     00 00 00 00 | i_cpl           long    0        'chars/longs per line
26bf0     00 00 00 00 | i_lines         long    0        'scanlines #
26bf4     00 00 00 00 | i_clock         long    0
26bf8     00 00 00 00 | i_hubset        long    0
26bfc     00 00 00 00 | i_totalvis      long    0
26c00                 | 
26c00                 | '-------------------------------------
26c00                 | 
26c00     00 00 00 00 | m_lut2          long    0
26c04                 | 
26c04                 | colordepth
26c04     00 00 00 00 | linestart       long    0
26c08     00 00 00 00 | linenum         long    0
26c0c     00 01 00 00 | lutaddr         long    256
26c10                 | 
26c10     0E 00 00 00 | cursorsh        long    14
26c14     00 00 00 00 | frames          long    0
26c18     00 00 00 00 | cursorx         long    0
26c1c     00 00 00 00 | cursory         long    0
26c20     00 00 00 00 | cursorpos       long    0
26c24     00 00 00 00 | cursorpos2      long    0
26c28     00 00 00 00 | fontstart       long    0
26c2c     00 00 00 00 | border2         long 0
26c30     00 00 81 70 | lutiv           long $70810000
26c34     00 00 88 00 | lutt1           long $00880000
26c38     00 00 80 00 | lutg1           long $00800000
26c3c     00 00 80 10 | lutg2           long $10800000
26c40     00 00 80 20 | lutg4           long $20800000
26c44     00 00 80 30 | lutg8           long $30800000
26c48     00 00 00 00 | framebuf        long 0
26c4c     00 00 00 00 | fontbuf         long 0
26c50     00 00 00 00 | borderptr       long 0
26c54     00 00 00 00 | vblankptr       long 0
26c58     00 00 00 00 | cursorptr       long 0
26c5c     00 00 00 00 | modeptr         long 0
26c60     00 00 00 00 | paletteptr      long 0
26c64     00 00 00 00 | dlptr           long 0
26c68                 | fontnumptr      res     1
26c68                 | fontnumptr      res     1
26c68                 | hbase           res     1
26c68                 | hbase           res     1
26c68                 | borderptr2      res     1
26c68                 | borderptr2      res     1
26c68                 | dlptr2 res 1
26c68                 | dlptr2 res 1
26c68                 | dl              res 1
26c68                 | dl              res 1
26c68                 | ii              res     1
26c68                 | ii              res     1
26c68                 | framebuf2       res     1
26c68                 | framebuf2       res     1
26c68                 | hsync0          res     1
26c68                 | hsync0          res     1
26c68                 | hsync1          res     1
26c68                 | hsync1          res     1
26c68                 | fontline        res     1
26c68                 | fontline        res     1
26c68                 | t1              res     1
26c68                 | t1              res     1
26c68                 | t2              res     1
26c68                 | t2              res     1
26c68                 | t3 res 1
26c68                 | t3 res 1
26c68                 | t4 res 1
26c68                 | t4 res 1
26c68                 | t5 res 1
26c68                 | t5 res 1
26c68                 | skippattern res 1
26c68                 | skippattern res 1
26c68                 | cpl2 res 1
26c68                 | cpl2 res 1
26c68                 | char            res     1
26c68                 | char            res     1
26c68                 | backcolor       res     1
26c68                 | backcolor       res     1
26c68                 | charcolor       res     1
26c68                 | charcolor       res     1
26c68                 | zoom res 1
26c68                 | zoom res 1
26c68     00 00 00 00 | rcnt long 0 'dl repeat count
26c6c     00 00 00 00 | rcnt2 long 0
26c70     00 00 00 00 | rcnt2a long 0
26c74     00 00 00 00 | roffset long 0
26c78     00 00 00 00 | rdl long 0  'dl repeat line
26c7c     00 00 00 00 | dlc long 0 'dl command
26c80     00 00 00 00 | mb2 long 0
26c84     00 00 00 00 | aend             long 0
26c88                 |                 fit     496                     '
26c88                 | _trackerplayer_spin2_dat_
26c88                 | 
26c88     00 00 00 00 | null             long  0
26c8c     46 52 45 51 
26c90     46 52 45 51 
26c94     46 52 45 51 
26c98     46 52 45 51 | frequencyLut     long  $51_45_52_46[VALUES_IN_PERIOD_TABLE] ' This table is runtime calculated to match any possible sys clock and mixing frequency combination [1024]
26c9c     46 52 45 51 
26ca0     46 52 45 51 
26ca4     46 52 45 51 
26ca8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26cac     46 52 45 51 
26cb0     46 52 45 51 
26cb4     46 52 45 51 
26cb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26cbc     46 52 45 51 
26cc0     46 52 45 51 
26cc4     46 52 45 51 
26cc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26ccc     46 52 45 51 
26cd0     46 52 45 51 
26cd4     46 52 45 51 
26cd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26cdc     46 52 45 51 
26ce0     46 52 45 51 
26ce4     46 52 45 51 
26ce8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26cec     46 52 45 51 
26cf0     46 52 45 51 
26cf4     46 52 45 51 
26cf8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26cfc     46 52 45 51 
26d00     46 52 45 51 
26d04     46 52 45 51 
26d08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d0c     46 52 45 51 
26d10     46 52 45 51 
26d14     46 52 45 51 
26d18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d1c     46 52 45 51 
26d20     46 52 45 51 
26d24     46 52 45 51 
26d28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d2c     46 52 45 51 
26d30     46 52 45 51 
26d34     46 52 45 51 
26d38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d3c     46 52 45 51 
26d40     46 52 45 51 
26d44     46 52 45 51 
26d48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d4c     46 52 45 51 
26d50     46 52 45 51 
26d54     46 52 45 51 
26d58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d5c     46 52 45 51 
26d60     46 52 45 51 
26d64     46 52 45 51 
26d68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d6c     46 52 45 51 
26d70     46 52 45 51 
26d74     46 52 45 51 
26d78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d7c     46 52 45 51 
26d80     46 52 45 51 
26d84     46 52 45 51 
26d88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d8c     46 52 45 51 
26d90     46 52 45 51 
26d94     46 52 45 51 
26d98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26d9c     46 52 45 51 
26da0     46 52 45 51 
26da4     46 52 45 51 
26da8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26dac     46 52 45 51 
26db0     46 52 45 51 
26db4     46 52 45 51 
26db8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26dbc     46 52 45 51 
26dc0     46 52 45 51 
26dc4     46 52 45 51 
26dc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26dcc     46 52 45 51 
26dd0     46 52 45 51 
26dd4     46 52 45 51 
26dd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26ddc     46 52 45 51 
26de0     46 52 45 51 
26de4     46 52 45 51 
26de8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26dec     46 52 45 51 
26df0     46 52 45 51 
26df4     46 52 45 51 
26df8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26dfc     46 52 45 51 
26e00     46 52 45 51 
26e04     46 52 45 51 
26e08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e0c     46 52 45 51 
26e10     46 52 45 51 
26e14     46 52 45 51 
26e18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e1c     46 52 45 51 
26e20     46 52 45 51 
26e24     46 52 45 51 
26e28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e2c     46 52 45 51 
26e30     46 52 45 51 
26e34     46 52 45 51 
26e38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e3c     46 52 45 51 
26e40     46 52 45 51 
26e44     46 52 45 51 
26e48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e4c     46 52 45 51 
26e50     46 52 45 51 
26e54     46 52 45 51 
26e58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e5c     46 52 45 51 
26e60     46 52 45 51 
26e64     46 52 45 51 
26e68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e6c     46 52 45 51 
26e70     46 52 45 51 
26e74     46 52 45 51 
26e78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e7c     46 52 45 51 
26e80     46 52 45 51 
26e84     46 52 45 51 
26e88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e8c     46 52 45 51 
26e90     46 52 45 51 
26e94     46 52 45 51 
26e98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26e9c     46 52 45 51 
26ea0     46 52 45 51 
26ea4     46 52 45 51 
26ea8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26eac     46 52 45 51 
26eb0     46 52 45 51 
26eb4     46 52 45 51 
26eb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26ebc     46 52 45 51 
26ec0     46 52 45 51 
26ec4     46 52 45 51 
26ec8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26ecc     46 52 45 51 
26ed0     46 52 45 51 
26ed4     46 52 45 51 
26ed8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26edc     46 52 45 51 
26ee0     46 52 45 51 
26ee4     46 52 45 51 
26ee8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26eec     46 52 45 51 
26ef0     46 52 45 51 
26ef4     46 52 45 51 
26ef8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26efc     46 52 45 51 
26f00     46 52 45 51 
26f04     46 52 45 51 
26f08     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f0c     46 52 45 51 
26f10     46 52 45 51 
26f14     46 52 45 51 
26f18     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f1c     46 52 45 51 
26f20     46 52 45 51 
26f24     46 52 45 51 
26f28     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f2c     46 52 45 51 
26f30     46 52 45 51 
26f34     46 52 45 51 
26f38     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f3c     46 52 45 51 
26f40     46 52 45 51 
26f44     46 52 45 51 
26f48     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f4c     46 52 45 51 
26f50     46 52 45 51 
26f54     46 52 45 51 
26f58     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f5c     46 52 45 51 
26f60     46 52 45 51 
26f64     46 52 45 51 
26f68     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f6c     46 52 45 51 
26f70     46 52 45 51 
26f74     46 52 45 51 
26f78     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f7c     46 52 45 51 
26f80     46 52 45 51 
26f84     46 52 45 51 
26f88     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f8c     46 52 45 51 
26f90     46 52 45 51 
26f94     46 52 45 51 
26f98     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26f9c     46 52 45 51 
26fa0     46 52 45 51 
26fa4     46 52 45 51 
26fa8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26fac     46 52 45 51 
26fb0     46 52 45 51 
26fb4     46 52 45 51 
26fb8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26fbc     46 52 45 51 
26fc0     46 52 45 51 
26fc4     46 52 45 51 
26fc8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26fcc     46 52 45 51 
26fd0     46 52 45 51 
26fd4     46 52 45 51 
26fd8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26fdc     46 52 45 51 
26fe0     46 52 45 51 
26fe4     46 52 45 51 
26fe8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26fec     46 52 45 51 
26ff0     46 52 45 51 
26ff4     46 52 45 51 
26ff8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
26ffc     46 52 45 51 
27000     46 52 45 51 
27004     46 52 45 51 
27008     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2700c     46 52 45 51 
27010     46 52 45 51 
27014     46 52 45 51 
27018     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2701c     46 52 45 51 
27020     46 52 45 51 
27024     46 52 45 51 
27028     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2702c     46 52 45 51 
27030     46 52 45 51 
27034     46 52 45 51 
27038     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2703c     46 52 45 51 
27040     46 52 45 51 
27044     46 52 45 51 
27048     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2704c     46 52 45 51 
27050     46 52 45 51 
27054     46 52 45 51 
27058     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2705c     46 52 45 51 
27060     46 52 45 51 
27064     46 52 45 51 
27068     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2706c     46 52 45 51 
27070     46 52 45 51 
27074     46 52 45 51 
27078     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2707c     46 52 45 51 
27080     46 52 45 51 
27084     46 52 45 51 
27088     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2708c     46 52 45 51 
27090     46 52 45 51 
27094     46 52 45 51 
27098     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2709c     46 52 45 51 
270a0     46 52 45 51 
270a4     46 52 45 51 
270a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270ac     46 52 45 51 
270b0     46 52 45 51 
270b4     46 52 45 51 
270b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270bc     46 52 45 51 
270c0     46 52 45 51 
270c4     46 52 45 51 
270c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270cc     46 52 45 51 
270d0     46 52 45 51 
270d4     46 52 45 51 
270d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270dc     46 52 45 51 
270e0     46 52 45 51 
270e4     46 52 45 51 
270e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270ec     46 52 45 51 
270f0     46 52 45 51 
270f4     46 52 45 51 
270f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
270fc     46 52 45 51 
27100     46 52 45 51 
27104     46 52 45 51 
27108     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2710c     46 52 45 51 
27110     46 52 45 51 
27114     46 52 45 51 
27118     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2711c     46 52 45 51 
27120     46 52 45 51 
27124     46 52 45 51 
27128     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2712c     46 52 45 51 
27130     46 52 45 51 
27134     46 52 45 51 
27138     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2713c     46 52 45 51 
27140     46 52 45 51 
27144     46 52 45 51 
27148     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2714c     46 52 45 51 
27150     46 52 45 51 
27154     46 52 45 51 
27158     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2715c     46 52 45 51 
27160     46 52 45 51 
27164     46 52 45 51 
27168     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2716c     46 52 45 51 
27170     46 52 45 51 
27174     46 52 45 51 
27178     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2717c     46 52 45 51 
27180     46 52 45 51 
27184     46 52 45 51 
27188     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2718c     46 52 45 51 
27190     46 52 45 51 
27194     46 52 45 51 
27198     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2719c     46 52 45 51 
271a0     46 52 45 51 
271a4     46 52 45 51 
271a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271ac     46 52 45 51 
271b0     46 52 45 51 
271b4     46 52 45 51 
271b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271bc     46 52 45 51 
271c0     46 52 45 51 
271c4     46 52 45 51 
271c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271cc     46 52 45 51 
271d0     46 52 45 51 
271d4     46 52 45 51 
271d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271dc     46 52 45 51 
271e0     46 52 45 51 
271e4     46 52 45 51 
271e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271ec     46 52 45 51 
271f0     46 52 45 51 
271f4     46 52 45 51 
271f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
271fc     46 52 45 51 
27200     46 52 45 51 
27204     46 52 45 51 
27208     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2720c     46 52 45 51 
27210     46 52 45 51 
27214     46 52 45 51 
27218     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2721c     46 52 45 51 
27220     46 52 45 51 
27224     46 52 45 51 
27228     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2722c     46 52 45 51 
27230     46 52 45 51 
27234     46 52 45 51 
27238     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2723c     46 52 45 51 
27240     46 52 45 51 
27244     46 52 45 51 
27248     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2724c     46 52 45 51 
27250     46 52 45 51 
27254     46 52 45 51 
27258     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2725c     46 52 45 51 
27260     46 52 45 51 
27264     46 52 45 51 
27268     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2726c     46 52 45 51 
27270     46 52 45 51 
27274     46 52 45 51 
27278     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2727c     46 52 45 51 
27280     46 52 45 51 
27284     46 52 45 51 
27288     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2728c     46 52 45 51 
27290     46 52 45 51 
27294     46 52 45 51 
27298     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2729c     46 52 45 51 
272a0     46 52 45 51 
272a4     46 52 45 51 
272a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272ac     46 52 45 51 
272b0     46 52 45 51 
272b4     46 52 45 51 
272b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272bc     46 52 45 51 
272c0     46 52 45 51 
272c4     46 52 45 51 
272c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272cc     46 52 45 51 
272d0     46 52 45 51 
272d4     46 52 45 51 
272d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272dc     46 52 45 51 
272e0     46 52 45 51 
272e4     46 52 45 51 
272e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272ec     46 52 45 51 
272f0     46 52 45 51 
272f4     46 52 45 51 
272f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
272fc     46 52 45 51 
27300     46 52 45 51 
27304     46 52 45 51 
27308     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2730c     46 52 45 51 
27310     46 52 45 51 
27314     46 52 45 51 
27318     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2731c     46 52 45 51 
27320     46 52 45 51 
27324     46 52 45 51 
27328     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2732c     46 52 45 51 
27330     46 52 45 51 
27334     46 52 45 51 
27338     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2733c     46 52 45 51 
27340     46 52 45 51 
27344     46 52 45 51 
27348     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2734c     46 52 45 51 
27350     46 52 45 51 
27354     46 52 45 51 
27358     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2735c     46 52 45 51 
27360     46 52 45 51 
27364     46 52 45 51 
27368     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2736c     46 52 45 51 
27370     46 52 45 51 
27374     46 52 45 51 
27378     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2737c     46 52 45 51 
27380     46 52 45 51 
27384     46 52 45 51 
27388     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2738c     46 52 45 51 
27390     46 52 45 51 
27394     46 52 45 51 
27398     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2739c     46 52 45 51 
273a0     46 52 45 51 
273a4     46 52 45 51 
273a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273ac     46 52 45 51 
273b0     46 52 45 51 
273b4     46 52 45 51 
273b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273bc     46 52 45 51 
273c0     46 52 45 51 
273c4     46 52 45 51 
273c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273cc     46 52 45 51 
273d0     46 52 45 51 
273d4     46 52 45 51 
273d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273dc     46 52 45 51 
273e0     46 52 45 51 
273e4     46 52 45 51 
273e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273ec     46 52 45 51 
273f0     46 52 45 51 
273f4     46 52 45 51 
273f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
273fc     46 52 45 51 
27400     46 52 45 51 
27404     46 52 45 51 
27408     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2740c     46 52 45 51 
27410     46 52 45 51 
27414     46 52 45 51 
27418     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2741c     46 52 45 51 
27420     46 52 45 51 
27424     46 52 45 51 
27428     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2742c     46 52 45 51 
27430     46 52 45 51 
27434     46 52 45 51 
27438     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2743c     46 52 45 51 
27440     46 52 45 51 
27444     46 52 45 51 
27448     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2744c     46 52 45 51 
27450     46 52 45 51 
27454     46 52 45 51 
27458     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2745c     46 52 45 51 
27460     46 52 45 51 
27464     46 52 45 51 
27468     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2746c     46 52 45 51 
27470     46 52 45 51 
27474     46 52 45 51 
27478     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2747c     46 52 45 51 
27480     46 52 45 51 
27484     46 52 45 51 
27488     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2748c     46 52 45 51 
27490     46 52 45 51 
27494     46 52 45 51 
27498     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2749c     46 52 45 51 
274a0     46 52 45 51 
274a4     46 52 45 51 
274a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274ac     46 52 45 51 
274b0     46 52 45 51 
274b4     46 52 45 51 
274b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274bc     46 52 45 51 
274c0     46 52 45 51 
274c4     46 52 45 51 
274c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274cc     46 52 45 51 
274d0     46 52 45 51 
274d4     46 52 45 51 
274d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274dc     46 52 45 51 
274e0     46 52 45 51 
274e4     46 52 45 51 
274e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274ec     46 52 45 51 
274f0     46 52 45 51 
274f4     46 52 45 51 
274f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
274fc     46 52 45 51 
27500     46 52 45 51 
27504     46 52 45 51 
27508     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2750c     46 52 45 51 
27510     46 52 45 51 
27514     46 52 45 51 
27518     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2751c     46 52 45 51 
27520     46 52 45 51 
27524     46 52 45 51 
27528     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2752c     46 52 45 51 
27530     46 52 45 51 
27534     46 52 45 51 
27538     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2753c     46 52 45 51 
27540     46 52 45 51 
27544     46 52 45 51 
27548     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2754c     46 52 45 51 
27550     46 52 45 51 
27554     46 52 45 51 
27558     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2755c     46 52 45 51 
27560     46 52 45 51 
27564     46 52 45 51 
27568     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2756c     46 52 45 51 
27570     46 52 45 51 
27574     46 52 45 51 
27578     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2757c     46 52 45 51 
27580     46 52 45 51 
27584     46 52 45 51 
27588     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2758c     46 52 45 51 
27590     46 52 45 51 
27594     46 52 45 51 
27598     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2759c     46 52 45 51 
275a0     46 52 45 51 
275a4     46 52 45 51 
275a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275ac     46 52 45 51 
275b0     46 52 45 51 
275b4     46 52 45 51 
275b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275bc     46 52 45 51 
275c0     46 52 45 51 
275c4     46 52 45 51 
275c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275cc     46 52 45 51 
275d0     46 52 45 51 
275d4     46 52 45 51 
275d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275dc     46 52 45 51 
275e0     46 52 45 51 
275e4     46 52 45 51 
275e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275ec     46 52 45 51 
275f0     46 52 45 51 
275f4     46 52 45 51 
275f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
275fc     46 52 45 51 
27600     46 52 45 51 
27604     46 52 45 51 
27608     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2760c     46 52 45 51 
27610     46 52 45 51 
27614     46 52 45 51 
27618     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2761c     46 52 45 51 
27620     46 52 45 51 
27624     46 52 45 51 
27628     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2762c     46 52 45 51 
27630     46 52 45 51 
27634     46 52 45 51 
27638     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2763c     46 52 45 51 
27640     46 52 45 51 
27644     46 52 45 51 
27648     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2764c     46 52 45 51 
27650     46 52 45 51 
27654     46 52 45 51 
27658     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2765c     46 52 45 51 
27660     46 52 45 51 
27664     46 52 45 51 
27668     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2766c     46 52 45 51 
27670     46 52 45 51 
27674     46 52 45 51 
27678     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2767c     46 52 45 51 
27680     46 52 45 51 
27684     46 52 45 51 
27688     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2768c     46 52 45 51 
27690     46 52 45 51 
27694     46 52 45 51 
27698     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2769c     46 52 45 51 
276a0     46 52 45 51 
276a4     46 52 45 51 
276a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276ac     46 52 45 51 
276b0     46 52 45 51 
276b4     46 52 45 51 
276b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276bc     46 52 45 51 
276c0     46 52 45 51 
276c4     46 52 45 51 
276c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276cc     46 52 45 51 
276d0     46 52 45 51 
276d4     46 52 45 51 
276d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276dc     46 52 45 51 
276e0     46 52 45 51 
276e4     46 52 45 51 
276e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276ec     46 52 45 51 
276f0     46 52 45 51 
276f4     46 52 45 51 
276f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
276fc     46 52 45 51 
27700     46 52 45 51 
27704     46 52 45 51 
27708     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2770c     46 52 45 51 
27710     46 52 45 51 
27714     46 52 45 51 
27718     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2771c     46 52 45 51 
27720     46 52 45 51 
27724     46 52 45 51 
27728     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2772c     46 52 45 51 
27730     46 52 45 51 
27734     46 52 45 51 
27738     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2773c     46 52 45 51 
27740     46 52 45 51 
27744     46 52 45 51 
27748     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2774c     46 52 45 51 
27750     46 52 45 51 
27754     46 52 45 51 
27758     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2775c     46 52 45 51 
27760     46 52 45 51 
27764     46 52 45 51 
27768     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2776c     46 52 45 51 
27770     46 52 45 51 
27774     46 52 45 51 
27778     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2777c     46 52 45 51 
27780     46 52 45 51 
27784     46 52 45 51 
27788     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2778c     46 52 45 51 
27790     46 52 45 51 
27794     46 52 45 51 
27798     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2779c     46 52 45 51 
277a0     46 52 45 51 
277a4     46 52 45 51 
277a8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277ac     46 52 45 51 
277b0     46 52 45 51 
277b4     46 52 45 51 
277b8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277bc     46 52 45 51 
277c0     46 52 45 51 
277c4     46 52 45 51 
277c8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277cc     46 52 45 51 
277d0     46 52 45 51 
277d4     46 52 45 51 
277d8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277dc     46 52 45 51 
277e0     46 52 45 51 
277e4     46 52 45 51 
277e8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277ec     46 52 45 51 
277f0     46 52 45 51 
277f4     46 52 45 51 
277f8     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
277fc     46 52 45 51 
27800     46 52 45 51 
27804     46 52 45 51 
27808     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2780c     46 52 45 51 
27810     46 52 45 51 
27814     46 52 45 51 
27818     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2781c     46 52 45 51 
27820     46 52 45 51 
27824     46 52 45 51 
27828     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
2782c                 | 
2782c     00 00 00 00 
27830     18 00 00 00 
27834     31 00 00 00 
27838     4A 00 00 00 | vibratoWaveform  long  0,    24,   49,   74,   97,   120,  141,  161
2783c     61 00 00 00 
27840     78 00 00 00 
27844     8D 00 00 00 
27848     A1 00 00 00 | 	byte	$61, $00, $00, $00, $78, $00, $00, $00, $8d, $00, $00, $00, $a1, $00, $00, $00
2784c     B4 00 00 00 
27850     C5 00 00 00 
27854     D4 00 00 00 
27858     E0 00 00 00 |                  long  180,  197,  212,  224,  235,  244,  250,  253
2785c     EB 00 00 00 
27860     F4 00 00 00 
27864     FA 00 00 00 
27868     FD 00 00 00 | 	byte	$eb, $00, $00, $00, $f4, $00, $00, $00, $fa, $00, $00, $00, $fd, $00, $00, $00
2786c     FF 00 00 00 
27870     FD 00 00 00 
27874     FA 00 00 00 
27878     F4 00 00 00 |                  long  255,  253,  250,  244,  235,  224,  212,  197
2787c     EB 00 00 00 
27880     E0 00 00 00 
27884     D4 00 00 00 
27888     C5 00 00 00 | 	byte	$eb, $00, $00, $00, $e0, $00, $00, $00, $d4, $00, $00, $00, $c5, $00, $00, $00
2788c     B4 00 00 00 
27890     A1 00 00 00 
27894     8D 00 00 00 
27898     78 00 00 00 |                  long  180,  161,  141,  120,  97,   74,   49,   24
2789c     61 00 00 00 
278a0     4A 00 00 00 
278a4     31 00 00 00 
278a8     18 00 00 00 | 	byte	$61, $00, $00, $00, $4a, $00, $00, $00, $31, $00, $00, $00, $18, $00, $00, $00
278ac     00 00 00 00 
278b0     E8 FF FF FF 
278b4     CF FF FF FF 
278b8     B6 FF FF FF |                  long  0,   -24,  -49,  -74,  -97,  -120, -141, -161
278bc     9F FF FF FF 
278c0     88 FF FF FF 
278c4     73 FF FF FF 
278c8     5F FF FF FF | 	byte	$9f, $ff, $ff, $ff, $88, $ff, $ff, $ff, $73, $ff, $ff, $ff, $5f, $ff, $ff, $ff
278cc     4C FF FF FF 
278d0     3B FF FF FF 
278d4     2C FF FF FF 
278d8     20 FF FF FF |                  long -180, -197, -212, -224, -235, -244, -250, -253
278dc     15 FF FF FF 
278e0     0C FF FF FF 
278e4     06 FF FF FF 
278e8     03 FF FF FF | 	byte	$15, $ff, $ff, $ff, $0c, $ff, $ff, $ff, $06, $ff, $ff, $ff, $03, $ff, $ff, $ff
278ec     01 FF FF FF 
278f0     03 FF FF FF 
278f4     06 FF FF FF 
278f8     0C FF FF FF |                  long -255, -253, -250, -244, -235, -224, -212, -197
278fc     15 FF FF FF 
27900     20 FF FF FF 
27904     2C FF FF FF 
27908     3B FF FF FF | 	byte	$15, $ff, $ff, $ff, $20, $ff, $ff, $ff, $2c, $ff, $ff, $ff, $3b, $ff, $ff, $ff
2790c     4C FF FF FF 
27910     5F FF FF FF 
27914     73 FF FF FF 
27918     88 FF FF FF |                  long -180, -161, -141, -120, -97,  -74,  -49,  -24
2791c     9F FF FF FF 
27920     B6 FF FF FF 
27924     CF FF FF FF 
27928     E8 FF FF FF | 	byte	$9f, $ff, $ff, $ff, $b6, $ff, $ff, $ff, $cf, $ff, $ff, $ff, $e8, $ff, $ff, $ff
2792c                 | 
2792c     58 03 28 03 
27930     FA 02 D0 02 
27934     A6 02 80 02 
27938     5C 02 3A 02 | periodTable      word  856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480 , 453 ' C1
2793c     1A 02 FC 01 
27940     E0 01 C5 01 | 	byte	$1a, $02, $fc, $01, $e0, $01, $c5, $01
27944     AC 01 94 01 
27948     7D 01 68 01 
2794c     53 01 40 01 
27950     2E 01 1D 01 |                  word  428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240 , 226 ' C2
27954     0D 01 FE 00 
27958     F0 00 E2 00 | 	byte	$0d, $01, $fe, $00, $f0, $00, $e2, $00
2795c     D6 00 CA 00 
27960     BE 00 B4 00 
27964     AA 00 A0 00 
27968     97 00 8F 00 |                  word  214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120 , 113 ' C3
2796c     87 00 7F 00 
27970     78 00 71 00 | 	byte	$87, $00, $7f, $00, $78, $00, $71, $00
27974     52 03 22 03 
27978     F5 02 CB 02 
2797c     A2 02 7D 02 
27980     59 02 37 02 |                  word  850 , 802 , 757 , 715 , 674 , 637 , 601 , 567 , 535 , 505 , 477 , 450
27984     17 02 F9 01 
27988     DD 01 C2 01 | 	byte	$17, $02, $f9, $01, $dd, $01, $c2, $01
2798c     A9 01 91 01 
27990     7B 01 65 01 
27994     51 01 3E 01 
27998     2C 01 1C 01 |                  word  425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 239 , 225
2799c     0C 01 FD 00 
279a0     EF 00 E1 00 | 	byte	$0c, $01, $fd, $00, $ef, $00, $e1, $00
279a4     D5 00 C9 00 
279a8     BD 00 B3 00 
279ac     A9 00 9F 00 
279b0     96 00 8E 00 |                  word  213 , 201 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119 , 113
279b4     86 00 7E 00 
279b8     77 00 71 00 | 	byte	$86, $00, $7e, $00, $77, $00, $71, $00
279bc     4C 03 1C 03 
279c0     F0 02 C5 02 
279c4     9E 02 78 02 
279c8     55 02 33 02 |                  word  844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474 , 447
279cc     14 02 F6 01 
279d0     DA 01 BF 01 | 	byte	$14, $02, $f6, $01, $da, $01, $bf, $01
279d4     A6 01 8E 01 
279d8     78 01 63 01 
279dc     4F 01 3C 01 
279e0     2A 01 1A 01 |                  word  422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237 , 224
279e4     0A 01 FB 00 
279e8     ED 00 E0 00 | 	byte	$0a, $01, $fb, $00, $ed, $00, $e0, $00
279ec     D3 00 C7 00 
279f0     BC 00 B1 00 
279f4     A7 00 9E 00 
279f8     95 00 8D 00 |                  word  211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118 , 112
279fc     85 00 7D 00 
27a00     76 00 70 00 | 	byte	$85, $00, $7d, $00, $76, $00, $70, $00
27a04     46 03 17 03 
27a08     EA 02 C0 02 
27a0c     99 02 74 02 
27a10     50 02 2F 02 |                  word  838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470 , 444
27a14     10 02 F2 01 
27a18     D6 01 BC 01 | 	byte	$10, $02, $f2, $01, $d6, $01, $bc, $01
27a1c     A3 01 8B 01 
27a20     75 01 60 01 
27a24     4C 01 3A 01 
27a28     28 01 18 01 |                  word  419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235 , 222
27a2c     08 01 F9 00 
27a30     EB 00 DE 00 | 	byte	$08, $01, $f9, $00, $eb, $00, $de, $00
27a34     D1 00 C6 00 
27a38     BB 00 B0 00 
27a3c     A6 00 9D 00 
27a40     94 00 8C 00 |                  word  209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118 , 111
27a44     84 00 7D 00 
27a48     76 00 6F 00 | 	byte	$84, $00, $7d, $00, $76, $00, $6f, $00
27a4c     40 03 11 03 
27a50     E5 02 BB 02 
27a54     94 02 6F 02 
27a58     4C 02 2B 02 |                  word  832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 495 , 467 , 441
27a5c     0C 02 EF 01 
27a60     D3 01 B9 01 | 	byte	$0c, $02, $ef, $01, $d3, $01, $b9, $01
27a64     A0 01 88 01 
27a68     72 01 5E 01 
27a6c     4A 01 38 01 
27a70     26 01 16 01 |                  word  416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233 , 220
27a74     06 01 F7 00 
27a78     E9 00 DC 00 | 	byte	$06, $01, $f7, $00, $e9, $00, $dc, $00
27a7c     D0 00 C4 00 
27a80     B9 00 AF 00 
27a84     A5 00 9C 00 
27a88     93 00 8B 00 |                  word  208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 124 , 117 , 110
27a8c     83 00 7C 00 
27a90     75 00 6E 00 | 	byte	$83, $00, $7c, $00, $75, $00, $6e, $00
27a94     3A 03 0B 03 
27a98     E0 02 B6 02 
27a9c     8F 02 6B 02 
27aa0     48 02 27 02 |                  word  826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463 , 437
27aa4     08 02 EB 01 
27aa8     CF 01 B5 01 | 	byte	$08, $02, $eb, $01, $cf, $01, $b5, $01
27aac     9D 01 86 01 
27ab0     70 01 5B 01 
27ab4     48 01 35 01 
27ab8     24 01 14 01 |                  word  413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232 , 219
27abc     04 01 F5 00 
27ac0     E8 00 DB 00 | 	byte	$04, $01, $f5, $00, $e8, $00, $db, $00
27ac4     CE 00 C3 00 
27ac8     B8 00 AE 00 
27acc     A4 00 9B 00 
27ad0     92 00 8A 00 |                  word  206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116 , 109
27ad4     82 00 7B 00 
27ad8     74 00 6D 00 | 	byte	$82, $00, $7b, $00, $74, $00, $6d, $00
27adc     34 03 06 03 
27ae0     DA 02 B1 02 
27ae4     8B 02 66 02 
27ae8     44 02 23 02 |                  word  820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460 , 434
27aec     04 02 E7 01 
27af0     CC 01 B2 01 | 	byte	$04, $02, $e7, $01, $cc, $01, $b2, $01
27af4     9A 01 83 01 
27af8     6D 01 59 01 
27afc     45 01 33 01 
27b00     22 01 12 01 |                  word  410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230 , 217
27b04     02 01 F4 00 
27b08     E6 00 D9 00 | 	byte	$02, $01, $f4, $00, $e6, $00, $d9, $00
27b0c     CD 00 C1 00 
27b10     B7 00 AC 00 
27b14     A3 00 9A 00 
27b18     91 00 89 00 |                  word  205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115 , 109
27b1c     81 00 7A 00 
27b20     73 00 6D 00 | 	byte	$81, $00, $7a, $00, $73, $00, $6d, $00
27b24     2E 03 00 03 
27b28     D5 02 AC 02 
27b2c     86 02 62 02 
27b30     3F 02 1F 02 |                  word  814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457 , 431
27b34     01 02 E4 01 
27b38     C9 01 AF 01 | 	byte	$01, $02, $e4, $01, $c9, $01, $af, $01
27b3c     97 01 80 01 
27b40     6B 01 56 01 
27b44     43 01 31 01 
27b48     20 01 10 01 |                  word  407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228 , 216
27b4c     00 01 F2 00 
27b50     E4 00 D8 00 | 	byte	$00, $01, $f2, $00, $e4, $00, $d8, $00
27b54     CC 00 C0 00 
27b58     B5 00 AB 00 
27b5c     A1 00 98 00 
27b60     90 00 88 00 |                  word  204 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114 , 108
27b64     80 00 79 00 
27b68     72 00 6C 00 | 	byte	$80, $00, $79, $00, $72, $00, $6c, $00
27b6c     8B 03 58 03 
27b70     28 03 FA 02 
27b74     D0 02 A6 02 
27b78     80 02 5C 02 |                  word  907 , 856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480
27b7c     3A 02 1A 02 
27b80     FC 01 E0 01 | 	byte	$3a, $02, $1a, $02, $fc, $01, $e0, $01
27b84     C5 01 AC 01 
27b88     94 01 7D 01 
27b8c     68 01 53 01 
27b90     40 01 2E 01 |                  word  453 , 428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240
27b94     1D 01 0D 01 
27b98     FE 00 F0 00 | 	byte	$1d, $01, $0d, $01, $fe, $00, $f0, $00
27b9c     E2 00 D6 00 
27ba0     CA 00 BE 00 
27ba4     B4 00 AA 00 
27ba8     A0 00 97 00 |                  word  226 , 214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120
27bac     8F 00 87 00 
27bb0     7F 00 78 00 | 	byte	$8f, $00, $87, $00, $7f, $00, $78, $00
27bb4     84 03 52 03 
27bb8     22 03 F5 02 
27bbc     CB 02 A3 02 
27bc0     7C 02 59 02 |                  word  900 , 850 , 802 , 757 , 715 , 675 , 636 , 601 , 567 , 535 , 505 , 477
27bc4     37 02 17 02 
27bc8     F9 01 DD 01 | 	byte	$37, $02, $17, $02, $f9, $01, $dd, $01
27bcc     C2 01 A9 01 
27bd0     91 01 7B 01 
27bd4     65 01 51 01 
27bd8     3E 01 2C 01 |                  word  450 , 425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 238
27bdc     1C 01 0C 01 
27be0     FD 00 EE 00 | 	byte	$1c, $01, $0c, $01, $fd, $00, $ee, $00
27be4     E1 00 D4 00 
27be8     C8 00 BD 00 
27bec     B3 00 A9 00 
27bf0     9F 00 96 00 |                  word  225 , 212 , 200 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119
27bf4     8E 00 86 00 
27bf8     7E 00 77 00 | 	byte	$8e, $00, $86, $00, $7e, $00, $77, $00
27bfc     7E 03 4C 03 
27c00     1C 03 F0 02 
27c04     C5 02 9E 02 
27c08     78 02 55 02 |                  word  894 , 844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474
27c0c     33 02 14 02 
27c10     F6 01 DA 01 | 	byte	$33, $02, $14, $02, $f6, $01, $da, $01
27c14     BF 01 A6 01 
27c18     8E 01 78 01 
27c1c     63 01 4F 01 
27c20     3C 01 2A 01 |                  word  447 , 422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237
27c24     1A 01 0A 01 
27c28     FB 00 ED 00 | 	byte	$1a, $01, $0a, $01, $fb, $00, $ed, $00
27c2c     DF 00 D3 00 
27c30     C7 00 BC 00 
27c34     B1 00 A7 00 
27c38     9E 00 95 00 |                  word  223 , 211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118
27c3c     8D 00 85 00 
27c40     7D 00 76 00 | 	byte	$8d, $00, $85, $00, $7d, $00, $76, $00
27c44     77 03 46 03 
27c48     17 03 EA 02 
27c4c     C0 02 99 02 
27c50     74 02 50 02 |                  word  887 , 838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470
27c54     2F 02 10 02 
27c58     F2 01 D6 01 | 	byte	$2f, $02, $10, $02, $f2, $01, $d6, $01
27c5c     BC 01 A3 01 
27c60     8B 01 75 01 
27c64     60 01 4C 01 
27c68     3A 01 28 01 |                  word  444 , 419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235
27c6c     18 01 08 01 
27c70     F9 00 EB 00 | 	byte	$18, $01, $08, $01, $f9, $00, $eb, $00
27c74     DE 00 D1 00 
27c78     C6 00 BB 00 
27c7c     B0 00 A6 00 
27c80     9D 00 94 00 |                  word  222 , 209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118
27c84     8C 00 84 00 
27c88     7D 00 76 00 | 	byte	$8c, $00, $84, $00, $7d, $00, $76, $00
27c8c     71 03 40 03 
27c90     11 03 E5 02 
27c94     BB 02 94 02 
27c98     6F 02 4C 02 |                  word  881 , 832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 494 , 467
27c9c     2B 02 0C 02 
27ca0     EE 01 D3 01 | 	byte	$2b, $02, $0c, $02, $ee, $01, $d3, $01
27ca4     B9 01 A0 01 
27ca8     88 01 72 01 
27cac     5E 01 4A 01 
27cb0     38 01 26 01 |                  word  441 , 416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233
27cb4     16 01 06 01 
27cb8     F7 00 E9 00 | 	byte	$16, $01, $06, $01, $f7, $00, $e9, $00
27cbc     DC 00 D0 00 
27cc0     C4 00 B9 00 
27cc4     AF 00 A5 00 
27cc8     9C 00 93 00 |                  word  220 , 208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 123 , 117
27ccc     8B 00 83 00 
27cd0     7B 00 75 00 | 	byte	$8b, $00, $83, $00, $7b, $00, $75, $00
27cd4     6B 03 3A 03 
27cd8     0B 03 E0 02 
27cdc     B6 02 8F 02 
27ce0     6B 02 48 02 |                  word  875 , 826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463
27ce4     27 02 08 02 
27ce8     EB 01 CF 01 | 	byte	$27, $02, $08, $02, $eb, $01, $cf, $01
27cec     B5 01 9D 01 
27cf0     86 01 70 01 
27cf4     5B 01 48 01 
27cf8     35 01 24 01 |                  word  437 , 413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232
27cfc     14 01 04 01 
27d00     F5 00 E8 00 | 	byte	$14, $01, $04, $01, $f5, $00, $e8, $00
27d04     DB 00 CE 00 
27d08     C3 00 B8 00 
27d0c     AE 00 A4 00 
27d10     9B 00 92 00 |                  word  219 , 206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116
27d14     8A 00 82 00 
27d18     7B 00 74 00 | 	byte	$8a, $00, $82, $00, $7b, $00, $74, $00
27d1c     64 03 34 03 
27d20     06 03 DA 02 
27d24     B1 02 8B 02 
27d28     66 02 44 02 |                  word  868 , 820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460
27d2c     23 02 04 02 
27d30     E7 01 CC 01 | 	byte	$23, $02, $04, $02, $e7, $01, $cc, $01
27d34     B2 01 9A 01 
27d38     83 01 6D 01 
27d3c     59 01 45 01 
27d40     33 01 22 01 |                  word  434 , 410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230
27d44     12 01 02 01 
27d48     F4 00 E6 00 | 	byte	$12, $01, $02, $01, $f4, $00, $e6, $00
27d4c     D9 00 CD 00 
27d50     C1 00 B7 00 
27d54     AC 00 A3 00 
27d58     9A 00 91 00 |                  word  217 , 205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115
27d5c     89 00 81 00 
27d60     7A 00 73 00 | 	byte	$89, $00, $81, $00, $7a, $00, $73, $00
27d64     5E 03 2E 03 
27d68     00 03 D5 02 
27d6c     AC 02 86 02 
27d70     62 02 3F 02 |                  word  862 , 814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457
27d74     1F 02 01 02 
27d78     E4 01 C9 01 | 	byte	$1f, $02, $01, $02, $e4, $01, $c9, $01
27d7c     AF 01 97 01 
27d80     80 01 6B 01 
27d84     56 01 43 01 
27d88     31 01 20 01 |                  word  431 , 407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228
27d8c     10 01 00 01 
27d90     F2 00 E4 00 | 	byte	$10, $01, $00, $01, $f2, $00, $e4, $00
27d94     D8 00 CB 00 
27d98     C0 00 B5 00 
27d9c     AB 00 A1 00 
27da0     98 00 90 00 |                  word  216 , 203 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114
27da4     88 00 80 00 
27da8     79 00 72 00 | 	byte	$88, $00, $80, $00, $79, $00, $72, $00
27dac                 | 	alignl
27dac                 | _audio010_spin2_dat_
27dac                 | 
27dac                 | audio       org     0
27dac                 | 
27dac     0E 6C 07 FC |             wrpin   dac,#left       ' Noise dither DACs at clk/90
27db0     0E B4 1C FC |             wxpin   #90,#left
27db4                 | 
27db4     0F 6C 07 FC |             wrpin   dac,#right
27db8     0F B4 1C FC |             wxpin   #90,#right
27dbc                 | 
27dbc     41 9C 64 FD |             dirh    #left addpins 1
27dc0                 | 
27dc0     20 9C 64 FD |             setse1  #%001<<6 + left ' Set the event - DAC empty
27dc4     2B E9 07 F6 |             mov     ijmp1,#isr1     ' Init the interrupt
27dc8     25 08 64 FD |             setint1 #4              ' Interrupt from DAC empty event
27dcc                 |             
27dcc                 | '---------------------------------------------------------------------------------        
27dcc                 | '----------------- The main loop -------------------------------------------------
27dcc                 | '---------------------------------------------------------------------------------
27dcc                 | 
27dcc     28 10 64 FD | loop        setq    #8              ' Read channel regs from the hub
27dd0     61 9F 06 FB |             rdlong  sstart1,ptra++
27dd4     28 10 64 FD |             setq    #8              ' Cannot do one big setq+rdlong as it interferes with interrupts
27dd8     61 B1 06 FB |             rdlong  sstart2,ptra++
27ddc     28 10 64 FD |             setq    #8
27de0     61 C3 06 FB |             rdlong  sstart3,ptra++
27de4     28 10 64 FD |             setq    #8
27de8     61 D5 06 FB |             rdlong  sstart4,ptra++
27dec     28 10 64 FD |             setq    #8
27df0     61 E7 06 FB |             rdlong  sstart5,ptra++
27df4     28 10 64 FD |             setq    #8
27df8     61 F9 06 FB |             rdlong  sstart6,ptra++
27dfc     28 10 64 FD |             setq    #8
27e00     61 0B 07 FB |             rdlong  sstart7,ptra++
27e04     28 10 64 FD |             setq    #8
27e08     61 1D 07 FB |             rdlong  sstart8,ptra++
27e0c                 | 
27e0c     20 F1 87 F1 |             sub     ptra,#9*4*8    
27e10                 |             
27e10     3B 31 13 F2 |             cmp     time1,a1FFFFFFF wc   ' Main counter overflow workaround
27e14     3B 33 13 32 |      if_nc  cmp     time2,a1FFFFFFF wc   ' before the time is written to the buffer, it is ANDed with $1FFFFFFF  
27e18     3B 35 13 32 |      if_nc  cmp     time3,a1FFFFFFF wc   ' Also, the interrupt procedure ands the counter  
27e1c     3B 37 13 32 |      if_nc  cmp     time4,a1FFFFFFF wc   ' So, if the counter is >=$20000000, the compare sequence still works  
27e20     3B 39 13 32 |      if_nc  cmp     time5,a1FFFFFFF wc   ' and when all counters are >=$20000000, all of them are SUBed at the same time 
27e24     3B 3B 13 32 |      if_nc  cmp     time6,a1FFFFFFF wc   ' including time0 main counter  
27e28     3B 3D 13 32 |      if_nc  cmp     time7,a1FFFFFFF wc     
27e2c     3B 3F 13 32 |      if_nc  cmp     time8,a1FFFFFFF wc   ' was 7FFFFFFF - reduced to make debugging easier 
27e30     3C 31 83 31 |      if_nc  sub     time1,a20000000
27e34     3C 33 83 31 |      if_nc  sub     time2,a20000000
27e38     3C 35 83 31 |      if_nc  sub     time3,a20000000
27e3c     3C 37 83 31 |      if_nc  sub     time4,a20000000
27e40     3C 39 83 31 |      if_nc  sub     time5,a20000000
27e44     3C 3B 83 31 |      if_nc  sub     time6,a20000000
27e48     3C 3D 83 31 |      if_nc  sub     time7,a20000000
27e4c     3C 3F 83 31 |      if_nc  sub     time8,a20000000
27e50     3C 2F 83 31 |      if_nc  sub     time0,a20000000
27e54                 | 
27e54                 |        
27e54                 |     
27e54     00 AE 0E F2 |             cmp     acmd1,#0 wz     ' if cmd=0, zero the phase accumulator
27e58     00 7A 06 A6 |     if_e    mov     p1,#0
27e5c     00 C0 0E F2 |             cmp     acmd2,#0 wz
27e60     00 7C 06 A6 |     if_e    mov     p2,#0
27e64     00 D2 0E F2 |             cmp     acmd3,#0 wz
27e68     00 7E 06 A6 |     if_e    mov     p3,#0
27e6c     00 E4 0E F2 |             cmp     acmd4,#0 wz
27e70     00 80 06 A6 |     if_e    mov     p4,#0
27e74     00 F6 0E F2 |             cmp     acmd5,#0 wz
27e78     00 82 06 A6 |     if_e    mov     p5,#0
27e7c     00 08 0F F2 |             cmp     acmd6,#0 wz
27e80     00 84 06 A6 |     if_e    mov     p6,#0
27e84     00 1A 0F F2 |             cmp     acmd7,#0 wz
27e88     00 86 06 A6 |     if_e    mov     p7,#0
27e8c     00 2C 0F F2 |             cmp     acmd8,#0 wz
27e90     00 88 06 A6 |     if_e    mov     p8,#0
27e94                 |           
27e94     48 8B 02 F6 |             mov     qq,tail         ' Check if the buffer is full	
27e98     02 8A 86 F1 |             sub     qq,#2
27e9c     FF 8B 06 F5 |             and     qq,#511
27ea0     47 8B 1A F2 |             cmp     qq,front wcz
27ea4     24 FF 9F AD |     if_e    jmp     #loop           ' If the buffer is full, do nothing               
27ea8                 |       
27ea8     50 42 07 F6 |             mov     cn,#p201           ' Find the channel to compute
27eac     98 45 03 F6 |             mov     ct,time1        ' with the lowest next sample time
27eb0     99 45 3B F3 |             fle     ct,time2 wcz   
27eb4     67 42 07 C6 |     if_c    mov     cn,#p202 
27eb8     9A 45 3B F3 |             fle     ct,time3 wcz
27ebc     7E 42 07 C6 |     if_c    mov     cn,#p203     
27ec0     9B 45 3B F3 |             fle     ct,time4 wcz
27ec4     95 42 07 C6 |     if_c    mov     cn,#p204
27ec8     9C 45 3B F3 |             fle     ct,time5 wcz
27ecc     AC 42 07 C6 |     if_c    mov     cn,#p205 
27ed0     9D 45 3B F3 |             fle     ct,time6 wcz
27ed4     C3 42 07 C6 |     if_c    mov     cn,#p206
27ed8     9E 45 3B F3 |             fle     ct,time7 wcz
27edc     DA 42 07 C6 |     if_c    mov     cn,#p207
27ee0     9F 45 3B F3 |             fle     ct,time8 wcz
27ee4     F1 42 07 C6 |     if_c    mov     cn,#p208 
27ee8                 |  
27ee8     2C 42 63 FD |             jmp     cn
27eec                 |    
27eec                 | '----------------------------------------------------------------------------------
27eec                 | '------------- Compute channel samples --------------------------------------------
27eec                 | '----------------------------------------------------------------------------------
27eec                 | 	
27eec                 | ' ------------  Channel 1
27eec                 |  
27eec     98 47 03 F6 | p201        mov     dt0,time1      ' compute the delta to add to the global time
27ef0     97 47 83 F1 |             sub     dt0,time0
27ef4     55 31 03 F1 |             add     time1,freq1    ' compute the next channel time	
27ef8                 | 	        
27ef8     56 7B 02 F1 |             add     p1,askip1      ' update the phase accumulator
27efc     52 7B 1A F2 |             cmp     p1,lend1 wcz   ' substract the loop length if over the loop end
27f00     52 7B 82 31 |     if_ge   sub     p1,lend1	        
27f04     51 7B 02 31 |     if_ge   add     p1,lstart1       
27f08     3D 8B 02 F6 |             mov     qq,p1          ' compute the pointer to the next sample
27f0c     4F 8B 02 F1 |             add     qq,sstart1
27f10                 |             
27f10     00 A0 0E F2 |             cmp     type1,#0 wz    ' check the sample type
27f14     45 8D C2 5A |     if_nz   rdbyte  spl,qq         ' not zero=8 bit
27f18     08 8C 66 50 |     if_nz   shl     spl,#8
27f1c     45 8D E2 AA |     if_z    rdword  spl,qq         ' zero=16 bit. TODO: more types? signed/unsigned, etc... 
27f20                 | 
27f20     53 8D 32 FA |             scas    spl,vol1       ' apply the volume
27f24     00 8C 02 F6 |             mov     spl,0-0
27f28                 | 
27f28     54 8D 32 FA |             scas    spl,apan1      ' apply the pan
27f2c     00 4C 03 F6 |             mov     ls1,0-0
27f30     20 00 00 FF 
27f34     00 8A 06 F6 |             mov     qq,##16384
27f38     54 8B 82 F1 |             sub     qq,apan1
27f3c     45 8D 32 FA |             scas    spl,qq
27f40     00 4E 03 F6 |             mov     rs1,0-0
27f44                 |             
27f44     84 02 90 FD |             jmp     #p101              
27f48                 | 	    	
27f48                 | ' ------------  Channel 2
27f48                 |  
27f48     99 47 03 F6 | p202        mov     dt0,time2
27f4c     97 47 83 F1 |             sub     dt0,time0
27f50     5E 33 03 F1 |             add     time2,freq2  	
27f54                 | 	        
27f54     5F 7D 02 F1 |             add     p2,askip2
27f58     5B 7D 1A F2 |             cmp     p2,lend2 wcz
27f5c     5B 7D 82 31 |     if_ge   sub     p2,lend2	        
27f60     5A 7D 02 31 |     if_ge   add     p2,lstart2       
27f64     3E 8B 02 F6 |             mov     qq,p2
27f68     58 8B 02 F1 |             add     qq,sstart2
27f6c                 | 
27f6c     00 B2 0E F2 |             cmp     type2,#0 wz
27f70     45 8D C2 5A |     if_nz   rdbyte  spl,qq
27f74     08 8C 66 50 |     if_nz   shl     spl,#8
27f78     45 8D E2 AA |     if_z    rdword  spl,qq
27f7c                 | 
27f7c     5C 8D 32 FA |             scas    spl,vol2
27f80     00 8C 02 F6 |             mov     spl,0-0
27f84                 |             
27f84     5D 8D 32 FA |             scas    spl,apan2
27f88     00 50 03 F6 |             mov     ls2,0-0
27f8c     20 00 00 FF 
27f90     00 8A 06 F6 |             mov     qq,##16384
27f94     5D 8B 82 F1 |             sub     qq,apan2
27f98     45 8D 32 FA |             scas    spl,qq
27f9c     00 52 03 F6 |             mov     rs2,0-0
27fa0                 |             
27fa0     28 02 90 FD |             jmp     #p101
27fa4                 | 
27fa4                 | ' ------------  Channel 3
27fa4                 |  
27fa4     9A 47 03 F6 | p203        mov     dt0,time3
27fa8     97 47 83 F1 |             sub     dt0,time0
27fac     67 35 03 F1 |             add     time3,freq3  	
27fb0                 | 	        
27fb0     68 7F 02 F1 |             add     p3,askip3
27fb4     64 7F 1A F2 |             cmp     p3,lend3 wcz
27fb8     64 7F 82 31 |     if_ge   sub     p3,lend3	        
27fbc     63 7F 02 31 |     if_ge   add     p3,lstart3       
27fc0     3F 8B 02 F6 |             mov     qq,p3
27fc4     61 8B 02 F1 |             add     qq,sstart3
27fc8                 |             
27fc8     00 C4 0E F2 |             cmp     type3,#0 wz
27fcc     45 8D C2 5A |     if_nz   rdbyte  spl,qq
27fd0     08 8C 66 50 |     if_nz   shl     spl,#8
27fd4     45 8D E2 AA |     if_z    rdword  spl,qq
27fd8                 | 
27fd8     65 8D 32 FA |             scas    spl,vol3
27fdc     00 8C 02 F6 |             mov     spl,0-0
27fe0                 |     	
27fe0     66 8D 32 FA |             scas    spl,apan3
27fe4     00 54 03 F6 |             mov     ls3,0-0
27fe8                 |             
27fe8     20 00 00 FF 
27fec     00 8A 06 F6 |             mov     qq,##16384
27ff0     66 8B 82 F1 |             sub     qq,apan3
27ff4     45 8D 32 FA |             scas    spl,qq
27ff8     00 56 03 F6 |             mov     rs3,0-0
27ffc                 | 
27ffc     CC 01 90 FD |             jmp     #p101
28000                 |             
28000                 | ' ------------  Channel 4
28000                 |  
28000     9B 47 03 F6 | p204        mov     dt0,time4
28004     97 47 83 F1 |             sub     dt0,time0
28008     70 37 03 F1 |             add     time4,freq4  	
2800c                 | 
2800c                 | 	        
2800c     71 81 02 F1 |             add     p4,askip4
28010     6D 81 1A F2 |             cmp     p4,lend4 wcz
28014     6D 81 82 31 |     if_ge   sub     p4,lend4	        
28018     6C 81 02 31 |     if_ge   add     p4,lstart4       
2801c     40 8B 02 F6 |             mov     qq,p4
28020     6A 8B 02 F1 |             add     qq,sstart4
28024                 |             
28024     00 D6 0E F2 |             cmp     type4,#0 wz
28028     45 8D C2 5A |     if_nz   rdbyte  spl,qq
2802c     08 8C 66 50 |     if_nz   shl     spl,#8
28030     45 8D E2 AA |     if_z    rdword  spl,qq
28034                 | 
28034     6E 8D 32 FA |             scas    spl,vol4
28038     00 8C 02 F6 |             mov     spl,0-0
2803c                 |     	
2803c     6F 8D 32 FA |             scas    spl,apan4
28040     00 5A 03 F6 |             mov     ls4,0-0
28044                 |             
28044     20 00 00 FF 
28048     00 8A 06 F6 |             mov     qq,##16384
2804c     6F 8B 82 F1 |             sub     qq,apan4
28050     45 8D 32 FA |             scas    spl,qq
28054     00 58 03 F6 |             mov     rs4,0-0
28058                 | 
28058     70 01 90 FD |             jmp     #p101
2805c                 |             
2805c                 | ' ------------  Channel 5
2805c                 |  
2805c     9C 47 03 F6 | p205        mov     dt0,time5
28060     97 47 83 F1 |             sub     dt0,time0
28064     79 39 03 F1 |             add     time5,freq5  	
28068                 | 
28068                 | 	        
28068     7A 83 02 F1 |             add     p5,askip5
2806c     76 83 1A F2 |             cmp     p5,lend5 wcz
28070     76 83 82 31 |     if_ge   sub     p5,lend5	        
28074     75 83 02 31 |     if_ge   add     p5,lstart5       
28078     41 8B 02 F6 |             mov     qq,p5
2807c     73 8B 02 F1 |             add     qq,sstart5
28080                 |             
28080     00 E8 0E F2 |             cmp     type5,#0 wz
28084     45 8D C2 5A |     if_nz   rdbyte  spl,qq
28088     08 8C 66 50 |     if_nz   shl     spl,#8
2808c     45 8D E2 AA |     if_z    rdword  spl,qq
28090                 | 
28090     77 8D 32 FA |             scas    spl,vol5
28094     00 8C 02 F6 |             mov     spl,0-0
28098                 |     	
28098     78 8D 32 FA |             scas    spl,apan5
2809c     00 5E 03 F6 |             mov     ls5,0-0
280a0                 |             
280a0     20 00 00 FF 
280a4     00 8A 06 F6 |             mov     qq,##16384
280a8     78 8B 82 F1 |             sub     qq,apan5
280ac     45 8D 32 FA |             scas    spl,qq
280b0     00 5C 03 F6 |             mov     rs5,0-0
280b4                 | 
280b4     14 01 90 FD |             jmp     #p101
280b8                 |   
280b8                 | ' ------------  Channel 6
280b8                 |  
280b8     9D 47 03 F6 | p206        mov     dt0,time6
280bc     97 47 83 F1 |             sub     dt0,time0
280c0     82 3B 03 F1 |             add     time6,freq6  	
280c4                 | 
280c4                 | 	        
280c4     83 85 02 F1 |             add     p6,askip6
280c8     7F 85 1A F2 |             cmp     p6,lend6 wcz
280cc     7F 85 82 31 |     if_ge   sub     p6,lend6	        
280d0     7E 85 02 31 |     if_ge   add     p6,lstart6       
280d4     42 8B 02 F6 |             mov     qq,p6
280d8     7C 8B 02 F1 |             add     qq,sstart6
280dc                 |             
280dc     00 FA 0E F2 |             cmp     type6,#0 wz
280e0     45 8D C2 5A |     if_nz   rdbyte  spl,qq
280e4     08 8C 66 50 |     if_nz   shl     spl,#8
280e8     45 8D E2 AA |     if_z    rdword  spl,qq
280ec                 | 
280ec     80 8D 32 FA |             scas    spl,vol6
280f0     00 8C 02 F6 |             mov     spl,0-0
280f4                 |     	
280f4     81 8D 32 FA |             scas    spl,apan6
280f8     00 62 03 F6 |             mov     ls6,0-0
280fc                 |             
280fc     20 00 00 FF 
28100     00 8A 06 F6 |             mov     qq,##16384
28104     81 8B 82 F1 |             sub     qq,apan6
28108     45 8D 32 FA |             scas    spl,qq
2810c     00 60 03 F6 |             mov     rs6,0-0
28110                 | 
28110     B8 00 90 FD |             jmp     #p101
28114                 |             
28114                 | ' ------------  Channel 7
28114                 |  
28114     9E 47 03 F6 | p207        mov     dt0,time7
28118     97 47 83 F1 |             sub     dt0,time0
2811c     8B 3D 03 F1 |             add     time7,freq7  	
28120                 | 
28120                 | 	        
28120     8C 87 02 F1 |             add     p7,askip7
28124     88 87 1A F2 |             cmp     p7,lend7 wcz
28128     88 87 82 31 |     if_ge   sub     p7,lend7	        
2812c     87 87 02 31 |     if_ge   add     p7,lstart7       
28130     43 8B 02 F6 |             mov     qq,p7
28134     85 8B 02 F1 |             add     qq,sstart7
28138                 |             
28138     00 0C 0F F2 |             cmp     type7,#0 wz
2813c     45 8D C2 5A |     if_nz   rdbyte  spl,qq
28140     08 8C 66 50 |     if_nz   shl     spl,#8
28144     45 8D E2 AA |     if_z    rdword  spl,qq
28148                 | 
28148     89 8D 32 FA |             scas    spl,vol7
2814c     00 8C 02 F6 |             mov     spl,0-0
28150                 |     	
28150     8A 8D 32 FA |             scas    spl,apan7
28154     00 66 03 F6 |             mov     ls7,0-0
28158                 |             
28158     20 00 00 FF 
2815c     00 8A 06 F6 |             mov     qq,##16384
28160     8A 8B 82 F1 |             sub     qq,apan7
28164     45 8D 32 FA |             scas    spl,qq
28168     00 64 03 F6 |             mov     rs7,0-0
2816c                 | 
2816c     5C 00 90 FD |             jmp     #p101     
28170                 |                    
28170                 | ' ------------  Channel 8
28170                 |  
28170     9F 47 03 F6 | p208        mov     dt0,time8
28174     97 47 83 F1 |             sub     dt0,time0
28178     94 3F 03 F1 |             add     time8,freq8  	
2817c                 | 
2817c                 | 	        
2817c     95 89 02 F1 |             add     p8,askip8
28180     91 89 1A F2 |             cmp     p8,lend8 wcz
28184     91 89 82 31 |     if_ge   sub     p8,lend8	        
28188     90 89 02 31 |     if_ge   add     p8,lstart8       
2818c     44 8B 02 F6 |             mov     qq,p8
28190     8E 8B 02 F1 |             add     qq,sstart8
28194                 |             
28194     00 1E 0F F2 |             cmp     type8,#0 wz
28198     45 8D C2 5A |     if_nz   rdbyte  spl,qq
2819c     08 8C 66 50 |     if_nz   shl     spl,#8
281a0     45 8D E2 AA |     if_z    rdword  spl,qq
281a4                 | 
281a4     92 8D 32 FA |             scas    spl,vol8
281a8     00 8C 02 F6 |             mov     spl,0-0
281ac                 |     	
281ac     93 8D 32 FA |             scas    spl,apan8
281b0     00 6A 03 F6 |             mov     ls8,0-0
281b4                 |             
281b4     20 00 00 FF 
281b8     00 8A 06 F6 |             mov     qq,##16384
281bc     93 8B 82 F1 |             sub     qq,apan8
281c0     45 8D 32 FA |             scas    spl,qq
281c4     00 68 03 F6 |             mov     rs8,0-0
281c8                 | 
281c8     00 00 90 FD |             jmp     #p101            
281cc                 |             
281cc                 | '------------------------ Channels end here --------------------       
281cc                 | 
281cc                 | ' Now add all channels and put the sample to the buffer    
281cc                 | 
281cc                 | 
281cc     97 41 0B F2 | p101        cmp     oldt0,time0 wz   ' There must not be 2 entries with the same time
281d0     02 8E 86 A1 |     if_z    sub     front,#2         ' 
281d4     FF 8F 06 A5 |     if_z    and     front,#511     
281d8                 |   
281d8     00 4A 07 F6 |             mov     rs,#0            ' Mix all channels to rs and ls
281dc     00 48 07 F6 |             mov     ls,#0
281e0     A7 4B 03 F1 |             add     rs,rs1
281e4     A9 4B 03 F1 |             add     rs,rs2
281e8     AB 4B 03 F1 |             add     rs,rs3
281ec     AC 4B 03 F1 |             add     rs,rs4
281f0     AE 4B 03 F1 |             add     rs,rs5
281f4     B0 4B 03 F1 |             add     rs,rs6
281f8     B2 4B 03 F1 |             add     rs,rs7
281fc     B4 4B 03 F1 |             add     rs,rs8
28200                 |             
28200     A6 49 03 F1 |             add     ls,ls1
28204     A8 49 03 F1 |             add     ls,ls2
28208     AA 49 03 F1 |             add     ls,ls3
2820c     AD 49 03 F1 |             add     ls,ls4
28210     AF 49 03 F1 |             add     ls,ls5
28214     B1 49 03 F1 |             add     ls,ls6
28218     B3 49 03 F1 |             add     ls,ls7
2821c     B5 49 03 F1 |             add     ls,ls8
28220                 |  		
28220     0F 48 E7 F4 |             bitnot  ls,#15            ' convert to unsigned. TODO: compute and apply the gain for samples to not exceed 16 bit range
28224     0F 4A E7 F4 |             bitnot  rs,#15		
28228                 | 		
28228     A4 4B 2B F9 |             setword rs,ls,#1         ' Pack L and R to one long    		
2822c     47 4B 33 FC |             wrlut   rs,front         ' and write it to LUT
28230     01 8E 06 F1 |             add     front,#1         ' Write the sample time
28234     97 8B 02 F6 |             mov     qq,time0
28238     3B 8B 02 F5 |             and     qq,a1fffffff
2823c     47 8B 32 FC |             wrlut   qq,front
28240     80 8A 66 FC |             wrlong  qq,#$80
28244                 | 
28244     01 8E 06 F1 |             add     front,#1         ' move the front pointer
28248     FF 8F 06 F5 |             and     front,#511       ' and loop at #512
2824c     97 41 03 F6 |             mov     oldt0,time0      ' update global time
28250     A3 2F 03 F1 |             add     time0,dt0        
28254     74 FB 9F FD |             jmp     #loop            'loop
28258                 | 
28258                 | '-------------------------------------------------------------------------
28258                 | '------------------ This is the end of the main loop ---------------------
28258                 | '-------------------------------------------------------------------------
28258                 | 
28258                 | '--------------------------------------------------------------------------
28258                 | '------ Interrupt service -------------------------------------------------
28258                 | '------ Output the sample, get the next one if exists ---------------------
28258                 | '--------------------------------------------------------------------------
28258                 | 
28258     0E 94 26 FC | isr1        wypin   lsample,#left        '2     The sample has to be outputted every 90 cycles     
2825c     0F 96 26 FC |             wypin   rsample,#right       '4
28260                 | 										
28260     01 92 06 F1 |             add     counter,#1           '6     Increment the counter
28264     3B 93 02 F5 |             and     counter,a1fffffff
28268     4E 93 1A F2 |             cmp     counter,irqtime wcz  '8     Check if it is time for the next sample
2826c     F5 FF 3B 5B |     if_ne   reti1                        '10/12 If not, do nothing
28270                 | 		
28270     4C 97 3A F9 |           	getword rsample,lsnext,#1    '12
28274     4C 95 32 F9 |           	getword lsample,lsnext,#0    '14
28278     47 91 1A F2 |             cmp     tail,front wcz       '16    If the buffer is empty, do nothing 
2827c     F5 FF 3B AB |             if_e    reti1                '18/20
28280                 | 
28280     48 99 A2 FA |             rdlut   lsnext,tail          '21    else read the sample and its time from LUT
28284     01 90 06 F1 |             add     tail, #1             '23
28288     48 9D A2 FA |             rdlut   irqtime,tail         '26    Read the time for this sample
2828c     01 90 06 F1 |             add     tail,#1              '28    Go to the next entry
28290     FF 91 06 F5 |             and     tail,#511            '30
28294     F5 FF 3B FB |             reti1                        '34 
28298                 |             
28298                 |          '' 3 nops left    
28298                 |           
28298                 | '---------------------------------------------------------------------------
28298                 | '-------- End of interrupt -------------------------------------------------
28298                 | '---------------------------------------------------------------------------    
28298                 | 
28298                 | '---------------------------------------------------------------------------
28298                 | '------- Variables ---------------------------------------------------------
28298                 | '---------------------------------------------------------------------------
28298                 | 
28298                 | ' constants
28298                 | 
28298     FF FF FF 1F | a1fffffff long $1fffffff
2829c     00 00 00 20 | a20000000 long $20000000
282a0                 | 
282a0                 | ' phase accumulators
282a0                 | 
282a0     00 00 00 00 | p1          long 0
282a4     00 00 00 00 | p2          long 0
282a8     00 00 00 00 | p3          long 0
282ac     00 00 00 00 | p4          long 0
282b0     00 00 00 00 | p5          long 0
282b4     00 00 00 00 | p6          long 0
282b8     00 00 00 00 | p7          long 0
282bc     00 00 00 00 | p8          long 0
282c0                 | 
282c0                 | ' temporary variables 
282c0                 | 
282c0     00 00 00 00 | qq          long 0
282c4     00 00 00 00 | spl         long 0
282c8                 | 
282c8                 | ' circular buffer in LUT
282c8                 | 
282c8     00 00 00 00 | front       long 0
282cc     00 00 00 00 | tail        long 0
282d0                 | 
282d0                 | ' Interrupt ISR variables
282d0                 | 
282d0     00 F8 FF FF | counter     long $FFFFF800 ' this counter will overflow after 1210 seconds
282d4     00 00 00 00 | lsample     long 0
282d8     00 00 00 00 | rsample     long 0
282dc     00 00 00 00 | lsnext      long 0
282e0     00 00 00 00 | rsnext      long 0 
282e4     00 00 00 00 | irqtime     long 0
282e8                 | 
282e8                 | ' Channel 1 registers. TODO - optimize the memory usage
282e8                 | 
282e8     00 00 00 00 | sstart1     long 0       ' Sample start pointer
282ec     00 00 00 00 | type1       long 0       ' type 0 16 bit, 1 8 bit
282f0     00 00 00 00 | lstart1     long 0       ' Loop start
282f4     02 00 00 00 | lend1       long 2       ' Loop end
282f8     00 00 00 00 | vol1        long 0       ' volume, 0..16384
282fc     00 00 00 00 | apan1       long 0       ' pan, 0..16384
28300     65 00 00 00 | freq1       long 101     ' frequency divider
28304     02 00 00 00 | askip1      long 2       ' skip between samples, 1 for 8 bit, 2 for 16 bit (or more for special effects)
28308     00 00 00 00 | acmd1       long 0       ' command, 0 = reset the phase accumulator
2830c                 | 
2830c                 | ' Channel 2 registers
2830c                 | 
2830c     00 00 00 00 | sstart2     long 0
28310     00 00 00 00 | type2       long 0
28314     00 00 00 00 | lstart2     long 0
28318     02 00 00 00 | lend2       long 2        		
2831c     00 00 00 00 | vol2        long 0
28320     00 00 00 00 | apan2       long 0
28324     67 00 00 00 | freq2       long 103
28328     02 00 00 00 | askip2      long 2
2832c     00 00 00 00 | acmd2       long 0
28330                 | 
28330                 | ' Channel 3 registers
28330                 | 
28330     00 00 00 00 | sstart3     long 0
28334     00 00 00 00 | type3       long 0
28338     00 00 00 00 | lstart3     long 0
2833c     02 00 00 00 | lend3       long 2       		'
28340     00 00 00 00 | vol3        long 0
28344     00 00 00 00 | apan3       long 0
28348     6B 00 00 00 | freq3       long 107 '109 113 127 131 137 ...
2834c     02 00 00 00 | askip3      long 2
28350     00 00 00 00 | acmd3       long 0
28354                 | 
28354                 | ' Channel 4 registers
28354                 | 
28354     00 00 00 00 | sstart4     long 0
28358     00 00 00 00 | type4       long 0
2835c     00 00 00 00 | lstart4     long 0
28360     02 00 00 00 | lend4       long 2       		'
28364     00 00 00 00 | vol4        long 0
28368     00 00 00 00 | apan4       long 0
2836c     6D 00 00 00 | freq4       long 109 '109 113 127 131 137 ...
28370     02 00 00 00 | askip4      long 2
28374     00 00 00 00 | acmd4       long 0
28378                 | 
28378                 | ' Channel 5 registers
28378                 | 
28378     00 00 00 00 | sstart5     long 0
2837c     00 00 00 00 | type5       long 0
28380     00 00 00 00 | lstart5     long 0
28384     02 00 00 00 | lend5       long 2       		'
28388     00 00 00 00 | vol5        long 0
2838c     00 00 00 00 | apan5       long 0
28390     71 00 00 00 | freq5       long 113 '109 113 127 131 137 ...
28394     02 00 00 00 | askip5      long 2
28398     00 00 00 00 | acmd5       long 0
2839c                 | 
2839c                 | ' Channel 6 registers
2839c                 | 
2839c     00 00 00 00 | sstart6     long 0
283a0     00 00 00 00 | type6       long 0
283a4     00 00 00 00 | lstart6     long 0
283a8     02 00 00 00 | lend6       long 2       		'
283ac     00 00 00 00 | vol6        long 0
283b0     00 00 00 00 | apan6       long 0
283b4     7F 00 00 00 | freq6       long 127 '109 113 127 131 137 ...
283b8     02 00 00 00 | askip6      long 2
283bc     00 00 00 00 | acmd6       long 0
283c0                 | 
283c0                 | ' Channel 7 registers
283c0                 | 
283c0     00 00 00 00 | sstart7     long 0
283c4     00 00 00 00 | type7       long 0
283c8     00 00 00 00 | lstart7     long 0
283cc     02 00 00 00 | lend7       long 2       		'
283d0     00 00 00 00 | vol7        long 0
283d4     00 00 00 00 | apan7       long 0
283d8     83 00 00 00 | freq7       long 131 '109 113 127 131 137 ...
283dc     02 00 00 00 | askip7      long 2
283e0     00 00 00 00 | acmd7       long 0
283e4                 | 
283e4                 | ' Channel 8 registers
283e4                 | 
283e4     00 00 00 00 | sstart8     long 0
283e8     00 00 00 00 | type8       long 0
283ec     00 00 00 00 | lstart8     long 0
283f0     02 00 00 00 | lend8       long 2       		'
283f4     00 00 00 00 | vol8        long 0
283f8     00 00 00 00 | apan8       long 0
283fc     83 00 00 00 | freq8       long 131 '109 113 127 131 137 ...
28400     02 00 00 00 | askip8      long 2
28404     00 00 00 00 | acmd8       long 0
28408                 | 
28408                 | ' Time variables
28408                 | 
28408     00 00 00 00 | time0       long 0    ' Global sample computing time
2840c     01 00 00 00 | time1       long 1    ' Local channels time
28410     02 00 00 00 | time2       long 2
28414     03 00 00 00 | time3       long 3
28418     04 00 00 00 | time4       long 4
2841c     05 00 00 00 | time5       long 5
28420     06 00 00 00 | time6       long 6
28424     07 00 00 00 | time7       long 7
28428     08 00 00 00 | time8       long 8
2842c                 | 
2842c     00 00 00 00 | oldt0       long 0    'Temporary time variables
28430     00 00 00 00 | cn          long 0
28434     00 00 00 00 | ct          long 0
28438     00 00 00 00 | dt0         long 0
2843c                 | 
2843c                 | ' Samples
2843c                 | 
2843c     00 00 00 00 | ls          long 0    ' Global sample variable
28440     00 00 00 00 | rs          long 0
28444                 | 
28444     00 00 00 00 | ls1         long 0    ' Channel samples
28448     00 00 00 00 | rs1         long 0
2844c     00 00 00 00 | ls2         long 0
28450     00 00 00 00 | rs2         long 0
28454     00 00 00 00 | ls3         long 0
28458     00 00 00 00 | rs3         long 0
2845c     00 00 00 00 | rs4         long 0
28460     00 00 00 00 | ls4         long 0
28464     00 00 00 00 | rs5         long 0
28468     00 00 00 00 | ls5         long 0
2846c     00 00 00 00 | rs6         long 0
28470     00 00 00 00 | ls6         long 0
28474     00 00 00 00 | rs7         long 0
28478     00 00 00 00 | ls7         long 0
2847c     00 00 00 00 | rs8         long 0
28480     00 00 00 00 | ls8         long 0
28484                 | 
28484     44 00 17 00 | dac         long %10111_00000000_01_00010_0     'random dither, as 90 cycles period needed
28488                 | 
28488     00 00 00 00 
2848c     00 00 00 00 | null  			long 	0,0           ' for channel reset
28490                 | 	alignl
28490                 | __system__dat_
28490     00 00 00 00 
28494     00 00 00 00 | 	byte	$00[8]
28498     03 00 00 00 
2849c     00 00 00 00 
284a0     00 00 00 00 
284a4     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
284a8     00 00 00 00 
284ac     00 00 00 00 
284b0     00 00 00 00 | 	byte	$00[12]
284b4     05 00 00 00 
284b8     00 00 00 00 
284bc     00 00 00 00 
284c0     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
284c4     8C 86 02 00 | 	long	@@@__system__dat_ + 508
284c8     94 86 02 00 | 	long	@@@__system__dat_ + 516
284cc     00 00 00 00 | 	byte	$00, $00, $00, $00
284d0     9C 86 02 00 | 	long	@@@__system__dat_ + 524
284d4     A4 86 02 00 | 	long	@@@__system__dat_ + 532
284d8     00 00 00 00 
284dc     00 00 00 00 | 	byte	$00[8]
284e0     01 00 00 00 
284e4     06 00 00 00 
284e8     00 00 00 00 
284ec     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
284f0     00 00 00 00 | 	byte	$00, $00, $00, $00
284f4     AC 86 02 00 | 	long	@@@__system__dat_ + 540
284f8     B4 86 02 00 | 	long	@@@__system__dat_ + 548
284fc     00 00 00 00 | 	byte	$00, $00, $00, $00
28500     BC 86 02 00 | 	long	@@@__system__dat_ + 556
28504     C4 86 02 00 | 	long	@@@__system__dat_ + 564
28508     00 00 00 00 
2850c     00 00 00 00 | 	byte	$00[8]
28510     01 00 00 00 
28514     06 00 00 00 
28518     00 00 00 00 
2851c     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
28520     00 00 00 00 | 	byte	$00, $00, $00, $00
28524     CC 86 02 00 | 	long	@@@__system__dat_ + 572
28528     D4 86 02 00 | 	long	@@@__system__dat_ + 580
2852c     00 00 00 00 | 	byte	$00, $00, $00, $00
28530     DC 86 02 00 | 	long	@@@__system__dat_ + 588
28534     E4 86 02 00 | 	long	@@@__system__dat_ + 596
28538     00 00 00 00 
      ...             
28688     00 00 00 00 
2868c     00 00 00 00 | 	byte	$00[344]
28690     4C 57 00 00 | 	long	@@@__system___tx
28694     00 00 00 00 | 	byte	$00, $00, $00, $00
28698     94 57 00 00 | 	long	@@@__system___rx
2869c     00 00 00 00 | 	byte	$00, $00, $00, $00
286a0     50 70 00 00 | 	long	@@@__system___rxtxioctl_0174
286a4     00 00 00 00 | 	byte	$00, $00, $00, $00
286a8     C8 70 00 00 | 	long	@@@__system____dummy_flush_0175
286ac     00 00 00 00 | 	byte	$00, $00, $00, $00
286b0     4C 57 00 00 | 	long	@@@__system___tx
286b4     00 00 00 00 | 	byte	$00, $00, $00, $00
286b8     94 57 00 00 | 	long	@@@__system___rx
286bc     00 00 00 00 | 	byte	$00, $00, $00, $00
286c0     50 70 00 00 | 	long	@@@__system___rxtxioctl_0174
286c4     00 00 00 00 | 	byte	$00, $00, $00, $00
286c8     C8 70 00 00 | 	long	@@@__system____dummy_flush_0175
286cc     00 00 00 00 | 	byte	$00, $00, $00, $00
286d0     4C 57 00 00 | 	long	@@@__system___tx
286d4     00 00 00 00 | 	byte	$00, $00, $00, $00
286d8     94 57 00 00 | 	long	@@@__system___rx
286dc     00 00 00 00 | 	byte	$00, $00, $00, $00
286e0     50 70 00 00 | 	long	@@@__system___rxtxioctl_0174
286e4     00 00 00 00 | 	byte	$00, $00, $00, $00
286e8     C8 70 00 00 | 	long	@@@__system____dummy_flush_0175
286ec     00 00 00 00 | 	byte	$00, $00, $00, $00
286f0                 | __heap_base
286f0     00 00 00 00 
      ...             
296f0     00 00 00 00 
296f4     00 00 00 00 | 	long	0[1026]
296f8                 | objmem
296f8     00 00 00 00 | 	long	0[1]
296fc 118             | 	org	COG_BSS_START
296fc 118             | _var01
296fc 118             | 	res	1
296fc 119             | _var02
296fc 119             | 	res	1
296fc 11a             | _var03
296fc 11a             | 	res	1
296fc 11b             | _var04
296fc 11b             | 	res	1
296fc 11c             | _var05
296fc 11c             | 	res	1
296fc 11d             | _var06
296fc 11d             | 	res	1
296fc 11e             | _var07
296fc 11e             | 	res	1
296fc 11f             | _var08
296fc 11f             | 	res	1
296fc 120             | _var09
296fc 120             | 	res	1
296fc 121             | _var10
296fc 121             | 	res	1
296fc 122             | _var11
296fc 122             | 	res	1
296fc 123             | _var12
296fc 123             | 	res	1
296fc 124             | _var13
296fc 124             | 	res	1
296fc 125             | _var14
296fc 125             | 	res	1
296fc 126             | _var15
296fc 126             | 	res	1
296fc 127             | _var16
296fc 127             | 	res	1
296fc 128             | _var17
296fc 128             | 	res	1
296fc 129             | _var18
296fc 129             | 	res	1
296fc 12a             | _var19
296fc 12a             | 	res	1
296fc 12b             | _var20
296fc 12b             | 	res	1
296fc 12c             | _var21
296fc 12c             | 	res	1
296fc 12d             | _var22
296fc 12d             | 	res	1
296fc 12e             | arg01
296fc 12e             | 	res	1
296fc 12f             | arg02
296fc 12f             | 	res	1
296fc 130             | arg03
296fc 130             | 	res	1
296fc 131             | arg04
296fc 131             | 	res	1
296fc 132             | arg05
296fc 132             | 	res	1
296fc 133             | arg06
296fc 133             | 	res	1
296fc 134             | arg07
296fc 134             | 	res	1
296fc 135             | local01
296fc 135             | 	res	1
296fc 136             | local02
296fc 136             | 	res	1
296fc 137             | local03
296fc 137             | 	res	1
296fc 138             | local04
296fc 138             | 	res	1
296fc 139             | local05
296fc 139             | 	res	1
296fc 13a             | local06
296fc 13a             | 	res	1
296fc 13b             | local07
296fc 13b             | 	res	1
296fc 13c             | local08
296fc 13c             | 	res	1
296fc 13d             | local09
296fc 13d             | 	res	1
296fc 13e             | local10
296fc 13e             | 	res	1
296fc 13f             | local11
296fc 13f             | 	res	1
296fc 140             | local12
296fc 140             | 	res	1
296fc 141             | local13
296fc 141             | 	res	1
296fc 142             | local14
296fc 142             | 	res	1
296fc 143             | local15
296fc 143             | 	res	1
296fc 144             | local16
296fc 144             | 	res	1
296fc 145             | local17
296fc 145             | 	res	1
296fc 146             | local18
296fc 146             | 	res	1
296fc 147             | local19
296fc 147             | 	res	1
296fc 148             | local20
296fc 148             | 	res	1
296fc 149             | local21
296fc 149             | 	res	1
296fc 14a             | local22
296fc 14a             | 	res	1
296fc 14b             | local23
296fc 14b             | 	res	1
296fc 14c             | local24
296fc 14c             | 	res	1
296fc 14d             | local25
296fc 14d             | 	res	1
296fc 14e             | local26
296fc 14e             | 	res	1
296fc 14f             | local27
296fc 14f             | 	res	1
296fc 150             | local28
296fc 150             | 	res	1
296fc 151             | local29
296fc 151             | 	res	1
296fc 152             | local30
296fc 152             | 	res	1
296fc 153             | local31
296fc 153             | 	res	1
296fc 154             | local32
296fc 154             | 	res	1
296fc 155             | local33
296fc 155             | 	res	1
296fc 156             | local34
296fc 156             | 	res	1
296fc 157             | local35
296fc 157             | 	res	1
296fc 158             | local36
296fc 158             | 	res	1
296fc 159             | local37
296fc 159             | 	res	1
296fc 15a             | local38
296fc 15a             | 	res	1
296fc 15b             | local39
296fc 15b             | 	res	1
296fc 15c             | local40
296fc 15c             | 	res	1
296fc 15d             | local41
296fc 15d             | 	res	1
296fc 15e             | local42
296fc 15e             | 	res	1
296fc 15f             | local43
296fc 15f             | 	res	1
296fc 160             | local44
296fc 160             | 	res	1
296fc 161             | local45
296fc 161             | 	res	1
296fc 162             | local46
296fc 162             | 	res	1
296fc 163             | local47
296fc 163             | 	res	1
296fc 164             | local48
296fc 164             | 	res	1
296fc 165             | local49
296fc 165             | 	res	1
296fc 166             | local50
296fc 166             | 	res	1
296fc 167             | local51
296fc 167             | 	res	1
296fc 168             | local52
296fc 168             | 	res	1
296fc 169             | local53
296fc 169             | 	res	1
296fc 16a             | local54
296fc 16a             | 	res	1
296fc 16b             | local55
296fc 16b             | 	res	1
296fc 16c             | local56
296fc 16c             | 	res	1
296fc 16d             | local57
296fc 16d             | 	res	1
296fc 16e             | local58
296fc 16e             | 	res	1
296fc 16f             | local59
296fc 16f             | 	res	1
296fc 170             | local60
296fc 170             | 	res	1
296fc 171             | local61
296fc 171             | 	res	1
296fc 172             | local62
296fc 172             | 	res	1
296fc 173             | local63
296fc 173             | 	res	1
296fc 174             | local64
296fc 174             | 	res	1
296fc 175             | local65
296fc 175             | 	res	1
296fc 176             | local66
296fc 176             | 	res	1
296fc 177             | local67
296fc 177             | 	res	1
296fc 178             | local68
296fc 178             | 	res	1
296fc 179             | local69
296fc 179             | 	res	1
296fc 17a             | local70
296fc 17a             | 	res	1
296fc 17b             | local71
296fc 17b             | 	res	1
296fc 17c             | local72
296fc 17c             | 	res	1
296fc 17d             | local73
296fc 17d             | 	res	1
296fc 17e             | local74
296fc 17e             | 	res	1
296fc 17f             | local75
296fc 17f             | 	res	1
296fc 180             | local76
296fc 180             | 	res	1
296fc 181             | local77
296fc 181             | 	res	1
296fc 182             | local78
296fc 182             | 	res	1
296fc 183             | local79
296fc 183             | 	res	1
296fc 184             | local80
296fc 184             | 	res	1
296fc 185             | muldiva_
296fc 185             | 	res	1
296fc 186             | muldivb_
296fc 186             | 	res	1
296fc 187             | 	fit	480
296fc 187             | 
