00000                 | 
00000                 | #line 1 "D:/programowanie/20211226-P2-retromachine/Propeller/Tracker player/player.p2asm"
00000                 | con
00000                 | 	_clkfreq = 319215686
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 319215798
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $1cb2dfb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 2A 06 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 07 F1 03 F6 | 	mov	ptra, objptr
00410 003 04 00 00 FF 
00414 004 14 F1 07 F1 | 	add	ptra, ##2324
00418 005 14 EC 0F FB | 	rdlong	pa, #20 wz
0041c 006 E4 01 90 5D |  if_ne	jmp	#skip_clock_set_
00420 007 00 00 64 FD | 	hubset	#0
00424 008 96 E5 80 FF 
00428 009 00 F0 67 FD | 	hubset	##30092792
0042c 00a 86 01 80 FF 
00430 00b 1F 80 66 FD | 	waitx	##200000
00434 00c 96 E5 00 FF 
00438 00d FB ED 07 F6 | 	mov	pa, ##30092795
0043c 00e 00 EC 63 FD | 	hubset	pa
00440 00f 18 EC 67 FC | 	wrlong	pa, #24
00444 010 6C 83 89 FF 
00448 011 14 6C 6D FC | 	wrlong	##319215798, #20
0044c 012 B4 01 90 FD | 	jmp	#skip_clock_set_
00450 013 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 8C 08 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 5C 62 FD | 	cogid	arg01
00614 084 03 5C 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 00 0F 06 FB | 	rdlong	objptr, ptra
0061c 086 04 F0 07 F1 | 	add	ptra, #4
00620 087 00 2B 06 FB | 	rdlong	result1, ptra
00624 088 04 F0 07 F1 | 	add	ptra, #4
00628 089 00 5D 06 FB | 	rdlong	arg01, ptra
0062c 08a 04 F0 07 F1 | 	add	ptra, #4
00630 08b 00 5F 06 FB | 	rdlong	arg02, ptra
00634 08c 04 F0 07 F1 | 	add	ptra, #4
00638 08d 00 61 06 FB | 	rdlong	arg03, ptra
0063c 08e 04 F0 07 F1 | 	add	ptra, #4
00640 08f 00 63 06 FB | 	rdlong	arg04, ptra
00644 090 10 F0 87 F1 | 	sub	ptra, #16
00648 091 2D 2A 62 FD | 	call	result1
0064c 092 B8 FF 9F FD | 	jmp	#cogexit
00650 093             | FCACHE_LOAD_
00650 093 2B 3E 61 FD |     pop	fcache_tmpb_
00654 094 F6 3F 01 F1 |     add	fcache_tmpb_, pa
00658 095 2A 3E 61 FD |     push	fcache_tmpb_
0065c 096 F6 3F 81 F1 |     sub	fcache_tmpb_, pa
00660 097 02 EC 47 F0 |     shr	pa, #2
00664 098 00 EC 8F F9 |     altd	pa
00668 099 9E 00 00 F6 |     mov	 0-0, ret_instr_
0066c 09a 01 EC 87 F1 |     sub	pa, #1
00670 09b 28 EC 63 FD |     setq	pa
00674 09c 9F 00 00 FB |     rdlong	$0, fcache_tmpb_
00678 09d 00 00 80 FD |     jmp	#\$0 ' jmp to cache
0067c 09e             | ret_instr_
0067c 09e 2D 00 64 FD |     ret
00680 09f             | fcache_tmpb_
00680 09f 00 00 00 00 |     long 0
00684 0a0             | builtin_bytefill_
00684 0a0 01 60 56 F0 |         shr	arg03, #1 wc
00688 0a1 2E 5F 42 CC |  if_c   wrbyte	arg02, arg01
0068c 0a2 01 5C 06 C1 |  if_c   add	arg01, #1
00690 0a3 00 5E FE F9 |         movbyts	arg02, #0
00694 0a4             | builtin_wordfill_
00694 0a4 01 60 56 F0 |         shr	arg03, #1 wc
00698 0a5 2E 5F 52 CC |  if_c   wrword	arg02, arg01
0069c 0a6 02 5C 06 C1 |  if_c   add	arg01, #2
006a0 0a7 2F 5F 2A F9 |         setword	arg02, arg02, #1
006a4 0a8             | builtin_longfill_
006a4 0a8 2E 01 88 FC |         wrfast	#0,arg01
006a8 0a9 00 60 0E F2 |         cmp	arg03, #0 wz
006ac 0aa 30 03 D8 5C |  if_nz  rep	#1, arg03
006b0 0ab 17 5E 62 5D |  if_nz  wflong	arg02
006b4 0ac 2D 00 64 FD |         ret
006b8 0ad             | COUNT_
006b8 0ad 00 00 00 00 |     long 0
006bc 0ae             | RETADDR_
006bc 0ae 00 00 00 00 |     long 0
006c0 0af             | fp
006c0 0af 00 00 00 00 |     long 0
006c4 0b0             | pushregs_
006c4 0b0 2B EC 63 FD |     pop  pa
006c8 0b1 2B 5C 61 FD |     pop  RETADDR_
006cc 0b2 04 5A 95 FB |     tjz  COUNT_, #pushregs_done_
006d0 0b3 01 5A 85 F1 |     sub  COUNT_, #1
006d4 0b4 28 5A 61 FD |     setq COUNT_
006d8 0b5 00 6B 66 FC |     wrlong local01, ptra
006dc 0b6 01 5A 05 F1 |     add  COUNT_, #1
006e0 0b7             | pushregs_done_
006e0 0b7 02 5A 65 F0 |     shl  COUNT_, #2
006e4 0b8 AD F0 03 F1 |     add  ptra, COUNT_
006e8 0b9 02 5A 45 F0 |     shr  COUNT_, #2
006ec 0ba 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006f0 0bb 00 5B 65 FC |     wrlong COUNT_, ptra
006f4 0bc 0C F0 07 F1 |     add    ptra, #12
006f8 0bd F8 5F 01 F6 |     mov    fp, ptra
006fc 0be 2C EC 63 FD |     jmp  pa
00700 0bf             |  popregs_
00700 0bf 2B EC 63 FD |     pop    pa
00704 0c0 0C F0 87 F1 |     sub    ptra, #12
00708 0c1 28 04 64 FD |     setq   #2
0070c 0c2 00 5B 05 FB |     rdlong COUNT_, ptra
00710 0c3 06 5A 95 FB |     tjz    COUNT_, #popregs__ret
00714 0c4 02 5A 65 F0 |     shl    COUNT_, #2
00718 0c5 AD F0 83 F1 |     sub    ptra, COUNT_
0071c 0c6 02 5A 45 F0 |     shr    COUNT_, #2
00720 0c7 01 5A 85 F1 |     sub    COUNT_, #1
00724 0c8 28 5A 61 FD |     setq   COUNT_
00728 0c9 00 6B 06 FB |     rdlong local01, ptra
0072c 0ca             | popregs__ret
0072c 0ca 2A 5C 61 FD |     push   RETADDR_
00730 0cb 2C EC 63 FD |     jmp    pa
00734 0cc             | 
00734 0cc             | unsdivide_
00734 0cc 28 00 64 FD |        setq    #0
00738 0cd 86 0B 13 FD |        qdiv    muldiva_, muldivb_
0073c 0ce 18 0C 63 FD |        getqx   muldivb_
00740 0cf 19 0A 63 0D |  _ret_ getqy   muldiva_
00744 0d0             | 
00744 0d0             | divide_
00744 0d0 85 0B 53 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
00748 0d1 03 0C 86 F5 |        muxc    itmp2_,#%11                    'store sign of x
0074c 0d2 86 0D 5B F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
00750 0d3 02 0C 66 C5 |  if_c  xor     itmp2_,#%10                    'store sign of y
00754 0d4 2D 00 64 AD |  if_z  ret
00758 0d5 D8 FF BF FD |        call    #unsdivide_
0075c 0d6 01 0C D6 F7 |        test    itmp2_,#1        wc       'restore sign, remainder
00760 0d7 85 0B 83 F6 |        negc    muldiva_,muldiva_ 
00764 0d8 02 0C D6 F7 |        test    itmp2_,#%10      wc       'restore sign, division result
00768 0d9 86 0D 83 06 |  _ret_ negc    muldivb_,muldivb_
0076c 0da             | __pc long 0
0076c 0da 00 00 00 00 
00770 0db             | __setjmp
00770 0db 2B B4 61 FD |     pop __pc
00774 0dc 00 2A 06 F6 |     mov result1, #0
00778 0dd 00 2C 06 F6 |     mov result2, #0
0077c 0de 2E 07 02 F6 |     mov abortchain, arg01
00780 0df 2E 5F 61 FC |     wrlong fp, arg01
00784 0e0 04 5C 06 F1 |     add arg01, #4
00788 0e1 2E F1 63 FC |     wrlong ptra, arg01
0078c 0e2 04 5C 06 F1 |     add arg01, #4
00790 0e3 2E 0F 62 FC |     wrlong objptr, arg01
00794 0e4 04 5C 06 F1 |     add arg01, #4
00798 0e5 2E B5 61 FC |     wrlong __pc, arg01
0079c 0e6 2C B4 61 FD |     jmp __pc
007a0 0e7             | __unwind_pc long 0
007a0 0e7 00 00 00 00 
007a4 0e8             | __unwind_stack
007a4 0e8 2B CE 61 FD |    pop  __unwind_pc
007a8 0e9             | __unwind_loop
007a8 0e9 2F 5D 0A F2 |    cmp  arg01, arg02 wz
007ac 0ea 10 00 90 AD |   if_z jmp #__unwind_stack_ret
007b0 0eb 2E F1 03 F6 |    mov   ptra, arg01
007b4 0ec 48 FF BF FD |    call  #popregs_
007b8 0ed AF 5C 02 F6 |    mov   arg01, fp
007bc 0ee E8 FF 9F FD |    jmp   #__unwind_loop
007c0 0ef             | __unwind_stack_ret
007c0 0ef 2C CE 61 FD |    jmp  __unwind_pc
007c4 0f0             | __longjmp
007c4 0f0 2B B4 61 FD |     pop __pc
007c8 0f1 00 5C 0E F2 |     cmp    arg01, #0 wz
007cc 0f2 30 00 90 AD |  if_z jmp #nocatch
007d0 0f3 2F 2B 02 F6 |     mov result1, arg02
007d4 0f4 01 2C 06 F6 |     mov result2, #1
007d8 0f5 2E 5F 02 FB |     rdlong arg02, arg01
007dc 0f6 04 5C 06 F1 |     add arg01, #4
007e0 0f7 2E F1 03 FB |     rdlong ptra, arg01
007e4 0f8 04 5C 06 F1 |     add arg01, #4
007e8 0f9 2E 0F 02 FB |     rdlong objptr, arg01
007ec 0fa 04 5C 06 F1 |     add arg01, #4
007f0 0fb 2E B5 01 FB |     rdlong __pc, arg01
007f4 0fc AF 5C 02 F6 |     mov arg01, fp
007f8 0fd A8 FF BF FD |     call #__unwind_stack
007fc 0fe             | __longjmp_ret
007fc 0fe 2C B4 61 FD |     jmp  __pc
00800 0ff             | nocatch
00800 0ff 00 60 0E F2 |     cmp arg03, #0 wz
00804 100 00 FE 9F AD |  if_z jmp #cogexit
00808 101 F0 FF 9F FD |     jmp #__longjmp_ret
0080c 102             | 
0080c 102             | __heap_ptr
0080c 102 04 44 02 00 | 	long	@__heap_base
00810 103             | abortchain
00810 103 00 00 00 00 | 	long	0
00814 104             | entryptr__
00814 104 04 04 00 00 | 	long	@entry
00818 105             | itmp1_
00818 105 00 00 00 00 | 	long	0
0081c 106             | itmp2_
0081c 106 00 00 00 00 | 	long	0
00820 107             | objptr
00820 107 0C 54 02 00 | 	long	@objmem
00824 108             | ptr___struct___bas_wrap_sender_tx_
00824 108 EC 80 00 00 | 	long	@__struct___bas_wrap_sender_tx
00828 109             | ptr___struct__s_vfs_file_t_putchar_
00828 109 34 80 00 00 | 	long	@__struct__s_vfs_file_t_putchar
0082c 10a             | ptr___system__dat__
0082c 10a A4 41 02 00 | 	long	@__system__dat_
00830 10b             | ptr__audio012_spin2_dat__
00830 10b B8 3A 02 00 | 	long	@_audio012_spin2_dat_
00834 10c             | ptr__dat__
00834 10c 18 82 00 00 | 	long	@_dat_
00838 10d             | ptr__hng030rm_spin2_dat__
00838 10d 30 05 02 00 | 	long	@_hng030rm_spin2_dat_
0083c 10e             | ptr__hng030rm_spin2_putchar_
0083c 10e 30 25 00 00 | 	long	@_hng030rm_spin2_putchar
00840 10f             | ptr__hng030rm_spin2_putpixel1_
00840 10f 04 20 00 00 | 	long	@_hng030rm_spin2_putpixel1
00844 110             | ptr__hng030rm_spin2_putpixel2_
00844 110 EC 20 00 00 | 	long	@_hng030rm_spin2_putpixel2
00848 111             | ptr__hng030rm_spin2_putpixel4_
00848 111 C4 21 00 00 | 	long	@_hng030rm_spin2_putpixel4
0084c 112             | ptr__hng030rm_spin2_putpixel8_
0084c 112 9C 22 00 00 | 	long	@_hng030rm_spin2_putpixel8
00850 113             | ptr__retrocog_spin2_serialcog_
00850 113 2C 34 00 00 | 	long	@_retrocog_spin2_serialcog
00854 114             | ptr__trackerplayer_spin2_dat__
00854 114 94 29 02 00 | 	long	@_trackerplayer_spin2_dat_
00858 115             | result1
00858 115 00 00 00 00 | 	long	0
0085c 116             | result2
0085c 116 00 00 00 00 | 	long	0
00860 117             | result3
00860 117 00 00 00 00 | 	long	0
00864 118             | COG_BSS_START
00864 118             | 	fit	480
00864                 | 	orgh
00864                 | hubentry
00864                 | 
00864                 | ' 
00864                 | ' function addr(byref v as any)
00864                 | _addr
00864     00 5A 05 F6 | 	mov	COUNT_, #0
00868     B0 00 A0 FD | 	call	#pushregs_
0086c     08 F0 07 F1 | 	add	ptra, #8
00870     04 5E 05 F1 | 	add	fp, #4
00874     AF 5C 62 FC | 	wrlong	arg01, fp
00878                 | ' 
00878                 | ' return(cast(ulong,@v))
00878     2E 2B 02 F6 | 	mov	result1, arg01
0087c     04 5E 85 F1 | 	sub	fp, #4
00880     AF F0 03 F6 | 	mov	ptra, fp
00884     BF 00 A0 FD | 	call	#popregs_
00888                 | _addr_ret
00888     2D 00 64 FD | 	ret
0088c                 | 
0088c                 | _program
0088c     3B 5A 05 F6 | 	mov	COUNT_, #59
00890     B0 00 A0 FD | 	call	#pushregs_
00894     EC 0E 06 F1 | 	add	objptr, #236
00898                 | ' 
00898                 | ' cog:=cogspin(16,serialcog(),@serialstack)
00898     07 6B 02 F6 | 	mov	local01, objptr
0089c     01 00 00 FF 
008a0     40 0F 06 F1 | 	add	objptr, ##832
008a4     07 6D 02 F6 | 	mov	local02, objptr
008a8     36 6B 62 FC | 	wrlong	local01, local02
008ac     04 6C 06 F1 | 	add	local02, #4
008b0     36 27 62 FC | 	wrlong	ptr__retrocog_spin2_serialcog_, local02
008b4     10 5C 06 F6 | 	mov	arg01, #16
008b8     28 0E 62 FD | 	setq	objptr
008bc     04 5D F2 FC | 	coginit	arg01, entryptr__ wc
008c0     01 5C 66 C6 |  if_b	neg	arg01, #1
008c4     2E 2B 02 F6 | 	mov	result1, arg01
008c8                 | ' return cog
008c8     00 0F 06 F1 | 	add	objptr, #256
008cc     07 2B 62 FC | 	wrlong	result1, objptr
008d0                 | ' c=rm.start()
008d0                 | ' return c
008d0     40 6E 06 F6 | 	mov	local03, #64
008d4     02 00 00 FF 
008d8     00 0F 86 F1 | 	sub	objptr, ##1280
008dc     07 71 02 F6 | 	mov	local04, objptr
008e0                 | ' 
008e0                 | ' ' initialize pointers and variables
008e0                 | ' 
008e0                 | ' border_ptr:=@bordercolor
008e0     24 0E 86 F1 | 	sub	objptr, #36
008e4     07 71 62 FC | 	wrlong	local04, objptr
008e8     08 00 00 FF 
008ec     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##4096
008f0                 | ' font_ptr:=@st_font
008f0     04 0E 86 F1 | 	sub	objptr, #4
008f4     07 1B 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
008f8                 | ' hdmibase:=base
008f8     20 0E 06 F1 | 	add	objptr, #32
008fc     07 01 68 FC | 	wrlong	#0, objptr
00900     24 0E 86 F1 | 	sub	objptr, #36
00904     0F 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel1_
00908                 | ' p1:=@putpixel1
00908     07 5D 02 F6 | 	mov	arg01, objptr
0090c     08 00 00 FF 
00910     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##4096
00914     20 56 B0 FD | 	call	#__system___make_methodptr
00918     15 73 02 F6 | 	mov	local05, result1
0091c     DC 0E 06 F1 | 	add	objptr, #220
00920     07 73 62 FC | 	wrlong	local05, objptr
00924     DC 0E 86 F1 | 	sub	objptr, #220
00928     10 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel2_
0092c                 | ' p2:=@putpixel2
0092c     07 5D 02 F6 | 	mov	arg01, objptr
00930     04 56 B0 FD | 	call	#__system___make_methodptr
00934     15 73 02 F6 | 	mov	local05, result1
00938     E0 0E 06 F1 | 	add	objptr, #224
0093c     07 73 62 FC | 	wrlong	local05, objptr
00940     E0 0E 86 F1 | 	sub	objptr, #224
00944     11 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel4_
00948                 | ' p4:=@putpixel4
00948     07 5D 02 F6 | 	mov	arg01, objptr
0094c     E8 55 B0 FD | 	call	#__system___make_methodptr
00950     15 73 02 F6 | 	mov	local05, result1
00954     E4 0E 06 F1 | 	add	objptr, #228
00958     07 73 62 FC | 	wrlong	local05, objptr
0095c     E4 0E 86 F1 | 	sub	objptr, #228
00960     12 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel8_
00964                 | ' p8:=@putpixel8
00964     07 5D 02 F6 | 	mov	arg01, objptr
00968     CC 55 B0 FD | 	call	#__system___make_methodptr
0096c     15 73 02 F6 | 	mov	local05, result1
00970     E8 0E 06 F1 | 	add	objptr, #232
00974     07 73 62 FC | 	wrlong	local05, objptr
00978     E8 0E 86 F1 | 	sub	objptr, #232
0097c                 | ' 
0097c                 | ' 
0097c                 | ' ' the mode has to be set here to enable computing the buffer length
0097c                 | ' 
0097c                 | ' setmode(mode)
0097c     40 5C 06 F6 | 	mov	arg01, #64
00980     68 20 B0 FD | 	call	#_hng030rm_spin2_setmode
00984     40 0E 06 F1 | 	add	objptr, #64
00988     07 75 02 F6 | 	mov	local06, objptr
0098c                 | ' 
0098c                 | ' vblank_ptr:=@vblank
0098c     34 0E 86 F1 | 	sub	objptr, #52
00990     07 75 62 FC | 	wrlong	local06, objptr
00994     28 0E 06 F1 | 	add	objptr, #40
00998     07 77 02 F6 | 	mov	local07, objptr
0099c                 | ' cursor_ptr:=@cursor_x
0099c     24 0E 86 F1 | 	sub	objptr, #36
009a0     07 77 62 FC | 	wrlong	local07, objptr
009a4     88 0E 06 F1 | 	add	objptr, #136
009a8     07 79 02 F6 | 	mov	local08, objptr
009ac                 | ' 
009ac                 | ' fontnum_ptr:=@fontnum
009ac     78 0E 86 F1 | 	sub	objptr, #120
009b0     07 79 62 FC | 	wrlong	local08, objptr
009b4                 | ' 
009b4                 | ' fontnum:=0  ' PC type font ' TODO: font# in buffer byte #1
009b4     78 0E 06 F1 | 	add	objptr, #120
009b8     07 01 68 FC | 	wrlong	#0, objptr
009bc     1C 0E 06 F1 | 	add	objptr, #28
009c0     07 5D 02 F6 | 	mov	arg01, objptr
009c4     B4 0E 86 F1 | 	sub	objptr, #180
009c8     0F 00 00 FF 
009cc     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7768
009d0     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
009d4     0F 00 00 FF 
009d8     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7768
009dc                 | ' bytemove(@colors,@vgacolors,16)
009dc     10 60 06 F6 | 	mov	arg03, #16
009e0     2C 54 B0 FD | 	call	#__system____builtin_memmove
009e4                 | ' 
009e4                 | ' ' initialize a cursor
009e4                 | ' 
009e4                 | ' cursor_x:=0
009e4     34 0E 06 F1 | 	add	objptr, #52
009e8     07 01 48 FC | 	wrbyte	#0, objptr
009ec                 | ' cursor_y:=0
009ec     01 0E 06 F1 | 	add	objptr, #1
009f0     07 01 48 FC | 	wrbyte	#0, objptr
009f4                 | ' cursor_sh:=14
009f4     01 0E 06 F1 | 	add	objptr, #1
009f8     07 1D 48 FC | 	wrbyte	#14, objptr
009fc     36 0E 86 F1 | 	sub	objptr, #54
00a00                 | ' 
00a00                 | ' 
00a00                 | ' ' start the cog
00a00                 | ' 
00a00                 | ' cog:=coginit(16,@hdmi, @buf_ptr)
00a00     0F 00 00 FF 
00a04     68 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7784
00a08     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
00a0c     0F 00 00 FF 
00a10     68 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7784
00a14     07 61 02 F6 | 	mov	arg03, objptr
00a18     10 5C 06 F6 | 	mov	arg01, #16
00a1c     28 60 62 FD | 	setq	arg03
00a20     2F 5D F2 FC | 	coginit	arg01, arg02 wc
00a24     01 5C 66 C6 |  if_b	neg	arg01, #1
00a28     2E 2B 02 F6 | 	mov	result1, arg01
00a2c     15 7B 02 F6 | 	mov	local09, result1
00a30     28 0E 06 F1 | 	add	objptr, #40
00a34     07 7B 62 FC | 	wrlong	local09, objptr
00a38     28 0E 86 F1 | 	sub	objptr, #40
00a3c                 | ' waitms(20)
00a3c     14 5C 06 F6 | 	mov	arg01, #20
00a40     FC 56 B0 FD | 	call	#__system___waitms
00a44                 | ' 
00a44                 | ' ' clear the screen and set the colors to green on black
00a44                 | ' 
00a44                 | ' cls(c_green,c_black)
00a44     C7 5C 06 F6 | 	mov	arg01, #199
00a48     00 5E 06 F6 | 	mov	arg02, #0
00a4c     F4 18 B0 FD | 	call	#_hng030rm_spin2_cls
00a50                 | ' setbordercolor(0,0,128)
00a50     00 5C 06 F6 | 	mov	arg01, #0
00a54     00 5E 06 F6 | 	mov	arg02, #0
00a58     80 60 06 F6 | 	mov	arg03, #128
00a5c     C0 18 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a60                 | ' setwritecolors(c_green,c_black)
00a60     00 5E 06 F6 | 	mov	arg02, #0
00a64                 | ' 
00a64                 | ' 
00a64                 | ' write_color:=ff
00a64     38 0E 06 F1 | 	add	objptr, #56
00a68     07 8F 69 FC | 	wrlong	#199, objptr
00a6c                 | ' write_background:=bb
00a6c     04 0E 06 F1 | 	add	objptr, #4
00a70     07 01 68 FC | 	wrlong	#0, objptr
00a74                 | ' 
00a74                 | ' return cog
00a74     14 0E 86 F1 | 	sub	objptr, #20
00a78     07 2B 02 FB | 	rdlong	result1, objptr
00a7c     28 0E 86 F1 | 	sub	objptr, #40
00a80     00 5C 06 F6 | 	mov	arg01, #0
00a84     00 60 06 F6 | 	mov	arg03, #0
00a88     94 18 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a8c                 | ' v030.start(mode,pin)
00a8c                 | ' v030.setbordercolor(0,0,0)
00a8c                 | ' open SendRecvDevice(@v030.putchar, nil, nil) as #0
00a8c     07 5D 02 F6 | 	mov	arg01, objptr
00a90     0E 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putchar_
00a94     A0 54 B0 FD | 	call	#__system___make_methodptr
00a98     00 2E 06 F6 | 	mov	result3, #0
00a9c     00 2C 06 F6 | 	mov	result2, #0
00aa0     15 5F 02 F6 | 	mov	arg02, result1
00aa4     00 60 06 F6 | 	mov	arg03, #0
00aa8     00 62 06 F6 | 	mov	arg04, #0
00aac     00 5C 06 F6 | 	mov	arg01, #0
00ab0     5C 57 B0 FD | 	call	#__system___basic_open
00ab4     00 2A 06 F6 | 	mov	result1, #0
00ab8     9A 5C 06 F6 | 	mov	arg01, #154
00abc     93 5E 06 F6 | 	mov	arg02, #147
00ac0     80 18 B0 FD | 	call	#_hng030rm_spin2_cls
00ac4     40 00 00 FF 
00ac8     EF 7D 06 F6 | 	mov	local10, ##@LR__0459
00acc     04 00 00 FF 
00ad0     D0 0E 06 F1 | 	add	objptr, ##2256
00ad4     07 7D 62 FC | 	wrlong	local10, objptr
00ad8     04 00 00 FF 
00adc     D0 0E 86 F1 | 	sub	objptr, ##2256
00ae0     0C 7F 02 F6 | 	mov	local11, ptr__dat__
00ae4     3F 5D 02 F6 | 	mov	arg01, local11
00ae8     78 FD BF FD | 	call	#_addr
00aec     04 00 00 FF 
00af0     D4 0E 06 F1 | 	add	objptr, ##2260
00af4     07 2B 62 FC | 	wrlong	result1, objptr
00af8     15 5D 02 F6 | 	mov	arg01, result1
00afc     00 5E 06 F6 | 	mov	arg02, #0
00b00     01 00 00 FF 
00b04     A4 0F 86 F1 | 	sub	objptr, ##932
00b08     C8 2F B0 FD | 	call	#_trackerplayer_spin2_initModule
00b0c     01 5E 06 F6 | 	mov	arg02, #1
00b10                 | ' 
00b10                 | ' ''---------- Set the (x,y) position of cursor
00b10                 | ' 
00b10                 | ' cursor_x:=x
00b10     02 00 00 FF 
00b14     FC 0E 86 F1 | 	sub	objptr, ##1276
00b18     07 03 48 FC | 	wrbyte	#1, objptr
00b1c                 | ' cursor_y:=y
00b1c     01 0E 06 F1 | 	add	objptr, #1
00b20     07 03 48 FC | 	wrbyte	#1, objptr
00b24                 | ' 
00b24                 | ' emptystr$="                      "
00b24                 | ' 
00b24                 | ' ma=addr(module)
00b24                 | ' tracker.initmodule(ma,0)
00b24                 | ' 
00b24                 | ' position 1,1 :for i=ma to ma+19 : print chr$(peek(i)); : next i
00b24     04 00 00 FF 
00b28     9F 0E 06 F1 | 	add	objptr, ##2207
00b2c     07 81 02 FB | 	rdlong	local12, objptr
00b30     40 83 02 F6 | 	mov	local13, local12
00b34     04 00 00 FF 
00b38     D4 0E 86 F1 | 	sub	objptr, ##2260
00b3c     14 82 06 F1 | 	add	local13, #20
00b40                 | LR__0001
00b40     41 81 5A F2 | 	cmps	local12, local13 wcz
00b44     44 00 90 3D |  if_ae	jmp	#LR__0002
00b48     00 5C 06 F6 | 	mov	arg01, #0
00b4c     6C 6A B0 FD | 	call	#__system___getiolock_0145
00b50     15 5D 02 F6 | 	mov	arg01, result1
00b54     20 54 B0 FD | 	call	#__system___lockmem
00b58     00 84 06 F6 | 	mov	local14, #0
00b5c                 | ' asm
00b5c     40 2B C2 FA | 	rdbyte	result1, local12
00b60                 | ' return r
00b60     15 5F 02 F6 | 	mov	arg02, result1
00b64     07 5E 46 F7 | 	zerox	arg02, #7
00b68     00 5C 06 F6 | 	mov	arg01, #0
00b6c     00 60 06 F6 | 	mov	arg03, #0
00b70     50 57 B0 FD | 	call	#__system___basic_print_char
00b74     00 5C 06 F6 | 	mov	arg01, #0
00b78     40 6A B0 FD | 	call	#__system___getiolock_0145
00b7c     15 01 68 FC | 	wrlong	#0, result1
00b80     00 2A 06 F6 | 	mov	result1, #0
00b84     01 80 06 F1 | 	add	local12, #1
00b88     B4 FF 9F FD | 	jmp	#LR__0001
00b8c                 | LR__0002
00b8c     04 00 00 FF 
00b90     D8 0E 06 F1 | 	add	objptr, ##2264
00b94     07 1F 68 FC | 	wrlong	#15, objptr
00b98                 | ' samples=15: if peek(ma+1080)=asc("M") and peek(ma+1082)=asc("K") then samples=31
00b98     00 7C 06 F6 | 	mov	local10, #0
00b9c     04 0E 86 F1 | 	sub	objptr, #4
00ba0     07 5D 02 FB | 	rdlong	arg01, objptr
00ba4     02 00 00 FF 
00ba8     38 5C 06 F1 | 	add	arg01, ##1080
00bac                 | ' asm
00bac     2E 87 C2 FA | 	rdbyte	local15, arg01
00bb0                 | ' return r
00bb0     07 86 46 F7 | 	zerox	local15, #7
00bb4     4D 86 0E F2 | 	cmp	local15, #77 wz
00bb8     01 7C 66 A6 |  if_e	neg	local10, #1
00bbc     00 88 06 F6 | 	mov	local16, #0
00bc0     07 5D 02 FB | 	rdlong	arg01, objptr
00bc4     04 00 00 FF 
00bc8     D4 0E 86 F1 | 	sub	objptr, ##2260
00bcc     02 00 00 FF 
00bd0     3A 5C 06 F1 | 	add	arg01, ##1082
00bd4                 | ' asm
00bd4     2E 2B C2 FA | 	rdbyte	result1, arg01
00bd8                 | ' return r
00bd8     15 8B 02 F6 | 	mov	local17, result1
00bdc     07 8A 46 F7 | 	zerox	local17, #7
00be0     4B 8A 0E F2 | 	cmp	local17, #75 wz
00be4     01 88 66 A6 |  if_e	neg	local16, #1
00be8     44 7D CA F7 | 	test	local10, local16 wz
00bec     04 00 00 5F 
00bf0     D8 0E 06 51 |  if_ne	add	objptr, ##2264
00bf4     07 3F 68 5C |  if_ne	wrlong	#31, objptr
00bf8     04 00 00 5F 
00bfc     D8 0E 86 51 |  if_ne	sub	objptr, ##2264
00c00     02 5E 06 F6 | 	mov	arg02, #2
00c04                 | ' 
00c04                 | ' ''---------- Set the (x,y) position of cursor
00c04                 | ' 
00c04                 | ' cursor_x:=x
00c04     34 0E 06 F1 | 	add	objptr, #52
00c08     07 03 48 FC | 	wrbyte	#1, objptr
00c0c                 | ' cursor_y:=y
00c0c     01 0E 06 F1 | 	add	objptr, #1
00c10     07 05 48 FC | 	wrbyte	#2, objptr
00c14     35 0E 86 F1 | 	sub	objptr, #53
00c18                 | ' position 1,2 : print samples;" ";"samples module"
00c18     00 5C 06 F6 | 	mov	arg01, #0
00c1c     9C 69 B0 FD | 	call	#__system___getiolock_0145
00c20     15 5D 02 F6 | 	mov	arg01, result1
00c24     50 53 B0 FD | 	call	#__system___lockmem
00c28     00 2A 06 F6 | 	mov	result1, #0
00c2c     04 00 00 FF 
00c30     D8 0E 06 F1 | 	add	objptr, ##2264
00c34     07 5F 02 FB | 	rdlong	arg02, objptr
00c38     04 00 00 FF 
00c3c     D8 0E 86 F1 | 	sub	objptr, ##2264
00c40     00 5C 06 F6 | 	mov	arg01, #0
00c44     00 60 06 F6 | 	mov	arg03, #0
00c48     0A 62 06 F6 | 	mov	arg04, #10
00c4c     08 57 B0 FD | 	call	#__system___basic_print_integer
00c50     41 00 00 FF 
00c54     06 5E 06 F6 | 	mov	arg02, ##@LR__0460
00c58     00 5C 06 F6 | 	mov	arg01, #0
00c5c     00 60 06 F6 | 	mov	arg03, #0
00c60     AC 56 B0 FD | 	call	#__system___basic_print_string
00c64     41 00 00 FF 
00c68     08 5E 06 F6 | 	mov	arg02, ##@LR__0461
00c6c     00 5C 06 F6 | 	mov	arg01, #0
00c70     00 60 06 F6 | 	mov	arg03, #0
00c74     98 56 B0 FD | 	call	#__system___basic_print_string
00c78     00 5C 06 F6 | 	mov	arg01, #0
00c7c     0A 5E 06 F6 | 	mov	arg02, #10
00c80     00 60 06 F6 | 	mov	arg03, #0
00c84     3C 56 B0 FD | 	call	#__system___basic_print_char
00c88     01 2A 06 F6 | 	mov	result1, #1
00c8c     00 5C 06 F6 | 	mov	arg01, #0
00c90     28 69 B0 FD | 	call	#__system___getiolock_0145
00c94     15 01 68 FC | 	wrlong	#0, result1
00c98     00 2A 06 F6 | 	mov	result1, #0
00c9c     04 00 00 FF 
00ca0     D4 0E 06 F1 | 	add	objptr, ##2260
00ca4     07 8D 02 FB | 	rdlong	local18, objptr
00ca8     04 0E 06 F1 | 	add	objptr, #4
00cac     07 8F 02 FB | 	rdlong	local19, objptr
00cb0     04 5E 06 F6 | 	mov	arg02, #4
00cb4                 | ' 
00cb4                 | ' ''---------- Set the (x,y) position of cursor
00cb4                 | ' 
00cb4                 | ' cursor_x:=x
00cb4     04 00 00 FF 
00cb8     A4 0E 86 F1 | 	sub	objptr, ##2212
00cbc     07 03 48 FC | 	wrbyte	#1, objptr
00cc0                 | ' cursor_y:=y
00cc0     01 0E 06 F1 | 	add	objptr, #1
00cc4     07 09 48 FC | 	wrbyte	#4, objptr
00cc8     35 0E 86 F1 | 	sub	objptr, #53
00ccc                 | ' 'v030. setwritecolors(170,147):
00ccc                 | ' position 1,4: print "Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
00ccc     00 5C 06 F6 | 	mov	arg01, #0
00cd0     E8 68 B0 FD | 	call	#__system___getiolock_0145
00cd4     15 5D 02 F6 | 	mov	arg01, result1
00cd8     9C 52 B0 FD | 	call	#__system___lockmem
00cdc     00 2A 06 F6 | 	mov	result1, #0
00ce0     40 00 00 FF 
00ce4     84 5F 06 F6 | 	mov	arg02, ##@LR__0457
00ce8     00 5C 06 F6 | 	mov	arg01, #0
00cec     00 60 06 F6 | 	mov	arg03, #0
00cf0     1C 56 B0 FD | 	call	#__system___basic_print_string
00cf4     00 5C 06 F6 | 	mov	arg01, #0
00cf8     0A 5E 06 F6 | 	mov	arg02, #10
00cfc     00 60 06 F6 | 	mov	arg03, #0
00d00     C0 55 B0 FD | 	call	#__system___basic_print_char
00d04     01 2A 06 F6 | 	mov	result1, #1
00d08     00 5C 06 F6 | 	mov	arg01, #0
00d0c     AC 68 B0 FD | 	call	#__system___getiolock_0145
00d10     15 01 68 FC | 	wrlong	#0, result1
00d14     00 2A 06 F6 | 	mov	result1, #0
00d18     04 00 00 FF 
00d1c     4C 0E 06 F1 | 	add	objptr, ##2124
00d20     07 91 02 F6 | 	mov	local20, objptr
00d24     00 92 06 F6 | 	mov	local21, #0
00d28     04 00 00 FF 
00d2c     4C 0E 86 F1 | 	sub	objptr, ##2124
00d30                 | LR__0003
00d30     40 00 00 FF 
00d34     ED 95 06 F6 | 	mov	local22, ##@LR__0458
00d38     49 97 02 F6 | 	mov	local23, local21
00d3c     02 5E 06 F6 | 	mov	arg02, #2
00d40     0A 60 06 F6 | 	mov	arg03, #10
00d44     02 98 0E F6 | 	mov	local24, #2 wz
00d48     34 00 90 FD | 	jmp	#LR__0006
00d4c                 | LR__0004
00d4c     00 9A 06 F6 | 	mov	local25, #0
00d50     4B 9D 1A F2 | 	cmp	local26, local23 wcz
00d54     01 9A 66 E6 |  if_be	neg	local25, #1
00d58     00 9E 06 F6 | 	mov	local27, #0
00d5c     4E A1 1A F2 | 	cmp	local28, local26 wcz
00d60     01 9E 66 C6 |  if_b	neg	local27, #1
00d64     4F 9B CA F7 | 	test	local25, local27 wz
00d68     14 00 90 AD |  if_e	jmp	#LR__0005
00d6c     4E A1 02 F6 | 	mov	local28, local26
00d70     0A 9C 06 FD | 	qmul	local26, #10
00d74     18 9C 62 FD | 	getqx	local26
00d78     01 98 06 F1 | 	add	local24, #1
00d7c     CC FF 9F FD | 	jmp	#LR__0004
00d80                 | LR__0005
00d80                 | LR__0006
00d80     20 98 3E F3 | 	fle	local24, #32 wcz
00d84     4C 5D 02 F6 | 	mov	arg01, local24
00d88     02 5C 06 F1 | 	add	arg01, #2
00d8c     1C 5E B0 FD | 	call	#__system___gc_alloc_managed
00d90     15 A3 02 F6 | 	mov	local29, result1
00d94     4C A5 02 F6 | 	mov	local30, local24
00d98     51 A5 02 F1 | 	add	local30, local29
00d9c     52 01 48 FC | 	wrbyte	#0, local30
00da0     98 F2 9F FE | 	loc	pa,	#(@LR__0008-@LR__0007)
00da4     93 00 A0 FD | 	call	#FCACHE_LOAD_
00da8                 | LR__0007
00da8     00 98 1E F2 | 	cmp	local24, #0 wcz
00dac     34 00 90 ED |  if_be	jmp	#LR__0009
00db0     01 98 86 F1 | 	sub	local24, #1
00db4     4B 0B 03 F6 | 	mov	muldiva_, local23
00db8     0A 0C 07 F6 | 	mov	muldivb_, #10
00dbc     CC 00 A0 FD | 	call	#unsdivide_
00dc0     85 A7 02 F6 | 	mov	local31, muldiva_
00dc4     86 97 02 F6 | 	mov	local23, muldivb_
00dc8     0A A6 1E F2 | 	cmp	local31, #10 wcz
00dcc     30 A6 06 C1 |  if_b	add	local31, #48
00dd0     37 A6 06 31 |  if_ae	add	local31, #55
00dd4     4C A9 02 F6 | 	mov	local32, local24
00dd8     51 A9 02 F1 | 	add	local32, local29
00ddc     54 A7 42 FC | 	wrbyte	local31, local32
00de0     C4 FF 9F FD | 	jmp	#LR__0007
00de4                 | LR__0008
00de4                 | LR__0009
00de4     51 2B 02 F6 | 	mov	result1, local29
00de8     15 5F 02 F6 | 	mov	arg02, result1
00dec     4A 5D 02 F6 | 	mov	arg01, local22
00df0     BC 51 B0 FD | 	call	#__system___string_concat
00df4     15 AB 02 F6 | 	mov	local33, result1
00df8     13 5C 06 F6 | 	mov	arg01, #19
00dfc     40 00 00 FF 
00e00     24 5F 06 F6 | 	mov	arg02, ##@LR__0450
00e04     14 5A B0 FD | 	call	#__system__String_S
00e08     15 5F 02 F6 | 	mov	arg02, result1
00e0c     55 5D 02 F6 | 	mov	arg01, local33
00e10     9C 51 B0 FD | 	call	#__system___string_concat
00e14     48 2B 62 FC | 	wrlong	result1, local20
00e18     01 92 06 F1 | 	add	local21, #1
00e1c     04 90 06 F1 | 	add	local20, #4
00e20     20 92 5E F2 | 	cmps	local21, #32 wcz
00e24     08 FF 9F CD |  if_b	jmp	#LR__0003
00e28                 | ' for i=1 to num
00e28     01 92 06 F6 | 	mov	local21, #1
00e2c     01 8E 06 F1 | 	add	local19, #1
00e30     46 AD 02 F6 | 	mov	local34, local18
00e34     14 AC 06 F1 | 	add	local34, #20
00e38     00 AE 06 F6 | 	mov	local35, #0
00e3c     04 00 00 FF 
00e40     50 0E 06 F1 | 	add	objptr, ##2128
00e44     07 B1 02 F6 | 	mov	local36, objptr
00e48     14 8C 06 F1 | 	add	local18, #20
00e4c     00 B2 06 F6 | 	mov	local37, #0
00e50     04 00 00 FF 
00e54     50 0E 86 F1 | 	sub	objptr, ##2128
00e58                 | LR__0010
00e58     47 93 5A F2 | 	cmps	local21, local19 wcz
00e5c     0C 07 90 3D |  if_ae	jmp	#LR__0015
00e60     56 B5 02 F6 | 	mov	local38, local34
00e64     57 B5 02 F1 | 	add	local38, local35
00e68     00 B6 06 F6 | 	mov	local39, #0
00e6c                 | LR__0011
00e6c     58 5D 02 F6 | 	mov	arg01, local36
00e70     F0 F9 BF FD | 	call	#_addr
00e74                 | ' asm
00e74     15 B9 02 FB | 	rdlong	local40, result1
00e78                 | ' return r
00e78     04 00 00 FF 
00e7c     F8 0E 06 F1 | 	add	objptr, ##2296
00e80     07 B9 62 FC | 	wrlong	local40, objptr
00e84     5A 5D 02 F6 | 	mov	arg01, local38
00e88     5B 5D 02 F1 | 	add	arg01, local39
00e8c                 | ' asm
00e8c     2E 2B C2 FA | 	rdbyte	result1, arg01
00e90                 | ' return r
00e90     15 95 02 F6 | 	mov	local22, result1
00e94     07 94 46 F7 | 	zerox	local22, #7
00e98     04 0E 06 F1 | 	add	objptr, #4
00e9c     07 95 62 FC | 	wrlong	local22, objptr
00ea0                 | '     a=lpeek(addr(sn$(i)))
00ea0                 | '     b=(peek(ma+20+30*(i-1)+j))
00ea0                 | '     if b>=32 then poke a+j,b
00ea0     04 00 00 FF 
00ea4     FC 0E 86 F1 | 	sub	objptr, ##2300
00ea8     20 94 5E F2 | 	cmps	local22, #32 wcz
00eac     24 00 90 CD |  if_b	jmp	#LR__0012
00eb0     04 00 00 FF 
00eb4     F8 0E 06 F1 | 	add	objptr, ##2296
00eb8     07 5D 02 FB | 	rdlong	arg01, objptr
00ebc     5B 5D 02 F1 | 	add	arg01, local39
00ec0     04 0E 06 F1 | 	add	objptr, #4
00ec4     07 5F 02 FB | 	rdlong	arg02, objptr
00ec8     04 00 00 FF 
00ecc     FC 0E 86 F1 | 	sub	objptr, ##2300
00ed0                 | ' asm
00ed0     2E 5F 42 FC | 	wrbyte	arg02, arg01
00ed4                 | LR__0012
00ed4     01 B6 06 F1 | 	add	local39, #1
00ed8     16 B6 5E F2 | 	cmps	local39, #22 wcz
00edc     8C FF 9F CD |  if_b	jmp	#LR__0011
00ee0     46 BB 02 F6 | 	mov	local41, local18
00ee4     59 BB 02 F1 | 	add	local41, local37
00ee8     5D 5D 02 F6 | 	mov	arg01, local41
00eec     16 5C 06 F1 | 	add	arg01, #22
00ef0     5D BD 02 F6 | 	mov	local42, local41
00ef4     17 BC 06 F1 | 	add	local42, #23
00ef8                 | ' asm
00ef8     2E AB C2 FA | 	rdbyte	local33, arg01
00efc                 | ' return r
00efc     07 AA 46 F7 | 	zerox	local33, #7
00f00     08 AA 66 F0 | 	shl	local33, #8
00f04                 | ' asm
00f04     5E BF C2 FA | 	rdbyte	local43, local42
00f08                 | ' return r
00f08     07 BE 46 F7 | 	zerox	local43, #7
00f0c     5F AB 02 F1 | 	add	local33, local43
00f10     01 AA 66 F0 | 	shl	local33, #1
00f14     04 00 00 FF 
00f18     00 0F 06 F1 | 	add	objptr, ##2304
00f1c     07 AB 62 FC | 	wrlong	local33, objptr
00f20     5D 5D 02 F6 | 	mov	arg01, local41
00f24     1A 5C 06 F1 | 	add	arg01, #26
00f28     5D C1 02 F6 | 	mov	local44, local41
00f2c     1B C0 06 F1 | 	add	local44, #27
00f30                 | ' asm
00f30     2E AB C2 FA | 	rdbyte	local33, arg01
00f34                 | ' return r
00f34     07 AA 46 F7 | 	zerox	local33, #7
00f38     08 AA 66 F0 | 	shl	local33, #8
00f3c                 | ' asm
00f3c     60 BF C2 FA | 	rdbyte	local43, local44
00f40                 | ' return r
00f40     07 BE 46 F7 | 	zerox	local43, #7
00f44     5F AB 02 F1 | 	add	local33, local43
00f48     01 AA 66 F0 | 	shl	local33, #1
00f4c     04 0E 06 F1 | 	add	objptr, #4
00f50     07 AB 62 FC | 	wrlong	local33, objptr
00f54     5D 5D 02 F6 | 	mov	arg01, local41
00f58     1C 5C 06 F1 | 	add	arg01, #28
00f5c     5D C3 02 F6 | 	mov	local45, local41
00f60     1D C2 06 F1 | 	add	local45, #29
00f64                 | ' asm
00f64     2E AB C2 FA | 	rdbyte	local33, arg01
00f68                 | ' return r
00f68     07 AA 46 F7 | 	zerox	local33, #7
00f6c     08 AA 66 F0 | 	shl	local33, #8
00f70                 | ' asm
00f70     61 BF C2 FA | 	rdbyte	local43, local45
00f74                 | ' return r
00f74     07 BE 46 F7 | 	zerox	local43, #7
00f78     5F AB 02 F1 | 	add	local33, local43
00f7c     01 AA 66 F0 | 	shl	local33, #1
00f80     04 0E 06 F1 | 	add	objptr, #4
00f84     07 AB 62 FC | 	wrlong	local33, objptr
00f88     5D 5D 02 F6 | 	mov	arg01, local41
00f8c     18 5C 06 F1 | 	add	arg01, #24
00f90                 | ' asm
00f90     2E 95 C2 FA | 	rdbyte	local22, arg01
00f94                 | ' return r
00f94     07 94 46 F7 | 	zerox	local22, #7
00f98     04 0E 06 F1 | 	add	objptr, #4
00f9c     07 95 62 FC | 	wrlong	local22, objptr
00fa0     19 BA 06 F1 | 	add	local41, #25
00fa4                 | ' asm
00fa4     5D 2B C2 FA | 	rdbyte	result1, local41
00fa8                 | ' return r
00fa8     15 95 02 F6 | 	mov	local22, result1
00fac     07 94 46 F7 | 	zerox	local22, #7
00fb0     04 0E 06 F1 | 	add	objptr, #4
00fb4     07 95 62 FC | 	wrlong	local22, objptr
00fb8     04 00 00 FF 
00fbc     10 0F 86 F1 | 	sub	objptr, ##2320
00fc0                 | ' sl=2*(256*peek(ma+20+30*(i-1)+22)+ peek(ma+20+30*(i-1)+23))  
00fc0                 | ' rp=2*(256*peek(ma+20+30*(i-1)+26)+ peek(ma+20+30*(i-1)+27))  
00fc0                 | ' rl=2*(256*peek(ma+20+30*(i-1)+28)+ peek(ma+20+30*(i-1)+29))  
00fc0                 | ' ft=peek(ma+20+30*(i-1)+24)
00fc0                 | ' vl=peek(ma+20+30*(i-1)+25)
00fc0                 | ' if i<16 then position 1,5+i :print sn$(i) : position 24,5+i : print sl :position 31,5+i : print ft :position 34,5+i : print vl : position 37,5+i :print rp : position 43,5+i :print rl
00fc0     10 92 5E F2 | 	cmps	local21, #16 wcz
00fc4     C4 02 90 3D |  if_ae	jmp	#LR__0013
00fc8     05 C4 06 F6 | 	mov	local46, #5
00fcc     49 C5 02 F1 | 	add	local46, local21
00fd0     62 5F 02 F6 | 	mov	arg02, local46
00fd4                 | ' 
00fd4                 | ' ''---------- Set the (x,y) position of cursor
00fd4                 | ' 
00fd4                 | ' cursor_x:=x
00fd4     34 0E 06 F1 | 	add	objptr, #52
00fd8     07 03 48 FC | 	wrbyte	#1, objptr
00fdc                 | ' cursor_y:=y
00fdc     01 0E 06 F1 | 	add	objptr, #1
00fe0     07 5F 42 FC | 	wrbyte	arg02, objptr
00fe4     49 C7 02 F6 | 	mov	local47, local21
00fe8     02 C6 66 F0 | 	shl	local47, #2
00fec     04 00 00 FF 
00ff0     17 0E 06 F1 | 	add	objptr, ##2071
00ff4     07 C7 02 F1 | 	add	local47, objptr
00ff8     00 5C 06 F6 | 	mov	arg01, #0
00ffc     04 00 00 FF 
01000     4C 0E 86 F1 | 	sub	objptr, ##2124
01004     B4 65 B0 FD | 	call	#__system___getiolock_0145
01008     15 5D 02 F6 | 	mov	arg01, result1
0100c     68 4F B0 FD | 	call	#__system___lockmem
01010     00 2A 06 F6 | 	mov	result1, #0
01014     63 5F 02 FB | 	rdlong	arg02, local47
01018     00 5C 06 F6 | 	mov	arg01, #0
0101c     00 60 06 F6 | 	mov	arg03, #0
01020     EC 52 B0 FD | 	call	#__system___basic_print_string
01024     00 5C 06 F6 | 	mov	arg01, #0
01028     0A 5E 06 F6 | 	mov	arg02, #10
0102c     00 60 06 F6 | 	mov	arg03, #0
01030     90 52 B0 FD | 	call	#__system___basic_print_char
01034     01 2A 06 F6 | 	mov	result1, #1
01038     00 5C 06 F6 | 	mov	arg01, #0
0103c     7C 65 B0 FD | 	call	#__system___getiolock_0145
01040     15 01 68 FC | 	wrlong	#0, result1
01044     00 2A 06 F6 | 	mov	result1, #0
01048     62 5F 02 F6 | 	mov	arg02, local46
0104c                 | ' 
0104c                 | ' ''---------- Set the (x,y) position of cursor
0104c                 | ' 
0104c                 | ' cursor_x:=x
0104c     34 0E 06 F1 | 	add	objptr, #52
01050     07 31 48 FC | 	wrbyte	#24, objptr
01054                 | ' cursor_y:=y
01054     01 0E 06 F1 | 	add	objptr, #1
01058     07 5F 42 FC | 	wrbyte	arg02, objptr
0105c     35 0E 86 F1 | 	sub	objptr, #53
01060     00 5C 06 F6 | 	mov	arg01, #0
01064     54 65 B0 FD | 	call	#__system___getiolock_0145
01068     15 5D 02 F6 | 	mov	arg01, result1
0106c     08 4F B0 FD | 	call	#__system___lockmem
01070     00 2A 06 F6 | 	mov	result1, #0
01074     04 00 00 FF 
01078     00 0F 06 F1 | 	add	objptr, ##2304
0107c     07 5F 02 FB | 	rdlong	arg02, objptr
01080     04 00 00 FF 
01084     00 0F 86 F1 | 	sub	objptr, ##2304
01088     00 5C 06 F6 | 	mov	arg01, #0
0108c     00 60 06 F6 | 	mov	arg03, #0
01090     0A 62 06 F6 | 	mov	arg04, #10
01094     C0 52 B0 FD | 	call	#__system___basic_print_integer
01098     00 5C 06 F6 | 	mov	arg01, #0
0109c     0A 5E 06 F6 | 	mov	arg02, #10
010a0     00 60 06 F6 | 	mov	arg03, #0
010a4     1C 52 B0 FD | 	call	#__system___basic_print_char
010a8     01 2A 06 F6 | 	mov	result1, #1
010ac     00 5C 06 F6 | 	mov	arg01, #0
010b0     08 65 B0 FD | 	call	#__system___getiolock_0145
010b4     15 01 68 FC | 	wrlong	#0, result1
010b8     00 2A 06 F6 | 	mov	result1, #0
010bc     62 5F 02 F6 | 	mov	arg02, local46
010c0                 | ' 
010c0                 | ' ''---------- Set the (x,y) position of cursor
010c0                 | ' 
010c0                 | ' cursor_x:=x
010c0     34 0E 06 F1 | 	add	objptr, #52
010c4     07 3F 48 FC | 	wrbyte	#31, objptr
010c8                 | ' cursor_y:=y
010c8     01 0E 06 F1 | 	add	objptr, #1
010cc     07 5F 42 FC | 	wrbyte	arg02, objptr
010d0     35 0E 86 F1 | 	sub	objptr, #53
010d4     00 5C 06 F6 | 	mov	arg01, #0
010d8     E0 64 B0 FD | 	call	#__system___getiolock_0145
010dc     15 5D 02 F6 | 	mov	arg01, result1
010e0     94 4E B0 FD | 	call	#__system___lockmem
010e4     00 2A 06 F6 | 	mov	result1, #0
010e8     04 00 00 FF 
010ec     0C 0F 06 F1 | 	add	objptr, ##2316
010f0     07 5F 02 FB | 	rdlong	arg02, objptr
010f4     04 00 00 FF 
010f8     0C 0F 86 F1 | 	sub	objptr, ##2316
010fc     00 5C 06 F6 | 	mov	arg01, #0
01100     00 60 06 F6 | 	mov	arg03, #0
01104     0A 62 06 F6 | 	mov	arg04, #10
01108     4C 52 B0 FD | 	call	#__system___basic_print_integer
0110c     00 5C 06 F6 | 	mov	arg01, #0
01110     0A 5E 06 F6 | 	mov	arg02, #10
01114     00 60 06 F6 | 	mov	arg03, #0
01118     A8 51 B0 FD | 	call	#__system___basic_print_char
0111c     01 2A 06 F6 | 	mov	result1, #1
01120     00 5C 06 F6 | 	mov	arg01, #0
01124     94 64 B0 FD | 	call	#__system___getiolock_0145
01128     15 01 68 FC | 	wrlong	#0, result1
0112c     00 2A 06 F6 | 	mov	result1, #0
01130     62 5F 02 F6 | 	mov	arg02, local46
01134                 | ' 
01134                 | ' ''---------- Set the (x,y) position of cursor
01134                 | ' 
01134                 | ' cursor_x:=x
01134     34 0E 06 F1 | 	add	objptr, #52
01138     07 45 48 FC | 	wrbyte	#34, objptr
0113c                 | ' cursor_y:=y
0113c     01 0E 06 F1 | 	add	objptr, #1
01140     07 5F 42 FC | 	wrbyte	arg02, objptr
01144     35 0E 86 F1 | 	sub	objptr, #53
01148     00 5C 06 F6 | 	mov	arg01, #0
0114c     6C 64 B0 FD | 	call	#__system___getiolock_0145
01150     15 5D 02 F6 | 	mov	arg01, result1
01154     20 4E B0 FD | 	call	#__system___lockmem
01158     00 2A 06 F6 | 	mov	result1, #0
0115c     04 00 00 FF 
01160     10 0F 06 F1 | 	add	objptr, ##2320
01164     07 5F 02 FB | 	rdlong	arg02, objptr
01168     04 00 00 FF 
0116c     10 0F 86 F1 | 	sub	objptr, ##2320
01170     00 5C 06 F6 | 	mov	arg01, #0
01174     00 60 06 F6 | 	mov	arg03, #0
01178     0A 62 06 F6 | 	mov	arg04, #10
0117c     D8 51 B0 FD | 	call	#__system___basic_print_integer
01180     00 5C 06 F6 | 	mov	arg01, #0
01184     0A 5E 06 F6 | 	mov	arg02, #10
01188     00 60 06 F6 | 	mov	arg03, #0
0118c     34 51 B0 FD | 	call	#__system___basic_print_char
01190     01 2A 06 F6 | 	mov	result1, #1
01194     00 5C 06 F6 | 	mov	arg01, #0
01198     20 64 B0 FD | 	call	#__system___getiolock_0145
0119c     15 01 68 FC | 	wrlong	#0, result1
011a0     00 2A 06 F6 | 	mov	result1, #0
011a4     62 5F 02 F6 | 	mov	arg02, local46
011a8                 | ' 
011a8                 | ' ''---------- Set the (x,y) position of cursor
011a8                 | ' 
011a8                 | ' cursor_x:=x
011a8     34 0E 06 F1 | 	add	objptr, #52
011ac     07 4B 48 FC | 	wrbyte	#37, objptr
011b0                 | ' cursor_y:=y
011b0     01 0E 06 F1 | 	add	objptr, #1
011b4     07 5F 42 FC | 	wrbyte	arg02, objptr
011b8     35 0E 86 F1 | 	sub	objptr, #53
011bc     00 5C 06 F6 | 	mov	arg01, #0
011c0     F8 63 B0 FD | 	call	#__system___getiolock_0145
011c4     15 5D 02 F6 | 	mov	arg01, result1
011c8     AC 4D B0 FD | 	call	#__system___lockmem
011cc     00 2A 06 F6 | 	mov	result1, #0
011d0     04 00 00 FF 
011d4     04 0F 06 F1 | 	add	objptr, ##2308
011d8     07 5F 02 FB | 	rdlong	arg02, objptr
011dc     04 00 00 FF 
011e0     04 0F 86 F1 | 	sub	objptr, ##2308
011e4     00 5C 06 F6 | 	mov	arg01, #0
011e8     00 60 06 F6 | 	mov	arg03, #0
011ec     0A 62 06 F6 | 	mov	arg04, #10
011f0     64 51 B0 FD | 	call	#__system___basic_print_integer
011f4     00 5C 06 F6 | 	mov	arg01, #0
011f8     0A 5E 06 F6 | 	mov	arg02, #10
011fc     00 60 06 F6 | 	mov	arg03, #0
01200     C0 50 B0 FD | 	call	#__system___basic_print_char
01204     01 2A 06 F6 | 	mov	result1, #1
01208     00 5C 06 F6 | 	mov	arg01, #0
0120c     AC 63 B0 FD | 	call	#__system___getiolock_0145
01210     15 01 68 FC | 	wrlong	#0, result1
01214     00 2A 06 F6 | 	mov	result1, #0
01218     62 5F 02 F6 | 	mov	arg02, local46
0121c                 | ' 
0121c                 | ' ''---------- Set the (x,y) position of cursor
0121c                 | ' 
0121c                 | ' cursor_x:=x
0121c     34 0E 06 F1 | 	add	objptr, #52
01220     07 57 48 FC | 	wrbyte	#43, objptr
01224                 | ' cursor_y:=y
01224     01 0E 06 F1 | 	add	objptr, #1
01228     07 5F 42 FC | 	wrbyte	arg02, objptr
0122c     35 0E 86 F1 | 	sub	objptr, #53
01230     00 5C 06 F6 | 	mov	arg01, #0
01234     84 63 B0 FD | 	call	#__system___getiolock_0145
01238     15 5D 02 F6 | 	mov	arg01, result1
0123c     38 4D B0 FD | 	call	#__system___lockmem
01240     00 2A 06 F6 | 	mov	result1, #0
01244     04 00 00 FF 
01248     08 0F 06 F1 | 	add	objptr, ##2312
0124c     07 5F 02 FB | 	rdlong	arg02, objptr
01250     04 00 00 FF 
01254     08 0F 86 F1 | 	sub	objptr, ##2312
01258     00 5C 06 F6 | 	mov	arg01, #0
0125c     00 60 06 F6 | 	mov	arg03, #0
01260     0A 62 06 F6 | 	mov	arg04, #10
01264     F0 50 B0 FD | 	call	#__system___basic_print_integer
01268     00 5C 06 F6 | 	mov	arg01, #0
0126c     0A 5E 06 F6 | 	mov	arg02, #10
01270     00 60 06 F6 | 	mov	arg03, #0
01274     4C 50 B0 FD | 	call	#__system___basic_print_char
01278     01 2A 06 F6 | 	mov	result1, #1
0127c     00 5C 06 F6 | 	mov	arg01, #0
01280     38 63 B0 FD | 	call	#__system___getiolock_0145
01284     15 01 68 FC | 	wrlong	#0, result1
01288     00 2A 06 F6 | 	mov	result1, #0
0128c                 | LR__0013
0128c                 | ' if i>=16 then position 57,i-11 :print sn$(i) : position 80,i-11 : print sl : position 87,i-11 : print ft: position 90,i-11 : print vl :position 93,i-11 : print rp : position 99,i-11 : print rl
0128c     10 92 5E F2 | 	cmps	local21, #16 wcz
01290     C4 02 90 CD |  if_b	jmp	#LR__0014
01294     49 C9 02 F6 | 	mov	local48, local21
01298     0B C8 86 F1 | 	sub	local48, #11
0129c     64 5F 02 F6 | 	mov	arg02, local48
012a0                 | ' 
012a0                 | ' ''---------- Set the (x,y) position of cursor
012a0                 | ' 
012a0                 | ' cursor_x:=x
012a0     34 0E 06 F1 | 	add	objptr, #52
012a4     07 73 48 FC | 	wrbyte	#57, objptr
012a8                 | ' cursor_y:=y
012a8     01 0E 06 F1 | 	add	objptr, #1
012ac     07 5F 42 FC | 	wrbyte	arg02, objptr
012b0     49 CB 02 F6 | 	mov	local49, local21
012b4     02 CA 66 F0 | 	shl	local49, #2
012b8     04 00 00 FF 
012bc     17 0E 06 F1 | 	add	objptr, ##2071
012c0     07 CB 02 F1 | 	add	local49, objptr
012c4     00 5C 06 F6 | 	mov	arg01, #0
012c8     04 00 00 FF 
012cc     4C 0E 86 F1 | 	sub	objptr, ##2124
012d0     E8 62 B0 FD | 	call	#__system___getiolock_0145
012d4     15 5D 02 F6 | 	mov	arg01, result1
012d8     9C 4C B0 FD | 	call	#__system___lockmem
012dc     00 2A 06 F6 | 	mov	result1, #0
012e0     65 5F 02 FB | 	rdlong	arg02, local49
012e4     00 5C 06 F6 | 	mov	arg01, #0
012e8     00 60 06 F6 | 	mov	arg03, #0
012ec     20 50 B0 FD | 	call	#__system___basic_print_string
012f0     00 5C 06 F6 | 	mov	arg01, #0
012f4     0A 5E 06 F6 | 	mov	arg02, #10
012f8     00 60 06 F6 | 	mov	arg03, #0
012fc     C4 4F B0 FD | 	call	#__system___basic_print_char
01300     01 2A 06 F6 | 	mov	result1, #1
01304     00 5C 06 F6 | 	mov	arg01, #0
01308     B0 62 B0 FD | 	call	#__system___getiolock_0145
0130c     15 01 68 FC | 	wrlong	#0, result1
01310     00 2A 06 F6 | 	mov	result1, #0
01314     64 5F 02 F6 | 	mov	arg02, local48
01318                 | ' 
01318                 | ' ''---------- Set the (x,y) position of cursor
01318                 | ' 
01318                 | ' cursor_x:=x
01318     34 0E 06 F1 | 	add	objptr, #52
0131c     07 A1 48 FC | 	wrbyte	#80, objptr
01320                 | ' cursor_y:=y
01320     01 0E 06 F1 | 	add	objptr, #1
01324     07 5F 42 FC | 	wrbyte	arg02, objptr
01328     35 0E 86 F1 | 	sub	objptr, #53
0132c     00 5C 06 F6 | 	mov	arg01, #0
01330     88 62 B0 FD | 	call	#__system___getiolock_0145
01334     15 5D 02 F6 | 	mov	arg01, result1
01338     3C 4C B0 FD | 	call	#__system___lockmem
0133c     00 2A 06 F6 | 	mov	result1, #0
01340     04 00 00 FF 
01344     00 0F 06 F1 | 	add	objptr, ##2304
01348     07 5F 02 FB | 	rdlong	arg02, objptr
0134c     04 00 00 FF 
01350     00 0F 86 F1 | 	sub	objptr, ##2304
01354     00 5C 06 F6 | 	mov	arg01, #0
01358     00 60 06 F6 | 	mov	arg03, #0
0135c     0A 62 06 F6 | 	mov	arg04, #10
01360     F4 4F B0 FD | 	call	#__system___basic_print_integer
01364     00 5C 06 F6 | 	mov	arg01, #0
01368     0A 5E 06 F6 | 	mov	arg02, #10
0136c     00 60 06 F6 | 	mov	arg03, #0
01370     50 4F B0 FD | 	call	#__system___basic_print_char
01374     01 2A 06 F6 | 	mov	result1, #1
01378     00 5C 06 F6 | 	mov	arg01, #0
0137c     3C 62 B0 FD | 	call	#__system___getiolock_0145
01380     15 01 68 FC | 	wrlong	#0, result1
01384     00 2A 06 F6 | 	mov	result1, #0
01388     64 5F 02 F6 | 	mov	arg02, local48
0138c                 | ' 
0138c                 | ' ''---------- Set the (x,y) position of cursor
0138c                 | ' 
0138c                 | ' cursor_x:=x
0138c     34 0E 06 F1 | 	add	objptr, #52
01390     07 AF 48 FC | 	wrbyte	#87, objptr
01394                 | ' cursor_y:=y
01394     01 0E 06 F1 | 	add	objptr, #1
01398     07 5F 42 FC | 	wrbyte	arg02, objptr
0139c     35 0E 86 F1 | 	sub	objptr, #53
013a0     00 5C 06 F6 | 	mov	arg01, #0
013a4     14 62 B0 FD | 	call	#__system___getiolock_0145
013a8     15 5D 02 F6 | 	mov	arg01, result1
013ac     C8 4B B0 FD | 	call	#__system___lockmem
013b0     00 2A 06 F6 | 	mov	result1, #0
013b4     04 00 00 FF 
013b8     0C 0F 06 F1 | 	add	objptr, ##2316
013bc     07 5F 02 FB | 	rdlong	arg02, objptr
013c0     04 00 00 FF 
013c4     0C 0F 86 F1 | 	sub	objptr, ##2316
013c8     00 5C 06 F6 | 	mov	arg01, #0
013cc     00 60 06 F6 | 	mov	arg03, #0
013d0     0A 62 06 F6 | 	mov	arg04, #10
013d4     80 4F B0 FD | 	call	#__system___basic_print_integer
013d8     00 5C 06 F6 | 	mov	arg01, #0
013dc     0A 5E 06 F6 | 	mov	arg02, #10
013e0     00 60 06 F6 | 	mov	arg03, #0
013e4     DC 4E B0 FD | 	call	#__system___basic_print_char
013e8     01 2A 06 F6 | 	mov	result1, #1
013ec     00 5C 06 F6 | 	mov	arg01, #0
013f0     C8 61 B0 FD | 	call	#__system___getiolock_0145
013f4     15 01 68 FC | 	wrlong	#0, result1
013f8     00 2A 06 F6 | 	mov	result1, #0
013fc     64 5F 02 F6 | 	mov	arg02, local48
01400                 | ' 
01400                 | ' ''---------- Set the (x,y) position of cursor
01400                 | ' 
01400                 | ' cursor_x:=x
01400     34 0E 06 F1 | 	add	objptr, #52
01404     07 B5 48 FC | 	wrbyte	#90, objptr
01408                 | ' cursor_y:=y
01408     01 0E 06 F1 | 	add	objptr, #1
0140c     07 5F 42 FC | 	wrbyte	arg02, objptr
01410     35 0E 86 F1 | 	sub	objptr, #53
01414     00 5C 06 F6 | 	mov	arg01, #0
01418     A0 61 B0 FD | 	call	#__system___getiolock_0145
0141c     15 5D 02 F6 | 	mov	arg01, result1
01420     54 4B B0 FD | 	call	#__system___lockmem
01424     00 2A 06 F6 | 	mov	result1, #0
01428     04 00 00 FF 
0142c     10 0F 06 F1 | 	add	objptr, ##2320
01430     07 5F 02 FB | 	rdlong	arg02, objptr
01434     04 00 00 FF 
01438     10 0F 86 F1 | 	sub	objptr, ##2320
0143c     00 5C 06 F6 | 	mov	arg01, #0
01440     00 60 06 F6 | 	mov	arg03, #0
01444     0A 62 06 F6 | 	mov	arg04, #10
01448     0C 4F B0 FD | 	call	#__system___basic_print_integer
0144c     00 5C 06 F6 | 	mov	arg01, #0
01450     0A 5E 06 F6 | 	mov	arg02, #10
01454     00 60 06 F6 | 	mov	arg03, #0
01458     68 4E B0 FD | 	call	#__system___basic_print_char
0145c     01 2A 06 F6 | 	mov	result1, #1
01460     00 5C 06 F6 | 	mov	arg01, #0
01464     54 61 B0 FD | 	call	#__system___getiolock_0145
01468     15 01 68 FC | 	wrlong	#0, result1
0146c     00 2A 06 F6 | 	mov	result1, #0
01470     64 5F 02 F6 | 	mov	arg02, local48
01474                 | ' 
01474                 | ' ''---------- Set the (x,y) position of cursor
01474                 | ' 
01474                 | ' cursor_x:=x
01474     34 0E 06 F1 | 	add	objptr, #52
01478     07 BB 48 FC | 	wrbyte	#93, objptr
0147c                 | ' cursor_y:=y
0147c     01 0E 06 F1 | 	add	objptr, #1
01480     07 5F 42 FC | 	wrbyte	arg02, objptr
01484     35 0E 86 F1 | 	sub	objptr, #53
01488     00 5C 06 F6 | 	mov	arg01, #0
0148c     2C 61 B0 FD | 	call	#__system___getiolock_0145
01490     15 5D 02 F6 | 	mov	arg01, result1
01494     E0 4A B0 FD | 	call	#__system___lockmem
01498     00 2A 06 F6 | 	mov	result1, #0
0149c     04 00 00 FF 
014a0     04 0F 06 F1 | 	add	objptr, ##2308
014a4     07 5F 02 FB | 	rdlong	arg02, objptr
014a8     04 00 00 FF 
014ac     04 0F 86 F1 | 	sub	objptr, ##2308
014b0     00 5C 06 F6 | 	mov	arg01, #0
014b4     00 60 06 F6 | 	mov	arg03, #0
014b8     0A 62 06 F6 | 	mov	arg04, #10
014bc     98 4E B0 FD | 	call	#__system___basic_print_integer
014c0     00 5C 06 F6 | 	mov	arg01, #0
014c4     0A 5E 06 F6 | 	mov	arg02, #10
014c8     00 60 06 F6 | 	mov	arg03, #0
014cc     F4 4D B0 FD | 	call	#__system___basic_print_char
014d0     01 2A 06 F6 | 	mov	result1, #1
014d4     00 5C 06 F6 | 	mov	arg01, #0
014d8     E0 60 B0 FD | 	call	#__system___getiolock_0145
014dc     15 01 68 FC | 	wrlong	#0, result1
014e0     00 2A 06 F6 | 	mov	result1, #0
014e4     64 5F 02 F6 | 	mov	arg02, local48
014e8                 | ' 
014e8                 | ' ''---------- Set the (x,y) position of cursor
014e8                 | ' 
014e8                 | ' cursor_x:=x
014e8     34 0E 06 F1 | 	add	objptr, #52
014ec     07 C7 48 FC | 	wrbyte	#99, objptr
014f0                 | ' cursor_y:=y
014f0     01 0E 06 F1 | 	add	objptr, #1
014f4     07 5F 42 FC | 	wrbyte	arg02, objptr
014f8     35 0E 86 F1 | 	sub	objptr, #53
014fc     00 5C 06 F6 | 	mov	arg01, #0
01500     B8 60 B0 FD | 	call	#__system___getiolock_0145
01504     15 5D 02 F6 | 	mov	arg01, result1
01508     6C 4A B0 FD | 	call	#__system___lockmem
0150c     00 2A 06 F6 | 	mov	result1, #0
01510     04 00 00 FF 
01514     08 0F 06 F1 | 	add	objptr, ##2312
01518     07 5F 02 FB | 	rdlong	arg02, objptr
0151c     04 00 00 FF 
01520     08 0F 86 F1 | 	sub	objptr, ##2312
01524     00 5C 06 F6 | 	mov	arg01, #0
01528     00 60 06 F6 | 	mov	arg03, #0
0152c     0A 62 06 F6 | 	mov	arg04, #10
01530     24 4E B0 FD | 	call	#__system___basic_print_integer
01534     00 5C 06 F6 | 	mov	arg01, #0
01538     0A 5E 06 F6 | 	mov	arg02, #10
0153c     00 60 06 F6 | 	mov	arg03, #0
01540     80 4D B0 FD | 	call	#__system___basic_print_char
01544     01 2A 06 F6 | 	mov	result1, #1
01548     00 5C 06 F6 | 	mov	arg01, #0
0154c     6C 60 B0 FD | 	call	#__system___getiolock_0145
01550     15 01 68 FC | 	wrlong	#0, result1
01554     00 2A 06 F6 | 	mov	result1, #0
01558                 | LR__0014
01558     01 92 06 F1 | 	add	local21, #1
0155c     1E AE 06 F1 | 	add	local35, #30
01560     04 B0 06 F1 | 	add	local36, #4
01564     1E B2 06 F1 | 	add	local37, #30
01568     EC F8 9F FD | 	jmp	#LR__0010
0156c                 | LR__0015
0156c                 | ' print
0156c     00 5C 06 F6 | 	mov	arg01, #0
01570     48 60 B0 FD | 	call	#__system___getiolock_0145
01574     15 5D 02 F6 | 	mov	arg01, result1
01578     FC 49 B0 FD | 	call	#__system___lockmem
0157c     00 2A 06 F6 | 	mov	result1, #0
01580     00 5C 06 F6 | 	mov	arg01, #0
01584     0A 5E 06 F6 | 	mov	arg02, #10
01588     00 60 06 F6 | 	mov	arg03, #0
0158c     34 4D B0 FD | 	call	#__system___basic_print_char
01590     01 2A 06 F6 | 	mov	result1, #1
01594     00 5C 06 F6 | 	mov	arg01, #0
01598     20 60 B0 FD | 	call	#__system___getiolock_0145
0159c     15 01 68 FC | 	wrlong	#0, result1
015a0     03 00 00 FF 
015a4     2C 0F 06 F1 | 	add	objptr, ##1836
015a8     03 00 00 FF 
015ac     E4 16 06 F1 | 	add	ptr__audio012_spin2_dat__, ##1764
015b0                 | ' 
015b0                 | ' 
015b0                 | ' channel1[0]:=@null
015b0     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
015b4                 | ' channel1[1]:=0
015b4     04 0E 06 F1 | 	add	objptr, #4
015b8     07 01 68 FC | 	wrlong	#0, objptr
015bc                 | ' channel1[2]:=0
015bc     04 0E 06 F1 | 	add	objptr, #4
015c0     07 01 68 FC | 	wrlong	#0, objptr
015c4                 | ' channel1[3]:=2
015c4     04 0E 06 F1 | 	add	objptr, #4
015c8     07 05 68 FC | 	wrlong	#2, objptr
015cc                 | ' channel1[4]:=0
015cc     04 0E 06 F1 | 	add	objptr, #4
015d0     07 01 68 FC | 	wrlong	#0, objptr
015d4                 | ' channel1[5]:=8192
015d4     04 0E 06 F1 | 	add	objptr, #4
015d8     10 00 80 FF 
015dc     07 01 68 FC | 	wrlong	##8192, objptr
015e0                 | ' channel1[6]:=101
015e0     04 0E 06 F1 | 	add	objptr, #4
015e4     07 CB 68 FC | 	wrlong	#101, objptr
015e8                 | ' channel1[7]:=2
015e8     04 0E 06 F1 | 	add	objptr, #4
015ec     07 05 68 FC | 	wrlong	#2, objptr
015f0                 | ' 
015f0                 | ' channel2[0]:=@null
015f0     08 0E 06 F1 | 	add	objptr, #8
015f4     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
015f8                 | ' channel2[1]:=0
015f8     04 0E 06 F1 | 	add	objptr, #4
015fc     07 01 68 FC | 	wrlong	#0, objptr
01600                 | ' channel2[2]:=0
01600     04 0E 06 F1 | 	add	objptr, #4
01604     07 01 68 FC | 	wrlong	#0, objptr
01608                 | ' channel2[3]:=2
01608     04 0E 06 F1 | 	add	objptr, #4
0160c     07 05 68 FC | 	wrlong	#2, objptr
01610                 | ' channel2[4]:=0
01610     04 0E 06 F1 | 	add	objptr, #4
01614     07 01 68 FC | 	wrlong	#0, objptr
01618                 | ' channel2[5]:=8192
01618     04 0E 06 F1 | 	add	objptr, #4
0161c     10 00 80 FF 
01620     07 01 68 FC | 	wrlong	##8192, objptr
01624                 | ' channel2[6]:=103
01624     04 0E 06 F1 | 	add	objptr, #4
01628     07 CF 68 FC | 	wrlong	#103, objptr
0162c                 | ' channel2[7]:=2
0162c     04 0E 06 F1 | 	add	objptr, #4
01630     07 05 68 FC | 	wrlong	#2, objptr
01634                 | ' 
01634                 | ' channel3[0]:=@null
01634     08 0E 06 F1 | 	add	objptr, #8
01638     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
0163c                 | ' channel3[1]:=0
0163c     04 0E 06 F1 | 	add	objptr, #4
01640     07 01 68 FC | 	wrlong	#0, objptr
01644                 | ' channel3[2]:=0
01644     04 0E 06 F1 | 	add	objptr, #4
01648     07 01 68 FC | 	wrlong	#0, objptr
0164c                 | ' channel3[3]:=2
0164c     04 0E 06 F1 | 	add	objptr, #4
01650     07 05 68 FC | 	wrlong	#2, objptr
01654                 | ' channel3[4]:=0
01654     04 0E 06 F1 | 	add	objptr, #4
01658     07 01 68 FC | 	wrlong	#0, objptr
0165c                 | ' channel3[5]:=8192
0165c     04 0E 06 F1 | 	add	objptr, #4
01660     10 00 80 FF 
01664     07 01 68 FC | 	wrlong	##8192, objptr
01668                 | ' channel3[6]:=107
01668     04 0E 06 F1 | 	add	objptr, #4
0166c     07 D7 68 FC | 	wrlong	#107, objptr
01670                 | ' channel3[7]:=2
01670     04 0E 06 F1 | 	add	objptr, #4
01674     07 05 68 FC | 	wrlong	#2, objptr
01678                 | ' 
01678                 | ' channel4[0]:=@null
01678     08 0E 06 F1 | 	add	objptr, #8
0167c     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01680                 | ' channel4[1]:=0
01680     04 0E 06 F1 | 	add	objptr, #4
01684     07 01 68 FC | 	wrlong	#0, objptr
01688                 | ' channel4[2]:=0
01688     04 0E 06 F1 | 	add	objptr, #4
0168c     07 01 68 FC | 	wrlong	#0, objptr
01690                 | ' channel4[3]:=2
01690     04 0E 06 F1 | 	add	objptr, #4
01694     07 05 68 FC | 	wrlong	#2, objptr
01698                 | ' channel4[4]:=0
01698     04 0E 06 F1 | 	add	objptr, #4
0169c     07 01 68 FC | 	wrlong	#0, objptr
016a0                 | ' channel4[5]:=8192
016a0     04 0E 06 F1 | 	add	objptr, #4
016a4     10 00 80 FF 
016a8     07 01 68 FC | 	wrlong	##8192, objptr
016ac                 | ' channel4[6]:=109
016ac     04 0E 06 F1 | 	add	objptr, #4
016b0     07 DB 68 FC | 	wrlong	#109, objptr
016b4                 | ' channel4[7]:=2
016b4     04 0E 06 F1 | 	add	objptr, #4
016b8     07 05 68 FC | 	wrlong	#2, objptr
016bc                 | ' channel4[8]:=1
016bc     04 0E 06 F1 | 	add	objptr, #4
016c0     07 03 68 FC | 	wrlong	#1, objptr
016c4                 | ' 
016c4                 | ' channel5[0]:=@null
016c4     04 0E 06 F1 | 	add	objptr, #4
016c8     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
016cc                 | ' channel5[1]:=0
016cc     04 0E 06 F1 | 	add	objptr, #4
016d0     07 01 68 FC | 	wrlong	#0, objptr
016d4                 | ' channel5[2]:=0
016d4     04 0E 06 F1 | 	add	objptr, #4
016d8     07 01 68 FC | 	wrlong	#0, objptr
016dc                 | ' channel5[3]:=2
016dc     04 0E 06 F1 | 	add	objptr, #4
016e0     07 05 68 FC | 	wrlong	#2, objptr
016e4                 | ' channel5[4]:=0
016e4     04 0E 06 F1 | 	add	objptr, #4
016e8     07 01 68 FC | 	wrlong	#0, objptr
016ec                 | ' channel5[5]:=8192
016ec     04 0E 06 F1 | 	add	objptr, #4
016f0     10 00 80 FF 
016f4     07 01 68 FC | 	wrlong	##8192, objptr
016f8                 | ' channel5[6]:=113
016f8     04 0E 06 F1 | 	add	objptr, #4
016fc     07 E3 68 FC | 	wrlong	#113, objptr
01700                 | ' channel5[7]:=2
01700     04 0E 06 F1 | 	add	objptr, #4
01704     07 05 68 FC | 	wrlong	#2, objptr
01708                 | ' 
01708                 | ' channel6[0]:=@null
01708     08 0E 06 F1 | 	add	objptr, #8
0170c     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01710                 | ' channel6[1]:=0
01710     04 0E 06 F1 | 	add	objptr, #4
01714     07 01 68 FC | 	wrlong	#0, objptr
01718                 | ' channel6[2]:=0
01718     04 0E 06 F1 | 	add	objptr, #4
0171c     07 01 68 FC | 	wrlong	#0, objptr
01720                 | ' channel6[3]:=2
01720     04 0E 06 F1 | 	add	objptr, #4
01724     07 05 68 FC | 	wrlong	#2, objptr
01728                 | ' channel6[4]:=0
01728     04 0E 06 F1 | 	add	objptr, #4
0172c     07 01 68 FC | 	wrlong	#0, objptr
01730                 | ' channel6[5]:=8192
01730     04 0E 06 F1 | 	add	objptr, #4
01734     10 00 80 FF 
01738     07 01 68 FC | 	wrlong	##8192, objptr
0173c                 | ' channel6[6]:=127
0173c     04 0E 06 F1 | 	add	objptr, #4
01740     07 FF 68 FC | 	wrlong	#127, objptr
01744                 | ' channel6[7]:=2
01744     04 0E 06 F1 | 	add	objptr, #4
01748     07 05 68 FC | 	wrlong	#2, objptr
0174c                 | ' 
0174c                 | ' channel7[0]:=@null
0174c     08 0E 06 F1 | 	add	objptr, #8
01750     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01754                 | ' channel7[1]:=0
01754     04 0E 06 F1 | 	add	objptr, #4
01758     07 01 68 FC | 	wrlong	#0, objptr
0175c                 | ' channel7[2]:=0
0175c     04 0E 06 F1 | 	add	objptr, #4
01760     07 01 68 FC | 	wrlong	#0, objptr
01764                 | ' channel7[3]:=2
01764     04 0E 06 F1 | 	add	objptr, #4
01768     07 05 68 FC | 	wrlong	#2, objptr
0176c                 | ' channel7[4]:=0
0176c     04 0E 06 F1 | 	add	objptr, #4
01770     07 01 68 FC | 	wrlong	#0, objptr
01774                 | ' channel7[5]:=8192
01774     04 0E 06 F1 | 	add	objptr, #4
01778     10 00 80 FF 
0177c     07 01 68 FC | 	wrlong	##8192, objptr
01780                 | ' channel7[6]:=131
01780     04 0E 06 F1 | 	add	objptr, #4
01784     07 07 69 FC | 	wrlong	#131, objptr
01788                 | ' channel7[7]:=2
01788     04 0E 06 F1 | 	add	objptr, #4
0178c     07 05 68 FC | 	wrlong	#2, objptr
01790                 | ' 
01790                 | ' channel8[0]:=@null
01790     08 0E 06 F1 | 	add	objptr, #8
01794     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01798                 | ' channel8[1]:=0
01798     04 0E 06 F1 | 	add	objptr, #4
0179c     07 01 68 FC | 	wrlong	#0, objptr
017a0                 | ' channel8[2]:=0
017a0     04 0E 06 F1 | 	add	objptr, #4
017a4     07 01 68 FC | 	wrlong	#0, objptr
017a8                 | ' channel8[3]:=2
017a8     04 0E 06 F1 | 	add	objptr, #4
017ac     07 05 68 FC | 	wrlong	#2, objptr
017b0                 | ' channel8[4]:=0
017b0     04 0E 06 F1 | 	add	objptr, #4
017b4     07 01 68 FC | 	wrlong	#0, objptr
017b8                 | ' channel8[5]:=8192
017b8     04 0E 06 F1 | 	add	objptr, #4
017bc     10 00 80 FF 
017c0     07 01 68 FC | 	wrlong	##8192, objptr
017c4                 | ' channel8[6]:=137
017c4     04 0E 06 F1 | 	add	objptr, #4
017c8     07 13 69 FC | 	wrlong	#137, objptr
017cc                 | ' channel8[7]:=2
017cc     04 0E 06 F1 | 	add	objptr, #4
017d0     07 05 68 FC | 	wrlong	#2, objptr
017d4                 | ' 
017d4                 | ' channel1[8]:=1
017d4     F8 0E 86 F1 | 	sub	objptr, #248
017d8     07 03 68 FC | 	wrlong	#1, objptr
017dc                 | ' channel2[8]:=1
017dc     24 0E 06 F1 | 	add	objptr, #36
017e0     07 03 68 FC | 	wrlong	#1, objptr
017e4                 | ' channel3[8]:=1
017e4     24 0E 06 F1 | 	add	objptr, #36
017e8     07 03 68 FC | 	wrlong	#1, objptr
017ec                 | ' channel4[8]:=1
017ec     24 0E 06 F1 | 	add	objptr, #36
017f0     07 03 68 FC | 	wrlong	#1, objptr
017f4                 | ' channel5[8]:=1
017f4     24 0E 06 F1 | 	add	objptr, #36
017f8     07 03 68 FC | 	wrlong	#1, objptr
017fc                 | ' channel6[8]:=1
017fc     24 0E 06 F1 | 	add	objptr, #36
01800     07 03 68 FC | 	wrlong	#1, objptr
01804                 | ' channel7[8]:=1
01804     24 0E 06 F1 | 	add	objptr, #36
01808     07 03 68 FC | 	wrlong	#1, objptr
0180c                 | ' channel8[8]:=1
0180c     24 0E 06 F1 | 	add	objptr, #36
01810     07 03 68 FC | 	wrlong	#1, objptr
01814     1C 0F 86 F1 | 	sub	objptr, #284
01818                 | ' 
01818                 | ' cog:=coginit(16,@audio,@channel1)
01818     03 00 00 FF 
0181c     E4 16 86 F1 | 	sub	ptr__audio012_spin2_dat__, ##1764
01820     0B 5F 02 F6 | 	mov	arg02, ptr__audio012_spin2_dat__
01824     07 61 02 F6 | 	mov	arg03, objptr
01828     10 5C 06 F6 | 	mov	arg01, #16
0182c     28 60 62 FD | 	setq	arg03
01830     2F 5D F2 FC | 	coginit	arg01, arg02 wc
01834     01 5C 66 C6 |  if_b	neg	arg01, #1
01838     2E 2B 02 F6 | 	mov	result1, arg01
0183c                 | ' return cog
0183c     B0 0F 06 F1 | 	add	objptr, #432
01840     07 01 68 FC | 	wrlong	#0, objptr
01844     04 0E 06 F1 | 	add	objptr, #4
01848     07 01 68 FC | 	wrlong	#0, objptr
0184c     04 0E 06 F1 | 	add	objptr, #4
01850     07 01 68 FC | 	wrlong	#0, objptr
01854     04 0E 06 F1 | 	add	objptr, #4
01858     07 01 68 FC | 	wrlong	#0, objptr
0185c     04 00 00 FF 
01860     E8 0E 86 F1 | 	sub	objptr, ##2280
01864                 | ' getinfo(ma,samples)
01864                 | ' 
01864                 | ' paula.start
01864                 | ' 
01864                 | ' old1=0 : old2=0 :old3=0 : old4=0
01864                 | ' 
01864                 | ' do
01864                 | LR__0016
01864                 | ' 
01864                 | ' ''---------- Wait for start of vblank. Amount=delay in frames
01864                 | ' 
01864                 | ' repeat i from 1 to amount
01864     01 CC 06 F6 | 	mov	local50, #1
01868                 | LR__0017
01868                 | '   repeat until vblank==0
01868                 | LR__0018
01868     40 0E 06 F1 | 	add	objptr, #64
0186c     07 CF 0A FB | 	rdlong	local51, objptr wz
01870     40 0E 86 F1 | 	sub	objptr, #64
01874     0C 00 90 AD |  if_e	jmp	#LR__0019
01878                 | '     waitus(100)
01878     64 5C 06 F6 | 	mov	arg01, #100
0187c     3C 49 B0 FD | 	call	#__system___waitus
01880     E4 FF 9F FD | 	jmp	#LR__0018
01884                 | LR__0019
01884                 | '   repeat until vblank==1
01884                 | LR__0020
01884     40 0E 06 F1 | 	add	objptr, #64
01888     07 CF 02 FB | 	rdlong	local51, objptr
0188c     40 0E 86 F1 | 	sub	objptr, #64
01890     01 CE 0E F2 | 	cmp	local51, #1 wz
01894     0C 00 90 AD |  if_e	jmp	#LR__0021
01898                 | '     waitus(100)
01898     64 5C 06 F6 | 	mov	arg01, #100
0189c     1C 49 B0 FD | 	call	#__system___waitus
018a0     E0 FF 9F FD | 	jmp	#LR__0020
018a4                 | LR__0021
018a4     F0 CD 6E FB | 	djnz	local50, #LR__0017
018a8     02 00 00 FF 
018ac     30 0F 06 F1 | 	add	objptr, ##1328
018b0     FC 28 B0 FD | 	call	#_trackerplayer_spin2_tick
018b4     A7 0E 06 F1 | 	add	objptr, #167
018b8     07 7D 02 FB | 	rdlong	local10, objptr
018bc     55 0F 06 F1 | 	add	objptr, #341
018c0     07 7D 62 FC | 	wrlong	local10, objptr
018c4     04 0E 06 F1 | 	add	objptr, #4
018c8     07 03 68 FC | 	wrlong	#1, objptr
018cc     45 0F 86 F1 | 	sub	objptr, #325
018d0     07 7D E2 FA | 	rdword	local10, objptr
018d4     08 0E 06 F1 | 	add	objptr, #8
018d8     07 D1 02 FB | 	rdlong	local52, objptr
018dc     68 7D 82 F1 | 	sub	local10, local52
018e0     41 0F 06 F1 | 	add	objptr, #321
018e4     07 7D 62 FC | 	wrlong	local10, objptr
018e8     49 0F 86 F1 | 	sub	objptr, #329
018ec     07 7D E2 FA | 	rdword	local10, objptr
018f0     4D 0F 06 F1 | 	add	objptr, #333
018f4     07 7D 62 FC | 	wrlong	local10, objptr
018f8     09 0F 86 F1 | 	sub	objptr, #265
018fc     07 D3 02 FB | 	rdlong	local53, objptr
01900     10 0E 06 F1 | 	add	objptr, #16
01904     07 D1 02 FB | 	rdlong	local52, objptr
01908     68 D3 02 F1 | 	add	local53, local52
0190c     07 D2 66 F0 | 	shl	local53, #7
01910     FD 0E 06 F1 | 	add	objptr, #253
01914     07 D3 62 FC | 	wrlong	local53, objptr
01918     04 0E 06 F1 | 	add	objptr, #4
0191c     0A 00 80 FF 
01920     07 01 68 FC | 	wrlong	##5120, objptr
01924     31 0F 86 F1 | 	sub	objptr, #305
01928     07 7D 02 FB | 	rdlong	local10, objptr
0192c     10 0E 06 F1 | 	add	objptr, #16
01930     07 D1 02 FB | 	rdlong	local52, objptr
01934     68 7D 02 F1 | 	add	local10, local52
01938     25 0F 06 F1 | 	add	objptr, #293
0193c     07 7D 62 FC | 	wrlong	local10, objptr
01940     04 0E 06 F1 | 	add	objptr, #4
01944     07 03 68 FC | 	wrlong	#1, objptr
01948                 | ' 
01948                 | '     waitvbl
01948                 | '     tracker.tick
01948                 | '     
01948                 | ' 	paula.channel1(0)=tracker.currSamplePtr(0)
01948                 | ' 	paula.channel1(1)=1
01948                 | ' 	paula.channel1(2)=tracker.currsamplelength(0)-tracker.currrepeatLength(0)
01948                 | ' 	paula.channel1(3)=tracker.currsamplelength(0)
01948                 | ' 	paula.channel1(4)=(tracker.currVolume(0)+tracker.deltavolume(0))*128
01948                 | ' 	paula.channel1(5)=8192-3072
01948                 | ' 	paula.channel1(6)=tracker.currPeriod(0)+tracker.deltaperiod(0)
01948                 | ' 	paula.channel1(7)=1
01948                 | '     if tracker.trigger(0) <> old1 then paula.channel1(8)=0 :waitus 10 : paula.channel1(8)=1 :old1=tracker.trigger(0)
01948     22 0E 86 F1 | 	sub	objptr, #34
0194c     07 7D C2 FA | 	rdbyte	local10, objptr
01950     B6 0F 06 F1 | 	add	objptr, #438
01954     07 D1 02 FB | 	rdlong	local52, objptr
01958     04 00 00 FF 
0195c     DC 0E 86 F1 | 	sub	objptr, ##2268
01960     68 7D 0A F2 | 	cmp	local10, local52 wz
01964     40 00 90 AD |  if_e	jmp	#LR__0022
01968     03 00 00 FF 
0196c     4C 0F 06 F1 | 	add	objptr, ##1868
01970     07 01 68 FC | 	wrlong	#0, objptr
01974     03 00 00 FF 
01978     4C 0F 86 F1 | 	sub	objptr, ##1868
0197c     0A 5C 06 F6 | 	mov	arg01, #10
01980     38 48 B0 FD | 	call	#__system___waitus
01984     03 00 00 FF 
01988     4C 0F 06 F1 | 	add	objptr, ##1868
0198c     07 03 68 FC | 	wrlong	#1, objptr
01990     26 0E 86 F1 | 	sub	objptr, #38
01994     07 7D C2 FA | 	rdbyte	local10, objptr
01998     B6 0F 06 F1 | 	add	objptr, #438
0199c     07 7D 62 FC | 	wrlong	local10, objptr
019a0     04 00 00 FF 
019a4     DC 0E 86 F1 | 	sub	objptr, ##2268
019a8                 | LR__0022
019a8     03 00 00 FF 
019ac     50 0F 06 F1 | 	add	objptr, ##1872
019b0     07 7D 02 FB | 	rdlong	local10, objptr
019b4     9C 0F 06 F1 | 	add	objptr, #412
019b8     07 7D 62 FC | 	wrlong	local10, objptr
019bc     01 00 00 FF 
019c0     11 0F 86 F1 | 	sub	objptr, ##785
019c4     07 7D 02 FB | 	rdlong	local10, objptr
019c8     75 0F 06 F1 | 	add	objptr, #373
019cc     07 7D 62 FC | 	wrlong	local10, objptr
019d0     04 0E 06 F1 | 	add	objptr, #4
019d4     07 03 68 FC | 	wrlong	#1, objptr
019d8     67 0F 86 F1 | 	sub	objptr, #359
019dc     07 7D E2 FA | 	rdword	local10, objptr
019e0     0A 0E 06 F1 | 	add	objptr, #10
019e4     07 D1 02 FB | 	rdlong	local52, objptr
019e8     68 7D 82 F1 | 	sub	local10, local52
019ec     61 0F 06 F1 | 	add	objptr, #353
019f0     07 7D 62 FC | 	wrlong	local10, objptr
019f4     6B 0F 86 F1 | 	sub	objptr, #363
019f8     07 7D E2 FA | 	rdword	local10, objptr
019fc     6F 0F 06 F1 | 	add	objptr, #367
01a00     07 7D 62 FC | 	wrlong	local10, objptr
01a04     29 0F 86 F1 | 	sub	objptr, #297
01a08     07 D3 02 FB | 	rdlong	local53, objptr
01a0c     10 0E 06 F1 | 	add	objptr, #16
01a10     07 D1 02 FB | 	rdlong	local52, objptr
01a14     68 D3 02 F1 | 	add	local53, local52
01a18     07 D2 66 F0 | 	shl	local53, #7
01a1c     1D 0F 06 F1 | 	add	objptr, #285
01a20     07 D3 62 FC | 	wrlong	local53, objptr
01a24     04 0E 06 F1 | 	add	objptr, #4
01a28     16 00 80 FF 
01a2c     07 01 68 FC | 	wrlong	##11264, objptr
01a30     51 0F 86 F1 | 	sub	objptr, #337
01a34     07 7D 02 FB | 	rdlong	local10, objptr
01a38     10 0E 06 F1 | 	add	objptr, #16
01a3c     07 D1 02 FB | 	rdlong	local52, objptr
01a40     68 7D 02 F1 | 	add	local10, local52
01a44     45 0F 06 F1 | 	add	objptr, #325
01a48     07 7D 62 FC | 	wrlong	local10, objptr
01a4c     04 0E 06 F1 | 	add	objptr, #4
01a50     07 03 68 FC | 	wrlong	#1, objptr
01a54                 | ' 
01a54                 | '     old12=paula.channel2(0)
01a54                 | ' 	paula.channel2(0)=tracker.currSamplePtr(1)
01a54                 | ' 	paula.channel2(1)=1
01a54                 | ' 	paula.channel2(2)=tracker.currSampleLength(1)-tracker.currrepeatLength(1)
01a54                 | ' 	paula.channel2(3)=tracker.currSampleLength(1)
01a54                 | ' 	paula.channel2(4)=(tracker.currVolume(1)+tracker.deltavolume(1))*128
01a54                 | ' 	paula.channel2(5)=8192+3072
01a54                 | ' 	paula.channel2(6)=tracker.currPeriod(1)+tracker.deltaperiod(1)
01a54                 | ' 	paula.channel2(7)=1
01a54                 | '     if tracker.trigger(1) <> old2 then paula.channel2(8)=0 :waitus 10 : paula.channel2(8)=1 :old2=tracker.trigger(1)
01a54     45 0E 86 F1 | 	sub	objptr, #69
01a58     07 7D C2 FA | 	rdbyte	local10, objptr
01a5c     B9 0F 06 F1 | 	add	objptr, #441
01a60     07 D1 02 FB | 	rdlong	local52, objptr
01a64     04 00 00 FF 
01a68     E0 0E 86 F1 | 	sub	objptr, ##2272
01a6c     68 7D 0A F2 | 	cmp	local10, local52 wz
01a70     40 00 90 AD |  if_e	jmp	#LR__0023
01a74     03 00 00 FF 
01a78     70 0F 06 F1 | 	add	objptr, ##1904
01a7c     07 01 68 FC | 	wrlong	#0, objptr
01a80     03 00 00 FF 
01a84     70 0F 86 F1 | 	sub	objptr, ##1904
01a88     0A 5C 06 F6 | 	mov	arg01, #10
01a8c     2C 47 B0 FD | 	call	#__system___waitus
01a90     03 00 00 FF 
01a94     70 0F 06 F1 | 	add	objptr, ##1904
01a98     07 03 68 FC | 	wrlong	#1, objptr
01a9c     49 0E 86 F1 | 	sub	objptr, #73
01aa0     07 7D C2 FA | 	rdbyte	local10, objptr
01aa4     B9 0F 06 F1 | 	add	objptr, #441
01aa8     07 7D 62 FC | 	wrlong	local10, objptr
01aac     04 00 00 FF 
01ab0     E0 0E 86 F1 | 	sub	objptr, ##2272
01ab4                 | LR__0023
01ab4     03 00 00 FF 
01ab8     74 0F 06 F1 | 	add	objptr, ##1908
01abc     07 7D 02 FB | 	rdlong	local10, objptr
01ac0     7C 0F 06 F1 | 	add	objptr, #380
01ac4     07 7D 62 FC | 	wrlong	local10, objptr
01ac8     01 00 00 FF 
01acc     11 0F 86 F1 | 	sub	objptr, ##785
01ad0     07 7D 02 FB | 	rdlong	local10, objptr
01ad4     95 0F 06 F1 | 	add	objptr, #405
01ad8     07 7D 62 FC | 	wrlong	local10, objptr
01adc     04 0E 06 F1 | 	add	objptr, #4
01ae0     07 03 68 FC | 	wrlong	#1, objptr
01ae4     89 0F 86 F1 | 	sub	objptr, #393
01ae8     07 7D E2 FA | 	rdword	local10, objptr
01aec     0C 0E 06 F1 | 	add	objptr, #12
01af0     07 D1 02 FB | 	rdlong	local52, objptr
01af4     68 7D 82 F1 | 	sub	local10, local52
01af8     81 0F 06 F1 | 	add	objptr, #385
01afc     07 7D 62 FC | 	wrlong	local10, objptr
01b00     8D 0F 86 F1 | 	sub	objptr, #397
01b04     07 7D E2 FA | 	rdword	local10, objptr
01b08     91 0F 06 F1 | 	add	objptr, #401
01b0c     07 7D 62 FC | 	wrlong	local10, objptr
01b10     49 0F 86 F1 | 	sub	objptr, #329
01b14     07 D3 02 FB | 	rdlong	local53, objptr
01b18     10 0E 06 F1 | 	add	objptr, #16
01b1c     07 D1 02 FB | 	rdlong	local52, objptr
01b20     68 D3 02 F1 | 	add	local53, local52
01b24     07 D2 66 F0 | 	shl	local53, #7
01b28     3D 0F 06 F1 | 	add	objptr, #317
01b2c     07 D3 62 FC | 	wrlong	local53, objptr
01b30     04 0E 06 F1 | 	add	objptr, #4
01b34     12 00 80 FF 
01b38     07 01 68 FC | 	wrlong	##9216, objptr
01b3c     71 0F 86 F1 | 	sub	objptr, #369
01b40     07 7D 02 FB | 	rdlong	local10, objptr
01b44     10 0E 06 F1 | 	add	objptr, #16
01b48     07 D1 02 FB | 	rdlong	local52, objptr
01b4c     68 7D 02 F1 | 	add	local10, local52
01b50     65 0F 06 F1 | 	add	objptr, #357
01b54     07 7D 62 FC | 	wrlong	local10, objptr
01b58     04 0E 06 F1 | 	add	objptr, #4
01b5c     07 03 68 FC | 	wrlong	#1, objptr
01b60                 | ' 
01b60                 | '     old13=paula.channel3(0)
01b60                 | ' 	paula.channel3(0)=tracker.currSamplePtr(2)
01b60                 | ' 	paula.channel3(1)=1
01b60                 | ' 	paula.channel3(2)=tracker.currSampleLength(2)-tracker.currrepeatLength(2)
01b60                 | ' 	paula.channel3(3)=tracker.currSampleLength(2)
01b60                 | ' 	paula.channel3(4)=(tracker.currVolume(2)+tracker.deltavolume(2))*128
01b60                 | ' 	paula.channel3(5)=8192+1024
01b60                 | ' 	paula.channel3(6)=tracker.currPeriod(2)+tracker.deltaperiod(2)
01b60                 | ' 	paula.channel3(7)=1
01b60                 | '     if tracker.trigger(2) <> old3 then paula.channel3(8)=0 :waitus 10 : paula.channel3(8)=1 :old3=tracker.trigger(2)
01b60     68 0E 86 F1 | 	sub	objptr, #104
01b64     07 7D C2 FA | 	rdbyte	local10, objptr
01b68     BC 0F 06 F1 | 	add	objptr, #444
01b6c     07 D1 02 FB | 	rdlong	local52, objptr
01b70     04 00 00 FF 
01b74     E4 0E 86 F1 | 	sub	objptr, ##2276
01b78     68 7D 0A F2 | 	cmp	local10, local52 wz
01b7c     40 00 90 AD |  if_e	jmp	#LR__0024
01b80     03 00 00 FF 
01b84     94 0F 06 F1 | 	add	objptr, ##1940
01b88     07 01 68 FC | 	wrlong	#0, objptr
01b8c     03 00 00 FF 
01b90     94 0F 86 F1 | 	sub	objptr, ##1940
01b94     0A 5C 06 F6 | 	mov	arg01, #10
01b98     20 46 B0 FD | 	call	#__system___waitus
01b9c     03 00 00 FF 
01ba0     94 0F 06 F1 | 	add	objptr, ##1940
01ba4     07 03 68 FC | 	wrlong	#1, objptr
01ba8     6C 0E 86 F1 | 	sub	objptr, #108
01bac     07 7D C2 FA | 	rdbyte	local10, objptr
01bb0     BC 0F 06 F1 | 	add	objptr, #444
01bb4     07 7D 62 FC | 	wrlong	local10, objptr
01bb8     04 00 00 FF 
01bbc     E4 0E 86 F1 | 	sub	objptr, ##2276
01bc0                 | LR__0024
01bc0     03 00 00 FF 
01bc4     98 0F 06 F1 | 	add	objptr, ##1944
01bc8     07 7D 02 FB | 	rdlong	local10, objptr
01bcc     5C 0F 06 F1 | 	add	objptr, #348
01bd0     07 7D 62 FC | 	wrlong	local10, objptr
01bd4     01 00 00 FF 
01bd8     11 0F 86 F1 | 	sub	objptr, ##785
01bdc     07 7D 02 FB | 	rdlong	local10, objptr
01be0     B5 0F 06 F1 | 	add	objptr, #437
01be4     07 7D 62 FC | 	wrlong	local10, objptr
01be8     04 0E 06 F1 | 	add	objptr, #4
01bec     07 03 68 FC | 	wrlong	#1, objptr
01bf0     AB 0F 86 F1 | 	sub	objptr, #427
01bf4     07 7D E2 FA | 	rdword	local10, objptr
01bf8     0E 0E 06 F1 | 	add	objptr, #14
01bfc     07 D1 02 FB | 	rdlong	local52, objptr
01c00     68 7D 82 F1 | 	sub	local10, local52
01c04     A1 0F 06 F1 | 	add	objptr, #417
01c08     07 7D 62 FC | 	wrlong	local10, objptr
01c0c     AF 0F 86 F1 | 	sub	objptr, #431
01c10     07 7D E2 FA | 	rdword	local10, objptr
01c14     B3 0F 06 F1 | 	add	objptr, #435
01c18     07 7D 62 FC | 	wrlong	local10, objptr
01c1c     69 0F 86 F1 | 	sub	objptr, #361
01c20     07 D3 02 FB | 	rdlong	local53, objptr
01c24     10 0E 06 F1 | 	add	objptr, #16
01c28     07 D1 02 FB | 	rdlong	local52, objptr
01c2c     68 D3 02 F1 | 	add	local53, local52
01c30     07 D2 66 F0 | 	shl	local53, #7
01c34     5D 0F 06 F1 | 	add	objptr, #349
01c38     07 D3 62 FC | 	wrlong	local53, objptr
01c3c     04 0E 06 F1 | 	add	objptr, #4
01c40     0E 00 80 FF 
01c44     07 01 68 FC | 	wrlong	##7168, objptr
01c48     91 0F 86 F1 | 	sub	objptr, #401
01c4c     07 7D 02 FB | 	rdlong	local10, objptr
01c50     10 0E 06 F1 | 	add	objptr, #16
01c54     07 D1 02 FB | 	rdlong	local52, objptr
01c58     68 7D 02 F1 | 	add	local10, local52
01c5c     85 0F 06 F1 | 	add	objptr, #389
01c60     07 7D 62 FC | 	wrlong	local10, objptr
01c64     04 0E 06 F1 | 	add	objptr, #4
01c68     07 03 68 FC | 	wrlong	#1, objptr
01c6c                 | ' 
01c6c                 | '     old14=paula.channel4(0)    
01c6c                 | ' 	paula.channel4(0)=tracker.currSamplePtr(3)
01c6c                 | ' 	paula.channel4(1)=1
01c6c                 | ' 	paula.channel4(2)=tracker.currSampleLength(3)-tracker.currrepeatLength(3)
01c6c                 | ' 	paula.channel4(3)=tracker.currSampleLength(3)
01c6c                 | ' 	paula.channel4(4)=(tracker.currVolume(3)+tracker.deltavolume(3))*128
01c6c                 | ' 	paula.channel4(5)=8192-1024
01c6c                 | ' 	paula.channel4(6)=tracker.currPeriod(3)+tracker.deltaperiod(3)
01c6c                 | ' 	paula.channel4(7)=1
01c6c                 | '     if tracker.trigger(3) <> old4 then paula.channel4(8)=0 :waitus 10 : paula.channel4(8)=1 :old4=tracker.trigger(3)
01c6c     8B 0E 86 F1 | 	sub	objptr, #139
01c70     07 7D C2 FA | 	rdbyte	local10, objptr
01c74     BF 0F 06 F1 | 	add	objptr, #447
01c78     07 D1 02 FB | 	rdlong	local52, objptr
01c7c     04 00 00 FF 
01c80     E8 0E 86 F1 | 	sub	objptr, ##2280
01c84     68 7D 0A F2 | 	cmp	local10, local52 wz
01c88     40 00 90 AD |  if_e	jmp	#LR__0025
01c8c     03 00 00 FF 
01c90     B8 0F 06 F1 | 	add	objptr, ##1976
01c94     07 01 68 FC | 	wrlong	#0, objptr
01c98     03 00 00 FF 
01c9c     B8 0F 86 F1 | 	sub	objptr, ##1976
01ca0     0A 5C 06 F6 | 	mov	arg01, #10
01ca4     14 45 B0 FD | 	call	#__system___waitus
01ca8     03 00 00 FF 
01cac     B8 0F 06 F1 | 	add	objptr, ##1976
01cb0     07 03 68 FC | 	wrlong	#1, objptr
01cb4     8F 0E 86 F1 | 	sub	objptr, #143
01cb8     07 7D C2 FA | 	rdbyte	local10, objptr
01cbc     BF 0F 06 F1 | 	add	objptr, #447
01cc0     07 7D 62 FC | 	wrlong	local10, objptr
01cc4     04 00 00 FF 
01cc8     E8 0E 86 F1 | 	sub	objptr, ##2280
01ccc                 | LR__0025
01ccc     1D 5E 06 F6 | 	mov	arg02, #29
01cd0                 | ' 
01cd0                 | ' ''---------- Set the (x,y) position of cursor
01cd0                 | ' 
01cd0                 | ' cursor_x:=x
01cd0     34 0E 06 F1 | 	add	objptr, #52
01cd4     07 0B 48 FC | 	wrbyte	#5, objptr
01cd8                 | ' cursor_y:=y
01cd8     01 0E 06 F1 | 	add	objptr, #1
01cdc     07 3B 48 FC | 	wrbyte	#29, objptr
01ce0     02 00 00 FF 
01ce4     B2 0F 06 F1 | 	add	objptr, ##1458
01ce8     07 D5 C2 FA | 	rdbyte	local54, objptr
01cec     02 D4 66 F0 | 	shl	local54, #2
01cf0     01 00 00 FF 
01cf4     65 0E 06 F1 | 	add	objptr, ##613
01cf8     07 D5 02 F1 | 	add	local54, objptr
01cfc     6A 5D 02 FB | 	rdlong	arg01, local54
01d00     04 00 00 FF 
01d04     4C 0E 86 F1 | 	sub	objptr, ##2124
01d08     B4 09 B0 FD | 	call	#_hng030rm_spin2_write
01d0c     04 00 00 FF 
01d10     D0 0E 06 F1 | 	add	objptr, ##2256
01d14     07 5D 02 FB | 	rdlong	arg01, objptr
01d18     04 00 00 FF 
01d1c     D0 0E 86 F1 | 	sub	objptr, ##2256
01d20     9C 09 B0 FD | 	call	#_hng030rm_spin2_write
01d24                 | ' 
01d24                 | ' ''---------- Set the (x,y) position of cursor
01d24                 | ' 
01d24                 | ' cursor_x:=x
01d24     34 0E 06 F1 | 	add	objptr, #52
01d28     07 03 48 FC | 	wrbyte	#1, objptr
01d2c                 | ' cursor_y:=y
01d2c     01 0E 06 F1 | 	add	objptr, #1
01d30     07 3B 48 FC | 	wrbyte	#29, objptr
01d34     02 00 00 FF 
01d38     DA 0F 06 F1 | 	add	objptr, ##1498
01d3c     07 5D 02 FB | 	rdlong	arg01, objptr
01d40     10 0E 06 F1 | 	add	objptr, #16
01d44     07 D5 02 FB | 	rdlong	local54, objptr
01d48     03 00 00 FF 
01d4c     1F 0E 86 F1 | 	sub	objptr, ##1567
01d50     6A 5D 02 F1 | 	add	arg01, local54
01d54     03 5E 06 F6 | 	mov	arg02, #3
01d58     E0 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01d5c     15 5D 02 F6 | 	mov	arg01, result1
01d60     5C 09 B0 FD | 	call	#_hng030rm_spin2_write
01d64     1D 5E 06 F6 | 	mov	arg02, #29
01d68                 | ' 
01d68                 | ' ''---------- Set the (x,y) position of cursor
01d68                 | ' 
01d68                 | ' cursor_x:=x
01d68     34 0E 06 F1 | 	add	objptr, #52
01d6c     07 41 48 FC | 	wrbyte	#32, objptr
01d70                 | ' cursor_y:=y
01d70     01 0E 06 F1 | 	add	objptr, #1
01d74     07 3B 48 FC | 	wrbyte	#29, objptr
01d78     02 00 00 FF 
01d7c     B3 0F 06 F1 | 	add	objptr, ##1459
01d80     07 D5 C2 FA | 	rdbyte	local54, objptr
01d84     02 D4 66 F0 | 	shl	local54, #2
01d88     01 00 00 FF 
01d8c     64 0E 06 F1 | 	add	objptr, ##612
01d90     07 D5 02 F1 | 	add	local54, objptr
01d94     6A 5D 02 FB | 	rdlong	arg01, local54
01d98     04 00 00 FF 
01d9c     4C 0E 86 F1 | 	sub	objptr, ##2124
01da0     1C 09 B0 FD | 	call	#_hng030rm_spin2_write
01da4     04 00 00 FF 
01da8     D0 0E 06 F1 | 	add	objptr, ##2256
01dac     07 5D 02 FB | 	rdlong	arg01, objptr
01db0     04 00 00 FF 
01db4     D0 0E 86 F1 | 	sub	objptr, ##2256
01db8     04 09 B0 FD | 	call	#_hng030rm_spin2_write
01dbc                 | ' 
01dbc                 | ' ''---------- Set the (x,y) position of cursor
01dbc                 | ' 
01dbc                 | ' cursor_x:=x
01dbc     34 0E 06 F1 | 	add	objptr, #52
01dc0     07 39 48 FC | 	wrbyte	#28, objptr
01dc4                 | ' cursor_y:=y
01dc4     01 0E 06 F1 | 	add	objptr, #1
01dc8     07 3B 48 FC | 	wrbyte	#29, objptr
01dcc     02 00 00 FF 
01dd0     DE 0F 06 F1 | 	add	objptr, ##1502
01dd4     07 5D 02 FB | 	rdlong	arg01, objptr
01dd8     10 0E 06 F1 | 	add	objptr, #16
01ddc     07 D5 02 FB | 	rdlong	local54, objptr
01de0     03 00 00 FF 
01de4     23 0E 86 F1 | 	sub	objptr, ##1571
01de8     6A 5D 02 F1 | 	add	arg01, local54
01dec     03 5E 06 F6 | 	mov	arg02, #3
01df0     48 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01df4     15 5D 02 F6 | 	mov	arg01, result1
01df8     C4 08 B0 FD | 	call	#_hng030rm_spin2_write
01dfc     1D 5E 06 F6 | 	mov	arg02, #29
01e00                 | ' 
01e00                 | ' ''---------- Set the (x,y) position of cursor
01e00                 | ' 
01e00                 | ' cursor_x:=x
01e00     34 0E 06 F1 | 	add	objptr, #52
01e04     07 79 48 FC | 	wrbyte	#60, objptr
01e08                 | ' cursor_y:=y
01e08     01 0E 06 F1 | 	add	objptr, #1
01e0c     07 3B 48 FC | 	wrbyte	#29, objptr
01e10     02 00 00 FF 
01e14     B4 0F 06 F1 | 	add	objptr, ##1460
01e18     07 D5 C2 FA | 	rdbyte	local54, objptr
01e1c     02 D4 66 F0 | 	shl	local54, #2
01e20     01 00 00 FF 
01e24     63 0E 06 F1 | 	add	objptr, ##611
01e28     07 D5 02 F1 | 	add	local54, objptr
01e2c     6A 5D 02 FB | 	rdlong	arg01, local54
01e30     04 00 00 FF 
01e34     4C 0E 86 F1 | 	sub	objptr, ##2124
01e38     84 08 B0 FD | 	call	#_hng030rm_spin2_write
01e3c     04 00 00 FF 
01e40     D0 0E 06 F1 | 	add	objptr, ##2256
01e44     07 5D 02 FB | 	rdlong	arg01, objptr
01e48     04 00 00 FF 
01e4c     D0 0E 86 F1 | 	sub	objptr, ##2256
01e50     6C 08 B0 FD | 	call	#_hng030rm_spin2_write
01e54                 | ' 
01e54                 | ' ''---------- Set the (x,y) position of cursor
01e54                 | ' 
01e54                 | ' cursor_x:=x
01e54     34 0E 06 F1 | 	add	objptr, #52
01e58     07 71 48 FC | 	wrbyte	#56, objptr
01e5c                 | ' cursor_y:=y
01e5c     01 0E 06 F1 | 	add	objptr, #1
01e60     07 3B 48 FC | 	wrbyte	#29, objptr
01e64     02 00 00 FF 
01e68     E2 0F 06 F1 | 	add	objptr, ##1506
01e6c     07 5D 02 FB | 	rdlong	arg01, objptr
01e70     10 0E 06 F1 | 	add	objptr, #16
01e74     07 D5 02 FB | 	rdlong	local54, objptr
01e78     03 00 00 FF 
01e7c     27 0E 86 F1 | 	sub	objptr, ##1575
01e80     6A 5D 02 F1 | 	add	arg01, local54
01e84     03 5E 06 F6 | 	mov	arg02, #3
01e88     B0 0A B0 FD | 	call	#_hng030rm_spin2_inttostr2
01e8c     15 5D 02 F6 | 	mov	arg01, result1
01e90     2C 08 B0 FD | 	call	#_hng030rm_spin2_write
01e94                 | ' 
01e94                 | ' ''---------- Set the (x,y) position of cursor
01e94                 | ' 
01e94                 | ' cursor_x:=x
01e94     34 0E 06 F1 | 	add	objptr, #52
01e98     07 A9 48 FC | 	wrbyte	#84, objptr
01e9c                 | ' cursor_y:=y
01e9c     01 0E 06 F1 | 	add	objptr, #1
01ea0     07 3B 48 FC | 	wrbyte	#29, objptr
01ea4     02 00 00 FF 
01ea8     E6 0F 06 F1 | 	add	objptr, ##1510
01eac     07 5D 02 FB | 	rdlong	arg01, objptr
01eb0     10 0E 06 F1 | 	add	objptr, #16
01eb4     07 D5 02 FB | 	rdlong	local54, objptr
01eb8     03 00 00 FF 
01ebc     2B 0E 86 F1 | 	sub	objptr, ##1579
01ec0     6A 5D 02 F1 | 	add	arg01, local54
01ec4     03 5E 06 F6 | 	mov	arg02, #3
01ec8     70 0A B0 FD | 	call	#_hng030rm_spin2_inttostr2
01ecc     15 5D 02 F6 | 	mov	arg01, result1
01ed0     EC 07 B0 FD | 	call	#_hng030rm_spin2_write
01ed4     1D 5E 06 F6 | 	mov	arg02, #29
01ed8                 | ' 
01ed8                 | ' ''---------- Set the (x,y) position of cursor
01ed8                 | ' 
01ed8                 | ' cursor_x:=x
01ed8     34 0E 06 F1 | 	add	objptr, #52
01edc     07 B1 48 FC | 	wrbyte	#88, objptr
01ee0                 | ' cursor_y:=y
01ee0     01 0E 06 F1 | 	add	objptr, #1
01ee4     07 3B 48 FC | 	wrbyte	#29, objptr
01ee8     02 00 00 FF 
01eec     B5 0F 06 F1 | 	add	objptr, ##1461
01ef0     07 D5 C2 FA | 	rdbyte	local54, objptr
01ef4     02 D4 66 F0 | 	shl	local54, #2
01ef8     01 00 00 FF 
01efc     62 0E 06 F1 | 	add	objptr, ##610
01f00     07 D5 02 F1 | 	add	local54, objptr
01f04     6A 5D 02 FB | 	rdlong	arg01, local54
01f08     04 00 00 FF 
01f0c     4C 0E 86 F1 | 	sub	objptr, ##2124
01f10     AC 07 B0 FD | 	call	#_hng030rm_spin2_write
01f14     04 00 00 FF 
01f18     D0 0E 06 F1 | 	add	objptr, ##2256
01f1c     07 5D 02 FB | 	rdlong	arg01, objptr
01f20     04 00 00 FF 
01f24     D0 0E 86 F1 | 	sub	objptr, ##2256
01f28     94 07 B0 FD | 	call	#_hng030rm_spin2_write
01f2c     01 5E 06 F6 | 	mov	arg02, #1
01f30                 | ' 
01f30                 | ' ''---------- Set the (x,y) position of cursor
01f30                 | ' 
01f30                 | ' cursor_x:=x
01f30     34 0E 06 F1 | 	add	objptr, #52
01f34     07 B5 48 FC | 	wrbyte	#90, objptr
01f38                 | ' cursor_y:=y
01f38     01 0E 06 F1 | 	add	objptr, #1
01f3c     07 03 48 FC | 	wrbyte	#1, objptr
01f40     35 0E 86 F1 | 	sub	objptr, #53
01f44     40 00 00 FF 
01f48     7A 5D 06 F6 | 	mov	arg01, ##@LR__0456
01f4c     70 07 B0 FD | 	call	#_hng030rm_spin2_write
01f50                 | ' asm
01f50     80 5C 06 FB | 	rdlong	arg01, #128
01f54                 | ' return r
01f54     08 5E 06 F6 | 	mov	arg02, #8
01f58                 | ' 
01f58                 | ' j:=i
01f58                 | ' pos:=d-1
01f58     07 D6 06 F6 | 	mov	local55, #7
01f5c                 | ' k:=0
01f5c     44 0E 06 F1 | 	add	objptr, #68
01f60     07 5F 02 F1 | 	add	arg02, objptr
01f64                 | ' n_string[d]:=0
01f64     2F 01 48 FC | 	wrbyte	#0, arg02
01f68                 | ' repeat k from 0 to d-1
01f68     00 D8 06 F6 | 	mov	local56, #0
01f6c     44 0E 86 F1 | 	sub	objptr, #68
01f70     AC E0 9F FE | 	loc	pa,	#(@LR__0027-@LR__0026)
01f74     93 00 A0 FD | 	call	#FCACHE_LOAD_
01f78                 | LR__0026
01f78     6C DB 02 F6 | 	mov	local57, local56
01f7c     44 0E 06 F1 | 	add	objptr, #68
01f80     07 DB 02 F1 | 	add	local57, objptr
01f84                 | '   n_string[k]:=48
01f84     6D 61 48 FC | 	wrbyte	#48, local57
01f88     01 D8 06 F1 | 	add	local56, #1
01f8c     08 D8 0E F2 | 	cmp	local56, #8 wz
01f90     44 0E 86 F1 | 	sub	objptr, #68
01f94     E0 FF 9F 5D |  if_ne	jmp	#LR__0026
01f98                 | LR__0027
01f98                 | ' if (j<>0)
01f98     00 5C 0E F2 | 	cmp	arg01, #0 wz
01f9c     40 00 90 AD |  if_e	jmp	#LR__0030
01fa0                 | ' 
01fa0                 | '   repeat while (pos>-1)
01fa0                 | LR__0028
01fa0     FF FF 7F FF 
01fa4     FF D7 5E F2 | 	cmps	local55, ##-1 wcz
01fa8     34 00 90 ED |  if_be	jmp	#LR__0029
01fac     2E DD 02 F6 | 	mov	local58, arg01
01fb0     0F DC 06 F5 | 	and	local58, #15
01fb4                 | '     q:=j+//16
01fb4                 | '     if (q>9)
01fb4     09 DC 5E F2 | 	cmps	local58, #9 wcz
01fb8                 | '       q:=q+7
01fb8     07 DC 06 11 |  if_a	add	local58, #7
01fbc                 | '     q:=48+q
01fbc     30 DC 06 F1 | 	add	local58, #48
01fc0     6B DF 02 F6 | 	mov	local59, local55
01fc4     44 0E 06 F1 | 	add	objptr, #68
01fc8     07 DF 02 F1 | 	add	local59, objptr
01fcc                 | '     n_string[pos]:=q
01fcc     6F DD 42 FC | 	wrbyte	local58, local59
01fd0                 | '     j:=j+/16
01fd0     04 5C 46 F0 | 	shr	arg01, #4
01fd4                 | '     pos-=1
01fd4     01 D6 86 F1 | 	sub	local55, #1
01fd8     44 0E 86 F1 | 	sub	objptr, #68
01fdc     C0 FF 9F FD | 	jmp	#LR__0028
01fe0                 | LR__0029
01fe0                 | LR__0030
01fe0     44 0E 06 F1 | 	add	objptr, #68
01fe4     07 2B 02 F6 | 	mov	result1, objptr
01fe8     44 0E 86 F1 | 	sub	objptr, #68
01fec                 | ' 
01fec                 | ' q:=@n_string
01fec                 | ' return q
01fec     15 5D 02 F6 | 	mov	arg01, result1
01ff0     CC 06 B0 FD | 	call	#_hng030rm_spin2_write
01ff4     6C F8 9F FD | 	jmp	#LR__0016
01ff8     AF F0 03 F6 | 	mov	ptra, fp
01ffc     BF 00 A0 FD | 	call	#popregs_
02000                 | _program_ret
02000     2D 00 64 FD | 	ret
02004                 | 
02004                 | ' 
02004                 | ' 
02004                 | ' ''---------- putpixel - put a pixel on the screen
02004                 | ' 
02004                 | ' pub putpixel1(x,y,c) |byte b
02004                 | _hng030rm_spin2_putpixel1
02004                 | ' 
02004                 | ' 
02004                 | ' if ((x>=0) & (x<32*cpl) & (y>=0) & (y<lines))
02004     00 30 06 F6 | 	mov	_var01, #0
02008     00 5C 5E F2 | 	cmps	arg01, #0 wcz
0200c     01 30 66 36 |  if_ae	neg	_var01, #1
02010     00 32 06 F6 | 	mov	_var02, #0
02014     90 0E 06 F1 | 	add	objptr, #144
02018     07 35 02 FB | 	rdlong	_var03, objptr
0201c     05 34 66 F0 | 	shl	_var03, #5
02020     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
02024     01 32 66 C6 |  if_b	neg	_var02, #1
02028     19 31 02 F5 | 	and	_var01, _var02
0202c     00 36 06 F6 | 	mov	_var04, #0
02030     00 5E 5E F2 | 	cmps	arg02, #0 wcz
02034     01 36 66 36 |  if_ae	neg	_var04, #1
02038     1B 31 02 F5 | 	and	_var01, _var04
0203c     00 38 06 F6 | 	mov	_var05, #0
02040     04 0E 06 F1 | 	add	objptr, #4
02044     07 3B 02 FB | 	rdlong	_var06, objptr
02048     94 0E 86 F1 | 	sub	objptr, #148
0204c     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02050     01 38 66 C6 |  if_b	neg	_var05, #1
02054     1C 31 CA F7 | 	test	_var01, _var05 wz
02058     8C 00 90 AD |  if_e	jmp	#LR__0033
0205c     90 0E 06 F1 | 	add	objptr, #144
02060     07 3D 02 FB | 	rdlong	_var07, objptr
02064     90 0E 86 F1 | 	sub	objptr, #144
02068     02 3C 66 F0 | 	shl	_var07, #2
0206c     2F 3D 02 FD | 	qmul	_var07, arg02
02070     18 3E 62 FD | 	getqx	_var08
02074     07 41 02 FB | 	rdlong	_var09, objptr
02078     1F 41 02 F1 | 	add	_var09, _var08
0207c     2E 43 02 F6 | 	mov	_var10, arg01
02080     03 42 46 F0 | 	shr	_var10, #3
02084     21 41 02 F1 | 	add	_var09, _var10
02088                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>3)]
02088     20 45 C2 FA | 	rdbyte	_var11, _var09
0208c                 | '     if (c==0)
0208c     00 60 0E F2 | 	cmp	arg03, #0 wz
02090     18 00 90 5D |  if_ne	jmp	#LR__0031
02094     2E 31 52 F6 | 	abs	_var01, arg01 wc
02098     07 30 06 F5 | 	and	_var01, #7
0209c     18 31 62 C6 |  if_b	neg	_var01, _var01
020a0     18 47 C2 F9 | 	decod	_var12, _var01
020a4                 | '       b:=b & !(1<<(x//8))
020a4     23 45 22 F5 | 	andn	_var11, _var12
020a8                 | '     else
020a8     14 00 90 FD | 	jmp	#LR__0032
020ac                 | LR__0031
020ac     2E 31 52 F6 | 	abs	_var01, arg01 wc
020b0     07 30 06 F5 | 	and	_var01, #7
020b4     18 31 62 C6 |  if_b	neg	_var01, _var01
020b8     18 49 C2 F9 | 	decod	_var13, _var01
020bc                 | '       b:=b |(1<<(x//8))
020bc     24 45 42 F5 | 	or	_var11, _var13
020c0                 | LR__0032
020c0     90 0E 06 F1 | 	add	objptr, #144
020c4     07 4B 02 FB | 	rdlong	_var14, objptr
020c8     90 0E 86 F1 | 	sub	objptr, #144
020cc     02 4A 66 F0 | 	shl	_var14, #2
020d0     2F 4B 02 FD | 	qmul	_var14, arg02
020d4     18 4C 62 FD | 	getqx	_var15
020d8     07 4F 02 FB | 	rdlong	_var16, objptr
020dc     26 4F 02 F1 | 	add	_var16, _var15
020e0     21 4F 02 F1 | 	add	_var16, _var10
020e4                 | '     byte[buf_ptr+4*cpl*y+(x>>3)]:=b
020e4     27 45 42 FC | 	wrbyte	_var11, _var16
020e8                 | LR__0033
020e8                 | _hng030rm_spin2_putpixel1_ret
020e8     2D 00 64 FD | 	ret
020ec                 | 
020ec                 | ' 
020ec                 | ' 
020ec                 | ' pub putpixel2(x,y,c) |byte b
020ec                 | _hng030rm_spin2_putpixel2
020ec                 | ' 
020ec                 | ' 
020ec                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
020ec     00 30 06 F6 | 	mov	_var01, #0
020f0     00 5C 5E F2 | 	cmps	arg01, #0 wcz
020f4     01 30 66 36 |  if_ae	neg	_var01, #1
020f8     00 32 06 F6 | 	mov	_var02, #0
020fc     90 0E 06 F1 | 	add	objptr, #144
02100     07 35 02 FB | 	rdlong	_var03, objptr
02104     04 34 66 F0 | 	shl	_var03, #4
02108     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
0210c     01 32 66 C6 |  if_b	neg	_var02, #1
02110     19 31 02 F5 | 	and	_var01, _var02
02114     00 36 06 F6 | 	mov	_var04, #0
02118     00 5E 5E F2 | 	cmps	arg02, #0 wcz
0211c     01 36 66 36 |  if_ae	neg	_var04, #1
02120     1B 31 02 F5 | 	and	_var01, _var04
02124     00 38 06 F6 | 	mov	_var05, #0
02128     04 0E 06 F1 | 	add	objptr, #4
0212c     07 3B 02 FB | 	rdlong	_var06, objptr
02130     94 0E 86 F1 | 	sub	objptr, #148
02134     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02138     01 38 66 C6 |  if_b	neg	_var05, #1
0213c     1C 31 CA F7 | 	test	_var01, _var05 wz
02140     7C 00 90 AD |  if_e	jmp	#LR__0034
02144     90 0E 06 F1 | 	add	objptr, #144
02148     07 3D 02 FB | 	rdlong	_var07, objptr
0214c     90 0E 86 F1 | 	sub	objptr, #144
02150     02 3C 66 F0 | 	shl	_var07, #2
02154     2F 3D 02 FD | 	qmul	_var07, arg02
02158     18 3E 62 FD | 	getqx	_var08
0215c     07 41 02 FB | 	rdlong	_var09, objptr
02160     1F 41 02 F1 | 	add	_var09, _var08
02164     2E 43 02 F6 | 	mov	_var10, arg01
02168     02 42 46 F0 | 	shr	_var10, #2
0216c     21 41 02 F1 | 	add	_var09, _var10
02170                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>2)]
02170     20 45 C2 FA | 	rdbyte	_var11, _var09
02174     2E 31 52 F6 | 	abs	_var01, arg01 wc
02178     03 30 06 F5 | 	and	_var01, #3
0217c     18 31 62 C6 |  if_b	neg	_var01, _var01
02180     01 30 66 F0 | 	shl	_var01, #1
02184     03 46 06 F6 | 	mov	_var12, #3
02188     18 47 62 F0 | 	shl	_var12, _var01
0218c                 | '     b:=b & !(%11<<((x//4)<<1))
0218c     23 45 22 F5 | 	andn	_var11, _var12
02190     18 61 62 F0 | 	shl	arg03, _var01
02194                 | '     b:=b |(c<<((x//4)<<1))
02194     30 45 42 F5 | 	or	_var11, arg03
02198     90 0E 06 F1 | 	add	objptr, #144
0219c     07 49 02 FB | 	rdlong	_var13, objptr
021a0     90 0E 86 F1 | 	sub	objptr, #144
021a4     02 48 66 F0 | 	shl	_var13, #2
021a8     2F 49 02 FD | 	qmul	_var13, arg02
021ac     18 4A 62 FD | 	getqx	_var14
021b0     07 4D 02 FB | 	rdlong	_var15, objptr
021b4     25 4D 02 F1 | 	add	_var15, _var14
021b8     21 4D 02 F1 | 	add	_var15, _var10
021bc                 | '     byte[buf_ptr+4*cpl*y+(x>>2)]:=b
021bc     26 45 42 FC | 	wrbyte	_var11, _var15
021c0                 | LR__0034
021c0                 | _hng030rm_spin2_putpixel2_ret
021c0     2D 00 64 FD | 	ret
021c4                 | 
021c4                 | ' 
021c4                 | ' 
021c4                 | ' pub putpixel4(x,y,c) |byte b
021c4                 | _hng030rm_spin2_putpixel4
021c4                 | ' 
021c4                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
021c4     00 30 06 F6 | 	mov	_var01, #0
021c8     00 5C 5E F2 | 	cmps	arg01, #0 wcz
021cc     01 30 66 36 |  if_ae	neg	_var01, #1
021d0     00 32 06 F6 | 	mov	_var02, #0
021d4     90 0E 06 F1 | 	add	objptr, #144
021d8     07 35 02 FB | 	rdlong	_var03, objptr
021dc     04 34 66 F0 | 	shl	_var03, #4
021e0     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
021e4     01 32 66 C6 |  if_b	neg	_var02, #1
021e8     19 31 02 F5 | 	and	_var01, _var02
021ec     00 36 06 F6 | 	mov	_var04, #0
021f0     00 5E 5E F2 | 	cmps	arg02, #0 wcz
021f4     01 36 66 36 |  if_ae	neg	_var04, #1
021f8     1B 31 02 F5 | 	and	_var01, _var04
021fc     00 38 06 F6 | 	mov	_var05, #0
02200     04 0E 06 F1 | 	add	objptr, #4
02204     07 3B 02 FB | 	rdlong	_var06, objptr
02208     94 0E 86 F1 | 	sub	objptr, #148
0220c     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02210     01 38 66 C6 |  if_b	neg	_var05, #1
02214     1C 31 CA F7 | 	test	_var01, _var05 wz
02218     7C 00 90 AD |  if_e	jmp	#LR__0035
0221c     90 0E 06 F1 | 	add	objptr, #144
02220     07 3D 02 FB | 	rdlong	_var07, objptr
02224     90 0E 86 F1 | 	sub	objptr, #144
02228     02 3C 66 F0 | 	shl	_var07, #2
0222c     2F 3D 02 FD | 	qmul	_var07, arg02
02230     18 3E 62 FD | 	getqx	_var08
02234     07 41 02 FB | 	rdlong	_var09, objptr
02238     1F 41 02 F1 | 	add	_var09, _var08
0223c     2E 43 02 F6 | 	mov	_var10, arg01
02240     01 42 46 F0 | 	shr	_var10, #1
02244     21 41 02 F1 | 	add	_var09, _var10
02248                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>1)]
02248     20 45 C2 FA | 	rdbyte	_var11, _var09
0224c     2E 31 52 F6 | 	abs	_var01, arg01 wc
02250     01 30 06 F5 | 	and	_var01, #1
02254     18 31 62 C6 |  if_b	neg	_var01, _var01
02258     02 30 66 F0 | 	shl	_var01, #2
0225c     0F 46 06 F6 | 	mov	_var12, #15
02260     18 47 62 F0 | 	shl	_var12, _var01
02264                 | '     b:=b & !(%1111<<((x//2)<<2))
02264     23 45 22 F5 | 	andn	_var11, _var12
02268     18 61 62 F0 | 	shl	arg03, _var01
0226c                 | '     b:=b |(c<<((x//2)<<2))
0226c     30 45 42 F5 | 	or	_var11, arg03
02270     90 0E 06 F1 | 	add	objptr, #144
02274     07 49 02 FB | 	rdlong	_var13, objptr
02278     90 0E 86 F1 | 	sub	objptr, #144
0227c     02 48 66 F0 | 	shl	_var13, #2
02280     2F 49 02 FD | 	qmul	_var13, arg02
02284     18 4A 62 FD | 	getqx	_var14
02288     07 4D 02 FB | 	rdlong	_var15, objptr
0228c     25 4D 02 F1 | 	add	_var15, _var14
02290     21 4D 02 F1 | 	add	_var15, _var10
02294                 | '     byte[buf_ptr+4*cpl*y+(x>>1)]:=b
02294     26 45 42 FC | 	wrbyte	_var11, _var15
02298                 | LR__0035
02298                 | _hng030rm_spin2_putpixel4_ret
02298     2D 00 64 FD | 	ret
0229c                 | 
0229c                 | ' 
0229c                 | ' 
0229c                 | ' pub putpixel8(x,y,c)
0229c                 | _hng030rm_spin2_putpixel8
0229c                 | ' 
0229c                 | ' if ((x>=0) & (x<4*cpl) & (y>=0) & (y<lines))
0229c     00 30 06 F6 | 	mov	_var01, #0
022a0     00 5C 5E F2 | 	cmps	arg01, #0 wcz
022a4     01 30 66 36 |  if_ae	neg	_var01, #1
022a8     00 32 06 F6 | 	mov	_var02, #0
022ac     90 0E 06 F1 | 	add	objptr, #144
022b0     07 35 02 FB | 	rdlong	_var03, objptr
022b4     02 34 66 F0 | 	shl	_var03, #2
022b8     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
022bc     01 32 66 C6 |  if_b	neg	_var02, #1
022c0     19 31 02 F5 | 	and	_var01, _var02
022c4     00 36 06 F6 | 	mov	_var04, #0
022c8     00 5E 5E F2 | 	cmps	arg02, #0 wcz
022cc     01 36 66 36 |  if_ae	neg	_var04, #1
022d0     1B 31 02 F5 | 	and	_var01, _var04
022d4     00 38 06 F6 | 	mov	_var05, #0
022d8     04 0E 06 F1 | 	add	objptr, #4
022dc     07 3B 02 FB | 	rdlong	_var06, objptr
022e0     94 0E 86 F1 | 	sub	objptr, #148
022e4     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
022e8     01 38 66 C6 |  if_b	neg	_var05, #1
022ec     1C 31 CA F7 | 	test	_var01, _var05 wz
022f0     28 00 90 AD |  if_e	jmp	#LR__0036
022f4     90 0E 06 F1 | 	add	objptr, #144
022f8     07 3D 02 FB | 	rdlong	_var07, objptr
022fc     90 0E 86 F1 | 	sub	objptr, #144
02300     02 3C 66 F0 | 	shl	_var07, #2
02304     2F 3D 02 FD | 	qmul	_var07, arg02
02308     18 3E 62 FD | 	getqx	_var08
0230c     07 41 02 FB | 	rdlong	_var09, objptr
02310     1F 41 02 F1 | 	add	_var09, _var08
02314     2E 41 02 F1 | 	add	_var09, arg01
02318                 | '     byte[buf_ptr+4*cpl*y+x]:=c
02318     20 61 42 FC | 	wrbyte	arg03, _var09
0231c                 | LR__0036
0231c                 | _hng030rm_spin2_putpixel8_ret
0231c     2D 00 64 FD | 	ret
02320                 | 
02320                 | ' 
02320                 | ' ''---------- Set the border color, o is upper border, lines+1 is lower border
02320                 | ' 
02320                 | ' pub setbordercolor(r,g,b) | color
02320                 | _hng030rm_spin2_setbordercolor
02320     18 5C 66 F0 | 	shl	arg01, #24
02324     10 5E 66 F0 | 	shl	arg02, #16
02328     2F 5D 02 F1 | 	add	arg01, arg02
0232c     08 60 66 F0 | 	shl	arg03, #8
02330     30 5D 02 F1 | 	add	arg01, arg03
02334                 | ' 
02334                 | ' color:=r<<24+g<<16+b<<8
02334                 | ' bordercolor:=color
02334     2C 0E 06 F1 | 	add	objptr, #44
02338     07 5D 62 FC | 	wrlong	arg01, objptr
0233c     2C 0E 86 F1 | 	sub	objptr, #44
02340                 | _hng030rm_spin2_setbordercolor_ret
02340     2D 00 64 FD | 	ret
02344                 | 
02344                 | ' 
02344                 | ' 
02344                 | ' '*************************************************************************
02344                 | ' '                                                                        *
02344                 | ' '  Text functions                                                        *
02344                 | ' '                                                                        *
02344                 | ' '*************************************************************************
02344                 | ' 
02344                 | ' ''---------- Clear the screen, set its foreground/background color
02344                 | ' 
02344                 | ' pub cls(fc,bc)   :c
02344                 | _hng030rm_spin2_cls
02344     07 5A 05 F6 | 	mov	COUNT_, #7
02348     B0 00 A0 FD | 	call	#pushregs_
0234c     2E 6B 02 F6 | 	mov	local01, arg01
02350     2F 6D 02 F6 | 	mov	local02, arg02
02354                 | ' 
02354                 | ' if (graphmode<512)
02354     C4 0E 06 F1 | 	add	objptr, #196
02358     07 6F 02 FB | 	rdlong	local03, objptr
0235c     C4 0E 86 F1 | 	sub	objptr, #196
02360     01 00 00 FF 
02364     00 6E 5E F2 | 	cmps	local03, ##512 wcz
02368     34 00 90 3D |  if_ae	jmp	#LR__0037
0236c     35 71 02 F6 | 	mov	local04, local01
02370     18 70 66 F0 | 	shl	local04, #24
02374     36 73 02 F6 | 	mov	local05, local02
02378     10 72 66 F0 | 	shl	local05, #16
0237c     39 71 02 F1 | 	add	local04, local05
02380     20 70 06 F1 | 	add	local04, #32
02384                 | '   c:=fc<<24+bc<<16+$20
02384                 | '   longfill(buf_ptr,c,buflen)
02384     07 5D 02 FB | 	rdlong	arg01, objptr
02388     30 0E 06 F1 | 	add	objptr, #48
0238c     07 61 02 FB | 	rdlong	arg03, objptr
02390     30 0E 86 F1 | 	sub	objptr, #48
02394     38 5F 02 F6 | 	mov	arg02, local04
02398     A8 00 A0 FD | 	call	#\builtin_longfill_
0239c                 | ' else
0239c     AC 00 90 FD | 	jmp	#LR__0043
023a0                 | LR__0037
023a0                 | '   if (graphmode & 48) ==48
023a0     C4 0E 06 F1 | 	add	objptr, #196
023a4     07 6F 02 FB | 	rdlong	local03, objptr
023a8     C4 0E 86 F1 | 	sub	objptr, #196
023ac     30 6E 06 F5 | 	and	local03, #48
023b0     30 6E 0E F2 | 	cmp	local03, #48 wz
023b4                 | '     c:=bc
023b4     36 71 02 A6 |  if_e	mov	local04, local02
023b8     74 00 90 AD |  if_e	jmp	#LR__0042
023bc                 | '   elseif (graphmode & 48) ==32
023bc     C4 0E 06 F1 | 	add	objptr, #196
023c0     07 6F 02 FB | 	rdlong	local03, objptr
023c4     C4 0E 86 F1 | 	sub	objptr, #196
023c8     30 6E 06 F5 | 	and	local03, #48
023cc     20 6E 0E F2 | 	cmp	local03, #32 wz
023d0     10 00 90 5D |  if_ne	jmp	#LR__0038
023d4     36 71 02 F6 | 	mov	local04, local02
023d8     04 70 66 F0 | 	shl	local04, #4
023dc     36 71 02 F1 | 	add	local04, local02
023e0                 | '     c:=bc<<4+bc
023e0     4C 00 90 FD | 	jmp	#LR__0041
023e4                 | LR__0038
023e4                 | '   elseif (graphmode & 48) ==16
023e4     C4 0E 06 F1 | 	add	objptr, #196
023e8     07 6F 02 FB | 	rdlong	local03, objptr
023ec     C4 0E 86 F1 | 	sub	objptr, #196
023f0     30 6E 06 F5 | 	and	local03, #48
023f4     10 6E 0E F2 | 	cmp	local03, #16 wz
023f8     28 00 90 5D |  if_ne	jmp	#LR__0039
023fc     36 71 02 F6 | 	mov	local04, local02
02400     06 70 66 F0 | 	shl	local04, #6
02404     36 75 02 F6 | 	mov	local06, local02
02408     04 74 66 F0 | 	shl	local06, #4
0240c     3A 71 02 F1 | 	add	local04, local06
02410     36 77 02 F6 | 	mov	local07, local02
02414     02 76 66 F0 | 	shl	local07, #2
02418     3B 71 02 F1 | 	add	local04, local07
0241c     36 71 02 F1 | 	add	local04, local02
02420                 | '     c:=bc<<6+bc<<4+bc<<2+bc
02420                 | '   else
02420     0C 00 90 FD | 	jmp	#LR__0040
02424                 | LR__0039
02424                 | '     if bc==1
02424     01 6C 0E F2 | 	cmp	local02, #1 wz
02428                 | '       c:=255
02428     FF 70 06 A6 |  if_e	mov	local04, #255
0242c                 | '     else
0242c                 | '       c:=0
0242c     00 70 06 56 |  if_ne	mov	local04, #0
02430                 | LR__0040
02430                 | LR__0041
02430                 | LR__0042
02430     30 0E 06 F1 | 	add	objptr, #48
02434     07 61 02 FB | 	rdlong	arg03, objptr
02438     30 0E 86 F1 | 	sub	objptr, #48
0243c     02 60 66 F0 | 	shl	arg03, #2
02440                 | '   bytefill(buf_ptr,c,buflen*4)
02440     07 5D 02 FB | 	rdlong	arg01, objptr
02444     38 5F 02 F6 | 	mov	arg02, local04
02448     A0 00 A0 FD | 	call	#\builtin_bytefill_
0244c                 | LR__0043
0244c                 | ' setwritecolors(fc,bc)
0244c                 | ' 
0244c                 | ' 
0244c                 | ' write_color:=ff
0244c     38 0E 06 F1 | 	add	objptr, #56
02450     07 6B 62 FC | 	wrlong	local01, objptr
02454                 | ' write_background:=bb
02454     04 0E 06 F1 | 	add	objptr, #4
02458     07 6D 62 FC | 	wrlong	local02, objptr
0245c                 | ' cursor_x:=0
0245c     08 0E 86 F1 | 	sub	objptr, #8
02460     07 01 48 FC | 	wrbyte	#0, objptr
02464                 | ' cursor_y:=0
02464     01 0E 06 F1 | 	add	objptr, #1
02468     07 01 48 FC | 	wrbyte	#0, objptr
0246c     35 0E 86 F1 | 	sub	objptr, #53
02470     38 2B 02 F6 | 	mov	result1, local04
02474     AF F0 03 F6 | 	mov	ptra, fp
02478     BF 00 A0 FD | 	call	#popregs_
0247c                 | _hng030rm_spin2_cls_ret
0247c     2D 00 64 FD | 	ret
02480                 | 
02480                 | ' 
02480                 | ' ''--------- Output a string at position x,y without changing colors
02480                 | ' 
02480                 | ' pub outtextxy(x,y,text) | iii
02480                 | _hng030rm_spin2_outtextxy
02480     0B 5A 05 F6 | 	mov	COUNT_, #11
02484     B0 00 A0 FD | 	call	#pushregs_
02488     2E 6B 02 F6 | 	mov	local01, arg01
0248c                 | ' 
0248c                 | ' repeat iii from 0 to strsize(text)-1
0248c     00 6C 06 F6 | 	mov	local02, #0
02490     30 5D 02 F6 | 	mov	arg01, arg03
02494     00 6E 06 F6 | 	mov	local03, #0
02498     74 DB 9F FE | 	loc	pa,	#(@LR__0045-@LR__0044)
0249c     93 00 A0 FD | 	call	#FCACHE_LOAD_
024a0                 | LR__0044
024a0     2E 71 CA FA | 	rdbyte	local04, arg01 wz
024a4     01 6E 06 51 |  if_ne	add	local03, #1
024a8     01 5C 06 51 |  if_ne	add	arg01, #1
024ac     F0 FF 9F 5D |  if_ne	jmp	#LR__0044
024b0                 | LR__0045
024b0     37 2B 02 F6 | 	mov	result1, local03
024b4     15 73 02 F6 | 	mov	local05, result1
024b8     01 72 86 F1 | 	sub	local05, #1
024bc     00 72 5E F2 | 	cmps	local05, #0 wcz
024c0     01 74 06 16 |  if_a	mov	local06, #1
024c4     01 74 66 E6 |  if_be	neg	local06, #1
024c8     3A 73 02 F1 | 	add	local05, local06
024cc     80 DB 9F FE | 	loc	pa,	#(@LR__0047-@LR__0046)
024d0     93 00 A0 FD | 	call	#FCACHE_LOAD_
024d4                 | LR__0046
024d4     90 0E 06 F1 | 	add	objptr, #144
024d8     07 77 02 FB | 	rdlong	local07, objptr
024dc     90 0E 86 F1 | 	sub	objptr, #144
024e0     2F 77 02 FD | 	qmul	local07, arg02
024e4     18 78 62 FD | 	getqx	local08
024e8     35 79 02 F1 | 	add	local08, local01
024ec     36 79 02 F1 | 	add	local08, local02
024f0     02 78 66 F0 | 	shl	local08, #2
024f4     07 7B 02 FB | 	rdlong	local09, objptr
024f8     3C 7B 02 F1 | 	add	local09, local08
024fc     3D 7D 02 FB | 	rdlong	local10, local09
02500     FF 7C 26 F5 | 	andn	local10, #255
02504     30 7F 02 F6 | 	mov	local11, arg03
02508     36 7F 02 F1 | 	add	local11, local02
0250c     3F 77 C2 FA | 	rdbyte	local07, local11
02510     3B 7D 42 F5 | 	or	local10, local07
02514                 | '   long[buf_ptr+4*(cpl*y+x+iii)]:=(long[buf_ptr+4*(cpl*y+x+iii)] & $FFFFFF00)  | byte[text+iii]
02514     3D 7D 62 FC | 	wrlong	local10, local09
02518     3A 6D 02 F1 | 	add	local02, local06
0251c     39 6D 0A F2 | 	cmp	local02, local05 wz
02520     B0 FF 9F 5D |  if_ne	jmp	#LR__0046
02524                 | LR__0047
02524     AF F0 03 F6 | 	mov	ptra, fp
02528     BF 00 A0 FD | 	call	#popregs_
0252c                 | _hng030rm_spin2_outtextxy_ret
0252c     2D 00 64 FD | 	ret
02530                 | 
02530                 | ' 
02530                 | ' ''---------- Output a char at the cursor position, move the cursor
02530                 | ' 
02530                 | ' pub putchar(achar) | c,x,y
02530                 | _hng030rm_spin2_putchar
02530     12 5A 05 F6 | 	mov	COUNT_, #18
02534     B0 00 A0 FD | 	call	#pushregs_
02538     2E 6B 02 F6 | 	mov	local01, arg01
0253c                 | ' 
0253c                 | ' if achar==10
0253c     0A 6A 0E F2 | 	cmp	local01, #10 wz
02540     58 00 90 5D |  if_ne	jmp	#LR__0048
02544                 | '   crlf()
02544                 | ' 
02544                 | ' cursor_x:=0
02544     34 0E 06 F1 | 	add	objptr, #52
02548     07 01 48 FC | 	wrbyte	#0, objptr
0254c                 | ' cursor_y+=1
0254c     01 0E 06 F1 | 	add	objptr, #1
02550     07 6D C2 FA | 	rdbyte	local02, objptr
02554     01 6C 06 F1 | 	add	local02, #1
02558     07 6D 42 FC | 	wrbyte	local02, objptr
0255c                 | ' if cursor_y>lines-1
0255c     5F 0E 06 F1 | 	add	objptr, #95
02560     07 6D 02 FB | 	rdlong	local02, objptr
02564     01 6C 86 F1 | 	sub	local02, #1
02568     5F 0E 86 F1 | 	sub	objptr, #95
0256c     07 6F C2 FA | 	rdbyte	local03, objptr
02570     35 0E 86 F1 | 	sub	objptr, #53
02574     36 6F 5A F2 | 	cmps	local03, local02 wcz
02578     38 01 90 ED |  if_be	jmp	#LR__0051
0257c                 | '   scrollup()
0257c     F4 02 B0 FD | 	call	#_hng030rm_spin2_scrollup
02580     94 0E 06 F1 | 	add	objptr, #148
02584     07 71 02 FB | 	rdlong	local04, objptr
02588     01 70 86 F1 | 	sub	local04, #1
0258c                 | '   cursor_y:=lines-1
0258c     5F 0E 86 F1 | 	sub	objptr, #95
02590     07 71 42 FC | 	wrbyte	local04, objptr
02594     35 0E 86 F1 | 	sub	objptr, #53
02598                 | ' else  
02598     18 01 90 FD | 	jmp	#LR__0051
0259c                 | LR__0048
0259c                 | '   x:=cursor_x
0259c     34 0E 06 F1 | 	add	objptr, #52
025a0     07 73 C2 FA | 	rdbyte	local05, objptr
025a4                 | '   y:=cursor_y
025a4     01 0E 06 F1 | 	add	objptr, #1
025a8     07 75 C2 FA | 	rdbyte	local06, objptr
025ac     03 0E 06 F1 | 	add	objptr, #3
025b0     07 77 02 FB | 	rdlong	local07, objptr
025b4     18 76 66 F0 | 	shl	local07, #24
025b8     04 0E 06 F1 | 	add	objptr, #4
025bc     07 79 02 FB | 	rdlong	local08, objptr
025c0     10 78 66 F0 | 	shl	local08, #16
025c4     3C 77 02 F1 | 	add	local07, local08
025c8                 | '   c:=write_color<<24+write_background<<16
025c8     54 0E 06 F1 | 	add	objptr, #84
025cc     07 7B 02 FB | 	rdlong	local09, objptr
025d0     90 0E 86 F1 | 	sub	objptr, #144
025d4     3A 7B 02 FD | 	qmul	local09, local06
025d8     18 7C 62 FD | 	getqx	local10
025dc     39 7D 02 F1 | 	add	local10, local05
025e0     02 7C 66 F0 | 	shl	local10, #2
025e4     07 7F 02 FB | 	rdlong	local11, objptr
025e8     3E 7F 02 F1 | 	add	local11, local10
025ec     3F 81 02 FB | 	rdlong	local12, local11
025f0     7F 00 00 FF 
025f4     FF 81 06 F5 | 	and	local12, ##65535
025f8     3B 81 42 F5 | 	or	local12, local07
025fc                 | '   long[buf_ptr+4*(cpl*y+x)]:=long[buf_ptr+4*(cpl*y+x)] &$FFFF | c
025fc     3F 81 62 FC | 	wrlong	local12, local11
02600     90 0E 06 F1 | 	add	objptr, #144
02604     07 7B 02 FB | 	rdlong	local09, objptr
02608     90 0E 86 F1 | 	sub	objptr, #144
0260c     3A 7B 02 FD | 	qmul	local09, local06
02610     18 82 62 FD | 	getqx	local13
02614     39 83 02 F1 | 	add	local13, local05
02618     02 82 66 F0 | 	shl	local13, #2
0261c     07 85 02 FB | 	rdlong	local14, objptr
02620     41 85 02 F1 | 	add	local14, local13
02624     42 87 02 FB | 	rdlong	local15, local14
02628     FF 86 26 F5 | 	andn	local15, #255
0262c     FF 6A 06 F5 | 	and	local01, #255
02630     35 87 42 F5 | 	or	local15, local01
02634                 | '   long[buf_ptr+4*(cpl*y+x)]:=(long[buf_ptr+4*(cpl*y+x)] & $FFFFFF00)  |(achar & $000000FF)
02634     42 87 62 FC | 	wrlong	local15, local14
02638                 | '   cursor_x+=1
02638     34 0E 06 F1 | 	add	objptr, #52
0263c     07 89 C2 FA | 	rdbyte	local16, objptr
02640     01 88 06 F1 | 	add	local16, #1
02644     07 89 42 FC | 	wrbyte	local16, objptr
02648                 | '   if cursor_x==cpl
02648     07 89 C2 FA | 	rdbyte	local16, objptr
0264c     5C 0E 06 F1 | 	add	objptr, #92
02650     07 8B 02 FB | 	rdlong	local17, objptr
02654     90 0E 86 F1 | 	sub	objptr, #144
02658     45 89 0A F2 | 	cmp	local16, local17 wz
0265c     54 00 90 5D |  if_ne	jmp	#LR__0050
02660                 | '     cursor_x:=0
02660     34 0E 06 F1 | 	add	objptr, #52
02664     07 01 48 FC | 	wrbyte	#0, objptr
02668                 | '     cursor_y+=1
02668     01 0E 06 F1 | 	add	objptr, #1
0266c     07 89 C2 FA | 	rdbyte	local16, objptr
02670     01 88 06 F1 | 	add	local16, #1
02674     07 89 42 FC | 	wrbyte	local16, objptr
02678                 | '     if cursor_y>lines-1
02678     5F 0E 06 F1 | 	add	objptr, #95
0267c     07 89 02 FB | 	rdlong	local16, objptr
02680     01 88 86 F1 | 	sub	local16, #1
02684     5F 0E 86 F1 | 	sub	objptr, #95
02688     07 8B C2 FA | 	rdbyte	local17, objptr
0268c     35 0E 86 F1 | 	sub	objptr, #53
02690     44 8B 5A F2 | 	cmps	local17, local16 wcz
02694     1C 00 90 ED |  if_be	jmp	#LR__0049
02698                 | '       scrollup()
02698     D8 01 B0 FD | 	call	#_hng030rm_spin2_scrollup
0269c     94 0E 06 F1 | 	add	objptr, #148
026a0     07 8D 02 FB | 	rdlong	local18, objptr
026a4     01 8C 86 F1 | 	sub	local18, #1
026a8                 | '       cursor_y:=lines-1
026a8     5F 0E 86 F1 | 	sub	objptr, #95
026ac     07 8D 42 FC | 	wrbyte	local18, objptr
026b0     35 0E 86 F1 | 	sub	objptr, #53
026b4                 | LR__0049
026b4                 | LR__0050
026b4                 | LR__0051
026b4     AF F0 03 F6 | 	mov	ptra, fp
026b8     BF 00 A0 FD | 	call	#popregs_
026bc                 | _hng030rm_spin2_putchar_ret
026bc     2D 00 64 FD | 	ret
026c0                 | 
026c0                 | ' 
026c0                 | ' ''--------- Output a string at the cursor position, move the cursor
026c0                 | ' 
026c0                 | ' pub write(text) | iii,c,ncx,ncy
026c0                 | _hng030rm_spin2_write
026c0     11 5A 05 F6 | 	mov	COUNT_, #17
026c4     B0 00 A0 FD | 	call	#pushregs_
026c8     2E 6B 02 F6 | 	mov	local01, arg01
026cc     38 0E 06 F1 | 	add	objptr, #56
026d0     07 6D 02 FB | 	rdlong	local02, objptr
026d4     18 6C 66 F0 | 	shl	local02, #24
026d8     04 0E 06 F1 | 	add	objptr, #4
026dc     07 6F 02 FB | 	rdlong	local03, objptr
026e0     10 6E 66 F0 | 	shl	local03, #16
026e4     37 6D 02 F1 | 	add	local02, local03
026e8                 | ' 
026e8                 | ' c:=write_color<<24+write_background<<16
026e8                 | ' 'debug(uhex_long(write_color))
026e8                 | ' ncy:=cursor_y
026e8     07 0E 86 F1 | 	sub	objptr, #7
026ec     07 71 C2 FA | 	rdbyte	local04, objptr
026f0                 | ' ncx:=cursor_x+strsize(text)
026f0     01 0E 86 F1 | 	sub	objptr, #1
026f4     07 73 C2 FA | 	rdbyte	local05, objptr
026f8     34 0E 86 F1 | 	sub	objptr, #52
026fc     35 5D 02 F6 | 	mov	arg01, local01
02700     00 74 06 F6 | 	mov	local06, #0
02704     08 D9 9F FE | 	loc	pa,	#(@LR__0053-@LR__0052)
02708     93 00 A0 FD | 	call	#FCACHE_LOAD_
0270c                 | LR__0052
0270c     2E 77 CA FA | 	rdbyte	local07, arg01 wz
02710     01 74 06 51 |  if_ne	add	local06, #1
02714     01 5C 06 51 |  if_ne	add	arg01, #1
02718     F0 FF 9F 5D |  if_ne	jmp	#LR__0052
0271c                 | LR__0053
0271c     3A 2B 02 F6 | 	mov	result1, local06
02720     3A 73 02 F1 | 	add	local05, local06
02724     39 79 02 F6 | 	mov	local08, local05
02728     04 D9 9F FE | 	loc	pa,	#(@LR__0055-@LR__0054)
0272c     93 00 A0 FD | 	call	#FCACHE_LOAD_
02730                 | ' repeat while ncx>cpl-1
02730                 | LR__0054
02730     90 0E 06 F1 | 	add	objptr, #144
02734     07 73 02 FB | 	rdlong	local05, objptr
02738     90 0E 86 F1 | 	sub	objptr, #144
0273c     01 72 86 F1 | 	sub	local05, #1
02740     39 79 5A F2 | 	cmps	local08, local05 wcz
02744     18 00 90 ED |  if_be	jmp	#LR__0056
02748                 | '   ncx-=cpl
02748     90 0E 06 F1 | 	add	objptr, #144
0274c     07 7B 02 FB | 	rdlong	local09, objptr
02750     90 0E 86 F1 | 	sub	objptr, #144
02754     3D 79 82 F1 | 	sub	local08, local09
02758                 | '   ncy+=1
02758     01 70 06 F1 | 	add	local04, #1
0275c     D0 FF 9F FD | 	jmp	#LR__0054
02760                 | LR__0055
02760                 | LR__0056
02760                 | ' repeat while ncy>lines-1
02760                 | LR__0057
02760     94 0E 06 F1 | 	add	objptr, #148
02764     07 73 02 FB | 	rdlong	local05, objptr
02768     94 0E 86 F1 | 	sub	objptr, #148
0276c     01 72 86 F1 | 	sub	local05, #1
02770     39 71 5A F2 | 	cmps	local04, local05 wcz
02774     20 00 90 ED |  if_be	jmp	#LR__0058
02778                 | '   ncy-=1
02778     01 70 86 F1 | 	sub	local04, #1
0277c                 | '   scrollup()
0277c     F4 00 B0 FD | 	call	#_hng030rm_spin2_scrollup
02780                 | '   cursor_y-=1
02780     35 0E 06 F1 | 	add	objptr, #53
02784     07 73 C2 FA | 	rdbyte	local05, objptr
02788     01 72 86 F1 | 	sub	local05, #1
0278c     07 73 42 FC | 	wrbyte	local05, objptr
02790     35 0E 86 F1 | 	sub	objptr, #53
02794     C8 FF 9F FD | 	jmp	#LR__0057
02798                 | LR__0058
02798                 | ' 
02798                 | ' repeat iii from 0 to strsize(text)-1
02798     00 7C 06 F6 | 	mov	local10, #0
0279c     35 5D 02 F6 | 	mov	arg01, local01
027a0     00 74 06 F6 | 	mov	local06, #0
027a4     68 D8 9F FE | 	loc	pa,	#(@LR__0060-@LR__0059)
027a8     93 00 A0 FD | 	call	#FCACHE_LOAD_
027ac                 | LR__0059
027ac     2E 77 CA FA | 	rdbyte	local07, arg01 wz
027b0     01 74 06 51 |  if_ne	add	local06, #1
027b4     01 5C 06 51 |  if_ne	add	arg01, #1
027b8     F0 FF 9F 5D |  if_ne	jmp	#LR__0059
027bc                 | LR__0060
027bc     3A 2B 02 F6 | 	mov	result1, local06
027c0     15 7F 02 F6 | 	mov	local11, result1
027c4     01 7E 86 F1 | 	sub	local11, #1
027c8     00 7E 5E F2 | 	cmps	local11, #0 wcz
027cc     01 80 06 16 |  if_a	mov	local12, #1
027d0     01 80 66 E6 |  if_be	neg	local12, #1
027d4     40 7F 02 F1 | 	add	local11, local12
027d8     7C D8 9F FE | 	loc	pa,	#(@LR__0062-@LR__0061)
027dc     93 00 A0 FD | 	call	#FCACHE_LOAD_
027e0                 | LR__0061
027e0     90 0E 06 F1 | 	add	objptr, #144
027e4     07 83 02 FB | 	rdlong	local13, objptr
027e8     5B 0E 86 F1 | 	sub	objptr, #91
027ec     07 85 C2 FA | 	rdbyte	local14, objptr
027f0     42 83 02 FD | 	qmul	local13, local14
027f4     18 86 62 FD | 	getqx	local15
027f8     01 0E 86 F1 | 	sub	objptr, #1
027fc     07 83 C2 FA | 	rdbyte	local13, objptr
02800     34 0E 86 F1 | 	sub	objptr, #52
02804     41 87 02 F1 | 	add	local15, local13
02808     3E 87 02 F1 | 	add	local15, local10
0280c     02 86 66 F0 | 	shl	local15, #2
02810     07 89 02 FB | 	rdlong	local16, objptr
02814     43 89 02 F1 | 	add	local16, local15
02818     44 8B 02 FB | 	rdlong	local17, local16
0281c     7F 00 00 FF 
02820     FF 8B 06 F5 | 	and	local17, ##65535
02824     36 8B 42 F5 | 	or	local17, local02
02828                 | ' 
02828                 | '   long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)]:=long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)] &$FFFF | c
02828     44 8B 62 FC | 	wrlong	local17, local16
0282c     40 7D 02 F1 | 	add	local10, local12
02830     3F 7D 0A F2 | 	cmp	local10, local11 wz
02834     A8 FF 9F 5D |  if_ne	jmp	#LR__0061
02838                 | LR__0062
02838                 | ' 
02838                 | ' outtextxy(cursor_x,cursor_y,text)
02838     34 0E 06 F1 | 	add	objptr, #52
0283c     07 5D C2 FA | 	rdbyte	arg01, objptr
02840     01 0E 06 F1 | 	add	objptr, #1
02844     07 5F C2 FA | 	rdbyte	arg02, objptr
02848     35 0E 86 F1 | 	sub	objptr, #53
0284c     35 61 02 F6 | 	mov	arg03, local01
02850     2C FC BF FD | 	call	#_hng030rm_spin2_outtextxy
02854                 | ' 
02854                 | ' cursor_x:=ncx
02854     34 0E 06 F1 | 	add	objptr, #52
02858     07 79 42 FC | 	wrbyte	local08, objptr
0285c                 | ' cursor_y:=ncy
0285c     01 0E 06 F1 | 	add	objptr, #1
02860     07 71 42 FC | 	wrbyte	local04, objptr
02864     35 0E 86 F1 | 	sub	objptr, #53
02868     AF F0 03 F6 | 	mov	ptra, fp
0286c     BF 00 A0 FD | 	call	#popregs_
02870                 | _hng030rm_spin2_write_ret
02870     2D 00 64 FD | 	ret
02874                 | 
02874                 | ' 
02874                 | ' ''-----------  Scroll the screen one line up
02874                 | ' 
02874                 | ' pub scrollup() | i
02874                 | _hng030rm_spin2_scrollup
02874     0A 5A 05 F6 | 	mov	COUNT_, #10
02878     B0 00 A0 FD | 	call	#pushregs_
0287c     90 0E 06 F1 | 	add	objptr, #144
02880     07 6B 02 FB | 	rdlong	local01, objptr
02884     90 0E 86 F1 | 	sub	objptr, #144
02888     02 6A 66 F0 | 	shl	local01, #2
0288c     07 5F 02 FB | 	rdlong	arg02, objptr
02890     35 5F 02 F1 | 	add	arg02, local01
02894     30 0E 06 F1 | 	add	objptr, #48
02898     07 61 02 FB | 	rdlong	arg03, objptr
0289c     60 0E 06 F1 | 	add	objptr, #96
028a0     07 6D 02 FB | 	rdlong	local02, objptr
028a4     90 0E 86 F1 | 	sub	objptr, #144
028a8     36 61 82 F1 | 	sub	arg03, local02
028ac                 | ' 
028ac                 | ' longmove(buf_ptr,buf_ptr+4*cpl,buflen-cpl)
028ac     07 5D 02 FB | 	rdlong	arg01, objptr
028b0     EC 35 B0 FD | 	call	#__system__longmove
028b4                 | ' repeat i from buflen-cpl to buflen-1
028b4     30 0E 06 F1 | 	add	objptr, #48
028b8     07 6F 02 FB | 	rdlong	local03, objptr
028bc     60 0E 06 F1 | 	add	objptr, #96
028c0     07 6D 02 FB | 	rdlong	local02, objptr
028c4     36 6F 82 F1 | 	sub	local03, local02
028c8     60 0E 86 F1 | 	sub	objptr, #96
028cc     07 71 02 FB | 	rdlong	local04, objptr
028d0     01 70 86 F1 | 	sub	local04, #1
028d4     07 73 02 FB | 	rdlong	local05, objptr
028d8     60 0E 06 F1 | 	add	objptr, #96
028dc     07 75 02 FB | 	rdlong	local06, objptr
028e0     90 0E 86 F1 | 	sub	objptr, #144
028e4     3A 73 82 F1 | 	sub	local05, local06
028e8     39 71 5A F2 | 	cmps	local04, local05 wcz
028ec     01 76 06 16 |  if_a	mov	local07, #1
028f0     01 76 66 E6 |  if_be	neg	local07, #1
028f4     3B 71 02 F1 | 	add	local04, local07
028f8     34 D7 9F FE | 	loc	pa,	#(@LR__0064-@LR__0063)
028fc     93 00 A0 FD | 	call	#FCACHE_LOAD_
02900                 | LR__0063
02900     37 79 02 F6 | 	mov	local08, local03
02904     02 78 66 F0 | 	shl	local08, #2
02908     07 7B 02 FB | 	rdlong	local09, objptr
0290c     3C 7B 02 F1 | 	add	local09, local08
02910     3D 7D 02 FB | 	rdlong	local10, local09
02914     80 FF 7F FF 
02918     00 7C 06 F5 | 	and	local10, ##-65536
0291c     20 7C 46 F5 | 	or	local10, #32
02920                 | '   long[buf_ptr+4*i]:=(long[buf_ptr+4*i] & $FFFF0000) | 32
02920     3D 7D 62 FC | 	wrlong	local10, local09
02924     3B 6F 02 F1 | 	add	local03, local07
02928     38 6F 0A F2 | 	cmp	local03, local04 wz
0292c     D0 FF 9F 5D |  if_ne	jmp	#LR__0063
02930                 | LR__0064
02930     AF F0 03 F6 | 	mov	ptra, fp
02934     BF 00 A0 FD | 	call	#popregs_
02938                 | _hng030rm_spin2_scrollup_ret
02938     2D 00 64 FD | 	ret
0293c                 | 
0293c                 | ' 
0293c                 | ' 
0293c                 | ' 
0293c                 | ' pub inttostr2(i,d):result |q,pos,k,j
0293c                 | _hng030rm_spin2_inttostr2
0293c                 | ' 
0293c                 | ' j:=i
0293c     2F 31 02 F6 | 	mov	_var01, arg02
02940     01 30 86 F1 | 	sub	_var01, #1
02944                 | ' pos:=d-1
02944     18 33 02 F6 | 	mov	_var02, _var01
02948                 | ' k:=0
02948     44 0E 06 F1 | 	add	objptr, #68
0294c     07 5F 02 F1 | 	add	arg02, objptr
02950                 | ' 
02950                 | ' n_string[d]:=0
02950     2F 01 48 FC | 	wrbyte	#0, arg02
02954                 | ' repeat k from 0 to d-1
02954     00 34 06 F6 | 	mov	_var03, #0
02958     00 30 5E F2 | 	cmps	_var01, #0 wcz
0295c     44 0E 86 F1 | 	sub	objptr, #68
02960     01 36 06 16 |  if_a	mov	_var04, #1
02964     01 36 66 E6 |  if_be	neg	_var04, #1
02968     1B 31 02 F1 | 	add	_var01, _var04
0296c     B0 D6 9F FE | 	loc	pa,	#(@LR__0066-@LR__0065)
02970     93 00 A0 FD | 	call	#FCACHE_LOAD_
02974                 | LR__0065
02974     1A 39 02 F6 | 	mov	_var05, _var03
02978     44 0E 06 F1 | 	add	objptr, #68
0297c     07 39 02 F1 | 	add	_var05, objptr
02980                 | '   n_string[k]:=48
02980     1C 61 48 FC | 	wrbyte	#48, _var05
02984     1B 35 02 F1 | 	add	_var03, _var04
02988     18 35 0A F2 | 	cmp	_var03, _var01 wz
0298c     44 0E 86 F1 | 	sub	objptr, #68
02990     E0 FF 9F 5D |  if_ne	jmp	#LR__0065
02994                 | LR__0066
02994                 | ' 
02994                 | ' if (j<>0)
02994     00 5C 0E F2 | 	cmp	arg01, #0 wz
02998     40 00 90 AD |  if_e	jmp	#LR__0069
0299c                 | ' 
0299c                 | '   repeat while (pos>-1)
0299c                 | LR__0067
0299c     FF FF 7F FF 
029a0     FF 33 5E F2 | 	cmps	_var02, ##-1 wcz
029a4     34 00 90 ED |  if_be	jmp	#LR__0068
029a8     2E 0B 03 F6 | 	mov	muldiva_, arg01
029ac     0A 0C 07 F6 | 	mov	muldivb_, #10
029b0     CC 00 A0 FD | 	call	#unsdivide_
029b4     85 3B 02 F6 | 	mov	_var06, muldiva_
029b8                 | '     q:=j+//10
029b8                 | '     q:=48+q
029b8     30 3A 06 F1 | 	add	_var06, #48
029bc     19 3D 02 F6 | 	mov	_var07, _var02
029c0     44 0E 06 F1 | 	add	objptr, #68
029c4     07 3D 02 F1 | 	add	_var07, objptr
029c8                 | '     n_string[pos]:=q
029c8     1E 3B 42 FC | 	wrbyte	_var06, _var07
029cc                 | '     j:=j+/10
029cc     86 5D 02 F6 | 	mov	arg01, muldivb_
029d0                 | '     pos-=1
029d0     01 32 86 F1 | 	sub	_var02, #1
029d4     44 0E 86 F1 | 	sub	objptr, #68
029d8     C0 FF 9F FD | 	jmp	#LR__0067
029dc                 | LR__0068
029dc                 | LR__0069
029dc     44 0E 06 F1 | 	add	objptr, #68
029e0     07 2B 02 F6 | 	mov	result1, objptr
029e4     44 0E 86 F1 | 	sub	objptr, #68
029e8                 | ' 
029e8                 | ' 
029e8                 | ' q:=@n_string
029e8                 | ' return q
029e8                 | _hng030rm_spin2_inttostr2_ret
029e8     2D 00 64 FD | 	ret
029ec                 | 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' '*************************************************************************
029ec                 | ' '                                                                        *
029ec                 | ' '  Mode setting and driver start                                                          *
029ec                 | ' '                                                                        *
029ec                 | ' '*************************************************************************
029ec                 | ' 
029ec                 | ' ''---------  Set the graphics mode
029ec                 | ' 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' pub setmode(mode) | i', 'xzoom, yzoom, azoom
029ec                 | _hng030rm_spin2_setmode
029ec     50 5A 05 F6 | 	mov	COUNT_, #80
029f0     B0 00 A0 FD | 	call	#pushregs_
029f4     2E 6B 02 F6 | 	mov	local01, arg01
029f8                 | ' 
029f8                 | ' '' mode:tn_bb_cc_vv_hh
029f8                 | ' '' hh - h.zoom, vv-v.zoom, cc-c.depth,
029f8                 | ' '' bb - borders/total pixels, 00-wide/1140, 01 medium/1026, 10 narrow/912, 11 no border, 1024 px PAL, 880 px NTSC
029f8                 | ' 
029f8                 | ' if mode==(512+192+48)
029f8     01 00 00 FF 
029fc     F0 6A 0E F2 | 	cmp	local01, ##752 wz
02a00                 | '   return 'no RAM
02a00     1C 0A 90 AD |  if_e	jmp	#LR__0110
02a04                 | ' 
02a04                 | ' case_fast (mode>>6) & 7 ' timings are the same for graphic and text
02a04     35 6D 02 F6 | 	mov	local02, local01
02a08     06 6C 46 F0 | 	shr	local02, #6
02a0c     07 6C 06 F5 | 	and	local02, #7
02a10     08 6C 26 F3 | 	fle	local02, #8
02a14     36 6F 02 F6 | 	mov	local03, local02
02a18     30 6E 62 FD | 	jmprel	local03
02a1c                 | LR__0070
02a1c     20 00 90 FD | 	jmp	#LR__0071
02a20     58 00 90 FD | 	jmp	#LR__0072
02a24     90 00 90 FD | 	jmp	#LR__0073
02a28     C8 00 90 FD | 	jmp	#LR__0074
02a2c     00 01 90 FD | 	jmp	#LR__0075
02a30     38 01 90 FD | 	jmp	#LR__0076
02a34     70 01 90 FD | 	jmp	#LR__0077
02a38     A8 01 90 FD | 	jmp	#LR__0078
02a3c     E4 01 90 FD | 	jmp	#LR__0079
02a40                 | LR__0071
02a40                 | ' 
02a40                 | '     0:  longmove(@timings,@timings000,16)   'PAL 50 Hz signaling 1140x624, active 800x480, 100x30 text, wide border, 2 colors per pixel, 00_00_00_00_00=0, 354_693_878 Hz
02a40     50 0E 06 F1 | 	add	objptr, #80
02a44     07 5D 02 F6 | 	mov	arg01, objptr
02a48     50 0E 86 F1 | 	sub	objptr, #80
02a4c     0E 00 00 FF 
02a50     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7256
02a54     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02a58     38 73 02 F6 | 	mov	local05, local04
02a5c     10 74 06 F6 | 	mov	local06, #16
02a60     39 5F 02 F6 | 	mov	arg02, local05
02a64     10 60 06 F6 | 	mov	arg03, #16
02a68     0E 00 00 FF 
02a6c     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7256
02a70     2C 34 B0 FD | 	call	#__system__longmove
02a74     15 77 02 F6 | 	mov	local07, result1
02a78     A8 01 90 FD | 	jmp	#LR__0079
02a7c                 | LR__0072
02a7c                 | '     1:  longmove(@timings,@timings064,16)   'PAL 50 Hz signaling 1026x624, active 880x496, 110x31 text, medium border, 2 colors per pixel 00_01_00_00_00=64, 319_215_686 Hz
02a7c     50 0E 06 F1 | 	add	objptr, #80
02a80     07 5D 02 F6 | 	mov	arg01, objptr
02a84     50 0E 86 F1 | 	sub	objptr, #80
02a88     0E 00 00 FF 
02a8c     98 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7320
02a90     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02a94     38 73 02 F6 | 	mov	local05, local04
02a98     10 74 06 F6 | 	mov	local06, #16
02a9c     39 5F 02 F6 | 	mov	arg02, local05
02aa0     10 60 06 F6 | 	mov	arg03, #16
02aa4     0E 00 00 FF 
02aa8     98 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7320
02aac     F0 33 B0 FD | 	call	#__system__longmove
02ab0     15 77 02 F6 | 	mov	local07, result1
02ab4     6C 01 90 FD | 	jmp	#LR__0079
02ab8                 | LR__0073
02ab8                 | '     2:  longmove(@timings,@timings128,16)   'PAL 50 Hz signaling 912x624, active 800x480, 100x30 text, medium border, 2 colors per pixel 00_10_00_00_00=64, 283750000z
02ab8     50 0E 06 F1 | 	add	objptr, #80
02abc     07 5D 02 F6 | 	mov	arg01, objptr
02ac0     50 0E 86 F1 | 	sub	objptr, #80
02ac4     0E 00 00 FF 
02ac8     D8 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7384
02acc     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02ad0     38 73 02 F6 | 	mov	local05, local04
02ad4     10 74 06 F6 | 	mov	local06, #16
02ad8     39 5F 02 F6 | 	mov	arg02, local05
02adc     10 60 06 F6 | 	mov	arg03, #16
02ae0     0E 00 00 FF 
02ae4     D8 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7384
02ae8     B4 33 B0 FD | 	call	#__system__longmove
02aec     15 77 02 F6 | 	mov	local07, result1
02af0     30 01 90 FD | 	jmp	#LR__0079
02af4                 | LR__0074
02af4                 | '     3:  longmove(@timings,@timings192,16)   'PAL 50 Hz signaling 1140x624, active 1024x576, 128x36 text, borderless, 2 colors per pixel 00_11_00_00_00=6192, 354_693_878 Hz
02af4     50 0E 06 F1 | 	add	objptr, #80
02af8     07 5D 02 F6 | 	mov	arg01, objptr
02afc     50 0E 86 F1 | 	sub	objptr, #80
02b00     0E 00 00 FF 
02b04     18 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7448
02b08     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b0c     38 73 02 F6 | 	mov	local05, local04
02b10     10 74 06 F6 | 	mov	local06, #16
02b14     39 5F 02 F6 | 	mov	arg02, local05
02b18     10 60 06 F6 | 	mov	arg03, #16
02b1c     0E 00 00 FF 
02b20     18 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7448
02b24     78 33 B0 FD | 	call	#__system__longmove
02b28     15 77 02 F6 | 	mov	local07, result1
02b2c     F4 00 90 FD | 	jmp	#LR__0079
02b30                 | LR__0075
02b30                 | '     4:  longmove(@timings,@timings256,16)   'NTSC 50 Hz signaling 1140x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_00_00_00_00=256, 357959184 Hz
02b30     50 0E 06 F1 | 	add	objptr, #80
02b34     07 5D 02 F6 | 	mov	arg01, objptr
02b38     50 0E 86 F1 | 	sub	objptr, #80
02b3c     0E 00 00 FF 
02b40     58 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7512
02b44     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b48     38 73 02 F6 | 	mov	local05, local04
02b4c     10 74 06 F6 | 	mov	local06, #16
02b50     39 5F 02 F6 | 	mov	arg02, local05
02b54     10 60 06 F6 | 	mov	arg03, #16
02b58     0E 00 00 FF 
02b5c     58 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7512
02b60     3C 33 B0 FD | 	call	#__system__longmove
02b64     15 77 02 F6 | 	mov	local07, result1
02b68     B8 00 90 FD | 	jmp	#LR__0079
02b6c                 | LR__0076
02b6c                 | '     5:  longmove(@timings,@timings320,16)   'NTSC 50 Hz signaling 1026x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_01_00_00_00=320, 322162162 Hz
02b6c     50 0E 06 F1 | 	add	objptr, #80
02b70     07 5D 02 F6 | 	mov	arg01, objptr
02b74     50 0E 86 F1 | 	sub	objptr, #80
02b78     0E 00 00 FF 
02b7c     98 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7576
02b80     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b84     38 73 02 F6 | 	mov	local05, local04
02b88     10 74 06 F6 | 	mov	local06, #16
02b8c     39 5F 02 F6 | 	mov	arg02, local05
02b90     10 60 06 F6 | 	mov	arg03, #16
02b94     0E 00 00 FF 
02b98     98 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7576
02b9c     00 33 B0 FD | 	call	#__system__longmove
02ba0     15 77 02 F6 | 	mov	local07, result1
02ba4     7C 00 90 FD | 	jmp	#LR__0079
02ba8                 | LR__0077
02ba8                 | '     6:  longmove(@timings,@timings384,16)   'NTSC 50 Hz signaling 912x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_10_00_00_00=384, 286363636 Hz
02ba8     50 0E 06 F1 | 	add	objptr, #80
02bac     07 5D 02 F6 | 	mov	arg01, objptr
02bb0     50 0E 86 F1 | 	sub	objptr, #80
02bb4     0E 00 00 FF 
02bb8     D8 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7640
02bbc     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02bc0     38 73 02 F6 | 	mov	local05, local04
02bc4     10 74 06 F6 | 	mov	local06, #16
02bc8     39 5F 02 F6 | 	mov	arg02, local05
02bcc     10 60 06 F6 | 	mov	arg03, #16
02bd0     0E 00 00 FF 
02bd4     D8 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7640
02bd8     C4 32 B0 FD | 	call	#__system__longmove
02bdc     15 77 02 F6 | 	mov	local07, result1
02be0     40 00 90 FD | 	jmp	#LR__0079
02be4                 | LR__0078
02be4                 | '     7:  longmove(@timings,@timings448,16)   'NTSC 50 Hz signaling 1026x524, active 880x496, 110x31 text, borderless, 2 colors per pixel, 01_11_00_00_00=496, 322162162 Hz
02be4     50 0E 06 F1 | 	add	objptr, #80
02be8     07 79 02 F6 | 	mov	local08, objptr
02bec     3C 7B 02 F6 | 	mov	local09, local08
02bf0     0F 00 00 FF 
02bf4     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7704
02bf8     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02bfc     38 73 02 F6 | 	mov	local05, local04
02c00     10 74 06 F6 | 	mov	local06, #16
02c04     3D 5D 02 F6 | 	mov	arg01, local09
02c08     39 5F 02 F6 | 	mov	arg02, local05
02c0c     10 60 06 F6 | 	mov	arg03, #16
02c10     50 0E 86 F1 | 	sub	objptr, #80
02c14     0F 00 00 FF 
02c18     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7704
02c1c     80 32 B0 FD | 	call	#__system__longmove
02c20     15 77 02 F6 | 	mov	local07, result1
02c24                 | LR__0079
02c24                 | ' 
02c24                 | ' ' 4-bit graphics: do nothing with timings :)
02c24                 | ' if mode<512
02c24     01 00 00 FF 
02c28     00 6A 5E F2 | 	cmps	local01, ##512 wcz
02c2c     20 00 90 3D |  if_ae	jmp	#LR__0080
02c30     0C 00 00 FF 
02c34     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
02c38     0D 7D 02 F6 | 	mov	local10, ptr__hng030rm_spin2_dat__
02c3c                 | '   palette_ptr:=@ataripalette
02c3c     18 0E 06 F1 | 	add	objptr, #24
02c40     07 7D 62 FC | 	wrlong	local10, objptr
02c44     18 0E 86 F1 | 	sub	objptr, #24
02c48     0C 00 00 FF 
02c4c     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
02c50                 | LR__0080
02c50                 | ' 
02c50                 | ' if (mode & (%10_00_11_0000))==(%10_00_11_0000) ' 8bit graphics, 4 pixels per long instead of 8, cpp x2
02c50     35 6D 02 F6 | 	mov	local02, local01
02c54     01 00 00 FF 
02c58     30 6C 06 F5 | 	and	local02, ##560
02c5c     01 00 00 FF 
02c60     30 6C 0E F2 | 	cmp	local02, ##560 wz
02c64     48 00 90 5D |  if_ne	jmp	#LR__0081
02c68                 | '   timings[5]:=4
02c68     64 0E 06 F1 | 	add	objptr, #100
02c6c     07 09 68 FC | 	wrlong	#4, objptr
02c70     18 0E 06 F1 | 	add	objptr, #24
02c74     07 7F 02 FB | 	rdlong	local11, objptr
02c78     01 7E 66 F0 | 	shl	local11, #1
02c7c                 | '   timings[11]:=timings[11]<<1
02c7c     07 7F 62 FC | 	wrlong	local11, objptr
02c80                 | '   putpixel:=p8
02c80     6C 0E 06 F1 | 	add	objptr, #108
02c84     07 6D 02 FB | 	rdlong	local02, objptr
02c88     10 0E 86 F1 | 	sub	objptr, #16
02c8c     07 6D 62 FC | 	wrlong	local02, objptr
02c90     0C 00 00 FF 
02c94     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
02c98     0D 81 02 F6 | 	mov	local12, ptr__hng030rm_spin2_dat__
02c9c                 | '   palette_ptr:=@ataripalette
02c9c     C0 0E 86 F1 | 	sub	objptr, #192
02ca0     07 81 62 FC | 	wrlong	local12, objptr
02ca4     18 0E 86 F1 | 	sub	objptr, #24
02ca8     0C 00 00 FF 
02cac     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
02cb0                 | LR__0081
02cb0                 | ' 
02cb0                 | ' if (mode & (%10_00_11_0000))==(%10_00_01_0000) ' 2bit graphics, 16 pixels per long instead of 8, cpp /2
02cb0     35 6D 02 F6 | 	mov	local02, local01
02cb4     01 00 00 FF 
02cb8     30 6C 06 F5 | 	and	local02, ##560
02cbc     01 00 00 FF 
02cc0     10 6C 0E F2 | 	cmp	local02, ##528 wz
02cc4     48 00 90 5D |  if_ne	jmp	#LR__0082
02cc8                 | '   timings[5]:=16
02cc8     64 0E 06 F1 | 	add	objptr, #100
02ccc     07 21 68 FC | 	wrlong	#16, objptr
02cd0     18 0E 06 F1 | 	add	objptr, #24
02cd4     07 83 02 FB | 	rdlong	local13, objptr
02cd8     01 82 46 F0 | 	shr	local13, #1
02cdc                 | '   timings[11]:=timings[11]>>1
02cdc     07 83 62 FC | 	wrlong	local13, objptr
02ce0                 | '   putpixel:=p2
02ce0     64 0E 06 F1 | 	add	objptr, #100
02ce4     07 6D 02 FB | 	rdlong	local02, objptr
02ce8     08 0E 86 F1 | 	sub	objptr, #8
02cec     07 6D 62 FC | 	wrlong	local02, objptr
02cf0     0C 00 00 FF 
02cf4     08 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6152
02cf8     0D 85 02 F6 | 	mov	local14, ptr__hng030rm_spin2_dat__
02cfc                 | '   palette_ptr:=@fourcolors
02cfc     C0 0E 86 F1 | 	sub	objptr, #192
02d00     07 85 62 FC | 	wrlong	local14, objptr
02d04     18 0E 86 F1 | 	sub	objptr, #24
02d08     0C 00 00 FF 
02d0c     08 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6152
02d10                 | LR__0082
02d10                 | ' 
02d10                 | ' if (mode & (%10_00_11_0000))==(%10_00_00_0000) ' 1bit graphics, 32 pixels per long instead of 8, cpp /4
02d10     35 6D 02 F6 | 	mov	local02, local01
02d14     01 00 00 FF 
02d18     30 6C 06 F5 | 	and	local02, ##560
02d1c     01 00 00 FF 
02d20     00 6C 0E F2 | 	cmp	local02, ##512 wz
02d24     48 00 90 5D |  if_ne	jmp	#LR__0083
02d28                 | '   timings[5]:=32
02d28     64 0E 06 F1 | 	add	objptr, #100
02d2c     07 41 68 FC | 	wrlong	#32, objptr
02d30     18 0E 06 F1 | 	add	objptr, #24
02d34     07 87 02 FB | 	rdlong	local15, objptr
02d38     02 86 46 F0 | 	shr	local15, #2
02d3c                 | '   timings[11]:=timings[11]>>2
02d3c     07 87 62 FC | 	wrlong	local15, objptr
02d40                 | '   putpixel:=p1
02d40     60 0E 06 F1 | 	add	objptr, #96
02d44     07 6D 02 FB | 	rdlong	local02, objptr
02d48     04 0E 86 F1 | 	sub	objptr, #4
02d4c     07 6D 62 FC | 	wrlong	local02, objptr
02d50     0C 00 00 FF 
02d54     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6144
02d58     0D 89 02 F6 | 	mov	local16, ptr__hng030rm_spin2_dat__
02d5c                 | '   palette_ptr:=@twocolors
02d5c     C0 0E 86 F1 | 	sub	objptr, #192
02d60     07 89 62 FC | 	wrlong	local16, objptr
02d64     18 0E 86 F1 | 	sub	objptr, #24
02d68     0C 00 00 FF 
02d6c     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6144
02d70                 | LR__0083
02d70                 | ' 
02d70                 | ' if (mode & (%10_00_11_0000))==(%10_00_10_0000) ' 4bit graphics,
02d70     35 6D 02 F6 | 	mov	local02, local01
02d74     01 00 00 FF 
02d78     30 6C 06 F5 | 	and	local02, ##560
02d7c     01 00 00 FF 
02d80     20 6C 0E F2 | 	cmp	local02, ##544 wz
02d84     30 00 90 5D |  if_ne	jmp	#LR__0084
02d88                 | '   putpixel:=p4
02d88     E4 0E 06 F1 | 	add	objptr, #228
02d8c     07 6D 02 FB | 	rdlong	local02, objptr
02d90     0C 0E 86 F1 | 	sub	objptr, #12
02d94     07 6D 62 FC | 	wrlong	local02, objptr
02d98     0C 00 00 FF 
02d9c     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6168
02da0     0D 8B 02 F6 | 	mov	local17, ptr__hng030rm_spin2_dat__
02da4                 | '   palette_ptr:=@vga16
02da4     C0 0E 86 F1 | 	sub	objptr, #192
02da8     07 8B 62 FC | 	wrlong	local17, objptr
02dac     18 0E 86 F1 | 	sub	objptr, #24
02db0     0C 00 00 FF 
02db4     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6168
02db8                 | LR__0084
02db8                 | ' 
02db8                 | ' repeat i from 0 to 4
02db8     00 8C 06 F6 | 	mov	local18, #0
02dbc     84 D2 9F FE | 	loc	pa,	#(@LR__0086-@LR__0085)
02dc0     93 00 A0 FD | 	call	#FCACHE_LOAD_
02dc4                 | LR__0085
02dc4     46 8F 02 F6 | 	mov	local19, local18
02dc8     02 8E 66 F0 | 	shl	local19, #2
02dcc     50 0E 06 F1 | 	add	objptr, #80
02dd0     07 8F 02 F1 | 	add	local19, objptr
02dd4     2C 0E 86 F1 | 	sub	objptr, #44
02dd8     07 91 02 FB | 	rdlong	local20, objptr
02ddc     24 0E 86 F1 | 	sub	objptr, #36
02de0     11 90 66 F0 | 	shl	local20, #17
02de4     47 93 02 FB | 	rdlong	local21, local19
02de8     48 93 02 F1 | 	add	local21, local20
02dec     49 95 02 F6 | 	mov	local22, local21
02df0     80 40 38 FF 
02df4     00 94 06 F1 | 	add	local22, ##1887502336
02df8                 | '   timings[i]:=timings[i]+hdmibase<<17+ timingsxxt
02df8     47 95 62 FC | 	wrlong	local22, local19
02dfc     01 8C 06 F1 | 	add	local18, #1
02e00     05 8C 5E F2 | 	cmps	local18, #5 wcz
02e04     BC FF 9F CD |  if_b	jmp	#LR__0085
02e08                 | LR__0086
02e08     24 0E 06 F1 | 	add	objptr, #36
02e0c     07 97 02 FB | 	rdlong	local23, objptr
02e10     11 96 66 F0 | 	shl	local23, #17
02e14     40 0E 06 F1 | 	add	objptr, #64
02e18     07 99 02 FB | 	rdlong	local24, objptr
02e1c     4B 99 02 F1 | 	add	local24, local23
02e20                 | ' timings[5]:=timings[5]+hdmibase<<17
02e20     07 99 62 FC | 	wrlong	local24, objptr
02e24                 | ' clkfreq:=timings[13]
02e24     20 0E 06 F1 | 	add	objptr, #32
02e28     07 6D 02 FB | 	rdlong	local02, objptr
02e2c     14 6C 66 FC | 	wrlong	local02, #20
02e30                 | ' hubset(timings[14])
02e30     04 0E 06 F1 | 	add	objptr, #4
02e34     07 5D 02 FB | 	rdlong	arg01, objptr
02e38     88 0E 86 F1 | 	sub	objptr, #136
02e3c     00 5C 62 FD | 	hubset	arg01
02e40                 | ' waitms(1)
02e40     01 5C 06 F6 | 	mov	arg01, #1
02e44     F8 32 B0 FD | 	call	#__system___waitms
02e48     35 9B 02 F6 | 	mov	local25, local01
02e4c     03 9A 06 F5 | 	and	local25, #3
02e50     4D 9D C2 F9 | 	decod	local26, local25
02e54                 | ' 
02e54                 | ' 
02e54                 | ' xzoom:=1<<(mode & 3)
02e54     CC 0E 06 F1 | 	add	objptr, #204
02e58     07 9D 62 FC | 	wrlong	local26, objptr
02e5c                 | ' 
02e5c                 | ' if (xzoom==8) && (((mode>>4)&3)<>3)
02e5c     4E 79 02 F6 | 	mov	local08, local26
02e60     CC 0E 86 F1 | 	sub	objptr, #204
02e64     08 78 0E F2 | 	cmp	local08, #8 wz
02e68     24 00 90 5D |  if_ne	jmp	#LR__0087
02e6c     35 7B 02 F6 | 	mov	local09, local01
02e70     04 7A 46 F0 | 	shr	local09, #4
02e74     03 7A 06 F5 | 	and	local09, #3
02e78     03 7A 0E F2 | 	cmp	local09, #3 wz
02e7c     10 00 90 AD |  if_e	jmp	#LR__0087
02e80                 | '   xzoom:=4
02e80     04 6C 06 F6 | 	mov	local02, #4
02e84     CC 0E 06 F1 | 	add	objptr, #204
02e88     07 09 68 FC | 	wrlong	#4, objptr
02e8c     CC 0E 86 F1 | 	sub	objptr, #204
02e90                 | LR__0087
02e90     35 9F 02 F6 | 	mov	local27, local01
02e94     02 9E 46 F0 | 	shr	local27, #2
02e98     03 9E 06 F5 | 	and	local27, #3
02e9c     4F A1 C2 F9 | 	decod	local28, local27
02ea0                 | ' 
02ea0                 | ' yzoom:=1<<((mode>>2) & 3)
02ea0     D0 0E 06 F1 | 	add	objptr, #208
02ea4     07 A1 62 FC | 	wrlong	local28, objptr
02ea8     04 0E 86 F1 | 	sub	objptr, #4
02eac     07 79 02 FB | 	rdlong	local08, objptr
02eb0     04 0E 06 F1 | 	add	objptr, #4
02eb4     07 71 02 FB | 	rdlong	local04, objptr
02eb8     38 79 02 FD | 	qmul	local08, local04
02ebc     18 A2 62 FD | 	getqx	local29
02ec0                 | ' azoom:=xzoom*yzoom
02ec0     04 0E 06 F1 | 	add	objptr, #4
02ec4     07 A3 62 FC | 	wrlong	local29, objptr
02ec8                 | ' 
02ec8                 | ' cpl:=timings[11]
02ec8     58 0E 86 F1 | 	sub	objptr, #88
02ecc     07 6D 02 FB | 	rdlong	local02, objptr
02ed0     14 0E 06 F1 | 	add	objptr, #20
02ed4     07 6D 62 FC | 	wrlong	local02, objptr
02ed8     90 0E 86 F1 | 	sub	objptr, #144
02edc                 | ' if (mode<512)
02edc     01 00 00 FF 
02ee0     00 6A 5E F2 | 	cmps	local01, ##512 wcz
02ee4     60 00 90 3D |  if_ae	jmp	#LR__0088
02ee8     80 0E 06 F1 | 	add	objptr, #128
02eec     07 0B 03 FB | 	rdlong	muldiva_, objptr
02ef0     04 0A 47 F0 | 	shr	muldiva_, #4
02ef4     50 0E 06 F1 | 	add	objptr, #80
02ef8     07 0D 03 FB | 	rdlong	muldivb_, objptr
02efc     D0 0E 86 F1 | 	sub	objptr, #208
02f00     CC 00 A0 FD | 	call	#unsdivide_
02f04                 | '   lines:=(timings[12]>>4)+/yzoom
02f04     94 0E 06 F1 | 	add	objptr, #148
02f08     07 0D 63 FC | 	wrlong	muldivb_, objptr
02f0c                 | '   if ((timings[12]>>4)+//yzoom) <>0
02f0c     14 0E 86 F1 | 	sub	objptr, #20
02f10     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f14     04 0A 47 F0 | 	shr	muldiva_, #4
02f18     50 0E 06 F1 | 	add	objptr, #80
02f1c     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f20     D0 0E 86 F1 | 	sub	objptr, #208
02f24     CC 00 A0 FD | 	call	#unsdivide_
02f28     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
02f2c     AC 00 90 AD |  if_e	jmp	#LR__0091
02f30                 | '     lines +=1
02f30     94 0E 06 F1 | 	add	objptr, #148
02f34     07 6D 02 FB | 	rdlong	local02, objptr
02f38     01 6C 06 F1 | 	add	local02, #1
02f3c     07 6D 62 FC | 	wrlong	local02, objptr
02f40     94 0E 86 F1 | 	sub	objptr, #148
02f44                 | ' 
02f44                 | ' else
02f44     94 00 90 FD | 	jmp	#LR__0091
02f48                 | LR__0088
02f48     80 0E 06 F1 | 	add	objptr, #128
02f4c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f50     50 0E 06 F1 | 	add	objptr, #80
02f54     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f58     D0 0E 86 F1 | 	sub	objptr, #208
02f5c     D0 00 A0 FD | 	call	#divide_
02f60                 | '   lines:=timings[12]/yzoom
02f60     94 0E 06 F1 | 	add	objptr, #148
02f64     07 0D 63 FC | 	wrlong	muldivb_, objptr
02f68                 | '   if cpl//xzoom==0
02f68     04 0E 86 F1 | 	sub	objptr, #4
02f6c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f70     3C 0E 06 F1 | 	add	objptr, #60
02f74     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f78     CC 0E 86 F1 | 	sub	objptr, #204
02f7c     D0 00 A0 FD | 	call	#divide_
02f80     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
02f84     28 00 90 5D |  if_ne	jmp	#LR__0089
02f88                 | '     cpl:=cpl/xzoom
02f88     90 0E 06 F1 | 	add	objptr, #144
02f8c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f90     3C 0E 06 F1 | 	add	objptr, #60
02f94     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f98     CC 0E 86 F1 | 	sub	objptr, #204
02f9c     D0 00 A0 FD | 	call	#divide_
02fa0     90 0E 06 F1 | 	add	objptr, #144
02fa4     07 0D 63 FC | 	wrlong	muldivb_, objptr
02fa8     90 0E 86 F1 | 	sub	objptr, #144
02fac                 | '   else
02fac     2C 00 90 FD | 	jmp	#LR__0090
02fb0                 | LR__0089
02fb0     90 0E 06 F1 | 	add	objptr, #144
02fb4     07 0B 03 FB | 	rdlong	muldiva_, objptr
02fb8     3C 0E 06 F1 | 	add	objptr, #60
02fbc     07 0D 03 FB | 	rdlong	muldivb_, objptr
02fc0     CC 0E 86 F1 | 	sub	objptr, #204
02fc4     D0 00 A0 FD | 	call	#divide_
02fc8     86 A5 02 F6 | 	mov	local30, muldivb_
02fcc     01 A4 06 F1 | 	add	local30, #1
02fd0                 | '     cpl:=cpl/xzoom+1
02fd0     90 0E 06 F1 | 	add	objptr, #144
02fd4     07 A5 62 FC | 	wrlong	local30, objptr
02fd8     90 0E 86 F1 | 	sub	objptr, #144
02fdc                 | LR__0090
02fdc                 | LR__0091
02fdc     90 0E 06 F1 | 	add	objptr, #144
02fe0     07 79 02 FB | 	rdlong	local08, objptr
02fe4     04 0E 06 F1 | 	add	objptr, #4
02fe8     07 71 02 FB | 	rdlong	local04, objptr
02fec     38 79 02 FD | 	qmul	local08, local04
02ff0     18 A6 62 FD | 	getqx	local31
02ff4                 | ' 
02ff4                 | ' buflen:=(cpl*lines)
02ff4     64 0E 86 F1 | 	sub	objptr, #100
02ff8     07 A7 62 FC | 	wrlong	local31, objptr
02ffc     30 0E 86 F1 | 	sub	objptr, #48
03000     02 A6 66 F0 | 	shl	local31, #2
03004     13 A8 C6 F9 | 	decod	local32, #19
03008     53 A9 82 F1 | 	sub	local32, local31
0300c                 | ' buf_ptr:=$80000-4*buflen
0300c     07 A9 62 FC | 	wrlong	local32, objptr
03010     50 0E 06 F1 | 	add	objptr, #80
03014     07 AB 02 F6 | 	mov	local33, objptr
03018                 | ' mode_ptr:=@timings
03018     3C 0E 86 F1 | 	sub	objptr, #60
0301c     07 AB 62 FC | 	wrlong	local33, objptr
03020                 | ' graphmode:=mode
03020     B0 0E 06 F1 | 	add	objptr, #176
03024     07 6B 62 FC | 	wrlong	local01, objptr
03028     C4 0E 86 F1 | 	sub	objptr, #196
0302c                 | ' makedl(mode)
0302c     35 5D 02 F6 | 	mov	arg01, local01
03030                 | ' 
03030                 | ' ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
03030                 | '   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
03030                 | '   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
03030                 | ' 
03030                 | ' '   0 - display a up/down border line
03030                 | ' 
03030                 | ' '  ' aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - text line
03030                 | ' '    aaaa_aaaa_aaaa_aaaa_aa00 - buffer start, has to be aligned, 1 long for char, ff_bb_rr_cc, foreground, background,reserved, charcode
03030                 | ' '    zz - zoom, 00-x1, 01-x2, 10-x4, 11-blank line
03030                 | ' '    nnnn - font line to display, 0..15
03030                 | ' '    llllll - character line, determines the cursor Y position
03030                 | ' 
03030                 | ' 
03030                 | ' if (mode &256==0)
03030     00 5D CE F7 | 	test	arg01, #256 wz
03034     1C 00 90 5D |  if_ne	jmp	#LR__0092
03038     07 AD 02 FB | 	rdlong	local34, objptr
0303c     04 00 00 FF 
03040     00 AD 86 F1 | 	sub	local34, ##2304
03044                 | '   dl_ptr:=buf_ptr-4*576
03044     1C 0E 06 F1 | 	add	objptr, #28
03048     07 AD 62 FC | 	wrlong	local34, objptr
0304c     1C 0E 86 F1 | 	sub	objptr, #28
03050                 | ' else
03050     18 00 90 FD | 	jmp	#LR__0093
03054                 | LR__0092
03054     07 AF 02 FB | 	rdlong	local35, objptr
03058     03 00 00 FF 
0305c     C0 AF 86 F1 | 	sub	local35, ##1984
03060                 | '   dl_ptr:=buf_ptr-4*496
03060     1C 0E 06 F1 | 	add	objptr, #28
03064     07 AF 62 FC | 	wrlong	local35, objptr
03068     1C 0E 86 F1 | 	sub	objptr, #28
0306c                 | LR__0093
0306c     2E B1 02 F6 | 	mov	local36, arg01
03070     02 B0 46 F0 | 	shr	local36, #2
03074     03 B0 06 F5 | 	and	local36, #3
03078                 | '  ' dl_ptr:=buf_ptr-4*540
03078                 | ' 
03078                 | ' vzoom:=((mode>>2) & 3)
03078                 | ' 
03078                 | ' 
03078                 | ' if mode<512 '' text modes
03078     01 00 00 FF 
0307c     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
03080     E4 01 90 3D |  if_ae	jmp	#LR__0101
03084                 | ' 
03084                 | '   if timings[6]>0 'borders
03084     68 0E 06 F1 | 	add	objptr, #104
03088     07 B3 02 FB | 	rdlong	local37, objptr
0308c     68 0E 86 F1 | 	sub	objptr, #104
03090     00 B2 5E F2 | 	cmps	local37, #0 wcz
03094     D4 00 90 ED |  if_be	jmp	#LR__0098
03098                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03098     00 B4 06 F6 | 	mov	local38, #0
0309c     68 0E 06 F1 | 	add	objptr, #104
030a0     07 B7 02 FB | 	rdlong	local39, objptr
030a4     68 0E 86 F1 | 	sub	objptr, #104
030a8     01 B6 86 F1 | 	sub	local39, #1
030ac     00 B6 5E F2 | 	cmps	local39, #0 wcz
030b0     01 B8 06 16 |  if_a	mov	local40, #1
030b4     01 B8 66 E6 |  if_be	neg	local40, #1
030b8     5C BB 02 F6 | 	mov	local41, local40
030bc     5C B7 02 F1 | 	add	local39, local40
030c0     64 CF 9F FE | 	loc	pa,	#(@LR__0095-@LR__0094)
030c4     93 00 A0 FD | 	call	#FCACHE_LOAD_
030c8                 | LR__0094
030c8     5A BD 02 F6 | 	mov	local42, local38
030cc     02 BC 66 F0 | 	shl	local42, #2
030d0     1C 0E 06 F1 | 	add	objptr, #28
030d4     07 BF 02 FB | 	rdlong	local43, objptr
030d8     1C 0E 86 F1 | 	sub	objptr, #28
030dc     5E BF 02 F1 | 	add	local43, local42
030e0                 | '       long[dl_ptr+4*i]:=$0
030e0     5F 01 68 FC | 	wrlong	#0, local43
030e4     5D B5 02 F1 | 	add	local38, local41
030e8     5B B5 0A F2 | 	cmp	local38, local39 wz
030ec     D8 FF 9F 5D |  if_ne	jmp	#LR__0094
030f0                 | LR__0095
030f0                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
030f0     68 0E 06 F1 | 	add	objptr, #104
030f4     07 B5 02 FB | 	rdlong	local38, objptr
030f8     18 0E 06 F1 | 	add	objptr, #24
030fc     07 B9 02 FB | 	rdlong	local40, objptr
03100     5C B5 02 F1 | 	add	local38, local40
03104     0C 0E 06 F1 | 	add	objptr, #12
03108     07 C1 02 FB | 	rdlong	local44, objptr
0310c     01 C0 86 F1 | 	sub	local44, #1
03110     24 0E 86 F1 | 	sub	objptr, #36
03114     07 C3 02 FB | 	rdlong	local45, objptr
03118     18 0E 06 F1 | 	add	objptr, #24
0311c     07 C5 02 FB | 	rdlong	local46, objptr
03120     80 0E 86 F1 | 	sub	objptr, #128
03124     62 C3 02 F1 | 	add	local45, local46
03128     61 C1 5A F2 | 	cmps	local44, local45 wcz
0312c     01 C6 06 16 |  if_a	mov	local47, #1
03130     01 C6 66 E6 |  if_be	neg	local47, #1
03134     63 C9 02 F6 | 	mov	local48, local47
03138     63 C1 02 F1 | 	add	local44, local47
0313c     E8 CE 9F FE | 	loc	pa,	#(@LR__0097-@LR__0096)
03140     93 00 A0 FD | 	call	#FCACHE_LOAD_
03144                 | LR__0096
03144     5A CB 02 F6 | 	mov	local49, local38
03148     02 CA 66 F0 | 	shl	local49, #2
0314c     1C 0E 06 F1 | 	add	objptr, #28
03150     07 CD 02 FB | 	rdlong	local50, objptr
03154     1C 0E 86 F1 | 	sub	objptr, #28
03158     65 CD 02 F1 | 	add	local50, local49
0315c                 | '       long[dl_ptr+4*i]:=$0
0315c     66 01 68 FC | 	wrlong	#0, local50
03160     64 B5 02 F1 | 	add	local38, local48
03164     60 B5 0A F2 | 	cmp	local38, local44 wz
03168     D8 FF 9F 5D |  if_ne	jmp	#LR__0096
0316c                 | LR__0097
0316c                 | LR__0098
0316c     10 CE 06 F6 | 	mov	local51, #16
03170     58 CF 62 F0 | 	shl	local51, local36
03174                 | '   lpc:=16<<vzoom
03174                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
03174     68 0E 06 F1 | 	add	objptr, #104
03178     07 B5 02 FB | 	rdlong	local38, objptr
0317c     5A D1 02 F6 | 	mov	local52, local38
03180     18 0E 06 F1 | 	add	objptr, #24
03184     07 D3 02 FB | 	rdlong	local53, objptr
03188     69 D1 02 F1 | 	add	local52, local53
0318c     01 D0 86 F1 | 	sub	local52, #1
03190     18 0E 86 F1 | 	sub	objptr, #24
03194     07 C7 02 FB | 	rdlong	local47, objptr
03198     68 0E 86 F1 | 	sub	objptr, #104
0319c     63 D1 5A F2 | 	cmps	local52, local47 wcz
031a0     01 D4 06 16 |  if_a	mov	local54, #1
031a4     01 D4 66 E6 |  if_be	neg	local54, #1
031a8     6A D7 02 F6 | 	mov	local55, local54
031ac     6A D1 02 F1 | 	add	local52, local54
031b0     FC CE 9F FE | 	loc	pa,	#(@LR__0100-@LR__0099)
031b4     93 00 A0 FD | 	call	#FCACHE_LOAD_
031b8                 | LR__0099
031b8     5A 0B 03 F6 | 	mov	muldiva_, local38
031bc     68 0E 06 F1 | 	add	objptr, #104
031c0     07 D9 02 FB | 	rdlong	local56, objptr
031c4     68 0E 86 F1 | 	sub	objptr, #104
031c8     6C 0B 83 F1 | 	sub	muldiva_, local56
031cc     67 0D 03 F6 | 	mov	muldivb_, local51
031d0     CC 00 A0 FD | 	call	#unsdivide_
031d4     58 0B 43 F0 | 	shr	muldiva_, local36
031d8                 | '     fontline2:=((i-timings[6])+//lpc)>>vzoom
031d8     85 DB 02 F6 | 	mov	local57, muldiva_
031dc     5A 0B 03 F6 | 	mov	muldiva_, local38
031e0     68 0E 06 F1 | 	add	objptr, #104
031e4     07 D9 02 FB | 	rdlong	local56, objptr
031e8     68 0E 86 F1 | 	sub	objptr, #104
031ec     6C 0B 83 F1 | 	sub	muldiva_, local56
031f0     67 0D 03 F6 | 	mov	muldivb_, local51
031f4     CC 00 A0 FD | 	call	#unsdivide_
031f8     86 DD 02 F6 | 	mov	local58, muldivb_
031fc                 | '     charline:=(i-timings[6])+/lpc
031fc     90 0E 06 F1 | 	add	objptr, #144
03200     07 D9 02 FB | 	rdlong	local56, objptr
03204     90 0E 86 F1 | 	sub	objptr, #144
03208     6E D9 02 FD | 	qmul	local56, local58
0320c     18 DE 62 FD | 	getqx	local59
03210     02 DE 66 F0 | 	shl	local59, #2
03214     07 E1 02 FB | 	rdlong	local60, objptr
03218     6F E1 02 F1 | 	add	local60, local59
0321c     2E E3 02 F6 | 	mov	local61, arg01
03220     03 E2 06 F5 | 	and	local61, #3
03224     71 E1 02 F1 | 	add	local60, local61
03228                 | '     bufstart:=buf_ptr+4*((cpl)*charline)+(mode&3)
03228     0C E0 66 F0 | 	shl	local60, #12
0322c     08 DA 66 F0 | 	shl	local57, #8
03230     6D E1 02 F1 | 	add	local60, local57
03234     02 DC 66 F0 | 	shl	local58, #2
03238     6E E1 02 F1 | 	add	local60, local58
0323c     01 E0 06 F1 | 	add	local60, #1
03240     5A E5 02 F6 | 	mov	local62, local38
03244     02 E4 66 F0 | 	shl	local62, #2
03248     1C 0E 06 F1 | 	add	objptr, #28
0324c     07 E7 02 FB | 	rdlong	local63, objptr
03250     1C 0E 86 F1 | 	sub	objptr, #28
03254     72 E7 02 F1 | 	add	local63, local62
03258                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+(fontline2<<8)+(charline<<2)+1
03258     73 E1 62 FC | 	wrlong	local60, local63
0325c     6B B5 02 F1 | 	add	local38, local55
03260     68 B5 0A F2 | 	cmp	local38, local52 wz
03264     50 FF 9F 5D |  if_ne	jmp	#LR__0099
03268                 | LR__0100
03268                 | LR__0101
03268                 | ' 
03268                 | ' 
03268                 | ' 
03268                 | ' if (mode>=512)' and (mode & (%10_00_00_0000))==(%10_00_00_0000) ' graphics -> all modes TODO :mode 560+192=752 = 10_11_11_0000 impossib,e because out of memory
03268     01 00 00 FF 
0326c     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
03270     AC 01 90 CD |  if_b	jmp	#LR__0109
03274                 | ' 
03274                 | '   if timings[6]>0 'borders
03274     68 0E 06 F1 | 	add	objptr, #104
03278     07 B3 02 FB | 	rdlong	local37, objptr
0327c     68 0E 86 F1 | 	sub	objptr, #104
03280     00 B2 5E F2 | 	cmps	local37, #0 wcz
03284     D4 00 90 ED |  if_be	jmp	#LR__0106
03288                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03288     00 B4 06 F6 | 	mov	local38, #0
0328c     68 0E 06 F1 | 	add	objptr, #104
03290     07 E9 02 FB | 	rdlong	local64, objptr
03294     68 0E 86 F1 | 	sub	objptr, #104
03298     01 E8 86 F1 | 	sub	local64, #1
0329c     00 E8 5E F2 | 	cmps	local64, #0 wcz
032a0     01 B8 06 16 |  if_a	mov	local40, #1
032a4     01 B8 66 E6 |  if_be	neg	local40, #1
032a8     5C EB 02 F6 | 	mov	local65, local40
032ac     5C E9 02 F1 | 	add	local64, local40
032b0     74 CD 9F FE | 	loc	pa,	#(@LR__0103-@LR__0102)
032b4     93 00 A0 FD | 	call	#FCACHE_LOAD_
032b8                 | LR__0102
032b8     5A ED 02 F6 | 	mov	local66, local38
032bc     02 EC 66 F0 | 	shl	local66, #2
032c0     1C 0E 06 F1 | 	add	objptr, #28
032c4     07 EF 02 FB | 	rdlong	local67, objptr
032c8     1C 0E 86 F1 | 	sub	objptr, #28
032cc     76 EF 02 F1 | 	add	local67, local66
032d0                 | '       long[dl_ptr+4*i]:=$0
032d0     77 01 68 FC | 	wrlong	#0, local67
032d4     75 B5 02 F1 | 	add	local38, local65
032d8     74 B5 0A F2 | 	cmp	local38, local64 wz
032dc     D8 FF 9F 5D |  if_ne	jmp	#LR__0102
032e0                 | LR__0103
032e0                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
032e0     68 0E 06 F1 | 	add	objptr, #104
032e4     07 B5 02 FB | 	rdlong	local38, objptr
032e8     18 0E 06 F1 | 	add	objptr, #24
032ec     07 B9 02 FB | 	rdlong	local40, objptr
032f0     5C B5 02 F1 | 	add	local38, local40
032f4     0C 0E 06 F1 | 	add	objptr, #12
032f8     07 F1 02 FB | 	rdlong	local68, objptr
032fc     01 F0 86 F1 | 	sub	local68, #1
03300     24 0E 86 F1 | 	sub	objptr, #36
03304     07 C3 02 FB | 	rdlong	local45, objptr
03308     18 0E 06 F1 | 	add	objptr, #24
0330c     07 C5 02 FB | 	rdlong	local46, objptr
03310     80 0E 86 F1 | 	sub	objptr, #128
03314     62 C3 02 F1 | 	add	local45, local46
03318     61 F1 5A F2 | 	cmps	local68, local45 wcz
0331c     01 C6 06 16 |  if_a	mov	local47, #1
03320     01 C6 66 E6 |  if_be	neg	local47, #1
03324     63 F3 02 F6 | 	mov	local69, local47
03328     63 F1 02 F1 | 	add	local68, local47
0332c     F8 CC 9F FE | 	loc	pa,	#(@LR__0105-@LR__0104)
03330     93 00 A0 FD | 	call	#FCACHE_LOAD_
03334                 | LR__0104
03334     5A F5 02 F6 | 	mov	local70, local38
03338     02 F4 66 F0 | 	shl	local70, #2
0333c     1C 0E 06 F1 | 	add	objptr, #28
03340     07 F7 02 FB | 	rdlong	local71, objptr
03344     1C 0E 86 F1 | 	sub	objptr, #28
03348     7A F7 02 F1 | 	add	local71, local70
0334c                 | '       long[dl_ptr+4*i]:=$0
0334c     7B 01 68 FC | 	wrlong	#0, local71
03350     79 B5 02 F1 | 	add	local38, local69
03354     78 B5 0A F2 | 	cmp	local38, local68 wz
03358     D8 FF 9F 5D |  if_ne	jmp	#LR__0104
0335c                 | LR__0105
0335c                 | LR__0106
0335c                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
0335c     68 0E 06 F1 | 	add	objptr, #104
03360     07 B5 02 FB | 	rdlong	local38, objptr
03364     5A F9 02 F6 | 	mov	local72, local38
03368     18 0E 06 F1 | 	add	objptr, #24
0336c     07 D3 02 FB | 	rdlong	local53, objptr
03370     69 F9 02 F1 | 	add	local72, local53
03374     01 F8 86 F1 | 	sub	local72, #1
03378     18 0E 86 F1 | 	sub	objptr, #24
0337c     07 C7 02 FB | 	rdlong	local47, objptr
03380     68 0E 86 F1 | 	sub	objptr, #104
03384     63 F9 5A F2 | 	cmps	local72, local47 wcz
03388     01 D4 06 16 |  if_a	mov	local54, #1
0338c     01 D4 66 E6 |  if_be	neg	local54, #1
03390     6A FB 02 F6 | 	mov	local73, local54
03394     6A F9 02 F1 | 	add	local72, local54
03398     E4 CC 9F FE | 	loc	pa,	#(@LR__0108-@LR__0107)
0339c     93 00 A0 FD | 	call	#FCACHE_LOAD_
033a0                 | LR__0107
033a0     5A FD 02 F6 | 	mov	local74, local38
033a4     68 0E 06 F1 | 	add	objptr, #104
033a8     07 D9 02 FB | 	rdlong	local56, objptr
033ac     6C FD 82 F1 | 	sub	local74, local56
033b0     58 FD 42 F0 | 	shr	local74, local36
033b4     28 0E 06 F1 | 	add	objptr, #40
033b8     07 D9 02 FB | 	rdlong	local56, objptr
033bc     90 0E 86 F1 | 	sub	objptr, #144
033c0     7E D9 02 FD | 	qmul	local56, local74
033c4     18 FE 62 FD | 	getqx	local75
033c8     02 FE 66 F0 | 	shl	local75, #2
033cc     07 01 03 FB | 	rdlong	local76, objptr
033d0     7F 01 03 F1 | 	add	local76, local75
033d4     2E 03 03 F6 | 	mov	local77, arg01
033d8     03 02 07 F5 | 	and	local77, #3
033dc     81 01 03 F1 | 	add	local76, local77
033e0                 | '     bufstart:=buf_ptr+4*(cpl*((i-timings[6])>>vzoom))+(mode&3)
033e0     0C 00 67 F0 | 	shl	local76, #12
033e4     02 00 07 F1 | 	add	local76, #2
033e8     2E 05 03 F6 | 	mov	local78, arg01
033ec     30 04 07 F5 | 	and	local78, #48
033f0     02 04 47 F0 | 	shr	local78, #2
033f4     82 01 03 F1 | 	add	local76, local78
033f8     5A 07 03 F6 | 	mov	local79, local38
033fc     02 06 67 F0 | 	shl	local79, #2
03400     1C 0E 06 F1 | 	add	objptr, #28
03404     07 09 03 FB | 	rdlong	local80, objptr
03408     1C 0E 86 F1 | 	sub	objptr, #28
0340c     83 09 03 F1 | 	add	local80, local79
03410                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+2+(mode &48)>>2
03410     84 01 63 FC | 	wrlong	local76, local80
03414     7D B5 02 F1 | 	add	local38, local73
03418     7C B5 0A F2 | 	cmp	local38, local72 wz
0341c     80 FF 9F 5D |  if_ne	jmp	#LR__0107
03420                 | LR__0108
03420                 | LR__0109
03420                 | LR__0110
03420     AF F0 03 F6 | 	mov	ptra, fp
03424     BF 00 A0 FD | 	call	#popregs_
03428                 | _hng030rm_spin2_setmode_ret
03428     2D 00 64 FD | 	ret
0342c                 | 
0342c                 | ' 
0342c                 | ' pub serialcog()| rr, mrr, srr, b, mb, midireport, kbmreport
0342c                 | _retrocog_spin2_serialcog
0342c     1C 5A 05 F6 | 	mov	COUNT_, #28
03430     B0 00 A0 FD | 	call	#pushregs_
03434                 | ' 
03434                 | ' 'start serial and midi
03434                 | ' 
03434                 | ' serial_start(rxpin, txpin, baudrate)
03434     20 5C 06 F6 | 	mov	arg01, #32
03438     21 5E 06 F6 | 	mov	arg02, #33
0343c     A6 0E 00 FF 
03440     00 60 06 F6 | 	mov	arg03, ##1920000
03444     D8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
03448                 | ' serial_start(midiin,midiout,mbaudrate)
03448     1D 5C 06 F6 | 	mov	arg01, #29
0344c     1E 5E 06 F6 | 	mov	arg02, #30
03450     3D 00 00 FF 
03454     12 60 06 F6 | 	mov	arg03, ##31250
03458     C4 05 B0 FD | 	call	#_retrocog_spin2_serial_start
0345c                 | ' serial_start(srxpin,stxpin,sbaudrate)
0345c     42 0F 00 FF 
03460     80 6A 06 F6 | 	mov	local01, ##2000000
03464     3F 5C 06 F6 | 	mov	arg01, #63
03468     3E 5E 06 F6 | 	mov	arg02, #62
0346c     42 0F 00 FF 
03470     80 60 06 F6 | 	mov	arg03, ##2000000
03474     A8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
03478                 | ' 
03478                 | ' mb:=(-1)
03478     01 6C 66 F6 | 	neg	local02, #1
0347c                 | ' b:=(-1)
0347c     01 6E 66 F6 | 	neg	local03, #1
03480                 | ' 
03480                 | ' mousefront:=0
03480     00 70 06 F6 | 	mov	local04, #0
03484     08 0E 06 F1 | 	add	objptr, #8
03488     07 01 68 FC | 	wrlong	#0, objptr
0348c                 | ' mousetail:=0
0348c     04 0E 06 F1 | 	add	objptr, #4
03490     07 01 68 FC | 	wrlong	#0, objptr
03494     0C 0E 86 F1 | 	sub	objptr, #12
03498                 | ' kbdfront:=0
03498     07 01 68 FC | 	wrlong	#0, objptr
0349c                 | ' kbdtail:=0
0349c     04 0E 06 F1 | 	add	objptr, #4
034a0     07 01 68 FC | 	wrlong	#0, objptr
034a4                 | ' midifront:=0
034a4     0C 0E 06 F1 | 	add	objptr, #12
034a8     07 01 68 FC | 	wrlong	#0, objptr
034ac                 | ' miditail:=0
034ac     04 0E 06 F1 | 	add	objptr, #4
034b0     07 01 68 FC | 	wrlong	#0, objptr
034b4                 | ' serialfront:=0
034b4     04 0E 06 F1 | 	add	objptr, #4
034b8     07 01 68 FC | 	wrlong	#0, objptr
034bc                 | ' serialtail:=0
034bc     04 0E 06 F1 | 	add	objptr, #4
034c0     07 01 68 FC | 	wrlong	#0, objptr
034c4                 | ' long[$30]:=0
034c4     30 00 6C FC | 	wrlong	#0, #48
034c8                 | ' long[$34]:=0
034c8     34 00 6C FC | 	wrlong	#0, #52
034cc                 | ' long[$38]:=0
034cc     38 00 6C FC | 	wrlong	#0, #56
034d0     1C 0E 86 F1 | 	sub	objptr, #28
034d4                 | ' long[$3C]:=0
034d4     3C 00 6C FC | 	wrlong	#0, #60
034d8                 | ' 
034d8                 | ' repeat
034d8                 | LR__0111
034d8                 | ' 
034d8                 | ' '  repeat 
034d8                 | '   rr:=rxcheck(rxpin)
034d8     20 5C 06 F6 | 	mov	arg01, #32
034dc     BC 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034e0     15 73 02 F6 | 	mov	local05, result1
034e4                 | '   mrr:=rxcheck(midiin)
034e4     1D 5C 06 F6 | 	mov	arg01, #29
034e8     B0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034ec     15 75 02 F6 | 	mov	local06, result1
034f0                 | '   srr:=rxcheck(srxpin)
034f0     3F 70 06 F6 | 	mov	local04, #63
034f4     3F 5C 06 F6 | 	mov	arg01, #63
034f8     A0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034fc     15 77 02 F6 | 	mov	local07, result1
03500     3B 79 02 F6 | 	mov	local08, local07
03504                 | ' 
03504                 | ' '  until rr>=0 || mrr>=0  || srr>=0
03504                 | ' 
03504                 | '   
03504                 | ' ' midi. Must be >= $80 for a command
03504                 | ' '$80-$8F - 3 bytes note off. note, velocity
03504                 | ' '$90-$9F - 3 bytes note on, note, velocity
03504                 | ' '$A0-$AF - 3 bytes poly aftertouch. note, value
03504                 | ' '$B0-$BF - 3 bytes control change, controller-value, 
03504                 | ' '$C0-$CF - 2 bytes program change
03504                 | ' '$D0-$DF - 2 bytes mono aftertouch
03504                 | ' '$E0-$EF - 3 bytes pitch bend, $2000 - center
03504                 | ' '$F0-$FF - 1 byte
03504                 | '   
03504                 | '   if srr>=0
03504     00 78 5E F2 | 	cmps	local08, #0 wcz
03508     7C 00 90 CD |  if_b	jmp	#LR__0113
0350c                 | '   
0350c                 | '     if serialfront<>((serialtail-1) //32)
0350c     1C 0E 06 F1 | 	add	objptr, #28
03510     07 77 02 FB | 	rdlong	local07, objptr
03514     3B 71 02 F6 | 	mov	local04, local07
03518     01 70 86 F1 | 	sub	local04, #1
0351c     38 6B 52 F6 | 	abs	local01, local04 wc
03520     1F 6A 06 F5 | 	and	local01, #31
03524     35 6B 62 C6 |  if_b	neg	local01, local01
03528     04 0E 86 F1 | 	sub	objptr, #4
0352c     07 7B 02 FB | 	rdlong	local09, objptr
03530     18 0E 86 F1 | 	sub	objptr, #24
03534     3D 7D 02 F6 | 	mov	local10, local09
03538     35 7D 0A F2 | 	cmp	local10, local01 wz
0353c     48 00 90 AD |  if_e	jmp	#LR__0112
03540     18 0E 06 F1 | 	add	objptr, #24
03544     07 7D 02 FB | 	rdlong	local10, objptr
03548     01 00 00 FF 
0354c     08 0F 06 F1 | 	add	objptr, ##776
03550     07 7D 02 F1 | 	add	local10, objptr
03554     3E 7F 02 F6 | 	mov	local11, local10
03558                 | '       serialbuf[serialfront]:=srr
03558     3F 79 42 FC | 	wrbyte	local08, local11
0355c                 | '       serialfront+=1
0355c     01 00 00 FF 
03560     08 0F 86 F1 | 	sub	objptr, ##776
03564     07 6B 02 FB | 	rdlong	local01, objptr
03568     01 6A 06 F1 | 	add	local01, #1
0356c     07 6B 62 FC | 	wrlong	local01, objptr
03570                 | '       serialfront:=serialfront // 32
03570     35 77 02 F6 | 	mov	local07, local01
03574     3B 71 52 F6 | 	abs	local04, local07 wc
03578     1F 70 06 F5 | 	and	local04, #31
0357c     38 71 62 C6 |  if_b	neg	local04, local04
03580     07 71 62 FC | 	wrlong	local04, objptr
03584     18 0E 86 F1 | 	sub	objptr, #24
03588                 | LR__0112
03588                 | LR__0113
03588                 | '     
03588                 | '   if ((mrr>=$80) && (mrr<=$BF)) || ((mrr>=$E0) && (mrr<=$EF)) 
03588     80 74 5E F2 | 	cmps	local06, #128 wcz
0358c     08 00 90 CD |  if_b	jmp	#LR__0114
03590     BF 74 5E F2 | 	cmps	local06, #191 wcz
03594     10 00 90 ED |  if_be	jmp	#LR__0115
03598                 | LR__0114
03598     E0 74 5E F2 | 	cmps	local06, #224 wcz
0359c     1C 00 90 CD |  if_b	jmp	#LR__0116
035a0     EF 74 5E F2 | 	cmps	local06, #239 wcz
035a4     14 00 90 1D |  if_a	jmp	#LR__0116
035a8                 | LR__0115
035a8                 | '     mb:=2
035a8     02 6C 06 F6 | 	mov	local02, #2
035ac     3A 71 02 F6 | 	mov	local04, local06
035b0     18 70 66 F0 | 	shl	local04, #24
035b4     38 81 02 F6 | 	mov	local12, local04
035b8                 | '     midireport:=mrr<<24
035b8     40 83 02 F6 | 	mov	local13, local12
035bc                 | LR__0116
035bc                 | ' 
035bc                 | '   if (mrr>=$C0) && (mrr<=$DF)
035bc     C0 74 5E F2 | 	cmps	local06, #192 wcz
035c0     1C 00 90 CD |  if_b	jmp	#LR__0117
035c4     DF 74 5E F2 | 	cmps	local06, #223 wcz
035c8     14 00 90 1D |  if_a	jmp	#LR__0117
035cc                 | '     mb:=1
035cc     01 6C 06 F6 | 	mov	local02, #1
035d0     3A 71 02 F6 | 	mov	local04, local06
035d4     18 70 66 F0 | 	shl	local04, #24
035d8     38 85 02 F6 | 	mov	local14, local04
035dc                 | '     midireport:=mrr<<24
035dc     42 83 02 F6 | 	mov	local13, local14
035e0                 | LR__0117
035e0                 | '   
035e0                 | '   if (mrr>=$F0) 'TODO: do something with SYSEX, now a workaround for Novation Impulse
035e0     F0 74 5E F2 | 	cmps	local06, #240 wcz
035e4     10 00 90 CD |  if_b	jmp	#LR__0118
035e8                 | '     mb:=4
035e8     04 6C 06 F6 | 	mov	local02, #4
035ec     3A 87 02 F6 | 	mov	local15, local06
035f0     18 86 66 F0 | 	shl	local15, #24
035f4                 | '     midireport:=mrr<<24  
035f4     43 83 02 F6 | 	mov	local13, local15
035f8                 | LR__0118
035f8                 | '   
035f8                 | '   if (mrr<$80) && (mb>0) && (mrr>=0)
035f8     80 74 5E F2 | 	cmps	local06, #128 wcz
035fc     44 00 90 3D |  if_ae	jmp	#LR__0120
03600     00 6C 5E F2 | 	cmps	local02, #0 wcz
03604     3C 00 90 ED |  if_be	jmp	#LR__0120
03608     00 74 5E F2 | 	cmps	local06, #0 wcz
0360c     34 00 90 CD |  if_b	jmp	#LR__0120
03610                 | '     
03610                 | '     mb--
03610     36 71 02 F6 | 	mov	local04, local02
03614     36 77 02 F6 | 	mov	local07, local02
03618     01 76 86 F1 | 	sub	local07, #1
0361c     3B 6D 02 F6 | 	mov	local02, local07
03620                 | '     if mb<3
03620     03 6C 5E F2 | 	cmps	local02, #3 wcz
03624     1C 00 90 3D |  if_ae	jmp	#LR__0119
03628     36 89 02 F6 | 	mov	local16, local02
0362c     03 88 66 F0 | 	shl	local16, #3
03630     3A 8B 02 F6 | 	mov	local17, local06
03634     44 8B 62 F0 | 	shl	local17, local16
03638                 | '       midireport+=mrr<<(mb<<3)
03638     41 71 02 F6 | 	mov	local04, local13
0363c     45 71 02 F1 | 	add	local04, local17
03640     38 83 02 F6 | 	mov	local13, local04
03644                 | LR__0119
03644                 | LR__0120
03644                 | '   
03644                 | '   if mb==0
03644     00 6C 0E F2 | 	cmp	local02, #0 wz
03648     84 00 90 5D |  if_ne	jmp	#LR__0122
0364c                 | '     
0364c                 | '     if midifront<>((miditail-1) //32)
0364c     14 0E 06 F1 | 	add	objptr, #20
03650     07 77 02 FB | 	rdlong	local07, objptr
03654     3B 71 02 F6 | 	mov	local04, local07
03658     01 70 86 F1 | 	sub	local04, #1
0365c     38 6B 52 F6 | 	abs	local01, local04 wc
03660     1F 6A 06 F5 | 	and	local01, #31
03664     35 6B 62 C6 |  if_b	neg	local01, local01
03668     04 0E 86 F1 | 	sub	objptr, #4
0366c     07 7B 02 FB | 	rdlong	local09, objptr
03670     10 0E 86 F1 | 	sub	objptr, #16
03674     3D 7D 02 F6 | 	mov	local10, local09
03678     35 7D 0A F2 | 	cmp	local10, local01 wz
0367c     4C 00 90 AD |  if_e	jmp	#LR__0121
03680     10 0E 06 F1 | 	add	objptr, #16
03684     07 7D 02 FB | 	rdlong	local10, objptr
03688     02 7C 66 F0 | 	shl	local10, #2
0368c     01 00 00 FF 
03690     90 0E 06 F1 | 	add	objptr, ##656
03694     07 7D 02 F1 | 	add	local10, objptr
03698     3E 8D 02 F6 | 	mov	local18, local10
0369c                 | '       midibuf[midifront]:=midireport
0369c     46 83 62 FC | 	wrlong	local13, local18
036a0                 | '       midifront+=1
036a0     01 00 00 FF 
036a4     90 0E 86 F1 | 	sub	objptr, ##656
036a8     07 6B 02 FB | 	rdlong	local01, objptr
036ac     01 6A 06 F1 | 	add	local01, #1
036b0     07 6B 62 FC | 	wrlong	local01, objptr
036b4                 | '       midifront:=midifront // 32
036b4     35 77 02 F6 | 	mov	local07, local01
036b8     3B 71 52 F6 | 	abs	local04, local07 wc
036bc     1F 70 06 F5 | 	and	local04, #31
036c0     38 71 62 C6 |  if_b	neg	local04, local04
036c4     07 71 62 FC | 	wrlong	local04, objptr
036c8     10 0E 86 F1 | 	sub	objptr, #16
036cc                 | LR__0121
036cc                 | '     mb:=(-1)
036cc     01 6C 66 F6 | 	neg	local02, #1
036d0                 | LR__0122
036d0                 | ' 
036d0                 | ' 'Keyboard and mouse
036d0                 | ' 
036d0                 | '   if (rr>=$80) && (rr<>$FF)
036d0     80 72 5E F2 | 	cmps	local05, #128 wcz
036d4     1C 00 90 CD |  if_b	jmp	#LR__0123
036d8     FF 72 0E F2 | 	cmp	local05, #255 wz
036dc     14 00 90 AD |  if_e	jmp	#LR__0123
036e0                 | '     b:=3
036e0     03 6E 06 F6 | 	mov	local03, #3
036e4     39 71 02 F6 | 	mov	local04, local05
036e8     18 70 66 F0 | 	shl	local04, #24
036ec     38 8F 02 F6 | 	mov	local19, local04
036f0                 | '     kbmreport:=rr<<24
036f0     47 91 02 F6 | 	mov	local20, local19
036f4                 | LR__0123
036f4                 | '   
036f4                 | '   if (rr<$80) && (b>0) && (rr>=0)
036f4     80 72 5E F2 | 	cmps	local05, #128 wcz
036f8     38 00 90 3D |  if_ae	jmp	#LR__0124
036fc     00 6E 5E F2 | 	cmps	local03, #0 wcz
03700     30 00 90 ED |  if_be	jmp	#LR__0124
03704     00 72 5E F2 | 	cmps	local05, #0 wcz
03708     28 00 90 CD |  if_b	jmp	#LR__0124
0370c                 | '     b--
0370c     37 77 02 F6 | 	mov	local07, local03
03710     01 76 86 F1 | 	sub	local07, #1
03714     3B 6F 02 F6 | 	mov	local03, local07
03718     37 93 02 F6 | 	mov	local21, local03
0371c     03 92 66 F0 | 	shl	local21, #3
03720     39 95 02 F6 | 	mov	local22, local05
03724     49 95 62 F0 | 	shl	local22, local21
03728                 | '     kbmreport+=rr<<(b<<3)  
03728     48 71 02 F6 | 	mov	local04, local20
0372c     4A 71 02 F1 | 	add	local04, local22
03730     38 91 02 F6 | 	mov	local20, local04
03734                 | LR__0124
03734                 | '   
03734                 | '   if (rr==$FF)
03734     FF 72 0E F2 | 	cmp	local05, #255 wz
03738                 | '     b:=0   
03738     00 6E 06 A6 |  if_e	mov	local03, #0
0373c                 | ' 
0373c                 | '   if b==0  
0373c     00 6E 0E F2 | 	cmp	local03, #0 wz
03740     14 01 90 5D |  if_ne	jmp	#LR__0129
03744                 | '  
03744                 | '     if (kbmreport +>= $80000000) && (kbmreport +< $87000000)  'mouse
03744     00 00 40 FF 
03748     00 90 1E F2 | 	cmp	local20, ##-2147483648 wcz
0374c     84 00 90 CD |  if_b	jmp	#LR__0126
03750     00 80 43 FF 
03754     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
03758     78 00 90 3D |  if_ae	jmp	#LR__0126
0375c                 | '       if mousefront<>((mousetail-1) //128)
0375c     0C 0E 06 F1 | 	add	objptr, #12
03760     07 77 02 FB | 	rdlong	local07, objptr
03764     3B 71 02 F6 | 	mov	local04, local07
03768     01 70 86 F1 | 	sub	local04, #1
0376c     38 6B 52 F6 | 	abs	local01, local04 wc
03770     7F 6A 06 F5 | 	and	local01, #127
03774     35 6B 62 C6 |  if_b	neg	local01, local01
03778     04 0E 86 F1 | 	sub	objptr, #4
0377c     07 7B 02 FB | 	rdlong	local09, objptr
03780     08 0E 86 F1 | 	sub	objptr, #8
03784     3D 7D 02 F6 | 	mov	local10, local09
03788     35 7D 0A F2 | 	cmp	local10, local01 wz
0378c     44 00 90 AD |  if_e	jmp	#LR__0125
03790     08 0E 06 F1 | 	add	objptr, #8
03794     07 7D 02 FB | 	rdlong	local10, objptr
03798     02 7C 66 F0 | 	shl	local10, #2
0379c     98 0E 06 F1 | 	add	objptr, #152
037a0     07 7D 02 F1 | 	add	local10, objptr
037a4     3E 97 02 F6 | 	mov	local23, local10
037a8                 | '         mousebuf[mousefront]:=kbmreport
037a8     4B 91 62 FC | 	wrlong	local20, local23
037ac                 | '         mousefront+=1
037ac     98 0E 86 F1 | 	sub	objptr, #152
037b0     07 6B 02 FB | 	rdlong	local01, objptr
037b4     01 6A 06 F1 | 	add	local01, #1
037b8     07 6B 62 FC | 	wrlong	local01, objptr
037bc                 | '         mousefront:=mousefront // 128
037bc     35 77 02 F6 | 	mov	local07, local01
037c0     3B 71 52 F6 | 	abs	local04, local07 wc
037c4     7F 70 06 F5 | 	and	local04, #127
037c8     38 71 62 C6 |  if_b	neg	local04, local04
037cc     07 71 62 FC | 	wrlong	local04, objptr
037d0     08 0E 86 F1 | 	sub	objptr, #8
037d4                 | LR__0125
037d4                 | LR__0126
037d4                 | '     b:=(-1)
037d4     01 6E 66 F6 | 	neg	local03, #1
037d8                 | ' 
037d8                 | '     if (kbmreport +>= $87000000) && (kbmreport +< $8a000000)  'keyboard
037d8     00 80 43 FF 
037dc     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
037e0     70 00 90 CD |  if_b	jmp	#LR__0128
037e4     00 00 45 FF 
037e8     00 90 1E F2 | 	cmp	local20, ##-1979711488 wcz
037ec     64 00 90 3D |  if_ae	jmp	#LR__0128
037f0                 | '       if kbdfront<>((kbdtail-1) //32)
037f0     04 0E 06 F1 | 	add	objptr, #4
037f4     07 77 02 FB | 	rdlong	local07, objptr
037f8     04 0E 86 F1 | 	sub	objptr, #4
037fc     3B 71 02 F6 | 	mov	local04, local07
03800     01 70 86 F1 | 	sub	local04, #1
03804     38 6B 52 F6 | 	abs	local01, local04 wc
03808     1F 6A 06 F5 | 	and	local01, #31
0380c     35 6B 62 C6 |  if_b	neg	local01, local01
03810     07 7D 02 FB | 	rdlong	local10, objptr
03814     35 7D 0A F2 | 	cmp	local10, local01 wz
03818     38 00 90 AD |  if_e	jmp	#LR__0127
0381c     07 6B 02 FB | 	rdlong	local01, objptr
03820     02 6A 66 F0 | 	shl	local01, #2
03824     20 0E 06 F1 | 	add	objptr, #32
03828     07 6B 02 F1 | 	add	local01, objptr
0382c     35 99 02 F6 | 	mov	local24, local01
03830                 | '         kbdbuf[kbdfront]:=kbmreport
03830     4C 91 62 FC | 	wrlong	local20, local24
03834                 | '         kbdfront+=1
03834     20 0E 86 F1 | 	sub	objptr, #32
03838     07 77 02 FB | 	rdlong	local07, objptr
0383c     01 76 06 F1 | 	add	local07, #1
03840     07 77 62 FC | 	wrlong	local07, objptr
03844                 | '         kbdfront:=kbdfront // 32
03844     3B 71 52 F6 | 	abs	local04, local07 wc
03848     1F 70 06 F5 | 	and	local04, #31
0384c     38 71 62 C6 |  if_b	neg	local04, local04
03850     07 71 62 FC | 	wrlong	local04, objptr
03854                 | LR__0127
03854                 | LR__0128
03854                 | '     b:=(-1)
03854     01 6E 66 F6 | 	neg	local03, #1
03858                 | LR__0129
03858                 | ' 
03858                 | ' 
03858                 | '   if long[$30]==0
03858     30 70 0E FB | 	rdlong	local04, #48 wz
0385c     5C 00 90 5D |  if_ne	jmp	#LR__0131
03860                 | '     if kbdfront<>kbdtail
03860     07 71 02 FB | 	rdlong	local04, objptr
03864     04 0E 06 F1 | 	add	objptr, #4
03868     07 6B 02 FB | 	rdlong	local01, objptr
0386c     04 0E 86 F1 | 	sub	objptr, #4
03870     35 71 0A F2 | 	cmp	local04, local01 wz
03874     44 00 90 AD |  if_e	jmp	#LR__0130
03878     04 0E 06 F1 | 	add	objptr, #4
0387c     07 9B 02 FB | 	rdlong	local25, objptr
03880     02 9A 66 F0 | 	shl	local25, #2
03884     1C 0E 06 F1 | 	add	objptr, #28
03888     07 9B 02 F1 | 	add	local25, objptr
0388c                 | '       long[$30]:=kbdbuf[kbdtail]
0388c     4D 71 02 FB | 	rdlong	local04, local25
03890     30 70 66 FC | 	wrlong	local04, #48
03894                 | '       kbdtail++
03894     1C 0E 86 F1 | 	sub	objptr, #28
03898     07 7D 02 FB | 	rdlong	local10, objptr
0389c     3E 6B 02 F6 | 	mov	local01, local10
038a0     01 6A 06 F1 | 	add	local01, #1
038a4     07 6B 62 FC | 	wrlong	local01, objptr
038a8                 | '       kbdtail:= kbdtail // 32
038a8     35 71 52 F6 | 	abs	local04, local01 wc
038ac     1F 70 06 F5 | 	and	local04, #31
038b0     38 71 62 C6 |  if_b	neg	local04, local04
038b4     07 71 62 FC | 	wrlong	local04, objptr
038b8     04 0E 86 F1 | 	sub	objptr, #4
038bc                 | LR__0130
038bc                 | LR__0131
038bc                 | '       
038bc                 | '   if long[$34]==0
038bc     34 70 0E FB | 	rdlong	local04, #52 wz
038c0     64 00 90 5D |  if_ne	jmp	#LR__0133
038c4                 | '     if mousefront<>mousetail
038c4     08 0E 06 F1 | 	add	objptr, #8
038c8     07 71 02 FB | 	rdlong	local04, objptr
038cc     04 0E 06 F1 | 	add	objptr, #4
038d0     07 7D 02 FB | 	rdlong	local10, objptr
038d4     0C 0E 86 F1 | 	sub	objptr, #12
038d8     3E 6B 02 F6 | 	mov	local01, local10
038dc     35 71 0A F2 | 	cmp	local04, local01 wz
038e0     44 00 90 AD |  if_e	jmp	#LR__0132
038e4     0C 0E 06 F1 | 	add	objptr, #12
038e8     07 9D 02 FB | 	rdlong	local26, objptr
038ec     02 9C 66 F0 | 	shl	local26, #2
038f0     94 0E 06 F1 | 	add	objptr, #148
038f4     07 9D 02 F1 | 	add	local26, objptr
038f8                 | '       long[$34]:=mousebuf[mousetail]
038f8     4E 71 02 FB | 	rdlong	local04, local26
038fc     34 70 66 FC | 	wrlong	local04, #52
03900                 | '       mousetail++
03900     94 0E 86 F1 | 	sub	objptr, #148
03904     07 7D 02 FB | 	rdlong	local10, objptr
03908     3E 6B 02 F6 | 	mov	local01, local10
0390c     01 6A 06 F1 | 	add	local01, #1
03910     07 6B 62 FC | 	wrlong	local01, objptr
03914                 | '       mousetail:= mousetail // 128
03914     35 71 52 F6 | 	abs	local04, local01 wc
03918     7F 70 06 F5 | 	and	local04, #127
0391c     38 71 62 C6 |  if_b	neg	local04, local04
03920     07 71 62 FC | 	wrlong	local04, objptr
03924     0C 0E 86 F1 | 	sub	objptr, #12
03928                 | LR__0132
03928                 | LR__0133
03928                 | ' 
03928                 | '       
03928                 | '   if long[$38]==0
03928     38 70 0E FB | 	rdlong	local04, #56 wz
0392c     6C 00 90 5D |  if_ne	jmp	#LR__0135
03930                 | '     if midifront<>miditail
03930     10 0E 06 F1 | 	add	objptr, #16
03934     07 71 02 FB | 	rdlong	local04, objptr
03938     04 0E 06 F1 | 	add	objptr, #4
0393c     07 7D 02 FB | 	rdlong	local10, objptr
03940     14 0E 86 F1 | 	sub	objptr, #20
03944     3E 6B 02 F6 | 	mov	local01, local10
03948     35 71 0A F2 | 	cmp	local04, local01 wz
0394c     4C 00 90 AD |  if_e	jmp	#LR__0134
03950     14 0E 06 F1 | 	add	objptr, #20
03954     07 9F 02 FB | 	rdlong	local27, objptr
03958     02 9E 66 F0 | 	shl	local27, #2
0395c     01 00 00 FF 
03960     8C 0E 06 F1 | 	add	objptr, ##652
03964     07 9F 02 F1 | 	add	local27, objptr
03968                 | '       long[$38]:=midibuf[miditail]
03968     4F 71 02 FB | 	rdlong	local04, local27
0396c     38 70 66 FC | 	wrlong	local04, #56
03970                 | '       miditail++
03970     01 00 00 FF 
03974     8C 0E 86 F1 | 	sub	objptr, ##652
03978     07 7D 02 FB | 	rdlong	local10, objptr
0397c     3E 6B 02 F6 | 	mov	local01, local10
03980     01 6A 06 F1 | 	add	local01, #1
03984     07 6B 62 FC | 	wrlong	local01, objptr
03988                 | '       miditail:= miditail // 32
03988     35 71 52 F6 | 	abs	local04, local01 wc
0398c     1F 70 06 F5 | 	and	local04, #31
03990     38 71 62 C6 |  if_b	neg	local04, local04
03994     07 71 62 FC | 	wrlong	local04, objptr
03998     14 0E 86 F1 | 	sub	objptr, #20
0399c                 | LR__0134
0399c                 | LR__0135
0399c                 | '       
0399c                 | '   if long[$3c]==0
0399c     3C 70 0E FB | 	rdlong	local04, #60 wz
039a0     34 FB 9F 5D |  if_ne	jmp	#LR__0111
039a4                 | '     if serialfront<>serialtail
039a4     18 0E 06 F1 | 	add	objptr, #24
039a8     07 71 02 FB | 	rdlong	local04, objptr
039ac     04 0E 06 F1 | 	add	objptr, #4
039b0     07 7D 02 FB | 	rdlong	local10, objptr
039b4     1C 0E 86 F1 | 	sub	objptr, #28
039b8     3E 6B 02 F6 | 	mov	local01, local10
039bc     35 71 0A F2 | 	cmp	local04, local01 wz
039c0     14 FB 9F AD |  if_e	jmp	#LR__0111
039c4                 | '       byte[$3c]:=255
039c4     3C FE 4D FC | 	wrbyte	#255, #60
039c8     1C 0E 06 F1 | 	add	objptr, #28
039cc     07 A1 02 FB | 	rdlong	local28, objptr
039d0     01 00 00 FF 
039d4     04 0F 06 F1 | 	add	objptr, ##772
039d8     07 A1 02 F1 | 	add	local28, objptr
039dc                 | '       byte[$3D]:=serialbuf[serialtail]
039dc     50 71 C2 FA | 	rdbyte	local04, local28
039e0     3D 70 46 FC | 	wrbyte	local04, #61
039e4                 | '       serialtail++
039e4     01 00 00 FF 
039e8     04 0F 86 F1 | 	sub	objptr, ##772
039ec     07 7D 02 FB | 	rdlong	local10, objptr
039f0     3E 6B 02 F6 | 	mov	local01, local10
039f4     01 6A 06 F1 | 	add	local01, #1
039f8     07 6B 62 FC | 	wrlong	local01, objptr
039fc                 | '       serialtail:= serialtail // 32
039fc     35 71 52 F6 | 	abs	local04, local01 wc
03a00     1F 70 06 F5 | 	and	local04, #31
03a04     38 71 62 C6 |  if_b	neg	local04, local04
03a08     07 71 62 FC | 	wrlong	local04, objptr
03a0c     1C 0E 86 F1 | 	sub	objptr, #28
03a10     C4 FA 9F FD | 	jmp	#LR__0111
03a14     AF F0 03 F6 | 	mov	ptra, fp
03a18     BF 00 A0 FD | 	call	#popregs_
03a1c                 | _retrocog_spin2_serialcog_ret
03a1c     2D 00 64 FD | 	ret
03a20                 | 
03a20                 | '       
03a20                 | ' 
03a20                 | ' ''---------------------- Serial functions from jm_serial.spin2, modified
03a20                 | ' 
03a20                 | ' pub serial_start(rxpin, txpin, baud) | bitmode
03a20                 | _retrocog_spin2_serial_start
03a20     04 5A 05 F6 | 	mov	COUNT_, #4
03a24     B0 00 A0 FD | 	call	#pushregs_
03a28     2E 6B 02 F6 | 	mov	local01, arg01
03a2c     2F 6D 02 F6 | 	mov	local02, arg02
03a30                 | ' 
03a30                 | ' bitmode := muldiv64(clkfreq, $1_0000, baud) & $FFFFFC00       ' set bit timing
03a30     14 5C 06 FB | 	rdlong	arg01, #20
03a34     10 5E C6 F9 | 	decod	arg02, #16
03a38     2F 5D 02 FD | 	qmul	arg01, arg02
03a3c     19 6E 62 FD | 	getqy	local03
03a40     18 70 62 FD | 	getqx	local04
03a44     28 6E 62 FD | 	setq	local03
03a48     30 71 12 FD | 	qdiv	local04, arg03
03a4c     18 2A 62 FD | 	getqx	result1
03a50     15 61 02 F6 | 	mov	arg03, result1
03a54     FE FF 7F FF 
03a58     00 60 06 F5 | 	and	arg03, ##-1024
03a5c                 | ' bitmode |= 7                                                  ' set bits (8)
03a5c     07 60 46 F5 | 	or	arg03, #7
03a60                 | ' pinstart(rxpin,P_HIGH_15K|P_ASYNC_RX,bitmode,0)
03a60     40 6A 62 FD | 	dirl	local01
03a64     08 00 80 FF 
03a68     35 7D 08 FC | 	wrpin	##4158, local01
03a6c     35 61 12 FC | 	wxpin	arg03, local01
03a70     35 01 28 FC | 	wypin	#0, local01
03a74     41 6A 62 FD | 	dirh	local01
03a78                 | ' pinstart(txpin,P_ASYNC_TX|P_OE,bitmode,0)
03a78     40 6C 62 FD | 	dirl	local02
03a7c     36 F9 08 FC | 	wrpin	#124, local02
03a80     36 61 12 FC | 	wxpin	arg03, local02
03a84     36 01 28 FC | 	wypin	#0, local02
03a88     41 6C 62 FD | 	dirh	local02
03a8c                 | ' pinhigh(rxpin)
03a8c     59 6A 62 FD | 	drvh	local01
03a90     AF F0 03 F6 | 	mov	ptra, fp
03a94     BF 00 A0 FD | 	call	#popregs_
03a98                 | _retrocog_spin2_serial_start_ret
03a98     2D 00 64 FD | 	ret
03a9c                 | 
03a9c                 | ' 
03a9c                 | ' pub rxcheck(pin) : rxbyte | check
03a9c                 | _retrocog_spin2_rxcheck
03a9c     03 5A 05 F6 | 	mov	COUNT_, #3
03aa0     B0 00 A0 FD | 	call	#pushregs_
03aa4     2E 6B 02 F6 | 	mov	local01, arg01
03aa8                 | ' 
03aa8                 | ' '' Check for serial input
03aa8                 | ' '' -- returns -1 if nothing available
03aa8                 | ' 
03aa8                 | '   rxbyte := -1
03aa8     01 6C 66 F6 | 	neg	local02, #1
03aac                 | '   check := pinr(pin)
03aac     35 5D 02 F6 | 	mov	arg01, local01
03ab0     6C 26 B0 FD | 	call	#__system___pinread
03ab4     15 6F 0A F6 | 	mov	local03, result1 wz
03ab8                 | '   if (check)
03ab8                 | '     rxbyte := rdpin(pin) >> 24
03ab8     00 6C 06 56 |  if_ne	mov	local02, #0
03abc     35 6D 8A 5A |  if_ne	rdpin	local02, local01
03ac0     18 6C 46 50 |  if_ne	shr	local02, #24
03ac4     36 2B 02 F6 | 	mov	result1, local02
03ac8     AF F0 03 F6 | 	mov	ptra, fp
03acc     BF 00 A0 FD | 	call	#popregs_
03ad0                 | _retrocog_spin2_rxcheck_ret
03ad0     2D 00 64 FD | 	ret
03ad4                 | 
03ad4                 | _trackerplayer_spin2_initModule
03ad4     3E 5A 05 F6 | 	mov	COUNT_, #62
03ad8     B0 00 A0 FD | 	call	#pushregs_
03adc     24 F1 07 F1 | 	add	ptra, #292
03ae0     AF 5C 62 FC | 	wrlong	arg01, fp
03ae4     04 5E 05 F1 | 	add	fp, #4
03ae8     AF 5E 62 FC | 	wrlong	arg02, fp
03aec     04 5E 85 F1 | 	sub	fp, #4
03af0     AF 6A 02 FB | 	rdlong	local01, fp
03af4     02 00 00 FF 
03af8     38 6A 06 F1 | 	add	local01, ##1080
03afc                 | ' 
03afc                 | '   ' Set some data pointers
03afc                 | '   magicFour      := hubPtr + 1080
03afc     9D 0E 06 F1 | 	add	objptr, #157
03b00     07 6B 62 FC | 	wrlong	local01, objptr
03b04                 | '   nameStr        := hubPtr
03b04     AF 6C 02 FB | 	rdlong	local02, fp
03b08     97 0E 86 F1 | 	sub	objptr, #151
03b0c     07 6D 62 FC | 	wrlong	local02, objptr
03b10     AF 6E 02 FB | 	rdlong	local03, fp
03b14     14 6E 06 F1 | 	add	local03, #20
03b18                 | '   samplesInfoLut := hubPtr + 20
03b18     04 0E 06 F1 | 	add	objptr, #4
03b1c     07 6F 62 FC | 	wrlong	local03, objptr
03b20                 | ' 
03b20                 | '   ' Is this a 31 sample module?
03b20                 | '   if byte[magicFour][0] == "M" and byte[magicFour][2] == "K"
03b20     93 0E 06 F1 | 	add	objptr, #147
03b24     07 6D 02 FB | 	rdlong	local02, objptr
03b28     9D 0E 86 F1 | 	sub	objptr, #157
03b2c     36 71 C2 FA | 	rdbyte	local04, local02
03b30     4D 70 0E F2 | 	cmp	local04, #77 wz
03b34     48 01 90 5D |  if_ne	jmp	#LR__0139
03b38     9D 0E 06 F1 | 	add	objptr, #157
03b3c     07 73 02 FB | 	rdlong	local05, objptr
03b40     9D 0E 86 F1 | 	sub	objptr, #157
03b44     02 72 06 F1 | 	add	local05, #2
03b48     39 75 C2 FA | 	rdbyte	local06, local05
03b4c     4B 74 0E F2 | 	cmp	local06, #75 wz
03b50     2C 01 90 5D |  if_ne	jmp	#LR__0139
03b54     AF 76 02 FB | 	rdlong	local07, fp
03b58     01 00 00 FF 
03b5c     B6 77 06 F1 | 	add	local07, ##950
03b60                 | '     songLength          := byte[hubPtr + 950]
03b60     3B 6D C2 FA | 	rdbyte	local02, local07
03b64     9A 0E 06 F1 | 	add	objptr, #154
03b68     07 6D 42 FC | 	wrbyte	local02, objptr
03b6c     AF 78 02 FB | 	rdlong	local08, fp
03b70     01 00 00 FF 
03b74     B7 79 06 F1 | 	add	local08, ##951
03b78                 | '     unknown1            := byte[hubPtr + 951]
03b78     3C 6D C2 FA | 	rdbyte	local02, local08
03b7c     02 0E 06 F1 | 	add	objptr, #2
03b80     07 6D 42 FC | 	wrbyte	local02, objptr
03b84     AF 7A 02 FB | 	rdlong	local09, fp
03b88     01 00 00 FF 
03b8c     B8 7B 06 F1 | 	add	local09, ##952
03b90                 | '     songPositionsLut    :=      hubPtr + 952
03b90     06 0E 86 F1 | 	sub	objptr, #6
03b94     07 7B 62 FC | 	wrlong	local09, objptr
03b98     AF 7C 02 FB | 	rdlong	local10, fp
03b9c     02 00 00 FF 
03ba0     3C 7C 06 F1 | 	add	local10, ##1084
03ba4                 | '     patternsData        :=      hubPtr + 1084
03ba4     04 0E 86 F1 | 	sub	objptr, #4
03ba8     07 7D 62 FC | 	wrlong	local10, objptr
03bac                 | '     numberOfInstruments := 31
03bac     14 0E 06 F1 | 	add	objptr, #20
03bb0     07 3F 48 FC | 	wrbyte	#31, objptr
03bb4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03bb4     0B 0E 86 F1 | 	sub	objptr, #11
03bb8     07 01 48 FC | 	wrbyte	#0, objptr
03bbc     9B 0E 86 F1 | 	sub	objptr, #155
03bc0                 | '     repeat i from 952 to 1079
03bc0     08 5E 05 F1 | 	add	fp, #8
03bc4     01 00 80 FF 
03bc8     AF 70 6B FC | 	wrlong	##952, fp
03bcc     08 5E 85 F1 | 	sub	fp, #8
03bd0     9C C4 9F FE | 	loc	pa,	#(@LR__0138-@LR__0136)
03bd4     93 00 A0 FD | 	call	#FCACHE_LOAD_
03bd8                 | LR__0136
03bd8                 | '       if byte[hubPtr][i] > numberOfPatterns
03bd8     AF 7E 02 FB | 	rdlong	local11, fp
03bdc     08 5E 05 F1 | 	add	fp, #8
03be0     AF 70 02 FB | 	rdlong	local04, fp
03be4     08 5E 85 F1 | 	sub	fp, #8
03be8     3F 71 02 F1 | 	add	local04, local11
03bec     38 75 C2 FA | 	rdbyte	local06, local04
03bf0     9B 0E 06 F1 | 	add	objptr, #155
03bf4     07 81 C2 FA | 	rdbyte	local12, objptr
03bf8     9B 0E 86 F1 | 	sub	objptr, #155
03bfc     40 75 5A F2 | 	cmps	local06, local12 wcz
03c00     24 00 90 ED |  if_be	jmp	#LR__0137
03c04     AF 7E 02 FB | 	rdlong	local11, fp
03c08     08 5E 05 F1 | 	add	fp, #8
03c0c     AF 82 02 FB | 	rdlong	local13, fp
03c10     08 5E 85 F1 | 	sub	fp, #8
03c14     3F 83 02 F1 | 	add	local13, local11
03c18                 | '         numberOfPatterns := byte[hubPtr][i]
03c18     41 85 C2 FA | 	rdbyte	local14, local13
03c1c     9B 0E 06 F1 | 	add	objptr, #155
03c20     07 85 42 FC | 	wrbyte	local14, objptr
03c24     9B 0E 86 F1 | 	sub	objptr, #155
03c28                 | LR__0137
03c28     08 5E 05 F1 | 	add	fp, #8
03c2c     AF 84 02 FB | 	rdlong	local14, fp
03c30     01 84 06 F1 | 	add	local14, #1
03c34     AF 84 62 FC | 	wrlong	local14, fp
03c38     08 5E 85 F1 | 	sub	fp, #8
03c3c     02 00 00 FF 
03c40     38 84 5E F2 | 	cmps	local14, ##1080 wcz
03c44     90 FF 9F CD |  if_b	jmp	#LR__0136
03c48                 | LR__0138
03c48                 | '     numberOfPatterns++
03c48     9B 0E 06 F1 | 	add	objptr, #155
03c4c     07 85 C2 FA | 	rdbyte	local14, objptr
03c50     07 71 C2 FA | 	rdbyte	local04, objptr
03c54     01 70 06 F1 | 	add	local04, #1
03c58     07 71 42 FC | 	wrbyte	local04, objptr
03c5c     07 87 C2 FA | 	rdbyte	local15, objptr
03c60     0A 86 66 F0 | 	shl	local15, #10
03c64     09 0E 86 F1 | 	sub	objptr, #9
03c68     07 89 02 FB | 	rdlong	local16, objptr
03c6c     43 89 02 F1 | 	add	local16, local15
03c70                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
03c70     84 0E 86 F1 | 	sub	objptr, #132
03c74     07 89 62 FC | 	wrlong	local16, objptr
03c78     0E 0E 86 F1 | 	sub	objptr, #14
03c7c                 | ' 
03c7c                 | '   ' This must be an oldschool 15 sample soundtracker module
03c7c                 | '   else
03c7c     18 01 90 FD | 	jmp	#LR__0143
03c80                 | LR__0139
03c80     AF 8A 02 FB | 	rdlong	local17, fp
03c84     D6 8B 06 F1 | 	add	local17, #470
03c88                 | '     songLength          := byte[hubPtr + 470]
03c88     45 6D C2 FA | 	rdbyte	local02, local17
03c8c     9A 0E 06 F1 | 	add	objptr, #154
03c90     07 6D 42 FC | 	wrbyte	local02, objptr
03c94     AF 8C 02 FB | 	rdlong	local18, fp
03c98     D7 8D 06 F1 | 	add	local18, #471
03c9c                 | '     unknown1            := byte[hubPtr + 471]
03c9c     46 6D C2 FA | 	rdbyte	local02, local18
03ca0     02 0E 06 F1 | 	add	objptr, #2
03ca4     07 6D 42 FC | 	wrbyte	local02, objptr
03ca8     AF 8E 02 FB | 	rdlong	local19, fp
03cac     D8 8F 06 F1 | 	add	local19, #472
03cb0                 | '     songPositionsLut    :=      hubPtr + 472
03cb0     06 0E 86 F1 | 	sub	objptr, #6
03cb4     07 8F 62 FC | 	wrlong	local19, objptr
03cb8     AF 90 02 FB | 	rdlong	local20, fp
03cbc     01 00 00 FF 
03cc0     58 90 06 F1 | 	add	local20, ##600
03cc4                 | '     patternsData        :=      hubPtr + 600
03cc4     04 0E 86 F1 | 	sub	objptr, #4
03cc8     07 91 62 FC | 	wrlong	local20, objptr
03ccc                 | '     numberOfInstruments := 15
03ccc     14 0E 06 F1 | 	add	objptr, #20
03cd0     07 1F 48 FC | 	wrbyte	#15, objptr
03cd4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03cd4     0B 0E 86 F1 | 	sub	objptr, #11
03cd8     07 01 48 FC | 	wrbyte	#0, objptr
03cdc     9B 0E 86 F1 | 	sub	objptr, #155
03ce0                 | '     repeat i from 472 to 599
03ce0     08 5E 05 F1 | 	add	fp, #8
03ce4     AF B0 6B FC | 	wrlong	#472, fp
03ce8     08 5E 85 F1 | 	sub	fp, #8
03cec     80 C3 9F FE | 	loc	pa,	#(@LR__0142-@LR__0140)
03cf0     93 00 A0 FD | 	call	#FCACHE_LOAD_
03cf4                 | LR__0140
03cf4                 | '       if byte[hubPtr][i] > numberOfPatterns
03cf4     AF 7E 02 FB | 	rdlong	local11, fp
03cf8     08 5E 05 F1 | 	add	fp, #8
03cfc     AF 70 02 FB | 	rdlong	local04, fp
03d00     08 5E 85 F1 | 	sub	fp, #8
03d04     3F 71 02 F1 | 	add	local04, local11
03d08     38 75 C2 FA | 	rdbyte	local06, local04
03d0c     9B 0E 06 F1 | 	add	objptr, #155
03d10     07 81 C2 FA | 	rdbyte	local12, objptr
03d14     9B 0E 86 F1 | 	sub	objptr, #155
03d18     40 75 5A F2 | 	cmps	local06, local12 wcz
03d1c     24 00 90 ED |  if_be	jmp	#LR__0141
03d20     AF 7E 02 FB | 	rdlong	local11, fp
03d24     08 5E 05 F1 | 	add	fp, #8
03d28     AF 92 02 FB | 	rdlong	local21, fp
03d2c     08 5E 85 F1 | 	sub	fp, #8
03d30     3F 93 02 F1 | 	add	local21, local11
03d34                 | '         numberOfPatterns := byte[hubPtr][i]
03d34     49 85 C2 FA | 	rdbyte	local14, local21
03d38     9B 0E 06 F1 | 	add	objptr, #155
03d3c     07 85 42 FC | 	wrbyte	local14, objptr
03d40     9B 0E 86 F1 | 	sub	objptr, #155
03d44                 | LR__0141
03d44     08 5E 05 F1 | 	add	fp, #8
03d48     AF 84 02 FB | 	rdlong	local14, fp
03d4c     01 84 06 F1 | 	add	local14, #1
03d50     AF 84 62 FC | 	wrlong	local14, fp
03d54     08 5E 85 F1 | 	sub	fp, #8
03d58     01 00 00 FF 
03d5c     58 84 5E F2 | 	cmps	local14, ##600 wcz
03d60     90 FF 9F CD |  if_b	jmp	#LR__0140
03d64                 | LR__0142
03d64                 | '     numberOfPatterns++
03d64     9B 0E 06 F1 | 	add	objptr, #155
03d68     07 85 C2 FA | 	rdbyte	local14, objptr
03d6c     07 71 C2 FA | 	rdbyte	local04, objptr
03d70     01 70 06 F1 | 	add	local04, #1
03d74     07 71 42 FC | 	wrbyte	local04, objptr
03d78     07 95 C2 FA | 	rdbyte	local22, objptr
03d7c     0A 94 66 F0 | 	shl	local22, #10
03d80     09 0E 86 F1 | 	sub	objptr, #9
03d84     07 97 02 FB | 	rdlong	local23, objptr
03d88     4A 97 02 F1 | 	add	local23, local22
03d8c                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
03d8c     84 0E 86 F1 | 	sub	objptr, #132
03d90     07 97 62 FC | 	wrlong	local23, objptr
03d94     0E 0E 86 F1 | 	sub	objptr, #14
03d98                 | LR__0143
03d98                 | ' 
03d98                 | '   ' Iterate through all samples and fill in the sample pointer LUT
03d98                 | '   tmpPtr := sampleDataPtr
03d98     0E 0E 06 F1 | 	add	objptr, #14
03d9c     07 6D 02 FB | 	rdlong	local02, objptr
03da0     0C 5E 05 F1 | 	add	fp, #12
03da4     AF 6C 62 FC | 	wrlong	local02, fp
03da8                 | '   repeat i from 1 to numberOfInstruments
03da8     04 5E 85 F1 | 	sub	fp, #4
03dac     AF 02 68 FC | 	wrlong	#1, fp
03db0     08 5E 85 F1 | 	sub	fp, #8
03db4     98 0E 06 F1 | 	add	objptr, #152
03db8     07 71 C2 FA | 	rdbyte	local04, objptr
03dbc     01 70 5E F2 | 	cmps	local04, #1 wcz
03dc0     01 84 06 16 |  if_a	mov	local14, #1
03dc4     01 84 66 E6 |  if_be	neg	local14, #1
03dc8     42 99 02 F6 | 	mov	local24, local14
03dcc     07 9B C2 FA | 	rdbyte	local25, objptr
03dd0     A6 0E 86 F1 | 	sub	objptr, #166
03dd4     4C 9B 02 F1 | 	add	local25, local24
03dd8                 | LR__0144
03dd8     08 5E 05 F1 | 	add	fp, #8
03ddc     AF 9C 02 FB | 	rdlong	local26, fp
03de0     01 9C 86 F1 | 	sub	local26, #1
03de4     02 9C 66 F0 | 	shl	local26, #2
03de8     12 0E 06 F1 | 	add	objptr, #18
03dec     07 9D 02 F1 | 	add	local26, objptr
03df0                 | '     samplesPtrLut[i-1] := tmpPtr
03df0     04 5E 05 F1 | 	add	fp, #4
03df4     AF 80 02 FB | 	rdlong	local12, fp
03df8     4E 81 62 FC | 	wrlong	local12, local26
03dfc     18 5E 05 F1 | 	add	fp, #24
03e00     AF 5E 02 F6 | 	mov	arg02, fp
03e04     14 5E 85 F1 | 	sub	fp, #20
03e08     AF 60 02 F6 | 	mov	arg03, fp
03e0c     04 5E 05 F1 | 	add	fp, #4
03e10     AF 62 02 F6 | 	mov	arg04, fp
03e14     04 5E 05 F1 | 	add	fp, #4
03e18     AF 64 02 F6 | 	mov	arg05, fp
03e1c     04 5E 05 F1 | 	add	fp, #4
03e20     AF 66 02 F6 | 	mov	arg06, fp
03e24     04 5E 05 F1 | 	add	fp, #4
03e28     AF 68 02 F6 | 	mov	arg07, fp
03e2c                 | '     getSampleInfo(i, @d5, @samLength, @d1, @d2, @d3, @d4)
03e2c     18 5E 85 F1 | 	sub	fp, #24
03e30     AF 5C 02 FB | 	rdlong	arg01, fp
03e34     08 5E 85 F1 | 	sub	fp, #8
03e38     12 0E 86 F1 | 	sub	objptr, #18
03e3c     A0 07 B0 FD | 	call	#_trackerplayer_spin2_getSampleInfo
03e40                 | '     tmpPtr += samLength
03e40     0C 5E 05 F1 | 	add	fp, #12
03e44     AF 80 02 FB | 	rdlong	local12, fp
03e48     04 5E 05 F1 | 	add	fp, #4
03e4c     AF 9E 02 FB | 	rdlong	local27, fp
03e50     4F 81 02 F1 | 	add	local12, local27
03e54     04 5E 85 F1 | 	sub	fp, #4
03e58     AF 80 62 FC | 	wrlong	local12, fp
03e5c     04 5E 85 F1 | 	sub	fp, #4
03e60     AF 80 02 FB | 	rdlong	local12, fp
03e64     4C 81 02 F1 | 	add	local12, local24
03e68     AF 80 62 FC | 	wrlong	local12, fp
03e6c     08 5E 85 F1 | 	sub	fp, #8
03e70     4D 81 0A F2 | 	cmp	local12, local25 wz
03e74     60 FF 9F 5D |  if_ne	jmp	#LR__0144
03e78                 | ' 
03e78                 | '   ' Below this point, all play routine variables are resest to their default values
03e78                 | '   tickCounter                 := 0
03e78     A1 0E 06 F1 | 	add	objptr, #161
03e7c     07 01 48 FC | 	wrbyte	#0, objptr
03e80                 | '   patternRow                  := 0
03e80     01 0E 06 F1 | 	add	objptr, #1
03e84     07 01 48 FC | 	wrbyte	#0, objptr
03e88                 | '   songPosition                := startPattern
03e88     04 5E 05 F1 | 	add	fp, #4
03e8c     AF 6C 02 FB | 	rdlong	local02, fp
03e90     04 5E 85 F1 | 	sub	fp, #4
03e94     01 0E 06 F1 | 	add	objptr, #1
03e98     07 6D 42 FC | 	wrbyte	local02, objptr
03e9c                 | '   currentSongSpeed            := 6
03e9c     01 0E 06 F1 | 	add	objptr, #1
03ea0     07 0D 48 FC | 	wrbyte	#6, objptr
03ea4                 | '   patternDelay                := 0
03ea4     01 0E 06 F1 | 	add	objptr, #1
03ea8     07 01 48 FC | 	wrbyte	#0, objptr
03eac                 | '   ticksPerMinute              := 50 * 60
03eac     02 0F 06 F1 | 	add	objptr, #258
03eb0     05 00 80 FF 
03eb4     07 71 6B FC | 	wrlong	##3000, objptr
03eb8     A7 0F 86 F1 | 	sub	objptr, #423
03ebc     07 0B 03 FB | 	rdlong	muldiva_, objptr
03ec0     32 0C 07 F6 | 	mov	muldivb_, #50
03ec4     D0 00 A0 FD | 	call	#divide_
03ec8                 | '   cyclesToWait                := systemClock / 50
03ec8     AB 0F 06 F1 | 	add	objptr, #427
03ecc     07 0D 63 FC | 	wrlong	muldivb_, objptr
03ed0                 | '   sampleNumber_memory         := 0
03ed0     35 0E 06 F1 | 	add	objptr, #53
03ed4     07 01 48 FC | 	wrbyte	#0, objptr
03ed8                 | '   lpFilter                    := 0
03ed8     25 0E 86 F1 | 	sub	objptr, #37
03edc     07 01 48 FC | 	wrbyte	#0, objptr
03ee0                 | '   cmdD_memoryX                := 0
03ee0     29 0E 06 F1 | 	add	objptr, #41
03ee4     07 01 48 FC | 	wrbyte	#0, objptr
03ee8                 | '   cmdD_memoryY                := 0
03ee8     01 0E 06 F1 | 	add	objptr, #1
03eec     07 01 48 FC | 	wrbyte	#0, objptr
03ef0                 | '   cmdD_updatePosition         := false
03ef0     01 0E 06 F1 | 	add	objptr, #1
03ef4     07 01 48 FC | 	wrbyte	#0, objptr
03ef8                 | '   cmdB_memoryZ                := 0
03ef8     01 0E 06 F1 | 	add	objptr, #1
03efc     07 01 48 FC | 	wrbyte	#0, objptr
03f00                 | '   cmdB_updatePosition         := false
03f00     01 0E 06 F1 | 	add	objptr, #1
03f04     07 01 48 FC | 	wrbyte	#0, objptr
03f08                 | '   cmdE6_updatePositionCommon  := false
03f08     0D 0E 06 F1 | 	add	objptr, #13
03f0c     07 01 48 FC | 	wrbyte	#0, objptr
03f10     F5 0F 86 F1 | 	sub	objptr, #501
03f14                 | ' 
03f14                 | '   repeat i from 0 to LAST_CHANNEL
03f14     08 5E 05 F1 | 	add	fp, #8
03f18     AF 00 68 FC | 	wrlong	#0, fp
03f1c     08 5E 85 F1 | 	sub	fp, #8
03f20                 | LR__0145
03f20     08 5E 05 F1 | 	add	fp, #8
03f24     AF A0 02 FB | 	rdlong	local28, fp
03f28     01 A0 66 F0 | 	shl	local28, #1
03f2c     D7 0E 06 F1 | 	add	objptr, #215
03f30     07 A1 02 F1 | 	add	local28, objptr
03f34                 | ' 
03f34                 | '     currRepeatPoint[i]        := 0
03f34     50 01 58 FC | 	wrword	#0, local28
03f38     AF A2 02 FB | 	rdlong	local29, fp
03f3c     01 A2 66 F0 | 	shl	local29, #1
03f40     1C 0E 86 F1 | 	sub	objptr, #28
03f44     07 A3 02 F1 | 	add	local29, objptr
03f48                 | '     currSampleLength[i]       := 4
03f48     51 09 58 FC | 	wrword	#4, local29
03f4c     14 A5 02 F6 | 	mov	local30, ptr__trackerplayer_spin2_dat__
03f50     AF A6 02 FB | 	rdlong	local31, fp
03f54     02 A6 66 F0 | 	shl	local31, #2
03f58     14 0E 86 F1 | 	sub	objptr, #20
03f5c     07 A7 02 F1 | 	add	local31, objptr
03f60                 | '     currSamplePtr[i]          := @null
03f60     53 A5 62 FC | 	wrlong	local30, local31
03f64     AF A8 02 FB | 	rdlong	local32, fp
03f68     10 0E 06 F1 | 	add	objptr, #16
03f6c     07 A9 02 F1 | 	add	local32, objptr
03f70                 | '     currSampleNr[i]           := 0
03f70     54 01 48 FC | 	wrbyte	#0, local32
03f74     AF AA 02 FB | 	rdlong	local33, fp
03f78     02 AA 66 F0 | 	shl	local33, #2
03f7c     0C 0E 06 F1 | 	add	objptr, #12
03f80     07 AB 02 F1 | 	add	local33, objptr
03f84                 | '     currRepeatLength[i]       := 1
03f84     55 03 68 FC | 	wrlong	#1, local33
03f88     AF AC 02 FB | 	rdlong	local34, fp
03f8c     02 AC 66 F0 | 	shl	local34, #2
03f90     1C 0E 06 F1 | 	add	objptr, #28
03f94     07 AD 02 F1 | 	add	local34, objptr
03f98                 | '     currPeriod[i]             := 400
03f98     56 21 6B FC | 	wrlong	#400, local34
03f9c     AF AE 02 FB | 	rdlong	local35, fp
03fa0     02 AE 66 F0 | 	shl	local35, #2
03fa4     48 0E 06 F1 | 	add	objptr, #72
03fa8     07 AF 02 F1 | 	add	local35, objptr
03fac                 | '     lastSetPeriod[i]          := 400
03fac     57 21 6B FC | 	wrlong	#400, local35
03fb0     AF B0 02 FB | 	rdlong	local36, fp
03fb4     02 B0 66 F0 | 	shl	local36, #2
03fb8     10 0E 06 F1 | 	add	objptr, #16
03fbc     07 B1 02 F1 | 	add	local36, objptr
03fc0                 | '     lastSetSamplePtr[i]       := 0
03fc0     58 01 68 FC | 	wrlong	#0, local36
03fc4     AF B2 02 FB | 	rdlong	local37, fp
03fc8     02 B2 66 F0 | 	shl	local37, #2
03fcc     10 0E 06 F1 | 	add	objptr, #16
03fd0     07 B3 02 F1 | 	add	local37, objptr
03fd4                 | '     lastSetSampleNr[i]        := 0
03fd4     59 01 68 FC | 	wrlong	#0, local37
03fd8     AF B4 02 FB | 	rdlong	local38, fp
03fdc     02 B4 66 F0 | 	shl	local38, #2
03fe0     10 0E 06 F1 | 	add	objptr, #16
03fe4     07 B5 02 F1 | 	add	local38, objptr
03fe8                 | '     lastSetSampleLength[i]    := 0
03fe8     5A 01 68 FC | 	wrlong	#0, local38
03fec     AF B6 02 FB | 	rdlong	local39, fp
03ff0     02 B6 66 F0 | 	shl	local39, #2
03ff4     10 0E 06 F1 | 	add	objptr, #16
03ff8     07 B7 02 F1 | 	add	local39, objptr
03ffc                 | '     lastSetRepeatLength[i]    := 0
03ffc     5B 01 68 FC | 	wrlong	#0, local39
04000     AF B8 02 FB | 	rdlong	local40, fp
04004     02 B8 66 F0 | 	shl	local40, #2
04008     10 0E 06 F1 | 	add	objptr, #16
0400c     07 B9 02 F1 | 	add	local40, objptr
04010                 | '     lastSetRepeatPoint[i]     := 0
04010     5C 01 68 FC | 	wrlong	#0, local40
04014     AF BA 02 FB | 	rdlong	local41, fp
04018     02 BA 66 F0 | 	shl	local41, #2
0401c     78 0E 86 F1 | 	sub	objptr, #120
04020     07 BB 02 F1 | 	add	local41, objptr
04024                 | '     currVolume[i]             := 0
04024     5D 01 68 FC | 	wrlong	#0, local41
04028     AF BC 02 FB | 	rdlong	local42, fp
0402c     01 BC 66 F0 | 	shl	local42, #1
04030     20 0E 06 F1 | 	add	objptr, #32
04034     07 BD 02 F1 | 	add	local42, objptr
04038                 | '     currPanning[i]            := 0
04038     5E 01 58 FC | 	wrword	#0, local42
0403c     AF BE 02 FB | 	rdlong	local43, fp
04040     A9 0E 06 F1 | 	add	objptr, #169
04044     07 BF 02 F1 | 	add	local43, objptr
04048                 | '     cmd3_memoryZ[i]           := 0
04048     5F 01 48 FC | 	wrbyte	#0, local43
0404c     AF C0 02 FB | 	rdlong	local44, fp
04050     04 0E 06 F1 | 	add	objptr, #4
04054     07 C1 02 F1 | 	add	local44, objptr
04058                 | '     cmd4_memoryY[i]           := 0
04058     60 01 48 FC | 	wrbyte	#0, local44
0405c     AF C2 02 FB | 	rdlong	local45, fp
04060     04 0E 06 F1 | 	add	objptr, #4
04064     07 C3 02 F1 | 	add	local45, objptr
04068                 | '     cmd4_memoryX[i]           := 0
04068     61 01 48 FC | 	wrbyte	#0, local45
0406c     AF C4 02 FB | 	rdlong	local46, fp
04070     04 0E 06 F1 | 	add	objptr, #4
04074     07 C5 02 F1 | 	add	local46, objptr
04078                 | '     cmd7_memoryY[i]           := 0
04078     62 01 48 FC | 	wrbyte	#0, local46
0407c     AF C6 02 FB | 	rdlong	local47, fp
04080     04 0E 06 F1 | 	add	objptr, #4
04084     07 C7 02 F1 | 	add	local47, objptr
04088                 | '     cmd7_memoryX[i]           := 0
04088     63 01 48 FC | 	wrbyte	#0, local47
0408c     AF C8 02 FB | 	rdlong	local48, fp
04090     04 0E 06 F1 | 	add	objptr, #4
04094     07 C9 02 F1 | 	add	local48, objptr
04098                 | '     cmd9_memoryZ[i]           := 0
04098     64 01 48 FC | 	wrbyte	#0, local48
0409c     AF CA 02 FB | 	rdlong	local49, fp
040a0     0D 0E 06 F1 | 	add	objptr, #13
040a4     07 CB 02 F1 | 	add	local49, objptr
040a8                 | '     cmdE6_memory[i]           := 0
040a8     65 01 48 FC | 	wrbyte	#0, local49
040ac     AF CC 02 FB | 	rdlong	local50, fp
040b0     04 0E 06 F1 | 	add	objptr, #4
040b4     07 CD 02 F1 | 	add	local50, objptr
040b8                 | '     cmdE6_counter[i]          := 0
040b8     66 01 48 FC | 	wrbyte	#0, local50
040bc     AF CE 02 FB | 	rdlong	local51, fp
040c0     04 0E 06 F1 | 	add	objptr, #4
040c4     07 CF 02 F1 | 	add	local51, objptr
040c8                 | '     cmdE6_updatePosition[i]   := false
040c8     67 01 48 FC | 	wrbyte	#0, local51
040cc     AF D0 02 FB | 	rdlong	local52, fp
040d0     11 0E 86 F1 | 	sub	objptr, #17
040d4     07 D1 02 F1 | 	add	local52, objptr
040d8                 | '     sampleNumber_memory[i]    := 0
040d8     68 01 48 FC | 	wrbyte	#0, local52
040dc     AF D2 02 FB | 	rdlong	local53, fp
040e0     59 0E 86 F1 | 	sub	objptr, #89
040e4     07 D3 02 F1 | 	add	local53, objptr
040e8                 | '     vibratoPos[i]             := 0
040e8     69 01 48 FC | 	wrbyte	#0, local53
040ec     AF D4 02 FB | 	rdlong	local54, fp
040f0     02 D4 66 F0 | 	shl	local54, #2
040f4     10 0E 06 F1 | 	add	objptr, #16
040f8     07 D5 02 F1 | 	add	local54, objptr
040fc                 | '     portamentoPeriodMemory[i] := 0
040fc     6A 01 68 FC | 	wrlong	#0, local54
04100     AF D6 02 FB | 	rdlong	local55, fp
04104     25 0E 06 F1 | 	add	objptr, #37
04108     07 D7 02 F1 | 	add	local55, objptr
0410c                 | '     portaGlissando[i]         := 0
0410c     6B 01 48 FC | 	wrbyte	#0, local55
04110     AF D8 02 FB | 	rdlong	local56, fp
04114     04 0E 06 F1 | 	add	objptr, #4
04118     07 D9 02 F1 | 	add	local56, objptr
0411c                 | '     vibratoType[i]            := 0
0411c     6C 01 48 FC | 	wrbyte	#0, local56
04120     AF DA 02 FB | 	rdlong	local57, fp
04124     04 0E 06 F1 | 	add	objptr, #4
04128     07 DB 02 F1 | 	add	local57, objptr
0412c                 | '     tremoloType[i]            := 0
0412c     6D 01 48 FC | 	wrbyte	#0, local57
04130     AF DC 02 FB | 	rdlong	local58, fp
04134     39 0E 86 F1 | 	sub	objptr, #57
04138     07 DD 02 F1 | 	add	local58, objptr
0413c                 | '     tremoloPos[i]             := 0
0413c     6E 01 48 FC | 	wrbyte	#0, local58
04140     AF DE 02 FB | 	rdlong	local59, fp
04144     02 DE 66 F0 | 	shl	local59, #2
04148     7C 0E 86 F1 | 	sub	objptr, #124
0414c     07 DF 02 F1 | 	add	local59, objptr
04150                 | '     deltaVolume[i]            := 0
04150     6F 01 68 FC | 	wrlong	#0, local59
04154     AF E0 02 FB | 	rdlong	local60, fp
04158     02 E0 66 F0 | 	shl	local60, #2
0415c     20 0E 86 F1 | 	sub	objptr, #32
04160     07 E1 02 F1 | 	add	local60, objptr
04164                 | '     deltaPeriod[i]            := 0
04164     70 01 68 FC | 	wrlong	#0, local60
04168     AF E2 02 FB | 	rdlong	local61, fp
0416c     A0 0E 06 F1 | 	add	objptr, #160
04170     07 E3 02 F1 | 	add	local61, objptr
04174                 | '     resetTremolo[i]           := 0
04174     71 01 48 FC | 	wrbyte	#0, local61
04178     AF E4 02 FB | 	rdlong	local62, fp
0417c     04 0E 06 F1 | 	add	objptr, #4
04180     07 E5 02 F1 | 	add	local62, objptr
04184                 | '     resetVibrato[i]           := 0
04184     72 01 48 FC | 	wrbyte	#0, local62
04188     AF 84 02 FB | 	rdlong	local14, fp
0418c     01 84 06 F1 | 	add	local14, #1
04190     AF 84 62 FC | 	wrlong	local14, fp
04194     08 5E 85 F1 | 	sub	fp, #8
04198     04 84 5E F2 | 	cmps	local14, #4 wcz
0419c     93 0F 86 F1 | 	sub	objptr, #403
041a0     7C FD 9F CD |  if_b	jmp	#LR__0145
041a4     AF F0 03 F6 | 	mov	ptra, fp
041a8     BF 00 A0 FD | 	call	#popregs_
041ac                 | _trackerplayer_spin2_initModule_ret
041ac     2D 00 64 FD | 	ret
041b0                 | 
041b0                 | ' 
041b0                 | ' 
041b0                 | ' ' This routine needs to be ticked X number of times per second
041b0                 | ' ' in order to advance the tracker play routine
041b0                 | ' '
041b0                 | ' PUB tick() | channel, sampleNumber, period, effect, i
041b0                 | _trackerplayer_spin2_tick
041b0     12 5A 05 F6 | 	mov	COUNT_, #18
041b4     B0 00 A0 FD | 	call	#pushregs_
041b8     30 F0 07 F1 | 	add	ptra, #48
041bc                 | ' 
041bc                 | '   if currentSongSpeed == 0
041bc     A4 0E 06 F1 | 	add	objptr, #164
041c0     07 6B CA FA | 	rdbyte	local01, objptr wz
041c4     A4 0E 86 F1 | 	sub	objptr, #164
041c8                 | '     return
041c8     34 03 90 AD |  if_e	jmp	#LR__0157
041cc                 | ' 
041cc                 | '   ' Iterate over the channels and process everything
041cc                 | '   repeat channel from 0 to LAST_CHANNEL
041cc     AF 00 68 FC | 	wrlong	#0, fp
041d0                 | LR__0146
041d0     04 5E 05 F1 | 	add	fp, #4
041d4     AF 62 02 F6 | 	mov	arg04, fp
041d8     04 5E 05 F1 | 	add	fp, #4
041dc     AF 64 02 F6 | 	mov	arg05, fp
041e0     04 5E 05 F1 | 	add	fp, #4
041e4     AF 66 02 F6 | 	mov	arg06, fp
041e8     0C 5E 85 F1 | 	sub	fp, #12
041ec                 | ' 
041ec                 | '     getNoteData(channel, songPosition, patternRow, @sampleNumber, @period, @effect)
041ec     AF 5C 02 FB | 	rdlong	arg01, fp
041f0     A3 0E 06 F1 | 	add	objptr, #163
041f4     07 5F C2 FA | 	rdbyte	arg02, objptr
041f8     01 0E 86 F1 | 	sub	objptr, #1
041fc     07 61 C2 FA | 	rdbyte	arg03, objptr
04200     7F 5E 06 F5 | 	and	arg02, #127
04204     0C 0E 86 F1 | 	sub	objptr, #12
04208     07 6D 02 FB | 	rdlong	local02, objptr
0420c     36 5F 02 F1 | 	add	arg02, local02
04210                 | ' 
04210                 | '   ' Get the note data for a specific channel/song position/pattern row
04210                 | '   patternNumber := byte[songPositionsLut][position & 127]
04210     2F 6F C2 FA | 	rdbyte	local03, arg02
04214     0A 6E 66 F0 | 	shl	local03, #10
04218     04 0E 86 F1 | 	sub	objptr, #4
0421c     07 71 02 FB | 	rdlong	local04, objptr
04220     92 0E 86 F1 | 	sub	objptr, #146
04224     37 71 02 F1 | 	add	local04, local03
04228                 | '   patternPtr    := patternsData + (patternNumber << 10)
04228     3F 60 06 F5 | 	and	arg03, #63
0422c     04 60 66 F0 | 	shl	arg03, #4
04230     30 71 02 F1 | 	add	local04, arg03
04234     03 5C 06 F5 | 	and	arg01, #3
04238     02 5C 66 F0 | 	shl	arg01, #2
0423c     2E 71 02 F1 | 	add	local04, arg01
04240                 | '   dataPtr       := patternPtr + ((row & 63) << 4) + ((channel &3 ) << 2)
04240     38 73 C2 FA | 	rdbyte	local05, local04
04244     18 72 66 F0 | 	shl	local05, #24
04248     01 70 06 F1 | 	add	local04, #1
0424c     38 75 C2 FA | 	rdbyte	local06, local04
04250     10 74 66 F0 | 	shl	local06, #16
04254     3A 73 42 F5 | 	or	local05, local06
04258     01 70 06 F1 | 	add	local04, #1
0425c     38 77 C2 FA | 	rdbyte	local07, local04
04260     08 76 66 F0 | 	shl	local07, #8
04264     3B 73 42 F5 | 	or	local05, local07
04268     01 70 06 F1 | 	add	local04, #1
0426c     38 79 C2 FA | 	rdbyte	local08, local04
04270     3C 73 42 F5 | 	or	local05, local08
04274                 | '   data          := (byte[dataPtr][0] << 24) | (byte[dataPtr][1] << 16) | (byte[dataPtr][2] << 8) | byte[dataPtr][3]
04274     39 7B 02 F6 | 	mov	local09, local05
04278     0C 7A 46 F0 | 	shr	local09, #12
0427c     0F 7A 06 F5 | 	and	local09, #15
04280     39 7D 02 F6 | 	mov	local10, local05
04284     18 7C 46 F0 | 	shr	local10, #24
04288     F0 7C 06 F5 | 	and	local10, #240
0428c     3E 7B 42 F5 | 	or	local09, local10
04290                 | ' 
04290                 | '   ' Extract the different sub parts from the data
04290                 | '   long[sampleNumber] := ((data >> 12) & $F) | ((data >> 24) & $F0)
04290     31 7B 62 FC | 	wrlong	local09, arg04
04294     39 7F 02 F6 | 	mov	local11, local05
04298     10 7E 46 F0 | 	shr	local11, #16
0429c     07 00 00 FF 
042a0     FF 7F 06 F5 | 	and	local11, ##4095
042a4                 | '   long[period]       :=  (data >> 16) & $FFF
042a4     32 7F 62 FC | 	wrlong	local11, arg05
042a8     07 00 00 FF 
042ac     FF 73 06 F5 | 	and	local05, ##4095
042b0                 | '   long[effect]       :=   data & $FFF
042b0     33 73 62 FC | 	wrlong	local05, arg06
042b4                 | '     processChannel(channel, sampleNumber, period, effect)
042b4     AF 5C 02 FB | 	rdlong	arg01, fp
042b8     04 5E 05 F1 | 	add	fp, #4
042bc     AF 5E 02 FB | 	rdlong	arg02, fp
042c0     04 5E 05 F1 | 	add	fp, #4
042c4     AF 60 02 FB | 	rdlong	arg03, fp
042c8     04 5E 05 F1 | 	add	fp, #4
042cc     AF 62 02 FB | 	rdlong	arg04, fp
042d0     0C 5E 85 F1 | 	sub	fp, #12
042d4     0C 05 B0 FD | 	call	#_trackerplayer_spin2_processChannel
042d8     AF 80 02 FB | 	rdlong	local12, fp
042dc     01 80 06 F1 | 	add	local12, #1
042e0     AF 80 62 FC | 	wrlong	local12, fp
042e4     04 80 5E F2 | 	cmps	local12, #4 wcz
042e8     E4 FE 9F CD |  if_b	jmp	#LR__0146
042ec                 | ' 
042ec                 | '   ' Incrementation the main counter that drives the whole play routine
042ec                 | '   if ++tickCounter >= (currentSongSpeed + patternDelay)
042ec     A1 0E 06 F1 | 	add	objptr, #161
042f0     07 6B C2 FA | 	rdbyte	local01, objptr
042f4     01 6A 06 F1 | 	add	local01, #1
042f8     07 6B 42 FC | 	wrbyte	local01, objptr
042fc     03 0E 06 F1 | 	add	objptr, #3
04300     07 83 C2 FA | 	rdbyte	local13, objptr
04304     01 0E 06 F1 | 	add	objptr, #1
04308     07 85 C2 FA | 	rdbyte	local14, objptr
0430c     42 83 02 F1 | 	add	local13, local14
04310     04 0E 86 F1 | 	sub	objptr, #4
04314     07 87 C2 FA | 	rdbyte	local15, objptr
04318     A1 0E 86 F1 | 	sub	objptr, #161
0431c     41 87 5A F2 | 	cmps	local15, local13 wcz
04320                 | '     tickCounter := 0
04320     A1 0E 06 31 |  if_ae	add	objptr, #161
04324     07 01 48 3C |  if_ae	wrbyte	#0, objptr
04328     A1 0E 86 31 |  if_ae	sub	objptr, #161
0432c                 | ' 
0432c                 | '   ' If the tick is zero, increment the other counters and do some song positioning handling
0432c                 | '   if tickCounter == 0
0432c     A1 0E 06 F1 | 	add	objptr, #161
04330     07 6B CA FA | 	rdbyte	local01, objptr wz
04334     A1 0E 86 F1 | 	sub	objptr, #161
04338     C4 01 90 5D |  if_ne	jmp	#LR__0156
0433c                 | ' 
0433c                 | '     ' Handle the "pattern repeat" command, "E6"
0433c                 | '     if cmdE6_updatePositionCommon
0433c     F5 0F 06 F1 | 	add	objptr, #501
04340     07 6B CA FA | 	rdbyte	local01, objptr wz
04344     F5 0F 86 F1 | 	sub	objptr, #501
04348     8C 00 90 AD |  if_e	jmp	#LR__0150
0434c                 | '       repeat i from 0 to LAST_CHANNEL
0434c     10 5E 05 F1 | 	add	fp, #16
04350     AF 00 68 FC | 	wrlong	#0, fp
04354     10 5E 85 F1 | 	sub	fp, #16
04358     18 BD 9F FE | 	loc	pa,	#(@LR__0149-@LR__0147)
0435c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04360                 | LR__0147
04360                 | '         if cmdE6_updatePosition[i]
04360     10 5E 05 F1 | 	add	fp, #16
04364     AF 80 02 FB | 	rdlong	local12, fp
04368     10 5E 85 F1 | 	sub	fp, #16
0436c     F1 0F 06 F1 | 	add	objptr, #497
04370     07 81 02 F1 | 	add	local12, objptr
04374     40 85 CA FA | 	rdbyte	local14, local12 wz
04378     F1 0F 86 F1 | 	sub	objptr, #497
0437c     24 00 90 AD |  if_e	jmp	#LR__0148
04380     10 5E 05 F1 | 	add	fp, #16
04384     AF 88 02 FB | 	rdlong	local16, fp
04388     10 5E 85 F1 | 	sub	fp, #16
0438c     E9 0F 06 F1 | 	add	objptr, #489
04390     07 89 02 F1 | 	add	local16, objptr
04394                 | '           patternRow := cmdE6_memory[i]
04394     44 81 C2 FA | 	rdbyte	local12, local16
04398     47 0F 86 F1 | 	sub	objptr, #327
0439c     07 81 42 FC | 	wrbyte	local12, objptr
043a0     A2 0E 86 F1 | 	sub	objptr, #162
043a4                 | LR__0148
043a4     10 5E 05 F1 | 	add	fp, #16
043a8     AF 8A 02 FB | 	rdlong	local17, fp
043ac     F1 0F 06 F1 | 	add	objptr, #497
043b0     07 8B 02 F1 | 	add	local17, objptr
043b4                 | '         cmdE6_updatePosition[i] := false
043b4     45 01 48 FC | 	wrbyte	#0, local17
043b8     AF 80 02 FB | 	rdlong	local12, fp
043bc     01 80 06 F1 | 	add	local12, #1
043c0     AF 80 62 FC | 	wrlong	local12, fp
043c4     10 5E 85 F1 | 	sub	fp, #16
043c8     04 80 5E F2 | 	cmps	local12, #4 wcz
043cc     F1 0F 86 F1 | 	sub	objptr, #497
043d0     8C FF 9F CD |  if_b	jmp	#LR__0147
043d4                 | LR__0149
043d4     CC 00 90 FD | 	jmp	#LR__0154
043d8                 | LR__0150
043d8                 | ' 
043d8                 | '     ' Handle the "skip to next pattern with offset command", "D"
043d8                 | '     elseif cmdD_updatePosition
043d8     E6 0F 06 F1 | 	add	objptr, #486
043dc     07 6B CA FA | 	rdbyte	local01, objptr wz
043e0     E6 0F 86 F1 | 	sub	objptr, #486
043e4     64 00 90 AD |  if_e	jmp	#LR__0151
043e8                 | '       if ++songPosition >= songLength
043e8     A3 0E 06 F1 | 	add	objptr, #163
043ec     07 6B C2 FA | 	rdbyte	local01, objptr
043f0     01 6A 06 F1 | 	add	local01, #1
043f4     07 6B 42 FC | 	wrbyte	local01, objptr
043f8     07 83 C2 FA | 	rdbyte	local13, objptr
043fc     09 0E 86 F1 | 	sub	objptr, #9
04400     07 85 C2 FA | 	rdbyte	local14, objptr
04404     9A 0E 86 F1 | 	sub	objptr, #154
04408     42 83 5A F2 | 	cmps	local13, local14 wcz
0440c                 | '         songPosition := 0
0440c     A3 0E 06 31 |  if_ae	add	objptr, #163
04410     07 01 48 3C |  if_ae	wrbyte	#0, objptr
04414     A3 0E 86 31 |  if_ae	sub	objptr, #163
04418     E4 0F 06 F1 | 	add	objptr, #484
0441c     07 81 C2 FA | 	rdbyte	local12, objptr
04420     40 8D 02 F6 | 	mov	local18, local12
04424     02 8C 66 F0 | 	shl	local18, #2
04428     40 8D 02 F1 | 	add	local18, local12
0442c     01 8C 66 F0 | 	shl	local18, #1
04430     01 0E 06 F1 | 	add	objptr, #1
04434     07 81 C2 FA | 	rdbyte	local12, objptr
04438     40 8D 02 F1 | 	add	local18, local12
0443c                 | ' 
0443c                 | '       patternRow := (cmdD_memoryX * 10) + cmdD_memoryY
0443c     43 0F 86 F1 | 	sub	objptr, #323
04440     07 8D 42 FC | 	wrbyte	local18, objptr
04444     A2 0E 86 F1 | 	sub	objptr, #162
04448                 | ' 
04448                 | '     ' If no "jump to row commands" are active, do a normal pattern incrementation
04448                 | '     else
04448     58 00 90 FD | 	jmp	#LR__0153
0444c                 | LR__0151
0444c                 | '       if ++patternRow >= PATTERN_LENGTH
0444c     A2 0E 06 F1 | 	add	objptr, #162
04450     07 6B C2 FA | 	rdbyte	local01, objptr
04454     01 6A 06 F1 | 	add	local01, #1
04458     07 6B 42 FC | 	wrbyte	local01, objptr
0445c     07 83 C2 FA | 	rdbyte	local13, objptr
04460     A2 0E 86 F1 | 	sub	objptr, #162
04464     40 82 5E F2 | 	cmps	local13, #64 wcz
04468     38 00 90 CD |  if_b	jmp	#LR__0152
0446c                 | '         patternRow := 0
0446c     A2 0E 06 F1 | 	add	objptr, #162
04470     07 01 48 FC | 	wrbyte	#0, objptr
04474                 | ' 
04474                 | '         if ++songPosition >= songLength
04474     01 0E 06 F1 | 	add	objptr, #1
04478     07 6B C2 FA | 	rdbyte	local01, objptr
0447c     01 6A 06 F1 | 	add	local01, #1
04480     07 6B 42 FC | 	wrbyte	local01, objptr
04484     07 83 C2 FA | 	rdbyte	local13, objptr
04488     09 0E 86 F1 | 	sub	objptr, #9
0448c     07 85 C2 FA | 	rdbyte	local14, objptr
04490     9A 0E 86 F1 | 	sub	objptr, #154
04494     42 83 5A F2 | 	cmps	local13, local14 wcz
04498                 | '           songPosition := 0
04498     A3 0E 06 31 |  if_ae	add	objptr, #163
0449c     07 01 48 3C |  if_ae	wrbyte	#0, objptr
044a0     A3 0E 86 31 |  if_ae	sub	objptr, #163
044a4                 | LR__0152
044a4                 | LR__0153
044a4                 | LR__0154
044a4                 | ' 
044a4                 | '     ' Handle "jump to song position" command, "B"
044a4                 | '     if cmdB_updatePosition
044a4     E8 0F 06 F1 | 	add	objptr, #488
044a8     07 6B CA FA | 	rdbyte	local01, objptr wz
044ac     E8 0F 86 F1 | 	sub	objptr, #488
044b0     28 00 90 AD |  if_e	jmp	#LR__0155
044b4                 | ' 
044b4                 | '       songPosition := cmdB_memoryZ
044b4     E7 0F 06 F1 | 	add	objptr, #487
044b8     07 6B C2 FA | 	rdbyte	local01, objptr
044bc     44 0F 86 F1 | 	sub	objptr, #324
044c0     07 6B 42 FC | 	wrbyte	local01, objptr
044c4                 | ' 
044c4                 | '       ifnot cmdD_updatePosition
044c4     43 0F 06 F1 | 	add	objptr, #323
044c8     07 6B CA FA | 	rdbyte	local01, objptr wz
044cc     E6 0F 86 F1 | 	sub	objptr, #486
044d0                 | '         patternRow := 0
044d0     A2 0E 06 A1 |  if_e	add	objptr, #162
044d4     07 01 48 AC |  if_e	wrbyte	#0, objptr
044d8     A2 0E 86 A1 |  if_e	sub	objptr, #162
044dc                 | LR__0155
044dc                 | ' 
044dc                 | '     ' We need to be sure that all positioning commands are reset for the next tick
044dc                 | '     cmdE6_updatePositionCommon := false
044dc     F5 0F 06 F1 | 	add	objptr, #501
044e0     07 01 48 FC | 	wrbyte	#0, objptr
044e4                 | '     cmdB_updatePosition := false
044e4     0D 0E 86 F1 | 	sub	objptr, #13
044e8     07 01 48 FC | 	wrbyte	#0, objptr
044ec                 | '     cmdD_updatePosition := false
044ec     02 0E 86 F1 | 	sub	objptr, #2
044f0     07 01 48 FC | 	wrbyte	#0, objptr
044f4                 | '     patternDelay := 0
044f4     41 0F 86 F1 | 	sub	objptr, #321
044f8     07 01 48 FC | 	wrbyte	#0, objptr
044fc     A5 0E 86 F1 | 	sub	objptr, #165
04500                 | LR__0156
04500                 | LR__0157
04500     AF F0 03 F6 | 	mov	ptra, fp
04504     BF 00 A0 FD | 	call	#popregs_
04508                 | _trackerplayer_spin2_tick_ret
04508     2D 00 64 FD | 	ret
0450c                 | 
0450c                 | ' 
0450c                 | ' 
0450c                 | ' PRI amigaPeriodToNote(period, fTune) : r | i
0450c                 | _trackerplayer_spin2_amigaPeriodToNote
0450c                 | ' 
0450c                 | '   repeat i from 0 to LAST_POS_IN_PERIOD_TBL
0450c     00 30 06 F6 | 	mov	_var01, #0
04510     38 BB 9F FE | 	loc	pa,	#(@LR__0159-@LR__0158)
04514     93 00 A0 FD | 	call	#FCACHE_LOAD_
04518                 | LR__0158
04518                 | '     if (word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][i]) <= period
04518     06 00 00 FF 
0451c     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
04520     14 33 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
04524     2F 35 02 F6 | 	mov	_var03, arg02
04528     03 34 66 F0 | 	shl	_var03, #3
0452c     2F 35 02 F1 | 	add	_var03, arg02
04530     03 34 66 F0 | 	shl	_var03, #3
04534     1A 33 02 F1 | 	add	_var02, _var03
04538     18 37 02 F6 | 	mov	_var04, _var01
0453c     01 36 66 F0 | 	shl	_var04, #1
04540     19 37 02 F1 | 	add	_var04, _var02
04544     1B 39 E2 FA | 	rdword	_var05, _var04
04548     2E 39 5A F2 | 	cmps	_var05, arg01 wcz
0454c                 | '       quit
0454c     06 00 00 FF 
04550     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
04554     0C 00 90 ED |  if_be	jmp	#LR__0160
04558     01 30 06 F1 | 	add	_var01, #1
0455c     24 30 5E F2 | 	cmps	_var01, #36 wcz
04560     B4 FF 9F CD |  if_b	jmp	#LR__0158
04564                 | LR__0159
04564                 | LR__0160
04564                 | ' 
04564                 | '   return i
04564     18 2B 02 F6 | 	mov	result1, _var01
04568                 | _trackerplayer_spin2_amigaPeriodToNote_ret
04568     2D 00 64 FD | 	ret
0456c                 | 
0456c                 | ' 
0456c                 | ' 
0456c                 | ' PRI retunePeriod(period, fTune) | noteNumber
0456c                 | _trackerplayer_spin2_retunePeriod
0456c     06 5A 05 F6 | 	mov	COUNT_, #6
04570     B0 00 A0 FD | 	call	#pushregs_
04574     2E 6B 02 F6 | 	mov	local01, arg01
04578     2F 6D 02 F6 | 	mov	local02, arg02
0457c                 | ' 
0457c                 | '   if period > 0 and fTune < 16
0457c     00 6A 5E F2 | 	cmps	local01, #0 wcz
04580     50 00 90 ED |  if_be	jmp	#LR__0161
04584     10 6C 5E F2 | 	cmps	local02, #16 wcz
04588     48 00 90 3D |  if_ae	jmp	#LR__0161
0458c                 | '     noteNumber := amigaPeriodToNote(word[period], 0)
0458c     35 5D E2 FA | 	rdword	arg01, local01
04590     00 5E 06 F6 | 	mov	arg02, #0
04594     74 FF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
04598     15 6F 02 F6 | 	mov	local03, result1
0459c     06 00 00 FF 
045a0     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
045a4     14 71 02 F6 | 	mov	local04, ptr__trackerplayer_spin2_dat__
045a8     36 73 02 F6 | 	mov	local05, local02
045ac     03 72 66 F0 | 	shl	local05, #3
045b0     36 73 02 F1 | 	add	local05, local02
045b4     03 72 66 F0 | 	shl	local05, #3
045b8     39 71 02 F1 | 	add	local04, local05
045bc     01 6E 66 F0 | 	shl	local03, #1
045c0     38 6F 02 F1 | 	add	local03, local04
045c4                 | '     word[period] := word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][noteNumber]
045c4     37 75 E2 FA | 	rdword	local06, local03
045c8     35 75 52 FC | 	wrword	local06, local01
045cc     06 00 00 FF 
045d0     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
045d4                 | LR__0161
045d4     AF F0 03 F6 | 	mov	ptra, fp
045d8     BF 00 A0 FD | 	call	#popregs_
045dc                 | _trackerplayer_spin2_retunePeriod_ret
045dc     2D 00 64 FD | 	ret
045e0                 | 
045e0                 | ' 
045e0                 | ' 
045e0                 | ' pub getSampleInfo(sampleNumber, samplePtr, sampleLength, fTune, volume, repeatPoint, repeatLength) | sampleInfoPtr
045e0                 | _trackerplayer_spin2_getSampleInfo
045e0     2E 31 0A F6 | 	mov	_var01, arg01 wz
045e4                 | ' 
045e4                 | '   if sampleNumber == 0 or sampleNumber > LAST_SAMPLE_NUMBER ' Can't go beyond sample 31
045e4     08 00 90 AD |  if_e	jmp	#LR__0162
045e8     1F 30 5E F2 | 	cmps	_var01, #31 wcz
045ec     08 00 90 ED |  if_be	jmp	#LR__0163
045f0                 | LR__0162
045f0                 | '     long[samplePtr] := 0
045f0     2F 01 68 FC | 	wrlong	#0, arg02
045f4                 | '     return
045f4     E0 00 90 FD | 	jmp	#_trackerplayer_spin2_getSampleInfo_ret
045f8                 | LR__0163
045f8                 | ' 
045f8                 | '   sampleNumber--
045f8     01 30 86 F1 | 	sub	_var01, #1
045fc     18 33 02 F6 | 	mov	_var02, _var01
04600     04 32 66 F0 | 	shl	_var02, #4
04604     18 33 82 F1 | 	sub	_var02, _var01
04608     01 32 66 F0 | 	shl	_var02, #1
0460c     0A 0E 06 F1 | 	add	objptr, #10
04610     07 35 02 FB | 	rdlong	_var03, objptr
04614     19 35 02 F1 | 	add	_var03, _var02
04618                 | '   sampleInfoPtr      := samplesInfoLut + (sampleNumber * 30)
04618     1A 37 02 F6 | 	mov	_var04, _var03
0461c     16 36 06 F1 | 	add	_var04, #22
04620     1B 39 C2 FA | 	rdbyte	_var05, _var04
04624     08 38 66 F0 | 	shl	_var05, #8
04628     1A 3B 02 F6 | 	mov	_var06, _var03
0462c     17 3A 06 F1 | 	add	_var06, #23
04630     1D 3D C2 FA | 	rdbyte	_var07, _var06
04634     1E 39 42 F5 | 	or	_var05, _var07
04638     01 38 66 F0 | 	shl	_var05, #1
0463c                 | '   long[sampleLength] := ((byte[sampleInfoPtr + 22] << 8) | byte[sampleInfoPtr + 23]) << 1
0463c     30 39 62 FC | 	wrlong	_var05, arg03
04640     1A 3F 02 F6 | 	mov	_var08, _var03
04644     18 3E 06 F1 | 	add	_var08, #24
04648                 | '   long[fTune]        :=   byte[sampleInfoPtr + 24]
04648     1F 41 C2 FA | 	rdbyte	_var09, _var08
0464c     31 41 62 FC | 	wrlong	_var09, arg04
04650     1A 43 02 F6 | 	mov	_var10, _var03
04654     19 42 06 F1 | 	add	_var10, #25
04658                 | '   long[volume]       :=   byte[sampleInfoPtr + 25]
04658     21 41 C2 FA | 	rdbyte	_var09, _var10
0465c     32 41 62 FC | 	wrlong	_var09, arg05
04660     1A 45 02 F6 | 	mov	_var11, _var03
04664     1A 44 06 F1 | 	add	_var11, #26
04668     22 47 C2 FA | 	rdbyte	_var12, _var11
0466c     08 46 66 F0 | 	shl	_var12, #8
04670     1A 49 02 F6 | 	mov	_var13, _var03
04674     1B 48 06 F1 | 	add	_var13, #27
04678     24 3D C2 FA | 	rdbyte	_var07, _var13
0467c     1E 47 42 F5 | 	or	_var12, _var07
04680     01 46 66 F0 | 	shl	_var12, #1
04684                 | '   long[repeatPoint]  := ((byte[sampleInfoPtr + 26] << 8) | byte[sampleInfoPtr + 27]) << 1
04684     33 47 62 FC | 	wrlong	_var12, arg06
04688     1A 4B 02 F6 | 	mov	_var14, _var03
0468c     1C 4A 06 F1 | 	add	_var14, #28
04690     25 4D C2 FA | 	rdbyte	_var15, _var14
04694     08 4C 66 F0 | 	shl	_var15, #8
04698     1D 34 06 F1 | 	add	_var03, #29
0469c     1A 3D C2 FA | 	rdbyte	_var07, _var03
046a0     1E 4D 42 F5 | 	or	_var15, _var07
046a4     01 4C 66 F0 | 	shl	_var15, #1
046a8                 | '   long[repeatLength] := ((byte[sampleInfoPtr + 28] << 8) | byte[sampleInfoPtr + 29]) << 1
046a8     34 4D 62 FC | 	wrlong	_var15, arg07
046ac     02 30 66 F0 | 	shl	_var01, #2
046b0     08 0E 06 F1 | 	add	objptr, #8
046b4     07 31 02 F1 | 	add	_var01, objptr
046b8                 | '   long[samplePtr]    := samplesPtrLut[sampleNumber]
046b8     18 41 02 FB | 	rdlong	_var09, _var01
046bc     2F 41 62 FC | 	wrlong	_var09, arg02
046c0                 | ' 
046c0                 | '   if long[repeatLength] == 2 && long[repeatPoint] == 0
046c0     34 41 02 FB | 	rdlong	_var09, arg07
046c4     02 40 0E F2 | 	cmp	_var09, #2 wz
046c8     12 0E 86 F1 | 	sub	objptr, #18
046cc     08 00 90 5D |  if_ne	jmp	#LR__0164
046d0     33 3D 0A FB | 	rdlong	_var07, arg06 wz
046d4                 | '     long[repeatLength] := 1
046d4     34 03 68 AC |  if_e	wrlong	#1, arg07
046d8                 | LR__0164
046d8                 | _trackerplayer_spin2_getSampleInfo_ret
046d8     2D 00 64 FD | 	ret
046dc                 | 
046dc                 | ' 
046dc                 | ' 
046dc                 | ' PRI triggerNote(channel)
046dc                 | _trackerplayer_spin2_triggerNote
046dc     2E 31 02 F6 | 	mov	_var01, arg01
046e0     02 30 66 F0 | 	shl	_var01, #2
046e4     47 0F 06 F1 | 	add	objptr, #327
046e8     07 31 02 F1 | 	add	_var01, objptr
046ec     2E 33 02 F6 | 	mov	_var02, arg01
046f0     90 0E 86 F1 | 	sub	objptr, #144
046f4                 | ' 
046f4                 | '   currSampleNr[channel]     := lastSetSampleNr[channel]
046f4     18 35 02 FB | 	rdlong	_var03, _var01
046f8     07 33 02 F1 | 	add	_var02, objptr
046fc     19 35 42 FC | 	wrbyte	_var03, _var02
04700     2E 37 02 F6 | 	mov	_var04, arg01
04704     02 36 66 F0 | 	shl	_var04, #2
04708     80 0E 06 F1 | 	add	objptr, #128
0470c     07 37 02 F1 | 	add	_var04, objptr
04710     2E 39 02 F6 | 	mov	_var05, arg01
04714     02 38 66 F0 | 	shl	_var05, #2
04718     90 0E 86 F1 | 	sub	objptr, #144
0471c                 | '   currSamplePtr[channel]    := lastSetSamplePtr[channel]              ' This triggers the actual sample playback
0471c     1B 35 02 FB | 	rdlong	_var03, _var04
04720     07 39 02 F1 | 	add	_var05, objptr
04724     1C 35 62 FC | 	wrlong	_var03, _var05
04728     2E 3B 02 F6 | 	mov	_var06, arg01
0472c     02 3A 66 F0 | 	shl	_var06, #2
04730     80 0E 06 F1 | 	add	objptr, #128
04734     07 3B 02 F1 | 	add	_var06, objptr
04738     2E 3D 02 F6 | 	mov	_var07, arg01
0473c     02 3C 66 F0 | 	shl	_var07, #2
04740     48 0E 86 F1 | 	sub	objptr, #72
04744                 | '   currPeriod[channel]       := lastSetPeriod[channel]
04744     1D 35 02 FB | 	rdlong	_var03, _var06
04748     07 3D 02 F1 | 	add	_var07, objptr
0474c     1E 35 62 FC | 	wrlong	_var03, _var07
04750     2E 3F 02 F6 | 	mov	_var08, arg01
04754     02 3E 66 F0 | 	shl	_var08, #2
04758     78 0E 06 F1 | 	add	objptr, #120
0475c     07 3F 02 F1 | 	add	_var08, objptr
04760     2E 41 02 F6 | 	mov	_var09, arg01
04764     01 40 66 F0 | 	shl	_var09, #1
04768     9C 0E 86 F1 | 	sub	objptr, #156
0476c                 | '   currSampleLength[channel] := lastSetSampleLength[channel]
0476c     1F 35 02 FB | 	rdlong	_var03, _var08
04770     07 41 02 F1 | 	add	_var09, objptr
04774     20 35 52 FC | 	wrword	_var03, _var09
04778     2E 43 02 F6 | 	mov	_var10, arg01
0477c     02 42 66 F0 | 	shl	_var10, #2
04780     AC 0E 06 F1 | 	add	objptr, #172
04784     07 43 02 F1 | 	add	_var10, objptr
04788     2E 45 02 F6 | 	mov	_var11, arg01
0478c     02 44 66 F0 | 	shl	_var11, #2
04790     A4 0E 86 F1 | 	sub	objptr, #164
04794                 | '   currRepeatLength[channel] := lastSetRepeatLength[channel]
04794     21 35 02 FB | 	rdlong	_var03, _var10
04798     07 45 02 F1 | 	add	_var11, objptr
0479c     22 35 62 FC | 	wrlong	_var03, _var11
047a0     2E 47 02 F6 | 	mov	_var12, arg01
047a4     02 46 66 F0 | 	shl	_var12, #2
047a8     B4 0E 06 F1 | 	add	objptr, #180
047ac     07 47 02 F1 | 	add	_var12, objptr
047b0     2E 49 02 F6 | 	mov	_var13, arg01
047b4     01 48 66 F0 | 	shl	_var13, #1
047b8     A0 0E 86 F1 | 	sub	objptr, #160
047bc                 | '   currRepeatPoint[channel]  := lastSetRepeatPoint[channel]
047bc     23 35 02 FB | 	rdlong	_var03, _var12
047c0     07 49 02 F1 | 	add	_var13, objptr
047c4     24 35 52 FC | 	wrword	_var03, _var13
047c8     1F 0F 06 F1 | 	add	objptr, #287
047cc     07 5D 02 F1 | 	add	arg01, objptr
047d0     2E 4B C2 FA | 	rdbyte	_var14, arg01
047d4     01 4A 06 F1 | 	add	_var14, #1
047d8                 | '   trigger[channel]+=1                                                 ' @pik33 _ I have to know when the note is started
047d8     2E 4B 42 FC | 	wrbyte	_var14, arg01
047dc     F6 0F 86 F1 | 	sub	objptr, #502
047e0                 | _trackerplayer_spin2_triggerNote_ret
047e0     2D 00 64 FD | 	ret
047e4                 | 
047e4                 | ' 
047e4                 | ' PRI processChannel(channel, sampleNumber, period, effect) | sampleLength, volume, repeatPoint, repeatLength, samplePtr
047e4                 | _trackerplayer_spin2_processChannel
047e4     31 5A 05 F6 | 	mov	COUNT_, #49
047e8     B0 00 A0 FD | 	call	#pushregs_
047ec     D0 F0 07 F1 | 	add	ptra, #208
047f0     AF 5C 62 FC | 	wrlong	arg01, fp
047f4     04 5E 05 F1 | 	add	fp, #4
047f8     AF 5E 62 FC | 	wrlong	arg02, fp
047fc     04 5E 05 F1 | 	add	fp, #4
04800     AF 60 62 FC | 	wrlong	arg03, fp
04804     04 5E 05 F1 | 	add	fp, #4
04808     AF 62 62 FC | 	wrlong	arg04, fp
0480c     0C 5E 85 F1 | 	sub	fp, #12
04810                 | ' 
04810                 | '   channel := channel & 3
04810     AF 6A 02 FB | 	rdlong	local01, fp
04814     03 6A 06 F5 | 	and	local01, #3
04818     AF 6A 62 FC | 	wrlong	local01, fp
0481c     0C 5E 05 F1 | 	add	fp, #12
04820     AF 6C 02 FB | 	rdlong	local02, fp
04824     08 6C 46 F0 | 	shr	local02, #8
04828     36 6F 02 F6 | 	mov	local03, local02
0482c     0F 6E 06 F5 | 	and	local03, #15
04830                 | '   cmd     := (effect >> 8) & $F
04830     BA 0F 06 F1 | 	add	objptr, #442
04834     07 6F 42 FC | 	wrbyte	local03, objptr
04838     AF 70 02 FB | 	rdlong	local04, fp
0483c     04 70 46 F0 | 	shr	local04, #4
04840     38 73 02 F6 | 	mov	local05, local04
04844     0F 72 06 F5 | 	and	local05, #15
04848                 | '   x       := (effect >> 4) & $F
04848     03 0E 86 F1 | 	sub	objptr, #3
0484c     07 73 42 FC | 	wrbyte	local05, objptr
04850     AF 74 02 FB | 	rdlong	local06, fp
04854     0F 74 06 F5 | 	and	local06, #15
04858                 | '   y       := (effect     ) & $F
04858     01 0E 06 F1 | 	add	objptr, #1
0485c     07 75 42 FC | 	wrbyte	local06, objptr
04860     AF 76 02 FB | 	rdlong	local07, fp
04864     0C 5E 85 F1 | 	sub	fp, #12
04868     FF 76 06 F5 | 	and	local07, #255
0486c                 | '   z       := (effect     ) & $FF
0486c     01 0E 06 F1 | 	add	objptr, #1
04870     07 77 42 FC | 	wrbyte	local07, objptr
04874                 | ' 
04874                 | '   ' Handle everything that executes on "tick zero"
04874                 | '   if tickCounter == 0
04874     18 0F 86 F1 | 	sub	objptr, #280
04878     07 6B CA FA | 	rdbyte	local01, objptr wz
0487c     A1 0E 86 F1 | 	sub	objptr, #161
04880     F0 03 90 5D |  if_ne	jmp	#LR__0175
04884     AF 78 02 FB | 	rdlong	local08, fp
04888     02 78 66 F0 | 	shl	local08, #2
0488c     EF 0E 06 F1 | 	add	objptr, #239
04890     07 79 02 F1 | 	add	local08, objptr
04894                 | ' 
04894                 | '     ' These two variables are used for vibrato/tremolo/arpeggio effects and needs to be reset at "tick zero"
04894                 | '     deltaPeriod[channel] := 0
04894     3C 01 68 FC | 	wrlong	#0, local08
04898     AF 7A 02 FB | 	rdlong	local09, fp
0489c     02 7A 66 F0 | 	shl	local09, #2
048a0     20 0E 06 F1 | 	add	objptr, #32
048a4     07 7B 02 F1 | 	add	local09, objptr
048a8                 | '     deltaVolume[channel] := 0
048a8     3D 01 68 FC | 	wrlong	#0, local09
048ac                 | ' 
048ac                 | '     ' If the sample number is zero, the memory from "last set non zero sample number" is used
048ac                 | '     if sampleNumber > 0
048ac     04 5E 05 F1 | 	add	fp, #4
048b0     AF 6A 02 FB | 	rdlong	local01, fp
048b4     04 5E 85 F1 | 	sub	fp, #4
048b8     00 6A 5E F2 | 	cmps	local01, #0 wcz
048bc     0F 0F 86 F1 | 	sub	objptr, #271
048c0     20 00 90 ED |  if_be	jmp	#LR__0165
048c4     AF 7C 02 FB | 	rdlong	local10, fp
048c8     E0 0F 06 F1 | 	add	objptr, #480
048cc     07 7D 02 F1 | 	add	local10, objptr
048d0                 | '       sampleNumber_memory[channel] := sampleNumber
048d0     04 5E 05 F1 | 	add	fp, #4
048d4     AF 6A 02 FB | 	rdlong	local01, fp
048d8     04 5E 85 F1 | 	sub	fp, #4
048dc     3E 6B 42 FC | 	wrbyte	local01, local10
048e0     E0 0F 86 F1 | 	sub	objptr, #480
048e4                 | LR__0165
048e4     AF 7E 02 FB | 	rdlong	local11, fp
048e8     E0 0F 06 F1 | 	add	objptr, #480
048ec     07 7F 02 F1 | 	add	local11, objptr
048f0     20 5E 05 F1 | 	add	fp, #32
048f4     AF 80 02 F6 | 	mov	local12, fp
048f8     10 5E 85 F1 | 	sub	fp, #16
048fc     AF 82 02 F6 | 	mov	local13, fp
04900     31 0E 86 F1 | 	sub	objptr, #49
04904     07 85 02 F6 | 	mov	local14, objptr
04908     04 5E 05 F1 | 	add	fp, #4
0490c     AF 86 02 F6 | 	mov	local15, fp
04910     04 5E 05 F1 | 	add	fp, #4
04914     AF 88 02 F6 | 	mov	local16, fp
04918     04 5E 05 F1 | 	add	fp, #4
0491c     AF 8A 02 F6 | 	mov	local17, fp
04920                 | ' 
04920                 | '     ' Get data for the sample in use by the current channel (uses the memorized sample number)
04920                 | '     getSampleInfo(sampleNumber_memory[channel], @samplePtr, @sampleLength, @fineTune, @volume, @repeatPoint, @repeatLength)
04920     3F 5D C2 FA | 	rdbyte	arg01, local11
04924     42 63 02 F6 | 	mov	arg04, local14
04928     43 8D 02 F6 | 	mov	local18, local15
0492c     44 8F 02 F6 | 	mov	local19, local16
04930     45 91 02 F6 | 	mov	local20, local17
04934     40 5F 02 F6 | 	mov	arg02, local12
04938     41 61 02 F6 | 	mov	arg03, local13
0493c     46 65 02 F6 | 	mov	arg05, local18
04940     47 67 02 F6 | 	mov	arg06, local19
04944     48 69 02 F6 | 	mov	arg07, local20
04948     AF 0F 86 F1 | 	sub	objptr, #431
0494c     1C 5E 85 F1 | 	sub	fp, #28
04950     8C FC BF FD | 	call	#_trackerplayer_spin2_getSampleInfo
04954                 | ' 
04954                 | '     ' Only set volume according to the default sample configuration if the sample number is non zero,
04954                 | '     ' this allows for some tricks when used in combination with the sample number memory (commonly used in protracker modules)
04954                 | '     if sampleNumber > 0
04954     04 5E 05 F1 | 	add	fp, #4
04958     AF 6A 02 FB | 	rdlong	local01, fp
0495c     04 5E 85 F1 | 	sub	fp, #4
04960     00 6A 5E F2 | 	cmps	local01, #0 wcz
04964     24 00 90 ED |  if_be	jmp	#LR__0166
04968     AF 92 02 FB | 	rdlong	local21, fp
0496c     02 92 66 F0 | 	shl	local21, #2
04970     FF 0E 06 F1 | 	add	objptr, #255
04974     07 93 02 F1 | 	add	local21, objptr
04978                 | '       currVolume[channel] := volume
04978     14 5E 05 F1 | 	add	fp, #20
0497c     AF 6A 02 FB | 	rdlong	local01, fp
04980     14 5E 85 F1 | 	sub	fp, #20
04984     49 6B 62 FC | 	wrlong	local01, local21
04988     FF 0E 86 F1 | 	sub	objptr, #255
0498c                 | LR__0166
0498c                 | ' 
0498c                 | '     ' Handle all commands that executes on "zero tick"
0498c                 | '     sampleOffset := 0
0498c     B3 0F 06 F1 | 	add	objptr, #435
04990     07 01 68 FC | 	wrlong	#0, objptr
04994     B3 0F 86 F1 | 	sub	objptr, #435
04998                 | '     handleZeroTickCommands(channel)
04998     AF 5C 02 FB | 	rdlong	arg01, fp
0499c     60 03 B0 FD | 	call	#_trackerplayer_spin2_handleZeroTickCommands
049a0                 | ' 
049a0                 | '     ' Prepare sample data for triggering (now or later)
049a0                 | '     if period > 0
049a0     08 5E 05 F1 | 	add	fp, #8
049a4     AF 6A 02 FB | 	rdlong	local01, fp
049a8     08 5E 85 F1 | 	sub	fp, #8
049ac     00 6A 5E F2 | 	cmps	local01, #0 wcz
049b0     C8 02 90 ED |  if_be	jmp	#LR__0176
049b4     08 5E 05 F1 | 	add	fp, #8
049b8     AF 94 02 F6 | 	mov	local22, fp
049bc                 | ' 
049bc                 | '       retunePeriod(@period, fineTune)
049bc     AF 0F 06 F1 | 	add	objptr, #431
049c0     07 5F 02 FB | 	rdlong	arg02, objptr
049c4     AF 0F 86 F1 | 	sub	objptr, #431
049c8     4A 5D 02 F6 | 	mov	arg01, local22
049cc     08 5E 85 F1 | 	sub	fp, #8
049d0     98 FB BF FD | 	call	#_trackerplayer_spin2_retunePeriod
049d4     AF 96 02 FB | 	rdlong	local23, fp
049d8     D3 0E 06 F1 | 	add	objptr, #211
049dc     07 97 02 F1 | 	add	local23, objptr
049e0                 | '       currFineTune[channel]        := fineTune
049e0     DC 0E 06 F1 | 	add	objptr, #220
049e4     07 6B 02 FB | 	rdlong	local01, objptr
049e8     4B 6B 42 FC | 	wrbyte	local01, local23
049ec     AF 98 02 FB | 	rdlong	local24, fp
049f0     02 98 66 F0 | 	shl	local24, #2
049f4     88 0E 86 F1 | 	sub	objptr, #136
049f8     07 99 02 F1 | 	add	local24, objptr
049fc                 | '       lastSetPeriod[channel]       := period
049fc     08 5E 05 F1 | 	add	fp, #8
04a00     AF 6A 02 FB | 	rdlong	local01, fp
04a04     4C 6B 62 FC | 	wrlong	local01, local24
04a08     08 5E 85 F1 | 	sub	fp, #8
04a0c     AF 9A 02 FB | 	rdlong	local25, fp
04a10     02 9A 66 F0 | 	shl	local25, #2
04a14     40 0E 06 F1 | 	add	objptr, #64
04a18     07 9B 02 F1 | 	add	local25, objptr
04a1c                 | '       lastSetRepeatLength[channel] := repeatLength
04a1c     1C 5E 05 F1 | 	add	fp, #28
04a20     AF 6A 02 FB | 	rdlong	local01, fp
04a24     4D 6B 62 FC | 	wrlong	local01, local25
04a28     1C 5E 85 F1 | 	sub	fp, #28
04a2c     AF 9C 02 FB | 	rdlong	local26, fp
04a30     02 9C 66 F0 | 	shl	local26, #2
04a34     10 0E 06 F1 | 	add	objptr, #16
04a38     07 9D 02 F1 | 	add	local26, objptr
04a3c                 | '       lastSetRepeatPoint[channel]  := repeatPoint
04a3c     18 5E 05 F1 | 	add	fp, #24
04a40     AF 6A 02 FB | 	rdlong	local01, fp
04a44     4E 6B 62 FC | 	wrlong	local01, local26
04a48     08 5E 05 F1 | 	add	fp, #8
04a4c     AF 9E 02 FB | 	rdlong	local27, fp
04a50     20 5E 85 F1 | 	sub	fp, #32
04a54     3C 0E 06 F1 | 	add	objptr, #60
04a58     07 A1 02 FB | 	rdlong	local28, objptr
04a5c     50 9F 02 F1 | 	add	local27, local28
04a60     AF A2 02 FB | 	rdlong	local29, fp
04a64     02 A2 66 F0 | 	shl	local29, #2
04a68     7C 0E 86 F1 | 	sub	objptr, #124
04a6c     07 A3 02 F1 | 	add	local29, objptr
04a70                 | '       lastSetSamplePtr[channel]    := samplePtr + sampleOffset
04a70     51 9F 62 FC | 	wrlong	local27, local29
04a74     AF A4 02 FB | 	rdlong	local30, fp
04a78     02 A4 66 F0 | 	shl	local30, #2
04a7c     10 0E 06 F1 | 	add	objptr, #16
04a80     07 A5 02 F1 | 	add	local30, objptr
04a84                 | '       lastSetSampleNr[channel]     := sampleNumber
04a84     04 5E 05 F1 | 	add	fp, #4
04a88     AF 6A 02 FB | 	rdlong	local01, fp
04a8c     52 6B 62 FC | 	wrlong	local01, local30
04a90                 | ' 
04a90                 | '       ' This calculates the correct sample length in all situations
04a90                 | '       if repeatLength > 2
04a90     18 5E 05 F1 | 	add	fp, #24
04a94     AF 6A 02 FB | 	rdlong	local01, fp
04a98     1C 5E 85 F1 | 	sub	fp, #28
04a9c     02 6A 5E F2 | 	cmps	local01, #2 wcz
04aa0     47 0F 86 F1 | 	sub	objptr, #327
04aa4     20 00 90 ED |  if_be	jmp	#LR__0167
04aa8     18 5E 05 F1 | 	add	fp, #24
04aac     AF A6 02 FB | 	rdlong	local31, fp
04ab0     04 5E 05 F1 | 	add	fp, #4
04ab4     AF A0 02 FB | 	rdlong	local28, fp
04ab8     50 A7 02 F1 | 	add	local31, local28
04abc                 | '         sampleLength := repeatPoint + repeatLength
04abc     0C 5E 85 F1 | 	sub	fp, #12
04ac0     AF A6 62 FC | 	wrlong	local31, fp
04ac4     10 5E 85 F1 | 	sub	fp, #16
04ac8                 | LR__0167
04ac8                 | ' 
04ac8                 | '       if sampleLength - sampleOffset < 1
04ac8     10 5E 05 F1 | 	add	fp, #16
04acc     AF 6A 02 FB | 	rdlong	local01, fp
04ad0     10 5E 85 F1 | 	sub	fp, #16
04ad4     B3 0F 06 F1 | 	add	objptr, #435
04ad8     07 A1 02 FB | 	rdlong	local28, objptr
04adc     B3 0F 86 F1 | 	sub	objptr, #435
04ae0     50 6B 82 F1 | 	sub	local01, local28
04ae4     01 6A 5E F2 | 	cmps	local01, #1 wcz
04ae8     1C 00 90 3D |  if_ae	jmp	#LR__0168
04aec     AF A8 02 FB | 	rdlong	local32, fp
04af0     02 A8 66 F0 | 	shl	local32, #2
04af4     57 0F 06 F1 | 	add	objptr, #343
04af8     07 A9 02 F1 | 	add	local32, objptr
04afc                 | '         lastSetSampleLength[channel] := 1
04afc     54 03 68 FC | 	wrlong	#1, local32
04b00                 | '       else
04b00     57 0F 86 F1 | 	sub	objptr, #343
04b04     30 00 90 FD | 	jmp	#LR__0169
04b08                 | LR__0168
04b08     10 5E 05 F1 | 	add	fp, #16
04b0c     AF AA 02 FB | 	rdlong	local33, fp
04b10     10 5E 85 F1 | 	sub	fp, #16
04b14     B3 0F 06 F1 | 	add	objptr, #435
04b18     07 A1 02 FB | 	rdlong	local28, objptr
04b1c     50 AB 82 F1 | 	sub	local33, local28
04b20     AF AC 02 FB | 	rdlong	local34, fp
04b24     02 AC 66 F0 | 	shl	local34, #2
04b28     5C 0E 86 F1 | 	sub	objptr, #92
04b2c     07 AD 02 F1 | 	add	local34, objptr
04b30                 | '         lastSetSampleLength[channel] := sampleLength - sampleOffset
04b30     56 AB 62 FC | 	wrlong	local33, local34
04b34     57 0F 86 F1 | 	sub	objptr, #343
04b38                 | LR__0169
04b38                 | ' 
04b38                 | '       ' When the sample offset is more than the actual sample length, use the repeat data as sample ptr and length
04b38                 | '       if sampleOffset > sampleLength
04b38     B3 0F 06 F1 | 	add	objptr, #435
04b3c     07 6B 02 FB | 	rdlong	local01, objptr
04b40     B3 0F 86 F1 | 	sub	objptr, #435
04b44     10 5E 05 F1 | 	add	fp, #16
04b48     AF A0 02 FB | 	rdlong	local28, fp
04b4c     10 5E 85 F1 | 	sub	fp, #16
04b50     50 6B 5A F2 | 	cmps	local01, local28 wcz
04b54     50 00 90 ED |  if_be	jmp	#LR__0170
04b58     20 5E 05 F1 | 	add	fp, #32
04b5c     AF AE 02 FB | 	rdlong	local35, fp
04b60     08 5E 85 F1 | 	sub	fp, #8
04b64     AF A0 02 FB | 	rdlong	local28, fp
04b68     18 5E 85 F1 | 	sub	fp, #24
04b6c     50 AF 02 F1 | 	add	local35, local28
04b70     AF B0 02 FB | 	rdlong	local36, fp
04b74     02 B0 66 F0 | 	shl	local36, #2
04b78     37 0F 06 F1 | 	add	objptr, #311
04b7c     07 B1 02 F1 | 	add	local36, objptr
04b80                 | '         lastSetSamplePtr[channel] := samplePtr + repeatPoint
04b80     58 AF 62 FC | 	wrlong	local35, local36
04b84     AF B2 02 FB | 	rdlong	local37, fp
04b88     02 B2 66 F0 | 	shl	local37, #2
04b8c     20 0E 06 F1 | 	add	objptr, #32
04b90     07 B3 02 F1 | 	add	local37, objptr
04b94                 | '         lastSetSampleLength[channel] := repeatLength
04b94     1C 5E 05 F1 | 	add	fp, #28
04b98     AF 6A 02 FB | 	rdlong	local01, fp
04b9c     1C 5E 85 F1 | 	sub	fp, #28
04ba0     59 6B 62 FC | 	wrlong	local01, local37
04ba4     57 0F 86 F1 | 	sub	objptr, #343
04ba8                 | LR__0170
04ba8                 | ' 
04ba8                 | '       ' Trigger note/sample playback directly if no delay or portamento is active
04ba8                 | '       ifnot cmd == $3 || cmd == $5
04ba8     BA 0F 06 F1 | 	add	objptr, #442
04bac     07 6B C2 FA | 	rdbyte	local01, objptr
04bb0     BA 0F 86 F1 | 	sub	objptr, #442
04bb4     03 6A 0E F2 | 	cmp	local01, #3 wz
04bb8     54 00 90 AD |  if_e	jmp	#LR__0173
04bbc     BA 0F 06 F1 | 	add	objptr, #442
04bc0     07 B5 C2 FA | 	rdbyte	local38, objptr
04bc4     BA 0F 86 F1 | 	sub	objptr, #442
04bc8     5A A1 02 F6 | 	mov	local28, local38
04bcc     05 A0 0E F2 | 	cmp	local28, #5 wz
04bd0     3C 00 90 AD |  if_e	jmp	#LR__0173
04bd4                 | '         ifnot cmd == $E && x == $D
04bd4     BA 0F 06 F1 | 	add	objptr, #442
04bd8     07 B7 C2 FA | 	rdbyte	local39, objptr
04bdc     BA 0F 86 F1 | 	sub	objptr, #442
04be0     5B 6B 02 F6 | 	mov	local01, local39
04be4     0E 6A 0E F2 | 	cmp	local01, #14 wz
04be8     18 00 90 5D |  if_ne	jmp	#LR__0171
04bec     B7 0F 06 F1 | 	add	objptr, #439
04bf0     07 B5 C2 FA | 	rdbyte	local38, objptr
04bf4     B7 0F 86 F1 | 	sub	objptr, #439
04bf8     5A A1 02 F6 | 	mov	local28, local38
04bfc     0D A0 0E F2 | 	cmp	local28, #13 wz
04c00     0C 00 90 AD |  if_e	jmp	#LR__0172
04c04                 | LR__0171
04c04                 | '           triggerNote(channel)
04c04     AF 6A 02 FB | 	rdlong	local01, fp
04c08     35 5D 02 F6 | 	mov	arg01, local01
04c0c     CC FA BF FD | 	call	#_trackerplayer_spin2_triggerNote
04c10                 | LR__0172
04c10                 | LR__0173
04c10                 | ' 
04c10                 | '       ' If the "reset vibrato/tremolo function/s" is/are set, it/they get reset at "zero tick"
04c10                 | '       if resetTremolo[channel] > 0
04c10     AF 6A 02 FB | 	rdlong	local01, fp
04c14     8F 0F 06 F1 | 	add	objptr, #399
04c18     07 6B 02 F1 | 	add	local01, objptr
04c1c     35 A1 C2 FA | 	rdbyte	local28, local01
04c20     00 A0 5E F2 | 	cmps	local28, #0 wcz
04c24     8F 0F 86 F1 | 	sub	objptr, #399
04c28     14 00 90 ED |  if_be	jmp	#LR__0174
04c2c     AF B8 02 FB | 	rdlong	local40, fp
04c30     8B 0F 06 F1 | 	add	objptr, #395
04c34     07 B9 02 F1 | 	add	local40, objptr
04c38                 | '         tremoloPos[channel] := 0
04c38     5C 01 48 FC | 	wrbyte	#0, local40
04c3c     8B 0F 86 F1 | 	sub	objptr, #395
04c40                 | LR__0174
04c40                 | ' 
04c40                 | '       if resetVibrato[channel] > 0
04c40     AF 6A 02 FB | 	rdlong	local01, fp
04c44     93 0F 06 F1 | 	add	objptr, #403
04c48     07 6B 02 F1 | 	add	local01, objptr
04c4c     35 A1 C2 FA | 	rdbyte	local28, local01
04c50     00 A0 5E F2 | 	cmps	local28, #0 wcz
04c54     93 0F 86 F1 | 	sub	objptr, #403
04c58     20 00 90 ED |  if_be	jmp	#LR__0176
04c5c     AF BA 02 FB | 	rdlong	local41, fp
04c60     87 0F 06 F1 | 	add	objptr, #391
04c64     07 BB 02 F1 | 	add	local41, objptr
04c68                 | '         vibratoPos[channel] := 0
04c68     5D 01 48 FC | 	wrbyte	#0, local41
04c6c     87 0F 86 F1 | 	sub	objptr, #391
04c70                 | ' 
04c70                 | '   else
04c70     08 00 90 FD | 	jmp	#LR__0176
04c74                 | LR__0175
04c74                 | '     ' Handle commands that executes on all "non zero ticks"
04c74                 | '     handleNonZeroTickCommands(channel)
04c74     AF 5C 02 FB | 	rdlong	arg01, fp
04c78     E4 04 B0 FD | 	call	#_trackerplayer_spin2_handleNonZeroTickCommands
04c7c                 | LR__0176
04c7c                 | ' 
04c7c                 | '   ' Handle commands that executes on every tick
04c7c                 | '   handleEveryTickCommands(channel)
04c7c     AF 5C 02 FB | 	rdlong	arg01, fp
04c80     40 07 B0 FD | 	call	#_trackerplayer_spin2_handleEveryTickCommands
04c84     AF BC 02 FB | 	rdlong	local42, fp
04c88     02 BC 66 F0 | 	shl	local42, #2
04c8c     DF 0E 06 F1 | 	add	objptr, #223
04c90     07 BD 02 F1 | 	add	local42, objptr
04c94     5E BF 02 FB | 	rdlong	local43, local42
04c98     01 00 00 FF 
04c9c     58 BF 66 F3 | 	fles	local43, ##856
04ca0                 | ' 
04ca0                 | '   ' Handle boundaries that should be kept
04ca0                 | '   currPeriod[channel] <#= MAXIMUM_PERIOD
04ca0     5E BF 62 FC | 	wrlong	local43, local42
04ca4     AF C0 02 FB | 	rdlong	local44, fp
04ca8     02 C0 66 F0 | 	shl	local44, #2
04cac     07 C1 02 F1 | 	add	local44, objptr
04cb0     60 C3 02 FB | 	rdlong	local45, local44
04cb4     71 C2 46 F3 | 	fges	local45, #113
04cb8                 | '   currPeriod[channel] #>= MINIMUM_PERIOD
04cb8     60 C3 62 FC | 	wrlong	local45, local44
04cbc     AF C4 02 FB | 	rdlong	local46, fp
04cc0     02 C4 66 F0 | 	shl	local46, #2
04cc4     20 0E 06 F1 | 	add	objptr, #32
04cc8     07 C5 02 F1 | 	add	local46, objptr
04ccc     62 C7 02 FB | 	rdlong	local47, local46
04cd0     40 C6 66 F3 | 	fles	local47, #64
04cd4                 | '   currVolume[channel] <#= MAXIMUM_VOLUME
04cd4     62 C7 62 FC | 	wrlong	local47, local46
04cd8     AF C8 02 FB | 	rdlong	local48, fp
04cdc     02 C8 66 F0 | 	shl	local48, #2
04ce0     07 C9 02 F1 | 	add	local48, objptr
04ce4     64 CB 02 FB | 	rdlong	local49, local48
04ce8     00 CA 46 F3 | 	fges	local49, #0
04cec                 | '   currVolume[channel] #>= MINIMUM_VOLUME
04cec     64 CB 62 FC | 	wrlong	local49, local48
04cf0     FF 0E 86 F1 | 	sub	objptr, #255
04cf4     AF F0 03 F6 | 	mov	ptra, fp
04cf8     BF 00 A0 FD | 	call	#popregs_
04cfc                 | _trackerplayer_spin2_processChannel_ret
04cfc     2D 00 64 FD | 	ret
04d00                 | 
04d00                 | ' 
04d00                 | ' 
04d00                 | ' ' Handle all commands that executes on tick zero
04d00                 | ' '
04d00                 | ' PRI handleZeroTickCommands(channel)
04d00                 | _trackerplayer_spin2_handleZeroTickCommands
04d00     2E 31 02 F6 | 	mov	_var01, arg01
04d04                 | ' 
04d04                 | '   CASE_FAST cmd
04d04     BA 0F 06 F1 | 	add	objptr, #442
04d08     07 33 C2 FA | 	rdbyte	_var02, objptr
04d0c     BA 0F 86 F1 | 	sub	objptr, #442
04d10     19 35 02 F6 | 	mov	_var03, _var02
04d14     09 34 86 F1 | 	sub	_var03, #9
04d18     07 34 26 F3 | 	fle	_var03, #7
04d1c     1A 37 02 F6 | 	mov	_var04, _var03
04d20     30 36 62 FD | 	jmprel	_var04
04d24                 | LR__0177
04d24     1C 00 90 FD | 	jmp	#LR__0178
04d28     30 04 90 FD | 	jmp	#LR__0201
04d2c     64 00 90 FD | 	jmp	#LR__0180
04d30     84 00 90 FD | 	jmp	#LR__0181
04d34     A0 00 90 FD | 	jmp	#LR__0182
04d38     D0 00 90 FD | 	jmp	#LR__0183
04d3c     9C 03 90 FD | 	jmp	#LR__0198
04d40     18 04 90 FD | 	jmp	#LR__0201
04d44                 | LR__0178
04d44                 | ' 
04d44                 | '     $9:                          ' Set sample offset
04d44                 | '       if z > 0
04d44     B9 0F 06 F1 | 	add	objptr, #441
04d48     07 39 C2 FA | 	rdbyte	_var05, objptr
04d4c     B9 0F 86 F1 | 	sub	objptr, #441
04d50     00 38 5E F2 | 	cmps	_var05, #0 wcz
04d54     1C 00 90 ED |  if_be	jmp	#LR__0179
04d58                 | '         cmd9_memoryZ[channel] := z
04d58     18 39 02 F6 | 	mov	_var05, _var01
04d5c     DC 0F 06 F1 | 	add	objptr, #476
04d60     07 39 02 F1 | 	add	_var05, objptr
04d64     23 0E 86 F1 | 	sub	objptr, #35
04d68     07 3B C2 FA | 	rdbyte	_var06, objptr
04d6c     B9 0F 86 F1 | 	sub	objptr, #441
04d70     1C 3B 42 FC | 	wrbyte	_var06, _var05
04d74                 | LR__0179
04d74                 | ' 
04d74                 | '       sampleOffset := cmd9_memoryZ[channel] << 8
04d74     DC 0F 06 F1 | 	add	objptr, #476
04d78     07 31 02 F1 | 	add	_var01, objptr
04d7c     18 39 C2 FA | 	rdbyte	_var05, _var01
04d80     08 38 66 F0 | 	shl	_var05, #8
04d84     29 0E 86 F1 | 	sub	objptr, #41
04d88     07 39 62 FC | 	wrlong	_var05, objptr
04d8c     B3 0F 86 F1 | 	sub	objptr, #435
04d90     C8 03 90 FD | 	jmp	#LR__0201
04d94                 | LR__0180
04d94                 | ' 
04d94                 | '     $B:                          ' Jump position
04d94                 | '       cmdB_memoryZ := z
04d94     B9 0F 06 F1 | 	add	objptr, #441
04d98     07 39 C2 FA | 	rdbyte	_var05, objptr
04d9c     2E 0E 06 F1 | 	add	objptr, #46
04da0     07 39 42 FC | 	wrbyte	_var05, objptr
04da4                 | '       cmdB_updatePosition := true
04da4     01 0E 06 F1 | 	add	objptr, #1
04da8     FF FF FF FF 
04dac     07 FF 4B FC | 	wrbyte	##-1, objptr
04db0     E8 0F 86 F1 | 	sub	objptr, #488
04db4     A4 03 90 FD | 	jmp	#LR__0201
04db8                 | LR__0181
04db8                 | ' 
04db8                 | '     $C:                          ' Set volume
04db8                 | '       currVolume[channel] := z
04db8     02 30 66 F0 | 	shl	_var01, #2
04dbc     FF 0E 06 F1 | 	add	objptr, #255
04dc0     07 31 02 F1 | 	add	_var01, objptr
04dc4     BA 0E 06 F1 | 	add	objptr, #186
04dc8     07 3B C2 FA | 	rdbyte	_var06, objptr
04dcc     B9 0F 86 F1 | 	sub	objptr, #441
04dd0     18 3B 62 FC | 	wrlong	_var06, _var01
04dd4     84 03 90 FD | 	jmp	#LR__0201
04dd8                 | LR__0182
04dd8                 | ' 
04dd8                 | '     $D:                          ' Pattern break
04dd8                 | '       cmdD_memoryX := x
04dd8     B7 0F 06 F1 | 	add	objptr, #439
04ddc     07 39 C2 FA | 	rdbyte	_var05, objptr
04de0     2D 0E 06 F1 | 	add	objptr, #45
04de4     07 39 42 FC | 	wrbyte	_var05, objptr
04de8                 | '       cmdD_memoryY := y
04de8     2C 0E 86 F1 | 	sub	objptr, #44
04dec     07 39 C2 FA | 	rdbyte	_var05, objptr
04df0     2D 0E 06 F1 | 	add	objptr, #45
04df4     07 39 42 FC | 	wrbyte	_var05, objptr
04df8                 | '       cmdD_updatePosition := true
04df8     01 0E 06 F1 | 	add	objptr, #1
04dfc     FF FF FF FF 
04e00     07 FF 4B FC | 	wrbyte	##-1, objptr
04e04     E6 0F 86 F1 | 	sub	objptr, #486
04e08     50 03 90 FD | 	jmp	#LR__0201
04e0c                 | LR__0183
04e0c                 | ' 
04e0c                 | '     $E:                          ' Handle "E commands" that execute on tick zero
04e0c                 | ' 
04e0c                 | '       CASE_FAST x
04e0c     B7 0F 06 F1 | 	add	objptr, #439
04e10     07 3D C2 FA | 	rdbyte	_var07, objptr
04e14     B7 0F 86 F1 | 	sub	objptr, #439
04e18     1E 39 02 F6 | 	mov	_var05, _var07
04e1c     0F 38 26 F3 | 	fle	_var05, #15
04e20     1C 3F 02 F6 | 	mov	_var08, _var05
04e24     30 3E 62 FD | 	jmprel	_var08
04e28                 | LR__0184
04e28     3C 00 90 FD | 	jmp	#LR__0185
04e2c     58 00 90 FD | 	jmp	#LR__0186
04e30     8C 00 90 FD | 	jmp	#LR__0187
04e34     C0 00 90 FD | 	jmp	#LR__0188
04e38     DC 00 90 FD | 	jmp	#LR__0189
04e3c     14 01 90 FD | 	jmp	#LR__0190
04e40     28 01 90 FD | 	jmp	#LR__0191
04e44     C0 01 90 FD | 	jmp	#LR__0194
04e48     10 03 90 FD | 	jmp	#LR__0201
04e4c     0C 03 90 FD | 	jmp	#LR__0201
04e50     F0 01 90 FD | 	jmp	#LR__0195
04e54     24 02 90 FD | 	jmp	#LR__0196
04e58     00 03 90 FD | 	jmp	#LR__0201
04e5c     FC 02 90 FD | 	jmp	#LR__0201
04e60     50 02 90 FD | 	jmp	#LR__0197
04e64     F4 02 90 FD | 	jmp	#LR__0201
04e68                 | LR__0185
04e68                 | ' 
04e68                 | '         $0: lpFilter := (!y) & 1                 ' Set lowpass filter On/Off
04e68     B8 0F 06 F1 | 	add	objptr, #440
04e6c     07 3B C2 FA | 	rdbyte	_var06, objptr
04e70     1D 3B 22 F6 | 	not	_var06, _var06
04e74     01 3A 06 F5 | 	and	_var06, #1
04e78     03 0E 06 F1 | 	add	objptr, #3
04e7c     07 3B 42 FC | 	wrbyte	_var06, objptr
04e80     BB 0F 86 F1 | 	sub	objptr, #443
04e84     D4 02 90 FD | 	jmp	#LR__0201
04e88                 | LR__0186
04e88                 | ' 
04e88                 | '         $1: currPeriod[channel] -= y             ' Fine frequency slide up
04e88     18 41 02 F6 | 	mov	_var09, _var01
04e8c     02 40 66 F0 | 	shl	_var09, #2
04e90     DF 0E 06 F1 | 	add	objptr, #223
04e94     07 41 02 F1 | 	add	_var09, objptr
04e98     20 3B 02 FB | 	rdlong	_var06, _var09
04e9c     D9 0E 06 F1 | 	add	objptr, #217
04ea0     07 43 C2 FA | 	rdbyte	_var10, objptr
04ea4     21 3B 82 F1 | 	sub	_var06, _var10
04ea8     02 30 66 F0 | 	shl	_var01, #2
04eac     D9 0E 86 F1 | 	sub	objptr, #217
04eb0     07 31 02 F1 | 	add	_var01, objptr
04eb4     18 3B 62 FC | 	wrlong	_var06, _var01
04eb8     DF 0E 86 F1 | 	sub	objptr, #223
04ebc     9C 02 90 FD | 	jmp	#LR__0201
04ec0                 | LR__0187
04ec0                 | ' 
04ec0                 | '         $2: currPeriod[channel] += y             ' Fine frequency slide down
04ec0     18 41 02 F6 | 	mov	_var09, _var01
04ec4     02 40 66 F0 | 	shl	_var09, #2
04ec8     DF 0E 06 F1 | 	add	objptr, #223
04ecc     07 41 02 F1 | 	add	_var09, objptr
04ed0     20 3B 02 FB | 	rdlong	_var06, _var09
04ed4     D9 0E 06 F1 | 	add	objptr, #217
04ed8     07 43 C2 FA | 	rdbyte	_var10, objptr
04edc     21 3B 02 F1 | 	add	_var06, _var10
04ee0     02 30 66 F0 | 	shl	_var01, #2
04ee4     D9 0E 86 F1 | 	sub	objptr, #217
04ee8     07 31 02 F1 | 	add	_var01, objptr
04eec     18 3B 62 FC | 	wrlong	_var06, _var01
04ef0     DF 0E 86 F1 | 	sub	objptr, #223
04ef4     64 02 90 FD | 	jmp	#LR__0201
04ef8                 | LR__0188
04ef8                 | ' 
04ef8                 | '         $3: portaGlissando[channel] := y & 1     ' Set portamento glissando On/Off
04ef8     B8 0F 06 F1 | 	add	objptr, #440
04efc     07 3B C2 FA | 	rdbyte	_var06, objptr
04f00     01 3A 06 F5 | 	and	_var06, #1
04f04     04 0E 06 F1 | 	add	objptr, #4
04f08     07 31 02 F1 | 	add	_var01, objptr
04f0c     18 3B 42 FC | 	wrbyte	_var06, _var01
04f10     BC 0F 86 F1 | 	sub	objptr, #444
04f14     44 02 90 FD | 	jmp	#LR__0201
04f18                 | LR__0189
04f18                 | ' 
04f18                 | '         $4:                                      ' Set vibrato waveform type
04f18                 | '           vibratoType[channel]  := y & 3
04f18     B8 0F 06 F1 | 	add	objptr, #440
04f1c     07 3B C2 FA | 	rdbyte	_var06, objptr
04f20     03 3A 06 F5 | 	and	_var06, #3
04f24     18 45 02 F6 | 	mov	_var11, _var01
04f28     08 0E 06 F1 | 	add	objptr, #8
04f2c     07 45 02 F1 | 	add	_var11, objptr
04f30     22 3B 42 FC | 	wrbyte	_var06, _var11
04f34                 | '           resetVibrato[channel] := y & 4
04f34     08 0E 86 F1 | 	sub	objptr, #8
04f38     07 3B C2 FA | 	rdbyte	_var06, objptr
04f3c     04 3A 06 F5 | 	and	_var06, #4
04f40     25 0E 86 F1 | 	sub	objptr, #37
04f44     07 31 02 F1 | 	add	_var01, objptr
04f48     18 3B 42 FC | 	wrbyte	_var06, _var01
04f4c     93 0F 86 F1 | 	sub	objptr, #403
04f50     08 02 90 FD | 	jmp	#LR__0201
04f54                 | LR__0190
04f54                 | ' 
04f54                 | '         $5: fineTune := y                        ' Set finetune
04f54     B8 0F 06 F1 | 	add	objptr, #440
04f58     07 3B C2 FA | 	rdbyte	_var06, objptr
04f5c     09 0E 86 F1 | 	sub	objptr, #9
04f60     07 3B 62 FC | 	wrlong	_var06, objptr
04f64     AF 0F 86 F1 | 	sub	objptr, #431
04f68     F0 01 90 FD | 	jmp	#LR__0201
04f6c                 | LR__0191
04f6c                 | ' 
04f6c                 | '         $6:                                      ' Pattern looping
04f6c                 | '           if y == 0
04f6c     B8 0F 06 F1 | 	add	objptr, #440
04f70     07 3B CA FA | 	rdbyte	_var06, objptr wz
04f74     B8 0F 86 F1 | 	sub	objptr, #440
04f78     1C 00 90 5D |  if_ne	jmp	#LR__0192
04f7c                 | '             cmdE6_memory[channel] := patternRow
04f7c     E9 0F 06 F1 | 	add	objptr, #489
04f80     07 31 02 F1 | 	add	_var01, objptr
04f84     47 0F 86 F1 | 	sub	objptr, #327
04f88     07 45 C2 FA | 	rdbyte	_var11, objptr
04f8c     A2 0E 86 F1 | 	sub	objptr, #162
04f90     18 45 42 FC | 	wrbyte	_var11, _var01
04f94                 | '           else
04f94     C4 01 90 FD | 	jmp	#LR__0201
04f98                 | LR__0192
04f98                 | '             if ++cmdE6_counter[channel] <= y
04f98     18 41 02 F6 | 	mov	_var09, _var01
04f9c     ED 0F 06 F1 | 	add	objptr, #493
04fa0     07 41 02 F1 | 	add	_var09, objptr
04fa4     20 3B C2 FA | 	rdbyte	_var06, _var09
04fa8     01 3A 06 F1 | 	add	_var06, #1
04fac     18 43 02 F6 | 	mov	_var10, _var01
04fb0     07 43 02 F1 | 	add	_var10, objptr
04fb4     21 3B 42 FC | 	wrbyte	_var06, _var10
04fb8     21 47 C2 FA | 	rdbyte	_var12, _var10
04fbc     35 0E 86 F1 | 	sub	objptr, #53
04fc0     07 49 C2 FA | 	rdbyte	_var13, objptr
04fc4     B8 0F 86 F1 | 	sub	objptr, #440
04fc8     24 47 5A F2 | 	cmps	_var12, _var13 wcz
04fcc     24 00 90 1D |  if_a	jmp	#LR__0193
04fd0                 | '               cmdE6_updatePosition[channel] := true
04fd0     F1 0F 06 F1 | 	add	objptr, #497
04fd4     07 31 02 F1 | 	add	_var01, objptr
04fd8     FF FF FF FF 
04fdc     18 FF 4B FC | 	wrbyte	##-1, _var01
04fe0                 | '               cmdE6_updatePositionCommon    := true
04fe0     04 0E 06 F1 | 	add	objptr, #4
04fe4     FF FF FF FF 
04fe8     07 FF 4B FC | 	wrbyte	##-1, objptr
04fec     F5 0F 86 F1 | 	sub	objptr, #501
04ff0                 | '             else
04ff0     68 01 90 FD | 	jmp	#LR__0201
04ff4                 | LR__0193
04ff4                 | '               cmdE6_counter[channel] := 0
04ff4     ED 0F 06 F1 | 	add	objptr, #493
04ff8     07 31 02 F1 | 	add	_var01, objptr
04ffc     18 01 48 FC | 	wrbyte	#0, _var01
05000     ED 0F 86 F1 | 	sub	objptr, #493
05004     54 01 90 FD | 	jmp	#LR__0201
05008                 | LR__0194
05008                 | ' 
05008                 | '         $7:                                      ' Set tremolo waveform type
05008                 | '           tremoloType[channel] := y & 3
05008     B8 0F 06 F1 | 	add	objptr, #440
0500c     07 3B C2 FA | 	rdbyte	_var06, objptr
05010     03 3A 06 F5 | 	and	_var06, #3
05014     18 45 02 F6 | 	mov	_var11, _var01
05018     0C 0E 06 F1 | 	add	objptr, #12
0501c     07 45 02 F1 | 	add	_var11, objptr
05020     22 3B 42 FC | 	wrbyte	_var06, _var11
05024                 | '           resetTremolo[channel] := y & 4
05024     0C 0E 86 F1 | 	sub	objptr, #12
05028     07 3B C2 FA | 	rdbyte	_var06, objptr
0502c     04 3A 06 F5 | 	and	_var06, #4
05030     29 0E 86 F1 | 	sub	objptr, #41
05034     07 31 02 F1 | 	add	_var01, objptr
05038     18 3B 42 FC | 	wrbyte	_var06, _var01
0503c     8F 0F 86 F1 | 	sub	objptr, #399
05040     18 01 90 FD | 	jmp	#LR__0201
05044                 | LR__0195
05044                 | ' 
05044                 | '         $A: currVolume[channel] += y             ' Fine volume slide up
05044     18 41 02 F6 | 	mov	_var09, _var01
05048     02 40 66 F0 | 	shl	_var09, #2
0504c     FF 0E 06 F1 | 	add	objptr, #255
05050     07 41 02 F1 | 	add	_var09, objptr
05054     20 3B 02 FB | 	rdlong	_var06, _var09
05058     B9 0E 06 F1 | 	add	objptr, #185
0505c     07 43 C2 FA | 	rdbyte	_var10, objptr
05060     21 3B 02 F1 | 	add	_var06, _var10
05064     02 30 66 F0 | 	shl	_var01, #2
05068     B9 0E 86 F1 | 	sub	objptr, #185
0506c     07 31 02 F1 | 	add	_var01, objptr
05070     18 3B 62 FC | 	wrlong	_var06, _var01
05074     FF 0E 86 F1 | 	sub	objptr, #255
05078     E0 00 90 FD | 	jmp	#LR__0201
0507c                 | LR__0196
0507c                 | ' 
0507c                 | '         $B: currVolume[channel] -= y             ' Fine volume slide down
0507c     18 41 02 F6 | 	mov	_var09, _var01
05080     02 40 66 F0 | 	shl	_var09, #2
05084     FF 0E 06 F1 | 	add	objptr, #255
05088     07 41 02 F1 | 	add	_var09, objptr
0508c     20 3B 02 FB | 	rdlong	_var06, _var09
05090     B9 0E 06 F1 | 	add	objptr, #185
05094     07 43 C2 FA | 	rdbyte	_var10, objptr
05098     21 3B 82 F1 | 	sub	_var06, _var10
0509c     02 30 66 F0 | 	shl	_var01, #2
050a0     B9 0E 86 F1 | 	sub	objptr, #185
050a4     07 31 02 F1 | 	add	_var01, objptr
050a8     18 3B 62 FC | 	wrlong	_var06, _var01
050ac     FF 0E 86 F1 | 	sub	objptr, #255
050b0     A8 00 90 FD | 	jmp	#LR__0201
050b4                 | LR__0197
050b4                 | ' 
050b4                 | '         $E: patternDelay := y * currentSongSpeed ' Pattern delay
050b4     B8 0F 06 F1 | 	add	objptr, #440
050b8     07 41 C2 FA | 	rdbyte	_var09, objptr
050bc     14 0F 86 F1 | 	sub	objptr, #276
050c0     07 43 C2 FA | 	rdbyte	_var10, objptr
050c4     21 41 02 FD | 	qmul	_var09, _var10
050c8     18 3A 62 FD | 	getqx	_var06
050cc     01 0E 06 F1 | 	add	objptr, #1
050d0     07 3B 42 FC | 	wrbyte	_var06, objptr
050d4     A5 0E 86 F1 | 	sub	objptr, #165
050d8     80 00 90 FD | 	jmp	#LR__0201
050dc                 | LR__0198
050dc                 | ' 
050dc                 | '     $F:                          ' Set speed
050dc                 | '       if z < 32
050dc     B9 0F 06 F1 | 	add	objptr, #441
050e0     07 39 C2 FA | 	rdbyte	_var05, objptr
050e4     B9 0F 86 F1 | 	sub	objptr, #441
050e8     20 38 5E F2 | 	cmps	_var05, #32 wcz
050ec     18 00 90 3D |  if_ae	jmp	#LR__0199
050f0                 | '         currentSongSpeed := z
050f0     B9 0F 06 F1 | 	add	objptr, #441
050f4     07 39 C2 FA | 	rdbyte	_var05, objptr
050f8     15 0F 86 F1 | 	sub	objptr, #277
050fc     07 39 42 FC | 	wrbyte	_var05, objptr
05100     A4 0E 86 F1 | 	sub	objptr, #164
05104                 | '       else
05104     54 00 90 FD | 	jmp	#LR__0200
05108                 | LR__0199
05108                 | '         ticksPerMinute := z * 24
05108     B9 0F 06 F1 | 	add	objptr, #441
0510c     07 3D C2 FA | 	rdbyte	_var07, objptr
05110     1E 39 02 F6 | 	mov	_var05, _var07
05114     01 38 66 F0 | 	shl	_var05, #1
05118     1E 39 02 F1 | 	add	_var05, _var07
0511c     03 38 66 F0 | 	shl	_var05, #3
05120     12 0E 86 F1 | 	sub	objptr, #18
05124     07 39 62 FC | 	wrlong	_var05, objptr
05128     A7 0F 86 F1 | 	sub	objptr, #423
0512c                 | '         cyclesToWait   := (systemClock / ticksPerMinute) * 60
0512c     07 0B 03 FB | 	rdlong	muldiva_, objptr
05130     A7 0F 06 F1 | 	add	objptr, #423
05134     07 0D 03 FB | 	rdlong	muldivb_, objptr
05138     A7 0F 86 F1 | 	sub	objptr, #423
0513c     D0 00 A0 FD | 	call	#divide_
05140     86 3B 02 F6 | 	mov	_var06, muldivb_
05144     04 3A 66 F0 | 	shl	_var06, #4
05148     86 3B 82 F1 | 	sub	_var06, muldivb_
0514c     02 3A 66 F0 | 	shl	_var06, #2
05150     AB 0F 06 F1 | 	add	objptr, #427
05154     07 3B 62 FC | 	wrlong	_var06, objptr
05158     AB 0F 86 F1 | 	sub	objptr, #427
0515c                 | LR__0200
0515c                 | LR__0201
0515c                 | _trackerplayer_spin2_handleZeroTickCommands_ret
0515c     2D 00 64 FD | 	ret
05160                 | 
05160                 | ' 
05160                 | ' 
05160                 | ' ' Handle all commands that executes on "non zero ticks"
05160                 | ' '
05160                 | ' PRI handleNonZeroTickCommands(channel)
05160                 | _trackerplayer_spin2_handleNonZeroTickCommands
05160     0A 5A 05 F6 | 	mov	COUNT_, #10
05164     B0 00 A0 FD | 	call	#pushregs_
05168     2E 6B 02 F6 | 	mov	local01, arg01
0516c                 | ' 
0516c                 | '   CASE_FAST cmd
0516c     BA 0F 06 F1 | 	add	objptr, #442
05170     07 6D C2 FA | 	rdbyte	local02, objptr
05174     BA 0F 86 F1 | 	sub	objptr, #442
05178     36 6F 02 F6 | 	mov	local03, local02
0517c     01 6E 86 F1 | 	sub	local03, #1
05180     0E 6E 26 F3 | 	fle	local03, #14
05184     37 71 02 F6 | 	mov	local04, local03
05188     30 70 62 FD | 	jmprel	local04
0518c                 | LR__0202
0518c     38 00 90 FD | 	jmp	#LR__0203
05190     A0 00 90 FD | 	jmp	#LR__0204
05194     D4 00 90 FD | 	jmp	#LR__0205
05198     1C 02 90 FD | 	jmp	#LR__0215
0519c     20 01 90 FD | 	jmp	#LR__0207
051a0     48 01 90 FD | 	jmp	#LR__0208
051a4     50 01 90 FD | 	jmp	#LR__0209
051a8     0C 02 90 FD | 	jmp	#LR__0215
051ac     08 02 90 FD | 	jmp	#LR__0215
051b0     B0 01 90 FD | 	jmp	#LR__0212
051b4     00 02 90 FD | 	jmp	#LR__0215
051b8     FC 01 90 FD | 	jmp	#LR__0215
051bc     F8 01 90 FD | 	jmp	#LR__0215
051c0     AC 01 90 FD | 	jmp	#LR__0213
051c4     F0 01 90 FD | 	jmp	#LR__0215
051c8                 | LR__0203
051c8                 | ' 
051c8                 | '     $1: currPeriod[channel] -= z        ' Frequency slide up
051c8     35 73 02 F6 | 	mov	local05, local01
051cc     02 72 66 F0 | 	shl	local05, #2
051d0     DF 0E 06 F1 | 	add	objptr, #223
051d4     07 73 02 F1 | 	add	local05, objptr
051d8     39 75 02 FB | 	rdlong	local06, local05
051dc     DA 0E 06 F1 | 	add	objptr, #218
051e0     07 77 C2 FA | 	rdbyte	local07, objptr
051e4     3B 75 82 F1 | 	sub	local06, local07
051e8     35 79 02 F6 | 	mov	local08, local01
051ec     02 78 66 F0 | 	shl	local08, #2
051f0     DA 0E 86 F1 | 	sub	objptr, #218
051f4     07 79 02 F1 | 	add	local08, objptr
051f8     3C 75 62 FC | 	wrlong	local06, local08
051fc                 | ' 
051fc                 | '        ' This simulates a bug in the original protracker play routine that is dependant on an UINT16 data type
051fc                 | '       if currPeriod[channel] < 0
051fc     35 75 02 F6 | 	mov	local06, local01
05200     02 74 66 F0 | 	shl	local06, #2
05204     07 75 02 F1 | 	add	local06, objptr
05208     3A 7B 02 FB | 	rdlong	local09, local06
0520c     00 7A 5E F2 | 	cmps	local09, #0 wcz
05210     DF 0E 86 F1 | 	sub	objptr, #223
05214     A0 01 90 3D |  if_ae	jmp	#LR__0215
05218                 | '         currPeriod[channel] := MAXIMUM_PERIOD
05218     02 6A 66 F0 | 	shl	local01, #2
0521c     DF 0E 06 F1 | 	add	objptr, #223
05220     07 6B 02 F1 | 	add	local01, objptr
05224     01 00 80 FF 
05228     35 B1 6A FC | 	wrlong	##856, local01
0522c     DF 0E 86 F1 | 	sub	objptr, #223
05230     84 01 90 FD | 	jmp	#LR__0215
05234                 | LR__0204
05234                 | ' 
05234                 | '     $2: currPeriod[channel] += z        ' Frequency slide down
05234     35 73 02 F6 | 	mov	local05, local01
05238     02 72 66 F0 | 	shl	local05, #2
0523c     DF 0E 06 F1 | 	add	objptr, #223
05240     07 73 02 F1 | 	add	local05, objptr
05244     39 75 02 FB | 	rdlong	local06, local05
05248     DA 0E 06 F1 | 	add	objptr, #218
0524c     07 77 C2 FA | 	rdbyte	local07, objptr
05250     3B 75 02 F1 | 	add	local06, local07
05254     02 6A 66 F0 | 	shl	local01, #2
05258     DA 0E 86 F1 | 	sub	objptr, #218
0525c     07 6B 02 F1 | 	add	local01, objptr
05260     35 75 62 FC | 	wrlong	local06, local01
05264     DF 0E 86 F1 | 	sub	objptr, #223
05268     4C 01 90 FD | 	jmp	#LR__0215
0526c                 | LR__0205
0526c                 | ' 
0526c                 | '     $3:                                 ' Slide to note (portamento)
0526c                 | '       if z > 0
0526c     B9 0F 06 F1 | 	add	objptr, #441
05270     07 75 C2 FA | 	rdbyte	local06, objptr
05274     B9 0F 86 F1 | 	sub	objptr, #441
05278     00 74 5E F2 | 	cmps	local06, #0 wcz
0527c     1C 00 90 ED |  if_be	jmp	#LR__0206
05280                 | '         cmd3_memoryZ[channel] := z
05280     35 75 02 F6 | 	mov	local06, local01
05284     C8 0F 06 F1 | 	add	objptr, #456
05288     07 75 02 F1 | 	add	local06, objptr
0528c     0F 0E 86 F1 | 	sub	objptr, #15
05290     07 7B C2 FA | 	rdbyte	local09, objptr
05294     B9 0F 86 F1 | 	sub	objptr, #441
05298     3A 7B 42 FC | 	wrbyte	local09, local06
0529c                 | LR__0206
0529c                 | ' 
0529c                 | '       doPortamento(channel, lastSetPeriod[channel])
0529c     35 73 02 F6 | 	mov	local05, local01
052a0     02 72 66 F0 | 	shl	local05, #2
052a4     27 0F 06 F1 | 	add	objptr, #295
052a8     07 73 02 F1 | 	add	local05, objptr
052ac     39 5F 02 FB | 	rdlong	arg02, local05
052b0     35 5D 02 F6 | 	mov	arg01, local01
052b4     27 0F 86 F1 | 	sub	objptr, #295
052b8     64 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
052bc     F8 00 90 FD | 	jmp	#LR__0215
052c0                 | LR__0207
052c0                 | ' 
052c0                 | '     $5:                                 ' Volume slide + portamento
052c0                 | '       doVolumeSlide(channel)
052c0     35 5D 02 F6 | 	mov	arg01, local01
052c4     54 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
052c8                 | '       doPortamento(channel, lastSetPeriod[channel])
052c8     35 73 02 F6 | 	mov	local05, local01
052cc     02 72 66 F0 | 	shl	local05, #2
052d0     27 0F 06 F1 | 	add	objptr, #295
052d4     07 73 02 F1 | 	add	local05, objptr
052d8     39 5F 02 FB | 	rdlong	arg02, local05
052dc     35 5D 02 F6 | 	mov	arg01, local01
052e0     27 0F 86 F1 | 	sub	objptr, #295
052e4     38 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
052e8     CC 00 90 FD | 	jmp	#LR__0215
052ec                 | LR__0208
052ec                 | ' 
052ec                 | '     $6: doVolumeSlide(channel)          ' Volume slide + Vibrato (note that vibrato is a)
052ec     35 5D 02 F6 | 	mov	arg01, local01
052f0     28 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
052f4     C0 00 90 FD | 	jmp	#LR__0215
052f8                 | LR__0209
052f8                 | ' 
052f8                 | '     $7:                                 ' Tremolo
052f8                 | '       if x > 0
052f8     B7 0F 06 F1 | 	add	objptr, #439
052fc     07 75 C2 FA | 	rdbyte	local06, objptr
05300     B7 0F 86 F1 | 	sub	objptr, #439
05304     00 74 5E F2 | 	cmps	local06, #0 wcz
05308     1C 00 90 ED |  if_be	jmp	#LR__0210
0530c                 | '         cmd7_memoryX[channel] := x
0530c     35 75 02 F6 | 	mov	local06, local01
05310     D8 0F 06 F1 | 	add	objptr, #472
05314     07 75 02 F1 | 	add	local06, objptr
05318     21 0E 86 F1 | 	sub	objptr, #33
0531c     07 7B C2 FA | 	rdbyte	local09, objptr
05320     B7 0F 86 F1 | 	sub	objptr, #439
05324     3A 7B 42 FC | 	wrbyte	local09, local06
05328                 | LR__0210
05328                 | '       if y > 0
05328     B8 0F 06 F1 | 	add	objptr, #440
0532c     07 75 C2 FA | 	rdbyte	local06, objptr
05330     B8 0F 86 F1 | 	sub	objptr, #440
05334     00 74 5E F2 | 	cmps	local06, #0 wcz
05338     1C 00 90 ED |  if_be	jmp	#LR__0211
0533c                 | '         cmd7_memoryY[channel] := y
0533c     35 75 02 F6 | 	mov	local06, local01
05340     D4 0F 06 F1 | 	add	objptr, #468
05344     07 75 02 F1 | 	add	local06, objptr
05348     1C 0E 86 F1 | 	sub	objptr, #28
0534c     07 7B C2 FA | 	rdbyte	local09, objptr
05350     B8 0F 86 F1 | 	sub	objptr, #440
05354     3A 7B 42 FC | 	wrbyte	local09, local06
05358                 | LR__0211
05358                 | ' 
05358                 | '       doTremolo(channel)
05358     35 5D 02 F6 | 	mov	arg01, local01
0535c     08 04 B0 FD | 	call	#_trackerplayer_spin2_doTremolo
05360     54 00 90 FD | 	jmp	#LR__0215
05364                 | LR__0212
05364                 | ' 
05364                 | '     $A: doVolumeSlide(channel)          ' Volume slide
05364     35 5D 02 F6 | 	mov	arg01, local01
05368     B0 08 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
0536c     48 00 90 FD | 	jmp	#LR__0215
05370                 | LR__0213
05370                 | ' 
05370                 | '     $E:                                 ' Retrig every Y ticks
05370                 | '       if (x == $9) && ((tickcounter // y) == 0)
05370     B7 0F 06 F1 | 	add	objptr, #439
05374     07 73 C2 FA | 	rdbyte	local05, objptr
05378     B7 0F 86 F1 | 	sub	objptr, #439
0537c     09 72 0E F2 | 	cmp	local05, #9 wz
05380     34 00 90 5D |  if_ne	jmp	#LR__0214
05384     A1 0E 06 F1 | 	add	objptr, #161
05388     07 77 C2 FA | 	rdbyte	local07, objptr
0538c     3B 0B 03 F6 | 	mov	muldiva_, local07
05390     17 0F 06 F1 | 	add	objptr, #279
05394     07 7D C2 FA | 	rdbyte	local10, objptr
05398     B8 0F 86 F1 | 	sub	objptr, #440
0539c     3E 0D 03 F6 | 	mov	muldivb_, local10
053a0     D0 00 A0 FD | 	call	#divide_
053a4     85 7B 0A F6 | 	mov	local09, muldiva_ wz
053a8     0C 00 90 5D |  if_ne	jmp	#LR__0214
053ac                 | '         triggerNote(channel)
053ac     35 75 02 F6 | 	mov	local06, local01
053b0     3A 5D 02 F6 | 	mov	arg01, local06
053b4     24 F3 BF FD | 	call	#_trackerplayer_spin2_triggerNote
053b8                 | LR__0214
053b8                 | LR__0215
053b8     AF F0 03 F6 | 	mov	ptra, fp
053bc     BF 00 A0 FD | 	call	#popregs_
053c0                 | _trackerplayer_spin2_handleNonZeroTickCommands_ret
053c0     2D 00 64 FD | 	ret
053c4                 | 
053c4                 | ' 
053c4                 | ' 
053c4                 | ' ' Handle all commands that executes on every tick
053c4                 | ' '
053c4                 | ' PRI handleEveryTickCommands(channel) | tempNote, arpCounter
053c4                 | _trackerplayer_spin2_handleEveryTickCommands
053c4     12 5A 05 F6 | 	mov	COUNT_, #18
053c8     B0 00 A0 FD | 	call	#pushregs_
053cc     2E 6B 02 F6 | 	mov	local01, arg01
053d0                 | ' 
053d0                 | '   CASE_FAST cmd
053d0     BA 0F 06 F1 | 	add	objptr, #442
053d4     07 6D C2 FA | 	rdbyte	local02, objptr
053d8     BA 0F 86 F1 | 	sub	objptr, #442
053dc     36 6F 02 F6 | 	mov	local03, local02
053e0     0F 6E 26 F3 | 	fle	local03, #15
053e4     37 71 02 F6 | 	mov	local04, local03
053e8     30 70 62 FD | 	jmprel	local04
053ec                 | LR__0216
053ec     3C 00 90 FD | 	jmp	#LR__0217
053f0     68 03 90 FD | 	jmp	#LR__0231
053f4     64 03 90 FD | 	jmp	#LR__0231
053f8     60 03 90 FD | 	jmp	#LR__0231
053fc     E8 01 90 FD | 	jmp	#LR__0220
05400     58 03 90 FD | 	jmp	#LR__0231
05404     4C 02 90 FD | 	jmp	#LR__0223
05408     50 03 90 FD | 	jmp	#LR__0231
0540c     4C 03 90 FD | 	jmp	#LR__0231
05410     48 03 90 FD | 	jmp	#LR__0231
05414     44 03 90 FD | 	jmp	#LR__0231
05418     40 03 90 FD | 	jmp	#LR__0231
0541c     3C 03 90 FD | 	jmp	#LR__0231
05420     38 03 90 FD | 	jmp	#LR__0231
05424     38 02 90 FD | 	jmp	#LR__0224
05428     30 03 90 FD | 	jmp	#LR__0231
0542c                 | LR__0217
0542c                 | ' 
0542c                 | '     $0:                                 ' Arpeggio
0542c                 | '       arpCounter := tickCounter // 3
0542c     A1 0E 06 F1 | 	add	objptr, #161
05430     07 0B C3 FA | 	rdbyte	muldiva_, objptr
05434     A1 0E 86 F1 | 	sub	objptr, #161
05438     03 0C 07 F6 | 	mov	muldivb_, #3
0543c     D0 00 A0 FD | 	call	#divide_
05440     85 73 02 F6 | 	mov	local05, muldiva_
05444                 | '       if (tempNote := amigaPeriodToNote(currPeriod[channel], currFineTune[channel])) < 36
05444     35 75 02 F6 | 	mov	local06, local01
05448     02 74 66 F0 | 	shl	local06, #2
0544c     DF 0E 06 F1 | 	add	objptr, #223
05450     07 75 02 F1 | 	add	local06, objptr
05454     3A 5D 02 FB | 	rdlong	arg01, local06
05458     35 77 02 F6 | 	mov	local07, local01
0545c     0C 0E 86 F1 | 	sub	objptr, #12
05460     07 77 02 F1 | 	add	local07, objptr
05464     3B 5F C2 FA | 	rdbyte	arg02, local07
05468     D3 0E 86 F1 | 	sub	objptr, #211
0546c     9C F0 BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
05470     15 79 02 F6 | 	mov	local08, result1
05474     3C 7B 02 F6 | 	mov	local09, local08
05478     24 78 5E F2 | 	cmps	local08, #36 wcz
0547c     DC 02 90 3D |  if_ae	jmp	#LR__0231
05480                 | '         if arpCounter == 1 and x > 0
05480     01 72 0E F2 | 	cmp	local05, #1 wz
05484     8C 00 90 5D |  if_ne	jmp	#LR__0218
05488     B7 0F 06 F1 | 	add	objptr, #439
0548c     07 75 C2 FA | 	rdbyte	local06, objptr
05490     B7 0F 86 F1 | 	sub	objptr, #439
05494     00 74 5E F2 | 	cmps	local06, #0 wcz
05498     78 00 90 ED |  if_be	jmp	#LR__0218
0549c                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + x) - currPeriod[channel]
0549c     3D 7D 02 F6 | 	mov	local10, local09
054a0     B7 0F 06 F1 | 	add	objptr, #439
054a4     07 77 C2 FA | 	rdbyte	local07, objptr
054a8     3B 7F 02 F6 | 	mov	local11, local07
054ac     3B 7D 02 F1 | 	add	local10, local07
054b0     3E 81 02 F6 | 	mov	local12, local10
054b4     40 5D 02 F6 | 	mov	arg01, local12
054b8     06 00 00 FF 
054bc     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
054c0     01 5C 66 F0 | 	shl	arg01, #1
054c4     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
054c8                 | ' 
054c8                 | '   return word[@periodTable][noteNumber]
054c8     2E 2B E2 FA | 	rdword	result1, arg01
054cc     06 00 00 FF 
054d0     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
054d4     15 83 02 F6 | 	mov	local13, result1
054d8     35 85 02 F6 | 	mov	local14, local01
054dc     02 84 66 F0 | 	shl	local14, #2
054e0     D8 0E 86 F1 | 	sub	objptr, #216
054e4     07 87 02 F6 | 	mov	local15, objptr
054e8     07 85 02 F1 | 	add	local14, objptr
054ec     41 75 02 F6 | 	mov	local06, local13
054f0     42 89 02 FB | 	rdlong	local16, local14
054f4     44 75 82 F1 | 	sub	local06, local16
054f8     35 8B 02 F6 | 	mov	local17, local01
054fc     02 8A 66 F0 | 	shl	local17, #2
05500     10 0E 06 F1 | 	add	objptr, #16
05504     07 8D 02 F6 | 	mov	local18, objptr
05508     07 8B 02 F1 | 	add	local17, objptr
0550c     45 75 62 FC | 	wrlong	local06, local17
05510     EF 0E 86 F1 | 	sub	objptr, #239
05514                 | LR__0218
05514                 | '         if arpCounter == 2 and y > 0
05514     02 72 0E F2 | 	cmp	local05, #2 wz
05518     8C 00 90 5D |  if_ne	jmp	#LR__0219
0551c     B8 0F 06 F1 | 	add	objptr, #440
05520     07 75 C2 FA | 	rdbyte	local06, objptr
05524     B8 0F 86 F1 | 	sub	objptr, #440
05528     00 74 5E F2 | 	cmps	local06, #0 wcz
0552c     78 00 90 ED |  if_be	jmp	#LR__0219
05530                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + y) - currPeriod[channel]
05530     3D 7D 02 F6 | 	mov	local10, local09
05534     B8 0F 06 F1 | 	add	objptr, #440
05538     07 77 C2 FA | 	rdbyte	local07, objptr
0553c     3B 7F 02 F6 | 	mov	local11, local07
05540     3B 7D 02 F1 | 	add	local10, local07
05544     3E 81 02 F6 | 	mov	local12, local10
05548     40 5D 02 F6 | 	mov	arg01, local12
0554c     06 00 00 FF 
05550     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05554     01 5C 66 F0 | 	shl	arg01, #1
05558     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
0555c                 | ' 
0555c                 | '   return word[@periodTable][noteNumber]
0555c     2E 2B E2 FA | 	rdword	result1, arg01
05560     06 00 00 FF 
05564     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05568     15 83 02 F6 | 	mov	local13, result1
0556c     35 85 02 F6 | 	mov	local14, local01
05570     02 84 66 F0 | 	shl	local14, #2
05574     D9 0E 86 F1 | 	sub	objptr, #217
05578     07 87 02 F6 | 	mov	local15, objptr
0557c     07 85 02 F1 | 	add	local14, objptr
05580     41 75 02 F6 | 	mov	local06, local13
05584     42 89 02 FB | 	rdlong	local16, local14
05588     44 75 82 F1 | 	sub	local06, local16
0558c     35 8B 02 F6 | 	mov	local17, local01
05590     02 8A 66 F0 | 	shl	local17, #2
05594     10 0E 06 F1 | 	add	objptr, #16
05598     07 8D 02 F6 | 	mov	local18, objptr
0559c     07 8B 02 F1 | 	add	local17, objptr
055a0     45 75 62 FC | 	wrlong	local06, local17
055a4     EF 0E 86 F1 | 	sub	objptr, #239
055a8                 | LR__0219
055a8                 | '         if arpCounter == 0 and (x + y) > 0
055a8     00 72 0E F2 | 	cmp	local05, #0 wz
055ac     AC 01 90 5D |  if_ne	jmp	#LR__0231
055b0     B7 0F 06 F1 | 	add	objptr, #439
055b4     07 75 C2 FA | 	rdbyte	local06, objptr
055b8     01 0E 06 F1 | 	add	objptr, #1
055bc     07 77 C2 FA | 	rdbyte	local07, objptr
055c0     B8 0F 86 F1 | 	sub	objptr, #440
055c4     3B 75 02 F1 | 	add	local06, local07
055c8     00 74 5E F2 | 	cmps	local06, #0 wcz
055cc     8C 01 90 ED |  if_be	jmp	#LR__0231
055d0                 | '           deltaPeriod[channel] := 0
055d0     02 6A 66 F0 | 	shl	local01, #2
055d4     EF 0E 06 F1 | 	add	objptr, #239
055d8     07 6B 02 F1 | 	add	local01, objptr
055dc     35 01 68 FC | 	wrlong	#0, local01
055e0     EF 0E 86 F1 | 	sub	objptr, #239
055e4     74 01 90 FD | 	jmp	#LR__0231
055e8                 | LR__0220
055e8                 | ' 
055e8                 | '     $4:                                 ' Vibrato
055e8                 | '       if x > 0
055e8     B7 0F 06 F1 | 	add	objptr, #439
055ec     07 75 C2 FA | 	rdbyte	local06, objptr
055f0     B7 0F 86 F1 | 	sub	objptr, #439
055f4     00 74 5E F2 | 	cmps	local06, #0 wcz
055f8     1C 00 90 ED |  if_be	jmp	#LR__0221
055fc                 | '         cmd4_memoryX[channel] := x
055fc     35 75 02 F6 | 	mov	local06, local01
05600     D0 0F 06 F1 | 	add	objptr, #464
05604     07 75 02 F1 | 	add	local06, objptr
05608     19 0E 86 F1 | 	sub	objptr, #25
0560c     07 7F C2 FA | 	rdbyte	local11, objptr
05610     B7 0F 86 F1 | 	sub	objptr, #439
05614     3A 7F 42 FC | 	wrbyte	local11, local06
05618                 | LR__0221
05618                 | '       if y > 0
05618     B8 0F 06 F1 | 	add	objptr, #440
0561c     07 75 C2 FA | 	rdbyte	local06, objptr
05620     B8 0F 86 F1 | 	sub	objptr, #440
05624     00 74 5E F2 | 	cmps	local06, #0 wcz
05628     1C 00 90 ED |  if_be	jmp	#LR__0222
0562c                 | '         cmd4_memoryY[channel] := y
0562c     35 75 02 F6 | 	mov	local06, local01
05630     CC 0F 06 F1 | 	add	objptr, #460
05634     07 75 02 F1 | 	add	local06, objptr
05638     14 0E 86 F1 | 	sub	objptr, #20
0563c     07 7F C2 FA | 	rdbyte	local11, objptr
05640     B8 0F 86 F1 | 	sub	objptr, #440
05644     3A 7F 42 FC | 	wrbyte	local11, local06
05648                 | LR__0222
05648                 | ' 
05648                 | '       doVibrato(channel)
05648     35 5D 02 F6 | 	mov	arg01, local01
0564c     74 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
05650     08 01 90 FD | 	jmp	#LR__0231
05654                 | LR__0223
05654                 | ' 
05654                 | '     $6: doVibrato(channel)              ' Volume slide + Vibrato
05654     35 5D 02 F6 | 	mov	arg01, local01
05658     68 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
0565c     FC 00 90 FD | 	jmp	#LR__0231
05660                 | LR__0224
05660                 | ' 
05660                 | '     $E:
05660                 | '       if x == $C                        ' Cut note after Y ticks
05660     B7 0F 06 F1 | 	add	objptr, #439
05664     07 75 C2 FA | 	rdbyte	local06, objptr
05668     B7 0F 86 F1 | 	sub	objptr, #439
0566c     0C 74 0E F2 | 	cmp	local06, #12 wz
05670     34 00 90 5D |  if_ne	jmp	#LR__0225
05674                 | '         if tickcounter == y
05674     A1 0E 06 F1 | 	add	objptr, #161
05678     07 75 C2 FA | 	rdbyte	local06, objptr
0567c     17 0F 06 F1 | 	add	objptr, #279
05680     07 7F C2 FA | 	rdbyte	local11, objptr
05684     B8 0F 86 F1 | 	sub	objptr, #440
05688     3F 75 0A F2 | 	cmp	local06, local11 wz
0568c     CC 00 90 5D |  if_ne	jmp	#LR__0230
05690                 | '           currVolume[channel] := 0
05690     02 6A 66 F0 | 	shl	local01, #2
05694     FF 0E 06 F1 | 	add	objptr, #255
05698     07 6B 02 F1 | 	add	local01, objptr
0569c     35 01 68 FC | 	wrlong	#0, local01
056a0     FF 0E 86 F1 | 	sub	objptr, #255
056a4     B4 00 90 FD | 	jmp	#LR__0230
056a8                 | LR__0225
056a8                 | ' 
056a8                 | '       elseif x == $D                    ' Delay note Y ticks
056a8     B7 0F 06 F1 | 	add	objptr, #439
056ac     07 75 C2 FA | 	rdbyte	local06, objptr
056b0     B7 0F 86 F1 | 	sub	objptr, #439
056b4     0D 74 0E F2 | 	cmp	local06, #13 wz
056b8     A0 00 90 5D |  if_ne	jmp	#LR__0229
056bc                 | '         if tickcounter == y
056bc     A1 0E 06 F1 | 	add	objptr, #161
056c0     07 75 C2 FA | 	rdbyte	local06, objptr
056c4     17 0F 06 F1 | 	add	objptr, #279
056c8     07 7F C2 FA | 	rdbyte	local11, objptr
056cc     B8 0F 86 F1 | 	sub	objptr, #440
056d0     3F 75 0A F2 | 	cmp	local06, local11 wz
056d4     0C 00 90 5D |  if_ne	jmp	#LR__0226
056d8                 | '           triggerNote(channel)
056d8     35 5D 02 F6 | 	mov	arg01, local01
056dc     FC EF BF FD | 	call	#_trackerplayer_spin2_triggerNote
056e0     78 00 90 FD | 	jmp	#LR__0228
056e4                 | LR__0226
056e4                 | '         ' Do a "bugged trigger" if y >= currentSongSpeed
056e4                 | '         elseif (y >= currentSongSpeed) and tickcounter == (currentSongSpeed - 1)
056e4     B8 0F 06 F1 | 	add	objptr, #440
056e8     07 75 C2 FA | 	rdbyte	local06, objptr
056ec     14 0F 86 F1 | 	sub	objptr, #276
056f0     07 7F C2 FA | 	rdbyte	local11, objptr
056f4     A4 0E 86 F1 | 	sub	objptr, #164
056f8     3F 75 5A F2 | 	cmps	local06, local11 wcz
056fc     5C 00 90 CD |  if_b	jmp	#LR__0227
05700     A4 0E 06 F1 | 	add	objptr, #164
05704     07 83 C2 FA | 	rdbyte	local13, objptr
05708     41 81 02 F6 | 	mov	local12, local13
0570c     01 80 86 F1 | 	sub	local12, #1
05710     03 0E 86 F1 | 	sub	objptr, #3
05714     07 87 C2 FA | 	rdbyte	local15, objptr
05718     A1 0E 86 F1 | 	sub	objptr, #161
0571c     43 85 02 F6 | 	mov	local14, local15
05720     40 85 0A F2 | 	cmp	local14, local12 wz
05724     34 00 90 5D |  if_ne	jmp	#LR__0227
05728                 | '           currPeriod[channel] := lastSetPeriod[channel] ' Only set period, don't trigger a sample playback
05728     35 75 02 F6 | 	mov	local06, local01
0572c     02 74 66 F0 | 	shl	local06, #2
05730     27 0F 06 F1 | 	add	objptr, #295
05734     07 7D 02 F6 | 	mov	local10, objptr
05738     07 75 02 F1 | 	add	local06, objptr
0573c     35 7F 02 F6 | 	mov	local11, local01
05740     02 7E 66 F0 | 	shl	local11, #2
05744     48 0E 86 F1 | 	sub	objptr, #72
05748     07 77 02 F6 | 	mov	local07, objptr
0574c     3A 81 02 FB | 	rdlong	local12, local06
05750     3B 7F 02 F1 | 	add	local11, local07
05754     3F 81 62 FC | 	wrlong	local12, local11
05758     DF 0E 86 F1 | 	sub	objptr, #223
0575c                 | LR__0227
0575c                 | LR__0228
0575c                 | LR__0229
0575c                 | LR__0230
0575c                 | LR__0231
0575c     AF F0 03 F6 | 	mov	ptra, fp
05760     BF 00 A0 FD | 	call	#popregs_
05764                 | _trackerplayer_spin2_handleEveryTickCommands_ret
05764     2D 00 64 FD | 	ret
05768                 | 
05768                 | ' 
05768                 | ' 
05768                 | ' PRI doTremolo(channel) | depth, sineWave, speed
05768                 | _trackerplayer_spin2_doTremolo
05768     2E 31 02 F6 | 	mov	_var01, arg01
0576c     18 33 02 F6 | 	mov	_var02, _var01
05770     8B 0F 06 F1 | 	add	objptr, #395
05774     07 33 02 F1 | 	add	_var02, objptr
05778     05 00 00 FF 
0577c     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
05780     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
05784     19 37 C2 FA | 	rdbyte	_var04, _var02
05788     02 36 66 F0 | 	shl	_var04, #2
0578c     1A 37 02 F1 | 	add	_var04, _var03
05790                 | ' 
05790                 | '   sineWave := long[@vibratoWaveform][tremoloPos[channel]]
05790     1B 39 02 FB | 	rdlong	_var05, _var04
05794     18 3B 02 F6 | 	mov	_var06, _var01
05798     49 0E 06 F1 | 	add	objptr, #73
0579c     07 3B 02 F1 | 	add	_var06, objptr
057a0                 | '   depth    := cmd7_memoryY[channel]
057a0     1D 3D C2 FA | 	rdbyte	_var07, _var06
057a4     18 3F 02 F6 | 	mov	_var08, _var01
057a8     04 0E 06 F1 | 	add	objptr, #4
057ac     07 3F 02 F1 | 	add	_var08, objptr
057b0                 | '   speed    := cmd7_memoryX[channel]
057b0     1F 41 C2 FA | 	rdbyte	_var09, _var08
057b4                 | ' 
057b4                 | '   CASE_FAST vibratoType[channel]
057b4     18 43 02 F6 | 	mov	_var10, _var01
057b8     18 0E 86 F1 | 	sub	objptr, #24
057bc     07 45 02 F6 | 	mov	_var11, objptr
057c0     07 43 02 F1 | 	add	_var10, objptr
057c4     21 47 C2 FA | 	rdbyte	_var12, _var10
057c8     03 46 26 F3 | 	fle	_var12, #3
057cc     23 49 02 F6 | 	mov	_var13, _var12
057d0     05 00 00 FF 
057d4     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
057d8     C0 0F 86 F1 | 	sub	objptr, #448
057dc     30 48 62 FD | 	jmprel	_var13
057e0                 | LR__0232
057e0     0C 00 90 FD | 	jmp	#LR__0233
057e4     30 00 90 FD | 	jmp	#LR__0234
057e8     6C 00 90 FD | 	jmp	#LR__0235
057ec     B4 00 90 FD | 	jmp	#LR__0236
057f0                 | LR__0233
057f0                 | ' 
057f0                 | '     0: deltaVolume[channel] := (depth * sineWave) SAR 6                                 ' Sine wave
057f0     1C 3D 02 FD | 	qmul	_var07, _var05
057f4     18 4A 62 FD | 	getqx	_var14
057f8     06 4A C6 F0 | 	sar	_var14, #6
057fc     18 4D 02 F6 | 	mov	_var15, _var01
05800     02 4C 66 F0 | 	shl	_var15, #2
05804     0F 0F 06 F1 | 	add	objptr, #271
05808     07 4D 02 F1 | 	add	_var15, objptr
0580c     26 4B 62 FC | 	wrlong	_var14, _var15
05810     0F 0F 86 F1 | 	sub	objptr, #271
05814     8C 00 90 FD | 	jmp	#LR__0236
05818                 | LR__0234
05818                 | '     1: deltaVolume[channel] := (depth * (tremoloPos[channel] << 3) - 256) SAR 6         ' Ramp down wave
05818     18 4D 02 F6 | 	mov	_var15, _var01
0581c     8B 0F 06 F1 | 	add	objptr, #395
05820     07 4D 02 F1 | 	add	_var15, objptr
05824     26 4F C2 FA | 	rdbyte	_var16, _var15
05828     03 4E 66 F0 | 	shl	_var16, #3
0582c     27 3D 02 FD | 	qmul	_var07, _var16
05830     18 4A 62 FD | 	getqx	_var14
05834     00 4B 86 F1 | 	sub	_var14, #256
05838     06 4A C6 F0 | 	sar	_var14, #6
0583c     18 51 02 F6 | 	mov	_var17, _var01
05840     02 50 66 F0 | 	shl	_var17, #2
05844     7C 0E 86 F1 | 	sub	objptr, #124
05848     07 51 02 F1 | 	add	_var17, objptr
0584c     28 4B 62 FC | 	wrlong	_var14, _var17
05850     0F 0F 86 F1 | 	sub	objptr, #271
05854     4C 00 90 FD | 	jmp	#LR__0236
05858                 | LR__0235
05858                 | '     2: deltaVolume[channel] := (depth * ((tremoloPos[channel] & 32) << 4) - 256) SAR 6  ' Square wave
05858     18 4D 02 F6 | 	mov	_var15, _var01
0585c     8B 0F 06 F1 | 	add	objptr, #395
05860     07 53 02 F6 | 	mov	_var18, objptr
05864     07 4D 02 F1 | 	add	_var15, objptr
05868     26 4F C2 FA | 	rdbyte	_var16, _var15
0586c     20 4E 06 F5 | 	and	_var16, #32
05870     04 4E 66 F0 | 	shl	_var16, #4
05874     27 3D 02 FD | 	qmul	_var07, _var16
05878     18 54 62 FD | 	getqx	_var19
0587c     2A 4B 02 F6 | 	mov	_var14, _var19
05880     00 4B 86 F1 | 	sub	_var14, #256
05884     06 4A C6 F0 | 	sar	_var14, #6
05888     18 51 02 F6 | 	mov	_var17, _var01
0588c     02 50 66 F0 | 	shl	_var17, #2
05890     7C 0E 86 F1 | 	sub	objptr, #124
05894     07 57 02 F6 | 	mov	_var20, objptr
05898     07 51 02 F1 | 	add	_var17, objptr
0589c     28 4B 62 FC | 	wrlong	_var14, _var17
058a0     0F 0F 86 F1 | 	sub	objptr, #271
058a4                 | LR__0236
058a4     8B 0F 06 F1 | 	add	objptr, #395
058a8     07 31 02 F1 | 	add	_var01, objptr
058ac     18 59 C2 FA | 	rdbyte	_var21, _var01
058b0     20 59 02 F1 | 	add	_var21, _var09
058b4     3F 58 06 F5 | 	and	_var21, #63
058b8                 | ' 
058b8                 | '   tremoloPos[channel] := (tremoloPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
058b8     18 59 42 FC | 	wrbyte	_var21, _var01
058bc     8B 0F 86 F1 | 	sub	objptr, #395
058c0                 | _trackerplayer_spin2_doTremolo_ret
058c0     2D 00 64 FD | 	ret
058c4                 | 
058c4                 | ' 
058c4                 | ' 
058c4                 | ' PRI doVibrato(channel) | depth, sineWave, speed
058c4                 | _trackerplayer_spin2_doVibrato
058c4     2E 31 02 F6 | 	mov	_var01, arg01
058c8     18 33 02 F6 | 	mov	_var02, _var01
058cc     87 0F 06 F1 | 	add	objptr, #391
058d0     07 33 02 F1 | 	add	_var02, objptr
058d4     05 00 00 FF 
058d8     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
058dc     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
058e0     19 37 C2 FA | 	rdbyte	_var04, _var02
058e4     02 36 66 F0 | 	shl	_var04, #2
058e8     1A 37 02 F1 | 	add	_var04, _var03
058ec                 | ' 
058ec                 | '   sineWave := long[@vibratoWaveform][vibratoPos[channel]]
058ec     1B 39 02 FB | 	rdlong	_var05, _var04
058f0     18 3B 02 F6 | 	mov	_var06, _var01
058f4     45 0E 06 F1 | 	add	objptr, #69
058f8     07 3B 02 F1 | 	add	_var06, objptr
058fc                 | '   depth    := cmd4_memoryY[channel]
058fc     1D 3D C2 FA | 	rdbyte	_var07, _var06
05900     18 3F 02 F6 | 	mov	_var08, _var01
05904     04 0E 06 F1 | 	add	objptr, #4
05908     07 3F 02 F1 | 	add	_var08, objptr
0590c                 | '   speed    := cmd4_memoryX[channel]
0590c     1F 41 C2 FA | 	rdbyte	_var09, _var08
05910                 | ' 
05910                 | '   CASE_FAST vibratoType[channel]
05910     18 43 02 F6 | 	mov	_var10, _var01
05914     10 0E 86 F1 | 	sub	objptr, #16
05918     07 45 02 F6 | 	mov	_var11, objptr
0591c     07 43 02 F1 | 	add	_var10, objptr
05920     21 47 C2 FA | 	rdbyte	_var12, _var10
05924     03 46 26 F3 | 	fle	_var12, #3
05928     23 49 02 F6 | 	mov	_var13, _var12
0592c     05 00 00 FF 
05930     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
05934     C0 0F 86 F1 | 	sub	objptr, #448
05938     30 48 62 FD | 	jmprel	_var13
0593c                 | LR__0237
0593c     0C 00 90 FD | 	jmp	#LR__0238
05940     30 00 90 FD | 	jmp	#LR__0239
05944     6C 00 90 FD | 	jmp	#LR__0240
05948     B4 00 90 FD | 	jmp	#LR__0241
0594c                 | LR__0238
0594c                 | ' 
0594c                 | '     0: deltaPeriod[channel] := (depth * sineWave) SAR 7                                 ' Sine wave
0594c     1C 3D 02 FD | 	qmul	_var07, _var05
05950     18 4A 62 FD | 	getqx	_var14
05954     07 4A C6 F0 | 	sar	_var14, #7
05958     18 4D 02 F6 | 	mov	_var15, _var01
0595c     02 4C 66 F0 | 	shl	_var15, #2
05960     EF 0E 06 F1 | 	add	objptr, #239
05964     07 4D 02 F1 | 	add	_var15, objptr
05968     26 4B 62 FC | 	wrlong	_var14, _var15
0596c     EF 0E 86 F1 | 	sub	objptr, #239
05970     8C 00 90 FD | 	jmp	#LR__0241
05974                 | LR__0239
05974                 | '     1: deltaPeriod[channel] := (depth * (vibratoPos[channel] << 3) - 256) SAR 7         ' Ramp down wave
05974     18 4D 02 F6 | 	mov	_var15, _var01
05978     87 0F 06 F1 | 	add	objptr, #391
0597c     07 4D 02 F1 | 	add	_var15, objptr
05980     26 4F C2 FA | 	rdbyte	_var16, _var15
05984     03 4E 66 F0 | 	shl	_var16, #3
05988     27 3D 02 FD | 	qmul	_var07, _var16
0598c     18 4A 62 FD | 	getqx	_var14
05990     00 4B 86 F1 | 	sub	_var14, #256
05994     07 4A C6 F0 | 	sar	_var14, #7
05998     18 51 02 F6 | 	mov	_var17, _var01
0599c     02 50 66 F0 | 	shl	_var17, #2
059a0     98 0E 86 F1 | 	sub	objptr, #152
059a4     07 51 02 F1 | 	add	_var17, objptr
059a8     28 4B 62 FC | 	wrlong	_var14, _var17
059ac     EF 0E 86 F1 | 	sub	objptr, #239
059b0     4C 00 90 FD | 	jmp	#LR__0241
059b4                 | LR__0240
059b4                 | '     2: deltaPeriod[channel] := (depth * ((vibratoPos[channel] & 32) << 4) - 256) SAR 7  ' Square wave
059b4     18 4D 02 F6 | 	mov	_var15, _var01
059b8     87 0F 06 F1 | 	add	objptr, #391
059bc     07 53 02 F6 | 	mov	_var18, objptr
059c0     07 4D 02 F1 | 	add	_var15, objptr
059c4     26 4F C2 FA | 	rdbyte	_var16, _var15
059c8     20 4E 06 F5 | 	and	_var16, #32
059cc     04 4E 66 F0 | 	shl	_var16, #4
059d0     27 3D 02 FD | 	qmul	_var07, _var16
059d4     18 54 62 FD | 	getqx	_var19
059d8     2A 4B 02 F6 | 	mov	_var14, _var19
059dc     00 4B 86 F1 | 	sub	_var14, #256
059e0     07 4A C6 F0 | 	sar	_var14, #7
059e4     18 51 02 F6 | 	mov	_var17, _var01
059e8     02 50 66 F0 | 	shl	_var17, #2
059ec     98 0E 86 F1 | 	sub	objptr, #152
059f0     07 57 02 F6 | 	mov	_var20, objptr
059f4     07 51 02 F1 | 	add	_var17, objptr
059f8     28 4B 62 FC | 	wrlong	_var14, _var17
059fc     EF 0E 86 F1 | 	sub	objptr, #239
05a00                 | LR__0241
05a00     87 0F 06 F1 | 	add	objptr, #391
05a04     07 31 02 F1 | 	add	_var01, objptr
05a08     18 59 C2 FA | 	rdbyte	_var21, _var01
05a0c     20 59 02 F1 | 	add	_var21, _var09
05a10     3F 58 06 F5 | 	and	_var21, #63
05a14                 | ' 
05a14                 | '   vibratoPos[channel] := (vibratoPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
05a14     18 59 42 FC | 	wrbyte	_var21, _var01
05a18     87 0F 86 F1 | 	sub	objptr, #391
05a1c                 | _trackerplayer_spin2_doVibrato_ret
05a1c     2D 00 64 FD | 	ret
05a20                 | 
05a20                 | ' 
05a20                 | ' 
05a20                 | ' PRI doPortamento(channel, period) | i, j, periodStep, tempPeriod
05a20                 | _trackerplayer_spin2_doPortamento
05a20                 | ' 
05a20                 | '   if period == currPeriod[channel]
05a20     2E 31 02 F6 | 	mov	_var01, arg01
05a24     02 30 66 F0 | 	shl	_var01, #2
05a28     DF 0E 06 F1 | 	add	objptr, #223
05a2c     07 33 02 F6 | 	mov	_var02, objptr
05a30     07 31 02 F1 | 	add	_var01, objptr
05a34     18 35 02 FB | 	rdlong	_var03, _var01
05a38     1A 5F 0A F2 | 	cmp	arg02, _var03 wz
05a3c                 | '     return
05a3c     DF 0E 86 F1 | 	sub	objptr, #223
05a40     D4 01 90 AD |  if_e	jmp	#_trackerplayer_spin2_doPortamento_ret
05a44                 | ' 
05a44                 | '   if period > 0
05a44     00 5E 5E F2 | 	cmps	arg02, #0 wcz
05a48     1C 00 90 ED |  if_be	jmp	#LR__0242
05a4c     2E 37 02 F6 | 	mov	_var04, arg01
05a50     02 36 66 F0 | 	shl	_var04, #2
05a54     97 0F 06 F1 | 	add	objptr, #407
05a58     07 37 02 F1 | 	add	_var04, objptr
05a5c                 | '     portamentoPeriodMemory[channel] := period
05a5c     1B 5F 62 FC | 	wrlong	arg02, _var04
05a60                 | '   else
05a60     97 0F 86 F1 | 	sub	objptr, #407
05a64     18 00 90 FD | 	jmp	#LR__0243
05a68                 | LR__0242
05a68     2E 39 02 F6 | 	mov	_var05, arg01
05a6c     02 38 66 F0 | 	shl	_var05, #2
05a70     97 0F 06 F1 | 	add	objptr, #407
05a74     07 39 02 F1 | 	add	_var05, objptr
05a78                 | '     period := portamentoPeriodMemory[channel]
05a78     1C 5F 02 FB | 	rdlong	arg02, _var05
05a7c     97 0F 86 F1 | 	sub	objptr, #407
05a80                 | LR__0243
05a80                 | ' 
05a80                 | '   if period > currPeriod[channel]
05a80     2E 31 02 F6 | 	mov	_var01, arg01
05a84     02 30 66 F0 | 	shl	_var01, #2
05a88     DF 0E 06 F1 | 	add	objptr, #223
05a8c     07 31 02 F1 | 	add	_var01, objptr
05a90     18 35 02 FB | 	rdlong	_var03, _var01
05a94     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
05a98     DF 0E 86 F1 | 	sub	objptr, #223
05a9c     50 00 90 ED |  if_be	jmp	#LR__0244
05aa0     2E 3B 02 F6 | 	mov	_var06, arg01
05aa4     02 3A 66 F0 | 	shl	_var06, #2
05aa8     DF 0E 06 F1 | 	add	objptr, #223
05aac     07 3B 02 F1 | 	add	_var06, objptr
05ab0     2E 3D 02 F6 | 	mov	_var07, arg01
05ab4     E9 0E 06 F1 | 	add	objptr, #233
05ab8     1D 3F 02 FB | 	rdlong	_var08, _var06
05abc     07 3D 02 F1 | 	add	_var07, objptr
05ac0     1E 33 C2 FA | 	rdbyte	_var02, _var07
05ac4     19 3F 02 F1 | 	add	_var08, _var02
05ac8                 | '     currPeriod[channel] += cmd3_memoryZ[channel]
05ac8     1D 3F 62 FC | 	wrlong	_var08, _var06
05acc     2E 41 02 F6 | 	mov	_var09, arg01
05ad0     02 40 66 F0 | 	shl	_var09, #2
05ad4     E9 0E 86 F1 | 	sub	objptr, #233
05ad8     07 41 02 F1 | 	add	_var09, objptr
05adc     20 43 02 FB | 	rdlong	_var10, _var09
05ae0     2F 43 62 F3 | 	fles	_var10, arg02
05ae4                 | '     currPeriod[channel] <#= period
05ae4     20 43 62 FC | 	wrlong	_var10, _var09
05ae8     DF 0E 86 F1 | 	sub	objptr, #223
05aec     6C 00 90 FD | 	jmp	#LR__0246
05af0                 | LR__0244
05af0                 | ' 
05af0                 | '   elseif period < currPeriod[channel]
05af0     2E 31 02 F6 | 	mov	_var01, arg01
05af4     02 30 66 F0 | 	shl	_var01, #2
05af8     DF 0E 06 F1 | 	add	objptr, #223
05afc     07 31 02 F1 | 	add	_var01, objptr
05b00     18 35 02 FB | 	rdlong	_var03, _var01
05b04     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
05b08     DF 0E 86 F1 | 	sub	objptr, #223
05b0c     4C 00 90 3D |  if_ae	jmp	#LR__0245
05b10     2E 45 02 F6 | 	mov	_var11, arg01
05b14     02 44 66 F0 | 	shl	_var11, #2
05b18     DF 0E 06 F1 | 	add	objptr, #223
05b1c     07 45 02 F1 | 	add	_var11, objptr
05b20     2E 47 02 F6 | 	mov	_var12, arg01
05b24     E9 0E 06 F1 | 	add	objptr, #233
05b28     22 49 02 FB | 	rdlong	_var13, _var11
05b2c     07 47 02 F1 | 	add	_var12, objptr
05b30     23 33 C2 FA | 	rdbyte	_var02, _var12
05b34     19 49 82 F1 | 	sub	_var13, _var02
05b38                 | '     currPeriod[channel] -= cmd3_memoryZ[channel]
05b38     22 49 62 FC | 	wrlong	_var13, _var11
05b3c     2E 4B 02 F6 | 	mov	_var14, arg01
05b40     02 4A 66 F0 | 	shl	_var14, #2
05b44     E9 0E 86 F1 | 	sub	objptr, #233
05b48     07 4B 02 F1 | 	add	_var14, objptr
05b4c     25 4D 02 FB | 	rdlong	_var15, _var14
05b50     2F 4D 42 F3 | 	fges	_var15, arg02
05b54                 | '     currPeriod[channel] #>= period
05b54     25 4D 62 FC | 	wrlong	_var15, _var14
05b58     DF 0E 86 F1 | 	sub	objptr, #223
05b5c                 | LR__0245
05b5c                 | LR__0246
05b5c                 | ' 
05b5c                 | '   ' Handle glissando if activated
05b5c                 | '   if portaGlissando[channel] > 0
05b5c     2E 31 02 F6 | 	mov	_var01, arg01
05b60     BC 0F 06 F1 | 	add	objptr, #444
05b64     07 31 02 F1 | 	add	_var01, objptr
05b68     18 35 C2 FA | 	rdbyte	_var03, _var01
05b6c     00 34 5E F2 | 	cmps	_var03, #0 wcz
05b70     BC 0F 86 F1 | 	sub	objptr, #444
05b74     A0 00 90 ED |  if_be	jmp	#LR__0249
05b78     2E 4F 02 F6 | 	mov	_var16, arg01
05b7c     02 4E 66 F0 | 	shl	_var16, #2
05b80     DF 0E 06 F1 | 	add	objptr, #223
05b84     07 4F 02 F1 | 	add	_var16, objptr
05b88                 | ' 
05b88                 | '     tempPeriod := currPeriod[channel]
05b88     27 51 02 FB | 	rdlong	_var17, _var16
05b8c                 | ' 
05b8c                 | '     repeat i from 0 to LAST_POS_IN_PERIOD_TBL
05b8c     00 52 06 F6 | 	mov	_var18, #0
05b90     DF 0E 86 F1 | 	sub	objptr, #223
05b94     CC A4 9F FE | 	loc	pa,	#(@LR__0248-@LR__0247)
05b98     93 00 A0 FD | 	call	#FCACHE_LOAD_
05b9c                 | LR__0247
05b9c     06 00 00 FF 
05ba0     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05ba4     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
05ba8     2E 55 02 F6 | 	mov	_var19, arg01
05bac     D3 0E 06 F1 | 	add	objptr, #211
05bb0     07 55 02 F1 | 	add	_var19, objptr
05bb4     2A 33 C2 FA | 	rdbyte	_var02, _var19
05bb8     19 57 02 F6 | 	mov	_var20, _var02
05bbc     03 56 66 F0 | 	shl	_var20, #3
05bc0     19 57 02 F1 | 	add	_var20, _var02
05bc4     03 56 66 F0 | 	shl	_var20, #3
05bc8     2B 35 02 F1 | 	add	_var03, _var20
05bcc     29 59 02 F6 | 	mov	_var21, _var18
05bd0     01 58 66 F0 | 	shl	_var21, #1
05bd4     1A 59 02 F1 | 	add	_var21, _var03
05bd8                 | ' 
05bd8                 | '       periodStep := word[@periodTable + (currFineTune[channel] * BYTES_IN_PERIOD_TABLE)][i]
05bd8     2C 5B E2 FA | 	rdword	_var22, _var21
05bdc                 | '       if tempPeriod >= periodStep
05bdc     2D 51 5A F2 | 	cmps	_var17, _var22 wcz
05be0                 | '         i += 1000
05be0     06 00 00 FF 
05be4     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05be8     D3 0E 86 F1 | 	sub	objptr, #211
05bec     01 00 00 3F 
05bf0     E8 53 06 31 |  if_ae	add	_var18, ##1000
05bf4     01 52 06 F1 | 	add	_var18, #1
05bf8     24 52 5E F2 | 	cmps	_var18, #36 wcz
05bfc     9C FF 9F CD |  if_b	jmp	#LR__0247
05c00                 | LR__0248
05c00     28 5B 82 F1 | 	sub	_var22, _var17
05c04     02 5C 66 F0 | 	shl	arg01, #2
05c08     EF 0E 06 F1 | 	add	objptr, #239
05c0c     07 5D 02 F1 | 	add	arg01, objptr
05c10                 | ' 
05c10                 | '     deltaPeriod[channel] := periodStep - tempPeriod
05c10     2E 5B 62 FC | 	wrlong	_var22, arg01
05c14     EF 0E 86 F1 | 	sub	objptr, #239
05c18                 | LR__0249
05c18                 | _trackerplayer_spin2_doPortamento_ret
05c18     2D 00 64 FD | 	ret
05c1c                 | 
05c1c                 | ' 
05c1c                 | ' 
05c1c                 | ' PRI doVolumeSlide(channel)
05c1c                 | _trackerplayer_spin2_doVolumeSlide
05c1c                 | ' 
05c1c                 | '   if x > 0
05c1c     B7 0F 06 F1 | 	add	objptr, #439
05c20     07 31 C2 FA | 	rdbyte	_var01, objptr
05c24     B7 0F 86 F1 | 	sub	objptr, #439
05c28     00 30 5E F2 | 	cmps	_var01, #0 wcz
05c2c     28 00 90 ED |  if_be	jmp	#LR__0250
05c30     2E 33 02 F6 | 	mov	_var02, arg01
05c34     02 32 66 F0 | 	shl	_var02, #2
05c38     FF 0E 06 F1 | 	add	objptr, #255
05c3c     07 33 02 F1 | 	add	_var02, objptr
05c40     19 35 02 FB | 	rdlong	_var03, _var02
05c44     B8 0E 06 F1 | 	add	objptr, #184
05c48     07 37 C2 FA | 	rdbyte	_var04, objptr
05c4c     B7 0F 86 F1 | 	sub	objptr, #439
05c50     1B 35 02 F1 | 	add	_var03, _var04
05c54                 | '     currVolume[channel] += x
05c54     19 35 62 FC | 	wrlong	_var03, _var02
05c58                 | LR__0250
05c58                 | '   if y > 0
05c58     B8 0F 06 F1 | 	add	objptr, #440
05c5c     07 31 C2 FA | 	rdbyte	_var01, objptr
05c60     B8 0F 86 F1 | 	sub	objptr, #440
05c64     00 30 5E F2 | 	cmps	_var01, #0 wcz
05c68     24 00 90 ED |  if_be	jmp	#LR__0251
05c6c     02 5C 66 F0 | 	shl	arg01, #2
05c70     FF 0E 06 F1 | 	add	objptr, #255
05c74     07 5D 02 F1 | 	add	arg01, objptr
05c78     2E 39 02 FB | 	rdlong	_var05, arg01
05c7c     B9 0E 06 F1 | 	add	objptr, #185
05c80     07 37 C2 FA | 	rdbyte	_var04, objptr
05c84     B8 0F 86 F1 | 	sub	objptr, #440
05c88     1B 39 82 F1 | 	sub	_var05, _var04
05c8c                 | '     currVolume[channel] -= y
05c8c     2E 39 62 FC | 	wrlong	_var05, arg01
05c90                 | LR__0251
05c90                 | _trackerplayer_spin2_doVolumeSlide_ret
05c90     2D 00 64 FD | 	ret
05c94                 | hubexit
05c94     81 00 80 FD | 	jmp	#cogexit
05c98                 | 
05c98                 | __system___setbaud
05c98     14 0A 07 FB | 	rdlong	muldiva_, #20
05c9c     2E 0D 03 F6 | 	mov	muldivb_, arg01
05ca0     D0 00 A0 FD | 	call	#divide_
05ca4     40 7C 64 FD | 	dirl	#62
05ca8     40 7E 64 FD | 	dirl	#63
05cac     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
05cb0     10 0C 67 F0 | 	shl	muldivb_, #16
05cb4     07 5E 06 F6 | 	mov	arg02, #7
05cb8     86 5F 02 F1 | 	add	arg02, muldivb_
05cbc     3E F8 0C FC | 	wrpin	#124, #62
05cc0     3E 5E 16 FC | 	wxpin	arg02, #62
05cc4     3F 7C 0C FC | 	wrpin	#62, #63
05cc8     14 5E 06 F1 | 	add	arg02, #20
05ccc     3F 5E 16 FC | 	wxpin	arg02, #63
05cd0     41 7C 64 FD | 	dirh	#62
05cd4     41 7E 64 FD | 	dirh	#63
05cd8                 | __system___setbaud_ret
05cd8     2D 00 64 FD | 	ret
05cdc                 | 
05cdc                 | __system___txraw
05cdc     02 5A 05 F6 | 	mov	COUNT_, #2
05ce0     B0 00 A0 FD | 	call	#pushregs_
05ce4     2E 6B 02 F6 | 	mov	local01, arg01
05ce8     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
05cec     0C 00 90 5D |  if_ne	jmp	#LR__0252
05cf0     42 0F 00 FF 
05cf4     80 5C 06 F6 | 	mov	arg01, ##2000000
05cf8     9C FF BF FD | 	call	#__system___setbaud
05cfc                 | LR__0252
05cfc     3E 6A 26 FC | 	wypin	local01, #62
05d00     1F 02 64 FD | 	waitx	#1
05d04     00 A3 9F FE | 	loc	pa,	#(@LR__0254-@LR__0253)
05d08     93 00 A0 FD | 	call	#FCACHE_LOAD_
05d0c                 | LR__0253
05d0c     40 7C 74 FD | 	testp	#62 wc
05d10     F8 FF 9F 3D |  if_nc	jmp	#LR__0253
05d14                 | LR__0254
05d14     01 2A 06 F6 | 	mov	result1, #1
05d18     AF F0 03 F6 | 	mov	ptra, fp
05d1c     BF 00 A0 FD | 	call	#popregs_
05d20                 | __system___txraw_ret
05d20     2D 00 64 FD | 	ret
05d24                 | 
05d24                 | __system___rxraw
05d24     0D 5A 05 F6 | 	mov	COUNT_, #13
05d28     B0 00 A0 FD | 	call	#pushregs_
05d2c     2E 6B 02 F6 | 	mov	local01, arg01
05d30     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
05d34     0C 00 90 5D |  if_ne	jmp	#LR__0255
05d38     42 0F 00 FF 
05d3c     80 5C 06 F6 | 	mov	arg01, ##2000000
05d40     54 FF BF FD | 	call	#__system___setbaud
05d44                 | LR__0255
05d44     00 6A 0E F2 | 	cmp	local01, #0 wz
05d48     18 00 90 AD |  if_e	jmp	#LR__0256
05d4c     14 6E 06 FB | 	rdlong	local03, #20
05d50     0A 6E 46 F0 | 	shr	local03, #10
05d54     37 6B 02 FD | 	qmul	local01, local03
05d58     18 70 62 FD | 	getqx	local04
05d5c     1A 72 62 FD | 	getct	local05
05d60     38 73 02 F1 | 	add	local05, local04
05d64                 | LR__0256
05d64     01 74 66 F6 | 	neg	local06, #1
05d68     00 76 06 F6 | 	mov	local07, #0
05d6c     04 14 06 F1 | 	add	ptr___system__dat__, #4
05d70     0A 79 02 FB | 	rdlong	local08, ptr___system__dat__
05d74     04 14 86 F1 | 	sub	ptr___system__dat__, #4
05d78                 | LR__0257
05d78     08 78 16 F4 | 	testb	local08, #8 wc
05d7c     09 78 76 F4 | 	testbn	local08, #9 andc
05d80     0A 78 46 F0 | 	shr	local08, #10
05d84     01 76 06 C6 |  if_b	mov	local07, #1
05d88     10 00 90 CD |  if_b	jmp	#LR__0258
05d8c     40 7E 6C FD | 	testp	#63 wz
05d90     01 76 06 A6 |  if_e	mov	local07, #1
05d94     3F 78 8E AA |  if_e	rdpin	local08, #63
05d98     04 78 46 A0 |  if_e	shr	local08, #4
05d9c                 | LR__0258
05d9c     00 6C 06 F6 | 	mov	local02, #0
05da0     00 76 0E F2 | 	cmp	local07, #0 wz
05da4     01 6C 66 56 |  if_ne	neg	local02, #1
05da8     00 7A 06 F6 | 	mov	local09, #0
05dac     00 7C 06 F6 | 	mov	local10, #0
05db0     00 6A 0E F2 | 	cmp	local01, #0 wz
05db4     01 7C 66 56 |  if_ne	neg	local10, #1
05db8     00 7E 06 F6 | 	mov	local11, #0
05dbc     00 80 06 F6 | 	mov	local12, #0
05dc0     1A 82 62 FD | 	getct	local13
05dc4     39 83 82 F1 | 	sub	local13, local05
05dc8     00 82 5E F2 | 	cmps	local13, #0 wcz
05dcc     01 80 66 C6 |  if_b	neg	local12, #1
05dd0     00 80 0E F2 | 	cmp	local12, #0 wz
05dd4     01 7E 66 56 |  if_ne	neg	local11, #1
05dd8     3F 7D CA F7 | 	test	local10, local11 wz
05ddc     01 7A 66 56 |  if_ne	neg	local09, #1
05de0     3D 6D 4A F5 | 	or	local02, local09 wz
05de4     90 FF 9F AD |  if_e	jmp	#LR__0257
05de8     00 76 0E F2 | 	cmp	local07, #0 wz
05dec     3C 75 02 56 |  if_ne	mov	local06, local08
05df0     FF 74 06 55 |  if_ne	and	local06, #255
05df4     04 14 06 F1 | 	add	ptr___system__dat__, #4
05df8     0A 79 62 FC | 	wrlong	local08, ptr___system__dat__
05dfc     04 14 86 F1 | 	sub	ptr___system__dat__, #4
05e00     3A 2B 02 F6 | 	mov	result1, local06
05e04     AF F0 03 F6 | 	mov	ptra, fp
05e08     BF 00 A0 FD | 	call	#popregs_
05e0c                 | __system___rxraw_ret
05e0c     2D 00 64 FD | 	ret
05e10                 | 
05e10                 | __system____builtin_memmove
05e10     2E 31 02 F6 | 	mov	_var01, arg01
05e14     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
05e18     50 00 90 3D |  if_ae	jmp	#LR__0266
05e1c     00 A2 9F FE | 	loc	pa,	#(@LR__0260-@LR__0259)
05e20     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e24                 | LR__0259
05e24     03 60 5E F2 | 	cmps	arg03, #3 wcz
05e28     18 00 90 ED |  if_be	jmp	#LR__0261
05e2c     2F 33 02 FB | 	rdlong	_var02, arg02
05e30     2E 33 62 FC | 	wrlong	_var02, arg01
05e34     04 5C 06 F1 | 	add	arg01, #4
05e38     04 5E 06 F1 | 	add	arg02, #4
05e3c     04 60 86 F1 | 	sub	arg03, #4
05e40     E0 FF 9F FD | 	jmp	#LR__0259
05e44                 | LR__0260
05e44                 | LR__0261
05e44     30 35 0A F6 | 	mov	_var03, arg03 wz
05e48     4C 00 90 AD |  if_e	jmp	#LR__0272
05e4c     C4 A1 9F FE | 	loc	pa,	#(@LR__0264-@LR__0262)
05e50     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e54                 | LR__0262
05e54     1A 09 D8 FC | 	rep	@LR__0265, _var03
05e58                 | LR__0263
05e58     2F 33 C2 FA | 	rdbyte	_var02, arg02
05e5c     2E 33 42 FC | 	wrbyte	_var02, arg01
05e60     01 5C 06 F1 | 	add	arg01, #1
05e64     01 5E 06 F1 | 	add	arg02, #1
05e68                 | LR__0264
05e68                 | LR__0265
05e68     2C 00 90 FD | 	jmp	#LR__0272
05e6c                 | LR__0266
05e6c     30 5D 02 F1 | 	add	arg01, arg03
05e70     30 5F 02 F1 | 	add	arg02, arg03
05e74     30 37 0A F6 | 	mov	_var04, arg03 wz
05e78     1C 00 90 AD |  if_e	jmp	#LR__0271
05e7c     94 A1 9F FE | 	loc	pa,	#(@LR__0269-@LR__0267)
05e80     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e84                 | LR__0267
05e84     1B 09 D8 FC | 	rep	@LR__0270, _var04
05e88                 | LR__0268
05e88     01 5C 86 F1 | 	sub	arg01, #1
05e8c     01 5E 86 F1 | 	sub	arg02, #1
05e90     2F 33 C2 FA | 	rdbyte	_var02, arg02
05e94     2E 33 42 FC | 	wrbyte	_var02, arg01
05e98                 | LR__0269
05e98                 | LR__0270
05e98                 | LR__0271
05e98                 | LR__0272
05e98     18 2B 02 F6 | 	mov	result1, _var01
05e9c                 | __system____builtin_memmove_ret
05e9c     2D 00 64 FD | 	ret
05ea0                 | 
05ea0                 | __system__longmove
05ea0     2E 31 02 F6 | 	mov	_var01, arg01
05ea4     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
05ea8     28 00 90 3D |  if_ae	jmp	#LR__0277
05eac     30 33 0A F6 | 	mov	_var02, arg03 wz
05eb0     54 00 90 AD |  if_e	jmp	#LR__0283
05eb4     5C A1 9F FE | 	loc	pa,	#(@LR__0275-@LR__0273)
05eb8     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ebc                 | LR__0273
05ebc     19 09 D8 FC | 	rep	@LR__0276, _var02
05ec0                 | LR__0274
05ec0     2F 35 02 FB | 	rdlong	_var03, arg02
05ec4     2E 35 62 FC | 	wrlong	_var03, arg01
05ec8     04 5C 06 F1 | 	add	arg01, #4
05ecc     04 5E 06 F1 | 	add	arg02, #4
05ed0                 | LR__0275
05ed0                 | LR__0276
05ed0     34 00 90 FD | 	jmp	#LR__0283
05ed4                 | LR__0277
05ed4     30 37 02 F6 | 	mov	_var04, arg03
05ed8     02 36 66 F0 | 	shl	_var04, #2
05edc     1B 5D 02 F1 | 	add	arg01, _var04
05ee0     1B 5F 02 F1 | 	add	arg02, _var04
05ee4     30 39 0A F6 | 	mov	_var05, arg03 wz
05ee8     1C 00 90 AD |  if_e	jmp	#LR__0282
05eec     24 A1 9F FE | 	loc	pa,	#(@LR__0280-@LR__0278)
05ef0     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ef4                 | LR__0278
05ef4     1C 09 D8 FC | 	rep	@LR__0281, _var05
05ef8                 | LR__0279
05ef8     04 5C 86 F1 | 	sub	arg01, #4
05efc     04 5E 86 F1 | 	sub	arg02, #4
05f00     2F 35 02 FB | 	rdlong	_var03, arg02
05f04     2E 35 62 FC | 	wrlong	_var03, arg01
05f08                 | LR__0280
05f08                 | LR__0281
05f08                 | LR__0282
05f08                 | LR__0283
05f08     18 2B 02 F6 | 	mov	result1, _var01
05f0c                 | __system__longmove_ret
05f0c     2D 00 64 FD | 	ret
05f10                 | 
05f10                 | __system____topofstack
05f10     00 5A 05 F6 | 	mov	COUNT_, #0
05f14     B0 00 A0 FD | 	call	#pushregs_
05f18     0C F0 07 F1 | 	add	ptra, #12
05f1c     04 5E 05 F1 | 	add	fp, #4
05f20     AF 5C 62 FC | 	wrlong	arg01, fp
05f24     AF 2A 02 F6 | 	mov	result1, fp
05f28     04 5E 85 F1 | 	sub	fp, #4
05f2c     AF F0 03 F6 | 	mov	ptra, fp
05f30     BF 00 A0 FD | 	call	#popregs_
05f34                 | __system____topofstack_ret
05f34     2D 00 64 FD | 	ret
05f38                 | 
05f38                 | __system___make_methodptr
05f38     04 5A 05 F6 | 	mov	COUNT_, #4
05f3c     B0 00 A0 FD | 	call	#pushregs_
05f40     2E 6B 02 F6 | 	mov	local01, arg01
05f44     2F 6D 02 F6 | 	mov	local02, arg02
05f48     08 5C 06 F6 | 	mov	arg01, #8
05f4c     5C 0C B0 FD | 	call	#__system___gc_alloc_managed
05f50     15 6F 0A F6 | 	mov	local03, result1 wz
05f54     10 00 90 AD |  if_e	jmp	#LR__0284
05f58     37 6B 62 FC | 	wrlong	local01, local03
05f5c     37 71 02 F6 | 	mov	local04, local03
05f60     04 70 06 F1 | 	add	local04, #4
05f64     38 6D 62 FC | 	wrlong	local02, local04
05f68                 | LR__0284
05f68     37 2B 02 F6 | 	mov	result1, local03
05f6c     AF F0 03 F6 | 	mov	ptra, fp
05f70     BF 00 A0 FD | 	call	#popregs_
05f74                 | __system___make_methodptr_ret
05f74     2D 00 64 FD | 	ret
05f78                 | 
05f78                 | __system___lockmem
05f78     02 5A 05 F6 | 	mov	COUNT_, #2
05f7c     B0 00 A0 FD | 	call	#pushregs_
05f80     01 2A 62 FD | 	cogid	result1
05f84     15 6B 02 F6 | 	mov	local01, result1
05f88     00 6B 06 F1 | 	add	local01, #256
05f8c                 | LR__0285
05f8c     2E 6D 0A FB | 	rdlong	local02, arg01 wz
05f90     2E 6B 62 AC |  if_e	wrlong	local01, arg01
05f94     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05f98     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05f9c     35 6D 0A F2 | 	cmp	local02, local01 wz
05fa0     E8 FF 9F 5D |  if_ne	jmp	#LR__0285
05fa4     AF F0 03 F6 | 	mov	ptra, fp
05fa8     BF 00 A0 FD | 	call	#popregs_
05fac                 | __system___lockmem_ret
05fac     2D 00 64 FD | 	ret
05fb0                 | 
05fb0                 | __system___string_concat
05fb0     07 5A 05 F6 | 	mov	COUNT_, #7
05fb4     B0 00 A0 FD | 	call	#pushregs_
05fb8     2E 6B 02 F6 | 	mov	local01, arg01
05fbc     2F 6D 02 F6 | 	mov	local02, arg02
05fc0     35 5D 02 F6 | 	mov	arg01, local01
05fc4     00 6E 06 F6 | 	mov	local03, #0
05fc8     44 A0 9F FE | 	loc	pa,	#(@LR__0287-@LR__0286)
05fcc     93 00 A0 FD | 	call	#FCACHE_LOAD_
05fd0                 | LR__0286
05fd0     2E 71 CA FA | 	rdbyte	local04, arg01 wz
05fd4     01 6E 06 51 |  if_ne	add	local03, #1
05fd8     01 5C 06 51 |  if_ne	add	arg01, #1
05fdc     F0 FF 9F 5D |  if_ne	jmp	#LR__0286
05fe0                 | LR__0287
05fe0     37 73 02 F6 | 	mov	local05, local03
05fe4     36 5D 02 F6 | 	mov	arg01, local02
05fe8     00 6E 06 F6 | 	mov	local03, #0
05fec     20 A0 9F FE | 	loc	pa,	#(@LR__0289-@LR__0288)
05ff0     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ff4                 | LR__0288
05ff4     2E 71 CA FA | 	rdbyte	local04, arg01 wz
05ff8     01 6E 06 51 |  if_ne	add	local03, #1
05ffc     01 5C 06 51 |  if_ne	add	arg01, #1
06000     F0 FF 9F 5D |  if_ne	jmp	#LR__0288
06004                 | LR__0289
06004     37 2B 02 F6 | 	mov	result1, local03
06008     15 75 02 F6 | 	mov	local06, result1
0600c     39 5D 02 F6 | 	mov	arg01, local05
06010     3A 5D 02 F1 | 	add	arg01, local06
06014     01 5C 06 F1 | 	add	arg01, #1
06018     90 0B B0 FD | 	call	#__system___gc_alloc_managed
0601c     15 77 0A F6 | 	mov	local07, result1 wz
06020     28 00 90 AD |  if_e	jmp	#LR__0290
06024     3B 5D 02 F6 | 	mov	arg01, local07
06028     35 5F 02 F6 | 	mov	arg02, local01
0602c     39 61 02 F6 | 	mov	arg03, local05
06030     DC FD BF FD | 	call	#__system____builtin_memmove
06034     3B 5D 02 F6 | 	mov	arg01, local07
06038     39 5D 02 F1 | 	add	arg01, local05
0603c     01 74 06 F1 | 	add	local06, #1
06040     36 5F 02 F6 | 	mov	arg02, local02
06044     3A 61 02 F6 | 	mov	arg03, local06
06048     C4 FD BF FD | 	call	#__system____builtin_memmove
0604c                 | LR__0290
0604c     3B 2B 02 F6 | 	mov	result1, local07
06050     AF F0 03 F6 | 	mov	ptra, fp
06054     BF 00 A0 FD | 	call	#popregs_
06058                 | __system___string_concat_ret
06058     2D 00 64 FD | 	ret
0605c                 | 
0605c                 | __system___tx
0605c     02 5A 05 F6 | 	mov	COUNT_, #2
06060     B0 00 A0 FD | 	call	#pushregs_
06064     2E 6B 02 F6 | 	mov	local01, arg01
06068     0A 6A 0E F2 | 	cmp	local01, #10 wz
0606c     20 00 90 5D |  if_ne	jmp	#LR__0291
06070     08 14 06 F1 | 	add	ptr___system__dat__, #8
06074     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
06078     08 14 86 F1 | 	sub	ptr___system__dat__, #8
0607c     02 6C CE F7 | 	test	local02, #2 wz
06080     0C 00 90 AD |  if_e	jmp	#LR__0291
06084     0D 6C 06 F6 | 	mov	local02, #13
06088     0D 5C 06 F6 | 	mov	arg01, #13
0608c     4C FC BF FD | 	call	#__system___txraw
06090                 | LR__0291
06090     35 5D 02 F6 | 	mov	arg01, local01
06094     44 FC BF FD | 	call	#__system___txraw
06098     AF F0 03 F6 | 	mov	ptra, fp
0609c     BF 00 A0 FD | 	call	#popregs_
060a0                 | __system___tx_ret
060a0     2D 00 64 FD | 	ret
060a4                 | 
060a4                 | __system___rx
060a4     02 5A 05 F6 | 	mov	COUNT_, #2
060a8     B0 00 A0 FD | 	call	#pushregs_
060ac                 | LR__0292
060ac     00 5C 06 F6 | 	mov	arg01, #0
060b0     70 FC BF FD | 	call	#__system___rxraw
060b4     15 6B 02 F6 | 	mov	local01, result1
060b8     FF FF 7F FF 
060bc     FF 6B 0E F2 | 	cmp	local01, ##-1 wz
060c0     E8 FF 9F AD |  if_e	jmp	#LR__0292
060c4     0D 6A 0E F2 | 	cmp	local01, #13 wz
060c8     14 00 90 5D |  if_ne	jmp	#LR__0293
060cc     08 14 06 F1 | 	add	ptr___system__dat__, #8
060d0     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
060d4     08 14 86 F1 | 	sub	ptr___system__dat__, #8
060d8     02 6C CE F7 | 	test	local02, #2 wz
060dc     0A 6A 06 56 |  if_ne	mov	local01, #10
060e0                 | LR__0293
060e0     08 14 06 F1 | 	add	ptr___system__dat__, #8
060e4     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
060e8     08 14 86 F1 | 	sub	ptr___system__dat__, #8
060ec     01 6C CE F7 | 	test	local02, #1 wz
060f0     1C 00 90 AD |  if_e	jmp	#LR__0296
060f4     7F 6A 0E F2 | 	cmp	local01, #127 wz
060f8     0C 00 90 5D |  if_ne	jmp	#LR__0294
060fc     08 5C 06 F6 | 	mov	arg01, #8
06100     58 FF BF FD | 	call	#__system___tx
06104     08 00 90 FD | 	jmp	#LR__0295
06108                 | LR__0294
06108     35 5D 02 F6 | 	mov	arg01, local01
0610c     4C FF BF FD | 	call	#__system___tx
06110                 | LR__0295
06110                 | LR__0296
06110     35 2B 02 F6 | 	mov	result1, local01
06114     AF F0 03 F6 | 	mov	ptra, fp
06118     BF 00 A0 FD | 	call	#popregs_
0611c                 | __system___rx_ret
0611c     2D 00 64 FD | 	ret
06120                 | 
06120                 | __system___pinread
06120     20 5C CE F7 | 	test	arg01, #32 wz
06124     FF 31 02 56 |  if_ne	mov	_var01, inb
06128     FE 31 02 A6 |  if_e	mov	_var01, ina
0612c     18 2B 02 F6 | 	mov	result1, _var01
06130     2E 2B 42 F0 | 	shr	result1, arg01
06134     06 5C 46 F0 | 	shr	arg01, #6
06138     2E 2B 42 F7 | 	zerox	result1, arg01
0613c                 | __system___pinread_ret
0613c     2D 00 64 FD | 	ret
06140                 | 
06140                 | __system___waitms
06140     03 5A 05 F6 | 	mov	COUNT_, #3
06144     B0 00 A0 FD | 	call	#pushregs_
06148     2E 6B 02 F6 | 	mov	local01, arg01
0614c     14 6C 06 FB | 	rdlong	local02, #20
06150     C4 9E 9F FE | 	loc	pa,	#(@LR__0298-@LR__0297)
06154     93 00 A0 FD | 	call	#FCACHE_LOAD_
06158                 | LR__0297
06158     01 00 00 FF 
0615c     E8 6B 5E F2 | 	cmps	local01, ##1000 wcz
06160     1F 6C 62 1D |  if_a	waitx	local02
06164     01 00 00 1F 
06168     E8 6B 86 11 |  if_a	sub	local01, ##1000
0616c     E8 FF 9F 1D |  if_a	jmp	#LR__0297
06170                 | LR__0298
06170     0C 14 06 F1 | 	add	ptr___system__dat__, #12
06174     0A 6F 0A FB | 	rdlong	local03, ptr___system__dat__ wz
06178     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
0617c     20 00 90 5D |  if_ne	jmp	#LR__0299
06180     36 0B 03 F6 | 	mov	muldiva_, local02
06184     01 00 00 FF 
06188     E8 0D 07 F6 | 	mov	muldivb_, ##1000
0618c     CC 00 A0 FD | 	call	#unsdivide_
06190     86 6F 02 F6 | 	mov	local03, muldivb_
06194     0C 14 06 F1 | 	add	ptr___system__dat__, #12
06198     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
0619c     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
061a0                 | LR__0299
061a0     00 6A 5E F2 | 	cmps	local01, #0 wcz
061a4     37 6B 02 1D |  if_a	qmul	local01, local03
061a8     18 5C 62 1D |  if_a	getqx	arg01
061ac     1F 5C 62 1D |  if_a	waitx	arg01
061b0     AF F0 03 F6 | 	mov	ptra, fp
061b4     BF 00 A0 FD | 	call	#popregs_
061b8                 | __system___waitms_ret
061b8     2D 00 64 FD | 	ret
061bc                 | 
061bc                 | __system___waitus
061bc     02 5A 05 F6 | 	mov	COUNT_, #2
061c0     B0 00 A0 FD | 	call	#pushregs_
061c4     2E 6B 02 F6 | 	mov	local01, arg01
061c8     10 14 06 F1 | 	add	ptr___system__dat__, #16
061cc     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
061d0     10 14 86 F1 | 	sub	ptr___system__dat__, #16
061d4     20 00 90 5D |  if_ne	jmp	#LR__0300
061d8     14 0A 07 FB | 	rdlong	muldiva_, #20
061dc     A1 07 00 FF 
061e0     40 0C 07 F6 | 	mov	muldivb_, ##1000000
061e4     CC 00 A0 FD | 	call	#unsdivide_
061e8     86 6D 02 F6 | 	mov	local02, muldivb_
061ec     10 14 06 F1 | 	add	ptr___system__dat__, #16
061f0     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
061f4     10 14 86 F1 | 	sub	ptr___system__dat__, #16
061f8                 | LR__0300
061f8     36 6B 02 FD | 	qmul	local01, local02
061fc     18 5C 62 FD | 	getqx	arg01
06200     1F 5C 62 FD | 	waitx	arg01
06204     AF F0 03 F6 | 	mov	ptra, fp
06208     BF 00 A0 FD | 	call	#popregs_
0620c                 | __system___waitus_ret
0620c     2D 00 64 FD | 	ret
06210                 | 
06210                 | __system___basic_open
06210     05 5A 05 F6 | 	mov	COUNT_, #5
06214     B0 00 A0 FD | 	call	#pushregs_
06218     2F 6B 02 F6 | 	mov	local01, arg02
0621c     30 6D 02 F6 | 	mov	local02, arg03
06220     31 6F 02 F6 | 	mov	local03, arg04
06224     88 11 B0 FD | 	call	#__system____getftab
06228     15 71 0A F6 | 	mov	local04, result1 wz
0622c     18 00 90 5D |  if_ne	jmp	#LR__0301
06230     03 5D 02 F6 | 	mov	arg01, abortchain
06234     0C 5E 06 F6 | 	mov	arg02, #12
06238     01 60 06 F6 | 	mov	arg03, #1
0623c     F0 00 A0 FD | 	call	#__longjmp
06240     01 2A 66 F6 | 	neg	result1, #1
06244     70 00 90 FD | 	jmp	#LR__0305
06248                 | LR__0301
06248     00 6A 0E F2 | 	cmp	local01, #0 wz
0624c     48 00 90 AD |  if_e	jmp	#LR__0303
06250     04 5C 06 F6 | 	mov	arg01, #4
06254     54 09 B0 FD | 	call	#__system___gc_alloc_managed
06258     15 73 0A F6 | 	mov	local05, result1 wz
0625c     18 00 90 5D |  if_ne	jmp	#LR__0302
06260     03 5D 02 F6 | 	mov	arg01, abortchain
06264     07 5E 06 F6 | 	mov	arg02, #7
06268     01 60 06 F6 | 	mov	arg03, #1
0626c     F0 00 A0 FD | 	call	#__longjmp
06270     01 2A 66 F6 | 	neg	result1, #1
06274     40 00 90 FD | 	jmp	#LR__0305
06278                 | LR__0302
06278     39 6B 62 FC | 	wrlong	local01, local05
0627c     08 5F 02 F6 | 	mov	arg02, ptr___struct___bas_wrap_sender_tx_
06280     39 5D 02 F6 | 	mov	arg01, local05
06284     B0 FC BF FD | 	call	#__system___make_methodptr
06288     18 70 06 F1 | 	add	local04, #24
0628c     38 2B 62 FC | 	wrlong	result1, local04
06290     18 70 86 F1 | 	sub	local04, #24
06294     0C 00 90 FD | 	jmp	#LR__0304
06298                 | LR__0303
06298     18 70 06 F1 | 	add	local04, #24
0629c     38 6B 62 FC | 	wrlong	local01, local04
062a0     18 70 86 F1 | 	sub	local04, #24
062a4                 | LR__0304
062a4     1C 70 06 F1 | 	add	local04, #28
062a8     38 6D 62 FC | 	wrlong	local02, local04
062ac     04 70 06 F1 | 	add	local04, #4
062b0     38 6F 62 FC | 	wrlong	local03, local04
062b4     00 2A 06 F6 | 	mov	result1, #0
062b8                 | LR__0305
062b8     AF F0 03 F6 | 	mov	ptra, fp
062bc     BF 00 A0 FD | 	call	#popregs_
062c0                 | __system___basic_open_ret
062c0     2D 00 64 FD | 	ret
062c4                 | 
062c4                 | __system___basic_print_char
062c4     05 5A 05 F6 | 	mov	COUNT_, #5
062c8     B0 00 A0 FD | 	call	#pushregs_
062cc     2F 6B 02 F6 | 	mov	local01, arg02
062d0     A0 12 B0 FD | 	call	#__system___gettxfunc
062d4     15 6D 0A F6 | 	mov	local02, result1 wz
062d8     00 2A 06 A6 |  if_e	mov	result1, #0
062dc     24 00 90 AD |  if_e	jmp	#LR__0306
062e0     36 6F 02 FB | 	rdlong	local03, local02
062e4     04 6C 06 F1 | 	add	local02, #4
062e8     36 71 02 FB | 	rdlong	local04, local02
062ec     35 5D 02 F6 | 	mov	arg01, local01
062f0     07 73 02 F6 | 	mov	local05, objptr
062f4     37 0F 02 F6 | 	mov	objptr, local03
062f8     2D 70 62 FD | 	call	local04
062fc     39 0F 02 F6 | 	mov	objptr, local05
06300     01 2A 06 F6 | 	mov	result1, #1
06304                 | LR__0306
06304     AF F0 03 F6 | 	mov	ptra, fp
06308     BF 00 A0 FD | 	call	#popregs_
0630c                 | __system___basic_print_char_ret
0630c     2D 00 64 FD | 	ret
06310                 | 
06310                 | __system___basic_print_string
06310     03 5A 05 F6 | 	mov	COUNT_, #3
06314     B0 00 A0 FD | 	call	#pushregs_
06318     2F 6B 02 F6 | 	mov	local01, arg02
0631c     30 6D 02 F6 | 	mov	local02, arg03
06320     50 12 B0 FD | 	call	#__system___gettxfunc
06324     15 6F 0A F6 | 	mov	local03, result1 wz
06328     00 2A 06 A6 |  if_e	mov	result1, #0
0632c     1C 00 90 AD |  if_e	jmp	#LR__0307
06330     00 6A 0E F2 | 	cmp	local01, #0 wz
06334     00 2A 06 A6 |  if_e	mov	result1, #0
06338     10 00 90 AD |  if_e	jmp	#LR__0307
0633c     37 5D 02 F6 | 	mov	arg01, local03
06340     36 5F 02 F6 | 	mov	arg02, local02
06344     35 61 02 F6 | 	mov	arg03, local01
06348     B0 00 B0 FD | 	call	#__system___fmtstr
0634c                 | LR__0307
0634c     AF F0 03 F6 | 	mov	ptra, fp
06350     BF 00 A0 FD | 	call	#popregs_
06354                 | __system___basic_print_string_ret
06354     2D 00 64 FD | 	ret
06358                 | 
06358                 | __system___basic_print_integer
06358     04 5A 05 F6 | 	mov	COUNT_, #4
0635c     B0 00 A0 FD | 	call	#pushregs_
06360     2F 6B 02 F6 | 	mov	local01, arg02
06364     30 6D 02 F6 | 	mov	local02, arg03
06368     31 6F 02 F6 | 	mov	local03, arg04
0636c     04 12 B0 FD | 	call	#__system___gettxfunc
06370     15 71 0A F6 | 	mov	local04, result1 wz
06374     00 2A 06 A6 |  if_e	mov	result1, #0
06378     14 00 90 AD |  if_e	jmp	#LR__0308
0637c     38 5D 02 F6 | 	mov	arg01, local04
06380     36 5F 02 F6 | 	mov	arg02, local02
06384     35 61 02 F6 | 	mov	arg03, local01
06388     37 63 02 F6 | 	mov	arg04, local03
0638c     60 01 B0 FD | 	call	#__system___fmtnum
06390                 | LR__0308
06390     AF F0 03 F6 | 	mov	ptra, fp
06394     BF 00 A0 FD | 	call	#popregs_
06398                 | __system___basic_print_integer_ret
06398     2D 00 64 FD | 	ret
0639c                 | 
0639c                 | __system___fmtchar
0639c     00 5A 05 F6 | 	mov	COUNT_, #0
063a0     B0 00 A0 FD | 	call	#pushregs_
063a4     18 F0 07 F1 | 	add	ptra, #24
063a8     04 5E 05 F1 | 	add	fp, #4
063ac     AF 5C 62 FC | 	wrlong	arg01, fp
063b0     04 5E 05 F1 | 	add	fp, #4
063b4     AF 5E 62 FC | 	wrlong	arg02, fp
063b8     04 5E 05 F1 | 	add	fp, #4
063bc     AF 60 62 FC | 	wrlong	arg03, fp
063c0     04 5E 05 F1 | 	add	fp, #4
063c4     AF 60 42 FC | 	wrbyte	arg03, fp
063c8     01 5E 05 F1 | 	add	fp, #1
063cc     AF 00 48 FC | 	wrbyte	#0, fp
063d0     01 5E 85 F1 | 	sub	fp, #1
063d4     AF 60 02 F6 | 	mov	arg03, fp
063d8     0C 5E 85 F1 | 	sub	fp, #12
063dc     AF 5C 02 FB | 	rdlong	arg01, fp
063e0     04 5E 05 F1 | 	add	fp, #4
063e4     AF 5E 02 FB | 	rdlong	arg02, fp
063e8     08 5E 85 F1 | 	sub	fp, #8
063ec     0C 00 B0 FD | 	call	#__system___fmtstr
063f0     AF F0 03 F6 | 	mov	ptra, fp
063f4     BF 00 A0 FD | 	call	#popregs_
063f8                 | __system___fmtchar_ret
063f8     2D 00 64 FD | 	ret
063fc                 | 
063fc                 | __system___fmtstr
063fc     0E 5A 05 F6 | 	mov	COUNT_, #14
06400     B0 00 A0 FD | 	call	#pushregs_
06404     2E 6B 02 F6 | 	mov	local01, arg01
06408     2F 6D 02 F6 | 	mov	local02, arg02
0640c     30 6F 02 F6 | 	mov	local03, arg03
06410     36 71 02 F6 | 	mov	local04, local02
06414     FF 70 06 F5 | 	and	local04, #255
06418     37 5D 02 F6 | 	mov	arg01, local03
0641c     00 72 06 F6 | 	mov	local05, #0
06420     EC 9B 9F FE | 	loc	pa,	#(@LR__0310-@LR__0309)
06424     93 00 A0 FD | 	call	#FCACHE_LOAD_
06428                 | LR__0309
06428     2E 75 CA FA | 	rdbyte	local06, arg01 wz
0642c     01 72 06 51 |  if_ne	add	local05, #1
06430     01 5C 06 51 |  if_ne	add	arg01, #1
06434     F0 FF 9F 5D |  if_ne	jmp	#LR__0309
06438                 | LR__0310
06438     39 2B 02 F6 | 	mov	result1, local05
0643c     15 77 02 F6 | 	mov	local07, result1
06440     00 70 0E F2 | 	cmp	local04, #0 wz
06444     04 00 90 AD |  if_e	jmp	#LR__0311
06448     38 77 7A F3 | 	fles	local07, local04 wcz
0644c                 | LR__0311
0644c     35 5D 02 F6 | 	mov	arg01, local01
06450     36 5F 02 F6 | 	mov	arg02, local02
06454     3B 61 02 F6 | 	mov	arg03, local07
06458     02 62 06 F6 | 	mov	arg04, #2
0645c     C8 0F B0 FD | 	call	#__system___fmtpad
06460     15 79 02 F6 | 	mov	local08, result1
06464     00 78 5E F2 | 	cmps	local08, #0 wcz
06468     3C 2B 02 C6 |  if_b	mov	result1, local08
0646c     74 00 90 CD |  if_b	jmp	#LR__0314
06470     00 76 5E F2 | 	cmps	local07, #0 wcz
06474     44 00 90 ED |  if_be	jmp	#LR__0313
06478     3B 7B 02 F6 | 	mov	local09, local07
0647c                 | LR__0312
0647c     35 7D 02 F6 | 	mov	local10, local01
06480     3E 7F 02 FB | 	rdlong	local11, local10
06484     04 7C 06 F1 | 	add	local10, #4
06488     3E 81 02 FB | 	rdlong	local12, local10
0648c     37 5D C2 FA | 	rdbyte	arg01, local03
06490     07 83 02 F6 | 	mov	local13, objptr
06494     3F 0F 02 F6 | 	mov	objptr, local11
06498     01 6E 06 F1 | 	add	local03, #1
0649c     2D 80 62 FD | 	call	local12
064a0     41 0F 02 F6 | 	mov	objptr, local13
064a4     15 85 02 F6 | 	mov	local14, result1
064a8     00 84 5E F2 | 	cmps	local14, #0 wcz
064ac     42 2B 02 C6 |  if_b	mov	result1, local14
064b0     30 00 90 CD |  if_b	jmp	#LR__0314
064b4     42 79 02 F1 | 	add	local08, local14
064b8     F0 7B 6E FB | 	djnz	local09, #LR__0312
064bc                 | LR__0313
064bc     35 5D 02 F6 | 	mov	arg01, local01
064c0     36 5F 02 F6 | 	mov	arg02, local02
064c4     3B 61 02 F6 | 	mov	arg03, local07
064c8     01 62 06 F6 | 	mov	arg04, #1
064cc     58 0F B0 FD | 	call	#__system___fmtpad
064d0     15 85 02 F6 | 	mov	local14, result1
064d4     00 84 5E F2 | 	cmps	local14, #0 wcz
064d8     42 2B 02 C6 |  if_b	mov	result1, local14
064dc     42 79 02 31 |  if_ae	add	local08, local14
064e0     3C 2B 02 36 |  if_ae	mov	result1, local08
064e4                 | LR__0314
064e4     AF F0 03 F6 | 	mov	ptra, fp
064e8     BF 00 A0 FD | 	call	#popregs_
064ec                 | __system___fmtstr_ret
064ec     2D 00 64 FD | 	ret
064f0                 | 
064f0                 | __system___fmtnum
064f0     07 5A 05 F6 | 	mov	COUNT_, #7
064f4     B0 00 A0 FD | 	call	#pushregs_
064f8     78 F0 07 F1 | 	add	ptra, #120
064fc     04 5E 05 F1 | 	add	fp, #4
06500     AF 5C 62 FC | 	wrlong	arg01, fp
06504     04 5E 05 F1 | 	add	fp, #4
06508     AF 5E 62 FC | 	wrlong	arg02, fp
0650c     04 5E 05 F1 | 	add	fp, #4
06510     AF 60 62 FC | 	wrlong	arg03, fp
06514     04 5E 05 F1 | 	add	fp, #4
06518     AF 62 62 FC | 	wrlong	arg04, fp
0651c     04 5E 05 F1 | 	add	fp, #4
06520     AF 6A 02 F6 | 	mov	local01, fp
06524     44 5E 05 F1 | 	add	fp, #68
06528     AF 6A 62 FC | 	wrlong	local01, fp
0652c     04 5E 05 F1 | 	add	fp, #4
06530     AF 00 68 FC | 	wrlong	#0, fp
06534     54 5E 85 F1 | 	sub	fp, #84
06538     AF 6A 02 FB | 	rdlong	local01, fp
0653c     10 6A 46 F0 | 	shr	local01, #16
06540     3F 6A 06 F5 | 	and	local01, #63
06544     58 5E 05 F1 | 	add	fp, #88
06548     AF 6A 62 FC | 	wrlong	local01, fp
0654c     58 5E 85 F1 | 	sub	fp, #88
06550     AF 6A 02 FB | 	rdlong	local01, fp
06554     FF 6A 06 F5 | 	and	local01, #255
06558     5C 5E 05 F1 | 	add	fp, #92
0655c     AF 6A 62 FC | 	wrlong	local01, fp
06560     5C 5E 85 F1 | 	sub	fp, #92
06564     AF 6A 02 FB | 	rdlong	local01, fp
06568     1A 6A 46 F0 | 	shr	local01, #26
0656c     03 6A 06 F5 | 	and	local01, #3
06570     60 5E 05 F1 | 	add	fp, #96
06574     AF 6A 62 FC | 	wrlong	local01, fp
06578     08 5E 85 F1 | 	sub	fp, #8
0657c     AF 6A 02 FB | 	rdlong	local01, fp
06580     60 5E 85 F1 | 	sub	fp, #96
06584     00 6A 5E F2 | 	cmps	local01, #0 wcz
06588     14 00 90 ED |  if_be	jmp	#LR__0315
0658c     60 5E 05 F1 | 	add	fp, #96
06590     AF 6A 02 FB | 	rdlong	local01, fp
06594     01 6A 86 F1 | 	sub	local01, #1
06598     AF 6A 62 FC | 	wrlong	local01, fp
0659c     60 5E 85 F1 | 	sub	fp, #96
065a0                 | LR__0315
065a0     64 5E 05 F1 | 	add	fp, #100
065a4     AF 6C 02 FB | 	rdlong	local02, fp
065a8     64 5E 85 F1 | 	sub	fp, #100
065ac     40 6C 5E F2 | 	cmps	local02, #64 wcz
065b0     14 00 90 1D |  if_a	jmp	#LR__0316
065b4     64 5E 05 F1 | 	add	fp, #100
065b8     AF 6E 02 FB | 	rdlong	local03, fp
065bc     64 5E 85 F1 | 	sub	fp, #100
065c0     37 71 0A F6 | 	mov	local04, local03 wz
065c4     0C 00 90 5D |  if_ne	jmp	#LR__0317
065c8                 | LR__0316
065c8     64 5E 05 F1 | 	add	fp, #100
065cc     AF 80 68 FC | 	wrlong	#64, fp
065d0     64 5E 85 F1 | 	sub	fp, #100
065d4                 | LR__0317
065d4     68 5E 05 F1 | 	add	fp, #104
065d8     AF 6A 02 FB | 	rdlong	local01, fp
065dc     68 5E 85 F1 | 	sub	fp, #104
065e0     03 6A 0E F2 | 	cmp	local01, #3 wz
065e4     10 00 90 5D |  if_ne	jmp	#LR__0318
065e8     68 5E 05 F1 | 	add	fp, #104
065ec     AF 00 68 FC | 	wrlong	#0, fp
065f0     68 5E 85 F1 | 	sub	fp, #104
065f4     30 00 90 FD | 	jmp	#LR__0320
065f8                 | LR__0318
065f8     0C 5E 05 F1 | 	add	fp, #12
065fc     AF 6A 02 FB | 	rdlong	local01, fp
06600     0C 5E 85 F1 | 	sub	fp, #12
06604     00 6A 5E F2 | 	cmps	local01, #0 wcz
06608     1C 00 90 3D |  if_ae	jmp	#LR__0319
0660c     68 5E 05 F1 | 	add	fp, #104
06610     AF 08 68 FC | 	wrlong	#4, fp
06614     5C 5E 85 F1 | 	sub	fp, #92
06618     AF 6A 02 FB | 	rdlong	local01, fp
0661c     35 6B 62 F6 | 	neg	local01, local01
06620     AF 6A 62 FC | 	wrlong	local01, fp
06624     0C 5E 85 F1 | 	sub	fp, #12
06628                 | LR__0319
06628                 | LR__0320
06628     68 5E 05 F1 | 	add	fp, #104
0662c     AF 6A 0A FB | 	rdlong	local01, fp wz
06630     68 5E 85 F1 | 	sub	fp, #104
06634     EC 00 90 AD |  if_e	jmp	#LR__0327
06638     5C 5E 05 F1 | 	add	fp, #92
0663c     AF 70 02 FB | 	rdlong	local04, fp
06640     01 70 06 F1 | 	add	local04, #1
06644     AF 70 62 FC | 	wrlong	local04, fp
06648     04 5E 05 F1 | 	add	fp, #4
0664c     AF 6A 02 FB | 	rdlong	local01, fp
06650     04 5E 05 F1 | 	add	fp, #4
06654     AF 70 02 FB | 	rdlong	local04, fp
06658     64 5E 85 F1 | 	sub	fp, #100
0665c     38 6B 0A F2 | 	cmp	local01, local04 wz
06660     3C 00 90 5D |  if_ne	jmp	#LR__0322
06664     60 5E 05 F1 | 	add	fp, #96
06668     AF 70 02 FB | 	rdlong	local04, fp
0666c     01 70 86 F1 | 	sub	local04, #1
06670     AF 70 62 FC | 	wrlong	local04, fp
06674     AF 6A 0A FB | 	rdlong	local01, fp wz
06678     60 5E 85 F1 | 	sub	fp, #96
0667c     20 00 90 5D |  if_ne	jmp	#LR__0321
06680     04 5E 05 F1 | 	add	fp, #4
06684     AF 5C 02 FB | 	rdlong	arg01, fp
06688     04 5E 05 F1 | 	add	fp, #4
0668c     AF 5E 02 FB | 	rdlong	arg02, fp
06690     08 5E 85 F1 | 	sub	fp, #8
06694     23 60 06 F6 | 	mov	arg03, #35
06698     00 FD BF FD | 	call	#__system___fmtchar
0669c     70 01 90 FD | 	jmp	#LR__0332
066a0                 | LR__0321
066a0                 | LR__0322
066a0     68 5E 05 F1 | 	add	fp, #104
066a4     AF 6A 02 FB | 	rdlong	local01, fp
066a8     68 5E 85 F1 | 	sub	fp, #104
066ac     02 6A 0E F2 | 	cmp	local01, #2 wz
066b0     20 00 90 5D |  if_ne	jmp	#LR__0323
066b4     58 5E 05 F1 | 	add	fp, #88
066b8     AF 6A 02 FB | 	rdlong	local01, fp
066bc     35 71 02 F6 | 	mov	local04, local01
066c0     01 70 06 F1 | 	add	local04, #1
066c4     AF 70 62 FC | 	wrlong	local04, fp
066c8     58 5E 85 F1 | 	sub	fp, #88
066cc     35 41 48 FC | 	wrbyte	#32, local01
066d0     50 00 90 FD | 	jmp	#LR__0326
066d4                 | LR__0323
066d4     68 5E 05 F1 | 	add	fp, #104
066d8     AF 6A 02 FB | 	rdlong	local01, fp
066dc     68 5E 85 F1 | 	sub	fp, #104
066e0     04 6A 0E F2 | 	cmp	local01, #4 wz
066e4     20 00 90 5D |  if_ne	jmp	#LR__0324
066e8     58 5E 05 F1 | 	add	fp, #88
066ec     AF 6A 02 FB | 	rdlong	local01, fp
066f0     35 71 02 F6 | 	mov	local04, local01
066f4     01 70 06 F1 | 	add	local04, #1
066f8     AF 70 62 FC | 	wrlong	local04, fp
066fc     58 5E 85 F1 | 	sub	fp, #88
06700     35 5B 48 FC | 	wrbyte	#45, local01
06704     1C 00 90 FD | 	jmp	#LR__0325
06708                 | LR__0324
06708     58 5E 05 F1 | 	add	fp, #88
0670c     AF 6A 02 FB | 	rdlong	local01, fp
06710     35 71 02 F6 | 	mov	local04, local01
06714     01 70 06 F1 | 	add	local04, #1
06718     AF 70 62 FC | 	wrlong	local04, fp
0671c     58 5E 85 F1 | 	sub	fp, #88
06720     35 57 48 FC | 	wrbyte	#43, local01
06724                 | LR__0325
06724                 | LR__0326
06724                 | LR__0327
06724     58 5E 05 F1 | 	add	fp, #88
06728     AF 5C 02 FB | 	rdlong	arg01, fp
0672c     4C 5E 85 F1 | 	sub	fp, #76
06730     AF 5E 02 FB | 	rdlong	arg02, fp
06734     04 5E 05 F1 | 	add	fp, #4
06738     AF 60 02 FB | 	rdlong	arg03, fp
0673c     50 5E 05 F1 | 	add	fp, #80
06740     AF 62 02 FB | 	rdlong	arg04, fp
06744     00 72 06 F6 | 	mov	local05, #0
06748     58 5E 85 F1 | 	sub	fp, #88
0674c     AF 74 02 FB | 	rdlong	local06, fp
06750     08 5E 85 F1 | 	sub	fp, #8
06754     1D 74 2E F4 | 	testbn	local06, #29 wz
06758     01 72 06 56 |  if_ne	mov	local05, #1
0675c     39 65 02 F6 | 	mov	arg05, local05
06760     84 0D B0 FD | 	call	#__system___uitoa
06764     15 77 02 F6 | 	mov	local07, result1
06768     5C 5E 05 F1 | 	add	fp, #92
0676c     AF 6A 02 FB | 	rdlong	local01, fp
06770     3B 6B 02 F1 | 	add	local01, local07
06774     AF 6A 62 FC | 	wrlong	local01, fp
06778     08 5E 05 F1 | 	add	fp, #8
0677c     AF 70 02 FB | 	rdlong	local04, fp
06780     64 5E 85 F1 | 	sub	fp, #100
06784     38 6B 5A F2 | 	cmps	local01, local04 wcz
06788     64 00 90 ED |  if_be	jmp	#LR__0331
0678c     B0 98 9F FE | 	loc	pa,	#(@LR__0329-@LR__0328)
06790     93 00 A0 FD | 	call	#FCACHE_LOAD_
06794                 | LR__0328
06794     64 5E 05 F1 | 	add	fp, #100
06798     AF 6A 02 FB | 	rdlong	local01, fp
0679c     35 71 02 F6 | 	mov	local04, local01
067a0     01 70 86 F1 | 	sub	local04, #1
067a4     AF 70 62 FC | 	wrlong	local04, fp
067a8     64 5E 85 F1 | 	sub	fp, #100
067ac     00 6A 5E F2 | 	cmps	local01, #0 wcz
067b0     20 00 90 ED |  if_be	jmp	#LR__0330
067b4     58 5E 05 F1 | 	add	fp, #88
067b8     AF 6A 02 FB | 	rdlong	local01, fp
067bc     35 71 02 F6 | 	mov	local04, local01
067c0     01 70 06 F1 | 	add	local04, #1
067c4     AF 70 62 FC | 	wrlong	local04, fp
067c8     58 5E 85 F1 | 	sub	fp, #88
067cc     35 47 48 FC | 	wrbyte	#35, local01
067d0     C0 FF 9F FD | 	jmp	#LR__0328
067d4                 | LR__0329
067d4                 | LR__0330
067d4     58 5E 05 F1 | 	add	fp, #88
067d8     AF 6A 02 FB | 	rdlong	local01, fp
067dc     35 71 02 F6 | 	mov	local04, local01
067e0     01 70 06 F1 | 	add	local04, #1
067e4     AF 70 62 FC | 	wrlong	local04, fp
067e8     58 5E 85 F1 | 	sub	fp, #88
067ec     35 01 48 FC | 	wrbyte	#0, local01
067f0                 | LR__0331
067f0     14 5E 05 F1 | 	add	fp, #20
067f4     AF 60 02 F6 | 	mov	arg03, fp
067f8     10 5E 85 F1 | 	sub	fp, #16
067fc     AF 5C 02 FB | 	rdlong	arg01, fp
06800     04 5E 05 F1 | 	add	fp, #4
06804     AF 5E 02 FB | 	rdlong	arg02, fp
06808     08 5E 85 F1 | 	sub	fp, #8
0680c     EC FB BF FD | 	call	#__system___fmtstr
06810                 | LR__0332
06810     AF F0 03 F6 | 	mov	ptra, fp
06814     BF 00 A0 FD | 	call	#popregs_
06818                 | __system___fmtnum_ret
06818     2D 00 64 FD | 	ret
0681c                 | 
0681c                 | __system__String_S
0681c     06 5A 05 F6 | 	mov	COUNT_, #6
06820     B0 00 A0 FD | 	call	#pushregs_
06824     2E 6B 02 F6 | 	mov	local01, arg01
06828     2F 6D 02 F6 | 	mov	local02, arg02
0682c     36 5D 02 F6 | 	mov	arg01, local02
06830     00 6E 06 F6 | 	mov	local03, #0
06834     D8 97 9F FE | 	loc	pa,	#(@LR__0334-@LR__0333)
06838     93 00 A0 FD | 	call	#FCACHE_LOAD_
0683c                 | LR__0333
0683c     2E 71 CA FA | 	rdbyte	local04, arg01 wz
06840     01 6E 06 51 |  if_ne	add	local03, #1
06844     01 5C 06 51 |  if_ne	add	arg01, #1
06848     F0 FF 9F 5D |  if_ne	jmp	#LR__0333
0684c                 | LR__0334
0684c     37 2B 0A F6 | 	mov	result1, local03 wz
06850     40 00 00 AF 
06854     26 2B 06 A6 |  if_e	mov	result1, ##@LR__0451
06858     50 00 90 AD |  if_e	jmp	#LR__0336
0685c     00 6A 5E F2 | 	cmps	local01, #0 wcz
06860     40 00 00 EF 
06864     27 2B 06 E6 |  if_be	mov	result1, ##@LR__0452
06868     40 00 90 ED |  if_be	jmp	#LR__0336
0686c     35 73 02 F6 | 	mov	local05, local01
06870     01 72 06 F1 | 	add	local05, #1
06874     39 5D 02 F6 | 	mov	arg01, local05
06878     01 5C 06 F1 | 	add	arg01, #1
0687c     2C 03 B0 FD | 	call	#__system___gc_alloc_managed
06880     15 75 0A F6 | 	mov	local06, result1 wz
06884     20 00 90 AD |  if_e	jmp	#LR__0335
06888     36 5F C2 FA | 	rdbyte	arg02, local02
0688c     3A 5D 02 F6 | 	mov	arg01, local06
06890     35 61 02 F6 | 	mov	arg03, local01
06894     A0 00 A0 FD | 	call	#\builtin_bytefill_
06898     3A 73 02 F1 | 	add	local05, local06
0689c     39 01 48 FC | 	wrbyte	#0, local05
068a0     3A 2B 02 F6 | 	mov	result1, local06
068a4     04 00 90 FD | 	jmp	#LR__0336
068a8                 | LR__0335
068a8     3A 2B 02 F6 | 	mov	result1, local06
068ac                 | LR__0336
068ac     AF F0 03 F6 | 	mov	ptra, fp
068b0     BF 00 A0 FD | 	call	#popregs_
068b4                 | __system__String_S_ret
068b4     2D 00 64 FD | 	ret
068b8                 | 
068b8                 | __system___gc_ptrs
068b8     0A 5A 05 F6 | 	mov	COUNT_, #10
068bc     B0 00 A0 FD | 	call	#pushregs_
068c0     02 6B 02 F6 | 	mov	local01, __heap_ptr
068c4     35 6D 02 F6 | 	mov	local02, local01
068c8     07 00 00 FF 
068cc     F8 6D 06 F1 | 	add	local02, ##4088
068d0     35 6F 0A FB | 	rdlong	local03, local01 wz
068d4     74 00 90 5D |  if_ne	jmp	#LR__0337
068d8     36 71 02 F6 | 	mov	local04, local02
068dc     35 71 82 F1 | 	sub	local04, local01
068e0     35 03 58 FC | 	wrword	#1, local01
068e4     35 73 02 F6 | 	mov	local05, local01
068e8     02 72 06 F1 | 	add	local05, #2
068ec     36 00 80 FF 
068f0     39 21 59 FC | 	wrword	##27792, local05
068f4     35 75 02 F6 | 	mov	local06, local01
068f8     04 74 06 F1 | 	add	local06, #4
068fc     3A 01 58 FC | 	wrword	#0, local06
06900     35 77 02 F6 | 	mov	local07, local01
06904     06 76 06 F1 | 	add	local07, #6
06908     3B 03 58 FC | 	wrword	#1, local07
0690c     10 6A 06 F1 | 	add	local01, #16
06910     38 6F 52 F6 | 	abs	local03, local04 wc
06914     04 6E 46 F0 | 	shr	local03, #4
06918     37 6F 62 C6 |  if_b	neg	local03, local03
0691c     35 6F 52 FC | 	wrword	local03, local01
06920     35 79 02 F6 | 	mov	local08, local01
06924     02 78 06 F1 | 	add	local08, #2
06928     36 00 80 FF 
0692c     3C 1F 59 FC | 	wrword	##27791, local08
06930     35 7B 02 F6 | 	mov	local09, local01
06934     04 7A 06 F1 | 	add	local09, #4
06938     3D 01 58 FC | 	wrword	#0, local09
0693c     35 7D 02 F6 | 	mov	local10, local01
06940     06 7C 06 F1 | 	add	local10, #6
06944     3E 01 58 FC | 	wrword	#0, local10
06948     10 6A 86 F1 | 	sub	local01, #16
0694c                 | LR__0337
0694c     36 2D 02 F6 | 	mov	result2, local02
06950     35 2B 02 F6 | 	mov	result1, local01
06954     AF F0 03 F6 | 	mov	ptra, fp
06958     BF 00 A0 FD | 	call	#popregs_
0695c                 | __system___gc_ptrs_ret
0695c     2D 00 64 FD | 	ret
06960                 | 
06960                 | __system___gc_nextBlockPtr
06960     02 5A 05 F6 | 	mov	COUNT_, #2
06964     B0 00 A0 FD | 	call	#pushregs_
06968     2E 6B 02 F6 | 	mov	local01, arg01
0696c     35 6D EA FA | 	rdword	local02, local01 wz
06970     10 00 90 5D |  if_ne	jmp	#LR__0338
06974     40 00 00 FF 
06978     28 5D 06 F6 | 	mov	arg01, ##@LR__0453
0697c     F8 01 B0 FD | 	call	#__system___gc_errmsg
06980     0C 00 90 FD | 	jmp	#LR__0339
06984                 | LR__0338
06984     04 6C 66 F0 | 	shl	local02, #4
06988     35 2B 02 F6 | 	mov	result1, local01
0698c     36 2B 02 F1 | 	add	result1, local02
06990                 | LR__0339
06990     AF F0 03 F6 | 	mov	ptra, fp
06994     BF 00 A0 FD | 	call	#popregs_
06998                 | __system___gc_nextBlockPtr_ret
06998     2D 00 64 FD | 	ret
0699c                 | 
0699c                 | __system___gc_tryalloc
0699c     1B 5A 05 F6 | 	mov	COUNT_, #27
069a0     B0 00 A0 FD | 	call	#pushregs_
069a4     2E 6B 02 F6 | 	mov	local01, arg01
069a8     2F 6D 02 F6 | 	mov	local02, arg02
069ac     08 FF BF FD | 	call	#__system___gc_ptrs
069b0     15 6F 02 F6 | 	mov	local03, result1
069b4     16 71 02 F6 | 	mov	local04, result2
069b8     37 73 02 F6 | 	mov	local05, local03
069bc     00 74 06 F6 | 	mov	local06, #0
069c0     94 96 9F FE | 	loc	pa,	#(@LR__0341-@LR__0340)
069c4     93 00 A0 FD | 	call	#FCACHE_LOAD_
069c8                 | LR__0340
069c8     39 77 02 F6 | 	mov	local07, local05
069cc     06 72 06 F1 | 	add	local05, #6
069d0     39 79 02 F6 | 	mov	local08, local05
069d4     37 7B 02 F6 | 	mov	local09, local03
069d8     3C 7D E2 FA | 	rdword	local10, local08
069dc     3D 5D 02 F6 | 	mov	arg01, local09
069e0     3E 5F 0A F6 | 	mov	arg02, local10 wz
069e4     00 2A 06 A6 |  if_e	mov	result1, #0
069e8     04 5E 66 50 |  if_ne	shl	arg02, #4
069ec     2F 5D 02 51 |  if_ne	add	arg01, arg02
069f0     2E 2B 02 56 |  if_ne	mov	result1, arg01
069f4     15 7F 02 F6 | 	mov	local11, result1
069f8     3F 73 0A F6 | 	mov	local05, local11 wz
069fc     39 7B 02 56 |  if_ne	mov	local09, local05
06a00     3D 81 02 56 |  if_ne	mov	local12, local09
06a04     40 75 E2 5A |  if_ne	rdword	local06, local12
06a08     00 72 0E F2 | 	cmp	local05, #0 wz
06a0c     10 00 90 AD |  if_e	jmp	#LR__0342
06a10     38 73 5A F2 | 	cmps	local05, local04 wcz
06a14     08 00 90 3D |  if_ae	jmp	#LR__0342
06a18     3A 6B 5A F2 | 	cmps	local01, local06 wcz
06a1c     A8 FF 9F 1D |  if_a	jmp	#LR__0340
06a20                 | LR__0341
06a20                 | LR__0342
06a20     00 72 0E F2 | 	cmp	local05, #0 wz
06a24     39 2B 02 A6 |  if_e	mov	result1, local05
06a28     40 01 90 AD |  if_e	jmp	#LR__0345
06a2c     39 83 02 F6 | 	mov	local13, local05
06a30     06 82 06 F1 | 	add	local13, #6
06a34     41 85 E2 FA | 	rdword	local14, local13
06a38     3A 6B 5A F2 | 	cmps	local01, local06 wcz
06a3c     CC 00 90 3D |  if_ae	jmp	#LR__0344
06a40     39 87 02 F6 | 	mov	local15, local05
06a44     43 6B 52 FC | 	wrword	local01, local15
06a48     35 89 02 F6 | 	mov	local16, local01
06a4c     04 88 66 F0 | 	shl	local16, #4
06a50     39 8B 02 F6 | 	mov	local17, local05
06a54     44 8B 02 F1 | 	add	local17, local16
06a58     3A 8D 02 F6 | 	mov	local18, local06
06a5c     35 8D 82 F1 | 	sub	local18, local01
06a60     45 8F 02 F6 | 	mov	local19, local17
06a64     47 8D 52 FC | 	wrword	local18, local19
06a68     45 91 02 F6 | 	mov	local20, local17
06a6c     02 90 06 F1 | 	add	local20, #2
06a70     36 00 80 FF 
06a74     48 1F 59 FC | 	wrword	##27791, local20
06a78     45 93 02 F6 | 	mov	local21, local17
06a7c     04 92 06 F1 | 	add	local21, #4
06a80     39 5F 0A F6 | 	mov	arg02, local05 wz
06a84     00 2A 06 A6 |  if_e	mov	result1, #0
06a88     37 5F 82 51 |  if_ne	sub	arg02, local03
06a8c     04 5E 46 50 |  if_ne	shr	arg02, #4
06a90     2F 2B 02 56 |  if_ne	mov	result1, arg02
06a94     49 2B 52 FC | 	wrword	result1, local21
06a98     45 95 02 F6 | 	mov	local22, local17
06a9c     41 7B E2 FA | 	rdword	local09, local13
06aa0     06 94 06 F1 | 	add	local22, #6
06aa4     4A 7B 52 FC | 	wrword	local09, local22
06aa8     45 97 02 F6 | 	mov	local23, local17
06aac     4B 5F 0A F6 | 	mov	arg02, local23 wz
06ab0     00 2A 06 A6 |  if_e	mov	result1, #0
06ab4     37 5F 82 51 |  if_ne	sub	arg02, local03
06ab8     04 5E 46 50 |  if_ne	shr	arg02, #4
06abc     2F 2B 02 56 |  if_ne	mov	result1, arg02
06ac0     15 85 02 F6 | 	mov	local14, result1
06ac4     45 5D 02 F6 | 	mov	arg01, local17
06ac8     94 FE BF FD | 	call	#__system___gc_nextBlockPtr
06acc     15 99 0A F6 | 	mov	local24, result1 wz
06ad0     38 00 90 AD |  if_e	jmp	#LR__0343
06ad4     38 99 5A F2 | 	cmps	local24, local04 wcz
06ad8     30 00 90 3D |  if_ae	jmp	#LR__0343
06adc     4C 9B 02 F6 | 	mov	local25, local24
06ae0     04 9A 06 F1 | 	add	local25, #4
06ae4     37 7B 02 F6 | 	mov	local09, local03
06ae8     4B 7D 02 F6 | 	mov	local10, local23
06aec     3D 5D 02 F6 | 	mov	arg01, local09
06af0     3E 5F 0A F6 | 	mov	arg02, local10 wz
06af4     00 2A 06 A6 |  if_e	mov	result1, #0
06af8     2E 5F 82 51 |  if_ne	sub	arg02, arg01
06afc     04 5E 46 50 |  if_ne	shr	arg02, #4
06b00     2F 2B 02 56 |  if_ne	mov	result1, arg02
06b04     15 7F 02 F6 | 	mov	local11, result1
06b08     4D 7F 52 FC | 	wrword	local11, local25
06b0c                 | LR__0343
06b0c                 | LR__0344
06b0c     06 76 06 F1 | 	add	local07, #6
06b10     3B 85 52 FC | 	wrword	local14, local07
06b14     36 00 00 FF 
06b18     80 7A 06 F6 | 	mov	local09, ##27776
06b1c     36 7B 42 F5 | 	or	local09, local02
06b20     39 9D 02 F6 | 	mov	local26, local05
06b24     02 9C 06 F1 | 	add	local26, #2
06b28     01 2A 62 FD | 	cogid	result1
06b2c     15 7B 42 F5 | 	or	local09, result1
06b30     4E 7B 52 FC | 	wrword	local09, local26
06b34     37 9F 02 F6 | 	mov	local27, local03
06b38     08 9E 06 F1 | 	add	local27, #8
06b3c     4F 7B E2 FA | 	rdword	local09, local27
06b40     41 7B 52 FC | 	wrword	local09, local13
06b44     39 5F 0A F6 | 	mov	arg02, local05 wz
06b48     00 2A 06 A6 |  if_e	mov	result1, #0
06b4c     37 5F 82 51 |  if_ne	sub	arg02, local03
06b50     04 5E 46 50 |  if_ne	shr	arg02, #4
06b54     2F 2B 02 56 |  if_ne	mov	result1, arg02
06b58     4F 2B 52 FC | 	wrword	result1, local27
06b5c     08 72 06 F1 | 	add	local05, #8
06b60     39 2B 02 F6 | 	mov	result1, local05
06b64     00 C0 31 FF 
06b68     00 2A 46 F5 | 	or	result1, ##1669332992
06b6c                 | LR__0345
06b6c     AF F0 03 F6 | 	mov	ptra, fp
06b70     BF 00 A0 FD | 	call	#popregs_
06b74                 | __system___gc_tryalloc_ret
06b74     2D 00 64 FD | 	ret
06b78                 | 
06b78                 | __system___gc_errmsg
06b78     02 5A 05 F6 | 	mov	COUNT_, #2
06b7c     B0 00 A0 FD | 	call	#pushregs_
06b80     2E 6B 02 F6 | 	mov	local01, arg01
06b84                 | LR__0346
06b84     35 6D CA FA | 	rdbyte	local02, local01 wz
06b88     01 6A 06 F1 | 	add	local01, #1
06b8c     0C 00 90 AD |  if_e	jmp	#LR__0347
06b90     36 5D 02 F6 | 	mov	arg01, local02
06b94     C4 F4 BF FD | 	call	#__system___tx
06b98     E8 FF 9F FD | 	jmp	#LR__0346
06b9c                 | LR__0347
06b9c     00 2A 06 F6 | 	mov	result1, #0
06ba0     AF F0 03 F6 | 	mov	ptra, fp
06ba4     BF 00 A0 FD | 	call	#popregs_
06ba8                 | __system___gc_errmsg_ret
06ba8     2D 00 64 FD | 	ret
06bac                 | 
06bac                 | __system___gc_alloc_managed
06bac     02 5A 05 F6 | 	mov	COUNT_, #2
06bb0     B0 00 A0 FD | 	call	#pushregs_
06bb4     2E 6B 02 F6 | 	mov	local01, arg01
06bb8     00 5E 06 F6 | 	mov	arg02, #0
06bbc     30 00 B0 FD | 	call	#__system___gc_doalloc
06bc0     15 6D 0A F6 | 	mov	local02, result1 wz
06bc4     18 00 90 5D |  if_ne	jmp	#LR__0348
06bc8     00 6A 5E F2 | 	cmps	local01, #0 wcz
06bcc     10 00 90 ED |  if_be	jmp	#LR__0348
06bd0     40 00 00 FF 
06bd4     44 5D 06 F6 | 	mov	arg01, ##@LR__0454
06bd8     9C FF BF FD | 	call	#__system___gc_errmsg
06bdc     04 00 90 FD | 	jmp	#LR__0349
06be0                 | LR__0348
06be0     36 2B 02 F6 | 	mov	result1, local02
06be4                 | LR__0349
06be4     AF F0 03 F6 | 	mov	ptra, fp
06be8     BF 00 A0 FD | 	call	#popregs_
06bec                 | __system___gc_alloc_managed_ret
06bec     2D 00 64 FD | 	ret
06bf0                 | 
06bf0                 | __system___gc_doalloc
06bf0     07 5A 05 F6 | 	mov	COUNT_, #7
06bf4     B0 00 A0 FD | 	call	#pushregs_
06bf8     2E 6B 0A F6 | 	mov	local01, arg01 wz
06bfc     2F 6D 02 F6 | 	mov	local02, arg02
06c00     00 2A 06 A6 |  if_e	mov	result1, #0
06c04     8C 00 90 AD |  if_e	jmp	#LR__0357
06c08     17 6A 06 F1 | 	add	local01, #23
06c0c     0F 6A 26 F5 | 	andn	local01, #15
06c10     04 6A 46 F0 | 	shr	local01, #4
06c14     14 14 06 F1 | 	add	ptr___system__dat__, #20
06c18     0A 6F 02 F6 | 	mov	local03, ptr___system__dat__
06c1c     37 5D 02 F6 | 	mov	arg01, local03
06c20     14 14 86 F1 | 	sub	ptr___system__dat__, #20
06c24     50 F3 BF FD | 	call	#__system___lockmem
06c28     35 5D 02 F6 | 	mov	arg01, local01
06c2c     36 5F 02 F6 | 	mov	arg02, local02
06c30     68 FD BF FD | 	call	#__system___gc_tryalloc
06c34     15 71 0A F6 | 	mov	local04, result1 wz
06c38     14 00 90 5D |  if_ne	jmp	#LR__0350
06c3c     10 03 B0 FD | 	call	#__system___gc_docollect
06c40     35 5D 02 F6 | 	mov	arg01, local01
06c44     36 5F 02 F6 | 	mov	arg02, local02
06c48     50 FD BF FD | 	call	#__system___gc_tryalloc
06c4c     15 71 02 F6 | 	mov	local04, result1
06c50                 | LR__0350
06c50     37 01 68 FC | 	wrlong	#0, local03
06c54     00 70 0E F2 | 	cmp	local04, #0 wz
06c58     34 00 90 AD |  if_e	jmp	#LR__0356
06c5c     04 6A 66 F0 | 	shl	local01, #4
06c60     08 6A 86 F1 | 	sub	local01, #8
06c64     35 73 52 F6 | 	abs	local05, local01 wc
06c68     02 72 46 F0 | 	shr	local05, #2
06c6c     39 73 62 C6 |  if_b	neg	local05, local05
06c70     39 75 0A F6 | 	mov	local06, local05 wz
06c74     38 77 02 F6 | 	mov	local07, local04
06c78     14 00 90 AD |  if_e	jmp	#LR__0355
06c7c     8C 93 9F FE | 	loc	pa,	#(@LR__0353-@LR__0351)
06c80     93 00 A0 FD | 	call	#FCACHE_LOAD_
06c84                 | LR__0351
06c84     3A 05 D8 FC | 	rep	@LR__0354, local06
06c88                 | LR__0352
06c88     3B 01 68 FC | 	wrlong	#0, local07
06c8c     04 76 06 F1 | 	add	local07, #4
06c90                 | LR__0353
06c90                 | LR__0354
06c90                 | LR__0355
06c90                 | LR__0356
06c90     38 2B 02 F6 | 	mov	result1, local04
06c94                 | LR__0357
06c94     AF F0 03 F6 | 	mov	ptra, fp
06c98     BF 00 A0 FD | 	call	#popregs_
06c9c                 | __system___gc_doalloc_ret
06c9c     2D 00 64 FD | 	ret
06ca0                 | 
06ca0                 | __system___gc_isvalidptr
06ca0     30 31 02 F6 | 	mov	_var01, arg03
06ca4     18 33 02 F6 | 	mov	_var02, _var01
06ca8     00 F8 7F FF 
06cac     00 32 06 F5 | 	and	_var02, ##-1048576
06cb0     00 C0 31 FF 
06cb4     00 32 0E F2 | 	cmp	_var02, ##1669332992 wz
06cb8     00 2A 06 56 |  if_ne	mov	result1, #0
06cbc     60 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
06cc0     08 30 86 F1 | 	sub	_var01, #8
06cc4     18 35 02 F6 | 	mov	_var03, _var01
06cc8     00 F8 7F FF 
06ccc     00 34 26 F5 | 	andn	_var03, ##-1048576
06cd0     2E 35 5A F2 | 	cmps	_var03, arg01 wcz
06cd4     08 00 90 CD |  if_b	jmp	#LR__0358
06cd8     2F 35 5A F2 | 	cmps	_var03, arg02 wcz
06cdc     08 00 90 CD |  if_b	jmp	#LR__0359
06ce0                 | LR__0358
06ce0     00 2A 06 F6 | 	mov	result1, #0
06ce4     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
06ce8                 | LR__0359
06ce8     1A 33 02 F6 | 	mov	_var02, _var03
06cec     2E 33 62 F5 | 	xor	_var02, arg01
06cf0     0F 32 0E F5 | 	and	_var02, #15 wz
06cf4     00 2A 06 56 |  if_ne	mov	result1, #0
06cf8     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
06cfc     1A 37 02 F6 | 	mov	_var04, _var03
06d00     02 36 06 F1 | 	add	_var04, #2
06d04     1B 33 E2 FA | 	rdword	_var02, _var04
06d08     7F 00 00 FF 
06d0c     C0 33 06 F5 | 	and	_var02, ##65472
06d10     36 00 00 FF 
06d14     80 32 0E F2 | 	cmp	_var02, ##27776 wz
06d18     00 2A 06 56 |  if_ne	mov	result1, #0
06d1c     1A 2B 02 A6 |  if_e	mov	result1, _var03
06d20                 | __system___gc_isvalidptr_ret
06d20     2D 00 64 FD | 	ret
06d24                 | 
06d24                 | __system___gc_dofree
06d24     1A 5A 05 F6 | 	mov	COUNT_, #26
06d28     B0 00 A0 FD | 	call	#pushregs_
06d2c     2E 6B 02 F6 | 	mov	local01, arg01
06d30     84 FB BF FD | 	call	#__system___gc_ptrs
06d34     16 6D 02 F6 | 	mov	local02, result2
06d38     15 6F 02 F6 | 	mov	local03, result1
06d3c     35 71 02 F6 | 	mov	local04, local01
06d40     02 70 06 F1 | 	add	local04, #2
06d44     36 00 80 FF 
06d48     38 1F 59 FC | 	wrword	##27791, local04
06d4c     35 73 02 F6 | 	mov	local05, local01
06d50     35 5D 02 F6 | 	mov	arg01, local01
06d54     08 FC BF FD | 	call	#__system___gc_nextBlockPtr
06d58     15 75 02 F6 | 	mov	local06, result1
06d5c     F0 92 9F FE | 	loc	pa,	#(@LR__0361-@LR__0360)
06d60     93 00 A0 FD | 	call	#FCACHE_LOAD_
06d64                 | LR__0360
06d64     04 72 06 F1 | 	add	local05, #4
06d68     39 77 02 F6 | 	mov	local07, local05
06d6c     3B 5F EA FA | 	rdword	arg02, local07 wz
06d70     37 5D 02 F6 | 	mov	arg01, local03
06d74     00 2A 06 A6 |  if_e	mov	result1, #0
06d78     04 5E 66 50 |  if_ne	shl	arg02, #4
06d7c     2F 5D 02 51 |  if_ne	add	arg01, arg02
06d80     2E 2B 02 56 |  if_ne	mov	result1, arg01
06d84     15 73 0A F6 | 	mov	local05, result1 wz
06d88     28 00 90 AD |  if_e	jmp	#LR__0362
06d8c     39 5D 02 F6 | 	mov	arg01, local05
06d90     00 78 06 F6 | 	mov	local08, #0
06d94     02 5C 06 F1 | 	add	arg01, #2
06d98     2E 7B E2 FA | 	rdword	local09, arg01
06d9c     36 00 00 FF 
06da0     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06da4     01 78 66 A6 |  if_e	neg	local08, #1
06da8     3C 2B 02 F6 | 	mov	result1, local08
06dac     15 7D 0A F6 | 	mov	local10, result1 wz
06db0     B0 FF 9F AD |  if_e	jmp	#LR__0360
06db4                 | LR__0361
06db4                 | LR__0362
06db4     00 72 0E F2 | 	cmp	local05, #0 wz
06db8     37 73 02 A6 |  if_e	mov	local05, local03
06dbc     39 7F 02 F6 | 	mov	local11, local05
06dc0     06 7E 06 F1 | 	add	local11, #6
06dc4     35 81 02 F6 | 	mov	local12, local01
06dc8     3F 83 E2 FA | 	rdword	local13, local11
06dcc     06 80 06 F1 | 	add	local12, #6
06dd0     40 83 52 FC | 	wrword	local13, local12
06dd4     35 5F 0A F6 | 	mov	arg02, local01 wz
06dd8     00 2A 06 A6 |  if_e	mov	result1, #0
06ddc     37 5F 82 51 |  if_ne	sub	arg02, local03
06de0     04 5E 46 50 |  if_ne	shr	arg02, #4
06de4     2F 2B 02 56 |  if_ne	mov	result1, arg02
06de8     15 85 02 F6 | 	mov	local14, result1
06dec     3F 85 52 FC | 	wrword	local14, local11
06df0     37 73 0A F2 | 	cmp	local05, local03 wz
06df4     74 00 90 AD |  if_e	jmp	#LR__0365
06df8     39 5D 02 F6 | 	mov	arg01, local05
06dfc     60 FB BF FD | 	call	#__system___gc_nextBlockPtr
06e00     35 2B 0A F2 | 	cmp	result1, local01 wz
06e04     64 00 90 5D |  if_ne	jmp	#LR__0364
06e08     39 87 02 F6 | 	mov	local15, local05
06e0c     43 89 E2 FA | 	rdword	local16, local15
06e10     35 8B 02 F6 | 	mov	local17, local01
06e14     45 7D E2 FA | 	rdword	local10, local17
06e18     3E 89 02 F1 | 	add	local16, local10
06e1c     43 89 52 FC | 	wrword	local16, local15
06e20     38 01 58 FC | 	wrword	#0, local04
06e24     35 5D 02 F6 | 	mov	arg01, local01
06e28     34 FB BF FD | 	call	#__system___gc_nextBlockPtr
06e2c     15 75 02 F6 | 	mov	local06, result1
06e30     36 75 5A F2 | 	cmps	local06, local02 wcz
06e34     24 00 90 3D |  if_ae	jmp	#LR__0363
06e38     3A 8D 02 F6 | 	mov	local18, local06
06e3c     04 8C 06 F1 | 	add	local18, #4
06e40     39 5F 0A F6 | 	mov	arg02, local05 wz
06e44     00 2A 06 A6 |  if_e	mov	result1, #0
06e48     37 5F 82 51 |  if_ne	sub	arg02, local03
06e4c     04 5E 46 50 |  if_ne	shr	arg02, #4
06e50     2F 2B 02 56 |  if_ne	mov	result1, arg02
06e54     15 85 02 F6 | 	mov	local14, result1
06e58     46 85 52 FC | 	wrword	local14, local18
06e5c                 | LR__0363
06e5c     40 83 E2 FA | 	rdword	local13, local12
06e60     3F 83 52 FC | 	wrword	local13, local11
06e64     40 01 58 FC | 	wrword	#0, local12
06e68     39 6B 02 F6 | 	mov	local01, local05
06e6c                 | LR__0364
06e6c                 | LR__0365
06e6c     35 5D 02 F6 | 	mov	arg01, local01
06e70     EC FA BF FD | 	call	#__system___gc_nextBlockPtr
06e74     15 8F 0A F6 | 	mov	local19, result1 wz
06e78     C4 00 90 AD |  if_e	jmp	#LR__0367
06e7c     36 8F 5A F2 | 	cmps	local19, local02 wcz
06e80     BC 00 90 3D |  if_ae	jmp	#LR__0367
06e84     47 5D 02 F6 | 	mov	arg01, local19
06e88     00 78 06 F6 | 	mov	local08, #0
06e8c     02 5C 06 F1 | 	add	arg01, #2
06e90     2E 7B E2 FA | 	rdword	local09, arg01
06e94     36 00 00 FF 
06e98     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06e9c     01 78 66 A6 |  if_e	neg	local08, #1
06ea0     3C 2B 0A F6 | 	mov	result1, local08 wz
06ea4     98 00 90 AD |  if_e	jmp	#LR__0367
06ea8     35 73 02 F6 | 	mov	local05, local01
06eac     47 6B 02 F6 | 	mov	local01, local19
06eb0     39 91 02 F6 | 	mov	local20, local05
06eb4     48 93 E2 FA | 	rdword	local21, local20
06eb8     35 95 02 F6 | 	mov	local22, local01
06ebc     4A 7D E2 FA | 	rdword	local10, local22
06ec0     3E 93 02 F1 | 	add	local21, local10
06ec4     48 93 52 FC | 	wrword	local21, local20
06ec8     35 97 02 F6 | 	mov	local23, local01
06ecc     06 96 06 F1 | 	add	local23, #6
06ed0     39 99 02 F6 | 	mov	local24, local05
06ed4     4B 83 E2 FA | 	rdword	local13, local23
06ed8     06 98 06 F1 | 	add	local24, #6
06edc     4C 83 52 FC | 	wrword	local13, local24
06ee0     35 9B 02 F6 | 	mov	local25, local01
06ee4     02 9A 06 F1 | 	add	local25, #2
06ee8     4D 55 59 FC | 	wrword	#170, local25
06eec     4B 01 58 FC | 	wrword	#0, local23
06ef0     35 83 02 F6 | 	mov	local13, local01
06ef4     41 5D 02 F6 | 	mov	arg01, local13
06ef8     64 FA BF FD | 	call	#__system___gc_nextBlockPtr
06efc     15 7D 02 F6 | 	mov	local10, result1
06f00     3E 75 0A F6 | 	mov	local06, local10 wz
06f04     38 00 90 AD |  if_e	jmp	#LR__0366
06f08     36 75 5A F2 | 	cmps	local06, local02 wcz
06f0c     30 00 90 3D |  if_ae	jmp	#LR__0366
06f10     3A 9D 02 F6 | 	mov	local26, local06
06f14     04 9C 06 F1 | 	add	local26, #4
06f18     37 83 02 F6 | 	mov	local13, local03
06f1c     39 7D 02 F6 | 	mov	local10, local05
06f20     41 5D 02 F6 | 	mov	arg01, local13
06f24     3E 5F 0A F6 | 	mov	arg02, local10 wz
06f28     00 2A 06 A6 |  if_e	mov	result1, #0
06f2c     2E 5F 82 51 |  if_ne	sub	arg02, arg01
06f30     04 5E 46 50 |  if_ne	shr	arg02, #4
06f34     2F 2B 02 56 |  if_ne	mov	result1, arg02
06f38     15 85 02 F6 | 	mov	local14, result1
06f3c     4E 85 52 FC | 	wrword	local14, local26
06f40                 | LR__0366
06f40                 | LR__0367
06f40     3A 2B 02 F6 | 	mov	result1, local06
06f44     AF F0 03 F6 | 	mov	ptra, fp
06f48     BF 00 A0 FD | 	call	#popregs_
06f4c                 | __system___gc_dofree_ret
06f4c     2D 00 64 FD | 	ret
06f50                 | 
06f50                 | __system___gc_docollect
06f50     0C 5A 05 F6 | 	mov	COUNT_, #12
06f54     B0 00 A0 FD | 	call	#pushregs_
06f58     5C F9 BF FD | 	call	#__system___gc_ptrs
06f5c     16 6B 02 F6 | 	mov	local01, result2
06f60     15 6D 02 F6 | 	mov	local02, result1
06f64     36 5D 02 F6 | 	mov	arg01, local02
06f68     F4 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06f6c     15 6F 0A F6 | 	mov	local03, result1 wz
06f70     01 2A 62 FD | 	cogid	result1
06f74     15 71 02 F6 | 	mov	local04, result1
06f78     2C 00 90 AD |  if_e	jmp	#LR__0369
06f7c                 | LR__0368
06f7c     35 6F 5A F2 | 	cmps	local03, local01 wcz
06f80     24 00 90 3D |  if_ae	jmp	#LR__0369
06f84     37 73 02 F6 | 	mov	local05, local03
06f88     02 72 06 F1 | 	add	local05, #2
06f8c     39 75 E2 FA | 	rdword	local06, local05
06f90     20 74 26 F5 | 	andn	local06, #32
06f94     39 75 52 FC | 	wrword	local06, local05
06f98     37 5D 02 F6 | 	mov	arg01, local03
06f9c     C0 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06fa0     15 6F 0A F6 | 	mov	local03, result1 wz
06fa4     D4 FF 9F 5D |  if_ne	jmp	#LR__0368
06fa8                 | LR__0369
06fa8     00 76 06 F6 | 	mov	local07, #0
06fac     00 5C 06 F6 | 	mov	arg01, #0
06fb0     5C EF BF FD | 	call	#__system____topofstack
06fb4     15 79 02 F6 | 	mov	local08, result1
06fb8     3B 5D 02 F6 | 	mov	arg01, local07
06fbc     3C 5F 02 F6 | 	mov	arg02, local08
06fc0     A0 00 B0 FD | 	call	#__system___gc_markhub
06fc4     2C 01 B0 FD | 	call	#__system___gc_markcog
06fc8     36 5D 02 F6 | 	mov	arg01, local02
06fcc     90 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06fd0     15 7B 0A F6 | 	mov	local09, result1 wz
06fd4     10 00 90 5D |  if_ne	jmp	#LR__0370
06fd8     40 00 00 FF 
06fdc     61 5D 06 F6 | 	mov	arg01, ##@LR__0455
06fe0     94 FB BF FD | 	call	#__system___gc_errmsg
06fe4     70 00 90 FD | 	jmp	#LR__0376
06fe8                 | LR__0370
06fe8                 | LR__0371
06fe8     3D 6F 02 F6 | 	mov	local03, local09
06fec     37 5D 02 F6 | 	mov	arg01, local03
06ff0     6C F9 BF FD | 	call	#__system___gc_nextBlockPtr
06ff4     15 7B 02 F6 | 	mov	local09, result1
06ff8     37 7D 02 F6 | 	mov	local10, local03
06ffc     02 7C 06 F1 | 	add	local10, #2
07000     3E 7F E2 FA | 	rdword	local11, local10
07004     20 7E CE F7 | 	test	local11, #32 wz
07008     3C 00 90 5D |  if_ne	jmp	#LR__0374
0700c     3F 81 02 F6 | 	mov	local12, local11
07010     10 80 0E F5 | 	and	local12, #16 wz
07014     30 00 90 5D |  if_ne	jmp	#LR__0374
07018     3F 77 02 F6 | 	mov	local07, local11
0701c     0F 76 06 F5 | 	and	local07, #15
07020     3B 7F 02 F6 | 	mov	local11, local07
07024     38 7F 0A F2 | 	cmp	local11, local04 wz
07028     08 00 90 AD |  if_e	jmp	#LR__0372
0702c     0E 7E 0E F2 | 	cmp	local11, #14 wz
07030     14 00 90 5D |  if_ne	jmp	#LR__0373
07034                 | LR__0372
07034     37 77 02 F6 | 	mov	local07, local03
07038     3B 5D 02 F6 | 	mov	arg01, local07
0703c     E4 FC BF FD | 	call	#__system___gc_dofree
07040     15 81 02 F6 | 	mov	local12, result1
07044     40 7B 02 F6 | 	mov	local09, local12
07048                 | LR__0373
07048                 | LR__0374
07048     00 7A 0E F2 | 	cmp	local09, #0 wz
0704c     08 00 90 AD |  if_e	jmp	#LR__0375
07050     35 7B 5A F2 | 	cmps	local09, local01 wcz
07054     90 FF 9F CD |  if_b	jmp	#LR__0371
07058                 | LR__0375
07058                 | LR__0376
07058     AF F0 03 F6 | 	mov	ptra, fp
0705c     BF 00 A0 FD | 	call	#popregs_
07060                 | __system___gc_docollect_ret
07060     2D 00 64 FD | 	ret
07064                 | 
07064                 | __system___gc_markhub
07064     0A 5A 05 F6 | 	mov	COUNT_, #10
07068     B0 00 A0 FD | 	call	#pushregs_
0706c     2E 6B 02 F6 | 	mov	local01, arg01
07070     2F 6D 02 F6 | 	mov	local02, arg02
07074     40 F8 BF FD | 	call	#__system___gc_ptrs
07078     15 6F 02 F6 | 	mov	local03, result1
0707c     16 71 02 F6 | 	mov	local04, result2
07080                 | LR__0377
07080     36 6B 5A F2 | 	cmps	local01, local02 wcz
07084     60 00 90 3D |  if_ae	jmp	#LR__0378
07088     35 61 02 FB | 	rdlong	arg03, local01
0708c     04 6A 06 F1 | 	add	local01, #4
07090     37 5D 02 F6 | 	mov	arg01, local03
07094     38 5F 02 F6 | 	mov	arg02, local04
07098     04 FC BF FD | 	call	#__system___gc_isvalidptr
0709c     15 73 0A F6 | 	mov	local05, result1 wz
070a0     DC FF 9F AD |  if_e	jmp	#LR__0377
070a4     39 5D 02 F6 | 	mov	arg01, local05
070a8     00 74 06 F6 | 	mov	local06, #0
070ac     02 5C 06 F1 | 	add	arg01, #2
070b0     2E 77 E2 FA | 	rdword	local07, arg01
070b4     36 00 00 FF 
070b8     8F 76 0E F2 | 	cmp	local07, ##27791 wz
070bc     01 74 66 A6 |  if_e	neg	local06, #1
070c0     3A 2B 02 F6 | 	mov	result1, local06
070c4     15 79 0A F6 | 	mov	local08, result1 wz
070c8     B4 FF 9F 5D |  if_ne	jmp	#LR__0377
070cc     39 7B 02 F6 | 	mov	local09, local05
070d0     02 7A 06 F1 | 	add	local09, #2
070d4     3D 7D E2 FA | 	rdword	local10, local09
070d8     0F 7C 26 F5 | 	andn	local10, #15
070dc     2E 7C 46 F5 | 	or	local10, #46
070e0     3D 7D 52 FC | 	wrword	local10, local09
070e4     98 FF 9F FD | 	jmp	#LR__0377
070e8                 | LR__0378
070e8     AF F0 03 F6 | 	mov	ptra, fp
070ec     BF 00 A0 FD | 	call	#popregs_
070f0                 | __system___gc_markhub_ret
070f0     2D 00 64 FD | 	ret
070f4                 | 
070f4                 | __system___gc_markcog
070f4     06 5A 05 F6 | 	mov	COUNT_, #6
070f8     B0 00 A0 FD | 	call	#pushregs_
070fc     B8 F7 BF FD | 	call	#__system___gc_ptrs
07100     15 6B 02 F6 | 	mov	local01, result1
07104     16 6D 02 F6 | 	mov	local02, result2
07108     00 6E 06 F6 | 	mov	local03, #0
0710c                 | LR__0379
0710c     F0 71 06 F6 | 	mov	local04, #496
07110     37 71 82 F1 | 	sub	local04, local03
07114     F0 71 06 F1 | 	add	local04, #496
07118                 | 	'.live	local04
07118     00 70 96 F9 | 	alts	local04, #0
0711c     38 73 02 F6 | 	mov	local05, local04
07120     36 5F 02 F6 | 	mov	arg02, local02
07124     35 5D 02 F6 | 	mov	arg01, local01
07128     39 61 02 F6 | 	mov	arg03, local05
0712c     70 FB BF FD | 	call	#__system___gc_isvalidptr
07130     15 73 0A F6 | 	mov	local05, result1 wz
07134     10 00 90 AD |  if_e	jmp	#LR__0380
07138     02 72 06 F1 | 	add	local05, #2
0713c     39 75 E2 FA | 	rdword	local06, local05
07140     20 74 46 F5 | 	or	local06, #32
07144     39 75 52 FC | 	wrword	local06, local05
07148                 | LR__0380
07148     01 6E 06 F1 | 	add	local03, #1
0714c     F0 6F 5E F2 | 	cmps	local03, #496 wcz
07150     B8 FF 9F CD |  if_b	jmp	#LR__0379
07154     AF F0 03 F6 | 	mov	ptra, fp
07158     BF 00 A0 FD | 	call	#popregs_
0715c                 | __system___gc_markcog_ret
0715c     2D 00 64 FD | 	ret
07160                 | 
07160                 | __system__write
07160     03 5A 05 F6 | 	mov	COUNT_, #3
07164     B0 00 A0 FD | 	call	#pushregs_
07168     2E 6B 02 F6 | 	mov	local01, arg01
0716c     2F 6D 02 F6 | 	mov	local02, arg02
07170     30 6F 02 F6 | 	mov	local03, arg03
07174     0A 6A 1E F2 | 	cmp	local01, #10 wcz
07178     1C 00 90 CD |  if_b	jmp	#LR__0381
0717c     01 00 00 FF 
07180     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07184     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07188     01 00 00 FF 
0718c     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07190     01 2A 66 F6 | 	neg	result1, #1
07194     28 00 90 FD | 	jmp	#LR__0382
07198                 | LR__0381
07198     35 5D 02 F6 | 	mov	arg01, local01
0719c     01 5C 66 F0 | 	shl	arg01, #1
071a0     35 5D 02 F1 | 	add	arg01, local01
071a4     04 5C 66 F0 | 	shl	arg01, #4
071a8     1C 14 06 F1 | 	add	ptr___system__dat__, #28
071ac     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
071b0     36 5F 02 F6 | 	mov	arg02, local02
071b4     37 61 02 F6 | 	mov	arg03, local03
071b8     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
071bc     4C 09 B0 FD | 	call	#__system___vfswrite
071c0                 | LR__0382
071c0     AF F0 03 F6 | 	mov	ptra, fp
071c4     BF 00 A0 FD | 	call	#popregs_
071c8                 | __system__write_ret
071c8     2D 00 64 FD | 	ret
071cc                 | 
071cc                 | __system__read
071cc     03 5A 05 F6 | 	mov	COUNT_, #3
071d0     B0 00 A0 FD | 	call	#pushregs_
071d4     2E 6B 02 F6 | 	mov	local01, arg01
071d8     2F 6D 02 F6 | 	mov	local02, arg02
071dc     30 6F 02 F6 | 	mov	local03, arg03
071e0     0A 6A 1E F2 | 	cmp	local01, #10 wcz
071e4     1C 00 90 CD |  if_b	jmp	#LR__0383
071e8     01 00 00 FF 
071ec     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
071f0     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
071f4     01 00 00 FF 
071f8     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
071fc     01 2A 66 F6 | 	neg	result1, #1
07200     28 00 90 FD | 	jmp	#LR__0384
07204                 | LR__0383
07204     35 5D 02 F6 | 	mov	arg01, local01
07208     01 5C 66 F0 | 	shl	arg01, #1
0720c     35 5D 02 F1 | 	add	arg01, local01
07210     04 5C 66 F0 | 	shl	arg01, #4
07214     1C 14 06 F1 | 	add	ptr___system__dat__, #28
07218     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
0721c     36 5F 02 F6 | 	mov	arg02, local02
07220     37 61 02 F6 | 	mov	arg03, local03
07224     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
07228     A4 0A B0 FD | 	call	#__system___vfsread
0722c                 | LR__0384
0722c     AF F0 03 F6 | 	mov	ptra, fp
07230     BF 00 A0 FD | 	call	#popregs_
07234                 | __system__read_ret
07234     2D 00 64 FD | 	ret
07238                 | 
07238                 | __system__close
07238     01 5A 05 F6 | 	mov	COUNT_, #1
0723c     B0 00 A0 FD | 	call	#pushregs_
07240     2E 6B 02 F6 | 	mov	local01, arg01
07244     0A 6A 1E F2 | 	cmp	local01, #10 wcz
07248     1C 00 90 CD |  if_b	jmp	#LR__0385
0724c     01 00 00 FF 
07250     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07254     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07258     01 00 00 FF 
0725c     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07260     01 2A 66 F6 | 	neg	result1, #1
07264     20 00 90 FD | 	jmp	#LR__0386
07268                 | LR__0385
07268     35 5D 02 F6 | 	mov	arg01, local01
0726c     01 5C 66 F0 | 	shl	arg01, #1
07270     35 5D 02 F1 | 	add	arg01, local01
07274     04 5C 66 F0 | 	shl	arg01, #4
07278     1C 14 06 F1 | 	add	ptr___system__dat__, #28
0727c     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
07280     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
07284     80 03 B0 FD | 	call	#__system___closeraw
07288                 | LR__0386
07288     AF F0 03 F6 | 	mov	ptra, fp
0728c     BF 00 A0 FD | 	call	#popregs_
07290                 | __system__close_ret
07290     2D 00 64 FD | 	ret
07294                 | 
07294                 | __system__lseek
07294     09 5A 05 F6 | 	mov	COUNT_, #9
07298     B0 00 A0 FD | 	call	#pushregs_
0729c     2E 6B 02 F6 | 	mov	local01, arg01
072a0     2F 6D 02 F6 | 	mov	local02, arg02
072a4     30 6F 02 F6 | 	mov	local03, arg03
072a8     0A 6A 1E F2 | 	cmp	local01, #10 wcz
072ac     1C 00 90 CD |  if_b	jmp	#LR__0387
072b0     01 00 00 FF 
072b4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
072b8     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
072bc     01 00 00 FF 
072c0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
072c4     01 2A 66 F6 | 	neg	result1, #1
072c8     D8 00 90 FD | 	jmp	#LR__0391
072cc                 | LR__0387
072cc     35 71 02 F6 | 	mov	local04, local01
072d0     01 70 66 F0 | 	shl	local04, #1
072d4     35 71 02 F1 | 	add	local04, local01
072d8     04 70 66 F0 | 	shl	local04, #4
072dc     1C 14 06 F1 | 	add	ptr___system__dat__, #28
072e0     0A 71 02 F1 | 	add	local04, ptr___system__dat__
072e4     2C 70 06 F1 | 	add	local04, #44
072e8     38 73 0A FB | 	rdlong	local05, local04 wz
072ec     2C 70 86 F1 | 	sub	local04, #44
072f0     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
072f4     1C 00 90 5D |  if_ne	jmp	#LR__0388
072f8     01 00 00 FF 
072fc     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07300     0A 21 68 FC | 	wrlong	#16, ptr___system__dat__
07304     01 00 00 FF 
07308     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
0730c     01 2A 66 F6 | 	neg	result1, #1
07310     90 00 90 FD | 	jmp	#LR__0391
07314                 | LR__0388
07314     08 70 06 F1 | 	add	local04, #8
07318     38 73 02 FB | 	rdlong	local05, local04
0731c     08 70 86 F1 | 	sub	local04, #8
07320     40 72 CE F7 | 	test	local05, #64 wz
07324     14 00 90 AD |  if_e	jmp	#LR__0389
07328     08 70 06 F1 | 	add	local04, #8
0732c     38 73 02 FB | 	rdlong	local05, local04
07330     80 72 46 F5 | 	or	local05, #128
07334     38 73 62 FC | 	wrlong	local05, local04
07338     08 70 86 F1 | 	sub	local04, #8
0733c                 | LR__0389
0733c     2C 70 06 F1 | 	add	local04, #44
07340     38 73 02 FB | 	rdlong	local05, local04
07344     2C 70 86 F1 | 	sub	local04, #44
07348     39 75 02 FB | 	rdlong	local06, local05
0734c     04 72 06 F1 | 	add	local05, #4
07350     39 77 02 FB | 	rdlong	local07, local05
07354     38 5D 02 F6 | 	mov	arg01, local04
07358     36 5F 02 F6 | 	mov	arg02, local02
0735c     37 61 02 F6 | 	mov	arg03, local03
07360     07 79 02 F6 | 	mov	local08, objptr
07364     3A 0F 02 F6 | 	mov	objptr, local06
07368     2D 76 62 FD | 	call	local07
0736c     3C 0F 02 F6 | 	mov	objptr, local08
07370     15 7B 02 F6 | 	mov	local09, result1
07374     00 7A 5E F2 | 	cmps	local09, #0 wcz
07378     24 00 90 3D |  if_ae	jmp	#LR__0390
0737c     3D 5D 6A F6 | 	neg	arg01, local09 wz
07380     01 00 00 FF 
07384     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07388     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
0738c     01 00 00 FF 
07390     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07394     01 2A 66 56 |  if_ne	neg	result1, #1
07398     00 2A 06 A6 |  if_e	mov	result1, #0
0739c     04 00 90 FD | 	jmp	#LR__0391
073a0                 | LR__0390
073a0     3D 2B 02 F6 | 	mov	result1, local09
073a4                 | LR__0391
073a4     AF F0 03 F6 | 	mov	ptra, fp
073a8     BF 00 A0 FD | 	call	#popregs_
073ac                 | __system__lseek_ret
073ac     2D 00 64 FD | 	ret
073b0                 | 
073b0                 | __system____getftab
073b0     0A 5C 1E F2 | 	cmp	arg01, #10 wcz
073b4     00 2A 06 36 |  if_ae	mov	result1, #0
073b8     1C 00 90 3D |  if_ae	jmp	#__system____getftab_ret
073bc     2E 2B 02 F6 | 	mov	result1, arg01
073c0     01 2A 66 F0 | 	shl	result1, #1
073c4     2E 2B 02 F1 | 	add	result1, arg01
073c8     04 2A 66 F0 | 	shl	result1, #4
073cc     1C 14 06 F1 | 	add	ptr___system__dat__, #28
073d0     0A 2B 02 F1 | 	add	result1, ptr___system__dat__
073d4     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
073d8                 | __system____getftab_ret
073d8     2D 00 64 FD | 	ret
073dc                 | 
073dc                 | __system___strrev
073dc     2E 31 CA FA | 	rdbyte	_var01, arg01 wz
073e0     40 00 90 AD |  if_e	jmp	#__system___strrev_ret
073e4     2E 33 02 F6 | 	mov	_var02, arg01
073e8     20 8C 9F FE | 	loc	pa,	#(@LR__0393-@LR__0392)
073ec     93 00 A0 FD | 	call	#FCACHE_LOAD_
073f0                 | LR__0392
073f0     19 31 CA FA | 	rdbyte	_var01, _var02 wz
073f4     01 32 06 51 |  if_ne	add	_var02, #1
073f8     F4 FF 9F 5D |  if_ne	jmp	#LR__0392
073fc                 | LR__0393
073fc     01 32 86 F1 | 	sub	_var02, #1
07400                 | LR__0394
07400     2E 33 5A F2 | 	cmps	_var02, arg01 wcz
07404     1C 00 90 ED |  if_be	jmp	#LR__0395
07408     2E 35 C2 FA | 	rdbyte	_var03, arg01
0740c     19 37 C2 FA | 	rdbyte	_var04, _var02
07410     2E 37 42 FC | 	wrbyte	_var04, arg01
07414     19 35 42 FC | 	wrbyte	_var03, _var02
07418     01 5C 06 F1 | 	add	arg01, #1
0741c     01 32 86 F1 | 	sub	_var02, #1
07420     DC FF 9F FD | 	jmp	#LR__0394
07424                 | LR__0395
07424                 | __system___strrev_ret
07424     2D 00 64 FD | 	ret
07428                 | 
07428                 | __system___fmtpad
07428     0C 5A 05 F6 | 	mov	COUNT_, #12
0742c     B0 00 A0 FD | 	call	#pushregs_
07430     2E 6B 02 F6 | 	mov	local01, arg01
07434     2F 6D 02 F6 | 	mov	local02, arg02
07438     31 6F 02 F6 | 	mov	local03, arg04
0743c     36 71 EA F8 | 	getbyte	local04, local02, #1
07440     16 6C 46 F0 | 	shr	local02, #22
07444     03 6C 0E F5 | 	and	local02, #3 wz
07448     00 72 06 F6 | 	mov	local05, #0
0744c     01 6C 06 A6 |  if_e	mov	local02, #1
07450     37 6D CA F7 | 	test	local02, local03 wz
07454     00 2A 06 A6 |  if_e	mov	result1, #0
07458     80 00 90 AD |  if_e	jmp	#LR__0399
0745c     30 71 82 F1 | 	sub	local04, arg03
07460     38 75 02 F6 | 	mov	local06, local04
07464     00 74 5E F2 | 	cmps	local06, #0 wcz
07468     00 2A 06 E6 |  if_be	mov	result1, #0
0746c     6C 00 90 ED |  if_be	jmp	#LR__0399
07470     03 6C 0E F2 | 	cmp	local02, #3 wz
07474     18 00 90 5D |  if_ne	jmp	#LR__0396
07478     01 6E 0E F2 | 	cmp	local03, #1 wz
0747c     6E 76 62 FD | 	wrz	local07
07480     3B 75 02 F1 | 	add	local06, local07
07484     3A 75 52 F6 | 	abs	local06, local06 wc
07488     01 74 46 F0 | 	shr	local06, #1
0748c     3A 75 62 C6 |  if_b	neg	local06, local06
07490                 | LR__0396
07490     00 74 5E F2 | 	cmps	local06, #0 wcz
07494     40 00 90 ED |  if_be	jmp	#LR__0398
07498     3A 79 02 F6 | 	mov	local08, local06
0749c                 | LR__0397
0749c     35 7B 02 F6 | 	mov	local09, local01
074a0     3D 77 02 FB | 	rdlong	local07, local09
074a4     04 7A 06 F1 | 	add	local09, #4
074a8     3D 7D 02 FB | 	rdlong	local10, local09
074ac     20 5C 06 F6 | 	mov	arg01, #32
074b0     07 7F 02 F6 | 	mov	local11, objptr
074b4     3B 0F 02 F6 | 	mov	objptr, local07
074b8     2D 7C 62 FD | 	call	local10
074bc     3F 0F 02 F6 | 	mov	objptr, local11
074c0     15 81 02 F6 | 	mov	local12, result1
074c4     00 80 5E F2 | 	cmps	local12, #0 wcz
074c8     40 2B 02 C6 |  if_b	mov	result1, local12
074cc     0C 00 90 CD |  if_b	jmp	#LR__0399
074d0     40 73 02 F1 | 	add	local05, local12
074d4     F1 79 6E FB | 	djnz	local08, #LR__0397
074d8                 | LR__0398
074d8     39 2B 02 F6 | 	mov	result1, local05
074dc                 | LR__0399
074dc     AF F0 03 F6 | 	mov	ptra, fp
074e0     BF 00 A0 FD | 	call	#popregs_
074e4                 | __system___fmtpad_ret
074e4     2D 00 64 FD | 	ret
074e8                 | 
074e8                 | __system___uitoa
074e8     09 5A 05 F6 | 	mov	COUNT_, #9
074ec     B0 00 A0 FD | 	call	#pushregs_
074f0     2E 6B 02 F6 | 	mov	local01, arg01
074f4     2F 6D 02 F6 | 	mov	local02, arg02
074f8     30 6F 02 F6 | 	mov	local03, arg03
074fc     31 71 02 F6 | 	mov	local04, arg04
07500     32 73 0A F6 | 	mov	local05, arg05 wz
07504     35 75 02 F6 | 	mov	local06, local01
07508     00 76 06 F6 | 	mov	local07, #0
0750c     37 78 06 56 |  if_ne	mov	local08, #55
07510     57 78 06 A6 |  if_e	mov	local08, #87
07514                 | LR__0400
07514     36 0B 03 F6 | 	mov	muldiva_, local02
07518     37 0D 03 F6 | 	mov	muldivb_, local03
0751c     CC 00 A0 FD | 	call	#unsdivide_
07520     85 7B 02 F6 | 	mov	local09, muldiva_
07524     0A 7A 1E F2 | 	cmp	local09, #10 wcz
07528     30 7A 06 C1 |  if_b	add	local09, #48
0752c     3C 7B 02 31 |  if_ae	add	local09, local08
07530     3A 7B 42 FC | 	wrbyte	local09, local06
07534     36 0B 03 F6 | 	mov	muldiva_, local02
07538     37 0D 03 F6 | 	mov	muldivb_, local03
0753c     01 74 06 F1 | 	add	local06, #1
07540     CC 00 A0 FD | 	call	#unsdivide_
07544     86 6D 0A F6 | 	mov	local02, muldivb_ wz
07548     01 76 06 F1 | 	add	local07, #1
0754c     C4 FF 9F 5D |  if_ne	jmp	#LR__0400
07550     38 77 1A F2 | 	cmp	local07, local04 wcz
07554     BC FF 9F CD |  if_b	jmp	#LR__0400
07558     3A 01 48 FC | 	wrbyte	#0, local06
0755c     35 5D 02 F6 | 	mov	arg01, local01
07560     78 FE BF FD | 	call	#__system___strrev
07564     3B 2B 02 F6 | 	mov	result1, local07
07568     AF F0 03 F6 | 	mov	ptra, fp
0756c     BF 00 A0 FD | 	call	#popregs_
07570                 | __system___uitoa_ret
07570     2D 00 64 FD | 	ret
07574                 | 
07574                 | __system___gettxfunc
07574     03 5A 05 F6 | 	mov	COUNT_, #3
07578     B0 00 A0 FD | 	call	#pushregs_
0757c     30 FE BF FD | 	call	#__system____getftab
07580     15 6B 0A F6 | 	mov	local01, result1 wz
07584     14 00 90 AD |  if_e	jmp	#LR__0401
07588     08 6A 06 F1 | 	add	local01, #8
0758c     35 6D 02 FB | 	rdlong	local02, local01
07590     08 6A 86 F1 | 	sub	local01, #8
07594     36 6F 0A F6 | 	mov	local03, local02 wz
07598     08 00 90 5D |  if_ne	jmp	#LR__0402
0759c                 | LR__0401
0759c     00 2A 06 F6 | 	mov	result1, #0
075a0     0C 00 90 FD | 	jmp	#LR__0403
075a4                 | LR__0402
075a4     35 5D 02 F6 | 	mov	arg01, local01
075a8     09 5F 02 F6 | 	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
075ac     88 E9 BF FD | 	call	#__system___make_methodptr
075b0                 | LR__0403
075b0     AF F0 03 F6 | 	mov	ptra, fp
075b4     BF 00 A0 FD | 	call	#popregs_
075b8                 | __system___gettxfunc_ret
075b8     2D 00 64 FD | 	ret
075bc                 | 
075bc                 | __system___getiolock_0145
075bc     03 5A 05 F6 | 	mov	COUNT_, #3
075c0     B0 00 A0 FD | 	call	#pushregs_
075c4     E8 FD BF FD | 	call	#__system____getftab
075c8     15 6B 0A F6 | 	mov	local01, result1 wz
075cc     14 00 90 AD |  if_e	jmp	#LR__0404
075d0     08 6A 06 F1 | 	add	local01, #8
075d4     35 6D 02 FB | 	rdlong	local02, local01
075d8     08 6A 86 F1 | 	sub	local01, #8
075dc     36 6F 0A F6 | 	mov	local03, local02 wz
075e0     10 00 90 5D |  if_ne	jmp	#LR__0405
075e4                 | LR__0404
075e4     18 14 06 F1 | 	add	ptr___system__dat__, #24
075e8     0A 2B 02 F6 | 	mov	result1, ptr___system__dat__
075ec     18 14 86 F1 | 	sub	ptr___system__dat__, #24
075f0     08 00 90 FD | 	jmp	#LR__0406
075f4                 | LR__0405
075f4     0C 6A 06 F1 | 	add	local01, #12
075f8     35 2B 02 F6 | 	mov	result1, local01
075fc                 | LR__0406
075fc     AF F0 03 F6 | 	mov	ptra, fp
07600     BF 00 A0 FD | 	call	#popregs_
07604                 | __system___getiolock_0145_ret
07604     2D 00 64 FD | 	ret
07608                 | 
07608                 | __system___closeraw
07608     06 5A 05 F6 | 	mov	COUNT_, #6
0760c     B0 00 A0 FD | 	call	#pushregs_
07610     2E 6B 02 F6 | 	mov	local01, arg01
07614     00 6C 06 F6 | 	mov	local02, #0
07618     08 6A 06 F1 | 	add	local01, #8
0761c     35 6F 0A FB | 	rdlong	local03, local01 wz
07620     08 6A 86 F1 | 	sub	local01, #8
07624     1C 00 90 5D |  if_ne	jmp	#LR__0407
07628     01 00 00 FF 
0762c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07630     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07634     01 00 00 FF 
07638     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
0763c     01 2A 66 F6 | 	neg	result1, #1
07640     90 00 90 FD | 	jmp	#LR__0410
07644                 | LR__0407
07644     28 6A 06 F1 | 	add	local01, #40
07648     35 6F 0A FB | 	rdlong	local03, local01 wz
0764c     28 6A 86 F1 | 	sub	local01, #40
07650     2C 00 90 AD |  if_e	jmp	#LR__0408
07654     28 6A 06 F1 | 	add	local01, #40
07658     35 6F 02 FB | 	rdlong	local03, local01
0765c     28 6A 86 F1 | 	sub	local01, #40
07660     37 71 02 FB | 	rdlong	local04, local03
07664     04 6E 06 F1 | 	add	local03, #4
07668     37 73 02 FB | 	rdlong	local05, local03
0766c     35 5D 02 F6 | 	mov	arg01, local01
07670     07 75 02 F6 | 	mov	local06, objptr
07674     38 0F 02 F6 | 	mov	objptr, local04
07678     2D 72 62 FD | 	call	local05
0767c     3A 0F 02 F6 | 	mov	objptr, local06
07680                 | LR__0408
07680     20 6A 06 F1 | 	add	local01, #32
07684     35 6F 0A FB | 	rdlong	local03, local01 wz
07688     20 6A 86 F1 | 	sub	local01, #32
0768c     30 00 90 AD |  if_e	jmp	#LR__0409
07690     20 6A 06 F1 | 	add	local01, #32
07694     35 6F 02 FB | 	rdlong	local03, local01
07698     20 6A 86 F1 | 	sub	local01, #32
0769c     37 71 02 FB | 	rdlong	local04, local03
076a0     04 6E 06 F1 | 	add	local03, #4
076a4     37 73 02 FB | 	rdlong	local05, local03
076a8     35 5D 02 F6 | 	mov	arg01, local01
076ac     07 75 02 F6 | 	mov	local06, objptr
076b0     38 0F 02 F6 | 	mov	objptr, local04
076b4     2D 72 62 FD | 	call	local05
076b8     3A 0F 02 F6 | 	mov	objptr, local06
076bc     15 6D 02 F6 | 	mov	local02, result1
076c0                 | LR__0409
076c0     35 5D 02 F6 | 	mov	arg01, local01
076c4     00 5E 06 F6 | 	mov	arg02, #0
076c8     30 60 06 F6 | 	mov	arg03, #48
076cc     A0 00 A0 FD | 	call	#\builtin_bytefill_
076d0     36 2B 02 F6 | 	mov	result1, local02
076d4                 | LR__0410
076d4     AF F0 03 F6 | 	mov	ptra, fp
076d8     BF 00 A0 FD | 	call	#popregs_
076dc                 | __system___closeraw_ret
076dc     2D 00 64 FD | 	ret
076e0                 | 
076e0                 | __system____default_getc
076e0     0C 5A 05 F6 | 	mov	COUNT_, #12
076e4     B0 00 A0 FD | 	call	#pushregs_
076e8     2E 6B 02 F6 | 	mov	local01, arg01
076ec     35 6D 02 FB | 	rdlong	local02, local01
076f0     08 6C 06 F1 | 	add	local02, #8
076f4     36 6F 02 FB | 	rdlong	local03, local02
076f8     08 6C 86 F1 | 	sub	local02, #8
076fc     02 6E CE F7 | 	test	local03, #2 wz
07700     08 00 90 AD |  if_e	jmp	#LR__0411
07704     35 5D 02 F6 | 	mov	arg01, local01
07708     FC 01 B0 FD | 	call	#__system____default_flush
0770c                 | LR__0411
0770c     08 6C 06 F1 | 	add	local02, #8
07710     36 6F 02 FB | 	rdlong	local03, local02
07714     01 6E 46 F5 | 	or	local03, #1
07718     36 6F 62 FC | 	wrlong	local03, local02
0771c     08 6C 86 F1 | 	sub	local02, #8
07720     36 71 0A FB | 	rdlong	local04, local02 wz
07724     7C 00 90 5D |  if_ne	jmp	#LR__0413
07728     35 5D 02 F6 | 	mov	arg01, local01
0772c     2E 73 02 FB | 	rdlong	local05, arg01
07730     0C 72 06 F1 | 	add	local05, #12
07734     39 5F 02 F6 | 	mov	arg02, local05
07738     0C 72 86 F1 | 	sub	local05, #12
0773c     10 5C 06 F1 | 	add	arg01, #16
07740     2E 75 02 FB | 	rdlong	local06, arg01
07744     10 5C 86 F1 | 	sub	arg01, #16
07748     3A 77 02 FB | 	rdlong	local07, local06
0774c     04 74 06 F1 | 	add	local06, #4
07750     3A 79 02 FB | 	rdlong	local08, local06
07754     0A 60 C6 F9 | 	decod	arg03, #10
07758     07 7B 02 F6 | 	mov	local09, objptr
0775c     3B 0F 02 F6 | 	mov	objptr, local07
07760     2D 78 62 FD | 	call	local08
07764     3D 0F 02 F6 | 	mov	objptr, local09
07768     15 7D 02 F6 | 	mov	local10, result1
0776c     00 7C 5E F2 | 	cmps	local10, #0 wcz
07770     01 2A 66 C6 |  if_b	neg	result1, #1
07774     28 00 90 CD |  if_b	jmp	#LR__0412
07778     39 7D 62 FC | 	wrlong	local10, local05
0777c     0C 72 06 F1 | 	add	local05, #12
07780     39 7F 02 F6 | 	mov	local11, local05
07784     08 72 86 F1 | 	sub	local05, #8
07788     39 7F 62 FC | 	wrlong	local11, local05
0778c     04 72 06 F1 | 	add	local05, #4
07790     39 75 02 FB | 	rdlong	local06, local05
07794     01 74 46 F5 | 	or	local06, #1
07798     39 75 62 FC | 	wrlong	local06, local05
0779c     3E 2B 02 F6 | 	mov	result1, local10
077a0                 | LR__0412
077a0     15 71 02 F6 | 	mov	local04, result1
077a4                 | LR__0413
077a4     00 70 5E F2 | 	cmps	local04, #0 wcz
077a8     01 2A 66 E6 |  if_be	neg	result1, #1
077ac     1C 00 90 ED |  if_be	jmp	#LR__0414
077b0     01 70 86 F1 | 	sub	local04, #1
077b4     36 71 62 FC | 	wrlong	local04, local02
077b8     04 6C 06 F1 | 	add	local02, #4
077bc     36 81 02 FB | 	rdlong	local12, local02
077c0     40 2B C2 FA | 	rdbyte	result1, local12
077c4     01 80 06 F1 | 	add	local12, #1
077c8     36 81 62 FC | 	wrlong	local12, local02
077cc                 | LR__0414
077cc     AF F0 03 F6 | 	mov	ptra, fp
077d0     BF 00 A0 FD | 	call	#popregs_
077d4                 | __system____default_getc_ret
077d4     2D 00 64 FD | 	ret
077d8                 | 
077d8                 | __system____default_putc
077d8     06 5A 05 F6 | 	mov	COUNT_, #6
077dc     B0 00 A0 FD | 	call	#pushregs_
077e0     2E 6B 02 F6 | 	mov	local01, arg01
077e4     2F 6D 02 F6 | 	mov	local02, arg02
077e8     36 6F 02 FB | 	rdlong	local03, local02
077ec     08 6E 06 F1 | 	add	local03, #8
077f0     37 71 02 FB | 	rdlong	local04, local03
077f4     08 6E 86 F1 | 	sub	local03, #8
077f8     01 70 CE F7 | 	test	local04, #1 wz
077fc     08 00 90 AD |  if_e	jmp	#LR__0415
07800     36 5D 02 F6 | 	mov	arg01, local02
07804     00 01 B0 FD | 	call	#__system____default_flush
07808                 | LR__0415
07808     08 6E 06 F1 | 	add	local03, #8
0780c     37 71 02 FB | 	rdlong	local04, local03
07810     02 70 46 F5 | 	or	local04, #2
07814     37 71 62 FC | 	wrlong	local04, local03
07818     08 6E 86 F1 | 	sub	local03, #8
0781c     37 73 02 FB | 	rdlong	local05, local03
07820     39 75 02 F6 | 	mov	local06, local05
07824     0C 6E 06 F1 | 	add	local03, #12
07828     37 75 02 F1 | 	add	local06, local03
0782c     3A 6B 42 FC | 	wrbyte	local01, local06
07830     FF 6A 06 F5 | 	and	local01, #255
07834     01 72 06 F1 | 	add	local05, #1
07838     0C 6E 86 F1 | 	sub	local03, #12
0783c     37 73 62 FC | 	wrlong	local05, local03
07840     02 00 00 FF 
07844     00 72 0E F2 | 	cmp	local05, ##1024 wz
07848     10 00 90 5D |  if_ne	jmp	#LR__0416
0784c     36 5D 02 F6 | 	mov	arg01, local02
07850     B4 00 B0 FD | 	call	#__system____default_flush
07854     00 2A 0E F2 | 	cmp	result1, #0 wz
07858     01 6A 66 56 |  if_ne	neg	local01, #1
0785c                 | LR__0416
0785c     35 2B 02 F6 | 	mov	result1, local01
07860     AF F0 03 F6 | 	mov	ptra, fp
07864     BF 00 A0 FD | 	call	#popregs_
07868                 | __system____default_putc_ret
07868     2D 00 64 FD | 	ret
0786c                 | 
0786c                 | __system____default_putc_terminal
0786c     06 5A 05 F6 | 	mov	COUNT_, #6
07870     B0 00 A0 FD | 	call	#pushregs_
07874     2E 6B 02 F6 | 	mov	local01, arg01
07878     2F 6D 02 F6 | 	mov	local02, arg02
0787c     36 6F 02 FB | 	rdlong	local03, local02
07880     08 6E 06 F1 | 	add	local03, #8
07884     37 71 02 FB | 	rdlong	local04, local03
07888     08 6E 86 F1 | 	sub	local03, #8
0788c     01 70 CE F7 | 	test	local04, #1 wz
07890     08 00 90 AD |  if_e	jmp	#LR__0417
07894     36 5D 02 F6 | 	mov	arg01, local02
07898     6C 00 B0 FD | 	call	#__system____default_flush
0789c                 | LR__0417
0789c     08 6E 06 F1 | 	add	local03, #8
078a0     37 71 02 FB | 	rdlong	local04, local03
078a4     02 70 46 F5 | 	or	local04, #2
078a8     37 71 62 FC | 	wrlong	local04, local03
078ac     08 6E 86 F1 | 	sub	local03, #8
078b0     37 73 02 FB | 	rdlong	local05, local03
078b4     39 75 02 F6 | 	mov	local06, local05
078b8     0C 6E 06 F1 | 	add	local03, #12
078bc     37 75 02 F1 | 	add	local06, local03
078c0     3A 6B 42 FC | 	wrbyte	local01, local06
078c4     FF 6A 06 F5 | 	and	local01, #255
078c8     0C 6E 86 F1 | 	sub	local03, #12
078cc     01 72 06 F1 | 	add	local05, #1
078d0     37 73 62 FC | 	wrlong	local05, local03
078d4     0A 6A 0E F2 | 	cmp	local01, #10 wz
078d8     0C 00 90 AD |  if_e	jmp	#LR__0418
078dc     02 00 00 FF 
078e0     00 72 0E F2 | 	cmp	local05, ##1024 wz
078e4     10 00 90 5D |  if_ne	jmp	#LR__0419
078e8                 | LR__0418
078e8     36 5D 02 F6 | 	mov	arg01, local02
078ec     18 00 B0 FD | 	call	#__system____default_flush
078f0     00 2A 0E F2 | 	cmp	result1, #0 wz
078f4     01 6A 66 56 |  if_ne	neg	local01, #1
078f8                 | LR__0419
078f8     35 2B 02 F6 | 	mov	result1, local01
078fc     AF F0 03 F6 | 	mov	ptra, fp
07900     BF 00 A0 FD | 	call	#popregs_
07904                 | __system____default_putc_terminal_ret
07904     2D 00 64 FD | 	ret
07908                 | 
07908                 | __system____default_flush
07908     0F 5A 05 F6 | 	mov	COUNT_, #15
0790c     B0 00 A0 FD | 	call	#pushregs_
07910     2E 6B 02 F6 | 	mov	local01, arg01
07914     35 6D 02 FB | 	rdlong	local02, local01
07918     36 6F 02 FB | 	rdlong	local03, local02
0791c     08 6C 06 F1 | 	add	local02, #8
07920     36 71 02 FB | 	rdlong	local04, local02
07924     08 6C 86 F1 | 	sub	local02, #8
07928     02 70 CE F7 | 	test	local04, #2 wz
0792c     B8 00 90 AD |  if_e	jmp	#LR__0422
07930     00 6E 5E F2 | 	cmps	local03, #0 wcz
07934     30 01 90 ED |  if_be	jmp	#LR__0424
07938     08 6A 06 F1 | 	add	local01, #8
0793c     35 71 02 FB | 	rdlong	local04, local01
07940     08 6A 86 F1 | 	sub	local01, #8
07944     40 70 CE F7 | 	test	local04, #64 wz
07948     5C 00 90 AD |  if_e	jmp	#LR__0421
0794c     08 6A 06 F1 | 	add	local01, #8
07950     35 71 02 FB | 	rdlong	local04, local01
07954     08 6A 86 F1 | 	sub	local01, #8
07958     80 70 CE F7 | 	test	local04, #128 wz
0795c     48 00 90 AD |  if_e	jmp	#LR__0420
07960     2C 6A 06 F1 | 	add	local01, #44
07964     35 71 02 FB | 	rdlong	local04, local01
07968     2C 6A 86 F1 | 	sub	local01, #44
0796c     38 73 02 FB | 	rdlong	local05, local04
07970     04 70 06 F1 | 	add	local04, #4
07974     38 75 02 FB | 	rdlong	local06, local04
07978     35 5D 02 F6 | 	mov	arg01, local01
0797c     00 5E 06 F6 | 	mov	arg02, #0
07980     02 60 06 F6 | 	mov	arg03, #2
07984     07 77 02 F6 | 	mov	local07, objptr
07988     39 0F 02 F6 | 	mov	objptr, local05
0798c     2D 74 62 FD | 	call	local06
07990     3B 0F 02 F6 | 	mov	objptr, local07
07994     08 6A 06 F1 | 	add	local01, #8
07998     35 71 02 FB | 	rdlong	local04, local01
0799c     80 70 26 F5 | 	andn	local04, #128
079a0     35 71 62 FC | 	wrlong	local04, local01
079a4     08 6A 86 F1 | 	sub	local01, #8
079a8                 | LR__0420
079a8                 | LR__0421
079a8     0C 6C 06 F1 | 	add	local02, #12
079ac     36 5F 02 F6 | 	mov	arg02, local02
079b0     0C 6C 86 F1 | 	sub	local02, #12
079b4     14 6A 06 F1 | 	add	local01, #20
079b8     35 71 02 FB | 	rdlong	local04, local01
079bc     14 6A 86 F1 | 	sub	local01, #20
079c0     38 73 02 FB | 	rdlong	local05, local04
079c4     04 70 06 F1 | 	add	local04, #4
079c8     38 75 02 FB | 	rdlong	local06, local04
079cc     35 5D 02 F6 | 	mov	arg01, local01
079d0     37 61 02 F6 | 	mov	arg03, local03
079d4     07 77 02 F6 | 	mov	local07, objptr
079d8     39 0F 02 F6 | 	mov	objptr, local05
079dc     2D 74 62 FD | 	call	local06
079e0     3B 0F 02 F6 | 	mov	objptr, local07
079e4     80 00 90 FD | 	jmp	#LR__0424
079e8                 | LR__0422
079e8     08 6C 06 F1 | 	add	local02, #8
079ec     36 71 02 FB | 	rdlong	local04, local02
079f0     08 6C 86 F1 | 	sub	local02, #8
079f4     01 70 CE F7 | 	test	local04, #1 wz
079f8     6C 00 90 AD |  if_e	jmp	#LR__0423
079fc     00 6E 0E F2 | 	cmp	local03, #0 wz
07a00     64 00 90 AD |  if_e	jmp	#LR__0423
07a04     2C 6A 06 F1 | 	add	local01, #44
07a08     35 79 02 FB | 	rdlong	local08, local01
07a0c     2C 6A 86 F1 | 	sub	local01, #44
07a10     3C 71 02 F6 | 	mov	local04, local08
07a14     38 73 02 FB | 	rdlong	local05, local04
07a18     04 70 06 F1 | 	add	local04, #4
07a1c     38 7B 02 FB | 	rdlong	local09, local04
07a20     04 70 86 F1 | 	sub	local04, #4
07a24     3D 75 02 F6 | 	mov	local06, local09
07a28     35 7D 02 F6 | 	mov	local10, local01
07a2c     37 7F 02 F6 | 	mov	local11, local03
07a30     3F 7F 62 F6 | 	neg	local11, local11
07a34     3F 81 02 F6 | 	mov	local12, local11
07a38     01 76 06 F6 | 	mov	local07, #1
07a3c     3E 5D 02 F6 | 	mov	arg01, local10
07a40     40 5F 02 F6 | 	mov	arg02, local12
07a44     01 60 06 F6 | 	mov	arg03, #1
07a48     07 83 02 F6 | 	mov	local13, objptr
07a4c     39 0F 02 F6 | 	mov	objptr, local05
07a50     2D 74 62 FD | 	call	local06
07a54     41 0F 02 F6 | 	mov	objptr, local13
07a58     15 85 02 F6 | 	mov	local14, result1
07a5c     42 87 02 F6 | 	mov	local15, local14
07a60     00 86 5E F2 | 	cmps	local15, #0 wcz
07a64     37 87 02 36 |  if_ae	mov	local15, local03
07a68                 | LR__0423
07a68                 | LR__0424
07a68     36 01 68 FC | 	wrlong	#0, local02
07a6c     04 6C 06 F1 | 	add	local02, #4
07a70     36 01 68 FC | 	wrlong	#0, local02
07a74     04 6C 06 F1 | 	add	local02, #4
07a78     36 01 68 FC | 	wrlong	#0, local02
07a7c     00 2A 06 F6 | 	mov	result1, #0
07a80     AF F0 03 F6 | 	mov	ptra, fp
07a84     BF 00 A0 FD | 	call	#popregs_
07a88                 | __system____default_flush_ret
07a88     2D 00 64 FD | 	ret
07a8c                 | 
07a8c                 | __system___rxtxioctl_0174
07a8c     02 5A 05 F6 | 	mov	COUNT_, #2
07a90     B0 00 A0 FD | 	call	#pushregs_
07a94     2F 6B 02 F6 | 	mov	local01, arg02
07a98     30 6D 02 F6 | 	mov	local02, arg03
07a9c     00 6B 0E F2 | 	cmp	local01, #256 wz
07aa0     0C 00 90 AD |  if_e	jmp	#LR__0425
07aa4     01 6B 0E F2 | 	cmp	local01, #257 wz
07aa8     1C 00 90 AD |  if_e	jmp	#LR__0426
07aac     30 00 90 FD | 	jmp	#LR__0427
07ab0                 | LR__0425
07ab0     08 14 06 F1 | 	add	ptr___system__dat__, #8
07ab4     0A 2B 02 FB | 	rdlong	result1, ptr___system__dat__
07ab8     08 14 86 F1 | 	sub	ptr___system__dat__, #8
07abc     36 2B 62 FC | 	wrlong	result1, local02
07ac0     00 2A 06 F6 | 	mov	result1, #0
07ac4     30 00 90 FD | 	jmp	#LR__0428
07ac8                 | LR__0426
07ac8     36 5D 02 FB | 	rdlong	arg01, local02
07acc     08 14 06 F1 | 	add	ptr___system__dat__, #8
07ad0     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
07ad4     08 14 86 F1 | 	sub	ptr___system__dat__, #8
07ad8     00 2A 06 F6 | 	mov	result1, #0
07adc     18 00 90 FD | 	jmp	#LR__0428
07ae0                 | LR__0427
07ae0     01 00 00 FF 
07ae4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07ae8     0A 15 68 FC | 	wrlong	#10, ptr___system__dat__
07aec     01 00 00 FF 
07af0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07af4     01 2A 66 F6 | 	neg	result1, #1
07af8                 | LR__0428
07af8     AF F0 03 F6 | 	mov	ptra, fp
07afc     BF 00 A0 FD | 	call	#popregs_
07b00                 | __system___rxtxioctl_0174_ret
07b00     2D 00 64 FD | 	ret
07b04                 | 
07b04                 | __system____dummy_flush_0175
07b04     00 2A 06 F6 | 	mov	result1, #0
07b08                 | __system____dummy_flush_0175_ret
07b08     2D 00 64 FD | 	ret
07b0c                 | 
07b0c                 | __system___vfswrite
07b0c     0B 5A 05 F6 | 	mov	COUNT_, #11
07b10     B0 00 A0 FD | 	call	#pushregs_
07b14     2E 6B 02 F6 | 	mov	local01, arg01
07b18     2F 6D 02 F6 | 	mov	local02, arg02
07b1c     30 6F 02 F6 | 	mov	local03, arg03
07b20     36 71 02 F6 | 	mov	local04, local02
07b24     08 6A 06 F1 | 	add	local01, #8
07b28     35 73 02 FB | 	rdlong	local05, local01
07b2c     08 6A 86 F1 | 	sub	local01, #8
07b30     02 72 CE F7 | 	test	local05, #2 wz
07b34     1C 00 90 5D |  if_ne	jmp	#LR__0429
07b38     01 00 00 FF 
07b3c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07b40     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07b44     01 00 00 FF 
07b48     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07b4c     01 2A 66 F6 | 	neg	result1, #1
07b50     70 01 90 FD | 	jmp	#LR__0437
07b54                 | LR__0429
07b54     08 6A 06 F1 | 	add	local01, #8
07b58     35 73 02 FB | 	rdlong	local05, local01
07b5c     08 6A 86 F1 | 	sub	local01, #8
07b60     40 72 CE F7 | 	test	local05, #64 wz
07b64     5C 00 90 AD |  if_e	jmp	#LR__0431
07b68     08 6A 06 F1 | 	add	local01, #8
07b6c     35 73 02 FB | 	rdlong	local05, local01
07b70     08 6A 86 F1 | 	sub	local01, #8
07b74     80 72 CE F7 | 	test	local05, #128 wz
07b78     48 00 90 AD |  if_e	jmp	#LR__0430
07b7c     2C 6A 06 F1 | 	add	local01, #44
07b80     35 73 02 FB | 	rdlong	local05, local01
07b84     2C 6A 86 F1 | 	sub	local01, #44
07b88     39 75 02 FB | 	rdlong	local06, local05
07b8c     04 72 06 F1 | 	add	local05, #4
07b90     39 77 02 FB | 	rdlong	local07, local05
07b94     35 5D 02 F6 | 	mov	arg01, local01
07b98     00 5E 06 F6 | 	mov	arg02, #0
07b9c     02 60 06 F6 | 	mov	arg03, #2
07ba0     07 79 02 F6 | 	mov	local08, objptr
07ba4     3A 0F 02 F6 | 	mov	objptr, local06
07ba8     2D 76 62 FD | 	call	local07
07bac     3C 0F 02 F6 | 	mov	objptr, local08
07bb0     08 6A 06 F1 | 	add	local01, #8
07bb4     35 73 02 FB | 	rdlong	local05, local01
07bb8     80 72 26 F5 | 	andn	local05, #128
07bbc     35 73 62 FC | 	wrlong	local05, local01
07bc0     08 6A 86 F1 | 	sub	local01, #8
07bc4                 | LR__0430
07bc4                 | LR__0431
07bc4     14 6A 06 F1 | 	add	local01, #20
07bc8     35 73 0A FB | 	rdlong	local05, local01 wz
07bcc     14 6A 86 F1 | 	sub	local01, #20
07bd0     7C 00 90 AD |  if_e	jmp	#LR__0433
07bd4     14 6A 06 F1 | 	add	local01, #20
07bd8     35 73 02 FB | 	rdlong	local05, local01
07bdc     14 6A 86 F1 | 	sub	local01, #20
07be0     39 75 02 FB | 	rdlong	local06, local05
07be4     04 72 06 F1 | 	add	local05, #4
07be8     39 77 02 FB | 	rdlong	local07, local05
07bec     36 5F 02 F6 | 	mov	arg02, local02
07bf0     37 61 02 F6 | 	mov	arg03, local03
07bf4     35 5D 02 F6 | 	mov	arg01, local01
07bf8     07 79 02 F6 | 	mov	local08, objptr
07bfc     3A 0F 02 F6 | 	mov	objptr, local06
07c00     2D 76 62 FD | 	call	local07
07c04     3C 0F 02 F6 | 	mov	objptr, local08
07c08     15 7B 02 F6 | 	mov	local09, result1
07c0c     00 7A 5E F2 | 	cmps	local09, #0 wcz
07c10     34 00 90 3D |  if_ae	jmp	#LR__0432
07c14     08 6A 06 F1 | 	add	local01, #8
07c18     35 73 02 FB | 	rdlong	local05, local01
07c1c     20 72 46 F5 | 	or	local05, #32
07c20     35 73 62 FC | 	wrlong	local05, local01
07c24     01 00 00 FF 
07c28     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07c2c     0A 7B 62 FC | 	wrlong	local09, ptr___system__dat__
07c30     01 00 00 FF 
07c34     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07c38     00 7A 0E F2 | 	cmp	local09, #0 wz
07c3c     01 2A 66 56 |  if_ne	neg	result1, #1
07c40     00 2A 06 A6 |  if_e	mov	result1, #0
07c44     7C 00 90 FD | 	jmp	#LR__0437
07c48                 | LR__0432
07c48     3D 2B 02 F6 | 	mov	result1, local09
07c4c     74 00 90 FD | 	jmp	#LR__0437
07c50                 | LR__0433
07c50     18 6A 06 F1 | 	add	local01, #24
07c54     35 7D 0A FB | 	rdlong	local10, local01 wz
07c58     18 6A 86 F1 | 	sub	local01, #24
07c5c     1C 00 90 5D |  if_ne	jmp	#LR__0434
07c60     01 00 00 FF 
07c64     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07c68     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07c6c     01 00 00 FF 
07c70     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07c74     01 2A 66 F6 | 	neg	result1, #1
07c78     48 00 90 FD | 	jmp	#LR__0437
07c7c                 | LR__0434
07c7c     00 7A 06 F6 | 	mov	local09, #0
07c80                 | LR__0435
07c80     00 6E 1E F2 | 	cmp	local03, #0 wcz
07c84     38 00 90 ED |  if_be	jmp	#LR__0436
07c88     3E 73 02 F6 | 	mov	local05, local10
07c8c     39 75 02 FB | 	rdlong	local06, local05
07c90     04 72 06 F1 | 	add	local05, #4
07c94     39 77 02 FB | 	rdlong	local07, local05
07c98     38 5D C2 FA | 	rdbyte	arg01, local04
07c9c     35 5F 02 F6 | 	mov	arg02, local01
07ca0     07 7F 02 F6 | 	mov	local11, objptr
07ca4     3A 0F 02 F6 | 	mov	objptr, local06
07ca8     01 70 06 F1 | 	add	local04, #1
07cac     2D 76 62 FD | 	call	local07
07cb0     3F 0F 02 F6 | 	mov	objptr, local11
07cb4     15 7B 02 F1 | 	add	local09, result1
07cb8     01 6E 86 F1 | 	sub	local03, #1
07cbc     C0 FF 9F FD | 	jmp	#LR__0435
07cc0                 | LR__0436
07cc0     3D 2B 02 F6 | 	mov	result1, local09
07cc4                 | LR__0437
07cc4     AF F0 03 F6 | 	mov	ptra, fp
07cc8     BF 00 A0 FD | 	call	#popregs_
07ccc                 | __system___vfswrite_ret
07ccc     2D 00 64 FD | 	ret
07cd0                 | 
07cd0                 | __system___vfsread
07cd0     0F 5A 05 F6 | 	mov	COUNT_, #15
07cd4     B0 00 A0 FD | 	call	#pushregs_
07cd8     2C F0 07 F1 | 	add	ptra, #44
07cdc     04 5E 05 F1 | 	add	fp, #4
07ce0     AF 5C 62 FC | 	wrlong	arg01, fp
07ce4     04 5E 05 F1 | 	add	fp, #4
07ce8     AF 5E 62 FC | 	wrlong	arg02, fp
07cec     04 5E 05 F1 | 	add	fp, #4
07cf0     AF 60 62 FC | 	wrlong	arg03, fp
07cf4     04 5E 85 F1 | 	sub	fp, #4
07cf8     AF 6A 02 FB | 	rdlong	local01, fp
07cfc     14 5E 05 F1 | 	add	fp, #20
07d00     AF 6A 62 FC | 	wrlong	local01, fp
07d04     04 5E 05 F1 | 	add	fp, #4
07d08     AF 00 68 FC | 	wrlong	#0, fp
07d0c     1C 5E 85 F1 | 	sub	fp, #28
07d10     AF 6C 02 FB | 	rdlong	local02, fp
07d14     04 5E 85 F1 | 	sub	fp, #4
07d18     08 6C 06 F1 | 	add	local02, #8
07d1c     36 6B 02 FB | 	rdlong	local01, local02
07d20     01 6A CE F7 | 	test	local01, #1 wz
07d24     1C 00 90 5D |  if_ne	jmp	#LR__0438
07d28     01 00 00 FF 
07d2c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07d30     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07d34     01 00 00 FF 
07d38     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07d3c     01 2A 66 F6 | 	neg	result1, #1
07d40     9C 02 90 FD | 	jmp	#LR__0446
07d44                 | LR__0438
07d44     04 5E 05 F1 | 	add	fp, #4
07d48     AF 6A 02 FB | 	rdlong	local01, fp
07d4c     04 5E 85 F1 | 	sub	fp, #4
07d50     10 6A 06 F1 | 	add	local01, #16
07d54     35 6F 0A FB | 	rdlong	local03, local01 wz
07d58     B4 00 90 AD |  if_e	jmp	#LR__0440
07d5c     04 5E 05 F1 | 	add	fp, #4
07d60     AF 70 02 FB | 	rdlong	local04, fp
07d64     10 70 06 F1 | 	add	local04, #16
07d68     38 6B 02 FB | 	rdlong	local01, local04
07d6c     35 6D 02 FB | 	rdlong	local02, local01
07d70     04 6A 06 F1 | 	add	local01, #4
07d74     35 6F 02 FB | 	rdlong	local03, local01
07d78     AF 5C 02 FB | 	rdlong	arg01, fp
07d7c     04 5E 05 F1 | 	add	fp, #4
07d80     AF 5E 02 FB | 	rdlong	arg02, fp
07d84     04 5E 05 F1 | 	add	fp, #4
07d88     AF 60 02 FB | 	rdlong	arg03, fp
07d8c     0C 5E 85 F1 | 	sub	fp, #12
07d90     07 73 02 F6 | 	mov	local05, objptr
07d94     36 0F 02 F6 | 	mov	objptr, local02
07d98     2D 6E 62 FD | 	call	local03
07d9c     39 0F 02 F6 | 	mov	objptr, local05
07da0     10 5E 05 F1 | 	add	fp, #16
07da4     AF 2A 62 FC | 	wrlong	result1, fp
07da8     10 5E 85 F1 | 	sub	fp, #16
07dac     00 2A 5E F2 | 	cmps	result1, #0 wcz
07db0     4C 00 90 3D |  if_ae	jmp	#LR__0439
07db4     04 5E 05 F1 | 	add	fp, #4
07db8     AF 6A 02 FB | 	rdlong	local01, fp
07dbc     35 71 02 F6 | 	mov	local04, local01
07dc0     08 70 06 F1 | 	add	local04, #8
07dc4     38 6F 02 FB | 	rdlong	local03, local04
07dc8     20 6E 46 F5 | 	or	local03, #32
07dcc     08 6A 06 F1 | 	add	local01, #8
07dd0     35 6F 62 FC | 	wrlong	local03, local01
07dd4     0C 5E 05 F1 | 	add	fp, #12
07dd8     AF 5C 0A FB | 	rdlong	arg01, fp wz
07ddc     10 5E 85 F1 | 	sub	fp, #16
07de0     01 00 00 FF 
07de4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07de8     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
07dec     01 00 00 FF 
07df0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07df4     01 2A 66 56 |  if_ne	neg	result1, #1
07df8     00 2A 06 A6 |  if_e	mov	result1, #0
07dfc     E0 01 90 FD | 	jmp	#LR__0446
07e00                 | LR__0439
07e00     10 5E 05 F1 | 	add	fp, #16
07e04     AF 2A 02 FB | 	rdlong	result1, fp
07e08     10 5E 85 F1 | 	sub	fp, #16
07e0c     D0 01 90 FD | 	jmp	#LR__0446
07e10                 | LR__0440
07e10     04 5E 05 F1 | 	add	fp, #4
07e14     AF 6A 02 FB | 	rdlong	local01, fp
07e18     1C 6A 06 F1 | 	add	local01, #28
07e1c     35 6F 02 FB | 	rdlong	local03, local01
07e20     14 5E 05 F1 | 	add	fp, #20
07e24     AF 6E 62 FC | 	wrlong	local03, fp
07e28     AF 6A 0A FB | 	rdlong	local01, fp wz
07e2c     18 5E 85 F1 | 	sub	fp, #24
07e30     1C 00 90 5D |  if_ne	jmp	#LR__0441
07e34     01 00 00 FF 
07e38     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07e3c     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07e40     01 00 00 FF 
07e44     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07e48     01 2A 66 F6 | 	neg	result1, #1
07e4c     90 01 90 FD | 	jmp	#LR__0446
07e50                 | LR__0441
07e50     04 5E 05 F1 | 	add	fp, #4
07e54     AF 6A 02 FB | 	rdlong	local01, fp
07e58     04 5E 85 F1 | 	sub	fp, #4
07e5c     24 6A 06 F1 | 	add	local01, #36
07e60     35 6F 0A FB | 	rdlong	local03, local01 wz
07e64     A0 00 90 AD |  if_e	jmp	#LR__0443
07e68     24 5E 05 F1 | 	add	fp, #36
07e6c     AF 74 02 F6 | 	mov	local06, fp
07e70     20 5E 85 F1 | 	sub	fp, #32
07e74     AF 76 02 FB | 	rdlong	local07, fp
07e78     3B 71 02 F6 | 	mov	local04, local07
07e7c     24 70 06 F1 | 	add	local04, #36
07e80     38 79 02 FB | 	rdlong	local08, local04
07e84     3C 6B 02 F6 | 	mov	local01, local08
07e88     35 6D 02 FB | 	rdlong	local02, local01
07e8c     04 6A 06 F1 | 	add	local01, #4
07e90     35 7B 02 FB | 	rdlong	local09, local01
07e94     3D 6F 02 F6 | 	mov	local03, local09
07e98     3B 7D 02 F6 | 	mov	local10, local07
07e9c     04 5E 85 F1 | 	sub	fp, #4
07ea0     3E 7F 02 F6 | 	mov	local11, local10
07ea4     00 81 06 F6 | 	mov	local12, #256
07ea8     3A 83 02 F6 | 	mov	local13, local06
07eac     3F 5D 02 F6 | 	mov	arg01, local11
07eb0     00 5F 06 F6 | 	mov	arg02, #256
07eb4     41 61 02 F6 | 	mov	arg03, local13
07eb8     07 85 02 F6 | 	mov	local14, objptr
07ebc     36 0F 02 F6 | 	mov	objptr, local02
07ec0     2D 6E 62 FD | 	call	local03
07ec4     42 0F 02 F6 | 	mov	objptr, local14
07ec8     15 87 02 F6 | 	mov	local15, result1
07ecc     10 5E 05 F1 | 	add	fp, #16
07ed0     AF 86 62 FC | 	wrlong	local15, fp
07ed4     AF 6C 0A FB | 	rdlong	local02, fp wz
07ed8     10 5E 85 F1 | 	sub	fp, #16
07edc     28 00 90 5D |  if_ne	jmp	#LR__0442
07ee0     24 5E 05 F1 | 	add	fp, #36
07ee4     AF 70 02 FB | 	rdlong	local04, fp
07ee8     24 5E 85 F1 | 	sub	fp, #36
07eec     38 6F 02 F6 | 	mov	local03, local04
07ef0     02 6E 0E F5 | 	and	local03, #2 wz
07ef4     10 00 90 AD |  if_e	jmp	#LR__0442
07ef8     01 6A 06 F6 | 	mov	local01, #1
07efc     20 5E 05 F1 | 	add	fp, #32
07f00     AF 02 68 FC | 	wrlong	#1, fp
07f04     20 5E 85 F1 | 	sub	fp, #32
07f08                 | LR__0442
07f08                 | LR__0443
07f08     10 5E 05 F1 | 	add	fp, #16
07f0c     AF 00 68 FC | 	wrlong	#0, fp
07f10     10 5E 85 F1 | 	sub	fp, #16
07f14                 | LR__0444
07f14     0C 5E 05 F1 | 	add	fp, #12
07f18     AF 6A 02 FB | 	rdlong	local01, fp
07f1c     0C 5E 85 F1 | 	sub	fp, #12
07f20     00 6A 1E F2 | 	cmp	local01, #0 wcz
07f24     AC 00 90 ED |  if_be	jmp	#LR__0445
07f28     18 5E 05 F1 | 	add	fp, #24
07f2c     AF 6A 02 FB | 	rdlong	local01, fp
07f30     35 6D 02 FB | 	rdlong	local02, local01
07f34     04 6A 06 F1 | 	add	local01, #4
07f38     35 6F 02 FB | 	rdlong	local03, local01
07f3c     14 5E 85 F1 | 	sub	fp, #20
07f40     AF 5C 02 FB | 	rdlong	arg01, fp
07f44     04 5E 85 F1 | 	sub	fp, #4
07f48     07 7F 02 F6 | 	mov	local11, objptr
07f4c     36 0F 02 F6 | 	mov	objptr, local02
07f50     2D 6E 62 FD | 	call	local03
07f54     3F 0F 02 F6 | 	mov	objptr, local11
07f58     15 7D 02 F6 | 	mov	local10, result1
07f5c     14 5E 05 F1 | 	add	fp, #20
07f60     AF 7C 62 FC | 	wrlong	local10, fp
07f64     14 5E 85 F1 | 	sub	fp, #20
07f68     00 7C 5E F2 | 	cmps	local10, #0 wcz
07f6c     64 00 90 CD |  if_b	jmp	#LR__0445
07f70     1C 5E 05 F1 | 	add	fp, #28
07f74     AF 6A 02 FB | 	rdlong	local01, fp
07f78     35 6F 02 F6 | 	mov	local03, local01
07f7c     01 6E 06 F1 | 	add	local03, #1
07f80     AF 6E 62 FC | 	wrlong	local03, fp
07f84     08 5E 85 F1 | 	sub	fp, #8
07f88     AF 76 02 FB | 	rdlong	local07, fp
07f8c     35 77 42 FC | 	wrbyte	local07, local01
07f90     04 5E 85 F1 | 	sub	fp, #4
07f94     AF 6A 02 FB | 	rdlong	local01, fp
07f98     01 6A 06 F1 | 	add	local01, #1
07f9c     AF 6A 62 FC | 	wrlong	local01, fp
07fa0     04 5E 85 F1 | 	sub	fp, #4
07fa4     AF 6A 02 FB | 	rdlong	local01, fp
07fa8     01 6A 86 F1 | 	sub	local01, #1
07fac     AF 6A 62 FC | 	wrlong	local01, fp
07fb0     14 5E 05 F1 | 	add	fp, #20
07fb4     AF 6A 0A FB | 	rdlong	local01, fp wz
07fb8     20 5E 85 F1 | 	sub	fp, #32
07fbc     54 FF 9F AD |  if_e	jmp	#LR__0444
07fc0     14 5E 05 F1 | 	add	fp, #20
07fc4     AF 6E 02 FB | 	rdlong	local03, fp
07fc8     14 5E 85 F1 | 	sub	fp, #20
07fcc     0A 6E 0E F2 | 	cmp	local03, #10 wz
07fd0     40 FF 9F 5D |  if_ne	jmp	#LR__0444
07fd4                 | LR__0445
07fd4     10 5E 05 F1 | 	add	fp, #16
07fd8     AF 2A 02 FB | 	rdlong	result1, fp
07fdc     10 5E 85 F1 | 	sub	fp, #16
07fe0                 | LR__0446
07fe0     AF F0 03 F6 | 	mov	ptra, fp
07fe4     BF 00 A0 FD | 	call	#popregs_
07fe8                 | __system___vfsread_ret
07fe8     2D 00 64 FD | 	ret
07fec                 | 
07fec                 | ' 	
07fec                 | ' 	FUNCTION pfunc(c as integer) as integer
07fec                 | ___strs_cl_pfunc
07fec                 | ' 		if (i < 16) then
07fec     04 0E 06 F1 | 	add	objptr, #4
07ff0     07 31 02 FB | 	rdlong	_var01, objptr
07ff4     04 0E 86 F1 | 	sub	objptr, #4
07ff8     10 30 5E F2 | 	cmps	_var01, #16 wcz
07ffc     2C 00 90 3D |  if_ae	jmp	#LR__0447
08000     07 33 02 FB | 	rdlong	_var02, objptr
08004     04 0E 06 F1 | 	add	objptr, #4
08008     07 35 02 FB | 	rdlong	_var03, objptr
0800c     19 35 02 F1 | 	add	_var03, _var02
08010     1A 5D 42 FC | 	wrbyte	arg01, _var03
08014     07 31 02 FB | 	rdlong	_var01, objptr
08018     01 30 06 F1 | 	add	_var01, #1
0801c     07 31 62 FC | 	wrlong	_var01, objptr
08020     04 0E 86 F1 | 	sub	objptr, #4
08024                 | ' 			p(i) = c
08024                 | ' 			i = i+1
08024                 | ' 			return 1
08024     01 2A 06 F6 | 	mov	result1, #1
08028     04 00 90 FD | 	jmp	#___strs_cl_pfunc_ret
0802c                 | LR__0447
0802c                 | ' 			return -1
0802c     01 2A 66 F6 | 	neg	result1, #1
08030                 | ___strs_cl_pfunc_ret
08030     2D 00 64 FD | 	ret
08034                 | 
08034                 | __struct__s_vfs_file_t_putchar
08034     04 5A 05 F6 | 	mov	COUNT_, #4
08038     B0 00 A0 FD | 	call	#pushregs_
0803c     18 0E 06 F1 | 	add	objptr, #24
08040     07 6B 0A FB | 	rdlong	local01, objptr wz
08044     18 0E 86 F1 | 	sub	objptr, #24
08048     00 2A 06 A6 |  if_e	mov	result1, #0
0804c     3C 00 90 AD |  if_e	jmp	#LR__0448
08050     18 0E 06 F1 | 	add	objptr, #24
08054     07 6B 02 FB | 	rdlong	local01, objptr
08058     18 0E 86 F1 | 	sub	objptr, #24
0805c     35 6D 02 FB | 	rdlong	local02, local01
08060     04 6A 06 F1 | 	add	local01, #4
08064     35 6F 02 FB | 	rdlong	local03, local01
08068     07 5F 02 F6 | 	mov	arg02, objptr
0806c     07 71 02 F6 | 	mov	local04, objptr
08070     36 0F 02 F6 | 	mov	objptr, local02
08074     2D 6E 62 FD | 	call	local03
08078     38 0F 02 F6 | 	mov	objptr, local04
0807c     00 2A 5E F2 | 	cmps	result1, #0 wcz
08080     00 6A 06 C6 |  if_b	mov	local01, #0
08084     01 6A 06 36 |  if_ae	mov	local01, #1
08088     35 2B 02 F6 | 	mov	result1, local01
0808c                 | LR__0448
0808c     AF F0 03 F6 | 	mov	ptra, fp
08090     BF 00 A0 FD | 	call	#popregs_
08094                 | __struct__s_vfs_file_t_putchar_ret
08094     2D 00 64 FD | 	ret
08098                 | 
08098                 | __struct__s_vfs_file_t_getchar
08098     04 5A 05 F6 | 	mov	COUNT_, #4
0809c     B0 00 A0 FD | 	call	#pushregs_
080a0     1C 0E 06 F1 | 	add	objptr, #28
080a4     07 6B 0A FB | 	rdlong	local01, objptr wz
080a8     1C 0E 86 F1 | 	sub	objptr, #28
080ac     01 2A 66 A6 |  if_e	neg	result1, #1
080b0     2C 00 90 AD |  if_e	jmp	#LR__0449
080b4                 | '         return getcf(__this);
080b4     1C 0E 06 F1 | 	add	objptr, #28
080b8     07 6B 02 FB | 	rdlong	local01, objptr
080bc     1C 0E 86 F1 | 	sub	objptr, #28
080c0     35 6D 02 FB | 	rdlong	local02, local01
080c4     04 6A 06 F1 | 	add	local01, #4
080c8     35 6F 02 FB | 	rdlong	local03, local01
080cc     07 5D 02 F6 | 	mov	arg01, objptr
080d0     07 71 02 F6 | 	mov	local04, objptr
080d4     36 0F 02 F6 | 	mov	objptr, local02
080d8     2D 6E 62 FD | 	call	local03
080dc     38 0F 02 F6 | 	mov	objptr, local04
080e0                 | LR__0449
080e0     AF F0 03 F6 | 	mov	ptra, fp
080e4     BF 00 A0 FD | 	call	#popregs_
080e8                 | __struct__s_vfs_file_t_getchar_ret
080e8     2D 00 64 FD | 	ret
080ec                 | 
080ec                 | __struct___bas_wrap_sender_tx
080ec     04 5A 05 F6 | 	mov	COUNT_, #4
080f0     B0 00 A0 FD | 	call	#pushregs_
080f4     07 6B 02 FB | 	rdlong	local01, objptr
080f8     35 6D 02 FB | 	rdlong	local02, local01
080fc     04 6A 06 F1 | 	add	local01, #4
08100     35 6F 02 FB | 	rdlong	local03, local01
08104     07 71 02 F6 | 	mov	local04, objptr
08108     36 0F 02 F6 | 	mov	objptr, local02
0810c     2D 6E 62 FD | 	call	local03
08110     38 0F 02 F6 | 	mov	objptr, local04
08114     01 2A 06 F6 | 	mov	result1, #1
08118     AF F0 03 F6 | 	mov	ptra, fp
0811c     BF 00 A0 FD | 	call	#popregs_
08120                 | __struct___bas_wrap_sender_tx_ret
08120     2D 00 64 FD | 	ret
08124                 | 
08124                 | LR__0450
08124     20          | 	byte	" "
08125     00          | 	byte	0
08126                 | LR__0451
08126                 | 	byte	
08126     00          | 	byte	0
08127                 | LR__0452
08127                 | 	byte	
08127     00          | 	byte	0
08128                 | LR__0453
08128     20 21 21 21 
0812c     20 63 6F 72 
08130     72 75 70 74 
08134     65 64 20 68 
08138     65 61 70 3F 
0813c     3F 3F 20 21 
08140     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
08143     00          | 	byte	0
08144                 | LR__0454
08144     20 21 21 21 
08148     20 6F 75 74 
0814c     20 6F 66 20 
08150     68 65 61 70 
08154     20 6D 65 6D 
08158     6F 72 79 20 
0815c     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
08160     00          | 	byte	0
08161                 | LR__0455
08161     20 21 21 21 
08165     20 63 6F 72 
08169     72 75 70 74 
0816d     65 64 20 68 
08171     65 61 70 20 
08175     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
08179     00          | 	byte	0
0817a                 | LR__0456
0817a     43 6F 75 6E 
0817e     74 65 72 3A 
08182     20          | 	byte	"Counter: "
08183     00          | 	byte	0
08184                 | LR__0457
08184     4E 61 6D 65 
08188     20 20 20 20 
0818c     20 20 20 20 
08190     20 20 20 20 
08194     20 20 20 20 
08198     20 20 20 6C 
0819c     65 6E 20 20 
081a0     20 66 74 20 
081a4     76 6F 6C 20 
081a8     72 65 70 20 
081ac     20 20 72 2E 
081b0     6C 65 6E 20 
081b4     20 20 20 20 
081b8     20 20 20 20 
081bc     4E 61 6D 65 
081c0     20 20 20 20 
081c4     20 20 20 20 
081c8     20 20 20 20 
081cc     20 20 20 20 
081d0     20 20 20 6C 
081d4     65 6E 20 20 
081d8     20 66 74 20 
081dc     76 6F 6C 20 
081e0     72 65 70 20 
081e4     20 20 72 2E 
081e8     6C 65 6E 20 | 	byte	"Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
081ec     00          | 	byte	0
081ed                 | LR__0458
081ed     53          | 	byte	"S"
081ee     00          | 	byte	0
081ef                 | LR__0459
081ef     20 20 20 20 
081f3     20 20 20 20 
081f7     20 20 20 20 
081fb     20 20 20 20 
081ff     20 20 20 20 
08203     20 20       | 	byte	"                      "
08205     00          | 	byte	0
08206                 | LR__0460
08206     20          | 	byte	" "
08207     00          | 	byte	0
08208                 | LR__0461
08208     73 61 6D 70 
0820c     6C 65 73 20 
08210     6D 6F 64 75 
08214     6C 65       | 	byte	"samples module"
08216     00          | 	byte	0
08217     00          | 	alignl
08218                 | _dat_
08218     68 79 6D 6E 
0821c     20 74 6F 20 
08220     61 75 72 6F 
08224     72 61 00 00 | module file "../../../mod/proba.mod"
08228     00 00 00 00 
0822c     00 00 00 00 
08230     00 00 00 00 | 	byte	$00[12]
08234     1A 10 00 00 
08238     22 00 0C 00 
0823c     18 00 10 00 
08240     01 13 02 00 | 	byte	$1a, $10, $00, $00, $22, $00, $0c, $00, $18, $00, $10, $00, $01, $13, $02, $00
08244     53 43 52 4D 
08248     40 06 7D 30 
0824c     00 00 00 00 
08250     00 00 00 00 | 	byte	$53, $43, $52, $4d, $40, $06, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00
08254     00 00 00 00 
08258     00          | 	byte	$00[5]
08259     09 0A 03 04 
0825d     0D 0E 07 FF 
08261     FF FF FF FF 
08265     FF FF FF FF | 	byte	$09, $0a, $03, $04, $0d, $0e, $07, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
08269     FF FF FF FF 
0826d     FF FF FF FF 
08271     FF FF FF FF 
08275     FF FF FF    | 	byte	$ff[15]
08278     00 02 03 04 
0827c     05 05 06 07 
08280     06 08 09 09 
08284     0A 0B 09 09 | 	byte	$00, $02, $03, $04, $05, $05, $06, $07, $06, $08, $09, $09, $0a, $0b, $09, $09
08288     0C 0D 0E 0F 
0828c     10 11 12 0F 
08290     13 14 12 0F 
08294     15 16 17 12 | 	byte	$0c, $0d, $0e, $0f, $10, $11, $12, $0f, $13, $14, $12, $0f, $15, $16, $17, $12
08298     0F FF 0D 00 
0829c     12 00 17 00 
082a0     1C 00 21 00 
082a4     26 00 2B 00 | 	byte	$0f, $ff, $0d, $00, $12, $00, $17, $00, $1c, $00, $21, $00, $26, $00, $2b, $00
082a8     30 00 35 00 
082ac     3A 00 3F 00 
082b0     44 00 49 00 
082b4     65 00 7F 00 | 	byte	$30, $00, $35, $00, $3a, $00, $3f, $00, $44, $00, $49, $00, $65, $00, $7f, $00
082b8     A0 00 B9 00 
082bc     D9 00 F7 00 
082c0     0F 01 25 01 
082c4     3E 01 5E 01 | 	byte	$a0, $00, $b9, $00, $d9, $00, $f7, $00, $0f, $01, $25, $01, $3e, $01, $5e, $01
082c8     7B 01 99 01 
082cc     B2 01 C4 01 
082d0     E0 01 FE 01 
082d4     16 02 2F 02 | 	byte	$7b, $01, $99, $01, $b2, $01, $c4, $01, $e0, $01, $fe, $01, $16, $02, $2f, $02
082d8     4F 02 6D 02 
082dc     8B 02 A6 02 
082e0     CB 02 80 80 
082e4     80 80 80 80 | 	byte	$4f, $02, $6d, $02, $8b, $02, $a6, $02, $cb, $02, $80, $80, $80, $80, $80, $80
082e8     01 6D 61 74 
082ec     74 61 6D 61 
082f0     6A 2E 33 32 
082f4     32 00 F5 02 | 	byte	$01, $6d, $61, $74, $74, $61, $6d, $61, $6a, $2e, $33, $32, $32, $00, $f5, $02
082f8     EC 26 00 00 
082fc     00 00 00 00 
08300     EC 26 00 00 
08304     1E 00 00 01 | 	byte	$ec, $26, $00, $00, $00, $00, $00, $00, $ec, $26, $00, $00, $1e, $00, $00, $01
08308     AB 20 00 00 
0830c     00 00 00 00 
08310     01 00 EC 26 
08314     00 00 00 00 | 	byte	$ab, $20, $00, $00, $00, $00, $00, $00, $01, $00, $ec, $26, $00, $00, $00, $00
08318     6D 61 74 74 
0831c     61 2E 6D 61 
08320     6A 6F 72 00 
08324     00 00 00 00 | 	byte	$6d, $61, $74, $74, $61, $2e, $6d, $61, $6a, $6f, $72, $00, $00, $00, $00, $00
08328     00 00 00 00 
0832c     00 00 00 00 
08330     00 00 00 00 | 	byte	$00[12]
08334     53 43 52 53 
08338     01 6D 61 74 
0833c     74 61 6D 69 
08340     6E 2E 34 31 | 	byte	$53, $43, $52, $53, $01, $6d, $61, $74, $74, $61, $6d, $69, $6e, $2e, $34, $31
08344     30 00 64 05 
08348     14 27 00 00 
0834c     00 00 00 00 
08350     14 27 00 00 | 	byte	$30, $00, $64, $05, $14, $27, $00, $00, $00, $00, $00, $00, $14, $27, $00, $00
08354     1E 00 00 01 
08358     AB 20 00 00 
0835c     00 00 00 00 
08360     3B 01 14 27 | 	byte	$1e, $00, $00, $01, $ab, $20, $00, $00, $00, $00, $00, $00, $3b, $01, $14, $27
08364     00 00 00 00 
08368     6D 61 74 74 
0836c     61 2E 6D 69 
08370     6E 6F 72 00 | 	byte	$00, $00, $00, $00, $6d, $61, $74, $74, $61, $2e, $6d, $69, $6e, $6f, $72, $00
08374     00 00 00 00 
08378     00 00 00 00 
0837c     00 00 00 00 
08380     00 00 00 00 | 	byte	$00[16]
08384     53 43 52 53 
08388     01 70 65 72 
0838c     63 62 61 73 
08390     73 2E 33 34 | 	byte	$53, $43, $52, $53, $01, $70, $65, $72, $63, $62, $61, $73, $73, $2e, $33, $34
08394     34 00 D6 07 
08398     9C 04 00 00 
0839c     00 00 00 00 
083a0     00 00 00 00 | 	byte	$34, $00, $d6, $07, $9c, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083a4     40 00 00 00 
083a8     AB 20 00 00 
083ac     00 00 00 00 
083b0     76 02 00 00 | 	byte	$40, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $76, $02, $00, $00
083b4     00 00 00 00 
083b8     70 65 72 63 
083bc     2E 62 61 73 
083c0     73 64 72 75 | 	byte	$00, $00, $00, $00, $70, $65, $72, $63, $2e, $62, $61, $73, $73, $64, $72, $75
083c4     6D 35 20 20 
083c8     00 00 00 00 
083cc     00 00 00 00 
083d0     00 00 00 00 | 	byte	$6d, $35, $20, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083d4     53 43 52 53 
083d8     01 70 65 72 
083dc     63 73 68 61 
083e0     6B 2E 32 38 | 	byte	$53, $43, $52, $53, $01, $70, $65, $72, $63, $73, $68, $61, $6b, $2e, $32, $38
083e4     31 00 20 08 
083e8     FC 08 00 00 
083ec     00 00 00 00 
083f0     00 00 00 00 | 	byte	$31, $00, $20, $08, $fc, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083f4     17 00 00 00 
083f8     AB 20 00 00 
083fc     00 00 00 00 
08400     9D 02 00 00 | 	byte	$17, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $9d, $02, $00, $00
08404     00 00 00 00 
08408     70 65 72 63 
0840c     2E 73 68 61 
08410     6B 65 72 00 | 	byte	$00, $00, $00, $00, $70, $65, $72, $63, $2e, $73, $68, $61, $6b, $65, $72, $00
08414     00 00 00 00 
08418     00 00 00 00 
0841c     00 00 00 00 
08420     00 00 00 00 | 	byte	$00[16]
08424     53 43 52 53 
08428     01 70 65 72 
0842c     63 73 6E 61 
08430     72 2E 33 37 | 	byte	$53, $43, $52, $53, $01, $70, $65, $72, $63, $73, $6e, $61, $72, $2e, $33, $37
08434     33 00 B0 08 
08438     3C 0F 00 00 
0843c     00 00 00 00 
08440     00 00 00 00 | 	byte	$33, $00, $b0, $08, $3c, $0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08444     26 00 00 00 
08448     AB 20 00 00 
0844c     00 00 00 00 
08450     E7 02 00 00 | 	byte	$26, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $e7, $02, $00, $00
08454     00 00 00 00 
08458     70 65 72 63 
0845c     2E 73 6E 61 
08460     72 65 33 00 | 	byte	$00, $00, $00, $00, $70, $65, $72, $63, $2e, $73, $6e, $61, $72, $65, $33, $00
08464     00 00 00 00 
08468     00 00 00 00 
0846c     00 00 00 00 
08470     00 00 00 00 | 	byte	$00[16]
08474     53 43 52 53 
08478     01 62 61 73 
0847c     73 66 6C 69 
08480     63 2E 32 37 | 	byte	$53, $43, $52, $53, $01, $62, $61, $73, $73, $66, $6c, $69, $63, $2e, $32, $37
08484     37 00 A4 09 
08488     20 1E 00 00 
0848c     00 00 00 00 
08490     00 00 00 00 | 	byte	$37, $00, $a4, $09, $20, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08494     23 00 00 00 
08498     AB 20 00 00 
0849c     00 00 00 00 
084a0     63 03 00 00 | 	byte	$23, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $63, $03, $00, $00
084a4     00 00 00 00 
084a8     62 61 73 73 
084ac     2E 66 6C 69 
084b0     63 6B 00 00 | 	byte	$00, $00, $00, $00, $62, $61, $73, $73, $2e, $66, $6c, $69, $63, $6b, $00, $00
084b4     00 00 00 00 
084b8     00 00 00 00 
084bc     00 00 00 00 
084c0     00 00 00 00 | 	byte	$00[16]
084c4     53 43 52 53 
084c8     01 70 61 73 
084cc     73 69 6F 6E 
084d0     2E 33 36 31 | 	byte	$53, $43, $52, $53, $01, $70, $61, $73, $73, $69, $6f, $6e, $2e, $33, $36, $31
084d4     00 00 86 0B 
084d8     3E 11 00 00 
084dc     00 00 00 00 
084e0     00 00 00 00 | 	byte	$00, $00, $86, $0b, $3e, $11, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084e4     23 00 00 00 
084e8     AB 20 00 00 
084ec     00 00 00 00 
084f0     56 04 00 00 | 	byte	$23, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $56, $04, $00, $00
084f4     00 00 00 00 
084f8     70 61 73 73 
084fc     69 6F 6E 00 
08500     00 00 00 00 | 	byte	$00, $00, $00, $00, $70, $61, $73, $73, $69, $6f, $6e, $00, $00, $00, $00, $00
08504     00 00 00 00 
08508     00 00 00 00 
0850c     00 00 00 00 
08510     00 00 00 00 | 	byte	$00[16]
08514     53 43 52 53 
08518     01 74 69 6E 
0851c     65 77 61 76 
08520     65 2E 31 33 | 	byte	$53, $43, $52, $53, $01, $74, $69, $6e, $65, $77, $61, $76, $65, $2e, $31, $33
08524     36 00 9A 0C 
08528     AC 26 00 00 
0852c     00 00 00 00 
08530     00 00 00 00 | 	byte	$36, $00, $9a, $0c, $ac, $26, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08534     2B 00 00 00 
08538     AB 20 00 00 
0853c     00 00 00 00 
08540     E2 04 00 00 | 	byte	$2b, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $e2, $04, $00, $00
08544     00 00 00 00 
08548     74 69 6E 65 
0854c     77 61 76 65 
08550     00 00 00 00 | 	byte	$00, $00, $00, $00, $74, $69, $6e, $65, $77, $61, $76, $65, $00, $00, $00, $00
08554     00 00 00 00 
08558     00 00 00 00 
0855c     00 00 00 00 
08560     00 00 00 00 | 	byte	$00[16]
08564     53 43 52 53 
08568     01 62 6C 6F 
0856c     77 65 72 2E 
08570     36 32 35 00 | 	byte	$53, $43, $52, $53, $01, $62, $6c, $6f, $77, $65, $72, $2e, $36, $32, $35, $00
08574     00 00 05 0F 
08578     8C 23 00 00 
0857c     00 00 00 00 
08580     00 00 00 00 | 	byte	$00, $00, $05, $0f, $8c, $23, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08584     40 00 00 00 
08588     AB 20 00 00 
0858c     00 00 00 00 
08590     1A 06 00 00 | 	byte	$40, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $1a, $06, $00, $00
08594     00 00 00 00 
08598     62 6C 6F 77 
0859c     65 72 00 00 
085a0     00 00 00 00 | 	byte	$00, $00, $00, $00, $62, $6c, $6f, $77, $65, $72, $00, $00, $00, $00, $00, $00
085a4     00 00 00 00 
085a8     00 00 00 00 
085ac     00 00 00 00 
085b0     00 00 00 00 | 	byte	$00[16]
085b4     53 43 52 53 
085b8     01 68 61 6C 
085bc     6C 6D 61 6A 
085c0     6F 2E 33 30 | 	byte	$53, $43, $52, $53, $01, $68, $61, $6c, $6c, $6d, $61, $6a, $6f, $2e, $33, $30
085c4     36 00 3E 11 
085c8     4E 25 00 00 
085cc     00 00 00 00 
085d0     4E 25 00 00 | 	byte	$36, $00, $3e, $11, $4e, $25, $00, $00, $00, $00, $00, $00, $4e, $25, $00, $00
085d4     1C 00 00 01 
085d8     AB 20 00 00 
085dc     00 00 00 00 
085e0     39 07 4E 25 | 	byte	$1c, $00, $00, $01, $ab, $20, $00, $00, $00, $00, $00, $00, $39, $07, $4e, $25
085e4     00 00 00 00 
085e8     68 61 6C 6C 
085ec     2E 6D 61 6A 
085f0     6F 72 00 00 | 	byte	$00, $00, $00, $00, $68, $61, $6c, $6c, $2e, $6d, $61, $6a, $6f, $72, $00, $00
085f4     00 00 00 00 
085f8     00 00 00 00 
085fc     00 00 00 00 
08600     00 00 00 00 | 	byte	$00[16]
08604     53 43 52 53 
08608     01 68 61 6C 
0860c     6C 6D 69 6E 
08610     6F 2E 33 38 | 	byte	$53, $43, $52, $53, $01, $68, $61, $6c, $6c, $6d, $69, $6e, $6f, $2e, $33, $38
08614     32 00 93 13 
08618     B2 26 00 00 
0861c     00 00 00 00 
08620     B2 26 00 00 | 	byte	$32, $00, $93, $13, $b2, $26, $00, $00, $00, $00, $00, $00, $b2, $26, $00, $00
08624     1C 00 00 01 
08628     AB 20 00 00 
0862c     00 00 00 00 
08630     66 08 B2 26 | 	byte	$1c, $00, $00, $01, $ab, $20, $00, $00, $00, $00, $00, $00, $66, $08, $b2, $26
08634     00 00 00 00 
08638     68 61 6C 6C 
0863c     2E 6D 69 6E 
08640     6F 72 00 00 | 	byte	$00, $00, $00, $00, $68, $61, $6c, $6c, $2e, $6d, $69, $6e, $6f, $72, $00, $00
08644     00 00 00 00 
08648     00 00 00 00 
0864c     00 00 00 00 
08650     00 00 00 00 | 	byte	$00[16]
08654     53 43 52 53 
08658     01 73 68 61 
0865c     6D 75 73 2E 
08660     36 33 38 00 | 	byte	$53, $43, $52, $53, $01, $73, $68, $61, $6d, $75, $73, $2e, $36, $33, $38, $00
08664     00 00 FF 15 
08668     28 23 00 00 
0866c     00 00 00 00 
08670     00 00 00 00 | 	byte	$00, $00, $ff, $15, $28, $23, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08674     40 00 00 00 
08678     AB 20 00 00 
0867c     00 00 00 00 
08680     9E 09 00 00 | 	byte	$40, $00, $00, $00, $ab, $20, $00, $00, $00, $00, $00, $00, $9e, $09, $00, $00
08684     00 00 00 00 
08688     73 68 61 6D 
0868c     75 73 00 00 
08690     00 00 00 00 | 	byte	$00, $00, $00, $00, $73, $68, $61, $6d, $75, $73, $00, $00, $00, $00, $00, $00
08694     00 00 00 00 
08698     00 00 00 00 
0869c     00 00 00 00 
086a0     00 00 00 00 | 	byte	$00[16]
086a4     53 43 52 53 
086a8     B1 01 A0 49 
086ac     09 13 01 81 
086b0     01 06 62 52 | 	byte	$53, $43, $52, $53, $b1, $01, $a0, $49, $09, $13, $01, $81, $01, $06, $62, $52
086b4     02 00 63 52 
086b8     0B 00 00 42 
086bc     01 43 01 00 
086c0     40 07 42 02 | 	byte	$02, $00, $63, $52, $0b, $00, $00, $42, $01, $43, $01, $00, $40, $07, $42, $02
086c4     43 02 00 60 
086c8     49 09 15 42 
086cc     03 43 03 00 
086d0     20 49 09 42 | 	byte	$43, $02, $00, $60, $49, $09, $15, $42, $03, $43, $03, $00, $20, $49, $09, $42
086d4     04 43 04 00 
086d8     42 05 43 05 
086dc     00 20 47 09 
086e0     42 06 43 06 | 	byte	$04, $43, $04, $00, $42, $05, $43, $05, $00, $20, $47, $09, $42, $06, $43, $06
086e4     00 60 49 09 
086e8     15 42 07 43 
086ec     07 00 20 49 
086f0     09 42 08 43 | 	byte	$00, $60, $49, $09, $15, $42, $07, $43, $07, $00, $20, $49, $09, $42, $08, $43
086f4     08 00 60 47 
086f8     09 15 42 09 
086fc     43 09 00 20 
08700     47 09 42 0A | 	byte	$08, $00, $60, $47, $09, $15, $42, $09, $43, $09, $00, $20, $47, $09, $42, $0a
08704     43 0A 00 60 
08708     49 09 15 42 
0870c     0B 43 0B 00 
08710     20 45 09 42 | 	byte	$43, $0a, $00, $60, $49, $09, $15, $42, $0b, $43, $0b, $00, $20, $45, $09, $42
08714     0C 43 0C 00 
08718     60 47 09 15 
0871c     42 0D 43 0D 
08720     00 20 44 09 | 	byte	$0c, $43, $0c, $00, $60, $47, $09, $15, $42, $0d, $43, $0d, $00, $20, $44, $09
08724     42 0E 43 0E 
08728     00 60 45 09 
0872c     15 42 0F 43 
08730     0F 00 20 42 | 	byte	$42, $0e, $43, $0e, $00, $60, $45, $09, $15, $42, $0f, $43, $0f, $00, $20, $42
08734     09 42 10 43 
08738     10 00 60 44 
0873c     09 15 42 11 
08740     43 11 00 60 | 	byte	$09, $42, $10, $43, $10, $00, $60, $44, $09, $15, $42, $11, $43, $11, $00, $60
08744     45 09 07 42 
08748     12 43 12 00 
0874c     60 42 09 15 
08750     42 13 43 13 | 	byte	$45, $09, $07, $42, $12, $43, $12, $00, $60, $42, $09, $15, $42, $13, $43, $13
08754     00 60 44 09 
08758     07 42 14 43 
0875c     14 00 60 44 
08760     09 03 42 15 | 	byte	$00, $60, $44, $09, $07, $42, $14, $43, $14, $00, $60, $44, $09, $03, $42, $15
08764     43 15 00 20 
08768     40 09 42 16 
0876c     43 16 00 60 
08770     42 09 03 42 | 	byte	$43, $15, $00, $20, $40, $09, $42, $16, $43, $16, $00, $60, $42, $09, $03, $42
08774     17 43 17 00 
08778     20 42 09 62 
0877c     50 01 18 63 
08780     50 0A 18 00 | 	byte	$17, $43, $17, $00, $20, $42, $09, $62, $50, $01, $18, $63, $50, $0a, $18, $00
08784     60 40 09 15 
08788     42 19 43 19 
0878c     00 20 45 09 
08790     42 1A 43 1A | 	byte	$60, $40, $09, $15, $42, $19, $43, $19, $00, $20, $45, $09, $42, $1a, $43, $1a
08794     00 60 42 09 
08798     15 42 1B 43 
0879c     1B 00 20 40 
087a0     09 42 1C 43 | 	byte	$00, $60, $42, $09, $15, $42, $1b, $43, $1b, $00, $20, $40, $09, $42, $1c, $43
087a4     1C 00 60 45 
087a8     09 15 00 20 
087ac     45 09 00 60 
087b0     40 09 15 00 | 	byte	$1c, $00, $60, $45, $09, $15, $00, $20, $45, $09, $00, $60, $40, $09, $15, $00
087b4     20 3B 09 62 
087b8     57 01 1C 63 
087bc     57 0A 1C 00 
087c0     60 45 09 15 | 	byte	$20, $3b, $09, $62, $57, $01, $1c, $63, $57, $0a, $1c, $00, $60, $45, $09, $15
087c4     00 60 40 09 
087c8     07 00 60 3B 
087cc     09 15 00 60 
087d0     45 09 07 00 | 	byte	$00, $60, $40, $09, $07, $00, $60, $3b, $09, $15, $00, $60, $45, $09, $07, $00
087d4     60 3B 09 03 
087d8     00 20 42 09 
087dc     00 60 45 09 
087e0     03 00 20 3A | 	byte	$60, $3b, $09, $03, $00, $20, $42, $09, $00, $60, $45, $09, $03, $00, $20, $3a
087e4     09 62 55 01 
087e8     1C 63 55 0A 
087ec     1C 00 60 42 
087f0     09 15 00 20 | 	byte	$09, $62, $55, $01, $1c, $63, $55, $0a, $1c, $00, $60, $42, $09, $15, $00, $20
087f4     45 09 00 60 
087f8     3A 09 15 00 
087fc     20 44 09 00 
08800     60 45 09 15 | 	byte	$45, $09, $00, $60, $3a, $09, $15, $00, $20, $44, $09, $00, $60, $45, $09, $15
08804     00 20 45 09 
08808     00 60 44 09 
0880c     15 00 20 42 
08810     09 62 52 02 | 	byte	$00, $20, $45, $09, $00, $60, $44, $09, $15, $00, $20, $42, $09, $62, $52, $02
08814     1C 63 52 0B 
08818     1C 00 60 45 
0881c     09 15 00 60 
08820     44 09 07 00 | 	byte	$1c, $63, $52, $0b, $1c, $00, $60, $45, $09, $15, $00, $60, $44, $09, $07, $00
08824     60 42 09 15 
08828     00 60 45 09 
0882c     07 00 60 44 
08830     09 03 00 60 | 	byte	$60, $42, $09, $15, $00, $60, $45, $09, $07, $00, $60, $44, $09, $03, $00, $60
08834     42 09 07 00 
08838     60 45 09 03 
0883c     00 60 44 09 
08840     01 00 60 42 | 	byte	$42, $09, $07, $00, $60, $45, $09, $03, $00, $60, $44, $09, $01, $00, $60, $42
08844     09 03 00 60 
08848     45 09 01 00 
0884c     40 00 00 60 
08850     42 09 01 00 | 	byte	$09, $03, $00, $60, $45, $09, $01, $00, $40, $00, $00, $60, $42, $09, $01, $00
08854     40 00 00 00 
08858     00 80 80 80 
0885c     80 80 80 80 
08860     80 80 80 80 | 	byte	$40, $00, $00, $00, $00, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
08864     80 80 80 80 
08868     9D 01 20 42 
0886c     08 21 49 03 
08870     22 52 07 23 | 	byte	$80, $80, $80, $80, $9d, $01, $20, $42, $08, $21, $49, $03, $22, $52, $07, $23
08874     52 02 00 00 
08878     21 52 06 62 
0887c     52 07 15 00 
08880     21 42 06 00 | 	byte	$52, $02, $00, $00, $21, $52, $06, $62, $52, $07, $15, $00, $21, $42, $06, $00
08884     20 52 04 21 
08888     52 06 22 55 
0888c     07 00 21 52 
08890     06 00 21 42 | 	byte	$20, $52, $04, $21, $52, $06, $22, $55, $07, $00, $21, $52, $06, $00, $21, $42
08894     06 62 55 07 
08898     15 00 21 52 
0889c     06 00 20 42 
088a0     08 21 52 05 | 	byte	$06, $62, $55, $07, $15, $00, $21, $52, $06, $00, $20, $42, $08, $21, $52, $05
088a4     22 54 07 00 
088a8     00 21 52 06 
088ac     62 54 07 15 
088b0     00 21 42 06 | 	byte	$22, $54, $07, $00, $00, $21, $52, $06, $62, $54, $07, $15, $00, $21, $42, $06
088b4     00 20 44 08 
088b8     21 52 06 22 
088bc     55 07 00 21 
088c0     52 06 00 20 | 	byte	$00, $20, $44, $08, $21, $52, $06, $22, $55, $07, $00, $21, $52, $06, $00, $20
088c4     45 08 21 49 
088c8     03 22 50 07 
088cc     00 00 21 49 
088d0     03 62 50 07 | 	byte	$45, $08, $21, $49, $03, $22, $50, $07, $00, $00, $21, $49, $03, $62, $50, $07
088d4     15 23 55 01 
088d8     00 00 21 50 
088dc     06 62 50 07 
088e0     11 00 21 45 | 	byte	$15, $23, $55, $01, $00, $00, $21, $50, $06, $62, $50, $07, $11, $00, $21, $45
088e4     06 00 20 52 
088e8     04 21 50 06 
088ec     62 50 07 07 
088f0     00 21 50 06 | 	byte	$06, $00, $20, $52, $04, $21, $50, $06, $62, $50, $07, $07, $00, $21, $50, $06
088f4     00 21 45 06 
088f8     62 50 07 03 
088fc     00 21 50 06 
08900     00 20 45 08 | 	byte	$00, $21, $45, $06, $62, $50, $07, $03, $00, $21, $50, $06, $00, $20, $45, $08
08904     21 52 05 22 
08908     55 07 00 00 
0890c     20 47 08 21 
08910     50 06 22 57 | 	byte	$21, $52, $05, $22, $55, $07, $00, $00, $20, $47, $08, $21, $50, $06, $22, $57
08914     07 00 21 45 
08918     06 00 20 49 
0891c     08 21 50 06 
08920     22 59 07 00 | 	byte	$07, $00, $21, $45, $06, $00, $20, $49, $08, $21, $50, $06, $22, $59, $07, $00
08924     21 50 06 00 
08928     20 47 08 21 
0892c     45 06 22 57 
08930     07 00 21 50 | 	byte	$21, $50, $06, $00, $20, $47, $08, $21, $45, $06, $22, $57, $07, $00, $21, $50
08934     06 00 21 49 
08938     03 62 57 07 
0893c     15 23 57 01 
08940     00 00 21 52 | 	byte	$06, $00, $21, $49, $03, $62, $57, $07, $15, $23, $57, $01, $00, $00, $21, $52
08944     06 62 57 07 
08948     11 00 21 47 
0894c     06 00 20 52 
08950     04 21 52 06 | 	byte	$06, $62, $57, $07, $11, $00, $21, $47, $06, $00, $20, $52, $04, $21, $52, $06
08954     22 52 07 00 
08958     21 52 06 00 
0895c     20 42 08 21 
08960     47 06 62 52 | 	byte	$22, $52, $07, $00, $21, $52, $06, $00, $20, $42, $08, $21, $47, $06, $62, $52
08964     07 15 00 21 
08968     52 06 00 20 
0896c     47 08 21 52 
08970     05 22 55 07 | 	byte	$07, $15, $00, $21, $52, $06, $00, $20, $47, $08, $21, $52, $05, $22, $55, $07
08974     00 00 21 52 
08978     06 62 55 07 
0897c     15 00 21 47 
08980     06 00 20 45 | 	byte	$00, $00, $21, $52, $06, $62, $55, $07, $15, $00, $21, $47, $06, $00, $20, $45
08984     08 21 49 03 
08988     22 57 07 00 
0898c     00 20 44 08 
08990     21 49 03 62 | 	byte	$08, $21, $49, $03, $22, $57, $07, $00, $00, $20, $44, $08, $21, $49, $03, $62
08994     57 07 15 00 
08998     00 20 42 08 
0899c     21 49 03 22 
089a0     54 07 23 52 | 	byte	$57, $07, $15, $00, $00, $20, $42, $08, $21, $49, $03, $22, $54, $07, $23, $52
089a4     02 00 21 42 
089a8     06 00 21 55 
089ac     06 62 54 07 
089b0     15 00 21 42 | 	byte	$02, $00, $21, $42, $06, $00, $21, $55, $06, $62, $54, $07, $15, $00, $21, $42
089b4     06 00 20 52 
089b8     04 21 55 06 
089bc     22 55 07 00 
089c0     21 55 06 00 | 	byte	$06, $00, $20, $52, $04, $21, $55, $06, $22, $55, $07, $00, $21, $55, $06, $00
089c4     21 42 06 22 
089c8     52 07 00 21 
089cc     55 06 00 20 
089d0     42 08 21 52 | 	byte	$21, $42, $06, $22, $52, $07, $00, $21, $55, $06, $00, $20, $42, $08, $21, $52
089d4     05 62 52 07 
089d8     15 00 00 20 
089dc     39 08 21 55 
089e0     06 62 52 07 | 	byte	$05, $62, $52, $07, $15, $00, $00, $20, $39, $08, $21, $55, $06, $62, $52, $07
089e4     11 00 21 42 
089e8     06 00 20 40 
089ec     08 21 52 05 
089f0     62 52 07 07 | 	byte	$11, $00, $21, $42, $06, $00, $20, $40, $08, $21, $52, $05, $62, $52, $07, $07
089f4     00 21 52 05 
089f8     00 20 42 08 
089fc     62 52 07 03 
08a00     00 21 52 05 | 	byte	$00, $21, $52, $05, $00, $20, $42, $08, $62, $52, $07, $03, $00, $21, $52, $05
08a04     00 80 80 80 
08a08     0E 02 20 49 
08a0c     09 21 45 09 
08a10     00 00 40 07 | 	byte	$00, $80, $80, $80, $0e, $02, $20, $49, $09, $21, $45, $09, $00, $00, $40, $07
08a14     41 07 00 60 
08a18     49 09 15 61 
08a1c     45 09 15 00 
08a20     20 49 09 21 | 	byte	$41, $07, $00, $60, $49, $09, $15, $61, $45, $09, $15, $00, $20, $49, $09, $21
08a24     45 09 00 00 
08a28     20 47 09 21 
08a2c     44 09 00 60 
08a30     49 09 15 61 | 	byte	$45, $09, $00, $00, $20, $47, $09, $21, $44, $09, $00, $60, $49, $09, $15, $61
08a34     45 09 15 00 
08a38     20 49 09 21 
08a3c     45 09 00 60 
08a40     47 09 15 61 | 	byte	$45, $09, $15, $00, $20, $49, $09, $21, $45, $09, $00, $60, $47, $09, $15, $61
08a44     44 09 15 00 
08a48     20 47 09 21 
08a4c     44 09 00 60 
08a50     49 09 15 61 | 	byte	$44, $09, $15, $00, $20, $47, $09, $21, $44, $09, $00, $60, $49, $09, $15, $61
08a54     45 09 15 00 
08a58     20 45 09 21 
08a5c     42 09 00 60 
08a60     47 09 15 61 | 	byte	$45, $09, $15, $00, $20, $45, $09, $21, $42, $09, $00, $60, $47, $09, $15, $61
08a64     44 09 15 00 
08a68     20 44 09 21 
08a6c     40 09 00 60 
08a70     45 09 15 61 | 	byte	$44, $09, $15, $00, $20, $44, $09, $21, $40, $09, $00, $60, $45, $09, $15, $61
08a74     42 09 15 00 
08a78     20 42 09 21 
08a7c     39 09 00 60 
08a80     44 09 15 61 | 	byte	$42, $09, $15, $00, $20, $42, $09, $21, $39, $09, $00, $60, $44, $09, $15, $61
08a84     40 09 15 00 
08a88     60 45 09 07 
08a8c     61 42 09 07 
08a90     00 60 42 09 | 	byte	$40, $09, $15, $00, $60, $45, $09, $07, $61, $42, $09, $07, $00, $60, $42, $09
08a94     15 61 39 09 
08a98     15 00 60 44 
08a9c     09 07 61 40 
08aa0     09 07 00 60 | 	byte	$15, $61, $39, $09, $15, $00, $60, $44, $09, $07, $61, $40, $09, $07, $00, $60
08aa4     44 09 03 61 
08aa8     44 09 03 00 
08aac     20 40 09 21 
08ab0     37 09 00 60 | 	byte	$44, $09, $03, $61, $44, $09, $03, $00, $20, $40, $09, $21, $37, $09, $00, $60
08ab4     42 09 03 61 
08ab8     39 09 03 00 
08abc     20 42 09 21 
08ac0     39 09 62 50 | 	byte	$42, $09, $03, $61, $39, $09, $03, $00, $20, $42, $09, $21, $39, $09, $62, $50
08ac4     01 1C 63 50 
08ac8     0A 1C 00 60 
08acc     40 09 15 61 
08ad0     37 09 15 00 | 	byte	$01, $1c, $63, $50, $0a, $1c, $00, $60, $40, $09, $15, $61, $37, $09, $15, $00
08ad4     20 45 09 21 
08ad8     42 09 00 60 
08adc     42 09 15 61 
08ae0     39 09 15 00 | 	byte	$20, $45, $09, $21, $42, $09, $00, $60, $42, $09, $15, $61, $39, $09, $15, $00
08ae4     20 40 09 21 
08ae8     39 09 00 60 
08aec     45 09 15 61 
08af0     42 09 15 00 | 	byte	$20, $40, $09, $21, $39, $09, $00, $60, $45, $09, $15, $61, $42, $09, $15, $00
08af4     20 45 09 21 
08af8     40 09 00 60 
08afc     40 09 15 61 
08b00     37 09 15 00 | 	byte	$20, $45, $09, $21, $40, $09, $00, $60, $40, $09, $15, $61, $37, $09, $15, $00
08b04     20 3B 09 21 
08b08     37 09 62 57 
08b0c     01 1C 63 57 
08b10     0A 1C 00 60 | 	byte	$20, $3b, $09, $21, $37, $09, $62, $57, $01, $1c, $63, $57, $0a, $1c, $00, $60
08b14     45 09 15 61 
08b18     40 09 15 00 
08b1c     60 40 09 07 
08b20     61 37 09 07 | 	byte	$45, $09, $15, $61, $40, $09, $15, $00, $60, $40, $09, $07, $61, $37, $09, $07
08b24     00 60 3B 09 
08b28     15 61 37 09 
08b2c     15 00 60 45 
08b30     09 07 61 40 | 	byte	$00, $60, $3b, $09, $15, $61, $37, $09, $15, $00, $60, $45, $09, $07, $61, $40
08b34     09 07 00 60 
08b38     3B 09 03 61 
08b3c     37 09 03 00 
08b40     20 40 09 21 | 	byte	$09, $07, $00, $60, $3b, $09, $03, $61, $37, $09, $03, $00, $20, $40, $09, $21
08b44     37 09 00 60 
08b48     45 09 03 61 
08b4c     40 09 03 00 
08b50     20 3A 09 21 | 	byte	$37, $09, $00, $60, $45, $09, $03, $61, $40, $09, $03, $00, $20, $3a, $09, $21
08b54     37 09 62 55 
08b58     01 1C 63 55 
08b5c     0A 1C 00 60 
08b60     42 09 15 61 | 	byte	$37, $09, $62, $55, $01, $1c, $63, $55, $0a, $1c, $00, $60, $42, $09, $15, $61
08b64     37 09 15 00 
08b68     20 45 09 21 
08b6c     40 09 00 60 
08b70     3A 09 15 61 | 	byte	$37, $09, $15, $00, $20, $45, $09, $21, $40, $09, $00, $60, $3a, $09, $15, $61
08b74     37 09 15 00 
08b78     20 44 09 21 
08b7c     40 09 00 60 
08b80     45 09 15 61 | 	byte	$37, $09, $15, $00, $20, $44, $09, $21, $40, $09, $00, $60, $45, $09, $15, $61
08b84     40 09 15 00 
08b88     20 45 09 21 
08b8c     40 09 00 60 
08b90     44 09 15 61 | 	byte	$40, $09, $15, $00, $20, $45, $09, $21, $40, $09, $00, $60, $44, $09, $15, $61
08b94     40 09 15 00 
08b98     20 42 09 21 
08b9c     39 09 62 52 
08ba0     02 1C 63 52 | 	byte	$40, $09, $15, $00, $20, $42, $09, $21, $39, $09, $62, $52, $02, $1c, $63, $52
08ba4     0B 1C 00 60 
08ba8     45 09 15 61 
08bac     40 09 15 00 
08bb0     60 44 09 07 | 	byte	$0b, $1c, $00, $60, $45, $09, $15, $61, $40, $09, $15, $00, $60, $44, $09, $07
08bb4     61 40 09 07 
08bb8     00 60 42 09 
08bbc     15 61 39 09 
08bc0     15 00 60 45 | 	byte	$61, $40, $09, $07, $00, $60, $42, $09, $15, $61, $39, $09, $15, $00, $60, $45
08bc4     09 07 61 40 
08bc8     09 07 00 60 
08bcc     44 09 03 61 
08bd0     40 09 03 00 | 	byte	$09, $07, $61, $40, $09, $07, $00, $60, $44, $09, $03, $61, $40, $09, $03, $00
08bd4     60 42 09 07 
08bd8     61 39 09 07 
08bdc     00 60 45 09 
08be0     03 61 40 09 | 	byte	$60, $42, $09, $07, $61, $39, $09, $07, $00, $60, $45, $09, $03, $61, $40, $09
08be4     03 00 60 44 
08be8     09 01 61 40 
08bec     09 01 00 60 
08bf0     42 09 03 61 | 	byte	$03, $00, $60, $44, $09, $01, $61, $40, $09, $01, $00, $60, $42, $09, $03, $61
08bf4     39 09 03 00 
08bf8     60 45 09 01 
08bfc     61 40 09 01 
08c00     00 40 00 41 | 	byte	$39, $09, $03, $00, $60, $45, $09, $01, $61, $40, $09, $01, $00, $40, $00, $41
08c04     00 00 60 42 
08c08     09 01 61 39 
08c0c     09 01 00 40 
08c10     00 41 00 00 | 	byte	$00, $00, $60, $42, $09, $01, $61, $39, $09, $01, $00, $40, $00, $41, $00, $00
08c14     00 00 80 80 
08c18     89 01 20 49 
08c1c     09 21 42 06 
08c20     00 00 40 07 | 	byte	$00, $00, $80, $80, $89, $01, $20, $49, $09, $21, $42, $06, $00, $00, $40, $07
08c24     21 52 04 00 
08c28     60 49 09 15 
08c2c     00 20 49 09 
08c30     21 52 06 00 | 	byte	$21, $52, $04, $00, $60, $49, $09, $15, $00, $20, $49, $09, $21, $52, $06, $00
08c34     00 20 47 09 
08c38     21 42 06 00 
08c3c     60 49 09 15 
08c40     00 20 49 09 | 	byte	$00, $20, $47, $09, $21, $42, $06, $00, $60, $49, $09, $15, $00, $20, $49, $09
08c44     00 60 47 09 
08c48     15 00 20 47 
08c4c     09 21 42 06 
08c50     00 60 49 09 | 	byte	$00, $60, $47, $09, $15, $00, $20, $47, $09, $21, $42, $06, $00, $60, $49, $09
08c54     15 00 20 45 
08c58     09 21 52 06 
08c5c     00 60 47 09 
08c60     15 00 20 44 | 	byte	$15, $00, $20, $45, $09, $21, $52, $06, $00, $60, $47, $09, $15, $00, $20, $44
08c64     09 00 60 45 
08c68     09 15 00 20 
08c6c     42 09 21 42 
08c70     06 00 60 44 | 	byte	$09, $00, $60, $45, $09, $15, $00, $20, $42, $09, $21, $42, $06, $00, $60, $44
08c74     09 15 00 60 
08c78     45 09 07 21 
08c7c     52 04 00 60 
08c80     42 09 15 00 | 	byte	$09, $15, $00, $60, $45, $09, $07, $21, $52, $04, $00, $60, $42, $09, $15, $00
08c84     60 44 09 07 
08c88     21 52 06 00 
08c8c     60 44 09 03 
08c90     00 20 40 09 | 	byte	$60, $44, $09, $07, $21, $52, $06, $00, $60, $44, $09, $03, $00, $20, $40, $09
08c94     21 42 06 00 
08c98     60 42 09 03 
08c9c     00 20 42 09 
08ca0     62 50 01 1C | 	byte	$21, $42, $06, $00, $60, $42, $09, $03, $00, $20, $42, $09, $62, $50, $01, $1c
08ca4     63 50 0A 1C 
08ca8     00 60 40 09 
08cac     15 00 20 45 
08cb0     09 21 42 06 | 	byte	$63, $50, $0a, $1c, $00, $60, $40, $09, $15, $00, $20, $45, $09, $21, $42, $06
08cb4     00 60 42 09 
08cb8     15 00 20 40 
08cbc     09 21 52 06 
08cc0     00 60 45 09 | 	byte	$00, $60, $42, $09, $15, $00, $20, $40, $09, $21, $52, $06, $00, $60, $45, $09
08cc4     15 00 20 45 
08cc8     09 21 42 06 
08ccc     00 60 40 09 
08cd0     15 00 20 3B | 	byte	$15, $00, $20, $45, $09, $21, $42, $06, $00, $60, $40, $09, $15, $00, $20, $3b
08cd4     09 21 42 06 
08cd8     62 57 01 1C 
08cdc     63 57 0A 1C 
08ce0     00 60 45 09 | 	byte	$09, $21, $42, $06, $62, $57, $01, $1c, $63, $57, $0a, $1c, $00, $60, $45, $09
08ce4     15 00 60 40 
08ce8     09 07 21 52 
08cec     04 00 60 3B 
08cf0     09 15 00 60 | 	byte	$15, $00, $60, $40, $09, $07, $21, $52, $04, $00, $60, $3b, $09, $15, $00, $60
08cf4     45 09 07 21 
08cf8     52 06 00 60 
08cfc     3B 09 03 00 
08d00     20 42 09 21 | 	byte	$45, $09, $07, $21, $52, $06, $00, $60, $3b, $09, $03, $00, $20, $42, $09, $21
08d04     42 06 00 60 
08d08     45 09 03 00 
08d0c     20 3A 09 62 
08d10     55 01 1C 63 | 	byte	$42, $06, $00, $60, $45, $09, $03, $00, $20, $3a, $09, $62, $55, $01, $1c, $63
08d14     55 0A 1C 00 
08d18     60 42 09 15 
08d1c     00 20 45 09 
08d20     21 42 06 00 | 	byte	$55, $0a, $1c, $00, $60, $42, $09, $15, $00, $20, $45, $09, $21, $42, $06, $00
08d24     60 3A 09 15 
08d28     00 20 44 09 
08d2c     21 52 06 00 
08d30     60 45 09 15 | 	byte	$60, $3a, $09, $15, $00, $20, $44, $09, $21, $52, $06, $00, $60, $45, $09, $15
08d34     00 20 45 09 
08d38     00 60 44 09 
08d3c     15 00 20 42 
08d40     09 21 42 06 | 	byte	$00, $20, $45, $09, $00, $60, $44, $09, $15, $00, $20, $42, $09, $21, $42, $06
08d44     62 52 02 1C 
08d48     63 52 0B 1C 
08d4c     00 60 45 09 
08d50     15 00 60 44 | 	byte	$62, $52, $02, $1c, $63, $52, $0b, $1c, $00, $60, $45, $09, $15, $00, $60, $44
08d54     09 07 21 52 
08d58     04 00 60 42 
08d5c     09 15 00 60 
08d60     45 09 07 21 | 	byte	$09, $07, $21, $52, $04, $00, $60, $42, $09, $15, $00, $60, $45, $09, $07, $21
08d64     52 06 00 60 
08d68     44 09 03 00 
08d6c     60 42 09 07 
08d70     21 42 06 00 | 	byte	$52, $06, $00, $60, $44, $09, $03, $00, $60, $42, $09, $07, $21, $42, $06, $00
08d74     60 45 09 03 
08d78     00 60 44 09 
08d7c     01 00 60 42 
08d80     09 03 21 42 | 	byte	$60, $45, $09, $03, $00, $60, $44, $09, $01, $00, $60, $42, $09, $03, $21, $42
08d84     06 00 60 45 
08d88     09 01 21 42 
08d8c     06 00 40 00 
08d90     00 60 42 09 | 	byte	$06, $00, $60, $45, $09, $01, $21, $42, $06, $00, $40, $00, $00, $60, $42, $09
08d94     01 21 52 06 
08d98     00 40 00 00 
08d9c     21 42 06 00 
08da0     00 80 80 80 | 	byte	$01, $21, $52, $06, $00, $40, $00, $00, $21, $42, $06, $00, $00, $80, $80, $80
08da4     80 80 80 80 
08da8     F8 01 20 49 
08dac     09 21 42 06 
08db0     00 21 42 06 | 	byte	$80, $80, $80, $80, $f8, $01, $20, $49, $09, $21, $42, $06, $00, $21, $42, $06
08db4     00 40 07 21 
08db8     52 04 00 60 
08dbc     49 09 15 21 
08dc0     42 06 00 20 | 	byte	$00, $40, $07, $21, $52, $04, $00, $60, $49, $09, $15, $21, $42, $06, $00, $20
08dc4     49 09 21 52 
08dc8     06 00 21 52 
08dcc     06 00 20 47 
08dd0     09 21 42 06 | 	byte	$49, $09, $21, $52, $06, $00, $21, $52, $06, $00, $20, $47, $09, $21, $42, $06
08dd4     00 60 49 09 
08dd8     15 21 52 06 
08ddc     00 20 49 09 
08de0     21 42 06 00 | 	byte	$00, $60, $49, $09, $15, $21, $52, $06, $00, $20, $49, $09, $21, $42, $06, $00
08de4     60 47 09 15 
08de8     21 42 06 00 
08dec     20 47 09 21 
08df0     55 06 00 60 | 	byte	$60, $47, $09, $15, $21, $42, $06, $00, $20, $47, $09, $21, $55, $06, $00, $60
08df4     49 09 15 21 
08df8     42 06 00 20 
08dfc     45 09 21 55 
08e00     06 00 60 47 | 	byte	$49, $09, $15, $21, $42, $06, $00, $20, $45, $09, $21, $55, $06, $00, $60, $47
08e04     09 15 21 55 
08e08     06 00 20 44 
08e0c     09 21 42 06 
08e10     00 60 45 09 | 	byte	$09, $15, $21, $55, $06, $00, $20, $44, $09, $21, $42, $06, $00, $60, $45, $09
08e14     15 21 55 06 
08e18     00 20 42 09 
08e1c     21 42 06 00 
08e20     60 44 09 15 | 	byte	$15, $21, $55, $06, $00, $20, $42, $09, $21, $42, $06, $00, $60, $44, $09, $15
08e24     21 42 06 00 
08e28     60 45 09 07 
08e2c     21 52 04 00 
08e30     60 42 09 15 | 	byte	$21, $42, $06, $00, $60, $45, $09, $07, $21, $52, $04, $00, $60, $42, $09, $15
08e34     21 42 06 00 
08e38     60 44 09 07 
08e3c     21 59 06 00 
08e40     60 44 09 03 | 	byte	$21, $42, $06, $00, $60, $44, $09, $07, $21, $59, $06, $00, $60, $44, $09, $03
08e44     21 59 06 00 
08e48     20 40 09 21 
08e4c     42 06 00 60 
08e50     42 09 03 21 | 	byte	$21, $59, $06, $00, $20, $40, $09, $21, $42, $06, $00, $60, $42, $09, $03, $21
08e54     59 06 00 20 
08e58     42 09 21 40 
08e5c     06 62 50 01 
08e60     1C 63 50 0A | 	byte	$59, $06, $00, $20, $42, $09, $21, $40, $06, $62, $50, $01, $1c, $63, $50, $0a
08e64     1C 00 60 40 
08e68     09 15 21 40 
08e6c     06 00 20 45 
08e70     09 21 54 06 | 	byte	$1c, $00, $60, $40, $09, $15, $21, $40, $06, $00, $20, $45, $09, $21, $54, $06
08e74     00 60 42 09 
08e78     15 21 40 06 
08e7c     00 20 40 09 
08e80     21 54 06 00 | 	byte	$00, $60, $42, $09, $15, $21, $40, $06, $00, $20, $40, $09, $21, $54, $06, $00
08e84     60 45 09 15 
08e88     21 54 06 00 
08e8c     20 45 09 21 
08e90     40 06 00 60 | 	byte	$60, $45, $09, $15, $21, $54, $06, $00, $20, $45, $09, $21, $40, $06, $00, $60
08e94     40 09 15 21 
08e98     54 06 00 20 
08e9c     3B 09 21 37 
08ea0     06 62 57 01 | 	byte	$40, $09, $15, $21, $54, $06, $00, $20, $3b, $09, $21, $37, $06, $62, $57, $01
08ea4     1C 63 57 0A 
08ea8     1C 00 60 45 
08eac     09 15 21 37 
08eb0     06 00 60 40 | 	byte	$1c, $63, $57, $0a, $1c, $00, $60, $45, $09, $15, $21, $37, $06, $00, $60, $40
08eb4     09 07 21 52 
08eb8     04 00 60 3B 
08ebc     09 15 21 37 
08ec0     06 00 60 45 | 	byte	$09, $07, $21, $52, $04, $00, $60, $3b, $09, $15, $21, $37, $06, $00, $60, $45
08ec4     09 07 21 4B 
08ec8     06 00 60 3B 
08ecc     09 03 21 4B 
08ed0     06 00 20 42 | 	byte	$09, $07, $21, $4b, $06, $00, $60, $3b, $09, $03, $21, $4b, $06, $00, $20, $42
08ed4     09 21 37 06 
08ed8     00 60 45 09 
08edc     03 21 4B 06 
08ee0     00 20 3A 09 | 	byte	$09, $21, $37, $06, $00, $60, $45, $09, $03, $21, $4b, $06, $00, $20, $3a, $09
08ee4     21 35 06 62 
08ee8     55 01 1C 63 
08eec     55 0A 1C 00 
08ef0     60 42 09 15 | 	byte	$21, $35, $06, $62, $55, $01, $1c, $63, $55, $0a, $1c, $00, $60, $42, $09, $15
08ef4     21 35 06 00 
08ef8     20 45 09 21 
08efc     50 06 00 60 
08f00     3A 09 15 21 | 	byte	$21, $35, $06, $00, $20, $45, $09, $21, $50, $06, $00, $60, $3a, $09, $15, $21
08f04     35 06 00 20 
08f08     44 09 21 50 
08f0c     06 00 60 45 
08f10     09 15 21 50 | 	byte	$35, $06, $00, $20, $44, $09, $21, $50, $06, $00, $60, $45, $09, $15, $21, $50
08f14     06 00 20 45 
08f18     09 21 45 06 
08f1c     00 60 44 09 
08f20     15 21 44 06 | 	byte	$06, $00, $20, $45, $09, $21, $45, $06, $00, $60, $44, $09, $15, $21, $44, $06
08f24     00 20 42 09 
08f28     21 42 06 62 
08f2c     52 02 1C 63 
08f30     52 0B 1C 00 | 	byte	$00, $20, $42, $09, $21, $42, $06, $62, $52, $02, $1c, $63, $52, $0b, $1c, $00
08f34     60 45 09 15 
08f38     21 42 06 00 
08f3c     60 44 09 07 
08f40     21 52 04 00 | 	byte	$60, $45, $09, $15, $21, $42, $06, $00, $60, $44, $09, $07, $21, $52, $04, $00
08f44     60 42 09 15 
08f48     21 42 06 00 
08f4c     60 45 09 07 
08f50     21 55 06 00 | 	byte	$60, $42, $09, $15, $21, $42, $06, $00, $60, $45, $09, $07, $21, $55, $06, $00
08f54     60 44 09 03 
08f58     21 55 06 00 
08f5c     60 42 09 07 
08f60     21 42 06 00 | 	byte	$60, $44, $09, $03, $21, $55, $06, $00, $60, $42, $09, $07, $21, $42, $06, $00
08f64     60 45 09 03 
08f68     21 55 06 00 
08f6c     60 44 09 01 
08f70     21 42 06 00 | 	byte	$60, $45, $09, $03, $21, $55, $06, $00, $60, $44, $09, $01, $21, $42, $06, $00
08f74     60 42 09 03 
08f78     21 42 05 00 
08f7c     60 45 09 01 
08f80     21 42 05 00 | 	byte	$60, $42, $09, $03, $21, $42, $05, $00, $60, $45, $09, $01, $21, $42, $05, $00
08f84     40 00 21 42 
08f88     06 00 60 42 
08f8c     09 01 21 42 
08f90     05 00 40 00 | 	byte	$40, $00, $21, $42, $06, $00, $60, $42, $09, $01, $21, $42, $05, $00, $40, $00
08f94     21 55 06 00 
08f98     21 42 05 00 
08f9c     21 42 05 00 
08fa0     80 80 80 80 | 	byte	$21, $55, $06, $00, $21, $42, $05, $00, $21, $42, $05, $00, $80, $80, $80, $80
08fa4     80 80 80 80 
08fa8     E0 01 20 49 
08fac     07 21 40 03 
08fb0     22 52 02 23 | 	byte	$80, $80, $80, $80, $e0, $01, $20, $49, $07, $21, $40, $03, $22, $52, $02, $23
08fb4     52 0B 00 21 
08fb8     42 06 00 21 
08fbc     52 04 00 60 
08fc0     49 07 10 21 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $21, $52, $04, $00, $60, $49, $07, $10, $21
08fc4     42 06 00 20 
08fc8     49 07 21 42 
08fcc     05 00 21 52 
08fd0     06 00 20 47 | 	byte	$42, $06, $00, $20, $49, $07, $21, $42, $05, $00, $21, $52, $06, $00, $20, $47
08fd4     07 21 42 06 
08fd8     00 60 49 07 
08fdc     10 21 52 06 
08fe0     00 20 49 07 | 	byte	$07, $21, $42, $06, $00, $60, $49, $07, $10, $21, $52, $06, $00, $20, $49, $07
08fe4     21 40 03 00 
08fe8     60 47 07 10 
08fec     21 42 06 00 
08ff0     20 47 07 21 | 	byte	$21, $40, $03, $00, $60, $47, $07, $10, $21, $42, $06, $00, $20, $47, $07, $21
08ff4     55 06 00 60 
08ff8     49 07 10 21 
08ffc     40 03 00 20 
09000     45 07 21 42 | 	byte	$55, $06, $00, $60, $49, $07, $10, $21, $40, $03, $00, $20, $45, $07, $21, $42
09004     05 00 60 47 
09008     07 10 21 55 
0900c     06 00 20 44 
09010     07 21 40 03 | 	byte	$05, $00, $60, $47, $07, $10, $21, $55, $06, $00, $20, $44, $07, $21, $40, $03
09014     00 60 45 07 
09018     10 21 55 06 
0901c     00 20 42 07 
09020     21 40 03 00 | 	byte	$00, $60, $45, $07, $10, $21, $55, $06, $00, $20, $42, $07, $21, $40, $03, $00
09024     60 44 07 10 
09028     21 42 06 00 
0902c     60 45 07 06 
09030     21 52 04 00 | 	byte	$60, $44, $07, $10, $21, $42, $06, $00, $60, $45, $07, $06, $21, $52, $04, $00
09034     60 42 07 10 
09038     21 42 06 00 
0903c     60 44 07 06 
09040     21 42 05 00 | 	byte	$60, $42, $07, $10, $21, $42, $06, $00, $60, $44, $07, $06, $21, $42, $05, $00
09044     60 44 07 03 
09048     21 59 06 00 
0904c     20 40 07 21 
09050     42 06 00 60 | 	byte	$60, $44, $07, $03, $21, $59, $06, $00, $20, $40, $07, $21, $42, $06, $00, $60
09054     42 07 03 21 
09058     59 06 00 20 
0905c     42 07 21 40 
09060     03 22 50 01 | 	byte	$42, $07, $03, $21, $59, $06, $00, $20, $42, $07, $21, $40, $03, $22, $50, $01
09064     23 50 0A 00 
09068     60 40 07 10 
0906c     21 40 03 00 
09070     20 45 07 21 | 	byte	$23, $50, $0a, $00, $60, $40, $07, $10, $21, $40, $03, $00, $20, $45, $07, $21
09074     40 03 00 60 
09078     42 07 10 21 
0907c     40 06 00 20 
09080     40 07 21 42 | 	byte	$40, $03, $00, $60, $42, $07, $10, $21, $40, $06, $00, $20, $40, $07, $21, $42
09084     05 00 60 45 
09088     07 10 21 54 
0908c     06 00 20 45 
09090     07 21 40 03 | 	byte	$05, $00, $60, $45, $07, $10, $21, $54, $06, $00, $20, $45, $07, $21, $40, $03
09094     00 60 40 07 
09098     10 21 54 06 
0909c     00 20 3B 07 
090a0     21 40 03 22 | 	byte	$00, $60, $40, $07, $10, $21, $54, $06, $00, $20, $3b, $07, $21, $40, $03, $22
090a4     57 01 23 57 
090a8     0A 00 60 45 
090ac     07 10 21 37 
090b0     06 00 60 40 | 	byte	$57, $01, $23, $57, $0a, $00, $60, $45, $07, $10, $21, $37, $06, $00, $60, $40
090b4     07 06 21 52 
090b8     04 00 60 3B 
090bc     07 10 21 37 
090c0     06 00 60 45 | 	byte	$07, $06, $21, $52, $04, $00, $60, $3b, $07, $10, $21, $37, $06, $00, $60, $45
090c4     07 06 21 42 
090c8     05 00 60 3B 
090cc     07 03 21 4B 
090d0     06 00 20 42 | 	byte	$07, $06, $21, $42, $05, $00, $60, $3b, $07, $03, $21, $4b, $06, $00, $20, $42
090d4     07 21 37 06 
090d8     00 60 45 07 
090dc     03 21 4B 06 
090e0     00 20 3A 07 | 	byte	$07, $21, $37, $06, $00, $60, $45, $07, $03, $21, $4b, $06, $00, $20, $3a, $07
090e4     21 40 03 22 
090e8     55 01 23 55 
090ec     0A 00 60 42 
090f0     07 10 21 35 | 	byte	$21, $40, $03, $22, $55, $01, $23, $55, $0a, $00, $60, $42, $07, $10, $21, $35
090f4     06 00 20 45 
090f8     07 21 50 06 
090fc     00 60 3A 07 
09100     10 21 40 03 | 	byte	$06, $00, $20, $45, $07, $21, $50, $06, $00, $60, $3a, $07, $10, $21, $40, $03
09104     00 20 44 07 
09108     21 42 05 00 
0910c     60 45 07 10 
09110     21 50 06 00 | 	byte	$00, $20, $44, $07, $21, $42, $05, $00, $60, $45, $07, $10, $21, $50, $06, $00
09114     20 45 07 21 
09118     40 03 00 60 
0911c     44 07 10 21 
09120     44 06 00 20 | 	byte	$20, $45, $07, $21, $40, $03, $00, $60, $44, $07, $10, $21, $44, $06, $00, $20
09124     42 07 21 40 
09128     03 22 52 02 
0912c     23 52 0B 00 
09130     60 45 07 10 | 	byte	$42, $07, $21, $40, $03, $22, $52, $02, $23, $52, $0b, $00, $60, $45, $07, $10
09134     21 42 06 00 
09138     20 59 08 21 
0913c     52 04 00 21 
09140     42 06 00 20 | 	byte	$21, $42, $06, $00, $20, $59, $08, $21, $52, $04, $00, $21, $42, $06, $00, $20
09144     57 08 21 42 
09148     05 00 21 55 
0914c     06 00 20 59 
09150     08 21 42 06 | 	byte	$57, $08, $21, $42, $05, $00, $21, $55, $06, $00, $20, $59, $08, $21, $42, $06
09154     00 20 55 08 
09158     21 55 06 00 
0915c     21 40 03 00 
09160     20 55 08 21 | 	byte	$00, $20, $55, $08, $21, $55, $06, $00, $21, $40, $03, $00, $20, $55, $08, $21
09164     40 03 00 21 
09168     40 03 00 20 
0916c     59 08 21 40 
09170     03 00 20 54 | 	byte	$40, $03, $00, $21, $40, $03, $00, $20, $59, $08, $21, $40, $03, $00, $20, $54
09174     08 21 42 05 
09178     00 21 42 05 
0917c     00 20 59 08 
09180     21 42 05 00 | 	byte	$08, $21, $42, $05, $00, $21, $42, $05, $00, $20, $59, $08, $21, $42, $05, $00
09184     21 42 05 00 
09188     79 01 20 44 
0918c     08 21 40 03 
09190     22 4A 01 23 | 	byte	$21, $42, $05, $00, $79, $01, $20, $44, $08, $21, $40, $03, $22, $4a, $01, $23
09194     4A 0A 00 21 
09198     3A 06 00 20 
0919c     44 08 21 52 
091a0     04 00 21 3A | 	byte	$4a, $0a, $00, $21, $3a, $06, $00, $20, $44, $08, $21, $52, $04, $00, $21, $3a
091a4     06 00 20 44 
091a8     08 21 42 05 
091ac     00 21 4A 06 
091b0     00 60 44 08 | 	byte	$06, $00, $20, $44, $08, $21, $42, $05, $00, $21, $4a, $06, $00, $60, $44, $08
091b4     15 21 3A 06 
091b8     00 21 4A 06 
091bc     00 20 44 08 
091c0     21 40 03 00 | 	byte	$15, $21, $3a, $06, $00, $21, $4a, $06, $00, $20, $44, $08, $21, $40, $03, $00
091c4     21 3A 06 00 
091c8     60 44 08 15 
091cc     21 52 06 00 
091d0     21 40 03 00 | 	byte	$21, $3a, $06, $00, $60, $44, $08, $15, $21, $52, $06, $00, $21, $40, $03, $00
091d4     20 45 08 21 
091d8     42 05 00 21 
091dc     52 06 00 20 
091e0     47 08 21 40 | 	byte	$20, $45, $08, $21, $42, $05, $00, $21, $52, $06, $00, $20, $47, $08, $21, $40
091e4     03 00 21 52 
091e8     06 00 60 47 
091ec     08 15 21 40 
091f0     03 00 21 3A | 	byte	$03, $00, $21, $52, $06, $00, $60, $47, $08, $15, $21, $40, $03, $00, $21, $3a
091f4     06 00 20 47 
091f8     08 21 52 04 
091fc     00 21 3A 06 
09200     00 60 47 08 | 	byte	$06, $00, $20, $47, $08, $21, $52, $04, $00, $21, $3a, $06, $00, $60, $47, $08
09204     15 21 42 05 
09208     00 21 55 06 
0920c     00 20 47 08 
09210     21 3A 06 00 | 	byte	$15, $21, $42, $05, $00, $21, $55, $06, $00, $20, $47, $08, $21, $3a, $06, $00
09214     21 55 06 00 
09218     20 47 08 21 
0921c     40 03 00 21 
09220     40 03 00 20 | 	byte	$21, $55, $06, $00, $20, $47, $08, $21, $40, $03, $00, $21, $40, $03, $00, $20
09224     45 08 21 40 
09228     03 00 21 3A 
0922c     06 00 20 44 
09230     08 21 42 05 | 	byte	$45, $08, $21, $40, $03, $00, $21, $3a, $06, $00, $20, $44, $08, $21, $42, $05
09234     00 21 52 06 
09238     00 20 45 08 
0923c     21 40 03 00 
09240     21 52 06 00 | 	byte	$00, $21, $52, $06, $00, $20, $45, $08, $21, $40, $03, $00, $21, $52, $06, $00
09244     20 44 08 21 
09248     40 03 22 57 
0924c     02 23 57 0B 
09250     00 21 37 06 | 	byte	$20, $44, $08, $21, $40, $03, $22, $57, $02, $23, $57, $0b, $00, $21, $37, $06
09254     00 60 44 08 
09258     15 21 52 04 
0925c     00 21 37 06 
09260     00 20 44 08 | 	byte	$00, $60, $44, $08, $15, $21, $52, $04, $00, $21, $37, $06, $00, $20, $44, $08
09264     21 42 05 00 
09268     21 47 06 00 
0926c     60 44 08 15 
09270     21 37 06 00 | 	byte	$21, $42, $05, $00, $21, $47, $06, $00, $60, $44, $08, $15, $21, $37, $06, $00
09274     21 47 06 00 
09278     20 44 08 21 
0927c     40 03 00 21 
09280     37 06 00 60 | 	byte	$21, $47, $06, $00, $20, $44, $08, $21, $40, $03, $00, $21, $37, $06, $00, $60
09284     44 08 15 21 
09288     4A 06 00 21 
0928c     40 03 00 20 
09290     45 08 21 42 | 	byte	$44, $08, $15, $21, $4a, $06, $00, $21, $40, $03, $00, $20, $45, $08, $21, $42
09294     05 00 21 4A 
09298     06 00 20 47 
0929c     08 21 40 03 
092a0     00 21 4A 06 | 	byte	$05, $00, $21, $4a, $06, $00, $20, $47, $08, $21, $40, $03, $00, $21, $4a, $06
092a4     00 60 47 08 
092a8     15 21 40 03 
092ac     00 21 37 06 
092b0     00 20 47 08 | 	byte	$00, $60, $47, $08, $15, $21, $40, $03, $00, $21, $37, $06, $00, $20, $47, $08
092b4     21 52 04 00 
092b8     21 37 06 00 
092bc     60 47 08 15 
092c0     21 42 05 00 | 	byte	$21, $52, $04, $00, $21, $37, $06, $00, $60, $47, $08, $15, $21, $42, $05, $00
092c4     21 52 06 00 
092c8     20 47 08 21 
092cc     37 06 00 21 
092d0     52 06 00 20 | 	byte	$21, $52, $06, $00, $20, $47, $08, $21, $37, $06, $00, $21, $52, $06, $00, $20
092d4     45 08 21 40 
092d8     03 00 21 40 
092dc     03 00 60 45 
092e0     08 15 21 40 | 	byte	$45, $08, $21, $40, $03, $00, $21, $40, $03, $00, $60, $45, $08, $15, $21, $40
092e4     03 00 21 37 
092e8     06 00 20 44 
092ec     08 21 42 05 
092f0     00 21 4A 06 | 	byte	$03, $00, $21, $37, $06, $00, $20, $44, $08, $21, $42, $05, $00, $21, $4a, $06
092f4     00 60 44 08 
092f8     15 21 42 05 
092fc     00 21 42 05 
09300     00 80 80 80 | 	byte	$00, $60, $44, $08, $15, $21, $42, $05, $00, $21, $42, $05, $00, $80, $80, $80
09304     80 80 80 80 
09308     5D 01 20 44 
0930c     08 21 40 03 
09310     22 52 02 23 | 	byte	$80, $80, $80, $80, $5d, $01, $20, $44, $08, $21, $40, $03, $22, $52, $02, $23
09314     52 0B 00 21 
09318     42 06 00 60 
0931c     44 08 15 21 
09320     52 04 00 21 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $60, $44, $08, $15, $21, $52, $04, $00, $21
09324     42 06 00 20 
09328     45 08 21 42 
0932c     05 00 21 52 
09330     06 00 20 42 | 	byte	$42, $06, $00, $20, $45, $08, $21, $42, $05, $00, $21, $52, $06, $00, $20, $42
09334     08 21 42 06 
09338     00 21 52 06 
0933c     00 60 42 08 
09340     15 21 40 03 | 	byte	$08, $21, $42, $06, $00, $21, $52, $06, $00, $60, $42, $08, $15, $21, $40, $03
09344     00 21 42 06 
09348     00 20 42 08 
0934c     21 52 06 00 
09350     21 40 03 00 | 	byte	$00, $21, $42, $06, $00, $20, $42, $08, $21, $52, $06, $00, $21, $40, $03, $00
09354     60 42 08 15 
09358     21 42 05 00 
0935c     21 52 06 00 
09360     20 42 08 21 | 	byte	$60, $42, $08, $15, $21, $42, $05, $00, $21, $52, $06, $00, $20, $42, $08, $21
09364     40 03 00 21 
09368     50 06 00 20 
0936c     44 08 21 40 
09370     03 00 21 42 | 	byte	$40, $03, $00, $21, $50, $06, $00, $20, $44, $08, $21, $40, $03, $00, $21, $42
09374     06 00 60 44 
09378     08 15 21 52 
0937c     04 00 21 42 
09380     06 00 20 45 | 	byte	$06, $00, $60, $44, $08, $15, $21, $52, $04, $00, $21, $42, $06, $00, $20, $45
09384     08 21 42 05 
09388     00 21 52 06 
0938c     00 20 42 08 
09390     21 42 06 00 | 	byte	$08, $21, $42, $05, $00, $21, $52, $06, $00, $20, $42, $08, $21, $42, $06, $00
09394     21 52 06 00 
09398     60 42 08 15 
0939c     21 40 03 00 
093a0     21 40 03 00 | 	byte	$21, $52, $06, $00, $60, $42, $08, $15, $21, $40, $03, $00, $21, $40, $03, $00
093a4     20 42 08 21 
093a8     40 03 00 21 
093ac     42 06 00 60 
093b0     42 08 15 21 | 	byte	$20, $42, $08, $21, $40, $03, $00, $21, $42, $06, $00, $60, $42, $08, $15, $21
093b4     42 05 00 21 
093b8     54 06 00 20 
093bc     39 08 21 40 
093c0     03 00 21 50 | 	byte	$42, $05, $00, $21, $54, $06, $00, $20, $39, $08, $21, $40, $03, $00, $21, $50
093c4     06 00 20 42 
093c8     08 21 40 03 
093cc     00 21 42 06 
093d0     00 21 52 04 | 	byte	$06, $00, $20, $42, $08, $21, $40, $03, $00, $21, $42, $06, $00, $21, $52, $04
093d4     00 21 42 06 
093d8     00 60 42 08 
093dc     15 21 42 05 
093e0     00 21 52 06 | 	byte	$00, $21, $42, $06, $00, $60, $42, $08, $15, $21, $42, $05, $00, $21, $52, $06
093e4     00 21 42 06 
093e8     00 21 52 06 
093ec     00 60 42 08 
093f0     14 21 40 03 | 	byte	$00, $21, $42, $06, $00, $21, $52, $06, $00, $60, $42, $08, $14, $21, $40, $03
093f4     00 21 42 06 
093f8     00 21 52 06 
093fc     00 21 40 03 
09400     00 60 42 08 | 	byte	$00, $21, $42, $06, $00, $21, $52, $06, $00, $21, $40, $03, $00, $60, $42, $08
09404     12 21 42 05 
09408     00 21 52 06 
0940c     00 21 40 03 
09410     00 21 54 06 | 	byte	$12, $21, $42, $05, $00, $21, $52, $06, $00, $21, $40, $03, $00, $21, $54, $06
09414     00 60 42 08 
09418     10 21 40 03 
0941c     00 21 42 06 
09420     00 21 52 04 | 	byte	$00, $60, $42, $08, $10, $21, $40, $03, $00, $21, $42, $06, $00, $21, $52, $04
09424     00 21 42 06 
09428     00 60 42 08 
0942c     08 21 42 05 
09430     00 21 55 06 | 	byte	$00, $21, $42, $06, $00, $60, $42, $08, $08, $21, $42, $05, $00, $21, $55, $06
09434     00 21 42 06 
09438     00 21 55 06 
0943c     00 60 42 08 
09440     07 21 42 05 | 	byte	$00, $21, $42, $06, $00, $21, $55, $06, $00, $60, $42, $08, $07, $21, $42, $05
09444     00 21 42 05 
09448     00 21 40 03 
0944c     00 21 42 05 
09450     00 60 42 08 | 	byte	$00, $21, $42, $05, $00, $21, $40, $03, $00, $21, $42, $05, $00, $60, $42, $08
09454     05 21 42 05 
09458     00 21 42 05 
0945c     00 21 42 05 
09460     00 21 42 05 | 	byte	$05, $21, $42, $05, $00, $21, $42, $05, $00, $21, $42, $05, $00, $21, $42, $05
09464     00 80 80 80 
09468     84 01 20 44 
0946c     08 21 40 03 
09470     22 52 02 23 | 	byte	$00, $80, $80, $80, $84, $01, $20, $44, $08, $21, $40, $03, $22, $52, $02, $23
09474     52 0B 00 21 
09478     42 06 00 60 
0947c     44 08 15 21 
09480     52 04 00 21 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $60, $44, $08, $15, $21, $52, $04, $00, $21
09484     42 06 00 20 
09488     45 08 21 42 
0948c     05 00 21 55 
09490     06 00 20 42 | 	byte	$42, $06, $00, $20, $45, $08, $21, $42, $05, $00, $21, $55, $06, $00, $20, $42
09494     08 21 42 06 
09498     00 21 55 06 
0949c     00 60 42 08 
094a0     15 21 40 03 | 	byte	$08, $21, $42, $06, $00, $21, $55, $06, $00, $60, $42, $08, $15, $21, $40, $03
094a4     00 21 42 06 
094a8     00 20 42 08 
094ac     21 59 06 00 
094b0     21 40 03 00 | 	byte	$00, $21, $42, $06, $00, $20, $42, $08, $21, $59, $06, $00, $21, $40, $03, $00
094b4     60 42 08 15 
094b8     21 42 05 00 
094bc     21 59 06 00 
094c0     20 42 08 21 | 	byte	$60, $42, $08, $15, $21, $42, $05, $00, $21, $59, $06, $00, $20, $42, $08, $21
094c4     40 03 00 21 
094c8     59 06 00 20 
094cc     42 08 21 40 
094d0     03 22 50 01 | 	byte	$40, $03, $00, $21, $59, $06, $00, $20, $42, $08, $21, $40, $03, $22, $50, $01
094d4     23 50 0A 00 
094d8     21 40 06 00 
094dc     60 42 08 15 
094e0     21 52 04 00 | 	byte	$23, $50, $0a, $00, $21, $40, $06, $00, $60, $42, $08, $15, $21, $52, $04, $00
094e4     21 40 06 00 
094e8     20 44 08 21 
094ec     42 05 00 21 
094f0     54 06 00 20 | 	byte	$21, $40, $06, $00, $20, $44, $08, $21, $42, $05, $00, $21, $54, $06, $00, $20
094f4     40 08 21 40 
094f8     06 00 21 54 
094fc     06 00 60 40 
09500     08 15 21 40 | 	byte	$40, $08, $21, $40, $06, $00, $21, $54, $06, $00, $60, $40, $08, $15, $21, $40
09504     03 00 21 40 
09508     03 00 20 40 
0950c     08 21 40 03 
09510     00 21 40 06 | 	byte	$03, $00, $21, $40, $03, $00, $20, $40, $08, $21, $40, $03, $00, $21, $40, $06
09514     00 60 40 08 
09518     15 21 42 05 
0951c     00 21 57 06 
09520     00 20 40 08 | 	byte	$00, $60, $40, $08, $15, $21, $42, $05, $00, $21, $57, $06, $00, $20, $40, $08
09524     21 40 03 00 
09528     21 57 06 00 
0952c     20 40 08 21 
09530     40 03 22 57 | 	byte	$21, $40, $03, $00, $21, $57, $06, $00, $20, $40, $08, $21, $40, $03, $22, $57
09534     01 23 57 0A 
09538     00 21 37 06 
0953c     00 60 40 08 
09540     15 21 52 04 | 	byte	$01, $23, $57, $0a, $00, $21, $37, $06, $00, $60, $40, $08, $15, $21, $52, $04
09544     00 21 37 06 
09548     00 20 3B 08 
0954c     21 42 05 00 
09550     21 52 06 00 | 	byte	$00, $21, $37, $06, $00, $20, $3b, $08, $21, $42, $05, $00, $21, $52, $06, $00
09554     20 37 08 21 
09558     37 06 00 21 
0955c     52 06 00 60 
09560     37 08 15 21 | 	byte	$20, $37, $08, $21, $37, $06, $00, $21, $52, $06, $00, $60, $37, $08, $15, $21
09564     40 03 00 21 
09568     37 06 00 20 
0956c     37 08 21 4B 
09570     06 00 21 40 | 	byte	$40, $03, $00, $21, $37, $06, $00, $20, $37, $08, $21, $4b, $06, $00, $21, $40
09574     03 00 60 37 
09578     08 15 21 42 
0957c     05 00 21 4B 
09580     06 00 20 37 | 	byte	$03, $00, $60, $37, $08, $15, $21, $42, $05, $00, $21, $4b, $06, $00, $20, $37
09584     08 21 40 03 
09588     00 21 4B 06 
0958c     00 20 39 08 
09590     21 40 03 22 | 	byte	$08, $21, $40, $03, $00, $21, $4b, $06, $00, $20, $39, $08, $21, $40, $03, $22
09594     59 01 23 59 
09598     0A 00 21 39 
0959c     06 00 20 39 
095a0     08 21 52 04 | 	byte	$59, $01, $23, $59, $0a, $00, $21, $39, $06, $00, $20, $39, $08, $21, $52, $04
095a4     00 21 39 06 
095a8     00 20 3B 08 
095ac     21 42 05 00 
095b0     21 51 06 00 | 	byte	$00, $21, $39, $06, $00, $20, $3b, $08, $21, $42, $05, $00, $21, $51, $06, $00
095b4     20 41 08 21 
095b8     39 06 00 21 
095bc     51 06 00 60 
095c0     41 08 15 21 | 	byte	$20, $41, $08, $21, $39, $06, $00, $21, $51, $06, $00, $60, $41, $08, $15, $21
095c4     40 03 00 21 
095c8     40 03 00 20 
095cc     39 08 21 40 
095d0     03 00 21 40 | 	byte	$40, $03, $00, $21, $40, $03, $00, $20, $39, $08, $21, $40, $03, $00, $21, $40
095d4     03 00 20 3B 
095d8     08 21 42 05 
095dc     00 21 42 05 
095e0     00 20 41 08 | 	byte	$03, $00, $20, $3b, $08, $21, $42, $05, $00, $21, $42, $05, $00, $20, $41, $08
095e4     21 42 05 00 
095e8     21 42 05 00 
095ec     80 80 80 80 
095f0     80 80 80 80 | 	byte	$21, $42, $05, $00, $21, $42, $05, $00, $80, $80, $80, $80, $80, $80, $80, $80
095f4     80 80 80 80 
095f8     F6 01 20 49 
095fc     09 21 40 03 
09600     22 52 02 23 | 	byte	$80, $80, $80, $80, $f6, $01, $20, $49, $09, $21, $40, $03, $22, $52, $02, $23
09604     52 0B 00 21 
09608     42 06 00 40 
0960c     07 21 52 04 
09610     00 60 49 09 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $40, $07, $21, $52, $04, $00, $60, $49, $09
09614     15 21 42 06 
09618     00 20 49 09 
0961c     21 42 05 00 
09620     21 52 06 00 | 	byte	$15, $21, $42, $06, $00, $20, $49, $09, $21, $42, $05, $00, $21, $52, $06, $00
09624     20 47 09 21 
09628     42 06 00 60 
0962c     49 09 15 21 
09630     52 06 00 20 | 	byte	$20, $47, $09, $21, $42, $06, $00, $60, $49, $09, $15, $21, $52, $06, $00, $20
09634     49 09 21 40 
09638     03 00 60 47 
0963c     09 15 21 42 
09640     06 00 20 47 | 	byte	$49, $09, $21, $40, $03, $00, $60, $47, $09, $15, $21, $42, $06, $00, $20, $47
09644     09 21 55 06 
09648     00 60 49 09 
0964c     15 21 40 03 
09650     00 20 45 09 | 	byte	$09, $21, $55, $06, $00, $60, $49, $09, $15, $21, $40, $03, $00, $20, $45, $09
09654     21 42 05 00 
09658     60 47 09 15 
0965c     21 55 06 00 
09660     20 44 09 21 | 	byte	$21, $42, $05, $00, $60, $47, $09, $15, $21, $55, $06, $00, $20, $44, $09, $21
09664     40 03 00 60 
09668     45 09 15 21 
0966c     55 06 00 20 
09670     42 09 21 40 | 	byte	$40, $03, $00, $60, $45, $09, $15, $21, $55, $06, $00, $20, $42, $09, $21, $40
09674     03 00 60 44 
09678     09 15 21 42 
0967c     06 00 60 45 
09680     09 07 21 52 | 	byte	$03, $00, $60, $44, $09, $15, $21, $42, $06, $00, $60, $45, $09, $07, $21, $52
09684     04 00 60 42 
09688     09 15 21 42 
0968c     06 00 60 44 
09690     09 07 21 42 | 	byte	$04, $00, $60, $42, $09, $15, $21, $42, $06, $00, $60, $44, $09, $07, $21, $42
09694     05 00 60 44 
09698     09 03 21 59 
0969c     06 00 20 40 
096a0     09 21 42 06 | 	byte	$05, $00, $60, $44, $09, $03, $21, $59, $06, $00, $20, $40, $09, $21, $42, $06
096a4     00 60 42 09 
096a8     03 21 59 06 
096ac     00 20 42 09 
096b0     21 40 03 22 | 	byte	$00, $60, $42, $09, $03, $21, $59, $06, $00, $20, $42, $09, $21, $40, $03, $22
096b4     50 01 23 50 
096b8     0A 00 60 40 
096bc     09 15 21 40 
096c0     03 00 20 45 | 	byte	$50, $01, $23, $50, $0a, $00, $60, $40, $09, $15, $21, $40, $03, $00, $20, $45
096c4     09 21 40 03 
096c8     00 60 42 09 
096cc     15 21 40 06 
096d0     00 20 40 09 | 	byte	$09, $21, $40, $03, $00, $60, $42, $09, $15, $21, $40, $06, $00, $20, $40, $09
096d4     21 42 05 00 
096d8     60 45 09 15 
096dc     21 54 06 00 
096e0     20 45 09 21 | 	byte	$21, $42, $05, $00, $60, $45, $09, $15, $21, $54, $06, $00, $20, $45, $09, $21
096e4     40 03 00 60 
096e8     40 09 15 21 
096ec     54 06 00 20 
096f0     3B 09 21 40 | 	byte	$40, $03, $00, $60, $40, $09, $15, $21, $54, $06, $00, $20, $3b, $09, $21, $40
096f4     03 22 57 01 
096f8     23 57 0A 00 
096fc     60 45 09 15 
09700     21 37 06 00 | 	byte	$03, $22, $57, $01, $23, $57, $0a, $00, $60, $45, $09, $15, $21, $37, $06, $00
09704     60 40 09 07 
09708     21 52 04 00 
0970c     60 3B 09 15 
09710     21 37 06 00 | 	byte	$60, $40, $09, $07, $21, $52, $04, $00, $60, $3b, $09, $15, $21, $37, $06, $00
09714     60 45 09 07 
09718     21 42 05 00 
0971c     60 3B 09 03 
09720     21 4B 06 00 | 	byte	$60, $45, $09, $07, $21, $42, $05, $00, $60, $3b, $09, $03, $21, $4b, $06, $00
09724     20 42 09 21 
09728     37 06 00 60 
0972c     45 09 03 21 
09730     4B 06 00 20 | 	byte	$20, $42, $09, $21, $37, $06, $00, $60, $45, $09, $03, $21, $4b, $06, $00, $20
09734     3A 09 21 40 
09738     03 22 55 01 
0973c     23 55 0A 00 
09740     60 42 09 15 | 	byte	$3a, $09, $21, $40, $03, $22, $55, $01, $23, $55, $0a, $00, $60, $42, $09, $15
09744     21 35 06 00 
09748     20 45 09 21 
0974c     50 06 00 60 
09750     3A 09 15 21 | 	byte	$21, $35, $06, $00, $20, $45, $09, $21, $50, $06, $00, $60, $3a, $09, $15, $21
09754     40 03 00 20 
09758     44 09 21 42 
0975c     05 00 60 45 
09760     09 15 21 50 | 	byte	$40, $03, $00, $20, $44, $09, $21, $42, $05, $00, $60, $45, $09, $15, $21, $50
09764     06 00 20 45 
09768     09 21 40 03 
0976c     00 60 44 09 
09770     15 21 44 06 | 	byte	$06, $00, $20, $45, $09, $21, $40, $03, $00, $60, $44, $09, $15, $21, $44, $06
09774     00 20 42 09 
09778     21 40 03 22 
0977c     52 02 23 52 
09780     0B 00 60 45 | 	byte	$00, $20, $42, $09, $21, $40, $03, $22, $52, $02, $23, $52, $0b, $00, $60, $45
09784     09 15 21 42 
09788     06 00 60 44 
0978c     09 07 21 52 
09790     04 00 60 42 | 	byte	$09, $15, $21, $42, $06, $00, $60, $44, $09, $07, $21, $52, $04, $00, $60, $42
09794     09 15 21 42 
09798     06 00 60 45 
0979c     09 07 21 42 
097a0     05 00 60 44 | 	byte	$09, $15, $21, $42, $06, $00, $60, $45, $09, $07, $21, $42, $05, $00, $60, $44
097a4     09 03 21 55 
097a8     06 00 60 42 
097ac     09 07 21 42 
097b0     06 00 60 45 | 	byte	$09, $03, $21, $55, $06, $00, $60, $42, $09, $07, $21, $42, $06, $00, $60, $45
097b4     09 03 21 55 
097b8     06 00 60 44 
097bc     09 01 21 40 
097c0     03 00 60 42 | 	byte	$09, $03, $21, $55, $06, $00, $60, $44, $09, $01, $21, $40, $03, $00, $60, $42
097c4     09 03 21 40 
097c8     03 00 60 45 
097cc     09 01 21 40 
097d0     03 00 40 00 | 	byte	$09, $03, $21, $40, $03, $00, $60, $45, $09, $01, $21, $40, $03, $00, $40, $00
097d4     21 40 03 00 
097d8     60 42 09 01 
097dc     21 42 05 00 
097e0     40 00 21 42 | 	byte	$21, $40, $03, $00, $60, $42, $09, $01, $21, $42, $05, $00, $40, $00, $21, $42
097e4     05 00 21 42 
097e8     05 00 21 42 
097ec     05 00 80 80 
097f0     80 80 80 80 | 	byte	$05, $00, $21, $42, $05, $00, $21, $42, $05, $00, $80, $80, $80, $80, $80, $80
097f4     80 80 80 80 
097f8     CE 01 20 3A 
097fc     08 21 40 03 
09800     22 4A 01 23 | 	byte	$80, $80, $80, $80, $ce, $01, $20, $3a, $08, $21, $40, $03, $22, $4a, $01, $23
09804     4A 0A 00 20 
09808     42 08 21 3A 
0980c     06 00 20 45 
09810     08 21 52 04 | 	byte	$4a, $0a, $00, $20, $42, $08, $21, $3a, $06, $00, $20, $45, $08, $21, $52, $04
09814     00 20 49 08 
09818     21 3A 06 00 
0981c     20 4A 08 21 
09820     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $3a, $06, $00, $20, $4a, $08, $21, $42, $05, $00, $20
09824     49 08 21 4A 
09828     06 00 20 45 
0982c     08 21 3A 06 
09830     00 20 42 08 | 	byte	$49, $08, $21, $4a, $06, $00, $20, $45, $08, $21, $3a, $06, $00, $20, $42, $08
09834     21 4A 06 00 
09838     20 3A 08 21 
0983c     40 03 00 20 
09840     42 08 21 3A | 	byte	$21, $4a, $06, $00, $20, $3a, $08, $21, $40, $03, $00, $20, $42, $08, $21, $3a
09844     06 00 20 45 
09848     08 21 52 06 
0984c     00 20 49 08 
09850     21 40 03 00 | 	byte	$06, $00, $20, $45, $08, $21, $52, $06, $00, $20, $49, $08, $21, $40, $03, $00
09854     20 4A 08 21 
09858     42 05 00 20 
0985c     49 08 21 52 
09860     06 00 20 45 | 	byte	$20, $4a, $08, $21, $42, $05, $00, $20, $49, $08, $21, $52, $06, $00, $20, $45
09864     08 21 40 03 
09868     00 20 42 08 
0986c     21 52 06 00 
09870     20 3A 08 21 | 	byte	$08, $21, $40, $03, $00, $20, $42, $08, $21, $52, $06, $00, $20, $3a, $08, $21
09874     40 03 00 20 
09878     42 08 21 3A 
0987c     06 00 20 45 
09880     08 21 52 04 | 	byte	$40, $03, $00, $20, $42, $08, $21, $3a, $06, $00, $20, $45, $08, $21, $52, $04
09884     00 20 49 08 
09888     21 3A 06 00 
0988c     20 4A 08 21 
09890     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $3a, $06, $00, $20, $4a, $08, $21, $42, $05, $00, $20
09894     49 08 21 55 
09898     06 00 20 45 
0989c     08 21 3A 06 
098a0     00 20 42 08 | 	byte	$49, $08, $21, $55, $06, $00, $20, $45, $08, $21, $3a, $06, $00, $20, $42, $08
098a4     21 55 06 00 
098a8     20 3A 08 21 
098ac     40 03 00 20 
098b0     42 08 21 40 | 	byte	$21, $55, $06, $00, $20, $3a, $08, $21, $40, $03, $00, $20, $42, $08, $21, $40
098b4     03 00 20 45 
098b8     08 21 40 03 
098bc     00 20 49 08 
098c0     21 3A 06 00 | 	byte	$03, $00, $20, $45, $08, $21, $40, $03, $00, $20, $49, $08, $21, $3a, $06, $00
098c4     20 4A 08 21 
098c8     42 05 00 20 
098cc     49 08 21 52 
098d0     06 00 20 45 | 	byte	$20, $4a, $08, $21, $42, $05, $00, $20, $49, $08, $21, $52, $06, $00, $20, $45
098d4     08 21 40 03 
098d8     00 20 42 08 
098dc     21 52 06 00 
098e0     20 37 08 21 | 	byte	$08, $21, $40, $03, $00, $20, $42, $08, $21, $52, $06, $00, $20, $37, $08, $21
098e4     40 03 22 57 
098e8     02 23 57 0B 
098ec     00 20 3A 08 
098f0     21 37 06 00 | 	byte	$40, $03, $22, $57, $02, $23, $57, $0b, $00, $20, $3a, $08, $21, $37, $06, $00
098f4     20 42 08 21 
098f8     52 04 00 20 
098fc     47 08 21 37 
09900     06 00 20 4A | 	byte	$20, $42, $08, $21, $52, $04, $00, $20, $47, $08, $21, $37, $06, $00, $20, $4a
09904     08 21 42 05 
09908     00 20 47 08 
0990c     21 47 06 00 
09910     20 42 08 21 | 	byte	$08, $21, $42, $05, $00, $20, $47, $08, $21, $47, $06, $00, $20, $42, $08, $21
09914     37 06 00 20 
09918     3A 08 21 47 
0991c     06 00 20 37 
09920     08 21 40 03 | 	byte	$37, $06, $00, $20, $3a, $08, $21, $47, $06, $00, $20, $37, $08, $21, $40, $03
09924     00 20 3A 08 
09928     21 37 06 00 
0992c     20 42 08 21 
09930     4A 06 00 20 | 	byte	$00, $20, $3a, $08, $21, $37, $06, $00, $20, $42, $08, $21, $4a, $06, $00, $20
09934     47 08 21 40 
09938     03 00 20 4A 
0993c     08 21 42 05 
09940     00 20 47 08 | 	byte	$47, $08, $21, $40, $03, $00, $20, $4a, $08, $21, $42, $05, $00, $20, $47, $08
09944     21 4A 06 00 
09948     20 42 08 21 
0994c     40 03 00 20 
09950     3A 08 21 4A | 	byte	$21, $4a, $06, $00, $20, $42, $08, $21, $40, $03, $00, $20, $3a, $08, $21, $4a
09954     06 00 20 37 
09958     08 21 40 03 
0995c     00 20 3A 08 
09960     21 37 06 00 | 	byte	$06, $00, $20, $37, $08, $21, $40, $03, $00, $20, $3a, $08, $21, $37, $06, $00
09964     20 42 08 21 
09968     52 04 00 20 
0996c     47 08 21 37 
09970     06 00 20 4A | 	byte	$20, $42, $08, $21, $52, $04, $00, $20, $47, $08, $21, $37, $06, $00, $20, $4a
09974     08 21 42 05 
09978     00 20 47 08 
0997c     21 52 06 00 
09980     20 42 08 21 | 	byte	$08, $21, $42, $05, $00, $20, $47, $08, $21, $52, $06, $00, $20, $42, $08, $21
09984     37 06 00 20 
09988     3A 08 21 52 
0998c     06 00 20 37 
09990     08 21 40 03 | 	byte	$37, $06, $00, $20, $3a, $08, $21, $52, $06, $00, $20, $37, $08, $21, $40, $03
09994     00 20 3A 08 
09998     21 40 03 00 
0999c     20 42 08 21 
099a0     40 03 00 20 | 	byte	$00, $20, $3a, $08, $21, $40, $03, $00, $20, $42, $08, $21, $40, $03, $00, $20
099a4     47 08 21 37 
099a8     06 00 20 4A 
099ac     08 21 42 05 
099b0     00 20 47 08 | 	byte	$47, $08, $21, $37, $06, $00, $20, $4a, $08, $21, $42, $05, $00, $20, $47, $08
099b4     21 4A 06 00 
099b8     20 42 08 21 
099bc     42 05 00 20 
099c0     3A 08 21 42 | 	byte	$21, $4a, $06, $00, $20, $42, $08, $21, $42, $05, $00, $20, $3a, $08, $21, $42
099c4     05 00 80 80 
099c8     DA 01 20 39 
099cc     08 21 40 03 
099d0     22 52 02 23 | 	byte	$05, $00, $80, $80, $da, $01, $20, $39, $08, $21, $40, $03, $22, $52, $02, $23
099d4     52 0B 00 20 
099d8     42 08 21 42 
099dc     06 00 20 45 
099e0     08 21 52 04 | 	byte	$52, $0b, $00, $20, $42, $08, $21, $42, $06, $00, $20, $45, $08, $21, $52, $04
099e4     00 20 49 08 
099e8     21 42 06 00 
099ec     20 52 08 21 
099f0     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $42, $06, $00, $20, $52, $08, $21, $42, $05, $00, $20
099f4     49 08 21 55 
099f8     06 00 20 45 
099fc     08 21 42 06 
09a00     00 20 42 08 | 	byte	$49, $08, $21, $55, $06, $00, $20, $45, $08, $21, $42, $06, $00, $20, $42, $08
09a04     21 55 06 00 
09a08     20 39 08 21 
09a0c     40 03 00 20 
09a10     42 08 21 42 | 	byte	$21, $55, $06, $00, $20, $39, $08, $21, $40, $03, $00, $20, $42, $08, $21, $42
09a14     06 00 20 45 
09a18     08 21 59 06 
09a1c     00 20 49 08 
09a20     21 40 03 00 | 	byte	$06, $00, $20, $45, $08, $21, $59, $06, $00, $20, $49, $08, $21, $40, $03, $00
09a24     20 52 08 21 
09a28     42 05 00 20 
09a2c     49 08 21 59 
09a30     06 00 20 45 | 	byte	$20, $52, $08, $21, $42, $05, $00, $20, $49, $08, $21, $59, $06, $00, $20, $45
09a34     08 21 40 03 
09a38     00 20 42 08 
09a3c     21 59 06 00 
09a40     20 37 08 21 | 	byte	$08, $21, $40, $03, $00, $20, $42, $08, $21, $59, $06, $00, $20, $37, $08, $21
09a44     40 03 22 50 
09a48     01 23 50 0A 
09a4c     00 20 40 08 
09a50     21 40 06 00 | 	byte	$40, $03, $22, $50, $01, $23, $50, $0a, $00, $20, $40, $08, $21, $40, $06, $00
09a54     20 44 08 21 
09a58     52 04 00 20 
09a5c     47 08 21 40 
09a60     06 00 20 50 | 	byte	$20, $44, $08, $21, $52, $04, $00, $20, $47, $08, $21, $40, $06, $00, $20, $50
09a64     08 21 42 05 
09a68     00 20 47 08 
09a6c     21 54 06 00 
09a70     20 44 08 21 | 	byte	$08, $21, $42, $05, $00, $20, $47, $08, $21, $54, $06, $00, $20, $44, $08, $21
09a74     40 06 00 20 
09a78     40 08 21 54 
09a7c     06 00 20 37 
09a80     08 21 40 03 | 	byte	$40, $06, $00, $20, $40, $08, $21, $54, $06, $00, $20, $37, $08, $21, $40, $03
09a84     00 20 40 08 
09a88     21 40 03 00 
09a8c     20 44 08 21 
09a90     40 03 00 20 | 	byte	$00, $20, $40, $08, $21, $40, $03, $00, $20, $44, $08, $21, $40, $03, $00, $20
09a94     47 08 21 40 
09a98     06 00 20 50 
09a9c     08 21 42 05 
09aa0     00 20 47 08 | 	byte	$47, $08, $21, $40, $06, $00, $20, $50, $08, $21, $42, $05, $00, $20, $47, $08
09aa4     21 57 06 00 
09aa8     20 44 08 21 
09aac     40 03 00 20 
09ab0     40 08 21 57 | 	byte	$21, $57, $06, $00, $20, $44, $08, $21, $40, $03, $00, $20, $40, $08, $21, $57
09ab4     06 00 20 37 
09ab8     08 21 40 03 
09abc     22 57 01 23 
09ac0     57 0A 00 20 | 	byte	$06, $00, $20, $37, $08, $21, $40, $03, $22, $57, $01, $23, $57, $0a, $00, $20
09ac4     3B 08 21 37 
09ac8     06 00 20 42 
09acc     08 21 52 04 
09ad0     00 20 47 08 | 	byte	$3b, $08, $21, $37, $06, $00, $20, $42, $08, $21, $52, $04, $00, $20, $47, $08
09ad4     21 37 06 00 
09ad8     20 4B 08 21 
09adc     42 05 00 20 
09ae0     47 08 21 52 | 	byte	$21, $37, $06, $00, $20, $4b, $08, $21, $42, $05, $00, $20, $47, $08, $21, $52
09ae4     06 00 20 42 
09ae8     08 21 37 06 
09aec     00 20 3B 08 
09af0     21 52 06 00 | 	byte	$06, $00, $20, $42, $08, $21, $37, $06, $00, $20, $3b, $08, $21, $52, $06, $00
09af4     20 37 08 21 
09af8     40 03 00 20 
09afc     3B 08 21 37 
09b00     06 00 20 42 | 	byte	$20, $37, $08, $21, $40, $03, $00, $20, $3b, $08, $21, $37, $06, $00, $20, $42
09b04     08 21 4B 06 
09b08     00 20 47 08 
09b0c     21 40 03 00 
09b10     20 4B 08 21 | 	byte	$08, $21, $4b, $06, $00, $20, $47, $08, $21, $40, $03, $00, $20, $4b, $08, $21
09b14     42 05 00 20 
09b18     47 08 21 4B 
09b1c     06 00 20 42 
09b20     08 21 40 03 | 	byte	$42, $05, $00, $20, $47, $08, $21, $4b, $06, $00, $20, $42, $08, $21, $40, $03
09b24     00 20 3B 08 
09b28     21 4B 06 00 
09b2c     20 39 08 21 
09b30     40 03 22 59 | 	byte	$00, $20, $3b, $08, $21, $4b, $06, $00, $20, $39, $08, $21, $40, $03, $22, $59
09b34     01 23 59 0A 
09b38     00 20 41 08 
09b3c     21 39 06 00 
09b40     20 44 08 21 | 	byte	$01, $23, $59, $0a, $00, $20, $41, $08, $21, $39, $06, $00, $20, $44, $08, $21
09b44     52 04 00 20 
09b48     47 08 21 39 
09b4c     06 00 20 49 
09b50     08 21 42 05 | 	byte	$52, $04, $00, $20, $47, $08, $21, $39, $06, $00, $20, $49, $08, $21, $42, $05
09b54     00 20 47 08 
09b58     21 51 06 00 
09b5c     20 49 08 21 
09b60     39 06 00 20 | 	byte	$00, $20, $47, $08, $21, $51, $06, $00, $20, $49, $08, $21, $39, $06, $00, $20
09b64     51 08 21 51 
09b68     06 00 20 54 
09b6c     08 21 40 03 
09b70     00 20 51 08 | 	byte	$51, $08, $21, $51, $06, $00, $20, $54, $08, $21, $40, $03, $00, $20, $51, $08
09b74     21 40 03 00 
09b78     20 49 08 21 
09b7c     40 03 00 20 
09b80     47 08 21 40 | 	byte	$21, $40, $03, $00, $20, $49, $08, $21, $40, $03, $00, $20, $47, $08, $21, $40
09b84     03 00 20 44 
09b88     08 21 42 05 
09b8c     00 20 41 08 
09b90     21 42 05 00 | 	byte	$03, $00, $20, $44, $08, $21, $42, $05, $00, $20, $41, $08, $21, $42, $05, $00
09b94     20 3B 08 21 
09b98     42 05 00 20 
09b9c     39 08 21 42 
09ba0     05 00 80 80 | 	byte	$20, $3b, $08, $21, $42, $05, $00, $20, $39, $08, $21, $42, $05, $00, $80, $80
09ba4     80 80 80 80 
09ba8     81 01 20 49 
09bac     08 21 40 03 
09bb0     22 52 02 23 | 	byte	$80, $80, $80, $80, $81, $01, $20, $49, $08, $21, $40, $03, $22, $52, $02, $23
09bb4     52 0B 00 00 
09bb8     40 07 00 60 
09bbc     49 08 15 00 
09bc0     20 49 08 21 | 	byte	$52, $0b, $00, $00, $40, $07, $00, $60, $49, $08, $15, $00, $20, $49, $08, $21
09bc4     40 03 00 00 
09bc8     20 47 08 00 
09bcc     60 49 08 15 
09bd0     00 20 49 08 | 	byte	$40, $03, $00, $00, $20, $47, $08, $00, $60, $49, $08, $15, $00, $20, $49, $08
09bd4     21 40 03 00 
09bd8     60 47 08 15 
09bdc     21 40 03 00 
09be0     20 47 08 21 | 	byte	$21, $40, $03, $00, $60, $47, $08, $15, $21, $40, $03, $00, $20, $47, $08, $21
09be4     40 03 00 60 
09be8     49 08 15 00 
09bec     20 45 08 21 
09bf0     40 03 00 60 | 	byte	$40, $03, $00, $60, $49, $08, $15, $00, $20, $45, $08, $21, $40, $03, $00, $60
09bf4     47 08 15 00 
09bf8     20 44 08 00 
09bfc     60 45 08 15 
09c00     00 20 42 08 | 	byte	$47, $08, $15, $00, $20, $44, $08, $00, $60, $45, $08, $15, $00, $20, $42, $08
09c04     21 40 03 00 
09c08     60 44 08 15 
09c0c     00 60 45 08 
09c10     07 00 60 42 | 	byte	$21, $40, $03, $00, $60, $44, $08, $15, $00, $60, $45, $08, $07, $00, $60, $42
09c14     08 15 00 60 
09c18     44 08 07 21 
09c1c     40 03 00 60 
09c20     44 08 03 00 | 	byte	$08, $15, $00, $60, $44, $08, $07, $21, $40, $03, $00, $60, $44, $08, $03, $00
09c24     20 40 08 00 
09c28     60 42 08 03 
09c2c     00 20 42 08 
09c30     21 40 03 22 | 	byte	$20, $40, $08, $00, $60, $42, $08, $03, $00, $20, $42, $08, $21, $40, $03, $22
09c34     50 01 23 50 
09c38     0A 00 60 40 
09c3c     08 15 21 40 
09c40     03 00 20 45 | 	byte	$50, $01, $23, $50, $0a, $00, $60, $40, $08, $15, $21, $40, $03, $00, $20, $45
09c44     08 21 40 03 
09c48     00 60 42 08 
09c4c     15 00 20 40 
09c50     08 21 40 03 | 	byte	$08, $21, $40, $03, $00, $60, $42, $08, $15, $00, $20, $40, $08, $21, $40, $03
09c54     00 60 45 08 
09c58     15 00 20 45 
09c5c     08 00 60 40 
09c60     08 15 00 20 | 	byte	$00, $60, $45, $08, $15, $00, $20, $45, $08, $00, $60, $40, $08, $15, $00, $20
09c64     3B 08 21 40 
09c68     03 22 57 01 
09c6c     23 57 0A 00 
09c70     60 45 08 15 | 	byte	$3b, $08, $21, $40, $03, $22, $57, $01, $23, $57, $0a, $00, $60, $45, $08, $15
09c74     00 60 40 08 
09c78     07 00 60 3B 
09c7c     08 15 00 60 
09c80     45 08 07 21 | 	byte	$00, $60, $40, $08, $07, $00, $60, $3b, $08, $15, $00, $60, $45, $08, $07, $21
09c84     40 03 00 60 
09c88     3B 08 03 00 
09c8c     20 42 08 00 
09c90     60 45 08 03 | 	byte	$40, $03, $00, $60, $3b, $08, $03, $00, $20, $42, $08, $00, $60, $45, $08, $03
09c94     00 20 40 08 
09c98     21 40 03 22 
09c9c     55 01 23 55 
09ca0     0A 00 60 42 | 	byte	$00, $20, $40, $08, $21, $40, $03, $22, $55, $01, $23, $55, $0a, $00, $60, $42
09ca4     08 15 21 40 
09ca8     03 00 20 45 
09cac     08 21 40 03 
09cb0     00 60 40 08 | 	byte	$08, $15, $21, $40, $03, $00, $20, $45, $08, $21, $40, $03, $00, $60, $40, $08
09cb4     15 00 20 44 
09cb8     08 21 40 03 
09cbc     00 60 45 08 
09cc0     15 00 20 45 | 	byte	$15, $00, $20, $44, $08, $21, $40, $03, $00, $60, $45, $08, $15, $00, $20, $45
09cc4     08 00 60 44 
09cc8     08 15 00 20 
09ccc     42 08 21 40 
09cd0     03 22 52 02 | 	byte	$08, $00, $60, $44, $08, $15, $00, $20, $42, $08, $21, $40, $03, $22, $52, $02
09cd4     23 52 0B 00 
09cd8     60 45 08 15 
09cdc     00 60 44 08 
09ce0     07 00 60 42 | 	byte	$23, $52, $0b, $00, $60, $45, $08, $15, $00, $60, $44, $08, $07, $00, $60, $42
09ce4     08 15 00 60 
09ce8     45 08 07 21 
09cec     40 03 00 60 
09cf0     44 08 03 00 | 	byte	$08, $15, $00, $60, $45, $08, $07, $21, $40, $03, $00, $60, $44, $08, $03, $00
09cf4     60 42 08 07 
09cf8     00 60 45 08 
09cfc     03 00 60 44 
09d00     08 01 21 40 | 	byte	$60, $42, $08, $07, $00, $60, $45, $08, $03, $00, $60, $44, $08, $01, $21, $40
09d04     03 00 60 42 
09d08     08 03 21 40 
09d0c     03 00 60 45 
09d10     08 01 21 40 | 	byte	$03, $00, $60, $42, $08, $03, $21, $40, $03, $00, $60, $45, $08, $01, $21, $40
09d14     03 00 40 00 
09d18     00 60 42 08 
09d1c     01 21 40 03 
09d20     00 40 00 00 | 	byte	$03, $00, $40, $00, $00, $60, $42, $08, $01, $21, $40, $03, $00, $40, $00, $00
09d24     21 40 03 00 
09d28     00 80 80 80 
09d2c     80 80 80 80 
09d30     80 80 80 80 | 	byte	$21, $40, $03, $00, $00, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
09d34     80 80 80 80 
09d38     13 01 21 40 
09d3c     03 00 41 02 
09d40     00 61 42 06 | 	byte	$80, $80, $80, $80, $13, $01, $21, $40, $03, $00, $41, $02, $00, $61, $42, $06
09d44     03 00 61 42 
09d48     06 04 00 61 
09d4c     42 06 05 00 
09d50     41 06 00 61 | 	byte	$03, $00, $61, $42, $06, $04, $00, $61, $42, $06, $05, $00, $41, $06, $00, $61
09d54     42 06 07 00 
09d58     61 42 06 08 
09d5c     00 61 42 06 
09d60     09 00 41 0A | 	byte	$42, $06, $07, $00, $61, $42, $06, $08, $00, $61, $42, $06, $09, $00, $41, $0a
09d64     00 61 42 06 
09d68     0B 00 61 42 
09d6c     06 0C 00 61 
09d70     42 06 0D 00 | 	byte	$00, $61, $42, $06, $0b, $00, $61, $42, $06, $0c, $00, $61, $42, $06, $0d, $00
09d74     41 0E 00 61 
09d78     42 06 0F 00 
09d7c     61 42 06 10 
09d80     00 61 42 06 | 	byte	$41, $0e, $00, $61, $42, $06, $0f, $00, $61, $42, $06, $10, $00, $61, $42, $06
09d84     11 00 41 12 
09d88     00 61 42 06 
09d8c     13 00 61 42 
09d90     06 14 00 61 | 	byte	$11, $00, $41, $12, $00, $61, $42, $06, $13, $00, $61, $42, $06, $14, $00, $61
09d94     42 06 15 00 
09d98     41 16 00 61 
09d9c     42 06 17 00 
09da0     61 42 06 18 | 	byte	$42, $06, $15, $00, $41, $16, $00, $61, $42, $06, $17, $00, $61, $42, $06, $18
09da4     00 61 42 06 
09da8     19 00 41 1A 
09dac     00 61 42 06 
09db0     1B 00 61 42 | 	byte	$00, $61, $42, $06, $19, $00, $41, $1a, $00, $61, $42, $06, $1b, $00, $61, $42
09db4     06 1C 00 61 
09db8     42 06 1D 00 
09dbc     41 1E 00 61 
09dc0     42 06 1F 00 | 	byte	$06, $1c, $00, $61, $42, $06, $1d, $00, $41, $1e, $00, $61, $42, $06, $1f, $00
09dc4     61 42 06 20 
09dc8     00 61 42 06 
09dcc     21 00 41 22 
09dd0     00 61 42 06 | 	byte	$61, $42, $06, $20, $00, $61, $42, $06, $21, $00, $41, $22, $00, $61, $42, $06
09dd4     23 00 61 42 
09dd8     06 24 00 61 
09ddc     42 06 25 00 
09de0     41 26 00 61 | 	byte	$23, $00, $61, $42, $06, $24, $00, $61, $42, $06, $25, $00, $41, $26, $00, $61
09de4     42 06 27 00 
09de8     61 42 06 28 
09dec     00 61 42 06 
09df0     29 00 41 2A | 	byte	$42, $06, $27, $00, $61, $42, $06, $28, $00, $61, $42, $06, $29, $00, $41, $2a
09df4     00 61 42 06 
09df8     2B 00 61 42 
09dfc     06 2C 00 61 
09e00     42 06 2D 00 | 	byte	$00, $61, $42, $06, $2b, $00, $61, $42, $06, $2c, $00, $61, $42, $06, $2d, $00
09e04     41 2C 00 61 
09e08     42 06 2B 00 
09e0c     61 42 06 2A 
09e10     00 61 42 06 | 	byte	$41, $2c, $00, $61, $42, $06, $2b, $00, $61, $42, $06, $2a, $00, $61, $42, $06
09e14     29 00 41 28 
09e18     00 61 42 06 
09e1c     27 00 61 42 
09e20     06 26 00 61 | 	byte	$29, $00, $41, $28, $00, $61, $42, $06, $27, $00, $61, $42, $06, $26, $00, $61
09e24     42 06 25 00 
09e28     00 21 42 06 
09e2c     00 21 42 06 
09e30     00 21 42 06 | 	byte	$42, $06, $25, $00, $00, $21, $42, $06, $00, $21, $42, $06, $00, $21, $42, $06
09e34     00 00 21 42 
09e38     06 00 21 42 
09e3c     06 00 21 42 
09e40     06 00 00 21 | 	byte	$00, $00, $21, $42, $06, $00, $21, $42, $06, $00, $21, $42, $06, $00, $00, $21
09e44     42 06 00 21 
09e48     42 06 00 80 
09e4c     80 80 80 80 
09e50     80 80 80 80 | 	byte	$42, $06, $00, $21, $42, $06, $00, $80, $80, $80, $80, $80, $80, $80, $80, $80
09e54     80 80 80 80 
09e58     BF 01 20 52 
09e5c     0C 21 42 06 
09e60     00 00 21 42 | 	byte	$80, $80, $80, $80, $bf, $01, $20, $52, $0c, $21, $42, $06, $00, $00, $21, $42
09e64     06 00 60 52 
09e68     0C 15 21 42 
09e6c     06 00 20 55 
09e70     0C 21 42 06 | 	byte	$06, $00, $60, $52, $0c, $15, $21, $42, $06, $00, $20, $55, $0c, $21, $42, $06
09e74     00 00 20 54 
09e78     0C 21 42 06 
09e7c     00 60 55 0C 
09e80     15 21 42 06 | 	byte	$00, $00, $20, $54, $0c, $21, $42, $06, $00, $60, $55, $0c, $15, $21, $42, $06
09e84     00 20 52 0C 
09e88     21 42 06 00 
09e8c     60 54 0C 15 
09e90     00 60 55 0C | 	byte	$00, $20, $52, $0c, $21, $42, $06, $00, $60, $54, $0c, $15, $00, $60, $55, $0c
09e94     07 21 42 06 
09e98     00 60 52 0C 
09e9c     15 21 42 06 
09ea0     00 20 50 0C | 	byte	$07, $21, $42, $06, $00, $60, $52, $0c, $15, $21, $42, $06, $00, $20, $50, $0c
09ea4     21 42 06 00 
09ea8     60 55 0C 04 
09eac     00 60 52 0C 
09eb0     07 21 42 06 | 	byte	$21, $42, $06, $00, $60, $55, $0c, $04, $00, $60, $52, $0c, $07, $21, $42, $06
09eb4     00 60 50 0C 
09eb8     15 21 42 06 
09ebc     00 20 49 0C 
09ec0     21 45 06 22 | 	byte	$00, $60, $50, $0c, $15, $21, $42, $06, $00, $20, $49, $0c, $21, $45, $06, $22
09ec4     55 01 23 55 
09ec8     0A 00 60 52 
09ecc     0C 04 00 60 
09ed0     50 0C 07 21 | 	byte	$55, $01, $23, $55, $0a, $00, $60, $52, $0c, $04, $00, $60, $50, $0c, $07, $21
09ed4     45 06 00 60 
09ed8     49 0C 15 21 
09edc     45 06 00 20 
09ee0     45 0C 21 45 | 	byte	$45, $06, $00, $60, $49, $0c, $15, $21, $45, $06, $00, $20, $45, $0c, $21, $45
09ee4     06 00 60 50 
09ee8     0C 04 00 20 
09eec     49 0C 21 45 
09ef0     06 00 60 45 | 	byte	$06, $00, $60, $50, $0c, $04, $00, $20, $49, $0c, $21, $45, $06, $00, $60, $45
09ef4     0C 15 21 45 
09ef8     06 00 20 50 
09efc     0C 21 45 06 
09f00     00 60 49 0C | 	byte	$0c, $15, $21, $45, $06, $00, $20, $50, $0c, $21, $45, $06, $00, $60, $49, $0c
09f04     15 00 20 40 
09f08     0C 21 45 06 
09f0c     00 20 45 0C 
09f10     21 45 06 00 | 	byte	$15, $00, $20, $40, $0c, $21, $45, $06, $00, $20, $45, $0c, $21, $45, $06, $00
09f14     20 49 0C 21 
09f18     45 06 00 60 
09f1c     40 0C 15 00 
09f20     20 40 0C 21 | 	byte	$20, $49, $0c, $21, $45, $06, $00, $60, $40, $0c, $15, $00, $20, $40, $0c, $21
09f24     45 06 00 20 
09f28     45 0C 21 45 
09f2c     06 00 20 47 
09f30     0C 21 40 06 | 	byte	$45, $06, $00, $20, $45, $0c, $21, $45, $06, $00, $20, $47, $0c, $21, $40, $06
09f34     22 50 01 23 
09f38     50 0A 00 60 
09f3c     40 0C 15 00 
09f40     60 45 0C 15 | 	byte	$22, $50, $01, $23, $50, $0a, $00, $60, $40, $0c, $15, $00, $60, $45, $0c, $15
09f44     21 40 06 00 
09f48     60 47 0C 15 
09f4c     21 40 06 00 
09f50     20 47 0C 21 | 	byte	$21, $40, $06, $00, $60, $47, $0c, $15, $21, $40, $06, $00, $20, $47, $0c, $21
09f54     40 06 00 60 
09f58     45 0C 05 00 
09f5c     20 47 0C 21 
09f60     40 06 00 20 | 	byte	$40, $06, $00, $60, $45, $0c, $05, $00, $20, $47, $0c, $21, $40, $06, $00, $20
09f64     45 0C 21 40 
09f68     06 00 20 44 
09f6c     0C 21 40 06 
09f70     00 60 47 0C | 	byte	$45, $0c, $21, $40, $06, $00, $20, $44, $0c, $21, $40, $06, $00, $60, $47, $0c
09f74     15 00 60 45 
09f78     0C 15 21 40 
09f7c     06 00 60 44 
09f80     0C 15 21 40 | 	byte	$15, $00, $60, $45, $0c, $15, $21, $40, $06, $00, $60, $44, $0c, $15, $21, $40
09f84     06 00 20 44 
09f88     0C 21 40 06 
09f8c     00 20 45 0C 
09f90     00 20 44 0C | 	byte	$06, $00, $20, $44, $0c, $21, $40, $06, $00, $20, $45, $0c, $00, $20, $44, $0c
09f94     21 40 06 00 
09f98     20 42 0C 21 
09f9c     40 06 00 20 
09fa0     43 0C 21 43 | 	byte	$21, $40, $06, $00, $20, $42, $0c, $21, $40, $06, $00, $20, $43, $0c, $21, $43
09fa4     06 22 50 02 
09fa8     23 50 0B 00 
09fac     60 44 0C 15 
09fb0     00 60 42 0C | 	byte	$06, $22, $50, $02, $23, $50, $0b, $00, $60, $44, $0c, $15, $00, $60, $42, $0c
09fb4     15 21 43 06 
09fb8     00 60 43 0C 
09fbc     15 21 43 06 
09fc0     00 20 43 0C | 	byte	$15, $21, $43, $06, $00, $60, $43, $0c, $15, $21, $43, $06, $00, $20, $43, $0c
09fc4     21 43 06 00 
09fc8     60 42 0C 07 
09fcc     00 60 43 0C 
09fd0     07 21 43 06 | 	byte	$21, $43, $06, $00, $60, $42, $0c, $07, $00, $60, $43, $0c, $07, $21, $43, $06
09fd4     00 60 43 0C 
09fd8     15 21 43 06 
09fdc     00 20 45 0C 
09fe0     21 45 06 22 | 	byte	$00, $60, $43, $0c, $15, $21, $43, $06, $00, $20, $45, $0c, $21, $45, $06, $22
09fe4     55 01 23 55 
09fe8     0A 00 60 43 
09fec     0C 04 00 20 
09ff0     45 0C 21 45 | 	byte	$55, $01, $23, $55, $0a, $00, $60, $43, $0c, $04, $00, $20, $45, $0c, $21, $45
09ff4     06 00 20 42 
09ff8     0C 21 45 06 
09ffc     00 20 45 0C 
0a000     21 45 06 00 | 	byte	$06, $00, $20, $42, $0c, $21, $45, $06, $00, $20, $45, $0c, $21, $45, $06, $00
0a004     60 45 0C 15 
0a008     00 20 45 0C 
0a00c     21 45 06 00 
0a010     20 49 0C 21 | 	byte	$60, $45, $0c, $15, $00, $20, $45, $0c, $21, $45, $06, $00, $20, $49, $0c, $21
0a014     45 06 00 80 
0a018     E0 01 20 52 
0a01c     0C 21 40 03 
0a020     22 52 02 23 | 	byte	$45, $06, $00, $80, $e0, $01, $20, $52, $0c, $21, $40, $03, $22, $52, $02, $23
0a024     52 0B 00 00 
0a028     21 42 06 00 
0a02c     60 52 0C 15 
0a030     21 42 06 00 | 	byte	$52, $0b, $00, $00, $21, $42, $06, $00, $60, $52, $0c, $15, $21, $42, $06, $00
0a034     20 55 0C 21 
0a038     42 06 00 21 
0a03c     52 06 00 20 
0a040     54 0C 21 42 | 	byte	$20, $55, $0c, $21, $42, $06, $00, $21, $52, $06, $00, $20, $54, $0c, $21, $42
0a044     06 00 60 55 
0a048     0C 15 21 42 
0a04c     06 00 20 52 
0a050     0C 21 40 03 | 	byte	$06, $00, $60, $55, $0c, $15, $21, $42, $06, $00, $20, $52, $0c, $21, $40, $03
0a054     00 60 54 0C 
0a058     15 00 60 55 
0a05c     0C 07 21 42 
0a060     06 00 60 52 | 	byte	$00, $60, $54, $0c, $15, $00, $60, $55, $0c, $07, $21, $42, $06, $00, $60, $52
0a064     0C 15 21 42 
0a068     06 00 20 50 
0a06c     0C 21 42 06 
0a070     00 60 55 0C | 	byte	$0c, $15, $21, $42, $06, $00, $20, $50, $0c, $21, $42, $06, $00, $60, $55, $0c
0a074     04 21 52 06 
0a078     00 60 52 0C 
0a07c     07 21 42 06 
0a080     00 60 50 0C | 	byte	$04, $21, $52, $06, $00, $60, $52, $0c, $07, $21, $42, $06, $00, $60, $50, $0c
0a084     15 21 42 06 
0a088     00 20 49 0C 
0a08c     21 40 03 22 
0a090     55 01 23 55 | 	byte	$15, $21, $42, $06, $00, $20, $49, $0c, $21, $40, $03, $22, $55, $01, $23, $55
0a094     0A 00 60 52 
0a098     0C 04 00 60 
0a09c     50 0C 07 21 
0a0a0     45 06 00 60 | 	byte	$0a, $00, $60, $52, $0c, $04, $00, $60, $50, $0c, $07, $21, $45, $06, $00, $60
0a0a4     49 0C 15 21 
0a0a8     45 06 00 20 
0a0ac     45 0C 21 45 
0a0b0     06 00 60 50 | 	byte	$49, $0c, $15, $21, $45, $06, $00, $20, $45, $0c, $21, $45, $06, $00, $60, $50
0a0b4     0C 04 21 55 
0a0b8     06 00 20 49 
0a0bc     0C 21 45 06 
0a0c0     00 60 45 0C | 	byte	$0c, $04, $21, $55, $06, $00, $20, $49, $0c, $21, $45, $06, $00, $60, $45, $0c
0a0c4     15 21 45 06 
0a0c8     00 20 50 0C 
0a0cc     21 40 03 00 
0a0d0     60 49 0C 15 | 	byte	$15, $21, $45, $06, $00, $20, $50, $0c, $21, $40, $03, $00, $60, $49, $0c, $15
0a0d4     00 20 40 0C 
0a0d8     21 45 06 00 
0a0dc     20 45 0C 21 
0a0e0     45 06 00 20 | 	byte	$00, $20, $40, $0c, $21, $45, $06, $00, $20, $45, $0c, $21, $45, $06, $00, $20
0a0e4     49 0C 21 45 
0a0e8     06 00 60 40 
0a0ec     0C 15 21 55 
0a0f0     06 00 20 40 | 	byte	$49, $0c, $21, $45, $06, $00, $60, $40, $0c, $15, $21, $55, $06, $00, $20, $40
0a0f4     0C 21 45 06 
0a0f8     00 20 45 0C 
0a0fc     21 45 06 00 
0a100     20 47 0C 21 | 	byte	$0c, $21, $45, $06, $00, $20, $45, $0c, $21, $45, $06, $00, $20, $47, $0c, $21
0a104     40 03 22 50 
0a108     01 23 50 0A 
0a10c     00 60 40 0C 
0a110     15 00 60 45 | 	byte	$40, $03, $22, $50, $01, $23, $50, $0a, $00, $60, $40, $0c, $15, $00, $60, $45
0a114     0C 15 21 40 
0a118     06 00 60 47 
0a11c     0C 15 21 40 
0a120     06 00 20 47 | 	byte	$0c, $15, $21, $40, $06, $00, $60, $47, $0c, $15, $21, $40, $06, $00, $20, $47
0a124     0C 21 40 06 
0a128     00 60 45 0C 
0a12c     05 21 50 06 
0a130     00 20 47 0C | 	byte	$0c, $21, $40, $06, $00, $60, $45, $0c, $05, $21, $50, $06, $00, $20, $47, $0c
0a134     21 40 06 00 
0a138     20 45 0C 21 
0a13c     40 06 00 20 
0a140     44 0C 21 40 | 	byte	$21, $40, $06, $00, $20, $45, $0c, $21, $40, $06, $00, $20, $44, $0c, $21, $40
0a144     03 00 60 47 
0a148     0C 15 00 60 
0a14c     45 0C 15 21 
0a150     40 06 00 60 | 	byte	$03, $00, $60, $47, $0c, $15, $00, $60, $45, $0c, $15, $21, $40, $06, $00, $60
0a154     44 0C 15 21 
0a158     40 06 00 20 
0a15c     44 0C 21 40 
0a160     06 00 20 45 | 	byte	$44, $0c, $15, $21, $40, $06, $00, $20, $44, $0c, $21, $40, $06, $00, $20, $45
0a164     0C 21 50 06 
0a168     00 20 44 0C 
0a16c     21 40 03 00 
0a170     20 42 0C 21 | 	byte	$0c, $21, $50, $06, $00, $20, $44, $0c, $21, $40, $03, $00, $20, $42, $0c, $21
0a174     40 06 00 20 
0a178     43 0C 21 40 
0a17c     03 22 50 02 
0a180     23 50 0B 00 | 	byte	$40, $06, $00, $20, $43, $0c, $21, $40, $03, $22, $50, $02, $23, $50, $0b, $00
0a184     60 44 0C 15 
0a188     00 60 42 0C 
0a18c     15 21 43 06 
0a190     00 60 43 0C | 	byte	$60, $44, $0c, $15, $00, $60, $42, $0c, $15, $21, $43, $06, $00, $60, $43, $0c
0a194     15 21 43 06 
0a198     00 20 43 0C 
0a19c     21 43 06 00 
0a1a0     60 42 0C 07 | 	byte	$15, $21, $43, $06, $00, $20, $43, $0c, $21, $43, $06, $00, $60, $42, $0c, $07
0a1a4     21 53 06 00 
0a1a8     60 43 0C 07 
0a1ac     21 40 03 00 
0a1b0     60 43 0C 15 | 	byte	$21, $53, $06, $00, $60, $43, $0c, $07, $21, $40, $03, $00, $60, $43, $0c, $15
0a1b4     21 43 06 00 
0a1b8     20 45 0C 21 
0a1bc     40 03 22 55 
0a1c0     01 23 55 0A | 	byte	$21, $43, $06, $00, $20, $45, $0c, $21, $40, $03, $22, $55, $01, $23, $55, $0a
0a1c4     00 60 43 0C 
0a1c8     04 00 20 45 
0a1cc     0C 21 45 06 
0a1d0     00 20 42 0C | 	byte	$00, $60, $43, $0c, $04, $00, $20, $45, $0c, $21, $45, $06, $00, $20, $42, $0c
0a1d4     21 45 06 00 
0a1d8     20 45 0C 61 
0a1dc     42 05 35 00 
0a1e0     60 45 0C 15 | 	byte	$21, $45, $06, $00, $20, $45, $0c, $61, $42, $05, $35, $00, $60, $45, $0c, $15
0a1e4     21 55 06 00 
0a1e8     20 45 0C 61 
0a1ec     42 05 35 00 
0a1f0     20 49 0C 61 | 	byte	$21, $55, $06, $00, $20, $45, $0c, $61, $42, $05, $35, $00, $20, $49, $0c, $61
0a1f4     42 05 35 00 
0a1f8     80 01 20 39 
0a1fc     09 21 40 03 
0a200     22 52 02 23 | 	byte	$42, $05, $35, $00, $80, $01, $20, $39, $09, $21, $40, $03, $22, $52, $02, $23
0a204     52 0B 00 20 
0a208     42 09 21 42 
0a20c     06 00 20 45 
0a210     09 21 52 06 | 	byte	$52, $0b, $00, $20, $42, $09, $21, $42, $06, $00, $20, $45, $09, $21, $52, $06
0a214     00 20 49 09 
0a218     21 42 06 00 
0a21c     20 52 09 21 
0a220     42 05 00 20 | 	byte	$00, $20, $49, $09, $21, $42, $06, $00, $20, $52, $09, $21, $42, $05, $00, $20
0a224     49 09 21 52 
0a228     06 00 20 52 
0a22c     09 21 42 06 
0a230     00 20 55 09 | 	byte	$49, $09, $21, $52, $06, $00, $20, $52, $09, $21, $42, $06, $00, $20, $55, $09
0a234     21 52 06 00 
0a238     20 52 09 21 
0a23c     40 03 00 21 
0a240     42 06 00 21 | 	byte	$21, $52, $06, $00, $20, $52, $09, $21, $40, $03, $00, $21, $42, $06, $00, $21
0a244     40 03 00 21 
0a248     42 06 00 21 
0a24c     42 05 00 21 
0a250     55 06 00 20 | 	byte	$40, $03, $00, $21, $42, $06, $00, $21, $42, $05, $00, $21, $55, $06, $00, $20
0a254     54 09 21 42 
0a258     06 00 21 55 
0a25c     06 00 20 55 
0a260     09 21 40 03 | 	byte	$54, $09, $21, $42, $06, $00, $21, $55, $06, $00, $20, $55, $09, $21, $40, $03
0a264     22 55 01 23 
0a268     55 0A 00 21 
0a26c     45 06 00 21 
0a270     55 06 00 21 | 	byte	$22, $55, $01, $23, $55, $0a, $00, $21, $45, $06, $00, $21, $55, $06, $00, $21
0a274     45 06 00 21 
0a278     42 05 00 21 
0a27c     55 06 00 20 
0a280     50 09 21 45 | 	byte	$45, $06, $00, $21, $42, $05, $00, $21, $55, $06, $00, $20, $50, $09, $21, $45
0a284     06 00 21 55 
0a288     06 00 20 59 
0a28c     09 21 40 03 
0a290     00 21 45 06 | 	byte	$06, $00, $21, $55, $06, $00, $20, $59, $09, $21, $40, $03, $00, $21, $45, $06
0a294     00 20 55 09 
0a298     21 59 06 00 
0a29c     21 40 03 00 
0a2a0     20 50 09 21 | 	byte	$00, $20, $55, $09, $21, $59, $06, $00, $21, $40, $03, $00, $20, $50, $09, $21
0a2a4     42 05 00 21 
0a2a8     59 06 00 20 
0a2ac     59 09 21 40 
0a2b0     03 00 21 59 | 	byte	$42, $05, $00, $21, $59, $06, $00, $20, $59, $09, $21, $40, $03, $00, $21, $59
0a2b4     06 00 20 57 
0a2b8     09 21 40 03 
0a2bc     22 50 01 23 
0a2c0     50 0A 00 21 | 	byte	$06, $00, $20, $57, $09, $21, $40, $03, $22, $50, $01, $23, $50, $0a, $00, $21
0a2c4     40 06 00 21 
0a2c8     54 06 00 21 
0a2cc     40 06 00 21 
0a2d0     42 05 00 21 | 	byte	$40, $06, $00, $21, $54, $06, $00, $21, $40, $06, $00, $21, $42, $05, $00, $21
0a2d4     54 06 00 21 
0a2d8     40 06 00 21 
0a2dc     54 06 00 20 
0a2e0     57 09 21 40 | 	byte	$54, $06, $00, $21, $40, $06, $00, $21, $54, $06, $00, $20, $57, $09, $21, $40
0a2e4     03 00 21 40 
0a2e8     06 00 20 55 
0a2ec     09 21 40 03 
0a2f0     00 21 40 06 | 	byte	$03, $00, $21, $40, $06, $00, $20, $55, $09, $21, $40, $03, $00, $21, $40, $06
0a2f4     00 20 54 09 
0a2f8     21 42 05 00 
0a2fc     20 55 09 21 
0a300     57 06 00 20 | 	byte	$00, $20, $54, $09, $21, $42, $05, $00, $20, $55, $09, $21, $57, $06, $00, $20
0a304     54 09 21 40 
0a308     03 00 20 52 
0a30c     09 21 57 06 
0a310     00 20 53 09 | 	byte	$54, $09, $21, $40, $03, $00, $20, $52, $09, $21, $57, $06, $00, $20, $53, $09
0a314     21 40 03 22 
0a318     50 02 23 50 
0a31c     0B 00 21 43 
0a320     06 00 21 50 | 	byte	$21, $40, $03, $22, $50, $02, $23, $50, $0b, $00, $21, $43, $06, $00, $21, $50
0a324     06 00 21 43 
0a328     06 00 20 50 
0a32c     09 21 42 05 
0a330     00 20 52 09 | 	byte	$06, $00, $21, $43, $06, $00, $20, $50, $09, $21, $42, $05, $00, $20, $52, $09
0a334     21 50 06 00 
0a338     20 53 09 21 
0a33c     40 03 00 20 
0a340     57 09 21 57 | 	byte	$21, $50, $06, $00, $20, $53, $09, $21, $40, $03, $00, $20, $57, $09, $21, $57
0a344     06 00 20 55 
0a348     09 21 40 03 
0a34c     22 55 01 23 
0a350     55 0A 00 21 | 	byte	$06, $00, $20, $55, $09, $21, $40, $03, $22, $55, $01, $23, $55, $0a, $00, $21
0a354     40 03 00 21 
0a358     50 06 00 20 
0a35c     52 09 21 45 
0a360     06 00 20 55 | 	byte	$40, $03, $00, $21, $50, $06, $00, $20, $52, $09, $21, $45, $06, $00, $20, $55
0a364     09 21 42 05 
0a368     00 21 50 06 
0a36c     00 20 59 09 
0a370     21 42 05 00 | 	byte	$09, $21, $42, $05, $00, $21, $50, $06, $00, $20, $59, $09, $21, $42, $05, $00
0a374     21 42 05 00 
0a378     83 01 20 52 
0a37c     09 21 40 03 
0a380     22 52 02 23 | 	byte	$21, $42, $05, $00, $83, $01, $20, $52, $09, $21, $40, $03, $22, $52, $02, $23
0a384     52 0B 00 21 
0a388     42 06 00 20 
0a38c     42 08 21 52 
0a390     06 00 21 42 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $20, $42, $08, $21, $52, $06, $00, $21, $42
0a394     06 00 20 42 
0a398     08 21 42 05 
0a39c     00 21 52 06 
0a3a0     00 20 44 08 | 	byte	$06, $00, $20, $42, $08, $21, $42, $05, $00, $21, $52, $06, $00, $20, $44, $08
0a3a4     21 42 06 00 
0a3a8     21 52 06 00 
0a3ac     20 45 08 21 
0a3b0     40 03 00 21 | 	byte	$21, $42, $06, $00, $21, $52, $06, $00, $20, $45, $08, $21, $40, $03, $00, $21
0a3b4     42 06 00 20 
0a3b8     44 08 21 40 
0a3bc     03 00 21 42 
0a3c0     06 00 20 45 | 	byte	$42, $06, $00, $20, $44, $08, $21, $40, $03, $00, $21, $42, $06, $00, $20, $45
0a3c4     08 21 42 05 
0a3c8     00 21 55 06 
0a3cc     00 20 47 08 
0a3d0     21 42 06 00 | 	byte	$08, $21, $42, $05, $00, $21, $55, $06, $00, $20, $47, $08, $21, $42, $06, $00
0a3d4     21 55 06 00 
0a3d8     21 40 03 22 
0a3dc     55 01 23 55 
0a3e0     0A 00 21 45 | 	byte	$21, $55, $06, $00, $21, $40, $03, $22, $55, $01, $23, $55, $0a, $00, $21, $45
0a3e4     06 00 20 49 
0a3e8     08 21 55 06 
0a3ec     00 21 45 06 
0a3f0     00 20 49 08 | 	byte	$06, $00, $20, $49, $08, $21, $55, $06, $00, $21, $45, $06, $00, $20, $49, $08
0a3f4     21 42 05 00 
0a3f8     21 55 06 00 
0a3fc     20 47 08 21 
0a400     45 06 00 21 | 	byte	$21, $42, $05, $00, $21, $55, $06, $00, $20, $47, $08, $21, $45, $06, $00, $21
0a404     55 06 00 20 
0a408     49 08 21 40 
0a40c     03 00 21 45 
0a410     06 00 20 45 | 	byte	$55, $06, $00, $20, $49, $08, $21, $40, $03, $00, $21, $45, $06, $00, $20, $45
0a414     08 21 59 06 
0a418     00 21 40 03 
0a41c     00 20 40 08 
0a420     21 42 05 00 | 	byte	$08, $21, $59, $06, $00, $21, $40, $03, $00, $20, $40, $08, $21, $42, $05, $00
0a424     21 59 06 00 
0a428     20 45 08 21 
0a42c     40 03 00 21 
0a430     59 06 00 21 | 	byte	$21, $59, $06, $00, $20, $45, $08, $21, $40, $03, $00, $21, $59, $06, $00, $21
0a434     40 03 22 50 
0a438     01 23 50 0A 
0a43c     00 21 40 06 
0a440     00 20 47 08 | 	byte	$40, $03, $22, $50, $01, $23, $50, $0a, $00, $21, $40, $06, $00, $20, $47, $08
0a444     21 54 06 00 
0a448     21 40 06 00 
0a44c     20 47 08 21 
0a450     42 05 00 21 | 	byte	$21, $54, $06, $00, $21, $40, $06, $00, $20, $47, $08, $21, $42, $05, $00, $21
0a454     54 06 00 20 
0a458     47 08 21 40 
0a45c     06 00 21 54 
0a460     06 00 20 47 | 	byte	$54, $06, $00, $20, $47, $08, $21, $40, $06, $00, $21, $54, $06, $00, $20, $47
0a464     08 21 40 03 
0a468     00 21 40 06 
0a46c     00 20 47 08 
0a470     21 40 03 00 | 	byte	$08, $21, $40, $03, $00, $21, $40, $06, $00, $20, $47, $08, $21, $40, $03, $00
0a474     20 45 08 21 
0a478     40 06 00 20 
0a47c     44 08 21 42 
0a480     05 00 21 57 | 	byte	$20, $45, $08, $21, $40, $06, $00, $20, $44, $08, $21, $42, $05, $00, $21, $57
0a484     06 00 20 42 
0a488     08 21 40 03 
0a48c     00 21 57 06 
0a490     00 21 40 03 | 	byte	$06, $00, $20, $42, $08, $21, $40, $03, $00, $21, $57, $06, $00, $21, $40, $03
0a494     22 50 02 23 
0a498     50 0B 00 21 
0a49c     43 06 00 20 
0a4a0     43 08 21 50 | 	byte	$22, $50, $02, $23, $50, $0b, $00, $21, $43, $06, $00, $20, $43, $08, $21, $50
0a4a4     06 00 21 43 
0a4a8     06 00 20 43 
0a4ac     08 21 42 05 
0a4b0     00 21 50 06 | 	byte	$06, $00, $21, $43, $06, $00, $20, $43, $08, $21, $42, $05, $00, $21, $50, $06
0a4b4     00 20 40 08 
0a4b8     21 40 03 00 
0a4bc     21 57 06 00 
0a4c0     20 45 08 21 | 	byte	$00, $20, $40, $08, $21, $40, $03, $00, $21, $57, $06, $00, $20, $45, $08, $21
0a4c4     40 03 22 55 
0a4c8     01 23 55 0A 
0a4cc     00 21 40 03 
0a4d0     00 20 45 08 | 	byte	$40, $03, $22, $55, $01, $23, $55, $0a, $00, $21, $40, $03, $00, $20, $45, $08
0a4d4     21 50 06 00 
0a4d8     20 42 08 21 
0a4dc     45 06 00 20 
0a4e0     45 08 21 42 | 	byte	$21, $50, $06, $00, $20, $42, $08, $21, $45, $06, $00, $20, $45, $08, $21, $42
0a4e4     05 00 20 42 
0a4e8     08 21 50 06 
0a4ec     00 20 45 08 
0a4f0     21 42 05 00 | 	byte	$05, $00, $20, $42, $08, $21, $50, $06, $00, $20, $45, $08, $21, $42, $05, $00
0a4f4     20 49 08 21 
0a4f8     42 05 00 80 
0a4fc     80 80 80 80 
0a500     80 80 80 80 | 	byte	$20, $49, $08, $21, $42, $05, $00, $80, $80, $80, $80, $80, $80, $80, $80, $80
0a504     80 80 80 80 
0a508     F5 01 20 52 
0a50c     0C 21 40 03 
0a510     22 52 02 23 | 	byte	$80, $80, $80, $80, $f5, $01, $20, $52, $0c, $21, $40, $03, $22, $52, $02, $23
0a514     52 0B 00 21 
0a518     42 06 00 21 
0a51c     52 06 00 60 
0a520     52 0C 15 21 | 	byte	$52, $0b, $00, $21, $42, $06, $00, $21, $52, $06, $00, $60, $52, $0c, $15, $21
0a524     42 06 00 20 
0a528     55 0C 21 42 
0a52c     05 00 21 52 
0a530     06 00 20 54 | 	byte	$42, $06, $00, $20, $55, $0c, $21, $42, $05, $00, $21, $52, $06, $00, $20, $54
0a534     0C 21 42 06 
0a538     00 60 55 0C 
0a53c     15 21 52 06 
0a540     00 20 52 0C | 	byte	$0c, $21, $42, $06, $00, $60, $55, $0c, $15, $21, $52, $06, $00, $20, $52, $0c
0a544     21 40 03 00 
0a548     60 54 0C 15 
0a54c     21 42 06 00 
0a550     60 55 0C 07 | 	byte	$21, $40, $03, $00, $60, $54, $0c, $15, $21, $42, $06, $00, $60, $55, $0c, $07
0a554     21 40 03 00 
0a558     60 52 0C 15 
0a55c     21 42 06 00 
0a560     20 50 0C 21 | 	byte	$21, $40, $03, $00, $60, $52, $0c, $15, $21, $42, $06, $00, $20, $50, $0c, $21
0a564     42 05 00 60 
0a568     55 0C 04 21 
0a56c     55 06 00 60 
0a570     52 0C 07 21 | 	byte	$42, $05, $00, $60, $55, $0c, $04, $21, $55, $06, $00, $60, $52, $0c, $07, $21
0a574     42 06 00 60 
0a578     50 0C 15 21 
0a57c     55 06 00 20 
0a580     49 0C 21 40 | 	byte	$42, $06, $00, $60, $50, $0c, $15, $21, $55, $06, $00, $20, $49, $0c, $21, $40
0a584     03 22 55 01 
0a588     23 55 0A 00 
0a58c     60 52 0C 04 
0a590     21 45 06 00 | 	byte	$03, $22, $55, $01, $23, $55, $0a, $00, $60, $52, $0c, $04, $21, $45, $06, $00
0a594     60 50 0C 07 
0a598     21 55 06 00 
0a59c     60 49 0C 15 
0a5a0     21 45 06 00 | 	byte	$60, $50, $0c, $07, $21, $55, $06, $00, $60, $49, $0c, $15, $21, $45, $06, $00
0a5a4     20 45 0C 21 
0a5a8     42 05 00 60 
0a5ac     50 0C 04 21 
0a5b0     55 06 00 20 | 	byte	$20, $45, $0c, $21, $42, $05, $00, $60, $50, $0c, $04, $21, $55, $06, $00, $20
0a5b4     49 0C 21 45 
0a5b8     06 00 60 45 
0a5bc     0C 15 21 55 
0a5c0     06 00 20 50 | 	byte	$49, $0c, $21, $45, $06, $00, $60, $45, $0c, $15, $21, $55, $06, $00, $20, $50
0a5c4     0C 21 40 03 
0a5c8     00 60 49 0C 
0a5cc     15 21 45 06 
0a5d0     00 20 40 0C | 	byte	$0c, $21, $40, $03, $00, $60, $49, $0c, $15, $21, $45, $06, $00, $20, $40, $0c
0a5d4     21 59 06 00 
0a5d8     20 45 0C 21 
0a5dc     40 03 00 20 
0a5e0     49 0C 21 42 | 	byte	$21, $59, $06, $00, $20, $45, $0c, $21, $40, $03, $00, $20, $49, $0c, $21, $42
0a5e4     05 00 60 40 
0a5e8     0C 15 21 59 
0a5ec     06 00 20 40 
0a5f0     0C 21 40 03 | 	byte	$05, $00, $60, $40, $0c, $15, $21, $59, $06, $00, $20, $40, $0c, $21, $40, $03
0a5f4     00 20 45 0C 
0a5f8     21 59 06 00 
0a5fc     20 47 0C 21 
0a600     40 03 22 50 | 	byte	$00, $20, $45, $0c, $21, $59, $06, $00, $20, $47, $0c, $21, $40, $03, $22, $50
0a604     01 23 50 0A 
0a608     00 60 40 0C 
0a60c     15 21 40 06 
0a610     00 60 45 0C | 	byte	$01, $23, $50, $0a, $00, $60, $40, $0c, $15, $21, $40, $06, $00, $60, $45, $0c
0a614     15 21 54 06 
0a618     00 60 47 0C 
0a61c     15 21 40 06 
0a620     00 20 47 0C | 	byte	$15, $21, $54, $06, $00, $60, $47, $0c, $15, $21, $40, $06, $00, $20, $47, $0c
0a624     21 42 05 00 
0a628     60 45 0C 05 
0a62c     21 54 06 00 
0a630     20 47 0C 21 | 	byte	$21, $42, $05, $00, $60, $45, $0c, $05, $21, $54, $06, $00, $20, $47, $0c, $21
0a634     40 06 00 20 
0a638     45 0C 21 54 
0a63c     06 00 20 44 
0a640     0C 21 40 03 | 	byte	$40, $06, $00, $20, $45, $0c, $21, $54, $06, $00, $20, $44, $0c, $21, $40, $03
0a644     00 60 47 0C 
0a648     15 21 40 06 
0a64c     00 60 45 0C 
0a650     15 21 40 03 | 	byte	$00, $60, $47, $0c, $15, $21, $40, $06, $00, $60, $45, $0c, $15, $21, $40, $03
0a654     00 60 44 0C 
0a658     15 21 40 06 
0a65c     00 20 44 0C 
0a660     21 42 05 00 | 	byte	$00, $60, $44, $0c, $15, $21, $40, $06, $00, $20, $44, $0c, $21, $42, $05, $00
0a664     20 45 0C 21 
0a668     57 06 00 20 
0a66c     44 0C 21 40 
0a670     03 00 20 42 | 	byte	$20, $45, $0c, $21, $57, $06, $00, $20, $44, $0c, $21, $40, $03, $00, $20, $42
0a674     0C 21 57 06 
0a678     00 20 43 0C 
0a67c     21 40 03 22 
0a680     50 02 23 50 | 	byte	$0c, $21, $57, $06, $00, $20, $43, $0c, $21, $40, $03, $22, $50, $02, $23, $50
0a684     0B 00 60 44 
0a688     0C 15 21 43 
0a68c     06 00 60 42 
0a690     0C 15 21 50 | 	byte	$0b, $00, $60, $44, $0c, $15, $21, $43, $06, $00, $60, $42, $0c, $15, $21, $50
0a694     06 00 60 43 
0a698     0C 15 21 43 
0a69c     06 00 20 43 
0a6a0     0C 21 42 05 | 	byte	$06, $00, $60, $43, $0c, $15, $21, $43, $06, $00, $20, $43, $0c, $21, $42, $05
0a6a4     00 60 42 0C 
0a6a8     07 21 50 06 
0a6ac     00 60 43 0C 
0a6b0     07 21 40 03 | 	byte	$00, $60, $42, $0c, $07, $21, $50, $06, $00, $60, $43, $0c, $07, $21, $40, $03
0a6b4     00 60 43 0C 
0a6b8     15 21 57 06 
0a6bc     00 20 45 0C 
0a6c0     21 40 03 22 | 	byte	$00, $60, $43, $0c, $15, $21, $57, $06, $00, $20, $45, $0c, $21, $40, $03, $22
0a6c4     55 01 23 55 
0a6c8     0A 00 60 43 
0a6cc     0C 04 21 40 
0a6d0     03 00 20 45 | 	byte	$55, $01, $23, $55, $0a, $00, $60, $43, $0c, $04, $21, $40, $03, $00, $20, $45
0a6d4     0C 21 50 06 
0a6d8     00 20 42 0C 
0a6dc     21 45 06 00 
0a6e0     20 45 0C 21 | 	byte	$0c, $21, $50, $06, $00, $20, $42, $0c, $21, $45, $06, $00, $20, $45, $0c, $21
0a6e4     42 05 00 60 
0a6e8     45 0C 15 21 
0a6ec     50 06 00 20 
0a6f0     45 0C 21 42 | 	byte	$42, $05, $00, $60, $45, $0c, $15, $21, $50, $06, $00, $20, $45, $0c, $21, $42
0a6f4     05 00 20 49 
0a6f8     0C 21 42 05 
0a6fc     00 80 80 80 
0a700     80 80 80 80 | 	byte	$05, $00, $20, $49, $0c, $21, $42, $05, $00, $80, $80, $80, $80, $80, $80, $80
0a704     80 80 80 80 
0a708     E0 01 20 42 
0a70c     08 21 40 03 
0a710     22 52 02 23 | 	byte	$80, $80, $80, $80, $e0, $01, $20, $42, $08, $21, $40, $03, $22, $52, $02, $23
0a714     52 0B 00 20 
0a718     49 08 21 42 
0a71c     06 00 20 47 
0a720     08 21 52 06 | 	byte	$52, $0b, $00, $20, $49, $08, $21, $42, $06, $00, $20, $47, $08, $21, $52, $06
0a724     00 20 49 08 
0a728     21 42 06 00 
0a72c     20 45 08 21 
0a730     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $42, $06, $00, $20, $45, $08, $21, $42, $05, $00, $20
0a734     49 08 21 52 
0a738     06 00 20 44 
0a73c     08 21 42 06 
0a740     00 20 49 08 | 	byte	$49, $08, $21, $52, $06, $00, $20, $44, $08, $21, $42, $06, $00, $20, $49, $08
0a744     21 52 06 00 
0a748     20 42 08 21 
0a74c     40 03 00 20 
0a750     49 08 21 42 | 	byte	$21, $52, $06, $00, $20, $42, $08, $21, $40, $03, $00, $20, $49, $08, $21, $42
0a754     06 00 20 47 
0a758     08 21 40 03 
0a75c     00 20 49 08 
0a760     21 42 06 00 | 	byte	$06, $00, $20, $47, $08, $21, $40, $03, $00, $20, $49, $08, $21, $42, $06, $00
0a764     20 45 08 21 
0a768     42 05 00 20 
0a76c     49 08 21 55 
0a770     06 00 20 44 | 	byte	$20, $45, $08, $21, $42, $05, $00, $20, $49, $08, $21, $55, $06, $00, $20, $44
0a774     08 21 42 06 
0a778     00 20 49 08 
0a77c     21 55 06 00 
0a780     20 45 08 21 | 	byte	$08, $21, $42, $06, $00, $20, $49, $08, $21, $55, $06, $00, $20, $45, $08, $21
0a784     40 03 22 55 
0a788     01 23 55 0A 
0a78c     00 20 50 08 
0a790     21 45 06 00 | 	byte	$40, $03, $22, $55, $01, $23, $55, $0a, $00, $20, $50, $08, $21, $45, $06, $00
0a794     20 4A 08 21 
0a798     55 06 00 20 
0a79c     50 08 21 45 
0a7a0     06 00 20 49 | 	byte	$20, $4a, $08, $21, $55, $06, $00, $20, $50, $08, $21, $45, $06, $00, $20, $49
0a7a4     08 21 42 05 
0a7a8     00 20 50 08 
0a7ac     21 55 06 00 
0a7b0     20 47 08 21 | 	byte	$08, $21, $42, $05, $00, $20, $50, $08, $21, $55, $06, $00, $20, $47, $08, $21
0a7b4     45 06 00 20 
0a7b8     50 08 21 55 
0a7bc     06 00 20 45 
0a7c0     08 21 40 03 | 	byte	$45, $06, $00, $20, $50, $08, $21, $55, $06, $00, $20, $45, $08, $21, $40, $03
0a7c4     00 20 50 08 
0a7c8     21 45 06 00 
0a7cc     20 4A 08 21 
0a7d0     59 06 00 20 | 	byte	$00, $20, $50, $08, $21, $45, $06, $00, $20, $4a, $08, $21, $59, $06, $00, $20
0a7d4     50 08 21 40 
0a7d8     03 00 20 49 
0a7dc     08 21 42 05 
0a7e0     00 20 50 08 | 	byte	$50, $08, $21, $40, $03, $00, $20, $49, $08, $21, $42, $05, $00, $20, $50, $08
0a7e4     21 59 06 00 
0a7e8     20 47 08 21 
0a7ec     40 03 00 20 
0a7f0     50 08 21 59 | 	byte	$21, $59, $06, $00, $20, $47, $08, $21, $40, $03, $00, $20, $50, $08, $21, $59
0a7f4     06 00 20 40 
0a7f8     08 21 40 03 
0a7fc     22 50 01 23 
0a800     50 0A 00 20 | 	byte	$06, $00, $20, $40, $08, $21, $40, $03, $22, $50, $01, $23, $50, $0a, $00, $20
0a804     47 08 21 40 
0a808     06 00 20 45 
0a80c     08 21 54 06 
0a810     00 20 47 08 | 	byte	$47, $08, $21, $40, $06, $00, $20, $45, $08, $21, $54, $06, $00, $20, $47, $08
0a814     21 40 06 00 
0a818     20 44 08 21 
0a81c     42 05 00 20 
0a820     47 08 21 54 | 	byte	$21, $40, $06, $00, $20, $44, $08, $21, $42, $05, $00, $20, $47, $08, $21, $54
0a824     06 00 20 42 
0a828     08 21 40 06 
0a82c     00 20 47 08 
0a830     21 54 06 00 | 	byte	$06, $00, $20, $42, $08, $21, $40, $06, $00, $20, $47, $08, $21, $54, $06, $00
0a834     20 40 08 21 
0a838     40 03 00 20 
0a83c     47 08 21 40 
0a840     06 00 20 45 | 	byte	$20, $40, $08, $21, $40, $03, $00, $20, $47, $08, $21, $40, $06, $00, $20, $45
0a844     08 21 40 03 
0a848     00 20 47 08 
0a84c     21 40 06 00 
0a850     20 44 08 21 | 	byte	$08, $21, $40, $03, $00, $20, $47, $08, $21, $40, $06, $00, $20, $44, $08, $21
0a854     42 05 00 20 
0a858     47 08 21 57 
0a85c     06 00 20 42 
0a860     08 21 40 03 | 	byte	$42, $05, $00, $20, $47, $08, $21, $57, $06, $00, $20, $42, $08, $21, $40, $03
0a864     00 20 47 08 
0a868     21 57 06 00 
0a86c     20 40 08 21 
0a870     40 03 22 50 | 	byte	$00, $20, $47, $08, $21, $57, $06, $00, $20, $40, $08, $21, $40, $03, $22, $50
0a874     02 23 50 0B 
0a878     00 20 47 08 
0a87c     21 43 06 00 
0a880     20 45 08 21 | 	byte	$02, $23, $50, $0b, $00, $20, $47, $08, $21, $43, $06, $00, $20, $45, $08, $21
0a884     50 06 00 20 
0a888     47 08 21 43 
0a88c     06 00 20 43 
0a890     08 21 42 05 | 	byte	$50, $06, $00, $20, $47, $08, $21, $43, $06, $00, $20, $43, $08, $21, $42, $05
0a894     00 20 47 08 
0a898     21 50 06 00 
0a89c     20 40 08 21 
0a8a0     40 03 00 20 | 	byte	$00, $20, $47, $08, $21, $50, $06, $00, $20, $40, $08, $21, $40, $03, $00, $20
0a8a4     47 08 21 57 
0a8a8     06 00 20 40 
0a8ac     08 21 40 03 
0a8b0     22 55 01 23 | 	byte	$47, $08, $21, $57, $06, $00, $20, $40, $08, $21, $40, $03, $22, $55, $01, $23
0a8b4     55 0A 00 20 
0a8b8     49 08 21 40 
0a8bc     03 00 20 47 
0a8c0     08 21 50 06 | 	byte	$55, $0a, $00, $20, $49, $08, $21, $40, $03, $00, $20, $47, $08, $21, $50, $06
0a8c4     00 20 49 08 
0a8c8     21 45 06 00 
0a8cc     20 45 08 21 
0a8d0     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $45, $06, $00, $20, $45, $08, $21, $42, $05, $00, $20
0a8d4     49 08 21 50 
0a8d8     06 00 20 44 
0a8dc     08 21 42 05 
0a8e0     00 20 49 08 | 	byte	$49, $08, $21, $50, $06, $00, $20, $44, $08, $21, $42, $05, $00, $20, $49, $08
0a8e4     21 42 05 00 
0a8e8     E0 01 20 42 
0a8ec     08 21 40 03 
0a8f0     22 52 02 23 | 	byte	$21, $42, $05, $00, $e0, $01, $20, $42, $08, $21, $40, $03, $22, $52, $02, $23
0a8f4     52 0B 00 20 
0a8f8     49 08 21 42 
0a8fc     06 00 20 47 
0a900     08 21 52 06 | 	byte	$52, $0b, $00, $20, $49, $08, $21, $42, $06, $00, $20, $47, $08, $21, $52, $06
0a904     00 20 49 08 
0a908     21 42 06 00 
0a90c     20 45 08 21 
0a910     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $42, $06, $00, $20, $45, $08, $21, $42, $05, $00, $20
0a914     49 08 21 52 
0a918     06 00 20 52 
0a91c     08 21 42 06 
0a920     00 20 54 08 | 	byte	$49, $08, $21, $52, $06, $00, $20, $52, $08, $21, $42, $06, $00, $20, $54, $08
0a924     21 52 06 00 
0a928     20 55 08 21 
0a92c     40 03 00 20 
0a930     52 08 21 42 | 	byte	$21, $52, $06, $00, $20, $55, $08, $21, $40, $03, $00, $20, $52, $08, $21, $42
0a934     06 00 20 49 
0a938     08 21 40 03 
0a93c     00 20 47 08 
0a940     21 42 06 00 | 	byte	$06, $00, $20, $49, $08, $21, $40, $03, $00, $20, $47, $08, $21, $42, $06, $00
0a944     20 45 08 21 
0a948     42 05 00 20 
0a94c     42 08 21 55 
0a950     06 00 20 45 | 	byte	$20, $45, $08, $21, $42, $05, $00, $20, $42, $08, $21, $55, $06, $00, $20, $45
0a954     08 21 42 06 
0a958     00 20 47 08 
0a95c     21 55 06 00 
0a960     20 45 08 21 | 	byte	$08, $21, $42, $06, $00, $20, $47, $08, $21, $55, $06, $00, $20, $45, $08, $21
0a964     40 03 22 55 
0a968     01 23 55 0A 
0a96c     00 20 50 08 
0a970     21 45 06 00 | 	byte	$40, $03, $22, $55, $01, $23, $55, $0a, $00, $20, $50, $08, $21, $45, $06, $00
0a974     20 4A 08 21 
0a978     55 06 00 20 
0a97c     50 08 21 45 
0a980     06 00 20 49 | 	byte	$20, $4a, $08, $21, $55, $06, $00, $20, $50, $08, $21, $45, $06, $00, $20, $49
0a984     08 21 42 05 
0a988     00 20 50 08 
0a98c     21 55 06 00 
0a990     20 55 08 21 | 	byte	$08, $21, $42, $05, $00, $20, $50, $08, $21, $55, $06, $00, $20, $55, $08, $21
0a994     45 06 00 20 
0a998     57 08 21 55 
0a99c     06 00 20 59 
0a9a0     08 21 40 03 | 	byte	$45, $06, $00, $20, $57, $08, $21, $55, $06, $00, $20, $59, $08, $21, $40, $03
0a9a4     00 20 55 08 
0a9a8     21 45 06 00 
0a9ac     20 50 08 21 
0a9b0     59 06 00 20 | 	byte	$00, $20, $55, $08, $21, $45, $06, $00, $20, $50, $08, $21, $59, $06, $00, $20
0a9b4     49 08 21 40 
0a9b8     03 00 20 45 
0a9bc     08 21 42 05 
0a9c0     00 20 40 08 | 	byte	$49, $08, $21, $40, $03, $00, $20, $45, $08, $21, $42, $05, $00, $20, $40, $08
0a9c4     21 59 06 00 
0a9c8     20 45 08 21 
0a9cc     40 03 00 20 
0a9d0     49 08 21 59 | 	byte	$21, $59, $06, $00, $20, $45, $08, $21, $40, $03, $00, $20, $49, $08, $21, $59
0a9d4     06 00 20 40 
0a9d8     08 21 40 03 
0a9dc     22 50 01 23 
0a9e0     50 0A 00 20 | 	byte	$06, $00, $20, $40, $08, $21, $40, $03, $22, $50, $01, $23, $50, $0a, $00, $20
0a9e4     37 08 21 40 
0a9e8     06 00 20 40 
0a9ec     08 21 54 06 
0a9f0     00 20 42 08 | 	byte	$37, $08, $21, $40, $06, $00, $20, $40, $08, $21, $54, $06, $00, $20, $42, $08
0a9f4     21 40 06 00 
0a9f8     20 44 08 21 
0a9fc     42 05 00 20 
0aa00     40 08 21 54 | 	byte	$21, $40, $06, $00, $20, $44, $08, $21, $42, $05, $00, $20, $40, $08, $21, $54
0aa04     06 00 20 44 
0aa08     08 21 40 06 
0aa0c     00 20 45 08 
0aa10     21 54 06 00 | 	byte	$06, $00, $20, $44, $08, $21, $40, $06, $00, $20, $45, $08, $21, $54, $06, $00
0aa14     20 47 08 21 
0aa18     40 03 00 20 
0aa1c     44 08 21 40 
0aa20     06 00 20 42 | 	byte	$20, $47, $08, $21, $40, $03, $00, $20, $44, $08, $21, $40, $06, $00, $20, $42
0aa24     08 21 40 03 
0aa28     00 20 44 08 
0aa2c     21 40 06 00 
0aa30     20 40 08 21 | 	byte	$08, $21, $40, $03, $00, $20, $44, $08, $21, $40, $06, $00, $20, $40, $08, $21
0aa34     42 05 00 20 
0aa38     37 08 21 57 
0aa3c     06 00 20 40 
0aa40     08 21 40 03 | 	byte	$42, $05, $00, $20, $37, $08, $21, $57, $06, $00, $20, $40, $08, $21, $40, $03
0aa44     00 20 44 08 
0aa48     21 57 06 00 
0aa4c     20 43 08 21 
0aa50     40 03 22 50 | 	byte	$00, $20, $44, $08, $21, $57, $06, $00, $20, $43, $08, $21, $40, $03, $22, $50
0aa54     02 23 50 0B 
0aa58     00 20 40 08 
0aa5c     21 43 06 00 
0aa60     20 43 08 21 | 	byte	$02, $23, $50, $0b, $00, $20, $40, $08, $21, $43, $06, $00, $20, $43, $08, $21
0aa64     50 06 00 20 
0aa68     47 08 21 43 
0aa6c     06 00 20 50 
0aa70     08 21 42 05 | 	byte	$50, $06, $00, $20, $47, $08, $21, $43, $06, $00, $20, $50, $08, $21, $42, $05
0aa74     00 20 47 08 
0aa78     21 50 06 00 
0aa7c     20 43 08 21 
0aa80     40 03 00 20 | 	byte	$00, $20, $47, $08, $21, $50, $06, $00, $20, $43, $08, $21, $40, $03, $00, $20
0aa84     40 08 21 57 
0aa88     06 00 20 45 
0aa8c     08 21 40 03 
0aa90     22 55 01 23 | 	byte	$40, $08, $21, $57, $06, $00, $20, $45, $08, $21, $40, $03, $22, $55, $01, $23
0aa94     55 0A 00 20 
0aa98     40 08 21 40 
0aa9c     03 00 20 45 
0aaa0     08 21 50 06 | 	byte	$55, $0a, $00, $20, $40, $08, $21, $40, $03, $00, $20, $45, $08, $21, $50, $06
0aaa4     00 20 49 08 
0aaa8     21 45 06 00 
0aaac     20 50 08 21 
0aab0     42 05 00 20 | 	byte	$00, $20, $49, $08, $21, $45, $06, $00, $20, $50, $08, $21, $42, $05, $00, $20
0aab4     49 08 21 50 
0aab8     06 00 20 45 
0aabc     08 21 42 05 
0aac0     00 20 40 08 | 	byte	$49, $08, $21, $50, $06, $00, $20, $45, $08, $21, $42, $05, $00, $20, $40, $08
0aac4     21 42 05 00 
0aac8     AD 01 20 40 
0aacc     03 21 42 03 
0aad0     42 26 00 42 | 	byte	$21, $42, $05, $00, $ad, $01, $20, $40, $03, $21, $42, $03, $42, $26, $00, $42
0aad4     25 00 20 52 
0aad8     04 42 24 00 
0aadc     21 42 03 42 
0aae0     23 00 20 40 | 	byte	$25, $00, $20, $52, $04, $42, $24, $00, $21, $42, $03, $42, $23, $00, $20, $40
0aae4     05 21 42 05 
0aae8     42 22 00 42 
0aaec     21 00 21 42 
0aaf0     03 42 20 00 | 	byte	$05, $21, $42, $05, $42, $22, $00, $42, $21, $00, $21, $42, $03, $42, $20, $00
0aaf4     42 1F 00 20 
0aaf8     40 03 21 42 
0aafc     03 42 1E 43 
0ab00     26 00 42 1D | 	byte	$42, $1f, $00, $20, $40, $03, $21, $42, $03, $42, $1e, $43, $26, $00, $42, $1d
0ab04     43 25 00 20 
0ab08     40 03 42 1C 
0ab0c     43 24 00 21 
0ab10     42 03 42 1B | 	byte	$43, $25, $00, $20, $40, $03, $42, $1c, $43, $24, $00, $21, $42, $03, $42, $1b
0ab14     43 23 00 20 
0ab18     40 05 21 42 
0ab1c     05 42 1A 43 
0ab20     22 00 42 19 | 	byte	$43, $23, $00, $20, $40, $05, $21, $42, $05, $42, $1a, $43, $22, $00, $42, $19
0ab24     43 21 00 21 
0ab28     42 03 42 18 
0ab2c     43 20 00 42 
0ab30     17 43 1F 00 | 	byte	$43, $21, $00, $21, $42, $03, $42, $18, $43, $20, $00, $42, $17, $43, $1f, $00
0ab34     20 40 03 21 
0ab38     42 03 42 16 
0ab3c     43 1E 00 42 
0ab40     15 43 1D 00 | 	byte	$20, $40, $03, $21, $42, $03, $42, $16, $43, $1e, $00, $42, $15, $43, $1d, $00
0ab44     20 52 04 42 
0ab48     14 43 1C 00 
0ab4c     21 42 03 42 
0ab50     13 43 1B 00 | 	byte	$20, $52, $04, $42, $14, $43, $1c, $00, $21, $42, $03, $42, $13, $43, $1b, $00
0ab54     20 40 05 21 
0ab58     42 05 42 12 
0ab5c     43 1A 00 42 
0ab60     11 43 19 00 | 	byte	$20, $40, $05, $21, $42, $05, $42, $12, $43, $1a, $00, $42, $11, $43, $19, $00
0ab64     21 42 03 42 
0ab68     10 43 18 00 
0ab6c     21 42 03 42 
0ab70     0F 43 17 00 | 	byte	$21, $42, $03, $42, $10, $43, $18, $00, $21, $42, $03, $42, $0f, $43, $17, $00
0ab74     20 40 03 42 
0ab78     0E 43 16 00 
0ab7c     20 40 03 21 
0ab80     42 03 42 0D | 	byte	$20, $40, $03, $42, $0e, $43, $16, $00, $20, $40, $03, $21, $42, $03, $42, $0d
0ab84     43 15 00 20 
0ab88     40 03 42 0C 
0ab8c     43 14 00 21 
0ab90     42 03 42 0B | 	byte	$43, $15, $00, $20, $40, $03, $42, $0c, $43, $14, $00, $21, $42, $03, $42, $0b
0ab94     43 13 00 20 
0ab98     40 05 21 42 
0ab9c     05 42 0A 43 
0aba0     12 00 21 42 | 	byte	$43, $13, $00, $20, $40, $05, $21, $42, $05, $42, $0a, $43, $12, $00, $21, $42
0aba4     03 42 09 43 
0aba8     11 00 20 40 
0abac     03 42 08 43 
0abb0     10 00 21 42 | 	byte	$03, $42, $09, $43, $11, $00, $20, $40, $03, $42, $08, $43, $10, $00, $21, $42
0abb4     03 42 07 43 
0abb8     0F 00 20 40 
0abbc     03 21 42 03 
0abc0     42 06 43 0E | 	byte	$03, $42, $07, $43, $0f, $00, $20, $40, $03, $21, $42, $03, $42, $06, $43, $0e
0abc4     00 42 05 43 
0abc8     0D 00 20 52 
0abcc     04 42 04 43 
0abd0     0C 00 21 42 | 	byte	$00, $42, $05, $43, $0d, $00, $20, $52, $04, $42, $04, $43, $0c, $00, $21, $42
0abd4     03 42 03 43 
0abd8     0B 00 20 40 
0abdc     05 21 42 05 
0abe0     42 02 43 0A | 	byte	$03, $42, $03, $43, $0b, $00, $20, $40, $05, $21, $42, $05, $42, $02, $43, $0a
0abe4     00 42 01 43 
0abe8     09 00 21 42 
0abec     03 42 00 43 
0abf0     08 00 43 07 | 	byte	$00, $42, $01, $43, $09, $00, $21, $42, $03, $42, $00, $43, $08, $00, $43, $07
0abf4     00 20 40 03 
0abf8     21 42 03 43 
0abfc     06 00 43 05 
0ac00     00 20 40 03 | 	byte	$00, $20, $40, $03, $21, $42, $03, $43, $06, $00, $43, $05, $00, $20, $40, $03
0ac04     43 04 00 21 
0ac08     42 03 43 03 
0ac0c     00 20 40 05 
0ac10     21 42 05 43 | 	byte	$43, $04, $00, $21, $42, $03, $43, $03, $00, $20, $40, $05, $21, $42, $05, $43
0ac14     02 00 43 01 
0ac18     00 21 42 03 
0ac1c     43 00 00 00 
0ac20     20 40 03 21 | 	byte	$02, $00, $43, $01, $00, $21, $42, $03, $43, $00, $00, $00, $20, $40, $03, $21
0ac24     42 03 00 00 
0ac28     20 52 04 00 
0ac2c     21 42 03 00 
0ac30     20 40 05 21 | 	byte	$42, $03, $00, $00, $20, $52, $04, $00, $21, $42, $03, $00, $20, $40, $05, $21
0ac34     42 05 00 00 
0ac38     21 42 03 00 
0ac3c     20 40 03 00 
0ac40     20 40 05 21 | 	byte	$42, $05, $00, $00, $21, $42, $03, $00, $20, $40, $03, $00, $20, $40, $05, $21
0ac44     42 03 00 20 
0ac48     40 05 21 42 
0ac4c     03 00 21 42 
0ac50     05 00 20 40 | 	byte	$42, $03, $00, $20, $40, $05, $21, $42, $03, $00, $21, $42, $05, $00, $20, $40
0ac54     05 21 42 03 
0ac58     00 20 40 03 
0ac5c     21 42 05 00 
0ac60     20 40 03 21 | 	byte	$05, $21, $42, $03, $00, $20, $40, $03, $21, $42, $05, $00, $20, $40, $03, $21
0ac64     42 03 00 20 
0ac68     40 05 21 42 
0ac6c     05 00 20 40 
0ac70     05 21 42 05 | 	byte	$42, $03, $00, $20, $40, $05, $21, $42, $05, $00, $20, $40, $05, $21, $42, $05
0ac74     00 80 80 80 
0ac78     47 02 20 52 
0ac7c     09 21 40 03 
0ac80     62 52 0B 03 | 	byte	$00, $80, $80, $80, $47, $02, $20, $52, $09, $21, $40, $03, $62, $52, $0b, $03
0ac84     00 42 06 00 
0ac88     42 09 00 60 
0ac8c     52 09 15 42 
0ac90     0C 00 20 55 | 	byte	$00, $42, $06, $00, $42, $09, $00, $60, $52, $09, $15, $42, $0c, $00, $20, $55
0ac94     09 21 40 03 
0ac98     42 0F 00 42 
0ac9c     13 00 20 54 
0aca0     09 42 16 00 | 	byte	$09, $21, $40, $03, $42, $0f, $00, $42, $13, $00, $20, $54, $09, $42, $16, $00
0aca4     60 55 09 15 
0aca8     42 19 00 20 
0acac     52 09 21 40 
0acb0     03 42 1C 00 | 	byte	$60, $55, $09, $15, $42, $19, $00, $20, $52, $09, $21, $40, $03, $42, $1c, $00
0acb4     60 54 09 15 
0acb8     21 40 03 42 
0acbc     1F 00 60 55 
0acc0     09 07 21 40 | 	byte	$60, $54, $09, $15, $21, $40, $03, $42, $1f, $00, $60, $55, $09, $07, $21, $40
0acc4     03 42 23 00 
0acc8     60 52 09 15 
0accc     42 26 00 20 
0acd0     50 09 21 40 | 	byte	$03, $42, $23, $00, $60, $52, $09, $15, $42, $26, $00, $20, $50, $09, $21, $40
0acd4     03 42 29 00 
0acd8     60 55 09 04 
0acdc     42 2C 00 60 
0ace0     52 09 07 42 | 	byte	$03, $42, $29, $00, $60, $55, $09, $04, $42, $2c, $00, $60, $52, $09, $07, $42
0ace4     2F 00 60 50 
0ace8     09 15 42 2C 
0acec     00 20 49 09 
0acf0     21 40 03 42 | 	byte	$2f, $00, $60, $50, $09, $15, $42, $2c, $00, $20, $49, $09, $21, $40, $03, $42
0acf4     29 63 55 0A 
0acf8     03 00 60 52 
0acfc     09 04 42 26 
0ad00     43 06 00 60 | 	byte	$29, $63, $55, $0a, $03, $00, $60, $52, $09, $04, $42, $26, $43, $06, $00, $60
0ad04     50 09 07 42 
0ad08     23 43 09 00 
0ad0c     60 49 09 15 
0ad10     42 1F 43 0C | 	byte	$50, $09, $07, $42, $23, $43, $09, $00, $60, $49, $09, $15, $42, $1f, $43, $0c
0ad14     00 20 45 09 
0ad18     21 40 03 42 
0ad1c     1C 43 0F 00 
0ad20     60 50 09 04 | 	byte	$00, $20, $45, $09, $21, $40, $03, $42, $1c, $43, $0f, $00, $60, $50, $09, $04
0ad24     42 19 43 13 
0ad28     00 20 49 09 
0ad2c     42 16 43 16 
0ad30     00 60 45 09 | 	byte	$42, $19, $43, $13, $00, $20, $49, $09, $42, $16, $43, $16, $00, $60, $45, $09
0ad34     15 42 13 43 
0ad38     19 00 20 50 
0ad3c     09 21 40 03 
0ad40     42 0F 43 1C | 	byte	$15, $42, $13, $43, $19, $00, $20, $50, $09, $21, $40, $03, $42, $0f, $43, $1c
0ad44     00 60 49 09 
0ad48     15 21 40 03 
0ad4c     42 0C 43 1F 
0ad50     00 20 40 09 | 	byte	$00, $60, $49, $09, $15, $21, $40, $03, $42, $0c, $43, $1f, $00, $20, $40, $09
0ad54     21 40 03 42 
0ad58     09 43 23 00 
0ad5c     20 45 09 42 
0ad60     06 43 26 00 | 	byte	$21, $40, $03, $42, $09, $43, $23, $00, $20, $45, $09, $42, $06, $43, $26, $00
0ad64     20 49 09 21 
0ad68     40 03 42 03 
0ad6c     43 29 00 60 
0ad70     40 09 15 42 | 	byte	$20, $49, $09, $21, $40, $03, $42, $03, $43, $29, $00, $60, $40, $09, $15, $42
0ad74     00 43 2C 00 
0ad78     20 40 09 21 
0ad7c     40 03 43 2F 
0ad80     00 20 45 09 | 	byte	$00, $43, $2c, $00, $20, $40, $09, $21, $40, $03, $43, $2f, $00, $20, $45, $09
0ad84     43 2C 00 20 
0ad88     47 09 21 40 
0ad8c     03 62 50 0A 
0ad90     03 43 29 00 | 	byte	$43, $2c, $00, $20, $47, $09, $21, $40, $03, $62, $50, $0a, $03, $43, $29, $00
0ad94     60 40 09 15 
0ad98     42 06 43 26 
0ad9c     00 60 45 09 
0ada0     15 42 09 43 | 	byte	$60, $40, $09, $15, $42, $06, $43, $26, $00, $60, $45, $09, $15, $42, $09, $43
0ada4     23 00 60 47 
0ada8     09 15 42 0C 
0adac     43 1F 00 20 
0adb0     47 09 21 40 | 	byte	$23, $00, $60, $47, $09, $15, $42, $0c, $43, $1f, $00, $20, $47, $09, $21, $40
0adb4     03 42 0F 43 
0adb8     1C 00 60 45 
0adbc     09 05 42 13 
0adc0     43 19 00 20 | 	byte	$03, $42, $0f, $43, $1c, $00, $60, $45, $09, $05, $42, $13, $43, $19, $00, $20
0adc4     47 09 42 16 
0adc8     43 16 00 20 
0adcc     45 09 42 19 
0add0     43 13 00 20 | 	byte	$47, $09, $42, $16, $43, $16, $00, $20, $45, $09, $42, $19, $43, $13, $00, $20
0add4     44 09 21 40 
0add8     03 42 1C 43 
0addc     0F 00 60 47 
0ade0     09 15 21 40 | 	byte	$44, $09, $21, $40, $03, $42, $1c, $43, $0f, $00, $60, $47, $09, $15, $21, $40
0ade4     03 42 1F 43 
0ade8     0C 00 60 45 
0adec     09 15 21 40 
0adf0     03 42 23 43 | 	byte	$03, $42, $1f, $43, $0c, $00, $60, $45, $09, $15, $21, $40, $03, $42, $23, $43
0adf4     09 00 60 44 
0adf8     09 15 42 26 
0adfc     43 06 00 20 
0ae00     44 09 21 40 | 	byte	$09, $00, $60, $44, $09, $15, $42, $26, $43, $06, $00, $20, $44, $09, $21, $40
0ae04     03 42 29 43 
0ae08     03 00 20 45 
0ae0c     09 42 2C 43 
0ae10     00 00 20 44 | 	byte	$03, $42, $29, $43, $03, $00, $20, $45, $09, $42, $2c, $43, $00, $00, $20, $44
0ae14     09 42 2F 00 
0ae18     20 42 09 42 
0ae1c     2B 00 20 43 
0ae20     09 21 40 03 | 	byte	$09, $42, $2f, $00, $20, $42, $09, $42, $2b, $00, $20, $43, $09, $21, $40, $03
0ae24     42 27 63 50 
0ae28     0B 05 00 60 
0ae2c     44 09 15 42 
0ae30     23 43 09 00 | 	byte	$42, $27, $63, $50, $0b, $05, $00, $60, $44, $09, $15, $42, $23, $43, $09, $00
0ae34     60 42 09 15 
0ae38     42 1E 43 0D 
0ae3c     00 60 43 09 
0ae40     15 42 1A 43 | 	byte	$60, $42, $09, $15, $42, $1e, $43, $0d, $00, $60, $43, $09, $15, $42, $1a, $43
0ae44     12 00 20 43 
0ae48     09 21 40 03 
0ae4c     42 16 43 16 
0ae50     00 60 42 09 | 	byte	$12, $00, $20, $43, $09, $21, $40, $03, $42, $16, $43, $16, $00, $60, $42, $09
0ae54     07 42 12 43 
0ae58     1A 00 60 43 
0ae5c     09 07 42 0D 
0ae60     43 1E 00 60 | 	byte	$07, $42, $12, $43, $1a, $00, $60, $43, $09, $07, $42, $0d, $43, $1e, $00, $60
0ae64     43 09 15 42 
0ae68     09 43 23 00 
0ae6c     20 45 09 21 
0ae70     40 03 62 55 | 	byte	$43, $09, $15, $42, $09, $43, $23, $00, $20, $45, $09, $21, $40, $03, $62, $55
0ae74     0A 0D 43 27 
0ae78     00 60 43 09 
0ae7c     04 21 40 03 
0ae80     42 12 43 2B | 	byte	$0a, $0d, $43, $27, $00, $60, $43, $09, $04, $21, $40, $03, $42, $12, $43, $2b
0ae84     00 20 45 09 
0ae88     21 40 03 42 
0ae8c     16 43 2F 00 
0ae90     20 42 09 42 | 	byte	$00, $20, $45, $09, $21, $40, $03, $42, $16, $43, $2f, $00, $20, $42, $09, $42
0ae94     1A 43 2B 00 
0ae98     20 45 09 21 
0ae9c     40 03 42 1E 
0aea0     43 27 00 60 | 	byte	$1a, $43, $2b, $00, $20, $45, $09, $21, $40, $03, $42, $1e, $43, $27, $00, $60
0aea4     45 09 15 42 
0aea8     23 43 23 00 
0aeac     20 45 09 21 
0aeb0     40 03 42 27 | 	byte	$45, $09, $15, $42, $23, $43, $23, $00, $20, $45, $09, $21, $40, $03, $42, $27
0aeb4     43 1E 00 20 
0aeb8     49 09 42 2B 
0aebc     43 1A 00 80 
0aec0     80 80 80 80 | 	byte	$43, $1e, $00, $20, $49, $09, $42, $2b, $43, $1a, $00, $80, $80, $80, $80, $80
0aec4     80 80 80 80 
0aec8     99 02 20 52 
0aecc     09 21 40 03 
0aed0     62 52 0B 03 | 	byte	$80, $80, $80, $80, $99, $02, $20, $52, $09, $21, $40, $03, $62, $52, $0b, $03
0aed4     63 52 0B 16 
0aed8     00 21 42 06 
0aedc     42 06 43 12 
0aee0     00 21 42 06 | 	byte	$63, $52, $0b, $16, $00, $21, $42, $06, $42, $06, $43, $12, $00, $21, $42, $06
0aee4     42 09 43 0E 
0aee8     00 60 52 09 
0aeec     15 42 0C 43 
0aef0     0A 00 20 55 | 	byte	$42, $09, $43, $0e, $00, $60, $52, $09, $15, $42, $0c, $43, $0a, $00, $20, $55
0aef4     09 21 52 04 
0aef8     42 0F 43 06 
0aefc     00 42 13 43 
0af00     02 00 20 54 | 	byte	$09, $21, $52, $04, $42, $0f, $43, $06, $00, $42, $13, $43, $02, $00, $20, $54
0af04     09 21 42 06 
0af08     42 16 43 00 
0af0c     00 60 55 09 
0af10     15 42 19 00 | 	byte	$09, $21, $42, $06, $42, $16, $43, $00, $00, $60, $55, $09, $15, $42, $19, $00
0af14     20 52 09 21 
0af18     40 03 42 1C 
0af1c     00 60 54 09 
0af20     15 21 40 03 | 	byte	$20, $52, $09, $21, $40, $03, $42, $1c, $00, $60, $54, $09, $15, $21, $40, $03
0af24     42 1F 00 60 
0af28     55 09 07 21 
0af2c     40 03 42 23 
0af30     00 60 52 09 | 	byte	$42, $1f, $00, $60, $55, $09, $07, $21, $40, $03, $42, $23, $00, $60, $52, $09
0af34     15 21 42 06 
0af38     42 26 00 20 
0af3c     50 09 21 40 
0af40     03 42 29 00 | 	byte	$15, $21, $42, $06, $42, $26, $00, $20, $50, $09, $21, $40, $03, $42, $29, $00
0af44     60 55 09 04 
0af48     42 2C 00 60 
0af4c     52 09 07 21 
0af50     52 06 42 2F | 	byte	$60, $55, $09, $04, $42, $2c, $00, $60, $52, $09, $07, $21, $52, $06, $42, $2f
0af54     00 60 50 09 
0af58     15 42 2C 00 
0af5c     20 49 09 21 
0af60     40 03 42 29 | 	byte	$00, $60, $50, $09, $15, $42, $2c, $00, $20, $49, $09, $21, $40, $03, $42, $29
0af64     63 55 0A 03 
0af68     00 60 52 09 
0af6c     04 21 45 06 
0af70     42 26 43 06 | 	byte	$63, $55, $0a, $03, $00, $60, $52, $09, $04, $21, $45, $06, $42, $26, $43, $06
0af74     00 60 50 09 
0af78     07 21 45 06 
0af7c     42 23 43 09 
0af80     00 60 49 09 | 	byte	$00, $60, $50, $09, $07, $21, $45, $06, $42, $23, $43, $09, $00, $60, $49, $09
0af84     15 42 1F 43 
0af88     0C 00 20 45 
0af8c     09 21 52 04 
0af90     42 1C 43 0F | 	byte	$15, $42, $1f, $43, $0c, $00, $20, $45, $09, $21, $52, $04, $42, $1c, $43, $0f
0af94     00 60 50 09 
0af98     04 42 19 43 
0af9c     13 00 20 49 
0afa0     09 21 45 06 | 	byte	$00, $60, $50, $09, $04, $42, $19, $43, $13, $00, $20, $49, $09, $21, $45, $06
0afa4     42 16 43 16 
0afa8     00 60 45 09 
0afac     15 42 13 43 
0afb0     19 00 20 50 | 	byte	$42, $16, $43, $16, $00, $60, $45, $09, $15, $42, $13, $43, $19, $00, $20, $50
0afb4     09 21 40 03 
0afb8     42 0F 43 1C 
0afbc     00 60 49 09 
0afc0     15 21 40 03 | 	byte	$09, $21, $40, $03, $42, $0f, $43, $1c, $00, $60, $49, $09, $15, $21, $40, $03
0afc4     42 0C 43 1F 
0afc8     00 20 40 09 
0afcc     21 40 03 42 
0afd0     09 43 23 00 | 	byte	$42, $0c, $43, $1f, $00, $20, $40, $09, $21, $40, $03, $42, $09, $43, $23, $00
0afd4     20 45 09 21 
0afd8     45 06 42 06 
0afdc     43 26 00 20 
0afe0     49 09 21 40 | 	byte	$20, $45, $09, $21, $45, $06, $42, $06, $43, $26, $00, $20, $49, $09, $21, $40
0afe4     03 42 03 43 
0afe8     29 00 60 40 
0afec     09 15 21 55 
0aff0     06 42 00 43 | 	byte	$03, $42, $03, $43, $29, $00, $60, $40, $09, $15, $21, $55, $06, $42, $00, $43
0aff4     2C 00 20 40 
0aff8     09 21 40 03 
0affc     43 2F 00 20 
0b000     45 09 21 55 | 	byte	$2c, $00, $20, $40, $09, $21, $40, $03, $43, $2f, $00, $20, $45, $09, $21, $55
0b004     06 43 2C 00 
0b008     20 47 09 21 
0b00c     40 03 62 50 
0b010     0A 03 43 29 | 	byte	$06, $43, $2c, $00, $20, $47, $09, $21, $40, $03, $62, $50, $0a, $03, $43, $29
0b014     00 60 40 09 
0b018     15 21 40 06 
0b01c     42 06 43 26 
0b020     00 60 45 09 | 	byte	$00, $60, $40, $09, $15, $21, $40, $06, $42, $06, $43, $26, $00, $60, $45, $09
0b024     15 21 40 06 
0b028     42 09 43 23 
0b02c     00 60 47 09 
0b030     15 42 0C 43 | 	byte	$15, $21, $40, $06, $42, $09, $43, $23, $00, $60, $47, $09, $15, $42, $0c, $43
0b034     1F 00 20 47 
0b038     09 21 52 04 
0b03c     42 0F 43 1C 
0b040     00 60 45 09 | 	byte	$1f, $00, $20, $47, $09, $21, $52, $04, $42, $0f, $43, $1c, $00, $60, $45, $09
0b044     05 42 13 43 
0b048     19 00 20 47 
0b04c     09 21 40 06 
0b050     42 16 43 16 | 	byte	$05, $42, $13, $43, $19, $00, $20, $47, $09, $21, $40, $06, $42, $16, $43, $16
0b054     00 20 45 09 
0b058     42 19 43 13 
0b05c     00 20 44 09 
0b060     21 40 03 42 | 	byte	$00, $20, $45, $09, $42, $19, $43, $13, $00, $20, $44, $09, $21, $40, $03, $42
0b064     1C 43 0F 00 
0b068     60 47 09 15 
0b06c     21 40 03 42 
0b070     1F 43 0C 00 | 	byte	$1c, $43, $0f, $00, $60, $47, $09, $15, $21, $40, $03, $42, $1f, $43, $0c, $00
0b074     60 45 09 15 
0b078     21 40 03 42 
0b07c     23 43 09 00 
0b080     60 44 09 15 | 	byte	$60, $45, $09, $15, $21, $40, $03, $42, $23, $43, $09, $00, $60, $44, $09, $15
0b084     21 40 06 42 
0b088     26 43 06 00 
0b08c     20 44 09 21 
0b090     40 03 42 29 | 	byte	$21, $40, $06, $42, $26, $43, $06, $00, $20, $44, $09, $21, $40, $03, $42, $29
0b094     43 03 00 20 
0b098     45 09 42 2C 
0b09c     43 00 00 20 
0b0a0     44 09 21 50 | 	byte	$43, $03, $00, $20, $45, $09, $42, $2c, $43, $00, $00, $20, $44, $09, $21, $50
0b0a4     06 42 2F 00 
0b0a8     20 42 09 42 
0b0ac     2B 00 20 43 
0b0b0     09 21 40 03 | 	byte	$06, $42, $2f, $00, $20, $42, $09, $42, $2b, $00, $20, $43, $09, $21, $40, $03
0b0b4     42 27 63 50 
0b0b8     0B 05 00 60 
0b0bc     44 09 15 21 
0b0c0     43 06 42 23 | 	byte	$42, $27, $63, $50, $0b, $05, $00, $60, $44, $09, $15, $21, $43, $06, $42, $23
0b0c4     43 09 00 60 
0b0c8     42 09 15 21 
0b0cc     43 06 42 1E 
0b0d0     43 0D 00 60 | 	byte	$43, $09, $00, $60, $42, $09, $15, $21, $43, $06, $42, $1e, $43, $0d, $00, $60
0b0d4     43 09 15 42 
0b0d8     1A 43 12 00 
0b0dc     20 43 09 21 
0b0e0     52 04 42 16 | 	byte	$43, $09, $15, $42, $1a, $43, $12, $00, $20, $43, $09, $21, $52, $04, $42, $16
0b0e4     43 16 00 60 
0b0e8     42 09 07 42 
0b0ec     12 43 1A 00 
0b0f0     60 43 09 07 | 	byte	$43, $16, $00, $60, $42, $09, $07, $42, $12, $43, $1a, $00, $60, $43, $09, $07
0b0f4     21 43 06 42 
0b0f8     0D 43 1E 00 
0b0fc     60 43 09 15 
0b100     42 09 43 23 | 	byte	$21, $43, $06, $42, $0d, $43, $1e, $00, $60, $43, $09, $15, $42, $09, $43, $23
0b104     00 20 45 09 
0b108     21 40 03 62 
0b10c     55 0A 0D 43 
0b110     27 00 60 43 | 	byte	$00, $20, $45, $09, $21, $40, $03, $62, $55, $0a, $0d, $43, $27, $00, $60, $43
0b114     09 04 21 40 
0b118     05 42 12 43 
0b11c     2B 00 20 45 
0b120     09 21 40 05 | 	byte	$09, $04, $21, $40, $05, $42, $12, $43, $2b, $00, $20, $45, $09, $21, $40, $05
0b124     42 16 43 2F 
0b128     00 20 42 09 
0b12c     21 40 05 42 
0b130     1A 43 2B 00 | 	byte	$42, $16, $43, $2f, $00, $20, $42, $09, $21, $40, $05, $42, $1a, $43, $2b, $00
0b134     20 45 09 21 
0b138     40 05 42 1E 
0b13c     43 27 00 60 
0b140     45 09 15 21 | 	byte	$20, $45, $09, $21, $40, $05, $42, $1e, $43, $27, $00, $60, $45, $09, $15, $21
0b144     40 05 42 23 
0b148     43 23 00 20 
0b14c     45 09 21 40 
0b150     05 42 27 43 | 	byte	$40, $05, $42, $23, $43, $23, $00, $20, $45, $09, $21, $40, $05, $42, $27, $43
0b154     1E 00 20 49 
0b158     09 21 40 05 
0b15c     42 2B 43 1A 
0b160     00 80 80 80 | 	byte	$1e, $00, $20, $49, $09, $21, $40, $05, $42, $2b, $43, $1a, $00, $80, $80, $80
0b164     80 80 80 80 
0b168     80 80 80 80 | 	byte	$80[8]
0b16c     4A 4B 51 56 
0b170     5D 65 74 89 
0b174     9D A6 A7 AF 
0b178     BE C9 C8 BE | 	byte	$4a, $4b, $51, $56, $5d, $65, $74, $89, $9d, $a6, $a7, $af, $be, $c9, $c8, $be
0b17c     B4 AD B4 B6 
0b180     AC 9D 95 9D 
0b184     B0 C1 C4 BD 
0b188     BC BC B9 AE | 	byte	$b4, $ad, $b4, $b6, $ac, $9d, $95, $9d, $b0, $c1, $c4, $bd, $bc, $bc, $b9, $ae
0b18c     A0 9A A0 A8 
0b190     A5 9E 96 93 
0b194     92 90 90 94 
0b198     93 93 97 99 | 	byte	$a0, $9a, $a0, $a8, $a5, $9e, $96, $93, $92, $90, $90, $94, $93, $93, $97, $99
0b19c     95 93 9E B3 
0b1a0     C1 C5 C2 BD 
0b1a4     B7 AE 9B 89 
0b1a8     7C 75 6F 65 | 	byte	$95, $93, $9e, $b3, $c1, $c5, $c2, $bd, $b7, $ae, $9b, $89, $7c, $75, $6f, $65
0b1ac     60 53 4B 4C 
0b1b0     59 63 67 63 
0b1b4     5D 50 46 42 
0b1b8     46 55 62 6E | 	byte	$60, $53, $4b, $4c, $59, $63, $67, $63, $5d, $50, $46, $42, $46, $55, $62, $6e
0b1bc     81 9D B7 C3 
0b1c0     CB D3 D7 D9 
0b1c4     E4 E4 E4 E4 
0b1c8     E4 E4 DD D8 | 	byte	$81, $9d, $b7, $c3, $cb, $d3, $d7, $d9, $e4, $e4, $e4, $e4, $e4, $e4, $dd, $d8
0b1cc     D8 D9 D8 CE 
0b1d0     C1 B1 9E 86 
0b1d4     7A 74 6F 66 
0b1d8     5D 51 3F 2D | 	byte	$d8, $d9, $d8, $ce, $c1, $b1, $9e, $86, $7a, $74, $6f, $66, $5d, $51, $3f, $2d
0b1dc     28 36 46 49 
0b1e0     43 3B 3C 48 
0b1e4     5A 67 64 57 
0b1e8     4B 49 44 34 | 	byte	$28, $36, $46, $49, $43, $3b, $3c, $48, $5a, $67, $64, $57, $4b, $49, $44, $34
0b1ec     1C 0E 13 20 
0b1f0     27 2B 30 3B 
0b1f4     51 62 6B 67 
0b1f8     5C 62 71 7D | 	byte	$1c, $0e, $13, $20, $27, $2b, $30, $3b, $51, $62, $6b, $67, $5c, $62, $71, $7d
0b1fc     84 83 83 8D 
0b200     9F A9 A7 AC 
0b204     BC CE D8 D7 
0b208     CB BC B1 AE | 	byte	$84, $83, $83, $8d, $9f, $a9, $a7, $ac, $bc, $ce, $d8, $d7, $cb, $bc, $b1, $ae
0b20c     AA A4 98 87 
0b210     7B 75 75 7D 
0b214     8C 95 97 8D 
0b218     80 78 7B 81 | 	byte	$aa, $a4, $98, $87, $7b, $75, $75, $7d, $8c, $95, $97, $8d, $80, $78, $7b, $81
0b21c     80 75 6A 63 
0b220     67 6B 6E 74 
0b224     71 6A 5C 54 
0b228     5A 61 63 5D | 	byte	$80, $75, $6a, $63, $67, $6b, $6e, $74, $71, $6a, $5c, $54, $5a, $61, $63, $5d
0b22c     5C 5C 57 47 
0b230     35 2F 2F 30 
0b234     26 16 0E 14 
0b238     21 2C 3B 3E | 	byte	$5c, $5c, $57, $47, $35, $2f, $2f, $30, $26, $16, $0e, $14, $21, $2c, $3b, $3e
0b23c     46 51 63 6E 
0b240     6E 65 62 6E 
0b244     7A 80 80 81 
0b248     87 98 A9 B0 | 	byte	$46, $51, $63, $6e, $6e, $65, $62, $6e, $7a, $80, $80, $81, $87, $98, $a9, $b0
0b24c     AD A9 A9 A9 
0b250     A6 97 82 6D 
0b254     5A 4D 42 38 
0b258     34 3A 46 4F | 	byte	$ad, $a9, $a9, $a9, $a6, $97, $82, $6d, $5a, $4d, $42, $38, $34, $3a, $46, $4f
0b25c     54 51 54 59 
0b260     5B 59 5E 6A 
0b264     73 75 7C 86 
0b268     94 A2 AD A8 | 	byte	$54, $51, $54, $59, $5b, $59, $5e, $6a, $73, $75, $7c, $86, $94, $a2, $ad, $a8
0b26c     98 8F 92 99 
0b270     99 8E 86 80 
0b274     81 82 80 83 
0b278     87 8D 96 98 | 	byte	$98, $8f, $92, $99, $99, $8e, $86, $80, $81, $82, $80, $83, $87, $8d, $96, $98
0b27c     96 90 88 7D 
0b280     7A 79 78 7E 
0b284     8E A9 C4 DA 
0b288     E4 E4 E4 DF | 	byte	$96, $90, $88, $7d, $7a, $79, $78, $7e, $8e, $a9, $c4, $da, $e4, $e4, $e4, $df
0b28c     DB D5 CB BF 
0b290     AC 9B 93 8F 
0b294     8A 86 86 88 
0b298     8D 92 90 8B | 	byte	$db, $d5, $cb, $bf, $ac, $9b, $93, $8f, $8a, $86, $86, $88, $8d, $92, $90, $8b
0b29c     83 80 7F 83 
0b2a0     87 90 9F AB 
0b2a4     B3 B8 B7 B2 
0b2a8     AD A7 9F 97 | 	byte	$83, $80, $7f, $83, $87, $90, $9f, $ab, $b3, $b8, $b7, $b2, $ad, $a7, $9f, $97
0b2ac     91 89 7C 73 
0b2b0     6D 6E 71 6E 
0b2b4     6A 68 6F 7B 
0b2b8     83 82 7E 89 | 	byte	$91, $89, $7c, $73, $6d, $6e, $71, $6e, $6a, $68, $6f, $7b, $83, $82, $7e, $89
0b2bc     9A AA B3 B9 
0b2c0     C2 D3 E4 E4 
0b2c4     E4 E4 E4 E4 
0b2c8     E4 DA D4 C8 | 	byte	$9a, $aa, $b3, $b9, $c2, $d3, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $da, $d4, $c8
0b2cc     BE B9 B5 B2 
0b2d0     AC A4 97 88 
0b2d4     77 65 4F 34 
0b2d8     1F 11 0E 0E | 	byte	$be, $b9, $b5, $b2, $ac, $a4, $97, $88, $77, $65, $4f, $34, $1f, $11, $0e, $0e
0b2dc     0D 0F 18 27 
0b2e0     32 3D 3B 3D 
0b2e4     3F 43 45 41 
0b2e8     34 24 1B 1D | 	byte	$0d, $0f, $18, $27, $32, $3d, $3b, $3d, $3f, $43, $45, $41, $34, $24, $1b, $1d
0b2ec     25 29 27 25 
0b2f0     2E 44 61 73 
0b2f4     79 80 90 A4 
0b2f8     B4 B9 B4 AF | 	byte	$25, $29, $27, $25, $2e, $44, $61, $73, $79, $80, $90, $a4, $b4, $b9, $b4, $af
0b2fc     B8 C3 C4 BF 
0b300     BB BA BC B8 
0b304     B1 AE B1 B5 
0b308     B1 A5 99 93 | 	byte	$b8, $c3, $c4, $bf, $bb, $ba, $bc, $b8, $b1, $ae, $b1, $b5, $b1, $a5, $99, $93
0b30c     91 8E 8E 96 
0b310     A2 A6 9D 91 
0b314     89 88 8A 8C 
0b318     8F 8F 8D 88 | 	byte	$91, $8e, $8e, $96, $a2, $a6, $9d, $91, $89, $88, $8a, $8c, $8f, $8f, $8d, $88
0b31c     80 75 69 62 
0b320     58 4F 48 44 
0b324     43 43 43 44 
0b328     41 3A 36 3F | 	byte	$80, $75, $69, $62, $58, $4f, $48, $44, $43, $43, $43, $44, $41, $3a, $36, $3f
0b32c     51 5B 58 53 
0b330     4E 4D 4C 4B 
0b334     47 3E 36 2E 
0b338     30 41 51 60 | 	byte	$51, $5b, $58, $53, $4e, $4d, $4c, $4b, $47, $3e, $36, $2e, $30, $41, $51, $60
0b33c     6B 6F 72 75 
0b340     78 73 61 4A 
0b344     3C 3C 44 41 
0b348     34 2E 3A 53 | 	byte	$6b, $6f, $72, $75, $78, $73, $61, $4a, $3c, $3c, $44, $41, $34, $2e, $3a, $53
0b34c     6C 81 8E 93 
0b350     98 97 8E 77 
0b354     60 55 59 60 
0b358     5D 56 58 5E | 	byte	$6c, $81, $8e, $93, $98, $97, $8e, $77, $60, $55, $59, $60, $5d, $56, $58, $5e
0b35c     67 71 7F 8A 
0b360     8C 80 6B 67 
0b364     71 7E 86 85 
0b368     82 85 90 9D | 	byte	$67, $71, $7f, $8a, $8c, $80, $6b, $67, $71, $7e, $86, $85, $82, $85, $90, $9d
0b36c     9F 90 86 87 
0b370     95 AB BA B5 
0b374     A1 96 98 A3 
0b378     AE AF A8 A7 | 	byte	$9f, $90, $86, $87, $95, $ab, $ba, $b5, $a1, $96, $98, $a3, $ae, $af, $a8, $a7
0b37c     AD AF A4 94 
0b380     8E 90 98 9E 
0b384     A2 A5 AC AF 
0b388     A9 9D 94 8F | 	byte	$ad, $af, $a4, $94, $8e, $90, $98, $9e, $a2, $a5, $ac, $af, $a9, $9d, $94, $8f
0b38c     91 96 99 99 
0b390     94 90 95 A6 
0b394     B6 BF BC B2 
0b398     A6 9F 97 89 | 	byte	$91, $96, $99, $99, $94, $90, $95, $a6, $b6, $bf, $bc, $b2, $a6, $9f, $97, $89
0b39c     71 5E 5A 6B 
0b3a0     7F 8B 85 7D 
0b3a4     85 9D BA C3 
0b3a8     BA A9 9E 91 | 	byte	$71, $5e, $5a, $6b, $7f, $8b, $85, $7d, $85, $9d, $ba, $c3, $ba, $a9, $9e, $91
0b3ac     77 5B 4B 4D 
0b3b0     5F 6A 6C 70 
0b3b4     7A 8A 98 A2 
0b3b8     A6 A7 A7 AA | 	byte	$77, $5b, $4b, $4d, $5f, $6a, $6c, $70, $7a, $8a, $98, $a2, $a6, $a7, $a7, $aa
0b3bc     AD AE B4 C2 
0b3c0     D2 D7 D1 CD 
0b3c4     DE E5 E5 E5 
0b3c8     E5 E5 D9 D8 | 	byte	$ad, $ae, $b4, $c2, $d2, $d7, $d1, $cd, $de, $e5, $e5, $e5, $e5, $e5, $d9, $d8
0b3cc     DB D8 C7 B2 
0b3d0     9D 88 6C 51 
0b3d4     3F 3B 3B 32 
0b3d8     28 1D 11 0E | 	byte	$db, $d8, $c7, $b2, $9d, $88, $6c, $51, $3f, $3b, $3b, $32, $28, $1d, $11, $0e
0b3dc     09 06 0B 0F 
0b3e0     0E 0B 0C 14 
0b3e4     22 31 45 53 
0b3e8     59 5E 64 73 | 	byte	$09, $06, $0b, $0f, $0e, $0b, $0c, $14, $22, $31, $45, $53, $59, $5e, $64, $73
0b3ec     83 85 7B 73 
0b3f0     72 7C 8B 8E 
0b3f4     8B 8D A0 B3 
0b3f8     BE C2 C5 D4 | 	byte	$83, $85, $7b, $73, $72, $7c, $8b, $8e, $8b, $8d, $a0, $b3, $be, $c2, $c5, $d4
0b3fc     E4 E4 DB BC 
0b400     A7 A3 A8 A7 
0b404     9A 87 80 89 
0b408     96 99 95 9A | 	byte	$e4, $e4, $db, $bc, $a7, $a3, $a8, $a7, $9a, $87, $80, $89, $96, $99, $95, $9a
0b40c     AB BB BF AF 
0b410     97 84 7B 77 
0b414     6A 64 57 50 
0b418     4E 51 4F 45 | 	byte	$ab, $bb, $bf, $af, $97, $84, $7b, $77, $6a, $64, $57, $50, $4e, $51, $4f, $45
0b41c     3E 3D 40 43 
0b420     44 48 4A 49 
0b424     50 5B 67 71 
0b428     79 7D 80 81 | 	byte	$3e, $3d, $40, $43, $44, $48, $4a, $49, $50, $5b, $67, $71, $79, $7d, $80, $81
0b42c     81 83 85 80 
0b430     76 64 5A 54 
0b434     4A 40 3A 3D 
0b438     48 50 58 5C | 	byte	$81, $83, $85, $80, $76, $64, $5a, $54, $4a, $40, $3a, $3d, $48, $50, $58, $5c
0b43c     5A 53 4D 46 
0b440     3C 2D 24 2B 
0b444     3C 4B 53 53 
0b448     59 73 9E C0 | 	byte	$5a, $53, $4d, $46, $3c, $2d, $24, $2b, $3c, $4b, $53, $53, $59, $73, $9e, $c0
0b44c     C9 B9 A5 A7 
0b450     B7 BC A5 82 
0b454     6A 5D 5A 56 
0b458     49 43 4F 64 | 	byte	$c9, $b9, $a5, $a7, $b7, $bc, $a5, $82, $6a, $5d, $5a, $56, $49, $43, $4f, $64
0b45c     70 6A 58 49 
0b460     47 54 60 62 
0b464     5E 61 6B 7C 
0b468     8C 93 8F 87 | 	byte	$70, $6a, $58, $49, $47, $54, $60, $62, $5e, $61, $6b, $7c, $8c, $93, $8f, $87
0b46c     8B 9A A7 AA 
0b470     A9 A9 A0 97 
0b474     99 A0 A3 9D 
0b478     94 91 91 8B | 	byte	$8b, $9a, $a7, $aa, $a9, $a9, $a0, $97, $99, $a0, $a3, $9d, $94, $91, $91, $8b
0b47c     80 76 73 73 
0b480     75 7A 7C 77 
0b484     72 75 82 94 
0b488     A7 B6 C3 CE | 	byte	$80, $76, $73, $73, $75, $7a, $7c, $77, $72, $75, $82, $94, $a7, $b6, $c3, $ce
0b48c     D2 D2 D4 D5 
0b490     D1 CA C2 BB 
0b494     AD 97 7E 74 
0b498     72 77 7C 84 | 	byte	$d2, $d2, $d4, $d5, $d1, $ca, $c2, $bb, $ad, $97, $7e, $74, $72, $77, $7c, $84
0b49c     8D 92 94 96 
0b4a0     96 97 9D A8 
0b4a4     AE A6 8F 7B 
0b4a8     6C 68 69 70 | 	byte	$8d, $92, $94, $96, $96, $97, $9d, $a8, $ae, $a6, $8f, $7b, $6c, $68, $69, $70
0b4ac     7C 85 85 8A 
0b4b0     92 98 A2 AB 
0b4b4     B0 B5 BE C8 
0b4b8     D0 D4 DA D8 | 	byte	$7c, $85, $85, $8a, $92, $98, $a2, $ab, $b0, $b5, $be, $c8, $d0, $d4, $da, $d8
0b4bc     D7 DA D9 CB 
0b4c0     BA B2 AF AF 
0b4c4     B1 A8 95 89 
0b4c8     93 AD C5 C9 | 	byte	$d7, $da, $d9, $cb, $ba, $b2, $af, $af, $b1, $a8, $95, $89, $93, $ad, $c5, $c9
0b4cc     B8 A5 98 8F 
0b4d0     80 67 4B 2B 
0b4d4     19 13 12 0E 
0b4d8     07 06 0E 19 | 	byte	$b8, $a5, $98, $8f, $80, $67, $4b, $2b, $19, $13, $12, $0e, $07, $06, $0e, $19
0b4dc     1F 20 24 25 
0b4e0     21 1C 1E 20 
0b4e4     17 0F 12 1D 
0b4e8     24 22 20 2D | 	byte	$1f, $20, $24, $25, $21, $1c, $1e, $20, $17, $0f, $12, $1d, $24, $22, $20, $2d
0b4ec     4B 6A 83 8F 
0b4f0     96 A4 BB DB 
0b4f4     E5 E4 E4 E3 
0b4f8     E4 E4 E4 E4 | 	byte	$4b, $6a, $83, $8f, $96, $a4, $bb, $db, $e5, $e4, $e4, $e3, $e4, $e4, $e4, $e4
0b4fc     E0 C6 B3 A5 
0b500     92 76 5F 5E 
0b504     6F 80 82 7A 
0b508     76 85 A1 B1 | 	byte	$e0, $c6, $b3, $a5, $92, $76, $5f, $5e, $6f, $80, $82, $7a, $76, $85, $a1, $b1
0b50c     AB 96 85 86 
0b510     92 90 7B 5A 
0b514     4E 55 66 74 
0b518     7B 7C 7E 84 | 	byte	$ab, $96, $85, $86, $92, $90, $7b, $5a, $4e, $55, $66, $74, $7b, $7c, $7e, $84
0b51c     8A 93 95 8F 
0b520     85 79 6E 56 
0b524     42 3A 3B 3A 
0b528     39 37 38 3E | 	byte	$8a, $93, $95, $8f, $85, $79, $6e, $56, $42, $3a, $3b, $3a, $39, $37, $38, $3e
0b52c     45 47 48 50 
0b530     52 4D 46 48 
0b534     53 63 74 73 
0b538     60 4F 4C 57 | 	byte	$45, $47, $48, $50, $52, $4d, $46, $48, $53, $63, $74, $73, $60, $4f, $4c, $57
0b53c     5A 49 32 28 
0b540     28 2A 2B 2B 
0b544     2E 3D 51 67 
0b548     77 86 93 9A | 	byte	$5a, $49, $32, $28, $28, $2a, $2b, $2b, $2e, $3d, $51, $67, $77, $86, $93, $9a
0b54c     A1 A3 9D 93 
0b550     89 7B 69 54 
0b554     4A 4B 56 60 
0b558     6C 7B 8F 9F | 	byte	$a1, $a3, $9d, $93, $89, $7b, $69, $54, $4a, $4b, $56, $60, $6c, $7b, $8f, $9f
0b55c     A1 9A 97 8F 
0b560     8A 81 71 64 
0b564     5A 54 55 59 
0b568     62 6A 6D 77 | 	byte	$a1, $9a, $97, $8f, $8a, $81, $71, $64, $5a, $54, $55, $59, $62, $6a, $6d, $77
0b56c     89 98 96 89 
0b570     80 82 8F 9A 
0b574     A0 A1 9C 95 
0b578     93 98 A0 A7 | 	byte	$89, $98, $96, $89, $80, $82, $8f, $9a, $a0, $a1, $9c, $95, $93, $98, $a0, $a7
0b57c     AD B1 B3 B7 
0b580     BA B9 B9 BC 
0b584     C4 C4 BB B4 
0b588     B1 B4 B9 B9 | 	byte	$ad, $b1, $b3, $b7, $ba, $b9, $b9, $bc, $c4, $c4, $bb, $b4, $b1, $b4, $b9, $b9
0b58c     B3 AB A3 9F 
0b590     97 89 7A 6A 
0b594     66 60 5A 55 
0b598     51 53 57 5E | 	byte	$b3, $ab, $a3, $9f, $97, $89, $7a, $6a, $66, $60, $5a, $55, $51, $53, $57, $5e
0b59c     6A 7A 8C 98 
0b5a0     A2 B1 C2 CC 
0b5a4     CA BE A9 97 
0b5a8     8E 8A 81 72 | 	byte	$6a, $7a, $8c, $98, $a2, $b1, $c2, $cc, $ca, $be, $a9, $97, $8e, $8a, $81, $72
0b5ac     6D 73 84 94 
0b5b0     9F A9 B2 B8 
0b5b4     B8 B7 B0 9D 
0b5b8     86 75 74 7B | 	byte	$6d, $73, $84, $94, $9f, $a9, $b2, $b8, $b8, $b7, $b0, $9d, $86, $75, $74, $7b
0b5bc     81 88 95 AD 
0b5c0     CC E4 E4 E4 
0b5c4     E4 E4 D6 D2 
0b5c8     C6 AE 8E 71 | 	byte	$81, $88, $95, $ad, $cc, $e4, $e4, $e4, $e4, $e4, $d6, $d2, $c6, $ae, $8e, $71
0b5cc     63 5E 5C 55 
0b5d0     4B 42 42 47 
0b5d4     41 2F 1C 0F 
0b5d8     13 1A 1D 1A | 	byte	$63, $5e, $5c, $55, $4b, $42, $42, $47, $41, $2f, $1c, $0f, $13, $1a, $1d, $1a
0b5dc     18 1D 29 38 
0b5e0     46 51 59 66 
0b5e4     75 7D 7B 77 
0b5e8     77 7B 81 88 | 	byte	$18, $1d, $29, $38, $46, $51, $59, $66, $75, $7d, $7b, $77, $77, $7b, $81, $88
0b5ec     8C 8D 8F 95 
0b5f0     9E A7 AD AF 
0b5f4     B3 B7 BD C2 
0b5f8     C1 B6 A4 96 | 	byte	$8c, $8d, $8f, $95, $9e, $a7, $ad, $af, $b3, $b7, $bd, $c2, $c1, $b6, $a4, $96
0b5fc     93 96 96 8F 
0b600     7D 6D 72 75 
0b604     7B 88 91 99 
0b608     A3 AA A7 9E | 	byte	$93, $96, $96, $8f, $7d, $6d, $72, $75, $7b, $88, $91, $99, $a3, $aa, $a7, $9e
0b60c     94 91 98 99 
0b610     90 7F 6A 64 
0b614     5E 5C 5F 63 
0b618     61 58 4B 40 | 	byte	$94, $91, $98, $99, $90, $7f, $6a, $64, $5e, $5c, $5f, $63, $61, $58, $4b, $40
0b61c     38 38 3D 3C 
0b620     35 2E 31 40 
0b624     50 58 5A 65 
0b628     79 8A 8E 89 | 	byte	$38, $38, $3d, $3c, $35, $2e, $31, $40, $50, $58, $5a, $65, $79, $8a, $8e, $89
0b62c     7F 7C 84 87 
0b630     89 89 8D 8D 
0b634     8B 85 77 6C 
0b638     66 56 3D 29 | 	byte	$7f, $7c, $84, $87, $89, $89, $8d, $8d, $8b, $85, $77, $6c, $66, $56, $3d, $29
0b63c     15 09 0B 0D 
0b640     0B 13 1E 2A 
0b644     3B 4A 56 67 
0b648     83 A6 C4 D2 | 	byte	$15, $09, $0b, $0d, $0b, $13, $1e, $2a, $3b, $4a, $56, $67, $83, $a6, $c4, $d2
0b64c     D4 CE C8 C5 
0b650     C1 BC B5 A6 
0b654     92 7C 79 74 
0b658     6E 66 60 58 | 	byte	$d4, $ce, $c8, $c5, $c1, $bc, $b5, $a6, $92, $7c, $79, $74, $6e, $66, $60, $58
0b65c     4E 47 43 44 
0b660     44 42 44 4C 
0b664     4A 46 49 5F 
0b668     76 80 81 84 | 	byte	$4e, $47, $43, $44, $44, $42, $44, $4c, $4a, $46, $49, $5f, $76, $80, $81, $84
0b66c     8B 96 9C 9A 
0b670     96 9B A4 AD 
0b674     B1 AF AB A3 
0b678     98 8B 82 7F | 	byte	$8b, $96, $9c, $9a, $96, $9b, $a4, $ad, $b1, $af, $ab, $a3, $98, $8b, $82, $7f
0b67c     80 82 81 79 
0b680     7F 8F 9F A2 
0b684     9E A2 A9 AE 
0b688     B0 B1 B7 BC | 	byte	$80, $82, $81, $79, $7f, $8f, $9f, $a2, $9e, $a2, $a9, $ae, $b0, $b1, $b7, $bc
0b68c     C1 C5 C6 C0 
0b690     B8 B3 B9 C5 
0b694     CB C6 B4 A0 
0b698     92 8C 88 81 | 	byte	$c1, $c5, $c6, $c0, $b8, $b3, $b9, $c5, $cb, $c6, $b4, $a0, $92, $8c, $88, $81
0b69c     79 72 69 5F 
0b6a0     58 5A 5F 66 
0b6a4     71 7D 88 90 
0b6a8     95 95 99 9B | 	byte	$79, $72, $69, $5f, $58, $5a, $5f, $66, $71, $7d, $88, $90, $95, $95, $99, $9b
0b6ac     AB C0 D9 E4 
0b6b0     E4 E4 E4 E4 
0b6b4     E4 E4 E4 E4 
0b6b8     D0 BE B1 A4 | 	byte	$ab, $c0, $d9, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $d0, $be, $b1, $a4
0b6bc     92 76 5E 54 
0b6c0     53 58 5D 61 
0b6c4     67 6A 6D 70 
0b6c8     70 65 5B 59 | 	byte	$92, $76, $5e, $54, $53, $58, $5d, $61, $67, $6a, $6d, $70, $70, $65, $5b, $59
0b6cc     57 53 4F 49 
0b6d0     48 52 6B 81 
0b6d4     8B 80 6E 65 
0b6d8     67 68 64 55 | 	byte	$57, $53, $4f, $49, $48, $52, $6b, $81, $8b, $80, $6e, $65, $67, $68, $64, $55
0b6dc     41 31 2C 30 
0b6e0     39 3F 41 44 
0b6e4     4C 58 5E 60 
0b6e8     5C 5C 63 71 | 	byte	$41, $31, $2c, $30, $39, $3f, $41, $44, $4c, $58, $5e, $60, $5c, $5c, $63, $71
0b6ec     80 91 A7 BA 
0b6f0     C8 D5 E0 E2 
0b6f4     DF DE DA D1 
0b6f8     C0 A8 94 8E | 	byte	$80, $91, $a7, $ba, $c8, $d5, $e0, $e2, $df, $de, $da, $d1, $c0, $a8, $94, $8e
0b6fc     8C 89 8B 8E 
0b700     93 9A A3 A8 
0b704     A5 A0 9F 98 
0b708     88 70 59 4B | 	byte	$8c, $89, $8b, $8e, $93, $9a, $a3, $a8, $a5, $a0, $9f, $98, $88, $70, $59, $4b
0b70c     46 49 4F 57 
0b710     5D 60 68 75 
0b714     80 84 81 7C 
0b718     7F 86 8B 85 | 	byte	$46, $49, $4f, $57, $5d, $60, $68, $75, $80, $84, $81, $7c, $7f, $86, $8b, $85
0b71c     78 6F 6D 6A 
0b720     61 58 4D 40 
0b724     35 2F 31 34 
0b728     35 38 46 5C | 	byte	$78, $6f, $6d, $6a, $61, $58, $4d, $40, $35, $2f, $31, $34, $35, $38, $46, $5c
0b72c     73 86 98 9F 
0b730     95 88 7B 75 
0b734     72 6F 6B 5F 
0b738     4F 3D 31 2B | 	byte	$73, $86, $98, $9f, $95, $88, $7b, $75, $72, $6f, $6b, $5f, $4f, $3d, $31, $2b
0b73c     23 1C 1B 20 
0b740     2B 3D 40 3E 
0b744     3A 3B 4A 5B 
0b748     65 6B 71 79 | 	byte	$23, $1c, $1b, $20, $2b, $3d, $40, $3e, $3a, $3b, $4a, $5b, $65, $6b, $71, $79
0b74c     84 88 87 81 
0b750     82 87 8A 89 
0b754     8C 8F 8C 8A 
0b758     8E 8F 90 8F | 	byte	$84, $88, $87, $81, $82, $87, $8a, $89, $8c, $8f, $8c, $8a, $8e, $8f, $90, $8f
0b75c     86 74 71 74 
0b760     73 6E 6C 65 
0b764     5E 5E 5B 5B 
0b768     5F 62 6C 7B | 	byte	$86, $74, $71, $74, $73, $6e, $6c, $65, $5e, $5e, $5b, $5b, $5f, $62, $6c, $7b
0b76c     89 95 9B 9C 
0b770     97 8C 82 81 
0b774     85 85 84 7D 
0b778     73 7D 8F A5 | 	byte	$89, $95, $9b, $9c, $97, $8c, $82, $81, $85, $85, $84, $7d, $73, $7d, $8f, $a5
0b77c     B0 B3 B9 CA 
0b780     D4 D3 D2 D2 
0b784     D5 D4 C9 BA 
0b788     A9 A2 A7 AD | 	byte	$b0, $b3, $b9, $ca, $d4, $d3, $d2, $d2, $d5, $d4, $c9, $ba, $a9, $a2, $a7, $ad
0b78c     A9 9F 97 96 
0b790     9D 9C 8E 7E 
0b794     74 73 6F 6B 
0b798     5E 50 4F 60 | 	byte	$a9, $9f, $97, $96, $9d, $9c, $8e, $7e, $74, $73, $6f, $6b, $5e, $50, $4f, $60
0b79c     6E 75 7A 80 
0b7a0     86 8C 91 90 
0b7a4     93 9B AA BE 
0b7a8     D4 E1 DB D0 | 	byte	$6e, $75, $7a, $80, $86, $8c, $91, $90, $93, $9b, $aa, $be, $d4, $e1, $db, $d0
0b7ac     D5 E2 E4 DC 
0b7b0     CA B5 A2 92 
0b7b4     83 7E 83 87 
0b7b8     84 7E 7E 86 | 	byte	$d5, $e2, $e4, $dc, $ca, $b5, $a2, $92, $83, $7e, $83, $87, $84, $7e, $7e, $86
0b7bc     8F 8F 81 6B 
0b7c0     67 71 85 92 
0b7c4     8E 7F 74 75 
0b7c8     71 67 55 50 | 	byte	$8f, $8f, $81, $6b, $67, $71, $85, $92, $8e, $7f, $74, $75, $71, $67, $55, $50
0b7cc     50 57 56 54 
0b7d0     57 5B 66 7A 
0b7d4     90 9B 9D 97 
0b7d8     8D 7B 6C 68 | 	byte	$50, $57, $56, $54, $57, $5b, $66, $7a, $90, $9b, $9d, $97, $8d, $7b, $6c, $68
0b7dc     65 60 5E 61 
0b7e0     63 66 69 6E 
0b7e4     79 87 95 A0 
0b7e8     AB B3 B2 A9 | 	byte	$65, $60, $5e, $61, $63, $66, $69, $6e, $79, $87, $95, $a0, $ab, $b3, $b2, $a9
0b7ec     9E A3 B5 C4 
0b7f0     C7 BE BB BE 
0b7f4     CE D9 D0 B5 
0b7f8     95 84 7F 80 | 	byte	$9e, $a3, $b5, $c4, $c7, $be, $bb, $be, $ce, $d9, $d0, $b5, $95, $84, $7f, $80
0b7fc     7E 73 63 5D 
0b800     65 6A 66 5B 
0b804     54 59 62 65 
0b808     62 64 71 7D | 	byte	$7e, $73, $63, $5d, $65, $6a, $66, $5b, $54, $59, $62, $65, $62, $64, $71, $7d
0b80c     83 7F 71 66 
0b810     6A 72 74 6E 
0b814     5F 55 4C 43 
0b818     38 2F 27 23 | 	byte	$83, $7f, $71, $66, $6a, $72, $74, $6e, $5f, $55, $4c, $43, $38, $2f, $27, $23
0b81c     20 22 2C 3A 
0b820     4A 58 6B 78 
0b824     88 97 A7 B7 
0b828     BD BB C0 C1 | 	byte	$20, $22, $2c, $3a, $4a, $58, $6b, $78, $88, $97, $a7, $b7, $bd, $bb, $c0, $c1
0b82c     B7 A7 94 87 
0b830     7C 71 61 4E 
0b834     3C 31 31 30 
0b838     27 0D 00 02 | 	byte	$b7, $a7, $94, $87, $7c, $71, $61, $4e, $3c, $31, $31, $30, $27, $0d, $00, $02
0b83c     16 21 22 1F 
0b840     21 3B 66 86 
0b844     96 98 9A A6 
0b848     B9 C1 B1 93 | 	byte	$16, $21, $22, $1f, $21, $3b, $66, $86, $96, $98, $9a, $a6, $b9, $c1, $b1, $93
0b84c     7F 7D 85 8B 
0b850     86 79 76 80 
0b854     8B 87 77 68 
0b858     69 71 71 5F | 	byte	$7f, $7d, $85, $8b, $86, $79, $76, $80, $8b, $87, $77, $68, $69, $71, $71, $5f
0b85c     4F 49 46 49 
0b860     52 56 57 55 
0b864     4F 48 42 44 
0b868     4F 5A 61 68 | 	byte	$4f, $49, $46, $49, $52, $56, $57, $55, $4f, $48, $42, $44, $4f, $5a, $61, $68
0b86c     78 91 A9 B5 
0b870     B3 A5 97 8F 
0b874     8D 8F 94 98 
0b878     94 90 98 9F | 	byte	$78, $91, $a9, $b5, $b3, $a5, $97, $8f, $8d, $8f, $94, $98, $94, $90, $98, $9f
0b87c     A4 A6 A4 9F 
0b880     9A 98 94 90 
0b884     8B 83 79 78 
0b888     80 8D 96 96 | 	byte	$a4, $a6, $a4, $9f, $9a, $98, $94, $90, $8b, $83, $79, $78, $80, $8d, $96, $96
0b88c     93 8D 8D 8F 
0b890     93 95 99 9A 
0b894     9B 9D A4 A5 
0b898     A4 A7 A9 A8 | 	byte	$93, $8d, $8d, $8f, $93, $95, $99, $9a, $9b, $9d, $a4, $a5, $a4, $a7, $a9, $a8
0b89c     A1 92 85 7E 
0b8a0     7B 77 71 6E 
0b8a4     7B 98 BB DB 
0b8a8     E6 E5 E5 E5 | 	byte	$a1, $92, $85, $7e, $7b, $77, $71, $6e, $7b, $98, $bb, $db, $e6, $e5, $e5, $e5
0b8ac     E5 E5 E5 E5 
0b8b0     E5          | 	byte	$e5[5]
0b8b1     DC C8 B7 A0 
0b8b5     8F 8A 86 79 
0b8b9     63 52 4D 55 
0b8bd     59 4C 3B 31 | 	byte	$dc, $c8, $b7, $a0, $8f, $8a, $86, $79, $63, $52, $4d, $55, $59, $4c, $3b, $31
0b8c1     30 32 35 33 
0b8c5     33 3B 4A 56 
0b8c9     5E 66 74 85 
0b8cd     95 9F A1 99 | 	byte	$30, $32, $35, $33, $33, $3b, $4a, $56, $5e, $66, $74, $85, $95, $9f, $a1, $99
0b8d1     95 9F AB AC 
0b8d5     A4 98 93 93 
0b8d9     92 87 75 66 
0b8dd     5F 57 46 34 | 	byte	$95, $9f, $ab, $ac, $a4, $98, $93, $93, $92, $87, $75, $66, $5f, $57, $46, $34
0b8e1     29 25 2F 41 
0b8e5     50 66 85 A8 
0b8e9     C9 E3 E4 E4 
0b8ed     E4 E4 E4 DA | 	byte	$29, $25, $2f, $41, $50, $66, $85, $a8, $c9, $e3, $e4, $e4, $e4, $e4, $e4, $da
0b8f1     CE C0 B4 A9 
0b8f5     AA B0 B9 BE 
0b8f9     C0 B9 B3 A6 
0b8fd     8F 75 64 55 | 	byte	$ce, $c0, $b4, $a9, $aa, $b0, $b9, $be, $c0, $b9, $b3, $a6, $8f, $75, $64, $55
0b901     45 38 2F 32 
0b905     36 3B 46 54 
0b909     66 74 70 5F 
0b90d     4C 3F 42 53 | 	byte	$45, $38, $2f, $32, $36, $3b, $46, $54, $66, $74, $70, $5f, $4c, $3f, $42, $53
0b911     61 66 6A 70 
0b915     79 86 8E 8C 
0b919     87 82 80 82 
0b91d     81 7D 78 7B | 	byte	$61, $66, $6a, $70, $79, $86, $8e, $8c, $87, $82, $80, $82, $81, $7d, $78, $7b
0b921     81 85 87 84 
0b925     83 8B 96 98 
0b929     8C 78 6B 62 
0b92d     61 61 5B 4C | 	byte	$81, $85, $87, $84, $83, $8b, $96, $98, $8c, $78, $6b, $62, $61, $61, $5b, $4c
0b931     3B 27 19 19 
0b935     21 24 29 32 
0b939     45 56 60 68 
0b93d     70 80 95 9D | 	byte	$3b, $27, $19, $19, $21, $24, $29, $32, $45, $56, $60, $68, $70, $80, $95, $9d
0b941     8D 66 4B 3C 
0b945     39 37 33 30 
0b949     36 48 60 73 
0b94d     81 8F 9C 9C | 	byte	$8d, $66, $4b, $3c, $39, $37, $33, $30, $36, $48, $60, $73, $81, $8f, $9c, $9c
0b951     91 84 7B 7C 
0b955     7E 7D 7C 78 
0b959     79 7D 7F 7E 
0b95d     7C 7D 7C 76 | 	byte	$91, $84, $7b, $7c, $7e, $7d, $7c, $78, $79, $7d, $7f, $7e, $7c, $7d, $7c, $76
0b961     65 55 47 3D 
0b965     3B 3E 4A 56 
0b969     61 65 62 61 
0b96d     6B 7B 91 A6 | 	byte	$65, $55, $47, $3d, $3b, $3e, $4a, $56, $61, $65, $62, $61, $6b, $7b, $91, $a6
0b971     AC A5 9F A7 
0b975     B7 D0 E0 E2 
0b979     DB D4 CD C9 
0b97d     CE D7 DA D1 | 	byte	$ac, $a5, $9f, $a7, $b7, $d0, $e0, $e2, $db, $d4, $cd, $c9, $ce, $d7, $da, $d1
0b981     C0 AB 96 85 
0b985     75 61 4F 3F 
0b989     35 35 3C 46 
0b98d     4D 5C 67 78 | 	byte	$c0, $ab, $96, $85, $75, $61, $4f, $3f, $35, $35, $3c, $46, $4d, $5c, $67, $78
0b991     8D 9B 9F A2 
0b995     A8 AD AC A4 
0b999     9F A1 AC BC 
0b99d     C0 BB BB C5 | 	byte	$8d, $9b, $9f, $a2, $a8, $ad, $ac, $a4, $9f, $a1, $ac, $bc, $c0, $bb, $bb, $c5
0b9a1     CF D0 CB BE 
0b9a5     AD A7 AA AC 
0b9a9     A5 98 8B 83 
0b9ad     85 8C 91 8D | 	byte	$cf, $d0, $cb, $be, $ad, $a7, $aa, $ac, $a5, $98, $8b, $83, $85, $8c, $91, $8d
0b9b1     88 88 86 7D 
0b9b5     7B 7A 7B 78 
0b9b9     75 73 72 78 
0b9bd     80 81 79 71 | 	byte	$88, $88, $86, $7d, $7b, $7a, $7b, $78, $75, $73, $72, $78, $80, $81, $79, $71
0b9c1     6A 66 64 61 
0b9c5     5F 63 6B 76 
0b9c9     82 86 86 86 
0b9cd     8B 89 82 79 | 	byte	$6a, $66, $64, $61, $5f, $63, $6b, $76, $82, $86, $86, $86, $8b, $89, $82, $79
0b9d1     6D 68 67 70 
0b9d5     7C 8B 90 87 
0b9d9     82 86 8E 8E 
0b9dd     88 82 84 8D | 	byte	$6d, $68, $67, $70, $7c, $8b, $90, $87, $82, $86, $8e, $8e, $88, $82, $84, $8d
0b9e1     93 98 A3 B9 
0b9e5     D3 E4 E4 E4 
0b9e9     E4 DF D7 C8 
0b9ed     B3 A2 94 89 | 	byte	$93, $98, $a3, $b9, $d3, $e4, $e4, $e4, $e4, $df, $d7, $c8, $b3, $a2, $94, $89
0b9f1     80 6F 6C 72 
0b9f5     81 89 88 84 
0b9f9     7B 74 69 60 
0b9fd     58 5A 5E 60 | 	byte	$80, $6f, $6c, $72, $81, $89, $88, $84, $7b, $74, $69, $60, $58, $5a, $5e, $60
0ba01     62 6D 7C 80 
0ba05     78 68 5B 54 
0ba09     52 4A 3C 2B 
0ba0d     1D 13 19 23 | 	byte	$62, $6d, $7c, $80, $78, $68, $5b, $54, $52, $4a, $3c, $2b, $1d, $13, $19, $23
0ba11     21 21 32 4D 
0ba15     67 7D 85 83 
0ba19     83 8E 9D A5 
0ba1d     A9 AB AE B2 | 	byte	$21, $21, $32, $4d, $67, $7d, $85, $83, $83, $8e, $9d, $a5, $a9, $ab, $ae, $b2
0ba21     B5 B0 AE B3 
0ba25     B8 B3 9C 7B 
0ba29     61 53 49 3D 
0ba2d     30 22 1C 1F | 	byte	$b5, $b0, $ae, $b3, $b8, $b3, $9c, $7b, $61, $53, $49, $3d, $30, $22, $1c, $1f
0ba31     2C 38 3D 42 
0ba35     47 4E 4E 48 
0ba39     45 4F 63 75 
0ba3d     82 8D 96 A1 | 	byte	$2c, $38, $3d, $42, $47, $4e, $4e, $48, $45, $4f, $63, $75, $82, $8d, $96, $a1
0ba41     A9 AB AA A5 
0ba45     9F 9B 9C 9E 
0ba49     99 8F 85 7D 
0ba4d     7D 7B 69 53 | 	byte	$a9, $ab, $aa, $a5, $9f, $9b, $9c, $9e, $99, $8f, $85, $7d, $7d, $7b, $69, $53
0ba51     43 38 2F 2C 
0ba55     2E 29 21 1C 
0ba59     22 2D 35 39 
0ba5d     45 4E 55 5B | 	byte	$43, $38, $2f, $2c, $2e, $29, $21, $1c, $22, $2d, $35, $39, $45, $4e, $55, $5b
0ba61     5D 62 74 89 
0ba65     99 A2 A0 9A 
0ba69     96 91 87 78 
0ba6d     6B 6D 71 73 | 	byte	$5d, $62, $74, $89, $99, $a2, $a0, $9a, $96, $91, $87, $78, $6b, $6d, $71, $73
0ba71     74 74 79 88 
0ba75     98 A4 AD B5 
0ba79     BC C1 BF BA 
0ba7d     B8 B9 BF C9 | 	byte	$74, $74, $79, $88, $98, $a4, $ad, $b5, $bc, $c1, $bf, $ba, $b8, $b9, $bf, $c9
0ba81     D0 CA B7 A5 
0ba85     9B 9B A1 A3 
0ba89     9D 8E 72 5D 
0ba8d     4F 4F 54 5D | 	byte	$d0, $ca, $b7, $a5, $9b, $9b, $a1, $a3, $9d, $8e, $72, $5d, $4f, $4f, $54, $5d
0ba91     70 87 9C A8 
0ba95     A8 9A 8B 87 
0ba99     91 9E A1 98 
0ba9d     91 96 A1 AE | 	byte	$70, $87, $9c, $a8, $a8, $9a, $8b, $87, $91, $9e, $a1, $98, $91, $96, $a1, $ae
0baa1     C4 DF E5 E5 
0baa5     E5 E5 D3 C5 
0baa9     BA AC 9D 8E 
0baad     84 81 79 73 | 	byte	$c4, $df, $e5, $e5, $e5, $e5, $d3, $c5, $ba, $ac, $9d, $8e, $84, $81, $79, $73
0bab1     76 84 9A A5 
0bab5     9D 84 6E 69 
0bab9     68 5E 49 36 
0babd     37 46 4F 4D | 	byte	$76, $84, $9a, $a5, $9d, $84, $6e, $69, $68, $5e, $49, $36, $37, $46, $4f, $4d
0bac1     49 49 4B 54 
0bac5     5F 6E 7D 89 
0bac9     8E 8A 83 7E 
0bacd     7C 7E 85 8C | 	byte	$49, $49, $4b, $54, $5f, $6e, $7d, $89, $8e, $8a, $83, $7e, $7c, $7e, $85, $8c
0bad1     87 78 69 68 
0bad5     6E 79 7A 6E 
0bad9     62 5F 60 62 
0badd     6A 77 88 A0 | 	byte	$87, $78, $69, $68, $6e, $79, $7a, $6e, $62, $5f, $60, $62, $6a, $77, $88, $a0
0bae1     BA CF E1 E4 
0bae5     E4 E3 E4 E4 
0bae9     E4 E4 D7 C2 
0baed     AA 91 7C 6D | 	byte	$ba, $cf, $e1, $e4, $e4, $e3, $e4, $e4, $e4, $e4, $d7, $c2, $aa, $91, $7c, $6d
0baf1     66 66 62 69 
0baf5     75 84 85 75 
0baf9     5B 4B 45 3F 
0bafd     41 4F 5E 66 | 	byte	$66, $66, $62, $69, $75, $84, $85, $75, $5b, $4b, $45, $3f, $41, $4f, $5e, $66
0bb01     61 58 5C 6B 
0bb05     82 98 A2 A4 
0bb09     9B 91 8B 81 
0bb0d     7B 7B 81 83 | 	byte	$61, $58, $5c, $6b, $82, $98, $a2, $a4, $9b, $91, $8b, $81, $7b, $7b, $81, $83
0bb11     78 66 55 4D 
0bb15     4C 54 53 4C 
0bb19     3F 31 28 29 
0bb1d     36 48 5C 66 | 	byte	$78, $66, $55, $4d, $4c, $54, $53, $4c, $3f, $31, $28, $29, $36, $48, $5c, $66
0bb21     67 67 69 70 
0bb25     77 78 74 65 
0bb29     5A 50 4C 49 
0bb2d     46 47 4D 54 | 	byte	$67, $67, $69, $70, $77, $78, $74, $65, $5a, $50, $4c, $49, $46, $47, $4d, $54
0bb31     5C 61 66 69 
0bb35     6B 68 5E 5B 
0bb39     57 5A 61 6E 
0bb3d     7E 88 8B 8E | 	byte	$5c, $61, $66, $69, $6b, $68, $5e, $5b, $57, $5a, $61, $6e, $7e, $88, $8b, $8e
0bb41     97 A1 A8 B0 
0bb45     B8 BA B5 A8 
0bb49     A0 99 8D 77 
0bb4d     66 57 4F 49 | 	byte	$97, $a1, $a8, $b0, $b8, $ba, $b5, $a8, $a0, $99, $8d, $77, $66, $57, $4f, $49
0bb51     42 38 30 27 
0bb55     22 21 22 21 
0bb59     23 29 33 3E 
0bb5d     4B 5D 6C 78 | 	byte	$42, $38, $30, $27, $22, $21, $22, $21, $23, $29, $33, $3e, $4b, $5d, $6c, $78
0bb61     7E 86 8A 8C 
0bb65     8A 82 79 79 
0bb69     7A 7C 7B 7C 
0bb6d     86 91 9C AC | 	byte	$7e, $86, $8a, $8c, $8a, $82, $79, $79, $7a, $7c, $7b, $7c, $86, $91, $9c, $ac
0bb71     BE CE E1 E4 
0bb75     E4 E4 D8 C3 
0bb79     B5 B1 B0 A7 
0bb7d     9B 8C 7F 7C | 	byte	$be, $ce, $e1, $e4, $e4, $e4, $d8, $c3, $b5, $b1, $b0, $a7, $9b, $8c, $7f, $7c
0bb81     81 83 7E 7B 
0bb85     7E 87 8E 8E 
0bb89     7D 66 58 5C 
0bb8d     6A 76 7C 7D | 	byte	$81, $83, $7e, $7b, $7e, $87, $8e, $8e, $7d, $66, $58, $5c, $6a, $76, $7c, $7d
0bb91     82 8C 93 90 
0bb95     85 7D 81 89 
0bb99     83 6E 5C 5F 
0bb9d     7B 95 A6 AF | 	byte	$82, $8c, $93, $90, $85, $7d, $81, $89, $83, $6e, $5c, $5f, $7b, $95, $a6, $af
0bba1     B8 BE B8 AE 
0bba5     AA B3 C1 C9 
0bba9     C0 B2 AB B5 
0bbad     C4 CB CA C5 | 	byte	$b8, $be, $b8, $ae, $aa, $b3, $c1, $c9, $c0, $b2, $ab, $b5, $c4, $cb, $ca, $c5
0bbb1     C8 D9 E4 E4 
0bbb5     C0 A1 87 6E 
0bbb9     5E 4D 39 2B 
0bbbd     2B 34 38 3A | 	byte	$c8, $d9, $e4, $e4, $c0, $a1, $87, $6e, $5e, $4d, $39, $2b, $2b, $34, $38, $3a
0bbc1     42 52 6E 8D 
0bbc5     A2 A1 9C 97 
0bbc9     8F 8B 8D 91 
0bbcd     95 98 9C 99 | 	byte	$42, $52, $6e, $8d, $a2, $a1, $9c, $97, $8f, $8b, $8d, $91, $95, $98, $9c, $99
0bbd1     8F 86 85 87 
0bbd5     8D 92 90 88 
0bbd9     82 87 93 98 
0bbdd     9A 9B 9E A6 | 	byte	$8f, $86, $85, $87, $8d, $92, $90, $88, $82, $87, $93, $98, $9a, $9b, $9e, $a6
0bbe1     A7 9D 8B 83 
0bbe5     86 96 9D 97 
0bbe9     8D 8E 9B A8 
0bbed     A7 99 87 7A | 	byte	$a7, $9d, $8b, $83, $86, $96, $9d, $97, $8d, $8e, $9b, $a8, $a7, $99, $87, $7a
0bbf1     76 7C 80 76 
0bbf5     66 55 4B 48 
0bbf9     4F 55 53 50 
0bbfd     57 66 6F 71 | 	byte	$76, $7c, $80, $76, $66, $55, $4b, $48, $4f, $55, $53, $50, $57, $66, $6f, $71
0bc01     71 7C 90 A3 
0bc05     A7 9D 95 90 
0bc09     91 9D A9 A5 
0bc0d     98 85 73 70 | 	byte	$71, $7c, $90, $a3, $a7, $9d, $95, $90, $91, $9d, $a9, $a5, $98, $85, $73, $70
0bc11     6F 6F 68 56 
0bc15     46 3D 3C 3D 
0bc19     3A 3C 3E 41 
0bc1d     3B 31 2F 36 | 	byte	$6f, $6f, $68, $56, $46, $3d, $3c, $3d, $3a, $3c, $3e, $41, $3b, $31, $2f, $36
0bc21     3F 4D 5B 64 
0bc25     66 6B 78 8B 
0bc29     97 9B 9D 98 
0bc2d     8F 88 86 81 | 	byte	$3f, $4d, $5b, $64, $66, $6b, $78, $8b, $97, $9b, $9d, $98, $8f, $88, $86, $81
0bc31     77 68 6A 74 
0bc35     7B 7A 72 77 
0bc39     82 82 7A 75 
0bc3d     7A 87 94 95 | 	byte	$77, $68, $6a, $74, $7b, $7a, $72, $77, $82, $82, $7a, $75, $7a, $87, $94, $95
0bc41     8E 8C 96 9C 
0bc45     9A 8C 73 59 
0bc49     50 55 4E 37 
0bc4d     1B 0F 14 20 | 	byte	$8e, $8c, $96, $9c, $9a, $8c, $73, $59, $50, $55, $4e, $37, $1b, $0f, $14, $20
0bc51     25 25 21 21 
0bc55     28 2A 2A 2B 
0bc59     2B 32 42 4A 
0bc5d     47 42 47 52 | 	byte	$25, $25, $21, $21, $28, $2a, $2a, $2b, $2b, $32, $42, $4a, $47, $42, $47, $52
0bc61     5E 62 5C 5C 
0bc65     69 7F 90 95 
0bc69     9B 9F 9F 9F 
0bc6d     A5 B3 C2 C8 | 	byte	$5e, $62, $5c, $5c, $69, $7f, $90, $95, $9b, $9f, $9f, $9f, $a5, $b3, $c2, $c8
0bc71     C5 C6 D5 E1 
0bc75     DE D2 CA CF 
0bc79     DF E6 E5 E3 
0bc7d     CC BA AE A6 | 	byte	$c5, $c6, $d5, $e1, $de, $d2, $ca, $cf, $df, $e6, $e5, $e3, $cc, $ba, $ae, $a6
0bc81     99 88 75 76 
0bc85     80 88 89 88 
0bc89     89 8E 95 97 
0bc8d     94 8E 8C 90 | 	byte	$99, $88, $75, $76, $80, $88, $89, $88, $89, $8e, $95, $97, $94, $8e, $8c, $90
0bc91     90 85 72 63 
0bc95     66 70 81 8B 
0bc99     92 95 97 93 
0bc9d     8D 8C 8E 8F | 	byte	$90, $85, $72, $63, $66, $70, $81, $8b, $92, $95, $97, $93, $8d, $8c, $8e, $8f
0bca1     8E 89 81 82 
0bca5     92 A8 BA B7 
0bca9     B0 AA A9 AF 
0bcad     AE A4 97 8D | 	byte	$8e, $89, $81, $82, $92, $a8, $ba, $b7, $b0, $aa, $a9, $af, $ae, $a4, $97, $8d
0bcb1     85 85 87 86 
0bcb5     82 7F 81 7C 
0bcb9     6A 58 48 41 
0bcbd     41 3F 39 32 | 	byte	$85, $85, $87, $86, $82, $7f, $81, $7c, $6a, $58, $48, $41, $41, $3f, $39, $32
0bcc1     2D 32 42 5C 
0bcc5     73 8D A3 B3 
0bcc9     BB BA B5 AE 
0bccd     A5 9E 9A 98 | 	byte	$2d, $32, $42, $5c, $73, $8d, $a3, $b3, $bb, $ba, $b5, $ae, $a5, $9e, $9a, $98
0bcd1     94 8E 8A 8B 
0bcd5     89 88 8D 9B 
0bcd9     AA B7 BC B7 
0bcdd     B8 C2 D0 DB | 	byte	$94, $8e, $8a, $8b, $89, $88, $8d, $9b, $aa, $b7, $bc, $b7, $b8, $c2, $d0, $db
0bce1     D9 C5 AB 92 
0bce5     82 73 63 5F 
0bce9     63 67 67 68 
0bced     6D 75 7F 8E | 	byte	$d9, $c5, $ab, $92, $82, $73, $63, $5f, $63, $67, $67, $68, $6d, $75, $7f, $8e
0bcf1     A0 B2 BB BA 
0bcf5     AD A6 A7 A8 
0bcf9     A1 92 86 86 
0bcfd     8D 9A 9E 96 | 	byte	$a0, $b2, $bb, $ba, $ad, $a6, $a7, $a8, $a1, $92, $86, $86, $8d, $9a, $9e, $96
0bd01     8F 91 95 95 
0bd05     8D 81 74 66 
0bd09     5B 50 43 39 
0bd0d     35 36 3B 3C | 	byte	$8f, $91, $95, $95, $8d, $81, $74, $66, $5b, $50, $43, $39, $35, $36, $3b, $3c
0bd11     35 2D 2D 34 
0bd15     36 2F 23 22 
0bd19     2D 37 3A 35 
0bd1d     33 3D 4F 63 | 	byte	$35, $2d, $2d, $34, $36, $2f, $23, $22, $2d, $37, $3a, $35, $33, $3d, $4f, $63
0bd21     69 5E 5B 57 
0bd25     60 61 58 4B 
0bd29     48 4E 56 65 
0bd2d     6E 71 7B 8D | 	byte	$69, $5e, $5b, $57, $60, $61, $58, $4b, $48, $4e, $56, $65, $6e, $71, $7b, $8d
0bd31     A3 AC A7 A4 
0bd35     AA AF AA 9F 
0bd39     96 93 96 98 
0bd3d     96 94 92 90 | 	byte	$a3, $ac, $a7, $a4, $aa, $af, $aa, $9f, $96, $93, $96, $98, $96, $94, $92, $90
0bd41     8D 8E 95 9E 
0bd45     A4 A3 97 86 
0bd49     6E 59 44 31 
0bd4d     20 13 14 1C | 	byte	$8d, $8e, $95, $9e, $a4, $a3, $97, $86, $6e, $59, $44, $31, $20, $13, $14, $1c
0bd51     24 2A 2B 30 
0bd55     3C 4A 53 5C 
0bd59     66 6C 6F 6D 
0bd5d     65 62 69 70 | 	byte	$24, $2a, $2b, $30, $3c, $4a, $53, $5c, $66, $6c, $6f, $6d, $65, $62, $69, $70
0bd61     7A 81 82 81 
0bd65     89 9B A8 A0 
0bd69     88 77 76 7F 
0bd6d     84 7B 6D 67 | 	byte	$7a, $81, $82, $81, $89, $9b, $a8, $a0, $88, $77, $76, $7f, $84, $7b, $6d, $67
0bd71     70 7E 93 A4 
0bd75     B0 B2 B0 B5 
0bd79     C2 D5 DE D8 
0bd7d     CB C0 B9 B0 | 	byte	$70, $7e, $93, $a4, $b0, $b2, $b0, $b5, $c2, $d5, $de, $d8, $cb, $c0, $b9, $b0
0bd81     A4 8F 80 80 
0bd85     89 8C 7E 62 
0bd89     57 5D 63 5F 
0bd8d     52 40 3C 48 | 	byte	$a4, $8f, $80, $80, $89, $8c, $7e, $62, $57, $5d, $63, $5f, $52, $40, $3c, $48
0bd91     57 67 6D 67 
0bd95     63 63 76 8A 
0bd99     9E B3 C6 D3 
0bd9d     D9 DA D7 D6 | 	byte	$57, $67, $6d, $67, $63, $63, $76, $8a, $9e, $b3, $c6, $d3, $d9, $da, $d7, $d6
0bda1     D4 C9 B4 9F 
0bda5     92 8D 8E 93 
0bda9     9A A3 A8 A7 
0bdad     A2 97 8A 86 | 	byte	$d4, $c9, $b4, $9f, $92, $8d, $8e, $93, $9a, $a3, $a8, $a7, $a2, $97, $8a, $86
0bdb1     87 8B 83 70 
0bdb5     65 63 74 89 
0bdb9     99 A6 AC AA 
0bdbd     A5 A7 A3 92 | 	byte	$87, $8b, $83, $70, $65, $63, $74, $89, $99, $a6, $ac, $aa, $a5, $a7, $a3, $92
0bdc1     76 64 68 76 
0bdc5     84 8C 90 92 
0bdc9     99 9F A0 99 
0bdcd     8E 87 89 86 | 	byte	$76, $64, $68, $76, $84, $8c, $90, $92, $99, $9f, $a0, $99, $8e, $87, $89, $86
0bdd1     7A 6A 63 66 
0bdd5     71 80 89 8A 
0bdd9     83 7C 7D 88 
0bddd     90 8B 81 78 | 	byte	$7a, $6a, $63, $66, $71, $80, $89, $8a, $83, $7c, $7d, $88, $90, $8b, $81, $78
0bde1     78 80 81 7C 
0bde5     76 71 70 6E 
0bde9     65 61 61 62 
0bded     60 60 60 62 | 	byte	$78, $80, $81, $7c, $76, $71, $70, $6e, $65, $61, $61, $62, $60, $60, $60, $62
0bdf1     71 95 AF BF 
0bdf5     C6 C7 C3 BF 
0bdf9     B9 AB 9B 93 
0bdfd     8D 88 83 7D | 	byte	$71, $95, $af, $bf, $c6, $c7, $c3, $bf, $b9, $ab, $9b, $93, $8d, $88, $83, $7d
0be01     7B 87 9D AD 
0be05     AC 9E 8E 86 
0be09     83 79 67 5D 
0be0d     5F 61 5A 4F | 	byte	$7b, $87, $9d, $ad, $ac, $9e, $8e, $86, $83, $79, $67, $5d, $5f, $61, $5a, $4f
0be11     47 48 4D 54 
0be15     4F 4B 4A 4B 
0be19     4D 54 5B 62 
0be1d     68 6F 6D 65 | 	byte	$47, $48, $4d, $54, $4f, $4b, $4a, $4b, $4d, $54, $5b, $62, $68, $6f, $6d, $65
0be21     62 63 67 6B 
0be25     6A 60 63 66 
0be29     6A 73 84 96 
0be2d     A7 B0 B0 AC | 	byte	$62, $63, $67, $6b, $6a, $60, $63, $66, $6a, $73, $84, $96, $a7, $b0, $b0, $ac
0be31     A8 A4 9E 92 
0be35     85 70 68 6C 
0be39     71 6C 62 5A 
0be3d     55 57 53 42 | 	byte	$a8, $a4, $9e, $92, $85, $70, $68, $6c, $71, $6c, $62, $5a, $55, $57, $53, $42
0be41     2F 2C 3D 55 
0be45     5F 65 60 64 
0be49     75 84 7C 67 
0be4d     56 49 44 40 | 	byte	$2f, $2c, $3d, $55, $5f, $65, $60, $64, $75, $84, $7c, $67, $56, $49, $44, $40
0be51     39 2D 27 2D 
0be55     32 30 2D 31 
0be59     3E 4F 5A 5C 
0be5d     56 58 59 60 | 	byte	$39, $2d, $27, $2d, $32, $30, $2d, $31, $3e, $4f, $5a, $5c, $56, $58, $59, $60
0be61     6B 76 85 96 
0be65     A2 A7 AD B9 
0be69     C5 CC CD C6 
0be6d     C1 C6 CD D6 | 	byte	$6b, $76, $85, $96, $a2, $a7, $ad, $b9, $c5, $cc, $cd, $c6, $c1, $c6, $cd, $d6
0be71     D8 D5 D6 DA 
0be75     DD DB CF BF 
0be79     AF A7 A3 A3 
0be7d     A8 AE B2 B1 | 	byte	$d8, $d5, $d6, $da, $dd, $db, $cf, $bf, $af, $a7, $a3, $a3, $a8, $ae, $b2, $b1
0be81     AA A2 A2 B1 
0be85     C6 D0 C4 A3 
0be89     7F 69 67 6B 
0be8d     6E 69 66 6C | 	byte	$aa, $a2, $a2, $b1, $c6, $d0, $c4, $a3, $7f, $69, $67, $6b, $6e, $69, $66, $6c
0be91     74 78 7A 78 
0be95     77 78 76 6C 
0be99     64 62 6B 77 
0be9d     81 81 7D 75 | 	byte	$74, $78, $7a, $78, $77, $78, $76, $6c, $64, $62, $6b, $77, $81, $81, $7d, $75
0bea1     67 5D 57 56 
0bea5     54 53 50 4E 
0bea9     54 65 7E 91 
0bead     9A A3 B0 B6 | 	byte	$67, $5d, $57, $56, $54, $53, $50, $4e, $54, $65, $7e, $91, $9a, $a3, $b0, $b6
0beb1     B3 A9 9B 8D 
0beb5     80 7A 79 73 
0beb9     67 66 70 7D 
0bebd     82 7D 74 75 | 	byte	$b3, $a9, $9b, $8d, $80, $7a, $79, $73, $67, $66, $70, $7d, $82, $7d, $74, $75
0bec1     7A 81 83 7E 
0bec5     77 6D 6B 7B 
0bec9     95 A5 AB AD 
0becd     B4 BC C2 C4 | 	byte	$7a, $81, $83, $7e, $77, $6d, $6b, $7b, $95, $a5, $ab, $ad, $b4, $bc, $c2, $c4
0bed1     C7 C7 C2 BA 
0bed5     B7 B9 BC B6 
0bed9     AE AA A9 9E 
0bedd     89 6B 57 51 | 	byte	$c7, $c7, $c2, $ba, $b7, $b9, $bc, $b6, $ae, $aa, $a9, $9e, $89, $6b, $57, $51
0bee1     53 51 4C 44 
0bee5     42 4E 62 79 
0bee9     86 92 99 9C 
0beed     A5 B4 BF C7 | 	byte	$53, $51, $4c, $44, $42, $4e, $62, $79, $86, $92, $99, $9c, $a5, $b4, $bf, $c7
0bef1     C6 C0 BC BE 
0bef5     BD B4 A9 A2 
0bef9     9F 9F 99 88 
0befd     70 5B 54 50 | 	byte	$c6, $c0, $bc, $be, $bd, $b4, $a9, $a2, $9f, $9f, $99, $88, $70, $5b, $54, $50
0bf01     4C 4A 49 4C 
0bf05     4C 4D 47 45 
0bf09     3E 37 2F 25 
0bf0d     18 0E 0A 11 | 	byte	$4c, $4a, $49, $4c, $4c, $4d, $47, $45, $3e, $37, $2f, $25, $18, $0e, $0a, $11
0bf11     1F 35 4B 5D 
0bf15     6A 72 78 79 
0bf19     7B 7C 74 61 
0bf1d     4C 38 2C 2C | 	byte	$1f, $35, $4b, $5d, $6a, $72, $78, $79, $7b, $7c, $74, $61, $4c, $38, $2c, $2c
0bf21     32 32 2B 2A 
0bf25     34 48 62 74 
0bf29     7D 7D 80 8C 
0bf2d     A3 BA C3 C5 | 	byte	$32, $32, $2b, $2a, $34, $48, $62, $74, $7d, $7d, $80, $8c, $a3, $ba, $c3, $c5
0bf31     BD B4 B7 BF 
0bf35     C7 CC C2 B0 
0bf39     A4 A1 9E 96 
0bf3d     8E 86 7B 77 | 	byte	$bd, $b4, $b7, $bf, $c7, $cc, $c2, $b0, $a4, $a1, $9e, $96, $8e, $86, $7b, $77
0bf41     73 6E 63 5D 
0bf45     5D 5C 5F 60 
0bf49     53 44 3B 3A 
0bf4d     3D 44 44 46 | 	byte	$73, $6e, $63, $5d, $5d, $5c, $5f, $60, $53, $44, $3b, $3a, $3d, $44, $44, $46
0bf51     59 6F 77 75 
0bf55     6E 69 6D 7A 
0bf59     83 84 88 90 
0bf5d     93 8F 86 73 | 	byte	$59, $6f, $77, $75, $6e, $69, $6d, $7a, $83, $84, $88, $90, $93, $8f, $86, $73
0bf61     63 5A 54 4D 
0bf65     47 47 55 69 
0bf69     74 7A 80 8E 
0bf6d     A5 C1 D3 D3 | 	byte	$63, $5a, $54, $4d, $47, $47, $55, $69, $74, $7a, $80, $8e, $a5, $c1, $d3, $d3
0bf71     C4 BA B8 BA 
0bf75     B8 B0 A9 A9 
0bf79     B0 B9 BD BC 
0bf7d     B0 A5 A4 B1 | 	byte	$c4, $ba, $b8, $ba, $b8, $b0, $a9, $a9, $b0, $b9, $bd, $bc, $b0, $a5, $a4, $b1
0bf81     BE BA AA 95 
0bf85     7E 6E 60 57 
0bf89     4F 4B 48 42 
0bf8d     3C 3A 3B 42 | 	byte	$be, $ba, $aa, $95, $7e, $6e, $60, $57, $4f, $4b, $48, $42, $3c, $3a, $3b, $42
0bf91     52 6F 80 86 
0bf95     87 85 8E A7 
0bf99     BF C9 BB A8 
0bf9d     9F A3 A7 A5 | 	byte	$52, $6f, $80, $86, $87, $85, $8e, $a7, $bf, $c9, $bb, $a8, $9f, $a3, $a7, $a5
0bfa1     9E 9B A0 A0 
0bfa5     99 91 8D 92 
0bfa9     A4 B4 B5 A1 
0bfad     8F 90 9F A6 | 	byte	$9e, $9b, $a0, $a0, $99, $91, $8d, $92, $a4, $b4, $b5, $a1, $8f, $90, $9f, $a6
0bfb1     9E 8D 81 84 
0bfb5     93 9E 9D 97 
0bfb9     92 93 94 97 
0bfbd     91 8B 93 A0 | 	byte	$9e, $8d, $81, $84, $93, $9e, $9d, $97, $92, $93, $94, $97, $91, $8b, $93, $a0
0bfc1     A3 9D 93 8D 
0bfc5     94 9B 96 8F 
0bfc9     8A 86 86 83 
0bfcd     75 64 59 5E | 	byte	$a3, $9d, $93, $8d, $94, $9b, $96, $8f, $8a, $86, $86, $83, $75, $64, $59, $5e
0bfd1     65 62 62 6A 
0bfd5     71 73 73 73 
0bfd9     76 78 76 66 
0bfdd     5C 56 59 5B | 	byte	$65, $62, $62, $6a, $71, $73, $73, $73, $76, $78, $76, $66, $5c, $56, $59, $5b
0bfe1     55 4D 48 4E 
0bfe5     5B 5F 62 6D 
0bfe9     80 8E 93 96 
0bfed     9A 9C A0 A8 | 	byte	$55, $4d, $48, $4e, $5b, $5f, $62, $6d, $80, $8e, $93, $96, $9a, $9c, $a0, $a8
0bff1     AB A0 8C 7A 
0bff5     76 82 8E 91 
0bff9     96 A5 B8 C2 
0bffd     C3 C3 C5 C2 | 	byte	$ab, $a0, $8c, $7a, $76, $82, $8e, $91, $96, $a5, $b8, $c2, $c3, $c3, $c5, $c2
0c001     B7 AA 98 89 
0c005     76 68 5F 51 
0c009     41 35 2E 2B 
0c00d     32 40 47 4E | 	byte	$b7, $aa, $98, $89, $76, $68, $5f, $51, $41, $35, $2e, $2b, $32, $40, $47, $4e
0c011     49 41 41 4B 
0c015     51 4B 47 4F 
0c019     65 7B 83 7F 
0c01d     7A 84 8F 92 | 	byte	$49, $41, $41, $4b, $51, $4b, $47, $4f, $65, $7b, $83, $7f, $7a, $84, $8f, $92
0c021     89 77 64 5F 
0c025     5A 57 5E 6D 
0c029     7C 89 96 9D 
0c02d     9B 93 91 93 | 	byte	$89, $77, $64, $5f, $5a, $57, $5e, $6d, $7c, $89, $96, $9d, $9b, $93, $91, $93
0c031     8E 82 6E 60 
0c035     5A 54 50 56 
0c039     61 6E 74 73 
0c03d     73 77 75 71 | 	byte	$8e, $82, $6e, $60, $5a, $54, $50, $56, $61, $6e, $74, $73, $73, $77, $75, $71
0c041     66 4F 41 43 
0c045     43 3B 2B 23 
0c049     28 33 3A 38 
0c04d     33 33 3E 48 | 	byte	$66, $4f, $41, $43, $43, $3b, $2b, $23, $28, $33, $3a, $38, $33, $33, $3e, $48
0c051     4B 49 4B 57 
0c055     6A 7C 7D 74 
0c059     72 81 97 9F 
0c05d     97 8B 87 8B | 	byte	$4b, $49, $4b, $57, $6a, $7c, $7d, $74, $72, $81, $97, $9f, $97, $8b, $87, $8b
0c061     9A A2 9F 94 
0c065     94 A4 B9 C8 
0c069     CE D3 DD E5 
0c06d     E5 E5 E5 E5 | 	byte	$9a, $a2, $9f, $94, $94, $a4, $b9, $c8, $ce, $d3, $dd, $e5, $e5, $e5, $e5, $e5
0c071     E5 E5 E5 E5 
0c075     E5 E5       | 	byte	$e5[6]
0c077     D9 BF AA 98 
0c07b     94 9F AE B1 
0c07f     AB A1 93 85 
0c083     7A 72 6E 6B | 	byte	$d9, $bf, $aa, $98, $94, $9f, $ae, $b1, $ab, $a1, $93, $85, $7a, $72, $6e, $6b
0c087     61 59 47 3A 
0c08b     30 35 43 4E 
0c08f     53 50 51 64 
0c093     7B 8F 91 80 | 	byte	$61, $59, $47, $3a, $30, $35, $43, $4e, $53, $50, $51, $64, $7b, $8f, $91, $80
0c097     71 6D 71 6C 
0c09b     5C 4E 4D 53 
0c09f     4F 4B 4D 5B 
0c0a3     6F 85 93 9B | 	byte	$71, $6d, $71, $6c, $5c, $4e, $4d, $53, $4f, $4b, $4d, $5b, $6f, $85, $93, $9b
0c0a7     9C 9E A5 AB 
0c0ab     A4 93 83 82 
0c0af     8B 93 9A 9E 
0c0b3     A4 AC AF AB | 	byte	$9c, $9e, $a5, $ab, $a4, $93, $83, $82, $8b, $93, $9a, $9e, $a4, $ac, $af, $ab
0c0b7     9D 8F 85 7A 
0c0bb     69 54 43 41 
0c0bf     4E 61 70 82 
0c0c3     99 B8 CE D7 | 	byte	$9d, $8f, $85, $7a, $69, $54, $43, $41, $4e, $61, $70, $82, $99, $b8, $ce, $d7
0c0c7     DB D8 D4 D5 
0c0cb     D6 C6 AD A0 
0c0cf     9F A9 B5 B8 
0c0d3     AF AA AC AB | 	byte	$db, $d8, $d4, $d5, $d6, $c6, $ad, $a0, $9f, $a9, $b5, $b8, $af, $aa, $ac, $ab
0c0d7     A9 A1 8E 73 
0c0db     5E 52 49 3D 
0c0df     2F 27 2B 3E 
0c0e3     55 64 71 82 | 	byte	$a9, $a1, $8e, $73, $5e, $52, $49, $3d, $2f, $27, $2b, $3e, $55, $64, $71, $82
0c0e7     97 AD B7 B9 
0c0eb     B7 B5 B6 B2 
0c0ef     A9 A5 A6 AA 
0c0f3     AD AD A8 9E | 	byte	$97, $ad, $b7, $b9, $b7, $b5, $b6, $b2, $a9, $a5, $a6, $aa, $ad, $ad, $a8, $9e
0c0f7     9A 9C 9D 95 
0c0fb     89 7A 68 5B 
0c0ff     4F 42 32 23 
0c103     17 10 14 14 | 	byte	$9a, $9c, $9d, $95, $89, $7a, $68, $5b, $4f, $42, $32, $23, $17, $10, $14, $14
0c107     15 1A 23 2C 
0c10b     31 35 3E 47 
0c10f     4C 4F 4A 45 
0c113     47 4F 4D 55 | 	byte	$15, $1a, $23, $2c, $31, $35, $3e, $47, $4c, $4f, $4a, $45, $47, $4f, $4d, $55
0c117     64 71 71 6C 
0c11b     63 64 67 6A 
0c11f     66 5C 4F 48 
0c123     4D 60 79 8E | 	byte	$64, $71, $71, $6c, $63, $64, $67, $6a, $66, $5c, $4f, $48, $4d, $60, $79, $8e
0c127     9D A4 A7 AA 
0c12b     AF B7 BC BA 
0c12f     B3 AD A9 A6 
0c133     A4 A7 A5 A4 | 	byte	$9d, $a4, $a7, $aa, $af, $b7, $bc, $ba, $b3, $ad, $a9, $a6, $a4, $a7, $a5, $a4
0c137     A6 A4 9F 95 
0c13b     89 7E 7A 78 
0c13f     6E 5D 4E 48 
0c143     4A 51 53 4F | 	byte	$a6, $a4, $9f, $95, $89, $7e, $7a, $78, $6e, $5d, $4e, $48, $4a, $51, $53, $4f
0c147     47 4A 4F 56 
0c14b     5B 5C 56 54 
0c14f     5C 66 6C 67 
0c153     62 6A 79 85 | 	byte	$47, $4a, $4f, $56, $5b, $5c, $56, $54, $5c, $66, $6c, $67, $62, $6a, $79, $85
0c157     81 7A 79 7C 
0c15b     83 83 7D 76 
0c15f     74 77 78 75 
0c163     77 80 91 A1 | 	byte	$81, $7a, $79, $7c, $83, $83, $7d, $76, $74, $77, $78, $75, $77, $80, $91, $a1
0c167     AA AB A5 A3 
0c16b     A7 AC AB AB 
0c16f     B0 C1 D1 D6 
0c173     D3 CD CC D2 | 	byte	$aa, $ab, $a5, $a3, $a7, $ac, $ab, $ab, $b0, $c1, $d1, $d6, $d3, $cd, $cc, $d2
0c177     D4 CB BA A5 
0c17b     94 87 7F 74 
0c17f     61 58 60 63 
0c183     52 41 37 39 | 	byte	$d4, $cb, $ba, $a5, $94, $87, $7f, $74, $61, $58, $60, $63, $52, $41, $37, $39
0c187     41 49 46 41 
0c18b     41 47 52 60 
0c18f     6E 79 82 8D 
0c193     96 9A 9A 9A | 	byte	$41, $49, $46, $41, $41, $47, $52, $60, $6e, $79, $82, $8d, $96, $9a, $9a, $9a
0c197     9C 9A 98 93 
0c19b     8B 89 8E 9B 
0c19f     AC B8 B8 B1 
0c1a3     B0 B4 BC C0 | 	byte	$9c, $9a, $98, $93, $8b, $89, $8e, $9b, $ac, $b8, $b8, $b1, $b0, $b4, $bc, $c0
0c1a7     B7 A8 9B 93 
0c1ab     8D 8D 8D 91 
0c1af     95 9A 9F A4 
0c1b3     A7 AA A5 9C | 	byte	$b7, $a8, $9b, $93, $8d, $8d, $8d, $91, $95, $9a, $9f, $a4, $a7, $aa, $a5, $9c
0c1b7     96 97 96 8A 
0c1bb     79 6C 6C 77 
0c1bf     88 91 91 8D 
0c1c3     8C 8F 9D A2 | 	byte	$96, $97, $96, $8a, $79, $6c, $6c, $77, $88, $91, $91, $8d, $8c, $8f, $9d, $a2
0c1c7     97 90 94 98 
0c1cb     8C 74 61 52 
0c1cf     4C 4E 50 53 
0c1d3     4C 48 4A 51 | 	byte	$97, $90, $94, $98, $8c, $74, $61, $52, $4c, $4e, $50, $53, $4c, $48, $4a, $51
0c1d7     5A 5D 60 5E 
0c1db     5E 5A 58 58 
0c1df     5A 61 6F 7C 
0c1e3     86 90 96 98 | 	byte	$5a, $5d, $60, $5e, $5e, $5a, $58, $58, $5a, $61, $6f, $7c, $86, $90, $96, $98
0c1e7     9B A2 A4 9F 
0c1eb     92 83 7B 7C 
0c1ef     83 89 90 93 
0c1f3     96 9E A9 B4 | 	byte	$9b, $a2, $a4, $9f, $92, $83, $7b, $7c, $83, $89, $90, $93, $96, $9e, $a9, $b4
0c1f7     C1 C6 BD AF 
0c1fb     9D 8C 75 66 
0c1ff     5C 54 4C 42 
0c203     3F 41 4F 66 | 	byte	$c1, $c6, $bd, $af, $9d, $8c, $75, $66, $5c, $54, $4c, $42, $3f, $41, $4f, $66
0c207     77 7D 74 5E 
0c20b     55 66 70 6F 
0c20f     62 51 4D 55 
0c213     60 64 62 65 | 	byte	$77, $7d, $74, $5e, $55, $66, $70, $6f, $62, $51, $4d, $55, $60, $64, $62, $65
0c217     73 85 90 8F 
0c21b     84 77 77 77 
0c21f     6D 5F 5F 67 
0c223     76 83 86 86 | 	byte	$73, $85, $90, $8f, $84, $77, $77, $77, $6d, $5f, $5f, $67, $76, $83, $86, $86
0c227     8E 9D A8 A7 
0c22b     98 7E 6A 6A 
0c22f     6B 6D 69 5F 
0c233     5F 65 70 77 | 	byte	$8e, $9d, $a8, $a7, $98, $7e, $6a, $6a, $6b, $6d, $69, $5f, $5f, $65, $70, $77
0c237     74 6B 68 67 
0c23b     67 66 58 47 
0c23f     3C 3A 40 49 
0c243     43 3A 3E 52 | 	byte	$74, $6b, $68, $67, $67, $66, $58, $47, $3c, $3a, $40, $49, $43, $3a, $3e, $52
0c247     65 66 5B 4E 
0c24b     53 5E 6C 73 
0c24f     70 67 5B 4F 
0c253     55 61 6A 6F | 	byte	$65, $66, $5b, $4e, $53, $5e, $6c, $73, $70, $67, $5b, $4f, $55, $61, $6a, $6f
0c257     77 83 94 A1 
0c25b     A5 A4 A7 B2 
0c25f     C4 CB C6 BE 
0c263     BF C2 C1 BC | 	byte	$77, $83, $94, $a1, $a5, $a4, $a7, $b2, $c4, $cb, $c6, $be, $bf, $c2, $c1, $bc
0c267     C4 D5 E4 E4 
0c26b     E4 E4 E4 E4 
0c26f     E3 E5 E1 DE 
0c273     DB CF BC A0 | 	byte	$c4, $d5, $e4, $e4, $e4, $e4, $e4, $e4, $e3, $e5, $e1, $de, $db, $cf, $bc, $a0
0c277     84 77 79 7B 
0c27b     79 75 70 6A 
0c27f     5B 4F 43 38 
0c283     32 35 35 3A | 	byte	$84, $77, $79, $7b, $79, $75, $70, $6a, $5b, $4f, $43, $38, $32, $35, $35, $3a
0c287     47 4F 59 6B 
0c28b     74 75 77 7D 
0c28f     7D 74 70 6D 
0c293     6A 5E 5A 5A | 	byte	$47, $4f, $59, $6b, $74, $75, $77, $7d, $7d, $74, $70, $6d, $6a, $5e, $5a, $5a
0c297     54 57 5D 64 
0c29b     67 6A 6A 6D 
0c29f     79 85 8E 92 
0c2a3     8F 86 88 92 | 	byte	$54, $57, $5d, $64, $67, $6a, $6a, $6d, $79, $85, $8e, $92, $8f, $86, $88, $92
0c2a7     A1 AA A7 9C 
0c2ab     95 9B A0 A4 
0c2af     A2 A3 A6 A6 
0c2b3     9D 8F 85 82 | 	byte	$a1, $aa, $a7, $9c, $95, $9b, $a0, $a4, $a2, $a3, $a6, $a6, $9d, $8f, $85, $82
0c2b7     7E 6E 62 62 
0c2bb     68 74 7C 7E 
0c2bf     89 A0 B4 C3 
0c2c3     C8 C0 B2 AC | 	byte	$7e, $6e, $62, $62, $68, $74, $7c, $7e, $89, $a0, $b4, $c3, $c8, $c0, $b2, $ac
0c2c7     AC AA A2 9B 
0c2cb     91 8B 89 86 
0c2cf     7A 63 55 51 
0c2d3     52 5B 67 6C | 	byte	$ac, $aa, $a2, $9b, $91, $8b, $89, $86, $7a, $63, $55, $51, $52, $5b, $67, $6c
0c2d7     6C 6C 6D 75 
0c2db     83 88 84 83 
0c2df     88 94 9B 9E 
0c2e3     9B 94 90 93 | 	byte	$6c, $6c, $6d, $75, $83, $88, $84, $83, $88, $94, $9b, $9e, $9b, $94, $90, $93
0c2e7     9C A4 A0 91 
0c2eb     89 84 7F 7A 
0c2ef     7B 80 85 86 
0c2f3     85 83 83 83 | 	byte	$9c, $a4, $a0, $91, $89, $84, $7f, $7a, $7b, $80, $85, $86, $85, $83, $83, $83
0c2f7     7F 75 6E 67 
0c2fb     5C 47 30 22 
0c2ff     24 25 26 2B 
0c303     37 3D 38 2D | 	byte	$7f, $75, $6e, $67, $5c, $47, $30, $22, $24, $25, $26, $2b, $37, $3d, $38, $2d
0c307     2A 38 47 4C 
0c30b     49 45 51 5D 
0c30f     62 68 76 8C 
0c313     A0 AE B0 A7 | 	byte	$2a, $38, $47, $4c, $49, $45, $51, $5d, $62, $68, $76, $8c, $a0, $ae, $b0, $a7
0c317     9C 95 95 8E 
0c31b     79 60 4D 48 
0c31f     55 6B 7B 88 
0c323     8E 8E 8F 93 | 	byte	$9c, $95, $95, $8e, $79, $60, $4d, $48, $55, $6b, $7b, $88, $8e, $8e, $8f, $93
0c327     9B 9C 9A 97 
0c32b     90 8B 89 8D 
0c32f     94 98 99 98 
0c333     9A 9B 9D 96 | 	byte	$9b, $9c, $9a, $97, $90, $8b, $89, $8d, $94, $98, $99, $98, $9a, $9b, $9d, $96
0c337     86 79 71 6E 
0c33b     73 74 6B 5A 
0c33f     4F 50 54 59 
0c343     5B 54 51 60 | 	byte	$86, $79, $71, $6e, $73, $74, $6b, $5a, $4f, $50, $54, $59, $5b, $54, $51, $60
0c347     6F 79 81 77 
0c34b     76 75 70 61 
0c34f     4E 46 4D 59 
0c353     69 78 8A 9F | 	byte	$6f, $79, $81, $77, $76, $75, $70, $61, $4e, $46, $4d, $59, $69, $78, $8a, $9f
0c357     AE B1 AA A9 
0c35b     AE AE 9F 83 
0c35f     72 75 80 8D 
0c363     98 A5 B4 C5 | 	byte	$ae, $b1, $aa, $a9, $ae, $ae, $9f, $83, $72, $75, $80, $8d, $98, $a5, $b4, $c5
0c367     D7 E4 E4 DD 
0c36b     D1 BD AB 9F 
0c36f     8F 7E 74 6A 
0c373     67 79 91 A5 | 	byte	$d7, $e4, $e4, $dd, $d1, $bd, $ab, $9f, $8f, $7e, $74, $6a, $67, $79, $91, $a5
0c377     A7 9D 95 92 
0c37b     99 9A 88 68 
0c37f     46 2E 2B 32 
0c383     32 2B 2F 41 | 	byte	$a7, $9d, $95, $92, $99, $9a, $88, $68, $46, $2e, $2b, $32, $32, $2b, $2f, $41
0c387     54 66 72 78 
0c38b     82 94 A1 A1 
0c38f     95 88 88 91 
0c393     9A A2 A3 A2 | 	byte	$54, $66, $72, $78, $82, $94, $a1, $a1, $95, $88, $88, $91, $9a, $a2, $a3, $a2
0c397     A0 A1 AC B7 
0c39b     BC B9 AC A7 
0c39f     A6 A2 95 83 
0c3a3     72 71 72 77 | 	byte	$a0, $a1, $ac, $b7, $bc, $b9, $ac, $a7, $a6, $a2, $95, $83, $72, $71, $72, $77
0c3a7     7F 91 B1 CF 
0c3ab     DC D7 CA C6 
0c3af     C6 BF A8 87 
0c3b3     6C 5F 5F 66 | 	byte	$7f, $91, $b1, $cf, $dc, $d7, $ca, $c6, $c6, $bf, $a8, $87, $6c, $5f, $5f, $66
0c3b7     69 72 7C 89 
0c3bb     93 96 90 8C 
0c3bf     8A 7D 69 4D 
0c3c3     39 33 3B 4C | 	byte	$69, $72, $7c, $89, $93, $96, $90, $8c, $8a, $7d, $69, $4d, $39, $33, $3b, $4c
0c3c7     53 53 56 69 
0c3cb     7A 85 81 6F 
0c3cf     58 4D 4A 4C 
0c3d3     4E 49 49 57 | 	byte	$53, $53, $56, $69, $7a, $85, $81, $6f, $58, $4d, $4a, $4c, $4e, $49, $49, $57
0c3d7     6A 75 75 74 
0c3db     81 99 AB B0 
0c3df     A8 A1 A1 A7 
0c3e3     A4 9B 8D 87 | 	byte	$6a, $75, $75, $74, $81, $99, $ab, $b0, $a8, $a1, $a1, $a7, $a4, $9b, $8d, $87
0c3e7     86 8C 8E 87 
0c3eb     84 8B 9B AD 
0c3ef     B2 AD A8 A4 
0c3f3     A1 99 85 72 | 	byte	$86, $8c, $8e, $87, $84, $8b, $9b, $ad, $b2, $ad, $a8, $a4, $a1, $99, $85, $72
0c3f7     66 5F 51 44 
0c3fb     3F 41 4A 50 
0c3ff     55 5A 5D 58 
0c403     52 46 3E 31 | 	byte	$66, $5f, $51, $44, $3f, $41, $4a, $50, $55, $5a, $5d, $58, $52, $46, $3e, $31
0c407     2B 31 41 4F 
0c40b     63 78 8B 9C 
0c40f     AD B9 C3 C5 
0c413     BD AC 99 87 | 	byte	$2b, $31, $41, $4f, $63, $78, $8b, $9c, $ad, $b9, $c3, $c5, $bd, $ac, $99, $87
0c417     7D 75 65 5A 
0c41b     54 5A 60 65 
0c41f     6B 6F 74 75 
0c423     73 6F 6B 69 | 	byte	$7d, $75, $65, $5a, $54, $5a, $60, $65, $6b, $6f, $74, $75, $73, $6f, $6b, $69
0c427     6D 73 74 6F 
0c42b     6C 72 80 8B 
0c42f     90 94 92 88 
0c433     7F 75 69 55 | 	byte	$6d, $73, $74, $6f, $6c, $72, $80, $8b, $90, $94, $92, $88, $7f, $75, $69, $55
0c437     3F 30 32 32 
0c43b     32 2F 31 3A 
0c43f     49 60 70 76 
0c443     7F 8C 9E AB | 	byte	$3f, $30, $32, $32, $32, $2f, $31, $3a, $49, $60, $70, $76, $7f, $8c, $9e, $ab
0c447     A9 96 79 6B 
0c44b     6D 70 70 6F 
0c44f     6E 75 83 91 
0c453     9D A5 A7 A6 | 	byte	$a9, $96, $79, $6b, $6d, $70, $70, $6f, $6e, $75, $83, $91, $9d, $a5, $a7, $a6
0c457     A8 AA A3 97 
0c45b     92 9A A8 B6 
0c45f     BD C3 CB D5 
0c463     DA D8 D5 D9 | 	byte	$a8, $aa, $a3, $97, $92, $9a, $a8, $b6, $bd, $c3, $cb, $d5, $da, $d8, $d5, $d9
0c467     E0 E3 DD C6 
0c46b     B0 A5 9B 91 
0c46f     8B 89 87 81 
0c473     78 75 78 7B | 	byte	$e0, $e3, $dd, $c6, $b0, $a5, $9b, $91, $8b, $89, $87, $81, $78, $75, $78, $7b
0c477     7A 77 73 79 
0c47b     77 75 71 64 
0c47f     58 4B 43 3C 
0c483     3A 3E 49 55 | 	byte	$7a, $77, $73, $79, $77, $75, $71, $64, $58, $4b, $43, $3c, $3a, $3e, $49, $55
0c487     62 68 65 63 
0c48b     5E 59 5A 5E 
0c48f     62 61 65 74 
0c493     87 97 A2 AA | 	byte	$62, $68, $65, $63, $5e, $59, $5a, $5e, $62, $61, $65, $74, $87, $97, $a2, $aa
0c497     B3 BD C4 BE 
0c49b     B1 A2 97 93 
0c49f     8A 84 7E 81 
0c4a3     8D 9E B1 B9 | 	byte	$b3, $bd, $c4, $be, $b1, $a2, $97, $93, $8a, $84, $7e, $81, $8d, $9e, $b1, $b9
0c4a7     B8 B7 B8 BC 
0c4ab     BE C0 BE B3 
0c4af     A7 9E 98 95 
0c4b3     93 8B 7C 73 | 	byte	$b8, $b7, $b8, $bc, $be, $c0, $be, $b3, $a7, $9e, $98, $95, $93, $8b, $7c, $73
0c4b7     6E 6E 76 7C 
0c4bb     7A 75 77 79 
0c4bf     71 66 5C 58 
0c4c3     66 74 77 71 | 	byte	$6e, $6e, $76, $7c, $7a, $75, $77, $79, $71, $66, $5c, $58, $66, $74, $77, $71
0c4c7     65 6A 72 7C 
0c4cb     85 8B 8E 8B 
0c4cf     7E 73 6E 6F 
0c4d3     6F 63 5D 61 | 	byte	$65, $6a, $72, $7c, $85, $8b, $8e, $8b, $7e, $73, $6e, $6f, $6f, $63, $5d, $61
0c4d7     69 6B 62 64 
0c4db     78 99 B0 B6 
0c4df     AF A7 A8 AF 
0c4e3     B1 A4 91 88 | 	byte	$69, $6b, $62, $64, $78, $99, $b0, $b6, $af, $a7, $a8, $af, $b1, $a4, $91, $88
0c4e7     88 8D 8E 88 
0c4eb     88 95 A2 A1 
0c4ef     93 80 6A 62 
0c4f3     5E 4A 34 26 | 	byte	$88, $8d, $8e, $88, $88, $95, $a2, $a1, $93, $80, $6a, $62, $5e, $4a, $34, $26
0c4f7     25 32 3C 3A 
0c4fb     2F 29 2B 33 
0c4ff     33 2A 27 36 
0c503     4D 57 5A 5D | 	byte	$25, $32, $3c, $3a, $2f, $29, $2b, $33, $33, $2a, $27, $36, $4d, $57, $5a, $5d
0c507     76 8D 95 93 
0c50b     8B 8F 9C A3 
0c50f     9A 85 6F 71 
0c513     76 76 6E 66 | 	byte	$76, $8d, $95, $93, $8b, $8f, $9c, $a3, $9a, $85, $6f, $71, $76, $76, $6e, $66
0c517     65 69 6C 70 
0c51b     79 82 8D 9C 
0c51f     A8 B3 B9 B8 
0c523     B4 AD A7 9F | 	byte	$65, $69, $6c, $70, $79, $82, $8d, $9c, $a8, $b3, $b9, $b8, $b4, $ad, $a7, $9f
0c527     94 8C 7F 7A 
0c52b     82 8B 96 9B 
0c52f     9A 91 89 7D 
0c533     6D 61 54 48 | 	byte	$94, $8c, $7f, $7a, $82, $8b, $96, $9b, $9a, $91, $89, $7d, $6d, $61, $54, $48
0c537     42 3F 3E 43 
0c53b     4B 55 5B 5A 
0c53f     53 4F 55 5E 
0c543     67 67 67 6D | 	byte	$42, $3f, $3e, $43, $4b, $55, $5b, $5a, $53, $4f, $55, $5e, $67, $67, $67, $6d
0c547     76 7D 86 8F 
0c54b     9D A5 9D 8C 
0c54f     78 6C 68 5E 
0c553     52 4A 4B 59 | 	byte	$76, $7d, $86, $8f, $9d, $a5, $9d, $8c, $78, $6c, $68, $5e, $52, $4a, $4b, $59
0c557     68 74 82 94 
0c55b     AF C7 D5 CF 
0c55f     C4 B9 B4 AC 
0c563     A6 A6 A6 AC | 	byte	$68, $74, $82, $94, $af, $c7, $d5, $cf, $c4, $b9, $b4, $ac, $a6, $a6, $a6, $ac
0c567     B0 B2 B3 B6 
0c56b     BB C0 C2 BD 
0c56f     AE 96 83 7B 
0c573     7A 78 67 54 | 	byte	$b0, $b2, $b3, $b6, $bb, $c0, $c2, $bd, $ae, $96, $83, $7b, $7a, $78, $67, $54
0c577     47 45 43 3D 
0c57b     3E 41 40 3E 
0c57f     40 42 4D 67 
0c583     81 95 A3 A6 | 	byte	$47, $45, $43, $3d, $3e, $41, $40, $3e, $40, $42, $4d, $67, $81, $95, $a3, $a6
0c587     9E 97 92 8B 
0c58b     82 7E 80 84 
0c58f     84 89 92 9E 
0c593     AA AC A5 9B | 	byte	$9e, $97, $92, $8b, $82, $7e, $80, $84, $84, $89, $92, $9e, $aa, $ac, $a5, $9b
0c597     9B AA BA C2 
0c59b     BC B5 B6 BF 
0c59f     C9 CA BF B2 
0c5a3     A9 A2 9B 94 | 	byte	$9b, $aa, $ba, $c2, $bc, $b5, $b6, $bf, $c9, $ca, $bf, $b2, $a9, $a2, $9b, $94
0c5a7     8F 95 A6 BB 
0c5ab     C3 C7 CD D6 
0c5af     D7 C7 A8 85 
0c5b3     71 5F 48 2C | 	byte	$8f, $95, $a6, $bb, $c3, $c7, $cd, $d6, $d7, $c7, $a8, $85, $71, $5f, $48, $2c
0c5b7     1B 0F 11 1D 
0c5bb     27 2C 32 3F 
0c5bf     4A 53 5C 62 
0c5c3     60 5F 62 64 | 	byte	$1b, $0f, $11, $1d, $27, $2c, $32, $3f, $4a, $53, $5c, $62, $60, $5f, $62, $64
0c5c7     62 5A 5C 64 
0c5cb     74 7F 7B 77 
0c5cf     80 90 97 96 
0c5d3     90 86 7D 7D | 	byte	$62, $5a, $5c, $64, $74, $7f, $7b, $77, $80, $90, $97, $96, $90, $86, $7d, $7d
0c5d7     7B 77 74 79 
0c5db     84 8D 8D 83 
0c5df     7C 85 97 A3 
0c5e3     A2 9B 9C A2 | 	byte	$7b, $77, $74, $79, $84, $8d, $8d, $83, $7c, $85, $97, $a3, $a2, $9b, $9c, $a2
0c5e7     AB B4 B8 BA 
0c5eb     B7 BA C1 C0 
0c5ef     B4 A3 97 8E 
0c5f3     82 6E 5D 50 | 	byte	$ab, $b4, $b8, $ba, $b7, $ba, $c1, $c0, $b4, $a3, $97, $8e, $82, $6e, $5d, $50
0c5f7     3C 22 12 15 
0c5fb     1F 29 3B 44 
0c5ff     4F 5D 6B 78 
0c603     83 7E 6F 61 | 	byte	$3c, $22, $12, $15, $1f, $29, $3b, $44, $4f, $5d, $6b, $78, $83, $7e, $6f, $61
0c607     5A 5B 58 4F 
0c60b     44 3F 4A 5C 
0c60f     6E 75 76 7B 
0c613     88 8F 8F 89 | 	byte	$5a, $5b, $58, $4f, $44, $3f, $4a, $5c, $6e, $75, $76, $7b, $88, $8f, $8f, $89
0c617     86 89 93 9B 
0c61b     9A 89 77 69 
0c61f     6D 7A 86 80 
0c623     76 72 6F 72 | 	byte	$86, $89, $93, $9b, $9a, $89, $77, $69, $6d, $7a, $86, $80, $76, $72, $6f, $72
0c627     79 7E 7E 80 
0c62b     85 84 83 83 
0c62f     7F 7B 7B 7D 
0c633     77 62 5B 5C | 	byte	$79, $7e, $7e, $80, $85, $84, $83, $83, $7f, $7b, $7b, $7d, $77, $62, $5b, $5c
0c637     62 73 7D 75 
0c63b     63 56 50 4D 
0c63f     51 49 40 41 
0c643     4D 57 58 4F | 	byte	$62, $73, $7d, $75, $63, $56, $50, $4d, $51, $49, $40, $41, $4d, $57, $58, $4f
0c647     43 43 59 6E 
0c64b     73 71 75 7F 
0c64f     92 A7 BE D0 
0c653     D8 D7 D5 D8 | 	byte	$43, $43, $59, $6e, $73, $71, $75, $7f, $92, $a7, $be, $d0, $d8, $d7, $d5, $d8
0c657     D8 D3 C9 C4 
0c65b     BE B3 A0 8B 
0c65f     83 8C 9A A7 
0c663     AF AF AE AB | 	byte	$d8, $d3, $c9, $c4, $be, $b3, $a0, $8b, $83, $8c, $9a, $a7, $af, $af, $ae, $ab
0c667     AB AB AD B0 
0c66b     AE A1 91 86 
0c66f     86 8E 95 8B 
0c673     78 6D 64 6A | 	byte	$ab, $ab, $ad, $b0, $ae, $a1, $91, $86, $86, $8e, $95, $8b, $78, $6d, $64, $6a
0c677     72 6C 51 40 
0c67b     40 4D 4E 3F 
0c67f     2F 24 29 3D 
0c683     50 52 46 41 | 	byte	$72, $6c, $51, $40, $40, $4d, $4e, $3f, $2f, $24, $29, $3d, $50, $52, $46, $41
0c687     4C 5D 6B 70 
0c68b     77 82 88 89 
0c68f     86 88 95 A4 
0c693     AD AF B4 C3 | 	byte	$4c, $5d, $6b, $70, $77, $82, $88, $89, $86, $88, $95, $a4, $ad, $af, $b4, $c3
0c697     DB E5 E5 E5 
0c69b     E5 E5 E4 D4 
0c69f     BB AC AF BC 
0c6a3     BA AB 9C 98 | 	byte	$db, $e5, $e5, $e5, $e5, $e5, $e4, $d4, $bb, $ac, $af, $bc, $ba, $ab, $9c, $98
0c6a7     A3 B7 C3 C0 
0c6ab     B5 AE AD AB 
0c6af     A4 98 8C 7D 
0c6b3     6C 5E 55 5F | 	byte	$a3, $b7, $c3, $c0, $b5, $ae, $ad, $ab, $a4, $98, $8c, $7d, $6c, $5e, $55, $5f
0c6b7     6A 6F 6B 67 
0c6bb     65 68 6D 6C 
0c6bf     60 52 4B 4F 
0c6c3     55 55 47 39 | 	byte	$6a, $6f, $6b, $67, $65, $68, $6d, $6c, $60, $52, $4b, $4f, $55, $55, $47, $39
0c6c7     34 39 45 51 
0c6cb     5D 63 67 68 
0c6cf     6C 73 7D 85 
0c6d3     87 87 88 8B | 	byte	$34, $39, $45, $51, $5d, $63, $67, $68, $6c, $73, $7d, $85, $87, $87, $88, $8b
0c6d7     95 A2 A4 A9 
0c6db     A6 A1 97 8E 
0c6df     89 89 87 85 
0c6e3     85 85 82 82 | 	byte	$95, $a2, $a4, $a9, $a6, $a1, $97, $8e, $89, $89, $87, $85, $85, $85, $82, $82
0c6e7     7E 85 8F 94 
0c6eb     8D 7D 6B 64 
0c6ef     63 62 54 3E 
0c6f3     2C 31 4B 65 | 	byte	$7e, $85, $8f, $94, $8d, $7d, $6b, $64, $63, $62, $54, $3e, $2c, $31, $4b, $65
0c6f7     6D 6B 6B 75 
0c6fb     81 84 77 67 
0c6ff     5A 56 58 53 
0c703     4E 4D 4D 4D | 	byte	$6d, $6b, $6b, $75, $81, $84, $77, $67, $5a, $56, $58, $53, $4e, $4d, $4d, $4d
0c707     4C 45 3E 40 
0c70b     4B 56 59 56 
0c70f     56 5F 73 88 
0c713     95 9D A4 B8 | 	byte	$4c, $45, $3e, $40, $4b, $56, $59, $56, $56, $5f, $73, $88, $95, $9d, $a4, $b8
0c717     D0 DE DE D6 
0c71b     CE C3 B0 A3 
0c71f     A3 A9 A9 A1 
0c723     95 89 85 83 | 	byte	$d0, $de, $de, $d6, $ce, $c3, $b0, $a3, $a3, $a9, $a9, $a1, $95, $89, $85, $83
0c727     82 81 7A 75 
0c72b     76 76 6B 5D 
0c72f     55 56 51 45 
0c733     40 4A 5D 72 | 	byte	$82, $81, $7a, $75, $76, $76, $6b, $5d, $55, $56, $51, $45, $40, $4a, $5d, $72
0c737     81 88 8B 8C 
0c73b     8A 83 77 62 
0c73f     52 41 33 24 
0c743     12 0A 13 24 | 	byte	$81, $88, $8b, $8c, $8a, $83, $77, $62, $52, $41, $33, $24, $12, $0a, $13, $24
0c747     32 44 51 5F 
0c74b     72 82 8B 8F 
0c74f     8D 87 88 89 
0c753     8A 8C 96 AA | 	byte	$32, $44, $51, $5f, $72, $82, $8b, $8f, $8d, $87, $88, $89, $8a, $8c, $96, $aa
0c757     BA C0 BB B9 
0c75b     BF C4 C2 B9 
0c75f     B2 B1 AF AC 
0c763     AF B9 C4 CF | 	byte	$ba, $c0, $bb, $b9, $bf, $c4, $c2, $b9, $b2, $b1, $af, $ac, $af, $b9, $c4, $cf
0c767     D5 D0 C9 C2 
0c76b     BC B5 A6 8D 
0c76f     71 5C 4D 48 
0c773     51 57 58 64 | 	byte	$d5, $d0, $c9, $c2, $bc, $b5, $a6, $8d, $71, $5c, $4d, $48, $51, $57, $58, $64
0c777     71 7C 7F 7D 
0c77b     7C 7C 7E 7A 
0c77f     67 51 43 42 
0c783     4C 54 50 4D | 	byte	$71, $7c, $7f, $7d, $7c, $7c, $7e, $7a, $67, $51, $43, $42, $4c, $54, $50, $4d
0c787     5F 7C 94 9F 
0c78b     A2 A5 B1 BE 
0c78f     C1 B5 A4 91 
0c793     87 8C 94 9A | 	byte	$5f, $7c, $94, $9f, $a2, $a5, $b1, $be, $c1, $b5, $a4, $91, $87, $8c, $94, $9a
0c797     9A 9F B9 DE 
0c79b     E5 E5 E5 E5 
0c79f     E5 E5 E5 E5 
0c7a3     DE BE A7 9F | 	byte	$9a, $9f, $b9, $de, $e5, $e5, $e5, $e5, $e5, $e5, $e5, $e5, $de, $be, $a7, $9f
0c7a7     98 92 8C 83 
0c7ab     7C 75 6B 5E 
0c7af     51 45 39 30 
0c7b3     2C 31 40 4C | 	byte	$98, $92, $8c, $83, $7c, $75, $6b, $5e, $51, $45, $39, $30, $2c, $31, $40, $4c
0c7b7     55 59 5F 68 
0c7bb     6F 6F 66 62 
0c7bf     5F 60 5C 4F 
0c7c3     4E 55 5A 5C | 	byte	$55, $59, $5f, $68, $6f, $6f, $66, $62, $5f, $60, $5c, $4f, $4e, $55, $5a, $5c
0c7c7     57 5D 66 6E 
0c7cb     73 74 78 7B 
0c7cf     7D 7D 75 6C 
0c7d3     69 70 7B 7D | 	byte	$57, $5d, $66, $6e, $73, $74, $78, $7b, $7d, $7d, $75, $6c, $69, $70, $7b, $7d
0c7d7     79 7E 8B 9D 
0c7db     A7 A6 A3 AA 
0c7df     B6 C4 CB C2 
0c7e3     B4 AB A4 96 | 	byte	$79, $7e, $8b, $9d, $a7, $a6, $a3, $aa, $b6, $c4, $cb, $c2, $b4, $ab, $a4, $96
0c7e7     87 7C 74 6F 
0c7eb     69 65 64 67 
0c7ef     6B 6B 6F 73 
0c7f3     6D 5F 5C 65 | 	byte	$87, $7c, $74, $6f, $69, $65, $64, $67, $6b, $6b, $6f, $73, $6d, $5f, $5c, $65
0c7f7     6C 65 56 49 
0c7fb     44 47 4F 4E 
0c7ff     52 55 56 52 
0c803     4D 43 3C 48 | 	byte	$6c, $65, $56, $49, $44, $47, $4f, $4e, $52, $55, $56, $52, $4d, $43, $3c, $48
0c807     5A 69 63 50 
0c80b     49 57 66 6E 
0c80f     6B 62 59 56 
0c813     57 63 65 67 | 	byte	$5a, $69, $63, $50, $49, $57, $66, $6e, $6b, $62, $59, $56, $57, $63, $65, $67
0c817     73 81 85 84 
0c81b     87 91 98 9B 
0c81f     99 9E A3 A5 
0c823     A3 9F 9C A1 | 	byte	$73, $81, $85, $84, $87, $91, $98, $9b, $99, $9e, $a3, $a5, $a3, $9f, $9c, $a1
0c827     A8 AC A7 95 
0c82b     80 6C 5F 59 
0c82f     56 52 57 5A 
0c833     53 59 68 7A | 	byte	$a8, $ac, $a7, $95, $80, $6c, $5f, $59, $56, $52, $57, $5a, $53, $59, $68, $7a
0c837     82 7F 74 65 
0c83b     5F 65 6C 6D 
0c83f     6A 63 67 70 
0c843     79 77 71 72 | 	byte	$82, $7f, $74, $65, $5f, $65, $6c, $6d, $6a, $63, $67, $70, $79, $77, $71, $72
0c847     76 79 75 6E 
0c84b     6B 6D 73 81 
0c84f     87 8A 8C 91 
0c853     9D A4 A6 A3 | 	byte	$76, $79, $75, $6e, $6b, $6d, $73, $81, $87, $8a, $8c, $91, $9d, $a4, $a6, $a3
0c857     A1 9F A1 A4 
0c85b     A6 A9 AA AC 
0c85f     B2 B9 BE C8 
0c863     D4 D6 CD BB | 	byte	$a1, $9f, $a1, $a4, $a6, $a9, $aa, $ac, $b2, $b9, $be, $c8, $d4, $d6, $cd, $bb
0c867     AE A7 A4 9C 
0c86b     8B 73 65 60 
0c86f     5D 5D 5B 4C 
0c873     47 47 48 49 | 	byte	$ae, $a7, $a4, $9c, $8b, $73, $65, $60, $5d, $5d, $5b, $4c, $47, $47, $48, $49
0c877     4A 4C 47 42 
0c87b     41 3F 3C 3A 
0c87f     37 34 34 38 
0c883     40 51 6E 8A | 	byte	$4a, $4c, $47, $42, $41, $3f, $3c, $3a, $37, $34, $34, $38, $40, $51, $6e, $8a
0c887     98 9C A7 B8 
0c88b     CA D3 D1 CD 
0c88f     D0 D7 D4 C8 
0c893     B1 A0 A6 BF | 	byte	$98, $9c, $a7, $b8, $ca, $d3, $d1, $cd, $d0, $d7, $d4, $c8, $b1, $a0, $a6, $bf
0c897     D7 DC CC C1 
0c89b     CD E4 E4 E4 
0c89f     E4 E4 E3 E4 
0c8a3     E3 E4 E4 D9 | 	byte	$d7, $dc, $cc, $c1, $cd, $e4, $e4, $e4, $e4, $e4, $e3, $e4, $e3, $e4, $e4, $d9
0c8a7     CE C3 B3 9A 
0c8ab     79 5F 54 51 
0c8af     53 56 57 57 
0c8b3     5B 5E 60 66 | 	byte	$ce, $c3, $b3, $9a, $79, $5f, $54, $51, $53, $56, $57, $57, $5b, $5e, $60, $66
0c8b7     71 78 75 70 
0c8bb     6E 6A 68 65 
0c8bf     5E 5C 5B 5A 
0c8c3     5C 65 68 67 | 	byte	$71, $78, $75, $70, $6e, $6a, $68, $65, $5e, $5c, $5b, $5a, $5c, $65, $68, $67
0c8c7     66 67 68 5E 
0c8cb     5A 5D 5C 58 
0c8cf     51 43 3B 37 
0c8d3     39 3D 45 4B | 	byte	$66, $67, $68, $5e, $5a, $5d, $5c, $58, $51, $43, $3b, $37, $39, $3d, $45, $4b
0c8d7     52 5A 63 6A 
0c8db     6C 72 7F 8A 
0c8df     89 83 81 8C 
0c8e3     9B A3 9B 87 | 	byte	$52, $5a, $63, $6a, $6c, $72, $7f, $8a, $89, $83, $81, $8c, $9b, $a3, $9b, $87
0c8e7     73 74 79 79 
0c8eb     74 66 5A 53 
0c8ef     62 73 7E 87 
0c8f3     8A 89 8B 91 | 	byte	$73, $74, $79, $79, $74, $66, $5a, $53, $62, $73, $7e, $87, $8a, $89, $8b, $91
0c8f7     93 86 6B 58 
0c8fb     4D 4E 55 51 
0c8ff     51 4F 56 63 
0c903     73 7F 7E 79 | 	byte	$93, $86, $6b, $58, $4d, $4e, $55, $51, $51, $4f, $56, $63, $73, $7f, $7e, $79
0c907     7A 80 7C 74 
0c90b     6B 66 68 6F 
0c90f     6C 5C 50 56 
0c913     66 78 7C 76 | 	byte	$7a, $80, $7c, $74, $6b, $66, $68, $6f, $6c, $5c, $50, $56, $66, $78, $7c, $76
0c917     72 77 82 8C 
0c91b     96 9E A0 9C 
0c91f     98 96 98 9D 
0c923     9E 9A 8A 77 | 	byte	$72, $77, $82, $8c, $96, $9e, $a0, $9c, $98, $96, $98, $9d, $9e, $9a, $8a, $77
0c927     71 75 76 70 
0c92b     67 6C 78 83 
0c92f     7E 72 65 64 
0c933     64 5A 4F 4A | 	byte	$71, $75, $76, $70, $67, $6c, $78, $83, $7e, $72, $65, $64, $64, $5a, $4f, $4a
0c937     4C 51 51 52 
0c93b     4A 45 40 40 
0c93f     4A 51 48 44 
0c943     51 63 6E 6F | 	byte	$4c, $51, $51, $52, $4a, $45, $40, $40, $4a, $51, $48, $44, $51, $63, $6e, $6f
0c947     6B 6F 7F 91 
0c94b     9A 91 7B 69 
0c94f     62 61 6A 73 
0c953     7E 90 A3 AD | 	byte	$6b, $6f, $7f, $91, $9a, $91, $7b, $69, $62, $61, $6a, $73, $7e, $90, $a3, $ad
0c957     B1 AF B3 BD 
0c95b     C6 C8 C1 BC 
0c95f     BB BB B7 AF 
0c963     A9 AB B2 B5 | 	byte	$b1, $af, $b3, $bd, $c6, $c8, $c1, $bc, $bb, $bb, $b7, $af, $a9, $ab, $b2, $b5
0c967     B2 AF AD AA 
0c96b     A7 A5 9C 8C 
0c96f     7F 79 76 6C 
0c973     5F 4E 45 4D | 	byte	$b2, $af, $ad, $aa, $a7, $a5, $9c, $8c, $7f, $79, $76, $6c, $5f, $4e, $45, $4d
0c977     58 5F 61 59 
0c97b     54 54 5C 6A 
0c97f     75 79 81 8B 
0c983     8F 8F 8F 92 | 	byte	$58, $5f, $61, $59, $54, $54, $5c, $6a, $75, $79, $81, $8b, $8f, $8f, $8f, $92
0c987     96 9E A7 AA 
0c98b     A5 9F 9E A8 
0c98f     B2 B5 B1 AD 
0c993     B6 C4 C6 BA | 	byte	$96, $9e, $a7, $aa, $a5, $9f, $9e, $a8, $b2, $b5, $b1, $ad, $b6, $c4, $c6, $ba
0c997     B3 B7 C1 C7 
0c99b     C6 BF C0 C9 
0c99f     D2 CD BF B1 
0c9a3     AB AE B0 AC | 	byte	$b3, $b7, $c1, $c7, $c6, $bf, $c0, $c9, $d2, $cd, $bf, $b1, $ab, $ae, $b0, $ac
0c9a7     9F 97 9C A3 
0c9ab     A3 97 87 7C 
0c9af     7E 7C 69 53 
0c9b3     4B 52 5C 65 | 	byte	$9f, $97, $9c, $a3, $a3, $97, $87, $7c, $7e, $7c, $69, $53, $4b, $52, $5c, $65
0c9b7     61 5E 68 77 
0c9bb     82 81 85 87 
0c9bf     84 81 7B 72 
0c9c3     65 5E 5E 59 | 	byte	$61, $5e, $68, $77, $82, $81, $85, $87, $84, $81, $7b, $72, $65, $5e, $5e, $59
0c9c7     4F 47 46 52 
0c9cb     66 6A 6D 65 
0c9cf     5C 58 5C 61 
0c9d3     65 65 63 64 | 	byte	$4f, $47, $46, $52, $66, $6a, $6d, $65, $5c, $58, $5c, $61, $65, $65, $63, $64
0c9d7     67 6C 78 85 
0c9db     90 96 97 91 
0c9df     86 7F 84 8D 
0c9e3     8E 84 7E 87 | 	byte	$67, $6c, $78, $85, $90, $96, $97, $91, $86, $7f, $84, $8d, $8e, $84, $7e, $87
0c9e7     93 97 91 8D 
0c9eb     94 9E 9C 8B 
0c9ef     79 6C 62 64 
0c9f3     69 6B 68 69 | 	byte	$93, $97, $91, $8d, $94, $9e, $9c, $8b, $79, $6c, $62, $64, $69, $6b, $68, $69
0c9f7     6D 71 74 73 
0c9fb     70 6E 65 53 
0c9ff     45 3E 3B 31 
0ca03     29 2B 34 3A | 	byte	$6d, $71, $74, $73, $70, $6e, $65, $53, $45, $3e, $3b, $31, $29, $2b, $34, $3a
0ca07     3E 3C 3A 3D 
0ca0b     49 57 5D 5A 
0ca0f     54 53 5C 73 
0ca13     82 84 7D 70 | 	byte	$3e, $3c, $3a, $3d, $49, $57, $5d, $5a, $54, $53, $5c, $73, $82, $84, $7d, $70
0ca17     6E 75 78 73 
0ca1b     68 60 64 6D 
0ca1f     71 73 74 78 
0ca23     85 96 99 97 | 	byte	$6e, $75, $78, $73, $68, $60, $64, $6d, $71, $73, $74, $78, $85, $96, $99, $97
0ca27     98 9E A9 B5 
0ca2b     BB B7 AE AE 
0ca2f     B4 B9 B4 A5 
0ca33     91 81 76 74 | 	byte	$98, $9e, $a9, $b5, $bb, $b7, $ae, $ae, $b4, $b9, $b4, $a5, $91, $81, $76, $74
0ca37     70 62 59 56 
0ca3b     62 69 67 5D 
0ca3f     62 71 7D 7B 
0ca43     71 6A 6A 6B | 	byte	$70, $62, $59, $56, $62, $69, $67, $5d, $62, $71, $7d, $7b, $71, $6a, $6a, $6b
0ca47     6E 73 77 77 
0ca4b     7C 80 80 81 
0ca4f     7F 7C 7C 7B 
0ca53     79 76 6E 66 | 	byte	$6e, $73, $77, $77, $7c, $80, $80, $81, $7f, $7c, $7c, $7b, $79, $76, $6e, $66
0ca57     64 71 7F 8E 
0ca5b     98 9C 9A 98 
0ca5f     9D A5 A6 A1 
0ca63     99 91 90 8F | 	byte	$64, $71, $7f, $8e, $98, $9c, $9a, $98, $9d, $a5, $a6, $a1, $99, $91, $90, $8f
0ca67     8B 88 8B 89 
0ca6b     82 78 66 59 
0ca6f     50 4A 41 3D 
0ca73     42 4D 5D 68 | 	byte	$8b, $88, $8b, $89, $82, $78, $66, $59, $50, $4a, $41, $3d, $42, $4d, $5d, $68
0ca77     6E 6C 69 6B 
0ca7b     70 76 7A 7C 
0ca7f     80 87 8D 95 
0ca83     9E AB B1 B1 | 	byte	$6e, $6c, $69, $6b, $70, $76, $7a, $7c, $80, $87, $8d, $95, $9e, $ab, $b1, $b1
0ca87     AD AB AB A9 
0ca8b     9F 95 9D A9 
0ca8f     B0 B3 BB CF 
0ca93     E5 E5 E5 E5 | 	byte	$ad, $ab, $ab, $a9, $9f, $95, $9d, $a9, $b0, $b3, $bb, $cf, $e5, $e5, $e5, $e5
0ca97     E5 E5 E5 E5 
0ca9b     E5          | 	byte	$e5[5]
0ca9c     C6 B2 AC AE 
0caa0     B0 B1 B5 BE 
0caa4     C6 C3 B5 A9 
0caa8     A9 B0 B6 B4 | 	byte	$c6, $b2, $ac, $ae, $b0, $b1, $b5, $be, $c6, $c3, $b5, $a9, $a9, $b0, $b6, $b4
0caac     AA 9B 93 94 
0cab0     93 87 7D 77 
0cab4     7B 81 7A 69 
0cab8     5D 5F 66 67 | 	byte	$aa, $9b, $93, $94, $93, $87, $7d, $77, $7b, $81, $7a, $69, $5d, $5f, $66, $67
0cabc     66 5D 55 53 
0cac0     58 57 4A 39 
0cac4     29 22 1E 1C 
0cac8     1C 21 26 27 | 	byte	$66, $5d, $55, $53, $58, $57, $4a, $39, $29, $22, $1e, $1c, $1c, $21, $26, $27
0cacc     2A 33 42 4D 
0cad0     55 56 54 59 
0cad4     5D 5E 61 67 
0cad8     72 77 77 6F | 	byte	$2a, $33, $42, $4d, $55, $56, $54, $59, $5d, $5e, $61, $67, $72, $77, $77, $6f
0cadc     64 69 74 79 
0cae0     76 7A 84 8B 
0cae4     8C 8B 91 A3 
0cae8     B6 C1 C4 BC | 	byte	$64, $69, $74, $79, $76, $7a, $84, $8b, $8c, $8b, $91, $a3, $b6, $c1, $c4, $bc
0caec     B0 A7 A1 9C 
0caf0     95 87 71 62 
0caf4     5F 6D 7D 82 
0caf8     7E 79 77 79 | 	byte	$b0, $a7, $a1, $9c, $95, $87, $71, $62, $5f, $6d, $7d, $82, $7e, $79, $77, $79
0cafc     74 65 54 4A 
0cb00     47 45 3D 33 
0cb04     31 38 4A 5F 
0cb08     68 6B 63 6A | 	byte	$74, $65, $54, $4a, $47, $45, $3d, $33, $31, $38, $4a, $5f, $68, $6b, $63, $6a
0cb0c     78 86 91 8E 
0cb10     80 76 70 6B 
0cb14     64 60 59 50 
0cb18     46 3D 39 35 | 	byte	$78, $86, $91, $8e, $80, $76, $70, $6b, $64, $60, $59, $50, $46, $3d, $39, $35
0cb1c     34 3B 48 52 
0cb20     59 62 6D 78 
0cb24     82 8D 9D AF 
0cb28     BE C7 C6 C2 | 	byte	$34, $3b, $48, $52, $59, $62, $6d, $78, $82, $8d, $9d, $af, $be, $c7, $c6, $c2
0cb2c     C5 C4 BA AE 
0cb30     9E 88 70 5E 
0cb34     50 4B 51 53 
0cb38     46 40 48 59 | 	byte	$c5, $c4, $ba, $ae, $9e, $88, $70, $5e, $50, $4b, $51, $53, $46, $40, $48, $59
0cb3c     6F 75 73 6A 
0cb40     73 7F 87 8A 
0cb44     83 78 70 6E 
0cb48     74 7A 7D 7C | 	byte	$6f, $75, $73, $6a, $73, $7f, $87, $8a, $83, $78, $70, $6e, $74, $7a, $7d, $7c
0cb4c     7E 87 90 8B 
0cb50     73 60 52 50 
0cb54     60 6C 70 6C 
0cb58     61 5E 6E 89 | 	byte	$7e, $87, $90, $8b, $73, $60, $52, $50, $60, $6c, $70, $6c, $61, $5e, $6e, $89
0cb5c     A8 BC C4 C9 
0cb60     C7 BE BA BD 
0cb64     C1 C2 C2 BD 
0cb68     B5 A9 A0 98 | 	byte	$a8, $bc, $c4, $c9, $c7, $be, $ba, $bd, $c1, $c2, $c2, $bd, $b5, $a9, $a0, $98
0cb6c     91 87 7B 75 
0cb70     6A 5F 57 5B 
0cb74     66 76 84 84 
0cb78     7E 7B 83 8E | 	byte	$91, $87, $7b, $75, $6a, $5f, $57, $5b, $66, $76, $84, $84, $7e, $7b, $83, $8e
0cb7c     90 86 78 70 
0cb80     6D 74 7E 87 
0cb84     91 9D A3 AB 
0cb88     AF B1 B6 BE | 	byte	$90, $86, $78, $70, $6d, $74, $7e, $87, $91, $9d, $a3, $ab, $af, $b1, $b6, $be
0cb8c     C3 C7 C8 C4 
0cb90     BA B0 A9 A9 
0cb94     B0 B6 B1 A6 
0cb98     9E A1 A5 A6 | 	byte	$c3, $c7, $c8, $c4, $ba, $b0, $a9, $a9, $b0, $b6, $b1, $a6, $9e, $a1, $a5, $a6
0cb9c     A1 9B 9D A5 
0cba0     AA AA A9 A8 
0cba4     A7 AB B8 C8 
0cba8     CF CD C3 B6 | 	byte	$a1, $9b, $9d, $a5, $aa, $aa, $a9, $a8, $a7, $ab, $b8, $c8, $cf, $cd, $c3, $b6
0cbac     B0 AD A8 A2 
0cbb0     9F 93 81 75 
0cbb4     6F 6D 67 65 
0cbb8     5E 56 52 53 | 	byte	$b0, $ad, $a8, $a2, $9f, $93, $81, $75, $6f, $6d, $67, $65, $5e, $56, $52, $53
0cbbc     53 53 56 50 
0cbc0     48 47 4D 58 
0cbc4     67 6B 65 50 
0cbc8     48 51 59 56 | 	byte	$53, $53, $56, $50, $48, $47, $4d, $58, $67, $6b, $65, $50, $48, $51, $59, $56
0cbcc     4C 47 50 60 
0cbd0     6C 6F 6C 6C 
0cbd4     75 82 84 79 
0cbd8     71 69 68 68 | 	byte	$4c, $47, $50, $60, $6c, $6f, $6c, $6c, $75, $82, $84, $79, $71, $69, $68, $68
0cbdc     68 61 62 65 
0cbe0     6D 77 81 89 
0cbe4     93 A0 B1 BA 
0cbe8     B8 B3 AC A3 | 	byte	$68, $61, $62, $65, $6d, $77, $81, $89, $93, $a0, $b1, $ba, $b8, $b3, $ac, $a3
0cbec     94 87 7D 79 
0cbf0     7A 76 6A 5E 
0cbf4     63 6B 71 68 
0cbf8     49 27 14 0F | 	byte	$94, $87, $7d, $79, $7a, $76, $6a, $5e, $63, $6b, $71, $68, $49, $27, $14, $0f
0cbfc     0C 07 07 0E 
0cc00     1B 27 32 41 
0cc04     4C 5F 72 7E 
0cc08     88 80 76 7B | 	byte	$0c, $07, $07, $0e, $1b, $27, $32, $41, $4c, $5f, $72, $7e, $88, $80, $76, $7b
0cc0c     8A 8E 86 7C 
0cc10     79 80 8A 88 
0cc14     79 65 5C 5A 
0cc18     55 48 37 2B | 	byte	$8a, $8e, $86, $7c, $79, $80, $8a, $88, $79, $65, $5c, $5a, $55, $48, $37, $2b
0cc1c     2C 3A 45 48 
0cc20     54 68 80 95 
0cc24     A5 B0 BE D1 
0cc28     E4 E4 E4 E3 | 	byte	$2c, $3a, $45, $48, $54, $68, $80, $95, $a5, $b0, $be, $d1, $e4, $e4, $e4, $e3
0cc2c     D6 CE C8 C1 
0cc30     B4 A0 8C 7B 
0cc34     7C 88 8F 82 
0cc38     72 70 71 74 | 	byte	$d6, $ce, $c8, $c1, $b4, $a0, $8c, $7b, $7c, $88, $8f, $82, $72, $70, $71, $74
0cc3c     73 6A 66 6E 
0cc40     77 79 76 69 
0cc44     60 6D 74 6F 
0cc48     61 54 50 55 | 	byte	$73, $6a, $66, $6e, $77, $79, $76, $69, $60, $6d, $74, $6f, $61, $54, $50, $55
0cc4c     59 59 57 55 
0cc50     51 52 52 5D 
0cc54     6A 75 7D 83 
0cc58     82 7E 80 81 | 	byte	$59, $59, $57, $55, $51, $52, $52, $5d, $6a, $75, $7d, $83, $82, $7e, $80, $81
0cc5c     7F 79 72 6E 
0cc60     6F 69 64 6B 
0cc64     7E 9B B4 BE 
0cc68     BB B6 B8 BE | 	byte	$7f, $79, $72, $6e, $6f, $69, $64, $6b, $7e, $9b, $b4, $be, $bb, $b6, $b8, $be
0cc6c     C3 BB A5 91 
0cc70     88 8A 8C 86 
0cc74     82 84 8C 93 
0cc78     94 91 93 97 | 	byte	$c3, $bb, $a5, $91, $88, $8a, $8c, $86, $82, $84, $8c, $93, $94, $91, $93, $97
0cc7c     97 92 8E 8B 
0cc80     87 88 8C 95 
0cc84     A7 B3 B5 B0 
0cc88     B2 C1 D5 E2 | 	byte	$97, $92, $8e, $8b, $87, $88, $8c, $95, $a7, $b3, $b5, $b0, $b2, $c1, $d5, $e2
0cc8c     E4 E4 E4 E4 
0cc90     E4 E4       | 	byte	$e4[6]
0cc92     DD C8 B6 AE 
0cc96     B0 B1 AC A5 
0cc9a     A4 AB B1 B7 
0cc9e     B7 B2 AB A8 | 	byte	$dd, $c8, $b6, $ae, $b0, $b1, $ac, $a5, $a4, $ab, $b1, $b7, $b7, $b2, $ab, $a8
0cca2     A5 9F 99 97 
0cca6     97 9A A3 A4 
0ccaa     A1 9C 93 88 
0ccae     86 83 77 66 | 	byte	$a5, $9f, $99, $97, $97, $9a, $a3, $a4, $a1, $9c, $93, $88, $86, $83, $77, $66
0ccb2     5B 55 57 5E 
0ccb6     5B 55 4F 5D 
0ccba     71 81 86 83 
0ccbe     7E 77 66 59 | 	byte	$5b, $55, $57, $5e, $5b, $55, $4f, $5d, $71, $81, $86, $83, $7e, $77, $66, $59
0ccc2     4B 43 3C 37 
0ccc6     31 27 1C 18 
0ccca     19 1F 2B 3E 
0ccce     50 5E 65 6C | 	byte	$4b, $43, $3c, $37, $31, $27, $1c, $18, $19, $1f, $2b, $3e, $50, $5e, $65, $6c
0ccd2     78 85 8F 9C 
0ccd6     AC B3 A9 96 
0ccda     8D 8B 88 79 
0ccde     66 5B 5D 65 | 	byte	$78, $85, $8f, $9c, $ac, $b3, $a9, $96, $8d, $8b, $88, $79, $66, $5b, $5d, $65
0cce2     70 7D 86 8B 
0cce6     93 9E A5 AA 
0ccea     A8 9A 8B 7F 
0ccee     75 69 66 67 | 	byte	$70, $7d, $86, $8b, $93, $9e, $a5, $aa, $a8, $9a, $8b, $7f, $75, $69, $66, $67
0ccf2     69 69 67 63 
0ccf6     60 5A 55 55 
0ccfa     56 51 48 39 
0ccfe     2F 31 3F 4B | 	byte	$69, $69, $67, $63, $60, $5a, $55, $55, $56, $51, $48, $39, $2f, $31, $3f, $4b
0cd02     51 55 5B 67 
0cd06     74 75 6E 6A 
0cd0a     70 79 7A 76 
0cd0e     74 74 77 75 | 	byte	$51, $55, $5b, $67, $74, $75, $6e, $6a, $70, $79, $7a, $76, $74, $74, $77, $75
0cd12     6F 61 5C 62 
0cd16     6B 6F 65 58 
0cd1a     51 55 57 55 
0cd1e     50 4D 4F 55 | 	byte	$6f, $61, $5c, $62, $6b, $6f, $65, $58, $51, $55, $57, $55, $50, $4d, $4f, $55
0cd22     66 75 7A 78 
0cd26     78 80 8F 9A 
0cd2a     99 98 98 94 
0cd2e     89 81 83 88 | 	byte	$66, $75, $7a, $78, $78, $80, $8f, $9a, $99, $98, $98, $94, $89, $81, $83, $88
0cd32     86 7C 74 7A 
0cd36     86 94 95 91 
0cd3a     94 9B 9E 94 
0cd3e     86 7F 7F 80 | 	byte	$86, $7c, $74, $7a, $86, $94, $95, $91, $94, $9b, $9e, $94, $86, $7f, $7f, $80
0cd42     7F 74 63 53 
0cd46     4C 47 3B 2E 
0cd4a     2B 35 45 53 
0cd4e     5D 5D 56 62 | 	byte	$7f, $74, $63, $53, $4c, $47, $3b, $2e, $2b, $35, $45, $53, $5d, $5d, $56, $62
0cd52     6D 7E 86 8F 
0cd56     98 A2 A7 A4 
0cd5a     99 96 9D A3 
0cd5e     A3 97 85 7D | 	byte	$6d, $7e, $86, $8f, $98, $a2, $a7, $a4, $99, $96, $9d, $a3, $a3, $97, $85, $7d
0cd62     84 90 99 9E 
0cd66     A4 AB B5 BD 
0cd6a     BE BB BC C1 
0cd6e     BD B5 A4 8B | 	byte	$84, $90, $99, $9e, $a4, $ab, $b5, $bd, $be, $bb, $bc, $c1, $bd, $b5, $a4, $8b
0cd72     71 63 5E 5B 
0cd76     59 58 5B 6D 
0cd7a     84 91 93 94 
0cd7e     A6 BC CB CD | 	byte	$71, $63, $5e, $5b, $59, $58, $5b, $6d, $84, $91, $93, $94, $a6, $bc, $cb, $cd
0cd82     C7 CB D9 E3 
0cd86     E3 DE E1 E5 
0cd8a     E5 E5 D1 B5 
0cd8e     9B 8D 84 7E | 	byte	$c7, $cb, $d9, $e3, $e3, $de, $e1, $e5, $e5, $e5, $d1, $b5, $9b, $8d, $84, $7e
0cd92     7B 75 6C 5F 
0cd96     63 73 84 90 
0cd9a     9A A8 B0 B0 
0cd9e     A7 9E 9B 9C | 	byte	$7b, $75, $6c, $5f, $63, $73, $84, $90, $9a, $a8, $b0, $b0, $a7, $9e, $9b, $9c
0cda2     9E A2 A1 9C 
0cda6     99 97 98 9C 
0cdaa     A0 9F 99 90 
0cdae     82 78 6F 69 | 	byte	$9e, $a2, $a1, $9c, $99, $97, $98, $9c, $a0, $9f, $99, $90, $82, $78, $6f, $69
0cdb2     5D 51 4B 45 
0cdb6     47 5A 6B 75 
0cdba     7A 83 92 A5 
0cdbe     AE AD AA AB | 	byte	$5d, $51, $4b, $45, $47, $5a, $6b, $75, $7a, $83, $92, $a5, $ae, $ad, $aa, $ab
0cdc2     AE A8 96 78 
0cdc6     57 41 3A 3C 
0cdca     3D 39 37 39 
0cdce     48 56 5A 5A | 	byte	$ae, $a8, $96, $78, $57, $41, $3a, $3c, $3d, $39, $37, $39, $48, $56, $5a, $5a
0cdd2     65 72 76 77 
0cdd6     72 66 6A 71 
0cdda     7E 84 81 7A 
0cdde     78 7E 84 7E | 	byte	$65, $72, $76, $77, $72, $66, $6a, $71, $7e, $84, $81, $7a, $78, $7e, $84, $7e
0cde2     74 6D 68 61 
0cde6     63 68 71 7E 
0cdea     91 96 94 8C 
0cdee     7F 6C 55 33 | 	byte	$74, $6d, $68, $61, $63, $68, $71, $7e, $91, $96, $94, $8c, $7f, $6c, $55, $33
0cdf2     11 00 00 00 
0cdf6     00 03 12 1C 
0cdfa     2E 47 58 60 
0cdfe     77 97 AC B1 | 	byte	$11, $00, $00, $00, $00, $03, $12, $1c, $2e, $47, $58, $60, $77, $97, $ac, $b1
0ce02     A8 9C 9C A6 
0ce06     B1 B1 AB A3 
0ce0a     9F A0 97 87 
0ce0e     75 68 6B 69 | 	byte	$a8, $9c, $9c, $a6, $b1, $b1, $ab, $a3, $9f, $a0, $97, $87, $75, $68, $6b, $69
0ce12     5A 4F 4F 60 
0ce16     6F 74 6F 6D 
0ce1a     6A 67 5B 4F 
0ce1e     46 42 43 45 | 	byte	$5a, $4f, $4f, $60, $6f, $74, $6f, $6d, $6a, $67, $5b, $4f, $46, $42, $43, $45
0ce22     4F 5F 6F 7E 
0ce26     8D 9D B1 C4 
0ce2a     C8 C2 B8 AA 
0ce2e     98 81 74 6F | 	byte	$4f, $5f, $6f, $7e, $8d, $9d, $b1, $c4, $c8, $c2, $b8, $aa, $98, $81, $74, $6f
0ce32     6D 6B 69 68 
0ce36     68 6C 77 84 
0ce3a     88 85 7E 81 
0ce3e     8C 94 95 8A | 	byte	$6d, $6b, $69, $68, $68, $6c, $77, $84, $88, $85, $7e, $81, $8c, $94, $95, $8a
0ce42     7A 70 70 6B 
0ce46     59 49 3F 3E 
0ce4a     3F 3E 3B 3F 
0ce4e     4E 61 74 79 | 	byte	$7a, $70, $70, $6b, $59, $49, $3f, $3e, $3f, $3e, $3b, $3f, $4e, $61, $74, $79
0ce52     7B 87 93 96 
0ce56     8C 78 6C 6D 
0ce5a     73 73 6A 64 
0ce5e     67 6E 70 73 | 	byte	$7b, $87, $93, $96, $8c, $78, $6c, $6d, $73, $73, $6a, $64, $67, $6e, $70, $73
0ce62     79 88 9C A8 
0ce66     AD B5 C6 DA 
0ce6a     E5 E5 E5 DC 
0ce6e     C8 B3 9E 8E | 	byte	$79, $88, $9c, $a8, $ad, $b5, $c6, $da, $e5, $e5, $e5, $dc, $c8, $b3, $9e, $8e
0ce72     80 6C 5D 55 
0ce76     62 6F 79 7F 
0ce7a     8E A9 C7 E1 
0ce7e     E4 E4 E4 E4 | 	byte	$80, $6c, $5d, $55, $62, $6f, $79, $7f, $8e, $a9, $c7, $e1, $e4, $e4, $e4, $e4
0ce82     E4 E4 E4 E4 
0ce86     E4 E4 E4    | 	byte	$e4[7]
0ce89     E2 E1 E1 D3 
0ce8d     BC A4 97 8F 
0ce91     8B 86 7B 6B 
0ce95     5F 57 51 4A | 	byte	$e2, $e1, $e1, $d3, $bc, $a4, $97, $8f, $8b, $86, $7b, $6b, $5f, $57, $51, $4a
0ce99     48 47 48 51 
0ce9d     56 55 51 55 
0cea1     66 73 7B 86 
0cea5     91 9A A5 AC | 	byte	$48, $47, $48, $51, $56, $55, $51, $55, $66, $73, $7b, $86, $91, $9a, $a5, $ac
0cea9     AE B2 B3 AA 
0cead     9D 90 85 7E 
0ceb1     7F 7D 76 72 
0ceb5     77 80 7E 7D | 	byte	$ae, $b2, $b3, $aa, $9d, $90, $85, $7e, $7f, $7d, $76, $72, $77, $80, $7e, $7d
0ceb9     7E 81 88 8C 
0cebd     83 79 74 77 
0cec1     7D 7D 72 63 
0cec5     59 53 55 54 | 	byte	$7e, $81, $88, $8c, $83, $79, $74, $77, $7d, $7d, $72, $63, $59, $53, $55, $54
0cec9     4F 4D 56 61 
0cecd     6A 70 7B 8A 
0ced1     99 A2 A4 9B 
0ced5     8E 86 80 78 | 	byte	$4f, $4d, $56, $61, $6a, $70, $7b, $8a, $99, $a2, $a4, $9b, $8e, $86, $80, $78
0ced9     72 6A 66 65 
0cedd     5C 55 4F 4E 
0cee1     4F 57 66 6E 
0cee5     66 61 69 78 | 	byte	$72, $6a, $66, $65, $5c, $55, $4f, $4e, $4f, $57, $66, $6e, $66, $61, $69, $78
0cee9     7D 71 59 4B 
0ceed     4A 4F 4A 3B 
0cef1     27 1B 1E 2C 
0cef5     3E 46 42 47 | 	byte	$7d, $71, $59, $4b, $4a, $4f, $4a, $3b, $27, $1b, $1e, $2c, $3e, $46, $42, $47
0cef9     59 6F 86 94 
0cefd     98 9D A7 B0 
0cf01     B1 A9 9D 95 
0cf05     93 98 9A 97 | 	byte	$59, $6f, $86, $94, $98, $9d, $a7, $b0, $b1, $a9, $9d, $95, $93, $98, $9a, $97
0cf09     8E 83 75 6A 
0cf0d     6B 73 79 7A 
0cf11     76 6F 6D 6E 
0cf15     6F 65 5A 58 | 	byte	$8e, $83, $75, $6a, $6b, $73, $79, $7a, $76, $6f, $6d, $6e, $6f, $65, $5a, $58
0cf19     5C 63 5C 48 
0cf1d     35 34 3F 41 
0cf21     3B 31 31 3A 
0cf25     4E 57 58 5A | 	byte	$5c, $63, $5c, $48, $35, $34, $3f, $41, $3b, $31, $31, $3a, $4e, $57, $58, $5a
0cf29     61 6F 7F 8B 
0cf2d     8E 8B 89 89 
0cf31     90 9E A8 AD 
0cf35     AD A5 9D 9F | 	byte	$61, $6f, $7f, $8b, $8e, $8b, $89, $89, $90, $9e, $a8, $ad, $ad, $a5, $9d, $9f
0cf39     A6 AD B3 BF 
0cf3d     C4 BB AA 98 
0cf41     86 73 65 4F 
0cf45     41 36 2F 2D | 	byte	$a6, $ad, $b3, $bf, $c4, $bb, $aa, $98, $86, $73, $65, $4f, $41, $36, $2f, $2d
0cf49     30 33 39 48 
0cf4d     5B 72 88 96 
0cf51     9A 95 91 89 
0cf55     82 80 86 8C | 	byte	$30, $33, $39, $48, $5b, $72, $88, $96, $9a, $95, $91, $89, $82, $80, $86, $8c
0cf59     8D 8E 91 95 
0cf5d     97 94 8E 8D 
0cf61     8C 87 81 80 
0cf65     7E 76 75 83 | 	byte	$8d, $8e, $91, $95, $97, $94, $8e, $8d, $8c, $87, $81, $80, $7e, $76, $75, $83
0cf69     96 9D 9D A0 
0cf6d     A3 A5 A1 9A 
0cf71     96 95 98 A6 
0cf75     B8 C3 C5 C6 | 	byte	$96, $9d, $9d, $a0, $a3, $a5, $a1, $9a, $96, $95, $98, $a6, $b8, $c3, $c5, $c6
0cf79     D3 E4 E4 E3 
0cf7d     E4 E4 E4 E4 
0cf81     E4 E4 E4 DE 
0cf85     D0 C4 B3 9B | 	byte	$d3, $e4, $e4, $e3, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $de, $d0, $c4, $b3, $9b
0cf89     81 6D 6B 6C 
0cf8d     6A 5E 56 54 
0cf91     5B 64 6A 6E 
0cf95     6B 68 6A 74 | 	byte	$81, $6d, $6b, $6c, $6a, $5e, $56, $54, $5b, $64, $6a, $6e, $6b, $68, $6a, $74
0cf99     81 85 7D 67 
0cf9d     59 63 78 84 
0cfa1     7F 7B 85 96 
0cfa5     9D 98 8D 89 | 	byte	$81, $85, $7d, $67, $59, $63, $78, $84, $7f, $7b, $85, $96, $9d, $98, $8d, $89
0cfa9     8B 8C 87 7A 
0cfad     6F 74 8A 96 
0cfb1     94 97 A8 BD 
0cfb5     CC C7 B6 AC | 	byte	$8b, $8c, $87, $7a, $6f, $74, $8a, $96, $94, $97, $a8, $bd, $cc, $c7, $b6, $ac
0cfb9     AE B4 AF A1 
0cfbd     93 8F 8D 87 
0cfc1     7A 70 66 6C 
0cfc5     6C 63 52 45 | 	byte	$ae, $b4, $af, $a1, $93, $8f, $8d, $87, $7a, $70, $66, $6c, $6c, $63, $52, $45
0cfc9     3C 3E 44 43 
0cfcd     3F 3B 39 39 
0cfd1     41 4D 54 56 
0cfd5     5E 65 67 69 | 	byte	$3c, $3e, $44, $43, $3f, $3b, $39, $39, $41, $4d, $54, $56, $5e, $65, $67, $69
0cfd9     6A 63 61 63 
0cfdd     6B 6E 69 57 
0cfe1     4C 50 56 57 
0cfe5     52 52 56 5C | 	byte	$6a, $63, $61, $63, $6b, $6e, $69, $57, $4c, $50, $56, $57, $52, $52, $56, $5c
0cfe9     60 60 4E 3D 
0cfed     37 3A 42 3B 
0cff1     2D 23 2A 3F 
0cff5     53 67 77 8A | 	byte	$60, $60, $4e, $3d, $37, $3a, $42, $3b, $2d, $23, $2a, $3f, $53, $67, $77, $8a
0cff9     9F B1 BB BA 
0cffd     B2 A7 A5 A6 
0d001     A6 A2 A1 A4 
0d005     AE BC C7 C4 | 	byte	$9f, $b1, $bb, $ba, $b2, $a7, $a5, $a6, $a6, $a2, $a1, $a4, $ae, $bc, $c7, $c4
0d009     B6 AF AE AB 
0d00d     9B 7F 5E 43 
0d011     3A 38 34 29 
0d015     26 33 44 45 | 	byte	$b6, $af, $ae, $ab, $9b, $7f, $5e, $43, $3a, $38, $34, $29, $26, $33, $44, $45
0d019     38 31 3B 4D 
0d01d     54 4A 38 29 
0d021     26 30 3D 46 
0d025     51 5E 6E 7E | 	byte	$38, $31, $3b, $4d, $54, $4a, $38, $29, $26, $30, $3d, $46, $51, $5e, $6e, $7e
0d029     8D 97 9B 9D 
0d02d     A2 A3 A2 9A 
0d031     8E 84 85 8A 
0d035     92 95 96 98 | 	byte	$8d, $97, $9b, $9d, $a2, $a3, $a2, $9a, $8e, $84, $85, $8a, $92, $95, $96, $98
0d039     9C 9F A5 A3 
0d03d     97 8A 7E 78 
0d041     77 7C 7B 70 
0d045     62 55 49 49 | 	byte	$9c, $9f, $a5, $a3, $97, $8a, $7e, $78, $77, $7c, $7b, $70, $62, $55, $49, $49
0d049     56 69 7B 83 
0d04d     82 71 64 5B 
0d051     59 5C 58 48 
0d055     39 33 38 42 | 	byte	$56, $69, $7b, $83, $82, $71, $64, $5b, $59, $5c, $58, $48, $39, $33, $38, $42
0d059     4D 62 77 8D 
0d05d     9A A2 A9 B0 
0d061     B3 B6 B8 BA 
0d065     BB BD C3 CD | 	byte	$4d, $62, $77, $8d, $9a, $a2, $a9, $b0, $b3, $b6, $b8, $ba, $bb, $bd, $c3, $cd
0d069     DC E5 E5 E2 
0d06d     E4 E4 E4 E4 
0d071     E4 E4 D4 CA 
0d075     C3 BA B0 A8 | 	byte	$dc, $e5, $e5, $e2, $e4, $e4, $e4, $e4, $e4, $e4, $d4, $ca, $c3, $ba, $b0, $a8
0d079     A3 A4 AC B9 
0d07d     C6 D0 D4 D5 
0d081     D6 D3 CB BC 
0d085     A5 94 8E 92 | 	byte	$a3, $a4, $ac, $b9, $c6, $d0, $d4, $d5, $d6, $d3, $cb, $bc, $a5, $94, $8e, $92
0d089     93 8E 86 82 
0d08d     7A 75 72 6D 
0d091     6C 63 50 37 
0d095     28 23 24 2A | 	byte	$93, $8e, $86, $82, $7a, $75, $72, $6d, $6c, $63, $50, $37, $28, $23, $24, $2a
0d099     30 32 34 36 
0d09d     3B 47 57 67 
0d0a1     6C 6C 79 93 
0d0a5     A3 A4 99 8F | 	byte	$30, $32, $34, $36, $3b, $47, $57, $67, $6c, $6c, $79, $93, $a3, $a4, $99, $8f
0d0a9     93 A0 AD AB 
0d0ad     A4 A5 B4 C5 
0d0b1     CB C3 BC BE 
0d0b5     CA D5 D1 C1 | 	byte	$93, $a0, $ad, $ab, $a4, $a5, $b4, $c5, $cb, $c3, $bc, $be, $ca, $d5, $d1, $c1
0d0b9     B7 B6 B6 A8 
0d0bd     93 7C 7A 79 
0d0c1     74 64 52 4B 
0d0c5     53 5C 5E 56 | 	byte	$b7, $b6, $b6, $a8, $93, $7c, $7a, $79, $74, $64, $52, $4b, $53, $5c, $5e, $56
0d0c9     4E 48 49 4A 
0d0cd     4C 54 59 61 
0d0d1     63 63 5D 5B 
0d0d5     62 6E 7A 78 | 	byte	$4e, $48, $49, $4a, $4c, $54, $59, $61, $63, $63, $5d, $5b, $62, $6e, $7a, $78
0d0d9     66 56 4B 47 
0d0dd     46 44 42 45 
0d0e1     45 45 45 4A 
0d0e5     49 47 3F 35 | 	byte	$66, $56, $4b, $47, $46, $44, $42, $45, $45, $45, $45, $4a, $49, $47, $3f, $35
0d0e9     35 45 4F 55 
0d0ed     57 5B 66 79 
0d0f1     8D A4 B2 BD 
0d0f5     C3 C1 BC B6 | 	byte	$35, $45, $4f, $55, $57, $5b, $66, $79, $8d, $a4, $b2, $bd, $c3, $c1, $bc, $b6
0d0f9     AF A6 99 86 
0d0fd     6F 6A 6E 74 
0d101     70 64 5C 5B 
0d105     5D 63 65 65 | 	byte	$af, $a6, $99, $86, $6f, $6a, $6e, $74, $70, $64, $5c, $5b, $5d, $63, $65, $65
0d109     67 71 79 7A 
0d10d     7B 7C 7A 78 
0d111     71 66 5E 4E 
0d115     42 3B 3A 3C | 	byte	$67, $71, $79, $7a, $7b, $7c, $7a, $78, $71, $66, $5e, $4e, $42, $3b, $3a, $3c
0d119     3C 3C 33 27 
0d11d     28 2F 33 32 
0d121     38 45 50 57 
0d125     59 64 6D 78 | 	byte	$3c, $3c, $33, $27, $28, $2f, $33, $32, $38, $45, $50, $57, $59, $64, $6d, $78
0d129     81 87 94 A5 
0d12d     AF B5 BB C6 
0d131     D5 E0 E4 E4 
0d135     DF DA DF E6 | 	byte	$81, $87, $94, $a5, $af, $b5, $bb, $c6, $d5, $e0, $e4, $e4, $df, $da, $df, $e6
0d139     E6 D6 BB A4 
0d13d     95 89 73 55 
0d141     3A 25 19 17 
0d145     1C 20 26 31 | 	byte	$e6, $d6, $bb, $a4, $95, $89, $73, $55, $3a, $25, $19, $17, $1c, $20, $26, $31
0d149     3E 41 48 4F 
0d14d     55 54 43 2E 
0d151     23 26 34 4D 
0d155     59 65 74 89 | 	byte	$3e, $41, $48, $4f, $55, $54, $43, $2e, $23, $26, $34, $4d, $59, $65, $74, $89
0d159     A1 B7 C2 C5 
0d15d     C3 C2 BD B9 
0d161     BA BE BE B4 
0d165     AD B0 C1 CC | 	byte	$a1, $b7, $c2, $c5, $c3, $c2, $bd, $b9, $ba, $be, $be, $b4, $ad, $b0, $c1, $cc
0d169     CB C5 C8 D5 
0d16d     E2 E4 E4 E2 
0d171     E4 E4 E4 E4 
0d175     D2 CB D2 DD | 	byte	$cb, $c5, $c8, $d5, $e2, $e4, $e4, $e2, $e4, $e4, $e4, $e4, $d2, $cb, $d2, $dd
0d179     E2 D4 BE AF 
0d17d     A8 A9 AA A7 
0d181     9D 90 8D 91 
0d185     93 8C 89 8D | 	byte	$e2, $d4, $be, $af, $a8, $a9, $aa, $a7, $9d, $90, $8d, $91, $93, $8c, $89, $8d
0d189     91 93 8A 76 
0d18d     68 5B 50 49 
0d191     3C 34 34 43 
0d195     4F 56 51 4E | 	byte	$91, $93, $8a, $76, $68, $5b, $50, $49, $3c, $34, $34, $43, $4f, $56, $51, $4e
0d199     57 62 6F 74 
0d19d     73 76 84 96 
0d1a1     9F A1 9D 99 
0d1a5     93 93 94 90 | 	byte	$57, $62, $6f, $74, $73, $76, $84, $96, $9f, $a1, $9d, $99, $93, $93, $94, $90
0d1a9     8A 8B 8F 8E 
0d1ad     86 82 89 9A 
0d1b1     AE B9 B7 AE 
0d1b5     AB B4 C7 D6 | 	byte	$8a, $8b, $8f, $8e, $86, $82, $89, $9a, $ae, $b9, $b7, $ae, $ab, $b4, $c7, $d6
0d1b9     DB DA D6 CD 
0d1bd     C1 B1 A3 9B 
0d1c1     9B 93 85 70 
0d1c5     60 51 48 42 | 	byte	$db, $da, $d6, $cd, $c1, $b1, $a3, $9b, $9b, $93, $85, $70, $60, $51, $48, $42
0d1c9     3D 34 24 0D 
0d1cd     00 00 00 03 
0d1d1     09 12 1C 26 
0d1d5     2D 3B 46 52 | 	byte	$3d, $34, $24, $0d, $00, $00, $00, $03, $09, $12, $1c, $26, $2d, $3b, $46, $52
0d1d9     5F 6B 71 72 
0d1dd     71 71 73 73 
0d1e1     77 7B 7C 7A 
0d1e5     78 70 68 6E | 	byte	$5f, $6b, $71, $72, $71, $71, $73, $73, $77, $7b, $7c, $7a, $78, $70, $68, $6e
0d1e9     7B 87 8E 8E 
0d1ed     8E 96 A7 B8 
0d1f1     BF BD B8 B1 
0d1f5     A8 A4 A2 A0 | 	byte	$7b, $87, $8e, $8e, $8e, $96, $a7, $b8, $bf, $bd, $b8, $b1, $a8, $a4, $a2, $a0
0d1f9     97 8B 7D 77 
0d1fd     73 6E 6A 6E 
0d201     77 7E 79 69 
0d205     59 53 5E 6F | 	byte	$97, $8b, $7d, $77, $73, $6e, $6a, $6e, $77, $7e, $79, $69, $59, $53, $5e, $6f
0d209     76 6E 61 53 
0d20d     52 58 52 46 
0d211     39 30 2D 32 
0d215     37 2F 25 21 | 	byte	$76, $6e, $61, $53, $52, $58, $52, $46, $39, $30, $2d, $32, $37, $2f, $25, $21
0d219     20 25 2A 31 
0d21d     3F 4D 57 58 
0d221     5C 6A 7A 86 
0d225     8A 8B 90 98 | 	byte	$20, $25, $2a, $31, $3f, $4d, $57, $58, $5c, $6a, $7a, $86, $8a, $8b, $90, $98
0d229     A1 A8 B0 B9 
0d22d     C0 C3 C4 BB 
0d231     AF A9 A4 9E 
0d235     9B 93 85 78 | 	byte	$a1, $a8, $b0, $b9, $c0, $c3, $c4, $bb, $af, $a9, $a4, $9e, $9b, $93, $85, $78
0d239     6A 60 59 54 
0d23d     49 3B 33 39 
0d241     43 46 43 41 
0d245     49 5E 76 81 | 	byte	$6a, $60, $59, $54, $49, $3b, $33, $39, $43, $46, $43, $41, $49, $5e, $76, $81
0d249     7D 78 72 74 
0d24d     75 6C 65 71 
0d251     7F 82 7A 74 
0d255     78 85 8E 8F | 	byte	$7d, $78, $72, $74, $75, $6c, $65, $71, $7f, $82, $7a, $74, $78, $85, $8e, $8f
0d259     8C 91 A2 B2 
0d25d     BA BE C4 D4 
0d261     E4 E4 E4 E4 
0d265     E4 E4 E4 E4 | 	byte	$8c, $91, $a2, $b2, $ba, $be, $c4, $d4, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $e4
0d269     E4 E4 E4 E4 
0d26d     E4 E4 E4    | 	byte	$e4[7]
0d270     D1 D1 DE E5 
0d274     DB C0 A0 8C 
0d278     7D 6B 52 44 
0d27c     38 34 35 3C | 	byte	$d1, $d1, $de, $e5, $db, $c0, $a0, $8c, $7d, $6b, $52, $44, $38, $34, $35, $3c
0d280     48 5C 78 92 
0d284     9B 9B 9C 9D 
0d288     9C 99 8E 81 
0d28c     6D 5D 4C 47 | 	byte	$48, $5c, $78, $92, $9b, $9b, $9c, $9d, $9c, $99, $8e, $81, $6d, $5d, $4c, $47
0d290     4E 51 4B 4A 
0d294     4C 54 53 49 
0d298     3B 33 35 3A 
0d29c     41 42 44 53 | 	byte	$4e, $51, $4b, $4a, $4c, $54, $53, $49, $3b, $33, $35, $3a, $41, $42, $44, $53
0d2a0     64 74 7D 86 
0d2a4     95 A0 A5 A6 
0d2a8     A5 A4 A8 A9 
0d2ac     AC B2 B7 BE | 	byte	$64, $74, $7d, $86, $95, $a0, $a5, $a6, $a5, $a4, $a8, $a9, $ac, $b2, $b7, $be
0d2b0     CB D7 E3 E5 
0d2b4     E5 E4 E4 E4 
0d2b8     E4 D1 C4 B4 
0d2bc     9F 8B 81 80 | 	byte	$cb, $d7, $e3, $e5, $e5, $e4, $e4, $e4, $e4, $d1, $c4, $b4, $9f, $8b, $81, $80
0d2c0     81 7F 75 66 
0d2c4     5C 55 4F 47 
0d2c8     3E 36 33 37 
0d2cc     36 2A 21 21 | 	byte	$81, $7f, $75, $66, $5c, $55, $4f, $47, $3e, $36, $33, $37, $36, $2a, $21, $21
0d2d0     28 2E 32 31 
0d2d4     2D 2B 33 3E 
0d2d8     41 46 47 4E 
0d2dc     55 59 5C 63 | 	byte	$28, $2e, $32, $31, $2d, $2b, $33, $3e, $41, $46, $47, $4e, $55, $59, $5c, $63
0d2e0     6E 72 6B 5F 
0d2e4     65 6E 7A 80 
0d2e8     83 85 8A 97 
0d2ec     AF C2 C8 C3 | 	byte	$6e, $72, $6b, $5f, $65, $6e, $7a, $80, $83, $85, $8a, $97, $af, $c2, $c8, $c3
0d2f0     BE C4 CD D0 
0d2f4     C6 B2 9D 88 
0d2f8     74 68 56 47 
0d2fc     42 43 42 37 | 	byte	$be, $c4, $cd, $d0, $c6, $b2, $9d, $88, $74, $68, $56, $47, $42, $43, $42, $37
0d300     28 19 17 1B 
0d304     23 27 27 2C 
0d308     36 46 54 5D 
0d30c     63 6D 79 89 | 	byte	$28, $19, $17, $1b, $23, $27, $27, $2c, $36, $46, $54, $5d, $63, $6d, $79, $89
0d310     91 8A 87 8C 
0d314     92 93 8C 83 
0d318     7E 83 8A 8D 
0d31c     87 7F 7F 88 | 	byte	$91, $8a, $87, $8c, $92, $93, $8c, $83, $7e, $83, $8a, $8d, $87, $7f, $7f, $88
0d320     8D 8B 7C 6B 
0d324     66 6A 6E 74 
0d328     78 79 7E 87 
0d32c     92 97 98 99 | 	byte	$8d, $8b, $7c, $6b, $66, $6a, $6e, $74, $78, $79, $7e, $87, $92, $97, $98, $99
0d330     A1 A9 AA A3 
0d334     9A 8F 82 7D 
0d338     7D 7F 79 73 
0d33c     67 62 54 4A | 	byte	$a1, $a9, $aa, $a3, $9a, $8f, $82, $7d, $7d, $7f, $79, $73, $67, $62, $54, $4a
0d340     41 39 2F 23 
0d344     1B 17 16 18 
0d348     23 3A 50 60 
0d34c     6B 76 80 8A | 	byte	$41, $39, $2f, $23, $1b, $17, $16, $18, $23, $3a, $50, $60, $6b, $76, $80, $8a
0d350     98 A3 A5 9D 
0d354     97 9C AA B5 
0d358     BE C5 CE D8 
0d35c     E1 E4 E4 E4 | 	byte	$98, $a3, $a5, $9d, $97, $9c, $aa, $b5, $be, $c5, $ce, $d8, $e1, $e4, $e4, $e4
0d360     E4 E4 E4 E4 
0d364     DC D0 CC C6 
0d368     BC B2 AB AB 
0d36c     AC AD B2 BA | 	byte	$e4, $e4, $e4, $e4, $dc, $d0, $cc, $c6, $bc, $b2, $ab, $ab, $ac, $ad, $b2, $ba
0d370     C1 C4 C7 C3 
0d374     BD B6 AB 9E 
0d378     8F 82 7E 84 
0d37c     8B 8A 85 7E | 	byte	$c1, $c4, $c7, $c3, $bd, $b6, $ab, $9e, $8f, $82, $7e, $84, $8b, $8a, $85, $7e
0d380     80 8B 93 8F 
0d384     7E 6C 67 62 
0d388     5B 54 45 3C 
0d38c     41 50 58 52 | 	byte	$80, $8b, $93, $8f, $7e, $6c, $67, $62, $5b, $54, $45, $3c, $41, $50, $58, $52
0d390     4E 4D 59 6A 
0d394     75 7B 78 71 
0d398     6D 6E 71 71 
0d39c     72 79 81 88 | 	byte	$4e, $4d, $59, $6a, $75, $7b, $78, $71, $6d, $6e, $71, $71, $72, $79, $81, $88
0d3a0     8E 8F 90 92 
0d3a4     92 8B 7D 69 
0d3a8     58 4E 4F 52 
0d3ac     53 64 7E 9C | 	byte	$8e, $8f, $90, $92, $92, $8b, $7d, $69, $58, $4e, $4f, $52, $53, $64, $7e, $9c
0d3b0     B2 C4 D3 DB 
0d3b4     DC DB D5 C8 
0d3b8     C2 C1 BE B8 
0d3bc     AC A0 9B 9E | 	byte	$b2, $c4, $d3, $db, $dc, $db, $d5, $c8, $c2, $c1, $be, $b8, $ac, $a0, $9b, $9e
0d3c0     9A 87 70 5D 
0d3c4     4A 36 22 12 
0d3c8     04 00 00 01 
0d3cc     0A 12 17 23 | 	byte	$9a, $87, $70, $5d, $4a, $36, $22, $12, $04, $00, $00, $01, $0a, $12, $17, $23
0d3d0     32 41 4C 55 
0d3d4     5D 65 6B 71 
0d3d8     77 83 92 A3 
0d3dc     AC B2 B4 B5 | 	byte	$32, $41, $4c, $55, $5d, $65, $6b, $71, $77, $83, $92, $a3, $ac, $b2, $b4, $b5
0d3e0     B6 B8 B6 AF 
0d3e4     A5 9C 9A 9D 
0d3e8     9E 9B 94 8C 
0d3ec     8A 88 80 79 | 	byte	$b6, $b8, $b6, $af, $a5, $9c, $9a, $9d, $9e, $9b, $94, $8c, $8a, $88, $80, $79
0d3f0     7B 88 93 90 
0d3f4     7F 6E 68 74 
0d3f8     7E 82 77 5F 
0d3fc     4A 3E 44 4F | 	byte	$7b, $88, $93, $90, $7f, $6e, $68, $74, $7e, $82, $77, $5f, $4a, $3e, $44, $4f
0d400     4B 43 43 48 
0d404     47 45 41 41 
0d408     49 4B 3D 2D 
0d40c     2A 2F 33 32 | 	byte	$4b, $43, $43, $48, $47, $45, $41, $41, $49, $4b, $3d, $2d, $2a, $2f, $33, $32
0d410     33 3B 4E 69 
0d414     81 8C 93 94 
0d418     97 9B A2 A7 
0d41c     A5 A1 9B 93 | 	byte	$33, $3b, $4e, $69, $81, $8c, $93, $94, $97, $9b, $a2, $a7, $a5, $a1, $9b, $93
0d420     87 81 7D 7B 
0d424     77 6F 63 59 
0d428     57 60 66 64 
0d42c     55 4F 4D 5A | 	byte	$87, $81, $7d, $7b, $77, $6f, $63, $59, $57, $60, $66, $64, $55, $4f, $4d, $5a
0d430     64 68 64 60 
0d434     58 59 62 70 
0d438     81 92 A2 AB 
0d43c     AC AA A7 A1 | 	byte	$64, $68, $64, $60, $58, $59, $62, $70, $81, $92, $a2, $ab, $ac, $aa, $a7, $a1
0d440     97 86 70 61 
0d444     62 63 60 5E 
0d448     5D 68 7C 90 
0d44c     9D A3 A6 AF | 	byte	$97, $86, $70, $61, $62, $63, $60, $5e, $5d, $68, $7c, $90, $9d, $a3, $a6, $af
0d450     BE C7 CC D1 
0d454     D9 DF E6 E5 
0d458     E5 E5 E5 E5 
0d45c     E5 E5 E5 E5 | 	byte	$be, $c7, $cc, $d1, $d9, $df, $e6, $e5, $e5, $e5, $e5, $e5, $e5, $e5, $e5, $e5
0d460     E5 E5 E5 E5 
0d464     E1 CF BE B7 
0d468     B1 A6 9A 8F 
0d46c     81 6F 62 59 | 	byte	$e5, $e5, $e5, $e5, $e1, $cf, $be, $b7, $b1, $a6, $9a, $8f, $81, $6f, $62, $59
0d470     5C 64 65 58 
0d474     48 44 45 52 
0d478     61 68 6B 6C 
0d47c     72 7D 87 8D | 	byte	$5c, $64, $65, $58, $48, $44, $45, $52, $61, $68, $6b, $6c, $72, $7d, $87, $8d
0d480     87 7B 76 78 
0d484     76 6B 5F 52 
0d488     4A 4A 4A 4C 
0d48c     54 5D 69 78 | 	byte	$87, $7b, $76, $78, $76, $6b, $5f, $52, $4a, $4a, $4a, $4c, $54, $5d, $69, $78
0d490     81 83 7F 76 
0d494     69 62 60 59 
0d498     56 5B 68 7A 
0d49c     8F 97 98 9D | 	byte	$81, $83, $7f, $76, $69, $62, $60, $59, $56, $5b, $68, $7a, $8f, $97, $98, $9d
0d4a0     AB B5 B0 A4 
0d4a4     98 8F 92 9A 
0d4a8     9A 96 96 9D 
0d4ac     A6 B0 B2 AF | 	byte	$ab, $b5, $b0, $a4, $98, $8f, $92, $9a, $9a, $96, $96, $9d, $a6, $b0, $b2, $af
0d4b0     AE B7 BD B9 
0d4b4     B0 AC B1 BD 
0d4b8     C9 CB C7 C4 
0d4bc     BC B0 A5 9A | 	byte	$ae, $b7, $bd, $b9, $b0, $ac, $b1, $bd, $c9, $cb, $c7, $c4, $bc, $b0, $a5, $9a
0d4c0     87 6B 4D 36 
0d4c4     24 1C 14 0C 
0d4c8     0C 13 1A 1E 
0d4cc     24 26 2D 39 | 	byte	$87, $6b, $4d, $36, $24, $1c, $14, $0c, $0c, $13, $1a, $1e, $24, $26, $2d, $39
0d4d0     48 50 4A 47 
0d4d4     4A 51 55 58 
0d4d8     5C 5F 65 67 
0d4dc     6D 7B 8E 9E | 	byte	$48, $50, $4a, $47, $4a, $51, $55, $58, $5c, $5f, $65, $67, $6d, $7b, $8e, $9e
0d4e0     A4 A1 A3 AF 
0d4e4     B7 B7 A8 8F 
0d4e8     76 6F 6D 67 
0d4ec     56 4B 47 47 | 	byte	$a4, $a1, $a3, $af, $b7, $b7, $a8, $8f, $76, $6f, $6d, $67, $56, $4b, $47, $47
0d4f0     49 48 44 46 
0d4f4     4F 59 5F 5D 
0d4f8     5F 61 6B 6F 
0d4fc     6D 67 5F 5C | 	byte	$49, $48, $44, $46, $4f, $59, $5f, $5d, $5f, $61, $6b, $6f, $6d, $67, $5f, $5c
0d500     57 52 4B 43 
0d504     43 4B 58 68 
0d508     77 80 84 86 
0d50c     8D 99 A4 A5 | 	byte	$57, $52, $4b, $43, $43, $4b, $58, $68, $77, $80, $84, $86, $8d, $99, $a4, $a5
0d510     99 8C 88 8C 
0d514     90 8A 7E 77 
0d518     80 93 A0 A3 
0d51c     A4 A3 A3 9D | 	byte	$99, $8c, $88, $8c, $90, $8a, $7e, $77, $80, $93, $a0, $a3, $a4, $a3, $a3, $9d
0d520     8B 7A 71 6D 
0d524     63 5B 53 4A 
0d528     49 4D 53 56 
0d52c     62 63 5F 5E | 	byte	$8b, $7a, $71, $6d, $63, $5b, $53, $4a, $49, $4d, $53, $56, $62, $63, $5f, $5e
0d530     5B 59 56 5B 
0d534     60 63 68 6E 
0d538     78 81 85 81 
0d53c     78 71 6B 65 | 	byte	$5b, $59, $56, $5b, $60, $63, $68, $6e, $78, $81, $85, $81, $78, $71, $6b, $65
0d540     58 4A 43 47 
0d544     5A 69 6C 63 
0d548     71 8B AB C2 
0d54c     CD CD D1 DD | 	byte	$58, $4a, $43, $47, $5a, $69, $6c, $63, $71, $8b, $ab, $c2, $cd, $cd, $d1, $dd
0d550     E5 E5 E5 D5 
0d554     CD CF CE C9 
0d558     C6 CC DE E5 
0d55c     E5 E5 E5 E5 | 	byte	$e5, $e5, $e5, $d5, $cd, $cf, $ce, $c9, $c6, $cc, $de, $e5, $e5, $e5, $e5, $e5
0d560     E5 DF CD B5 
0d564     9F 97 95 95 
0d568     93 90 91 93 
0d56c     99 9D 9B 96 | 	byte	$e5, $df, $cd, $b5, $9f, $97, $95, $95, $93, $90, $91, $93, $99, $9d, $9b, $96
0d570     8C 85 7B 6E 
0d574     5C 55 59 5F 
0d578     61 5C 56 5E 
0d57c     6A 73 7D 8A | 	byte	$8c, $85, $7b, $6e, $5c, $55, $59, $5f, $61, $5c, $56, $5e, $6a, $73, $7d, $8a
0d580     92 8F 85 86 
0d584     8D 91 8B 82 
0d588     80 87 8D 8B 
0d58c     87 88 92 9B | 	byte	$92, $8f, $85, $86, $8d, $91, $8b, $82, $80, $87, $8d, $8b, $87, $88, $92, $9b
0d590     9E 93 7F 6A 
0d594     5A 53 53 57 
0d598     5A 5C 5F 61 
0d59c     63 6A 70 6B | 	byte	$9e, $93, $7f, $6a, $5a, $53, $53, $57, $5a, $5c, $5f, $61, $63, $6a, $70, $6b
0d5a0     5E 59 5A 5D 
0d5a4     5B 57 57 63 
0d5a8     74 84 8F 9A 
0d5ac     A3 A6 A5 A7 | 	byte	$5e, $59, $5a, $5d, $5b, $57, $57, $63, $74, $84, $8f, $9a, $a3, $a6, $a5, $a7
0d5b0     AC B2 BA BA 
0d5b4     B2 AC AD B3 
0d5b8     B6 B0 A7 9F 
0d5bc     9C 93 82 6C | 	byte	$ac, $b2, $ba, $ba, $b2, $ac, $ad, $b3, $b6, $b0, $a7, $9f, $9c, $93, $82, $6c
0d5c0     5D 53 4C 44 
0d5c4     38 2B 25 27 
0d5c8     2C 2F 2E 30 
0d5cc     37 47 56 62 | 	byte	$5d, $53, $4c, $44, $38, $2b, $25, $27, $2c, $2f, $2e, $30, $37, $47, $56, $62
0d5d0     74 8A 9F AF 
0d5d4     B7 B6 B5 BB 
0d5d8     BE B8 AC A0 
0d5dc     99 97 9A 99 | 	byte	$74, $8a, $9f, $af, $b7, $b6, $b5, $bb, $be, $b8, $ac, $a0, $99, $97, $9a, $99
0d5e0     8B 83 7E 7A 
0d5e4     78 76 6F 64 
0d5e8     62 62 64 61 
0d5ec     5F 5E 69 6C | 	byte	$8b, $83, $7e, $7a, $78, $76, $6f, $64, $62, $62, $64, $61, $5f, $5e, $69, $6c
0d5f0     69 61 5C 5A 
0d5f4     57 58 5C 5C 
0d5f8     52 44 36 34 
0d5fc     38 3B 39 38 | 	byte	$69, $61, $5c, $5a, $57, $58, $5c, $5c, $52, $44, $36, $34, $38, $3b, $39, $38
0d600     38 39 39 3A 
0d604     3D 45 51 5E 
0d608     6B 76 80 88 
0d60c     8E 8E 8F 96 | 	byte	$38, $39, $39, $3a, $3d, $45, $51, $5e, $6b, $76, $80, $88, $8e, $8e, $8f, $96
0d610     99 95 88 7A 
0d614     73 74 7B 7D 
0d618     7B 7A 7B 75 
0d61c     68 5C 56 50 | 	byte	$99, $95, $88, $7a, $73, $74, $7b, $7d, $7b, $7a, $7b, $75, $68, $5c, $56, $50
0d620     49 43 41 42 
0d624     47 50 5D 6E 
0d628     79 78 6A 63 
0d62c     63 65 63 5D | 	byte	$49, $43, $41, $42, $47, $50, $5d, $6e, $79, $78, $6a, $63, $63, $65, $63, $5d
0d630     5A 67 7E 94 
0d634     9F AB BB CA 
0d638     CF CA C1 BA 
0d63c     B5 B0 AC A8 | 	byte	$5a, $67, $7e, $94, $9f, $ab, $bb, $ca, $cf, $ca, $c1, $ba, $b5, $b0, $ac, $a8
0d640     A0 98 95 9C 
0d644     A5 A8 A9 AF 
0d648     B9 BE C7 CE 
0d64c     CC CA CA D2 | 	byte	$a0, $98, $95, $9c, $a5, $a8, $a9, $af, $b9, $be, $c7, $ce, $cc, $ca, $ca, $d2
0d650     DE E0 D3 C8 
0d654     CA D6 DB D5 
0d658     CD CE D7 D8 
0d65c     D1 C7 B9 A8 | 	byte	$de, $e0, $d3, $c8, $ca, $d6, $db, $d5, $cd, $ce, $d7, $d8, $d1, $c7, $b9, $a8
0d660     91 7A 63 59 
0d664     57 55 53 53 
0d668     54 59 5C 5F 
0d66c     5E 5C 63 6A | 	byte	$91, $7a, $63, $59, $57, $55, $53, $53, $54, $59, $5c, $5f, $5e, $5c, $63, $6a
0d670     69 63 64 5D 
0d674     56 52 52 53 
0d678     50 51 53 5C 
0d67c     70 7B 7E 7E | 	byte	$69, $63, $64, $5d, $56, $52, $52, $53, $50, $51, $53, $5c, $70, $7b, $7e, $7e
0d680     7C 7D 83 85 
0d684     80 7B 7F 8C 
0d688     9B A5 A7 A3 
0d68c     A3 A9 B0 AD | 	byte	$7c, $7d, $83, $85, $80, $7b, $7f, $8c, $9b, $a5, $a7, $a3, $a3, $a9, $b0, $ad
0d690     9C 8B 7E 82 
0d694     88 82 78 7B 
0d698     8A 95 95 8F 
0d69c     8B 8D 95 9B | 	byte	$9c, $8b, $7e, $82, $88, $82, $78, $7b, $8a, $95, $95, $8f, $8b, $8d, $95, $9b
0d6a0     8E 78 67 68 
0d6a4     72 7D 7D 7D 
0d6a8     89 9D A5 A4 
0d6ac     A2 AA B5 B6 | 	byte	$8e, $78, $67, $68, $72, $7d, $7d, $7d, $89, $9d, $a5, $a4, $a2, $aa, $b5, $b6
0d6b0     AE A6 9F 9C 
0d6b4     9B 9B 97 93 
0d6b8     94 96 96 94 
0d6bc     8E 88 86 80 | 	byte	$ae, $a6, $9f, $9c, $9b, $9b, $97, $93, $94, $96, $96, $94, $8e, $88, $86, $80
0d6c0     76 6D 66 61 
0d6c4     59 4D 42 3A 
0d6c8     38 39 3B 39 
0d6cc     36 37 3E 48 | 	byte	$76, $6d, $66, $61, $59, $4d, $42, $3a, $38, $39, $3b, $39, $36, $37, $3e, $48
0d6d0     51 56 5C 64 
0d6d4     75 81 8A 8F 
0d6d8     92 91 89 7C 
0d6dc     6B 63 67 6A | 	byte	$51, $56, $5c, $64, $75, $81, $8a, $8f, $92, $91, $89, $7c, $6b, $63, $67, $6a
0d6e0     64 5B 58 5C 
0d6e4     66 6C 6D 65 
0d6e8     5F 5A 54 58 
0d6ec     5D 5F 54 49 | 	byte	$64, $5b, $58, $5c, $66, $6c, $6d, $65, $5f, $5a, $54, $58, $5d, $5f, $54, $49
0d6f0     49 51 5D 6A 
0d6f4     73 6F 6B 69 
0d6f8     68 67 65 65 
0d6fc     6C 75 7B 79 | 	byte	$49, $51, $5d, $6a, $73, $6f, $6b, $69, $68, $67, $65, $65, $6c, $75, $7b, $79
0d700     77 7B 84 8E 
0d704     95 9A 9A 93 
0d708     8B 88 8B 93 
0d70c     99 99 92 8E | 	byte	$77, $7b, $84, $8e, $95, $9a, $9a, $93, $8b, $88, $8b, $93, $99, $99, $92, $8e
0d710     90 90 8E 8C 
0d714     8B 8C 89 83 
0d718     7B 73 67 59 
0d71c     49 3F 34 29 | 	byte	$90, $90, $8e, $8c, $8b, $8c, $89, $83, $7b, $73, $67, $59, $49, $3f, $34, $29
0d720     20 1E 25 2B 
0d724     33 3A 45 4E 
0d728     55 5D 63 66 
0d72c     6B 6F 73 77 | 	byte	$20, $1e, $25, $2b, $33, $3a, $45, $4e, $55, $5d, $63, $66, $6b, $6f, $73, $77
0d730     78 77 7C 8C 
0d734     9B A3 A6 A4 
0d738     A5 AA B4 BB 
0d73c     BB B1 A6 A0 | 	byte	$78, $77, $7c, $8c, $9b, $a3, $a6, $a4, $a5, $aa, $b4, $bb, $bb, $b1, $a6, $a0
0d740     9D 93 83 7A 
0d744     8B AA C4 D2 
0d748     D6 D2 D7 E3 
0d74c     E5 E5 BE 9F | 	byte	$9d, $93, $83, $7a, $8b, $aa, $c4, $d2, $d6, $d2, $d7, $e3, $e5, $e5, $be, $9f
0d750     97 9F A8 A5 
0d754     9C 98 A4 BE 
0d758     D4 DA D2 C5 
0d75c     BD B6 A3 87 | 	byte	$97, $9f, $a8, $a5, $9c, $98, $a4, $be, $d4, $da, $d2, $c5, $bd, $b6, $a3, $87
0d760     6E 65 6A 73 
0d764     80 8C 94 98 
0d768     A4 B3 BC B4 
0d76c     9F 8C 86 82 | 	byte	$6e, $65, $6a, $73, $80, $8c, $94, $98, $a4, $b3, $bc, $b4, $9f, $8c, $86, $82
0d770     72 59 45 3E 
0d774     45 51 55 52 
0d778     4F 55 61 67 
0d77c     61 5C 5C 6A | 	byte	$72, $59, $45, $3e, $45, $51, $55, $52, $4f, $55, $61, $67, $61, $5c, $5c, $6a
0d780     76 7D 7E 86 
0d784     8C 8D 8E 8F 
0d788     8D 90 97 A3 
0d78c     A5 9B 8C 7F | 	byte	$76, $7d, $7e, $86, $8c, $8d, $8e, $8f, $8d, $90, $97, $a3, $a5, $9b, $8c, $7f
0d790     77 76 77 73 
0d794     6F 6B 69 67 
0d798     66 6C 73 74 
0d79c     74 6F 6B 6D | 	byte	$77, $76, $77, $73, $6f, $6b, $69, $67, $66, $6c, $73, $74, $74, $6f, $6b, $6d
0d7a0     70 69 53 40 
0d7a4     3C 43 48 48 
0d7a8     52 62 76 8C 
0d7ac     9F B0 B7 B4 | 	byte	$70, $69, $53, $40, $3c, $43, $48, $48, $52, $62, $76, $8c, $9f, $b0, $b7, $b4
0d7b0     A9 9C 8F 86 
0d7b4     85 8B 90 91 
0d7b8     99 AC BF CB 
0d7bc     CF CF CA BE | 	byte	$a9, $9c, $8f, $86, $85, $8b, $90, $91, $99, $ac, $bf, $cb, $cf, $cf, $ca, $be
0d7c0     B2 A4 91 77 
0d7c4     66 5F 60 61 
0d7c8     62 63 6E 7E 
0d7cc     87 82 6C 60 | 	byte	$b2, $a4, $91, $77, $66, $5f, $60, $61, $62, $63, $6e, $7e, $87, $82, $6c, $60
0d7d0     64 73 80 83 
0d7d4     7E 80 87 91 
0d7d8     99 94 86 75 
0d7dc     61 57 52 4B | 	byte	$64, $73, $80, $83, $7e, $80, $87, $91, $99, $94, $86, $75, $61, $57, $52, $4b
0d7e0     41 38 36 3A 
0d7e4     42 47 4E 5F 
0d7e8     73 79 71 66 
0d7ec     80 80 80 80 | 	byte	$41, $38, $36, $3a, $42, $47, $4e, $5f, $73, $79, $71, $66, $80, $80, $80, $80
0d7f0     80 80 80 80 
      ...             
0d854     80 80 80 80 
0d858     80 80 80 80 | 	byte	$80[108]
0d85c     5D 5F 66 72 
0d860     81 8A 8F 8D 
0d864     89 89 81 73 
0d868     62 5C 63 64 | 	byte	$5d, $5f, $66, $72, $81, $8a, $8f, $8d, $89, $89, $81, $73, $62, $5c, $63, $64
0d86c     5D 59 5B 63 
0d870     6C 74 79 72 
0d874     63 58 56 56 
0d878     55 51 4E 4D | 	byte	$5d, $59, $5b, $63, $6c, $74, $79, $72, $63, $58, $56, $56, $55, $51, $4e, $4d
0d87c     4D 4C 53 5E 
0d880     6C 77 82 89 
0d884     8B 85 7F 81 
0d888     85 7E 72 63 | 	byte	$4d, $4c, $53, $5e, $6c, $77, $82, $89, $8b, $85, $7f, $81, $85, $7e, $72, $63
0d88c     60 67 6B 68 
0d890     64 64 67 6A 
0d894     65 5A 4A 40 
0d898     43 50 5A 5D | 	byte	$60, $67, $6b, $68, $64, $64, $67, $6a, $65, $5a, $4a, $40, $43, $50, $5a, $5d
0d89c     5E 65 75 83 
0d8a0     8B 93 99 9C 
0d8a4     99 8C 75 75 
0d8a8     81 8F 94 94 | 	byte	$5e, $65, $75, $83, $8b, $93, $99, $9c, $99, $8c, $75, $75, $81, $8f, $94, $94
0d8ac     9E B0 C2 CC 
0d8b0     C8 BC AE A8 
0d8b4     A1 97 86 73 
0d8b8     67 60 59 4B | 	byte	$9e, $b0, $c2, $cc, $c8, $bc, $ae, $a8, $a1, $97, $86, $73, $67, $60, $59, $4b
0d8bc     43 4D 5F 67 
0d8c0     5C 47 3D 3E 
0d8c4     4B 49 3D 33 
0d8c8     37 48 65 7B | 	byte	$43, $4d, $5f, $67, $5c, $47, $3d, $3e, $4b, $49, $3d, $33, $37, $48, $65, $7b
0d8cc     7E 82 8D 9E 
0d8d0     A3 9B 93 8A 
0d8d4     88 87 8B 8E 
0d8d8     8D 8C 8F 9C | 	byte	$7e, $82, $8d, $9e, $a3, $9b, $93, $8a, $88, $87, $8b, $8e, $8d, $8c, $8f, $9c
0d8dc     B4 C4 C9 C7 
0d8e0     C9 CD D1 D1 
0d8e4     C5 AF 9C 9C 
0d8e8     AD B8 B1 9E | 	byte	$b4, $c4, $c9, $c7, $c9, $cd, $d1, $d1, $c5, $af, $9c, $9c, $ad, $b8, $b1, $9e
0d8ec     94 9C AC B3 
0d8f0     AE A4 A1 A5 
0d8f4     AB AA 9E 90 
0d8f8     86 84 7B 69 | 	byte	$94, $9c, $ac, $b3, $ae, $a4, $a1, $a5, $ab, $aa, $9e, $90, $86, $84, $7b, $69
0d8fc     5C 55 5A 67 
0d900     6E 6D 6A 6D 
0d904     74 73 67 69 
0d908     6E 7A 7E 79 | 	byte	$5c, $55, $5a, $67, $6e, $6d, $6a, $6d, $74, $73, $67, $69, $6e, $7a, $7e, $79
0d90c     68 5C 59 67 
0d910     7A 89 8C 87 
0d914     85 88 89 86 
0d918     7F 71 6A 66 | 	byte	$68, $5c, $59, $67, $7a, $89, $8c, $87, $85, $88, $89, $86, $7f, $71, $6a, $66
0d91c     5F 52 48 49 
0d920     53 60 67 65 
0d924     61 5F 6E 7F 
0d928     8B 8F 8F 92 | 	byte	$5f, $52, $48, $49, $53, $60, $67, $65, $61, $5f, $6e, $7f, $8b, $8f, $8f, $92
0d92c     9B AA B8 C4 
0d930     CD D5 DA D8 
0d934     D2 CC CD CC 
0d938     CB C9 C2 B5 | 	byte	$9b, $aa, $b8, $c4, $cd, $d5, $da, $d8, $d2, $cc, $cd, $cc, $cb, $c9, $c2, $b5
0d93c     A4 98 90 87 
0d940     74 56 46 48 
0d944     52 5C 65 67 
0d948     72 87 9A 9F | 	byte	$a4, $98, $90, $87, $74, $56, $46, $48, $52, $5c, $65, $67, $72, $87, $9a, $9f
0d94c     9E 99 99 9A 
0d950     95 89 73 6C 
0d954     6F 75 74 73 
0d958     6F 6E 79 85 | 	byte	$9e, $99, $99, $9a, $95, $89, $73, $6c, $6f, $75, $74, $73, $6f, $6e, $79, $85
0d95c     89 83 7B 75 
0d960     6B 63 54 49 
0d964     44 43 47 54 
0d968     64 7C 93 9E | 	byte	$89, $83, $7b, $75, $6b, $63, $54, $49, $44, $43, $47, $54, $64, $7c, $93, $9e
0d96c     9D 94 8E 8C 
0d970     83 76 64 5F 
0d974     67 73 75 69 
0d978     65 63 63 63 | 	byte	$9d, $94, $8e, $8c, $83, $76, $64, $5f, $67, $73, $75, $69, $65, $63, $63, $63
0d97c     5F 57 55 4D 
0d980     49 44 41 44 
0d984     4F 56 55 45 
0d988     3B 3D 3E 37 | 	byte	$5f, $57, $55, $4d, $49, $44, $41, $44, $4f, $56, $55, $45, $3b, $3d, $3e, $37
0d98c     2D 29 2C 39 
0d990     49 4D 4A 48 
0d994     51 56 55 4E 
0d998     4A 4B 53 58 | 	byte	$2d, $29, $2c, $39, $49, $4d, $4a, $48, $51, $56, $55, $4e, $4a, $4b, $53, $58
0d99c     65 76 87 91 
0d9a0     96 9B A2 A6 
0d9a4     A3 9E 98 95 
0d9a8     9B A2 A8 AC | 	byte	$65, $76, $87, $91, $96, $9b, $a2, $a6, $a3, $9e, $98, $95, $9b, $a2, $a8, $ac
0d9ac     AC AA AD B8 
0d9b0     B7 AD A2 A2 
0d9b4     A6 A3 8F 7E 
0d9b8     74 72 77 78 | 	byte	$ac, $aa, $ad, $b8, $b7, $ad, $a2, $a2, $a6, $a3, $8f, $7e, $74, $72, $77, $78
0d9bc     72 63 60 66 
0d9c0     64 5A 51 4B 
0d9c4     47 48 49 51 
0d9c8     5D 6B 71 77 | 	byte	$72, $63, $60, $66, $64, $5a, $51, $4b, $47, $48, $49, $51, $5d, $6b, $71, $77
0d9cc     7A 7C 7D 82 
0d9d0     8E 9A 9F 9D 
0d9d4     9B 96 98 9F 
0d9d8     AD C3 D8 DF | 	byte	$7a, $7c, $7d, $82, $8e, $9a, $9f, $9d, $9b, $96, $98, $9f, $ad, $c3, $d8, $df
0d9dc     E1 DF DA CD 
0d9e0     BE B6 B1 AD 
0d9e4     A7 A5 A1 A1 
0d9e8     A8 B3 BE BE | 	byte	$e1, $df, $da, $cd, $be, $b6, $b1, $ad, $a7, $a5, $a1, $a1, $a8, $b3, $be, $be
0d9ec     B4 AC A9 A9 
0d9f0     A4 99 8E 86 
0d9f4     7F 73 6B 68 
0d9f8     67 6B 64 48 | 	byte	$b4, $ac, $a9, $a9, $a4, $99, $8e, $86, $7f, $73, $6b, $68, $67, $6b, $64, $48
0d9fc     32 32 45 54 
0da00     54 43 3F 4E 
0da04     69 7D 83 7F 
0da08     79 79 86 94 | 	byte	$32, $32, $45, $54, $54, $43, $3f, $4e, $69, $7d, $83, $7f, $79, $79, $86, $94
0da0c     92 84 78 79 
0da10     7E 7F 78 69 
0da14     63 63 6D 76 
0da18     7B 7A 7B 8A | 	byte	$92, $84, $78, $79, $7e, $7f, $78, $69, $63, $63, $6d, $76, $7b, $7a, $7b, $8a
0da1c     9C A3 A1 9A 
0da20     97 95 99 A5 
0da24     B1 B4 AC A1 
0da28     A0 B2 CA D4 | 	byte	$9c, $a3, $a1, $9a, $97, $95, $99, $a5, $b1, $b4, $ac, $a1, $a0, $b2, $ca, $d4
0da2c     CF CA C7 C2 
0da30     BD B2 A2 9D 
0da34     9F A0 9C 92 
0da38     8A 86 86 8B | 	byte	$cf, $ca, $c7, $c2, $bd, $b2, $a2, $9d, $9f, $a0, $9c, $92, $8a, $86, $86, $8b
0da3c     8F 8E 88 83 
0da40     7E 81 86 88 
0da44     86 86 8D 9B 
0da48     A8 B2 B5 AF | 	byte	$8f, $8e, $88, $83, $7e, $81, $86, $88, $86, $86, $8d, $9b, $a8, $b2, $b5, $af
0da4c     A8 A2 9C 92 
0da50     86 71 64 56 
0da54     4B 49 4B 52 
0da58     55 56 53 50 | 	byte	$a8, $a2, $9c, $92, $86, $71, $64, $56, $4b, $49, $4b, $52, $55, $56, $53, $50
0da5c     4D 43 3A 33 
0da60     2B 2C 3E 4B 
0da64     52 4D 54 63 
0da68     79 8C 91 88 | 	byte	$4d, $43, $3a, $33, $2b, $2c, $3e, $4b, $52, $4d, $54, $63, $79, $8c, $91, $88
0da6c     85 88 8B 8A 
0da70     7F 74 74 82 
0da74     88 81 6C 59 
0da78     50 49 3E 31 | 	byte	$85, $88, $8b, $8a, $7f, $74, $74, $82, $88, $81, $6c, $59, $50, $49, $3e, $31
0da7c     25 26 37 40 
0da80     4A 4E 4F 5B 
0da84     73 8D 9C 9D 
0da88     91 7D 6D 68 | 	byte	$25, $26, $37, $40, $4a, $4e, $4f, $5b, $73, $8d, $9c, $9d, $91, $7d, $6d, $68
0da8c     69 69 63 58 
0da90     50 4A 46 44 
0da94     43 43 48 57 
0da98     67 6A 62 66 | 	byte	$69, $69, $63, $58, $50, $4a, $46, $44, $43, $43, $48, $57, $67, $6a, $62, $66
0da9c     6C 83 9A A4 
0daa0     A0 98 99 9F 
0daa4     A9 AF B0 B2 
0daa8     BD C8 C5 BE | 	byte	$6c, $83, $9a, $a4, $a0, $98, $99, $9f, $a9, $af, $b0, $b2, $bd, $c8, $c5, $be
0daac     B0 A9 A5 9E 
0dab0     91 8B 90 94 
0dab4     89 71 5B 4F 
0dab8     4E 4E 4B 43 | 	byte	$b0, $a9, $a5, $9e, $91, $8b, $90, $94, $89, $71, $5b, $4f, $4e, $4e, $4b, $43
0dabc     45 4E 55 53 
0dac0     53 46 42 47 
0dac4     4F 52 52 57 
0dac8     5C 61 62 63 | 	byte	$45, $4e, $55, $53, $53, $46, $42, $47, $4f, $52, $52, $57, $5c, $61, $62, $63
0dacc     69 74 81 82 
0dad0     79 72 73 7C 
0dad4     86 92 A1 B2 
0dad8     C2 CE D3 C8 | 	byte	$69, $74, $81, $82, $79, $72, $73, $7c, $86, $92, $a1, $b2, $c2, $ce, $d3, $c8
0dadc     B6 AF AF AE 
0dae0     A9 9D 91 92 
0dae4     A0 B1 BB C0 
0dae8     C0 BA BB C9 | 	byte	$b6, $af, $af, $ae, $a9, $9d, $91, $92, $a0, $b1, $bb, $c0, $c0, $ba, $bb, $c9
0daec     D6 DE DB D1 
0daf0     CD D6 DE D9 
0daf4     CA BA A8 97 
0daf8     87 72 61 53 | 	byte	$d6, $de, $db, $d1, $cd, $d6, $de, $d9, $ca, $ba, $a8, $97, $87, $72, $61, $53
0dafc     4C 45 3D 35 
0db00     36 46 5C 6F 
0db04     7F 90 99 98 
0db08     8F 8C 91 98 | 	byte	$4c, $45, $3d, $35, $36, $46, $5c, $6f, $7f, $90, $99, $98, $8f, $8c, $91, $98
0db0c     94 7E 5E 46 
0db10     41 53 71 88 
0db14     8C 84 7F 85 
0db18     90 9B 9F 9E | 	byte	$94, $7e, $5e, $46, $41, $53, $71, $88, $8c, $84, $7f, $85, $90, $9b, $9f, $9e
0db1c     9B 91 86 7B 
0db20     78 7A 81 8D 
0db24     98 A5 AF B9 
0db28     BC B3 A7 9F | 	byte	$9b, $91, $86, $7b, $78, $7a, $81, $8d, $98, $a5, $af, $b9, $bc, $b3, $a7, $9f
0db2c     9E 9B 91 82 
0db30     84 92 99 93 
0db34     89 7B 70 6F 
0db38     71 75 76 7A | 	byte	$9e, $9b, $91, $82, $84, $92, $99, $93, $89, $7b, $70, $6f, $71, $75, $76, $7a
0db3c     83 86 81 7D 
0db40     7E 8A 99 A3 
0db44     A2 9E 9B 9E 
0db48     A5 A4 9D 93 | 	byte	$83, $86, $81, $7d, $7e, $8a, $99, $a3, $a2, $9e, $9b, $9e, $a5, $a4, $9d, $93
0db4c     87 7E 77 68 
0db50     53 49 4E 59 
0db54     62 64 5E 65 
0db58     70 7F 87 80 | 	byte	$87, $7e, $77, $68, $53, $49, $4e, $59, $62, $64, $5e, $65, $70, $7f, $87, $80
0db5c     77 71 77 76 
0db60     68 57 51 58 
0db64     66 77 86 91 
0db68     94 95 98 9F | 	byte	$77, $71, $77, $76, $68, $57, $51, $58, $66, $77, $86, $91, $94, $95, $98, $9f
0db6c     9C 8F 88 8D 
0db70     96 93 89 7C 
0db74     6E 60 57 4E 
0db78     47 42 47 51 | 	byte	$9c, $8f, $88, $8d, $96, $93, $89, $7c, $6e, $60, $57, $4e, $47, $42, $47, $51
0db7c     57 52 42 37 
0db80     3C 51 65 6C 
0db84     70 72 6F 6D 
0db88     6C 6A 61 61 | 	byte	$57, $52, $42, $37, $3c, $51, $65, $6c, $70, $72, $6f, $6d, $6c, $6a, $61, $61
0db8c     57 46 32 22 
0db90     28 39 47 42 
0db94     36 30 35 43 
0db98     4C 4C 4D 52 | 	byte	$57, $46, $32, $22, $28, $39, $47, $42, $36, $30, $35, $43, $4c, $4c, $4d, $52
0db9c     5C 6A 78 7C 
0dba0     7A 87 9D AD 
0dba4     B2 AF AD B1 
0dba8     B2 AF A7 9F | 	byte	$5c, $6a, $78, $7c, $7a, $87, $9d, $ad, $b2, $af, $ad, $b1, $b2, $af, $a7, $9f
0dbac     97 8F 8E 8C 
0dbb0     85 7B 6C 5E 
0dbb4     4B 3B 32 2A 
0dbb8     29 2E 3C 58 | 	byte	$97, $8f, $8e, $8c, $85, $7b, $6c, $5e, $4b, $3b, $32, $2a, $29, $2e, $3c, $58
0dbbc     74 83 7F 78 
0dbc0     7C 8B 9B A6 
0dbc4     A4 93 85 81 
0dbc8     83 84 84 83 | 	byte	$74, $83, $7f, $78, $7c, $8b, $9b, $a6, $a4, $93, $85, $81, $83, $84, $84, $83
0dbcc     84 86 8E 95 
0dbd0     96 92 92 9B 
0dbd4     A4 AA AB AA 
0dbd8     AD B5 B9 B3 | 	byte	$84, $86, $8e, $95, $96, $92, $92, $9b, $a4, $aa, $ab, $aa, $ad, $b5, $b9, $b3
0dbdc     AB A3 99 8D 
0dbe0     8B 8F 92 9F 
0dbe4     B1 BF BE C6 
0dbe8     D3 DD E2 DD | 	byte	$ab, $a3, $99, $8d, $8b, $8f, $92, $9f, $b1, $bf, $be, $c6, $d3, $dd, $e2, $dd
0dbec     CF C4 BF BF 
0dbf0     C6 D0 D2 CA 
0dbf4     BD B4 A6 90 
0dbf8     75 62 54 44 | 	byte	$cf, $c4, $bf, $bf, $c6, $d0, $d2, $ca, $bd, $b4, $a6, $90, $75, $62, $54, $44
0dbfc     36 28 1E 21 
0dc00     2C 42 5C 70 
0dc04     73 67 58 4E 
0dc08     4E 62 6F 74 | 	byte	$36, $28, $1e, $21, $2c, $42, $5c, $70, $73, $67, $58, $4e, $4e, $62, $6f, $74
0dc0c     69 55 51 65 
0dc10     77 85 89 87 
0dc14     85 7B 74 70 
0dc18     6D 69 5D 53 | 	byte	$69, $55, $51, $65, $77, $85, $89, $87, $85, $7b, $74, $70, $6d, $69, $5d, $53
0dc1c     4C 46 46 57 
0dc20     75 92 A2 AE 
0dc24     B0 B1 B7 BF 
0dc28     CA DA E5 E5 | 	byte	$4c, $46, $46, $57, $75, $92, $a2, $ae, $b0, $b1, $b7, $bf, $ca, $da, $e5, $e5
0dc2c     D2 CA CE D2 
0dc30     D2 C5 AF 97 
0dc34     91 92 8F 8E 
0dc38     92 9C A9 AD | 	byte	$d2, $ca, $ce, $d2, $d2, $c5, $af, $97, $91, $92, $8f, $8e, $92, $9c, $a9, $ad
0dc3c     A4 9B 9B 9E 
0dc40     9C 95 8D 88 
0dc44     8C 99 A7 A1 
0dc48     8A 78 7B 7B | 	byte	$a4, $9b, $9b, $9e, $9c, $95, $8d, $88, $8c, $99, $a7, $a1, $8a, $78, $7b, $7b
0dc4c     72 55 3F 32 
0dc50     30 32 36 37 
0dc54     3D 50 6A 81 
0dc58     84 7B 73 6E | 	byte	$72, $55, $3f, $32, $30, $32, $36, $37, $3d, $50, $6a, $81, $84, $7b, $73, $6e
0dc5c     6F 6E 64 63 
0dc60     5C 59 5A 67 
0dc64     7A 89 8D 87 
0dc68     7A 6B 60 57 | 	byte	$6f, $6e, $64, $63, $5c, $59, $5a, $67, $7a, $89, $8d, $87, $7a, $6b, $60, $57
0dc6c     56 5A 60 67 
0dc70     6D 6C 65 62 
0dc74     67 74 7D 7D 
0dc78     6E 5A 48 3E | 	byte	$56, $5a, $60, $67, $6d, $6c, $65, $62, $67, $74, $7d, $7d, $6e, $5a, $48, $3e
0dc7c     41 49 47 43 
0dc80     46 49 52 4F 
0dc84     47 3C 33 2C 
0dc88     2D 30 36 39 | 	byte	$41, $49, $47, $43, $46, $49, $52, $4f, $47, $3c, $33, $2c, $2d, $30, $36, $39
0dc8c     3A 3C 43 4B 
0dc90     55 5C 65 6F 
0dc94     74 72 6E 71 
0dc98     76 80 92 A7 | 	byte	$3a, $3c, $43, $4b, $55, $5c, $65, $6f, $74, $72, $6e, $71, $76, $80, $92, $a7
0dc9c     BF CD CE C6 
0dca0     BC B8 BB C4 
0dca4     CC C9 C2 B9 
0dca8     B0 A0 97 95 | 	byte	$bf, $cd, $ce, $c6, $bc, $b8, $bb, $c4, $cc, $c9, $c2, $b9, $b0, $a0, $97, $95
0dcac     91 86 7D 72 
0dcb0     62 57 4F 4D 
0dcb4     4D 4C 55 59 
0dcb8     62 65 65 66 | 	byte	$91, $86, $7d, $72, $62, $57, $4f, $4d, $4d, $4c, $55, $59, $62, $65, $65, $66
0dcbc     68 62 59 53 
0dcc0     57 65 72 79 
0dcc4     77 77 7D 88 
0dcc8     92 96 91 88 | 	byte	$68, $62, $59, $53, $57, $65, $72, $79, $77, $77, $7d, $88, $92, $96, $91, $88
0dccc     81 82 85 83 
0dcd0     7C 7E 84 82 
0dcd4     77 6B 6B 6E 
0dcd8     79 80 81 84 | 	byte	$81, $82, $85, $83, $7c, $7e, $84, $82, $77, $6b, $6b, $6e, $79, $80, $81, $84
0dcdc     8D A0 B1 BC 
0dce0     C0 C5 CD D4 
0dce4     D2 CA BF BA 
0dce8     B7 B4 B9 C1 | 	byte	$8d, $a0, $b1, $bc, $c0, $c5, $cd, $d4, $d2, $ca, $bf, $ba, $b7, $b4, $b9, $c1
0dcec     CA CF D2 D4 
0dcf0     D6 CF BE AD 
0dcf4     A3 9A 88 76 
0dcf8     67 57 52 4F | 	byte	$ca, $cf, $d2, $d4, $d6, $cf, $be, $ad, $a3, $9a, $88, $76, $67, $57, $52, $4f
0dcfc     56 63 77 8C 
0dd00     95 90 86 7F 
0dd04     82 8D 8F 8B 
0dd08     89 89 85 83 | 	byte	$56, $63, $77, $8c, $95, $90, $86, $7f, $82, $8d, $8f, $8b, $89, $89, $85, $83
0dd0c     8C 97 9D 9E 
0dd10     97 8F 84 72 
0dd14     67 5F 60 69 
0dd18     62 56 50 56 | 	byte	$8c, $97, $9d, $9e, $97, $8f, $84, $72, $67, $5f, $60, $69, $62, $56, $50, $56
0dd1c     64 7E 93 A1 
0dd20     A9 AF BC CC 
0dd24     D8 DD D9 CF 
0dd28     BF AE A0 95 | 	byte	$64, $7e, $93, $a1, $a9, $af, $bc, $cc, $d8, $dd, $d9, $cf, $bf, $ae, $a0, $95
0dd2c     92 8E 87 81 
0dd30     83 86 90 9D 
0dd34     AD BC C2 B4 
0dd38     99 82 7A 72 | 	byte	$92, $8e, $87, $81, $83, $86, $90, $9d, $ad, $bc, $c2, $b4, $99, $82, $7a, $72
0dd3c     6B 5E 55 50 
0dd40     4E 59 6B 80 
0dd44     8F 8E 81 72 
0dd48     76 72 62 4D | 	byte	$6b, $5e, $55, $50, $4e, $59, $6b, $80, $8f, $8e, $81, $72, $76, $72, $62, $4d
0dd4c     3A 27 1D 1F 
0dd50     25 2E 3F 4C 
0dd54     53 52 5C 66 
0dd58     6E 74 72 69 | 	byte	$3a, $27, $1d, $1f, $25, $2e, $3f, $4c, $53, $52, $5c, $66, $6e, $74, $72, $69
0dd5c     64 6A 67 66 
0dd60     68 76 89 98 
0dd64     A1 9E 91 83 
0dd68     7C 83 90 96 | 	byte	$64, $6a, $67, $66, $68, $76, $89, $98, $a1, $9e, $91, $83, $7c, $83, $90, $96
0dd6c     95 92 98 9F 
0dd70     9C 9B 9F AE 
0dd74     B8 B5 AD 9D 
0dd78     8E 83 77 65 | 	byte	$95, $92, $98, $9f, $9c, $9b, $9f, $ae, $b8, $b5, $ad, $9d, $8e, $83, $77, $65
0dd7c     50 42 3E 37 
0dd80     27 1A 1A 24 
0dd84     2D 2E 2B 32 
0dd88     38 3E 40 3F | 	byte	$50, $42, $3e, $37, $27, $1a, $1a, $24, $2d, $2e, $2b, $32, $38, $3e, $40, $3f
0dd8c     3E 3F 43 4E 
0dd90     5B 64 62 60 
0dd94     61 68 78 87 
0dd98     8E 9B A5 AC | 	byte	$3e, $3f, $43, $4e, $5b, $64, $62, $60, $61, $68, $78, $87, $8e, $9b, $a5, $ac
0dd9c     AF B3 B0 AF 
0dda0     B4 B9 B1 A9 
0dda4     A2 99 8F 86 
0dda8     7D 74 67 5D | 	byte	$af, $b3, $b0, $af, $b4, $b9, $b1, $a9, $a2, $99, $8f, $86, $7d, $74, $67, $5d
0ddac     5A 5B 5D 54 
0ddb0     45 3A 3E 48 
0ddb4     46 3B 30 2C 
0ddb8     38 4B 53 46 | 	byte	$5a, $5b, $5d, $54, $45, $3a, $3e, $48, $46, $3b, $30, $2c, $38, $4b, $53, $46
0ddbc     40 40 49 49 
0ddc0     48 4A 58 69 
0ddc4     7B 8C 97 9B 
0ddc8     9C 9F AD BA | 	byte	$40, $40, $49, $49, $48, $4a, $58, $69, $7b, $8c, $97, $9b, $9c, $9f, $ad, $ba
0ddcc     BE B6 A8 9D 
0ddd0     92 8B 88 85 
0ddd4     80 7F 87 97 
0ddd8     AA B8 C3 D0 | 	byte	$be, $b6, $a8, $9d, $92, $8b, $88, $85, $80, $7f, $87, $97, $aa, $b8, $c3, $d0
0dddc     D5 DE E5 E5 
0dde0     E4 E4 E4 E4 
0dde4     E4 E4 E4 E4 
0dde8     D8 C4 C2 C8 | 	byte	$d5, $de, $e5, $e5, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $e4, $d8, $c4, $c2, $c8
0ddec     CB C3 AF 9A 
0ddf0     93 9A 9D 94 
0ddf4     83 74 70 6F 
0ddf8     6C 61 57 57 | 	byte	$cb, $c3, $af, $9a, $93, $9a, $9d, $94, $83, $74, $70, $6f, $6c, $61, $57, $57
0ddfc     64 73 79 77 
0de00     6B 6B 78 88 
0de04     81 6F 63 5B 
0de08     58 60 66 63 | 	byte	$64, $73, $79, $77, $6b, $6b, $78, $88, $81, $6f, $63, $5b, $58, $60, $66, $63
0de0c     5A 5B 62 67 
0de10     63 5E 57 5D 
0de14     61 65 65 69 
0de18     6C 6F 74 79 | 	byte	$5a, $5b, $62, $67, $63, $5e, $57, $5d, $61, $65, $65, $69, $6c, $6f, $74, $79
0de1c     7E 88 97 A3 
0de20     A6 A6 A9 AE 
0de24     B2 AE A3 9D 
0de28     A3 A3 93 7F | 	byte	$7e, $88, $97, $a3, $a6, $a6, $a9, $ae, $b2, $ae, $a3, $9d, $a3, $a3, $93, $7f
0de2c     77 79 83 8D 
0de30     90 92 A0 B1 
0de34     B9 AD 9B 91 
0de38     91 97 91 76 | 	byte	$77, $79, $83, $8d, $90, $92, $a0, $b1, $b9, $ad, $9b, $91, $91, $97, $91, $76
0de3c     61 54 55 59 
0de40     69 79 85 88 
0de44     8C 95 9B A1 
0de48     A5 9E 91 80 | 	byte	$61, $54, $55, $59, $69, $79, $85, $88, $8c, $95, $9b, $a1, $a5, $9e, $91, $80
0de4c     70 6B 63 5A 
0de50     4D 49 54 68 
0de54     6D 6B 68 6C 
0de58     74 7A 77 66 | 	byte	$70, $6b, $63, $5a, $4d, $49, $54, $68, $6d, $6b, $68, $6c, $74, $7a, $77, $66
0de5c     56 4F 62 79 
0de60     82 7E 7B 84 
0de64     91 9B 9F A1 
0de68     A3 A7 A7 A2 | 	byte	$56, $4f, $62, $79, $82, $7e, $7b, $84, $91, $9b, $9f, $a1, $a3, $a7, $a7, $a2
0de6c     99 8D 80 6E 
0de70     5F 57 5B 60 
0de74     5A 4C 3E 3D 
0de78     49 4A 3E 30 | 	byte	$99, $8d, $80, $6e, $5f, $57, $5b, $60, $5a, $4c, $3e, $3d, $49, $4a, $3e, $30
0de7c     28 27 26 27 
0de80     23 14 05 01 
0de84     0C 1D 2B 38 
0de88     3E 45 49 51 | 	byte	$28, $27, $26, $27, $23, $14, $05, $01, $0c, $1d, $2b, $38, $3e, $45, $49, $51
0de8c     57 5C 54 49 
0de90     47 51 58 56 
0de94     5B 70 89 99 
0de98     A7 B6 BF C2 | 	byte	$57, $5c, $54, $49, $47, $51, $58, $56, $5b, $70, $89, $99, $a7, $b6, $bf, $c2
0de9c     C5 C8 CA C9 
0dea0     C3 B1 A0 94 
0dea4     8A 86 88 8C 
0dea8     88 80 7F 8A | 	byte	$c5, $c8, $ca, $c9, $c3, $b1, $a0, $94, $8a, $86, $88, $8c, $88, $80, $7f, $8a
0deac     8F 85 7A 6C 
0deb0     69 61 64 64 
0deb4     5F 53 49 42 
0deb8     41 40 48 49 | 	byte	$8f, $85, $7a, $6c, $69, $61, $64, $64, $5f, $53, $49, $42, $41, $40, $48, $49
0debc     4B 4C 53 5E 
0dec0     71 85 90 93 
0dec4     92 97 A3 B0 
0dec8     BA B8 AB A3 | 	byte	$4b, $4c, $53, $5e, $71, $85, $90, $93, $92, $97, $a3, $b0, $ba, $b8, $ab, $a3
0decc     9D 98 8F 81 
0ded0     7B 7C 86 94 
0ded4     9B 97 8E 94 
0ded8     A6 B7 BD BF | 	byte	$9d, $98, $8f, $81, $7b, $7c, $86, $94, $9b, $97, $8e, $94, $a6, $b7, $bd, $bf
0dedc     CA DE E5 E5 
0dee0     E5 D9 D8 E0 
0dee4     E3 DA D0 C4 
0dee8     BB BF C6 BD | 	byte	$ca, $de, $e5, $e5, $e5, $d9, $d8, $e0, $e3, $da, $d0, $c4, $bb, $bf, $c6, $bd
0deec     A8 97 8F 89 
0def0     83 7B 74 6C 
0def4     5F 53 53 60 
0def8     66 63 5C 53 | 	byte	$a8, $97, $8f, $89, $83, $7b, $74, $6c, $5f, $53, $53, $60, $66, $63, $5c, $53
0defc     4D 4B 4A 52 
0df00     57 5B 5D 62 
0df04     66 63 66 76 
0df08     89 90 8C 89 | 	byte	$4d, $4b, $4a, $52, $57, $5b, $5d, $62, $66, $63, $66, $76, $89, $90, $8c, $89
0df0c     89 87 84 84 
0df10     8A 91 92 92 
0df14     93 9F B2 BB 
0df18     B6 B1 B3 BE | 	byte	$89, $87, $84, $84, $8a, $91, $92, $92, $93, $9f, $b2, $bb, $b6, $b1, $b3, $be
0df1c     CB D1 C7 B2 
0df20     A8 AC B5 B9 
0df24     B6 B0 AC B4 
0df28     BD BC B3 AC | 	byte	$cb, $d1, $c7, $b2, $a8, $ac, $b5, $b9, $b6, $b0, $ac, $b4, $bd, $bc, $b3, $ac
0df2c     AA AE B7 B6 
0df30     AA 9E 9B 9A 
0df34     92 84 73 67 
0df38     57 46 34 29 | 	byte	$aa, $ae, $b7, $b6, $aa, $9e, $9b, $9a, $92, $84, $73, $67, $57, $46, $34, $29
0df3c     21 1C 1B 27 
0df40     3C 58 68 6F 
0df44     74 82 96 A5 
0df48     A0 89 71 65 | 	byte	$21, $1c, $1b, $27, $3c, $58, $68, $6f, $74, $82, $96, $a5, $a0, $89, $71, $65
0df4c     67 61 55 4B 
0df50     4A 53 5F 6D 
0df54     6F 65 5B 50 
0df58     4B 45 40 41 | 	byte	$67, $61, $55, $4b, $4a, $53, $5f, $6d, $6f, $65, $5b, $50, $4b, $45, $40, $41
0df5c     43 4D 4C 54 
0df60     5A 68 75 91 
0df64     B6 D4 D9 CA 
0df68     B8 AD A7 9F | 	byte	$43, $4d, $4c, $54, $5a, $68, $75, $91, $b6, $d4, $d9, $ca, $b8, $ad, $a7, $9f
0df6c     8C 72 55 42 
0df70     3B 37 34 34 
0df74     3D 49 53 5F 
0df78     5F 5E 57 49 | 	byte	$8c, $72, $55, $42, $3b, $37, $34, $34, $3d, $49, $53, $5f, $5f, $5e, $57, $49
0df7c     41 3D 3A 35 
0df80     34 3C 49 53 
0df84     5F 6E 80 91 
0df88     9C A4 A3 96 | 	byte	$41, $3d, $3a, $35, $34, $3c, $49, $53, $5f, $6e, $80, $91, $9c, $a4, $a3, $96
0df8c     7F 6B 64 66 
0df90     69 6B 6B 74 
0df94     8E A9 BC CB 
0df98     D7 DE E1 DC | 	byte	$7f, $6b, $64, $66, $69, $6b, $6b, $74, $8e, $a9, $bc, $cb, $d7, $de, $e1, $dc
0df9c     D2 C1 AA 8A 
0dfa0     6B 54 48 47 
0dfa4     4B 4B 4B 5D 
0dfa8     6F 7E 7C 72 | 	byte	$d2, $c1, $aa, $8a, $6b, $54, $48, $47, $4b, $4b, $4b, $5d, $6f, $7e, $7c, $72
0dfac     68 5C 4C 39 
0dfb0     28 1F 21 2B 
0dfb4     30 2F 2F 36 
0dfb8     53 66 69 5D | 	byte	$68, $5c, $4c, $39, $28, $1f, $21, $2b, $30, $2f, $2f, $36, $53, $66, $69, $5d
0dfbc     55 56 5E 5D 
0dfc0     56 49 45 4B 
0dfc4     54 5B 64 72 
0dfc8     87 97 9B 9B | 	byte	$55, $56, $5e, $5d, $56, $49, $45, $4b, $54, $5b, $64, $72, $87, $97, $9b, $9b
0dfcc     9D A8 B7 BE 
0dfd0     BC B6 B1 B4 
0dfd4     B5 AE A5 A5 
0dfd8     B3 C7 D2 CE | 	byte	$9d, $a8, $b7, $be, $bc, $b6, $b1, $b4, $b5, $ae, $a5, $a5, $b3, $c7, $d2, $ce
0dfdc     CB D2 DD E0 
0dfe0     D6 C8 C0 C1 
0dfe4     C0 BE BC B8 
0dfe8     BC CC E4 E4 | 	byte	$cb, $d2, $dd, $e0, $d6, $c8, $c0, $c1, $c0, $be, $bc, $b8, $bc, $cc, $e4, $e4
0dfec     E4 E4 DE B8 
0dff0     A2 9C 9F 9F 
0dff4     90 7B 6E 68 
0dff8     61 57 51 5C | 	byte	$e4, $e4, $de, $b8, $a2, $9c, $9f, $9f, $90, $7b, $6e, $68, $61, $57, $51, $5c
0dffc     6E 77 70 64 
0e000     5B 5C 61 61 
0e004     66 74 7F 88 
0e008     8C 85 86 8E | 	byte	$6e, $77, $70, $64, $5b, $5c, $61, $61, $66, $74, $7f, $88, $8c, $85, $86, $8e
0e00c     9A A6 A9 9D 
0e010     87 73 70 77 
0e014     77 6B 64 69 
0e018     75 82 85 7F | 	byte	$9a, $a6, $a9, $9d, $87, $73, $70, $77, $77, $6b, $64, $69, $75, $82, $85, $7f
0e01c     81 8D 9E B1 
0e020     B7 AF A5 A7 
0e024     AE B3 B2 B1 
0e028     B3 B6 BD BC | 	byte	$81, $8d, $9e, $b1, $b7, $af, $a5, $a7, $ae, $b3, $b2, $b1, $b3, $b6, $bd, $bc
0e02c     AC 91 73 5F 
0e030     5B 61 54 39 
0e034     23 16 17 1C 
0e038     21 29 38 46 | 	byte	$ac, $91, $73, $5f, $5b, $61, $54, $39, $23, $16, $17, $1c, $21, $29, $38, $46
0e03c     4D 51 55 5D 
0e040     69 76 83 87 
0e044     7F 75 6E 6B 
0e048     66 60 64 6A | 	byte	$4d, $51, $55, $5d, $69, $76, $83, $87, $7f, $75, $6e, $6b, $66, $60, $64, $6a
0e04c     75 82 87 81 
0e050     75 6B 6E 75 
0e054     79 7E 7F 83 
0e058     87 8A 8D 95 | 	byte	$75, $82, $87, $81, $75, $6b, $6e, $75, $79, $7e, $7f, $83, $87, $8a, $8d, $95
0e05c     A2 B1 C2 CC 
0e060     CA C7 CE D8 
0e064     DD D7 CA B9 
0e068     A6 96 87 70 | 	byte	$a2, $b1, $c2, $cc, $ca, $c7, $ce, $d8, $dd, $d7, $ca, $b9, $a6, $96, $87, $70
0e06c     58 46 3D 3B 
0e070     3D 3C 3C 48 
0e074     55 59 53 4E 
0e078     53 56 4F 3E | 	byte	$58, $46, $3d, $3b, $3d, $3c, $3c, $48, $55, $59, $53, $4e, $53, $56, $4f, $3e
0e07c     26 12 11 19 
0e080     21 26 2A 34 
0e084     47 59 68 6C 
0e088     73 81 89 8C | 	byte	$26, $12, $11, $19, $21, $26, $2a, $34, $47, $59, $68, $6c, $73, $81, $89, $8c
0e08c     8C 87 7F 79 
0e090     80 92 A5 AF 
0e094     B2 AD AA AE 
0e098     A6 95 76 5F | 	byte	$8c, $87, $7f, $79, $80, $92, $a5, $af, $b2, $ad, $aa, $ae, $a6, $95, $76, $5f
0e09c     4E 4B 4C 3F 
0e0a0     2D 24 2B 3E 
0e0a4     4E 5C 65 6F 
0e0a8     7D 85 84 70 | 	byte	$4e, $4b, $4c, $3f, $2d, $24, $2b, $3e, $4e, $5c, $65, $6f, $7d, $85, $84, $70
0e0ac     5D 50 4B 43 
0e0b0     34 25 23 28 
0e0b4     2D 35 3E 49 
0e0b8     5A 70 82 8B | 	byte	$5d, $50, $4b, $43, $34, $25, $23, $28, $2d, $35, $3e, $49, $5a, $70, $82, $8b
0e0bc     8C 89 83 85 
0e0c0     8E 98 A1 A2 
0e0c4     9F 9F A3 B8 
0e0c8     D9 E4 E4 E4 | 	byte	$8c, $89, $83, $85, $8e, $98, $a1, $a2, $9f, $9f, $a3, $b8, $d9, $e4, $e4, $e4
0e0cc     E4 E4 E4 E4 
0e0d0     E4          | 	byte	$e4[5]
0e0d1     DA C3 BF C4 
0e0d5     C5 BD B3 B4 
0e0d9     C4 D3 D6 D0 
0e0dd     C9 C1 C0 C1 | 	byte	$da, $c3, $bf, $c4, $c5, $bd, $b3, $b4, $c4, $d3, $d6, $d0, $c9, $c1, $c0, $c1
0e0e1     BD B0 A9 A9 
0e0e5     AF B5 B2 A8 
0e0e9     9A 86 72 6B 
0e0ed     6D 6E 64 65 | 	byte	$bd, $b0, $a9, $a9, $af, $b5, $b2, $a8, $9a, $86, $72, $6b, $6d, $6e, $64, $65
0e0f1     72 80 87 88 
0e0f5     7E 6E 75 82 
0e0f9     8A 81 6F 5B 
0e0fd     4E 56 64 6E | 	byte	$72, $80, $87, $88, $7e, $6e, $75, $82, $8a, $81, $6f, $5b, $4e, $56, $64, $6e
0e101     6C 6A 6C 68 
0e105     5D 56 58 5E 
0e109     63 67 63 5A 
0e10d     53 5B 74 88 | 	byte	$6c, $6a, $6c, $68, $5d, $56, $58, $5e, $63, $67, $63, $5a, $53, $5b, $74, $88
0e111     8D 87 80 86 
0e115     90 8F 8C 86 
0e119     82 83 8B 99 
0e11d     A5 B3 BF C5 | 	byte	$8d, $87, $80, $86, $90, $8f, $8c, $86, $82, $83, $8b, $99, $a5, $b3, $bf, $c5
0e121     C0 BB B8 B8 
0e125     B9 AF A0 8D 
0e129     7A 77 8A 9F 
0e12d     A6 99 86 7B | 	byte	$c0, $bb, $b8, $b8, $b9, $af, $a0, $8d, $7a, $77, $8a, $9f, $a6, $99, $86, $7b
0e131     74 74 73 73 
0e135     73 74 67 61 
0e139     64 72 81 8B 
0e13d     90 91 8D 83 | 	byte	$74, $74, $73, $73, $73, $74, $67, $61, $64, $72, $81, $8b, $90, $91, $8d, $83
0e141     77 6F 67 64 
0e145     63 61 60 59 
0e149     5D 5B 4C 46 
0e14d     48 57 66 6B | 	byte	$77, $6f, $67, $64, $63, $61, $60, $59, $5d, $5b, $4c, $46, $48, $57, $66, $6b
0e151     65 59 56 5D 
0e155     69 71 77 77 
0e159     75 78 83 90 
0e15d     9E AD B9 C0 | 	byte	$65, $59, $56, $5d, $69, $71, $77, $77, $75, $78, $83, $90, $9e, $ad, $b9, $c0
0e161     C5 C7 C3 BF 
0e165     B9 AF 96 73 
0e169     50 3F 3F 45 
0e16d     3D 2D 1F 21 | 	byte	$c5, $c7, $c3, $bf, $b9, $af, $96, $73, $50, $3f, $3f, $45, $3d, $2d, $1f, $21
0e171     37 4C 53 4F 
0e175     4C 43 36 2B 
0e179     22 13 0A 0B 
0e17d     14 18 23 33 | 	byte	$37, $4c, $53, $4f, $4c, $43, $36, $2b, $22, $13, $0a, $0b, $14, $18, $23, $33
0e181     43 4C 57 67 
0e185     73 72 6E 78 
0e189     87 90 92 90 
0e18d     92 9D A6 A7 | 	byte	$43, $4c, $57, $67, $73, $72, $6e, $78, $87, $90, $92, $90, $92, $9d, $a6, $a7
0e191     AB B0 AF A8 
0e195     99 89 7E 7C 
0e199     7E 7E 7D 80 
0e19d     87 8D 93 95 | 	byte	$ab, $b0, $af, $a8, $99, $89, $7e, $7c, $7e, $7e, $7d, $80, $87, $8d, $93, $95
0e1a1     8D 83 82 85 
0e1a5     84 77 61 52 
0e1a9     51 5D 61 5D 
0e1ad     51 4F 55 52 | 	byte	$8d, $83, $82, $85, $84, $77, $61, $52, $51, $5d, $61, $5d, $51, $4f, $55, $52
0e1b1     51 4B 48 47 
0e1b5     46 42 43 4D 
0e1b9     5B 69 6D 6D 
0e1bd     78 88 9C AA | 	byte	$51, $4b, $48, $47, $46, $42, $43, $4d, $5b, $69, $6d, $6d, $78, $88, $9c, $aa
0e1c1     AE AF B1 B1 
0e1c5     B0 AE AA AC 
0e1c9     B7 BE B7 AF 
0e1cd     B8 CE DA D5 | 	byte	$ae, $af, $b1, $b1, $b0, $ae, $aa, $ac, $b7, $be, $b7, $af, $b8, $ce, $da, $d5
0e1d1     C8 C5 D1 E4 
0e1d5     E4 E4 D2 C4 
0e1d9     BD BD BD B6 
0e1dd     AB AB B6 BC | 	byte	$c8, $c5, $d1, $e4, $e4, $e4, $d2, $c4, $bd, $bd, $bd, $b6, $ab, $ab, $b6, $bc
0e1e1     B2 9E 8E 7E 
0e1e5     77 69 5D 4D 
0e1e9     41 3C 3C 3F 
0e1ed     46 51 68 86 | 	byte	$b2, $9e, $8e, $7e, $77, $69, $5d, $4d, $41, $3c, $3c, $3f, $46, $51, $68, $86
0e1f1     9F A3 9D 9B 
0e1f5     A1 A6 A6 9D 
0e1f9     93 8C 87 84 
0e1fd     81 80 83 88 | 	byte	$9f, $a3, $9d, $9b, $a1, $a6, $a6, $9d, $93, $8c, $87, $84, $81, $80, $83, $88
0e201     8F 97 9D 9E 
0e205     9B 97 95 94 
0e209     8E 85 89 9A 
0e20d     AD B5 AF A2 | 	byte	$8f, $97, $9d, $9e, $9b, $97, $95, $94, $8e, $85, $89, $9a, $ad, $b5, $af, $a2
0e211     9A 9A A4 AD 
0e215     B4 B4 B0 B1 
0e219     B5 B7 B7 B7 
0e21d     B9 B5 A7 97 | 	byte	$9a, $9a, $a4, $ad, $b4, $b4, $b0, $b1, $b5, $b7, $b7, $b7, $b9, $b5, $a7, $97
0e221     89 80 73 67 
0e225     64 69 69 5D 
0e229     54 53 58 5A 
0e22d     54 49 49 56 | 	byte	$89, $80, $73, $67, $64, $69, $69, $5d, $54, $53, $58, $5a, $54, $49, $49, $56
0e231     65 6B 6C 68 
0e235     68 6B 7A 80 
0e239     79 78 7D 85 
0e23d     80 76 67 65 | 	byte	$65, $6b, $6c, $68, $68, $6b, $7a, $80, $79, $78, $7d, $85, $80, $76, $67, $65
0e241     66 69 6D 70 
0e245     6C 61 53 49 
0e249     42 3B 36 2F 
0e24d     2A 29 2B 35 | 	byte	$66, $69, $6d, $70, $6c, $61, $53, $49, $42, $3b, $36, $2f, $2a, $29, $2b, $35
0e251     46 5C 70 81 
0e255     94 A2 A8 AB 
0e259     AA B0 BE C7 
0e25d     C4 BA B7 BD | 	byte	$46, $5c, $70, $81, $94, $a2, $a8, $ab, $aa, $b0, $be, $c7, $c4, $ba, $b7, $bd
0e261     C4 BD AE 9B 
0e265     8B 7D 6C 59 
0e269     43 2F 20 1B 
0e26d     20 37 4D 5E | 	byte	$c4, $bd, $ae, $9b, $8b, $7d, $6c, $59, $43, $2f, $20, $1b, $20, $37, $4d, $5e
0e271     69 73 82 8D 
0e275     91 85 6E 61 
0e279     5A 5D 55 3E 
0e27d     2D 2E 41 54 | 	byte	$69, $73, $82, $8d, $91, $85, $6e, $61, $5a, $5d, $55, $3e, $2d, $2e, $41, $54
0e281     67 73 7A 80 
0e285     83 8A 89 82 
0e289     77 72 79 7D 
0e28d     77 70 71 7D | 	byte	$67, $73, $7a, $80, $83, $8a, $89, $82, $77, $72, $79, $7d, $77, $70, $71, $7d
0e291     8C 97 99 8E 
0e295     7B 70 6D 63 
0e299     58 51 52 58 
0e29d     57 59 64 6E | 	byte	$8c, $97, $99, $8e, $7b, $70, $6d, $63, $58, $51, $52, $58, $57, $59, $64, $6e
0e2a1     74 73 6A 5D 
0e2a5     59 54 4F 48 
0e2a9     41 3D 3F 45 
0e2ad     4E 4D 4E 4B | 	byte	$74, $73, $6a, $5d, $59, $54, $4f, $48, $41, $3d, $3f, $45, $4e, $4d, $4e, $4b
0e2b1     48 47 48 53 
0e2b5     63 75 79 6A 
0e2b9     69 6A 6F 77 
0e2bd     79 79 7A 83 | 	byte	$48, $47, $48, $53, $63, $75, $79, $6a, $69, $6a, $6f, $77, $79, $79, $7a, $83
0e2c1     8D 94 94 91 
0e2c5     95 A4 C0 DA 
0e2c9     E4 E1 D6 D4 
0e2cd     E1 E4 E4 E4 | 	byte	$8d, $94, $94, $91, $95, $a4, $c0, $da, $e4, $e1, $d6, $d4, $e1, $e4, $e4, $e4
0e2d1     E4 E4 E4 E4 
0e2d5     DB D5 D0 CA 
0e2d9     C7 C6 C4 C1 
0e2dd     BF BA AF A9 | 	byte	$e4, $e4, $e4, $e4, $db, $d5, $d0, $ca, $c7, $c6, $c4, $c1, $bf, $ba, $af, $a9
0e2e1     A5 A0 9A 97 
0e2e5     91 8A 7E 6E 
0e2e9     5F 55 50 50 
0e2ed     5A 64 6A 71 | 	byte	$a5, $a0, $9a, $97, $91, $8a, $7e, $6e, $5f, $55, $50, $50, $5a, $64, $6a, $71
0e2f1     76 82 94 A6 
0e2f5     AE AD A9 A3 
0e2f9     94 84 73 6E 
0e2fd     71 79 80 8B | 	byte	$76, $82, $94, $a6, $ae, $ad, $a9, $a3, $94, $84, $73, $6e, $71, $79, $80, $8b
0e301     8E 8C 8B 91 
0e305     9E A5 9F 90 
0e309     88 8E 9C A6 
0e30d     A2 9B 98 9F | 	byte	$8e, $8c, $8b, $91, $9e, $a5, $9f, $90, $88, $8e, $9c, $a6, $a2, $9b, $98, $9f
0e311     AA B4 B9 B6 
0e315     B2 B3 B0 A3 
0e319     91 82 80 88 
0e31d     8F 88 71 6D | 	byte	$aa, $b4, $b9, $b6, $b2, $b3, $b0, $a3, $91, $82, $80, $88, $8f, $88, $71, $6d
0e321     72 78 7A 71 
0e325     5A 43 33 2E 
0e329     2C 28 24 23 
0e32d     25 28 2C 32 | 	byte	$72, $78, $7a, $71, $5a, $43, $33, $2e, $2c, $28, $24, $23, $25, $28, $2c, $32
0e331     3A 4F 62 76 
0e335     89 8F 91 96 
0e339     9F A4 A0 9D 
0e33d     9E 9A 8E 81 | 	byte	$3a, $4f, $62, $76, $89, $8f, $91, $96, $9f, $a4, $a0, $9d, $9e, $9a, $8e, $81
0e341     75 71 74 79 
0e345     81 82 7F 75 
0e349     64 55 4F 53 
0e34d     59 61 66 67 | 	byte	$75, $71, $74, $79, $81, $82, $7f, $75, $64, $55, $4f, $53, $59, $61, $66, $67
0e351     6B 75 81 87 
0e355     8F A0 B9 D1 
0e359     E4 E4 E4 DF 
0e35d     E2 E2 DB CB | 	byte	$6b, $75, $81, $87, $8f, $a0, $b9, $d1, $e4, $e4, $e4, $df, $e2, $e2, $db, $cb
0e361     B9 A9 9D 90 
0e365     77 61 51 4C 
0e369     43 33 1D 04 
0e36d     00 03 11 1F | 	byte	$b9, $a9, $9d, $90, $77, $61, $51, $4c, $43, $33, $1d, $04, $00, $03, $11, $1f
0e371     2A 32 39 4A 
0e375     5C 69 69 5E 
0e379     5D 66 78 89 
0e37d     8B 78 5F 54 | 	byte	$2a, $32, $39, $4a, $5c, $69, $69, $5e, $5d, $66, $78, $89, $8b, $78, $5f, $54
0e381     5C 6F 77 73 
0e385     67 5F 5E 59 
0e389     52 50 5C 69 
0e38d     72 71 64 57 | 	byte	$5c, $6f, $77, $73, $67, $5f, $5e, $59, $52, $50, $5c, $69, $72, $71, $64, $57
0e391     51 50 4D 4E 
0e395     52 57 55 5B 
0e399     60 64 69 6E 
0e39d     70 71 6D 6B | 	byte	$51, $50, $4d, $4e, $52, $57, $55, $5b, $60, $64, $69, $6e, $70, $71, $6d, $6b
0e3a1     71 79 78 68 
0e3a5     5A 5A 61 66 
0e3a9     5B 4C 43 3E 
0e3ad     42 4B 4B 52 | 	byte	$71, $79, $78, $68, $5a, $5a, $61, $66, $5b, $4c, $43, $3e, $42, $4b, $4b, $52
0e3b1     5F 6C 76 78 
0e3b5     7B 80 8B 99 
0e3b9     A2 A7 A6 A4 
0e3bd     A3 A0 9C 9D | 	byte	$5f, $6c, $76, $78, $7b, $80, $8b, $99, $a2, $a7, $a6, $a4, $a3, $a0, $9c, $9d
0e3c1     AB C2 D8 DF 
0e3c5     D8 D1 CF CD 
0e3c9     D1 D2 CB BF 
0e3cd     BB BD C2 C3 | 	byte	$ab, $c2, $d8, $df, $d8, $d1, $cf, $cd, $d1, $d2, $cb, $bf, $bb, $bd, $c2, $c3
0e3d1     C8 CB CE D7 
0e3d5     E2 E2 D8 C9 
0e3d9     BA B4 B3 AC 
0e3dd     9B 8C 87 8A | 	byte	$c8, $cb, $ce, $d7, $e2, $e2, $d8, $c9, $ba, $b4, $b3, $ac, $9b, $8c, $87, $8a
0e3e1     8A 84 7C 7C 
0e3e5     84 88 88 80 
0e3e9     6C 5C 4B 3A 
0e3ed     2E 2A 32 45 | 	byte	$8a, $84, $7c, $7c, $84, $88, $88, $80, $6c, $5c, $4b, $3a, $2e, $2a, $32, $45
0e3f1     5E 6E 74 72 
0e3f5     78 86 96 9B 
0e3f9     96 8C 82 7B 
0e3fd     76 74 72 77 | 	byte	$5e, $6e, $74, $72, $78, $86, $96, $9b, $96, $8c, $82, $7b, $76, $74, $72, $77
0e401     87 97 A7 AC 
0e405     AD AE B4 BA 
0e409     BD B8 AC A5 
0e40d     A8 B0 BB C7 | 	byte	$87, $97, $a7, $ac, $ad, $ae, $b4, $ba, $bd, $b8, $ac, $a5, $a8, $b0, $bb, $c7
0e411     D1 D0 CB C5 
0e415     BD B5 B2 A8 
0e419     98 88 7B 69 
0e41d     55 49 47 4C | 	byte	$d1, $d0, $cb, $c5, $bd, $b5, $b2, $a8, $98, $88, $7b, $69, $55, $49, $47, $4c
0e421     50 53 50 53 
0e425     59 56 56 4E 
0e429     42 30 24 27 
0e42d     3A 52 64 6C | 	byte	$50, $53, $50, $53, $59, $56, $56, $4e, $42, $30, $24, $27, $3a, $52, $64, $6c
0e431     69 6C 80 91 
0e435     9C 9E 9A 91 
0e439     85 7D 73 64 
0e43d     5F 64 6C 72 | 	byte	$69, $6c, $80, $91, $9c, $9e, $9a, $91, $85, $7d, $73, $64, $5f, $64, $6c, $72
0e441     6E 6A 69 6D 
0e445     71 78 7C 76 
0e449     6D 70 7A 84 
0e44d     8B 8E 95 9A | 	byte	$6e, $6a, $69, $6d, $71, $78, $7c, $76, $6d, $70, $7a, $84, $8b, $8e, $95, $9a
0e451     9A 9A A3 B4 
0e455     C3 CD D2 D5 
0e459     D8 D8 D2 BF 
0e45d     AF A3 95 7D | 	byte	$9a, $9a, $a3, $b4, $c3, $cd, $d2, $d5, $d8, $d8, $d2, $bf, $af, $a3, $95, $7d
0e461     64 48 37 2F 
0e465     2C 24 16 0D 
0e469     11 1C 2A 37 
0e46d     36 34 32 33 | 	byte	$64, $48, $37, $2f, $2c, $24, $16, $0d, $11, $1c, $2a, $37, $36, $34, $32, $33
0e471     3A 42 44 44 
0e475     4B 5F 7A 95 
0e479     A7 A9 A1 99 
0e47d     98 97 90 83 | 	byte	$3a, $42, $44, $44, $4b, $5f, $7a, $95, $a7, $a9, $a1, $99, $98, $97, $90, $83
0e481     75 65 59 53 
0e485     53 53 53 56 
0e489     5A 61 6B 6E 
0e48d     5F 5B 5A 5A | 	byte	$75, $65, $59, $53, $53, $53, $53, $56, $5a, $61, $6b, $6e, $5f, $5b, $5a, $5a
0e491     53 49 40 3C 
0e495     41 4C 55 59 
0e499     66 76 86 8C 
0e49d     8A 87 86 85 | 	byte	$53, $49, $40, $3c, $41, $4c, $55, $59, $66, $76, $86, $8c, $8a, $87, $86, $85
0e4a1     81 80 82 7D 
0e4a5     70 5D 4F 4B 
0e4a9     4F 55 59 5D 
0e4ad     60 63 69 72 | 	byte	$81, $80, $82, $7d, $70, $5d, $4f, $4b, $4f, $55, $59, $5d, $60, $63, $69, $72
0e4b1     74 75 81 95 
0e4b5     A4 AA B3 BA 
0e4b9     BD BC B2 A7 
0e4bd     A3 9F 9D 9D | 	byte	$74, $75, $81, $95, $a4, $aa, $b3, $ba, $bd, $bc, $b2, $a7, $a3, $9f, $9d, $9d
0e4c1     9F A3 A6 A7 
0e4c5     A6 A8 AC AF 
0e4c9     B3 B8 BB B9 
0e4cd     B7 B4 B5 B1 | 	byte	$9f, $a3, $a6, $a7, $a6, $a8, $ac, $af, $b3, $b8, $bb, $b9, $b7, $b4, $b5, $b1
0e4d1     A6 98 95 A7 
0e4d5     BA C1 C1 C3 
0e4d9     C8 D0 CD BF 
0e4dd     AE 9F 93 88 | 	byte	$a6, $98, $95, $a7, $ba, $c1, $c1, $c3, $c8, $d0, $cd, $bf, $ae, $9f, $93, $88
0e4e1     7C 77 72 6F 
0e4e5     6C 63 5A 4E 
0e4e9     48 45 42 40 
0e4ed     44 4E 55 51 | 	byte	$7c, $77, $72, $6f, $6c, $63, $5a, $4e, $48, $45, $42, $40, $44, $4e, $55, $51
0e4f1     4F 5D 7C 98 
0e4f5     A8 AE B0 B1 
0e4f9     B5 B8 B0 A3 
0e4fd     97 93 90 8C | 	byte	$4f, $5d, $7c, $98, $a8, $ae, $b0, $b1, $b5, $b8, $b0, $a3, $97, $93, $90, $8c
0e501     8A 94 AF CA 
0e505     D4 CA BA B8 
0e509     BD C0 C4 C4 
0e50d     C5 C5 C2 B9 | 	byte	$8a, $94, $af, $ca, $d4, $ca, $ba, $b8, $bd, $c0, $c4, $c4, $c5, $c5, $c2, $b9
0e511     AC A7 AE B7 
0e515     B4 A2 8C 72 
0e519     66 67 67 60 
0e51d     57 51 55 5C | 	byte	$ac, $a7, $ae, $b7, $b4, $a2, $8c, $72, $66, $67, $67, $60, $57, $51, $55, $5c
0e521     59 50 4E 51 
0e525     4C 3C 2D 2B 
0e529     34 42 44 46 
0e52d     55 63 6C 6F | 	byte	$59, $50, $4e, $51, $4c, $3c, $2d, $2b, $34, $42, $44, $46, $55, $63, $6c, $6f
0e531     74 7A 83 83 
0e535     7A 6C 62 5D 
0e539     5D 5D 5E 5E 
0e53d     57 55 4F 4E | 	byte	$74, $7a, $83, $83, $7a, $6c, $62, $5d, $5d, $5d, $5e, $5e, $57, $55, $4f, $4e
0e541     54 5F 67 64 
0e545     61 60 6B 76 
0e549     85 92 A1 B9 
0e54d     D9 E4 E4 DE | 	byte	$54, $5f, $67, $64, $61, $60, $6b, $76, $85, $92, $a1, $b9, $d9, $e4, $e4, $de
0e551     CF CC CE CC 
0e555     C3 B8 B3 B3 
0e559     B0 A9 A7 AC 
0e55d     AA 9A 7E 5C | 	byte	$cf, $cc, $ce, $cc, $c3, $b8, $b3, $b3, $b0, $a9, $a7, $ac, $aa, $9a, $7e, $5c
0e561     38 21 1A 17 
0e565     0D 00 00 08 
0e569     15 1D 1F 23 
0e56d     36 4E 5D 5D | 	byte	$38, $21, $1a, $17, $0d, $00, $00, $08, $15, $1d, $1f, $23, $36, $4e, $5d, $5d
0e571     60 6D 85 97 
0e575     9F 9D 9B A1 
0e579     A5 A1 96 8B 
0e57d     85 84 80 7B | 	byte	$60, $6d, $85, $97, $9f, $9d, $9b, $a1, $a5, $a1, $96, $8b, $85, $84, $80, $7b
0e581     7A 82 85 72 
0e585     5D 4C 46 49 
0e589     54 53 46 3E 
0e58d     3D 41 42 3D | 	byte	$7a, $82, $85, $72, $5d, $4c, $46, $49, $54, $53, $46, $3e, $3d, $41, $42, $3d
0e591     36 34 3C 4F 
0e595     63 6D 6C 6B 
0e599     6C 6F 6E 63 
0e59d     5A 5A 68 71 | 	byte	$36, $34, $3c, $4f, $63, $6d, $6c, $6b, $6c, $6f, $6e, $63, $5a, $5a, $68, $71
0e5a1     70 6F 71 71 
0e5a5     67 5C 50 4C 
0e5a9     4D 55 5E 61 
0e5ad     61 68 7B 9A | 	byte	$70, $6f, $71, $71, $67, $5c, $50, $4c, $4d, $55, $5e, $61, $61, $68, $7b, $9a
0e5b1     B4 BF C3 CC 
0e5b5     DC E5 E5 E5 
0e5b9     D5 B7 A5 9D 
0e5bd     95 8D 87 87 | 	byte	$b4, $bf, $c3, $cc, $dc, $e5, $e5, $e5, $d5, $b7, $a5, $9d, $95, $8d, $87, $87
0e5c1     8F 99 9A 91 
0e5c5     88 8C 91 9A 
0e5c9     A1 A3 A1 A0 
0e5cd     9F 9E A4 B1 | 	byte	$8f, $99, $9a, $91, $88, $8c, $91, $9a, $a1, $a3, $a1, $a0, $9f, $9e, $a4, $b1
0e5d1     BA B9 B9 C4 
0e5d5     D6 E4 E4 E4 
0e5d9     C3 B1 A7 9E 
0e5dd     91 84 6F 61 | 	byte	$ba, $b9, $b9, $c4, $d6, $e4, $e4, $e4, $c3, $b1, $a7, $9e, $91, $84, $6f, $61
0e5e1     58 5B 5F 5B 
0e5e5     55 55 5A 65 
0e5e9     6F 71 6F 6F 
0e5ed     74 7A 7D 7A | 	byte	$58, $5b, $5f, $5b, $55, $55, $5a, $65, $6f, $71, $6f, $6f, $74, $7a, $7d, $7a
0e5f1     7E 93 AC BB 
0e5f5     C0 BD BF C2 
0e5f9     BD AA 93 8B 
0e5fd     91 9C 9D 97 | 	byte	$7e, $93, $ac, $bb, $c0, $bd, $bf, $c2, $bd, $aa, $93, $8b, $91, $9c, $9d, $97
0e601     92 9B A8 B4 
0e605     B8 B6 B6 BF 
0e609     CF D5 CD B9 
0e60d     A6 A0 9E 97 | 	byte	$92, $9b, $a8, $b4, $b8, $b6, $b6, $bf, $cf, $d5, $cd, $b9, $a6, $a0, $9e, $97
0e611     81 63 53 50 
0e615     5C 5B 51 45 
0e619     45 52 5D 66 
0e61d     6A 69 5D 54 | 	byte	$81, $63, $53, $50, $5c, $5b, $51, $45, $45, $52, $5d, $66, $6a, $69, $5d, $54
0e621     50 57 65 6F 
0e625     71 60 4F 4F 
0e629     65 78 83 7E 
0e62d     77 73 74 76 | 	byte	$50, $57, $65, $6f, $71, $60, $4f, $4f, $65, $78, $83, $7e, $77, $73, $74, $76
0e631     6A 5E 5A 61 
0e635     65 63 5A 50 
0e639     4C 51 56 57 
0e63d     54 54 57 5D | 	byte	$6a, $5e, $5a, $61, $65, $63, $5a, $50, $4c, $51, $56, $57, $54, $54, $57, $5d
0e641     6A 74 76 75 
0e645     76 83 97 AB 
0e649     B5 BF C6 C9 
0e64d     CA C3 B9 B0 | 	byte	$6a, $74, $76, $75, $76, $83, $97, $ab, $b5, $bf, $c6, $c9, $ca, $c3, $b9, $b0
0e651     AA AD B3 B8 
0e655     B8 B8 BD C4 
0e659     C4 B5 9F 82 
0e65d     6D 5C 4E 41 | 	byte	$aa, $ad, $b3, $b8, $b8, $b8, $bd, $c4, $c4, $b5, $9f, $82, $6d, $5c, $4e, $41
0e661     2E 1D 18 1A 
0e665     22 25 25 25 
0e669     2D 3D 4A 4A 
0e66d     46 44 46 51 | 	byte	$2e, $1d, $18, $1a, $22, $25, $25, $25, $2d, $3d, $4a, $4a, $46, $44, $46, $51
0e671     6B 7E 81 7A 
0e675     72 77 8B 9E 
0e679     A3 94 7C 71 
0e67d     75 7F 7C 6A | 	byte	$6b, $7e, $81, $7a, $72, $77, $8b, $9e, $a3, $94, $7c, $71, $75, $7f, $7c, $6a
0e681     58 51 54 56 
0e685     4F 43 3F 45 
0e689     50 5B 5C 52 
0e68d     44 3F 3E 3A | 	byte	$58, $51, $54, $56, $4f, $43, $3f, $45, $50, $5b, $5c, $52, $44, $3f, $3e, $3a
0e691     35 36 3F 51 
0e695     65 69 5E 50 
0e699     57 64 73 7B 
0e69d     7B 72 67 6B | 	byte	$35, $36, $3f, $51, $65, $69, $5e, $50, $57, $64, $73, $7b, $7b, $72, $67, $6b
0e6a1     6C 62 4F 38 
0e6a5     28 29 37 48 
0e6a9     53 5E 75 97 
0e6ad     B8 C3 BC B8 | 	byte	$6c, $62, $4f, $38, $28, $29, $37, $48, $53, $5e, $75, $97, $b8, $c3, $bc, $b8
0e6b1     C7 DF E6 E5 
0e6b5     C6 B1 B7 CD 
0e6b9     DF DD CB BE 
0e6bd     C3 CF CF BD | 	byte	$c7, $df, $e6, $e5, $c6, $b1, $b7, $cd, $df, $dd, $cb, $be, $c3, $cf, $cf, $bd
0e6c1     AA 9C 8E 83 
0e6c5     7A 79 7B 7C 
0e6c9     80 82 84 86 
0e6cd     87 8B 90 91 | 	byte	$aa, $9c, $8e, $83, $7a, $79, $7b, $7c, $80, $82, $84, $86, $87, $8b, $90, $91
0e6d1     97 9F AD B6 
0e6d5     B7 B5 B4 BA 
0e6d9     BF BE B7 A9 
0e6dd     99 93 94 93 | 	byte	$97, $9f, $ad, $b6, $b7, $b5, $b4, $ba, $bf, $be, $b7, $a9, $99, $93, $94, $93
0e6e1     87 6F 56 3D 
0e6e5     2D 2C 3A 4F 
0e6e9     5F 69 73 7F 
0e6ed     88 8E 96 A3 | 	byte	$87, $6f, $56, $3d, $2d, $2c, $3a, $4f, $5f, $69, $73, $7f, $88, $8e, $96, $a3
0e6f1     B7 CC DB DA 
0e6f5     D1 C8 C7 CE 
0e6f9     D5 D3 C3 B9 
0e6fd     B4 AE AB AC | 	byte	$b7, $cc, $db, $da, $d1, $c8, $c7, $ce, $d5, $d3, $c3, $b9, $b4, $ae, $ab, $ac
0e701     AD A8 9E 94 
0e705     91 96 9B 94 
0e709     7D 69 5C 5B 
0e70d     61 63 56 44 | 	byte	$ad, $a8, $9e, $94, $91, $96, $9b, $94, $7d, $69, $5c, $5b, $61, $63, $56, $44
0e711     38 3B 4C 64 
0e715     7F 8C 8B 80 
0e719     7A 80 86 81 
0e71d     77 6E 67 5D | 	byte	$38, $3b, $4c, $64, $7f, $8c, $8b, $80, $7a, $80, $86, $81, $77, $6e, $67, $5d
0e721     56 4B 43 43 
0e725     50 5E 70 7C 
0e729     83 89 92 99 
0e72d     99 96 90 89 | 	byte	$56, $4b, $43, $43, $50, $5e, $70, $7c, $83, $89, $92, $99, $99, $96, $90, $89
0e731     89 92 95 8B 
0e735     81 7D 84 8B 
0e739     8D 82 7A 7A 
0e73d     7D 7F 7E 73 | 	byte	$89, $92, $95, $8b, $81, $7d, $84, $8b, $8d, $82, $7a, $7a, $7d, $7f, $7e, $73
0e741     68 60 5F 66 
0e745     75 80 8C 96 
0e749     A0 A9 B5 BC 
0e74d     B1 A0 90 8C | 	byte	$68, $60, $5f, $66, $75, $80, $8c, $96, $a0, $a9, $b5, $bc, $b1, $a0, $90, $8c
0e751     8A 7F 6D 69 
0e755     75 80 7E 7A 
0e759     80 91 9A 95 
0e75d     85 6F 5D 51 | 	byte	$8a, $7f, $6d, $69, $75, $80, $7e, $7a, $80, $91, $9a, $95, $85, $6f, $5d, $51
0e761     42 32 2D 30 
0e765     37 44 4E 59 
0e769     6F 8F A3 A3 
0e76d     91 80 7A 78 | 	byte	$42, $32, $2d, $30, $37, $44, $4e, $59, $6f, $8f, $a3, $a3, $91, $80, $7a, $78
0e771     73 5E 44 33 
0e775     36 43 4B 4C 
0e779     4A 4C 5A 65 
0e77d     5F 55 4F 52 | 	byte	$73, $5e, $44, $33, $36, $43, $4b, $4c, $4a, $4c, $5a, $65, $5f, $55, $4f, $52
0e781     57 5A 54 46 
0e785     3E 48 58 60 
0e789     5C 4C 3D 39 
0e78d     42 43 44 47 | 	byte	$57, $5a, $54, $46, $3e, $48, $58, $60, $5c, $4c, $3d, $39, $42, $43, $44, $47
0e791     50 56 63 6E 
0e795     70 6A 64 6B 
0e799     77 88 8F 8F 
0e79d     86 7B 75 73 | 	byte	$50, $56, $63, $6e, $70, $6a, $64, $6b, $77, $88, $8f, $8f, $86, $7b, $75, $73
0e7a1     6E 5F 50 4E 
0e7a5     63 76 7F 81 
0e7a9     82 8E A7 BF 
0e7ad     CD CE C9 C8 | 	byte	$6e, $5f, $50, $4e, $63, $76, $7f, $81, $82, $8e, $a7, $bf, $cd, $ce, $c9, $c8
0e7b1     CE CE BD A1 
0e7b5     90 8E 98 9C 
0e7b9     95 8A 87 8F 
0e7bd     9B AA B1 AE | 	byte	$ce, $ce, $bd, $a1, $90, $8e, $98, $9c, $95, $8a, $87, $8f, $9b, $aa, $b1, $ae
0e7c1     A5 9D 9A 9C 
0e7c5     99 95 8A 7D 
0e7c9     75 75 80 8F 
0e7cd     96 93 95 A4 | 	byte	$a5, $9d, $9a, $9c, $99, $95, $8a, $7d, $75, $75, $80, $8f, $96, $93, $95, $a4
0e7d1     B5 BC B8 B1 
0e7d5     AE AF AF AD 
0e7d9     A4 96 8A 84 
0e7dd     80 72 61 4E | 	byte	$b5, $bc, $b8, $b1, $ae, $af, $af, $ad, $a4, $96, $8a, $84, $80, $72, $61, $4e
0e7e1     43 40 41 3E 
0e7e5     35 33 3A 55 
0e7e9     6F 80 8A 91 
0e7ed     A1 B8 CB D3 | 	byte	$43, $40, $41, $3e, $35, $33, $3a, $55, $6f, $80, $8a, $91, $a1, $b8, $cb, $d3
0e7f1     D2 D2 CC CC 
0e7f5     D0 D0 C9 C2 
0e7f9     C2 C0 B9 AF 
0e7fd     A7 A9 BA C7 | 	byte	$d2, $d2, $cc, $cc, $d0, $d0, $c9, $c2, $c2, $c0, $b9, $af, $a7, $a9, $ba, $c7
0e801     CA C1 B4 AE 
0e805     AF B0 A7 95 
0e809     79 6B 62 5E 
0e80d     4F 4A 53 64 | 	byte	$ca, $c1, $b4, $ae, $af, $b0, $a7, $95, $79, $6b, $62, $5e, $4f, $4a, $53, $64
0e811     73 78 77 77 
0e815     7E 7F 7A 75 
0e819     6A 68 5E 58 
0e81d     4E 49 49 4C | 	byte	$73, $78, $77, $77, $7e, $7f, $7a, $75, $6a, $68, $5e, $58, $4e, $49, $49, $4c
0e821     49 3D 37 41 
0e825     5C 75 7F 7B 
0e829     7E 8A 99 A7 
0e82d     B2 B0 AA AB | 	byte	$49, $3d, $37, $41, $5c, $75, $7f, $7b, $7e, $8a, $99, $a7, $b2, $b0, $aa, $ab
0e831     B3 B6 AF A6 
0e835     A1 A2 A5 A7 
0e839     9E 8D 85 88 
0e83d     90 99 9E 9C | 	byte	$b3, $b6, $af, $a6, $a1, $a2, $a5, $a7, $9e, $8d, $85, $88, $90, $99, $9e, $9c
0e841     9F A7 AE AC 
0e845     A4 99 92 8F 
0e849     86 7A 64 4F 
0e84d     3F 3C 3D 3E | 	byte	$9f, $a7, $ae, $ac, $a4, $99, $92, $8f, $86, $7a, $64, $4f, $3f, $3c, $3d, $3e
0e851     3A 37 36 3C 
0e855     48 51 53 50 
0e859     51 56 5C 5F 
0e85d     5B 54 5D 69 | 	byte	$3a, $37, $36, $3c, $48, $51, $53, $50, $51, $56, $5c, $5f, $5b, $54, $5d, $69
0e861     71 77 7B 7F 
0e865     85 91 A0 A8 
0e869     A3 96 8F 8F 
0e86d     8F 88 7C 79 | 	byte	$71, $77, $7b, $7f, $85, $91, $a0, $a8, $a3, $96, $8f, $8f, $8f, $88, $7c, $79
0e871     7C 81 81 77 
0e875     66 55 50 53 
0e879     56 55 4F 49 
0e87d     4B 55 5C 60 | 	byte	$7c, $81, $81, $77, $66, $55, $50, $53, $56, $55, $4f, $49, $4b, $55, $5c, $60
0e881     5B 54 51 5D 
0e885     65 5F 53 46 
0e889     3A 32 34 37 
0e88d     39 3A 3F 47 | 	byte	$5b, $54, $51, $5d, $65, $5f, $53, $46, $3a, $32, $34, $37, $39, $3a, $3f, $47
0e891     53 59 5B 57 
0e895     62 69 6B 69 
0e899     65 5D 5B 65 
0e89d     6C 73 7B 82 | 	byte	$53, $59, $5b, $57, $62, $69, $6b, $69, $65, $5d, $5b, $65, $6c, $73, $7b, $82
0e8a1     87 91 A3 B7 
0e8a5     CA D5 D8 D6 
0e8a9     D5 D9 DA CD 
0e8ad     B9 A7 98 91 | 	byte	$87, $91, $a3, $b7, $ca, $d5, $d8, $d6, $d5, $d9, $da, $cd, $b9, $a7, $98, $91
0e8b1     88 7B 6A 58 
0e8b5     4D 4D 53 55 
0e8b9     50 49 48 4F 
0e8bd     52 58 63 75 | 	byte	$88, $7b, $6a, $58, $4d, $4d, $53, $55, $50, $49, $48, $4f, $52, $58, $63, $75
0e8c1     8B 9D A7 AD 
0e8c5     B5 BE C2 BE 
0e8c9     AE 98 85 80 
0e8cd     80 82 7F 7F | 	byte	$8b, $9d, $a7, $ad, $b5, $be, $c2, $be, $ae, $98, $85, $80, $80, $82, $7f, $7f
0e8d1     8B 99 9F A5 
0e8d5     AF B7 BC B9 
0e8d9     AE A5 97 87 
0e8dd     76 66 60 5B | 	byte	$8b, $99, $9f, $a5, $af, $b7, $bc, $b9, $ae, $a5, $97, $87, $76, $66, $60, $5b
0e8e1     62 70 82 90 
0e8e5     94 92 96 A0 
0e8e9     AB B0 B2 B0 
0e8ed     A9 9F 9B 9F | 	byte	$62, $70, $82, $90, $94, $92, $96, $a0, $ab, $b0, $b2, $b0, $a9, $9f, $9b, $9f
0e8f1     A7 B3 BB BC 
0e8f5     B7 AA A5 A7 
0e8f9     A4 98 8E 90 
0e8fd     92 98 A0 A3 | 	byte	$a7, $b3, $bb, $bc, $b7, $aa, $a5, $a7, $a4, $98, $8e, $90, $92, $98, $a0, $a3
0e901     A4 A7 A4 9F 
0e905     9F A1 A0 97 
0e909     8C 88 8E 95 
0e90d     94 8D 82 81 | 	byte	$a4, $a7, $a4, $9f, $9f, $a1, $a0, $97, $8c, $88, $8e, $95, $94, $8d, $82, $81
0e911     85 84 7B 6D 
0e915     70 73 74 6C 
0e919     5F 50 45 3F 
0e91d     39 2E 20 1D | 	byte	$85, $84, $7b, $6d, $70, $73, $74, $6c, $5f, $50, $45, $3f, $39, $2e, $20, $1d
0e921     24 33 41 3F 
0e925     37 38 4E 6A 
0e929     80 8C 94 9A 
0e92d     A2 AD AD 9F | 	byte	$24, $33, $41, $3f, $37, $38, $4e, $6a, $80, $8c, $94, $9a, $a2, $ad, $ad, $9f
0e931     93 8C 8C 8F 
0e935     8D 84 7F 88 
0e939     96 A2 AB B1 
0e93d     B4 BA C5 CE | 	byte	$93, $8c, $8c, $8f, $8d, $84, $7f, $88, $96, $a2, $ab, $b1, $b4, $ba, $c5, $ce
0e941     CA C4 C3 CE 
0e945     D6 D8 C8 AB 
0e949     8F 7C 76 76 
0e94d     6C 5A 47 46 | 	byte	$ca, $c4, $c3, $ce, $d6, $d8, $c8, $ab, $8f, $7c, $76, $76, $6c, $5a, $47, $46
0e951     51 54 4A 46 
0e955     48 4F 4F 43 
0e959     33 26 1A 15 
0e95d     1C 2C 3F 4E | 	byte	$51, $54, $4a, $46, $48, $4f, $4f, $43, $33, $26, $1a, $15, $1c, $2c, $3f, $4e
0e961     55 5A 63 71 
0e965     7F 88 89 84 
0e969     86 91 9F A7 
0e96d     A2 98 92 95 | 	byte	$55, $5a, $63, $71, $7f, $88, $89, $84, $86, $91, $9f, $a7, $a2, $98, $92, $95
0e971     96 91 82 6B 
0e975     5C 5D 69 73 
0e979     72 66 5C 5E 
0e97d     69 76 79 70 | 	byte	$96, $91, $82, $6b, $5c, $5d, $69, $73, $72, $66, $5c, $5e, $69, $76, $79, $70
0e981     68 63 65 67 
0e985     61 4B 36 2A 
0e989     2A 32 3E 3D 
0e98d     34 29 1E 19 | 	byte	$68, $63, $65, $67, $61, $4b, $36, $2a, $2a, $32, $3e, $3d, $34, $29, $1e, $19
0e991     1A 1B 21 2C 
0e995     37 42 4F 57 
0e999     54 55 5E 73 
0e99d     8B 9B 9B 94 | 	byte	$1a, $1b, $21, $2c, $37, $42, $4f, $57, $54, $55, $5e, $73, $8b, $9b, $9b, $94
0e9a1     92 94 9B A2 
0e9a5     A6 A5 AE C1 
0e9a9     D0 CC BC B3 
0e9ad     AF B3 B4 A8 | 	byte	$92, $94, $9b, $a2, $a6, $a5, $ae, $c1, $d0, $cc, $bc, $b3, $af, $b3, $b4, $a8
0e9b1     9C 99 9E 9D 
0e9b5     94 86 7A 78 
0e9b9     7B 7D 7A 7B 
0e9bd     82 8A 8F 90 | 	byte	$9c, $99, $9e, $9d, $94, $86, $7a, $78, $7b, $7d, $7a, $7b, $82, $8a, $8f, $90
0e9c1     8E 8A 87 85 
0e9c5     7D 75 6B 65 
0e9c9     63 6E 7D 86 
0e9cd     8D 93 99 A4 | 	byte	$8e, $8a, $87, $85, $7d, $75, $6b, $65, $63, $6e, $7d, $86, $8d, $93, $99, $a4
0e9d1     B2 BB C1 C0 
0e9d5     B8 AD 9F 8A 
0e9d9     72 62 62 68 
0e9dd     6D 69 68 6E | 	byte	$b2, $bb, $c1, $c0, $b8, $ad, $9f, $8a, $72, $62, $62, $68, $6d, $69, $68, $6e
0e9e1     7B 8E 9D A7 
0e9e5     AA A6 A6 AE 
0e9e9     B7 C4 D2 D5 
0e9ed     CC C8 C9 C8 | 	byte	$7b, $8e, $9d, $a7, $aa, $a6, $a6, $ae, $b7, $c4, $d2, $d5, $cc, $c8, $c9, $c8
0e9f1     C5 BA A6 97 
0e9f5     91 8C 81 6F 
0e9f9     68 6F 74 80 
0e9fd     81 75 6A 69 | 	byte	$c5, $ba, $a6, $97, $91, $8c, $81, $6f, $68, $6f, $74, $80, $81, $75, $6a, $69
0ea01     6E 70 6D 5E 
0ea05     63 6B 74 75 
0ea09     7D 8A 97 9A 
0ea0d     8C 76 6F 78 | 	byte	$6e, $70, $6d, $5e, $63, $6b, $74, $75, $7d, $8a, $97, $9a, $8c, $76, $6f, $78
0ea11     82 89 8E 91 
0ea15     95 98 94 8C 
0ea19     85 83 86 87 
0ea1d     80 76 6D 6A | 	byte	$82, $89, $8e, $91, $95, $98, $94, $8c, $85, $83, $86, $87, $80, $76, $6d, $6a
0ea21     71 73 76 7B 
0ea25     83 8A 91 92 
0ea29     8F 88 83 7E 
0ea2d     7A 77 78 79 | 	byte	$71, $73, $76, $7b, $83, $8a, $91, $92, $8f, $88, $83, $7e, $7a, $77, $78, $79
0ea31     7C 80 7F 7E 
0ea35     87 92 99 A0 
0ea39     A9 B5 C1 D0 
0ea3d     DD E5 E5 E5 | 	byte	$7c, $80, $7f, $7e, $87, $92, $99, $a0, $a9, $b5, $c1, $d0, $dd, $e5, $e5, $e5
0ea41     D0 B4 9E 92 
0ea45     8E 89 78 65 
0ea49     5C 68 73 82 
0ea4d     88 85 85 82 | 	byte	$d0, $b4, $9e, $92, $8e, $89, $78, $65, $5c, $68, $73, $82, $88, $85, $85, $82
0ea51     81 7D 6B 4F 
0ea55     3D 38 37 35 
0ea59     2E 2A 2E 34 
0ea5d     42 45 46 44 | 	byte	$81, $7d, $6b, $4f, $3d, $38, $37, $35, $2e, $2a, $2e, $34, $42, $45, $46, $44
0ea61     3A 36 40 4B 
0ea65     48 40 3C 43 
0ea69     50 5E 68 6D 
0ea6d     6D 6C 6C 67 | 	byte	$3a, $36, $40, $4b, $48, $40, $3c, $43, $50, $5e, $68, $6d, $6d, $6c, $6c, $67
0ea71     5A 4C 44 43 
0ea75     48 46 4B 53 
0ea79     66 7A 91 A4 
0ea7d     AC AF A7 9B | 	byte	$5a, $4c, $44, $43, $48, $46, $4b, $53, $66, $7a, $91, $a4, $ac, $af, $a7, $9b
0ea81     8D 80 76 74 
0ea85     77 76 6C 5F 
0ea89     56 50 59 62 
0ea8d     68 6D 76 83 | 	byte	$8d, $80, $76, $74, $77, $76, $6c, $5f, $56, $50, $59, $62, $68, $6d, $76, $83
0ea91     88 8E 8E 87 
0ea95     7F 77 67 5A 
0ea99     51 4A 47 4A 
0ea9d     4C 55 62 6C | 	byte	$88, $8e, $8e, $87, $7f, $77, $67, $5a, $51, $4a, $47, $4a, $4c, $55, $62, $6c
0eaa1     73 7C 8E 9D 
0eaa5     9F 9A 8F 88 
0eaa9     88 8E 93 96 
0eaad     9C A3 AB B7 | 	byte	$73, $7c, $8e, $9d, $9f, $9a, $8f, $88, $88, $8e, $93, $96, $9c, $a3, $ab, $b7
0eab1     B8 AA 99 86 
0eab5     78 71 6D 6C 
0eab9     75 84 92 9C 
0eabd     A7 AF B5 B6 | 	byte	$b8, $aa, $99, $86, $78, $71, $6d, $6c, $75, $84, $92, $9c, $a7, $af, $b5, $b6
0eac1     AD 9E 92 92 
0eac5     96 8E 78 64 
0eac9     5A 63 70 79 
0eacd     7C 7E 7E 7A | 	byte	$ad, $9e, $92, $92, $96, $8e, $78, $64, $5a, $63, $70, $79, $7c, $7e, $7e, $7a
0ead1     78 79 79 7A 
0ead5     76 6B 62 5D 
0ead9     5B 60 63 60 
0eadd     60 5E 5E 64 | 	byte	$78, $79, $79, $7a, $76, $6b, $62, $5d, $5b, $60, $63, $60, $60, $5e, $5e, $64
0eae1     73 84 97 AB 
0eae5     BF D1 DB DB 
0eae9     D8 CF C6 C4 
0eaed     C7 CB CC CC | 	byte	$73, $84, $97, $ab, $bf, $d1, $db, $db, $d8, $cf, $c6, $c4, $c7, $cb, $cc, $cc
0eaf1     C8 C5 C5 C4 
0eaf5     C1 BE C0 C4 
0eaf9     C2 B4 A4 98 
0eafd     92 92 96 96 | 	byte	$c8, $c5, $c5, $c4, $c1, $be, $c0, $c4, $c2, $b4, $a4, $98, $92, $92, $96, $96
0eb01     8B 80 77 71 
0eb05     70 6F 6D 5C 
0eb09     49 3B 3C 49 
0eb0d     58 5A 57 61 | 	byte	$8b, $80, $77, $71, $70, $6f, $6d, $5c, $49, $3b, $3c, $49, $58, $5a, $57, $61
0eb11     77 95 AD B7 
0eb15     B0 A4 9E A1 
0eb19     A5 A3 96 87 
0eb1d     7F 81 80 7A | 	byte	$77, $95, $ad, $b7, $b0, $a4, $9e, $a1, $a5, $a3, $96, $87, $7f, $81, $80, $7a
0eb21     77 7D 87 8C 
0eb25     8A 86 87 87 
0eb29     88 8A 8F 90 
0eb2d     8E 89 82 7B | 	byte	$77, $7d, $87, $8c, $8a, $86, $87, $87, $88, $8a, $8f, $90, $8e, $89, $82, $7b
0eb31     73 72 79 83 
0eb35     88 86 87 90 
0eb39     A1 AF B2 AB 
0eb3d     A3 A3 A4 97 | 	byte	$73, $72, $79, $83, $88, $86, $87, $90, $a1, $af, $b2, $ab, $a3, $a3, $a4, $97
0eb41     7C 63 55 5A 
0eb45     5B 5A 55 54 
0eb49     5A 5D 58 4F 
0eb4d     48 45 44 46 | 	byte	$7c, $63, $55, $5a, $5b, $5a, $55, $54, $5a, $5d, $58, $4f, $48, $45, $44, $46
0eb51     50 5B 67 71 
0eb55     7C 83 8C 96 
0eb59     9E A7 AA A2 
0eb5d     91 89 7E 78 | 	byte	$50, $5b, $67, $71, $7c, $83, $8c, $96, $9e, $a7, $aa, $a2, $91, $89, $7e, $78
0eb61     71 6E 6A 65 
0eb65     5E 57 54 52 
0eb69     53 52 47 36 
0eb6d     2D 23 23 29 | 	byte	$71, $6e, $6a, $65, $5e, $57, $54, $52, $53, $52, $47, $36, $2d, $23, $23, $29
0eb71     2C 2A 29 31 
0eb75     3F 53 6B 79 
0eb79     79 79 7E 87 
0eb7d     93 A1 AB AB | 	byte	$2c, $2a, $29, $31, $3f, $53, $6b, $79, $79, $79, $7e, $87, $93, $a1, $ab, $ab
0eb81     A1 9B 99 98 
0eb85     94 87 7F 7F 
0eb89     7D 78 76 78 
0eb8d     7B 80 84 7F | 	byte	$a1, $9b, $99, $98, $94, $87, $7f, $7f, $7d, $78, $76, $78, $7b, $80, $84, $7f
0eb91     77 68 63 5B 
0eb95     58 50 4F 51 
0eb99     51 4F 50 57 
0eb9d     61 61 59 5C | 	byte	$77, $68, $63, $5b, $58, $50, $4f, $51, $51, $4f, $50, $57, $61, $61, $59, $5c
0eba1     71 81 80 6D 
0eba5     58 5D 6B 74 
0eba9     74 6C 60 67 
0ebad     6A 69 5E 51 | 	byte	$71, $81, $80, $6d, $58, $5d, $6b, $74, $74, $6c, $60, $67, $6a, $69, $5e, $51
0ebb1     4A 4D 56 5B 
0ebb5     55 53 5D 6F 
0ebb9     84 99 A7 B0 
0ebbd     BB C7 D0 D7 | 	byte	$4a, $4d, $56, $5b, $55, $53, $5d, $6f, $84, $99, $a7, $b0, $bb, $c7, $d0, $d7
0ebc1     D5 CB C3 C4 
0ebc5     C7 C4 B6 A4 
0ebc9     91 88 8B 92 
0ebcd     97 98 92 88 | 	byte	$d5, $cb, $c3, $c4, $c7, $c4, $b6, $a4, $91, $88, $8b, $92, $97, $98, $92, $88
0ebd1     82 7F 7D 7D 
0ebd5     79 74 7E 8E 
0ebd9     97 96 8E 86 
0ebdd     7C 7B 7E 85 | 	byte	$82, $7f, $7d, $7d, $79, $74, $7e, $8e, $97, $96, $8e, $86, $7c, $7b, $7e, $85
0ebe1     8C 91 91 8D 
0ebe5     8C 8F 9B A9 
0ebe9     B4 B3 AC A7 
0ebed     A3 A1 A5 AE | 	byte	$8c, $91, $91, $8d, $8c, $8f, $9b, $a9, $b4, $b3, $ac, $a7, $a3, $a1, $a5, $ae
0ebf1     B5 B6 B6 BA 
0ebf5     BF C2 C6 C9 
0ebf9     C6 B6 9F 8D 
0ebfd     88 91 99 93 | 	byte	$b5, $b6, $b6, $ba, $bf, $c2, $c6, $c9, $c6, $b6, $9f, $8d, $88, $91, $99, $93
0ec01     84 7A 71 66 
0ec05     62 5B 4F 47 
0ec09     47 4C 4C 53 
0ec0d     5C 69 74 77 | 	byte	$84, $7a, $71, $66, $62, $5b, $4f, $47, $47, $4c, $4c, $53, $5c, $69, $74, $77
0ec11     78 81 8F 94 
0ec15     8C 7F 71 67 
0ec19     64 65 65 64 
0ec1d     67 6F 77 7B | 	byte	$78, $81, $8f, $94, $8c, $7f, $71, $67, $64, $65, $65, $64, $67, $6f, $77, $7b
0ec21     7B 7A 81 8C 
0ec25     8F 86 7D 82 
0ec29     94 A9 B2 AF 
0ec2d     B1 BB C9 D3 | 	byte	$7b, $7a, $81, $8c, $8f, $86, $7d, $82, $94, $a9, $b2, $af, $b1, $bb, $c9, $d3
0ec31     D6 D2 C3 B2 
0ec35     A2 9E A1 A5 
0ec39     A3 A0 9F A2 
0ec3d     A8 AB A3 8F | 	byte	$d6, $d2, $c3, $b2, $a2, $9e, $a1, $a5, $a3, $a0, $9f, $a2, $a8, $ab, $a3, $8f
0ec41     7C 77 78 77 
0ec45     69 57 49 45 
0ec49     46 48 49 46 
0ec4d     44 46 4E 56 | 	byte	$7c, $77, $78, $77, $69, $57, $49, $45, $46, $48, $49, $46, $44, $46, $4e, $56
0ec51     5D 67 79 8E 
0ec55     9E A3 A2 A3 
0ec59     A8 AA AC AC 
0ec5d     A9 A0 95 88 | 	byte	$5d, $67, $79, $8e, $9e, $a3, $a2, $a3, $a8, $aa, $ac, $ac, $a9, $a0, $95, $88
0ec61     7B 77 74 70 
0ec65     5A 42 31 21 
0ec69     17 12 0C 05 
0ec6d     00 00 00 04 | 	byte	$7b, $77, $74, $70, $5a, $42, $31, $21, $17, $12, $0c, $05, $00, $00, $00, $04
0ec71     13 22 32 48 
0ec75     5C 69 71 74 
0ec79     74 71 75 78 
0ec7d     84 92 93 8E | 	byte	$13, $22, $32, $48, $5c, $69, $71, $74, $74, $71, $75, $78, $84, $92, $93, $8e
0ec81     8F 9A A3 A4 
0ec85     96 86 74 64 
0ec89     56 4A 45 45 
0ec8d     4E 54 57 5E | 	byte	$8f, $9a, $a3, $a4, $96, $86, $74, $64, $56, $4a, $45, $45, $4e, $54, $57, $5e
0ec91     6F 7D 83 7E 
0ec95     75 70 76 85 
0ec99     91 98 99 93 
0ec9d     91 97 9E 9F | 	byte	$6f, $7d, $83, $7e, $75, $70, $76, $85, $91, $98, $99, $93, $91, $97, $9e, $9f
0eca1     9B 97 94 8F 
0eca5     83 72 60 5C 
0eca9     61 62 58 4C 
0ecad     43 47 59 62 | 	byte	$9b, $97, $94, $8f, $83, $72, $60, $5c, $61, $62, $58, $4c, $43, $47, $59, $62
0ecb1     5E 57 5B 67 
0ecb5     72 77 78 7D 
0ecb9     8D 9B A1 9C 
0ecbd     98 9A A5 B9 | 	byte	$5e, $57, $5b, $67, $72, $77, $78, $7d, $8d, $9b, $a1, $9c, $98, $9a, $a5, $b9
0ecc1     CB D0 D0 D1 
0ecc5     D2 D4 D0 C5 
0ecc9     B3 A4 98 90 
0eccd     8A 85 80 7A | 	byte	$cb, $d0, $d0, $d1, $d2, $d4, $d0, $c5, $b3, $a4, $98, $90, $8a, $85, $80, $7a
0ecd1     7B 7E 84 8E 
0ecd5     94 91 8A 81 
0ecd9     77 71 6D 6A 
0ecdd     60 5E 60 64 | 	byte	$7b, $7e, $84, $8e, $94, $91, $8a, $81, $77, $71, $6d, $6a, $60, $5e, $60, $64
0ece1     66 69 77 8E 
0ece5     9E 9D 8B 75 
0ece9     6B 64 5A 4F 
0eced     4E 5B 6B 79 | 	byte	$66, $69, $77, $8e, $9e, $9d, $8b, $75, $6b, $64, $5a, $4f, $4e, $5b, $6b, $79
0ecf1     8A 9D AE B8 
0ecf5     BE BD BC B9 
0ecf9     B5 AD A1 93 
0ecfd     86 7F 81 89 | 	byte	$8a, $9d, $ae, $b8, $be, $bd, $bc, $b9, $b5, $ad, $a1, $93, $86, $7f, $81, $89
0ed01     9A AF C1 CD 
0ed05     CE CA C4 BD 
0ed09     B4 A6 90 74 
0ed0d     62 68 6F 77 | 	byte	$9a, $af, $c1, $cd, $ce, $ca, $c4, $bd, $b4, $a6, $90, $74, $62, $68, $6f, $77
0ed11     78 7B 84 92 
0ed15     9C 94 80 6E 
0ed19     6B 6A 62 57 
0ed1d     4E 47 4A 55 | 	byte	$78, $7b, $84, $92, $9c, $94, $80, $6e, $6b, $6a, $62, $57, $4e, $47, $4a, $55
0ed21     63 73 82 91 
0ed25     A4 B5 C3 C7 
0ed29     C1 B7 AE AB 
0ed2d     AB B1 B5 B8 | 	byte	$63, $73, $82, $91, $a4, $b5, $c3, $c7, $c1, $b7, $ae, $ab, $ab, $b1, $b5, $b8
0ed31     BC BD BA B8 
0ed35     B4 B1 B3 B7 
0ed39     B3 A8 97 79 
0ed3d     65 5A 5A 60 | 	byte	$bc, $bd, $ba, $b8, $b4, $b1, $b3, $b7, $b3, $a8, $97, $79, $65, $5a, $5a, $60
0ed41     62 64 65 6B 
0ed45     71 75 70 63 
0ed49     5D 58 4D 3B 
0ed4d     31 33 42 4D | 	byte	$62, $64, $65, $6b, $71, $75, $70, $63, $5d, $58, $4d, $3b, $31, $33, $42, $4d
0ed51     51 58 6A 78 
0ed55     83 86 82 81 
0ed59     82 84 7D 6C 
0ed5d     64 5E 58 54 | 	byte	$51, $58, $6a, $78, $83, $86, $82, $81, $82, $84, $7d, $6c, $64, $5e, $58, $54
0ed61     53 4B 3F 36 
0ed65     31 36 40 3E 
0ed69     30 1D 0E 0F 
0ed6d     1B 27 3A 4D | 	byte	$53, $4b, $3f, $36, $31, $36, $40, $3e, $30, $1d, $0e, $0f, $1b, $27, $3a, $4d
0ed71     63 72 7F 8C 
0ed75     9D A8 AF B0 
0ed79     AC A3 94 8B 
0ed7d     86 83 85 8A | 	byte	$63, $72, $7f, $8c, $9d, $a8, $af, $b0, $ac, $a3, $94, $8b, $86, $83, $85, $8a
0ed81     93 9B 9F A2 
0ed85     9F 9A 91 89 
0ed89     7A 66 4F 39 
0ed8d     31 3A 48 51 | 	byte	$93, $9b, $9f, $a2, $9f, $9a, $91, $89, $7a, $66, $4f, $39, $31, $3a, $48, $51
0ed91     5A 68 74 80 
0ed95     8B 98 A4 AD 
0ed99     AB A2 99 95 
0ed9d     8F 8C 88 86 | 	byte	$5a, $68, $74, $80, $8b, $98, $a4, $ad, $ab, $a2, $99, $95, $8f, $8c, $88, $86
0eda1     88 8B 91 90 
0eda5     87 74 6C 63 
0eda9     5A 53 49 3D 
0edad     3A 47 57 67 | 	byte	$88, $8b, $91, $90, $87, $74, $6c, $63, $5a, $53, $49, $3d, $3a, $47, $57, $67
0edb1     6D 6B 61 68 
0edb5     75 83 8A 86 
0edb9     7A 69 62 5F 
0edbd     58 5B 6F 86 | 	byte	$6d, $6b, $61, $68, $75, $83, $8a, $86, $7a, $69, $62, $5f, $58, $5b, $6f, $86
0edc1     98 9D A3 AC 
0edc5     B2 B5 B9 B4 
0edc9     A5 95 89 83 
0edcd     87 8C 8B 90 | 	byte	$98, $9d, $a3, $ac, $b2, $b5, $b9, $b4, $a5, $95, $89, $83, $87, $8c, $8b, $90
0edd1     99 9F A0 A3 
0edd5     A7 AA AA A7 
0edd9     99 8A 85 8B 
0eddd     96 9C 97 8C | 	byte	$99, $9f, $a0, $a3, $a7, $aa, $aa, $a7, $99, $8a, $85, $8b, $96, $9c, $97, $8c
0ede1     81 7E 7C 7B 
0ede5     76 76 73 6D 
0ede9     6B 6D 6F 77 
0eded     83 8E 94 99 | 	byte	$81, $7e, $7c, $7b, $76, $76, $73, $6d, $6b, $6d, $6f, $77, $83, $8e, $94, $99
0edf1     9C 99 94 93 
0edf5     97 9E A4 A8 
0edf9     A7 A2 A2 A6 
0edfd     AA AB A7 A2 | 	byte	$9c, $99, $94, $93, $97, $9e, $a4, $a8, $a7, $a2, $a2, $a6, $aa, $ab, $a7, $a2
0ee01     AA C2 DA DC 
0ee05     CB B8 B5 BF 
0ee09     C9 C3 A7 8B 
0ee0d     7B 77 77 74 | 	byte	$aa, $c2, $da, $dc, $cb, $b8, $b5, $bf, $c9, $c3, $a7, $8b, $7b, $77, $77, $74
0ee11     67 58 5A 67 
0ee15     6C 69 5E 5F 
0ee19     65 6D 74 75 
0ee1d     6D 69 69 6E | 	byte	$67, $58, $5a, $67, $6c, $69, $5e, $5f, $65, $6d, $74, $75, $6d, $69, $69, $6e
0ee21     76 7D 80 82 
0ee25     87 84 75 63 
0ee29     51 4A 49 54 
0ee2d     65 76 83 91 | 	byte	$76, $7d, $80, $82, $87, $84, $75, $63, $51, $4a, $49, $54, $65, $76, $83, $91
0ee31     9B A4 A5 A1 
0ee35     A1 A5 A9 A4 
0ee39     9A 88 6F 69 
0ee3d     78 8E 90 82 | 	byte	$9b, $a4, $a5, $a1, $a1, $a5, $a9, $a4, $9a, $88, $6f, $69, $78, $8e, $90, $82
0ee41     7D 8D A7 B4 
0ee45     AF A1 95 95 
0ee49     9B 97 84 6C 
0ee4d     67 70 7C 83 | 	byte	$7d, $8d, $a7, $b4, $af, $a1, $95, $95, $9b, $97, $84, $6c, $67, $70, $7c, $83
0ee51     81 79 79 80 
0ee55     82 7B 6E 66 
0ee59     63 60 57 49 
0ee5d     3A 31 29 27 | 	byte	$81, $79, $79, $80, $82, $7b, $6e, $66, $63, $60, $57, $49, $3a, $31, $29, $27
0ee61     2A 2A 20 19 
0ee65     17 17 1D 28 
0ee69     33 3D 4D 66 
0ee6d     7C 87 8C 8D | 	byte	$2a, $2a, $20, $19, $17, $17, $1d, $28, $33, $3d, $4d, $66, $7c, $87, $8c, $8d
0ee71     8E 95 9B A0 
0ee75     A2 A3 9E 9C 
0ee79     9D 9A 92 8E 
0ee7d     8D 88 7F 77 | 	byte	$8e, $95, $9b, $a0, $a2, $a3, $9e, $9c, $9d, $9a, $92, $8e, $8d, $88, $7f, $77
0ee81     73 7A 88 91 
0ee85     94 91 8A 7F 
0ee89     6F 5E 50 48 
0ee8d     3F 2B 10 04 | 	byte	$73, $7a, $88, $91, $94, $91, $8a, $7f, $6f, $5e, $50, $48, $3f, $2b, $10, $04
0ee91     09 16 24 34 
0ee95     47 60 77 82 
0ee99     88 8D 94 9C 
0ee9d     9C 94 87 7D | 	byte	$09, $16, $24, $34, $47, $60, $77, $82, $88, $8d, $94, $9c, $9c, $94, $87, $7d
0eea1     80 86 88 81 
0eea5     76 6B 66 6B 
0eea9     6D 6E 6F 6C 
0eead     6A 69 68 6A | 	byte	$80, $86, $88, $81, $76, $6b, $66, $6b, $6d, $6e, $6f, $6c, $6a, $69, $68, $6a
0eeb1     71 83 97 A5 
0eeb5     B1 B7 B7 B5 
0eeb9     B1 AE AE AC 
0eebd     9E 8A 78 73 | 	byte	$71, $83, $97, $a5, $b1, $b7, $b7, $b5, $b1, $ae, $ae, $ac, $9e, $8a, $78, $73
0eec1     77 80 8A 91 
0eec5     93 98 A2 AA 
0eec9     B0 B2 A9 9B 
0eecd     93 8B 80 78 | 	byte	$77, $80, $8a, $91, $93, $98, $a2, $aa, $b0, $b2, $a9, $9b, $93, $8b, $80, $78
0eed1     79 7F 89 92 
0eed5     99 A7 BA CC 
0eed9     D7 D5 CA B9 
0eedd     A9 9F 98 8C | 	byte	$79, $7f, $89, $92, $99, $a7, $ba, $cc, $d7, $d5, $ca, $b9, $a9, $9f, $98, $8c
0eee1     78 65 4E 40 
0eee5     3D 47 54 61 
0eee9     65 68 70 87 
0eeed     9F B0 B9 BA | 	byte	$78, $65, $4e, $40, $3d, $47, $54, $61, $65, $68, $70, $87, $9f, $b0, $b9, $ba
0eef1     B6 AE 9D 8A 
0eef5     7F 87 94 99 
0eef9     94 88 81 83 
0eefd     86 84 7B 76 | 	byte	$b6, $ae, $9d, $8a, $7f, $87, $94, $99, $94, $88, $81, $83, $86, $84, $7b, $76
0ef01     82 91 99 99 
0ef05     95 92 97 9F 
0ef09     A4 A1 9A 97 
0ef0d     96 93 8C 81 | 	byte	$82, $91, $99, $99, $95, $92, $97, $9f, $a4, $a1, $9a, $97, $96, $93, $8c, $81
0ef11     78 79 81 80 
0ef15     79 73 73 7A 
0ef19     80 81 81 83 
0ef1d     86 85 82 79 | 	byte	$78, $79, $81, $80, $79, $73, $73, $7a, $80, $81, $81, $83, $86, $85, $82, $79
0ef21     6F 71 79 85 
0ef25     84 76 67 69 
0ef29     76 88 90 8A 
0ef2d     85 88 94 9F | 	byte	$6f, $71, $79, $85, $84, $76, $67, $69, $76, $88, $90, $8a, $85, $88, $94, $9f
0ef31     AB B3 B1 A9 
0ef35     A7 A9 A4 98 
0ef39     89 7F 7B 72 
0ef3d     69 5A 54 5D | 	byte	$ab, $b3, $b1, $a9, $a7, $a9, $a4, $98, $89, $7f, $7b, $72, $69, $5a, $54, $5d
0ef41     74 96 BA D4 
0ef45     DD DC E0 E4 
0ef49     E4 D7 B1 8B 
0ef4d     6F 65 6F 6E | 	byte	$74, $96, $ba, $d4, $dd, $dc, $e0, $e4, $e4, $d7, $b1, $8b, $6f, $65, $6f, $6e
0ef51     65 5C 60 6B 
0ef55     7C 7E 6D 5A 
0ef59     48 3F 36 26 
0ef5d     08 00 00 00 | 	byte	$65, $5c, $60, $6b, $7c, $7e, $6d, $5a, $48, $3f, $36, $26, $08, $00, $00, $00
0ef61     00 02 08 0F 
0ef65     1C 28 30 31 
0ef69     33 38 40 46 
0ef6d     4E 5A 6B 7D | 	byte	$00, $02, $08, $0f, $1c, $28, $30, $31, $33, $38, $40, $46, $4e, $5a, $6b, $7d
0ef71     8F 9B 9F 9A 
0ef75     94 97 9E A5 
0ef79     A6 9F 99 99 
0ef7d     99 98 96 97 | 	byte	$8f, $9b, $9f, $9a, $94, $97, $9e, $a5, $a6, $9f, $99, $99, $99, $98, $96, $97
0ef81     98 94 8C 8C 
0ef85     8D 84 6E 60 
0ef89     63 65 5E 4D 
0ef8d     3F 41 46 4E | 	byte	$98, $94, $8c, $8c, $8d, $84, $6e, $60, $63, $65, $5e, $4d, $3f, $41, $46, $4e
0ef91     54 56 59 6A 
0ef95     7B 83 81 83 
0ef99     8F 9E AD AE 
0ef9d     9E 8D 83 7D | 	byte	$54, $56, $59, $6a, $7b, $83, $81, $83, $8f, $9e, $ad, $ae, $9e, $8d, $83, $7d
0efa1     71 5E 4A 40 
0efa5     41 46 4E 57 
0efa9     63 6F 80 99 
0efad     B1 BD C1 C3 | 	byte	$71, $5e, $4a, $40, $41, $46, $4e, $57, $63, $6f, $80, $99, $b1, $bd, $c1, $c3
0efb1     C5 C6 C3 BC 
0efb5     B5 B0 B4 B9 
0efb9     BD BA B2 A5 
0efbd     96 8C 84 80 | 	byte	$c5, $c6, $c3, $bc, $b5, $b0, $b4, $b9, $bd, $ba, $b2, $a5, $96, $8c, $84, $80
0efc1     83 8C 93 93 
0efc5     88 75 67 61 
0efc9     61 6B 6D 67 
0efcd     5B 55 5A 61 | 	byte	$83, $8c, $93, $93, $88, $75, $67, $61, $61, $6b, $6d, $67, $5b, $55, $5a, $61
0efd1     65 6B 79 8F 
0efd5     A0 A3 9E 9B 
0efd9     9C 97 8A 7B 
0efdd     6C 5B 4E 4D | 	byte	$65, $6b, $79, $8f, $a0, $a3, $9e, $9b, $9c, $97, $8a, $7b, $6c, $5b, $4e, $4d
0efe1     61 6D 70 6C 
0efe5     6F 7D 90 98 
0efe9     95 93 99 A3 
0efed     AE B0 AE B1 | 	byte	$61, $6d, $70, $6c, $6f, $7d, $90, $98, $95, $93, $99, $a3, $ae, $b0, $ae, $b1
0eff1     BF CB CD BC 
0eff5     AA A3 AA B0 
0eff9     AA 9C 90 8C 
0effd     8E 95 97 98 | 	byte	$bf, $cb, $cd, $bc, $aa, $a3, $aa, $b0, $aa, $9c, $90, $8c, $8e, $95, $97, $98
0f001     A6 B2 B3 B1 
0f005     AE A7 A1 A3 
0f009     A0 96 86 79 
0f00d     6E 6D 79 85 | 	byte	$a6, $b2, $b3, $b1, $ae, $a7, $a1, $a3, $a0, $96, $86, $79, $6e, $6d, $79, $85
0f011     87 84 7A 68 
0f015     60 6A 7F 91 
0f019     98 92 87 85 
0f01d     89 87 7E 78 | 	byte	$87, $84, $7a, $68, $60, $6a, $7f, $91, $98, $92, $87, $85, $89, $87, $7e, $78
0f021     73 70 65 5C 
0f025     65 77 93 A4 
0f029     AA A6 A2 AA 
0f02d     B7 BC AB 8C | 	byte	$73, $70, $65, $5c, $65, $77, $93, $a4, $aa, $a6, $a2, $aa, $b7, $bc, $ab, $8c
0f031     75 65 51 44 
0f035     42 49 56 63 
0f039     6B 67 5D 59 
0f03d     60 6B 73 72 | 	byte	$75, $65, $51, $44, $42, $49, $56, $63, $6b, $67, $5d, $59, $60, $6b, $73, $72
0f041     76 82 93 A5 
0f045     B2 B9 C0 C4 
0f049     C0 B7 A7 98 
0f04d     8F 89 7D 67 | 	byte	$76, $82, $93, $a5, $b2, $b9, $c0, $c4, $c0, $b7, $a7, $98, $8f, $89, $7d, $67
0f051     4D 3A 36 3A 
0f055     3D 3D 3A 37 
0f059     33 2F 27 22 
0f05d     1A 15 1A 25 | 	byte	$4d, $3a, $36, $3a, $3d, $3d, $3a, $37, $33, $2f, $27, $22, $1a, $15, $1a, $25
0f061     2F 37 47 61 
0f065     78 88 8E 8C 
0f069     7F 78 74 73 
0f06d     70 6D 6A 6A | 	byte	$2f, $37, $47, $61, $78, $88, $8e, $8c, $7f, $78, $74, $73, $70, $6d, $6a, $6a
0f071     70 79 7E 84 
0f075     8A 89 82 82 
0f079     8B 8B 83 79 
0f07d     72 75 82 8D | 	byte	$70, $79, $7e, $84, $8a, $89, $82, $82, $8b, $8b, $83, $79, $72, $75, $82, $8d
0f081     94 9C A7 B3 
0f085     BA B6 A3 91 
0f089     88 8A 85 76 
0f08d     5E 53 5A 63 | 	byte	$94, $9c, $a7, $b3, $ba, $b6, $a3, $91, $88, $8a, $85, $76, $5e, $53, $5a, $63
0f091     62 59 55 56 
0f095     5B 64 6A 65 
0f099     57 4E 49 40 
0f09d     36 2F 31 39 | 	byte	$62, $59, $55, $56, $5b, $64, $6a, $65, $57, $4e, $49, $40, $36, $2f, $31, $39
0f0a1     41 4A 52 5D 
0f0a5     66 68 66 65 
0f0a9     71 84 92 93 
0f0ad     91 93 9D A4 | 	byte	$41, $4a, $52, $5d, $66, $68, $66, $65, $71, $84, $92, $93, $91, $93, $9d, $a4
0f0b1     A5 A1 A4 B5 
0f0b5     C9 D1 C9 BC 
0f0b9     B5 B5 B4 A8 
0f0bd     97 87 82 86 | 	byte	$a5, $a1, $a4, $b5, $c9, $d1, $c9, $bc, $b5, $b5, $b4, $a8, $97, $87, $82, $86
0f0c1     87 80 6E 62 
0f0c5     6B 7E 97 9F 
0f0c9     9B 90 82 81 
0f0cd     89 92 98 98 | 	byte	$87, $80, $6e, $62, $6b, $7e, $97, $9f, $9b, $90, $82, $81, $89, $92, $98, $98
0f0d1     93 89 80 81 
0f0d5     87 94 9C 98 
0f0d9     91 89 7C 71 
0f0dd     6D 6C 66 5D | 	byte	$93, $89, $80, $81, $87, $94, $9c, $98, $91, $89, $7c, $71, $6d, $6c, $66, $5d
0f0e1     5A 5C 5E 62 
0f0e5     6E 85 9A A7 
0f0e9     A7 AA B0 B8 
0f0ed     BD C5 CD CA | 	byte	$5a, $5c, $5e, $62, $6e, $85, $9a, $a7, $a7, $aa, $b0, $b8, $bd, $c5, $cd, $ca
0f0f1     BC AF A8 AE 
0f0f5     BF D0 DD DE 
0f0f9     D4 C4 B8 B6 
0f0fd     B7 B2 A2 8E | 	byte	$bc, $af, $a8, $ae, $bf, $d0, $dd, $de, $d4, $c4, $b8, $b6, $b7, $b2, $a2, $8e
0f101     78 72 6B 6A 
0f105     6A 6B 6A 60 
0f109     55 4D 4D 53 
0f10d     58 5B 58 4F | 	byte	$78, $72, $6b, $6a, $6a, $6b, $6a, $60, $55, $4d, $4d, $53, $58, $5b, $58, $4f
0f111     49 46 43 47 
0f115     5B 70 81 8A 
0f119     86 7F 76 72 
0f11d     6F 67 5C 53 | 	byte	$49, $46, $43, $47, $5b, $70, $81, $8a, $86, $7f, $76, $72, $6f, $67, $5c, $53
0f121     4F 50 55 64 
0f125     76 77 7A 7F 
0f129     8D 9B 9D 9B 
0f12d     9F AA AF B2 | 	byte	$4f, $50, $55, $64, $76, $77, $7a, $7f, $8d, $9b, $9d, $9b, $9f, $aa, $af, $b2
0f131     B3 B3 B7 BF 
0f135     C9 D2 D7 D3 
0f139     C9 C7 CD CB 
0f13d     C6 C0 B6 AB | 	byte	$b3, $b3, $b7, $bf, $c9, $d2, $d7, $d3, $c9, $c7, $cd, $cb, $c6, $c0, $b6, $ab
0f141     9F 92 82 6E 
0f145     63 5E 56 44 
0f149     2F 25 2A 3E 
0f14d     4B 42 36 31 | 	byte	$9f, $92, $82, $6e, $63, $5e, $56, $44, $2f, $25, $2a, $3e, $4b, $42, $36, $31
0f151     39 4C 59 5B 
0f155     55 4F 51 58 
0f159     62 61 65 6A 
0f15d     6E 6D 6C 6B | 	byte	$39, $4c, $59, $5b, $55, $4f, $51, $58, $62, $61, $65, $6a, $6e, $6d, $6c, $6b
0f161     6D 76 77 69 
0f165     5B 56 5E 66 
0f169     6E 70 72 7D 
0f16d     8F 90 85 7B | 	byte	$6d, $76, $77, $69, $5b, $56, $5e, $66, $6e, $70, $72, $7d, $8f, $90, $85, $7b
0f171     70 62 5A 57 
0f175     52 4F 57 67 
0f179     76 7A 72 71 
0f17d     81 97 9A 90 | 	byte	$70, $62, $5a, $57, $52, $4f, $57, $67, $76, $7a, $72, $71, $81, $97, $9a, $90
0f181     80 6C 66 67 
0f185     5F 5D 5A 5C 
0f189     61 67 6D 6D 
0f18d     66 5E 57 56 | 	byte	$80, $6c, $66, $67, $5f, $5d, $5a, $5c, $61, $67, $6d, $6d, $66, $5e, $57, $56
0f191     5A 5C 56 53 
0f195     4E 4F 5E 65 
0f199     65 65 63 5C 
0f19d     67 78 84 88 | 	byte	$5a, $5c, $56, $53, $4e, $4f, $5e, $65, $65, $65, $63, $5c, $67, $78, $84, $88
0f1a1     8E 9E AD BA 
0f1a5     C5 C9 CD D8 
0f1a9     DA D7 CE C2 
0f1ad     B3 A9 A8 A6 | 	byte	$8e, $9e, $ad, $ba, $c5, $c9, $cd, $d8, $da, $d7, $ce, $c2, $b3, $a9, $a8, $a6
0f1b1     9D 92 87 7D 
0f1b5     7B 7E 86 8C 
0f1b9     91 90 8D 8B 
0f1bd     8B 8C 8D 90 | 	byte	$9d, $92, $87, $7d, $7b, $7e, $86, $8c, $91, $90, $8d, $8b, $8b, $8c, $8d, $90
0f1c1     9D AD B9 BC 
0f1c5     B4 A2 91 86 
0f1c9     81 7E 7A 69 
0f1cd     59 53 5B 6A | 	byte	$9d, $ad, $b9, $bc, $b4, $a2, $91, $86, $81, $7e, $7a, $69, $59, $53, $5b, $6a
0f1d1     75 75 75 82 
0f1d5     95 9C 91 80 
0f1d9     72 6E 5F 53 
0f1dd     49 44 44 4F | 	byte	$75, $75, $75, $82, $95, $9c, $91, $80, $72, $6e, $5f, $53, $49, $44, $44, $4f
0f1e1     67 81 91 96 
0f1e5     93 93 9C A8 
0f1e9     AC A6 99 8D 
0f1ed     8A 94 9C 9E | 	byte	$67, $81, $91, $96, $93, $93, $9c, $a8, $ac, $a6, $99, $8d, $8a, $94, $9c, $9e
0f1f1     9C 9B 9C 9F 
0f1f5     A2 A2 A3 AB 
0f1f9     B5 B4 A7 98 
0f1fd     92 99 9B 91 | 	byte	$9c, $9b, $9c, $9f, $a2, $a2, $a3, $ab, $b5, $b4, $a7, $98, $92, $99, $9b, $91
0f201     80 74 72 72 
0f205     78 81 8C 97 
0f209     A0 A3 A0 9C 
0f20d     9D A1 A7 A6 | 	byte	$80, $74, $72, $72, $78, $81, $8c, $97, $a0, $a3, $a0, $9c, $9d, $a1, $a7, $a6
0f211     9E 92 8A 84 
0f215     80 78 70 71 
0f219     72 63 4D 38 
0f21d     27 19 10 0E | 	byte	$9e, $92, $8a, $84, $80, $78, $70, $71, $72, $63, $4d, $38, $27, $19, $10, $0e
0f221     11 1D 33 4F 
0f225     6F 84 99 B1 
0f229     D2 E4 E4 E0 
0f22d     D8 DB DF E0 | 	byte	$11, $1d, $33, $4f, $6f, $84, $99, $b1, $d2, $e4, $e4, $e0, $d8, $db, $df, $e0
0f231     D5 C2 B4 B0 
0f235     B7 BC BB B2 
0f239     AB B0 BE CA 
0f23d     C6 AF 94 84 | 	byte	$d5, $c2, $b4, $b0, $b7, $bc, $bb, $b2, $ab, $b0, $be, $ca, $c6, $af, $94, $84
0f241     7A 6C 4F 34 
0f245     1A 0D 0B 08 
0f249     07 0A 10 17 
0f24d     23 26 24 21 | 	byte	$7a, $6c, $4f, $34, $1a, $0d, $0b, $08, $07, $0a, $10, $17, $23, $26, $24, $21
0f251     26 35 3E 44 
0f255     43 44 48 46 
0f259     3D 3E 4B 5A 
0f25d     67 6C 65 58 | 	byte	$26, $35, $3e, $44, $43, $44, $48, $46, $3d, $3e, $4b, $5a, $67, $6c, $65, $58
0f261     52 5B 60 57 
0f265     4C 56 6B 82 
0f269     86 83 8E AE 
0f26d     D1 DF DA D0 | 	byte	$52, $5b, $60, $57, $4c, $56, $6b, $82, $86, $83, $8e, $ae, $d1, $df, $da, $d0
0f271     CE D2 D6 CC 
0f275     B7 A4 A3 B3 
0f279     C7 CB C1 B6 
0f27d     AD A8 9D 89 | 	byte	$ce, $d2, $d6, $cc, $b7, $a4, $a3, $b3, $c7, $cb, $c1, $b6, $ad, $a8, $9d, $89
0f281     74 6D 5F 49 
0f285     35 2C 27 27 
0f289     2A 2E 2C 2B 
0f28d     30 3A 41 4D | 	byte	$74, $6d, $5f, $49, $35, $2c, $27, $27, $2a, $2e, $2c, $2b, $30, $3a, $41, $4d
0f291     54 57 62 75 
0f295     87 8A 7C 67 
0f299     63 73 82 7B 
0f29d     69 5D 56 59 | 	byte	$54, $57, $62, $75, $87, $8a, $7c, $67, $63, $73, $82, $7b, $69, $5d, $56, $59
0f2a1     6D 85 91 9A 
0f2a5     AA C2 D6 D7 
0f2a9     CE C9 C9 CB 
0f2ad     C2 B1 A2 9F | 	byte	$6d, $85, $91, $9a, $aa, $c2, $d6, $d7, $ce, $c9, $c9, $cb, $c2, $b1, $a2, $9f
0f2b1     A2 A8 AD AA 
0f2b5     A6 A7 A8 A3 
0f2b9     92 81 79 7A 
0f2bd     78 73 66 61 | 	byte	$a2, $a8, $ad, $aa, $a6, $a7, $a8, $a3, $92, $81, $79, $7a, $78, $73, $66, $61
0f2c1     59 51 4D 4D 
0f2c5     51 4F 4C 45 
0f2c9     3B 30 28 2D 
0f2cd     3F 4E 59 62 | 	byte	$59, $51, $4d, $4d, $51, $4f, $4c, $45, $3b, $30, $28, $2d, $3f, $4e, $59, $62
0f2d1     6F 7B 8F A4 
0f2d5     B0 B0 AD B1 
0f2d9     BD C9 CB C8 
0f2dd     C3 BB B4 B5 | 	byte	$6f, $7b, $8f, $a4, $b0, $b0, $ad, $b1, $bd, $c9, $cb, $c8, $c3, $bb, $b4, $b5
0f2e1     C1 CD D5 D8 
0f2e5     E0 E4 DE D3 
0f2e9     CD C5 BE B8 
0f2ed     B1 AB A5 9A | 	byte	$c1, $cd, $d5, $d8, $e0, $e4, $de, $d3, $cd, $c5, $be, $b8, $b1, $ab, $a5, $9a
0f2f1     90 8D 8D 8C 
0f2f5     7F 75 6E 6D 
0f2f9     75 7F 7C 6E 
0f2fd     67 6F 78 77 | 	byte	$90, $8d, $8d, $8c, $7f, $75, $6e, $6d, $75, $7f, $7c, $6e, $67, $6f, $78, $77
0f301     73 64 68 78 
0f305     89 8F 8D 86 
0f309     80 7D 7E 78 
0f30d     6B 64 63 6D | 	byte	$73, $64, $68, $78, $89, $8f, $8d, $86, $80, $7d, $7e, $78, $6b, $64, $63, $6d
0f311     6F 6E 61 57 
0f315     4C 46 48 51 
0f319     4B 3D 32 2B 
0f31d     2D 36 3D 3C | 	byte	$6f, $6e, $61, $57, $4c, $46, $48, $51, $4b, $3d, $32, $2b, $2d, $36, $3d, $3c
0f321     3E 4E 6F 8E 
0f325     A8 B3 B6 BD 
0f329     C8 D1 CD BB 
0f32d     A9 A0 9C 98 | 	byte	$3e, $4e, $6f, $8e, $a8, $b3, $b6, $bd, $c8, $d1, $cd, $bb, $a9, $a0, $9c, $98
0f331     92 8A 86 89 
0f335     95 A1 A8 A8 
0f339     A4 99 8C 81 
0f33d     77 6B 5F 53 | 	byte	$92, $8a, $86, $89, $95, $a1, $a8, $a8, $a4, $99, $8c, $81, $77, $6b, $5f, $53
0f341     49 48 51 5F 
0f345     6B 71 75 75 
0f349     72 6E 68 63 
0f34d     57 4D 48 47 | 	byte	$49, $48, $51, $5f, $6b, $71, $75, $75, $72, $6e, $68, $63, $57, $4d, $48, $47
0f351     4B 56 5A 57 
0f355     55 55 5B 5F 
0f359     60 60 5A 5D 
0f35d     5A 4C 46 49 | 	byte	$4b, $56, $5a, $57, $55, $55, $5b, $5f, $60, $60, $5a, $5d, $5a, $4c, $46, $49
0f361     59 69 79 8C 
0f365     A1 B6 C4 C6 
0f369     C3 BF BA B4 
0f36d     B3 B0 A7 AA | 	byte	$59, $69, $79, $8c, $a1, $b6, $c4, $c6, $c3, $bf, $ba, $b4, $b3, $b0, $a7, $aa
0f371     AC AD A6 9C 
0f375     95 96 9B 98 
0f379     86 74 65 5C 
0f37d     56 52 4F 47 | 	byte	$ac, $ad, $a6, $9c, $95, $96, $9b, $98, $86, $74, $65, $5c, $56, $52, $4f, $47
0f381     43 47 51 59 
0f385     5F 5E 5E 5F 
0f389     57 4B 3E 37 
0f38d     33 30 2F 33 | 	byte	$43, $47, $51, $59, $5f, $5e, $5e, $5f, $57, $4b, $3e, $37, $33, $30, $2f, $33
0f391     34 37 39 3A 
0f395     39 3D 42 47 
0f399     48 40 3F 3B 
0f39d     39 40 53 6A | 	byte	$34, $37, $39, $3a, $39, $3d, $42, $47, $48, $40, $3f, $3b, $39, $40, $53, $6a
0f3a1     84 97 A7 B8 
0f3a5     D2 E4 E4 E4 
0f3a9     E4 E0 DD DB 
0f3ad     DD E6 E5 E5 | 	byte	$84, $97, $a7, $b8, $d2, $e4, $e4, $e4, $e4, $e0, $dd, $db, $dd, $e6, $e5, $e5
0f3b1     E5 E5 E2 E3 
0f3b5     E5 E5 E5 E0 
0f3b9     CF B9 A2 86 
0f3bd     70 5B 4D 4D | 	byte	$e5, $e5, $e2, $e3, $e5, $e5, $e5, $e0, $cf, $b9, $a2, $86, $70, $5b, $4d, $4d
0f3c1     54 4B 46 45 
0f3c5     48 50 4E 44 
0f3c9     37 35 3B 47 
0f3cd     56 5D 60 64 | 	byte	$54, $4b, $46, $45, $48, $50, $4e, $44, $37, $35, $3b, $47, $56, $5d, $60, $64
0f3d1     72 7B 7D 81 
0f3d5     8B 96 A2 A9 
0f3d9     AB AC B2 B8 
0f3dd     BE C5 CA CD | 	byte	$72, $7b, $7d, $81, $8b, $96, $a2, $a9, $ab, $ac, $b2, $b8, $be, $c5, $ca, $cd
0f3e1     CF D4 D8 DB 
0f3e5     DA CD BB AD 
0f3e9     A6 9F 9C 92 
0f3ed     8A 88 89 84 | 	byte	$cf, $d4, $d8, $db, $da, $cd, $bb, $ad, $a6, $9f, $9c, $92, $8a, $88, $89, $84
0f3f1     79 72 75 7E 
0f3f5     81 7E 6E 6B 
0f3f9     6D 71 6C 61 
0f3fd     4F 3B 32 33 | 	byte	$79, $72, $75, $7e, $81, $7e, $6e, $6b, $6d, $71, $6c, $61, $4f, $3b, $32, $33
0f401     33 33 35 3B 
0f405     4A 5E 6D 6E 
0f409     5F 52 5D 68 
0f40d     63 53 4A 4B | 	byte	$33, $33, $35, $3b, $4a, $5e, $6d, $6e, $5f, $52, $5d, $68, $63, $53, $4a, $4b
0f411     5A 64 6E 78 
0f415     7F 80 89 9D 
0f419     AF B0 A2 94 
0f41d     8B 87 8B 97 | 	byte	$5a, $64, $6e, $78, $7f, $80, $89, $9d, $af, $b0, $a2, $94, $8b, $87, $8b, $97
0f421     A8 BC D0 DD 
0f425     E3 E5 E5 E5 
0f429     DF D9 CC BC 
0f42d     B2 AB A0 95 | 	byte	$a8, $bc, $d0, $dd, $e3, $e5, $e5, $e5, $df, $d9, $cc, $bc, $b2, $ab, $a0, $95
0f431     91 92 92 8D 
0f435     84 80 88 93 
0f439     96 88 74 5E 
0f43d     52 4F 51 43 | 	byte	$91, $92, $92, $8d, $84, $80, $88, $93, $96, $88, $74, $5e, $52, $4f, $51, $43
0f441     2F 23 1E 1F 
0f445     24 27 27 2A 
0f449     32 38 36 2F 
0f44d     28 28 33 3D | 	byte	$2f, $23, $1e, $1f, $24, $27, $27, $2a, $32, $38, $36, $2f, $28, $28, $33, $3d
0f451     38 28 20 25 
0f455     36 48 51 55 
0f459     61 6F 7F 8A 
0f45d     94 9B A4 A8 | 	byte	$38, $28, $20, $25, $36, $48, $51, $55, $61, $6f, $7f, $8a, $94, $9b, $a4, $a8
0f461     AB AE B6 B7 
0f465     B5 B7 BA BE 
0f469     C7 CA C1 AD 
0f46d     98 8A 87 82 | 	byte	$ab, $ae, $b6, $b7, $b5, $b7, $ba, $be, $c7, $ca, $c1, $ad, $98, $8a, $87, $82
0f471     71 59 47 3E 
0f475     41 4C 58 60 
0f479     64 64 5C 4F 
0f47d     47 4F 5B 6D | 	byte	$71, $59, $47, $3e, $41, $4c, $58, $60, $64, $64, $5c, $4f, $47, $4f, $5b, $6d
0f481     73 7A 81 8F 
0f485     A1 AE B0 AB 
0f489     A3 9E 99 91 
0f48d     83 6F 66 62 | 	byte	$73, $7a, $81, $8f, $a1, $ae, $b0, $ab, $a3, $9e, $99, $91, $83, $6f, $66, $62
0f491     5D 54 47 41 
0f495     46 57 62 63 
0f499     5D 5A 62 72 
0f49d     7C 7B 79 7C | 	byte	$5d, $54, $47, $41, $46, $57, $62, $63, $5d, $5a, $62, $72, $7c, $7b, $79, $7c
0f4a1     88 9A AB B7 
0f4a5     C0 CA E1 E4 
0f4a9     E3 E4 E4 E4 
0f4ad     E4 DD C7 B8 | 	byte	$88, $9a, $ab, $b7, $c0, $ca, $e1, $e4, $e3, $e4, $e4, $e4, $e4, $dd, $c7, $b8
0f4b1     AE 9C 80 66 
0f4b5     53 4F 59 66 
0f4b9     6F 70 63 59 
0f4bd     4F 4D 57 5F | 	byte	$ae, $9c, $80, $66, $53, $4f, $59, $66, $6f, $70, $63, $59, $4f, $4d, $57, $5f
0f4c1     5B 4F 38 24 
0f4c5     24 3A 51 63 
0f4c9     68 68 66 69 
0f4cd     6D 6B 63 5D | 	byte	$5b, $4f, $38, $24, $24, $3a, $51, $63, $68, $68, $66, $69, $6d, $6b, $63, $5d
0f4d1     5B 5B 59 58 
0f4d5     5A 6B 84 9B 
0f4d9     A9 B4 BC C1 
0f4dd     C9 D2 D2 CA | 	byte	$5b, $5b, $59, $58, $5a, $6b, $84, $9b, $a9, $b4, $bc, $c1, $c9, $d2, $d2, $ca
0f4e1     C9 D1 DB DE 
0f4e5     D5 CD C8 C7 
0f4e9     CA CC C6 C3 
0f4ed     C5 CB CC C6 | 	byte	$c9, $d1, $db, $de, $d5, $cd, $c8, $c7, $ca, $cc, $c6, $c3, $c5, $cb, $cc, $c6
0f4f1     B5 A2 94 88 
0f4f5     81 7B 6E 67 
0f4f9     63 58 56 57 
0f4fd     5E 6B 7B 81 | 	byte	$b5, $a2, $94, $88, $81, $7b, $6e, $67, $63, $58, $56, $57, $5e, $6b, $7b, $81
0f501     7B 73 69 63 
0f505     5D 58 52 52 
0f509     56 5A 5D 65 
0f50d     72 7B 7F 88 | 	byte	$7b, $73, $69, $63, $5d, $58, $52, $52, $56, $5a, $5d, $65, $72, $7b, $7f, $88
0f511     90 8E 85 74 
0f515     60 56 58 60 
0f519     60 67 70 7D 
0f51d     91 A3 AA A8 | 	byte	$90, $8e, $85, $74, $60, $56, $58, $60, $60, $67, $70, $7d, $91, $a3, $aa, $a8
0f521     A5 A3 A6 A7 
0f525     A1 94 86 89 
0f529     A0 B4 BB B4 
0f52d     AB A8 A1 93 | 	byte	$a5, $a3, $a6, $a7, $a1, $94, $86, $89, $a0, $b4, $bb, $b4, $ab, $a8, $a1, $93
0f531     84 6E 5D 52 
0f535     49 42 3E 3D 
0f539     3A 40 4A 47 
0f53d     3F 40 44 43 | 	byte	$84, $6e, $5d, $52, $49, $42, $3e, $3d, $3a, $40, $4a, $47, $3f, $40, $44, $43
0f541     46 41 42 43 
0f545     45 41 33 24 
0f549     17 0F 0D 0F 
0f54d     0E 09 0B 1B | 	byte	$46, $41, $42, $43, $45, $41, $33, $24, $17, $0f, $0d, $0f, $0e, $09, $0b, $1b
0f551     32 4C 64 76 
0f555     88 9B AC B2 
0f559     B5 B7 B9 BC 
0f55d     C9 DD E5 E5 | 	byte	$32, $4c, $64, $76, $88, $9b, $ac, $b2, $b5, $b7, $b9, $bc, $c9, $dd, $e5, $e5
0f561     E5 E4 E4 E3 
0f565     E4 E3 E4 E4 
0f569     D7 B9 9F 85 
0f56d     6C 56 4D 4F | 	byte	$e5, $e4, $e4, $e3, $e4, $e3, $e4, $e4, $d7, $b9, $9f, $85, $6c, $56, $4d, $4f
0f571     58 61 66 66 
0f575     60 5B 57 52 
0f579     4F 53 4F 48 
0f57d     43 45 56 69 | 	byte	$58, $61, $66, $66, $60, $5b, $57, $52, $4f, $53, $4f, $48, $43, $45, $56, $69
0f581     75 7B 7E 83 
0f585     8C 90 87 79 
0f589     6F 6C 63 50 
0f58d     30 11 07 10 | 	byte	$75, $7b, $7e, $83, $8c, $90, $87, $79, $6f, $6c, $63, $50, $30, $11, $07, $10
0f591     19 1F 29 39 
0f595     4A 65 73 76 
0f599     7C 84 88 87 
0f59d     7B 69 5B 5D | 	byte	$19, $1f, $29, $39, $4a, $65, $73, $76, $7c, $84, $88, $87, $7b, $69, $5b, $5d
0f5a1     69 76 8B A9 
0f5a5     CB E2 E4 E4 
0f5a9     E4 E4 E4 E4 
0f5ad     D0 AF 90 75 | 	byte	$69, $76, $8b, $a9, $cb, $e2, $e4, $e4, $e4, $e4, $e4, $e4, $d0, $af, $90, $75
0f5b1     60 50 45 3A 
0f5b5     3B 48 5C 69 
0f5b9     6B 6A 66 5C 
0f5bd     56 52 4F 4D | 	byte	$60, $50, $45, $3a, $3b, $48, $5c, $69, $6b, $6a, $66, $5c, $56, $52, $4f, $4d
0f5c1     4D 55 66 7E 
0f5c5     99 A9 B0 B9 
0f5c9     C9 D2 D0 C4 
0f5cd     B1 9B 8A 84 | 	byte	$4d, $55, $66, $7e, $99, $a9, $b0, $b9, $c9, $d2, $d0, $c4, $b1, $9b, $8a, $84
0f5d1     85 86 86 8B 
0f5d5     98 A7 AD B1 
0f5d9     B3 B9 C3 CF 
0f5dd     D5 D2 C8 C1 | 	byte	$85, $86, $86, $8b, $98, $a7, $ad, $b1, $b3, $b9, $c3, $cf, $d5, $d2, $c8, $c1
0f5e1     C2 CC D8 DD 
0f5e5     DF E3 E5 E5 
0f5e9     E5 E5 E5 D3 
0f5ed     BE A9 96 87 | 	byte	$c2, $cc, $d8, $dd, $df, $e3, $e5, $e5, $e5, $e5, $e5, $d3, $be, $a9, $96, $87
0f5f1     6E 51 3C 30 
0f5f5     27 1E 15 0F 
0f5f9     0F 14 1A 1F 
0f5fd     25 2E 3A 41 | 	byte	$6e, $51, $3c, $30, $27, $1e, $15, $0f, $0f, $14, $1a, $1f, $25, $2e, $3a, $41
0f601     46 47 4A 55 
0f605     65 74 85 8C 
0f609     93 98 98 8C 
0f60d     76 6C 69 6B | 	byte	$46, $47, $4a, $55, $65, $74, $85, $8c, $93, $98, $98, $8c, $76, $6c, $69, $6b
0f611     68 5D 50 4D 
0f615     54 53 54 57 
0f619     62 70 78 72 
0f61d     63 61 70 83 | 	byte	$68, $5d, $50, $4d, $54, $53, $54, $57, $62, $70, $78, $72, $63, $61, $70, $83
0f621     95 9C 9D A1 
0f625     AE C1 CD CE 
0f629     C6 C2 C3 C1 
0f62d     B7 A9 A1 A0 | 	byte	$95, $9c, $9d, $a1, $ae, $c1, $cd, $ce, $c6, $c2, $c3, $c1, $b7, $a9, $a1, $a0
0f631     9E 97 86 6E 
0f635     5F 64 68 69 
0f639     5E 5B 64 73 
0f63d     77 6F 5F 52 | 	byte	$9e, $97, $86, $6e, $5f, $64, $68, $69, $5e, $5b, $64, $73, $77, $6f, $5f, $52
0f641     4C 4A 47 3E 
0f645     2F 28 2E 3F 
0f649     46 45 3E 3A 
0f64d     46 57 5F 58 | 	byte	$4c, $4a, $47, $3e, $2f, $28, $2e, $3f, $46, $45, $3e, $3a, $46, $57, $5f, $58
0f651     51 55 68 7B 
0f655     88 88 89 93 
0f659     A7 C2 D3 D7 
0f65d     D1 CB CB CC | 	byte	$51, $55, $68, $7b, $88, $88, $89, $93, $a7, $c2, $d3, $d7, $d1, $cb, $cb, $cc
0f661     CA C3 B7 B2 
0f665     B8 C4 C7 C2 
0f669     B3 A3 9A 94 
0f66d     88 78 66 58 | 	byte	$ca, $c3, $b7, $b2, $b8, $c4, $c7, $c2, $b3, $a3, $9a, $94, $88, $78, $66, $58
0f671     4D 48 40 36 
0f675     30 33 39 41 
0f679     45 4B 4C 4B 
0f67d     49 4A 54 59 | 	byte	$4d, $48, $40, $36, $30, $33, $39, $41, $45, $4b, $4c, $4b, $49, $4a, $54, $59
0f681     5A 55 58 62 
0f685     69 6A 62 59 
0f689     50 45 36 29 
0f68d     27 33 45 56 | 	byte	$5a, $55, $58, $62, $69, $6a, $62, $59, $50, $45, $36, $29, $27, $33, $45, $56
0f691     5B 5B 5F 6E 
0f695     81 8F 96 97 
0f699     9C A3 AC AE 
0f69d     A9 A6 B1 C7 | 	byte	$5b, $5b, $5f, $6e, $81, $8f, $96, $97, $9c, $a3, $ac, $ae, $a9, $a6, $b1, $c7
0f6a1     DB E5 E5 DC 
0f6a5     E0 E4 E4 E4 
0f6a9     D7 D5 D9 D3 
0f6ad     BF AA 9F 9F | 	byte	$db, $e5, $e5, $dc, $e0, $e4, $e4, $e4, $d7, $d5, $d9, $d3, $bf, $aa, $9f, $9f
0f6b1     9C 8B 6B 4F 
0f6b5     40 43 4E 58 
0f6b9     5E 64 64 66 
0f6bd     6B 68 6B 70 | 	byte	$9c, $8b, $6b, $4f, $40, $43, $4e, $58, $5e, $64, $64, $66, $6b, $68, $6b, $70
0f6c1     73 75 72 6F 
0f6c5     6C 6B 71 7B 
0f6c9     87 8B 86 7C 
0f6cd     79 7D 85 8C | 	byte	$73, $75, $72, $6f, $6c, $6b, $71, $7b, $87, $8b, $86, $7c, $79, $7d, $85, $8c
0f6d1     8A 7D 73 78 
0f6d5     8D A0 AA A9 
0f6d9     A3 A3 A5 A2 
0f6dd     9B 98 99 9A | 	byte	$8a, $7d, $73, $78, $8d, $a0, $aa, $a9, $a3, $a3, $a5, $a2, $9b, $98, $99, $9a
0f6e1     A1 A8 AE B8 
0f6e5     C5 D1 DA D9 
0f6e9     CC BB B0 AE 
0f6ed     A9 A4 9B 88 | 	byte	$a1, $a8, $ae, $b8, $c5, $d1, $da, $d9, $cc, $bb, $b0, $ae, $a9, $a4, $9b, $88
0f6f1     6D 53 42 36 
0f6f5     27 19 0F 10 
0f6f9     1A 1C 17 16 
0f6fd     21 3D 5C 76 | 	byte	$6d, $53, $42, $36, $27, $19, $0f, $10, $1a, $1c, $17, $16, $21, $3d, $5c, $76
0f701     86 90 A1 B2 
0f705     B6 AB 9F 9C 
0f709     A1 A7 A3 9F 
0f70d     A2 A9 AB AA | 	byte	$86, $90, $a1, $b2, $b6, $ab, $9f, $9c, $a1, $a7, $a3, $9f, $a2, $a9, $ab, $aa
0f711     A1 95 8B 86 
0f715     7E 73 69 62 
0f719     69 77 84 8D 
0f71d     99 A8 AF AD | 	byte	$a1, $95, $8b, $86, $7e, $73, $69, $62, $69, $77, $84, $8d, $99, $a8, $af, $ad
0f721     A8 A9 AE B2 
0f725     AF A3 93 8A 
0f729     88 8F 98 9B 
0f72d     9B 95 86 70 | 	byte	$a8, $a9, $ae, $b2, $af, $a3, $93, $8a, $88, $8f, $98, $9b, $9b, $95, $86, $70
0f731     5C 4B 3B 2C 
0f735     26 28 33 41 
0f739     48 47 42 49 
0f73d     54 57 4F 44 | 	byte	$5c, $4b, $3b, $2c, $26, $28, $33, $41, $48, $47, $42, $49, $54, $57, $4f, $44
0f741     39 37 38 31 
0f745     22 19 1B 20 
0f749     1E 15 11 1B 
0f74d     30 40 49 49 | 	byte	$39, $37, $38, $31, $22, $19, $1b, $20, $1e, $15, $11, $1b, $30, $40, $49, $49
0f751     55 6F 90 A5 
0f755     AB AB B2 BA 
0f759     C0 BC B4 B0 
0f75d     AD A9 A1 99 | 	byte	$55, $6f, $90, $a5, $ab, $ab, $b2, $ba, $c0, $bc, $b4, $b0, $ad, $a9, $a1, $99
0f761     A2 B2 BC B8 
0f765     AD A3 9E 9B 
0f769     9A 98 97 9A 
0f76d     A6 AC A7 9A | 	byte	$a2, $b2, $bc, $b8, $ad, $a3, $9e, $9b, $9a, $98, $97, $9a, $a6, $ac, $a7, $9a
0f771     92 92 95 93 
0f775     84 72 67 69 
0f779     6B 6C 6B 6A 
0f77d     70 7A 80 7B | 	byte	$92, $92, $95, $93, $84, $72, $67, $69, $6b, $6c, $6b, $6a, $70, $7a, $80, $7b
0f781     73 64 61 65 
0f785     66 5C 4F 42 
0f789     3F 44 4E 5D 
0f78d     65 65 6F 7C | 	byte	$73, $64, $61, $65, $66, $5c, $4f, $42, $3f, $44, $4e, $5d, $65, $65, $6f, $7c
0f791     83 81 78 71 
0f795     72 7D 83 7F 
0f799     7B 7F 85 8C 
0f79d     92 95 97 9F | 	byte	$83, $81, $78, $71, $72, $7d, $83, $7f, $7b, $7f, $85, $8c, $92, $95, $97, $9f
0f7a1     A7 A8 A1 98 
0f7a5     98 A5 B8 C3 
0f7a9     C6 C6 C7 C6 
0f7ad     B6 9F 8A 7B | 	byte	$a7, $a8, $a1, $98, $98, $a5, $b8, $c3, $c6, $c6, $c7, $c6, $b6, $9f, $8a, $7b
0f7b1     66 4E 3A 30 
0f7b5     31 38 47 52 
0f7b9     58 58 5A 5D 
0f7bd     67 74 7A 7D | 	byte	$66, $4e, $3a, $30, $31, $38, $47, $52, $58, $58, $5a, $5d, $67, $74, $7a, $7d
0f7c1     7B 76 70 71 
0f7c5     78 7E 80 82 
0f7c9     80 7E 81 7F 
0f7cd     78 7B 88 93 | 	byte	$7b, $76, $70, $71, $78, $7e, $80, $82, $80, $7e, $81, $7f, $78, $7b, $88, $93
0f7d1     99 98 92 90 
0f7d5     9D AE B3 B3 
0f7d9     B4 B3 B4 C0 
0f7dd     CE D5 DE E5 | 	byte	$99, $98, $92, $90, $9d, $ae, $b3, $b3, $b4, $b3, $b4, $c0, $ce, $d5, $de, $e5
0f7e1     E5 E5 E5 E5 
0f7e5     E5 E5       | 	byte	$e5[6]
0f7e7     E1 DE D6 C7 
0f7eb     B6 A7 A7 A5 
0f7ef     98 84 74 68 
0f7f3     5A 50 4B 47 | 	byte	$e1, $de, $d6, $c7, $b6, $a7, $a7, $a5, $98, $84, $74, $68, $5a, $50, $4b, $47
0f7f7     43 39 3B 49 
0f7fb     56 63 70 84 
0f7ff     97 9C 8E 82 
0f803     7C 7C 7F 77 | 	byte	$43, $39, $3b, $49, $56, $63, $70, $84, $97, $9c, $8e, $82, $7c, $7c, $7f, $77
0f807     65 55 4F 57 
0f80b     61 6A 6F 74 
0f80f     78 7C 7F 82 
0f813     81 82 82 7D | 	byte	$65, $55, $4f, $57, $61, $6a, $6f, $74, $78, $7c, $7f, $82, $81, $82, $82, $7d
0f817     77 77 75 6C 
0f81b     63 60 65 70 
0f81f     7A 7A 6B 6A 
0f823     70 7E 88 89 | 	byte	$77, $77, $75, $6c, $63, $60, $65, $70, $7a, $7a, $6b, $6a, $70, $7e, $88, $89
0f827     81 7A 7B 7B 
0f82b     7B 77 6D 61 
0f82f     55 4B 40 39 
0f833     3C 49 51 54 | 	byte	$81, $7a, $7b, $7b, $7b, $77, $6d, $61, $55, $4b, $40, $39, $3c, $49, $51, $54
0f837     49 3E 3E 45 
0f83b     4E 4C 45 3E 
0f83f     3D 3F 45 43 
0f843     42 44 41 3E | 	byte	$49, $3e, $3e, $45, $4e, $4c, $45, $3e, $3d, $3f, $45, $43, $42, $44, $41, $3e
0f847     3C 43 55 62 
0f84b     6F 7F 92 A2 
0f84f     B2 BB BA BA 
0f853     C7 CF C9 BE | 	byte	$3c, $43, $55, $62, $6f, $7f, $92, $a2, $b2, $bb, $ba, $ba, $c7, $cf, $c9, $be
0f857     B6 B4 BC C6 
0f85b     C5 BB B5 B6 
0f85f     B6 B3 AC A1 
0f863     9A 9C A7 B2 | 	byte	$b6, $b4, $bc, $c6, $c5, $bb, $b5, $b6, $b6, $b3, $ac, $a1, $9a, $9c, $a7, $b2
0f867     BA BA B3 A9 
0f86b     AA A4 95 7D 
0f86f     70 67 62 5D 
0f873     53 49 41 3A | 	byte	$ba, $ba, $b3, $a9, $aa, $a4, $95, $7d, $70, $67, $62, $5d, $53, $49, $41, $3a
0f877     39 42 4D 56 
0f87b     5C 5C 56 54 
0f87f     57 5B 5C 54 
0f883     44 39 37 34 | 	byte	$39, $42, $4d, $56, $5c, $5c, $56, $54, $57, $5b, $5c, $54, $44, $39, $37, $34
0f887     33 35 36 2F 
0f88b     31 38 46 52 
0f88f     5C 5D 56 63 
0f893     72 77 74 6F | 	byte	$33, $35, $36, $2f, $31, $38, $46, $52, $5c, $5d, $56, $63, $72, $77, $74, $6f
0f897     6C 70 78 7C 
0f89b     7C 80 8E 9F 
0f89f     A9 AB AA AB 
0f8a3     AE B3 B5 B3 | 	byte	$6c, $70, $78, $7c, $7c, $80, $8e, $9f, $a9, $ab, $aa, $ab, $ae, $b3, $b5, $b3
0f8a7     B4 B9 C2 CA 
0f8ab     C8 B6 9E 89 
0f8af     88 8C 88 7A 
0f8b3     65 5A 5B 6E | 	byte	$b4, $b9, $c2, $ca, $c8, $b6, $9e, $89, $88, $8c, $88, $7a, $65, $5a, $5b, $6e
0f8b7     80 8C 96 A6 
0f8bb     B1 AE A5 A3 
0f8bf     A5 A5 9C 8D 
0f8c3     81 79 74 76 | 	byte	$80, $8c, $96, $a6, $b1, $ae, $a5, $a3, $a5, $a5, $9c, $8d, $81, $79, $74, $76
0f8c7     85 93 97 99 
0f8cb     A3 B3 BD BE 
0f8cf     AE 97 8F 94 
0f8d3     9D A3 A4 9F | 	byte	$85, $93, $97, $99, $a3, $b3, $bd, $be, $ae, $97, $8f, $94, $9d, $a3, $a4, $9f
0f8d7     9D A3 AE B6 
0f8db     B9 BA B2 A7 
0f8df     9D 9A 9E A4 
0f8e3     A6 A8 AE B0 | 	byte	$9d, $a3, $ae, $b6, $b9, $ba, $b2, $a7, $9d, $9a, $9e, $a4, $a6, $a8, $ae, $b0
0f8e7     A7 9D 9D 9E 
0f8eb     9A 89 74 6E 
0f8ef     6B 62 59 57 
0f8f3     55 52 4B 40 | 	byte	$a7, $9d, $9d, $9e, $9a, $89, $74, $6e, $6b, $62, $59, $57, $55, $52, $4b, $40
0f8f7     39 3D 50 64 
0f8fb     6C 6D 6F 7B 
0f8ff     8F 9E 9E 94 
0f903     8B 83 7E 7B | 	byte	$39, $3d, $50, $64, $6c, $6d, $6f, $7b, $8f, $9e, $9e, $94, $8b, $83, $7e, $7b
0f907     78 72 6D 73 
0f90b     7F 8A 8E 87 
0f90f     7A 70 69 6C 
0f913     74 76 67 61 | 	byte	$78, $72, $6d, $73, $7f, $8a, $8e, $87, $7a, $70, $69, $6c, $74, $76, $67, $61
0f917     64 65 6A 71 
0f91b     7A 7E 82 85 
0f91f     8C 92 9A 9E 
0f923     9B 97 98 9A | 	byte	$64, $65, $6a, $71, $7a, $7e, $82, $85, $8c, $92, $9a, $9e, $9b, $97, $98, $9a
0f927     9A 9C 9A 97 
0f92b     95 8F 84 73 
0f92f     66 5B 54 54 
0f933     56 5A 51 4A | 	byte	$9a, $9c, $9a, $97, $95, $8f, $84, $73, $66, $5b, $54, $54, $56, $5a, $51, $4a
0f937     4B 5B 6C 6C 
0f93b     5A 47 41 46 
0f93f     4E 48 40 3E 
0f943     3C 45 51 5A | 	byte	$4b, $5b, $6c, $6c, $5a, $47, $41, $46, $4e, $48, $40, $3e, $3c, $45, $51, $5a
0f947     61 67 70 75 
0f94b     72 6E 6C 6E 
0f94f     72 76 80 8A 
0f953     96 A4 B3 BD | 	byte	$61, $67, $70, $75, $72, $6e, $6c, $6e, $72, $76, $80, $8a, $96, $a4, $b3, $bd
0f957     C1 C0 B8 AF 
0f95b     A6 9C 90 80 
0f95f     71 70 75 7B 
0f963     7D 7B 76 76 | 	byte	$c1, $c0, $b8, $af, $a6, $9c, $90, $80, $71, $70, $75, $7b, $7d, $7b, $76, $76
0f967     7D 82 82 80 
0f96b     7F 79 73 66 
0f96f     61 59 54 57 
0f973     5B 5A 5B 5C | 	byte	$7d, $82, $82, $80, $7f, $79, $73, $66, $61, $59, $54, $57, $5b, $5a, $5b, $5c
0f977     68 70 6E 6A 
0f97b     63 62 5B 54 
0f97f     48 3D 30 23 
0f983     21 2D 3E 53 | 	byte	$68, $70, $6e, $6a, $63, $62, $5b, $54, $48, $3d, $30, $23, $21, $2d, $3e, $53
0f987     67 7D 8E 97 
0f98b     9E A1 9E 93 
0f98f     7A 67 65 5D 
0f993     5A 61 74 8C | 	byte	$67, $7d, $8e, $97, $9e, $a1, $9e, $93, $7a, $67, $65, $5d, $5a, $61, $74, $8c
0f997     A2 AF B6 B5 
0f99b     B3 B4 BA C2 
0f99f     C0 AF 9A 8D 
0f9a3     8F 9E B3 BF | 	byte	$a2, $af, $b6, $b5, $b3, $b4, $ba, $c2, $c0, $af, $9a, $8d, $8f, $9e, $b3, $bf
0f9a7     C0 BA BE C5 
0f9ab     C3 B5 A1 92 
0f9af     89 83 7C 6C 
0f9b3     5C 54 5B 66 | 	byte	$c0, $ba, $be, $c5, $c3, $b5, $a1, $92, $89, $83, $7c, $6c, $5c, $54, $5b, $66
0f9b7     79 7F 7B 79 
0f9bb     7D 81 82 7B 
0f9bf     73 6D 6A 66 
0f9c3     69 6C 6B 6B | 	byte	$79, $7f, $7b, $79, $7d, $81, $82, $7b, $73, $6d, $6a, $66, $69, $6c, $6b, $6b
0f9c7     6C 76 84 8D 
0f9cb     8D 89 83 7D 
0f9cf     78 79 7B 7C 
0f9d3     81 8C 9F AF | 	byte	$6c, $76, $84, $8d, $8d, $89, $83, $7d, $78, $79, $7b, $7c, $81, $8c, $9f, $af
0f9d7     B5 B4 B2 B2 
0f9db     B8 C0 C6 C8 
0f9df     BB A8 9C 97 
0f9e3     94 94 95 93 | 	byte	$b5, $b4, $b2, $b2, $b8, $c0, $c6, $c8, $bb, $a8, $9c, $97, $94, $94, $95, $93
0f9e7     8E 8D 96 95 
0f9eb     8C 80 76 6B 
0f9ef     62 67 6F 79 
0f9f3     82 8B 97 AA | 	byte	$8e, $8d, $96, $95, $8c, $80, $76, $6b, $62, $67, $6f, $79, $82, $8b, $97, $aa
0f9f7     BE CB D0 D3 
0f9fb     D1 C7 BA AF 
0f9ff     9E 8D 83 87 
0fa03     8C 8D 8A 87 | 	byte	$be, $cb, $d0, $d3, $d1, $c7, $ba, $af, $9e, $8d, $83, $87, $8c, $8d, $8a, $87
0fa07     87 90 98 9A 
0fa0b     95 8F 82 6D 
0fa0f     60 60 62 60 
0fa13     5D 63 6E 77 | 	byte	$87, $90, $98, $9a, $95, $8f, $82, $6d, $60, $60, $62, $60, $5d, $63, $6e, $77
0fa17     7F 7E 79 75 
0fa1b     72 73 74 6E 
0fa1f     63 5B 51 48 
0fa23     47 50 56 5C | 	byte	$7f, $7e, $79, $75, $72, $73, $74, $6e, $63, $5b, $51, $48, $47, $50, $56, $5c
0fa27     5F 57 55 5C 
0fa2b     68 72 73 66 
0fa2f     63 61 5F 5B 
0fa33     50 3E 2F 25 | 	byte	$5f, $57, $55, $5c, $68, $72, $73, $66, $63, $61, $5f, $5b, $50, $3e, $2f, $25
0fa37     28 39 47 4C 
0fa3b     43 38 33 3B 
0fa3f     47 46 42 3F 
0fa43     44 55 68 71 | 	byte	$28, $39, $47, $4c, $43, $38, $33, $3b, $47, $46, $42, $3f, $44, $55, $68, $71
0fa47     73 77 85 93 
0fa4b     9E 9F 99 97 
0fa4f     A2 AE AB A2 
0fa53     9F A5 AC B1 | 	byte	$73, $77, $85, $93, $9e, $9f, $99, $97, $a2, $ae, $ab, $a2, $9f, $a5, $ac, $b1
0fa57     AE A2 9B 9B 
0fa5b     98 8F 85 83 
0fa5f     8B 92 93 8A 
0fa63     8A 97 A4 A7 | 	byte	$ae, $a2, $9b, $9b, $98, $8f, $85, $83, $8b, $92, $93, $8a, $8a, $97, $a4, $a7
0fa67     9F 96 8D 8A 
0fa6b     85 77 61 50 
0fa6f     4E 56 5D 63 
0fa73     67 6B 6E 6F | 	byte	$9f, $96, $8d, $8a, $85, $77, $61, $50, $4e, $56, $5d, $63, $67, $6b, $6e, $6f
0fa77     73 77 7B 81 
0fa7b     81 75 5F 4F 
0fa7f     4E 5C 6E 71 
0fa83     65 59 5F 70 | 	byte	$73, $77, $7b, $81, $81, $75, $5f, $4f, $4e, $5c, $6e, $71, $65, $59, $5f, $70
0fa87     79 76 6D 69 
0fa8b     6F 78 76 6B 
0fa8f     61 60 61 62 
0fa93     5A 54 5A 64 | 	byte	$79, $76, $6d, $69, $6f, $78, $76, $6b, $61, $60, $61, $62, $5a, $54, $5a, $64
0fa97     71 7F 8F 9C 
0fa9b     A1 A1 9E A3 
0fa9f     AC AF A1 8E 
0faa3     82 7F 85 90 | 	byte	$71, $7f, $8f, $9c, $a1, $a1, $9e, $a3, $ac, $af, $a1, $8e, $82, $7f, $85, $90
0faa7     97 91 82 7B 
0faab     87 99 A6 A2 
0faaf     95 8B 8C 8C 
0fab3     85 78 6A 6B | 	byte	$97, $91, $82, $7b, $87, $99, $a6, $a2, $95, $8b, $8c, $8c, $85, $78, $6a, $6b
0fab7     77 8D 9C 9D 
0fabb     91 88 8B 95 
0fabf     9B 9A 8F 79 
0fac3     67 5B 5E 63 | 	byte	$77, $8d, $9c, $9d, $91, $88, $8b, $95, $9b, $9a, $8f, $79, $67, $5b, $5e, $63
0fac7     6E 7C 86 90 
0facb     9F AB AD B2 
0facf     B9 C6 D3 DA 
0fad3     D9 D4 CC C3 | 	byte	$6e, $7c, $86, $90, $9f, $ab, $ad, $b2, $b9, $c6, $d3, $da, $d9, $d4, $cc, $c3
0fad7     BF BF BB AC 
0fadb     98 88 82 87 
0fadf     91 92 8B 8B 
0fae3     94 9B 9F A0 | 	byte	$bf, $bf, $bb, $ac, $98, $88, $82, $87, $91, $92, $8b, $8b, $94, $9b, $9f, $a0
0fae7     A1 A1 9F 96 
0faeb     8A 82 83 8F 
0faef     9E A5 A6 AB 
0faf3     B7 C3 C1 B6 | 	byte	$a1, $a1, $9f, $96, $8a, $82, $83, $8f, $9e, $a5, $a6, $ab, $b7, $c3, $c1, $b6
0faf7     AC A8 A9 A6 
0fafb     9B 8A 77 69 
0faff     70 79 7B 73 
0fb03     63 66 6B 71 | 	byte	$ac, $a8, $a9, $a6, $9b, $8a, $77, $69, $70, $79, $7b, $73, $63, $66, $6b, $71
0fb07     72 68 59 52 
0fb0b     52 54 59 56 
0fb0f     4F 4B 4B 54 
0fb13     5B 5F 5E 53 | 	byte	$72, $68, $59, $52, $52, $54, $59, $56, $4f, $4b, $4b, $54, $5b, $5f, $5e, $53
0fb17     4E 54 58 5A 
0fb1b     53 49 40 45 
0fb1f     50 55 53 58 
0fb23     5E 69 74 79 | 	byte	$4e, $54, $58, $5a, $53, $49, $40, $45, $50, $55, $53, $58, $5e, $69, $74, $79
0fb27     7A 80 86 8A 
0fb2b     89 80 75 6E 
0fb2f     6C 6C 70 73 
0fb33     6B 5B 50 56 | 	byte	$7a, $80, $86, $8a, $89, $80, $75, $6e, $6c, $6c, $70, $73, $6b, $5b, $50, $56
0fb37     63 6A 65 5B 
0fb3b     5B 67 6F 71 
0fb3f     6D 6E 6F 6E 
0fb43     6E 62 5A 6C | 	byte	$63, $6a, $65, $5b, $5b, $67, $6f, $71, $6d, $6e, $6f, $6e, $6e, $62, $5a, $6c
0fb47     7D 88 8A 8B 
0fb4b     91 9A A2 A4 
0fb4f     A1 9F A1 A5 
0fb53     A7 9E 8F 85 | 	byte	$7d, $88, $8a, $8b, $91, $9a, $a2, $a4, $a1, $9f, $a1, $a5, $a7, $9e, $8f, $85
0fb57     88 8D 8C 87 
0fb5b     81 7E 84 85 
0fb5f     80 7F 85 89 
0fb63     88 82 79 72 | 	byte	$88, $8d, $8c, $87, $81, $7e, $84, $85, $80, $7f, $85, $89, $88, $82, $79, $72
0fb67     6B 69 5E 59 
0fb6b     4F 4A 46 3F 
0fb6f     37 33 38 44 
0fb73     42 3F 45 53 | 	byte	$6b, $69, $5e, $59, $4f, $4a, $46, $3f, $37, $33, $38, $44, $42, $3f, $45, $53
0fb77     5E 62 63 5D 
0fb7b     62 68 73 75 
0fb7f     73 70 72 7F 
0fb83     89 87 7C 72 | 	byte	$5e, $62, $63, $5d, $62, $68, $73, $75, $73, $70, $72, $7f, $89, $87, $7c, $72
0fb87     6C 69 68 60 
0fb8b     54 4C 53 66 
0fb8f     7B 80 78 75 
0fb93     85 9C A7 9E | 	byte	$6c, $69, $68, $60, $54, $4c, $53, $66, $7b, $80, $78, $75, $85, $9c, $a7, $9e
0fb97     8A 84 8C 99 
0fb9b     9E 99 94 98 
0fb9f     AC C1 CA C9 
0fba3     C9 CB CA BE | 	byte	$8a, $84, $8c, $99, $9e, $99, $94, $98, $ac, $c1, $ca, $c9, $c9, $cb, $ca, $be
0fba7     A9 99 96 96 
0fbab     93 8D 87 87 
0fbaf     89 90 98 94 
0fbb3     88 80 84 85 | 	byte	$a9, $99, $96, $96, $93, $8d, $87, $87, $89, $90, $98, $94, $88, $80, $84, $85
0fbb7     7D 75 76 7C 
0fbbb     7E 80 7D 79 
0fbbf     79 79 76 6A 
0fbc3     69 69 75 89 | 	byte	$7d, $75, $76, $7c, $7e, $80, $7d, $79, $79, $79, $76, $6a, $69, $69, $75, $89
0fbc7     99 9F A1 A8 
0fbcb     B4 C1 C9 CF 
0fbcf     CC D0 D2 CA 
0fbd3     B5 A1 96 93 | 	byte	$99, $9f, $a1, $a8, $b4, $c1, $c9, $cf, $cc, $d0, $d2, $ca, $b5, $a1, $96, $93
0fbd7     98 9E 9B 8A 
0fbdb     7C 73 6C 69 
0fbdf     69 66 66 6D 
0fbe3     7D 8D 96 97 | 	byte	$98, $9e, $9b, $8a, $7c, $73, $6c, $69, $69, $66, $66, $6d, $7d, $8d, $96, $97
0fbe7     A0 B6 CE D6 
0fbeb     CA B5 A4 9A 
0fbef     99 9F 9F 96 
0fbf3     8E 93 9A 9C | 	byte	$a0, $b6, $ce, $d6, $ca, $b5, $a4, $9a, $99, $9f, $9f, $96, $8e, $93, $9a, $9c
0fbf7     9F A5 AC AD 
0fbfb     AC A7 9F 93 
0fbff     87 7D 75 74 
0fc03     79 81 8B 93 | 	byte	$9f, $a5, $ac, $ad, $ac, $a7, $9f, $93, $87, $7d, $75, $74, $79, $81, $8b, $93
0fc07     91 8B 84 82 
0fc0b     7B 74 6E 6F 
0fc0f     69 62 55 4A 
0fc13     42 3F 3F 40 | 	byte	$91, $8b, $84, $82, $7b, $74, $6e, $6f, $69, $62, $55, $4a, $42, $3f, $3f, $40
0fc17     38 2B 21 23 
0fc1b     2D 38 46 50 
0fc1f     58 5B 5D 6D 
0fc23     7B 88 88 87 | 	byte	$38, $2b, $21, $23, $2d, $38, $46, $50, $58, $5b, $5d, $6d, $7b, $88, $88, $87
0fc27     85 86 8A 89 
0fc2b     87 8B 8F 8B 
0fc2f     83 74 66 64 
0fc33     66 67 62 59 | 	byte	$85, $86, $8a, $89, $87, $8b, $8f, $8b, $83, $74, $66, $64, $66, $67, $62, $59
0fc37     4D 4A 4B 5D 
0fc3b     69 6D 6B 62 
0fc3f     60 59 52 4A 
0fc43     44 42 4A 56 | 	byte	$4d, $4a, $4b, $5d, $69, $6d, $6b, $62, $60, $59, $52, $4a, $44, $42, $4a, $56
0fc47     5C 60 67 76 
0fc4b     8A 98 9B 95 
0fc4f     8E 8C 88 7C 
0fc53     68 59 57 66 | 	byte	$5c, $60, $67, $76, $8a, $98, $9b, $95, $8e, $8c, $88, $7c, $68, $59, $57, $66
0fc57     78 7E 78 77 
0fc5b     7B 89 95 91 
0fc5f     84 7C 83 8E 
0fc63     97 92 83 79 | 	byte	$78, $7e, $78, $77, $7b, $89, $95, $91, $84, $7c, $83, $8e, $97, $92, $83, $79
0fc67     77 77 74 6F 
0fc6b     61 4D 46 46 
0fc6f     42 38 36 3D 
0fc73     4A 53 5C 66 | 	byte	$77, $77, $74, $6f, $61, $4d, $46, $46, $42, $38, $36, $3d, $4a, $53, $5c, $66
0fc77     75 8A 9B A6 
0fc7b     AE B1 A8 9F 
0fc7f     95 95 98 9A 
0fc83     96 8C 82 7A | 	byte	$75, $8a, $9b, $a6, $ae, $b1, $a8, $9f, $95, $95, $98, $9a, $96, $8c, $82, $7a
0fc87     73 69 66 68 
0fc8b     67 62 56 50 
0fc8f     4B 4A 4B 5A 
0fc93     67 72 74 75 | 	byte	$73, $69, $66, $68, $67, $62, $56, $50, $4b, $4a, $4b, $5a, $67, $72, $74, $75
0fc97     7B 8C 9C A2 
0fc9b     A1 A3 A8 B0 
0fc9f     B5 B7 B7 C3 
0fca3     D3 D6 CA B1 | 	byte	$7b, $8c, $9c, $a2, $a1, $a3, $a8, $b0, $b5, $b7, $b7, $c3, $d3, $d6, $ca, $b1
0fca7     9B 94 95 8C 
0fcab     76 61 55 59 
0fcaf     61 65 5B 4D 
0fcb3     4A 5B 75 84 | 	byte	$9b, $94, $95, $8c, $76, $61, $55, $59, $61, $65, $5b, $4d, $4a, $5b, $75, $84
0fcb7     87 86 89 8B 
0fcbb     8A 84 78 6C 
0fcbf     69 6C 6E 6F 
0fcc3     73 77 83 98 | 	byte	$87, $86, $89, $8b, $8a, $84, $78, $6c, $69, $6c, $6e, $6f, $73, $77, $83, $98
0fcc7     A9 AE B5 BE 
0fccb     CF E0 E4 DC 
0fccf     C3 B0 AB B1 
0fcd3     B8 B8 B0 A6 | 	byte	$a9, $ae, $b5, $be, $cf, $e0, $e4, $dc, $c3, $b0, $ab, $b1, $b8, $b8, $b0, $a6
0fcd7     A6 AF B4 B6 
0fcdb     B1 A9 AB B6 
0fcdf     BF BA B0 AF 
0fce3     BF D2 D7 C9 | 	byte	$a6, $af, $b4, $b6, $b1, $a9, $ab, $b6, $bf, $ba, $b0, $af, $bf, $d2, $d7, $c9
0fce7     B9 B2 B5 B8 
0fceb     B1 A2 91 85 
0fcef     81 81 7D 72 
0fcf3     6C 6F 7A 83 | 	byte	$b9, $b2, $b5, $b8, $b1, $a2, $91, $85, $81, $81, $7d, $72, $6c, $6f, $7a, $83
0fcf7     83 85 8A 97 
0fcfb     A5 AA A3 9A 
0fcff     98 98 98 97 
0fd03     95 8F 8E 8B | 	byte	$83, $85, $8a, $97, $a5, $aa, $a3, $9a, $98, $98, $98, $97, $95, $8f, $8e, $8b
0fd07     81 7B 7A 7E 
0fd0b     85 7F 6A 4E 
0fd0f     37 2F 2C 27 
0fd13     21 1E 19 17 | 	byte	$81, $7b, $7a, $7e, $85, $7f, $6a, $4e, $37, $2f, $2c, $27, $21, $1e, $19, $17
0fd17     15 11 0F 13 
0fd1b     1B 2A 38 47 
0fd1f     4F 57 60 6D 
0fd23     80 90 92 8D | 	byte	$15, $11, $0f, $13, $1b, $2a, $38, $47, $4f, $57, $60, $6d, $80, $90, $92, $8d
0fd27     86 85 8A 8F 
0fd2b     90 89 83 7B 
0fd2f     74 68 64 5C 
0fd33     5E 63 6A 6C | 	byte	$86, $85, $8a, $8f, $90, $89, $83, $7b, $74, $68, $64, $5c, $5e, $63, $6a, $6c
0fd37     6F 72 74 70 
0fd3b     6E 6C 62 5B 
0fd3f     50 4E 5F 73 
0fd43     82 8A 90 96 | 	byte	$6f, $72, $74, $70, $6e, $6c, $62, $5b, $50, $4e, $5f, $73, $82, $8a, $90, $96
0fd47     9B A1 A7 AA 
0fd4b     A3 93 83 77 
0fd4f     74 6F 64 64 
0fd53     69 73 78 76 | 	byte	$9b, $a1, $a7, $aa, $a3, $93, $83, $77, $74, $6f, $64, $64, $69, $73, $78, $76
0fd57     74 77 82 88 
0fd5b     87 85 85 85 
0fd5f     86 88 8B 90 
0fd63     8D 81 72 64 | 	byte	$74, $77, $82, $88, $87, $85, $85, $85, $86, $88, $8b, $90, $8d, $81, $72, $64
0fd67     5B 58 4F 42 
0fd6b     36 31 36 3A 
0fd6f     32 28 2E 42 
0fd73     57 5F 61 69 | 	byte	$5b, $58, $4f, $42, $36, $31, $36, $3a, $32, $28, $2e, $42, $57, $5f, $61, $69
0fd77     7C 99 B0 B5 
0fd7b     AF AE B6 C1 
0fd7f     C7 C0 A6 88 
0fd83     76 73 6E 60 | 	byte	$7c, $99, $b0, $b5, $af, $ae, $b6, $c1, $c7, $c0, $a6, $88, $76, $73, $6e, $60
0fd87     4D 3C 3C 46 
0fd8b     46 3F 34 2E 
0fd8f     36 46 53 58 
0fd93     57 51 4E 57 | 	byte	$4d, $3c, $3c, $46, $46, $3f, $34, $2e, $36, $46, $53, $58, $57, $51, $4e, $57
0fd97     69 85 9C AC 
0fd9b     B4 B7 C1 D2 
0fd9f     DA D3 C6 B9 
0fda3     B3 AE A1 90 | 	byte	$69, $85, $9c, $ac, $b4, $b7, $c1, $d2, $da, $d3, $c6, $b9, $b3, $ae, $a1, $90
0fda7     7E 7A 7D 83 
0fdab     89 8C 8A 83 
0fdaf     80 7E 7D 7B 
0fdb3     79 7D 8B 9B | 	byte	$7e, $7a, $7d, $83, $89, $8c, $8a, $83, $80, $7e, $7d, $7b, $79, $7d, $8b, $9b
0fdb7     A9 B2 B8 BC 
0fdbb     BB BA BB BB 
0fdbf     B3 A4 93 86 
0fdc3     81 82 85 8A | 	byte	$a9, $b2, $b8, $bc, $bb, $ba, $bb, $bb, $b3, $a4, $93, $86, $81, $82, $85, $8a
0fdc7     8E 8E 8B 90 
0fdcb     9C 9D 94 93 
0fdcf     99 A1 A8 B0 
0fdd3     B6 BE C9 D6 | 	byte	$8e, $8e, $8b, $90, $9c, $9d, $94, $93, $99, $a1, $a8, $b0, $b6, $be, $c9, $d6
0fdd7     E0 E1 DB D4 
0fddb     CD CF D6 D5 
0fddf     C8 BC BB C2 
0fde3     C3 B7 A5 91 | 	byte	$e0, $e1, $db, $d4, $cd, $cf, $d6, $d5, $c8, $bc, $bb, $c2, $c3, $b7, $a5, $91
0fde7     85 7F 75 66 
0fdeb     52 48 48 48 
0fdef     45 3D 40 4D 
0fdf3     60 70 77 80 | 	byte	$85, $7f, $75, $66, $52, $48, $48, $48, $45, $3d, $40, $4d, $60, $70, $77, $80
0fdf7     8D 9C AC B2 
0fdfb     B1 AF AD AA 
0fdff     AC AF AA 9E 
0fe03     91 85 7E 79 | 	byte	$8d, $9c, $ac, $b2, $b1, $af, $ad, $aa, $ac, $af, $aa, $9e, $91, $85, $7e, $79
0fe07     74 6C 66 60 
0fe0b     5F 5D 59 56 
0fe0f     51 4E 4D 4A 
0fe13     48 4A 50 4A | 	byte	$74, $6c, $66, $60, $5f, $5d, $59, $56, $51, $4e, $4d, $4a, $48, $4a, $50, $4a
0fe17     3E 38 3D 40 
0fe1b     3D 3A 3E 4A 
0fe1f     56 61 6A 71 
0fe23     77 7D 84 8C | 	byte	$3e, $38, $3d, $40, $3d, $3a, $3e, $4a, $56, $61, $6a, $71, $77, $7d, $84, $8c
0fe27     93 98 9D 9C 
0fe2b     95 8E 88 81 
0fe2f     77 6F 60 56 
0fe33     4E 47 49 5B | 	byte	$93, $98, $9d, $9c, $95, $8e, $88, $81, $77, $6f, $60, $56, $4e, $47, $49, $5b
0fe37     6C 76 7A 7A 
0fe3b     7D 7F 7E 7A 
0fe3f     72 70 70 6C 
0fe43     6B 75 80 85 | 	byte	$6c, $76, $7a, $7a, $7d, $7f, $7e, $7a, $72, $70, $70, $6c, $6b, $75, $80, $85
0fe47     87 84 80 7F 
0fe4b     83 82 7C 76 
0fe4f     6E 67 5C 58 
0fe53     5A 62 66 66 | 	byte	$87, $84, $80, $7f, $83, $82, $7c, $76, $6e, $67, $5c, $58, $5a, $62, $66, $66
0fe57     66 66 66 65 
0fe5b     64 67 6E 75 
0fe5f     77 75 71 74 
0fe63     77 75 72 6D | 	byte	$66, $66, $66, $65, $64, $67, $6e, $75, $77, $75, $71, $74, $77, $75, $72, $6d
0fe67     60 59 53 45 
0fe6b     36 2C 27 26 
0fe6f     20 1B 1E 30 
0fe73     44 53 6C 85 | 	byte	$60, $59, $53, $45, $36, $2c, $27, $26, $20, $1b, $1e, $30, $44, $53, $6c, $85
0fe77     A3 B9 C6 D2 
0fe7b     D5 D0 CD D0 
0fe7f     CD C1 AE A5 
0fe83     9F 9B 8F 79 | 	byte	$a3, $b9, $c6, $d2, $d5, $d0, $cd, $d0, $cd, $c1, $ae, $a5, $9f, $9b, $8f, $79
0fe87     67 5A 53 56 
0fe8b     5A 57 5A 5C 
0fe8f     5D 59 5D 6B 
0fe93     7B 7A 6C 5E | 	byte	$67, $5a, $53, $56, $5a, $57, $5a, $5c, $5d, $59, $5d, $6b, $7b, $7a, $6c, $5e
0fe97     5E 6D 79 7D 
0fe9b     75 6D 74 7F 
0fe9f     8B 8F 8D 8F 
0fea3     95 98 91 85 | 	byte	$5e, $6d, $79, $7d, $75, $6d, $74, $7f, $8b, $8f, $8d, $8f, $95, $98, $91, $85
0fea7     81 87 8E 91 
0feab     8D 87 81 7F 
0feaf     7F 7F 82 89 
0feb3     94 A3 AB BA | 	byte	$81, $87, $8e, $91, $8d, $87, $81, $7f, $7f, $7f, $82, $89, $94, $a3, $ab, $ba
0feb7     D4 E4 E4 E4 
0febb     D4 C7 C5 C2 
0febf     B4 9E 7C 67 
0fec3     60 67 68 63 | 	byte	$d4, $e4, $e4, $e4, $d4, $c7, $c5, $c2, $b4, $9e, $7c, $67, $60, $67, $68, $63
0fec7     5F 66 77 8D 
0fecb     9F AA AA AB 
0fecf     AB A7 A1 9C 
0fed3     99 9E A5 A9 | 	byte	$5f, $66, $77, $8d, $9f, $aa, $aa, $ab, $ab, $a7, $a1, $9c, $99, $9e, $a5, $a9
0fed7     AE B3 B9 BC 
0fedb     BC B8 B6 B9 
0fedf     BA B5 B1 B2 
0fee3     B3 AD A1 99 | 	byte	$ae, $b3, $b9, $bc, $bc, $b8, $b6, $b9, $ba, $b5, $b1, $b2, $b3, $ad, $a1, $99
0fee7     94 93 93 91 
0feeb     89 7E 6F 61 
0feef     56 4D 49 4B 
0fef3     54 63 7A 95 | 	byte	$94, $93, $93, $91, $89, $7e, $6f, $61, $56, $4d, $49, $4b, $54, $63, $7a, $95
0fef7     AF C4 D0 D5 
0fefb     D7 D3 C9 C0 
0feff     B7 AA 97 88 
0ff03     7A 6F 6D 6E | 	byte	$af, $c4, $d0, $d5, $d7, $d3, $c9, $c0, $b7, $aa, $97, $88, $7a, $6f, $6d, $6e
0ff07     6F 71 6F 69 
0ff0b     5D 52 4D 49 
0ff0f     4B 4D 44 39 
0ff13     3A 49 53 50 | 	byte	$6f, $71, $6f, $69, $5d, $52, $4d, $49, $4b, $4d, $44, $39, $3a, $49, $53, $50
0ff17     4A 3D 37 37 
0ff1b     35 32 34 38 
0ff1f     3D 48 51 59 
0ff23     64 73 84 8D | 	byte	$4a, $3d, $37, $37, $35, $32, $34, $38, $3d, $48, $51, $59, $64, $73, $84, $8d
0ff27     8C 83 6E 5D 
0ff2b     54 51 4A 3F 
0ff2f     36 37 43 51 
0ff33     61 6E 83 9A | 	byte	$8c, $83, $6e, $5d, $54, $51, $4a, $3f, $36, $37, $43, $51, $61, $6e, $83, $9a
0ff37     AF B6 B0 A6 
0ff3b     96 87 7D 7A 
0ff3f     7A 6E 5E 4C 
0ff43     44 4A 52 58 | 	byte	$af, $b6, $b0, $a6, $96, $87, $7d, $7a, $7a, $6e, $5e, $4c, $44, $4a, $52, $58
0ff47     5D 63 6F 7C 
0ff4b     85 89 84 81 
0ff4f     84 8A 89 84 
0ff53     82 82 87 91 | 	byte	$5d, $63, $6f, $7c, $85, $89, $84, $81, $84, $8a, $89, $84, $82, $82, $87, $91
0ff57     96 91 8A 87 
0ff5b     8A 8C 88 80 
0ff5f     78 72 6C 68 
0ff63     67 6F 72 6C | 	byte	$96, $91, $8a, $87, $8a, $8c, $88, $80, $78, $72, $6c, $68, $67, $6f, $72, $6c
0ff67     67 66 64 61 
0ff6b     59 80 80 80 
0ff6f     80 80 80 80 
0ff73     80 80 80 80 | 	byte	$67, $66, $64, $61, $59, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80
0ff77     80 80 80 80 
0ff7b     80          | 	byte	$80[5]
0ff7c     54 97 E0 6F 
0ff80     8B BD B4 90 
0ff84     9F D0 87 AF 
0ff88     B0 A4 94 9D | 	byte	$54, $97, $e0, $6f, $8b, $bd, $b4, $90, $9f, $d0, $87, $af, $b0, $a4, $94, $9d
0ff8c     A0 88 8C 94 
0ff90     7F 68 7F 80 
0ff94     65 72 55 70 
0ff98     54 60 35 4F | 	byte	$a0, $88, $8c, $94, $7f, $68, $7f, $80, $65, $72, $55, $70, $54, $60, $35, $4f
0ff9c     70 78 10 2F 
0ffa0     60 3F 77 60 
0ffa4     44 50 69 5D 
0ffa8     6F 79 7F 8B | 	byte	$70, $78, $10, $2f, $60, $3f, $77, $60, $44, $50, $69, $5d, $6f, $79, $7f, $8b
0ffac     93 9F AB AF 
0ffb0     BB BF C7 D0 
0ffb4     D4 CF DD E3 
0ffb8     E7 EF EF EE | 	byte	$93, $9f, $ab, $af, $bb, $bf, $c7, $d0, $d4, $cf, $dd, $e3, $e7, $ef, $ef, $ee
0ffbc     EE EA E7 E3 
0ffc0     E2 DF D6 D0 
0ffc4     C7 B8 AF A4 
0ffc8     98 8A 76 78 | 	byte	$ee, $ea, $e7, $e3, $e2, $df, $d6, $d0, $c7, $b8, $af, $a4, $98, $8a, $76, $78
0ffcc     65 55 45 38 
0ffd0     33 30 07 25 
0ffd4     04 02 00 00 
0ffd8     00 00 00 00 | 	byte	$65, $55, $45, $38, $33, $30, $07, $25, $04, $02, $00, $00, $00, $00, $00, $00
0ffdc     00 00 00 00 
0ffe0     00 00 00    | 	byte	$00[7]
0ffe3     01 0C 12 17 
0ffe7     27 2F 37 3F 
0ffeb     4B 53 63 6F 
0ffef     87 8F 95 A3 | 	byte	$01, $0c, $12, $17, $27, $2f, $37, $3f, $4b, $53, $63, $6f, $87, $8f, $95, $a3
0fff3     AF BB C5 D5 
0fff7     D5 E8 F3 FF 
0fffb     FF FF FF FF 
0ffff     FF FF FF FF | 	byte	$af, $bb, $c5, $d5, $d5, $e8, $f3, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10003     FF FF FF FF 
10007     FF FF FF FF 
1000b     FF FF FF FF 
1000f     FF FF       | 	byte	$ff[14]
10011     F4 EB F0 DC 
10015     BA C2 C8 A8 
10019     90 94 8C 68 
1001d     68 60 56 45 | 	byte	$f4, $eb, $f0, $dc, $ba, $c2, $c8, $a8, $90, $94, $8c, $68, $68, $60, $56, $45
10021     3C 30 27 20 
10025     12 07 00 00 
10029     00 00 00 00 
1002d     00 00 00 00 | 	byte	$3c, $30, $27, $20, $12, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
10031     00 00 00 00 
10035     00 00 00 00 
10039     00 00 00 00 
1003d     00 00 00 00 
10041     00          | 	byte	$00[17]
10042     0B 0B 16 1F 
10046     2B 2F 3B 47 
1004a     4F 5B 67 72 
1004e     7D 8B 92 9A | 	byte	$0b, $0b, $16, $1f, $2b, $2f, $3b, $47, $4f, $5b, $67, $72, $7d, $8b, $92, $9a
10052     A7 B7 BA C9 
10056     D7 DE E4 EF 
1005a     FF FF FF FF 
1005e     FF FF FF FF | 	byte	$a7, $b7, $ba, $c9, $d7, $de, $e4, $ef, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10062     FF FF FF FF 
10066     FF FF FF FF 
1006a     FF FF FF FF 
1006e     FF FF FF FF 
10072     FF FF FF FF 
10076     FF FF       | 	byte	$ff[22]
10078     FE E8 E4 DC 
1007c     D6 C4 BE B0 
10080     A4 97 88 7F 
10084     70 66 56 4E | 	byte	$fe, $e8, $e4, $dc, $d6, $c4, $be, $b0, $a4, $97, $88, $7f, $70, $66, $56, $4e
10088     3E 30 26 18 
1008c     11 04 00 00 
10090     00 00 00 00 
10094     00 00 00 00 | 	byte	$3e, $30, $26, $18, $11, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
10098     00 00 00 00 
      ...             
100b0     00 00 00 00 
100b4     00          | 	byte	$00[29]
100b5     02 06 0F 19 
100b9     25 35 3B 47 
100bd     4F 5F 65 73 
100c1     7D 89 93 9F | 	byte	$02, $06, $0f, $19, $25, $35, $3b, $47, $4f, $5f, $65, $73, $7d, $89, $93, $9f
100c5     A9 B5 BF C2 
100c9     CD DC DD E5 
100cd     EE F7 FA FF 
100d1     FF FF FF FF | 	byte	$a9, $b5, $bf, $c2, $cd, $dc, $dd, $e5, $ee, $f7, $fa, $ff, $ff, $ff, $ff, $ff
100d5     FF FF FF FF 
100d9     FF FF FF FF 
100dd     FF FF FF FF 
100e1     FF FF FF FF 
100e5     FF FF FF FF 
100e9     FF FF FF FF 
100ed     FF FF FF FF | 	byte	$ff[28]
100f1     F6 F6 EA E1 
100f5     DD D2 C7 BE 
100f9     B7 A8 A0 91 
100fd     8D 82 76 6C | 	byte	$f6, $f6, $ea, $e1, $dd, $d2, $c7, $be, $b7, $a8, $a0, $91, $8d, $82, $76, $6c
10101     61 57 51 42 
10105     39 2E 24 1E 
10109     12 08 02 00 
1010d     00 00 00 00 | 	byte	$61, $57, $51, $42, $39, $2e, $24, $1e, $12, $08, $02, $00, $00, $00, $00, $00
10111     00 00 00 00 
      ...             
10129     00 00 00 00 
1012d     00 00 00 00 | 	byte	$00[32]
10131     03 08 0E 13 
10135     19 21 27 29 
10139     35 36 3F 49 
1013d     4D 51 5A 5F | 	byte	$03, $08, $0e, $13, $19, $21, $27, $29, $35, $36, $3f, $49, $4d, $51, $5a, $5f
10141     65 6B 6D 71 
10145     79 7D 82 85 
10149     87 8D 95 94 
1014d     99 9E A3 A4 | 	byte	$65, $6b, $6d, $71, $79, $7d, $82, $85, $87, $8d, $95, $94, $99, $9e, $a3, $a4
10151     A9 AE AF B3 
10155     B8 BB BD BF 
10159     C4 C5 C7 C9 
1015d     CA CA CD CD | 	byte	$a9, $ae, $af, $b3, $b8, $bb, $bd, $bf, $c4, $c5, $c7, $c9, $ca, $ca, $cd, $cd
10161     CC D0 CC CB 
10165     CC CC CB CD 
10169     CB CB CA CB 
1016d     C8 C8 C6 C6 | 	byte	$cc, $d0, $cc, $cb, $cc, $cc, $cb, $cd, $cb, $cb, $ca, $cb, $c8, $c8, $c6, $c6
10171     C1 C3 C3 C1 
10175     BC BD BA B7 
10179     BD B3 B1 B6 
1017d     B1 AE AB AC | 	byte	$c1, $c3, $c3, $c1, $bc, $bd, $ba, $b7, $bd, $b3, $b1, $b6, $b1, $ae, $ab, $ac
10181     A8 A2 A5 A2 
10185     9E 9D 9F 9A 
10189     9A 99 96 97 
1018d     98 97 96 95 | 	byte	$a8, $a2, $a5, $a2, $9e, $9d, $9f, $9a, $9a, $99, $96, $97, $98, $97, $96, $95
10191     98 97 97 97 
10195     96 98 96 97 
10199     97 96 94 93 
1019d     92 91 8F 8E | 	byte	$98, $97, $97, $97, $96, $98, $96, $97, $97, $96, $94, $93, $92, $91, $8f, $8e
101a1     8D 8C 8B 89 
101a5     86 85 84 82 
101a9     80 7E 7C 7A 
101ad     76 74 73 6E | 	byte	$8d, $8c, $8b, $89, $86, $85, $84, $82, $80, $7e, $7c, $7a, $76, $74, $73, $6e
101b1     6C 6C 66 62 
101b5     61 5F 58 55 
101b9     53 50 49 42 
101bd     40 3C 37 30 | 	byte	$6c, $6c, $66, $62, $61, $5f, $58, $55, $53, $50, $49, $42, $40, $3c, $37, $30
101c1     2D 29 24 1F 
101c5     1B 19 15 10 
101c9     0D 0C 0A 07 
101cd     04 03 01 00 | 	byte	$2d, $29, $24, $1f, $1b, $19, $15, $10, $0d, $0c, $0a, $07, $04, $03, $01, $00
101d1     00 00 00 00 
101d5     00 00 00 00 
101d9     00 00 00 00 
101dd     00 00 00 00 
101e1     00 00 00 00 
101e5     00 00       | 	byte	$00[22]
101e7     01 05 07 0B 
101eb     0F 13 19 1E 
101ef     22 27 2C 33 
101f3     39 3E 45 4A | 	byte	$01, $05, $07, $0b, $0f, $13, $19, $1e, $22, $27, $2c, $33, $39, $3e, $45, $4a
101f7     51 53 5D 63 
101fb     6B 71 77 7D 
101ff     85 8B 93 98 
10203     9F A7 AF B3 | 	byte	$51, $53, $5d, $63, $6b, $71, $77, $7d, $85, $8b, $93, $98, $9f, $a7, $af, $b3
10207     BC C1 C9 CF 
1020b     D7 DE E3 EA 
1020f     EF F7 FB FF 
10213     FF FF FF FF | 	byte	$bc, $c1, $c9, $cf, $d7, $de, $e3, $ea, $ef, $f7, $fb, $ff, $ff, $ff, $ff, $ff
10217     FF FF FF FF 
      ...             
1022f     FF FF FF FF 
10233     FF FF       | 	byte	$ff[30]
10235     FC F6 F1 EB 
10239     E6 E0 D8 D4 
1023d     CB C4 C0 B6 
10241     B0 A8 A2 9C | 	byte	$fc, $f6, $f1, $eb, $e6, $e0, $d8, $d4, $cb, $c4, $c0, $b6, $b0, $a8, $a2, $9c
10245     94 8E 88 80 
10249     7B 74 6E 68 
1024d     60 5C 56 51 
10251     48 43 3D 38 | 	byte	$94, $8e, $88, $80, $7b, $74, $6e, $68, $60, $5c, $56, $51, $48, $43, $3d, $38
10255     30 2C 23 20 
10259     18 13 0D 0B 
1025d     05 00 00 00 
10261     00 00 00 00 | 	byte	$30, $2c, $23, $20, $18, $13, $0d, $0b, $05, $00, $00, $00, $00, $00, $00, $00
10265     00 00 00 00 
10269     00 00 00 00 
1026d     00 00 00 00 
10271     00 00 00 00 
10275     00 00 00 00 
10279     00 00 00 00 
1027d     00 00 00    | 	byte	$00[27]
10280     05 09 0D 12 
10284     17 1D 22 27 
10288     2E 32 39 3E 
1028c     42 48 4F 51 | 	byte	$05, $09, $0d, $12, $17, $1d, $22, $27, $2e, $32, $39, $3e, $42, $48, $4f, $51
10290     55 5E 64 69 
10294     6F 74 79 7D 
10298     82 85 8C 8F 
1029c     95 9B 9E A2 | 	byte	$55, $5e, $64, $69, $6f, $74, $79, $7d, $82, $85, $8c, $8f, $95, $9b, $9e, $a2
102a0     A7 AB AF B4 
102a4     B9 BD BF C3 
102a8     C7 CA CE D1 
102ac     D3 D7 D8 DA | 	byte	$a7, $ab, $af, $b4, $b9, $bd, $bf, $c3, $c7, $ca, $ce, $d1, $d3, $d7, $d8, $da
102b0     DC DF DE E0 
102b4     E1 E1 E2 E2 
102b8     E1 E1 E0 E1 
102bc     E0 DF DF DD | 	byte	$dc, $df, $de, $e0, $e1, $e1, $e2, $e2, $e1, $e1, $e0, $e1, $e0, $df, $df, $dd
102c0     DD DD DC DA 
102c4     DA DA D8 D8 
102c8     D5 D3 D3 D2 
102cc     CF CD CB C9 | 	byte	$dd, $dd, $dc, $da, $da, $da, $d8, $d8, $d5, $d3, $d3, $d2, $cf, $cd, $cb, $c9
102d0     C5 C4 C0 BD 
102d4     BC B9 B5 B3 
102d8     B0 AD AB A8 
102dc     A5 A3 A0 9F | 	byte	$c5, $c4, $c0, $bd, $bc, $b9, $b5, $b3, $b0, $ad, $ab, $a8, $a5, $a3, $a0, $9f
102e0     9C 9A 98 95 
102e4     93 92 90 8D 
102e8     8A 89 87 85 
102ec     83 81 80 7E | 	byte	$9c, $9a, $98, $95, $93, $92, $90, $8d, $8a, $89, $87, $85, $83, $81, $80, $7e
102f0     7D 7A 78 76 
102f4     76 74 6F 6E 
102f8     6D 6B 68 67 
102fc     68 65 65 65 | 	byte	$7d, $7a, $78, $76, $76, $74, $6f, $6e, $6d, $6b, $68, $67, $68, $65, $65, $65
10300     66 63 63 66 
10304     65 63 64 65 
10308     64 64 65 64 
1030c     63 64 63 62 | 	byte	$66, $63, $63, $66, $65, $63, $64, $65, $64, $64, $65, $64, $63, $64, $63, $62
10310     62 60 61 5F 
10314     60 60 5F 5E 
10318     5F 5F 5F 5F 
1031c     5F 5F 5F 60 | 	byte	$62, $60, $61, $5f, $60, $60, $5f, $5e, $5f, $5f, $5f, $5f, $5f, $5f, $5f, $60
10320     5F 5F 62 62 
10324     60 5F 62 63 
10328     62 62 63 63 
1032c     63 62 63 63 | 	byte	$5f, $5f, $62, $62, $60, $5f, $62, $63, $62, $62, $63, $63, $63, $62, $63, $63
10330     63 62 63 62 
10334     61 61 62 62 
10338     62 63 64 65 
1033c     66 68 68 6B | 	byte	$63, $62, $63, $62, $61, $61, $62, $62, $62, $63, $64, $65, $66, $68, $68, $6b
10340     6B 6D 6D 70 
10344     70 70 72 74 
10348     74 75 76 77 
1034c     77 78 79 79 | 	byte	$6b, $6d, $6d, $70, $70, $70, $72, $74, $74, $75, $76, $77, $77, $78, $79, $79
10350     7A 7B 7D 7A 
10354     7C 7D 7E 7C 
10358     7E 7F 80 80 
1035c     81 83 84 85 | 	byte	$7a, $7b, $7d, $7a, $7c, $7d, $7e, $7c, $7e, $7f, $80, $80, $81, $83, $84, $85
10360     84 87 87 89 
10364     89 8A 8B 8C 
10368     8D 8E 8D 8E 
1036c     8E 8E 8E 8E | 	byte	$84, $87, $87, $89, $89, $8a, $8b, $8c, $8d, $8e, $8d, $8e, $8e, $8e, $8e, $8e
10370     8F 8D 8E 8D 
10374     8D 8E 8D 8E 
10378     8E 8F 8F 91 
1037c     92 91 93 94 | 	byte	$8f, $8d, $8e, $8d, $8d, $8e, $8d, $8e, $8e, $8f, $8f, $91, $92, $91, $93, $94
10380     94 95 96 95 
10384     97 97 99 96 
10388     97 9A 99 96 
1038c     97 97 97 96 | 	byte	$94, $95, $96, $95, $97, $97, $99, $96, $97, $9a, $99, $96, $97, $97, $97, $96
10390     96 96 94 95 
10394     94 93 94 94 
10398     93 93 93 94 
1039c     93 93 93 93 | 	byte	$96, $96, $94, $95, $94, $93, $94, $94, $93, $93, $93, $94, $93, $93, $93, $93
103a0     93 92 93 92 
103a4     92 92 91 91 
103a8     90 92 8F 8E 
103ac     8F 8F 8E 8D | 	byte	$93, $92, $93, $92, $92, $92, $91, $91, $90, $92, $8f, $8e, $8f, $8f, $8e, $8d
103b0     8D 8C 8B 89 
103b4     89 89 8A 89 
103b8     89 88 89 8C 
103bc     8B 89 8B 8B | 	byte	$8d, $8c, $8b, $89, $89, $89, $8a, $89, $89, $88, $89, $8c, $8b, $89, $8b, $8b
103c0     8C 8B 8C 8C 
103c4     8C 8C 8C 8B 
103c8     8A 8A 8B 89 
103cc     87 88 88 86 | 	byte	$8c, $8b, $8c, $8c, $8c, $8c, $8c, $8b, $8a, $8a, $8b, $89, $87, $88, $88, $86
103d0     87 85 87 84 
103d4     85 85 86 85 
103d8     86 85 87 87 
103dc     86 84 86 87 | 	byte	$87, $85, $87, $84, $85, $85, $86, $85, $86, $85, $87, $87, $86, $84, $86, $87
103e0     85 85 87 86 
103e4     87 85 84 85 
103e8     86 82 83 83 
103ec     82 7F 81 80 | 	byte	$85, $85, $87, $86, $87, $85, $84, $85, $86, $82, $83, $83, $82, $7f, $81, $80
103f0     7E 7F 7F 7E 
103f4     7E 7F 7E 7F 
103f8     81 81 81 81 
103fc     83 82 82 83 | 	byte	$7e, $7f, $7f, $7e, $7e, $7f, $7e, $7f, $81, $81, $81, $81, $83, $82, $82, $83
10400     83 83 82 83 
10404     83 83 82 80 
10408     83 82 82 7F 
1040c     81 82 80 80 | 	byte	$83, $83, $82, $83, $83, $83, $82, $80, $83, $82, $82, $7f, $81, $82, $80, $80
10410     7E 80 7F 7F 
10414     80 80 80 80 
10418     80 80 80 80 
1041c     85 7C 75 90 | 	byte	$7e, $80, $7f, $7f, $80, $80, $80, $80, $80, $80, $80, $80, $85, $7c, $75, $90
10420     80 68 95 85 
10424     6B 80 8E 75 
10428     7C 7D 84 83 
1042c     6F 80 7F 90 | 	byte	$80, $68, $95, $85, $6b, $80, $8e, $75, $7c, $7d, $84, $83, $6f, $80, $7f, $90
10430     7C 6A 8C 7B 
10434     7B 80 98 64 
10438     70 A7 6A 73 
1043c     A5 50 97 6F | 	byte	$7c, $6a, $8c, $7b, $7b, $80, $98, $64, $70, $a7, $6a, $73, $a5, $50, $97, $6f
10440     96 78 4F AB 
10444     80 6A 90 7D 
10448     60 BF 50 97 
1044c     84 59 8F 78 | 	byte	$96, $78, $4f, $ab, $80, $6a, $90, $7d, $60, $bf, $50, $97, $84, $59, $8f, $78
10450     77 92 69 71 
10454     A7 5C 7C 93 
10458     70 76 95 6F 
1045c     82 6B 81 A3 | 	byte	$77, $92, $69, $71, $a7, $5c, $7c, $93, $70, $76, $95, $6f, $82, $6b, $81, $a3
10460     68 6F 88 A2 
10464     62 6A 8F 98 
10468     5F 98 74 81 
1046c     7C 6B 8B A8 | 	byte	$68, $6f, $88, $a2, $62, $6a, $8f, $98, $5f, $98, $74, $81, $7c, $6b, $8b, $a8
10470     3F B0 6A 6D 
10474     A8 5B 7F A8 
10478     53 9C 6D 9E 
1047c     54 87 A3 64 | 	byte	$3f, $b0, $6a, $6d, $a8, $5b, $7f, $a8, $53, $9c, $6d, $9e, $54, $87, $a3, $64
10480     74 6F A0 86 
10484     4B 93 9C 46 
10488     8B C8 1F A3 
1048c     58 CF 50 4F | 	byte	$74, $6f, $a0, $86, $4b, $93, $9c, $46, $8b, $c8, $1f, $a3, $58, $cf, $50, $4f
10490     C7 68 7D A8 
10494     3B B1 55 B0 
10498     87 57 B0 2F 
1049c     7B D2 60 6F | 	byte	$c7, $68, $7d, $a8, $3b, $b1, $55, $b0, $87, $57, $b0, $2f, $7b, $d2, $60, $6f
104a0     69 74 BF 68 
104a4     5F A0 63 80 
104a8     83 B3 6A 22 
104ac     FF 6B 48 AB | 	byte	$69, $74, $bf, $68, $5f, $a0, $63, $80, $83, $b3, $6a, $22, $ff, $6b, $48, $ab
104b0     4E B6 86 4B 
104b4     A0 7F 9A 55 
104b8     AE 67 7D A0 
104bc     64 67 B4 3A | 	byte	$4e, $b6, $86, $4b, $a0, $7f, $9a, $55, $ae, $67, $7d, $a0, $64, $67, $b4, $3a
104c0     D6 80 0F FF 
104c4     88 57 9B 68 
104c8     9D 80 5F 88 
104cc     B7 20 7B E8 | 	byte	$d6, $80, $0f, $ff, $88, $57, $9b, $68, $9d, $80, $5f, $88, $b7, $20, $7b, $e8
104d0     3F 58 B5 71 
104d4     82 7F 67 B2 
104d8     39 8B 9E 7B 
104dc     A0 22 AF C2 | 	byte	$3f, $58, $b5, $71, $82, $7f, $67, $b2, $39, $8b, $9e, $7b, $a0, $22, $af, $c2
104e0     47 8A 46 97 
104e4     F0 2F E1 68 
104e8     5F 9D 95 70 
104ec     7F B0 38 7F | 	byte	$47, $8a, $46, $97, $f0, $2f, $e1, $68, $5f, $9d, $95, $70, $7f, $b0, $38, $7f
104f0     B8 9B 30 3F 
104f4     E0 58 7F 68 
104f8     B3 27 98 DB 
104fc     48 8F 70 7F | 	byte	$b8, $9b, $30, $3f, $e0, $58, $7f, $68, $b3, $27, $98, $db, $48, $8f, $70, $7f
10500     80 51 CB 58 
10504     77 8C AF 34 
10508     FF 60 7F 57 
1050c     98 57 A7 40 | 	byte	$80, $51, $cb, $58, $77, $8c, $af, $34, $ff, $60, $7f, $57, $98, $57, $a7, $40
10510     A7 9B 5A 54 
10514     9F 88 70 55 
10518     AF C0 5F F0 
1051c     10 BF D8 07 | 	byte	$a7, $9b, $5a, $54, $9f, $88, $70, $55, $af, $c0, $5f, $f0, $10, $bf, $d8, $07
10520     CE 75 90 1F 
10524     FF 02 A7 60 
10528     77 D7 40 4B 
1052c     A7 AC 14 BF | 	byte	$ce, $75, $90, $1f, $ff, $02, $a7, $60, $77, $d7, $40, $4b, $a7, $ac, $14, $bf
10530     B1 4C 5C 8C 
10534     CF 40 68 AF 
10538     A0 6C 6F 89 
1053c     48 9F A8 53 | 	byte	$b1, $4c, $5c, $8c, $cf, $40, $68, $af, $a0, $6c, $6f, $89, $48, $9f, $a8, $53
10540     77 79 98 97 
10544     80 6A 6F B0 
10548     5F 73 93 98 
1054c     3F D0 4D 8B | 	byte	$77, $79, $98, $97, $80, $6a, $6f, $b0, $5f, $73, $93, $98, $3f, $d0, $4d, $8b
10550     A0 7F 0F FF 
10554     30 5F D4 42 
10558     6B 90 77 88 
1055c     3F F0 3A 77 | 	byte	$a0, $7f, $0f, $ff, $30, $5f, $d4, $42, $6b, $90, $77, $88, $3f, $f0, $3a, $77
10560     A0 47 AE 62 
10564     79 7F 80 AF 
10568     4D C8 0F CF 
1056c     78 63 94 97 | 	byte	$a0, $47, $ae, $62, $79, $7f, $80, $af, $4d, $c8, $0f, $cf, $78, $63, $94, $97
10570     80 60 A7 66 
10574     78 91 33 F7 
10578     2E 78 D3 60 
1057c     33 E0 2F F0 | 	byte	$80, $60, $a7, $66, $78, $91, $33, $f7, $2e, $78, $d3, $60, $33, $e0, $2f, $f0
10580     5F 40 B7 80 
10584     97 68 4B F5 
10588     20 9F 8F 98 
1058c     72 37 B0 9B | 	byte	$5f, $40, $b7, $80, $97, $68, $4b, $f5, $20, $9f, $8f, $98, $72, $37, $b0, $9b
10590     75 5F 72 E7 
10594     03 E0 B7 20 
10598     98 7F 5E 9B 
1059c     86 81 4F A0 | 	byte	$75, $5f, $72, $e7, $03, $e0, $b7, $20, $98, $7f, $5e, $9b, $86, $81, $4f, $a0
105a0     65 6B D8 3F 
105a4     8B 80 7B 8A 
105a8     80 77 60 AF 
105ac     68 97 28 BF | 	byte	$65, $6b, $d8, $3f, $8b, $80, $7b, $8a, $80, $77, $60, $af, $68, $97, $28, $bf
105b0     A8 2F C4 97 
105b4     34 BF 68 9F 
105b8     80 63 A5 54 
105bc     93 54 B7 48 | 	byte	$a8, $2f, $c4, $97, $34, $bf, $68, $9f, $80, $63, $a5, $54, $93, $54, $b7, $48
105c0     97 85 A0 4F 
105c4     41 D4 54 4F 
105c8     A0 98 87 53 
105cc     88 7F 58 60 | 	byte	$97, $85, $a0, $4f, $41, $d4, $54, $4f, $a0, $98, $87, $53, $88, $7f, $58, $60
105d0     BF 98 2C 7F 
105d4     C8 58 3B AF 
105d8     A4 8C 12 E7 
105dc     58 70 77 FE | 	byte	$bf, $98, $2c, $7f, $c8, $58, $3b, $af, $a4, $8c, $12, $e7, $58, $70, $77, $fe
105e0     10 6B 82 D9 
105e4     28 9F 94 65 
105e8     97 44 B7 80 
105ec     5B B3 69 51 | 	byte	$10, $6b, $82, $d9, $28, $9f, $94, $65, $97, $44, $b7, $80, $5b, $b3, $69, $51
105f0     BF 8A 30 CF 
105f4     7D 88 17 FF 
105f8     40 56 BB A0 
105fc     48 77 A0 9F | 	byte	$bf, $8a, $30, $cf, $7d, $88, $17, $ff, $40, $56, $bb, $a0, $48, $77, $a0, $9f
10600     40 98 57 E0 
10604     2D 77 B0 67 
10608     5B A0 60 DB 
1060c     28 AF 52 92 | 	byte	$40, $98, $57, $e0, $2d, $77, $b0, $67, $5b, $a0, $60, $db, $28, $af, $52, $92
10610     B3 60 68 5F 
10614     B8 48 BF 80 
10618     5D 7A 88 90 
1061c     3F D6 44 97 | 	byte	$b3, $60, $68, $5f, $b8, $48, $bf, $80, $5d, $7a, $88, $90, $3f, $d6, $44, $97
10620     B0 1B 94 A8 
10624     89 50 9F 8A 
10628     3C D7 60 7F 
1062c     88 5F 90 C2 | 	byte	$b0, $1b, $94, $a8, $89, $50, $9f, $8a, $3c, $d7, $60, $7f, $88, $5f, $90, $c2
10630     2A AD 98 2D 
10634     C7 70 5F B0 
10638     7B 6D AC 63 
1063c     6A 9F 68 6F | 	byte	$2a, $ad, $98, $2d, $c7, $70, $5f, $b0, $7b, $6d, $ac, $63, $6a, $9f, $68, $6f
10640     90 7B 4F B4 
10644     5F 8C 80 45 
10648     B4 97 1D FF 
1064c     18 6F B2 76 | 	byte	$90, $7b, $4f, $b4, $5f, $8c, $80, $45, $b4, $97, $1d, $ff, $18, $6f, $b2, $76
10650     80 65 75 8F 
10654     A0 6F 74 96 
10658     65 93 70 59 
1065c     C7 80 86 5B | 	byte	$80, $65, $75, $8f, $a0, $6f, $74, $96, $65, $93, $70, $59, $c7, $80, $86, $5b
10660     AB 60 7F 90 
10664     75 62 8B 9E 
10668     80 67 60 C3 
1066c     4D 9C 72 6F | 	byte	$ab, $60, $7f, $90, $75, $62, $8b, $9e, $80, $67, $60, $c3, $4d, $9c, $72, $6f
10670     9C 79 76 87 
10674     67 A2 4F 9A 
10678     90 5F 9D 5B 
1067c     A7 60 9F 58 | 	byte	$9c, $79, $76, $87, $67, $a2, $4f, $9a, $90, $5f, $9d, $5b, $a7, $60, $9f, $58
10680     97 80 93 98 
10684     47 73 D0 5D 
10688     58 A7 A0 47 
1068c     91 A2 61 84 | 	byte	$97, $80, $93, $98, $47, $73, $d0, $5d, $58, $a7, $a0, $47, $91, $a2, $61, $84
10690     77 A0 7D 70 
10694     6D 83 BE 49 
10698     7A 9F 75 6F 
1069c     96 7F 88 5F | 	byte	$77, $a0, $7d, $70, $6d, $83, $be, $49, $7a, $9f, $75, $6f, $96, $7f, $88, $5f
106a0     AA 46 BC 6B 
106a4     8C 63 B9 57 
106a8     7C 9F 80 79 
106ac     83 80 95 5F | 	byte	$aa, $46, $bc, $6b, $8c, $63, $b9, $57, $7c, $9f, $80, $79, $83, $80, $95, $5f
106b0     8B 90 76 67 
106b4     B1 5B 7F 97 
106b8     70 7D 86 76 
106bc     6D A5 86 6E | 	byte	$8b, $90, $76, $67, $b1, $5b, $7f, $97, $70, $7d, $86, $76, $6d, $a5, $86, $6e
106c0     68 A9 6A 88 
106c4     7D 88 85 73 
106c8     80 7E 92 78 
106cc     7B 90 6F 90 | 	byte	$68, $a9, $6a, $88, $7d, $88, $85, $73, $80, $7e, $92, $78, $7b, $90, $6f, $90
106d0     7D 7E 8D 68 
106d4     8B 85 77 85 
106d8     84 76 7F 8E 
106dc     69 9D 8A 59 | 	byte	$7d, $7e, $8d, $68, $8b, $85, $77, $85, $84, $76, $7f, $8e, $69, $9d, $8a, $59
106e0     8F 95 68 85 
106e4     7E 8C 78 80 
106e8     85 7F 90 62 
106ec     95 88 75 8E | 	byte	$8f, $95, $68, $85, $7e, $8c, $78, $80, $85, $7f, $90, $62, $95, $88, $75, $8e
106f0     6B 88 81 8E 
106f4     70 7F 86 6C 
106f8     93 77 80 85 
106fc     88 65 86 94 | 	byte	$6b, $88, $81, $8e, $70, $7f, $86, $6c, $93, $77, $80, $85, $88, $65, $86, $94
10700     65 A7 5F 86 
10704     7F 80 87 80 
10708     85 6F 7F A0 
1070c     72 68 89 87 | 	byte	$65, $a7, $5f, $86, $7f, $80, $87, $80, $85, $6f, $7f, $a0, $72, $68, $89, $87
10710     80 78 7B 87 
10714     80 6F 93 74 
10718     79 8B 6C 8C 
1071c     77 8A 73 83 | 	byte	$80, $78, $7b, $87, $80, $6f, $93, $74, $79, $8b, $6c, $8c, $77, $8a, $73, $83
10720     83 80 7E 7B 
10724     90 71 77 92 
10728     73 80 88 7C 
1072c     7C 77 90 79 | 	byte	$83, $80, $7e, $7b, $90, $71, $77, $92, $73, $80, $88, $7c, $7c, $77, $90, $79
10730     84 83 6F 91 
10734     79 77 7C 85 
10738     86 72 82 88 
1073c     74 8A 79 8B | 	byte	$84, $83, $6f, $91, $79, $77, $7c, $85, $86, $72, $82, $88, $74, $8a, $79, $8b
10740     6C 8D 8D 70 
10744     87 78 95 69 
10748     90 8B 69 7F 
1074c     89 87 73 8B | 	byte	$6c, $8d, $8d, $70, $87, $78, $95, $69, $90, $8b, $69, $7f, $89, $87, $73, $8b
10750     78 7D 90 80 
10754     69 A0 6D 77 
10758     98 81 81 68 
1075c     8F 79 83 7A | 	byte	$78, $7d, $90, $80, $69, $a0, $6d, $77, $98, $81, $81, $68, $8f, $79, $83, $7a
10760     87 80 87 68 
10764     93 8C 5E 8D 
10768     8D 71 83 87 
1076c     75 8E 76 90 | 	byte	$87, $80, $87, $68, $93, $8c, $5e, $8d, $8d, $71, $83, $87, $75, $8e, $76, $90
10770     67 8D 78 85 
10774     82 74 8F 88 
10778     64 87 8D 66 
1077c     96 80 77 88 | 	byte	$67, $8d, $78, $85, $82, $74, $8f, $88, $64, $87, $8d, $66, $96, $80, $77, $88
10780     77 93 6C 7F 
10784     85 84 7C 7E 
10788     8F 68 8D 7A 
1078c     7C 8D 80 6D | 	byte	$77, $93, $6c, $7f, $85, $84, $7c, $7e, $8f, $68, $8d, $7a, $7c, $8d, $80, $6d
10790     90 83 6F 9C 
10794     75 6A 92 83 
10798     81 76 85 7F 
1079c     88 72 8F 80 | 	byte	$90, $83, $6f, $9c, $75, $6a, $92, $83, $81, $76, $85, $7f, $88, $72, $8f, $80
107a0     76 89 8F 72 
107a4     7B 7D 97 6A 
107a8     87 8F 76 73 
107ac     9B 6A 90 75 | 	byte	$76, $89, $8f, $72, $7b, $7d, $97, $6a, $87, $8f, $76, $73, $9b, $6a, $90, $75
107b0     7B 98 6D 87 
107b4     86 5E 90 82 
107b8     77 90 6F 90 
107bc     77 80 7D 80 | 	byte	$7b, $98, $6d, $87, $86, $5e, $90, $82, $77, $90, $6f, $90, $77, $80, $7d, $80
107c0     77 8D 80 80 
107c4     6D 9B 75 7E 
107c8     7D 75 98 74 
107cc     7E 85 76 7E | 	byte	$77, $8d, $80, $80, $6d, $9b, $75, $7e, $7d, $75, $98, $74, $7e, $85, $76, $7e
107d0     88 7B 8D 6E 
107d4     88 7F 88 6F 
107d8     95 7C 77 90 
107dc     7D 7C 7C 82 | 	byte	$88, $7b, $8d, $6e, $88, $7f, $88, $6f, $95, $7c, $77, $90, $7d, $7c, $7c, $82
107e0     89 7A 7B 88 
107e4     81 77 87 77 
107e8     94 67 89 8A 
107ec     80 67 95 80 | 	byte	$89, $7a, $7b, $88, $81, $77, $87, $77, $94, $67, $89, $8a, $80, $67, $95, $80
107f0     77 86 75 97 
107f4     72 7E 86 77 
107f8     92 6D 8D 75 
107fc     8C 71 97 68 | 	byte	$77, $86, $75, $97, $72, $7e, $86, $77, $92, $6d, $8d, $75, $8c, $71, $97, $68
10800     89 7A 83 80 
10804     8D 71 84 7E 
10808     84 7A 86 84 
1080c     77 82 8A 78 | 	byte	$89, $7a, $83, $80, $8d, $71, $84, $7e, $84, $7a, $86, $84, $77, $82, $8a, $78
10810     7B 81 8E 80 
10814     73 88 89 69 
10818     90 7E 89 79 
1081c     7B 85 81 7C | 	byte	$7b, $81, $8e, $80, $73, $88, $89, $69, $90, $7e, $89, $79, $7b, $85, $81, $7c
10820     86 7D 87 80 
10824     75 96 68 89 
10828     8E 69 87 8C 
1082c     7B 77 81 8A | 	byte	$86, $7d, $87, $80, $75, $96, $68, $89, $8e, $69, $87, $8c, $7b, $77, $81, $8a
10830     76 79 86 86 
10834     74 7D 89 7C 
10838     7D 7C 8E 72 
1083c     85 77 8E 80 | 	byte	$76, $79, $86, $86, $74, $7d, $89, $7c, $7d, $7c, $8e, $72, $85, $77, $8e, $80
10840     72 83 8A 74 
10844     83 80 85 77 
10848     84 88 6F 8D 
1084c     83 77 88 7B | 	byte	$72, $83, $8a, $74, $83, $80, $85, $77, $84, $88, $6f, $8d, $83, $77, $88, $7b
10850     87 71 89 89 
10854     76 80 81 82 
10858     7F 80 8F 74 
1085c     7F 7A 91 7D | 	byte	$87, $71, $89, $89, $76, $80, $81, $82, $7f, $80, $8f, $74, $7f, $7a, $91, $7d
10860     80 81 80 78 
10864     89 7B 80 8A 
10868     80 6B 8E 87 
1086c     6E 8B 80 81 | 	byte	$80, $81, $80, $78, $89, $7b, $80, $8a, $80, $6b, $8e, $87, $6e, $8b, $80, $81
10870     7E 76 8D 7A 
10874     86 7A 7D 88 
10878     72 84 8A 7F 
1087c     7A 7F 82 8C | 	byte	$7e, $76, $8d, $7a, $86, $7a, $7d, $88, $72, $84, $8a, $7f, $7a, $7f, $82, $8c
10880     7D 79 7C 84 
10884     7F 8A 75 83 
10888     81 7C 8A 78 
1088c     7E 83 78 7F | 	byte	$7d, $79, $7c, $84, $7f, $8a, $75, $83, $81, $7c, $8a, $78, $7e, $83, $78, $7f
10890     91 6D 81 86 
10894     80 7E 7B 89 
10898     7D 7B 80 87 
1089c     77 84 86 70 | 	byte	$91, $6d, $81, $86, $80, $7e, $7b, $89, $7d, $7b, $80, $87, $77, $84, $86, $70
108a0     8F 84 6F 8D 
108a4     7B 83 79 8B 
108a8     78 72 93 7C 
108ac     76 8E 77 89 | 	byte	$8f, $84, $6f, $8d, $7b, $83, $79, $8b, $78, $72, $93, $7c, $76, $8e, $77, $89
108b0     77 7D 87 88 
108b4     7A 7E 80 84 
108b8     71 92 7C 78 
108bc     7B 8E 76 87 | 	byte	$77, $7d, $87, $88, $7a, $7e, $80, $84, $71, $92, $7c, $78, $7b, $8e, $76, $87
108c0     73 84 8C 72 
108c4     77 8D 82 6C 
108c8     8A 81 7E 77 
108cc     8F 78 7B 80 | 	byte	$73, $84, $8c, $72, $77, $8d, $82, $6c, $8a, $81, $7e, $77, $8f, $78, $7b, $80
108d0     7B 8C 74 85 
108d4     80 83 73 8E 
108d8     81 74 8E 75 
108dc     79 84 82 7D | 	byte	$7b, $8c, $74, $85, $80, $83, $73, $8e, $81, $74, $8e, $75, $79, $84, $82, $7d
108e0     82 7D 80 87 
108e4     70 82 89 78 
108e8     7F 8A 6D 89 
108ec     80 82 78 89 | 	byte	$82, $7d, $80, $87, $70, $82, $89, $78, $7f, $8a, $6d, $89, $80, $82, $78, $89
108f0     74 8A 7D 7C 
108f4     86 7D 81 7B 
108f8     89 81 72 8E 
108fc     7B 7C 80 8B | 	byte	$74, $8a, $7d, $7c, $86, $7d, $81, $7b, $89, $81, $72, $8e, $7b, $7c, $80, $8b
10900     79 87 80 78 
10904     91 78 7B 8B 
10908     75 81 85 80 
1090c     81 84 67 8F | 	byte	$79, $87, $80, $78, $91, $78, $7b, $8b, $75, $81, $85, $80, $81, $84, $67, $8f
10910     8D 6C 84 87 
10914     7B 79 84 7C 
10918     86 73 8B 80 
1091c     7E 7A 8D 7F | 	byte	$8d, $6c, $84, $87, $7b, $79, $84, $7c, $86, $73, $8b, $80, $7e, $7a, $8d, $7f
10920     74 88 7D 7D 
10924     87 80 84 77 
10928     7F 88 71 90 
1092c     74 7F 8D 75 | 	byte	$74, $88, $7d, $7d, $87, $80, $84, $77, $7f, $88, $71, $90, $74, $7f, $8d, $75
10930     7C 8B 80 78 
10934     76 91 81 7B 
10938     74 8D 7D 7C 
1093c     77 8C 80 6E | 	byte	$7c, $8b, $80, $78, $76, $91, $81, $7b, $74, $8d, $7d, $7c, $77, $8c, $80, $6e
10940     93 84 70 83 
10944     7E 86 7A 7E 
10948     80 79 8A 75 
1094c     87 80 76 86 | 	byte	$93, $84, $70, $83, $7e, $86, $7a, $7e, $80, $79, $8a, $75, $87, $80, $76, $86
10950     79 86 7F 7A 
10954     83 8C 73 7F 
10958     89 7F 83 7A 
1095c     7F 89 74 7F | 	byte	$79, $86, $7f, $7a, $83, $8c, $73, $7f, $89, $7f, $83, $7a, $7f, $89, $74, $7f
10960     83 80 79 8B 
10964     74 92 7B 7D 
10968     7B 8D 80 6F 
1096c     90 79 84 7E | 	byte	$83, $80, $79, $8b, $74, $92, $7b, $7d, $7b, $8d, $80, $6f, $90, $79, $84, $7e
10970     90 77 77 89 
10974     85 84 6C 93 
10978     80 81 80 7A 
1097c     83 79 89 87 | 	byte	$90, $77, $77, $89, $85, $84, $6c, $93, $80, $81, $80, $7a, $83, $79, $89, $87
10980     76 7F 80 8A 
10984     77 81 86 80 
10988     73 89 8E 67 
1098c     8F 79 7B 8D | 	byte	$76, $7f, $80, $8a, $77, $81, $86, $80, $73, $89, $8e, $67, $8f, $79, $7b, $8d
10990     7E 7B 89 70 
10994     8D 7B 80 7B 
10998     90 76 83 86 
1099c     6C 87 8A 80 | 	byte	$7e, $7b, $89, $70, $8d, $7b, $80, $7b, $90, $76, $83, $86, $6c, $87, $8a, $80
109a0     7A 82 82 8B 
109a4     6F 80 89 7C 
109a8     7F 83 83 79 
109ac     7B 8A 73 89 | 	byte	$7a, $82, $82, $8b, $6f, $80, $89, $7c, $7f, $83, $83, $79, $7b, $8a, $73, $89
109b0     7A 8A 72 86 
109b4     86 70 85 84 
109b8     81 7C 7E 81 
109bc     82 77 86 82 | 	byte	$7a, $8a, $72, $86, $86, $70, $85, $84, $81, $7c, $7e, $81, $82, $77, $86, $82
109c0     78 89 80 7B 
109c4     80 7D 85 85 
109c8     7C 76 8D 79 
109cc     86 7C 78 86 | 	byte	$78, $89, $80, $7b, $80, $7d, $85, $85, $7c, $76, $8d, $79, $86, $7c, $78, $86
109d0     8B 76 89 75 
109d4     85 83 80 83 
109d8     80 7F 80 7F 
109dc     86 7D 79 84 | 	byte	$8b, $76, $89, $75, $85, $83, $80, $83, $80, $7f, $80, $7f, $86, $7d, $79, $84
109e0     84 7F 84 73 
109e4     85 8A 78 81 
109e8     7C 83 80 79 
109ec     8E 78 7D 85 | 	byte	$84, $7f, $84, $73, $85, $8a, $78, $81, $7c, $83, $80, $79, $8e, $78, $7d, $85
109f0     7B 87 7C 85 
109f4     7A 7B 8C 7B 
109f8     86 74 7D 8B 
109fc     82 74 8E 74 | 	byte	$7b, $87, $7c, $85, $7a, $7b, $8c, $7b, $86, $74, $7d, $8b, $82, $74, $8e, $74
10a00     87 85 79 7A 
10a04     90 78 79 8B 
10a08     7A 7B 8F 78 
10a0c     7E 84 81 7B | 	byte	$87, $85, $79, $7a, $90, $78, $79, $8b, $7a, $7b, $8f, $78, $7e, $84, $81, $7b
10a10     88 76 80 8A 
10a14     7C 82 7B 83 
10a18     7B 89 82 77 
10a1c     88 80 7F 7E | 	byte	$88, $76, $80, $8a, $7c, $82, $7b, $83, $7b, $89, $82, $77, $88, $80, $7f, $7e
10a20     91 70 7B 88 
10a24     86 7D 76 8D 
10a28     74 83 89 87 
10a2c     6D 88 79 8E | 	byte	$91, $70, $7b, $88, $86, $7d, $76, $8d, $74, $83, $89, $87, $6d, $88, $79, $8e
10a30     74 87 7E 84 
10a34     76 87 82 7E 
10a38     7C 85 7D 82 
10a3c     80 7D 82 85 | 	byte	$74, $87, $7e, $84, $76, $87, $82, $7e, $7c, $85, $7d, $82, $80, $7d, $82, $85
10a40     76 7E 86 81 
10a44     7D 82 86 79 
10a48     6D 8E 88 75 
10a4c     79 8B 79 7B | 	byte	$76, $7e, $86, $81, $7d, $82, $86, $79, $6d, $8e, $88, $75, $79, $8b, $79, $7b
10a50     86 80 7A 7F 
10a54     81 84 77 7D 
10a58     87 79 7A 8C 
10a5c     7B 75 89 80 | 	byte	$86, $80, $7a, $7f, $81, $84, $77, $7d, $87, $79, $7a, $8c, $7b, $75, $89, $80
10a60     7F 78 8C 75 
10a64     79 88 80 7E 
10a68     83 7E 7D 75 
10a6c     8B 7A 85 78 | 	byte	$7f, $78, $8c, $75, $79, $88, $80, $7e, $83, $7e, $7d, $75, $8b, $7a, $85, $78
10a70     7F 86 71 93 
10a74     74 7D 88 7F 
10a78     83 81 80 72 
10a7c     88 7D 88 80 | 	byte	$7f, $86, $71, $93, $74, $7d, $88, $7f, $83, $81, $80, $72, $88, $7d, $88, $80
10a80     74 86 8B 6C 
10a84     83 86 82 73 
10a88     87 80 7C 81 
10a8c     7D 85 80 76 | 	byte	$74, $86, $8b, $6c, $83, $86, $82, $73, $87, $80, $7c, $81, $7d, $85, $80, $76
10a90     83 8C 6D 86 
10a94     83 7A 8A 7D 
10a98     84 6E 90 74 
10a9c     84 89 71 8C | 	byte	$83, $8c, $6d, $86, $83, $7a, $8a, $7d, $84, $6e, $90, $74, $84, $89, $71, $8c
10aa0     7C 82 79 85 
10aa4     80 85 79 73 
10aa8     98 70 85 80 
10aac     7D 7B 82 84 | 	byte	$7c, $82, $79, $85, $80, $85, $79, $73, $98, $70, $85, $80, $7d, $7b, $82, $84
10ab0     80 6F 86 90 
10ab4     74 72 91 80 
10ab8     7B 80 84 82 
10abc     71 93 75 81 | 	byte	$80, $6f, $86, $90, $74, $72, $91, $80, $7b, $80, $84, $82, $71, $93, $75, $81
10ac0     80 84 7A 7F 
10ac4     90 74 85 7D 
10ac8     7D 84 7D 8E 
10acc     7B 7A 7F 88 | 	byte	$80, $84, $7a, $7f, $90, $74, $85, $7d, $7d, $84, $7d, $8e, $7b, $7a, $7f, $88
10ad0     82 75 87 84 
10ad4     81 76 83 80 
10ad8     85 73 8B 80 
10adc     85 76 7E 85 | 	byte	$82, $75, $87, $84, $81, $76, $83, $80, $85, $73, $8b, $80, $85, $76, $7e, $85
10ae0     81 79 89 7D 
10ae4     72 85 90 76 
10ae8     79 85 7F 86 
10aec     78 81 7A 80 | 	byte	$81, $79, $89, $7d, $72, $85, $90, $76, $79, $85, $7f, $86, $78, $81, $7a, $80
10af0     8A 83 7A 79 
10af4     8D 7A 83 7C 
10af8     7C 82 84 79 
10afc     8B 80 72 85 | 	byte	$8a, $83, $7a, $79, $8d, $7a, $83, $7c, $7c, $82, $84, $79, $8b, $80, $72, $85
10b00     80 88 7E 7C 
10b04     7B 8B 71 8B 
10b08     76 92 6B 87 
10b0c     86 74 83 80 | 	byte	$80, $88, $7e, $7c, $7b, $8b, $71, $8b, $76, $92, $6b, $87, $86, $74, $83, $80
10b10     81 83 80 74 
10b14     85 80 87 77 
10b18     89 7A 7D 86 
10b1c     76 7B 92 7A | 	byte	$81, $83, $80, $74, $85, $80, $87, $77, $89, $7a, $7d, $86, $76, $7b, $92, $7a
10b20     82 84 74 87 
10b24     7B 85 80 7F 
10b28     83 85 84 6E 
10b2c     85 8A 75 89 | 	byte	$82, $84, $74, $87, $7b, $85, $80, $7f, $83, $85, $84, $6e, $85, $8a, $75, $89
10b30     7A 7F 8B 78 
10b34     7F 84 74 8E 
10b38     73 7F 89 86 
10b3c     74 80 87 7A | 	byte	$7a, $7f, $8b, $78, $7f, $84, $74, $8e, $73, $7f, $89, $86, $74, $80, $87, $7a
10b40     7B 82 89 80 
10b44     76 8C 79 80 
10b48     74 8F 80 7C 
10b4c     76 90 79 79 | 	byte	$7b, $82, $89, $80, $76, $8c, $79, $80, $74, $8f, $80, $7c, $76, $90, $79, $79
10b50     81 85 75 8B 
10b54     7D 7F 80 77 
10b58     8C 70 8B 88 
10b5c     7B 81 7A 87 | 	byte	$81, $85, $75, $8b, $7d, $7f, $80, $77, $8c, $70, $8b, $88, $7b, $81, $7a, $87
10b60     7C 79 86 82 
10b64     74 89 80 73 
10b68     82 81 88 69 
10b6c     87 86 84 7C | 	byte	$7c, $79, $86, $82, $74, $89, $80, $73, $82, $81, $88, $69, $87, $86, $84, $7c
10b70     73 8D 75 83 
10b74     8A 6E 87 7B 
10b78     7D 88 83 73 
10b7c     87 88 6B 8F | 	byte	$73, $8d, $75, $83, $8a, $6e, $87, $7b, $7d, $88, $83, $73, $87, $88, $6b, $8f
10b80     82 7B 79 8B 
10b84     80 7B 7D 81 
10b88     83 7D 7B 88 
10b8c     7D 80 73 94 | 	byte	$82, $7b, $79, $8b, $80, $7b, $7d, $81, $83, $7d, $7b, $88, $7d, $80, $73, $94
10b90     7C 73 87 8D 
10b94     6D 89 84 81 
10b98     80 72 90 80 
10b9c     7F 84 77 8C | 	byte	$7c, $73, $87, $8d, $6d, $89, $84, $81, $80, $72, $90, $80, $7f, $84, $77, $8c
10ba0     77 84 83 7C 
10ba4     72 93 78 84 
10ba8     78 83 7A 85 
10bac     84 85 70 87 | 	byte	$77, $84, $83, $7c, $72, $93, $78, $84, $78, $83, $7a, $85, $84, $85, $70, $87
10bb0     78 85 80 78 
10bb4     7F 89 85 78 
10bb8     74 8B 7C 79 
10bbc     89 90 6C 82 | 	byte	$78, $85, $80, $78, $7f, $89, $85, $78, $74, $8b, $7c, $79, $89, $90, $6c, $82
10bc0     7B 87 80 7C 
10bc4     82 86 79 80 
10bc8     82 84 7A 83 
10bcc     81 7F 81 83 | 	byte	$7b, $87, $80, $7c, $82, $86, $79, $80, $82, $84, $7a, $83, $81, $7f, $81, $83
10bd0     78 80 8B 79 
10bd4     83 73 8C 83 
10bd8     7A 84 80 84 
10bdc     76 82 8A 7E | 	byte	$78, $80, $8b, $79, $83, $73, $8c, $83, $7a, $84, $80, $84, $76, $82, $8a, $7e
10be0     7B 81 85 7E 
10be4     7F 7B 87 80 
10be8     79 91 72 87 
10bec     77 87 80 7E | 	byte	$7b, $81, $85, $7e, $7f, $7b, $87, $80, $79, $91, $72, $87, $77, $87, $80, $7e
10bf0     85 7D 81 80 
10bf4     87 80 70 8D 
10bf8     84 76 83 8C 
10bfc     7A 7F 7A 89 | 	byte	$85, $7d, $81, $80, $87, $80, $70, $8d, $84, $76, $83, $8c, $7a, $7f, $7a, $89
10c00     7A 81 81 87 
10c04     85 75 7E 89 
10c08     7A 85 7D 82 
10c0c     7D 7D 89 88 | 	byte	$7a, $81, $81, $87, $85, $75, $7e, $89, $7a, $85, $7d, $82, $7d, $7d, $89, $88
10c10     77 77 8D 7E 
10c14     80 80 83 85 
10c18     75 83 78 8D 
10c1c     80 77 87 7B | 	byte	$77, $77, $8d, $7e, $80, $80, $83, $85, $75, $83, $78, $8d, $80, $77, $87, $7b
10c20     84 7D 80 87 
10c24     73 86 81 81 
10c28     7B 8E 70 7F 
10c2c     8D 78 82 7D | 	byte	$84, $7d, $80, $87, $73, $86, $81, $81, $7b, $8e, $70, $7f, $8d, $78, $82, $7d
10c30     86 81 79 88 
10c34     7F 7C 7B 8E 
10c38     7D 7B 7E 89 
10c3c     80 7E 78 8A | 	byte	$86, $81, $79, $88, $7f, $7c, $7b, $8e, $7d, $7b, $7e, $89, $80, $7e, $78, $8a
10c40     89 6B 8E 84 
10c44     74 8C 78 7B 
10c48     8D 7C 7B 83 
10c4c     85 72 93 80 | 	byte	$89, $6b, $8e, $84, $74, $8c, $78, $7b, $8d, $7c, $7b, $83, $85, $72, $93, $80
10c50     75 82 83 7C 
10c54     80 84 7B 87 
10c58     7D 77 84 83 
10c5c     84 7A 8B 75 | 	byte	$75, $82, $83, $7c, $80, $84, $7b, $87, $7d, $77, $84, $83, $84, $7a, $8b, $75
10c60     85 7E 81 80 
10c64     81 7B 83 81 
10c68     78 8D 7A 79 
10c6c     87 8F 6D 7B | 	byte	$85, $7e, $81, $80, $81, $7b, $83, $81, $78, $8d, $7a, $79, $87, $8f, $6d, $7b
10c70     87 77 87 86 
10c74     76 86 7A 79 
10c78     8D 74 87 7D 
10c7c     84 76 7F 85 | 	byte	$87, $77, $87, $86, $76, $86, $7a, $79, $8d, $74, $87, $7d, $84, $76, $7f, $85
10c80     70 87 89 78 
10c84     80 7D 7D 7D 
10c88     80 83 81 73 
10c8c     81 85 7A 7A | 	byte	$70, $87, $89, $78, $80, $7d, $7d, $7d, $80, $83, $81, $73, $81, $85, $7a, $7a
10c90     88 83 7A 7B 
10c94     7D 8B 7C 75 
10c98     81 88 75 83 
10c9c     85 75 77 8A | 	byte	$88, $83, $7a, $7b, $7d, $8b, $7c, $75, $81, $88, $75, $83, $85, $75, $77, $8a
10ca0     86 79 7F 81 
10ca4     7F 7C 85 74 
10ca8     8F 7A 77 88 
10cac     80 7E 85 7A | 	byte	$86, $79, $7f, $81, $7f, $7c, $85, $74, $8f, $7a, $77, $88, $80, $7e, $85, $7a
10cb0     7C 85 7D 83 
10cb4     88 77 79 88 
10cb8     7B 7F 89 7B 
10cbc     87 74 7F 85 | 	byte	$7c, $85, $7d, $83, $88, $77, $79, $88, $7b, $7f, $89, $7b, $87, $74, $7f, $85
10cc0     85 74 7F 8D 
10cc4     78 73 96 7A 
10cc8     70 86 87 85 
10ccc     74 82 83 7B | 	byte	$85, $74, $7f, $8d, $78, $73, $96, $7a, $70, $86, $87, $85, $74, $82, $83, $7b
10cd0     88 77 82 7E 
10cd4     79 8D 88 68 
10cd8     87 8A 72 80 
10cdc     86 7D 85 7B | 	byte	$88, $77, $82, $7e, $79, $8d, $88, $68, $87, $8a, $72, $80, $86, $7d, $85, $7b
10ce0     88 75 85 82 
10ce4     7B 7F 85 7A 
10ce8     84 7B 83 7B 
10cec     84 7B 83 81 | 	byte	$88, $75, $85, $82, $7b, $7f, $85, $7a, $84, $7b, $83, $7b, $84, $7b, $83, $81
10cf0     81 73 8B 80 
10cf4     77 8A 80 70 
10cf8     84 8F 78 77 
10cfc     82 81 88 78 | 	byte	$81, $73, $8b, $80, $77, $8a, $80, $70, $84, $8f, $78, $77, $82, $81, $88, $78
10d00     7C 83 82 78 
10d04     8D 7D 7A 7B 
10d08     89 81 80 7A 
10d0c     7D 8C 7C 79 | 	byte	$7c, $83, $82, $78, $8d, $7d, $7a, $7b, $89, $81, $80, $7a, $7d, $8c, $7c, $79
10d10     88 79 86 7D 
10d14     80 80 80 80 
10d18     80 80 80 80 
10d1c     AB 55 02 01 | 	byte	$88, $79, $86, $7d, $80, $80, $80, $80, $80, $80, $80, $80, $ab, $55, $02, $01
10d20     21 7C F6 C1 
10d24     8E FF FF FF 
10d28     FF FF B2 D4 
10d2c     A6 F9 FF C2 | 	byte	$21, $7c, $f6, $c1, $8e, $ff, $ff, $ff, $ff, $ff, $b2, $d4, $a6, $f9, $ff, $c2
10d30     34 03 50 2B 
10d34     22 44 34 39 
10d38     04 00 18 04 
10d3c     68 AB 49 78 | 	byte	$34, $03, $50, $2b, $22, $44, $34, $39, $04, $00, $18, $04, $68, $ab, $49, $78
10d40     36 22 20 0D 
10d44     B3 FF FF 84 
10d48     FF 6A 2B E4 
10d4c     7B FF E8 3F | 	byte	$36, $22, $20, $0d, $b3, $ff, $ff, $84, $ff, $6a, $2b, $e4, $7b, $ff, $e8, $3f
10d50     E0 FF FF FF 
10d54     FF F7 FF FF 
10d58     DF 51 FF 1E 
10d5c     00 41 FF FF | 	byte	$e0, $ff, $ff, $ff, $ff, $f7, $ff, $ff, $df, $51, $ff, $1e, $00, $41, $ff, $ff
10d60     FF 0D A0 1F 
10d64     00 00 00 02 
10d68     02 02 01 6C 
10d6c     5C 41 FF D3 | 	byte	$ff, $0d, $a0, $1f, $00, $00, $00, $02, $02, $02, $01, $6c, $5c, $41, $ff, $d3
10d70     D2 0B D2 27 
10d74     FF A9 BF FF 
10d78     FF FF FF FF 
10d7c     FF FF EE 83 | 	byte	$d2, $0b, $d2, $27, $ff, $a9, $bf, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ee, $83
10d80     FF 9C 6B 05 
10d84     00 09 0B B1 
10d88     0F 00 00 21 
10d8c     22 58 13 35 | 	byte	$ff, $9c, $6b, $05, $00, $09, $0b, $b1, $0f, $00, $00, $21, $22, $58, $13, $35
10d90     05 96 0A 00 
10d94     0E 02 04 04 
10d98     0D B2 31 16 
10d9c     02 CD FF DB | 	byte	$05, $96, $0a, $00, $0e, $02, $04, $04, $0d, $b2, $31, $16, $02, $cd, $ff, $db
10da0     FF F4 FF FF 
10da4     FF FF FF FF 
10da8     FF FF B4 FF 
10dac     FF 55 A2 14 | 	byte	$ff, $f4, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $b4, $ff, $ff, $55, $a2, $14
10db0     00 5A 16 00 
10db4     00 01 02 01 
10db8     01 01 01 01 
10dbc     01 01 01 01 | 	byte	$00, $5a, $16, $00, $00, $01, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01
10dc0     01 01 01 0D 
10dc4     24 0C 01 A1 
10dc8     1C FF FF FF 
10dcc     95 FF C4 FF | 	byte	$01, $01, $01, $0d, $24, $0c, $01, $a1, $1c, $ff, $ff, $ff, $95, $ff, $c4, $ff
10dd0     FF FF FF FF 
10dd4     8F FF FF E8 
10dd8     96 FF 9B 6A 
10ddc     85 22 AB 0A | 	byte	$ff, $ff, $ff, $ff, $8f, $ff, $ff, $e8, $96, $ff, $9b, $6a, $85, $22, $ab, $0a
10de0     00 00 01 01 
10de4     01 01 01 01 
10de8     02 01 01 01 
10dec     01 01 01 04 | 	byte	$00, $00, $01, $01, $01, $01, $01, $01, $02, $01, $01, $01, $01, $01, $01, $04
10df0     09 01 23 10 
10df4     E7 FF 73 6E 
10df8     FA EB FF FF 
10dfc     FF FF FF FF | 	byte	$09, $01, $23, $10, $e7, $ff, $73, $6e, $fa, $eb, $ff, $ff, $ff, $ff, $ff, $ff
10e00     FF FF FF FF 
10e04     FF FF       | 	byte	$ff[6]
10e06     D8 B6 55 13 
10e0a     00 10 02 01 
10e0e     01 01 02 01 
10e12     01 01 01 01 | 	byte	$d8, $b6, $55, $13, $00, $10, $02, $01, $01, $01, $02, $01, $01, $01, $01, $01
10e16     01 01 01 01 
10e1a     01 01 01 01 
10e1e     01 01 01    | 	byte	$01[11]
10e21     02 1D 5D AF 
10e25     99 F9 FF FF 
10e29     FF FF FF FF 
10e2d     FF FF FF FF | 	byte	$02, $1d, $5d, $af, $99, $f9, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10e31     FF FF FF FF 
10e35     FF FF       | 	byte	$ff[6]
10e37     B9 7A 59 2A 
10e3b     02 00 02 01 
10e3f     01 01 01 01 
10e43     01 01 01 01 | 	byte	$b9, $7a, $59, $2a, $02, $00, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01
10e47     01 02 01 01 
10e4b     01 01 01 01 
10e4f     01 01 01 01 
10e53     23 6B 8A 9E | 	byte	$01, $02, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $23, $6b, $8a, $9e
10e57     E4 FF FF FF 
10e5b     FF FF FF FF 
10e5f     FF FF FF FF 
10e63     FF FF FF FF | 	byte	$e4, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10e67     FF DC C7 D4 
10e6b     6D 06 00 00 
10e6f     02 02 01 01 
10e73     01 01 01 01 | 	byte	$ff, $dc, $c7, $d4, $6d, $06, $00, $00, $02, $02, $01, $01, $01, $01, $01, $01
10e77     01 01 01 01 
10e7b     01 01 01 01 
10e7f     01 01 01 01 
10e83     01          | 	byte	$01[13]
10e84     09 0A 1A 35 
10e88     73 C4 FF FF 
10e8c     FF FF FF FF 
10e90     FF FF FF FF | 	byte	$09, $0a, $1a, $35, $73, $c4, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10e94     FF FF FF FF 
10e98     FF          | 	byte	$ff[5]
10e99     CE B7 96 33 
10e9d     0E 00 01 01 
10ea1     01 01 01 01 
10ea5     01 01 01 01 | 	byte	$ce, $b7, $96, $33, $0e, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
10ea9     01 01 01 01 
10ead     01 01 01 01 
10eb1     01 01 01    | 	byte	$01[11]
10eb4     07 0D 52 6F 
10eb8     8C A9 B8 FF 
10ebc     FF FF FF FF 
10ec0     FF FF FF FF | 	byte	$07, $0d, $52, $6f, $8c, $a9, $b8, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10ec4     FF FF FF FF 
10ec8     FF FF       | 	byte	$ff[6]
10eca     DB AB 9F 87 
10ece     5A 56 2B 07 
10ed2     01 01 01 01 
10ed6     01 01 01 01 | 	byte	$db, $ab, $9f, $87, $5a, $56, $2b, $07, $01, $01, $01, $01, $01, $01, $01, $01
10eda     01 01 01 01 
10ede     01 01 01 01 
10ee2     01 01 01 01 
10ee6     01          | 	byte	$01[13]
10ee7     03 29 58 84 
10eeb     8E C6 DF FF 
10eef     FF FF FF FF 
10ef3     FF FF FF FF | 	byte	$03, $29, $58, $84, $8e, $c6, $df, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10ef7     FF FF FF FF 
10efb     FF          | 	byte	$ff[5]
10efc     DD DE CB B4 
10f00     97 7E 95 53 
10f04     1A 11 29 04 
10f08     00 02 01 01 | 	byte	$dd, $de, $cb, $b4, $97, $7e, $95, $53, $1a, $11, $29, $04, $00, $02, $01, $01
10f0c     01 01 01 01 
10f10     01 01 01 01 
10f14     01 01 01 01 
10f18     01 01       | 	byte	$01[14]
10f1a     07 0C 1C 64 
10f1e     6A 7A A4 C3 
10f22     D7 B0 C5 BF 
10f26     DE AC CD ED | 	byte	$07, $0c, $1c, $64, $6a, $7a, $a4, $c3, $d7, $b0, $c5, $bf, $de, $ac, $cd, $ed
10f2a     FF FF F6 F6 
10f2e     F9 E6 E8 FB 
10f32     F7 E6 E8 CC 
10f36     C7 AB 60 4F | 	byte	$ff, $ff, $f6, $f6, $f9, $e6, $e8, $fb, $f7, $e6, $e8, $cc, $c7, $ab, $60, $4f
10f3a     60 42 2B 40 
10f3e     37 2B 01 03 
10f42     02 01 01 01 
10f46     06 12 02 16 | 	byte	$60, $42, $2b, $40, $37, $2b, $01, $03, $02, $01, $01, $01, $06, $12, $02, $16
10f4a     09 07 01 00 
10f4e     03 05 09 3F 
10f52     43 35 47 56 
10f56     51 5E 5A 6C | 	byte	$09, $07, $01, $00, $03, $05, $09, $3f, $43, $35, $47, $56, $51, $5e, $5a, $6c
10f5a     64 77 A7 B2 
10f5e     C1 C2 DD CF 
10f62     C0 EC F6 F0 
10f66     FF FF FF FF | 	byte	$64, $77, $a7, $b2, $c1, $c2, $dd, $cf, $c0, $ec, $f6, $f0, $ff, $ff, $ff, $ff
10f6a     FF E7 D6 B9 
10f6e     EF D2 C3 D5 
10f72     C3 9F A5 8F 
10f76     B8 9D 84 84 | 	byte	$ff, $e7, $d6, $b9, $ef, $d2, $c3, $d5, $c3, $9f, $a5, $8f, $b8, $9d, $84, $84
10f7a     65 6C 70 1A 
10f7e     2F 0C 12 19 
10f82     17 3D 16 11 
10f86     06 0F 02 11 | 	byte	$65, $6c, $70, $1a, $2f, $0c, $12, $19, $17, $3d, $16, $11, $06, $0f, $02, $11
10f8a     02 00 02 01 
10f8e     03 06 0D 20 
10f92     15 49 63 6E 
10f96     83 74 9C AA | 	byte	$02, $00, $02, $01, $03, $06, $0d, $20, $15, $49, $63, $6e, $83, $74, $9c, $aa
10f9a     C0 D9 DE CC 
10f9e     CD D4 F2 FF 
10fa2     FF FF FF FF 
10fa6     FF FF FF FF | 	byte	$c0, $d9, $de, $cc, $cd, $d4, $f2, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10faa     FF FF FF E7 
10fae     F6 FE DC BA 
10fb2     BC A8 B2 B9 
10fb6     A2 5C 4F 5B | 	byte	$ff, $ff, $ff, $e7, $f6, $fe, $dc, $ba, $bc, $a8, $b2, $b9, $a2, $5c, $4f, $5b
10fba     2B 18 14 01 
10fbe     00 01 01 01 
10fc2     01 01 01 01 
10fc6     01 01 01 01 | 	byte	$2b, $18, $14, $01, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
10fca     01 01 01 01 
10fce     07 05 1B 31 
10fd2     3C 40 5C 66 
10fd6     93 AE DB DA | 	byte	$01, $01, $01, $01, $07, $05, $1b, $31, $3c, $40, $5c, $66, $93, $ae, $db, $da
10fda     E9 FF FF FF 
10fde     FF FF FF FF 
10fe2     FF FF FF FF 
10fe6     FF FF FF FF | 	byte	$e9, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
10fea     FF FF F5 F9 
10fee     AB AA 82 63 
10ff2     38 36 07 0E 
10ff6     03 01 01 01 | 	byte	$ff, $ff, $f5, $f9, $ab, $aa, $82, $63, $38, $36, $07, $0e, $03, $01, $01, $01
10ffa     01 01 01 01 
10ffe     01 01 01 01 
11002     01 01 01 01 
11006     01 01 01 01 
1100a     01          | 	byte	$01[17]
1100b     02 12 17 39 
1100f     76 77 A2 D5 
11013     F9 FA FF FF 
11017     FF FF FF FF | 	byte	$02, $12, $17, $39, $76, $77, $a2, $d5, $f9, $fa, $ff, $ff, $ff, $ff, $ff, $ff
1101b     FF FF FF FF 
1101f     FF FF FF FF 
11023     FF FF       | 	byte	$ff[10]
11025     FE EE C1 8C 
11029     9D 7B 4C 3D 
1102d     14 01 00 01 
11031     01 01 02 01 | 	byte	$fe, $ee, $c1, $8c, $9d, $7b, $4c, $3d, $14, $01, $00, $01, $01, $01, $02, $01
11035     01 01 01 01 
11039     01 01 01 01 
1103d     01 01 01 01 
11041     01 01 01 01 
11045     01          | 	byte	$01[17]
11046     02 1E 2D 4C 
1104a     89 A2 B9 C5 
1104e     D5 EC FF FF 
11052     FF FF FF FF | 	byte	$02, $1e, $2d, $4c, $89, $a2, $b9, $c5, $d5, $ec, $ff, $ff, $ff, $ff, $ff, $ff
11056     FF FF FF FF 
1105a     FF FF FF FF 
1105e     FF FF       | 	byte	$ff[10]
11060     FE F1 F6 C5 
11064     D6 A4 7C 71 
11068     53 2E 26 0D 
1106c     06 03 01 01 | 	byte	$fe, $f1, $f6, $c5, $d6, $a4, $7c, $71, $53, $2e, $26, $0d, $06, $03, $01, $01
11070     01 01 01 01 
11074     01 01 01 01 
11078     01 01 01 01 
1107c     01 01 01 01 | 	byte	$01[16]
11080     02 02 09 29 
11084     55 59 5A 70 
11088     87 A4 AB C6 
1108c     D3 E5 E2 FF | 	byte	$02, $02, $09, $29, $55, $59, $5a, $70, $87, $a4, $ab, $c6, $d3, $e5, $e2, $ff
11090     FF FF FD FF 
11094     FF FF FF FF 
11098     FF FF F3 F3 
1109c     DB E8 E7 C6 | 	byte	$ff, $ff, $fd, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $f3, $f3, $db, $e8, $e7, $c6
110a0     AF BB 7E 87 
110a4     89 6D 35 3F 
110a8     36 26 1C 08 
110ac     06 03 10 1B | 	byte	$af, $bb, $7e, $87, $89, $6d, $35, $3f, $36, $26, $1c, $08, $06, $03, $10, $1b
110b0     03 0A 04 0D 
110b4     02 01 01 05 
110b8     0C 18 1F 0C 
110bc     29 3B 3E 3D | 	byte	$03, $0a, $04, $0d, $02, $01, $01, $05, $0c, $18, $1f, $0c, $29, $3b, $3e, $3d
110c0     67 75 63 72 
110c4     81 7A 82 7C 
110c8     97 86 81 8D 
110cc     A0 8F A1 8C | 	byte	$67, $75, $63, $72, $81, $7a, $82, $7c, $97, $86, $81, $8d, $a0, $8f, $a1, $8c
110d0     AE 95 A0 8C 
110d4     AF CD A7 A6 
110d8     C4 B4 B0 AC 
110dc     C3 CB B1 C0 | 	byte	$ae, $95, $a0, $8c, $af, $cd, $a7, $a6, $c4, $b4, $b0, $ac, $c3, $cb, $b1, $c0
110e0     BC B1 8E 9C 
110e4     A1 8F AA BB 
110e8     B1 B5 B3 99 
110ec     A0 9E 9A 99 | 	byte	$bc, $b1, $8e, $9c, $a1, $8f, $aa, $bb, $b1, $b5, $b3, $99, $a0, $9e, $9a, $99
110f0     8E 78 73 7F 
110f4     69 5E 72 5E 
110f8     45 53 41 40 
110fc     3B 0B 11 14 | 	byte	$8e, $78, $73, $7f, $69, $5e, $72, $5e, $45, $53, $41, $40, $3b, $0b, $11, $14
11100     1B 1F 13 12 
11104     0A 06 10 17 
11108     04 04 1E 33 
1110c     35 44 52 59 | 	byte	$1b, $1f, $13, $12, $0a, $06, $10, $17, $04, $04, $1e, $33, $35, $44, $52, $59
11110     66 6B 79 7F 
11114     85 AF BC A4 
11118     B3 AC C3 C9 
1111c     E6 EA F6 F2 | 	byte	$66, $6b, $79, $7f, $85, $af, $bc, $a4, $b3, $ac, $c3, $c9, $e6, $ea, $f6, $f2
11120     EB FF F2 FF 
11124     FF FF F1 EC 
11128     E9 E2 E7 DB 
1112c     DC D8 C1 C5 | 	byte	$eb, $ff, $f2, $ff, $ff, $ff, $f1, $ec, $e9, $e2, $e7, $db, $dc, $d8, $c1, $c5
11130     B8 8B 93 91 
11134     7D 7F 63 57 
11138     43 3B 2B 24 
1113c     1A 25 1A 07 | 	byte	$b8, $8b, $93, $91, $7d, $7f, $63, $57, $43, $3b, $2b, $24, $1a, $25, $1a, $07
11140     13 10 16 11 
11144     04 09 02 01 
11148     07 13 02 00 
1114c     11 0A 03 15 | 	byte	$13, $10, $16, $11, $04, $09, $02, $01, $07, $13, $02, $00, $11, $0a, $03, $15
11150     29 3C 33 4D 
11154     3D 58 63 7C 
11158     90 87 8D A1 
1115c     C0 C5 CC D9 | 	byte	$29, $3c, $33, $4d, $3d, $58, $63, $7c, $90, $87, $8d, $a1, $c0, $c5, $cc, $d9
11160     E1 FA F9 F2 
11164     E6 FF FF FF 
11168     FF FF FF FF 
1116c     FF FF FF FF | 	byte	$e1, $fa, $f9, $f2, $e6, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
11170     FF F7 D7 DE 
11174     DC CC C0 A3 
11178     99 99 7F 74 
1117c     69 4C 50 1E | 	byte	$ff, $f7, $d7, $de, $dc, $cc, $c0, $a3, $99, $99, $7f, $74, $69, $4c, $50, $1e
11180     07 18 04 00 
11184     01 01 01 01 
11188     01 01 01 01 
1118c     01 01 01 01 | 	byte	$07, $18, $04, $00, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
11190     01 01 01 0A 
11194     17 27 38 5D 
11198     4E 4A 60 83 
1119c     94 99 A7 B3 | 	byte	$01, $01, $01, $0a, $17, $27, $38, $5d, $4e, $4a, $60, $83, $94, $99, $a7, $b3
111a0     B1 C5 E5 E0 
111a4     F5 FF FF FF 
111a8     FC FF FF FF 
111ac     EF F2 EB EF | 	byte	$b1, $c5, $e5, $e0, $f5, $ff, $ff, $ff, $fc, $ff, $ff, $ff, $ef, $f2, $eb, $ef
111b0     E6 EB ED CA 
111b4     C3 CC B5 C0 
111b8     98 95 8C 73 
111bc     7E 6C 68 69 | 	byte	$e6, $eb, $ed, $ca, $c3, $cc, $b5, $c0, $98, $95, $8c, $73, $7e, $6c, $68, $69
111c0     5D 4E 41 34 
111c4     2D 1C 2E 25 
111c8     21 06 0E 19 
111cc     11 2E 2B 15 | 	byte	$5d, $4e, $41, $34, $2d, $1c, $2e, $25, $21, $06, $0e, $19, $11, $2e, $2b, $15
111d0     18 17 08 27 
111d4     30 2F 25 46 
111d8     39 4B 67 6F 
111dc     74 84 8C 88 | 	byte	$18, $17, $08, $27, $30, $2f, $25, $46, $39, $4b, $67, $6f, $74, $84, $8c, $88
111e0     93 9A 9C A5 
111e4     A6 A6 BF BD 
111e8     BF AE C2 C4 
111ec     BF C1 B9 BF | 	byte	$93, $9a, $9c, $a5, $a6, $a6, $bf, $bd, $bf, $ae, $c2, $c4, $bf, $c1, $b9, $bf
111f0     B7 C7 C8 B6 
111f4     B9 BA B5 AF 
111f8     B1 A5 94 8F 
111fc     8C 87 9B 84 | 	byte	$b7, $c7, $c8, $b6, $b9, $ba, $b5, $af, $b1, $a5, $94, $8f, $8c, $87, $9b, $84
11200     88 89 83 72 
11204     69 76 72 76 
11208     69 65 5F 76 
1120c     72 6F 75 6E | 	byte	$88, $89, $83, $72, $69, $76, $72, $76, $69, $65, $5f, $76, $72, $6f, $75, $6e
11210     77 6F 75 73 
11214     6C 7B 70 71 
11218     7D 78 82 82 
1121c     75 77 7C 75 | 	byte	$77, $6f, $75, $73, $6c, $7b, $70, $71, $7d, $78, $82, $82, $75, $77, $7c, $75
11220     5F 59 5F 5E 
11224     54 4F 5B 58 
11228     51 62 61 54 
1122c     53 5B 5F 66 | 	byte	$5f, $59, $5f, $5e, $54, $4f, $5b, $58, $51, $62, $61, $54, $53, $5b, $5f, $66
11230     63 69 6A 72 
11234     75 82 89 93 
11238     8B 97 99 9C 
1123c     A7 A1 A3 B0 | 	byte	$63, $69, $6a, $72, $75, $82, $89, $93, $8b, $97, $99, $9c, $a7, $a1, $a3, $b0
11240     B4 B2 B2 B2 
11244     BE BF C1 BE 
11248     BB C0 BC B2 
1124c     B9 AF A5 A5 | 	byte	$b4, $b2, $b2, $b2, $be, $bf, $c1, $be, $bb, $c0, $bc, $b2, $b9, $af, $a5, $a5
11250     9F A1 9C 97 
11254     98 8C 82 7D 
11258     75 74 71 61 
1125c     67 6D 64 5B | 	byte	$9f, $a1, $9c, $97, $98, $8c, $82, $7d, $75, $74, $71, $61, $67, $6d, $64, $5b
11260     5C 5A 61 5E 
11264     54 54 5E 67 
11268     62 66 73 6F 
1126c     74 73 77 7C | 	byte	$5c, $5a, $61, $5e, $54, $54, $5e, $67, $62, $66, $73, $6f, $74, $73, $77, $7c
11270     80 7A 7C 81 
11274     76 77 78 83 
11278     83 7E 78 82 
1127c     80 88 86 82 | 	byte	$80, $7a, $7c, $81, $76, $77, $78, $83, $83, $7e, $78, $82, $80, $88, $86, $82
11280     82 7E 7C 82 
11284     82 83 84 82 
11288     82 8C 90 84 
1128c     86 86 84 90 | 	byte	$82, $7e, $7c, $82, $82, $83, $84, $82, $82, $8c, $90, $84, $86, $86, $84, $90
11290     95 8A 87 85 
11294     8D 92 95 94 
11298     9D 95 98 9D 
1129c     92 96 99 96 | 	byte	$95, $8a, $87, $85, $8d, $92, $95, $94, $9d, $95, $98, $9d, $92, $96, $99, $96
112a0     9C A2 9B 8B 
112a4     82 88 8A 86 
112a8     83 7C 7B 7E 
112ac     82 89 82 7C | 	byte	$9c, $a2, $9b, $8b, $82, $88, $8a, $86, $83, $7c, $7b, $7e, $82, $89, $82, $7c
112b0     82 80 7F 81 
112b4     77 7B 7F 79 
112b8     74 7B 72 70 
112bc     67 6C 70 73 | 	byte	$82, $80, $7f, $81, $77, $7b, $7f, $79, $74, $7b, $72, $70, $67, $6c, $70, $73
112c0     70 70 77 79 
112c4     79 78 81 7E 
112c8     8A 94 95 9E 
112cc     9C 90 96 91 | 	byte	$70, $70, $77, $79, $79, $78, $81, $7e, $8a, $94, $95, $9e, $9c, $90, $96, $91
112d0     8F 8D 9B 91 
112d4     8B 87 8A 8A 
112d8     8E 94 8B 82 
112dc     83 78 77 6E | 	byte	$8f, $8d, $9b, $91, $8b, $87, $8a, $8a, $8e, $94, $8b, $82, $83, $78, $77, $6e
112e0     6E 72 6B 67 
112e4     65 79 80 74 
112e8     6A 71 72 6B 
112ec     71 6D 72 76 | 	byte	$6e, $72, $6b, $67, $65, $79, $80, $74, $6a, $71, $72, $6b, $71, $6d, $72, $76
112f0     76 73 7C 7E 
112f4     78 7E 82 8A 
112f8     88 8B 8A 90 
112fc     95 9A 9D A9 | 	byte	$76, $73, $7c, $7e, $78, $7e, $82, $8a, $88, $8b, $8a, $90, $95, $9a, $9d, $a9
11300     98 92 8E 8D 
11304     93 93 87 80 
11308     7A 74 76 70 
1130c     73 6F 74 6A | 	byte	$98, $92, $8e, $8d, $93, $93, $87, $80, $7a, $74, $76, $70, $73, $6f, $74, $6a
11310     69 69 67 65 
11314     61 64 6A 78 
11318     7C 76 80 7E 
1131c     7F 80 7D 84 | 	byte	$69, $69, $67, $65, $61, $64, $6a, $78, $7c, $76, $80, $7e, $7f, $80, $7d, $84
11320     8C 87 82 7F 
11324     87 87 87 8E 
11328     89 82 87 8B 
1132c     8A 84 84 87 | 	byte	$8c, $87, $82, $7f, $87, $87, $87, $8e, $89, $82, $87, $8b, $8a, $84, $84, $87
11330     8A 80 78 7A 
11334     80 7D 7D 7C 
11338     84 7F 6F 70 
1133c     79 7F 82 82 | 	byte	$8a, $80, $78, $7a, $80, $7d, $7d, $7c, $84, $7f, $6f, $70, $79, $7f, $82, $82
11340     72 70 6C 69 
11344     78 81 75 77 
11348     74 75 73 77 
1134c     7B 83 8B 89 | 	byte	$72, $70, $6c, $69, $78, $81, $75, $77, $74, $75, $73, $77, $7b, $83, $8b, $89
11350     8F 8D 86 81 
11354     85 7B 7B 7A 
11358     7E 7F 7B 76 
1135c     80 82 80 83 | 	byte	$8f, $8d, $86, $81, $85, $7b, $7b, $7a, $7e, $7f, $7b, $76, $80, $82, $80, $83
11360     87 7C 75 71 
11364     79 89 7F 7A 
11368     87 82 86 86 
1136c     88 84 84 7E | 	byte	$87, $7c, $75, $71, $79, $89, $7f, $7a, $87, $82, $86, $86, $88, $84, $84, $7e
11370     7F 88 85 7D 
11374     78 86 83 84 
11378     79 7A 7B 76 
1137c     77 81 7F 7D | 	byte	$7f, $88, $85, $7d, $78, $86, $83, $84, $79, $7a, $7b, $76, $77, $81, $7f, $7d
11380     77 80 81 7D 
11384     7D 7D 7C 7A 
11388     76 74 7F 7D 
1138c     7A 83 88 81 | 	byte	$77, $80, $81, $7d, $7d, $7d, $7c, $7a, $76, $74, $7f, $7d, $7a, $83, $88, $81
11390     76 7B 7E 7F 
11394     7F 7E 89 88 
11398     88 8F 88 8B 
1139c     8F 85 92 8F | 	byte	$76, $7b, $7e, $7f, $7f, $7e, $89, $88, $88, $8f, $88, $8b, $8f, $85, $92, $8f
113a0     8E 88 82 7F 
113a4     73 78 7B 72 
113a8     6E 6C 69 75 
113ac     70 72 75 7C | 	byte	$8e, $88, $82, $7f, $73, $78, $7b, $72, $6e, $6c, $69, $75, $70, $72, $75, $7c
113b0     79 7F 81 85 
113b4     82 83 88 95 
113b8     91 8F 90 8E 
113bc     8A 96 9C A2 | 	byte	$79, $7f, $81, $85, $82, $83, $88, $95, $91, $8f, $90, $8e, $8a, $96, $9c, $a2
113c0     A6 8F 87 91 
113c4     8F 8C 85 7A 
113c8     79 76 74 6E 
113cc     72 6E 6B 6B | 	byte	$a6, $8f, $87, $91, $8f, $8c, $85, $7a, $79, $76, $74, $6e, $72, $6e, $6b, $6b
113d0     75 6D 65 62 
113d4     5F 69 65 66 
113d8     68 64 67 64 
113dc     70 72 7A 80 | 	byte	$75, $6d, $65, $62, $5f, $69, $65, $66, $68, $64, $67, $64, $70, $72, $7a, $80
113e0     85 88 90 98 
113e4     96 96 99 9D 
113e8     9E A6 A5 A7 
113ec     AD AB A6 AD | 	byte	$85, $88, $90, $98, $96, $96, $99, $9d, $9e, $a6, $a5, $a7, $ad, $ab, $a6, $ad
113f0     B1 B3 A6 96 
113f4     95 90 8E 87 
113f8     7A 6E 70 67 
113fc     63 5F 5E 5E | 	byte	$b1, $b3, $a6, $96, $95, $90, $8e, $87, $7a, $6e, $70, $67, $63, $5f, $5e, $5e
11400     5B 5B 53 44 
11404     4F 56 5C 56 
11408     55 59 53 59 
1140c     65 70 78 77 | 	byte	$5b, $5b, $53, $44, $4f, $56, $5c, $56, $55, $59, $53, $59, $65, $70, $78, $77
11410     7B 80 8C 90 
11414     93 8F 91 9D 
11418     99 9F A1 9D 
1141c     A4 A6 A5 A6 | 	byte	$7b, $80, $8c, $90, $93, $8f, $91, $9d, $99, $9f, $a1, $9d, $a4, $a6, $a5, $a6
11420     A9 AA A8 A1 
11424     A3 98 8F 91 
11428     86 87 8B 87 
1142c     78 76 74 79 | 	byte	$a9, $aa, $a8, $a1, $a3, $98, $8f, $91, $86, $87, $8b, $87, $78, $76, $74, $79
11430     77 77 6D 67 
11434     6C 71 6B 60 
11438     63 67 68 63 
1143c     61 63 72 72 | 	byte	$77, $77, $6d, $67, $6c, $71, $6b, $60, $63, $67, $68, $63, $61, $63, $72, $72
11440     72 79 78 77 
11444     74 7A 7A 83 
11448     83 82 80 80 
1144c     82 83 7F 83 | 	byte	$72, $79, $78, $77, $74, $7a, $7a, $83, $83, $82, $80, $80, $82, $83, $7f, $83
11450     83 81 87 94 
11454     97 98 91 8B 
11458     90 8C 8B 8E 
1145c     90 90 89 8B | 	byte	$83, $81, $87, $94, $97, $98, $91, $8b, $90, $8c, $8b, $8e, $90, $90, $89, $8b
11460     94 A2 A1 94 
11464     97 9D 93 91 
11468     89 82 81 81 
1146c     81 7D 7C 7D | 	byte	$94, $a2, $a1, $94, $97, $9d, $93, $91, $89, $82, $81, $81, $81, $7d, $7c, $7d
11470     78 6B 71 6D 
11474     6B 6B 6F 67 
11478     6B 72 6E 64 
1147c     6A 6B 6F 65 | 	byte	$78, $6b, $71, $6d, $6b, $6b, $6f, $67, $6b, $72, $6e, $64, $6a, $6b, $6f, $65
11480     64 63 6B 6E 
11484     74 72 75 78 
11488     76 7C 7F 88 
1148c     89 8A 8D 88 | 	byte	$64, $63, $6b, $6e, $74, $72, $75, $78, $76, $7c, $7f, $88, $89, $8a, $8d, $88
11490     8B 94 8F 8E 
11494     8A 92 96 8E 
11498     89 83 88 90 
1149c     8F 8D 8A 87 | 	byte	$8b, $94, $8f, $8e, $8a, $92, $96, $8e, $89, $83, $88, $90, $8f, $8d, $8a, $87
114a0     8C 8A 8D 92 
114a4     8A 8B 8A 85 
114a8     82 7E 7A 7C 
114ac     7A 7C 79 77 | 	byte	$8c, $8a, $8d, $92, $8a, $8b, $8a, $85, $82, $7e, $7a, $7c, $7a, $7c, $79, $77
114b0     7E 72 74 7A 
114b4     7D 79 78 74 
114b8     77 72 6C 65 
114bc     68 75 77 72 | 	byte	$7e, $72, $74, $7a, $7d, $79, $78, $74, $77, $72, $6c, $65, $68, $75, $77, $72
114c0     70 75 76 79 
114c4     7B 7B 78 80 
114c8     7F 7B 81 81 
114cc     80 7C 7D 88 | 	byte	$70, $75, $76, $79, $7b, $7b, $78, $80, $7f, $7b, $81, $81, $80, $7c, $7d, $88
114d0     89 8A 8C 8B 
114d4     86 89 88 8B 
114d8     84 87 8A 8E 
114dc     8D 8E 8A 84 | 	byte	$89, $8a, $8c, $8b, $86, $89, $88, $8b, $84, $87, $8a, $8e, $8d, $8e, $8a, $84
114e0     83 7E 7C 74 
114e4     72 7C 78 77 
114e8     7A 78 7D 80 
114ec     83 7F 7A 82 | 	byte	$83, $7e, $7c, $74, $72, $7c, $78, $77, $7a, $78, $7d, $80, $83, $7f, $7a, $82
114f0     7E 81 86 81 
114f4     7E 83 83 86 
114f8     82 7F 7D 83 
114fc     8B 8A 80 7A | 	byte	$7e, $81, $86, $81, $7e, $83, $83, $86, $82, $7f, $7d, $83, $8b, $8a, $80, $7a
11500     75 76 77 78 
11504     7E 7F 79 77 
11508     71 72 79 74 
1150c     73 74 79 77 | 	byte	$75, $76, $77, $78, $7e, $7f, $79, $77, $71, $72, $79, $74, $73, $74, $79, $77
11510     7C 7D 7C 80 
11514     84 83 85 7C 
11518     77 7E 82 7E 
1151c     7F 7F 85 81 | 	byte	$7c, $7d, $7c, $80, $84, $83, $85, $7c, $77, $7e, $82, $7e, $7f, $7f, $85, $81
11520     81 8E 93 93 
11524     8B 84 83 8B 
11528     8C 8A 86 8E 
1152c     8F 83 83 85 | 	byte	$81, $8e, $93, $93, $8b, $84, $83, $8b, $8c, $8a, $86, $8e, $8f, $83, $83, $85
11530     88 8C 8B 85 
11534     85 7C 77 76 
11538     7D 7F 7C 7C 
1153c     7D 82 82 87 | 	byte	$88, $8c, $8b, $85, $85, $7c, $77, $76, $7d, $7f, $7c, $7c, $7d, $82, $82, $87
11540     8B 8E 87 87 
11544     87 84 81 79 
11548     7F 87 8C 8A 
1154c     84 7B 80 7C | 	byte	$8b, $8e, $87, $87, $87, $84, $81, $79, $7f, $87, $8c, $8a, $84, $7b, $80, $7c
11550     75 75 75 70 
11554     72 72 70 70 
11558     74 76 71 73 
1155c     72 6F 74 6B | 	byte	$75, $75, $75, $70, $72, $72, $70, $70, $74, $76, $71, $73, $72, $6f, $74, $6b
11560     6E 71 77 7A 
11564     79 7D 86 83 
11568     83 7E 7F 88 
1156c     88 8A 8A 8C | 	byte	$6e, $71, $77, $7a, $79, $7d, $86, $83, $83, $7e, $7f, $88, $88, $8a, $8a, $8c
11570     97 99 95 99 
11574     9A 96 96 96 
11578     9A 98 90 89 
1157c     8B 8B 7F 82 | 	byte	$97, $99, $95, $99, $9a, $96, $96, $96, $9a, $98, $90, $89, $8b, $8b, $7f, $82
11580     7F 79 79 7C 
11584     75 78 6C 67 
11588     6B 6D 72 6D 
1158c     6B 6A 62 63 | 	byte	$7f, $79, $79, $7c, $75, $78, $6c, $67, $6b, $6d, $72, $6d, $6b, $6a, $62, $63
11590     67 6F 73 6F 
11594     70 70 72 76 
11598     74 6C 76 77 
1159c     74 7C 7B 7D | 	byte	$67, $6f, $73, $6f, $70, $70, $72, $76, $74, $6c, $76, $77, $74, $7c, $7b, $7d
115a0     7C 7E 87 8D 
115a4     8C 86 88 8E 
115a8     8F 90 90 90 
115ac     8D 8B 87 8B | 	byte	$7c, $7e, $87, $8d, $8c, $86, $88, $8e, $8f, $90, $90, $90, $8d, $8b, $87, $8b
115b0     91 8D 8A 8E 
115b4     89 8B 8C 8B 
115b8     88 91 91 8E 
115bc     89 8B 8A 7F | 	byte	$91, $8d, $8a, $8e, $89, $8b, $8c, $8b, $88, $91, $91, $8e, $89, $8b, $8a, $7f
115c0     80 87 84 7D 
115c4     78 7C 75 78 
115c8     78 79 78 71 
115cc     72 73 79 78 | 	byte	$80, $87, $84, $7d, $78, $7c, $75, $78, $78, $79, $78, $71, $72, $73, $79, $78
115d0     74 6D 72 6A 
115d4     66 6C 6F 6D 
115d8     6A 6D 75 76 
115dc     78 74 6A 70 | 	byte	$74, $6d, $72, $6a, $66, $6c, $6f, $6d, $6a, $6d, $75, $76, $78, $74, $6a, $70
115e0     78 72 77 7A 
115e4     80 84 84 83 
115e8     80 88 8F 9A 
115ec     98 9E 9D 9A | 	byte	$78, $72, $77, $7a, $80, $84, $84, $83, $80, $88, $8f, $9a, $98, $9e, $9d, $9a
115f0     9E A6 A8 A6 
115f4     A4 9B 96 98 
115f8     9A A0 9A 91 
115fc     8D 91 8E 83 | 	byte	$9e, $a6, $a8, $a6, $a4, $9b, $96, $98, $9a, $a0, $9a, $91, $8d, $91, $8e, $83
11600     83 83 85 82 
11604     78 75 72 6F 
11608     67 68 64 60 
1160c     56 57 59 5D | 	byte	$83, $83, $85, $82, $78, $75, $72, $6f, $67, $68, $64, $60, $56, $57, $59, $5d
11610     64 69 69 64 
11614     63 63 66 61 
11618     69 6E 76 79 
1161c     80 8C 90 94 | 	byte	$64, $69, $69, $64, $63, $63, $66, $61, $69, $6e, $76, $79, $80, $8c, $90, $94
11620     94 93 95 9C 
11624     9A 9E 9C 9B 
11628     9E 9E A6 A7 
1162c     A0 98 96 91 | 	byte	$94, $93, $95, $9c, $9a, $9e, $9c, $9b, $9e, $9e, $a6, $a7, $a0, $98, $96, $91
11630     94 92 88 87 
11634     8A 89 85 80 
11638     7F 7C 77 79 
1163c     70 6F 6E 75 | 	byte	$94, $92, $88, $87, $8a, $89, $85, $80, $7f, $7c, $77, $79, $70, $6f, $6e, $75
11640     72 71 7A 78 
11644     70 6F 70 6C 
11648     6C 6A 6C 75 
1164c     72 78 7F 80 | 	byte	$72, $71, $7a, $78, $70, $6f, $70, $6c, $6c, $6a, $6c, $75, $72, $78, $7f, $80
11650     83 82 82 85 
11654     81 80 80 84 
11658     85 83 80 88 
1165c     8A 82 7A 77 | 	byte	$83, $82, $82, $85, $81, $80, $80, $84, $85, $83, $80, $88, $8a, $82, $7a, $77
11660     75 76 78 7D 
11664     7C 77 77 7B 
11668     7B 80 81 80 
1166c     7D 7C 7F 7F | 	byte	$75, $76, $78, $7d, $7c, $77, $77, $7b, $7b, $80, $81, $80, $7d, $7c, $7f, $7f
11670     80 7F 81 8A 
11674     89 88 84 89 
11678     89 8C 90 8A 
1167c     88 87 86 87 | 	byte	$80, $7f, $81, $8a, $89, $88, $84, $89, $89, $8c, $90, $8a, $88, $87, $86, $87
11680     87 87 89 8C 
11684     86 83 81 7E 
11688     7D 7D 77 73 
1168c     73 6F 71 75 | 	byte	$87, $87, $89, $8c, $86, $83, $81, $7e, $7d, $7d, $77, $73, $73, $6f, $71, $75
11690     77 76 78 73 
11694     75 73 74 6D 
11698     6A 70 73 75 
1169c     79 82 83 87 | 	byte	$77, $76, $78, $73, $75, $73, $74, $6d, $6a, $70, $73, $75, $79, $82, $83, $87
116a0     86 88 8A 8A 
116a4     86 83 87 8C 
116a8     8A 8E 93 93 
116ac     95 92 8F 8B | 	byte	$86, $88, $8a, $8a, $86, $83, $87, $8c, $8a, $8e, $93, $93, $95, $92, $8f, $8b
116b0     89 81 83 81 
116b4     80 81 80 7E 
116b8     78 7C 7E 7D 
116bc     76 71 71 75 | 	byte	$89, $81, $83, $81, $80, $81, $80, $7e, $78, $7c, $7e, $7d, $76, $71, $71, $75
116c0     7C 77 7C 7B 
116c4     7A 76 78 7B 
116c8     7A 7E 83 80 
116cc     83 84 87 8C | 	byte	$7c, $77, $7c, $7b, $7a, $76, $78, $7b, $7a, $7e, $83, $80, $83, $84, $87, $8c
116d0     8B 8D 89 88 
116d4     83 85 87 88 
116d8     8B 87 87 87 
116dc     8B 8D 85 84 | 	byte	$8b, $8d, $89, $88, $83, $85, $87, $88, $8b, $87, $87, $87, $8b, $8d, $85, $84
116e0     83 81 81 7D 
116e4     7C 7E 7D 7B 
116e8     78 76 77 72 
116ec     74 7A 7B 7D | 	byte	$83, $81, $81, $7d, $7c, $7e, $7d, $7b, $78, $76, $77, $72, $74, $7a, $7b, $7d
116f0     79 7A 79 7E 
116f4     80 7F 7E 7D 
116f8     7C 86 8B 86 
116fc     85 86 84 89 | 	byte	$79, $7a, $79, $7e, $80, $7f, $7e, $7d, $7c, $86, $8b, $86, $85, $86, $84, $89
11700     87 86 8D 8D 
11704     89 86 8C 8D 
11708     8A 89 86 85 
1170c     84 81 7E 7A | 	byte	$87, $86, $8d, $8d, $89, $86, $8c, $8d, $8a, $89, $86, $85, $84, $81, $7e, $7a
11710     7A 78 7D 7F 
11714     7A 7D 7D 7A 
11718     77 77 77 6F 
1171c     70 71 77 79 | 	byte	$7a, $78, $7d, $7f, $7a, $7d, $7d, $7a, $77, $77, $77, $6f, $70, $71, $77, $79
11720     79 77 79 7B 
11724     79 7F 80 7C 
11728     76 75 80 81 
1172c     7F 85 85 87 | 	byte	$79, $77, $79, $7b, $79, $7f, $80, $7c, $76, $75, $80, $81, $7f, $85, $85, $87
11730     8B 8A 8A 8A 
11734     87 8A 88 86 
11738     8B 8C 87 88 
1173c     89 82 84 83 | 	byte	$8b, $8a, $8a, $8a, $87, $8a, $88, $86, $8b, $8c, $87, $88, $89, $82, $84, $83
11740     80 80 84 81 
11744     7F 7C 81 81 
11748     82 80 7F 80 
1174c     7E 7C 7B 7C | 	byte	$80, $80, $84, $81, $7f, $7c, $81, $81, $82, $80, $7f, $80, $7e, $7c, $7b, $7c
11750     7C 7B 7C 7B 
11754     7A 7B 7C 7B 
11758     77 7C 7C 7B 
1175c     7B 7B 80 80 | 	byte	$7c, $7b, $7c, $7b, $7a, $7b, $7c, $7b, $77, $7c, $7c, $7b, $7b, $7b, $80, $80
11760     81 7D 7E 83 
11764     84 84 86 84 
11768     80 7E 78 79 
1176c     7B 80 7B 7C | 	byte	$81, $7d, $7e, $83, $84, $84, $86, $84, $80, $7e, $78, $79, $7b, $80, $7b, $7c
11770     7D 7E 80 7E 
11774     7C 7B 7B 74 
11778     78 7C 7B 78 
1177c     7C 7C 7F 7D | 	byte	$7d, $7e, $80, $7e, $7c, $7b, $7b, $74, $78, $7c, $7b, $78, $7c, $7c, $7f, $7d
11780     80 88 8D 8C 
11784     8B 8B 90 92 
11788     8F 90 91 90 
1178c     92 91 8F 8C | 	byte	$80, $88, $8d, $8c, $8b, $8b, $90, $92, $8f, $90, $91, $90, $92, $91, $8f, $8c
11790     8D 8D 8D 8C 
11794     89 87 82 80 
11798     7D 79 79 75 
1179c     73 6D 68 6B | 	byte	$8d, $8d, $8d, $8c, $89, $87, $82, $80, $7d, $79, $79, $75, $73, $6d, $68, $6b
117a0     6C 66 64 66 
117a4     68 69 6A 6A 
117a8     6A 71 72 71 
117ac     6F 73 73 73 | 	byte	$6c, $66, $64, $66, $68, $69, $6a, $6a, $6a, $71, $72, $71, $6f, $73, $73, $73
117b0     79 7E 81 80 
117b4     83 88 87 8C 
117b8     92 8E 90 92 
117bc     8E 8F 91 94 | 	byte	$79, $7e, $81, $80, $83, $88, $87, $8c, $92, $8e, $90, $92, $8e, $8f, $91, $94
117c0     98 99 9A 95 
117c4     91 92 95 91 
117c8     8F 8D 8D 8B 
117cc     86 84 82 80 | 	byte	$98, $99, $9a, $95, $91, $92, $95, $91, $8f, $8d, $8d, $8b, $86, $84, $82, $80
117d0     80 7F 7D 7D 
117d4     7C 7A 76 73 
117d8     72 71 6D 69 
117dc     6D 6F 74 71 | 	byte	$80, $7f, $7d, $7d, $7c, $7a, $76, $73, $72, $71, $6d, $69, $6d, $6f, $74, $71
117e0     71 73 77 78 
117e4     77 7B 7D 7C 
117e8     7D 7F 80 84 
117ec     87 8A 87 82 | 	byte	$71, $73, $77, $78, $77, $7b, $7d, $7c, $7d, $7f, $80, $84, $87, $8a, $87, $82
117f0     7E 80 80 81 
117f4     82 83 87 8A 
117f8     8C 8C 8C 8B 
117fc     8C 89 87 83 | 	byte	$7e, $80, $80, $81, $82, $83, $87, $8a, $8c, $8c, $8c, $8b, $8c, $89, $87, $83
11800     83 82 80 83 
11804     84 88 87 7E 
11808     79 7E 7F 7C 
1180c     7B 7B 7C 7B | 	byte	$83, $82, $80, $83, $84, $88, $87, $7e, $79, $7e, $7f, $7c, $7b, $7b, $7c, $7b
11810     7D 7E 7E 7E 
11814     7F 7F 80 80 
11818     80 80 82 81 
1181c     7F 82 85 81 | 	byte	$7d, $7e, $7e, $7e, $7f, $7f, $80, $80, $80, $80, $82, $81, $7f, $82, $85, $81
11820     7F 7C 7E 7D 
11824     7B 78 80 80 
11828     7E 7B 7B 7B 
1182c     7B 7B 7E 7E | 	byte	$7f, $7c, $7e, $7d, $7b, $78, $80, $80, $7e, $7b, $7b, $7b, $7b, $7b, $7e, $7e
11830     80 80 80 81 
11834     81 81 85 85 
11838     7E 7E 7E 7E 
1183c     81 81 82 8A | 	byte	$80, $80, $80, $81, $81, $81, $85, $85, $7e, $7e, $7e, $7e, $81, $81, $82, $8a
11840     85 85 87 89 
11844     8C 8A 88 8A 
11848     89 87 84 80 
1184c     81 80 82 81 | 	byte	$85, $85, $87, $89, $8c, $8a, $88, $8a, $89, $87, $84, $80, $81, $80, $82, $81
11850     7E 7A 7B 79 
11854     77 75 73 75 
11858     77 74 73 72 
1185c     71 73 72 71 | 	byte	$7e, $7a, $7b, $79, $77, $75, $73, $75, $77, $74, $73, $72, $71, $73, $72, $71
11860     76 76 73 75 
11864     79 7C 80 81 
11868     85 87 88 8A 
1186c     8C 8E 8D 90 | 	byte	$76, $76, $73, $75, $79, $7c, $80, $81, $85, $87, $88, $8a, $8c, $8e, $8d, $90
11870     92 94 93 95 
11874     96 9B 9B 97 
11878     95 94 92 92 
1187c     8D 8A 86 83 | 	byte	$92, $94, $93, $95, $96, $9b, $9b, $97, $95, $94, $92, $92, $8d, $8a, $86, $83
11880     80 7E 7B 7A 
11884     75 6F 6C 6B 
11888     69 6A 6A 69 
1188c     69 6D 6A 65 | 	byte	$80, $7e, $7b, $7a, $75, $6f, $6c, $6b, $69, $6a, $6a, $69, $69, $6d, $6a, $65
11890     67 69 6B 6C 
11894     70 73 74 76 
11898     78 7C 82 86 
1189c     86 86 8A 8F | 	byte	$67, $69, $6b, $6c, $70, $73, $74, $76, $78, $7c, $82, $86, $86, $86, $8a, $8f
118a0     92 92 95 99 
118a4     9B A2 A6 A3 
118a8     A1 9F 9C 9B 
118ac     98 96 92 8D | 	byte	$92, $92, $95, $99, $9b, $a2, $a6, $a3, $a1, $9f, $9c, $9b, $98, $96, $92, $8d
118b0     84 80 7F 80 
118b4     7B 78 76 74 
118b8     73 6D 6D 6B 
118bc     69 6A 6C 6A | 	byte	$84, $80, $7f, $80, $7b, $78, $76, $74, $73, $6d, $6d, $6b, $69, $6a, $6c, $6a
118c0     68 6B 6C 6C 
118c4     6B 6D 71 75 
118c8     77 74 74 79 
118cc     7F 80 80 85 | 	byte	$68, $6b, $6c, $6c, $6b, $6d, $71, $75, $77, $74, $74, $79, $7f, $80, $80, $85
118d0     84 84 89 8D 
118d4     90 90 8E 8D 
118d8     8B 8B 8D 8F 
118dc     91 8F 92 90 | 	byte	$84, $84, $89, $8d, $90, $90, $8e, $8d, $8b, $8b, $8d, $8f, $91, $8f, $92, $90
118e0     89 85 83 80 
118e4     7E 7E 7B 78 
118e8     77 76 74 77 
118ec     77 78 79 76 | 	byte	$89, $85, $83, $80, $7e, $7e, $7b, $78, $77, $76, $74, $77, $77, $78, $79, $76
118f0     72 6C 6E 73 
118f4     78 78 79 79 
118f8     78 7B 7F 80 
118fc     7D 7D 7B 7D | 	byte	$72, $6c, $6e, $73, $78, $78, $79, $79, $78, $7b, $7f, $80, $7d, $7d, $7b, $7d
11900     80 81 80 80 
11904     81 83 85 86 
11908     85 7F 7D 80 
1190c     86 86 85 85 | 	byte	$80, $81, $80, $80, $81, $83, $85, $86, $85, $7f, $7d, $80, $86, $86, $85, $85
11910     86 88 86 86 
11914     83 82 82 80 
11918     80 80 7F 7C 
1191c     80 80 80 7C | 	byte	$86, $88, $86, $86, $83, $82, $82, $80, $80, $80, $7f, $7c, $80, $80, $80, $7c
11920     7C 7F 7D 7C 
11924     7E 80 7E 7F 
11928     80 80 81 80 
1192c     80 81 83 81 | 	byte	$7c, $7f, $7d, $7c, $7e, $80, $7e, $7f, $80, $80, $81, $80, $80, $81, $83, $81
11930     7F 80 80 80 
11934     83 85 84 80 
11938     7F 80 81 80 
1193c     7E 80 81 81 | 	byte	$7f, $80, $80, $80, $83, $85, $84, $80, $7f, $80, $81, $80, $7e, $80, $81, $81
11940     81 81 81 81 
11944     7F 81 82 83 
11948     80 7C 7F 80 
1194c     80 81 83 81 | 	byte	$81, $81, $81, $81, $7f, $81, $82, $83, $80, $7c, $7f, $80, $80, $81, $83, $81
11950     7F 7F 80 81 
11954     82 84 82 84 
11958     85 86 88 8A 
1195c     89 87 8B 8A | 	byte	$7f, $7f, $80, $81, $82, $84, $82, $84, $85, $86, $88, $8a, $89, $87, $8b, $8a
11960     88 89 87 85 
11964     87 86 85 84 
11968     82 80 80 80 
1196c     80 7E 7D 7A | 	byte	$88, $89, $87, $85, $87, $86, $85, $84, $82, $80, $80, $80, $80, $7e, $7d, $7a
11970     78 78 79 77 
11974     74 73 74 77 
11978     76 73 75 76 
1197c     77 77 79 7C | 	byte	$78, $78, $79, $77, $74, $73, $74, $77, $76, $73, $75, $76, $77, $77, $79, $7c
11980     7A 7A 7B 80 
11984     81 82 82 83 
11988     84 84 87 89 
1198c     89 89 8A 8D | 	byte	$7a, $7a, $7b, $80, $81, $82, $82, $83, $84, $84, $87, $89, $89, $89, $8a, $8d
11990     8F 8D 8B 8D 
11994     8D 8B 89 89 
11998     88 84 82 85 
1199c     85 82 7F 7B | 	byte	$8f, $8d, $8b, $8d, $8d, $8b, $89, $89, $88, $84, $82, $85, $85, $82, $7f, $7b
119a0     7A 7B 7A 78 
119a4     74 76 75 75 
119a8     77 75 74 75 
119ac     77 79 7B 7C | 	byte	$7a, $7b, $7a, $78, $74, $76, $75, $75, $77, $75, $74, $75, $77, $79, $7b, $7c
119b0     7C 7D 7E 80 
119b4     83 83 82 83 
119b8     82 84 85 86 
119bc     86 86 87 87 | 	byte	$7c, $7d, $7e, $80, $83, $83, $82, $83, $82, $84, $85, $86, $86, $86, $87, $87
119c0     84 85 85 85 
119c4     83 83 82 84 
119c8     83 82 80 80 
119cc     80 7E 7E 7E | 	byte	$84, $85, $85, $85, $83, $83, $82, $84, $83, $82, $80, $80, $80, $7e, $7e, $7e
119d0     7B 7A 7A 7A 
119d4     7A 7B 7C 7B 
119d8     7C 7B 7A 7B 
119dc     7C 7C 7C 7E | 	byte	$7b, $7a, $7a, $7a, $7a, $7b, $7c, $7b, $7c, $7b, $7a, $7b, $7c, $7c, $7c, $7e
119e0     80 82 83 84 
119e4     85 86 85 86 
119e8     87 88 88 87 
119ec     86 87 89 8B | 	byte	$80, $82, $83, $84, $85, $86, $85, $86, $87, $88, $88, $87, $86, $87, $89, $8b
119f0     8A 89 85 83 
119f4     82 81 83 81 
119f8     7F 7E 7F 80 
119fc     80 7F 7D 7B | 	byte	$8a, $89, $85, $83, $82, $81, $83, $81, $7f, $7e, $7f, $80, $80, $7f, $7d, $7b
11a00     79 7A 7A 79 
11a04     78 79 7A 7D 
11a08     7E 7C 7A 7C 
11a0c     7D 7D 7D 7E | 	byte	$79, $7a, $7a, $79, $78, $79, $7a, $7d, $7e, $7c, $7a, $7c, $7d, $7d, $7d, $7e
11a10     7D 7D 7D 7E 
11a14     7F 7F 80 82 
11a18     83 84 83 81 
11a1c     82 85 85 85 | 	byte	$7d, $7d, $7d, $7e, $7f, $7f, $80, $82, $83, $84, $83, $81, $82, $85, $85, $85
11a20     86 85 82 83 
11a24     84 83 81 80 
11a28     80 81 82 82 
11a2c     81 81 82 80 | 	byte	$86, $85, $82, $83, $84, $83, $81, $80, $80, $81, $82, $82, $81, $81, $82, $80
11a30     82 84 83 81 
11a34     81 82 81 80 
11a38     80 80 80 81 
11a3c     81 80 82 82 | 	byte	$82, $84, $83, $81, $81, $82, $81, $80, $80, $80, $80, $81, $81, $80, $82, $82
11a40     82 82 83 81 
11a44     80 80 80 80 
11a48     80 7F 7F 80 
11a4c     80 7F 7E 7D | 	byte	$82, $82, $83, $81, $80, $80, $80, $80, $80, $7f, $7f, $80, $80, $7f, $7e, $7d
11a50     7D 7F 7F 7C 
11a54     7B 7B 7B 7D 
11a58     7C 7C 7C 7C 
11a5c     7A 7A 7B 7D | 	byte	$7d, $7f, $7f, $7c, $7b, $7b, $7b, $7d, $7c, $7c, $7c, $7c, $7a, $7a, $7b, $7d
11a60     7C 7D 7C 7E 
11a64     80 80 7F 7E 
11a68     7F 80 81 80 
11a6c     80 82 82 83 | 	byte	$7c, $7d, $7c, $7e, $80, $80, $7f, $7e, $7f, $80, $81, $80, $80, $82, $82, $83
11a70     83 84 85 86 
11a74     86 88 87 86 
11a78     86 86 88 88 
11a7c     86 88 87 85 | 	byte	$83, $84, $85, $86, $86, $88, $87, $86, $86, $86, $88, $88, $86, $88, $87, $85
11a80     86 85 84 82 
11a84     81 81 81 80 
11a88     7F 7D 7E 7E 
11a8c     7C 7C 79 77 | 	byte	$86, $85, $84, $82, $81, $81, $81, $80, $7f, $7d, $7e, $7e, $7c, $7c, $79, $77
11a90     77 77 77 77 
11a94     76 75 77 77 
11a98     77 76 76 77 
11a9c     78 79 7B 7D | 	byte	$77, $77, $77, $77, $76, $75, $77, $77, $77, $76, $76, $77, $78, $79, $7b, $7d
11aa0     7D 7D 80 82 
11aa4     82 81 80 81 
11aa8     82 83 84 85 
11aac     85 85 85 86 | 	byte	$7d, $7d, $80, $82, $82, $81, $80, $81, $82, $83, $84, $85, $85, $85, $85, $86
11ab0     86 86 83 82 
11ab4     83 83 83 84 
11ab8     82 82 84 83 
11abc     82 82 81 80 | 	byte	$86, $86, $83, $82, $83, $83, $83, $84, $82, $82, $84, $83, $82, $82, $81, $80
11ac0     7F 7E 7E 7E 
11ac4     7E 7E 7E 7E 
11ac8     7F 80 80 7F 
11acc     7E 7E 7F 81 | 	byte	$7f, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7f, $80, $80, $7f, $7e, $7e, $7f, $81
11ad0     81 80 81 81 
11ad4     80 80 80 80 
11ad8     81 80 80 80 
11adc     80 80 7E 7D | 	byte	$81, $80, $81, $81, $80, $80, $80, $80, $81, $80, $80, $80, $80, $80, $7e, $7d
11ae0     7E 7E 7D 7D 
11ae4     7C 7A 7A 7C 
11ae8     7D 7D 7C 7D 
11aec     7D 7B 7A 7C | 	byte	$7e, $7e, $7d, $7d, $7c, $7a, $7a, $7c, $7d, $7d, $7c, $7d, $7d, $7b, $7a, $7c
11af0     7D 7E 7E 7F 
11af4     80 80 80 80 
11af8     80 83 84 84 
11afc     84 84 85 87 | 	byte	$7d, $7e, $7e, $7f, $80, $80, $80, $80, $80, $83, $84, $84, $84, $84, $85, $87
11b00     87 88 88 87 
11b04     88 87 85 85 
11b08     84 83 82 81 
11b0c     80 81 80 7F | 	byte	$87, $88, $88, $87, $88, $87, $85, $85, $84, $83, $82, $81, $80, $81, $80, $7f
11b10     7E 7F 7E 7F 
11b14     7D 7B 7B 7B 
11b18     7B 7B 7B 7B 
11b1c     7A 7B 7B 7C | 	byte	$7e, $7f, $7e, $7f, $7d, $7b, $7b, $7b, $7b, $7b, $7b, $7b, $7a, $7b, $7b, $7c
11b20     7D 7C 7C 7D 
11b24     7E 7E 7F 7F 
11b28     80 80 82 83 
11b2c     81 81 81 82 | 	byte	$7d, $7c, $7c, $7d, $7e, $7e, $7f, $7f, $80, $80, $82, $83, $81, $81, $81, $82
11b30     83 83 84 83 
11b34     84 86 86 84 
11b38     84 83 82 81 
11b3c     80 80 80 80 | 	byte	$83, $83, $84, $83, $84, $86, $86, $84, $84, $83, $82, $81, $80, $80, $80, $80
11b40     7E 7D 7E 7D 
11b44     7C 7C 7C 7D 
11b48     7D 7C 7C 7C 
11b4c     7D 7E 7E 80 | 	byte	$7e, $7d, $7e, $7d, $7c, $7c, $7c, $7d, $7d, $7c, $7c, $7c, $7d, $7e, $7e, $80
11b50     80 7E 7F 81 
11b54     81 81 81 82 
11b58     84 84 85 84 
11b5c     85 86 87 86 | 	byte	$80, $7e, $7f, $81, $81, $81, $81, $82, $84, $84, $85, $84, $85, $86, $87, $86
11b60     87 86 85 85 
11b64     85 85 83 82 
11b68     82 81 81 80 
11b6c     7F 7E 7E 7D | 	byte	$87, $86, $85, $85, $85, $85, $83, $82, $82, $81, $81, $80, $7f, $7e, $7e, $7d
11b70     7C 7B 7A 7A 
11b74     79 79 79 79 
11b78     79 79 79 7A 
11b7c     7B 7B 7C 7C | 	byte	$7c, $7b, $7a, $7a, $79, $79, $79, $79, $79, $79, $79, $7a, $7b, $7b, $7c, $7c
11b80     7D 7C 7C 7D 
11b84     7F 80 81 84 
11b88     84 82 83 83 
11b8c     85 85 84 85 | 	byte	$7d, $7c, $7c, $7d, $7f, $80, $81, $84, $84, $82, $83, $83, $85, $85, $84, $85
11b90     85 87 87 86 
11b94     86 85 84 84 
11b98     84 83 82 81 
11b9c     80 80 81 81 | 	byte	$85, $87, $87, $86, $86, $85, $84, $84, $84, $83, $82, $81, $80, $80, $81, $81
11ba0     80 80 7E 7D 
11ba4     7E 7C 7B 7B 
11ba8     7B 7C 7D 7E 
11bac     7E 7F 80 80 | 	byte	$80, $80, $7e, $7d, $7e, $7c, $7b, $7b, $7b, $7c, $7d, $7e, $7e, $7f, $80, $80
11bb0     80 80 80 80 
11bb4     80 80 80 80 
11bb8     80          | 	byte	$80[9]
11bb9     81 81 80 81 
11bbd     82 81 81 81 
11bc1     81 81 81 81 
11bc5     81 82 81 80 | 	byte	$81, $81, $80, $81, $82, $81, $81, $81, $81, $81, $81, $81, $81, $82, $81, $80
11bc9     80 80 80 80 
11bcd     80 80 80 80 
11bd1     80 80 80 80 | 	byte	$80[12]
11bd5     7F 7F 7F 7F 
11bd9     80 7F 7F 80 
11bdd     80 80 80 80 
11be1     80 81 82 83 | 	byte	$7f, $7f, $7f, $7f, $80, $7f, $7f, $80, $80, $80, $80, $80, $80, $81, $82, $83
11be5     82 82 82 82 
11be9     82          | 	byte	$82[5]
11bea     83 81 80 80 
11bee     80 80 80 80 
11bf2     80 80 7F 7F 
11bf6     7F 7F 7F 7F | 	byte	$83, $81, $80, $80, $80, $80, $80, $80, $80, $80, $7f, $7f, $7f, $7f, $7f, $7f
11bfa     80 7F 7F 7F 
11bfe     7E 7E 7F 7F 
11c02     80 7F 7F 80 
11c06     7F 7F 7F 7F | 	byte	$80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $7f, $7f, $80, $7f, $7f, $7f, $7f
11c0a     80 80 80 80 
11c0e     80 80 80    | 	byte	$80[7]
11c11     81 80 81 81 
11c15     81 81 81 81 
11c19     81 81 81 81 
11c1d     81 81 81 81 | 	byte	$81, $80, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81
11c21     80 81 81 81 
11c25     80 80 80 80 
11c29     80 80 80 7F 
11c2d     7F 7F 7F 7F | 	byte	$80, $81, $81, $81, $80, $80, $80, $80, $80, $80, $80, $7f, $7f, $7f, $7f, $7f
11c31     7F 7E 7F 7F 
11c35     7F 7F 7E 7E 
11c39     7F 7F 7F 80 
11c3d     7F 80 80 80 | 	byte	$7f, $7e, $7f, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $7f, $80, $7f, $80, $80, $80
11c41     80 80 80 81 
11c45     81 81 82 82 
11c49     83 82 82 81 
11c4d     82 82 82 82 | 	byte	$80, $80, $80, $81, $81, $81, $82, $82, $83, $82, $82, $81, $82, $82, $82, $82
11c51     81 82 81 80 
11c55     80 80 80 80 
11c59     80 80 80 7F 
11c5d     80 7F B4 C8 | 	byte	$81, $82, $81, $80, $80, $80, $80, $80, $80, $80, $80, $7f, $80, $7f, $b4, $c8
11c61     D4 C9 DC F2 
11c65     FE F0 FC EB 
11c69     E0 C6 EE A5 
11c6d     BF 9C 94 B8 | 	byte	$d4, $c9, $dc, $f2, $fe, $f0, $fc, $eb, $e0, $c6, $ee, $a5, $bf, $9c, $94, $b8
11c71     7F A9 27 10 
11c75     7B 4D 3D 20 
11c79     21 31 01 00 
11c7d     12 09 22 02 | 	byte	$7f, $a9, $27, $10, $7b, $4d, $3d, $20, $21, $31, $01, $00, $12, $09, $22, $02
11c81     00 03 01 00 
11c85     01 01 00 2A 
11c89     12 2F 01 08 
11c8d     29 3C 84 3B | 	byte	$00, $03, $01, $00, $01, $01, $00, $2a, $12, $2f, $01, $08, $29, $3c, $84, $3b
11c91     B0 3C 2E 2D 
11c95     56 CB 56 DA 
11c99     EF C6 FF FD 
11c9d     FF FF FF EE | 	byte	$b0, $3c, $2e, $2d, $56, $cb, $56, $da, $ef, $c6, $ff, $fd, $ff, $ff, $ff, $ee
11ca1     DB CC D2 DF 
11ca5     D6 D8 95 56 
11ca9     C6 40 C0 B5 
11cad     FA CF A2 EB | 	byte	$db, $cc, $d2, $df, $d6, $d8, $95, $56, $c6, $40, $c0, $b5, $fa, $cf, $a2, $eb
11cb1     F2 D7 D2 D0 
11cb5     C1 BE B0 AE 
11cb9     A2 A0 97 95 
11cbd     9C 46 98 A4 | 	byte	$f2, $d7, $d2, $d0, $c1, $be, $b0, $ae, $a2, $a0, $97, $95, $9c, $46, $98, $a4
11cc1     9D 56 76 06 
11cc5     0C 01 00 1A 
11cc9     53 00 00 00 
11ccd     00 02 03 17 | 	byte	$9d, $56, $76, $06, $0c, $01, $00, $1a, $53, $00, $00, $00, $00, $02, $03, $17
11cd1     36 02 75 6F 
11cd5     04 09 30 34 
11cd9     DD D6 FE FF 
11cdd     D1 5D CD DA | 	byte	$36, $02, $75, $6f, $04, $09, $30, $34, $dd, $d6, $fe, $ff, $d1, $5d, $cd, $da
11ce1     C0 E1 A8 CD 
11ce5     D0 CC C5 64 
11ce9     2C 8F B6 7B 
11ced     6F 43 17 36 | 	byte	$c0, $e1, $a8, $cd, $d0, $cc, $c5, $64, $2c, $8f, $b6, $7b, $6f, $43, $17, $36
11cf1     00 06 4E 38 
11cf5     0C 15 42 2F 
11cf9     37 3A 3A 37 
11cfd     3F 4C 4B 50 | 	byte	$00, $06, $4e, $38, $0c, $15, $42, $2f, $37, $3a, $3a, $37, $3f, $4c, $4b, $50
11d01     80 8E 5C 8E 
11d05     63 64 93 96 
11d09     93 AB 82 65 
11d0d     8E 9E B6 FF | 	byte	$80, $8e, $5c, $8e, $63, $64, $93, $96, $93, $ab, $82, $65, $8e, $9e, $b6, $ff
11d11     CD 8F 83 80 
11d15     96 E5 F7 8D 
11d19     B3 70 56 86 
11d1d     B6 C3 BD 8E | 	byte	$cd, $8f, $83, $80, $96, $e5, $f7, $8d, $b3, $70, $56, $86, $b6, $c3, $bd, $8e
11d21     5E 8A C6 98 
11d25     F1 F1 C0 B0 
11d29     B3 B1 CF DC 
11d2d     9A AA C2 85 | 	byte	$5e, $8a, $c6, $98, $f1, $f1, $c0, $b0, $b3, $b1, $cf, $dc, $9a, $aa, $c2, $85
11d31     8F A6 AE B1 
11d35     AA A4 B8 AF 
11d39     A7 AD A0 9D 
11d3d     87 68 6E 7C | 	byte	$8f, $a6, $ae, $b1, $aa, $a4, $b8, $af, $a7, $ad, $a0, $9d, $87, $68, $6e, $7c
11d41     7D A0 95 22 
11d45     34 5D 6F 80 
11d49     7A 59 2A 0D 
11d4d     2D 22 45 21 | 	byte	$7d, $a0, $95, $22, $34, $5d, $6f, $80, $7a, $59, $2a, $0d, $2d, $22, $45, $21
11d51     2C 5C 92 99 
11d55     7C 57 33 36 
11d59     B8 D7 B6 99 
11d5d     78 6D 91 BD | 	byte	$2c, $5c, $92, $99, $7c, $57, $33, $36, $b8, $d7, $b6, $99, $78, $6d, $91, $bd
11d61     C7 92 A1 B7 
11d65     B9 A0 6F 4F 
11d69     48 4B 61 96 
11d6d     B1 50 1B 46 | 	byte	$c7, $92, $a1, $b7, $b9, $a0, $6f, $4f, $48, $4b, $61, $96, $b1, $50, $1b, $46
11d71     5F 5F 64 59 
11d75     49 3E 31 3A 
11d79     44 48 47 58 
11d7d     54 4F 59 6D | 	byte	$5f, $5f, $64, $59, $49, $3e, $31, $3a, $44, $48, $47, $58, $54, $4f, $59, $6d
11d81     67 57 62 81 
11d85     66 5E 67 7A 
11d89     84 7A 6E 79 
11d8d     9E 89 85 BE | 	byte	$67, $57, $62, $81, $66, $5e, $67, $7a, $84, $7a, $6e, $79, $9e, $89, $85, $be
11d91     CF A3 81 85 
11d95     A7 BA 96 84 
11d99     A7 95 6D 73 
11d9d     99 B2 A0 83 | 	byte	$cf, $a3, $81, $85, $a7, $ba, $96, $84, $a7, $95, $6d, $73, $99, $b2, $a0, $83
11da1     8F BC AA 89 
11da5     B4 D5 C7 B4 
11da9     B2 B7 BA 9E 
11dad     87 B7 D6 C1 | 	byte	$8f, $bc, $aa, $89, $b4, $d5, $c7, $b4, $b2, $b7, $ba, $9e, $87, $b7, $d6, $c1
11db1     A1 9D AC AE 
11db5     AE C1 B7 B5 
11db9     AB A2 B1 A6 
11dbd     89 70 75 91 | 	byte	$a1, $9d, $ac, $ae, $ae, $c1, $b7, $b5, $ab, $a2, $b1, $a6, $89, $70, $75, $91
11dc1     A4 A4 83 20 
11dc5     0B 35 68 7D 
11dc9     75 4C 15 24 
11dcd     33 22 4E 3C | 	byte	$a4, $a4, $83, $20, $0b, $35, $68, $7d, $75, $4c, $15, $24, $33, $22, $4e, $3c
11dd1     29 5A 8D 92 
11dd5     67 36 2F 4E 
11dd9     BD DE D1 AE 
11ddd     85 7C A1 C6 | 	byte	$29, $5a, $8d, $92, $67, $36, $2f, $4e, $bd, $de, $d1, $ae, $85, $7c, $a1, $c6
11de1     A5 83 AC B9 
11de5     B1 AF 7B 55 
11de9     4D 5E 8A AC 
11ded     99 41 15 23 | 	byte	$a5, $83, $ac, $b9, $b1, $af, $7b, $55, $4d, $5e, $8a, $ac, $99, $41, $15, $23
11df1     3C 50 5A 4C 
11df5     34 2C 33 36 
11df9     45 51 45 48 
11dfd     4E 4E 53 56 | 	byte	$3c, $50, $5a, $4c, $34, $2c, $33, $36, $45, $51, $45, $48, $4e, $4e, $53, $56
11e01     57 5B 66 79 
11e05     71 69 6D 79 
11e09     82 84 83 8B 
11e0d     8D 7F 7C 93 | 	byte	$57, $5b, $66, $79, $71, $69, $6d, $79, $82, $84, $83, $8b, $8d, $7f, $7c, $93
11e11     A1 92 81 80 
11e15     88 8C 87 91 
11e19     A5 A1 8E 8A 
11e1d     9E AE AC A6 | 	byte	$a1, $92, $81, $80, $88, $8c, $87, $91, $a5, $a1, $8e, $8a, $9e, $ae, $ac, $a6
11e21     B4 B9 9D 89 
11e25     9B B1 B6 B5 
11e29     B3 A7 97 8A 
11e2d     97 C3 E0 DB | 	byte	$b4, $b9, $9d, $89, $9b, $b1, $b6, $b5, $b3, $a7, $97, $8a, $97, $c3, $e0, $db
11e31     C1 AF B1 B9 
11e35     C8 CE BE C2 
11e39     B3 A5 B1 B2 
11e3d     95 7C 8A A6 | 	byte	$c1, $af, $b1, $b9, $c8, $ce, $be, $c2, $b3, $a5, $b1, $b2, $95, $7c, $8a, $a6
11e41     A8 A4 7F 28 
11e45     0C 26 5A 79 
11e49     6E 38 15 33 
11e4d     30 25 4A 45 | 	byte	$a8, $a4, $7f, $28, $0c, $26, $5a, $79, $6e, $38, $15, $33, $30, $25, $4a, $45
11e51     2E 5B 8E 88 
11e55     56 36 38 62 
11e59     C3 DF D7 BD 
11e5d     93 8A B3 C2 | 	byte	$2e, $5b, $8e, $88, $56, $36, $38, $62, $c3, $df, $d7, $bd, $93, $8a, $b3, $c2
11e61     97 8D B1 BA 
11e65     B1 B0 82 5A 
11e69     57 73 99 A6 
11e6d     87 3D 1A 1E | 	byte	$97, $8d, $b1, $ba, $b1, $b0, $82, $5a, $57, $73, $99, $a6, $87, $3d, $1a, $1e
11e71     33 49 53 41 
11e75     2C 2B 30 36 
11e79     46 50 48 45 
11e7d     4A 4D 50 55 | 	byte	$33, $49, $53, $41, $2c, $2b, $30, $36, $46, $50, $48, $45, $4a, $4d, $50, $55
11e81     5B 5C 62 6D 
11e85     6D 69 6C 74 
11e89     7E 86 89 87 
11e8d     7F 78 79 84 | 	byte	$5b, $5c, $62, $6d, $6d, $69, $6c, $74, $7e, $86, $89, $87, $7f, $78, $79, $84
11e91     8D 87 7F 7B 
11e95     7B 7E 84 91 
11e99     9C 9E 94 8F 
11e9d     9A A7 AE B2 | 	byte	$8d, $87, $7f, $7b, $7b, $7e, $84, $91, $9c, $9e, $94, $8f, $9a, $a7, $ae, $b2
11ea1     BA B0 96 8A 
11ea5     92 A3 AE B5 
11ea9     AF 9B 89 8A 
11ead     A0 C9 E4 E4 | 	byte	$ba, $b0, $96, $8a, $92, $a3, $ae, $b5, $af, $9b, $89, $8a, $a0, $c9, $e4, $e4
11eb1     CC B6 B4 C3 
11eb5     D5 D3 C9 C9 
11eb9     B8 AB B3 B8 
11ebd     9B 86 98 AD | 	byte	$cc, $b6, $b4, $c3, $d5, $d3, $c9, $c9, $b8, $ab, $b3, $b8, $9b, $86, $98, $ad
11ec1     AB A5 7D 30 
11ec5     13 28 58 76 
11ec9     64 2D 1A 35 
11ecd     2F 29 46 44 | 	byte	$ab, $a5, $7d, $30, $13, $28, $58, $76, $64, $2d, $1a, $35, $2f, $29, $46, $44
11ed1     35 5F 8C 81 
11ed5     52 3B 41 70 
11ed9     C5 DE D7 C0 
11edd     9C 9A BD BC | 	byte	$35, $5f, $8c, $81, $52, $3b, $41, $70, $c5, $de, $d7, $c0, $9c, $9a, $bd, $bc
11ee1     97 95 B2 B8 
11ee5     B3 AC 82 5E 
11ee9     60 7D 9A 9E 
11eed     7C 3D 1E 21 | 	byte	$97, $95, $b2, $b8, $b3, $ac, $82, $5e, $60, $7d, $9a, $9e, $7c, $3d, $1e, $21
11ef1     33 49 4E 3A 
11ef5     28 2A 2F 37 
11ef9     47 4F 49 44 
11efd     48 4C 52 59 | 	byte	$33, $49, $4e, $3a, $28, $2a, $2f, $37, $47, $4f, $49, $44, $48, $4c, $52, $59
11f01     5C 5B 5D 65 
11f05     66 65 68 6E 
11f09     79 83 85 7F 
11f0d     77 74 76 7D | 	byte	$5c, $5b, $5d, $65, $66, $65, $68, $6e, $79, $83, $85, $7f, $77, $74, $76, $7d
11f11     83 82 7C 79 
11f15     79 7B 82 8D 
11f19     96 97 92 8E 
11f1d     95 A2 AD B5 | 	byte	$83, $82, $7c, $79, $79, $7b, $82, $8d, $96, $97, $92, $8e, $95, $a2, $ad, $b5
11f21     B8 A9 93 8A 
11f25     90 9E AC B5 
11f29     AC 94 87 8C 
11f2d     A6 CB E6 E5 | 	byte	$b8, $a9, $93, $8a, $90, $9e, $ac, $b5, $ac, $94, $87, $8c, $a6, $cb, $e6, $e5
11f31     CF B9 B9 CB 
11f35     DC DA D1 CF 
11f39     BC AF B8 BC 
11f3d     A1 8F A1 B0 | 	byte	$cf, $b9, $b9, $cb, $dc, $da, $d1, $cf, $bc, $af, $b8, $bc, $a1, $8f, $a1, $b0
11f41     AD A6 79 33 
11f45     1A 2E 5A 71 
11f49     5B 29 21 38 
11f4d     31 2D 44 41 | 	byte	$ad, $a6, $79, $33, $1a, $2e, $5a, $71, $5b, $29, $21, $38, $31, $2d, $44, $41
11f51     3A 66 8B 7D 
11f55     53 41 48 7E 
11f59     C8 DD D6 BF 
11f5d     A2 A5 C2 B7 | 	byte	$3a, $66, $8b, $7d, $53, $41, $48, $7e, $c8, $dd, $d6, $bf, $a2, $a5, $c2, $b7
11f61     99 9B B2 B7 
11f65     B1 A7 80 64 
11f69     6A 84 99 99 
11f6d     74 3E 24 28 | 	byte	$99, $9b, $b2, $b7, $b1, $a7, $80, $64, $6a, $84, $99, $99, $74, $3e, $24, $28
11f71     39 4A 4B 35 
11f75     28 29 2F 3A 
11f79     49 4F 48 43 
11f7d     46 4D 55 5C | 	byte	$39, $4a, $4b, $35, $28, $29, $2f, $3a, $49, $4f, $48, $43, $46, $4d, $55, $5c
11f81     5E 59 59 5F 
11f85     60 62 65 6A 
11f89     73 7C 7E 77 
11f8d     72 70 73 78 | 	byte	$5e, $59, $59, $5f, $60, $62, $65, $6a, $73, $7c, $7e, $77, $72, $70, $73, $78
11f91     7C 7D 7A 78 
11f95     79 7B 7F 88 
11f99     8E 91 8C 8A 
11f9d     90 9C A9 B2 | 	byte	$7c, $7d, $7a, $78, $79, $7b, $7f, $88, $8e, $91, $8c, $8a, $90, $9c, $a9, $b2
11fa1     B2 A3 90 89 
11fa5     8F 9C AB B3 
11fa9     A8 92 87 8E 
11fad     A8 CC E5 E4 | 	byte	$b2, $a3, $90, $89, $8f, $9c, $ab, $b3, $a8, $92, $87, $8e, $a8, $cc, $e5, $e4
11fb1     CF BB BC D0 
11fb5     E2 DF D7 D2 
11fb9     C0 B5 BD BE 
11fbd     A4 98 A7 B2 | 	byte	$cf, $bb, $bc, $d0, $e2, $df, $d7, $d2, $c0, $b5, $bd, $be, $a4, $98, $a7, $b2
11fc1     AF A5 78 38 
11fc5     23 35 5B 6D 
11fc9     54 28 27 3A 
11fcd     33 31 40 3F | 	byte	$af, $a5, $78, $38, $23, $35, $5b, $6d, $54, $28, $27, $3a, $33, $31, $40, $3f
11fd1     41 6C 8B 7A 
11fd5     56 46 53 89 
11fd9     C9 DA D3 BE 
11fdd     A7 AC C2 B4 | 	byte	$41, $6c, $8b, $7a, $56, $46, $53, $89, $c9, $da, $d3, $be, $a7, $ac, $c2, $b4
11fe1     9B A0 B1 B4 
11fe5     B0 A2 7E 69 
11fe9     71 88 96 91 
11fed     6E 40 2C 2F | 	byte	$9b, $a0, $b1, $b4, $b0, $a2, $7e, $69, $71, $88, $96, $91, $6e, $40, $2c, $2f
11ff1     3E 4C 48 33 
11ff5     27 29 31 3E 
11ff9     4B 4F 47 43 
11ffd     46 4E 59 5F | 	byte	$3e, $4c, $48, $33, $27, $29, $31, $3e, $4b, $4f, $47, $43, $46, $4e, $59, $5f
12001     5E 57 56 58 
12005     5B 5F 61 64 
12009     6C 74 75 71 
1200d     6E 6F 71 75 | 	byte	$5e, $57, $56, $58, $5b, $5f, $61, $64, $6c, $74, $75, $71, $6e, $6f, $71, $75
12011     79 7A 78 79 
12015     7C 7C 7D 83 
12019     88 8A 87 86 
1201d     8A 96 A4 AD | 	byte	$79, $7a, $78, $79, $7c, $7c, $7d, $83, $88, $8a, $87, $86, $8a, $96, $a4, $ad
12021     AC 9D 8E 88 
12025     8F 9B AA B0 
12029     A4 90 87 90 
1202d     A9 CC E3 E2 | 	byte	$ac, $9d, $8e, $88, $8f, $9b, $aa, $b0, $a4, $90, $87, $90, $a9, $cc, $e3, $e2
12031     CC BA BF D5 
12035     E5 E2 DB D5 
12039     C3 BA C2 BF 
1203d     A7 9D AC B4 | 	byte	$cc, $ba, $bf, $d5, $e5, $e2, $db, $d5, $c3, $ba, $c2, $bf, $a7, $9d, $ac, $b4
12041     B1 A5 75 3D 
12045     2B 3C 5C 69 
12049     4D 28 2B 3B 
1204d     34 33 3F 3E | 	byte	$b1, $a5, $75, $3d, $2b, $3c, $5c, $69, $4d, $28, $2b, $3b, $34, $33, $3f, $3e
12051     48 72 8A 78 
12055     58 4D 5C 92 
12059     C9 D7 D0 BC 
1205d     AA B3 C2 B2 | 	byte	$48, $72, $8a, $78, $58, $4d, $5c, $92, $c9, $d7, $d0, $bc, $aa, $b3, $c2, $b2
12061     9F A3 B0 B3 
12065     AE 9D 7E 6D 
12069     77 8A 95 8D 
1206d     6C 44 34 38 | 	byte	$9f, $a3, $b0, $b3, $ae, $9d, $7e, $6d, $77, $8a, $95, $8d, $6c, $44, $34, $38
12071     46 4F 48 33 
12075     28 2A 33 42 
12079     4D 4E 46 43 
1207d     47 52 5E 64 | 	byte	$46, $4f, $48, $33, $28, $2a, $33, $42, $4d, $4e, $46, $43, $47, $52, $5e, $64
12081     5F 56 53 55 
12085     59 5E 60 61 
12089     66 6C 6D 6B 
1208d     6C 6E 6F 71 | 	byte	$5f, $56, $53, $55, $59, $5e, $60, $61, $66, $6c, $6d, $6b, $6c, $6e, $6f, $71
12091     74 76 76 7A 
12095     7E 7D 7C 7E 
12099     82 84 82 82 
1209d     86 90 9C A5 | 	byte	$74, $76, $76, $7a, $7e, $7d, $7c, $7e, $82, $84, $82, $82, $86, $90, $9c, $a5
120a1     A4 98 8B 88 
120a5     8E 99 A7 AC 
120a9     9F 8E 87 91 
120ad     AA CB E1 DD | 	byte	$a4, $98, $8b, $88, $8e, $99, $a7, $ac, $9f, $8e, $87, $91, $aa, $cb, $e1, $dd
120b1     C9 BA C2 D9 
120b5     E8 E5 DE D6 
120b9     C6 BF C5 C1 
120bd     AA A1 AE B5 | 	byte	$c9, $ba, $c2, $d9, $e8, $e5, $de, $d6, $c6, $bf, $c5, $c1, $aa, $a1, $ae, $b5
120c1     B1 A1 73 3F 
120c5     31 42 5C 63 
120c9     47 2A 30 3D 
120cd     38 36 3E 3F | 	byte	$b1, $a1, $73, $3f, $31, $42, $5c, $63, $47, $2a, $30, $3d, $38, $36, $3e, $3f
120d1     4F 76 89 77 
120d5     5C 53 66 9A 
120d9     C9 D4 CC BA 
120dd     AE B7 C2 B1 | 	byte	$4f, $76, $89, $77, $5c, $53, $66, $9a, $c9, $d4, $cc, $ba, $ae, $b7, $c2, $b1
120e1     A2 A6 B0 B0 
120e5     AB 9A 7E 73 
120e9     7D 8D 93 8A 
120ed     6A 49 3C 43 | 	byte	$a2, $a6, $b0, $b0, $ab, $9a, $7e, $73, $7d, $8d, $93, $8a, $6a, $49, $3c, $43
120f1     4D 53 47 33 
120f5     29 2C 37 46 
120f9     50 4E 46 43 
120fd     49 56 63 67 | 	byte	$4d, $53, $47, $33, $29, $2c, $37, $46, $50, $4e, $46, $43, $49, $56, $63, $67
12101     60 55 51 53 
12105     59 5E 60 5D 
12109     5F 63 65 66 
1210d     6A 6D 6E 6E | 	byte	$60, $55, $51, $53, $59, $5e, $60, $5d, $5f, $63, $65, $66, $6a, $6d, $6e, $6e
12111     71 72 75 7C 
12115     80 7F 7A 7A 
12119     7D 7E 7E 7F 
1211d     81 88 95 9D | 	byte	$71, $72, $75, $7c, $80, $7f, $7a, $7a, $7d, $7e, $7e, $7f, $81, $88, $95, $9d
12121     9D 92 88 86 
12125     8C 98 A4 A8 
12129     9C 8D 88 92 
1212d     AA CA DB D8 | 	byte	$9d, $92, $88, $86, $8c, $98, $a4, $a8, $9c, $8d, $88, $92, $aa, $ca, $db, $d8
12131     C6 BB C4 DB 
12135     E9 E6 DF D6 
12139     C8 C2 C7 C0 
1213d     AB A4 AF B5 | 	byte	$c6, $bb, $c4, $db, $e9, $e6, $df, $d6, $c8, $c2, $c7, $c0, $ab, $a4, $af, $b5
12141     B1 9E 70 44 
12145     37 46 5C 5E 
12149     42 2C 34 3F 
1214d     3B 3A 3F 42 | 	byte	$b1, $9e, $70, $44, $37, $46, $5c, $5e, $42, $2c, $34, $3f, $3b, $3a, $3f, $42
12151     56 7B 88 77 
12155     60 5A 70 A0 
12159     C7 D0 C8 B9 
1215d     B1 BA C1 B0 | 	byte	$56, $7b, $88, $77, $60, $5a, $70, $a0, $c7, $d0, $c8, $b9, $b1, $ba, $c1, $b0
12161     A4 A8 AF AF 
12165     A8 97 80 78 
12169     82 8F 93 87 
1216d     6B 4E 45 4B | 	byte	$a4, $a8, $af, $af, $a8, $97, $80, $78, $82, $8f, $93, $87, $6b, $4e, $45, $4b
12171     55 56 48 34 
12175     2C 2F 3C 4A 
12179     52 4F 47 45 
1217d     4C 5A 67 6B | 	byte	$55, $56, $48, $34, $2c, $2f, $3c, $4a, $52, $4f, $47, $45, $4c, $5a, $67, $6b
12181     62 56 51 54 
12185     5B 61 60 5B 
12189     59 5C 5F 63 
1218d     69 6D 6D 6B | 	byte	$62, $56, $51, $54, $5b, $61, $60, $5b, $59, $5c, $5f, $63, $69, $6d, $6d, $6b
12191     6C 6F 74 7E 
12195     82 7E 78 76 
12199     77 78 7A 7B 
1219d     7C 82 8C 95 | 	byte	$6c, $6f, $74, $7e, $82, $7e, $78, $76, $77, $78, $7a, $7b, $7c, $82, $8c, $95
121a1     94 8B 84 83 
121a5     88 94 9F A1 
121a9     96 8A 87 91 
121ad     A9 C6 D7 D3 | 	byte	$94, $8b, $84, $83, $88, $94, $9f, $a1, $96, $8a, $87, $91, $a9, $c6, $d7, $d3
121b1     C3 BB C6 DD 
121b5     EB E7 E0 D7 
121b9     CA C6 CA BE 
121bd     AB A7 B0 B5 | 	byte	$c3, $bb, $c6, $dd, $eb, $e7, $e0, $d7, $ca, $c6, $ca, $be, $ab, $a7, $b0, $b5
121c1     AF 9B 6F 47 
121c5     3D 4A 5C 5A 
121c9     3F 2F 38 41 
121cd     3D 3C 41 47 | 	byte	$af, $9b, $6f, $47, $3d, $4a, $5c, $5a, $3f, $2f, $38, $41, $3d, $3c, $41, $47
121d1     5E 7D 87 77 
121d5     64 62 78 A4 
121d9     C5 CC C4 B7 
121dd     B2 BC BF B0 | 	byte	$5e, $7d, $87, $77, $64, $62, $78, $a4, $c5, $cc, $c4, $b7, $b2, $bc, $bf, $b0
121e1     A7 AA AE AD 
121e5     A6 95 82 7D 
121e9     88 91 92 85 
121ed     6B 55 4F 55 | 	byte	$a7, $aa, $ae, $ad, $a6, $95, $82, $7d, $88, $91, $92, $85, $6b, $55, $4f, $55
121f1     5C 5A 49 36 
121f5     2E 33 41 4F 
121f9     55 50 48 45 
121fd     4F 60 6E 6E | 	byte	$5c, $5a, $49, $36, $2e, $33, $41, $4f, $55, $50, $48, $45, $4f, $60, $6e, $6e
12201     63 57 52 55 
12205     5E 63 61 59 
12209     55 56 5A 5F 
1220d     68 6C 6A 68 | 	byte	$63, $57, $52, $55, $5e, $63, $61, $59, $55, $56, $5a, $5f, $68, $6c, $6a, $68
12211     68 6C 74 7E 
12215     83 7E 75 72 
12219     71 74 76 78 
1221d     78 7C 84 8B | 	byte	$68, $6c, $74, $7e, $83, $7e, $75, $72, $71, $74, $76, $78, $78, $7c, $84, $8b
12221     8B 84 80 7F 
12225     85 90 9A 9C 
12229     91 88 86 91 
1222d     A7 C2 D1 CD | 	byte	$8b, $84, $80, $7f, $85, $90, $9a, $9c, $91, $88, $86, $91, $a7, $c2, $d1, $cd
12231     BF B9 C7 DE 
12235     E9 E6 DF D6 
12239     CB C8 C9 BD 
1223d     AB A7 B0 B3 | 	byte	$bf, $b9, $c7, $de, $e9, $e6, $df, $d6, $cb, $c8, $c9, $bd, $ab, $a7, $b0, $b3
12241     AE 96 6C 4A 
12245     42 4E 5B 55 
12249     3D 31 3C 45 
1224d     42 40 44 4C | 	byte	$ae, $96, $6c, $4a, $42, $4e, $5b, $55, $3d, $31, $3c, $45, $42, $40, $44, $4c
12251     64 80 87 78 
12255     69 68 80 A8 
12259     C3 C8 C0 B6 
1225d     B5 BD BE B1 | 	byte	$64, $80, $87, $78, $69, $68, $80, $a8, $c3, $c8, $c0, $b6, $b5, $bd, $be, $b1
12261     A9 AB AE AC 
12265     A4 94 85 83 
12269     8C 93 92 85 
1226d     6E 5C 58 5F | 	byte	$a9, $ab, $ae, $ac, $a4, $94, $85, $83, $8c, $93, $92, $85, $6e, $5c, $58, $5f
12271     64 5E 4D 39 
12275     32 38 48 54 
12279     59 52 49 48 
1227d     54 65 71 71 | 	byte	$64, $5e, $4d, $39, $32, $38, $48, $54, $59, $52, $49, $48, $54, $65, $71, $71
12281     66 59 54 58 
12285     61 66 62 58 
12289     51 51 55 5E 
1228d     68 6C 69 65 | 	byte	$66, $59, $54, $58, $61, $66, $62, $58, $51, $51, $55, $5e, $68, $6c, $69, $65
12291     65 69 74 7E 
12295     83 7C 73 6E 
12299     6D 6F 72 75 
1229d     74 74 7A 81 | 	byte	$65, $69, $74, $7e, $83, $7c, $73, $6e, $6d, $6f, $72, $75, $74, $74, $7a, $81
122a1     82 7D 7B 7B 
122a5     81 8B 94 96 
122a9     8D 85 84 8F 
122ad     A5 BD CA C7 | 	byte	$82, $7d, $7b, $7b, $81, $8b, $94, $96, $8d, $85, $84, $8f, $a5, $bd, $ca, $c7
122b1     BB B9 C8 DD 
122b5     E7 E4 DE D5 
122b9     CC C9 C8 BA 
122bd     AB A8 AF B2 | 	byte	$bb, $b9, $c8, $dd, $e7, $e4, $de, $d5, $cc, $c9, $c8, $ba, $ab, $a8, $af, $b2
122c1     AA 91 6B 4C 
122c5     46 50 58 51 
122c9     3C 35 40 48 
122cd     46 44 48 52 | 	byte	$aa, $91, $6b, $4c, $46, $50, $58, $51, $3c, $35, $40, $48, $46, $44, $48, $52
122d1     6C 83 87 79 
122d5     6D 6F 87 AA 
122d9     C0 C5 BD B5 
122dd     B6 BD BD B1 | 	byte	$6c, $83, $87, $79, $6d, $6f, $87, $aa, $c0, $c5, $bd, $b5, $b6, $bd, $bd, $b1
122e1     AC AD AD AA 
122e5     A3 94 89 88 
122e9     90 94 92 85 
122ed     71 64 62 67 | 	byte	$ac, $ad, $ad, $aa, $a3, $94, $89, $88, $90, $94, $92, $85, $71, $64, $62, $67
122f1     6A 62 50 3E 
122f5     38 3F 4F 5A 
122f9     5C 53 4B 4C 
122fd     59 6B 76 75 | 	byte	$6a, $62, $50, $3e, $38, $3f, $4f, $5a, $5c, $53, $4b, $4c, $59, $6b, $76, $75
12301     68 5B 56 5C 
12305     65 6A 64 57 
12309     4E 4D 54 5E 
1230d     68 6B 67 62 | 	byte	$68, $5b, $56, $5c, $65, $6a, $64, $57, $4e, $4d, $54, $5e, $68, $6b, $67, $62
12311     62 67 73 7E 
12315     82 7A 70 6A 
12319     69 6B 70 72 
1231d     6E 6D 72 78 | 	byte	$62, $67, $73, $7e, $82, $7a, $70, $6a, $69, $6b, $70, $72, $6e, $6d, $72, $78
12321     79 77 76 77 
12325     7C 85 8E 8F 
12329     88 82 82 8D 
1232d     A2 B8 C3 C1 | 	byte	$79, $77, $76, $77, $7c, $85, $8e, $8f, $88, $82, $82, $8d, $a2, $b8, $c3, $c1
12331     B8 B8 C8 DD 
12335     E6 E2 DC D3 
12339     CC CA C6 B8 
1233d     A9 A8 AD AF | 	byte	$b8, $b8, $c8, $dd, $e6, $e2, $dc, $d3, $cc, $ca, $c6, $b8, $a9, $a8, $ad, $af
12341     A6 8D 69 4F 
12345     4A 52 57 4E 
12349     3C 38 43 49 
1234d     48 47 4B 59 | 	byte	$a6, $8d, $69, $4f, $4a, $52, $57, $4e, $3c, $38, $43, $49, $48, $47, $4b, $59
12351     70 85 86 7A 
12355     71 75 8D AC 
12359     BE C1 BB B5 
1235d     B6 BE BC B3 | 	byte	$70, $85, $86, $7a, $71, $75, $8d, $ac, $be, $c1, $bb, $b5, $b6, $be, $bc, $b3
12361     AE AE AE AA 
12365     A2 95 8B 8D 
12369     93 96 93 87 
1236d     75 6A 6A 6F | 	byte	$ae, $ae, $ae, $aa, $a2, $95, $8b, $8d, $93, $96, $93, $87, $75, $6a, $6a, $6f
12371     70 66 54 43 
12375     3E 47 56 5F 
12379     5F 57 4F 50 
1237d     5E 70 79 77 | 	byte	$70, $66, $54, $43, $3e, $47, $56, $5f, $5f, $57, $4f, $50, $5e, $70, $79, $77
12381     6A 5E 5A 60 
12385     6A 6E 66 58 
12389     4E 4B 52 5D 
1238d     67 6A 64 5F | 	byte	$6a, $5e, $5a, $60, $6a, $6e, $66, $58, $4e, $4b, $52, $5d, $67, $6a, $64, $5f
12391     5E 66 71 7E 
12395     81 78 6D 67 
12399     65 68 6D 6D 
1239d     69 66 69 6E | 	byte	$5e, $66, $71, $7e, $81, $78, $6d, $67, $65, $68, $6d, $6d, $69, $66, $69, $6e
123a1     70 6F 70 72 
123a5     77 80 88 88 
123a9     83 7E 80 8A 
123ad     9E B4 BE BB | 	byte	$70, $6f, $70, $72, $77, $80, $88, $88, $83, $7e, $80, $8a, $9e, $b4, $be, $bb
123b1     B5 B7 C8 DB 
123b5     E3 E0 DA D3 
123b9     CB C9 C3 B5 
123bd     A8 A6 AC AC | 	byte	$b5, $b7, $c8, $db, $e3, $e0, $da, $d3, $cb, $c9, $c3, $b5, $a8, $a6, $ac, $ac
123c1     A1 88 67 51 
123c5     4E 54 57 4C 
123c9     3C 3C 47 4C 
123cd     4C 4B 51 5E | 	byte	$a1, $88, $67, $51, $4e, $54, $57, $4c, $3c, $3c, $47, $4c, $4c, $4b, $51, $5e
123d1     75 85 86 7B 
123d5     74 7A 92 AD 
123d9     BB BD B7 B3 
123dd     B7 BE BC B4 | 	byte	$75, $85, $86, $7b, $74, $7a, $92, $ad, $bb, $bd, $b7, $b3, $b7, $be, $bc, $b4
123e1     B0 B0 AE AA 
123e5     A2 96 90 92 
123e9     96 98 93 88 
123ed     7A 71 72 75 | 	byte	$b0, $b0, $ae, $aa, $a2, $96, $90, $92, $96, $98, $93, $88, $7a, $71, $72, $75
123f1     75 6B 59 4A 
123f5     46 4F 5C 64 
123f9     63 59 53 56 
123fd     63 74 7C 79 | 	byte	$75, $6b, $59, $4a, $46, $4f, $5c, $64, $63, $59, $53, $56, $63, $74, $7c, $79
12401     6C 62 5F 65 
12405     6E 71 68 58 
12409     4D 4A 51 5D 
1240d     67 69 63 5D | 	byte	$6c, $62, $5f, $65, $6e, $71, $68, $58, $4d, $4a, $51, $5d, $67, $69, $63, $5d
12411     5C 64 71 7C 
12415     7F 76 69 63 
12419     62 65 6A 6A 
1241d     64 5F 61 65 | 	byte	$5c, $64, $71, $7c, $7f, $76, $69, $63, $62, $65, $6a, $6a, $64, $5f, $61, $65
12421     68 69 6B 6D 
12425     72 7A 81 83 
12429     7E 7B 7D 88 
1242d     9B AF B7 B6 | 	byte	$68, $69, $6b, $6d, $72, $7a, $81, $83, $7e, $7b, $7d, $88, $9b, $af, $b7, $b6
12431     B1 B6 C7 D9 
12435     DF DC D7 D0 
12439     CB C8 C0 B1 
1243d     A6 A5 A9 A8 | 	byte	$b1, $b6, $c7, $d9, $df, $dc, $d7, $d0, $cb, $c8, $c0, $b1, $a6, $a5, $a9, $a8
12441     9C 84 66 54 
12445     50 55 56 4B 
12449     3F 40 4A 4F 
1244d     4F 4F 56 64 | 	byte	$9c, $84, $66, $54, $50, $55, $56, $4b, $3f, $40, $4a, $4f, $4f, $4f, $56, $64
12451     79 87 86 7D 
12455     79 80 96 AD 
12459     B8 BA B4 B2 
1245d     B7 BE BD B6 | 	byte	$79, $87, $86, $7d, $79, $80, $96, $ad, $b8, $ba, $b4, $b2, $b7, $be, $bd, $b6
12461     B3 B1 AE AA 
12465     A2 98 94 96 
12469     99 99 95 8A 
1246d     7E 79 7A 7E | 	byte	$b3, $b1, $ae, $aa, $a2, $98, $94, $96, $99, $99, $95, $8a, $7e, $79, $7a, $7e
12471     7C 70 5F 51 
12475     4E 57 63 69 
12479     65 5D 57 5B 
1247d     69 77 7D 7A | 	byte	$7c, $70, $5f, $51, $4e, $57, $63, $69, $65, $5d, $57, $5b, $69, $77, $7d, $7a
12481     6F 66 63 6A 
12485     72 74 69 5A 
12489     4E 4B 52 5E 
1248d     67 68 60 5A | 	byte	$6f, $66, $63, $6a, $72, $74, $69, $5a, $4e, $4b, $52, $5e, $67, $68, $60, $5a
12491     5A 63 6F 7A 
12495     7B 73 67 60 
12499     5E 63 66 65 
1249d     5E 59 59 5D | 	byte	$5a, $63, $6f, $7a, $7b, $73, $67, $60, $5e, $63, $66, $65, $5e, $59, $59, $5d
124a1     60 62 64 67 
124a5     6C 74 7A 7C 
124a9     79 76 7A 85 
124ad     98 AA B1 B1 | 	byte	$60, $62, $64, $67, $6c, $74, $7a, $7c, $79, $76, $7a, $85, $98, $aa, $b1, $b1
124b1     AE B5 C6 D8 
124b5     DD D9 D4 CE 
124b9     C9 C5 BC AD 
124bd     A4 A3 A7 A4 | 	byte	$ae, $b5, $c6, $d8, $dd, $d9, $d4, $ce, $c9, $c5, $bc, $ad, $a4, $a3, $a7, $a4
124c1     97 80 64 56 
124c5     52 55 54 49 
124c9     40 43 4D 51 
124cd     52 54 5B 6A | 	byte	$97, $80, $64, $56, $52, $55, $54, $49, $40, $43, $4d, $51, $52, $54, $5b, $6a
124d1     7D 88 86 7E 
124d5     7B 85 98 AC 
124d9     B5 B6 B2 B0 
124dd     B8 BD BD B8 | 	byte	$7d, $88, $86, $7e, $7b, $85, $98, $ac, $b5, $b6, $b2, $b0, $b8, $bd, $bd, $b8
124e1     B4 B1 AE AB 
124e5     A3 9B 98 99 
124e9     9B 9A 95 8D 
124ed     84 80 82 83 | 	byte	$b4, $b1, $ae, $ab, $a3, $9b, $98, $99, $9b, $9a, $95, $8d, $84, $80, $82, $83
124f1     80 75 66 58 
124f5     56 5F 69 6D 
124f9     6A 61 5C 61 
124fd     6E 7B 80 7C | 	byte	$80, $75, $66, $58, $56, $5f, $69, $6d, $6a, $61, $5c, $61, $6e, $7b, $80, $7c
12501     72 69 67 6E 
12505     74 76 6B 5C 
12509     50 4D 54 5F 
1250d     66 66 5F 59 | 	byte	$72, $69, $67, $6e, $74, $76, $6b, $5c, $50, $4d, $54, $5f, $66, $66, $5f, $59
12511     58 61 6D 77 
12515     77 6F 63 5D 
12519     5C 60 63 61 
1251d     59 54 52 56 | 	byte	$58, $61, $6d, $77, $77, $6f, $63, $5d, $5c, $60, $63, $61, $59, $54, $52, $56
12521     59 5C 5F 62 
12525     67 6E 75 76 
12529     74 73 77 83 
1252d     95 A5 AD AD | 	byte	$59, $5c, $5f, $62, $67, $6e, $75, $76, $74, $73, $77, $83, $95, $a5, $ad, $ad
12531     AC B4 C5 D4 
12535     D9 D6 D1 CB 
12539     C7 C2 B8 AA 
1253d     A1 A0 A3 A0 | 	byte	$ac, $b4, $c5, $d4, $d9, $d6, $d1, $cb, $c7, $c2, $b8, $aa, $a1, $a0, $a3, $a0
12541     93 7B 64 57 
12545     54 56 53 4A 
12549     42 47 4F 54 
1254d     55 58 60 6F | 	byte	$93, $7b, $64, $57, $54, $56, $53, $4a, $42, $47, $4f, $54, $55, $58, $60, $6f
12551     80 88 87 80 
12555     7F 88 9B AC 
12559     B3 B2 B0 B0 
1255d     B7 BE BE B9 | 	byte	$80, $88, $87, $80, $7f, $88, $9b, $ac, $b3, $b2, $b0, $b0, $b7, $be, $be, $b9
12561     B5 B2 AF AB 
12565     A4 9E 9B 9C 
12569     9D 9B 97 90 
1256d     89 85 87 88 | 	byte	$b5, $b2, $af, $ab, $a4, $9e, $9b, $9c, $9d, $9b, $97, $90, $89, $85, $87, $88
12571     85 7A 6C 61 
12575     5F 67 6F 72 
12579     6D 65 61 66 
1257d     73 7C 81 7D | 	byte	$85, $7a, $6c, $61, $5f, $67, $6f, $72, $6d, $65, $61, $66, $73, $7c, $81, $7d
12581     74 6D 6C 72 
12585     77 77 6E 5F 
12589     53 50 57 61 
1258d     66 65 5E 58 | 	byte	$74, $6d, $6c, $72, $77, $77, $6e, $5f, $53, $50, $57, $61, $66, $65, $5e, $58
12591     58 60 6C 74 
12595     75 6C 61 5B 
12599     5A 5E 61 5D 
1259d     55 4E 4C 4F | 	byte	$58, $60, $6c, $74, $75, $6c, $61, $5b, $5a, $5e, $61, $5d, $55, $4e, $4c, $4f
125a1     53 56 5A 5D 
125a5     62 69 6F 71 
125a9     70 70 75 81 
125ad     92 A1 A7 A8 | 	byte	$53, $56, $5a, $5d, $62, $69, $6f, $71, $70, $70, $75, $81, $92, $a1, $a7, $a8
125b1     A9 B3 C4 D1 
125b5     D5 D2 CD C8 
125b9     C4 BF B3 A6 
125bd     9F 9E 9F 9B | 	byte	$a9, $b3, $c4, $d1, $d5, $d2, $cd, $c8, $c4, $bf, $b3, $a6, $9f, $9e, $9f, $9b
125c1     8E 78 63 58 
125c5     56 57 53 49 
125c9     44 49 51 56 
125cd     58 5B 64 73 | 	byte	$8e, $78, $63, $58, $56, $57, $53, $49, $44, $49, $51, $56, $58, $5b, $64, $73
125d1     82 88 86 81 
125d5     82 8C 9C AA 
125d9     B0 B0 AD B0 
125dd     B7 BD BE BA | 	byte	$82, $88, $86, $81, $82, $8c, $9c, $aa, $b0, $b0, $ad, $b0, $b7, $bd, $be, $ba
125e1     B6 B3 AF AC 
125e5     A6 A1 9F 9F 
125e9     9E 9C 99 93 
125ed     8D 8B 8B 8C | 	byte	$b6, $b3, $af, $ac, $a6, $a1, $9f, $9f, $9e, $9c, $99, $93, $8d, $8b, $8b, $8c
125f1     88 7F 73 6A 
125f5     68 6E 74 76 
125f9     71 69 66 6C 
125fd     76 7F 81 7E | 	byte	$88, $7f, $73, $6a, $68, $6e, $74, $76, $71, $69, $66, $6c, $76, $7f, $81, $7e
12601     76 70 70 75 
12605     7A 78 6F 62 
12609     57 54 59 62 
1260d     66 64 5D 58 | 	byte	$76, $70, $70, $75, $7a, $78, $6f, $62, $57, $54, $59, $62, $66, $64, $5d, $58
12611     58 60 6B 72 
12615     72 69 60 5A 
12619     59 5C 5E 5A 
1261d     50 49 47 4A | 	byte	$58, $60, $6b, $72, $72, $69, $60, $5a, $59, $5c, $5e, $5a, $50, $49, $47, $4a
12621     4E 52 55 57 
12625     5D 64 6A 6C 
12629     6C 6D 73 7F 
1262d     8F 9C A3 A4 | 	byte	$4e, $52, $55, $57, $5d, $64, $6a, $6c, $6c, $6d, $73, $7f, $8f, $9c, $a3, $a4
12631     A8 B3 C3 CF 
12635     D2 CE CA C6 
12639     C2 BB AF A3 
1263d     9B 9B 9C 97 | 	byte	$a8, $b3, $c3, $cf, $d2, $ce, $ca, $c6, $c2, $bb, $af, $a3, $9b, $9b, $9c, $97
12641     88 75 63 5A 
12645     58 58 52 4A 
12649     47 4C 54 58 
1264d     5A 5F 68 77 | 	byte	$88, $75, $63, $5a, $58, $58, $52, $4a, $47, $4c, $54, $58, $5a, $5f, $68, $77
12651     84 89 86 82 
12655     84 8E 9E A9 
12659     AD AC AA AE 
1265d     B6 BD BE BA | 	byte	$84, $89, $86, $82, $84, $8e, $9e, $a9, $ad, $ac, $aa, $ae, $b6, $bd, $be, $ba
12661     B7 B3 B0 AC 
12665     A9 A4 A1 A1 
12669     9F 9C 9A 95 
1266d     91 8F 8F 8F | 	byte	$b7, $b3, $b0, $ac, $a9, $a4, $a1, $a1, $9f, $9c, $9a, $95, $91, $8f, $8f, $8f
12671     8C 84 79 71 
12675     71 75 7A 7A 
12679     74 6F 6C 71 
1267d     7A 80 82 7E | 	byte	$8c, $84, $79, $71, $71, $75, $7a, $7a, $74, $6f, $6c, $71, $7a, $80, $82, $7e
12681     78 73 73 78 
12685     7B 7A 71 64 
12689     5A 58 5C 63 
1268d     67 64 5C 58 | 	byte	$78, $73, $73, $78, $7b, $7a, $71, $64, $5a, $58, $5c, $63, $67, $64, $5c, $58
12691     58 5F 69 6F 
12695     6E 67 5D 58 
12699     58 5A 5C 57 
1269d     4D 46 43 45 | 	byte	$58, $5f, $69, $6f, $6e, $67, $5d, $58, $58, $5a, $5c, $57, $4d, $46, $43, $45
126a1     49 4D 50 54 
126a5     59 61 65 68 
126a9     69 6B 71 7D 
126ad     8D 9A 9F A1 | 	byte	$49, $4d, $50, $54, $59, $61, $65, $68, $69, $6b, $71, $7d, $8d, $9a, $9f, $a1
126b1     A6 B2 C1 CB 
126b5     CE CB C7 C3 
126b9     BE B6 AA 9F 
126bd     99 98 98 92 | 	byte	$a6, $b2, $c1, $cb, $ce, $cb, $c7, $c3, $be, $b6, $aa, $9f, $99, $98, $98, $92
126c1     84 71 62 5B 
126c5     59 58 52 4B 
126c9     49 4E 56 5A 
126cd     5D 63 6C 7A | 	byte	$84, $71, $62, $5b, $59, $58, $52, $4b, $49, $4e, $56, $5a, $5d, $63, $6c, $7a
126d1     84 88 85 83 
126d5     86 90 9D A7 
126d9     AA A9 A8 AD 
126dd     B6 BD BE BB | 	byte	$84, $88, $85, $83, $86, $90, $9d, $a7, $aa, $a9, $a8, $ad, $b6, $bd, $be, $bb
126e1     B7 B3 B0 AE 
126e5     AA A6 A4 A3 
126e9     A0 9D 9B 98 
126ed     95 93 92 91 | 	byte	$b7, $b3, $b0, $ae, $aa, $a6, $a4, $a3, $a0, $9d, $9b, $98, $95, $93, $92, $91
126f1     8E 88 80 7A 
126f5     78 7C 7E 7E 
126f9     79 74 72 76 
126fd     7D 81 82 7F | 	byte	$8e, $88, $80, $7a, $78, $7c, $7e, $7e, $79, $74, $72, $76, $7d, $81, $82, $7f
12701     7A 77 77 7A 
12705     7C 7A 73 68 
12709     5F 5C 60 65 
1270d     67 64 5C 58 | 	byte	$7a, $77, $77, $7a, $7c, $7a, $73, $68, $5f, $5c, $60, $65, $67, $64, $5c, $58
12711     58 60 68 6D 
12715     6C 64 5C 57 
12719     57 59 5A 54 
1271d     4A 42 3F 42 | 	byte	$58, $60, $68, $6d, $6c, $64, $5c, $57, $57, $59, $5a, $54, $4a, $42, $3f, $42
12721     46 49 4C 50 
12725     56 5D 62 65 
12729     66 69 71 7C 
1272d     8C 97 9C 9F | 	byte	$46, $49, $4c, $50, $56, $5d, $62, $65, $66, $69, $71, $7c, $8c, $97, $9c, $9f
12731     A5 B1 BF C9 
12735     CA C8 C3 BF 
12739     BA B2 A6 9B 
1273d     96 95 94 8D | 	byte	$a5, $b1, $bf, $c9, $ca, $c8, $c3, $bf, $ba, $b2, $a6, $9b, $96, $95, $94, $8d
12741     7F 6F 62 5C 
12745     5A 58 53 4C 
12749     4B 50 57 5B 
1274d     60 66 6F 7C | 	byte	$7f, $6f, $62, $5c, $5a, $58, $53, $4c, $4b, $50, $57, $5b, $60, $66, $6f, $7c
12751     85 88 85 84 
12755     87 91 9D A5 
12759     A6 A5 A6 AC 
1275d     B4 BB BD BA | 	byte	$85, $88, $85, $84, $87, $91, $9d, $a5, $a6, $a5, $a6, $ac, $b4, $bb, $bd, $ba
12761     B6 B3 B0 AF 
12765     AC A9 A7 A4 
12769     A0 9E 9C 9A 
1276d     97 96 94 92 | 	byte	$b6, $b3, $b0, $af, $ac, $a9, $a7, $a4, $a0, $9e, $9c, $9a, $97, $96, $94, $92
12771     91 8C 86 81 
12775     80 82 83 82 
12779     7D 79 77 7A 
1277d     7F 82 82 80 | 	byte	$91, $8c, $86, $81, $80, $82, $83, $82, $7d, $79, $77, $7a, $7f, $82, $82, $80
12781     7C 79 79 7B 
12785     7C 7B 74 6C 
12789     64 61 64 67 
1278d     68 64 5D 59 | 	byte	$7c, $79, $79, $7b, $7c, $7b, $74, $6c, $64, $61, $64, $67, $68, $64, $5d, $59
12791     5A 60 67 6B 
12795     6A 62 5B 57 
12799     56 59 58 52 
1279d     47 3F 3D 3E | 	byte	$5a, $60, $67, $6b, $6a, $62, $5b, $57, $56, $59, $58, $52, $47, $3f, $3d, $3e
127a1     42 46 49 4D 
127a5     53 5A 60 62 
127a9     64 67 6F 7C 
127ad     8A 95 9A 9E | 	byte	$42, $46, $49, $4d, $53, $5a, $60, $62, $64, $67, $6f, $7c, $8a, $95, $9a, $9e
127b1     A4 B0 BE C6 
127b5     C7 C4 C0 BB 
127b9     B6 AD A2 97 
127bd     93 92 90 89 | 	byte	$a4, $b0, $be, $c6, $c7, $c4, $c0, $bb, $b6, $ad, $a2, $97, $93, $92, $90, $89
127c1     7C 6C 61 5C 
127c5     5B 59 53 4D 
127c9     4D 53 59 5D 
127cd     61 68 72 7E | 	byte	$7c, $6c, $61, $5c, $5b, $59, $53, $4d, $4d, $53, $59, $5d, $61, $68, $72, $7e
127d1     86 87 86 84 
127d5     88 91 9C A2 
127d9     A4 A2 A3 AA 
127dd     B3 B9 BC B9 | 	byte	$86, $87, $86, $84, $88, $91, $9c, $a2, $a4, $a2, $a3, $aa, $b3, $b9, $bc, $b9
127e1     B5 B2 B1 AF 
127e5     AD AA A7 A4 
127e9     9F 9E 9D 9B 
127ed     9A 98 95 93 | 	byte	$b5, $b2, $b1, $af, $ad, $aa, $a7, $a4, $9f, $9e, $9d, $9b, $9a, $98, $95, $93
127f1     91 90 8C 87 
127f5     86 87 87 85 
127f9     81 7D 7C 7E 
127fd     81 83 83 81 | 	byte	$91, $90, $8c, $87, $86, $87, $87, $85, $81, $7d, $7c, $7e, $81, $83, $83, $81
12801     7D 7C 7B 7D 
12805     7D 7B 76 6F 
12809     68 66 67 6A 
1280d     6A 66 60 5C | 	byte	$7d, $7c, $7b, $7d, $7d, $7b, $76, $6f, $68, $66, $67, $6a, $6a, $66, $60, $5c
12811     5C 61 67 6B 
12815     68 61 5B 57 
12819     57 58 58 50 
1281d     46 3D 3B 3C | 	byte	$5c, $61, $67, $6b, $68, $61, $5b, $57, $57, $58, $58, $50, $46, $3d, $3b, $3c
12821     40 43 46 4B 
12825     51 58 5D 60 
12829     63 67 70 7C 
1282d     88 93 98 9C | 	byte	$40, $43, $46, $4b, $51, $58, $5d, $60, $63, $67, $70, $7c, $88, $93, $98, $9c
12831     A4 AF BC C3 
12835     C4 C0 BC B8 
12839     B2 A8 9D 94 
1283d     90 8F 8C 85 | 	byte	$a4, $af, $bc, $c3, $c4, $c0, $bc, $b8, $b2, $a8, $9d, $94, $90, $8f, $8c, $85
12841     78 6B 61 5E 
12845     5C 59 53 50 
12849     4F 55 5A 5E 
1284d     63 6A 74 7E | 	byte	$78, $6b, $61, $5e, $5c, $59, $53, $50, $4f, $55, $5a, $5e, $63, $6a, $74, $7e
12851     85 86 84 84 
12855     88 92 9A A0 
12859     A0 9F A1 A8 
1285d     B1 B7 BA B7 | 	byte	$85, $86, $84, $84, $88, $92, $9a, $a0, $a0, $9f, $a1, $a8, $b1, $b7, $ba, $b7
12861     B4 B1 B0 B0 
12865     AF AB A7 A2 
12869     9F 9D 9D 9C 
1286d     9B 98 95 92 | 	byte	$b4, $b1, $b0, $b0, $af, $ab, $a7, $a2, $9f, $9d, $9d, $9c, $9b, $98, $95, $92
12871     92 92 90 8D 
12875     8C 8B 8A 88 
12879     86 83 81 82 
1287d     84 84 83 82 | 	byte	$92, $92, $90, $8d, $8c, $8b, $8a, $88, $86, $83, $81, $82, $84, $84, $83, $82
12881     80 7E 7E 7E 
12885     7E 7D 79 73 
12889     6D 6B 6C 6D 
1288d     6C 68 62 5E | 	byte	$80, $7e, $7e, $7e, $7e, $7d, $79, $73, $6d, $6b, $6c, $6d, $6c, $68, $62, $5e
12891     5F 63 68 6A 
12895     67 61 5B 57 
12899     57 58 57 4F 
1289d     45 3D 3A 3B | 	byte	$5f, $63, $68, $6a, $67, $61, $5b, $57, $57, $58, $57, $4f, $45, $3d, $3a, $3b
128a1     3E 41 45 49 
128a5     4F 56 5B 5F 
128a9     62 66 70 7C 
128ad     88 91 96 9B | 	byte	$3e, $41, $45, $49, $4f, $56, $5b, $5f, $62, $66, $70, $7c, $88, $91, $96, $9b
128b1     A4 AF BA BF 
128b5     C0 BC B9 B4 
128b9     AD A3 99 91 
128bd     8D 8C 89 80 | 	byte	$a4, $af, $ba, $bf, $c0, $bc, $b9, $b4, $ad, $a3, $99, $91, $8d, $8c, $89, $80
128c1     74 68 61 5E 
128c5     5C 59 54 50 
128c9     51 56 5B 5F 
128cd     65 6C 75 7F | 	byte	$74, $68, $61, $5e, $5c, $59, $54, $50, $51, $56, $5b, $5f, $65, $6c, $75, $7f
128d1     84 85 84 83 
128d5     88 91 99 9C 
128d9     9D 9B 9E A5 
128dd     AF B5 B7 B6 | 	byte	$84, $85, $84, $83, $88, $91, $99, $9c, $9d, $9b, $9e, $a5, $af, $b5, $b7, $b6
128e1     B2 B0 B0 B0 
128e5     AF AC A7 A3 
128e9     9F 9D 9D 9D 
128ed     9B 98 94 92 | 	byte	$b2, $b0, $b0, $b0, $af, $ac, $a7, $a3, $9f, $9d, $9d, $9d, $9b, $98, $94, $92
128f1     92 94 94 92 
128f5     90 8E 8C 8B 
128f9     8A 87 86 86 
128fd     86 85 83 83 | 	byte	$92, $94, $94, $92, $90, $8e, $8c, $8b, $8a, $87, $86, $86, $86, $85, $83, $83
12901     82 80 80 7F 
12905     7F 7E 7B 77 
12909     73 70 70 70 
1290d     6F 6A 64 61 | 	byte	$82, $80, $80, $7f, $7f, $7e, $7b, $77, $73, $70, $70, $70, $6f, $6a, $64, $61
12911     61 65 69 6A 
12915     68 62 5C 59 
12919     58 59 56 4E 
1291d     44 3C 39 3A | 	byte	$61, $65, $69, $6a, $68, $62, $5c, $59, $58, $59, $56, $4e, $44, $3c, $39, $3a
12921     3C 40 44 48 
12925     4E 55 5B 5E 
12929     61 68 70 7C 
1292d     87 90 95 9A | 	byte	$3c, $40, $44, $48, $4e, $55, $5b, $5e, $61, $68, $70, $7c, $87, $90, $95, $9a
12931     A4 AE B9 BD 
12935     BD BA B5 B0 
12939     A9 9F 95 8E 
1293d     8A 89 84 7C | 	byte	$a4, $ae, $b9, $bd, $bd, $ba, $b5, $b0, $a9, $9f, $95, $8e, $8a, $89, $84, $7c
12941     71 67 61 5E 
12945     5C 59 54 51 
12949     53 57 5C 60 
1294d     65 6C 76 7F | 	byte	$71, $67, $61, $5e, $5c, $59, $54, $51, $53, $57, $5c, $60, $65, $6c, $76, $7f
12951     83 84 82 83 
12955     88 8F 96 9A 
12959     9A 98 9B A3 
1295d     AC B3 B4 B3 | 	byte	$83, $84, $82, $83, $88, $8f, $96, $9a, $9a, $98, $9b, $a3, $ac, $b3, $b4, $b3
12961     AF AE AE AF 
12965     AF AB A6 A1 
12969     9C 9C 9C 9C 
1296d     9A 96 93 91 | 	byte	$af, $ae, $ae, $af, $af, $ab, $a6, $a1, $9c, $9c, $9c, $9c, $9a, $96, $93, $91
12971     93 95 96 95 
12975     93 90 8F 8E 
12979     8D 8B 8A 89 
1297d     88 85 85 84 | 	byte	$93, $95, $96, $95, $93, $90, $8f, $8e, $8d, $8b, $8a, $89, $88, $85, $85, $84
12981     84 83 82 81 
12985     80 7F 7F 7C 
12989     77 76 75 74 
1298d     72 6E 68 65 | 	byte	$84, $83, $82, $81, $80, $7f, $7f, $7c, $77, $76, $75, $74, $72, $6e, $68, $65
12991     65 68 6B 6B 
12995     68 62 5D 5B 
12999     59 59 56 4E 
1299d     45 3D 3A 3A | 	byte	$65, $68, $6b, $6b, $68, $62, $5d, $5b, $59, $59, $56, $4e, $45, $3d, $3a, $3a
129a1     3C 3F 43 48 
129a5     4E 55 5B 5E 
129a9     62 69 72 7D 
129ad     88 90 95 9A | 	byte	$3c, $3f, $43, $48, $4e, $55, $5b, $5e, $62, $69, $72, $7d, $88, $90, $95, $9a
129b1     A3 AD B6 BA 
129b5     BA B6 B2 AC 
129b9     A5 9A 91 8A 
129bd     88 85 81 79 | 	byte	$a3, $ad, $b6, $ba, $ba, $b6, $b2, $ac, $a5, $9a, $91, $8a, $88, $85, $81, $79
129c1     6F 66 61 5F 
129c5     5E 5A 55 52 
129c9     53 57 5C 61 
129cd     66 6D 76 7E | 	byte	$6f, $66, $61, $5f, $5e, $5a, $55, $52, $53, $57, $5c, $61, $66, $6d, $76, $7e
129d1     81 82 81 82 
129d5     87 8F 94 96 
129d9     95 94 97 9F 
129dd     A9 AF B1 AF | 	byte	$81, $82, $81, $82, $87, $8f, $94, $96, $95, $94, $97, $9f, $a9, $af, $b1, $af
129e1     AD AC AE AF 
129e5     AE AC A6 9F 
129e9     9C 9B 9C 9C 
129ed     99 95 91 90 | 	byte	$ad, $ac, $ae, $af, $ae, $ac, $a6, $9f, $9c, $9b, $9c, $9c, $99, $95, $91, $90
129f1     92 95 97 97 
129f5     94 93 91 91 
129f9     90 8F 8D 8C 
129fd     89 87 86 86 | 	byte	$92, $95, $97, $97, $94, $93, $91, $91, $90, $8f, $8d, $8c, $89, $87, $86, $86
12a01     86 85 83 82 
12a05     81 81 81 80 
12a09     7D 7A 79 79 
12a0d     76 71 6D 69 | 	byte	$86, $85, $83, $82, $81, $81, $81, $80, $7d, $7a, $79, $79, $76, $71, $6d, $69
12a11     69 6B 6C 6D 
12a15     69 63 5F 5C 
12a19     5B 5A 56 4E 
12a1d     45 3D 3B 3B | 	byte	$69, $6b, $6c, $6d, $69, $63, $5f, $5c, $5b, $5a, $56, $4e, $45, $3d, $3b, $3b
12a21     3C 40 43 48 
12a25     4F 56 5B 5F 
12a29     64 6A 73 7F 
12a2d     88 8F 95 9B | 	byte	$3c, $40, $43, $48, $4f, $56, $5b, $5f, $64, $6a, $73, $7f, $88, $8f, $95, $9b
12a31     A3 AD B4 B7 
12a35     B7 B3 AE A8 
12a39     A0 97 8E 88 
12a3d     85 82 7D 75 | 	byte	$a3, $ad, $b4, $b7, $b7, $b3, $ae, $a8, $a0, $97, $8e, $88, $85, $82, $7d, $75
12a41     6C 65 61 60 
12a45     5D 5A 55 53 
12a49     54 58 5D 60 
12a4d     66 6D 75 7C | 	byte	$6c, $65, $61, $60, $5d, $5a, $55, $53, $54, $58, $5d, $60, $66, $6d, $75, $7c
12a51     7F 7F 7F 80 
12a55     86 8C 91 92 
12a59     92 91 94 9B 
12a5d     A5 AA AD AB | 	byte	$7f, $7f, $7f, $80, $86, $8c, $91, $92, $92, $91, $94, $9b, $a5, $aa, $ad, $ab
12a61     AA AA AB AD 
12a65     AD A9 A4 9D 
12a69     9B 9A 9B 9A 
12a6d     98 93 8F 8F | 	byte	$aa, $aa, $ab, $ad, $ad, $a9, $a4, $9d, $9b, $9a, $9b, $9a, $98, $93, $8f, $8f
12a71     91 96 98 99 
12a75     97 95 92 92 
12a79     93 92 91 8E 
12a7d     8B 88 87 87 | 	byte	$91, $96, $98, $99, $97, $95, $92, $92, $93, $92, $91, $8e, $8b, $88, $87, $87
12a81     88 87 86 83 
12a85     83 83 84 84 
12a89     82 80 7E 7D 
12a8d     7A 76 71 6E | 	byte	$88, $87, $86, $83, $83, $83, $84, $84, $82, $80, $7e, $7d, $7a, $76, $71, $6e
12a91     6D 6E 6F 6E 
12a95     6A 66 61 5F 
12a99     5D 5C 57 4F 
12a9d     46 3F 3C 3B | 	byte	$6d, $6e, $6f, $6e, $6a, $66, $61, $5f, $5d, $5c, $57, $4f, $46, $3f, $3c, $3b
12aa1     3E 40 43 49 
12aa5     4F 56 5C 60 
12aa9     65 6C 76 80 
12aad     89 8F 95 9B | 	byte	$3e, $40, $43, $49, $4f, $56, $5c, $60, $65, $6c, $76, $80, $89, $8f, $95, $9b
12ab1     A3 AC B2 B4 
12ab5     B3 B0 AB A5 
12ab9     9D 93 8B 85 
12abd     82 7E 7A 72 | 	byte	$a3, $ac, $b2, $b4, $b3, $b0, $ab, $a5, $9d, $93, $8b, $85, $82, $7e, $7a, $72
12ac1     6A 64 62 5F 
12ac5     5E 59 56 54 
12ac9     55 59 5C 61 
12acd     66 6D 74 7A | 	byte	$6a, $64, $62, $5f, $5e, $59, $56, $54, $55, $59, $5c, $61, $66, $6d, $74, $7a
12ad1     7D 7E 7D 7F 
12ad5     84 8A 8D 8F 
12ad9     8D 8D 90 98 
12add     A0 A6 A8 A7 | 	byte	$7d, $7e, $7d, $7f, $84, $8a, $8d, $8f, $8d, $8d, $90, $98, $a0, $a6, $a8, $a7
12ae1     A6 A6 A9 AB 
12ae5     AB A8 A2 9D 
12ae9     99 98 9A 99 
12aed     96 91 8E 8D | 	byte	$a6, $a6, $a9, $ab, $ab, $a8, $a2, $9d, $99, $98, $9a, $99, $96, $91, $8e, $8d
12af1     90 95 99 99 
12af5     97 95 94 94 
12af9     96 96 93 91 
12afd     8D 8A 89 8A | 	byte	$90, $95, $99, $99, $97, $95, $94, $94, $96, $96, $93, $91, $8d, $8a, $89, $8a
12b01     8A 89 87 85 
12b05     84 86 87 87 
12b09     86 85 83 82 
12b0d     7F 7A 75 72 | 	byte	$8a, $89, $87, $85, $84, $86, $87, $87, $86, $85, $83, $82, $7f, $7a, $75, $72
12b11     71 72 72 71 
12b15     6D 67 63 60 
12b19     5F 5D 58 50 
12b1d     48 41 3D 3D | 	byte	$71, $72, $72, $71, $6d, $67, $63, $60, $5f, $5d, $58, $50, $48, $41, $3d, $3d
12b21     3E 41 44 4A 
12b25     50 57 5D 62 
12b29     67 6F 78 82 
12b2d     89 90 95 9B | 	byte	$3e, $41, $44, $4a, $50, $57, $5d, $62, $67, $6f, $78, $82, $89, $90, $95, $9b
12b31     A3 AB B1 B2 
12b35     B1 AD A7 A1 
12b39     99 8F 88 82 
12b3d     7F 7C 77 70 | 	byte	$a3, $ab, $b1, $b2, $b1, $ad, $a7, $a1, $99, $8f, $88, $82, $7f, $7c, $77, $70
12b41     69 64 61 60 
12b45     5E 5A 57 54 
12b49     56 58 5C 60 
12b4d     66 6C 73 78 | 	byte	$69, $64, $61, $60, $5e, $5a, $57, $54, $56, $58, $5c, $60, $66, $6c, $73, $78
12b51     7B 7B 7B 7D 
12b55     83 87 8A 8A 
12b59     89 89 8E 95 
12b5d     9C A1 A3 A3 | 	byte	$7b, $7b, $7b, $7d, $83, $87, $8a, $8a, $89, $89, $8e, $95, $9c, $a1, $a3, $a3
12b61     A2 A3 A6 A9 
12b65     A9 A5 9F 99 
12b69     97 97 98 98 
12b6d     94 8F 8C 8C | 	byte	$a2, $a3, $a6, $a9, $a9, $a5, $9f, $99, $97, $97, $98, $98, $94, $8f, $8c, $8c
12b71     90 95 98 98 
12b75     97 95 95 97 
12b79     98 98 96 93 
12b7d     8E 8C 8C 8C | 	byte	$90, $95, $98, $98, $97, $95, $95, $97, $98, $98, $96, $93, $8e, $8c, $8c, $8c
12b81     8D 8B 8A 88 
12b85     87 89 8B 8C 
12b89     8C 8A 89 87 
12b8d     84 80 7B 77 | 	byte	$8d, $8b, $8a, $88, $87, $89, $8b, $8c, $8c, $8a, $89, $87, $84, $80, $7b, $77
12b91     76 75 75 73 
12b95     6F 6A 65 63 
12b99     61 5E 59 51 
12b9d     49 42 3E 3F | 	byte	$76, $75, $75, $73, $6f, $6a, $65, $63, $61, $5e, $59, $51, $49, $42, $3e, $3f
12ba1     3F 42 46 4B 
12ba5     52 5A 5F 63 
12ba9     69 70 7A 83 
12bad     8A 91 96 9B | 	byte	$3f, $42, $46, $4b, $52, $5a, $5f, $63, $69, $70, $7a, $83, $8a, $91, $96, $9b
12bb1     A3 AA AE AF 
12bb5     AE AA A4 9E 
12bb9     95 8C 85 80 
12bbd     7D 79 74 6E | 	byte	$a3, $aa, $ae, $af, $ae, $aa, $a4, $9e, $95, $8c, $85, $80, $7d, $79, $74, $6e
12bc1     68 63 61 60 
12bc5     5E 5B 57 55 
12bc9     56 59 5C 60 
12bcd     65 6B 72 76 | 	byte	$68, $63, $61, $60, $5e, $5b, $57, $55, $56, $59, $5c, $60, $65, $6b, $72, $76
12bd1     78 78 79 7C 
12bd5     7F 84 87 87 
12bd9     86 86 8A 91 
12bdd     97 9C 9E 9E | 	byte	$78, $78, $79, $7c, $7f, $84, $87, $87, $86, $86, $8a, $91, $97, $9c, $9e, $9e
12be1     9E A0 A3 A6 
12be5     A6 A2 9C 98 
12be9     95 95 96 95 
12bed     91 8D 8A 8A | 	byte	$9e, $a0, $a3, $a6, $a6, $a2, $9c, $98, $95, $95, $96, $95, $91, $8d, $8a, $8a
12bf1     8F 93 96 98 
12bf5     97 95 96 97 
12bf9     9A 9A 98 94 
12bfd     90 8E 8E 8E | 	byte	$8f, $93, $96, $98, $97, $95, $96, $97, $9a, $9a, $98, $94, $90, $8e, $8e, $8e
12c01     8F 8E 8C 8A 
12c05     8A 8B 8E 90 
12c09     8F 8F 8D 8B 
12c0d     88 85 80 7D | 	byte	$8f, $8e, $8c, $8a, $8a, $8b, $8e, $90, $8f, $8f, $8d, $8b, $88, $85, $80, $7d
12c11     7A 7A 79 76 
12c15     72 6D 69 66 
12c19     63 60 5B 52 
12c1d     4B 44 41 41 | 	byte	$7a, $7a, $79, $76, $72, $6d, $69, $66, $63, $60, $5b, $52, $4b, $44, $41, $41
12c21     42 44 47 4D 
12c25     55 5C 61 66 
12c29     6C 74 7C 85 
12c2d     8D 92 96 9C | 	byte	$42, $44, $47, $4d, $55, $5c, $61, $66, $6c, $74, $7c, $85, $8d, $92, $96, $9c
12c31     A3 A9 AC AD 
12c35     AB A7 A2 9A 
12c39     92 89 83 7D 
12c3d     7B 77 72 6C | 	byte	$a3, $a9, $ac, $ad, $ab, $a7, $a2, $9a, $92, $89, $83, $7d, $7b, $77, $72, $6c
12c41     66 63 61 61 
12c45     5F 5B 57 56 
12c49     56 58 5C 5F 
12c4d     64 69 6F 73 | 	byte	$66, $63, $61, $61, $5f, $5b, $57, $56, $56, $58, $5c, $5f, $64, $69, $6f, $73
12c51     75 76 77 79 
12c55     7D 81 83 83 
12c59     82 83 87 8D 
12c5d     93 97 99 99 | 	byte	$75, $76, $77, $79, $7d, $81, $83, $83, $82, $83, $87, $8d, $93, $97, $99, $99
12c61     99 9C A0 A3 
12c65     A3 9F 99 95 
12c69     92 93 94 94 
12c6d     90 8B 89 89 | 	byte	$99, $9c, $a0, $a3, $a3, $9f, $99, $95, $92, $93, $94, $94, $90, $8b, $89, $89
12c71     8D 92 96 96 
12c75     96 95 96 99 
12c79     9B 9C 9A 96 
12c7d     93 90 90 91 | 	byte	$8d, $92, $96, $96, $96, $95, $96, $99, $9b, $9c, $9a, $96, $93, $90, $90, $91
12c81     91 91 8E 8C 
12c85     8D 8F 91 94 
12c89     93 93 91 90 
12c8d     8E 89 85 81 | 	byte	$91, $91, $8e, $8c, $8d, $8f, $91, $94, $93, $93, $91, $90, $8e, $89, $85, $81
12c91     7F 7E 7B 78 
12c95     74 6F 6B 68 
12c99     66 62 5C 54 
12c9d     4B 47 44 43 | 	byte	$7f, $7e, $7b, $78, $74, $6f, $6b, $68, $66, $62, $5c, $54, $4b, $47, $44, $43
12ca1     44 45 4A 50 
12ca5     58 5E 63 69 
12ca9     6F 76 7F 87 
12cad     8D 92 96 9C | 	byte	$44, $45, $4a, $50, $58, $5e, $63, $69, $6f, $76, $7f, $87, $8d, $92, $96, $9c
12cb1     A2 A7 AB AB 
12cb5     A8 A4 9E 97 
12cb9     8F 87 80 7C 
12cbd     78 75 70 6B | 	byte	$a2, $a7, $ab, $ab, $a8, $a4, $9e, $97, $8f, $87, $80, $7c, $78, $75, $70, $6b
12cc1     65 63 62 61 
12cc5     5F 5B 58 56 
12cc9     57 59 5B 5E 
12ccd     63 68 6D 71 | 	byte	$65, $63, $62, $61, $5f, $5b, $58, $56, $57, $59, $5b, $5e, $63, $68, $6d, $71
12cd1     72 74 75 77 
12cd5     7B 7E 7F 7F 
12cd9     7F 80 83 89 
12cdd     8E 91 93 94 | 	byte	$72, $74, $75, $77, $7b, $7e, $7f, $7f, $7f, $80, $83, $89, $8e, $91, $93, $94
12ce1     95 98 9C 9F 
12ce5     9F 9B 97 92 
12ce9     91 92 92 91 
12ced     8D 89 87 88 | 	byte	$95, $98, $9c, $9f, $9f, $9b, $97, $92, $91, $92, $92, $91, $8d, $89, $87, $88
12cf1     8C 91 94 95 
12cf5     94 95 97 9A 
12cf9     9C 9D 9B 98 
12cfd     94 92 93 94 | 	byte	$8c, $91, $94, $95, $94, $95, $97, $9a, $9c, $9d, $9b, $98, $94, $92, $93, $94
12d01     94 93 91 8F 
12d05     90 92 95 97 
12d09     98 97 96 95 
12d0d     91 8E 89 86 | 	byte	$94, $93, $91, $8f, $90, $92, $95, $97, $98, $97, $96, $95, $91, $8e, $89, $86
12d11     84 81 7F 7C 
12d15     76 71 6D 6A 
12d19     68 63 5D 56 
12d1d     4E 48 45 45 | 	byte	$84, $81, $7f, $7c, $76, $71, $6d, $6a, $68, $63, $5d, $56, $4e, $48, $45, $45
12d21     45 48 4D 53 
12d25     5A 60 67 6C 
12d29     72 7A 82 8A 
12d2d     8E 93 97 9D | 	byte	$45, $48, $4d, $53, $5a, $60, $67, $6c, $72, $7a, $82, $8a, $8e, $93, $97, $9d
12d31     A2 A7 A9 A8 
12d35     A6 A2 9B 94 
12d39     8C 84 7D 79 
12d3d     77 73 6E 69 | 	byte	$a2, $a7, $a9, $a8, $a6, $a2, $9b, $94, $8c, $84, $7d, $79, $77, $73, $6e, $69
12d41     66 63 62 61 
12d45     5F 5C 58 57 
12d49     58 59 5B 5E 
12d4d     62 66 6B 6E | 	byte	$66, $63, $62, $61, $5f, $5c, $58, $57, $58, $59, $5b, $5e, $62, $66, $6b, $6e
12d51     70 71 72 75 
12d55     78 7A 7C 7C 
12d59     7B 7D 80 85 
12d5d     89 8C 8E 8E | 	byte	$70, $71, $72, $75, $78, $7a, $7c, $7c, $7b, $7d, $80, $85, $89, $8c, $8e, $8e
12d61     91 94 98 9B 
12d65     9B 98 93 90 
12d69     8F 90 90 8F 
12d6d     8C 89 86 87 | 	byte	$91, $94, $98, $9b, $9b, $98, $93, $90, $8f, $90, $90, $8f, $8c, $89, $86, $87
12d71     8B 8F 92 93 
12d75     93 94 97 9A 
12d79     9E 9E 9D 99 
12d7d     96 95 96 97 | 	byte	$8b, $8f, $92, $93, $93, $94, $97, $9a, $9e, $9e, $9d, $99, $96, $95, $96, $97
12d81     97 95 94 92 
12d85     93 96 99 9B 
12d89     9B 9B 9A 98 
12d8d     96 92 8F 8B | 	byte	$97, $95, $94, $92, $93, $96, $99, $9b, $9b, $9b, $9a, $98, $96, $92, $8f, $8b
12d91     87 85 82 7E 
12d95     79 73 70 6C 
12d99     69 64 5E 56 
12d9d     4F 4A 48 47 | 	byte	$87, $85, $82, $7e, $79, $73, $70, $6c, $69, $64, $5e, $56, $4f, $4a, $48, $47
12da1     48 4A 4F 56 
12da5     5D 63 6A 6E 
12da9     75 7C 84 8B 
12dad     90 94 98 9C | 	byte	$48, $4a, $4f, $56, $5d, $63, $6a, $6e, $75, $7c, $84, $8b, $90, $94, $98, $9c
12db1     A2 A5 A7 A6 
12db5     A4 A0 9A 92 
12db9     8A 82 7B 79 
12dbd     76 71 6D 69 | 	byte	$a2, $a5, $a7, $a6, $a4, $a0, $9a, $92, $8a, $82, $7b, $79, $76, $71, $6d, $69
12dc1     65 63 63 62 
12dc5     60 5C 59 58 
12dc9     58 59 5B 5D 
12dcd     60 64 68 6B | 	byte	$65, $63, $63, $62, $60, $5c, $59, $58, $58, $59, $5b, $5d, $60, $64, $68, $6b
12dd1     6D 6E 70 72 
12dd5     75 77 78 78 
12dd9     79 79 7D 81 
12ddd     84 88 89 8A | 	byte	$6d, $6e, $70, $72, $75, $77, $78, $78, $79, $79, $7d, $81, $84, $88, $89, $8a
12de1     8C 8F 94 96 
12de5     96 93 90 8D 
12de9     8D 8D 8E 8C 
12ded     8A 86 85 87 | 	byte	$8c, $8f, $94, $96, $96, $93, $90, $8d, $8d, $8d, $8e, $8c, $8a, $86, $85, $87
12df1     8A 8E 91 92 
12df5     93 94 97 9B 
12df9     9E 9F 9D 9B 
12dfd     98 97 98 99 | 	byte	$8a, $8e, $91, $92, $93, $94, $97, $9b, $9e, $9f, $9d, $9b, $98, $97, $98, $99
12e01     99 98 96 94 
12e05     96 99 9B 9E 
12e09     9F 9E 9E 9D 
12e0d     9A 97 93 8E | 	byte	$99, $98, $96, $94, $96, $99, $9b, $9e, $9f, $9e, $9e, $9d, $9a, $97, $93, $8e
12e11     8B 88 84 80 
12e15     7A 76 72 6E 
12e19     6B 66 5F 58 
12e1d     51 4D 4B 49 | 	byte	$8b, $88, $84, $80, $7a, $76, $72, $6e, $6b, $66, $5f, $58, $51, $4d, $4b, $49
12e21     4A 4C 52 59 
12e25     60 67 6C 72 
12e29     78 80 87 8D 
12e2d     91 95 98 9D | 	byte	$4a, $4c, $52, $59, $60, $67, $6c, $72, $78, $80, $87, $8d, $91, $95, $98, $9d
12e31     A1 A5 A6 A5 
12e35     A1 9D 97 90 
12e39     87 80 7B 78 
12e3d     74 70 6D 68 | 	byte	$a1, $a5, $a6, $a5, $a1, $9d, $97, $90, $87, $80, $7b, $78, $74, $70, $6d, $68
12e41     65 64 63 63 
12e45     60 5D 5A 58 
12e49     58 59 5A 5C 
12e4d     5F 62 65 68 | 	byte	$65, $64, $63, $63, $60, $5d, $5a, $58, $58, $59, $5a, $5c, $5f, $62, $65, $68
12e51     6A 6C 6E 6F 
12e55     72 74 76 76 
12e59     76 78 7A 7C 
12e5d     81 83 85 86 | 	byte	$6a, $6c, $6e, $6f, $72, $74, $76, $76, $76, $78, $7a, $7c, $81, $83, $85, $86
12e61     88 8C 8F 91 
12e65     92 90 8D 8B 
12e69     8B 8B 8C 8B 
12e6d     88 86 85 86 | 	byte	$88, $8c, $8f, $91, $92, $90, $8d, $8b, $8b, $8b, $8c, $8b, $88, $86, $85, $86
12e71     89 8D 8F 90 
12e75     91 93 96 9A 
12e79     9D 9F 9E 9B 
12e7d     9A 99 9A 9B | 	byte	$89, $8d, $8f, $90, $91, $93, $96, $9a, $9d, $9f, $9e, $9b, $9a, $99, $9a, $9b
12e81     9B 9A 98 97 
12e85     99 9B 9F A1 
12e89     A1 A2 A1 A0 
12e8d     9E 9A 95 91 | 	byte	$9b, $9a, $98, $97, $99, $9b, $9f, $a1, $a1, $a2, $a1, $a0, $9e, $9a, $95, $91
12e91     8E 8B 87 82 
12e95     7D 77 73 6F 
12e99     6C 66 60 59 
12e9d     53 4F 4C 4B | 	byte	$8e, $8b, $87, $82, $7d, $77, $73, $6f, $6c, $66, $60, $59, $53, $4f, $4c, $4b
12ea1     4C 4F 55 5B 
12ea5     63 69 6F 75 
12ea9     7C 82 89 8E 
12ead     92 95 99 9D | 	byte	$4c, $4f, $55, $5b, $63, $69, $6f, $75, $7c, $82, $89, $8e, $92, $95, $99, $9d
12eb1     A1 A3 A4 A2 
12eb5     A0 9C 95 8D 
12eb9     86 7F 7A 76 
12ebd     73 70 6C 68 | 	byte	$a1, $a3, $a4, $a2, $a0, $9c, $95, $8d, $86, $7f, $7a, $76, $73, $70, $6c, $68
12ec1     65 64 64 63 
12ec5     61 5F 5B 5A 
12ec9     59 5A 5B 5D 
12ecd     5E 61 64 66 | 	byte	$65, $64, $64, $63, $61, $5f, $5b, $5a, $59, $5a, $5b, $5d, $5e, $61, $64, $66
12ed1     69 6A 6C 6F 
12ed5     70 72 73 73 
12ed9     74 75 77 7A 
12edd     7D 7F 80 81 | 	byte	$69, $6a, $6c, $6f, $70, $72, $73, $73, $74, $75, $77, $7a, $7d, $7f, $80, $81
12ee1     84 87 8A 8D 
12ee5     8E 8C 8A 89 
12ee9     89 89 89 89 
12eed     87 85 84 85 | 	byte	$84, $87, $8a, $8d, $8e, $8c, $8a, $89, $89, $89, $89, $89, $87, $85, $84, $85
12ef1     88 8B 8D 8E 
12ef5     8F 92 95 99 
12ef9     9D 9E 9E 9C 
12efd     9B 9B 9B 9C | 	byte	$88, $8b, $8d, $8e, $8f, $92, $95, $99, $9d, $9e, $9e, $9c, $9b, $9b, $9b, $9c
12f01     9D 9B 9A 9A 
12f05     9B 9E A1 A3 
12f09     A4 A4 A4 A3 
12f0d     A1 9D 99 95 | 	byte	$9d, $9b, $9a, $9a, $9b, $9e, $a1, $a3, $a4, $a4, $a4, $a3, $a1, $9d, $99, $95
12f11     91 8D 88 84 
12f15     7E 79 75 71 
12f19     6D 67 61 5B 
12f1d     55 50 4E 4E | 	byte	$91, $8d, $88, $84, $7e, $79, $75, $71, $6d, $67, $61, $5b, $55, $50, $4e, $4e
12f21     4F 52 58 5E 
12f25     66 6C 72 77 
12f29     7E 85 8B 90 
12f2d     93 96 99 9D | 	byte	$4f, $52, $58, $5e, $66, $6c, $72, $77, $7e, $85, $8b, $90, $93, $96, $99, $9d
12f31     A0 A2 A2 A1 
12f35     9E 99 93 8C 
12f39     84 7E 7A 76 
12f3d     73 6F 6C 68 | 	byte	$a0, $a2, $a2, $a1, $9e, $99, $93, $8c, $84, $7e, $7a, $76, $73, $6f, $6c, $68
12f41     66 65 65 64 
12f45     63 5F 5D 5B 
12f49     5A 5B 5B 5C 
12f4d     5D 5F 61 64 | 	byte	$66, $65, $65, $64, $63, $5f, $5d, $5b, $5a, $5b, $5b, $5c, $5d, $5f, $61, $64
12f51     66 68 6A 6C 
12f55     6D 70 71 72 
12f59     73 74 76 78 
12f5d     7A 7C 7D 7E | 	byte	$66, $68, $6a, $6c, $6d, $70, $71, $72, $73, $74, $76, $78, $7a, $7c, $7d, $7e
12f61     80 82 86 88 
12f65     89 88 88 87 
12f69     87 87 88 86 
12f6d     85 84 84 85 | 	byte	$80, $82, $86, $88, $89, $88, $88, $87, $87, $87, $88, $86, $85, $84, $84, $85
12f71     87 89 8C 8D 
12f75     8F 91 94 99 
12f79     9C 9D 9D 9C 
12f7d     9B 9C 9C 9E | 	byte	$87, $89, $8c, $8d, $8f, $91, $94, $99, $9c, $9d, $9d, $9c, $9b, $9c, $9c, $9e
12f81     9E 9D 9C 9C 
12f85     9D A0 A2 A5 
12f89     A6 A7 A7 A6 
12f8d     A4 A0 9C 97 | 	byte	$9e, $9d, $9c, $9c, $9d, $a0, $a2, $a5, $a6, $a7, $a7, $a6, $a4, $a0, $9c, $97
12f91     93 8E 8B 85 
12f95     7F 7A 76 71 
12f99     6D 68 62 5C 
12f9d     56 52 51 50 | 	byte	$93, $8e, $8b, $85, $7f, $7a, $76, $71, $6d, $68, $62, $5c, $56, $52, $51, $50
12fa1     51 55 5B 62 
12fa5     69 6F 74 7B 
12fa9     81 88 8C 91 
12fad     94 97 9A 9D | 	byte	$51, $55, $5b, $62, $69, $6f, $74, $7b, $81, $88, $8c, $91, $94, $97, $9a, $9d
12fb1     9F A1 A1 A0 
12fb5     9C 98 92 8B 
12fb9     83 7D 79 76 
12fbd     72 6F 6B 68 | 	byte	$9f, $a1, $a1, $a0, $9c, $98, $92, $8b, $83, $7d, $79, $76, $72, $6f, $6b, $68
12fc1     66 66 66 66 
12fc5     63 61 5E 5C 
12fc9     5B 5B 5C 5C 
12fcd     5D 5E 61 63 | 	byte	$66, $66, $66, $66, $63, $61, $5e, $5c, $5b, $5b, $5c, $5c, $5d, $5e, $61, $63
12fd1     64 67 68 6A 
12fd5     6C 6E 6F 70 
12fd9     71 73 74 76 
12fdd     77 79 7A 7B | 	byte	$64, $67, $68, $6a, $6c, $6e, $6f, $70, $71, $73, $74, $76, $77, $79, $7a, $7b
12fe1     7D 80 82 85 
12fe5     85 85 84 84 
12fe9     85 85 86 85 
12fed     84 83 83 84 | 	byte	$7d, $80, $82, $85, $85, $85, $84, $84, $85, $85, $86, $85, $84, $83, $83, $84
12ff1     86 88 8A 8C 
12ff5     8D 8F 93 97 
12ff9     9A 9C 9C 9B 
12ffd     9B 9C 9D 9E | 	byte	$86, $88, $8a, $8c, $8d, $8f, $93, $97, $9a, $9c, $9c, $9b, $9b, $9c, $9d, $9e
13001     9F 9E 9D 9D 
13005     9F A1 A5 A7 
13009     A8 A8 A9 A8 
1300d     A6 A3 9E 99 | 	byte	$9f, $9e, $9d, $9d, $9f, $a1, $a5, $a7, $a8, $a8, $a9, $a8, $a6, $a3, $9e, $99
13011     94 91 8C 86 
13015     80 7B 76 72 
13019     6D 69 63 5C 
1301d     58 55 52 52 | 	byte	$94, $91, $8c, $86, $80, $7b, $76, $72, $6d, $69, $63, $5c, $58, $55, $52, $52
13021     54 58 5E 65 
13025     6C 72 78 7E 
13029     84 89 8E 92 
1302d     95 97 9A 9C | 	byte	$54, $58, $5e, $65, $6c, $72, $78, $7e, $84, $89, $8e, $92, $95, $97, $9a, $9c
13031     9F A0 A0 9E 
13035     9A 96 90 8A 
13039     83 7D 79 75 
1303d     72 6F 6C 69 | 	byte	$9f, $a0, $a0, $9e, $9a, $96, $90, $8a, $83, $7d, $79, $75, $72, $6f, $6c, $69
13041     67 67 67 66 
13045     65 61 60 5E 
13049     5E 5D 5D 5C 
1304d     5D 5E 5F 61 | 	byte	$67, $67, $67, $66, $65, $61, $60, $5e, $5e, $5d, $5d, $5c, $5d, $5e, $5f, $61
13051     64 65 67 69 
13055     6A 6C 6D 6F 
13059     71 72 73 74 
1305d     75 77 78 79 | 	byte	$64, $65, $67, $69, $6a, $6c, $6d, $6f, $71, $72, $73, $74, $75, $77, $78, $79
13061     7B 7C 7F 80 
13065     81 81 81 82 
13069     83 83 84 83 
1306d     83 82 83 84 | 	byte	$7b, $7c, $7f, $80, $81, $81, $81, $82, $83, $83, $84, $83, $83, $82, $83, $84
13071     86 87 89 8A 
13075     8B 8E 91 94 
13079     98 9A 9B 9B 
1307d     9B 9C 9D 9E | 	byte	$86, $87, $89, $8a, $8b, $8e, $91, $94, $98, $9a, $9b, $9b, $9b, $9c, $9d, $9e
13081     9F 9E 9E 9E 
13085     A0 A3 A5 A7 
13089     A9 AA AA A9 
1308d     A8 A4 9F 9A | 	byte	$9f, $9e, $9e, $9e, $a0, $a3, $a5, $a7, $a9, $aa, $aa, $a9, $a8, $a4, $9f, $9a
13091     96 91 8C 86 
13095     81 7B 77 72 
13099     6E 69 63 5D 
1309d     5A 56 54 55 | 	byte	$96, $91, $8c, $86, $81, $7b, $77, $72, $6e, $69, $63, $5d, $5a, $56, $54, $55
130a1     56 5A 61 68 
130a5     6E 75 7B 81 
130a9     86 8C 91 94 
130ad     96 98 9A 9D | 	byte	$56, $5a, $61, $68, $6e, $75, $7b, $81, $86, $8c, $91, $94, $96, $98, $9a, $9d
130b1     9E 9F 9E 9D 
130b5     99 96 90 8A 
130b9     83 7E 7A 76 
130bd     72 70 6D 6A | 	byte	$9e, $9f, $9e, $9d, $99, $96, $90, $8a, $83, $7e, $7a, $76, $72, $70, $6d, $6a
130c1     69 68 69 68 
130c5     66 63 62 60 
130c9     5F 5F 5E 5D 
130cd     5D 5D 5E 61 | 	byte	$69, $68, $69, $68, $66, $63, $62, $60, $5f, $5f, $5e, $5d, $5d, $5d, $5e, $61
130d1     62 64 66 68 
130d5     6A 6B 6C 6F 
130d9     70 71 72 73 
130dd     74 75 76 77 | 	byte	$62, $64, $66, $68, $6a, $6b, $6c, $6f, $70, $71, $72, $73, $74, $75, $76, $77
130e1     78 7A 7B 7C 
130e5     7E 7E 7E 7F 
130e9     80 81 81 81 
130ed     81 82 82 83 | 	byte	$78, $7a, $7b, $7c, $7e, $7e, $7e, $7f, $80, $81, $81, $81, $81, $82, $82, $83
130f1     84 85 86 87 
130f5     89 8C 8F 93 
130f9     96 98 99 9A 
130fd     9B 9C 9D 9E | 	byte	$84, $85, $86, $87, $89, $8c, $8f, $93, $96, $98, $99, $9a, $9b, $9c, $9d, $9e
13101     9F 9F 9E 9F 
13105     A1 A3 A6 A9 
13109     AA AB AB AB 
1310d     A9 A5 A0 9C | 	byte	$9f, $9f, $9e, $9f, $a1, $a3, $a6, $a9, $aa, $ab, $ab, $ab, $a9, $a5, $a0, $9c
13111     97 92 8C 86 
13115     81 7B 76 72 
13119     6E 69 63 5F 
1311d     5B 58 56 57 | 	byte	$97, $92, $8c, $86, $81, $7b, $76, $72, $6e, $69, $63, $5f, $5b, $58, $56, $57
13121     59 5D 64 6A 
13125     71 78 7E 83 
13129     89 8E 92 94 
1312d     97 98 9B 9C | 	byte	$59, $5d, $64, $6a, $71, $78, $7e, $83, $89, $8e, $92, $94, $97, $98, $9b, $9c
13131     9D 9E 9D 9C 
13135     99 95 8F 8A 
13139     84 7E 7B 77 
1313d     74 71 6D 6C | 	byte	$9d, $9e, $9d, $9c, $99, $95, $8f, $8a, $84, $7e, $7b, $77, $74, $71, $6d, $6c
13141     6A 6A 6A 69 
13145     68 66 63 62 
13149     61 61 60 5E 
1314d     5D 5D 5F 60 | 	byte	$6a, $6a, $6a, $69, $68, $66, $63, $62, $61, $61, $60, $5e, $5d, $5d, $5f, $60
13151     62 64 65 67 
13155     68 6A 6C 6E 
13159     70 71 72 73 
1315d     74 74 75 76 | 	byte	$62, $64, $65, $67, $68, $6a, $6c, $6e, $70, $71, $72, $73, $74, $74, $75, $76
13161     77 78 78 7A 
13165     7B 7B 7C 7D 
13169     7E 7F 7F 80 
1316d     80 81 81 82 | 	byte	$77, $78, $78, $7a, $7b, $7b, $7c, $7d, $7e, $7f, $7f, $80, $80, $81, $81, $82
13171     83 84 84 86 
13175     87 89 8D 90 
13179     93 95 96 98 
1317d     99 9A 9C 9E | 	byte	$83, $84, $84, $86, $87, $89, $8d, $90, $93, $95, $96, $98, $99, $9a, $9c, $9e
13181     9E 9E 9E 9F 
13185     A2 A4 A7 A9 
13189     AB AC AC AC 
1318d     AA A6 A1 9C | 	byte	$9e, $9e, $9e, $9f, $a2, $a4, $a7, $a9, $ab, $ac, $ac, $ac, $aa, $a6, $a1, $9c
13191     97 91 8C 86 
13195     80 7B 77 72 
13199     6D 68 64 5F 
1319d     5C 59 58 59 | 	byte	$97, $91, $8c, $86, $80, $7b, $77, $72, $6d, $68, $64, $5f, $5c, $59, $58, $59
131a1     5C 60 66 6D 
131a5     74 7B 80 86 
131a9     8B 90 93 95 
131ad     97 99 9B 9C | 	byte	$5c, $60, $66, $6d, $74, $7b, $80, $86, $8b, $90, $93, $95, $97, $99, $9b, $9c
131b1     9E 9E 9D 9B 
131b5     98 94 90 8A 
131b9     84 7F 7C 78 
131bd     75 71 6F 6D | 	byte	$9e, $9e, $9d, $9b, $98, $94, $90, $8a, $84, $7f, $7c, $78, $75, $71, $6f, $6d
131c1     6C 6C 6C 6B 
131c5     6A 67 66 65 
131c9     64 63 62 60 
131cd     5F 5E 5F 60 | 	byte	$6c, $6c, $6c, $6b, $6a, $67, $66, $65, $64, $63, $62, $60, $5f, $5e, $5f, $60
131d1     62 64 65 67 
131d5     68 6A 6C 6E 
131d9     70 71 72 72 
131dd     73 74 75 75 | 	byte	$62, $64, $65, $67, $68, $6a, $6c, $6e, $70, $71, $72, $72, $73, $74, $75, $75
131e1     75 76 76 77 
131e5     78 79 7A 7B 
131e9     7B 7C 7D 7D 
131ed     7E 7F 80 80 | 	byte	$75, $76, $76, $77, $78, $79, $7a, $7b, $7b, $7c, $7d, $7d, $7e, $7f, $80, $80
131f1     81 82 82 83 
131f5     84 87 8A 8E 
131f9     90 92 94 95 
131fd     97 99 9B 9D | 	byte	$81, $82, $82, $83, $84, $87, $8a, $8e, $90, $92, $94, $95, $97, $99, $9b, $9d
13201     9D 9E 9E 9F 
13205     A1 A5 A7 A9 
13209     AB AC AC AC 
1320d     AA A6 A2 9C | 	byte	$9d, $9e, $9e, $9f, $a1, $a5, $a7, $a9, $ab, $ac, $ac, $ac, $aa, $a6, $a2, $9c
13211     97 92 8C 86 
13215     80 7B 76 72 
13219     6D 69 64 60 
1321d     5D 5B 5A 5B | 	byte	$97, $92, $8c, $86, $80, $7b, $76, $72, $6d, $69, $64, $60, $5d, $5b, $5a, $5b
13221     5E 62 69 70 
13225     77 7D 82 88 
13229     8D 91 94 96 
1322d     98 99 9A 9C | 	byte	$5e, $62, $69, $70, $77, $7d, $82, $88, $8d, $91, $94, $96, $98, $99, $9a, $9c
13231     9D 9D 9C 9A 
13235     97 95 90 8B 
13239     85 81 7C 79 
1323d     76 73 71 6F | 	byte	$9d, $9d, $9c, $9a, $97, $95, $90, $8b, $85, $81, $7c, $79, $76, $73, $71, $6f
13241     6E 6E 6E 6E 
13245     6C 6A 69 67 
13249     66 65 64 62 
1324d     60 5F 60 61 | 	byte	$6e, $6e, $6e, $6e, $6c, $6a, $69, $67, $66, $65, $64, $62, $60, $5f, $60, $61
13251     62 64 65 67 
13255     68 6A 6C 6F 
13259     71 72 73 73 
1325d     73 74 74 75 | 	byte	$62, $64, $65, $67, $68, $6a, $6c, $6f, $71, $72, $73, $73, $73, $74, $74, $75
13261     74 74 74 74 
13265     76 77 77 78 
13269     79 7B 7B 7B 
1326d     7D 7D 7E 7F | 	byte	$74, $74, $74, $74, $76, $77, $77, $78, $79, $7b, $7b, $7b, $7d, $7d, $7e, $7f
13271     7F 80 80 81 
13275     83 84 87 8A 
13279     8D 90 91 93 
1327d     95 97 9A 9B | 	byte	$7f, $80, $80, $81, $83, $84, $87, $8a, $8d, $90, $91, $93, $95, $97, $9a, $9b
13281     9C 9D 9E 9F 
13285     A2 A4 A7 A9 
13289     AA AC AC AC 
1328d     AA A6 A1 9C | 	byte	$9c, $9d, $9e, $9f, $a2, $a4, $a7, $a9, $aa, $ac, $ac, $ac, $aa, $a6, $a1, $9c
13291     97 90 8A 85 
13295     7F 7A 75 71 
13299     6D 68 64 60 
1329d     5E 5D 5C 5E | 	byte	$97, $90, $8a, $85, $7f, $7a, $75, $71, $6d, $68, $64, $60, $5e, $5d, $5c, $5e
132a1     60 65 6C 73 
132a5     79 7F 85 8B 
132a9     8E 93 95 98 
132ad     99 9A 9B 9C | 	byte	$60, $65, $6c, $73, $79, $7f, $85, $8b, $8e, $93, $95, $98, $99, $9a, $9b, $9c
132b1     9D 9D 9C 9A 
132b5     98 95 90 8B 
132b9     87 82 7E 7B 
132bd     78 76 72 71 | 	byte	$9d, $9d, $9c, $9a, $98, $95, $90, $8b, $87, $82, $7e, $7b, $78, $76, $72, $71
132c1     71 70 70 70 
132c5     6F 6D 6B 6A 
132c9     69 68 67 64 
132cd     62 62 62 62 | 	byte	$71, $70, $70, $70, $6f, $6d, $6b, $6a, $69, $68, $67, $64, $62, $62, $62, $62
132d1     64 65 66 67 
132d5     69 6A 6D 6F 
132d9     71 72 73 73 
132dd     74 74 75 74 | 	byte	$64, $65, $66, $67, $69, $6a, $6d, $6f, $71, $72, $73, $73, $74, $74, $75, $74
132e1     74 73 72 73 
132e5     73 74 75 76 
132e9     77 78 78 7A 
132ed     7A 7C 7C 7C | 	byte	$74, $73, $72, $73, $73, $74, $75, $76, $77, $78, $78, $7a, $7a, $7c, $7c, $7c
132f1     7D 7D 7D 7E 
132f5     7F 81 83 86 
132f9     8A 8C 8E 90 
132fd     92 95 98 99 | 	byte	$7d, $7d, $7d, $7e, $7f, $81, $83, $86, $8a, $8c, $8e, $90, $92, $95, $98, $99
13301     9B 9C 9D 9F 
13305     A1 A4 A6 A8 
13309     AA AB AC AB 
1330d     A9 A5 A1 9C | 	byte	$9b, $9c, $9d, $9f, $a1, $a4, $a6, $a8, $aa, $ab, $ac, $ab, $a9, $a5, $a1, $9c
13311     96 8F 8A 83 
13315     7D 78 75 71 
13319     6C 68 64 61 
1331d     60 5E 5E 5F | 	byte	$96, $8f, $8a, $83, $7d, $78, $75, $71, $6c, $68, $64, $61, $60, $5e, $5e, $5f
13321     63 68 6F 75 
13325     7C 82 87 8C 
13329     90 94 97 98 
1332d     99 9B 9B 9C | 	byte	$63, $68, $6f, $75, $7c, $82, $87, $8c, $90, $94, $97, $98, $99, $9b, $9b, $9c
13331     9C 9C 9B 99 
13335     98 94 90 8C 
13339     88 83 7F 7D 
1333d     7A 77 75 73 | 	byte	$9c, $9c, $9b, $99, $98, $94, $90, $8c, $88, $83, $7f, $7d, $7a, $77, $75, $73
13341     73 72 72 72 
13345     71 6F 6E 6D 
13349     6C 6B 69 67 
1334d     65 63 63 64 | 	byte	$73, $72, $72, $72, $71, $6f, $6e, $6d, $6c, $6b, $69, $67, $65, $63, $63, $64
13351     65 66 67 68 
13355     69 6C 6E 71 
13359     72 73 73 74 
1335d     74 75 75 75 | 	byte	$65, $66, $67, $68, $69, $6c, $6e, $71, $72, $73, $73, $74, $74, $75, $75, $75
13361     73 73 71 71 
13365     72 73 74 74 
13369     75 75 76 77 
1336d     78 79 7A 7A | 	byte	$73, $73, $71, $71, $72, $73, $74, $74, $75, $75, $76, $77, $78, $79, $7a, $7a
13371     7A 7A 7B 7B 
13375     7D 7E 7F 83 
13379     86 88 8B 8D 
1337d     91 93 95 98 | 	byte	$7a, $7a, $7b, $7b, $7d, $7e, $7f, $83, $86, $88, $8b, $8d, $91, $93, $95, $98
13381     99 9A 9C 9E 
13385     A1 A3 A5 A8 
13389     A9 AA AB AA 
1338d     A8 A5 A0 9A | 	byte	$99, $9a, $9c, $9e, $a1, $a3, $a5, $a8, $a9, $aa, $ab, $aa, $a8, $a5, $a0, $9a
13391     94 8F 88 82 
13395     7C 78 74 70 
13399     6C 68 65 62 
1339d     60 60 60 62 | 	byte	$94, $8f, $88, $82, $7c, $78, $74, $70, $6c, $68, $65, $62, $60, $60, $60, $62
133a1     65 6B 71 77 
133a5     7D 84 88 8E 
133a9     92 96 97 98 
133ad     9A 9A 9B 9C | 	byte	$65, $6b, $71, $77, $7d, $84, $88, $8e, $92, $96, $97, $98, $9a, $9a, $9b, $9c
133b1     9C 9B 9B 99 
133b5     97 95 92 8E 
133b9     89 85 82 80 
133bd     7C 79 77 75 | 	byte	$9c, $9b, $9b, $99, $97, $95, $92, $8e, $89, $85, $82, $80, $7c, $79, $77, $75
133c1     75 75 75 74 
133c5     73 72 71 70 
133c9     6F 6E 6C 6A 
133cd     67 66 66 66 | 	byte	$75, $75, $75, $74, $73, $72, $71, $70, $6f, $6e, $6c, $6a, $67, $66, $66, $66
133d1     67 68 68 69 
133d5     6B 6C 6F 71 
133d9     73 74 74 74 
133dd     75 75 75 74 | 	byte	$67, $68, $68, $69, $6b, $6c, $6f, $71, $73, $74, $74, $74, $75, $75, $75, $74
133e1     73 71 70 70 
133e5     70 71 72 72 
133e9     72 73 74 75 
133ed     76 77 77 78 | 	byte	$73, $71, $70, $70, $70, $71, $72, $72, $72, $73, $74, $75, $76, $77, $77, $78
133f1     78 78 78 79 
133f5     79 7A 7D 7F 
133f9     82 85 88 8B 
133fd     8D 90 94 96 | 	byte	$78, $78, $78, $79, $79, $7a, $7d, $7f, $82, $85, $88, $8b, $8d, $90, $94, $96
13401     97 99 9B 9D 
13405     A0 A2 A5 A7 
13409     A8 AA AA A9 
1340d     A7 A3 9E 99 | 	byte	$97, $99, $9b, $9d, $a0, $a2, $a5, $a7, $a8, $aa, $aa, $a9, $a7, $a3, $9e, $99
13411     93 8C 86 80 
13415     7B 77 73 6F 
13419     6C 68 65 62 
1341d     61 61 61 63 | 	byte	$93, $8c, $86, $80, $7b, $77, $73, $6f, $6c, $68, $65, $62, $61, $61, $61, $63
13421     68 6D 73 79 
13425     7F 84 8A 8F 
13429     93 96 98 99 
1342d     9A 9A 9B 9B | 	byte	$68, $6d, $73, $79, $7f, $84, $8a, $8f, $93, $96, $98, $99, $9a, $9a, $9b, $9b
13431     9C 9B 9A 99 
13435     98 95 92 8E 
13439     8A 87 84 81 
1343d     7E 7C 7A 78 | 	byte	$9c, $9b, $9a, $99, $98, $95, $92, $8e, $8a, $87, $84, $81, $7e, $7c, $7a, $78
13441     78 78 78 77 
13445     77 75 74 73 
13449     72 71 6F 6C 
1344d     6B 69 68 68 | 	byte	$78, $78, $78, $77, $77, $75, $74, $73, $72, $71, $6f, $6c, $6b, $69, $68, $68
13451     69 6A 6A 6B 
13455     6C 6E 70 72 
13459     74 75 75 75 
1345d     75 76 75 75 | 	byte	$69, $6a, $6a, $6b, $6c, $6e, $70, $72, $74, $75, $75, $75, $75, $76, $75, $75
13461     72 71 70 6F 
13465     6F 6F 6F 70 
13469     70 71 71 73 
1346d     74 75 75 75 | 	byte	$72, $71, $70, $6f, $6f, $6f, $6f, $70, $70, $71, $71, $73, $74, $75, $75, $75
13471     75 75 75 76 
13475     76 77 79 7B 
13479     7E 81 85 88 
1347d     8B 8F 91 93 | 	byte	$75, $75, $75, $76, $76, $77, $79, $7b, $7e, $81, $85, $88, $8b, $8f, $91, $93
13481     96 97 9A 9C 
13485     9E A2 A4 A5 
13489     A7 A8 A9 A8 
1348d     A6 A1 9C 97 | 	byte	$96, $97, $9a, $9c, $9e, $a2, $a4, $a5, $a7, $a8, $a9, $a8, $a6, $a1, $9c, $97
13491     91 8B 84 7F 
13495     7A 75 72 6F 
13499     6B 68 65 64 
1349d     62 63 63 65 | 	byte	$91, $8b, $84, $7f, $7a, $75, $72, $6f, $6b, $68, $65, $64, $62, $63, $63, $65
134a1     69 6F 75 7B 
134a5     81 86 8C 91 
134a9     94 96 98 99 
134ad     9A 9B 9B 9C | 	byte	$69, $6f, $75, $7b, $81, $86, $8c, $91, $94, $96, $98, $99, $9a, $9b, $9b, $9c
134b1     9C 9B 9A 99 
134b5     98 96 93 8F 
134b9     8D 8A 86 84 
134bd     81 7E 7C 7B | 	byte	$9c, $9b, $9a, $99, $98, $96, $93, $8f, $8d, $8a, $86, $84, $81, $7e, $7c, $7b
134c1     7A 7A 7A 7A 
134c5     79 77 77 76 
134c9     75 74 72 70 
134cd     6E 6C 6C 6B | 	byte	$7a, $7a, $7a, $7a, $79, $77, $77, $76, $75, $74, $72, $70, $6e, $6c, $6c, $6b
134d1     6C 6C 6C 6C 
134d5     6E 6F 71 73 
134d9     75 75 75 76 
134dd     76 76 76 74 | 	byte	$6c, $6c, $6c, $6c, $6e, $6f, $71, $73, $75, $75, $75, $76, $76, $76, $76, $74
134e1     73 71 6F 6E 
134e5     6E 6E 6E 6E 
134e9     6E 6E 70 70 
134ed     72 72 73 73 | 	byte	$73, $71, $6f, $6e, $6e, $6e, $6e, $6e, $6e, $6e, $70, $70, $72, $72, $73, $73
134f1     73 73 73 73 
134f5     73          | 	byte	$73[5]
134f6     74 75 78 7B 
134fa     7D 81 84 88 
134fe     8C 8F 92 94 
13502     97 99 9B 9E | 	byte	$74, $75, $78, $7b, $7d, $81, $84, $88, $8c, $8f, $92, $94, $97, $99, $9b, $9e
13506     A0 A2 A5 A6 
1350a     A8 A8 A7 A3 
1350e     A0 9B 95 8F 
13512     89 83 7D 78 | 	byte	$a0, $a2, $a5, $a6, $a8, $a8, $a7, $a3, $a0, $9b, $95, $8f, $89, $83, $7d, $78
13516     74 71 6D 6A 
1351a     67 66 64 63 
1351e     64 64 67 6C 
13522     71 76 7C 83 | 	byte	$74, $71, $6d, $6a, $67, $66, $64, $63, $64, $64, $67, $6c, $71, $76, $7c, $83
13526     88 8D 91 94 
1352a     97 99 99 9A 
1352e     9B 9B 9B 9B 
13532     9B 9A 99 98 | 	byte	$88, $8d, $91, $94, $97, $99, $99, $9a, $9b, $9b, $9b, $9b, $9b, $9a, $99, $98
13536     96 93 91 8E 
1353a     8B 88 86 83 
1353e     81 7E 7E 7D 
13542     7D 7D 7C 7B | 	byte	$96, $93, $91, $8e, $8b, $88, $86, $83, $81, $7e, $7e, $7d, $7d, $7d, $7c, $7b
13546     7A 79 79 79 
1354a     77 75 73 71 
1354e     6F 6E 6E 6E 
13552     6E 6E 6F 70 | 	byte	$7a, $79, $79, $79, $77, $75, $73, $71, $6f, $6e, $6e, $6e, $6e, $6e, $6f, $70
13556     71 73 75 75 
1355a     76 77 77 77 
1355e     77 77 75 73 
13562     71 6F 6E 6D | 	byte	$71, $73, $75, $75, $76, $77, $77, $77, $77, $77, $75, $73, $71, $6f, $6e, $6d
13566     6D 6C 6C 6C 
1356a     6D 6D 6E 6F 
1356e     70 70 70 70 
13572     70 70 70 70 | 	byte	$6d, $6c, $6c, $6c, $6d, $6d, $6e, $6f, $70, $70, $70, $70, $70, $70, $70, $70
13576     71 72 74 77 
1357a     7A 7E 82 85 
1357e     89 8D 90 93 
13582     95 97 9B 9D | 	byte	$71, $72, $74, $77, $7a, $7e, $82, $85, $89, $8d, $90, $93, $95, $97, $9b, $9d
13586     9F A2 A3 A5 
1358a     A6 A6 A5 A2 
1358e     9E 99 93 8D 
13592     87 81 7B 76 | 	byte	$9f, $a2, $a3, $a5, $a6, $a6, $a5, $a2, $9e, $99, $93, $8d, $87, $81, $7b, $76
13596     73 6F 6D 69 
1359a     68 66 65 64 
1359e     65 66 69 6D 
135a2     72 78 7E 84 | 	byte	$73, $6f, $6d, $69, $68, $66, $65, $64, $65, $66, $69, $6d, $72, $78, $7e, $84
135a6     88 8D 91 95 
135aa     97 99 9A 9A 
135ae     9A 9B 9B 9B 
135b2     9B 9A 99 98 | 	byte	$88, $8d, $91, $95, $97, $99, $9a, $9a, $9a, $9b, $9b, $9b, $9b, $9a, $99, $98
135b6     96 95 92 90 
135ba     8D 8B 88 86 
135be     83 82 81 80 
135c2     80 7F 7F 7E | 	byte	$96, $95, $92, $90, $8d, $8b, $88, $86, $83, $82, $81, $80, $80, $7f, $7f, $7e
135c6     7D 7C 7C 7B 
135ca     7A 79 76 74 
135ce     72 71 71 70 
135d2     70 70 70 71 | 	byte	$7d, $7c, $7c, $7b, $7a, $79, $76, $74, $72, $71, $71, $70, $70, $70, $70, $71
135d6     73 74 75 76 
135da     76 77 77 77 
135de     77 76 75 73 
135e2     71 6F 6E 6D | 	byte	$73, $74, $75, $76, $76, $77, $77, $77, $77, $76, $75, $73, $71, $6f, $6e, $6d
135e6     6D 6C 6B 6B 
135ea     6B 6C 6C 6D 
135ee     6D 6E 6E 6E 
135f2     6E 6E 6E 6E | 	byte	$6d, $6c, $6b, $6b, $6b, $6c, $6c, $6d, $6d, $6e, $6e, $6e, $6e, $6e, $6e, $6e
135f6     6E 6F 71 74 
135fa     77 7C 7F 83 
135fe     87 8B 8D 91 
13602     93 97 99 9C | 	byte	$6e, $6f, $71, $74, $77, $7c, $7f, $83, $87, $8b, $8d, $91, $93, $97, $99, $9c
13606     9F A1 A3 A4 
1360a     A5 A5 A4 A1 
1360e     9C 97 91 8B 
13612     85 7F 7A 76 | 	byte	$9f, $a1, $a3, $a4, $a5, $a5, $a4, $a1, $9c, $97, $91, $8b, $85, $7f, $7a, $76
13616     72 6F 6B 69 
1361a     68 66 65 65 
1361e     66 67 6B 6F 
13622     73 79 7F 84 | 	byte	$72, $6f, $6b, $69, $68, $66, $65, $65, $66, $67, $6b, $6f, $73, $79, $7f, $84
13626     89 8E 92 95 
1362a     97 99 99 9A 
1362e     9A 9B 9A 9B 
13632     9A 9A 99 98 | 	byte	$89, $8e, $92, $95, $97, $99, $99, $9a, $9a, $9b, $9a, $9b, $9a, $9a, $99, $98
13636     97 95 93 91 
1363a     8F 8D 8A 87 
1363e     86 84 83 83 
13642     82 82 81 80 | 	byte	$97, $95, $93, $91, $8f, $8d, $8a, $87, $86, $84, $83, $83, $82, $82, $81, $80
13646     80 7F 7E 7D 
1364a     7D 7A 79 77 
1364e     76 74 74 73 
13652     73 72 72 73 | 	byte	$80, $7f, $7e, $7d, $7d, $7a, $79, $77, $76, $74, $74, $73, $73, $72, $72, $73
13656     74 75 77 77 
1365a     77 78 78 78 
1365e     77 77 75 73 
13662     71 6F 6E 6C | 	byte	$74, $75, $77, $77, $77, $78, $78, $78, $77, $77, $75, $73, $71, $6f, $6e, $6c
13666     6B 6B 6A 69 
1366a     69 6A 6A 6B 
1366e     6C 6B 6B 6B 
13672     6C 6C 6C 6C | 	byte	$6b, $6b, $6a, $69, $69, $6a, $6a, $6b, $6c, $6b, $6b, $6b, $6c, $6c, $6c, $6c
13676     6C 6D 6F 71 
1367a     75 78 7C 81 
1367e     85 89 8C 8F 
13682     93 95 98 9B | 	byte	$6c, $6d, $6f, $71, $75, $78, $7c, $81, $85, $89, $8c, $8f, $93, $95, $98, $9b
13686     9D A0 A1 A2 
1368a     A4 A3 A2 9F 
1368e     9A 94 8F 89 
13692     83 7D 79 74 | 	byte	$9d, $a0, $a1, $a2, $a4, $a3, $a2, $9f, $9a, $94, $8f, $89, $83, $7d, $79, $74
13696     71 6D 6B 69 
1369a     68 67 67 67 
1369e     68 69 6C 70 
136a2     75 7B 80 85 | 	byte	$71, $6d, $6b, $69, $68, $67, $67, $67, $68, $69, $6c, $70, $75, $7b, $80, $85
136a6     8A 8F 92 95 
136aa     97 99 99 99 
136ae     9A 9A 9A 9A 
136b2     9A 99 99 98 | 	byte	$8a, $8f, $92, $95, $97, $99, $99, $99, $9a, $9a, $9a, $9a, $9a, $99, $99, $98
136b6     97 96 94 93 
136ba     90 8E 8C 8A 
136be     89 86 86 85 
136c2     84 84 83 82 | 	byte	$97, $96, $94, $93, $90, $8e, $8c, $8a, $89, $86, $86, $85, $84, $84, $83, $82
136c6     82 81 81 80 
136ca     7E 7D 7B 7A 
136ce     78 77 76 75 
136d2     75 74 74 75 | 	byte	$82, $81, $81, $80, $7e, $7d, $7b, $7a, $78, $77, $76, $75, $75, $74, $74, $75
136d6     75 77 78 78 
136da     78 78 78 78 
136de     78 77 76 73 
136e2     71 70 6E 6C | 	byte	$75, $77, $78, $78, $78, $78, $78, $78, $78, $77, $76, $73, $71, $70, $6e, $6c
136e6     6B 6A 69 68 
136ea     68 68 69 69 
136ee     69 69 69 69 
136f2     69 69 69 69 | 	byte	$6b, $6a, $69, $68, $68, $68, $69, $69, $69, $69, $69, $69, $69, $69, $69, $69
136f6     69 6A 6C 70 
136fa     72 76 7B 80 
136fe     83 88 8B 8F 
13702     92 94 98 9A | 	byte	$69, $6a, $6c, $70, $72, $76, $7b, $80, $83, $88, $8b, $8f, $92, $94, $98, $9a
13706     9C 9F A0 A2 
1370a     A2 A2 A0 9D 
1370e     98 93 8D 87 
13712     81 7C 76 72 | 	byte	$9c, $9f, $a0, $a2, $a2, $a2, $a0, $9d, $98, $93, $8d, $87, $81, $7c, $76, $72
13716     6F 6D 6B 69 
1371a     68 67 67 68 
1371e     69 6B 6D 71 
13722     76 7B 80 86 | 	byte	$6f, $6d, $6b, $69, $68, $67, $67, $68, $69, $6b, $6d, $71, $76, $7b, $80, $86
13726     8B 8E 92 95 
1372a     97 98 99 99 
1372e     99 9A 9A 9A 
13732     99 99 98 98 | 	byte	$8b, $8e, $92, $95, $97, $98, $99, $99, $99, $9a, $9a, $9a, $99, $99, $98, $98
13736     97 96 95 93 
1373a     92 8F 8E 8C 
1373e     8A 89 88 87 
13742     87 85 85 84 | 	byte	$97, $96, $95, $93, $92, $8f, $8e, $8c, $8a, $89, $88, $87, $87, $85, $85, $84
13746     84 83 83 82 
1374a     81 7F 7E 7C 
1374e     7B 7A 79 78 
13752     77 76 76 76 | 	byte	$84, $83, $83, $82, $81, $7f, $7e, $7c, $7b, $7a, $79, $78, $77, $76, $76, $76
13756     77 78 78 79 
1375a     79 79 79 79 
1375e     79 78 76 74 
13762     72 70 6E 6D | 	byte	$77, $78, $78, $79, $79, $79, $79, $79, $79, $78, $76, $74, $72, $70, $6e, $6d
13766     6B 6A 68 67 
1376a     67 67 68 68 
1376e     68 67 67 67 
13772     67 67 67 67 | 	byte	$6b, $6a, $68, $67, $67, $67, $68, $68, $68, $67, $67, $67, $67, $67, $67, $67
13776     67 68 6B 6D 
1377a     70 74 79 7D 
1377e     82 87 8B 8E 
13782     91 94 97 99 | 	byte	$67, $68, $6b, $6d, $70, $74, $79, $7d, $82, $87, $8b, $8e, $91, $94, $97, $99
13786     9C 9E A0 A1 
1378a     A1 A0 9E 9B 
1378e     96 91 8B 85 
13792     7F 7A 75 71 | 	byte	$9c, $9e, $a0, $a1, $a1, $a0, $9e, $9b, $96, $91, $8b, $85, $7f, $7a, $75, $71
13796     6F 6D 6A 69 
1379a     68 67 68 69 
1379e     6A 6B 6F 72 
137a2     76 7B 81 86 | 	byte	$6f, $6d, $6a, $69, $68, $67, $68, $69, $6a, $6b, $6f, $72, $76, $7b, $81, $86
137a6     8A 8E 92 94 
137aa     96 98 98 98 
137ae     98 99 99 99 
137b2     99 98 98 98 | 	byte	$8a, $8e, $92, $94, $96, $98, $98, $98, $98, $99, $99, $99, $99, $98, $98, $98
137b6     97 97 96 95 
137ba     92 91 90 8E 
137be     8D 8B 8A 89 
137c2     88 88 87 86 | 	byte	$97, $97, $96, $95, $92, $91, $90, $8e, $8d, $8b, $8a, $89, $88, $88, $87, $86
137c6     85 85 84 83 
137ca     82 81 80 7E 
137ce     7D 7C 7B 7A 
137d2     79 79 78 78 | 	byte	$85, $85, $84, $83, $82, $81, $80, $7e, $7d, $7c, $7b, $7a, $79, $79, $78, $78
137d6     79 79 79 7A 
137da     79 79 79 79 
137de     79 78 76 75 
137e2     72 71 6F 6D | 	byte	$79, $79, $79, $7a, $79, $79, $79, $79, $79, $78, $76, $75, $72, $71, $6f, $6d
137e6     6B 69 68 67 
137ea     67 66 67 67 
137ee     67 66 66 66 
137f2     66 66 66 66 | 	byte	$6b, $69, $68, $67, $67, $66, $67, $67, $67, $66, $66, $66, $66, $66, $66, $66
137f6     66 67 69 6B 
137fa     6F 73 77 7C 
137fe     81 86 89 8D 
13802     91 94 96 99 | 	byte	$66, $67, $69, $6b, $6f, $73, $77, $7c, $81, $86, $89, $8d, $91, $94, $96, $99
13806     9B 9D 9E 9F 
1380a     9F 9F 9C 99 
1380e     94 8F 89 84 
13812     7D 78 73 70 | 	byte	$9b, $9d, $9e, $9f, $9f, $9f, $9c, $99, $94, $8f, $89, $84, $7d, $78, $73, $70
13816     6E 6B 6A 69 
1381a     68 68 69 69 
1381e     6A 6D 6F 72 
13822     77 7C 81 85 | 	byte	$6e, $6b, $6a, $69, $68, $68, $69, $69, $6a, $6d, $6f, $72, $77, $7c, $81, $85
13826     8A 8E 91 93 
1382a     96 97 98 98 
1382e     98 98 98 98 
13832     98 97 97 97 | 	byte	$8a, $8e, $91, $93, $96, $97, $98, $98, $98, $98, $98, $98, $98, $97, $97, $97
13836     97 97 96 95 
1383a     94 93 91 90 
1383e     8F 8D 8C 8B 
13842     8A 89 88 87 | 	byte	$97, $97, $96, $95, $94, $93, $91, $90, $8f, $8d, $8c, $8b, $8a, $89, $88, $87
13846     87 86 85 84 
1384a     83 83 81 80 
1384e     80 7E 7D 7C 
13852     7B 7B 7A 7A | 	byte	$87, $86, $85, $84, $83, $83, $81, $80, $80, $7e, $7d, $7c, $7b, $7b, $7a, $7a
13856     7A 7A 7A 7B 
1385a     7B 7A 7A 7A 
1385e     79 78 77 75 
13862     74 72 70 6E | 	byte	$7a, $7a, $7a, $7b, $7b, $7a, $7a, $7a, $79, $78, $77, $75, $74, $72, $70, $6e
13866     6C 6A 68 67 
1386a     66 66 66 66 
1386e     66 65 65 65 
13872     64 64 64 64 | 	byte	$6c, $6a, $68, $67, $66, $66, $66, $66, $66, $65, $65, $65, $64, $64, $64, $64
13876     64 65 67 6A 
1387a     6E 71 76 7C 
1387e     81 85 89 8D 
13882     90 93 96 98 | 	byte	$64, $65, $67, $6a, $6e, $71, $76, $7c, $81, $85, $89, $8d, $90, $93, $96, $98
13886     9B 9C 9D 9E 
1388a     9E 9D 9A 97 
1388e     92 8D 88 82 
13892     7B 76 73 70 | 	byte	$9b, $9c, $9d, $9e, $9e, $9d, $9a, $97, $92, $8d, $88, $82, $7b, $76, $73, $70
13896     6D 6B 6A 69 
1389a     68 69 69 6A 
1389e     6C 6E 70 74 
138a2     78 7D 81 85 | 	byte	$6d, $6b, $6a, $69, $68, $69, $69, $6a, $6c, $6e, $70, $74, $78, $7d, $81, $85
138a6     8A 8E 90 93 
138aa     95 96 97 97 
138ae     97 97 97 97 
138b2     97 96 96 96 | 	byte	$8a, $8e, $90, $93, $95, $96, $97, $97, $97, $97, $97, $97, $97, $96, $96, $96
138b6     96 96 96 95 
138ba     94 93 92 91 
138be     8F 8F 8D 8C 
138c2     8B 8A 89 88 | 	byte	$96, $96, $96, $95, $94, $93, $92, $91, $8f, $8f, $8d, $8c, $8b, $8a, $89, $88
138c6     88 87 86 85 
138ca     85 84 83 82 
138ce     81 80 7F 7F 
138d2     7E 7D 7C 7C | 	byte	$88, $87, $86, $85, $85, $84, $83, $82, $81, $80, $7f, $7f, $7e, $7d, $7c, $7c
138d6     7C 7C 7B 7B 
138da     7B 7B 7B 7A 
138de     7A 79 77 76 
138e2     75 72 71 6F | 	byte	$7c, $7c, $7b, $7b, $7b, $7b, $7b, $7a, $7a, $79, $77, $76, $75, $72, $71, $6f
138e6     6C 6A 68 67 
138ea     67 66 66 65 
138ee     65 64 64 63 
138f2     63 63 63 63 | 	byte	$6c, $6a, $68, $67, $67, $66, $66, $65, $65, $64, $64, $63, $63, $63, $63, $63
138f6     63 64 67 69 
138fa     6C 71 76 7B 
138fe     80 85 89 8C 
13902     8F 93 95 98 | 	byte	$63, $64, $67, $69, $6c, $71, $76, $7b, $80, $85, $89, $8c, $8f, $93, $95, $98
13906     9A 9B 9C 9D 
1390a     9D 9B 99 94 
1390e     91 8B 85 80 
13912     7B 76 72 6E | 	byte	$9a, $9b, $9c, $9d, $9d, $9b, $99, $94, $91, $8b, $85, $80, $7b, $76, $72, $6e
13916     6C 6B 69 69 
1391a     69 69 69 6B 
1391e     6C 6E 71 74 
13922     78 7C 80 85 | 	byte	$6c, $6b, $69, $69, $69, $69, $69, $6b, $6c, $6e, $71, $74, $78, $7c, $80, $85
13926     89 8C 90 92 
1392a     94 95 96 97 
1392e     97 97 97 96 
13932     96 96 95 96 | 	byte	$89, $8c, $90, $92, $94, $95, $96, $97, $97, $97, $97, $96, $96, $96, $95, $96
13936     95 96 95 95 
1393a     94 94 93 92 
1393e     91 90 8F 8D 
13942     8C 8B 8A 89 | 	byte	$95, $96, $95, $95, $94, $94, $93, $92, $91, $90, $8f, $8d, $8c, $8b, $8a, $89
13946     89 88 87 86 
1394a     85 85 84 83 
1394e     82 81 80 7F 
13952     7D 7C 7C 7A | 	byte	$89, $88, $87, $86, $85, $85, $84, $83, $82, $81, $80, $7f, $7d, $7c, $7c, $7a
13956     7A 79 78 77 
1395a     76 76 75 73 
1395e     72 70 6F 6E 
13962     6B 6A 69 67 | 	byte	$7a, $79, $78, $77, $76, $76, $75, $73, $72, $70, $6f, $6e, $6b, $6a, $69, $67
13966     66 65 65 65 
1396a     65 66 66 67 
1396e     69 6A 6B 6C 
13972     6F 70 73 75 | 	byte	$66, $65, $65, $65, $65, $66, $66, $67, $69, $6a, $6b, $6c, $6f, $70, $73, $75
13976     77 7B 7D 7F 
1397a     82 85 88 89 
1397e     8B 8C 8D 8F 
13982     8F 90 90 90 | 	byte	$77, $7b, $7d, $7f, $82, $85, $88, $89, $8b, $8c, $8d, $8f, $8f, $90, $90, $90
13986     90 90 90 8F 
1398a     8E 8D 8C 8B 
1398e     8A 88 86 85 
13992     83 82 80 7F | 	byte	$90, $90, $90, $8f, $8e, $8d, $8c, $8b, $8a, $88, $86, $85, $83, $82, $80, $7f
13996     7E 7C 7B 7A 
1399a     79 79 78 77 
1399e     77 77 76 76 
139a2     76 77 77 77 | 	byte	$7e, $7c, $7b, $7a, $79, $79, $78, $77, $77, $77, $76, $76, $76, $77, $77, $77
139a6     78 78 79 7A 
139aa     7B 7B 7D 7D 
139ae     7E 7F 80 81 
139b2     82 82 84 84 | 	byte	$78, $78, $79, $7a, $7b, $7b, $7d, $7d, $7e, $7f, $80, $81, $82, $82, $84, $84
139b6     85 86 87 88 
139ba     88 89 89 89 
139be     8A 8A 8A 8A 
139c2     8A 8A 8A 89 | 	byte	$85, $86, $87, $88, $88, $89, $89, $89, $8a, $8a, $8a, $8a, $8a, $8a, $8a, $89
139c6     89 89 88 88 
139ca     88 87 86 86 
139ce     85 84 84 83 
139d2     82 82 81 80 | 	byte	$89, $89, $88, $88, $88, $87, $86, $86, $85, $84, $84, $83, $82, $82, $81, $80
139d6     80 7E 7E 7D 
139da     7D 7D 7C 7C 
139de     7B 7B 7B 7A 
139e2     7A 7A 7A 7A | 	byte	$80, $7e, $7e, $7d, $7d, $7d, $7c, $7c, $7b, $7b, $7b, $7a, $7a, $7a, $7a, $7a
139e6     7B 7B 7B 7B 
139ea     7C 7C 7C 7D 
139ee     7D 7D 7E 7F 
139f2     7F 80 80 80 | 	byte	$7b, $7b, $7b, $7b, $7c, $7c, $7c, $7d, $7d, $7d, $7e, $7f, $7f, $80, $80, $80
139f6     81 82 82 83 
139fa     83 83 84 84 
139fe     84 84 84 84 
13a02     85 84 84 84 | 	byte	$81, $82, $82, $83, $83, $83, $84, $84, $84, $84, $84, $84, $85, $84, $84, $84
13a06     85 84 84 83 
13a0a     83 83 83 83 
13a0e     82 82 82 81 
13a12     81 80 80 80 | 	byte	$85, $84, $84, $83, $83, $83, $83, $83, $82, $82, $82, $81, $81, $80, $80, $80
13a16     7F 7F 7E 7E 
13a1a     7E 7D 7D 7D 
13a1e     7D 7D 7D 7D 
13a22     7D 7C 7C 7C | 	byte	$7f, $7f, $7e, $7e, $7e, $7d, $7d, $7d, $7d, $7d, $7d, $7d, $7d, $7c, $7c, $7c
13a26     7C 7C 7D 7D 
13a2a     7D 7D 7D 7D 
13a2e     7E 7E 7E 7F 
13a32     7F 7F 80 80 | 	byte	$7c, $7c, $7d, $7d, $7d, $7d, $7d, $7d, $7e, $7e, $7e, $7f, $7f, $7f, $80, $80
13a36     80 81 81 81 
13a3a     81 81 81 81 
13a3e     81 82 82 82 
13a42     82 82 83 82 | 	byte	$80, $81, $81, $81, $81, $81, $81, $81, $81, $82, $82, $82, $82, $82, $83, $82
13a46     82 82 82 82 
13a4a     82          | 	byte	$82[5]
13a4b     81 81 81 81 
13a4f     81 81 81 81 | 	byte	$81[8]
13a53     80 80 80 7F 
13a57     7F 7F 7F 7E 
13a5b     7E 7E 7E 7E 
13a5f     7E 7E 7E 7E | 	byte	$80, $80, $80, $7f, $7f, $7f, $7f, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e
13a63     7E 7E 7E 7E 
13a67     7E 7E 7E 7E 
13a6b     7E 7E 7E 7E | 	byte	$7e[12]
13a6f     7F 7F 7F 7F 
13a73     7F 7F 7F    | 	byte	$7f[7]
13a76     80 80 80 80 
13a7a     80 80       | 	byte	$80[6]
13a7c     A0 2B 80 80 
13a80     80 91 93 7F 
13a84     6D 63 58 65 
13a88     80 8E A3 BC | 	byte	$a0, $2b, $80, $80, $80, $91, $93, $7f, $6d, $63, $58, $65, $80, $8e, $a3, $bc
13a8c     BF B3 A6 58 
13a90     00 00 00 17 
13a94     59 9B CB FF 
13a98     F0 E2 B0 8F | 	byte	$bf, $b3, $a6, $58, $00, $00, $00, $17, $59, $9b, $cb, $ff, $f0, $e2, $b0, $8f
13a9c     75 79 97 9A 
13aa0     96 96 68 55 
13aa4     51 54 68 8E 
13aa8     A5 B0 C4 C4 | 	byte	$75, $79, $97, $9a, $96, $96, $68, $55, $51, $54, $68, $8e, $a5, $b0, $c4, $c4
13aac     A6 73 10 00 
13ab0     00 04 3B 78 
13ab4     AB CA F2 E9 
13ab8     C4 A7 94 80 | 	byte	$a6, $73, $10, $00, $00, $04, $3b, $78, $ab, $ca, $f2, $e9, $c4, $a7, $94, $80
13abc     89 92 8B 83 
13ac0     74 55 4F 4F 
13ac4     62 82 9F B5 
13ac8     BE BD BB 9D | 	byte	$89, $92, $8b, $83, $74, $55, $4f, $4f, $62, $82, $9f, $b5, $be, $bd, $bb, $9d
13acc     69 23 00 00 
13ad0     07 30 7C B1 
13ad4     D5 EA E9 CD 
13ad8     A6 A0 96 8E | 	byte	$69, $23, $00, $00, $07, $30, $7c, $b1, $d5, $ea, $e9, $cd, $a6, $a0, $96, $8e
13adc     95 87 66 5B 
13ae0     42 4B 51 7F 
13ae4     91 AE C0 C1 
13ae8     C2 B3 71 55 | 	byte	$95, $87, $66, $5b, $42, $4b, $51, $7f, $91, $ae, $c0, $c1, $c2, $b3, $71, $55
13aec     17 00 16 3F 
13af0     44 95 B8 C2 
13af4     C4 D3 C3 AF 
13af8     B6 A8 89 86 | 	byte	$17, $00, $16, $3f, $44, $95, $b8, $c2, $c4, $d3, $c3, $af, $b6, $a8, $89, $86
13afc     63 49 57 54 
13b00     58 76 89 92 
13b04     B4 BF B1 AA 
13b08     90 52 4A 39 | 	byte	$63, $49, $57, $54, $58, $76, $89, $92, $b4, $bf, $b1, $aa, $90, $52, $4a, $39
13b0c     22 31 4B 39 
13b10     5C 9C A9 C0 
13b14     E0 C5 B2 AE 
13b18     9B 83 7F 63 | 	byte	$22, $31, $4b, $39, $5c, $9c, $a9, $c0, $e0, $c5, $b2, $ae, $9b, $83, $7f, $63
13b1c     44 54 56 58 
13b20     84 8A 8B 9F 
13b24     A5 AA B4 98 
13b28     64 4C 31 2D | 	byte	$44, $54, $56, $58, $84, $8a, $8b, $9f, $a5, $aa, $b4, $98, $64, $4c, $31, $2d
13b2c     33 51 5B 6A 
13b30     8D 8F 9E CD 
13b34     CE D4 D4 B1 
13b38     8D 68 4C 42 | 	byte	$33, $51, $5b, $6a, $8d, $8f, $9e, $cd, $ce, $d4, $d4, $b1, $8d, $68, $4c, $42
13b3c     49 51 55 84 
13b40     92 AC BC BF 
13b44     B4 90 64 4A 
13b48     40 4F 61 6A | 	byte	$49, $51, $55, $84, $92, $ac, $bc, $bf, $b4, $90, $64, $4a, $40, $4f, $61, $6a
13b4c     52 63 47 59 
13b50     87 A3 BD E8 
13b54     DE D7 BD 8F 
13b58     57 40 3E 4C | 	byte	$52, $63, $47, $59, $87, $a3, $bd, $e8, $de, $d7, $bd, $8f, $57, $40, $3e, $4c
13b5c     6D 89 93 A1 
13b60     A0 9D 9F A1 
13b64     8D 64 5B 4D 
13b68     4A 73 7E 6F | 	byte	$6d, $89, $93, $a1, $a0, $9d, $9f, $a1, $8d, $64, $5b, $4d, $4a, $73, $7e, $6f
13b6c     70 5E 3C 67 
13b70     89 99 D3 FB 
13b74     D9 CF 9A 5B 
13b78     50 4E 4C 4F | 	byte	$70, $5e, $3c, $67, $89, $99, $d3, $fb, $d9, $cf, $9a, $5b, $50, $4e, $4c, $4f
13b7c     7D 74 89 AA 
13b80     A6 AF AE 85 
13b84     54 51 4A 58 
13b88     95 97 8A 64 | 	byte	$7d, $74, $89, $aa, $a6, $af, $ae, $85, $54, $51, $4a, $58, $95, $97, $8a, $64
13b8c     52 26 42 70 
13b90     91 B6 FF EE 
13b94     E0 BF 64 3D 
13b98     2F 34 5E 88 | 	byte	$52, $26, $42, $70, $91, $b6, $ff, $ee, $e0, $bf, $64, $3d, $2f, $34, $5e, $88
13b9c     96 94 AB 90 
13ba0     96 A0 71 5D 
13ba4     57 40 5F 8C 
13ba8     A4 AC AC 65 | 	byte	$96, $94, $ab, $90, $96, $a0, $71, $5d, $57, $40, $5f, $8c, $a4, $ac, $ac, $65
13bac     30 25 32 6E 
13bb0     AE C8 E7 E2 
13bb4     C2 8E 67 4B 
13bb8     40 52 62 7F | 	byte	$30, $25, $32, $6e, $ae, $c8, $e7, $e2, $c2, $8e, $67, $4b, $40, $52, $62, $7f
13bbc     A1 AA A5 97 
13bc0     7E 54 48 47 
13bc4     47 78 A5 B3 
13bc8     C8 C3 88 29 | 	byte	$a1, $aa, $a5, $97, $7e, $54, $48, $47, $47, $78, $a5, $b3, $c8, $c3, $88, $29
13bcc     1E 04 2A 85 
13bd0     AF D3 FC E4 
13bd4     B3 85 59 44 
13bd8     57 65 6A 92 | 	byte	$1e, $04, $2a, $85, $af, $d3, $fc, $e4, $b3, $85, $59, $44, $57, $65, $6a, $92
13bdc     A0 86 A5 81 
13be0     54 5E 47 4D 
13be4     7E 9B A6 C7 
13be8     D8 AD 83 3C | 	byte	$a0, $86, $a5, $81, $54, $5e, $47, $4d, $7e, $9b, $a6, $c7, $d8, $ad, $83, $3c
13bec     06 0E 3C 7C 
13bf0     B0 EE FD DD 
13bf4     BF 7B 54 51 
13bf8     4D 56 8F 9D | 	byte	$06, $0e, $3c, $7c, $b0, $ee, $fd, $dd, $bf, $7b, $54, $51, $4d, $56, $8f, $9d
13bfc     9E 9A 77 3C 
13c00     45 3C 4B 98 
13c04     B3 BD D9 CD 
13c08     A8 89 4D 04 | 	byte	$9e, $9a, $77, $3c, $45, $3c, $4b, $98, $b3, $bd, $d9, $cd, $a8, $89, $4d, $04
13c0c     2F 24 3B 8F 
13c10     BD CA EE E2 
13c14     AD 8D 7A 5A 
13c18     66 71 63 7B | 	byte	$2f, $24, $3b, $8f, $bd, $ca, $ee, $e2, $ad, $8d, $7a, $5a, $66, $71, $63, $7b
13c1c     92 67 56 44 
13c20     3F 4D 8B AB 
13c24     BF DB DA B4 
13c28     AC 7A 31 01 | 	byte	$92, $67, $56, $44, $3f, $4d, $8b, $ab, $bf, $db, $da, $b4, $ac, $7a, $31, $01
13c2c     0A 1D 4D 93 
13c30     C0 E2 FE E4 
13c34     BB 91 5E 5A 
13c38     67 66 73 7A | 	byte	$0a, $1d, $4d, $93, $c0, $e2, $fe, $e4, $bb, $91, $5e, $5a, $67, $66, $73, $7a
13c3c     63 45 3F 39 
13c40     4C 86 B3 CC 
13c44     E0 D7 B3 93 
13c48     73 56 46 18 | 	byte	$63, $45, $3f, $39, $4c, $86, $b3, $cc, $e0, $d7, $b3, $93, $73, $56, $46, $18
13c4c     15 37 44 7E 
13c50     BD DC F2 F6 
13c54     CE 9B 67 5C 
13c58     55 62 6C 5D | 	byte	$15, $37, $44, $7e, $bd, $dc, $f2, $f6, $ce, $9b, $67, $5c, $55, $62, $6c, $5d
13c5c     5C 28 3B 3A 
13c60     59 AD D5 E8 
13c64     F9 D3 AA 74 
13c68     5D 4A 4A 1D | 	byte	$5c, $28, $3b, $3a, $59, $ad, $d5, $e8, $f9, $d3, $aa, $74, $5d, $4a, $4a, $1d
13c6c     21 2E 2A 6A 
13c70     AD D4 F8 FF 
13c74     EB C4 76 48 
13c78     47 48 50 4C | 	byte	$21, $2e, $2a, $6a, $ad, $d4, $f8, $ff, $eb, $c4, $76, $48, $47, $48, $50, $4c
13c7c     2B 1D 35 3F 
13c80     82 CA F9 FF 
13c84     FC D0 8C 5E 
13c88     39 39 3E 14 | 	byte	$2b, $1d, $35, $3f, $82, $ca, $f9, $ff, $fc, $d0, $8c, $5e, $39, $39, $3e, $14
13c8c     24 4E 40 86 
13c90     C1 E0 FD FF 
13c94     E7 A7 68 20 
13c98     2D 43 47 3F | 	byte	$24, $4e, $40, $86, $c1, $e0, $fd, $ff, $e7, $a7, $68, $20, $2d, $43, $47, $3f
13c9c     42 32 3E 65 
13ca0     AB DB F8 FF 
13ca4     DE 9F 74 48 
13ca8     4D 51 51 3A | 	byte	$42, $32, $3e, $65, $ab, $db, $f8, $ff, $de, $9f, $74, $48, $4d, $51, $51, $3a
13cac     28 33 3F 61 
13cb0     AB E9 FF FF 
13cb4     E5 B6 63 37 
13cb8     2D 38 49 3F | 	byte	$28, $33, $3f, $61, $ab, $e9, $ff, $ff, $e5, $b6, $63, $37, $2d, $38, $49, $3f
13cbc     31 2B 33 71 
13cc0     AD E4 FE FF 
13cc4     ED B2 62 2A 
13cc8     32 4D 51 47 | 	byte	$31, $2b, $33, $71, $ad, $e4, $fe, $ff, $ed, $b2, $62, $2a, $32, $4d, $51, $47
13ccc     30 2A 36 63 
13cd0     AF EF FF FF 
13cd4     F1 B5 3C 03 
13cd8     17 23 3E 37 | 	byte	$30, $2a, $36, $63, $af, $ef, $ff, $ff, $f1, $b5, $3c, $03, $17, $23, $3e, $37
13cdc     34 33 43 8C 
13ce0     AE F1 FF FF 
13ce4     E6 9C 51 1E 
13ce8     28 38 49 50 | 	byte	$34, $33, $43, $8c, $ae, $f1, $ff, $ff, $e6, $9c, $51, $1e, $28, $38, $49, $50
13cec     36 35 4E 53 
13cf0     BC EE FF FF 
13cf4     E6 9D 2B 0B 
13cf8     12 2C 4B 2A | 	byte	$36, $35, $4e, $53, $bc, $ee, $ff, $ff, $e6, $9d, $2b, $0b, $12, $2c, $4b, $2a
13cfc     33 26 3F 80 
13d00     C9 F3 FF FF 
13d04     DC 68 1E 0D 
13d08     2C 4C 5F 62 | 	byte	$33, $26, $3f, $80, $c9, $f3, $ff, $ff, $dc, $68, $1e, $0d, $2c, $4c, $5f, $62
13d0c     45 33 46 56 
13d10     B7 FB FF FF 
13d14     F3 9A 10 06 
13d18     12 37 48 35 | 	byte	$45, $33, $46, $56, $b7, $fb, $ff, $ff, $f3, $9a, $10, $06, $12, $37, $48, $35
13d1c     33 18 38 87 
13d20     BE F2 FF FF 
13d24     E5 6F 14 01 
13d28     1B 39 5C 78 | 	byte	$33, $18, $38, $87, $be, $f2, $ff, $ff, $e5, $6f, $14, $01, $1b, $39, $5c, $78
13d2c     57 39 40 46 
13d30     A2 E8 FF FF 
13d34     EB 94 33 00 
13d38     01 1F 30 1A | 	byte	$57, $39, $40, $46, $a2, $e8, $ff, $ff, $eb, $94, $33, $00, $01, $1f, $30, $1a
13d3c     2C 26 46 9B 
13d40     D4 FD FF FF 
13d44     C0 58 00 00 
13d48     1B 3E 71 8A | 	byte	$2c, $26, $46, $9b, $d4, $fd, $ff, $ff, $c0, $58, $00, $00, $1b, $3e, $71, $8a
13d4c     66 31 48 47 
13d50     A5 E7 FF FC 
13d54     E4 78 17 03 
13d58     0B 2E 37 28 | 	byte	$66, $31, $48, $47, $a5, $e7, $ff, $fc, $e4, $78, $17, $03, $0b, $2e, $37, $28
13d5c     23 2B 40 7E 
13d60     D9 FF FF FD 
13d64     BB 23 00 00 
13d68     1F 4D A0 B4 | 	byte	$23, $2b, $40, $7e, $d9, $ff, $ff, $fd, $bb, $23, $00, $00, $1f, $4d, $a0, $b4
13d6c     85 43 22 23 
13d70     75 BE FF FF 
13d74     F8 A2 1E 00 
13d78     00 24 2D 31 | 	byte	$85, $43, $22, $23, $75, $be, $ff, $ff, $f8, $a2, $1e, $00, $00, $24, $2d, $31
13d7c     31 2A 50 86 
13d80     CC FC FF FE 
13d84     C6 36 00 01 
13d88     1B 3E 8C A6 | 	byte	$31, $2a, $50, $86, $cc, $fc, $ff, $fe, $c6, $36, $00, $01, $1b, $3e, $8c, $a6
13d8c     8C 56 42 37 
13d90     54 BE F6 FD 
13d94     FB A0 2F 00 
13d98     08 1F 37 39 | 	byte	$8c, $56, $42, $37, $54, $be, $f6, $fd, $fb, $a0, $2f, $00, $08, $1f, $37, $39
13d9c     2A 33 5B 8A 
13da0     E0 FF FF FF 
13da4     A3 1A 00 01 
13da8     28 65 AD BE | 	byte	$2a, $33, $5b, $8a, $e0, $ff, $ff, $ff, $a3, $1a, $00, $01, $28, $65, $ad, $be
13dac     94 50 2B 30 
13db0     64 BF FF FE 
13db4     F9 9F 23 00 
13db8     11 2B 42 4E | 	byte	$94, $50, $2b, $30, $64, $bf, $ff, $fe, $f9, $9f, $23, $00, $11, $2b, $42, $4e
13dbc     3A 38 4F 78 
13dc0     CB FF FF FA 
13dc4     A6 3F 00 00 
13dc8     27 6B C2 CE | 	byte	$3a, $38, $4f, $78, $cb, $ff, $ff, $fa, $a6, $3f, $00, $00, $27, $6b, $c2, $ce
13dcc     B1 45 16 26 
13dd0     45 D0 FA FF 
13dd4     F7 9D 39 00 
13dd8     1D 3A 41 50 | 	byte	$b1, $45, $16, $26, $45, $d0, $fa, $ff, $f7, $9d, $39, $00, $1d, $3a, $41, $50
13ddc     29 20 4D 72 
13de0     D1 FF FF FF 
13de4     C3 32 00 01 
13de8     20 54 B5 D6 | 	byte	$29, $20, $4d, $72, $d1, $ff, $ff, $ff, $c3, $32, $00, $01, $20, $54, $b5, $d6
13dec     AD 36 0C 1C 
13df0     3D C4 FA FF 
13df4     F6 9C 2B 00 
13df8     23 4A 5F 59 | 	byte	$ad, $36, $0c, $1c, $3d, $c4, $fa, $ff, $f6, $9c, $2b, $00, $23, $4a, $5f, $59
13dfc     22 0C 32 59 
13e00     BC FF FF FF 
13e04     B5 17 00 00 
13e08     16 61 B7 E7 | 	byte	$22, $0c, $32, $59, $bc, $ff, $ff, $ff, $b5, $17, $00, $00, $16, $61, $b7, $e7
13e0c     AF 4B 03 18 
13e10     3B A3 F1 F9 
13e14     E1 80 23 01 
13e18     2B 53 58 55 | 	byte	$af, $4b, $03, $18, $3b, $a3, $f1, $f9, $e1, $80, $23, $01, $2b, $53, $58, $55
13e1c     16 00 22 49 
13e20     BE FF FF FE 
13e24     A9 00 00 00 
13e28     24 56 BD D0 | 	byte	$16, $00, $22, $49, $be, $ff, $ff, $fe, $a9, $00, $00, $00, $24, $56, $bd, $d0
13e2c     A1 2F 00 22 
13e30     46 B4 F7 F2 
13e34     CB 68 10 11 
13e38     37 58 55 34 | 	byte	$a1, $2f, $00, $22, $46, $b4, $f7, $f2, $cb, $68, $10, $11, $37, $58, $55, $34
13e3c     06 01 27 4E 
13e40     CF FF FF FF 
13e44     9F 00 00 01 
13e48     22 60 CF E1 | 	byte	$06, $01, $27, $4e, $cf, $ff, $ff, $ff, $9f, $00, $00, $01, $22, $60, $cf, $e1
13e4c     9B 1F 01 1E 
13e50     40 A8 FA F7 
13e54     BA 4A 0C 0E 
13e58     35 6A 6B 34 | 	byte	$9b, $1f, $01, $1e, $40, $a8, $fa, $f7, $ba, $4a, $0c, $0e, $35, $6a, $6b, $34
13e5c     00 00 28 5C 
13e60     CC FF FF FF 
13e64     95 11 00 04 
13e68     2F 6B CD DA | 	byte	$00, $00, $28, $5c, $cc, $ff, $ff, $ff, $95, $11, $00, $04, $2f, $6b, $cd, $da
13e6c     94 44 00 2C 
13e70     4A A2 F0 E0 
13e74     AF 64 20 2F 
13e78     49 8E 67 1B | 	byte	$94, $44, $00, $2c, $4a, $a2, $f0, $e0, $af, $64, $20, $2f, $49, $8e, $67, $1b
13e7c     00 00 28 7F 
13e80     E0 FF FF F6 
13e84     74 00 00 00 
13e88     45 82 C5 CC | 	byte	$00, $00, $28, $7f, $e0, $ff, $ff, $f6, $74, $00, $00, $00, $45, $82, $c5, $cc
13e8c     6E 23 00 2C 
13e90     4F B7 F7 E9 
13e94     AE 5D 1F 2C 
13e98     42 76 54 0E | 	byte	$6e, $23, $00, $2c, $4f, $b7, $f7, $e9, $ae, $5d, $1f, $2c, $42, $76, $54, $0e
13e9c     00 00 2D 7D 
13ea0     D8 FF FF EC 
13ea4     5B 00 00 09 
13ea8     43 82 C0 C1 | 	byte	$00, $00, $2d, $7d, $d8, $ff, $ff, $ec, $5b, $00, $00, $09, $43, $82, $c0, $c1
13eac     6D 16 03 38 
13eb0     75 BA EC D6 
13eb4     91 4A 2A 3E 
13eb8     4F 75 41 06 | 	byte	$6d, $16, $03, $38, $75, $ba, $ec, $d6, $91, $4a, $2a, $3e, $4f, $75, $41, $06
13ebc     00 00 39 93 
13ec0     EE FF FF E1 
13ec4     4C 00 00 09 
13ec8     53 8E B4 BA | 	byte	$00, $00, $39, $93, $ee, $ff, $ff, $e1, $4c, $00, $00, $09, $53, $8e, $b4, $ba
13ecc     68 0E 00 2F 
13ed0     62 B3 E3 DB 
13ed4     91 60 2F 44 
13ed8     5B 7A 54 00 | 	byte	$68, $0e, $00, $2f, $62, $b3, $e3, $db, $91, $60, $2f, $44, $5b, $7a, $54, $00
13edc     00 00 1B 87 
13ee0     D3 FF FF EA 
13ee4     6B 00 00 00 
13ee8     40 69 84 92 | 	byte	$00, $00, $1b, $87, $d3, $ff, $ff, $ea, $6b, $00, $00, $00, $40, $69, $84, $92
13eec     54 1E 02 2F 
13ef0     72 A7 DB D0 
13ef4     8F 5A 20 40 
13ef8     4F 5C 4A 00 | 	byte	$54, $1e, $02, $2f, $72, $a7, $db, $d0, $8f, $5a, $20, $40, $4f, $5c, $4a, $00
13efc     00 00 27 98 
13f00     E8 FF FF D9 
13f04     48 00 00 0B 
13f08     44 75 88 99 | 	byte	$00, $00, $27, $98, $e8, $ff, $ff, $d9, $48, $00, $00, $0b, $44, $75, $88, $99
13f0c     5D 3C 18 3E 
13f10     80 95 BD B7 
13f14     7B 5C 41 4F 
13f18     4F 6A 39 00 | 	byte	$5d, $3c, $18, $3e, $80, $95, $bd, $b7, $7b, $5c, $41, $4f, $4f, $6a, $39, $00
13f1c     00 00 1D 75 
13f20     E1 FF FF FB 
13f24     5E 02 00 00 
13f28     43 74 9A 9F | 	byte	$00, $00, $1d, $75, $e1, $ff, $ff, $fb, $5e, $02, $00, $00, $43, $74, $9a, $9f
13f2c     6B 25 08 21 
13f30     65 9B C5 C6 
13f34     8C 61 41 45 
13f38     52 52 28 00 | 	byte	$6b, $25, $08, $21, $65, $9b, $c5, $c6, $8c, $61, $41, $45, $52, $52, $28, $00
13f3c     00 00 13 96 
13f40     E3 FF FF E7 
13f44     73 00 00 00 
13f48     21 64 84 91 | 	byte	$00, $00, $13, $96, $e3, $ff, $ff, $e7, $73, $00, $00, $00, $21, $64, $84, $91
13f4c     7A 48 21 32 
13f50     76 94 B6 C6 
13f54     85 55 42 3A 
13f58     4F 4F 4F 00 | 	byte	$7a, $48, $21, $32, $76, $94, $b6, $c6, $85, $55, $42, $3a, $4f, $4f, $4f, $00
13f5c     00 00 1E 83 
13f60     DE FF FF F4 
13f64     79 00 00 01 
13f68     34 65 84 8F | 	byte	$00, $00, $1e, $83, $de, $ff, $ff, $f4, $79, $00, $00, $01, $34, $65, $84, $8f
13f6c     6F 51 28 29 
13f70     57 86 AB BD 
13f74     97 62 40 34 
13f78     42 4E 58 12 | 	byte	$6f, $51, $28, $29, $57, $86, $ab, $bd, $97, $62, $40, $34, $42, $4e, $58, $12
13f7c     00 00 01 66 
13f80     C6 FF FF FD 
13f84     9F 07 00 00 
13f88     17 52 7B 8E | 	byte	$00, $00, $01, $66, $c6, $ff, $ff, $fd, $9f, $07, $00, $00, $17, $52, $7b, $8e
13f8c     83 5C 32 1E 
13f90     5F 80 A2 C4 
13f94     A7 66 4C 2D 
13f98     38 46 52 1D | 	byte	$83, $5c, $32, $1e, $5f, $80, $a2, $c4, $a7, $66, $4c, $2d, $38, $46, $52, $1d
13f9c     00 00 08 42 
13fa0     A9 EF FF FF 
13fa4     C9 3A 00 00 
13fa8     07 3C 5C 83 | 	byte	$00, $00, $08, $42, $a9, $ef, $ff, $ff, $c9, $3a, $00, $00, $07, $3c, $5c, $83
13fac     8F 74 58 3C 
13fb0     4B 86 94 AF 
13fb4     97 5A 3E 38 
13fb8     48 5D 6F 2D | 	byte	$8f, $74, $58, $3c, $4b, $86, $94, $af, $97, $5a, $3e, $38, $48, $5d, $6f, $2d
13fbc     00 00 00 39 
13fc0     AA FD FF FF 
13fc4     CC 30 00 00 
13fc8     00 48 75 8C | 	byte	$00, $00, $00, $39, $aa, $fd, $ff, $ff, $cc, $30, $00, $00, $00, $48, $75, $8c
13fcc     94 62 4A 2D 
13fd0     4D 89 9F B2 
13fd4     9C 5B 36 2D 
13fd8     4A 66 78 59 | 	byte	$94, $62, $4a, $2d, $4d, $89, $9f, $b2, $9c, $5b, $36, $2d, $4a, $66, $78, $59
13fdc     00 00 00 21 
13fe0     A3 F3 FF FF 
13fe4     DC 43 00 00 
13fe8     07 3E 7B 90 | 	byte	$00, $00, $00, $21, $a3, $f3, $ff, $ff, $dc, $43, $00, $00, $07, $3e, $7b, $90
13fec     9B 74 50 20 
13ff0     3A 86 A5 BC 
13ff4     B1 61 30 2A 
13ff8     4C 61 81 58 | 	byte	$9b, $74, $50, $20, $3a, $86, $a5, $bc, $b1, $61, $30, $2a, $4c, $61, $81, $58
13ffc     00 00 00 26 
14000     7E F4 FF FF 
14004     E3 41 00 00 
14008     04 3E 85 8E | 	byte	$00, $00, $00, $26, $7e, $f4, $ff, $ff, $e3, $41, $00, $00, $04, $3e, $85, $8e
1400c     91 6E 4A 2C 
14010     4B 87 A0 B8 
14014     A4 52 2D 28 
14018     4B 79 8D 6C | 	byte	$91, $6e, $4a, $2c, $4b, $87, $a0, $b8, $a4, $52, $2d, $28, $4b, $79, $8d, $6c
1401c     06 00 00 1A 
14020     8D FF FF FF 
14024     E6 5F 00 00 
14028     00 3A 80 97 | 	byte	$06, $00, $00, $1a, $8d, $ff, $ff, $ff, $e6, $5f, $00, $00, $00, $3a, $80, $97
1402c     8B 58 33 16 
14030     39 8C BC CD 
14034     C2 6A 1F 21 
14038     45 6D 8A 84 | 	byte	$8b, $58, $33, $16, $39, $8c, $bc, $cd, $c2, $6a, $1f, $21, $45, $6d, $8a, $84
1403c     0C 00 00 10 
14040     79 F4 FF FF 
14044     EC 5D 00 00 
14048     04 30 7C 88 | 	byte	$0c, $00, $00, $10, $79, $f4, $ff, $ff, $ec, $5d, $00, $00, $04, $30, $7c, $88
1404c     7D 65 34 1C 
14050     3C 97 B6 CF 
14054     BE 5E 12 15 
14058     4C 72 98 83 | 	byte	$7d, $65, $34, $1c, $3c, $97, $b6, $cf, $be, $5e, $12, $15, $4c, $72, $98, $83
1405c     1E 00 00 14 
14060     71 EC FF FF 
14064     F1 50 00 00 
14068     13 31 6D 79 | 	byte	$1e, $00, $00, $14, $71, $ec, $ff, $ff, $f1, $50, $00, $00, $13, $31, $6d, $79
1406c     5F 4E 26 25 
14070     4D AB CA D0 
14074     AF 44 02 18 
14078     4D 83 A7 75 | 	byte	$5f, $4e, $26, $25, $4d, $ab, $ca, $d0, $af, $44, $02, $18, $4d, $83, $a7, $75
1407c     02 00 00 19 
14080     87 FF FF FF 
14084     DD 5A 00 00 
14088     0E 45 6F 7A | 	byte	$02, $00, $00, $19, $87, $ff, $ff, $ff, $dd, $5a, $00, $00, $0e, $45, $6f, $7a
1408c     5A 34 23 24 
14090     53 A8 D1 D1 
14094     A1 30 00 1A 
14098     4E 81 A1 67 | 	byte	$5a, $34, $23, $24, $53, $a8, $d1, $d1, $a1, $30, $00, $1a, $4e, $81, $a1, $67
1409c     00 00 01 22 
140a0     7E FA FF FF 
140a4     D5 4A 00 00 
140a8     14 47 61 65 | 	byte	$00, $00, $01, $22, $7e, $fa, $ff, $ff, $d5, $4a, $00, $00, $14, $47, $61, $65
140ac     54 3E 42 37 
140b0     54 A8 B7 AB 
140b4     81 24 11 31 
140b8     77 90 9E 5F | 	byte	$54, $3e, $42, $37, $54, $a8, $b7, $ab, $81, $24, $11, $31, $77, $90, $9e, $5f
140bc     00 00 01 33 
140c0     86 F7 FF FE 
140c4     C7 37 00 04 
140c8     19 40 5C 5A | 	byte	$00, $00, $01, $33, $86, $f7, $ff, $fe, $c7, $37, $00, $04, $19, $40, $5c, $5a
140cc     3F 3E 4A 45 
140d0     60 AF B6 A2 
140d4     71 14 1F 49 
140d8     7A 99 99 32 | 	byte	$3f, $3e, $4a, $45, $60, $af, $b6, $a2, $71, $14, $1f, $49, $7a, $99, $99, $32
140dc     00 00 06 50 
140e0     BC FF FF FF 
140e4     A2 35 00 0A 
140e8     27 46 62 60 | 	byte	$00, $00, $06, $50, $bc, $ff, $ff, $ff, $a2, $35, $00, $0a, $27, $46, $62, $60
140ec     51 4F 4F 46 
140f0     6C B5 B7 A9 
140f4     7F 34 24 4D 
140f8     7A 9A 8C 43 | 	byte	$51, $4f, $4f, $46, $6c, $b5, $b7, $a9, $7f, $34, $24, $4d, $7a, $9a, $8c, $43
140fc     00 00 16 6D 
14100     C1 FF FF E8 
14104     93 47 0C 18 
14108     39 4A 57 6E | 	byte	$00, $00, $16, $6d, $c1, $ff, $ff, $e8, $93, $47, $0c, $18, $39, $4a, $57, $6e
1410c     57 63 6E 5C 
14110     66 AD A6 95 
14114     7D 48 36 62 
14118     8B 96 82 38 | 	byte	$57, $63, $6e, $5c, $66, $ad, $a6, $95, $7d, $48, $36, $62, $8b, $96, $82, $38
1411c     00 01 26 7D 
14120     C8 FC FE D9 
14124     94 3B 1B 21 
14128     39 4A 61 6F | 	byte	$00, $01, $26, $7d, $c8, $fc, $fe, $d9, $94, $3b, $1b, $21, $39, $4a, $61, $6f
1412c     6A 68 79 64 
14130     56 A6 93 88 
14134     7C 4D 44 72 
14138     9D 95 75 1C | 	byte	$6a, $68, $79, $64, $56, $a6, $93, $88, $7c, $4d, $44, $72, $9d, $95, $75, $1c
1413c     00 03 3A 69 
14140     BA FF F7 C9 
14144     9B 5A 29 2B 
14148     2E 47 6C 72 | 	byte	$00, $03, $3a, $69, $ba, $ff, $f7, $c9, $9b, $5a, $29, $2b, $2e, $47, $6c, $72
1414c     68 78 79 58 
14150     6C 9B 93 8F 
14154     7C 46 49 7C 
14158     99 9B 71 10 | 	byte	$68, $78, $79, $58, $6c, $9b, $93, $8f, $7c, $46, $49, $7c, $99, $9b, $71, $10
1415c     00 00 39 81 
14160     C2 F3 F9 C5 
14164     98 64 3B 27 
14168     34 45 5A 6D | 	byte	$00, $00, $39, $81, $c2, $f3, $f9, $c5, $98, $64, $3b, $27, $34, $45, $5a, $6d
1416c     75 7D 80 7A 
14170     5A 9E 8A 80 
14174     79 55 53 75 
14178     9F 96 72 34 | 	byte	$75, $7d, $80, $7a, $5a, $9e, $8a, $80, $79, $55, $53, $75, $9f, $96, $72, $34
1417c     00 06 3D 64 
14180     BB FA F9 CD 
14184     9D 67 27 2F 
14188     32 42 61 68 | 	byte	$00, $06, $3d, $64, $bb, $fa, $f9, $cd, $9d, $67, $27, $2f, $32, $42, $61, $68
1418c     69 84 8A 7B 
14190     66 9D 82 74 
14194     6C 50 59 80 
14198     A9 98 6D 18 | 	byte	$69, $84, $8a, $7b, $66, $9d, $82, $74, $6c, $50, $59, $80, $a9, $98, $6d, $18
1419c     00 08 3D 7F 
141a0     C5 FF F6 CF 
141a4     A6 5B 25 20 
141a8     2B 40 6C 72 | 	byte	$00, $08, $3d, $7f, $c5, $ff, $f6, $cf, $a6, $5b, $25, $20, $2b, $40, $6c, $72
141ac     7B 8F 96 86 
141b0     62 93 79 72 
141b4     75 5A 66 8B 
141b8     AC 97 61 10 | 	byte	$7b, $8f, $96, $86, $62, $93, $79, $72, $75, $5a, $66, $8b, $ac, $97, $61, $10
141bc     00 0D 49 76 
141c0     D6 F9 FE D0 
141c4     A9 54 25 1E 
141c8     20 3B 66 76 | 	byte	$00, $0d, $49, $76, $d6, $f9, $fe, $d0, $a9, $54, $25, $1e, $20, $3b, $66, $76
141cc     97 A4 A6 87 
141d0     53 7C 5D 55 
141d4     72 61 72 96 
141d8     BB 95 61 13 | 	byte	$97, $a4, $a6, $87, $53, $7c, $5d, $55, $72, $61, $72, $96, $bb, $95, $61, $13
141dc     00 11 54 72 
141e0     CE FF F5 D6 
141e4     A1 36 1D 2A 
141e8     1C 41 74 84 | 	byte	$00, $11, $54, $72, $ce, $ff, $f5, $d6, $a1, $36, $1d, $2a, $1c, $41, $74, $84
141ec     91 B8 AE 6D 
141f0     56 71 55 71 
141f4     89 70 79 A0 
141f8     A3 84 60 14 | 	byte	$91, $b8, $ae, $6d, $56, $71, $55, $71, $89, $70, $79, $a0, $a3, $84, $60, $14
141fc     00 20 53 91 
14200     F5 FF F5 C9 
14204     83 27 1E 30 
14208     31 4D 81 7B | 	byte	$00, $20, $53, $91, $f5, $ff, $f5, $c9, $83, $27, $1e, $30, $31, $4d, $81, $7b
1420c     A1 B0 B1 7C 
14210     58 6B 53 74 
14214     79 78 8D A6 
14218     AF 83 55 00 | 	byte	$a1, $b0, $b1, $7c, $58, $6b, $53, $74, $79, $78, $8d, $a6, $af, $83, $55, $00
1421c     01 3B 62 A9 
14220     FF FF E8 BC 
14224     85 37 2C 2C 
14228     2E 55 86 92 | 	byte	$01, $3b, $62, $a9, $ff, $ff, $e8, $bc, $85, $37, $2c, $2c, $2e, $55, $86, $92
1422c     B8 BA AF 6B 
14230     50 67 4D 7F 
14234     82 80 95 B2 
14238     B0 7D 4D 00 | 	byte	$b8, $ba, $af, $6b, $50, $67, $4d, $7f, $82, $80, $95, $b2, $b0, $7d, $4d, $00
1423c     00 4F 71 B8 
14240     FB FF E1 B9 
14244     76 31 36 31 
14248     38 60 7F 9C | 	byte	$00, $4f, $71, $b8, $fb, $ff, $e1, $b9, $76, $31, $36, $31, $38, $60, $7f, $9c
1424c     C0 C5 A0 5A 
14250     55 62 5E 8C 
14254     85 7E 98 AB 
14258     AA 81 31 00 | 	byte	$c0, $c5, $a0, $5a, $55, $62, $5e, $8c, $85, $7e, $98, $ab, $aa, $81, $31, $00
1425c     0A 43 84 E6 
14260     FF FD D5 8C 
14264     5F 2E 3A 2F 
14268     43 62 81 B4 | 	byte	$0a, $43, $84, $e6, $ff, $fd, $d5, $8c, $5f, $2e, $3a, $2f, $43, $62, $81, $b4
1426c     CB CF A2 3D 
14270     3D 50 63 91 
14274     9E 99 9C AD 
14278     A2 72 16 00 | 	byte	$cb, $cf, $a2, $3d, $3d, $50, $63, $91, $9e, $99, $9c, $ad, $a2, $72, $16, $00
1427c     11 46 7F ED 
14280     FF FF DB 90 
14284     54 26 37 2D 
14288     46 77 A2 BD | 	byte	$11, $46, $7f, $ed, $ff, $ff, $db, $90, $54, $26, $37, $2d, $46, $77, $a2, $bd
1428c     D0 CC 7B 30 
14290     3C 53 6E A0 
14294     A3 93 A4 AA 
14298     A3 71 00 00 | 	byte	$d0, $cc, $7b, $30, $3c, $53, $6e, $a0, $a3, $93, $a4, $aa, $a3, $71, $00, $00
1429c     1C 49 8C E4 
142a0     FF FF E5 9A 
142a4     45 23 27 17 
142a8     4D 6F A2 DF | 	byte	$1c, $49, $8c, $e4, $ff, $ff, $e5, $9a, $45, $23, $27, $17, $4d, $6f, $a2, $df
142ac     DF D3 61 10 
142b0     43 51 82 A3 
142b4     A9 8F 9A A8 
142b8     8A 5E 00 00 | 	byte	$df, $d3, $61, $10, $43, $51, $82, $a3, $a9, $8f, $9a, $a8, $8a, $5e, $00, $00
142bc     35 4F C6 FF 
142c0     FF EE AF 78 
142c4     41 3B 24 2C 
142c8     55 77 B4 DD | 	byte	$35, $4f, $c6, $ff, $ff, $ee, $af, $78, $41, $3b, $24, $2c, $55, $77, $b4, $dd
142cc     E7 C4 55 08 
142d0     42 58 8B AC 
142d4     B0 96 98 A3 
142d8     95 3C 00 06 | 	byte	$e7, $c4, $55, $08, $42, $58, $8b, $ac, $b0, $96, $98, $a3, $95, $3c, $00, $06
142dc     33 63 CC FB 
142e0     FF EF CA 77 
142e4     26 0D 0C 32 
142e8     6C 9A DF E8 | 	byte	$33, $63, $cc, $fb, $ff, $ef, $ca, $77, $26, $0d, $0c, $32, $6c, $9a, $df, $e8
142ec     D9 92 0E 1A 
142f0     52 73 97 B7 
142f4     A4 89 9A 9B 
142f8     77 16 00 11 | 	byte	$d9, $92, $0e, $1a, $52, $73, $97, $b7, $a4, $89, $9a, $9b, $77, $16, $00, $11
142fc     4E B2 F6 FF 
14300     F0 CE 95 6B 
14304     42 09 06 3B 
14308     5E C8 FC FC | 	byte	$4e, $b2, $f6, $ff, $f0, $ce, $95, $6b, $42, $09, $06, $3b, $5e, $c8, $fc, $fc
1430c     D1 77 00 06 
14310     60 78 A2 BC 
14314     B1 91 9C AC 
14318     6B 00 00 0D | 	byte	$d1, $77, $00, $06, $60, $78, $a2, $bc, $b1, $91, $9c, $ac, $6b, $00, $00, $0d
1431c     5E C8 F8 FF 
14320     FE C4 97 53 
14324     1C 00 1A 3E 
14328     94 E9 FF F2 | 	byte	$5e, $c8, $f8, $ff, $fe, $c4, $97, $53, $1c, $00, $1a, $3e, $94, $e9, $ff, $f2
1432c     A0 38 00 21 
14330     72 88 B3 BF 
14334     98 88 9B A6 
14338     4F 00 00 1B | 	byte	$a0, $38, $00, $21, $72, $88, $b3, $bf, $98, $88, $9b, $a6, $4f, $00, $00, $1b
1433c     80 DD FC FF 
14340     E1 B6 95 4D 
14344     10 01 26 44 
14348     9E FF FF FD | 	byte	$80, $dd, $fc, $ff, $e1, $b6, $95, $4d, $10, $01, $26, $44, $9e, $ff, $ff, $fd
1434c     84 13 01 34 
14350     94 94 BC BD 
14354     8F 8F 9B 9F 
14358     29 00 02 37 | 	byte	$84, $13, $01, $34, $94, $94, $bc, $bd, $8f, $8f, $9b, $9f, $29, $00, $02, $37
1435c     A8 ED FF F1 
14360     BF A1 7C 56 
14364     10 05 2E 6B 
14368     C1 FF FF D9 | 	byte	$a8, $ed, $ff, $f1, $bf, $a1, $7c, $56, $10, $05, $2e, $6b, $c1, $ff, $ff, $d9
1436c     68 00 00 4B 
14370     8A 99 C4 BC 
14374     92 95 A0 65 
14378     05 18 0F 54 | 	byte	$68, $00, $00, $4b, $8a, $99, $c4, $bc, $92, $95, $a0, $65, $05, $18, $0f, $54
1437c     C6 EB E3 DD 
14380     C0 AC 84 3B 
14384     00 06 39 8D 
14388     EB FF F9 A3 | 	byte	$c6, $eb, $e3, $dd, $c0, $ac, $84, $3b, $00, $06, $39, $8d, $eb, $ff, $f9, $a3
1438c     3E 09 00 53 
14390     89 A3 CC C1 
14394     9B 94 95 2E 
14398     02 1B 1D 74 | 	byte	$3e, $09, $00, $53, $89, $a3, $cc, $c1, $9b, $94, $95, $2e, $02, $1b, $1d, $74
1439c     D3 EA C9 DF 
143a0     BE B6 82 1D 
143a4     00 0F 4C B3 
143a8     F6 FF DE 81 | 	byte	$d3, $ea, $c9, $df, $be, $b6, $82, $1d, $00, $0f, $4c, $b3, $f6, $ff, $de, $81
143ac     16 00 11 6A 
143b0     8B A4 CD BE 
143b4     92 96 75 01 
143b8     10 19 2C 95 | 	byte	$16, $00, $11, $6a, $8b, $a4, $cd, $be, $92, $96, $75, $01, $10, $19, $2c, $95
143bc     DF C8 BD D4 
143c0     BE B0 6B 00 
143c4     00 19 66 D4 
143c8     FF FF C5 4B | 	byte	$df, $c8, $bd, $d4, $be, $b0, $6b, $00, $00, $19, $66, $d4, $ff, $ff, $c5, $4b
143cc     08 00 1B 7F 
143d0     85 B5 D7 BD 
143d4     8C 86 54 00 
143d8     23 20 3E A7 | 	byte	$08, $00, $1b, $7f, $85, $b5, $d7, $bd, $8c, $86, $54, $00, $23, $20, $3e, $a7
143dc     D2 CA C9 BD 
143e0     B3 94 54 00 
143e4     00 18 79 EF 
143e8     FF FF C6 39 | 	byte	$d2, $ca, $c9, $bd, $b3, $94, $54, $00, $00, $18, $79, $ef, $ff, $ff, $c6, $39
143ec     00 00 15 5F 
143f0     87 C2 D4 BF 
143f4     89 76 3A 0A 
143f8     3E 38 7B A3 | 	byte	$00, $00, $15, $5f, $87, $c2, $d4, $bf, $89, $76, $3a, $0a, $3e, $38, $7b, $a3
143fc     B6 B3 C3 AF 
14400     B9 87 2E 00 
14404     03 38 9B FF 
14408     FF F6 9F 1C | 	byte	$b6, $b3, $c3, $af, $b9, $87, $2e, $00, $03, $38, $9b, $ff, $ff, $f6, $9f, $1c
1440c     07 00 17 6C 
14410     8E CE E7 C3 
14414     7A 44 03 28 
14418     4E 6B 87 9E | 	byte	$07, $00, $17, $6c, $8e, $ce, $e7, $c3, $7a, $44, $03, $28, $4e, $6b, $87, $9e
1441c     8B 94 B4 CF 
14420     C3 7F 18 00 
14424     0F 50 C7 FF 
14428     FF D0 63 1F | 	byte	$8b, $94, $b4, $cf, $c3, $7f, $18, $00, $0f, $50, $c7, $ff, $ff, $d0, $63, $1f
1442c     0A 00 23 61 
14430     A0 DA E8 B4 
14434     6C 23 06 43 
14438     51 89 98 8F | 	byte	$0a, $00, $23, $61, $a0, $da, $e8, $b4, $6c, $23, $06, $43, $51, $89, $98, $8f
1443c     83 9C C0 BE 
14440     B4 4A 01 01 
14444     1A 75 E8 FF 
14448     F8 C5 4C 17 | 	byte	$83, $9c, $c0, $be, $b4, $4a, $01, $01, $1a, $75, $e8, $ff, $f8, $c5, $4c, $17
1444c     0E 00 1E 8B 
14450     AC E6 EA A3 
14454     3D 02 2E 4F 
14458     82 97 85 6E | 	byte	$0e, $00, $1e, $8b, $ac, $e6, $ea, $a3, $3d, $02, $2e, $4f, $82, $97, $85, $6e
1445c     75 A7 C5 CF 
14460     A8 19 00 0B 
14464     5B AB EF FF 
14468     D8 98 55 22 | 	byte	$75, $a7, $c5, $cf, $a8, $19, $00, $0b, $5b, $ab, $ef, $ff, $d8, $98, $55, $22
1446c     08 00 35 8C 
14470     C6 F2 E4 84 
14474     0D 0C 4A 6A 
14478     9B A1 72 5D | 	byte	$08, $00, $35, $8c, $c6, $f2, $e4, $84, $0d, $0c, $4a, $6a, $9b, $a1, $72, $5d
1447c     74 A2 CD DC 
14480     8F 18 00 24 
14484     71 BC FC E8 
14488     BA 8D 50 29 | 	byte	$74, $a2, $cd, $dc, $8f, $18, $00, $24, $71, $bc, $fc, $e8, $ba, $8d, $50, $29
1448c     05 08 4B A3 
14490     DA F4 D4 66 
14494     01 33 70 88 
14498     B2 8E 4B 54 | 	byte	$05, $08, $4b, $a3, $da, $f4, $d4, $66, $01, $33, $70, $88, $b2, $8e, $4b, $54
1449c     80 BC D9 DF 
144a0     6D 19 00 2D 
144a4     8E CC EF E6 
144a8     B7 82 41 15 | 	byte	$80, $bc, $d9, $df, $6d, $19, $00, $2d, $8e, $cc, $ef, $e6, $b7, $82, $41, $15
144ac     00 1D 81 C1 
144b0     EF F6 B3 0E 
144b4     10 5C 82 AB 
144b8     A9 58 38 5D | 	byte	$00, $1d, $81, $c1, $ef, $f6, $b3, $0e, $10, $5c, $82, $ab, $a9, $58, $38, $5d
144bc     99 CE E2 CC 
144c0     50 2C 2B 70 
144c4     99 BE C7 BD 
144c8     B9 8D 49 07 | 	byte	$99, $ce, $e2, $cc, $50, $2c, $2b, $70, $99, $be, $c7, $bd, $b9, $8d, $49, $07
144cc     00 0E 84 D2 
144d0     F0 EE 96 00 
144d4     2A 7A 94 B8 
144d8     9E 2A 3C 6C | 	byte	$00, $0e, $84, $d2, $f0, $ee, $96, $00, $2a, $7a, $94, $b8, $9e, $2a, $3c, $6c
144dc     A0 D3 E6 9A 
144e0     53 36 3A 81 
144e4     A1 B9 B7 BD 
144e8     B9 7C 4B 05 | 	byte	$a0, $d3, $e6, $9a, $53, $36, $3a, $81, $a1, $b9, $b7, $bd, $b9, $7c, $4b, $05
144ec     00 1F A5 DA 
144f0     EF E9 4C 00 
144f4     4D 90 B8 C4 
144f8     69 23 46 85 | 	byte	$00, $1f, $a5, $da, $ef, $e9, $4c, $00, $4d, $90, $b8, $c4, $69, $23, $46, $85
144fc     B5 CF CE 70 
14500     50 51 71 8B 
14504     96 9A 9C B9 
14508     BC 80 36 03 | 	byte	$b5, $cf, $ce, $70, $50, $51, $71, $8b, $96, $9a, $9c, $b9, $bc, $80, $36, $03
1450c     00 2B C0 D1 
14510     DE BD 1F 1A 
14514     6A 9F CF C3 
14518     4C 1B 52 81 | 	byte	$00, $2b, $c0, $d1, $de, $bd, $1f, $1a, $6a, $9f, $cf, $c3, $4c, $1b, $52, $81
1451c     AB D2 C6 7A 
14520     5E 65 84 96 
14524     94 82 89 A5 
14528     AD 82 48 14 | 	byte	$ab, $d2, $c6, $7a, $5e, $65, $84, $96, $94, $82, $89, $a5, $ad, $82, $48, $14
1452c     00 31 9B C8 
14530     C8 98 01 33 
14534     75 B6 DF B4 
14538     47 20 4D 70 | 	byte	$00, $31, $9b, $c8, $c8, $98, $01, $33, $75, $b6, $df, $b4, $47, $20, $4d, $70
1453c     8F C2 9C 7C 
14540     8E 9A 8D 8C 
14544     6F 60 8D B6 
14548     AB 7C 27 1D | 	byte	$8f, $c2, $9c, $7c, $8e, $9a, $8d, $8c, $6f, $60, $8d, $b6, $ab, $7c, $27, $1d
1454c     1B 3E 99 B6 
14550     BA 7C 27 59 
14554     88 CC E3 8C 
14558     2A 2B 4D 6E | 	byte	$1b, $3e, $99, $b6, $ba, $7c, $27, $59, $88, $cc, $e3, $8c, $2a, $2b, $4d, $6e
1455c     9C A7 8D 92 
14560     A8 BA 9D 72 
14564     52 5E 90 B0 
14568     AE 7E 3F 3C | 	byte	$9c, $a7, $8d, $92, $a8, $ba, $9d, $72, $52, $5e, $90, $b0, $ae, $7e, $3f, $3c
1456c     2F 45 A7 A7 
14570     A5 4F 4B 78 
14574     9E E7 D9 6A 
14578     2A 32 51 6C | 	byte	$2f, $45, $a7, $a7, $a5, $4f, $4b, $78, $9e, $e7, $d9, $6a, $2a, $32, $51, $6c
1457c     8A 90 94 B0 
14580     CD E2 A1 56 
14584     34 4C 86 BB 
14588     B9 75 45 3F | 	byte	$8a, $90, $94, $b0, $cd, $e2, $a1, $56, $34, $4c, $86, $bb, $b9, $75, $45, $3f
1458c     2F 44 8A 91 
14590     71 4D 80 94 
14594     BE EF BB 58 
14598     33 31 4C 65 | 	byte	$2f, $44, $8a, $91, $71, $4d, $80, $94, $be, $ef, $bb, $58, $33, $31, $4c, $65
1459c     6C 89 A4 CE 
145a0     EE DF 9B 49 
145a4     34 48 71 A8 
145a8     A2 78 5C 59 | 	byte	$6c, $89, $a4, $ce, $ee, $df, $9b, $49, $34, $48, $71, $a8, $a2, $78, $5c, $59
145ac     18 40 86 78 
145b0     5A 82 A3 A7 
145b4     CE D7 7E 45 
145b8     28 29 4D 62 | 	byte	$18, $40, $86, $78, $5a, $82, $a3, $a7, $ce, $d7, $7e, $45, $28, $29, $4d, $62
145bc     68 A2 CB ED 
145c0     FD DA 74 2C 
145c4     27 41 78 AE 
145c8     9F 8A 7D 69 | 	byte	$68, $a2, $cb, $ed, $fd, $da, $74, $2c, $27, $41, $78, $ae, $9f, $8a, $7d, $69
145cc     1C 35 7E 42 
145d0     53 B0 B7 C4 
145d4     DD BA 6D 55 
145d8     25 22 41 4D | 	byte	$1c, $35, $7e, $42, $53, $b0, $b7, $c4, $dd, $ba, $6d, $55, $25, $22, $41, $4d
145dc     59 A4 F6 FF 
145e0     FF D5 3B 06 
145e4     2A 4E 88 B0 
145e8     A4 91 81 62 | 	byte	$59, $a4, $f6, $ff, $ff, $d5, $3b, $06, $2a, $4e, $88, $b0, $a4, $91, $81, $62
145ec     14 34 39 26 
145f0     7E CB DA DD 
145f4     CF 9C 60 5B 
145f8     29 1D 28 2E | 	byte	$14, $34, $39, $26, $7e, $cb, $da, $dd, $cf, $9c, $60, $5b, $29, $1d, $28, $2e
145fc     6D B7 FF FF 
14600     FF BC 1D 04 
14604     20 4A 79 A4 
14608     AB AA 8D 62 | 	byte	$6d, $b7, $ff, $ff, $ff, $bc, $1d, $04, $20, $4a, $79, $a4, $ab, $aa, $8d, $62
1460c     00 1A 16 4D 
14610     B9 E6 F2 D5 
14614     A1 87 67 57 
14618     17 08 0E 39 | 	byte	$00, $1a, $16, $4d, $b9, $e6, $f2, $d5, $a1, $87, $67, $57, $17, $08, $0e, $39
1461c     95 F8 FF FF 
14620     E5 71 07 10 
14624     30 47 7A A4 
14628     BA C3 91 51 | 	byte	$95, $f8, $ff, $ff, $e5, $71, $07, $10, $30, $47, $7a, $a4, $ba, $c3, $91, $51
1462c     00 00 1F 7C 
14630     E0 F7 F5 BB 
14634     88 86 77 50 
14638     13 00 07 3F | 	byte	$00, $00, $1f, $7c, $e0, $f7, $f5, $bb, $88, $86, $77, $50, $13, $00, $07, $3f
1463c     A0 FF FF FF 
14640     D0 47 17 15 
14644     25 3C 65 A1 
14648     C0 CA 85 2A | 	byte	$a0, $ff, $ff, $ff, $d0, $47, $17, $15, $25, $3c, $65, $a1, $c0, $ca, $85, $2a
1464c     00 05 3E A0 
14650     F5 FF EA 9A 
14654     74 84 72 3A 
14658     04 00 1C 54 | 	byte	$00, $05, $3e, $a0, $f5, $ff, $ea, $9a, $74, $84, $72, $3a, $04, $00, $1c, $54
1465c     D2 FF FF FF 
14660     98 3D 19 0E 
14664     22 35 6C A7 
14668     CA AE 57 0D | 	byte	$d2, $ff, $ff, $ff, $98, $3d, $19, $0e, $22, $35, $6c, $a7, $ca, $ae, $57, $0d
1466c     00 18 9E BC 
14670     FB FE D6 70 
14674     6F 91 62 1E 
14678     00 00 29 72 | 	byte	$00, $18, $9e, $bc, $fb, $fe, $d6, $70, $6f, $91, $62, $1e, $00, $00, $29, $72
1467c     EE FF FF F4 
14680     70 26 07 05 
14684     11 30 74 AB 
14688     CF AE 31 00 | 	byte	$ee, $ff, $ff, $f4, $70, $26, $07, $05, $11, $30, $74, $ab, $cf, $ae, $31, $00
1468c     00 37 AA DC 
14690     FF EE 84 5A 
14694     78 92 62 00 
14698     00 00 37 A0 | 	byte	$00, $37, $aa, $dc, $ff, $ee, $84, $5a, $78, $92, $62, $00, $00, $00, $37, $a0
1469c     FF FF FF C1 
146a0     5D 29 08 00 
146a4     1A 3C 72 B6 
146a8     B8 87 03 00 | 	byte	$ff, $ff, $ff, $c1, $5d, $29, $08, $00, $1a, $3c, $72, $b6, $b8, $87, $03, $00
146ac     00 61 C8 FF 
146b0     FF D5 73 65 
146b4     80 7D 41 00 
146b8     00 1E 78 E1 | 	byte	$00, $61, $c8, $ff, $ff, $d5, $73, $65, $80, $7d, $41, $00, $00, $1e, $78, $e1
146bc     FF FF E1 97 
146c0     7B 57 11 06 
146c4     29 54 A3 D8 
146c8     C3 68 00 00 | 	byte	$ff, $ff, $e1, $97, $7b, $57, $11, $06, $29, $54, $a3, $d8, $c3, $68, $00, $00
146cc     0A 76 DE FF 
146d0     FF B7 71 76 
146d4     8C 6C 2B 00 
146d8     05 3C 9F FA | 	byte	$0a, $76, $de, $ff, $ff, $b7, $71, $76, $8c, $6c, $2b, $00, $05, $3c, $9f, $fa
146dc     FF F8 C3 9A 
146e0     74 52 10 0B 
146e4     42 6D B7 D9 
146e8     B6 3C 00 00 | 	byte	$ff, $f8, $c3, $9a, $74, $52, $10, $0b, $42, $6d, $b7, $d9, $b6, $3c, $00, $00
146ec     0F B3 F9 FF 
146f0     E0 9A 76 82 
146f4     9B 68 06 00 
146f8     07 5A D5 FF | 	byte	$0f, $b3, $f9, $ff, $e0, $9a, $76, $82, $9b, $68, $06, $00, $07, $5a, $d5, $ff
146fc     FF ED AD 91 
14700     7B 44 0E 23 
14704     4D 7C C0 C4 
14708     8E 19 07 0F | 	byte	$ff, $ed, $ad, $91, $7b, $44, $0e, $23, $4d, $7c, $c0, $c4, $8e, $19, $07, $0f
1470c     37 CE F7 DE 
14710     B7 92 80 83 
14714     89 25 00 0D 
14718     32 8C DC F4 | 	byte	$37, $ce, $f7, $de, $b7, $92, $80, $83, $89, $25, $00, $0d, $32, $8c, $dc, $f4
1471c     DE C2 BA 89 
14720     70 3B 13 3C 
14724     6B 88 B5 B1 
14728     3B 00 35 1D | 	byte	$de, $c2, $ba, $89, $70, $3b, $13, $3c, $6b, $88, $b5, $b1, $3b, $00, $35, $1d
1472c     58 D0 E7 B9 
14730     B5 A2 86 80 
14734     74 03 01 19 
14738     5E A2 EF E1 | 	byte	$58, $d0, $e7, $b9, $b5, $a2, $86, $80, $74, $03, $01, $19, $5e, $a2, $ef, $e1
1473c     D1 B6 9F 8E 
14740     68 41 2F 4C 
14744     75 91 B3 7A 
14748     0C 34 4B 4E | 	byte	$d1, $b6, $9f, $8e, $68, $41, $2f, $4c, $75, $91, $b3, $7a, $0c, $34, $4b, $4e
1474c     7F CA B4 A8 
14750     C3 AD 80 73 
14754     53 09 40 53 
14758     7A AE B9 B3 | 	byte	$7f, $ca, $b4, $a8, $c3, $ad, $80, $73, $53, $09, $40, $53, $7a, $ae, $b9, $b3
1475c     B7 B5 AA 85 
14760     5B 40 4A 62 
14764     79 8E 8E 4B 
14768     20 54 5E 58 | 	byte	$b7, $b5, $aa, $85, $5b, $40, $4a, $62, $79, $8e, $8e, $4b, $20, $54, $5e, $58
1476c     7B B0 A0 BD 
14770     DE A8 72 47 
14774     16 1E 54 72 
14778     94 A7 94 A3 | 	byte	$7b, $b0, $a0, $bd, $de, $a8, $72, $47, $16, $1e, $54, $72, $94, $a7, $94, $a3
1477c     C1 C2 A7 76 
14780     4D 41 59 75 
14784     76 7F 5C 16 
14788     5D 77 79 62 | 	byte	$c1, $c2, $a7, $76, $4d, $41, $59, $75, $76, $7f, $5c, $16, $5d, $77, $79, $62
1478c     7D 90 A1 D5 
14790     EF 90 58 18 
14794     23 51 7F 91 
14798     96 88 7D AF | 	byte	$7d, $90, $a1, $d5, $ef, $90, $58, $18, $23, $51, $7f, $91, $96, $88, $7d, $af
1479c     D2 B9 97 64 
147a0     4D 53 73 79 
147a4     6E 5B 16 44 
147a8     8C 96 87 51 | 	byte	$d2, $b9, $97, $64, $4d, $53, $73, $79, $6e, $5b, $16, $44, $8c, $96, $87, $51
147ac     62 7F B8 F9 
147b0     DA 74 1D 10 
147b4     50 7D 9A A4 
147b8     75 5C 84 C5 | 	byte	$62, $7f, $b8, $f9, $da, $74, $1d, $10, $50, $7d, $9a, $a4, $75, $5c, $84, $c5
147bc     C5 A8 98 58 
147c0     52 81 82 6D 
147c4     59 08 20 85 
147c8     A7 A9 7A 43 | 	byte	$c5, $a8, $98, $58, $52, $81, $82, $6d, $59, $08, $20, $85, $a7, $a9, $7a, $43
147cc     50 91 D5 FE 
147d0     CB 4D 00 29 
147d4     63 94 AF 94 
147d8     56 51 99 DD | 	byte	$50, $91, $d5, $fe, $cb, $4d, $00, $29, $63, $94, $af, $94, $56, $51, $99, $dd
147dc     C3 AF 74 42 
147e0     5F 87 82 66 
147e4     41 05 49 9E 
147e8     C7 B9 4E 1E | 	byte	$c3, $af, $74, $42, $5f, $87, $82, $66, $41, $05, $49, $9e, $c7, $b9, $4e, $1e
147ec     5C A1 F1 F7 
147f0     C1 30 05 4C 
147f4     8B BB BC 85 
147f8     40 4D 9D C5 | 	byte	$5c, $a1, $f1, $f7, $c1, $30, $05, $4c, $8b, $bb, $bc, $85, $40, $4d, $9d, $c5
147fc     C4 AF 6C 57 
14800     76 87 79 55 
14804     00 2F 87 B1 
14808     C7 89 15 2B | 	byte	$c4, $af, $6c, $57, $76, $87, $79, $55, $00, $2f, $87, $b1, $c7, $89, $15, $2b
1480c     6F C4 FC F2 
14810     80 10 1A 6B 
14814     9F C6 A8 46 
14818     31 64 AF BF | 	byte	$6f, $c4, $fc, $f2, $80, $10, $1a, $6b, $9f, $c6, $a8, $46, $31, $64, $af, $bf
1481c     BE 9B 60 68 
14820     7F 88 5F 18 
14824     15 57 9B D7 
14828     BB 57 0C 46 | 	byte	$be, $9b, $60, $68, $7f, $88, $5f, $18, $15, $57, $9b, $d7, $bb, $57, $0c, $46
1482c     97 E0 F9 C7 
14830     34 12 43 8B 
14834     BD C6 77 3D 
14838     50 8B B6 BF | 	byte	$97, $e0, $f9, $c7, $34, $12, $43, $8b, $bd, $c6, $77, $3d, $50, $8b, $b6, $bf
1483c     B4 86 6F 72 
14840     84 68 36 17 
14844     52 88 C8 CA 
14848     6E 01 28 5D | 	byte	$b4, $86, $6f, $72, $84, $68, $36, $17, $52, $88, $c8, $ca, $6e, $01, $28, $5d
1484c     BB E8 E7 85 
14850     29 3D 78 A7 
14854     BB 92 48 3A 
14858     61 91 A7 AF | 	byte	$bb, $e8, $e7, $85, $29, $3d, $78, $a7, $bb, $92, $48, $3a, $61, $91, $a7, $af
1485c     A8 96 83 84 
14860     6A 1C 10 51 
14864     84 C4 D3 98 
14868     00 17 52 A2 | 	byte	$a8, $96, $83, $84, $6a, $1c, $10, $51, $84, $c4, $d3, $98, $00, $17, $52, $a2
1486c     D5 F3 A4 53 
14870     40 75 A1 BA 
14874     9F 62 2A 45 
14878     7E AE B5 BB | 	byte	$d5, $f3, $a4, $53, $40, $75, $a1, $ba, $9f, $62, $2a, $45, $7e, $ae, $b5, $bb
1487c     A4 87 7F 76 
14880     4C 0A 4A 79 
14884     AC DD BB 42 
14888     02 41 85 B2 | 	byte	$a4, $87, $7f, $76, $4c, $0a, $4a, $79, $ac, $dd, $bb, $42, $02, $41, $85, $b2
1488c     FB CA 6E 53 
14890     5B 93 B5 B5 
14894     77 2E 34 56 
14898     90 AE BE B9 | 	byte	$fb, $ca, $6e, $53, $5b, $93, $b5, $b5, $77, $2e, $34, $56, $90, $ae, $be, $b9
1489c     9A 81 74 51 
148a0     09 45 7B B1 
148a4     D5 CD 5A 00 
148a8     29 59 96 D7 | 	byte	$9a, $81, $74, $51, $09, $45, $7b, $b1, $d5, $cd, $5a, $00, $29, $59, $96, $d7
148ac     E4 A8 61 6F 
148b0     8C 9F B2 98 
148b4     50 2E 47 6F 
148b8     95 B6 C6 AB | 	byte	$e4, $a8, $61, $6f, $8c, $9f, $b2, $98, $50, $2e, $47, $6f, $95, $b6, $c6, $ab
148bc     93 74 43 0E 
148c0     43 7D B0 D4 
148c4     D6 70 00 15 
148c8     40 79 BC E6 | 	byte	$93, $74, $43, $0e, $43, $7d, $b0, $d4, $d6, $70, $00, $15, $40, $79, $bc, $e6
148cc     C9 82 6A 8F 
148d0     94 A8 A0 65 
148d4     34 46 50 80 
148d8     9A BD B1 A0 | 	byte	$c9, $82, $6a, $8f, $94, $a8, $a0, $65, $34, $46, $50, $80, $9a, $bd, $b1, $a0
148dc     7B 2D 17 3F 
148e0     5E AC D9 E4 
148e4     92 00 06 18 
148e8     5B A8 D6 D8 | 	byte	$7b, $2d, $17, $3f, $5e, $ac, $d9, $e4, $92, $00, $06, $18, $5b, $a8, $d6, $d8
148ec     A5 87 8E 89 
148f0     9A 94 77 58 
148f4     59 65 71 83 
148f8     93 91 92 84 | 	byte	$a5, $87, $8e, $89, $9a, $94, $77, $58, $59, $65, $71, $83, $93, $91, $92, $84
148fc     58 49 59 77 
14900     91 BA D3 A1 
14904     4B 19 12 3B 
14908     75 B4 C3 B0 | 	byte	$58, $49, $59, $77, $91, $ba, $d3, $a1, $4b, $19, $12, $3b, $75, $b4, $c3, $b0
1490c     B3 AA 9F 9D 
14910     8C 61 52 58 
14914     6B 82 92 90 
14918     80 74 5C 4D | 	byte	$b3, $aa, $9f, $9d, $8c, $61, $52, $58, $6b, $82, $92, $90, $80, $74, $5c, $4d
1491c     63 85 96 9A 
14920     A8 A1 6F 57 
14924     45 3E 57 75 
14928     9C A1 98 9E | 	byte	$63, $85, $96, $9a, $a8, $a1, $6f, $57, $45, $3e, $57, $75, $9c, $a1, $98, $9e
1492c     A4 A8 AF A3 
14930     79 48 52 62 
14934     7C 90 91 89 
14938     5B 37 49 5A | 	byte	$a4, $a8, $af, $a3, $79, $48, $52, $62, $7c, $90, $91, $89, $5b, $37, $49, $5a
1493c     96 AA A6 9A 
14940     83 60 66 6A 
14944     6D 72 84 84 
14948     80 85 80 8B | 	byte	$96, $aa, $a6, $9a, $83, $60, $66, $6a, $6d, $72, $84, $84, $80, $85, $80, $8b
1494c     A5 B5 BE 98 
14950     66 54 5D 6F 
14954     85 9C 80 39 
14958     31 4C 77 A1 | 	byte	$a5, $b5, $be, $98, $66, $54, $5d, $6f, $85, $9c, $80, $39, $31, $4c, $77, $a1
1495c     B9 9E 6B 55 
14960     61 7D 98 A3 
14964     96 85 68 55 
14968     67 75 83 A1 | 	byte	$b9, $9e, $6b, $55, $61, $7d, $98, $a3, $96, $85, $68, $55, $67, $75, $83, $a1
1496c     C2 C1 AD 88 
14970     62 59 6B 78 
14974     76 53 4B 49 
14978     62 7E 91 9A | 	byte	$c2, $c1, $ad, $88, $62, $59, $6b, $78, $76, $53, $4b, $49, $62, $7e, $91, $9a
1497c     83 69 6F 83 
14980     9C B7 B5 94 
14984     62 49 43 4E 
14988     78 98 AD BA | 	byte	$83, $69, $6f, $83, $9c, $b7, $b5, $94, $62, $49, $43, $4e, $78, $98, $ad, $ba
1498c     C4 B4 98 76 
14990     61 62 57 49 
14994     48 50 56 68 
14998     8B 99 8F 8B | 	byte	$c4, $b4, $98, $76, $61, $62, $57, $49, $48, $50, $56, $68, $8b, $99, $8f, $8b
1499c     85 85 98 B3 
149a0     B6 9C 7E 47 
149a4     36 44 66 82 
149a8     A4 B5 B4 B7 | 	byte	$85, $85, $98, $b3, $b6, $9c, $7e, $47, $36, $44, $66, $82, $a4, $b5, $b4, $b7
149ac     B6 A1 8F 62 
149b0     34 2F 35 40 
149b4     4C 72 82 92 
149b8     A0 A0 98 94 | 	byte	$b6, $a1, $8f, $62, $34, $2f, $35, $40, $4c, $72, $82, $92, $a0, $a0, $98, $94
149bc     9D 99 94 8E 
149c0     7B 59 53 5A 
149c4     6B 85 95 9F 
149c8     A0 98 99 A5 | 	byte	$9d, $99, $94, $8e, $7b, $59, $53, $5a, $6b, $85, $95, $9f, $a0, $98, $99, $a5
149cc     A4 81 5D 2D 
149d0     1F 31 50 6C 
149d4     8D A1 A8 A7 
149d8     9E 94 86 7E | 	byte	$a4, $81, $5d, $2d, $1f, $31, $50, $6c, $8d, $a1, $a8, $a7, $9e, $94, $86, $7e
149dc     7A 82 88 81 
149e0     78 75 72 79 
149e4     87 92 8E 89 
149e8     86 8D 90 81 | 	byte	$7a, $82, $88, $81, $78, $75, $72, $79, $87, $92, $8e, $89, $86, $8d, $90, $81
149ec     6A 56 44 45 
149f0     58 7B 90 A0 
149f4     9E 91 8A 83 
149f8     80 80 7E 82 | 	byte	$6a, $56, $44, $45, $58, $7b, $90, $a0, $9e, $91, $8a, $83, $80, $80, $7e, $82
149fc     87 8D 8E 88 
14a00     82 80 82 89 
14a04     8B 86 7B 65 
14a08     54 5F 6E 7D | 	byte	$87, $8d, $8e, $88, $82, $80, $82, $89, $8b, $86, $7b, $65, $54, $5f, $6e, $7d
14a0c     82 81 84 82 
14a10     88 8D 86 7F 
14a14     6E 6B 7A 82 
14a18     8D 86 85 85 | 	byte	$82, $81, $84, $82, $88, $8d, $86, $7f, $6e, $6b, $7a, $82, $8d, $86, $85, $85
14a1c     8A 97 92 8A 
14a20     83 7E 86 89 
14a24     77 56 3A 3C 
14a28     50 7F A1 AF | 	byte	$8a, $97, $92, $8a, $83, $7e, $86, $89, $77, $56, $3a, $3c, $50, $7f, $a1, $af
14a2c     AF A0 89 79 
14a30     72 69 67 64 
14a34     64 7C 96 9D 
14a38     9F 88 80 7B | 	byte	$af, $a0, $89, $79, $72, $69, $67, $64, $64, $7c, $96, $9d, $9f, $88, $80, $7b
14a3c     86 8E 8F 87 
14a40     84 77 71 63 
14a44     55 50 4D 6B 
14a48     88 B0 BC B1 | 	byte	$86, $8e, $8f, $87, $84, $77, $71, $63, $55, $50, $4d, $6b, $88, $b0, $bc, $b1
14a4c     A1 7C 6A 61 
14a50     61 6B 73 79 
14a54     81 99 9F 90 
14a58     89 7B 78 85 | 	byte	$a1, $7c, $6a, $61, $61, $6b, $73, $79, $81, $99, $9f, $90, $89, $7b, $78, $85
14a5c     8F 8D 80 72 
14a60     68 66 6C 78 
14a64     70 6A 66 7C 
14a68     96 A3 A1 94 | 	byte	$8f, $8d, $80, $72, $68, $66, $6c, $78, $70, $6a, $66, $7c, $96, $a3, $a1, $94
14a6c     7E 71 75 76 
14a70     78 7D 7B 75 
14a74     80 8F 8D 84 
14a78     82 75 7F 8F | 	byte	$7e, $71, $75, $76, $78, $7d, $7b, $75, $80, $8f, $8d, $84, $82, $75, $7f, $8f
14a7c     8E 85 73 6B 
14a80     6D 73 7F 7B 
14a84     76 64 61 75 
14a88     87 97 9C 99 | 	byte	$8e, $85, $73, $6b, $6d, $73, $7f, $7b, $76, $64, $61, $75, $87, $97, $9c, $99
14a8c     8F 87 85 75 
14a90     76 6E 64 6E 
14a94     7F 8F 8E 88 
14a98     76 78 87 8C | 	byte	$8f, $87, $85, $75, $76, $6e, $64, $6e, $7f, $8f, $8e, $88, $76, $78, $87, $8c
14a9c     84 81 75 71 
14aa0     75 80 82 76 
14aa4     6B 59 63 7B 
14aa8     94 A2 A4 9E | 	byte	$84, $81, $75, $71, $75, $80, $82, $76, $6b, $59, $63, $7b, $94, $a2, $a4, $9e
14aac     94 8D 7B 69 
14ab0     65 5D 61 7D 
14ab4     90 93 8D 84 
14ab8     76 7A 8C 8A | 	byte	$94, $8d, $7b, $69, $65, $5d, $61, $7d, $90, $93, $8d, $84, $76, $7a, $8c, $8a
14abc     81 77 6B 6C 
14ac0     7F 89 81 75 
14ac4     65 5C 6C 84 
14ac8     98 A3 A7 9D | 	byte	$81, $77, $6b, $6c, $7f, $89, $81, $75, $65, $5c, $6c, $84, $98, $a3, $a7, $9d
14acc     90 83 69 5D 
14ad0     61 5D 73 91 
14ad4     99 99 8A 79 
14ad8     73 7D 89 81 | 	byte	$90, $83, $69, $5d, $61, $5d, $73, $91, $99, $99, $8a, $79, $73, $7d, $89, $81
14adc     7E 70 72 7E 
14ae0     8B 8E 82 69 
14ae4     5C 64 7A 8F 
14ae8     9E A4 9D 8F | 	byte	$7e, $70, $72, $7e, $8b, $8e, $82, $69, $5c, $64, $7a, $8f, $9e, $a4, $9d, $8f
14aec     83 71 6D 66 
14af0     68 71 83 92 
14af4     90 8B 7A 70 
14af8     77 7F 83 82 | 	byte	$83, $71, $6d, $66, $68, $71, $83, $92, $90, $8b, $7a, $70, $77, $7f, $83, $82
14afc     7E 7E 7F 8A 
14b00     8E 85 72 5F 
14b04     60 6C 7E 8E 
14b08     97 9A 94 8F | 	byte	$7e, $7e, $7f, $8a, $8e, $85, $72, $5f, $60, $6c, $7e, $8e, $97, $9a, $94, $8f
14b0c     84 77 71 6C 
14b10     6C 78 83 84 
14b14     81 81 76 7C 
14b18     89 8B 8A 84 | 	byte	$84, $77, $71, $6c, $6c, $78, $83, $84, $81, $81, $76, $7c, $89, $8b, $8a, $84
14b1c     80 7A 7B 8C 
14b20     84 7C 69 5F 
14b24     65 70 7E 8C 
14b28     99 9D 9A 99 | 	byte	$80, $7a, $7b, $8c, $84, $7c, $69, $5f, $65, $70, $7e, $8c, $99, $9d, $9a, $99
14b2c     87 77 6B 62 
14b30     67 75 82 86 
14b34     8C 87 80 86 
14b38     8A 87 85 7F | 	byte	$87, $77, $6b, $62, $67, $75, $82, $86, $8c, $87, $80, $86, $8a, $87, $85, $7f
14b3c     7B 71 7C 82 
14b40     7D 75 6D 6D 
14b44     74 7C 88 8B 
14b48     8F 93 96 95 | 	byte	$7b, $71, $7c, $82, $7d, $75, $6d, $6d, $74, $7c, $88, $8b, $8f, $93, $96, $95
14b4c     89 7F 6F 63 
14b50     72 7A 81 8A 
14b54     8A 7E 78 7E 
14b58     79 7E 80 7A | 	byte	$89, $7f, $6f, $63, $72, $7a, $81, $8a, $8a, $7e, $78, $7e, $79, $7e, $80, $7a
14b5c     7C 7C 85 87 
14b60     84 7A 6C 6C 
14b64     71 78 83 8F 
14b68     9A A4 A5 99 | 	byte	$7c, $7c, $85, $87, $84, $7a, $6c, $6c, $71, $78, $83, $8f, $9a, $a4, $a5, $99
14b6c     87 73 5D 5C 
14b70     67 6C 77 7F 
14b74     7D 7C 86 87 
14b78     84 85 83 80 | 	byte	$87, $73, $5d, $5c, $67, $6c, $77, $7f, $7d, $7c, $86, $87, $84, $85, $83, $80
14b7c     7E 7E 7C 7D 
14b80     82 7E 7F 82 
14b84     83 7E 85 8B 
14b88     91 97 93 80 | 	byte	$7e, $7e, $7c, $7d, $82, $7e, $7f, $82, $83, $7e, $85, $8b, $91, $97, $93, $80
14b8c     6B 59 54 65 
14b90     74 80 8D 88 
14b94     86 86 80 7F 
14b98     84 7D 7A 82 | 	byte	$6b, $59, $54, $65, $74, $80, $8d, $88, $86, $86, $80, $7f, $84, $7d, $7a, $82
14b9c     8B 8C 8A 8B 
14ba0     82 78 79 72 
14ba4     69 69 74 7D 
14ba8     91 9F 9D 8D | 	byte	$8b, $8c, $8a, $8b, $82, $78, $79, $72, $69, $69, $74, $7d, $91, $9f, $9d, $8d
14bac     76 63 61 6E 
14bb0     76 85 8E 88 
14bb4     87 84 80 80 
14bb8     80 80 80 80 | 	byte	$76, $63, $61, $6e, $76, $85, $8e, $88, $87, $84, $80, $80, $80, $80, $80, $80
14bbc     4F 4B 55 16 
14bc0     00 0B 4B 91 
14bc4     F2 F3 FF FF 
14bc8     E4 88 0D 10 | 	byte	$4f, $4b, $55, $16, $00, $0b, $4b, $91, $f2, $f3, $ff, $ff, $e4, $88, $0d, $10
14bcc     32 63 AA D3 
14bd0     F1 CD 92 39 
14bd4     01 00 14 8A 
14bd8     FF FF E7 7D | 	byte	$32, $63, $aa, $d3, $f1, $cd, $92, $39, $01, $00, $14, $8a, $ff, $ff, $e7, $7d
14bdc     44 4F 51 24 
14be0     05 0C 3C 90 
14be4     CA F5 FF FA 
14be8     DE 8A 3C 10 | 	byte	$44, $4f, $51, $24, $05, $0c, $3c, $90, $ca, $f5, $ff, $fa, $de, $8a, $3c, $10
14bec     30 59 9C C4 
14bf0     E3 CB 93 4C 
14bf4     1F 01 32 82 
14bf8     EA FF D1 9C | 	byte	$30, $59, $9c, $c4, $e3, $cb, $93, $4c, $1f, $01, $32, $82, $ea, $ff, $d1, $9c
14bfc     51 56 31 3A 
14c00     14 21 38 81 
14c04     A2 DD F3 E8 
14c08     E0 83 6D 3D | 	byte	$51, $56, $31, $3a, $14, $21, $38, $81, $a2, $dd, $f3, $e8, $e0, $83, $6d, $3d
14c0c     37 58 97 AE 
14c10     D0 B3 97 4F 
14c14     33 1A 49 9A 
14c18     BE E4 CB 9C | 	byte	$37, $58, $97, $ae, $d0, $b3, $97, $4f, $33, $1a, $49, $9a, $be, $e4, $cb, $9c
14c1c     70 5A 2D 29 
14c20     36 3D 4A 7E 
14c24     91 B7 E7 DC 
14c28     CB 86 80 6D | 	byte	$70, $5a, $2d, $29, $36, $3d, $4a, $7e, $91, $b7, $e7, $dc, $cb, $86, $80, $6d
14c2c     4A 69 8C AB 
14c30     A9 A0 80 59 
14c34     46 3A 5E A3 
14c38     AA AA A3 A5 | 	byte	$4a, $69, $8c, $ab, $a9, $a0, $80, $59, $46, $3a, $5e, $a3, $aa, $aa, $a3, $a5
14c3c     9B 6A 32 1D 
14c40     3F 51 61 7F 
14c44     90 AC CB D7 
14c48     A4 80 7D 8F | 	byte	$9b, $6a, $32, $1d, $3f, $51, $61, $7f, $90, $ac, $cb, $d7, $a4, $80, $7d, $8f
14c4c     75 70 81 A5 
14c50     90 8C 6C 5D 
14c54     4F 58 8A A7 
14c58     A1 6D 78 99 | 	byte	$75, $70, $81, $a5, $90, $8c, $6c, $5d, $4f, $58, $8a, $a7, $a1, $6d, $78, $99
14c5c     AC 8D 41 24 
14c60     36 6B 83 8E 
14c64     89 A3 9B B3 
14c68     89 75 96 98 | 	byte	$ac, $8d, $41, $24, $36, $6b, $83, $8e, $89, $a3, $9b, $b3, $89, $75, $96, $98
14c6c     AB B1 A6 AF 
14c70     8A 59 43 35 
14c74     40 55 99 C3 
14c78     BE 6D 51 6F | 	byte	$ab, $b1, $a6, $af, $8a, $59, $43, $35, $40, $55, $99, $c3, $be, $6d, $51, $6f
14c7c     9F 81 44 2A 
14c80     4A 78 BE AB 
14c84     90 80 6F 81 
14c88     6F 79 95 A6 | 	byte	$9f, $81, $44, $2a, $4a, $78, $be, $ab, $90, $80, $6f, $81, $6f, $79, $95, $a6
14c8c     B7 C7 AD A3 
14c90     86 5E 30 3B 
14c94     43 79 B4 CB 
14c98     AF 65 44 54 | 	byte	$b7, $c7, $ad, $a3, $86, $5e, $30, $3b, $43, $79, $b4, $cb, $af, $65, $44, $54
14c9c     94 7A 62 2F 
14ca0     4E 7B CD B9 
14ca4     9F 81 75 5F 
14ca8     53 6B 8D B3 | 	byte	$94, $7a, $62, $2f, $4e, $7b, $cd, $b9, $9f, $81, $75, $5f, $53, $6b, $8d, $b3
14cac     C8 DF BF 94 
14cb0     71 48 20 30 
14cb4     4A 9D DA D9 
14cb8     A8 58 3C 3D | 	byte	$c8, $df, $bf, $94, $71, $48, $20, $30, $4a, $9d, $da, $d9, $a8, $58, $3c, $3d
14cbc     76 78 6A 5B 
14cc0     5F 84 B1 C4 
14cc4     A8 83 76 5E 
14cc8     37 64 84 A7 | 	byte	$76, $78, $6a, $5b, $5f, $84, $b1, $c4, $a8, $83, $76, $5e, $37, $64, $84, $a7
14ccc     DA DC D9 91 
14cd0     68 3B 20 22 
14cd4     4E A2 F4 E6 
14cd8     9B 54 3E 3D | 	byte	$da, $dc, $d9, $91, $68, $3b, $20, $22, $4e, $a2, $f4, $e6, $9b, $54, $3e, $3d
14cdc     55 5D 6D 7C 
14ce0     72 93 AC B4 
14ce4     AA 85 7D 51 
14ce8     30 5A 7C A6 | 	byte	$55, $5d, $6d, $7c, $72, $93, $ac, $b4, $aa, $85, $7d, $51, $30, $5a, $7c, $a6
14cec     E2 E1 DE 96 
14cf0     5B 2B 27 25 
14cf4     60 B0 FD E7 
14cf8     8F 4E 34 4C | 	byte	$e2, $e1, $de, $96, $5b, $2b, $27, $25, $60, $b0, $fd, $e7, $8f, $4e, $34, $4c
14cfc     39 4A 70 84 
14d00     9F A7 A3 9A 
14d04     B0 89 7C 43 
14d08     3B 51 7F AB | 	byte	$39, $4a, $70, $84, $9f, $a7, $a3, $9a, $b0, $89, $7c, $43, $3b, $51, $7f, $ab
14d0c     E0 EE D4 9D 
14d10     44 0F 1E 48 
14d14     9B ED FC D3 
14d18     5B 36 08 0C | 	byte	$e0, $ee, $d4, $9d, $44, $0f, $1e, $48, $9b, $ed, $fc, $d3, $5b, $36, $08, $0c
14d1c     03 13 4F C1 
14d20     EE FD F6 D7 
14d24     D2 83 38 06 
14d28     1A 48 8C DB | 	byte	$03, $13, $4f, $c1, $ee, $fd, $f6, $d7, $d2, $83, $38, $06, $1a, $48, $8c, $db
14d2c     FF FF D2 67 
14d30     09 00 00 4D 
14d34     CC FF FF CB 
14d38     53 2D 18 08 | 	byte	$ff, $ff, $d2, $67, $09, $00, $00, $4d, $cc, $ff, $ff, $cb, $53, $2d, $18, $08
14d3c     02 02 3A AF 
14d40     EC FF EA DC 
14d44     B6 9C 54 07 
14d48     16 38 6B C6 | 	byte	$02, $02, $3a, $af, $ec, $ff, $ea, $dc, $b6, $9c, $54, $07, $16, $38, $6b, $c6
14d4c     F6 FF D9 79 
14d50     29 00 00 2D 
14d54     B9 FF FF D5 
14d58     71 39 1C 0D | 	byte	$f6, $ff, $d9, $79, $29, $00, $00, $2d, $b9, $ff, $ff, $d5, $71, $39, $1c, $0d
14d5c     01 01 21 98 
14d60     E3 FF EB D1 
14d64     B2 94 69 1F 
14d68     22 39 70 AF | 	byte	$01, $01, $21, $98, $e3, $ff, $eb, $d1, $b2, $94, $69, $1f, $22, $39, $70, $af
14d6c     E5 F0 D0 7C 
14d70     3B 02 01 3D 
14d74     B1 FF FF B8 
14d78     88 52 33 0D | 	byte	$e5, $f0, $d0, $7c, $3b, $02, $01, $3d, $b1, $ff, $ff, $b8, $88, $52, $33, $0d
14d7c     00 02 22 81 
14d80     D5 F2 FF D3 
14d84     B2 8B 68 44 
14d88     35 42 75 B1 | 	byte	$00, $02, $22, $81, $d5, $f2, $ff, $d3, $b2, $8b, $68, $44, $35, $42, $75, $b1
14d8c     D4 DC B4 88 
14d90     3B 1D 0E 5C 
14d94     BF F7 E4 A8 
14d98     7E 68 46 12 | 	byte	$d4, $dc, $b4, $88, $3b, $1d, $0e, $5c, $bf, $f7, $e4, $a8, $7e, $68, $46, $12
14d9c     00 11 39 74 
14da0     C3 E6 EE D6 
14da4     B4 82 5D 5C 
14da8     59 51 7B AD | 	byte	$00, $11, $39, $74, $c3, $e6, $ee, $d6, $b4, $82, $5d, $5c, $59, $51, $7b, $ad
14dac     C2 C1 A3 6D 
14db0     3E 29 30 78 
14db4     D2 E6 B8 7D 
14db8     74 7A 5B 1A | 	byte	$c2, $c1, $a3, $6d, $3e, $29, $30, $78, $d2, $e6, $b8, $7d, $74, $7a, $5b, $1a
14dbc     05 1A 55 83 
14dc0     C3 D2 DE CD 
14dc4     B8 76 4D 6E 
14dc8     75 7E 87 A1 | 	byte	$05, $1a, $55, $83, $c3, $d2, $de, $cd, $b8, $76, $4d, $6e, $75, $7e, $87, $a1
14dcc     A9 A4 7B 51 
14dd0     3E 31 51 A0 
14dd4     E8 E1 99 59 
14dd8     5F 83 79 2C | 	byte	$a9, $a4, $7b, $51, $3e, $31, $51, $a0, $e8, $e1, $99, $59, $5f, $83, $79, $2c
14ddc     14 24 60 9E 
14de0     B7 C8 D6 C0 
14de4     AC 69 41 6B 
14de8     7E 8E AB A2 | 	byte	$14, $24, $60, $9e, $b7, $c8, $d6, $c0, $ac, $69, $41, $6b, $7e, $8e, $ab, $a2
14dec     A8 85 64 39 
14df0     3B 3C 70 C5 
14df4     FD DD 74 3F 
14df8     47 7A 79 4C | 	byte	$a8, $85, $64, $39, $3b, $3c, $70, $c5, $fd, $dd, $74, $3f, $47, $7a, $79, $4c
14dfc     24 34 5C A9 
14e00     B0 B9 CD BA 
14e04     AF 5B 41 5C 
14e08     83 96 C3 B6 | 	byte	$24, $34, $5c, $a9, $b0, $b9, $cd, $ba, $af, $5b, $41, $5c, $83, $96, $c3, $b6
14e0c     A8 76 55 1D 
14e10     2D 41 96 E9 
14e14     FF EB 65 2A 
14e18     23 6A 63 51 | 	byte	$a8, $76, $55, $1d, $2d, $41, $96, $e9, $ff, $eb, $65, $2a, $23, $6a, $63, $51
14e1c     3F 50 6B AD 
14e20     BA B3 C4 AF 
14e24     A5 47 4C 5F 
14e28     85 A7 CB CE | 	byte	$3f, $50, $6b, $ad, $ba, $b3, $c4, $af, $a5, $47, $4c, $5f, $85, $a7, $cb, $ce
14e2c     AC 6C 3D 0D 
14e30     15 3D A3 FF 
14e34     FF E1 67 2C 
14e38     20 4F 44 50 | 	byte	$ac, $6c, $3d, $0d, $15, $3d, $a3, $ff, $ff, $e1, $67, $2c, $20, $4f, $44, $50
14e3c     4D 6D 81 B7 
14e40     B1 B7 BA B7 
14e44     8A 39 3B 67 
14e48     80 B4 D3 D9 | 	byte	$4d, $6d, $81, $b7, $b1, $b7, $ba, $b7, $8a, $39, $3b, $67, $80, $b4, $d3, $d9
14e4c     B0 72 2C 02 
14e50     03 35 AA FF 
14e54     FF DF 6B 36 
14e58     29 45 22 37 | 	byte	$b0, $72, $2c, $02, $03, $35, $aa, $ff, $ff, $df, $6b, $36, $29, $45, $22, $37
14e5c     53 80 9A BF 
14e60     B9 BD BD BD 
14e64     83 32 32 4E 
14e68     7E BF D3 DB | 	byte	$53, $80, $9a, $bf, $b9, $bd, $bd, $bd, $83, $32, $32, $4e, $7e, $bf, $d3, $db
14e6c     AC 79 28 00 
14e70     03 31 BA FF 
14e74     FF CC 60 34 
14e78     27 32 1D 2B | 	byte	$ac, $79, $28, $00, $03, $31, $ba, $ff, $ff, $cc, $60, $34, $27, $32, $1d, $2b
14e7c     5C 95 C1 D4 
14e80     BD BC B8 B6 
14e84     7F 38 36 4A 
14e88     7D C0 D0 D6 | 	byte	$5c, $95, $c1, $d4, $bd, $bc, $b8, $b6, $7f, $38, $36, $4a, $7d, $c0, $d0, $d6
14e8c     A3 76 2A 01 
14e90     01 3B B8 FF 
14e94     FF B0 5B 33 
14e98     43 2F 1D 18 | 	byte	$a3, $76, $2a, $01, $01, $3b, $b8, $ff, $ff, $b0, $5b, $33, $43, $2f, $1d, $18
14e9c     50 94 C8 DC 
14ea0     B8 B9 B0 BD 
14ea4     83 43 38 45 
14ea8     74 B5 CE D2 | 	byte	$50, $94, $c8, $dc, $b8, $b9, $b0, $bd, $83, $43, $38, $45, $74, $b5, $ce, $d2
14eac     AA 6C 33 0B 
14eb0     05 4A BB FF 
14eb4     FF B2 5A 3A 
14eb8     4C 32 1C 15 | 	byte	$aa, $6c, $33, $0b, $05, $4a, $bb, $ff, $ff, $b2, $5a, $3a, $4c, $32, $1c, $15
14ebc     3F 88 CD DD 
14ec0     C1 BD B9 B3 
14ec4     83 4F 41 47 
14ec8     70 A3 D1 C6 | 	byte	$3f, $88, $cd, $dd, $c1, $bd, $b9, $b3, $83, $4f, $41, $47, $70, $a3, $d1, $c6
14ecc     A6 6C 34 10 
14ed0     0B 4D D5 FF 
14ed4     FF B0 60 46 
14ed8     4D 3B 22 1E | 	byte	$a6, $6c, $34, $10, $0b, $4d, $d5, $ff, $ff, $b0, $60, $46, $4d, $3b, $22, $1e
14edc     3B 81 C3 DE 
14ee0     CF BE BE 9F 
14ee4     74 52 52 51 
14ee8     79 9C CA BF | 	byte	$3b, $81, $c3, $de, $cf, $be, $be, $9f, $74, $52, $52, $51, $79, $9c, $ca, $bf
14eec     97 60 2E 12 
14ef0     1E 5C D9 FF 
14ef4     E9 A7 63 56 
14ef8     56 3F 26 26 | 	byte	$97, $60, $2e, $12, $1e, $5c, $d9, $ff, $e9, $a7, $63, $56, $56, $3f, $26, $26
14efc     46 7E AE CA 
14f00     D5 CD C5 97 
14f04     6D 5C 5B 58 
14f08     7A 99 C3 B3 | 	byte	$46, $7e, $ae, $ca, $d5, $cd, $c5, $97, $6d, $5c, $5b, $58, $7a, $99, $c3, $b3
14f0c     92 5C 35 14 
14f10     35 73 D9 FF 
14f14     C5 91 5D 5B 
14f18     4E 47 29 3B | 	byte	$92, $5c, $35, $14, $35, $73, $d9, $ff, $c5, $91, $5d, $5b, $4e, $47, $29, $3b
14f1c     54 91 A3 B9 
14f20     CD C4 C9 93 
14f24     73 61 66 6A 
14f28     7F 97 B4 A6 | 	byte	$54, $91, $a3, $b9, $cd, $c4, $c9, $93, $73, $61, $66, $6a, $7f, $97, $b4, $a6
14f2c     81 52 32 1B 
14f30     42 92 E3 FB 
14f34     B4 86 50 58 
14f38     41 47 2F 49 | 	byte	$81, $52, $32, $1b, $42, $92, $e3, $fb, $b4, $86, $50, $58, $41, $47, $2f, $49
14f3c     61 99 A8 B7 
14f40     C1 C1 BA 81 
14f44     71 5A 6A 82 
14f48     93 A3 A9 9B | 	byte	$61, $99, $a8, $b7, $c1, $c1, $ba, $81, $71, $5a, $6a, $82, $93, $a3, $a9, $9b
14f4c     6B 45 21 15 
14f50     5A B9 FA FA 
14f54     AE 7D 4D 49 
14f58     37 42 3B 51 | 	byte	$6b, $45, $21, $15, $5a, $b9, $fa, $fa, $ae, $7d, $4d, $49, $37, $42, $3b, $51
14f5c     75 9C AD BB 
14f60     B8 BF B1 83 
14f64     6D 5D 61 8A 
14f68     96 AF A5 94 | 	byte	$75, $9c, $ad, $bb, $b8, $bf, $b1, $83, $6d, $5d, $61, $8a, $96, $af, $a5, $94
14f6c     6A 37 18 12 
14f70     6A C6 FE ED 
14f74     A8 7B 50 40 
14f78     2E 45 47 5F | 	byte	$6a, $37, $18, $12, $6a, $c6, $fe, $ed, $a8, $7b, $50, $40, $2e, $45, $47, $5f
14f7c     80 A5 AE BD 
14f80     A9 B5 A4 82 
14f84     71 5E 64 90 
14f88     96 AE A5 9A | 	byte	$80, $a5, $ae, $bd, $a9, $b5, $a4, $82, $71, $5e, $64, $90, $96, $ae, $a5, $9a
14f8c     69 39 17 18 
14f90     6A C9 F4 D9 
14f94     AB 74 5C 3A 
14f98     27 3B 4F 6A | 	byte	$69, $39, $17, $18, $6a, $c9, $f4, $d9, $ab, $74, $5c, $3a, $27, $3b, $4f, $6a
14f9c     96 AC B1 BE 
14fa0     A7 AB 8B 7D 
14fa4     72 5F 72 93 
14fa8     A2 B0 9B 8C | 	byte	$96, $ac, $b1, $be, $a7, $ab, $8b, $7d, $72, $5f, $72, $93, $a2, $b0, $9b, $8c
14fac     63 41 1E 32 
14fb0     6A B6 E1 D2 
14fb4     AE 80 60 3C 
14fb8     3A 49 5B 71 | 	byte	$63, $41, $1e, $32, $6a, $b6, $e1, $d2, $ae, $80, $60, $3c, $3a, $49, $5b, $71
14fbc     94 A1 A2 A4 
14fc0     90 93 8B 92 
14fc4     86 6C 73 81 
14fc8     90 9B 98 8D | 	byte	$94, $a1, $a2, $a4, $90, $93, $8b, $92, $86, $6c, $73, $81, $90, $9b, $98, $8d
14fcc     79 5F 41 42 
14fd0     64 90 C0 C5 
14fd4     AB 7D 5F 48 
14fd8     52 63 6B 7A | 	byte	$79, $5f, $41, $42, $64, $90, $c0, $c5, $ab, $7d, $5f, $48, $52, $63, $6b, $7a
14fdc     8B 94 8C 8D 
14fe0     87 8C 94 9E 
14fe4     91 73 74 7F 
14fe8     86 8E 90 8C | 	byte	$8b, $94, $8c, $8d, $87, $8c, $94, $9e, $91, $73, $74, $7f, $86, $8e, $90, $8c
14fec     80 6B 4E 46 
14ff0     62 8A AF C1 
14ff4     B0 85 5D 4C 
14ff8     5D 70 70 7D | 	byte	$80, $6b, $4e, $46, $62, $8a, $af, $c1, $b0, $85, $5d, $4c, $5d, $70, $70, $7d
14ffc     82 8F 85 8C 
15000     81 90 98 9F 
15004     91 75 7D 7D 
15008     87 89 8A 87 | 	byte	$82, $8f, $85, $8c, $81, $90, $98, $9f, $91, $75, $7d, $7d, $87, $89, $8a, $87
1500c     7B 68 53 48 
15010     64 8A A8 BF 
15014     B1 93 68 53 
15018     5C 6F 71 74 | 	byte	$7b, $68, $53, $48, $64, $8a, $a8, $bf, $b1, $93, $68, $53, $5c, $6f, $71, $74
1501c     7B 86 86 8A 
15020     87 90 95 9A 
15024     8C 7B 81 88 
15028     85 8B 87 8C | 	byte	$7b, $86, $86, $8a, $87, $90, $95, $9a, $8c, $7b, $81, $88, $85, $8b, $87, $8c
1502c     77 5F 4F 4E 
15030     6D 87 A8 BD 
15034     B0 90 66 53 
15038     5A 6F 70 79 | 	byte	$77, $5f, $4f, $4e, $6d, $87, $a8, $bd, $b0, $90, $66, $53, $5a, $6f, $70, $79
1503c     82 89 83 8B 
15040     82 8D 96 96 
15044     89 7A 83 8C 
15048     81 8A 83 94 | 	byte	$82, $89, $83, $8b, $82, $8d, $96, $96, $89, $7a, $83, $8c, $81, $8a, $83, $94
1504c     73 5E 4B 53 
15050     74 85 A1 BA 
15054     B2 92 68 5B 
15058     5D 6B 6B 71 | 	byte	$73, $5e, $4b, $53, $74, $85, $a1, $ba, $b2, $92, $68, $5b, $5d, $6b, $6b, $71
1505c     7F 89 86 94 
15060     8D 96 95 90 
15064     7D 6A 7C 86 
15068     83 89 8F 96 | 	byte	$7f, $89, $86, $94, $8d, $96, $95, $90, $7d, $6a, $7c, $86, $83, $89, $8f, $96
1506c     7C 64 55 5D 
15070     74 83 9E B1 
15074     A5 92 73 68 
15078     5F 66 66 66 | 	byte	$7c, $64, $55, $5d, $74, $83, $9e, $b1, $a5, $92, $73, $68, $5f, $66, $66, $66
1507c     76 84 95 9F 
15080     9B 94 8D 88 
15084     72 64 77 84 
15088     85 8F 93 96 | 	byte	$76, $84, $95, $9f, $9b, $94, $8d, $88, $72, $64, $77, $84, $85, $8f, $93, $96
1508c     7D 63 59 5A 
15090     77 7D 9B AB 
15094     A7 90 78 68 
15098     5E 62 66 6A | 	byte	$7d, $63, $59, $5a, $77, $7d, $9b, $ab, $a7, $90, $78, $68, $5e, $62, $66, $6a
1509c     74 82 97 A8 
150a0     9D 94 89 8D 
150a4     7C 6B 72 7C 
150a8     7B 89 8D 8F | 	byte	$74, $82, $97, $a8, $9d, $94, $89, $8d, $7c, $6b, $72, $7c, $7b, $89, $8d, $8f
150ac     7E 6F 63 67 
150b0     77 7F 93 A3 
150b4     A0 93 7F 6A 
150b8     61 61 65 68 | 	byte	$7e, $6f, $63, $67, $77, $7f, $93, $a3, $a0, $93, $7f, $6a, $61, $61, $65, $68
150bc     6D 7F 94 A8 
150c0     9C 98 87 8A 
150c4     77 64 6F 7B 
150c8     85 94 95 8C | 	byte	$6d, $7f, $94, $a8, $9c, $98, $87, $8a, $77, $64, $6f, $7b, $85, $94, $95, $8c
150cc     79 6B 62 66 
150d0     75 7F 94 AA 
150d4     A7 97 7E 6E 
150d8     65 66 63 62 | 	byte	$79, $6b, $62, $66, $75, $7f, $94, $aa, $a7, $97, $7e, $6e, $65, $66, $63, $62
150dc     69 73 90 A0 
150e0     A1 9E 97 93 
150e4     77 60 67 76 
150e8     83 96 9B 93 | 	byte	$69, $73, $90, $a0, $a1, $9e, $97, $93, $77, $60, $67, $76, $83, $96, $9b, $93
150ec     80 6F 60 63 
150f0     6A 70 90 AC 
150f4     AB 92 7E 6B 
150f8     70 71 66 64 | 	byte	$80, $6f, $60, $63, $6a, $70, $90, $ac, $ab, $92, $7e, $6b, $70, $71, $66, $64
150fc     68 78 8B 99 
15100     98 9F A2 97 
15104     7B 60 60 6A 
15108     7C 97 9F 9B | 	byte	$68, $78, $8b, $99, $98, $9f, $a2, $97, $7b, $60, $60, $6a, $7c, $97, $9f, $9b
1510c     82 75 65 69 
15110     69 72 8E A5 
15114     9E 8A 77 6A 
15118     78 80 79 75 | 	byte	$82, $75, $65, $69, $69, $72, $8e, $a5, $9e, $8a, $77, $6a, $78, $80, $79, $75
1511c     76 80 85 88 
15120     7E 87 8A 91 
15124     84 78 6C 6C 
15128     7A 91 97 8D | 	byte	$76, $80, $85, $88, $7e, $87, $8a, $91, $84, $78, $6c, $6c, $7a, $91, $97, $8d
1512c     7A 78 76 7B 
15130     74 76 83 90 
15134     87 7B 72 70 
15138     7E 91 8D 88 | 	byte	$7a, $78, $76, $7b, $74, $76, $83, $90, $87, $7b, $72, $70, $7e, $91, $8d, $88
1513c     85 86 88 81 
15140     72 74 7C 8B 
15144     89 7F 70 6A 
15148     7B 8F 91 89 | 	byte	$85, $86, $88, $81, $72, $74, $7c, $8b, $89, $7f, $70, $6a, $7b, $8f, $91, $89
1514c     7A 7C 81 84 
15150     7B 75 7F 85 
15154     82 7D 72 75 
15158     80 95 97 8F | 	byte	$7a, $7c, $81, $84, $7b, $75, $7f, $85, $82, $7d, $72, $75, $80, $95, $97, $8f
1515c     89 87 81 7A 
15160     6B 6D 79 8B 
15164     92 87 74 64 
15168     78 88 87 83 | 	byte	$89, $87, $81, $7a, $6b, $6d, $79, $8b, $92, $87, $74, $64, $78, $88, $87, $83
1516c     7E 86 8C 89 
15170     7A 71 78 7B 
15174     7E 80 75 7A 
15178     86 92 99 93 | 	byte	$7e, $86, $8c, $89, $7a, $71, $78, $7b, $7e, $80, $75, $7a, $86, $92, $99, $93
1517c     8A 83 7D 74 
15180     6C 6F 7B 88 
15184     90 86 75 66 
15188     74 82 85 85 | 	byte	$8a, $83, $7d, $74, $6c, $6f, $7b, $88, $90, $86, $75, $66, $74, $82, $85, $85
1518c     88 8C 92 8C 
15190     78 6E 6E 76 
15194     7A 83 7C 82 
15198     89 8D 8F 8D | 	byte	$88, $8c, $92, $8c, $78, $6e, $6e, $76, $7a, $83, $7c, $82, $89, $8d, $8f, $8d
1519c     89 81 7F 74 
151a0     72 76 7F 83 
151a4     89 80 78 6C 
151a8     77 81 83 83 | 	byte	$89, $81, $7f, $74, $72, $76, $7f, $83, $89, $80, $78, $6c, $77, $81, $83, $83
151ac     85 8E 8F 86 
151b0     78 70 6F 74 
151b4     7B 80 81 7E 
151b8     89 89 93 93 | 	byte	$85, $8e, $8f, $86, $78, $70, $6f, $74, $7b, $80, $81, $7e, $89, $89, $93, $93
151bc     8E 85 7B 72 
151c0     6F 77 84 8B 
151c4     8C 7F 71 6F 
151c8     76 79 7E 84 | 	byte	$8e, $85, $7b, $72, $6f, $77, $84, $8b, $8c, $7f, $71, $6f, $76, $79, $7e, $84
151cc     8D 95 93 86 
151d0     7B 71 6E 68 
151d4     76 7C 82 80 
151d8     86 8C 98 99 | 	byte	$8d, $95, $93, $86, $7b, $71, $6e, $68, $76, $7c, $82, $80, $86, $8c, $98, $99
151dc     93 87 76 6D 
151e0     6D 7B 89 95 
151e4     90 80 6E 6A 
151e8     6F 6C 73 80 | 	byte	$93, $87, $76, $6d, $6d, $7b, $89, $95, $90, $80, $6e, $6a, $6f, $6c, $73, $80
151ec     90 98 9B 8C 
151f0     81 79 70 66 
151f4     70 75 7B 85 
151f8     86 90 94 98 | 	byte	$90, $98, $9b, $8c, $81, $79, $70, $66, $70, $75, $7b, $85, $86, $90, $94, $98
151fc     90 87 71 65 
15200     6D 7E 91 99 
15204     92 80 70 67 
15208     6A 69 6F 83 | 	byte	$90, $87, $71, $65, $6d, $7e, $91, $99, $92, $80, $70, $67, $6a, $69, $6f, $83
1520c     95 A5 A0 92 
15210     81 73 63 5A 
15214     62 71 7D 91 
15218     97 9E 9E 99 | 	byte	$95, $a5, $a0, $92, $81, $73, $63, $5a, $62, $71, $7d, $91, $97, $9e, $9e, $99
1521c     8C 7B 66 5C 
15220     67 7E 95 A0 
15224     96 85 6F 68 
15228     66 66 6C 7C | 	byte	$8c, $7b, $66, $5c, $67, $7e, $95, $a0, $96, $85, $6f, $68, $66, $66, $6c, $7c
1522c     90 A9 A6 9B 
15230     87 77 63 5A 
15234     58 67 7A 8F 
15238     9E A0 9D 95 | 	byte	$90, $a9, $a6, $9b, $87, $77, $63, $5a, $58, $67, $7a, $8f, $9e, $a0, $9d, $95
1523c     8A 7C 6D 65 
15240     6D 84 95 9D 
15244     8E 77 69 6F 
15248     6F 6E 6C 73 | 	byte	$8a, $7c, $6d, $65, $6d, $84, $95, $9d, $8e, $77, $69, $6f, $6f, $6e, $6c, $73
1524c     86 A4 A6 9E 
15250     8E 7D 65 5D 
15254     59 61 77 96 
15258     9F A4 9A 8E | 	byte	$86, $a4, $a6, $9e, $8e, $7d, $65, $5d, $59, $61, $77, $96, $9f, $a4, $9a, $8e
1525c     87 78 6E 6B 
15260     73 86 9B 98 
15264     87 6F 66 6C 
15268     6D 6B 6D 75 | 	byte	$87, $78, $6e, $6b, $73, $86, $9b, $98, $87, $6f, $66, $6c, $6d, $6b, $6d, $75
1526c     8A A6 AC A2 
15270     8E 78 65 5D 
15274     59 60 7B 96 
15278     9D 9F 96 8D | 	byte	$8a, $a6, $ac, $a2, $8e, $78, $65, $5d, $59, $60, $7b, $96, $9d, $9f, $96, $8d
1527c     85 77 6B 6E 
15280     77 86 97 8F 
15284     82 71 75 7C 
15288     78 6C 68 6F | 	byte	$85, $77, $6b, $6e, $77, $86, $97, $8f, $82, $71, $75, $7c, $78, $6c, $68, $6f
1528c     84 98 A4 A1 
15290     93 81 6C 63 
15294     5D 64 77 92 
15298     9A 9A 9A 8E | 	byte	$84, $98, $a4, $a1, $93, $81, $6c, $63, $5d, $64, $77, $92, $9a, $9a, $9a, $8e
1529c     83 72 6A 72 
152a0     7E 8D 96 8E 
152a4     81 70 78 79 
152a8     77 6B 68 6F | 	byte	$83, $72, $6a, $72, $7e, $8d, $96, $8e, $81, $70, $78, $79, $77, $6b, $68, $6f
152ac     89 91 9C 9B 
152b0     90 80 71 67 
152b4     64 6D 80 8F 
152b8     97 94 91 8D | 	byte	$89, $91, $9c, $9b, $90, $80, $71, $67, $64, $6d, $80, $8f, $97, $94, $91, $8d
152bc     81 77 6D 73 
152c0     84 91 90 85 
152c4     78 74 7E 7D 
152c8     77 6A 69 73 | 	byte	$81, $77, $6d, $73, $84, $91, $90, $85, $78, $74, $7e, $7d, $77, $6a, $69, $73
152cc     8B 8F 92 94 
152d0     90 7E 71 65 
152d4     65 72 86 94 
152d8     98 91 89 8B | 	byte	$8b, $8f, $92, $94, $90, $7e, $71, $65, $65, $72, $86, $94, $98, $91, $89, $8b
152dc     81 7B 70 74 
152e0     85 96 8E 83 
152e4     72 74 7F 7E 
152e8     77 6B 70 7C | 	byte	$81, $7b, $70, $74, $85, $96, $8e, $83, $72, $74, $7f, $7e, $77, $6b, $70, $7c
152ec     91 90 86 84 
152f0     85 77 74 6A 
152f4     6D 7A 8E 97 
152f8     92 8A 82 8A | 	byte	$91, $90, $86, $84, $85, $77, $74, $6a, $6d, $7a, $8e, $97, $92, $8a, $82, $8a
152fc     83 7D 72 77 
15300     88 96 8D 7D 
15304     6F 73 85 7D 
15308     74 6F 78 8D | 	byte	$83, $7d, $72, $77, $88, $96, $8d, $7d, $6f, $73, $85, $7d, $74, $6f, $78, $8d
1530c     97 90 7F 76 
15310     76 70 6C 6A 
15314     74 8B 99 98 
15318     8F 84 84 88 | 	byte	$97, $90, $7f, $76, $76, $70, $6c, $6a, $74, $8b, $99, $98, $8f, $84, $84, $88
1531c     85 7A 72 79 
15320     89 94 8C 7C 
15324     72 74 80 7E 
15328     6D 6E 77 92 | 	byte	$85, $7a, $72, $79, $89, $94, $8c, $7c, $72, $74, $80, $7e, $6d, $6e, $77, $92
1532c     96 8F 81 76 
15330     71 6F 68 68 
15334     79 92 A1 97 
15338     8A 80 82 87 | 	byte	$96, $8f, $81, $76, $71, $6f, $68, $68, $79, $92, $a1, $97, $8a, $80, $82, $87
1533c     84 7C 76 82 
15340     8C 8D 83 78 
15344     70 7D 7F 7D 
15348     72 74 7B 8E | 	byte	$84, $7c, $76, $82, $8c, $8d, $83, $78, $70, $7d, $7f, $7d, $72, $74, $7b, $8e
1534c     8E 85 7F 7B 
15350     75 74 6F 6C 
15354     80 97 99 8A 
15358     7E 7C 86 8A | 	byte	$8e, $85, $7f, $7b, $75, $74, $6f, $6c, $80, $97, $99, $8a, $7e, $7c, $86, $8a
1535c     8A 85 80 85 
15360     8B 83 78 6F 
15364     73 84 83 7D 
15368     76 78 81 8D | 	byte	$8a, $85, $80, $85, $8b, $83, $78, $6f, $73, $84, $83, $7d, $76, $78, $81, $8d
1536c     88 7D 7B 7B 
15370     72 6F 6F 71 
15374     85 9C 9B 8E 
15378     7F 7A 84 85 | 	byte	$88, $7d, $7b, $7b, $72, $6f, $6f, $71, $85, $9c, $9b, $8e, $7f, $7a, $84, $85
1537c     88 7E 80 88 
15380     92 86 78 6A 
15384     6E 7F 81 75 
15388     72 7B 91 99 | 	byte	$88, $7e, $80, $88, $92, $86, $78, $6a, $6e, $7f, $81, $75, $72, $7b, $91, $99
1538c     8D 82 7B 79 
15390     6D 68 65 74 
15394     88 9D 98 8F 
15398     81 7C 84 84 | 	byte	$8d, $82, $7b, $79, $6d, $68, $65, $74, $88, $9d, $98, $8f, $81, $7c, $84, $84
1539c     82 7B 83 8A 
153a0     93 86 7A 6B 
153a4     74 7D 7D 70 
153a8     6E 78 91 98 | 	byte	$82, $7b, $83, $8a, $93, $86, $7a, $6b, $74, $7d, $7d, $70, $6e, $78, $91, $98
153ac     8F 86 83 7B 
153b0     6B 67 63 75 
153b4     88 94 8E 88 
153b8     85 88 90 8B | 	byte	$8f, $86, $83, $7b, $6b, $67, $63, $75, $88, $94, $8e, $88, $85, $88, $90, $8b
153bc     83 79 7F 89 
153c0     8B 7D 79 6F 
153c4     80 81 7F 73 
153c8     70 75 86 8A | 	byte	$83, $79, $7f, $89, $8b, $7d, $79, $6f, $80, $81, $7f, $73, $70, $75, $86, $8a
153cc     86 87 8D 84 
153d0     74 68 67 76 
153d4     88 8A 81 81 
153d8     87 93 97 91 | 	byte	$86, $87, $8d, $84, $74, $68, $67, $76, $88, $8a, $81, $81, $87, $93, $97, $91
153dc     82 7C 7E 85 
153e0     7E 75 6F 71 
153e4     83 87 83 7B 
153e8     79 7A 7E 7A | 	byte	$82, $7c, $7e, $85, $7e, $75, $6f, $71, $83, $87, $83, $7b, $79, $7a, $7e, $7a
153ec     7E 85 93 8A 
153f0     7A 69 69 7D 
153f4     8C 8D 7D 7A 
153f8     86 94 94 8B | 	byte	$7e, $85, $93, $8a, $7a, $69, $69, $7d, $8c, $8d, $7d, $7a, $86, $94, $94, $8b
153fc     7C 7C 7F 8A 
15400     81 7A 6D 75 
15404     85 82 7B 77 
15408     7A 83 7F 75 | 	byte	$7c, $7c, $7f, $8a, $81, $7a, $6d, $75, $85, $82, $7b, $77, $7a, $83, $7f, $75
1540c     79 83 91 8A 
15410     7E 6F 70 7F 
15414     89 86 79 78 
15418     8A 99 9A 8F | 	byte	$79, $83, $91, $8a, $7e, $6f, $70, $7f, $89, $86, $79, $78, $8a, $99, $9a, $8f
1541c     7A 76 7A 83 
15420     7B 7B 73 7C 
15424     8A 86 7D 78 
15428     76 84 7E 73 | 	byte	$7a, $76, $7a, $83, $7b, $7b, $73, $7c, $8a, $86, $7d, $78, $76, $84, $7e, $73
1542c     75 82 8A 83 
15430     7B 72 7A 85 
15434     8E 84 7C 79 
15438     89 95 95 8B | 	byte	$75, $82, $8a, $83, $7b, $72, $7a, $85, $8e, $84, $7c, $79, $89, $95, $95, $8b
1543c     78 78 7B 82 
15440     7C 7E 75 80 
15444     85 86 7A 76 
15448     77 86 83 79 | 	byte	$78, $78, $7b, $82, $7c, $7e, $75, $80, $85, $86, $7a, $76, $77, $86, $83, $79
1544c     79 83 84 7D 
15450     76 70 7F 85 
15454     8F 84 7F 7E 
15458     8F 94 91 81 | 	byte	$79, $83, $84, $7d, $76, $70, $7f, $85, $8f, $84, $7f, $7e, $8f, $94, $91, $81
1545c     73 74 7C 7F 
15460     7E 81 81 8C 
15464     8B 84 78 71 
15468     71 7D 7D 7E | 	byte	$73, $74, $7c, $7f, $7e, $81, $81, $8c, $8b, $84, $78, $71, $71, $7d, $7d, $7e
1546c     7E 89 84 7C 
15470     77 75 80 83 
15474     82 79 7E 88 
15478     96 95 95 79 | 	byte	$7e, $89, $84, $7c, $77, $75, $80, $83, $82, $79, $7e, $88, $96, $95, $95, $79
1547c     74 6F 7B 7A 
15480     81 82 89 8F 
15484     8B 81 78 6F 
15488     71 77 77 82 | 	byte	$74, $6f, $7b, $7a, $81, $82, $89, $8f, $8b, $81, $78, $6f, $71, $77, $77, $82
1548c     84 8B 80 7E 
15490     79 82 81 7F 
15494     78 74 7F 91 
15498     9F 9C 91 77 | 	byte	$84, $8b, $80, $7e, $79, $82, $81, $7f, $78, $74, $7f, $91, $9f, $9c, $91, $77
1549c     6F 69 73 74 
154a0     83 83 91 94 
154a4     8E 80 7A 71 
154a8     72 70 73 80 | 	byte	$6f, $69, $73, $74, $83, $83, $91, $94, $8e, $80, $7a, $71, $72, $70, $73, $80
154ac     8B 8D 82 83 
154b0     7A 83 7C 7A 
154b4     6B 6E 7C 97 
154b8     A5 A6 94 79 | 	byte	$8b, $8d, $82, $83, $7a, $83, $7c, $7a, $6b, $6e, $7c, $97, $a5, $a6, $94, $79
154bc     6E 6A 6E 6C 
154c0     7A 80 95 9B 
154c4     97 82 76 71 
154c8     71 6D 6E 81 | 	byte	$6e, $6a, $6e, $6c, $7a, $80, $95, $9b, $97, $82, $76, $71, $71, $6d, $6e, $81
154cc     8F 8E 84 7D 
154d0     75 7F 7A 79 
154d4     69 6C 80 9E 
154d8     AB AA 91 77 | 	byte	$8f, $8e, $84, $7d, $75, $7f, $7a, $79, $69, $6c, $80, $9e, $ab, $aa, $91, $77
154dc     6D 6B 6B 66 
154e0     73 83 98 A1 
154e4     95 82 78 78 
154e8     7B 6E 6F 78 | 	byte	$6d, $6b, $6b, $66, $73, $83, $98, $a1, $95, $82, $78, $78, $7b, $6e, $6f, $78
154ec     8B 86 81 79 
154f0     76 7F 81 7D 
154f4     6F 70 81 9B 
154f8     A9 A4 8E 79 | 	byte	$8b, $86, $81, $79, $76, $7f, $81, $7d, $6f, $70, $81, $9b, $a9, $a4, $8e, $79
154fc     6F 70 68 6C 
15500     70 87 9C A0 
15504     96 80 77 78 
15508     7B 72 72 76 | 	byte	$6f, $70, $68, $6c, $70, $87, $9c, $a0, $96, $80, $77, $78, $7b, $72, $72, $76
1550c     85 86 84 7A 
15510     79 7A 7B 75 
15514     6B 72 85 A0 
15518     AC A5 8D 7B | 	byte	$85, $86, $84, $7a, $79, $7a, $7b, $75, $6b, $72, $85, $a0, $ac, $a5, $8d, $7b
1551c     6C 6C 60 6A 
15520     71 88 9E A8 
15524     96 83 70 6F 
15528     70 6E 73 7D | 	byte	$6c, $6c, $60, $6a, $71, $88, $9e, $a8, $96, $83, $70, $6f, $70, $6e, $73, $7d
1552c     8C 8C 8B 7D 
15530     7D 75 76 70 
15534     6B 75 8C 9F 
15538     AB 9C 86 7B | 	byte	$8c, $8c, $8b, $7d, $7d, $75, $76, $70, $6b, $75, $8c, $9f, $ab, $9c, $86, $7b
1553c     70 70 63 6B 
15540     75 88 9A A1 
15544     95 88 77 70 
15548     6C 6E 73 7E | 	byte	$70, $70, $63, $6b, $75, $88, $9a, $a1, $95, $88, $77, $70, $6c, $6e, $73, $7e
1554c     86 8A 89 81 
15550     80 74 75 6D 
15554     71 76 90 A0 
15558     A8 9A 86 79 | 	byte	$86, $8a, $89, $81, $80, $74, $75, $6d, $71, $76, $90, $a0, $a8, $9a, $86, $79
1555c     75 6C 62 66 
15560     71 88 9A 9C 
15564     97 8E 81 71 
15568     63 67 70 81 | 	byte	$75, $6c, $62, $66, $71, $88, $9a, $9c, $97, $8e, $81, $71, $63, $67, $70, $81
1556c     88 8D 8B 86 
15570     7E 75 70 68 
15574     70 7C 96 9E 
15578     A4 94 86 7A | 	byte	$88, $8d, $8b, $86, $7e, $75, $70, $68, $70, $7c, $96, $9e, $a4, $94, $86, $7a
1557c     78 6A 67 68 
15580     73 8B 94 93 
15584     8F 8F 89 7F 
15588     6A 6A 70 81 | 	byte	$78, $6a, $67, $68, $73, $8b, $94, $93, $8f, $8f, $89, $7f, $6a, $6a, $70, $81
1558c     86 89 84 82 
15590     82 7C 75 69 
15594     6C 7A 8F 94 
15598     9B 8E 8D 83 | 	byte	$86, $89, $84, $82, $82, $7c, $75, $69, $6c, $7a, $8f, $94, $9b, $8e, $8d, $83
1559c     7E 6E 69 6C 
155a0     77 8D 92 89 
155a4     89 87 88 81 
155a8     6D 68 70 82 | 	byte	$7e, $6e, $69, $6c, $77, $8d, $92, $89, $89, $87, $88, $81, $6d, $68, $70, $82
155ac     88 89 7E 82 
155b0     7E 80 79 6F 
155b4     6E 82 94 9A 
155b8     9A 8C 88 7E | 	byte	$88, $89, $7e, $82, $7e, $80, $79, $6f, $6e, $82, $94, $9a, $9a, $8c, $88, $7e
155bc     75 62 65 70 
155c0     86 94 9A 86 
155c4     89 81 84 7A 
155c8     6C 66 71 83 | 	byte	$75, $62, $65, $70, $86, $94, $9a, $86, $89, $81, $84, $7a, $6c, $66, $71, $83
155cc     8D 8C 82 84 
155d0     79 7E 71 71 
155d4     73 89 94 9B 
155d8     96 8A 86 7D | 	byte	$8d, $8c, $82, $84, $79, $7e, $71, $71, $73, $89, $94, $9b, $96, $8a, $86, $7d
155dc     6E 60 6A 74 
155e0     8E 98 99 8B 
155e4     88 80 7B 70 
155e8     69 67 73 85 | 	byte	$6e, $60, $6a, $74, $8e, $98, $99, $8b, $88, $80, $7b, $70, $69, $67, $73, $85
155ec     8F 90 88 87 
155f0     79 72 6A 6D 
155f4     75 8B 94 9F 
155f8     98 8F 82 76 | 	byte	$8f, $90, $88, $87, $79, $72, $6a, $6d, $75, $8b, $94, $9f, $98, $8f, $82, $76
155fc     64 60 68 79 
15600     90 9F 9C 95 
15604     8B 82 76 66 
15608     62 68 7B 88 | 	byte	$64, $60, $68, $79, $90, $9f, $9c, $95, $8b, $82, $76, $66, $62, $68, $7b, $88
1560c     94 8E 8E 83 
15610     78 6D 65 6A 
15614     7C 8E 98 A3 
15618     9E 93 80 72 | 	byte	$94, $8e, $8e, $83, $78, $6d, $65, $6a, $7c, $8e, $98, $a3, $9e, $93, $80, $72
1561c     5E 5F 68 80 
15620     94 9E 94 90 
15624     89 7E 71 61 
15628     62 6C 84 8A | 	byte	$5e, $5f, $68, $80, $94, $9e, $94, $90, $89, $7e, $71, $61, $62, $6c, $84, $8a
1562c     96 8F 8E 7E 
15630     76 6E 66 6E 
15634     80 92 98 9B 
15638     95 90 7C 72 | 	byte	$96, $8f, $8e, $7e, $76, $6e, $66, $6e, $80, $92, $98, $9b, $95, $90, $7c, $72
1563c     5F 66 6D 88 
15640     96 9A 92 90 
15644     8A 7D 6D 5C 
15648     60 70 8A 8F | 	byte	$5f, $66, $6d, $88, $96, $9a, $92, $90, $8a, $7d, $6d, $5c, $60, $70, $8a, $8f
1564c     9B 92 93 7A 
15650     6C 63 60 6D 
15654     83 97 A5 A0 
15658     95 8B 74 68 | 	byte	$9b, $92, $93, $7a, $6c, $63, $60, $6d, $83, $97, $a5, $a0, $95, $8b, $74, $68
1565c     5A 69 75 8E 
15660     99 9A 94 8F 
15664     86 78 64 5E 
15668     61 75 8B 94 | 	byte	$5a, $69, $75, $8e, $99, $9a, $94, $8f, $86, $78, $64, $5e, $61, $75, $8b, $94
1566c     9A 92 8C 74 
15670     68 60 66 73 
15674     8D 99 A8 9E 
15678     93 81 6F 60 | 	byte	$9a, $92, $8c, $74, $68, $60, $66, $73, $8d, $99, $a8, $9e, $93, $81, $6f, $60
1567c     5F 70 81 94 
15680     99 98 8E 88 
15684     7C 75 65 64 
15688     69 7F 89 95 | 	byte	$5f, $70, $81, $94, $99, $98, $8e, $88, $7c, $75, $65, $64, $69, $7f, $89, $95
1568c     96 92 86 72 
15690     66 5F 6A 79 
15694     94 9B A4 9B 
15698     8F 75 6B 5D | 	byte	$96, $92, $86, $72, $66, $5f, $6a, $79, $94, $9b, $a4, $9b, $8f, $75, $6b, $5d
1569c     65 77 89 96 
156a0     9A 96 8F 86 
156a4     7D 73 68 67 
156a8     6D 80 84 91 | 	byte	$65, $77, $89, $96, $9a, $96, $8f, $86, $7d, $73, $68, $67, $6d, $80, $84, $91
156ac     91 8E 81 75 
156b0     6B 65 6E 82 
156b4     91 9E 9D 96 
156b8     8D 72 6B 5F | 	byte	$91, $8e, $81, $75, $6b, $65, $6e, $82, $91, $9e, $9d, $96, $8d, $72, $6b, $5f
156bc     69 78 86 91 
156c0     96 94 95 89 
156c4     7F 73 6A 66 
156c8     6E 7E 83 90 | 	byte	$69, $78, $86, $91, $96, $94, $95, $89, $7f, $73, $6a, $66, $6e, $7e, $83, $90
156cc     8D 8F 7D 70 
156d0     68 69 70 88 
156d4     90 9C 98 92 
156d8     8B 74 6E 62 | 	byte	$8d, $8f, $7d, $70, $68, $69, $70, $88, $90, $9c, $98, $92, $8b, $74, $6e, $62
156dc     6D 76 87 8C 
156e0     92 91 95 8A 
156e4     7E 70 6C 6A 
156e8     76 81 86 8F | 	byte	$6d, $76, $87, $8c, $92, $91, $95, $8a, $7e, $70, $6c, $6a, $76, $81, $86, $8f
156ec     8C 8D 7B 6F 
156f0     67 6E 7B 91 
156f4     96 97 92 87 
156f8     7C 70 67 68 | 	byte	$8c, $8d, $7b, $6f, $67, $6e, $7b, $91, $96, $97, $92, $87, $7c, $70, $67, $68
156fc     76 82 91 95 
15700     91 8D 8A 83 
15704     77 6A 6C 6F 
15708     81 85 8B 8D | 	byte	$76, $82, $91, $95, $91, $8d, $8a, $83, $77, $6a, $6c, $6f, $81, $85, $8b, $8d
1570c     89 86 77 69 
15710     66 73 86 9C 
15714     9D 96 89 7F 
15718     6F 6A 65 71 | 	byte	$89, $86, $77, $69, $66, $73, $86, $9c, $9d, $96, $89, $7f, $6f, $6a, $65, $71
1571c     81 8E 93 94 
15720     8D 8B 81 7B 
15724     73 68 6E 74 
15728     82 86 91 91 | 	byte	$81, $8e, $93, $94, $8d, $8b, $81, $7b, $73, $68, $6e, $74, $82, $86, $91, $91
1572c     90 7F 6F 64 
15730     65 70 8A 9F 
15734     A5 9C 89 77 
15738     61 61 62 74 | 	byte	$90, $7f, $6f, $64, $65, $70, $8a, $9f, $a5, $9c, $89, $77, $61, $61, $62, $74
1573c     87 9B 99 98 
15740     8A 87 79 76 
15744     73 6D 74 7A 
15748     82 84 8F 8E | 	byte	$87, $9b, $99, $98, $8a, $87, $79, $76, $73, $6d, $74, $7a, $82, $84, $8f, $8e
1574c     93 7C 73 6A 
15750     69 70 88 9B 
15754     A4 9C 88 76 
15758     62 60 5E 77 | 	byte	$93, $7c, $73, $6a, $69, $70, $88, $9b, $a4, $9c, $88, $76, $62, $60, $5e, $77
1575c     89 9F 9F 95 
15760     83 7C 73 70 
15764     72 75 7A 81 
15768     84 83 91 8E | 	byte	$89, $9f, $9f, $95, $83, $7c, $73, $70, $72, $75, $7a, $81, $84, $83, $91, $8e
1576c     92 7D 71 69 
15770     6A 72 87 98 
15774     A1 99 85 73 
15778     66 5F 62 78 | 	byte	$92, $7d, $71, $69, $6a, $72, $87, $98, $a1, $99, $85, $73, $66, $5f, $62, $78
1577c     8E A0 A4 96 
15780     84 77 6E 6D 
15784     6D 7A 7D 84 
15788     82 87 8D 8F | 	byte	$8e, $a0, $a4, $96, $84, $77, $6e, $6d, $6d, $7a, $7d, $84, $82, $87, $8d, $8f
1578c     8E 7B 6E 6C 
15790     71 7D 90 99 
15794     99 8D 81 6B 
15798     65 60 6A 79 | 	byte	$8e, $7b, $6e, $6c, $71, $7d, $90, $99, $99, $8d, $81, $6b, $65, $60, $6a, $79
1579c     8F 9F A8 9C 
157a0     87 77 6C 68 
157a4     6B 78 7C 81 
157a8     82 8A 8E 92 | 	byte	$8f, $9f, $a8, $9c, $87, $77, $6c, $68, $6b, $78, $7c, $81, $82, $8a, $8e, $92
157ac     87 77 6C 65 
157b0     70 83 95 9B 
157b4     96 88 7D 6B 
157b8     66 63 6C 7D | 	byte	$87, $77, $6c, $65, $70, $83, $95, $9b, $96, $88, $7d, $6b, $66, $63, $6c, $7d
157bc     90 9F A2 9A 
157c0     8B 78 70 6E 
157c4     6F 76 7D 7E 
157c8     7D 86 8D 93 | 	byte	$90, $9f, $a2, $9a, $8b, $78, $70, $6e, $6f, $76, $7d, $7e, $7d, $86, $8d, $93
157cc     85 76 6D 67 
157d0     72 89 99 A0 
157d4     95 86 79 69 
157d8     63 61 6F 81 | 	byte	$85, $76, $6d, $67, $72, $89, $99, $a0, $95, $86, $79, $69, $63, $61, $6f, $81
157dc     95 A0 A0 91 
157e0     86 74 6C 6A 
157e4     70 77 82 85 
157e8     83 8C 8D 95 | 	byte	$95, $a0, $a0, $91, $86, $74, $6c, $6a, $70, $77, $82, $85, $83, $8c, $8d, $95
157ec     7D 6F 65 68 
157f0     75 90 9A A2 
157f4     95 86 74 67 
157f8     63 62 73 85 | 	byte	$7d, $6f, $65, $68, $75, $90, $9a, $a2, $95, $86, $74, $67, $63, $62, $73, $85
157fc     98 9F 9E 8F 
15800     89 79 6D 68 
15804     6F 74 7F 83 
15808     84 8E 91 94 | 	byte	$98, $9f, $9e, $8f, $89, $79, $6d, $68, $6f, $74, $7f, $83, $84, $8e, $91, $94
1580c     81 6F 64 69 
15810     78 8F 97 9C 
15814     92 88 75 6A 
15818     63 64 75 88 | 	byte	$81, $6f, $64, $69, $78, $8f, $97, $9c, $92, $88, $75, $6a, $63, $64, $75, $88
1581c     97 9C 94 8D 
15820     86 7B 71 69 
15824     72 77 7E 7F 
15828     87 8F 94 8B | 	byte	$97, $9c, $94, $8d, $86, $7b, $71, $69, $72, $77, $7e, $7f, $87, $8f, $94, $8b
1582c     7F 6E 69 6E 
15830     7D 8E 95 96 
15834     8F 88 79 6C 
15838     62 6A 78 89 | 	byte	$7f, $6e, $69, $6e, $7d, $8e, $95, $96, $8f, $88, $79, $6c, $62, $6a, $78, $89
1583c     92 98 8E 8B 
15840     83 7F 76 70 
15844     72 77 79 7A 
15848     87 8F 98 87 | 	byte	$92, $98, $8e, $8b, $83, $7f, $76, $70, $72, $77, $79, $7a, $87, $8f, $98, $87
1584c     7A 69 69 74 
15850     84 8E 94 92 
15854     91 8A 7B 6D 
15858     62 6E 7B 89 | 	byte	$7a, $69, $69, $74, $84, $8e, $94, $92, $91, $8a, $7b, $6d, $62, $6e, $7b, $89
1585c     8D 91 8B 8A 
15860     86 7E 78 73 
15864     71 77 77 76 
15868     8A 91 99 86 | 	byte	$8d, $91, $8b, $8a, $86, $7e, $78, $73, $71, $77, $77, $76, $8a, $91, $99, $86
1586c     75 6C 70 7C 
15870     88 8E 8F 8E 
15874     8D 83 77 6F 
15878     68 73 7B 85 | 	byte	$75, $6c, $70, $7c, $88, $8e, $8f, $8e, $8d, $83, $77, $6f, $68, $73, $7b, $85
1587c     85 8D 8C 8E 
15880     8B 84 7D 77 
15884     6E 6E 71 77 
15888     8A 94 99 88 | 	byte	$85, $8d, $8c, $8e, $8b, $84, $7d, $77, $6e, $6e, $71, $77, $8a, $94, $99, $88
1588c     76 6A 71 78 
15890     89 8F 92 8F 
15894     8C 7F 75 69 
15898     68 73 79 84 | 	byte	$76, $6a, $71, $78, $89, $8f, $92, $8f, $8c, $7f, $75, $69, $68, $73, $79, $84
1589c     89 8F 8F 90 
158a0     89 82 78 76 
158a4     6F 71 71 7D 
158a8     8A 98 93 81 | 	byte	$89, $8f, $8f, $90, $89, $82, $78, $76, $6f, $71, $71, $7d, $8a, $98, $93, $81
158ac     74 6B 75 7A 
158b0     8D 94 94 8E 
158b4     88 78 70 68 
158b8     71 7A 80 81 | 	byte	$74, $6b, $75, $7a, $8d, $94, $94, $8e, $88, $78, $70, $68, $71, $7a, $80, $81
158bc     86 8A 8E 8E 
158c0     8B 85 7B 79 
158c4     71 6E 6A 7A 
158c8     85 95 8F 83 | 	byte	$86, $8a, $8e, $8e, $8b, $85, $7b, $79, $71, $6e, $6a, $7a, $85, $95, $8f, $83
158cc     79 77 7A 82 
158d0     89 8F 8E 89 
158d4     81 76 74 6B 
158d8     77 7E 82 7D | 	byte	$79, $77, $7a, $82, $89, $8f, $8e, $89, $81, $76, $74, $6b, $77, $7e, $82, $7d
158dc     81 84 8B 8A 
158e0     8A 86 7F 7A 
158e4     75 70 6B 7B 
158e8     86 90 8A 7F | 	byte	$81, $84, $8b, $8a, $8a, $86, $7f, $7a, $75, $70, $6b, $7b, $86, $90, $8a, $7f
158ec     7B 7D 7E 82 
158f0     84 86 89 8A 
158f4     85 7D 77 72 
158f8     77 7C 7E 7A | 	byte	$7b, $7d, $7e, $82, $84, $86, $89, $8a, $85, $7d, $77, $72, $77, $7c, $7e, $7a
158fc     7E 85 8B 8D 
15900     8A 88 85 7E 
15904     76 6C 6A 78 
15908     82 8B 85 81 | 	byte	$7e, $85, $8b, $8d, $8a, $88, $85, $7e, $76, $6c, $6a, $78, $82, $8b, $85, $81
1590c     80 88 88 86 
15910     7E 7D 7C 87 
15914     83 82 7B 7A 
15918     7C 7C 78 74 | 	byte	$80, $88, $88, $86, $7e, $7d, $7c, $87, $83, $82, $7b, $7a, $7c, $7c, $78, $74
1591c     78 83 90 92 
15920     8F 86 87 7C 
15924     74 6B 6D 78 
15928     85 89 7F 7B | 	byte	$78, $83, $90, $92, $8f, $86, $87, $7c, $74, $6b, $6d, $78, $85, $89, $7f, $7b
1592c     7D 87 8B 8B 
15930     80 7E 7D 87 
15934     85 84 7F 80 
15938     82 78 74 70 | 	byte	$7d, $87, $8b, $8b, $80, $7e, $7d, $87, $85, $84, $7f, $80, $82, $78, $74, $70
1593c     75 7F 8B 8E 
15940     8C 85 89 82 
15944     7A 6F 73 78 
15948     81 82 7B 7C | 	byte	$75, $7f, $8b, $8e, $8c, $85, $89, $82, $7a, $6f, $73, $78, $81, $82, $7b, $7c
1594c     84 8C 8F 87 
15950     7F 79 7A 82 
15954     82 85 85 86 
15958     87 78 6D 6E | 	byte	$84, $8c, $8f, $87, $7f, $79, $7a, $82, $82, $85, $85, $86, $87, $78, $6d, $6e
1595c     74 82 88 8D 
15960     8C 88 89 87 
15964     7D 72 75 79 
15968     7E 7A 79 7A | 	byte	$74, $82, $88, $8d, $8c, $88, $89, $87, $7d, $72, $75, $79, $7e, $7a, $79, $7a
1596c     87 8C 92 87 
15970     80 76 76 78 
15974     7A 83 88 8F 
15978     8B 7F 6F 70 | 	byte	$87, $8c, $92, $87, $80, $76, $76, $78, $7a, $83, $88, $8f, $8b, $7f, $6f, $70
1597c     73 7D 82 88 
15980     8A 8B 89 87 
15984     81 77 7A 7C 
15988     7F 75 74 76 | 	byte	$73, $7d, $82, $88, $8a, $8b, $89, $87, $81, $77, $7a, $7c, $7f, $75, $74, $76
1598c     84 8E 92 8E 
15990     85 7B 78 76 
15994     78 7D 85 8C 
15998     85 80 76 73 | 	byte	$84, $8e, $92, $8e, $85, $7b, $78, $76, $78, $7d, $85, $8c, $85, $80, $76, $73
1599c     7A 81 85 87 
159a0     85 88 84 81 
159a4     7C 7B 80 82 
159a8     7F 73 6D 75 | 	byte	$7a, $81, $85, $87, $85, $88, $84, $81, $7c, $7b, $80, $82, $7f, $73, $6d, $75
159ac     82 8E 95 93 
159b0     8B 80 79 71 
159b4     76 7B 86 8C 
159b8     85 80 7A 75 | 	byte	$82, $8e, $95, $93, $8b, $80, $79, $71, $76, $7b, $86, $8c, $85, $80, $7a, $75
159bc     7A 7C 80 81 
159c0     83 8C 86 81 
159c4     78 7C 82 82 
159c8     7C 73 72 7B | 	byte	$7a, $7c, $80, $81, $83, $8c, $86, $81, $78, $7c, $82, $82, $7c, $73, $72, $7b
159cc     83 89 92 8F 
159d0     8D 83 79 70 
159d4     75 7B 85 8A 
159d8     82 7E 7D 7C | 	byte	$83, $89, $92, $8f, $8d, $83, $79, $70, $75, $7b, $85, $8a, $82, $7e, $7d, $7c
159dc     7D 7E 7D 80 
159e0     80 87 86 82 
159e4     79 80 83 83 
159e8     7B 74 73 7B | 	byte	$7d, $7e, $7d, $80, $80, $87, $86, $82, $79, $80, $83, $83, $7b, $74, $73, $7b
159ec     86 8C 91 8F 
159f0     89 80 77 71 
159f4     73 7B 84 8A 
159f8     87 82 81 80 | 	byte	$86, $8c, $91, $8f, $89, $80, $77, $71, $73, $7b, $84, $8a, $87, $82, $81, $80
159fc     7E 7B 79 7C 
15a00     83 84 84 7E 
15a04     78 80 82 83 
15a08     7B 75 74 7B | 	byte	$7e, $7b, $79, $7c, $83, $84, $84, $7e, $78, $80, $82, $83, $7b, $75, $74, $7b
15a0c     85 8F 90 8E 
15a10     87 85 7B 77 
15a14     73 78 7F 84 
15a18     83 80 83 86 | 	byte	$85, $8f, $90, $8e, $87, $85, $7b, $77, $73, $78, $7f, $84, $83, $80, $83, $86
15a1c     86 7E 7B 79 
15a20     86 85 82 7A 
15a24     76 7D 82 83 
15a28     7B 77 75 7E | 	byte	$86, $7e, $7b, $79, $86, $85, $82, $7a, $76, $7d, $82, $83, $7b, $77, $75, $7e
15a2c     87 8F 8B 8B 
15a30     89 88 81 7A 
15a34     75 76 7C 7B 
15a38     7C 7C 83 87 | 	byte	$87, $8f, $8b, $8b, $89, $88, $81, $7a, $75, $76, $7c, $7b, $7c, $7c, $83, $87
15a3c     88 82 7E 7C 
15a40     85 85 7B 72 
15a44     74 7C 82 86 
15a48     7F 7C 7D 83 | 	byte	$88, $82, $7e, $7c, $85, $85, $7b, $72, $74, $7c, $82, $86, $7f, $7c, $7d, $83
15a4c     87 86 82 84 
15a50     89 8D 87 7F 
15a54     7B 76 76 6F 
15a58     71 7A 86 8D | 	byte	$87, $86, $82, $84, $89, $8d, $87, $7f, $7b, $76, $76, $6f, $71, $7a, $86, $8d
15a5c     8D 8A 85 82 
15a60     83 81 76 6B 
15a64     71 7A 83 83 
15a68     80 7E 85 87 | 	byte	$8d, $8a, $85, $82, $83, $81, $76, $6b, $71, $7a, $83, $83, $80, $7e, $85, $87
15a6c     8B 84 7F 81 
15a70     88 8A 86 80 
15a74     7E 7C 76 6F 
15a78     6B 77 86 90 | 	byte	$8b, $84, $7f, $81, $88, $8a, $86, $80, $7e, $7c, $76, $6f, $6b, $77, $86, $90
15a7c     91 8B 85 84 
15a80     83 7C 71 68 
15a84     71 7B 84 82 
15a88     7E 7F 86 8A | 	byte	$91, $8b, $85, $84, $83, $7c, $71, $68, $71, $7b, $84, $82, $7e, $7f, $86, $8a
15a8c     89 80 7A 7F 
15a90     8A 90 8C 86 
15a94     83 7F 73 68 
15a98     61 6F 85 95 | 	byte	$89, $80, $7a, $7f, $8a, $90, $8c, $86, $83, $7f, $73, $68, $61, $6f, $85, $95
15a9c     99 91 89 85 
15aa0     82 76 6A 65 
15aa4     70 7D 89 87 
15aa8     83 82 86 87 | 	byte	$99, $91, $89, $85, $82, $76, $6a, $65, $70, $7d, $89, $87, $83, $82, $86, $87
15aac     84 7A 77 7E 
15ab0     8A 92 93 8B 
15ab4     84 7E 71 66 
15ab8     62 6E 83 95 | 	byte	$84, $7a, $77, $7e, $8a, $92, $93, $8b, $84, $7e, $71, $66, $62, $6e, $83, $95
15abc     98 94 8B 88 
15ac0     81 77 68 68 
15ac4     70 7E 8A 88 
15ac8     86 82 85 82 | 	byte	$98, $94, $8b, $88, $81, $77, $68, $68, $70, $7e, $8a, $88, $86, $82, $85, $82
15acc     7D 76 79 80 
15ad0     8E 91 93 8C 
15ad4     85 7F 6E 64 
15ad8     63 72 81 93 | 	byte	$7d, $76, $79, $80, $8e, $91, $93, $8c, $85, $7f, $6e, $64, $63, $72, $81, $93
15adc     96 95 8E 88 
15ae0     80 73 65 68 
15ae4     71 80 89 8B 
15ae8     8A 89 85 7D | 	byte	$96, $95, $8e, $88, $80, $73, $65, $68, $71, $80, $89, $8b, $8a, $89, $85, $7d
15aec     75 71 76 81 
15af0     90 92 91 8D 
15af4     88 7D 6F 62 
15af8     66 75 85 90 | 	byte	$75, $71, $76, $81, $90, $92, $91, $8d, $88, $7d, $6f, $62, $66, $75, $85, $90
15afc     96 95 91 89 
15b00     7C 6C 66 6C 
15b04     75 84 85 88 
15b08     89 88 82 78 | 	byte	$96, $95, $91, $89, $7c, $6c, $66, $6c, $75, $84, $85, $88, $89, $88, $82, $78
15b0c     71 73 7C 8A 
15b10     8F 93 8E 8C 
15b14     8A 7B 72 67 
15b18     69 76 85 89 | 	byte	$71, $73, $7c, $8a, $8f, $93, $8e, $8c, $8a, $7b, $72, $67, $69, $76, $85, $89
15b1c     90 95 94 89 
15b20     78 65 61 6A 
15b24     7A 88 8B 8C 
15b28     8C 8A 81 74 | 	byte	$90, $95, $94, $89, $78, $65, $61, $6a, $7a, $88, $8b, $8c, $8c, $8a, $81, $74
15b2c     6B 70 7F 8B 
15b30     90 8F 8C 8C 
15b34     8C 7E 72 67 
15b38     6A 75 83 88 | 	byte	$6b, $70, $7f, $8b, $90, $8f, $8c, $8c, $8c, $7e, $72, $67, $6a, $75, $83, $88
15b3c     8E 95 99 8E 
15b40     78 62 5E 68 
15b44     7A 89 8B 8E 
15b48     91 92 85 75 | 	byte	$8e, $95, $99, $8e, $78, $62, $5e, $68, $7a, $89, $8b, $8e, $91, $92, $85, $75
15b4c     69 6E 7C 8B 
15b50     8E 8B 8A 8B 
15b54     8A 7D 70 67 
15b58     6C 78 85 8B | 	byte	$69, $6e, $7c, $8b, $8e, $8b, $8a, $8b, $8a, $7d, $70, $67, $6c, $78, $85, $8b
15b5c     8F 94 97 8B 
15b60     77 61 5E 68 
15b64     7C 85 89 8C 
15b68     90 90 88 78 | 	byte	$8f, $94, $97, $8b, $77, $61, $5e, $68, $7c, $85, $89, $8c, $90, $90, $88, $78
15b6c     70 74 80 8C 
15b70     8C 86 83 87 
15b74     86 7F 74 6F 
15b78     73 7D 85 89 | 	byte	$70, $74, $80, $8c, $8c, $86, $83, $87, $86, $7f, $74, $6f, $73, $7d, $85, $89
15b7c     8F 93 93 87 
15b80     73 5F 5D 69 
15b84     7A 85 8A 92 
15b88     96 8E 85 75 | 	byte	$8f, $93, $93, $87, $73, $5f, $5d, $69, $7a, $85, $8a, $92, $96, $8e, $85, $75
15b8c     6E 72 7D 8B 
15b90     8F 8B 86 87 
15b94     81 7B 70 6D 
15b98     75 80 87 8C | 	byte	$6e, $72, $7d, $8b, $8f, $8b, $86, $87, $81, $7b, $70, $6d, $75, $80, $87, $8c
15b9c     91 95 92 86 
15ba0     71 61 62 6A 
15ba4     77 7F 88 93 
15ba8     98 91 87 79 | 	byte	$91, $95, $92, $86, $71, $61, $62, $6a, $77, $7f, $88, $93, $98, $91, $87, $79
15bac     74 77 7C 86 
15bb0     8C 89 86 86 
15bb4     7F 78 6F 6F 
15bb8     78 83 86 8A | 	byte	$74, $77, $7c, $86, $8c, $89, $86, $86, $7f, $78, $6f, $6f, $78, $83, $86, $8a
15bbc     8C 92 8F 83 
15bc0     71 68 6A 71 
15bc4     78 7C 87 91 
15bc8     94 8D 83 79 | 	byte	$8c, $92, $8f, $83, $71, $68, $6a, $71, $78, $7c, $87, $91, $94, $8d, $83, $79
15bcc     78 79 7D 82 
15bd0     87 8B 8A 8A 
15bd4     80 76 6D 72 
15bd8     79 82 86 8B | 	byte	$78, $79, $7d, $82, $87, $8b, $8a, $8a, $80, $76, $6d, $72, $79, $82, $86, $8b
15bdc     8D 91 8B 7E 
15be0     6F 6A 6B 73 
15be4     79 7E 87 91 
15be8     92 8D 84 7C | 	byte	$8d, $91, $8b, $7e, $6f, $6a, $6b, $73, $79, $7e, $87, $91, $92, $8d, $84, $7c
15bec     7D 7C 7F 7E 
15bf0     80 87 8C 8B 
15bf4     7E 76 6D 73 
15bf8     7A 82 88 8A | 	byte	$7d, $7c, $7f, $7e, $80, $87, $8c, $8b, $7e, $76, $6d, $73, $7a, $82, $88, $8a
15bfc     8F 91 86 79 
15c00     6B 6D 71 77 
15c04     7A 7D 87 8D 
15c08     8E 8B 83 7E | 	byte	$8f, $91, $86, $79, $6b, $6d, $71, $77, $7a, $7d, $87, $8d, $8e, $8b, $83, $7e
15c0c     81 80 81 7D 
15c10     7D 80 89 87 
15c14     81 77 71 77 
15c18     7F 85 88 8B | 	byte	$81, $80, $81, $7d, $7d, $80, $89, $87, $81, $77, $71, $77, $7f, $85, $88, $8b
15c1c     8D 8E 82 73 
15c20     69 6F 78 7F 
15c24     7D 7C 81 85 
15c28     88 87 82 81 | 	byte	$8d, $8e, $82, $73, $69, $6f, $78, $7f, $7d, $7c, $81, $85, $88, $87, $82, $81
15c2c     85 87 87 80 
15c30     7D 7E 83 80 
15c34     7C 75 73 7A 
15c38     85 89 8D 8C | 	byte	$85, $87, $87, $80, $7d, $7e, $83, $80, $7c, $75, $73, $7a, $85, $89, $8d, $8c
15c3c     8E 89 79 69 
15c40     66 6E 7D 87 
15c44     82 80 7F 84 
15c48     82 82 80 83 | 	byte	$8e, $89, $79, $69, $66, $6e, $7d, $87, $82, $80, $7f, $84, $82, $82, $80, $83
15c4c     87 8B 87 84 
15c50     7E 7B 7D 7A 
15c54     79 75 78 7F 
15c58     88 8C 8F 90 | 	byte	$87, $8b, $87, $84, $7e, $7b, $7d, $7a, $79, $75, $78, $7f, $88, $8c, $8f, $90
15c5c     8F 85 75 65 
15c60     65 70 80 8B 
15c64     89 85 7E 7C 
15c68     7A 7B 80 85 | 	byte	$8f, $85, $75, $65, $65, $70, $80, $8b, $89, $85, $7e, $7c, $7a, $7b, $80, $85
15c6c     8C 91 8C 83 
15c70     7D 76 77 76 
15c74     79 79 7E 84 
15c78     89 8B 8D 90 | 	byte	$8c, $91, $8c, $83, $7d, $76, $77, $76, $79, $79, $7e, $84, $89, $8b, $8d, $90
15c7c     8C 81 71 66 
15c80     69 73 81 89 
15c84     8A 88 81 78 
15c88     75 75 7E 88 | 	byte	$8c, $81, $71, $66, $69, $73, $81, $89, $8a, $88, $81, $78, $75, $75, $7e, $88
15c8c     8F 94 8F 85 
15c90     7D 78 73 73 
15c94     75 7B 82 87 
15c98     88 8C 8F 90 | 	byte	$8f, $94, $8f, $85, $7d, $78, $73, $73, $75, $7b, $82, $87, $88, $8c, $8f, $90
15c9c     8A 7D 6E 66 
15ca0     6A 76 81 89 
15ca4     8C 8A 86 7A 
15ca8     71 6E 74 88 | 	byte	$8a, $7d, $6e, $66, $6a, $76, $81, $89, $8c, $8a, $86, $7a, $71, $6e, $74, $88
15cac     92 98 91 87 
15cb0     81 79 70 6D 
15cb4     6F 79 84 8C 
15cb8     8B 8E 91 90 | 	byte	$92, $98, $91, $87, $81, $79, $70, $6d, $6f, $79, $84, $8c, $8b, $8e, $91, $90
15cbc     87 79 6D 68 
15cc0     6D 7A 83 84 
15cc4     88 87 88 7E 
15cc8     74 6F 75 87 | 	byte	$87, $79, $6d, $68, $6d, $7a, $83, $84, $88, $87, $88, $7e, $74, $6f, $75, $87
15ccc     92 94 8E 86 
15cd0     80 7C 73 70 
15cd4     6E 77 83 8A 
15cd8     8A 8E 91 91 | 	byte	$92, $94, $8e, $86, $80, $7c, $73, $70, $6e, $77, $83, $8a, $8a, $8e, $91, $91
15cdc     87 77 6C 6A 
15ce0     70 7C 86 83 
15ce4     86 87 87 7F 
15ce8     74 6C 74 81 | 	byte	$87, $77, $6c, $6a, $70, $7c, $86, $83, $86, $87, $87, $7f, $74, $6c, $74, $81
15cec     91 96 8F 89 
15cf0     83 7D 74 70 
15cf4     6C 78 83 8B 
15cf8     8C 8F 91 8F | 	byte	$91, $96, $8f, $89, $83, $7d, $74, $70, $6c, $78, $83, $8b, $8c, $8f, $91, $8f
15cfc     84 75 68 6A 
15d00     73 81 88 84 
15d04     84 87 84 7D 
15d08     73 6E 78 81 | 	byte	$84, $75, $68, $6a, $73, $81, $88, $84, $84, $87, $84, $7d, $73, $6e, $78, $81
15d0c     91 97 90 8B 
15d10     81 79 71 6D 
15d14     6F 7C 86 8B 
15d18     8D 91 91 8D | 	byte	$91, $97, $90, $8b, $81, $79, $71, $6d, $6f, $7c, $86, $8b, $8d, $91, $91, $8d
15d1c     81 72 66 6B 
15d20     75 83 87 84 
15d24     86 88 83 7A 
15d28     71 6F 79 81 | 	byte	$81, $72, $66, $6b, $75, $83, $87, $84, $86, $88, $83, $7a, $71, $6f, $79, $81
15d2c     8F 94 93 8D 
15d30     86 79 72 6A 
15d34     71 7C 86 8A 
15d38     8D 91 91 8C | 	byte	$8f, $94, $93, $8d, $86, $79, $72, $6a, $71, $7c, $86, $8a, $8d, $91, $91, $8c
15d3c     7D 6E 67 6E 
15d40     7C 86 84 83 
15d44     84 84 80 79 
15d48     75 76 7E 82 | 	byte	$7d, $6e, $67, $6e, $7c, $86, $84, $83, $84, $84, $80, $79, $75, $76, $7e, $82
15d4c     8B 8D 8E 8B 
15d50     87 7B 74 6C 
15d54     72 7D 86 88 
15d58     8D 90 91 8A | 	byte	$8b, $8d, $8e, $8b, $87, $7b, $74, $6c, $72, $7d, $86, $88, $8d, $90, $91, $8a
15d5c     7C 6E 6D 73 
15d60     7E 86 81 82 
15d64     82 81 7C 79 
15d68     76 7C 82 86 | 	byte	$7c, $6e, $6d, $73, $7e, $86, $81, $82, $82, $81, $7c, $79, $76, $7c, $82, $86
15d6c     87 86 88 89 
15d70     89 81 77 6F 
15d74     75 7D 83 84 
15d78     89 8E 91 8A | 	byte	$87, $86, $88, $89, $89, $81, $77, $6f, $75, $7d, $83, $84, $89, $8e, $91, $8a
15d7c     79 6D 6E 76 
15d80     7E 85 80 85 
15d84     87 83 7D 75 
15d88     73 7B 81 86 | 	byte	$79, $6d, $6e, $76, $7e, $85, $80, $85, $87, $83, $7d, $75, $73, $7b, $81, $86
15d8c     86 84 87 8B 
15d90     8B 83 78 71 
15d94     77 7C 81 85 
15d98     8A 8F 8C 85 | 	byte	$86, $84, $87, $8b, $8b, $83, $78, $71, $77, $7c, $81, $85, $8a, $8f, $8c, $85
15d9c     74 6D 72 7C 
15da0     84 85 84 86 
15da4     84 7D 76 72 
15da8     74 7E 85 89 | 	byte	$74, $6d, $72, $7c, $84, $85, $84, $86, $84, $7d, $76, $72, $74, $7e, $85, $89
15dac     88 83 85 8A 
15db0     89 82 79 75 
15db4     79 7C 7E 85 
15db8     8B 8F 8C 82 | 	byte	$88, $83, $85, $8a, $89, $82, $79, $75, $79, $7c, $7e, $85, $8b, $8f, $8c, $82
15dbc     74 6D 72 7D 
15dc0     86 85 86 87 
15dc4     86 7E 75 70 
15dc8     73 7F 86 8C | 	byte	$74, $6d, $72, $7d, $86, $85, $86, $87, $86, $7e, $75, $70, $73, $7f, $86, $8c
15dcc     87 82 81 85 
15dd0     85 81 7A 7B 
15dd4     7E 7F 7E 82 
15dd8     87 8A 88 81 | 	byte	$87, $82, $81, $85, $85, $81, $7a, $7b, $7e, $7f, $7e, $82, $87, $8a, $88, $81
15ddc     76 72 75 7D 
15de0     85 82 85 85 
15de4     84 7D 75 71 
15de8     76 82 8A 8F | 	byte	$76, $72, $75, $7d, $85, $82, $85, $85, $84, $7d, $75, $71, $76, $82, $8a, $8f
15dec     87 81 7E 81 
15df0     80 7C 7A 7E 
15df4     82 83 82 82 
15df8     84 86 86 7F | 	byte	$87, $81, $7e, $81, $80, $7c, $7a, $7e, $82, $83, $82, $82, $84, $86, $86, $7f
15dfc     79 77 79 80 
15e00     82 80 80 82 
15e04     81 7C 76 73 
15e08     7A 83 8C 8D | 	byte	$79, $77, $79, $80, $82, $80, $80, $82, $81, $7c, $76, $73, $7a, $83, $8c, $8d
15e0c     88 81 7F 7E 
15e10     7E 78 78 7D 
15e14     85 87 86 85 
15e18     83 86 83 7C | 	byte	$88, $81, $7f, $7e, $7e, $78, $78, $7d, $85, $87, $86, $85, $83, $86, $83, $7c
15e1c     77 79 7B 7E 
15e20     7F 80 81 82 
15e24     80 7E 7B 78 
15e28     7D 7F 89 88 | 	byte	$77, $79, $7b, $7e, $7f, $80, $81, $82, $80, $7e, $7b, $78, $7d, $7f, $89, $88
15e2c     86 82 82 80 
15e30     7C 79 7A 7F 
15e34     83 85 85 84 
15e38     81 82 80 80 | 	byte	$86, $82, $82, $80, $7c, $79, $7a, $7f, $83, $85, $85, $84, $81, $82, $80, $80
15e3c     7D 80 82 7F 
15e40     7C 7B 7B 7C 
15e44     7D 7F 80 7F 
15e48     83 82 85 82 | 	byte	$7d, $80, $82, $7f, $7c, $7b, $7b, $7c, $7d, $7f, $80, $7f, $83, $82, $85, $82
15e4c     7F 81 84 82 
15e50     7E 7D 7E 83 
15e54     84 83 82 82 
15e58     81 80 7D 7E | 	byte	$7f, $81, $84, $82, $7e, $7d, $7e, $83, $84, $83, $82, $82, $81, $80, $7d, $7e
15e5c     80 84 84 81 
15e60     7B 79 78 79 
15e64     7A 7E 80 84 
15e68     86 86 86 7F | 	byte	$80, $84, $84, $81, $7b, $79, $78, $79, $7a, $7e, $80, $84, $86, $86, $86, $7f
15e6c     7D 80 85 82 
15e70     80 7E 80 82 
15e74     83 7F 81 81 
15e78     82 80 7D 7E | 	byte	$7d, $80, $85, $82, $80, $7e, $80, $82, $83, $7f, $81, $81, $82, $80, $7d, $7e
15e7c     83 87 84 83 
15e80     79 78 76 76 
15e84     78 7E 81 88 
15e88     8A 89 84 7D | 	byte	$83, $87, $84, $83, $79, $78, $76, $76, $78, $7e, $81, $88, $8a, $89, $84, $7d
15e8c     7B 7D 81 80 
15e90     81 81 84 83 
15e94     80 7E 81 81 
15e98     82 81 7E 7E | 	byte	$7b, $7d, $81, $80, $81, $81, $84, $83, $80, $7e, $81, $81, $82, $81, $7e, $7e
15e9c     82 87 84 80 
15ea0     78 75 75 77 
15ea4     7A 7F 85 8C 
15ea8     8B 88 81 7A | 	byte	$82, $87, $84, $80, $78, $75, $75, $77, $7a, $7f, $85, $8c, $8b, $88, $81, $7a
15eac     7A 7D 80 82 
15eb0     82 83 83 7F 
15eb4     79 7A 7F 83 
15eb8     85 84 7F 7F | 	byte	$7a, $7d, $80, $82, $82, $83, $83, $7f, $79, $7a, $7f, $83, $85, $84, $7f, $7f
15ebc     82 84 84 80 
15ec0     7A 78 77 78 
15ec4     7B 7E 83 8A 
15ec8     88 88 7F 79 | 	byte	$82, $84, $84, $80, $7a, $78, $77, $78, $7b, $7e, $83, $8a, $88, $88, $7f, $79
15ecc     7C 81 84 84 
15ed0     84 81 80 7D 
15ed4     77 7A 83 88 
15ed8     89 82 7D 7C | 	byte	$7c, $81, $84, $84, $84, $81, $80, $7d, $77, $7a, $83, $88, $89, $82, $7d, $7c
15edc     7F 82 85 81 
15ee0     7E 79 75 76 
15ee4     79 7F 84 8A 
15ee8     8A 88 7F 79 | 	byte	$7f, $82, $85, $81, $7e, $79, $75, $76, $79, $7f, $84, $8a, $8a, $88, $7f, $79
15eec     79 80 84 86 
15ef0     86 82 80 7C 
15ef4     78 7B 80 88 
15ef8     89 83 7E 7D | 	byte	$79, $80, $84, $86, $86, $82, $80, $7c, $78, $7b, $80, $88, $89, $83, $7e, $7d
15efc     7F 83 85 83 
15f00     7F 77 74 75 
15f04     7A 7F 85 88 
15f08     8B 88 7F 79 | 	byte	$7f, $83, $85, $83, $7f, $77, $74, $75, $7a, $7f, $85, $88, $8b, $88, $7f, $79
15f0c     78 7F 85 86 
15f10     84 82 7E 7A 
15f14     78 7C 81 8A 
15f18     8A 85 7F 7D | 	byte	$78, $7f, $85, $86, $84, $82, $7e, $7a, $78, $7c, $81, $8a, $8a, $85, $7f, $7d
15f1c     7D 81 83 83 
15f20     80 7A 77 75 
15f24     7A 7C 85 85 
15f28     8A 88 81 7B | 	byte	$7d, $81, $83, $83, $80, $7a, $77, $75, $7a, $7c, $85, $85, $8a, $88, $81, $7b
15f2c     7A 7C 83 85 
15f30     84 82 7D 78 
15f34     79 7F 83 8A 
15f38     88 85 7F 7C | 	byte	$7a, $7c, $83, $85, $84, $82, $7d, $78, $79, $7f, $83, $8a, $88, $85, $7f, $7c
15f3c     7D 80 82 83 
15f40     82 7D 78 75 
15f44     7A 7D 84 85 
15f48     89 85 81 7B | 	byte	$7d, $80, $82, $83, $82, $7d, $78, $75, $7a, $7d, $84, $85, $89, $85, $81, $7b
15f4c     7C 7D 81 85 
15f50     85 84 7D 78 
15f54     7A 82 84 88 
15f58     84 82 7F 7E | 	byte	$7c, $7d, $81, $85, $85, $84, $7d, $78, $7a, $82, $84, $88, $84, $82, $7f, $7e
15f5c     7F 80 81 82 
15f60     80 7F 79 77 
15f64     7A 7D 82 84 
15f68     87 83 81 7D | 	byte	$7f, $80, $81, $82, $80, $7f, $79, $77, $7a, $7d, $82, $84, $87, $83, $81, $7d
15f6c     7D 7D 7E 82 
15f70     85 84 7F 7A 
15f74     7D 83 86 84 
15f78     7F 80 7F 81 | 	byte	$7d, $7d, $7e, $82, $85, $84, $7f, $7a, $7d, $83, $86, $84, $7f, $80, $7f, $81
15f7c     80 80 7E 7F 
15f80     7E 80 7C 7C 
15f84     7A 7E 81 82 
15f88     83 7F 7E 7E | 	byte	$80, $80, $7e, $7f, $7e, $80, $7c, $7c, $7a, $7e, $81, $82, $83, $7f, $7e, $7e
15f8c     7F 7E 80 83 
15f90     88 85 7F 7B 
15f94     7E 81 86 82 
15f98     7D 7D 81 87 | 	byte	$7f, $7e, $80, $83, $88, $85, $7f, $7b, $7e, $81, $86, $82, $7d, $7d, $81, $87
15f9c     84 7F 7A 7A 
15fa0     79 7C 7C 80 
15fa4     81 85 85 83 
15fa8     80 7D 79 7D | 	byte	$84, $7f, $7a, $7a, $79, $7c, $7c, $80, $81, $85, $85, $83, $80, $7d, $79, $7d
15fac     80 80 83 83 
15fb0     86 81 7A 7B 
15fb4     80 84 89 82 
15fb8     7F 7C 82 87 | 	byte	$80, $80, $83, $83, $86, $81, $7a, $7b, $80, $84, $89, $82, $7f, $7c, $82, $87
15fbc     83 7E 79 77 
15fc0     7A 7C 7E 84 
15fc4     85 87 85 82 
15fc8     7D 79 79 7E | 	byte	$83, $7e, $79, $77, $7a, $7c, $7e, $84, $85, $87, $85, $82, $7d, $79, $79, $7e
15fcc     81 81 82 83 
15fd0     82 7F 7B 7D 
15fd4     84 88 8A 82 
15fd8     7D 7B 7F 85 | 	byte	$81, $81, $82, $83, $82, $7f, $7b, $7d, $84, $88, $8a, $82, $7d, $7b, $7f, $85
15fdc     82 7C 79 78 
15fe0     79 7A 7F 85 
15fe4     89 8B 88 85 
15fe8     7C 75 75 7A | 	byte	$82, $7c, $79, $78, $79, $7a, $7f, $85, $89, $8b, $88, $85, $7c, $75, $75, $7a
15fec     7F 82 83 84 
15ff0     81 7E 7D 7F 
15ff4     85 89 88 82 
15ff8     7D 7D 7F 82 | 	byte	$7f, $82, $83, $84, $81, $7e, $7d, $7f, $85, $89, $88, $82, $7d, $7d, $7f, $82
15ffc     81 7D 7C 78 
16000     78 79 7E 85 
16004     8A 8E 8C 86 
16008     7D 72 73 79 | 	byte	$81, $7d, $7c, $78, $78, $79, $7e, $85, $8a, $8e, $8c, $86, $7d, $72, $73, $79
1600c     7F 86 86 85 
16010     7D 79 78 7D 
16014     87 8C 8B 85 
16018     7F 7D 7C 7A | 	byte	$7f, $86, $86, $85, $7d, $79, $78, $7d, $87, $8c, $8b, $85, $7f, $7d, $7c, $7a
1601c     7B 7A 7E 7D 
16020     7D 7D 82 84 
16024     88 8A 88 82 
16028     7B 75 77 7B | 	byte	$7b, $7a, $7e, $7d, $7d, $7d, $82, $84, $88, $8a, $88, $82, $7b, $75, $77, $7b
1602c     82 88 87 83 
16030     7A 75 77 80 
16034     88 8D 8A 86 
16038     81 7E 7B 77 | 	byte	$82, $88, $87, $83, $7a, $75, $77, $80, $88, $8d, $8a, $86, $81, $7e, $7b, $77
1603c     78 7A 7D 7E 
16040     7F 80 83 85 
16044     89 88 85 80 
16048     79 77 78 7C | 	byte	$78, $7a, $7d, $7e, $7f, $80, $83, $85, $89, $88, $85, $80, $79, $77, $78, $7c
1604c     82 88 89 83 
16050     78 74 75 7F 
16054     85 8C 8B 89 
16058     84 81 7B 76 | 	byte	$82, $88, $89, $83, $78, $74, $75, $7f, $85, $8c, $8b, $89, $84, $81, $7b, $76
1605c     74 78 7B 7D 
16060     7F 82 87 88 
16064     8B 88 84 7B 
16068     78 78 7B 7D | 	byte	$74, $78, $7b, $7d, $7f, $82, $87, $88, $8b, $88, $84, $7b, $78, $78, $7b, $7d
1606c     82 86 87 82 
16070     79 76 77 80 
16074     86 8B 88 87 
16078     83 81 7D 77 | 	byte	$82, $86, $87, $82, $79, $76, $77, $80, $86, $8b, $88, $87, $83, $81, $7d, $77
1607c     74 79 7B 7D 
16080     7E 81 85 85 
16084     89 86 84 7B 
16088     7A 7C 81 83 | 	byte	$74, $79, $7b, $7d, $7e, $81, $85, $85, $89, $86, $84, $7b, $7a, $7c, $81, $83
1608c     84 84 82 7E 
16090     79 78 7B 81 
16094     86 88 85 83 
16098     80 80 7D 7A | 	byte	$84, $84, $82, $7e, $79, $78, $7b, $81, $86, $88, $85, $83, $80, $80, $7d, $7a
1609c     78 7A 7D 80 
160a0     82 83 83 85 
160a4     85 83 80 7B 
160a8     79 7F 83 86 | 	byte	$78, $7a, $7d, $80, $82, $83, $83, $85, $85, $83, $80, $7b, $79, $7f, $83, $86
160ac     86 82 7E 7A 
160b0     77 79 7E 82 
160b4     87 87 88 86 
160b8     83 80 7A 77 | 	byte	$86, $82, $7e, $7a, $77, $79, $7e, $82, $87, $87, $88, $86, $83, $80, $7a, $77
160bc     75 76 7B 82 
160c0     87 8B 87 87 
160c4     81 7F 7B 78 
160c8     77 7D 84 89 | 	byte	$75, $76, $7b, $82, $87, $8b, $87, $87, $81, $7f, $7b, $78, $77, $7d, $84, $89
160cc     8A 85 7F 7A 
160d0     78 79 7E 7F 
160d4     83 83 88 89 
160d8     88 83 7B 78 | 	byte	$8a, $85, $7f, $7a, $78, $79, $7e, $7f, $83, $83, $88, $89, $88, $83, $7b, $78
160dc     76 74 78 80 
160e0     88 8E 8B 87 
160e4     80 7A 77 75 
160e8     77 7D 85 8A | 	byte	$76, $74, $78, $80, $88, $8e, $8b, $87, $80, $7a, $77, $75, $77, $7d, $85, $8a
160ec     8C 88 81 7A 
160f0     78 7B 7F 80 
160f4     80 80 86 89 
160f8     88 83 7B 78 | 	byte	$8c, $88, $81, $7a, $78, $7b, $7f, $80, $80, $80, $86, $89, $88, $83, $7b, $78
160fc     77 74 76 7D 
16100     89 90 92 8B 
16104     81 78 71 72 
16108     76 7D 84 8B | 	byte	$77, $74, $76, $7d, $89, $90, $92, $8b, $81, $78, $71, $72, $76, $7d, $84, $8b
1610c     8C 8A 81 7A 
16110     76 7A 7E 7F 
16114     7E 7F 88 8B 
16118     8A 84 7C 77 | 	byte	$8c, $8a, $81, $7a, $76, $7a, $7e, $7f, $7e, $7f, $88, $8b, $8a, $84, $7c, $77
1611c     75 72 75 7B 
16120     89 90 94 8E 
16124     83 78 6F 71 
16128     75 7C 81 88 | 	byte	$75, $72, $75, $7b, $89, $90, $94, $8e, $83, $78, $6f, $71, $75, $7c, $81, $88
1612c     8B 8A 82 7B 
16130     78 7B 7D 7E 
16134     7D 7F 86 89 
16138     8B 84 80 79 | 	byte	$8b, $8a, $82, $7b, $78, $7b, $7d, $7e, $7d, $7f, $86, $89, $8b, $84, $80, $79
1613c     73 72 75 7B 
16140     88 90 94 8E 
16144     83 77 6F 6F 
16148     76 7F 83 89 | 	byte	$73, $72, $75, $7b, $88, $90, $94, $8e, $83, $77, $6f, $6f, $76, $7f, $83, $89
1614c     8B 89 80 7A 
16150     77 7C 7D 80 
16154     7F 85 87 88 
16158     87 82 7C 78 | 	byte	$8b, $89, $80, $7a, $77, $7c, $7d, $80, $7f, $85, $87, $88, $87, $82, $7c, $78
1615c     72 75 7A 82 
16160     8A 8E 90 87 
16164     7F 72 70 71 
16168     7B 84 89 8A | 	byte	$72, $75, $7a, $82, $8a, $8e, $90, $87, $7f, $72, $70, $71, $7b, $84, $89, $8a
1616c     89 83 7D 78 
16170     79 7F 80 82 
16174     81 88 86 85 
16178     83 80 7C 79 | 	byte	$89, $83, $7d, $78, $79, $7f, $80, $82, $81, $88, $86, $85, $83, $80, $7c, $79
1617c     75 77 7C 84 
16180     89 8B 8A 82 
16184     7E 76 74 75 
16188     7C 85 8A 8B | 	byte	$75, $77, $7c, $84, $89, $8b, $8a, $82, $7e, $76, $74, $75, $7c, $85, $8a, $8b
1618c     87 80 7B 77 
16190     7A 7E 7F 82 
16194     84 87 85 82 
16198     7E 7D 7C 7A | 	byte	$87, $80, $7b, $77, $7a, $7e, $7f, $82, $84, $87, $85, $82, $7e, $7d, $7c, $7a
1619c     79 7B 80 87 
161a0     89 88 83 7E 
161a4     7D 7A 7A 79 
161a8     7F 84 89 89 | 	byte	$79, $7b, $80, $87, $89, $88, $83, $7e, $7d, $7a, $7a, $79, $7f, $84, $89, $89
161ac     84 7E 7B 79 
161b0     7C 7F 81 82 
161b4     85 87 85 81 
161b8     7C 7C 7C 7A | 	byte	$84, $7e, $7b, $79, $7c, $7f, $81, $82, $85, $87, $85, $81, $7c, $7c, $7c, $7a
161bc     79 7C 80 88 
161c0     88 86 7F 7E 
161c4     7D 7E 7C 7B 
161c8     7C 80 87 88 | 	byte	$79, $7c, $80, $88, $88, $86, $7f, $7e, $7d, $7e, $7c, $7b, $7c, $80, $87, $88
161cc     85 80 7B 7B 
161d0     7F 7F 81 80 
161d4     83 86 84 81 
161d8     7B 7A 79 7B | 	byte	$85, $80, $7b, $7b, $7f, $7f, $81, $80, $83, $86, $84, $81, $7b, $7a, $79, $7b
161dc     7B 7F 82 8A 
161e0     89 84 7B 79 
161e4     7A 7F 82 81 
161e8     80 80 84 86 | 	byte	$7b, $7f, $82, $8a, $89, $84, $7b, $79, $7a, $7f, $82, $81, $80, $80, $84, $86
161ec     82 7E 7A 7E 
161f0     84 84 83 7E 
161f4     7F 81 7F 7D 
161f8     7A 7A 7D 7F | 	byte	$82, $7e, $7a, $7e, $84, $84, $83, $7e, $7f, $81, $7f, $7d, $7a, $7a, $7d, $7f
161fc     81 83 85 87 
16200     85 80 78 77 
16204     79 82 87 87 
16208     83 82 82 82 | 	byte	$81, $83, $85, $87, $85, $80, $78, $77, $79, $82, $87, $87, $83, $82, $82, $82
1620c     7E 7B 7A 7F 
16210     86 87 84 7F 
16214     80 80 7E 7C 
16218     7A 78 7B 7F | 	byte	$7e, $7b, $7a, $7f, $86, $87, $84, $7f, $80, $80, $7e, $7c, $7a, $78, $7b, $7f
1621c     85 86 8A 87 
16220     84 7D 77 73 
16224     77 80 86 89 
16228     85 84 82 80 | 	byte	$85, $86, $8a, $87, $84, $7d, $77, $73, $77, $80, $86, $89, $85, $84, $82, $80
1622c     7B 79 79 81 
16230     87 89 85 81 
16234     80 7E 7C 7A 
16238     79 7A 7B 7F | 	byte	$7b, $79, $79, $81, $87, $89, $85, $81, $80, $7e, $7c, $7a, $79, $7a, $7b, $7f
1623c     86 88 8B 87 
16240     83 7B 77 73 
16244     78 80 86 89 
16248     87 85 81 7E | 	byte	$86, $88, $8b, $87, $83, $7b, $77, $73, $78, $80, $86, $89, $87, $85, $81, $7e
1624c     79 77 7B 84 
16250     88 8B 85 82 
16254     80 7C 7A 79 
16258     7A 7B 7C 7E | 	byte	$79, $77, $7b, $84, $88, $8b, $85, $82, $80, $7c, $7a, $79, $7a, $7b, $7c, $7e
1625c     84 87 8A 86 
16260     81 7A 77 76 
16264     7B 81 85 87 
16268     88 88 84 7F | 	byte	$84, $87, $8a, $86, $81, $7a, $77, $76, $7b, $81, $85, $87, $88, $88, $84, $7f
1626c     78 77 7B 84 
16270     87 89 83 81 
16274     7E 7A 78 78 
16278     7C 80 80 80 | 	byte	$78, $77, $7b, $84, $87, $89, $83, $81, $7e, $7a, $78, $78, $7c, $80, $80, $80
1627c     82 86 87 83 
16280     80 7A 7A 7B 
16284     7F 81 83 83 
16288     86 87 84 7D | 	byte	$82, $86, $87, $83, $80, $7a, $7a, $7b, $7f, $81, $83, $83, $86, $87, $84, $7d
1628c     77 78 7E 87 
16290     88 87 84 81 
16294     7D 77 74 78 
16298     7C 82 82 83 | 	byte	$77, $78, $7e, $87, $88, $87, $84, $81, $7d, $77, $74, $78, $7c, $82, $82, $83
1629c     82 86 86 82 
162a0     7E 7B 7B 7D 
162a4     81 80 82 82 
162a8     85 87 85 7C | 	byte	$82, $86, $86, $82, $7e, $7b, $7b, $7d, $81, $80, $82, $82, $85, $87, $85, $7c
162ac     76 77 7E 85 
162b0     88 87 87 85 
162b4     7E 79 74 76 
162b8     7B 80 82 84 | 	byte	$76, $77, $7e, $85, $88, $87, $87, $85, $7e, $79, $74, $76, $7b, $80, $82, $84
162bc     84 86 85 82 
162c0     7D 7A 7A 7C 
162c4     81 82 83 83 
162c8     86 87 85 7A | 	byte	$84, $86, $85, $82, $7d, $7a, $7a, $7c, $81, $82, $83, $83, $86, $87, $85, $7a
162cc     76 77 80 85 
162d0     88 86 88 86 
162d4     7F 77 73 74 
162d8     7A 7E 82 86 | 	byte	$76, $77, $80, $85, $88, $86, $88, $86, $7f, $77, $73, $74, $7a, $7e, $82, $86
162dc     86 87 84 81 
162e0     7C 79 79 7C 
162e4     80 82 83 85 
162e8     89 88 84 7A | 	byte	$86, $87, $84, $81, $7c, $79, $79, $7c, $80, $82, $83, $85, $89, $88, $84, $7a
162ec     74 75 7E 83 
162f0     86 86 8A 88 
162f4     7F 77 74 74 
162f8     79 7E 81 85 | 	byte	$74, $75, $7e, $83, $86, $86, $8a, $88, $7f, $77, $74, $74, $79, $7e, $81, $85
162fc     86 86 83 81 
16300     7D 7B 7B 7F 
16304     80 80 81 84 
16308     88 88 83 7C | 	byte	$86, $86, $83, $81, $7d, $7b, $7b, $7f, $80, $80, $81, $84, $88, $88, $83, $7c
1630c     78 79 7E 80 
16310     82 84 89 88 
16314     81 79 76 76 
16318     79 7E 81 84 | 	byte	$78, $79, $7e, $80, $82, $84, $89, $88, $81, $79, $76, $76, $79, $7e, $81, $84
1631c     86 85 83 81 
16320     7D 7C 7A 7F 
16324     7F 81 81 84 
16328     89 87 81 7C | 	byte	$86, $85, $83, $81, $7d, $7c, $7a, $7f, $7f, $81, $81, $84, $89, $87, $81, $7c
1632c     7A 7D 80 7F 
16330     81 83 87 86 
16334     80 79 76 77 
16338     7B 7F 83 84 | 	byte	$7a, $7d, $80, $7f, $81, $83, $87, $86, $80, $79, $76, $77, $7b, $7f, $83, $84
1633c     86 85 83 80 
16340     7D 7C 7B 7D 
16344     7E 81 82 85 
16348     87 86 7F 7B | 	byte	$86, $85, $83, $80, $7d, $7c, $7b, $7d, $7e, $81, $82, $85, $87, $86, $7f, $7b
1634c     7C 80 80 7F 
16350     7F 82 85 84 
16354     80 7C 79 7A 
16358     7D 7F 81 81 | 	byte	$7c, $80, $80, $7f, $7f, $82, $85, $84, $80, $7c, $79, $7a, $7d, $7f, $81, $81
1635c     83 83 84 81 
16360     80 7E 7F 7D 
16364     7D 7F 80 84 
16368     85 85 80 7D | 	byte	$83, $83, $84, $81, $80, $7e, $7f, $7d, $7d, $7f, $80, $84, $85, $85, $80, $7d
1636c     7F 83 80 7E 
16370     7D 81 84 81 
16374     7D 7C 7B 7C 
16378     7E 7F 80 80 | 	byte	$7f, $83, $80, $7e, $7d, $81, $84, $81, $7d, $7c, $7b, $7c, $7e, $7f, $80, $80
1637c     83 84 86 82 
16380     82 7F 7F 7B 
16384     79 7B 7F 84 
16388     85 83 81 7E | 	byte	$83, $84, $86, $82, $82, $7f, $7f, $7b, $79, $7b, $7f, $84, $85, $83, $81, $7e
1638c     81 84 80 7F 
16390     80 84 85 80 
16394     7B 7B 7A 7D 
16398     7D 7E 7E 81 | 	byte	$81, $84, $80, $7f, $80, $84, $85, $80, $7b, $7b, $7a, $7d, $7d, $7e, $7e, $81
1639c     83 86 86 83 
163a0     83 81 80 7C 
163a4     79 78 7E 82 
163a8     85 81 81 82 | 	byte	$83, $86, $86, $83, $83, $81, $80, $7c, $79, $78, $7e, $82, $85, $81, $81, $82
163ac     84 85 80 7F 
163b0     81 84 83 7D 
163b4     79 7A 7D 81 
163b8     80 7E 7B 7D | 	byte	$84, $85, $80, $7f, $81, $84, $83, $7d, $79, $7a, $7d, $81, $80, $7e, $7b, $7d
163bc     7E 83 84 84 
163c0     86 85 84 7E 
163c4     78 76 7B 80 
163c8     83 81 81 84 | 	byte	$7e, $83, $84, $84, $86, $85, $84, $7e, $78, $76, $7b, $80, $83, $81, $81, $84
163cc     88 85 80 7E 
163d0     80 83 7F 7B 
163d4     79 7C 81 84 
163d8     82 7E 79 78 | 	byte	$88, $85, $80, $7e, $80, $83, $7f, $7b, $79, $7c, $81, $84, $82, $7e, $79, $78
163dc     7B 81 84 86 
163e0     89 87 85 7D 
163e4     78 76 7A 7E 
163e8     80 7F 80 85 | 	byte	$7b, $81, $84, $86, $89, $87, $85, $7d, $78, $76, $7a, $7e, $80, $7f, $80, $85
163ec     8A 87 84 80 
163f0     80 80 7D 78 
163f4     78 7B 82 86 
163f8     85 81 7A 78 | 	byte	$8a, $87, $84, $80, $80, $80, $7d, $78, $78, $7b, $82, $86, $85, $81, $7a, $78
163fc     7A 7F 81 85 
16400     88 89 86 80 
16404     7A 79 7A 7D 
16408     7D 7C 7E 84 | 	byte	$7a, $7f, $81, $85, $88, $89, $86, $80, $7a, $79, $7a, $7d, $7d, $7c, $7e, $84
1640c     8A 89 86 83 
16410     82 7E 7C 77 
16414     79 7B 83 87 
16418     87 81 7B 78 | 	byte	$8a, $89, $86, $83, $82, $7e, $7c, $77, $79, $7b, $83, $87, $87, $81, $7b, $78
1641c     7A 7E 80 85 
16420     86 88 85 80 
16424     7C 7B 7C 7D 
16428     7C 7B 7E 84 | 	byte	$7a, $7e, $80, $85, $86, $88, $85, $80, $7c, $7b, $7c, $7d, $7c, $7b, $7e, $84
1642c     88 88 89 86 
16430     85 7F 7A 77 
16434     78 7D 82 85 
16438     85 80 7C 79 | 	byte	$88, $88, $89, $86, $85, $7f, $7a, $77, $78, $7d, $82, $85, $85, $80, $7c, $79
1643c     7A 7D 7E 83 
16440     85 87 83 81 
16444     7E 7E 7E 7E 
16448     7C 7B 7F 84 | 	byte	$7a, $7d, $7e, $83, $85, $87, $83, $81, $7e, $7e, $7e, $7e, $7c, $7b, $7f, $84
1644c     86 85 86 86 
16450     85 7F 7A 77 
16454     78 7D 83 85 
16458     85 81 7E 7B | 	byte	$86, $85, $86, $86, $85, $7f, $7a, $77, $78, $7d, $83, $85, $85, $81, $7e, $7b
1645c     7B 7B 7D 82 
16460     85 87 85 82 
16464     7F 7D 7D 7C 
16468     7C 7D 81 86 | 	byte	$7b, $7b, $7d, $82, $85, $87, $85, $82, $7f, $7d, $7d, $7c, $7c, $7d, $81, $86
1646c     84 84 83 86 
16470     86 82 79 75 
16474     77 7C 82 84 
16478     85 82 81 7D | 	byte	$84, $84, $83, $86, $86, $82, $79, $75, $77, $7c, $82, $84, $85, $82, $81, $7d
1647c     7C 79 7B 7F 
16480     85 87 84 83 
16484     81 7E 7C 79 
16488     79 7D 84 88 | 	byte	$7c, $79, $7b, $7f, $85, $87, $84, $83, $81, $7e, $7c, $79, $79, $7d, $84, $88
1648c     86 84 83 85 
16490     85 80 79 77 
16494     78 7D 81 83 
16498     82 81 80 7F | 	byte	$86, $84, $83, $85, $85, $80, $79, $77, $78, $7d, $81, $83, $82, $81, $80, $7f
1649c     7D 7A 7C 7E 
164a0     83 86 85 84 
164a4     82 81 7D 78 
164a8     77 7C 84 89 | 	byte	$7d, $7a, $7c, $7e, $83, $86, $85, $84, $82, $81, $7d, $78, $77, $7c, $84, $89
164ac     87 85 84 84 
164b0     82 7D 79 78 
164b4     79 7E 81 82 
164b8     80 80 7F 7F | 	byte	$87, $85, $84, $84, $82, $7d, $79, $78, $79, $7e, $81, $82, $80, $80, $7f, $7f
164bc     7D 7A 7C 7E 
164c0     85 86 86 83 
164c4     83 81 7E 76 
164c8     75 7B 85 89 | 	byte	$7d, $7a, $7c, $7e, $85, $86, $86, $83, $83, $81, $7e, $76, $75, $7b, $85, $89
164cc     88 87 85 84 
164d0     7F 7B 78 7A 
164d4     7A 7F 82 82 
164d8     81 80 80 80 | 	byte	$88, $87, $85, $84, $7f, $7b, $78, $7a, $7a, $7f, $82, $82, $81, $80, $80, $80
164dc     7C 7B 7C 7F 
164e0     83 84 85 83 
164e4     84 83 7E 78 
164e8     76 7B 85 87 | 	byte	$7c, $7b, $7c, $7f, $83, $84, $85, $83, $84, $83, $7e, $78, $76, $7b, $85, $87
164ec     88 88 86 84 
164f0     7F 7A 79 7A 
164f4     7B 7E 80 81 
164f8     80 80 80 82 | 	byte	$88, $88, $86, $84, $7f, $7a, $79, $7a, $7b, $7e, $80, $81, $80, $80, $80, $82
164fc     7D 7C 7D 81 
16500     83 83 82 83 
16504     84 83 7D 79 
16508     78 7E 85 86 | 	byte	$7d, $7c, $7d, $81, $83, $83, $82, $83, $84, $83, $7d, $79, $78, $7e, $85, $86
1650c     87 87 86 82 
16510     7E 79 7A 7B 
16514     7F 80 80 80 
16518     7F 7F 7F 80 | 	byte	$87, $87, $86, $82, $7e, $79, $7a, $7b, $7f, $80, $80, $80, $7f, $7f, $7f, $80
1651c     7D 7F 81 85 
16520     84 81 7F 80 
16524     81 80 7B 79 
16528     7C 81 86 86 | 	byte	$7d, $7f, $81, $85, $84, $81, $7f, $80, $81, $80, $7b, $79, $7c, $81, $86, $86
1652c     87 85 84 80 
16530     7C 7A 7B 7D 
16534     82 82 80 7D 
16538     7D 7D 7E 7E | 	byte	$87, $85, $84, $80, $7c, $7a, $7b, $7d, $82, $82, $80, $7d, $7d, $7d, $7e, $7e
1653c     7E 83 84 87 
16540     83 7F 7C 7E 
16544     80 7F 7C 7C 
16548     7F 86 87 85 | 	byte	$7e, $83, $84, $87, $83, $7f, $7c, $7e, $80, $7f, $7c, $7c, $7f, $86, $87, $85
1654c     83 83 83 80 
16550     7D 7B 7D 7F 
16554     82 81 7D 7B 
16558     7B 7E 7F 7F | 	byte	$83, $83, $83, $80, $7d, $7b, $7d, $7f, $82, $81, $7d, $7b, $7b, $7e, $7f, $7f
1655c     81 85 86 86 
16560     82 7D 7B 7F 
16564     7F 7D 7A 7B 
16568     81 88 87 86 | 	byte	$81, $85, $86, $86, $82, $7d, $7b, $7f, $7f, $7d, $7a, $7b, $81, $88, $87, $86
1656c     83 82 82 7F 
16570     7D 7C 7E 7F 
16574     83 81 7D 7A 
16578     7A 7C 7F 7F | 	byte	$83, $82, $82, $7f, $7d, $7c, $7e, $7f, $83, $81, $7d, $7a, $7a, $7c, $7f, $7f
1657c     83 86 88 86 
16580     7F 7B 79 7E 
16584     7E 7C 79 7C 
16588     83 8A 88 85 | 	byte	$83, $86, $88, $86, $7f, $7b, $79, $7e, $7e, $7c, $79, $7c, $83, $8a, $88, $85
1658c     80 80 7F 7F 
16590     7E 7F 80 82 
16594     83 80 7C 77 
16598     77 7C 81 82 | 	byte	$80, $80, $7f, $7f, $7e, $7f, $80, $82, $83, $80, $7c, $77, $77, $7c, $81, $82
1659c     86 87 88 84 
165a0     7D 78 7A 7D 
165a4     80 7D 7C 7E 
165a8     84 88 86 83 | 	byte	$86, $87, $88, $84, $7d, $78, $7a, $7d, $80, $7d, $7c, $7e, $84, $88, $86, $83
165ac     7F 7F 7D 80 
165b0     81 84 83 84 
165b4     81 7D 79 76 
165b8     77 7D 83 85 | 	byte	$7f, $7f, $7d, $80, $81, $84, $83, $84, $81, $7d, $79, $76, $77, $7d, $83, $85
165bc     89 88 87 81 
165c0     7B 77 7A 7C 
165c4     7F 7F 7E 81 
165c8     85 86 86 83 | 	byte	$89, $88, $87, $81, $7b, $77, $7a, $7c, $7f, $7f, $7e, $81, $85, $86, $86, $83
165cc     7F 7F 7D 7F 
165d0     80 83 84 85 
165d4     82 7E 78 75 
165d8     77 7D 82 86 | 	byte	$7f, $7f, $7d, $7f, $80, $83, $84, $85, $82, $7e, $78, $75, $77, $7d, $82, $86
165dc     89 89 86 7F 
165e0     7A 77 7A 7D 
165e4     7E 7F 81 84 
165e8     87 85 84 80 | 	byte	$89, $89, $86, $7f, $7a, $77, $7a, $7d, $7e, $7f, $81, $84, $87, $85, $84, $80
165ec     7E 7E 7D 7F 
165f0     82 84 85 84 
165f4     81 7C 77 76 
165f8     79 7F 82 88 | 	byte	$7e, $7e, $7d, $7f, $82, $84, $85, $84, $81, $7c, $77, $76, $79, $7f, $82, $88
165fc     8A 88 84 7D 
16600     79 79 7B 7C 
16604     7C 7D 82 85 
16608     88 85 83 80 | 	byte	$8a, $88, $84, $7d, $79, $79, $7b, $7c, $7c, $7d, $82, $85, $88, $85, $83, $80
1660c     7E 7E 7E 7F 
16610     82 84 86 86 
16614     80 7C 77 77 
16618     79 7F 80 86 | 	byte	$7e, $7e, $7e, $7f, $82, $84, $86, $86, $80, $7c, $77, $77, $79, $7f, $80, $86
1661c     89 88 83 7C 
16620     79 7C 7E 7E 
16624     7B 7B 80 86 
16628     88 85 83 80 | 	byte	$89, $88, $83, $7c, $79, $7c, $7e, $7e, $7b, $7b, $80, $86, $88, $85, $83, $80
1662c     7F 7E 7D 7E 
16630     80 82 86 87 
16634     81 7B 76 76 
16638     79 7E 82 87 | 	byte	$7f, $7e, $7d, $7e, $80, $82, $86, $87, $81, $7b, $76, $76, $79, $7e, $82, $87
1663c     8A 89 81 7A 
16640     76 7B 7E 7E 
16644     7B 7C 81 88 
16648     8A 87 83 80 | 	byte	$8a, $89, $81, $7a, $76, $7b, $7e, $7e, $7b, $7c, $81, $88, $8a, $87, $83, $80
1664c     7F 7E 7C 7C 
16650     7F 82 87 87 
16654     82 7B 77 76 
16658     79 7D 81 87 | 	byte	$7f, $7e, $7c, $7c, $7f, $82, $87, $87, $82, $7b, $77, $76, $79, $7d, $81, $87
1665c     89 87 80 79 
16660     78 7C 7F 7F 
16664     7C 7C 81 88 
16668     89 87 83 80 | 	byte	$89, $87, $80, $79, $78, $7c, $7f, $7f, $7c, $7c, $81, $88, $89, $87, $83, $80
1666c     80 7D 7C 7C 
16670     7E 81 85 86 
16674     83 7C 77 77 
16678     7B 7F 83 88 | 	byte	$80, $7d, $7c, $7c, $7e, $81, $85, $86, $83, $7c, $77, $77, $7b, $7f, $83, $88
1667c     88 85 7E 77 
16680     78 7C 7F 7F 
16684     7E 7E 81 87 
16688     87 86 83 81 | 	byte	$88, $85, $7e, $77, $78, $7c, $7f, $7f, $7e, $7e, $81, $87, $87, $86, $83, $81
1668c     81 7F 7D 7E 
16690     7D 80 83 84 
16694     82 7B 77 78 
16698     7D 81 85 88 | 	byte	$81, $7f, $7d, $7e, $7d, $80, $83, $84, $82, $7b, $77, $78, $7d, $81, $85, $88
1669c     88 83 7B 77 
166a0     79 7E 81 81 
166a4     7F 7F 81 84 
166a8     85 85 83 82 | 	byte	$88, $83, $7b, $77, $79, $7e, $81, $81, $7f, $7f, $81, $84, $85, $85, $83, $82
166ac     82 81 7E 7E 
166b0     7C 7E 82 83 
166b4     82 7D 7A 7A 
166b8     7F 81 86 87 | 	byte	$82, $81, $7e, $7e, $7c, $7e, $82, $83, $82, $7d, $7a, $7a, $7f, $81, $86, $87
166bc     86 80 7B 77 
166c0     7A 7E 80 80 
166c4     80 81 82 83 
166c8     83 84 84 83 | 	byte	$86, $80, $7b, $77, $7a, $7e, $80, $80, $80, $81, $82, $83, $83, $84, $84, $83
166cc     81 80 7F 7D 
166d0     7C 7D 81 82 
166d4     80 7E 7C 7D 
166d8     7F 82 86 86 | 	byte	$81, $80, $7f, $7d, $7c, $7d, $81, $82, $80, $7e, $7c, $7d, $7f, $82, $86, $86
166dc     84 7F 7B 79 
166e0     7B 7E 7F 80 
166e4     81 82 84 82 
166e8     82 83 84 85 | 	byte	$84, $7f, $7b, $79, $7b, $7e, $7f, $80, $81, $82, $84, $82, $82, $83, $84, $85
166ec     82 7F 7E 7C 
166f0     7A 7C 7F 80 
166f4     7E 7E 7E 80 
166f8     81 84 86 84 | 	byte	$82, $7f, $7e, $7c, $7a, $7c, $7f, $80, $7e, $7e, $7e, $80, $81, $84, $86, $84
166fc     82 7D 7A 7A 
16700     7D 80 81 80 
16704     80 82 82 80 
16708     80 81 85 86 | 	byte	$82, $7d, $7a, $7a, $7d, $80, $81, $80, $80, $82, $82, $80, $80, $81, $85, $86
1670c     85 82 80 7D 
16710     7B 7C 7D 7E 
16714     7D 7D 7F 82 
16718     83 85 86 84 | 	byte	$85, $82, $80, $7d, $7b, $7c, $7d, $7e, $7d, $7d, $7f, $82, $83, $85, $86, $84
1671c     80 7B 78 79 
16720     7E 81 82 81 
16724     81 81 81 80 
16728     80 81 85 87 | 	byte	$80, $7b, $78, $79, $7e, $81, $82, $81, $81, $81, $81, $80, $80, $81, $85, $87
1672c     86 82 7F 7C 
16730     7C 7C 7D 7C 
16734     7D 7D 80 83 
16738     84 86 86 83 | 	byte	$86, $82, $7f, $7c, $7c, $7c, $7d, $7c, $7d, $7d, $80, $83, $84, $86, $86, $83
1673c     7F 79 76 79 
16740     7D 82 82 81 
16744     81 82 81 80 
16748     7F 80 83 85 | 	byte	$7f, $79, $76, $79, $7d, $82, $82, $81, $81, $82, $81, $80, $7f, $80, $83, $85
1674c     86 83 80 7D 
16750     7D 7D 7C 7B 
16754     7C 7E 81 84 
16758     84 86 85 84 | 	byte	$86, $83, $80, $7d, $7d, $7d, $7c, $7b, $7c, $7e, $81, $84, $84, $86, $85, $84
1675c     7F 79 77 7B 
16760     7F 82 81 82 
16764     81 81 7F 7F 
16768     80 82 83 84 | 	byte	$7f, $79, $77, $7b, $7f, $82, $81, $82, $81, $81, $7f, $7f, $80, $82, $83, $84
1676c     84 84 80 7D 
16770     7B 7C 7C 7C 
16774     7D 7F 82 83 
16778     83 85 84 82 | 	byte	$84, $84, $80, $7d, $7b, $7c, $7c, $7c, $7d, $7f, $82, $83, $83, $85, $84, $82
1677c     7E 7A 7A 7D 
16780     81 82 81 81 
16784     81 7F 7E 7E 
16788     80 83 84 83 | 	byte	$7e, $7a, $7a, $7d, $81, $82, $81, $81, $81, $7f, $7e, $7e, $80, $83, $84, $83
1678c     83 83 81 7F 
16790     7D 7B 7B 7B 
16794     7E 80 82 83 
16798     84 85 84 7F | 	byte	$83, $83, $81, $7f, $7d, $7b, $7b, $7b, $7e, $80, $82, $83, $84, $85, $84, $7f
1679c     7C 7A 7B 7F 
167a0     81 82 80 81 
167a4     80 7F 7E 7E 
167a8     81 84 84 83 | 	byte	$7c, $7a, $7b, $7f, $81, $82, $80, $81, $80, $7f, $7e, $7e, $81, $84, $84, $83
167ac     81 81 80 7F 
167b0     7E 7B 7B 7C 
167b4     7F 81 82 82 
167b8     83 84 84 7F | 	byte	$81, $81, $80, $7f, $7e, $7b, $7b, $7c, $7f, $81, $82, $82, $83, $84, $84, $7f
167bc     7C 7B 7E 80 
167c0     80 80 7F 80 
167c4     7E 7F 80 81 
167c8     82 84 82 82 | 	byte	$7c, $7b, $7e, $80, $80, $80, $7f, $80, $7e, $7f, $80, $81, $82, $84, $82, $82
167cc     7F 80 80 80 
167d0     7F 7E 7C 7D 
167d4     7E 81 82 82 
167d8     84 84 84 7F | 	byte	$7f, $80, $80, $80, $7f, $7e, $7c, $7d, $7e, $81, $82, $82, $84, $84, $84, $7f
167dc     7C 7B 7E 7F 
167e0     80 80 7F 80 
167e4     80 7F 81 81 
167e8     81 81 80 80 | 	byte	$7c, $7b, $7e, $7f, $80, $80, $7f, $80, $80, $7f, $81, $81, $81, $81, $80, $80
167ec     80 81 81 82 
167f0     80 7D 7B 7B 
167f4     7E 82 83 83 
167f8     83 83 81 7E | 	byte	$80, $81, $81, $82, $80, $7d, $7b, $7b, $7e, $82, $83, $83, $83, $83, $81, $7e
167fc     7D 7D 80 81 
16800     81 7F 7F 7E 
16804     7F 7F 81 82 
16808     81 82 80 81 | 	byte	$7d, $7d, $80, $81, $81, $7f, $7f, $7e, $7f, $7f, $81, $82, $81, $82, $80, $81
1680c     82 82 82 81 
16810     7E 7C 7B 7C 
16814     7F 83 83 84 
16818     83 83 80 7C | 	byte	$82, $82, $82, $81, $7e, $7c, $7b, $7c, $7f, $83, $83, $84, $83, $83, $80, $7c
1681c     7B 7D 80 81 
16820     81 80 7F 7F 
16824     7F 80 80 81 
16828     81 80 80 81 | 	byte	$7b, $7d, $80, $81, $81, $80, $7f, $7f, $7f, $80, $80, $81, $81, $80, $80, $81
1682c     83 83 82 80 
16830     7D 7C 7B 7D 
16834     80 82 82 83 
16838     82 82 80 7D | 	byte	$83, $83, $82, $80, $7d, $7c, $7b, $7d, $80, $82, $82, $83, $82, $82, $80, $7d
1683c     7C 7E 80 81 
16840     80 7E 7F 7E 
16844     7E 80 81 82 
16848     82 81 81 82 | 	byte	$7c, $7e, $80, $81, $80, $7e, $7f, $7e, $7e, $80, $81, $82, $82, $81, $81, $82
1684c     83 82 81 7E 
16850     7B 7A 7C 7F 
16854     82 84 83 82 
16858     82 81 7E 7C | 	byte	$83, $82, $81, $7e, $7b, $7a, $7c, $7f, $82, $84, $83, $82, $82, $81, $7e, $7c
1685c     7D 81 83 83 
16860     81 7E 7D 7C 
16864     7D 7E 80 81 
16868     82 82 82 83 | 	byte	$7d, $81, $83, $83, $81, $7e, $7d, $7c, $7d, $7e, $80, $81, $82, $82, $82, $83
1686c     84 83 82 7E 
16870     7B 79 7B 80 
16874     84 85 83 82 
16878     82 80 7C 7B | 	byte	$84, $83, $82, $7e, $7b, $79, $7b, $80, $84, $85, $83, $82, $82, $80, $7c, $7b
1687c     7D 81 83 83 
16880     81 7F 7E 7E 
16884     7E 7F 7F 80 
16888     81 81 82 84 | 	byte	$7d, $81, $83, $83, $81, $7f, $7e, $7e, $7e, $7f, $7f, $80, $81, $81, $82, $84
1688c     85 85 82 7E 
16890     7A 78 7A 7F 
16894     83 84 83 83 
16898     82 7F 7C 7B | 	byte	$85, $85, $82, $7e, $7a, $78, $7a, $7f, $83, $84, $83, $83, $82, $7f, $7c, $7b
1689c     7E 81 82 82 
168a0     81 80 7E 7E 
168a4     7F 7F 7F 7F 
168a8     7F 81 83 85 | 	byte	$7e, $81, $82, $82, $81, $80, $7e, $7e, $7f, $7f, $7f, $7f, $7f, $81, $83, $85
168ac     86 86 82 7E 
168b0     7B 78 7B 7F 
168b4     83 84 84 83 
168b8     80 7C 7A 7B | 	byte	$86, $86, $82, $7e, $7b, $78, $7b, $7f, $83, $84, $84, $83, $80, $7c, $7a, $7b
168bc     80 82 84 83 
168c0     81 80 7D 7D 
168c4     7F 80 80 7F 
168c8     80 80 82 84 | 	byte	$80, $82, $84, $83, $81, $80, $7d, $7d, $7f, $80, $80, $7f, $80, $80, $82, $84
168cc     85 85 82 7E 
168d0     7A 79 7C 7F 
168d4     83 83 84 83 
168d8     80 7C 7B 7D | 	byte	$85, $85, $82, $7e, $7a, $79, $7c, $7f, $83, $83, $84, $83, $80, $7c, $7b, $7d
168dc     81 83 83 82 
168e0     80 7E 7C 7C 
168e4     7F 81 82 81 
168e8     80 80 82 83 | 	byte	$81, $83, $83, $82, $80, $7e, $7c, $7c, $7f, $81, $82, $81, $80, $80, $82, $83
168ec     83 83 81 7F 
168f0     7C 7C 7D 81 
168f4     82 83 83 81 
168f8     7E 7C 7C 7E | 	byte	$83, $83, $81, $7f, $7c, $7c, $7d, $81, $82, $83, $83, $81, $7e, $7c, $7c, $7e
168fc     82 83 83 81 
16900     7F 7D 7C 7D 
16904     7F 82 83 83 
16908     80 81 81 82 | 	byte	$82, $83, $83, $81, $7f, $7d, $7c, $7d, $7f, $82, $83, $83, $80, $81, $81, $82
1690c     81 81 80 7E 
16910     7B 7C 7E 81 
16914     83 85 84 80 
16918     7C 7A 7C 7F | 	byte	$81, $81, $80, $7e, $7b, $7c, $7e, $81, $83, $85, $84, $80, $7c, $7a, $7c, $7f
1691c     82 84 84 82 
16920     80 7C 7C 7C 
16924     7E 80 82 83 
16928     83 83 83 82 | 	byte	$82, $84, $84, $82, $80, $7c, $7c, $7c, $7e, $80, $82, $83, $83, $83, $83, $82
1692c     81 80 7E 7C 
16930     7A 7C 7F 84 
16934     86 86 83 7E 
16938     7A 79 7C 81 | 	byte	$81, $80, $7e, $7c, $7a, $7c, $7f, $84, $86, $86, $83, $7e, $7a, $79, $7c, $81
1693c     84 86 85 82 
16940     7E 7B 7A 7C 
16944     80 82 83 84 
16948     84 83 82 7F | 	byte	$84, $86, $85, $82, $7e, $7b, $7a, $7c, $80, $82, $83, $84, $84, $83, $82, $7f
1694c     80 80 7F 7B 
16950     79 7C 7F 83 
16954     85 85 82 7F 
16958     7B 7A 7D 83 | 	byte	$80, $80, $7f, $7b, $79, $7c, $7f, $83, $85, $85, $82, $7f, $7b, $7a, $7d, $83
1695c     85 86 84 81 
16960     7D 7A 79 7C 
16964     80 82 84 85 
16968     85 84 81 7E | 	byte	$85, $86, $84, $81, $7d, $7a, $79, $7c, $80, $82, $84, $85, $85, $84, $81, $7e
1696c     7F 7F 7E 7B 
16970     7B 7C 80 83 
16974     84 84 81 7E 
16978     7B 7C 7F 83 | 	byte	$7f, $7f, $7e, $7b, $7b, $7c, $80, $83, $84, $84, $81, $7e, $7b, $7c, $7f, $83
1697c     85 85 84 80 
16980     7C 79 78 7B 
16984     7F 83 85 87 
16988     87 85 81 7D | 	byte	$85, $85, $84, $80, $7c, $79, $78, $7b, $7f, $83, $85, $87, $87, $85, $81, $7d
1698c     7C 7C 7C 7C 
16990     7D 7E 81 82 
16994     84 82 80 7D 
16998     7C 7E 81 83 | 	byte	$7c, $7c, $7c, $7c, $7d, $7e, $81, $82, $84, $82, $80, $7d, $7c, $7e, $81, $83
1699c     84 84 83 80 
169a0     7D 7A 7A 7C 
169a4     80 84 86 87 
169a8     87 84 80 7D | 	byte	$84, $84, $83, $80, $7d, $7a, $7a, $7c, $80, $84, $86, $87, $87, $84, $80, $7d
169ac     7B 7B 7C 7D 
169b0     7E 80 81 81 
169b4     81 81 7E 7D 
169b8     7D 80 84 84 | 	byte	$7b, $7b, $7c, $7d, $7e, $80, $81, $81, $81, $81, $7e, $7d, $7d, $80, $84, $84
169bc     83 83 81 80 
169c0     7D 7A 7A 7C 
169c4     7F 83 86 86 
169c8     85 83 7F 7D | 	byte	$83, $83, $81, $80, $7d, $7a, $7a, $7c, $7f, $83, $86, $86, $85, $83, $7f, $7d
169cc     7C 7D 7D 7E 
169d0     7F 81 82 81 
169d4     80 80 7D 7C 
169d8     7E 81 85 84 | 	byte	$7c, $7d, $7d, $7e, $7f, $81, $82, $81, $80, $80, $7d, $7c, $7e, $81, $85, $84
169dc     83 82 81 80 
169e0     7C 79 7A 7B 
169e4     7F 83 87 88 
169e8     84 81 7D 7C | 	byte	$83, $82, $81, $80, $7c, $79, $7a, $7b, $7f, $83, $87, $88, $84, $81, $7d, $7c
169ec     7C 7D 7D 7F 
169f0     81 82 83 82 
169f4     7F 7E 7D 7C 
169f8     7F 82 86 84 | 	byte	$7c, $7d, $7d, $7f, $81, $82, $83, $82, $7f, $7e, $7d, $7c, $7f, $82, $86, $84
169fc     83 82 80 7F 
16a00     7B 7A 7A 7C 
16a04     80 83 86 87 
16a08     84 80 7C 7C | 	byte	$83, $82, $80, $7f, $7b, $7a, $7a, $7c, $80, $83, $86, $87, $84, $80, $7c, $7c
16a0c     7D 7F 7F 80 
16a10     81 82 82 81 
16a14     7E 7D 7D 7D 
16a18     80 84 85 83 | 	byte	$7d, $7f, $7f, $80, $81, $82, $82, $81, $7e, $7d, $7d, $7d, $80, $84, $85, $83
16a1c     82 81 81 7F 
16a20     7C 7B 7C 7E 
16a24     80 83 85 86 
16a28     84 80 7C 7B | 	byte	$82, $81, $81, $7f, $7c, $7b, $7c, $7e, $80, $83, $85, $86, $84, $80, $7c, $7b
16a2c     7C 7E 80 82 
16a30     82 83 82 81 
16a34     7E 7C 7C 7D 
16a38     81 85 84 83 | 	byte	$7c, $7e, $80, $82, $82, $83, $82, $81, $7e, $7c, $7c, $7d, $81, $85, $84, $83
16a3c     82 82 81 7D 
16a40     7A 7A 7C 80 
16a44     82 84 86 85 
16a48     83 7E 7B 7A | 	byte	$82, $82, $81, $7d, $7a, $7a, $7c, $80, $82, $84, $86, $85, $83, $7e, $7b, $7a
16a4c     7C 7F 81 83 
16a50     84 83 82 80 
16a54     7E 7C 7B 7D 
16a58     81 84 83 82 | 	byte	$7c, $7f, $81, $83, $84, $83, $82, $80, $7e, $7c, $7b, $7d, $81, $84, $83, $82
16a5c     83 82 81 7D 
16a60     7A 7B 7D 81 
16a64     83 85 86 84 
16a68     81 7D 7A 7A | 	byte	$83, $82, $81, $7d, $7a, $7b, $7d, $81, $83, $85, $86, $84, $81, $7d, $7a, $7a
16a6c     7C 7E 82 84 
16a70     85 83 82 80 
16a74     7E 7C 7A 7C 
16a78     81 83 82 82 | 	byte	$7c, $7e, $82, $84, $85, $83, $82, $80, $7e, $7c, $7a, $7c, $81, $83, $82, $82
16a7c     83 83 81 7D 
16a80     79 7A 7D 81 
16a84     85 87 86 84 
16a88     80 7D 7B 7A | 	byte	$83, $83, $81, $7d, $79, $7a, $7d, $81, $85, $87, $86, $84, $80, $7d, $7b, $7a
16a8c     7C 7E 82 85 
16a90     86 84 82 80 
16a94     7D 7C 7A 7D 
16a98     81 82 82 82 | 	byte	$7c, $7e, $82, $85, $86, $84, $82, $80, $7d, $7c, $7a, $7d, $81, $82, $82, $82
16a9c     82 83 80 7D 
16aa0     7A 7B 7E 82 
16aa4     86 87 85 82 
16aa8     80 7D 7B 7B | 	byte	$82, $83, $80, $7d, $7a, $7b, $7e, $82, $86, $87, $85, $82, $80, $7d, $7b, $7b
16aac     7C 7E 81 83 
16ab0     83 82 82 81 
16ab4     7F 7D 7C 7F 
16ab8     81 81 7F 81 | 	byte	$7c, $7e, $81, $83, $83, $82, $82, $81, $7f, $7d, $7c, $7f, $81, $81, $7f, $81
16abc     82 82 81 7D 
16ac0     7C 7C 7F 83 
16ac4     85 86 84 81 
16ac8     7E 7C 7A 7B | 	byte	$82, $82, $81, $7d, $7c, $7c, $7f, $83, $85, $86, $84, $81, $7e, $7c, $7a, $7b
16acc     7D 7F 81 82 
16ad0     82 82 81 81 
16ad4     80 7F 7F 80 
16ad8     81 7F 7F 7F | 	byte	$7d, $7f, $81, $82, $82, $82, $81, $81, $80, $7f, $7f, $80, $81, $7f, $7f, $7f
16adc     80 81 80 7D 
16ae0     7D 7D 80 83 
16ae4     85 86 85 82 
16ae8     7E 7C 7A 7C | 	byte	$80, $81, $80, $7d, $7d, $7d, $80, $83, $85, $86, $85, $82, $7e, $7c, $7a, $7c
16aec     7D 7E 81 82 
16af0     82 82 81 80 
16af4     7F 7E 80 81 
16af8     82 7F 7F 7F | 	byte	$7d, $7e, $81, $82, $82, $82, $81, $80, $7f, $7e, $80, $81, $82, $7f, $7f, $7f
16afc     80 81 7F 7E 
16b00     7E 7F 80 82 
16b04     85 86 84 82 
16b08     7E 7D 7B 7C | 	byte	$80, $81, $7f, $7e, $7e, $7f, $80, $82, $85, $86, $84, $82, $7e, $7d, $7b, $7c
16b0c     7E 7F 80 80 
16b10     80 81 81 80 
16b14     7F 80 82 82 
16b18     82 7E 7D 7D | 	byte	$7e, $7f, $80, $80, $80, $81, $81, $80, $7f, $80, $82, $82, $82, $7e, $7d, $7d
16b1c     7E 80 80 81 
16b20     81 81 81 82 
16b24     83 83 83 81 
16b28     7E 7D 7D 7E | 	byte	$7e, $80, $80, $81, $81, $81, $81, $82, $83, $83, $83, $81, $7e, $7d, $7d, $7e
16b2c     7E 7F 7F 7E 
16b30     7E 80 80 80 
16b34     80 81 83 84 
16b38     81 7E 7D 7D | 	byte	$7e, $7f, $7f, $7e, $7e, $80, $80, $80, $80, $81, $83, $84, $81, $7e, $7d, $7d
16b3c     7D 7E 7F 80 
16b40     82 83 82 81 
16b44     81 81 81 80 
16b48     7E 7E 7E 7F | 	byte	$7d, $7e, $7f, $80, $82, $83, $82, $81, $81, $81, $81, $80, $7e, $7e, $7e, $7f
16b4c     7F 80 7F 7E 
16b50     7F 80 80 7F 
16b54     80 81 83 83 
16b58     81 7E 7E 7D | 	byte	$7f, $80, $7f, $7e, $7f, $80, $80, $7f, $80, $81, $83, $83, $81, $7e, $7e, $7d
16b5c     7D 7D 7E 80 
16b60     82 84 84 83 
16b64     81 80 80 7F 
16b68     7F 7E 7F 80 | 	byte	$7d, $7d, $7e, $80, $82, $84, $84, $83, $81, $80, $80, $7f, $7f, $7e, $7f, $80
16b6c     80 80 7F 7E 
16b70     7F 7F 80 7F 
16b74     80 82 83 83 
16b78     81 7F 7E 7D | 	byte	$80, $80, $7f, $7e, $7f, $7f, $80, $7f, $80, $82, $83, $83, $81, $7f, $7e, $7d
16b7c     7D 7D 7F 82 
16b80     83 85 84 83 
16b84     81 80 7E 7E 
16b88     7F 7F 80 81 | 	byte	$7d, $7d, $7f, $82, $83, $85, $84, $83, $81, $80, $7e, $7e, $7f, $7f, $80, $81
16b8c     80 7F 7E 7D 
16b90     80 80 7F 7F 
16b94     7F 82 83 82 
16b98     81 80 7E 7D | 	byte	$80, $7f, $7e, $7d, $80, $80, $7f, $7f, $7f, $82, $83, $82, $81, $80, $7e, $7d
16b9c     7D 7D 7E 82 
16ba0     84 84 83 82 
16ba4     81 7F 7E 7D 
16ba8     7E 80 82 81 | 	byte	$7d, $7d, $7e, $82, $84, $84, $83, $82, $81, $7f, $7e, $7d, $7e, $80, $82, $81
16bac     80 7E 7D 7E 
16bb0     80 81 7F 7E 
16bb4     7F 81 83 82 
16bb8     81 80 7F 7E | 	byte	$80, $7e, $7d, $7e, $80, $81, $7f, $7e, $7f, $81, $83, $82, $81, $80, $7f, $7e
16bbc     7D 7E 7F 82 
16bc0     84 83 82 82 
16bc4     81 7F 7D 7D 
16bc8     7E 80 82 81 | 	byte	$7d, $7e, $7f, $82, $84, $83, $82, $82, $81, $7f, $7d, $7d, $7e, $80, $82, $81
16bcc     7F 7E 7E 80 
16bd0     81 81 7F 7D 
16bd4     7D 7F 82 83 
16bd8     82 82 81 7E | 	byte	$7f, $7e, $7e, $80, $81, $81, $7f, $7d, $7d, $7f, $82, $83, $82, $82, $81, $7e
16bdc     7D 7D 7F 81 
16be0     83 83 83 82 
16be4     81 80 7D 7D 
16be8     7D 81 82 82 | 	byte	$7d, $7d, $7f, $81, $83, $83, $83, $82, $81, $80, $7d, $7d, $7d, $81, $82, $82
16bec     80 7E 7E 80 
16bf0     82 82 7F 7D 
16bf4     7C 7F 82 82 
16bf8     82 82 81 7E | 	byte	$80, $7e, $7e, $80, $82, $82, $7f, $7d, $7c, $7f, $82, $82, $82, $82, $81, $7e
16bfc     7D 7D 7F 81 
16c00     83 84 84 83 
16c04     81 7F 7D 7D 
16c08     7D 80 82 81 | 	byte	$7d, $7d, $7f, $81, $83, $84, $84, $83, $81, $7f, $7d, $7d, $7d, $80, $82, $81
16c0c     80 7E 7E 80 
16c10     82 81 7F 7D 
16c14     7D 7F 82 82 
16c18     83 83 82 7F | 	byte	$80, $7e, $7e, $80, $82, $81, $7f, $7d, $7d, $7f, $82, $82, $83, $83, $82, $7f
16c1c     7D 7D 7E 80 
16c20     81 83 85 84 
16c24     82 7E 7D 7D 
16c28     7D 80 81 81 | 	byte	$7d, $7d, $7e, $80, $81, $83, $85, $84, $82, $7e, $7d, $7d, $7d, $80, $81, $81
16c2c     80 7F 7F 81 
16c30     82 81 7F 7E 
16c34     7E 7F 81 81 
16c38     82 83 81 7F | 	byte	$80, $7f, $7f, $81, $82, $81, $7f, $7e, $7e, $7f, $81, $81, $82, $83, $81, $7f
16c3c     7D 7D 7E 81 
16c40     82 83 86 84 
16c44     81 7E 7C 7C 
16c48     7E 82 82 82 | 	byte	$7d, $7d, $7e, $81, $82, $83, $86, $84, $81, $7e, $7c, $7c, $7e, $82, $82, $82
16c4c     81 7F 7F 80 
16c50     80 7F 7E 7E 
16c54     7F 80 81 81 
16c58     82 83 81 7F | 	byte	$81, $7f, $7f, $80, $80, $7f, $7e, $7e, $7f, $80, $81, $81, $82, $83, $81, $7f
16c5c     7D 7D 7E 80 
16c60     82 83 85 84 
16c64     81 7E 7C 7D 
16c68     7F 82 82 81 | 	byte	$7d, $7d, $7e, $80, $82, $83, $85, $84, $81, $7e, $7c, $7d, $7f, $82, $82, $81
16c6c     7F 7F 80 81 
16c70     81 7F 7E 7F 
16c74     80 81 80 7F 
16c78     81 81 81 7F | 	byte	$7f, $7f, $80, $81, $81, $7f, $7e, $7f, $80, $81, $80, $7f, $81, $81, $81, $7f
16c7c     7E 7F 7F 81 
16c80     81 82 82 82 
16c84     80 7F 7E 7E 
16c88     80 82 81 7F | 	byte	$7e, $7f, $7f, $81, $81, $82, $82, $82, $80, $7f, $7e, $7e, $80, $82, $81, $7f
16c8c     7D 7E 80 82 
16c90     81 7E 7D 7E 
16c94     80 81 80 80 
16c98     81 81 80 7F | 	byte	$7d, $7e, $80, $82, $81, $7e, $7d, $7e, $80, $81, $80, $80, $81, $81, $80, $7f
16c9c     7F 7F 80 81 
16ca0     81 82 81 81 
16ca4     81 80 7F 7F 
16ca8     81 81 7F 7D | 	byte	$7f, $7f, $80, $81, $81, $82, $81, $81, $81, $80, $7f, $7f, $81, $81, $7f, $7d
16cac     7C 7E 83 84 
16cb0     83 7F 7E 7E 
16cb4     7F 80 7E 7F 
16cb8     81 81 80 7F | 	byte	$7c, $7e, $83, $84, $83, $7f, $7e, $7e, $7f, $80, $7e, $7f, $81, $81, $80, $7f
16cbc     7F 80 81 82 
16cc0     81 81 80 81 
16cc4     81 80 7F 7F 
16cc8     81 82 80 7D | 	byte	$7f, $80, $81, $82, $81, $81, $80, $81, $81, $80, $7f, $7f, $81, $82, $80, $7d
16ccc     7C 7E 83 85 
16cd0     83 7F 7D 7E 
16cd4     7E 7E 7E 7F 
16cd8     81 81 80 7E | 	byte	$7c, $7e, $83, $85, $83, $7f, $7d, $7e, $7e, $7e, $7e, $7f, $81, $81, $80, $7e
16cdc     7F 81 82 82 
16ce0     81 80 7F 80 
16ce4     81 80 80 81 
16ce8     82 82 7F 7C | 	byte	$7f, $81, $82, $82, $81, $80, $7f, $80, $81, $80, $80, $81, $82, $82, $7f, $7c
16cec     7B 7E 83 85 
16cf0     84 80 7E 7D 
16cf4     7D 7C 7D 80 
16cf8     82 82 80 7F | 	byte	$7b, $7e, $83, $85, $84, $80, $7e, $7d, $7d, $7c, $7d, $80, $82, $82, $80, $7f
16cfc     80 80 81 82 
16d00     81 80 7F 7F 
16d04     80 81 81 82 
16d08     82 81 7E 7B | 	byte	$80, $80, $81, $82, $81, $80, $7f, $7f, $80, $81, $81, $82, $82, $81, $7e, $7b
16d0c     7B 7E 82 85 
16d10     84 82 7F 7E 
16d14     7C 7B 7C 7F 
16d18     81 82 82 81 | 	byte	$7b, $7e, $82, $85, $84, $82, $7f, $7e, $7c, $7b, $7c, $7f, $81, $82, $82, $81
16d1c     81 80 81 81 
16d20     81 7F 7F 7F 
16d24     80 81 82 83 
16d28     83 81 7D 7B | 	byte	$81, $80, $81, $81, $81, $7f, $7f, $7f, $80, $81, $82, $83, $83, $81, $7d, $7b
16d2c     7B 7E 82 84 
16d30     84 84 81 7F 
16d34     7D 7B 7C 7E 
16d38     80 81 82 82 | 	byte	$7b, $7e, $82, $84, $84, $84, $81, $7f, $7d, $7b, $7c, $7e, $80, $81, $82, $82
16d3c     82 81 81 80 
16d40     80 7F 7F 7F 
16d44     80 81 82 83 
16d48     84 81 7D 7B | 	byte	$82, $81, $81, $80, $80, $7f, $7f, $7f, $80, $81, $82, $83, $84, $81, $7d, $7b
16d4c     7B 7F 82 83 
16d50     83 83 82 7F 
16d54     7C 7A 7C 7F 
16d58     80 81 82 82 | 	byte	$7b, $7f, $82, $83, $83, $83, $82, $7f, $7c, $7a, $7c, $7f, $80, $81, $82, $82
16d5c     82 81 80 7F 
16d60     7F 7F 80 80 
16d64     80 80 82 83 
16d68     83 80 7D 7B | 	byte	$82, $81, $80, $7f, $7f, $7f, $80, $80, $80, $80, $82, $83, $83, $80, $7d, $7b
16d6c     7C 80 81 82 
16d70     82 82 82 7F 
16d74     7B 7A 7D 80 
16d78     81 82 82 83 | 	byte	$7c, $80, $81, $82, $82, $82, $82, $7f, $7b, $7a, $7d, $80, $81, $82, $82, $83
16d7c     82 81 80 7E 
16d80     7D 7F 80 81 
16d84     82 81 82 83 
16d88     82 7F 7C 7B | 	byte	$82, $81, $80, $7e, $7d, $7f, $80, $81, $82, $81, $82, $83, $82, $7f, $7c, $7b
16d8c     7D 80 83 82 
16d90     82 82 80 7E 
16d94     7A 79 7D 7F 
16d98     82 82 83 83 | 	byte	$7d, $80, $83, $82, $82, $82, $80, $7e, $7a, $79, $7d, $7f, $82, $82, $83, $83
16d9c     83 82 80 7E 
16da0     7D 7E 80 81 
16da4     82 82 83 84 
16da8     82 80 7C 7B | 	byte	$83, $82, $80, $7e, $7d, $7e, $80, $81, $82, $82, $83, $84, $82, $80, $7c, $7b
16dac     7C 7F 81 82 
16db0     83 83 81 7F 
16db4     7B 7A 7D 7F 
16db8     81 82 83 83 | 	byte	$7c, $7f, $81, $82, $83, $83, $81, $7f, $7b, $7a, $7d, $7f, $81, $82, $83, $83
16dbc     83 82 7F 7E 
16dc0     7D 7E 7F 81 
16dc4     81 82 83 83 
16dc8     82 80 7D 7B | 	byte	$83, $82, $7f, $7e, $7d, $7e, $7f, $81, $81, $82, $83, $83, $82, $80, $7d, $7b
16dcc     7D 7E 80 81 
16dd0     83 83 81 7E 
16dd4     7C 7B 7D 7E 
16dd8     80 82 83 84 | 	byte	$7d, $7e, $80, $81, $83, $83, $81, $7e, $7c, $7b, $7d, $7e, $80, $82, $83, $84
16ddc     84 82 80 7E 
16de0     7D 7E 80 81 
16de4     82 82 83 82 
16de8     80 7E 7C 7C | 	byte	$84, $82, $80, $7e, $7d, $7e, $80, $81, $82, $82, $83, $82, $80, $7e, $7c, $7c
16dec     7E 80 81 82 
16df0     83 82 80 7E 
16df4     7C 7D 7E 7F 
16df8     80 81 82 83 | 	byte	$7e, $80, $81, $82, $83, $82, $80, $7e, $7c, $7d, $7e, $7f, $80, $81, $82, $83
16dfc     84 82 80 7F 
16e00     7E 7F 80 81 
16e04     81 81 82 82 
16e08     7F 7E 7E 7F | 	byte	$84, $82, $80, $7f, $7e, $7f, $80, $81, $81, $81, $82, $82, $7f, $7e, $7e, $7f
16e0c     7F 80 80 81 
16e10     81 81 7F 7E 
16e14     7D 7F 80 7F 
16e18     80 7F 82 83 | 	byte	$7f, $80, $80, $81, $81, $81, $7f, $7e, $7d, $7f, $80, $7f, $80, $7f, $82, $83
16e1c     83 81 80 7F 
16e20     80 80 81 81 
16e24     81 82 82 81 
16e28     7F 7D 7E 7F | 	byte	$83, $81, $80, $7f, $80, $80, $81, $81, $81, $82, $82, $81, $7f, $7d, $7e, $7f
16e2c     80 81 80 80 
16e30     80 7F 7E 7C 
16e34     7E 80 81 81 
16e38     80 80 81 82 | 	byte	$80, $81, $80, $80, $80, $7f, $7e, $7c, $7e, $80, $81, $81, $80, $80, $81, $82
16e3c     82 81 7F 7F 
16e40     7F 80 81 81 
16e44     81 81 81 7F 
16e48     7D 7C 7E 80 | 	byte	$82, $81, $7f, $7f, $7f, $80, $81, $81, $81, $81, $81, $7f, $7d, $7c, $7e, $80
16e4c     82 83 82 81 
16e50     7F 7E 7D 7C 
16e54     7D 80 81 82 
16e58     81 81 81 81 | 	byte	$82, $83, $82, $81, $7f, $7e, $7d, $7c, $7d, $80, $81, $82, $81, $81, $81, $81
16e5c     81 80 7F 7E 
16e60     7F 81 82 82 
16e64     82 81 80 7E 
16e68     7C 7C 7E 81 | 	byte	$81, $80, $7f, $7e, $7f, $81, $82, $82, $82, $81, $80, $7e, $7c, $7c, $7e, $81
16e6c     84 84 82 80 
16e70     7D 7C 7C 7C 
16e74     7E 80 82 83 
16e78     81 80 80 80 | 	byte	$84, $84, $82, $80, $7d, $7c, $7c, $7c, $7e, $80, $82, $83, $81, $80, $80, $80
16e7c     80 81 80 7F 
16e80     80 80 81 81 
16e84     81 81 80 7D 
16e88     7C 7C 7F 82 | 	byte	$80, $81, $80, $7f, $80, $80, $81, $81, $81, $81, $80, $7d, $7c, $7c, $7f, $82
16e8c     85 85 83 81 
16e90     7E 7C 7B 7B 
16e94     7D 80 82 83 
16e98     82 81 80 80 | 	byte	$85, $85, $83, $81, $7e, $7c, $7b, $7b, $7d, $80, $82, $83, $82, $81, $80, $80
16e9c     80 80 7F 7F 
16ea0     80 81 82 81 
16ea4     81 81 7E 7D 
16ea8     7C 7D 80 83 | 	byte	$80, $80, $7f, $7f, $80, $81, $82, $81, $81, $81, $7e, $7d, $7c, $7d, $80, $83
16eac     85 84 83 81 
16eb0     7E 7C 79 7A 
16eb4     7D 80 83 84 
16eb8     83 81 7F 7E | 	byte	$85, $84, $83, $81, $7e, $7c, $79, $7a, $7d, $80, $83, $84, $83, $81, $7f, $7e
16ebc     7E 7F 7F 80 
16ec0     81 83 83 81 
16ec4     80 7F 7D 7C 
16ec8     7C 7E 82 84 | 	byte	$7e, $7f, $7f, $80, $81, $83, $83, $81, $80, $7f, $7d, $7c, $7c, $7e, $82, $84
16ecc     85 84 83 81 
16ed0     7F 7B 79 7A 
16ed4     7E 81 83 84 
16ed8     84 82 7F 7E | 	byte	$85, $84, $83, $81, $7f, $7b, $79, $7a, $7e, $81, $83, $84, $84, $82, $7f, $7e
16edc     7C 7D 7F 81 
16ee0     83 84 84 82 
16ee4     80 7E 7C 7B 
16ee8     7C 7F 83 85 | 	byte	$7c, $7d, $7f, $81, $83, $84, $84, $82, $80, $7e, $7c, $7b, $7c, $7f, $83, $85
16eec     85 84 83 80 
16ef0     7E 7B 79 7B 
16ef4     7E 81 83 83 
16ef8     83 81 80 7E | 	byte	$85, $84, $83, $80, $7e, $7b, $79, $7b, $7e, $81, $83, $83, $83, $81, $80, $7e
16efc     7D 7C 7E 82 
16f00     84 85 84 82 
16f04     81 7E 7B 7A 
16f08     7B 7F 83 85 | 	byte	$7d, $7c, $7e, $82, $84, $85, $84, $82, $81, $7e, $7b, $7a, $7b, $7f, $83, $85
16f0c     85 85 83 81 
16f10     7E 7B 7A 7B 
16f14     7D 80 82 83 
16f18     82 81 81 7F | 	byte	$85, $85, $83, $81, $7e, $7b, $7a, $7b, $7d, $80, $82, $83, $82, $81, $81, $7f
16f1c     7E 7C 7E 81 
16f20     84 85 84 82 
16f24     81 7E 7B 7A 
16f28     7B 80 83 85 | 	byte	$7e, $7c, $7e, $81, $84, $85, $84, $82, $81, $7e, $7b, $7a, $7b, $80, $83, $85
16f2c     85 84 82 80 
16f30     7E 7C 7C 7D 
16f34     7F 80 81 81 
16f38     80 81 81 80 | 	byte	$85, $84, $82, $80, $7e, $7c, $7c, $7d, $7f, $80, $81, $81, $80, $81, $81, $80
16f3c     7E 7D 7E 80 
16f40     83 84 84 83 
16f44     82 7E 7B 7A 
16f48     7C 80 83 85 | 	byte	$7e, $7d, $7e, $80, $83, $84, $84, $83, $82, $7e, $7b, $7a, $7c, $80, $83, $85
16f4c     84 83 82 7F 
16f50     7E 7C 7D 7E 
16f54     80 80 80 80 
16f58     80 81 81 81 | 	byte	$84, $83, $82, $7f, $7e, $7c, $7d, $7e, $80, $80, $80, $80, $80, $81, $81, $81
16f5c     7F 7E 7E 80 
16f60     83 83 84 83 
16f64     81 7D 7A 7A 
16f68     7D 81 84 84 | 	byte	$7f, $7e, $7e, $80, $83, $83, $84, $83, $81, $7d, $7a, $7a, $7d, $81, $84, $84
16f6c     84 83 81 7F 
16f70     7D 7B 7D 80 
16f74     81 81 80 7F 
16f78     7F 80 80 80 | 	byte	$84, $83, $81, $7f, $7d, $7b, $7d, $80, $81, $81, $80, $7f, $7f, $80, $80, $80
16f7c     7F 7F 7F 81 
16f80     83 84 84 83 
16f84     80 7C 7A 7A 
16f88     7E 81 84 85 | 	byte	$7f, $7f, $7f, $81, $83, $84, $84, $83, $80, $7c, $7a, $7a, $7e, $81, $84, $85
16f8c     84 83 80 7E 
16f90     7C 7C 7E 80 
16f94     82 81 80 7F 
16f98     7F 80 80 80 | 	byte	$84, $83, $80, $7e, $7c, $7c, $7e, $80, $82, $81, $80, $7f, $7f, $80, $80, $80
16f9c     7F 7F 80 81 
16fa0     83 83 84 83 
16fa4     80 7C 7A 7B 
16fa8     7D 81 83 84 | 	byte	$7f, $7f, $80, $81, $83, $83, $84, $83, $80, $7c, $7a, $7b, $7d, $81, $83, $84
16fac     84 83 81 7E 
16fb0     7C 7C 7E 80 
16fb4     81 81 80 7F 
16fb8     80 80 80 80 | 	byte	$84, $83, $81, $7e, $7c, $7c, $7e, $80, $81, $81, $80, $7f, $80, $80, $80, $80
16fbc     7E 7F 80 82 
16fc0     83 85 84 83 
16fc4     7F 7C 7A 7B 
16fc8     7E 81 84 84 | 	byte	$7e, $7f, $80, $82, $83, $85, $84, $83, $7f, $7c, $7a, $7b, $7e, $81, $84, $84
16fcc     84 82 80 7E 
16fd0     7C 7C 7E 80 
16fd4     81 81 80 7F 
16fd8     7F 81 81 81 | 	byte	$84, $82, $80, $7e, $7c, $7c, $7e, $80, $81, $81, $80, $7f, $7f, $81, $81, $81
16fdc     7F 7F 7F 81 
16fe0     82 83 84 82 
16fe4     7F 7C 7B 7C 
16fe8     7F 81 83 83 | 	byte	$7f, $7f, $7f, $81, $82, $83, $84, $82, $7f, $7c, $7b, $7c, $7f, $81, $83, $83
16fec     84 82 80 7D 
16ff0     7C 7D 7F 80 
16ff4     81 81 80 7F 
16ff8     80 80 80 80 | 	byte	$84, $82, $80, $7d, $7c, $7d, $7f, $80, $81, $81, $80, $7f, $80, $80, $80, $80
16ffc     7F 80 80 81 
17000     82 83 83 81 
17004     7E 7C 7C 7D 
17008     80 81 83 83 | 	byte	$7f, $80, $80, $81, $82, $83, $83, $81, $7e, $7c, $7c, $7d, $80, $81, $83, $83
1700c     83 81 7F 7D 
17010     7C 7D 7F 80 
17014     81 80 80 80 
17018     81 81 80 7F | 	byte	$83, $81, $7f, $7d, $7c, $7d, $7f, $80, $81, $80, $80, $80, $81, $81, $80, $7f
1701c     7F 80 81 82 
17020     82 82 81 7F 
17024     7C 7B 7C 7F 
17028     81 83 83 83 | 	byte	$7f, $80, $81, $82, $82, $82, $81, $7f, $7c, $7b, $7c, $7f, $81, $83, $83, $83
1702c     82 81 7E 7C 
17030     7C 7D 7F 81 
17034     81 80 80 80 
17038     80 80 7F 7F | 	byte	$82, $81, $7e, $7c, $7c, $7d, $7f, $81, $81, $80, $80, $80, $80, $80, $7f, $7f
1703c     7F 80 81 82 
17040     82 82 80 7E 
17044     7C 7C 7D 81 
17048     82 83 83 82 | 	byte	$7f, $80, $81, $82, $82, $82, $80, $7e, $7c, $7c, $7d, $81, $82, $83, $83, $82
1704c     81 80 7E 7D 
17050     7D 7E 7F 80 
17054     80 80 80 80 
17058     81 81 80 7F | 	byte	$81, $80, $7e, $7d, $7d, $7e, $7f, $80, $80, $80, $80, $80, $81, $81, $80, $7f
1705c     80 81 82 82 
17060     82 81 80 7D 
17064     7B 7B 7D 81 
17068     83 84 84 82 | 	byte	$80, $81, $82, $82, $82, $81, $80, $7d, $7b, $7b, $7d, $81, $83, $84, $84, $82
1706c     81 80 7E 7D 
17070     7D 7D 7F 80 
17074     80 80 80 80 
17078     81 81 80 7F | 	byte	$81, $80, $7e, $7d, $7d, $7d, $7f, $80, $80, $80, $80, $80, $81, $81, $80, $7f
1707c     80 81 83 83 
17080     82 80 7F 7C 
17084     7A 7B 7E 82 
17088     84 85 84 81 | 	byte	$80, $81, $83, $83, $82, $80, $7f, $7c, $7a, $7b, $7e, $82, $84, $85, $84, $81
1708c     80 7F 7F 7E 
17090     7F 7F 80 80 
17094     7F 7F 7E 7E 
17098     80 81 81 81 | 	byte	$80, $7f, $7f, $7e, $7f, $7f, $80, $80, $7f, $7f, $7e, $7e, $80, $81, $81, $81
1709c     81 81 83 82 
170a0     81 80 7E 7C 
170a4     7C 7D 80 83 
170a8     84 85 83 80 | 	byte	$81, $81, $83, $82, $81, $80, $7e, $7c, $7c, $7d, $80, $83, $84, $85, $83, $80
170ac     7F 7E 7F 80 
170b0     81 81 81 80 
170b4     7F 7E 7E 7E 
170b8     7F 81 81 81 | 	byte	$7f, $7e, $7f, $80, $81, $81, $81, $80, $7f, $7e, $7e, $7e, $7f, $81, $81, $81
170bc     81 82 82 82 
170c0     81 80 7D 7C 
170c4     7C 7E 81 83 
170c8     84 84 82 80 | 	byte	$81, $82, $82, $82, $81, $80, $7d, $7c, $7c, $7e, $81, $83, $84, $84, $82, $80
170cc     7E 7D 7E 7F 
170d0     80 81 81 80 
170d4     7F 7E 7D 7E 
170d8     7F 81 81 82 | 	byte	$7e, $7d, $7e, $7f, $80, $81, $81, $80, $7f, $7e, $7d, $7e, $7f, $81, $81, $82
170dc     82 82 82 81 
170e0     81 7F 7D 7C 
170e4     7D 7F 81 82 
170e8     83 83 82 80 | 	byte	$82, $82, $82, $81, $81, $7f, $7d, $7c, $7d, $7f, $81, $82, $83, $83, $82, $80
170ec     7F 7E 7E 7E 
170f0     7F 81 82 80 
170f4     7F 7F 7F 7F 
170f8     80 80 80 81 | 	byte	$7f, $7e, $7e, $7e, $7f, $81, $82, $80, $7f, $7f, $7f, $7f, $80, $80, $80, $81
170fc     81 81 82 82 
17100     82 81 7D 7C 
17104     7C 7E 80 82 
17108     82 83 82 82 | 	byte	$81, $81, $82, $82, $82, $81, $7d, $7c, $7c, $7e, $80, $82, $82, $83, $82, $82
1710c     81 7F 7E 7D 
17110     7E 80 81 81 
17114     81 7F 80 80 
17118     80 7F 7F 80 | 	byte	$81, $7f, $7e, $7d, $7e, $80, $81, $81, $81, $7f, $80, $80, $80, $7f, $7f, $80
1711c     80 81 81 81 
17120     81 81 7E 7D 
17124     7D 7F 81 82 
17128     82 82 82 82 | 	byte	$80, $81, $81, $81, $81, $81, $7e, $7d, $7d, $7f, $81, $82, $82, $82, $82, $82
1712c     81 80 7D 7C 
17130     7D 80 81 81 
17134     80 80 80 81 
17138     81 80 80 80 | 	byte	$81, $80, $7d, $7c, $7d, $80, $81, $81, $80, $80, $80, $81, $81, $80, $80, $80
1713c     80 81 7F 80 
17140     81 80 7F 7E 
17144     7E 80 81 82 
17148     82 81 81 82 | 	byte	$80, $81, $7f, $80, $81, $80, $7f, $7e, $7e, $80, $81, $82, $82, $81, $81, $82
1714c     81 80 7D 7C 
17150     7D 80 81 82 
17154     81 80 80 80 
17158     81 80 80 81 | 	byte	$81, $80, $7d, $7c, $7d, $80, $81, $82, $81, $80, $80, $80, $81, $80, $80, $81
1715c     81 80 7F 7F 
17160     80 80 7F 7F 
17164     7F 81 81 81 
17168     81 80 81 82 | 	byte	$81, $80, $7f, $7f, $80, $80, $7f, $7f, $7f, $81, $81, $81, $81, $80, $81, $82
1716c     82 80 7D 7C 
17170     7C 7F 80 81 
17174     81 80 80 81 
17178     81 80 80 81 | 	byte	$82, $80, $7d, $7c, $7c, $7f, $80, $81, $81, $80, $80, $81, $81, $80, $80, $81
1717c     81 81 80 7F 
17180     7F 7E 7E 7F 
17184     80 81 82 81 
17188     81 80 81 82 | 	byte	$81, $81, $80, $7f, $7f, $7e, $7e, $7f, $80, $81, $82, $81, $81, $80, $81, $82
1718c     81 80 7E 7D 
17190     7D 7F 80 81 
17194     80 80 80 81 
17198     81 81 80 80 | 	byte	$81, $80, $7e, $7d, $7d, $7f, $80, $81, $80, $80, $80, $81, $81, $81, $80, $80
1719c     81 80 80 7F 
171a0     7F 7D 7E 80 
171a4     81 82 82 80 
171a8     81 80 81 81 | 	byte	$81, $80, $80, $7f, $7f, $7d, $7e, $80, $81, $82, $82, $80, $81, $80, $81, $81
171ac     81 80 7E 7D 
171b0     7D 7E 7F 80 
171b4     80 81 81 81 
171b8     80 80 80 80 | 	byte	$81, $80, $7e, $7d, $7d, $7e, $7f, $80, $80, $81, $81, $81, $80, $80, $80, $80
171bc     80 80 80 80 
171c0     7E 7E 7E 7F 
171c4     81 82 82 81 
171c8     80 80 80 81 | 	byte	$80, $80, $80, $80, $7e, $7e, $7e, $7f, $81, $82, $82, $81, $80, $80, $80, $81
171cc     80 80 7E 7E 
171d0     7F 7E 7F 7F 
171d4     80 81 81 81 
171d8     81 80 80 7F | 	byte	$80, $80, $7e, $7e, $7f, $7e, $7f, $7f, $80, $81, $81, $81, $81, $80, $80, $7f
171dc     7F 80 80 80 
171e0     7F 7E 7F 80 
171e4     81 81 81 80 
171e8     80 80 81 81 | 	byte	$7f, $80, $80, $80, $7f, $7e, $7f, $80, $81, $81, $81, $80, $80, $80, $81, $81
171ec     80 80 7F 7E 
171f0     7E 7E 7F 7F 
171f4     80 81 82 82 
171f8     81 81 80 7F | 	byte	$80, $80, $7f, $7e, $7e, $7e, $7f, $7f, $80, $81, $82, $82, $81, $81, $80, $7f
171fc     7F 80 80 80 
17200     7F 7F 7F 80 
17204     81 81 81 80 
17208     7F 80 80 80 | 	byte	$7f, $80, $80, $80, $7f, $7f, $7f, $80, $81, $81, $81, $80, $7f, $80, $80, $80
1720c     80 80 7F 7F 
17210     7F 7F 7F 7F 
17214     7F 80 81 82 
17218     81 81 80 80 | 	byte	$80, $80, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $80, $81, $82, $81, $81, $80, $80
1721c     7F 7F 80 7F 
17220     7F 7F 80 80 
17224     80 81 81 81 
17228     80 80 80 80 | 	byte	$7f, $7f, $80, $7f, $7f, $7f, $80, $80, $80, $81, $81, $81, $80, $80, $80, $80
1722c     80 7F 7F 80 
17230     7F 7F 7F 7F 
17234     7F 80 81 82 
17238     82 81 80 80 | 	byte	$80, $7f, $7f, $80, $7f, $7f, $7f, $7f, $7f, $80, $81, $82, $82, $81, $80, $80
1723c     7F 7F 7F 7F 
17240     80 80 80 80 
17244     80 80 80 81 
17248     80 80 80 80 | 	byte	$7f, $7f, $7f, $7f, $80, $80, $80, $80, $80, $80, $80, $81, $80, $80, $80, $80
1724c     80 7F 7F 7F 
17250     7F 7F 80 7F 
17254     80 81 82 81 
17258     81 81 80 80 | 	byte	$80, $7f, $7f, $7f, $7f, $7f, $80, $7f, $80, $81, $82, $81, $81, $81, $80, $80
1725c     80 80 80 80 
17260     80          | 	byte	$80[5]
17261     81 80 7F 80 
17265     80 80 80 80 
17269     80 80 80 7D 
1726d     78 7B 7D 7A | 	byte	$81, $80, $7f, $80, $80, $80, $80, $80, $80, $80, $80, $7d, $78, $7b, $7d, $7a
17271     76 7B 7B 78 
17275     7D 7A 78 7C 
17279     7F 7B 7A 83 
1727d     7C 82 7B 7D | 	byte	$76, $7b, $7b, $78, $7d, $7a, $78, $7c, $7f, $7b, $7a, $83, $7c, $82, $7b, $7d
17281     7F 83 7F 79 
17285     82 81 86 80 
17289     81 80 89 80 
1728d     7A 7E 84 7E | 	byte	$7f, $83, $7f, $79, $82, $81, $86, $80, $81, $80, $89, $80, $7a, $7e, $84, $7e
17291     7A 7D 7A 84 
17295     83 7B 84 86 
17299     89 7C 7E 83 
1729d     83 83 76 78 | 	byte	$7a, $7d, $7a, $84, $83, $7b, $84, $86, $89, $7c, $7e, $83, $83, $83, $76, $78
172a1     82 7D 76 78 
172a5     7B 7E 7E 79 
172a9     79 83 7C 78 
172ad     77 76 7B 78 | 	byte	$82, $7d, $76, $78, $7b, $7e, $7e, $79, $79, $83, $7c, $78, $77, $76, $7b, $78
172b1     71 6D 7F 77 
172b5     7A 74 7B 7D 
172b9     82 7A 6F 70 
172bd     7E 6F 65 6F | 	byte	$71, $6d, $7f, $77, $7a, $74, $7b, $7d, $82, $7a, $6f, $70, $7e, $6f, $65, $6f
172c1     6A 7B 73 74 
172c5     72 85 7A 6C 
172c9     7A 74 8D 7E 
172cd     7E 7F 7F 8A | 	byte	$6a, $7b, $73, $74, $72, $85, $7a, $6c, $7a, $74, $8d, $7e, $7e, $7f, $7f, $8a
172d1     76 6B 6C 7F 
172d5     68 75 80 85 
172d9     8C 8A 7E 89 
172dd     84 72 7B 7F | 	byte	$76, $6b, $6c, $7f, $68, $75, $80, $85, $8c, $8a, $7e, $89, $84, $72, $7b, $7f
172e1     73 8C 79 7D 
172e5     85 92 83 84 
172e9     86 84 8D 81 
172ed     83 7D 8F 7E | 	byte	$73, $8c, $79, $7d, $85, $92, $83, $84, $86, $84, $8d, $81, $83, $7d, $8f, $7e
172f1     7F 79 8A 76 
172f5     7F 76 78 90 
172f9     86 75 90 89 
172fd     85 7C 7D 6B | 	byte	$7f, $79, $8a, $76, $7f, $76, $78, $90, $86, $75, $90, $89, $85, $7c, $7d, $6b
17301     85 82 62 8A 
17305     76 8D 79 89 
17309     7F 8E 88 87 
1730d     7C 83 6A 7A | 	byte	$85, $82, $62, $8a, $76, $8d, $79, $89, $7f, $8e, $88, $87, $7c, $83, $6a, $7a
17311     79 77 76 7F 
17315     79 74 86 76 
17319     85 8A 82 68 
1731d     83 7A 71 6F | 	byte	$79, $77, $76, $7f, $79, $74, $86, $76, $85, $8a, $82, $68, $83, $7a, $71, $6f
17321     78 78 8A 78 
17325     71 84 8D 82 
17329     7B 8F 7B 7F 
1732d     78 73 72 7B | 	byte	$78, $78, $8a, $78, $71, $84, $8d, $82, $7b, $8f, $7b, $7f, $78, $73, $72, $7b
17331     82 5D 75 7F 
17335     79 84 8C 81 
17339     7F 90 81 7E 
1733d     6C 7B 70 7B | 	byte	$82, $5d, $75, $7f, $79, $84, $8c, $81, $7f, $90, $81, $7e, $6c, $7b, $70, $7b
17341     72 71 7B 79 
17345     7C 7D 87 8E 
17349     86 8C 74 79 
1734d     89 6F 69 6B | 	byte	$72, $71, $7b, $79, $7c, $7d, $87, $8e, $86, $8c, $74, $79, $89, $6f, $69, $6b
17351     7B 6F 76 6C 
17355     7B 92 8E 7B 
17359     7F 96 96 6F 
1735d     6D 7A 7D 6B | 	byte	$7b, $6f, $76, $6c, $7b, $92, $8e, $7b, $7f, $96, $96, $6f, $6d, $7a, $7d, $6b
17361     68 69 89 8C 
17365     65 92 96 8D 
17369     92 83 6E 93 
1736d     84 5F 71 76 | 	byte	$68, $69, $89, $8c, $65, $92, $96, $8d, $92, $83, $6e, $93, $84, $5f, $71, $76
17371     7A 6E 76 77 
17375     7F AC 92 86 
17379     9C 9A 8D 7D 
1737d     7C 66 8B 80 | 	byte	$7a, $6e, $76, $77, $7f, $ac, $92, $86, $9c, $9a, $8d, $7d, $7c, $66, $8b, $80
17381     58 70 8A 77 
17385     93 89 87 AA 
17389     A6 8A 75 8E 
1738d     82 72 6A 57 | 	byte	$58, $70, $8a, $77, $93, $89, $87, $aa, $a6, $8a, $75, $8e, $82, $72, $6a, $57
17391     69 75 80 61 
17395     93 AA 98 96 
17399     96 80 9B 8C 
1739d     4A 63 78 65 | 	byte	$69, $75, $80, $61, $93, $aa, $98, $96, $96, $80, $9b, $8c, $4a, $63, $78, $65
173a1     5D 63 5B 90 
173a5     97 8A 7F B1 
173a9     9D 92 6A 77 
173ad     66 73 62 42 | 	byte	$5d, $63, $5b, $90, $97, $8a, $7f, $b1, $9d, $92, $6a, $77, $66, $73, $62, $42
173b1     5F 6C 70 76 
173b5     8F 7A B3 B2 
173b9     82 80 87 6E 
173bd     6A 56 42 59 | 	byte	$5f, $6c, $70, $76, $8f, $7a, $b3, $b2, $82, $80, $87, $6e, $6a, $56, $42, $59
173c1     60 4C 5D 7B 
173c5     A3 A2 9F A6 
173c9     98 9D 76 66 
173cd     4F 5F 40 4A | 	byte	$60, $4c, $5d, $7b, $a3, $a2, $9f, $a6, $98, $9d, $76, $66, $4f, $5f, $40, $4a
173d1     48 45 6F 9E 
173d5     9D 86 BD AC 
173d9     A6 88 5A 6E 
173dd     65 59 2C 49 | 	byte	$48, $45, $6f, $9e, $9d, $86, $bd, $ac, $a6, $88, $5a, $6e, $65, $59, $2c, $49
173e1     49 5B 65 85 
173e5     A3 A9 D2 A0 
173e9     A4 A0 76 5E 
173ed     52 44 3B 51 | 	byte	$49, $5b, $65, $85, $a3, $a9, $d2, $a0, $a4, $a0, $76, $5e, $52, $44, $3b, $51
173f1     44 4A 8B 8A 
173f5     B1 B3 B6 AC 
173f9     B1 90 68 65 
173fd     57 50 48 3D | 	byte	$44, $4a, $8b, $8a, $b1, $b3, $b6, $ac, $b1, $90, $68, $65, $57, $50, $48, $3d
17401     4C 5F 82 96 
17405     9B BD B9 B6 
17409     A3 8A 62 7D 
1740d     50 43 45 4F | 	byte	$4c, $5f, $82, $96, $9b, $bd, $b9, $b6, $a3, $8a, $62, $7d, $50, $43, $45, $4f
17411     4B 59 83 7B 
17415     CB A8 B5 A9 
17419     B2 80 5B 56 
1741d     49 40 44 3A | 	byte	$4b, $59, $83, $7b, $cb, $a8, $b5, $a9, $b2, $80, $5b, $56, $49, $40, $44, $3a
17421     3D 6D 93 7B 
17425     B6 BE A5 C0 
17429     92 70 72 6B 
1742d     30 4B 40 3F | 	byte	$3d, $6d, $93, $7b, $b6, $be, $a5, $c0, $92, $70, $72, $6b, $30, $4b, $40, $3f
17431     49 6F 6D 93 
17435     C1 A2 9E 9A 
17439     AC 70 69 51 
1743d     32 62 42 20 | 	byte	$49, $6f, $6d, $93, $c1, $a2, $9e, $9a, $ac, $70, $69, $51, $32, $62, $42, $20
17441     47 79 86 9A 
17445     B6 AB DA C4 
17449     8C 78 62 60 
1744d     38 42 30 3E | 	byte	$47, $79, $86, $9a, $b6, $ab, $da, $c4, $8c, $78, $62, $60, $38, $42, $30, $3e
17451     66 73 73 A3 
17455     D2 B1 B7 A2 
17459     8E 86 64 40 
1745d     4B 5C 48 43 | 	byte	$66, $73, $73, $a3, $d2, $b1, $b7, $a2, $8e, $86, $64, $40, $4b, $5c, $48, $43
17461     55 6F A5 BD 
17465     B2 B5 D9 B4 
17469     92 72 60 51 
1746d     52 40 27 5A | 	byte	$55, $6f, $a5, $bd, $b2, $b5, $d9, $b4, $92, $72, $60, $51, $52, $40, $27, $5a
17471     64 6E 97 B0 
17475     C9 CA C8 98 
17479     93 86 54 52 
1747d     40 4B 28 53 | 	byte	$64, $6e, $97, $b0, $c9, $ca, $c8, $98, $93, $86, $54, $52, $40, $4b, $28, $53
17481     54 7B A7 B6 
17485     BE CF CC 9E 
17489     95 7C 50 4B 
1748d     54 32 36 45 | 	byte	$54, $7b, $a7, $b6, $be, $cf, $cc, $9e, $95, $7c, $50, $4b, $54, $32, $36, $45
17491     67 87 AB AE 
17495     BF DA BC 9E 
17499     92 76 5A 52 
1749d     3C 30 45 54 | 	byte	$67, $87, $ab, $ae, $bf, $da, $bc, $9e, $92, $76, $5a, $52, $3c, $30, $45, $54
174a1     5F 87 B5 BF 
174a5     D0 D4 B1 AA 
174a9     9C 60 53 58 
174ad     45 30 37 4D | 	byte	$5f, $87, $b5, $bf, $d0, $d4, $b1, $aa, $9c, $60, $53, $58, $45, $30, $37, $4d
174b1     5F 9B A5 B5 
174b5     DC D1 C0 9D 
174b9     98 62 5E 4A 
174bd     30 40 3B 4E | 	byte	$5f, $9b, $a5, $b5, $dc, $d1, $c0, $9d, $98, $62, $5e, $4a, $30, $40, $3b, $4e
174c1     67 A3 9D BD 
174c5     DD CD BC 9E 
174c9     8C 5D 67 38 
174cd     3B 40 3F 4A | 	byte	$67, $a3, $9d, $bd, $dd, $cd, $bc, $9e, $8c, $5d, $67, $38, $3b, $40, $3f, $4a
174d1     6F A6 AF C9 
174d5     CA D0 BC 9A 
174d9     7A 64 66 48 
174dd     37 3E 39 57 | 	byte	$6f, $a6, $af, $c9, $ca, $d0, $bc, $9a, $7a, $64, $66, $48, $37, $3e, $39, $57
174e1     78 A3 AF D7 
174e5     D5 CB C8 A4 
174e9     90 6A 68 3E 
174ed     42 40 47 53 | 	byte	$78, $a3, $af, $d7, $d5, $cb, $c8, $a4, $90, $6a, $68, $3e, $42, $40, $47, $53
174f1     7F A1 BA D4 
174f5     D7 D5 B9 B4 
174f9     7E 7C 5A 48 
174fd     41 3A 3B 5B | 	byte	$7f, $a1, $ba, $d4, $d7, $d5, $b9, $b4, $7e, $7c, $5a, $48, $41, $3a, $3b, $5b
17501     7F AB BB E5 
17505     DF D7 D0 96 
17509     8D 6D 6A 38 
1750d     43 36 3F 59 | 	byte	$7f, $ab, $bb, $e5, $df, $d7, $d0, $96, $8d, $6d, $6a, $38, $43, $36, $3f, $59
17511     7F A2 C6 E0 
17515     D0 D4 C4 99 
17519     88 6A 51 45 
1751d     2D 2D 2F 67 | 	byte	$7f, $a2, $c6, $e0, $d0, $d4, $c4, $99, $88, $6a, $51, $45, $2d, $2d, $2f, $67
17521     7A A6 BF D7 
17525     E0 DB B6 9D 
17529     88 76 54 36 
1752d     2F 1D 47 56 | 	byte	$7a, $a6, $bf, $d7, $e0, $db, $b6, $9d, $88, $76, $54, $36, $2f, $1d, $47, $56
17531     77 A7 C6 E0 
17535     D9 D8 BC AA 
17539     82 62 50 38 
1753d     2B 1F 3F 5B | 	byte	$77, $a7, $c6, $e0, $d9, $d8, $bc, $aa, $82, $62, $50, $38, $2b, $1f, $3f, $5b
17541     7F AB CD DA 
17545     E0 D0 BC 95 
17549     88 65 52 3C 
1754d     28 23 43 62 | 	byte	$7f, $ab, $cd, $da, $e0, $d0, $bc, $95, $88, $65, $52, $3c, $28, $23, $43, $62
17551     7B AF BF E7 
17555     E0 CC B0 96 
17559     84 60 44 32 
1755d     21 29 3F 56 | 	byte	$7b, $af, $bf, $e7, $e0, $cc, $b0, $96, $84, $60, $44, $32, $21, $29, $3f, $56
17561     8B B2 C6 D7 
17565     DA C8 A7 95 
17569     78 60 53 26 
1756d     27 2A 42 6B | 	byte	$8b, $b2, $c6, $d7, $da, $c8, $a7, $95, $78, $60, $53, $26, $27, $2a, $42, $6b
17571     8E B3 C9 E6 
17575     D5 C1 AC 8C 
17579     78 5D 46 27 
1757d     22 32 43 63 | 	byte	$8e, $b3, $c9, $e6, $d5, $c1, $ac, $8c, $78, $5d, $46, $27, $22, $32, $43, $63
17581     9B B5 CF DD 
17585     D3 BE AE 88 
17589     6E 5C 44 26 
1758d     25 32 4D 77 | 	byte	$9b, $b5, $cf, $dd, $d3, $be, $ae, $88, $6e, $5c, $44, $26, $25, $32, $4d, $77
17591     93 BA C9 DF 
17595     CC B6 9E 8A 
17599     68 54 38 1E 
1759d     2A 2E 46 73 | 	byte	$93, $ba, $c9, $df, $cc, $b6, $9e, $8a, $68, $54, $38, $1e, $2a, $2e, $46, $73
175a1     99 B5 D4 D9 
175a5     C1 B8 A1 7A 
175a9     6B 4D 39 26 
175ad     23 36 45 77 | 	byte	$99, $b5, $d4, $d9, $c1, $b8, $a1, $7a, $6b, $4d, $39, $26, $23, $36, $45, $77
175b1     9F B8 CF D7 
175b5     C0 B6 92 76 
175b9     64 50 2E 1E 
175bd     24 33 57 7F | 	byte	$9f, $b8, $cf, $d7, $c0, $b6, $92, $76, $64, $50, $2e, $1e, $24, $33, $57, $7f
175c1     9B BF D9 D0 
175c5     C0 A8 9A 76 
175c9     64 42 2E 22 
175cd     2B 34 5A 85 | 	byte	$9b, $bf, $d9, $d0, $c0, $a8, $9a, $76, $64, $42, $2e, $22, $2b, $34, $5a, $85
175d1     9F BF D3 DA 
175d5     BB AC 90 80 
175d9     64 42 29 2D 
175dd     28 3F 5F 8F | 	byte	$9f, $bf, $d3, $da, $bb, $ac, $90, $80, $64, $42, $29, $2d, $28, $3f, $5f, $8f
175e1     A7 C5 D6 CD 
175e5     C6 A0 89 7A 
175e9     60 3C 2B 23 
175ed     33 42 65 8B | 	byte	$a7, $c5, $d6, $cd, $c6, $a0, $89, $7a, $60, $3c, $2b, $23, $33, $42, $65, $8b
175f1     B7 CD D4 CF 
175f5     C2 A6 80 74 
175f9     5A 40 2B 20 
175fd     2D 4D 6B 8F | 	byte	$b7, $cd, $d4, $cf, $c2, $a6, $80, $74, $5a, $40, $2b, $20, $2d, $4d, $6b, $8f
17601     B3 CF D5 D2 
17605     BA 9C 88 70 
17609     58 3B 24 21 
1760d     39 4D 6C 97 | 	byte	$b3, $cf, $d5, $d2, $ba, $9c, $88, $70, $58, $3b, $24, $21, $39, $4d, $6c, $97
17611     BF D6 D2 CA 
17615     B5 9C 88 6A 
17619     52 40 2E 22 
1761d     37 53 74 9B | 	byte	$bf, $d6, $d2, $ca, $b5, $9c, $88, $6a, $52, $40, $2e, $22, $37, $53, $74, $9b
17621     BE D3 CE D5 
17625     B0 9B 7C 66 
17629     50 38 24 1A 
1762d     44 59 72 9F | 	byte	$be, $d3, $ce, $d5, $b0, $9b, $7c, $66, $50, $38, $24, $1a, $44, $59, $72, $9f
17631     C4 D5 D8 C5 
17635     A6 9C 7A 60 
17639     4A 36 24 23 
1763d     3F 57 7F A7 | 	byte	$c4, $d5, $d8, $c5, $a6, $9c, $7a, $60, $4a, $36, $24, $23, $3f, $57, $7f, $a7
17641     BF D4 D9 BC 
17645     AA 98 7C 60 
17649     4E 35 20 31 
1764d     3B 5F 8B AA | 	byte	$bf, $d4, $d9, $bc, $aa, $98, $7c, $60, $4e, $35, $20, $31, $3b, $5f, $8b, $aa
17651     BE DB D6 C1 
17655     A2 97 70 60 
17659     48 2E 28 2F 
1765d     49 5F 92 B7 | 	byte	$be, $db, $d6, $c1, $a2, $97, $70, $60, $48, $2e, $28, $2f, $49, $5f, $92, $b7
17661     C6 D9 D2 BA 
17665     AC 8A 74 60 
17669     4E 28 2A 33 
1766d     4D 69 97 AF | 	byte	$c6, $d9, $d2, $ba, $ac, $8a, $74, $60, $4e, $28, $2a, $33, $4d, $69, $97, $af
17671     CD E6 C4 BA 
17675     A2 90 6A 59 
17679     42 2C 2B 39 
1767d     47 77 97 B3 | 	byte	$cd, $e6, $c4, $ba, $a2, $90, $6a, $59, $42, $2c, $2b, $39, $47, $77, $97, $b3
17681     CF DA C8 B2 
17685     A0 82 6A 58 
17689     3C 26 32 33 
1768d     4F 77 9E B7 | 	byte	$cf, $da, $c8, $b2, $a0, $82, $6a, $58, $3c, $26, $32, $33, $4f, $77, $9e, $b7
17691     D1 D4 C4 B8 
17695     96 7C 6A 58 
17699     30 2A 2B 3E 
1769d     55 79 9B BF | 	byte	$d1, $d4, $c4, $b8, $96, $7c, $6a, $58, $30, $2a, $2b, $3e, $55, $79, $9b, $bf
176a1     D5 CB BF B8 
176a5     94 74 6A 50 
176a9     39 28 2A 35 
176ad     67 7F 9A BF | 	byte	$d5, $cb, $bf, $b8, $94, $74, $6a, $50, $39, $28, $2a, $35, $67, $7f, $9a, $bf
176b1     D5 CE BE AC 
176b5     90 7C 68 44 
176b9     38 31 2B 39 
176bd     63 86 9F C3 | 	byte	$d5, $ce, $be, $ac, $90, $7c, $68, $44, $38, $31, $2b, $39, $63, $86, $9f, $c3
176c1     CE CD C0 A9 
176c5     84 7F 6C 40 
176c9     35 30 2B 3F 
176cd     63 7F AB C5 | 	byte	$ce, $cd, $c0, $a9, $84, $7f, $6c, $40, $35, $30, $2b, $3f, $63, $7f, $ab, $c5
176d1     C9 CB C8 A2 
176d5     82 7C 64 40 
176d9     37 23 2D 4A 
176dd     66 7F AF C7 | 	byte	$c9, $cb, $c8, $a2, $82, $7c, $64, $40, $37, $23, $2d, $4a, $66, $7f, $af, $c7
176e1     CA CA BD A0 
176e5     89 78 56 4A 
176e9     35 23 32 53 
176ed     6A 87 B3 C3 | 	byte	$ca, $ca, $bd, $a0, $89, $78, $56, $4a, $35, $23, $32, $53, $6a, $87, $b3, $c3
176f1     CD D1 B1 96 
176f5     90 75 53 42 
176f9     34 25 33 4A 
176fd     6A 97 B9 BA | 	byte	$cd, $d1, $b1, $96, $90, $75, $53, $42, $34, $25, $33, $4a, $6a, $97, $b9, $ba
17701     CD CE B4 95 
17705     88 6C 56 45 
17709     22 24 3F 51 
1770d     63 97 B7 C4 | 	byte	$cd, $ce, $b4, $95, $88, $6c, $56, $45, $22, $24, $3f, $51, $63, $97, $b7, $c4
17711     CE C8 A6 9E 
17715     84 61 52 42 
17719     22 25 3F 4F 
1771d     6E 9E B5 C6 | 	byte	$ce, $c8, $a6, $9e, $84, $61, $52, $42, $22, $25, $3f, $4f, $6e, $9e, $b5, $c6
17721     D5 BF A5 A0 
17725     7E 60 57 39 
17729     2A 28 3C 57 
1772d     7A A5 AC CA | 	byte	$d5, $bf, $a5, $a0, $7e, $60, $57, $39, $2a, $28, $3c, $57, $7a, $a5, $ac, $ca
17731     DA BA A5 96 
17735     7C 69 50 34 
17739     26 35 3D 52 
1773d     87 A3 B4 D2 | 	byte	$da, $ba, $a5, $96, $7c, $69, $50, $34, $26, $35, $3d, $52, $87, $a3, $b4, $d2
17741     CE BC AA 95 
17745     76 64 56 30 
17749     27 2F 3D 5F 
1774d     8B 9F BF D2 | 	byte	$ce, $bc, $aa, $95, $76, $64, $56, $30, $27, $2f, $3d, $5f, $8b, $9f, $bf, $d2
17751     CE B8 AA 95 
17755     70 68 46 32 
17759     2D 2E 3F 67 
1775d     8B A1 BF D8 | 	byte	$ce, $b8, $aa, $95, $70, $68, $46, $32, $2d, $2e, $3f, $67, $8b, $a1, $bf, $d8
17761     CC B4 A4 89 
17765     76 5E 42 2E 
17769     34 2E 3E 6E 
1776d     9A A8 BF D0 | 	byte	$cc, $b4, $a4, $89, $76, $5e, $42, $2e, $34, $2e, $3e, $6e, $9a, $a8, $bf, $d0
17771     C9 C0 94 84 
17775     70 68 38 2A 
17779     2A 37 44 6F 
1777d     8F B5 C6 CE | 	byte	$c9, $c0, $94, $84, $70, $68, $38, $2a, $2a, $37, $44, $6f, $8f, $b5, $c6, $ce
17781     CA B5 9A 7C 
17785     7A 52 40 28 
17789     2D 31 55 6B 
1778d     93 B7 C9 D0 | 	byte	$ca, $b5, $9a, $7c, $7a, $52, $40, $28, $2d, $31, $55, $6b, $93, $b7, $c9, $d0
17791     C2 B8 94 84 
17795     6B 54 3E 2F 
17799     22 3D 53 7D 
1779d     95 BA CA D1 | 	byte	$c2, $b8, $94, $84, $6b, $54, $3e, $2f, $22, $3d, $53, $7d, $95, $ba, $ca, $d1
177a1     CC A6 93 7F 
177a5     72 50 3D 28 
177a9     32 3E 57 75 
177ad     9D C3 C5 D2 | 	byte	$cc, $a6, $93, $7f, $72, $50, $3d, $28, $32, $3e, $57, $75, $9d, $c3, $c5, $d2
177b1     C5 B0 92 7C 
177b5     69 4E 41 25 
177b9     2A 4D 53 7F 
177bd     A3 C1 CB CB | 	byte	$c5, $b0, $92, $7c, $69, $4e, $41, $25, $2a, $4d, $53, $7f, $a3, $c1, $cb, $cb
177c1     C6 A2 90 75 
177c5     62 56 3A 1C 
177c9     36 45 62 7F 
177cd     AB BF D3 D0 | 	byte	$c6, $a2, $90, $75, $62, $56, $3a, $1c, $36, $45, $62, $7f, $ab, $bf, $d3, $d0
177d1     B6 A2 92 78 
177d5     5C 50 35 2C 
177d9     33 47 5B 95 
177dd     AC BD CE D0 | 	byte	$b6, $a2, $92, $78, $5c, $50, $35, $2c, $33, $47, $5b, $95, $ac, $bd, $ce, $d0
177e1     B4 A0 8A 6E 
177e5     68 48 32 22 
177e9     41 42 6B 93 
177ed     AE C3 D2 CA | 	byte	$b4, $a0, $8a, $6e, $68, $48, $32, $22, $41, $42, $6b, $93, $ae, $c3, $d2, $ca
177f1     B4 A0 82 6A 
177f5     63 48 2A 2B 
177f9     39 56 6F 97 
177fd     A7 D3 D0 C0 | 	byte	$b4, $a0, $82, $6a, $63, $48, $2a, $2b, $39, $56, $6f, $97, $a7, $d3, $d0, $c0
17801     AC A1 7C 6A 
17805     5E 3C 38 29 
17809     37 49 7F 95 
1780d     A9 CE D4 C0 | 	byte	$ac, $a1, $7c, $6a, $5e, $3c, $38, $29, $37, $49, $7f, $95, $a9, $ce, $d4, $c0
17811     AE 98 79 70 
17815     5C 3A 2A 36 
17819     36 4F 7B 9E 
1781d     B6 CB CA BB | 	byte	$ae, $98, $79, $70, $5c, $3a, $2a, $36, $36, $4f, $7b, $9e, $b6, $cb, $ca, $bb
17821     B8 88 72 6E 
17825     58 38 2D 2F 
17829     3B 5E 79 9F 
1782d     BB D6 C0 C6 | 	byte	$b8, $88, $72, $6e, $58, $38, $2d, $2f, $3b, $5e, $79, $9f, $bb, $d6, $c0, $c6
17831     AC 90 74 6D 
17835     55 3A 2D 26 
17839     45 65 86 93 
1783d     C7 D2 CE BB | 	byte	$ac, $90, $74, $6d, $55, $3a, $2d, $26, $45, $65, $86, $93, $c7, $d2, $ce, $bb
17841     A8 8E 80 68 
17845     48 3E 35 29 
17849     3F 69 87 A7 
1784d     C3 D1 CB C4 | 	byte	$a8, $8e, $80, $68, $48, $3e, $35, $29, $3f, $69, $87, $a7, $c3, $d1, $cb, $c4
17851     A0 8C 7C 66 
17855     42 3E 2C 27 
17859     4F 67 85 AF 
1785d     C8 CA D1 C0 | 	byte	$a0, $8c, $7c, $66, $42, $3e, $2c, $27, $4f, $67, $85, $af, $c8, $ca, $d1, $c0
17861     A0 80 7C 60 
17865     4B 36 1E 36 
17869     52 6B 7F B3 
1786d     CC CF C8 B6 | 	byte	$a0, $80, $7c, $60, $4b, $36, $1e, $36, $52, $6b, $7f, $b3, $cc, $cf, $c8, $b6
17871     98 90 6C 51 
17875     46 3A 26 26 
17879     54 6A 93 AE 
1787d     C3 CC D6 AA | 	byte	$98, $90, $6c, $51, $46, $3a, $26, $26, $54, $6a, $93, $ae, $c3, $cc, $d6, $aa
17881     92 8E 71 55 
17885     41 38 1D 3B 
17889     4F 6D 9A B5 
1788d     BE D9 D0 AE | 	byte	$92, $8e, $71, $55, $41, $38, $1d, $3b, $4f, $6d, $9a, $b5, $be, $d9, $d0, $ae
17891     8A 8B 6C 53 
17895     44 28 27 3F 
17899     50 73 A7 B6 
1789d     C7 CD D5 A2 | 	byte	$8a, $8b, $6c, $53, $44, $28, $27, $3f, $50, $73, $a7, $b6, $c7, $cd, $d5, $a2
178a1     A3 7C 68 5A 
178a5     44 26 1F 4A 
178a9     4F 7D A2 BB 
178ad     C6 E4 BC A9 | 	byte	$a3, $7c, $68, $5a, $44, $26, $1f, $4a, $4f, $7d, $a2, $bb, $c6, $e4, $bc, $a9
178b1     99 84 64 56 
178b5     3A 23 32 3F 
178b9     54 7D AD AF 
178bd     DA D0 C8 A5 | 	byte	$99, $84, $64, $56, $3a, $23, $32, $3f, $54, $7d, $ad, $af, $da, $d0, $c8, $a5
178c1     A0 72 64 58 
178c5     38 20 32 3F 
178c9     57 93 A3 BA 
178cd     D7 DE B6 AD | 	byte	$a0, $72, $64, $58, $38, $20, $32, $3f, $57, $93, $a3, $ba, $d7, $de, $b6, $ad
178d1     8C 74 62 5A 
178d5     24 23 3B 3F 
178d9     5F 87 AE BB 
178dd     E6 C4 B8 B1 | 	byte	$8c, $74, $62, $5a, $24, $23, $3b, $3f, $5f, $87, $ae, $bb, $e6, $c4, $b8, $b1
178e1     94 66 63 50 
178e5     2A 2B 30 3C 
178e9     6B 9F 9A C9 
178ed     D7 CE BA A8 | 	byte	$94, $66, $63, $50, $2a, $2b, $30, $3c, $6b, $9f, $9a, $c9, $d7, $ce, $ba, $a8
178f1     84 69 68 46 
178f5     26 29 33 43 
178f9     75 8A A7 CE 
178fd     E2 C0 BA AA | 	byte	$84, $69, $68, $46, $26, $29, $33, $43, $75, $8a, $a7, $ce, $e2, $c0, $ba, $aa
17901     7E 71 5A 3A 
17905     2C 32 26 4A 
17909     7A 94 A3 D3 
1790d     D6 BD C2 9C | 	byte	$7e, $71, $5a, $3a, $2c, $32, $26, $4a, $7a, $94, $a3, $d3, $d6, $bd, $c2, $9c
17911     75 75 5A 38 
17915     31 2A 2B 4F 
17919     7F 8A B3 D6 
1791d     CA C4 BE 90 | 	byte	$75, $75, $5a, $38, $31, $2a, $2b, $4f, $7f, $8a, $b3, $d6, $ca, $c4, $be, $90
17921     7B 7C 4C 38 
17925     2A 30 27 5E 
17929     77 94 BF CE 
1792d     CD C7 B8 8E | 	byte	$7b, $7c, $4c, $38, $2a, $30, $27, $5e, $77, $94, $bf, $ce, $cd, $c7, $b8, $8e
17931     7E 72 49 36 
17935     36 1A 3B 63 
17939     7B 9A BF CC 
1793d     CD CD AC 8A | 	byte	$7e, $72, $49, $36, $36, $1a, $3b, $63, $7b, $9a, $bf, $cc, $cd, $cd, $ac, $8a
17941     83 6A 45 40 
17945     2A 25 3D 66 
17949     77 9D C7 C6 
1794d     D4 C6 A8 8A | 	byte	$83, $6a, $45, $40, $2a, $25, $3d, $66, $77, $9d, $c7, $c6, $d4, $c6, $a8, $8a
17951     84 66 42 40 
17955     2C 21 47 61 
17959     7D AF C3 C6 
1795d     D6 CA A1 86 | 	byte	$84, $66, $42, $40, $2c, $21, $47, $61, $7d, $af, $c3, $c6, $d6, $ca, $a1, $86
17961     80 60 44 40 
17965     1C 2B 4D 65 
17969     7F AF C1 C9 
1796d     D5 C0 99 8D | 	byte	$80, $60, $44, $40, $1c, $2b, $4d, $65, $7f, $af, $c1, $c9, $d5, $c0, $99, $8d
17971     84 56 51 36 
17975     1B 2F 4F 5B 
17979     8B B2 BF CF 
1797d     D2 BA 96 9B | 	byte	$84, $56, $51, $36, $1b, $2f, $4f, $5b, $8b, $b2, $bf, $cf, $d2, $ba, $96, $9b
17981     6E 53 4B 34 
17985     17 2F 4A 67 
17989     93 B3 B3 DA 
1798d     DC A8 99 92 | 	byte	$6e, $53, $4b, $34, $17, $2f, $4a, $67, $93, $b3, $b3, $da, $dc, $a8, $99, $92
17991     70 59 44 29 
17995     1D 39 49 63 
17999     9F AB BB D5 
1799d     D2 A4 9F 84 | 	byte	$70, $59, $44, $29, $1d, $39, $49, $63, $9f, $ab, $bb, $d5, $d2, $a4, $9f, $84
179a1     6C 5C 48 1D 
179a5     25 3E 3F 73 
179a9     9F B0 C2 DB 
179ad     C7 AC A2 7A | 	byte	$6c, $5c, $48, $1d, $25, $3e, $3f, $73, $9f, $b0, $c2, $db, $c7, $ac, $a2, $7a
179b1     66 62 40 17 
179b5     2A 3E 46 7A 
179b9     9F AF CF D8 
179bd     BC B2 A4 7A | 	byte	$66, $62, $40, $17, $2a, $3e, $46, $7a, $9f, $af, $cf, $d8, $bc, $b2, $a4, $7a
179c1     65 62 3A 1F 
179c5     32 36 55 7F 
179c9     A2 AD D7 D8 
179cd     BC B4 9C 72 | 	byte	$65, $62, $3a, $1f, $32, $36, $55, $7f, $a2, $ad, $d7, $d8, $bc, $b4, $9c, $72
179d1     6D 60 2C 26 
179d5     30 36 57 8E 
179d9     9B B3 DB CC 
179dd     BC B4 90 6B | 	byte	$6d, $60, $2c, $26, $30, $36, $57, $8e, $9b, $b3, $db, $cc, $bc, $b4, $90, $6b
179e1     72 54 28 2B 
179e5     31 39 5F 8A 
179e9     9E BF DD C2 
179ed     BE B2 90 6B | 	byte	$72, $54, $28, $2b, $31, $39, $5f, $8a, $9e, $bf, $dd, $c2, $be, $b2, $90, $6b
179f1     6E 50 30 2A 
179f5     2A 3D 67 8E 
179f9     95 CF D2 C6 
179fd     BA B0 81 79 | 	byte	$6e, $50, $30, $2a, $2a, $3d, $67, $8e, $95, $cf, $d2, $c6, $ba, $b0, $81, $79
17a01     6A 40 30 2D 
17a05     26 3F 73 87 
17a09     A3 CA D2 C4 
17a0d     C1 A0 82 76 | 	byte	$6a, $40, $30, $2d, $26, $3f, $73, $87, $a3, $ca, $d2, $c4, $c1, $a0, $82, $76
17a11     68 36 32 30 
17a15     22 49 77 85 
17a19     AF CE CD C3 
17a1d     C4 9C 7A 7C | 	byte	$68, $36, $32, $30, $22, $49, $77, $85, $af, $ce, $cd, $c3, $c4, $9c, $7a, $7c
17a21     5B 3A 32 28 
17a25     26 5B 6D 8D 
17a29     AB D9 BE CD 
17a2d     BA 94 84 73 | 	byte	$5b, $3a, $32, $28, $26, $5b, $6d, $8d, $ab, $d9, $be, $cd, $ba, $94, $84, $73
17a31     50 3F 34 1B 
17a35     25 5D 76 86 
17a39     C3 C7 D2 C7 
17a3d     B4 8B 91 70 | 	byte	$50, $3f, $34, $1b, $25, $5d, $76, $86, $c3, $c7, $d2, $c7, $b4, $8b, $91, $70
17a41     4A 3E 37 1C 
17a45     2B 63 75 99 
17a49     BD C6 CB DA 
17a4d     A4 8C 86 74 | 	byte	$4a, $3e, $37, $1c, $2b, $63, $75, $99, $bd, $c6, $cb, $da, $a4, $8c, $86, $74
17a51     42 40 2A 1F 
17a55     3F 5B 77 9F 
17a59     C8 BF CF D2 
17a5d     A8 92 84 62 | 	byte	$42, $40, $2a, $1f, $3f, $5b, $77, $9f, $c8, $bf, $cf, $d2, $a8, $92, $84, $62
17a61     56 40 20 1F 
17a65     4C 5D 75 AF 
17a69     BF C4 DA C8 
17a6d     A0 94 80 58 | 	byte	$56, $40, $20, $1f, $4c, $5d, $75, $af, $bf, $c4, $da, $c8, $a0, $94, $80, $58
17a71     4F 3C 1D 27 
17a75     4A 5D 7F B3 
17a79     B7 CE D8 BC 
17a7d     9A 93 7C 54 | 	byte	$4f, $3c, $1d, $27, $4a, $5d, $7f, $b3, $b7, $ce, $d8, $bc, $9a, $93, $7c, $54
17a81     52 30 1D 37 
17a85     3F 5F 8F AE 
17a89     B6 CB D4 B8 
17a8d     9E 88 70 5E | 	byte	$52, $30, $1d, $37, $3f, $5f, $8f, $ae, $b6, $cb, $d4, $b8, $9e, $88, $70, $5e
17a91     4C 20 1F 3C 
17a95     45 5F 96 B2 
17a99     BD D2 CA B2 
17a9d     A8 88 5E 62 | 	byte	$4c, $20, $1f, $3c, $45, $5f, $96, $b2, $bd, $d2, $ca, $b2, $a8, $88, $5e, $62
17aa1     4C 1E 21 39 
17aa5     44 73 97 A5 
17aa9     C2 D6 C2 AA 
17aad     A4 7A 69 5D | 	byte	$4c, $1e, $21, $39, $44, $73, $97, $a5, $c2, $d6, $c2, $aa, $a4, $7a, $69, $5d
17ab1     44 21 2B 3A 
17ab5     43 7B 99 A4 
17ab9     C9 D5 BD B1 
17abd     9B 7D 67 5D | 	byte	$44, $21, $2b, $3a, $43, $7b, $99, $a4, $c9, $d5, $bd, $b1, $9b, $7d, $67, $5d
17ac1     33 2E 32 31 
17ac5     4E 80 9B AE 
17ac9     CA CD BD BA 
17acd     8F 6F 72 5B | 	byte	$33, $2e, $32, $31, $4e, $80, $9b, $ae, $ca, $cd, $bd, $ba, $8f, $6f, $72, $5b
17ad1     35 26 34 30 
17ad5     60 80 94 B2 
17ad9     D4 C4 B7 B7 
17add     91 72 73 51 | 	byte	$35, $26, $34, $30, $60, $80, $94, $b2, $d4, $c4, $b7, $b7, $91, $72, $73, $51
17ae1     35 34 29 3B 
17ae5     60 87 95 BD 
17ae9     D8 C1 BD B7 
17aed     87 7B 6C 49 | 	byte	$35, $34, $29, $3b, $60, $87, $95, $bd, $d8, $c1, $bd, $b7, $87, $7b, $6c, $49
17af1     37 33 25 40 
17af5     6C 8A 9A BE 
17af9     CC C8 C2 A3 
17afd     80 7C 66 43 | 	byte	$37, $33, $25, $40, $6c, $8a, $9a, $be, $cc, $c8, $c2, $a3, $80, $7c, $66, $43
17b01     34 31 2D 40 
17b05     70 83 A2 C8 
17b09     C1 C6 C1 A3 
17b0d     7E 79 61 3F | 	byte	$34, $31, $2d, $40, $70, $83, $a2, $c8, $c1, $c6, $c1, $a3, $7e, $79, $61, $3f
17b11     3B 27 27 50 
17b15     6E 83 AA BE 
17b19     C8 C8 BD 91 
17b1d     85 79 51 42 | 	byte	$3b, $27, $27, $50, $6e, $83, $aa, $be, $c8, $c8, $bd, $91, $85, $79, $51, $42
17b21     38 28 28 57 
17b25     70 8A AE C1 
17b29     C0 D6 A9 95 
17b2d     89 72 4D 3F | 	byte	$38, $28, $28, $57, $70, $8a, $ae, $c1, $c0, $d6, $a9, $95, $89, $72, $4d, $3f
17b31     3A 23 38 4C 
17b35     70 98 BB AE 
17b39     CE CC B7 8B 
17b3d     84 6D 55 42 | 	byte	$3a, $23, $38, $4c, $70, $98, $bb, $ae, $ce, $cc, $b7, $8b, $84, $6d, $55, $42
17b41     30 26 41 5A 
17b45     70 A4 AE C0 
17b49     CD D0 9F 97 
17b4d     81 68 4F 42 | 	byte	$30, $26, $41, $5a, $70, $a4, $ae, $c0, $cd, $d0, $9f, $97, $81, $68, $4f, $42
17b51     26 31 45 54 
17b55     7C 9E BB B8 
17b59     D7 BE AA 95 
17b5d     7D 57 58 3E | 	byte	$26, $31, $45, $54, $7c, $9e, $bb, $b8, $d7, $be, $aa, $95, $7d, $57, $58, $3e
17b61     25 31 41 58 
17b65     80 A9 AD C5 
17b69     D4 BE A7 91 
17b6d     73 67 56 37 | 	byte	$25, $31, $41, $58, $80, $a9, $ad, $c5, $d4, $be, $a7, $91, $73, $67, $56, $37
17b71     23 3D 41 5C 
17b75     8A A6 B5 CB 
17b79     CF B3 AE 91 
17b7d     6D 62 54 2C | 	byte	$23, $3d, $41, $5c, $8a, $a6, $b5, $cb, $cf, $b3, $ae, $91, $6d, $62, $54, $2c
17b81     2C 3C 3D 60 
17b85     95 A8 B5 CF 
17b89     C6 BE A6 8D 
17b8d     65 69 46 2D | 	byte	$2c, $3c, $3d, $60, $95, $a8, $b5, $cf, $c6, $be, $a6, $8d, $65, $69, $46, $2d
17b91     2E 38 47 70 
17b95     9A 9E C6 CF 
17b99     C5 B3 AE 7F 
17b9d     71 5F 42 2E | 	byte	$2e, $38, $47, $70, $9a, $9e, $c6, $cf, $c5, $b3, $ae, $7f, $71, $5f, $42, $2e
17ba1     33 37 41 7E 
17ba5     90 A7 C4 CD 
17ba9     BF C3 9F 79 
17bad     69 65 3B 31 | 	byte	$33, $37, $41, $7e, $90, $a7, $c4, $cd, $bf, $c3, $9f, $79, $69, $65, $3b, $31
17bb1     28 35 54 7B 
17bb5     8B AD D2 C5 
17bb9     C2 B9 9B 77 
17bbd     71 4E 41 2E | 	byte	$28, $35, $54, $7b, $8b, $ad, $d2, $c5, $c2, $b9, $9b, $77, $71, $4e, $41, $2e
17bc1     2B 31 57 7D 
17bc5     91 B8 CC C5 
17bc9     C4 B9 95 80 
17bcd     69 4B 3E 36 | 	byte	$2b, $31, $57, $7d, $91, $b8, $cc, $c5, $c4, $b9, $95, $80, $69, $4b, $3e, $36
17bd1     26 32 60 80 
17bd5     99 BC C4 CA 
17bd9     CF B3 89 7F 
17bdd     6B 4D 35 32 | 	byte	$26, $32, $60, $80, $99, $bc, $c4, $ca, $cf, $b3, $89, $7f, $6b, $4d, $35, $32
17be1     22 42 67 7A 
17be5     9D C8 C5 C5 
17be9     CD A6 97 7D 
17bed     64 41 45 28 | 	byte	$22, $42, $67, $7a, $9d, $c8, $c5, $c5, $cd, $a6, $97, $7d, $64, $41, $45, $28
17bf1     27 48 68 80 
17bf5     A5 C5 C4 CF 
17bf9     C6 AA 93 79 
17bfd     57 4D 43 24 | 	byte	$27, $48, $68, $80, $a5, $c5, $c4, $cf, $c6, $aa, $93, $79, $57, $4d, $43, $24
17c01     20 4E 6C 8A 
17c05     A3 BC C5 DA 
17c09     B7 9C 96 77 
17c0d     56 3F 40 28 | 	byte	$20, $4e, $6c, $8a, $a3, $bc, $c5, $da, $b7, $9c, $96, $77, $56, $3f, $40, $28
17c11     39 4A 69 94 
17c15     AF BA C1 D0 
17c19     BA 9E 8D 6D 
17c1d     55 53 2E 28 | 	byte	$39, $4a, $69, $94, $af, $ba, $c1, $d0, $ba, $9e, $8d, $6d, $55, $53, $2e, $28
17c21     39 52 69 92 
17c25     AC BB CE C8 
17c29     B1 9E 91 62 
17c2d     58 49 2E 2A | 	byte	$39, $52, $69, $92, $ac, $bb, $ce, $c8, $b1, $9e, $91, $62, $58, $49, $2e, $2a
17c31     3E 4E 76 A0 
17c35     A7 BE D2 C8 
17c39     A6 A7 81 64 
17c3d     51 46 2C 34 | 	byte	$3e, $4e, $76, $a0, $a7, $be, $d2, $c8, $a6, $a7, $81, $64, $51, $46, $2c, $34
17c41     3C 50 7F A4 
17c45     A2 C1 D3 C0 
17c49     AB 9B 82 62 
17c4d     62 31 34 36 | 	byte	$3c, $50, $7f, $a4, $a2, $c1, $d3, $c0, $ab, $9b, $82, $62, $62, $31, $34, $36
17c51     45 4E 89 9F 
17c55     A8 C6 C9 BC 
17c59     B3 A0 6C 6A 
17c5d     54 37 2F 3F | 	byte	$45, $4e, $89, $9f, $a8, $c6, $c9, $bc, $b3, $a0, $6c, $6a, $54, $37, $2f, $3f
17c61     38 65 89 9D 
17c65     AF D2 C4 BA 
17c69     B4 8B 75 6A 
17c6d     53 2D 3C 36 | 	byte	$38, $65, $89, $9d, $af, $d2, $c4, $ba, $b4, $8b, $75, $6a, $53, $2d, $3c, $36
17c71     43 67 91 95 
17c75     C1 C7 C1 BE 
17c79     B0 87 70 6C 
17c7d     44 3B 36 37 | 	byte	$43, $67, $91, $95, $c1, $c7, $c1, $be, $b0, $87, $70, $6c, $44, $3b, $36, $37
17c81     42 76 89 A2 
17c85     C4 C3 BE BF 
17c89     A9 80 79 5F 
17c8d     46 37 41 29 | 	byte	$42, $76, $89, $a2, $c4, $c3, $be, $bf, $a9, $80, $79, $5f, $46, $37, $41, $29
17c91     5A 74 89 A2 
17c95     CA C1 BE BD 
17c99     9C 87 75 5F 
17c9d     3B 47 2E 37 | 	byte	$5a, $74, $89, $a2, $ca, $c1, $be, $bd, $9c, $87, $75, $5f, $3b, $47, $2e, $37
17ca1     56 7D 86 AF 
17ca5     C3 B7 C8 BC 
17ca9     96 81 72 50 
17cad     47 3E 32 34 | 	byte	$56, $7d, $86, $af, $c3, $b7, $c8, $bc, $96, $81, $72, $50, $47, $3e, $32, $34
17cb1     65 75 8B B8 
17cb5     C0 BA C1 B8 
17cb9     92 82 6C 4D 
17cbd     49 3B 29 43 | 	byte	$65, $75, $8b, $b8, $c0, $ba, $c1, $b8, $92, $82, $6c, $4d, $49, $3b, $29, $43
17cc1     66 75 8D B7 
17cc5     BB BD C5 A5 
17cc9     90 87 65 47 
17ccd     4E 38 2E 44 | 	byte	$66, $75, $8d, $b7, $bb, $bd, $c5, $a5, $90, $87, $65, $47, $4e, $38, $2e, $44
17cd1     62 80 97 B9 
17cd5     AD C9 C1 A5 
17cd9     8D 89 5D 52 
17cdd     46 30 30 51 | 	byte	$62, $80, $97, $b9, $ad, $c9, $c1, $a5, $8d, $89, $5d, $52, $46, $30, $30, $51
17ce1     63 76 A9 B1 
17ce5     B5 CC BB A1 
17ce9     96 7B 5E 4F 
17ced     4B 28 3D 56 | 	byte	$63, $76, $a9, $b1, $b5, $cc, $bb, $a1, $96, $7b, $5e, $4f, $4b, $28, $3d, $56
17cf1     5D 8A A6 B2 
17cf5     B9 CF B7 A3 
17cf9     96 75 56 5C 
17cfd     40 2D 43 51 | 	byte	$5d, $8a, $a6, $b2, $b9, $cf, $b7, $a3, $96, $75, $56, $5c, $40, $2d, $43, $51
17d01     67 8C A5 AE 
17d05     C9 C8 AE A6 
17d09     93 72 5C 54 
17d0d     37 34 47 4C | 	byte	$67, $8c, $a5, $ae, $c9, $c8, $ae, $a6, $93, $72, $5c, $54, $37, $34, $47, $4c
17d11     6D 97 A1 B2 
17d15     C8 C7 AA AC 
17d19     87 69 5F 52 
17d1d     32 36 4C 45 | 	byte	$6d, $97, $a1, $b2, $c8, $c7, $aa, $ac, $87, $69, $5f, $52, $32, $36, $4c, $45
17d21     78 94 A1 B5 
17d25     CB BB B1 9F 
17d29     87 65 67 3E 
17d2d     30 40 45 52 | 	byte	$78, $94, $a1, $b5, $cb, $bb, $b1, $9f, $87, $65, $67, $3e, $30, $40, $45, $52
17d31     78 94 9E C4 
17d35     C3 B7 AD A6 
17d39     79 6A 60 3D 
17d3d     3C 41 3D 5B | 	byte	$78, $94, $9e, $c4, $c3, $b7, $ad, $a6, $79, $6a, $60, $3d, $3c, $41, $3d, $5b
17d41     89 95 A0 C4 
17d45     C6 B1 B6 94 
17d49     7D 6C 58 32 
17d4d     45 3C 40 5E | 	byte	$89, $95, $a0, $c4, $c6, $b1, $b6, $94, $7d, $6c, $58, $32, $45, $3c, $40, $5e
17d51     92 8D A7 C8 
17d55     B9 BA AD 8E 
17d59     7B 79 4A 3A 
17d5d     40 48 3E 6A | 	byte	$92, $8d, $a7, $c8, $b9, $ba, $ad, $8e, $7b, $79, $4a, $3a, $40, $48, $3e, $6a
17d61     88 96 B5 BD 
17d65     B6 BD B0 87 
17d69     78 70 46 3F 
17d6d     3F 39 4D 78 | 	byte	$88, $96, $b5, $bd, $b6, $bd, $b0, $87, $78, $70, $46, $3f, $3f, $39, $4d, $78
17d71     80 98 C0 B9 
17d75     B7 BD A6 81 
17d79     7D 68 46 42 
17d7d     41 36 5A 7A | 	byte	$80, $98, $c0, $b9, $b7, $bd, $a6, $81, $7d, $68, $46, $42, $41, $36, $5a, $7a
17d81     80 9C C2 B6 
17d85     B5 BC 98 85 
17d89     81 59 42 4B 
17d8d     3A 3A 61 77 | 	byte	$80, $9c, $c2, $b6, $b5, $bc, $98, $85, $81, $59, $42, $4b, $3a, $3a, $61, $77
17d91     80 B0 B8 B2 
17d95     BF BA 92 87 
17d99     77 59 48 43 
17d9d     35 46 6D 6E | 	byte	$80, $b0, $b8, $b2, $bf, $ba, $92, $87, $77, $59, $48, $43, $35, $46, $6d, $6e
17da1     89 B0 BA B1 
17da5     BD AD 8F 8E 
17da9     6D 51 4A 47 
17dad     2F 4D 6C 78 | 	byte	$89, $b0, $ba, $b1, $bd, $ad, $8f, $8e, $6d, $51, $4a, $47, $2f, $4d, $6c, $78
17db1     94 AF B2 B8 
17db5     C1 A1 96 87 
17db9     6D 4D 51 3B 
17dbd     37 57 69 78 | 	byte	$94, $af, $b2, $b8, $c1, $a1, $96, $87, $6d, $4d, $51, $3b, $37, $57, $69, $78
17dc1     9B AF AF C1 
17dc5     BD 99 96 85 
17dc9     60 54 48 38 
17dcd     3F 5F 5F 7F | 	byte	$9b, $af, $af, $c1, $bd, $99, $96, $85, $60, $54, $48, $38, $3f, $5f, $5f, $7f
17dd1     A6 AD AD C3 
17dd5     B4 9F 93 7D 
17dd9     5A 5B 47 33 
17ddd     44 61 64 8B | 	byte	$a6, $ad, $ad, $c3, $b4, $9f, $93, $7d, $5a, $5b, $47, $33, $44, $61, $64, $8b
17de1     A1 AB BD C0 
17de5     AC 98 99 6F 
17de9     5E 56 3D 35 
17ded     4D 56 70 8A | 	byte	$a1, $ab, $bd, $c0, $ac, $98, $99, $6f, $5e, $56, $3d, $35, $4d, $56, $70, $8a
17df1     A9 A6 C4 BE 
17df5     9E 9E 91 72 
17df9     5A 53 36 44 
17dfd     4C 5A 71 9F | 	byte	$a9, $a6, $c4, $be, $9e, $9e, $91, $72, $5a, $53, $36, $44, $4c, $5a, $71, $9f
17e01     9D AB C1 BE 
17e05     A1 9F 83 6F 
17e09     62 4D 30 45 
17e0d     59 55 7B 92 | 	byte	$9d, $ab, $c1, $be, $a1, $9f, $83, $6f, $62, $4d, $30, $45, $59, $55, $7b, $92
17e11     A8 B6 C1 AE 
17e15     A9 A3 80 65 
17e19     66 44 3A 47 
17e1d     4E 60 85 92 | 	byte	$a8, $b6, $c1, $ae, $a9, $a3, $80, $65, $66, $44, $3a, $47, $4e, $60, $85, $92
17e21     A2 BF BE A8 
17e25     A8 9E 76 6B 
17e29     5B 3E 3E 49 
17e2d     47 69 8B 92 | 	byte	$a2, $bf, $be, $a8, $a8, $9e, $76, $6b, $5b, $3e, $3e, $49, $47, $69, $8b, $92
17e31     A0 C6 B8 AD 
17e35     A7 8A 7F 71 
17e39     56 38 3E 4F 
17e3d     4B 69 8C 93 | 	byte	$a0, $c6, $b8, $ad, $a7, $8a, $7f, $71, $56, $38, $3e, $4f, $4b, $69, $8c, $93
17e41     B3 B7 B6 AC 
17e45     AA 87 76 71 
17e49     53 36 43 46 
17e4d     53 75 82 94 | 	byte	$b3, $b7, $b6, $ac, $aa, $87, $76, $71, $53, $36, $43, $46, $53, $75, $82, $94
17e51     B5 BD AC B1 
17e55     AA 80 79 68 
17e59     4C 41 43 43 
17e5d     59 7B 88 92 | 	byte	$b5, $bd, $ac, $b1, $aa, $80, $79, $68, $4c, $41, $43, $43, $59, $7b, $88, $92
17e61     BC B8 B2 AF 
17e65     99 81 80 5F 
17e69     42 47 44 46 
17e6d     5B 84 84 A0 | 	byte	$bc, $b8, $b2, $af, $99, $81, $80, $5f, $42, $47, $44, $46, $5b, $84, $84, $a0
17e71     BA B3 B5 B4 
17e75     8F 81 7E 61 
17e79     43 44 47 47 
17e7d     6A 75 87 AB | 	byte	$ba, $b3, $b5, $b4, $8f, $81, $7e, $61, $43, $44, $47, $47, $6a, $75, $87, $ab
17e81     B7 AA B7 AA 
17e85     8F 81 78 56 
17e89     4E 45 39 54 
17e8d     70 78 89 B1 | 	byte	$b7, $aa, $b7, $aa, $8f, $81, $78, $56, $4e, $45, $39, $54, $70, $78, $89, $b1
17e91     B1 B6 B1 A6 
17e95     89 8D 6F 54 
17e99     4D 42 3B 56 
17e9d     72 75 94 A9 | 	byte	$b1, $b6, $b1, $a6, $89, $8d, $6f, $54, $4d, $42, $3b, $56, $72, $75, $94, $a9
17ea1     AF B7 B4 98 
17ea5     8B 8A 6C 50 
17ea9     4C 3D 44 5E 
17ead     67 7C 9B AA | 	byte	$af, $b7, $b4, $98, $8b, $8a, $6c, $50, $4c, $3d, $44, $5e, $67, $7c, $9b, $aa
17eb1     AD B6 B4 99 
17eb5     8D 81 65 5A 
17eb9     4A 37 48 62 
17ebd     6C 7F 9A AA | 	byte	$ad, $b6, $b4, $99, $8d, $81, $65, $5a, $4a, $37, $48, $62, $6c, $7f, $9a, $aa
17ec1     AE BB A4 96 
17ec5     93 7A 61 58 
17ec9     49 3D 4F 62 
17ecd     6D 89 A0 A6 | 	byte	$ae, $bb, $a4, $96, $93, $7a, $61, $58, $49, $3d, $4f, $62, $6d, $89, $a0, $a6
17ed1     B6 B9 9F 94 
17ed5     93 77 61 57 
17ed9     40 41 54 60 
17edd     6E 97 9D A0 | 	byte	$b6, $b9, $9f, $94, $93, $77, $61, $57, $40, $41, $54, $60, $6e, $97, $9d, $a0
17ee1     B9 BA 9B 93 
17ee5     8B 74 69 4D 
17ee9     3B 48 60 5E 
17eed     72 93 A6 A5 | 	byte	$b9, $ba, $9b, $93, $8b, $74, $69, $4d, $3b, $48, $60, $5e, $72, $93, $a6, $a5
17ef1     B9 AC A0 9B 
17ef5     7E 70 65 54 
17ef9     37 48 59 67 
17efd     7A 97 99 B4 | 	byte	$b9, $ac, $a0, $9b, $7e, $70, $65, $54, $37, $48, $59, $67, $7a, $97, $99, $b4
17f01     B8 A9 A2 94 
17f05     7A 6E 6C 46 
17f09     3B 4B 60 64 
17f0d     86 8B A1 B6 | 	byte	$b8, $a9, $a2, $94, $7a, $6e, $6c, $46, $3b, $4b, $60, $64, $86, $8b, $a1, $b6
17f11     B5 A4 9E 94 
17f15     7A 74 5E 43 
17f19     44 59 4F 6B 
17f1d     89 94 A4 B4 | 	byte	$b5, $a4, $9e, $94, $7a, $74, $5e, $43, $44, $59, $4f, $6b, $89, $94, $a4, $b4
17f21     B0 AA A3 88 
17f25     75 78 60 3D 
17f29     45 4D 61 72 
17f2d     89 8B AD B6 | 	byte	$b0, $aa, $a3, $88, $75, $78, $60, $3d, $45, $4d, $61, $72, $89, $8b, $ad, $b6
17f31     AA A3 9E 85 
17f35     79 73 57 42 
17f39     48 50 5D 7E 
17f3d     82 90 B0 B6 | 	byte	$aa, $a3, $9e, $85, $79, $73, $57, $42, $48, $50, $5d, $7e, $82, $90, $b0, $b6
17f41     A4 A4 9D 83 
17f45     78 6A 52 46 
17f49     4C 48 63 7F 
17f4d     88 91 AE B0 | 	byte	$a4, $a4, $9d, $83, $78, $6a, $52, $46, $4c, $48, $63, $7f, $88, $91, $ae, $b0
17f51     AD A5 91 7E 
17f55     7D 6E 47 46 
17f59     4B 52 6A 7E 
17f5d     82 9D AF AE | 	byte	$ad, $a5, $91, $7e, $7d, $6e, $47, $46, $4b, $52, $6a, $7e, $82, $9d, $af, $ae
17f61     A7 A7 8A 7E 
17f65     7B 60 4C 4A 
17f69     46 53 6F 7D 
17f6d     8B 9D B7 A7 | 	byte	$a7, $a7, $8a, $7e, $7b, $60, $4c, $4a, $46, $53, $6f, $7d, $8b, $9d, $b7, $a7
17f71     AA A0 8B 80 
17f75     7A 5A 52 4A 
17f79     41 55 76 85 
17f7d     84 A6 AC B3 | 	byte	$aa, $a0, $8b, $80, $7a, $5a, $52, $4a, $41, $55, $76, $85, $84, $a6, $ac, $b3
17f81     AA 95 85 8B 
17f85     75 58 4E 4A 
17f89     4A 5C 74 7E 
17f8d     96 AA A6 AC | 	byte	$aa, $95, $85, $8b, $75, $58, $4e, $4a, $4a, $5c, $74, $7e, $96, $aa, $a6, $ac
17f91     B1 98 82 81 
17f95     73 5A 50 3F 
17f99     4C 6A 75 7C 
17f9d     9A AD A8 AF | 	byte	$b1, $98, $82, $81, $73, $5a, $50, $3f, $4c, $6a, $75, $7c, $9a, $ad, $a8, $af
17fa1     AA 92 8B 7F 
17fa5     67 62 4C 41 
17fa9     4A 6C 79 80 
17fad     99 A9 AD B2 | 	byte	$aa, $92, $8b, $7f, $67, $62, $4c, $41, $4a, $6c, $79, $80, $99, $a9, $ad, $b2
17fb1     9F 8F 8E 7A 
17fb5     66 5C 4E 46 
17fb9     4D 6B 74 8C 
17fbd     9C 9E B1 B3 | 	byte	$9f, $8f, $8e, $7a, $66, $5c, $4e, $46, $4d, $6b, $74, $8c, $9c, $9e, $b1, $b3
17fc1     9C 85 8D 79 
17fc5     6A 54 48 45 
17fc9     5D 68 71 94 
17fcd     9C A1 B0 AE | 	byte	$9c, $85, $8d, $79, $6a, $54, $48, $45, $5d, $68, $71, $94, $9c, $a1, $b0, $ae
17fd1     98 8D 83 74 
17fd5     68 5C 40 49 
17fd9     62 67 7B 8F 
17fdd     9B A5 B2 A2 | 	byte	$98, $8d, $83, $74, $68, $5c, $40, $49, $62, $67, $7b, $8f, $9b, $a5, $b2, $a2
17fe1     94 90 86 6B 
17fe5     6A 59 44 4F 
17fe9     5B 6B 84 92 
17fed     98 AA B8 A1 | 	byte	$94, $90, $86, $6b, $6a, $59, $44, $4f, $5b, $6b, $84, $92, $98, $aa, $b8, $a1
17ff1     90 8E 7E 75 
17ff5     66 50 46 5B 
17ff9     5E 6B 89 97 
17ffd     98 AB B5 9A | 	byte	$90, $8e, $7e, $75, $66, $50, $46, $5b, $5e, $6b, $89, $97, $98, $ab, $b5, $9a
18001     9B 86 7C 72 
18005     6E 4A 49 59 
18009     5E 6F 8F 91 
1800d     9C B2 A7 A1 | 	byte	$9b, $86, $7c, $72, $6e, $4a, $49, $59, $5e, $6f, $8f, $91, $9c, $b2, $a7, $a1
18011     96 87 76 75 
18015     66 43 4F 5A 
18019     5B 79 8D 8F 
1801d     A5 B3 A5 98 | 	byte	$96, $87, $76, $75, $66, $43, $4f, $5a, $5b, $79, $8d, $8f, $a5, $b3, $a5, $98
18021     9A 7C 7A 73 
18025     5E 47 53 52 
18029     62 80 8A 92 
1802d     A3 B6 9C A4 | 	byte	$9a, $7c, $7a, $73, $5e, $47, $53, $52, $62, $80, $8a, $92, $a3, $b6, $9c, $a4
18031     8D 80 77 75 
18035     56 4E 53 53 
18039     65 84 89 95 
1803d     B3 A9 A3 9E | 	byte	$8d, $80, $77, $75, $56, $4e, $53, $53, $65, $84, $89, $95, $b3, $a9, $a3, $9e
18041     8E 78 7F 6D 
18045     54 4E 53 53 
18049     71 8A 82 A1 
1804d     AD AA A1 A2 | 	byte	$8e, $78, $7f, $6d, $54, $4e, $53, $53, $71, $8a, $82, $a1, $ad, $aa, $a1, $a2
18051     81 7C 7A 6A 
18055     4F 57 4B 58 
18059     76 83 8A 9E 
1805d     AF A5 A5 9A | 	byte	$81, $7c, $7a, $6a, $4f, $57, $4b, $58, $76, $83, $8a, $9e, $af, $a5, $a5, $9a
18061     81 7D 7C 5D 
18065     5D 51 4E 59 
18069     7C 83 8D A8 
1806d     A9 A7 A5 91 | 	byte	$81, $7d, $7c, $5d, $5d, $51, $4e, $59, $7c, $83, $8d, $a8, $a9, $a7, $a5, $91
18071     7A 84 73 57 
18075     5A 51 48 61 
18079     7C 82 97 A3 
1807d     A7 AB AA 88 | 	byte	$7a, $84, $73, $57, $5a, $51, $48, $61, $7c, $82, $97, $a3, $a7, $ab, $aa, $88
18081     7C 84 6F 5C 
18085     5A 4D 4C 6F 
18089     76 85 9A AA 
1808d     A2 AC A6 81 | 	byte	$7c, $84, $6f, $5c, $5a, $4d, $4c, $6f, $76, $85, $9a, $aa, $a2, $ac, $a6, $81
18091     88 7D 68 5B 
18095     5A 46 59 69 
18099     79 8B A4 9F 
1809d     A6 B0 9D 83 | 	byte	$88, $7d, $68, $5b, $5a, $46, $59, $69, $79, $8b, $a4, $9f, $a6, $b0, $9d, $83
180a1     85 77 66 64 
180a5     53 46 59 72 
180a9     77 92 9F A1 
180ad     AE B0 91 84 | 	byte	$85, $77, $66, $64, $53, $46, $59, $72, $77, $92, $9f, $a1, $ae, $b0, $91, $84
180b1     84 72 65 62 
180b5     4F 4B 64 6A 
180b9     79 98 A0 9D 
180bd     B2 A9 8D 8A | 	byte	$84, $72, $65, $62, $4f, $4b, $64, $6a, $79, $98, $a0, $9d, $b2, $a9, $8d, $8a
180c1     80 6C 67 64 
180c5     45 53 61 6B 
180c9     80 9C 9A A1 
180cd     B6 A0 8E 86 | 	byte	$80, $6c, $67, $64, $45, $53, $61, $6b, $80, $9c, $9a, $a1, $b6, $a0, $8e, $86
180d1     78 6B 6E 54 
180d5     46 55 66 63 
180d9     88 9C 97 AC 
180dd     AE 99 91 88 | 	byte	$78, $6b, $6e, $54, $46, $55, $66, $63, $88, $9c, $97, $ac, $ae, $99, $91, $88
180e1     70 6A 6C 54 
180e5     46 5D 5D 71 
180e9     8B 98 93 B7 
180ed     A9 99 91 83 | 	byte	$70, $6a, $6c, $54, $46, $5d, $5d, $71, $8b, $98, $93, $b7, $a9, $99, $91, $83
180f1     71 6F 6D 45 
180f5     51 5C 5B 73 
180f9     97 8E A1 B0 
180fd     AB 94 96 7C | 	byte	$71, $6f, $6d, $45, $51, $5c, $5b, $73, $97, $8e, $a1, $b0, $ab, $94, $96, $7c
18101     6F 79 5D 46 
18105     55 5F 59 80 
18109     8F 99 A1 B2 
1810d     9D 9F 96 6F | 	byte	$6f, $79, $5d, $46, $55, $5f, $59, $80, $8f, $99, $a1, $b2, $9d, $9f, $96, $6f
18111     71 7B 5A 4A 
18115     52 58 65 83 
18119     8C 95 B4 AA 
1811d     9A 9E 93 71 | 	byte	$71, $7b, $5a, $4a, $52, $58, $65, $83, $8c, $95, $b4, $aa, $9a, $9e, $93, $71
18121     73 6F 57 52 
18125     53 50 70 85 
18129     86 98 B1 AA 
1812d     9D 9D 83 75 | 	byte	$73, $6f, $57, $52, $53, $50, $70, $85, $86, $98, $b1, $aa, $9d, $9d, $83, $75
18131     7C 64 54 57 
18135     53 50 73 86 
18139     8A A1 AD A5 
1813d     A4 9D 7A 79 | 	byte	$7c, $64, $54, $57, $53, $50, $73, $86, $8a, $a1, $ad, $a5, $a4, $9d, $7a, $79
18141     7C 61 54 58 
18145     4C 5A 76 84 
18149     8B A9 AA A1 
1814d     A8 94 7C 7A | 	byte	$7c, $61, $54, $58, $4c, $5a, $76, $84, $8b, $a9, $aa, $a1, $a8, $94, $7c, $7a
18151     74 5F 5A 54 
18155     49 5F 7E 80 
18159     90 AC A5 A9 
1815d     A4 8C 7C 7F | 	byte	$74, $5f, $5a, $54, $49, $5f, $7e, $80, $90, $ac, $a5, $a9, $a4, $8c, $7c, $7f
18161     6F 59 60 52 
18165     47 67 7D 80 
18169     9B A4 A4 AB 
1816d     A2 83 7E 80 | 	byte	$6f, $59, $60, $52, $47, $67, $7d, $80, $9b, $a4, $a4, $ab, $a2, $83, $7e, $80
18171     69 5B 60 4C 
18175     51 6B 76 85 
18179     A0 A5 A0 B1 
1817d     9C 86 7D 7B | 	byte	$69, $5b, $60, $4c, $51, $6b, $76, $85, $a0, $a5, $a0, $b1, $9c, $86, $7d, $7b
18181     62 68 55 4A 
18185     59 6F 77 88 
18189     A0 A3 AA AD 
1818d     94 83 87 6F | 	byte	$62, $68, $55, $4a, $59, $6f, $77, $88, $a0, $a3, $aa, $ad, $94, $83, $87, $6f
18191     68 62 58 47 
18195     5D 70 75 91 
18199     9F 9F B0 A8 
1819d     8F 87 80 6C | 	byte	$68, $62, $58, $47, $5d, $70, $75, $91, $9f, $9f, $b0, $a8, $8f, $87, $80, $6c
181a1     64 66 4F 4D 
181a5     63 65 83 9B 
181a9     99 A4 B3 AB 
181ad     8A 87 7C 6E | 	byte	$64, $66, $4f, $4d, $63, $65, $83, $9b, $99, $a4, $b3, $ab, $8a, $87, $7c, $6e
181b1     6C 5C 47 5D 
181b5     62 69 80 9D 
181b9     9A A8 B1 9E 
181bd     8F 8C 6E 6C | 	byte	$6c, $5c, $47, $5d, $62, $69, $80, $9d, $9a, $a8, $b1, $9e, $8f, $8c, $6e, $6c
181c1     74 57 4C 56 
181c5     69 6A 8E 94 
181c9     A1 AD AF 96 
181cd     94 86 70 6A | 	byte	$74, $57, $4c, $56, $69, $6a, $8e, $94, $a1, $ad, $af, $96, $94, $86, $70, $6a
181d1     6C 55 4E 5E 
181d5     5B 76 8D 92 
181d9     9E B8 A6 98 
181dd     93 81 6E 71 | 	byte	$6c, $55, $4e, $5e, $5b, $76, $8d, $92, $9e, $b8, $a6, $98, $93, $81, $6e, $71
181e1     65 4F 5A 59 
181e5     5A 7A 95 93 
181e9     A0 B1 A6 9A 
181ed     90 74 73 77 | 	byte	$65, $4f, $5a, $59, $5a, $7a, $95, $93, $a0, $b1, $a6, $9a, $90, $74, $73, $77
181f1     5F 4C 57 5C 
181f5     61 7E 90 91 
181f9     B0 AD 9A 9E 
181fd     92 71 72 70 | 	byte	$5f, $4c, $57, $5c, $61, $7e, $90, $91, $b0, $ad, $9a, $9e, $92, $71, $72, $70
18201     5C 52 56 55 
18205     6A 86 87 99 
18209     B6 AC 99 A0 
1820d     89 74 73 6A | 	byte	$5c, $52, $56, $55, $6a, $86, $87, $99, $b6, $ac, $99, $a0, $89, $74, $73, $6a
18211     57 5D 51 51 
18215     71 8A 89 9D 
18219     B2 AB A0 9B 
1821d     7F 78 78 62 | 	byte	$57, $5d, $51, $51, $71, $8a, $89, $9d, $b2, $ab, $a0, $9b, $7f, $78, $78, $62
18221     55 5F 51 58 
18225     74 81 92 A6 
18229     AD A0 AC 98 
1822d     7A 76 76 5E | 	byte	$55, $5f, $51, $58, $74, $81, $92, $a6, $ad, $a0, $ac, $98, $7a, $76, $76, $5e
18231     5C 55 50 5E 
18235     7A 7D 91 AF 
18239     AA A3 A6 8F 
1823d     7C 7A 6A 60 | 	byte	$5c, $55, $50, $5e, $7a, $7d, $91, $af, $aa, $a3, $a6, $8f, $7c, $7a, $6a, $60
18241     5E 56 48 68 
18245     7A 81 97 AB 
18249     A5 AD 9F 83 
1824d     80 7C 64 5B | 	byte	$5e, $56, $48, $68, $7a, $81, $97, $ab, $a5, $ad, $9f, $83, $80, $7c, $64, $5b
18251     64 50 4F 6B 
18255     77 89 A1 A2 
18259     A7 B3 9F 80 
1825d     81 75 66 60 | 	byte	$64, $50, $4f, $6b, $77, $89, $a1, $a2, $a7, $b3, $9f, $80, $81, $75, $66, $60
18261     5B 4A 59 6E 
18265     6F 8D A6 A1 
18269     AB AE 93 86 
1826d     7D 6F 5F 6A | 	byte	$5b, $4a, $59, $6e, $6f, $8d, $a6, $a1, $ab, $ae, $93, $86, $7d, $6f, $5f, $6a
18271     52 4D 60 6B 
18275     73 97 A2 A3 
18279     AE A7 91 87 
1827d     80 63 68 69 | 	byte	$52, $4d, $60, $6b, $73, $97, $a2, $a3, $ae, $a7, $91, $87, $80, $63, $68, $69
18281     51 50 64 68 
18285     7A 96 9D A5 
18289     B3 A2 88 8B 
1828d     75 66 6D 5D | 	byte	$51, $50, $64, $68, $7a, $96, $9d, $a5, $b3, $a2, $88, $8b, $75, $66, $6d, $5d
18291     4C 56 64 66 
18295     80 9C 9B AA 
18299     B1 99 8F 88 
1829d     6F 63 75 57 | 	byte	$4c, $56, $64, $66, $80, $9c, $9b, $aa, $b1, $99, $8f, $88, $6f, $63, $75, $57
182a1     4C 60 62 69 
182a5     8B 97 9C AE 
182a9     A8 95 8E 88 
182ad     63 6E 6D 57 | 	byte	$4c, $60, $62, $69, $8b, $97, $9c, $ae, $a8, $95, $8e, $88, $63, $6e, $6d, $57
182b1     50 62 5E 71 
182b5     8D 91 A2 B0 
182b9     A6 8C 97 7B 
182bd     6A 6D 6A 53 | 	byte	$50, $62, $5e, $71, $8d, $91, $a2, $b0, $a6, $8c, $97, $7b, $6a, $6d, $6a, $53
182c1     59 5B 5C 7C 
182c5     92 91 A2 B6 
182c9     9A 96 8E 75 
182cd     6A 73 5D 58 | 	byte	$59, $5b, $5c, $7c, $92, $91, $a2, $b6, $9a, $96, $8e, $75, $6a, $73, $5d, $58
182d1     5D 60 5E 87 
182d5     8D 92 AE AA 
182d9     99 94 88 6F 
182dd     73 6D 5D 59 | 	byte	$5d, $60, $5e, $87, $8d, $92, $ae, $aa, $99, $94, $88, $6f, $73, $6d, $5d, $59
182e1     63 56 68 88 
182e5     8B 9A AC A6 
182e9     96 9A 82 6A 
182ed     74 6A 5A 62 | 	byte	$63, $56, $68, $88, $8b, $9a, $ac, $a6, $96, $9a, $82, $6a, $74, $6a, $5a, $62
182f1     59 59 73 8B 
182f5     89 9E B0 A0 
182f9     99 93 7C 70 
182fd     74 62 61 62 | 	byte	$59, $59, $73, $8b, $89, $9e, $b0, $a0, $99, $93, $7c, $70, $74, $62, $61, $62
18301     5C 60 77 85 
18305     8A A8 AD 9B 
18309     9C 91 73 76 
1830d     6E 61 63 65 | 	byte	$5c, $60, $77, $85, $8a, $a8, $ad, $9b, $9c, $91, $73, $76, $6e, $61, $63, $65
18311     56 60 7E 85 
18315     95 A8 A0 A1 
18319     9F 82 76 70 
1831d     72 5C 67 5E | 	byte	$56, $60, $7e, $85, $95, $a8, $a0, $a1, $9f, $82, $76, $70, $72, $5c, $67, $5e
18321     5B 68 7B 83 
18325     9C AD 9E A1 
18329     9A 82 72 78 
1832d     66 62 66 5E | 	byte	$5b, $68, $7b, $83, $9c, $ad, $9e, $a1, $9a, $82, $72, $78, $66, $62, $66, $5e
18331     59 73 77 8A 
18335     A2 A5 9D A2 
18339     97 7E 79 70 
1833d     66 63 69 57 | 	byte	$59, $73, $77, $8a, $a2, $a5, $9d, $a2, $97, $7e, $79, $70, $66, $63, $69, $57
18341     61 73 7A 8D 
18345     A6 9F A1 A7 
18349     8D 7B 7C 6F 
1834d     61 68 67 5A | 	byte	$61, $73, $7a, $8d, $a6, $9f, $a1, $a7, $8d, $7b, $7c, $6f, $61, $68, $67, $5a
18351     65 71 7E 98 
18355     A4 9C A6 A2 
18359     85 7D 78 69 
1835d     65 6C 5E 5F | 	byte	$65, $71, $7e, $98, $a4, $9c, $a6, $a2, $85, $7d, $78, $69, $65, $6c, $5e, $5f
18361     69 71 7E A0 
18365     A1 9E A3 9F 
18369     84 7F 76 64 
1836d     6C 6A 5B 5D | 	byte	$69, $71, $7e, $a0, $a1, $9e, $a3, $9f, $84, $7f, $76, $64, $6c, $6a, $5b, $5d
18371     6F 6B 86 9B 
18375     A5 A0 A6 94 
18379     83 80 71 63 
1837d     6C 6A 5A 66 | 	byte	$6f, $6b, $86, $9b, $a5, $a0, $a6, $94, $83, $80, $71, $63, $6c, $6a, $5a, $66
18381     68 71 8D A1 
18385     9C A1 A6 92 
18389     82 7E 6A 69 
1838d     6D 64 5C 67 | 	byte	$68, $71, $8d, $a1, $9c, $a1, $a6, $92, $82, $7e, $6a, $69, $6d, $64, $5c, $67
18391     6C 71 93 9E 
18395     9D A4 A0 8B 
18399     87 79 6A 6B 
1839d     6E 61 5D 6E | 	byte	$6c, $71, $93, $9e, $9d, $a4, $a0, $8b, $87, $79, $6a, $6b, $6e, $61, $5d, $6e
183a1     65 7A 96 9D 
183a5     A2 A5 9C 8A 
183a9     87 77 63 6D 
183ad     70 5C 65 68 | 	byte	$65, $7a, $96, $9d, $a2, $a5, $9c, $8a, $87, $77, $63, $6d, $70, $5c, $65, $68
183b1     69 7D 9A 9A 
183b5     A1 A6 97 89 
183b9     87 72 63 73 
183bd     66 62 63 68 | 	byte	$69, $7d, $9a, $9a, $a1, $a6, $97, $89, $87, $72, $63, $73, $66, $62, $63, $68
183c1     66 84 97 9B 
183c5     A3 A4 8F 8D 
183c9     82 6B 69 71 
183cd     67 61 6A 64 | 	byte	$66, $84, $97, $9b, $a3, $a4, $8f, $8d, $82, $6b, $69, $71, $67, $61, $6a, $64
183d1     6F 8A 97 97 
183d5     AC 9C 91 8C 
183d9     82 67 6C 75 
183dd     60 67 63 66 | 	byte	$6f, $8a, $97, $97, $ac, $9c, $91, $8c, $82, $67, $6c, $75, $60, $67, $63, $66
183e1     72 92 8F 9D 
183e5     AC 9A 89 8E 
183e9     7C 68 72 69 
183ed     67 69 6A 61 | 	byte	$72, $92, $8f, $9d, $ac, $9a, $89, $8e, $7c, $68, $72, $69, $67, $69, $6a, $61
183f1     7A 90 94 9F 
183f5     AC 8F 92 8B 
183f9     75 6C 72 6B 
183fd     64 6D 5F 67 | 	byte	$7a, $90, $94, $9f, $ac, $8f, $92, $8b, $75, $6c, $72, $6b, $64, $6d, $5f, $67
18401     80 8F 91 A9 
18405     9F 92 94 84 
18409     6D 6F 70 66 
1840d     69 6A 60 69 | 	byte	$80, $8f, $91, $a9, $9f, $92, $94, $84, $6d, $6f, $70, $66, $69, $6a, $60, $69
18411     89 84 99 A7 
18415     9D 8D 94 7C 
18419     71 70 6A 64 
1841d     74 6A 5B 77 | 	byte	$89, $84, $99, $a7, $9d, $8d, $94, $7c, $71, $70, $6a, $64, $74, $6a, $5b, $77
18421     82 8F 98 A8 
18425     94 97 8D 75 
18429     73 76 65 67 
1842d     75 63 5E 79 | 	byte	$82, $8f, $98, $a8, $94, $97, $8d, $75, $73, $76, $65, $67, $75, $63, $5e, $79
18431     84 8F A0 9F 
18435     94 9B 8B 71 
18439     74 74 63 6A 
1843d     73 5F 68 7C | 	byte	$84, $8f, $a0, $9f, $94, $9b, $8b, $71, $74, $74, $63, $6a, $73, $5f, $68, $7c
18441     7D 95 A8 98 
18445     97 94 88 71 
18449     78 6C 64 74 
1844d     6B 5F 71 7C | 	byte	$7d, $95, $a8, $98, $97, $94, $88, $71, $78, $6c, $64, $74, $6b, $5f, $71, $7c
18451     80 9A A1 98 
18455     95 96 7C 77 
18459     75 64 66 7A 
1845d     64 62 72 7B | 	byte	$80, $9a, $a1, $98, $95, $96, $7c, $77, $75, $64, $66, $7a, $64, $62, $72, $7b
18461     84 A1 9C 95 
18465     9E 8C 78 78 
18469     74 62 6F 70 
1846d     64 6B 73 74 | 	byte	$84, $a1, $9c, $95, $9e, $8c, $78, $78, $74, $62, $6f, $70, $64, $6b, $73, $74
18471     8F A3 96 99 
18475     9C 88 78 79 
18479     6B 66 74 6B 
1847d     62 71 72 75 | 	byte	$8f, $a3, $96, $99, $9c, $88, $78, $79, $6b, $66, $74, $6b, $62, $71, $72, $75
18481     97 9E 97 9D 
18485     99 80 7D 7A 
18489     62 6D 76 65 
1848d     69 6F 70 7E | 	byte	$97, $9e, $97, $9d, $99, $80, $7d, $7a, $62, $6d, $76, $65, $69, $6f, $70, $7e
18491     97 9B 97 A2 
18495     8E 80 7F 74 
18499     5E 75 6F 67 
1849d     6A 72 6E 84 | 	byte	$97, $9b, $97, $a2, $8e, $80, $7f, $74, $5e, $75, $6f, $67, $6a, $72, $6e, $84
184a1     9B 96 9A 9F 
184a5     8C 81 82 64 
184a9     6C 73 6E 63 
184ad     74 6C 71 88 | 	byte	$9b, $96, $9a, $9f, $8c, $81, $82, $64, $6c, $73, $6e, $63, $74, $6c, $71, $88
184b1     97 97 9F 9B 
184b5     82 8B 78 68 
184b9     6A 78 67 6A 
184bd     6F 6C 75 90 | 	byte	$97, $97, $9f, $9b, $82, $8b, $78, $68, $6a, $78, $67, $6a, $6f, $6c, $75, $90
184c1     91 98 A4 91 
184c5     86 86 77 65 
184c9     70 72 6A 6F 
184cd     6E 66 80 8D | 	byte	$91, $98, $a4, $91, $86, $86, $77, $65, $70, $72, $6a, $6f, $6e, $66, $80, $8d
184d1     90 99 A3 90 
184d5     86 82 70 6B 
184d9     74 6B 6A 74 
184dd     68 6A 82 8E | 	byte	$90, $99, $a3, $90, $86, $82, $70, $6b, $74, $6b, $6a, $74, $68, $6a, $82, $8e
184e1     91 9E 9C 8C 
184e5     8C 7E 6E 6E 
184e9     72 66 72 70 
184ed     68 6F 84 8A | 	byte	$91, $9e, $9c, $8c, $8c, $7e, $6e, $6e, $72, $66, $72, $70, $68, $6f, $84, $8a
184f1     97 A1 91 8E 
184f5     89 7B 6A 72 
184f9     6E 6C 74 6C 
184fd     6B 76 87 8A | 	byte	$97, $a1, $91, $8e, $89, $7b, $6a, $72, $6e, $6c, $74, $6c, $6b, $76, $87, $8a
18501     9A 9D 93 8F 
18505     86 74 6F 72 
18509     6F 6D 76 6A 
1850d     6F 7C 83 8F | 	byte	$9a, $9d, $93, $8f, $86, $74, $6f, $72, $6f, $6d, $76, $6a, $6f, $7c, $83, $8f
18511     9C 9A 8F 91 
18515     81 72 73 6F 
18519     6D 75 6F 6B 
1851d     71 7D 83 93 | 	byte	$9c, $9a, $8f, $91, $81, $72, $73, $6f, $6d, $75, $6f, $6b, $71, $7d, $83, $93
18521     9E 93 91 90 
18525     80 71 72 6E 
18529     70 73 71 6B 
1852d     77 80 80 98 | 	byte	$9e, $93, $91, $90, $80, $71, $72, $6e, $70, $73, $71, $6b, $77, $80, $80, $98
18531     97 98 8E 8D 
18535     78 77 6F 6B 
18539     71 78 6F 6C 
1853d     78 7B 8C 93 | 	byte	$97, $98, $8e, $8d, $78, $77, $6f, $6b, $71, $78, $6f, $6c, $78, $7b, $8c, $93
18541     99 93 95 85 
18545     7A 73 72 69 
18549     75 75 6B 73 
1854d     75 80 89 98 | 	byte	$99, $93, $95, $85, $7a, $73, $72, $69, $75, $75, $6b, $73, $75, $80, $89, $98
18551     92 95 96 82 
18555     72 77 6D 72 
18559     75 71 71 77 
1855d     77 7B 8F 98 | 	byte	$92, $95, $96, $82, $72, $77, $6d, $72, $75, $71, $71, $77, $77, $7b, $8f, $98
18561     93 94 8E 7F 
18565     7F 6F 6B 73 
18569     77 71 6C 77 
1856d     78 81 91 91 | 	byte	$93, $94, $8e, $7f, $7f, $6f, $6b, $73, $77, $71, $6c, $77, $78, $81, $91, $91
18571     96 95 87 7E 
18575     7C 6E 6C 71 
18579     7A 6E 73 74 
1857d     7A 85 90 90 | 	byte	$96, $95, $87, $7e, $7c, $6e, $6c, $71, $7a, $6e, $73, $74, $7a, $85, $90, $90
18581     96 97 86 7B 
18585     76 72 6B 73 
18589     72 74 75 74 
1858d     77 87 95 92 | 	byte	$96, $97, $86, $7b, $76, $72, $6b, $73, $72, $74, $75, $74, $77, $87, $95, $92
18591     91 95 86 80 
18595     72 6C 74 77 
18599     70 70 78 77 
1859d     7B 89 91 95 | 	byte	$91, $95, $86, $80, $72, $6c, $74, $77, $70, $70, $78, $77, $7b, $89, $91, $95
185a1     97 8E 82 80 
185a5     74 6B 6E 79 
185a9     74 72 73 76 
185ad     80 8C 8C 94 | 	byte	$97, $8e, $82, $80, $74, $6b, $6e, $79, $74, $72, $73, $76, $80, $8c, $8c, $94
185b1     98 8C 81 79 
185b5     75 6B 72 70 
185b9     75 77 70 76 
185bd     83 8E 8E 93 | 	byte	$98, $8c, $81, $79, $75, $6b, $72, $70, $75, $77, $70, $76, $83, $8e, $8e, $93
185c1     94 90 81 78 
185c5     6E 74 72 6F 
185c9     72 79 73 78 
185cd     80 8E 91 95 | 	byte	$94, $90, $81, $78, $6e, $74, $72, $6f, $72, $79, $73, $78, $80, $8e, $91, $95
185d1     90 8A 83 79 
185d5     6D 6D 76 72 
185d9     74 73 75 7B 
185dd     86 88 93 97 | 	byte	$90, $8a, $83, $79, $6d, $6d, $76, $72, $74, $73, $75, $7b, $86, $88, $93, $97
185e1     91 8A 80 76 
185e5     6F 70 71 75 
185e9     75 74 71 7F 
185ed     86 88 90 96 | 	byte	$91, $8a, $80, $76, $6f, $70, $71, $75, $75, $74, $71, $7f, $86, $88, $90, $96
185f1     92 8A 7D 72 
185f5     70 74 70 72 
185f9     78 76 74 7C 
185fd     85 8E 95 91 | 	byte	$92, $8a, $7d, $72, $70, $74, $70, $72, $78, $76, $74, $7c, $85, $8e, $95, $91
18601     8E 8B 7D 6F 
18605     6F 73 73 74 
18609     75 70 7B 7D 
1860d     84 8D 98 90 | 	byte	$8e, $8b, $7d, $6f, $6f, $73, $73, $74, $75, $70, $7b, $7d, $84, $8d, $98, $90
18611     8C 88 7E 6E 
18615     74 6D 75 78 
18619     72 73 7A 82 
1861d     81 90 96 90 | 	byte	$8c, $88, $7e, $6e, $74, $6d, $75, $78, $72, $73, $7a, $82, $81, $90, $96, $90
18621     90 87 74 76 
18625     71 6E 73 78 
18629     73 73 7B 7F 
1862d     86 92 90 8F | 	byte	$90, $87, $74, $76, $71, $6e, $73, $78, $73, $73, $7b, $7f, $86, $92, $90, $8f
18631     93 80 75 73 
18635     72 6E 75 76 
18639     71 78 7D 7A 
1863d     8A 95 8E 91 | 	byte	$93, $80, $75, $73, $72, $6e, $75, $76, $71, $78, $7d, $7a, $8a, $95, $8e, $91
18641     8C 82 73 75 
18645     6C 70 7D 73 
18649     6E 7A 7D 7D 
1864d     8A 90 8F 94 | 	byte	$8c, $82, $73, $75, $6c, $70, $7d, $73, $6e, $7a, $7d, $7d, $8a, $90, $8f, $94
18651     8B 78 7A 77 
18655     69 72 7B 75 
18659     6E 7B 78 83 
1865d     8D 8B 8D 9C | 	byte	$8b, $78, $7a, $77, $69, $72, $7b, $75, $6e, $7b, $78, $83, $8d, $8b, $8d, $9c
18661     82 78 77 78 
18665     6C 70 79 73 
18669     7B 77 75 84 
1866d     95 84 90 94 | 	byte	$82, $78, $77, $78, $6c, $70, $79, $73, $7b, $77, $75, $84, $95, $84, $90, $94
18671     89 77 7A 6F 
18675     71 7A 73 74 
18679     7B 7C 73 8B 
1867d     8C 8B 91 93 | 	byte	$89, $77, $7a, $6f, $71, $7a, $73, $74, $7b, $7c, $73, $8b, $8c, $8b, $91, $93
18681     7E 7F 78 6B 
18685     74 7A 72 75 
18689     7D 75 7D 86 
1868d     8B 86 9C 8B | 	byte	$7e, $7f, $78, $6b, $74, $7a, $72, $75, $7d, $75, $7d, $86, $8b, $86, $9c, $8b
18691     7F 7F 77 6D 
18695     75 78 70 7C 
18699     78 71 80 8E 
1869d     84 8F 96 87 | 	byte	$7f, $7f, $77, $6d, $75, $78, $70, $7c, $78, $71, $80, $8e, $84, $8f, $96, $87
186a1     83 7D 6F 71 
186a5     7C 71 71 80 
186a9     77 74 84 86 
186ad     8A 90 91 83 | 	byte	$83, $7d, $6f, $71, $7c, $71, $71, $80, $77, $74, $84, $86, $8a, $90, $91, $83
186b1     87 7D 67 76 
186b5     7C 6F 77 7E 
186b9     74 7B 81 83 
186bd     89 97 8C 84 | 	byte	$87, $7d, $67, $76, $7c, $6f, $77, $7e, $74, $7b, $81, $83, $89, $97, $8c, $84
186c1     87 78 6D 78 
186c5     73 74 7D 78 
186c9     71 7D 87 7D 
186cd     92 92 8C 87 | 	byte	$87, $78, $6d, $78, $73, $74, $7d, $78, $71, $7d, $87, $7d, $92, $92, $8c, $87
186d1     84 72 74 78 
186d5     6F 73 80 78 
186d9     71 83 7D 86 
186dd     92 90 87 8F | 	byte	$84, $72, $74, $78, $6f, $73, $80, $78, $71, $83, $7d, $86, $92, $90, $87, $8f
186e1     80 6E 76 78 
186e5     6E 7A 79 73 
186e9     7A 81 7C 86 
186ed     95 8A 89 8D | 	byte	$80, $6e, $76, $78, $6e, $7a, $79, $73, $7a, $81, $7c, $86, $95, $8a, $89, $8d
186f1     7F 6F 7A 6F 
186f5     75 7D 78 72 
186f9     7F 80 7A 8B 
186fd     92 8B 8D 87 | 	byte	$7f, $6f, $7a, $6f, $75, $7d, $78, $72, $7f, $80, $7a, $8b, $92, $8b, $8d, $87
18701     77 7A 77 6B 
18705     76 81 76 71 
18709     7F 7D 80 8F 
1870d     89 8C 94 84 | 	byte	$77, $7a, $77, $6b, $76, $81, $76, $71, $7f, $7d, $80, $8f, $89, $8c, $94, $84
18711     74 7A 78 6E 
18715     78 7D 73 7C 
18719     7C 75 86 92 
1871d     87 8A 95 80 | 	byte	$74, $7a, $78, $6e, $78, $7d, $73, $7c, $7c, $75, $86, $92, $87, $8a, $95, $80
18721     79 79 73 6F 
18725     7F 77 73 80 
18729     7B 76 86 90 
1872d     87 92 8B 7E | 	byte	$79, $79, $73, $6f, $7f, $77, $73, $80, $7b, $76, $86, $90, $87, $92, $8b, $7e
18731     7E 79 6C 76 
18735     81 75 73 7F 
18739     79 7B 88 87 
1873d     88 97 87 7B | 	byte	$7e, $79, $6c, $76, $81, $75, $73, $7f, $79, $7b, $88, $87, $88, $97, $87, $7b
18741     81 78 6B 76 
18745     80 72 7D 78 
18749     74 82 89 87 
1874d     8B 97 85 7F | 	byte	$81, $78, $6b, $76, $80, $72, $7d, $78, $74, $82, $89, $87, $8b, $97, $85, $7f
18751     7E 72 70 7F 
18755     75 76 7D 79 
18759     74 80 8A 84 
1875d     92 90 82 85 | 	byte	$7e, $72, $70, $7f, $75, $76, $7d, $79, $74, $80, $8a, $84, $92, $90, $82, $85
18761     7E 6E 75 7E 
18765     77 74 7E 74 
18769     79 85 81 88 
1876d     95 8C 80 87 | 	byte	$7e, $6e, $75, $7e, $77, $74, $7e, $74, $79, $85, $81, $88, $95, $8c, $80, $87
18771     79 70 74 7B 
18775     76 7B 79 6F 
18779     7E 85 80 8B 
1877d     94 8B 82 84 | 	byte	$79, $70, $74, $7b, $76, $7b, $79, $6f, $7e, $85, $80, $8b, $94, $8b, $82, $84
18781     76 71 7A 74 
18785     79 7E 76 71 
18789     80 82 81 8E 
1878d     92 87 89 83 | 	byte	$76, $71, $7a, $74, $79, $7e, $76, $71, $80, $82, $81, $8e, $92, $87, $89, $83
18791     6F 78 79 77 
18795     77 7D 74 74 
18799     82 7E 86 92 
1879d     8D 87 8B 80 | 	byte	$6f, $78, $79, $77, $77, $7d, $74, $74, $82, $7e, $86, $92, $8d, $87, $8b, $80
187a1     73 77 7A 74 
187a5     7E 7A 71 78 
187a9     81 7C 88 90 
187ad     8C 89 88 7E | 	byte	$73, $77, $7a, $74, $7e, $7a, $71, $78, $81, $7c, $88, $90, $8c, $89, $88, $7e
187b1     70 7D 73 78 
187b5     7F 78 70 7A 
187b9     7D 80 8B 8C 
187bd     89 8D 8A 74 | 	byte	$70, $7d, $73, $78, $7f, $78, $70, $7a, $7d, $80, $8b, $8c, $89, $8d, $8a, $74
187c1     77 77 76 77 
187c5     82 70 77 7A 
187c9     7D 7F 90 8A 
187cd     8A 90 82 78 | 	byte	$77, $77, $76, $77, $82, $70, $77, $7a, $7d, $7f, $90, $8a, $8a, $90, $82, $78
187d1     74 7A 72 7E 
187d5     7A 74 77 7B 
187d9     76 85 90 89 
187dd     8C 8E 82 78 | 	byte	$74, $7a, $72, $7e, $7a, $74, $77, $7b, $76, $85, $90, $89, $8c, $8e, $82, $78
187e1     78 74 74 81 
187e5     78 6F 7A 7A 
187e9     7B 88 8F 86 
187ed     8E 90 7E 78 | 	byte	$78, $74, $74, $81, $78, $6f, $7a, $7a, $7b, $88, $8f, $86, $8e, $90, $7e, $78
187f1     78 72 7A 80 
187f5     75 71 7D 78 
187f9     7A 8B 8E 88 
187fd     92 89 7C 7E | 	byte	$78, $72, $7a, $80, $75, $71, $7d, $78, $7a, $8b, $8e, $88, $92, $89, $7c, $7e
18801     75 72 7B 7F 
18805     72 74 7A 76 
18809     7E 8E 85 8D 
1880d     92 86 7D 7E | 	byte	$75, $72, $7b, $7f, $72, $74, $7a, $76, $7e, $8e, $85, $8d, $92, $86, $7d, $7e
18811     72 74 7D 7D 
18815     6F 77 7A 72 
18819     85 8A 87 8F 
1881d     94 82 7E 7D | 	byte	$72, $74, $7d, $7d, $6f, $77, $7a, $72, $85, $8a, $87, $8f, $94, $82, $7e, $7d
18821     71 74 80 75 
18825     71 7B 73 77 
18829     85 8B 87 93 
1882d     90 80 81 7B | 	byte	$71, $74, $80, $75, $71, $7b, $73, $77, $85, $8b, $87, $93, $90, $80, $81, $7b
18831     6C 79 80 74 
18835     72 7A 72 7A 
18839     8A 86 8A 97 
1883d     8C 80 83 75 | 	byte	$6c, $79, $80, $74, $72, $7a, $72, $7a, $8a, $86, $8a, $97, $8c, $80, $83, $75
18841     6D 7F 7D 72 
18845     77 76 71 80 
18849     88 85 8F 98 
1884d     86 83 83 73 | 	byte	$6d, $7f, $7d, $72, $77, $76, $71, $80, $88, $85, $8f, $98, $86, $83, $83, $73
18851     6F 7F 78 72 
18855     7D 6F 74 82 
18859     88 82 93 94 
1885d     86 84 81 6B | 	byte	$6f, $7f, $78, $72, $7d, $6f, $74, $82, $88, $82, $93, $94, $86, $84, $81, $6b
18861     79 7C 74 75 
18865     78 6D 75 86 
18869     81 8A 96 92 
1886d     81 8B 7B 6E | 	byte	$79, $7c, $74, $75, $78, $6d, $75, $86, $81, $8a, $96, $92, $81, $8b, $7b, $6e
18871     79 7A 74 79 
18875     75 6B 7C 86 
18879     80 8C 9B 86 
1887d     8B 86 78 70 | 	byte	$79, $7a, $74, $79, $75, $6b, $7c, $86, $80, $8c, $9b, $86, $8b, $86, $78, $70
18881     7B 74 77 79 
18885     70 69 83 83 
18889     7E 94 92 8E 
1888d     8C 84 71 79 | 	byte	$7b, $74, $77, $79, $70, $69, $83, $83, $7e, $94, $92, $8e, $8c, $84, $71, $79
18891     7B 70 76 7D 
18895     69 71 81 80 
18899     88 92 91 8C 
1889d     93 80 70 7C | 	byte	$7b, $70, $76, $7d, $69, $71, $81, $80, $88, $92, $91, $8c, $93, $80, $70, $7c
188a1     78 72 79 76 
188a5     6A 77 7D 7F 
188a9     8E 96 8C 91 
188ad     90 7C 73 7C | 	byte	$78, $72, $79, $76, $6a, $77, $7d, $7f, $8e, $96, $8c, $91, $90, $7c, $73, $7c
188b1     72 77 7C 6D 
188b5     6C 7C 7C 7E 
188b9     94 92 8C 94 
188bd     8D 76 7C 76 | 	byte	$72, $77, $7c, $6d, $6c, $7c, $7c, $7e, $94, $92, $8c, $94, $8d, $76, $7c, $76
188c1     70 7A 7B 68 
188c5     6E 7D 78 85 
188c9     91 8D 91 9A 
188cd     82 77 7C 77 | 	byte	$70, $7a, $7b, $68, $6e, $7d, $78, $85, $91, $8d, $91, $9a, $82, $77, $7c, $77
188d1     70 7B 73 69 
188d5     77 73 79 8A 
188d9     95 89 94 95 
188dd     81 7D 7A 6E | 	byte	$70, $7b, $73, $69, $77, $73, $79, $8a, $95, $89, $94, $95, $81, $7d, $7a, $6e
188e1     75 7F 6B 6C 
188e5     77 77 77 90 
188e9     8F 8C 9B 8E 
188ed     80 7E 78 6B | 	byte	$75, $7f, $6b, $6c, $77, $77, $77, $90, $8f, $8c, $9b, $8e, $80, $7e, $78, $6b
188f1     7B 79 6B 6D 
188f5     77 71 80 8F 
188f9     8A 93 9C 8A 
188fd     80 7F 73 71 | 	byte	$7b, $79, $6b, $6d, $77, $71, $80, $8f, $8a, $93, $9c, $8a, $80, $7f, $73, $71
18901     78 76 68 76 
18905     6E 74 8A 90 
18909     87 99 99 8A 
1890d     80 7D 6E 76 | 	byte	$78, $76, $68, $76, $6e, $74, $8a, $90, $87, $99, $99, $8a, $80, $7d, $6e, $76
18911     7B 6B 6E 75 
18915     70 73 8A 8B 
18919     90 97 95 84 
1891d     8A 76 6C 7A | 	byte	$7b, $6b, $6e, $75, $70, $73, $8a, $8b, $90, $97, $95, $84, $8a, $76, $6c, $7a
18921     78 6D 6C 70 
18925     6F 7D 8A 87 
18929     92 9E 8B 8A 
1892d     87 76 6D 77 | 	byte	$78, $6d, $6c, $70, $6f, $7d, $8a, $87, $92, $9e, $8b, $8a, $87, $76, $6d, $77
18931     74 71 6F 6C 
18935     6E 83 89 85 
18939     98 9C 8C 89 
1893d     80 73 75 78 | 	byte	$74, $71, $6f, $6c, $6e, $83, $89, $85, $98, $9c, $8c, $89, $80, $73, $75, $78
18941     6D 6F 75 6A 
18945     6F 83 89 8E 
18949     98 97 8F 8C 
1894d     7E 6E 79 76 | 	byte	$6d, $6f, $75, $6a, $6f, $83, $89, $8e, $98, $97, $8f, $8c, $7e, $6e, $79, $76
18951     6F 70 6F 6D 
18955     76 81 87 94 
18959     9A 90 90 8E 
1895d     78 71 75 74 | 	byte	$6f, $70, $6f, $6d, $76, $81, $87, $94, $9a, $90, $90, $8e, $78, $71, $75, $74
18961     6F 71 68 6D 
18965     7D 82 85 97 
18969     99 93 91 84 
1896d     79 75 75 6F | 	byte	$6f, $71, $68, $6d, $7d, $82, $85, $97, $99, $93, $91, $84, $79, $75, $75, $6f
18971     6F 73 69 6D 
18975     7C 82 8D 94 
18979     97 95 92 81 
1897d     74 78 74 6E | 	byte	$6f, $73, $69, $6d, $7c, $82, $8d, $94, $97, $95, $92, $81, $74, $78, $74, $6e
18981     70 6F 6A 72 
18985     7A 81 93 96 
18989     93 95 95 7F 
1898d     76 76 72 71 | 	byte	$70, $6f, $6a, $72, $7a, $81, $93, $96, $93, $95, $95, $7f, $76, $76, $72, $71
18991     71 6A 6A 76 
18995     7C 80 95 98 
18999     95 96 8E 7F 
1899d     79 74 6E 75 | 	byte	$71, $6a, $6a, $76, $7c, $80, $95, $98, $95, $96, $8e, $7f, $79, $74, $6e, $75
189a1     6F 68 6A 76 
189a5     7C 86 95 95 
189a9     99 98 89 7E 
189ad     79 74 6F 71 | 	byte	$6f, $68, $6a, $76, $7c, $86, $95, $95, $99, $98, $89, $7e, $79, $74, $6f, $71
189b1     6F 68 6F 73 
189b5     7D 8E 95 94 
189b9     99 96 88 7E 
189bd     78 71 71 72 | 	byte	$6f, $68, $6f, $73, $7d, $8e, $95, $94, $99, $96, $88, $7e, $78, $71, $71, $72
189c1     6A 69 70 75 
189c5     7E 8F 95 97 
189c9     98 97 85 7F 
189cd     75 6F 73 73 | 	byte	$6a, $69, $70, $75, $7e, $8f, $95, $97, $98, $97, $85, $7f, $75, $6f, $73, $73
189d1     65 6B 71 76 
189d5     81 8E 95 99 
189d9     9A 8F 84 81 
189dd     74 6D 73 6E | 	byte	$65, $6b, $71, $76, $81, $8e, $95, $99, $9a, $8f, $84, $81, $74, $6d, $73, $6e
189e1     6A 6B 6F 76 
189e5     86 91 93 99 
189e9     9C 8D 84 7E 
189ed     72 70 70 6E | 	byte	$6a, $6b, $6f, $76, $86, $91, $93, $99, $9c, $8d, $84, $7e, $72, $70, $70, $6e
189f1     67 6D 6F 7A 
189f5     87 92 91 9E 
189f9     98 8C 83 7B 
189fd     73 6F 72 69 | 	byte	$67, $6d, $6f, $7a, $87, $92, $91, $9e, $98, $8c, $83, $7b, $73, $6f, $72, $69
18a01     6A 6B 6E 7B 
18a05     8D 8F 96 9D 
18a09     97 8A 84 7A 
18a0d     70 72 6D 6A | 	byte	$6a, $6b, $6e, $7b, $8d, $8f, $96, $9d, $97, $8a, $84, $7a, $70, $72, $6d, $6a
18a11     6B 6C 6C 80 
18a15     8C 90 98 9E 
18a19     95 8B 82 76 
18a1d     74 6E 6D 67 | 	byte	$6b, $6c, $6c, $80, $8c, $90, $98, $9e, $95, $8b, $82, $76, $74, $6e, $6d, $67
18a21     6E 6A 6F 80 
18a25     91 92 9A 9B 
18a29     94 8D 80 75 
18a2d     6F 73 69 6B | 	byte	$6e, $6a, $6f, $80, $91, $92, $9a, $9b, $94, $8d, $80, $75, $6f, $73, $69, $6b
18a31     6B 6C 70 84 
18a35     8D 95 9C 9A 
18a39     93 89 80 73 
18a3d     75 6D 69 69 | 	byte	$6b, $6c, $70, $84, $8d, $95, $9c, $9a, $93, $89, $80, $73, $75, $6d, $69, $69
18a41     6E 68 77 82 
18a45     90 97 9C 99 
18a49     90 8E 79 75 
18a4d     71 6D 68 6C | 	byte	$6e, $68, $77, $82, $90, $97, $9c, $99, $90, $8e, $79, $75, $71, $6d, $68, $6c
18a51     68 6A 7B 85 
18a55     90 99 9B 96 
18a59     94 89 79 73 
18a5d     72 6A 6B 68 | 	byte	$68, $6a, $7b, $85, $90, $99, $9b, $96, $94, $89, $79, $73, $72, $6a, $6b, $68
18a61     68 6D 7F 84 
18a65     92 9C 9B 97 
18a69     93 87 78 76 
18a6d     6E 69 6B 6A | 	byte	$68, $6d, $7f, $84, $92, $9c, $9b, $97, $93, $87, $78, $76, $6e, $69, $6b, $6a
18a71     66 72 7D 87 
18a75     96 9C 98 98 
18a79     92 81 79 74 
18a7d     6C 67 6F 65 | 	byte	$66, $72, $7d, $87, $96, $9c, $98, $98, $92, $81, $79, $74, $6c, $67, $6f, $65
18a81     69 70 80 89 
18a85     9A 9A 97 9A 
18a89     8F 80 77 74 
18a8d     68 6C 69 65 | 	byte	$69, $70, $80, $89, $9a, $9a, $97, $9a, $8f, $80, $77, $74, $68, $6c, $69, $65
18a91     6D 77 7D 8A 
18a95     9C 9C 98 98 
18a99     8A 80 79 6D 
18a9d     68 6E 68 61 | 	byte	$6d, $77, $7d, $8a, $9c, $9c, $98, $98, $8a, $80, $79, $6d, $68, $6e, $68, $61
18aa1     6E 77 80 8D 
18aa5     9C 98 9C 97 
18aa9     87 80 79 69 
18aad     68 70 64 65 | 	byte	$6e, $77, $80, $8d, $9c, $98, $9c, $97, $87, $80, $79, $69, $68, $70, $64, $65
18ab1     70 77 80 96 
18ab5     9A 99 9D 95 
18ab9     85 80 76 69 
18abd     6B 6B 64 69 | 	byte	$70, $77, $80, $96, $9a, $99, $9d, $95, $85, $80, $76, $69, $6b, $6b, $64, $69
18ac1     72 74 86 99 
18ac5     99 99 9D 92 
18ac9     86 80 70 68 
18acd     70 68 61 6C | 	byte	$72, $74, $86, $99, $99, $99, $9d, $92, $86, $80, $70, $68, $70, $68, $61, $6c
18ad1     73 76 8B 98 
18ad5     98 9F 9B 8C 
18ad9     8A 80 6A 6B 
18add     6D 68 64 6F | 	byte	$73, $76, $8b, $98, $98, $9f, $9b, $8c, $8a, $80, $6a, $6b, $6d, $68, $64, $6f
18ae1     6F 7B 90 95 
18ae5     99 A2 98 89 
18ae9     8A 7D 6C 6B 
18aed     6B 65 68 6E | 	byte	$6f, $7b, $90, $95, $99, $a2, $98, $89, $8a, $7d, $6c, $6b, $6b, $65, $68, $6e
18af1     6C 80 94 92 
18af5     9B A3 96 8B 
18af9     88 75 6E 6E 
18afd     65 65 6C 6E | 	byte	$6c, $80, $94, $92, $9b, $a3, $96, $8b, $88, $75, $6e, $6e, $65, $65, $6c, $6e
18b01     6D 85 91 97 
18b05     9F 9E 91 8E 
18b09     87 70 6B 6E 
18b0d     63 67 6B 68 | 	byte	$6d, $85, $91, $97, $9f, $9e, $91, $8e, $87, $70, $6b, $6e, $63, $67, $6b, $68
18b11     75 88 90 97 
18b15     A4 9A 90 8F 
18b19     81 70 6D 69 
18b1d     63 6C 68 67 | 	byte	$75, $88, $90, $97, $a4, $9a, $90, $8f, $81, $70, $6d, $69, $63, $6c, $68, $67
18b21     7B 8B 8F 9A 
18b25     A2 97 94 8D 
18b29     7B 72 70 65 
18b2d     62 6C 69 6B | 	byte	$7b, $8b, $8f, $9a, $a2, $97, $94, $8d, $7b, $72, $70, $65, $62, $6c, $69, $6b
18b31     7C 8A 91 A0 
18b35     9F 96 96 89 
18b39     7A 72 6F 62 
18b3d     66 6A 65 72 | 	byte	$7c, $8a, $91, $a0, $9f, $96, $96, $89, $7a, $72, $6f, $62, $66, $6a, $65, $72
18b41     7F 89 95 A3 
18b45     9B 97 97 86 
18b49     78 73 6A 62 
18b4d     6C 68 64 73 | 	byte	$7f, $89, $95, $a3, $9b, $97, $97, $86, $78, $73, $6a, $62, $6c, $68, $64, $73
18b51     81 8A 99 A0 
18b55     9A 9A 95 80 
18b59     7B 74 67 63 
18b5d     6B 67 68 78 | 	byte	$81, $8a, $99, $a0, $9a, $9a, $95, $80, $7b, $74, $67, $63, $6b, $67, $68, $78
18b61     7F 8F 9E 9E 
18b65     97 9D 90 80 
18b69     78 70 64 66 
18b6d     6A 61 6D 77 | 	byte	$7f, $8f, $9e, $9e, $97, $9d, $90, $80, $78, $70, $64, $66, $6a, $61, $6d, $77
18b71     80 8E A0 9B 
18b75     9B 9A 8E 7F 
18b79     7A 6A 64 6B 
18b7d     66 64 70 7B | 	byte	$80, $8e, $a0, $9b, $9b, $9a, $8e, $7f, $7a, $6a, $64, $6b, $66, $64, $70, $7b
18b81     7F 97 9C 9B 
18b85     9D 99 86 80 
18b89     79 69 65 6A 
18b8d     65 65 71 76 | 	byte	$7f, $97, $9c, $9b, $9d, $99, $86, $80, $79, $69, $65, $6a, $65, $65, $71, $76
18b91     84 98 9B 9A 
18b95     9F 99 86 80 
18b99     74 68 69 67 
18b9d     62 68 73 77 | 	byte	$84, $98, $9b, $9a, $9f, $99, $86, $80, $74, $68, $69, $67, $62, $68, $73, $77
18ba1     87 9A 9A 9C 
18ba5     9C 93 87 81 
18ba9     6F 64 6C 65 
18bad     62 6A 73 7A | 	byte	$87, $9a, $9a, $9c, $9c, $93, $87, $81, $6f, $64, $6c, $65, $62, $6a, $73, $7a
18bb1     8B 99 9A A0 
18bb5     9E 8D 88 80 
18bb9     6B 68 69 65 
18bbd     64 6D 70 7D | 	byte	$8b, $99, $9a, $a0, $9e, $8d, $88, $80, $6b, $68, $69, $65, $64, $6d, $70, $7d
18bc1     91 99 99 A1 
18bc5     9C 8C 88 7B 
18bc9     6C 68 68 61 
18bcd     69 6C 72 7D | 	byte	$91, $99, $99, $a1, $9c, $8c, $88, $7b, $6c, $68, $68, $61, $69, $6c, $72, $7d
18bd1     94 97 9D A1 
18bd5     97 8F 87 78 
18bd9     69 6B 66 62 
18bdd     68 6D 74 84 | 	byte	$94, $97, $9d, $a1, $97, $8f, $87, $78, $69, $6b, $66, $62, $68, $6d, $74, $84
18be1     92 98 A0 A0 
18be5     94 8F 86 72 
18be9     6A 6A 64 64 
18bed     6A 6B 76 87 | 	byte	$92, $98, $a0, $a0, $94, $8f, $86, $72, $6a, $6a, $64, $64, $6a, $6b, $76, $87
18bf1     93 97 A2 9E 
18bf5     93 8F 80 71 
18bf9     6B 69 62 66 
18bfd     6B 6A 7A 89 | 	byte	$93, $97, $a2, $9e, $93, $8f, $80, $71, $6b, $69, $62, $66, $6b, $6a, $7a, $89
18c01     93 9B A1 9C 
18c05     94 8D 7C 70 
18c09     6D 66 63 68 
18c0d     6B 6B 7D 8A | 	byte	$93, $9b, $a1, $9c, $94, $8d, $7c, $70, $6d, $66, $63, $68, $6b, $6b, $7d, $8a
18c11     92 9F 9F 99 
18c15     95 8D 79 6F 
18c19     6C 64 63 6A 
18c1d     67 70 80 8A | 	byte	$92, $9f, $9f, $99, $95, $8d, $79, $6f, $6c, $64, $63, $6a, $67, $70, $80, $8a
18c21     91 A0 9F 98 
18c25     94 89 78 70 
18c29     6C 60 67 69 
18c2d     67 72 83 8A | 	byte	$91, $a0, $9f, $98, $94, $89, $78, $70, $6c, $60, $67, $69, $67, $72, $83, $8a
18c31     96 A0 9E 98 
18c35     96 82 76 72 
18c39     67 62 67 6A 
18c3d     67 78 80 8E | 	byte	$96, $a0, $9e, $98, $96, $82, $76, $72, $67, $62, $67, $6a, $67, $78, $80, $8e
18c41     99 A0 99 9B 
18c45     93 80 76 71 
18c49     66 62 68 66 
18c4d     6C 79 83 8A | 	byte	$99, $a0, $99, $9b, $93, $80, $76, $71, $66, $62, $68, $66, $6c, $79, $83, $8a
18c51     A0 9C 99 9B 
18c55     90 7E 76 6E 
18c59     63 66 67 65 
18c5d     6F 7D 81 90 | 	byte	$a0, $9c, $99, $9b, $90, $7e, $76, $6e, $63, $66, $67, $65, $6f, $7d, $81, $90
18c61     9E 9E 9A 9B 
18c65     8C 7E 76 69 
18c69     63 69 68 63 
18c6d     72 7C 83 94 | 	byte	$9e, $9e, $9a, $9b, $8c, $7e, $76, $69, $63, $69, $68, $63, $72, $7c, $83, $94
18c71     9E 9A 9E 98 
18c75     85 7E 78 67 
18c79     63 6A 64 67 
18c7d     75 7B 85 99 | 	byte	$9e, $9a, $9e, $98, $85, $7e, $78, $67, $63, $6a, $64, $67, $75, $7b, $85, $99
18c81     9C 9A 9F 96 
18c85     85 7F 73 64 
18c89     67 69 63 6A 
18c8d     78 7C 86 9A | 	byte	$9c, $9a, $9f, $96, $85, $7f, $73, $64, $67, $69, $63, $6a, $78, $7c, $86, $9a
18c91     99 9D 9E 93 
18c95     83 80 6F 63 
18c99     69 66 62 6E 
18c9d     77 7B 8F 98 | 	byte	$99, $9d, $9e, $93, $83, $80, $6f, $63, $69, $66, $62, $6e, $77, $7b, $8f, $98
18ca1     99 9E A0 8D 
18ca5     84 7F 6B 64 
18ca9     6A 66 64 70 
18cad     75 7E 93 99 | 	byte	$99, $9e, $a0, $8d, $84, $7f, $6b, $64, $6a, $66, $64, $70, $75, $7e, $93, $99
18cb1     98 A1 9C 8B 
18cb5     84 7A 67 6A 
18cb9     68 62 68 73 
18cbd     75 82 94 98 | 	byte	$98, $a1, $9c, $8b, $84, $7a, $67, $6a, $68, $62, $68, $73, $75, $82, $94, $98
18cc1     9B A2 96 8B 
18cc5     87 73 69 6A 
18cc9     69 60 6B 72 
18ccd     76 86 94 94 | 	byte	$9b, $a2, $96, $8b, $87, $73, $69, $6a, $69, $60, $6b, $72, $76, $86, $94, $94
18cd1     A0 A1 92 8B 
18cd5     84 72 67 6C 
18cd9     64 64 6D 6F 
18cdd     79 8B 91 97 | 	byte	$a0, $a1, $92, $8b, $84, $72, $67, $6c, $64, $64, $6d, $6f, $79, $8b, $91, $97
18ce1     9F A1 8F 8C 
18ce5     80 6F 6C 69 
18ce9     62 69 70 6E 
18ced     7B 8C 92 96 | 	byte	$9f, $a1, $8f, $8c, $80, $6f, $6c, $69, $62, $69, $70, $6e, $7b, $8c, $92, $96
18cf1     A2 99 91 8D 
18cf5     7A 6C 6F 67 
18cf9     61 6B 70 6F 
18cfd     80 8D 90 9D | 	byte	$a2, $99, $91, $8d, $7a, $6c, $6f, $67, $61, $6b, $70, $6f, $80, $8d, $90, $9d
18d01     A0 95 92 8C 
18d05     77 6C 6E 65 
18d09     64 6E 6B 72 
18d0d     84 8B 91 9F | 	byte	$a0, $95, $92, $8c, $77, $6c, $6e, $65, $64, $6e, $6b, $72, $84, $8b, $91, $9f
18d11     9E 94 92 87 
18d15     76 71 6B 60 
18d19     6A 6E 6A 76 
18d1d     86 8A 95 9E | 	byte	$9e, $94, $92, $87, $76, $71, $6b, $60, $6a, $6e, $6a, $76, $86, $8a, $95, $9e
18d21     9A 95 93 80 
18d25     74 72 69 62 
18d29     6C 6C 6C 7B 
18d2d     86 89 9B 9E | 	byte	$9a, $95, $93, $80, $74, $72, $69, $62, $6c, $6c, $6c, $7b, $86, $89, $9b, $9e
18d31     95 97 91 7E 
18d35     73 71 66 65 
18d39     6D 6A 70 80 
18d3d     82 8C 9E 9B | 	byte	$95, $97, $91, $7e, $73, $71, $66, $65, $6d, $6a, $70, $80, $82, $8c, $9e, $9b
18d41     96 98 8C 7C 
18d45     76 6B 63 6B 
18d49     6C 67 75 80 
18d4d     82 90 9C 98 | 	byte	$96, $98, $8c, $7c, $76, $6b, $63, $6b, $6c, $67, $75, $80, $82, $90, $9c, $98
18d51     97 98 84 7B 
18d55     77 6A 65 6C 
18d59     6B 6A 79 7F 
18d5d     85 95 9A 96 | 	byte	$97, $98, $84, $7b, $77, $6a, $65, $6c, $6b, $6a, $79, $7f, $85, $95, $9a, $96
18d61     9C 94 81 7D 
18d65     75 68 68 6C 
18d69     68 6D 7B 7E 
18d6d     86 99 99 97 | 	byte	$9c, $94, $81, $7d, $75, $68, $68, $6c, $68, $6d, $7b, $7e, $86, $99, $99, $97
18d71     9B 8F 82 7D 
18d75     6F 66 6A 6C 
18d79     66 72 7B 7F 
18d7d     8B 97 96 9A | 	byte	$9b, $8f, $82, $7d, $6f, $66, $6a, $6c, $66, $72, $7b, $7f, $8b, $97, $96, $9a
18d81     99 8A 82 7D 
18d85     6E 65 6E 68 
18d89     6A 75 79 7F 
18d8d     90 95 95 9C | 	byte	$99, $8a, $82, $7d, $6e, $65, $6e, $68, $6a, $75, $79, $7f, $90, $95, $95, $9c
18d91     97 88 81 7B 
18d95     6B 6A 6B 66 
18d99     6D 77 77 83 
18d9d     91 94 96 9C | 	byte	$97, $88, $81, $7b, $6b, $6a, $6b, $66, $6d, $77, $77, $83, $91, $94, $96, $9c
18da1     93 87 81 76 
18da5     69 6E 6A 67 
18da9     70 76 78 88 
18dad     91 91 9A 9B | 	byte	$93, $87, $81, $76, $69, $6e, $6a, $67, $70, $76, $78, $88, $91, $91, $9a, $9b
18db1     8F 87 82 71 
18db5     6C 6D 68 6A 
18db9     75 74 79 8A 
18dbd     90 93 9A 98 | 	byte	$8f, $87, $82, $71, $6c, $6d, $68, $6a, $75, $74, $79, $8a, $90, $93, $9a, $98
18dc1     8C 89 7F 6F 
18dc5     6E 6E 66 6D 
18dc9     74 74 7E 8A 
18dcd     8F 95 9B 93 | 	byte	$8c, $89, $7f, $6f, $6e, $6e, $66, $6d, $74, $74, $7e, $8a, $8f, $95, $9b, $93
18dd1     8E 89 79 6F 
18dd5     71 6A 67 6F 
18dd9     73 75 80 8B 
18ddd     8F 99 99 91 | 	byte	$8e, $89, $79, $6f, $71, $6a, $67, $6f, $73, $75, $80, $8b, $8f, $99, $99, $91
18de1     8E 89 74 71 
18de5     6F 69 6A 71 
18de9     71 77 85 88 
18ded     8E 99 98 8E | 	byte	$8e, $89, $74, $71, $6f, $69, $6a, $71, $71, $77, $85, $88, $8e, $99, $98, $8e
18df1     90 84 76 71 
18df5     6F 67 6D 71 
18df9     70 7C 85 87 
18dfd     90 9B 92 91 | 	byte	$90, $84, $76, $71, $6f, $67, $6d, $71, $70, $7c, $85, $87, $90, $9b, $92, $91
18e01     8D 81 74 74 
18e05     6B 69 70 6F 
18e09     70 7E 84 88 
18e0d     96 97 91 91 | 	byte	$8d, $81, $74, $74, $6b, $69, $70, $6f, $70, $7e, $84, $88, $96, $97, $91, $91
18e11     8D 7E 76 72 
18e15     6A 6B 72 6D 
18e19     73 81 82 8A 
18e1d     96 95 90 93 | 	byte	$8d, $7e, $76, $72, $6a, $6b, $72, $6d, $73, $81, $82, $8a, $96, $95, $90, $93
18e21     88 7B 78 70 
18e25     68 6F 70 6E 
18e29     76 81 81 8D 
18e2d     97 91 93 91 | 	byte	$88, $7b, $78, $70, $68, $6f, $70, $6e, $76, $81, $81, $8d, $97, $91, $93, $91
18e31     84 7C 78 6D 
18e35     6A 71 6F 6F 
18e39     7A 80 82 91 
18e3d     94 91 94 90 | 	byte	$84, $7c, $78, $6d, $6a, $71, $6f, $6f, $7a, $80, $82, $91, $94, $91, $94, $90
18e41     81 7E 76 6C 
18e45     6D 71 6C 71 
18e49     7D 7E 85 91 
18e4d     92 91 94 8C | 	byte	$81, $7e, $76, $6c, $6d, $71, $6c, $71, $7d, $7e, $85, $91, $92, $91, $94, $8c
18e51     81 7E 74 6A 
18e55     70 70 6E 75 
18e59     7C 7F 89 92 
18e5d     8F 94 94 88 | 	byte	$81, $7e, $74, $6a, $70, $70, $6e, $75, $7c, $7f, $89, $92, $8f, $94, $94, $88
18e61     80 7E 72 6D 
18e65     70 6F 6F 78 
18e69     7A 80 8D 8F 
18e6d     8F 95 93 85 | 	byte	$80, $7e, $72, $6d, $70, $6f, $6f, $78, $7a, $80, $8d, $8f, $8f, $95, $93, $85
18e71     81 7B 71 6F 
18e75     71 6C 72 79 
18e79     7A 82 8E 8F 
18e7d     90 95 8D 86 | 	byte	$81, $7b, $71, $6f, $71, $6c, $72, $79, $7a, $82, $8e, $8f, $90, $95, $8d, $86
18e81     82 79 6E 72 
18e85     70 6D 74 78 
18e89     7B 85 8C 8D 
18e8d     93 94 8A 86 | 	byte	$82, $79, $6e, $72, $70, $6d, $74, $78, $7b, $85, $8c, $8d, $93, $94, $8a, $86
18e91     81 76 71 71 
18e95     6F 70 76 76 
18e99     7D 87 8C 8D 
18e9d     93 92 89 86 | 	byte	$81, $76, $71, $71, $6f, $70, $76, $76, $7d, $87, $8c, $8d, $93, $92, $89, $86
18ea1     7F 75 73 72 
18ea5     6D 72 77 76 
18ea9     7F 88 8C 8E 
18ead     93 8F 8A 87 | 	byte	$7f, $75, $73, $72, $6d, $72, $77, $76, $7f, $88, $8c, $8e, $93, $8f, $8a, $87
18eb1     7C 74 75 70 
18eb5     6D 74 76 78 
18eb9     80 87 8A 90 
18ebd     93 8C 8A 85 | 	byte	$7c, $74, $75, $70, $6d, $74, $76, $78, $80, $87, $8a, $90, $93, $8c, $8a, $85
18ec1     7A 75 73 70 
18ec5     70 75 75 79 
18ec9     83 87 8A 91 
18ecd     90 8D 8A 82 | 	byte	$7a, $75, $73, $70, $70, $75, $75, $79, $83, $87, $8a, $91, $90, $8d, $8a, $82
18ed1     79 76 73 6E 
18ed5     72 76 74 7B 
18ed9     83 86 8E 90 
18edd     8F 8D 8B 80 | 	byte	$79, $76, $73, $6e, $72, $76, $74, $7b, $83, $86, $8e, $90, $8f, $8d, $8b, $80
18ee1     77 78 72 6F 
18ee5     72 74 76 7F 
18ee9     82 86 8E 91 
18eed     8D 8D 89 7F | 	byte	$77, $78, $72, $6f, $72, $74, $76, $7f, $82, $86, $8e, $91, $8d, $8d, $89, $7f
18ef1     79 76 71 71 
18ef5     74 73 77 7F 
18ef9     82 86 8F 8F 
18efd     8D 8D 87 7E | 	byte	$79, $76, $71, $71, $74, $73, $77, $7f, $82, $86, $8f, $8f, $8d, $8d, $87, $7e
18f01     79 74 71 73 
18f05     74 73 78 80 
18f09     82 89 8E 8E 
18f0d     8E 8C 85 7D | 	byte	$79, $74, $71, $73, $74, $73, $78, $80, $82, $89, $8e, $8e, $8e, $8c, $85, $7d
18f11     7A 75 70 74 
18f15     72 75 7B 80 
18f19     82 89 8F 8C 
18f1d     8D 8B 83 7C | 	byte	$7a, $75, $70, $74, $72, $75, $7b, $80, $82, $89, $8f, $8c, $8d, $8b, $83, $7c
18f21     7A 73 73 73 
18f25     74 75 7C 80 
18f29     83 8B 8D 8C 
18f2d     8E 8A 81 7F | 	byte	$7a, $73, $73, $73, $74, $75, $7c, $80, $83, $8b, $8d, $8c, $8e, $8a, $81, $7f
18f31     77 74 72 74 
18f35     73 76 7D 80 
18f39     84 8C 8C 8D 
18f3d     8E 87 81 7D | 	byte	$77, $74, $72, $74, $73, $76, $7d, $80, $84, $8c, $8c, $8d, $8e, $87, $81, $7d
18f41     78 73 74 74 
18f45     74 78 7E 7F 
18f49     87 8B 8C 8D 
18f4d     8D 87 80 7D | 	byte	$78, $73, $74, $74, $74, $78, $7e, $7f, $87, $8b, $8c, $8d, $8d, $87, $80, $7d
18f51     76 73 75 73 
18f55     74 79 7D 80 
18f59     87 8B 8B 8E 
18f5d     8C 84 81 7C | 	byte	$76, $73, $75, $73, $74, $79, $7d, $80, $87, $8b, $8b, $8e, $8c, $84, $81, $7c
18f61     76 74 76 73 
18f65     75 7B 7C 81 
18f69     87 8A 8B 8E 
18f6d     89 85 80 7D | 	byte	$76, $74, $76, $73, $75, $7b, $7c, $81, $87, $8a, $8b, $8e, $89, $85, $80, $7d
18f71     75 76 75 73 
18f75     77 7B 7D 81 
18f79     89 88 8C 8C 
18f7d     8A 83 80 7A | 	byte	$75, $76, $75, $73, $77, $7b, $7d, $81, $89, $88, $8c, $8c, $8a, $83, $80, $7a
18f81     75 77 74 74 
18f85     78 7B 7D 84 
18f89     87 8A 8B 8D 
18f8d     87 85 80 79 | 	byte	$75, $77, $74, $74, $78, $7b, $7d, $84, $87, $8a, $8b, $8d, $87, $85, $80, $79
18f91     76 78 74 76 
18f95     79 7B 7E 85 
18f99     87 89 8D 8B 
18f9d     87 84 7F 78 | 	byte	$76, $78, $74, $76, $79, $7b, $7e, $85, $87, $89, $8d, $8b, $87, $84, $7f, $78
18fa1     77 76 74 77 
18fa5     79 7A 80 85 
18fa9     86 8A 8D 8A 
18fad     86 83 7E 79 | 	byte	$77, $76, $74, $77, $79, $7a, $80, $85, $86, $8a, $8d, $8a, $86, $83, $7e, $79
18fb1     78 75 74 79 
18fb5     79 7B 80 84 
18fb9     87 89 8C 88 
18fbd     88 82 7B 79 | 	byte	$78, $75, $74, $79, $79, $7b, $80, $84, $87, $89, $8c, $88, $88, $82, $7b, $79
18fc1     78 75 76 78 
18fc5     79 7C 81 83 
18fc9     87 8C 8A 88 
18fcd     88 81 7B 7A | 	byte	$78, $75, $76, $78, $79, $7c, $81, $83, $87, $8c, $8a, $88, $88, $81, $7b, $7a
18fd1     77 75 77 79 
18fd5     78 7E 82 82 
18fd9     88 8C 89 88 
18fdd     87 80 7D 7A | 	byte	$77, $75, $77, $79, $78, $7e, $82, $82, $88, $8c, $89, $88, $87, $80, $7d, $7a
18fe1     77 74 7A 77 
18fe5     79 80 81 83 
18fe9     89 89 88 8A 
18fed     85 7E 7C 7B | 	byte	$77, $74, $7a, $77, $79, $80, $81, $83, $89, $89, $88, $8a, $85, $7e, $7c, $7b
18ff1     75 77 78 78 
18ff5     7B 80 80 84 
18ff9     8B 88 88 89 
18ffd     85 7E 7D 79 | 	byte	$75, $77, $78, $78, $7b, $80, $80, $84, $8b, $88, $88, $89, $85, $7e, $7d, $79
19001     76 78 77 77 
19005     7D 80 80 85 
19009     8A 88 89 89 
1900d     82 80 7D 77 | 	byte	$76, $78, $77, $77, $7d, $80, $80, $85, $8a, $88, $89, $89, $82, $80, $7d, $77
19011     77 7B 76 77 
19015     7E 80 80 86 
19019     88 88 8B 87 
1901d     81 80 7D 75 | 	byte	$77, $7b, $76, $77, $7e, $80, $80, $86, $88, $88, $8b, $87, $81, $80, $7d, $75
19021     78 79 77 79 
19025     7D 7E 81 88 
19029     85 88 8B 87 
1902d     80 80 7B 77 | 	byte	$78, $79, $77, $79, $7d, $7e, $81, $88, $85, $88, $8b, $87, $80, $80, $7b, $77
19031     79 78 77 7C 
19035     7D 7D 83 87 
19039     86 89 8A 84 
1903d     82 80 7A 78 | 	byte	$79, $78, $77, $7c, $7d, $7d, $83, $87, $86, $89, $8a, $84, $82, $80, $7a, $78
19041     7A 77 78 7C 
19045     7D 7F 84 85 
19049     86 8B 88 83 
1904d     83 7F 79 79 | 	byte	$7a, $77, $78, $7c, $7d, $7f, $84, $85, $86, $8b, $88, $83, $83, $7f, $79, $79
19051     79 77 79 7C 
19055     7B 80 85 83 
19059     87 8B 87 83 
1905d     83 7D 79 7A | 	byte	$79, $77, $79, $7c, $7b, $80, $85, $83, $87, $8b, $87, $83, $83, $7d, $79, $7a
19061     78 77 7B 7C 
19065     7A 81 84 84 
19069     87 8A 86 85 
1906d     81 7B 7A 7B | 	byte	$78, $77, $7b, $7c, $7a, $81, $84, $84, $87, $8a, $86, $85, $81, $7b, $7a, $7b
19071     77 78 7C 7A 
19075     7E 80 83 85 
19079     89 88 85 85 
1907d     81 7B 7B 7A | 	byte	$77, $78, $7c, $7a, $7e, $80, $83, $85, $89, $88, $85, $85, $81, $7b, $7b, $7a
19081     77 7B 7A 7A 
19085     7E 82 81 85 
19089     8A 87 85 86 
1908d     80 7C 7B 79 | 	byte	$77, $7b, $7a, $7a, $7e, $82, $81, $85, $8a, $87, $85, $86, $80, $7c, $7b, $79
19091     78 7C 7A 79 
19095     80 82 81 86 
19099     88 87 88 84 
1909d     7F 7D 7C 77 | 	byte	$78, $7c, $7a, $79, $80, $82, $81, $86, $88, $87, $88, $84, $7f, $7d, $7c, $77
190a1     78 7C 7A 7B 
190a5     80 80 83 87 
190a9     87 86 89 83 
190ad     7E 7D 7C 78 | 	byte	$78, $7c, $7a, $7b, $80, $80, $83, $87, $87, $86, $89, $83, $7e, $7d, $7c, $78
190b1     7A 7B 79 7D 
190b5     80 80 83 89 
190b9     86 87 87 82 
190bd     7E 7D 7A 79 | 	byte	$7a, $7b, $79, $7d, $80, $80, $83, $89, $86, $87, $87, $82, $7e, $7d, $7a, $79
190c1     7B 7A 78 7E 
190c5     80 80 84 87 
190c9     86 88 86 80 
190cd     80 7D 78 79 | 	byte	$7b, $7a, $78, $7e, $80, $80, $84, $87, $86, $88, $86, $80, $80, $7d, $78, $79
190d1     7D 79 79 7E 
190d5     7F 81 85 85 
190d9     86 89 86 80 
190dd     7F 7D 79 7A | 	byte	$7d, $79, $79, $7e, $7f, $81, $85, $85, $86, $89, $86, $80, $7f, $7d, $79, $7a
190e1     7B 79 7B 7E 
190e5     7E 81 86 85 
190e9     86 89 84 80 
190ed     80 7B 7A 7C | 	byte	$7b, $79, $7b, $7e, $7e, $81, $86, $85, $86, $89, $84, $80, $80, $7b, $7a, $7c
190f1     7A 79 7C 7E 
190f5     7E 82 85 85 
190f9     88 88 83 82 
190fd     7F 7A 7B 7C | 	byte	$7a, $79, $7c, $7e, $7e, $82, $85, $85, $88, $88, $83, $82, $7f, $7a, $7b, $7c
19101     7A 79 7C 7D 
19105     7F 83 84 85 
19109     89 87 82 81 
1910d     7F 7A 7C 7C | 	byte	$7a, $79, $7c, $7d, $7f, $83, $84, $85, $89, $87, $82, $81, $7f, $7a, $7c, $7c
19111     7A 7A 7C 7C 
19115     80 84 84 86 
19119     89 87 83 81 
1911d     7D 7B 7C 7B | 	byte	$7a, $7a, $7c, $7c, $80, $84, $84, $86, $89, $87, $83, $81, $7d, $7b, $7c, $7b
19121     79 7C 7C 7C 
19125     80 83 83 87 
19129     88 85 83 81 
1912d     7B 7B 7D 7A | 	byte	$79, $7c, $7c, $7c, $80, $83, $83, $87, $88, $85, $83, $81, $7b, $7b, $7d, $7a
19131     7A 7B 7B 7D 
19135     81 82 84 88 
19139     88 84 84 80 
1913d     7C 7B 7C 7A | 	byte	$7a, $7b, $7b, $7d, $81, $82, $84, $88, $88, $84, $84, $80, $7c, $7b, $7c, $7a
19141     7B 7B 7A 7F 
19145     81 81 84 88 
19149     87 85 83 7F 
1914d     7C 7D 7B 7A | 	byte	$7b, $7b, $7a, $7f, $81, $81, $84, $88, $87, $85, $83, $7f, $7c, $7d, $7b, $7a
19151     7B 7C 7A 7F 
19155     81 82 85 88 
19159     86 86 83 7E 
1915d     7C 7D 7B 7A | 	byte	$7b, $7c, $7a, $7f, $81, $82, $85, $88, $86, $86, $83, $7e, $7c, $7d, $7b, $7a
19161     7C 7A 7C 7F 
19165     81 82 86 87 
19169     86 86 82 7E 
1916d     7D 7D 7B 7C | 	byte	$7c, $7a, $7c, $7f, $81, $82, $86, $87, $86, $86, $82, $7e, $7d, $7d, $7b, $7c
19171     7B 7A 7C 80 
19175     80 83 86 87 
19179     86 86 81 7E 
1917d     7E 7B 7B 7C | 	byte	$7b, $7a, $7c, $80, $80, $83, $86, $87, $86, $86, $81, $7e, $7e, $7b, $7b, $7c
19181     7B 79 7D 80 
19185     80 84 86 85 
19189     87 86 7F 7E 
1918d     7E 7C 7B 7C | 	byte	$7b, $79, $7d, $80, $80, $84, $86, $85, $87, $86, $7f, $7e, $7e, $7c, $7b, $7c
19191     79 7B 7E 7F 
19195     80 85 86 85 
19199     87 85 80 7E 
1919d     7E 7B 7D 7B | 	byte	$79, $7b, $7e, $7f, $80, $85, $86, $85, $87, $85, $80, $7e, $7e, $7b, $7d, $7b
191a1     79 7B 7F 7E 
191a5     81 85 85 86 
191a9     87 83 80 80 
191ad     7C 7C 7D 7C | 	byte	$79, $7b, $7f, $7e, $81, $85, $85, $86, $87, $83, $80, $80, $7c, $7c, $7d, $7c
191b1     78 7D 7E 7E 
191b5     82 85 84 87 
191b9     87 81 80 7F 
191bd     7B 7C 7E 7A | 	byte	$78, $7d, $7e, $7e, $82, $85, $84, $87, $87, $81, $80, $7f, $7b, $7c, $7e, $7a
191c1     79 7D 7D 7F 
191c5     84 84 85 88 
191c9     86 81 80 7F 
191cd     7B 7D 7D 79 | 	byte	$79, $7d, $7d, $7f, $84, $84, $85, $88, $86, $81, $80, $7f, $7b, $7d, $7d, $79
191d1     7A 7D 7C 80 
191d5     84 83 86 88 
191d9     84 81 81 7D 
191dd     7C 7E 7C 79 | 	byte	$7a, $7d, $7c, $80, $84, $83, $86, $88, $84, $81, $81, $7d, $7c, $7e, $7c, $79
191e1     7B 7C 7D 81 
191e5     83 83 88 88 
191e9     82 83 80 7C 
191ed     7D 7F 7B 7A | 	byte	$7b, $7c, $7d, $81, $83, $83, $88, $88, $82, $83, $80, $7c, $7d, $7f, $7b, $7a
191f1     7C 7B 7D 82 
191f5     82 83 88 86 
191f9     83 82 7F 7C 
191fd     7F 7D 7A 7B | 	byte	$7c, $7b, $7d, $82, $82, $83, $88, $86, $83, $82, $7f, $7c, $7f, $7d, $7a, $7b
19201     7C 7A 7F 81 
19205     82 85 88 84 
19209     84 82 7E 7C 
1920d     7F 7D 79 7C | 	byte	$7c, $7a, $7f, $81, $82, $85, $88, $84, $84, $82, $7e, $7c, $7f, $7d, $79, $7c
19211     7A 7C 80 81 
19215     81 86 87 84 
19219     84 81 7D 7E 
1921d     7E 7B 7B 7C | 	byte	$7a, $7c, $80, $81, $81, $86, $87, $84, $84, $81, $7d, $7e, $7e, $7b, $7b, $7c
19221     7A 7C 80 80 
19225     83 87 86 85 
19229     85 80 7D 7F 
1922d     7E 7A 7C 7B | 	byte	$7a, $7c, $80, $80, $83, $87, $86, $85, $85, $80, $7d, $7f, $7e, $7a, $7c, $7b
19231     79 7E 80 80 
19235     84 87 85 85 
19239     85 7F 7E 7F 
1923d     7C 7B 7C 7A | 	byte	$79, $7e, $80, $80, $84, $87, $85, $85, $85, $7f, $7e, $7f, $7c, $7b, $7c, $7a
19241     7A 7F 7F 80 
19245     85 86 85 86 
19249     83 7F 7F 7F 
1924d     7C 7D 7C 78 | 	byte	$7a, $7f, $7f, $80, $85, $86, $85, $86, $83, $7f, $7f, $7f, $7c, $7d, $7c, $78
19251     7B 7F 7F 81 
19255     86 85 86 86 
19259     82 7F 80 7D 
1925d     7C 7D 7B 79 | 	byte	$7b, $7f, $7f, $81, $86, $85, $86, $86, $82, $7f, $80, $7d, $7c, $7d, $7b, $79
19261     7D 7F 7F 83 
19265     85 85 86 86 
19269     80 80 80 7D 
1926d     7C 7D 7A 7A | 	byte	$7d, $7f, $7f, $83, $85, $85, $86, $86, $80, $80, $80, $7d, $7c, $7d, $7a, $7a
19271     7E 7D 80 84 
19275     84 85 87 85 
19279     80 80 7F 7C 
1927d     7E 7C 79 7B | 	byte	$7e, $7d, $80, $84, $84, $85, $87, $85, $80, $80, $7f, $7c, $7e, $7c, $79, $7b
19281     7D 7D 80 84 
19285     84 86 87 83 
19289     80 80 7E 7D 
1928d     7E 7B 79 7C | 	byte	$7d, $7d, $80, $84, $84, $86, $87, $83, $80, $80, $7e, $7d, $7e, $7b, $79, $7c
19291     7D 7D 82 84 
19295     84 87 87 82 
19299     80 80 7D 7D 
1929d     7E 7A 7A 7D | 	byte	$7d, $7d, $82, $84, $84, $87, $87, $82, $80, $80, $7d, $7d, $7e, $7a, $7a, $7d
192a1     7C 7F 82 83 
192a5     84 88 85 82 
192a9     81 80 7D 7E 
192ad     7D 79 7B 7C | 	byte	$7c, $7f, $82, $83, $84, $88, $85, $82, $81, $80, $7d, $7e, $7d, $79, $7b, $7c
192b1     7C 80 83 82 
192b5     85 87 84 82 
192b9     81 7E 7D 7E 
192bd     7C 7A 7C 7C | 	byte	$7c, $80, $83, $82, $85, $87, $84, $82, $81, $7e, $7d, $7e, $7c, $7a, $7c, $7c
192c1     7C 80 82 82 
192c5     86 87 83 83 
192c9     80 7E 7E 7E 
192cd     7B 7A 7D 7B | 	byte	$7c, $80, $82, $82, $86, $87, $83, $83, $80, $7e, $7e, $7e, $7b, $7a, $7d, $7b
192d1     7D 80 82 83 
192d5     87 85 83 83 
192d9     80 7E 7F 7E 
192dd     7B 7B 7B 7B | 	byte	$7d, $80, $82, $83, $87, $85, $83, $83, $80, $7e, $7f, $7e, $7b, $7b, $7b, $7b
192e1     7E 80 81 84 
192e5     86 85 83 83 
192e9     7F 7E 7F 7D 
192ed     7B 7B 7B 7C | 	byte	$7e, $80, $81, $84, $86, $85, $83, $83, $7f, $7e, $7f, $7d, $7b, $7b, $7b, $7c
192f1     7F 80 82 85 
192f5     87 84 84 81 
192f9     7F 7F 7F 7C 
192fd     7C 7B 7B 7C | 	byte	$7f, $80, $82, $85, $87, $84, $84, $81, $7f, $7f, $7f, $7c, $7c, $7b, $7b, $7c
19301     80 80 83 86 
19305     85 85 84 81 
19309     7F 7F 7E 7C 
1930d     7C 7B 7A 7E | 	byte	$80, $80, $83, $86, $85, $85, $84, $81, $7f, $7f, $7e, $7c, $7c, $7b, $7a, $7e
19311     80 80 84 85 
19315     85 84 84 80 
19319     7F 7F 7D 7C 
1931d     7C 7A 7B 7E | 	byte	$80, $80, $84, $85, $85, $84, $84, $80, $7f, $7f, $7d, $7c, $7c, $7a, $7b, $7e
19321     80 80 84 85 
19325     85 85 83 80 
19329     80 7F 7D 7C 
1932d     7C 7A 7B 7E | 	byte	$80, $80, $84, $85, $85, $85, $83, $80, $80, $7f, $7d, $7c, $7c, $7a, $7b, $7e
19331     80 81 84 85 
19335     85 85 81 80 
19339     80 7F 7D 7D 
1933d     7C 7A 7C 7E | 	byte	$80, $81, $84, $85, $85, $85, $81, $80, $80, $7f, $7d, $7d, $7c, $7a, $7c, $7e
19341     80 82 84 84 
19345     85 84 81 80 
19349     80 7E 7D 7D 
1934d     7B 7B 7D 7E | 	byte	$80, $82, $84, $84, $85, $84, $81, $80, $80, $7e, $7d, $7d, $7b, $7b, $7d, $7e
19351     80 82 84 85 
19355     85 84 81 80 
19359     80 7D 7D 7D 
1935d     7B 7B 7D 7E | 	byte	$80, $82, $84, $85, $85, $84, $81, $80, $80, $7d, $7d, $7d, $7b, $7b, $7d, $7e
19361     80 83 84 85 
19365     85 83 81 80 
19369     7F 7D 7D 7C 
1936d     7B 7C 7D 7E | 	byte	$80, $83, $84, $85, $85, $83, $81, $80, $7f, $7d, $7d, $7c, $7b, $7c, $7d, $7e
19371     81 83 84 86 
19375     85 83 80 80 
19379     7F 7E 7D 7B 
1937d     7C 7C 7D 7F | 	byte	$81, $83, $84, $86, $85, $83, $80, $80, $7f, $7e, $7d, $7b, $7c, $7c, $7d, $7f
19381     81 83 84 85 
19385     84 82 81 80 
19389     7E 7E 7D 7B 
1938d     7C 7C 7D 7F | 	byte	$81, $83, $84, $85, $84, $82, $81, $80, $7e, $7e, $7d, $7b, $7c, $7c, $7d, $7f
19391     81 83 84 85 
19395     84 82 81 80 
19399     7E 7E 7D 7C 
1939d     7C 7D 7D 80 | 	byte	$81, $83, $84, $85, $84, $82, $81, $80, $7e, $7e, $7d, $7c, $7c, $7d, $7d, $80
193a1     82 83 84 85 
193a5     84 82 80 7F 
193a9     7F 7E 7D 7B 
193ad     7C 7D 7E 80 | 	byte	$82, $83, $84, $85, $84, $82, $80, $7f, $7f, $7e, $7d, $7b, $7c, $7d, $7e, $80
193b1     82 83 85 85 
193b5     83 82 80 7F 
193b9     7E 7E 7C 7B 
193bd     7C 7C 7E 80 | 	byte	$82, $83, $85, $85, $83, $82, $80, $7f, $7e, $7e, $7c, $7b, $7c, $7c, $7e, $80
193c1     82 84 85 84 
193c5     83 82 80 7F 
193c9     7E 7E 7C 7C 
193cd     7C 7D 7F 80 | 	byte	$82, $84, $85, $84, $83, $82, $80, $7f, $7e, $7e, $7c, $7c, $7c, $7d, $7f, $80
193d1     82 84 85 84 
193d5     83 82 80 7F 
193d9     7E 7D 7C 7C 
193dd     7C 7D 7F 80 | 	byte	$82, $84, $85, $84, $83, $82, $80, $7f, $7e, $7d, $7c, $7c, $7c, $7d, $7f, $80
193e1     82 84 85 84 
193e5     82 82 80 7F 
193e9     7E 7D 7C 7C 
193ed     7C 7D 80 80 | 	byte	$82, $84, $85, $84, $82, $82, $80, $7f, $7e, $7d, $7c, $7c, $7c, $7d, $80, $80
193f1     82 84 85 83 
193f5     83 81 80 7F 
193f9     7E 7D 7D 7C 
193fd     7C 7E 80 80 | 	byte	$82, $84, $85, $83, $83, $81, $80, $7f, $7e, $7d, $7d, $7c, $7c, $7e, $80, $80
19401     83 84 84 83 
19405     83 80 80 7F 
19409     7E 7D 7D 7D 
1940d     7C 7E 80 81 | 	byte	$83, $84, $84, $83, $83, $80, $80, $7f, $7e, $7d, $7d, $7d, $7c, $7e, $80, $81
19411     83 84 83 83 
19415     82 80 80 7F 
19419     7D 7D 7D 7C 
1941d     7D 7F 80 81 | 	byte	$83, $84, $83, $83, $82, $80, $80, $7f, $7d, $7d, $7d, $7c, $7d, $7f, $80, $81
19421     84 84 84 83 
19425     82 80 80 7F 
19429     7D 7D 7D 7C 
1942d     7D 7F 80 81 | 	byte	$84, $84, $84, $83, $82, $80, $80, $7f, $7d, $7d, $7d, $7c, $7d, $7f, $80, $81
19431     84 84 83 83 
19435     81 80 80 7E 
19439     7D 7E 7C 7C 
1943d     7E 7F 80 82 | 	byte	$84, $84, $83, $83, $81, $80, $80, $7e, $7d, $7e, $7c, $7c, $7e, $7f, $80, $82
19441     84 84 84 83 
19445     81 80 80 7E 
19449     7E 7E 7C 7C 
1944d     7E 7F 80 82 | 	byte	$84, $84, $84, $83, $81, $80, $80, $7e, $7e, $7e, $7c, $7c, $7e, $7f, $80, $82
19451     83 83 84 82 
19455     80 80 7F 7E 
19459     7E 7D 7C 7D 
1945d     7E 7F 81 83 | 	byte	$83, $83, $84, $82, $80, $80, $7f, $7e, $7e, $7d, $7c, $7d, $7e, $7f, $81, $83
19461     83 84 84 82 
19465     80 80 7F 7E 
19469     7E 7D 7C 7E 
1946d     7E 7F 81 83 | 	byte	$83, $84, $84, $82, $80, $80, $7f, $7e, $7e, $7d, $7c, $7e, $7e, $7f, $81, $83
19471     83 84 83 81 
19475     81 80 7E 7E 
19479     7E 7D 7C 7E 
1947d     7E 80 81 82 | 	byte	$83, $84, $83, $81, $81, $80, $7e, $7e, $7e, $7d, $7c, $7e, $7e, $80, $81, $82
19481     83 84 83 81 
19485     81 80 7E 7E 
19489     7E 7D 7D 7E 
1948d     7E 80 82 82 | 	byte	$83, $84, $83, $81, $81, $80, $7e, $7e, $7e, $7d, $7d, $7e, $7e, $80, $82, $82
19491     83 84 82 81 
19495     80 80 7F 7F 
19499     7D 7D 7E 7E 
1949d     7E 80 81 82 | 	byte	$83, $84, $82, $81, $80, $80, $7f, $7f, $7d, $7d, $7e, $7e, $7e, $80, $81, $82
194a1     84 83 82 81 
194a5     80 7F 7F 7F 
194a9     7D 7D 7E 7E 
194ad     7F 80 81 83 | 	byte	$84, $83, $82, $81, $80, $7f, $7f, $7f, $7d, $7d, $7e, $7e, $7f, $80, $81, $83
194b1     84 83 82 81 
194b5     80 7F 7F 7E 
194b9     7D 7E 7D 7E 
194bd     80 80 81 83 | 	byte	$84, $83, $82, $81, $80, $7f, $7f, $7e, $7d, $7e, $7d, $7e, $80, $80, $81, $83
194c1     84 82 82 81 
194c5     80 7F 7F 7E 
194c9     7D 7E 7D 7E 
194cd     80 80 81 83 | 	byte	$84, $82, $82, $81, $80, $7f, $7f, $7e, $7d, $7e, $7d, $7e, $80, $80, $81, $83
194d1     83 82 82 81 
194d5     80 80 7F 7E 
194d9     7E 7E 7D 7E 
194dd     80 80 82 83 | 	byte	$83, $82, $82, $81, $80, $80, $7f, $7e, $7e, $7e, $7d, $7e, $80, $80, $82, $83
194e1     83 82 82 80 
194e5     80 7F 7F 7E 
194e9     7E 7E 7D 7F 
194ed     80 80 82 83 | 	byte	$83, $82, $82, $80, $80, $7f, $7f, $7e, $7e, $7e, $7d, $7f, $80, $80, $82, $83
194f1     83 82 82 80 
194f5     80 7F 7E 7E 
194f9     7E 7E 7E 7F 
194fd     80 81 82 83 | 	byte	$83, $82, $82, $80, $80, $7f, $7e, $7e, $7e, $7e, $7e, $7f, $80, $81, $82, $83
19501     82 83 81 80 
19505     80 7F 7E 7E 
19509     7E 7E 7E 7F 
1950d     80 81 83 82 | 	byte	$82, $83, $81, $80, $80, $7f, $7e, $7e, $7e, $7e, $7e, $7f, $80, $81, $83, $82
19511     82 82 81 80 
19515     80 7F 7E 7E 
19519     7E 7E 7F 80 
1951d     80 81 82 82 | 	byte	$82, $82, $81, $80, $80, $7f, $7e, $7e, $7e, $7e, $7f, $80, $80, $81, $82, $82
19521     82 82 80 80 
19525     80 7E 7E 7E 
19529     7E 7E 7F 80 
1952d     80 81 82 82 | 	byte	$82, $82, $80, $80, $80, $7e, $7e, $7e, $7e, $7e, $7f, $80, $80, $81, $82, $82
19531     82 82 80 80 
19535     80 7E 7E 7E 
19539     7E 7E 7F 80 
1953d     80 82 82 82 | 	byte	$82, $82, $80, $80, $80, $7e, $7e, $7e, $7e, $7e, $7f, $80, $80, $82, $82, $82
19541     82 81 80 80 
19545     7F 7F 7F 7E 
19549     7E 7F 7F 80 
1954d     80 82 82 82 | 	byte	$82, $81, $80, $80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $80, $82, $82, $82
19551     82 81 80 80 
19555     7F 7F 7F 7E 
19559     7E 7F 7F 80 
1955d     80 81 82 83 | 	byte	$82, $81, $80, $80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $80, $81, $82, $83
19561     82 81 80 80 
19565     7F 7F 7F 7E 
19569     7E 7F 7F 80 
1956d     81 81 82 82 | 	byte	$82, $81, $80, $80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $81, $81, $82, $82
19571     82 80 80 80 
19575     7F 7F 7F 7E 
19579     7E 7F 7F 80 
1957d     81 81 82 82 | 	byte	$82, $80, $80, $80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $81, $81, $82, $82
19581     81 81 80 80 
19585     7F 7F 7E 7E 
19589     7F 7F 7F 80 
1958d     81 81 82 82 | 	byte	$81, $81, $80, $80, $7f, $7f, $7e, $7e, $7f, $7f, $7f, $80, $81, $81, $82, $82
19591     81 81 80 7F 
19595     7F 7F 7E 7E 
19599     7F 7F 80 80 
1959d     81 81 82 82 | 	byte	$81, $81, $80, $7f, $7f, $7f, $7e, $7e, $7f, $7f, $80, $80, $81, $81, $82, $82
195a1     81 81 80 7F 
195a5     7F 7F 7E 7F 
195a9     7F 7F 80 80 
195ad     81 81 82 81 | 	byte	$81, $81, $80, $7f, $7f, $7f, $7e, $7f, $7f, $7f, $80, $80, $81, $81, $82, $81
195b1     81 80 80 7F 
195b5     7F 7F 7E 7F 
195b9     7F 7F 80 80 
195bd     80 82 82 81 | 	byte	$81, $80, $80, $7f, $7f, $7f, $7e, $7f, $7f, $7f, $80, $80, $80, $82, $82, $81
195c1     81 80 80 80 
195c5     7F 7F 7F 7F 
195c9     7F 7F 80 80 
195cd     81 82 82 81 | 	byte	$81, $80, $80, $80, $7f, $7f, $7f, $7f, $7f, $7f, $80, $80, $81, $82, $82, $81
195d1     81 80 80 80 
195d5     7F 7F 7F 7F 
195d9     7F 80 80 80 
195dd     81 82 81 81 | 	byte	$81, $80, $80, $80, $7f, $7f, $7f, $7f, $7f, $80, $80, $80, $81, $82, $81, $81
195e1     81 80 80 80 
195e5     7F 7F 7F 7F 
195e9     7F 80 80 80 
195ed     81 82 81 81 | 	byte	$81, $80, $80, $80, $7f, $7f, $7f, $7f, $7f, $80, $80, $80, $81, $82, $81, $81
195f1     81 80 80 80 
195f5     80 80 80 80 
195f9     80 80 80 82 
195fd     80 83 83 7A | 	byte	$81, $80, $80, $80, $80, $80, $80, $80, $80, $80, $80, $82, $80, $83, $83, $7a
19601     75 8C A2 9E 
19605     86 67 54 4F 
19609     60 80 78 62 
1960d     52 47 5D 71 | 	byte	$75, $8c, $a2, $9e, $86, $67, $54, $4f, $60, $80, $78, $62, $52, $47, $5d, $71
19611     68 43 30 3B 
19615     4A 48 57 68 
19619     5F 61 6B 71 
1961d     72 62 6E 7D | 	byte	$68, $43, $30, $3b, $4a, $48, $57, $68, $5f, $61, $6b, $71, $72, $62, $6e, $7d
19621     82 7D 76 6B 
19625     61 55 49 50 
19629     69 7A 76 74 
1962d     7B 7F 89 9D | 	byte	$82, $7d, $76, $6b, $61, $55, $49, $50, $69, $7a, $76, $74, $7b, $7f, $89, $9d
19631     A7 7F 6E 7D 
19635     9A AE AE B5 
19639     B4 A3 94 97 
1963d     9F 91 8C 8E | 	byte	$a7, $7f, $6e, $7d, $9a, $ae, $ae, $b5, $b4, $a3, $94, $97, $9f, $91, $8c, $8e
19641     98 AA AF A2 
19645     8B 6F 65 65 
19649     77 98 9B 8C 
1964d     88 96 A3 97 | 	byte	$98, $aa, $af, $a2, $8b, $6f, $65, $65, $77, $98, $9b, $8c, $88, $96, $a3, $97
19651     82 77 6A 74 
19655     71 79 6F 69 
19659     5F 53 5B 61 
1965d     79 7E 77 7F | 	byte	$82, $77, $6a, $74, $71, $79, $6f, $69, $5f, $53, $5b, $61, $79, $7e, $77, $7f
19661     8B 9B AB 9F 
19665     83 7D 8F A3 
19669     BD B1 B0 A3 
1966d     99 9C AC A9 | 	byte	$8b, $9b, $ab, $9f, $83, $7d, $8f, $a3, $bd, $b1, $b0, $a3, $99, $9c, $ac, $a9
19671     7B 65 5C 63 
19675     6F 67 5B 53 
19679     63 6D 6F 72 
1967d     79 72 76 87 | 	byte	$7b, $65, $5c, $63, $6f, $67, $5b, $53, $63, $6d, $6f, $72, $79, $72, $76, $87
19681     8F 97 9D A3 
19685     9A 85 7D 8B 
19689     92 85 7B 7D 
1968d     81 7F 84 83 | 	byte	$8f, $97, $9d, $a3, $9a, $85, $7d, $8b, $92, $85, $7b, $7d, $81, $7f, $84, $83
19691     6D 55 5F 6A 
19695     76 78 6E 79 
19699     8F 93 82 6B 
1969d     74 73 67 64 | 	byte	$6d, $55, $5f, $6a, $76, $78, $6e, $79, $8f, $93, $82, $6b, $74, $73, $67, $64
196a1     71 81 7D 6D 
196a5     5E 65 5D 63 
196a9     5B 65 5D 5E 
196ad     64 71 7C 7F | 	byte	$71, $81, $7d, $6d, $5e, $65, $5d, $63, $5b, $65, $5d, $5e, $64, $71, $7c, $7f
196b1     74 80 7C 74 
196b5     66 72 92 A7 
196b9     9E 96 85 71 
196bd     6D 74 81 81 | 	byte	$74, $80, $7c, $74, $66, $72, $92, $a7, $9e, $96, $85, $71, $6d, $74, $81, $81
196c1     7F 89 91 84 
196c5     79 77 74 83 
196c9     7F 85 84 8D 
196cd     96 96 92 83 | 	byte	$7f, $89, $91, $84, $79, $77, $74, $83, $7f, $85, $84, $8d, $96, $96, $92, $83
196d1     81 6E 62 6A 
196d5     73 70 7F 99 
196d9     90 7D 77 87 
196dd     8F 86 87 96 | 	byte	$81, $6e, $62, $6a, $73, $70, $7f, $99, $90, $7d, $77, $87, $8f, $86, $87, $96
196e1     A7 A8 AF B1 
196e5     B9 B1 B1 A9 
196e9     AC C0 BD B8 
196ed     C7 CB B9 9F | 	byte	$a7, $a8, $af, $b1, $b9, $b1, $b1, $a9, $ac, $c0, $bd, $b8, $c7, $cb, $b9, $9f
196f1     87 6F 5F 59 
196f5     5B 5E 62 84 
196f9     9E 99 79 55 
196fd     5C 75 8B 92 | 	byte	$87, $6f, $5f, $59, $5b, $5e, $62, $84, $9e, $99, $79, $55, $5c, $75, $8b, $92
19701     89 89 8E 7F 
19705     5E 4E 51 4B 
19709     5B 73 78 68 
1970d     6B 63 5A 44 | 	byte	$89, $89, $8e, $7f, $5e, $4e, $51, $4b, $5b, $73, $78, $68, $6b, $63, $5a, $44
19711     30 35 4B 5C 
19715     54 5D 78 8C 
19719     89 7A 65 5E 
1971d     6A 73 6F 73 | 	byte	$30, $35, $4b, $5c, $54, $5d, $78, $8c, $89, $7a, $65, $5e, $6a, $73, $6f, $73
19721     65 5B 5E 5E 
19725     50 4A 59 62 
19729     73 71 7C 86 
1972d     9A 8B 92 A6 | 	byte	$65, $5b, $5e, $5e, $50, $4a, $59, $62, $73, $71, $7c, $86, $9a, $8b, $92, $a6
19731     B3 AA 99 94 
19735     8F 93 A7 B5 
19739     B3 A5 8B 91 
1973d     A1 9F 8B 81 | 	byte	$b3, $aa, $99, $94, $8f, $93, $a7, $b5, $b3, $a5, $8b, $91, $a1, $9f, $8b, $81
19741     81 8A 8F 83 
19745     77 73 68 68 
19749     79 95 9D 8A 
1974d     90 A6 A2 8B | 	byte	$81, $8a, $8f, $83, $77, $73, $68, $68, $79, $95, $9d, $8a, $90, $a6, $a2, $8b
19751     71 64 6D 6D 
19755     6C 6B 6A 70 
19759     68 5F 55 63 
1975d     77 88 87 88 | 	byte	$71, $64, $6d, $6d, $6c, $6b, $6a, $70, $68, $5f, $55, $63, $77, $88, $87, $88
19761     82 8C 9B A4 
19765     91 7B 8D A0 
19769     A2 AD A4 95 
1976d     93 A4 B9 AF | 	byte	$82, $8c, $9b, $a4, $91, $7b, $8d, $a0, $a2, $ad, $a4, $95, $93, $a4, $b9, $af
19771     8D 72 57 47 
19775     3E 51 66 7D 
19779     85 73 51 67 
1977d     89 99 7F 85 | 	byte	$8d, $72, $57, $47, $3e, $51, $66, $7d, $85, $73, $51, $67, $89, $99, $7f, $85
19781     A2 A4 A2 A1 
19785     91 74 75 82 
19789     89 91 8E 90 
1978d     8A 8D 8F 7C | 	byte	$a2, $a4, $a2, $a1, $91, $74, $75, $82, $89, $91, $8e, $90, $8a, $8d, $8f, $7c
19791     6A 73 7A 75 
19795     71 7F 8E 84 
19799     7E 86 78 58 
1979d     5D 5C 45 43 | 	byte	$6a, $73, $7a, $75, $71, $7f, $8e, $84, $7e, $86, $78, $58, $5d, $5c, $45, $43
197a1     61 74 6F 62 
197a5     52 41 50 5E 
197a9     56 46 55 6D 
197ad     84 8D A5 B3 | 	byte	$61, $74, $6f, $62, $52, $41, $50, $5e, $56, $46, $55, $6d, $84, $8d, $a5, $b3
197b1     A0 77 63 69 
197b5     65 85 AB B0 
197b9     9D 88 71 61 
197bd     72 8D 8E 85 | 	byte	$a0, $77, $63, $69, $65, $85, $ab, $b0, $9d, $88, $71, $61, $72, $8d, $8e, $85
197c1     82 87 7F 79 
197c5     75 72 79 85 
197c9     8B 84 7A 8E 
197cd     A8 A3 81 68 | 	byte	$82, $87, $7f, $79, $75, $72, $79, $85, $8b, $84, $7a, $8e, $a8, $a3, $81, $68
197d1     6A 60 6A 7D 
197d5     77 73 82 8B 
197d9     85 85 87 7B 
197dd     76 85 9C B7 | 	byte	$6a, $60, $6a, $7d, $77, $73, $82, $8b, $85, $85, $87, $7b, $76, $85, $9c, $b7
197e1     B8 C9 C5 B8 
197e5     A8 AC B2 B2 
197e9     BA D1 C1 A4 
197ed     AD BA B7 A8 | 	byte	$b8, $c9, $c5, $b8, $a8, $ac, $b2, $b2, $ba, $d1, $c1, $a4, $ad, $ba, $b7, $a8
197f1     96 74 54 4F 
197f5     5A 64 6E 89 
197f9     8D 73 74 71 
197fd     6D 68 6B 7B | 	byte	$96, $74, $54, $4f, $5a, $64, $6e, $89, $8d, $73, $74, $71, $6d, $68, $6b, $7b
19801     7D 7B 7C 72 
19805     4A 57 67 5A 
19809     5D 6F 6A 63 
1980d     71 77 55 34 | 	byte	$7d, $7b, $7c, $72, $4a, $57, $67, $5a, $5d, $6f, $6a, $63, $71, $77, $55, $34
19811     39 71 8C 8F 
19815     8A 68 57 6A 
19819     7D 78 5C 5A 
1981d     71 63 52 6B | 	byte	$39, $71, $8c, $8f, $8a, $68, $57, $6a, $7d, $78, $5c, $5a, $71, $63, $52, $6b
19821     72 6F 6F 57 
19825     4A 64 77 73 
19829     5F 67 77 92 
1982d     AA CE CA B2 | 	byte	$72, $6f, $6f, $57, $4a, $64, $77, $73, $5f, $67, $77, $92, $aa, $ce, $ca, $b2
19831     A3 99 93 86 
19835     80 9D AE BC 
19839     B9 A1 88 85 
1983d     92 8D 8F 9D | 	byte	$a3, $99, $93, $86, $80, $9d, $ae, $bc, $b9, $a1, $88, $85, $92, $8d, $8f, $9d
19841     91 6D 60 6A 
19845     7C 89 8F 95 
19849     80 69 6F 8F 
1984d     9E 8F 8D 94 | 	byte	$91, $6d, $60, $6a, $7c, $89, $8f, $95, $80, $69, $6f, $8f, $9e, $8f, $8d, $94
19851     8C 7B 5B 43 
19855     42 50 5E 6C 
19859     7F 87 76 5D 
1985d     65 74 88 9D | 	byte	$8c, $7b, $5b, $43, $42, $50, $5e, $6c, $7f, $87, $76, $5d, $65, $74, $88, $9d
19861     A5 9F 91 7E 
19865     7E 8A 92 97 
19869     B1 AA 97 8D 
1986d     8A 92 A0 9A | 	byte	$a5, $9f, $91, $7e, $7e, $8a, $92, $97, $b1, $aa, $97, $8d, $8a, $92, $a0, $9a
19871     8B 72 66 56 
19875     43 59 7F 8B 
19879     7D 81 8B 7C 
1987d     5E 61 7E 91 | 	byte	$8b, $72, $66, $56, $43, $59, $7f, $8b, $7d, $81, $8b, $7c, $5e, $61, $7e, $91
19881     95 A1 AB A3 
19885     98 89 7B 7E 
19889     8A 87 86 99 
1988d     A7 96 84 98 | 	byte	$95, $a1, $ab, $a3, $98, $89, $7b, $7e, $8a, $87, $86, $99, $a7, $96, $84, $98
19891     A0 98 8F 86 
19895     6C 4F 59 7A 
19899     7D 69 4E 3B 
1989d     35 3F 53 62 | 	byte	$a0, $98, $8f, $86, $6c, $4f, $59, $7a, $7d, $69, $4e, $3b, $35, $3f, $53, $62
198a1     67 74 6B 51 
198a5     46 51 4C 3F 
198a9     4C 5F 70 88 
198ad     A1 A0 8F 80 | 	byte	$67, $74, $6b, $51, $46, $51, $4c, $3f, $4c, $5f, $70, $88, $a1, $a0, $8f, $80
198b1     81 77 70 78 
198b5     8C 9E AA A5 
198b9     87 6B 6E 79 
198bd     77 8D A1 A4 | 	byte	$81, $77, $70, $78, $8c, $9e, $aa, $a5, $87, $6b, $6e, $79, $77, $8d, $a1, $a4
198c1     7B 73 72 6E 
198c5     6A 76 82 80 
198c9     77 85 8E 9A 
198cd     83 72 70 6F | 	byte	$7b, $73, $72, $6e, $6a, $76, $82, $80, $77, $85, $8e, $9a, $83, $72, $70, $6f
198d1     79 74 6A 62 
198d5     69 6E 77 87 
198d9     90 9B 96 93 
198dd     9A B2 CA CF | 	byte	$79, $74, $6a, $62, $69, $6e, $77, $87, $90, $9b, $96, $93, $9a, $b2, $ca, $cf
198e1     BB A2 91 98 
198e5     AB B8 CC DB 
198e9     D3 B5 A5 9F 
198ed     99 9A 9D 97 | 	byte	$bb, $a2, $91, $98, $ab, $b8, $cc, $db, $d3, $b5, $a5, $9f, $99, $9a, $9d, $97
198f1     85 72 62 5C 
198f5     6A 6F 7A 7D 
198f9     7B 73 63 50 
198fd     44 5B 70 74 | 	byte	$85, $72, $62, $5c, $6a, $6f, $7a, $7d, $7b, $73, $63, $50, $44, $5b, $70, $74
19901     68 65 5D 5E 
19905     64 4F 5B 68 
19909     68 67 65 6F 
1990d     6F 6D 6F 76 | 	byte	$68, $65, $5d, $5e, $64, $4f, $5b, $68, $68, $67, $65, $6f, $6f, $6d, $6f, $76
19911     8C 94 83 5C 
19915     3F 40 60 70 
19919     63 65 6F 70 
1991d     6B 73 81 80 | 	byte	$8c, $94, $83, $5c, $3f, $40, $60, $70, $63, $65, $6f, $70, $6b, $73, $81, $80
19921     76 5C 51 55 
19925     58 73 83 7E 
19929     76 79 8D 93 
1992d     97 9C AE C2 | 	byte	$76, $5c, $51, $55, $58, $73, $83, $7e, $76, $79, $8d, $93, $97, $9c, $ae, $c2
19931     C9 BC 9A 7B 
19935     82 8D 9A A6 
19939     B2 BB A8 87 
1993d     79 84 97 9E | 	byte	$c9, $bc, $9a, $7b, $82, $8d, $9a, $a6, $b2, $bb, $a8, $87, $79, $84, $97, $9e
19941     9D 8D 74 70 
19945     68 63 5B 54 
19949     71 97 A5 97 
1994d     80 88 93 8C | 	byte	$9d, $8d, $74, $70, $68, $63, $5b, $54, $71, $97, $a5, $97, $80, $88, $93, $8c
19951     75 57 51 4E 
19955     50 4F 67 8B 
19959     8F 7F 6C 69 
1995d     7B 96 93 84 | 	byte	$75, $57, $51, $4e, $50, $4f, $67, $8b, $8f, $7f, $6c, $69, $7b, $96, $93, $84
19961     67 74 95 9F 
19965     95 83 81 86 
19969     89 8A 96 B0 
1996d     A6 88 72 80 | 	byte	$67, $74, $95, $9f, $95, $83, $81, $86, $89, $8a, $96, $b0, $a6, $88, $72, $80
19971     98 90 74 73 
19975     78 76 80 84 
19979     7A 53 40 57 
1997d     7E 99 9F A1 | 	byte	$98, $90, $74, $73, $78, $76, $80, $84, $7a, $53, $40, $57, $7e, $99, $9f, $a1
19981     A0 AA AD 8D 
19985     8A 9C A2 95 
19989     93 A7 AD 9D 
1998d     8E 8F 97 A7 | 	byte	$a0, $aa, $ad, $8d, $8a, $9c, $a2, $95, $93, $a7, $ad, $9d, $8e, $8f, $97, $a7
19991     9F 7B 59 50 
19995     62 71 76 5B 
19999     39 2F 2E 4D 
1999d     6E 7F 82 5A | 	byte	$9f, $7b, $59, $50, $62, $71, $76, $5b, $39, $2f, $2e, $4d, $6e, $7f, $82, $5a
199a1     29 25 4B 6B 
199a5     65 5B 56 57 
199a9     5C 73 7D 79 
199ad     7C 86 95 B1 | 	byte	$29, $25, $4b, $6b, $65, $5b, $56, $57, $5c, $73, $7d, $79, $7c, $86, $95, $b1
199b1     B1 9A 8C 7E 
199b5     74 83 94 AA 
199b9     A5 82 60 60 
199bd     80 93 94 91 | 	byte	$b1, $9a, $8c, $7e, $74, $83, $94, $aa, $a5, $82, $60, $60, $80, $93, $94, $91
199c1     80 79 68 50 
199c5     43 52 69 87 
199c9     A3 A2 7E 57 
199cd     48 63 7D 92 | 	byte	$80, $79, $68, $50, $43, $52, $69, $87, $a3, $a2, $7e, $57, $48, $63, $7d, $92
199d1     8A 7D 69 51 
199d5     56 81 A6 B4 
199d9     A8 9F 9E BF 
199dd     D1 BD A1 95 | 	byte	$8a, $7d, $69, $51, $56, $81, $a6, $b4, $a8, $9f, $9e, $bf, $d1, $bd, $a1, $95
199e1     99 B4 CC D5 
199e5     D2 C4 AA A5 
199e9     A5 B3 C1 B5 
199ed     9B 76 80 98 | 	byte	$99, $b4, $cc, $d5, $d2, $c4, $aa, $a5, $a5, $b3, $c1, $b5, $9b, $76, $80, $98
199f1     8D 82 79 65 
199f5     54 50 44 45 
199f9     4B 43 3D 4E 
199fd     62 5C 42 44 | 	byte	$8d, $82, $79, $65, $54, $50, $44, $45, $4b, $43, $3d, $4e, $62, $5c, $42, $44
19a01     6D 96 87 63 
19a05     4D 4C 58 67 
19a09     80 8B 83 6B 
19a0d     5E 6C 8F 93 | 	byte	$6d, $96, $87, $63, $4d, $4c, $58, $67, $80, $8b, $83, $6b, $5e, $6c, $8f, $93
19a11     6C 53 56 66 
19a15     71 70 78 84 
19a19     78 67 71 84 
19a1d     95 8F 67 4C | 	byte	$6c, $53, $56, $66, $71, $70, $78, $84, $78, $67, $71, $84, $95, $8f, $67, $4c
19a21     4A 6C 77 73 
19a25     72 6B 6A 6F 
19a29     6B 77 8A A6 
19a2d     C1 CB C9 BC | 	byte	$4a, $6c, $77, $73, $72, $6b, $6a, $6f, $6b, $77, $8a, $a6, $c1, $cb, $c9, $bc
19a31     A8 95 8C A0 
19a35     B8 B4 9F 8F 
19a39     96 9B 93 91 
19a3d     8E 88 7B 78 | 	byte	$a8, $95, $8c, $a0, $b8, $b4, $9f, $8f, $96, $9b, $93, $91, $8e, $88, $7b, $78
19a41     8A 95 77 57 
19a45     50 6F 83 9B 
19a49     96 8F 81 68 
19a4d     6F 85 8C 8B | 	byte	$8a, $95, $77, $57, $50, $6f, $83, $9b, $96, $8f, $81, $68, $6f, $85, $8c, $8b
19a51     6F 55 4F 5F 
19a55     65 76 81 7E 
19a59     7B 73 64 60 
19a5d     60 6D 79 85 | 	byte	$6f, $55, $4f, $5f, $65, $76, $81, $7e, $7b, $73, $64, $60, $60, $6d, $79, $85
19a61     89 91 8A 85 
19a65     78 71 7C 8A 
19a69     96 A3 A1 9D 
19a6d     A5 9A 8F 90 | 	byte	$89, $91, $8a, $85, $78, $71, $7c, $8a, $96, $a3, $a1, $9d, $a5, $9a, $8f, $90
19a71     7E 77 78 83 
19a75     85 72 5A 4E 
19a79     60 7A 80 7C 
19a7d     88 96 97 A9 | 	byte	$7e, $77, $78, $83, $85, $72, $5a, $4e, $60, $7a, $80, $7c, $88, $96, $97, $a9
19a81     BC BF B4 98 
19a85     8F 9A 9D 9C 
19a89     AF B5 92 74 
19a8d     7F 81 7F 78 | 	byte	$bc, $bf, $b4, $98, $8f, $9a, $9d, $9c, $af, $b5, $92, $74, $7f, $81, $7f, $78
19a91     60 64 6C 6B 
19a95     60 55 61 67 
19a99     6C 71 62 5B 
19a9d     5C 5A 49 49 | 	byte	$60, $64, $6c, $6b, $60, $55, $61, $67, $6c, $71, $62, $5b, $5c, $5a, $49, $49
19aa1     52 66 62 44 
19aa5     3E 58 6E 74 
19aa9     7E 81 96 AA 
19aad     B2 A4 9F 97 | 	byte	$52, $66, $62, $44, $3e, $58, $6e, $74, $7e, $81, $96, $aa, $b2, $a4, $9f, $97
19ab1     87 87 A3 B3 
19ab5     A2 87 7D 74 
19ab9     7F 7D 6B 6F 
19abd     76 7A 76 72 | 	byte	$87, $87, $a3, $b3, $a2, $87, $7d, $74, $7f, $7d, $6b, $6f, $76, $7a, $76, $72
19ac1     61 5D 53 4C 
19ac5     5A 6D 68 6C 
19ac9     76 85 82 7E 
19acd     79 66 69 78 | 	byte	$61, $5d, $53, $4c, $5a, $6d, $68, $6c, $76, $85, $82, $7e, $79, $66, $69, $78
19ad1     7F 80 8C 96 
19ad5     97 91 8F A3 
19ad9     C1 CB BC B6 
19add     B9 B9 B7 B3 | 	byte	$7f, $80, $8c, $96, $97, $91, $8f, $a3, $c1, $cb, $bc, $b6, $b9, $b9, $b7, $b3
19ae1     C9 D1 C9 B1 
19ae5     A6 AB A4 9D 
19ae9     A2 B1 AF A5 
19aed     9A 8D 84 7A | 	byte	$c9, $d1, $c9, $b1, $a6, $ab, $a4, $9d, $a2, $b1, $af, $a5, $9a, $8d, $84, $7a
19af1     66 5E 57 41 
19af5     30 2D 32 3B 
19af9     43 44 57 67 
19afd     65 63 64 67 | 	byte	$66, $5e, $57, $41, $30, $2d, $32, $3b, $43, $44, $57, $67, $65, $63, $64, $67
19b01     59 63 76 71 
19b05     59 50 64 71 
19b09     6C 65 75 85 
19b0d     87 6B 5B 5C | 	byte	$59, $63, $76, $71, $59, $50, $64, $71, $6c, $65, $75, $85, $87, $6b, $5b, $5c
19b11     65 7D 7D 86 
19b15     94 9A 91 86 
19b19     7B 68 71 75 
19b1d     72 63 61 77 | 	byte	$65, $7d, $7d, $86, $94, $9a, $91, $86, $7b, $68, $71, $75, $72, $63, $61, $77
19b21     87 69 4E 3D 
19b25     53 6B 88 91 
19b29     A1 B4 B6 A4 
19b2d     A5 BB C2 B8 | 	byte	$87, $69, $4e, $3d, $53, $6b, $88, $91, $a1, $b4, $b6, $a4, $a5, $bb, $c2, $b8
19b31     BC C1 A6 93 
19b35     97 A3 A0 83 
19b39     7C 86 8E 84 
19b3d     72 6C 6C 81 | 	byte	$bc, $c1, $a6, $93, $97, $a3, $a0, $83, $7c, $86, $8e, $84, $72, $6c, $6c, $81
19b41     83 71 6E 60 
19b45     65 6D 71 79 
19b49     83 8E 97 83 
19b4d     62 5A 67 70 | 	byte	$83, $71, $6e, $60, $65, $6d, $71, $79, $83, $8e, $97, $83, $62, $5a, $67, $70
19b51     6F 73 82 83 
19b55     6C 5C 61 62 
19b59     70 7A 75 78 
19b5d     6A 63 6E 94 | 	byte	$6f, $73, $82, $83, $6c, $5c, $61, $62, $70, $7a, $75, $78, $6a, $63, $6e, $94
19b61     A0 95 71 5D 
19b65     5F 6E 7A 95 
19b69     B7 D9 CE AB 
19b6d     88 67 61 7A | 	byte	$a0, $95, $71, $5d, $5f, $6e, $7a, $95, $b7, $d9, $ce, $ab, $88, $67, $61, $7a
19b71     79 84 97 8A 
19b75     73 55 4C 54 
19b79     6F 90 AF BA 
19b7d     B1 9A 8C 8A | 	byte	$79, $84, $97, $8a, $73, $55, $4c, $54, $6f, $90, $af, $ba, $b1, $9a, $8c, $8a
19b81     8A 95 A3 A8 
19b85     A0 A2 92 81 
19b89     91 92 87 89 
19b8d     7A 6A 63 64 | 	byte	$8a, $95, $a3, $a8, $a0, $a2, $92, $81, $91, $92, $87, $89, $7a, $6a, $63, $64
19b91     71 80 85 7B 
19b95     73 6D 6C 64 
19b99     5F 5A 63 65 
19b9d     69 48 55 53 | 	byte	$71, $80, $85, $7b, $73, $6d, $6c, $64, $5f, $5a, $63, $65, $69, $48, $55, $53
19ba1     42 41 52 57 
19ba5     6D 8E 93 9A 
19ba9     99 96 97 99 
19bad     A4 B4 AF 96 | 	byte	$42, $41, $52, $57, $6d, $8e, $93, $9a, $99, $96, $97, $99, $a4, $b4, $af, $96
19bb1     8E 8F 8F 88 
19bb5     7D 72 6E 6D 
19bb9     7A 6F 62 5D 
19bbd     4C 50 6F 76 | 	byte	$8e, $8f, $8f, $88, $7d, $72, $6e, $6d, $7a, $6f, $62, $5d, $4c, $50, $6f, $76
19bc1     6A 4A 3F 3D 
19bc5     4C 53 66 86 
19bc9     98 93 87 71 
19bcd     71 72 83 9B | 	byte	$6a, $4a, $3f, $3d, $4c, $53, $66, $86, $98, $93, $87, $71, $71, $72, $83, $9b
19bd1     A9 B3 A1 83 
19bd5     85 94 B3 E1 
19bd9     E4 D7 B4 99 
19bdd     A2 BE DE E1 | 	byte	$a9, $b3, $a1, $83, $85, $94, $b3, $e1, $e4, $d7, $b4, $99, $a2, $be, $de, $e1
19be1     CF B9 9D 8C 
19be5     89 8E 9F BD 
19be9     C8 BF B2 A5 
19bed     84 62 51 4B | 	byte	$cf, $b9, $9d, $8c, $89, $8e, $9f, $bd, $c8, $bf, $b2, $a5, $84, $62, $51, $4b
19bf1     69 77 62 3E 
19bf5     16 11 2E 52 
19bf9     58 65 66 5C 
19bfd     5A 57 5F 65 | 	byte	$69, $77, $62, $3e, $16, $11, $2e, $52, $58, $65, $66, $5c, $5a, $57, $5f, $65
19c01     61 76 74 59 
19c05     52 3F 49 6B 
19c09     85 9B 94 76 
19c0d     65 59 6A 78 | 	byte	$61, $76, $74, $59, $52, $3f, $49, $6b, $85, $9b, $94, $76, $65, $59, $6a, $78
19c11     96 9E 9C 97 
19c15     91 8A 81 63 
19c19     55 5D 68 74 
19c1d     7E 99 95 73 | 	byte	$96, $9e, $9c, $97, $91, $8a, $81, $63, $55, $5d, $68, $74, $7e, $99, $95, $73
19c21     5C 4B 58 85 
19c25     AF B0 9C 8F 
19c29     85 95 A9 BC 
19c2d     C9 C9 C7 B7 | 	byte	$5c, $4b, $58, $85, $af, $b0, $9c, $8f, $85, $95, $a9, $bc, $c9, $c9, $c7, $b7
19c31     B0 B0 B6 B2 
19c35     98 72 7A 7D 
19c39     7C 77 69 61 
19c3d     63 76 7B 6E | 	byte	$b0, $b0, $b6, $b2, $98, $72, $7a, $7d, $7c, $77, $69, $61, $63, $76, $7b, $6e
19c41     65 5F 51 64 
19c45     7A 78 68 7C 
19c49     78 6E 61 66 
19c4d     6F 75 7A 8B | 	byte	$65, $5f, $51, $64, $7a, $78, $68, $7c, $78, $6e, $61, $66, $6f, $75, $7a, $8b
19c51     91 7F 75 69 
19c55     69 81 A0 99 
19c59     86 56 3C 40 
19c5d     6F A0 AA 8A | 	byte	$91, $7f, $75, $69, $69, $81, $a0, $99, $86, $56, $3c, $40, $6f, $a0, $aa, $8a
19c61     6B 60 63 7A 
19c65     8A 9D A9 A9 
19c69     AC A9 8E 7B 
19c6d     72 6F 74 88 | 	byte	$6b, $60, $63, $7a, $8a, $9d, $a9, $a9, $ac, $a9, $8e, $7b, $72, $6f, $74, $88
19c71     96 97 85 66 
19c75     5B 69 82 99 
19c79     A3 A5 9E 84 
19c7d     6F 7A 8F 95 | 	byte	$96, $97, $85, $66, $5b, $69, $82, $99, $a3, $a5, $9e, $84, $6f, $7a, $8f, $95
19c81     98 99 A8 A3 
19c85     80 76 81 94 
19c89     A5 A3 8F 87 
19c8d     74 69 6A 6B | 	byte	$98, $99, $a8, $a3, $80, $76, $81, $94, $a5, $a3, $8f, $87, $74, $69, $6a, $6b
19c91     63 6C 6C 78 
19c95     71 66 62 63 
19c99     5F 56 51 5B 
19c9d     5B 55 4E 5D | 	byte	$63, $6c, $6c, $78, $71, $66, $62, $63, $5f, $56, $51, $5b, $5b, $55, $4e, $5d
19ca1     66 70 73 73 
19ca5     79 7E 87 96 
19ca9     A6 9F A4 B0 
19cad     B4 9C 70 6C | 	byte	$66, $70, $73, $73, $79, $7e, $87, $96, $a6, $9f, $a4, $b0, $b4, $9c, $70, $6c
19cb1     93 A7 96 73 
19cb5     63 68 65 69 
19cb9     69 57 4D 57 
19cbd     60 66 55 45 | 	byte	$93, $a7, $96, $73, $63, $68, $65, $69, $69, $57, $4d, $57, $60, $66, $55, $45
19cc1     45 44 39 33 
19cc5     52 73 7F 7A 
19cc9     7B 8A 9B AF 
19ccd     AB 91 8D 99 | 	byte	$45, $44, $39, $33, $52, $73, $7f, $7a, $7b, $8a, $9b, $af, $ab, $91, $8d, $99
19cd1     AA A4 A2 AD 
19cd5     B7 C1 C4 C5 
19cd9     B1 A8 C4 DD 
19cdd     CF C6 C5 B2 | 	byte	$aa, $a4, $a2, $ad, $b7, $c1, $c4, $c5, $b1, $a8, $c4, $dd, $cf, $c6, $c5, $b2
19ce1     9A 92 9E A6 
19ce5     AA A2 97 91 
19ce9     88 81 83 94 
19ced     81 68 5C 70 | 	byte	$9a, $92, $9e, $a6, $aa, $a2, $97, $91, $88, $81, $83, $94, $81, $68, $5c, $70
19cf1     6B 45 13 1C 
19cf5     33 36 44 51 
19cf9     49 4B 5E 67 
19cfd     6C 6E 6B 70 | 	byte	$6b, $45, $13, $1c, $33, $36, $44, $51, $49, $4b, $5e, $67, $6c, $6e, $6b, $70
19d01     69 59 4A 30 
19d05     35 5B 7C 86 
19d09     8C 8B 91 8B 
19d0d     7F 7C 76 7C | 	byte	$69, $59, $4a, $30, $35, $5b, $7c, $86, $8c, $8b, $91, $8b, $7f, $7c, $76, $7c
19d11     9C 9D 80 75 
19d15     6C 61 67 6B 
19d19     72 82 8C 8B 
19d1d     88 83 8E 99 | 	byte	$9c, $9d, $80, $75, $6c, $61, $67, $6b, $72, $82, $8c, $8b, $88, $83, $8e, $99
19d21     9D 9E 8F 7D 
19d25     79 7F 93 8E 
19d29     8B A3 BF CA 
19d2d     BF B9 BC CA | 	byte	$9d, $9e, $8f, $7d, $79, $7f, $93, $8e, $8b, $a3, $bf, $ca, $bf, $b9, $bc, $ca
19d31     D4 B8 9A 83 
19d35     6D 6A 72 7C 
19d39     7C 70 5B 53 
19d3d     53 58 60 63 | 	byte	$d4, $b8, $9a, $83, $6d, $6a, $72, $7c, $7c, $70, $5b, $53, $53, $58, $60, $63
19d41     57 59 56 5B 
19d45     4F 39 4B 61 
19d49     7E 95 9D 94 
19d4d     79 66 6C 8D | 	byte	$57, $59, $56, $5b, $4f, $39, $4b, $61, $7e, $95, $9d, $94, $79, $66, $6c, $8d
19d51     A8 AE A7 8F 
19d55     75 67 6B 6A 
19d59     68 61 6A 85 
19d5d     78 7A 7B 87 | 	byte	$a8, $ae, $a7, $8f, $75, $67, $6b, $6a, $68, $61, $6a, $85, $78, $7a, $7b, $87
19d61     91 9B 99 93 
19d65     8A 85 8E 8E 
19d69     93 8F 85 82 
19d6d     8A 8C 8C 8A | 	byte	$91, $9b, $99, $93, $8a, $85, $8e, $8e, $93, $8f, $85, $82, $8a, $8c, $8c, $8a
19d71     8E 7E 69 62 
19d75     70 7E 98 98 
19d79     82 7B 86 8F 
19d7d     92 A4 A3 8D | 	byte	$8e, $7e, $69, $62, $70, $7e, $98, $98, $82, $7b, $86, $8f, $92, $a4, $a3, $8d
19d81     7E 7D 81 81 
19d85     93 B3 C7 BA 
19d89     9D 8D 80 77 
19d8d     73 70 6D 61 | 	byte	$7e, $7d, $81, $81, $93, $b3, $c7, $ba, $9d, $8d, $80, $77, $73, $70, $6d, $61
19d91     6A 6C 65 5C 
19d95     5A 53 65 72 
19d99     6C 5E 59 58 
19d9d     4E 6D 77 75 | 	byte	$6a, $6c, $65, $5c, $5a, $53, $65, $72, $6c, $5e, $59, $58, $4e, $6d, $77, $75
19da1     6E 6A 60 68 
19da5     6E 7A 7F 91 
19da9     9E 99 95 8F 
19dad     91 91 8D 9A | 	byte	$6e, $6a, $60, $68, $6e, $7a, $7f, $91, $9e, $99, $95, $8f, $91, $91, $8d, $9a
19db1     A6 88 65 51 
19db5     57 62 7B 8C 
19db9     80 74 51 4B 
19dbd     58 64 53 30 | 	byte	$a6, $88, $65, $51, $57, $62, $7b, $8c, $80, $74, $51, $4b, $58, $64, $53, $30
19dc1     2D 45 4E 5D 
19dc5     6F 85 8F 96 
19dc9     A2 B5 B4 B2 
19dcd     B1 9F 91 99 | 	byte	$2d, $45, $4e, $5d, $6f, $85, $8f, $96, $a2, $b5, $b4, $b2, $b1, $9f, $91, $99
19dd1     AF B3 AB 9F 
19dd5     A1 A7 AE BB 
19dd9     B9 BF CC B9 
19ddd     AD A4 A2 A6 | 	byte	$af, $b3, $ab, $9f, $a1, $a7, $ae, $bb, $b9, $bf, $cc, $b9, $ad, $a4, $a2, $a6
19de1     AC B3 AB 94 
19de5     77 6A 6E 6E 
19de9     84 9A A3 9D 
19ded     75 51 3C 3A | 	byte	$ac, $b3, $ab, $94, $77, $6a, $6e, $6e, $84, $9a, $a3, $9d, $75, $51, $3c, $3a
19df1     41 3A 2D 2E 
19df5     36 3D 46 59 
19df9     6D 76 69 6A 
19dfd     75 68 51 43 | 	byte	$41, $3a, $2d, $2e, $36, $3d, $46, $59, $6d, $76, $69, $6a, $75, $68, $51, $43
19e01     35 37 4B 75 
19e05     94 99 88 78 
19e09     7C 7D 83 98 
19e0d     9A 89 7B 80 | 	byte	$35, $37, $4b, $75, $94, $99, $88, $78, $7c, $7d, $83, $98, $9a, $89, $7b, $80
19e11     88 86 78 70 
19e15     74 86 8F 94 
19e19     A3 A0 86 88 
19e1d     A3 B9 BB 94 | 	byte	$88, $86, $78, $70, $74, $86, $8f, $94, $a3, $a0, $86, $88, $a3, $b9, $bb, $94
19e21     83 7B 79 76 
19e25     76 7C 8E A7 
19e29     C0 CD D3 CD 
19e2d     C1 BC BF B6 | 	byte	$83, $7b, $79, $76, $76, $7c, $8e, $a7, $c0, $cd, $d3, $cd, $c1, $bc, $bf, $b6
19e31     A3 8F 76 63 
19e35     64 6B 7C 7B 
19e39     60 42 3E 43 
19e3d     49 3D 42 4D | 	byte	$a3, $8f, $76, $63, $64, $6b, $7c, $7b, $60, $42, $3e, $43, $49, $3d, $42, $4d
19e41     42 3A 42 53 
19e45     5C 61 76 8C 
19e49     A0 A3 A6 9B 
19e4d     7D 84 9A AF | 	byte	$42, $3a, $42, $53, $5c, $61, $76, $8c, $a0, $a3, $a6, $9b, $7d, $84, $9a, $af
19e51     A6 8D 6F 60 
19e55     63 66 6A 75 
19e59     7E 8B 8A 8B 
19e5d     95 95 8D 8D | 	byte	$a6, $8d, $6f, $60, $63, $66, $6a, $75, $7e, $8b, $8a, $8b, $95, $95, $8d, $8d
19e61     9F A3 8D 7E 
19e65     7A 84 8E 8D 
19e69     9A A0 9E 89 
19e6d     6D 66 66 6B | 	byte	$9f, $a3, $8d, $7e, $7a, $84, $8e, $8d, $9a, $a0, $9e, $89, $6d, $66, $66, $6b
19e71     80 86 80 73 
19e75     5E 64 76 87 
19e79     8B 92 A1 9F 
19e7d     8D 81 7D 81 | 	byte	$80, $86, $80, $73, $5e, $64, $76, $87, $8b, $92, $a1, $9f, $8d, $81, $7d, $81
19e81     97 B0 CD C9 
19e85     B3 A4 8F 82 
19e89     8B A2 A2 80 
19e8d     59 54 5F 74 | 	byte	$97, $b0, $cd, $c9, $b3, $a4, $8f, $82, $8b, $a2, $a2, $80, $59, $54, $5f, $74
19e91     72 60 4F 51 
19e95     61 6C 6F 5C 
19e99     50 55 76 8A 
19e9d     7E 66 53 4D | 	byte	$72, $60, $4f, $51, $61, $6c, $6f, $5c, $50, $55, $76, $8a, $7e, $66, $53, $4d
19ea1     56 51 6B 82 
19ea5     8D 89 7E 76 
19ea9     85 93 A0 95 
19ead     8D 8F 9D 9D | 	byte	$56, $51, $6b, $82, $8d, $89, $7e, $76, $85, $93, $a0, $95, $8d, $8f, $9d, $9d
19eb1     8B 6B 5F 61 
19eb5     78 8B 89 7A 
19eb9     66 69 73 6E 
19ebd     58 3C 30 4B | 	byte	$8b, $6b, $5f, $61, $78, $8b, $89, $7a, $66, $69, $73, $6e, $58, $3c, $30, $4b
19ec1     70 83 78 76 
19ec5     85 98 9F B5 
19ec9     CD C5 9E 7B 
19ecd     7C 97 AE A4 | 	byte	$70, $83, $78, $76, $85, $98, $9f, $b5, $cd, $c5, $9e, $7b, $7c, $97, $ae, $a4
19ed1     8E 75 76 82 
19ed5     A3 BA BB C0 
19ed9     B3 A7 B5 B5 
19edd     A8 9B A3 AA | 	byte	$8e, $75, $76, $82, $a3, $ba, $bb, $c0, $b3, $a7, $b5, $b5, $a8, $9b, $a3, $aa
19ee1     97 80 74 72 
19ee5     83 99 96 84 
19ee9     7F 89 7F 58 
19eed     37 3D 55 59 | 	byte	$97, $80, $74, $72, $83, $99, $96, $84, $7f, $89, $7f, $58, $37, $3d, $55, $59
19ef1     48 32 28 34 
19ef5     4A 51 51 67 
19ef9     78 6B 5E 49 
19efd     2A 1F 36 64 | 	byte	$48, $32, $28, $34, $4a, $51, $51, $67, $78, $6b, $5e, $49, $2a, $1f, $36, $64
19f01     82 8A 85 75 
19f05     62 61 77 92 
19f09     A3 AE A1 7D 
19f0d     77 8F 9C 9D | 	byte	$82, $8a, $85, $75, $62, $61, $77, $92, $a3, $ae, $a1, $7d, $77, $8f, $9c, $9d
19f11     97 8E 8C 95 
19f15     A4 96 8A 8F 
19f19     9E B0 BB C0 
19f1d     A7 89 7B 7B | 	byte	$97, $8e, $8c, $95, $a4, $96, $8a, $8f, $9e, $b0, $bb, $c0, $a7, $89, $7b, $7b
19f21     76 74 7C 90 
19f25     92 97 9E A3 
19f29     BB C7 B7 9F 
19f2d     A3 A9 8B 6C | 	byte	$76, $74, $7c, $90, $92, $97, $9e, $a3, $bb, $c7, $b7, $9f, $a3, $a9, $8b, $6c
19f31     62 69 77 70 
19f35     62 56 3C 3F 
19f39     44 55 5C 5A 
19f3d     3C 2C 3A 5C | 	byte	$62, $69, $77, $70, $62, $56, $3c, $3f, $44, $55, $5c, $5a, $3c, $2c, $3a, $5c
19f41     62 56 54 6C 
19f45     77 95 B4 B8 
19f49     A4 9B 85 7B 
19f4d     8A 9D 9E 83 | 	byte	$62, $56, $54, $6c, $77, $95, $b4, $b8, $a4, $9b, $85, $7b, $8a, $9d, $9e, $83
19f51     6D 5F 63 66 
19f55     6F 75 7F 90 
19f59     9D 99 97 9B 
19f5d     95 85 83 82 | 	byte	$6d, $5f, $63, $66, $6f, $75, $7f, $90, $9d, $99, $97, $9b, $95, $85, $83, $82
19f61     88 87 91 97 
19f65     A7 AC A8 97 
19f69     87 82 70 70 
19f6d     6F 7B 7B 72 | 	byte	$88, $87, $91, $97, $a7, $ac, $a8, $97, $87, $82, $70, $70, $6f, $7b, $7b, $72
19f71     57 56 6B 75 
19f75     7C 70 6A 7B 
19f79     8A 92 8E 7C 
19f7d     75 92 AF C1 | 	byte	$57, $56, $6b, $75, $7c, $70, $6a, $7b, $8a, $92, $8e, $7c, $75, $92, $af, $c1
19f81     C0 AC 95 8B 
19f85     8C 8D A9 AF 
19f89     99 77 69 6D 
19f8d     63 78 7C 71 | 	byte	$c0, $ac, $95, $8b, $8c, $8d, $a9, $af, $99, $77, $69, $6d, $63, $78, $7c, $71
19f91     73 74 63 56 
19f95     50 47 41 66 
19f99     88 8E 83 59 
19f9d     54 5B 5C 5E | 	byte	$73, $74, $63, $56, $50, $47, $41, $66, $88, $8e, $83, $59, $54, $5b, $5c, $5e
19fa1     62 63 67 73 
19fa5     7C 82 8B 82 
19fa9     76 83 A2 AB 
19fad     96 77 72 72 | 	byte	$62, $63, $67, $73, $7c, $82, $8b, $82, $76, $83, $a2, $ab, $96, $77, $72, $72
19fb1     7E 90 9E 97 
19fb5     81 65 69 73 
19fb9     87 8B 87 67 
19fbd     71 82 8D 88 | 	byte	$7e, $90, $9e, $97, $81, $65, $69, $73, $87, $8b, $87, $67, $71, $82, $8d, $88
19fc1     78 63 74 99 
19fc5     B5 AE 9E 90 
19fc9     8D 97 92 87 
19fcd     7B 83 8C 93 | 	byte	$78, $63, $74, $99, $b5, $ae, $9e, $90, $8d, $97, $92, $87, $7b, $83, $8c, $93
19fd1     96 90 8D 90 
19fd5     90 97 A0 9C 
19fd9     9C A7 A1 A0 
19fdd     A7 9C 94 89 | 	byte	$96, $90, $8d, $90, $90, $97, $a0, $9c, $9c, $a7, $a1, $a0, $a7, $9c, $94, $89
19fe1     6F 73 98 B9 
19fe5     C4 B8 A1 86 
19fe9     74 59 52 5D 
19fed     59 51 4F 4A | 	byte	$6f, $73, $98, $b9, $c4, $b8, $a1, $86, $74, $59, $52, $5d, $59, $51, $4f, $4a
19ff1     4A 54 5D 50 
19ff5     31 24 2E 35 
19ff9     4B 4E 3E 42 
19ffd     5A 68 60 56 | 	byte	$4a, $54, $5d, $50, $31, $24, $2e, $35, $4b, $4e, $3e, $42, $5a, $68, $60, $56
1a001     62 72 77 82 
1a005     98 A3 97 81 
1a009     7D 7A 92 A9 
1a00d     B7 C2 CD C8 | 	byte	$62, $72, $77, $82, $98, $a3, $97, $81, $7d, $7a, $92, $a9, $b7, $c2, $cd, $c8
1a011     B2 9C 9F 96 
1a015     91 A3 C3 BD 
1a019     AC 9D 8A 70 
1a01d     6B 81 95 86 | 	byte	$b2, $9c, $9f, $96, $91, $a3, $c3, $bd, $ac, $9d, $8a, $70, $6b, $81, $95, $86
1a021     77 74 89 A9 
1a025     B5 9F 8F 91 
1a029     8E 8C 90 81 
1a02d     63 4E 4C 70 | 	byte	$77, $74, $89, $a9, $b5, $9f, $8f, $91, $8e, $8c, $90, $81, $63, $4e, $4c, $70
1a031     84 79 62 56 
1a035     41 33 2C 4A 
1a039     62 6D 5F 4F 
1a03d     56 60 5B 50 | 	byte	$84, $79, $62, $56, $41, $33, $2c, $4a, $62, $6d, $5f, $4f, $56, $60, $5b, $50
1a041     69 8A 9B 9E 
1a045     9B 96 98 97 
1a049     9D 9D 94 84 
1a04d     82 80 74 6B | 	byte	$69, $8a, $9b, $9e, $9b, $96, $98, $97, $9d, $9d, $94, $84, $82, $80, $74, $6b
1a051     67 66 64 75 
1a055     91 99 8F 76 
1a059     6F 84 8B 8B 
1a05d     85 8D 8A 86 | 	byte	$67, $66, $64, $75, $91, $99, $8f, $76, $6f, $84, $8b, $8b, $85, $8d, $8a, $86
1a061     87 A7 BC C0 
1a065     C0 B9 A0 8B 
1a069     81 82 81 75 
1a06d     5A 41 40 65 | 	byte	$87, $a7, $bc, $c0, $c0, $b9, $a0, $8b, $81, $82, $81, $75, $5a, $41, $40, $65
1a071     6C 68 62 64 
1a075     63 4F 4D 73 
1a079     94 9F A5 A5 
1a07d     98 8C 92 8E | 	byte	$6c, $68, $62, $64, $63, $4f, $4d, $73, $94, $9f, $a5, $a5, $98, $8c, $92, $8e
1a081     82 7A 81 8B 
1a085     91 90 7F 80 
1a089     8E 93 8A 79 
1a08d     7E 85 8A 7D | 	byte	$82, $7a, $81, $8b, $91, $90, $7f, $80, $8e, $93, $8a, $79, $7e, $85, $8a, $7d
1a091     71 62 55 6F 
1a095     80 71 5D 69 
1a099     71 6F 5E 66 
1a09d     75 71 4B 2B | 	byte	$71, $62, $55, $6f, $80, $71, $5d, $69, $71, $6f, $5e, $66, $75, $71, $4b, $2b
1a0a1     2F 6E 92 89 
1a0a5     87 82 78 6B 
1a0a9     72 7F 7E 78 
1a0ad     84 9E AF 9A | 	byte	$2f, $6e, $92, $89, $87, $82, $78, $6b, $72, $7f, $7e, $78, $84, $9e, $af, $9a
1a0b1     90 82 80 6F 
1a0b5     6F 75 86 94 
1a0b9     9A 97 95 96 
1a0bd     93 8F 97 9A | 	byte	$90, $82, $80, $6f, $6f, $75, $86, $94, $9a, $97, $95, $96, $93, $8f, $97, $9a
1a0c1     97 88 81 7D 
1a0c5     77 69 7D 94 
1a0c9     A4 97 76 71 
1a0cd     7A 82 7B 76 | 	byte	$97, $88, $81, $7d, $77, $69, $7d, $94, $a4, $97, $76, $71, $7a, $82, $7b, $76
1a0d1     79 7B 89 A2 
1a0d5     A0 82 67 67 
1a0d9     80 8E 8C 9E 
1a0dd     AB 98 8F 98 | 	byte	$79, $7b, $89, $a2, $a0, $82, $67, $67, $80, $8e, $8c, $9e, $ab, $98, $8f, $98
1a0e1     AD BB CE C7 
1a0e5     B7 95 70 67 
1a0e9     75 6E 53 4B 
1a0ed     53 64 66 50 | 	byte	$ad, $bb, $ce, $c7, $b7, $95, $70, $67, $75, $6e, $53, $4b, $53, $64, $66, $50
1a0f1     4B 3B 32 26 
1a0f5     1A 2F 4B 5D 
1a0f9     63 54 45 48 
1a0fd     56 51 4E 57 | 	byte	$4b, $3b, $32, $26, $1a, $2f, $4b, $5d, $63, $54, $45, $48, $56, $51, $4e, $57
1a101     6A 6E 77 76 
1a105     73 7C 9B BC 
1a109     CD CA C5 BE 
1a10d     C3 BE BF BF | 	byte	$6a, $6e, $77, $76, $73, $7c, $9b, $bc, $cd, $ca, $c5, $be, $c3, $be, $bf, $bf
1a111     C8 D0 D7 D4 
1a115     C3 B3 9B 82 
1a119     77 76 83 85 
1a11d     76 64 62 70 | 	byte	$c8, $d0, $d7, $d4, $c3, $b3, $9b, $82, $77, $76, $83, $85, $76, $64, $62, $70
1a121     84 99 AD A0 
1a125     82 6B 72 81 
1a129     7D 6B 60 53 
1a12d     59 68 62 64 | 	byte	$84, $99, $ad, $a0, $82, $6b, $72, $81, $7d, $6b, $60, $53, $59, $68, $62, $64
1a131     53 42 41 4E 
1a135     5F 5A 58 6E 
1a139     7C 7B 6D 75 
1a13d     87 96 94 8D | 	byte	$53, $42, $41, $4e, $5f, $5a, $58, $6e, $7c, $7b, $6d, $75, $87, $96, $94, $8d
1a141     93 9D 91 99 
1a145     9F A3 A9 9E 
1a149     90 79 6B 5D 
1a14d     75 85 78 68 | 	byte	$93, $9d, $91, $99, $9f, $a3, $a9, $9e, $90, $79, $6b, $5d, $75, $85, $78, $68
1a151     5F 73 88 81 
1a155     74 67 6A 7B 
1a159     7E 84 91 96 
1a15d     93 92 A3 C3 | 	byte	$5f, $73, $88, $81, $74, $67, $6a, $7b, $7e, $84, $91, $96, $93, $92, $a3, $c3
1a161     C4 CC C7 B9 
1a165     90 6A 73 7D 
1a169     80 7F 70 6E 
1a16d     5C 48 50 55 | 	byte	$c4, $cc, $c7, $b9, $90, $6a, $73, $7d, $80, $7f, $70, $6e, $5c, $48, $50, $55
1a171     4F 5A 68 81 
1a175     8C 85 84 91 
1a179     90 81 81 83 
1a17d     80 7C 68 62 | 	byte	$4f, $5a, $68, $81, $8c, $85, $84, $91, $90, $81, $81, $83, $80, $7c, $68, $62
1a181     5D 61 58 5E 
1a185     78 99 B4 AE 
1a189     AE 9A 7D 76 
1a18d     83 92 91 7D | 	byte	$5d, $61, $58, $5e, $78, $99, $b4, $ae, $ae, $9a, $7d, $76, $83, $92, $91, $7d
1a191     75 85 8A 82 
1a195     7B 6B 6F 5D 
1a199     4D 47 4A 4E 
1a19d     48 4A 62 6C | 	byte	$75, $85, $8a, $82, $7b, $6b, $6f, $5d, $4d, $47, $4a, $4e, $48, $4a, $62, $6c
1a1a1     7C 97 97 78 
1a1a5     68 7D 9D 9D 
1a1a9     90 88 8C 8D 
1a1ad     81 80 7C 75 | 	byte	$7c, $97, $97, $78, $68, $7d, $9d, $9d, $90, $88, $8c, $8d, $81, $80, $7c, $75
1a1b1     76 79 8B A1 
1a1b5     8D 77 8D AE 
1a1b9     AE 9B 98 A3 
1a1bd     9E 9E 9B 8D | 	byte	$76, $79, $8b, $a1, $8d, $77, $8d, $ae, $ae, $9b, $98, $a3, $9e, $9e, $9b, $8d
1a1c1     81 74 72 79 
1a1c5     83 80 7D 72 
1a1c9     66 55 4A 62 
1a1cd     7F 86 75 7B | 	byte	$81, $74, $72, $79, $83, $80, $7d, $72, $66, $55, $4a, $62, $7f, $86, $75, $7b
1a1d1     90 8C 70 6C 
1a1d5     69 6C 75 7D 
1a1d9     8F 9D A3 B0 
1a1dd     C3 C6 BE B9 | 	byte	$90, $8c, $70, $6c, $69, $6c, $75, $7d, $8f, $9d, $a3, $b0, $c3, $c6, $be, $b9
1a1e1     BF BC A4 86 
1a1e5     7B 83 83 6C 
1a1e9     67 70 6F 6C 
1a1ed     5C 48 29 27 | 	byte	$bf, $bc, $a4, $86, $7b, $83, $83, $6c, $67, $70, $6f, $6c, $5c, $48, $29, $27
1a1f1     3D 50 57 46 
1a1f5     35 4F 65 51 
1a1f9     32 27 36 48 
1a1fd     3F 37 46 5B | 	byte	$3d, $50, $57, $46, $35, $4f, $65, $51, $32, $27, $36, $48, $3f, $37, $46, $5b
1a201     69 74 88 9E 
1a205     A6 B5 BF CC 
1a209     CB C7 DD E6 
1a20d     E6 DD D7 D0 | 	byte	$69, $74, $88, $9e, $a6, $b5, $bf, $cc, $cb, $c7, $dd, $e6, $e6, $dd, $d7, $d0
1a211     C5 C1 BF B2 
1a215     A2 95 85 76 
1a219     5C 4F 49 65 
1a21d     81 8D 88 7D | 	byte	$c5, $c1, $bf, $b2, $a2, $95, $85, $76, $5c, $4f, $49, $65, $81, $8d, $88, $7d
1a221     89 84 7F 89 
1a225     9B 9C 87 7C 
1a229     65 3F 2A 27 
1a22d     31 33 43 4C | 	byte	$89, $84, $7f, $89, $9b, $9c, $87, $7c, $65, $3f, $2a, $27, $31, $33, $43, $4c
1a231     64 70 6B 59 
1a235     68 8D 9B 8E 
1a239     7D 7A 8C 9F 
1a23d     AD B0 A5 A5 | 	byte	$64, $70, $6b, $59, $68, $8d, $9b, $8e, $7d, $7a, $8c, $9f, $ad, $b0, $a5, $a5
1a241     AE B2 99 8E 
1a245     85 7E 6F 66 
1a249     5B 72 81 80 
1a24d     74 69 6E 79 | 	byte	$ae, $b2, $99, $8e, $85, $7e, $6f, $66, $5b, $72, $81, $80, $74, $69, $6e, $79
1a251     72 6C 70 71 
1a255     65 7D 96 90 
1a259     74 84 9D AD 
1a25d     AD 9B A3 B1 | 	byte	$72, $6c, $70, $71, $65, $7d, $96, $90, $74, $84, $9d, $ad, $ad, $9b, $a3, $b1
1a261     C0 A5 8E 95 
1a265     A5 A3 9F 96 
1a269     81 78 67 5B 
1a26d     5E 55 62 71 | 	byte	$c0, $a5, $8e, $95, $a5, $a3, $9f, $96, $81, $78, $67, $5b, $5e, $55, $62, $71
1a271     7B 76 80 75 
1a275     6F 79 83 79 
1a279     5F 53 51 56 
1a27d     67 56 3E 51 | 	byte	$7b, $76, $80, $75, $6f, $79, $83, $79, $5f, $53, $51, $56, $67, $56, $3e, $51
1a281     77 88 8B 92 
1a285     A7 AF 92 8C 
1a289     9E BB B8 B2 
1a28d     A1 89 7B 66 | 	byte	$77, $88, $8b, $92, $a7, $af, $92, $8c, $9e, $bb, $b8, $b2, $a1, $89, $7b, $66
1a291     67 77 85 78 
1a295     63 66 68 48 
1a299     3A 56 68 6F 
1a29d     6D 73 81 85 | 	byte	$67, $77, $85, $78, $63, $66, $68, $48, $3a, $56, $68, $6f, $6d, $73, $81, $85
1a2a1     95 9A A3 A5 
1a2a5     A7 A6 96 92 
1a2a9     80 67 60 69 
1a2ad     58 4D 67 86 | 	byte	$95, $9a, $a3, $a5, $a7, $a6, $96, $92, $80, $67, $60, $69, $58, $4d, $67, $86
1a2b1     77 74 98 A2 
1a2b5     A9 AC A7 97 
1a2b9     8C 9B B5 B5 
1a2bd     A2 93 91 7C | 	byte	$77, $74, $98, $a2, $a9, $ac, $a7, $97, $8c, $9b, $b5, $b5, $a2, $93, $91, $7c
1a2c1     6D 5F 5D 52 
1a2c5     4F 42 48 66 
1a2c9     7D 73 60 84 
1a2cd     92 80 6F 6C | 	byte	$6d, $5f, $5d, $52, $4f, $42, $48, $66, $7d, $73, $60, $84, $92, $80, $6f, $6c
1a2d1     6F 72 77 80 
1a2d5     8A 88 82 8D 
1a2d9     9D AD BA B6 
1a2dd     AC AB A3 8D | 	byte	$6f, $72, $77, $80, $8a, $88, $82, $8d, $9d, $ad, $ba, $b6, $ac, $ab, $a3, $8d
1a2e1     93 A4 AF 9E 
1a2e5     9C 9A 87 70 
1a2e9     69 5C 4E 4D 
1a2ed     59 5C 54 47 | 	byte	$93, $a4, $af, $9e, $9c, $9a, $87, $70, $69, $5c, $4e, $4d, $59, $5c, $54, $47
1a2f1     44 3E 29 2B 
1a2f5     39 41 3D 25 
1a2f9     21 39 4B 43 
1a2fd     44 63 92 97 | 	byte	$44, $3e, $29, $2b, $39, $41, $3d, $25, $21, $39, $4b, $43, $44, $63, $92, $97
1a301     91 A0 B1 AC 
1a305     A9 B2 D5 E5 
1a309     D9 DD E6 E6 
1a30d     D9 C7 B7 A8 | 	byte	$91, $a0, $b1, $ac, $a9, $b2, $d5, $e5, $d9, $dd, $e6, $e6, $d9, $c7, $b7, $a8
1a311     9C 8E 8A 96 
1a315     93 7B 6B 6B 
1a319     5E 51 67 83 
1a31d     82 77 73 90 | 	byte	$9c, $8e, $8a, $96, $93, $7b, $6b, $6b, $5e, $51, $67, $83, $82, $77, $73, $90
1a321     A2 A3 A1 8F 
1a325     79 4F 43 41 
1a329     40 33 2A 3D 
1a32d     56 52 46 52 | 	byte	$a2, $a3, $a1, $8f, $79, $4f, $43, $41, $40, $33, $2a, $3d, $56, $52, $46, $52
1a331     6A 7E 89 94 
1a335     A0 A5 9B 95 
1a339     9E 9D 91 98 
1a33d     99 9A 8F 96 | 	byte	$6a, $7e, $89, $94, $a0, $a5, $9b, $95, $9e, $9d, $91, $98, $99, $9a, $8f, $96
1a341     86 7A 62 52 
1a345     58 6F 87 8B 
1a349     85 84 86 7C 
1a34d     72 6F 67 52 | 	byte	$86, $7a, $62, $52, $58, $6f, $87, $8b, $85, $84, $86, $7c, $72, $6f, $67, $52
1a351     5A 77 92 90 
1a355     8C 82 7A 72 
1a359     79 8E 93 8E 
1a35d     92 9A AB B4 | 	byte	$5a, $77, $92, $90, $8c, $82, $7a, $72, $79, $8e, $93, $8e, $92, $9a, $ab, $b4
1a361     B2 BD C1 B6 
1a365     9F 97 9D 99 
1a369     87 83 81 7B 
1a36d     59 4B 3F 54 | 	byte	$b2, $bd, $c1, $b6, $9f, $97, $9d, $99, $87, $83, $81, $7b, $59, $4b, $3f, $54
1a371     6E 6E 6A 5A 
1a375     4C 4A 4C 65 
1a379     6C 61 51 61 
1a37d     7B 8B 99 9C | 	byte	$6e, $6e, $6a, $5a, $4c, $4a, $4c, $65, $6c, $61, $51, $61, $7b, $8b, $99, $9c
1a381     8F 77 77 8B 
1a385     9A A4 BB BF 
1a389     AF 9E 95 95 
1a38d     7E 5E 55 68 | 	byte	$8f, $77, $77, $8b, $9a, $a4, $bb, $bf, $af, $9e, $95, $95, $7e, $5e, $55, $68
1a391     81 87 77 5E 
1a395     65 68 5B 5C 
1a399     71 81 85 87 
1a39d     88 8B 8E A5 | 	byte	$81, $87, $77, $5e, $65, $68, $5b, $5c, $71, $81, $85, $87, $88, $8b, $8e, $a5
1a3a1     A5 A2 A7 99 
1a3a5     7F 6C 58 5E 
1a3a9     67 71 84 83 
1a3ad     64 64 6F 74 | 	byte	$a5, $a2, $a7, $99, $7f, $6c, $58, $5e, $67, $71, $84, $83, $64, $64, $6f, $74
1a3b1     87 A2 B0 A4 
1a3b5     9E A1 AD 9D 
1a3b9     9C 99 86 78 
1a3bd     74 6E 5E 59 | 	byte	$87, $a2, $b0, $a4, $9e, $a1, $ad, $9d, $9c, $99, $86, $78, $74, $6e, $5e, $59
1a3c1     57 59 5B 61 
1a3c5     68 6D 79 88 
1a3c9     77 77 99 9F 
1a3cd     83 6A 63 70 | 	byte	$57, $59, $5b, $61, $68, $6d, $79, $88, $77, $77, $99, $9f, $83, $6a, $63, $70
1a3d1     7E 8F 97 89 
1a3d5     80 89 8E 86 
1a3d9     7A 85 92 A4 
1a3dd     B0 AF B0 B5 | 	byte	$7e, $8f, $97, $89, $80, $89, $8e, $86, $7a, $85, $92, $a4, $b0, $af, $b0, $b5
1a3e1     B3 A4 93 90 
1a3e5     8C 80 82 76 
1a3e9     66 59 56 4B 
1a3ed     25 0D 1B 38 | 	byte	$b3, $a4, $93, $90, $8c, $80, $82, $76, $66, $59, $56, $4b, $25, $0d, $1b, $38
1a3f1     47 3D 3D 42 
1a3f5     54 5D 53 48 
1a3f9     48 5F 6D 77 
1a3fd     8E 9C 9F A0 | 	byte	$47, $3d, $3d, $42, $54, $5d, $53, $48, $48, $5f, $6d, $77, $8e, $9c, $9f, $a0
1a401     9B A2 A9 B5 
1a405     CA CC C7 D0 
1a409     D8 D3 C1 B3 
1a40d     A1 A2 A9 A7 | 	byte	$9b, $a2, $a9, $b5, $ca, $cc, $c7, $d0, $d8, $d3, $c1, $b3, $a1, $a2, $a9, $a7
1a411     A4 92 89 8A 
1a415     87 8B 85 76 
1a419     6B 6F 6C 60 
1a41d     69 8B 94 80 | 	byte	$a4, $92, $89, $8a, $87, $8b, $85, $76, $6b, $6f, $6c, $60, $69, $8b, $94, $80
1a421     6D 68 56 57 
1a425     4E 5A 6D 74 
1a429     5D 51 42 35 
1a42d     39 43 66 93 | 	byte	$6d, $68, $56, $57, $4e, $5a, $6d, $74, $5d, $51, $42, $35, $39, $43, $66, $93
1a431     98 88 8A 8F 
1a435     8D 81 94 93 
1a439     84 84 8C 80 
1a43d     6A 5F 65 6F | 	byte	$98, $88, $8a, $8f, $8d, $81, $94, $93, $84, $84, $8c, $80, $6a, $5f, $65, $6f
1a441     89 83 70 7E 
1a445     87 92 84 89 
1a449     9B A4 7C 5D 
1a44d     46 42 54 75 | 	byte	$89, $83, $70, $7e, $87, $92, $84, $89, $9b, $a4, $7c, $5d, $46, $42, $54, $75
1a451     79 5C 4C 66 
1a455     71 84 88 80 
1a459     84 90 86 87 
1a45d     AE CA D6 C0 | 	byte	$79, $5c, $4c, $66, $71, $84, $88, $80, $84, $90, $86, $87, $ae, $ca, $d6, $c0
1a461     B2 B5 AB 99 
1a465     A3 AC A3 8F 
1a469     85 76 4E 35 
1a46d     35 3D 5F 61 | 	byte	$b2, $b5, $ab, $99, $a3, $ac, $a3, $8f, $85, $76, $4e, $35, $35, $3d, $5f, $61
1a471     59 57 6A 70 
1a475     67 6E 6C 83 
1a479     96 93 88 80 
1a47d     7B 77 71 5F | 	byte	$59, $57, $6a, $70, $67, $6e, $6c, $83, $96, $93, $88, $80, $7b, $77, $71, $5f
1a481     71 89 A6 A8 
1a485     91 86 82 8C 
1a489     93 8D 83 7E 
1a48d     71 6D 74 83 | 	byte	$71, $89, $a6, $a8, $91, $86, $82, $8c, $93, $8d, $83, $7e, $71, $6d, $74, $83
1a491     82 79 74 85 
1a495     94 89 6F 80 
1a499     83 7E 71 8B 
1a49d     A5 A4 97 89 | 	byte	$82, $79, $74, $85, $94, $89, $6f, $80, $83, $7e, $71, $8b, $a5, $a4, $97, $89
1a4a1     82 7A 7A 81 
1a4a5     8F 86 81 74 
1a4a9     75 77 80 66 
1a4ad     61 76 7A 67 | 	byte	$82, $7a, $7a, $81, $8f, $86, $81, $74, $75, $77, $80, $66, $61, $76, $7a, $67
1a4b1     73 83 95 8F 
1a4b5     93 8E 82 7E 
1a4b9     82 77 6A 6F 
1a4bd     6B 6D 76 75 | 	byte	$73, $83, $95, $8f, $93, $8e, $82, $7e, $82, $77, $6a, $6f, $6b, $6d, $76, $75
1a4c1     77 7C 7F 87 
1a4c5     7D 82 9A 87 
1a4c9     73 78 77 6B 
1a4cd     62 72 89 7B | 	byte	$77, $7c, $7f, $87, $7d, $82, $9a, $87, $73, $78, $77, $6b, $62, $72, $89, $7b
1a4d1     73 72 77 7F 
1a4d5     86 83 96 B0 
1a4d9     A5 8A 8B 96 
1a4dd     AE B7 AD A2 | 	byte	$73, $72, $77, $7f, $86, $83, $96, $b0, $a5, $8a, $8b, $96, $ae, $b7, $ad, $a2
1a4e1     8A 75 7D 7F 
1a4e5     7B 63 4E 45 
1a4e9     52 43 28 20 
1a4ed     28 41 4B 5A | 	byte	$8a, $75, $7d, $7f, $7b, $63, $4e, $45, $52, $43, $28, $20, $28, $41, $4b, $5a
1a4f1     6F 6B 61 73 
1a4f5     79 7E 8F 8D 
1a4f9     88 70 5E 7A 
1a4fd     96 AC B4 AD | 	byte	$6f, $6b, $61, $73, $79, $7e, $8f, $8d, $88, $70, $5e, $7a, $96, $ac, $b4, $ad
1a501     AB B2 B3 A9 
1a505     AF CA DD CF 
1a509     C6 BC 9C 8E 
1a50d     A5 B5 BA C3 | 	byte	$ab, $b2, $b3, $a9, $af, $ca, $dd, $cf, $c6, $bc, $9c, $8e, $a5, $b5, $ba, $c3
1a511     AC 98 90 88 
1a515     7B 7C 7A 74 
1a519     57 58 6A 76 
1a51d     67 6B 6E 79 | 	byte	$ac, $98, $90, $88, $7b, $7c, $7a, $74, $57, $58, $6a, $76, $67, $6b, $6e, $79
1a521     69 6B 80 84 
1a525     71 72 63 53 
1a529     59 53 47 48 
1a52d     48 63 70 5F | 	byte	$69, $6b, $80, $84, $71, $72, $63, $53, $59, $53, $47, $48, $48, $63, $70, $5f
1a531     5B 6C 85 8A 
1a535     81 81 91 97 
1a539     8B 6A 5C 69 
1a53d     83 8D 98 A5 | 	byte	$5b, $6c, $85, $8a, $81, $81, $91, $97, $8b, $6a, $5c, $69, $83, $8d, $98, $a5
1a541     92 91 94 94 
1a545     9A 8A 79 79 
1a549     63 50 3D 47 
1a54d     5B 65 57 4A | 	byte	$92, $91, $94, $94, $9a, $8a, $79, $79, $63, $50, $3d, $47, $5b, $65, $57, $4a
1a551     59 7E 87 89 
1a555     99 A7 9B 8F 
1a559     98 9D A6 C1 
1a55d     CC B6 98 96 | 	byte	$59, $7e, $87, $89, $99, $a7, $9b, $8f, $98, $9d, $a6, $c1, $cc, $b6, $98, $96
1a561     9E A2 A1 9B 
1a565     9C 8A 78 6E 
1a569     5C 59 59 51 
1a56d     4E 5D 66 66 | 	byte	$9e, $a2, $a1, $9b, $9c, $8a, $78, $6e, $5c, $59, $59, $51, $4e, $5d, $66, $66
1a571     69 8B 95 92 
1a575     98 95 7A 69 
1a579     69 7B 6B 6A 
1a57d     70 7B 81 85 | 	byte	$69, $8b, $95, $92, $98, $95, $7a, $69, $69, $7b, $6b, $6a, $70, $7b, $81, $85
1a581     7C 77 8D 97 
1a585     8E 8B 9B 9F 
1a589     92 7B 86 9A 
1a58d     95 8C 85 75 | 	byte	$7c, $77, $8d, $97, $8e, $8b, $9b, $9f, $92, $7b, $86, $9a, $95, $8c, $85, $75
1a591     7A 88 8C 8C 
1a595     89 85 7D 7C 
1a599     80 83 87 A0 
1a59d     A8 8F 8A 8F | 	byte	$7a, $88, $8c, $8c, $89, $85, $7d, $7c, $80, $83, $87, $a0, $a8, $8f, $8a, $8f
1a5a1     7E 7C 80 90 
1a5a5     9B 87 76 7B 
1a5a9     68 42 2F 41 
1a5ad     56 60 60 6A | 	byte	$7e, $7c, $80, $90, $9b, $87, $76, $7b, $68, $42, $2f, $41, $56, $60, $60, $6a
1a5b1     80 7B 7A 72 
1a5b5     80 8A 86 7C 
1a5b9     93 95 8F 91 
1a5bd     91 9B 9A 7C | 	byte	$80, $7b, $7a, $72, $80, $8a, $86, $7c, $93, $95, $8f, $91, $91, $9b, $9a, $7c
1a5c1     79 7F 79 74 
1a5c5     80 78 6E 6B 
1a5c9     6B 6C 61 6F 
1a5cd     79 7D 7B 7A | 	byte	$79, $7f, $79, $74, $80, $78, $6e, $6b, $6b, $6c, $61, $6f, $79, $7d, $7b, $7a
1a5d1     82 99 9B 8B 
1a5d5     7F 88 9A A3 
1a5d9     94 8B 98 92 
1a5dd     74 75 72 6D | 	byte	$82, $99, $9b, $8b, $7f, $88, $9a, $a3, $94, $8b, $98, $92, $74, $75, $72, $6d
1a5e1     6D 6C 64 60 
1a5e5     4D 41 43 4A 
1a5e9     3F 2A 47 70 
1a5ed     82 84 7F 86 | 	byte	$6d, $6c, $64, $60, $4d, $41, $43, $4a, $3f, $2a, $47, $70, $82, $84, $7f, $86
1a5f1     89 7A 72 76 
1a5f5     7A 75 75 81 
1a5f9     7E 87 9A A8 
1a5fd     A5 9A A0 A9 | 	byte	$89, $7a, $72, $76, $7a, $75, $75, $81, $7e, $87, $9a, $a8, $a5, $9a, $a0, $a9
1a601     B2 C3 CE D0 
1a605     D7 C7 BE BB 
1a609     A7 A5 AF B6 
1a60d     BA B2 A8 9A | 	byte	$b2, $c3, $ce, $d0, $d7, $c7, $be, $bb, $a7, $a5, $af, $b6, $ba, $b2, $a8, $9a
1a611     8D 7A 79 7C 
1a615     6B 63 5F 55 
1a619     58 65 6E 69 
1a61d     68 7B 95 9A | 	byte	$8d, $7a, $79, $7c, $6b, $63, $5f, $55, $58, $65, $6e, $69, $68, $7b, $95, $9a
1a621     9F 95 76 56 
1a625     50 52 49 2D 
1a629     28 2F 3F 4B 
1a62d     5A 53 58 63 | 	byte	$9f, $95, $76, $56, $50, $52, $49, $2d, $28, $2f, $3f, $4b, $5a, $53, $58, $63
1a631     72 87 8E 8C 
1a635     90 8F 98 8E 
1a639     85 8E 9E 9F 
1a63d     98 97 9F 90 | 	byte	$72, $87, $8e, $8c, $90, $8f, $98, $8e, $85, $8e, $9e, $9f, $98, $97, $9f, $90
1a641     74 74 81 7E 
1a645     85 86 6B 48 
1a649     37 3E 5C 64 
1a64d     73 7C 84 8F | 	byte	$74, $74, $81, $7e, $85, $86, $6b, $48, $37, $3e, $5c, $64, $73, $7c, $84, $8f
1a651     92 94 9A 91 
1a655     89 9A AB A8 
1a659     A3 91 86 80 
1a65d     83 94 A1 A0 | 	byte	$92, $94, $9a, $91, $89, $9a, $ab, $a8, $a3, $91, $86, $80, $83, $94, $a1, $a0
1a661     9C 9B 8D 80 
1a665     7D 78 77 70 
1a669     74 7E 78 74 
1a66d     7A 69 6B 6D | 	byte	$9c, $9b, $8d, $80, $7d, $78, $77, $70, $74, $7e, $78, $74, $7a, $69, $6b, $6d
1a671     6B 73 78 75 
1a675     6F 79 7A 73 
1a679     78 75 75 6B 
1a67d     5F 6F 7B 88 | 	byte	$6b, $73, $78, $75, $6f, $79, $7a, $73, $78, $75, $75, $6b, $5f, $6f, $7b, $88
1a681     93 94 A6 B4 
1a685     B7 AF 93 7E 
1a689     82 86 91 A2 
1a68d     AF 94 7F 7A | 	byte	$93, $94, $a6, $b4, $b7, $af, $93, $7e, $82, $86, $91, $a2, $af, $94, $7f, $7a
1a691     81 81 7A 7A 
1a695     83 83 95 A5 
1a699     94 8A 85 91 
1a69d     9D A6 AA 99 | 	byte	$81, $81, $7a, $7a, $83, $83, $95, $a5, $94, $8a, $85, $91, $9d, $a6, $aa, $99
1a6a1     8B 7E 68 50 
1a6a5     4B 4A 44 35 
1a6a9     35 47 55 4F 
1a6ad     5C 60 59 5A | 	byte	$8b, $7e, $68, $50, $4b, $4a, $44, $35, $35, $47, $55, $4f, $5c, $60, $59, $5a
1a6b1     7C 92 89 6D 
1a6b5     87 AB C1 BF 
1a6b9     9F 8C 8D 89 
1a6bd     80 77 74 82 | 	byte	$7c, $92, $89, $6d, $87, $ab, $c1, $bf, $9f, $8c, $8d, $89, $80, $77, $74, $82
1a6c1     77 57 4E 64 
1a6c5     68 63 60 66 
1a6c9     6D 81 9C AA 
1a6cd     99 83 83 84 | 	byte	$77, $57, $4e, $64, $68, $63, $60, $66, $6d, $81, $9c, $aa, $99, $83, $83, $84
1a6d1     91 94 84 84 
1a6d5     8F 97 8A 6B 
1a6d9     62 69 73 6F 
1a6dd     72 73 6F 62 | 	byte	$91, $94, $84, $84, $8f, $97, $8a, $6b, $62, $69, $73, $6f, $72, $73, $6f, $62
1a6e1     4B 41 55 6C 
1a6e5     7B 74 71 7C 
1a6e9     68 6E 7A 7B 
1a6ed     72 6D 6A 66 | 	byte	$4b, $41, $55, $6c, $7b, $74, $71, $7c, $68, $6e, $7a, $7b, $72, $6d, $6a, $66
1a6f1     68 65 5A 76 
1a6f5     8D 9B A5 9C 
1a6f9     84 85 8A 93 
1a6fd     B0 C9 DB D3 | 	byte	$68, $65, $5a, $76, $8d, $9b, $a5, $9c, $84, $85, $8a, $93, $b0, $c9, $db, $d3
1a701     C3 B4 C1 CB 
1a705     C7 C5 C8 C6 
1a709     AC A0 A7 B1 
1a70d     A8 97 83 6D | 	byte	$c3, $b4, $c1, $cb, $c7, $c5, $c8, $c6, $ac, $a0, $a7, $b1, $a8, $97, $83, $6d
1a711     6F 74 5A 50 
1a715     61 68 63 5C 
1a719     65 81 88 8D 
1a71d     8B 7E 70 5C | 	byte	$6f, $74, $5a, $50, $61, $68, $63, $5c, $65, $81, $88, $8d, $8b, $7e, $70, $5c
1a721     41 36 3D 42 
1a725     32 1F 29 37 
1a729     3C 43 58 7E 
1a72d     79 69 6A 74 | 	byte	$41, $36, $3d, $42, $32, $1f, $29, $37, $3c, $43, $58, $7e, $79, $69, $6a, $74
1a731     7F 87 92 A3 
1a735     AE CB C1 AB 
1a739     9C 94 8E 94 
1a73d     97 94 84 66 | 	byte	$7f, $87, $92, $a3, $ae, $cb, $c1, $ab, $9c, $94, $8e, $94, $97, $94, $84, $66
1a741     53 5E 61 57 
1a745     5B 61 69 6F 
1a749     67 7D 95 AC 
1a74d     A3 8B 7E 7B | 	byte	$53, $5e, $61, $57, $5b, $61, $69, $6f, $67, $7d, $95, $ac, $a3, $8b, $7e, $7b
1a751     81 90 9A 92 
1a755     8A 8B 7C 70 
1a759     75 85 98 9F 
1a75d     99 99 88 83 | 	byte	$81, $90, $9a, $92, $8a, $8b, $7c, $70, $75, $85, $98, $9f, $99, $99, $88, $83
1a761     8C 9F AF A2 
1a765     8F 88 82 78 
1a769     6F 61 6A 77 
1a76d     64 4A 4A 4F | 	byte	$8c, $9f, $af, $a2, $8f, $88, $82, $78, $6f, $61, $6a, $77, $64, $4a, $4a, $4f
1a771     62 72 77 7F 
1a775     6B 63 60 53 
1a779     59 6F 74 87 
1a77d     9C A7 A4 99 | 	byte	$62, $72, $77, $7f, $6b, $63, $60, $53, $59, $6f, $74, $87, $9c, $a7, $a4, $99
1a781     9F B7 B4 AA 
1a785     AD AD A4 9C 
1a789     7D 80 A2 B7 
1a78d     A4 87 80 9D | 	byte	$9f, $b7, $b4, $aa, $ad, $ad, $a4, $9c, $7d, $80, $a2, $b7, $a4, $87, $80, $9d
1a791     AA 95 8A 93 
1a795     9F A3 94 94 
1a799     9F 93 94 8E 
1a79d     86 7A 5A 4F | 	byte	$aa, $95, $8a, $93, $9f, $a3, $94, $94, $9f, $93, $94, $8e, $86, $7a, $5a, $4f
1a7a1     5B 61 41 32 
1a7a5     42 3E 3F 36 
1a7a9     3B 55 64 55 
1a7ad     41 4D 66 8F | 	byte	$5b, $61, $41, $32, $42, $3e, $3f, $36, $3b, $55, $64, $55, $41, $4d, $66, $8f
1a7b1     AD B0 B7 BC 
1a7b5     B3 A3 9A 8A 
1a7b9     8A 8D 7C 5C 
1a7bd     54 64 58 49 | 	byte	$ad, $b0, $b7, $bc, $b3, $a3, $9a, $8a, $8a, $8d, $7c, $5c, $54, $64, $58, $49
1a7c1     51 61 74 83 
1a7c5     8C 86 87 89 
1a7c9     84 8F A2 9B 
1a7cd     92 7F 7F 82 | 	byte	$51, $61, $74, $83, $8c, $86, $87, $89, $84, $8f, $a2, $9b, $92, $7f, $7f, $82
1a7d1     78 74 88 8E 
1a7d5     81 73 81 78 
1a7d9     61 54 53 51 
1a7dd     65 6A 60 6E | 	byte	$78, $74, $88, $8e, $81, $73, $81, $78, $61, $54, $53, $51, $65, $6a, $60, $6e
1a7e1     83 97 94 88 
1a7e5     82 77 67 5E 
1a7e9     74 89 79 60 
1a7ed     4E 35 4B 85 | 	byte	$83, $97, $94, $88, $82, $77, $67, $5e, $74, $89, $79, $60, $4e, $35, $4b, $85
1a7f1     A2 93 89 85 
1a7f5     94 9F 9D 97 
1a7f9     95 97 A9 BE 
1a7fd     CF CD CA CB | 	byte	$a2, $93, $89, $85, $94, $9f, $9d, $97, $95, $97, $a9, $be, $cf, $cd, $ca, $cb
1a801     CF C7 C2 C3 
1a805     C9 C5 A4 9F 
1a809     C0 CA A5 6F 
1a80d     56 5A 6B 72 | 	byte	$cf, $c7, $c2, $c3, $c9, $c5, $a4, $9f, $c0, $ca, $a5, $6f, $56, $5a, $6b, $72
1a811     64 5F 6C 74 
1a815     78 6A 4B 41 
1a819     51 73 81 6F 
1a81d     47 2A 22 23 | 	byte	$64, $5f, $6c, $74, $78, $6a, $4b, $41, $51, $73, $81, $6f, $47, $2a, $22, $23
1a821     2B 40 54 55 
1a825     45 3F 49 53 
1a829     5E 6E 70 64 
1a82d     6F 81 A4 BB | 	byte	$2b, $40, $54, $55, $45, $3f, $49, $53, $5e, $6e, $70, $64, $6f, $81, $a4, $bb
1a831     B2 AC B2 CA 
1a835     C9 9E 8B 90 
1a839     85 7A 7F 86 
1a83d     6C 55 50 56 | 	byte	$b2, $ac, $b2, $ca, $c9, $9e, $8b, $90, $85, $7a, $7f, $86, $6c, $55, $50, $56
1a841     59 52 57 72 
1a845     8C 93 8B 87 
1a849     9A A8 90 70 
1a84d     77 7D 7C 78 | 	byte	$59, $52, $57, $72, $8c, $93, $8b, $87, $9a, $a8, $90, $70, $77, $7d, $7c, $78
1a851     78 8A 88 91 
1a855     8F 7C 64 70 
1a859     91 AA AD A4 
1a85d     97 95 92 90 | 	byte	$78, $8a, $88, $91, $8f, $7c, $64, $70, $91, $aa, $ad, $a4, $97, $95, $92, $90
1a861     A0 A2 9B 8D 
1a865     74 5D 57 56 
1a869     5C 63 51 44 
1a86d     52 72 6B 52 | 	byte	$a0, $a2, $9b, $8d, $74, $5d, $57, $56, $5c, $63, $51, $44, $52, $72, $6b, $52
1a871     41 4C 5F 69 
1a875     5D 50 50 6E 
1a879     87 9E B1 B0 
1a87d     A9 A4 AF BE | 	byte	$41, $4c, $5f, $69, $5d, $50, $50, $6e, $87, $9e, $b1, $b0, $a9, $a4, $af, $be
1a881     AF 9F A8 B4 
1a885     AF AB BC C8 
1a889     C0 AA A8 B5 
1a88d     AA 9F 93 95 | 	byte	$af, $9f, $a8, $b4, $af, $ab, $bc, $c8, $c0, $aa, $a8, $b5, $aa, $9f, $93, $95
1a891     9F A4 A6 A2 
1a895     7C 5D 5C 86 
1a899     9A 90 67 58 
1a89d     52 4C 5A 74 | 	byte	$9f, $a4, $a6, $a2, $7c, $5d, $5c, $86, $9a, $90, $67, $58, $52, $4c, $5a, $74
1a8a1     6A 46 2B 20 
1a8a5     24 36 37 38 
1a8a9     4E 6A 7C 82 
1a8ad     82 8C A0 A8 | 	byte	$6a, $46, $2b, $20, $24, $36, $37, $38, $4e, $6a, $7c, $82, $82, $8c, $a0, $a8
1a8b1     B9 C8 B1 7E 
1a8b5     60 5C 58 71 
1a8b9     89 8D 7A 66 
1a8bd     62 5E 61 6E | 	byte	$b9, $c8, $b1, $7e, $60, $5c, $58, $71, $89, $8d, $7a, $66, $62, $5e, $61, $6e
1a8c1     6A 6E 89 96 
1a8c5     97 96 87 86 
1a8c9     8D 8F 94 8A 
1a8cd     70 6B 78 81 | 	byte	$6a, $6e, $89, $96, $97, $96, $87, $86, $8d, $8f, $94, $8a, $70, $6b, $78, $81
1a8d1     91 A0 94 6E 
1a8d5     4D 42 59 72 
1a8d9     79 82 7C 86 
1a8dd     91 94 A2 A9 | 	byte	$91, $a0, $94, $6e, $4d, $42, $59, $72, $79, $82, $7c, $86, $91, $94, $a2, $a9
1a8e1     96 82 87 88 
1a8e5     6D 50 4D 59 
1a8e9     5D 6B 84 8C 
1a8ed     83 7D 7A 81 | 	byte	$96, $82, $87, $88, $6d, $50, $4d, $59, $5d, $6b, $84, $8c, $83, $7d, $7a, $81
1a8f1     99 A8 A0 87 
1a8f5     6F 7B AB CA 
1a8f9     D1 CA B6 C2 
1a8fd     D7 CE B5 B3 | 	byte	$99, $a8, $a0, $87, $6f, $7b, $ab, $ca, $d1, $ca, $b6, $c2, $d7, $ce, $b5, $b3
1a901     B7 C3 D0 DD 
1a905     D2 AF 8F 8A 
1a909     84 7F 75 61 
1a90d     51 5B 6B 70 | 	byte	$b7, $c3, $d0, $dd, $d2, $af, $8f, $8a, $84, $7f, $75, $61, $51, $5b, $6b, $70
1a911     73 67 54 33 
1a915     32 4A 5B 4A 
1a919     36 2A 2A 30 
1a91d     55 6E 6D 4F | 	byte	$73, $67, $54, $33, $32, $4a, $5b, $4a, $36, $2a, $2a, $30, $55, $6e, $6d, $4f
1a921     45 4F 5E 55 
1a925     47 44 59 77 
1a929     93 9B 9F A5 
1a92d     99 A0 B7 C6 | 	byte	$45, $4f, $5e, $55, $47, $44, $59, $77, $93, $9b, $9f, $a5, $99, $a0, $b7, $c6
1a931     C4 B1 9C 8D 
1a935     85 88 9C 99 
1a939     87 6C 5E 66 
1a93d     66 58 4F 55 | 	byte	$c4, $b1, $9c, $8d, $85, $88, $9c, $99, $87, $6c, $5e, $66, $66, $58, $4f, $55
1a941     73 9D A2 7C 
1a945     7F 84 95 A1 
1a949     83 6C 64 5B 
1a94d     58 66 87 A2 | 	byte	$73, $9d, $a2, $7c, $7f, $84, $95, $a1, $83, $6c, $64, $5b, $58, $66, $87, $a2
1a951     A8 91 73 62 
1a955     6A 99 B0 B0 
1a959     A5 97 9D A6 
1a95d     A0 9C 91 81 | 	byte	$a8, $91, $73, $62, $6a, $99, $b0, $b0, $a5, $97, $9d, $a6, $a0, $9c, $91, $81
1a961     8B 85 73 58 
1a965     44 4B 59 6E 
1a969     76 61 4E 44 
1a96d     35 37 51 69 | 	byte	$8b, $85, $73, $58, $44, $4b, $59, $6e, $76, $61, $4e, $44, $35, $37, $51, $69
1a971     72 69 52 61 
1a975     76 86 91 9B 
1a979     B0 CA C2 A8 
1a97d     9D 9F A3 A3 | 	byte	$72, $69, $52, $61, $76, $86, $91, $9b, $b0, $ca, $c2, $a8, $9d, $9f, $a3, $a3
1a981     B1 D6 DE C6 
1a985     B6 B5 BC C6 
1a989     B5 A8 9E 8E 
1a98d     93 AB A3 A3 | 	byte	$b1, $d6, $de, $c6, $b6, $b5, $bc, $c6, $b5, $a8, $9e, $8e, $93, $ab, $a3, $a3
1a991     8F 6D 62 63 
1a995     6A 79 72 6B 
1a999     64 5E 6B 65 
1a99d     51 43 39 35 | 	byte	$8f, $6d, $62, $63, $6a, $79, $72, $6b, $64, $5e, $6b, $65, $51, $43, $39, $35
1a9a1     3F 45 37 32 
1a9a5     34 4B 69 72 
1a9a9     74 83 86 93 
1a9ad     A3 AA AD 92 | 	byte	$3f, $45, $37, $32, $34, $4b, $69, $72, $74, $83, $86, $93, $a3, $aa, $ad, $92
1a9b1     6D 60 62 70 
1a9b5     77 78 77 6B 
1a9b9     66 72 73 6F 
1a9bd     6C 6F 6B 7D | 	byte	$6d, $60, $62, $70, $77, $78, $77, $6b, $66, $72, $73, $6f, $6c, $6f, $6b, $7d
1a9c1     81 8A 86 7D 
1a9c5     7F 86 91 97 
1a9c9     82 6A 58 66 
1a9cd     85 A2 97 88 | 	byte	$81, $8a, $86, $7d, $7f, $86, $91, $97, $82, $6a, $58, $66, $85, $a2, $97, $88
1a9d1     6F 5D 63 78 
1a9d5     85 7C 81 86 
1a9d9     98 8F 88 96 
1a9dd     AB B3 9F 8D | 	byte	$6f, $5d, $63, $78, $85, $7c, $81, $86, $98, $8f, $88, $96, $ab, $b3, $9f, $8d
1a9e1     89 70 5B 47 
1a9e5     4F 73 8B 8A 
1a9e9     83 6F 62 67 
1a9ed     7E 99 A4 A1 | 	byte	$89, $70, $5b, $47, $4f, $73, $8b, $8a, $83, $6f, $62, $67, $7e, $99, $a4, $a1
1a9f1     95 93 8E 89 
1a9f5     91 B1 D0 D8 
1a9f9     D3 CB B9 B6 
1a9fd     AB AC B1 BE | 	byte	$95, $93, $8e, $89, $91, $b1, $d0, $d8, $d3, $cb, $b9, $b6, $ab, $ac, $b1, $be
1aa01     C4 C3 AB 96 
1aa05     81 79 76 6E 
1aa09     5D 51 57 62 
1aa0d     73 79 79 6B | 	byte	$c4, $c3, $ab, $96, $81, $79, $76, $6e, $5d, $51, $57, $62, $73, $79, $79, $6b
1aa11     4B 3B 4B 3B 
1aa15     3F 3B 3D 3F 
1aa19     52 59 61 58 
1aa1d     52 4D 4E 53 | 	byte	$4b, $3b, $4b, $3b, $3f, $3b, $3d, $3f, $52, $59, $61, $58, $52, $4d, $4e, $53
1aa21     58 62 5F 5F 
1aa25     67 79 90 A9 
1aa29     AE A0 96 AE 
1aa2d     C0 C1 A4 96 | 	byte	$58, $62, $5f, $5f, $67, $79, $90, $a9, $ae, $a0, $96, $ae, $c0, $c1, $a4, $96
1aa31     92 9F 95 93 
1aa35     85 78 72 85 
1aa39     89 6A 5F 68 
1aa3d     74 78 80 89 | 	byte	$92, $9f, $95, $93, $85, $78, $72, $85, $89, $6a, $5f, $68, $74, $78, $80, $89
1aa41     95 92 75 74 
1aa45     8C 7F 63 4F 
1aa49     5C 6F 92 A0 
1aa4d     A1 92 74 5E | 	byte	$95, $92, $75, $74, $8c, $7f, $63, $4f, $5c, $6f, $92, $a0, $a1, $92, $74, $5e
1aa51     6A 91 97 93 
1aa55     88 8C 8D 80 
1aa59     85 A2 AC 9C 
1aa5d     8E 92 7D 6C | 	byte	$6a, $91, $97, $93, $88, $8c, $8d, $80, $85, $a2, $ac, $9c, $8e, $92, $7d, $6c
1aa61     58 53 57 68 
1aa65     6B 70 66 5A 
1aa69     51 47 48 56 
1aa6d     61 74 87 87 | 	byte	$58, $53, $57, $68, $6b, $70, $66, $5a, $51, $47, $48, $56, $61, $74, $87, $87
1aa71     81 7A 83 95 
1aa75     94 97 B6 BD 
1aa79     B0 97 A1 AB 
1aa7d     C3 CB C8 B0 | 	byte	$81, $7a, $83, $95, $94, $97, $b6, $bd, $b0, $97, $a1, $ab, $c3, $cb, $c8, $b0
1aa81     A3 9D 9B AA 
1aa85     B8 AE 93 94 
1aa89     A0 A2 9F AB 
1aa8d     B2 9C 7F 88 | 	byte	$a3, $9d, $9b, $aa, $b8, $ae, $93, $94, $a0, $a2, $9f, $ab, $b2, $9c, $7f, $88
1aa91     8D 87 6D 5E 
1aa95     4C 51 5C 69 
1aa99     65 5A 57 3D 
1aa9d     36 34 44 4E | 	byte	$8d, $87, $6d, $5e, $4c, $51, $5c, $69, $65, $5a, $57, $3d, $36, $34, $44, $4e
1aaa1     4B 46 46 51 
1aaa5     66 85 81 77 
1aaa9     7D 80 85 76 
1aaad     79 82 93 87 | 	byte	$4b, $46, $46, $51, $66, $85, $81, $77, $7d, $80, $85, $76, $79, $82, $93, $87
1aab1     76 60 44 41 
1aab5     52 73 89 8F 
1aab9     89 86 78 65 
1aabd     66 85 9A 90 | 	byte	$76, $60, $44, $41, $52, $73, $89, $8f, $89, $86, $78, $65, $66, $85, $9a, $90
1aac1     85 8B 8D 7F 
1aac5     63 66 5D 72 
1aac9     8C AD AC 8B 
1aacd     70 61 6E 81 | 	byte	$85, $8b, $8d, $7f, $63, $66, $5d, $72, $8c, $ad, $ac, $8b, $70, $61, $6e, $81
1aad1     7B 72 6F 72 
1aad5     6B 66 82 A6 
1aad9     B0 B0 AA 94 
1aadd     80 78 87 84 | 	byte	$7b, $72, $6f, $72, $6b, $66, $82, $a6, $b0, $b0, $aa, $94, $80, $78, $87, $84
1aae1     81 84 85 7B 
1aae5     70 75 6A 6E 
1aae9     81 87 91 99 
1aaed     AC 9F 8F 89 | 	byte	$81, $84, $85, $7b, $70, $75, $6a, $6e, $81, $87, $91, $99, $ac, $9f, $8f, $89
1aaf1     9A 98 9B B3 
1aaf5     BF C3 B7 AB 
1aaf9     A2 A6 A9 B1 
1aafd     BA B3 AF 97 | 	byte	$9a, $98, $9b, $b3, $bf, $c3, $b7, $ab, $a2, $a6, $a9, $b1, $ba, $b3, $af, $97
1ab01     7A 77 64 49 
1ab05     49 67 6F 6F 
1ab09     74 82 79 71 
1ab0d     72 77 76 67 | 	byte	$7a, $77, $64, $49, $49, $67, $6f, $6f, $74, $82, $79, $71, $72, $77, $76, $67
1ab11     63 4D 45 46 
1ab15     42 42 49 50 
1ab19     51 46 49 4D 
1ab1d     48 6C 8A 86 | 	byte	$63, $4d, $45, $46, $42, $42, $49, $50, $51, $46, $49, $4d, $48, $6c, $8a, $86
1ab21     69 58 73 82 
1ab25     92 98 99 9B 
1ab29     96 93 83 85 
1ab2d     A3 B9 BC B0 | 	byte	$69, $58, $73, $82, $92, $98, $99, $9b, $96, $93, $83, $85, $a3, $b9, $bc, $b0
1ab31     99 6C 53 62 
1ab35     7F 9B 99 95 
1ab39     8C 7D 71 76 
1ab3d     7E 95 9B 8D | 	byte	$99, $6c, $53, $62, $7f, $9b, $99, $95, $8c, $7d, $71, $76, $7e, $95, $9b, $8d
1ab41     72 61 63 64 
1ab45     61 75 84 88 
1ab49     82 76 61 57 
1ab4d     70 81 79 6F | 	byte	$72, $61, $63, $64, $61, $75, $84, $88, $82, $76, $61, $57, $70, $81, $79, $6f
1ab51     76 7D 80 7F 
1ab55     87 7C 7A 88 
1ab59     86 81 75 65 
1ab5d     62 65 89 9A | 	byte	$76, $7d, $80, $7f, $87, $7c, $7a, $88, $86, $81, $75, $65, $62, $65, $89, $9a
1ab61     8D 84 7B 72 
1ab65     63 67 6E 7F 
1ab69     83 81 87 94 
1ab6d     8F 8C 7F 83 | 	byte	$8d, $84, $7b, $72, $63, $67, $6e, $7f, $83, $81, $87, $94, $8f, $8c, $7f, $83
1ab71     97 9B 9E AC 
1ab75     B0 B5 AC B6 
1ab79     BA AA A1 A4 
1ab7d     9B 89 82 7B | 	byte	$97, $9b, $9e, $ac, $b0, $b5, $ac, $b6, $ba, $aa, $a1, $a4, $9b, $89, $82, $7b
1ab81     79 7B 96 AF 
1ab85     C1 AC 93 84 
1ab89     88 A6 B8 B7 
1ab8d     AB 94 7A 61 | 	byte	$79, $7b, $96, $af, $c1, $ac, $93, $84, $88, $a6, $b8, $b7, $ab, $94, $7a, $61
1ab91     75 80 75 6A 
1ab95     68 56 42 40 
1ab99     36 30 3B 4E 
1ab9d     59 6A 64 51 | 	byte	$75, $80, $75, $6a, $68, $56, $42, $40, $36, $30, $3b, $4e, $59, $6a, $64, $51
1aba1     44 47 63 66 
1aba5     54 61 7E 88 
1aba9     72 6E 70 6F 
1abad     7E 75 55 33 | 	byte	$44, $47, $63, $66, $54, $61, $7e, $88, $72, $6e, $70, $6f, $7e, $75, $55, $33
1abb1     32 43 63 89 
1abb5     98 9C 9F 97 
1abb9     81 77 7E 9B 
1abbd     A5 98 80 66 | 	byte	$32, $43, $63, $89, $98, $9c, $9f, $97, $81, $77, $7e, $9b, $a5, $98, $80, $66
1abc1     50 69 7C 90 
1abc5     99 9C 8F 83 
1abc9     69 77 80 8F 
1abcd     8F 7E 65 76 | 	byte	$50, $69, $7c, $90, $99, $9c, $8f, $83, $69, $77, $80, $8f, $8f, $7e, $65, $76
1abd1     80 77 66 6D 
1abd5     7E 8A 8D 92 
1abd9     8C 83 7D 86 
1abdd     9A AC AC 8B | 	byte	$80, $77, $66, $6d, $7e, $8a, $8d, $92, $8c, $83, $7d, $86, $9a, $ac, $ac, $8b
1abe1     7C 73 7A 75 
1abe5     87 AC B1 A2 
1abe9     A4 A4 9B 9A 
1abed     95 85 8B 8B | 	byte	$7c, $73, $7a, $75, $87, $ac, $b1, $a2, $a4, $a4, $9b, $9a, $95, $85, $8b, $8b
1abf1     93 9C 98 9B 
1abf5     A7 BC BD AF 
1abf9     97 8D 80 76 
1abfd     78 7E 79 69 | 	byte	$93, $9c, $98, $9b, $a7, $bc, $bd, $af, $97, $8d, $80, $76, $78, $7e, $79, $69
1ac01     6F 7B 75 61 
1ac05     57 61 6C 85 
1ac09     8E 92 92 78 
1ac0d     67 60 64 69 | 	byte	$6f, $7b, $75, $61, $57, $61, $6c, $85, $8e, $92, $92, $78, $67, $60, $64, $69
1ac11     6F 5D 50 2A 
1ac15     17 21 3B 51 
1ac19     5C 69 76 7D 
1ac1d     7B 72 72 6F | 	byte	$6f, $5d, $50, $2a, $17, $21, $3b, $51, $5c, $69, $76, $7d, $7b, $72, $72, $6f
1ac21     75 83 84 86 
1ac25     82 7E 7F 86 
1ac29     93 A7 A7 A3 
1ac2d     89 6B 5F 69 | 	byte	$75, $83, $84, $86, $82, $7e, $7f, $86, $93, $a7, $a7, $a3, $89, $6b, $5f, $69
1ac31     7D 90 A2 B0 
1ac35     AD A2 8F 8D 
1ac39     83 89 91 8F 
1ac3d     8D 78 69 71 | 	byte	$7d, $90, $a2, $b0, $ad, $a2, $8f, $8d, $83, $89, $91, $8f, $8d, $78, $69, $71
1ac41     86 84 6F 58 
1ac45     5A 51 49 53 
1ac49     72 7D 6F 68 
1ac4d     5E 65 62 65 | 	byte	$86, $84, $6f, $58, $5a, $51, $49, $53, $72, $7d, $6f, $68, $5e, $65, $62, $65
1ac51     7A 8A 85 77 
1ac55     62 59 57 66 
1ac59     76 8B 98 A5 
1ac5d     AC A4 85 79 | 	byte	$7a, $8a, $85, $77, $62, $59, $57, $66, $76, $8b, $98, $a5, $ac, $a4, $85, $79
1ac61     8C A2 A9 AE 
1ac65     B6 AA 9E 90 
1ac69     7E 7C 8F 96 
1ac6d     98 9F A0 9D | 	byte	$8c, $a2, $a9, $ae, $b6, $aa, $9e, $90, $7e, $7c, $8f, $96, $98, $9f, $a0, $9d
1ac71     99 9B AB AF 
1ac75     B1 B4 B3 9F 
1ac79     78 5D 65 79 
1ac7d     83 8C 9D AE | 	byte	$99, $9b, $ab, $af, $b1, $b4, $b3, $9f, $78, $5d, $65, $79, $83, $8c, $9d, $ae
1ac81     AD 8C 83 8C 
1ac85     83 8A A6 B9 
1ac89     B1 9C 94 94 
1ac8d     83 88 8B 8A | 	byte	$ad, $8c, $83, $8c, $83, $8a, $a6, $b9, $b1, $9c, $94, $94, $83, $88, $8b, $8a
1ac91     7A 5B 37 2F 
1ac95     3E 4D 63 66 
1ac99     59 5A 4C 47 
1ac9d     51 42 4C 65 | 	byte	$7a, $5b, $37, $2f, $3e, $4d, $63, $66, $59, $5a, $4c, $47, $51, $42, $4c, $65
1aca1     6D 6B 62 58 
1aca5     5F 5F 6B 6D 
1aca9     63 57 4D 41 
1acad     52 59 54 68 | 	byte	$6d, $6b, $62, $58, $5f, $5f, $6b, $6d, $63, $57, $4d, $41, $52, $59, $54, $68
1acb1     82 8E 8F 90 
1acb5     9E AC 9B 93 
1acb9     8E 82 77 74 
1acbd     72 87 A5 BB | 	byte	$82, $8e, $8f, $90, $9e, $ac, $9b, $93, $8e, $82, $77, $74, $72, $87, $a5, $bb
1acc1     B2 9A 83 6E 
1acc5     65 74 8C 90 
1acc9     97 9F 8A 77 
1accd     64 4F 60 74 | 	byte	$b2, $9a, $83, $6e, $65, $74, $8c, $90, $97, $9f, $8a, $77, $64, $4f, $60, $74
1acd1     83 81 6D 6F 
1acd5     7B 7F 89 8B 
1acd9     94 9D A8 AA 
1acdd     99 92 B1 C1 | 	byte	$83, $81, $6d, $6f, $7b, $7f, $89, $8b, $94, $9d, $a8, $aa, $99, $92, $b1, $c1
1ace1     B4 C0 D5 BD 
1ace5     99 8C 91 9A 
1ace9     95 94 96 91 
1aced     7F 74 74 84 | 	byte	$b4, $c0, $d5, $bd, $99, $8c, $91, $9a, $95, $94, $96, $91, $7f, $74, $74, $84
1acf1     8E 96 9D B7 
1acf5     B6 9A 7D 72 
1acf9     70 6D 83 96 
1acfd     8A 85 88 6F | 	byte	$8e, $96, $9d, $b7, $b6, $9a, $7d, $72, $70, $6d, $83, $96, $8a, $85, $88, $6f
1ad01     5A 4C 5B 80 
1ad05     92 8A 88 89 
1ad09     88 70 5F 62 
1ad0d     6E 71 54 3B | 	byte	$5a, $4c, $5b, $80, $92, $8a, $88, $89, $88, $70, $5f, $62, $6e, $71, $54, $3b
1ad11     33 2F 30 53 
1ad15     6F 76 75 78 
1ad19     77 76 6C 65 
1ad1d     72 8F 91 7E | 	byte	$33, $2f, $30, $53, $6f, $76, $75, $78, $77, $76, $6c, $65, $72, $8f, $91, $7e
1ad21     73 7B 75 6C 
1ad25     6B 84 92 86 
1ad29     75 72 78 82 
1ad2d     95 9E 93 7B | 	byte	$73, $7b, $75, $6c, $6b, $84, $92, $86, $75, $72, $78, $82, $95, $9e, $93, $7b
1ad31     91 9A A9 A3 
1ad35     97 B0 B5 A1 
1ad39     72 5B 74 85 
1ad3d     8E 93 8E 76 | 	byte	$91, $9a, $a9, $a3, $97, $b0, $b5, $a1, $72, $5b, $74, $85, $8e, $93, $8e, $76
1ad41     4E 43 47 47 
1ad45     4F 58 65 65 
1ad49     4B 48 57 69 
1ad4d     73 70 6E 61 | 	byte	$4e, $43, $47, $47, $4f, $58, $65, $65, $4b, $48, $57, $69, $73, $70, $6e, $61
1ad51     59 56 60 6C 
1ad55     79 88 97 AB 
1ad59     B3 98 8E A1 
1ad5d     C3 CD D4 DF | 	byte	$59, $56, $60, $6c, $79, $88, $97, $ab, $b3, $98, $8e, $a1, $c3, $cd, $d4, $df
1ad61     CE A7 91 7C 
1ad65     8A 87 8C 9E 
1ad69     A1 A3 9C A3 
1ad6d     AD 9C 74 7D | 	byte	$ce, $a7, $91, $7c, $8a, $87, $8c, $9e, $a1, $a3, $9c, $a3, $ad, $9c, $74, $7d
1ad71     A7 BE A7 8F 
1ad75     82 84 85 74 
1ad79     6C 67 6B 83 
1ad7d     8D 93 90 82 | 	byte	$a7, $be, $a7, $8f, $82, $84, $85, $74, $6c, $67, $6b, $83, $8d, $93, $90, $82
1ad81     89 8E 93 94 
1ad85     8D 92 9C 92 
1ad89     93 9F AB 94 
1ad8d     7F 53 44 5C | 	byte	$89, $8e, $93, $94, $8d, $92, $9c, $92, $93, $9f, $ab, $94, $7f, $53, $44, $5c
1ad91     75 7F 60 42 
1ad95     4E 66 65 4F 
1ad99     3A 3B 4C 60 
1ad9d     60 57 60 59 | 	byte	$75, $7f, $60, $42, $4e, $66, $65, $4f, $3a, $3b, $4c, $60, $60, $57, $60, $59
1ada1     4F 4F 4E 54 
1ada5     4A 45 44 55 
1ada9     59 55 65 63 
1adad     4D 49 62 8B | 	byte	$4f, $4f, $4e, $54, $4a, $45, $44, $55, $59, $55, $65, $63, $4d, $49, $62, $8b
1adb1     A6 9D 96 9D 
1adb5     A7 9D 7A 70 
1adb9     79 8B AF BF 
1adbd     B9 A5 98 9A | 	byte	$a6, $9d, $96, $9d, $a7, $9d, $7a, $70, $79, $8b, $af, $bf, $b9, $a5, $98, $9a
1adc1     93 8E 88 80 
1adc5     81 73 77 7D 
1adc9     74 67 71 75 
1adcd     67 5B 5F 62 | 	byte	$93, $8e, $88, $80, $81, $73, $77, $7d, $74, $67, $71, $75, $67, $5b, $5f, $62
1add1     76 74 73 91 
1add5     A6 B0 A9 A2 
1add9     9D AB C0 DC 
1addd     DD CA AF A7 | 	byte	$76, $74, $73, $91, $a6, $b0, $a9, $a2, $9d, $ab, $c0, $dc, $dd, $ca, $af, $a7
1ade1     A4 A2 9B 97 
1ade5     96 93 86 7E 
1ade9     79 88 8C 85 
1aded     83 87 96 92 | 	byte	$a4, $a2, $9b, $97, $96, $93, $86, $7e, $79, $88, $8c, $85, $83, $87, $96, $92
1adf1     89 83 87 95 
1adf5     9D 8F 73 58 
1adf9     6E 89 93 8D 
1adfd     75 6F 71 6C | 	byte	$89, $83, $87, $95, $9d, $8f, $73, $58, $6e, $89, $93, $8d, $75, $6f, $71, $6c
1ae01     69 74 69 6C 
1ae05     65 77 76 77 
1ae09     72 64 59 53 
1ae0d     55 57 5A 58 | 	byte	$69, $74, $69, $6c, $65, $77, $76, $77, $72, $64, $59, $53, $55, $57, $5a, $58
1ae11     3E 56 88 9B 
1ae15     8E 73 67 5D 
1ae19     68 77 81 6E 
1ae1d     74 7F 86 6E | 	byte	$3e, $56, $88, $9b, $8e, $73, $67, $5d, $68, $77, $81, $6e, $74, $7f, $86, $6e
1ae21     66 6A 61 57 
1ae25     60 6F 85 92 
1ae29     8F 78 7D 98 
1ae2d     A2 A4 9D A4 | 	byte	$66, $6a, $61, $57, $60, $6f, $85, $92, $8f, $78, $7d, $98, $a2, $a4, $9d, $a4
1ae31     9D 9E 9E A0 
1ae35     8D 8A 8C 99 
1ae39     99 92 7B 6B 
1ae3d     6D 71 67 50 | 	byte	$9d, $9e, $9e, $a0, $8d, $8a, $8c, $99, $99, $92, $7b, $6b, $6d, $71, $67, $50
1ae41     4B 41 2F 30 
1ae45     4A 53 56 59 
1ae49     5D 50 4E 62 
1ae4d     6B 5D 6D 82 | 	byte	$4b, $41, $2f, $30, $4a, $53, $56, $59, $5d, $50, $4e, $62, $6b, $5d, $6d, $82
1ae51     93 8D 94 9A 
1ae55     A3 91 8C A5 
1ae59     B9 C7 C9 BE 
1ae5d     C0 C5 B8 AF | 	byte	$93, $8d, $94, $9a, $a3, $91, $8c, $a5, $b9, $c7, $c9, $be, $c0, $c5, $b8, $af
1ae61     A8 A1 95 87 
1ae65     8F AA B2 B6 
1ae69     AC A6 9A A2 
1ae6d     A1 A6 94 84 | 	byte	$a8, $a1, $95, $87, $8f, $aa, $b2, $b6, $ac, $a6, $9a, $a2, $a1, $a6, $94, $84
1ae71     84 86 81 68 
1ae75     55 65 82 80 
1ae79     76 74 7A 85 
1ae7d     8B 97 8C 82 | 	byte	$84, $86, $81, $68, $55, $65, $82, $80, $76, $74, $7a, $85, $8b, $97, $8c, $82
1ae81     89 91 8B 83 
1ae85     83 83 90 84 
1ae89     7B 7F 7F 7E 
1ae8d     68 57 5D 78 | 	byte	$89, $91, $8b, $83, $83, $83, $90, $84, $7b, $7f, $7f, $7e, $68, $57, $5d, $78
1ae91     83 82 6C 4F 
1ae95     43 45 4E 4F 
1ae99     47 52 5F 68 
1ae9d     5D 4C 3D 4F | 	byte	$83, $82, $6c, $4f, $43, $45, $4e, $4f, $47, $52, $5f, $68, $5d, $4c, $3d, $4f
1aea1     52 47 3F 3D 
1aea5     4A 46 3F 4F 
1aea9     5D 5D 5D 6A 
1aead     6A 76 81 90 | 	byte	$52, $47, $3f, $3d, $4a, $46, $3f, $4f, $5d, $5d, $5d, $6a, $6a, $76, $81, $90
1aeb1     8B 85 8C 8F 
1aeb5     9B A5 9F 92 
1aeb9     A0 AD B3 AA 
1aebd     98 95 86 7C | 	byte	$8b, $85, $8c, $8f, $9b, $a5, $9f, $92, $a0, $ad, $b3, $aa, $98, $95, $86, $7c
1aec1     8A 96 92 85 
1aec5     7B 68 62 63 
1aec9     6C 70 62 6E 
1aecd     6A 7B 96 AF | 	byte	$8a, $96, $92, $85, $7b, $68, $62, $63, $6c, $70, $62, $6e, $6a, $7b, $96, $af
1aed1     BD C1 A4 93 
1aed5     94 99 A2 A6 
1aed9     A9 C4 C9 BE 
1aedd     BF A9 95 93 | 	byte	$bd, $c1, $a4, $93, $94, $99, $a2, $a6, $a9, $c4, $c9, $be, $bf, $a9, $95, $93
1aee1     90 91 8E 8F 
1aee5     9C 87 6E 7E 
1aee9     8C 88 84 7A 
1aeed     82 8A 88 88 | 	byte	$90, $91, $8e, $8f, $9c, $87, $6e, $7e, $8c, $88, $84, $7a, $82, $8a, $88, $88
1aef1     83 6C 83 9E 
1aef5     AB A5 8D 6F 
1aef9     77 81 78 66 
1aefd     65 6B 64 5F | 	byte	$83, $6c, $83, $9e, $ab, $a5, $8d, $6f, $77, $81, $78, $66, $65, $6b, $64, $5f
1af01     62 67 6E 72 
1af05     62 56 56 4F 
1af09     54 54 4D 69 
1af0d     78 87 90 90 | 	byte	$62, $67, $6e, $72, $62, $56, $56, $4f, $54, $54, $4d, $69, $78, $87, $90, $90
1af11     7C 73 6E 61 
1af15     6E 82 88 82 
1af19     72 79 6F 61 
1af1d     56 4B 55 59 | 	byte	$7c, $73, $6e, $61, $6e, $82, $88, $82, $72, $79, $6f, $61, $56, $4b, $55, $59
1af21     51 5F 81 8F 
1af25     9F A4 9E 95 
1af29     8A 86 92 9F 
1af2d     80 6F 82 A0 | 	byte	$51, $5f, $81, $8f, $9f, $a4, $9e, $95, $8a, $86, $92, $9f, $80, $6f, $82, $a0
1af31     AE A1 90 93 
1af35     9E 9C 8E 80 
1af39     70 57 3E 45 
1af3d     4B 52 49 47 | 	byte	$ae, $a1, $90, $93, $9e, $9c, $8e, $80, $70, $57, $3e, $45, $4b, $52, $49, $47
1af41     51 4B 3D 4D 
1af45     5C 51 53 70 
1af49     82 81 7D 7F 
1af4d     86 93 A4 A3 | 	byte	$51, $4b, $3d, $4d, $5c, $51, $53, $70, $82, $81, $7d, $7f, $86, $93, $a4, $a3
1af51     90 77 65 7E 
1af55     AC C2 D1 D6 
1af59     DF D2 BD 9D 
1af5d     91 A2 9B 9B | 	byte	$90, $77, $65, $7e, $ac, $c2, $d1, $d6, $df, $d2, $bd, $9d, $91, $a2, $9b, $9b
1af61     AA B3 AD A6 
1af65     AB AE AA A7 
1af69     A5 AB A3 85 
1af6d     6B 78 8E 99 | 	byte	$aa, $b3, $ad, $a6, $ab, $ae, $aa, $a7, $a5, $ab, $a3, $85, $6b, $78, $8e, $99
1af71     87 79 72 72 
1af75     6B 85 AB 9E 
1af79     94 97 99 80 
1af7d     71 6E 6D 61 | 	byte	$87, $79, $72, $72, $6b, $85, $ab, $9e, $94, $97, $99, $80, $71, $6e, $6d, $61
1af81     5F 64 72 7D 
1af85     85 7A 72 7C 
1af89     8F 97 9B 93 
1af8d     77 68 6F 6F | 	byte	$5f, $64, $72, $7d, $85, $7a, $72, $7c, $8f, $97, $9b, $93, $77, $68, $6f, $6f
1af91     3F 20 2E 57 
1af95     64 5F 60 5A 
1af99     59 56 47 37 
1af9d     39 36 3A 4D | 	byte	$3f, $20, $2e, $57, $64, $5f, $60, $5a, $59, $56, $47, $37, $39, $36, $3a, $4d
1afa1     5F 4A 3F 52 
1afa5     4A 37 33 4E 
1afa9     7C 7D 5C 69 
1afad     82 8C 91 87 | 	byte	$5f, $4a, $3f, $52, $4a, $37, $33, $4e, $7c, $7d, $5c, $69, $82, $8c, $91, $87
1afb1     6F 77 9F BB 
1afb5     B9 A4 93 9B 
1afb9     AB BE AD 8F 
1afbd     96 A9 9D 8A | 	byte	$6f, $77, $9f, $bb, $b9, $a4, $93, $9b, $ab, $be, $ad, $8f, $96, $a9, $9d, $8a
1afc1     82 80 6C 61 
1afc5     63 71 70 72 
1afc9     84 95 AC C0 
1afcd     C1 AD 93 83 | 	byte	$82, $80, $6c, $61, $63, $71, $70, $72, $84, $95, $ac, $c0, $c1, $ad, $93, $83
1afd1     7F 8A A5 A5 
1afd5     91 A1 C0 BF 
1afd9     B9 A9 A6 8F 
1afdd     86 9D AC 95 | 	byte	$7f, $8a, $a5, $a5, $91, $a1, $c0, $bf, $b9, $a9, $a6, $8f, $86, $9d, $ac, $95
1afe1     74 75 78 78 
1afe5     7B 80 7A 86 
1afe9     82 7F 8F A7 
1afed     B8 A9 9C 9F | 	byte	$74, $75, $78, $78, $7b, $80, $7a, $86, $82, $7f, $8f, $a7, $b8, $a9, $9c, $9f
1aff1     A2 A2 9C 9C 
1aff5     87 75 76 7B 
1aff9     66 4E 53 4C 
1affd     4D 56 5C 4E | 	byte	$a2, $a2, $9c, $9c, $87, $75, $76, $7b, $66, $4e, $53, $4c, $4d, $56, $5c, $4e
1b001     53 56 4B 3F 
1b005     4E 6E 79 78 
1b009     7F 73 7B 98 
1b00d     A7 89 6C 6F | 	byte	$53, $56, $4b, $3f, $4e, $6e, $79, $78, $7f, $73, $7b, $98, $a7, $89, $6c, $6f
1b011     7E 7A 67 6D 
1b015     71 77 71 61 
1b019     49 46 48 58 
1b01d     74 88 9E 96 | 	byte	$7e, $7a, $67, $6d, $71, $77, $71, $61, $49, $46, $48, $58, $74, $88, $9e, $96
1b021     8C 8F 8F 86 
1b025     88 8F 77 59 
1b029     5E 77 96 AB 
1b02d     AD 94 87 8E | 	byte	$8c, $8f, $8f, $86, $88, $8f, $77, $59, $5e, $77, $96, $ab, $ad, $94, $87, $8e
1b031     97 7D 78 75 
1b035     71 5D 55 59 
1b039     4C 40 3E 4B 
1b03d     57 5E 63 5E | 	byte	$97, $7d, $78, $75, $71, $5d, $55, $59, $4c, $40, $3e, $4b, $57, $5e, $63, $5e
1b041     54 55 59 59 
1b045     6A 88 82 8D 
1b049     89 88 91 88 
1b04d     90 99 96 93 | 	byte	$54, $55, $59, $59, $6a, $88, $82, $8d, $89, $88, $91, $88, $90, $99, $96, $93
1b051     99 B2 BC CE 
1b055     DB C8 A1 8C 
1b059     84 8B A7 BB 
1b05d     BF B5 B5 B2 | 	byte	$99, $b2, $bc, $ce, $db, $c8, $a1, $8c, $84, $8b, $a7, $bb, $bf, $b5, $b5, $b2
1b061     AF AB B3 B7 
1b065     AA A8 9D 8D 
1b069     8F A4 B5 96 
1b06d     81 85 99 9A | 	byte	$af, $ab, $b3, $b7, $aa, $a8, $9d, $8d, $8f, $a4, $b5, $96, $81, $85, $99, $9a
1b071     9A 9A 98 9A 
1b075     99 80 69 6E 
1b079     77 70 51 3F 
1b07d     4B 5A 8E A0 | 	byte	$9a, $9a, $98, $9a, $99, $80, $69, $6e, $77, $70, $51, $3f, $4b, $5a, $8e, $a0
1b081     7E 74 85 A3 
1b085     95 82 89 81 
1b089     6B 66 51 3E 
1b08d     48 63 57 43 | 	byte	$7e, $74, $85, $a3, $95, $82, $89, $81, $6b, $66, $51, $3e, $48, $63, $57, $43
1b091     4D 57 66 62 
1b095     55 45 35 49 
1b099     57 4E 46 56 
1b09d     69 54 45 45 | 	byte	$4d, $57, $66, $62, $55, $45, $35, $49, $57, $4e, $46, $56, $69, $54, $45, $45
1b0a1     52 59 65 5D 
1b0a5     4A 46 64 71 
1b0a9     7A 87 81 6F 
1b0ad     69 7F 85 95 | 	byte	$52, $59, $65, $5d, $4a, $46, $64, $71, $7a, $87, $81, $6f, $69, $7f, $85, $95
1b0b1     B7 C9 C5 B4 
1b0b5     A7 A4 A5 A4 
1b0b9     A7 AE 9C 8D 
1b0bd     7E 69 6F 80 | 	byte	$b7, $c9, $c5, $b4, $a7, $a4, $a5, $a4, $a7, $ae, $9c, $8d, $7e, $69, $6f, $80
1b0c1     77 76 8C A3 
1b0c5     A7 99 93 99 
1b0c9     A9 B0 AB 97 
1b0cd     8E 99 94 86 | 	byte	$77, $76, $8c, $a3, $a7, $99, $93, $99, $a9, $b0, $ab, $97, $8e, $99, $94, $86
1b0d1     90 A6 C3 BD 
1b0d5     A3 90 91 91 
1b0d9     8B 86 84 8F 
1b0dd     91 7A 67 63 | 	byte	$90, $a6, $c3, $bd, $a3, $90, $91, $91, $8b, $86, $84, $8f, $91, $7a, $67, $63
1b0e1     6B 88 A4 9F 
1b0e5     89 80 93 B0 
1b0e9     C8 C6 B9 B4 
1b0ed     A4 8B 87 86 | 	byte	$6b, $88, $a4, $9f, $89, $80, $93, $b0, $c8, $c6, $b9, $b4, $a4, $8b, $87, $86
1b0f1     7A 79 79 71 
1b0f5     6A 56 3F 38 
1b0f9     3E 4B 62 71 
1b0fd     73 58 3E 44 | 	byte	$7a, $79, $79, $71, $6a, $56, $3f, $38, $3e, $4b, $62, $71, $73, $58, $3e, $44
1b101     55 66 76 76 
1b105     75 8B 9E 8D 
1b109     77 63 6C 78 
1b10d     77 79 7D 73 | 	byte	$55, $66, $76, $76, $75, $8b, $9e, $8d, $77, $63, $6c, $78, $77, $79, $7d, $73
1b111     60 4D 4B 5F 
1b115     7D 77 6B 67 
1b119     82 96 8A 8E 
1b11d     99 8E 8F 84 | 	byte	$60, $4d, $4b, $5f, $7d, $77, $6b, $67, $82, $96, $8a, $8e, $99, $8e, $8f, $84
1b121     6C 62 55 5A 
1b125     6B 7D 99 9F 
1b129     80 78 85 85 
1b12d     7A 7C 68 60 | 	byte	$6c, $62, $55, $5a, $6b, $7d, $99, $9f, $80, $78, $85, $85, $7a, $7c, $68, $60
1b131     56 65 59 3B 
1b135     31 43 58 6B 
1b139     6C 4E 40 43 
1b13d     50 5B 6B 7A | 	byte	$56, $65, $59, $3b, $31, $43, $58, $6b, $6c, $4e, $40, $43, $50, $5b, $6b, $7a
1b141     82 74 6C 75 
1b145     7D 9B AE 98 
1b149     82 7F 9B AE 
1b14d     AA AE BB B7 | 	byte	$82, $74, $6c, $75, $7d, $9b, $ae, $98, $82, $7f, $9b, $ae, $aa, $ae, $bb, $b7
1b151     BC A2 78 68 
1b155     86 A9 B1 B4 
1b159     B9 C5 C9 BE 
1b15d     B4 B2 BC C4 | 	byte	$bc, $a2, $78, $68, $86, $a9, $b1, $b4, $b9, $c5, $c9, $be, $b4, $b2, $bc, $c4
1b161     B6 9F 8E 93 
1b165     9F A1 A6 A6 
1b169     B6 C5 B7 98 
1b16d     7C 73 7A 84 | 	byte	$b6, $9f, $8e, $93, $9f, $a1, $a6, $a6, $b6, $c5, $b7, $98, $7c, $73, $7a, $84
1b171     95 96 7F 56 
1b175     42 52 67 70 
1b179     7C 84 75 5E 
1b17d     6F 87 8A 87 | 	byte	$95, $96, $7f, $56, $42, $52, $67, $70, $7c, $84, $75, $5e, $6f, $87, $8a, $87
1b181     7A 72 73 64 
1b185     4A 40 3D 42 
1b189     49 5C 6F 71 
1b18d     58 43 3E 3D | 	byte	$7a, $72, $73, $64, $4a, $40, $3d, $42, $49, $5c, $6f, $71, $58, $43, $3e, $3d
1b191     4B 65 64 51 
1b195     34 4A 6F 67 
1b199     57 50 61 76 
1b19d     6E 53 45 42 | 	byte	$4b, $65, $64, $51, $34, $4a, $6f, $67, $57, $50, $61, $76, $6e, $53, $45, $42
1b1a1     46 4B 62 83 
1b1a5     81 63 63 83 
1b1a9     9A 9F 92 82 
1b1ad     88 9E C9 DA | 	byte	$46, $4b, $62, $83, $81, $63, $63, $83, $9a, $9f, $92, $82, $88, $9e, $c9, $da
1b1b1     C2 A1 8A 83 
1b1b5     96 A4 99 8A 
1b1b9     71 67 68 79 
1b1bd     99 9F 98 A3 | 	byte	$c2, $a1, $8a, $83, $96, $a4, $99, $8a, $71, $67, $68, $79, $99, $9f, $98, $a3
1b1c1     B1 B1 A5 98 
1b1c5     8F 8E 85 A6 
1b1c9     B8 B3 A0 91 
1b1cd     94 AB 95 78 | 	byte	$b1, $b1, $a5, $98, $8f, $8e, $85, $a6, $b8, $b3, $a0, $91, $94, $ab, $95, $78
1b1d1     6B 82 90 84 
1b1d5     8B 90 82 68 
1b1d9     71 8E 97 96 
1b1dd     95 8A 7B 80 | 	byte	$6b, $82, $90, $84, $8b, $90, $82, $68, $71, $8e, $97, $96, $95, $8a, $7b, $80
1b1e1     9E AC B0 9C 
1b1e5     9B B9 D5 BC 
1b1e9     8F 70 71 8B 
1b1ed     89 8F 88 73 | 	byte	$9e, $ac, $b0, $9c, $9b, $b9, $d5, $bc, $8f, $70, $71, $8b, $89, $8f, $88, $73
1b1f1     59 4D 49 58 
1b1f5     6F 73 63 56 
1b1f9     45 47 59 70 
1b1fd     73 6D 7A 7B | 	byte	$59, $4d, $49, $58, $6f, $73, $63, $56, $45, $47, $59, $70, $73, $6d, $7a, $7b
1b201     7B 7C 76 70 
1b205     77 7A 87 83 
1b209     74 70 73 70 
1b20d     76 71 70 6A | 	byte	$7b, $7c, $76, $70, $77, $7a, $87, $83, $74, $70, $73, $70, $76, $71, $70, $6a
1b211     59 66 83 A9 
1b215     AF 8B 6C 78 
1b219     9B A1 91 6C 
1b21d     61 66 64 65 | 	byte	$59, $66, $83, $a9, $af, $8b, $6c, $78, $9b, $a1, $91, $6c, $61, $66, $64, $65
1b221     77 7D 7E 7B 
1b225     79 77 7C 74 
1b229     5E 45 48 55 
1b22d     6D 76 5E 44 | 	byte	$77, $7d, $7e, $7b, $79, $77, $7c, $74, $5e, $45, $48, $55, $6d, $76, $5e, $44
1b231     46 52 5B 5D 
1b235     55 48 43 44 
1b239     50 5B 59 67 
1b23d     7E 8B 8E 96 | 	byte	$46, $52, $5b, $5d, $55, $48, $43, $44, $50, $5b, $59, $67, $7e, $8b, $8e, $96
1b241     90 79 69 8A 
1b245     AE B9 BD A6 
1b249     93 9B B5 BE 
1b24d     AD 93 8C 8B | 	byte	$90, $79, $69, $8a, $ae, $b9, $bd, $a6, $93, $9b, $b5, $be, $ad, $93, $8c, $8b
1b251     99 A4 B3 B6 
1b255     C4 D2 D6 C7 
1b259     D8 DB B2 92 
1b25d     84 94 AD BC | 	byte	$99, $a4, $b3, $b6, $c4, $d2, $d6, $c7, $d8, $db, $b2, $92, $84, $94, $ad, $bc
1b261     BC AD A3 A8 
1b265     9F 9A 92 9E 
1b269     9D AA A0 7F 
1b26d     6E 83 8B 80 | 	byte	$bc, $ad, $a3, $a8, $9f, $9a, $92, $9e, $9d, $aa, $a0, $7f, $6e, $83, $8b, $80
1b271     6E 6D 68 5B 
1b275     5F 6D 6F 6B 
1b279     6C 6F 6E 6F 
1b27d     6F 6E 5B 42 | 	byte	$6e, $6d, $68, $5b, $5f, $6d, $6f, $6b, $6c, $6f, $6e, $6f, $6f, $6e, $5b, $42
1b281     40 2E 41 5A 
1b285     64 62 60 63 
1b289     68 59 54 61 
1b28d     54 3B 2D 37 | 	byte	$40, $2e, $41, $5a, $64, $62, $60, $63, $68, $59, $54, $61, $54, $3b, $2d, $37
1b291     5A 75 74 68 
1b295     61 51 4E 54 
1b299     61 6A 5D 58 
1b29d     52 58 5E 69 | 	byte	$5a, $75, $74, $68, $61, $51, $4e, $54, $61, $6a, $5d, $58, $52, $58, $5e, $69
1b2a1     71 83 94 97 
1b2a5     9A 8B 7B 83 
1b2a9     96 B1 C6 C6 
1b2ad     C7 C4 AA 96 | 	byte	$71, $83, $94, $97, $9a, $8b, $7b, $83, $96, $b1, $c6, $c6, $c7, $c4, $aa, $96
1b2b1     72 62 6C 74 
1b2b5     7E 85 86 72 
1b2b9     79 8A 9C A4 
1b2bd     B0 B0 9A 71 | 	byte	$72, $62, $6c, $74, $7e, $85, $86, $72, $79, $8a, $9c, $a4, $b0, $b0, $9a, $71
1b2c1     73 9A B8 BD 
1b2c5     A6 99 94 84 
1b2c9     8F 89 8E 80 
1b2cd     6B 60 74 8F | 	byte	$73, $9a, $b8, $bd, $a6, $99, $94, $84, $8f, $89, $8e, $80, $6b, $60, $74, $8f
1b2d1     93 93 96 91 
1b2d5     8C 97 98 90 
1b2d9     7E 7B 89 91 
1b2dd     99 8D 8F A7 | 	byte	$93, $93, $96, $91, $8c, $97, $98, $90, $7e, $7b, $89, $91, $99, $8d, $8f, $a7
1b2e1     BB BE 9C 96 
1b2e5     8D 8B 8C 85 
1b2e9     88 8A 87 90 
1b2ed     83 68 61 5E | 	byte	$bb, $be, $9c, $96, $8d, $8b, $8c, $85, $88, $8a, $87, $90, $83, $68, $61, $5e
1b2f1     5F 48 50 61 
1b2f5     7B 85 6F 62 
1b2f9     61 69 77 6D 
1b2fd     67 6A 7D 8C | 	byte	$5f, $48, $50, $61, $7b, $85, $6f, $62, $61, $69, $77, $6d, $67, $6a, $7d, $8c
1b301     83 78 78 84 
1b305     97 91 79 7D 
1b309     84 7F 66 4B 
1b30d     46 68 8A 99 | 	byte	$83, $78, $78, $84, $97, $91, $79, $7d, $84, $7f, $66, $4b, $46, $68, $8a, $99
1b311     A3 99 8E 86 
1b315     7B 7D 7E 77 
1b319     6E 59 5C 58 
1b31d     5F 67 67 53 | 	byte	$a3, $99, $8e, $86, $7b, $7d, $7e, $77, $6e, $59, $5c, $58, $5f, $67, $67, $53
1b321     51 5B 66 5B 
1b325     53 59 65 6F 
1b329     7A 73 5D 4F 
1b32d     4D 4B 48 47 | 	byte	$51, $5b, $66, $5b, $53, $59, $65, $6f, $7a, $73, $5d, $4f, $4d, $4b, $48, $47
1b331     55 5E 58 50 
1b335     56 5B 6C 82 
1b339     7F 8A 95 90 
1b33d     73 5F 70 89 | 	byte	$55, $5e, $58, $50, $56, $5b, $6c, $82, $7f, $8a, $95, $90, $73, $5f, $70, $89
1b341     AD C4 C7 B0 
1b345     B7 B7 AE AB 
1b349     9F 9A 9A A7 
1b34d     B9 C7 D8 DD | 	byte	$ad, $c4, $c7, $b0, $b7, $b7, $ae, $ab, $9f, $9a, $9a, $a7, $b9, $c7, $d8, $dd
1b351     D6 C7 D4 E4 
1b355     D1 AF AF BB 
1b359     A7 92 84 8A 
1b35d     88 90 98 A4 | 	byte	$d6, $c7, $d4, $e4, $d1, $af, $af, $bb, $a7, $92, $84, $8a, $88, $90, $98, $a4
1b361     9F 9D A8 AA 
1b365     AD A7 96 90 
1b369     9B 9E 8C 82 
1b36d     7E 78 60 50 | 	byte	$9f, $9d, $a8, $aa, $ad, $a7, $96, $90, $9b, $9e, $8c, $82, $7e, $78, $60, $50
1b371     63 5E 56 5F 
1b375     5C 61 75 7D 
1b379     61 3F 31 30 
1b37d     35 44 50 5B | 	byte	$63, $5e, $56, $5f, $5c, $61, $75, $7d, $61, $3f, $31, $30, $35, $44, $50, $5b
1b381     74 91 8C 62 
1b385     53 51 4F 47 
1b389     4B 53 52 47 
1b38d     4F 50 4F 58 | 	byte	$74, $91, $8c, $62, $53, $51, $4f, $47, $4b, $53, $52, $47, $4f, $50, $4f, $58
1b391     56 5D 60 67 
1b395     72 7D 67 54 
1b399     46 54 80 90 
1b39d     69 62 7A 94 | 	byte	$56, $5d, $60, $67, $72, $7d, $67, $54, $46, $54, $80, $90, $69, $62, $7a, $94
1b3a1     90 93 99 B0 
1b3a5     B3 BE CA D1 
1b3a9     C5 B5 9D 8C 
1b3ad     84 64 57 58 | 	byte	$90, $93, $99, $b0, $b3, $be, $ca, $d1, $c5, $b5, $9d, $8c, $84, $64, $57, $58
1b3b1     63 6C 81 96 
1b3b5     90 80 84 8D 
1b3b9     89 74 6C 6B 
1b3bd     7D 95 AB 93 | 	byte	$63, $6c, $81, $96, $90, $80, $84, $8d, $89, $74, $6c, $6b, $7d, $95, $ab, $93
1b3c1     85 8A 85 78 
1b3c5     79 91 98 8F 
1b3c9     7C 7E 84 97 
1b3cd     B7 BD 95 8F | 	byte	$85, $8a, $85, $78, $79, $91, $98, $8f, $7c, $7e, $84, $97, $b7, $bd, $95, $8f
1b3d1     A3 A6 95 86 
1b3d5     7B 8B 89 82 
1b3d9     7B 8D 9F A3 
1b3dd     97 94 97 84 | 	byte	$a3, $a6, $95, $86, $7b, $8b, $89, $82, $7b, $8d, $9f, $a3, $97, $94, $97, $84
1b3e1     83 99 9D 88 
1b3e5     7F 8D 8D 7E 
1b3e9     82 8C 84 73 
1b3ed     61 53 5D 69 | 	byte	$83, $99, $9d, $88, $7f, $8d, $8d, $7e, $82, $8c, $84, $73, $61, $53, $5d, $69
1b3f1     60 58 57 6D 
1b3f5     81 77 68 72 
1b3f9     70 7A 7F 85 
1b3fd     8E 9E B4 BC | 	byte	$60, $58, $57, $6d, $81, $77, $68, $72, $70, $7a, $7f, $85, $8e, $9e, $b4, $bc
1b401     9F 7B 69 60 
1b405     6F 7E 84 7C 
1b409     73 67 70 96 
1b40d     A2 97 6E 6A | 	byte	$9f, $7b, $69, $60, $6f, $7e, $84, $7c, $73, $67, $70, $96, $a2, $97, $6e, $6a
1b411     6E 68 62 5A 
1b415     56 4F 56 52 
1b419     56 5A 43 3A 
1b41d     3D 54 5D 76 | 	byte	$6e, $68, $62, $5a, $56, $4f, $56, $52, $56, $5a, $43, $3a, $3d, $54, $5d, $76
1b421     78 72 5A 51 
1b425     60 71 75 65 
1b429     64 68 64 4F 
1b42d     3E 3E 57 78 | 	byte	$78, $72, $5a, $51, $60, $71, $75, $65, $64, $68, $64, $4f, $3e, $3e, $57, $78
1b431     95 8B 72 6D 
1b435     75 7F 78 65 
1b439     6C 69 7C 8F 
1b43d     AC C5 D3 C2 | 	byte	$95, $8b, $72, $6d, $75, $7f, $78, $65, $6c, $69, $7c, $8f, $ac, $c5, $d3, $c2
1b441     96 8D 9A B0 
1b445     BA C7 C9 D5 
1b449     D9 DE E3 DE 
1b44d     D2 CD D1 C7 | 	byte	$96, $8d, $9a, $b0, $ba, $c7, $c9, $d5, $d9, $de, $e3, $de, $d2, $cd, $d1, $c7
1b451     B1 AC B2 9F 
1b455     79 73 6B 76 
1b459     82 8C 9C A7 
1b45d     B0 A6 A1 99 | 	byte	$b1, $ac, $b2, $9f, $79, $73, $6b, $76, $82, $8c, $9c, $a7, $b0, $a6, $a1, $99
1b461     A1 B2 A5 95 
1b465     8A 94 9F 9E 
1b469     8F 73 5E 49 
1b46d     3D 44 63 73 | 	byte	$a1, $b2, $a5, $95, $8a, $94, $9f, $9e, $8f, $73, $5e, $49, $3d, $44, $63, $73
1b471     70 56 3F 3C 
1b475     47 44 44 44 
1b479     50 68 7B 74 
1b47d     68 61 5B 54 | 	byte	$70, $56, $3f, $3c, $47, $44, $44, $44, $50, $68, $7b, $74, $68, $61, $5b, $54
1b481     5D 62 5C 6C 
1b485     7C 6D 51 4B 
1b489     59 67 63 57 
1b48d     59 50 42 41 | 	byte	$5d, $62, $5c, $6c, $7c, $6d, $51, $4b, $59, $67, $63, $57, $59, $50, $42, $41
1b491     54 6B 79 7C 
1b495     78 74 63 67 
1b499     6F 88 9C A8 
1b49d     A1 9C 98 A9 | 	byte	$54, $6b, $79, $7c, $78, $74, $63, $67, $6f, $88, $9c, $a8, $a1, $9c, $98, $a9
1b4a1     C5 CA D6 C4 
1b4a5     B3 B0 AB 92 
1b4a9     7D 66 5B 5E 
1b4ad     6E 7A 79 77 | 	byte	$c5, $ca, $d6, $c4, $b3, $b0, $ab, $92, $7d, $66, $5b, $5e, $6e, $7a, $79, $77
1b4b1     77 67 5F 5F 
1b4b5     72 75 65 58 
1b4b9     63 81 97 92 
1b4bd     72 67 78 8D | 	byte	$77, $67, $5f, $5f, $72, $75, $65, $58, $63, $81, $97, $92, $72, $67, $78, $8d
1b4c1     7B 82 9B AF 
1b4c5     C1 C5 C1 B2 
1b4c9     B1 AF AC A0 
1b4cd     92 8C 81 7C | 	byte	$7b, $82, $9b, $af, $c1, $c5, $c1, $b2, $b1, $af, $ac, $a0, $92, $8c, $81, $7c
1b4d1     6A 62 78 90 
1b4d5     9D 80 64 82 
1b4d9     B4 B1 A4 97 
1b4dd     97 97 9F 92 | 	byte	$6a, $62, $78, $90, $9d, $80, $64, $82, $b4, $b1, $a4, $97, $97, $97, $9f, $92
1b4e1     7B 7C 81 87 
1b4e5     8B 83 8B 88 
1b4e9     70 51 3C 47 
1b4ed     5B 67 5C 54 | 	byte	$7b, $7c, $81, $87, $8b, $83, $8b, $88, $70, $51, $3c, $47, $5b, $67, $5c, $54
1b4f1     5E 67 60 7D 
1b4f5     8A 8F A2 C9 
1b4f9     C9 A4 7A 78 
1b4fd     83 86 87 81 | 	byte	$5e, $67, $60, $7d, $8a, $8f, $a2, $c9, $c9, $a4, $7a, $78, $83, $86, $87, $81
1b501     7F 84 85 8A 
1b505     83 8B 8C 78 
1b509     63 5A 57 43 
1b50d     30 43 5D 54 | 	byte	$7f, $84, $85, $8a, $83, $8b, $8c, $78, $63, $5a, $57, $43, $30, $43, $5d, $54
1b511     4D 48 4C 59 
1b515     4F 3B 43 54 
1b519     62 5F 54 4F 
1b51d     50 55 5F 67 | 	byte	$4d, $48, $4c, $59, $4f, $3b, $43, $54, $62, $5f, $54, $4f, $50, $55, $5f, $67
1b521     67 66 77 6F 
1b525     56 5C 6E 6B 
1b529     68 75 72 72 
1b52d     76 72 5C 5B | 	byte	$67, $66, $77, $6f, $56, $5c, $6e, $6b, $68, $75, $72, $72, $76, $72, $5c, $5b
1b531     66 75 84 7E 
1b535     79 7B 91 AC 
1b539     96 7F 81 A1 
1b53d     BB B8 B0 B7 | 	byte	$66, $75, $84, $7e, $79, $7b, $91, $ac, $96, $7f, $81, $a1, $bb, $b8, $b0, $b7
1b541     C8 E1 E4 E5 
1b545     E2 E5 E5 DD 
1b549     BB AD A7 AA 
1b54d     A3 8F 6F 6D | 	byte	$c8, $e1, $e4, $e5, $e2, $e5, $e5, $dd, $bb, $ad, $a7, $aa, $a3, $8f, $6f, $6d
1b551     82 87 85 79 
1b555     82 99 A8 A7 
1b559     9F 9A AB B8 
1b55d     AA 9D 90 84 | 	byte	$82, $87, $85, $79, $82, $99, $a8, $a7, $9f, $9a, $ab, $b8, $aa, $9d, $90, $84
1b561     85 90 88 88 
1b565     8A 85 70 5D 
1b569     5B 55 4B 3B 
1b56d     2E 30 36 3D | 	byte	$85, $90, $88, $88, $8a, $85, $70, $5d, $5b, $55, $4b, $3b, $2e, $30, $36, $3d
1b571     5A 6B 66 6C 
1b575     73 73 77 71 
1b579     60 4F 4E 62 
1b57d     70 7D 73 6E | 	byte	$5a, $6b, $66, $6c, $73, $73, $77, $71, $60, $4f, $4e, $62, $70, $7d, $73, $6e
1b581     6B 63 62 60 
1b585     6C 6A 62 64 
1b589     47 29 2D 42 
1b58d     62 70 78 88 | 	byte	$6b, $63, $62, $60, $6c, $6a, $62, $64, $47, $29, $2d, $42, $62, $70, $78, $88
1b591     8B 86 6F 6E 
1b595     82 9D A7 9C 
1b599     97 A6 B5 BD 
1b59d     AD 9F 99 AF | 	byte	$8b, $86, $6f, $6e, $82, $9d, $a7, $9c, $97, $a6, $b5, $bd, $ad, $9f, $99, $af
1b5a1     A9 99 A3 9C 
1b5a5     90 82 80 7B 
1b5a9     82 7B 58 3A 
1b5ad     2A 30 57 71 | 	byte	$a9, $99, $a3, $9c, $90, $82, $80, $7b, $82, $7b, $58, $3a, $2a, $30, $57, $71
1b5b1     6E 64 57 5A 
1b5b5     5A 60 69 73 
1b5b9     87 91 8D 8D 
1b5bd     96 AD D1 E1 | 	byte	$6e, $64, $57, $5a, $5a, $60, $69, $73, $87, $91, $8d, $8d, $96, $ad, $d1, $e1
1b5c1     D0 CF C4 BD 
1b5c5     B2 A5 9A 95 
1b5c9     89 73 6C 72 
1b5cd     79 77 7F 85 | 	byte	$d0, $cf, $c4, $bd, $b2, $a5, $9a, $95, $89, $73, $6c, $72, $79, $77, $7f, $85
1b5d1     94 A0 A4 A4 
1b5d5     B3 AC 9E 9C 
1b5d9     AA B8 C4 B5 
1b5dd     95 6C 57 48 | 	byte	$94, $a0, $a4, $a4, $b3, $ac, $9e, $9c, $aa, $b8, $c4, $b5, $95, $6c, $57, $48
1b5e1     6C 8A 8A 6E 
1b5e5     52 50 4B 56 
1b5e9     56 48 46 4E 
1b5ed     61 83 94 A7 | 	byte	$6c, $8a, $8a, $6e, $52, $50, $4b, $56, $56, $48, $46, $4e, $61, $83, $94, $a7
1b5f1     B0 B8 C5 CA 
1b5f5     B4 97 7D 74 
1b5f9     81 9C A7 AD 
1b5fd     A5 93 7D 63 | 	byte	$b0, $b8, $c5, $ca, $b4, $97, $7d, $74, $81, $9c, $a7, $ad, $a5, $93, $7d, $63
1b601     64 64 66 6B 
1b605     6F 5A 47 33 
1b609     24 26 49 6E 
1b60d     80 72 5F 43 | 	byte	$64, $64, $66, $6b, $6f, $5a, $47, $33, $24, $26, $49, $6e, $80, $72, $5f, $43
1b611     32 44 6A 6C 
1b615     48 32 34 51 
1b619     67 66 64 5A 
1b61d     5E 5A 4B 5E | 	byte	$32, $44, $6a, $6c, $48, $32, $34, $51, $67, $66, $64, $5a, $5e, $5a, $4b, $5e
1b621     66 74 83 97 
1b625     A8 A6 7D 52 
1b629     3C 41 52 72 
1b62d     96 AB A9 8F | 	byte	$66, $74, $83, $97, $a8, $a6, $7d, $52, $3c, $41, $52, $72, $96, $ab, $a9, $8f
1b631     79 73 67 67 
1b635     74 95 AA AD 
1b639     A8 B8 D1 E2 
1b63d     E4 E4 E5 DA | 	byte	$79, $73, $67, $67, $74, $95, $aa, $ad, $a8, $b8, $d1, $e2, $e4, $e4, $e5, $da
1b641     DB CE BA A9 
1b645     9F A4 93 75 
1b649     72 75 77 80 
1b64d     A5 AD B2 AB | 	byte	$db, $ce, $ba, $a9, $9f, $a4, $93, $75, $72, $75, $77, $80, $a5, $ad, $b2, $ab
1b651     A4 9B 99 93 
1b655     97 AD CF D3 
1b659     B4 92 7E 6E 
1b65d     5F 7B AA AE | 	byte	$a4, $9b, $99, $93, $97, $ad, $cf, $d3, $b4, $92, $7e, $6e, $5f, $7b, $aa, $ae
1b661     91 73 5A 56 
1b665     53 45 33 36 
1b669     3B 42 48 65 
1b66d     70 6A 79 9B | 	byte	$91, $73, $5a, $56, $53, $45, $33, $36, $3b, $42, $48, $65, $70, $6a, $79, $9b
1b671     89 6A 50 46 
1b675     3B 3D 54 6E 
1b679     77 6F 6D 64 
1b67d     4F 4D 59 6B | 	byte	$89, $6a, $50, $46, $3b, $3d, $54, $6e, $77, $6f, $6d, $64, $4f, $4d, $59, $6b
1b681     7A 81 6D 5A 
1b685     4E 39 31 52 
1b689     77 87 80 73 
1b68d     75 7D 8C 9D | 	byte	$7a, $81, $6d, $5a, $4e, $39, $31, $52, $77, $87, $80, $73, $75, $7d, $8c, $9d
1b691     AA 99 77 7C 
1b695     8E A8 A2 8F 
1b699     85 94 A0 92 
1b69d     84 99 9E 9D | 	byte	$aa, $99, $77, $7c, $8e, $a8, $a2, $8f, $85, $94, $a0, $92, $84, $99, $9e, $9d
1b6a1     BA C7 B8 7A 
1b6a5     50 33 21 27 
1b6a9     32 44 4D 4D 
1b6ad     4A 49 53 58 | 	byte	$ba, $c7, $b8, $7a, $50, $33, $21, $27, $32, $44, $4d, $4d, $4a, $49, $53, $58
1b6b1     5C 67 84 97 
1b6b5     93 97 A8 B8 
1b6b9     C6 DF E3 C7 
1b6bd     A5 A1 AA A3 | 	byte	$5c, $67, $84, $97, $93, $97, $a8, $b8, $c6, $df, $e3, $c7, $a5, $a1, $aa, $a3
1b6c1     9F 9A 95 94 
1b6c5     87 6C 5D 67 
1b6c9     7C 91 96 A4 
1b6cd     B5 A7 A7 B3 | 	byte	$9f, $9a, $95, $94, $87, $6c, $5d, $67, $7c, $91, $96, $a4, $b5, $a7, $a7, $b3
1b6d1     AB A7 BF D5 
1b6d5     D5 B6 9F 8B 
1b6d9     74 62 56 56 
1b6dd     6B 71 65 4F | 	byte	$ab, $a7, $bf, $d5, $d5, $b6, $9f, $8b, $74, $62, $56, $56, $6b, $71, $65, $4f
1b6e1     54 5B 57 63 
1b6e5     6A 6D 5F 6E 
1b6e9     92 9F A8 B3 
1b6ed     BA B2 A6 AE | 	byte	$54, $5b, $57, $63, $6a, $6d, $5f, $6e, $92, $9f, $a8, $b3, $ba, $b2, $a6, $ae
1b6f1     95 8A 99 AB 
1b6f5     A3 9A 9A 98 
1b6f9     88 7A 62 4C 
1b6fd     47 5E 66 4D | 	byte	$95, $8a, $99, $ab, $a3, $9a, $9a, $98, $88, $7a, $62, $4c, $47, $5e, $66, $4d
1b701     47 4A 54 5C 
1b705     5D 59 56 62 
1b709     6A 5D 4F 49 
1b70d     45 43 50 3E | 	byte	$47, $4a, $54, $5c, $5d, $59, $56, $62, $6a, $5d, $4f, $49, $45, $43, $50, $3e
1b711     26 1D 49 62 
1b715     57 48 57 65 
1b719     5F 58 5E 70 
1b71d     8C A3 9F 94 | 	byte	$26, $1d, $49, $62, $57, $48, $57, $65, $5f, $58, $5e, $70, $8c, $a3, $9f, $94
1b721     81 76 6A 6B 
1b725     6B 6F 65 7A 
1b729     8C 89 70 73 
1b72d     77 73 77 8C | 	byte	$81, $76, $6a, $6b, $6b, $6f, $65, $7a, $8c, $89, $70, $73, $77, $73, $77, $8c
1b731     99 A8 B9 BE 
1b735     B9 D2 E5 E5 
1b739     E5 C4 AD 9A 
1b73d     A1 A1 90 8D | 	byte	$99, $a8, $b9, $be, $b9, $d2, $e5, $e5, $e5, $c4, $ad, $9a, $a1, $a1, $90, $8d
1b741     95 99 8E 7B 
1b745     7B 89 AE C1 
1b749     C4 BD A9 AE 
1b74d     B4 BD B3 A2 | 	byte	$95, $99, $8e, $7b, $7b, $89, $ae, $c1, $c4, $bd, $a9, $ae, $b4, $bd, $b3, $a2
1b751     9F B1 B0 93 
1b755     7E 8F 9F 9A 
1b759     78 76 7F 82 
1b75d     75 68 58 51 | 	byte	$9f, $b1, $b0, $93, $7e, $8f, $9f, $9a, $78, $76, $7f, $82, $75, $68, $58, $51
1b761     58 67 65 4A 
1b765     42 4B 74 88 
1b769     80 74 73 64 
1b76d     54 46 3A 3C | 	byte	$58, $67, $65, $4a, $42, $4b, $74, $88, $80, $74, $73, $64, $54, $46, $3a, $3c
1b771     50 57 57 53 
1b775     4E 5F 68 6D 
1b779     66 5F 64 6D 
1b77d     74 6D 5D 6D | 	byte	$50, $57, $57, $53, $4e, $5f, $68, $6d, $66, $5f, $64, $6d, $74, $6d, $5d, $6d
1b781     6E 6F 71 72 
1b785     74 7D 8E 8F 
1b789     88 83 7E 8A 
1b78d     91 7E 66 6A | 	byte	$6e, $6f, $71, $72, $74, $7d, $8e, $8f, $88, $83, $7e, $8a, $91, $7e, $66, $6a
1b791     82 82 75 77 
1b795     7C 8A 94 98 
1b799     A0 AD B9 BE 
1b79d     A8 84 66 63 | 	byte	$82, $82, $75, $77, $7c, $8a, $94, $98, $a0, $ad, $b9, $be, $a8, $84, $66, $63
1b7a1     56 53 3B 1E 
1b7a5     25 45 45 2B 
1b7a9     2C 48 65 79 
1b7ad     95 A6 A5 A4 | 	byte	$56, $53, $3b, $1e, $25, $45, $45, $2b, $2c, $48, $65, $79, $95, $a6, $a5, $a4
1b7b1     9F A6 B1 CD 
1b7b5     DF DC C2 A2 
1b7b9     8A 81 94 88 
1b7bd     6F 6C 88 92 | 	byte	$9f, $a6, $b1, $cd, $df, $dc, $c2, $a2, $8a, $81, $94, $88, $6f, $6c, $88, $92
1b7c1     84 6B 5D 6E 
1b7c5     85 A4 A8 AC 
1b7c9     BD CB C1 C1 
1b7cd     CF BE AC A2 | 	byte	$84, $6b, $5d, $6e, $85, $a4, $a8, $ac, $bd, $cb, $c1, $c1, $cf, $be, $ac, $a2
1b7d1     9B 93 7C 82 
1b7d5     6A 5F 63 6E 
1b7d9     6A 57 59 6D 
1b7dd     77 80 89 97 | 	byte	$9b, $93, $7c, $82, $6a, $5f, $63, $6e, $6a, $57, $59, $6d, $77, $80, $89, $97
1b7e1     91 73 73 94 
1b7e5     AA AD 9D 9A 
1b7e9     98 99 8F 9A 
1b7ed     AA 9F 95 89 | 	byte	$91, $73, $73, $94, $aa, $ad, $9d, $9a, $98, $99, $8f, $9a, $aa, $9f, $95, $89
1b7f1     85 89 81 76 
1b7f5     71 72 65 44 
1b7f9     44 4E 58 4E 
1b7fd     4C 5A 72 80 | 	byte	$85, $89, $81, $76, $71, $72, $65, $44, $44, $4e, $58, $4e, $4c, $5a, $72, $80
1b801     79 61 52 4A 
1b805     5B 5F 50 4A 
1b809     3E 3F 3B 1C 
1b80d     15 33 4A 52 | 	byte	$79, $61, $52, $4a, $5b, $5f, $50, $4a, $3e, $3f, $3b, $1c, $15, $33, $4a, $52
1b811     4C 51 4F 4A 
1b815     57 67 73 82 
1b819     82 7F 80 88 
1b81d     89 7D 7F 74 | 	byte	$4c, $51, $4f, $4a, $57, $67, $73, $82, $82, $7f, $80, $88, $89, $7d, $7f, $74
1b821     58 57 7B 92 
1b825     81 5E 61 77 
1b829     85 8D B0 C7 
1b82d     C5 C4 C3 C0 | 	byte	$58, $57, $7b, $92, $81, $5e, $61, $77, $85, $8d, $b0, $c7, $c5, $c4, $c3, $c0
1b831     D1 DA D2 CE 
1b835     CC B6 AD A5 
1b839     84 69 58 76 
1b83d     92 93 9D AB | 	byte	$d1, $da, $d2, $ce, $cc, $b6, $ad, $a5, $84, $69, $58, $76, $92, $93, $9d, $ab
1b841     B0 BD BC CF 
1b845     C6 BF D4 DB 
1b849     D1 C8 B0 92 
1b84d     8C 8F 81 7D | 	byte	$b0, $bd, $bc, $cf, $c6, $bf, $d4, $db, $d1, $c8, $b0, $92, $8c, $8f, $81, $7d
1b851     7F 7A 71 7B 
1b855     91 93 79 5A 
1b859     64 66 71 77 
1b85d     8A 8A 77 5F | 	byte	$7f, $7a, $71, $7b, $91, $93, $79, $5a, $64, $66, $71, $77, $8a, $8a, $77, $5f
1b861     6C 6A 69 59 
1b865     4A 55 74 75 
1b869     5B 41 3C 31 
1b86d     2B 36 48 4A | 	byte	$6c, $6a, $69, $59, $4a, $55, $74, $75, $5b, $41, $3c, $31, $2b, $36, $48, $4a
1b871     54 64 7B 7E 
1b875     74 72 63 4C 
1b879     5B 6B 84 9C 
1b87d     A2 8D 73 76 | 	byte	$54, $64, $7b, $7e, $74, $72, $63, $4c, $5b, $6b, $84, $9c, $a2, $8d, $73, $76
1b881     84 8B 88 81 
1b885     78 7E 9C 9A 
1b889     6C 51 5A 62 
1b88d     55 51 6D 82 | 	byte	$84, $8b, $88, $81, $78, $7e, $9c, $9a, $6c, $51, $5a, $62, $55, $51, $6d, $82
1b891     7F 7D 85 97 
1b895     9F 9C 92 9A 
1b899     9E 90 70 5D 
1b89d     5D 47 31 3F | 	byte	$7f, $7d, $85, $97, $9f, $9c, $92, $9a, $9e, $90, $70, $5d, $5d, $47, $31, $3f
1b8a1     3E 35 37 4D 
1b8a5     6F 8B 9C 9E 
1b8a9     8E 95 AD BC 
1b8ad     B7 B3 B7 B2 | 	byte	$3e, $35, $37, $4d, $6f, $8b, $9c, $9e, $8e, $95, $ad, $bc, $b7, $b3, $b7, $b2
1b8b1     B6 B7 B5 97 
1b8b5     7D 5E 44 45 
1b8b9     6A 83 86 8A 
1b8bd     7B 65 6A 91 | 	byte	$b6, $b7, $b5, $97, $7d, $5e, $44, $45, $6a, $83, $86, $8a, $7b, $65, $6a, $91
1b8c1     B5 BA C2 CC 
1b8c5     D3 D8 CB B8 
1b8c9     9A 9A 9D 96 
1b8cd     80 7E 7C 6D | 	byte	$b5, $ba, $c2, $cc, $d3, $d8, $cb, $b8, $9a, $9a, $9d, $96, $80, $7e, $7c, $6d
1b8d1     6A 71 74 6E 
1b8d5     73 86 9B 99 
1b8d9     9C 97 8E 95 
1b8dd     A4 A7 AD 9C | 	byte	$6a, $71, $74, $6e, $73, $86, $9b, $99, $9c, $97, $8e, $95, $a4, $a7, $ad, $9c
1b8e1     88 6B 81 9C 
1b8e5     B0 9E 81 76 
1b8e9     77 8D 9D 8E 
1b8ed     6C 4E 52 5F | 	byte	$88, $6b, $81, $9c, $b0, $9e, $81, $76, $77, $8d, $9d, $8e, $6c, $4e, $52, $5f
1b8f1     74 95 8F 67 
1b8f5     3E 31 39 49 
1b8f9     63 8B 91 7C 
1b8fd     5A 51 4E 47 | 	byte	$74, $95, $8f, $67, $3e, $31, $39, $49, $63, $8b, $91, $7c, $5a, $51, $4e, $47
1b901     4C 52 58 59 
1b905     53 3D 25 21 
1b909     1E 1B 23 2C 
1b90d     2B 31 4B 5B | 	byte	$4c, $52, $58, $59, $53, $3d, $25, $21, $1e, $1b, $23, $2c, $2b, $31, $4b, $5b
1b911     60 5D 5B 5A 
1b915     6A 79 8B 85 
1b919     69 5D 68 70 
1b91d     70 6F 69 61 | 	byte	$60, $5d, $5b, $5a, $6a, $79, $8b, $85, $69, $5d, $68, $70, $70, $6f, $69, $61
1b921     7B 8C AF C2 
1b925     C0 AC A4 B1 
1b929     C2 C9 D5 DE 
1b92d     C9 B8 B9 CB | 	byte	$7b, $8c, $af, $c2, $c0, $ac, $a4, $b1, $c2, $c9, $d5, $de, $c9, $b8, $b9, $cb
1b931     C8 A5 83 69 
1b935     5D 71 83 90 
1b939     9B B3 B5 C2 
1b93d     CB C7 C2 D2 | 	byte	$c8, $a5, $83, $69, $5d, $71, $83, $90, $9b, $b3, $b5, $c2, $cb, $c7, $c2, $d2
1b941     E4 E4 E5 D1 
1b945     B8 9D 8F 8F 
1b949     8E 80 6A 62 
1b94d     65 79 88 81 | 	byte	$e4, $e4, $e5, $d1, $b8, $9d, $8f, $8f, $8e, $80, $6a, $62, $65, $79, $88, $81
1b951     75 62 6F 82 
1b955     9F A6 92 6E 
1b959     6B 82 85 6D 
1b95d     64 6F 62 59 | 	byte	$75, $62, $6f, $82, $9f, $a6, $92, $6e, $6b, $82, $85, $6d, $64, $6f, $62, $59
1b961     5D 68 52 3B 
1b965     35 2F 3B 46 
1b969     3E 39 33 4B 
1b96d     61 7C 82 71 | 	byte	$5d, $68, $52, $3b, $35, $2f, $3b, $46, $3e, $39, $33, $4b, $61, $7c, $82, $71
1b971     5F 6C 6C 71 
1b975     73 78 90 A1 
1b979     A7 96 7C 61 
1b97d     5E 81 8F A6 | 	byte	$5f, $6c, $6c, $71, $73, $78, $90, $a1, $a7, $96, $7c, $61, $5e, $81, $8f, $a6
1b981     B3 98 7C 67 
1b985     5D 52 59 56 
1b989     56 4E 4E 61 
1b98d     71 70 80 9F | 	byte	$b3, $98, $7c, $67, $5d, $52, $59, $56, $56, $4e, $4e, $61, $71, $70, $80, $9f
1b991     AB 9A 98 8F 
1b995     68 5B 5D 57 
1b999     53 50 44 4D 
1b99d     5A 6E 76 8A | 	byte	$ab, $9a, $98, $8f, $68, $5b, $5d, $57, $53, $50, $44, $4d, $5a, $6e, $76, $8a
1b9a1     99 9A A0 AA 
1b9a5     A4 A8 A5 A9 
1b9a9     B8 AA 93 8E 
1b9ad     98 96 84 72 | 	byte	$99, $9a, $a0, $aa, $a4, $a8, $a5, $a9, $b8, $aa, $93, $8e, $98, $96, $84, $72
1b9b1     60 5E 6A 63 
1b9b5     5F 6C 8D 9E 
1b9b9     A1 8B 6C 7D 
1b9bd     A1 B5 D4 E5 | 	byte	$60, $5e, $6a, $63, $5f, $6c, $8d, $9e, $a1, $8b, $6c, $7d, $a1, $b5, $d4, $e5
1b9c1     E5 D5 AD 8A 
1b9c5     8D 91 82 88 
1b9c9     8E 77 6B 6C 
1b9cd     78 92 91 8C | 	byte	$e5, $d5, $ad, $8a, $8d, $91, $82, $88, $8e, $77, $6b, $6c, $78, $92, $91, $8c
1b9d1     9A C1 C7 B0 
1b9d5     A7 AE BE C7 
1b9d9     B5 8A 7F 8D 
1b9dd     8F 93 94 81 | 	byte	$9a, $c1, $c7, $b0, $a7, $ae, $be, $c7, $b5, $8a, $7f, $8d, $8f, $93, $94, $81
1b9e1     76 78 87 92 
1b9e5     89 7A 71 63 
1b9e9     6A 74 78 5A 
1b9ed     4C 58 6A 66 | 	byte	$76, $78, $87, $92, $89, $7a, $71, $63, $6a, $74, $78, $5a, $4c, $58, $6a, $66
1b9f1     56 5F 61 57 
1b9f5     6A 81 84 68 
1b9f9     42 31 46 53 
1b9fd     61 73 79 68 | 	byte	$56, $5f, $61, $57, $6a, $81, $84, $68, $42, $31, $46, $53, $61, $73, $79, $68
1ba01     50 2C 19 1C 
1ba05     19 16 24 3D 
1ba09     3C 31 28 2E 
1ba0d     44 5F 62 5E | 	byte	$50, $2c, $19, $1c, $19, $16, $24, $3d, $3c, $31, $28, $2e, $44, $5f, $62, $5e
1ba11     5D 55 5C 64 
1ba15     68 65 5C 5E 
1ba19     69 78 77 89 
1ba1d     AA BC BB B8 | 	byte	$5d, $55, $5c, $64, $68, $65, $5c, $5e, $69, $78, $77, $89, $aa, $bc, $bb, $b8
1ba21     C8 C6 AE AD 
1ba25     CD D6 D9 CE 
1ba29     B0 9D 9D A2 
1ba2d     9D 91 91 89 | 	byte	$c8, $c6, $ae, $ad, $cd, $d6, $d9, $ce, $b0, $9d, $9d, $a2, $9d, $91, $91, $89
1ba31     93 9B 9E 94 
1ba35     AC BB CE BE 
1ba39     C8 E4 E5 D7 
1ba3d     E3 E5 D3 B5 | 	byte	$93, $9b, $9e, $94, $ac, $bb, $ce, $be, $c8, $e4, $e5, $d7, $e3, $e5, $d3, $b5
1ba41     A7 8F 87 89 
1ba45     88 7D 78 68 
1ba49     56 54 6F 82 
1ba4d     73 8A A6 A5 | 	byte	$a7, $8f, $87, $89, $88, $7d, $78, $68, $56, $54, $6f, $82, $73, $8a, $a6, $a5
1ba51     86 83 84 84 
1ba55     73 76 82 74 
1ba59     71 6D 55 45 
1ba5d     4A 4A 34 39 | 	byte	$86, $83, $84, $84, $73, $76, $82, $74, $71, $6d, $55, $45, $4a, $4a, $34, $39
1ba61     4A 3F 49 5D 
1ba65     62 50 4B 4C 
1ba69     5A 61 76 89 
1ba6d     88 70 67 77 | 	byte	$4a, $3f, $49, $5d, $62, $50, $4b, $4c, $5a, $61, $76, $89, $88, $70, $67, $77
1ba71     75 85 97 89 
1ba75     66 70 6E 69 
1ba79     87 A3 A2 A4 
1ba7d     A6 97 72 5D | 	byte	$75, $85, $97, $89, $66, $70, $6e, $69, $87, $a3, $a2, $a4, $a6, $97, $72, $5d
1ba81     60 6A 5E 65 
1ba85     66 4C 36 3E 
1ba89     59 6E 91 97 
1ba8d     85 6B 6B 68 | 	byte	$60, $6a, $5e, $65, $66, $4c, $36, $3e, $59, $6e, $91, $97, $85, $6b, $6b, $68
1ba91     4C 46 4B 4F 
1ba95     5C 72 77 61 
1ba99     5D 6A 91 AF 
1ba9d     B9 AF A8 A4 | 	byte	$4c, $46, $4b, $4f, $5c, $72, $77, $61, $5d, $6a, $91, $af, $b9, $af, $a8, $a4
1baa1     A9 AD A9 A6 
1baa5     9C 75 5E 78 
1baa9     81 73 79 8B 
1baad     82 6F 64 62 | 	byte	$a9, $ad, $a9, $a6, $9c, $75, $5e, $78, $81, $73, $79, $8b, $82, $6f, $64, $62
1bab1     54 69 7B 8F 
1bab5     93 8E 8F 8F 
1bab9     A1 BE DD D7 
1babd     C2 B9 9D 83 | 	byte	$54, $69, $7b, $8f, $93, $8e, $8f, $8f, $a1, $be, $dd, $d7, $c2, $b9, $9d, $83
1bac1     8E 95 86 8E 
1bac5     94 8F 88 88 
1bac9     91 89 90 AC 
1bacd     D5 E1 D0 BE | 	byte	$8e, $95, $86, $8e, $94, $8f, $88, $88, $91, $89, $90, $ac, $d5, $e1, $d0, $be
1bad1     B4 B2 AA AB 
1bad5     AA 9D 9C 88 
1bad9     6F 6E 7F 8C 
1badd     96 99 8B 78 | 	byte	$b4, $b2, $aa, $ab, $aa, $9d, $9c, $88, $6f, $6e, $7f, $8c, $96, $99, $8b, $78
1bae1     82 86 79 6B 
1bae5     5C 6B 73 74 
1bae9     6A 4F 41 50 
1baed     68 71 63 68 | 	byte	$82, $86, $79, $6b, $5c, $6b, $73, $74, $6a, $4f, $41, $50, $68, $71, $63, $68
1baf1     55 3D 35 3E 
1baf5     45 68 81 7B 
1baf9     71 73 7A 5C 
1bafd     46 39 41 58 | 	byte	$55, $3d, $35, $3e, $45, $68, $81, $7b, $71, $73, $7a, $5c, $46, $39, $41, $58
1bb01     65 5B 43 12 
1bb05     06 21 42 42 
1bb09     32 2A 2B 39 
1bb0d     44 51 5B 50 | 	byte	$65, $5b, $43, $12, $06, $21, $42, $42, $32, $2a, $2b, $39, $44, $51, $5b, $50
1bb11     3F 45 61 6E 
1bb15     5E 6E 8B B6 
1bb19     CE D0 C3 B0 
1bb1d     A4 B5 D4 E1 | 	byte	$3f, $45, $61, $6e, $5e, $6e, $8b, $b6, $ce, $d0, $c3, $b0, $a4, $b5, $d4, $e1
1bb21     D1 BE A8 97 
1bb25     97 9E AD C0 
1bb29     BA B7 B2 AD 
1bb2d     AB 90 85 9A | 	byte	$d1, $be, $a8, $97, $97, $9e, $ad, $c0, $ba, $b7, $b2, $ad, $ab, $90, $85, $9a
1bb31     B8 C4 D7 E5 
1bb35     E5 D3 D0 D6 
1bb39     CE C2 AF 9B 
1bb3d     93 8D 8C 82 | 	byte	$b8, $c4, $d7, $e5, $e5, $d3, $d0, $d6, $ce, $c2, $af, $9b, $93, $8d, $8c, $82
1bb41     7F 84 69 57 
1bb45     62 80 80 80 
1bb49     80 80 80 8B 
1bb4d     85 94 AE B1 | 	byte	$7f, $84, $69, $57, $62, $80, $80, $80, $80, $80, $80, $8b, $85, $94, $ae, $b1
1bb51     8B 5E 5E 90 
1bb55     A6 A2 A0 B5 
1bb59     CE CA AA 9A 
1bb5d     91 8A 88 8B | 	byte	$8b, $5e, $5e, $90, $a6, $a2, $a0, $b5, $ce, $ca, $aa, $9a, $91, $8a, $88, $8b
1bb61     87 5C 4D 49 
1bb65     44 32 29 29 
1bb69     28 34 53 50 
1bb6d     2F 45 6D 83 | 	byte	$87, $5c, $4d, $49, $44, $32, $29, $29, $28, $34, $53, $50, $2f, $45, $6d, $83
1bb71     77 72 76 82 
1bb75     75 60 6B 95 
1bb79     A9 9E 7D 74 
1bb7d     71 78 75 7A | 	byte	$77, $72, $76, $82, $75, $60, $6b, $95, $a9, $9e, $7d, $74, $71, $78, $75, $7a
1bb81     82 81 82 9F 
1bb85     BB BC 9D 81 
1bb89     8F 99 84 7A 
1bb8d     99 AE AB 88 | 	byte	$82, $81, $82, $9f, $bb, $bc, $9d, $81, $8f, $99, $84, $7a, $99, $ae, $ab, $88
1bb91     6A 79 90 8B 
1bb95     8A 8C 8A 83 
1bb99     72 55 4B 49 
1bb9d     39 38 48 5F | 	byte	$6a, $79, $90, $8b, $8a, $8c, $8a, $83, $72, $55, $4b, $49, $39, $38, $48, $5f
1bba1     65 65 73 90 
1bba5     81 65 73 95 
1bba9     AB A7 8A 92 
1bbad     B6 CF CA B6 | 	byte	$65, $65, $73, $90, $81, $65, $73, $95, $ab, $a7, $8a, $92, $b6, $cf, $ca, $b6
1bbb1     AD A3 98 95 
1bbb5     97 A0 A2 81 
1bbb9     68 63 5E 54 
1bbbd     49 5D 76 7F | 	byte	$ad, $a3, $98, $95, $97, $a0, $a2, $81, $68, $63, $5e, $54, $49, $5d, $76, $7f
1bbc1     88 91 99 A1 
1bbc5     A2 9A 96 8C 
1bbc9     6D 5F 70 93 
1bbcd     99 80 54 42 | 	byte	$88, $91, $99, $a1, $a2, $9a, $96, $8c, $6d, $5f, $70, $93, $99, $80, $54, $42
1bbd1     54 60 61 77 
1bbd5     82 76 70 6F 
1bbd9     72 68 5F 68 
1bbdd     78 69 55 53 | 	byte	$54, $60, $61, $77, $82, $76, $70, $6f, $72, $68, $5f, $68, $78, $69, $55, $53
1bbe1     68 7D 7D 79 
1bbe5     6F 6D 67 62 
1bbe9     66 69 6E 7D 
1bbed     85 8C 99 A3 | 	byte	$68, $7d, $7d, $79, $6f, $6d, $67, $62, $66, $69, $6e, $7d, $85, $8c, $99, $a3
1bbf1     A4 9A 98 9F 
1bbf5     A3 C7 D2 BC 
1bbf9     A7 9D 9B 99 
1bbfd     84 7B 82 9C | 	byte	$a4, $9a, $98, $9f, $a3, $c7, $d2, $bc, $a7, $9d, $9b, $99, $84, $7b, $82, $9c
1bc01     B4 B4 A3 8D 
1bc05     84 73 6F 6E 
1bc09     7C 82 81 73 
1bc0d     57 43 35 43 | 	byte	$b4, $b4, $a3, $8d, $84, $73, $6f, $6e, $7c, $82, $81, $73, $57, $43, $35, $43
1bc11     60 76 89 83 
1bc15     83 91 83 66 
1bc19     67 63 5D 3B 
1bc1d     2F 32 5E 73 | 	byte	$60, $76, $89, $83, $83, $91, $83, $66, $67, $63, $5d, $3b, $2f, $32, $5e, $73
1bc21     70 6C 6D 83 
1bc25     90 96 9E A0 
1bc29     9D 8E AF CE 
1bc2d     C7 B2 B3 C3 | 	byte	$70, $6c, $6d, $83, $90, $96, $9e, $a0, $9d, $8e, $af, $ce, $c7, $b2, $b3, $c3
1bc31     C6 8F 7B 80 
1bc35     8C 8E 80 7A 
1bc39     71 51 2B 26 
1bc3d     3C 5F 78 7F | 	byte	$c6, $8f, $7b, $80, $8c, $8e, $80, $7a, $71, $51, $2b, $26, $3c, $5f, $78, $7f
1bc41     7C 71 78 88 
1bc45     93 95 92 96 
1bc49     9E BA CB C5 
1bc4d     A3 94 8C 82 | 	byte	$7c, $71, $78, $88, $93, $95, $92, $96, $9e, $ba, $cb, $c5, $a3, $94, $8c, $82
1bc51     78 84 8A 87 
1bc55     89 7C 70 79 
1bc59     90 A5 98 73 
1bc5d     6D 77 77 88 | 	byte	$78, $84, $8a, $87, $89, $7c, $70, $79, $90, $a5, $98, $73, $6d, $77, $77, $88
1bc61     89 77 61 6D 
1bc65     70 74 67 6B 
1bc69     69 66 69 64 
1bc6d     5E 58 48 38 | 	byte	$89, $77, $61, $6d, $70, $74, $67, $6b, $69, $66, $69, $64, $5e, $58, $48, $38
1bc71     35 47 6B 85 
1bc75     7B 6C 70 69 
1bc79     4E 4B 69 7C 
1bc7d     7E 92 AC C1 | 	byte	$35, $47, $6b, $85, $7b, $6c, $70, $69, $4e, $4b, $69, $7c, $7e, $92, $ac, $c1
1bc81     A8 98 A2 A5 
1bc85     92 73 6C 76 
1bc89     70 71 78 76 
1bc8d     78 8A 9E A5 | 	byte	$a8, $98, $a2, $a5, $92, $73, $6c, $76, $70, $71, $78, $76, $78, $8a, $9e, $a5
1bc91     AD A1 81 7B 
1bc95     8A A2 AD AF 
1bc99     AC 95 6E 64 
1bc9d     86 9E 9C 96 | 	byte	$ad, $a1, $81, $7b, $8a, $a2, $ad, $af, $ac, $95, $6e, $64, $86, $9e, $9c, $96
1bca1     79 65 4A 44 
1bca5     4F 5C 6F 7E 
1bca9     89 90 93 89 
1bcad     86 90 AC AA | 	byte	$79, $65, $4a, $44, $4f, $5c, $6f, $7e, $89, $90, $93, $89, $86, $90, $ac, $aa
1bcb1     9C 8D 8D 97 
1bcb5     9E 9A 86 74 
1bcb9     50 3B 4A 63 
1bcbd     6F 67 64 61 | 	byte	$9c, $8d, $8d, $97, $9e, $9a, $86, $74, $50, $3b, $4a, $63, $6f, $67, $64, $61
1bcc1     72 84 85 87 
1bcc5     92 99 99 97 
1bcc9     AB BD BB A4 
1bccd     99 9D AA AA | 	byte	$72, $84, $85, $87, $92, $99, $99, $97, $ab, $bd, $bb, $a4, $99, $9d, $aa, $aa
1bcd1     9B 9B 90 79 
1bcd5     65 67 57 46 
1bcd9     27 17 20 3F 
1bcdd     51 51 60 6D | 	byte	$9b, $9b, $90, $79, $65, $67, $57, $46, $27, $17, $20, $3f, $51, $51, $60, $6d
1bce1     5A 45 45 6A 
1bce5     7E 74 52 52 
1bce9     65 84 90 9C 
1bced     AE A2 93 8A | 	byte	$5a, $45, $45, $6a, $7e, $74, $52, $52, $65, $84, $90, $9c, $ae, $a2, $93, $8a
1bcf1     8D A1 A3 9F 
1bcf5     80 82 78 67 
1bcf9     69 7E A4 BA 
1bcfd     BB BC C9 CD | 	byte	$8d, $a1, $a3, $9f, $80, $82, $78, $67, $69, $7e, $a4, $ba, $bb, $bc, $c9, $cd
1bd01     B8 B5 BE BF 
1bd05     9E 90 9D A5 
1bd09     98 78 64 4D 
1bd0d     3F 4B 57 4F | 	byte	$b8, $b5, $be, $bf, $9e, $90, $9d, $a5, $98, $78, $64, $4d, $3f, $4b, $57, $4f
1bd11     57 48 3E 50 
1bd15     77 87 71 4D 
1bd19     38 39 49 65 
1bd1d     87 90 82 6B | 	byte	$57, $48, $3e, $50, $77, $87, $71, $4d, $38, $39, $49, $65, $87, $90, $82, $6b
1bd21     6B 7B 84 89 
1bd25     8D 82 7F 7A 
1bd29     7C 7A 9D AD 
1bd2d     A8 9E 99 A3 | 	byte	$6b, $7b, $84, $89, $8d, $82, $7f, $7a, $7c, $7a, $9d, $ad, $a8, $9e, $99, $a3
1bd31     C2 CA CA CB 
1bd35     C2 98 86 78 
1bd39     74 7C 83 92 
1bd3d     92 8C 8F 87 | 	byte	$c2, $ca, $ca, $cb, $c2, $98, $86, $78, $74, $7c, $83, $92, $92, $8c, $8f, $87
1bd41     78 72 69 68 
1bd45     81 9C B1 99 
1bd49     7C 75 8A 95 
1bd4d     8B 81 7E 6F | 	byte	$78, $72, $69, $68, $81, $9c, $b1, $99, $7c, $75, $8a, $95, $8b, $81, $7e, $6f
1bd51     6A 6F 6E 7E 
1bd55     7B 7A 68 45 
1bd59     4B 67 6E 6E 
1bd5d     5F 51 57 63 | 	byte	$6a, $6f, $6e, $7e, $7b, $7a, $68, $45, $4b, $67, $6e, $6e, $5f, $51, $57, $63
1bd61     71 6B 57 55 
1bd65     60 6F 76 89 
1bd69     AA BB BB B4 
1bd6d     97 7D 7D 92 | 	byte	$71, $6b, $57, $55, $60, $6f, $76, $89, $aa, $bb, $bb, $b4, $97, $7d, $7d, $92
1bd71     A5 9A 8B 73 
1bd75     55 3E 30 2F 
1bd79     47 6C 86 7C 
1bd7d     66 6D 78 8F | 	byte	$a5, $9a, $8b, $73, $55, $3e, $30, $2f, $47, $6c, $86, $7c, $66, $6d, $78, $8f
1bd81     A0 8B 79 75 
1bd85     83 8C 94 8A 
1bd89     81 7D 80 82 
1bd8d     7B 76 7E 7C | 	byte	$a0, $8b, $79, $75, $83, $8c, $94, $8a, $81, $7d, $80, $82, $7b, $76, $7e, $7c
1bd91     77 76 7E 8F 
1bd95     95 78 55 59 
1bd99     85 AD D1 C8 
1bd9d     BF BB B0 AF | 	byte	$77, $76, $7e, $8f, $95, $78, $55, $59, $85, $ad, $d1, $c8, $bf, $bb, $b0, $af
1bda1     B2 A4 91 8C 
1bda5     87 91 9E 9E 
1bda9     A4 99 94 90 
1bdad     85 82 8B 95 | 	byte	$b2, $a4, $91, $8c, $87, $91, $9e, $9e, $a4, $99, $94, $90, $85, $82, $8b, $95
1bdb1     88 72 6E 60 
1bdb5     6A 5E 4A 53 
1bdb9     52 57 5D 67 
1bdbd     74 7F 81 80 | 	byte	$88, $72, $6e, $60, $6a, $5e, $4a, $53, $52, $57, $5d, $67, $74, $7f, $81, $80
1bdc1     79 76 71 82 
1bdc5     8F 95 90 7A 
1bdc9     79 89 8A 80 
1bdcd     82 83 7F 91 | 	byte	$79, $76, $71, $82, $8f, $95, $90, $7a, $79, $89, $8a, $80, $82, $83, $7f, $91
1bdd1     9B AD BD A4 
1bdd5     87 6B 5C 72 
1bdd9     7B 7D 87 82 
1bddd     73 5C 5E 56 | 	byte	$9b, $ad, $bd, $a4, $87, $6b, $5c, $72, $7b, $7d, $87, $82, $73, $5c, $5e, $56
1bde1     5F 53 47 4A 
1bde5     54 3D 46 66 
1bde9     7D 97 A4 96 
1bded     9E 9B 8F 88 | 	byte	$5f, $53, $47, $4a, $54, $3d, $46, $66, $7d, $97, $a4, $96, $9e, $9b, $8f, $88
1bdf1     7A 6D 70 69 
1bdf5     5A 53 63 62 
1bdf9     76 8F A3 9D 
1bdfd     89 92 A5 9A | 	byte	$7a, $6d, $70, $69, $5a, $53, $63, $62, $76, $8f, $a3, $9d, $89, $92, $a5, $9a
1be01     98 9E 9D A1 
1be05     C6 CB BB B7 
1be09     B3 AB 97 79 
1be0d     73 78 7A 87 | 	byte	$98, $9e, $9d, $a1, $c6, $cb, $bb, $b7, $b3, $ab, $97, $79, $73, $78, $7a, $87
1be11     8A 95 69 42 
1be15     33 3D 47 4D 
1be19     69 71 51 45 
1be1d     4F 52 68 7A | 	byte	$8a, $95, $69, $42, $33, $3d, $47, $4d, $69, $71, $51, $45, $4f, $52, $68, $7a
1be21     79 72 6B 69 
1be25     70 6B 6C 86 
1be29     9D A4 A4 9E 
1be2d     8B 86 90 9E | 	byte	$79, $72, $6b, $69, $70, $6b, $6c, $86, $9d, $a4, $a4, $9e, $8b, $86, $90, $9e
1be31     A2 92 77 5E 
1be35     54 67 8C 9D 
1be39     97 91 9B AC 
1be3d     C2 CD CD C9 | 	byte	$a2, $92, $77, $5e, $54, $67, $8c, $9d, $97, $91, $9b, $ac, $c2, $cd, $cd, $c9
1be41     B1 A1 AD C2 
1be45     BB 9E 89 82 
1be49     83 7A 68 60 
1be4d     65 60 55 5E | 	byte	$b1, $a1, $ad, $c2, $bb, $9e, $89, $82, $83, $7a, $68, $60, $65, $60, $55, $5e
1be51     6E 5F 3C 34 
1be55     51 61 5C 66 
1be59     66 67 49 3B 
1be5d     3F 54 5F 50 | 	byte	$6e, $5f, $3c, $34, $51, $61, $5c, $66, $66, $67, $49, $3b, $3f, $54, $5f, $50
1be61     40 2D 2D 46 
1be65     6C 85 9B 9C 
1be69     7E 76 6F 7E 
1be6d     8D 94 99 A3 | 	byte	$40, $2d, $2d, $46, $6c, $85, $9b, $9c, $7e, $76, $6f, $7e, $8d, $94, $99, $a3
1be71     96 74 5C 5F 
1be75     79 85 91 9A 
1be79     A5 9A 8E 8E 
1be7d     91 A3 AB 9B | 	byte	$96, $74, $5c, $5f, $79, $85, $91, $9a, $a5, $9a, $8e, $8e, $91, $a3, $ab, $9b
1be81     8C 9B 93 84 
1be85     7B 7A 79 6F 
1be89     6C 84 98 8E 
1be8d     64 5E 77 84 | 	byte	$8c, $9b, $93, $84, $7b, $7a, $79, $6f, $6c, $84, $98, $8e, $64, $5e, $77, $84
1be91     6A 58 5B 63 
1be95     5B 67 78 81 
1be99     86 83 82 96 
1be9d     9E 99 8C 7D | 	byte	$6a, $58, $5b, $63, $5b, $67, $78, $81, $86, $83, $82, $96, $9e, $99, $8c, $7d
1bea1     81 87 8E 9D 
1bea5     B1 C0 C6 BF 
1bea9     C8 CB C7 CB 
1bead     C0 B3 A4 84 | 	byte	$81, $87, $8e, $9d, $b1, $c0, $c6, $bf, $c8, $cb, $c7, $cb, $c0, $b3, $a4, $84
1beb1     6C 61 65 6C 
1beb5     55 5E 6A 72 
1beb9     7F 8F 8E 78 
1bebd     63 59 5D 7A | 	byte	$6c, $61, $65, $6c, $55, $5e, $6a, $72, $7f, $8f, $8e, $78, $63, $59, $5d, $7a
1bec1     8F 7F 71 68 
1bec5     5B 4D 48 54 
1bec9     55 54 60 67 
1becd     6D 63 6F 76 | 	byte	$8f, $7f, $71, $68, $5b, $4d, $48, $54, $55, $54, $60, $67, $6d, $63, $6f, $76
1bed1     87 88 7C 6A 
1bed5     6E 77 76 71 
1bed9     77 86 8A 86 
1bedd     8C 86 81 7E | 	byte	$87, $88, $7c, $6a, $6e, $77, $76, $71, $77, $86, $8a, $86, $8c, $86, $81, $7e
1bee1     88 8E 8D 8F 
1bee5     8B 90 91 93 
1bee9     A1 A5 A4 A2 
1beed     8B 6E 73 76 | 	byte	$88, $8e, $8d, $8f, $8b, $90, $91, $93, $a1, $a5, $a4, $a2, $8b, $6e, $73, $76
1bef1     6A 50 46 47 
1bef5     67 6A 75 70 
1bef9     78 76 7F 99 
1befd     9D 8E 89 88 | 	byte	$6a, $50, $46, $47, $67, $6a, $75, $70, $78, $76, $7f, $99, $9d, $8e, $89, $88
1bf01     8F 91 83 82 
1bf05     8E A7 B6 A5 
1bf09     93 8C 7B 6E 
1bf0d     73 96 A6 89 | 	byte	$8f, $91, $83, $82, $8e, $a7, $b6, $a5, $93, $8c, $7b, $6e, $73, $96, $a6, $89
1bf11     5B 41 45 5F 
1bf15     85 A9 A6 94 
1bf19     7F 5C 5B 68 
1bf1d     5C 70 82 91 | 	byte	$5b, $41, $45, $5f, $85, $a9, $a6, $94, $7f, $5c, $5b, $68, $5c, $70, $82, $91
1bf21     92 87 81 9A 
1bf25     B0 B9 BC BB 
1bf29     A7 91 68 5A 
1bf2d     5F 66 6D 63 | 	byte	$92, $87, $81, $9a, $b0, $b9, $bc, $bb, $a7, $91, $68, $5a, $5f, $66, $6d, $63
1bf31     70 72 69 58 
1bf35     55 69 80 94 
1bf39     92 8B 9A B5 
1bf3d     B6 C1 C6 B0 | 	byte	$70, $72, $69, $58, $55, $69, $80, $94, $92, $8b, $9a, $b5, $b6, $c1, $c6, $b0
1bf41     96 7F 82 91 
1bf45     98 92 91 A2 
1bf49     96 84 8D 97 
1bf4d     9C 91 6D 4F | 	byte	$96, $7f, $82, $91, $98, $92, $91, $a2, $96, $84, $8d, $97, $9c, $91, $6d, $4f
1bf51     48 40 4F 64 
1bf55     7B 87 84 68 
1bf59     5C 63 6A 5E 
1bf5d     4F 3C 32 30 | 	byte	$48, $40, $4f, $64, $7b, $87, $84, $68, $5c, $63, $6a, $5e, $4f, $3c, $32, $30
1bf61     2D 36 48 4B 
1bf65     52 71 7E 8A 
1bf69     78 5C 48 42 
1bf6d     4C 46 45 52 | 	byte	$2d, $36, $48, $4b, $52, $71, $7e, $8a, $78, $5c, $48, $42, $4c, $46, $45, $52
1bf71     6C 6F 7E 9B 
1bf75     A3 9E A3 A4 
1bf79     AC C4 D7 C8 
1bf7d     B1 A6 9B AA | 	byte	$6c, $6f, $7e, $9b, $a3, $9e, $a3, $a4, $ac, $c4, $d7, $c8, $b1, $a6, $9b, $aa
1bf81     B5 BB B7 A9 
1bf85     A2 B8 B5 8B 
1bf89     7D 7B 98 A2 
1bf8d     9A 88 68 5C | 	byte	$b5, $bb, $b7, $a9, $a2, $b8, $b5, $8b, $7d, $7b, $98, $a2, $9a, $88, $68, $5c
1bf91     66 6E 69 5D 
1bf95     4F 50 41 4F 
1bf99     71 83 70 6B 
1bf9d     6D 71 70 6F | 	byte	$66, $6e, $69, $5d, $4f, $50, $41, $4f, $71, $83, $70, $6b, $6d, $71, $70, $6f
1bfa1     7A 89 8C 8E 
1bfa5     AB CA C7 CB 
1bfa9     C2 B1 9E 90 
1bfad     8C 88 75 7C | 	byte	$7a, $89, $8c, $8e, $ab, $ca, $c7, $cb, $c2, $b1, $9e, $90, $8c, $88, $75, $7c
1bfb1     87 82 7A 7E 
1bfb5     9B A5 AC B4 
1bfb9     9E 7D 80 8B 
1bfbd     7B 69 71 7A | 	byte	$87, $82, $7a, $7e, $9b, $a5, $ac, $b4, $9e, $7d, $80, $8b, $7b, $69, $71, $7a
1bfc1     6F 66 74 78 
1bfc5     7C 89 8C 7C 
1bfc9     57 36 35 46 
1bfcd     50 44 44 51 | 	byte	$6f, $66, $74, $78, $7c, $89, $8c, $7c, $57, $36, $35, $46, $50, $44, $44, $51
1bfd1     55 52 4B 49 
1bfd5     4D 54 57 72 
1bfd9     71 7C 85 7D 
1bfdd     85 86 8C 94 | 	byte	$55, $52, $4b, $49, $4d, $54, $57, $72, $71, $7c, $85, $7d, $85, $86, $8c, $94
1bfe1     A2 A5 8E 8F 
1bfe5     9D B0 A9 8F 
1bfe9     73 62 82 A3 
1bfed     9F 90 73 6A | 	byte	$a2, $a5, $8e, $8f, $9d, $b0, $a9, $8f, $73, $62, $82, $a3, $9f, $90, $73, $6a
1bff1     85 78 72 8A 
1bff5     AC BC C1 B2 
1bff9     93 8A 8F 9D 
1bffd     A1 8F 86 78 | 	byte	$85, $78, $72, $8a, $ac, $bc, $c1, $b2, $93, $8a, $8f, $9d, $a1, $8f, $86, $78
1c001     63 65 71 76 
1c005     7F 88 6A 43 
1c009     3C 56 7C 6C 
1c00d     50 42 59 6E | 	byte	$63, $65, $71, $76, $7f, $88, $6a, $43, $3c, $56, $7c, $6c, $50, $42, $59, $6e
1c011     6F 70 73 63 
1c015     6D 78 88 86 
1c019     77 6B 71 73 
1c01d     76 96 B0 C5 | 	byte	$6f, $70, $73, $63, $6d, $78, $88, $86, $77, $6b, $71, $73, $76, $96, $b0, $c5
1c021     CA D1 C9 C1 
1c025     C8 C4 A3 79 
1c029     7A A6 AC 9F 
1c02d     9A 89 82 8C | 	byte	$ca, $d1, $c9, $c1, $c8, $c4, $a3, $79, $7a, $a6, $ac, $9f, $9a, $89, $82, $8c
1c031     92 93 9C 9B 
1c035     92 71 58 4F 
1c039     5E 65 6B 67 
1c03d     59 57 70 87 | 	byte	$92, $93, $9c, $9b, $92, $71, $58, $4f, $5e, $65, $6b, $67, $59, $57, $70, $87
1c041     92 93 93 A2 
1c045     A3 84 68 67 
1c049     80 8C 7D 6C 
1c04d     63 60 53 49 | 	byte	$92, $93, $93, $a2, $a3, $84, $68, $67, $80, $8c, $7d, $6c, $63, $60, $53, $49
1c051     53 53 59 71 
1c055     88 98 92 75 
1c059     5A 49 56 6C 
1c05d     75 7E 8E 8C | 	byte	$53, $53, $59, $71, $88, $98, $92, $75, $5a, $49, $56, $6c, $75, $7e, $8e, $8c
1c061     8E 8A 84 89 
1c065     8D 79 57 4B 
1c069     48 2F 23 21 
1c06d     2D 3B 40 54 | 	byte	$8e, $8a, $84, $89, $8d, $79, $57, $4b, $48, $2f, $23, $21, $2d, $3b, $40, $54
1c071     6B 77 8E B1 
1c075     B1 B5 B3 9E 
1c079     94 A9 B6 C4 
1c07d     B9 BA C2 C2 | 	byte	$6b, $77, $8e, $b1, $b1, $b5, $b3, $9e, $94, $a9, $b6, $c4, $b9, $ba, $c2, $c2
1c081     B6 BE B7 8C 
1c085     7B 7A 87 90 
1c089     8B 86 97 98 
1c08d     8F 7D 68 53 | 	byte	$b6, $be, $b7, $8c, $7b, $7a, $87, $90, $8b, $86, $97, $98, $8f, $7d, $68, $53
1c091     57 6A 86 A1 
1c095     BD BF A1 71 
1c099     66 7A 7F 82 
1c09d     8D 8D 71 69 | 	byte	$57, $6a, $86, $a1, $bd, $bf, $a1, $71, $66, $7a, $7f, $82, $8d, $8d, $71, $69
1c0a1     72 72 67 67 
1c0a5     5E 64 71 78 
1c0a9     73 69 71 72 
1c0ad     7E 8A 9F B0 | 	byte	$72, $72, $67, $67, $5e, $64, $71, $78, $73, $69, $71, $72, $7e, $8a, $9f, $b0
1c0b1     AF A4 9D 9D 
1c0b5     A0 8B 75 7E 
1c0b9     77 5F 56 6C 
1c0bd     6C 6F 7F 94 | 	byte	$af, $a4, $9d, $9d, $a0, $8b, $75, $7e, $77, $5f, $56, $6c, $6c, $6f, $7f, $94
1c0c1     AA AE 99 6D 
1c0c5     4C 57 7C 98 
1c0c9     AD AD 96 71 
1c0cd     52 47 43 48 | 	byte	$aa, $ae, $99, $6d, $4c, $57, $7c, $98, $ad, $ad, $96, $71, $52, $47, $43, $48
1c0d1     58 6F 78 6D 
1c0d5     58 3D 2B 2E 
1c0d9     48 58 5A 68 
1c0dd     75 7C 7B 7F | 	byte	$58, $6f, $78, $6d, $58, $3d, $2b, $2e, $48, $58, $5a, $68, $75, $7c, $7b, $7f
1c0e1     92 A4 A2 86 
1c0e5     7C 84 7E 7C 
1c0e9     81 87 81 7F 
1c0ed     8C 88 70 72 | 	byte	$92, $a4, $a2, $86, $7c, $84, $7e, $7c, $81, $87, $81, $7f, $8c, $88, $70, $72
1c0f1     8D 9D 9D 96 
1c0f5     87 90 A9 BF 
1c0f9     C0 A3 8B A7 
1c0fd     C3 C1 C1 C2 | 	byte	$8d, $9d, $9d, $96, $87, $90, $a9, $bf, $c0, $a3, $8b, $a7, $c3, $c1, $c1, $c2
1c101     AB 9B 89 7E 
1c105     74 6C 7A 74 
1c109     5A 4E 54 3F 
1c10d     11 00 06 19 | 	byte	$ab, $9b, $89, $7e, $74, $6c, $7a, $74, $5a, $4e, $54, $3f, $11, $00, $06, $19
1c111     30 44 63 71 
1c115     70 6D 7A 8B 
1c119     91 88 A8 C4 
1c11d     DA DD D5 B6 | 	byte	$30, $44, $63, $71, $70, $6d, $7a, $8b, $91, $88, $a8, $c4, $da, $dd, $d5, $b6
1c121     9E 97 93 94 
1c125     9B A6 A0 8A 
1c129     7B 89 AC D0 
1c12d     D6 B5 9F 9A | 	byte	$9e, $97, $93, $94, $9b, $a6, $a0, $8a, $7b, $89, $ac, $d0, $d6, $b5, $9f, $9a
1c131     9B 9F A2 9F 
1c135     AC AF 9E 8B 
1c139     83 7C 81 94 
1c13d     94 87 81 77 | 	byte	$9b, $9f, $a2, $9f, $ac, $af, $9e, $8b, $83, $7c, $81, $94, $94, $87, $81, $77
1c141     5C 27 15 23 
1c145     3A 4B 44 3B 
1c149     31 2F 42 54 
1c14d     55 54 57 5F | 	byte	$5c, $27, $15, $23, $3a, $4b, $44, $3b, $31, $2f, $42, $54, $55, $54, $57, $5f
1c151     6B 80 7E 7D 
1c155     6F 68 6A 72 
1c159     72 81 91 91 
1c15d     89 88 89 8B | 	byte	$6b, $80, $7e, $7d, $6f, $68, $6a, $72, $72, $81, $91, $91, $89, $88, $89, $8b
1c161     7C 77 6E 57 
1c165     47 48 63 7F 
1c169     92 A1 B0 9B 
1c16d     89 81 84 A0 | 	byte	$7c, $77, $6e, $57, $47, $48, $63, $7f, $92, $a1, $b0, $9b, $89, $81, $84, $a0
1c171     BE B2 9A 91 
1c175     99 98 71 5E 
1c179     74 8C 9E 9F 
1c17d     99 89 93 97 | 	byte	$be, $b2, $9a, $91, $99, $98, $71, $5e, $74, $8c, $9e, $9f, $99, $89, $93, $97
1c181     99 AD B7 A2 
1c185     87 88 9E A7 
1c189     9A 7C 6E 57 
1c18d     42 52 74 8E | 	byte	$99, $ad, $b7, $a2, $87, $88, $9e, $a7, $9a, $7c, $6e, $57, $42, $52, $74, $8e
1c191     97 88 6F 5F 
1c195     74 71 7C 92 
1c199     9D 9B 9B A5 
1c19d     B5 A9 9A 9D | 	byte	$97, $88, $6f, $5f, $74, $71, $7c, $92, $9d, $9b, $9b, $a5, $b5, $a9, $9a, $9d
1c1a1     AB AA 9F 82 
1c1a5     68 6C 77 7F 
1c1a9     9A A3 83 4A 
1c1ad     29 3D 65 79 | 	byte	$ab, $aa, $9f, $82, $68, $6c, $77, $7f, $9a, $a3, $83, $4a, $29, $3d, $65, $79
1c1b1     73 63 50 58 
1c1b5     6C 77 89 83 
1c1b9     86 87 91 A5 
1c1bd     AE 9F 8A 81 | 	byte	$73, $63, $50, $58, $6c, $77, $89, $83, $86, $87, $91, $a5, $ae, $9f, $8a, $81
1c1c1     77 65 79 8E 
1c1c5     9A 80 64 51 
1c1c9     43 4D 4A 49 
1c1cd     41 4C 6C 7C | 	byte	$77, $65, $79, $8e, $9a, $80, $64, $51, $43, $4d, $4a, $49, $41, $4c, $6c, $7c
1c1d1     8F A1 94 83 
1c1d5     7A 93 A2 A7 
1c1d9     A0 97 9B 8F 
1c1dd     7F 88 87 6B | 	byte	$8f, $a1, $94, $83, $7a, $93, $a2, $a7, $a0, $97, $9b, $8f, $7f, $88, $87, $6b
1c1e1     45 1F 21 46 
1c1e5     5C 55 51 4B 
1c1e9     3E 4B 60 7C 
1c1ed     8B 90 91 9E | 	byte	$45, $1f, $21, $46, $5c, $55, $51, $4b, $3e, $4b, $60, $7c, $8b, $90, $91, $9e
1c1f1     AC AA A5 A2 
1c1f5     A0 A0 90 A4 
1c1f9     BA B4 9F 99 
1c1fd     94 93 9A 95 | 	byte	$ac, $aa, $a5, $a2, $a0, $a0, $90, $a4, $ba, $b4, $9f, $99, $94, $93, $9a, $95
1c201     7F 7A 8D 96 
1c205     98 96 8F 81 
1c209     64 47 3F 4C 
1c20d     57 69 7F 7B | 	byte	$7f, $7a, $8d, $96, $98, $96, $8f, $81, $64, $47, $3f, $4c, $57, $69, $7f, $7b
1c211     68 59 6E 88 
1c215     8A 72 5F 69 
1c219     80 9B A2 81 
1c21d     6F 67 75 8C | 	byte	$68, $59, $6e, $88, $8a, $72, $5f, $69, $80, $9b, $a2, $81, $6f, $67, $75, $8c
1c221     99 A9 AF AB 
1c225     A9 C2 D6 C4 
1c229     93 7D 83 7C 
1c22d     92 B0 B3 94 | 	byte	$99, $a9, $af, $ab, $a9, $c2, $d6, $c4, $93, $7d, $83, $7c, $92, $b0, $b3, $94
1c231     7C 80 8F 99 
1c235     95 92 8D 93 
1c239     9F 99 80 76 
1c23d     85 7A 74 73 | 	byte	$7c, $80, $8f, $99, $95, $92, $8d, $93, $9f, $99, $80, $76, $85, $7a, $74, $73
1c241     61 6D 6F 65 
1c245     51 49 41 33 
1c249     2C 17 00 02 
1c24d     0C 28 46 54 | 	byte	$61, $6d, $6f, $65, $51, $49, $41, $33, $2c, $17, $00, $02, $0c, $28, $46, $54
1c251     4F 52 4D 55 
1c255     68 84 AD C2 
1c259     B5 A6 91 88 
1c25d     91 89 6B 58 | 	byte	$4f, $52, $4d, $55, $68, $84, $ad, $c2, $b5, $a6, $91, $88, $91, $89, $6b, $58
1c261     4E 5C 78 88 
1c265     7C 74 79 75 
1c269     87 85 88 90 
1c26d     9D BA C4 C2 | 	byte	$4e, $5c, $78, $88, $7c, $74, $79, $75, $87, $85, $88, $90, $9d, $ba, $c4, $c2
1c271     AF B4 B2 B2 
1c275     BF CE D4 D1 
1c279     D9 C9 A8 94 
1c27d     99 90 74 60 | 	byte	$af, $b4, $b2, $b2, $bf, $ce, $d4, $d1, $d9, $c9, $a8, $94, $99, $90, $74, $60
1c281     6A 6B 65 67 
1c285     65 5F 4E 3A 
1c289     30 39 53 73 
1c28d     83 7B 62 5B | 	byte	$6a, $6b, $65, $67, $65, $5f, $4e, $3a, $30, $39, $53, $73, $83, $7b, $62, $5b
1c291     6F 90 99 88 
1c295     94 96 98 A8 
1c299     B5 9D 82 77 
1c29d     73 89 88 79 | 	byte	$6f, $90, $99, $88, $94, $96, $98, $a8, $b5, $9d, $82, $77, $73, $89, $88, $79
1c2a1     7C 85 94 AC 
1c2a5     B3 A8 A6 85 
1c2a9     6A 8E AC C2 
1c2ad     BB 9A 8B 93 | 	byte	$7c, $85, $94, $ac, $b3, $a8, $a6, $85, $6a, $8e, $ac, $c2, $bb, $9a, $8b, $93
1c2b1     8D 85 76 6E 
1c2b5     60 57 50 56 
1c2b9     61 65 67 74 
1c2bd     6C 59 63 66 | 	byte	$8d, $85, $76, $6e, $60, $57, $50, $56, $61, $65, $67, $74, $6c, $59, $63, $66
1c2c1     6A 75 7F 7A 
1c2c5     66 58 51 47 
1c2c9     3F 51 76 91 
1c2cd     8E 84 75 78 | 	byte	$6a, $75, $7f, $7a, $66, $58, $51, $47, $3f, $51, $76, $91, $8e, $84, $75, $78
1c2d1     6F 59 71 9D 
1c2d5     B0 AC AE A6 
1c2d9     A3 9C A3 AD 
1c2dd     A2 85 6E 6B | 	byte	$6f, $59, $71, $9d, $b0, $ac, $ae, $a6, $a3, $9c, $a3, $ad, $a2, $85, $6e, $6b
1c2e1     80 79 65 58 
1c2e5     5F 6C 5B 4C 
1c2e9     49 5E 62 5D 
1c2ed     63 63 6A 6C | 	byte	$80, $79, $65, $58, $5f, $6c, $5b, $4c, $49, $5e, $62, $5d, $63, $63, $6a, $6c
1c2f1     6E 6D 75 7F 
1c2f5     8A 9C B4 B7 
1c2f9     B8 B1 A8 A2 
1c2fd     98 9E AB 9F | 	byte	$6e, $6d, $75, $7f, $8a, $9c, $b4, $b7, $b8, $b1, $a8, $a2, $98, $9e, $ab, $9f
1c301     9A A1 96 76 
1c305     5E 4F 37 34 
1c309     49 65 70 74 
1c30d     7F 9C B3 B3 | 	byte	$9a, $a1, $96, $76, $5e, $4f, $37, $34, $49, $65, $70, $74, $7f, $9c, $b3, $b3
1c311     AA C2 CD B6 
1c315     B1 C3 BA AA 
1c319     9F A3 9E 93 
1c31d     87 6F 7D 7D | 	byte	$aa, $c2, $cd, $b6, $b1, $c3, $ba, $aa, $9f, $a3, $9e, $93, $87, $6f, $7d, $7d
1c321     7A 68 5A 63 
1c325     60 53 63 71 
1c329     86 8D 96 A8 
1c32d     B4 BD B4 AF | 	byte	$7a, $68, $5a, $63, $60, $53, $63, $71, $86, $8d, $96, $a8, $b4, $bd, $b4, $af
1c331     A6 8F 7D 7A 
1c335     82 77 70 73 
1c339     7C 56 30 39 
1c33d     4D 49 45 54 | 	byte	$a6, $8f, $7d, $7a, $82, $77, $70, $73, $7c, $56, $30, $39, $4d, $49, $45, $54
1c341     60 62 63 4B 
1c345     40 3C 50 4E 
1c349     4B 5A 80 7A 
1c34d     71 7D 77 69 | 	byte	$60, $62, $63, $4b, $40, $3c, $50, $4e, $4b, $5a, $80, $7a, $71, $7d, $77, $69
1c351     82 92 98 99 
1c355     84 61 54 65 
1c359     76 74 61 50 
1c35d     49 41 44 6A | 	byte	$82, $92, $98, $99, $84, $61, $54, $65, $76, $74, $61, $50, $49, $41, $44, $6a
1c361     8C AB AD 92 
1c365     7D 85 87 86 
1c369     95 AC B1 A7 
1c36d     99 AA A3 91 | 	byte	$8c, $ab, $ad, $92, $7d, $85, $87, $86, $95, $ac, $b1, $a7, $99, $aa, $a3, $91
1c371     81 7A A5 C4 
1c375     C6 A7 AA BF 
1c379     B1 B1 C9 E4 
1c37d     CA 90 81 AA | 	byte	$81, $7a, $a5, $c4, $c6, $a7, $aa, $bf, $b1, $b1, $c9, $e4, $ca, $90, $81, $aa
1c381     B1 9B 80 74 
1c385     63 59 45 3B 
1c389     38 41 3D 29 
1c38d     2B 35 53 5E | 	byte	$b1, $9b, $80, $74, $63, $59, $45, $3b, $38, $41, $3d, $29, $2b, $35, $53, $5e
1c391     70 8E 92 83 
1c395     87 A8 C6 BD 
1c399     9E 8F 7A 69 
1c39d     62 70 8C 8E | 	byte	$70, $8e, $92, $83, $87, $a8, $c6, $bd, $9e, $8f, $7a, $69, $62, $70, $8c, $8e
1c3a1     90 8D 91 7A 
1c3a5     71 6B 63 72 
1c3a9     8E AC A5 A2 
1c3ad     B6 B5 A5 9A | 	byte	$90, $8d, $91, $7a, $71, $6b, $63, $72, $8e, $ac, $a5, $a2, $b6, $b5, $a5, $9a
1c3b1     A9 AC 8D 89 
1c3b5     9E B3 AC 85 
1c3b9     79 6F 75 6D 
1c3bd     5A 4D 43 41 | 	byte	$a9, $ac, $8d, $89, $9e, $b3, $ac, $85, $79, $6f, $75, $6d, $5a, $4d, $43, $41
1c3c1     34 2D 20 1F 
1c3c5     27 25 44 63 
1c3c9     68 59 64 7A 
1c3cd     8D 92 A1 9F | 	byte	$34, $2d, $20, $1f, $27, $25, $44, $63, $68, $59, $64, $7a, $8d, $92, $a1, $9f
1c3d1     9F 8E 8C 87 
1c3d5     A2 B3 B5 B6 
1c3d9     A0 68 3D 20 
1c3dd     21 35 4A 66 | 	byte	$9f, $8e, $8c, $87, $a2, $b3, $b5, $b6, $a0, $68, $3d, $20, $21, $35, $4a, $66
1c3e1     6F 6D 63 64 
1c3e5     7B AF C0 A8 
1c3e9     AA AE A5 9A 
1c3ed     89 84 69 6F | 	byte	$6f, $6d, $63, $64, $7b, $af, $c0, $a8, $aa, $ae, $a5, $9a, $89, $84, $69, $6f
1c3f1     88 9B 9A 8D 
1c3f5     88 7E 84 89 
1c3f9     82 79 75 7B 
1c3fd     7A 7C 81 9C | 	byte	$88, $9b, $9a, $8d, $88, $7e, $84, $89, $82, $79, $75, $7b, $7a, $7c, $81, $9c
1c401     A4 9C 8B 7E 
1c405     5D 58 61 71 
1c409     74 8C 9A AA 
1c40d     B4 A7 9F 94 | 	byte	$a4, $9c, $8b, $7e, $5d, $58, $61, $71, $74, $8c, $9a, $aa, $b4, $a7, $9f, $94
1c411     83 7D 8A A0 
1c415     B7 CA C9 B5 
1c419     A5 A3 BC C2 
1c41d     AE A1 A0 A3 | 	byte	$83, $7d, $8a, $a0, $b7, $ca, $c9, $b5, $a5, $a3, $bc, $c2, $ae, $a1, $a0, $a3
1c421     A8 9F 7F 6A 
1c425     71 83 A7 AE 
1c429     91 85 70 75 
1c42d     7A 66 43 34 | 	byte	$a8, $9f, $7f, $6a, $71, $83, $a7, $ae, $91, $85, $70, $75, $7a, $66, $43, $34
1c431     3C 44 43 4F 
1c435     69 71 62 64 
1c439     70 6F 52 54 
1c43d     59 44 3D 4A | 	byte	$3c, $44, $43, $4f, $69, $71, $62, $64, $70, $6f, $52, $54, $59, $44, $3d, $4a
1c441     51 4C 31 1C 
1c445     16 23 33 49 
1c449     56 67 8B 9D 
1c44d     92 97 B1 CA | 	byte	$51, $4c, $31, $1c, $16, $23, $33, $49, $56, $67, $8b, $9d, $92, $97, $b1, $ca
1c451     C7 C1 C3 CC 
1c455     C9 CF C1 92 
1c459     54 3A 47 66 
1c45d     84 8B 7A 5D | 	byte	$c7, $c1, $c3, $cc, $c9, $cf, $c1, $92, $54, $3a, $47, $66, $84, $8b, $7a, $5d
1c461     4E 58 5A 54 
1c465     53 6C 75 78 
1c469     7E A0 B2 A0 
1c46d     A6 AF BA B9 | 	byte	$4e, $58, $5a, $54, $53, $6c, $75, $78, $7e, $a0, $b2, $a0, $a6, $af, $ba, $b9
1c471     A9 AF 9B 92 
1c475     B3 C7 C4 AA 
1c479     87 6D 69 75 
1c47d     7C 7B 88 9D | 	byte	$a9, $af, $9b, $92, $b3, $c7, $c4, $aa, $87, $6d, $69, $75, $7c, $7b, $88, $9d
1c481     9B 7D 5E 60 
1c485     6F 6E 7D 88 
1c489     8A 8E 90 91 
1c48d     91 87 88 85 | 	byte	$9b, $7d, $5e, $60, $6f, $6e, $7d, $88, $8a, $8e, $90, $91, $91, $87, $88, $85
1c491     8C 97 97 97 
1c495     84 65 58 3E 
1c499     44 4E 57 5A 
1c49d     6E 79 8B 99 | 	byte	$8c, $97, $97, $97, $84, $65, $58, $3e, $44, $4e, $57, $5a, $6e, $79, $8b, $99
1c4a1     9A A0 96 98 
1c4a5     AF B0 A1 8F 
1c4a9     97 B1 AC 94 
1c4ad     75 5C 48 43 | 	byte	$9a, $a0, $96, $98, $af, $b0, $a1, $8f, $97, $b1, $ac, $94, $75, $5c, $48, $43
1c4b1     65 6C 7A 88 
1c4b5     8B 88 8B 7B 
1c4b9     77 77 78 87 
1c4bd     8B 87 7B 72 | 	byte	$65, $6c, $7a, $88, $8b, $88, $8b, $7b, $77, $77, $78, $87, $8b, $87, $7b, $72
1c4c1     65 58 4C 44 
1c4c5     50 57 5F 63 
1c4c9     71 5F 5B 50 
1c4cd     53 63 79 76 | 	byte	$65, $58, $4c, $44, $50, $57, $5f, $63, $71, $5f, $5b, $50, $53, $63, $79, $76
1c4d1     6B 85 A3 AA 
1c4d5     9E 8A 70 68 
1c4d9     47 50 59 59 
1c4dd     49 45 63 77 | 	byte	$6b, $85, $a3, $aa, $9e, $8a, $70, $68, $47, $50, $59, $59, $49, $45, $63, $77
1c4e1     7C 73 6D 60 
1c4e5     50 56 6A 86 
1c4e9     96 8A 7D 89 
1c4ed     9B A4 A7 BA | 	byte	$7c, $73, $6d, $60, $50, $56, $6a, $86, $96, $8a, $7d, $89, $9b, $a4, $a7, $ba
1c4f1     CD E4 E5 DA 
1c4f5     D0 C9 B4 A1 
1c4f9     9B 9F 9E 94 
1c4fd     84 8C 83 61 | 	byte	$cd, $e4, $e5, $da, $d0, $c9, $b4, $a1, $9b, $9f, $9e, $94, $84, $8c, $83, $61
1c501     34 24 3A 60 
1c505     6A 6F 8E 9A 
1c509     87 91 AA B5 
1c50d     B6 A7 9B 9D | 	byte	$34, $24, $3a, $60, $6a, $6f, $8e, $9a, $87, $91, $aa, $b5, $b6, $a7, $9b, $9d
1c511     AB B2 B4 BB 
1c515     B3 B0 95 6B 
1c519     63 61 5B 64 
1c51d     79 89 8B 7C | 	byte	$ab, $b2, $b4, $bb, $b3, $b0, $95, $6b, $63, $61, $5b, $64, $79, $89, $8b, $7c
1c521     83 99 A4 A7 
1c525     B7 C8 DD D4 
1c529     A0 80 71 67 
1c52d     50 57 5C 59 | 	byte	$83, $99, $a4, $a7, $b7, $c8, $dd, $d4, $a0, $80, $71, $67, $50, $57, $5c, $59
1c531     53 3C 48 55 
1c535     51 45 37 37 
1c539     3C 2D 22 2D 
1c53d     37 30 3B 46 | 	byte	$53, $3c, $48, $55, $51, $45, $37, $37, $3c, $2d, $22, $2d, $37, $30, $3b, $46
1c541     38 48 48 52 
1c545     69 70 78 83 
1c549     92 A7 B0 94 
1c54d     84 78 78 95 | 	byte	$38, $48, $48, $52, $69, $70, $78, $83, $92, $a7, $b0, $94, $84, $78, $78, $95
1c551     AC B4 9A 7F 
1c555     70 5D 67 84 
1c559     9B B1 BE B7 
1c55d     AA 99 94 8D | 	byte	$ac, $b4, $9a, $7f, $70, $5d, $67, $84, $9b, $b1, $be, $b7, $aa, $99, $94, $8d
1c561     83 87 94 9A 
1c565     AA A5 8C 90 
1c569     8F 87 73 68 
1c56d     6F 79 9D A4 | 	byte	$83, $87, $94, $9a, $aa, $a5, $8c, $90, $8f, $87, $73, $68, $6f, $79, $9d, $a4
1c571     96 8D 7D 8D 
1c575     9B A4 AB A7 
1c579     9B 8F 79 76 
1c57d     73 76 73 72 | 	byte	$96, $8d, $7d, $8d, $9b, $a4, $ab, $a7, $9b, $8f, $79, $76, $73, $76, $73, $72
1c581     5F 4D 45 50 
1c585     5C 4F 64 78 
1c589     85 8E 90 8D 
1c58d     86 9A C7 DC | 	byte	$5f, $4d, $45, $50, $5c, $4f, $64, $78, $85, $8e, $90, $8d, $86, $9a, $c7, $dc
1c591     D6 C0 B8 AD 
1c595     8D 71 73 7E 
1c599     9A A6 97 80 
1c59d     81 87 89 7A | 	byte	$d6, $c0, $b8, $ad, $8d, $71, $73, $7e, $9a, $a6, $97, $80, $81, $87, $89, $7a
1c5a1     76 7A 8D A6 
1c5a5     B3 90 66 40 
1c5a9     2F 48 5C 6D 
1c5ad     85 93 8B 71 | 	byte	$76, $7a, $8d, $a6, $b3, $90, $66, $40, $2f, $48, $5c, $6d, $85, $93, $8b, $71
1c5b1     64 69 76 7D 
1c5b5     8A 82 64 43 
1c5b9     37 31 37 55 
1c5bd     5F 53 47 40 | 	byte	$64, $69, $76, $7d, $8a, $82, $64, $43, $37, $31, $37, $55, $5f, $53, $47, $40
1c5c1     40 50 7E 9F 
1c5c5     A9 9F 92 8D 
1c5c9     8E 8D 8A 88 
1c5cd     A3 B9 AC 95 | 	byte	$40, $50, $7e, $9f, $a9, $9f, $92, $8d, $8e, $8d, $8a, $88, $a3, $b9, $ac, $95
1c5d1     74 5F 5D 55 
1c5d5     45 41 46 52 
1c5d9     54 41 31 40 
1c5dd     39 26 4B 71 | 	byte	$74, $5f, $5d, $55, $45, $41, $46, $52, $54, $41, $31, $40, $39, $26, $4b, $71
1c5e1     82 97 9E 93 
1c5e5     8A 83 80 80 
1c5e9     7F 86 83 86 
1c5ed     A6 BE B7 A7 | 	byte	$82, $97, $9e, $93, $8a, $83, $80, $80, $7f, $86, $83, $86, $a6, $be, $b7, $a7
1c5f1     A6 B2 B9 C2 
1c5f5     B8 A7 AC A9 
1c5f9     B0 C1 B2 9E 
1c5fd     89 77 6A 80 | 	byte	$a6, $b2, $b9, $c2, $b8, $a7, $ac, $a9, $b0, $c1, $b2, $9e, $89, $77, $6a, $80
1c601     A1 C7 C1 AA 
1c605     A3 92 7D 77 
1c609     85 8A 88 8F 
1c60d     99 A6 A9 90 | 	byte	$a1, $c7, $c1, $aa, $a3, $92, $7d, $77, $85, $8a, $88, $8f, $99, $a6, $a9, $90
1c611     8F 8D 6F 70 
1c615     75 7E 91 93 
1c619     79 67 5F 72 
1c61d     7D 81 8A 8B | 	byte	$8f, $8d, $6f, $70, $75, $7e, $91, $93, $79, $67, $5f, $72, $7d, $81, $8a, $8b
1c621     A3 AE 9D 76 
1c625     58 42 29 2D 
1c629     4C 65 69 6E 
1c62d     66 66 7E 8D | 	byte	$a3, $ae, $9d, $76, $58, $42, $29, $2d, $4c, $65, $69, $6e, $66, $66, $7e, $8d
1c631     91 80 7E 6E 
1c635     64 62 58 51 
1c639     57 5A 58 4C 
1c63d     41 28 16 3C | 	byte	$91, $80, $7e, $6e, $64, $62, $58, $51, $57, $5a, $58, $4c, $41, $28, $16, $3c
1c641     62 73 84 8B 
1c645     7B 64 5E 6B 
1c649     79 89 8F 99 
1c64d     A3 9F 87 71 | 	byte	$62, $73, $84, $8b, $7b, $64, $5e, $6b, $79, $89, $8f, $99, $a3, $9f, $87, $71
1c651     6A 71 73 7A 
1c655     7C 8F A3 95 
1c659     75 63 54 38 
1c65d     41 77 B4 C8 | 	byte	$6a, $71, $73, $7a, $7c, $8f, $a3, $95, $75, $63, $54, $38, $41, $77, $b4, $c8
1c661     B9 B4 A7 AE 
1c665     B4 B4 AA A8 
1c669     A2 A6 B6 C0 
1c66d     C1 C1 B2 AD | 	byte	$b9, $b4, $a7, $ae, $b4, $b4, $aa, $a8, $a2, $a6, $b6, $c0, $c1, $c1, $b2, $ad
1c671     BB BD 94 73 
1c675     71 6E 66 6F 
1c679     6F 62 41 42 
1c67d     4D 5A 66 5C | 	byte	$bb, $bd, $94, $73, $71, $6e, $66, $6f, $6f, $62, $41, $42, $4d, $5a, $66, $5c
1c681     69 82 8A 76 
1c685     5C 5A 71 88 
1c689     93 89 A8 BB 
1c68d     AC A6 A6 9D | 	byte	$69, $82, $8a, $76, $5c, $5a, $71, $88, $93, $89, $a8, $bb, $ac, $a6, $a6, $9d
1c691     77 5B 6D 8E 
1c695     99 9B 97 9D 
1c699     A9 AA B0 BE 
1c69d     CB C9 C0 AC | 	byte	$77, $5b, $6d, $8e, $99, $9b, $97, $9d, $a9, $aa, $b0, $be, $cb, $c9, $c0, $ac
1c6a1     AE A9 8F 6B 
1c6a5     50 61 70 61 
1c6a9     61 61 74 73 
1c6ad     89 89 6B 51 | 	byte	$ae, $a9, $8f, $6b, $50, $61, $70, $61, $61, $61, $74, $73, $89, $89, $6b, $51
1c6b1     5A 53 5F 4D 
1c6b5     32 33 44 5B 
1c6b9     72 5D 3A 3A 
1c6bd     3E 57 6E 8F | 	byte	$5a, $53, $5f, $4d, $32, $33, $44, $5b, $72, $5d, $3a, $3a, $3e, $57, $6e, $8f
1c6c1     A1 88 6F 5A 
1c6c5     52 56 5D 6B 
1c6c9     6D 76 81 83 
1c6cd     8B 8C 85 95 | 	byte	$a1, $88, $6f, $5a, $52, $56, $5d, $6b, $6d, $76, $81, $83, $8b, $8c, $85, $95
1c6d1     A7 A2 8A 62 
1c6d5     52 5C 71 5E 
1c6d9     50 57 73 84 
1c6dd     88 9D 96 85 | 	byte	$a7, $a2, $8a, $62, $52, $5c, $71, $5e, $50, $57, $73, $84, $88, $9d, $96, $85
1c6e1     71 7E 96 8C 
1c6e5     68 65 74 84 
1c6e9     7D 89 A8 C3 
1c6ed     D0 CC C8 C1 | 	byte	$71, $7e, $96, $8c, $68, $65, $74, $84, $7d, $89, $a8, $c3, $d0, $cc, $c8, $c1
1c6f1     B8 99 89 93 
1c6f5     A8 AB 9C 81 
1c6f9     60 4F 5A 6F 
1c6fd     80 83 80 98 | 	byte	$b8, $99, $89, $93, $a8, $ab, $9c, $81, $60, $4f, $5a, $6f, $80, $83, $80, $98
1c701     AC A8 94 8C 
1c705     A7 C8 D9 CF 
1c709     BB A4 AC BB 
1c70d     D1 DF DA BB | 	byte	$ac, $a8, $94, $8c, $a7, $c8, $d9, $cf, $bb, $a4, $ac, $bb, $d1, $df, $da, $bb
1c711     97 84 89 7D 
1c715     60 5A 6B 71 
1c719     6A 5A 79 7C 
1c71d     68 51 4F 4B | 	byte	$97, $84, $89, $7d, $60, $5a, $6b, $71, $6a, $5a, $79, $7c, $68, $51, $4f, $4b
1c721     4C 4E 4A 48 
1c725     5A 58 3B 44 
1c729     6F 90 88 62 
1c72d     4E 50 49 44 | 	byte	$4c, $4e, $4a, $48, $5a, $58, $3b, $44, $6f, $90, $88, $62, $4e, $50, $49, $44
1c731     4D 57 3E 1D 
1c735     21 5A 7F 7C 
1c739     59 5B 7A 89 
1c73d     85 82 8E 97 | 	byte	$4d, $57, $3e, $1d, $21, $5a, $7f, $7c, $59, $5b, $7a, $89, $85, $82, $8e, $97
1c741     88 89 9A B4 
1c745     B2 9A 7C 7C 
1c749     8D 8A 7C 7E 
1c74d     83 83 68 6B | 	byte	$88, $89, $9a, $b4, $b2, $9a, $7c, $7c, $8d, $8a, $7c, $7e, $83, $83, $68, $6b
1c751     65 4E 35 30 
1c755     43 52 50 56 
1c759     77 92 9C 81 
1c75d     8D A2 AE B1 | 	byte	$65, $4e, $35, $30, $43, $52, $50, $56, $77, $92, $9c, $81, $8d, $a2, $ae, $b1
1c761     A4 98 8B 7E 
1c765     7C 93 AE B2 
1c769     A4 9A AB CA 
1c76d     C8 BC B0 AB | 	byte	$a4, $98, $8b, $7e, $7c, $93, $ae, $b2, $a4, $9a, $ab, $ca, $c8, $bc, $b0, $ab
1c771     A2 7F 7A 83 
1c775     7E 78 73 84 
1c779     9A A1 8A 80 
1c77d     85 7A 67 59 | 	byte	$a2, $7f, $7a, $83, $7e, $78, $73, $84, $9a, $a1, $8a, $80, $85, $7a, $67, $59
1c781     5E 66 6D 6E 
1c785     87 95 82 79 
1c789     7D 89 9C A4 
1c78d     A1 A2 89 71 | 	byte	$5e, $66, $6d, $6e, $87, $95, $82, $79, $7d, $89, $9c, $a4, $a1, $a2, $89, $71
1c791     62 65 81 A9 
1c795     AD 9D A4 9F 
1c799     95 89 92 A2 
1c79d     8E 63 57 76 | 	byte	$62, $65, $81, $a9, $ad, $9d, $a4, $9f, $95, $89, $92, $a2, $8e, $63, $57, $76
1c7a1     89 7E 7D 86 
1c7a5     91 8A 83 98 
1c7a9     92 71 70 81 
1c7ad     97 A3 97 70 | 	byte	$89, $7e, $7d, $86, $91, $8a, $83, $98, $92, $71, $70, $81, $97, $a3, $97, $70
1c7b1     5F 4D 49 54 
1c7b5     53 5B 61 5E 
1c7b9     57 5F 80 7C 
1c7bd     61 44 30 37 | 	byte	$5f, $4d, $49, $54, $53, $5b, $61, $5e, $57, $5f, $80, $7c, $61, $44, $30, $37
1c7c1     3F 45 48 45 
1c7c5     49 4B 53 78 
1c7c9     9A 9D 8D 78 
1c7cd     60 52 52 55 | 	byte	$3f, $45, $48, $45, $49, $4b, $53, $78, $9a, $9d, $8d, $78, $60, $52, $52, $55
1c7d1     50 40 2F 23 
1c7d5     3D 6E 84 9B 
1c7d9     9C A1 A1 95 
1c7dd     99 9C 9A 96 | 	byte	$50, $40, $2f, $23, $3d, $6e, $84, $9b, $9c, $a1, $a1, $95, $99, $9c, $9a, $96
1c7e1     99 A2 B3 BC 
1c7e5     B2 C8 CE BC 
1c7e9     BA CE DA CE 
1c7ed     AA 9C 9C A6 | 	byte	$99, $a2, $b3, $bc, $b2, $c8, $ce, $bc, $ba, $ce, $da, $ce, $aa, $9c, $9c, $a6
1c7f1     96 8C 83 66 
1c7f5     4F 4E 59 6F 
1c7f9     72 80 8A 7E 
1c7fd     81 8E 9A AB | 	byte	$96, $8c, $83, $66, $4f, $4e, $59, $6f, $72, $80, $8a, $7e, $81, $8e, $9a, $ab
1c801     B2 90 87 96 
1c805     A7 B5 AD A4 
1c809     AC BE CD C9 
1c80d     CB C1 AC 90 | 	byte	$b2, $90, $87, $96, $a7, $b5, $ad, $a4, $ac, $be, $cd, $c9, $cb, $c1, $ac, $90
1c811     7E 77 7E 81 
1c815     8D 90 8B 88 
1c819     84 6F 76 73 
1c81d     6B 5E 62 6B | 	byte	$7e, $77, $7e, $81, $8d, $90, $8b, $88, $84, $6f, $76, $73, $6b, $5e, $62, $6b
1c821     5F 49 53 72 
1c825     74 63 59 52 
1c829     3D 30 25 1B 
1c82d     27 33 43 44 | 	byte	$5f, $49, $53, $72, $74, $63, $59, $52, $3d, $30, $25, $1b, $27, $33, $43, $44
1c831     41 43 56 63 
1c835     71 7B 66 59 
1c839     70 75 78 6F 
1c83d     61 6E 94 9A | 	byte	$41, $43, $56, $63, $71, $7b, $66, $59, $70, $75, $78, $6f, $61, $6e, $94, $9a
1c841     93 90 A3 AC 
1c845     A0 8B 8C A7 
1c849     A2 83 70 63 
1c84d     6F 6C 67 69 | 	byte	$93, $90, $a3, $ac, $a0, $8b, $8c, $a7, $a2, $83, $70, $63, $6f, $6c, $67, $69
1c851     6D 72 6F 7E 
1c855     8A 8F 85 7E 
1c859     99 A1 91 8E 
1c85d     96 8E 92 88 | 	byte	$6d, $72, $6f, $7e, $8a, $8f, $85, $7e, $99, $a1, $91, $8e, $96, $8e, $92, $88
1c861     69 75 94 9D 
1c865     A4 9E AC AC 
1c869     A8 A7 A9 89 
1c86d     63 56 6D 7D | 	byte	$69, $75, $94, $9d, $a4, $9e, $ac, $ac, $a8, $a7, $a9, $89, $63, $56, $6d, $7d
1c871     78 60 55 65 
1c875     77 8A B5 C3 
1c879     B3 9E 6C 48 
1c87d     6A 8C 92 85 | 	byte	$78, $60, $55, $65, $77, $8a, $b5, $c3, $b3, $9e, $6c, $48, $6a, $8c, $92, $85
1c881     79 8A A8 B6 
1c885     BB C4 D2 C3 
1c889     9F 83 94 A0 
1c88d     82 76 7B 80 | 	byte	$79, $8a, $a8, $b6, $bb, $c4, $d2, $c3, $9f, $83, $94, $a0, $82, $76, $7b, $80
1c891     97 B1 AC A1 
1c895     93 64 43 54 
1c899     70 86 7A 7E 
1c89d     83 81 76 77 | 	byte	$97, $b1, $ac, $a1, $93, $64, $43, $54, $70, $86, $7a, $7e, $83, $81, $76, $77
1c8a1     65 5B 4E 53 
1c8a5     5F 81 83 68 
1c8a9     55 61 80 8E 
1c8ad     8C 83 73 54 | 	byte	$65, $5b, $4e, $53, $5f, $81, $83, $68, $55, $61, $80, $8e, $8c, $83, $73, $54
1c8b1     31 4B 7A 9F 
1c8b5     A7 9E 8C 7E 
1c8b9     77 72 6A 74 
1c8bd     63 4F 40 40 | 	byte	$31, $4b, $7a, $9f, $a7, $9e, $8c, $7e, $77, $72, $6a, $74, $63, $4f, $40, $40
1c8c1     45 49 4D 62 
1c8c5     6D 8B 9D 6E 
1c8c9     39 4A 42 1D 
1c8cd     0F 26 40 49 | 	byte	$45, $49, $4d, $62, $6d, $8b, $9d, $6e, $39, $4a, $42, $1d, $0f, $26, $40, $49
1c8d1     50 57 5B 6B 
1c8d5     75 70 60 65 
1c8d9     78 7C 8F A0 
1c8dd     8C 7F 8C AA | 	byte	$50, $57, $5b, $6b, $75, $70, $60, $65, $78, $7c, $8f, $a0, $8c, $7f, $8c, $aa
1c8e1     C8 CE C9 CA 
1c8e5     DB CF C0 C7 
1c8e9     D4 D8 C5 BB 
1c8ed     BD AF A0 9A | 	byte	$c8, $ce, $c9, $ca, $db, $cf, $c0, $c7, $d4, $d8, $c5, $bb, $bd, $af, $a0, $9a
1c8f1     9A 90 8C 83 
1c8f5     7F 7D 7A 7D 
1c8f9     8B 8F A1 B2 
1c8fd     A4 90 8F 8D | 	byte	$9a, $90, $8c, $83, $7f, $7d, $7a, $7d, $8b, $8f, $a1, $b2, $a4, $90, $8f, $8d
1c901     79 6E 77 85 
1c905     A9 C4 B9 AC 
1c909     B1 B4 A2 7C 
1c90d     64 5E 6B 79 | 	byte	$79, $6e, $77, $85, $a9, $c4, $b9, $ac, $b1, $b4, $a2, $7c, $64, $5e, $6b, $79
1c911     8C 8D 81 63 
1c915     54 4B 6D 8C 
1c919     9C 9B 7F 5C 
1c91d     56 70 73 79 | 	byte	$8c, $8d, $81, $63, $54, $4b, $6d, $8c, $9c, $9b, $7f, $5c, $56, $70, $73, $79
1c921     7F 80 6C 6A 
1c925     71 6B 46 31 
1c929     32 35 43 57 
1c92d     52 44 40 52 | 	byte	$7f, $80, $6c, $6a, $71, $6b, $46, $31, $32, $35, $43, $57, $52, $44, $40, $52
1c931     69 7B 83 8A 
1c935     7E 51 3B 3E 
1c939     4B 6C 85 97 
1c93d     8A 7B 83 8E | 	byte	$69, $7b, $83, $8a, $7e, $51, $3b, $3e, $4b, $6c, $85, $97, $8a, $7b, $83, $8e
1c941     81 7A 73 87 
1c945     83 8B 89 72 
1c949     4A 3D 45 63 
1c94d     96 9D 90 86 | 	byte	$81, $7a, $73, $87, $83, $8b, $89, $72, $4a, $3d, $45, $63, $96, $9d, $90, $86
1c951     8B 8D 82 7C 
1c955     82 9D B3 B0 
1c959     A8 B3 BA A7 
1c95d     8E 8A A4 B7 | 	byte	$8b, $8d, $82, $7c, $82, $9d, $b3, $b0, $a8, $b3, $ba, $a7, $8e, $8a, $a4, $b7
1c961     B1 9F 92 9A 
1c965     A4 AE AD 92 
1c969     7A 6C 5A 4A 
1c96d     45 3F 43 73 | 	byte	$b1, $9f, $92, $9a, $a4, $ae, $ad, $92, $7a, $6c, $5a, $4a, $45, $3f, $43, $73
1c971     A7 A7 8E 90 
1c975     9C 83 6B 62 
1c979     64 6B 78 80 
1c97d     7C 73 7A 96 | 	byte	$a7, $a7, $8e, $90, $9c, $83, $6b, $62, $64, $6b, $78, $80, $7c, $73, $7a, $96
1c981     B4 C1 CB BE 
1c985     A3 92 97 91 
1c989     81 83 A5 B6 
1c98d     B2 B3 CB D3 | 	byte	$b4, $c1, $cb, $be, $a3, $92, $97, $91, $81, $83, $a5, $b6, $b2, $b3, $cb, $d3
1c991     B5 7F 60 6F 
1c995     8F 9F 9F 8C 
1c999     82 8C 9C 7A 
1c99d     49 47 60 66 | 	byte	$b5, $7f, $60, $6f, $8f, $9f, $9f, $8c, $82, $8c, $9c, $7a, $49, $47, $60, $66
1c9a1     57 51 4B 42 
1c9a5     55 6A 6D 66 
1c9a9     60 60 4D 38 
1c9ad     3A 4D 66 86 | 	byte	$57, $51, $4b, $42, $55, $6a, $6d, $66, $60, $60, $4d, $38, $3a, $4d, $66, $86
1c9b1     9F A9 95 7C 
1c9b5     6D 6C 60 63 
1c9b9     7E 7D 57 3D 
1c9bd     28 20 40 74 | 	byte	$9f, $a9, $95, $7c, $6d, $6c, $60, $63, $7e, $7d, $57, $3d, $28, $20, $40, $74
1c9c1     8D 8D 90 95 
1c9c5     94 6F 43 2F 
1c9c9     37 48 56 50 
1c9cd     4E 51 47 5C | 	byte	$8d, $8d, $90, $95, $94, $6f, $43, $2f, $37, $48, $56, $50, $4e, $51, $47, $5c
1c9d1     6E 6B 65 7A 
1c9d5     87 7E 73 64 
1c9d9     58 64 78 85 
1c9dd     9B B2 C1 B3 | 	byte	$6e, $6b, $65, $7a, $87, $7e, $73, $64, $58, $64, $78, $85, $9b, $b2, $c1, $b3
1c9e1     96 B1 E0 E4 
1c9e5     C8 B9 BF C4 
1c9e9     B4 A6 A2 9B 
1c9ed     9D AC B2 A4 | 	byte	$96, $b1, $e0, $e4, $c8, $b9, $bf, $c4, $b4, $a6, $a2, $9b, $9d, $ac, $b2, $a4
1c9f1     95 8E 6F 70 
1c9f5     9C C0 C2 C1 
1c9f9     BC AC 92 81 
1c9fd     7F 91 96 9E | 	byte	$95, $8e, $6f, $70, $9c, $c0, $c2, $c1, $bc, $ac, $92, $81, $7f, $91, $96, $9e
1ca01     9E AA B4 AB 
1ca05     A2 B0 AC 97 
1ca09     8B 80 64 64 
1ca0d     79 62 4C 4B | 	byte	$9e, $aa, $b4, $ab, $a2, $b0, $ac, $97, $8b, $80, $64, $64, $79, $62, $4c, $4b
1ca11     55 62 6A 69 
1ca15     70 67 79 97 
1ca19     94 6A 56 56 
1ca1d     6E 76 70 68 | 	byte	$55, $62, $6a, $69, $70, $67, $79, $97, $94, $6a, $56, $56, $6e, $76, $70, $68
1ca21     5C 52 42 2E 
1ca25     2E 43 5E 52 
1ca29     46 5A 76 75 
1ca2d     72 7E 89 87 | 	byte	$5c, $52, $42, $2e, $2e, $43, $5e, $52, $46, $5a, $76, $75, $72, $7e, $89, $87
1ca31     81 7B 7D 71 
1ca35     6F 7F A2 A5 
1ca39     92 70 71 87 
1ca3d     95 8F 8D 7B | 	byte	$81, $7b, $7d, $71, $6f, $7f, $a2, $a5, $92, $70, $71, $87, $95, $8f, $8d, $7b
1ca41     70 7A 70 4C 
1ca45     44 4C 47 51 
1ca49     53 62 60 6C 
1ca4d     82 8C 80 7F | 	byte	$70, $7a, $70, $4c, $44, $4c, $47, $51, $53, $62, $60, $6c, $82, $8c, $80, $7f
1ca51     94 9E 9A 9F 
1ca55     A7 A9 9B 97 
1ca59     8D 7B 83 A2 
1ca5d     B5 A4 95 B9 | 	byte	$94, $9e, $9a, $9f, $a7, $a9, $9b, $97, $8d, $7b, $83, $a2, $b5, $a4, $95, $b9
1ca61     D1 C8 B5 98 
1ca65     7B 67 6B 77 
1ca69     7F 6F 74 83 
1ca6d     94 A6 B6 9D | 	byte	$d1, $c8, $b5, $98, $7b, $67, $6b, $77, $7f, $6f, $74, $83, $94, $a6, $b6, $9d
1ca71     8D 97 83 72 
1ca75     6E 5D 55 44 
1ca79     3B 43 72 90 
1ca7d     9A 9D 95 82 | 	byte	$8d, $97, $83, $72, $6e, $5d, $55, $44, $3b, $43, $72, $90, $9a, $9d, $95, $82
1ca81     8B A1 A9 9E 
1ca85     87 87 A4 B3 
1ca89     CB D4 CE B7 
1ca8d     AC 9F 89 8A | 	byte	$8b, $a1, $a9, $9e, $87, $87, $a4, $b3, $cb, $d4, $ce, $b7, $ac, $9f, $89, $8a
1ca91     9C AE AB A0 
1ca95     B2 C0 B8 A2 
1ca99     6D 4A 48 70 
1ca9d     77 73 5A 49 | 	byte	$9c, $ae, $ab, $a0, $b2, $c0, $b8, $a2, $6d, $4a, $48, $70, $77, $73, $5a, $49
1caa1     4A 55 5B 6D 
1caa5     6E 65 79 78 
1caa9     5B 41 36 4A 
1caad     6E 80 7A 7D | 	byte	$4a, $55, $5b, $6d, $6e, $65, $79, $78, $5b, $41, $36, $4a, $6e, $80, $7a, $7d
1cab1     78 5A 44 48 
1cab5     47 51 5E 60 
1cab9     47 21 2A 52 
1cabd     70 84 9D A5 | 	byte	$78, $5a, $44, $48, $47, $51, $5e, $60, $47, $21, $2a, $52, $70, $84, $9d, $a5
1cac1     8F 73 53 21 
1cac5     08 2B 50 57 
1cac9     4F 5D 63 6F 
1cacd     78 68 69 7C | 	byte	$8f, $73, $53, $21, $08, $2b, $50, $57, $4f, $5d, $63, $6f, $78, $68, $69, $7c
1cad1     A9 AF 90 7A 
1cad5     65 65 69 67 
1cad9     7A A2 C6 DC 
1cadd     DD C8 B4 B9 | 	byte	$a9, $af, $90, $7a, $65, $65, $69, $67, $7a, $a2, $c6, $dc, $dd, $c8, $b4, $b9
1cae1     B5 B4 A6 95 
1cae5     A0 C0 BD 9E 
1cae9     7D 83 99 C7 
1caed     D4 B8 8E 80 | 	byte	$b5, $b4, $a6, $95, $a0, $c0, $bd, $9e, $7d, $83, $99, $c7, $d4, $b8, $8e, $80
1caf1     99 9E 9C AC 
1caf5     B0 AB 91 70 
1caf9     52 5D 7A 91 
1cafd     92 A4 C1 C6 | 	byte	$99, $9e, $9c, $ac, $b0, $ab, $91, $70, $52, $5d, $7a, $91, $92, $a4, $c1, $c6
1cb01     C3 BB AC 97 
1cb05     95 A0 9B 76 
1cb09     51 42 59 70 
1cb0d     5B 5B 6D 8E | 	byte	$c3, $bb, $ac, $97, $95, $a0, $9b, $76, $51, $42, $59, $70, $5b, $5b, $6d, $8e
1cb11     A3 9F 8A 8B 
1cb15     87 6F 55 38 
1cb19     3C 55 66 4D 
1cb1d     36 31 37 3B | 	byte	$a3, $9f, $8a, $8b, $87, $6f, $55, $38, $3c, $55, $66, $4d, $36, $31, $37, $3b
1cb21     3C 3D 53 5C 
1cb25     6A 7C 71 64 
1cb29     58 60 84 96 
1cb2d     7C 5B 5E 73 | 	byte	$3c, $3d, $53, $5c, $6a, $7c, $71, $64, $58, $60, $84, $96, $7c, $5b, $5e, $73
1cb31     7B 86 8D A9 
1cb35     C0 BB 97 7A 
1cb39     74 87 9B 9E 
1cb3d     8A 7C 55 48 | 	byte	$7b, $86, $8d, $a9, $c0, $bb, $97, $7a, $74, $87, $9b, $9e, $8a, $7c, $55, $48
1cb41     59 4D 44 40 
1cb45     56 73 7B 62 
1cb49     57 67 6D 63 
1cb4d     6B 82 9C 93 | 	byte	$59, $4d, $44, $40, $56, $73, $7b, $62, $57, $67, $6d, $63, $6b, $82, $9c, $93
1cb51     78 7E 8D 82 
1cb55     7F 84 93 A8 
1cb59     A3 94 94 9A 
1cb5d     A0 A0 9E 9F | 	byte	$78, $7e, $8d, $82, $7f, $84, $93, $a8, $a3, $94, $94, $9a, $a0, $a0, $9e, $9f
1cb61     98 7A 59 5F 
1cb65     73 8C 95 89 
1cb69     9B CB DD C0 
1cb6d     AB 98 89 75 | 	byte	$98, $7a, $59, $5f, $73, $8c, $95, $89, $9b, $cb, $dd, $c0, $ab, $98, $89, $75
1cb71     66 69 62 44 
1cb75     2F 38 53 6D 
1cb79     76 82 A6 C0 
1cb7d     B5 9F 8A 83 | 	byte	$66, $69, $62, $44, $2f, $38, $53, $6d, $76, $82, $a6, $c0, $b5, $9f, $8a, $83
1cb81     9A A0 AB AA 
1cb85     A4 A3 A6 A8 
1cb89     B1 C8 B7 AE 
1cb8d     AF AE A0 9D | 	byte	$9a, $a0, $ab, $aa, $a4, $a3, $a6, $a8, $b1, $c8, $b7, $ae, $af, $ae, $a0, $9d
1cb91     A2 B9 B0 97 
1cb95     82 81 7C 54 
1cb99     3E 42 65 85 
1cb9d     78 5F 55 68 | 	byte	$a2, $b9, $b0, $97, $82, $81, $7c, $54, $3e, $42, $65, $85, $78, $5f, $55, $68
1cba1     7D 8A 8D 85 
1cba5     78 65 48 36 
1cba9     3D 50 61 77 
1cbad     75 5C 3D 3C | 	byte	$7d, $8a, $8d, $85, $78, $65, $48, $36, $3d, $50, $61, $77, $75, $5c, $3d, $3c
1cbb1     61 6F 6E 52 
1cbb5     39 3A 3E 42 
1cbb9     61 6F 70 76 
1cbbd     6E 57 63 6A | 	byte	$61, $6f, $6e, $52, $39, $3a, $3e, $42, $61, $6f, $70, $76, $6e, $57, $63, $6a
1cbc1     66 48 30 21 
1cbc5     24 39 56 66 
1cbc9     62 5C 67 7D 
1cbcd     80 79 74 89 | 	byte	$66, $48, $30, $21, $24, $39, $56, $66, $62, $5c, $67, $7d, $80, $79, $74, $89
1cbd1     A9 A7 8D 87 
1cbd5     92 B7 D3 D7 
1cbd9     D7 DE E3 DA 
1cbdd     C1 AF 9E 93 | 	byte	$a9, $a7, $8d, $87, $92, $b7, $d3, $d7, $d7, $de, $e3, $da, $c1, $af, $9e, $93
1cbe1     9A 9F A8 9E 
1cbe5     A2 AF BC CA 
1cbe9     BC BC BE AA 
1cbed     94 80 7B 7F | 	byte	$9a, $9f, $a8, $9e, $a2, $af, $bc, $ca, $bc, $bc, $be, $aa, $94, $80, $7b, $7f
1cbf1     8B 86 77 74 
1cbf5     86 94 87 85 
1cbf9     7C 7A 8E AB 
1cbfd     B1 B5 B7 AB | 	byte	$8b, $86, $77, $74, $86, $94, $87, $85, $7c, $7a, $8e, $ab, $b1, $b5, $b7, $ab
1cc01     9A 8F 72 5B 
1cc05     68 73 88 7D 
1cc09     6B 6B 84 99 
1cc0d     A8 A7 A6 A7 | 	byte	$9a, $8f, $72, $5b, $68, $73, $88, $7d, $6b, $6b, $84, $99, $a8, $a7, $a6, $a7
1cc11     8E 5F 4E 49 
1cc15     48 48 3F 3F 
1cc19     33 36 50 5E 
1cc1d     5D 55 59 5D | 	byte	$8e, $5f, $4e, $49, $48, $48, $3f, $3f, $33, $36, $50, $5e, $5d, $55, $59, $5d
1cc21     53 5B 67 5C 
1cc25     56 61 75 7B 
1cc29     7A 7E 88 89 
1cc2d     7A 6C 70 88 | 	byte	$53, $5b, $67, $5c, $56, $61, $75, $7b, $7a, $7e, $88, $89, $7a, $6c, $70, $88
1cc31     A9 BA A9 94 
1cc35     86 78 7D 69 
1cc39     73 83 87 82 
1cc3d     70 78 6B 62 | 	byte	$a9, $ba, $a9, $94, $86, $78, $7d, $69, $73, $83, $87, $82, $70, $78, $6b, $62
1cc41     6C 6A 7C 81 
1cc45     78 66 4F 39 
1cc49     31 47 60 80 
1cc4d     87 7B 8B 8E | 	byte	$6c, $6a, $7c, $81, $78, $66, $4f, $39, $31, $47, $60, $80, $87, $7b, $8b, $8e
1cc51     91 96 98 AA 
1cc55     AE A6 92 83 
1cc59     73 71 8E 9F 
1cc5d     9C 97 88 77 | 	byte	$91, $96, $98, $aa, $ae, $a6, $92, $83, $73, $71, $8e, $9f, $9c, $97, $88, $77
1cc61     76 79 7B 7E 
1cc65     8D A7 BF C0 
1cc69     B6 A3 81 71 
1cc6d     50 46 5F 69 | 	byte	$76, $79, $7b, $7e, $8d, $a7, $bf, $c0, $b6, $a3, $81, $71, $50, $46, $5f, $69
1cc71     72 64 6A 6F 
1cc75     78 93 AA B7 
1cc79     B5 B6 BA B0 
1cc7d     9E 79 6E 7B | 	byte	$72, $64, $6a, $6f, $78, $93, $aa, $b7, $b5, $b6, $ba, $b0, $9e, $79, $6e, $7b
1cc81     96 AF AF BC 
1cc85     CC C5 C1 AF 
1cc89     A9 A5 99 8F 
1cc8d     8B 9D 9C 83 | 	byte	$96, $af, $af, $bc, $cc, $c5, $c1, $af, $a9, $a5, $99, $8f, $8b, $9d, $9c, $83
1cc91     7C 8A 9C 9B 
1cc95     8C 7B 6B 47 
1cc99     35 54 72 83 
1cc9d     7B 64 4A 3B | 	byte	$7c, $8a, $9c, $9b, $8c, $7b, $6b, $47, $35, $54, $72, $83, $7b, $64, $4a, $3b
1cca1     54 5D 60 6B 
1cca5     71 6F 67 5B 
1cca9     5B 67 6F 76 
1ccad     71 62 62 5E | 	byte	$54, $5d, $60, $6b, $71, $6f, $67, $5b, $5b, $67, $6f, $76, $71, $62, $62, $5e
1ccb1     4C 3E 2B 1E 
1ccb5     2D 3B 56 58 
1ccb9     61 67 6A 69 
1ccbd     5B 59 43 22 | 	byte	$4c, $3e, $2b, $1e, $2d, $3b, $56, $58, $61, $67, $6a, $69, $5b, $59, $43, $22
1ccc1     18 20 3A 4C 
1ccc5     4D 4C 5D 75 
1ccc9     74 82 9E AE 
1cccd     91 72 80 9C | 	byte	$18, $20, $3a, $4c, $4d, $4c, $5d, $75, $74, $82, $9e, $ae, $91, $72, $80, $9c
1ccd1     B3 C5 D3 CD 
1ccd5     C2 C5 BA C0 
1ccd9     E2 E4 E4 E4 
1ccdd     B2 8A 61 6F | 	byte	$b3, $c5, $d3, $cd, $c2, $c5, $ba, $c0, $e2, $e4, $e4, $e4, $b2, $8a, $61, $6f
1cce1     AB DA E5 CE 
1cce5     B4 A7 A2 99 
1cce9     84 75 75 78 
1cced     6B 6E 7A 79 | 	byte	$ab, $da, $e5, $ce, $b4, $a7, $a2, $99, $84, $75, $75, $78, $6b, $6e, $7a, $79
1ccf1     7A 73 76 82 
1ccf5     85 8B 89 87 
1ccf9     9B AB AF AA 
1ccfd     B3 9C 72 7B | 	byte	$7a, $73, $76, $82, $85, $8b, $89, $87, $9b, $ab, $af, $aa, $b3, $9c, $72, $7b
1cd01     89 80 6C 69 
1cd05     6A 68 71 7A 
1cd09     79 77 8E 8B 
1cd0d     76 77 7C 76 | 	byte	$89, $80, $6c, $69, $6a, $68, $71, $7a, $79, $77, $8e, $8b, $76, $77, $7c, $76
1cd11     7B 79 66 48 
1cd15     32 4F 73 87 
1cd19     80 77 69 4E 
1cd1d     26 0F 20 40 | 	byte	$7b, $79, $66, $48, $32, $4f, $73, $87, $80, $77, $69, $4e, $26, $0f, $20, $40
1cd21     5A 6F 84 8B 
1cd25     85 89 94 96 
1cd29     8E 95 96 94 
1cd2d     97 AB AB 9D | 	byte	$5a, $6f, $84, $8b, $85, $89, $94, $96, $8e, $95, $96, $94, $97, $ab, $ab, $9d
1cd31     92 9F 7F 63 
1cd35     6B 7B 76 61 
1cd39     5F 5F 6B 79 
1cd3d     74 59 48 57 | 	byte	$92, $9f, $7f, $63, $6b, $7b, $76, $61, $5f, $5f, $6b, $79, $74, $59, $48, $57
1cd41     69 6A 6A 5E 
1cd45     4B 48 57 61 
1cd49     72 8B A0 A9 
1cd4d     B3 A6 9C 9B | 	byte	$69, $6a, $6a, $5e, $4b, $48, $57, $61, $72, $8b, $a0, $a9, $b3, $a6, $9c, $9b
1cd51     94 8B 73 5B 
1cd55     62 74 88 A2 
1cd59     A5 99 8A 7B 
1cd5d     65 58 64 7B | 	byte	$94, $8b, $73, $5b, $62, $74, $88, $a2, $a5, $99, $8a, $7b, $65, $58, $64, $7b
1cd61     91 A9 AD A6 
1cd65     9C A6 B7 99 
1cd69     72 76 81 71 
1cd6d     5A 5B 53 52 | 	byte	$91, $a9, $ad, $a6, $9c, $a6, $b7, $99, $72, $76, $81, $71, $5a, $5b, $53, $52
1cd71     6F 80 8D 93 
1cd75     A3 AE AF B4 
1cd79     CA CA B7 A7 
1cd7d     A4 A5 B6 D7 | 	byte	$6f, $80, $8d, $93, $a3, $ae, $af, $b4, $ca, $ca, $b7, $a7, $a4, $a5, $b6, $d7
1cd81     E5 E5 E5 9F 
1cd85     9B A7 8D 60 
1cd89     4E 55 5C 6A 
1cd8d     83 99 9B 99 | 	byte	$e5, $e5, $e5, $9f, $9b, $a7, $8d, $60, $4e, $55, $5c, $6a, $83, $99, $9b, $99
1cd91     96 7B 53 53 
1cd95     6D 73 71 7A 
1cd99     6F 49 33 44 
1cd9d     50 4D 5B 7A | 	byte	$96, $7b, $53, $53, $6d, $73, $71, $7a, $6f, $49, $33, $44, $50, $4d, $5b, $7a
1cda1     77 66 5B 4D 
1cda5     4B 65 64 5D 
1cda9     61 67 6E 6D 
1cdad     53 46 3E 4D | 	byte	$77, $66, $5b, $4d, $4b, $65, $64, $5d, $61, $67, $6e, $6d, $53, $46, $3e, $4d
1cdb1     4B 49 44 57 
1cdb5     6F 80 89 83 
1cdb9     67 55 4D 37 
1cdbd     17 09 1F 30 | 	byte	$4b, $49, $44, $57, $6f, $80, $89, $83, $67, $55, $4d, $37, $17, $09, $1f, $30
1cdc1     2E 3F 48 53 
1cdc5     77 92 91 7E 
1cdc9     84 92 94 AE 
1cdcd     D0 D4 C4 BB | 	byte	$2e, $3f, $48, $53, $77, $92, $91, $7e, $84, $92, $94, $ae, $d0, $d4, $c4, $bb
1cdd1     C6 C9 D0 E4 
1cdd5     E4 E4 D3 B2 
1cdd9     9B A0 90 84 
1cddd     67 67 8B A7 | 	byte	$c6, $c9, $d0, $e4, $e4, $e4, $d3, $b2, $9b, $a0, $90, $84, $67, $67, $8b, $a7
1cde1     D0 C9 AC 9F 
1cde5     A4 A1 8F 8C 
1cde9     92 A1 A2 9E 
1cded     85 6A 5B 5D | 	byte	$d0, $c9, $ac, $9f, $a4, $a1, $8f, $8c, $92, $a1, $a2, $9e, $85, $6a, $5b, $5d
1cdf1     70 72 6F 76 
1cdf5     7A 7B 92 95 
1cdf9     9C 9D 9C 8D 
1cdfd     72 86 8D 77 | 	byte	$70, $72, $6f, $76, $7a, $7b, $92, $95, $9c, $9d, $9c, $8d, $72, $86, $8d, $77
1ce01     6A 75 8C 9B 
1ce05     95 7C 63 65 
1ce09     80 94 9B 93 
1ce0d     77 5B 53 4A | 	byte	$6a, $75, $8c, $9b, $95, $7c, $63, $65, $80, $94, $9b, $93, $77, $5b, $53, $4a
1ce11     45 3A 53 73 
1ce15     7B 85 70 54 
1ce19     3F 44 52 4A 
1ce1d     59 7D 9F BC | 	byte	$45, $3a, $53, $73, $7b, $85, $70, $54, $3f, $44, $52, $4a, $59, $7d, $9f, $bc
1ce21     B9 9F 9D 8F 
1ce25     88 8F 99 9D 
1ce29     97 7B 6D 69 
1ce2d     6A 7A 77 7D | 	byte	$b9, $9f, $9d, $8f, $88, $8f, $99, $9d, $97, $7b, $6d, $69, $6a, $7a, $77, $7d
1ce31     77 50 49 55 
1ce35     5C 65 70 7F 
1ce39     83 7B 67 4D 
1ce3d     54 6A 71 57 | 	byte	$77, $50, $49, $55, $5c, $65, $70, $7f, $83, $7b, $67, $4d, $54, $6a, $71, $57
1ce41     4F 54 61 65 
1ce45     5D 5B 4E 67 
1ce49     89 9E C2 C6 
1ce4d     A1 7C 6A 6F | 	byte	$4f, $54, $61, $65, $5d, $5b, $4e, $67, $89, $9e, $c2, $c6, $a1, $7c, $6a, $6f
1ce51     82 A3 C6 C9 
1ce55     B9 A2 88 82 
1ce59     7C 74 68 57 
1ce5d     60 75 7F 85 | 	byte	$82, $a3, $c6, $c9, $b9, $a2, $88, $82, $7c, $74, $68, $57, $60, $75, $7f, $85
1ce61     8A 85 85 88 
1ce65     8D 97 8C 81 
1ce69     75 76 6E 7A 
1ce6d     7B 86 A3 AE | 	byte	$8a, $85, $85, $88, $8d, $97, $8c, $81, $75, $76, $6e, $7a, $7b, $86, $a3, $ae
1ce71     A1 B2 C7 D3 
1ce75     C5 C2 C4 BF 
1ce79     B1 A3 B2 B9 
1ce7d     B4 A6 AF D1 | 	byte	$a1, $b2, $c7, $d3, $c5, $c2, $c4, $bf, $b1, $a3, $b2, $b9, $b4, $a6, $af, $d1
1ce81     E5 DA BA 97 
1ce85     64 44 5C 91 
1ce89     BD C8 B3 90 
1ce8d     78 63 5A 65 | 	byte	$e5, $da, $ba, $97, $64, $44, $5c, $91, $bd, $c8, $b3, $90, $78, $63, $5a, $65
1ce91     72 67 59 4B 
1ce95     3B 3D 39 30 
1ce99     2E 37 51 6B 
1ce9d     6C 62 65 64 | 	byte	$72, $67, $59, $4b, $3b, $3d, $39, $30, $2e, $37, $51, $6b, $6c, $62, $65, $64
1cea1     6F 73 73 6E 
1cea5     7A 83 85 7A 
1cea9     64 50 47 3E 
1cead     37 45 4C 3C | 	byte	$6f, $73, $73, $6e, $7a, $83, $85, $7a, $64, $50, $47, $3e, $37, $45, $4c, $3c
1ceb1     36 33 30 45 
1ceb5     72 8B 7F 66 
1ceb9     49 2C 17 27 
1cebd     56 73 7E 86 | 	byte	$36, $33, $30, $45, $72, $8b, $7f, $66, $49, $2c, $17, $27, $56, $73, $7e, $86
1cec1     83 79 80 7C 
1cec5     7F 85 7F 85 
1cec9     9E B6 B1 AC 
1cecd     9C 90 AC E1 | 	byte	$83, $79, $80, $7c, $7f, $85, $7f, $85, $9e, $b6, $b1, $ac, $9c, $90, $ac, $e1
1ced1     E4 E4 C5 B4 
1ced5     B3 B0 AD AB 
1ced9     92 90 A3 AC 
1cedd     A9 A0 9D 94 | 	byte	$e4, $e4, $c5, $b4, $b3, $b0, $ad, $ab, $92, $90, $a3, $ac, $a9, $a0, $9d, $94
1cee1     96 8F 7D 81 
1cee5     89 80 76 62 
1cee9     6F 83 8E 84 
1ceed     7B 6D 64 61 | 	byte	$96, $8f, $7d, $81, $89, $80, $76, $62, $6f, $83, $8e, $84, $7b, $6d, $64, $61
1cef1     73 97 B0 C8 
1cef5     D6 C7 99 74 
1cef9     77 8B 93 7B 
1cefd     5E 5F 76 7F | 	byte	$73, $97, $b0, $c8, $d6, $c7, $99, $74, $77, $8b, $93, $7b, $5e, $5f, $76, $7f
1cf01     7E 79 5F 5D 
1cf05     6C 79 81 84 
1cf09     7E 74 61 5F 
1cf0d     67 67 75 91 | 	byte	$7e, $79, $5f, $5d, $6c, $79, $81, $84, $7e, $74, $61, $5f, $67, $67, $75, $91
1cf11     97 71 53 57 
1cf15     50 4F 49 49 
1cf19     60 78 73 6C 
1cf1d     61 77 96 BA | 	byte	$97, $71, $53, $57, $50, $4f, $49, $49, $60, $78, $73, $6c, $61, $77, $96, $ba
1cf21     B4 9F 8F 86 
1cf25     84 8B 9C AF 
1cf29     B0 AE 94 71 
1cf2d     59 60 61 4A | 	byte	$b4, $9f, $8f, $86, $84, $8b, $9c, $af, $b0, $ae, $94, $71, $59, $60, $61, $4a
1cf31     37 32 3E 4B 
1cf35     59 5F 4E 33 
1cf39     29 3D 4F 5A 
1cf3d     5D 5F 66 6A | 	byte	$37, $32, $3e, $4b, $59, $5f, $4e, $33, $29, $3d, $4f, $5a, $5d, $5f, $66, $6a
1cf41     5F 6F 85 95 
1cf45     97 9A 96 A2 
1cf49     B0 A9 90 6F 
1cf4d     6D 76 93 91 | 	byte	$5f, $6f, $85, $95, $97, $9a, $96, $a2, $b0, $a9, $90, $6f, $6d, $76, $93, $91
1cf51     79 63 64 7B 
1cf55     94 92 8D 84 
1cf59     73 7B 86 8F 
1cf5d     9D A3 B7 AF | 	byte	$79, $63, $64, $7b, $94, $92, $8d, $84, $73, $7b, $86, $8f, $9d, $a3, $b7, $af
1cf61     9C 92 9B AB 
1cf65     99 85 7E 77 
1cf69     6D 6F 6E 82 
1cf6d     91 88 8B A0 | 	byte	$9c, $92, $9b, $ab, $99, $85, $7e, $77, $6d, $6f, $6e, $82, $91, $88, $8b, $a0
1cf71     B3 B6 C1 D0 
1cf75     CB B1 AD C3 
1cf79     DD DE D1 CB 
1cf7d     DB E3 D7 BC | 	byte	$b3, $b6, $c1, $d0, $cb, $b1, $ad, $c3, $dd, $de, $d1, $cb, $db, $e3, $d7, $bc
1cf81     9E 97 84 6D 
1cf85     63 6D 6D 5B 
1cf89     5D 6E 72 70 
1cf8d     57 51 59 4F | 	byte	$9e, $97, $84, $6d, $63, $6d, $6d, $5b, $5d, $6e, $72, $70, $57, $51, $59, $4f
1cf91     45 50 63 7E 
1cf95     79 5D 55 65 
1cf99     74 72 6A 61 
1cf9d     57 59 5A 53 | 	byte	$45, $50, $63, $7e, $79, $5d, $55, $65, $74, $72, $6a, $61, $57, $59, $5a, $53
1cfa1     5A 61 58 58 
1cfa5     5D 66 5E 51 
1cfa9     46 35 2F 46 
1cfad     57 5A 4E 55 | 	byte	$5a, $61, $58, $58, $5d, $66, $5e, $51, $46, $35, $2f, $46, $57, $5a, $4e, $55
1cfb1     59 6B 83 7D 
1cfb5     65 4C 44 3C 
1cfb9     4C 4D 47 4A 
1cfbd     5B 6A 75 83 | 	byte	$59, $6b, $83, $7d, $65, $4c, $44, $3c, $4c, $4d, $47, $4a, $5b, $6a, $75, $83
1cfc1     9E 97 8C 98 
1cfc5     9C A5 BD CB 
1cfc9     E1 DA C3 B0 
1cfcd     BC C1 BB B1 | 	byte	$9e, $97, $8c, $98, $9c, $a5, $bd, $cb, $e1, $da, $c3, $b0, $bc, $c1, $bb, $b1
1cfd1     AF A5 A2 A5 
1cfd5     A4 A6 A3 9E 
1cfd9     A0 9B 90 77 
1cfdd     6A 6C 76 74 | 	byte	$af, $a5, $a2, $a5, $a4, $a6, $a3, $9e, $a0, $9b, $90, $77, $6a, $6c, $76, $74
1cfe1     96 AB A9 96 
1cfe5     93 A2 B2 B4 
1cfe9     99 86 82 76 
1cfed     59 66 7C 87 | 	byte	$96, $ab, $a9, $96, $93, $a2, $b2, $b4, $99, $86, $82, $76, $59, $66, $7c, $87
1cff1     82 83 87 8F 
1cff5     9E 9D 97 8A 
1cff9     79 6F 81 A1 
1cffd     AC AE A9 9F | 	byte	$82, $83, $87, $8f, $9e, $9d, $97, $8a, $79, $6f, $81, $a1, $ac, $ae, $a9, $9f
1d001     93 80 81 82 
1d005     7E 75 68 61 
1d009     53 4C 4B 59 
1d00d     60 64 4E 36 | 	byte	$93, $80, $81, $82, $7e, $75, $68, $61, $53, $4c, $4b, $59, $60, $64, $4e, $36
1d011     37 48 48 55 
1d015     66 80 98 A6 
1d019     B0 AE A3 96 
1d01d     97 9D AB AA | 	byte	$37, $48, $48, $55, $66, $80, $98, $a6, $b0, $ae, $a3, $96, $97, $9d, $ab, $aa
1d021     91 74 64 7C 
1d025     90 8B 7C 65 
1d029     61 5E 65 59 
1d02d     46 2E 2A 38 | 	byte	$91, $74, $64, $7c, $90, $8b, $7c, $65, $61, $5e, $65, $59, $46, $2e, $2a, $38
1d031     4A 5C 66 62 
1d035     4F 47 4F 57 
1d039     5A 5D 61 6F 
1d03d     6C 5A 65 74 | 	byte	$4a, $5c, $66, $62, $4f, $47, $4f, $57, $5a, $5d, $61, $6f, $6c, $5a, $65, $74
1d041     79 80 8B 83 
1d045     80 80 7B 68 
1d049     6E 8C 9A 93 
1d04d     7A 7F 89 8B | 	byte	$79, $80, $8b, $83, $80, $80, $7b, $68, $6e, $8c, $9a, $93, $7a, $7f, $89, $8b
1d051     A0 B0 B4 AE 
1d055     97 8B 8B 8D 
1d059     90 84 77 6C 
1d05d     75 87 98 AF | 	byte	$a0, $b0, $b4, $ae, $97, $8b, $8b, $8d, $90, $84, $77, $6c, $75, $87, $98, $af
1d061     A8 94 7B 7E 
1d065     99 A2 9B 9D 
1d069     A0 98 86 9B 
1d06d     C3 CD B7 A0 | 	byte	$a8, $94, $7b, $7e, $99, $a2, $9b, $9d, $a0, $98, $86, $9b, $c3, $cd, $b7, $a0
1d071     A2 A3 AB B5 
1d075     C1 C5 BA A9 
1d079     A9 B1 C4 B7 
1d07d     A2 A4 BD C0 | 	byte	$a2, $a3, $ab, $b5, $c1, $c5, $ba, $a9, $a9, $b1, $c4, $b7, $a2, $a4, $bd, $c0
1d081     A7 84 70 77 
1d085     82 88 8C 8B 
1d089     67 3D 2F 33 
1d08d     30 3E 48 51 | 	byte	$a7, $84, $70, $77, $82, $88, $8c, $8b, $67, $3d, $2f, $33, $30, $3e, $48, $51
1d091     51 4C 53 53 
1d095     74 89 7F 68 
1d099     50 52 55 50 
1d09d     68 8B 81 65 | 	byte	$51, $4c, $53, $53, $74, $89, $7f, $68, $50, $52, $55, $50, $68, $8b, $81, $65
1d0a1     5B 6D 71 67 
1d0a5     5C 49 29 17 
1d0a9     26 30 37 3E 
1d0ad     39 37 31 3C | 	byte	$5b, $6d, $71, $67, $5c, $49, $29, $17, $26, $30, $37, $3e, $39, $37, $31, $3c
1d0b1     41 40 44 5A 
1d0b5     68 6C 57 5A 
1d0b9     66 89 A0 AB 
1d0bd     B6 A9 9A 9C | 	byte	$41, $40, $44, $5a, $68, $6c, $57, $5a, $66, $89, $a0, $ab, $b6, $a9, $9a, $9c
1d0c1     9B 9C 9F A2 
1d0c5     95 89 91 A5 
1d0c9     AB A8 A5 92 
1d0cd     80 82 AB C8 | 	byte	$9b, $9c, $9f, $a2, $95, $89, $91, $a5, $ab, $a8, $a5, $92, $80, $82, $ab, $c8
1d0d1     C5 C5 D7 D9 
1d0d5     CA C3 BE A7 
1d0d9     8C 83 83 7E 
1d0dd     77 79 7E 86 | 	byte	$c5, $c5, $d7, $d9, $ca, $c3, $be, $a7, $8c, $83, $83, $7e, $77, $79, $7e, $86
1d0e1     8A 89 98 9E 
1d0e5     89 65 5F 67 
1d0e9     7A 8C 98 8C 
1d0ed     82 7D 97 B6 | 	byte	$8a, $89, $98, $9e, $89, $65, $5f, $67, $7a, $8c, $98, $8c, $82, $7d, $97, $b6
1d0f1     C8 CE B9 A0 
1d0f5     A5 93 79 73 
1d0f9     86 86 70 72 
1d0fd     89 9B 98 7F | 	byte	$c8, $ce, $b9, $a0, $a5, $93, $79, $73, $86, $86, $70, $72, $89, $9b, $98, $7f
1d101     68 58 4A 5F 
1d105     7A 88 84 71 
1d109     63 62 57 5D 
1d10d     6B 7B 7D 6D | 	byte	$68, $58, $4a, $5f, $7a, $88, $84, $71, $63, $62, $57, $5d, $6b, $7b, $7d, $6d
1d111     6A 6B 87 9E 
1d115     A0 96 8A 7F 
1d119     67 4F 5A 7B 
1d11d     80 6F 75 92 | 	byte	$6a, $6b, $87, $9e, $a0, $96, $8a, $7f, $67, $4f, $5a, $7b, $80, $6f, $75, $92
1d121     91 82 8C AF 
1d125     A7 8D 7C 81 
1d129     7F 6F 4D 27 
1d12d     12 25 34 25 | 	byte	$91, $82, $8c, $af, $a7, $8d, $7c, $81, $7f, $6f, $4d, $27, $12, $25, $34, $25
1d131     2B 3F 4F 3F 
1d135     2F 38 3F 4D 
1d139     5D 72 8A 9E 
1d13d     9A 91 9B 96 | 	byte	$2b, $3f, $4f, $3f, $2f, $38, $3f, $4d, $5d, $72, $8a, $9e, $9a, $91, $9b, $96
1d141     93 8F 93 8B 
1d145     89 83 80 89 
1d149     8B 81 64 5F 
1d14d     71 7C 66 5F | 	byte	$93, $8f, $93, $8b, $89, $83, $80, $89, $8b, $81, $64, $5f, $71, $7c, $66, $5f
1d151     69 85 96 9C 
1d155     96 90 8E 96 
1d159     AB C4 BE BB 
1d15d     B4 B8 AF A9 | 	byte	$69, $85, $96, $9c, $96, $90, $8e, $96, $ab, $c4, $be, $bb, $b4, $b8, $af, $a9
1d161     A4 99 8B 80 
1d165     76 7B 99 AB 
1d169     9E 89 85 87 
1d16d     8F 99 AB C3 | 	byte	$a4, $99, $8b, $80, $76, $7b, $99, $ab, $9e, $89, $85, $87, $8f, $99, $ab, $c3
1d171     D0 D9 D1 C6 
1d175     BC B0 C6 E3 
1d179     E5 D3 B7 B1 
1d17d     B6 C4 B2 76 | 	byte	$d0, $d9, $d1, $c6, $bc, $b0, $c6, $e3, $e5, $d3, $b7, $b1, $b6, $c4, $b2, $76
1d181     4C 44 49 3F 
1d185     40 47 40 22 
1d189     17 32 4E 60 
1d18d     6B 80 8E 8A | 	byte	$4c, $44, $49, $3f, $40, $47, $40, $22, $17, $32, $4e, $60, $6b, $80, $8e, $8a
1d191     8A A1 9F 8B 
1d195     77 5C 63 47 
1d199     39 3D 49 52 
1d19d     5F 60 4B 42 | 	byte	$8a, $a1, $9f, $8b, $77, $5c, $63, $47, $39, $3d, $49, $52, $5f, $60, $4b, $42
1d1a1     40 3E 39 28 
1d1a5     21 2B 42 58 
1d1a9     53 3A 28 34 
1d1ad     58 68 69 5E | 	byte	$40, $3e, $39, $28, $21, $2b, $42, $58, $53, $3a, $28, $34, $58, $68, $69, $5e
1d1b1     6D 72 6F 7F 
1d1b5     5E 3C 33 4B 
1d1b9     77 99 A6 9B 
1d1bd     89 79 78 91 | 	byte	$6d, $72, $6f, $7f, $5e, $3c, $33, $4b, $77, $99, $a6, $9b, $89, $79, $78, $91
1d1c1     A1 AA B6 C6 
1d1c5     C2 C1 C2 C8 
1d1c9     C2 AC 9F B0 
1d1cd     C0 BE AF A3 | 	byte	$a1, $aa, $b6, $c6, $c2, $c1, $c2, $c8, $c2, $ac, $9f, $b0, $c0, $be, $af, $a3
1d1d1     A3 AF B8 AF 
1d1d5     98 89 74 63 
1d1d9     6F 85 8A 89 
1d1dd     8B A1 A4 98 | 	byte	$a3, $af, $b8, $af, $98, $89, $74, $63, $6f, $85, $8a, $89, $8b, $a1, $a4, $98
1d1e1     99 A4 A9 A7 
1d1e5     90 96 91 86 
1d1e9     89 87 7A 63 
1d1ed     63 7F 94 9E | 	byte	$99, $a4, $a9, $a7, $90, $96, $91, $86, $89, $87, $7a, $63, $63, $7f, $94, $9e
1d1f1     A1 90 7F 75 
1d1f5     7B 87 95 9B 
1d1f9     9F 9E 98 A3 
1d1fd     B3 AF 96 76 | 	byte	$a1, $90, $7f, $75, $7b, $87, $95, $9b, $9f, $9e, $98, $a3, $b3, $af, $96, $76
1d201     65 57 6D 7A 
1d205     68 4F 4B 58 
1d209     65 5D 51 4C 
1d20d     65 7C 8F 90 | 	byte	$65, $57, $6d, $7a, $68, $4f, $4b, $58, $65, $5d, $51, $4c, $65, $7c, $8f, $90
1d211     97 8F 8D 8E 
1d215     99 92 7E 84 
1d219     96 98 A2 9B 
1d21d     99 88 78 6E | 	byte	$97, $8f, $8d, $8e, $99, $92, $7e, $84, $96, $98, $a2, $9b, $99, $88, $78, $6e
1d221     66 5F 72 7E 
1d225     67 45 39 2D 
1d229     20 1D 1D 36 
1d22d     45 4C 52 52 | 	byte	$66, $5f, $72, $7e, $67, $45, $39, $2d, $20, $1d, $1d, $36, $45, $4c, $52, $52
1d231     5D 78 87 67 
1d235     55 5A 68 7B 
1d239     91 92 75 56 
1d23d     48 66 80 79 | 	byte	$5d, $78, $87, $67, $55, $5a, $68, $7b, $91, $92, $75, $56, $48, $66, $80, $79
1d241     64 6B 6C 71 
1d245     6F 89 9E 90 
1d249     7E 87 8A 7B 
1d24d     79 87 85 9F | 	byte	$64, $6b, $6c, $71, $6f, $89, $9e, $90, $7e, $87, $8a, $7b, $79, $87, $85, $9f
1d251     B4 C2 CB B2 
1d255     8A 68 6F 9B 
1d259     B5 B0 92 86 
1d25d     84 81 8B 88 | 	byte	$b4, $c2, $cb, $b2, $8a, $68, $6f, $9b, $b5, $b0, $92, $86, $84, $81, $8b, $88
1d261     9C B4 B5 A5 
1d265     9B A9 BD CF 
1d269     CC BB A5 A7 
1d26d     B3 C3 C4 C7 | 	byte	$9c, $b4, $b5, $a5, $9b, $a9, $bd, $cf, $cc, $bb, $a5, $a7, $b3, $c3, $c4, $c7
1d271     BF B0 AA B1 
1d275     AD A9 BC C9 
1d279     B3 8E 85 96 
1d27d     8F 72 60 67 | 	byte	$bf, $b0, $aa, $b1, $ad, $a9, $bc, $c9, $b3, $8e, $85, $96, $8f, $72, $60, $67
1d281     6C 64 5D 56 
1d285     67 74 7C 76 
1d289     69 5E 42 41 
1d28d     62 7D 6D 49 | 	byte	$6c, $64, $5d, $56, $67, $74, $7c, $76, $69, $5e, $42, $41, $62, $7d, $6d, $49
1d291     3E 52 67 64 
1d295     37 44 62 65 
1d299     58 62 7A 80 
1d29d     77 6F 5D 43 | 	byte	$3e, $52, $67, $64, $37, $44, $62, $65, $58, $62, $7a, $80, $77, $6f, $5d, $43
1d2a1     2F 29 2E 1E 
1d2a5     2D 33 25 21 
1d2a9     26 26 27 41 
1d2ad     55 59 49 56 | 	byte	$2f, $29, $2e, $1e, $2d, $33, $25, $21, $26, $26, $27, $41, $55, $59, $49, $56
1d2b1     7C 7C 66 61 
1d2b5     6C 8F AE B5 
1d2b9     AD A8 A9 A7 
1d2bd     A9 AD A3 8E | 	byte	$7c, $7c, $66, $61, $6c, $8f, $ae, $b5, $ad, $a8, $a9, $a7, $a9, $ad, $a3, $8e
1d2c1     87 91 A5 AD 
1d2c5     B0 A4 9C A8 
1d2c9     AE 98 A3 B9 
1d2cd     B6 9B 9F B8 | 	byte	$87, $91, $a5, $ad, $b0, $a4, $9c, $a8, $ae, $98, $a3, $b9, $b6, $9b, $9f, $b8
1d2d1     D5 D1 BD 9F 
1d2d5     8D 8B 8C 93 
1d2d9     87 79 7B 6E 
1d2dd     72 8A 8E 85 | 	byte	$d5, $d1, $bd, $9f, $8d, $8b, $8c, $93, $87, $79, $7b, $6e, $72, $8a, $8e, $85
1d2e1     83 7F 65 4F 
1d2e5     55 85 98 94 
1d2e9     95 93 98 9A 
1d2ed     95 A4 C9 DC | 	byte	$83, $7f, $65, $4f, $55, $85, $98, $94, $95, $93, $98, $9a, $95, $a4, $c9, $dc
1d2f1     D1 B0 A2 7F 
1d2f5     66 61 6E 72 
1d2f9     7B 80 77 5C 
1d2fd     5E 57 51 69 | 	byte	$d1, $b0, $a2, $7f, $66, $61, $6e, $72, $7b, $80, $77, $5c, $5e, $57, $51, $69
1d301     83 72 5D 69 
1d305     86 A1 A1 96 
1d309     96 77 79 7C 
1d30d     87 7E 7B 82 | 	byte	$83, $72, $5d, $69, $86, $a1, $a1, $96, $96, $77, $79, $7c, $87, $7e, $7b, $82
1d311     72 6E 75 84 
1d315     8D 89 72 6D 
1d319     5B 6E 91 9C 
1d31d     8E 8F 92 8D | 	byte	$72, $6e, $75, $84, $8d, $89, $72, $6d, $5b, $6e, $91, $9c, $8e, $8f, $92, $8d
1d321     7F 53 48 5D 
1d325     66 66 4D 4B 
1d329     35 26 23 22 
1d32d     24 33 4C 5A | 	byte	$7f, $53, $48, $5d, $66, $66, $4d, $4b, $35, $26, $23, $22, $24, $33, $4c, $5a
1d331     4D 47 51 52 
1d335     6B 7F 6F 5C 
1d339     5D 69 86 8E 
1d33d     83 8C 95 90 | 	byte	$4d, $47, $51, $52, $6b, $7f, $6f, $5c, $5d, $69, $86, $8e, $83, $8c, $95, $90
1d341     7D 7B 8C 99 
1d345     A1 84 6B 60 
1d349     59 66 7A 77 
1d34d     66 63 7F AF | 	byte	$7d, $7b, $8c, $99, $a1, $84, $6b, $60, $59, $66, $7a, $77, $66, $63, $7f, $af
1d351     B1 A7 9C A9 
1d355     B9 B5 98 95 
1d359     B7 CE CB C4 
1d35d     C9 B3 84 77 | 	byte	$b1, $a7, $9c, $a9, $b9, $b5, $98, $95, $b7, $ce, $cb, $c4, $c9, $b3, $84, $77
1d361     81 88 92 8C 
1d365     96 A1 A8 B3 
1d369     B3 C6 C2 AB 
1d36d     A5 C8 E4 E4 | 	byte	$81, $88, $92, $8c, $96, $a1, $a8, $b3, $b3, $c6, $c2, $ab, $a5, $c8, $e4, $e4
1d371     E4 D5 D3 DE 
1d375     E0 C1 9E 93 
1d379     8B 77 56 3B 
1d37d     3C 58 5D 55 | 	byte	$e4, $d5, $d3, $de, $e0, $c1, $9e, $93, $8b, $77, $56, $3b, $3c, $58, $5d, $55
1d381     5B 5E 46 44 
1d385     5F 72 82 73 
1d389     67 66 62 53 
1d38d     55 6F 90 8B | 	byte	$5b, $5e, $46, $44, $5f, $72, $82, $73, $67, $66, $62, $53, $55, $6f, $90, $8b
1d391     73 6E 7D 72 
1d395     56 46 3B 3A 
1d399     42 5C 5C 55 
1d39d     46 36 2E 27 | 	byte	$73, $6e, $7d, $72, $56, $46, $3b, $3a, $42, $5c, $5c, $55, $46, $36, $2e, $27
1d3a1     15 14 2E 4A 
1d3a5     45 4C 59 5A 
1d3a9     61 54 4F 59 
1d3ad     7B 88 6F 62 | 	byte	$15, $14, $2e, $4a, $45, $4c, $59, $5a, $61, $54, $4f, $59, $7b, $88, $6f, $62
1d3b1     5E 4F 58 75 
1d3b5     89 99 94 86 
1d3b9     7B 87 8B 96 
1d3bd     B7 D6 D1 BF | 	byte	$5e, $4f, $58, $75, $89, $99, $94, $86, $7b, $87, $8b, $96, $b7, $d6, $d1, $bf
1d3c1     B8 C4 D3 DD 
1d3c5     E0 D4 C9 CC 
1d3c9     BA A2 8B 81 
1d3cd     84 84 7E 81 | 	byte	$b8, $c4, $d3, $dd, $e0, $d4, $c9, $cc, $ba, $a2, $8b, $81, $84, $84, $7e, $81
1d3d1     93 91 88 82 
1d3d5     83 79 6F 7E 
1d3d9     98 A1 A2 9C 
1d3dd     92 89 7E 77 | 	byte	$93, $91, $88, $82, $83, $79, $6f, $7e, $98, $a1, $a2, $9c, $92, $89, $7e, $77
1d3e1     71 85 8B 7D 
1d3e5     77 6C 6A 7A 
1d3e9     7E 87 97 9A 
1d3ed     94 89 93 98 | 	byte	$71, $85, $8b, $7d, $77, $6c, $6a, $7a, $7e, $87, $97, $9a, $94, $89, $93, $98
1d3f1     91 92 9B A2 
1d3f5     8B 87 9B 9B 
1d3f9     8C 7E 7D 80 
1d3fd     88 77 72 7C | 	byte	$91, $92, $9b, $a2, $8b, $87, $9b, $9b, $8c, $7e, $7d, $80, $88, $77, $72, $7c
1d401     81 77 61 5F 
1d405     67 73 76 74 
1d409     6A 67 66 73 
1d40d     89 9B A7 A0 | 	byte	$81, $77, $61, $5f, $67, $73, $76, $74, $6a, $67, $66, $73, $89, $9b, $a7, $a0
1d411     97 9B 9D 96 
1d415     98 98 9A 8B 
1d419     7F 89 8B 6F 
1d41d     51 46 44 50 | 	byte	$97, $9b, $9d, $96, $98, $98, $9a, $8b, $7f, $89, $8b, $6f, $51, $46, $44, $50
1d421     4B 2E 14 16 
1d425     33 37 36 3F 
1d429     4D 58 53 5A 
1d42d     62 6C 6C 75 | 	byte	$4b, $2e, $14, $16, $33, $37, $36, $3f, $4d, $58, $53, $5a, $62, $6c, $6c, $75
1d431     80 88 70 50 
1d435     49 65 69 54 
1d439     41 3F 6A 85 
1d43d     8D 91 A2 A4 | 	byte	$80, $88, $70, $50, $49, $65, $69, $54, $41, $3f, $6a, $85, $8d, $91, $a2, $a4
1d441     94 6B 64 82 
1d445     99 8F 7E 74 
1d449     66 81 A1 A4 
1d44d     9A 8D 8C 7C | 	byte	$94, $6b, $64, $82, $99, $8f, $7e, $74, $66, $81, $a1, $a4, $9a, $8d, $8c, $7c
1d451     71 64 72 84 
1d455     98 A4 AA 97 
1d459     8D 94 91 8E 
1d45d     98 A6 B9 CB | 	byte	$71, $64, $72, $84, $98, $a4, $aa, $97, $8d, $94, $91, $8e, $98, $a6, $b9, $cb
1d461     C7 B4 BB C8 
1d465     D5 E0 C9 BE 
1d469     B4 BE C6 C5 
1d46d     B3 A6 BC E4 | 	byte	$c7, $b4, $bb, $c8, $d5, $e0, $c9, $be, $b4, $be, $c6, $c5, $b3, $a6, $bc, $e4
1d471     E5 E5 B3 9E 
1d475     98 9E 7B 5B 
1d479     5E 60 55 58 
1d47d     73 84 8B 81 | 	byte	$e5, $e5, $b3, $9e, $98, $9e, $7b, $5b, $5e, $60, $55, $58, $73, $84, $8b, $81
1d481     6D 53 40 3D 
1d485     47 43 27 1D 
1d489     1F 2A 48 68 
1d48d     6B 5E 57 5E | 	byte	$6d, $53, $40, $3d, $47, $43, $27, $1d, $1f, $2a, $48, $68, $6b, $5e, $57, $5e
1d491     66 6D 7C 84 
1d495     85 82 6A 60 
1d499     60 6D 6B 55 
1d49d     39 20 38 49 | 	byte	$66, $6d, $7c, $84, $85, $82, $6a, $60, $60, $6d, $6b, $55, $39, $20, $38, $49
1d4a1     3F 33 27 1C 
1d4a5     22 3A 5C 65 
1d4a9     56 5C 61 5B 
1d4ad     51 6C 8C 92 | 	byte	$3f, $33, $27, $1c, $22, $3a, $5c, $65, $56, $5c, $61, $5b, $51, $6c, $8c, $92
1d4b1     84 8B A2 9F 
1d4b5     9B A7 B0 9C 
1d4b9     81 7D 94 A2 
1d4bd     B1 C5 C0 B5 | 	byte	$84, $8b, $a2, $9f, $9b, $a7, $b0, $9c, $81, $7d, $94, $a2, $b1, $c5, $c0, $b5
1d4c1     B2 B1 AA B8 
1d4c5     C8 C3 B5 A6 
1d4c9     A9 AC AE AF 
1d4cd     A2 99 92 91 | 	byte	$b2, $b1, $aa, $b8, $c8, $c3, $b5, $a6, $a9, $ac, $ae, $af, $a2, $99, $92, $91
1d4d1     8F 90 79 79 
1d4d5     91 88 7B 67 
1d4d9     6B 63 6F 86 
1d4dd     88 7D 77 75 | 	byte	$8f, $90, $79, $79, $91, $88, $7b, $67, $6b, $63, $6f, $86, $88, $7d, $77, $75
1d4e1     86 8E 78 7D 
1d4e5     7E 90 9A A5 
1d4e9     A6 99 99 A3 
1d4ed     9A 83 91 A2 | 	byte	$86, $8e, $78, $7d, $7e, $90, $9a, $a5, $a6, $99, $99, $a3, $9a, $83, $91, $a2
1d4f1     87 74 77 8A 
1d4f5     8F 92 80 69 
1d4f9     51 55 72 97 
1d4fd     AF B1 A1 71 | 	byte	$87, $74, $77, $8a, $8f, $92, $80, $69, $51, $55, $72, $97, $af, $b1, $a1, $71
1d501     63 68 7E 88 
1d505     7A 7A 8F 6E 
1d509     58 71 99 9C 
1d50d     8A 85 83 85 | 	byte	$63, $68, $7e, $88, $7a, $7a, $8f, $6e, $58, $71, $99, $9c, $8a, $85, $83, $85
1d511     8F 9D A5 9C 
1d515     8F 95 8B 81 
1d519     95 90 77 5E 
1d51d     56 5A 67 5D | 	byte	$8f, $9d, $a5, $9c, $8f, $95, $8b, $81, $95, $90, $77, $5e, $56, $5a, $67, $5d
1d521     52 3E 14 0A 
1d525     1D 1A 1C 1F 
1d529     27 2E 46 59 
1d52d     63 59 5C 63 | 	byte	$52, $3e, $14, $0a, $1d, $1a, $1c, $1f, $27, $2e, $46, $59, $63, $59, $5c, $63
1d531     71 78 79 7C 
1d535     7C 7B 5D 5C 
1d539     85 A8 A7 A0 
1d53d     A3 A2 95 7C | 	byte	$71, $78, $79, $7c, $7c, $7b, $5d, $5c, $85, $a8, $a7, $a0, $a3, $a2, $95, $7c
1d541     6E 72 7B 7F 
1d545     7A 84 8F 96 
1d549     86 88 8D 8E 
1d54d     92 98 96 8E | 	byte	$6e, $72, $7b, $7f, $7a, $84, $8f, $96, $86, $88, $8d, $8e, $92, $98, $96, $8e
1d551     86 91 9B B6 
1d555     B6 9F 88 77 
1d559     87 95 92 86 
1d55d     8D A4 B2 B6 | 	byte	$86, $91, $9b, $b6, $b6, $9f, $88, $77, $87, $95, $92, $86, $8d, $a4, $b2, $b6
1d561     AF B0 B1 A1 
1d565     A6 C1 C7 C7 
1d569     C6 D8 E4 E4 
1d56d     E3 E5 E5 E5 | 	byte	$af, $b0, $b1, $a1, $a6, $c1, $c7, $c7, $c6, $d8, $e4, $e4, $e3, $e5, $e5, $e5
1d571     CF B8 9E 96 
1d575     8D 7B 63 67 
1d579     69 5C 46 50 
1d57d     6C 69 43 35 | 	byte	$cf, $b8, $9e, $96, $8d, $7b, $63, $67, $69, $5c, $46, $50, $6c, $69, $43, $35
1d581     2D 31 3B 4C 
1d585     5B 50 31 25 
1d589     48 5C 63 6A 
1d58d     5F 55 45 37 | 	byte	$2d, $31, $3b, $4c, $5b, $50, $31, $25, $48, $5c, $63, $6a, $5f, $55, $45, $37
1d591     44 58 7E 87 
1d595     63 45 3F 4C 
1d599     3E 2C 41 5B 
1d59d     67 64 56 68 | 	byte	$44, $58, $7e, $87, $63, $45, $3f, $4c, $3e, $2c, $41, $5b, $67, $64, $56, $68
1d5a1     5B 40 3B 48 
1d5a5     5B 64 5A 47 
1d5a9     44 56 71 87 
1d5ad     8C 9C 97 80 | 	byte	$5b, $40, $3b, $48, $5b, $64, $5a, $47, $44, $56, $71, $87, $8c, $9c, $97, $80
1d5b1     7F 92 A7 92 
1d5b5     8C 93 B3 CC 
1d5b9     C5 B6 B1 B2 
1d5bd     B5 BD BF C7 | 	byte	$7f, $92, $a7, $92, $8c, $93, $b3, $cc, $c5, $b6, $b1, $b2, $b5, $bd, $bf, $c7
1d5c1     C7 BA B8 A9 
1d5c5     9E 97 85 79 
1d5c9     84 9B 9E 89 
1d5cd     7B 66 54 60 | 	byte	$c7, $ba, $b8, $a9, $9e, $97, $85, $79, $84, $9b, $9e, $89, $7b, $66, $54, $60
1d5d1     74 97 A9 9B 
1d5d5     8A 8A 7A 6F 
1d5d9     6E 8D A9 A7 
1d5dd     87 70 78 82 | 	byte	$74, $97, $a9, $9b, $8a, $8a, $7a, $6f, $6e, $8d, $a9, $a7, $87, $70, $78, $82
1d5e1     80 7C 86 8F 
1d5e5     70 6B 8D A8 
1d5e9     AB A3 9E 99 
1d5ed     9E A9 AA AF | 	byte	$80, $7c, $86, $8f, $70, $6b, $8d, $a8, $ab, $a3, $9e, $99, $9e, $a9, $aa, $af
1d5f1     A6 86 72 71 
1d5f5     96 AB 9D 74 
1d5f9     61 4B 49 5B 
1d5fd     63 5E 59 4B | 	byte	$a6, $86, $72, $71, $96, $ab, $9d, $74, $61, $4b, $49, $5b, $63, $5e, $59, $4b
1d601     45 5C 68 72 
1d605     76 7B 80 85 
1d609     9B B7 C0 A9 
1d60d     89 77 82 A0 | 	byte	$45, $5c, $68, $72, $76, $7b, $80, $85, $9b, $b7, $c0, $a9, $89, $77, $82, $a0
1d611     B1 AB 9E 9C 
1d615     A0 99 7C 73 
1d619     84 84 6F 58 
1d61d     44 4C 53 3E | 	byte	$b1, $ab, $9e, $9c, $a0, $99, $7c, $73, $84, $84, $6f, $58, $44, $4c, $53, $3e
1d621     3B 3A 2B 17 
1d625     0C 1B 26 27 
1d629     2C 44 63 70 
1d62d     6E 5F 53 47 | 	byte	$3b, $3a, $2b, $17, $0c, $1b, $26, $27, $2c, $44, $63, $70, $6e, $5f, $53, $47
1d631     31 39 5A 87 
1d635     92 86 78 66 
1d639     70 89 A6 C3 
1d63d     C7 B8 AE A5 | 	byte	$31, $39, $5a, $87, $92, $86, $78, $66, $70, $89, $a6, $c3, $c7, $b8, $ae, $a5
1d641     82 72 71 8E 
1d645     A1 A3 98 94 
1d649     9C 9D 99 91 
1d64d     89 91 9A A2 | 	byte	$82, $72, $71, $8e, $a1, $a3, $98, $94, $9c, $9d, $99, $91, $89, $91, $9a, $a2
1d651     99 98 92 9A 
1d655     9E AB AF A3 
1d659     A1 B9 A6 9E 
1d65d     9D 91 9C AD | 	byte	$99, $98, $92, $9a, $9e, $ab, $af, $a3, $a1, $b9, $a6, $9e, $9d, $91, $9c, $ad
1d661     B9 B9 AB 8F 
1d665     81 93 B4 C9 
1d669     D8 E4 E3 D0 
1d66d     BC C6 D7 D0 | 	byte	$b9, $b9, $ab, $8f, $81, $93, $b4, $c9, $d8, $e4, $e3, $d0, $bc, $c6, $d7, $d0
1d671     C4 B5 A0 9E 
1d675     B2 9F 62 2D 
1d679     24 2E 41 46 
1d67d     43 34 25 23 | 	byte	$c4, $b5, $a0, $9e, $b2, $9f, $62, $2d, $24, $2e, $41, $46, $43, $34, $25, $23
1d681     39 58 4F 3B 
1d685     2F 32 4B 52 
1d689     67 71 71 62 
1d68d     4F 4A 5E 75 | 	byte	$39, $58, $4f, $3b, $2f, $32, $4b, $52, $67, $71, $71, $62, $4f, $4a, $5e, $75
1d691     89 83 77 5D 
1d695     3F 2F 2A 37 
1d699     4D 4C 3B 3B 
1d69d     45 34 47 61 | 	byte	$89, $83, $77, $5d, $3f, $2f, $2a, $37, $4d, $4c, $3b, $3b, $45, $34, $47, $61
1d6a1     59 38 2C 49 
1d6a5     66 80 80 74 
1d6a9     77 92 A2 A4 
1d6ad     91 78 6F 80 | 	byte	$59, $38, $2c, $49, $66, $80, $80, $74, $77, $92, $a2, $a4, $91, $78, $6f, $80
1d6b1     9E A8 A6 B5 
1d6b5     C4 C2 B7 BF 
1d6b9     BC B8 BA C7 
1d6bd     B9 AF BE CF | 	byte	$9e, $a8, $a6, $b5, $c4, $c2, $b7, $bf, $bc, $b8, $ba, $c7, $b9, $af, $be, $cf
1d6c1     CB B8 A7 9E 
1d6c5     A6 B2 9C 77 
1d6c9     6D 71 70 6D 
1d6cd     63 4E 45 51 | 	byte	$cb, $b8, $a7, $9e, $a6, $b2, $9c, $77, $6d, $71, $70, $6d, $63, $4e, $45, $51
1d6d1     63 6E 79 84 
1d6d5     8D 80 65 5D 
1d6d9     75 98 A1 97 
1d6dd     87 8A 97 95 | 	byte	$63, $6e, $79, $84, $8d, $80, $65, $5d, $75, $98, $a1, $97, $87, $8a, $97, $95
1d6e1     87 75 73 69 
1d6e5     7E A4 C2 C5 
1d6e9     B4 AB A1 96 
1d6ed     96 9E AE B1 | 	byte	$87, $75, $73, $69, $7e, $a4, $c2, $c5, $b4, $ab, $a1, $96, $96, $9e, $ae, $b1
1d6f1     A0 8E 8A 9C 
1d6f5     9F 83 71 61 
1d6f9     5B 61 72 6E 
1d6fd     43 32 38 3B | 	byte	$a0, $8e, $8a, $9c, $9f, $83, $71, $61, $5b, $61, $72, $6e, $43, $32, $38, $3b
1d701     49 5C 64 66 
1d705     6F 6F 6F 82 
1d709     AE C2 A4 73 
1d70d     77 8F B2 C4 | 	byte	$49, $5c, $64, $66, $6f, $6f, $6f, $82, $ae, $c2, $a4, $73, $77, $8f, $b2, $c4
1d711     C0 B7 A4 96 
1d715     8A 7C 75 76 
1d719     66 59 52 43 
1d71d     3D 42 52 47 | 	byte	$c0, $b7, $a4, $96, $8a, $7c, $75, $76, $66, $59, $52, $43, $3d, $42, $52, $47
1d721     3C 33 1D 16 
1d725     2A 37 39 4B 
1d729     61 68 5D 4C 
1d72d     55 67 6D 6E | 	byte	$3c, $33, $1d, $16, $2a, $37, $39, $4b, $61, $68, $5d, $4c, $55, $67, $6d, $6e
1d731     77 7F 6E 57 
1d735     4D 5E 81 8A 
1d739     8F 9D 9E 91 
1d73d     94 B1 B9 98 | 	byte	$77, $7f, $6e, $57, $4d, $5e, $81, $8a, $8f, $9d, $9e, $91, $94, $b1, $b9, $98
1d741     67 65 81 A8 
1d745     B3 9B 9E BE 
1d749     CC BB A2 99 
1d74d     98 89 97 A7 | 	byte	$67, $65, $81, $a8, $b3, $9b, $9e, $be, $cc, $bb, $a2, $99, $98, $89, $97, $a7
1d751     B4 BA AC A2 
1d755     99 99 AA B3 
1d759     B3 B1 AB 9E 
1d75d     9A A4 AF B3 | 	byte	$b4, $ba, $ac, $a2, $99, $99, $aa, $b3, $b3, $b1, $ab, $9e, $9a, $a4, $af, $b3
1d761     BB BE B9 BD 
1d765     C0 BF C4 C5 
1d769     AC 9F A0 AB 
1d76d     AF B4 AF 9C | 	byte	$bb, $be, $b9, $bd, $c0, $bf, $c4, $c5, $ac, $9f, $a0, $ab, $af, $b4, $af, $9c
1d771     89 8E 93 7C 
1d775     5D 4B 41 2F 
1d779     2F 30 24 31 
1d77d     4D 4D 47 3A | 	byte	$89, $8e, $93, $7c, $5d, $4b, $41, $2f, $2f, $30, $24, $31, $4d, $4d, $47, $3a
1d781     3D 46 45 44 
1d785     49 54 70 79 
1d789     70 58 6B 67 
1d78d     6C 80 8B 8D | 	byte	$3d, $46, $45, $44, $49, $54, $70, $79, $70, $58, $6b, $67, $6c, $80, $8b, $8d
1d791     8E 83 53 3A 
1d795     2B 2B 47 53 
1d799     54 49 4F 48 
1d79d     46 42 43 58 | 	byte	$8e, $83, $53, $3a, $2b, $2b, $47, $53, $54, $49, $4f, $48, $46, $42, $43, $58
1d7a1     50 43 55 64 
1d7a5     61 6B 80 97 
1d7a9     89 64 66 84 
1d7ad     9A A4 9F 9D | 	byte	$50, $43, $55, $64, $61, $6b, $80, $97, $89, $64, $66, $84, $9a, $a4, $9f, $9d
1d7b1     AD BD BC B7 
1d7b5     C8 E4 DC C8 
1d7b9     B6 B9 C1 BF 
1d7bd     B3 B4 B9 C0 | 	byte	$ad, $bd, $bc, $b7, $c8, $e4, $dc, $c8, $b6, $b9, $c1, $bf, $b3, $b4, $b9, $c0
1d7c1     B7 B6 B8 AB 
1d7c5     8C 91 A1 94 
1d7c9     70 5F 55 59 
1d7cd     59 65 5F 71 | 	byte	$b7, $b6, $b8, $ab, $8c, $91, $a1, $94, $70, $5f, $55, $59, $59, $65, $5f, $71
1d7d1     79 63 51 4C 
1d7d5     65 67 5C 59 
1d7d9     6B 73 84 A0 
1d7dd     A5 93 81 6F | 	byte	$79, $63, $51, $4c, $65, $67, $5c, $59, $6b, $73, $84, $a0, $a5, $93, $81, $6f
1d7e1     78 99 AC A8 
1d7e5     AB C4 CD C3 
1d7e9     A6 91 88 98 
1d7ed     A3 A9 A3 A4 | 	byte	$78, $99, $ac, $a8, $ab, $c4, $cd, $c3, $a6, $91, $88, $98, $a3, $a9, $a3, $a4
1d7f1     9E 88 76 7F 
1d7f5     8E 91 8B 88 
1d7f9     7A 61 44 48 
1d7fd     4F 50 39 37 | 	byte	$9e, $88, $76, $7f, $8e, $91, $8b, $88, $7a, $61, $44, $48, $4f, $50, $39, $37
1d801     4F 68 7B 78 
1d805     73 64 6A 77 
1d809     89 A4 A1 96 
1d80d     91 87 86 9D | 	byte	$4f, $68, $7b, $78, $73, $64, $6a, $77, $89, $a4, $a1, $96, $91, $87, $86, $9d
1d811     A1 86 75 6A 
1d815     56 4A 5E 67 
1d819     68 53 50 64 
1d81d     69 52 3F 28 | 	byte	$a1, $86, $75, $6a, $56, $4a, $5e, $67, $68, $53, $50, $64, $69, $52, $3f, $28
1d821     1D 25 38 3A 
1d825     39 3C 42 54 
1d829     4E 4A 6C 88 
1d82d     87 6E 70 79 | 	byte	$1d, $25, $38, $3a, $39, $3c, $42, $54, $4e, $4a, $6c, $88, $87, $6e, $70, $79
1d831     7C 73 71 79 
1d835     74 70 8C A3 
1d839     A8 97 8E 82 
1d83d     88 89 74 77 | 	byte	$7c, $73, $71, $79, $74, $70, $8c, $a3, $a8, $97, $8e, $82, $88, $89, $74, $77
1d841     82 9F A7 92 
1d845     97 A9 B4 AC 
1d849     AC AE A8 B6 
1d84d     B8 BA BD B1 | 	byte	$82, $9f, $a7, $92, $97, $a9, $b4, $ac, $ac, $ae, $a8, $b6, $b8, $ba, $bd, $b1
1d851     AE BA B4 8E 
1d855     7E 86 82 93 
1d859     B4 B8 B8 B7 
1d85d     C2 CA C1 CA | 	byte	$ae, $ba, $b4, $8e, $7e, $86, $82, $93, $b4, $b8, $b8, $b7, $c2, $ca, $c1, $ca
1d861     D9 DD D4 C7 
1d865     A8 9F AB A8 
1d869     9C 99 96 A8 
1d86d     AF 91 71 6F | 	byte	$d9, $dd, $d4, $c7, $a8, $9f, $ab, $a8, $9c, $99, $96, $a8, $af, $91, $71, $6f
1d871     61 44 45 4C 
1d875     42 42 2A 1E 
1d879     1A 25 2F 42 
1d87d     49 37 38 38 | 	byte	$61, $44, $45, $4c, $42, $42, $2a, $1e, $1a, $25, $2f, $42, $49, $37, $38, $38
1d881     4F 6C 70 6B 
1d885     5F 65 77 79 
1d889     63 68 79 78 
1d88d     73 85 8A 7C | 	byte	$4f, $6c, $70, $6b, $5f, $65, $77, $79, $63, $68, $79, $78, $73, $85, $8a, $7c
1d891     73 5D 45 2A 
1d895     31 4C 62 6C 
1d899     70 5F 54 55 
1d89d     5D 51 5B 65 | 	byte	$73, $5d, $45, $2a, $31, $4c, $62, $6c, $70, $5f, $54, $55, $5d, $51, $5b, $65
1d8a1     6E 81 6A 44 
1d8a5     4B 61 6A 60 
1d8a9     73 82 87 71 
1d8ad     68 83 AA C5 | 	byte	$6e, $81, $6a, $44, $4b, $61, $6a, $60, $73, $82, $87, $71, $68, $83, $aa, $c5
1d8b1     C8 CA CF CF 
1d8b5     BC BA BB BB 
1d8b9     B3 B3 C2 BD 
1d8bd     AC 94 9E BE | 	byte	$c8, $ca, $cf, $cf, $bc, $ba, $bb, $bb, $b3, $b3, $c2, $bd, $ac, $94, $9e, $be
1d8c1     DA CA AD 94 
1d8c5     8E 86 71 6B 
1d8c9     74 8D 8B 80 
1d8cd     7D 76 65 6A | 	byte	$da, $ca, $ad, $94, $8e, $86, $71, $6b, $74, $8d, $8b, $80, $7d, $76, $65, $6a
1d8d1     73 6F 5C 56 
1d8d5     63 72 74 70 
1d8d9     74 76 8A 96 
1d8dd     83 87 95 83 | 	byte	$73, $6f, $5c, $56, $63, $72, $74, $70, $74, $76, $8a, $96, $83, $87, $95, $83
1d8e1     86 95 A2 B3 
1d8e5     CD C2 AF A7 
1d8e9     A2 8F 8F 97 
1d8ed     94 94 9C A1 | 	byte	$86, $95, $a2, $b3, $cd, $c2, $af, $a7, $a2, $8f, $8f, $97, $94, $94, $9c, $a1
1d8f1     92 76 73 7E 
1d8f5     86 90 80 68 
1d8f9     5A 6E 75 5D 
1d8fd     3D 3F 5F 80 | 	byte	$92, $76, $73, $7e, $86, $90, $80, $68, $5a, $6e, $75, $5d, $3d, $3f, $5f, $80
1d901     92 92 81 70 
1d905     7A 7F 80 90 
1d909     AC B1 A6 8D 
1d90d     68 59 5B 63 | 	byte	$92, $92, $81, $70, $7a, $7f, $80, $90, $ac, $b1, $a6, $8d, $68, $59, $5b, $63
1d911     6B 47 41 4C 
1d915     53 5D 51 4E 
1d919     5B 63 5E 49 
1d91d     38 2B 25 33 | 	byte	$6b, $47, $41, $4c, $53, $5d, $51, $4e, $5b, $63, $5e, $49, $38, $2b, $25, $33
1d921     45 35 35 41 
1d925     4D 54 57 66 
1d929     72 63 6B 79 
1d92d     83 89 9C A0 | 	byte	$45, $35, $35, $41, $4d, $54, $57, $66, $72, $63, $6b, $79, $83, $89, $9c, $a0
1d931     97 7D 72 74 
1d935     89 98 97 9D 
1d939     A2 B5 A3 88 
1d93d     86 9E B4 B1 | 	byte	$97, $7d, $72, $74, $89, $98, $97, $9d, $a2, $b5, $a3, $88, $86, $9e, $b4, $b1
1d941     A8 90 78 78 
1d945     85 97 9D 9B 
1d949     9F B4 C0 AE 
1d94d     A0 A9 AB AB | 	byte	$a8, $90, $78, $78, $85, $97, $9d, $9b, $9f, $b4, $c0, $ae, $a0, $a9, $ab, $ab
1d951     9D 92 8D 83 
1d955     94 93 9B B3 
1d959     C8 D0 D3 D5 
1d95d     D5 C9 B6 B9 | 	byte	$9d, $92, $8d, $83, $94, $93, $9b, $b3, $c8, $d0, $d3, $d5, $d5, $c9, $b6, $b9
1d961     C5 C8 BD C6 
1d965     CB AA 8F 89 
1d969     92 96 92 88 
1d96d     7D 6F 5C 5E | 	byte	$c5, $c8, $bd, $c6, $cb, $aa, $8f, $89, $92, $96, $92, $88, $7d, $6f, $5c, $5e
1d971     4D 29 20 30 
1d975     44 34 0F 0D 
1d979     1C 2A 2F 31 
1d97d     3F 56 5D 60 | 	byte	$4d, $29, $20, $30, $44, $34, $0f, $0d, $1c, $2a, $2f, $31, $3f, $56, $5d, $60
1d981     74 6F 4A 44 
1d985     56 69 82 84 
1d989     74 74 72 68 
1d98d     63 6C 6B 6B | 	byte	$74, $6f, $4a, $44, $56, $69, $82, $84, $74, $74, $72, $68, $63, $6c, $6b, $6b
1d991     5F 5A 60 5F 
1d995     47 4F 6C 89 
1d999     9B 98 77 59 
1d99d     46 4F 5C 6F | 	byte	$5f, $5a, $60, $5f, $47, $4f, $6c, $89, $9b, $98, $77, $59, $46, $4f, $5c, $6f
1d9a1     8C 8F 6E 6B 
1d9a5     66 5D 61 64 
1d9a9     70 84 91 8E 
1d9ad     9C A5 AA B0 | 	byte	$8c, $8f, $6e, $6b, $66, $5d, $61, $64, $70, $84, $91, $8e, $9c, $a5, $aa, $b0
1d9b1     A7 AC AA A9 
1d9b5     A9 A7 A3 A8 
1d9b9     A3 A3 B2 D1 
1d9bd     DF E5 D1 B1 | 	byte	$a7, $ac, $aa, $a9, $a9, $a7, $a3, $a8, $a3, $a3, $b2, $d1, $df, $e5, $d1, $b1
1d9c1     91 7B 6C 76 
1d9c5     7E 7A 7C 7C 
1d9c9     7D 83 84 8A 
1d9cd     96 8C 7B 70 | 	byte	$91, $7b, $6c, $76, $7e, $7a, $7c, $7c, $7d, $83, $84, $8a, $96, $8c, $7b, $70
1d9d1     76 74 6E 5C 
1d9d5     6D 8C 93 8F 
1d9d9     9F A4 8F 69 
1d9dd     72 8D 9B 97 | 	byte	$76, $74, $6e, $5c, $6d, $8c, $93, $8f, $9f, $a4, $8f, $69, $72, $8d, $9b, $97
1d9e1     99 A9 B1 A3 
1d9e5     8E 88 8F 85 
1d9e9     79 79 83 98 
1d9ed     97 86 82 8B | 	byte	$99, $a9, $b1, $a3, $8e, $88, $8f, $85, $79, $79, $83, $98, $97, $86, $82, $8b
1d9f1     8F 81 68 71 
1d9f5     67 59 64 6E 
1d9f9     6D 60 67 73 
1d9fd     87 92 89 93 | 	byte	$8f, $81, $68, $71, $67, $59, $64, $6e, $6d, $60, $67, $73, $87, $92, $89, $93
1da01     9E A2 8F 7F 
1da05     81 93 9A 8E 
1da09     75 6C 6B 73 
1da0d     6C 5E 62 54 | 	byte	$9e, $a2, $8f, $7f, $81, $93, $9a, $8e, $75, $6c, $6b, $73, $6c, $5e, $62, $54
1da11     43 46 6B 6F 
1da15     53 49 55 53 
1da19     4E 36 1F 1F 
1da1d     32 3E 3D 40 | 	byte	$43, $46, $6b, $6f, $53, $49, $55, $53, $4e, $36, $1f, $1f, $32, $3e, $3d, $40
1da21     5C 5C 49 3F 
1da25     56 74 72 65 
1da29     73 78 7B 7C 
1da2d     7A 7B 83 7A | 	byte	$5c, $5c, $49, $3f, $56, $74, $72, $65, $73, $78, $7b, $7c, $7a, $7b, $83, $7a
1da31     78 89 97 93 
1da35     91 B3 C5 C2 
1da39     C0 C3 C1 B5 
1da3d     AF A6 90 7E | 	byte	$78, $89, $97, $93, $91, $b3, $c5, $c2, $c0, $c3, $c1, $b5, $af, $a6, $90, $7e
1da41     8E 9E 9C 86 
1da45     8D 99 93 91 
1da49     A0 B4 B8 B1 
1da4d     9F 99 8F 7F | 	byte	$8e, $9e, $9c, $86, $8d, $99, $93, $91, $a0, $b4, $b8, $b1, $9f, $99, $8f, $7f
1da51     84 92 9D AA 
1da55     B4 C7 CC CA 
1da59     CC CD C5 C1 
1da5d     BE B0 A0 A5 | 	byte	$84, $92, $9d, $aa, $b4, $c7, $cc, $ca, $cc, $cd, $c5, $c1, $be, $b0, $a0, $a5
1da61     AA A2 A1 97 
1da65     8B 81 8D A7 
1da69     AE A0 8B 74 
1da6d     67 58 4C 3C | 	byte	$aa, $a2, $a1, $97, $8b, $81, $8d, $a7, $ae, $a0, $8b, $74, $67, $58, $4c, $3c
1da71     30 2B 1E 15 
1da75     21 3B 47 39 
1da79     35 4F 6A 6B 
1da7d     6D 73 6E 5B | 	byte	$30, $2b, $1e, $15, $21, $3b, $47, $39, $35, $4f, $6a, $6b, $6d, $73, $6e, $5b
1da81     42 36 4D 57 
1da85     57 55 5F 55 
1da89     60 72 7C 80 
1da8d     77 73 67 6A | 	byte	$42, $36, $4d, $57, $57, $55, $5f, $55, $60, $72, $7c, $80, $77, $73, $67, $6a
1da91     59 4B 52 5C 
1da95     69 70 6E 69 
1da99     6F 74 70 6D 
1da9d     7D 88 8C 8B | 	byte	$59, $4b, $52, $5c, $69, $70, $6e, $69, $6f, $74, $70, $6d, $7d, $88, $8c, $8b
1daa1     95 A0 86 69 
1daa5     57 60 73 7D 
1daa9     92 A5 A3 98 
1daad     94 93 92 97 | 	byte	$95, $a0, $86, $69, $57, $60, $73, $7d, $92, $a5, $a3, $98, $94, $93, $92, $97
1dab1     99 98 9C 9D 
1dab5     93 91 AA BF 
1dab9     C0 C0 C4 C5 
1dabd     C2 BA AB 96 | 	byte	$99, $98, $9c, $9d, $93, $91, $aa, $bf, $c0, $c0, $c4, $c5, $c2, $ba, $ab, $96
1dac1     7E 68 69 74 
1dac5     76 67 54 5D 
1dac9     70 7D 7D 79 
1dacd     67 6C 8F 98 | 	byte	$7e, $68, $69, $74, $76, $67, $54, $5d, $70, $7d, $7d, $79, $67, $6c, $8f, $98
1dad1     99 A8 A8 99 
1dad5     93 A1 A8 A0 
1dad9     96 8A 7B 7C 
1dadd     7D 85 94 A1 | 	byte	$99, $a8, $a8, $99, $93, $a1, $a8, $a0, $96, $8a, $7b, $7c, $7d, $85, $94, $a1
1dae1     B3 AB 86 61 
1dae5     5D 7E 94 9B 
1dae9     8E 84 71 76 
1daed     81 82 73 67 | 	byte	$b3, $ab, $86, $61, $5d, $7e, $94, $9b, $8e, $84, $71, $76, $81, $82, $73, $67
1daf1     63 73 75 65 
1daf5     69 7E 8F 8A 
1daf9     81 83 7B 7D 
1dafd     85 85 6C 6A | 	byte	$63, $73, $75, $65, $69, $7e, $8f, $8a, $81, $83, $7b, $7d, $85, $85, $6c, $6a
1db01     75 85 91 91 
1db05     8B 83 7B 87 
1db09     86 7C 7B 74 
1db0d     71 65 56 5A | 	byte	$75, $85, $91, $91, $8b, $83, $7b, $87, $86, $7c, $7b, $74, $71, $65, $56, $5a
1db11     6B 7C 7E 5D 
1db15     34 34 30 34 
1db19     31 35 46 51 
1db1d     3C 26 34 54 | 	byte	$6b, $7c, $7e, $5d, $34, $34, $30, $34, $31, $35, $46, $51, $3c, $26, $34, $54
1db21     5C 55 60 60 
1db25     60 76 94 96 
1db29     86 6D 69 87 
1db2d     94 77 51 49 | 	byte	$5c, $55, $60, $60, $60, $76, $94, $96, $86, $6d, $69, $87, $94, $77, $51, $49
1db31     6A 81 85 8A 
1db35     9C BA CA C8 
1db39     C0 C9 D0 C3 
1db3d     C0 C2 B2 92 | 	byte	$6a, $81, $85, $8a, $9c, $ba, $ca, $c8, $c0, $c9, $d0, $c3, $c0, $c2, $b2, $92
1db41     8D AE B1 99 
1db45     81 91 AC AF 
1db49     9E 8B 88 86 
1db4d     8A 74 81 A3 | 	byte	$8d, $ae, $b1, $99, $81, $91, $ac, $af, $9e, $8b, $88, $86, $8a, $74, $81, $a3
1db51     C3 B7 A3 9E 
1db55     AC BD BD BB 
1db59     C2 B5 AE C9 
1db5d     D4 B0 99 91 | 	byte	$c3, $b7, $a3, $9e, $ac, $bd, $bd, $bb, $c2, $b5, $ae, $c9, $d4, $b0, $99, $91
1db61     9B AD A4 8B 
1db65     88 8E 8D 94 
1db69     74 53 55 61 
1db6d     4D 3E 39 47 | 	byte	$9b, $ad, $a4, $8b, $88, $8e, $8d, $94, $74, $53, $55, $61, $4d, $3e, $39, $47
1db71     50 3E 3D 37 
1db75     3C 50 69 76 
1db79     79 84 85 84 
1db7d     75 49 2E 31 | 	byte	$50, $3e, $3d, $37, $3c, $50, $69, $76, $79, $84, $85, $84, $75, $49, $2e, $31
1db81     4D 53 47 46 
1db85     4D 48 46 4F 
1db89     5E 68 6C 5F 
1db8d     4A 48 6A 7E | 	byte	$4d, $53, $47, $46, $4d, $48, $46, $4f, $5e, $68, $6c, $5f, $4a, $48, $6a, $7e
1db91     97 99 8A 6A 
1db95     62 79 97 9B 
1db99     93 7C 65 6F 
1db9d     6F 6B 6D 83 | 	byte	$97, $99, $8a, $6a, $62, $79, $97, $9b, $93, $7c, $65, $6f, $6f, $6b, $6d, $83
1dba1     8D 90 7C 6E 
1dba5     85 9D AC 9B 
1dba9     8B 90 9A A4 
1dbad     8E 77 86 AA | 	byte	$8d, $90, $7c, $6e, $85, $9d, $ac, $9b, $8b, $90, $9a, $a4, $8e, $77, $86, $aa
1dbb1     AA 98 8B 86 
1dbb5     97 9E A5 B4 
1dbb9     CA D0 BF B3 
1dbbd     AB 96 6A 5B | 	byte	$aa, $98, $8b, $86, $97, $9e, $a5, $b4, $ca, $d0, $bf, $b3, $ab, $96, $6a, $5b
1dbc1     59 5C 67 65 
1dbc5     74 8C 8D 7B 
1dbc9     5E 66 7C 84 
1dbcd     8A 94 97 98 | 	byte	$59, $5c, $67, $65, $74, $8c, $8d, $7b, $5e, $66, $7c, $84, $8a, $94, $97, $98
1dbd1     92 81 72 73 
1dbd5     96 A8 A2 93 
1dbd9     85 86 9B A5 
1dbdd     85 7D 82 8D | 	byte	$92, $81, $72, $73, $96, $a8, $a2, $93, $85, $86, $9b, $a5, $85, $7d, $82, $8d
1dbe1     8F 91 9C 9E 
1dbe5     A2 9C 8E 7F 
1dbe9     6F 6B 77 85 
1dbed     82 79 67 5B | 	byte	$8f, $91, $9c, $9e, $a2, $9c, $8e, $7f, $6f, $6b, $77, $85, $82, $79, $67, $5b
1dbf1     57 64 50 56 
1dbf5     6D 6D 64 79 
1dbf9     A0 B1 AE AE 
1dbfd     A1 83 75 86 | 	byte	$57, $64, $50, $56, $6d, $6d, $64, $79, $a0, $b1, $ae, $ae, $a1, $83, $75, $86
1dc01     99 98 76 67 
1dc05     67 63 50 53 
1dc09     5C 60 63 71 
1dc0d     6F 62 59 70 | 	byte	$99, $98, $76, $67, $67, $63, $50, $53, $5c, $60, $63, $71, $6f, $62, $59, $70
1dc11     71 55 3B 3C 
1dc15     53 50 52 60 
1dc19     63 59 49 3B 
1dc1d     38 47 5F 6F | 	byte	$71, $55, $3b, $3c, $53, $50, $52, $60, $63, $59, $49, $3b, $38, $47, $5f, $6f
1dc21     7A 76 64 6A 
1dc25     6C 72 63 4C 
1dc29     45 42 47 4A 
1dc2d     5F 81 9E AC | 	byte	$7a, $76, $64, $6a, $6c, $72, $63, $4c, $45, $42, $47, $4a, $5f, $81, $9e, $ac
1dc31     A0 8B 85 9B 
1dc35     A6 B3 C7 E0 
1dc39     E4 D8 C8 AD 
1dc3d     9F 92 9A B7 | 	byte	$a0, $8b, $85, $9b, $a6, $b3, $c7, $e0, $e4, $d8, $c8, $ad, $9f, $92, $9a, $b7
1dc41     CD B7 95 82 
1dc45     8D 91 7A 75 
1dc49     7C 90 93 97 
1dc4d     99 A3 A5 A2 | 	byte	$cd, $b7, $95, $82, $8d, $91, $7a, $75, $7c, $90, $93, $97, $99, $a3, $a5, $a2
1dc51     A4 B1 C5 D6 
1dc55     DE D8 C4 BA 
1dc59     A8 A9 9D 77 
1dc5d     72 7F 7C 7C | 	byte	$a4, $b1, $c5, $d6, $de, $d8, $c4, $ba, $a8, $a9, $9d, $77, $72, $7f, $7c, $7c
1dc61     7A 82 B5 D1 
1dc65     D0 AA 75 54 
1dc69     47 42 58 61 
1dc6d     58 51 58 43 | 	byte	$7a, $82, $b5, $d1, $d0, $aa, $75, $54, $47, $42, $58, $61, $58, $51, $58, $43
1dc71     1D 0E 21 4B 
1dc75     6F 75 78 7B 
1dc79     83 78 5E 4A 
1dc7d     3D 53 5A 5F | 	byte	$1d, $0e, $21, $4b, $6f, $75, $78, $7b, $83, $78, $5e, $4a, $3d, $53, $5a, $5f
1dc81     65 5E 5D 54 
1dc85     58 52 4C 50 
1dc89     61 72 85 77 
1dc8d     5B 4B 50 60 | 	byte	$65, $5e, $5d, $54, $58, $52, $4c, $50, $61, $72, $85, $77, $5b, $4b, $50, $60
1dc91     56 58 63 75 
1dc95     78 7F 8C A0 
1dc99     B9 B6 93 7A 
1dc9d     84 8E 88 80 | 	byte	$56, $58, $63, $75, $78, $7f, $8c, $a0, $b9, $b6, $93, $7a, $84, $8e, $88, $80
1dca1     81 84 92 B0 
1dca5     B8 9D 78 74 
1dca9     80 90 A1 A3 
1dcad     9C 93 6C 4F | 	byte	$81, $84, $92, $b0, $b8, $9d, $78, $74, $80, $90, $a1, $a3, $9c, $93, $6c, $4f
1dcb1     47 58 90 A9 
1dcb5     C0 CC E0 E4 
1dcb9     E0 D3 BD 9C 
1dcbd     8B 87 8E 91 | 	byte	$47, $58, $90, $a9, $c0, $cc, $e0, $e4, $e0, $d3, $bd, $9c, $8b, $87, $8e, $91
1dcc1     7B 5F 53 72 
1dcc5     7B 54 41 42 
1dcc9     4D 4C 5A 81 
1dccd     A5 B7 9C 7A | 	byte	$7b, $5f, $53, $72, $7b, $54, $41, $42, $4d, $4c, $5a, $81, $a5, $b7, $9c, $7a
1dcd1     7D A1 A9 98 
1dcd5     9B A7 A6 AE 
1dcd9     AE A6 98 8F 
1dcdd     85 8C 97 88 | 	byte	$7d, $a1, $a9, $98, $9b, $a7, $a6, $ae, $ae, $a6, $98, $8f, $85, $8c, $97, $88
1dce1     77 85 A0 9E 
1dce5     86 5F 63 68 
1dce9     7F A3 B5 A3 
1dced     9A 94 75 4C | 	byte	$77, $85, $a0, $9e, $86, $5f, $63, $68, $7f, $a3, $b5, $a3, $9a, $94, $75, $4c
1dcf1     2F 3F 71 85 
1dcf5     85 86 8F 91 
1dcf9     9B 97 88 8B 
1dcfd     80 69 57 63 | 	byte	$2f, $3f, $71, $85, $85, $86, $8f, $91, $9b, $97, $88, $8b, $80, $69, $57, $63
1dd01     68 74 77 72 
1dd05     70 59 54 5D 
1dd09     6B 69 70 68 
1dd0d     72 77 66 59 | 	byte	$68, $74, $77, $72, $70, $59, $54, $5d, $6b, $69, $70, $68, $72, $77, $66, $59
1dd11     57 57 5A 57 
1dd15     4F 3B 3D 3D 
1dd19     39 3C 4F 5C 
1dd1d     4C 5F 81 88 | 	byte	$57, $57, $5a, $57, $4f, $3b, $3d, $3d, $39, $3c, $4f, $5c, $4c, $5f, $81, $88
1dd21     7A 7B 82 7A 
1dd25     6F 40 31 3F 
1dd29     69 7E 8F 8B 
1dd2d     8A 75 5F 57 | 	byte	$7a, $7b, $82, $7a, $6f, $40, $31, $3f, $69, $7e, $8f, $8b, $8a, $75, $5f, $57
1dd31     60 62 66 81 
1dd35     A6 C4 D2 E0 
1dd39     D8 D3 D9 D6 
1dd3d     BB B1 C4 D2 | 	byte	$60, $62, $66, $81, $a6, $c4, $d2, $e0, $d8, $d3, $d9, $d6, $bb, $b1, $c4, $d2
1dd41     BA A8 A5 C9 
1dd45     D9 AA 7B 62 
1dd49     65 78 7D 77 
1dd4d     84 7E 7B 88 | 	byte	$ba, $a8, $a5, $c9, $d9, $aa, $7b, $62, $65, $78, $7d, $77, $84, $7e, $7b, $88
1dd51     A8 C2 DB E4 
1dd55     E5 D3 C0 9F 
1dd59     88 78 85 91 
1dd5d     88 8D 92 B6 | 	byte	$a8, $c2, $db, $e4, $e5, $d3, $c0, $9f, $88, $78, $85, $91, $88, $8d, $92, $b6
1dd61     A4 9A A5 A6 
1dd65     8E 5E 3B 35 
1dd69     3C 4A 49 45 
1dd6d     48 45 3B 30 | 	byte	$a4, $9a, $a5, $a6, $8e, $5e, $3b, $35, $3c, $4a, $49, $45, $48, $45, $3b, $30
1dd71     32 38 47 6E 
1dd75     8A 8A 86 7C 
1dd79     82 9B A2 6F 
1dd7d     41 33 30 2D | 	byte	$32, $38, $47, $6e, $8a, $8a, $86, $7c, $82, $9b, $a2, $6f, $41, $33, $30, $2d
1dd81     36 44 57 66 
1dd85     63 4E 38 48 
1dd89     5E 74 72 79 
1dd8d     73 57 3E 3D | 	byte	$36, $44, $57, $66, $63, $4e, $38, $48, $5e, $74, $72, $79, $73, $57, $3e, $3d
1dd91     5C 78 9C AD 
1dd95     B4 95 8D 93 
1dd99     9F A1 97 85 
1dd9d     78 79 75 70 | 	byte	$5c, $78, $9c, $ad, $b4, $95, $8d, $93, $9f, $a1, $97, $85, $78, $79, $75, $70
1dda1     61 69 8C A7 
1dda5     A9 9F 8F 95 
1dda9     B4 B8 AC 95 
1ddad     8D 86 7D 6C | 	byte	$61, $69, $8c, $a7, $a9, $9f, $8f, $95, $b4, $b8, $ac, $95, $8d, $86, $7d, $6c
1ddb1     64 66 86 98 
1ddb5     9E 9E AE C1 
1ddb9     C7 C2 AF 94 
1ddbd     7B 81 9C 8B | 	byte	$64, $66, $86, $98, $9e, $9e, $ae, $c1, $c7, $c2, $af, $94, $7b, $81, $9c, $8b
1ddc1     7B 78 8A 8B 
1ddc5     60 45 42 53 
1ddc9     6C 8C 9C 8B 
1ddcd     64 6C 7B 90 | 	byte	$7b, $78, $8a, $8b, $60, $45, $42, $53, $6c, $8c, $9c, $8b, $64, $6c, $7b, $90
1ddd1     9A 9F 99 8E 
1ddd5     89 83 79 7E 
1ddd9     A4 BE BC A8 
1dddd     A9 AA 93 8B | 	byte	$9a, $9f, $99, $8e, $89, $83, $79, $7e, $a4, $be, $bc, $a8, $a9, $aa, $93, $8b
1dde1     98 BD D5 C4 
1dde5     9D 7C 73 6E 
1dde9     6F 72 73 86 
1dded     72 61 54 50 | 	byte	$98, $bd, $d5, $c4, $9d, $7c, $73, $6e, $6f, $72, $73, $86, $72, $61, $54, $50
1ddf1     47 59 7D 9E 
1ddf5     9F 9A 8B 84 
1ddf9     92 96 94 8B 
1ddfd     85 84 6C 5F | 	byte	$47, $59, $7d, $9e, $9f, $9a, $8b, $84, $92, $96, $94, $8b, $85, $84, $6c, $5f
1de01     6B 83 87 79 
1de05     5C 52 3C 36 
1de09     3B 46 41 3F 
1de0d     44 55 66 6F | 	byte	$6b, $83, $87, $79, $5c, $52, $3c, $36, $3b, $46, $41, $3f, $44, $55, $66, $6f
1de11     6C 78 78 71 
1de15     63 5C 7E 86 
1de19     7B 6F 67 5F 
1de1d     66 55 3B 35 | 	byte	$6c, $78, $78, $71, $63, $5c, $7e, $86, $7b, $6f, $67, $5f, $66, $55, $3b, $35
1de21     46 4F 59 61 
1de25     68 5E 59 6B 
1de29     80 81 82 78 
1de2d     6B 69 60 5F | 	byte	$46, $4f, $59, $61, $68, $5e, $59, $6b, $80, $81, $82, $78, $6b, $69, $60, $5f
1de31     7C A7 AC 9B 
1de35     9F B8 D3 E5 
1de39     E5 DB B1 A2 
1de3d     B4 BF B4 AF | 	byte	$7c, $a7, $ac, $9b, $9f, $b8, $d3, $e5, $e5, $db, $b1, $a2, $b4, $bf, $b4, $af
1de41     AA B3 BE C3 
1de45     A8 93 8E 98 
1de49     9E A1 A2 97 
1de4d     8F 94 A8 B5 | 	byte	$aa, $b3, $be, $c3, $a8, $93, $8e, $98, $9e, $a1, $a2, $97, $8f, $94, $a8, $b5
1de51     C2 C9 C2 AD 
1de55     8F 7A 70 78 
1de59     8A A4 A5 9A 
1de5d     8C 7C 81 89 | 	byte	$c2, $c9, $c2, $ad, $8f, $7a, $70, $78, $8a, $a4, $a5, $9a, $8c, $7c, $81, $89
1de61     92 A5 AB 98 
1de65     7E 5C 5C 59 
1de69     4A 3D 39 45 
1de6d     50 51 3B 2A | 	byte	$92, $a5, $ab, $98, $7e, $5c, $5c, $59, $4a, $3d, $39, $45, $50, $51, $3b, $2a
1de71     26 3A 5D 6D 
1de75     6D 5F 53 58 
1de79     69 7B 6F 6F 
1de7d     6C 6C 74 7E | 	byte	$26, $3a, $5d, $6d, $6d, $5f, $53, $58, $69, $7b, $6f, $6f, $6c, $6c, $74, $7e
1de81     85 87 83 6A 
1de85     56 51 49 3F 
1de89     33 3D 3A 2A 
1de8d     29 3E 5A 72 | 	byte	$85, $87, $83, $6a, $56, $51, $49, $3f, $33, $3d, $3a, $2a, $29, $3e, $5a, $72
1de91     85 93 9D AF 
1de95     BA A9 9A AA 
1de99     AB A8 A1 9D 
1de9d     94 86 62 53 | 	byte	$85, $93, $9d, $af, $ba, $a9, $9a, $aa, $ab, $a8, $a1, $9d, $94, $86, $62, $53
1dea1     69 94 A3 92 
1dea5     90 90 9C 82 
1dea9     72 71 6A 4A 
1dead     42 5C 73 84 | 	byte	$69, $94, $a3, $92, $90, $90, $9c, $82, $72, $71, $6a, $4a, $42, $5c, $73, $84
1deb1     94 A5 B2 BA 
1deb5     CD E0 E4 E4 
1deb9     BE 97 7F 81 
1debd     88 80 76 6C | 	byte	$94, $a5, $b2, $ba, $cd, $e0, $e4, $e4, $be, $97, $7f, $81, $88, $80, $76, $6c
1dec1     53 59 70 71 
1dec5     7B 78 6A 5D 
1dec9     66 73 6C 6E 
1decd     7A 87 8F A1 | 	byte	$53, $59, $70, $71, $7b, $78, $6a, $5d, $66, $73, $6c, $6e, $7a, $87, $8f, $a1
1ded1     A9 9F 9C 98 
1ded5     9A 97 9E AC 
1ded9     B7 B6 AE 94 
1dedd     7D 7C 6E 65 | 	byte	$a9, $9f, $9c, $98, $9a, $97, $9e, $ac, $b7, $b6, $ae, $94, $7d, $7c, $6e, $65
1dee1     75 8F 91 7D 
1dee5     86 9D AE AA 
1dee9     B5 C2 B3 95 
1deed     7C 6A 55 51 | 	byte	$75, $8f, $91, $7d, $86, $9d, $ae, $aa, $b5, $c2, $b3, $95, $7c, $6a, $55, $51
1def1     62 6D 8E 93 
1def5     78 56 5E 7A 
1def9     7D 78 8D 94 
1defd     7F 72 6D 5E | 	byte	$62, $6d, $8e, $93, $78, $56, $5e, $7a, $7d, $78, $8d, $94, $7f, $72, $6d, $5e
1df01     58 5A 6B 80 
1df05     7D 5D 39 28 
1df09     44 54 43 3D 
1df0d     50 63 63 63 | 	byte	$58, $5a, $6b, $80, $7d, $5d, $39, $28, $44, $54, $43, $3d, $50, $63, $63, $63
1df11     5C 5B 57 4B 
1df15     41 4A 60 71 
1df19     6F 75 8E 8B 
1df1d     72 76 89 81 | 	byte	$5c, $5b, $57, $4b, $41, $4a, $60, $71, $6f, $75, $8e, $8b, $72, $76, $89, $81
1df21     77 68 63 69 
1df25     68 51 4B 5B 
1df29     69 56 43 4B 
1df2d     6C 85 8C 8D | 	byte	$77, $68, $63, $69, $68, $51, $4b, $5b, $69, $56, $43, $4b, $6c, $85, $8c, $8d
1df31     93 8C 91 8F 
1df35     A3 C3 D1 CE 
1df39     C5 CE D7 D4 
1df3d     CF DE E5 D6 | 	byte	$93, $8c, $91, $8f, $a3, $c3, $d1, $ce, $c5, $ce, $d7, $d4, $cf, $de, $e5, $d6
1df41     B9 BC BD B6 
1df45     AE 9C 8E 7F 
1df49     79 6B 5F 77 
1df4d     96 A7 A0 B7 | 	byte	$b9, $bc, $bd, $b6, $ae, $9c, $8e, $7f, $79, $6b, $5f, $77, $96, $a7, $a0, $b7
1df51     D0 DA DB C2 
1df55     AD 9E A4 A8 
1df59     9E A3 8F 6D 
1df5d     63 63 61 5D | 	byte	$d0, $da, $db, $c2, $ad, $9e, $a4, $a8, $9e, $a3, $8f, $6d, $63, $63, $61, $5d
1df61     73 82 86 7E 
1df65     70 5F 5B 4C 
1df69     28 07 13 31 
1df6d     4E 59 4F 64 | 	byte	$73, $82, $86, $7e, $70, $5f, $5b, $4c, $28, $07, $13, $31, $4e, $59, $4f, $64
1df71     6C 6E 72 75 
1df75     85 80 79 6F 
1df79     5E 66 69 62 
1df7d     5F 55 56 46 | 	byte	$6c, $6e, $72, $75, $85, $80, $79, $6f, $5e, $66, $69, $62, $5f, $55, $56, $46
1df81     5B 87 98 79 
1df85     50 43 58 5D 
1df89     65 5C 4A 45 
1df8d     57 68 73 7D | 	byte	$5b, $87, $98, $79, $50, $43, $58, $5d, $65, $5c, $4a, $45, $57, $68, $73, $7d
1df91     89 90 92 84 
1df95     87 9C A5 A4 
1df99     A1 AA 94 97 
1df9d     81 5B 45 4E | 	byte	$89, $90, $92, $84, $87, $9c, $a5, $a4, $a1, $aa, $94, $97, $81, $5b, $45, $4e
1dfa1     6A 88 8E 9B 
1dfa5     97 89 89 87 
1dfa9     73 70 79 79 
1dfad     88 87 73 7D | 	byte	$6a, $88, $8e, $9b, $97, $89, $89, $87, $73, $70, $79, $79, $88, $87, $73, $7d
1dfb1     7E 7F 79 8E 
1dfb5     B4 C4 CF BB 
1dfb9     AE AB A1 A1 
1dfbd     A9 AA 93 6C | 	byte	$7e, $7f, $79, $8e, $b4, $c4, $cf, $bb, $ae, $ab, $a1, $a1, $a9, $aa, $93, $6c
1dfc1     76 82 86 84 
1dfc5     7E 74 64 54 
1dfc9     40 42 5C 7E 
1dfcd     8A 80 92 9A | 	byte	$76, $82, $86, $84, $7e, $74, $64, $54, $40, $42, $5c, $7e, $8a, $80, $92, $9a
1dfd1     8C 80 6C 6E 
1dfd5     8E AA B6 BB 
1dfd9     CC B8 9C A0 
1dfdd     8E 91 8F 97 | 	byte	$8c, $80, $6c, $6e, $8e, $aa, $b6, $bb, $cc, $b8, $9c, $a0, $8e, $91, $8f, $97
1dfe1     9C 9C 88 80 
1dfe5     8B 8F 85 69 
1dfe9     68 86 88 82 
1dfed     7E 6D 5E 71 | 	byte	$9c, $9c, $88, $80, $8b, $8f, $85, $69, $68, $86, $88, $82, $7e, $6d, $5e, $71
1dff1     91 9F 94 80 
1dff5     88 92 91 75 
1dff9     75 7F 8C 86 
1dffd     7B 5C 50 58 | 	byte	$91, $9f, $94, $80, $88, $92, $91, $75, $75, $7f, $8c, $86, $7b, $5c, $50, $58
1e001     6F 6D 5C 55 
1e005     40 2A 17 13 
1e009     12 09 2C 61 
1e00d     7A 74 6B 78 | 	byte	$6f, $6d, $5c, $55, $40, $2a, $17, $13, $12, $09, $2c, $61, $7a, $74, $6b, $78
1e011     7E 66 57 76 
1e015     92 91 80 82 
1e019     8D 84 7B 67 
1e01d     4A 47 58 69 | 	byte	$7e, $66, $57, $76, $92, $91, $80, $82, $8d, $84, $7b, $67, $4a, $47, $58, $69
1e021     7E 7C 6E 4B 
1e025     26 3F 68 69 
1e029     5C 69 92 AD 
1e02d     89 6A 84 98 | 	byte	$7e, $7c, $6e, $4b, $26, $3f, $68, $69, $5c, $69, $92, $ad, $89, $6a, $84, $98
1e031     A5 9C A2 B7 
1e035     C9 CD CB CB 
1e039     C7 BD B4 AD 
1e03d     B7 CD C2 AE | 	byte	$a5, $9c, $a2, $b7, $c9, $cd, $cb, $cb, $c7, $bd, $b4, $ad, $b7, $cd, $c2, $ae
1e041     BF C7 AE 9B 
1e045     AC BF B5 89 
1e049     75 7C 9A B3 
1e04d     C4 CB B8 A0 | 	byte	$bf, $c7, $ae, $9b, $ac, $bf, $b5, $89, $75, $7c, $9a, $b3, $c4, $cb, $b8, $a0
1e051     88 84 90 A6 
1e055     B9 B7 A4 91 
1e059     77 5F 53 73 
1e05d     7E 6B 74 8C | 	byte	$88, $84, $90, $a6, $b9, $b7, $a4, $91, $77, $5f, $53, $73, $7e, $6b, $74, $8c
1e061     92 7A 6D 66 
1e065     63 5C 46 41 
1e069     4C 49 3B 3B 
1e06d     48 4B 54 52 | 	byte	$92, $7a, $6d, $66, $63, $5c, $46, $41, $4c, $49, $3b, $3b, $48, $4b, $54, $52
1e071     49 3E 4A 59 
1e075     68 6A 83 8D 
1e079     72 71 79 70 
1e07d     77 7A 75 8F | 	byte	$49, $3e, $4a, $59, $68, $6a, $83, $8d, $72, $71, $79, $70, $77, $7a, $75, $8f
1e081     A0 AC 9F 7A 
1e085     5A 3C 34 32 
1e089     44 5F 6A 5C 
1e08d     66 71 69 53 | 	byte	$a0, $ac, $9f, $7a, $5a, $3c, $34, $32, $44, $5f, $6a, $5c, $66, $71, $69, $53
1e091     60 88 B3 CC 
1e095     CB BB A8 8F 
1e099     7F 87 A7 A8 
1e09d     99 8C 87 8B | 	byte	$60, $88, $b3, $cc, $cb, $bb, $a8, $8f, $7f, $87, $a7, $a8, $99, $8c, $87, $8b
1e0a1     8A 95 7F 5F 
1e0a5     48 45 45 58 
1e0a9     6E 7C 57 4B 
1e0ad     67 8B 93 8F | 	byte	$8a, $95, $7f, $5f, $48, $45, $45, $58, $6e, $7c, $57, $4b, $67, $8b, $93, $8f
1e0b1     94 98 A0 A9 
1e0b5     C5 E2 E4 E4 
1e0b9     D7 AF 97 97 
1e0bd     9E 96 A1 8E | 	byte	$94, $98, $a0, $a9, $c5, $e2, $e4, $e4, $d7, $af, $97, $97, $9e, $96, $a1, $8e
1e0c1     70 63 73 74 
1e0c5     73 6F 5F 55 
1e0c9     57 6D 7A 85 
1e0cd     8E 7F 70 76 | 	byte	$70, $63, $73, $74, $73, $6f, $5f, $55, $57, $6d, $7a, $85, $8e, $7f, $70, $76
1e0d1     8B 94 B3 D0 
1e0d5     C7 BE BC AE 
1e0d9     9A 7A 73 6E 
1e0dd     6D 7D 7C 72 | 	byte	$8b, $94, $b3, $d0, $c7, $be, $bc, $ae, $9a, $7a, $73, $6e, $6d, $7d, $7c, $72
1e0e1     77 91 93 72 
1e0e5     5F 6C 83 83 
1e0e9     84 9A A2 A7 
1e0ed     9B 9E 8E 81 | 	byte	$77, $91, $93, $72, $5f, $6c, $83, $83, $84, $9a, $a2, $a7, $9b, $9e, $8e, $81
1e0f1     80 7D 92 98 
1e0f5     8F 8C 88 84 
1e0f9     72 61 67 70 
1e0fd     77 69 4B 37 | 	byte	$80, $7d, $92, $98, $8f, $8c, $88, $84, $72, $61, $67, $70, $77, $69, $4b, $37
1e101     3A 4F 3C 26 
1e105     28 26 2D 2B 
1e109     4F 6B 7A 83 
1e10d     6A 49 31 3B | 	byte	$3a, $4f, $3c, $26, $28, $26, $2d, $2b, $4f, $6b, $7a, $83, $6a, $49, $31, $3b
1e111     43 54 73 79 
1e115     65 68 73 80 
1e119     7B 71 7B 86 
1e11d     7F 69 6D 88 | 	byte	$43, $54, $73, $79, $65, $68, $73, $80, $7b, $71, $7b, $86, $7f, $69, $6d, $88
1e121     93 87 6D 61 
1e125     62 5C 72 84 
1e129     88 70 5E 76 
1e12d     90 A4 AB B4 | 	byte	$93, $87, $6d, $61, $62, $5c, $72, $84, $88, $70, $5e, $76, $90, $a4, $ab, $b4
1e131     9F 8D 8D 95 
1e135     9C C3 D8 C0 
1e139     A7 AF B4 CB 
1e13d     D5 D8 E3 DC | 	byte	$9f, $8d, $8d, $95, $9c, $c3, $d8, $c0, $a7, $af, $b4, $cb, $d5, $d8, $e3, $dc
1e141     C0 B6 9F 8D 
1e145     85 70 6F 6F 
1e149     76 8D B0 B0 
1e14d     9E 8A 76 72 | 	byte	$c0, $b6, $9f, $8d, $85, $70, $6f, $6f, $76, $8d, $b0, $b0, $9e, $8a, $76, $72
1e151     94 B5 CA BA 
1e155     96 90 91 87 
1e159     7B 88 91 90 
1e15d     87 68 6A 6B | 	byte	$94, $b5, $ca, $ba, $96, $90, $91, $87, $7b, $88, $91, $90, $87, $68, $6a, $6b
1e161     6B 60 5B 77 
1e165     7D 4F 24 20 
1e169     27 28 2C 47 
1e16d     61 64 53 50 | 	byte	$6b, $60, $5b, $77, $7d, $4f, $24, $20, $27, $28, $2c, $47, $61, $64, $53, $50
1e171     57 5E 6D 8E 
1e175     A2 99 82 5D 
1e179     58 5D 56 73 
1e17d     74 68 72 7A | 	byte	$57, $5e, $6d, $8e, $a2, $99, $82, $5d, $58, $5d, $56, $73, $74, $68, $72, $7a
1e181     69 62 68 5D 
1e185     5C 49 49 5A 
1e189     7E A0 A4 8A 
1e18d     6C 57 73 9A | 	byte	$69, $62, $68, $5d, $5c, $49, $49, $5a, $7e, $a0, $a4, $8a, $6c, $57, $73, $9a
1e191     A7 A7 A3 95 
1e195     86 87 A1 A9 
1e199     B9 BC 95 79 
1e19d     62 62 6B 63 | 	byte	$a7, $a7, $a3, $95, $86, $87, $a1, $a9, $b9, $bc, $95, $79, $62, $62, $6b, $63
1e1a1     62 6E 7A 5F 
1e1a5     51 60 70 76 
1e1a9     68 74 7B 74 
1e1ad     75 7C 7E 89 | 	byte	$62, $6e, $7a, $5f, $51, $60, $70, $76, $68, $74, $7b, $74, $75, $7c, $7e, $89
1e1b1     87 7D 8A BA 
1e1b5     D8 C4 A8 9B 
1e1b9     AD BF B8 A6 
1e1bd     B0 B7 A5 9A | 	byte	$87, $7d, $8a, $ba, $d8, $c4, $a8, $9b, $ad, $bf, $b8, $a6, $b0, $b7, $a5, $9a
1e1c1     95 9D 91 8D 
1e1c5     9E 83 64 5B 
1e1c9     67 69 86 89 
1e1cd     8E 86 8B 8F | 	byte	$95, $9d, $91, $8d, $9e, $83, $64, $5b, $67, $69, $86, $89, $8e, $86, $8b, $8f
1e1d1     89 86 89 85 
1e1d5     83 88 9E A8 
1e1d9     9A 93 A0 9D 
1e1dd     93 8E 99 99 | 	byte	$89, $86, $89, $85, $83, $88, $9e, $a8, $9a, $93, $a0, $9d, $93, $8e, $99, $99
1e1e1     8B 7D 74 68 
1e1e5     68 61 5D 6C 
1e1e9     79 91 8C 78 
1e1ed     69 79 86 93 | 	byte	$8b, $7d, $74, $68, $68, $61, $5d, $6c, $79, $91, $8c, $78, $69, $79, $86, $93
1e1f1     8C 97 AF A5 
1e1f5     91 93 94 8A 
1e1f9     7D 80 80 80 
1e1fd     80 80 80 80 | 	byte	$8c, $97, $af, $a5, $91, $93, $94, $8a, $7d, $80, $80, $80, $80, $80, $80, $80
1e201     80 80 80 80 
1e205     80 80 80 80 
1e209     80 80 80    | 	byte	$80[11]
1e20c     83 6E 6D 6C 
1e210     3F 47 31 28 
1e214     47 60 A1 94 
1e218     BA E1 B0 BA | 	byte	$83, $6e, $6d, $6c, $3f, $47, $31, $28, $47, $60, $a1, $94, $ba, $e1, $b0, $ba
1e21c     8D A2 80 73 
1e220     8D A6 B3 78 
1e224     9F 89 80 9B 
1e228     7F 73 52 76 | 	byte	$8d, $a2, $80, $73, $8d, $a6, $b3, $78, $9f, $89, $80, $9b, $7f, $73, $52, $76
1e22c     75 5E 75 5A 
1e230     44 36 37 31 
1e234     4A 69 AB A7 
1e238     CD E6 B7 B5 | 	byte	$75, $5e, $75, $5a, $44, $36, $37, $31, $4a, $69, $ab, $a7, $cd, $e6, $b7, $b5
1e23c     8E 81 78 67 
1e240     92 B1 A5 82 
1e244     96 8C 7E A4 
1e248     8D 66 58 73 | 	byte	$8e, $81, $78, $67, $92, $b1, $a5, $82, $96, $8c, $7e, $a4, $8d, $66, $58, $73
1e24c     61 6B 5A 50 
1e250     3C 2E 56 3B 
1e254     45 7C A6 C3 
1e258     D7 EA B9 95 | 	byte	$61, $6b, $5a, $50, $3c, $2e, $56, $3b, $45, $7c, $a6, $c3, $d7, $ea, $b9, $95
1e25c     9B 6F 7A 6A 
1e260     93 C4 8F 81 
1e264     9B 92 86 9A 
1e268     94 52 64 8B | 	byte	$9b, $6f, $7a, $6a, $93, $c4, $8f, $81, $9b, $92, $86, $9a, $94, $52, $64, $8b
1e26c     58 5C 5C 51 
1e270     3B 29 61 4C 
1e274     4C 86 A6 E1 
1e278     D4 D3 C1 83 | 	byte	$58, $5c, $5c, $51, $3b, $29, $61, $4c, $4c, $86, $a6, $e1, $d4, $d3, $c1, $83
1e27c     92 7F 5A 6C 
1e280     97 BB 84 86 
1e284     AC 90 8E 90 
1e288     91 4F 57 80 | 	byte	$92, $7f, $5a, $6c, $97, $bb, $84, $86, $ac, $90, $8e, $90, $91, $4f, $57, $80
1e28c     60 57 5B 51 
1e290     47 43 5C 44 
1e294     57 94 C1 EF 
1e298     C8 C3 B2 87 | 	byte	$60, $57, $5b, $51, $47, $43, $5c, $44, $57, $94, $c1, $ef, $c8, $c3, $b2, $87
1e29c     7D 6F 69 6D 
1e2a0     98 AA 61 88 
1e2a4     92 9A 92 94 
1e2a8     86 42 6A 66 | 	byte	$7d, $6f, $69, $6d, $98, $aa, $61, $88, $92, $9a, $92, $94, $86, $42, $6a, $66
1e2ac     56 52 49 59 
1e2b0     5C 57 59 49 
1e2b4     66 B6 DA EC 
1e2b8     CC BD AC 71 | 	byte	$56, $52, $49, $59, $5c, $57, $59, $49, $66, $b6, $da, $ec, $cc, $bd, $ac, $71
1e2bc     82 67 64 71 
1e2c0     9C 94 6C 99 
1e2c4     99 A2 A0 8F 
1e2c8     75 4F 6B 5C | 	byte	$82, $67, $64, $71, $9c, $94, $6c, $99, $99, $a2, $a0, $8f, $75, $4f, $6b, $5c
1e2cc     48 39 41 67 
1e2d0     54 63 46 51 
1e2d4     7F C0 E7 DF 
1e2d8     D6 C5 A3 77 | 	byte	$48, $39, $41, $67, $54, $63, $46, $51, $7f, $c0, $e7, $df, $d6, $c5, $a3, $77
1e2dc     68 75 61 6B 
1e2e0     A1 80 73 93 
1e2e4     9D 9E A7 90 
1e2e8     66 5B 60 57 | 	byte	$68, $75, $61, $6b, $a1, $80, $73, $93, $9d, $9e, $a7, $90, $66, $5b, $60, $57
1e2ec     48 33 51 68 
1e2f0     5D 5A 52 5A 
1e2f4     9B D3 F5 DE 
1e2f8     C5 C3 90 6B | 	byte	$48, $33, $51, $68, $5d, $5a, $52, $5a, $9b, $d3, $f5, $de, $c5, $c3, $90, $6b
1e2fc     5E 79 56 78 
1e300     99 81 7A 96 
1e304     AE A7 AA 80 
1e308     62 64 5A 52 | 	byte	$5e, $79, $56, $78, $99, $81, $7a, $96, $ae, $a7, $aa, $80, $62, $64, $5a, $52
1e30c     35 36 5F 71 
1e310     5A 5B 64 6C 
1e314     A3 DD FF DC 
1e318     B0 AF 6E 69 | 	byte	$35, $36, $5f, $71, $5a, $5b, $64, $6c, $a3, $dd, $ff, $dc, $b0, $af, $6e, $69
1e31c     6F 69 60 6B 
1e320     9D 6E 74 9B 
1e324     B5 B3 8C 88 
1e328     69 5A 50 3C | 	byte	$6f, $69, $60, $6b, $9d, $6e, $74, $9b, $b5, $b3, $8c, $88, $69, $5a, $50, $3c
1e32c     36 49 6B 72 
1e330     54 51 6B 7F 
1e334     BC E1 FD DA 
1e338     A7 A6 6D 64 | 	byte	$36, $49, $6b, $72, $54, $51, $6b, $7f, $bc, $e1, $fd, $da, $a7, $a6, $6d, $64
1e33c     66 5D 61 7D 
1e340     8D 6F 7A AC 
1e344     B0 A9 9C 8A 
1e348     58 5B 36 3B | 	byte	$66, $5d, $61, $7d, $8d, $6f, $7a, $ac, $b0, $a9, $9c, $8a, $58, $5b, $36, $3b
1e34c     35 51 7B 65 
1e350     53 50 6D 90 
1e354     C3 FF FB C2 
1e358     B2 8E 61 62 | 	byte	$35, $51, $7b, $65, $53, $50, $6d, $90, $c3, $ff, $fb, $c2, $b2, $8e, $61, $62
1e35c     5F 54 62 8A 
1e360     81 72 92 BD 
1e364     B6 8B AF 8B 
1e368     56 48 35 3F | 	byte	$5f, $54, $62, $8a, $81, $72, $92, $bd, $b6, $8b, $af, $8b, $56, $48, $35, $3f
1e36c     39 60 68 59 
1e370     67 54 79 9E 
1e374     D6 FF DB B1 
1e378     A5 91 64 55 | 	byte	$39, $60, $68, $59, $67, $54, $79, $9e, $d6, $ff, $db, $b1, $a5, $91, $64, $55
1e37c     5C 52 62 88 
1e380     79 88 A6 BE 
1e384     AC A2 9D 6D 
1e388     56 43 34 46 | 	byte	$5c, $52, $62, $88, $79, $88, $a6, $be, $ac, $a2, $9d, $6d, $56, $43, $34, $46
1e38c     4C 67 6D 5D 
1e390     71 5B 86 C0 
1e394     E9 F2 C7 AD 
1e398     8E 7D 64 49 | 	byte	$4c, $67, $6d, $5d, $71, $5b, $86, $c0, $e9, $f2, $c7, $ad, $8e, $7d, $64, $49
1e39c     5B 4C 67 89 
1e3a0     77 8B AE B7 
1e3a4     AA A8 96 5C 
1e3a8     48 43 32 4A | 	byte	$5b, $4c, $67, $89, $77, $8b, $ae, $b7, $aa, $a8, $96, $5c, $48, $43, $32, $4a
1e3ac     4B 69 6F 6C 
1e3b0     6B 65 89 E3 
1e3b4     F4 E9 D9 A1 
1e3b8     85 6F 59 59 | 	byte	$4b, $69, $6f, $6c, $6b, $65, $89, $e3, $f4, $e9, $d9, $a1, $85, $6f, $59, $59
1e3bc     4A 58 80 83 
1e3c0     7B 96 BE A2 
1e3c4     AC AE 7C 4C 
1e3c8     52 2F 37 4A | 	byte	$4a, $58, $80, $83, $7b, $96, $be, $a2, $ac, $ae, $7c, $4c, $52, $2f, $37, $4a
1e3cc     5A 6C 6E 6C 
1e3d0     63 6F A0 E9 
1e3d4     F4 D7 CC 9E 
1e3d8     78 67 52 4D | 	byte	$5a, $6c, $6e, $6c, $63, $6f, $a0, $e9, $f4, $d7, $cc, $9e, $78, $67, $52, $4d
1e3dc     3F 60 82 8D 
1e3e0     7F AA BC A9 
1e3e4     AF B1 6A 51 
1e3e8     3C 2C 3B 42 | 	byte	$3f, $60, $82, $8d, $7f, $aa, $bc, $a9, $af, $b1, $6a, $51, $3c, $2c, $3b, $42
1e3ec     5C 6C 6D 6B 
1e3f0     5B 8A B5 E3 
1e3f4     F9 D7 B8 97 
1e3f8     75 5F 3F 45 | 	byte	$5c, $6c, $6d, $6b, $5b, $8a, $b5, $e3, $f9, $d7, $b8, $97, $75, $5f, $3f, $45
1e3fc     4E 61 83 8D 
1e400     A5 AA BA BD 
1e404     9F 9F 65 51 
1e408     38 24 4B 55 | 	byte	$4e, $61, $83, $8d, $a5, $aa, $ba, $bd, $9f, $9f, $65, $51, $38, $24, $4b, $55
1e40c     5F 72 70 64 
1e410     61 9F CE DA 
1e414     F9 D9 9E 86 
1e418     6A 52 43 3C | 	byte	$5f, $72, $70, $64, $61, $9f, $ce, $da, $f9, $d9, $9e, $86, $6a, $52, $43, $3c
1e41c     52 66 89 93 
1e420     B1 B4 B8 BF 
1e424     9F 86 52 43 
1e428     36 2F 48 59 | 	byte	$52, $66, $89, $93, $b1, $b4, $b8, $bf, $9f, $86, $52, $43, $36, $2f, $48, $59
1e42c     65 7C 69 5E 
1e430     80 A9 DF EB 
1e434     E4 CF 97 85 
1e438     5F 43 52 31 | 	byte	$65, $7c, $69, $5e, $80, $a9, $df, $eb, $e4, $cf, $97, $85, $5f, $43, $52, $31
1e43c     4F 78 90 9C 
1e440     A2 B8 C0 A7 
1e444     99 82 4A 35 
1e448     36 35 44 53 | 	byte	$4f, $78, $90, $9c, $a2, $b8, $c0, $a7, $99, $82, $4a, $35, $36, $35, $44, $53
1e44c     7D 70 62 68 
1e450     8F A7 D9 F8 
1e454     E2 BF 8C 81 
1e458     4C 3E 4B 3E | 	byte	$7d, $70, $62, $68, $8f, $a7, $d9, $f8, $e2, $bf, $8c, $81, $4c, $3e, $4b, $3e
1e45c     59 86 9A 98 
1e460     AD C6 BC AA 
1e464     93 70 43 2F 
1e468     32 41 40 5E | 	byte	$59, $86, $9a, $98, $ad, $c6, $bc, $aa, $93, $70, $43, $2f, $32, $41, $40, $5e
1e46c     85 69 61 69 
1e470     9B B6 E5 F1 
1e474     CB BF 87 64 
1e478     42 38 44 42 | 	byte	$85, $69, $61, $69, $9b, $b6, $e5, $f1, $cb, $bf, $87, $64, $42, $38, $44, $42
1e47c     67 92 9E B0 
1e480     B7 C7 C2 9F 
1e484     99 54 34 3B 
1e488     28 49 4D 73 | 	byte	$67, $92, $9e, $b0, $b7, $c7, $c2, $9f, $99, $54, $34, $3b, $28, $49, $4d, $73
1e48c     82 56 73 79 
1e490     A3 D2 E0 F7 
1e494     BF A3 93 4B 
1e498     3B 38 44 4B | 	byte	$82, $56, $73, $79, $a3, $d2, $e0, $f7, $bf, $a3, $93, $4b, $3b, $38, $44, $4b
1e49c     64 9F A2 AE 
1e4a0     C1 D0 B9 96 
1e4a4     87 42 2D 31 
1e4a8     2F 54 51 7A | 	byte	$64, $9f, $a2, $ae, $c1, $d0, $b9, $96, $87, $42, $2d, $31, $2f, $54, $51, $7a
1e4ac     7D 58 74 8D 
1e4b0     B4 CC E0 F1 
1e4b4     C9 A0 75 44 
1e4b8     3B 3E 46 56 | 	byte	$7d, $58, $74, $8d, $b4, $cc, $e0, $f1, $c9, $a0, $75, $44, $3b, $3e, $46, $56
1e4bc     6F A5 AF B1 
1e4c0     C7 CA BB 8C 
1e4c4     6E 32 26 24 
1e4c8     35 56 63 7C | 	byte	$6f, $a5, $af, $b1, $c7, $ca, $bb, $8c, $6e, $32, $26, $24, $35, $56, $63, $7c
1e4cc     71 60 6F 98 
1e4d0     C1 CB DF E7 
1e4d4     C7 8D 6C 44 
1e4d8     31 42 4C 65 | 	byte	$71, $60, $6f, $98, $c1, $cb, $df, $e7, $c7, $8d, $6c, $44, $31, $42, $4c, $65
1e4dc     7D B3 B0 AD 
1e4e0     C2 CE AB 7F 
1e4e4     64 2F 17 26 
1e4e8     44 5A 6E 78 | 	byte	$7d, $b3, $b0, $ad, $c2, $ce, $ab, $7f, $64, $2f, $17, $26, $44, $5a, $6e, $78
1e4ec     6F 62 78 AE 
1e4f0     B6 C2 ED DE 
1e4f4     B0 7D 70 38 
1e4f8     26 3C 5E 67 | 	byte	$6f, $62, $78, $ae, $b6, $c2, $ed, $de, $b0, $7d, $70, $38, $26, $3c, $5e, $67
1e4fc     A2 B2 B5 B9 
1e500     C4 CD A3 78 
1e504     53 2B 13 27 
1e508     55 66 6B 73 | 	byte	$a2, $b2, $b5, $b9, $c4, $cd, $a3, $78, $53, $2b, $13, $27, $55, $66, $6b, $73
1e50c     73 75 88 B0 
1e510     C5 D3 E9 D2 
1e514     95 7C 56 32 
1e518     23 3A 67 73 | 	byte	$73, $75, $88, $b0, $c5, $d3, $e9, $d2, $95, $7c, $56, $32, $23, $3a, $67, $73
1e51c     A7 AF BC BC 
1e520     C0 C0 9A 70 
1e524     3D 18 21 31 
1e528     64 6F 71 7E | 	byte	$a7, $af, $bc, $bc, $c0, $c0, $9a, $70, $3d, $18, $21, $31, $64, $6f, $71, $7e
1e52c     78 7C 9A BA 
1e530     D2 D6 E5 BD 
1e534     8A 73 44 29 
1e538     26 48 6D 83 | 	byte	$78, $7c, $9a, $ba, $d2, $d6, $e5, $bd, $8a, $73, $44, $29, $26, $48, $6d, $83
1e53c     AA B8 B7 B7 
1e540     C7 BD 8A 62 
1e544     25 15 23 45 
1e548     6A 64 77 87 | 	byte	$aa, $b8, $b7, $b7, $c7, $bd, $8a, $62, $25, $15, $23, $45, $6a, $64, $77, $87
1e54c     7D 7F A0 BE 
1e550     DE D0 D5 BA 
1e554     81 5E 2A 29 
1e558     32 4D 7C 98 | 	byte	$7d, $7f, $a0, $be, $de, $d0, $d5, $ba, $81, $5e, $2a, $29, $32, $4d, $7c, $98
1e55c     B6 BA C0 C3 
1e560     BD B5 7D 49 
1e564     15 1B 30 45 
1e568     65 79 76 85 | 	byte	$b6, $ba, $c0, $c3, $bd, $b5, $7d, $49, $15, $1b, $30, $45, $65, $79, $76, $85
1e56c     89 7B A9 C7 
1e570     D3 D1 BE B3 
1e574     77 48 23 26 
1e578     41 4B 89 A4 | 	byte	$89, $7b, $a9, $c7, $d3, $d1, $be, $b3, $77, $48, $23, $26, $41, $4b, $89, $a4
1e57c     BC BF C7 C1 
1e580     C5 A0 6E 39 
1e584     14 28 36 52 
1e588     68 7A 86 82 | 	byte	$bc, $bf, $c7, $c1, $c5, $a0, $6e, $39, $14, $28, $36, $52, $68, $7a, $86, $82
1e58c     83 8F B2 CA 
1e590     D0 DA B7 97 
1e594     68 3E 26 2C 
1e598     3F 5F 8E B6 | 	byte	$83, $8f, $b2, $ca, $d0, $da, $b7, $97, $68, $3e, $26, $2c, $3f, $5f, $8e, $b6
1e59c     B8 C8 C6 C4 
1e5a0     B2 8B 5D 2C 
1e5a4     17 2B 3C 54 
1e5a8     6D 81 88 80 | 	byte	$b8, $c8, $c6, $c4, $b2, $8b, $5d, $2c, $17, $2b, $3c, $54, $6d, $81, $88, $80
1e5ac     92 98 B8 CA 
1e5b0     D9 D8 AB 7F 
1e5b4     66 38 29 2D 
1e5b8     4C 68 9C C1 | 	byte	$92, $98, $b8, $ca, $d9, $d8, $ab, $7f, $66, $38, $29, $2d, $4c, $68, $9c, $c1
1e5bc     B8 C7 C9 C6 
1e5c0     A6 77 51 27 
1e5c4     13 29 40 5C 
1e5c8     6A 8E 88 83 | 	byte	$b8, $c7, $c9, $c6, $a6, $77, $51, $27, $13, $29, $40, $5c, $6a, $8e, $88, $83
1e5cc     90 9D B4 DC 
1e5d0     D4 CE 9E 74 
1e5d4     51 26 32 3B 
1e5d8     53 7E B0 C0 | 	byte	$90, $9d, $b4, $dc, $d4, $ce, $9e, $74, $51, $26, $32, $3b, $53, $7e, $b0, $c0
1e5dc     BD CA D3 B3 
1e5e0     9F 72 46 1A 
1e5e4     1B 2E 4F 50 
1e5e8     7E 93 89 8C | 	byte	$bd, $ca, $d3, $b3, $9f, $72, $46, $1a, $1b, $2e, $4f, $50, $7e, $93, $89, $8c
1e5ec     92 8E B4 D8 
1e5f0     D4 C0 8B 67 
1e5f4     49 2A 2B 45 
1e5f8     62 8E B4 CB | 	byte	$92, $8e, $b4, $d8, $d4, $c0, $8b, $67, $49, $2a, $2b, $45, $62, $8e, $b4, $cb
1e5fc     C0 CF C7 AA 
1e600     85 62 3F 22 
1e604     27 3F 51 59 
1e608     84 98 90 8E | 	byte	$c0, $cf, $c7, $aa, $85, $62, $3f, $22, $27, $3f, $51, $59, $84, $98, $90, $8e
1e60c     8C 9A BE CA 
1e610     D5 AB 7C 62 
1e614     40 20 35 4C 
1e618     6F 98 C4 C7 | 	byte	$8c, $9a, $be, $ca, $d5, $ab, $7c, $62, $40, $20, $35, $4c, $6f, $98, $c4, $c7
1e61c     C3 D3 C3 A1 
1e620     77 51 36 20 
1e624     2E 42 59 69 
1e628     87 9F 96 8F | 	byte	$c3, $d3, $c3, $a1, $77, $51, $36, $20, $2e, $42, $59, $69, $87, $9f, $96, $8f
1e62c     87 A2 CB C9 
1e630     CC A1 70 54 
1e634     36 2A 2F 59 
1e638     84 A0 C4 C1 | 	byte	$87, $a2, $cb, $c9, $cc, $a1, $70, $54, $36, $2a, $2f, $59, $84, $a0, $c4, $c1
1e63c     D1 CC B5 95 
1e640     64 46 2A 28 
1e644     34 38 63 7D 
1e648     94 A2 99 90 | 	byte	$d1, $cc, $b5, $95, $64, $46, $2a, $28, $34, $38, $63, $7d, $94, $a2, $99, $90
1e64c     8A A5 CC C8 
1e650     C8 97 63 47 
1e654     2D 2C 3D 65 
1e658     90 AF C4 C7 | 	byte	$8a, $a5, $cc, $c8, $c8, $97, $63, $47, $2d, $2c, $3d, $65, $90, $af, $c4, $c7
1e65c     D7 C2 B4 90 
1e660     57 3F 21 26 
1e664     30 40 67 86 
1e668     A4 A5 97 8A | 	byte	$d7, $c2, $b4, $90, $57, $3f, $21, $26, $30, $40, $67, $86, $a4, $a5, $97, $8a
1e66c     8B AD C2 C8 
1e670     B8 86 5C 41 
1e674     24 31 51 6E 
1e678     91 B4 CA CC | 	byte	$8b, $ad, $c2, $c8, $b8, $86, $5c, $41, $24, $31, $51, $6e, $91, $b4, $ca, $cc
1e67c     C7 BE 9E 88 
1e680     54 38 21 27 
1e684     33 4A 73 96 
1e688     AD A2 9C 85 | 	byte	$c7, $be, $9e, $88, $54, $38, $21, $27, $33, $4a, $73, $96, $ad, $a2, $9c, $85
1e68c     92 AE BF CA 
1e690     A9 7D 57 31 
1e694     2E 39 5D 6C 
1e698     9B BF C9 CF | 	byte	$92, $ae, $bf, $ca, $a9, $7d, $57, $31, $2e, $39, $5d, $6c, $9b, $bf, $c9, $cf
1e69c     C4 B3 91 79 
1e6a0     4A 34 21 31 
1e6a4     35 53 7A A7 
1e6a8     AE 9B 99 8E | 	byte	$c4, $b3, $91, $79, $4a, $34, $21, $31, $35, $53, $7a, $a7, $ae, $9b, $99, $8e
1e6ac     94 B2 BD C7 
1e6b0     9C 73 51 33 
1e6b4     2D 4B 68 71 
1e6b8     96 CC CB C2 | 	byte	$94, $b2, $bd, $c7, $9c, $73, $51, $33, $2d, $4b, $68, $71, $96, $cc, $cb, $c2
1e6bc     CB AA 8D 64 
1e6c0     49 32 1E 30 
1e6c4     42 5E 8E A7 
1e6c8     B8 92 96 95 | 	byte	$cb, $aa, $8d, $64, $49, $32, $1e, $30, $42, $5e, $8e, $a7, $b8, $92, $96, $95
1e6cc     96 B8 BD C1 
1e6d0     89 5B 4C 3A 
1e6d4     33 51 6F 7D 
1e6d8     94 CE C9 C5 | 	byte	$96, $b8, $bd, $c1, $89, $5b, $4c, $3a, $33, $51, $6f, $7d, $94, $ce, $c9, $c5
1e6dc     BB AF 8B 56 
1e6e0     45 2D 24 28 
1e6e4     49 77 94 AF 
1e6e8     BE 94 86 84 | 	byte	$bb, $af, $8b, $56, $45, $2d, $24, $28, $49, $77, $94, $af, $be, $94, $86, $84
1e6ec     A5 B1 B5 B8 
1e6f0     88 47 40 3F 
1e6f4     46 4D 70 86 
1e6f8     A8 C6 C6 CB | 	byte	$a5, $b1, $b5, $b8, $88, $47, $40, $3f, $46, $4d, $70, $86, $a8, $c6, $c6, $cb
1e6fc     B3 A7 84 54 
1e700     3B 32 28 2C 
1e704     4F 87 9D B6 
1e708     B4 99 79 88 | 	byte	$b3, $a7, $84, $54, $3b, $32, $28, $2c, $4f, $87, $9d, $b6, $b4, $99, $79, $88
1e70c     A1 B4 B5 A4 
1e710     79 4C 40 49 
1e714     49 52 67 8F 
1e718     B0 BF D2 C3 | 	byte	$a1, $b4, $b5, $a4, $79, $4c, $40, $49, $49, $52, $67, $8f, $b0, $bf, $d2, $c3
1e71c     AE 91 81 51 
1e720     38 30 2E 2D 
1e724     61 8A B1 BB 
1e728     AF 95 7A 8B | 	byte	$ae, $91, $81, $51, $38, $30, $2e, $2d, $61, $8a, $b1, $bb, $af, $95, $7a, $8b
1e72c     AB B3 B2 8D 
1e730     6A 4F 3A 51 
1e734     51 59 6D 95 
1e738     B8 C1 CC C3 | 	byte	$ab, $b3, $b2, $8d, $6a, $4f, $3a, $51, $51, $59, $6d, $95, $b8, $c1, $cc, $c3
1e73c     A5 92 75 4C 
1e740     35 2C 2A 3A 
1e744     6B 96 B6 BF 
1e748     A6 8F 7F 8F | 	byte	$a5, $92, $75, $4c, $35, $2c, $2a, $3a, $6b, $96, $b6, $bf, $a6, $8f, $7f, $8f
1e74c     AC B2 AD 83 
1e750     62 4D 50 54 
1e754     55 5F 70 94 
1e758     BA C4 C7 BB | 	byte	$ac, $b2, $ad, $83, $62, $4d, $50, $54, $55, $5f, $70, $94, $ba, $c4, $c7, $bb
1e75c     A1 8F 67 4A 
1e760     38 2B 2C 48 
1e764     7E 9C BC C7 
1e768     9A 88 81 9A | 	byte	$a1, $8f, $67, $4a, $38, $2b, $2c, $48, $7e, $9c, $bc, $c7, $9a, $88, $81, $9a
1e76c     B4 A4 99 83 
1e770     50 4D 56 56 
1e774     55 5B 7B 9D 
1e778     B4 C4 C1 B9 | 	byte	$b4, $a4, $99, $83, $50, $4d, $56, $56, $55, $5b, $7b, $9d, $b4, $c4, $c1, $b9
1e77c     9B 84 6A 46 
1e780     35 2C 30 50 
1e784     7D AC C2 B7 
1e788     97 82 85 9D | 	byte	$9b, $84, $6a, $46, $35, $2c, $30, $50, $7d, $ac, $c2, $b7, $97, $82, $85, $9d
1e78c     AC A7 86 79 
1e790     55 51 53 56 
1e794     5B 5E 7D A2 
1e798     B5 BD C2 B4 | 	byte	$ac, $a7, $86, $79, $55, $51, $53, $56, $5b, $5e, $7d, $a2, $b5, $bd, $c2, $b4
1e79c     95 79 68 45 
1e7a0     33 2D 3D 63 
1e7a4     82 B3 CB A9 
1e7a8     93 83 90 9F | 	byte	$95, $79, $68, $45, $33, $2d, $3d, $63, $82, $b3, $cb, $a9, $93, $83, $90, $9f
1e7ac     A1 A2 81 6D 
1e7b0     5D 5D 57 4D 
1e7b4     59 6E 74 A9 
1e7b8     BA BD B8 B3 | 	byte	$a1, $a2, $81, $6d, $5d, $5d, $57, $4d, $59, $6e, $74, $a9, $ba, $bd, $b8, $b3
1e7bc     94 77 5C 47 
1e7c0     35 35 42 69 
1e7c4     91 AF C5 A0 
1e7c8     8E 82 A1 9F | 	byte	$94, $77, $5c, $47, $35, $35, $42, $69, $91, $af, $c5, $a0, $8e, $82, $a1, $9f
1e7cc     97 99 7F 65 
1e7d0     5F 5F 5B 4D 
1e7d4     63 6C 83 A7 
1e7d8     B9 BA B2 A7 | 	byte	$97, $99, $7f, $65, $5f, $5f, $5b, $4d, $63, $6c, $83, $a7, $b9, $ba, $b2, $a7
1e7dc     93 71 59 41 
1e7e0     3D 38 46 7E 
1e7e4     98 B3 BC 9F 
1e7e8     91 86 9C A5 | 	byte	$93, $71, $59, $41, $3d, $38, $46, $7e, $98, $b3, $bc, $9f, $91, $86, $9c, $a5
1e7ec     88 95 7A 63 
1e7f0     64 57 63 50 
1e7f4     5D 73 90 A5 
1e7f8     AC BA BA A1 | 	byte	$88, $95, $7a, $63, $64, $57, $63, $50, $5d, $73, $90, $a5, $ac, $ba, $ba, $a1
1e7fc     8E 71 5E 3B 
1e800     37 38 59 83 
1e804     9F B4 B7 9A 
1e808     8F 94 9E 9B | 	byte	$8e, $71, $5e, $3b, $37, $38, $59, $83, $9f, $b4, $b7, $9a, $8f, $94, $9e, $9b
1e80c     8E 87 75 68 
1e810     62 51 5B 54 
1e814     5E 7C 95 AC 
1e818     AD B5 B3 9E | 	byte	$8e, $87, $75, $68, $62, $51, $5b, $54, $5e, $7c, $95, $ac, $ad, $b5, $b3, $9e
1e81c     8E 73 53 39 
1e820     31 43 62 85 
1e824     A3 B5 AD 99 
1e828     94 9E 9B 93 | 	byte	$8e, $73, $53, $39, $31, $43, $62, $85, $a3, $b5, $ad, $99, $94, $9e, $9b, $93
1e82c     8D 7F 76 68 
1e830     5D 5A 52 54 
1e834     68 7D 9A A6 
1e838     AC B3 A2 9B | 	byte	$8d, $7f, $76, $68, $5d, $5a, $52, $54, $68, $7d, $9a, $a6, $ac, $b3, $a2, $9b
1e83c     8B 6C 52 3A 
1e840     38 4C 6A 8C 
1e844     A1 B3 A8 96 
1e848     96 9C 97 8F | 	byte	$8b, $6c, $52, $3a, $38, $4c, $6a, $8c, $a1, $b3, $a8, $96, $96, $9c, $97, $8f
1e84c     89 80 79 65 
1e850     5F 5D 50 54 
1e854     6D 82 9F A7 
1e858     B3 A9 9B A3 | 	byte	$89, $80, $79, $65, $5f, $5d, $50, $54, $6d, $82, $9f, $a7, $b3, $a9, $9b, $a3
1e85c     88 63 47 42 
1e860     44 4D 73 95 
1e864     A1 AB 9D A2 
1e868     97 99 9E 8B | 	byte	$88, $63, $47, $42, $44, $4d, $73, $95, $a1, $ab, $9d, $a2, $97, $99, $9e, $8b
1e86c     88 82 73 65 
1e870     57 5D 52 5A 
1e874     72 88 A0 A0 
1e878     AB A5 9D 9C | 	byte	$88, $82, $73, $65, $57, $5d, $52, $5a, $72, $88, $a0, $a0, $ab, $a5, $9d, $9c
1e87c     85 5F 49 42 
1e880     4A 59 72 93 
1e884     A0 AC A4 98 
1e888     9B 95 99 8A | 	byte	$85, $5f, $49, $42, $4a, $59, $72, $93, $a0, $ac, $a4, $98, $9b, $95, $99, $8a
1e88c     8B 84 70 64 
1e890     58 52 54 5D 
1e894     75 8D 98 A9 
1e898     A1 9B A6 9E | 	byte	$8b, $84, $70, $64, $58, $52, $54, $5d, $75, $8d, $98, $a9, $a1, $9b, $a6, $9e
1e89c     79 5B 51 4A 
1e8a0     48 63 7A 8E 
1e8a4     A2 AA A1 93 
1e8a8     99 9D 94 88 | 	byte	$79, $5b, $51, $4a, $48, $63, $7a, $8e, $a2, $aa, $a1, $93, $99, $9d, $94, $88
1e8ac     8D 86 71 5E 
1e8b0     55 50 52 60 
1e8b4     7F 90 9A A7 
1e8b8     A0 9B A3 9C | 	byte	$8d, $86, $71, $5e, $55, $50, $52, $60, $7f, $90, $9a, $a7, $a0, $9b, $a3, $9c
1e8bc     78 57 52 55 
1e8c0     4E 64 7A 92 
1e8c4     A1 A7 A4 93 
1e8c8     9B 9F 93 8B | 	byte	$78, $57, $52, $55, $4e, $64, $7a, $92, $a1, $a7, $a4, $93, $9b, $9f, $93, $8b
1e8cc     83 82 73 56 
1e8d0     4F 55 59 5D 
1e8d4     80 94 9B A1 
1e8d8     9D 9C A1 93 | 	byte	$83, $82, $73, $56, $4f, $55, $59, $5d, $80, $94, $9b, $a1, $9d, $9c, $a1, $93
1e8dc     77 56 59 57 
1e8e0     56 67 79 95 
1e8e4     A4 A8 A1 95 
1e8e8     9A A5 8F 8C | 	byte	$77, $56, $59, $57, $56, $67, $79, $95, $a4, $a8, $a1, $95, $9a, $a5, $8f, $8c
1e8ec     8A 87 66 51 
1e8f0     55 55 54 66 
1e8f4     83 91 95 A7 
1e8f8     98 98 A0 8F | 	byte	$8a, $87, $66, $51, $55, $55, $54, $66, $83, $91, $95, $a7, $98, $98, $a0, $8f
1e8fc     71 52 64 5C 
1e900     55 6C 7E 97 
1e904     A3 A1 9F 92 
1e908     A2 A5 8D 8B | 	byte	$71, $52, $64, $5c, $55, $6c, $7e, $97, $a3, $a1, $9f, $92, $a2, $a5, $8d, $8b
1e90c     91 7D 5A 44 
1e910     56 51 54 6F 
1e914     86 97 8F A0 
1e918     9B 97 9B 8C | 	byte	$91, $7d, $5a, $44, $56, $51, $54, $6f, $86, $97, $8f, $a0, $9b, $97, $9b, $8c
1e91c     6E 5F 67 60 
1e920     59 64 85 A1 
1e924     A2 9C 9C 98 
1e928     9C 9C 94 8D | 	byte	$6e, $5f, $67, $60, $59, $64, $85, $a1, $a2, $9c, $9c, $98, $9c, $9c, $94, $8d
1e92c     90 73 53 4B 
1e930     53 4F 5F 6D 
1e934     8E 92 93 9D 
1e938     9B 97 97 86 | 	byte	$90, $73, $53, $4b, $53, $4f, $5f, $6d, $8e, $92, $93, $9d, $9b, $97, $97, $86
1e93c     6E 67 6D 5B 
1e940     54 6C 8E 9A 
1e944     9C A1 99 99 
1e948     9A 9B 97 90 | 	byte	$6e, $67, $6d, $5b, $54, $6c, $8e, $9a, $9c, $a1, $99, $99, $9a, $9b, $97, $90
1e94c     89 6D 4C 4A 
1e950     4D 54 5E 74 
1e954     8D 91 96 9E 
1e958     9E 97 90 85 | 	byte	$89, $6d, $4c, $4a, $4d, $54, $5e, $74, $8d, $91, $96, $9e, $9e, $97, $90, $85
1e95c     74 6F 6D 55 
1e960     5F 6F 89 9F 
1e964     9D 9D 9A 99 
1e968     9F 95 A0 93 | 	byte	$74, $6f, $6d, $55, $5f, $6f, $89, $9f, $9d, $9d, $9a, $99, $9f, $95, $a0, $93
1e96c     7C 69 4F 49 
1e970     4F 59 65 76 
1e974     89 91 97 A0 
1e978     9B 9B 8E 87 | 	byte	$7c, $69, $4f, $49, $4f, $59, $65, $76, $89, $91, $97, $a0, $9b, $9b, $8e, $87
1e97c     7B 6D 66 5A 
1e980     5F 72 88 A0 
1e984     9D 95 97 9A 
1e988     A0 94 A2 98 | 	byte	$7b, $6d, $66, $5a, $5f, $72, $88, $a0, $9d, $95, $97, $9a, $a0, $94, $a2, $98
1e98c     76 62 48 4A 
1e990     52 57 67 78 
1e994     86 96 99 9A 
1e998     9A 9E 8E 86 | 	byte	$76, $62, $48, $4a, $52, $57, $67, $78, $86, $96, $99, $9a, $9a, $9e, $8e, $86
1e99c     7E 72 5A 5B 
1e9a0     66 72 8B 9E 
1e9a4     9B 94 92 9E 
1e9a8     9E 96 A8 91 | 	byte	$7e, $72, $5a, $5b, $66, $72, $8b, $9e, $9b, $94, $92, $9e, $9e, $96, $a8, $91
1e9ac     72 50 47 4E 
1e9b0     4B 5F 6F 76 
1e9b4     8C 92 9C 93 
1e9b8     9D A1 90 86 | 	byte	$72, $50, $47, $4e, $4b, $5f, $6f, $76, $8c, $92, $9c, $93, $9d, $a1, $90, $86
1e9bc     84 70 59 54 
1e9c0     68 7A 88 9B 
1e9c4     96 91 97 9E 
1e9c8     9F A2 A1 8F | 	byte	$84, $70, $59, $54, $68, $7a, $88, $9b, $96, $91, $97, $9e, $9f, $a2, $a1, $8f
1e9cc     67 4C 4B 4D 
1e9d0     4E 5D 6F 81 
1e9d4     86 9A 9A 95 
1e9d8     9C 9C 95 89 | 	byte	$67, $4c, $4b, $4d, $4e, $5d, $6f, $81, $86, $9a, $9a, $95, $9c, $9c, $95, $89
1e9dc     81 6B 52 5B 
1e9e0     6D 7A 8F 97 
1e9e4     9C 8F 94 9F 
1e9e8     A9 A1 A0 86 | 	byte	$81, $6b, $52, $5b, $6d, $7a, $8f, $97, $9c, $8f, $94, $9f, $a9, $a1, $a0, $86
1e9ec     5C 46 51 4A 
1e9f0     4F 62 7A 7E 
1e9f4     82 A0 98 98 
1e9f8     9D A3 95 89 | 	byte	$5c, $46, $51, $4a, $4f, $62, $7a, $7e, $82, $a0, $98, $98, $9d, $a3, $95, $89
1e9fc     7D 65 4E 62 
1ea00     70 7B 8D 99 
1ea04     95 89 91 AC 
1ea08     A8 A2 9B 81 | 	byte	$7d, $65, $4e, $62, $70, $7b, $8d, $99, $95, $89, $91, $ac, $a8, $a2, $9b, $81
1ea0c     59 45 4D 4D 
1ea10     55 65 78 7E 
1ea14     86 95 99 97 
1ea18     A1 A5 9F 7F | 	byte	$59, $45, $4d, $4d, $55, $65, $78, $7e, $86, $95, $99, $97, $a1, $a5, $9f, $7f
1ea1c     78 65 55 5D 
1ea20     73 86 91 92 
1ea24     90 87 93 AD 
1ea28     AF A4 93 7A | 	byte	$78, $65, $55, $5d, $73, $86, $91, $92, $90, $87, $93, $ad, $af, $a4, $93, $7a
1ea2c     58 42 47 53 
1ea30     54 63 75 85 
1ea34     85 95 9A 9A 
1ea38     A5 AA 9E 80 | 	byte	$58, $42, $47, $53, $54, $63, $75, $85, $85, $95, $9a, $9a, $a5, $aa, $9e, $80
1ea3c     6F 62 55 5D 
1ea40     78 8F 90 88 
1ea44     8B 89 98 AA 
1ea48     B7 A4 8B 74 | 	byte	$6f, $62, $55, $5d, $78, $8f, $90, $88, $8b, $89, $98, $aa, $b7, $a4, $8b, $74
1ea4c     53 3F 4A 53 
1ea50     58 68 7F 82 
1ea54     80 94 9E 9E 
1ea58     A4 AE 9D 7F | 	byte	$53, $3f, $4a, $53, $58, $68, $7f, $82, $80, $94, $9e, $9e, $a4, $ae, $9d, $7f
1ea5c     69 5B 59 66 
1ea60     7E 8F 86 89 
1ea64     86 8E A0 B1 
1ea68     B5 9D 85 6F | 	byte	$69, $5b, $59, $66, $7e, $8f, $86, $89, $86, $8e, $a0, $b1, $b5, $9d, $85, $6f
1ea6c     52 45 48 54 
1ea70     5E 6C 7E 7B 
1ea74     86 95 9D A4 
1ea78     AB AE 9A 78 | 	byte	$52, $45, $48, $54, $5e, $6c, $7e, $7b, $86, $95, $9d, $a4, $ab, $ae, $9a, $78
1ea7c     64 55 5D 6E 
1ea80     7B 8E 86 85 
1ea84     81 90 A7 B6 
1ea88     AF 9A 7B 6B | 	byte	$64, $55, $5d, $6e, $7b, $8e, $86, $85, $81, $90, $a7, $b6, $af, $9a, $7b, $6b
1ea8c     4E 46 45 5B 
1ea90     62 71 7A 7A 
1ea94     8A 94 A2 A6 
1ea98     B2 AD 94 72 | 	byte	$4e, $46, $45, $5b, $62, $71, $7a, $7a, $8a, $94, $a2, $a6, $b2, $ad, $94, $72
1ea9c     5C 55 64 6D 
1eaa0     86 8C 80 7E 
1eaa4     82 93 AE B5 
1eaa8     AF 91 7B 63 | 	byte	$5c, $55, $64, $6d, $86, $8c, $80, $7e, $82, $93, $ae, $b5, $af, $91, $7b, $63
1eaac     4B 43 49 60 
1eab0     67 6F 78 82 
1eab4     86 9A A8 AF 
1eab8     B0 A9 8B 71 | 	byte	$4b, $43, $49, $60, $67, $6f, $78, $82, $86, $9a, $a8, $af, $b0, $a9, $8b, $71
1eabc     58 5C 65 72 
1eac0     88 8D 7B 78 
1eac4     89 99 B1 AE 
1eac8     AD 8E 73 5A | 	byte	$58, $5c, $65, $72, $88, $8d, $7b, $78, $89, $99, $b1, $ae, $ad, $8e, $73, $5a
1eacc     4A 41 4E 5D 
1ead0     6E 70 7A 7F 
1ead4     8E 9D A9 B8 
1ead8     B3 A2 86 6B | 	byte	$4a, $41, $4e, $5d, $6e, $70, $7a, $7f, $8e, $9d, $a9, $b8, $b3, $a2, $86, $6b
1eadc     55 5B 6B 79 
1eae0     84 87 76 79 
1eae4     8B A4 B1 B2 
1eae8     A4 8F 70 51 | 	byte	$55, $5b, $6b, $79, $84, $87, $76, $79, $8b, $a4, $b1, $b2, $a4, $8f, $70, $51
1eaec     49 49 52 62 
1eaf0     6C 72 76 80 
1eaf4     92 A1 B3 B6 
1eaf8     B1 99 85 66 | 	byte	$49, $49, $52, $62, $6c, $72, $76, $80, $92, $a1, $b3, $b6, $b1, $99, $85, $66
1eafc     55 5F 72 79 
1eb00     82 80 78 77 
1eb04     92 AC AC AA 
1eb08     A1 8A 65 4F | 	byte	$55, $5f, $72, $79, $82, $80, $78, $77, $92, $ac, $ac, $aa, $a1, $8a, $65, $4f
1eb0c     4D 4D 51 69 
1eb10     6E 74 72 88 
1eb14     92 A8 BB BB 
1eb18     AA 92 7D 67 | 	byte	$4d, $4d, $51, $69, $6e, $74, $72, $88, $92, $a8, $bb, $bb, $aa, $92, $7d, $67
1eb1c     53 62 76 7D 
1eb20     7C 79 75 7E 
1eb24     9A AC AE AB 
1eb28     9D 7F 61 4A | 	byte	$53, $62, $76, $7d, $7c, $79, $75, $7e, $9a, $ac, $ae, $ab, $9d, $7f, $61, $4a
1eb2c     4C 53 56 65 
1eb30     73 71 70 87 
1eb34     9E B0 BA BB 
1eb38     A8 8D 76 65 | 	byte	$4c, $53, $56, $65, $73, $71, $70, $87, $9e, $b0, $ba, $bb, $a8, $8d, $76, $65
1eb3c     5C 65 77 7F 
1eb40     77 71 76 86 
1eb44     9D A8 AC AC 
1eb48     9A 78 5A 4E | 	byte	$5c, $65, $77, $7f, $77, $71, $76, $86, $9d, $a8, $ac, $ac, $9a, $78, $5a, $4e
1eb4c     4A 53 58 6A 
1eb50     70 6D 73 87 
1eb54     A6 B5 C1 B9 
1eb58     A1 88 71 61 | 	byte	$4a, $53, $58, $6a, $70, $6d, $73, $87, $a6, $b5, $c1, $b9, $a1, $88, $71, $61
1eb5c     61 67 74 79 
1eb60     74 70 75 8D 
1eb64     9F A8 AE A7 
1eb68     91 7B 57 4B | 	byte	$61, $67, $74, $79, $74, $70, $75, $8d, $9f, $a8, $ae, $a7, $91, $7b, $57, $4b
1eb6c     4A 58 5F 69 
1eb70     6F 70 75 8B 
1eb74     AB C1 C1 B0 
1eb78     9C 7E 6D 62 | 	byte	$4a, $58, $5f, $69, $6f, $70, $75, $8b, $ab, $c1, $c1, $b0, $9c, $7e, $6d, $62
1eb7c     69 64 74 7A 
1eb80     6D 6E 7C 96 
1eb84     A2 A5 B3 A2 
1eb88     87 71 57 4B | 	byte	$69, $64, $74, $7a, $6d, $6e, $7c, $96, $a2, $a5, $b3, $a2, $87, $71, $57, $4b
1eb8c     4F 5E 63 65 
1eb90     6D 73 77 95 
1eb94     B6 C8 BB AD 
1eb98     92 7B 6C 63 | 	byte	$4f, $5e, $63, $65, $6d, $73, $77, $95, $b6, $c8, $bb, $ad, $92, $7b, $6c, $63
1eb9c     69 6B 70 72 
1eba0     6E 6E 82 94 
1eba4     A6 A7 A9 9C 
1eba8     85 64 52 4F | 	byte	$69, $6b, $70, $72, $6e, $6e, $82, $94, $a6, $a7, $a9, $9c, $85, $64, $52, $4f
1ebac     56 59 6A 6F 
1ebb0     6A 67 88 A2 
1ebb4     B7 C9 BF A4 
1ebb8     86 7A 6E 61 | 	byte	$56, $59, $6a, $6f, $6a, $67, $88, $a2, $b7, $c9, $bf, $a4, $86, $7a, $6e, $61
1ebbc     67 75 6E 6E 
1ebc0     6C 7B 7C 97 
1ebc4     AC A9 A1 96 
1ebc8     7F 66 4C 56 | 	byte	$67, $75, $6e, $6e, $6c, $7b, $7c, $97, $ac, $a9, $a1, $96, $7f, $66, $4c, $56
1ebcc     5A 5C 6A 70 
1ebd0     65 66 8F B0 
1ebd4     BA C3 C2 9D 
1ebd8     7F 73 73 64 | 	byte	$5a, $5c, $6a, $70, $65, $66, $8f, $b0, $ba, $c3, $c2, $9d, $7f, $73, $73, $64
1ebdc     65 72 70 69 
1ebe0     6B 7C 83 97 
1ebe4     AB AB 9A 8E 
1ebe8     7D 66 49 53 | 	byte	$65, $72, $70, $69, $6b, $7c, $83, $97, $ab, $ab, $9a, $8e, $7d, $66, $49, $53
1ebec     63 63 65 6E 
1ebf0     66 74 95 B3 
1ebf4     C3 C3 B4 97 
1ebf8     7E 72 6B 68 | 	byte	$63, $63, $65, $6e, $66, $74, $95, $b3, $c3, $c3, $b4, $97, $7e, $72, $6b, $68
1ebfc     67 6A 71 68 
1ec00     6B 78 8C 9F 
1ec04     A8 A5 98 8B 
1ec08     79 5D 4E 57 | 	byte	$67, $6a, $71, $68, $6b, $78, $8c, $9f, $a8, $a5, $98, $8b, $79, $5d, $4e, $57
1ec0c     64 64 66 68 
1ec10     67 7F 9F B9 
1ec14     C8 BE AE 90 
1ec18     7C 73 68 68 | 	byte	$64, $64, $66, $68, $67, $7f, $9f, $b9, $c8, $be, $ae, $90, $7c, $73, $68, $68
1ec1c     69 6B 6C 64 
1ec20     70 7D 8E A5 
1ec24     A7 A4 96 83 
1ec28     72 57 52 5F | 	byte	$69, $6b, $6c, $64, $70, $7d, $8e, $a5, $a7, $a4, $96, $83, $72, $57, $52, $5f
1ec2c     63 62 66 6C 
1ec30     6B 83 AF C2 
1ec34     C2 BA A7 88 
1ec38     79 71 6C 64 | 	byte	$63, $62, $66, $6c, $6b, $83, $af, $c2, $c2, $ba, $a7, $88, $79, $71, $6c, $64
1ec3c     68 72 68 64 
1ec40     72 84 91 A1 
1ec44     AA A3 90 7D 
1ec48     71 54 56 61 | 	byte	$68, $72, $68, $64, $72, $84, $91, $a1, $aa, $a3, $90, $7d, $71, $54, $56, $61
1ec4c     67 63 63 6E 
1ec50     71 89 B9 C5 
1ec54     BE AF A3 89 
1ec58     70 6F 6C 62 | 	byte	$67, $63, $63, $6e, $71, $89, $b9, $c5, $be, $af, $a3, $89, $70, $6f, $6c, $62
1ec5c     67 70 6E 62 
1ec60     76 8C 91 9F 
1ec64     AB A1 87 76 
1ec68     6F 57 55 64 | 	byte	$67, $70, $6e, $62, $76, $8c, $91, $9f, $ab, $a1, $87, $76, $6f, $57, $55, $64
1ec6c     6B 61 5F 72 
1ec70     7D 98 BB CA 
1ec74     B9 AB 9B 86 
1ec78     70 67 68 65 | 	byte	$6b, $61, $5f, $72, $7d, $98, $bb, $ca, $b9, $ab, $9b, $86, $70, $67, $68, $65
1ec7c     66 6F 6A 6B 
1ec80     76 89 99 A0 
1ec84     A7 9B 86 73 
1ec88     5F 60 5B 60 | 	byte	$66, $6f, $6a, $6b, $76, $89, $99, $a0, $a7, $9b, $86, $73, $5f, $60, $5b, $60
1ec8c     6A 60 60 6F 
1ec90     8F A6 BD C6 
1ec94     BB A3 90 85 
1ec98     71 61 64 6A | 	byte	$6a, $60, $60, $6f, $8f, $a6, $bd, $c6, $bb, $a3, $90, $85, $71, $61, $64, $6a
1ec9c     67 6A 6E 73 
1eca0     77 8D 9B 9F 
1eca4     9E 94 82 6C 
1eca8     61 5C 62 64 | 	byte	$67, $6a, $6e, $73, $77, $8d, $9b, $9f, $9e, $94, $82, $6c, $61, $5c, $62, $64
1ecac     65 5F 66 77 
1ecb0     97 AF C0 C0 
1ecb4     B4 A0 8C 80 
1ecb8     71 62 66 6A | 	byte	$65, $5f, $66, $77, $97, $af, $c0, $c0, $b4, $a0, $8c, $80, $71, $62, $66, $6a
1ecbc     6B 6E 6C 75 
1ecc0     7B 8C 9B A1 
1ecc4     9F 8D 7B 69 
1ecc8     5E 62 63 63 | 	byte	$6b, $6e, $6c, $75, $7b, $8c, $9b, $a1, $9f, $8d, $7b, $69, $5e, $62, $63, $63
1eccc     60 64 6B 82 
1ecd0     9D B7 BE BD 
1ecd4     AD 9C 88 7E 
1ecd8     6B 5F 68 6A | 	byte	$60, $64, $6b, $82, $9d, $b7, $be, $bd, $ad, $9c, $88, $7e, $6b, $5f, $68, $6a
1ecdc     6C 69 74 74 
1ece0     82 8D 9E A1 
1ece4     96 86 79 68 
1ece8     5F 62 65 62 | 	byte	$6c, $69, $74, $74, $82, $8d, $9e, $a1, $96, $86, $79, $68, $5f, $62, $65, $62
1ecec     5D 69 74 88 
1ecf0     A8 BE BA B6 
1ecf4     AA 9C 84 73 
1ecf8     69 65 65 68 | 	byte	$5d, $69, $74, $88, $a8, $be, $ba, $b6, $aa, $9c, $84, $73, $69, $65, $65, $68
1ecfc     6F 6E 72 76 
1ed00     82 8D 9D 9F 
1ed04     91 80 77 69 
1ed08     62 60 63 63 | 	byte	$6f, $6e, $72, $76, $82, $8d, $9d, $9f, $91, $80, $77, $69, $62, $60, $63, $63
1ed0c     5D 68 7C 98 
1ed10     B0 B9 BC B7 
1ed14     A5 91 83 70 
1ed18     61 67 67 67 | 	byte	$5d, $68, $7c, $98, $b0, $b9, $bc, $b7, $a5, $91, $83, $70, $61, $67, $67, $67
1ed1c     70 75 73 73 
1ed20     84 9A 99 97 
1ed24     8D 7E 72 65 
1ed28     64 62 5F 60 | 	byte	$70, $75, $73, $73, $84, $9a, $99, $97, $8d, $7e, $72, $65, $64, $62, $5f, $60
1ed2c     61 6D 85 A3 
1ed30     B4 B8 B9 B0 
1ed34     A0 8A 7E 6B 
1ed38     63 66 66 6B | 	byte	$61, $6d, $85, $a3, $b4, $b8, $b9, $b0, $a0, $8a, $7e, $6b, $63, $66, $66, $6b
1ed3c     72 73 73 76 
1ed40     8C 96 95 93 
1ed44     88 7B 6E 67 
1ed48     67 63 5B 62 | 	byte	$72, $73, $73, $76, $8c, $96, $95, $93, $88, $7b, $6e, $67, $67, $63, $5b, $62
1ed4c     67 78 8B A9 
1ed50     B6 B8 B8 AE 
1ed54     98 86 76 67 
1ed58     5E 66 6C 71 | 	byte	$67, $78, $8b, $a9, $b6, $b8, $b8, $ae, $98, $86, $76, $67, $5e, $66, $6c, $71
1ed5c     72 74 72 7A 
1ed60     8C 97 95 8A 
1ed64     88 77 6B 66 
1ed68     68 5E 5D 64 | 	byte	$72, $74, $72, $7a, $8c, $97, $95, $8a, $88, $77, $6b, $66, $68, $5e, $5d, $64
1ed6c     74 80 95 AD 
1ed70     B6 B6 B6 A7 
1ed74     94 80 73 65 
1ed78     5C 68 73 75 | 	byte	$74, $80, $95, $ad, $b6, $b6, $b6, $a7, $94, $80, $73, $65, $5c, $68, $73, $75
1ed7c     6D 73 79 7F 
1ed80     86 94 93 84 
1ed84     81 79 6B 65 
1ed88     66 61 5B 68 | 	byte	$6d, $73, $79, $7f, $86, $94, $93, $84, $81, $79, $6b, $65, $66, $61, $5b, $68
1ed8c     82 85 98 B3 
1ed90     BA B3 AE A5 
1ed94     8E 79 70 61 
1ed98     5E 6A 77 73 | 	byte	$82, $85, $98, $b3, $ba, $b3, $ae, $a5, $8e, $79, $70, $61, $5e, $6a, $77, $73
1ed9c     6E 70 80 7F 
1eda0     86 97 8D 82 
1eda4     7A 78 70 62 
1eda8     65 61 5A 73 | 	byte	$6e, $70, $80, $7f, $86, $97, $8d, $82, $7a, $78, $70, $62, $65, $61, $5a, $73
1edac     86 8F 98 B9 
1edb0     BC AE A6 A4 
1edb4     8B 74 65 62 
1edb8     66 6D 77 79 | 	byte	$86, $8f, $98, $b9, $bc, $ae, $a6, $a4, $8b, $74, $65, $62, $66, $6d, $77, $79
1edbc     6C 71 80 80 
1edc0     8A 8E 90 80 
1edc4     79 77 6D 62 
1edc8     5F 60 69 78 | 	byte	$6c, $71, $80, $80, $8a, $8e, $90, $80, $79, $77, $6d, $62, $5f, $60, $69, $78
1edcc     8C 91 A2 B4 
1edd0     B7 AF A5 A0 
1edd4     85 6C 64 61 
1edd8     65 75 77 76 | 	byte	$8c, $91, $a2, $b4, $b7, $af, $a5, $a0, $85, $6c, $64, $61, $65, $75, $77, $76
1eddc     6C 75 7D 83 
1ede0     8A 90 84 84 
1ede4     7A 74 68 60 
1ede8     60 60 6F 80 | 	byte	$6c, $75, $7d, $83, $8a, $90, $84, $84, $7a, $74, $68, $60, $60, $60, $6f, $80
1edec     90 95 A9 B4 
1edf0     B7 AB A8 92 
1edf4     7C 6A 65 5F 
1edf8     6A 77 7C 70 | 	byte	$90, $95, $a9, $b4, $b7, $ab, $a8, $92, $7c, $6a, $65, $5f, $6a, $77, $7c, $70
1edfc     71 79 7E 84 
1ee00     87 8A 83 84 
1ee04     7A 70 64 5F 
1ee08     5C 68 76 8A | 	byte	$71, $79, $7e, $84, $87, $8a, $83, $84, $7a, $70, $64, $5f, $5c, $68, $76, $8a
1ee0c     93 97 A8 B5 
1ee10     AD AC A2 90 
1ee14     78 66 62 65 
1ee18     6D 78 77 72 | 	byte	$93, $97, $a8, $b5, $ad, $ac, $a2, $90, $78, $66, $62, $65, $6d, $78, $77, $72
1ee1c     74 78 81 82 
1ee20     85 87 89 81 
1ee24     75 6A 65 58 
1ee28     61 6E 84 8D | 	byte	$74, $78, $81, $82, $85, $87, $89, $81, $75, $6a, $65, $58, $61, $6e, $84, $8d
1ee2c     94 9E AA B1 
1ee30     AF A7 9A 88 
1ee34     71 63 60 69 
1ee38     72 78 72 75 | 	byte	$94, $9e, $aa, $b1, $af, $a7, $9a, $88, $71, $63, $60, $69, $72, $78, $72, $75
1ee3c     75 7B 7F 86 
1ee40     86 85 87 7F 
1ee44     73 69 5B 5B 
1ee48     67 7A 89 93 | 	byte	$75, $7b, $7f, $86, $86, $85, $87, $7f, $73, $69, $5b, $5b, $67, $7a, $89, $93
1ee4c     93 A0 AC AF 
1ee50     AD A3 97 7F 
1ee54     6C 63 66 6C 
1ee58     74 79 75 74 | 	byte	$93, $a0, $ac, $af, $ad, $a3, $97, $7f, $6c, $63, $66, $6c, $74, $79, $75, $74
1ee5c     78 7C 7C 81 
1ee60     87 87 83 7D 
1ee64     74 61 56 5E 
1ee68     6E 81 8F 96 | 	byte	$78, $7c, $7c, $81, $87, $87, $83, $7d, $74, $61, $56, $5e, $6e, $81, $8f, $96
1ee6c     97 A0 AB AD 
1ee70     AA A1 8F 7A 
1ee74     67 63 6C 6D 
1ee78     74 77 76 75 | 	byte	$97, $a0, $ab, $ad, $aa, $a1, $8f, $7a, $67, $63, $6c, $6d, $74, $77, $76, $75
1ee7c     78 7A 7D 7F 
1ee80     86 87 85 7D 
1ee84     6E 5C 57 66 
1ee88     74 8A 96 98 | 	byte	$78, $7a, $7d, $7f, $86, $87, $85, $7d, $6e, $5c, $57, $66, $74, $8a, $96, $98
1ee8c     96 A1 A9 AC 
1ee90     AA 9C 88 75 
1ee94     69 66 6B 70 
1ee98     76 77 77 75 | 	byte	$96, $a1, $a9, $ac, $aa, $9c, $88, $75, $69, $66, $6b, $70, $76, $77, $77, $75
1ee9c     79 7C 7C 7D 
1eea0     86 85 84 7A 
1eea4     68 59 5A 69 
1eea8     7D 8E 9D 96 | 	byte	$79, $7c, $7c, $7d, $86, $85, $84, $7a, $68, $59, $5a, $69, $7d, $8e, $9d, $96
1eeac     96 A2 A8 AD 
1eeb0     A2 95 86 73 
1eeb4     68 69 6D 72 
1eeb8     73 78 74 79 | 	byte	$96, $a2, $a8, $ad, $a2, $95, $86, $73, $68, $69, $6d, $72, $73, $78, $74, $79
1eebc     79 7D 79 7E 
1eec0     8A 89 80 75 
1eec4     65 57 5A 6D 
1eec8     89 93 9E 93 | 	byte	$79, $7d, $79, $7e, $8a, $89, $80, $75, $65, $57, $5a, $6d, $89, $93, $9e, $93
1eecc     98 9E AB AB 
1eed0     9D 8E 83 71 
1eed4     69 69 72 71 
1eed8     71 78 76 77 | 	byte	$98, $9e, $ab, $ab, $9d, $8e, $83, $71, $69, $69, $72, $71, $71, $78, $76, $77
1eedc     7B 7C 7B 81 
1eee0     8B 8B 78 75 
1eee4     60 54 5A 79 
1eee8     8F 9C 97 96 | 	byte	$7b, $7c, $7b, $81, $8b, $8b, $78, $75, $60, $54, $5a, $79, $8f, $9c, $97, $96
1eeec     96 A0 A8 A7 
1eef0     99 8C 7D 6E 
1eef4     69 6C 73 70 
1eef8     76 77 7A 77 | 	byte	$96, $a0, $a8, $a7, $99, $8c, $7d, $6e, $69, $6c, $73, $70, $76, $77, $7a, $77
1eefc     79 79 7E 7F 
1ef00     8F 86 7A 6D 
1ef04     5A 53 64 7D 
1ef08     99 9B 96 97 | 	byte	$79, $79, $7e, $7f, $8f, $86, $7a, $6d, $5a, $53, $64, $7d, $99, $9b, $96, $97
1ef0c     97 A2 A2 A6 
1ef10     92 87 7A 71 
1ef14     68 73 6E 71 
1ef18     77 7C 77 73 | 	byte	$97, $a2, $a2, $a6, $92, $87, $7a, $71, $68, $73, $6e, $71, $77, $7c, $77, $73
1ef1c     77 7F 7C 85 
1ef20     8E 89 78 63 
1ef24     57 53 6A 87 
1ef28     9A 9B 9A 95 | 	byte	$77, $7f, $7c, $85, $8e, $89, $78, $63, $57, $53, $6a, $87, $9a, $9b, $9a, $95
1ef2c     9B 9C A4 9F 
1ef30     8F 80 7A 70 
1ef34     6C 70 73 72 
1ef38     7A 7D 75 70 | 	byte	$9b, $9c, $a4, $9f, $8f, $80, $7a, $70, $6c, $70, $73, $72, $7a, $7d, $75, $70
1ef3c     77 7F 7D 87 
1ef40     8D 89 72 60 
1ef44     54 5B 74 8F 
1ef48     9B 9D 9A 99 | 	byte	$77, $7f, $7d, $87, $8d, $89, $72, $60, $54, $5b, $74, $8f, $9b, $9d, $9a, $99
1ef4c     97 9A A6 9B 
1ef50     88 7C 7A 71 
1ef54     6A 72 77 73 
1ef58     7C 7B 73 6F | 	byte	$97, $9a, $a6, $9b, $88, $7c, $7a, $71, $6a, $72, $77, $73, $7c, $7b, $73, $6f
1ef5c     79 7F 82 87 
1ef60     92 82 6A 5A 
1ef64     59 5F 79 95 
1ef68     A0 98 9A 9C | 	byte	$79, $7f, $82, $87, $92, $82, $6a, $5a, $59, $5f, $79, $95, $a0, $98, $9a, $9c
1ef6c     95 9A A0 99 
1ef70     82 7A 7C 72 
1ef74     67 77 77 74 
1ef78     7B 7D 6D 6B | 	byte	$95, $9a, $a0, $99, $82, $7a, $7c, $72, $67, $77, $77, $74, $7b, $7d, $6d, $6b
1ef7c     7B 86 82 88 
1ef80     95 80 61 52 
1ef84     5F 66 7E 9B 
1ef88     A1 97 9B 9B | 	byte	$7b, $86, $82, $88, $95, $80, $61, $52, $5f, $66, $7e, $9b, $a1, $97, $9b, $9b
1ef8c     97 96 A0 94 
1ef90     7E 78 7C 71 
1ef94     6A 72 7D 7A 
1ef98     7A 77 6B 6D | 	byte	$97, $96, $a0, $94, $7e, $78, $7c, $71, $6a, $72, $7d, $7a, $7a, $77, $6b, $6d
1ef9c     7C 86 88 8E 
1efa0     8C 7C 5A 51 
1efa4     60 75 82 98 
1efa8     A1 9F 95 97 | 	byte	$7c, $86, $88, $8e, $8c, $7c, $5a, $51, $60, $75, $82, $98, $a1, $9f, $95, $97
1efac     99 9A 95 8D 
1efb0     7E 76 77 75 
1efb4     6E 6F 7D 81 
1efb8     77 6C 6C 73 | 	byte	$99, $9a, $95, $8d, $7e, $76, $77, $75, $6e, $6f, $7d, $81, $77, $6c, $6c, $73
1efbc     77 86 92 91 
1efc0     89 70 5B 52 
1efc4     63 7D 8A 95 
1efc8     A3 9F 97 93 | 	byte	$77, $86, $92, $91, $89, $70, $5b, $52, $63, $7d, $8a, $95, $a3, $9f, $97, $93
1efcc     98 99 8A 87 
1efd0     7F 7A 74 71 
1efd4     74 75 7B 83 
1efd8     77 6A 67 76 | 	byte	$98, $99, $8a, $87, $7f, $7a, $74, $71, $74, $75, $7b, $83, $77, $6a, $67, $76
1efdc     7E 86 95 96 
1efe0     81 66 56 5A 
1efe4     6A 7E 93 99 
1efe8     A0 9C 9A 93 | 	byte	$7e, $86, $95, $96, $81, $66, $56, $5a, $6a, $7e, $93, $99, $a0, $9c, $9a, $93
1efec     94 96 8C 80 
1eff0     7B 79 73 6F 
1eff4     76 7C 7E 81 
1eff8     75 68 66 75 | 	byte	$94, $96, $8c, $80, $7b, $79, $73, $6f, $76, $7c, $7e, $81, $75, $68, $66, $75
1effc     84 8E 96 91 
1f000     79 63 55 5E 
1f004     6F 85 95 9A 
1f008     9E 9C 99 93 | 	byte	$84, $8e, $96, $91, $79, $63, $55, $5e, $6f, $85, $95, $9a, $9e, $9c, $99, $93
1f00c     90 8F 88 7F 
1f010     79 78 74 72 
1f014     78 7F 81 81 
1f018     74 63 65 79 | 	byte	$90, $8f, $88, $7f, $79, $78, $74, $72, $78, $7f, $81, $81, $74, $63, $65, $79
1f01c     89 91 97 8E 
1f020     74 5C 57 62 
1f024     76 8B 97 9B 
1f028     9C A1 99 8C | 	byte	$89, $91, $97, $8e, $74, $5c, $57, $62, $76, $8b, $97, $9b, $9c, $a1, $99, $8c
1f02c     8E 90 82 7A 
1f030     7A 79 6F 72 
1f034     7D 7E 84 7E 
1f038     72 5E 68 80 | 	byte	$8e, $90, $82, $7a, $7a, $79, $6f, $72, $7d, $7e, $84, $7e, $72, $5e, $68, $80
1f03c     8F 8F 94 8B 
1f040     6E 57 5A 6D 
1f044     7A 89 9C 9D 
1f048     9B A2 97 8D | 	byte	$8f, $8f, $94, $8b, $6e, $57, $5a, $6d, $7a, $89, $9c, $9d, $9b, $a2, $97, $8d
1f04c     87 8D 81 75 
1f050     79 7C 72 74 
1f054     7E 88 81 77 
1f058     6E 60 67 83 | 	byte	$87, $8d, $81, $75, $79, $7c, $72, $74, $7e, $88, $81, $77, $6e, $60, $67, $83
1f05c     93 95 8E 85 
1f060     69 53 5F 73 
1f064     7F 8C 9C 9F 
1f068     9E 9B 9A 8B | 	byte	$93, $95, $8e, $85, $69, $53, $5f, $73, $7f, $8c, $9c, $9f, $9e, $9b, $9a, $8b
1f06c     84 86 7F 76 
1f070     75 78 77 75 
1f074     81 8A 84 73 
1f078     65 65 70 84 | 	byte	$84, $86, $7f, $76, $75, $78, $77, $75, $81, $8a, $84, $73, $65, $65, $70, $84
1f07c     94 99 8C 77 
1f080     66 5A 60 74 
1f084     85 8F 97 A2 
1f088     9F 9B 94 8B | 	byte	$94, $99, $8c, $77, $66, $5a, $60, $74, $85, $8f, $97, $a2, $9f, $9b, $94, $8b
1f08c     85 7F 7E 77 
1f090     73 77 77 7A 
1f094     86 8A 82 70 
1f098     64 66 75 8A | 	byte	$85, $7f, $7e, $77, $73, $77, $77, $7a, $86, $8a, $82, $70, $64, $66, $75, $8a
1f09c     99 93 88 75 
1f0a0     60 5D 64 7B 
1f0a4     83 91 9B A0 
1f0a8     A0 9C 8F 87 | 	byte	$99, $93, $88, $75, $60, $5d, $64, $7b, $83, $91, $9b, $a0, $a0, $9c, $8f, $87
1f0ac     82 7E 7B 73 
1f0b0     75 73 79 7F 
1f0b4     87 88 7F 6C 
1f0b8     61 67 80 8E | 	byte	$82, $7e, $7b, $73, $75, $73, $79, $7f, $87, $88, $7f, $6c, $61, $67, $80, $8e
1f0bc     95 94 86 6B 
1f0c0     5F 5E 6E 79 
1f0c4     8A 94 9C 9E 
1f0c8     A1 9A 8B 83 | 	byte	$95, $94, $86, $6b, $5f, $5e, $6e, $79, $8a, $94, $9c, $9e, $a1, $9a, $8b, $83
1f0cc     83 7C 75 75 
1f0d0     72 74 79 86 
1f0d4     88 86 79 6F 
1f0d8     5D 6E 85 91 | 	byte	$83, $7c, $75, $75, $72, $74, $79, $86, $88, $86, $79, $6f, $5d, $6e, $85, $91
1f0dc     92 8F 7F 68 
1f0e0     5B 64 73 7B 
1f0e4     8C 98 9F 9B 
1f0e8     A4 99 87 7F | 	byte	$92, $8f, $7f, $68, $5b, $64, $73, $7b, $8c, $98, $9f, $9b, $a4, $99, $87, $7f
1f0ec     82 7C 70 70 
1f0f0     79 75 79 8B 
1f0f4     8E 7F 75 6A 
1f0f8     65 70 87 98 | 	byte	$82, $7c, $70, $70, $79, $75, $79, $8b, $8e, $7f, $75, $6a, $65, $70, $87, $98
1f0fc     90 89 79 67 
1f100     5B 67 79 82 
1f104     86 9C A1 9E 
1f108     9D 97 85 7B | 	byte	$90, $89, $79, $67, $5b, $67, $79, $82, $86, $9c, $a1, $9e, $9d, $97, $85, $7b
1f10c     7D 7B 6F 6C 
1f110     7A 78 7C 8A 
1f114     91 7F 6E 68 
1f118     6F 76 89 95 | 	byte	$7d, $7b, $6f, $6c, $7a, $78, $7c, $8a, $91, $7f, $6e, $68, $6f, $76, $89, $95
1f11c     93 83 72 64 
1f120     5F 6D 7D 83 
1f124     8A 9D A2 9D 
1f128     9B 92 84 7D | 	byte	$93, $83, $72, $64, $5f, $6d, $7d, $83, $8a, $9d, $a2, $9d, $9b, $92, $84, $7d
1f12c     75 75 6D 70 
1f130     76 7A 83 8D 
1f134     8C 7B 6B 6B 
1f138     6F 7B 8B 96 | 	byte	$75, $75, $6d, $70, $76, $7a, $83, $8d, $8c, $7b, $6b, $6b, $6f, $7b, $8b, $96
1f13c     92 7C 6E 64 
1f140     66 6F 7F 84 
1f144     91 A0 A2 9C 
1f148     9B 91 83 76 | 	byte	$92, $7c, $6e, $64, $66, $6f, $7f, $84, $91, $a0, $a2, $9c, $9b, $91, $83, $76
1f14c     76 74 6B 6E 
1f150     75 7F 85 8B 
1f154     8A 78 6C 6F 
1f158     75 7F 8C 99 | 	byte	$76, $74, $6b, $6e, $75, $7f, $85, $8b, $8a, $78, $6c, $6f, $75, $7f, $8c, $99
1f15c     8C 75 69 68 
1f160     67 73 7F 8C 
1f164     96 9C A1 9D 
1f168     98 8D 81 77 | 	byte	$8c, $75, $69, $68, $67, $73, $7f, $8c, $96, $9c, $a1, $9d, $98, $8d, $81, $77
1f16c     72 6F 6E 6C 
1f170     78 85 88 89 
1f174     87 79 6E 6C 
1f178     79 87 8C 96 | 	byte	$72, $6f, $6e, $6c, $78, $85, $88, $89, $87, $79, $6e, $6c, $79, $87, $8c, $96
1f17c     88 74 67 68 
1f180     6D 75 7E 92 
1f184     93 9D 9E A0 
1f188     96 86 7E 78 | 	byte	$88, $74, $67, $68, $6d, $75, $7e, $92, $93, $9d, $9e, $a0, $96, $86, $7e, $78
1f18c     6C 6A 6E 6E 
1f190     79 83 8B 86 
1f194     83 7A 6F 6F 
1f198     81 89 90 8F | 	byte	$6c, $6a, $6e, $6e, $79, $83, $8b, $86, $83, $7a, $6f, $6f, $81, $89, $90, $8f
1f19c     86 73 62 67 
1f1a0     71 78 85 8F 
1f1a4     9A 9C 9F 9E 
1f1a8     93 84 7D 75 | 	byte	$86, $73, $62, $67, $71, $78, $85, $8f, $9a, $9c, $9f, $9e, $93, $84, $7d, $75
1f1ac     68 66 6E 75 
1f1b0     77 87 8D 88 
1f1b4     7D 78 72 76 
1f1b8     7D 8D 92 8A | 	byte	$68, $66, $6e, $75, $77, $87, $8d, $88, $7d, $78, $72, $76, $7d, $8d, $92, $8a
1f1bc     7F 6F 64 67 
1f1c0     75 7F 86 91 
1f1c4     9E 9C 9C 99 
1f1c8     95 84 77 6E | 	byte	$7f, $6f, $64, $67, $75, $7f, $86, $91, $9e, $9c, $9c, $99, $95, $84, $77, $6e
1f1cc     69 64 6E 74 
1f1d0     7E 86 8B 87 
1f1d4     7C 77 76 79 
1f1d8     83 8C 91 89 | 	byte	$69, $64, $6e, $74, $7e, $86, $8b, $87, $7c, $77, $76, $79, $83, $8c, $91, $89
1f1dc     79 6E 64 6C 
1f1e0     75 81 86 97 
1f1e4     9F 9C 9A 9D 
1f1e8     91 80 73 6E | 	byte	$79, $6e, $64, $6c, $75, $81, $86, $97, $9f, $9c, $9a, $9d, $91, $80, $73, $6e
1f1ec     65 64 6F 77 
1f1f0     80 87 89 86 
1f1f4     7E 77 7A 7D 
1f1f8     85 8D 8F 83 | 	byte	$65, $64, $6f, $77, $80, $87, $89, $86, $7e, $77, $7a, $7d, $85, $8d, $8f, $83
1f1fc     73 6C 6A 68 
1f200     78 86 8E 97 
1f204     9C 9F 9B 97 
1f208     91 80 6D 6B | 	byte	$73, $6c, $6a, $68, $78, $86, $8e, $97, $9c, $9f, $9b, $97, $91, $80, $6d, $6b
1f20c     61 63 6F 7C 
1f210     80 85 8C 88 
1f214     7B 78 7E 7E 
1f218     85 8D 8D 7D | 	byte	$61, $63, $6f, $7c, $80, $85, $8c, $88, $7b, $78, $7e, $7e, $85, $8d, $8d, $7d
1f21c     73 6F 68 6B 
1f220     80 8A 8B 94 
1f224     A3 9D 97 95 
1f228     91 7B 6A 68 | 	byte	$73, $6f, $68, $6b, $80, $8a, $8b, $94, $a3, $9d, $97, $95, $91, $7b, $6a, $68
1f22c     63 64 6F 81 
1f230     7F 83 8E 88 
1f234     78 7A 84 82 
1f238     81 8F 8C 7B | 	byte	$63, $64, $6f, $81, $7f, $83, $8e, $88, $78, $7a, $84, $82, $81, $8f, $8c, $7b
1f23c     6F 6E 6B 6D 
1f240     7F 8D 8F 95 
1f244     A0 9E 93 94 
1f248     8F 78 65 64 | 	byte	$6f, $6e, $6b, $6d, $7f, $8d, $8f, $95, $a0, $9e, $93, $94, $8f, $78, $65, $64
1f24c     65 64 6D 80 
1f250     84 82 8A 89 
1f254     7A 7A 85 85 
1f258     82 89 8A 78 | 	byte	$65, $64, $6d, $80, $84, $82, $8a, $89, $7a, $7a, $85, $85, $82, $89, $8a, $78
1f25c     6C 6D 70 73 
1f260     81 8E 92 98 
1f264     9C 9E 96 91 
1f268     8B 75 63 62 | 	byte	$6c, $6d, $70, $73, $81, $8e, $92, $98, $9c, $9e, $96, $91, $8b, $75, $63, $62
1f26c     64 68 6D 80 
1f270     85 85 87 85 
1f274     80 7E 83 87 
1f278     86 87 82 78 | 	byte	$64, $68, $6d, $80, $85, $85, $87, $85, $80, $7e, $83, $87, $86, $87, $82, $78
1f27c     6E 6D 70 76 
1f280     85 8E 94 97 
1f284     9C 9C 98 8F 
1f288     85 70 64 5D | 	byte	$6e, $6d, $70, $76, $85, $8e, $94, $97, $9c, $9c, $98, $8f, $85, $70, $64, $5d
1f28c     65 69 6F 80 
1f290     84 86 8A 86 
1f294     81 80 81 88 
1f298     85 84 7F 77 | 	byte	$65, $69, $6f, $80, $84, $86, $8a, $86, $81, $80, $81, $88, $85, $84, $7f, $77
1f29c     6F 6B 72 7D 
1f2a0     84 91 95 99 
1f2a4     9C 9B 95 8D 
1f2a8     80 6D 60 5D | 	byte	$6f, $6b, $72, $7d, $84, $91, $95, $99, $9c, $9b, $95, $8d, $80, $6d, $60, $5d
1f2ac     66 6A 74 7F 
1f2b0     86 88 89 85 
1f2b4     84 80 84 87 
1f2b8     86 82 7E 77 | 	byte	$66, $6a, $74, $7f, $86, $88, $89, $85, $84, $80, $84, $87, $86, $82, $7e, $77
1f2bc     71 6D 74 80 
1f2c0     86 91 95 9A 
1f2c4     9A 9B 96 89 
1f2c8     7B 70 5C 5D | 	byte	$71, $6d, $74, $80, $86, $91, $95, $9a, $9a, $9b, $96, $89, $7b, $70, $5c, $5d
1f2cc     64 6B 73 7F 
1f2d0     87 8B 88 88 
1f2d4     84 80 88 87 
1f2d8     85 7E 7D 78 | 	byte	$64, $6b, $73, $7f, $87, $8b, $88, $88, $84, $80, $88, $87, $85, $7e, $7d, $78
1f2dc     6E 6D 7C 80 
1f2e0     8A 91 96 9C 
1f2e4     9C 9A 93 86 
1f2e8     7B 68 59 5E | 	byte	$6e, $6d, $7c, $80, $8a, $91, $96, $9c, $9c, $9a, $93, $86, $7b, $68, $59, $5e
1f2ec     65 6D 75 80 
1f2f0     87 8B 8B 87 
1f2f4     80 84 89 86 
1f2f8     7E 80 7E 75 | 	byte	$65, $6d, $75, $80, $87, $8b, $8b, $87, $80, $84, $89, $86, $7e, $80, $7e, $75
1f2fc     6C 74 7E 84 
1f300     8A 91 98 9A 
1f304     9D 94 91 86 
1f308     77 64 5D 5D | 	byte	$6c, $74, $7e, $84, $8a, $91, $98, $9a, $9d, $94, $91, $86, $77, $64, $5d, $5d
1f30c     68 6A 76 80 
1f310     89 8D 88 85 
1f314     84 85 86 85 
1f318     80 81 7C 74 | 	byte	$68, $6a, $76, $80, $89, $8d, $88, $85, $84, $85, $86, $85, $80, $81, $7c, $74
1f31c     6F 78 7F 85 
1f320     8A 96 97 99 
1f324     9D 96 8E 83 
1f328     73 63 59 62 | 	byte	$6f, $78, $7f, $85, $8a, $96, $97, $99, $9d, $96, $8e, $83, $73, $63, $59, $62
1f32c     66 68 78 83 
1f330     89 8A 8B 87 
1f334     83 86 89 81 
1f338     80 81 7A 70 | 	byte	$66, $68, $78, $83, $89, $8a, $8b, $87, $83, $86, $89, $81, $80, $81, $7a, $70
1f33c     72 7C 81 81 
1f340     91 97 94 98 
1f344     9B 96 87 7F 
1f348     72 61 59 62 | 	byte	$72, $7c, $81, $81, $91, $97, $94, $98, $9b, $96, $87, $7f, $72, $61, $59, $62
1f34c     63 6B 77 87 
1f350     89 8A 8C 88 
1f354     82 85 89 83 
1f358     7F 7C 7D 73 | 	byte	$63, $6b, $77, $87, $89, $8a, $8c, $88, $82, $85, $89, $83, $7f, $7c, $7d, $73
1f35c     72 7E 82 84 
1f360     8F 97 98 93 
1f364     9C 95 85 7B 
1f368     71 62 59 5D | 	byte	$72, $7e, $82, $84, $8f, $97, $98, $93, $9c, $95, $85, $7b, $71, $62, $59, $5d
1f36c     69 6B 75 89 
1f370     8D 89 89 89 
1f374     86 83 89 87 
1f378     7B 7E 7D 76 | 	byte	$69, $6b, $75, $89, $8d, $89, $89, $89, $86, $83, $89, $87, $7b, $7e, $7d, $76
1f37c     71 7E 87 86 
1f380     8B 9B 97 95 
1f384     97 95 84 77 
1f388     71 60 57 5D | 	byte	$71, $7e, $87, $86, $8b, $9b, $97, $95, $97, $95, $84, $77, $71, $60, $57, $5d
1f38c     69 6C 7A 89 
1f390     91 89 88 89 
1f394     87 83 87 85 
1f398     7F 7A 7D 77 | 	byte	$69, $6c, $7a, $89, $91, $89, $88, $89, $87, $83, $87, $85, $7f, $7a, $7d, $77
1f39c     73 7F 88 86 
1f3a0     91 9A 97 94 
1f3a4     96 92 80 75 
1f3a8     6E 61 58 5D | 	byte	$73, $7f, $88, $86, $91, $9a, $97, $94, $96, $92, $80, $75, $6e, $61, $58, $5d
1f3ac     67 6F 7A 8A 
1f3b0     90 8A 89 89 
1f3b4     86 86 87 85 
1f3b8     7E 7D 7D 75 | 	byte	$67, $6f, $7a, $8a, $90, $8a, $89, $89, $86, $86, $87, $85, $7e, $7d, $7d, $75
1f3bc     77 80 85 89 
1f3c0     93 97 95 93 
1f3c4     95 8D 7D 78 
1f3c8     6E 5C 56 5E | 	byte	$77, $80, $85, $89, $93, $97, $95, $93, $95, $8d, $7d, $78, $6e, $5c, $56, $5e
1f3cc     67 6E 7C 8D 
1f3d0     8E 8A 88 8A 
1f3d4     87 85 88 85 
1f3d8     7E 7F 7D 75 | 	byte	$67, $6e, $7c, $8d, $8e, $8a, $88, $8a, $87, $85, $88, $85, $7e, $7f, $7d, $75
1f3dc     77 81 89 8C 
1f3e0     92 99 95 93 
1f3e4     91 88 7E 76 
1f3e8     6B 5E 57 5D | 	byte	$77, $81, $89, $8c, $92, $99, $95, $93, $91, $88, $7e, $76, $6b, $5e, $57, $5d
1f3ec     69 70 7F 91 
1f3f0     8F 88 86 8B 
1f3f4     88 83 88 86 
1f3f8     81 7E 7C 76 | 	byte	$69, $70, $7f, $91, $8f, $88, $86, $8b, $88, $83, $88, $86, $81, $7e, $7c, $76
1f3fc     79 82 8A 8D 
1f400     93 99 95 8F 
1f404     8D 8A 7C 75 
1f408     6A 5E 56 5C | 	byte	$79, $82, $8a, $8d, $93, $99, $95, $8f, $8d, $8a, $7c, $75, $6a, $5e, $56, $5c
1f40c     68 73 82 91 
1f410     8E 86 86 8B 
1f414     87 82 88 88 
1f418     7F 7D 79 77 | 	byte	$68, $73, $82, $91, $8e, $86, $86, $8b, $87, $82, $88, $88, $7f, $7d, $79, $77
1f41c     7A 81 8A 8F 
1f420     96 96 93 8E 
1f424     8E 86 7E 73 
1f428     67 5C 56 5B | 	byte	$7a, $81, $8a, $8f, $96, $96, $93, $8e, $8e, $86, $7e, $73, $67, $5c, $56, $5b
1f42c     66 79 86 8F 
1f430     8C 89 89 8A 
1f434     86 85 8A 87 
1f438     81 7A 79 7A | 	byte	$66, $79, $86, $8f, $8c, $89, $89, $8a, $86, $85, $8a, $87, $81, $7a, $79, $7a
1f43c     7B 81 8A 93 
1f440     96 90 92 8F 
1f444     8A 85 7C 75 
1f448     67 57 57 5C | 	byte	$7b, $81, $8a, $93, $96, $90, $92, $8f, $8a, $85, $7c, $75, $67, $57, $57, $5c
1f44c     6A 7A 89 90 
1f450     8A 88 8A 87 
1f454     86 89 8C 85 
1f458     7D 7E 78 77 | 	byte	$6a, $7a, $89, $90, $8a, $88, $8a, $87, $86, $89, $8c, $85, $7d, $7e, $78, $77
1f45c     7E 88 8A 93 
1f460     96 92 8E 8B 
1f464     8C 84 7A 75 
1f468     66 56 56 5D | 	byte	$7e, $88, $8a, $93, $96, $92, $8e, $8b, $8c, $84, $7a, $75, $66, $56, $56, $5d
1f46c     6C 7B 8B 90 
1f470     8B 86 89 89 
1f474     86 88 8C 8A 
1f478     7C 7A 7A 78 | 	byte	$6c, $7b, $8b, $90, $8b, $86, $89, $89, $86, $88, $8c, $8a, $7c, $7a, $7a, $78
1f47c     7D 87 90 93 
1f480     92 93 8E 88 
1f484     8B 87 79 6F 
1f488     65 56 52 5E | 	byte	$7d, $87, $90, $93, $92, $93, $8e, $88, $8b, $87, $79, $6f, $65, $56, $52, $5e
1f48c     72 7D 8B 91 
1f490     8A 84 8A 8B 
1f494     85 89 92 85 
1f498     7C 78 7B 77 | 	byte	$72, $7d, $8b, $91, $8a, $84, $8a, $8b, $85, $89, $92, $85, $7c, $78, $7b, $77
1f49c     7E 8A 92 90 
1f4a0     92 91 8C 88 
1f4a4     8B 87 76 6F 
1f4a8     62 56 51 61 | 	byte	$7e, $8a, $92, $90, $92, $91, $8c, $88, $8b, $87, $76, $6f, $62, $56, $51, $61
1f4ac     73 83 8A 8E 
1f4b0     88 89 86 87 
1f4b4     89 8F 90 86 
1f4b8     78 79 79 7A | 	byte	$73, $83, $8a, $8e, $88, $89, $86, $87, $89, $8f, $90, $86, $78, $79, $79, $7a
1f4bc     7E 8A 95 92 
1f4c0     8E 8F 8E 88 
1f4c4     8A 83 79 6A 
1f4c8     62 54 53 61 | 	byte	$7e, $8a, $95, $92, $8e, $8f, $8e, $88, $8a, $83, $79, $6a, $62, $54, $53, $61
1f4cc     79 84 8A 8B 
1f4d0     8B 87 84 89 
1f4d4     8F 8F 8D 85 
1f4d8     78 78 78 7D | 	byte	$79, $84, $8a, $8b, $8b, $87, $84, $89, $8f, $8f, $8d, $85, $78, $78, $78, $7d
1f4dc     80 8D 94 92 
1f4e0     8A 8E 8D 88 
1f4e4     87 82 77 69 
1f4e8     5B 52 56 66 | 	byte	$80, $8d, $94, $92, $8a, $8e, $8d, $88, $87, $82, $77, $69, $5b, $52, $56, $66
1f4ec     7A 85 8B 8C 
1f4f0     8A 85 84 8B 
1f4f4     92 8F 8D 84 
1f4f8     78 75 79 7E | 	byte	$7a, $85, $8b, $8c, $8a, $85, $84, $8b, $92, $8f, $8d, $84, $78, $75, $79, $7e
1f4fc     84 8F 95 8F 
1f500     8C 8D 8B 89 
1f504     87 84 74 65 
1f508     5A 53 58 68 | 	byte	$84, $8f, $95, $8f, $8c, $8d, $8b, $89, $87, $84, $74, $65, $5a, $53, $58, $68
1f50c     7B 86 8A 8C 
1f510     87 84 85 8F 
1f514     93 90 8D 85 
1f518     75 72 7C 80 | 	byte	$7b, $86, $8a, $8c, $87, $84, $85, $8f, $93, $90, $8d, $85, $75, $72, $7c, $80
1f51c     85 8F 93 8C 
1f520     8A 8D 8E 88 
1f524     89 82 72 62 
1f528     56 55 59 6A | 	byte	$85, $8f, $93, $8c, $8a, $8d, $8e, $88, $89, $82, $72, $62, $56, $55, $59, $6a
1f52c     7E 88 89 8A 
1f530     86 86 85 91 
1f534     95 91 8B 81 
1f538     73 74 7B 83 | 	byte	$7e, $88, $89, $8a, $86, $86, $85, $91, $95, $91, $8b, $81, $73, $74, $7b, $83
1f53c     88 8E 92 8B 
1f540     8A 8C 8B 8D 
1f544     87 7E 71 5F 
1f548     56 54 5E 6C | 	byte	$88, $8e, $92, $8b, $8a, $8c, $8b, $8d, $87, $7e, $71, $5f, $56, $54, $5e, $6c
1f54c     80 8A 8A 86 
1f550     87 85 8A 92 
1f554     96 95 8A 7B 
1f558     75 75 7B 85 | 	byte	$80, $8a, $8a, $86, $87, $85, $8a, $92, $96, $95, $8a, $7b, $75, $75, $7b, $85
1f55c     88 90 8E 8C 
1f560     88 8B 8E 8E 
1f564     84 7C 6C 5F 
1f568     53 54 5F 73 | 	byte	$88, $90, $8e, $8c, $88, $8b, $8e, $8e, $84, $7c, $6c, $5f, $53, $54, $5f, $73
1f56c     82 87 88 87 
1f570     88 82 8B 96 
1f574     9A 91 88 7A 
1f578     74 72 81 85 | 	byte	$82, $87, $88, $87, $88, $82, $8b, $96, $9a, $91, $88, $7a, $74, $72, $81, $85
1f57c     8A 8E 91 87 
1f580     87 8C 91 8B 
1f584     83 7C 6B 5A 
1f588     52 59 61 74 | 	byte	$8a, $8e, $91, $87, $87, $8c, $91, $8b, $83, $7c, $6b, $5a, $52, $59, $61, $74
1f58c     84 89 84 87 
1f590     84 85 8C 9A 
1f594     9B 8F 81 7B 
1f598     73 77 80 86 | 	byte	$84, $89, $84, $87, $84, $85, $8c, $9a, $9b, $8f, $81, $7b, $73, $77, $80, $86
1f59c     8A 8D 8D 87 
1f5a0     89 8F 91 89 
1f5a4     82 7A 69 56 
1f5a8     54 5B 65 75 | 	byte	$8a, $8d, $8d, $87, $89, $8f, $91, $89, $82, $7a, $69, $56, $54, $5b, $65, $75
1f5ac     87 86 86 84 
1f5b0     85 87 8F 9E 
1f5b4     9A 8B 81 79 
1f5b8     73 76 81 8A | 	byte	$87, $86, $86, $84, $85, $87, $8f, $9e, $9a, $8b, $81, $79, $73, $76, $81, $8a
1f5bc     87 8D 8C 89 
1f5c0     86 91 8F 8A 
1f5c4     7F 77 64 55 
1f5c8     54 5E 67 79 | 	byte	$87, $8d, $8c, $89, $86, $91, $8f, $8a, $7f, $77, $64, $55, $54, $5e, $67, $79
1f5cc     83 87 83 81 
1f5d0     86 89 96 9C 
1f5d4     99 8A 7F 74 
1f5d8     76 79 83 87 | 	byte	$83, $87, $83, $81, $86, $89, $96, $9c, $99, $8a, $7f, $74, $76, $79, $83, $87
1f5dc     89 88 8B 87 
1f5e0     8A 90 92 88 
1f5e4     7C 72 61 56 
1f5e8     53 5E 6E 7B | 	byte	$89, $88, $8b, $87, $8a, $90, $92, $88, $7c, $72, $61, $56, $53, $5e, $6e, $7b
1f5ec     82 87 81 81 
1f5f0     87 90 96 9F 
1f5f4     99 88 7B 75 
1f5f8     75 7B 83 87 | 	byte	$82, $87, $81, $81, $87, $90, $96, $9f, $99, $88, $7b, $75, $75, $7b, $83, $87
1f5fc     8A 89 8A 8C 
1f600     8B 8F 92 86 
1f604     79 6F 63 53 
1f608     54 63 6F 7B | 	byte	$8a, $89, $8a, $8c, $8b, $8f, $92, $86, $79, $6f, $63, $53, $54, $63, $6f, $7b
1f60c     85 86 80 7F 
1f610     8A 93 97 9F 
1f614     98 87 77 76 
1f618     77 7C 81 8A | 	byte	$85, $86, $80, $7f, $8a, $93, $97, $9f, $98, $87, $77, $76, $77, $7c, $81, $8a
1f61c     87 88 8A 8B 
1f620     8D 93 8F 84 
1f624     77 6B 60 54 
1f628     58 65 73 7D | 	byte	$87, $88, $8a, $8b, $8d, $93, $8f, $84, $77, $6b, $60, $54, $58, $65, $73, $7d
1f62c     83 83 80 80 
1f630     8F 97 9C 9E 
1f634     94 82 76 75 
1f638     78 7E 81 87 | 	byte	$83, $83, $80, $80, $8f, $97, $9c, $9e, $94, $82, $76, $75, $78, $7e, $81, $87
1f63c     88 87 89 8E 
1f640     8F 91 8E 84 
1f644     72 69 5F 55 
1f648     58 6A 77 7B | 	byte	$88, $87, $89, $8e, $8f, $91, $8e, $84, $72, $69, $5f, $55, $58, $6a, $77, $7b
1f64c     82 82 7F 81 
1f650     92 9B 9D 9B 
1f654     93 81 75 76 
1f658     7A 7D 80 87 | 	byte	$82, $82, $7f, $81, $92, $9b, $9d, $9b, $93, $81, $75, $76, $7a, $7d, $80, $87
1f65c     89 86 8B 91 
1f660     90 8F 8B 81 
1f664     70 65 5F 57 
1f668     5A 6B 78 7D | 	byte	$89, $86, $8b, $91, $90, $8f, $8b, $81, $70, $65, $5f, $57, $5a, $6b, $78, $7d
1f66c     7D 81 80 86 
1f670     93 9E 9F 9A 
1f674     8D 7F 74 75 
1f678     7C 7E 80 85 | 	byte	$7d, $81, $80, $86, $93, $9e, $9f, $9a, $8d, $7f, $74, $75, $7c, $7e, $80, $85
1f67c     8A 87 8A 90 
1f680     94 90 87 7C 
1f684     70 63 5D 59 
1f688     5E 6E 79 7C | 	byte	$8a, $87, $8a, $90, $94, $90, $87, $7c, $70, $63, $5d, $59, $5e, $6e, $79, $7c
1f68c     7C 7C 83 88 
1f690     95 A0 A1 9A 
1f694     88 7D 76 76 
1f698     7B 7D 80 86 | 	byte	$7c, $7c, $83, $88, $95, $a0, $a1, $9a, $88, $7d, $76, $76, $7b, $7d, $80, $86
1f69c     88 87 8C 93 
1f6a0     94 8D 84 7B 
1f6a4     6E 63 5B 5C 
1f6a8     63 70 78 7A | 	byte	$88, $87, $8c, $93, $94, $8d, $84, $7b, $6e, $63, $5b, $5c, $63, $70, $78, $7a
1f6ac     7B 7D 84 8D 
1f6b0     9A A1 A1 95 
1f6b4     86 7B 77 76 
1f6b8     7A 7B 81 87 | 	byte	$7b, $7d, $84, $8d, $9a, $a1, $a1, $95, $86, $7b, $77, $76, $7a, $7b, $81, $87
1f6bc     88 88 90 95 
1f6c0     92 89 82 79 
1f6c4     69 5F 5F 5E 
1f6c8     63 72 7A 79 | 	byte	$88, $88, $90, $95, $92, $89, $82, $79, $69, $5f, $5f, $5e, $63, $72, $7a, $79
1f6cc     77 81 86 8E 
1f6d0     9C A6 9E 91 
1f6d4     85 7D 74 76 
1f6d8     7B 7B 81 87 | 	byte	$77, $81, $86, $8e, $9c, $a6, $9e, $91, $85, $7d, $74, $76, $7b, $7b, $81, $87
1f6dc     88 8A 92 94 
1f6e0     92 87 81 75 
1f6e4     67 5F 5F 61 
1f6e8     66 71 79 76 | 	byte	$88, $8a, $92, $94, $92, $87, $81, $75, $67, $5f, $5f, $61, $66, $71, $79, $76
1f6ec     77 7F 89 95 
1f6f0     A0 A5 9F 8F 
1f6f4     82 7C 75 76 
1f6f8     79 7E 81 86 | 	byte	$77, $7f, $89, $95, $a0, $a5, $9f, $8f, $82, $7c, $75, $76, $79, $7e, $81, $86
1f6fc     87 8F 92 95 
1f700     90 88 7C 73 
1f704     66 60 5F 64 
1f708     6A 71 77 74 | 	byte	$87, $8f, $92, $95, $90, $88, $7c, $73, $66, $60, $5f, $64, $6a, $71, $77, $74
1f70c     78 80 8E 99 
1f710     A3 A2 9C 8C 
1f714     81 78 77 76 
1f718     79 7C 83 87 | 	byte	$78, $80, $8e, $99, $a3, $a2, $9c, $8c, $81, $78, $77, $76, $79, $7c, $83, $87
1f71c     88 8F 94 93 
1f720     8D 85 7A 6E 
1f724     64 62 61 66 
1f728     6C 73 75 73 | 	byte	$88, $8f, $94, $93, $8d, $85, $7a, $6e, $64, $62, $61, $66, $6c, $73, $75, $73
1f72c     78 83 90 9E 
1f730     A3 A2 99 8B 
1f734     7D 77 76 78 
1f738     77 7D 87 86 | 	byte	$78, $83, $90, $9e, $a3, $a2, $99, $8b, $7d, $77, $76, $78, $77, $7d, $87, $86
1f73c     89 90 95 91 
1f740     8C 82 79 6A 
1f744     65 62 65 67 
1f748     6E 72 74 70 | 	byte	$89, $90, $95, $91, $8c, $82, $79, $6a, $65, $62, $65, $67, $6e, $72, $74, $70
1f74c     7A 89 94 9F 
1f750     A5 A1 97 88 
1f754     7D 78 73 77 
1f758     78 7F 83 89 | 	byte	$7a, $89, $94, $9f, $a5, $a1, $97, $88, $7d, $78, $73, $77, $78, $7f, $83, $89
1f75c     8D 8F 94 93 
1f760     88 7F 74 6A 
1f764     63 63 68 68 
1f768     6D 73 72 6D | 	byte	$8d, $8f, $94, $93, $88, $7f, $74, $6a, $63, $63, $68, $68, $6d, $73, $72, $6d
1f76c     7B 8D 9A 9D 
1f770     A7 A2 93 84 
1f774     7F 76 72 75 
1f778     7C 7C 82 8B | 	byte	$7b, $8d, $9a, $9d, $a7, $a2, $93, $84, $7f, $76, $72, $75, $7c, $7c, $82, $8b
1f77c     8F 90 92 93 
1f780     87 7A 72 6B 
1f784     63 65 67 6C 
1f788     6E 71 6F 71 | 	byte	$8f, $90, $92, $93, $87, $7a, $72, $6b, $63, $65, $67, $6c, $6e, $71, $6f, $71
1f78c     7C 90 9B A2 
1f790     A5 9F 92 81 
1f794     7A 78 73 73 
1f798     7A 80 86 89 | 	byte	$7c, $90, $9b, $a2, $a5, $9f, $92, $81, $7a, $78, $73, $73, $7a, $80, $86, $89
1f79c     90 91 93 90 
1f7a0     84 77 70 6A 
1f7a4     64 66 69 6E 
1f7a8     6F 6D 6D 73 | 	byte	$90, $91, $93, $90, $84, $77, $70, $6a, $64, $66, $69, $6e, $6f, $6d, $6d, $73
1f7ac     82 94 9D A4 
1f7b0     A4 9E 8D 80 
1f7b4     7A 76 72 74 
1f7b8     79 81 86 8B | 	byte	$82, $94, $9d, $a4, $a4, $9e, $8d, $80, $7a, $76, $72, $74, $79, $81, $86, $8b
1f7bc     90 93 92 8C 
1f7c0     82 74 71 69 
1f7c4     65 68 6E 6D 
1f7c8     6C 6D 6D 74 | 	byte	$90, $93, $92, $8c, $82, $74, $71, $69, $65, $68, $6e, $6d, $6c, $6d, $6d, $74
1f7cc     87 98 A1 A4 
1f7d0     A4 9D 89 7E 
1f7d4     7B 75 6E 74 
1f7d8     7E 82 83 8D | 	byte	$87, $98, $a1, $a4, $a4, $9d, $89, $7e, $7b, $75, $6e, $74, $7e, $82, $83, $8d
1f7dc     93 91 8F 8B 
1f7e0     7F 74 6E 6B 
1f7e4     66 68 70 6C 
1f7e8     6B 6B 6E 79 | 	byte	$93, $91, $8f, $8b, $7f, $74, $6e, $6b, $66, $68, $70, $6c, $6b, $6b, $6e, $79
1f7ec     88 9A A5 A4 
1f7f0     A2 9A 88 7C 
1f7f4     78 73 70 75 
1f7f8     7E 82 86 8F | 	byte	$88, $9a, $a5, $a4, $a2, $9a, $88, $7c, $78, $73, $70, $75, $7e, $82, $86, $8f
1f7fc     94 91 8D 89 
1f800     7C 71 6C 6B 
1f804     69 6A 70 6D 
1f808     6B 69 6E 7C | 	byte	$94, $91, $8d, $89, $7c, $71, $6c, $6b, $69, $6a, $70, $6d, $6b, $69, $6e, $7c
1f80c     8C 9D A7 A3 
1f810     9F 95 89 7B 
1f814     73 74 73 74 
1f818     7D 84 89 90 | 	byte	$8c, $9d, $a7, $a3, $9f, $95, $89, $7b, $73, $74, $73, $74, $7d, $84, $89, $90
1f81c     93 91 8C 84 
1f820     7E 6F 6D 6D 
1f824     6B 6B 6D 6E 
1f828     6A 67 71 81 | 	byte	$93, $91, $8c, $84, $7e, $6f, $6d, $6d, $6b, $6b, $6d, $6e, $6a, $67, $71, $81
1f82c     8E A1 A7 A3 
1f830     9C 95 88 76 
1f834     72 76 72 73 
1f838     7E 88 89 8E | 	byte	$8e, $a1, $a7, $a3, $9c, $95, $88, $76, $72, $76, $72, $73, $7e, $88, $89, $8e
1f83c     96 91 87 82 
1f840     7A 70 6A 6E 
1f844     6E 6A 6E 70 
1f848     67 68 72 85 | 	byte	$96, $91, $87, $82, $7a, $70, $6a, $6e, $6e, $6a, $6e, $70, $67, $68, $72, $85
1f84c     94 A0 A8 A3 
1f850     9A 91 84 78 
1f854     72 73 75 74 
1f858     7F 87 8C 90 | 	byte	$94, $a0, $a8, $a3, $9a, $91, $84, $78, $72, $73, $75, $74, $7f, $87, $8c, $90
1f85c     93 90 87 7E 
1f860     77 71 6C 6D 
1f864     6E 6F 6C 6D 
1f868     67 69 75 88 | 	byte	$93, $90, $87, $7e, $77, $71, $6c, $6d, $6e, $6f, $6c, $6d, $67, $69, $75, $88
1f86c     97 A3 A7 A2 
1f870     98 8E 81 76 
1f874     73 71 74 77 
1f878     80 87 8E 92 | 	byte	$97, $a3, $a7, $a2, $98, $8e, $81, $76, $73, $71, $74, $77, $80, $87, $8e, $92
1f87c     93 8C 85 7D 
1f880     73 71 6E 6D 
1f884     6D 70 6E 68 
1f888     66 6D 78 8A | 	byte	$93, $8c, $85, $7d, $73, $71, $6e, $6d, $6d, $70, $6e, $68, $66, $6d, $78, $8a
1f88c     9C A5 A6 A0 
1f890     97 8D 7D 74 
1f894     74 72 73 78 
1f898     80 8A 8D 92 | 	byte	$9c, $a5, $a6, $a0, $97, $8d, $7d, $74, $74, $72, $73, $78, $80, $8a, $8d, $92
1f89c     92 8A 84 7B 
1f8a0     74 6F 6D 6F 
1f8a4     6F 6E 6C 6A 
1f8a8     69 6B 7C 91 | 	byte	$92, $8a, $84, $7b, $74, $6f, $6d, $6f, $6f, $6e, $6c, $6a, $69, $6b, $7c, $91
1f8ac     9F A5 A5 A0 
1f8b0     94 88 7B 74 
1f8b4     71 74 75 77 
1f8b8     82 8C 90 91 | 	byte	$9f, $a5, $a5, $a0, $94, $88, $7b, $74, $71, $74, $75, $77, $82, $8c, $90, $91
1f8bc     8E 8B 80 79 
1f8c0     72 70 6E 70 
1f8c4     6F 6D 6C 69 
1f8c8     68 6F 82 93 | 	byte	$8e, $8b, $80, $79, $72, $70, $6e, $70, $6f, $6d, $6c, $69, $68, $6f, $82, $93
1f8cc     A1 A4 A6 9B 
1f8d0     94 85 79 72 
1f8d4     75 71 74 7A 
1f8d8     86 8D 8F 94 | 	byte	$a1, $a4, $a6, $9b, $94, $85, $79, $72, $75, $71, $74, $7a, $86, $8d, $8f, $94
1f8dc     8E 86 7F 79 
1f8e0     70 70 70 71 
1f8e4     6C 6E 6E 68 
1f8e8     67 74 86 96 | 	byte	$8e, $86, $7f, $79, $70, $70, $70, $71, $6c, $6e, $6e, $68, $67, $74, $86, $96
1f8ec     A0 A8 A5 98 
1f8f0     90 84 78 71 
1f8f4     74 74 73 7B 
1f8f8     88 8B 90 92 | 	byte	$a0, $a8, $a5, $98, $90, $84, $78, $71, $74, $74, $73, $7b, $88, $8b, $90, $92
1f8fc     8E 84 7C 77 
1f900     72 6E 70 71 
1f904     6F 6E 6C 67 
1f908     69 78 88 98 | 	byte	$8e, $84, $7c, $77, $72, $6e, $70, $71, $6f, $6e, $6c, $67, $69, $78, $88, $98
1f90c     A2 A8 A2 97 
1f910     8A 84 75 72 
1f914     74 74 74 7E 
1f918     88 8F 8E 92 | 	byte	$a2, $a8, $a2, $97, $8a, $84, $75, $72, $74, $74, $74, $7e, $88, $8f, $8e, $92
1f91c     8D 80 7A 77 
1f920     73 6D 70 72 
1f924     71 6A 6C 69 
1f928     6D 7A 8B 9A | 	byte	$8d, $80, $7a, $77, $73, $6d, $70, $72, $71, $6a, $6c, $69, $6d, $7a, $8b, $9a
1f92c     A4 A6 A0 93 
1f930     8B 80 73 73 
1f934     73 75 76 7E 
1f938     8A 8E 91 8F | 	byte	$a4, $a6, $a0, $93, $8b, $80, $73, $73, $73, $75, $76, $7e, $8a, $8e, $91, $8f
1f93c     88 81 78 77 
1f940     71 6E 72 73 
1f944     6F 6C 6A 6C 
1f948     6F 7A 90 9D | 	byte	$88, $81, $78, $77, $71, $6e, $72, $73, $6f, $6c, $6a, $6c, $6f, $7a, $90, $9d
1f94c     A3 A4 9E 92 
1f950     86 7D 75 71 
1f954     75 75 79 7F 
1f958     8A 91 91 8A | 	byte	$a3, $a4, $9e, $92, $86, $7d, $75, $71, $75, $75, $79, $7f, $8a, $91, $91, $8a
1f95c     89 7F 79 73 
1f960     71 6F 71 72 
1f964     6F 6D 6C 6D 
1f968     71 80 92 A0 | 	byte	$89, $7f, $79, $73, $71, $6f, $71, $72, $6f, $6d, $6c, $6d, $71, $80, $92, $a0
1f96c     A3 A3 9C 90 
1f970     83 7B 75 72 
1f974     74 77 7A 82 
1f978     8C 90 8E 8C | 	byte	$a3, $a3, $9c, $90, $83, $7b, $75, $72, $74, $77, $7a, $82, $8c, $90, $8e, $8c
1f97c     85 7D 77 74 
1f980     71 70 72 72 
1f984     6F 6D 6D 6D 
1f988     73 84 95 9F | 	byte	$85, $7d, $77, $74, $71, $70, $72, $72, $6f, $6d, $6d, $6d, $73, $84, $95, $9f
1f98c     A4 A0 9B 8D 
1f990     80 79 76 72 
1f994     74 78 7C 84 
1f998     8D 90 8C 8C | 	byte	$a4, $a0, $9b, $8d, $80, $79, $76, $72, $74, $78, $7c, $84, $8d, $90, $8c, $8c
1f99c     84 7C 75 74 
1f9a0     72 70 70 73 
1f9a4     71 6D 6C 6F 
1f9a8     78 86 97 A0 | 	byte	$84, $7c, $75, $74, $72, $70, $70, $73, $71, $6d, $6c, $6f, $78, $86, $97, $a0
1f9ac     A3 A0 98 89 
1f9b0     7D 78 76 72 
1f9b4     75 7A 7F 83 
1f9b8     8D 8F 8C 88 | 	byte	$a3, $a0, $98, $89, $7d, $78, $76, $72, $75, $7a, $7f, $83, $8d, $8f, $8c, $88
1f9bc     82 7B 74 72 
1f9c0     73 6F 71 73 
1f9c4     71 6F 6D 72 
1f9c8     7B 88 97 A1 | 	byte	$82, $7b, $74, $72, $73, $6f, $71, $73, $71, $6f, $6d, $72, $7b, $88, $97, $a1
1f9cc     A3 9F 93 88 
1f9d0     7B 78 76 74 
1f9d4     74 7D 80 84 
1f9d8     8D 8F 8D 84 | 	byte	$a3, $9f, $93, $88, $7b, $78, $76, $74, $74, $7d, $80, $84, $8d, $8f, $8d, $84
1f9dc     80 7B 74 71 
1f9e0     72 72 70 70 
1f9e4     74 6F 6C 74 
1f9e8     7F 8C 98 A2 | 	byte	$80, $7b, $74, $71, $72, $72, $70, $70, $74, $6f, $6c, $74, $7f, $8c, $98, $a2
1f9ec     A2 9B 91 86 
1f9f0     79 77 75 75 
1f9f4     76 7D 83 87 
1f9f8     8A 8E 8C 84 | 	byte	$a2, $9b, $91, $86, $79, $77, $75, $75, $76, $7d, $83, $87, $8a, $8e, $8c, $84
1f9fc     7F 79 75 71 
1fa00     71 71 71 72 
1fa04     74 70 6F 76 
1fa08     82 8E 98 A1 | 	byte	$7f, $79, $75, $71, $71, $71, $71, $72, $74, $70, $6f, $76, $82, $8e, $98, $a1
1fa0c     A3 99 8D 81 
1fa10     7A 77 76 76 
1fa14     79 7F 84 87 
1fa18     8A 8C 8A 82 | 	byte	$a3, $99, $8d, $81, $7a, $77, $76, $76, $79, $7f, $84, $87, $8a, $8c, $8a, $82
1fa1c     7C 7A 75 71 
1fa20     6F 74 73 71 
1fa24     73 72 6F 79 
1fa28     84 8F 99 A1 | 	byte	$7c, $7a, $75, $71, $6f, $74, $73, $71, $73, $72, $6f, $79, $84, $8f, $99, $a1
1fa2c     A2 96 89 81 
1fa30     7B 74 75 78 
1fa34     7D 7F 83 87 
1fa38     8B 88 88 81 | 	byte	$a2, $96, $89, $81, $7b, $74, $75, $78, $7d, $7f, $83, $87, $8b, $88, $88, $81
1fa3c     7C 79 74 70 
1fa40     6F 73 73 73 
1fa44     73 72 74 7C 
1fa48     83 92 9B A1 | 	byte	$7c, $79, $74, $70, $6f, $73, $73, $73, $73, $72, $74, $7c, $83, $92, $9b, $a1
1fa4c     9D 94 86 7E 
1fa50     77 76 74 7B 
1fa54     7F 81 82 87 
1fa58     8A 88 84 82 | 	byte	$9d, $94, $86, $7e, $77, $76, $74, $7b, $7f, $81, $82, $87, $8a, $88, $84, $82
1fa5c     7C 76 73 71 
1fa60     71 71 75 74 
1fa64     75 72 77 7B 
1fa68     86 93 9D 9D | 	byte	$7c, $76, $73, $71, $71, $71, $75, $74, $75, $72, $77, $7b, $86, $93, $9d, $9d
1fa6c     9C 91 85 7B 
1fa70     78 76 75 7D 
1fa74     81 82 81 88 
1fa78     8A 86 83 81 | 	byte	$9c, $91, $85, $7b, $78, $76, $75, $7d, $81, $82, $81, $88, $8a, $86, $83, $81
1fa7c     7B 76 71 71 
1fa80     71 71 76 76 
1fa84     73 76 7A 7F 
1fa88     86 95 9E 9C | 	byte	$7b, $76, $71, $71, $71, $71, $76, $76, $73, $76, $7a, $7f, $86, $95, $9e, $9c
1fa8c     99 8D 82 7A 
1fa90     78 77 79 7D 
1fa94     84 81 82 87 
1fa98     89 85 82 81 | 	byte	$99, $8d, $82, $7a, $78, $77, $79, $7d, $84, $81, $82, $87, $89, $85, $82, $81
1fa9c     7A 73 70 72 
1faa0     6F 72 77 78 
1faa4     75 77 7C 81 
1faa8     88 97 9C 9B | 	byte	$7a, $73, $70, $72, $6f, $72, $77, $78, $75, $77, $7c, $81, $88, $97, $9c, $9b
1faac     94 8A 81 79 
1fab0     77 79 7B 80 
1fab4     84 82 83 85 
1fab8     86 85 81 7F | 	byte	$94, $8a, $81, $79, $77, $79, $7b, $80, $84, $82, $83, $85, $86, $85, $81, $7f
1fabc     79 74 70 71 
1fac0     71 73 77 78 
1fac4     79 77 7C 83 
1fac8     8C 93 9D 9C | 	byte	$79, $74, $70, $71, $71, $73, $77, $78, $79, $77, $7c, $83, $8c, $93, $9d, $9c
1facc     93 86 7D 79 
1fad0     77 79 7D 83 
1fad4     84 82 82 85 
1fad8     84 86 81 7D | 	byte	$93, $86, $7d, $79, $77, $79, $7d, $83, $84, $82, $82, $85, $84, $86, $81, $7d
1fadc     77 75 71 6E 
1fae0     70 77 78 79 
1fae4     79 79 7E 85 
1fae8     8E 95 9B 9A | 	byte	$77, $75, $71, $6e, $70, $77, $78, $79, $79, $79, $7e, $85, $8e, $95, $9b, $9a
1faec     91 82 7C 79 
1faf0     78 78 80 86 
1faf4     85 81 82 83 
1faf8     86 83 81 7B | 	byte	$91, $82, $7c, $79, $78, $78, $80, $86, $85, $81, $82, $83, $86, $83, $81, $7b
1fafc     78 73 71 6E 
1fb00     72 78 7B 79 
1fb04     78 7C 80 84 
1fb08     8C 97 9C 96 | 	byte	$78, $73, $71, $6e, $72, $78, $7b, $79, $78, $7c, $80, $84, $8c, $97, $9c, $96
1fb0c     8C 81 7A 7A 
1fb10     79 7D 83 85 
1fb14     85 80 7F 83 
1fb18     85 81 7D 7B | 	byte	$8c, $81, $7a, $7a, $79, $7d, $83, $85, $85, $80, $7f, $83, $85, $81, $7d, $7b
1fb1c     79 71 70 70 
1fb20     74 79 7B 79 
1fb24     7B 7C 82 86 
1fb28     8D 99 9A 91 | 	byte	$79, $71, $70, $70, $74, $79, $7b, $79, $7b, $7c, $82, $86, $8d, $99, $9a, $91
1fb2c     88 7F 7C 7A 
1fb30     7A 82 85 85 
1fb34     84 7F 7E 83 
1fb38     83 80 7B 7C | 	byte	$88, $7f, $7c, $7a, $7a, $82, $85, $85, $84, $7f, $7e, $83, $83, $80, $7b, $7c
1fb3c     75 71 6F 73 
1fb40     75 7A 7B 7C 
1fb44     7C 7C 83 88 
1fb48     8F 96 98 8E | 	byte	$75, $71, $6f, $73, $75, $7a, $7b, $7c, $7c, $7c, $83, $88, $8f, $96, $98, $8e
1fb4c     85 7D 7C 7B 
1fb50     7E 82 88 84 
1fb54     81 7F 7E 80 
1fb58     81 80 7B 79 | 	byte	$85, $7d, $7c, $7b, $7e, $82, $88, $84, $81, $7f, $7e, $80, $81, $80, $7b, $79
1fb5c     75 73 70 73 
1fb60     77 7C 7B 7D 
1fb64     7D 7E 82 8C 
1fb68     8E 96 95 8C | 	byte	$75, $73, $70, $73, $77, $7c, $7b, $7d, $7d, $7e, $82, $8c, $8e, $96, $95, $8c
1fb6c     81 7C 7E 7E 
1fb70     81 86 88 84 
1fb74     80 7C 7E 7F 
1fb78     82 7E 7B 77 | 	byte	$81, $7c, $7e, $7e, $81, $86, $88, $84, $80, $7c, $7e, $7f, $82, $7e, $7b, $77
1fb7c     75 71 73 73 
1fb80     78 7D 7E 7D 
1fb84     7D 7F 85 8A 
1fb88     90 96 8F 88 | 	byte	$75, $71, $73, $73, $78, $7d, $7e, $7d, $7d, $7f, $85, $8a, $90, $96, $8f, $88
1fb8c     7F 7D 7B 80 
1fb90     85 88 85 85 
1fb94     80 7D 7E 80 
1fb98     80 7D 79 77 | 	byte	$7f, $7d, $7b, $80, $85, $88, $85, $85, $80, $7d, $7e, $80, $80, $7d, $79, $77
1fb9c     74 72 73 74 
1fba0     79 7D 7F 7C 
1fba4     7D 81 87 8C 
1fba8     93 93 8E 86 | 	byte	$74, $72, $73, $74, $79, $7d, $7f, $7c, $7d, $81, $87, $8c, $93, $93, $8e, $86
1fbac     80 7B 7D 82 
1fbb0     87 88 86 83 
1fbb4     80 7D 7C 81 
1fbb8     7E 7C 78 76 | 	byte	$80, $7b, $7d, $82, $87, $88, $86, $83, $80, $7d, $7c, $81, $7e, $7c, $78, $76
1fbbc     75 72 73 77 
1fbc0     78 7F 7E 7C 
1fbc4     7D 81 8B 8D 
1fbc8     92 93 8D 84 | 	byte	$75, $72, $73, $77, $78, $7f, $7e, $7c, $7d, $81, $8b, $8d, $92, $93, $8d, $84
1fbcc     7C 7B 81 83 
1fbd0     87 87 86 82 
1fbd4     7F 7D 80 80 
1fbd8     7F 7A 76 76 | 	byte	$7c, $7b, $81, $83, $87, $87, $86, $82, $7f, $7d, $80, $80, $7f, $7a, $76, $76
1fbdc     74 73 72 77 
1fbe0     7B 7D 7D 7D 
1fbe4     7D 84 8A 90 
1fbe8     91 91 8C 81 | 	byte	$74, $73, $72, $77, $7b, $7d, $7d, $7d, $7d, $84, $8a, $90, $91, $91, $8c, $81
1fbec     7A 7E 82 83 
1fbf0     85 88 86 81 
1fbf4     7E 7F 81 7E 
1fbf8     7D 7A 76 75 | 	byte	$7a, $7e, $82, $83, $85, $88, $86, $81, $7e, $7f, $81, $7e, $7d, $7a, $76, $75
1fbfc     74 73 72 77 
1fc00     7D 7C 7D 7C 
1fc04     81 85 8B 91 
1fc08     94 8F 87 7F | 	byte	$74, $73, $72, $77, $7d, $7c, $7d, $7c, $81, $85, $8b, $91, $94, $8f, $87, $7f
1fc0c     7D 7F 81 85 
1fc10     87 87 84 81 
1fc14     7D 7F 80 81 
1fc18     79 79 77 75 | 	byte	$7d, $7f, $81, $85, $87, $87, $84, $81, $7d, $7f, $80, $81, $79, $79, $77, $75
1fc1c     73 74 75 79 
1fc20     7B 7C 7D 7B 
1fc24     82 87 8D 92 
1fc28     93 8D 83 7E | 	byte	$73, $74, $75, $79, $7b, $7c, $7d, $7b, $82, $87, $8d, $92, $93, $8d, $83, $7e
1fc2c     7F 7E 81 86 
1fc30     89 87 81 81 
1fc34     7F 7F 80 7E 
1fc38     79 77 77 74 | 	byte	$7f, $7e, $81, $86, $89, $87, $81, $81, $7f, $7f, $80, $7e, $79, $77, $77, $74
1fc3c     72 75 76 79 
1fc40     7B 7C 7C 7D 
1fc44     82 89 8F 93 
1fc48     91 89 82 7D | 	byte	$72, $75, $76, $79, $7b, $7c, $7c, $7d, $82, $89, $8f, $93, $91, $89, $82, $7d
1fc4c     7E 80 83 88 
1fc50     87 85 83 80 
1fc54     7F 81 81 7C 
1fc58     77 77 77 72 | 	byte	$7e, $80, $83, $88, $87, $85, $83, $80, $7f, $81, $81, $7c, $77, $77, $77, $72
1fc5c     74 75 76 79 
1fc60     7C 7D 7B 7D 
1fc64     85 8B 90 93 
1fc68     8F 88 80 7E | 	byte	$74, $75, $76, $79, $7c, $7d, $7b, $7d, $85, $8b, $90, $93, $8f, $88, $80, $7e
1fc6c     7E 80 84 88 
1fc70     85 85 82 80 
1fc74     80 80 80 7B 
1fc78     77 76 75 71 | 	byte	$7e, $80, $84, $88, $85, $85, $82, $80, $80, $80, $80, $7b, $77, $76, $75, $71
1fc7c     75 75 77 7A 
1fc80     7C 7B 7A 80 
1fc84     87 8B 91 93 
1fc88     8D 87 7E 7F | 	byte	$75, $75, $77, $7a, $7c, $7b, $7a, $80, $87, $8b, $91, $93, $8d, $87, $7e, $7f
1fc8c     7F 81 85 87 
1fc90     87 84 81 81 
1fc94     81 81 7F 7A 
1fc98     76 75 74 73 | 	byte	$7f, $81, $85, $87, $87, $84, $81, $81, $81, $81, $7f, $7a, $76, $75, $74, $73
1fc9c     73 76 79 7A 
1fca0     7B 7C 7D 81 
1fca4     86 8E 93 90 
1fca8     8C 84 7E 7E | 	byte	$73, $76, $79, $7a, $7b, $7c, $7d, $81, $86, $8e, $93, $90, $8c, $84, $7e, $7e
1fcac     82 82 84 88 
1fcb0     88 81 81 82 
1fcb4     82 80 7D 7B 
1fcb8     74 75 74 72 | 	byte	$82, $82, $84, $88, $88, $81, $81, $82, $82, $80, $7d, $7b, $74, $75, $74, $72
1fcbc     73 79 79 79 
1fcc0     7B 7D 7C 81 
1fcc4     89 91 92 91 
1fcc8     89 82 7F 81 | 	byte	$73, $79, $79, $79, $7b, $7d, $7c, $81, $89, $91, $92, $91, $89, $82, $7f, $81
1fccc     81 83 86 87 
1fcd0     84 82 82 81 
1fcd4     83 80 7D 78 
1fcd8     75 75 72 72 | 	byte	$81, $83, $86, $87, $84, $82, $82, $81, $83, $80, $7d, $78, $75, $75, $72, $72
1fcdc     76 78 78 7A 
1fce0     7B 7C 7D 83 
1fce4     8B 92 91 8E 
1fce8     87 82 7F 80 | 	byte	$76, $78, $78, $7a, $7b, $7c, $7d, $83, $8b, $92, $91, $8e, $87, $82, $7f, $80
1fcec     81 84 85 87 
1fcf0     84 82 83 83 
1fcf4     82 7E 7D 78 
1fcf8     74 73 74 73 | 	byte	$81, $84, $85, $87, $84, $82, $83, $83, $82, $7e, $7d, $78, $74, $73, $74, $73
1fcfc     76 78 7A 7A 
1fd00     7B 7B 7E 84 
1fd04     8E 91 90 8D 
1fd08     88 80 7E 82 | 	byte	$76, $78, $7a, $7a, $7b, $7b, $7e, $84, $8e, $91, $90, $8d, $88, $80, $7e, $82
1fd0c     83 83 86 86 
1fd10     83 82 84 83 
1fd14     7F 7F 7D 76 
1fd18     74 74 73 73 | 	byte	$83, $83, $86, $86, $83, $82, $84, $83, $7f, $7f, $7d, $76, $74, $74, $73, $73
1fd1c     76 7A 7A 79 
1fd20     7A 7C 7F 86 
1fd24     90 91 90 8C 
1fd28     87 80 7F 82 | 	byte	$76, $7a, $7a, $79, $7a, $7c, $7f, $86, $90, $91, $90, $8c, $87, $80, $7f, $82
1fd2c     84 83 85 87 
1fd30     83 83 83 84 
1fd34     80 7D 7C 76 
1fd38     72 73 74 76 | 	byte	$84, $83, $85, $87, $83, $83, $83, $84, $80, $7d, $7c, $76, $72, $73, $74, $76
1fd3c     75 7A 7D 79 
1fd40     77 7D 82 87 
1fd44     8F 93 90 89 
1fd48     84 80 7E 83 | 	byte	$75, $7a, $7d, $79, $77, $7d, $82, $87, $8f, $93, $90, $89, $84, $80, $7e, $83
1fd4c     84 84 84 86 
1fd50     85 82 82 84 
1fd54     80 7C 78 76 
1fd58     73 71 74 76 | 	byte	$84, $84, $84, $86, $85, $82, $82, $84, $80, $7c, $78, $76, $73, $71, $74, $76
1fd5c     78 7B 7B 78 
1fd60     77 7E 84 88 
1fd64     90 94 8F 87 
1fd68     83 83 7F 82 | 	byte	$78, $7b, $7b, $78, $77, $7e, $84, $88, $90, $94, $8f, $87, $83, $83, $7f, $82
1fd6c     84 84 85 87 
1fd70     85 82 82 84 
1fd74     80 79 78 77 
1fd78     73 71 74 78 | 	byte	$84, $84, $85, $87, $85, $82, $82, $84, $80, $79, $78, $77, $73, $71, $74, $78
1fd7c     79 7A 7B 77 
1fd80     79 7F 83 8B 
1fd84     90 95 8D 84 
1fd88     83 82 80 81 | 	byte	$79, $7a, $7b, $77, $79, $7f, $83, $8b, $90, $95, $8d, $84, $83, $82, $80, $81
1fd8c     85 86 86 85 
1fd90     85 82 84 82 
1fd94     7E 79 79 76 
1fd98     71 70 77 7A | 	byte	$85, $86, $86, $85, $85, $82, $84, $82, $7e, $79, $79, $76, $71, $70, $77, $7a
1fd9c     79 7A 7B 78 
1fda0     77 7F 88 8C 
1fda4     91 93 8B 84 
1fda8     82 83 7F 81 | 	byte	$79, $7a, $7b, $78, $77, $7f, $88, $8c, $91, $93, $8b, $84, $82, $83, $7f, $81
1fdac     85 87 84 85 
1fdb0     86 85 81 81 
1fdb4     7D 78 75 75 
1fdb8     72 72 77 7A | 	byte	$85, $87, $84, $85, $86, $85, $81, $81, $7d, $78, $75, $75, $72, $72, $77, $7a
1fdbc     7A 78 7B 78 
1fdc0     78 7D 8A 8D 
1fdc4     91 90 8D 83 
1fdc8     7F 82 82 81 | 	byte	$7a, $78, $7b, $78, $78, $7d, $8a, $8d, $91, $90, $8d, $83, $7f, $82, $82, $81
1fdcc     85 87 84 86 
1fdd0     85 85 80 81 
1fdd4     7D 76 74 75 
1fdd8     73 72 77 7D | 	byte	$85, $87, $84, $86, $85, $85, $80, $81, $7d, $76, $74, $75, $73, $72, $77, $7d
1fddc     7B 79 79 76 
1fde0     78 81 8B 8E 
1fde4     90 90 8B 81 
1fde8     7F 83 83 81 | 	byte	$7b, $79, $79, $76, $78, $81, $8b, $8e, $90, $90, $8b, $81, $7f, $83, $83, $81
1fdec     84 87 87 83 
1fdf0     86 84 82 7E 
1fdf4     7B 76 74 74 
1fdf8     73 73 77 7E | 	byte	$84, $87, $87, $83, $86, $84, $82, $7e, $7b, $76, $74, $74, $73, $73, $77, $7e
1fdfc     7C 78 76 78 
1fe00     7A 82 8A 91 
1fe04     8F 8F 87 82 
1fe08     7F 83 83 81 | 	byte	$7c, $78, $76, $78, $7a, $82, $8a, $91, $8f, $8f, $87, $82, $7f, $83, $83, $81
1fe0c     85 89 86 83 
1fe10     86 85 81 7C 
1fe14     7A 76 74 72 
1fe18     74 75 79 7D | 	byte	$85, $89, $86, $83, $86, $85, $81, $7c, $7a, $76, $74, $72, $74, $75, $79, $7d
1fe1c     7C 77 76 78 
1fe20     7A 83 8D 91 
1fe24     8F 8C 87 82 
1fe28     7F 82 83 83 | 	byte	$7c, $77, $76, $78, $7a, $83, $8d, $91, $8f, $8c, $87, $82, $7f, $82, $83, $83
1fe2c     86 89 85 84 
1fe30     86 85 7E 7C 
1fe34     7A 74 73 73 
1fe38     73 76 7C 7E | 	byte	$86, $89, $85, $84, $86, $85, $7e, $7c, $7a, $74, $73, $73, $73, $76, $7c, $7e
1fe3c     7B 77 77 77 
1fe40     7C 86 8F 8F 
1fe44     8E 8C 86 80 
1fe48     80 83 84 83 | 	byte	$7b, $77, $77, $77, $7c, $86, $8f, $8f, $8e, $8c, $86, $80, $80, $83, $84, $83
1fe4c     88 88 86 85 
1fe50     87 83 7D 7C 
1fe54     77 74 73 73 
1fe58     75 79 7B 7F | 	byte	$88, $88, $86, $85, $87, $83, $7d, $7c, $77, $74, $73, $73, $75, $79, $7b, $7f
1fe5c     7A 77 75 78 
1fe60     7E 88 8D 92 
1fe64     8E 8A 86 80 
1fe68     80 82 85 85 | 	byte	$7a, $77, $75, $78, $7e, $88, $8d, $92, $8e, $8a, $86, $80, $80, $82, $85, $85
1fe6c     87 89 87 84 
1fe70     86 83 7D 78 
1fe74     77 75 72 73 
1fe78     77 7A 7C 7E | 	byte	$87, $89, $87, $84, $86, $83, $7d, $78, $77, $75, $72, $73, $77, $7a, $7c, $7e
1fe7c     7B 76 74 79 
1fe80     80 88 8E 92 
1fe84     8D 88 84 82 
1fe88     7F 82 86 86 | 	byte	$7b, $76, $74, $79, $80, $88, $8e, $92, $8d, $88, $84, $82, $7f, $82, $86, $86
1fe8c     87 88 86 86 
1fe90     85 82 7C 76 
1fe94     76 73 72 72 
1fe98     79 7A 7E 7D | 	byte	$87, $88, $86, $86, $85, $82, $7c, $76, $76, $73, $72, $72, $79, $7a, $7e, $7d
1fe9c     7A 74 74 79 
1fea0     82 88 90 90 
1fea4     8C 87 83 81 
1fea8     7F 83 85 87 | 	byte	$7a, $74, $74, $79, $82, $88, $90, $90, $8c, $87, $83, $81, $7f, $83, $85, $87
1feac     87 88 86 87 
1feb0     83 80 7B 77 
1feb4     74 74 72 74 
1feb8     78 7D 7F 7E | 	byte	$87, $88, $86, $87, $83, $80, $7b, $77, $74, $74, $72, $74, $78, $7d, $7f, $7e
1febc     79 74 75 7A 
1fec0     83 8B 90 8E 
1fec4     8D 85 83 80 
1fec8     81 83 87 88 | 	byte	$79, $74, $75, $7a, $83, $8b, $90, $8e, $8d, $85, $83, $80, $81, $83, $87, $88
1fecc     88 86 88 86 
1fed0     84 7F 79 77 
1fed4     73 73 72 76 
1fed8     7A 7E 80 7D | 	byte	$88, $86, $88, $86, $84, $7f, $79, $77, $73, $73, $72, $76, $7a, $7e, $80, $7d
1fedc     76 75 74 7D 
1fee0     84 8D 90 8E 
1fee4     88 87 81 7F 
1fee8     81 85 87 88 | 	byte	$76, $75, $74, $7d, $84, $8d, $90, $8e, $88, $87, $81, $7f, $81, $85, $87, $88
1feec     89 86 87 86 
1fef0     83 7B 78 76 
1fef4     74 71 73 76 
1fef8     7B 7E 80 7C | 	byte	$89, $86, $87, $86, $83, $7b, $78, $76, $74, $71, $73, $76, $7b, $7e, $80, $7c
1fefc     77 73 76 7D 
1ff00     87 8F 8F 8D 
1ff04     89 85 80 7F 
1ff08     82 87 87 88 | 	byte	$77, $73, $76, $7d, $87, $8f, $8f, $8d, $89, $85, $80, $7f, $82, $87, $87, $88
1ff0c     87 87 86 86 
1ff10     82 7B 77 76 
1ff14     72 71 74 78 
1ff18     7D 7F 80 7C | 	byte	$87, $87, $86, $86, $82, $7b, $77, $76, $72, $71, $74, $78, $7d, $7f, $80, $7c
1ff1c     75 72 77 7F 
1ff20     88 8E 8E 8D 
1ff24     87 84 80 7F 
1ff28     84 88 88 88 | 	byte	$75, $72, $77, $7f, $88, $8e, $8e, $8d, $87, $84, $80, $7f, $84, $88, $88, $88
1ff2c     88 87 87 84 
1ff30     81 7B 75 75 
1ff34     72 72 75 7B 
1ff38     7D 7F 81 7C | 	byte	$88, $87, $87, $84, $81, $7b, $75, $75, $72, $72, $75, $7b, $7d, $7f, $81, $7c
1ff3c     73 72 79 82 
1ff40     88 8F 90 8A 
1ff44     86 84 80 7F 
1ff48     85 8A 89 85 | 	byte	$73, $72, $79, $82, $88, $8f, $90, $8a, $86, $84, $80, $7f, $85, $8a, $89, $85
1ff4c     89 89 84 82 
1ff50     81 79 74 74 
1ff54     73 71 74 7D 
1ff58     7F 80 81 7C | 	byte	$89, $89, $84, $82, $81, $79, $74, $74, $73, $71, $74, $7d, $7f, $80, $81, $7c
1ff5c     72 71 7C 83 
1ff60     88 8F 8F 89 
1ff64     83 83 81 80 
1ff68     85 8B 89 87 | 	byte	$72, $71, $7c, $83, $88, $8f, $8f, $89, $83, $83, $81, $80, $85, $8b, $89, $87
1ff6c     86 8A 84 80 
1ff70     80 7A 72 72 
1ff74     75 73 74 7C 
1ff78     82 81 7E 7B | 	byte	$86, $8a, $84, $80, $80, $7a, $72, $72, $75, $73, $74, $7c, $82, $81, $7e, $7b
1ff7c     73 70 7C 86 
1ff80     8A 8B 8F 8A 
1ff84     82 80 83 81 
1ff88     84 8B 8C 86 | 	byte	$73, $70, $7c, $86, $8a, $8b, $8f, $8a, $82, $80, $83, $81, $84, $8b, $8c, $86
1ff8c     86 89 84 7F 
1ff90     7D 7A 72 71 
1ff94     74 74 75 7D 
1ff98     84 82 7D 78 | 	byte	$86, $89, $84, $7f, $7d, $7a, $72, $71, $74, $74, $75, $7d, $84, $82, $7d, $78
1ff9c     72 73 7B 87 
1ffa0     8C 8C 8C 89 
1ffa4     81 80 82 85 
1ffa8     85 8A 8C 87 | 	byte	$72, $73, $7b, $87, $8c, $8c, $8c, $89, $81, $80, $82, $85, $85, $8a, $8c, $87
1ffac     85 87 85 7E 
1ffb0     7B 77 73 70 
1ffb4     73 75 79 7E 
1ffb8     85 82 7C 76 | 	byte	$85, $87, $85, $7e, $7b, $77, $73, $70, $73, $75, $79, $7e, $85, $82, $7c, $76
1ffbc     72 75 7D 88 
1ffc0     8C 8C 8A 87 
1ffc4     81 81 82 84 
1ffc8     87 8B 8B 86 | 	byte	$72, $75, $7d, $88, $8c, $8c, $8a, $87, $81, $81, $82, $84, $87, $8b, $8b, $86
1ffcc     86 88 83 7D 
1ffd0     7A 76 72 70 
1ffd4     74 75 7B 81 
1ffd8     85 81 7C 75 | 	byte	$86, $88, $83, $7d, $7a, $76, $72, $70, $74, $75, $7b, $81, $85, $81, $7c, $75
1ffdc     72 75 7F 89 
1ffe0     8D 8B 89 85 
1ffe4     81 81 82 85 
1ffe8     89 8B 8A 86 | 	byte	$72, $75, $7f, $89, $8d, $8b, $89, $85, $81, $81, $82, $85, $89, $8b, $8a, $86
1ffec     86 87 81 7D 
1fff0     79 75 71 71 
1fff4     73 78 7C 83 
1fff8     85 83 79 73 | 	byte	$86, $87, $81, $7d, $79, $75, $71, $71, $73, $78, $7c, $83, $85, $83, $79, $73
1fffc     73 77 80 8B 
20000     8C 89 88 85 
20004     81 7E 85 88 
20008     88 8B 8A 86 | 	byte	$73, $77, $80, $8b, $8c, $89, $88, $85, $81, $7e, $85, $88, $88, $8b, $8a, $86
2000c     86 85 82 7A 
20010     76 76 70 71 
20014     75 7A 7E 82 
20018     86 83 76 72 | 	byte	$86, $85, $82, $7a, $76, $76, $70, $71, $75, $7a, $7e, $82, $86, $83, $76, $72
2001c     74 79 83 8B 
20020     8C 89 87 86 
20024     80 80 86 88 
20028     89 89 8A 87 | 	byte	$74, $79, $83, $8b, $8c, $89, $87, $86, $80, $80, $86, $88, $89, $89, $8a, $87
2002c     84 84 82 79 
20030     77 74 72 70 
20034     76 7B 80 82 
20038     87 7F 76 71 | 	byte	$84, $84, $82, $79, $77, $74, $72, $70, $76, $7b, $80, $82, $87, $7f, $76, $71
2003c     76 7B 84 8B 
20040     8B 88 85 84 
20044     81 81 86 89 
20048     89 8B 89 86 | 	byte	$76, $7b, $84, $8b, $8b, $88, $85, $84, $81, $81, $86, $89, $89, $8b, $89, $86
2004c     84 83 7F 79 
20050     75 73 71 73 
20054     76 7C 81 86 
20058     84 7D 75 72 | 	byte	$84, $83, $7f, $79, $75, $73, $71, $73, $76, $7c, $81, $86, $84, $7d, $75, $72
2005c     74 7D 86 8B 
20060     8A 88 86 83 
20064     82 83 87 88 
20068     8B 8A 87 84 | 	byte	$74, $7d, $86, $8b, $8a, $88, $86, $83, $82, $83, $87, $88, $8b, $8a, $87, $84
2006c     84 82 7E 78 
20070     75 73 71 74 
20074     78 7E 84 86 
20078     83 7C 73 72 | 	byte	$84, $82, $7e, $78, $75, $73, $71, $74, $78, $7e, $84, $86, $83, $7c, $73, $72
2007c     76 7E 88 8A 
20080     8A 87 85 83 
20084     82 84 87 89 
20088     8C 89 86 86 | 	byte	$76, $7e, $88, $8a, $8a, $87, $85, $83, $82, $84, $87, $89, $8c, $89, $86, $86
2008c     84 81 7B 78 
20090     76 72 71 74 
20094     7A 80 83 86 
20098     83 7A 72 71 | 	byte	$84, $81, $7b, $78, $76, $72, $71, $74, $7a, $80, $83, $86, $83, $7a, $72, $71
2009c     78 81 87 8A 
200a0     88 86 84 83 
200a4     82 85 88 8A 
200a8     8A 89 86 85 | 	byte	$78, $81, $87, $8a, $88, $86, $84, $83, $82, $85, $88, $8a, $8a, $89, $86, $85
200ac     83 80 7B 77 
200b0     74 71 71 76 
200b4     7D 80 84 87 
200b8     82 76 71 74 | 	byte	$83, $80, $7b, $77, $74, $71, $71, $76, $7d, $80, $84, $87, $82, $76, $71, $74
200bc     7B 81 89 89 
200c0     87 86 84 82 
200c4     82 87 89 89 
200c8     89 8A 86 84 | 	byte	$7b, $81, $89, $89, $87, $86, $84, $82, $82, $87, $89, $89, $89, $8a, $86, $84
200cc     82 7F 7B 76 
200d0     73 71 72 78 
200d4     7E 81 86 86 
200d8     80 74 72 75 | 	byte	$82, $7f, $7b, $76, $73, $71, $72, $78, $7e, $81, $86, $86, $80, $74, $72, $75
200dc     7B 81 88 8A 
200e0     88 84 83 83 
200e4     83 86 89 8A 
200e8     8A 88 86 83 | 	byte	$7b, $81, $88, $8a, $88, $84, $83, $83, $83, $86, $89, $8a, $8a, $88, $86, $83
200ec     81 80 7A 74 
200f0     72 73 73 78 
200f4     7F 85 86 85 
200f8     7C 74 71 78 | 	byte	$81, $80, $7a, $74, $72, $73, $73, $78, $7f, $85, $86, $85, $7c, $74, $71, $78
200fc     7C 83 88 8A 
20100     86 83 84 84 
20104     83 86 8A 8A 
20108     8A 86 86 82 | 	byte	$7c, $83, $88, $8a, $86, $83, $84, $84, $83, $86, $8a, $8a, $8a, $86, $86, $82
2010c     82 7E 79 73 
20110     72 72 74 79 
20114     81 86 85 83 
20118     7B 74 72 77 | 	byte	$82, $7e, $79, $73, $72, $72, $74, $79, $81, $86, $85, $83, $7b, $74, $72, $77
2011c     7E 86 87 8A 
20120     85 84 83 84 
20124     84 86 8A 8B 
20128     88 86 85 84 | 	byte	$7e, $86, $87, $8a, $85, $84, $83, $84, $84, $86, $8a, $8b, $88, $86, $85, $84
2012c     7F 7C 79 73 
20130     71 73 75 7A 
20134     81 87 86 7F 
20138     7A 74 73 78 | 	byte	$7f, $7c, $79, $73, $71, $73, $75, $7a, $81, $87, $86, $7f, $7a, $74, $73, $78
2013c     82 85 88 87 
20140     87 83 83 83 
20144     85 88 89 8A 
20148     88 85 85 83 | 	byte	$82, $85, $88, $87, $87, $83, $83, $83, $85, $88, $89, $8a, $88, $85, $85, $83
2014c     7E 7C 77 74 
20150     6F 72 78 7D 
20154     81 86 86 7F 
20158     77 74 75 7A | 	byte	$7e, $7c, $77, $74, $6f, $72, $78, $7d, $81, $86, $86, $7f, $77, $74, $75, $7a
2015c     81 86 87 86 
20160     87 83 82 83 
20164     87 87 88 8A 
20168     89 84 84 82 | 	byte	$81, $86, $87, $86, $87, $83, $82, $83, $87, $87, $88, $8a, $89, $84, $84, $82
2016c     7F 7A 78 73 
20170     70 72 7B 7F 
20174     81 87 86 7D 
20178     74 74 78 7B | 	byte	$7f, $7a, $78, $73, $70, $72, $7b, $7f, $81, $87, $86, $7d, $74, $74, $78, $7b
2017c     82 87 86 86 
20180     85 83 81 85 
20184     87 88 87 8B 
20188     89 84 82 82 | 	byte	$82, $87, $86, $86, $85, $83, $81, $85, $87, $88, $87, $8b, $89, $84, $82, $82
2018c     7F 79 75 73 
20190     71 73 7B 7F 
20194     84 86 85 7B 
20198     74 75 7A 7C | 	byte	$7f, $79, $75, $73, $71, $73, $7b, $7f, $84, $86, $85, $7b, $74, $75, $7a, $7c
2019c     81 88 88 85 
201a0     84 83 83 84 
201a4     87 88 88 8A 
201a8     88 84 81 83 | 	byte	$81, $88, $88, $85, $84, $83, $83, $84, $87, $88, $88, $8a, $88, $84, $81, $83
201ac     7F 78 74 73 
201b0     72 75 7B 82 
201b4     83 86 82 7A 
201b8     74 77 7B 7D | 	byte	$7f, $78, $74, $73, $72, $75, $7b, $82, $83, $86, $82, $7a, $74, $77, $7b, $7d
201bc     83 89 87 83 
201c0     84 83 82 83 
201c4     88 89 89 89 
201c8     88 83 82 82 | 	byte	$83, $89, $87, $83, $84, $83, $82, $83, $88, $89, $89, $89, $88, $83, $82, $82
201cc     7C 77 73 72 
201d0     72 76 7E 83 
201d4     84 86 81 7A 
201d8     74 77 7B 7F | 	byte	$7c, $77, $73, $72, $72, $76, $7e, $83, $84, $86, $81, $7a, $74, $77, $7b, $7f
201dc     83 87 85 85 
201e0     84 82 83 84 
201e4     89 89 88 8A 
201e8     88 82 81 81 | 	byte	$83, $87, $85, $85, $84, $82, $83, $84, $89, $89, $88, $8a, $88, $82, $81, $81
201ec     7D 75 72 73 
201f0     74 76 80 83 
201f4     84 84 81 79 
201f8     73 79 7F 7E | 	byte	$7d, $75, $72, $73, $74, $76, $80, $83, $84, $84, $81, $79, $73, $79, $7f, $7e
201fc     83 88 87 83 
20200     81 84 83 85 
20204     88 89 88 8A 
20208     88 83 81 81 | 	byte	$83, $88, $87, $83, $81, $84, $83, $85, $88, $89, $88, $8a, $88, $83, $81, $81
2020c     7C 73 70 74 
20210     75 77 80 85 
20214     86 83 7F 78 
20218     75 7B 7F 7E | 	byte	$7c, $73, $70, $74, $75, $77, $80, $85, $86, $83, $7f, $78, $75, $7b, $7f, $7e
2021c     83 88 86 81 
20220     82 85 84 84 
20224     89 8A 8A 89 
20228     86 83 80 7F | 	byte	$83, $88, $86, $81, $82, $85, $84, $84, $89, $8a, $8a, $89, $86, $83, $80, $7f
2022c     79 72 71 74 
20230     75 79 80 87 
20234     85 81 7D 78 
20238     77 7C 7D 80 | 	byte	$79, $72, $71, $74, $75, $79, $80, $87, $85, $81, $7d, $78, $77, $7c, $7d, $80
2023c     84 87 85 80 
20240     83 85 84 85 
20244     89 8B 8A 88 
20248     87 81 81 7D | 	byte	$84, $87, $85, $80, $83, $85, $84, $85, $89, $8b, $8a, $88, $87, $81, $81, $7d
2024c     78 71 72 74 
20250     76 7A 83 86 
20254     84 81 7D 79 
20258     78 7B 7F 81 | 	byte	$78, $71, $72, $74, $76, $7a, $83, $86, $84, $81, $7d, $79, $78, $7b, $7f, $81
2025c     83 87 83 81 
20260     82 84 84 86 
20264     8A 8B 88 88 
20268     86 82 7F 7B | 	byte	$83, $87, $83, $81, $82, $84, $84, $86, $8a, $8b, $88, $88, $86, $82, $7f, $7b
2026c     76 71 71 74 
20270     77 7C 84 86 
20274     83 80 7D 79 
20278     78 7C 80 81 | 	byte	$76, $71, $71, $74, $77, $7c, $84, $86, $83, $80, $7d, $79, $78, $7c, $80, $81
2027c     83 85 85 80 
20280     82 85 86 86 
20284     8A 8B 89 88 
20288     85 81 7C 7B | 	byte	$83, $85, $85, $80, $82, $85, $86, $86, $8a, $8b, $89, $88, $85, $81, $7c, $7b
2028c     75 71 70 76 
20290     79 7E 83 86 
20294     83 7F 7B 7A 
20298     79 7D 81 82 | 	byte	$75, $71, $70, $76, $79, $7e, $83, $86, $83, $7f, $7b, $7a, $79, $7d, $81, $82
2029c     83 85 84 80 
202a0     82 84 87 87 
202a4     8A 8B 8A 86 
202a8     84 81 7D 79 | 	byte	$83, $85, $84, $80, $82, $84, $87, $87, $8a, $8b, $8a, $86, $84, $81, $7d, $79
202ac     74 70 72 77 
202b0     7B 7F 84 87 
202b4     84 7E 7A 7B 
202b8     7B 7D 7F 82 | 	byte	$74, $70, $72, $77, $7b, $7f, $84, $87, $84, $7e, $7a, $7b, $7b, $7d, $7f, $82
202bc     84 84 82 81 
202c0     82 86 87 87 
202c4     8A 8C 89 86 
202c8     83 80 7C 77 | 	byte	$84, $84, $82, $81, $82, $86, $87, $87, $8a, $8c, $89, $86, $83, $80, $7c, $77
202cc     73 71 73 77 
202d0     7C 80 85 86 
202d4     84 7C 7B 7C 
202d8     7C 7D 80 82 | 	byte	$73, $71, $73, $77, $7c, $80, $85, $86, $84, $7c, $7b, $7c, $7c, $7d, $80, $82
202dc     84 83 82 81 
202e0     83 86 86 88 
202e4     8A 8C 88 85 
202e8     82 80 7A 76 | 	byte	$84, $83, $82, $81, $83, $86, $86, $88, $8a, $8c, $88, $85, $82, $80, $7a, $76
202ec     72 71 73 78 
202f0     7C 82 85 86 
202f4     81 7C 7C 7C 
202f8     7C 7D 80 83 | 	byte	$72, $71, $73, $78, $7c, $82, $85, $86, $81, $7c, $7c, $7c, $7c, $7d, $80, $83
202fc     83 83 82 81 
20300     83 86 88 88 
20304     8B 8B 89 84 
20308     82 7E 79 74 | 	byte	$83, $83, $82, $81, $83, $86, $88, $88, $8b, $8b, $89, $84, $82, $7e, $79, $74
2030c     72 72 74 79 
20310     7E 82 85 85 
20314     80 7C 7C 7C 
20318     7B 7E 81 83 | 	byte	$72, $72, $74, $79, $7e, $82, $85, $85, $80, $7c, $7c, $7c, $7b, $7e, $81, $83
2031c     83 83 81 82 
20320     84 87 87 89 
20324     8B 8B 87 83 
20328     81 7E 77 73 | 	byte	$83, $83, $81, $82, $84, $87, $87, $89, $8b, $8b, $87, $83, $81, $7e, $77, $73
2032c     72 72 75 7A 
20330     7F 83 86 84 
20334     80 7B 7C 7C 
20338     7D 7D 81 83 | 	byte	$72, $72, $75, $7a, $7f, $83, $86, $84, $80, $7b, $7c, $7c, $7d, $7d, $81, $83
2033c     83 82 81 82 
20340     84 87 87 8A 
20344     8B 8A 87 83 
20348     7F 7D 77 72 | 	byte	$83, $82, $81, $82, $84, $87, $87, $8a, $8b, $8a, $87, $83, $7f, $7d, $77, $72
2034c     72 73 77 7A 
20350     80 86 84 83 
20354     80 7C 7C 7C 
20358     7D 7D 81 83 | 	byte	$72, $73, $77, $7a, $80, $86, $84, $83, $80, $7c, $7c, $7c, $7d, $7d, $81, $83
2035c     83 81 82 83 
20360     85 86 8A 89 
20364     8A 8A 86 81 
20368     7F 7B 75 73 | 	byte	$83, $81, $82, $83, $85, $86, $8a, $89, $8a, $8a, $86, $81, $7f, $7b, $75, $73
2036c     72 74 76 7C 
20370     81 85 85 83 
20374     7E 7C 7C 7D 
20378     7C 7F 83 84 | 	byte	$72, $74, $76, $7c, $81, $85, $85, $83, $7e, $7c, $7c, $7d, $7c, $7f, $83, $84
2037c     81 82 82 83 
20380     85 87 89 8A 
20384     8B 8A 85 81 
20388     7F 79 75 72 | 	byte	$81, $82, $82, $83, $85, $87, $89, $8a, $8b, $8a, $85, $81, $7f, $79, $75, $72
2038c     74 74 78 7E 
20390     82 85 85 82 
20394     7E 7B 7D 7E 
20398     7C 7F 83 82 | 	byte	$74, $74, $78, $7e, $82, $85, $85, $82, $7e, $7b, $7d, $7e, $7c, $7f, $83, $82
2039c     81 82 82 83 
203a0     84 8A 89 8A 
203a4     8B 8A 84 7F 
203a8     7E 79 73 73 | 	byte	$81, $82, $82, $83, $84, $8a, $89, $8a, $8b, $8a, $84, $7f, $7e, $79, $73, $73
203ac     74 75 78 7F 
203b0     84 84 84 82 
203b4     7E 7B 7E 7E 
203b8     7D 7F 83 82 | 	byte	$74, $75, $78, $7f, $84, $84, $84, $82, $7e, $7b, $7e, $7e, $7d, $7f, $83, $82
203bc     82 80 82 83 
203c0     86 89 8A 8A 
203c4     8A 89 83 7E 
203c8     7C 79 72 72 | 	byte	$82, $80, $82, $83, $86, $89, $8a, $8a, $8a, $89, $83, $7e, $7c, $79, $72, $72
203cc     74 76 79 7F 
203d0     84 84 83 82 
203d4     7D 7C 7D 7F 
203d8     7C 7F 83 83 | 	byte	$74, $76, $79, $7f, $84, $84, $83, $82, $7d, $7c, $7d, $7f, $7c, $7f, $83, $83
203dc     81 80 83 84 
203e0     85 89 8A 8A 
203e4     8A 88 81 7E 
203e8     7C 78 72 72 | 	byte	$81, $80, $83, $84, $85, $89, $8a, $8a, $8a, $88, $81, $7e, $7c, $78, $72, $72
203ec     76 77 7B 80 
203f0     84 84 84 81 
203f4     7D 7B 7E 7E 
203f8     7B 81 84 82 | 	byte	$76, $77, $7b, $80, $84, $84, $84, $81, $7d, $7b, $7e, $7e, $7b, $81, $84, $82
203fc     7F 82 84 84 
20400     86 8A 8A 8A 
20404     89 87 80 7C 
20408     7C 76 72 73 | 	byte	$7f, $82, $84, $84, $86, $8a, $8a, $8a, $89, $87, $80, $7c, $7c, $76, $72, $73
2040c     77 77 7A 81 
20410     87 83 82 81 
20414     7E 7C 7E 7E 
20418     7D 80 84 82 | 	byte	$77, $77, $7a, $81, $87, $83, $82, $81, $7e, $7c, $7e, $7e, $7d, $80, $84, $82
2041c     7E 82 84 84 
20420     85 8B 8C 89 
20424     88 88 7F 7B 
20428     7A 76 71 73 | 	byte	$7e, $82, $84, $84, $85, $8b, $8c, $89, $88, $88, $7f, $7b, $7a, $76, $71, $73
2042c     78 78 7A 83 
20430     87 83 81 82 
20434     7E 7B 7E 7F 
20438     7F 81 84 82 | 	byte	$78, $78, $7a, $83, $87, $83, $81, $82, $7e, $7b, $7e, $7f, $7f, $81, $84, $82
2043c     7F 81 85 85 
20440     86 8B 8D 88 
20444     87 86 80 7B 
20448     78 76 73 73 | 	byte	$7f, $81, $85, $85, $86, $8b, $8d, $88, $87, $86, $80, $7b, $78, $76, $73, $73
2044c     76 7B 7C 82 
20450     86 83 80 80 
20454     7E 7D 7C 7F 
20458     80 81 82 82 | 	byte	$76, $7b, $7c, $82, $86, $83, $80, $80, $7e, $7d, $7c, $7f, $80, $81, $82, $82
2045c     7F 81 84 87 
20460     88 8A 8D 88 
20464     86 84 7F 7A 
20468     77 75 73 73 | 	byte	$7f, $81, $84, $87, $88, $8a, $8d, $88, $86, $84, $7f, $7a, $77, $75, $73, $73
2046c     78 7B 7D 84 
20470     86 83 80 80 
20474     7E 7D 7D 80 
20478     7F 81 83 81 | 	byte	$78, $7b, $7d, $84, $86, $83, $80, $80, $7e, $7d, $7d, $80, $7f, $81, $83, $81
2047c     7F 82 84 87 
20480     88 8B 8C 88 
20484     87 83 7F 7A 
20488     76 74 74 75 | 	byte	$7f, $82, $84, $87, $88, $8b, $8c, $88, $87, $83, $7f, $7a, $76, $74, $74, $75
2048c     78 7B 80 84 
20490     84 83 81 7F 
20494     7D 7E 7E 7F 
20498     81 81 82 7F | 	byte	$78, $7b, $80, $84, $84, $83, $81, $7f, $7d, $7e, $7e, $7f, $81, $81, $82, $7f
2049c     80 83 83 87 
204a0     8A 8B 8A 88 
204a4     85 82 7C 79 
204a8     75 74 74 75 | 	byte	$80, $83, $83, $87, $8a, $8b, $8a, $88, $85, $82, $7c, $79, $75, $74, $74, $75
204ac     77 7C 82 85 
204b0     83 82 81 7E 
204b4     7D 7D 7E 7F 
204b8     81 81 81 7E | 	byte	$77, $7c, $82, $85, $83, $82, $81, $7e, $7d, $7d, $7e, $7f, $81, $81, $81, $7e
204bc     81 82 85 87 
204c0     8B 8B 89 87 
204c4     86 81 7B 78 
204c8     76 74 74 76 | 	byte	$81, $82, $85, $87, $8b, $8b, $89, $87, $86, $81, $7b, $78, $76, $74, $74, $76
204cc     79 7D 82 84 
204d0     83 82 80 7E 
204d4     7C 7E 7F 80 
204d8     80 81 81 7F | 	byte	$79, $7d, $82, $84, $83, $82, $80, $7e, $7c, $7e, $7f, $80, $80, $81, $81, $7f
204dc     7F 83 86 88 
204e0     8B 8B 89 85 
204e4     85 80 79 77 
204e8     76 73 73 76 | 	byte	$7f, $83, $86, $88, $8b, $8b, $89, $85, $85, $80, $79, $77, $76, $73, $73, $76
204ec     7B 7E 82 84 
204f0     84 81 7F 7E 
204f4     7D 7E 7F 81 
204f8     80 81 80 7F | 	byte	$7b, $7e, $82, $84, $84, $81, $7f, $7e, $7d, $7e, $7f, $81, $80, $81, $80, $7f
204fc     80 84 86 89 
20500     8B 8B 87 86 
20504     84 7F 7A 77 
20508     76 73 75 77 | 	byte	$80, $84, $86, $89, $8b, $8b, $87, $86, $84, $7f, $7a, $77, $76, $73, $75, $77
2050c     7B 7E 83 85 
20510     83 80 7F 7E 
20514     7D 7D 80 81 
20518     81 80 80 7F | 	byte	$7b, $7e, $83, $85, $83, $80, $7f, $7e, $7d, $7d, $80, $81, $81, $80, $80, $7f
2051c     80 85 88 89 
20520     8B 8B 88 85 
20524     82 7E 7A 76 
20528     75 74 75 78 | 	byte	$80, $85, $88, $89, $8b, $8b, $88, $85, $82, $7e, $7a, $76, $75, $74, $75, $78
2052c     7C 80 82 85 | 	byte	$7c, $80, $82, $85
20530                 | 	alignl
20530                 | _hng030rm_spin2_dat_
20530     00 00 00 00 
20534     00 00 00 00 
20538     00 00 00 00 
2053c     00 00 00 00 
20540     00 00 00    | vga_font       file "vgafont.def"
20543     7E 81 A5 81 
20547     81 BD 99 81 
2054b     81 7E 00 00 
2054f     00 00 00 00 | 	byte	$7e, $81, $a5, $81, $81, $bd, $99, $81, $81, $7e, $00, $00, $00, $00, $00, $00
20553     7E FF DB FF 
20557     FF C3 E7 FF 
2055b     FF 7E 00 00 
2055f     00 00 00 00 | 	byte	$7e, $ff, $db, $ff, $ff, $c3, $e7, $ff, $ff, $7e, $00, $00, $00, $00, $00, $00
20563     00 36 7F 7F 
20567     7F 7F 3E 1C 
2056b     08 00 00 00 
2056f     00 00 00 00 | 	byte	$00, $36, $7f, $7f, $7f, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00
20573     00 08 1C 3E 
20577     7F 3E 1C 08 
2057b     00 00 00 00 
2057f     00 00 00 00 | 	byte	$00, $08, $1c, $3e, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00
20583     18 3C 3C E7 
20587     E7 E7 18 18 
2058b     3C 00 00 00 
2058f     00 00 00 00 | 	byte	$18, $3c, $3c, $e7, $e7, $e7, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
20593     18 3C 7E FF 
20597     FF 7E 18 18 
2059b     3C 00 00 00 
2059f     00 00 00 00 | 	byte	$18, $3c, $7e, $ff, $ff, $7e, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
205a3     00 00 00 18 
205a7     3C 3C 18 00 
205ab     00 00 00 00 
205af     00 FF FF FF | 	byte	$00, $00, $00, $18, $3c, $3c, $18, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
205b3     FF FF FF E7 
205b7     C3 C3 E7 FF 
205bb     FF FF FF FF 
205bf     FF 00 00 00 | 	byte	$ff, $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
205c3     00 00 3C 66 
205c7     42 42 66 3C 
205cb     00 00 00 00 
205cf     00 FF FF FF | 	byte	$00, $00, $3c, $66, $42, $42, $66, $3c, $00, $00, $00, $00, $00, $ff, $ff, $ff
205d3     FF FF C3 99 
205d7     BD BD 99 C3 
205db     FF FF FF FF 
205df     FF 00 00 00 | 	byte	$ff, $ff, $c3, $99, $bd, $bd, $99, $c3, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
205e3     78 70 58 4C 
205e7     1E 33 33 33 
205eb     33 1E 00 00 
205ef     00 00 00 00 | 	byte	$78, $70, $58, $4c, $1e, $33, $33, $33, $33, $1e, $00, $00, $00, $00, $00, $00
205f3     3C 66 66 66 
205f7     66 3C 18 7E 
205fb     18 18 00 00 
205ff     00 00 00 00 | 	byte	$3c, $66, $66, $66, $66, $3c, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00
20603     FC CC FC 0C 
20607     0C 0C 0C 0E 
2060b     0F 07 00 00 
2060f     00 00 00 00 | 	byte	$fc, $cc, $fc, $0c, $0c, $0c, $0c, $0e, $0f, $07, $00, $00, $00, $00, $00, $00
20613     FE C6 FE C6 
20617     C6 C6 C6 E6 
2061b     E7 67 03 00 
2061f     00 00 00 00 | 	byte	$fe, $c6, $fe, $c6, $c6, $c6, $c6, $e6, $e7, $67, $03, $00, $00, $00, $00, $00
20623     18 18 DB 3C 
20627     E7 3C DB 18 
2062b     18 00 00 00 
2062f     00 00 00 01 | 	byte	$18, $18, $db, $3c, $e7, $3c, $db, $18, $18, $00, $00, $00, $00, $00, $00, $01
20633     03 07 0F 1F 
20637     7F 1F 0F 07 
2063b     03 01 00 00 
2063f     00 00 00 40 | 	byte	$03, $07, $0f, $1f, $7f, $1f, $0f, $07, $03, $01, $00, $00, $00, $00, $00, $40
20643     60 70 78 7C 
20647     7F 7C 78 70 
2064b     60 40 00 00 
2064f     00 00 00 00 | 	byte	$60, $70, $78, $7c, $7f, $7c, $78, $70, $60, $40, $00, $00, $00, $00, $00, $00
20653     18 3C 7E 18 
20657     18 18 7E 3C 
2065b     18 00 00 00 
2065f     00 00 00 00 | 	byte	$18, $3c, $7e, $18, $18, $18, $7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00
20663     66 66 66 66 
20667     66 66 66    | 	byte	$66[7]
2066a     00 66 66 00 
2066e     00 00 00 00 
20672     00 FE DB DB 
20676     DB DE D8 D8 | 	byte	$00, $66, $66, $00, $00, $00, $00, $00, $00, $fe, $db, $db, $db, $de, $d8, $d8
2067a     D8 D8 D8 00 
2067e     00 00 00 3E 
20682     63 06 1C 36 
20686     63 63 36 1C | 	byte	$d8, $d8, $d8, $00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c
2068a     30 63 3E 00 
2068e     00 00 00 00 
20692     00 00 00 00 
20696     00 00 00 7F | 	byte	$30, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2069a     7F 7F 7F 00 
2069e     00 00 00 00 
206a2     00 18 3C 7E 
206a6     18 18 18 7E | 	byte	$7f, $7f, $7f, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $7e
206aa     3C 18 7E 00 
206ae     00 00 00 00 
206b2     00 18 3C 7E 
206b6     18 18 18 18 | 	byte	$3c, $18, $7e, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $18
206ba     18 18 18 00 
206be     00 00 00 00 
206c2     00 18 18 18 
206c6     18 18 18 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
206ca     7E 3C 18 00 
206ce     00 00 00 00 
206d2     00 00 00 18 
206d6     30 7F 30 18 | 	byte	$7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $18, $30, $7f, $30, $18
206da     00 00 00 00 
206de     00 00 00 00 
206e2     00 00 00    | 	byte	$00[11]
206e5     0C 06 7F 06 
206e9     0C 00 00 00 
206ed     00 00 00 00 
206f1     00 00 00 00 | 	byte	$0c, $06, $7f, $06, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
206f5     00 03 03 03 
206f9     7F 00 00 00 
206fd     00 00 00 00 
20701     00 00 00 00 | 	byte	$00, $03, $03, $03, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20705     14 36 7F 36 
20709     14 00 00 00 
2070d     00 00 00 00 
20711     00 00 00 08 | 	byte	$14, $36, $7f, $36, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08
20715     1C 1C 3E 3E 
20719     7F 7F 00 00 
2071d     00 00 00 00 
20721     00 00 00 7F | 	byte	$1c, $1c, $3e, $3e, $7f, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
20725     7F 3E 3E 1C 
20729     1C 08 00 00 
2072d     00 00 00 00 
20731     00 00 00 00 | 	byte	$7f, $3e, $3e, $1c, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20735     00 00 00 00 
20739     00 00 00 00 
2073d     00 00 00 00 
20741     00 00       | 	byte	$00[14]
20743     18 3C 3C 3C 
20747     18 18 18 00 
2074b     18 18 00 00 
2074f     00 00 66 66 | 	byte	$18, $3c, $3c, $3c, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $66, $66
20753     66 24 00 00 
20757     00 00 00 00 
2075b     00 00 00 00 
2075f     00 00 00 00 | 	byte	$66, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20763     00 36 36 7F 
20767     36 36 36 7F 
2076b     36 36 00 00 
2076f     00 00 18 18 | 	byte	$00, $36, $36, $7f, $36, $36, $36, $7f, $36, $36, $00, $00, $00, $00, $18, $18
20773     3E 63 43 03 
20777     3E 60 60 61 
2077b     63 3E 18 18 
2077f     00 00 00 00 | 	byte	$3e, $63, $43, $03, $3e, $60, $60, $61, $63, $3e, $18, $18, $00, $00, $00, $00
20783     00 00 43 63 
20787     30 18 0C 06 
2078b     63 61 00 00 
2078f     00 00 00 00 | 	byte	$00, $00, $43, $63, $30, $18, $0c, $06, $63, $61, $00, $00, $00, $00, $00, $00
20793     1C 36 36 1C 
20797     6E 3B 33 33 
2079b     33 6E 00 00 
2079f     00 00 00 00 | 	byte	$1c, $36, $36, $1c, $6e, $3b, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00
207a3     0C 0C 0C 06 
207a7     00 00 00 00 
207ab     00 00 00 00 
207af     00 00 00 00 | 	byte	$0c, $0c, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
207b3     30 18 0C 0C 
207b7     0C 0C 0C 0C 
207bb     18 30 00 00 
207bf     00 00 00 00 | 	byte	$30, $18, $0c, $0c, $0c, $0c, $0c, $0c, $18, $30, $00, $00, $00, $00, $00, $00
207c3     0C 18 30 30 
207c7     30 30 30 30 
207cb     18 0C 00 00 
207cf     00 00 00 00 | 	byte	$0c, $18, $30, $30, $30, $30, $30, $30, $18, $0c, $00, $00, $00, $00, $00, $00
207d3     00 00 00 66 
207d7     3C FF 3C 66 
207db     00 00 00 00 
207df     00 00 00 00 | 	byte	$00, $00, $00, $66, $3c, $ff, $3c, $66, $00, $00, $00, $00, $00, $00, $00, $00
207e3     00 00 00 18 
207e7     18 7E 18 18 
207eb     00 00 00 00 
207ef     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00
207f3     00 00 00 00 
207f7     00 00 00 00 | 	byte	$00[8]
207fb     18 18 18 0C 
207ff     00 00 00 00 
20803     00 00 00 00 
20807     00 7F 00 00 | 	byte	$18, $18, $18, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $00, $00
2080b     00 00 00 00 
2080f     00 00 00 00 
20813     00 00 00 00 
20817     00 00 00 00 | 	byte	$00[16]
2081b     18 18 00 00 
2081f     00 00 00 00 
20823     00 00 40 60 
20827     30 18 0C 06 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $40, $60, $30, $18, $0c, $06
2082b     03 01 00 00 
2082f     00 00 00 00 
20833     1C 36 63 63 
20837     6B 6B 63 63 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $1c, $36, $63, $63, $6b, $6b, $63, $63
2083b     36 1C 00 00 
2083f     00 00 00 00 
20843     18 1C 1E 18 
20847     18 18 18 18 | 	byte	$36, $1c, $00, $00, $00, $00, $00, $00, $18, $1c, $1e, $18, $18, $18, $18, $18
2084b     18 7E 00 00 
2084f     00 00 00 00 
20853     3E 63 60 30 
20857     18 0C 06 03 | 	byte	$18, $7e, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $30, $18, $0c, $06, $03
2085b     63 7F 00 00 
2085f     00 00 00 00 
20863     3E 63 60 60 
20867     3C 60 60 60 | 	byte	$63, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $60, $3c, $60, $60, $60
2086b     63 3E 00 00 
2086f     00 00 00 00 
20873     30 38 3C 36 
20877     33 7F 30 30 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $30, $38, $3c, $36, $33, $7f, $30, $30
2087b     30 78 00 00 
2087f     00 00 00 00 
20883     7F 03 03 03 
20887     3F 60 60 60 | 	byte	$30, $78, $00, $00, $00, $00, $00, $00, $7f, $03, $03, $03, $3f, $60, $60, $60
2088b     63 3E 00 00 
2088f     00 00 00 00 
20893     1C 06 03 03 
20897     3F 63 63 63 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $1c, $06, $03, $03, $3f, $63, $63, $63
2089b     63 3E 00 00 
2089f     00 00 00 00 
208a3     7F 63 60 60 
208a7     30 18 0C 0C | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $7f, $63, $60, $60, $30, $18, $0c, $0c
208ab     0C 0C 00 00 
208af     00 00 00 00 
208b3     3E 63 63 63 
208b7     3E 63 63 63 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $3e, $63, $63, $63
208bb     63 3E 00 00 
208bf     00 00 00 00 
208c3     3E 63 63 63 
208c7     7E 60 60 60 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $7e, $60, $60, $60
208cb     30 1E 00 00 
208cf     00 00 00 00 
208d3     00 00 00 18 
208d7     18 00 00 00 | 	byte	$30, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
208db     18 18 00 00 
208df     00 00 00 00 
208e3     00 00 00 18 
208e7     18 00 00 00 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
208eb     18 18 0C 00 
208ef     00 00 00 00 
208f3     00 60 30 18 
208f7     0C 06 0C 18 | 	byte	$18, $18, $0c, $00, $00, $00, $00, $00, $00, $60, $30, $18, $0c, $06, $0c, $18
208fb     30 60 00 00 
208ff     00 00 00 00 
20903     00 00 00 7E 
20907     00 00 7E 00 | 	byte	$30, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $00, $00, $7e, $00
2090b     00 00 00 00 
2090f     00 00 00 00 
20913     00          | 	byte	$00[9]
20914     06 0C 18 30 
20918     60 30 18 0C 
2091c     06 00 00 00 
20920     00 00 00 3E | 	byte	$06, $0c, $18, $30, $60, $30, $18, $0c, $06, $00, $00, $00, $00, $00, $00, $3e
20924     63 63 30 18 
20928     18 18 00 18 
2092c     18 00 00 00 
20930     00 00 00 00 | 	byte	$63, $63, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00
20934     3E 63 63 7B 
20938     7B 7B 3B 03 
2093c     3E 00 00 00 
20940     00 00 00 08 | 	byte	$3e, $63, $63, $7b, $7b, $7b, $3b, $03, $3e, $00, $00, $00, $00, $00, $00, $08
20944     1C 36 63 63 
20948     7F 63 63 63 
2094c     63 00 00 00 
20950     00 00 00 3F | 	byte	$1c, $36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3f
20954     66 66 66 3E 
20958     66 66 66 66 
2095c     3F 00 00 00 
20960     00 00 00 3C | 	byte	$66, $66, $66, $3e, $66, $66, $66, $66, $3f, $00, $00, $00, $00, $00, $00, $3c
20964     66 43 03 03 
20968     03 03 43 66 
2096c     3C 00 00 00 
20970     00 00 00 1F | 	byte	$66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00, $00, $1f
20974     36 66 66 66 
20978     66 66 66 36 
2097c     1F 00 00 00 
20980     00 00 00 7F | 	byte	$36, $66, $66, $66, $66, $66, $66, $36, $1f, $00, $00, $00, $00, $00, $00, $7f
20984     66 46 16 1E 
20988     16 06 46 66 
2098c     7F 00 00 00 
20990     00 00 00 7F | 	byte	$66, $46, $16, $1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $7f
20994     66 46 16 1E 
20998     16 06 06 06 
2099c     0F 00 00 00 
209a0     00 00 00 3C | 	byte	$66, $46, $16, $1e, $16, $06, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $3c
209a4     66 43 03 03 
209a8     7B 63 63 66 
209ac     5C 00 00 00 
209b0     00 00 00 63 | 	byte	$66, $43, $03, $03, $7b, $63, $63, $66, $5c, $00, $00, $00, $00, $00, $00, $63
209b4     63 63 63 7F 
209b8     63 63 63 63 
209bc     63 00 00 00 
209c0     00 00 00 3C | 	byte	$63, $63, $63, $7f, $63, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3c
209c4     18 18 18 18 
209c8     18 18 18 18 | 	byte	$18[8]
209cc     3C 00 00 00 
209d0     00 00 00 78 
209d4     30 30 30 30 
209d8     30 33 33 33 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $78, $30, $30, $30, $30, $30, $33, $33, $33
209dc     1E 00 00 00 
209e0     00 00 00 67 
209e4     66 66 36 1E 
209e8     1E 36 66 66 | 	byte	$1e, $00, $00, $00, $00, $00, $00, $67, $66, $66, $36, $1e, $1e, $36, $66, $66
209ec     67 00 00 00 
209f0     00 00 00 0F 
209f4     06 06 06 06 
209f8     06 06 46 66 | 	byte	$67, $00, $00, $00, $00, $00, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
209fc     7F 00 00 00 
20a00     00 00 00 63 
20a04     77 7F 7F 6B 
20a08     63 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $63, $77, $7f, $7f, $6b, $63, $63, $63, $63
20a0c     63 00 00 00 
20a10     00 00 00 63 
20a14     67 6F 7F 7B 
20a18     73 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63
20a1c     63 00 00 00 
20a20     00 00 00 3E 
20a24     63 63 63 63 
20a28     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
20a2c     3E 00 00 00 
20a30     00 00 00 3F 
20a34     66 66 66 3E 
20a38     06 06 06 06 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $06, $06, $06, $06
20a3c     0F 00 00 00 
20a40     00 00 00 3E 
20a44     63 63 63 63 
20a48     63 63 6B 7B | 	byte	$0f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $6b, $7b
20a4c     3E 30 70 00 
20a50     00 00 00 3F 
20a54     66 66 66 3E 
20a58     36 66 66 66 | 	byte	$3e, $30, $70, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66
20a5c     67 00 00 00 
20a60     00 00 00 3E 
20a64     63 63 06 1C 
20a68     30 60 63 63 | 	byte	$67, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
20a6c     3E 00 00 00 
20a70     00 00 00 7E 
20a74     7E 5A 18 18 
20a78     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
20a7c     3C 00 00 00 
20a80     00 00 00 63 
20a84     63 63 63 63 
20a88     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
20a8c     3E 00 00 00 
20a90     00 00 00 63 
20a94     63 63 63 63 
20a98     63 63 36 1C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $36, $1c
20a9c     08 00 00 00 
20aa0     00 00 00 63 
20aa4     63 63 63 6B 
20aa8     6B 6B 7F 77 | 	byte	$08, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $6b, $6b, $6b, $7f, $77
20aac     36 00 00 00 
20ab0     00 00 00 63 
20ab4     63 36 3E 1C 
20ab8     1C 3E 36 63 | 	byte	$36, $00, $00, $00, $00, $00, $00, $63, $63, $36, $3e, $1c, $1c, $3e, $36, $63
20abc     63 00 00 00 
20ac0     00 00 00 66 
20ac4     66 66 66 3C 
20ac8     18 18 18 18 | 	byte	$63, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18
20acc     3C 00 00 00 
20ad0     00 00 00 7F 
20ad4     63 61 30 18 
20ad8     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
20adc     7F 00 00 00 
20ae0     00 00 00 3C 
20ae4     0C 0C 0C 0C 
20ae8     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $3c, $0c, $0c, $0c, $0c, $0c, $0c, $0c, $0c
20aec     3C 00 00 00 
20af0     00 00 00 00 
20af4     01 03 07 0E 
20af8     1C 38 70 60 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $01, $03, $07, $0e, $1c, $38, $70, $60
20afc     40 00 00 00 
20b00     00 00 00 3C 
20b04     30 30 30 30 
20b08     30 30 30 30 | 	byte	$40, $00, $00, $00, $00, $00, $00, $3c, $30, $30, $30, $30, $30, $30, $30, $30
20b0c     3C 00 00 00 
20b10     1C 36 00 00 
20b14     00 00 00 00 
20b18     00 00 00 00 | 	byte	$3c, $00, $00, $00, $1c, $36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20b1c     00 00 00 00 
20b20     00 00 00 00 
20b24     00 00 00 00 
20b28     00 00 00 00 
20b2c     00          | 	byte	$00[17]
20b2d     FF 00 00 0C 
20b31     18 00 00 00 
20b35     00 00 00 00 
20b39     00 00 00 00 | 	byte	$ff, $00, $00, $0c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20b3d     00 00 00 00 
20b41     00 00 00 00 
20b45     00          | 	byte	$00[9]
20b46     1E 30 3E 33 
20b4a     33 33 6E 00 
20b4e     00 00 00 00 
20b52     00 07 06 06 | 	byte	$1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $07, $06, $06
20b56     1E 36 66 66 
20b5a     66 66 3E 00 
20b5e     00 00 00 00 
20b62     00 00 00 00 | 	byte	$1e, $36, $66, $66, $66, $66, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00
20b66     3E 63 03 03 
20b6a     03 63 3E 00 
20b6e     00 00 00 00 
20b72     00 38 30 30 | 	byte	$3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $30, $30
20b76     3C 36 33 33 
20b7a     33 33 6E 00 
20b7e     00 00 00 00 
20b82     00 00 00 00 | 	byte	$3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $00, $00, $00
20b86     3E 63 7F 03 
20b8a     03 63 3E 00 
20b8e     00 00 00 00 
20b92     00 38 6C 4C | 	byte	$3e, $63, $7f, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $6c, $4c
20b96     0C 1E 0C 0C 
20b9a     0C 0C 1E 00 
20b9e     00 00 00 00 
20ba2     00 00 00 00 | 	byte	$0c, $1e, $0c, $0c, $0c, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00
20ba6     6E 33 33 33 
20baa     33 33 3E 30 
20bae     33 1E 00 00 
20bb2     00 07 06 06 | 	byte	$6e, $33, $33, $33, $33, $33, $3e, $30, $33, $1e, $00, $00, $00, $07, $06, $06
20bb6     36 6E 66 66 
20bba     66 66 67 00 
20bbe     00 00 00 00 
20bc2     00 18 18 00 | 	byte	$36, $6e, $66, $66, $66, $66, $67, $00, $00, $00, $00, $00, $00, $18, $18, $00
20bc6     1C 18 18 18 
20bca     18 18 3C 00 
20bce     00 00 00 00 
20bd2     00 60 60 00 | 	byte	$1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $60, $60, $00
20bd6     70 60 60 60 
20bda     60 60 60 66 
20bde     66 3C 00 00 
20be2     00 07 06 06 | 	byte	$70, $60, $60, $60, $60, $60, $60, $66, $66, $3c, $00, $00, $00, $07, $06, $06
20be6     66 36 1E 1E 
20bea     36 66 67 00 
20bee     00 00 00 00 
20bf2     00 1C 18 18 | 	byte	$66, $36, $1e, $1e, $36, $66, $67, $00, $00, $00, $00, $00, $00, $1c, $18, $18
20bf6     18 18 18 18 
20bfa     18 18       | 	byte	$18[6]
20bfc     3C 00 00 00 
20c00     00 00 00 00 
20c04     00 00 37 7F 
20c08     6B 6B 6B 6B | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $37, $7f, $6b, $6b, $6b, $6b
20c0c     63 00 00 00 
20c10     00 00 00 00 
20c14     00 00 3B 66 
20c18     66 66 66 66 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
20c1c     66 00 00 00 
20c20     00 00 00 00 
20c24     00 00 3E 63 
20c28     63 63 63 63 | 	byte	$66, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63
20c2c     3E 00 00 00 
20c30     00 00 00 00 
20c34     00 00 3B 66 
20c38     66 66 66 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
20c3c     3E 06 06 0F 
20c40     00 00 00 00 
20c44     00 00 6E 33 
20c48     33 33 33 33 | 	byte	$3e, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $6e, $33, $33, $33, $33, $33
20c4c     3E 30 30 78 
20c50     00 00 00 00 
20c54     00 00 3B 6E 
20c58     66 06 06 06 | 	byte	$3e, $30, $30, $78, $00, $00, $00, $00, $00, $00, $3b, $6e, $66, $06, $06, $06
20c5c     0F 00 00 00 
20c60     00 00 00 00 
20c64     00 00 3E 63 
20c68     06 1C 30 63 | 	byte	$0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63
20c6c     3E 00 00 00 
20c70     00 00 00 08 
20c74     0C 0C 3F 0C 
20c78     0C 0C 0C 6C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
20c7c     38 00 00 00 
20c80     00 00 00 00 
20c84     00 00 33 33 
20c88     33 33 33 33 | 	byte	$38, $00, $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33
20c8c     6E 00 00 00 
20c90     00 00 00 00 
20c94     00 00 63 63 
20c98     63 63 63 36 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $36
20c9c     1C 00 00 00 
20ca0     00 00 00 00 
20ca4     00 00 63 63 
20ca8     6B 6B 6B 7F | 	byte	$1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $6b, $6b, $6b, $7f
20cac     36 00 00 00 
20cb0     00 00 00 00 
20cb4     00 00 63 36 
20cb8     1C 1C 1C 36 | 	byte	$36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $1c, $36
20cbc     63 00 00 00 
20cc0     00 00 00 00 
20cc4     00 00 63 63 
20cc8     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63
20ccc     7E 60 30 1F 
20cd0     00 00 00 00 
20cd4     00 00 7F 33 
20cd8     18 0C 06 63 | 	byte	$7e, $60, $30, $1f, $00, $00, $00, $00, $00, $00, $7f, $33, $18, $0c, $06, $63
20cdc     7F 00 00 00 
20ce0     00 00 00 70 
20ce4     18 18 18 0E 
20ce8     18 18 18 18 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $70, $18, $18, $18, $0e, $18, $18, $18, $18
20cec     70 00 00 00 
20cf0     00 00 00 18 
20cf4     18 18 18 18 
20cf8     18 18 18 18 | 	byte	$70, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18
20cfc     18 00 00 00 
20d00     00 00 00 0E 
20d04     18 18 18 70 
20d08     18 18 18 18 | 	byte	$18, $00, $00, $00, $00, $00, $00, $0e, $18, $18, $18, $70, $18, $18, $18, $18
20d0c     0E 00 00 00 
20d10     6E 3B 00 00 
20d14     00 00 00 00 
20d18     00 00 00 00 | 	byte	$0e, $00, $00, $00, $6e, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
20d1c     00 00 00 00 
20d20     00 00 00 00 
20d24     00 00       | 	byte	$00[10]
20d26     08 1C 36 63 
20d2a     63 63 7F 00 
20d2e     00 00 00 00 
20d32     00 3C 66 43 | 	byte	$08, $1c, $36, $63, $63, $63, $7f, $00, $00, $00, $00, $00, $00, $3c, $66, $43
20d36     03 03 03 03 
20d3a     43 66 3C 18 
20d3e     30 1E 00 00 
20d42     00 00 33 00 | 	byte	$03, $03, $03, $03, $43, $66, $3c, $18, $30, $1e, $00, $00, $00, $00, $33, $00
20d46     33 33 33 33 
20d4a     33 33       | 	byte	$33[6]
20d4c     6E 00 00 00 
20d50     00 00 60 30 
20d54     18 00 3E 63 
20d58     7F 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $7f, $03, $03, $63
20d5c     3E 00 00 00 
20d60     00 00 08 1C 
20d64     36 00 1E 30 
20d68     3E 33 33 33 | 	byte	$3e, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $1e, $30, $3e, $33, $33, $33
20d6c     6E 00 00 00 
20d70     00 00 00 00 
20d74     33 00 1E 30 
20d78     3E 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $33, $00, $1e, $30, $3e, $33, $33, $33
20d7c     6E 00 00 00 
20d80     00 00 1C 36 
20d84     1C 00 33 33 
20d88     33 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $1c, $36, $1c, $00, $33, $33, $33, $33, $33, $33
20d8c     6E 00 00 00 
20d90     00 00 60 30 
20d94     18 00 3E 63 
20d98     03 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $03, $03, $03, $63
20d9c     3E 00 00 00 
20da0     00 00 00 00 
20da4     00 00 3E 63 
20da8     03 03 03 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $03, $03, $03, $63
20dac     3E 18 30 1E 
20db0     00 00 00 1C 
20db4     58 78 38 18 
20db8     1C 1E 1A 18 | 	byte	$3e, $18, $30, $1e, $00, $00, $00, $1c, $58, $78, $38, $18, $1c, $1e, $1a, $18
20dbc     3C 00 00 00 
20dc0     00 00 00 00 
20dc4     63 00 3E 63 
20dc8     7F 03 03 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $7f, $03, $03, $63
20dcc     3E 00 00 00 
20dd0     66 33 00 3E 
20dd4     63 63 63 63 
20dd8     63 63 63 63 | 	byte	$3e, $00, $00, $00, $66, $33, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
20ddc     3E 00 00 00 
20de0     00 00 CC 66 
20de4     33 00 3E 63 
20de8     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $cc, $66, $33, $00, $3e, $63, $63, $63, $63, $63
20dec     3E 00 00 00 
20df0     00 00 18 3C 
20df4     66 00 1C 18 
20df8     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $18, $3c, $66, $00, $1c, $18, $18, $18, $18, $18
20dfc     3C 00 00 00 
20e00     30 18 00 7F 
20e04     63 61 30 18 
20e08     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
20e0c     7F 00 00 00 
20e10     00 63 00 08 
20e14     1C 36 63 63 
20e18     7F 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $63, $00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63
20e1c     63 00 00 00 
20e20     30 18 00 3C 
20e24     66 43 03 03 
20e28     03 03 43 66 | 	byte	$63, $00, $00, $00, $30, $18, $00, $3c, $66, $43, $03, $03, $03, $03, $43, $66
20e2c     3C 00 00 00 
20e30     30 18 00 7F 
20e34     66 46 16 1E 
20e38     16 06 46 66 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66
20e3c     7F 00 00 00 
20e40     0C 06 00 0F 
20e44     06 06 06 06 
20e48     06 06 46 66 | 	byte	$7f, $00, $00, $00, $0c, $06, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
20e4c     7F 00 00 00 
20e50     30 18 00 1C 
20e54     18 18 18 18 
20e58     18 18 18 18 | 	byte	$7f, $00, $00, $00, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $18, $18, $18
20e5c     3C 00 00 00 
20e60     00 00 08 1C 
20e64     36 00 3E 63 
20e68     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $3e, $63, $63, $63, $63, $63
20e6c     3E 00 00 00 
20e70     00 00 00 00 
20e74     63 00 3E 63 
20e78     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63
20e7c     3E 00 00 00 
20e80     00 00 00 6F 
20e84     46 26 06 06 
20e88     06 06 46 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $6f, $46, $26, $06, $06, $06, $06, $46, $66
20e8c     7F 00 00 00 
20e90     00 00 00 6E 
20e94     4C 2C 0C 0C 
20e98     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $6e, $4c, $2c, $0c, $0c, $0c, $0c, $0c, $0c
20e9c     1E 00 00 00 
20ea0     30 18 00 3E 
20ea4     63 63 06 1C 
20ea8     30 60 63 63 | 	byte	$1e, $00, $00, $00, $30, $18, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
20eac     3E 00 00 00 
20eb0     00 00 60 30 
20eb4     18 00 3E 63 
20eb8     06 1C 30 63 | 	byte	$3e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $06, $1c, $30, $63
20ebc     3E 00 00 00 
20ec0     00 63 00 3E 
20ec4     63 63 63 63 
20ec8     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
20ecc     3E 00 00 00 
20ed0     00 63 00 63 
20ed4     63 63 63 63 
20ed8     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
20edc     3E 00 00 00 
20ee0     6C 38 00 7E 
20ee4     7E 5A 18 18 
20ee8     18 18 18 18 | 	byte	$3e, $00, $00, $00, $6c, $38, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
20eec     3C 00 00 00 
20ef0     00 00 60 48 
20ef4     2C 0C 3F 0C 
20ef8     0C 0C 0C 6C | 	byte	$3c, $00, $00, $00, $00, $00, $60, $48, $2c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
20efc     38 00 00 00 
20f00     00 00 00 0F 
20f04     26 36 1E 0E 
20f08     07 07 46 66 | 	byte	$38, $00, $00, $00, $00, $00, $00, $0f, $26, $36, $1e, $0e, $07, $07, $46, $66
20f0c     7F 00 00 00 
20f10     00 00 00 00 
20f14     00 63 36 1C 
20f18     1C 36 63 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $36, $63, $00
20f1c     00 00 00 00 
20f20     00 00       | 	byte	$00[6]
20f22     36 1C 08 00 
20f26     3E 63 03 03 
20f2a     03 63 3E 00 
20f2e     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00
20f32     30 18 0C 00 
20f36     1E 30 3E 33 
20f3a     33 33 6E 00 
20f3e     00 00 00 00 | 	byte	$30, $18, $0c, $00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00
20f42     60 30 18 00 
20f46     1C 18 18 18 
20f4a     18 18 3C 00 
20f4e     00 00 00 00 | 	byte	$60, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00
20f52     60 30 18 00 
20f56     3E 63 63 63 
20f5a     63 63 3E 00 
20f5e     00 00 00 00 | 	byte	$60, $30, $18, $00, $3e, $63, $63, $63, $63, $63, $3e, $00, $00, $00, $00, $00
20f62     30 18 0C 00 
20f66     33 33 33 33 
20f6a     33 33 6E 00 
20f6e     00 00 00 00 | 	byte	$30, $18, $0c, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00
20f72     00 08 1C 36 
20f76     63 63 7F 63 
20f7a     63 63 63 18 
20f7e     0C 78 00 00 | 	byte	$00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63, $63, $18, $0c, $78, $00, $00
20f82     00 00 00 00 
20f86     1E 30 3E 33 
20f8a     33 33 6E 18 
20f8e     0C 78 36 1C | 	byte	$00, $00, $00, $00, $1e, $30, $3e, $33, $33, $33, $6e, $18, $0c, $78, $36, $1c
20f92     00 7F 63 61 
20f96     30 18 0C 06 
20f9a     43 63 7F 00 
20f9e     00 00 00 00 | 	byte	$00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00
20fa2     36 1C 08 00 
20fa6     7F 33 18 0C 
20faa     06 63 7F 00 
20fae     00 00 00 00 | 	byte	$36, $1c, $08, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00
20fb2     00 7F 66 46 
20fb6     16 1E 16 06 
20fba     46 66 7F 18 
20fbe     0C 78 00 00 | 	byte	$00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66, $7f, $18, $0c, $78, $00, $00
20fc2     00 00 00 00 
20fc6     3E 63 7F 03 
20fca     03 63 3E 18 
20fce     0C 78 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $7f, $03, $03, $63, $3e, $18, $0c, $78, $00, $00
20fd2     00 3C 66 03 
20fd6     1F 03 0F 03 
20fda     03 66 3C 00 
20fde     00 00 00 00 | 	byte	$00, $3c, $66, $03, $1f, $03, $0f, $03, $03, $66, $3c, $00, $00, $00, $00, $00
20fe2     60 30 18 00 
20fe6     7F 33 18 0C 
20fea     06 63 7F 00 
20fee     00 00 6C 38 | 	byte	$60, $30, $18, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $6c, $38
20ff2     00 3C 66 43 
20ff6     03 03 03 03 
20ffa     43 66 3C 00 
20ffe     00 00 00 00 | 	byte	$00, $3c, $66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00
21002     00 00 00 00 
21006     3E 63 06 1C 
2100a     30 63 3E 18 
2100e     30 1E 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63, $3e, $18, $30, $1e, $00, $00
21012     00 00 00 00 
21016     00 00       | 	byte	$00[6]
21018     6C 36 1B 36 
2101c     6C 00 00 00 
21020     00 00 00 00 
21024     00 00 00 00 | 	byte	$6c, $36, $1b, $36, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21028     1B 36 6C 36 
2102c     1B 00 00 00 
21030     88 22 88 22 
21034     88 22 88 22 | 	byte	$1b, $36, $6c, $36, $1b, $00, $00, $00, $88, $22, $88, $22, $88, $22, $88, $22
21038     88 22 88 22 
2103c     88 22 88 22 
21040     AA 55 AA 55 
21044     AA 55 AA 55 | 	byte	$88, $22, $88, $22, $88, $22, $88, $22, $aa, $55, $aa, $55, $aa, $55, $aa, $55
21048     AA 55 AA 55 
2104c     AA 55 AA 55 
21050     BB EE BB EE 
21054     BB EE BB EE | 	byte	$aa, $55, $aa, $55, $aa, $55, $aa, $55, $bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee
21058     BB EE BB EE 
2105c     BB EE BB EE 
21060     18 18 18 18 
21064     18 18 18 18 | 	byte	$bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee, $18, $18, $18, $18, $18, $18, $18, $18
21068     18 18 18 18 
2106c     18 18 18 18 
21070     18 18 18 18 
21074     18 18 18    | 	byte	$18[15]
21077     1F 18 18 18 
2107b     18 18 18 18 
2107f     18 30 18 00 
21083     08 1C 36 63 | 	byte	$1f, $18, $18, $18, $18, $18, $18, $18, $18, $30, $18, $00, $08, $1c, $36, $63
21087     63 7F 63 63 
2108b     63 63 00 00 
2108f     00 1C 36 00 
21093     08 1C 36 63 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $1c, $36, $00, $08, $1c, $36, $63
21097     63 7F 63 63 
2109b     63 63 00 00 
2109f     00 36 1C 00 
210a3     7F 66 46 16 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $36, $1c, $00, $7f, $66, $46, $16
210a7     1E 16 06 46 
210ab     66 7F 00 00 
210af     00 00 00 00 
210b3     3E 63 63 06 | 	byte	$1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06
210b7     1C 30 60 63 
210bb     63 3E 18 30 
210bf     1E 6C 6C 6C 
210c3     6C 6C 6F 60 | 	byte	$1c, $30, $60, $63, $63, $3e, $18, $30, $1e, $6c, $6c, $6c, $6c, $6c, $6f, $60
210c7     6F 6C 6C 6C 
210cb     6C 6C 6C 6C 
210cf     6C 6C 6C 6C 
210d3     6C 6C 6C 6C | 	byte	$6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
210d7     6C 6C 6C 6C 
210db     6C 6C 6C 6C 
210df     6C          | 	byte	$6c[9]
210e0     00 00 00 00 
210e4     00          | 	byte	$00[5]
210e5     7F 60 6F 6C 
210e9     6C 6C 6C 6C 
210ed     6C 6C 6C 6C 
210f1     6C 6C 6C 6C | 	byte	$7f, $60, $6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
210f5     6F 60 7F 00 
210f9     00 00 00 00 
210fd     00 00 00 18 
21101     18 00 7F 63 | 	byte	$6f, $60, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $7f, $63
21105     61 30 18 0C 
21109     06 43 63 7F 
2110d     00 00 00 00 
21111     00 00 18 18 | 	byte	$61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00, $00, $18, $18
21115     00 7F 33 18 
21119     0C 06 63 7F 
2111d     00 00 00 00 
21121     00 00 00 00 | 	byte	$00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00, $00, $00, $00
21125     00 00 1F 18 
21129     18 18 18 18 
2112d     18 18 18 18 
21131     18 18 18 18 | 	byte	$00, $00, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
21135     18 18 F8 00 
21139     00 00 00 00 
2113d     00 00 00 18 
21141     18 18 18 18 | 	byte	$18, $18, $f8, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
21145     18 18 FF 00 
21149     00 00 00 00 
2114d     00 00 00 00 
21151     00 00 00 00 | 	byte	$18, $18, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21155     00 00 FF 18 
21159     18 18 18 18 
2115d     18 18 18 18 
21161     18 18 18 18 | 	byte	$00, $00, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
21165     18 18 F8 18 
21169     18 18 18 18 
2116d     18 18 18 00 
21171     00 00 00 00 | 	byte	$18, $18, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
21175     00 00 FF 00 
21179     00 00 00 00 
2117d     00 00 00 18 
21181     18 18 18 18 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
21185     18 18 FF 18 
21189     18 18 18 18 
2118d     18 18 18 63 
21191     3E 00 08 1C | 	byte	$18, $18, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $63, $3e, $00, $08, $1c
21195     36 63 63 7F 
21199     63 63 63 63 
2119d     00 00 00 00 
211a1     00 00 63 3E | 	byte	$36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $63, $3e
211a5     00 1E 30 3E 
211a9     33 33 33 6E 
211ad     00 00 00 6C 
211b1     6C 6C 6C 6C | 	byte	$00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
211b5     EC 0C FC 00 
211b9     00 00 00 00 
211bd     00 00 00 00 
211c1     00 00 00 00 | 	byte	$ec, $0c, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
211c5     FC 0C EC 6C 
211c9     6C 6C 6C 6C 
211cd     6C 6C 6C 6C 
211d1     6C 6C 6C 6C | 	byte	$fc, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
211d5     EF 00 FF 00 
211d9     00 00 00 00 
211dd     00 00 00 00 
211e1     00 00 00 00 | 	byte	$ef, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
211e5     FF 00 EF 6C 
211e9     6C 6C 6C 6C 
211ed     6C 6C 6C 6C 
211f1     6C 6C 6C 6C | 	byte	$ff, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
211f5     EC 0C EC 6C 
211f9     6C 6C 6C 6C 
211fd     6C 6C 6C 00 
21201     00 00 00 00 | 	byte	$ec, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
21205     FF 00 FF 00 
21209     00 00 00 00 
2120d     00 00 00 6C 
21211     6C 6C 6C 6C | 	byte	$ff, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
21215     EF 00 EF 6C 
21219     6C 6C 6C 6C 
2121d     6C 6C 6C 00 
21221     00 00 00 00 | 	byte	$ef, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
21225     63 3E 63 63 
21229     63 63 3E 63 
2122d     00 00 00 00 
21231     00 00 30 7E | 	byte	$63, $3e, $63, $63, $63, $63, $3e, $63, $00, $00, $00, $00, $00, $00, $30, $7e
21235     30 3C 36 33 
21239     33 33 33 6E 
2123d     00 00 00 00 
21241     00 00 1F 36 | 	byte	$30, $3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $1f, $36
21245     66 66 6F 66 
21249     66 66 36 1F 
2124d     00 00 00 36 
21251     1C 00 1F 36 | 	byte	$66, $66, $6f, $66, $66, $66, $36, $1f, $00, $00, $00, $36, $1c, $00, $1f, $36
21255     66 66 66 66 
21259     66 66       | 	byte	$66[6]
2125b     36 1F 00 00 
2125f     00 00 63 00 
21263     7F 66 46 16 
21267     1E 16 06 46 | 	byte	$36, $1f, $00, $00, $00, $00, $63, $00, $7f, $66, $46, $16, $1e, $16, $06, $46
2126b     66 7F 00 00 
2126f     00 6C 38 00 
21273     38 30 30 3C 
21277     36 33 33 33 | 	byte	$66, $7f, $00, $00, $00, $6c, $38, $00, $38, $30, $30, $3c, $36, $33, $33, $33
2127b     33 6E 00 00 
2127f     00 36 1C 00 
21283     63 67 6F 7F 
21287     7B 73 63 63 | 	byte	$33, $6e, $00, $00, $00, $36, $1c, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63
2128b     63 63 00 00 
2128f     00 30 18 00 
21293     3C 18 18 18 
21297     18 18 18 18 | 	byte	$63, $63, $00, $00, $00, $30, $18, $00, $3c, $18, $18, $18, $18, $18, $18, $18
2129b     18 3C 00 00 
2129f     00 3C 66 00 
212a3     3C 18 18 18 
212a7     18 18 18 18 | 	byte	$18, $3c, $00, $00, $00, $3c, $66, $00, $3c, $18, $18, $18, $18, $18, $18, $18
212ab     18 3C 00 00 
212af     00 00 00 36 
212b3     1C 08 00 3E 
212b7     63 7F 03 03 | 	byte	$18, $3c, $00, $00, $00, $00, $00, $36, $1c, $08, $00, $3e, $63, $7f, $03, $03
212bb     63 3E 00 00 
212bf     00 18 18 18 
212c3     18 18 18 18 
212c7     1F 00 00 00 | 	byte	$63, $3e, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $1f, $00, $00, $00
212cb     00 00 00 00 
212cf     00 00 00 00 
212d3     00 00 00 00 | 	byte	$00[12]
212d7     F8 18 18 18 
212db     18 18 18 18 
212df     18 FF FF FF 
212e3     FF FF FF FF | 	byte	$f8, $18, $18, $18, $18, $18, $18, $18, $18, $ff, $ff, $ff, $ff, $ff, $ff, $ff
212e7     FF FF FF FF 
212eb     FF FF FF FF 
212ef     FF          | 	byte	$ff[9]
212f0     00 00 00 00 
212f4     00 00 00    | 	byte	$00[7]
212f7     FF FF FF FF 
212fb     FF FF FF FF 
212ff     FF          | 	byte	$ff[9]
21300     00 00 00 7E 
21304     7E 5A 18 18 
21308     18 18 18 18 
2130c     3C 18 30 1E | 	byte	$00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18, $3c, $18, $30, $1e
21310     1C 36 1C 63 
21314     63 63 63 63 
21318     63 63 63 63 
2131c     3E 00 00 00 | 	byte	$1c, $36, $1c, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
21320     FF FF FF FF 
21324     FF FF FF    | 	byte	$ff[7]
21327     00 00 00 00 
2132b     00 00 00 00 
2132f     00          | 	byte	$00[9]
21330     30 18 00 3E 
21334     63 63 63 63 
21338     63 63 63 63 
2133c     3E 00 00 00 | 	byte	$30, $18, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
21340     00 00 00 1E 
21344     33 33 33 1B 
21348     33 63 63 63 
2134c     33 00 00 00 | 	byte	$00, $00, $00, $1e, $33, $33, $33, $1b, $33, $63, $63, $63, $33, $00, $00, $00
21350     1C 36 00 3E 
21354     63 63 63 63 
21358     63 63 63 63 
2135c     3E 00 00 00 | 	byte	$1c, $36, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
21360     30 18 00 63 
21364     67 6F 7F 7B 
21368     73 63 63 63 
2136c     63 00 00 00 | 	byte	$30, $18, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63, $63, $00, $00, $00
21370     00 00 60 30 
21374     18 00 3B 66 
21378     66 66 66 66 
2137c     66 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
21380     00 00 36 1C 
21384     08 00 3B 66 
21388     66 66 66 66 
2138c     66 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
21390     36 1C 00 3E 
21394     63 63 06 1C 
21398     30 60 63 63 
2139c     3E 00 00 00 | 	byte	$36, $1c, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63, $3e, $00, $00, $00
213a0     00 00 36 1C 
213a4     08 00 3E 63 
213a8     06 1C 30 63 
213ac     3E 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3e, $63, $06, $1c, $30, $63, $3e, $00, $00, $00
213b0     30 18 00 3F 
213b4     66 66 66 3E 
213b8     36 66 66 66 
213bc     6F 00 00 00 | 	byte	$30, $18, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00
213c0     30 18 00 63 
213c4     63 63 63 63 
213c8     63 63 63 63 
213cc     3E 00 00 00 | 	byte	$30, $18, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
213d0     00 00 60 30 
213d4     18 00 3B 6E 
213d8     66 06 06 06 
213dc     0F 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00
213e0     66 33 00 63 
213e4     63 63 63 63 
213e8     63 63 63 63 
213ec     3E 00 00 00 | 	byte	$66, $33, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
213f0     00 00 60 30 
213f4     18 00 63 63 
213f8     63 63 63 63 
213fc     7E 60 30 1F | 	byte	$00, $00, $60, $30, $18, $00, $63, $63, $63, $63, $63, $63, $7e, $60, $30, $1f
21400     30 18 00 66 
21404     66 66 66 3C 
21408     18 18 18 18 
2140c     3C 00 00 00 | 	byte	$30, $18, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18, $3c, $00, $00, $00
21410     00 00 00 08 
21414     0C 0C 3F 0C 
21418     0C 0C 0C 6C 
2141c     38 18 30 1E | 	byte	$00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c, $38, $18, $30, $1e
21420     30 18 00 00 
21424     00 00 00 00 
21428     00 00 00 00 
2142c     00 00 00 00 | 	byte	$30, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21430     00 00 00 00 
21434     00 00 00 00 | 	byte	$00[8]
21438     7F 00 00 00 
2143c     00 00 00 00 
21440     66 33 00 00 
21444     00 00 00 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $66, $33, $00, $00, $00, $00, $00, $00
21448     00 00 00 00 
2144c     00 00 00 00 
21450     00 00 00 00 
21454     00 00 00 00 
21458     00 00 00 00 
2145c     00          | 	byte	$00[21]
2145d     0C 06 3C 36 
21461     1C 00 00 00 
21465     00 00 00 00 
21469     00 00 00 00 | 	byte	$0c, $06, $3c, $36, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2146d     00 00 00 63 
21471     3E 00 00 00 
21475     00 00 00 00 
21479     00 00 00 00 | 	byte	$00, $00, $00, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2147d     00 00 00 00 
21481     3E 63 06 1C 
21485     36 63 63 36 
21489     1C 30 63 3E | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c, $30, $63, $3e
2148d     00 00 00 00 
21491     00 00 00 00 | 	byte	$00[8]
21495     18 00 7E 00 
21499     18 00 00 00 
2149d     00 00 00 00 
214a1     00 00 00 00 | 	byte	$18, $00, $7e, $00, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
214a5     00 00 00 00 
214a9     00 00 00 00 | 	byte	$00[8]
214ad     18 30 1E 00 
214b1     00 00 1C 36 
214b5     36 1C 00 00 
214b9     00 00 00 00 | 	byte	$18, $30, $1e, $00, $00, $00, $1c, $36, $36, $1c, $00, $00, $00, $00, $00, $00
214bd     00 00 00 00 
214c1     63 00 00 00 
214c5     00 00 00 00 
214c9     00 00 00 00 | 	byte	$00, $00, $00, $00, $63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
214cd     00 00 00 18 
214d1     18 00 00 00 
214d5     00 00 00 00 
214d9     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
214dd     00 00 00 00 
214e1     00          | 	byte	$00[5]
214e2     CC 66 33 00 
214e6     33 33 33 33 
214ea     33 33 6E 00 
214ee     00 00 36 1C | 	byte	$cc, $66, $33, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $36, $1c
214f2     00 3F 66 66 
214f6     66 3E 36 66 
214fa     66 66 6F 00 
214fe     00 00 00 00 | 	byte	$00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00, $00, $00
21502     36 1C 08 00 
21506     3B 6E 66 06 
2150a     06 06 0F 00 
2150e     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00, $00, $00
21512     00 00 00 7E 
21516     7E 7E 7E 7E 
2151a     7E 7E 00 00 
2151e     00 00 00 00 | 	byte	$00, $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00
21522     00 00 00 00 
21526     00 00 00 00 
2152a     00 00 00 00 
2152e     00 00       | 	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21530     00 00 00 00 
      ...             
21560     00 00 00 00 
21564     00 00 00    | st_font        file "st4font.def"
21567     FF FF 00 00 
2156b     00 00 00 00 
2156f     00 18 18 18 
21573     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
21577     18 18 18 18 
2157b     18 18 18 18 
2157f     18          | 	byte	$18[9]
21580     00 00 00 00 
21584     00 00 00    | 	byte	$00[7]
21587     FF FF 18 18 
2158b     18 18 18 18 
2158f     18 18 18 18 
21593     18 18 18 18 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
21597     FF FF 00 00 
2159b     00 00 00 00 
2159f     00 18 18 18 
215a3     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
215a7     1F 1F 18 18 
215ab     18 18 18 18 
215af     18 18 18 18 
215b3     18 18 18 18 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
215b7     F8 F8 18 18 
215bb     18 18 18 18 
215bf     18 00 00 00 
215c3     00 00 00 00 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
215c7     1F 1F 18 18 
215cb     18 18 18 18 
215cf     18 00 00 00 
215d3     00 00 00 00 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
215d7     F8 F8 18 18 
215db     18 18 18 18 
215df     18 18 18 18 
215e3     18 18 18 18 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
215e7     1F 1F 00 00 
215eb     00 00 00 00 
215ef     00 18 18 18 
215f3     18 18 18 18 | 	byte	$1f, $1f, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
215f7     F8 F8 00 00 
215fb     00 00 00 00 
215ff     00 18 18 18 
21603     18 18 18 18 | 	byte	$f8, $f8, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
21607     FF FF 18 18 
2160b     18 18 18 18 
2160f     18 00 00 18 
21613     3C 7E 66 66 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $00, $00, $18, $3c, $7e, $66, $66
21617     66 7E 7E 66 
2161b     66 66 66 30 
2161f     18 00 00 7E 
21623     7E 06 06 3E | 	byte	$66, $7e, $7e, $66, $66, $66, $66, $30, $18, $00, $00, $7e, $7e, $06, $06, $3e
21627     3E 06 06 06 
2162b     06 7E 7E 18 
2162f     0C 30 18 3C 
21633     7E 66 66 06 | 	byte	$3e, $06, $06, $06, $06, $7e, $7e, $18, $0c, $30, $18, $3c, $7e, $66, $66, $06
21637     06 06 06 66 
2163b     66 7E 3C 00 
2163f     00 30 18 66 
21643     66 66 6E 6E | 	byte	$06, $06, $06, $66, $66, $7e, $3c, $00, $00, $30, $18, $66, $66, $66, $6e, $6e
21647     7E 7E 76 76 
2164b     66 66 66 00 
2164f     00 30 18 7C 
21653     7E 06 06 0E | 	byte	$7e, $7e, $76, $76, $66, $66, $66, $00, $00, $30, $18, $7c, $7e, $06, $06, $0e
21657     1C 38 70 60 
2165b     60 7E 3E 00 
2165f     00 30 18 7E 
21663     7E 30 30 18 | 	byte	$1c, $38, $70, $60, $60, $7e, $3e, $00, $00, $30, $18, $7e, $7e, $30, $30, $18
21667     18 0C 0C 06 
2166b     06 7E 7E 00 
2166f     00 18 18 00 
21673     7E 7E 30 30 | 	byte	$18, $0c, $0c, $06, $06, $7e, $7e, $00, $00, $18, $18, $00, $7e, $7e, $30, $30
21677     18 18 0C 0C 
2167b     06 7E 7E 00 
2167f     00 30 18 3C 
21683     7E 66 66 66 | 	byte	$18, $18, $0c, $0c, $06, $7e, $7e, $00, $00, $30, $18, $3c, $7e, $66, $66, $66
21687     66 66 66 66 
2168b     66          | 	byte	$66[5]
2168c     7E 3C 00 00 
21690     00 00 06 06 
21694     06 06 16 1E 
21698     0E 06 06 06 | 	byte	$7e, $3c, $00, $00, $00, $00, $06, $06, $06, $06, $16, $1e, $0e, $06, $06, $06
2169c     7E 7E 00 00 
216a0     00 00 00 00 
216a4     00 3C 7C 60 
216a8     7C 7E 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $00, $00, $00, $3c, $7c, $60, $7c, $7e, $66, $66
216ac     7E 7C 30 18 
216b0     00 00 00 00 
216b4     00 3C 7E 66 
216b8     66 7E 06 06 | 	byte	$7e, $7c, $30, $18, $00, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $06, $06
216bc     7E 7C 18 0C 
216c0     00 00 30 18 
216c4     00 3C 3E 06 
216c8     06 06 06 06 | 	byte	$7e, $7c, $18, $0c, $00, $00, $30, $18, $00, $3c, $3e, $06, $06, $06, $06, $06
216cc     7E 7C 00 00 
216d0     00 00 30 18 
216d4     00 3E 7E 66 
216d8     66 66 66 66 | 	byte	$7e, $7c, $00, $00, $00, $00, $30, $18, $00, $3e, $7e, $66, $66, $66, $66, $66
216dc     66 66 00 00 
216e0     00 00 30 18 
216e4     00 7C 7E 06 
216e8     0E 3C 70 60 | 	byte	$66, $66, $00, $00, $00, $00, $30, $18, $00, $7c, $7e, $06, $0e, $3c, $70, $60
216ec     7E 3E 00 00 
216f0     00 00 30 18 
216f4     00 7E 7E 30 
216f8     18 18 0C 0C | 	byte	$7e, $3e, $00, $00, $00, $00, $30, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
216fc     7E 7E 00 00 
21700     00 00 18 18 
21704     00 7E 7E 30 
21708     18 18 0C 0C | 	byte	$7e, $7e, $00, $00, $00, $00, $18, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
2170c     7E 7E 00 00 
21710     00 00 30 18 
21714     00 3C 7E 66 
21718     66 66 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $00, $3c, $7e, $66, $66, $66, $66, $66
2171c     7E 3C 00 00 
21720     00 00 1C 1C 
21724     18 18 38 3C 
21728     1C 18 18 18 | 	byte	$7e, $3c, $00, $00, $00, $00, $1c, $1c, $18, $18, $38, $3c, $1c, $18, $18, $18
2172c     3C 3C 00 00 
21730     00 00 00 00 
21734     00 00 00 00 
21738     00 00 00 00 | 	byte	$3c, $3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2173c     00 00 00 00 
21740     00 00       | 	byte	$00[6]
21742     18 18 18 18 
21746     18 18 18 18 | 	byte	$18[8]
2174a     00 00 18 18 
2174e     00 00 00 00 
21752     66 66 66 66 
21756     00 00 00 00 | 	byte	$00, $00, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $00, $00, $00, $00
2175a     00 00 00 00 
2175e     00 00 00 00 
21762     00          | 	byte	$00[9]
21763     66 66 FF FF 
21767     66 66 FF FF 
2176b     66 66 00 00 
2176f     00 00 18 18 | 	byte	$66, $66, $ff, $ff, $66, $66, $ff, $ff, $66, $66, $00, $00, $00, $00, $18, $18
21773     7C 7E 06 06 
21777     3E 7C 60 60 
2177b     7E 3E 18 18 
2177f     00 00 00 66 | 	byte	$7c, $7e, $06, $06, $3e, $7c, $60, $60, $7e, $3e, $18, $18, $00, $00, $00, $66
21783     66 30 30 18 
21787     18 0C 0C 66 
2178b     66 00 00 00 
2178f     00 00 3C 7E | 	byte	$66, $30, $30, $18, $18, $0c, $0c, $66, $66, $00, $00, $00, $00, $00, $3c, $7e
21793     66 66 3C 1C 
21797     1C FC FE 66 
2179b     66 FE FC 00 
2179f     00 00 00 18 | 	byte	$66, $66, $3c, $1c, $1c, $fc, $fe, $66, $66, $fe, $fc, $00, $00, $00, $00, $18
217a3     18 18 18 18 
217a7     00 00 00 00 
217ab     00 00 00 00 
217af     00 00 00 30 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $30
217b3     18 1C 0C 0C 
217b7     0C 0C 0C 0C 
217bb     1C 18 30 00 
217bf     00 00 00 0C | 	byte	$18, $1c, $0c, $0c, $0c, $0c, $0c, $0c, $1c, $18, $30, $00, $00, $00, $00, $0c
217c3     18 38 30 30 
217c7     30 30 30 30 
217cb     38 18 0C 00 
217cf     00 00 00 00 | 	byte	$18, $38, $30, $30, $30, $30, $30, $30, $38, $18, $0c, $00, $00, $00, $00, $00
217d3     66 66 3C 3C 
217d7     FF FF 3C 3C 
217db     66 66 00 00 
217df     00 00 00 00 | 	byte	$66, $66, $3c, $3c, $ff, $ff, $3c, $3c, $66, $66, $00, $00, $00, $00, $00, $00
217e3     00 18 18 18 
217e7     7E 7E 18 18 
217eb     18 00 00 00 
217ef     00 00 00 00 | 	byte	$00, $18, $18, $18, $7e, $7e, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
217f3     00 00 00 00 
217f7     00 00       | 	byte	$00[6]
217f9     18 18 18 18 
217fd     18          | 	byte	$18[5]
217fe     0C 04 00 00 
21802     00 00 00 00 
21806     7E 7E 00 00 
2180a     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $00, $00, $00, $00
2180e     00 00 00 00 
21812     00 00 00 00 
21816     00 00 00 00 
2181a     00          | 	byte	$00[13]
2181b     18 18 18 00 
2181f     00 00 00 60 
21823     60 60 30 30 
21827     18 18 0C 0C | 	byte	$18, $18, $18, $00, $00, $00, $00, $60, $60, $60, $30, $30, $18, $18, $0c, $0c
2182b     06 06 06 00 
2182f     00 00 00 3C 
21833     7E 66 66 66 
21837     76 6E 66 66 | 	byte	$06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $76, $6e, $66, $66
2183b     66 7E 3C 00 
2183f     00 00 00 18 
21843     18 1C 1C 18 
21847     18 18 18 18 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $18, $18, $1c, $1c, $18, $18, $18, $18, $18
2184b     18 7E 7E 00 
2184f     00 00 00 3C 
21853     7E 66 66 30 
21857     30 18 18 0C | 	byte	$18, $7e, $7e, $00, $00, $00, $00, $3c, $7e, $66, $66, $30, $30, $18, $18, $0c
2185b     0C 7E 7E 00 
2185f     00 00 00 7E 
21863     7E 30 30 18 
21867     18 30 30 66 | 	byte	$0c, $7e, $7e, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $30, $30, $66
2186b     66 7E 3C 00 
2186f     00 00 00 30 
21873     30 38 38 3C 
21877     3C 36 36 7E | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $30, $30, $38, $38, $3c, $3c, $36, $36, $7e
2187b     7E 30 30 00 
2187f     00 00 00 7E 
21883     7E 06 06 3E 
21887     7E 60 60 60 | 	byte	$7e, $30, $30, $00, $00, $00, $00, $7e, $7e, $06, $06, $3e, $7e, $60, $60, $60
2188b     66 7E 3C 00 
2188f     00 00 00 38 
21893     3C 0E 06 06 
21897     3E 7E 66 66 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $38, $3c, $0e, $06, $06, $3e, $7e, $66, $66
2189b     66 7E 3C 00 
2189f     00 00 00 7E 
218a3     7E 60 60 30 
218a7     30 18 18 0C | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $7e, $7e, $60, $60, $30, $30, $18, $18, $0c
218ab     0C 0C 0C 00 
218af     00 00 00 3C 
218b3     7E 66 66 3C 
218b7     3C 66 66 66 | 	byte	$0c, $0c, $0c, $00, $00, $00, $00, $3c, $7e, $66, $66, $3c, $3c, $66, $66, $66
218bb     66 7E 3C 00 
218bf     00 00 00 3C 
218c3     7E 66 66 7E 
218c7     7C 60 60 60 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $7c, $60, $60, $60
218cb     70 3C 1C 00 
218cf     00 00 00 00 
218d3     00 00 18 18 
218d7     18 00 00 00 | 	byte	$70, $3c, $1c, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $00
218db     18 18 18 00 
218df     00 00 00 00 
218e3     00 00 18 18 
218e7     18 00 00 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $18
218eb     18 18 18 0C 
218ef     04 00 00 00 
218f3     70 38 1C 0E 
218f7     07 0E 1C 38 | 	byte	$18, $18, $18, $0c, $04, $00, $00, $00, $70, $38, $1c, $0e, $07, $0e, $1c, $38
218fb     70 00 00 00 
218ff     00 00 00 00 
21903     00 00 7E 7E 
21907     00 00 7E 7E | 	byte	$70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $7e, $7e
2190b     00 00 00 00 
2190f     00 00 00 00 | 	byte	$00[8]
21913     0E 1C 38 70 
21917     E0 70 38 1C 
2191b     0E 00 00 00 
2191f     00 00 00 3C | 	byte	$0e, $1c, $38, $70, $e0, $70, $38, $1c, $0e, $00, $00, $00, $00, $00, $00, $3c
21923     7E 66 66 30 
21927     30 18 18 18 
2192b     00 18 18 00 
2192f     00 00 00 3C | 	byte	$7e, $66, $66, $30, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $3c
21933     7E 66 66 66 
21937     66 36 06 66 
2193b     66 7E 3C 00 
2193f     00 00 00 18 | 	byte	$7e, $66, $66, $66, $66, $36, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $18
21943     3C 7E 66 66 
21947     66 7E 7E 66 
2194b     66 66 66 00 
2194f     00 00 00 3E | 	byte	$3c, $7e, $66, $66, $66, $7e, $7e, $66, $66, $66, $66, $00, $00, $00, $00, $3e
21953     7E 66 66 7E 
21957     3E 66 66 66 
2195b     66 7E 3E 00 
2195f     00 00 00 3C | 	byte	$7e, $66, $66, $7e, $3e, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $3c
21963     7E 66 66 06 
21967     06 06 06 66 
2196b     66 7E 3C 00 
2196f     00 00 00 3E | 	byte	$7e, $66, $66, $06, $06, $06, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $3e
21973     7E 66 66 66 
21977     66 66 66 66 
2197b     66 7E 3E 00 
2197f     00 00 00 7E | 	byte	$7e, $66, $66, $66, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $7e
21983     7E 06 06 3E 
21987     3E 06 06 06 
2198b     06 7E 7E 00 
2198f     00 00 00 7E | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $7e, $7e, $00, $00, $00, $00, $7e
21993     7E 06 06 3E 
21997     3E 06 06 06 
2199b     06 06 06 00 
2199f     00 00 00 7C | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $7c
219a3     7E 06 06 76 
219a7     76 66 66 66 
219ab     66 7E 3C 00 
219af     00 00 00 66 | 	byte	$7e, $06, $06, $76, $76, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $66
219b3     66 66 66 7E 
219b7     7E 66 66 66 
219bb     66 66 66 00 
219bf     00 00 00 7E | 	byte	$66, $66, $66, $7e, $7e, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $7e
219c3     7E 18 18 18 
219c7     18 18 18 18 
219cb     18 7E 7E 00 
219cf     00 00 00 60 | 	byte	$7e, $18, $18, $18, $18, $18, $18, $18, $18, $7e, $7e, $00, $00, $00, $00, $60
219d3     60 60 60 60 
219d7     60 60 60    | 	byte	$60[7]
219da     66 66 7E 3C 
219de     00 00 00 00 
219e2     66 66 36 36 
219e6     1E 1E 36 36 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $36, $36, $1e, $1e, $36, $36
219ea     66 66 C6 C6 
219ee     00 00 00 00 
219f2     06 06 06 06 
219f6     06 06 06 06 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06
219fa     06 06 7E 7E 
219fe     00 00 00 00 
21a02     C6 C6 EE EE 
21a06     FE D6 D6 C6 | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $c6, $c6, $ee, $ee, $fe, $d6, $d6, $c6
21a0a     C6 C6 C6 C6 
21a0e     00 00 00 00 
21a12     66 66 66 6E 
21a16     6E 7E 7E 76 | 	byte	$c6, $c6, $c6, $c6, $00, $00, $00, $00, $66, $66, $66, $6e, $6e, $7e, $7e, $76
21a1a     76 66 66 66 
21a1e     00 00 00 00 
21a22     3C 7E 66 66 
21a26     66 66 66 66 | 	byte	$76, $66, $66, $66, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
21a2a     66 66 7E 3C 
21a2e     00 00 00 00 
21a32     3E 7E 66 66 
21a36     66 66 7E 3E | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $66, $7e, $3e
21a3a     06 06 06 06 
21a3e     00 00 00 00 
21a42     3C 7E 66 66 
21a46     66 66 66 66 | 	byte	$06, $06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
21a4a     66 56 3E 6C 
21a4e     00 00 00 00 
21a52     3E 7E 66 66 
21a56     66 7E 3E 36 | 	byte	$66, $56, $3e, $6c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $7e, $3e, $36
21a5a     66 66 C6 C6 
21a5e     00 00 00 00 
21a62     7C 7E 06 06 
21a66     0E 1C 38 70 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $7c, $7e, $06, $06, $0e, $1c, $38, $70
21a6a     60 60 7E 3E 
21a6e     00 00 00 00 
21a72     7E 7E 18 18 
21a76     18 18 18 18 | 	byte	$60, $60, $7e, $3e, $00, $00, $00, $00, $7e, $7e, $18, $18, $18, $18, $18, $18
21a7a     18 18 18 18 
21a7e     00 00 00 00 
21a82     66 66 66 66 
21a86     66 66 66 66 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
21a8a     66 66 7E 3C 
21a8e     00 00 00 00 
21a92     66 66 66 66 
21a96     66 66 66 66 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
21a9a     3C 3C 18 18 
21a9e     00 00 00 00 
21aa2     C6 C6 C6 C6 
21aa6     C6 D6 D6 FE | 	byte	$3c, $3c, $18, $18, $00, $00, $00, $00, $c6, $c6, $c6, $c6, $c6, $d6, $d6, $fe
21aaa     FE EE C6 82 
21aae     00 00 00 00 
21ab2     66 66 66 3C 
21ab6     3C 18 18 3C | 	byte	$fe, $ee, $c6, $82, $00, $00, $00, $00, $66, $66, $66, $3c, $3c, $18, $18, $3c
21aba     3C 66 66 66 
21abe     00 00 00 00 
21ac2     66 66 66 66 
21ac6     66 3C 3C 18 | 	byte	$3c, $66, $66, $66, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c, $18
21aca     18 18 18 18 
21ace     00 00 00 00 
21ad2     7E 7E 30 30 
21ad6     18 18 0C 0C | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $0c, $0c
21ada     06 06 7E 7E 
21ade     00 00 00 00 
21ae2     3C 3C 0C 0C 
21ae6     0C 0C 0C 0C | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $3c, $3c, $0c, $0c, $0c, $0c, $0c, $0c
21aea     0C 0C 3C 3C 
21aee     00 00 00 00 
21af2     06 06 0C 0C 
21af6     18 18 30 30 | 	byte	$0c, $0c, $3c, $3c, $00, $00, $00, $00, $06, $06, $0c, $0c, $18, $18, $30, $30
21afa     60 60 C0 C0 
21afe     00 00 00 00 
21b02     3C 3C 30 30 
21b06     30 30 30 30 | 	byte	$60, $60, $c0, $c0, $00, $00, $00, $00, $3c, $3c, $30, $30, $30, $30, $30, $30
21b0a     30 30 3C 3C 
21b0e     00 00 00 00 
21b12     18 18 3C 3C 
21b16     66 66 00 00 | 	byte	$30, $30, $3c, $3c, $00, $00, $00, $00, $18, $18, $3c, $3c, $66, $66, $00, $00
21b1a     00 00 00 00 
21b1e     00 00 00 00 
21b22     00 00 00 00 
21b26     00 00 00 00 
21b2a     00 00       | 	byte	$00[18]
21b2c     FE FE 00 00 
21b30     00 00 0C 0C 
21b34     18 18 00 00 
21b38     00 00 00 00 | 	byte	$fe, $fe, $00, $00, $00, $00, $0c, $0c, $18, $18, $00, $00, $00, $00, $00, $00
21b3c     00 00 00 00 
21b40     00 00 00 00 
21b44     00          | 	byte	$00[9]
21b45     3C 7C 60 7C 
21b49     7E 66 66 7E 
21b4d     7C 00 00 00 
21b51     00 06 06 06 | 	byte	$3c, $7c, $60, $7c, $7e, $66, $66, $7e, $7c, $00, $00, $00, $00, $06, $06, $06
21b55     3E 7E 66 66 
21b59     66 66 66 7E 
21b5d     3E 00 00 00 
21b61     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $00, $00, $00
21b65     3C 3E 06 06 
21b69     06 06 06 7E 
21b6d     7C 00 00 00 
21b71     00 60 60 60 | 	byte	$3c, $3e, $06, $06, $06, $06, $06, $7e, $7c, $00, $00, $00, $00, $60, $60, $60
21b75     7C 7E 66 66 
21b79     66 66 66 7E 
21b7d     7C 00 00 00 
21b81     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $00, $00, $00, $00, $00, $00, $00
21b85     3C 7E 66 66 
21b89     7E 06 06 7E 
21b8d     7C 00 00 00 
21b91     00 70 78 18 | 	byte	$3c, $7e, $66, $66, $7e, $06, $06, $7e, $7c, $00, $00, $00, $00, $70, $78, $18
21b95     18 7E 7E 18 
21b99     18 18 18 18 
21b9d     18 00 00 00 
21ba1     00 00 00 00 | 	byte	$18, $7e, $7e, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
21ba5     7C 7E 66 66 
21ba9     66 66 7E 7C 
21bad     60 7E 3E 00 
21bb1     00 06 06 06 | 	byte	$7c, $7e, $66, $66, $66, $66, $7e, $7c, $60, $7e, $3e, $00, $00, $06, $06, $06
21bb5     3E 7E 66 66 
21bb9     66 66 66 66 
21bbd     66 00 00 00 
21bc1     00 18 18 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $18, $18, $00
21bc5     1C 1C 18 18 
21bc9     18 18 18 3C 
21bcd     3C 00 00 00 
21bd1     00 30 30 00 | 	byte	$1c, $1c, $18, $18, $18, $18, $18, $3c, $3c, $00, $00, $00, $00, $30, $30, $00
21bd5     30 30 30 30 
21bd9     30 30 30 30 
21bdd     30          | 	byte	$30[9]
21bde     3E 1E 00 00 
21be2     06 06 06 36 
21be6     36 1E 1E 1E 
21bea     36 36 66 66 | 	byte	$3e, $1e, $00, $00, $06, $06, $06, $36, $36, $1e, $1e, $1e, $36, $36, $66, $66
21bee     00 00 00 00 
21bf2     1C 1C 18 18 
21bf6     18 18 18 18 
21bfa     18 18 3C 3C | 	byte	$00, $00, $00, $00, $1c, $1c, $18, $18, $18, $18, $18, $18, $18, $18, $3c, $3c
21bfe     00 00 00 00 
21c02     00 00 00    | 	byte	$00[7]
21c05     6C FE FE D6 
21c09     D6 C6 C6 C6 
21c0d     C6 00 00 00 
21c11     00 00 00 00 | 	byte	$6c, $fe, $fe, $d6, $d6, $c6, $c6, $c6, $c6, $00, $00, $00, $00, $00, $00, $00
21c15     3E 7E 66 66 
21c19     66 66 66 66 
21c1d     66 00 00 00 
21c21     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $00
21c25     3C 7E 66 66 
21c29     66 66 66 7E 
21c2d     3C 00 00 00 
21c31     00 00 00 00 | 	byte	$3c, $7e, $66, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $00, $00, $00
21c35     3E 7E 66 66 
21c39     66 66 66 7E 
21c3d     3E 06 06 00 
21c41     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $06, $06, $00, $00, $00, $00, $00
21c45     7C 7E 66 66 
21c49     66 66 66 7E 
21c4d     7C 60 60 00 
21c51     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $60, $60, $00, $00, $00, $00, $00
21c55     3E 7E 66 06 
21c59     06 06 06 06 
21c5d     06 00 00 00 
21c61     00 00 00 00 | 	byte	$3e, $7e, $66, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $00, $00, $00
21c65     7C 7E 06 0E 
21c69     3C 70 60 7E 
21c6d     3E 00 00 00 
21c71     00 00 18 18 | 	byte	$7c, $7e, $06, $0e, $3c, $70, $60, $7e, $3e, $00, $00, $00, $00, $00, $18, $18
21c75     7E 7E 18 18 
21c79     18 18 18 78 
21c7d     70 00 00 00 
21c81     00 00 00 00 | 	byte	$7e, $7e, $18, $18, $18, $18, $18, $78, $70, $00, $00, $00, $00, $00, $00, $00
21c85     66 66 66 66 
21c89     66 66 66    | 	byte	$66[7]
21c8c     7E 7C 00 00 
21c90     00 00 00 00 
21c94     00 66 66 66 
21c98     66 66 3C 3C | 	byte	$7e, $7c, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c
21c9c     18 18 00 00 
21ca0     00 00 00 00 
21ca4     00 C6 C6 D6 
21ca8     D6 FE FE EE | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $c6, $c6, $d6, $d6, $fe, $fe, $ee
21cac     C6 82 00 00 
21cb0     00 00 00 00 
21cb4     00 66 66 3C 
21cb8     3C 18 3C 3C | 	byte	$c6, $82, $00, $00, $00, $00, $00, $00, $00, $66, $66, $3c, $3c, $18, $3c, $3c
21cbc     66 66 00 00 
21cc0     00 00 00 00 
21cc4     00 66 66 66 
21cc8     66 66 66 7E | 	byte	$66, $66, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $7e
21ccc     7C 60 7E 3E 
21cd0     00 00 00 00 
21cd4     00 7E 7E 30 
21cd8     18 18 0C 0C | 	byte	$7c, $60, $7e, $3e, $00, $00, $00, $00, $00, $7e, $7e, $30, $18, $18, $0c, $0c
21cdc     7E 7E 00 00 
21ce0     00 00 30 18 
21ce4     18 18 18 0C 
21ce8     0C 18 18 18 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $18, $18, $18, $0c, $0c, $18, $18, $18
21cec     18 30 00 00 
21cf0     00 00 18 18 
21cf4     18 18 18 18 
21cf8     18 18 18 18 | 	byte	$18, $30, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
21cfc     18 18 00 00 
21d00     00 00 0C 18 
21d04     18 18 18 30 
21d08     30 18 18 18 | 	byte	$18, $18, $00, $00, $00, $00, $0c, $18, $18, $18, $18, $30, $30, $18, $18, $18
21d0c     18 0C 00 00 
21d10     00 00 6C 7E 
21d14     36 00 00 00 
21d18     00 00 00 00 | 	byte	$18, $0c, $00, $00, $00, $00, $6c, $7e, $36, $00, $00, $00, $00, $00, $00, $00
21d1c     00 00 00 00 
21d20     00 00 00 00 
21d24     00          | 	byte	$00[9]
21d25     18 18 18 18 
21d29     18 18 00 00 
21d2d     00 00 00    | 	byte	$18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
21d30     00 00 00 00 
21d34     00 FF FF FF | twocolors      long  $00000000,$FFFFFF00
21d38     00 00 00 00 
21d3c     00 80 80 80 
21d40     00 00 00 FF 
21d44     00 FF FF FF | fourcolors     long  $00000000,$80808000,$FF000000,$FFFFFF00 'black,red,gray,white
21d48     00 00 00 00 
21d4c     00          | vga16          long  $00000000,$00008000,$00800000,$00808000,$80000000,$80008000,$80400000,$AAAAAA00,$55555500,$0000FF00,$00FF0000,$00FFFF00,$FF000000,$FF00FF00,$FFFF0000,$FFFFFF00
21d4d     80 00 00 00 
21d51     00 80 00 00 
21d55     80 80 00 00 
21d59     00 00 80 00 | 	byte	$80, $00, $00, $00, $00, $80, $00, $00, $80, $80, $00, $00, $00, $00, $80, $00
21d5d     80 00 80 00 
21d61     00 40 80 00 
21d65     AA AA AA 00 
21d69     55 55 55 00 | 	byte	$80, $00, $80, $00, $00, $40, $80, $00, $aa, $aa, $aa, $00, $55, $55, $55, $00
21d6d     FF 00 00 00 
21d71     00 FF 00 00 
21d75     FF FF 00 00 
21d79     00 00 FF 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00
21d7d     FF 00 FF 00 
21d81     00 FF FF 00 
21d85     FF FF FF    | 	byte	$ff, $00, $ff, $00, $00, $ff, $ff, $00, $ff, $ff, $ff
21d88     00 00 00 00 
21d8c     00          | ataripalette   file "ataripalettep2.def"
21d8d     11 11 11 00 
21d91     22 22 22 00 
21d95     33 33 33 00 
21d99     44 44 44 00 | 	byte	$11, $11, $11, $00, $22, $22, $22, $00, $33, $33, $33, $00, $44, $44, $44, $00
21d9d     55 55 55 00 
21da1     66 66 66 00 
21da5     77 77 77 00 
21da9     88 88 88 00 | 	byte	$55, $55, $55, $00, $66, $66, $66, $00, $77, $77, $77, $00, $88, $88, $88, $00
21dad     99 99 99 00 
21db1     AA AA AA 00 
21db5     BB BB BB 00 
21db9     CC CC CC 00 | 	byte	$99, $99, $99, $00, $aa, $aa, $aa, $00, $bb, $bb, $bb, $00, $cc, $cc, $cc, $00
21dbd     DD DD DD 00 
21dc1     EE EE EE 00 
21dc5     FF FF FF 00 
21dc9     00 0A 20 00 | 	byte	$dd, $dd, $dd, $00, $ee, $ee, $ee, $00, $ff, $ff, $ff, $00, $00, $0a, $20, $00
21dcd     00 14 40 00 
21dd1     00 1E 60 00 
21dd5     00 28 80 00 
21dd9     00 32 9F 00 | 	byte	$00, $14, $40, $00, $00, $1e, $60, $00, $00, $28, $80, $00, $00, $32, $9f, $00
21ddd     00 3C BF 00 
21de1     00 46 DF 00 
21de5     00 50 FF 00 
21de9     1C 63 FF 00 | 	byte	$00, $3c, $bf, $00, $00, $46, $df, $00, $00, $50, $ff, $00, $1c, $63, $ff, $00
21ded     39 77 FF 00 
21df1     55 8A FF 00 
21df5     71 9E FF 00 
21df9     8E B1 FF 00 | 	byte	$39, $77, $ff, $00, $55, $8a, $ff, $00, $71, $9e, $ff, $00, $8e, $b1, $ff, $00
21dfd     AA C5 FF 00 
21e01     C6 D8 FF 00 
21e05     E3 EC FF 00 
21e09     00 00 20 00 | 	byte	$aa, $c5, $ff, $00, $c6, $d8, $ff, $00, $e3, $ec, $ff, $00, $00, $00, $20, $00
21e0d     00 00 40 00 
21e11     00 00 60 00 
21e15     00 00 80 00 
21e19     00 00 9F 00 | 	byte	$00, $00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00
21e1d     00 00 BF 00 
21e21     00 00 DF 00 
21e25     00 00 FF 00 
21e29     1C 1C FF 00 | 	byte	$00, $00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $1c, $1c, $ff, $00
21e2d     39 39 FF 00 
21e31     55 55 FF 00 
21e35     71 71 FF 00 
21e39     8E 8E FF 00 | 	byte	$39, $39, $ff, $00, $55, $55, $ff, $00, $71, $71, $ff, $00, $8e, $8e, $ff, $00
21e3d     AA AA FF 00 
21e41     C6 C6 FF 00 
21e45     E3 E3 FF 00 
21e49     10 00 20 00 | 	byte	$aa, $aa, $ff, $00, $c6, $c6, $ff, $00, $e3, $e3, $ff, $00, $10, $00, $20, $00
21e4d     20 00 40 00 
21e51     30 00 60 00 
21e55     40 00 80 00 
21e59     50 00 9F 00 | 	byte	$20, $00, $40, $00, $30, $00, $60, $00, $40, $00, $80, $00, $50, $00, $9f, $00
21e5d     60 00 BF 00 
21e61     70 00 DF 00 
21e65     80 00 FF 00 
21e69     8E 1C FF 00 | 	byte	$60, $00, $bf, $00, $70, $00, $df, $00, $80, $00, $ff, $00, $8e, $1c, $ff, $00
21e6d     9C 39 FF 00 
21e71     AA 55 FF 00 
21e75     B8 71 FF 00 
21e79     C7 8E FF 00 | 	byte	$9c, $39, $ff, $00, $aa, $55, $ff, $00, $b8, $71, $ff, $00, $c7, $8e, $ff, $00
21e7d     D5 AA FF 00 
21e81     E3 C6 FF 00 
21e85     F1 E3 FF 00 
21e89     20 00 20 00 | 	byte	$d5, $aa, $ff, $00, $e3, $c6, $ff, $00, $f1, $e3, $ff, $00, $20, $00, $20, $00
21e8d     40 00 40 00 
21e91     60 00 60 00 
21e95     80 00 80 00 
21e99     9F 00 9F 00 | 	byte	$40, $00, $40, $00, $60, $00, $60, $00, $80, $00, $80, $00, $9f, $00, $9f, $00
21e9d     BF 00 BF 00 
21ea1     DF 00 DF 00 
21ea5     FF 00 FF 00 
21ea9     FF 1C FF 00 | 	byte	$bf, $00, $bf, $00, $df, $00, $df, $00, $ff, $00, $ff, $00, $ff, $1c, $ff, $00
21ead     FF 39 FF 00 
21eb1     FF 55 FF 00 
21eb5     FF 71 FF 00 
21eb9     FF 8E FF 00 | 	byte	$ff, $39, $ff, $00, $ff, $55, $ff, $00, $ff, $71, $ff, $00, $ff, $8e, $ff, $00
21ebd     FF AA FF 00 
21ec1     FF C6 FF 00 
21ec5     FF E3 FF 00 
21ec9     20 00 10 00 | 	byte	$ff, $aa, $ff, $00, $ff, $c6, $ff, $00, $ff, $e3, $ff, $00, $20, $00, $10, $00
21ecd     40 00 20 00 
21ed1     60 00 30 00 
21ed5     80 00 40 00 
21ed9     9F 00 50 00 | 	byte	$40, $00, $20, $00, $60, $00, $30, $00, $80, $00, $40, $00, $9f, $00, $50, $00
21edd     BF 00 60 00 
21ee1     DF 00 70 00 
21ee5     FF 00 80 00 
21ee9     FF 1C 8E 00 | 	byte	$bf, $00, $60, $00, $df, $00, $70, $00, $ff, $00, $80, $00, $ff, $1c, $8e, $00
21eed     FF 39 9C 00 
21ef1     FF 55 AA 00 
21ef5     FF 71 B8 00 
21ef9     FF 8E C7 00 | 	byte	$ff, $39, $9c, $00, $ff, $55, $aa, $00, $ff, $71, $b8, $00, $ff, $8e, $c7, $00
21efd     FF AA D5 00 
21f01     FF C6 E3 00 
21f05     FF E3 F1 00 
21f09     20 00 00 00 | 	byte	$ff, $aa, $d5, $00, $ff, $c6, $e3, $00, $ff, $e3, $f1, $00, $20, $00, $00, $00
21f0d     40 00 00 00 
21f11     60 00 00 00 
21f15     80 00 00 00 
21f19     9F 00 00 00 | 	byte	$40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00, $00
21f1d     BF 00 00 00 
21f21     DF 00 00 00 
21f25     FF 00 00 00 
21f29     FF 1C 1C 00 | 	byte	$bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $00, $ff, $1c, $1c, $00
21f2d     FF 39 39 00 
21f31     FF 55 55 00 
21f35     FF 71 71 00 
21f39     FF 8E 8E 00 | 	byte	$ff, $39, $39, $00, $ff, $55, $55, $00, $ff, $71, $71, $00, $ff, $8e, $8e, $00
21f3d     FF AA AA 00 
21f41     FF C6 C6 00 
21f45     FF E3 E3 00 
21f49     20 08 00 00 | 	byte	$ff, $aa, $aa, $00, $ff, $c6, $c6, $00, $ff, $e3, $e3, $00, $20, $08, $00, $00
21f4d     40 10 00 00 
21f51     60 18 00 00 
21f55     80 20 00 00 
21f59     9F 28 00 00 | 	byte	$40, $10, $00, $00, $60, $18, $00, $00, $80, $20, $00, $00, $9f, $28, $00, $00
21f5d     BF 30 00 00 
21f61     DF 38 00 00 
21f65     FF 40 00 00 
21f69     FF 55 1C 00 | 	byte	$bf, $30, $00, $00, $df, $38, $00, $00, $ff, $40, $00, $00, $ff, $55, $1c, $00
21f6d     FF 6A 39 00 
21f71     FF 80 55 00 
21f75     FF 95 71 00 
21f79     FF AA 8E 00 | 	byte	$ff, $6a, $39, $00, $ff, $80, $55, $00, $ff, $95, $71, $00, $ff, $aa, $8e, $00
21f7d     FF BF AA 00 
21f81     FF D5 C6 00 
21f85     FF EA E3 00 
21f89     20 10 00 00 | 	byte	$ff, $bf, $aa, $00, $ff, $d5, $c6, $00, $ff, $ea, $e3, $00, $20, $10, $00, $00
21f8d     40 20 00 00 
21f91     60 30 00 00 
21f95     80 40 00 00 
21f99     9F 50 00 00 | 	byte	$40, $20, $00, $00, $60, $30, $00, $00, $80, $40, $00, $00, $9f, $50, $00, $00
21f9d     BF 60 00 00 
21fa1     DF 70 00 00 
21fa5     FF 80 00 00 
21fa9     FF 8E 1C 00 | 	byte	$bf, $60, $00, $00, $df, $70, $00, $00, $ff, $80, $00, $00, $ff, $8e, $1c, $00
21fad     FF 9C 39 00 
21fb1     FF AA 55 00 
21fb5     FF B8 71 00 
21fb9     FF C7 8E 00 | 	byte	$ff, $9c, $39, $00, $ff, $aa, $55, $00, $ff, $b8, $71, $00, $ff, $c7, $8e, $00
21fbd     FF D5 AA 00 
21fc1     FF E3 C6 00 
21fc5     FF F1 E3 00 
21fc9     20 18 00 00 | 	byte	$ff, $d5, $aa, $00, $ff, $e3, $c6, $00, $ff, $f1, $e3, $00, $20, $18, $00, $00
21fcd     40 30 00 00 
21fd1     60 48 00 00 
21fd5     80 60 00 00 
21fd9     9F 78 00 00 | 	byte	$40, $30, $00, $00, $60, $48, $00, $00, $80, $60, $00, $00, $9f, $78, $00, $00
21fdd     BF 90 00 00 
21fe1     DF A8 00 00 
21fe5     FF C0 00 00 
21fe9     FF C7 1C 00 | 	byte	$bf, $90, $00, $00, $df, $a8, $00, $00, $ff, $c0, $00, $00, $ff, $c7, $1c, $00
21fed     FF CE 39 00 
21ff1     FF D5 55 00 
21ff5     FF DC 71 00 
21ff9     FF E3 8E 00 | 	byte	$ff, $ce, $39, $00, $ff, $d5, $55, $00, $ff, $dc, $71, $00, $ff, $e3, $8e, $00
21ffd     FF EA AA 00 
22001     FF F1 C6 00 
22005     FF F8 E3 00 
22009     18 20 00 00 | 	byte	$ff, $ea, $aa, $00, $ff, $f1, $c6, $00, $ff, $f8, $e3, $00, $18, $20, $00, $00
2200d     30 40 00 00 
22011     48 60 00 00 
22015     60 80 00 00 
22019     78 9F 00 00 | 	byte	$30, $40, $00, $00, $48, $60, $00, $00, $60, $80, $00, $00, $78, $9f, $00, $00
2201d     90 BF 00 00 
22021     A8 DF 00 00 
22025     C0 FF 00 00 
22029     C7 FF 1C 00 | 	byte	$90, $bf, $00, $00, $a8, $df, $00, $00, $c0, $ff, $00, $00, $c7, $ff, $1c, $00
2202d     CE FF 39 00 
22031     D5 FF 55 00 
22035     DC FF 71 00 
22039     E3 FF 8E 00 | 	byte	$ce, $ff, $39, $00, $d5, $ff, $55, $00, $dc, $ff, $71, $00, $e3, $ff, $8e, $00
2203d     EA FF AA 00 
22041     F1 FF C6 00 
22045     F8 FF E3 00 
22049     00 20 00 00 | 	byte	$ea, $ff, $aa, $00, $f1, $ff, $c6, $00, $f8, $ff, $e3, $00, $00, $20, $00, $00
2204d     00 40 00 00 
22051     00 60 00 00 
22055     00 80 00 00 
22059     00 9F 00 00 | 	byte	$00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00
2205d     00 BF 00 00 
22061     00 DF 00 00 
22065     00 FF 00 00 
22069     1C FF 1C 00 | 	byte	$00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $1c, $ff, $1c, $00
2206d     39 FF 39 00 
22071     55 FF 55 00 
22075     71 FF 71 00 
22079     8E FF 8E 00 | 	byte	$39, $ff, $39, $00, $55, $ff, $55, $00, $71, $ff, $71, $00, $8e, $ff, $8e, $00
2207d     AA FF AA 00 
22081     C6 FF C6 00 
22085     E3 FF E3 00 
22089     00 20 0A 00 | 	byte	$aa, $ff, $aa, $00, $c6, $ff, $c6, $00, $e3, $ff, $e3, $00, $00, $20, $0a, $00
2208d     00 40 14 00 
22091     00 60 1E 00 
22095     00 80 28 00 
22099     00 9F 32 00 | 	byte	$00, $40, $14, $00, $00, $60, $1e, $00, $00, $80, $28, $00, $00, $9f, $32, $00
2209d     00 BF 3C 00 
220a1     00 DF 46 00 
220a5     00 FF 50 00 
220a9     1C FF 63 00 | 	byte	$00, $bf, $3c, $00, $00, $df, $46, $00, $00, $ff, $50, $00, $1c, $ff, $63, $00
220ad     39 FF 77 00 
220b1     55 FF 8A 00 
220b5     71 FF 9E 00 
220b9     8E FF B1 00 | 	byte	$39, $ff, $77, $00, $55, $ff, $8a, $00, $71, $ff, $9e, $00, $8e, $ff, $b1, $00
220bd     AA FF C5 00 
220c1     C6 FF D8 00 
220c5     E3 FF EC 00 
220c9     00 20 14 00 | 	byte	$aa, $ff, $c5, $00, $c6, $ff, $d8, $00, $e3, $ff, $ec, $00, $00, $20, $14, $00
220cd     00 40 28 00 
220d1     00 60 3C 00 
220d5     00 80 50 00 
220d9     00 9F 64 00 | 	byte	$00, $40, $28, $00, $00, $60, $3c, $00, $00, $80, $50, $00, $00, $9f, $64, $00
220dd     00 BF 78 00 
220e1     00 DF 8C 00 
220e5     00 FF A0 00 
220e9     1C FF AB 00 | 	byte	$00, $bf, $78, $00, $00, $df, $8c, $00, $00, $ff, $a0, $00, $1c, $ff, $ab, $00
220ed     39 FF B5 00 
220f1     55 FF C0 00 
220f5     71 FF CA 00 
220f9     8E FF D5 00 | 	byte	$39, $ff, $b5, $00, $55, $ff, $c0, $00, $71, $ff, $ca, $00, $8e, $ff, $d5, $00
220fd     AA FF DF 00 
22101     C6 FF EA 00 
22105     E3 FF F4 00 
22109     00 20 20 00 | 	byte	$aa, $ff, $df, $00, $c6, $ff, $ea, $00, $e3, $ff, $f4, $00, $00, $20, $20, $00
2210d     00 40 40 00 
22111     00 60 60 00 
22115     00 80 80 00 
22119     00 9F 9F 00 | 	byte	$00, $40, $40, $00, $00, $60, $60, $00, $00, $80, $80, $00, $00, $9f, $9f, $00
2211d     00 BF BF 00 
22121     00 DF DF 00 
22125     00 FF FF 00 
22129     1C FF FF 00 | 	byte	$00, $bf, $bf, $00, $00, $df, $df, $00, $00, $ff, $ff, $00, $1c, $ff, $ff, $00
2212d     39 FF FF 00 
22131     55 FF FF 00 
22135     71 FF FF 00 
22139     8E FF FF 00 | 	byte	$39, $ff, $ff, $00, $55, $ff, $ff, $00, $71, $ff, $ff, $00, $8e, $ff, $ff, $00
2213d     AA FF FF 00 
22141     C6 FF FF 00 
22145     E3 FF FF 00 
22149     00 14 20 00 | 	byte	$aa, $ff, $ff, $00, $c6, $ff, $ff, $00, $e3, $ff, $ff, $00, $00, $14, $20, $00
2214d     00 28 40 00 
22151     00 3C 60 00 
22155     00 50 80 00 
22159     00 64 9F 00 | 	byte	$00, $28, $40, $00, $00, $3c, $60, $00, $00, $50, $80, $00, $00, $64, $9f, $00
2215d     00 78 BF 00 
22161     00 8C DF 00 
22165     00 A0 FF 00 
22169     1C AB FF 00 | 	byte	$00, $78, $bf, $00, $00, $8c, $df, $00, $00, $a0, $ff, $00, $1c, $ab, $ff, $00
2216d     39 B5 FF 00 
22171     55 C0 FF 00 
22175     71 CA FF 00 
22179     8E D5 FF 00 | 	byte	$39, $b5, $ff, $00, $55, $c0, $ff, $00, $71, $ca, $ff, $00, $8e, $d5, $ff, $00
2217d     AA DF FF 00 
22181     C6 EA FF 00 
22185     E3 F4 FF    | 	byte	$aa, $df, $ff, $00, $c6, $ea, $ff, $00, $e3, $f4, $ff
22188                 | '**********************************************************************************
22188                 | '
22188                 | '        Timings and colors definitions
22188                 | '
22188                 | '**********************************************************************************
22188                 | 
22188                 |    'streamer sets for text mode, to add to timings[0..5]
22188                 | ' todo for the retromachine: 768x576
22188                 | 
22188                 | '                     bf.hs, hs,  bf.vis  visible, lr bord, pixel, ud bord,  up p., vsync, down p., mode, cpl, scanlines,  clock,                  hubset                  total vis lines
22188     10 00 00 00 
2218c     50 00 00 00 
22190     14 00 00 00 
22194     00 04 00 00 | timings000      long   16,   80,    20,    1024,    112,     8,     48,      16,      16,    16,      0,  100,   480,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
22198     70 00 00 00 
2219c     08 00 00 00 
221a0     30 00 00 00 
221a4     10 00 00 00 | 	byte	$70, $00, $00, $00, $08, $00, $00, $00, $30, $00, $00, $00, $10, $00, $00, $00
221a8     10 00 00 00 
221ac     10 00 00 00 
221b0     00 00 00 00 
221b4     64 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $00, $00, $00, $00, $64, $00, $00, $00
221b8     E0 01 00 00 
221bc     F6 32 24 15 
221c0     FB 6C C3 01 
221c4     40 02 00 00 | 	byte	$e0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
221c8                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   544'
221c8                 | 'timings064      long   8,   50,    8 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   540
221c8     30 00 00 00 
221cc     50 00 00 00 
221d0     34 00 00 00 
221d4     C0 03 00 00 | timings064      long   48,   80,    52 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     354693878,   %1_110000__11_0110_1100__1111_1011,   540
221d8     20 00 00 00 
221dc     08 00 00 00 
221e0     16 00 00 00 
221e4     18 00 00 00 | 	byte	$20, $00, $00, $00, $08, $00, $00, $00, $16, $00, $00, $00, $18, $00, $00, $00
221e8     24 00 00 00 
221ec     18 00 00 00 
221f0     40 00 00 00 
221f4     70 00 00 00 | 	byte	$24, $00, $00, $00, $18, $00, $00, $00, $40, $00, $00, $00, $70, $00, $00, $00
221f8     F0 01 00 00 
221fc     F6 32 24 15 
22200     FB 6C C3 01 
22204     1C 02 00 00 | 	byte	$f0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $1c, $02, $00, $00
22208                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     320000000,   %1_0000_00__00_0000_1111__1111_1011,   544
22208     10 00 00 00 
2220c     40 00 00 00 
22210     10 00 00 00 
22214     30 03 00 00 | timings128      long   16,   64,    16,     816,      8,     8,     8,       32,      64,    32,    128,  100,   480,     283750000,   %1_111111__11_1000_1011__1111_1011,   496
22218     08 00 00 00 
2221c     08 00 00 00 
22220     08 00 00 00 
22224     20 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $20, $00, $00, $00
22228     40 00 00 00 
2222c     20 00 00 00 
22230     80 00 00 00 
22234     64 00 00 00 | 	byte	$40, $00, $00, $00, $20, $00, $00, $00, $80, $00, $00, $00, $64, $00, $00, $00
22238     E0 01 00 00 
2223c     70 AE E9 10 
22240     FB 8B FF 01 
22244     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $70, $ae, $e9, $10, $fb, $8b, $ff, $01, $f0, $01, $00, $00
22248     10 00 00 00 
2224c     42 00 00 00 
22250     14 00 00 00 
22254     00 04 00 00 | timings192      long   16,   66,    20,    1024,      0,     8,     0,       16,      16,    16,    192,  128,   576,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
22258     00 00 00 00 
2225c     08 00 00 00 
22260     00 00 00 00 
22264     10 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $10, $00, $00, $00
22268     10 00 00 00 
2226c     10 00 00 00 
22270     C0 00 00 00 
22274     80 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $c0, $00, $00, $00, $80, $00, $00, $00
22278     40 02 00 00 
2227c     F6 32 24 15 
22280     FB 6C C3 01 
22284     40 02 00 00 | 	byte	$40, $02, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
22288     50 00 00 00 
2228c     A0 00 00 00 
22290     54 00 00 00 
22294     30 03 00 00 | timings256      long   80,  160,    84,     816,      8,     8,     8,        8,      12,     8,    256,  100,   480,     357959184,   %1_110000__11_0110_0100__1111_1011,   496
22298     08 00 00 00 
2229c     08 00 00 00 
222a0     08 00 00 00 
222a4     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
222a8     0C 00 00 00 
222ac     08 00 00 00 
222b0     00 01 00 00 
222b4     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $00, $01, $00, $00, $64, $00, $00, $00
222b8     E0 01 00 00 
222bc     10 06 56 15 
222c0     FB 64 C3 01 
222c4     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $10, $06, $56, $15, $fb, $64, $c3, $01, $f0, $01, $00, $00
222c8     50 00 00 00 
222cc     32 00 00 00 
222d0     50 00 00 00 
222d4     30 03 00 00 | timings320      long   80,   50,    80,     816,      8,     8,     8,        8,      12,     8,    320,  100,   480,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
222d8     08 00 00 00 
222dc     08 00 00 00 
222e0     08 00 00 00 
222e4     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
222e8     0C 00 00 00 
222ec     08 00 00 00 
222f0     40 01 00 00 
222f4     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $40, $01, $00, $00, $64, $00, $00, $00
222f8     E0 01 00 00 
222fc     F2 CD 33 13 
22300     FB 53 92 01 
22304     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
22308     18 00 00 00 
2230c     30 00 00 00 
22310     18 00 00 00 
22314     30 03 00 00 | timings384      long   24,   48,    24,     816,      8,     8,     8,        8,      12,     8,    384,  100,   480,     286363636,   %1_010101__01_0011_1010__1111_1011,   496
22318     08 00 00 00 
2231c     08 00 00 00 
22320     08 00 00 00 
22324     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
22328     0C 00 00 00 
2232c     08 00 00 00 
22330     80 01 00 00 
22334     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $80, $01, $00, $00, $64, $00, $00, $00
22338     E0 01 00 00 
2233c     F4 8F 11 11 
22340     FB 3A 55 01 
22344     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f4, $8f, $11, $11, $fb, $3a, $55, $01, $f0, $01, $00, $00
22348     20 00 00 00 
2234c     40 00 00 00 
22350     22 00 00 00 
22354     80 03 00 00 | timings448      long   32,   64,    34,     896,      0,     8,     0,        8,      12,     8,    448,  112,   496,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
22358     00 00 00 00 
2235c     08 00 00 00 
22360     00 00 00 00 
22364     08 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $08, $00, $00, $00
22368     0C 00 00 00 
2236c     08 00 00 00 
22370     C0 01 00 00 
22374     70 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $c0, $01, $00, $00, $70, $00, $00, $00
22378     F0 01 00 00 
2237c     F2 CD 33 13 
22380     FB 53 92 01 
22384     F0 01 00 00 | 	byte	$f0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
22388                 | 'timings999      long    0,    0,     0,       0,      0,     0,     0,        0,       0,     0,      0,    0,     0,             0,                                    0,     0
22388     00 75 C7 97 
2238c     27 47 F6 0A 
22390     05 79 CB 9B 
22394     2B 4B EA 0F | vgacolors       byte   0, 117, 199, 151, 39, 71, 246, 10, 5, 121, 203, 155, 43, 75, 234, 15
22398                 | 
22398     28 12 64 FD | hdmi            setq    #9
2239c     00 DF 06 FB |                 rdlong  framebuf,  ptra                  'read pointers
223a0                 |            '     setq2   #255
223a0                 |             '    rdlong  $100, paletteptr 
223a0     00 26 6F FC |                 wrlong  #aend,#0                         'write driver length to hub#0: DEBUG/demo
223a4     3C 00 66 FD |                 setcmod #$100                            'enable HDMI mode
223a8     C0 F9 06 F6 |                 mov     ii,#448                          '7 << 6          
223ac     78 F9 02 F1 |                 add     ii,hbase
223b0     58 F8 62 FD |                 drvl    ii                                 '#7<<6 + hdmi_base      ' enable HDMI pins
223b4     7B 0B 80 FF 
223b8     7C 01 0B FC |                 wrpin   ##%10110_1111_0111_10_00000_0, ii  '#7<<6 + hdmi_base      ' a '123 ohm BITDAC for pins
223bc                 | 
223bc     66 66 86 FF 
223c0     1D 9A 65 FD |                 setxfrq ##$0CCCCCCC+1                   'set streamer freq to 1/10th clk
223c4                 | 
223c4                 | 
223c4                 | ''--------  frame rendering main loop  ---------------------------------------------------
223c4                 | 
223c4                 | p101
223c4     28 14 64 FD |                 setq    #10
223c8     00 DF 06 FB |                 rdlong  framebuf,  ptra
223cc     28 1E 64 FD |                 setq    #15
223d0     74 9B 02 FB |                 rdlong  m_bs,modeptr                     ' read timings
223d4     71 99 02 FB |                 rdlong  border,borderptr
223d8                 | 
223d8     01 C4 06 F1 |                 add     frames,#1
223dc     76 F5 02 F6 |                 mov     dlptr2,dlptr
223e0                 | 
223e0     73 C7 02 FB |                 rdlong  cursorx, cursorptr               ' read cursor position
223e4     63 C9 EA F8 |                 getbyte cursory, cursorx,#1              ' y position at byte #1
223e8     63 C3 F2 F8 |                 getbyte cursorsh,cursorx,#2              ' shape at byte #2
223ec     FF C6 06 F5 |                 and     cursorx,#255                     ' clear the cursor x varioble from y and shape
223f0                 |  '' up porch
223f0                 | 
223f0     48 FD 02 F6 |                 mov     hsync0,sync_000                  '
223f4     49 FF 02 F6 |                 mov     hsync1,sync_001
223f8     37 A8 46 FB |                 callpa  i_upporch ,#blank
223fc     72 01 68 FC |                 wrlong  #0,vblankptr
22400                 |                 
22400     1F EA 16 F4 |                 testb   paletteptr,#31 wc
22404     29 FE 65 3D |          if_nc  setq2   #255
22408     75 01 00 3B |          if_nc  rdlong  $000, paletteptr                'read palette
2240c                 | 
2240c                 | '' cursor blinking
2240c                 | 
2240c     04 C4 0E F4 |                 testb   frames,#4 wz                     ' cursor blinks at framerate/16, todo: define
22410     81 C6 06 A6 |          if_z   mov     cursorx,#129                     ' to switch the cursor off, move it out of the screen
22414                 | 
22414                 | '' main screen
22414                 | 
22414     00 BE 06 F6 |                 mov linenum,#0
22418     00 18 07 F6 |                 mov rcnt,#0
2241c     00 1C 07 F6 |                 mov rcnt2a,#0
22420                 | 
22420                 | 
22420     00 18 0F F2 | p301            cmp rcnt,#0 wz
22424     18 00 90 AD |         if_z    jmp #p306
22428     01 18 87 F1 |                 sub rcnt,#1
2242c     90 F7 02 F6 |                 mov dl,rdl
22430     8D 1D 0B F7 |                incmod rcnt2a,rcnt2 wz
22434     8F F7 02 A1 |    if_z        add dl,roffset  
22438     7B 21 03 F6 |                 mov rdl,dl
2243c     04 00 90 FD |                 jmp #p307          
22440                 |           
22440                 |                 
22440     7A F7 02 FB | p306            rdlong  dl,dlptr2
22444     7B FB 1A F6 | p307            mov     framebuf2,dl wcz                  'read a line start in the framebuffer from DL entry
22448     6A FA 7A FD |                 rczr    framebuf2 wcz                     'but only if not %11 at lowest bits which means special DL entry
2244c     34 00 90 7D |    if_nz_or_nc  jmp     #p303                        
22450                 | 
22450                 | '' Special entry:
22450                 | '' - repeat                 %nnnn_nnnn_nnnn_qqqq_mmmm_mmmm_mmmm_0111    repeat the next dl line n times, after q lines add offset m
22450                 | '' - reload palette         %mmmm_mmmm_nnnn_nnnn_qqqq_qqqq_qqqq_1011    reload n palette entries from m color from palette_ptr+q
22450                 | '' - set border color       %rrrr_rrrr_gggg_gggg_bbbb_bbbb_0001_0011    set border to rgb
22450                 | '' - set border color       %0000_0000_0000_0000_pppp_pppp_0001_1011    set border color to palette entry #p
22450                 | '' todo: set horizontal scroll (if needed)
22450                 | 
22450     02 FA 66 F0 |                 shl framebuf2,#2
22454     7D 23 43 F8 |                 getnib dlc,framebuf2,#0
22458     04 22 0F F2 |                 cmp dlc,#%100 wz
2245c                 |   
2245c                 |                 
2245c     04 F4 06 F1 |                 add dlptr2,#4
22460     BC FF 9F 5D |                              if_nz  jmp #p301  '' now ignore unknown instruction 
22464     7A 21 03 FB |                  rdlong rdl,dlptr2
22468     7D 19 3B F9 |                  getword rcnt,framebuf2,#1 
2246c     04 18 47 F0 |                  shr rcnt,#4
22470                 |              
22470     7D 1B 63 F8 |                  getnib rcnt2,framebuf2,#4
22474     7D 1F 33 F9 |                  getword roffset,framebuf2,#0
22478                 |                 
22478     04 1E 47 F0 |                  shr roffset,#4
2247c     0C 1E 67 F0 |                  shl roffset,#12
22480                 |   
22480     9C FF 9F FD |                  jmp #p301
22484                 |                  
22484                 |                  
22484                 | p303           ' mov     framebuf2,dl                    ' read a line start in the framebuffer from DL entry
22484     0C FA 46 F0 |                 shr     framebuf2,#12
22488     02 FA 66 F0 |                 shl     framebuf2,#2
2248c                 | 
2248c     7B 03 E3 F8 |                 getbyte t1,dl,#0
22490     00 02 0F F2 |                 cmp     t1,#0 wz
22494     34 00 90 AD |     if_z        jmp     #borderline
22498                 | 
22498     00 F6 16 F4 |                  testb   dl,#0  wc     ' bit 0 set = text OR extended:TODO
2249c     50 00 90 CD |           if_c   jmp     #textline
224a0     50 02 90 3D |           if_nc  jmp     #graphline
224a4                 | '
224a4     01 BE 06 F1 | p302            add     linenum,#1
224a8     04 F4 06 F1 |                 add     dlptr2,#4
224ac     5C BF 0A F2 |                 cmp     linenum,i_totalvis  wz
224b0     6C FF 9F 5D |          if_nz  jmp     #p301
224b4                 | 
224b4     72 03 68 FC | p112            wrlong  #1,vblankptr
224b8     07 AC 46 FB |                 callpa  i_downporch ,#blank             'bottom blanks
224bc                 | 
224bc     4A FD 02 F6 |                 mov     hsync0,sync_222                 'vsync on
224c0     4B FF 02 F6 |                 mov     hsync1,sync_223
224c4     04 AA 46 FB |                 callpa  i_vsync,#blank                  'vertical sync blanks
224c8     F8 FE 9F FD |                 jmp     #p101
224cc                 | 
224cc                 | '' ---------------  END of frame rendering loop -------------------------------------------
224cc                 | 
224cc                 | 
224cc     14 00 B0 FD | borderline      call    #hsync                      ' make a border
224d0     4C A1 C2 FC |                 xcont   m_vi,border
224d4     CC FF 9F FD |                 jmp     #p302
224d8                 | 
224d8                 | 
224d8     08 00 B0 FD | blank           call    #hsync                          'blank lines
224dc     7E A1 C2 FC |                 xcont   m_vi,hsync0
224e0     FD ED 6F 0B |         _ret_   djnz    pa,#blank
224e4                 | 
224e4     7E 9B C2 FC | hsync           xcont   m_bs,hsync0                     'horizontal sync
224e8     7F 9D B2 FC |                 xzero   m_sn,hsync1
224ec     7E 9F C2 0C |         _ret_   xcont   m_bv,hsync0
224f0                 | 
224f0                 | 
224f0                 | 
224f0                 | ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
224f0                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
224f0                 |   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
224f0                 | 
224f0                 | '' Display a text line DL[31..12]=addr, nibble #1=textline, zoom: todo
224f0                 | 
224f0     63 CD 02 F6 | textline        mov     cursorpos2,cursorx              ' we need another var for cursor as this code will repeat 16x for every char line
224f4                 | 
224f4     7B 01 53 F8 |                 getnib  fontline,dl,#2                 ' fontline is 0 to 15, a line in font def
224f8     7B 17 5B F8 |                 getnib  zoom, dl,#3
224fc     03 16 07 F5 |                 and             zoom, #3
22500                 | 
22500                 | 
22500                 | 
22500     7B BD 02 F6 |                 mov     linestart,dl                    ' linestart will be used for checking cursor y and compute line start addr in the buffer
22504     02 BC 46 F0 |                 shr     linestart,#2                    ' scanline to char line
22508     3F BC 06 F5 |                 and     linestart,#63
2250c     64 BD 0A F2 |                 cmp     linestart,cursory wz            ' if the cursor is not here
22510     81 CC 06 56 |           if_nz mov     cursorpos2,#129                 ' move it out of the screen
22514                 | 
22514     CC FF BF FD |                 call    #hsync                          ' now call hsync to gain some time between xconts
22518                 | 
22518                 |                        ' if fontline =0, get a border color
22518                 | 
22518     51 03 33 F9 | p102            getword t1,m_border,#0
2251c     00 02 0F F2 |                 cmp     t1, #0 wz
22520     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
22524                 | 
22524     61 01 1B F2 |                 cmp     fontline,cursorsh wcz           ' if the cursor have to be not displayed due to its shape
22528     81 CA 06 C6 |           if_c  mov     cursorpos,#129                  ' move it out of the screen
2252c     66 CB 02 36 |          if_nc  mov     cursorpos,cursorpos2
22530     01 CA 06 F1 |                 add     cursorpos,#1                    ' we will substract #1 below so compensate this here
22534     70 05 03 F6 |                 mov     t2,fontbuf                      ' font definition pointer
22538     80 05 03 F1 |                 add     t2,fontline                     ' add a current font line
2253c     52 BB 02 F6 |                 mov m_lut2, m_lut1
22540     6A BB 02 F1 |                 add m_lut2, lutt1
22544     58 0F 03 F6 |                 mov cpl2,i_cpl
22548                 | 
22548     02 16 0F F2 |                cmp zoom,#2 wz
2254c     E4 00 90 AD |           if_z jmp #p420
22550     01 16 0F F2 |                cmp zoom,#1 wz
22554     64 00 90 AD |           if_z jmp #p410
22558     00 16 0F F2 |                 cmp zoom,#0 wz
2255c     04 00 90 AD |           if_z jmp #p400
22560     50 01 90 FD |                jmp #p430
22564                 | 
22564                 |                    '
22564                 |  ''---------------------------------------------------------------------------------------------------------
22564     7D 11 03 FB |  p400                   rdlong  char,framebuf2          ' read a long char                          '1
22568     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
2256c     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
22570     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
22574     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
22578     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
2257c     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
22580     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
22584     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
22588     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
2258c                 | 
2258c     81 BB C2 FC |                         xcont m_lut2,t1
22590                 | 
22590     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
22594     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
22598     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2259c     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
225a0     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
225a4     01 C0 86 F1 |                         sub     lutaddr,#1
225a8                 | 
225a8     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
225ac     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
225b0     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
225b4                 | 
225b4     EB 0F 6F FB |                         djnz   cpl2,#p400
225b8     28 01 90 FD |  p401                   jmp    #p103
225bc                 | 
225bc                 | ''------------------------------------------------------------------------------------------------------------
225bc                 | 
225bc     01 0E 47 F0 |  p410                   shr cpl2,#1
225c0                 | 
225c0                 | ''---------------------------------------------------------------------------------------------------------
225c0     7D 11 03 FB |  p412                   rdlong  char,framebuf2          ' read a long char                          '1
225c4     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
225c8     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
225cc     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
225d0     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
225d4     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
225d8     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
225dc     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
225e0     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
225e4     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
225e8                 | 
225e8                 | 
225e8     81 07 4B F8 |                         getnib t3,t1,#1                   ' 4 pixels to t3                                              '1  - +
225ec     81 03 43 F8 |                         getnib t1,t1,#0                   ' 4 pixels to t1                                                      '2  - +
225f0     63 02 63 FD |                         mergew t1                         ' make 01010101 from 1111                                     '3  - +
225f4     03 02 07 FA |                         mul t1,#3
225f8     81 BB C2 FC |                         xcont m_lut2,t1
225fc     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
22600     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
22604     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
22608     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2260c     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
22610     01 C0 86 F1 |                         sub     lutaddr,#1
22614     63 06 63 FD |                         mergew t3
22618     03 06 07 FA |                         mul t3,#3
2261c     83 BB C2 FC |                         xcont m_lut2,t3
22620                 | 
22620     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
22624     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
22628                 | 
22628     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2262c                 | 
2262c     E4 0F 6F FB |                         djnz   cpl2,#p412
22630     B0 00 90 FD |  p411                   jmp    #p103
22634                 | 
22634                 | ''------------------------------------------------------------------------------------------------------------
22634                 | 
22634     02 0E 47 F0 |  p420                   shr cpl2,#2
22638                 | 
22638                 | ''---------------------------------------------------------------------------------------
22638     7D 11 03 FB |  p422                   rdlong  char,framebuf2          ' read a long char                          '1
2263c     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
22640     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
22644     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
22648     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2264c     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
22650     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
22654     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
22658     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2265c     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
22660                 | 
22660     61 02 63 FD |                         mergeb t1
22664     81 07 3B F9 |                         getword t3,t1,#1
22668     0F 02 07 FA |                         mul t1,#15
2266c     81 BB C2 FC |                         xcont m_lut2,t1
22670                 | 
22670     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
22674     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
22678     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
2267c     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
22680     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
22684     01 C0 86 F1 |                         sub     lutaddr,#1
22688                 | 
22688     81 09 EB F8 |                         getbyte t4,t1,#1        '
2268c     84 BB C2 FC |                         xcont m_lut2,t4                                                                                                           '
22690                 | 
22690     0F 06 07 FA |                         mul t3,#15
22694     83 BB C2 FC |                         xcont m_lut2,t3
22698                 | 
22698     83 0B EB F8 |                         getbyte t5,t3,#1
2269c     85 BB C2 FC |                         xcont m_lut2, t5
226a0     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
226a4     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
226a8                 | 
226a8     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
226ac                 | 
226ac     E2 0F 6F FB |                         djnz   cpl2,#p422
226b0     30 00 90 FD |  p421                   jmp    #p103
226b4                 | 
226b4                 | '--------------------------------------------------------------------------------------------------------------
226b4                 | 
226b4     7D 11 03 FB |  p430                   rdlong  char,framebuf2          ' read a long char                          '1
226b8     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
226bc     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
226c0                 | 
226c0     00 BA C6 FC |                         xcont m_lut2,#0
226c4                 | 
226c4     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
226c8     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
226cc     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
226d0     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
226d4     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
226d8     01 C0 86 F1 |                         sub     lutaddr,#1
226dc                 | 
226dc     F5 0F 6F FB |                         djnz   cpl2,#p430
226e0     00 00 90 FD |  p431                   jmp    #p103
226e4                 | 
226e4                 | ''------------------------------------------------------------------------------------------------------------
226e4                 | 
226e4                 | 
226e4                 | 
226e4     51 25 33 F9 | p103            getword  mb2,m_border,#0
226e8     00 24 0F F2 |                 cmp      mb2, #0 wz
226ec     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
226f0                 | 
226f0     B0 FD 9F FD |                 jmp #p302
226f4                 | 
226f4                 | '' -------------------------------------- END of text line ---------------------------------
226f4                 | 
226f4                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph - display a graphics line
226f4                 | 
226f4     EC FD BF FD | graphline       call    #hsync                          ' now call hsync to gain some time between xconts
226f8                 | 
226f8                 | 
226f8     51 25 33 F9 | p202            getword mb2,m_border,#0
226fc     00 24 0F F2 |                 cmp     mb2, #0 wz
22700     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
22704                 | 
22704                 | '----------------------------------------- display pixels
22704                 | 
22704     52 BB 02 F6 |                 mov     m_lut2,m_lut1                   ' m_lut1 loaded from hub timing block, pixel per long
22708     58 0F 03 F6 |                 mov     cpl2,i_cpl                      ' i_cpl in graphic modes is longs per line
2270c                 | 
2270c     7B 17 5B F8 |                 getnib  zoom, dl,#3
22710     03 16 07 F5 |                 and             zoom, #3                        ' get a horizontal zoom for the line
22714                 | 
22714     7B BD 02 F6 |                 mov     colordepth,dl                   ' get a color depth, reuse linestart var f         '
22718     0C BC 06 F5 |                 and     colordepth,#12
2271c                 | 
2271c     00 BC 0E F2 |                 cmp     colordepth,#%0000 wz            ' 1 bpp modes
22720     6B BB 02 A1 |           if_z  add     m_lut2,lutg1
22724     64 00 90 AD |           if_z  jmp     #p240
22728                 | 
22728     04 BC 0E F2 |                 cmp     colordepth,#%0100 wz            ' 2 bpp modes
2272c     6C BB 02 A1 |           if_z  add     m_lut2,lutg2
22730     98 00 90 AD |           if_z  jmp     #p250
22734                 | 
22734     08 BC 0E F2 |                 cmp     colordepth,#%1000 wz            ' 4 bpp modes
22738     6D BB 02 A1 |           if_z  add     m_lut2,lutg4
2273c     FC 00 90 AD |           if_z  jmp     #p260
22740                 | 
22740     6E BB 02 F1 |                 add m_lut2,lutg8                        ' 8 bpp modes
22744                 | 
22744                 | '' --- 8 bit color modes
22744                 | 
22744     00 16 0F F2 |                 cmp zoom, #%00 wz   '256 colors, zoom x1
22748     50 01 90 AD |                 if_z jmp #p251      'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
2274c                 | 
2274c     01 16 0F F2 |                 cmp zoom, #%01 wz   '256 colors, zoom x2
22750     2A 0C 07 A6 |                 if_z mov skippattern,#%101010
22754                 |        
22754                 |  '  
22754     02 16 0F F2 |                 cmp zoom, #%10 wz   '256 colors, zoom x4
22758     25 0C 07 A6 |                 if_z mov skippattern,#%100101
2275c                 |     
2275c                 |  
2275c     05 0C 07 56 |                 if_nz mov skippattern,#%000101
22760     01 0E 47 50 |                 if_nz shr cpl2,#1         ' if 8x zoom, 2 xconts used in one loop, so divide loop count by 2
22764                 |         
22764                 | 
22764                 |         
22764     7D 11 03 FB | p235               rdlong  char,framebuf2
22768     32 0C 63 FD |                    skipf skippattern
2276c     02 FA 06 F1 |                    add     framebuf2,#2             '0 1 1
22770     01 FA 06 F1 |                    add     framebuf2,#1             '1 0 0
22774     50 10 FF F9 |                    movbyts char,#%01010000          '0 1 1
22778     00 10 FF F9 |                    movbyts char,#%00000000          '1 0 0
2277c     88 BB C2 FC |                    xcont   m_lut2,char              '0 0 0
22780     88 BB C2 FC |                    xcont   m_lut2,char              '1 1 0
22784     F7 0F 6F FB |                    djnz    cpl2,#p235
22788                 | 
22788     20 01 90 FD |                jmp    #p203
2278c                 |                   
2278c                 | 
2278c                 | 
2278c                 | '' --- 1 bit color modes
2278c                 | 
2278c     00 16 0F F2 | p240          cmp zoom, #%00 wz     '2 colors, zoom x1
22790     08 01 90 AD |        if_z   jmp #p251              'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
22794                 | 
22794     01 16 0F F2 |               cmp zoom, #%01 wz     '2 colors, zoom x2
22798     13 0C 07 A6 |        if_z   mov skippattern,#%10011
2279c     08 0C 07 56 |        if_nz  mov skippattern,#%01000
227a0                 | 
227a0                 | 
227a0     7D 11 E3 FA | p241               rdword  char,framebuf2
227a4     44 10 FF F9 |                    movbyts char,#%01000100
227a8     63 10 63 FD |                    mergew  char
227ac     32 0C 63 FD |                    skipf skippattern
227b0     44 10 FF F9 |                    movbyts char,#%01000100         ' 1 0
227b4     63 10 63 FD |                    mergew  char                    ' 1 0
227b8     88 BB C2 FC |                    xcont   m_lut2,char             ' 0 0
227bc     02 FA 06 F1 |                    add     framebuf2,#2                    ' 0 1
227c0     01 FA 06 F1 |                    add     framebuf2,#1                ' 1 0
227c4     F6 0F 6F FB |                    djnz   cpl2,#p241
227c8                 | 
227c8                 | 
227c8     E0 00 90 FD |                jmp    #p203
227cc                 | 
227cc                 | '' --- 2 bit color modes
227cc                 | 
227cc     00 16 0F F2 | p250          cmp zoom, #%00 wz     '4 colors, zoom x1
227d0     C8 00 90 AD |        if_z   jmp #p251
227d4                 | 
227d4     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
227d8     30 00 90 AD |        if_z   jmp #p252
227dc                 | 
227dc                 | 
227dc     7D 11 C3 FA | p254               rdbyte char,framebuf2
227e0     04 0A 07 F6 |                    mov  t5,#4
227e4     02 10 67 F0 | p255               shl  char,#2
227e8     88 03 53 F8 |                    getnib  t1,char,#2
227ec     03 02 07 F5 |                    and     t1,#3
227f0     55 02 07 FA |                    mul     t1,#$55
227f4     81 05 03 F9 |                    rolbyte  t2,t1,#0
227f8     FA 0B 6F FB |                    djnz    t5,#p255
227fc     82 BB C2 FC |                    xcont   m_lut2,t2
22800     01 FA 06 F1 |                    add     framebuf2,#1
22804     F5 0F 6F FB |                    djnz    cpl2,#p254
22808     A0 00 90 FD |                    jmp     #p203
2280c                 | 
2280c     7D 11 E3 FA | p252               rdword char,framebuf2
22810     08 0A 07 F6 |                    mov  t5,#8
22814     02 10 67 F0 | p253               shl  char,#2
22818     88 03 63 F8 |                    getnib  t1,char,#4
2281c     03 02 07 F5 |                    and     t1,#3
22820     05 02 07 FA |                    mul     t1,#5
22824     81 05 83 F8 |                    rolnib  t2,t1,#0
22828     FA 0B 6F FB |                    djnz    t5,#p253
2282c     82 BB C2 FC |                    xcont   m_lut2,t2
22830     02 FA 06 F1 |                    add     framebuf2,#2
22834     F5 0F 6F FB |                    djnz    cpl2,#p252
22838     70 00 90 FD |                    jmp     #p203
2283c                 | 
2283c                 | '' ------ 4 bit color modes
2283c                 | 
2283c     00 16 0F F2 | p260          cmp zoom, #%00 wz     '4 colors, zoom x1, the same loop as 2bpp
22840     58 00 90 AD |        if_z   jmp #p251
22844                 | 
22844     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
22848     2C 00 90 AD |        if_z   jmp #p262
2284c                 | 
2284c                 | 
2284c     7D 11 C3 FA | p263               rdbyte char,framebuf2
22850     02 0A DC FC |                            rep #5,#2
22854     88 05 8B F8 |                              rolnib t2,char,#1
22858     88 05 8B F8 |                                  rolnib t2,char,#1
2285c     88 05 8B F8 |                              rolnib t2,char,#1
22860     88 05 8B F8 |                                  rolnib t2,char,#1
22864     04 10 67 F0 |                              shl char,#4
22868     82 BB C2 FC |                    xcont   m_lut2,t2
2286c     01 FA 06 F1 |                    add     framebuf2,#1
22870     F6 0F 6F FB |                    djnz    cpl2,#p263
22874     34 00 90 FD |                    jmp     #p203
22878                 | 
22878     7D 11 E3 FA | p262               rdword  char,framebuf2
2287c     04 06 DC FC |                            rep #3,#4
22880     88 05 9B F8 |                              rolnib t2,char,#3
22884     88 05 9B F8 |                                  rolnib t2,char,#3
22888     04 10 67 F0 |                              shl char,#4
2288c     82 BB C2 FC |                    xcont   m_lut2,t2
22890     02 FA 06 F1 |                    add     framebuf2,#2
22894     F8 0F 6F FB |                    djnz    cpl2,#p262
22898     10 00 90 FD |                    jmp     #p203
2289c                 | 
2289c                 | ''---------- all color modes without zoom
2289c                 | 
2289c     87 07 D8 FC | p251               rep  #3,cpl2
228a0     7D 11 03 FB |                    rdlong  char,framebuf2
228a4     04 FA 06 F1 |                    add     framebuf2,#4
228a8     88 BB C2 FC |                    xcont   m_lut2,char
228ac                 |           
228ac                 |  ''-----------------------------------------------------------------------------------------
228ac                 | p203           ' getword  mb2,m_border,#0
228ac     00 24 0F F2 |                 cmp      mb2, #0 wz
228b0     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
228b4                 | 
228b4     EC FB 9F FD |                 jmp #p302
228b8                 | 
228b8                 | '' -------------------------------------- END of graph  line ---------------------------------
228b8                 | 
228b8                 | '' consts and vars
228b8                 | 
228b8     52 4D 35 D5 | sync_000        long    %1101010100_1101010100_1101010100_10    '
228bc     AE 42 35 D5 | sync_001        long    %1101010100_1101010100_0010101011_10    '        hsync
228c0     52 45 15 55 | sync_222        long    %0101010100_0101010100_0101010100_10    'vsync
228c4     AE 4A 15 55 | sync_223        long    %0101010100_0101010100_1010101011_10    'vsync + hsync
228c8                 | 
228c8     00 2C 1A 00 | border          long    %00000000_00011010_00101100_00000000
228cc                 | 
228cc                 | '------ these longs will be set by setmode function
228cc                 | 
228cc     00 00 00 00 | m_bs            long    0        'blanks before sync
228d0     00 00 00 00 | m_sn            long    0        'sync
228d4     00 00 00 00 | m_bv            long    0        'blanks before visible
228d8     00 00 00 00 | m_vi            long    0        'visible pixels #
228dc     00 00 00 00 | m_border        long    0        'left/right borders
228e0     00 00 00 00 | m_lut1          long    0        'characters
228e4     00 00 00 00 | i_vborder       long    0        'up/down borders
228e8     00 00 00 00 | i_upporch       long    0        'up porch lines
228ec     00 00 00 00 | i_vsync         long    0        'vsync lines
228f0     00 00 00 00 | i_downporch     long    0        'down porch lines
228f4     00 00 00 00 | i_modenum       long    0        'mode #
228f8     00 00 00 00 | i_cpl           long    0        'chars/longs per line
228fc     00 00 00 00 | i_lines         long    0        'scanlines #
22900     00 00 00 00 | i_clock         long    0
22904     00 00 00 00 | i_hubset        long    0
22908     00 00 00 00 | i_totalvis      long    0
2290c                 | 
2290c                 | '-------------------------------------
2290c                 | 
2290c     00 00 00 00 | m_lut2          long    0
22910                 | 
22910                 | colordepth
22910     00 00 00 00 | linestart       long    0
22914     00 00 00 00 | linenum         long    0
22918     00 01 00 00 | lutaddr         long    256
2291c                 | 
2291c     0E 00 00 00 | cursorsh        long    14
22920     00 00 00 00 | frames          long    0
22924     00 00 00 00 | cursorx         long    0
22928     00 00 00 00 | cursory         long    0
2292c     00 00 00 00 | cursorpos       long    0
22930     00 00 00 00 | cursorpos2      long    0
22934     00 00 00 00 | fontstart       long    0
22938     00 00 00 00 | border2         long 0
2293c     00 00 81 70 | lutiv           long $70810000
22940     00 00 88 00 | lutt1           long $00880000
22944     00 00 80 00 | lutg1           long $00800000
22948     00 00 80 10 | lutg2           long $10800000
2294c     00 00 80 20 | lutg4           long $20800000
22950     00 00 80 30 | lutg8           long $30800000
22954     00 00 00 00 | framebuf        long 0
22958     00 00 00 00 | fontbuf         long 0
2295c     00 00 00 00 | borderptr       long 0
22960     00 00 00 00 | vblankptr       long 0
22964     00 00 00 00 | cursorptr       long 0
22968     00 00 00 00 | modeptr         long 0
2296c     00 00 00 00 | paletteptr      long 0
22970     00 00 00 00 | dlptr           long 0
22974                 | fontnumptr      res     1
22974                 | fontnumptr      res     1
22974                 | hbase           res     1
22974                 | hbase           res     1
22974                 | borderptr2      res     1
22974                 | borderptr2      res     1
22974                 | dlptr2 res 1
22974                 | dlptr2 res 1
22974                 | dl              res 1
22974                 | dl              res 1
22974                 | ii              res     1
22974                 | ii              res     1
22974                 | framebuf2       res     1
22974                 | framebuf2       res     1
22974                 | hsync0          res     1
22974                 | hsync0          res     1
22974                 | hsync1          res     1
22974                 | hsync1          res     1
22974                 | fontline        res     1
22974                 | fontline        res     1
22974                 | t1              res     1
22974                 | t1              res     1
22974                 | t2              res     1
22974                 | t2              res     1
22974                 | t3 res 1
22974                 | t3 res 1
22974                 | t4 res 1
22974                 | t4 res 1
22974                 | t5 res 1
22974                 | t5 res 1
22974                 | skippattern res 1
22974                 | skippattern res 1
22974                 | cpl2 res 1
22974                 | cpl2 res 1
22974                 | char            res     1
22974                 | char            res     1
22974                 | backcolor       res     1
22974                 | backcolor       res     1
22974                 | charcolor       res     1
22974                 | charcolor       res     1
22974                 | zoom res 1
22974                 | zoom res 1
22974     00 00 00 00 | rcnt long 0 'dl repeat count
22978     00 00 00 00 | rcnt2 long 0
2297c     00 00 00 00 | rcnt2a long 0
22980     00 00 00 00 | roffset long 0
22984     00 00 00 00 | rdl long 0  'dl repeat line
22988     00 00 00 00 | dlc long 0 'dl command
2298c     00 00 00 00 | mb2 long 0
22990     00 00 00 00 | aend             long 0
22994                 |                 fit     496                     '
22994                 | _trackerplayer_spin2_dat_
22994                 | 
22994     00 00 00 00 | null             long  0
22998     46 52 45 51 
2299c     46 52 45 51 
229a0     46 52 45 51 
229a4     46 52 45 51 | frequencyLut     long  $51_45_52_46[VALUES_IN_PERIOD_TABLE] ' This table is runtime calculated to match any possible sys clock and mixing frequency combination [1024]
229a8     46 52 45 51 
229ac     46 52 45 51 
229b0     46 52 45 51 
229b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
229b8     46 52 45 51 
229bc     46 52 45 51 
229c0     46 52 45 51 
229c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
229c8     46 52 45 51 
229cc     46 52 45 51 
229d0     46 52 45 51 
229d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
229d8     46 52 45 51 
229dc     46 52 45 51 
229e0     46 52 45 51 
229e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
229e8     46 52 45 51 
229ec     46 52 45 51 
229f0     46 52 45 51 
229f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
229f8     46 52 45 51 
229fc     46 52 45 51 
22a00     46 52 45 51 
22a04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a08     46 52 45 51 
22a0c     46 52 45 51 
22a10     46 52 45 51 
22a14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a18     46 52 45 51 
22a1c     46 52 45 51 
22a20     46 52 45 51 
22a24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a28     46 52 45 51 
22a2c     46 52 45 51 
22a30     46 52 45 51 
22a34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a38     46 52 45 51 
22a3c     46 52 45 51 
22a40     46 52 45 51 
22a44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a48     46 52 45 51 
22a4c     46 52 45 51 
22a50     46 52 45 51 
22a54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a58     46 52 45 51 
22a5c     46 52 45 51 
22a60     46 52 45 51 
22a64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a68     46 52 45 51 
22a6c     46 52 45 51 
22a70     46 52 45 51 
22a74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a78     46 52 45 51 
22a7c     46 52 45 51 
22a80     46 52 45 51 
22a84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a88     46 52 45 51 
22a8c     46 52 45 51 
22a90     46 52 45 51 
22a94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22a98     46 52 45 51 
22a9c     46 52 45 51 
22aa0     46 52 45 51 
22aa4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22aa8     46 52 45 51 
22aac     46 52 45 51 
22ab0     46 52 45 51 
22ab4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ab8     46 52 45 51 
22abc     46 52 45 51 
22ac0     46 52 45 51 
22ac4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ac8     46 52 45 51 
22acc     46 52 45 51 
22ad0     46 52 45 51 
22ad4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ad8     46 52 45 51 
22adc     46 52 45 51 
22ae0     46 52 45 51 
22ae4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ae8     46 52 45 51 
22aec     46 52 45 51 
22af0     46 52 45 51 
22af4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22af8     46 52 45 51 
22afc     46 52 45 51 
22b00     46 52 45 51 
22b04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b08     46 52 45 51 
22b0c     46 52 45 51 
22b10     46 52 45 51 
22b14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b18     46 52 45 51 
22b1c     46 52 45 51 
22b20     46 52 45 51 
22b24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b28     46 52 45 51 
22b2c     46 52 45 51 
22b30     46 52 45 51 
22b34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b38     46 52 45 51 
22b3c     46 52 45 51 
22b40     46 52 45 51 
22b44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b48     46 52 45 51 
22b4c     46 52 45 51 
22b50     46 52 45 51 
22b54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b58     46 52 45 51 
22b5c     46 52 45 51 
22b60     46 52 45 51 
22b64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b68     46 52 45 51 
22b6c     46 52 45 51 
22b70     46 52 45 51 
22b74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b78     46 52 45 51 
22b7c     46 52 45 51 
22b80     46 52 45 51 
22b84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b88     46 52 45 51 
22b8c     46 52 45 51 
22b90     46 52 45 51 
22b94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22b98     46 52 45 51 
22b9c     46 52 45 51 
22ba0     46 52 45 51 
22ba4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ba8     46 52 45 51 
22bac     46 52 45 51 
22bb0     46 52 45 51 
22bb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22bb8     46 52 45 51 
22bbc     46 52 45 51 
22bc0     46 52 45 51 
22bc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22bc8     46 52 45 51 
22bcc     46 52 45 51 
22bd0     46 52 45 51 
22bd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22bd8     46 52 45 51 
22bdc     46 52 45 51 
22be0     46 52 45 51 
22be4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22be8     46 52 45 51 
22bec     46 52 45 51 
22bf0     46 52 45 51 
22bf4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22bf8     46 52 45 51 
22bfc     46 52 45 51 
22c00     46 52 45 51 
22c04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c08     46 52 45 51 
22c0c     46 52 45 51 
22c10     46 52 45 51 
22c14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c18     46 52 45 51 
22c1c     46 52 45 51 
22c20     46 52 45 51 
22c24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c28     46 52 45 51 
22c2c     46 52 45 51 
22c30     46 52 45 51 
22c34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c38     46 52 45 51 
22c3c     46 52 45 51 
22c40     46 52 45 51 
22c44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c48     46 52 45 51 
22c4c     46 52 45 51 
22c50     46 52 45 51 
22c54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c58     46 52 45 51 
22c5c     46 52 45 51 
22c60     46 52 45 51 
22c64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c68     46 52 45 51 
22c6c     46 52 45 51 
22c70     46 52 45 51 
22c74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c78     46 52 45 51 
22c7c     46 52 45 51 
22c80     46 52 45 51 
22c84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c88     46 52 45 51 
22c8c     46 52 45 51 
22c90     46 52 45 51 
22c94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22c98     46 52 45 51 
22c9c     46 52 45 51 
22ca0     46 52 45 51 
22ca4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ca8     46 52 45 51 
22cac     46 52 45 51 
22cb0     46 52 45 51 
22cb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22cb8     46 52 45 51 
22cbc     46 52 45 51 
22cc0     46 52 45 51 
22cc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22cc8     46 52 45 51 
22ccc     46 52 45 51 
22cd0     46 52 45 51 
22cd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22cd8     46 52 45 51 
22cdc     46 52 45 51 
22ce0     46 52 45 51 
22ce4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ce8     46 52 45 51 
22cec     46 52 45 51 
22cf0     46 52 45 51 
22cf4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22cf8     46 52 45 51 
22cfc     46 52 45 51 
22d00     46 52 45 51 
22d04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d08     46 52 45 51 
22d0c     46 52 45 51 
22d10     46 52 45 51 
22d14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d18     46 52 45 51 
22d1c     46 52 45 51 
22d20     46 52 45 51 
22d24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d28     46 52 45 51 
22d2c     46 52 45 51 
22d30     46 52 45 51 
22d34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d38     46 52 45 51 
22d3c     46 52 45 51 
22d40     46 52 45 51 
22d44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d48     46 52 45 51 
22d4c     46 52 45 51 
22d50     46 52 45 51 
22d54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d58     46 52 45 51 
22d5c     46 52 45 51 
22d60     46 52 45 51 
22d64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d68     46 52 45 51 
22d6c     46 52 45 51 
22d70     46 52 45 51 
22d74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d78     46 52 45 51 
22d7c     46 52 45 51 
22d80     46 52 45 51 
22d84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d88     46 52 45 51 
22d8c     46 52 45 51 
22d90     46 52 45 51 
22d94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22d98     46 52 45 51 
22d9c     46 52 45 51 
22da0     46 52 45 51 
22da4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22da8     46 52 45 51 
22dac     46 52 45 51 
22db0     46 52 45 51 
22db4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22db8     46 52 45 51 
22dbc     46 52 45 51 
22dc0     46 52 45 51 
22dc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22dc8     46 52 45 51 
22dcc     46 52 45 51 
22dd0     46 52 45 51 
22dd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22dd8     46 52 45 51 
22ddc     46 52 45 51 
22de0     46 52 45 51 
22de4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22de8     46 52 45 51 
22dec     46 52 45 51 
22df0     46 52 45 51 
22df4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22df8     46 52 45 51 
22dfc     46 52 45 51 
22e00     46 52 45 51 
22e04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e08     46 52 45 51 
22e0c     46 52 45 51 
22e10     46 52 45 51 
22e14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e18     46 52 45 51 
22e1c     46 52 45 51 
22e20     46 52 45 51 
22e24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e28     46 52 45 51 
22e2c     46 52 45 51 
22e30     46 52 45 51 
22e34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e38     46 52 45 51 
22e3c     46 52 45 51 
22e40     46 52 45 51 
22e44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e48     46 52 45 51 
22e4c     46 52 45 51 
22e50     46 52 45 51 
22e54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e58     46 52 45 51 
22e5c     46 52 45 51 
22e60     46 52 45 51 
22e64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e68     46 52 45 51 
22e6c     46 52 45 51 
22e70     46 52 45 51 
22e74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e78     46 52 45 51 
22e7c     46 52 45 51 
22e80     46 52 45 51 
22e84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e88     46 52 45 51 
22e8c     46 52 45 51 
22e90     46 52 45 51 
22e94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22e98     46 52 45 51 
22e9c     46 52 45 51 
22ea0     46 52 45 51 
22ea4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ea8     46 52 45 51 
22eac     46 52 45 51 
22eb0     46 52 45 51 
22eb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22eb8     46 52 45 51 
22ebc     46 52 45 51 
22ec0     46 52 45 51 
22ec4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ec8     46 52 45 51 
22ecc     46 52 45 51 
22ed0     46 52 45 51 
22ed4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ed8     46 52 45 51 
22edc     46 52 45 51 
22ee0     46 52 45 51 
22ee4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ee8     46 52 45 51 
22eec     46 52 45 51 
22ef0     46 52 45 51 
22ef4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ef8     46 52 45 51 
22efc     46 52 45 51 
22f00     46 52 45 51 
22f04     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f08     46 52 45 51 
22f0c     46 52 45 51 
22f10     46 52 45 51 
22f14     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f18     46 52 45 51 
22f1c     46 52 45 51 
22f20     46 52 45 51 
22f24     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f28     46 52 45 51 
22f2c     46 52 45 51 
22f30     46 52 45 51 
22f34     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f38     46 52 45 51 
22f3c     46 52 45 51 
22f40     46 52 45 51 
22f44     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f48     46 52 45 51 
22f4c     46 52 45 51 
22f50     46 52 45 51 
22f54     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f58     46 52 45 51 
22f5c     46 52 45 51 
22f60     46 52 45 51 
22f64     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f68     46 52 45 51 
22f6c     46 52 45 51 
22f70     46 52 45 51 
22f74     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f78     46 52 45 51 
22f7c     46 52 45 51 
22f80     46 52 45 51 
22f84     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f88     46 52 45 51 
22f8c     46 52 45 51 
22f90     46 52 45 51 
22f94     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22f98     46 52 45 51 
22f9c     46 52 45 51 
22fa0     46 52 45 51 
22fa4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22fa8     46 52 45 51 
22fac     46 52 45 51 
22fb0     46 52 45 51 
22fb4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22fb8     46 52 45 51 
22fbc     46 52 45 51 
22fc0     46 52 45 51 
22fc4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22fc8     46 52 45 51 
22fcc     46 52 45 51 
22fd0     46 52 45 51 
22fd4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22fd8     46 52 45 51 
22fdc     46 52 45 51 
22fe0     46 52 45 51 
22fe4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22fe8     46 52 45 51 
22fec     46 52 45 51 
22ff0     46 52 45 51 
22ff4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
22ff8     46 52 45 51 
22ffc     46 52 45 51 
23000     46 52 45 51 
23004     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23008     46 52 45 51 
2300c     46 52 45 51 
23010     46 52 45 51 
23014     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23018     46 52 45 51 
2301c     46 52 45 51 
23020     46 52 45 51 
23024     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23028     46 52 45 51 
2302c     46 52 45 51 
23030     46 52 45 51 
23034     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23038     46 52 45 51 
2303c     46 52 45 51 
23040     46 52 45 51 
23044     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23048     46 52 45 51 
2304c     46 52 45 51 
23050     46 52 45 51 
23054     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23058     46 52 45 51 
2305c     46 52 45 51 
23060     46 52 45 51 
23064     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23068     46 52 45 51 
2306c     46 52 45 51 
23070     46 52 45 51 
23074     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23078     46 52 45 51 
2307c     46 52 45 51 
23080     46 52 45 51 
23084     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23088     46 52 45 51 
2308c     46 52 45 51 
23090     46 52 45 51 
23094     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23098     46 52 45 51 
2309c     46 52 45 51 
230a0     46 52 45 51 
230a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230a8     46 52 45 51 
230ac     46 52 45 51 
230b0     46 52 45 51 
230b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230b8     46 52 45 51 
230bc     46 52 45 51 
230c0     46 52 45 51 
230c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230c8     46 52 45 51 
230cc     46 52 45 51 
230d0     46 52 45 51 
230d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230d8     46 52 45 51 
230dc     46 52 45 51 
230e0     46 52 45 51 
230e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230e8     46 52 45 51 
230ec     46 52 45 51 
230f0     46 52 45 51 
230f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
230f8     46 52 45 51 
230fc     46 52 45 51 
23100     46 52 45 51 
23104     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23108     46 52 45 51 
2310c     46 52 45 51 
23110     46 52 45 51 
23114     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23118     46 52 45 51 
2311c     46 52 45 51 
23120     46 52 45 51 
23124     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23128     46 52 45 51 
2312c     46 52 45 51 
23130     46 52 45 51 
23134     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23138     46 52 45 51 
2313c     46 52 45 51 
23140     46 52 45 51 
23144     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23148     46 52 45 51 
2314c     46 52 45 51 
23150     46 52 45 51 
23154     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23158     46 52 45 51 
2315c     46 52 45 51 
23160     46 52 45 51 
23164     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23168     46 52 45 51 
2316c     46 52 45 51 
23170     46 52 45 51 
23174     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23178     46 52 45 51 
2317c     46 52 45 51 
23180     46 52 45 51 
23184     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23188     46 52 45 51 
2318c     46 52 45 51 
23190     46 52 45 51 
23194     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23198     46 52 45 51 
2319c     46 52 45 51 
231a0     46 52 45 51 
231a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231a8     46 52 45 51 
231ac     46 52 45 51 
231b0     46 52 45 51 
231b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231b8     46 52 45 51 
231bc     46 52 45 51 
231c0     46 52 45 51 
231c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231c8     46 52 45 51 
231cc     46 52 45 51 
231d0     46 52 45 51 
231d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231d8     46 52 45 51 
231dc     46 52 45 51 
231e0     46 52 45 51 
231e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231e8     46 52 45 51 
231ec     46 52 45 51 
231f0     46 52 45 51 
231f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
231f8     46 52 45 51 
231fc     46 52 45 51 
23200     46 52 45 51 
23204     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23208     46 52 45 51 
2320c     46 52 45 51 
23210     46 52 45 51 
23214     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23218     46 52 45 51 
2321c     46 52 45 51 
23220     46 52 45 51 
23224     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23228     46 52 45 51 
2322c     46 52 45 51 
23230     46 52 45 51 
23234     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23238     46 52 45 51 
2323c     46 52 45 51 
23240     46 52 45 51 
23244     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23248     46 52 45 51 
2324c     46 52 45 51 
23250     46 52 45 51 
23254     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23258     46 52 45 51 
2325c     46 52 45 51 
23260     46 52 45 51 
23264     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23268     46 52 45 51 
2326c     46 52 45 51 
23270     46 52 45 51 
23274     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23278     46 52 45 51 
2327c     46 52 45 51 
23280     46 52 45 51 
23284     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23288     46 52 45 51 
2328c     46 52 45 51 
23290     46 52 45 51 
23294     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23298     46 52 45 51 
2329c     46 52 45 51 
232a0     46 52 45 51 
232a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232a8     46 52 45 51 
232ac     46 52 45 51 
232b0     46 52 45 51 
232b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232b8     46 52 45 51 
232bc     46 52 45 51 
232c0     46 52 45 51 
232c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232c8     46 52 45 51 
232cc     46 52 45 51 
232d0     46 52 45 51 
232d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232d8     46 52 45 51 
232dc     46 52 45 51 
232e0     46 52 45 51 
232e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232e8     46 52 45 51 
232ec     46 52 45 51 
232f0     46 52 45 51 
232f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
232f8     46 52 45 51 
232fc     46 52 45 51 
23300     46 52 45 51 
23304     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23308     46 52 45 51 
2330c     46 52 45 51 
23310     46 52 45 51 
23314     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23318     46 52 45 51 
2331c     46 52 45 51 
23320     46 52 45 51 
23324     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23328     46 52 45 51 
2332c     46 52 45 51 
23330     46 52 45 51 
23334     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23338     46 52 45 51 
2333c     46 52 45 51 
23340     46 52 45 51 
23344     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23348     46 52 45 51 
2334c     46 52 45 51 
23350     46 52 45 51 
23354     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23358     46 52 45 51 
2335c     46 52 45 51 
23360     46 52 45 51 
23364     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23368     46 52 45 51 
2336c     46 52 45 51 
23370     46 52 45 51 
23374     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23378     46 52 45 51 
2337c     46 52 45 51 
23380     46 52 45 51 
23384     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23388     46 52 45 51 
2338c     46 52 45 51 
23390     46 52 45 51 
23394     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23398     46 52 45 51 
2339c     46 52 45 51 
233a0     46 52 45 51 
233a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233a8     46 52 45 51 
233ac     46 52 45 51 
233b0     46 52 45 51 
233b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233b8     46 52 45 51 
233bc     46 52 45 51 
233c0     46 52 45 51 
233c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233c8     46 52 45 51 
233cc     46 52 45 51 
233d0     46 52 45 51 
233d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233d8     46 52 45 51 
233dc     46 52 45 51 
233e0     46 52 45 51 
233e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233e8     46 52 45 51 
233ec     46 52 45 51 
233f0     46 52 45 51 
233f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
233f8     46 52 45 51 
233fc     46 52 45 51 
23400     46 52 45 51 
23404     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23408     46 52 45 51 
2340c     46 52 45 51 
23410     46 52 45 51 
23414     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23418     46 52 45 51 
2341c     46 52 45 51 
23420     46 52 45 51 
23424     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23428     46 52 45 51 
2342c     46 52 45 51 
23430     46 52 45 51 
23434     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23438     46 52 45 51 
2343c     46 52 45 51 
23440     46 52 45 51 
23444     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23448     46 52 45 51 
2344c     46 52 45 51 
23450     46 52 45 51 
23454     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23458     46 52 45 51 
2345c     46 52 45 51 
23460     46 52 45 51 
23464     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23468     46 52 45 51 
2346c     46 52 45 51 
23470     46 52 45 51 
23474     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23478     46 52 45 51 
2347c     46 52 45 51 
23480     46 52 45 51 
23484     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23488     46 52 45 51 
2348c     46 52 45 51 
23490     46 52 45 51 
23494     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23498     46 52 45 51 
2349c     46 52 45 51 
234a0     46 52 45 51 
234a4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234a8     46 52 45 51 
234ac     46 52 45 51 
234b0     46 52 45 51 
234b4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234b8     46 52 45 51 
234bc     46 52 45 51 
234c0     46 52 45 51 
234c4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234c8     46 52 45 51 
234cc     46 52 45 51 
234d0     46 52 45 51 
234d4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234d8     46 52 45 51 
234dc     46 52 45 51 
234e0     46 52 45 51 
234e4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234e8     46 52 45 51 
234ec     46 52 45 51 
234f0     46 52 45 51 
234f4     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
234f8     46 52 45 51 
234fc     46 52 45 51 
23500     46 52 45 51 
23504     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23508     46 52 45 51 
2350c     46 52 45 51 
23510     46 52 45 51 
23514     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23518     46 52 45 51 
2351c     46 52 45 51 
23520     46 52 45 51 
23524     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23528     46 52 45 51 
2352c     46 52 45 51 
23530     46 52 45 51 
23534     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23538                 | 
23538     00 00 00 00 
2353c     18 00 00 00 
23540     31 00 00 00 
23544     4A 00 00 00 | vibratoWaveform  long  0,    24,   49,   74,   97,   120,  141,  161
23548     61 00 00 00 
2354c     78 00 00 00 
23550     8D 00 00 00 
23554     A1 00 00 00 | 	byte	$61, $00, $00, $00, $78, $00, $00, $00, $8d, $00, $00, $00, $a1, $00, $00, $00
23558     B4 00 00 00 
2355c     C5 00 00 00 
23560     D4 00 00 00 
23564     E0 00 00 00 |                  long  180,  197,  212,  224,  235,  244,  250,  253
23568     EB 00 00 00 
2356c     F4 00 00 00 
23570     FA 00 00 00 
23574     FD 00 00 00 | 	byte	$eb, $00, $00, $00, $f4, $00, $00, $00, $fa, $00, $00, $00, $fd, $00, $00, $00
23578     FF 00 00 00 
2357c     FD 00 00 00 
23580     FA 00 00 00 
23584     F4 00 00 00 |                  long  255,  253,  250,  244,  235,  224,  212,  197
23588     EB 00 00 00 
2358c     E0 00 00 00 
23590     D4 00 00 00 
23594     C5 00 00 00 | 	byte	$eb, $00, $00, $00, $e0, $00, $00, $00, $d4, $00, $00, $00, $c5, $00, $00, $00
23598     B4 00 00 00 
2359c     A1 00 00 00 
235a0     8D 00 00 00 
235a4     78 00 00 00 |                  long  180,  161,  141,  120,  97,   74,   49,   24
235a8     61 00 00 00 
235ac     4A 00 00 00 
235b0     31 00 00 00 
235b4     18 00 00 00 | 	byte	$61, $00, $00, $00, $4a, $00, $00, $00, $31, $00, $00, $00, $18, $00, $00, $00
235b8     00 00 00 00 
235bc     E8 FF FF FF 
235c0     CF FF FF FF 
235c4     B6 FF FF FF |                  long  0,   -24,  -49,  -74,  -97,  -120, -141, -161
235c8     9F FF FF FF 
235cc     88 FF FF FF 
235d0     73 FF FF FF 
235d4     5F FF FF FF | 	byte	$9f, $ff, $ff, $ff, $88, $ff, $ff, $ff, $73, $ff, $ff, $ff, $5f, $ff, $ff, $ff
235d8     4C FF FF FF 
235dc     3B FF FF FF 
235e0     2C FF FF FF 
235e4     20 FF FF FF |                  long -180, -197, -212, -224, -235, -244, -250, -253
235e8     15 FF FF FF 
235ec     0C FF FF FF 
235f0     06 FF FF FF 
235f4     03 FF FF FF | 	byte	$15, $ff, $ff, $ff, $0c, $ff, $ff, $ff, $06, $ff, $ff, $ff, $03, $ff, $ff, $ff
235f8     01 FF FF FF 
235fc     03 FF FF FF 
23600     06 FF FF FF 
23604     0C FF FF FF |                  long -255, -253, -250, -244, -235, -224, -212, -197
23608     15 FF FF FF 
2360c     20 FF FF FF 
23610     2C FF FF FF 
23614     3B FF FF FF | 	byte	$15, $ff, $ff, $ff, $20, $ff, $ff, $ff, $2c, $ff, $ff, $ff, $3b, $ff, $ff, $ff
23618     4C FF FF FF 
2361c     5F FF FF FF 
23620     73 FF FF FF 
23624     88 FF FF FF |                  long -180, -161, -141, -120, -97,  -74,  -49,  -24
23628     9F FF FF FF 
2362c     B6 FF FF FF 
23630     CF FF FF FF 
23634     E8 FF FF FF | 	byte	$9f, $ff, $ff, $ff, $b6, $ff, $ff, $ff, $cf, $ff, $ff, $ff, $e8, $ff, $ff, $ff
23638                 | 
23638     58 03 28 03 
2363c     FA 02 D0 02 
23640     A6 02 80 02 
23644     5C 02 3A 02 | periodTable      word  856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480 , 453 ' C1
23648     1A 02 FC 01 
2364c     E0 01 C5 01 | 	byte	$1a, $02, $fc, $01, $e0, $01, $c5, $01
23650     AC 01 94 01 
23654     7D 01 68 01 
23658     53 01 40 01 
2365c     2E 01 1D 01 |                  word  428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240 , 226 ' C2
23660     0D 01 FE 00 
23664     F0 00 E2 00 | 	byte	$0d, $01, $fe, $00, $f0, $00, $e2, $00
23668     D6 00 CA 00 
2366c     BE 00 B4 00 
23670     AA 00 A0 00 
23674     97 00 8F 00 |                  word  214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120 , 113 ' C3
23678     87 00 7F 00 
2367c     78 00 71 00 | 	byte	$87, $00, $7f, $00, $78, $00, $71, $00
23680     52 03 22 03 
23684     F5 02 CB 02 
23688     A2 02 7D 02 
2368c     59 02 37 02 |                  word  850 , 802 , 757 , 715 , 674 , 637 , 601 , 567 , 535 , 505 , 477 , 450
23690     17 02 F9 01 
23694     DD 01 C2 01 | 	byte	$17, $02, $f9, $01, $dd, $01, $c2, $01
23698     A9 01 91 01 
2369c     7B 01 65 01 
236a0     51 01 3E 01 
236a4     2C 01 1C 01 |                  word  425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 239 , 225
236a8     0C 01 FD 00 
236ac     EF 00 E1 00 | 	byte	$0c, $01, $fd, $00, $ef, $00, $e1, $00
236b0     D5 00 C9 00 
236b4     BD 00 B3 00 
236b8     A9 00 9F 00 
236bc     96 00 8E 00 |                  word  213 , 201 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119 , 113
236c0     86 00 7E 00 
236c4     77 00 71 00 | 	byte	$86, $00, $7e, $00, $77, $00, $71, $00
236c8     4C 03 1C 03 
236cc     F0 02 C5 02 
236d0     9E 02 78 02 
236d4     55 02 33 02 |                  word  844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474 , 447
236d8     14 02 F6 01 
236dc     DA 01 BF 01 | 	byte	$14, $02, $f6, $01, $da, $01, $bf, $01
236e0     A6 01 8E 01 
236e4     78 01 63 01 
236e8     4F 01 3C 01 
236ec     2A 01 1A 01 |                  word  422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237 , 224
236f0     0A 01 FB 00 
236f4     ED 00 E0 00 | 	byte	$0a, $01, $fb, $00, $ed, $00, $e0, $00
236f8     D3 00 C7 00 
236fc     BC 00 B1 00 
23700     A7 00 9E 00 
23704     95 00 8D 00 |                  word  211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118 , 112
23708     85 00 7D 00 
2370c     76 00 70 00 | 	byte	$85, $00, $7d, $00, $76, $00, $70, $00
23710     46 03 17 03 
23714     EA 02 C0 02 
23718     99 02 74 02 
2371c     50 02 2F 02 |                  word  838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470 , 444
23720     10 02 F2 01 
23724     D6 01 BC 01 | 	byte	$10, $02, $f2, $01, $d6, $01, $bc, $01
23728     A3 01 8B 01 
2372c     75 01 60 01 
23730     4C 01 3A 01 
23734     28 01 18 01 |                  word  419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235 , 222
23738     08 01 F9 00 
2373c     EB 00 DE 00 | 	byte	$08, $01, $f9, $00, $eb, $00, $de, $00
23740     D1 00 C6 00 
23744     BB 00 B0 00 
23748     A6 00 9D 00 
2374c     94 00 8C 00 |                  word  209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118 , 111
23750     84 00 7D 00 
23754     76 00 6F 00 | 	byte	$84, $00, $7d, $00, $76, $00, $6f, $00
23758     40 03 11 03 
2375c     E5 02 BB 02 
23760     94 02 6F 02 
23764     4C 02 2B 02 |                  word  832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 495 , 467 , 441
23768     0C 02 EF 01 
2376c     D3 01 B9 01 | 	byte	$0c, $02, $ef, $01, $d3, $01, $b9, $01
23770     A0 01 88 01 
23774     72 01 5E 01 
23778     4A 01 38 01 
2377c     26 01 16 01 |                  word  416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233 , 220
23780     06 01 F7 00 
23784     E9 00 DC 00 | 	byte	$06, $01, $f7, $00, $e9, $00, $dc, $00
23788     D0 00 C4 00 
2378c     B9 00 AF 00 
23790     A5 00 9C 00 
23794     93 00 8B 00 |                  word  208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 124 , 117 , 110
23798     83 00 7C 00 
2379c     75 00 6E 00 | 	byte	$83, $00, $7c, $00, $75, $00, $6e, $00
237a0     3A 03 0B 03 
237a4     E0 02 B6 02 
237a8     8F 02 6B 02 
237ac     48 02 27 02 |                  word  826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463 , 437
237b0     08 02 EB 01 
237b4     CF 01 B5 01 | 	byte	$08, $02, $eb, $01, $cf, $01, $b5, $01
237b8     9D 01 86 01 
237bc     70 01 5B 01 
237c0     48 01 35 01 
237c4     24 01 14 01 |                  word  413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232 , 219
237c8     04 01 F5 00 
237cc     E8 00 DB 00 | 	byte	$04, $01, $f5, $00, $e8, $00, $db, $00
237d0     CE 00 C3 00 
237d4     B8 00 AE 00 
237d8     A4 00 9B 00 
237dc     92 00 8A 00 |                  word  206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116 , 109
237e0     82 00 7B 00 
237e4     74 00 6D 00 | 	byte	$82, $00, $7b, $00, $74, $00, $6d, $00
237e8     34 03 06 03 
237ec     DA 02 B1 02 
237f0     8B 02 66 02 
237f4     44 02 23 02 |                  word  820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460 , 434
237f8     04 02 E7 01 
237fc     CC 01 B2 01 | 	byte	$04, $02, $e7, $01, $cc, $01, $b2, $01
23800     9A 01 83 01 
23804     6D 01 59 01 
23808     45 01 33 01 
2380c     22 01 12 01 |                  word  410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230 , 217
23810     02 01 F4 00 
23814     E6 00 D9 00 | 	byte	$02, $01, $f4, $00, $e6, $00, $d9, $00
23818     CD 00 C1 00 
2381c     B7 00 AC 00 
23820     A3 00 9A 00 
23824     91 00 89 00 |                  word  205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115 , 109
23828     81 00 7A 00 
2382c     73 00 6D 00 | 	byte	$81, $00, $7a, $00, $73, $00, $6d, $00
23830     2E 03 00 03 
23834     D5 02 AC 02 
23838     86 02 62 02 
2383c     3F 02 1F 02 |                  word  814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457 , 431
23840     01 02 E4 01 
23844     C9 01 AF 01 | 	byte	$01, $02, $e4, $01, $c9, $01, $af, $01
23848     97 01 80 01 
2384c     6B 01 56 01 
23850     43 01 31 01 
23854     20 01 10 01 |                  word  407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228 , 216
23858     00 01 F2 00 
2385c     E4 00 D8 00 | 	byte	$00, $01, $f2, $00, $e4, $00, $d8, $00
23860     CC 00 C0 00 
23864     B5 00 AB 00 
23868     A1 00 98 00 
2386c     90 00 88 00 |                  word  204 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114 , 108
23870     80 00 79 00 
23874     72 00 6C 00 | 	byte	$80, $00, $79, $00, $72, $00, $6c, $00
23878     8B 03 58 03 
2387c     28 03 FA 02 
23880     D0 02 A6 02 
23884     80 02 5C 02 |                  word  907 , 856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480
23888     3A 02 1A 02 
2388c     FC 01 E0 01 | 	byte	$3a, $02, $1a, $02, $fc, $01, $e0, $01
23890     C5 01 AC 01 
23894     94 01 7D 01 
23898     68 01 53 01 
2389c     40 01 2E 01 |                  word  453 , 428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240
238a0     1D 01 0D 01 
238a4     FE 00 F0 00 | 	byte	$1d, $01, $0d, $01, $fe, $00, $f0, $00
238a8     E2 00 D6 00 
238ac     CA 00 BE 00 
238b0     B4 00 AA 00 
238b4     A0 00 97 00 |                  word  226 , 214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120
238b8     8F 00 87 00 
238bc     7F 00 78 00 | 	byte	$8f, $00, $87, $00, $7f, $00, $78, $00
238c0     84 03 52 03 
238c4     22 03 F5 02 
238c8     CB 02 A3 02 
238cc     7C 02 59 02 |                  word  900 , 850 , 802 , 757 , 715 , 675 , 636 , 601 , 567 , 535 , 505 , 477
238d0     37 02 17 02 
238d4     F9 01 DD 01 | 	byte	$37, $02, $17, $02, $f9, $01, $dd, $01
238d8     C2 01 A9 01 
238dc     91 01 7B 01 
238e0     65 01 51 01 
238e4     3E 01 2C 01 |                  word  450 , 425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 238
238e8     1C 01 0C 01 
238ec     FD 00 EE 00 | 	byte	$1c, $01, $0c, $01, $fd, $00, $ee, $00
238f0     E1 00 D4 00 
238f4     C8 00 BD 00 
238f8     B3 00 A9 00 
238fc     9F 00 96 00 |                  word  225 , 212 , 200 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119
23900     8E 00 86 00 
23904     7E 00 77 00 | 	byte	$8e, $00, $86, $00, $7e, $00, $77, $00
23908     7E 03 4C 03 
2390c     1C 03 F0 02 
23910     C5 02 9E 02 
23914     78 02 55 02 |                  word  894 , 844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474
23918     33 02 14 02 
2391c     F6 01 DA 01 | 	byte	$33, $02, $14, $02, $f6, $01, $da, $01
23920     BF 01 A6 01 
23924     8E 01 78 01 
23928     63 01 4F 01 
2392c     3C 01 2A 01 |                  word  447 , 422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237
23930     1A 01 0A 01 
23934     FB 00 ED 00 | 	byte	$1a, $01, $0a, $01, $fb, $00, $ed, $00
23938     DF 00 D3 00 
2393c     C7 00 BC 00 
23940     B1 00 A7 00 
23944     9E 00 95 00 |                  word  223 , 211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118
23948     8D 00 85 00 
2394c     7D 00 76 00 | 	byte	$8d, $00, $85, $00, $7d, $00, $76, $00
23950     77 03 46 03 
23954     17 03 EA 02 
23958     C0 02 99 02 
2395c     74 02 50 02 |                  word  887 , 838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470
23960     2F 02 10 02 
23964     F2 01 D6 01 | 	byte	$2f, $02, $10, $02, $f2, $01, $d6, $01
23968     BC 01 A3 01 
2396c     8B 01 75 01 
23970     60 01 4C 01 
23974     3A 01 28 01 |                  word  444 , 419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235
23978     18 01 08 01 
2397c     F9 00 EB 00 | 	byte	$18, $01, $08, $01, $f9, $00, $eb, $00
23980     DE 00 D1 00 
23984     C6 00 BB 00 
23988     B0 00 A6 00 
2398c     9D 00 94 00 |                  word  222 , 209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118
23990     8C 00 84 00 
23994     7D 00 76 00 | 	byte	$8c, $00, $84, $00, $7d, $00, $76, $00
23998     71 03 40 03 
2399c     11 03 E5 02 
239a0     BB 02 94 02 
239a4     6F 02 4C 02 |                  word  881 , 832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 494 , 467
239a8     2B 02 0C 02 
239ac     EE 01 D3 01 | 	byte	$2b, $02, $0c, $02, $ee, $01, $d3, $01
239b0     B9 01 A0 01 
239b4     88 01 72 01 
239b8     5E 01 4A 01 
239bc     38 01 26 01 |                  word  441 , 416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233
239c0     16 01 06 01 
239c4     F7 00 E9 00 | 	byte	$16, $01, $06, $01, $f7, $00, $e9, $00
239c8     DC 00 D0 00 
239cc     C4 00 B9 00 
239d0     AF 00 A5 00 
239d4     9C 00 93 00 |                  word  220 , 208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 123 , 117
239d8     8B 00 83 00 
239dc     7B 00 75 00 | 	byte	$8b, $00, $83, $00, $7b, $00, $75, $00
239e0     6B 03 3A 03 
239e4     0B 03 E0 02 
239e8     B6 02 8F 02 
239ec     6B 02 48 02 |                  word  875 , 826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463
239f0     27 02 08 02 
239f4     EB 01 CF 01 | 	byte	$27, $02, $08, $02, $eb, $01, $cf, $01
239f8     B5 01 9D 01 
239fc     86 01 70 01 
23a00     5B 01 48 01 
23a04     35 01 24 01 |                  word  437 , 413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232
23a08     14 01 04 01 
23a0c     F5 00 E8 00 | 	byte	$14, $01, $04, $01, $f5, $00, $e8, $00
23a10     DB 00 CE 00 
23a14     C3 00 B8 00 
23a18     AE 00 A4 00 
23a1c     9B 00 92 00 |                  word  219 , 206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116
23a20     8A 00 82 00 
23a24     7B 00 74 00 | 	byte	$8a, $00, $82, $00, $7b, $00, $74, $00
23a28     64 03 34 03 
23a2c     06 03 DA 02 
23a30     B1 02 8B 02 
23a34     66 02 44 02 |                  word  868 , 820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460
23a38     23 02 04 02 
23a3c     E7 01 CC 01 | 	byte	$23, $02, $04, $02, $e7, $01, $cc, $01
23a40     B2 01 9A 01 
23a44     83 01 6D 01 
23a48     59 01 45 01 
23a4c     33 01 22 01 |                  word  434 , 410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230
23a50     12 01 02 01 
23a54     F4 00 E6 00 | 	byte	$12, $01, $02, $01, $f4, $00, $e6, $00
23a58     D9 00 CD 00 
23a5c     C1 00 B7 00 
23a60     AC 00 A3 00 
23a64     9A 00 91 00 |                  word  217 , 205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115
23a68     89 00 81 00 
23a6c     7A 00 73 00 | 	byte	$89, $00, $81, $00, $7a, $00, $73, $00
23a70     5E 03 2E 03 
23a74     00 03 D5 02 
23a78     AC 02 86 02 
23a7c     62 02 3F 02 |                  word  862 , 814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457
23a80     1F 02 01 02 
23a84     E4 01 C9 01 | 	byte	$1f, $02, $01, $02, $e4, $01, $c9, $01
23a88     AF 01 97 01 
23a8c     80 01 6B 01 
23a90     56 01 43 01 
23a94     31 01 20 01 |                  word  431 , 407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228
23a98     10 01 00 01 
23a9c     F2 00 E4 00 | 	byte	$10, $01, $00, $01, $f2, $00, $e4, $00
23aa0     D8 00 CB 00 
23aa4     C0 00 B5 00 
23aa8     AB 00 A1 00 
23aac     98 00 90 00 |                  word  216 , 203 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114
23ab0     88 00 80 00 
23ab4     79 00 72 00 | 	byte	$88, $00, $80, $00, $79, $00, $72, $00
23ab8                 | 	alignl
23ab8                 | _audio012_spin2_dat_
23ab8                 | 
23ab8                 | audio       org     0
23ab8     00 F2 07 F6 | 			mov ptrb,#0
23abc     0E 70 07 FC |             wrpin   dac,#left       ' Noise dither DACs at clk/90
23ac0     0E C8 1C FC |             wxpin   #100,#left
23ac4                 | 
23ac4     0F 70 07 FC |             wrpin   dac,#right
23ac8     0F C8 1C FC |             wxpin   #100,#right
23acc                 | 
23acc     41 9C 64 FD |             dirh    #left addpins 1
23ad0                 | 
23ad0     20 9C 64 FD |             setse1  #%001<<6 + left ' Set the event - DAC empty
23ad4     2E E9 07 F6 |             mov     ijmp1,#isr1     ' Init the interrupt
23ad8     25 08 64 FD |             setint1 #4              ' Interrupt from DAC empty event
23adc                 |             
23adc                 | '---------------------------------------------------------------------------------        
23adc                 | '----------------- The main loop -------------------------------------------------
23adc                 | '---------------------------------------------------------------------------------
23adc                 | 
23adc     28 10 64 FD | loop        setq    #8              ' Read channel regs from the hub
23ae0     61 A3 06 FB |             rdlong  sstart1,ptra++
23ae4     28 10 64 FD |             setq    #8              ' Cannot do one big setq+rdlong as it interferes with interrupts
23ae8     61 B5 06 FB |             rdlong  sstart2,ptra++
23aec     28 10 64 FD |             setq    #8
23af0     61 C7 06 FB |             rdlong  sstart3,ptra++
23af4     28 10 64 FD |             setq    #8
23af8     61 D9 06 FB |             rdlong  sstart4,ptra++
23afc     28 10 64 FD |             setq    #8
23b00     61 EB 06 FB |             rdlong  sstart5,ptra++
23b04     28 10 64 FD |             setq    #8
23b08     61 FD 06 FB |             rdlong  sstart6,ptra++
23b0c     28 10 64 FD |             setq    #8
23b10     61 0F 07 FB |             rdlong  sstart7,ptra++
23b14     28 10 64 FD |             setq    #8
23b18     61 21 07 FB |             rdlong  sstart8,ptra++
23b1c                 | 
23b1c     20 F1 87 F1 |             sub     ptra,#9*4*8    
23b20                 |             
23b20     3A 35 13 F2 |             cmp     time1,a1FFFFFFF wc   ' Main counter overflow workaround
23b24     3A 37 13 32 |      if_nc  cmp     time2,a1FFFFFFF wc   ' before the time is written to the buffer, it is ANDed with $1FFFFFFF  
23b28     3A 39 13 32 |      if_nc  cmp     time3,a1FFFFFFF wc   ' Also, the interrupt procedure ands the counter  
23b2c     3A 3B 13 32 |      if_nc  cmp     time4,a1FFFFFFF wc   ' So, if the counter is >=$20000000, the compare sequence still works  
23b30     3A 3D 13 32 |      if_nc  cmp     time5,a1FFFFFFF wc   ' and when all counters are >=$20000000, all of them are SUBed at the same time 
23b34     3A 3F 13 32 |      if_nc  cmp     time6,a1FFFFFFF wc   ' including time0 main counter  
23b38     3A 41 13 32 |      if_nc  cmp     time7,a1FFFFFFF wc     
23b3c     3A 43 13 32 |      if_nc  cmp     time8,a1FFFFFFF wc   ' was 7FFFFFFF - reduced to make debugging easier 
23b40     3B 35 83 31 |      if_nc  sub     time1,a20000000
23b44     3B 37 83 31 |      if_nc  sub     time2,a20000000
23b48     3B 39 83 31 |      if_nc  sub     time3,a20000000
23b4c     3B 3B 83 31 |      if_nc  sub     time4,a20000000
23b50     3B 3D 83 31 |      if_nc  sub     time5,a20000000
23b54     3B 3F 83 31 |      if_nc  sub     time6,a20000000
23b58     3B 41 83 31 |      if_nc  sub     time7,a20000000
23b5c     3B 43 83 31 |      if_nc  sub     time8,a20000000
23b60     3B 33 83 31 |      if_nc  sub     time0,a20000000
23b64                 | 
23b64                 |        
23b64                 |     
23b64     00 B2 0E F2 |             cmp     acmd1,#0 wz     ' if cmd=0, zero the phase accumulator
23b68     00 80 06 A6 |     if_e    mov     p1,#0
23b6c     00 C4 0E F2 |             cmp     acmd2,#0 wz
23b70     00 82 06 A6 |     if_e    mov     p2,#0
23b74     00 D6 0E F2 |             cmp     acmd3,#0 wz
23b78     00 84 06 A6 |     if_e    mov     p3,#0
23b7c     00 E8 0E F2 |             cmp     acmd4,#0 wz
23b80     00 86 06 A6 |     if_e    mov     p4,#0
23b84     00 FA 0E F2 |             cmp     acmd5,#0 wz
23b88     00 88 06 A6 |     if_e    mov     p5,#0
23b8c     00 0C 0F F2 |             cmp     acmd6,#0 wz
23b90     00 8A 06 A6 |     if_e    mov     p6,#0
23b94     00 1E 0F F2 |             cmp     acmd7,#0 wz
23b98     00 8C 06 A6 |     if_e    mov     p7,#0
23b9c     00 30 0F F2 |             cmp     acmd8,#0 wz
23ba0     00 8E 06 A6 |     if_e    mov     p8,#0
23ba4                 |           
23ba4     F9 91 02 F6 |             mov     qq,ptrb         ' Check if the buffer is full	
23ba8     02 90 86 F1 |             sub     qq,#2
23bac     FF 91 06 F5 |             and     qq,#511
23bb0     4A 91 1A F2 |             cmp     qq,front wcz
23bb4     24 FF 9F AD |     if_e    jmp     #loop           ' If the buffer is full, do nothing               
23bb8                 |       
23bb8     51 46 07 F6 |             mov     cn,#p201           ' Find the channel to compute
23bbc     9A 49 03 F6 |             mov     ct,time1        ' with the lowest next sample time
23bc0     9B 49 3B F3 |             fle     ct,time2 wcz   
23bc4     68 46 07 C6 |     if_c    mov     cn,#p202 
23bc8     9C 49 3B F3 |             fle     ct,time3 wcz
23bcc     7F 46 07 C6 |     if_c    mov     cn,#p203     
23bd0     9D 49 3B F3 |             fle     ct,time4 wcz
23bd4     96 46 07 C6 |     if_c    mov     cn,#p204
23bd8     9E 49 3B F3 |             fle     ct,time5 wcz
23bdc     AD 46 07 C6 |     if_c    mov     cn,#p205 
23be0     9F 49 3B F3 |             fle     ct,time6 wcz
23be4     C4 46 07 C6 |     if_c    mov     cn,#p206
23be8     A0 49 3B F3 |             fle     ct,time7 wcz
23bec     DB 46 07 C6 |     if_c    mov     cn,#p207
23bf0     A1 49 3B F3 |             fle     ct,time8 wcz
23bf4     F2 46 07 C6 |     if_c    mov     cn,#p208 
23bf8                 |  
23bf8     2C 46 63 FD |             jmp     cn
23bfc                 |    
23bfc                 | '----------------------------------------------------------------------------------
23bfc                 | '------------- Compute channel samples --------------------------------------------
23bfc                 | '----------------------------------------------------------------------------------
23bfc                 | 	
23bfc                 | ' ------------  Channel 1
23bfc                 |  
23bfc     9A 4B 03 F6 | p201        mov     dt0,time1      ' compute the delta to add to the global time
23c00     99 4B 83 F1 |             sub     dt0,time0
23c04     57 35 03 F1 |             add     time1,freq1    ' compute the next channel time	
23c08                 | 	        
23c08     58 81 02 F1 |             add     p1,askip1      ' update the phase accumulator
23c0c     54 81 1A F2 |             cmp     p1,lend1 wcz   ' substract the loop length if over the loop end
23c10     54 81 82 31 |     if_ge   sub     p1,lend1	        
23c14     53 81 02 31 |     if_ge   add     p1,lstart1       
23c18     40 91 02 F6 |             mov     qq,p1          ' compute the pointer to the next sample
23c1c     51 91 02 F1 |             add     qq,sstart1
23c20                 |             
23c20     00 A4 0E F2 |             cmp     type1,#0 wz    ' check the sample type
23c24     48 93 C2 5A |     if_nz   rdbyte  spl,qq         ' not zero=8 bit
23c28     08 92 66 50 |     if_nz   shl     spl,#8
23c2c     48 93 E2 AA |     if_z    rdword  spl,qq         ' zero=16 bit. TODO: more types? signed/unsigned, etc... 
23c30                 | 
23c30     55 93 32 FA |             scas    spl,vol1       ' apply the volume
23c34     00 92 02 F6 |             mov     spl,0-0
23c38                 | 
23c38     56 93 32 FA |             scas    spl,apan1      ' apply the pan
23c3c     00 50 03 F6 |             mov     ls1,0-0
23c40     20 00 00 FF 
23c44     00 90 06 F6 |             mov     qq,##16384
23c48     56 91 82 F1 |             sub     qq,apan1
23c4c     48 93 32 FA |             scas    spl,qq
23c50     00 52 03 F6 |             mov     rs1,0-0
23c54                 |             
23c54     84 02 90 FD |             jmp     #p101              
23c58                 | 	    	
23c58                 | ' ------------  Channel 2
23c58                 |  
23c58     9B 4B 03 F6 | p202        mov     dt0,time2
23c5c     99 4B 83 F1 |             sub     dt0,time0
23c60     60 37 03 F1 |             add     time2,freq2  	
23c64                 | 	        
23c64     61 83 02 F1 |             add     p2,askip2
23c68     5D 83 1A F2 |             cmp     p2,lend2 wcz
23c6c     5D 83 82 31 |     if_ge   sub     p2,lend2	        
23c70     5C 83 02 31 |     if_ge   add     p2,lstart2       
23c74     41 91 02 F6 |             mov     qq,p2
23c78     5A 91 02 F1 |             add     qq,sstart2
23c7c                 | 
23c7c     00 B6 0E F2 |             cmp     type2,#0 wz
23c80     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23c84     08 92 66 50 |     if_nz   shl     spl,#8
23c88     48 93 E2 AA |     if_z    rdword  spl,qq
23c8c                 | 
23c8c     5E 93 32 FA |             scas    spl,vol2
23c90     00 92 02 F6 |             mov     spl,0-0
23c94                 |             
23c94     5F 93 32 FA |             scas    spl,apan2
23c98     00 54 03 F6 |             mov     ls2,0-0
23c9c     20 00 00 FF 
23ca0     00 90 06 F6 |             mov     qq,##16384
23ca4     5F 91 82 F1 |             sub     qq,apan2
23ca8     48 93 32 FA |             scas    spl,qq
23cac     00 56 03 F6 |             mov     rs2,0-0
23cb0                 |             
23cb0     28 02 90 FD |             jmp     #p101
23cb4                 | 
23cb4                 | ' ------------  Channel 3
23cb4                 |  
23cb4     9C 4B 03 F6 | p203        mov     dt0,time3
23cb8     99 4B 83 F1 |             sub     dt0,time0
23cbc     69 39 03 F1 |             add     time3,freq3  	
23cc0                 | 	        
23cc0     6A 85 02 F1 |             add     p3,askip3
23cc4     66 85 1A F2 |             cmp     p3,lend3 wcz
23cc8     66 85 82 31 |     if_ge   sub     p3,lend3	        
23ccc     65 85 02 31 |     if_ge   add     p3,lstart3       
23cd0     42 91 02 F6 |             mov     qq,p3
23cd4     63 91 02 F1 |             add     qq,sstart3
23cd8                 |             
23cd8     00 C8 0E F2 |             cmp     type3,#0 wz
23cdc     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23ce0     08 92 66 50 |     if_nz   shl     spl,#8
23ce4     48 93 E2 AA |     if_z    rdword  spl,qq
23ce8                 | 
23ce8     67 93 32 FA |             scas    spl,vol3
23cec     00 92 02 F6 |             mov     spl,0-0
23cf0                 |     	
23cf0     68 93 32 FA |             scas    spl,apan3
23cf4     00 58 03 F6 |             mov     ls3,0-0
23cf8                 |             
23cf8     20 00 00 FF 
23cfc     00 90 06 F6 |             mov     qq,##16384
23d00     68 91 82 F1 |             sub     qq,apan3
23d04     48 93 32 FA |             scas    spl,qq
23d08     00 5A 03 F6 |             mov     rs3,0-0
23d0c                 | 
23d0c     CC 01 90 FD |             jmp     #p101
23d10                 |             
23d10                 | ' ------------  Channel 4
23d10                 |  
23d10     9D 4B 03 F6 | p204        mov     dt0,time4
23d14     99 4B 83 F1 |             sub     dt0,time0
23d18     72 3B 03 F1 |             add     time4,freq4  	
23d1c                 | 
23d1c                 | 	        
23d1c     73 87 02 F1 |             add     p4,askip4
23d20     6F 87 1A F2 |             cmp     p4,lend4 wcz
23d24     6F 87 82 31 |     if_ge   sub     p4,lend4	        
23d28     6E 87 02 31 |     if_ge   add     p4,lstart4       
23d2c     43 91 02 F6 |             mov     qq,p4
23d30     6C 91 02 F1 |             add     qq,sstart4
23d34                 |             
23d34     00 DA 0E F2 |             cmp     type4,#0 wz
23d38     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23d3c     08 92 66 50 |     if_nz   shl     spl,#8
23d40     48 93 E2 AA |     if_z    rdword  spl,qq
23d44                 | 
23d44     70 93 32 FA |             scas    spl,vol4
23d48     00 92 02 F6 |             mov     spl,0-0
23d4c                 |     	
23d4c     71 93 32 FA |             scas    spl,apan4
23d50     00 5E 03 F6 |             mov     ls4,0-0
23d54                 |             
23d54     20 00 00 FF 
23d58     00 90 06 F6 |             mov     qq,##16384
23d5c     71 91 82 F1 |             sub     qq,apan4
23d60     48 93 32 FA |             scas    spl,qq
23d64     00 5C 03 F6 |             mov     rs4,0-0
23d68                 | 
23d68     70 01 90 FD |             jmp     #p101
23d6c                 |             
23d6c                 | ' ------------  Channel 5
23d6c                 |  
23d6c     9E 4B 03 F6 | p205        mov     dt0,time5
23d70     99 4B 83 F1 |             sub     dt0,time0
23d74     7B 3D 03 F1 |             add     time5,freq5  	
23d78                 | 
23d78                 | 	        
23d78     7C 89 02 F1 |             add     p5,askip5
23d7c     78 89 1A F2 |             cmp     p5,lend5 wcz
23d80     78 89 82 31 |     if_ge   sub     p5,lend5	        
23d84     77 89 02 31 |     if_ge   add     p5,lstart5       
23d88     44 91 02 F6 |             mov     qq,p5
23d8c     75 91 02 F1 |             add     qq,sstart5
23d90                 |             
23d90     00 EC 0E F2 |             cmp     type5,#0 wz
23d94     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23d98     08 92 66 50 |     if_nz   shl     spl,#8
23d9c     48 93 E2 AA |     if_z    rdword  spl,qq
23da0                 | 
23da0     79 93 32 FA |             scas    spl,vol5
23da4     00 92 02 F6 |             mov     spl,0-0
23da8                 |     	
23da8     7A 93 32 FA |             scas    spl,apan5
23dac     00 62 03 F6 |             mov     ls5,0-0
23db0                 |             
23db0     20 00 00 FF 
23db4     00 90 06 F6 |             mov     qq,##16384
23db8     7A 91 82 F1 |             sub     qq,apan5
23dbc     48 93 32 FA |             scas    spl,qq
23dc0     00 60 03 F6 |             mov     rs5,0-0
23dc4                 | 
23dc4     14 01 90 FD |             jmp     #p101
23dc8                 |   
23dc8                 | ' ------------  Channel 6
23dc8                 |  
23dc8     9F 4B 03 F6 | p206        mov     dt0,time6
23dcc     99 4B 83 F1 |             sub     dt0,time0
23dd0     84 3F 03 F1 |             add     time6,freq6  	
23dd4                 | 
23dd4                 | 	        
23dd4     85 8B 02 F1 |             add     p6,askip6
23dd8     81 8B 1A F2 |             cmp     p6,lend6 wcz
23ddc     81 8B 82 31 |     if_ge   sub     p6,lend6	        
23de0     80 8B 02 31 |     if_ge   add     p6,lstart6       
23de4     45 91 02 F6 |             mov     qq,p6
23de8     7E 91 02 F1 |             add     qq,sstart6
23dec                 |             
23dec     00 FE 0E F2 |             cmp     type6,#0 wz
23df0     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23df4     08 92 66 50 |     if_nz   shl     spl,#8
23df8     48 93 E2 AA |     if_z    rdword  spl,qq
23dfc                 | 
23dfc     82 93 32 FA |             scas    spl,vol6
23e00     00 92 02 F6 |             mov     spl,0-0
23e04                 |     	
23e04     83 93 32 FA |             scas    spl,apan6
23e08     00 66 03 F6 |             mov     ls6,0-0
23e0c                 |             
23e0c     20 00 00 FF 
23e10     00 90 06 F6 |             mov     qq,##16384
23e14     83 91 82 F1 |             sub     qq,apan6
23e18     48 93 32 FA |             scas    spl,qq
23e1c     00 64 03 F6 |             mov     rs6,0-0
23e20                 | 
23e20     B8 00 90 FD |             jmp     #p101
23e24                 |             
23e24                 | ' ------------  Channel 7
23e24                 |  
23e24     A0 4B 03 F6 | p207        mov     dt0,time7
23e28     99 4B 83 F1 |             sub     dt0,time0
23e2c     8D 41 03 F1 |             add     time7,freq7  	
23e30                 | 
23e30                 | 	        
23e30     8E 8D 02 F1 |             add     p7,askip7
23e34     8A 8D 1A F2 |             cmp     p7,lend7 wcz
23e38     8A 8D 82 31 |     if_ge   sub     p7,lend7	        
23e3c     89 8D 02 31 |     if_ge   add     p7,lstart7       
23e40     46 91 02 F6 |             mov     qq,p7
23e44     87 91 02 F1 |             add     qq,sstart7
23e48                 |             
23e48     00 10 0F F2 |             cmp     type7,#0 wz
23e4c     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23e50     08 92 66 50 |     if_nz   shl     spl,#8
23e54     48 93 E2 AA |     if_z    rdword  spl,qq
23e58                 | 
23e58     8B 93 32 FA |             scas    spl,vol7
23e5c     00 92 02 F6 |             mov     spl,0-0
23e60                 |     	
23e60     8C 93 32 FA |             scas    spl,apan7
23e64     00 6A 03 F6 |             mov     ls7,0-0
23e68                 |             
23e68     20 00 00 FF 
23e6c     00 90 06 F6 |             mov     qq,##16384
23e70     8C 91 82 F1 |             sub     qq,apan7
23e74     48 93 32 FA |             scas    spl,qq
23e78     00 68 03 F6 |             mov     rs7,0-0
23e7c                 | 
23e7c     5C 00 90 FD |             jmp     #p101     
23e80                 |                    
23e80                 | ' ------------  Channel 8
23e80                 |  
23e80     A1 4B 03 F6 | p208        mov     dt0,time8
23e84     99 4B 83 F1 |             sub     dt0,time0
23e88     96 43 03 F1 |             add     time8,freq8  	
23e8c                 | 
23e8c                 | 	        
23e8c     97 8F 02 F1 |             add     p8,askip8
23e90     93 8F 1A F2 |             cmp     p8,lend8 wcz
23e94     93 8F 82 31 |     if_ge   sub     p8,lend8	        
23e98     92 8F 02 31 |     if_ge   add     p8,lstart8       
23e9c     47 91 02 F6 |             mov     qq,p8
23ea0     90 91 02 F1 |             add     qq,sstart8
23ea4                 |             
23ea4     00 22 0F F2 |             cmp     type8,#0 wz
23ea8     48 93 C2 5A |     if_nz   rdbyte  spl,qq
23eac     08 92 66 50 |     if_nz   shl     spl,#8
23eb0     48 93 E2 AA |     if_z    rdword  spl,qq
23eb4                 | 
23eb4     94 93 32 FA |             scas    spl,vol8
23eb8     00 92 02 F6 |             mov     spl,0-0
23ebc                 |     	
23ebc     95 93 32 FA |             scas    spl,apan8
23ec0     00 6E 03 F6 |             mov     ls8,0-0
23ec4                 |             
23ec4     20 00 00 FF 
23ec8     00 90 06 F6 |             mov     qq,##16384
23ecc     95 91 82 F1 |             sub     qq,apan8
23ed0     48 93 32 FA |             scas    spl,qq
23ed4     00 6C 03 F6 |             mov     rs8,0-0
23ed8                 | 
23ed8     00 00 90 FD |             jmp     #p101            
23edc                 |             
23edc                 | '------------------------ Channels end here --------------------       
23edc                 | 
23edc                 | ' Now add all channels and put the sample to the buffer    
23edc                 | 
23edc                 | 
23edc     99 45 0B F2 | p101        cmp     oldt0,time0 wz   ' There must not be 2 entries with the same time
23ee0     02 94 86 A1 |     if_z    sub     front,#2         ' 
23ee4     FF 95 06 A5 |     if_z    and     front,#511     
23ee8                 |   
23ee8     00 4E 07 F6 |             mov     rs,#0            ' Mix all channels to rs and ls
23eec     00 4C 07 F6 |             mov     ls,#0
23ef0     A9 4F 03 F1 |             add     rs,rs1
23ef4     AB 4F 03 F1 |             add     rs,rs2
23ef8     AD 4F 03 F1 |             add     rs,rs3
23efc     AE 4F 03 F1 |             add     rs,rs4
23f00     B0 4F 03 F1 |             add     rs,rs5
23f04     B2 4F 03 F1 |             add     rs,rs6
23f08     B4 4F 03 F1 |             add     rs,rs7
23f0c     B6 4F 03 F1 |             add     rs,rs8
23f10                 |             
23f10     A8 4D 03 F1 |             add     ls,ls1
23f14     AA 4D 03 F1 |             add     ls,ls2
23f18     AC 4D 03 F1 |             add     ls,ls3
23f1c     AF 4D 03 F1 |             add     ls,ls4
23f20     B1 4D 03 F1 |             add     ls,ls5
23f24     B3 4D 03 F1 |             add     ls,ls6
23f28     B5 4D 03 F1 |             add     ls,ls7
23f2c     B7 4D 03 F1 |             add     ls,ls8
23f30                 |  		
23f30     0F 4C E7 F4 |             bitnot  ls,#15            ' convert to unsigned. TODO: compute and apply the gain for samples to not exceed 16 bit range
23f34     0F 4E E7 F4 |             bitnot  rs,#15		
23f38                 | 		
23f38     A6 4F 2B F9 |             setword rs,ls,#1         ' Pack L and R to one long    		
23f3c     4A 4F 33 FC |             wrlut   rs,front         ' and write it to LUT
23f40     4A 93 02 F6 |             mov     spl,front        ' avoid incrementing front 1 by 1 
23f44     01 92 06 F1 |             add     spl,#1           
23f48                 | 
23f48     99 91 02 F6 |             mov     qq,time0
23f4c     3A 91 02 F5 |             and     qq,a1fffffff
23f50     49 91 32 FC |             wrlut   qq,spl
23f54                 | 
23f54     01 04 DC FC |             rep     #2, #1 
23f58     02 94 06 F1 |             add     front,#2         ' move the front pointer
23f5c     FF 95 06 F5 |             and     front,#511       ' and loop at #512
23f60     99 45 03 F6 |             mov     oldt0,time0      ' update global time
23f64     A5 33 03 F1 |             add     time0,dt0     
23f68                 |             
23f68                 |                
23f68     80 90 66 FC |             wrlong  qq,#$80          'debug
23f6c                 | '               wrlong time1,#$84
23f6c                 | ''               wrlong time2,#$88
23f6c                 | '               wrlong time3,#$8c
23f6c                 | '               wrlong time4,#$90
23f6c                 |                
23f6c     6C FB 9F FD |             jmp     #loop            'loop
23f70                 | 
23f70                 | '-------------------------------------------------------------------------
23f70                 | '------------------ This is the end of the main loop ---------------------
23f70                 | '-------------------------------------------------------------------------
23f70                 | 
23f70                 | '--------------------------------------------------------------------------
23f70                 | '------ Interrupt service -------------------------------------------------
23f70                 | '------ Output the sample, get the next one if exists ---------------------
23f70                 | '--------------------------------------------------------------------------
23f70                 | 
23f70     0E 98 26 FC | isr1        wypin   lsample,#left        '2     The sample has to be outputted every 90 cycles     
23f74     0F 9A 26 FC |             wypin   rsample,#right       '4
23f78                 |             
23f78     3B 97 02 F7 | 	        incmod  counter,a20000000    '6	
23f7c     50 97 1A F2 |             cmp     counter,irqtime wcz  '8     Check if it is time for the next sample
23f80     F5 FF 3B 5B |     if_ne   reti1                        '10/12 If not, do nothing
23f84                 | 		
23f84     4E 9B 3A F9 |           	getword rsample,lsnext,#1    '12
23f88     4E 99 32 F9 |           	getword lsample,lsnext,#0    '14
23f8c                 |            	
23f8c     4A F3 1B F2 |             cmp     ptrb,front wcz       '16    If the buffer is empty, do nothing 
23f90     F5 FF 3B AB |     if_e    reti1                        '18/20
23f94                 | 
23f94     E1 9D A6 FA |             rdlut   lsnext,ptrb++        '21    else read the sample and its time from LUT
23f98     E1 A1 A6 FA |             rdlut   irqtime,ptrb++       '23    Read the time for this sample
23f9c                 | 
23f9c     F5 FF 3B FB |             reti1                        '27 
23fa0                 |             
23fa0                 |          '' 11 nops left  at 354 MHz 
23fa0                 |           
23fa0                 | '---------------------------------------------------------------------------
23fa0                 | '-------- End of interrupt -------------------------------------------------
23fa0                 | '---------------------------------------------------------------------------    
23fa0                 | 
23fa0                 | '---------------------------------------------------------------------------
23fa0                 | '------- Variables ---------------------------------------------------------
23fa0                 | '---------------------------------------------------------------------------
23fa0                 | 
23fa0                 | ' constants
23fa0                 | 
23fa0     FF FF FF 1F | a1fffffff long $1fffffff
23fa4     00 00 00 20 | a20000000 long $20000000
23fa8     00 00 00 00 | nrsample long 0
23fac     00 00 00 00 | nlsample long 0
23fb0     1F 00 00 00 | fl long 31
23fb4     1F 00 00 00 | fr long 31
23fb8                 | ' phase accumulators
23fb8                 | 
23fb8     00 00 00 00 | p1          long 0
23fbc     00 00 00 00 | p2          long 0
23fc0     00 00 00 00 | p3          long 0
23fc4     00 00 00 00 | p4          long 0
23fc8     00 00 00 00 | p5          long 0
23fcc     00 00 00 00 | p6          long 0
23fd0     00 00 00 00 | p7          long 0
23fd4     00 00 00 00 | p8          long 0
23fd8                 | 
23fd8                 | ' temporary variables 
23fd8                 | 
23fd8     00 00 00 00 | qq          long 0
23fdc     00 00 00 00 | spl         long 0
23fe0                 | 
23fe0                 | ' circular buffer in LUT
23fe0                 | 
23fe0     00 00 00 00 | front       long 0
23fe4                 | 'tail        long 0
23fe4                 | 
23fe4                 | ' Interrupt ISR variables
23fe4                 | 
23fe4     00 F8 FF FF | counter     long $FFFFF800 ' this counter will overflow after 1210 seconds
23fe8     00 00 00 00 | lsample     long 0
23fec     00 00 00 00 | rsample     long 0
23ff0     00 00 00 00 | lsnext      long 0
23ff4     00 00 00 00 | rsnext      long 0 
23ff8     00 00 00 00 | irqtime     long 0
23ffc                 | 
23ffc                 | ' Channel 1 registers. TODO - optimize the memory usage
23ffc                 | 
23ffc     00 00 00 00 | sstart1     long 0       ' Sample start pointer
24000     00 00 00 00 | type1       long 0       ' type 0 16 bit, 1 8 bit
24004     00 00 00 00 | lstart1     long 0       ' Loop start
24008     02 00 00 00 | lend1       long 2       ' Loop end
2400c     00 00 00 00 | vol1        long 0       ' volume, 0..16384
24010     00 00 00 00 | apan1       long 0       ' pan, 0..16384
24014     65 00 00 00 | freq1       long 101     ' frequency divider
24018     02 00 00 00 | askip1      long 2       ' skip between samples, 1 for 8 bit, 2 for 16 bit (or more for special effects)
2401c     00 00 00 00 | acmd1       long 0       ' command, 0 = reset the phase accumulator
24020                 | 
24020                 | ' Channel 2 registers
24020                 | 
24020     00 00 00 00 | sstart2     long 0
24024     00 00 00 00 | type2       long 0
24028     00 00 00 00 | lstart2     long 0
2402c     02 00 00 00 | lend2       long 2        		
24030     00 00 00 00 | vol2        long 0
24034     00 00 00 00 | apan2       long 0
24038     67 00 00 00 | freq2       long 103
2403c     02 00 00 00 | askip2      long 2
24040     00 00 00 00 | acmd2       long 0
24044                 | 
24044                 | ' Channel 3 registers
24044                 | 
24044     00 00 00 00 | sstart3     long 0
24048     00 00 00 00 | type3       long 0
2404c     00 00 00 00 | lstart3     long 0
24050     02 00 00 00 | lend3       long 2       		'
24054     00 00 00 00 | vol3        long 0
24058     00 00 00 00 | apan3       long 0
2405c     6B 00 00 00 | freq3       long 107 '109 113 127 131 137 ...
24060     02 00 00 00 | askip3      long 2
24064     00 00 00 00 | acmd3       long 0
24068                 | 
24068                 | ' Channel 4 registers
24068                 | 
24068     00 00 00 00 | sstart4     long 0
2406c     00 00 00 00 | type4       long 0
24070     00 00 00 00 | lstart4     long 0
24074     02 00 00 00 | lend4       long 2       		'
24078     00 00 00 00 | vol4        long 0
2407c     00 00 00 00 | apan4       long 0
24080     6D 00 00 00 | freq4       long 109 '109 113 127 131 137 ...
24084     02 00 00 00 | askip4      long 2
24088     00 00 00 00 | acmd4       long 0
2408c                 | 
2408c                 | ' Channel 5 registers
2408c                 | 
2408c     00 00 00 00 | sstart5     long 0
24090     00 00 00 00 | type5       long 0
24094     00 00 00 00 | lstart5     long 0
24098     02 00 00 00 | lend5       long 2       		'
2409c     00 00 00 00 | vol5        long 0
240a0     00 00 00 00 | apan5       long 0
240a4     71 00 00 00 | freq5       long 113 '109 113 127 131 137 ...
240a8     02 00 00 00 | askip5      long 2
240ac     00 00 00 00 | acmd5       long 0
240b0                 | 
240b0                 | ' Channel 6 registers
240b0                 | 
240b0     00 00 00 00 | sstart6     long 0
240b4     00 00 00 00 | type6       long 0
240b8     00 00 00 00 | lstart6     long 0
240bc     02 00 00 00 | lend6       long 2       		'
240c0     00 00 00 00 | vol6        long 0
240c4     00 00 00 00 | apan6       long 0
240c8     7F 00 00 00 | freq6       long 127 '109 113 127 131 137 ...
240cc     02 00 00 00 | askip6      long 2
240d0     00 00 00 00 | acmd6       long 0
240d4                 | 
240d4                 | ' Channel 7 registers
240d4                 | 
240d4     00 00 00 00 | sstart7     long 0
240d8     00 00 00 00 | type7       long 0
240dc     00 00 00 00 | lstart7     long 0
240e0     02 00 00 00 | lend7       long 2       		'
240e4     00 00 00 00 | vol7        long 0
240e8     00 00 00 00 | apan7       long 0
240ec     83 00 00 00 | freq7       long 131 '109 113 127 131 137 ...
240f0     02 00 00 00 | askip7      long 2
240f4     00 00 00 00 | acmd7       long 0
240f8                 | 
240f8                 | ' Channel 8 registers
240f8                 | 
240f8     00 00 00 00 | sstart8     long 0
240fc     00 00 00 00 | type8       long 0
24100     00 00 00 00 | lstart8     long 0
24104     02 00 00 00 | lend8       long 2       		'
24108     00 00 00 00 | vol8        long 0
2410c     00 00 00 00 | apan8       long 0
24110     83 00 00 00 | freq8       long 131 '109 113 127 131 137 ...
24114     02 00 00 00 | askip8      long 2
24118     00 00 00 00 | acmd8       long 0
2411c                 | 
2411c                 | ' Time variables
2411c                 | 
2411c     00 00 00 00 | time0       long 0    ' Global sample computing time
24120     01 00 00 00 | time1       long 1    ' Local channels time
24124     02 00 00 00 | time2       long 2
24128     03 00 00 00 | time3       long 3
2412c     04 00 00 00 | time4       long 4
24130     05 00 00 00 | time5       long 5
24134     06 00 00 00 | time6       long 6
24138     07 00 00 00 | time7       long 7
2413c     08 00 00 00 | time8       long 8
24140                 | 
24140     00 00 00 00 | oldt0       long 0    'Temporary time variables
24144     00 00 00 00 | cn          long 0
24148     00 00 00 00 | ct          long 0
2414c     00 00 00 00 | dt0         long 0
24150                 | 
24150                 | ' Samples
24150                 | 
24150     00 00 00 00 | ls          long 0    ' Global sample variable
24154     00 00 00 00 | rs          long 0
24158                 | 
24158     00 00 00 00 | ls1         long 0    ' Channel samples
2415c     00 00 00 00 | rs1         long 0
24160     00 00 00 00 | ls2         long 0
24164     00 00 00 00 | rs2         long 0
24168     00 00 00 00 | ls3         long 0
2416c     00 00 00 00 | rs3         long 0
24170     00 00 00 00 | rs4         long 0
24174     00 00 00 00 | ls4         long 0
24178     00 00 00 00 | rs5         long 0
2417c     00 00 00 00 | ls5         long 0
24180     00 00 00 00 | rs6         long 0
24184     00 00 00 00 | ls6         long 0
24188     00 00 00 00 | rs7         long 0
2418c     00 00 00 00 | ls7         long 0
24190     00 00 00 00 | rs8         long 0
24194     00 00 00 00 | ls8         long 0
24198                 | 
24198     44 00 17 00 | dac         long %10111_00000000_01_00010_0     'random dither, as 90 cycles period needed
2419c                 | 
2419c     00 00 00 00 
241a0     00 00 00 00 | null  			long 	0,0           ' for channel reset
241a4                 | 	alignl
241a4                 | __system__dat_
241a4     00 00 00 00 
241a8     00 00 00 00 | 	byte	$00[8]
241ac     03 00 00 00 
241b0     00 00 00 00 
241b4     00 00 00 00 
241b8     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
241bc     00 00 00 00 
241c0     00 00 00 00 
241c4     00 00 00 00 | 	byte	$00[12]
241c8     05 00 00 00 
241cc     00 00 00 00 
241d0     00 00 00 00 
241d4     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
241d8     A0 43 02 00 | 	long	@@@__system__dat_ + 508
241dc     A8 43 02 00 | 	long	@@@__system__dat_ + 516
241e0     00 00 00 00 | 	byte	$00, $00, $00, $00
241e4     B0 43 02 00 | 	long	@@@__system__dat_ + 524
241e8     B8 43 02 00 | 	long	@@@__system__dat_ + 532
241ec     00 00 00 00 
241f0     00 00 00 00 | 	byte	$00[8]
241f4     01 00 00 00 
241f8     06 00 00 00 
241fc     00 00 00 00 
24200     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24204     00 00 00 00 | 	byte	$00, $00, $00, $00
24208     C0 43 02 00 | 	long	@@@__system__dat_ + 540
2420c     C8 43 02 00 | 	long	@@@__system__dat_ + 548
24210     00 00 00 00 | 	byte	$00, $00, $00, $00
24214     D0 43 02 00 | 	long	@@@__system__dat_ + 556
24218     D8 43 02 00 | 	long	@@@__system__dat_ + 564
2421c     00 00 00 00 
24220     00 00 00 00 | 	byte	$00[8]
24224     01 00 00 00 
24228     06 00 00 00 
2422c     00 00 00 00 
24230     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
24234     00 00 00 00 | 	byte	$00, $00, $00, $00
24238     E0 43 02 00 | 	long	@@@__system__dat_ + 572
2423c     E8 43 02 00 | 	long	@@@__system__dat_ + 580
24240     00 00 00 00 | 	byte	$00, $00, $00, $00
24244     F0 43 02 00 | 	long	@@@__system__dat_ + 588
24248     F8 43 02 00 | 	long	@@@__system__dat_ + 596
2424c     00 00 00 00 
      ...             
2439c     00 00 00 00 
243a0     00 00 00 00 | 	byte	$00[344]
243a4     5C 60 00 00 | 	long	@@@__system___tx
243a8     00 00 00 00 | 	byte	$00, $00, $00, $00
243ac     A4 60 00 00 | 	long	@@@__system___rx
243b0     00 00 00 00 | 	byte	$00, $00, $00, $00
243b4     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
243b8     00 00 00 00 | 	byte	$00, $00, $00, $00
243bc     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
243c0     00 00 00 00 | 	byte	$00, $00, $00, $00
243c4     5C 60 00 00 | 	long	@@@__system___tx
243c8     00 00 00 00 | 	byte	$00, $00, $00, $00
243cc     A4 60 00 00 | 	long	@@@__system___rx
243d0     00 00 00 00 | 	byte	$00, $00, $00, $00
243d4     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
243d8     00 00 00 00 | 	byte	$00, $00, $00, $00
243dc     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
243e0     00 00 00 00 | 	byte	$00, $00, $00, $00
243e4     5C 60 00 00 | 	long	@@@__system___tx
243e8     00 00 00 00 | 	byte	$00, $00, $00, $00
243ec     A4 60 00 00 | 	long	@@@__system___rx
243f0     00 00 00 00 | 	byte	$00, $00, $00, $00
243f4     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
243f8     00 00 00 00 | 	byte	$00, $00, $00, $00
243fc     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
24400     00 00 00 00 | 	byte	$00, $00, $00, $00
24404                 | __heap_base
24404     00 00 00 00 
      ...             
25404     00 00 00 00 
25408     00 00 00 00 | 	long	0[1026]
2540c                 | objmem
2540c     00 00 00 00 | 	long	0[1]
25410 118             | 	org	COG_BSS_START
25410 118             | _var01
25410 118             | 	res	1
25410 119             | _var02
25410 119             | 	res	1
25410 11a             | _var03
25410 11a             | 	res	1
25410 11b             | _var04
25410 11b             | 	res	1
25410 11c             | _var05
25410 11c             | 	res	1
25410 11d             | _var06
25410 11d             | 	res	1
25410 11e             | _var07
25410 11e             | 	res	1
25410 11f             | _var08
25410 11f             | 	res	1
25410 120             | _var09
25410 120             | 	res	1
25410 121             | _var10
25410 121             | 	res	1
25410 122             | _var11
25410 122             | 	res	1
25410 123             | _var12
25410 123             | 	res	1
25410 124             | _var13
25410 124             | 	res	1
25410 125             | _var14
25410 125             | 	res	1
25410 126             | _var15
25410 126             | 	res	1
25410 127             | _var16
25410 127             | 	res	1
25410 128             | _var17
25410 128             | 	res	1
25410 129             | _var18
25410 129             | 	res	1
25410 12a             | _var19
25410 12a             | 	res	1
25410 12b             | _var20
25410 12b             | 	res	1
25410 12c             | _var21
25410 12c             | 	res	1
25410 12d             | _var22
25410 12d             | 	res	1
25410 12e             | arg01
25410 12e             | 	res	1
25410 12f             | arg02
25410 12f             | 	res	1
25410 130             | arg03
25410 130             | 	res	1
25410 131             | arg04
25410 131             | 	res	1
25410 132             | arg05
25410 132             | 	res	1
25410 133             | arg06
25410 133             | 	res	1
25410 134             | arg07
25410 134             | 	res	1
25410 135             | local01
25410 135             | 	res	1
25410 136             | local02
25410 136             | 	res	1
25410 137             | local03
25410 137             | 	res	1
25410 138             | local04
25410 138             | 	res	1
25410 139             | local05
25410 139             | 	res	1
25410 13a             | local06
25410 13a             | 	res	1
25410 13b             | local07
25410 13b             | 	res	1
25410 13c             | local08
25410 13c             | 	res	1
25410 13d             | local09
25410 13d             | 	res	1
25410 13e             | local10
25410 13e             | 	res	1
25410 13f             | local11
25410 13f             | 	res	1
25410 140             | local12
25410 140             | 	res	1
25410 141             | local13
25410 141             | 	res	1
25410 142             | local14
25410 142             | 	res	1
25410 143             | local15
25410 143             | 	res	1
25410 144             | local16
25410 144             | 	res	1
25410 145             | local17
25410 145             | 	res	1
25410 146             | local18
25410 146             | 	res	1
25410 147             | local19
25410 147             | 	res	1
25410 148             | local20
25410 148             | 	res	1
25410 149             | local21
25410 149             | 	res	1
25410 14a             | local22
25410 14a             | 	res	1
25410 14b             | local23
25410 14b             | 	res	1
25410 14c             | local24
25410 14c             | 	res	1
25410 14d             | local25
25410 14d             | 	res	1
25410 14e             | local26
25410 14e             | 	res	1
25410 14f             | local27
25410 14f             | 	res	1
25410 150             | local28
25410 150             | 	res	1
25410 151             | local29
25410 151             | 	res	1
25410 152             | local30
25410 152             | 	res	1
25410 153             | local31
25410 153             | 	res	1
25410 154             | local32
25410 154             | 	res	1
25410 155             | local33
25410 155             | 	res	1
25410 156             | local34
25410 156             | 	res	1
25410 157             | local35
25410 157             | 	res	1
25410 158             | local36
25410 158             | 	res	1
25410 159             | local37
25410 159             | 	res	1
25410 15a             | local38
25410 15a             | 	res	1
25410 15b             | local39
25410 15b             | 	res	1
25410 15c             | local40
25410 15c             | 	res	1
25410 15d             | local41
25410 15d             | 	res	1
25410 15e             | local42
25410 15e             | 	res	1
25410 15f             | local43
25410 15f             | 	res	1
25410 160             | local44
25410 160             | 	res	1
25410 161             | local45
25410 161             | 	res	1
25410 162             | local46
25410 162             | 	res	1
25410 163             | local47
25410 163             | 	res	1
25410 164             | local48
25410 164             | 	res	1
25410 165             | local49
25410 165             | 	res	1
25410 166             | local50
25410 166             | 	res	1
25410 167             | local51
25410 167             | 	res	1
25410 168             | local52
25410 168             | 	res	1
25410 169             | local53
25410 169             | 	res	1
25410 16a             | local54
25410 16a             | 	res	1
25410 16b             | local55
25410 16b             | 	res	1
25410 16c             | local56
25410 16c             | 	res	1
25410 16d             | local57
25410 16d             | 	res	1
25410 16e             | local58
25410 16e             | 	res	1
25410 16f             | local59
25410 16f             | 	res	1
25410 170             | local60
25410 170             | 	res	1
25410 171             | local61
25410 171             | 	res	1
25410 172             | local62
25410 172             | 	res	1
25410 173             | local63
25410 173             | 	res	1
25410 174             | local64
25410 174             | 	res	1
25410 175             | local65
25410 175             | 	res	1
25410 176             | local66
25410 176             | 	res	1
25410 177             | local67
25410 177             | 	res	1
25410 178             | local68
25410 178             | 	res	1
25410 179             | local69
25410 179             | 	res	1
25410 17a             | local70
25410 17a             | 	res	1
25410 17b             | local71
25410 17b             | 	res	1
25410 17c             | local72
25410 17c             | 	res	1
25410 17d             | local73
25410 17d             | 	res	1
25410 17e             | local74
25410 17e             | 	res	1
25410 17f             | local75
25410 17f             | 	res	1
25410 180             | local76
25410 180             | 	res	1
25410 181             | local77
25410 181             | 	res	1
25410 182             | local78
25410 182             | 	res	1
25410 183             | local79
25410 183             | 	res	1
25410 184             | local80
25410 184             | 	res	1
25410 185             | muldiva_
25410 185             | 	res	1
25410 186             | muldivb_
25410 186             | 	res	1
25410 187             | 	fit	480
25410 187             | 
