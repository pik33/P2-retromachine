dat
	nop
	cogid	pa
	coginit	pa,##$404
	orgh	$10
	long	0	'reserved
	long	0 ' clock frequency: will default to 160000000
	long	0 ' clock mode: will default to $10007fb
	orgh	$400
 _ret_	mov	result1, #0
	org	0
entry
	cmp	ptra, #0 wz
 if_ne	jmp	#spininit
	mov	ptra, ptr_stackspace_
	rdlong	pa, #20 wz
 if_ne	jmp	#skip_clock_set_
	hubset	#0
	hubset	##16779256
	waitx	##200000
	mov	pa, ##16779259
	hubset	pa
	wrlong	pa, #24
	wrlong	##160000000, #20
	jmp	#skip_clock_set_
	orgf	128
skip_clock_set_
	call	#_program
cogexit
	waitx	##160000
	cogid	arg01
	cogstop	arg01
spininit
	rdlong	objptr, ptra
	add	ptra, #4
	rdlong	result1, ptra
	add	ptra, #4
	rdlong	arg01, ptra
	add	ptra, #4
	rdlong	arg02, ptra
	add	ptra, #4
	rdlong	arg03, ptra
	add	ptra, #4
	rdlong	arg04, ptra
	sub	ptra, #16
	call	result1
	jmp	#cogexit
FCACHE_LOAD_
    pop	fcache_tmpb_
    add	fcache_tmpb_, pa
    push	fcache_tmpb_
    sub	fcache_tmpb_, pa
    shr	pa, #2
    altd	pa
    mov	 0-0, ret_instr_
    sub	pa, #1
    setq	pa
    rdlong	$0, fcache_tmpb_
    jmp	#\$0 ' jmp to cache
ret_instr_
    ret
fcache_tmpb_
    long 0
builtin_bytefill_
        shr	arg03, #1 wc
 if_c   wrbyte	arg02, arg01
 if_c   add	arg01, #1
        movbyts	arg02, #0
builtin_wordfill_
        shr	arg03, #1 wc
 if_c   wrword	arg02, arg01
 if_c   add	arg01, #2
        setword	arg02, arg02, #1
builtin_longfill_
        wrfast	#0,arg01
        cmp	arg03, #0 wz
 if_nz  rep	#1, arg03
 if_nz  wflong	arg02
        ret
COUNT_
    long 0
RETADDR_
    long 0
fp
    long 0
pushregs_
    pop  pa
    pop  RETADDR_
    tjz  COUNT_, #pushregs_done_
    altd  COUNT_, #511
    setq #0-0
    wrlong local01, ptra++
pushregs_done_
    setq #2 ' push 3 registers starting at COUNT_
    wrlong COUNT_, ptra++
    mov    fp, ptra
    jmp  pa
 popregs_
    pop    pa
    setq   #2
    rdlong COUNT_, --ptra
    djf    COUNT_, #popregs__ret
    setq   COUNT_
    rdlong local01, --ptra
popregs__ret
    push   RETADDR_
    jmp    pa

unsdivide_
       setq    #0
       qdiv    muldiva_, muldivb_
       getqx   muldivb_
 _ret_ getqy   muldiva_

divide_
       abs     muldiva_,muldiva_     wc       'abs(x)
       muxc    itmp2_,#%11                    'store sign of x
       abs     muldivb_,muldivb_     wcz      'abs(y)
 if_c  xor     itmp2_,#%10                    'store sign of y
 if_z  ret
       call    #unsdivide_
       test    itmp2_,#1        wc       'restore sign, remainder
       negc    muldiva_,muldiva_ 
       test    itmp2_,#%10      wc       'restore sign, division result
 _ret_ negc    muldivb_,muldivb_

__heap_ptr
	long	@__heap_base
itmp1_
	long	0
itmp2_
	long	0
objptr
	long	@objmem
ptr___struct__s_vfs_file_t_putchar_
	long	@__struct__s_vfs_file_t_putchar
ptr___system__dat__
	long	@__system__dat_
ptr__dat__
	long	@_dat_
ptr__ff_cc_dat__
	long	@_ff_cc_dat_
ptr_stackspace_
	long	@stackspace
result1
	long	0
result2
	long	0
COG_BSS_START
	fit	480
	orgh
hubentry

' 
' function curdir$() as string
_curdir_S
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, #64
	mov	arg01, #65
	call	#__system___gc_alloc_managed
	mov	arg01, result1
	mov	arg02, local01
	call	#_getcwd
	mov	local02, result1 wz
'   r = getcwd(buf, bufsize)
'   if r == 0 then
 if_ne	jmp	#LR__0001
	shl	local01, #2
	mov	arg01, local01
	add	arg01, #1
	call	#__system___gc_alloc_managed
	mov	arg01, result1
	mov	arg02, local01
	call	#_getcwd
	mov	local02, result1
LR__0001
'   return r
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_curdir_S_ret
	ret

_program
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, ##@LR__0682
' _vfs_open_sdcard()
' {
'     return _vfs_open_sdcardx(61, 60, 59, 58);
	mov	arg01, #61
	mov	arg02, #60
	mov	arg03, #59
	mov	arg04, #58
	call	#__vfs_open_sdcardx
	mov	arg02, result1
	mov	arg01, local01
	call	#__mount
	mov	arg01, ##@LR__0683
	call	#_chdir
' 
' ' the next two lines are for testing SD
' mount "/sd", _vfs_open_sdcard()
' chdir "/sd/mod"
' 
' ' the next two lines are for testing the P9 host file system
' 'mount "/host", _vfs_open_host()
' 'chdir "/host/debug"
' 
' print "current directory is: "; curdir$()
	mov	arg01, #0
	call	#__system___getiolock_0110
	mov	arg01, result1
	call	#__system___lockmem
	mov	result1, #0
	mov	arg02, ##@LR__0684
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	call	#_curdir_S
	mov	arg02, result1
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #0
	call	#__system___getiolock_0110
	wrlong	#0, result1
	mov	result1, #0
' print "Listing:"
	mov	arg01, #0
	call	#__system___getiolock_0110
	mov	arg01, result1
	call	#__system___lockmem
	mov	result1, #0
	mov	arg02, ##@LR__0685
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #0
	call	#__system___getiolock_0110
	wrlong	#0, result1
	mov	result1, #0
	mov	arg01, ##@LR__0686
	mov	arg02, #0
'     return _basic_dir(pat, attrib)
	call	#__basic_dir
	wrlong	result1, objptr
' 
' fname = dir$("*.*", 0)
' while fname <> "" and fname <> nil
LR__0002
	mov	local02, #0
	rdlong	arg01, objptr
	mov	arg02, ##@LR__0687
	call	#__system___string_cmp
	cmp	result1, #0 wz
 if_ne	xor	local02, ##-1
	mov	local03, #0
	rdlong	arg01, objptr
	mov	arg02, #0
	call	#__system___string_cmp
	cmp	result1, #0 wz
 if_ne	xor	local03, ##-1
	test	local02, local03 wz
 if_e	jmp	#LR__0003
'   print fname
	mov	arg01, #0
	call	#__system___getiolock_0110
	mov	arg01, result1
	call	#__system___lockmem
	mov	result1, #0
	rdlong	arg02, objptr
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #0
	call	#__system___getiolock_0110
	wrlong	#0, result1
	mov	result1, #0
	mov	arg01, ##@LR__0688
	mov	arg02, #0
'     return _basic_dir(pat, attrib)
	call	#__basic_dir
	wrlong	result1, objptr
	jmp	#LR__0002
LR__0003
' print "done"
	mov	arg01, #0
	call	#__system___getiolock_0110
	mov	arg01, result1
	call	#__system___lockmem
	mov	result1, #0
	mov	arg02, ##@LR__0689
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #0
	call	#__system___getiolock_0110
	wrlong	#0, result1
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_program_ret
	ret

' '
' ' directory handling functions for BASIC
' '
' 
' declare function _basic_dir lib "libsys/basic_dir.c" (pat as string, attrib as integer) as string
__basic_dir
	mov	COUNT_, #10
	call	#pushregs_
	add	ptra, #76
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	jmp	#LR__0005
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	rdbyte	local03, local02 wz
 if_e	jmp	#LR__0005
	rdlong	local01, ptr__dat__ wz
 if_e	jmp	#LR__0004
	rdlong	arg01, ptr__dat__
	call	#_closedir
LR__0004
	mov	local04, ##@LR__0690
	mov	arg01, local04
	call	#_opendir
	mov	local05, result1
	wrlong	local05, ptr__dat__
	add	fp, #8
	rdlong	local01, fp
	add	ptr__dat__, #4
	wrlong	local01, ptr__dat__
	sub	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	ptr__dat__, #4
	wrlong	local01, ptr__dat__
	sub	ptr__dat__, #8
LR__0005
	rdlong	local01, ptr__dat__ wz
'         return "";
 if_e	mov	result1, ##@LR__0691
 if_e	jmp	#LR__0019
'     }
'     for(;;) {
LR__0006
	rdlong	arg01, ptr__dat__
	call	#_readdir
	add	fp, #12
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0007
	rdlong	arg01, ptr__dat__
	call	#_closedir
	wrlong	#0, ptr__dat__
'             closedir(olddir);
'             olddir = 0;
'             return "";
	mov	result1, ##@LR__0692
	jmp	#LR__0019
LR__0007
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	add	ptr__dat__, #8
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, #8
	call	#__pat_match
	cmp	result1, #0 wz
 if_e	jmp	#LR__0006
	add	ptr__dat__, #4
	rdlong	local01, ptr__dat__ wz
	sub	ptr__dat__, #4
 if_e	jmp	#LR__0015
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #4
	mov	local03, fp
	mov	local06, local03
	mov	arg02, local06
	sub	fp, #16
	call	#_stat
	mov	local07, result1
	add	fp, #64
	wrlong	local07, fp
	rdlong	local01, fp wz
	sub	fp, #64
' 
'                 return "";
 if_ne	mov	result1, ##@LR__0693
 if_ne	jmp	#LR__0019
	add	fp, #24
	rdlong	local01, fp
	and	local01, ##61440
	add	fp, #44
	wrlong	local01, fp
	sub	fp, #60
	wrlong	#0, fp
	add	fp, #60
	rdlong	local01, fp
	sub	fp, #68
	cmp	local01, ##4096 wz
 if_ne	jmp	#LR__0008
	add	fp, #8
	rdlong	local01, fp
	or	local01, #16
	wrlong	local01, fp
	sub	fp, #8
	jmp	#LR__0011
LR__0008
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #68
	mov	local01, local04
	cmp	local01, ##8192 wz
 if_e	jmp	#LR__0009
	add	fp, #68
	rdlong	local02, fp
	sub	fp, #68
	mov	local05, local02
	cmp	local05, ##12288 wz
 if_e	jmp	#LR__0009
	add	fp, #68
	rdlong	local06, fp
	sub	fp, #68
	mov	local03, local06
	cmp	local03, ##16384 wz
 if_ne	jmp	#LR__0010
LR__0009
	add	fp, #8
	rdlong	local01, fp
	or	local01, #4
	wrlong	local01, fp
	sub	fp, #8
LR__0010
LR__0011
	add	fp, #12
	rdlong	local04, fp
	sub	fp, #12
	rdbyte	local01, local04
	cmp	local01, #46 wz
 if_ne	jmp	#LR__0012
	add	fp, #8
	rdlong	local01, fp
	or	local01, #2
	wrlong	local01, fp
	sub	fp, #8
LR__0012
	add	fp, #24
	rdlong	local01, fp
	sub	fp, #24
	test	local01, #146 wz
 if_ne	jmp	#LR__0013
	add	fp, #8
	rdlong	local01, fp
	or	local01, #1
	wrlong	local01, fp
	sub	fp, #8
	jmp	#LR__0014
LR__0013
	add	fp, #8
	rdlong	local01, fp
	or	local01, #32
	wrlong	local01, fp
	sub	fp, #8
LR__0014
	add	fp, #8
	rdlong	local01, fp
	sub	fp, #8
	add	ptr__dat__, #4
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, #4
	test	local01, local05 wz
'                 continue;
 if_e	jmp	#LR__0006
LR__0015
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	mov	local08, #0
	loc	pa,	#(@LR__0017-@LR__0016)
	call	#FCACHE_LOAD_
LR__0016
	rdbyte	local09, arg01 wz
 if_ne	add	local08, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0016
LR__0017
	mov	result1, local08
	mov	arg01, result1
	add	arg01, #1
	call	#__system___gc_alloc_managed
	mov	local10, result1
	add	fp, #72
	wrlong	local10, fp
	rdlong	local01, fp wz
	sub	fp, #72
 if_e	jmp	#LR__0018
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #60
	rdlong	arg02, fp
	sub	fp, #12
	call	#__system____builtin_strcpy
LR__0018
'             __builtin_strcpy(string, ent->d_name) ;
'         }
'         return string;
	add	fp, #72
	rdlong	result1, fp
	sub	fp, #72
LR__0019
	mov	ptra, fp
	call	#popregs_
__basic_dir_ret
	ret

' declare function getcwd lib "libc/unix/mount.c" (buf as ubyte pointer, size as integer) as ubyte pointer
_getcwd
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, #56
	mov	arg01, ptr__dat__
	sub	ptr__dat__, #56
	mov	local03, #0
	loc	pa,	#(@LR__0021-@LR__0020)
	call	#FCACHE_LOAD_
LR__0020
	rdbyte	local04, arg01 wz
 if_ne	add	local03, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0020
LR__0021
	mov	result1, local03
	mov	local05, #2
	add	local05, result1
	cmp	local05, local02 wcz
 if_be	jmp	#LR__0022
	add	ptr___system__dat__, #28
	wrlong	#2, ptr___system__dat__
	sub	ptr___system__dat__, #28
'         _seterror( 2 );
'         return  (0) ;
	mov	result1, #0
	jmp	#LR__0025
LR__0022
	add	ptr__dat__, #56
	rdbyte	local06, ptr__dat__
	sub	ptr__dat__, #56
	zerox	local06, #7
	cmp	local06, #47 wz
 if_ne	jmp	#LR__0023
	add	ptr__dat__, #56
	mov	arg02, ptr__dat__
	sub	ptr__dat__, #56
	mov	arg01, local01
	call	#__system____builtin_strcpy
	jmp	#LR__0024
LR__0023
	mov	arg02, ##@LR__0694
	mov	arg01, local01
	call	#__system____builtin_strcpy
LR__0024
'         __builtin_strcpy(buf, "/") ;
'     }
'     return buf;
	mov	result1, local01
LR__0025
	mov	ptra, fp
	call	#popregs_
_getcwd_ret
	ret

_opendir
	mov	COUNT_, #8
	call	#pushregs_
	mov	arg02, arg01
'     return tmpname;
	add	ptr__dat__, #312
	mov	result1, ptr__dat__
	sub	ptr__dat__, #312
	mov	local01, result1
	mov	arg01, local01
	mov	arg03, #0
	call	#___getvfsforfile
	mov	local02, result1 wz
 if_e	jmp	#LR__0026
	add	local02, #32
	rdlong	local03, local02
	sub	local02, #32
	mov	local04, local03 wz
 if_ne	jmp	#LR__0027
LR__0026
	add	ptr___system__dat__, #28
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #28
'         _seterror( 16 );
'         return 0;
	mov	result1, #0
	jmp	#LR__0030
LR__0027
	mov	arg01, #80
'     return _gc_alloc(size);
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local05, result1 wz
 if_ne	jmp	#LR__0028
	add	ptr___system__dat__, #28
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, #28
'         _seterror( 7 );
'         return 0;
	mov	result1, #0
	jmp	#LR__0030
LR__0028
	add	local02, #32
	rdlong	local04, local02
	sub	local02, #32
	rdlong	local03, local04
	add	local04, #4
	rdlong	local06, local04
	mov	arg01, local05
	mov	arg02, local01
	mov	local07, objptr
	mov	objptr, local03
	call	local06
	mov	objptr, local07
	mov	local08, result1 wz
 if_e	jmp	#LR__0029
	add	ptr___system__dat__, #28
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #28
	cmp	local08, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	arg01, local05
'     return _gc_free(ptr);
	call	#__system___gc_free
'         _seterror(r);
'         free(dir);
'         return 0;
	mov	result1, #0
	jmp	#LR__0030
LR__0029
	wrlong	local02, local05
'     }
'     dir->vfs = v;
'     return dir;
	mov	result1, local05
LR__0030
	mov	ptra, fp
	call	#popregs_
_opendir_ret
	ret

_closedir
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local02, #36
	rdlong	local03, local02
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	mov	arg01, local01
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	mov	local07, result1
	mov	arg01, local01
'     return _gc_free(ptr);
	call	#__system___gc_free
'     r = v->closedir(dir);
'     free(dir);
'     return _seterror(r);
	add	ptr___system__dat__, #28
	wrlong	local07, ptr___system__dat__
	sub	ptr___system__dat__, #28
	cmp	local07, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_closedir_ret
	ret

_readdir
	mov	COUNT_, #7
	call	#pushregs_
	rdlong	local01, arg01 wz
	add	arg01, #8
	mov	local02, arg01
'         return 0;
	sub	arg01, #8
 if_e	mov	result1, #0
 if_e	jmp	#LR__0032
	add	local01, #40
	rdlong	local03, local01
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	mov	arg02, local02
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	mov	local07, result1 wz
 if_e	jmp	#LR__0031
	cmps	local07, #0 wcz
 if_a	add	ptr___system__dat__, #28
 if_a	wrlong	local07, ptr___system__dat__
 if_a	sub	ptr___system__dat__, #28
'             _seterror(r);
'         }
'         return 0;
	mov	result1, #0
	jmp	#LR__0032
LR__0031
'     }
'     return D;
	mov	result1, local02
LR__0032
	mov	ptra, fp
	call	#popregs_
_readdir_ret
	ret

_stat
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
'     return tmpname;
	add	ptr__dat__, #312
	mov	result1, ptr__dat__
	sub	ptr__dat__, #312
	mov	local03, result1
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #0
	call	#___getvfsforfile
	mov	local04, result1 wz
 if_e	jmp	#LR__0033
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local06, local05 wz
 if_ne	jmp	#LR__0034
LR__0033
' #line 19 "/home/pik33/flexprop/include/libc/unix/stat.c"
'         return _seterror( 16 );
	add	ptr___system__dat__, #28
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0035
LR__0034
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	mov	local07, arg01
	call	#\builtin_bytefill_
	mov	result1, local07
	add	local04, #44
	rdlong	local06, local04
	rdlong	local05, local06
	add	local06, #4
	rdlong	local08, local06
	mov	arg01, local03
	mov	arg02, local02
	mov	local09, objptr
	mov	objptr, local05
	call	local08
	mov	objptr, local09
' #line 29 "/home/pik33/flexprop/include/libc/unix/stat.c"
'     r = v->stat(name, buf);
' #line 33 "/home/pik33/flexprop/include/libc/unix/stat.c"
'     return r;
LR__0035
	mov	ptra, fp
	call	#popregs_
_stat_ret
	ret

_strncpy
	mov	_var01, arg01
	loc	pa,	#(@LR__0037-@LR__0036)
	call	#FCACHE_LOAD_
' 
' 	dscan = dst;
' 	sscan = src;
' 	count = n;
' 	while (--count >= 0 && (*dscan++ = *sscan++) != '\0')
LR__0036
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_b	jmp	#LR__0038
	rdbyte	_var02, arg02
	wrbyte	_var02, _var01
	add	arg02, #1
	rdbyte	_var03, _var01 wz
' 		continue;
	add	_var01, #1
 if_ne	jmp	#LR__0036
LR__0037
LR__0038
	loc	pa,	#(@LR__0040-@LR__0039)
	call	#FCACHE_LOAD_
' 	while (--count >= 0)
LR__0039
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_ae	wrbyte	#0, _var01
 if_ae	add	_var01, #1
 if_ae	jmp	#LR__0039
LR__0040
' 		*dscan++ = '\0';
' 	return(dst);
	mov	result1, arg01
_strncpy_ret
	ret

_strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__0045
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0045
' 	{
' 	    for (dscan = dst; *dscan != '\0'; dscan++)
	mov	_var05, _var01
	loc	pa,	#(@LR__0043-@LR__0041)
	call	#FCACHE_LOAD_
LR__0041
	rdbyte	_var06, _var05 wz
' 		continue;
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__0041
	mov	_var07, _var03
' 	    count = n;
' 	    while ((c = *sscan++) != '\0' && --count >= 0)
LR__0042
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__0044
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wcz
 if_ae	wrbyte	_var10, _var05
 if_ae	add	_var05, #1
 if_ae	jmp	#LR__0042
LR__0043
LR__0044
	mov	_var06, #0
	wrbyte	#0, _var05
LR__0045
' 		*dscan++ = c;
' 	    *dscan = '\0';
' 	}
' 	return(dst);
	mov	result1, _var01
_strncat_ret
	ret

_strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0046
' 		return scan2 ? -1 : 0;
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#_strncmp_ret
LR__0046
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#_strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0048-@LR__0047)
	call	#FCACHE_LOAD_
' 	count = n;
' 	do {
LR__0047
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0049
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0049
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0047
LR__0048
LR__0049
	cmps	_var05, #0 wcz
' 		return(0);
 if_b	mov	result1, #0
 if_b	jmp	#_strncmp_ret
	cmp	_var06, _var09 wz
' 		return(0);
 if_e	mov	result1, #0
 if_e	jmp	#_strncmp_ret
	cmp	_var06, #0 wz
' 		return(-1);
 if_e	neg	result1, #1
 if_e	jmp	#_strncmp_ret
	cmp	_var09, #0 wz
' 		return(1);
 if_e	mov	result1, #1
' 		return(c1 - c2);
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
_strncmp_ret
	ret

_getlower_0133
	cmps	arg01, #65 wcz
 if_b	jmp	#LR__0050
	cmps	arg01, #90 wcz
'         return c + ('a' - 'A');
 if_be	mov	result1, arg01
 if_be	add	result1, #32
 if_be	jmp	#_getlower_0133_ret
LR__0050
'     }
'     return c;
	mov	result1, arg01
_getlower_0133_ret
	ret

__pat_match
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
' 
'     while (*pattern && *name && *pattern != '*') {
LR__0051
	rdbyte	local03, local02 wz
 if_e	jmp	#LR__0052
	rdbyte	local04, local01 wz
 if_e	jmp	#LR__0052
	rdbyte	local05, local02
	cmp	local05, #42 wz
 if_e	jmp	#LR__0052
	rdbyte	arg01, local02
	call	#_getlower_0133
	mov	local06, result1
	rdbyte	arg01, local01
	call	#_getlower_0133
	mov	local07, result1
	cmp	local07, local06 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0061
	add	local01, #1
	add	local02, #1
	jmp	#LR__0051
LR__0052
	rdbyte	local03, local02
	cmp	local03, #42 wz
 if_ne	jmp	#LR__0059
	add	local02, #1
	rdbyte	local03, local02
	sub	local02, #1
	zerox	local03, #7
	cmp	local03, #46 wz
 if_ne	jmp	#LR__0053
	add	local02, #2
	rdbyte	local08, local02
	sub	local02, #2
	mov	local05, local08
	zerox	local05, #7
	cmp	local05, #42 wz
 if_ne	jmp	#LR__0053
	add	local02, #3
	rdbyte	local09, local02
	sub	local02, #3
	mov	local10, local09 wz
'             return 1;
 if_e	mov	result1, #1
 if_e	jmp	#LR__0061
LR__0053
	add	local02, #1
'         }
' 
'         pattern++;
'         for (pat_len = 0; pattern[pat_len] != 0; pat_len++) ;
	mov	local11, #0
	loc	pa,	#(@LR__0056-@LR__0054)
	call	#FCACHE_LOAD_
LR__0054
	mov	local04, local11
	add	local04, local02
	rdbyte	local03, local04 wz
 if_ne	add	local11, #1
 if_ne	jmp	#LR__0054
'         for (name_len = 0; name[name_len] != 0; name_len++) ;
	mov	local12, #0
LR__0055
	mov	local04, local12
	add	local04, local01
	rdbyte	local03, local04 wz
 if_ne	add	local12, #1
 if_ne	jmp	#LR__0055
LR__0056
	cmps	local12, local11 wcz
 if_b	mov	result1, #0
 if_b	jmp	#LR__0061
	mov	local05, local12
	sub	local05, local11
	add	local01, local05
'         name += (name_len - pat_len);
'         while (pat_len > 0) {
LR__0057
	cmps	local11, #0 wcz
 if_be	jmp	#LR__0058
	rdbyte	arg01, local01
	call	#_getlower_0133
	mov	local05, result1
	rdbyte	arg01, local02
	call	#_getlower_0133
	cmp	local05, result1 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0061
	add	local01, #1
	add	local02, #1
	sub	local11, #1
	jmp	#LR__0057
LR__0058
LR__0059
	rdbyte	local03, local02 wz
 if_ne	jmp	#LR__0060
	rdbyte	local04, local01 wz
'         return 1;
 if_e	mov	result1, #1
 if_e	jmp	#LR__0061
LR__0060
'     }
'     return 0;
	mov	result1, #0
LR__0061
	mov	ptra, fp
	call	#popregs_
__pat_match_ret
	ret

__vfs_open_sdcardx
	mov	COUNT_, #6
	call	#pushregs_
	add	ptr__dat__, ##572
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg05, arg04
	mov	arg01, #0
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	mov	local04, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##572
	call	#_ff_cc_disk_setpins
	mov	objptr, local04
	mov	local05, result1 wz
 if_ne	jmp	#LR__0062
	add	ptr__dat__, ##572
	mov	local06, ptr__dat__
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##572
	mov	arg02, ##@LR__0695
	mov	arg03, #0
	mov	local04, objptr
	mov	objptr, local06
	call	#_ff_cc_f_mount
	mov	objptr, local04
	mov	local05, result1
LR__0062
	cmp	local05, #0 wz
 if_e	jmp	#LR__0063
	neg	arg01, local05 wz
	add	ptr___system__dat__, #28
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #28
' #line 26 "/home/pik33/flexprop/include/filesys/fatfs/fatfs_vfs.c"
'        _seterror(-r);
'        return 0;
	mov	result1, #0
	jmp	#LR__0064
LR__0063
' get_vfs()
' {
'     return &fat_vfs;
	add	ptr__ff_cc_dat__, #192
	mov	result1, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #192
'     }
'     v = FFS.get_vfs();
' #line 36 "/home/pik33/flexprop/include/filesys/fatfs/fatfs_vfs.c"
'     return v;
LR__0064
	mov	ptra, fp
	call	#popregs_
__vfs_open_sdcardx_ret
	ret

_chdir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #64
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_stat
	add	fp, #60
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0065
' #line 143 "/home/pik33/flexprop/include/libc/unix/mount.c"
'         return r;
	add	fp, #60
	rdlong	result1, fp
	sub	fp, #60
	jmp	#LR__0069
LR__0065
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	and	local01, ##61440
	cmp	local01, ##4096 wz
 if_e	jmp	#LR__0066
' #line 149 "/home/pik33/flexprop/include/libc/unix/mount.c"
'         return _seterror( 13 );
	add	ptr___system__dat__, #28
	wrlong	#13, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0069
LR__0066
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	rdbyte	local01, local02
	cmp	local01, #47 wz
 if_ne	jmp	#LR__0067
	add	ptr__dat__, #56
	mov	arg01, ptr__dat__
	sub	ptr__dat__, #56
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0068
LR__0067
'     return tmpname;
	add	ptr__dat__, #312
	mov	result1, ptr__dat__
	add	fp, #56
	wrlong	result1, fp
	mov	arg01, result1
	sub	fp, #56
	sub	ptr__dat__, #256
	mov	arg02, ptr__dat__
	sub	ptr__dat__, #56
	mov	arg03, #256
	call	#_strncpy
	add	fp, #56
	rdlong	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #4
	add	ptr__dat__, #56
	mov	arg03, ptr__dat__
	sub	ptr__dat__, #56
	call	#___getvfsforfile
LR__0068
'         tmp = __getfilebuffer();
'         strncpy(tmp, curdir,  (256) );
'         __getvfsforfile(tmp, path, curdir);
'     }
'     return 0;
	mov	result1, #0
LR__0069
	mov	ptra, fp
	call	#popregs_
_chdir_ret
	ret

___getvfsforfile
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdbyte	local04, local02
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0070
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0073
LR__0070
	add	ptr__dat__, #56
	mov	arg02, ptr__dat__
	sub	ptr__dat__, #56
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncpy
	mov	local05, result1
	rdbyte	local04, local02 wz
 if_e	jmp	#LR__0072
	rdbyte	local06, local02
	cmp	local06, #46 wz
 if_ne	jmp	#LR__0071
	add	local02, #1
	rdbyte	local07, local02
	sub	local02, #1
	mov	local08, local07
	zerox	local08, #7 wz
 if_e	jmp	#LR__0072
LR__0071
	mov	arg02, ##@LR__0696
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncat
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncat
LR__0072
LR__0073
'             strncat(name, "/",  (256) );
'             strncat(name, orig_name,  (256) );
'         }
'     }
'     for (i = 0; i <  4 ; i++) {
	mov	local09, #0
LR__0074
	cmps	local09, #4 wcz
 if_ae	jmp	#LR__0085
	mov	local04, local09
	shl	local04, #2
	add	ptr__dat__, #24
	add	local04, ptr__dat__
	rdlong	local08, local04 wz
	sub	ptr__dat__, #24
 if_e	jmp	#LR__0084
	mov	local04, local09
	shl	local04, #2
	add	ptr__dat__, #24
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, #24
	mov	local10, #0
	loc	pa,	#(@LR__0076-@LR__0075)
	call	#FCACHE_LOAD_
LR__0075
	rdbyte	local11, arg01 wz
 if_ne	add	local10, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0075
LR__0076
	mov	result1, local10
	mov	local12, result1
	mov	local06, local12
	add	local06, local01
	rdbyte	local04, local06
	cmp	local04, #47 wz
 if_e	jmp	#LR__0077
	mov	local05, local12
	add	local05, local01
	rdbyte	local07, local05 wz
 if_ne	jmp	#LR__0083
LR__0077
	mov	arg01, local01
	mov	local13, local09
	shl	local13, #2
	add	ptr__dat__, #24
	add	local13, ptr__dat__
	rdlong	arg02, local13
	mov	arg03, local12
	sub	ptr__dat__, #24
	call	#_strncmp
	mov	local14, result1 wz
 if_ne	jmp	#LR__0083
	mov	local04, local09
	shl	local04, #2
	add	ptr__dat__, #40
	add	local04, ptr__dat__
	rdlong	local15, local04
' 
'             while (name[len+1] == '.' && (name[len+2] == '/' || name[len+2] == 0)) {
	sub	ptr__dat__, #40
	loc	pa,	#(@LR__0080-@LR__0078)
	call	#FCACHE_LOAD_
LR__0078
	mov	local08, local12
	add	local08, #1
	add	local08, local01
	rdbyte	local04, local08
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0081
	mov	local16, local12
	add	local16, #2
	add	local16, local01
	rdbyte	local05, local16
	cmp	local05, #47 wz
 if_e	jmp	#LR__0079
	mov	local17, local12
	add	local17, #2
	add	local17, local01
	rdbyte	local18, local17 wz
 if_ne	jmp	#LR__0081
LR__0079
	add	local12, #1
	jmp	#LR__0078
LR__0080
LR__0081
	cmp	local03, #0 wz
 if_e	jmp	#LR__0082
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #256
	call	#_strncpy
LR__0082
	mov	arg01, local01
	mov	arg02, local01
	add	arg02, local12
	add	arg02, #1
	call	#__system____builtin_strcpy
'                 strncpy(full_path, name,  (256) );
'             }
'             __builtin_strcpy(name, name+len+1) ;
' #line 57 "/home/pik33/flexprop/include/libc/unix/mount.c"
'             return v;
	mov	result1, local15
	jmp	#LR__0086
LR__0083
LR__0084
	add	local09, #1
	jmp	#LR__0074
LR__0085
	add	ptr___system__dat__, ##580
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##580
'         }
'     }
'     v = _getrootvfs();
' #line 64 "/home/pik33/flexprop/include/libc/unix/mount.c"
'     return v;
LR__0086
	mov	ptra, fp
	call	#popregs_
___getvfsforfile_ret
	ret

__mount
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	neg	local03, #1
	rdbyte	local04, local01
	cmp	local04, #47 wz
 if_e	jmp	#LR__0087
' #line 79 "/home/pik33/flexprop/include/libc/unix/mount.c"
'         return _seterror( 10 );
	add	ptr___system__dat__, #28
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0098
LR__0087
'     }
'     for (i = 0; i <  4 ; i++) {
	mov	local05, #0
LR__0088
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0094
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, #24
	add	local04, ptr__dat__
	rdlong	local06, local04 wz
	sub	ptr__dat__, #24
 if_ne	jmp	#LR__0089
	cmps	local03, #0 wcz
 if_b	mov	local03, local05
'                 firstfree = i;
'                 continue;
 if_b	jmp	#LR__0093
LR__0089
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, #24
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, #24
	mov	local07, #0
	loc	pa,	#(@LR__0091-@LR__0090)
	call	#FCACHE_LOAD_
LR__0090
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0090
LR__0091
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0092
	mov	arg01, local01
	mov	local11, local05
	shl	local11, #2
	add	ptr__dat__, #24
	add	local11, ptr__dat__
	rdlong	arg02, local11
	mov	arg03, local09
	sub	ptr__dat__, #24
	call	#_strncmp
	cmp	result1, #0 wz
 if_e	mov	local03, local05
'             firstfree = i;
'             break;
 if_e	jmp	#LR__0094
LR__0092
LR__0093
	add	local05, #1
	jmp	#LR__0088
LR__0094
	cmp	local03, ##-1 wz
 if_ne	jmp	#LR__0095
' #line 98 "/home/pik33/flexprop/include/libc/unix/mount.c"
'         return _seterror( 11 );
	add	ptr___system__dat__, #28
	wrlong	#11, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0098
LR__0095
	mov	local05, local03
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, #40
	add	local04, ptr__dat__
	wrlong	local02, local04
	cmp	local02, #0 wz
	sub	ptr__dat__, #40
 if_ne	jmp	#LR__0096
	shl	local05, #2
	add	ptr__dat__, #24
	add	local05, ptr__dat__
	wrlong	#0, local05
	sub	ptr__dat__, #24
	jmp	#LR__0097
LR__0096
	shl	local05, #2
	add	ptr__dat__, #24
	add	local05, ptr__dat__
	wrlong	local01, local05
	sub	ptr__dat__, #24
LR__0097
'         mounttab[i] = name;
' #line 112 "/home/pik33/flexprop/include/libc/unix/mount.c"
'     }
'     return 0;
	mov	result1, #0
LR__0098
	mov	ptra, fp
	call	#popregs_
__mount_ret
	ret

_ff_cc_disk_initialize
	mov	COUNT_, #8
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrbyte	arg01, fp
	add	ptr__ff_cc_dat__, #380
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #28
	wrlong	local01, fp
	sub	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #8
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #388
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #40
	rdbyte	local01, fp wz
	sub	fp, #4
' #line 420 "/home/pik33/flexprop/include/filesys/fatfs/sdmm.cc"
'             return RES_NOTRDY;
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0112
	mov	arg01, ##10000
	call	#__system___waitus
	add	fp, #32
	rdlong	arg01, fp
	dirh	arg01
	drvh	arg01
	waitx	#16
	add	fp, #4
	rdlong	arg01, fp
	dirh	arg01
	drvl	arg01
	waitx	#16
	add	fp, #4
	rdlong	arg01, fp
	dirh	arg01
	add	fp, #4
	rdlong	arg01, fp
	fltl	arg01
'         }
' 
' 	dly_us(10000);
' 	_dirh(PIN_SS) ;  (_pinh(PIN_SS), (_waitx(16)) ) ;
' 	_dirh(PIN_CLK) ;  (_pinl(PIN_CLK), (_waitx(16)) ) ;
' 	_dirh(PIN_DI) ;
' 	_fltl(PIN_DO) ;
' 
' 	for (n = 100; n; n--) rcvr_mmc(buf, 1);
	sub	fp, #36
	wrbyte	#100, fp
	sub	fp, #8
LR__0099
	add	fp, #8
	rdbyte	local02, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0100
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #8
	rdbyte	local03, fp
	rdbyte	local04, fp
	mov	local05, local04
	sub	local05, #1
	wrbyte	local05, fp
	sub	fp, #8
	jmp	#LR__0099
LR__0100
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
	mov	arg01, #0
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0111
	mov	arg01, #8
	mov	arg02, #426
	call	#_ff_cc_send_cmd_0678
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0103
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #22
	rdbyte	local01, fp
	sub	fp, #22
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0110
	add	fp, #23
	rdbyte	local06, fp
	sub	fp, #23
	zerox	local06, #7
	cmp	local06, #170 wz
 if_ne	jmp	#LR__0110
' 				for (tmr = 1000; tmr; tmr--) {
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0101
	add	fp, #24
	rdlong	local06, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0102
	mov	arg01, #169
	decod	arg02, #30
	call	#_ff_cc_send_cmd_0678
	mov	local07, result1
	zerox	local07, #7 wz
 if_e	jmp	#LR__0102
	mov	arg01, ##1000
	call	#__system___waitus
	add	fp, #24
	rdlong	local05, fp
	sub	local05, #1
	wrlong	local05, fp
	sub	fp, #24
	jmp	#LR__0101
LR__0102
	add	fp, #24
	rdlong	local02, fp
	sub	fp, #24
	mov	local01, local02 wz
 if_e	jmp	#LR__0110
	mov	arg01, #58
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0110
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #20
	rdbyte	local02, fp
	test	local02, #64 wz
 if_ne	mov	local01, #12
 if_e	mov	local01, #4
	sub	fp, #8
	wrbyte	local01, fp
	sub	fp, #12
	jmp	#LR__0110
LR__0103
	mov	arg01, #169
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wcz
 if_a	jmp	#LR__0104
	add	fp, #12
	wrbyte	#2, fp
	add	fp, #4
	wrbyte	#169, fp
	sub	fp, #16
	jmp	#LR__0105
LR__0104
	add	fp, #12
	wrbyte	#1, fp
	add	fp, #4
	wrbyte	#1, fp
	sub	fp, #16
LR__0105
' 				ty =  0x01 ; cmd =  (1) ;
' 			}
' 			for (tmr = 1000; tmr; tmr--) {
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0106
	add	fp, #24
	rdlong	local02, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0107
	add	fp, #16
	rdbyte	arg01, fp
	sub	fp, #16
	mov	local04, #0
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	mov	local08, result1
	mov	local07, local08
	zerox	local07, #7 wz
 if_e	jmp	#LR__0107
	mov	arg01, ##1000
	call	#__system___waitus
	add	fp, #24
	rdlong	local03, fp
	mov	local04, local03
	mov	local05, local04
	sub	local05, #1
	wrlong	local05, fp
	sub	fp, #24
	jmp	#LR__0106
LR__0107
	add	fp, #24
	rdlong	local02, fp
	sub	fp, #24
	mov	local01, local02 wz
 if_e	jmp	#LR__0108
	mov	local07, #16
	decod	local03, #9
	mov	arg01, #16
	decod	arg02, #9
	call	#_ff_cc_send_cmd_0678
	mov	local05, result1
	mov	local06, local05
	zerox	local06, #7 wz
 if_e	jmp	#LR__0109
LR__0108
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
LR__0109
LR__0110
LR__0111
	add	fp, #12
	rdbyte	local01, fp
	add	ptr__ff_cc_dat__, #393
	wrbyte	local01, ptr__ff_cc_dat__
	rdbyte	local02, fp wz
 if_ne	mov	local01, #0
 if_e	mov	local01, #1
	add	fp, #16
	wrbyte	local01, fp
	rdbyte	local01, fp
	sub	fp, #28
	sub	ptr__ff_cc_dat__, #1
	wrbyte	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #392
	call	#_ff_cc_deselect_0666
' 
'                             ty = 0;
'                         }
' 		}
' 	}
' #line 467 "/home/pik33/flexprop/include/filesys/fatfs/sdmm.cc"
' 	CardType = ty;
' 	s = ty ? 0 :  0x01 ;
' 	Stat = s;
' 
' 	deselect();
' 
' 	return s;
	add	fp, #28
	rdbyte	result1, fp
	sub	fp, #28
LR__0112
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_initialize_ret
	ret

_ff_cc_disk_read
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg04
	mov	local03, arg03
	cmp	arg01, #0 wz
 if_ne	mov	result1, #1
' 
' 	return Stat;
 if_e	add	ptr__ff_cc_dat__, #392
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #392
	mov	local04, result1
	zerox	local04, #7
	test	local04, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0116
	add	ptr__ff_cc_dat__, #393
	rdbyte	local04, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #393
	zerox	local04, #7
	and	local04, #8 wz
 if_e	shl	local03, #9
	cmp	local02, #1 wcz
 if_a	mov	local04, #18
 if_be	mov	local04, #17
	mov	local05, local04
	mov	arg01, local05
	mov	arg02, local03
	call	#_ff_cc_send_cmd_0678
	mov	local04, result1
	zerox	local04, #7 wz
 if_ne	jmp	#LR__0115
' 		do {
LR__0113
	mov	arg01, local01
	decod	arg02, #9
	call	#_ff_cc_rcvr_datablock_0672
	cmp	result1, #0 wz
 if_ne	add	local01, ##512
 if_ne	djnz	local02, #LR__0113
	zerox	local05, #7
	cmp	local05, #18 wz
 if_ne	jmp	#LR__0114
	mov	arg01, #12
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
LR__0114
LR__0115
	call	#_ff_cc_deselect_0666
' 	}
' 	deselect();
' 
' 	return count ? RES_ERROR : RES_OK;
	cmp	local02, #0 wz
 if_ne	mov	local04, #1
 if_e	mov	local04, #0
	mov	result1, local04
LR__0116
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_read_ret
	ret

_ff_cc_disk_write
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, local03
 if_ne	mov	result1, #1
' 
' 	return Stat;
 if_e	add	ptr__ff_cc_dat__, #392
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #392
	mov	local06, result1
	zerox	local06, #7
	test	local06, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0122
	add	ptr__ff_cc_dat__, #393
	rdbyte	local06, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #393
	zerox	local06, #7
	test	local06, #8 wz
 if_e	shl	local05, #9
	cmp	local04, #1 wz
 if_ne	jmp	#LR__0117
	mov	arg02, local05
	mov	arg01, #24
	call	#_ff_cc_send_cmd_0678
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0121
	mov	arg01, local02
	mov	arg02, #254
	call	#_ff_cc_xmit_datablock_0674
	mov	local07, result1 wz
 if_ne	mov	local04, #0
	jmp	#LR__0121
LR__0117
	add	ptr__ff_cc_dat__, #393
	rdbyte	local06, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #393
	zerox	local06, #7
	test	local06, #6 wz
 if_e	jmp	#LR__0118
	mov	arg01, #151
	mov	arg02, local04
	call	#_ff_cc_send_cmd_0678
LR__0118
	mov	arg02, local05
	mov	arg01, #25
	call	#_ff_cc_send_cmd_0678
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0120
' 			do {
LR__0119
	mov	arg01, local02
	mov	arg02, #252
	call	#_ff_cc_xmit_datablock_0674
	cmp	result1, #0 wz
 if_ne	add	local02, ##512
 if_ne	djnz	local04, #LR__0119
	mov	arg01, #0
	mov	arg02, #253
	call	#_ff_cc_xmit_datablock_0674
	cmp	result1, #0 wz
 if_e	mov	local04, #1
LR__0120
LR__0121
	call	#_ff_cc_deselect_0666
' 				count = 1;
' 		}
' 	}
' 	deselect();
' 
' 	return count ? RES_ERROR : RES_OK;
	cmp	local04, #0 wz
 if_ne	mov	local06, #1
 if_e	mov	local06, #0
	mov	result1, local06
LR__0122
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_write_ret
	ret

_ff_cc_disk_ioctl
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	mov	local02, local01
	mov	arg01, local02 wz
 if_ne	mov	result1, #1
' 
' 	return Stat;
 if_e	add	ptr__ff_cc_dat__, #392
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #392
	mov	local03, result1
	mov	local04, local03
	zerox	local04, #7
	test	local04, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0131
	add	fp, #16
	wrlong	#1, fp
' 
' 	res = RES_ERROR;
' 	switch (ctrl) {
	sub	fp, #8
	rdbyte	local04, fp
	sub	fp, #8
	mov	local05, local04
	zerox	local05, #7
	fle	local05, #4
	jmprel	local05
LR__0123
	jmp	#LR__0124
	jmp	#LR__0125
	jmp	#LR__0129
	jmp	#LR__0128
	jmp	#LR__0129
LR__0124
	call	#_ff_cc_select_0669
	cmp	result1, #0 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#0, fp
 if_ne	sub	fp, #16
' 			break;
	jmp	#LR__0130
LR__0125
	mov	arg01, #9
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	mov	local02, result1
	zerox	local02, #7 wz
 if_ne	jmp	#LR__0130
	add	fp, #24
	mov	arg01, fp
	sub	fp, #24
	mov	arg02, #16
	call	#_ff_cc_rcvr_datablock_0672
	mov	local06, result1 wz
 if_e	jmp	#LR__0130
	add	fp, #24
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	shr	local02, #6
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0126
	add	fp, #33
	rdbyte	local02, fp
	sub	fp, #1
	rdbyte	local03, fp
	zerox	local03, #15
	shl	local03, #8
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #63
	shl	local07, #16
	add	local02, local07
	add	local02, #1
	add	fp, #9
	wrlong	local02, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #40
	shl	local03, #10
	wrlong	local03, local01
	jmp	#LR__0127
LR__0126
	add	fp, #29
	rdbyte	local02, fp
	and	local02, #15
	add	fp, #5
	rdbyte	local03, fp
	and	local03, #128
	sar	local03, #7
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #3
	shl	local07, #1
	add	local02, local07
	add	local02, #2
	sub	fp, #13
	wrbyte	local02, fp
	add	fp, #12
	rdbyte	local02, fp
	shr	local02, #6
	sub	fp, #1
	rdbyte	local03, fp
	zerox	local03, #15
	shl	local03, #2
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #3
	zerox	local07, #15
	shl	local07, #10
	add	local02, local07
	add	local02, #1
	add	fp, #10
	wrlong	local02, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #20
	rdbyte	local07, fp
	sub	fp, #20
	zerox	local07, #7
	sub	local07, #9
	shl	local03, local07
	wrlong	local03, local01
LR__0127
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
' 					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
' 					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
' 					*(LBA_t*)buff = cs << (n - 9);
' 				}
' 				res = RES_OK;
' 			}
' 			break;
	jmp	#LR__0130
LR__0128
	add	fp, #12
	rdlong	local02, fp
	wrlong	#128, local02
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #16
' 			*(DWORD*)buff = 128;
' 			res = RES_OK;
' 			break;
	jmp	#LR__0130
LR__0129
	mov	local02, #4
	add	fp, #16
	wrlong	#4, fp
	sub	fp, #16
LR__0130
	call	#_ff_cc_deselect_0666
' 			res = RES_PARERR;
' 	}
' 
' 	deselect();
' 
' 	return res;
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0131
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_ioctl_ret
	ret

_ff_cc_disk_setpins
	cmp	arg01, #0 wz
 if_ne	neg	result1, #1
 if_ne	jmp	#_ff_cc_disk_setpins_ret
	add	ptr__ff_cc_dat__, #376
	wrlong	arg02, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg03, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg04, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg05, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #388
	mov	result1, #0
_ff_cc_disk_setpins_ret
	ret

_ff_cc_ld_word_0176
	add	arg01, #1
	rdbyte	result1, arg01
	sub	arg01, #1
	zerox	result1, #7
	zerox	result1, #15
	shl	result1, #8
	rdbyte	_var01, arg01
	or	result1, _var01
' {
' 	WORD rv;
' 
' 	rv = ptr[1];
' 	rv = rv << 8 | ptr[0];
' 	return rv;
_ff_cc_ld_word_0176_ret
	ret

_ff_cc_ld_dword_0178
	add	arg01, #3
	rdbyte	result1, arg01
	shl	result1, #8
	sub	arg01, #1
	rdbyte	_var01, arg01
	or	result1, _var01
	shl	result1, #8
	sub	arg01, #1
	rdbyte	_var01, arg01
	sub	arg01, #1
	zerox	_var01, #7
	or	result1, _var01
	shl	result1, #8
	rdbyte	_var01, arg01
	or	result1, _var01
' {
' 	DWORD rv;
' 
' 	rv = ptr[3];
' 	rv = rv << 8 | ptr[2];
' 	rv = rv << 8 | ptr[1];
' 	rv = rv << 8 | ptr[0];
' 	return rv;
_ff_cc_ld_dword_0178_ret
	ret

_ff_cc_st_word_0179
	mov	_var01, arg02
	zerox	_var01, #15
	wrbyte	_var01, arg01
	zerox	arg02, #15
	shr	arg02, #8
	add	arg01, #1
	zerox	arg02, #15
	wrbyte	arg02, arg01
_ff_cc_st_word_0179_ret
	ret

_ff_cc_st_dword_0180
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
_ff_cc_st_dword_0180_ret
	ret

_ff_cc_mem_cpy_0183
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0136
' 		do {
	loc	pa,	#(@LR__0134-@LR__0132)
	call	#FCACHE_LOAD_
LR__0132
	rep	@LR__0135, arg03
LR__0133
	mov	_var01, arg02
	add	_var01, #1
	rdbyte	_var02, arg02
	mov	arg02, _var01
	wrbyte	_var02, arg01
	add	arg01, #1
LR__0134
LR__0135
LR__0136
_ff_cc_mem_cpy_0183_ret
	ret

_ff_cc_mem_cmp_0189
	loc	pa,	#(@LR__0138-@LR__0137)
	call	#FCACHE_LOAD_
' 
' 	do {
LR__0137
	rdbyte	_var01, arg01
	rdbyte	_var02, arg02
	sub	_var01, _var02
	sub	arg03, #1
	mov	arg03, arg03 wz
	add	arg01, #1
	add	arg02, #1
 if_e	jmp	#LR__0139
	cmp	_var01, #0 wz
 if_e	jmp	#LR__0137
LR__0138
LR__0139
' 
' 	return r;
	mov	result1, _var01
_ff_cc_mem_cmp_0189_ret
	ret

_ff_cc_chk_chr_0190
	loc	pa,	#(@LR__0141-@LR__0140)
	call	#FCACHE_LOAD_
' {
' 	while (*str && *str != chr) str++;
LR__0140
	rdbyte	_var01, arg01 wz
 if_e	jmp	#LR__0142
	rdbyte	_var02, arg01
	cmp	_var02, arg02 wz
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0140
LR__0141
LR__0142
' 	return *str;
	rdbyte	result1, arg01
_ff_cc_chk_chr_0190_ret
	ret

_ff_cc_sync_window_0194
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #3
	rdbyte	local03, local01 wz
	sub	local01, #3
 if_e	jmp	#LR__0145
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #44
	mov	arg04, #1
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0143
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	rdlong	local03, local01
	sub	local01, #12
	rdlong	local04, local01
	sub	local03, local04
	sub	local01, #8
	rdlong	local05, local01
	sub	local01, #24
	cmp	local03, local05 wcz
 if_ae	jmp	#LR__0144
	add	local01, #2
	rdbyte	local03, local01
	sub	local01, #2
	zerox	local03, #7
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0144
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #20
	rdlong	local06, local01
	add	arg03, local06
	mov	arg04, #1
	call	#_ff_cc_disk_write
	jmp	#LR__0144
LR__0143
	mov	local02, #1
LR__0144
LR__0145
' 			res = FR_DISK_ERR;
' 		}
' 	}
' 	return res;
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_sync_window_0194_ret
	ret

_ff_cc_move_window_0196
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	add	local01, #44
	rdlong	local04, local01
	sub	local01, #44
	cmp	local02, local04 wz
 if_e	jmp	#LR__0147
	mov	arg01, local01
	call	#_ff_cc_sync_window_0194
	mov	local03, result1 wz
 if_ne	jmp	#LR__0146
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #48
	mov	arg03, local02
	mov	arg04, #1
	call	#_ff_cc_disk_read
	cmp	result1, #0 wz
 if_ne	neg	local02, #1
 if_ne	mov	local03, #1
	add	local01, #44
	wrlong	local02, local01
LR__0146
LR__0147
' 				sect = (LBA_t)0 - 1;
' 				res = FR_DISK_ERR;
' 			}
' 			fs->winsect = sect;
' 		}
' 	}
' 	return res;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_move_window_0196_ret
	ret

_ff_cc_sync_fs_0198
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	call	#_ff_cc_sync_window_0194
	mov	local02, result1 wz
 if_ne	jmp	#LR__0153
	rdbyte	local03, local01
	cmp	local03, #3 wz
 if_ne	jmp	#LR__0152
	add	local01, #4
	rdbyte	local04, local01
	sub	local01, #4
	zerox	local04, #7
	cmp	local04, #1 wz
 if_ne	jmp	#LR__0152
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, #0
	decod	arg03, #9
' {
' 	BYTE *d = (BYTE*)dst;
' 
' 	do {
	loc	pa,	#(@LR__0150-@LR__0148)
	call	#FCACHE_LOAD_
LR__0148
	rep	@LR__0151, arg03
LR__0149
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0150
LR__0151
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #510
	mov	arg02, ##43605
	call	#_ff_cc_st_word_0179
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, ##1096897106
	call	#_ff_cc_st_dword_0180
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #484
	mov	arg02, ##1631679090
	call	#_ff_cc_st_dword_0180
	add	local01, #48
	mov	arg01, local01
	add	arg01, #488
	sub	local01, #32
	rdlong	arg02, local01
	sub	local01, #16
	call	#_ff_cc_st_dword_0180
	add	local01, #48
	mov	arg01, local01
	add	arg01, #492
	sub	local01, #36
	rdlong	arg02, local01
	sub	local01, #12
	call	#_ff_cc_st_dword_0180
	add	local01, #28
	rdlong	local03, local01
	add	local03, #1
	add	local01, #16
	wrlong	local03, local01
	sub	local01, #43
	rdbyte	local04, local01
	add	local01, #47
	mov	local05, local01
	mov	local06, local05
	sub	local01, #4
	rdlong	local07, local01
	sub	local01, #44
	mov	local08, local07
	mov	local09, #1
	mov	arg01, local04
	mov	arg02, local06
	mov	arg03, local08
	mov	arg04, #1
	call	#_ff_cc_disk_write
	mov	local10, result1
	mov	local03, #0
	add	local01, #4
	wrbyte	#0, local01
	sub	local01, #4
LR__0152
	add	local01, #1
	rdbyte	arg01, local01
	mov	arg02, #0
	mov	arg03, #0
	call	#_ff_cc_disk_ioctl
	cmp	result1, #0 wz
 if_ne	mov	local02, #1
LR__0153
' 	}
' 
' 	return res;
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_sync_fs_0198_ret
	ret

_ff_cc_clst2sect_0199
	sub	arg02, #2
	add	arg01, #20
	rdlong	_var01, arg01
	sub	arg01, #20
	sub	_var01, #2
	cmp	arg02, _var01 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#_ff_cc_clst2sect_0199_ret
' 	return fs->database + (LBA_t)fs->csize * clst;
	add	arg01, #10
	rdword	_var02, arg01
	qmul	_var02, arg02
	getqx	_var03
	add	arg01, #30
	rdlong	result1, arg01
	add	result1, _var03
_ff_cc_clst2sect_0199_ret
	ret

_ff_cc_get_fat_0204
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0154
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	mov	local05, local04
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0155
LR__0154
	mov	local06, #1
	jmp	#LR__0162
LR__0155
	neg	local06, #1
' 		val = 0xFFFFFFFF;
' 
' 		switch (fs->fs_type) {
	rdbyte	local07, local03
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0156
	jmp	#LR__0157
	jmp	#LR__0158
	jmp	#LR__0159
	jmp	#LR__0160
LR__0157
	mov	local08, local02
	mov	local04, local02
	shr	local04, #1
	add	local08, local04
	mov	arg01, local03
	mov	local09, local08
	shr	local09, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0161
	mov	local10, local08
	and	local10, #511
	add	local03, #48
	add	local10, local03
	rdbyte	local11, local10
	sub	local03, #48
	mov	arg01, local03
	add	local08, #1
	mov	local09, local08
	shr	local09, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0161
	and	local08, #511
	add	local03, #48
	add	local08, local03
	rdbyte	local04, local08
	shl	local04, #8
	or	local11, local04
	test	local02, #1 wz
 if_ne	shr	local11, #4
 if_ne	mov	local05, local11
 if_e	and	local11, ##4095
 if_e	mov	local05, local11
	mov	local06, local05
' 			wc |= fs->win[bc %  ((UINT) 512 ) ] << 8;
' 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
' 			break;
	jmp	#LR__0161
LR__0158
	mov	arg01, local03
	mov	local09, local02
	shr	local09, #8
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0161
	add	local03, #48
	shl	local02, #1
	and	local02, #511
	add	local03, local02
	mov	arg01, local03
	call	#_ff_cc_ld_word_0176
	zerox	result1, #15
	mov	local06, result1
' 			val = ld_word(fs->win + clst * 2 %  ((UINT) 512 ) );
' 			break;
	jmp	#LR__0161
LR__0159
	mov	arg01, local03
	mov	local09, local02
	shr	local09, #7
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0161
	add	local03, #48
	mov	arg01, local03
	mov	local12, local02
	shl	local12, #2
	and	local12, #511
	add	arg01, local12
	call	#_ff_cc_ld_dword_0178
	mov	local06, result1
	and	local06, ##268435455
' 			val = ld_dword(fs->win + clst * 4 %  ((UINT) 512 ) ) & 0x0FFFFFFF;
' 			break;
	jmp	#LR__0161
LR__0160
	mov	local06, #1
LR__0161
LR__0162
' 			val = 1;
' 		}
' 	}
' 
' 	return val;
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
_ff_cc_get_fat_0204_ret
	ret

_ff_cc_put_fat_0208
	mov	COUNT_, #16
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, #2
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0172
	add	local01, #20
	rdlong	local05, local01
	sub	local01, #20
	mov	local06, local05
	cmp	local02, local06 wcz
 if_ae	jmp	#LR__0172
' 		switch (fs->fs_type) {
	rdbyte	local07, local01
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0163
	jmp	#LR__0164
	jmp	#LR__0169
	jmp	#LR__0170
	jmp	#LR__0171
LR__0164
	mov	local08, local02
	mov	local05, local02
	shr	local05, #1
	add	local08, local05
	mov	local06, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0196
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0171
	add	local01, #48
	mov	local13, local01
	mov	local12, local08
	and	local12, #511
	add	local13, local12
	test	local02, #1 wz
	sub	local01, #48
	add	local08, #1
 if_e	jmp	#LR__0165
	rdbyte	local06, local13
	and	local06, #15
	mov	local10, local03
	zerox	local10, #7
	shl	local10, #4
	or	local06, local10
	jmp	#LR__0166
LR__0165
	mov	local06, local03
LR__0166
	wrbyte	local06, local13
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	mov	local06, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0196
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0171
	add	local01, #48
	mov	local13, local01
	mov	local09, local08
	and	local09, #511
	mov	local10, local09
	add	local13, local09
	mov	local05, local02
	and	local05, #1 wz
	sub	local01, #48
 if_e	jmp	#LR__0167
	mov	local09, local03
	shr	local09, #4
	mov	local06, local09
	jmp	#LR__0168
LR__0167
	rdbyte	local10, local13
	and	local10, #240
	mov	local11, local03
	shr	local11, #8
	zerox	local11, #7
	and	local11, #15
	or	local10, local11
	mov	local06, local10
LR__0168
	wrbyte	local06, local13
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
' 			p = fs->win + bc %  ((UINT) 512 ) ;
' 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
' 			fs->wflag = 1;
' 			break;
	jmp	#LR__0171
LR__0169
	mov	local06, local01
	mov	local09, local02
	shr	local09, #8
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0196
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0171
	add	local01, #48
	mov	local05, local01
	mov	local09, local02
	shl	local09, #1
	mov	local10, local09
	and	local10, #511
	mov	local11, local10
	mov	local12, local05
	add	local12, local11
	mov	local14, local03
	mov	arg01, local12
	mov	arg02, local14
	sub	local01, #48
	call	#_ff_cc_st_word_0179
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
' 			st_word(fs->win + clst * 2 %  ((UINT) 512 ) , (WORD)val);
' 			fs->wflag = 1;
' 			break;
	jmp	#LR__0171
LR__0170
	mov	local06, local01
	mov	local09, local02
	shr	local09, #7
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0196
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0171
	and	local03, ##268435455
	add	local01, #48
	mov	local15, local01
	mov	local14, local02
	shl	local14, #2
	and	local14, #511
	add	local15, local14
	mov	arg01, local15
	sub	local01, #48
	call	#_ff_cc_ld_dword_0178
	mov	local16, result1
	mov	local05, local16
	and	local05, ##-268435456
	or	local03, local05
	add	local01, #48
	mov	local05, local01
	mov	local09, local02
	shl	local09, #2
	mov	local10, local09
	and	local10, #511
	mov	local11, local10
	mov	local12, local05
	add	local12, local11
	mov	local14, local03
	mov	arg01, local12
	mov	arg02, local14
	sub	local01, #48
	call	#_ff_cc_st_dword_0180
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
' 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 %  ((UINT) 512 ) ) & 0xF0000000);
' 			}
' 			st_dword(fs->win + clst * 4 %  ((UINT) 512 ) , val);
' 			fs->wflag = 1;
' 			break;
LR__0171
LR__0172
' 		}
' 	}
' 	return res;
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_put_fat_0208_ret
	ret

_ff_cc_remove_chain_0212
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdlong	local04, local01
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0173
	add	local04, #20
	rdlong	local05, local04
	sub	local04, #20
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0174
LR__0173
	mov	result1, #2
	jmp	#LR__0179
LR__0174
	cmp	local03, #0 wz
 if_e	jmp	#LR__0175
	mov	arg01, local04
	mov	arg02, local03
	neg	arg03, #1
	call	#_ff_cc_put_fat_0208
	mov	local06, result1 wz
 if_ne	mov	result1, local06
 if_ne	jmp	#LR__0179
LR__0175
' 	}
' 
' 
' 	do {
LR__0176
	mov	arg02, local02
	mov	arg01, local01
	call	#_ff_cc_get_fat_0204
	mov	local07, result1 wz
 if_e	jmp	#LR__0178
	cmp	local07, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0179
	cmp	local07, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0179
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, #0
	call	#_ff_cc_put_fat_0208
	mov	local06, result1 wz
 if_ne	mov	result1, local06
 if_ne	jmp	#LR__0179
	add	local04, #20
	rdlong	local05, local04
	sub	local05, #2
	sub	local04, #4
	rdlong	local08, local04
	sub	local04, #16
	cmp	local08, local05 wcz
 if_ae	jmp	#LR__0177
	add	local04, #16
	rdlong	local09, local04
	add	local09, #1
	wrlong	local09, local04
	sub	local04, #12
	rdbyte	local05, local04
	or	local05, #1
	wrbyte	local05, local04
	sub	local04, #4
LR__0177
	mov	local02, local07
	add	local04, #20
	rdlong	local05, local04
	sub	local04, #20
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0176
LR__0178
' #line 1531 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	return FR_OK;
	mov	result1, #0
LR__0179
	mov	ptra, fp
	call	#popregs_
_ff_cc_remove_chain_0212_ret
	ret

_ff_cc_create_chain_0218
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02 wz
	rdlong	local03, local01
 if_ne	jmp	#LR__0181
	add	local03, #12
	rdlong	local04, local03 wz
	sub	local03, #12
 if_e	jmp	#LR__0180
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local04, local05 wcz
 if_b	jmp	#LR__0182
LR__0180
	mov	local04, #1
	jmp	#LR__0182
LR__0181
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_get_fat_0204
	mov	local06, result1
	cmp	local06, #2 wcz
 if_b	mov	result1, #1
 if_b	jmp	#LR__0198
	cmp	local06, ##-1 wz
 if_e	mov	result1, local06
 if_e	jmp	#LR__0198
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wcz
 if_b	mov	result1, local06
 if_b	jmp	#LR__0198
	mov	local04, local02
LR__0182
	add	local03, #16
	rdlong	local05, local03 wz
	sub	local03, #16
 if_e	mov	result1, #0
 if_e	jmp	#LR__0198
	mov	local07, #0
	cmp	local04, local02 wz
 if_ne	jmp	#LR__0187
	mov	local07, local04
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wcz
 if_ae	mov	local07, #2
	mov	local05, local01
	mov	arg02, local07
	mov	arg01, local05
	call	#_ff_cc_get_fat_0204
	mov	local06, result1
	cmp	local06, #1 wz
 if_e	jmp	#LR__0183
	cmp	local06, ##-1 wz
 if_ne	jmp	#LR__0184
LR__0183
	mov	result1, local06
	jmp	#LR__0198
LR__0184
	cmp	local06, #0 wz
 if_e	jmp	#LR__0186
	add	local03, #12
	rdlong	local06, local03
	sub	local03, #12
	cmp	local06, #2 wcz
 if_b	jmp	#LR__0185
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wcz
 if_b	mov	local04, local06
LR__0185
	mov	local07, #0
LR__0186
LR__0187
	cmp	local07, #0 wz
 if_ne	jmp	#LR__0193
	mov	local07, local04
' 			ncl = scl;
' 			for (;;) {
LR__0188
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wcz
 if_b	jmp	#LR__0189
	mov	local07, #2
	cmp	local07, local04 wcz
 if_a	mov	result1, #0
 if_a	jmp	#LR__0198
LR__0189
	mov	local05, local01
	mov	arg02, local07
	mov	arg01, local05
	call	#_ff_cc_get_fat_0204
	mov	local06, result1 wz
 if_e	jmp	#LR__0192
	cmp	local06, #1 wz
 if_e	jmp	#LR__0190
	cmp	local06, ##-1 wz
 if_ne	jmp	#LR__0191
LR__0190
	mov	result1, local06
	jmp	#LR__0198
LR__0191
	cmp	local07, local04 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0198
	jmp	#LR__0188
LR__0192
LR__0193
	mov	arg01, local03
	mov	arg02, local07
	neg	arg03, #1
	call	#_ff_cc_put_fat_0208
	mov	local08, result1 wz
 if_ne	jmp	#LR__0194
	cmp	local02, #0 wz
 if_e	jmp	#LR__0194
	mov	local05, local03
	mov	local09, local02
	mov	local10, local07
	mov	arg01, local05
	mov	arg02, local09
	mov	arg03, local10
	call	#_ff_cc_put_fat_0208
	mov	local11, result1
	mov	local08, local11
LR__0194
	cmp	local08, #0 wz
 if_ne	jmp	#LR__0196
	add	local03, #12
	wrlong	local07, local03
	add	local03, #8
	rdlong	local05, local03
	sub	local05, #2
	sub	local03, #4
	rdlong	local10, local03
	sub	local03, #16
	cmp	local10, local05 wcz
 if_a	jmp	#LR__0195
	add	local03, #16
	rdlong	local10, local03
	sub	local10, #1
	wrlong	local10, local03
	sub	local03, #16
LR__0195
	add	local03, #4
	rdbyte	local05, local03
	or	local05, #1
	wrbyte	local05, local03
	jmp	#LR__0197
LR__0196
	cmp	local08, #1 wz
 if_e	neg	local05, #1
 if_ne	mov	local05, #1
	mov	local07, local05
LR__0197
' 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
' 	}
' 
' 	return ncl;
	mov	result1, local07
LR__0198
	mov	ptra, fp
	call	#popregs_
_ff_cc_create_chain_0218_ret
	ret

_ff_cc_dir_clear_0223
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local01
	call	#_ff_cc_sync_window_0194
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0205
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_clst2sect_0199
	mov	local03, result1
	add	local01, #44
	wrlong	local03, local01
	add	local01, #4
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, #0
	decod	arg03, #9
' {
' 	BYTE *d = (BYTE*)dst;
' 
' 	do {
	loc	pa,	#(@LR__0201-@LR__0199)
	call	#FCACHE_LOAD_
LR__0199
	rep	@LR__0202, arg03
LR__0200
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0201
LR__0202
	add	local01, #48
	mov	local04, local01
' #line 1698 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	{
' 		ibuf = fs->win; szb = 1;
' 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;
	mov	local05, #0
	sub	local01, #48
LR__0203
	add	local01, #10
	rdword	local06, local01
	sub	local01, #10
	zerox	local06, #15
	cmp	local05, local06 wcz
 if_ae	jmp	#LR__0204
	add	local01, #1
	rdbyte	arg01, local01
	sub	local01, #1
	mov	arg02, local04
	mov	arg03, local03
	add	arg03, local05
	mov	arg04, #1
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_e	add	local05, #1
 if_e	jmp	#LR__0203
LR__0204
' 	}
' 	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
	add	local01, #10
	rdword	local07, local01
	cmp	local05, local07 wz
 if_e	mov	local06, #0
 if_ne	mov	local06, #1
	mov	result1, local06
LR__0205
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_clear_0223_ret
	ret

_ff_cc_dir_sdi_0227
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, ##2097152 wcz
 if_ae	jmp	#LR__0206
	test	local02, #31 wz
 if_e	jmp	#LR__0207
LR__0206
' 		return FR_INT_ERR;
	mov	result1, #2
	jmp	#LR__0215
LR__0207
	add	local01, #16
	wrlong	local02, local01
	sub	local01, #8
	rdlong	local04, local01 wz
	sub	local01, #8
 if_ne	jmp	#LR__0208
	rdbyte	local05, local03
	cmp	local05, #3 wcz
 if_b	jmp	#LR__0208
	add	local03, #36
	rdlong	local05, local03
	sub	local03, #36
	mov	local04, local05
LR__0208
	cmp	local04, #0 wz
 if_ne	jmp	#LR__0209
	mov	local05, local02
	shr	local05, #5
	add	local03, #8
	rdword	local06, local03
	sub	local03, #8
	zerox	local06, #15
	cmp	local05, local06 wcz
 if_ae	mov	result1, #2
 if_ae	jmp	#LR__0215
	add	local03, #36
	rdlong	local05, local03
	sub	local03, #36
	add	local01, #24
	wrlong	local05, local01
	sub	local01, #24
	jmp	#LR__0214
LR__0209
	add	local03, #10
	rdword	local07, local03
	sub	local03, #10
	zerox	local07, #15
	shl	local07, #9
' 		csz = (DWORD)fs->csize *  ((UINT) 512 ) ;
' 		while (ofs >= csz) {
LR__0210
	cmp	local02, local07 wcz
 if_b	jmp	#LR__0213
	mov	arg01, local01
	mov	arg02, local04
	call	#_ff_cc_get_fat_0204
	mov	local04, result1
	cmp	local04, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0215
	cmp	local04, #2 wcz
 if_b	jmp	#LR__0211
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local04, local05 wcz
 if_b	jmp	#LR__0212
LR__0211
	mov	result1, #2
	jmp	#LR__0215
LR__0212
	sub	local02, local07
	jmp	#LR__0210
LR__0213
	mov	arg01, local03
	mov	arg02, local04
	call	#_ff_cc_clst2sect_0199
	add	local01, #24
	wrlong	result1, local01
	sub	local01, #24
LR__0214
	add	local01, #20
	wrlong	local04, local01
	add	local01, #4
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	mov	result1, #2
 if_e	jmp	#LR__0215
	mov	local06, local02
	shr	local06, #9
	add	local01, #24
	rdlong	local05, local01
	add	local05, local06
	wrlong	local05, local01
	add	local03, #48
	mov	local05, local03
	mov	local08, local02
	and	local08, #511
	add	local05, local08
	add	local01, #4
	wrlong	local05, local01
' 	dp->sect += ofs /  ((UINT) 512 ) ;
' 	dp->dir = fs->win + (ofs %  ((UINT) 512 ) );
' 
' 	return FR_OK;
	mov	result1, #0
LR__0215
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_sdi_0227_ret
	ret

_ff_cc_dir_next_0231
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	add	local01, #16
	rdlong	local04, local01
	sub	local01, #16
	add	local04, #32
	cmp	local04, ##2097152 wcz
 if_ae	add	local01, #24
 if_ae	wrlong	#0, local01
 if_ae	sub	local01, #24
	add	local01, #24
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	mov	result1, #4
 if_e	jmp	#LR__0222
	test	local04, #511 wz
 if_ne	jmp	#LR__0221
	add	local01, #24
	rdlong	local06, local01
	add	local06, #1
	wrlong	local06, local01
	sub	local01, #4
	rdlong	local05, local01 wz
	sub	local01, #20
 if_ne	jmp	#LR__0216
	mov	local05, local04
	shr	local05, #5
	add	local03, #8
	rdword	local07, local03
	sub	local03, #8
	zerox	local07, #15
	cmp	local05, local07 wcz
 if_b	jmp	#LR__0220
	add	local01, #24
	wrlong	#0, local01
' 				dp->sect = 0; return FR_NO_FILE;
	mov	result1, #4
	jmp	#LR__0222
LR__0216
	mov	local05, local04
	shr	local05, #9
	add	local03, #10
	rdword	local07, local03
	sub	local03, #10
	zerox	local07, #15
	sub	local07, #1
	test	local05, local07 wz
 if_ne	jmp	#LR__0219
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_ff_cc_get_fat_0204
	mov	local08, result1
	cmp	local08, #1 wcz
 if_be	mov	result1, #2
 if_be	jmp	#LR__0222
	cmp	local08, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0222
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local08, local05 wcz
 if_b	jmp	#LR__0218
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0217
	add	local01, #24
	wrlong	#0, local01
' 						dp->sect = 0; return FR_NO_FILE;
	mov	result1, #4
	jmp	#LR__0222
LR__0217
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_ff_cc_create_chain_0218
	mov	local08, result1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0222
	cmp	local08, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0222
	cmp	local08, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0222
	mov	arg01, local03
	mov	arg02, local08
	call	#_ff_cc_dir_clear_0223
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0222
LR__0218
	add	local01, #20
	wrlong	local08, local01
	sub	local01, #20
	mov	arg01, local03
	mov	arg02, local08
	call	#_ff_cc_clst2sect_0199
	add	local01, #24
	wrlong	result1, local01
	sub	local01, #24
LR__0219
LR__0220
LR__0221
	add	local01, #16
	wrlong	local04, local01
	add	local03, #48
	mov	local05, local03
	mov	local09, local04
	and	local09, #511
	add	local05, local09
	add	local01, #12
	wrlong	local05, local01
' #line 1802 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 				}
' 				dp->clust = clst;
' 				dp->sect = clst2sect(fs, clst);
' 			}
' 		}
' 	}
' 	dp->dptr = ofs;
' 	dp->dir = fs->win + ofs %  ((UINT) 512 ) ;
' 
' 	return FR_OK;
	mov	result1, #0
LR__0222
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_next_0231_ret
	ret

_ff_cc_dir_alloc_0235
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	mov	local04, result1 wz
 if_ne	jmp	#LR__0228
	mov	local05, #0
' 		n = 0;
' 		do {
LR__0223
	mov	arg01, local03
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0196
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0227
	add	local01, #28
	rdlong	local07, local01
	sub	local01, #28
	rdbyte	local08, local07
	cmp	local08, #229 wz
 if_e	jmp	#LR__0224
	add	local01, #28
	rdlong	local09, local01
	sub	local01, #28
	mov	local10, local09
	rdbyte	local06, local10 wz
 if_ne	jmp	#LR__0225
LR__0224
	add	local05, #1
	cmp	local05, local02 wz
 if_e	jmp	#LR__0227
	jmp	#LR__0226
LR__0225
	mov	local05, #0
LR__0226
	mov	local08, local01
	mov	local07, #1
	mov	arg01, local08
	mov	arg02, #1
	call	#_ff_cc_dir_next_0231
	mov	local11, result1
	mov	local04, local11 wz
 if_e	jmp	#LR__0223
LR__0227
LR__0228
	cmp	local04, #4 wz
 if_e	mov	local04, #7
' 	return res;
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_alloc_0235_ret
	ret

_ff_cc_ld_clust_0237
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local02
	add	arg01, #26
	call	#_ff_cc_ld_word_0176
	mov	local03, result1
	zerox	local03, #15
	rdbyte	local04, local01
	cmp	local04, #3 wz
 if_ne	jmp	#LR__0229
	add	local02, #20
	mov	arg01, local02
	call	#_ff_cc_ld_word_0176
	zerox	result1, #15
	shl	result1, #16
	or	local03, result1
LR__0229
' 		cl |= (DWORD)ld_word(dir +  20 ) << 16;
' 	}
' 
' 	return cl;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_ld_clust_0237_ret
	ret

_ff_cc_st_clust_0238
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, local02
	add	arg01, #26
	mov	arg02, local03
	call	#_ff_cc_st_word_0179
	rdbyte	local04, local01
	cmp	local04, #3 wz
 if_ne	jmp	#LR__0230
	add	local02, #20
	shr	local03, #16
	mov	arg01, local02
	mov	arg02, local03
	call	#_ff_cc_st_word_0179
LR__0230
	mov	ptra, fp
	call	#popregs_
_ff_cc_st_clust_0238_ret
	ret

_ff_cc_dir_read_0243
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #4
	rdlong	local04, local01
' )
' {
' 	FRESULT res = FR_NO_FILE;
' 	FATFS *fs = dp->obj.fs;
' 	BYTE attr, b;
' #line 2376 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	while (dp->sect) {
LR__0231
	add	local01, #24
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	jmp	#LR__0233
	mov	arg01, local04
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0196
	mov	local03, result1 wz
 if_ne	jmp	#LR__0233
	add	local01, #28
	rdlong	local05, local01
	sub	local01, #28
	rdbyte	local06, local05
	mov	local05, local06
	zerox	local05, #7 wz
 if_e	mov	local03, #4
' 			res = FR_NO_FILE; break;
 if_e	jmp	#LR__0233
	add	local01, #28
	rdlong	local07, local01
	add	local07, #11
	rdbyte	local08, local07
	and	local08, #63
	sub	local01, #22
	wrbyte	local08, local01
	sub	local01, #6
	mov	local05, local06
	zerox	local05, #7
	cmp	local05, #229 wz
 if_e	jmp	#LR__0232
	mov	local07, local06
	zerox	local07, #7
	cmp	local07, #46 wz
 if_e	jmp	#LR__0232
	mov	local09, local08
	zerox	local09, #7
	cmp	local09, #15 wz
 if_e	jmp	#LR__0232
	mov	local10, #0
	mov	local11, local08
	zerox	local11, #7
	andn	local11, #32
	cmp	local11, #8 wz
 if_e	mov	local10, #1
	cmp	local10, local02 wz
' 				break;
 if_e	jmp	#LR__0233
LR__0232
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_next_0231
	mov	local03, result1 wz
 if_e	jmp	#LR__0231
LR__0233
	cmp	local03, #0 wz
 if_ne	add	local01, #24
 if_ne	wrlong	#0, local01
' 	return res;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_read_0243_ret
	ret

_ff_cc_dir_find_0247
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0237
' #line 2479 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	do {
LR__0234
	mov	arg01, local02
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0196
	mov	local03, result1 wz
 if_ne	jmp	#LR__0236
	add	local01, #28
	rdlong	local04, local01
	sub	local01, #28
	rdbyte	local05, local04
	mov	local04, local05
	zerox	local04, #7 wz
 if_e	mov	local03, #4
 if_e	jmp	#LR__0236
	add	local01, #28
	rdlong	local06, local01
	add	local06, #11
	rdbyte	local04, local06
	and	local04, #63
	sub	local01, #22
	wrbyte	local04, local01
	add	local01, #22
	rdlong	local06, local01
	sub	local01, #28
	add	local06, #11
	rdbyte	local07, local06
	mov	local04, local07
	zerox	local04, #7
	test	local04, #8 wz
 if_ne	jmp	#LR__0235
	add	local01, #28
	rdlong	local08, local01
	mov	local09, local08
	add	local01, #4
	mov	local10, local01
	mov	local11, local10
	mov	local12, #11
	mov	arg01, local09
	mov	arg02, local11
	mov	arg03, #11
	sub	local01, #32
	call	#_ff_cc_mem_cmp_0189
	mov	local13, result1 wz
 if_e	jmp	#LR__0236
LR__0235
	mov	local04, local01
	mov	local06, #0
	mov	arg01, local04
	mov	arg02, #0
	call	#_ff_cc_dir_next_0231
	mov	local14, result1
	mov	local03, local14 wz
 if_e	jmp	#LR__0234
LR__0236
' 
' 	return res;
	mov	result1, local03
LR__0237
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_find_0247_ret
	ret

_ff_cc_dir_register_0250
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #1
	call	#_ff_cc_dir_alloc_0235
	mov	local03, result1 wz
 if_ne	jmp	#LR__0243
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_ff_cc_move_window_0196
	mov	local03, result1 wz
 if_ne	jmp	#LR__0242
	add	local01, #28
	rdlong	arg01, local01
	sub	local01, #28
	mov	arg02, #0
' {
' 	BYTE *d = (BYTE*)dst;
' 
' 	do {
	loc	pa,	#(@LR__0240-@LR__0238)
	call	#FCACHE_LOAD_
LR__0238
	rep	@LR__0241, #32
LR__0239
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0240
LR__0241
	add	local01, #28
	rdlong	arg01, local01
	add	local01, #4
	mov	arg02, local01
	mov	arg03, #11
	call	#_ff_cc_mem_cpy_0183
	add	local02, #3
	wrbyte	#1, local02
LR__0242
LR__0243
' 			mem_set(dp->dir, 0,  32 );
' 			mem_cpy(dp->dir +  0 , dp->fn, 11);
' #line 2613 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 			fs->wflag = 1;
' 		}
' 	}
' 
' 	return res;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_register_0250_ret
	ret

_ff_cc_dir_remove_0253
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_ff_cc_move_window_0196
	mov	local03, result1 wz
 if_ne	jmp	#LR__0244
	add	local01, #28
	rdlong	local04, local01
	wrbyte	#229, local04
	add	local02, #3
	wrbyte	#1, local02
LR__0244
' 		dp->dir[ 0 ] =  0xE5 ;
' 		fs->wflag = 1;
' 	}
' 
' 
' 	return res;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_remove_0253_ret
	ret

_ff_cc_get_fileinfo_0257
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local02, #12
	wrbyte	#0, local02
	sub	local02, #12
	add	local01, #24
	rdlong	local03, local01
	sub	local01, #24
	mov	local04, local03 wz
 if_e	jmp	#LR__0248
	mov	local05, #0
	mov	local06, #0
' #line 2755 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	si = di = 0;
' 	while (si < 11) {
LR__0245
	cmp	local06, #11 wcz
 if_ae	jmp	#LR__0247
	add	local01, #28
	rdlong	local07, local01
	sub	local01, #28
	mov	local08, local06
	add	local08, local07
	rdbyte	local09, local08
	mov	local04, local09
	zerox	local04, #7
	cmp	local04, #32 wz
	add	local06, #1
 if_e	jmp	#LR__0245
	mov	local04, local09
	zerox	local04, #7
	cmp	local04, #5 wz
 if_e	mov	local09, #229
	cmp	local06, #9 wz
 if_ne	jmp	#LR__0246
	mov	local10, local05
	add	local02, #12
	add	local10, local02
	wrbyte	#46, local10
	add	local05, #1
	sub	local02, #12
LR__0246
	mov	local10, local05
	add	local02, #12
	add	local10, local02
	wrbyte	local09, local10
	add	local05, #1
	sub	local02, #12
	jmp	#LR__0245
LR__0247
	add	local02, #12
	add	local05, local02
	wrbyte	#0, local05
	add	local01, #28
	rdlong	local04, local01
	add	local04, #11
	rdbyte	local10, local04
	sub	local02, #4
	wrbyte	local10, local02
	sub	local02, #8
	rdlong	arg01, local01
	sub	local01, #28
	add	arg01, #28
	call	#_ff_cc_ld_dword_0178
	wrlong	result1, local02
	add	local01, #28
	rdlong	arg01, local01
	sub	local01, #28
	add	arg01, #22
	call	#_ff_cc_ld_word_0176
	mov	local11, result1
	add	local02, #6
	wrword	local11, local02
	sub	local02, #6
	add	local01, #28
	rdlong	arg01, local01
	add	arg01, #24
	call	#_ff_cc_ld_word_0176
	add	local02, #4
	wrword	result1, local02
LR__0248
	mov	ptra, fp
	call	#popregs_
_ff_cc_get_fileinfo_0257_ret
	ret

_ff_cc_create_name_0265
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local01, #32
	mov	local04, local01
	mov	arg01, local04
	mov	arg02, #32
	mov	arg03, #11
	sub	local01, #32
' {
' 	BYTE *d = (BYTE*)dst;
' 
' 	do {
	loc	pa,	#(@LR__0251-@LR__0249)
	call	#FCACHE_LOAD_
LR__0249
	rep	@LR__0252, #11
LR__0250
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0251
LR__0252
	mov	local05, #0
	mov	local06, #0
	mov	local07, #8
' 
' 
' 	p = *path; sfn = dp->fn;
' 	mem_set(sfn, ' ', 11);
' 	si = i = 0; ni = 8;
' #line 3011 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	for (;;) {
LR__0253
	mov	local08, local06
	add	local08, local03
	rdbyte	local09, local08
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #32 wcz
	add	local06, #1
 if_be	jmp	#LR__0267
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #47 wz
 if_e	jmp	#LR__0254
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #92 wz
 if_ne	jmp	#LR__0257
LR__0254
' 			while (p[si] == '/' || p[si] == '\\') si++;
LR__0255
	mov	local11, local06
	add	local11, local03
	rdbyte	local10, local11
	cmp	local10, #47 wz
 if_e	jmp	#LR__0256
	mov	local12, local06
	add	local12, local03
	rdbyte	local13, local12
	cmp	local13, #92 wz
 if_ne	jmp	#LR__0267
LR__0256
	add	local06, #1
	jmp	#LR__0255
' 			break;
LR__0257
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #46 wz
 if_e	jmp	#LR__0258
	cmp	local05, local07 wcz
 if_b	jmp	#LR__0261
LR__0258
	cmp	local07, #11 wz
 if_e	jmp	#LR__0259
	zerox	local09, #7
	cmp	local09, #46 wz
 if_e	jmp	#LR__0260
LR__0259
	mov	result1, #6
	jmp	#LR__0268
LR__0260
	mov	local05, #8
	mov	local07, #11
' 			i = 8; ni = 11;
' 			continue;
	jmp	#LR__0253
LR__0261
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #128 wcz
 if_b	jmp	#LR__0262
	zerox	local09, #7
	and	local09, #127
	add	ptr__ff_cc_dat__, #6
	add	local09, ptr__ff_cc_dat__
	rdbyte	local09, local09
	sub	ptr__ff_cc_dat__, #6
LR__0262
	mov	arg01, local09
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
' 
' 	return 0;
 if_e	mov	result1, #0
	cmp	result1, #0 wz
 if_e	jmp	#LR__0265
	mov	local08, local06
	mov	local13, local03
	add	local08, local03
	rdbyte	local14, local08
	mov	arg01, local14
	add	local06, #1
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
' 
' 	return 0;
 if_e	mov	result1, #0
	mov	local11, result1 wz
 if_e	jmp	#LR__0263
	mov	local08, local07
	sub	local08, #1
	cmp	local05, local08 wcz
 if_b	jmp	#LR__0264
LR__0263
	mov	result1, #6
	jmp	#LR__0268
LR__0264
	mov	local08, local05
	add	local08, local04
	wrbyte	local09, local08
	add	local05, #1
	mov	local08, local05
	add	local08, local04
	wrbyte	local14, local08
	add	local05, #1
	jmp	#LR__0253
LR__0265
	mov	arg01, ##@LR__0678
	mov	local08, local09
	zerox	local08, #7
	mov	local13, local08
	mov	arg02, local13
	call	#_ff_cc_chk_chr_0190
	mov	local12, result1 wz
 if_ne	mov	result1, #6
 if_ne	jmp	#LR__0268
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #97 wcz
 if_b	jmp	#LR__0266
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #122 wcz
 if_a	jmp	#LR__0266
	mov	local10, local09
	zerox	local10, #7
	sub	local10, #32
	mov	local09, local10
LR__0266
	mov	local08, local05
	add	local08, local04
	wrbyte	local09, local08
	add	local05, #1
	jmp	#LR__0253
LR__0267
	add	local03, local06
	wrlong	local03, local02
	cmp	local05, #0 wz
 if_e	mov	result1, #6
 if_e	jmp	#LR__0268
	rdbyte	local10, local04
	cmp	local10, #229 wz
 if_e	wrbyte	#5, local04
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #32 wcz
 if_be	mov	local10, #4
 if_a	mov	local10, #0
	add	local04, #11
	wrbyte	local10, local04
' 	sfn[ 11 ] = (c <= ' ') ?  0x04  : 0;
' 
' 	return FR_OK;
	mov	result1, #0
LR__0268
	mov	ptra, fp
	call	#popregs_
_ff_cc_create_name_0265_ret
	ret

_ff_cc_follow_path_0269
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #16
	wrlong	local02, fp
	sub	fp, #20
	loc	pa,	#(@LR__0271-@LR__0269)
	call	#FCACHE_LOAD_
' )
' {
' 	FRESULT res;
' 	BYTE ns;
' 	FATFS *fs = dp->obj.fs;
' #line 3075 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	{
' 		while (*path == '/' || *path == '\\') path++;
LR__0269
	add	fp, #8
	rdlong	local03, fp
	sub	fp, #8
	rdbyte	local01, local03
	cmp	local01, #47 wz
 if_e	jmp	#LR__0270
	add	fp, #8
	rdlong	local04, fp
	sub	fp, #8
	rdbyte	local05, local04
	cmp	local05, #92 wz
 if_ne	jmp	#LR__0272
LR__0270
	add	fp, #8
	rdlong	local02, fp
	add	local02, #1
	wrlong	local02, fp
	sub	fp, #8
	jmp	#LR__0269
LR__0271
LR__0272
	add	fp, #4
	rdlong	local01, fp
	add	local01, #8
	wrlong	#0, local01
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #8
	rdbyte	local01, local03
	cmp	local01, #32 wcz
 if_ae	jmp	#LR__0273
	add	fp, #4
	rdlong	local01, fp
	add	local01, #43
	wrbyte	#128, local01
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0278
LR__0273
' 		for (;;) {
LR__0274
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_ff_cc_create_name_0265
	mov	local04, result1
	add	fp, #12
	wrlong	local04, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0277
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	call	#_ff_cc_dir_find_0247
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #43
	rdbyte	local02, local01
	add	fp, #12
	wrbyte	local02, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0275
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0277
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
' 					}
' 				}
' 				break;
	jmp	#LR__0277
LR__0275
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #4 wz
 if_ne	jmp	#LR__0277
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #6
	rdbyte	local01, local03
	test	local01, #16 wz
 if_ne	jmp	#LR__0276
	add	fp, #12
	wrlong	#5, fp
	sub	fp, #12
' 				res = FR_NO_PATH; break;
	jmp	#LR__0277
LR__0276
	add	fp, #4
	rdlong	local01, fp
	add	fp, #16
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #48
	sub	fp, #16
	rdlong	local06, fp
	sub	fp, #4
	add	local06, #16
	rdlong	local07, local06
	and	local07, #511
	add	arg02, local07
	call	#_ff_cc_ld_clust_0237
	add	local01, #8
	wrlong	result1, local01
	jmp	#LR__0274
LR__0277
LR__0278
' 			}
' #line 3131 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 			{
' 				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr %  ((UINT) 512 ) );
' 			}
' 		}
' 	}
' 
' 	return res;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_follow_path_0269_ret
	ret

_ff_cc_get_ldnumber_0275
	mov	_var01, arg01
	neg	_var02, #1
	rdlong	_var03, _var01 wz
	mov	_var04, _var03
 if_e	neg	result1, #1
 if_e	jmp	#_ff_cc_get_ldnumber_0275_ret
	loc	pa,	#(@LR__0280-@LR__0279)
	call	#FCACHE_LOAD_
' 	do tc = *tt++; while ((UINT)tc >= ( 0  ? ' ' : '!') && tc != ':');
LR__0279
	rdbyte	_var05, _var04
	mov	_var06, _var05
	zerox	_var06, #7
	cmp	_var06, #33 wcz
	add	_var04, #1
 if_b	jmp	#LR__0281
	mov	_var07, _var05
	zerox	_var07, #7
	cmp	_var07, #58 wz
 if_ne	jmp	#LR__0279
LR__0280
LR__0281
	mov	_var06, _var05
	zerox	_var06, #7
	cmp	_var06, #58 wz
 if_ne	jmp	#LR__0283
	mov	_var08, #1
	rdbyte	_var06, _var03
	cmp	_var06, #48 wcz
 if_b	jmp	#LR__0282
	rdbyte	_var07, _var03
	cmp	_var07, #57 wcz
 if_a	jmp	#LR__0282
	mov	_var09, _var03
	add	_var09, #2
	cmp	_var09, _var04 wz
 if_e	rdbyte	_var06, _var03
 if_e	sub	_var06, #48
 if_e	mov	_var08, _var06
LR__0282
	cmps	_var08, #1 wcz
 if_b	mov	_var02, _var08
 if_b	wrlong	_var04, _var01
' 			vol = i;
' 			*path = tt;
' 		}
' 		return vol;
	mov	result1, _var02
	jmp	#_ff_cc_get_ldnumber_0275_ret
LR__0283
' 	}
' #line 3209 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	vol = 0;
' 
' 	return vol;
	mov	result1, #0
_ff_cc_get_ldnumber_0275_ret
	ret

_ff_cc_check_fs_0276
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	wrlong	##-1, local01
	sub	local01, #44
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_ne	mov	result1, #4
 if_ne	jmp	#LR__0286
	add	local01, #48
	mov	arg01, local01
	add	arg01, #510
	sub	local01, #48
	call	#_ff_cc_ld_word_0176
	mov	local03, result1
	zerox	local03, #15
	cmp	local03, ##43605 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0286
	add	local01, #48
	rdbyte	local04, local01
	sub	local01, #48
	mov	local03, local04
	zerox	local03, #7
	cmp	local03, #233 wz
 if_e	jmp	#LR__0284
	add	local01, #48
	rdbyte	local05, local01
	sub	local01, #48
	mov	local06, local05
	zerox	local06, #7
	cmp	local06, #235 wz
 if_e	jmp	#LR__0284
	add	local01, #48
	rdbyte	local07, local01
	sub	local01, #48
	mov	local08, local07
	zerox	local08, #7
	cmp	local08, #232 wz
 if_ne	jmp	#LR__0285
LR__0284
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #54
	mov	arg02, ##@LR__0680
	mov	arg03, #3
	call	#_ff_cc_mem_cmp_0189
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0286
	add	local01, #48
	mov	arg01, local01
	add	arg01, #82
	mov	arg02, ##@LR__0681
	mov	arg03, #5
	call	#_ff_cc_mem_cmp_0189
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0286
LR__0285
' 	}
' 	return 2;
	mov	result1, #2
LR__0286
	mov	ptra, fp
	call	#popregs_
_ff_cc_check_fs_0276_ret
	ret

_ff_cc_find_volume_0280
	mov	COUNT_, #13
	call	#pushregs_
	add	ptra, #36
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, local01
	mov	arg01, local03
	mov	arg02, #0
	call	#_ff_cc_check_fs_0276
	mov	local04, result1
	cmp	local04, #2 wz
 if_e	jmp	#LR__0288
	cmp	local04, #3 wcz
 if_ae	jmp	#LR__0287
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0288
LR__0287
	mov	result1, local04
	jmp	#LR__0295
LR__0288
' 	for (i = 0; i < 4; i++) {
	mov	local05, #0
LR__0289
	cmp	local05, #4 wcz
 if_ae	jmp	#LR__0290
	mov	local03, local05
	shl	local03, #2
	add	fp, #20
	add	local03, fp
	add	local01, #48
	mov	local06, local01
	add	local06, #446
	mov	local07, local05
	shl	local07, #4
	mov	local08, local07
	add	local06, local07
	add	local06, #8
	mov	arg01, local06
	sub	fp, #20
	sub	local01, #48
	call	#_ff_cc_ld_dword_0178
	mov	local09, result1
	wrlong	local09, local03
	add	local05, #1
	jmp	#LR__0289
LR__0290
	cmp	local02, #0 wz
 if_ne	mov	local03, local02
 if_ne	sub	local03, #1
 if_e	mov	local03, #0
	mov	local05, local03
' 		mbr_pt[i] = ld_dword(fs->win +  446  + i *  16  +  8 );
' 	}
' 	i = part ? part - 1 : 0;
' 	do {
LR__0291
	mov	local10, local05
	shl	local10, #2
	add	fp, #20
	mov	local11, fp
	add	local10, fp
	rdlong	local12, local10 wz
	sub	fp, #20
 if_e	jmp	#LR__0292
	mov	local07, local01
	mov	local08, local05
	shl	local08, #2
	add	fp, #20
	mov	local06, fp
	add	local08, fp
	rdlong	local09, local08
	mov	arg01, local07
	mov	arg02, local09
	sub	fp, #20
	call	#_ff_cc_check_fs_0276
	mov	local13, result1
	mov	local03, local13
	jmp	#LR__0293
LR__0292
	mov	local03, #3
LR__0293
	mov	local04, local03
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0294
	cmp	local04, #2 wcz
 if_b	jmp	#LR__0294
	mov	local03, local05
	add	local03, #1
	mov	local05, local03
	cmp	local05, #4 wcz
 if_b	jmp	#LR__0291
LR__0294
' 	return fmt;
	mov	result1, local04
LR__0295
	mov	ptra, fp
	call	#popregs_
_ff_cc_find_volume_0280_ret
	ret

_ff_cc_mount_volume_0292
	mov	COUNT_, #27
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	wrlong	#0, local02
	mov	arg01, local01
	call	#_ff_cc_get_ldnumber_0275
	mov	local04, result1
	cmps	local04, #0 wcz
 if_b	mov	result1, #11
 if_b	jmp	#LR__0311
	mov	local05, local04
	shl	local05, #2
	add	local05, ptr__ff_cc_dat__
	rdlong	local06, local05 wz
 if_e	mov	result1, #12
 if_e	jmp	#LR__0311
	wrlong	local06, local02
	zerox	local03, #7
	and	local03, #254
	rdbyte	local05, local06 wz
 if_e	jmp	#LR__0298
	add	local06, #1
	rdbyte	arg01, local06 wz
	sub	local06, #1
 if_ne	mov	result1, #1
' 
' 	return Stat;
 if_e	add	ptr__ff_cc_dat__, #392
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #392
	mov	local05, result1
	zerox	local05, #7
	test	local05, #1 wz
 if_ne	jmp	#LR__0297
	cmp	local03, #0 wz
 if_e	jmp	#LR__0296
	zerox	result1, #7
	and	result1, #4 wz
' 				return FR_WRITE_PROTECTED;
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0311
LR__0296
' 			}
' 			return FR_OK;
	mov	result1, #0
	jmp	#LR__0311
LR__0297
LR__0298
	wrbyte	#0, local06
	add	local06, #1
	wrbyte	local04, local06
	rdbyte	arg01, local06
	sub	local06, #1
	call	#_ff_cc_disk_initialize
	mov	local07, result1
	mov	local05, local07
	zerox	local05, #7
	test	local05, #1 wz
' 		return FR_NOT_READY;
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0311
	cmp	local03, #0 wz
 if_e	jmp	#LR__0299
	mov	local05, local07
	zerox	local05, #7
	test	local05, #4 wz
' 		return FR_WRITE_PROTECTED;
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0311
LR__0299
	mov	arg01, local06
	mov	arg02, #0
	call	#_ff_cc_find_volume_0280
	mov	local08, result1
	cmp	local08, #4 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0311
	cmp	local08, #2 wcz
 if_ae	mov	result1, #13
 if_ae	jmp	#LR__0311
	add	local06, #44
	rdlong	local09, local06
	add	local06, #4
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #11
	call	#_ff_cc_ld_word_0176
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, ##512 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0311
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #22
	call	#_ff_cc_ld_word_0176
	mov	local10, result1
	zerox	local10, #15 wz
 if_ne	jmp	#LR__0300
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #36
	call	#_ff_cc_ld_dword_0178
	mov	local10, result1
LR__0300
	add	local06, #24
	wrlong	local10, local06
	add	local06, #40
	rdbyte	local05, local06
	sub	local06, #62
	wrbyte	local05, local06
	rdbyte	local05, local06
	sub	local06, #2
	zerox	local05, #7
	cmp	local05, #1 wz
 if_e	jmp	#LR__0301
	add	local06, #2
	rdbyte	local11, local06
	sub	local06, #2
	zerox	local11, #7
	cmp	local11, #2 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0311
LR__0301
	add	local06, #2
	rdbyte	local05, local06
	qmul	local10, local05
	getqx	local10
	add	local06, #59
	rdbyte	local05, local06
	sub	local06, #51
	wrword	local05, local06
	rdword	local05, local06
	sub	local06, #10
	zerox	local05, #15 wz
 if_e	jmp	#LR__0302
	add	local06, #10
	rdword	local11, local06
	rdword	local12, local06
	sub	local06, #10
	zerox	local12, #15
	sub	local12, #1
	test	local11, local12 wz
 if_e	jmp	#LR__0303
LR__0302
	mov	result1, #13
	jmp	#LR__0311
LR__0303
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #17
	call	#_ff_cc_ld_word_0176
	add	local06, #8
	wrword	result1, local06
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15
	abs	local11, local05 wc
	and	local11, #15
 if_b	neg	local11, local11
	cmp	local11, #0 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0311
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #19
	call	#_ff_cc_ld_word_0176
	mov	local13, result1
	zerox	local13, #15 wz
 if_ne	jmp	#LR__0304
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #32
	call	#_ff_cc_ld_dword_0178
	mov	local13, result1
LR__0304
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #14
	call	#_ff_cc_ld_word_0176
	mov	local14, result1
	mov	local05, local14
	zerox	local05, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0311
	mov	local15, local14
	zerox	local15, #15
	add	local15, local10
	add	local06, #8
	rdword	local16, local06
	sub	local06, #8
	zerox	local16, #15
	abs	local17, local16 wc
	shr	local17, #4
 if_b	neg	local17, local17
	add	local15, local17
	cmp	local13, local15 wcz
 if_b	mov	result1, #13
 if_b	jmp	#LR__0311
	mov	muldiva_, local13
	sub	muldiva_, local15
	add	local06, #10
	rdword	muldivb_, local06
	sub	local06, #10
	zerox	muldivb_, #15
	call	#unsdivide_
	mov	local18, muldivb_ wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0311
	mov	local08, #0
	cmp	local18, ##268435445 wcz
 if_be	mov	local08, #3
	cmp	local18, ##65525 wcz
 if_be	mov	local08, #2
	cmp	local18, ##4085 wcz
 if_be	mov	local08, #1
	cmp	local08, #0 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0311
	mov	local05, local18
	add	local05, #2
	add	local06, #20
	wrlong	local05, local06
	add	local06, #8
	wrlong	local09, local06
	mov	local05, local09
	mov	local16, local14
	zerox	local16, #15
	add	local05, local16
	add	local06, #4
	wrlong	local05, local06
	mov	local05, local09
	add	local05, local15
	add	local06, #8
	wrlong	local05, local06
	sub	local06, #40
	cmp	local08, #3 wz
 if_ne	jmp	#LR__0305
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #42
	call	#_ff_cc_ld_word_0176
	mov	local05, result1
	zerox	local05, #15 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0311
	add	local06, #8
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0311
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #44
	call	#_ff_cc_ld_dword_0178
	add	local06, #36
	wrlong	result1, local06
	sub	local06, #16
	rdlong	local19, local06
	sub	local06, #20
	shl	local19, #2
	jmp	#LR__0308
LR__0305
	add	local06, #8
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0311
	add	local06, #32
	rdlong	local05, local06
	add	local05, local10
	add	local06, #4
	wrlong	local05, local06
	sub	local06, #36
	cmp	local08, #2 wz
 if_ne	jmp	#LR__0306
	add	local06, #20
	rdlong	local05, local06
	sub	local06, #20
	shl	local05, #1
	jmp	#LR__0307
LR__0306
	add	local06, #20
	rdlong	local20, local06
	mov	local05, local20
	shl	local05, #1
	add	local05, local20
	shr	local05, #1
	sub	local06, #20
	test	local20, #1 wz
 if_ne	add	local05, #1
LR__0307
	mov	local19, local05
LR__0308
	mov	local16, local19
	add	local16, #511
	shr	local16, #9
	add	local06, #24
	rdlong	local11, local06
	sub	local06, #24
	cmp	local11, local16 wcz
 if_b	mov	result1, #13
 if_b	jmp	#LR__0311
	add	local06, #16
	wrlong	##-1, local06
	sub	local06, #4
	wrlong	##-1, local06
	sub	local06, #8
	wrbyte	#128, local06
	sub	local06, #4
	cmp	local08, #3 wz
 if_ne	jmp	#LR__0310
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #48
	call	#_ff_cc_ld_word_0176
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, #1 wz
 if_ne	jmp	#LR__0310
	mov	local21, local06
	mov	local22, local09
	add	local22, #1
	mov	local23, local22
	mov	arg01, local21
	mov	arg02, local23
	call	#_ff_cc_move_window_0196
	mov	local24, result1 wz
 if_ne	jmp	#LR__0310
	add	local06, #4
	wrbyte	#0, local06
	add	local06, #44
	mov	local11, local06
	mov	local16, local11
	add	local16, #510
	mov	local17, local16
	mov	arg01, local17
	sub	local06, #48
	call	#_ff_cc_ld_word_0176
	mov	local12, result1
	mov	local05, local12
	zerox	local05, #15
	cmp	local05, ##43605 wz
 if_ne	jmp	#LR__0309
	add	local06, #48
	mov	local22, local06
	mov	local21, local22
	mov	local23, local21
	mov	arg01, local23
	sub	local06, #48
	call	#_ff_cc_ld_dword_0178
	mov	local24, result1
	cmp	local24, ##1096897106 wz
 if_ne	jmp	#LR__0309
	add	local06, #48
	mov	local25, local06
	mov	local20, local25
	add	local20, #484
	mov	local26, local20
	mov	arg01, local26
	sub	local06, #48
	call	#_ff_cc_ld_dword_0178
	mov	local27, result1
	cmp	local27, ##1631679090 wz
 if_ne	jmp	#LR__0309
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #488
	call	#_ff_cc_ld_dword_0178
	mov	local17, result1
	add	local06, #16
	wrlong	local17, local06
	add	local06, #32
	mov	local16, local06
	mov	local05, local16
	add	local05, #492
	mov	local11, local05
	mov	arg01, local11
	sub	local06, #48
	call	#_ff_cc_ld_dword_0178
	mov	local17, result1
	add	local06, #12
	wrlong	local17, local06
	sub	local06, #12
LR__0309
LR__0310
	wrbyte	local08, local06
	add	ptr__ff_cc_dat__, #4
	rdword	local05, ptr__ff_cc_dat__
	add	local05, #1
	wrword	local05, ptr__ff_cc_dat__
	rdword	local11, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #4
	add	local06, #6
	wrword	local11, local06
' 				&& ld_dword(fs->win +  0 ) == 0x41615252
' 				&& ld_dword(fs->win +  484 ) == 0x61417272)
' 			{
' 
' 				fs->free_clst = ld_dword(fs->win +  488 );
' 
' 
' 				fs->last_clst = ld_dword(fs->win +  492 );
' 
' 			}
' 		}
' 
' 
' 	}
' 
' 	fs->fs_type = (BYTE)fmt;
' 	fs->id = ++Fsid;
' #line 3589 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	return FR_OK;
	mov	result1, #0
LR__0311
	mov	ptra, fp
	call	#popregs_
_ff_cc_mount_volume_0292_ret
	ret

_ff_cc_validate_0294
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
	mov	local03, #9
 if_e	jmp	#LR__0312
	rdlong	local04, local01 wz
 if_e	jmp	#LR__0312
	rdlong	local05, local01
	rdbyte	local06, local05 wz
 if_e	jmp	#LR__0312
	add	local01, #4
	rdword	local07, local01
	sub	local01, #4
	zerox	local07, #15
	rdlong	local08, local01
	add	local08, #6
	rdword	local09, local08
	sub	local08, #6
	mov	local10, local09
	zerox	local10, #15
	cmp	local07, local10 wz
 if_ne	jmp	#LR__0312
	rdlong	local05, local01
	add	local05, #1
	rdbyte	local07, local05
	sub	local05, #1
	mov	local06, local07
	mov	arg01, local06 wz
 if_ne	mov	result1, #1
' 
' 	return Stat;
 if_e	add	ptr__ff_cc_dat__, #392
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #392
	mov	local11, result1
	mov	local04, local11
	zerox	local04, #7
	and	local04, #1 wz
 if_e	mov	local03, #0
LR__0312
	cmp	local03, #0 wz
 if_e	rdlong	local04, local01
 if_ne	mov	local04, #0
	wrlong	local04, local02
' 			res = FR_OK;
' 		}
' 
' 	}
' 	*rfs = (res == FR_OK) ? obj->fs : 0;
' 	return res;
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_validate_0294_ret
	ret

_ff_cc_f_mount
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #32
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	mov	arg01, fp
	sub	fp, #28
	call	#_ff_cc_get_ldnumber_0275
	add	fp, #20
	wrlong	result1, fp
	mov	local01, result1
	sub	fp, #20
	cmps	local01, #0 wcz
 if_b	mov	result1, #11
 if_b	jmp	#LR__0315
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, ptr__ff_cc_dat__
	rdlong	local02, local01
	sub	fp, #4
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0313
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	wrbyte	#0, local01
LR__0313
	add	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	jmp	#LR__0314
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrbyte	#0, local01
LR__0314
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, ptr__ff_cc_dat__
	sub	fp, #16
	rdlong	local02, fp
	wrlong	local02, local01
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0315
	add	fp, #8
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, fp
	sub	fp, #4
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0292
	add	fp, #24
	wrlong	result1, fp
' 
' 	res = mount_volume(&path, &fs, 0);
' 	return res ;
	sub	fp, #24
LR__0315
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_mount_ret
	ret

_ff_cc_f_open
	mov	COUNT_, #16
	call	#pushregs_
	add	ptra, #88
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #8
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0339
	add	fp, #12
	rdbyte	local01, fp
	and	local01, #63
	wrbyte	local01, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #56
	mov	arg02, fp
	sub	fp, #52
	rdbyte	local02, fp
	sub	fp, #12
	mov	arg03, local02
	call	#_ff_cc_mount_volume_0292
	mov	local03, result1
	add	fp, #16
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0337
	add	fp, #64
	rdlong	local01, fp
	sub	fp, #44
	wrlong	local01, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	local04, fp
	sub	fp, #8
	mov	local05, local04
	mov	arg02, local05
	call	#_ff_cc_follow_path_0269
	mov	local06, result1
	add	fp, #16
	wrlong	local06, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0316
	add	fp, #63
	rdbyte	local01, fp
	sub	fp, #63
	zerox	local01, #7
	test	local01, #128 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #16
LR__0316
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #28 wz
 if_e	jmp	#LR__0322
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0318
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0317
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	call	#_ff_cc_dir_register_0250
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
LR__0317
	add	fp, #12
	rdbyte	local01, fp
	or	local01, #8
	wrbyte	local01, fp
	sub	fp, #12
	jmp	#LR__0321
LR__0318
	add	fp, #26
	rdbyte	local01, fp
	sub	fp, #26
	zerox	local01, #7
	test	local01, #17 wz
 if_e	jmp	#LR__0319
	add	fp, #16
	wrlong	#7, fp
	sub	fp, #16
	jmp	#LR__0320
LR__0319
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #4 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#8, fp
 if_ne	sub	fp, #16
LR__0320
LR__0321
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0327
	add	fp, #12
	rdbyte	local05, fp
	sub	fp, #12
	zerox	local05, #7
	test	local05, #8 wz
 if_e	jmp	#LR__0327
	add	fp, #64
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_ff_cc_ld_clust_0237
	mov	local06, result1
	add	fp, #68
	wrlong	local06, fp
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #14
	mov	arg02, ##1310785536
	call	#_ff_cc_st_dword_0180
	add	fp, #48
	rdlong	local01, fp
	add	local01, #11
	wrbyte	#32, local01
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	mov	arg03, #0
	call	#_ff_cc_st_clust_0238
	add	fp, #48
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #28
	mov	arg02, #0
	call	#_ff_cc_st_dword_0180
	add	fp, #64
	rdlong	local01, fp
	add	local01, #3
	wrbyte	#1, local01
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #68
	mov	local01, local07 wz
 if_e	jmp	#LR__0327
	add	fp, #64
	rdlong	local01, fp
	add	local01, #44
	rdlong	local05, local01
	add	fp, #16
	wrlong	local05, fp
	sub	fp, #60
	mov	arg01, fp
	add	fp, #48
	rdlong	arg02, fp
	sub	fp, #68
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0212
	mov	local07, result1
	add	fp, #16
	wrlong	local07, fp
	sub	fp, #16
	mov	local01, local07 wz
 if_ne	jmp	#LR__0327
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #80
	call	#_ff_cc_move_window_0196
	mov	local06, result1
	add	fp, #16
	wrlong	local06, fp
	add	fp, #48
	rdlong	local01, fp
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #68
	sub	local05, #1
	add	local01, #12
	wrlong	local05, local01
	jmp	#LR__0327
LR__0322
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0326
	add	fp, #26
	rdbyte	local01, fp
	sub	fp, #26
	zerox	local01, #7
	test	local01, #16 wz
 if_e	jmp	#LR__0323
	add	fp, #16
	wrlong	#4, fp
	sub	fp, #16
	jmp	#LR__0325
LR__0323
	add	fp, #12
	rdbyte	local07, fp
	sub	fp, #12
	mov	local01, local07
	zerox	local01, #7
	test	local01, #2 wz
 if_e	jmp	#LR__0324
	add	fp, #26
	rdbyte	local04, fp
	sub	fp, #26
	mov	local05, local04
	zerox	local05, #7
	and	local05, #1 wz
 if_e	jmp	#LR__0324
	mov	local01, #7
	add	fp, #16
	wrlong	#7, fp
	sub	fp, #16
LR__0324
LR__0325
LR__0326
LR__0327
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0329
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #8 wz
 if_e	jmp	#LR__0328
	add	fp, #12
	rdbyte	local01, fp
	or	local01, #64
	wrbyte	local01, fp
	sub	fp, #12
LR__0328
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	add	local05, #44
	rdlong	local06, local05
	add	local01, #32
	wrlong	local06, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #44
	rdlong	local05, fp
	sub	fp, #48
	add	local01, #36
	wrlong	local05, local01
LR__0329
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0336
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_ff_cc_ld_clust_0237
	mov	local03, result1
	add	local01, #8
	wrlong	local03, local01
	add	fp, #4
	rdlong	local01, fp
	add	fp, #44
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #28
	call	#_ff_cc_ld_dword_0178
	add	local01, #12
	wrlong	result1, local01
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	wrlong	local05, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	add	local05, #6
	rdword	local06, local05
	add	local01, #4
	wrword	local06, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #8
	rdbyte	local05, fp
	add	local01, #16
	wrbyte	local05, local01
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #17
	wrbyte	#0, local01
	rdlong	local01, fp
	add	local01, #28
	wrlong	#0, local01
	rdlong	local01, fp
	add	local01, #20
	wrlong	#0, local01
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #32 wz
 if_e	jmp	#LR__0335
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #12
	rdlong	local02, local05
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0335
	add	fp, #4
	rdlong	local01, fp
	mov	local05, local01
	add	local05, #12
	rdlong	local06, local05
	add	local01, #20
	wrlong	local06, local01
	add	fp, #60
	rdlong	local07, fp
	add	local07, #10
	rdword	local06, local07
	shl	local06, #9
	add	fp, #8
	wrlong	local06, fp
	sub	fp, #68
	rdlong	local01, fp
	add	local01, #8
	rdlong	local05, local01
	add	fp, #72
	wrlong	local05, fp
' 				fp->fptr = fp->obj.objsize;
' 				bcs = (DWORD)fs->csize *  ((UINT) 512 ) ;
' 				clst = fp->obj.sclust;
' 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
	sub	fp, #72
	rdlong	local01, fp
	add	local01, #12
	rdlong	local05, local01
	add	fp, #80
	wrlong	local05, fp
	sub	fp, #84
LR__0330
	add	fp, #16
	rdlong	local06, fp
	sub	fp, #16
	mov	local04, local06 wz
 if_ne	jmp	#LR__0331
	add	fp, #84
	rdlong	local03, fp
	mov	local02, local03
	sub	fp, #12
	rdlong	local08, fp
	sub	fp, #72
	mov	local09, local08
	cmp	local02, local09 wcz
 if_be	jmp	#LR__0331
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #72
	rdlong	local10, fp
	sub	fp, #76
	mov	local11, local10
	mov	arg02, local11
	call	#_ff_cc_get_fat_0204
	mov	local12, result1
	add	fp, #76
	wrlong	local12, fp
	sub	fp, #76
	cmp	local12, #1 wcz
 if_be	add	fp, #16
 if_be	wrlong	#2, fp
 if_be	sub	fp, #16
	add	fp, #76
	rdlong	local13, fp
	sub	fp, #76
	cmp	local13, ##-1 wz
 if_e	add	fp, #16
 if_e	wrlong	#1, fp
 if_e	sub	fp, #16
	add	fp, #84
	rdlong	local14, fp
	mov	local13, local14
	sub	fp, #12
	rdlong	local15, fp
	mov	local16, local15
	sub	local13, local16
	add	fp, #12
	wrlong	local13, fp
	sub	fp, #84
	jmp	#LR__0330
LR__0331
	add	fp, #4
	rdlong	local01, fp
	add	fp, #72
	rdlong	local05, fp
	add	local01, #24
	wrlong	local05, local01
	sub	fp, #60
	rdlong	local07, fp
	sub	fp, #16
	mov	local01, local07 wz
 if_ne	jmp	#LR__0334
	add	fp, #84
	rdlong	local06, fp
	sub	fp, #84
	mov	local04, local06
	mov	local05, local04
	and	local05, #511 wz
 if_e	jmp	#LR__0334
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #12
	rdlong	local04, fp
	sub	fp, #76
	mov	local05, local04
	mov	arg02, local05
	call	#_ff_cc_clst2sect_0199
	mov	local06, result1
	add	fp, #80
	wrlong	local06, fp
	rdlong	local07, fp wz
	sub	fp, #80
 if_ne	jmp	#LR__0332
	mov	local01, #2
	add	fp, #16
	wrlong	#2, fp
	sub	fp, #16
	jmp	#LR__0333
LR__0332
	add	fp, #4
	rdlong	local07, fp
	mov	local01, local07
	add	fp, #76
	rdlong	local04, fp
	mov	local05, local04
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #84
	mov	local02, local03
	mov	local06, local02
	shr	local06, #9
	add	local05, local06
	add	local01, #28
	wrlong	local05, local01
	sub	local01, #28
LR__0333
LR__0334
LR__0335
LR__0336
LR__0337
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0338
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0338
' 
' 	return res ;
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0339
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_open_ret
	ret

_ff_cc_f_read
	mov	COUNT_, #25
	call	#pushregs_
	add	ptra, #56
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #24
	wrlong	#0, fp
	sub	fp, #32
	rdlong	local01, fp
	add	fp, #44
	wrlong	local01, fp
	sub	fp, #36
	rdlong	local01, fp
	wrlong	#0, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_validate_0294
	add	fp, #20
	wrlong	result1, fp
	mov	local02, result1
	sub	fp, #20
	mov	local01, local02 wz
 if_ne	jmp	#LR__0340
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local04, local03
	mov	local05, local04
	zerox	local05, #7
	add	fp, #16
	wrlong	local05, fp
	sub	fp, #20
	mov	local06, local05 wz
 if_e	jmp	#LR__0341
LR__0340
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0359
LR__0341
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local01, local02
	test	local01, #1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0359
	add	fp, #4
	rdlong	local02, fp
	mov	local03, local02
	add	local02, #12
	rdlong	local01, local02
	add	local03, #20
	rdlong	local06, local03
	sub	local01, local06
	add	fp, #32
	wrlong	local01, fp
	sub	fp, #24
	rdlong	local01, fp
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #36
	cmp	local01, local07 wcz
 if_be	jmp	#LR__0342
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #24
	wrlong	local01, fp
	sub	fp, #12
LR__0342
' 
' 	for ( ; btr;
LR__0343
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	mov	local01, local02 wz
 if_e	jmp	#LR__0358
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #20
	rdlong	local08, local07
	test	local08, #511 wz
 if_ne	jmp	#LR__0354
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local07, local03
	shr	local07, #9
	add	fp, #20
	rdlong	local09, fp
	mov	local10, local09
	add	local10, #10
	rdword	local11, local10
	mov	local05, local11
	zerox	local05, #15
	sub	local05, #1
	and	local07, local05
	add	fp, #24
	wrlong	local07, fp
	rdlong	local07, fp wz
	sub	fp, #48
 if_ne	jmp	#LR__0348
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #20
	rdlong	local08, local07 wz
 if_ne	jmp	#LR__0344
	add	fp, #4
	rdlong	local07, fp
	add	local07, #8
	rdlong	local08, local07
	add	fp, #24
	wrlong	local08, fp
	sub	fp, #28
	jmp	#LR__0345
LR__0344
	add	fp, #4
	rdlong	arg01, fp
	mov	local06, arg01
	sub	fp, #4
	add	local06, #24
	rdlong	arg02, local06
	call	#_ff_cc_get_fat_0204
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
LR__0345
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #28
	cmp	local07, #2 wcz
 if_ae	jmp	#LR__0346
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#2, local07
	mov	result1, #2
	jmp	#LR__0359
LR__0346
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #28
	cmp	local07, ##-1 wz
 if_ne	jmp	#LR__0347
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0359
LR__0347
	add	fp, #4
	rdlong	local07, fp
	add	fp, #24
	rdlong	local08, fp
	sub	fp, #28
	add	local07, #24
	wrlong	local08, local07
LR__0348
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local08, fp
	sub	fp, #4
	add	local08, #24
	rdlong	arg02, local08
	call	#_ff_cc_clst2sect_0199
	add	fp, #32
	wrlong	result1, fp
	rdlong	local07, fp wz
	sub	fp, #32
 if_ne	jmp	#LR__0349
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#2, local07
	mov	result1, #2
	jmp	#LR__0359
LR__0349
	add	fp, #32
	rdlong	local07, fp
	add	fp, #16
	rdlong	local08, fp
	add	local07, local08
	sub	fp, #16
	wrlong	local07, fp
	sub	fp, #20
	rdlong	local07, fp
	shr	local07, #9
	add	fp, #32
	wrlong	local07, fp
	sub	fp, #44
	cmp	local07, #0 wcz
 if_be	jmp	#LR__0353
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #4
	rdlong	local08, fp
	add	local07, local08
	sub	fp, #20
	rdlong	local05, fp
	sub	fp, #24
	add	local05, #10
	rdword	local06, local05
	cmp	local07, local06 wcz
 if_be	jmp	#LR__0350
	add	fp, #24
	rdlong	local03, fp
	add	local03, #10
	rdword	local07, local03
	add	fp, #24
	rdlong	local06, fp
	sub	local07, local06
	sub	fp, #4
	wrlong	local07, fp
	sub	fp, #44
LR__0350
	add	fp, #24
	rdlong	local07, fp
	add	local07, #1
	rdbyte	arg01, local07
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #20
	rdlong	arg03, fp
	add	fp, #12
	rdlong	arg04, fp
	sub	fp, #44
	call	#_ff_cc_disk_read
	cmp	result1, #0 wz
 if_e	jmp	#LR__0351
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0359
LR__0351
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #3
	rdbyte	local08, local07 wz
 if_e	jmp	#LR__0352
	add	fp, #24
	rdlong	local05, fp
	add	local05, #44
	rdlong	local06, local05
	add	fp, #8
	rdlong	local11, fp
	sub	local06, local11
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #44
	cmp	local06, local12 wcz
 if_ae	jmp	#LR__0352
	add	fp, #52
	rdlong	local03, fp
	mov	local07, local03
	sub	fp, #28
	rdlong	local06, fp
	mov	local04, local06
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local08, local05
	add	fp, #8
	rdlong	local09, fp
	mov	local10, local09
	sub	local08, local10
	mov	local11, local08
	shl	local11, #9
	mov	local13, local11
	add	local07, local11
	mov	local12, local07
	sub	fp, #8
	rdlong	local14, fp
	sub	fp, #24
	mov	local15, local14
	add	local15, #48
	mov	local16, local15
	mov	local17, local16
	decod	local18, #9
	mov	arg01, local12
	mov	arg02, local17
	decod	arg03, #9
	sub	local15, #48
	call	#_ff_cc_mem_cpy_0183
LR__0352
	add	fp, #44
	rdlong	local07, fp
	shl	local07, #9
	sub	fp, #4
	wrlong	local07, fp
	sub	fp, #40
' 					mem_cpy(rbuff + ((fs->winsect - sect) *  ((UINT) 512 ) ), fs->win,  ((UINT) 512 ) );
' 				}
' #line 3949 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 				rcnt =  ((UINT) 512 )  * cc;
' 				continue;
	jmp	#LR__0357
LR__0353
	add	fp, #4
	rdlong	local07, fp
	add	fp, #28
	rdlong	local08, fp
	sub	fp, #32
	add	local07, #28
	wrlong	local08, local07
LR__0354
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local04, local03
	and	local04, #511
	decod	local07, #9
	sub	local07, local04
	add	fp, #36
	wrlong	local07, fp
	sub	fp, #28
	rdlong	local08, fp
	sub	fp, #12
	cmp	local07, local08 wcz
 if_be	jmp	#LR__0355
	add	fp, #12
	rdlong	local07, fp
	add	fp, #28
	wrlong	local07, fp
	sub	fp, #40
LR__0355
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local08, fp
	sub	fp, #4
	add	local08, #28
	rdlong	arg02, local08
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_e	jmp	#LR__0356
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0359
LR__0356
	add	fp, #52
	rdlong	arg01, fp
	sub	fp, #28
	rdlong	arg02, fp
	add	arg02, #48
	sub	fp, #20
	rdlong	local10, fp
	add	local10, #20
	rdlong	local15, local10
	and	local15, #511
	add	arg02, local15
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #40
	call	#_ff_cc_mem_cpy_0183
LR__0357
	add	fp, #12
	rdlong	local07, fp
	add	fp, #28
	rdlong	local04, fp
	sub	local07, local04
	sub	fp, #28
	wrlong	local07, fp
	add	fp, #4
	rdlong	local06, fp
	rdlong	local10, local06
	add	fp, #24
	rdlong	local12, fp
	mov	local13, local12
	add	local10, local12
	wrlong	local10, local06
	add	fp, #12
	rdlong	local14, fp
	mov	local15, local14
	sub	fp, #12
	rdlong	local17, fp
	mov	local16, local17
	add	local15, local17
	add	fp, #12
	wrlong	local15, fp
	sub	fp, #48
	rdlong	local19, fp
	mov	local18, local19
	mov	local20, local19
	mov	local21, local20
	add	local21, #20
	rdlong	local22, local21
	sub	local21, #20
	mov	local23, local22
	add	fp, #36
	rdlong	local24, fp
	sub	fp, #40
	mov	local25, local24
	add	local23, local24
	add	local18, #20
	wrlong	local23, local18
	sub	local18, #20
	jmp	#LR__0343
LR__0358
' 		mem_cpy(rbuff, fs->win + fp->fptr %  ((UINT) 512 ) , rcnt);
' #line 3973 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	}
' 
' 	return FR_OK ;
	mov	result1, #0
LR__0359
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_read_ret
	ret

_ff_cc_f_write
	mov	COUNT_, #42
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #20
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #32
	rdlong	local01, fp
	wrlong	#0, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_validate_0294
	add	fp, #20
	wrlong	result1, fp
	mov	local02, result1
	sub	fp, #20
	mov	local01, local02 wz
 if_ne	jmp	#LR__0360
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local04, local03
	add	fp, #16
	wrlong	local04, fp
	sub	fp, #20
	mov	local05, local04 wz
 if_e	jmp	#LR__0361
LR__0360
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0385
LR__0361
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local01, local02
	test	local01, #2 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0385
	add	fp, #4
	rdlong	local06, fp
	mov	local07, local06
	add	local07, #20
	rdlong	local03, local07
	add	fp, #8
	rdlong	local08, fp
	mov	local04, local08
	add	local03, local08
	sub	fp, #8
	rdlong	local09, fp
	sub	fp, #4
	mov	local10, local09
	add	local10, #20
	rdlong	local11, local10
	sub	local10, #20
	mov	local12, local11
	cmp	local03, local12 wcz
 if_ae	jmp	#LR__0362
	add	fp, #4
	rdlong	local02, fp
	neg	local01, #1
	add	local02, #20
	rdlong	local03, local02
	sub	local01, local03
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #12
LR__0362
' 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
' 	}
' 
' 	for ( ; btw;
LR__0363
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	mov	local01, local02 wz
 if_e	jmp	#LR__0384
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #20
	rdlong	local07, local13
	test	local07, #511 wz
 if_ne	jmp	#LR__0378
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local13, local03
	shr	local13, #9
	add	fp, #20
	rdlong	local08, fp
	add	local08, #10
	rdword	local09, local08
	mov	local04, local09
	zerox	local04, #15
	sub	local04, #1
	and	local13, local04
	add	fp, #20
	wrlong	local13, fp
	rdlong	local13, fp wz
	sub	fp, #44
 if_ne	jmp	#LR__0369
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #20
	rdlong	local07, local13 wz
 if_ne	jmp	#LR__0364
	add	fp, #4
	rdlong	local13, fp
	add	local13, #8
	rdlong	local07, local13
	add	fp, #24
	wrlong	local07, fp
	rdlong	local13, fp wz
	sub	fp, #28
 if_ne	jmp	#LR__0365
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_create_chain_0218
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
	jmp	#LR__0365
LR__0364
	add	fp, #4
	rdlong	arg01, fp
	mov	local05, arg01
	sub	fp, #4
	add	local05, #24
	rdlong	arg02, local05
	call	#_ff_cc_create_chain_0218
	mov	local09, result1
	add	fp, #28
	wrlong	local09, fp
	sub	fp, #28
LR__0365
	add	fp, #28
	rdlong	local13, fp wz
	sub	fp, #28
 if_e	jmp	#LR__0384
	add	fp, #28
	rdlong	local13, fp
	sub	fp, #28
	cmp	local13, #1 wz
 if_ne	jmp	#LR__0366
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#2, local13
	mov	result1, #2
	jmp	#LR__0385
LR__0366
	add	fp, #28
	rdlong	local13, fp
	sub	fp, #28
	cmp	local13, ##-1 wz
 if_ne	jmp	#LR__0367
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0385
LR__0367
	add	fp, #4
	rdlong	local13, fp
	add	fp, #24
	rdlong	local07, fp
	add	local13, #24
	wrlong	local07, local13
	sub	fp, #24
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #8
	rdlong	local07, local13 wz
 if_ne	jmp	#LR__0368
	add	fp, #4
	rdlong	local13, fp
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #28
	add	local13, #8
	wrlong	local07, local13
LR__0368
LR__0369
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local13, #44
	rdlong	local05, local13
	add	local07, #28
	rdlong	local08, local07
	cmp	local05, local08 wz
 if_ne	jmp	#LR__0370
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #24
	call	#_ff_cc_sync_window_0194
	cmp	result1, #0 wz
 if_e	jmp	#LR__0370
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0385
LR__0370
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #24
	rdlong	arg02, local07
	call	#_ff_cc_clst2sect_0199
	add	fp, #32
	wrlong	result1, fp
	rdlong	local13, fp wz
	sub	fp, #32
 if_ne	jmp	#LR__0371
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#2, local13
	mov	result1, #2
	jmp	#LR__0385
LR__0371
	add	fp, #32
	rdlong	local13, fp
	add	fp, #12
	rdlong	local07, fp
	add	local13, local07
	sub	fp, #12
	wrlong	local13, fp
	sub	fp, #20
	rdlong	local13, fp
	shr	local13, #9
	add	fp, #28
	wrlong	local13, fp
	sub	fp, #40
	cmp	local13, #0 wcz
 if_be	jmp	#LR__0375
	add	fp, #44
	rdlong	local13, fp
	sub	fp, #4
	rdlong	local07, fp
	add	local13, local07
	sub	fp, #16
	rdlong	local04, fp
	sub	fp, #24
	add	local04, #10
	rdword	local05, local04
	cmp	local13, local05 wcz
 if_be	jmp	#LR__0372
	add	fp, #24
	rdlong	local03, fp
	add	local03, #10
	rdword	local13, local03
	add	fp, #20
	rdlong	local05, fp
	sub	local13, local05
	sub	fp, #4
	wrlong	local13, fp
	sub	fp, #40
LR__0372
	add	fp, #24
	rdlong	local13, fp
	add	local13, #1
	rdbyte	arg01, local13
	add	fp, #24
	rdlong	arg02, fp
	sub	fp, #16
	rdlong	arg03, fp
	add	fp, #8
	rdlong	arg04, fp
	sub	fp, #40
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0373
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0385
LR__0373
	add	fp, #24
	rdlong	local03, fp
	add	local03, #44
	rdlong	local13, local03
	add	fp, #8
	rdlong	local05, fp
	sub	local13, local05
	add	fp, #8
	rdlong	local08, fp
	sub	fp, #40
	cmp	local13, local08 wcz
 if_ae	jmp	#LR__0374
	add	fp, #24
	rdlong	arg01, fp
	add	arg01, #48
	add	fp, #24
	rdlong	arg02, fp
	sub	fp, #24
	rdlong	local10, fp
	add	local10, #44
	rdlong	local14, local10
	add	fp, #8
	rdlong	local11, fp
	sub	fp, #32
	sub	local14, local11
	shl	local14, #9
	add	arg02, local14
	decod	arg03, #9
	call	#_ff_cc_mem_cpy_0183
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #24
	add	local13, #3
	wrbyte	#0, local13
LR__0374
	add	fp, #40
	rdlong	local13, fp
	shl	local13, #9
	sub	fp, #4
	wrlong	local13, fp
	sub	fp, #36
' 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) *  ((UINT) 512 ) ),  ((UINT) 512 ) );
' 					fs->wflag = 0;
' 				}
' #line 4067 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 				wcnt =  ((UINT) 512 )  * cc;
' 				continue;
	jmp	#LR__0381
LR__0375
	add	fp, #4
	rdlong	local13, fp
	mov	local07, local13
	sub	fp, #4
	add	local13, #20
	rdlong	local05, local13
	add	local07, #12
	rdlong	local08, local07
	cmp	local05, local08 wcz
 if_b	jmp	#LR__0377
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #24
	call	#_ff_cc_sync_window_0194
	cmp	result1, #0 wz
 if_e	jmp	#LR__0376
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0385
LR__0376
	add	fp, #24
	rdlong	local13, fp
	add	fp, #8
	rdlong	local07, fp
	sub	fp, #32
	add	local13, #44
	wrlong	local07, local13
LR__0377
	add	fp, #4
	rdlong	local13, fp
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #32
	add	local13, #28
	wrlong	local07, local13
LR__0378
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local06, local03
	and	local06, #511
	decod	local13, #9
	sub	local13, local06
	add	fp, #32
	wrlong	local13, fp
	sub	fp, #24
	rdlong	local07, fp
	sub	fp, #12
	cmp	local13, local07 wcz
 if_be	jmp	#LR__0379
	add	fp, #12
	rdlong	local13, fp
	add	fp, #24
	wrlong	local13, fp
	sub	fp, #36
LR__0379
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #28
	rdlong	arg02, local07
	call	#_ff_cc_move_window_0196
	cmp	result1, #0 wz
 if_e	jmp	#LR__0380
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0385
LR__0380
	add	fp, #24
	rdlong	arg01, fp
	add	arg01, #48
	sub	fp, #20
	rdlong	local05, fp
	add	local05, #20
	rdlong	local12, local05
	and	local12, #511
	add	arg01, local12
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #12
	rdlong	arg03, fp
	sub	fp, #36
	call	#_ff_cc_mem_cpy_0183
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #24
	add	local13, #3
	wrbyte	#1, local13
LR__0381
	add	fp, #12
	rdlong	local13, fp
	add	fp, #24
	rdlong	local06, fp
	sub	local13, local06
	sub	fp, #24
	wrlong	local13, fp
	add	fp, #4
	rdlong	local05, fp
	mov	local10, local05
	rdlong	local08, local10
	add	fp, #20
	rdlong	local11, fp
	mov	local12, local11
	add	local08, local11
	wrlong	local08, local05
	add	fp, #12
	rdlong	local15, fp
	mov	local16, local15
	sub	fp, #12
	rdlong	local17, fp
	mov	local14, local17
	add	local16, local17
	add	fp, #12
	wrlong	local16, fp
	sub	fp, #44
	rdlong	local18, fp
	mov	local19, local18
	mov	local20, local18
	mov	local21, local20
	add	local21, #20
	rdlong	local22, local21
	sub	local21, #20
	mov	local23, local22
	add	fp, #32
	rdlong	local24, fp
	mov	local25, local24
	add	local23, local24
	add	local19, #20
	wrlong	local23, local19
	sub	local19, #20
	sub	fp, #32
	rdlong	local26, fp
	mov	local27, local26
	mov	local28, local26
	mov	local29, local28
	mov	local30, local26
	sub	fp, #4
	mov	local31, local30
	add	local29, #20
	rdlong	local32, local29
	sub	local29, #20
	mov	local33, local32
	add	local31, #12
	rdlong	local34, local31
	sub	local31, #12
	mov	local35, local34
	cmp	local33, local35 wcz
 if_be	jmp	#LR__0382
	add	fp, #4
	rdlong	local36, fp
	sub	fp, #4
	mov	local37, local36
	add	local37, #20
	rdlong	local38, local37
	sub	local37, #20
	mov	local39, local38
	jmp	#LR__0383
LR__0382
	add	fp, #4
	rdlong	local40, fp
	sub	fp, #4
	mov	local41, local40
	add	local41, #12
	rdlong	local42, local41
	sub	local41, #12
	mov	local39, local42
LR__0383
	add	local27, #12
	wrlong	local39, local27
	sub	local27, #12
	jmp	#LR__0363
LR__0384
	add	fp, #4
	rdlong	local01, fp
	mov	local03, local01
	sub	fp, #4
	add	local03, #16
	rdbyte	local13, local03
	or	local13, #64
	add	local01, #16
	wrbyte	local13, local01
' 		mem_cpy(fs->win + fp->fptr %  ((UINT) 512 ) , wbuff, wcnt);
' 		fs->wflag = 1;
' #line 4094 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	}
' 
' 	fp->flag |=  0x40 ;
' 
' 	return FR_OK ;
	mov	result1, #0
LR__0385
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_write_ret
	ret

_ff_cc_f_sync
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0294
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0388
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #16
	rdbyte	local02, local03
	test	local02, #64 wz
 if_e	jmp	#LR__0387
	add	fp, #16
	wrlong	##1310785536, fp
	sub	fp, #4
	rdlong	arg01, fp
	sub	fp, #8
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #32
	rdlong	arg02, local04
	call	#_ff_cc_move_window_0196
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0386
	add	fp, #4
	rdlong	local02, fp
	add	local02, #36
	rdlong	local02, local02
	add	fp, #16
	wrlong	local02, fp
	mov	local05, local02
	add	local05, #11
	rdbyte	local04, local05
	or	local04, #32
	add	local02, #11
	wrbyte	local04, local02
	sub	fp, #16
	rdlong	local02, fp
	rdlong	arg01, local02
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #16
	rdlong	local06, fp
	sub	fp, #4
	add	local06, #8
	rdlong	arg03, local06
	call	#_ff_cc_st_clust_0238
	add	fp, #20
	rdlong	arg01, fp
	add	arg01, #28
	sub	fp, #16
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #12
	rdlong	arg02, local05
	call	#_ff_cc_st_dword_0180
	add	fp, #20
	rdlong	arg01, fp
	add	arg01, #22
	sub	fp, #4
	rdlong	arg02, fp
	sub	fp, #16
	call	#_ff_cc_st_dword_0180
	add	fp, #20
	rdlong	arg01, fp
	sub	fp, #20
	add	arg01, #18
	mov	arg02, #0
	call	#_ff_cc_st_word_0179
	add	fp, #12
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	rdlong	arg01, fp
	sub	fp, #12
	call	#_ff_cc_sync_fs_0198
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #4
	rdlong	local02, fp
	mov	local05, local02
	sub	fp, #4
	add	local05, #16
	rdbyte	local04, local05
	and	local04, #191
	add	local02, #16
	wrbyte	local04, local02
LR__0386
LR__0387
LR__0388
' 					dir = fp->dir_ptr;
' 					dir[ 11 ] |=  0x20 ;
' 					st_clust(fp->obj.fs, dir, fp->obj.sclust);
' 					st_dword(dir +  28 , (DWORD)fp->obj.objsize);
' 					st_dword(dir +  22 , tm);
' 					st_word(dir +  18 , 0);
' 					fs->wflag = 1;
' 					res = sync_fs(fs);
' 					fp->flag &= (BYTE)~ 0x40 ;
' 				}
' 			}
' 		}
' 	}
' 
' 	return res ;
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_sync_ret
	ret

_ff_cc_f_close
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	sub	fp, #4
	call	#_ff_cc_f_sync
	add	fp, #8
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0390
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0294
	mov	local02, result1
	add	fp, #8
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0389
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0389
LR__0390
' 
' 
' 
' 
' 			fp->obj.fs = 0;
' #line 4212 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 		}
' 	}
' 	return res;
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_close_ret
	ret

_ff_cc_f_lseek
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #36
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_validate_0294
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0391
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local02, local03
	add	fp, #8
	wrlong	local02, fp
	sub	fp, #12
LR__0391
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0392
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	jmp	#LR__0412
LR__0392
	add	fp, #4
	rdlong	local02, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #8
	add	local02, #12
	rdlong	local05, local02
	mov	local06, local05
	cmp	local04, local06 wcz
 if_be	jmp	#LR__0393
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	mov	local08, local07
	add	local08, #16
	rdbyte	local09, local08
	sub	local08, #16
	mov	local01, local09
	zerox	local01, #7
	and	local01, #2 wz
 if_ne	jmp	#LR__0393
	add	fp, #4
	rdlong	local03, fp
	mov	local02, local03
	add	local02, #12
	rdlong	local10, local02
	sub	local02, #12
	add	fp, #4
	wrlong	local10, fp
	sub	fp, #8
LR__0393
	add	fp, #4
	rdlong	local02, fp
	add	local02, #20
	rdlong	local10, local02
	add	fp, #28
	wrlong	local10, fp
	sub	fp, #28
	rdlong	local02, fp
	add	fp, #24
	wrlong	#0, fp
	add	local02, #20
	wrlong	#0, local02
	sub	fp, #20
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0409
	add	fp, #16
	rdlong	local03, fp
	add	local03, #10
	rdword	local06, local03
	shl	local06, #9
	add	fp, #8
	wrlong	local06, fp
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #32
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0394
	add	fp, #8
	rdlong	muldiva_, fp
	sub	muldiva_, #1
	add	fp, #16
	rdlong	muldivb_, fp
	sub	fp, #24
	call	#unsdivide_
	mov	local06, muldivb_
	add	fp, #32
	rdlong	muldiva_, fp
	sub	muldiva_, #1
	sub	fp, #8
	rdlong	local09, fp
	sub	fp, #24
	mov	muldivb_, local09
	call	#unsdivide_
	mov	local07, muldivb_
	cmp	local06, local07 wcz
 if_b	jmp	#LR__0394
	add	fp, #4
	rdlong	local02, fp
	add	fp, #28
	rdlong	local10, fp
	sub	local10, #1
	sub	fp, #8
	rdlong	local06, fp
	sub	local06, #1
	andn	local10, local06
	add	local02, #20
	wrlong	local10, local02
	sub	fp, #16
	rdlong	local02, fp
	sub	fp, #4
	rdlong	local10, fp
	add	local10, #20
	rdlong	local06, local10
	sub	local02, local06
	add	fp, #4
	wrlong	local02, fp
	sub	fp, #4
	rdlong	local02, fp
	add	local02, #24
	rdlong	local10, local02
	add	fp, #16
	wrlong	local10, fp
	sub	fp, #20
	jmp	#LR__0398
LR__0394
	add	fp, #4
	rdlong	local02, fp
	add	local02, #8
	rdlong	local10, local02
	add	fp, #16
	wrlong	local10, fp
	rdlong	local02, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0397
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_create_chain_0218
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0395
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0412
LR__0395
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, ##-1 wz
 if_ne	jmp	#LR__0396
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#1, local02
	mov	result1, #1
	jmp	#LR__0412
LR__0396
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #8
	wrlong	local10, local02
LR__0397
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #24
	wrlong	local10, local02
LR__0398
	add	fp, #20
	rdlong	local02, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0408
' 				while (ofs > bcs) {
LR__0399
	add	fp, #8
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #24
	cmp	local02, local10 wcz
 if_be	jmp	#LR__0405
	add	fp, #8
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	local02, local10
	sub	fp, #16
	wrlong	local02, fp
	sub	fp, #4
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #20
	rdlong	local05, local04
	mov	local10, local05
	add	fp, #20
	rdlong	local08, fp
	add	local10, local08
	add	local02, #20
	wrlong	local10, local02
	sub	fp, #20
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #16
	rdbyte	local02, local03
	test	local02, #2 wz
 if_e	jmp	#LR__0400
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_create_chain_0218
	add	fp, #20
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0401
	add	fp, #8
	wrlong	#0, fp
	sub	fp, #8
' 							ofs = 0; break;
	jmp	#LR__0405
LR__0400
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_get_fat_0204
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
LR__0401
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, ##-1 wz
 if_ne	jmp	#LR__0402
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#1, local02
	mov	result1, #1
	jmp	#LR__0412
LR__0402
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, #1 wcz
 if_be	jmp	#LR__0403
	add	fp, #16
	rdlong	local10, fp
	add	fp, #4
	rdlong	local06, fp
	sub	fp, #20
	add	local10, #20
	rdlong	local01, local10
	cmp	local06, local01 wcz
 if_b	jmp	#LR__0404
LR__0403
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0412
LR__0404
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #24
	wrlong	local10, local02
	jmp	#LR__0399
LR__0405
	add	fp, #4
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #20
	rdlong	local10, local04
	add	fp, #4
	rdlong	local01, fp
	add	local10, local01
	add	local02, #20
	wrlong	local10, local02
	rdlong	local02, fp
	sub	fp, #8
	test	local02, #511 wz
 if_e	jmp	#LR__0407
	add	fp, #16
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_clst2sect_0199
	add	fp, #28
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #28
 if_ne	jmp	#LR__0406
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0412
LR__0406
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #20
	rdlong	local10, fp
	shr	local10, #9
	add	local02, local10
	add	fp, #20
	wrlong	local02, fp
	sub	fp, #28
LR__0407
LR__0408
LR__0409
	add	fp, #4
	rdlong	local02, fp
	mov	local10, local02
	sub	fp, #4
	add	local02, #20
	rdlong	local06, local02
	add	local10, #12
	rdlong	local01, local10
	cmp	local06, local01 wcz
 if_be	jmp	#LR__0410
	add	fp, #4
	rdlong	local02, fp
	mov	local10, local02
	add	local10, #20
	rdlong	local06, local10
	add	local02, #12
	wrlong	local06, local02
	rdlong	local02, fp
	mov	local04, local02
	sub	fp, #4
	add	local04, #16
	rdbyte	local10, local04
	or	local10, #64
	add	local02, #16
	wrbyte	local10, local02
LR__0410
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #20
	rdlong	local06, local02
	mov	local04, local06
	test	local04, #511 wz
 if_e	jmp	#LR__0411
	add	fp, #4
	rdlong	local01, fp
	mov	local05, local01
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #28
	mov	local08, local07
	add	local05, #28
	rdlong	local11, local05
	sub	local05, #28
	mov	local09, local11
	cmp	local08, local09 wz
 if_e	jmp	#LR__0411
	add	fp, #4
	rdlong	local03, fp
	mov	local02, local03
	add	fp, #24
	rdlong	local10, fp
	sub	fp, #28
	add	local02, #28
	wrlong	local10, local02
	sub	local02, #28
LR__0411
' #line 4553 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 			fp->sect = nsect;
' 		}
' 	}
' 
' 	return res ;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0412
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_lseek_ret
	ret

_ff_cc_f_opendir
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0420
	add	fp, #8
	mov	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0292
	mov	local02, result1
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0418
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	local03, fp
	wrlong	local03, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_follow_path_0269
	add	fp, #12
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0417
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #43
	rdbyte	local01, local04
	test	local01, #128 wz
 if_ne	jmp	#LR__0415
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #6
	rdbyte	local01, local04
	test	local01, #16 wz
 if_e	jmp	#LR__0413
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #28
	rdlong	arg02, local05
	call	#_ff_cc_ld_clust_0237
	add	local01, #8
	wrlong	result1, local01
	jmp	#LR__0414
LR__0413
	add	fp, #12
	wrlong	#5, fp
	sub	fp, #12
LR__0414
LR__0415
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0416
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	local03, fp
	add	local03, #6
	rdword	local05, local03
	add	local01, #4
	wrword	local05, local01
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0416
LR__0417
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
LR__0418
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0419
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0419
' 
' 	return res ;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0420
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_opendir_ret
	ret

_ff_cc_f_closedir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0294
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0421
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	wrlong	#0, local02
LR__0421
' 
' 
' 
' 
' 		dp->obj.fs = 0;
' #line 4652 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
' 	}
' 	return res;
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_closedir_ret
	ret

_ff_cc_f_readdir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_validate_0294
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0425
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0422
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0424
LR__0422
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_read_0243
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0423
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_get_fileinfo_0257
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_next_0231
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
LR__0423
LR__0424
LR__0425
' 			}
' 			;
' 		}
' 	}
' 	return res ;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_readdir_ret
	ret

_ff_cc_f_stat
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #60
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0292
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0430
	add	fp, #16
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0269
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0429
	add	fp, #59
	rdbyte	local02, fp
	sub	fp, #59
	zerox	local02, #7
	test	local02, #128 wz
 if_e	jmp	#LR__0426
	add	fp, #12
	wrlong	#6, fp
	sub	fp, #12
	jmp	#LR__0428
LR__0426
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0427
	add	fp, #16
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_get_fileinfo_0257
LR__0427
LR__0428
LR__0429
LR__0430
' 			}
' 		}
' 		;
' 	}
' 
' 	return res ;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_stat_ret
	ret

_ff_cc_f_unlink
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #108
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #96
	wrlong	#0, fp
	sub	fp, #96
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0292
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0440
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #92
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0269
	mov	local03, result1
	add	fp, #8
	wrlong	local03, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0439
	add	fp, #55
	rdbyte	local02, fp
	sub	fp, #55
	zerox	local02, #7
	test	local02, #128 wz
 if_e	jmp	#LR__0431
	add	fp, #8
	wrlong	#6, fp
	sub	fp, #8
	jmp	#LR__0432
LR__0431
	add	fp, #18
	rdbyte	local02, fp
	sub	fp, #18
	zerox	local02, #7
	test	local02, #1 wz
 if_ne	add	fp, #8
 if_ne	wrlong	#7, fp
 if_ne	sub	fp, #8
LR__0432
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0435
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #40
	call	#_ff_cc_ld_clust_0237
	mov	local03, result1
	add	fp, #100
	wrlong	local03, fp
	sub	fp, #82
	rdbyte	local02, fp
	sub	fp, #18
	zerox	local02, #7
	test	local02, #16 wz
 if_e	jmp	#LR__0434
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #48
	wrlong	local02, fp
	add	fp, #44
	rdlong	local02, fp
	sub	fp, #36
	wrlong	local02, fp
	sub	fp, #8
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0227
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0433
	add	fp, #56
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_dir_read_0243
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #4 wz
 if_e	add	fp, #8
 if_e	wrlong	#0, fp
 if_e	sub	fp, #8
LR__0433
LR__0434
LR__0435
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0438
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	call	#_ff_cc_dir_remove_0253
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0436
	add	fp, #100
	rdlong	local05, fp wz
	sub	fp, #100
 if_e	jmp	#LR__0436
	add	fp, #12
	mov	local02, fp
	mov	local06, local02
	add	fp, #88
	rdlong	local04, fp
	sub	fp, #100
	mov	local05, local04
	mov	local03, #0
	mov	arg01, local06
	mov	arg02, local05
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0212
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #8
LR__0436
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0437
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_ff_cc_sync_fs_0198
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0437
LR__0438
LR__0439
LR__0440
' 			}
' 		}
' 		;
' 	}
' 
' 	return res ;
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_unlink_ret
	ret

_ff_cc_f_mkdir
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #88
	add	fp, #4
	wrlong	arg01, fp
	mov	arg01, fp
	add	fp, #68
	mov	arg02, fp
	sub	fp, #72
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0292
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0450
	add	fp, #72
	rdlong	local02, fp
	sub	fp, #60
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	local03, fp
	sub	fp, #4
	mov	arg02, local03
	call	#_ff_cc_follow_path_0269
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	mov	local05, local04
	sub	fp, #8
	mov	local02, local05 wz
 if_e	add	fp, #8
 if_e	wrlong	#8, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #4 wz
 if_ne	jmp	#LR__0449
	add	fp, #72
	rdlong	local02, fp
	sub	fp, #16
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_create_chain_0218
	mov	local06, result1
	add	fp, #76
	wrlong	local06, fp
	sub	fp, #68
	wrlong	#0, fp
	add	fp, #68
	rdlong	local02, fp wz
	sub	fp, #76
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #76
	cmp	local02, #1 wz
 if_e	add	fp, #8
 if_e	wrlong	#2, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #76
	cmp	local02, ##-1 wz
 if_e	add	fp, #8
 if_e	wrlong	#1, fp
 if_e	sub	fp, #8
	add	fp, #84
	wrlong	##1310785536, fp
	sub	fp, #76
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0446
	add	fp, #72
	rdlong	arg01, fp
	add	fp, #4
	rdlong	local06, fp
	sub	fp, #76
	mov	local03, local06
	mov	arg02, local03
	call	#_ff_cc_dir_clear_0223
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	mov	local05, local04
	sub	fp, #8
	mov	local02, local05 wz
 if_ne	jmp	#LR__0445
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	add	arg01, #48
	mov	arg02, #32
	mov	arg03, #11
' {
' 	BYTE *d = (BYTE*)dst;
' 
' 	do {
	loc	pa,	#(@LR__0443-@LR__0441)
	call	#FCACHE_LOAD_
LR__0441
	rep	@LR__0444, #11
LR__0442
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0443
LR__0444
	add	fp, #72
	rdlong	local02, fp
	add	local02, #48
	wrbyte	#46, local02
	rdlong	local02, fp
	add	local02, #59
	wrbyte	#16, local02
	rdlong	arg01, fp
	add	arg01, #70
	add	fp, #12
	rdlong	arg02, fp
	sub	fp, #84
	call	#_ff_cc_st_dword_0180
	add	fp, #72
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #48
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #76
	call	#_ff_cc_st_clust_0238
	add	fp, #72
	rdlong	arg01, fp
	add	arg01, #80
	rdlong	arg02, fp
	sub	fp, #72
	add	arg02, #48
	mov	arg03, #32
	call	#_ff_cc_mem_cpy_0183
	add	fp, #72
	rdlong	local02, fp
	add	local02, #81
	wrbyte	#46, local02
	sub	fp, #52
	rdlong	local02, fp
	add	fp, #60
	wrlong	local02, fp
	sub	fp, #8
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #80
	add	fp, #8
	rdlong	arg03, fp
	sub	fp, #80
	call	#_ff_cc_st_clust_0238
	add	fp, #72
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	sub	fp, #60
	mov	arg01, fp
	sub	fp, #12
	call	#_ff_cc_dir_register_0250
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0445
LR__0446
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0447
	add	fp, #40
	rdlong	arg01, fp
	add	arg01, #22
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #84
	call	#_ff_cc_st_dword_0180
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #32
	rdlong	arg02, fp
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #76
	call	#_ff_cc_st_clust_0238
	add	fp, #40
	rdlong	local02, fp
	add	local02, #11
	wrbyte	#16, local02
	add	fp, #32
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	sub	fp, #64
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0448
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	call	#_ff_cc_sync_fs_0198
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	jmp	#LR__0448
LR__0447
	add	fp, #56
	mov	arg01, fp
	add	fp, #20
	rdlong	arg02, fp
	sub	fp, #76
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0212
LR__0448
LR__0449
LR__0450
' 				remove_chain(&sobj, dcl, 0);
' 			}
' 		}
' 		;
' 	}
' 
' 	return res ;
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_mkdir_ret
	ret

_ff_cc_f_rename
	mov	COUNT_, #9
	call	#pushregs_
	add	ptra, #148
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #8
	call	#_ff_cc_get_ldnumber_0275
	add	fp, #4
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0292
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0465
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #88
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0269
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	rdlong	local04, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0451
	add	fp, #59
	rdbyte	local05, fp
	sub	fp, #59
	mov	local06, local05
	zerox	local06, #7
	and	local06, #160 wz
 if_e	jmp	#LR__0451
	mov	local02, #6
	add	fp, #12
	wrlong	#6, fp
	sub	fp, #12
LR__0451
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0464
	add	fp, #108
	mov	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #44
	mov	arg03, #32
	call	#_ff_cc_mem_cpy_0183
	add	fp, #60
	mov	arg01, fp
	sub	fp, #44
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #44
	call	#_ff_cc_mem_cpy_0183
	add	fp, #60
	mov	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_follow_path_0269
	add	fp, #12
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0454
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #44
	rdlong	local05, fp
	sub	fp, #24
	cmp	local04, local05 wz
 if_ne	jmp	#LR__0452
	add	fp, #76
	rdlong	local01, fp
	sub	fp, #44
	rdlong	local07, fp
	sub	fp, #32
	cmp	local01, local07 wz
 if_e	mov	local02, #4
 if_e	jmp	#LR__0453
LR__0452
	mov	local02, #8
LR__0453
	add	fp, #12
	wrlong	local02, fp
	sub	fp, #12
LR__0454
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	cmp	local02, #4 wz
 if_ne	jmp	#LR__0461
	add	fp, #60
	mov	arg01, fp
	sub	fp, #60
	call	#_ff_cc_dir_register_0250
	add	fp, #12
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0460
	add	fp, #88
	rdlong	arg01, fp
	add	fp, #52
	wrlong	arg01, fp
	add	arg01, #13
	sub	fp, #32
	mov	arg02, fp
	sub	fp, #108
	add	arg02, #13
	mov	arg03, #19
	call	#_ff_cc_mem_cpy_0183
	add	fp, #140
	rdlong	local02, fp
	sub	fp, #21
	rdbyte	local06, fp
	add	local02, #11
	wrbyte	local06, local02
	add	fp, #21
	rdlong	local04, fp
	sub	fp, #140
	add	local04, #11
	rdbyte	local02, local04
	test	local02, #16 wz
 if_ne	jmp	#LR__0455
	add	fp, #140
	rdlong	local02, fp
	mov	local05, local02
	sub	fp, #140
	add	local05, #11
	rdbyte	local06, local05
	or	local06, #32
	add	local02, #11
	wrbyte	local06, local02
LR__0455
	add	fp, #104
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	add	fp, #36
	rdlong	local04, fp
	sub	fp, #140
	add	local04, #11
	rdbyte	local02, local04
	test	local02, #16 wz
 if_e	jmp	#LR__0459
	add	fp, #24
	rdlong	local03, fp
	add	fp, #44
	rdlong	local08, fp
	sub	fp, #68
	cmp	local03, local08 wz
 if_e	jmp	#LR__0459
	add	fp, #104
	rdlong	local02, fp
	mov	local05, local02
	mov	local06, local05
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #140
	mov	local03, local01
	mov	arg01, local06
	mov	arg02, local03
	call	#_ff_cc_ld_clust_0237
	mov	local08, result1
	mov	arg01, local02
	mov	arg02, local08
	call	#_ff_cc_clst2sect_0199
	mov	local09, result1
	add	fp, #144
	wrlong	local09, fp
	rdlong	local04, fp wz
	sub	fp, #144
 if_ne	jmp	#LR__0456
	mov	local02, #2
	add	fp, #12
	wrlong	#2, fp
	sub	fp, #12
	jmp	#LR__0458
LR__0456
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #40
	rdlong	arg02, fp
	sub	fp, #144
	call	#_ff_cc_move_window_0196
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	add	fp, #92
	rdlong	local06, fp
	mov	local05, local06
	add	local05, #48
	mov	local02, local05
	add	local02, #32
	add	fp, #36
	wrlong	local02, fp
	sub	fp, #128
	rdlong	local04, fp
	sub	fp, #12
	mov	local02, local04 wz
 if_ne	jmp	#LR__0457
	add	fp, #140
	rdlong	local03, fp
	sub	fp, #140
	mov	local05, local03
	add	local05, #1
	rdbyte	local01, local05
	sub	local05, #1
	mov	local06, local01
	zerox	local06, #7
	cmp	local06, #46 wz
 if_ne	jmp	#LR__0457
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #36
	rdlong	local05, fp
	sub	fp, #72
	rdlong	local01, fp
	sub	fp, #68
	mov	local03, local01
	mov	arg02, local05
	mov	arg03, local03
	call	#_ff_cc_st_clust_0238
	add	fp, #104
	rdlong	local04, fp
	sub	fp, #104
	mov	local02, local04
	mov	local06, #1
	add	local02, #3
	wrbyte	#1, local02
	sub	local02, #3
LR__0457
LR__0458
LR__0459
LR__0460
LR__0461
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0463
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	call	#_ff_cc_dir_remove_0253
	mov	local06, result1
	add	fp, #12
	wrlong	local06, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0462
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_ff_cc_sync_fs_0198
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0462
LR__0463
LR__0464
LR__0465
' 					res = sync_fs(fs);
' 				}
' 			}
' 
' 		}
' 		;
' 	}
' 
' 	return res ;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_rename_ret
	ret

_ff_cc_stat
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr___system__dat__, #320
	mov	result1, ptr___system__dat__
	sub	ptr___system__dat__, #320
	mov	local03, result1
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #0
	call	#__system____getvfsforfile
	mov	local04, result1 wz
 if_e	jmp	#LR__0466
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local06, local05 wz
 if_ne	jmp	#LR__0467
LR__0466
' #line 19 "/home/pik33/flexprop/include/libc/unix/stat.c"
'         return _seterror( 16 );
	add	ptr___system__dat__, #28
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0468
LR__0467
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	mov	local07, arg01
	call	#\builtin_bytefill_
	mov	result1, local07
	add	local04, #44
	rdlong	local06, local04
	rdlong	local05, local06
	add	local06, #4
	rdlong	local08, local06
	mov	arg01, local03
	mov	arg02, local02
	mov	local09, objptr
	mov	objptr, local05
	call	local08
	mov	objptr, local09
' #line 29 "/home/pik33/flexprop/include/libc/unix/stat.c"
'     r = v->stat(name, buf);
' #line 33 "/home/pik33/flexprop/include/libc/unix/stat.c"
'     return r;
LR__0468
	mov	ptra, fp
	call	#popregs_
_ff_cc_stat_ret
	ret

_ff_cc__set_dos_error_0418
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
' #line 6871 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
'     switch (derr) {
	mov	local02, local01
	fle	local02, #20
	jmprel	local02
LR__0469
	jmp	#LR__0470
	jmp	#LR__0484
	jmp	#LR__0485
	jmp	#LR__0486
	jmp	#LR__0471
	jmp	#LR__0472
	jmp	#LR__0473
	jmp	#LR__0474
	jmp	#LR__0476
	jmp	#LR__0479
	jmp	#LR__0475
	jmp	#LR__0480
	jmp	#LR__0481
	jmp	#LR__0482
	jmp	#LR__0487
	jmp	#LR__0487
	jmp	#LR__0487
	jmp	#LR__0477
	jmp	#LR__0483
	jmp	#LR__0478
	jmp	#LR__0487
LR__0470
	mov	local03, #0
'         r = 0;
'         break;
	jmp	#LR__0488
LR__0471
LR__0472
LR__0473
	mov	local03, #4
'         r =  4 ;
'         break;
	jmp	#LR__0488
LR__0474
LR__0475
	mov	local03, #6
'         r =  6 ;
'         break;
	jmp	#LR__0488
LR__0476
	mov	local03, #9
'         r =  9 ;
'         break;
	jmp	#LR__0488
LR__0477
	mov	local03, #7
'         r =  7 ;
'         break;
	jmp	#LR__0488
LR__0478
LR__0479
LR__0480
LR__0481
LR__0482
	mov	local03, #10
'         r =  10 ;
'         break;
	jmp	#LR__0488
LR__0483
	mov	local03, #11
'         r =  11 ;
'         break;
	jmp	#LR__0488
LR__0484
LR__0485
LR__0486
LR__0487
	mov	local03, #12
'         r =  12 ;
'         break;
LR__0488
'     }
'     return _seterror(r);
	add	ptr___system__dat__, #28
	wrlong	local03, ptr___system__dat__
	sub	ptr___system__dat__, #28
	cmp	local03, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_ff_cc__set_dos_error_0418_ret
	ret

_ff_cc_v_creat_0422
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, ##1076
'     return _gc_alloc(size);
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0489
'       return _seterror( 7 );
	add	ptr___system__dat__, #28
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0491
LR__0489
	mov	arg01, local03
	mov	arg02, #0
	mov	arg03, ##1076
	call	#_ff_cc_memset
	add	local03, ##1036
	mov	arg01, local03
	sub	local03, ##1036
	mov	arg02, local02
	mov	arg03, #7
	call	#_ff_cc_f_open
	mov	local04, result1 wz
 if_e	jmp	#LR__0490
	mov	arg01, local03
'     return _gc_free(ptr);
	call	#__system___gc_free
'     free(f);
'     return _set_dos_error(r);
	mov	arg01, local04
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0491
LR__0490
	wrlong	local03, local01
'   }
'   fil->vfsdata = f;
'   return 0;
	mov	result1, #0
LR__0491
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_creat_0422_ret
	ret

_ff_cc_v_close_0425
	mov	COUNT_, #2
	call	#pushregs_
	rdlong	local01, arg01
	add	local01, ##1036
	mov	arg01, local01
	sub	local01, ##1036
	call	#_ff_cc_f_close
	mov	local02, result1
	mov	arg01, local01
'     return _gc_free(ptr);
	call	#__system___gc_free
'     FAT_FIL *f = fil->vfsdata;
'     r=f_close(&f->fil);
'     free(f);
'     return _set_dos_error(r);
	mov	arg01, local02
	call	#_ff_cc__set_dos_error_0418
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_close_0425_ret
	ret

_ff_cc_v_opendir_0428
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #44
'     return _gc_alloc(size);
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0492
' #line 6955 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
'       return _seterror( 7 );
	add	ptr___system__dat__, #28
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0494
LR__0492
	mov	arg01, local03
	mov	arg02, local02
	call	#_ff_cc_f_opendir
	mov	local04, result1 wz
 if_e	jmp	#LR__0493
	mov	arg01, local03
'     return _gc_free(ptr);
	call	#__system___gc_free
'         free(f);
'         return _set_dos_error(r);
	mov	arg01, local04
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0494
LR__0493
	add	local01, #4
	wrlong	local03, local01
'     }
'     dir->vfsdata = f;
'     return 0;
	mov	result1, #0
LR__0494
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_opendir_0428_ret
	ret

_ff_cc_v_closedir_0431
	mov	COUNT_, #2
	call	#pushregs_
	add	arg01, #4
	rdlong	local01, arg01
	mov	arg01, local01
	call	#_ff_cc_f_closedir
	mov	local02, result1
	mov	arg01, local01
'     return _gc_free(ptr);
	call	#__system___gc_free
	cmp	local02, #0 wz
 if_e	jmp	#LR__0495
	mov	arg01, local02
	call	#_ff_cc__set_dos_error_0418
LR__0495
'     return r;
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_closedir_0431_ret
	ret

_ff_cc_v_readdir_0434
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #44
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #4
	rdlong	arg01, local01
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_f_readdir
	mov	local02, result1
	add	fp, #40
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0496
'         return _set_dos_error(r);
	add	fp, #40
	rdlong	arg01, fp
	sub	fp, #40
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0497
LR__0496
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	zerox	local01, #7 wz
'         return -1;
 if_e	neg	result1, #1
 if_e	jmp	#LR__0497
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #16
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_strcpy
'     }
' 
' 
' 
' 
'     strcpy(ent->d_name, finfo.fname);
' 
'     return 0;
	mov	result1, #0
LR__0497
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_readdir_0434_ret
	ret

_ff_cc_unixtime_0442
	mov	_var01, arg02
	shr	_var01, #11
	and	_var01, #31
	mov	_var02, arg02
	shr	_var02, #5
	and	_var02, #63
	and	arg02, #31
	shl	arg02, #1
	mov	_var03, _var02
	shl	_var03, #4
	sub	_var03, _var02
	shl	_var03, #2
	add	arg02, _var03
	qmul	_var01, ##3600
	getqx	_var04
	add	arg02, _var04
' 
'     t = second + minute*60 + hour * 3600;
'     return t;
	mov	result1, arg02
_ff_cc_unixtime_0442_ret
	ret

_ff_cc_v_stat_0446
	mov	COUNT_, #8
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	mov	arg01, arg02
	sub	fp, #8
	mov	arg02, #0
	mov	arg03, #48
	call	#_ff_cc_memset
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	rdbyte	local02, local01 wz
 if_e	jmp	#LR__0498
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	rdbyte	local04, local03
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0499
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #1
	rdbyte	local06, local05 wz
 if_ne	jmp	#LR__0499
LR__0498
	add	fp, #24
	wrbyte	#16, fp
	sub	fp, #12
	wrlong	#0, fp
	sub	fp, #12
	jmp	#LR__0500
LR__0499
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_f_stat
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0500
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0501
'         return _set_dos_error(r);
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0504
LR__0501
	add	fp, #44
	wrlong	#292, fp
	sub	fp, #20
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	test	local02, #1 wz
 if_e	jmp	#LR__0502
	add	fp, #44
	rdlong	local02, fp
	or	local02, #146
	wrlong	local02, fp
	sub	fp, #44
LR__0502
	add	fp, #24
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	test	local02, #16 wz
 if_e	jmp	#LR__0503
	add	fp, #44
	rdlong	local02, fp
	or	local02, ##4169
	wrlong	local02, fp
	sub	fp, #44
LR__0503
	add	fp, #8
	rdlong	local02, fp
	add	fp, #36
	rdlong	local07, fp
	add	local02, #8
	wrlong	local07, local02
	sub	fp, #36
	rdlong	local02, fp
	add	local02, #12
	wrlong	#1, local02
	rdlong	local02, fp
	add	fp, #8
	rdlong	local07, fp
	add	local02, #24
	wrlong	local07, local02
	sub	fp, #8
	rdlong	local02, fp
	add	local02, #28
	wrlong	##512, local02
	rdlong	local02, fp
	mov	local07, local02
	add	local07, #24
	rdlong	local08, local07
	abs	local03, local08 wc
	shr	local03, #9
 if_b	neg	local03, local03
	add	local02, #32
	wrlong	local03, local02
	rdlong	local02, fp
	mov	local07, local02
	mov	local03, local02
	add	fp, #12
	rdword	arg01, fp
	add	fp, #2
	rdword	arg02, fp
	sub	fp, #22
	zerox	arg02, #15
	call	#_ff_cc_unixtime_0442
	add	local03, #44
	wrlong	result1, local03
	add	local07, #40
	wrlong	result1, local07
	add	local02, #36
	wrlong	result1, local02
'         mode |=  0010000  |  0100  |  0010  |  0001 ;
'     }
'     buf->st_mode = mode;
'     buf->st_nlink = 1;
'     buf->st_size = finfo.fsize;
'     buf->st_blksize = 512;
'     buf->st_blocks = buf->st_size / 512;
'     buf->st_atime = buf->st_mtime = buf->st_ctime = unixtime(finfo.fdate, finfo.ftime);
' #line 7053 "/home/pik33/flexprop/include/filesys/fatfs/ff.cc"
'     return r;
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0504
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_stat_0446_ret
	ret

_ff_cc_v_read_0450
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0505
'         return _seterror( 5 );
	add	ptr___system__dat__, #28
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0508
LR__0505
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_ff_cc_f_read
	mov	local03, result1
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0506
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local02, local04
	or	local02, #32
	add	local01, #8
	wrlong	local02, local01
'         fil->state |=  (0x20) ;
'         return _set_dos_error(r);
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0508
LR__0506
	add	fp, #24
	rdlong	local01, fp wz
	sub	fp, #24
 if_ne	jmp	#LR__0507
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	sub	fp, #4
	add	local04, #8
	rdlong	local02, local04
	or	local02, #16
	add	local01, #8
	wrlong	local02, local01
LR__0507
'         fil->state |=  (0x10) ;
'     }
'     return x;
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0508
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_read_0450_ret
	ret

_ff_cc_v_write_0454
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0509
'         return _seterror( 5 );
	add	ptr___system__dat__, #28
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0511
LR__0509
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_ff_cc_f_write
	mov	local03, result1
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0510
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local02, local04
	or	local02, #32
	add	local01, #8
	wrlong	local02, local01
'         fil->state |=  (0x20) ;
'         return _set_dos_error(r);
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0511
LR__0510
'     }
'     return x;
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0511
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_write_0454_ret
	ret

_ff_cc_v_lseek_0458
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	rdlong	local03, arg01
	add	local03, ##1036 wz
 if_ne	jmp	#LR__0512
'         return _seterror( 5 );
	add	ptr___system__dat__, #28
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0517
LR__0512
	cmp	local02, #0 wz
 if_e	jmp	#LR__0515
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0513
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	add	local01, local04
	jmp	#LR__0514
LR__0513
	add	local03, #12
	rdlong	local04, local03
	sub	local03, #12
	add	local01, local04
LR__0514
LR__0515
	mov	arg01, local03
	mov	arg02, local01
	call	#_ff_cc_f_lseek
	mov	local05, result1 wz
 if_e	jmp	#LR__0516
'         return _set_dos_error(result);
	mov	arg01, local05
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0517
LR__0516
'     }
'     return offset;
	mov	result1, local01
LR__0517
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_lseek_0458_ret
	ret

_ff_cc_v_ioctl
' {
'     return _seterror( 10 );
	add	ptr___system__dat__, #28
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
_ff_cc_v_ioctl_ret
	ret

_ff_cc_v_mkdir
	call	#_ff_cc_f_mkdir
	mov	arg01, result1
' 
'     r = f_mkdir(name);
'     return _set_dos_error(r);
	call	#_ff_cc__set_dos_error_0418
_ff_cc_v_mkdir_ret
	ret

_ff_cc_v_remove
	call	#_ff_cc_f_unlink
	mov	arg01, result1
' 
'     r = f_unlink(name);
'     return _set_dos_error(r);
	call	#_ff_cc__set_dos_error_0418
_ff_cc_v_remove_ret
	ret

_ff_cc_v_rmdir_0462
	call	#_ff_cc_f_unlink
	mov	arg01, result1
' 
'     r = f_unlink(name);
'     return _set_dos_error(r);
	call	#_ff_cc__set_dos_error_0418
_ff_cc_v_rmdir_0462_ret
	ret

_ff_cc_v_rename_0464
	call	#_ff_cc_f_rename
	mov	arg01, result1
'     return _set_dos_error(r);
	call	#_ff_cc__set_dos_error_0418
_ff_cc_v_rename_0464_ret
	ret

_ff_cc_v_open_0468
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, ##1076
'     return _gc_alloc(size);
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local04, result1 wz
 if_ne	jmp	#LR__0518
'       return _seterror( 7 );
	add	ptr___system__dat__, #28
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
	jmp	#LR__0525
LR__0518
	mov	local05, local04
	mov	local06, #0
	mov	local07, ##1076
	mov	arg01, local05
	mov	arg02, #0
	mov	arg03, ##1076
	call	#_ff_cc_memset
'   switch (flags & 3) {
	mov	local08, local03
	and	local08, #3 wz
 if_e	jmp	#LR__0519
	cmp	local08, #1 wz
 if_e	jmp	#LR__0520
	jmp	#LR__0521
LR__0519
	mov	local09, #1
'       fs_flags =  0x01 ;
'       break;
	jmp	#LR__0522
LR__0520
	mov	local09, #2
'       fs_flags =  0x02 ;
'       break;
	jmp	#LR__0522
LR__0521
	mov	local09, #3
'       fs_flags =  0x01  |  0x02 ;
'       break;
LR__0522
	test	local03, #8 wz
 if_ne	or	local09, #24
 if_ne	jmp	#LR__0523
	test	local03, #32 wz
 if_ne	or	local09, #48
LR__0523
	add	local04, ##1036
	mov	arg01, local04
	sub	local04, ##1036
	mov	arg02, local02
	mov	arg03, local09
	call	#_ff_cc_f_open
	mov	local10, result1 wz
 if_e	jmp	#LR__0524
	mov	arg01, local04
'     return _gc_free(ptr);
	call	#__system___gc_free
'     free(f);
'     return _set_dos_error(r);
	mov	arg01, local10
	call	#_ff_cc__set_dos_error_0418
	jmp	#LR__0525
LR__0524
	wrlong	local04, local01
'   }
'   fil->vfsdata = f;
'   return 0;
	mov	result1, #0
LR__0525
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_open_0468_ret
	ret

_ff_cc_xmit_mmc_0651
	mov	COUNT_, #4
	call	#pushregs_
	add	ptr__ff_cc_dat__, #376
	rdlong	local01, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #8
	rdlong	local02, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #384
	loc	pa,	#(@LR__0527-@LR__0526)
	call	#FCACHE_LOAD_
' 
' 	do {
LR__0526
	rdbyte	local03, arg01
	mov	local04, local03
	zerox	local04, #7
	test	local04, #128 wz
	add	arg01, #1
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #64 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #32 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #16 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #8 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #4 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #2 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	zerox	local03, #7
	test	local03, #1 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	sub	arg02, #1 wz
 if_ne	jmp	#LR__0526
LR__0527
	mov	ptra, fp
	call	#popregs_
_ff_cc_xmit_mmc_0651_ret
	ret

_ff_cc_rcvr_mmc_0657
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	add	ptr__ff_cc_dat__, #376
	rdlong	local02, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #8
	rdlong	arg01, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	rdlong	local03, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #388
	drvh	arg01
	loc	pa,	#(@LR__0529-@LR__0528)
	call	#FCACHE_LOAD_
' 
' 	(_pinh(PIN_DI)) ;
' 
' 	do {
LR__0528
	mov	local04, #0
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	mov	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	wrbyte	local04, local01
	sub	arg02, #1 wz
	add	local01, #1
 if_ne	jmp	#LR__0528
LR__0529
	mov	ptra, fp
	call	#popregs_
_ff_cc_rcvr_mmc_0657_ret
	ret

_ff_cc_wait_ready_0660
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #12
' {
' 	BYTE d;
' 	UINT tmr;
' 
' 
' 	for (tmr = 5000; tmr; tmr--) {
	add	fp, #8
	wrlong	##5000, fp
	sub	fp, #8
LR__0530
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0531
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #4
	rdbyte	local02, fp
	sub	fp, #4
	zerox	local02, #7
	cmp	local02, #255 wz
 if_e	jmp	#LR__0531
	mov	arg01, #100
	call	#__system___waitus
	add	fp, #8
	rdlong	local03, fp
	sub	local03, #1
	wrlong	local03, fp
	sub	fp, #8
	jmp	#LR__0530
LR__0531
' 		dly_us(100);
' 	}
' 
' 	return tmr ? 1 : 0;
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	mov	local04, #1
 if_e	mov	local04, #0
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_wait_ready_0660_ret
	ret

_ff_cc_deselect_0666
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #20
	add	ptr__ff_cc_dat__, #380
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	sub	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #8
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #388
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	drvh	arg01
	waitx	#16
	mov	arg01, fp
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	mov	ptra, fp
	call	#popregs_
_ff_cc_deselect_0666_ret
	ret

_ff_cc_select_0669
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	ptr__ff_cc_dat__, #380
	rdlong	arg01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #380
	add	fp, #8
	wrlong	arg01, fp
	drvl	arg01
	waitx	#16
	sub	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	call	#_ff_cc_wait_ready_0660
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0532
	call	#_ff_cc_deselect_0666
' 
' 	deselect();
' 	return 0;
	mov	result1, #0
LR__0532
	mov	ptra, fp
	call	#popregs_
_ff_cc_select_0669_ret
	ret

_ff_cc_rcvr_datablock_0672
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
' 	BYTE *buff,
' 	UINT btr
' )
' {
' 	BYTE d[2];
' 	UINT tmr;
' 
' 
' 	for (tmr = 1000; tmr; tmr--) {
	add	fp, #8
	wrlong	##1000, fp
	sub	fp, #16
LR__0533
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0534
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #12
	rdbyte	local02, fp
	sub	fp, #12
	zerox	local02, #7
	cmp	local02, #255 wz
 if_ne	jmp	#LR__0534
	mov	arg01, #100
	call	#__system___waitus
	add	fp, #16
	rdlong	local03, fp
	sub	local03, #1
	wrlong	local03, fp
	sub	fp, #16
	jmp	#LR__0533
LR__0534
	add	fp, #12
	rdbyte	local04, fp
	sub	fp, #12
	zerox	local04, #7
	cmp	local04, #254 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0535
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_ff_cc_rcvr_mmc_0657
' 
' 	rcvr_mmc(buff, btr);
' 	rcvr_mmc(d, 2);
' 
' 	return 1;
	mov	result1, #1
LR__0535
	mov	ptra, fp
	call	#popregs_
_ff_cc_rcvr_datablock_0672_ret
	ret

_ff_cc_xmit_datablock_0674
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	sub	fp, #8
	call	#_ff_cc_wait_ready_0660
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0537
	add	fp, #8
	rdbyte	local01, fp
	add	fp, #4
	wrbyte	local01, fp
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_xmit_mmc_0651
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #8
	zerox	local01, #7
	cmp	local01, #253 wz
 if_e	jmp	#LR__0536
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	decod	arg02, #9
	call	#_ff_cc_xmit_mmc_0651
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	and	local01, #31
	cmp	local01, #5 wz
' 			return 0;
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0537
LR__0536
' 	}
' 
' 	return 1;
	mov	result1, #1
LR__0537
	mov	ptra, fp
	call	#popregs_
_ff_cc_xmit_datablock_0674_ret
	ret

_ff_cc_send_cmd_0678
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #28
_ff_cc_send_cmd_0678_enter
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	test	local01, #128 wz
 if_e	jmp	#LR__0539
	add	fp, #4
	rdbyte	local01, fp
	and	local01, #127
	wrbyte	local01, fp
	sub	fp, #4
	mov	arg01, #55
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0678
	add	fp, #12
	wrbyte	result1, fp
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	cmp	local01, #1 wcz
 if_be	jmp	#LR__0538
	add	fp, #12
	rdbyte	result1, fp
	sub	fp, #12
	jmp	#LR__0544
LR__0538
LR__0539
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #12 wz
 if_e	jmp	#LR__0540
	call	#_ff_cc_deselect_0666
	call	#_ff_cc_select_0669
	cmp	result1, #0 wz
 if_e	mov	result1, #255
 if_e	jmp	#LR__0544
LR__0540
	add	fp, #4
	rdbyte	local02, fp
	mov	local01, #64
	or	local01, local02
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	shr	local01, #24
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #13
	rdlong	local01, fp
	shr	local01, #16
	add	fp, #14
	wrbyte	local01, fp
	sub	fp, #14
	rdlong	local01, fp
	shr	local01, #8
	add	fp, #15
	wrbyte	local01, fp
	sub	fp, #15
	rdlong	local01, fp
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	wrbyte	#1, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7 wz
 if_e	add	fp, #12
 if_e	wrbyte	#149, fp
 if_e	sub	fp, #12
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #8 wz
 if_e	add	fp, #12
 if_e	wrbyte	#135, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdbyte	local01, fp
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #5
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #6
	call	#_ff_cc_xmit_mmc_0651
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #12 wz
 if_ne	jmp	#LR__0541
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
LR__0541
	add	fp, #12
	wrbyte	#10, fp
	sub	fp, #12
' 	n = 10;
' 	do
LR__0542
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0657
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #128 wz
 if_e	jmp	#LR__0543
	add	fp, #12
	rdbyte	local03, fp
	sub	local03, #1
	wrbyte	local03, fp
	rdbyte	local04, fp
	sub	fp, #12
	mov	local05, local04 wz
 if_ne	jmp	#LR__0542
LR__0543
' 
' 	return d;
	add	fp, #16
	rdbyte	result1, fp
	sub	fp, #16
LR__0544
	mov	ptra, fp
	call	#popregs_
_ff_cc_send_cmd_0678_ret
	ret

_ff_cc_strcpy
	mov	_var01, arg01
	cmp	arg02, #0 wz
 if_e	mov	result1, arg01
 if_e	jmp	#_ff_cc_strcpy_ret
	loc	pa,	#(@LR__0546-@LR__0545)
	call	#FCACHE_LOAD_
'         do {
LR__0545
	rdbyte	_var02, arg02 wz
	wrbyte	_var02, _var01
	add	arg02, #1
	add	_var01, #1
 if_ne	jmp	#LR__0545
LR__0546
' 	return(dst);
	mov	result1, arg01
_ff_cc_strcpy_ret
	ret

_ff_cc_memset
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var01
	mov	_var05, #3
	test	_var05, _var01 wz
 if_ne	jmp	#LR__0550
	cmp	_var03, #4 wcz
 if_be	jmp	#LR__0550
	mov	_var06, _var01
	and	_var02, #255
	mov	_var05, _var02
	shl	_var05, #24
	mov	_var07, _var02
	shl	_var07, #16
	or	_var05, _var07
	mov	_var08, _var02
	shl	_var08, #8
	or	_var05, _var08
	or	_var05, _var02
	mov	_var09, _var05
	loc	pa,	#(@LR__0548-@LR__0547)
	call	#FCACHE_LOAD_
'     {
'       uint32_t lc;
'       uint32_t *dstl = dest_p;
'       c &= 0xff;
'       lc = (c<<24)|(c<<16)|(c<<8)|c;
'       while (n >= sizeof(uint32_t))
LR__0547
	cmp	_var03, #4 wcz
 if_b	jmp	#LR__0549
	mov	_var05, _var06
	mov	_var07, _var06
	add	_var07, #4
	mov	_var06, _var07
	wrlong	_var09, _var05
	mov	_var05, _var03
	sub	_var05, #4
	mov	_var03, _var05
	jmp	#LR__0547
LR__0548
LR__0549
	mov	_var01, _var06
LR__0550
	loc	pa,	#(@LR__0552-@LR__0551)
	call	#FCACHE_LOAD_
' 	}
'       dest_p = dstl;
'     }
' 
'   dst = dest_p;
'   while (n > 0) {
LR__0551
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0553
	wrbyte	_var02, _var01
	sub	_var03, #1
	add	_var01, #1
	jmp	#LR__0551
LR__0552
LR__0553
'     *dst++ = c;
'     --n;
'   }
' 
'   return orig_dest;
	mov	result1, _var04
_ff_cc_memset_ret
	ret
hubexit
	jmp	#cogexit

__system___setbaud
	rdlong	muldiva_, #20
	mov	muldivb_, arg01
	call	#divide_
	dirl	#62
	dirl	#63
	wrlong	muldivb_, ptr___system__dat__
	shl	muldivb_, #16
	mov	arg02, #7
	add	arg02, muldivb_
	wrpin	#124, #62
	wxpin	arg02, #62
	wrpin	#62, #63
	add	arg02, #20
	wxpin	arg02, #63
	dirh	#62
	dirh	#63
__system___setbaud_ret
	ret

__system___txraw
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0554
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0554
	wypin	local01, #62
	waitx	#1
	loc	pa,	#(@LR__0556-@LR__0555)
	call	#FCACHE_LOAD_
LR__0555
	testp	#62 wc
 if_nc	jmp	#LR__0555
LR__0556
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__system___txraw_ret
	ret

__system___rxraw
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0557
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0557
	cmp	local01, #0 wz
 if_e	jmp	#LR__0558
	getct	local03
	rdlong	local04, #20
	shr	local04, #10
	qmul	local01, local04
	getqx	local05
	add	local03, local05
LR__0558
	neg	local06, #1
	mov	local07, #0
	add	ptr___system__dat__, #4
	rdlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
LR__0559
	testb	local08, #8 wc
	testbn	local08, #9 andc
	shr	local08, #10
 if_b	mov	local07, #1
 if_b	jmp	#LR__0560
	testp	#63 wz
 if_e	mov	local07, #1
 if_e	rdpin	local08, #63
 if_e	shr	local08, #4
LR__0560
	mov	local02, #0
	cmp	local07, #0 wz
 if_ne	neg	local02, #1
	mov	local09, #0
	mov	local04, #0
	cmp	local01, #0 wz
 if_ne	neg	local04, #1
	mov	local05, #0
	mov	local10, #0
	getct	local11
	sub	local11, local03
	cmps	local11, #0 wcz
 if_b	neg	local10, #1
	cmp	local10, #0 wz
 if_ne	neg	local05, #1
	test	local04, local05 wz
 if_ne	neg	local09, #1
	or	local02, local09 wz
 if_e	jmp	#LR__0559
	cmp	local07, #0 wz
 if_ne	mov	local06, local08
 if_ne	and	local06, #255
	add	ptr___system__dat__, #4
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___rxraw_ret
	ret

__system____builtin_strcpy
	mov	_var01, arg01
	loc	pa,	#(@LR__0562-@LR__0561)
	call	#FCACHE_LOAD_
LR__0561
	rdbyte	_var02, arg02 wz
	wrbyte	_var02, arg01
	add	arg02, #1
	add	arg01, #1
 if_ne	jmp	#LR__0561
LR__0562
	mov	result1, _var01
__system____builtin_strcpy_ret
	ret

__system____topofstack
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #8
	add	fp, #4
	wrlong	arg01, fp
	mov	result1, fp
	sub	fp, #4
	mov	ptra, fp
	call	#popregs_
__system____topofstack_ret
	ret

__system___make_methodptr
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #8
	call	#__system___gc_alloc_managed
	mov	local03, result1 wz
 if_e	jmp	#LR__0563
	wrlong	local01, local03
	mov	local04, local03
	add	local04, #4
	wrlong	local02, local04
LR__0563
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
__system___make_methodptr_ret
	ret

__system___lockmem
	mov	COUNT_, #2
	call	#pushregs_
	mov	result1, #0
	cogid	result1
	mov	local01, result1
	add	local01, #256
LR__0564
	rdlong	local02, arg01 wz
 if_e	wrlong	local01, arg01
 if_e	rdlong	local02, arg01
 if_e	rdlong	local02, arg01
	cmp	local02, local01 wz
 if_ne	jmp	#LR__0564
	mov	ptra, fp
	call	#popregs_
__system___lockmem_ret
	ret

__system___string_cmp
	mov	_var01, arg01
	mov	_var02, arg02
	loc	pa,	#(@LR__0566-@LR__0565)
	call	#FCACHE_LOAD_
LR__0565
	rdbyte	_var03, _var01
	mov	_var04, _var02
	mov	_var05, _var02
	add	_var05, #1
	mov	_var02, _var05
	rdbyte	_var06, _var04
	mov	_var04, _var03
	sub	_var04, _var06
	mov	_var07, _var04 wz
	add	_var01, #1
 if_ne	jmp	#LR__0567
	cmp	_var03, #0 wz
 if_e	jmp	#LR__0567
	cmp	_var06, #0 wz
 if_ne	jmp	#LR__0565
LR__0566
LR__0567
	mov	result1, _var07
__system___string_cmp_ret
	ret

__system___tx
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wz
 if_ne	jmp	#LR__0568
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_e	jmp	#LR__0568
	mov	local02, #13
	mov	arg01, #13
	call	#__system___txraw
LR__0568
	mov	arg01, local01
	call	#__system___txraw
	mov	ptra, fp
	call	#popregs_
__system___tx_ret
	ret

__system___rx
	mov	COUNT_, #2
	call	#pushregs_
LR__0569
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmp	local01, ##-1 wz
 if_e	jmp	#LR__0569
	cmp	local01, #13 wz
 if_ne	jmp	#LR__0570
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_ne	mov	local01, #10
LR__0570
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #1 wz
 if_e	jmp	#LR__0573
	cmp	local01, #127 wz
 if_ne	jmp	#LR__0571
	mov	arg01, #8
	call	#__system___tx
	jmp	#LR__0572
LR__0571
	mov	arg01, local01
	call	#__system___tx
LR__0572
LR__0573
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___rx_ret
	ret

__system___waitus
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	add	ptr___system__dat__, #16
	rdlong	local02, ptr___system__dat__ wz
	sub	ptr___system__dat__, #16
 if_ne	jmp	#LR__0574
	rdlong	muldiva_, #20
	mov	muldivb_, ##1000000
	call	#unsdivide_
	mov	local02, muldivb_
	add	ptr___system__dat__, #16
	wrlong	muldivb_, ptr___system__dat__
	sub	ptr___system__dat__, #16
LR__0574
	qmul	local01, local02
	getqx	arg01
	waitx	arg01
	mov	ptra, fp
	call	#popregs_
__system___waitus_ret
	ret

__system____getvfsforfile
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdbyte	local04, local02
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0575
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncpy
	jmp	#LR__0578
LR__0575
	add	ptr___system__dat__, #64
	mov	arg02, ptr___system__dat__
	sub	ptr___system__dat__, #64
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncpy
	mov	local05, result1
	rdbyte	local04, local02 wz
 if_e	jmp	#LR__0577
	rdbyte	local06, local02
	cmp	local06, #46 wz
 if_ne	jmp	#LR__0576
	add	local02, #1
	rdbyte	local07, local02
	sub	local02, #1
	mov	local08, local07
	zerox	local08, #7 wz
 if_e	jmp	#LR__0577
LR__0576
	mov	arg02, ##@LR__0674
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncat
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncat
LR__0577
LR__0578
	mov	local09, #0
LR__0579
	cmps	local09, #4 wcz
 if_ae	jmp	#LR__0590
	mov	local04, local09
	shl	local04, #2
	add	ptr___system__dat__, #32
	add	local04, ptr___system__dat__
	rdlong	local08, local04 wz
	sub	ptr___system__dat__, #32
 if_e	jmp	#LR__0589
	mov	local04, local09
	shl	local04, #2
	add	ptr___system__dat__, #32
	add	local04, ptr___system__dat__
	rdlong	arg01, local04
	sub	ptr___system__dat__, #32
	mov	local10, #0
	loc	pa,	#(@LR__0581-@LR__0580)
	call	#FCACHE_LOAD_
LR__0580
	rdbyte	local11, arg01 wz
 if_ne	add	local10, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0580
LR__0581
	mov	result1, local10
	mov	local12, result1
	mov	local06, local12
	add	local06, local01
	rdbyte	local04, local06
	cmp	local04, #47 wz
 if_e	jmp	#LR__0582
	mov	local05, local12
	add	local05, local01
	rdbyte	local07, local05 wz
 if_ne	jmp	#LR__0588
LR__0582
	mov	arg01, local01
	mov	local13, local09
	shl	local13, #2
	add	ptr___system__dat__, #32
	add	local13, ptr___system__dat__
	rdlong	arg02, local13
	mov	arg03, local12
	sub	ptr___system__dat__, #32
	call	#__system__strncmp
	mov	local14, result1 wz
 if_ne	jmp	#LR__0588
	mov	local04, local09
	shl	local04, #2
	add	ptr___system__dat__, #48
	add	local04, ptr___system__dat__
	rdlong	local15, local04
	sub	ptr___system__dat__, #48
	loc	pa,	#(@LR__0585-@LR__0583)
	call	#FCACHE_LOAD_
LR__0583
	mov	local08, local12
	add	local08, #1
	add	local08, local01
	rdbyte	local04, local08
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0586
	mov	local16, local12
	add	local16, #2
	add	local16, local01
	rdbyte	local05, local16
	cmp	local05, #47 wz
 if_e	jmp	#LR__0584
	mov	local17, local12
	add	local17, #2
	add	local17, local01
	rdbyte	local18, local17 wz
 if_ne	jmp	#LR__0586
LR__0584
	add	local12, #1
	jmp	#LR__0583
LR__0585
LR__0586
	cmp	local03, #0 wz
 if_e	jmp	#LR__0587
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #256
	call	#__system__strncpy
LR__0587
	mov	arg01, local01
	mov	arg02, local01
	add	arg02, local12
	add	arg02, #1
	call	#__system____builtin_strcpy
	mov	result1, local15
	jmp	#LR__0591
LR__0588
LR__0589
	add	local09, #1
	jmp	#LR__0579
LR__0590
	add	ptr___system__dat__, ##580
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##580
LR__0591
	mov	ptra, fp
	call	#popregs_
__system____getvfsforfile_ret
	ret

__system___basic_print_char
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	call	#__system___gettxfunc
	mov	local02, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0592
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	result1, #1
LR__0592
	mov	ptra, fp
	call	#popregs_
__system___basic_print_char_ret
	ret

__system___basic_print_string
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	call	#__system___gettxfunc
	mov	local03, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0593
	cmp	local01, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0593
	mov	arg01, local03
	mov	arg02, local02
	mov	arg03, local01
	call	#__system___fmtstr
LR__0593
	mov	ptra, fp
	call	#popregs_
__system___basic_print_string_ret
	ret

__system___fmtstr
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	and	local04, #255
	mov	arg01, local03
	mov	local05, #0
	loc	pa,	#(@LR__0595-@LR__0594)
	call	#FCACHE_LOAD_
LR__0594
	rdbyte	local06, arg01 wz
 if_ne	add	local05, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0594
LR__0595
	mov	result1, local05
	mov	local07, result1
	cmp	local04, #0 wz
 if_e	jmp	#LR__0596
	fles	local07, local04 wcz
LR__0596
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #2
	call	#__system___fmtpad
	mov	local08, result1
	cmps	local08, #0 wcz
 if_b	mov	result1, local08
 if_b	jmp	#LR__0599
	mov	local09, #0
LR__0597
	cmps	local09, local07 wcz
 if_ae	jmp	#LR__0598
	mov	local10, local01
	rdlong	local11, local10
	add	local10, #4
	rdlong	local12, local10
	rdbyte	arg01, local03
	mov	local13, objptr
	mov	objptr, local11
	add	local03, #1
	call	local12
	mov	objptr, local13
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_b	jmp	#LR__0599
	add	local08, local14
	add	local09, #1
	jmp	#LR__0597
LR__0598
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #1
	call	#__system___fmtpad
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_ae	add	local08, local14
 if_ae	mov	result1, local08
LR__0599
	mov	ptra, fp
	call	#popregs_
__system___fmtstr_ret
	ret

__system___gc_ptrs
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, __heap_ptr
	mov	local02, local01
	add	local02, ##4088
	rdlong	local03, local01 wz
 if_ne	jmp	#LR__0600
	mov	local04, local02
	sub	local04, local01
	wrword	#1, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27792, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#1, local03
	add	local01, #16
	abs	local03, local04 wc
	shr	local03, #4
 if_b	neg	local03, local03
	wrword	local03, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27791, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#0, local03
	sub	local01, #16
LR__0600
	mov	result2, local02
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___gc_ptrs_ret
	ret

__system___gc_nextBlockPtr
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdword	local02, local01 wz
 if_ne	jmp	#LR__0601
	mov	arg01, ##@LR__0675
	call	#__system___gc_errmsg
	jmp	#LR__0602
LR__0601
	mov	result1, local01
	shl	local02, #4
	add	result1, local02
LR__0602
	mov	ptra, fp
	call	#popregs_
__system___gc_nextBlockPtr_ret
	ret

__system___gc_tryalloc
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
	mov	local05, local03
	mov	local06, #0
	loc	pa,	#(@LR__0604-@LR__0603)
	call	#FCACHE_LOAD_
LR__0603
	mov	local07, local05
	mov	local08, local03
	mov	local09, local05
	add	local09, #6
	rdword	local10, local09
	mov	arg01, local08
	mov	arg02, local10 wz
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local11, result1
	mov	local05, local11 wz
 if_ne	mov	local08, local05
 if_ne	rdword	local06, local08
	cmp	local05, #0 wz
 if_e	jmp	#LR__0605
	cmps	local05, local04 wcz
 if_ae	jmp	#LR__0605
	cmps	local01, local06 wcz
 if_a	jmp	#LR__0603
LR__0604
LR__0605
	cmp	local05, #0 wz
 if_e	mov	result1, local05
 if_e	jmp	#LR__0608
	mov	local08, local05
	add	local08, #6
	rdword	local12, local08
	cmps	local01, local06 wcz
 if_ae	jmp	#LR__0607
	wrword	local01, local05
	mov	arg01, local05
	mov	local09, local01
	shl	local09, #4
	add	arg01, local09
	mov	local08, local06
	sub	local08, local01
	wrword	local08, arg01
	mov	local08, arg01
	add	local08, #2
	wrword	##27791, local08
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, arg01
	add	local11, #4
	wrword	result1, local11
	mov	local08, local05
	add	local08, #6
	mov	local09, arg01
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	local13, arg01
	mov	arg02, local13 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local12, result1
	call	#__system___gc_nextBlockPtr
	mov	local14, result1 wz
 if_e	jmp	#LR__0606
	cmps	local14, local04 wcz
 if_ae	jmp	#LR__0606
	mov	local08, local03
	mov	local09, local13
	mov	arg01, local08
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local14
	add	local11, #4
	wrword	local10, local11
LR__0606
LR__0607
	add	local07, #6
	wrword	local12, local07
	mov	local08, ##27776
	or	local08, local02
	mov	result1, #0
	cogid	result1
	or	local08, result1
	mov	local10, local05
	add	local10, #2
	wrword	local08, local10
	mov	local08, local03
	add	local08, #8
	mov	local09, local05
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	add	local03, #8
	wrword	result1, local03
	mov	result1, local05
	add	result1, #8
	or	result1, ##1669332992
LR__0608
	mov	ptra, fp
	call	#popregs_
__system___gc_tryalloc_ret
	ret

__system___gc_errmsg
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
LR__0609
	rdbyte	local02, local01 wz
	add	local01, #1
 if_e	jmp	#LR__0610
	mov	arg01, local02
	call	#__system___tx
	jmp	#LR__0609
LR__0610
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
__system___gc_errmsg_ret
	ret

__system___gc_alloc_managed
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #0
	call	#__system___gc_doalloc
	mov	local02, result1 wz
 if_ne	jmp	#LR__0611
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0611
	mov	arg01, ##@LR__0676
	call	#__system___gc_errmsg
	jmp	#LR__0612
LR__0611
	mov	result1, local02
LR__0612
	mov	ptra, fp
	call	#popregs_
__system___gc_alloc_managed_ret
	ret

__system___gc_doalloc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
 if_e	mov	result1, #0
 if_e	jmp	#LR__0620
	add	local01, #23
	andn	local01, #15
	shr	local01, #4
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	call	#__system___lockmem
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0613
	call	#__system___gc_docollect
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1
LR__0613
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	wrlong	#0, arg01
	cmp	local03, #0 wz
 if_e	jmp	#LR__0619
	shl	local01, #4
	sub	local01, #8
	abs	local04, local01 wc
	shr	local04, #2
 if_b	neg	local04, local04
	mov	local05, local04 wz
	mov	local06, local03
 if_e	jmp	#LR__0618
	loc	pa,	#(@LR__0616-@LR__0614)
	call	#FCACHE_LOAD_
LR__0614
	rep	@LR__0617, local05
LR__0615
	wrlong	#0, local06
	add	local06, #4
LR__0616
LR__0617
LR__0618
LR__0619
	mov	result1, local03
LR__0620
	mov	ptra, fp
	call	#popregs_
__system___gc_doalloc_ret
	ret

__system___gc_isvalidptr
	mov	_var01, arg03
	mov	_var02, _var01
	and	_var02, ##-1048576
	cmp	_var02, ##1669332992 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	sub	_var01, #8
	andn	_var01, ##-1048576
	cmps	_var01, arg01 wcz
 if_b	jmp	#LR__0621
	cmps	_var01, arg02 wcz
 if_b	jmp	#LR__0622
LR__0621
	mov	result1, #0
	jmp	#__system___gc_isvalidptr_ret
LR__0622
	mov	_var02, _var01
	xor	_var02, arg01
	and	_var02, #15 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	mov	_var02, _var01
	add	_var02, #2
	rdword	_var02, _var02
	and	_var02, ##65472
	cmp	_var02, ##27776 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, _var01
__system___gc_isvalidptr_ret
	ret

__system___gc_free
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	arg01, result1
	mov	arg02, result2
	mov	arg03, local01
	call	#__system___gc_isvalidptr
	mov	local01, result1 wz
 if_e	jmp	#LR__0623
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	call	#__system___lockmem
	mov	arg01, local01
	call	#__system___gc_dofree
	add	ptr___system__dat__, #20
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #20
	wrlong	#0, arg01
LR__0623
	mov	ptra, fp
	call	#popregs_
__system___gc_free_ret
	ret

__system___gc_dofree
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	local02, result1
	mov	local03, result2
	mov	local04, local01
	add	local04, #2
	wrword	##27791, local04
	mov	local05, local01
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	loc	pa,	#(@LR__0625-@LR__0624)
	call	#FCACHE_LOAD_
LR__0624
	add	local05, #4
	rdword	arg02, local05 wz
	mov	arg01, local02
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local05, result1 wz
 if_e	jmp	#LR__0626
	mov	arg01, local05
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07
	mov	local09, result1 wz
 if_e	jmp	#LR__0624
LR__0625
LR__0626
	cmp	local05, #0 wz
 if_e	mov	local05, local02
	mov	local04, local05
	add	local04, #6
	mov	local09, local01
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local01 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local05
	add	local11, #6
	wrword	local10, local11
	cmp	local05, local02 wz
 if_e	jmp	#LR__0629
	mov	arg01, local05
	call	#__system___gc_nextBlockPtr
	cmp	result1, local01 wz
 if_ne	jmp	#LR__0628
	rdword	local04, local05
	rdword	local11, local01
	add	local04, local11
	wrword	local04, local05
	mov	local04, local01
	add	local04, #2
	wrword	#0, local04
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0627
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, local06
	add	local11, #4
	wrword	result1, local11
LR__0627
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	add	local01, #6
	wrword	#0, local01
	mov	local01, local05
LR__0628
LR__0629
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local12, result1 wz
 if_e	jmp	#LR__0631
	cmps	local12, local03 wcz
 if_ae	jmp	#LR__0631
	mov	arg01, local12
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07 wz
 if_e	jmp	#LR__0631
	mov	local05, local01
	rdword	local04, local05
	mov	local01, local12
	rdword	local11, local01
	add	local04, local11
	mov	local13, local05
	wrword	local04, local13
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	local04, local01
	add	local04, #2
	wrword	#170, local04
	mov	local04, local01
	add	local04, #6
	wrword	#0, local04
	mov	local04, local01
	mov	arg01, local04
	call	#__system___gc_nextBlockPtr
	mov	local09, result1
	mov	local06, local09 wz
 if_e	jmp	#LR__0630
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0630
	mov	local04, local02
	mov	local09, local05
	mov	arg01, local04
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local06
	add	local11, #4
	wrword	local10, local11
LR__0630
LR__0631
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___gc_dofree_ret
	ret

__system___gc_docollect
	mov	COUNT_, #9
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result2
	mov	local02, result1
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
	mov	result1, #0
	cogid	result1
	mov	local04, result1
 if_e	jmp	#LR__0633
LR__0632
	cmps	local03, local01 wcz
 if_ae	jmp	#LR__0633
	mov	local05, local03
	add	local05, #2
	rdword	local06, local05
	andn	local06, #32
	mov	local07, local03
	add	local07, #2
	wrword	local06, local07
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
 if_ne	jmp	#LR__0632
LR__0633
	mov	local06, #0
	mov	arg01, #0
	call	#__system____topofstack
	mov	local07, result1
	mov	arg01, local06
	mov	arg02, local07
	call	#__system___gc_markhub
	call	#__system___gc_markcog
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local08, result1 wz
 if_ne	jmp	#LR__0634
	mov	arg01, ##@LR__0677
	call	#__system___gc_errmsg
	jmp	#LR__0640
LR__0634
LR__0635
	mov	local03, local08
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local08, result1
	mov	local06, local03
	add	local06, #2
	rdword	local09, local06
	test	local09, #32 wz
 if_ne	jmp	#LR__0638
	mov	local05, local09
	and	local05, #16 wz
 if_ne	jmp	#LR__0638
	mov	local06, local09
	and	local06, #15
	mov	local09, local06
	cmp	local09, local04 wz
 if_e	jmp	#LR__0636
	cmp	local09, #14 wz
 if_ne	jmp	#LR__0637
LR__0636
	mov	local06, local03
	mov	arg01, local06
	call	#__system___gc_dofree
	mov	local05, result1
	mov	local08, local05
LR__0637
LR__0638
	cmp	local08, #0 wz
 if_e	jmp	#LR__0639
	cmps	local08, local01 wcz
 if_b	jmp	#LR__0635
LR__0639
LR__0640
	mov	ptra, fp
	call	#popregs_
__system___gc_docollect_ret
	ret

__system___gc_markhub
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
LR__0641
	cmps	local01, local02 wcz
 if_ae	jmp	#LR__0642
	rdlong	arg03, local01
	add	local01, #4
	mov	arg01, local03
	mov	arg02, local04
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0641
	mov	arg01, local05
	mov	local06, #0
	add	arg01, #2
	rdword	local07, arg01
	cmp	local07, ##27791 wz
 if_e	neg	local06, #1
	mov	result1, local06
	mov	local08, result1 wz
 if_ne	jmp	#LR__0641
	mov	local09, local05
	add	local09, #2
	rdword	local10, local09
	andn	local10, #15
	or	local10, #46
	mov	local09, local05
	add	local09, #2
	wrword	local10, local09
	jmp	#LR__0641
LR__0642
	mov	ptra, fp
	call	#popregs_
__system___gc_markhub_ret
	ret

__system___gc_markcog
	mov	COUNT_, #6
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result1
	mov	local02, result2
	mov	local03, #0
LR__0643
	mov	local04, #496
	sub	local04, local03
	add	local04, #496
	'.live	local04
	alts	local04, #0
	mov	local05, local04
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local05
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0644
	mov	local06, local05
	add	local06, #2
	rdword	local04, local06
	or	local04, #32
	add	local05, #2
	wrword	local04, local05
LR__0644
	add	local03, #1
	cmps	local03, #496 wcz
 if_b	jmp	#LR__0643
	mov	ptra, fp
	call	#popregs_
__system___gc_markcog_ret
	ret

__system____default_getc
__system____default_getc_ret
	ret

__system____default_putc
__system____default_putc_ret
	ret

__system____default_putc_terminal
__system____default_putc_terminal_ret
	ret

__system____default_flush
__system____default_flush_ret
	ret

__system____getftab
	cmp	arg01, #10 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#__system____getftab_ret
	mov	result1, arg01
	shl	result1, #1
	add	result1, arg01
	shl	result1, #4
	add	ptr___system__dat__, ##1144
	add	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##1144
__system____getftab_ret
	ret

__system__strncpy
	mov	_var01, arg01
LR__0645
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_b	jmp	#LR__0646
	rdbyte	_var02, arg02
	wrbyte	_var02, _var01
	add	arg02, #1
	rdbyte	_var03, _var01 wz
	add	_var01, #1
 if_ne	jmp	#LR__0645
LR__0646
	loc	pa,	#(@LR__0648-@LR__0647)
	call	#FCACHE_LOAD_
LR__0647
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_ae	wrbyte	#0, _var01
 if_ae	add	_var01, #1
 if_ae	jmp	#LR__0647
LR__0648
	mov	result1, arg01
__system__strncpy_ret
	ret

__system__strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__0653
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0653
	mov	_var05, _var01
	loc	pa,	#(@LR__0651-@LR__0649)
	call	#FCACHE_LOAD_
LR__0649
	rdbyte	_var06, _var05 wz
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__0649
	mov	_var07, _var03
LR__0650
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__0652
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wcz
 if_ae	wrbyte	_var10, _var05
 if_ae	add	_var05, #1
 if_ae	jmp	#LR__0650
LR__0651
LR__0652
	mov	_var06, #0
	wrbyte	#0, _var05
LR__0653
	mov	result1, _var01
__system__strncat_ret
	ret

__system__strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0654
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#__system__strncmp_ret
LR__0654
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#__system__strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0656-@LR__0655)
	call	#FCACHE_LOAD_
LR__0655
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0657
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0657
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0655
LR__0656
LR__0657
	cmps	_var05, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#__system__strncmp_ret
	cmp	_var06, _var09 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system__strncmp_ret
	cmp	_var06, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#__system__strncmp_ret
	cmp	_var09, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
__system__strncmp_ret
	ret

__system___fmtpad
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg04
	getbyte	local04, local02, #1
	shr	local02, #22
	and	local02, #3 wz
	mov	local05, #0
 if_e	mov	local02, #1
	test	local02, local03 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0661
	sub	local04, arg03
	mov	local06, local04
	cmps	local06, #0 wcz
 if_be	mov	result1, #0
 if_be	jmp	#LR__0661
	cmp	local02, #3 wz
 if_ne	jmp	#LR__0658
	cmp	local03, #1 wz
	wrz	local07
	add	local06, local07
	abs	local06, local06 wc
	shr	local06, #1
 if_b	neg	local06, local06
LR__0658
	mov	local08, #0
LR__0659
	cmps	local08, local06 wcz
 if_ae	jmp	#LR__0660
	mov	local09, local01
	rdlong	local07, local09
	add	local09, #4
	rdlong	local10, local09
	mov	arg01, #32
	mov	local11, objptr
	mov	objptr, local07
	call	local10
	mov	objptr, local11
	mov	local12, result1
	cmps	local12, #0 wcz
 if_b	mov	result1, local12
 if_b	jmp	#LR__0661
	add	local05, local12
	add	local08, #1
	jmp	#LR__0659
LR__0660
	mov	result1, local05
LR__0661
	mov	ptra, fp
	call	#popregs_
__system___fmtpad_ret
	ret

__system___gettxfunc
	mov	COUNT_, #3
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_e	jmp	#LR__0662
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	mov	local03, local02 wz
 if_ne	jmp	#LR__0663
LR__0662
	mov	result1, #0
	jmp	#LR__0664
LR__0663
	mov	arg01, local01
	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
	call	#__system___make_methodptr
LR__0664
	mov	ptra, fp
	call	#popregs_
__system___gettxfunc_ret
	ret

__system___getiolock_0110
	mov	COUNT_, #3
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_e	jmp	#LR__0665
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	mov	local03, local02 wz
 if_ne	jmp	#LR__0666
LR__0665
	add	ptr___system__dat__, ##576
	mov	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##576
	jmp	#LR__0667
LR__0666
	add	local01, #12
	mov	result1, local01
LR__0667
	mov	ptra, fp
	call	#popregs_
__system___getiolock_0110_ret
	ret

__system___rxtxioctl_0537
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	cmp	local01, #256 wz
 if_e	jmp	#LR__0668
	cmp	local01, #257 wz
 if_e	jmp	#LR__0669
	jmp	#LR__0670
LR__0668
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, local02
	mov	result1, #0
	jmp	#LR__0671
LR__0669
	rdlong	arg01, local02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0671
LR__0670
	add	ptr___system__dat__, #28
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, #28
	neg	result1, #1
LR__0671
	mov	ptra, fp
	call	#popregs_
__system___rxtxioctl_0537_ret
	ret

__system____dummy_flush_0538
	mov	result1, #0
__system____dummy_flush_0538_ret
	ret

__struct__s_vfs_file_t_putchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #24
	rdlong	local01, objptr wz
	sub	objptr, #24
 if_e	mov	result1, #0
 if_e	jmp	#LR__0672
	add	objptr, #24
	rdlong	local01, objptr
	sub	objptr, #24
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg02, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	cmps	result1, #0 wcz
 if_b	mov	local01, #0
 if_ae	mov	local01, #1
	mov	result1, local01
LR__0672
	mov	ptra, fp
	call	#popregs_
__struct__s_vfs_file_t_putchar_ret
	ret

__struct__s_vfs_file_t_getchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #28
	rdlong	local01, objptr wz
	sub	objptr, #28
 if_e	neg	result1, #1
 if_e	jmp	#LR__0673
'         return getcf(__this);
	add	objptr, #28
	rdlong	local01, objptr
	sub	objptr, #28
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg01, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
LR__0673
	mov	ptra, fp
	call	#popregs_
__struct__s_vfs_file_t_getchar_ret
	ret

__struct___bas_wrap_sender_tx
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	local01, objptr
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__struct___bas_wrap_sender_tx_ret
	ret

LR__0674
	byte	"/"
	byte	0
LR__0675
	byte	" !!! corrupted heap??? !!! "
	byte	0
LR__0676
	byte	" !!! out of heap memory !!! "
	byte	0
LR__0677
	byte	" !!! corrupted heap !!! "
	byte	0
LR__0678
	byte	34,"*+,:;<=>?[]|",127
	byte	0
LR__0679
	byte	-21,"v",-112,"EXFAT   "
	byte	0
LR__0680
	byte	"FAT"
	byte	0
LR__0681
	byte	"FAT32"
	byte	0
LR__0682
	byte	"/sd"
	byte	0
LR__0683
	byte	"/sd/mod"
	byte	0
LR__0684
	byte	"current directory is: "
	byte	0
LR__0685
	byte	"Listing:"
	byte	0
LR__0686
	byte	"*.*"
	byte	0
LR__0687
	byte	
	byte	0
LR__0688
	byte	
	byte	0
LR__0689
	byte	"done"
	byte	0
LR__0690
	byte	"."
	byte	0
LR__0691
	byte	0
	byte	0
LR__0692
	byte	0
	byte	0
LR__0693
	byte	0
	byte	0
LR__0694
	byte	"/"
	byte	0
LR__0695
	byte	0
	byte	0
LR__0696
	byte	"/"
	byte	0
	alignl
_dat_
	byte	$00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 12
	byte	$00[1120]
	alignl
_ff_cc_dat_
	byte	$00[6]
	byte	$43, $55, $45, $41, $41, $41, $41, $43, $45, $45, $45, $49, $49, $49, $41, $41
	byte	$45, $92, $92, $4f, $4f, $4f, $55, $55, $59, $4f, $55, $4f, $9c, $4f, $9e, $9f
	byte	$41, $49, $4f, $55, $a5, $a5, $a6, $a7, $a8, $a9, $aa, $ab, $ac, $ad, $ae, $af
	byte	$b0, $b1, $b2, $b3, $b4, $41, $41, $41, $b8, $b9, $ba, $bb, $bc, $bd, $be, $bf
	byte	$c0, $c1, $c2, $c3, $c4, $c5, $41, $41, $c8, $c9, $ca, $cb, $cc, $cd, $ce, $cf
	byte	$d1, $d1, $45, $45, $45, $49, $49, $49, $49, $d9, $da, $db, $dc, $dd, $49, $df
	byte	$4f, $e1, $4f, $4f, $4f, $4f, $e6, $e8, $e8, $55, $55, $55, $59, $59, $ee, $ef
	byte	$f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fe, $ff
	byte	$01, $00, $04, $00, $10, $00, $40, $00, $00, $01, $00, $02, $00, $00, $01, $00
	byte	$02, $00, $04, $00, $08, $00, $10, $00, $20, $00, $00, $00, $00, $00, $07, $00
	byte	$00[26]
	long	@@@_ff_cc_dat_ + 256
	long	@@@_ff_cc_dat_ + 264
	long	@@@_ff_cc_dat_ + 272
	long	@@@_ff_cc_dat_ + 280
	long	@@@_ff_cc_dat_ + 288
	long	@@@_ff_cc_dat_ + 296
	long	@@@_ff_cc_dat_ + 304
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_dat_ + 312
	long	@@@_ff_cc_dat_ + 320
	long	@@@_ff_cc_dat_ + 328
	long	@@@_ff_cc_dat_ + 336
	long	@@@_ff_cc_dat_ + 344
	long	@@@_ff_cc_dat_ + 352
	long	@@@_ff_cc_dat_ + 360
	long	@@@_ff_cc_dat_ + 368
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_open_0468
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_creat_0422
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_close_0425
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_read_0450
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_write_0454
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_lseek_0458
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_ioctl
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_opendir_0428
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_closedir_0431
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_readdir_0434
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_stat_0446
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_mkdir
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_rmdir_0462
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_remove
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_rename_0464
	byte	$00[16]
	byte	$01, $00, $00, $00
	alignl
__system__dat_
	byte	$00[8]
	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[1128]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1624
	long	@@@__system__dat_ + 1632
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1640
	long	@@@__system__dat_ + 1648
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1656
	long	@@@__system__dat_ + 1664
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1672
	long	@@@__system__dat_ + 1680
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1688
	long	@@@__system__dat_ + 1696
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1704
	long	@@@__system__dat_ + 1712
	byte	$00[344]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0537
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0538
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0537
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0538
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0537
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0538
__heap_base
	long	0[1026]
objmem
	long	0[1]
stackspace
	long	0[1]
	org	COG_BSS_START
_var01
	res	1
_var02
	res	1
_var03
	res	1
_var04
	res	1
_var05
	res	1
_var06
	res	1
_var07
	res	1
_var08
	res	1
_var09
	res	1
_var10
	res	1
_var11
	res	1
arg01
	res	1
arg02
	res	1
arg03
	res	1
arg04
	res	1
arg05
	res	1
local01
	res	1
local02
	res	1
local03
	res	1
local04
	res	1
local05
	res	1
local06
	res	1
local07
	res	1
local08
	res	1
local09
	res	1
local10
	res	1
local11
	res	1
local12
	res	1
local13
	res	1
local14
	res	1
local15
	res	1
local16
	res	1
local17
	res	1
local18
	res	1
local19
	res	1
local20
	res	1
local21
	res	1
local22
	res	1
local23
	res	1
local24
	res	1
local25
	res	1
local26
	res	1
local27
	res	1
local28
	res	1
local29
	res	1
local30
	res	1
local31
	res	1
local32
	res	1
local33
	res	1
local34
	res	1
local35
	res	1
local36
	res	1
local37
	res	1
local38
	res	1
local39
	res	1
local40
	res	1
local41
	res	1
local42
	res	1
muldiva_
	res	1
muldivb_
	res	1
	fit	480
