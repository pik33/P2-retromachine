00000                 | 
00000                 | #line 1 "/home/pik33/Programowanie/P2-retromachine/Propeller/Tracker player psram 2/sidtest.p2asm"
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 160000000
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $10007fb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 F4 05 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 F9 F0 03 F6 | 	mov	ptra, ptr_stackspace_
00410 003 14 EC 0F FB | 	rdlong	pa, #20 wz
00414 004 EC 01 90 5D |  if_ne	jmp	#skip_clock_set_
00418 005 00 00 64 FD | 	hubset	#0
0041c 006 03 80 80 FF 
00420 007 00 F0 67 FD | 	hubset	##16779256
00424 008 86 01 80 FF 
00428 009 1F 80 66 FD | 	waitx	##200000
0042c 00a 03 80 00 FF 
00430 00b FB ED 07 F6 | 	mov	pa, ##16779259
00434 00c 00 EC 63 FD | 	hubset	pa
00438 00d 18 EC 67 FC | 	wrlong	pa, #24
0043c 00e B4 C4 84 FF 
00440 00f 14 00 6C FC | 	wrlong	##160000000, #20
00444 010 BC 01 90 FD | 	jmp	#skip_clock_set_
00448 011 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 F4 07 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 0E 62 FD | 	cogid	arg01
00614 084 03 0E 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 61 E3 05 FB | 	rdlong	objptr, ptra++
0061c 086 61 F5 05 FB | 	rdlong	result1, ptra++
00620 087 28 06 64 FD | 	setq	#3
00624 088 00 0F 06 FB | 	rdlong	arg01, ptra
00628 089 04 F0 87 F1 | 	sub	ptra, #4
0062c 08a 2D F4 61 FD | 	call	result1
00630 08b D4 FF 9F FD | 	jmp	#cogexit
00634 08c             | FCACHE_LOAD_
00634 08c 2B 30 61 FD |     pop	fcache_tmpb_
00638 08d F6 31 01 F1 |     add	fcache_tmpb_, pa
0063c 08e 2A 30 61 FD |     push	fcache_tmpb_
00640 08f F6 31 81 F1 |     sub	fcache_tmpb_, pa
00644 090 02 EC 47 F0 |     shr	pa, #2
00648 091 00 EC 8F F9 |     altd	pa
0064c 092 97 00 00 F6 |     mov	 0-0, ret_instr_
00650 093 01 EC 87 F1 |     sub	pa, #1
00654 094 28 EC 63 FD |     setq	pa
00658 095 98 00 00 FB |     rdlong	$0, fcache_tmpb_
0065c 096 00 00 80 FD |     jmp	#\$0 ' jmp to cache
00660 097             | ret_instr_
00660 097 2D 00 64 FD |     ret
00664 098             | fcache_tmpb_
00664 098 00 00 00 00 |     long 0
00668 099             | builtin_bytefill_
00668 099 01 12 56 F0 |         shr	arg03, #1 wc
0066c 09a 07 11 42 CC |  if_c   wrbyte	arg02, arg01
00670 09b 01 0E 06 C1 |  if_c   add	arg01, #1
00674 09c 00 10 FE F9 |         movbyts	arg02, #0
00678 09d             | builtin_wordfill_
00678 09d 01 12 56 F0 |         shr	arg03, #1 wc
0067c 09e 07 11 52 CC |  if_c   wrword	arg02, arg01
00680 09f 02 0E 06 C1 |  if_c   add	arg01, #2
00684 0a0 08 11 2A F9 |         setword	arg02, arg02, #1
00688 0a1             | builtin_longfill_
00688 0a1 07 01 88 FC |         wrfast	#0,arg01
0068c 0a2 00 12 0E F2 |         cmp	arg03, #0 wz
00690 0a3 09 03 D8 5C |  if_nz  rep	#1, arg03
00694 0a4 17 10 62 5D |  if_nz  wflong	arg02
00698 0a5 2D 00 64 FD |         ret
0069c 0a6             | COUNT_
0069c 0a6 00 00 00 00 |     long 0
006a0 0a7             | RETADDR_
006a0 0a7 00 00 00 00 |     long 0
006a4 0a8             | fp
006a4 0a8 00 00 00 00 |     long 0
006a8 0a9             | pushregs_
006a8 0a9 2B EC 63 FD |     pop  pa
006ac 0aa 2B 4E 61 FD |     pop  RETADDR_
006b0 0ab 03 4C 95 FB |     tjz  COUNT_, #pushregs_done_
006b4 0ac FF 4D 8D F9 |     altd  COUNT_, #511
006b8 0ad 28 00 64 FD |     setq #0-0
006bc 0ae 61 19 66 FC |     wrlong local01, ptra++
006c0 0af             | pushregs_done_
006c0 0af 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006c4 0b0 61 4D 65 FC |     wrlong COUNT_, ptra++
006c8 0b1 F8 51 01 F6 |     mov    fp, ptra
006cc 0b2 2C EC 63 FD |     jmp  pa
006d0 0b3             |  popregs_
006d0 0b3 2B EC 63 FD |     pop    pa
006d4 0b4 28 04 64 FD |     setq   #2
006d8 0b5 5F 4D 05 FB |     rdlong COUNT_, --ptra
006dc 0b6 02 4C 75 FB |     djf    COUNT_, #popregs__ret
006e0 0b7 28 4C 61 FD |     setq   COUNT_
006e4 0b8 5F 19 06 FB |     rdlong local01, --ptra
006e8 0b9             | popregs__ret
006e8 0b9 2A 4E 61 FD |     push   RETADDR_
006ec 0ba 2C EC 63 FD |     jmp    pa
006f0 0bb             | 
006f0 0bb             | divide_
006f0 0bb 37 6F 5A F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
006f4 0bc 6C E0 61 FD |        wrc     itmp2_                         'store sign of y
006f8 0bd 36 6D 52 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
006fc 0be 37 6D 12 FD |        qdiv    muldiva_, muldivb_             'queue divide
00700 0bf 01 E0 65 C5 |  if_c  xor     itmp2_,#1                      'store sign of x
00704 0c0 18 6E 62 FD |        getqx   muldivb_                       'get quotient
00708 0c1 19 6C 62 FD |        getqy   muldiva_                       'get remainder
0070c 0c2 36 6D 82 F6 |        negc    muldiva_,muldiva_              'restore sign, remainder (sign of x)
00710 0c3 00 E0 15 F4 |        testb   itmp2_,#0             wc       'restore sign, division result
00714 0c4 37 6F 82 06 |  _ret_ negc    muldivb_,muldivb_     
00718 0c5             | __pc long 0
00718 0c5 00 00 00 00 
0071c 0c6             | __setjmp
0071c 0c6 2B 8A 61 FD |     pop __pc
00720 0c7 00 F4 05 F6 |     mov result1, #0
00724 0c8 00 F6 05 F6 |     mov result2, #0
00728 0c9 07 DD 01 F6 |     mov abortchain, arg01
0072c 0ca 07 51 61 FC |     wrlong fp, arg01
00730 0cb 04 0E 06 F1 |     add arg01, #4
00734 0cc 07 F1 63 FC |     wrlong ptra, arg01
00738 0cd 04 0E 06 F1 |     add arg01, #4
0073c 0ce 07 E3 61 FC |     wrlong objptr, arg01
00740 0cf 04 0E 06 F1 |     add arg01, #4
00744 0d0 07 8B 61 FC |     wrlong __pc, arg01
00748 0d1 2C 8A 61 FD |     jmp __pc
0074c 0d2             | __unwind_pc long 0
0074c 0d2 00 00 00 00 
00750 0d3             | __unwind_stack
00750 0d3 2B A4 61 FD |    pop  __unwind_pc
00754 0d4             | __unwind_loop
00754 0d4 08 0F 0A F2 |    cmp  arg01, arg02 wz
00758 0d5 10 00 90 AD |   if_z jmp #__unwind_stack_ret
0075c 0d6 07 F1 03 F6 |    mov   ptra, arg01
00760 0d7 6C FF BF FD |    call  #popregs_
00764 0d8 A8 0E 02 F6 |    mov   arg01, fp
00768 0d9 E8 FF 9F FD |    jmp   #__unwind_loop
0076c 0da             | __unwind_stack_ret
0076c 0da 2C A4 61 FD |    jmp  __unwind_pc
00770 0db             | __longjmp
00770 0db 2B 8A 61 FD |     pop __pc
00774 0dc 00 0E 0E F2 |     cmp    arg01, #0 wz
00778 0dd 30 00 90 AD |  if_z jmp #nocatch
0077c 0de 08 F5 01 F6 |     mov result1, arg02
00780 0df 01 F6 05 F6 |     mov result2, #1
00784 0e0 07 11 02 FB |     rdlong arg02, arg01
00788 0e1 04 0E 06 F1 |     add arg01, #4
0078c 0e2 07 F1 03 FB |     rdlong ptra, arg01
00790 0e3 04 0E 06 F1 |     add arg01, #4
00794 0e4 07 E3 01 FB |     rdlong objptr, arg01
00798 0e5 04 0E 06 F1 |     add arg01, #4
0079c 0e6 07 8B 01 FB |     rdlong __pc, arg01
007a0 0e7 A8 0E 02 F6 |     mov arg01, fp
007a4 0e8 A8 FF BF FD |     call #__unwind_stack
007a8 0e9             | __longjmp_ret
007a8 0e9 2C 8A 61 FD |     jmp  __pc
007ac 0ea             | nocatch
007ac 0ea 00 12 0E F2 |     cmp arg03, #0 wz
007b0 0eb 54 FE 9F AD |  if_z jmp #cogexit
007b4 0ec F0 FF 9F FD |     jmp #__longjmp_ret
007b8 0ed             | 
007b8 0ed             | __heap_ptr
007b8 0ed 64 DF 00 00 | 	long	@__heap_base
007bc 0ee             | abortchain
007bc 0ee 00 00 00 00 | 	long	0
007c0 0ef             | itmp1_
007c0 0ef 00 00 00 00 | 	long	0
007c4 0f0             | itmp2_
007c4 0f0 00 00 00 00 | 	long	0
007c8 0f1             | objptr
007c8 0f1 6C EF 00 00 | 	long	@objmem
007cc 0f2             | ptr___struct__s_vfs_file_t_putchar_
007cc 0f2 2C CF 00 00 | 	long	@__struct__s_vfs_file_t_putchar
007d0 0f3             | ptr___system____default_flush_
007d0 0f3 08 37 00 00 | 	long	@__system____default_flush
007d4 0f4             | ptr___system____default_getc_
007d4 0f4 50 35 00 00 | 	long	@__system____default_getc
007d8 0f5             | ptr___system____default_putc_
007d8 0f5 D8 35 00 00 | 	long	@__system____default_putc
007dc 0f6             | ptr___system____default_putc_terminal_
007dc 0f6 6C 36 00 00 | 	long	@__system____default_putc_terminal
007e0 0f7             | ptr___system__dat__
007e0 0f7 60 D1 00 00 | 	long	@__system__dat_
007e4 0f8             | ptr__ff_cc_dat__
007e4 0f8 1C D8 00 00 | 	long	@_ff_cc_dat_
007e8 0f9             | ptr_stackspace_
007e8 0f9 08 F0 00 00 | 	long	@stackspace
007ec 0fa             | result1
007ec 0fa 00 00 00 00 | 	long	0
007f0 0fb             | result2
007f0 0fb 00 00 00 00 | 	long	0
007f4 0fc             | COG_BSS_START
007f4 0fc             | 	fit	480
007f4                 | 	orgh
007f4                 | hubentry
007f4                 | 
007f4                 | _program
007f4     05 4C 05 F6 | 	mov	COUNT_, #5
007f8     A9 00 A0 FD | 	call	#pushregs_
007fc     68 00 00 FF 
00800     98 18 06 F6 | 	mov	local01, ##@LR__0898
00804     3D 0E 06 F6 | 	mov	arg01, #61
00808     3C 10 06 F6 | 	mov	arg02, #60
0080c     3B 12 06 F6 | 	mov	arg03, #59
00810     3A 14 06 F6 | 	mov	arg04, #58
00814     70 2C B0 FD | 	call	#__system___vfs_open_sdcardx
00818     FA 10 02 F6 | 	mov	arg02, result1
0081c     0C 0F 02 F6 | 	mov	arg01, local01
00820     5C 12 B0 FD | 	call	#__system___mount
00824     68 00 00 FF 
00828     9C 0E 06 F6 | 	mov	arg01, ##@LR__0899
0082c     8C 34 B0 FD | 	call	#__system__chdir
00830     68 00 00 FF 
00834     AD 18 06 F6 | 	mov	local01, ##@LR__0900
00838     98 E2 05 F1 | 	add	objptr, #152
0083c     F1 18 62 FC | 	wrlong	local01, objptr
00840     98 E2 85 F1 | 	sub	objptr, #152
00844                 | ' 
00844                 | ' close #8: open filename3$ for input as #8
00844     08 0E 06 F6 | 	mov	arg01, #8
00848     70 32 B0 FD | 	call	#__system__close
0084c     98 E2 05 F1 | 	add	objptr, #152
00850     F1 10 02 FB | 	rdlong	arg02, objptr
00854     98 E2 85 F1 | 	sub	objptr, #152
00858     08 0E 06 F6 | 	mov	arg01, #8
0085c     00 12 06 F6 | 	mov	arg03, #0
00860     A4 15 B0 FD | 	call	#__system___basic_open_string
00864     68 00 00 FF 
00868     CB 18 06 F6 | 	mov	local01, ##@LR__0901
0086c     88 E2 05 F1 | 	add	objptr, #136
00870     F1 18 62 FC | 	wrlong	local01, objptr
00874     68 00 00 FF 
00878     CC 18 06 F6 | 	mov	local01, ##@LR__0902
0087c     04 E2 05 F1 | 	add	objptr, #4
00880     F1 18 62 FC | 	wrlong	local01, objptr
00884     68 00 00 FF 
00888     CD 18 06 F6 | 	mov	local01, ##@LR__0903
0088c     04 E2 05 F1 | 	add	objptr, #4
00890     F1 18 62 FC | 	wrlong	local01, objptr
00894                 | ' 
00894                 | ' atitle=""'"                                "
00894                 | ' author=""'"                                "
00894                 | ' copyright=""'"                                "
00894                 | ' 
00894                 | ' get #8,5,version,2,r :    version=((version and 255) shl 8) or (version shr 8) : print version 
00894     88 E2 85 F1 | 	sub	objptr, #136
00898     F1 12 02 F6 | 	mov	arg03, objptr
0089c     08 E2 85 F1 | 	sub	objptr, #8
008a0     08 0E 06 F6 | 	mov	arg01, #8
008a4     05 10 06 F6 | 	mov	arg02, #5
008a8     02 14 06 F6 | 	mov	arg04, #2
008ac     02 16 06 F6 | 	mov	arg05, #2
008b0     D0 16 B0 FD | 	call	#__system___basic_get
008b4     04 E2 05 F1 | 	add	objptr, #4
008b8     F1 F4 61 FC | 	wrlong	result1, objptr
008bc     04 E2 05 F1 | 	add	objptr, #4
008c0     F1 1A E2 FA | 	rdword	local02, objptr
008c4     0D 19 02 F6 | 	mov	local01, local02
008c8     0F 18 46 F7 | 	zerox	local01, #15
008cc     FF 18 06 F5 | 	and	local01, #255
008d0     08 18 66 F0 | 	shl	local01, #8
008d4     0F 1A 46 F7 | 	zerox	local02, #15
008d8     08 1A 46 F0 | 	shr	local02, #8
008dc     0D 19 42 F5 | 	or	local01, local02
008e0     F1 18 52 FC | 	wrword	local01, objptr
008e4     08 E2 85 F1 | 	sub	objptr, #8
008e8     00 0E 06 F6 | 	mov	arg01, #0
008ec     74 38 B0 FD | 	call	#__system___getiolock_0110
008f0     FA 0E 02 F6 | 	mov	arg01, result1
008f4     88 0F B0 FD | 	call	#__system___lockmem
008f8     00 F4 05 F6 | 	mov	result1, #0
008fc     08 E2 05 F1 | 	add	objptr, #8
00900     F1 10 E2 FA | 	rdword	arg02, objptr
00904     08 E2 85 F1 | 	sub	objptr, #8
00908     0F 10 46 F7 | 	zerox	arg02, #15
0090c     00 0E 06 F6 | 	mov	arg01, #0
00910     00 12 06 F6 | 	mov	arg03, #0
00914     0A 14 06 F6 | 	mov	arg04, #10
00918     20 16 B0 FD | 	call	#__system___basic_print_unsigned
0091c     00 0E 06 F6 | 	mov	arg01, #0
00920     0A 10 06 F6 | 	mov	arg02, #10
00924     00 12 06 F6 | 	mov	arg03, #0
00928     7C 15 B0 FD | 	call	#__system___basic_print_char
0092c     01 F4 05 F6 | 	mov	result1, #1
00930     00 0E 06 F6 | 	mov	arg01, #0
00934     2C 38 B0 FD | 	call	#__system___getiolock_0110
00938     FA 00 68 FC | 	wrlong	#0, result1
0093c     00 F4 05 F6 | 	mov	result1, #0
00940                 | ' get #8,7,offset,2,r  :    offset=(offset shl 8) or (offset shr 8) 
00940     0A E2 05 F1 | 	add	objptr, #10
00944     F1 12 02 F6 | 	mov	arg03, objptr
00948     0A E2 85 F1 | 	sub	objptr, #10
0094c     08 0E 06 F6 | 	mov	arg01, #8
00950     07 10 06 F6 | 	mov	arg02, #7
00954     02 14 06 F6 | 	mov	arg04, #2
00958     02 16 06 F6 | 	mov	arg05, #2
0095c     24 16 B0 FD | 	call	#__system___basic_get
00960     04 E2 05 F1 | 	add	objptr, #4
00964     F1 F4 61 FC | 	wrlong	result1, objptr
00968     06 E2 05 F1 | 	add	objptr, #6
0096c     F1 1A E2 FA | 	rdword	local02, objptr
00970     0D 19 02 F6 | 	mov	local01, local02
00974     0F 18 46 F7 | 	zerox	local01, #15
00978     08 18 66 F0 | 	shl	local01, #8
0097c     0F 1A 46 F7 | 	zerox	local02, #15
00980     08 1A 46 F0 | 	shr	local02, #8
00984     0D 19 42 F5 | 	or	local01, local02
00988     F1 18 52 FC | 	wrword	local01, objptr
0098c                 | ' get #8,9,load,2,r    :    load=(load shl 8) or (load shr 8)
0098c     02 E2 05 F1 | 	add	objptr, #2
00990     F1 12 02 F6 | 	mov	arg03, objptr
00994     0C E2 85 F1 | 	sub	objptr, #12
00998     08 0E 06 F6 | 	mov	arg01, #8
0099c     09 10 06 F6 | 	mov	arg02, #9
009a0     02 14 06 F6 | 	mov	arg04, #2
009a4     02 16 06 F6 | 	mov	arg05, #2
009a8     D8 15 B0 FD | 	call	#__system___basic_get
009ac     04 E2 05 F1 | 	add	objptr, #4
009b0     F1 F4 61 FC | 	wrlong	result1, objptr
009b4     08 E2 05 F1 | 	add	objptr, #8
009b8     F1 1A E2 FA | 	rdword	local02, objptr
009bc     0D 19 02 F6 | 	mov	local01, local02
009c0     0F 18 46 F7 | 	zerox	local01, #15
009c4     08 18 66 F0 | 	shl	local01, #8
009c8     0F 1A 46 F7 | 	zerox	local02, #15
009cc     08 1A 46 F0 | 	shr	local02, #8
009d0     0D 19 42 F5 | 	or	local01, local02
009d4     F1 18 52 FC | 	wrword	local01, objptr
009d8                 | ' get #8,11,init,2,r   :    init=(init shl 8) or (init shr 8) 
009d8     06 E2 05 F1 | 	add	objptr, #6
009dc     F1 12 02 F6 | 	mov	arg03, objptr
009e0     12 E2 85 F1 | 	sub	objptr, #18
009e4     08 0E 06 F6 | 	mov	arg01, #8
009e8     0B 10 06 F6 | 	mov	arg02, #11
009ec     02 14 06 F6 | 	mov	arg04, #2
009f0     02 16 06 F6 | 	mov	arg05, #2
009f4     8C 15 B0 FD | 	call	#__system___basic_get
009f8     04 E2 05 F1 | 	add	objptr, #4
009fc     F1 F4 61 FC | 	wrlong	result1, objptr
00a00     0E E2 05 F1 | 	add	objptr, #14
00a04     F1 1A E2 FA | 	rdword	local02, objptr
00a08     0D 19 02 F6 | 	mov	local01, local02
00a0c     0F 18 46 F7 | 	zerox	local01, #15
00a10     08 18 66 F0 | 	shl	local01, #8
00a14     0F 1A 46 F7 | 	zerox	local02, #15
00a18     08 1A 46 F0 | 	shr	local02, #8
00a1c     0D 19 42 F5 | 	or	local01, local02
00a20     F1 18 52 FC | 	wrword	local01, objptr
00a24                 | ' get #8,13,play,2,r   :    play=(play shl 8) or (play shr 8) 
00a24     02 E2 05 F1 | 	add	objptr, #2
00a28     F1 12 02 F6 | 	mov	arg03, objptr
00a2c     14 E2 85 F1 | 	sub	objptr, #20
00a30     08 0E 06 F6 | 	mov	arg01, #8
00a34     0D 10 06 F6 | 	mov	arg02, #13
00a38     02 14 06 F6 | 	mov	arg04, #2
00a3c     02 16 06 F6 | 	mov	arg05, #2
00a40     40 15 B0 FD | 	call	#__system___basic_get
00a44     04 E2 05 F1 | 	add	objptr, #4
00a48     F1 F4 61 FC | 	wrlong	result1, objptr
00a4c     10 E2 05 F1 | 	add	objptr, #16
00a50     F1 1A E2 FA | 	rdword	local02, objptr
00a54     0D 19 02 F6 | 	mov	local01, local02
00a58     0F 18 46 F7 | 	zerox	local01, #15
00a5c     08 18 66 F0 | 	shl	local01, #8
00a60     0F 1A 46 F7 | 	zerox	local02, #15
00a64     08 1A 46 F0 | 	shr	local02, #8
00a68     0D 19 42 F5 | 	or	local01, local02
00a6c     F1 18 52 FC | 	wrword	local01, objptr
00a70                 | ' get #8,15,songs,2,r  :    songs=(songs shl 8) or (songs shr 8)
00a70     02 E2 05 F1 | 	add	objptr, #2
00a74     F1 12 02 F6 | 	mov	arg03, objptr
00a78     16 E2 85 F1 | 	sub	objptr, #22
00a7c     08 0E 06 F6 | 	mov	arg01, #8
00a80     0F 10 06 F6 | 	mov	arg02, #15
00a84     02 14 06 F6 | 	mov	arg04, #2
00a88     02 16 06 F6 | 	mov	arg05, #2
00a8c     F4 14 B0 FD | 	call	#__system___basic_get
00a90     04 E2 05 F1 | 	add	objptr, #4
00a94     F1 F4 61 FC | 	wrlong	result1, objptr
00a98     12 E2 05 F1 | 	add	objptr, #18
00a9c     F1 1A E2 FA | 	rdword	local02, objptr
00aa0     0D 19 02 F6 | 	mov	local01, local02
00aa4     0F 18 46 F7 | 	zerox	local01, #15
00aa8     08 18 66 F0 | 	shl	local01, #8
00aac     0F 1A 46 F7 | 	zerox	local02, #15
00ab0     08 1A 46 F0 | 	shr	local02, #8
00ab4     0D 19 42 F5 | 	or	local01, local02
00ab8     F1 18 52 FC | 	wrword	local01, objptr
00abc                 | ' get #8,17,startsong,2,r : startsong=(startsong shl 8) or (startsong shr 8) 
00abc     08 E2 85 F1 | 	sub	objptr, #8
00ac0     F1 12 02 F6 | 	mov	arg03, objptr
00ac4     0E E2 85 F1 | 	sub	objptr, #14
00ac8     08 0E 06 F6 | 	mov	arg01, #8
00acc     11 10 06 F6 | 	mov	arg02, #17
00ad0     02 14 06 F6 | 	mov	arg04, #2
00ad4     02 16 06 F6 | 	mov	arg05, #2
00ad8     A8 14 B0 FD | 	call	#__system___basic_get
00adc     04 E2 05 F1 | 	add	objptr, #4
00ae0     F1 F4 61 FC | 	wrlong	result1, objptr
00ae4     0A E2 05 F1 | 	add	objptr, #10
00ae8     F1 1A E2 FA | 	rdword	local02, objptr
00aec     0D 19 02 F6 | 	mov	local01, local02
00af0     0F 18 46 F7 | 	zerox	local01, #15
00af4     08 18 66 F0 | 	shl	local01, #8
00af8     0F 1A 46 F7 | 	zerox	local02, #15
00afc     08 1A 46 F0 | 	shr	local02, #8
00b00     0D 19 42 F5 | 	or	local01, local02
00b04     F1 18 52 FC | 	wrword	local01, objptr
00b08     0E E2 85 F1 | 	sub	objptr, #14
00b0c                 | ' get #8,19,speed,4,r     
00b0c     F1 12 02 F6 | 	mov	arg03, objptr
00b10     08 0E 06 F6 | 	mov	arg01, #8
00b14     13 10 06 F6 | 	mov	arg02, #19
00b18     04 14 06 F6 | 	mov	arg04, #4
00b1c     04 16 06 F6 | 	mov	arg05, #4
00b20     60 14 B0 FD | 	call	#__system___basic_get
00b24     04 E2 05 F1 | 	add	objptr, #4
00b28     F1 F4 61 FC | 	wrlong	result1, objptr
00b2c     04 E2 85 F1 | 	sub	objptr, #4
00b30     F1 18 02 FB | 	rdlong	local01, objptr
00b34     18 18 46 F0 | 	shr	local01, #24
00b38     F1 1C 02 FB | 	rdlong	local03, objptr
00b3c     08 1C 46 F0 | 	shr	local03, #8
00b40     7F 00 00 FF 
00b44     00 1D 06 F5 | 	and	local03, ##65280
00b48     0E 19 02 F1 | 	add	local01, local03
00b4c     F1 1A 02 FB | 	rdlong	local02, objptr
00b50     08 1A 66 F0 | 	shl	local02, #8
00b54     80 7F 00 FF 
00b58     00 1A 06 F5 | 	and	local02, ##16711680
00b5c     0D 19 02 F1 | 	add	local01, local02
00b60     F1 1E 02 FB | 	rdlong	local04, objptr
00b64     18 1E 66 F0 | 	shl	local04, #24
00b68     0F 19 02 F1 | 	add	local01, local04
00b6c     F1 18 62 FC | 	wrlong	local01, objptr
00b70                 | ' get #8,23,ititle(0),32,r      
00b70     1C E2 05 F1 | 	add	objptr, #28
00b74     F1 12 02 F6 | 	mov	arg03, objptr
00b78     1C E2 85 F1 | 	sub	objptr, #28
00b7c     08 0E 06 F6 | 	mov	arg01, #8
00b80     17 10 06 F6 | 	mov	arg02, #23
00b84     20 14 06 F6 | 	mov	arg04, #32
00b88     01 16 06 F6 | 	mov	arg05, #1
00b8c     F4 13 B0 FD | 	call	#__system___basic_get
00b90     04 E2 05 F1 | 	add	objptr, #4
00b94     F1 F4 61 FC | 	wrlong	result1, objptr
00b98                 | ' get #8,55,iauthor(0),32,r      
00b98     3C E2 05 F1 | 	add	objptr, #60
00b9c     F1 12 02 F6 | 	mov	arg03, objptr
00ba0     40 E2 85 F1 | 	sub	objptr, #64
00ba4     08 0E 06 F6 | 	mov	arg01, #8
00ba8     37 10 06 F6 | 	mov	arg02, #55
00bac     20 14 06 F6 | 	mov	arg04, #32
00bb0     01 16 06 F6 | 	mov	arg05, #1
00bb4     CC 13 B0 FD | 	call	#__system___basic_get
00bb8     04 E2 05 F1 | 	add	objptr, #4
00bbc     F1 F4 61 FC | 	wrlong	result1, objptr
00bc0                 | ' get #8,87,icopyright(0),32,r    
00bc0     60 E2 05 F1 | 	add	objptr, #96
00bc4     F1 12 02 F6 | 	mov	arg03, objptr
00bc8     64 E2 85 F1 | 	sub	objptr, #100
00bcc     08 0E 06 F6 | 	mov	arg01, #8
00bd0     57 10 06 F6 | 	mov	arg02, #87
00bd4     20 14 06 F6 | 	mov	arg04, #32
00bd8     01 16 06 F6 | 	mov	arg05, #1
00bdc     A4 13 B0 FD | 	call	#__system___basic_get
00be0     04 E2 05 F1 | 	add	objptr, #4
00be4     F1 F4 61 FC | 	wrlong	result1, objptr
00be8                 | ' 
00be8                 | ' if version>1 then 
00be8     04 E2 05 F1 | 	add	objptr, #4
00bec     F1 18 E2 FA | 	rdword	local01, objptr
00bf0     08 E2 85 F1 | 	sub	objptr, #8
00bf4     0F 18 46 F7 | 	zerox	local01, #15
00bf8     02 18 16 F2 | 	cmp	local01, #2 wc
00bfc     9C 00 90 CD |  if_b	jmp	#LR__0002
00c00                 | '   get #8,119,flags,2,r : flags=(flags shl 8) or (flags shr 8)
00c00     10 E2 05 F1 | 	add	objptr, #16
00c04     F1 12 02 F6 | 	mov	arg03, objptr
00c08     10 E2 85 F1 | 	sub	objptr, #16
00c0c     08 0E 06 F6 | 	mov	arg01, #8
00c10     77 10 06 F6 | 	mov	arg02, #119
00c14     02 14 06 F6 | 	mov	arg04, #2
00c18     02 16 06 F6 | 	mov	arg05, #2
00c1c     64 13 B0 FD | 	call	#__system___basic_get
00c20     04 E2 05 F1 | 	add	objptr, #4
00c24     F1 F4 61 FC | 	wrlong	result1, objptr
00c28     0C E2 05 F1 | 	add	objptr, #12
00c2c     F1 1A E2 FA | 	rdword	local02, objptr
00c30     0D 19 02 F6 | 	mov	local01, local02
00c34     0F 18 46 F7 | 	zerox	local01, #15
00c38     08 18 66 F0 | 	shl	local01, #8
00c3c     0F 1A 46 F7 | 	zerox	local02, #15
00c40     08 1A 46 F0 | 	shr	local02, #8
00c44     0D 19 42 F5 | 	or	local01, local02
00c48     F1 18 52 FC | 	wrword	local01, objptr
00c4c     0B E2 05 F1 | 	add	objptr, #11
00c50     F1 00 48 FC | 	wrbyte	#0, objptr
00c54                 | '   b=0 : if load=0 then b=1 : get #8,125,load,2,r  
00c54     0F E2 85 F1 | 	sub	objptr, #15
00c58     F1 18 E2 FA | 	rdword	local01, objptr
00c5c     0C E2 85 F1 | 	sub	objptr, #12
00c60     0F 18 4E F7 | 	zerox	local01, #15 wz
00c64     34 00 90 5D |  if_ne	jmp	#LR__0001
00c68     1B E2 05 F1 | 	add	objptr, #27
00c6c     F1 02 48 FC | 	wrbyte	#1, objptr
00c70     0F E2 85 F1 | 	sub	objptr, #15
00c74     F1 12 02 F6 | 	mov	arg03, objptr
00c78     0C E2 85 F1 | 	sub	objptr, #12
00c7c     08 0E 06 F6 | 	mov	arg01, #8
00c80     7D 10 06 F6 | 	mov	arg02, #125
00c84     02 14 06 F6 | 	mov	arg04, #2
00c88     02 16 06 F6 | 	mov	arg05, #2
00c8c     F4 12 B0 FD | 	call	#__system___basic_get
00c90     04 E2 05 F1 | 	add	objptr, #4
00c94     F1 F4 61 FC | 	wrlong	result1, objptr
00c98     04 E2 85 F1 | 	sub	objptr, #4
00c9c                 | LR__0001
00c9c                 | LR__0002
00c9c                 | '  
00c9c                 | ' for i=0 to 31 : atitle=atitle+chr$(ititle(i)): next i  
00c9c     94 E2 05 F1 | 	add	objptr, #148
00ca0     F1 00 68 FC | 	wrlong	#0, objptr
00ca4     94 E2 85 F1 | 	sub	objptr, #148
00ca8                 | LR__0003
00ca8     88 E2 05 F1 | 	add	objptr, #136
00cac     F1 1C 02 FB | 	rdlong	local03, objptr
00cb0     0C E2 05 F1 | 	add	objptr, #12
00cb4     F1 20 02 FB | 	rdlong	local05, objptr
00cb8     78 E2 85 F1 | 	sub	objptr, #120
00cbc     F1 20 02 F1 | 	add	local05, objptr
00cc0     10 0F C2 FA | 	rdbyte	arg01, local05
00cc4     1C E2 85 F1 | 	sub	objptr, #28
00cc8     A4 17 B0 FD | 	call	#__system__Chr_S
00ccc     FA 10 02 F6 | 	mov	arg02, result1
00cd0     0E 0F 02 F6 | 	mov	arg01, local03
00cd4     E4 0B B0 FD | 	call	#__system___string_concat
00cd8     88 E2 05 F1 | 	add	objptr, #136
00cdc     F1 F4 61 FC | 	wrlong	result1, objptr
00ce0     0C E2 05 F1 | 	add	objptr, #12
00ce4     F1 1C 02 FB | 	rdlong	local03, objptr
00ce8     01 1C 06 F1 | 	add	local03, #1
00cec     F1 1C 62 FC | 	wrlong	local03, objptr
00cf0     94 E2 85 F1 | 	sub	objptr, #148
00cf4     20 1C 56 F2 | 	cmps	local03, #32 wc
00cf8     AC FF 9F CD |  if_b	jmp	#LR__0003
00cfc                 | ' for i=0 to 31 : author=author+chr$(iauthor(i)) : next i 
00cfc     94 E2 05 F1 | 	add	objptr, #148
00d00     F1 00 68 FC | 	wrlong	#0, objptr
00d04     94 E2 85 F1 | 	sub	objptr, #148
00d08                 | LR__0004
00d08     8C E2 05 F1 | 	add	objptr, #140
00d0c     F1 1C 02 FB | 	rdlong	local03, objptr
00d10     08 E2 05 F1 | 	add	objptr, #8
00d14     F1 20 02 FB | 	rdlong	local05, objptr
00d18     54 E2 85 F1 | 	sub	objptr, #84
00d1c     F1 20 02 F1 | 	add	local05, objptr
00d20     10 0F C2 FA | 	rdbyte	arg01, local05
00d24     40 E2 85 F1 | 	sub	objptr, #64
00d28     44 17 B0 FD | 	call	#__system__Chr_S
00d2c     FA 10 02 F6 | 	mov	arg02, result1
00d30     0E 0F 02 F6 | 	mov	arg01, local03
00d34     84 0B B0 FD | 	call	#__system___string_concat
00d38     8C E2 05 F1 | 	add	objptr, #140
00d3c     F1 F4 61 FC | 	wrlong	result1, objptr
00d40     08 E2 05 F1 | 	add	objptr, #8
00d44     F1 1C 02 FB | 	rdlong	local03, objptr
00d48     01 1C 06 F1 | 	add	local03, #1
00d4c     F1 1C 62 FC | 	wrlong	local03, objptr
00d50     94 E2 85 F1 | 	sub	objptr, #148
00d54     20 1C 56 F2 | 	cmps	local03, #32 wc
00d58     AC FF 9F CD |  if_b	jmp	#LR__0004
00d5c                 | ' for i=0 to 31 : copyright=copyright+chr$(iauthor(i)) : next i  
00d5c     94 E2 05 F1 | 	add	objptr, #148
00d60     F1 00 68 FC | 	wrlong	#0, objptr
00d64     94 E2 85 F1 | 	sub	objptr, #148
00d68                 | LR__0005
00d68     90 E2 05 F1 | 	add	objptr, #144
00d6c     F1 1C 02 FB | 	rdlong	local03, objptr
00d70     04 E2 05 F1 | 	add	objptr, #4
00d74     F1 20 02 FB | 	rdlong	local05, objptr
00d78     54 E2 85 F1 | 	sub	objptr, #84
00d7c     F1 20 02 F1 | 	add	local05, objptr
00d80     10 0F C2 FA | 	rdbyte	arg01, local05
00d84     40 E2 85 F1 | 	sub	objptr, #64
00d88     E4 16 B0 FD | 	call	#__system__Chr_S
00d8c     FA 10 02 F6 | 	mov	arg02, result1
00d90     0E 0F 02 F6 | 	mov	arg01, local03
00d94     24 0B B0 FD | 	call	#__system___string_concat
00d98     90 E2 05 F1 | 	add	objptr, #144
00d9c     F1 F4 61 FC | 	wrlong	result1, objptr
00da0     04 E2 05 F1 | 	add	objptr, #4
00da4     F1 1C 02 FB | 	rdlong	local03, objptr
00da8     01 1C 06 F1 | 	add	local03, #1
00dac     F1 1C 62 FC | 	wrlong	local03, objptr
00db0     94 E2 85 F1 | 	sub	objptr, #148
00db4     20 1C 56 F2 | 	cmps	local03, #32 wc
00db8     AC FF 9F CD |  if_b	jmp	#LR__0005
00dbc                 | ' 
00dbc                 | ' print ("version:   "): print(hex$(version,4))
00dbc     00 0E 06 F6 | 	mov	arg01, #0
00dc0     A0 33 B0 FD | 	call	#__system___getiolock_0110
00dc4     FA 0E 02 F6 | 	mov	arg01, result1
00dc8     B4 0A B0 FD | 	call	#__system___lockmem
00dcc     00 F4 05 F6 | 	mov	result1, #0
00dd0     68 00 00 FF 
00dd4     CE 10 06 F6 | 	mov	arg02, ##@LR__0904
00dd8     00 0E 06 F6 | 	mov	arg01, #0
00ddc     00 12 06 F6 | 	mov	arg03, #0
00de0     10 11 B0 FD | 	call	#__system___basic_print_string
00de4     00 0E 06 F6 | 	mov	arg01, #0
00de8     0A 10 06 F6 | 	mov	arg02, #10
00dec     00 12 06 F6 | 	mov	arg03, #0
00df0     B4 10 B0 FD | 	call	#__system___basic_print_char
00df4     01 F4 05 F6 | 	mov	result1, #1
00df8     00 0E 06 F6 | 	mov	arg01, #0
00dfc     64 33 B0 FD | 	call	#__system___getiolock_0110
00e00     FA 00 68 FC | 	wrlong	#0, result1
00e04     00 F4 05 F6 | 	mov	result1, #0
00e08     00 0E 06 F6 | 	mov	arg01, #0
00e0c     54 33 B0 FD | 	call	#__system___getiolock_0110
00e10     FA 0E 02 F6 | 	mov	arg01, result1
00e14     68 0A B0 FD | 	call	#__system___lockmem
00e18     00 F4 05 F6 | 	mov	result1, #0
00e1c     00 1A 06 F6 | 	mov	local02, #0
00e20     08 E2 05 F1 | 	add	objptr, #8
00e24     F1 0E E2 FA | 	rdword	arg01, objptr
00e28     08 E2 85 F1 | 	sub	objptr, #8
00e2c     0F 0E 46 F7 | 	zerox	arg01, #15
00e30     04 10 06 F6 | 	mov	arg02, #4
00e34     10 12 06 F6 | 	mov	arg03, #16
00e38     70 16 B0 FD | 	call	#__system__Number_S
00e3c     FA 10 02 F6 | 	mov	arg02, result1
00e40     0D 0F 02 F6 | 	mov	arg01, local02
00e44     00 12 06 F6 | 	mov	arg03, #0
00e48     A8 10 B0 FD | 	call	#__system___basic_print_string
00e4c     00 0E 06 F6 | 	mov	arg01, #0
00e50     0A 10 06 F6 | 	mov	arg02, #10
00e54     00 12 06 F6 | 	mov	arg03, #0
00e58     4C 10 B0 FD | 	call	#__system___basic_print_char
00e5c     01 F4 05 F6 | 	mov	result1, #1
00e60     00 0E 06 F6 | 	mov	arg01, #0
00e64     FC 32 B0 FD | 	call	#__system___getiolock_0110
00e68     FA 00 68 FC | 	wrlong	#0, result1
00e6c     00 F4 05 F6 | 	mov	result1, #0
00e70                 | ' print ("offset:    "): print(hex$(offset,4))
00e70     00 0E 06 F6 | 	mov	arg01, #0
00e74     EC 32 B0 FD | 	call	#__system___getiolock_0110
00e78     FA 0E 02 F6 | 	mov	arg01, result1
00e7c     00 0A B0 FD | 	call	#__system___lockmem
00e80     00 F4 05 F6 | 	mov	result1, #0
00e84     68 00 00 FF 
00e88     DA 10 06 F6 | 	mov	arg02, ##@LR__0905
00e8c     00 0E 06 F6 | 	mov	arg01, #0
00e90     00 12 06 F6 | 	mov	arg03, #0
00e94     5C 10 B0 FD | 	call	#__system___basic_print_string
00e98     00 0E 06 F6 | 	mov	arg01, #0
00e9c     0A 10 06 F6 | 	mov	arg02, #10
00ea0     00 12 06 F6 | 	mov	arg03, #0
00ea4     00 10 B0 FD | 	call	#__system___basic_print_char
00ea8     01 F4 05 F6 | 	mov	result1, #1
00eac     00 0E 06 F6 | 	mov	arg01, #0
00eb0     B0 32 B0 FD | 	call	#__system___getiolock_0110
00eb4     FA 00 68 FC | 	wrlong	#0, result1
00eb8     00 F4 05 F6 | 	mov	result1, #0
00ebc     00 0E 06 F6 | 	mov	arg01, #0
00ec0     A0 32 B0 FD | 	call	#__system___getiolock_0110
00ec4     FA 0E 02 F6 | 	mov	arg01, result1
00ec8     B4 09 B0 FD | 	call	#__system___lockmem
00ecc     00 F4 05 F6 | 	mov	result1, #0
00ed0     00 1A 06 F6 | 	mov	local02, #0
00ed4     0A E2 05 F1 | 	add	objptr, #10
00ed8     F1 0E E2 FA | 	rdword	arg01, objptr
00edc     0A E2 85 F1 | 	sub	objptr, #10
00ee0     0F 0E 46 F7 | 	zerox	arg01, #15
00ee4     04 10 06 F6 | 	mov	arg02, #4
00ee8     10 12 06 F6 | 	mov	arg03, #16
00eec     BC 15 B0 FD | 	call	#__system__Number_S
00ef0     FA 10 02 F6 | 	mov	arg02, result1
00ef4     0D 0F 02 F6 | 	mov	arg01, local02
00ef8     00 12 06 F6 | 	mov	arg03, #0
00efc     F4 0F B0 FD | 	call	#__system___basic_print_string
00f00     00 0E 06 F6 | 	mov	arg01, #0
00f04     0A 10 06 F6 | 	mov	arg02, #10
00f08     00 12 06 F6 | 	mov	arg03, #0
00f0c     98 0F B0 FD | 	call	#__system___basic_print_char
00f10     01 F4 05 F6 | 	mov	result1, #1
00f14     00 0E 06 F6 | 	mov	arg01, #0
00f18     48 32 B0 FD | 	call	#__system___getiolock_0110
00f1c     FA 00 68 FC | 	wrlong	#0, result1
00f20     00 F4 05 F6 | 	mov	result1, #0
00f24                 | ' print ("load:      "): print(hex$(load,4))  '178-144*b);
00f24     00 0E 06 F6 | 	mov	arg01, #0
00f28     38 32 B0 FD | 	call	#__system___getiolock_0110
00f2c     FA 0E 02 F6 | 	mov	arg01, result1
00f30     4C 09 B0 FD | 	call	#__system___lockmem
00f34     00 F4 05 F6 | 	mov	result1, #0
00f38     68 00 00 FF 
00f3c     E6 10 06 F6 | 	mov	arg02, ##@LR__0906
00f40     00 0E 06 F6 | 	mov	arg01, #0
00f44     00 12 06 F6 | 	mov	arg03, #0
00f48     A8 0F B0 FD | 	call	#__system___basic_print_string
00f4c     00 0E 06 F6 | 	mov	arg01, #0
00f50     0A 10 06 F6 | 	mov	arg02, #10
00f54     00 12 06 F6 | 	mov	arg03, #0
00f58     4C 0F B0 FD | 	call	#__system___basic_print_char
00f5c     01 F4 05 F6 | 	mov	result1, #1
00f60     00 0E 06 F6 | 	mov	arg01, #0
00f64     FC 31 B0 FD | 	call	#__system___getiolock_0110
00f68     FA 00 68 FC | 	wrlong	#0, result1
00f6c     00 F4 05 F6 | 	mov	result1, #0
00f70     00 0E 06 F6 | 	mov	arg01, #0
00f74     EC 31 B0 FD | 	call	#__system___getiolock_0110
00f78     FA 0E 02 F6 | 	mov	arg01, result1
00f7c     00 09 B0 FD | 	call	#__system___lockmem
00f80     00 F4 05 F6 | 	mov	result1, #0
00f84     00 1A 06 F6 | 	mov	local02, #0
00f88     0C E2 05 F1 | 	add	objptr, #12
00f8c     F1 0E E2 FA | 	rdword	arg01, objptr
00f90     0C E2 85 F1 | 	sub	objptr, #12
00f94     0F 0E 46 F7 | 	zerox	arg01, #15
00f98     04 10 06 F6 | 	mov	arg02, #4
00f9c     10 12 06 F6 | 	mov	arg03, #16
00fa0     08 15 B0 FD | 	call	#__system__Number_S
00fa4     FA 10 02 F6 | 	mov	arg02, result1
00fa8     0D 0F 02 F6 | 	mov	arg01, local02
00fac     00 12 06 F6 | 	mov	arg03, #0
00fb0     40 0F B0 FD | 	call	#__system___basic_print_string
00fb4     00 0E 06 F6 | 	mov	arg01, #0
00fb8     0A 10 06 F6 | 	mov	arg02, #10
00fbc     00 12 06 F6 | 	mov	arg03, #0
00fc0     E4 0E B0 FD | 	call	#__system___basic_print_char
00fc4     01 F4 05 F6 | 	mov	result1, #1
00fc8     00 0E 06 F6 | 	mov	arg01, #0
00fcc     94 31 B0 FD | 	call	#__system___getiolock_0110
00fd0     FA 00 68 FC | 	wrlong	#0, result1
00fd4     00 F4 05 F6 | 	mov	result1, #0
00fd8                 | ' print ("init:      "): print(hex$(init,4))
00fd8     00 0E 06 F6 | 	mov	arg01, #0
00fdc     84 31 B0 FD | 	call	#__system___getiolock_0110
00fe0     FA 0E 02 F6 | 	mov	arg01, result1
00fe4     98 08 B0 FD | 	call	#__system___lockmem
00fe8     00 F4 05 F6 | 	mov	result1, #0
00fec     68 00 00 FF 
00ff0     F2 10 06 F6 | 	mov	arg02, ##@LR__0907
00ff4     00 0E 06 F6 | 	mov	arg01, #0
00ff8     00 12 06 F6 | 	mov	arg03, #0
00ffc     F4 0E B0 FD | 	call	#__system___basic_print_string
01000     00 0E 06 F6 | 	mov	arg01, #0
01004     0A 10 06 F6 | 	mov	arg02, #10
01008     00 12 06 F6 | 	mov	arg03, #0
0100c     98 0E B0 FD | 	call	#__system___basic_print_char
01010     01 F4 05 F6 | 	mov	result1, #1
01014     00 0E 06 F6 | 	mov	arg01, #0
01018     48 31 B0 FD | 	call	#__system___getiolock_0110
0101c     FA 00 68 FC | 	wrlong	#0, result1
01020     00 F4 05 F6 | 	mov	result1, #0
01024     00 0E 06 F6 | 	mov	arg01, #0
01028     38 31 B0 FD | 	call	#__system___getiolock_0110
0102c     FA 0E 02 F6 | 	mov	arg01, result1
01030     4C 08 B0 FD | 	call	#__system___lockmem
01034     00 F4 05 F6 | 	mov	result1, #0
01038     00 1A 06 F6 | 	mov	local02, #0
0103c     12 E2 05 F1 | 	add	objptr, #18
01040     F1 0E E2 FA | 	rdword	arg01, objptr
01044     12 E2 85 F1 | 	sub	objptr, #18
01048     0F 0E 46 F7 | 	zerox	arg01, #15
0104c     04 10 06 F6 | 	mov	arg02, #4
01050     10 12 06 F6 | 	mov	arg03, #16
01054     54 14 B0 FD | 	call	#__system__Number_S
01058     FA 10 02 F6 | 	mov	arg02, result1
0105c     0D 0F 02 F6 | 	mov	arg01, local02
01060     00 12 06 F6 | 	mov	arg03, #0
01064     8C 0E B0 FD | 	call	#__system___basic_print_string
01068     00 0E 06 F6 | 	mov	arg01, #0
0106c     0A 10 06 F6 | 	mov	arg02, #10
01070     00 12 06 F6 | 	mov	arg03, #0
01074     30 0E B0 FD | 	call	#__system___basic_print_char
01078     01 F4 05 F6 | 	mov	result1, #1
0107c     00 0E 06 F6 | 	mov	arg01, #0
01080     E0 30 B0 FD | 	call	#__system___getiolock_0110
01084     FA 00 68 FC | 	wrlong	#0, result1
01088     00 F4 05 F6 | 	mov	result1, #0
0108c                 | ' print ("play:      "): print(hex$(play,4))
0108c     00 0E 06 F6 | 	mov	arg01, #0
01090     D0 30 B0 FD | 	call	#__system___getiolock_0110
01094     FA 0E 02 F6 | 	mov	arg01, result1
01098     E4 07 B0 FD | 	call	#__system___lockmem
0109c     00 F4 05 F6 | 	mov	result1, #0
010a0     68 00 00 FF 
010a4     FE 10 06 F6 | 	mov	arg02, ##@LR__0908
010a8     00 0E 06 F6 | 	mov	arg01, #0
010ac     00 12 06 F6 | 	mov	arg03, #0
010b0     40 0E B0 FD | 	call	#__system___basic_print_string
010b4     00 0E 06 F6 | 	mov	arg01, #0
010b8     0A 10 06 F6 | 	mov	arg02, #10
010bc     00 12 06 F6 | 	mov	arg03, #0
010c0     E4 0D B0 FD | 	call	#__system___basic_print_char
010c4     01 F4 05 F6 | 	mov	result1, #1
010c8     00 0E 06 F6 | 	mov	arg01, #0
010cc     94 30 B0 FD | 	call	#__system___getiolock_0110
010d0     FA 00 68 FC | 	wrlong	#0, result1
010d4     00 F4 05 F6 | 	mov	result1, #0
010d8     00 0E 06 F6 | 	mov	arg01, #0
010dc     84 30 B0 FD | 	call	#__system___getiolock_0110
010e0     FA 0E 02 F6 | 	mov	arg01, result1
010e4     98 07 B0 FD | 	call	#__system___lockmem
010e8     00 F4 05 F6 | 	mov	result1, #0
010ec     00 1A 06 F6 | 	mov	local02, #0
010f0     14 E2 05 F1 | 	add	objptr, #20
010f4     F1 0E E2 FA | 	rdword	arg01, objptr
010f8     14 E2 85 F1 | 	sub	objptr, #20
010fc     0F 0E 46 F7 | 	zerox	arg01, #15
01100     04 10 06 F6 | 	mov	arg02, #4
01104     10 12 06 F6 | 	mov	arg03, #16
01108     A0 13 B0 FD | 	call	#__system__Number_S
0110c     FA 10 02 F6 | 	mov	arg02, result1
01110     0D 0F 02 F6 | 	mov	arg01, local02
01114     00 12 06 F6 | 	mov	arg03, #0
01118     D8 0D B0 FD | 	call	#__system___basic_print_string
0111c     00 0E 06 F6 | 	mov	arg01, #0
01120     0A 10 06 F6 | 	mov	arg02, #10
01124     00 12 06 F6 | 	mov	arg03, #0
01128     7C 0D B0 FD | 	call	#__system___basic_print_char
0112c     01 F4 05 F6 | 	mov	result1, #1
01130     00 0E 06 F6 | 	mov	arg01, #0
01134     2C 30 B0 FD | 	call	#__system___getiolock_0110
01138     FA 00 68 FC | 	wrlong	#0, result1
0113c     00 F4 05 F6 | 	mov	result1, #0
01140                 | ' print ("songs:     "): print(hex$(songs))
01140     00 0E 06 F6 | 	mov	arg01, #0
01144     1C 30 B0 FD | 	call	#__system___getiolock_0110
01148     FA 0E 02 F6 | 	mov	arg01, result1
0114c     30 07 B0 FD | 	call	#__system___lockmem
01150     00 F4 05 F6 | 	mov	result1, #0
01154     68 00 00 FF 
01158     0A 11 06 F6 | 	mov	arg02, ##@LR__0909
0115c     00 0E 06 F6 | 	mov	arg01, #0
01160     00 12 06 F6 | 	mov	arg03, #0
01164     8C 0D B0 FD | 	call	#__system___basic_print_string
01168     00 0E 06 F6 | 	mov	arg01, #0
0116c     0A 10 06 F6 | 	mov	arg02, #10
01170     00 12 06 F6 | 	mov	arg03, #0
01174     30 0D B0 FD | 	call	#__system___basic_print_char
01178     01 F4 05 F6 | 	mov	result1, #1
0117c     00 0E 06 F6 | 	mov	arg01, #0
01180     E0 2F B0 FD | 	call	#__system___getiolock_0110
01184     FA 00 68 FC | 	wrlong	#0, result1
01188     00 F4 05 F6 | 	mov	result1, #0
0118c     00 0E 06 F6 | 	mov	arg01, #0
01190     D0 2F B0 FD | 	call	#__system___getiolock_0110
01194     FA 0E 02 F6 | 	mov	arg01, result1
01198     E4 06 B0 FD | 	call	#__system___lockmem
0119c     00 F4 05 F6 | 	mov	result1, #0
011a0     00 1A 06 F6 | 	mov	local02, #0
011a4     16 E2 05 F1 | 	add	objptr, #22
011a8     F1 0E E2 FA | 	rdword	arg01, objptr
011ac     16 E2 85 F1 | 	sub	objptr, #22
011b0     0F 0E 46 F7 | 	zerox	arg01, #15
011b4     00 10 06 F6 | 	mov	arg02, #0
011b8     10 12 06 F6 | 	mov	arg03, #16
011bc     EC 12 B0 FD | 	call	#__system__Number_S
011c0     FA 10 02 F6 | 	mov	arg02, result1
011c4     0D 0F 02 F6 | 	mov	arg01, local02
011c8     00 12 06 F6 | 	mov	arg03, #0
011cc     24 0D B0 FD | 	call	#__system___basic_print_string
011d0     00 0E 06 F6 | 	mov	arg01, #0
011d4     0A 10 06 F6 | 	mov	arg02, #10
011d8     00 12 06 F6 | 	mov	arg03, #0
011dc     C8 0C B0 FD | 	call	#__system___basic_print_char
011e0     01 F4 05 F6 | 	mov	result1, #1
011e4     00 0E 06 F6 | 	mov	arg01, #0
011e8     78 2F B0 FD | 	call	#__system___getiolock_0110
011ec     FA 00 68 FC | 	wrlong	#0, result1
011f0     00 F4 05 F6 | 	mov	result1, #0
011f4                 | ' print ("startsong: "): print(hex$(startsong))
011f4     00 0E 06 F6 | 	mov	arg01, #0
011f8     68 2F B0 FD | 	call	#__system___getiolock_0110
011fc     FA 0E 02 F6 | 	mov	arg01, result1
01200     7C 06 B0 FD | 	call	#__system___lockmem
01204     00 F4 05 F6 | 	mov	result1, #0
01208     68 00 00 FF 
0120c     16 11 06 F6 | 	mov	arg02, ##@LR__0910
01210     00 0E 06 F6 | 	mov	arg01, #0
01214     00 12 06 F6 | 	mov	arg03, #0
01218     D8 0C B0 FD | 	call	#__system___basic_print_string
0121c     00 0E 06 F6 | 	mov	arg01, #0
01220     0A 10 06 F6 | 	mov	arg02, #10
01224     00 12 06 F6 | 	mov	arg03, #0
01228     7C 0C B0 FD | 	call	#__system___basic_print_char
0122c     01 F4 05 F6 | 	mov	result1, #1
01230     00 0E 06 F6 | 	mov	arg01, #0
01234     2C 2F B0 FD | 	call	#__system___getiolock_0110
01238     FA 00 68 FC | 	wrlong	#0, result1
0123c     00 F4 05 F6 | 	mov	result1, #0
01240     00 0E 06 F6 | 	mov	arg01, #0
01244     1C 2F B0 FD | 	call	#__system___getiolock_0110
01248     FA 0E 02 F6 | 	mov	arg01, result1
0124c     30 06 B0 FD | 	call	#__system___lockmem
01250     00 F4 05 F6 | 	mov	result1, #0
01254     00 1A 06 F6 | 	mov	local02, #0
01258     0E E2 05 F1 | 	add	objptr, #14
0125c     F1 0E E2 FA | 	rdword	arg01, objptr
01260     0E E2 85 F1 | 	sub	objptr, #14
01264     0F 0E 46 F7 | 	zerox	arg01, #15
01268     00 10 06 F6 | 	mov	arg02, #0
0126c     10 12 06 F6 | 	mov	arg03, #16
01270     38 12 B0 FD | 	call	#__system__Number_S
01274     FA 10 02 F6 | 	mov	arg02, result1
01278     0D 0F 02 F6 | 	mov	arg01, local02
0127c     00 12 06 F6 | 	mov	arg03, #0
01280     70 0C B0 FD | 	call	#__system___basic_print_string
01284     00 0E 06 F6 | 	mov	arg01, #0
01288     0A 10 06 F6 | 	mov	arg02, #10
0128c     00 12 06 F6 | 	mov	arg03, #0
01290     14 0C B0 FD | 	call	#__system___basic_print_char
01294     01 F4 05 F6 | 	mov	result1, #1
01298     00 0E 06 F6 | 	mov	arg01, #0
0129c     C4 2E B0 FD | 	call	#__system___getiolock_0110
012a0     FA 00 68 FC | 	wrlong	#0, result1
012a4     00 F4 05 F6 | 	mov	result1, #0
012a8                 | ' print ("speed:     "): print(hex$(speed,8))
012a8     00 0E 06 F6 | 	mov	arg01, #0
012ac     B4 2E B0 FD | 	call	#__system___getiolock_0110
012b0     FA 0E 02 F6 | 	mov	arg01, result1
012b4     C8 05 B0 FD | 	call	#__system___lockmem
012b8     00 F4 05 F6 | 	mov	result1, #0
012bc     68 00 00 FF 
012c0     22 11 06 F6 | 	mov	arg02, ##@LR__0911
012c4     00 0E 06 F6 | 	mov	arg01, #0
012c8     00 12 06 F6 | 	mov	arg03, #0
012cc     24 0C B0 FD | 	call	#__system___basic_print_string
012d0     00 0E 06 F6 | 	mov	arg01, #0
012d4     0A 10 06 F6 | 	mov	arg02, #10
012d8     00 12 06 F6 | 	mov	arg03, #0
012dc     C8 0B B0 FD | 	call	#__system___basic_print_char
012e0     01 F4 05 F6 | 	mov	result1, #1
012e4     00 0E 06 F6 | 	mov	arg01, #0
012e8     78 2E B0 FD | 	call	#__system___getiolock_0110
012ec     FA 00 68 FC | 	wrlong	#0, result1
012f0     00 F4 05 F6 | 	mov	result1, #0
012f4     00 0E 06 F6 | 	mov	arg01, #0
012f8     68 2E B0 FD | 	call	#__system___getiolock_0110
012fc     FA 0E 02 F6 | 	mov	arg01, result1
01300     7C 05 B0 FD | 	call	#__system___lockmem
01304     00 F4 05 F6 | 	mov	result1, #0
01308     00 1A 06 F6 | 	mov	local02, #0
0130c     F1 0E 02 FB | 	rdlong	arg01, objptr
01310     08 10 06 F6 | 	mov	arg02, #8
01314     10 12 06 F6 | 	mov	arg03, #16
01318     90 11 B0 FD | 	call	#__system__Number_S
0131c     FA 10 02 F6 | 	mov	arg02, result1
01320     0D 0F 02 F6 | 	mov	arg01, local02
01324     00 12 06 F6 | 	mov	arg03, #0
01328     C8 0B B0 FD | 	call	#__system___basic_print_string
0132c     00 0E 06 F6 | 	mov	arg01, #0
01330     0A 10 06 F6 | 	mov	arg02, #10
01334     00 12 06 F6 | 	mov	arg03, #0
01338     6C 0B B0 FD | 	call	#__system___basic_print_char
0133c     01 F4 05 F6 | 	mov	result1, #1
01340     00 0E 06 F6 | 	mov	arg01, #0
01344     1C 2E B0 FD | 	call	#__system___getiolock_0110
01348     FA 00 68 FC | 	wrlong	#0, result1
0134c     00 F4 05 F6 | 	mov	result1, #0
01350                 | ' print ("title:     "): print(atitle)
01350     00 0E 06 F6 | 	mov	arg01, #0
01354     0C 2E B0 FD | 	call	#__system___getiolock_0110
01358     FA 0E 02 F6 | 	mov	arg01, result1
0135c     20 05 B0 FD | 	call	#__system___lockmem
01360     00 F4 05 F6 | 	mov	result1, #0
01364     68 00 00 FF 
01368     2E 11 06 F6 | 	mov	arg02, ##@LR__0912
0136c     00 0E 06 F6 | 	mov	arg01, #0
01370     00 12 06 F6 | 	mov	arg03, #0
01374     7C 0B B0 FD | 	call	#__system___basic_print_string
01378     00 0E 06 F6 | 	mov	arg01, #0
0137c     0A 10 06 F6 | 	mov	arg02, #10
01380     00 12 06 F6 | 	mov	arg03, #0
01384     20 0B B0 FD | 	call	#__system___basic_print_char
01388     01 F4 05 F6 | 	mov	result1, #1
0138c     00 0E 06 F6 | 	mov	arg01, #0
01390     D0 2D B0 FD | 	call	#__system___getiolock_0110
01394     FA 00 68 FC | 	wrlong	#0, result1
01398     00 F4 05 F6 | 	mov	result1, #0
0139c     00 0E 06 F6 | 	mov	arg01, #0
013a0     C0 2D B0 FD | 	call	#__system___getiolock_0110
013a4     FA 0E 02 F6 | 	mov	arg01, result1
013a8     D4 04 B0 FD | 	call	#__system___lockmem
013ac     00 F4 05 F6 | 	mov	result1, #0
013b0     88 E2 05 F1 | 	add	objptr, #136
013b4     F1 10 02 FB | 	rdlong	arg02, objptr
013b8     88 E2 85 F1 | 	sub	objptr, #136
013bc     00 0E 06 F6 | 	mov	arg01, #0
013c0     00 12 06 F6 | 	mov	arg03, #0
013c4     2C 0B B0 FD | 	call	#__system___basic_print_string
013c8     00 0E 06 F6 | 	mov	arg01, #0
013cc     0A 10 06 F6 | 	mov	arg02, #10
013d0     00 12 06 F6 | 	mov	arg03, #0
013d4     D0 0A B0 FD | 	call	#__system___basic_print_char
013d8     01 F4 05 F6 | 	mov	result1, #1
013dc     00 0E 06 F6 | 	mov	arg01, #0
013e0     80 2D B0 FD | 	call	#__system___getiolock_0110
013e4     FA 00 68 FC | 	wrlong	#0, result1
013e8     00 F4 05 F6 | 	mov	result1, #0
013ec                 | ' print ("author:    "): print(author)
013ec     00 0E 06 F6 | 	mov	arg01, #0
013f0     70 2D B0 FD | 	call	#__system___getiolock_0110
013f4     FA 0E 02 F6 | 	mov	arg01, result1
013f8     84 04 B0 FD | 	call	#__system___lockmem
013fc     00 F4 05 F6 | 	mov	result1, #0
01400     68 00 00 FF 
01404     3A 11 06 F6 | 	mov	arg02, ##@LR__0913
01408     00 0E 06 F6 | 	mov	arg01, #0
0140c     00 12 06 F6 | 	mov	arg03, #0
01410     E0 0A B0 FD | 	call	#__system___basic_print_string
01414     00 0E 06 F6 | 	mov	arg01, #0
01418     0A 10 06 F6 | 	mov	arg02, #10
0141c     00 12 06 F6 | 	mov	arg03, #0
01420     84 0A B0 FD | 	call	#__system___basic_print_char
01424     01 F4 05 F6 | 	mov	result1, #1
01428     00 0E 06 F6 | 	mov	arg01, #0
0142c     34 2D B0 FD | 	call	#__system___getiolock_0110
01430     FA 00 68 FC | 	wrlong	#0, result1
01434     00 F4 05 F6 | 	mov	result1, #0
01438     00 0E 06 F6 | 	mov	arg01, #0
0143c     24 2D B0 FD | 	call	#__system___getiolock_0110
01440     FA 0E 02 F6 | 	mov	arg01, result1
01444     38 04 B0 FD | 	call	#__system___lockmem
01448     00 F4 05 F6 | 	mov	result1, #0
0144c     8C E2 05 F1 | 	add	objptr, #140
01450     F1 10 02 FB | 	rdlong	arg02, objptr
01454     8C E2 85 F1 | 	sub	objptr, #140
01458     00 0E 06 F6 | 	mov	arg01, #0
0145c     00 12 06 F6 | 	mov	arg03, #0
01460     90 0A B0 FD | 	call	#__system___basic_print_string
01464     00 0E 06 F6 | 	mov	arg01, #0
01468     0A 10 06 F6 | 	mov	arg02, #10
0146c     00 12 06 F6 | 	mov	arg03, #0
01470     34 0A B0 FD | 	call	#__system___basic_print_char
01474     01 F4 05 F6 | 	mov	result1, #1
01478     00 0E 06 F6 | 	mov	arg01, #0
0147c     E4 2C B0 FD | 	call	#__system___getiolock_0110
01480     FA 00 68 FC | 	wrlong	#0, result1
01484     00 F4 05 F6 | 	mov	result1, #0
01488                 | ' print ("copyright: "): print(copyright)
01488     00 0E 06 F6 | 	mov	arg01, #0
0148c     D4 2C B0 FD | 	call	#__system___getiolock_0110
01490     FA 0E 02 F6 | 	mov	arg01, result1
01494     E8 03 B0 FD | 	call	#__system___lockmem
01498     00 F4 05 F6 | 	mov	result1, #0
0149c     68 00 00 FF 
014a0     46 11 06 F6 | 	mov	arg02, ##@LR__0914
014a4     00 0E 06 F6 | 	mov	arg01, #0
014a8     00 12 06 F6 | 	mov	arg03, #0
014ac     44 0A B0 FD | 	call	#__system___basic_print_string
014b0     00 0E 06 F6 | 	mov	arg01, #0
014b4     0A 10 06 F6 | 	mov	arg02, #10
014b8     00 12 06 F6 | 	mov	arg03, #0
014bc     E8 09 B0 FD | 	call	#__system___basic_print_char
014c0     01 F4 05 F6 | 	mov	result1, #1
014c4     00 0E 06 F6 | 	mov	arg01, #0
014c8     98 2C B0 FD | 	call	#__system___getiolock_0110
014cc     FA 00 68 FC | 	wrlong	#0, result1
014d0     00 F4 05 F6 | 	mov	result1, #0
014d4     00 0E 06 F6 | 	mov	arg01, #0
014d8     88 2C B0 FD | 	call	#__system___getiolock_0110
014dc     FA 0E 02 F6 | 	mov	arg01, result1
014e0     9C 03 B0 FD | 	call	#__system___lockmem
014e4     00 F4 05 F6 | 	mov	result1, #0
014e8     90 E2 05 F1 | 	add	objptr, #144
014ec     F1 10 02 FB | 	rdlong	arg02, objptr
014f0     90 E2 85 F1 | 	sub	objptr, #144
014f4     00 0E 06 F6 | 	mov	arg01, #0
014f8     00 12 06 F6 | 	mov	arg03, #0
014fc     F4 09 B0 FD | 	call	#__system___basic_print_string
01500     00 0E 06 F6 | 	mov	arg01, #0
01504     0A 10 06 F6 | 	mov	arg02, #10
01508     00 12 06 F6 | 	mov	arg03, #0
0150c     98 09 B0 FD | 	call	#__system___basic_print_char
01510     01 F4 05 F6 | 	mov	result1, #1
01514     00 0E 06 F6 | 	mov	arg01, #0
01518     48 2C B0 FD | 	call	#__system___getiolock_0110
0151c     FA 00 68 FC | 	wrlong	#0, result1
01520     00 F4 05 F6 | 	mov	result1, #0
01524                 | ' print ("flags:     "): print(hex$(flags,4))
01524     00 0E 06 F6 | 	mov	arg01, #0
01528     38 2C B0 FD | 	call	#__system___getiolock_0110
0152c     FA 0E 02 F6 | 	mov	arg01, result1
01530     4C 03 B0 FD | 	call	#__system___lockmem
01534     00 F4 05 F6 | 	mov	result1, #0
01538     68 00 00 FF 
0153c     52 11 06 F6 | 	mov	arg02, ##@LR__0915
01540     00 0E 06 F6 | 	mov	arg01, #0
01544     00 12 06 F6 | 	mov	arg03, #0
01548     A8 09 B0 FD | 	call	#__system___basic_print_string
0154c     00 0E 06 F6 | 	mov	arg01, #0
01550     0A 10 06 F6 | 	mov	arg02, #10
01554     00 12 06 F6 | 	mov	arg03, #0
01558     4C 09 B0 FD | 	call	#__system___basic_print_char
0155c     01 F4 05 F6 | 	mov	result1, #1
01560     00 0E 06 F6 | 	mov	arg01, #0
01564     FC 2B B0 FD | 	call	#__system___getiolock_0110
01568     FA 00 68 FC | 	wrlong	#0, result1
0156c     00 F4 05 F6 | 	mov	result1, #0
01570     00 0E 06 F6 | 	mov	arg01, #0
01574     EC 2B B0 FD | 	call	#__system___getiolock_0110
01578     FA 0E 02 F6 | 	mov	arg01, result1
0157c     00 03 B0 FD | 	call	#__system___lockmem
01580     00 F4 05 F6 | 	mov	result1, #0
01584     00 1A 06 F6 | 	mov	local02, #0
01588     10 E2 05 F1 | 	add	objptr, #16
0158c     F1 0E E2 FA | 	rdword	arg01, objptr
01590     10 E2 85 F1 | 	sub	objptr, #16
01594     0F 0E 46 F7 | 	zerox	arg01, #15
01598     04 10 06 F6 | 	mov	arg02, #4
0159c     10 12 06 F6 | 	mov	arg03, #16
015a0     08 0F B0 FD | 	call	#__system__Number_S
015a4     FA 10 02 F6 | 	mov	arg02, result1
015a8     0D 0F 02 F6 | 	mov	arg01, local02
015ac     00 12 06 F6 | 	mov	arg03, #0
015b0     40 09 B0 FD | 	call	#__system___basic_print_string
015b4     00 0E 06 F6 | 	mov	arg01, #0
015b8     0A 10 06 F6 | 	mov	arg02, #10
015bc     00 12 06 F6 | 	mov	arg03, #0
015c0     E4 08 B0 FD | 	call	#__system___basic_print_char
015c4     01 F4 05 F6 | 	mov	result1, #1
015c8     00 0E 06 F6 | 	mov	arg01, #0
015cc     94 2B B0 FD | 	call	#__system___getiolock_0110
015d0     FA 00 68 FC | 	wrlong	#0, result1
015d4     00 F4 05 F6 | 	mov	result1, #0
015d8     A8 F0 03 F6 | 	mov	ptra, fp
015dc     B3 00 A0 FD | 	call	#popregs_
015e0                 | _program_ret
015e0     2D 00 64 FD | 	ret
015e4                 | hubexit
015e4     81 00 80 FD | 	jmp	#cogexit
015e8                 | 
015e8                 | __system___setbaud
015e8     14 6C 06 FB | 	rdlong	muldiva_, #20
015ec     07 6F 02 F6 | 	mov	muldivb_, arg01
015f0     BB 00 A0 FD | 	call	#divide_
015f4     40 7C 64 FD | 	dirl	#62
015f8     40 7E 64 FD | 	dirl	#63
015fc     F7 6E 62 FC | 	wrlong	muldivb_, ptr___system__dat__
01600     10 6E 66 F0 | 	shl	muldivb_, #16
01604     07 10 06 F6 | 	mov	arg02, #7
01608     37 11 02 F1 | 	add	arg02, muldivb_
0160c     3E F8 0C FC | 	wrpin	#124, #62
01610     3E 10 16 FC | 	wxpin	arg02, #62
01614     3F 7C 0C FC | 	wrpin	#62, #63
01618     14 10 06 F1 | 	add	arg02, #20
0161c     3F 10 16 FC | 	wxpin	arg02, #63
01620     41 7C 64 FD | 	dirh	#62
01624     41 7E 64 FD | 	dirh	#63
01628                 | __system___setbaud_ret
01628     2D 00 64 FD | 	ret
0162c                 | 
0162c                 | __system___txraw
0162c     02 4C 05 F6 | 	mov	COUNT_, #2
01630     A9 00 A0 FD | 	call	#pushregs_
01634     07 19 02 F6 | 	mov	local01, arg01
01638     F7 1A 0A FB | 	rdlong	local02, ptr___system__dat__ wz
0163c     0C 00 90 5D |  if_ne	jmp	#LR__0006
01640     C2 01 00 FF 
01644     00 0E 06 F6 | 	mov	arg01, ##230400
01648     9C FF BF FD | 	call	#__system___setbaud
0164c                 | LR__0006
0164c     3E 18 26 FC | 	wypin	local01, #62
01650     1F 02 64 FD | 	waitx	#1
01654     B0 E9 9F FE | 	loc	pa,	#(@LR__0008-@LR__0007)
01658     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0165c                 | LR__0007
0165c     40 7C 74 FD | 	testp	#62 wc
01660     F8 FF 9F 3D |  if_ae	jmp	#LR__0007
01664                 | LR__0008
01664     01 F4 05 F6 | 	mov	result1, #1
01668     A8 F0 03 F6 | 	mov	ptra, fp
0166c     B3 00 A0 FD | 	call	#popregs_
01670                 | __system___txraw_ret
01670     2D 00 64 FD | 	ret
01674                 | 
01674                 | __system___rxraw
01674     0B 4C 05 F6 | 	mov	COUNT_, #11
01678     A9 00 A0 FD | 	call	#pushregs_
0167c     07 19 02 F6 | 	mov	local01, arg01
01680     F7 1A 0A FB | 	rdlong	local02, ptr___system__dat__ wz
01684     0C 00 90 5D |  if_ne	jmp	#LR__0009
01688     C2 01 00 FF 
0168c     00 0E 06 F6 | 	mov	arg01, ##230400
01690     54 FF BF FD | 	call	#__system___setbaud
01694                 | LR__0009
01694     00 18 0E F2 | 	cmp	local01, #0 wz
01698     18 00 90 AD |  if_e	jmp	#LR__0010
0169c     14 1C 06 FB | 	rdlong	local03, #20
016a0     0A 1C 46 F0 | 	shr	local03, #10
016a4     0E 19 02 FD | 	qmul	local01, local03
016a8     1A 1E 62 FD | 	getct	local04
016ac     18 20 62 FD | 	getqx	local05
016b0     10 1F 02 F1 | 	add	local04, local05
016b4                 | LR__0010
016b4     01 22 66 F6 | 	neg	local06, #1
016b8     00 24 06 F6 | 	mov	local07, #0
016bc     04 EE 05 F1 | 	add	ptr___system__dat__, #4
016c0     F7 26 02 FB | 	rdlong	local08, ptr___system__dat__
016c4     04 EE 85 F1 | 	sub	ptr___system__dat__, #4
016c8                 | LR__0011
016c8     08 26 16 F4 | 	testb	local08, #8 wc
016cc     09 26 76 F4 | 	testbn	local08, #9 andc
016d0     0A 26 46 F0 | 	shr	local08, #10
016d4     01 24 06 C6 |  if_b	mov	local07, #1
016d8     10 00 90 CD |  if_b	jmp	#LR__0012
016dc     40 7E 6C FD | 	testp	#63 wz
016e0     01 24 06 A6 |  if_e	mov	local07, #1
016e4     3F 26 8E AA |  if_e	rdpin	local08, #63
016e8     04 26 46 A0 |  if_e	shr	local08, #4
016ec                 | LR__0012
016ec     00 1A 06 F6 | 	mov	local02, #0
016f0     00 24 0E F2 | 	cmp	local07, #0 wz
016f4     01 1A 66 56 |  if_ne	neg	local02, #1
016f8     00 28 06 F6 | 	mov	local09, #0
016fc     00 1C 06 F6 | 	mov	local03, #0
01700     00 18 0E F2 | 	cmp	local01, #0 wz
01704     01 1C 66 56 |  if_ne	neg	local03, #1
01708     00 20 06 F6 | 	mov	local05, #0
0170c     00 2A 06 F6 | 	mov	local10, #0
01710     1A 2C 62 FD | 	getct	local11
01714     0F 2D 82 F1 | 	sub	local11, local04
01718     00 2C 56 F2 | 	cmps	local11, #0 wc
0171c     15 2B 22 C6 |  if_b	not	local10, local10
01720     00 2A 0E F2 | 	cmp	local10, #0 wz
01724     10 21 22 56 |  if_ne	not	local05, local05
01728     10 1D CA F7 | 	test	local03, local05 wz
0172c     14 29 22 56 |  if_ne	not	local09, local09
01730     14 1B 4A F5 | 	or	local02, local09 wz
01734     90 FF 9F AD |  if_e	jmp	#LR__0011
01738     00 24 0E F2 | 	cmp	local07, #0 wz
0173c     13 23 02 56 |  if_ne	mov	local06, local08
01740     FF 22 06 55 |  if_ne	and	local06, #255
01744     04 EE 05 F1 | 	add	ptr___system__dat__, #4
01748     F7 26 62 FC | 	wrlong	local08, ptr___system__dat__
0174c     04 EE 85 F1 | 	sub	ptr___system__dat__, #4
01750     11 F5 01 F6 | 	mov	result1, local06
01754     A8 F0 03 F6 | 	mov	ptra, fp
01758     B3 00 A0 FD | 	call	#popregs_
0175c                 | __system___rxraw_ret
0175c     2D 00 64 FD | 	ret
01760                 | 
01760                 | __system____builtin_memmove
01760     07 F9 01 F6 | 	mov	_var01, arg01
01764     08 0F 52 F2 | 	cmps	arg01, arg02 wc
01768     50 00 90 3D |  if_ae	jmp	#LR__0020
0176c     B0 E8 9F FE | 	loc	pa,	#(@LR__0014-@LR__0013)
01770     8C 00 A0 FD | 	call	#FCACHE_LOAD_
01774                 | LR__0013
01774     04 12 56 F2 | 	cmps	arg03, #4 wc
01778     18 00 90 CD |  if_b	jmp	#LR__0015
0177c     08 FB 01 FB | 	rdlong	_var02, arg02
01780     07 FB 61 FC | 	wrlong	_var02, arg01
01784     04 0E 06 F1 | 	add	arg01, #4
01788     04 10 06 F1 | 	add	arg02, #4
0178c     04 12 86 F1 | 	sub	arg03, #4
01790     E0 FF 9F FD | 	jmp	#LR__0013
01794                 | LR__0014
01794                 | LR__0015
01794     09 FD 09 F6 | 	mov	_var03, arg03 wz
01798     4C 00 90 AD |  if_e	jmp	#LR__0026
0179c     74 E8 9F FE | 	loc	pa,	#(@LR__0018-@LR__0016)
017a0     8C 00 A0 FD | 	call	#FCACHE_LOAD_
017a4                 | LR__0016
017a4     FE 08 D8 FC | 	rep	@LR__0019, _var03
017a8                 | LR__0017
017a8     08 FB C1 FA | 	rdbyte	_var02, arg02
017ac     07 FB 41 FC | 	wrbyte	_var02, arg01
017b0     01 0E 06 F1 | 	add	arg01, #1
017b4     01 10 06 F1 | 	add	arg02, #1
017b8                 | LR__0018
017b8                 | LR__0019
017b8     2C 00 90 FD | 	jmp	#LR__0026
017bc                 | LR__0020
017bc     09 0F 02 F1 | 	add	arg01, arg03
017c0     09 11 02 F1 | 	add	arg02, arg03
017c4     09 FF 09 F6 | 	mov	_var04, arg03 wz
017c8     1C 00 90 AD |  if_e	jmp	#LR__0025
017cc     44 E8 9F FE | 	loc	pa,	#(@LR__0023-@LR__0021)
017d0     8C 00 A0 FD | 	call	#FCACHE_LOAD_
017d4                 | LR__0021
017d4     FF 08 D8 FC | 	rep	@LR__0024, _var04
017d8                 | LR__0022
017d8     01 0E 86 F1 | 	sub	arg01, #1
017dc     01 10 86 F1 | 	sub	arg02, #1
017e0     08 FB C1 FA | 	rdbyte	_var02, arg02
017e4     07 FB 41 FC | 	wrbyte	_var02, arg01
017e8                 | LR__0023
017e8                 | LR__0024
017e8                 | LR__0025
017e8                 | LR__0026
017e8     FC F4 01 F6 | 	mov	result1, _var01
017ec                 | __system____builtin_memmove_ret
017ec     2D 00 64 FD | 	ret
017f0                 | 
017f0                 | __system____builtin_strcpy
017f0     07 F9 01 F6 | 	mov	_var01, arg01
017f4     1C E8 9F FE | 	loc	pa,	#(@LR__0028-@LR__0027)
017f8     8C 00 A0 FD | 	call	#FCACHE_LOAD_
017fc                 | LR__0027
017fc     08 FB C9 FA | 	rdbyte	_var02, arg02 wz
01800     07 FB 41 FC | 	wrbyte	_var02, arg01
01804     01 10 06 F1 | 	add	arg02, #1
01808     01 0E 06 F1 | 	add	arg01, #1
0180c     EC FF 9F 5D |  if_ne	jmp	#LR__0027
01810                 | LR__0028
01810     FC F4 01 F6 | 	mov	result1, _var01
01814                 | __system____builtin_strcpy_ret
01814     2D 00 64 FD | 	ret
01818                 | 
01818                 | __system____topofstack
01818     00 4C 05 F6 | 	mov	COUNT_, #0
0181c     A9 00 A0 FD | 	call	#pushregs_
01820     08 F0 07 F1 | 	add	ptra, #8
01824     04 50 05 F1 | 	add	fp, #4
01828     A8 0E 62 FC | 	wrlong	arg01, fp
0182c     A8 F4 01 F6 | 	mov	result1, fp
01830     04 50 85 F1 | 	sub	fp, #4
01834     A8 F0 03 F6 | 	mov	ptra, fp
01838     B3 00 A0 FD | 	call	#popregs_
0183c                 | __system____topofstack_ret
0183c     2D 00 64 FD | 	ret
01840                 | 
01840                 | __system___make_methodptr
01840     04 4C 05 F6 | 	mov	COUNT_, #4
01844     A9 00 A0 FD | 	call	#pushregs_
01848     07 19 02 F6 | 	mov	local01, arg01
0184c     08 1B 02 F6 | 	mov	local02, arg02
01850     08 0E 06 F6 | 	mov	arg01, #8
01854     08 10 B0 FD | 	call	#__system___gc_alloc_managed
01858     FA 1C 0A F6 | 	mov	local03, result1 wz
0185c     10 00 90 AD |  if_e	jmp	#LR__0029
01860     0E 19 62 FC | 	wrlong	local01, local03
01864     0E 1F 02 F6 | 	mov	local04, local03
01868     04 1E 06 F1 | 	add	local04, #4
0186c     0F 1B 62 FC | 	wrlong	local02, local04
01870                 | LR__0029
01870     0E F5 01 F6 | 	mov	result1, local03
01874     A8 F0 03 F6 | 	mov	ptra, fp
01878     B3 00 A0 FD | 	call	#popregs_
0187c                 | __system___make_methodptr_ret
0187c     2D 00 64 FD | 	ret
01880                 | 
01880                 | __system___lockmem
01880     02 4C 05 F6 | 	mov	COUNT_, #2
01884     A9 00 A0 FD | 	call	#pushregs_
01888     00 F4 05 F6 | 	mov	result1, #0
0188c     01 F4 61 FD | 	cogid	result1
01890     FA 18 02 F6 | 	mov	local01, result1
01894     00 19 06 F1 | 	add	local01, #256
01898                 | LR__0030
01898     07 1B 0A FB | 	rdlong	local02, arg01 wz
0189c     07 19 62 AC |  if_e	wrlong	local01, arg01
018a0     07 1B 02 AB |  if_e	rdlong	local02, arg01
018a4     07 1B 02 AB |  if_e	rdlong	local02, arg01
018a8     0C 1B 0A F2 | 	cmp	local02, local01 wz
018ac     E8 FF 9F 5D |  if_ne	jmp	#LR__0030
018b0     A8 F0 03 F6 | 	mov	ptra, fp
018b4     B3 00 A0 FD | 	call	#popregs_
018b8                 | __system___lockmem_ret
018b8     2D 00 64 FD | 	ret
018bc                 | 
018bc                 | __system___string_concat
018bc     07 4C 05 F6 | 	mov	COUNT_, #7
018c0     A9 00 A0 FD | 	call	#pushregs_
018c4     07 19 02 F6 | 	mov	local01, arg01
018c8     08 1B 02 F6 | 	mov	local02, arg02
018cc     0C 0F 02 F6 | 	mov	arg01, local01
018d0     00 1C 06 F6 | 	mov	local03, #0
018d4     38 E7 9F FE | 	loc	pa,	#(@LR__0032-@LR__0031)
018d8     8C 00 A0 FD | 	call	#FCACHE_LOAD_
018dc                 | LR__0031
018dc     07 1F CA FA | 	rdbyte	local04, arg01 wz
018e0     01 1C 06 51 |  if_ne	add	local03, #1
018e4     01 0E 06 51 |  if_ne	add	arg01, #1
018e8     F0 FF 9F 5D |  if_ne	jmp	#LR__0031
018ec                 | LR__0032
018ec     0E 21 02 F6 | 	mov	local05, local03
018f0     0D 0F 02 F6 | 	mov	arg01, local02
018f4     00 1C 06 F6 | 	mov	local03, #0
018f8     14 E7 9F FE | 	loc	pa,	#(@LR__0034-@LR__0033)
018fc     8C 00 A0 FD | 	call	#FCACHE_LOAD_
01900                 | LR__0033
01900     07 1F CA FA | 	rdbyte	local04, arg01 wz
01904     01 1C 06 51 |  if_ne	add	local03, #1
01908     01 0E 06 51 |  if_ne	add	arg01, #1
0190c     F0 FF 9F 5D |  if_ne	jmp	#LR__0033
01910                 | LR__0034
01910     0E F5 01 F6 | 	mov	result1, local03
01914     FA 22 02 F6 | 	mov	local06, result1
01918     10 0F 02 F6 | 	mov	arg01, local05
0191c     11 0F 02 F1 | 	add	arg01, local06
01920     01 0E 06 F1 | 	add	arg01, #1
01924     38 0F B0 FD | 	call	#__system___gc_alloc_managed
01928     FA 24 0A F6 | 	mov	local07, result1 wz
0192c     28 00 90 AD |  if_e	jmp	#LR__0035
01930     12 0F 02 F6 | 	mov	arg01, local07
01934     0C 11 02 F6 | 	mov	arg02, local01
01938     10 13 02 F6 | 	mov	arg03, local05
0193c     20 FE BF FD | 	call	#__system____builtin_memmove
01940     12 0F 02 F6 | 	mov	arg01, local07
01944     10 0F 02 F1 | 	add	arg01, local05
01948     01 22 06 F1 | 	add	local06, #1
0194c     0D 11 02 F6 | 	mov	arg02, local02
01950     11 13 02 F6 | 	mov	arg03, local06
01954     08 FE BF FD | 	call	#__system____builtin_memmove
01958                 | LR__0035
01958     12 F5 01 F6 | 	mov	result1, local07
0195c     A8 F0 03 F6 | 	mov	ptra, fp
01960     B3 00 A0 FD | 	call	#popregs_
01964                 | __system___string_concat_ret
01964     2D 00 64 FD | 	ret
01968                 | 
01968                 | __system___tx
01968     03 4C 05 F6 | 	mov	COUNT_, #3
0196c     A9 00 A0 FD | 	call	#pushregs_
01970     07 19 02 F6 | 	mov	local01, arg01
01974     0A 18 0E F2 | 	cmp	local01, #10 wz
01978     20 00 90 5D |  if_ne	jmp	#LR__0036
0197c     08 EE 05 F1 | 	add	ptr___system__dat__, #8
01980     F7 1A 02 FB | 	rdlong	local02, ptr___system__dat__
01984     08 EE 85 F1 | 	sub	ptr___system__dat__, #8
01988     0D 1D 02 F6 | 	mov	local03, local02
0198c     02 1C 0E F5 | 	and	local03, #2 wz
01990     08 00 90 AD |  if_e	jmp	#LR__0036
01994     0D 0E 06 F6 | 	mov	arg01, #13
01998     90 FC BF FD | 	call	#__system___txraw
0199c                 | LR__0036
0199c     0C 0F 02 F6 | 	mov	arg01, local01
019a0     88 FC BF FD | 	call	#__system___txraw
019a4     A8 F0 03 F6 | 	mov	ptra, fp
019a8     B3 00 A0 FD | 	call	#popregs_
019ac                 | __system___tx_ret
019ac     2D 00 64 FD | 	ret
019b0                 | 
019b0                 | __system___rx
019b0     02 4C 05 F6 | 	mov	COUNT_, #2
019b4     A9 00 A0 FD | 	call	#pushregs_
019b8                 | LR__0037
019b8     00 0E 06 F6 | 	mov	arg01, #0
019bc     B4 FC BF FD | 	call	#__system___rxraw
019c0     FA 18 02 F6 | 	mov	local01, result1
019c4     FF FF 7F FF 
019c8     FF 19 0E F2 | 	cmp	local01, ##-1 wz
019cc     E8 FF 9F AD |  if_e	jmp	#LR__0037
019d0     0D 18 0E F2 | 	cmp	local01, #13 wz
019d4     14 00 90 5D |  if_ne	jmp	#LR__0038
019d8     08 EE 05 F1 | 	add	ptr___system__dat__, #8
019dc     F7 1A 02 FB | 	rdlong	local02, ptr___system__dat__
019e0     08 EE 85 F1 | 	sub	ptr___system__dat__, #8
019e4     02 1A CE F7 | 	test	local02, #2 wz
019e8     0A 18 06 56 |  if_ne	mov	local01, #10
019ec                 | LR__0038
019ec     08 EE 05 F1 | 	add	ptr___system__dat__, #8
019f0     F7 1A 02 FB | 	rdlong	local02, ptr___system__dat__
019f4     08 EE 85 F1 | 	sub	ptr___system__dat__, #8
019f8     01 1A CE F7 | 	test	local02, #1 wz
019fc     1C 00 90 AD |  if_e	jmp	#LR__0041
01a00     7F 18 0E F2 | 	cmp	local01, #127 wz
01a04     0C 00 90 5D |  if_ne	jmp	#LR__0039
01a08     08 0E 06 F6 | 	mov	arg01, #8
01a0c     58 FF BF FD | 	call	#__system___tx
01a10     08 00 90 FD | 	jmp	#LR__0040
01a14                 | LR__0039
01a14     0C 0F 02 F6 | 	mov	arg01, local01
01a18     4C FF BF FD | 	call	#__system___tx
01a1c                 | LR__0040
01a1c                 | LR__0041
01a1c     0C F5 01 F6 | 	mov	result1, local01
01a20     A8 F0 03 F6 | 	mov	ptra, fp
01a24     B3 00 A0 FD | 	call	#popregs_
01a28                 | __system___rx_ret
01a28     2D 00 64 FD | 	ret
01a2c                 | 
01a2c                 | __system___waitus
01a2c     04 4C 05 F6 | 	mov	COUNT_, #4
01a30     A9 00 A0 FD | 	call	#pushregs_
01a34     07 19 02 F6 | 	mov	local01, arg01
01a38     10 EE 05 F1 | 	add	ptr___system__dat__, #16
01a3c     F7 1A 0A FB | 	rdlong	local02, ptr___system__dat__ wz
01a40     10 EE 85 F1 | 	sub	ptr___system__dat__, #16
01a44     20 00 90 5D |  if_ne	jmp	#LR__0042
01a48     14 1C 06 FB | 	rdlong	local03, #20
01a4c     A1 07 00 FF 
01a50     40 1C 16 FD | 	qdiv	local03, ##1000000
01a54     10 EE 05 F1 | 	add	ptr___system__dat__, #16
01a58     18 1E 62 FD | 	getqx	local04
01a5c     0F 1B 02 F6 | 	mov	local02, local04
01a60     F7 1E 62 FC | 	wrlong	local04, ptr___system__dat__
01a64     10 EE 85 F1 | 	sub	ptr___system__dat__, #16
01a68                 | LR__0042
01a68     0D 19 02 FD | 	qmul	local01, local02
01a6c     18 0E 62 FD | 	getqx	arg01
01a70     1F 0E 62 FD | 	waitx	arg01
01a74     A8 F0 03 F6 | 	mov	ptra, fp
01a78     B3 00 A0 FD | 	call	#popregs_
01a7c                 | __system___waitus_ret
01a7c     2D 00 64 FD | 	ret
01a80                 | 
01a80                 | __system___mount
01a80     0B 4C 05 F6 | 	mov	COUNT_, #11
01a84     A9 00 A0 FD | 	call	#pushregs_
01a88     07 19 02 F6 | 	mov	local01, arg01
01a8c     08 1B 02 F6 | 	mov	local02, arg02
01a90     01 1C 66 F6 | 	neg	local03, #1
01a94     0C 1F C2 FA | 	rdbyte	local04, local01
01a98     2F 1E 0E F2 | 	cmp	local04, #47 wz
01a9c     14 00 90 AD |  if_e	jmp	#LR__0043
01aa0     1C EE 05 F1 | 	add	ptr___system__dat__, #28
01aa4     F7 14 68 FC | 	wrlong	#10, ptr___system__dat__
01aa8     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
01aac     01 F4 65 F6 | 	neg	result1, #1
01ab0     30 01 90 FD | 	jmp	#LR__0054
01ab4                 | LR__0043
01ab4     00 20 06 F6 | 	mov	local05, #0
01ab8                 | LR__0044
01ab8     04 20 56 F2 | 	cmps	local05, #4 wc
01abc     B0 00 90 3D |  if_ae	jmp	#LR__0050
01ac0     10 1F 02 F6 | 	mov	local04, local05
01ac4     02 1E 66 F0 | 	shl	local04, #2
01ac8     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01acc     F7 1E 02 F1 | 	add	local04, ptr___system__dat__
01ad0     0F 23 0A FB | 	rdlong	local06, local04 wz
01ad4     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01ad8     0C 00 90 5D |  if_ne	jmp	#LR__0045
01adc     00 1C 56 F2 | 	cmps	local03, #0 wc
01ae0     10 1D 02 C6 |  if_b	mov	local03, local05
01ae4     80 00 90 CD |  if_b	jmp	#LR__0049
01ae8                 | LR__0045
01ae8     10 25 02 F6 | 	mov	local07, local05
01aec     02 24 66 F0 | 	shl	local07, #2
01af0     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01af4     F7 24 02 F1 | 	add	local07, ptr___system__dat__
01af8     12 0F 02 FB | 	rdlong	arg01, local07
01afc     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01b00     00 26 06 F6 | 	mov	local08, #0
01b04     08 E5 9F FE | 	loc	pa,	#(@LR__0047-@LR__0046)
01b08     8C 00 A0 FD | 	call	#FCACHE_LOAD_
01b0c                 | LR__0046
01b0c     07 29 CA FA | 	rdbyte	local09, arg01 wz
01b10     01 26 06 51 |  if_ne	add	local08, #1
01b14     01 0E 06 51 |  if_ne	add	arg01, #1
01b18     F0 FF 9F 5D |  if_ne	jmp	#LR__0046
01b1c                 | LR__0047
01b1c     13 F5 01 F6 | 	mov	result1, local08
01b20     FA 2A 02 F6 | 	mov	local10, result1
01b24     15 25 02 F6 | 	mov	local07, local10
01b28     0C 25 02 F1 | 	add	local07, local01
01b2c     12 1F C2 FA | 	rdbyte	local04, local07
01b30     2F 1E 0E F2 | 	cmp	local04, #47 wz
01b34     30 00 90 5D |  if_ne	jmp	#LR__0048
01b38     10 2D 02 F6 | 	mov	local11, local05
01b3c     02 2C 66 F0 | 	shl	local11, #2
01b40     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01b44     F7 2C 02 F1 | 	add	local11, ptr___system__dat__
01b48     16 11 02 FB | 	rdlong	arg02, local11
01b4c     15 13 02 F6 | 	mov	arg03, local10
01b50     0C 0F 02 F6 | 	mov	arg01, local01
01b54     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01b58     7C 23 B0 FD | 	call	#__system__strncmp
01b5c     00 F4 0D F2 | 	cmp	result1, #0 wz
01b60     10 1D 02 A6 |  if_e	mov	local03, local05
01b64     08 00 90 AD |  if_e	jmp	#LR__0050
01b68                 | LR__0048
01b68                 | LR__0049
01b68     01 20 06 F1 | 	add	local05, #1
01b6c     48 FF 9F FD | 	jmp	#LR__0044
01b70                 | LR__0050
01b70     FF FF 7F FF 
01b74     FF 1D 0E F2 | 	cmp	local03, ##-1 wz
01b78     14 00 90 5D |  if_ne	jmp	#LR__0051
01b7c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
01b80     F7 16 68 FC | 	wrlong	#11, ptr___system__dat__
01b84     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
01b88     01 F4 65 F6 | 	neg	result1, #1
01b8c     54 00 90 FD | 	jmp	#LR__0054
01b90                 | LR__0051
01b90     0E 21 02 F6 | 	mov	local05, local03
01b94     10 1F 02 F6 | 	mov	local04, local05
01b98     02 1E 66 F0 | 	shl	local04, #2
01b9c     30 EE 05 F1 | 	add	ptr___system__dat__, #48
01ba0     F7 1E 02 F1 | 	add	local04, ptr___system__dat__
01ba4     0F 1B 62 FC | 	wrlong	local02, local04
01ba8     00 1A 0E F2 | 	cmp	local02, #0 wz
01bac     30 EE 85 F1 | 	sub	ptr___system__dat__, #48
01bb0     18 00 90 5D |  if_ne	jmp	#LR__0052
01bb4     02 20 66 F0 | 	shl	local05, #2
01bb8     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01bbc     F7 20 02 F1 | 	add	local05, ptr___system__dat__
01bc0     10 01 68 FC | 	wrlong	#0, local05
01bc4     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01bc8     14 00 90 FD | 	jmp	#LR__0053
01bcc                 | LR__0052
01bcc     02 20 66 F0 | 	shl	local05, #2
01bd0     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01bd4     F7 20 02 F1 | 	add	local05, ptr___system__dat__
01bd8     10 19 62 FC | 	wrlong	local01, local05
01bdc     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01be0                 | LR__0053
01be0     00 F4 05 F6 | 	mov	result1, #0
01be4                 | LR__0054
01be4     A8 F0 03 F6 | 	mov	ptra, fp
01be8     B3 00 A0 FD | 	call	#popregs_
01bec                 | __system___mount_ret
01bec     2D 00 64 FD | 	ret
01bf0                 | 
01bf0                 | __system____getvfsforfile
01bf0     10 4C 05 F6 | 	mov	COUNT_, #16
01bf4     A9 00 A0 FD | 	call	#pushregs_
01bf8     07 19 02 F6 | 	mov	local01, arg01
01bfc     08 1B 02 F6 | 	mov	local02, arg02
01c00     09 1D 02 F6 | 	mov	local03, arg03
01c04     0D 1F C2 FA | 	rdbyte	local04, local02
01c08     2F 1E 0E F2 | 	cmp	local04, #47 wz
01c0c     14 00 90 5D |  if_ne	jmp	#LR__0055
01c10     0C 0F 02 F6 | 	mov	arg01, local01
01c14     0D 11 02 F6 | 	mov	arg02, local02
01c18     00 13 06 F6 | 	mov	arg03, #256
01c1c     E8 21 B0 FD | 	call	#__system__strncpy
01c20     68 00 90 FD | 	jmp	#LR__0058
01c24                 | LR__0055
01c24     40 EE 05 F1 | 	add	ptr___system__dat__, #64
01c28     F7 10 02 F6 | 	mov	arg02, ptr___system__dat__
01c2c     40 EE 85 F1 | 	sub	ptr___system__dat__, #64
01c30     0C 0F 02 F6 | 	mov	arg01, local01
01c34     00 13 06 F6 | 	mov	arg03, #256
01c38     CC 21 B0 FD | 	call	#__system__strncpy
01c3c     0D 1F CA FA | 	rdbyte	local04, local02 wz
01c40     48 00 90 AD |  if_e	jmp	#LR__0057
01c44     0D 21 C2 FA | 	rdbyte	local05, local02
01c48     2E 20 0E F2 | 	cmp	local05, #46 wz
01c4c     18 00 90 5D |  if_ne	jmp	#LR__0056
01c50     01 1A 06 F1 | 	add	local02, #1
01c54     0D 23 C2 FA | 	rdbyte	local06, local02
01c58     01 1A 86 F1 | 	sub	local02, #1
01c5c     11 25 02 F6 | 	mov	local07, local06
01c60     07 24 4E F7 | 	zerox	local07, #7 wz
01c64     24 00 90 AD |  if_e	jmp	#LR__0057
01c68                 | LR__0056
01c68     68 00 00 FF 
01c6c     1C 10 06 F6 | 	mov	arg02, ##@LR__0888
01c70     0C 0F 02 F6 | 	mov	arg01, local01
01c74     00 13 06 F6 | 	mov	arg03, #256
01c78     D8 21 B0 FD | 	call	#__system__strncat
01c7c     0C 0F 02 F6 | 	mov	arg01, local01
01c80     0D 11 02 F6 | 	mov	arg02, local02
01c84     00 13 06 F6 | 	mov	arg03, #256
01c88     C8 21 B0 FD | 	call	#__system__strncat
01c8c                 | LR__0057
01c8c                 | LR__0058
01c8c     00 26 06 F6 | 	mov	local08, #0
01c90                 | LR__0059
01c90     04 26 56 F2 | 	cmps	local08, #4 wc
01c94     50 01 90 3D |  if_ae	jmp	#LR__0070
01c98     13 1F 02 F6 | 	mov	local04, local08
01c9c     02 1E 66 F0 | 	shl	local04, #2
01ca0     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01ca4     F7 1E 02 F1 | 	add	local04, ptr___system__dat__
01ca8     0F 25 0A FB | 	rdlong	local07, local04 wz
01cac     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01cb0     2C 01 90 AD |  if_e	jmp	#LR__0069
01cb4     13 21 02 F6 | 	mov	local05, local08
01cb8     02 20 66 F0 | 	shl	local05, #2
01cbc     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01cc0     F7 20 02 F1 | 	add	local05, ptr___system__dat__
01cc4     10 0F 02 FB | 	rdlong	arg01, local05
01cc8     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01ccc     00 28 06 F6 | 	mov	local09, #0
01cd0     3C E3 9F FE | 	loc	pa,	#(@LR__0061-@LR__0060)
01cd4     8C 00 A0 FD | 	call	#FCACHE_LOAD_
01cd8                 | LR__0060
01cd8     07 2B CA FA | 	rdbyte	local10, arg01 wz
01cdc     01 28 06 51 |  if_ne	add	local09, #1
01ce0     01 0E 06 51 |  if_ne	add	arg01, #1
01ce4     F0 FF 9F 5D |  if_ne	jmp	#LR__0060
01ce8                 | LR__0061
01ce8     14 F5 01 F6 | 	mov	result1, local09
01cec     FA 2C 02 F6 | 	mov	local11, result1
01cf0     16 21 02 F6 | 	mov	local05, local11
01cf4     0C 21 02 F1 | 	add	local05, local01
01cf8     10 1F C2 FA | 	rdbyte	local04, local05
01cfc     2F 1E 0E F2 | 	cmp	local04, #47 wz
01d00     10 00 90 AD |  if_e	jmp	#LR__0062
01d04     16 2F 02 F6 | 	mov	local12, local11
01d08     0C 2F 02 F1 | 	add	local12, local01
01d0c     17 23 CA FA | 	rdbyte	local06, local12 wz
01d10     CC 00 90 5D |  if_ne	jmp	#LR__0068
01d14                 | LR__0062
01d14     13 31 02 F6 | 	mov	local13, local08
01d18     02 30 66 F0 | 	shl	local13, #2
01d1c     20 EE 05 F1 | 	add	ptr___system__dat__, #32
01d20     F7 30 02 F1 | 	add	local13, ptr___system__dat__
01d24     18 11 02 FB | 	rdlong	arg02, local13
01d28     16 13 02 F6 | 	mov	arg03, local11
01d2c     0C 0F 02 F6 | 	mov	arg01, local01
01d30     20 EE 85 F1 | 	sub	ptr___system__dat__, #32
01d34     A0 21 B0 FD | 	call	#__system__strncmp
01d38     FA 32 0A F6 | 	mov	local14, result1 wz
01d3c     A0 00 90 5D |  if_ne	jmp	#LR__0068
01d40     13 1F 02 F6 | 	mov	local04, local08
01d44     02 1E 66 F0 | 	shl	local04, #2
01d48     30 EE 05 F1 | 	add	ptr___system__dat__, #48
01d4c     F7 1E 02 F1 | 	add	local04, ptr___system__dat__
01d50     0F 35 02 FB | 	rdlong	local15, local04
01d54     30 EE 85 F1 | 	sub	ptr___system__dat__, #48
01d58     F0 E2 9F FE | 	loc	pa,	#(@LR__0065-@LR__0063)
01d5c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
01d60                 | LR__0063
01d60     16 25 02 F6 | 	mov	local07, local11
01d64     01 24 06 F1 | 	add	local07, #1
01d68     0C 25 02 F1 | 	add	local07, local01
01d6c     12 1F C2 FA | 	rdbyte	local04, local07
01d70     2E 1E 0E F2 | 	cmp	local04, #46 wz
01d74     34 00 90 5D |  if_ne	jmp	#LR__0066
01d78     16 33 02 F6 | 	mov	local14, local11
01d7c     02 32 06 F1 | 	add	local14, #2
01d80     0C 33 02 F1 | 	add	local14, local01
01d84     19 2F C2 FA | 	rdbyte	local12, local14
01d88     2F 2E 0E F2 | 	cmp	local12, #47 wz
01d8c     14 00 90 AD |  if_e	jmp	#LR__0064
01d90     16 37 02 F6 | 	mov	local16, local11
01d94     02 36 06 F1 | 	add	local16, #2
01d98     0C 37 02 F1 | 	add	local16, local01
01d9c     1B 31 CA FA | 	rdbyte	local13, local16 wz
01da0     08 00 90 5D |  if_ne	jmp	#LR__0066
01da4                 | LR__0064
01da4     01 2C 06 F1 | 	add	local11, #1
01da8     B4 FF 9F FD | 	jmp	#LR__0063
01dac                 | LR__0065
01dac                 | LR__0066
01dac     00 1C 0E F2 | 	cmp	local03, #0 wz
01db0     10 00 90 AD |  if_e	jmp	#LR__0067
01db4     0E 0F 02 F6 | 	mov	arg01, local03
01db8     0C 11 02 F6 | 	mov	arg02, local01
01dbc     00 13 06 F6 | 	mov	arg03, #256
01dc0     44 20 B0 FD | 	call	#__system__strncpy
01dc4                 | LR__0067
01dc4     0C 0F 02 F6 | 	mov	arg01, local01
01dc8     0C 11 02 F6 | 	mov	arg02, local01
01dcc     16 11 02 F1 | 	add	arg02, local11
01dd0     01 10 06 F1 | 	add	arg02, #1
01dd4     18 FA BF FD | 	call	#__system____builtin_strcpy
01dd8     1A F5 01 F6 | 	mov	result1, local15
01ddc     1C 00 90 FD | 	jmp	#LR__0071
01de0                 | LR__0068
01de0                 | LR__0069
01de0     01 26 06 F1 | 	add	local08, #1
01de4     A8 FE 9F FD | 	jmp	#LR__0059
01de8                 | LR__0070
01de8     01 00 00 FF 
01dec     44 EE 05 F1 | 	add	ptr___system__dat__, ##580
01df0     F7 F4 01 FB | 	rdlong	result1, ptr___system__dat__
01df4     01 00 00 FF 
01df8     44 EE 85 F1 | 	sub	ptr___system__dat__, ##580
01dfc                 | LR__0071
01dfc     A8 F0 03 F6 | 	mov	ptra, fp
01e00     B3 00 A0 FD | 	call	#popregs_
01e04                 | __system____getvfsforfile_ret
01e04     2D 00 64 FD | 	ret
01e08                 | 
01e08                 | __system___basic_open_string
01e08     05 4C 05 F6 | 	mov	COUNT_, #5
01e0c     A9 00 A0 FD | 	call	#pushregs_
01e10     08 19 02 F6 | 	mov	local01, arg02
01e14     09 1B 02 F6 | 	mov	local02, arg03
01e18     B8 1F B0 FD | 	call	#__system____getftab
01e1c     FA 1C 0A F6 | 	mov	local03, result1 wz
01e20     18 00 90 5D |  if_ne	jmp	#LR__0072
01e24     EE 0E 02 F6 | 	mov	arg01, abortchain
01e28     0C 10 06 F6 | 	mov	arg02, #12
01e2c     01 12 06 F6 | 	mov	arg03, #1
01e30     DB 00 A0 FD | 	call	#__longjmp
01e34     01 F4 65 F6 | 	neg	result1, #1
01e38     60 00 90 FD | 	jmp	#LR__0075
01e3c                 | LR__0072
01e3c     08 1C 06 F1 | 	add	local03, #8
01e40     0E 1F 0A FB | 	rdlong	local04, local03 wz
01e44     08 1C 86 F1 | 	sub	local03, #8
01e48     08 00 90 AD |  if_e	jmp	#LR__0073
01e4c     0E 0F 02 F6 | 	mov	arg01, local03
01e50     64 15 B0 FD | 	call	#__system___closeraw
01e54                 | LR__0073
01e54     0C 11 02 F6 | 	mov	arg02, local01
01e58     0D 13 02 F6 | 	mov	arg03, local02
01e5c     0E 0F 02 F6 | 	mov	arg01, local03
01e60     B6 15 06 F6 | 	mov	arg04, #438
01e64     1C 10 B0 FD | 	call	#__system___openraw
01e68     FA 20 02 F6 | 	mov	local05, result1
01e6c     00 20 56 F2 | 	cmps	local05, #0 wc
01e70     24 00 90 3D |  if_ae	jmp	#LR__0074
01e74     1C EE 05 F1 | 	add	ptr___system__dat__, #28
01e78     F7 F4 01 FB | 	rdlong	result1, ptr___system__dat__
01e7c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
01e80     FA 10 02 F6 | 	mov	arg02, result1
01e84     EE 0E 02 F6 | 	mov	arg01, abortchain
01e88     01 12 06 F6 | 	mov	arg03, #1
01e8c     DB 00 A0 FD | 	call	#__longjmp
01e90     01 F4 65 F6 | 	neg	result1, #1
01e94     04 00 90 FD | 	jmp	#LR__0075
01e98                 | LR__0074
01e98     10 F5 01 F6 | 	mov	result1, local05
01e9c                 | LR__0075
01e9c     A8 F0 03 F6 | 	mov	ptra, fp
01ea0     B3 00 A0 FD | 	call	#popregs_
01ea4                 | __system___basic_open_string_ret
01ea4     2D 00 64 FD | 	ret
01ea8                 | 
01ea8                 | __system___basic_print_char
01ea8     05 4C 05 F6 | 	mov	COUNT_, #5
01eac     A9 00 A0 FD | 	call	#pushregs_
01eb0     08 19 02 F6 | 	mov	local01, arg02
01eb4     64 22 B0 FD | 	call	#__system___gettxfunc
01eb8     FA 1A 0A F6 | 	mov	local02, result1 wz
01ebc     00 F4 05 A6 |  if_e	mov	result1, #0
01ec0     24 00 90 AD |  if_e	jmp	#LR__0076
01ec4     0D 1D 02 FB | 	rdlong	local03, local02
01ec8     04 1A 06 F1 | 	add	local02, #4
01ecc     0D 1F 02 FB | 	rdlong	local04, local02
01ed0     0C 0F 02 F6 | 	mov	arg01, local01
01ed4     F1 20 02 F6 | 	mov	local05, objptr
01ed8     0E E3 01 F6 | 	mov	objptr, local03
01edc     2D 1E 62 FD | 	call	local04
01ee0     10 E3 01 F6 | 	mov	objptr, local05
01ee4     01 F4 05 F6 | 	mov	result1, #1
01ee8                 | LR__0076
01ee8     A8 F0 03 F6 | 	mov	ptra, fp
01eec     B3 00 A0 FD | 	call	#popregs_
01ef0                 | __system___basic_print_char_ret
01ef0     2D 00 64 FD | 	ret
01ef4                 | 
01ef4                 | __system___basic_print_string
01ef4     03 4C 05 F6 | 	mov	COUNT_, #3
01ef8     A9 00 A0 FD | 	call	#pushregs_
01efc     08 19 02 F6 | 	mov	local01, arg02
01f00     09 1B 02 F6 | 	mov	local02, arg03
01f04     14 22 B0 FD | 	call	#__system___gettxfunc
01f08     FA 1C 0A F6 | 	mov	local03, result1 wz
01f0c     00 F4 05 A6 |  if_e	mov	result1, #0
01f10     1C 00 90 AD |  if_e	jmp	#LR__0077
01f14     00 18 0E F2 | 	cmp	local01, #0 wz
01f18     00 F4 05 A6 |  if_e	mov	result1, #0
01f1c     10 00 90 AD |  if_e	jmp	#LR__0077
01f20     0D 11 02 F6 | 	mov	arg02, local02
01f24     0C 13 02 F6 | 	mov	arg03, local01
01f28     0E 0F 02 F6 | 	mov	arg01, local03
01f2c     24 01 B0 FD | 	call	#__system___fmtstr
01f30                 | LR__0077
01f30     A8 F0 03 F6 | 	mov	ptra, fp
01f34     B3 00 A0 FD | 	call	#popregs_
01f38                 | __system___basic_print_string_ret
01f38     2D 00 64 FD | 	ret
01f3c                 | 
01f3c                 | __system___basic_print_unsigned
01f3c     04 4C 05 F6 | 	mov	COUNT_, #4
01f40     A9 00 A0 FD | 	call	#pushregs_
01f44     08 19 02 F6 | 	mov	local01, arg02
01f48     09 1B 02 F6 | 	mov	local02, arg03
01f4c     0A 1D 02 F6 | 	mov	local03, arg04
01f50     C8 21 B0 FD | 	call	#__system___gettxfunc
01f54     FA 1E 0A F6 | 	mov	local04, result1 wz
01f58     00 F4 05 A6 |  if_e	mov	result1, #0
01f5c     18 00 90 AD |  if_e	jmp	#LR__0078
01f60     3A 1A 26 F4 | 	bith	local02, #58
01f64     0D 11 02 F6 | 	mov	arg02, local02
01f68     0C 13 02 F6 | 	mov	arg03, local01
01f6c     0E 15 02 F6 | 	mov	arg04, local03
01f70     0F 0F 02 F6 | 	mov	arg01, local04
01f74     D4 01 B0 FD | 	call	#__system___fmtnum
01f78                 | LR__0078
01f78     A8 F0 03 F6 | 	mov	ptra, fp
01f7c     B3 00 A0 FD | 	call	#popregs_
01f80                 | __system___basic_print_unsigned_ret
01f80     2D 00 64 FD | 	ret
01f84                 | 
01f84                 | __system___basic_get
01f84     05 4C 05 F6 | 	mov	COUNT_, #5
01f88     A9 00 A0 FD | 	call	#pushregs_
01f8c     0B 19 02 F6 | 	mov	local01, arg05
01f90     0C 15 02 FD | 	qmul	arg04, local01
01f94     07 1B 02 F6 | 	mov	local02, arg01
01f98     09 1D 02 F6 | 	mov	local03, arg03
01f9c     00 10 0E F2 | 	cmp	arg02, #0 wz
01fa0     18 1E 62 FD | 	getqx	local04
01fa4     10 00 90 AD |  if_e	jmp	#LR__0079
01fa8     01 10 86 F1 | 	sub	arg02, #1
01fac     0D 0F 02 F6 | 	mov	arg01, local02
01fb0     00 12 06 F6 | 	mov	arg03, #0
01fb4     60 1B B0 FD | 	call	#__system__lseek
01fb8                 | LR__0079
01fb8     0D 0F 02 F6 | 	mov	arg01, local02
01fbc     0E 11 02 F6 | 	mov	arg02, local03
01fc0     0F 13 02 F6 | 	mov	arg03, local04
01fc4     88 1A B0 FD | 	call	#__system__read
01fc8     FA 20 02 F6 | 	mov	local05, result1
01fcc     01 20 56 F2 | 	cmps	local05, #1 wc
01fd0     10 00 90 CD |  if_b	jmp	#LR__0080
01fd4     10 6D 02 F6 | 	mov	muldiva_, local05
01fd8     0C 6F 02 F6 | 	mov	muldivb_, local01
01fdc     BB 00 A0 FD | 	call	#divide_
01fe0     37 21 02 F6 | 	mov	local05, muldivb_
01fe4                 | LR__0080
01fe4     10 F5 01 F6 | 	mov	result1, local05
01fe8     A8 F0 03 F6 | 	mov	ptra, fp
01fec     B3 00 A0 FD | 	call	#popregs_
01ff0                 | __system___basic_get_ret
01ff0     2D 00 64 FD | 	ret
01ff4                 | 
01ff4                 | __system___fmtchar
01ff4     00 4C 05 F6 | 	mov	COUNT_, #0
01ff8     A9 00 A0 FD | 	call	#pushregs_
01ffc     14 F0 07 F1 | 	add	ptra, #20
02000     04 50 05 F1 | 	add	fp, #4
02004     A8 0E 62 FC | 	wrlong	arg01, fp
02008     04 50 05 F1 | 	add	fp, #4
0200c     A8 10 62 FC | 	wrlong	arg02, fp
02010     04 50 05 F1 | 	add	fp, #4
02014     A8 12 62 FC | 	wrlong	arg03, fp
02018     04 50 05 F1 | 	add	fp, #4
0201c     A8 12 42 FC | 	wrbyte	arg03, fp
02020     01 50 05 F1 | 	add	fp, #1
02024     A8 00 48 FC | 	wrbyte	#0, fp
02028     0D 50 85 F1 | 	sub	fp, #13
0202c     A8 0E 02 FB | 	rdlong	arg01, fp
02030     04 50 05 F1 | 	add	fp, #4
02034     A8 10 02 FB | 	rdlong	arg02, fp
02038     08 50 05 F1 | 	add	fp, #8
0203c     A8 12 02 F6 | 	mov	arg03, fp
02040     10 50 85 F1 | 	sub	fp, #16
02044     0C 00 B0 FD | 	call	#__system___fmtstr
02048     A8 F0 03 F6 | 	mov	ptra, fp
0204c     B3 00 A0 FD | 	call	#popregs_
02050                 | __system___fmtchar_ret
02050     2D 00 64 FD | 	ret
02054                 | 
02054                 | __system___fmtstr
02054     0E 4C 05 F6 | 	mov	COUNT_, #14
02058     A9 00 A0 FD | 	call	#pushregs_
0205c     07 19 02 F6 | 	mov	local01, arg01
02060     08 1B 02 F6 | 	mov	local02, arg02
02064     09 1D 02 F6 | 	mov	local03, arg03
02068     0D 1F 02 F6 | 	mov	local04, local02
0206c     FF 1E 06 F5 | 	and	local04, #255
02070     0E 0F 02 F6 | 	mov	arg01, local03
02074     00 20 06 F6 | 	mov	local05, #0
02078     94 DF 9F FE | 	loc	pa,	#(@LR__0082-@LR__0081)
0207c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
02080                 | LR__0081
02080     07 23 CA FA | 	rdbyte	local06, arg01 wz
02084     01 20 06 51 |  if_ne	add	local05, #1
02088     01 0E 06 51 |  if_ne	add	arg01, #1
0208c     F0 FF 9F 5D |  if_ne	jmp	#LR__0081
02090                 | LR__0082
02090     10 F5 01 F6 | 	mov	result1, local05
02094     FA 24 02 F6 | 	mov	local07, result1
02098     00 1E 0E F2 | 	cmp	local04, #0 wz
0209c     04 00 90 AD |  if_e	jmp	#LR__0083
020a0     0F 25 7A F3 | 	fles	local07, local04 wcz
020a4                 | LR__0083
020a4     0D 11 02 F6 | 	mov	arg02, local02
020a8     12 13 02 F6 | 	mov	arg03, local07
020ac     0C 0F 02 F6 | 	mov	arg01, local01
020b0     02 14 06 F6 | 	mov	arg04, #2
020b4     20 1F B0 FD | 	call	#__system___fmtpad
020b8     FA 26 02 F6 | 	mov	local08, result1
020bc     00 26 56 F2 | 	cmps	local08, #0 wc
020c0     13 F5 01 C6 |  if_b	mov	result1, local08
020c4     78 00 90 CD |  if_b	jmp	#LR__0086
020c8     00 28 06 F6 | 	mov	local09, #0
020cc                 | LR__0084
020cc     12 29 52 F2 | 	cmps	local09, local07 wc
020d0     44 00 90 3D |  if_ae	jmp	#LR__0085
020d4     0C 2B 02 F6 | 	mov	local10, local01
020d8     15 2D 02 FB | 	rdlong	local11, local10
020dc     04 2A 06 F1 | 	add	local10, #4
020e0     15 2F 02 FB | 	rdlong	local12, local10
020e4     0E 0F C2 FA | 	rdbyte	arg01, local03
020e8     F1 30 02 F6 | 	mov	local13, objptr
020ec     16 E3 01 F6 | 	mov	objptr, local11
020f0     01 1C 06 F1 | 	add	local03, #1
020f4     2D 2E 62 FD | 	call	local12
020f8     18 E3 01 F6 | 	mov	objptr, local13
020fc     FA 32 02 F6 | 	mov	local14, result1
02100     00 32 56 F2 | 	cmps	local14, #0 wc
02104     19 F5 01 C6 |  if_b	mov	result1, local14
02108     34 00 90 CD |  if_b	jmp	#LR__0086
0210c     19 27 02 F1 | 	add	local08, local14
02110     01 28 06 F1 | 	add	local09, #1
02114     B4 FF 9F FD | 	jmp	#LR__0084
02118                 | LR__0085
02118     0D 11 02 F6 | 	mov	arg02, local02
0211c     12 13 02 F6 | 	mov	arg03, local07
02120     0C 0F 02 F6 | 	mov	arg01, local01
02124     01 14 06 F6 | 	mov	arg04, #1
02128     AC 1E B0 FD | 	call	#__system___fmtpad
0212c     FA 32 02 F6 | 	mov	local14, result1
02130     00 32 56 F2 | 	cmps	local14, #0 wc
02134     19 F5 01 C6 |  if_b	mov	result1, local14
02138     19 27 02 31 |  if_ae	add	local08, local14
0213c     13 F5 01 36 |  if_ae	mov	result1, local08
02140                 | LR__0086
02140     A8 F0 03 F6 | 	mov	ptra, fp
02144     B3 00 A0 FD | 	call	#popregs_
02148                 | __system___fmtstr_ret
02148     2D 00 64 FD | 	ret
0214c                 | 
0214c                 | __system___fmtnum
0214c     06 4C 05 F6 | 	mov	COUNT_, #6
02150     A9 00 A0 FD | 	call	#pushregs_
02154     70 F0 07 F1 | 	add	ptra, #112
02158     04 50 05 F1 | 	add	fp, #4
0215c     A8 0E 62 FC | 	wrlong	arg01, fp
02160     04 50 05 F1 | 	add	fp, #4
02164     A8 10 62 FC | 	wrlong	arg02, fp
02168     04 50 05 F1 | 	add	fp, #4
0216c     A8 12 62 FC | 	wrlong	arg03, fp
02170     04 50 05 F1 | 	add	fp, #4
02174     A8 14 62 FC | 	wrlong	arg04, fp
02178     04 50 05 F1 | 	add	fp, #4
0217c     A8 18 02 F6 | 	mov	local01, fp
02180     44 50 05 F1 | 	add	fp, #68
02184     A8 18 62 FC | 	wrlong	local01, fp
02188     04 50 05 F1 | 	add	fp, #4
0218c     A8 00 68 FC | 	wrlong	#0, fp
02190     54 50 85 F1 | 	sub	fp, #84
02194     A8 18 02 FB | 	rdlong	local01, fp
02198     10 18 46 F0 | 	shr	local01, #16
0219c     3F 18 06 F5 | 	and	local01, #63
021a0     58 50 05 F1 | 	add	fp, #88
021a4     A8 18 62 FC | 	wrlong	local01, fp
021a8     58 50 85 F1 | 	sub	fp, #88
021ac     A8 18 02 FB | 	rdlong	local01, fp
021b0     FF 18 06 F5 | 	and	local01, #255
021b4     5C 50 05 F1 | 	add	fp, #92
021b8     A8 18 62 FC | 	wrlong	local01, fp
021bc     5C 50 85 F1 | 	sub	fp, #92
021c0     A8 18 02 FB | 	rdlong	local01, fp
021c4     1A 18 46 F0 | 	shr	local01, #26
021c8     03 18 06 F5 | 	and	local01, #3
021cc     60 50 05 F1 | 	add	fp, #96
021d0     A8 18 62 FC | 	wrlong	local01, fp
021d4     08 50 85 F1 | 	sub	fp, #8
021d8     A8 18 02 FB | 	rdlong	local01, fp
021dc     60 50 85 F1 | 	sub	fp, #96
021e0     01 18 56 F2 | 	cmps	local01, #1 wc
021e4     14 00 90 CD |  if_b	jmp	#LR__0087
021e8     60 50 05 F1 | 	add	fp, #96
021ec     A8 18 02 FB | 	rdlong	local01, fp
021f0     01 18 86 F1 | 	sub	local01, #1
021f4     A8 18 62 FC | 	wrlong	local01, fp
021f8     60 50 85 F1 | 	sub	fp, #96
021fc                 | LR__0087
021fc     64 50 05 F1 | 	add	fp, #100
02200     A8 18 02 FB | 	rdlong	local01, fp
02204     64 50 85 F1 | 	sub	fp, #100
02208     41 18 56 F2 | 	cmps	local01, #65 wc
0220c     14 00 90 3D |  if_ae	jmp	#LR__0088
02210     64 50 05 F1 | 	add	fp, #100
02214     A8 1A 02 FB | 	rdlong	local02, fp
02218     64 50 85 F1 | 	sub	fp, #100
0221c     0D 1D 0A F6 | 	mov	local03, local02 wz
02220     0C 00 90 5D |  if_ne	jmp	#LR__0089
02224                 | LR__0088
02224     64 50 05 F1 | 	add	fp, #100
02228     A8 80 68 FC | 	wrlong	#64, fp
0222c     64 50 85 F1 | 	sub	fp, #100
02230                 | LR__0089
02230     68 50 05 F1 | 	add	fp, #104
02234     A8 18 02 FB | 	rdlong	local01, fp
02238     68 50 85 F1 | 	sub	fp, #104
0223c     03 18 0E F2 | 	cmp	local01, #3 wz
02240     10 00 90 5D |  if_ne	jmp	#LR__0090
02244     68 50 05 F1 | 	add	fp, #104
02248     A8 00 68 FC | 	wrlong	#0, fp
0224c     68 50 85 F1 | 	sub	fp, #104
02250     30 00 90 FD | 	jmp	#LR__0092
02254                 | LR__0090
02254     0C 50 05 F1 | 	add	fp, #12
02258     A8 18 02 FB | 	rdlong	local01, fp
0225c     0C 50 85 F1 | 	sub	fp, #12
02260     00 18 56 F2 | 	cmps	local01, #0 wc
02264     1C 00 90 3D |  if_ae	jmp	#LR__0091
02268     68 50 05 F1 | 	add	fp, #104
0226c     A8 08 68 FC | 	wrlong	#4, fp
02270     5C 50 85 F1 | 	sub	fp, #92
02274     A8 18 02 FB | 	rdlong	local01, fp
02278     0C 19 62 F6 | 	neg	local01, local01
0227c     A8 18 62 FC | 	wrlong	local01, fp
02280     0C 50 85 F1 | 	sub	fp, #12
02284                 | LR__0091
02284                 | LR__0092
02284     68 50 05 F1 | 	add	fp, #104
02288     A8 18 0A FB | 	rdlong	local01, fp wz
0228c     68 50 85 F1 | 	sub	fp, #104
02290     E8 00 90 AD |  if_e	jmp	#LR__0099
02294     5C 50 05 F1 | 	add	fp, #92
02298     A8 1C 02 FB | 	rdlong	local03, fp
0229c     01 1C 06 F1 | 	add	local03, #1
022a0     A8 1C 62 FC | 	wrlong	local03, fp
022a4     04 50 05 F1 | 	add	fp, #4
022a8     A8 18 02 FB | 	rdlong	local01, fp
022ac     04 50 05 F1 | 	add	fp, #4
022b0     A8 1C 02 FB | 	rdlong	local03, fp
022b4     64 50 85 F1 | 	sub	fp, #100
022b8     0E 19 0A F2 | 	cmp	local01, local03 wz
022bc     38 00 90 5D |  if_ne	jmp	#LR__0094
022c0     60 50 05 F1 | 	add	fp, #96
022c4     A8 18 02 FB | 	rdlong	local01, fp
022c8     01 18 8E F1 | 	sub	local01, #1 wz
022cc     A8 18 62 FC | 	wrlong	local01, fp
022d0     60 50 85 F1 | 	sub	fp, #96
022d4     20 00 90 5D |  if_ne	jmp	#LR__0093
022d8     04 50 05 F1 | 	add	fp, #4
022dc     A8 0E 02 FB | 	rdlong	arg01, fp
022e0     04 50 05 F1 | 	add	fp, #4
022e4     A8 10 02 FB | 	rdlong	arg02, fp
022e8     08 50 85 F1 | 	sub	fp, #8
022ec     23 12 06 F6 | 	mov	arg03, #35
022f0     00 FD BF FD | 	call	#__system___fmtchar
022f4     6C 01 90 FD | 	jmp	#LR__0104
022f8                 | LR__0093
022f8                 | LR__0094
022f8     68 50 05 F1 | 	add	fp, #104
022fc     A8 18 02 FB | 	rdlong	local01, fp
02300     68 50 85 F1 | 	sub	fp, #104
02304     02 18 0E F2 | 	cmp	local01, #2 wz
02308     20 00 90 5D |  if_ne	jmp	#LR__0095
0230c     58 50 05 F1 | 	add	fp, #88
02310     A8 1E 02 FB | 	rdlong	local04, fp
02314     0F 1D 02 F6 | 	mov	local03, local04
02318     01 1C 06 F1 | 	add	local03, #1
0231c     A8 1C 62 FC | 	wrlong	local03, fp
02320     58 50 85 F1 | 	sub	fp, #88
02324     0F 41 48 FC | 	wrbyte	#32, local04
02328     50 00 90 FD | 	jmp	#LR__0098
0232c                 | LR__0095
0232c     68 50 05 F1 | 	add	fp, #104
02330     A8 18 02 FB | 	rdlong	local01, fp
02334     68 50 85 F1 | 	sub	fp, #104
02338     04 18 0E F2 | 	cmp	local01, #4 wz
0233c     20 00 90 5D |  if_ne	jmp	#LR__0096
02340     58 50 05 F1 | 	add	fp, #88
02344     A8 1E 02 FB | 	rdlong	local04, fp
02348     0F 1D 02 F6 | 	mov	local03, local04
0234c     01 1C 06 F1 | 	add	local03, #1
02350     A8 1C 62 FC | 	wrlong	local03, fp
02354     58 50 85 F1 | 	sub	fp, #88
02358     0F 5B 48 FC | 	wrbyte	#45, local04
0235c     1C 00 90 FD | 	jmp	#LR__0097
02360                 | LR__0096
02360     58 50 05 F1 | 	add	fp, #88
02364     A8 1E 02 FB | 	rdlong	local04, fp
02368     0F 1D 02 F6 | 	mov	local03, local04
0236c     01 1C 06 F1 | 	add	local03, #1
02370     A8 1C 62 FC | 	wrlong	local03, fp
02374     58 50 85 F1 | 	sub	fp, #88
02378     0F 57 48 FC | 	wrbyte	#43, local04
0237c                 | LR__0097
0237c                 | LR__0098
0237c                 | LR__0099
0237c     58 50 05 F1 | 	add	fp, #88
02380     A8 0E 02 FB | 	rdlong	arg01, fp
02384     4C 50 85 F1 | 	sub	fp, #76
02388     A8 10 02 FB | 	rdlong	arg02, fp
0238c     04 50 05 F1 | 	add	fp, #4
02390     A8 12 02 FB | 	rdlong	arg03, fp
02394     50 50 05 F1 | 	add	fp, #80
02398     A8 14 02 FB | 	rdlong	arg04, fp
0239c     00 16 06 F6 | 	mov	arg05, #0
023a0     58 50 85 F1 | 	sub	fp, #88
023a4     A8 20 02 FB | 	rdlong	local05, fp
023a8     08 50 85 F1 | 	sub	fp, #8
023ac     1D 20 2E F4 | 	testbn	local05, #29 wz
023b0     01 16 06 56 |  if_ne	mov	arg05, #1
023b4     E4 1C B0 FD | 	call	#__system___uitoa
023b8     FA 22 02 F6 | 	mov	local06, result1
023bc     5C 50 05 F1 | 	add	fp, #92
023c0     A8 18 02 FB | 	rdlong	local01, fp
023c4     11 19 02 F1 | 	add	local01, local06
023c8     A8 18 62 FC | 	wrlong	local01, fp
023cc     08 50 05 F1 | 	add	fp, #8
023d0     A8 1C 02 FB | 	rdlong	local03, fp
023d4     64 50 85 F1 | 	sub	fp, #100
023d8     0E 19 5A F2 | 	cmps	local01, local03 wcz
023dc     64 00 90 ED |  if_be	jmp	#LR__0103
023e0     5C DC 9F FE | 	loc	pa,	#(@LR__0101-@LR__0100)
023e4     8C 00 A0 FD | 	call	#FCACHE_LOAD_
023e8                 | LR__0100
023e8     64 50 05 F1 | 	add	fp, #100
023ec     A8 1E 02 FB | 	rdlong	local04, fp
023f0     0F 1D 02 F6 | 	mov	local03, local04
023f4     01 1C 86 F1 | 	sub	local03, #1
023f8     A8 1C 62 FC | 	wrlong	local03, fp
023fc     64 50 85 F1 | 	sub	fp, #100
02400     01 1E 56 F2 | 	cmps	local04, #1 wc
02404     20 00 90 CD |  if_b	jmp	#LR__0102
02408     58 50 05 F1 | 	add	fp, #88
0240c     A8 1C 02 FB | 	rdlong	local03, fp
02410     0E 19 02 F6 | 	mov	local01, local03
02414     01 1C 06 F1 | 	add	local03, #1
02418     A8 1C 62 FC | 	wrlong	local03, fp
0241c     58 50 85 F1 | 	sub	fp, #88
02420     0C 47 48 FC | 	wrbyte	#35, local01
02424     C0 FF 9F FD | 	jmp	#LR__0100
02428                 | LR__0101
02428                 | LR__0102
02428     58 50 05 F1 | 	add	fp, #88
0242c     A8 1E 02 FB | 	rdlong	local04, fp
02430     0F 1D 02 F6 | 	mov	local03, local04
02434     01 1C 06 F1 | 	add	local03, #1
02438     A8 1C 62 FC | 	wrlong	local03, fp
0243c     58 50 85 F1 | 	sub	fp, #88
02440     0F 01 48 FC | 	wrbyte	#0, local04
02444                 | LR__0103
02444     04 50 05 F1 | 	add	fp, #4
02448     A8 0E 02 FB | 	rdlong	arg01, fp
0244c     04 50 05 F1 | 	add	fp, #4
02450     A8 10 02 FB | 	rdlong	arg02, fp
02454     0C 50 05 F1 | 	add	fp, #12
02458     A8 12 02 F6 | 	mov	arg03, fp
0245c     14 50 85 F1 | 	sub	fp, #20
02460     F0 FB BF FD | 	call	#__system___fmtstr
02464                 | LR__0104
02464     A8 F0 03 F6 | 	mov	ptra, fp
02468     B3 00 A0 FD | 	call	#popregs_
0246c                 | __system___fmtnum_ret
0246c     2D 00 64 FD | 	ret
02470                 | 
02470                 | __system__Chr_S
02470     02 4C 05 F6 | 	mov	COUNT_, #2
02474     A9 00 A0 FD | 	call	#pushregs_
02478     07 19 02 F6 | 	mov	local01, arg01
0247c     03 0E 06 F6 | 	mov	arg01, #3
02480     DC 03 B0 FD | 	call	#__system___gc_alloc_managed
02484     FA 1A 0A F6 | 	mov	local02, result1 wz
02488     10 00 90 AD |  if_e	jmp	#LR__0105
0248c     0D 19 42 FC | 	wrbyte	local01, local02
02490     01 1A 06 F1 | 	add	local02, #1
02494     0D 01 48 FC | 	wrbyte	#0, local02
02498     01 1A 86 F1 | 	sub	local02, #1
0249c                 | LR__0105
0249c     0D F5 01 F6 | 	mov	result1, local02
024a0     A8 F0 03 F6 | 	mov	ptra, fp
024a4     B3 00 A0 FD | 	call	#popregs_
024a8                 | __system__Chr_S_ret
024a8     2D 00 64 FD | 	ret
024ac                 | 
024ac                 | __system__Number_S
024ac     09 4C 05 F6 | 	mov	COUNT_, #9
024b0     A9 00 A0 FD | 	call	#pushregs_
024b4     07 19 02 F6 | 	mov	local01, arg01
024b8     08 1B 0A F6 | 	mov	local02, arg02 wz
024bc     09 1D 02 F6 | 	mov	local03, arg03
024c0     40 00 90 5D |  if_ne	jmp	#LR__0108
024c4     01 1A 06 F6 | 	mov	local02, #1
024c8     0E 1F 02 F6 | 	mov	local04, local03
024cc     01 20 06 F6 | 	mov	local05, #1
024d0                 | LR__0106
024d0     00 22 06 F6 | 	mov	local06, #0
024d4     0C 1F 1A F2 | 	cmp	local04, local01 wcz
024d8     01 22 66 E6 |  if_be	neg	local06, #1
024dc     00 24 06 F6 | 	mov	local07, #0
024e0     0F 21 12 F2 | 	cmp	local05, local04 wc
024e4     01 24 66 C6 |  if_b	neg	local07, #1
024e8     12 23 CA F7 | 	test	local06, local07 wz
024ec     14 00 90 AD |  if_e	jmp	#LR__0107
024f0     0E 1F 02 FD | 	qmul	local04, local03
024f4     0F 21 02 F6 | 	mov	local05, local04
024f8     01 1A 06 F1 | 	add	local02, #1
024fc     18 1E 62 FD | 	getqx	local04
02500     CC FF 9F FD | 	jmp	#LR__0106
02504                 | LR__0107
02504                 | LR__0108
02504     20 1A 36 F3 | 	fle	local02, #32 wc
02508     0D 0F 02 F6 | 	mov	arg01, local02
0250c     02 0E 06 F1 | 	add	arg01, #2
02510     4C 03 B0 FD | 	call	#__system___gc_alloc_managed
02514     FA 26 02 F6 | 	mov	local08, result1
02518     0D 25 02 F6 | 	mov	local07, local02
0251c     13 25 02 F1 | 	add	local07, local08
02520     12 01 48 FC | 	wrbyte	#0, local07
02524     0C DB 9F FE | 	loc	pa,	#(@LR__0110-@LR__0109)
02528     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0252c                 | LR__0109
0252c     01 1A 16 F2 | 	cmp	local02, #1 wc
02530     2C 00 90 CD |  if_b	jmp	#LR__0111
02534     0E 19 12 FD | 	qdiv	local01, local03
02538     01 1A 86 F1 | 	sub	local02, #1
0253c     0D 25 02 F6 | 	mov	local07, local02
02540     13 25 02 F1 | 	add	local07, local08
02544     19 28 62 FD | 	getqy	local09
02548     0A 28 16 F2 | 	cmp	local09, #10 wc
0254c     30 28 06 C1 |  if_b	add	local09, #48
02550     37 28 06 31 |  if_ae	add	local09, #55
02554     12 29 42 FC | 	wrbyte	local09, local07
02558     18 18 62 FD | 	getqx	local01
0255c     CC FF 9F FD | 	jmp	#LR__0109
02560                 | LR__0110
02560                 | LR__0111
02560     13 F5 01 F6 | 	mov	result1, local08
02564     A8 F0 03 F6 | 	mov	ptra, fp
02568     B3 00 A0 FD | 	call	#popregs_
0256c                 | __system__Number_S_ret
0256c     2D 00 64 FD | 	ret
02570                 | 
02570                 | __system___gc_ptrs
02570     04 4C 05 F6 | 	mov	COUNT_, #4
02574     A9 00 A0 FD | 	call	#pushregs_
02578     ED 18 02 F6 | 	mov	local01, __heap_ptr
0257c     0C 1B 02 F6 | 	mov	local02, local01
02580     07 00 00 FF 
02584     F8 1B 06 F1 | 	add	local02, ##4088
02588     0C 1D 0A FB | 	rdlong	local03, local01 wz
0258c     74 00 90 5D |  if_ne	jmp	#LR__0112
02590     0D 1F 02 F6 | 	mov	local04, local02
02594     0C 1F 82 F1 | 	sub	local04, local01
02598     0C 03 58 FC | 	wrword	#1, local01
0259c     0C 1D 02 F6 | 	mov	local03, local01
025a0     02 1C 06 F1 | 	add	local03, #2
025a4     36 00 80 FF 
025a8     0E 21 59 FC | 	wrword	##27792, local03
025ac     0C 1D 02 F6 | 	mov	local03, local01
025b0     04 1C 06 F1 | 	add	local03, #4
025b4     0E 01 58 FC | 	wrword	#0, local03
025b8     0C 1D 02 F6 | 	mov	local03, local01
025bc     06 1C 06 F1 | 	add	local03, #6
025c0     0E 03 58 FC | 	wrword	#1, local03
025c4     10 18 06 F1 | 	add	local01, #16
025c8     0F 1D 52 F6 | 	abs	local03, local04 wc
025cc     04 1C 46 F0 | 	shr	local03, #4
025d0     0E 1D 82 F6 | 	negc	local03, local03
025d4     0C 1D 52 FC | 	wrword	local03, local01
025d8     0C 1D 02 F6 | 	mov	local03, local01
025dc     02 1C 06 F1 | 	add	local03, #2
025e0     36 00 80 FF 
025e4     0E 1F 59 FC | 	wrword	##27791, local03
025e8     0C 1D 02 F6 | 	mov	local03, local01
025ec     04 1C 06 F1 | 	add	local03, #4
025f0     0E 01 58 FC | 	wrword	#0, local03
025f4     0C 1D 02 F6 | 	mov	local03, local01
025f8     06 1C 06 F1 | 	add	local03, #6
025fc     0E 01 58 FC | 	wrword	#0, local03
02600     10 18 86 F1 | 	sub	local01, #16
02604                 | LR__0112
02604     0D F7 01 F6 | 	mov	result2, local02
02608     0C F5 01 F6 | 	mov	result1, local01
0260c     A8 F0 03 F6 | 	mov	ptra, fp
02610     B3 00 A0 FD | 	call	#popregs_
02614                 | __system___gc_ptrs_ret
02614     2D 00 64 FD | 	ret
02618                 | 
02618                 | __system___gc_nextBlockPtr
02618     02 4C 05 F6 | 	mov	COUNT_, #2
0261c     A9 00 A0 FD | 	call	#pushregs_
02620     07 19 02 F6 | 	mov	local01, arg01
02624     0C 1B EA FA | 	rdword	local02, local01 wz
02628     10 00 90 5D |  if_ne	jmp	#LR__0113
0262c     68 00 00 FF 
02630     1E 0E 06 F6 | 	mov	arg01, ##@LR__0889
02634     F4 01 B0 FD | 	call	#__system___gc_errmsg
02638     0C 00 90 FD | 	jmp	#LR__0114
0263c                 | LR__0113
0263c     0C F5 01 F6 | 	mov	result1, local01
02640     04 1A 66 F0 | 	shl	local02, #4
02644     0D F5 01 F1 | 	add	result1, local02
02648                 | LR__0114
02648     A8 F0 03 F6 | 	mov	ptra, fp
0264c     B3 00 A0 FD | 	call	#popregs_
02650                 | __system___gc_nextBlockPtr_ret
02650     2D 00 64 FD | 	ret
02654                 | 
02654                 | __system___gc_tryalloc
02654     0D 4C 05 F6 | 	mov	COUNT_, #13
02658     A9 00 A0 FD | 	call	#pushregs_
0265c     07 19 02 F6 | 	mov	local01, arg01
02660     08 1B 02 F6 | 	mov	local02, arg02
02664     08 FF BF FD | 	call	#__system___gc_ptrs
02668     FA 1C 02 F6 | 	mov	local03, result1
0266c     FB 1E 02 F6 | 	mov	local04, result2
02670     0E 21 02 F6 | 	mov	local05, local03
02674     00 22 06 F6 | 	mov	local06, #0
02678     D4 D9 9F FE | 	loc	pa,	#(@LR__0116-@LR__0115)
0267c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
02680                 | LR__0115
02680     10 25 02 F6 | 	mov	local07, local05
02684     10 27 02 F6 | 	mov	local08, local05
02688     06 26 06 F1 | 	add	local08, #6
0268c     13 29 E2 FA | 	rdword	local09, local08
02690     0E 0F 02 F6 | 	mov	arg01, local03
02694     14 11 0A F6 | 	mov	arg02, local09 wz
02698     00 F4 05 A6 |  if_e	mov	result1, #0
0269c     04 10 66 50 |  if_ne	shl	arg02, #4
026a0     08 0F 02 51 |  if_ne	add	arg01, arg02
026a4     07 F5 01 56 |  if_ne	mov	result1, arg01
026a8     FA 2A 02 F6 | 	mov	local10, result1
026ac     15 21 0A F6 | 	mov	local05, local10 wz
026b0     10 2B 02 56 |  if_ne	mov	local10, local05
026b4     15 23 E2 5A |  if_ne	rdword	local06, local10
026b8     00 20 0E F2 | 	cmp	local05, #0 wz
026bc     10 00 90 AD |  if_e	jmp	#LR__0117
026c0     0F 21 52 F2 | 	cmps	local05, local04 wc
026c4     08 00 90 3D |  if_ae	jmp	#LR__0117
026c8     11 19 5A F2 | 	cmps	local01, local06 wcz
026cc     B0 FF 9F 1D |  if_a	jmp	#LR__0115
026d0                 | LR__0116
026d0                 | LR__0117
026d0     00 20 0E F2 | 	cmp	local05, #0 wz
026d4     10 F5 01 A6 |  if_e	mov	result1, local05
026d8     44 01 90 AD |  if_e	jmp	#LR__0120
026dc     10 2B 02 F6 | 	mov	local10, local05
026e0     06 2A 06 F1 | 	add	local10, #6
026e4     15 2D E2 FA | 	rdword	local11, local10
026e8     11 19 52 F2 | 	cmps	local01, local06 wc
026ec     C0 00 90 3D |  if_ae	jmp	#LR__0119
026f0     10 19 52 FC | 	wrword	local01, local05
026f4     10 0F 02 F6 | 	mov	arg01, local05
026f8     0C 29 02 F6 | 	mov	local09, local01
026fc     04 28 66 F0 | 	shl	local09, #4
02700     14 0F 02 F1 | 	add	arg01, local09
02704     11 2B 02 F6 | 	mov	local10, local06
02708     0C 2B 82 F1 | 	sub	local10, local01
0270c     07 2B 52 FC | 	wrword	local10, arg01
02710     07 2B 02 F6 | 	mov	local10, arg01
02714     02 2A 06 F1 | 	add	local10, #2
02718     36 00 80 FF 
0271c     15 1F 59 FC | 	wrword	##27791, local10
02720     10 11 0A F6 | 	mov	arg02, local05 wz
02724     00 F4 05 A6 |  if_e	mov	result1, #0
02728     0E 11 82 51 |  if_ne	sub	arg02, local03
0272c     04 10 46 50 |  if_ne	shr	arg02, #4
02730     08 F5 01 56 |  if_ne	mov	result1, arg02
02734     07 29 02 F6 | 	mov	local09, arg01
02738     04 28 06 F1 | 	add	local09, #4
0273c     14 F5 51 FC | 	wrword	result1, local09
02740     10 2B 02 F6 | 	mov	local10, local05
02744     06 2A 06 F1 | 	add	local10, #6
02748     07 29 02 F6 | 	mov	local09, arg01
0274c     15 27 E2 FA | 	rdword	local08, local10
02750     06 28 06 F1 | 	add	local09, #6
02754     14 27 52 FC | 	wrword	local08, local09
02758     07 2F 02 F6 | 	mov	local12, arg01
0275c     17 11 0A F6 | 	mov	arg02, local12 wz
02760     00 F4 05 A6 |  if_e	mov	result1, #0
02764     0E 11 82 51 |  if_ne	sub	arg02, local03
02768     04 10 46 50 |  if_ne	shr	arg02, #4
0276c     08 F5 01 56 |  if_ne	mov	result1, arg02
02770     FA 2C 02 F6 | 	mov	local11, result1
02774     A0 FE BF FD | 	call	#__system___gc_nextBlockPtr
02778     FA 30 0A F6 | 	mov	local13, result1 wz
0277c     30 00 90 AD |  if_e	jmp	#LR__0118
02780     0F 31 52 F2 | 	cmps	local13, local04 wc
02784     28 00 90 3D |  if_ae	jmp	#LR__0118
02788     0E 0F 02 F6 | 	mov	arg01, local03
0278c     17 11 0A F6 | 	mov	arg02, local12 wz
02790     00 F4 05 A6 |  if_e	mov	result1, #0
02794     07 11 82 51 |  if_ne	sub	arg02, arg01
02798     04 10 46 50 |  if_ne	shr	arg02, #4
0279c     08 F5 01 56 |  if_ne	mov	result1, arg02
027a0     FA 2A 02 F6 | 	mov	local10, result1
027a4     18 29 02 F6 | 	mov	local09, local13
027a8     04 28 06 F1 | 	add	local09, #4
027ac     14 2B 52 FC | 	wrword	local10, local09
027b0                 | LR__0118
027b0                 | LR__0119
027b0     06 24 06 F1 | 	add	local07, #6
027b4     12 2D 52 FC | 	wrword	local11, local07
027b8     36 00 00 FF 
027bc     80 2A 06 F6 | 	mov	local10, ##27776
027c0     0D 2B 42 F5 | 	or	local10, local02
027c4     00 F4 05 F6 | 	mov	result1, #0
027c8     01 F4 61 FD | 	cogid	result1
027cc     FA 2A 42 F5 | 	or	local10, result1
027d0     10 27 02 F6 | 	mov	local08, local05
027d4     02 26 06 F1 | 	add	local08, #2
027d8     13 2B 52 FC | 	wrword	local10, local08
027dc     0E 2B 02 F6 | 	mov	local10, local03
027e0     08 2A 06 F1 | 	add	local10, #8
027e4     10 29 02 F6 | 	mov	local09, local05
027e8     15 27 E2 FA | 	rdword	local08, local10
027ec     06 28 06 F1 | 	add	local09, #6
027f0     14 27 52 FC | 	wrword	local08, local09
027f4     10 11 0A F6 | 	mov	arg02, local05 wz
027f8     00 F4 05 A6 |  if_e	mov	result1, #0
027fc     0E 11 82 51 |  if_ne	sub	arg02, local03
02800     04 10 46 50 |  if_ne	shr	arg02, #4
02804     08 F5 01 56 |  if_ne	mov	result1, arg02
02808     08 1C 06 F1 | 	add	local03, #8
0280c     0E F5 51 FC | 	wrword	result1, local03
02810     10 F5 01 F6 | 	mov	result1, local05
02814     08 F4 05 F1 | 	add	result1, #8
02818     00 C0 31 FF 
0281c     00 F4 45 F5 | 	or	result1, ##1669332992
02820                 | LR__0120
02820     A8 F0 03 F6 | 	mov	ptra, fp
02824     B3 00 A0 FD | 	call	#popregs_
02828                 | __system___gc_tryalloc_ret
02828     2D 00 64 FD | 	ret
0282c                 | 
0282c                 | __system___gc_errmsg
0282c     02 4C 05 F6 | 	mov	COUNT_, #2
02830     A9 00 A0 FD | 	call	#pushregs_
02834     07 19 02 F6 | 	mov	local01, arg01
02838                 | LR__0121
02838     0C 1B CA FA | 	rdbyte	local02, local01 wz
0283c     01 18 06 F1 | 	add	local01, #1
02840     0C 00 90 AD |  if_e	jmp	#LR__0122
02844     0D 0F 02 F6 | 	mov	arg01, local02
02848     1C F1 BF FD | 	call	#__system___tx
0284c     E8 FF 9F FD | 	jmp	#LR__0121
02850                 | LR__0122
02850     00 F4 05 F6 | 	mov	result1, #0
02854     A8 F0 03 F6 | 	mov	ptra, fp
02858     B3 00 A0 FD | 	call	#popregs_
0285c                 | __system___gc_errmsg_ret
0285c     2D 00 64 FD | 	ret
02860                 | 
02860                 | __system___gc_alloc_managed
02860     02 4C 05 F6 | 	mov	COUNT_, #2
02864     A9 00 A0 FD | 	call	#pushregs_
02868     07 19 02 F6 | 	mov	local01, arg01
0286c     00 10 06 F6 | 	mov	arg02, #0
02870     30 00 B0 FD | 	call	#__system___gc_doalloc
02874     FA 1A 0A F6 | 	mov	local02, result1 wz
02878     18 00 90 5D |  if_ne	jmp	#LR__0123
0287c     01 18 56 F2 | 	cmps	local01, #1 wc
02880     10 00 90 CD |  if_b	jmp	#LR__0123
02884     68 00 00 FF 
02888     3A 0E 06 F6 | 	mov	arg01, ##@LR__0890
0288c     9C FF BF FD | 	call	#__system___gc_errmsg
02890     04 00 90 FD | 	jmp	#LR__0124
02894                 | LR__0123
02894     0D F5 01 F6 | 	mov	result1, local02
02898                 | LR__0124
02898     A8 F0 03 F6 | 	mov	ptra, fp
0289c     B3 00 A0 FD | 	call	#popregs_
028a0                 | __system___gc_alloc_managed_ret
028a0     2D 00 64 FD | 	ret
028a4                 | 
028a4                 | __system___gc_doalloc
028a4     06 4C 05 F6 | 	mov	COUNT_, #6
028a8     A9 00 A0 FD | 	call	#pushregs_
028ac     07 19 0A F6 | 	mov	local01, arg01 wz
028b0     08 1B 02 F6 | 	mov	local02, arg02
028b4     00 F4 05 A6 |  if_e	mov	result1, #0
028b8     90 00 90 AD |  if_e	jmp	#LR__0132
028bc     17 18 06 F1 | 	add	local01, #23
028c0     0F 18 26 F5 | 	andn	local01, #15
028c4     04 18 46 F0 | 	shr	local01, #4
028c8     14 EE 05 F1 | 	add	ptr___system__dat__, #20
028cc     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
028d0     14 EE 85 F1 | 	sub	ptr___system__dat__, #20
028d4     A8 EF BF FD | 	call	#__system___lockmem
028d8     0C 0F 02 F6 | 	mov	arg01, local01
028dc     0D 11 02 F6 | 	mov	arg02, local02
028e0     70 FD BF FD | 	call	#__system___gc_tryalloc
028e4     FA 1C 0A F6 | 	mov	local03, result1 wz
028e8     14 00 90 5D |  if_ne	jmp	#LR__0125
028ec     74 03 B0 FD | 	call	#__system___gc_docollect
028f0     0C 0F 02 F6 | 	mov	arg01, local01
028f4     0D 11 02 F6 | 	mov	arg02, local02
028f8     58 FD BF FD | 	call	#__system___gc_tryalloc
028fc     FA 1C 02 F6 | 	mov	local03, result1
02900                 | LR__0125
02900     14 EE 05 F1 | 	add	ptr___system__dat__, #20
02904     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
02908     14 EE 85 F1 | 	sub	ptr___system__dat__, #20
0290c     07 01 68 FC | 	wrlong	#0, arg01
02910     00 1C 0E F2 | 	cmp	local03, #0 wz
02914     30 00 90 AD |  if_e	jmp	#LR__0131
02918     04 18 66 F0 | 	shl	local01, #4
0291c     08 18 86 F1 | 	sub	local01, #8
02920     0C 1F 52 F6 | 	abs	local04, local01 wc
02924     02 1E 46 F0 | 	shr	local04, #2
02928     0F 21 8A F6 | 	negc	local05, local04 wz
0292c     0E 23 02 F6 | 	mov	local06, local03
02930     14 00 90 AD |  if_e	jmp	#LR__0130
02934     D4 D6 9F FE | 	loc	pa,	#(@LR__0128-@LR__0126)
02938     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0293c                 | LR__0126
0293c     10 05 D8 FC | 	rep	@LR__0129, local05
02940                 | LR__0127
02940     11 01 68 FC | 	wrlong	#0, local06
02944     04 22 06 F1 | 	add	local06, #4
02948                 | LR__0128
02948                 | LR__0129
02948                 | LR__0130
02948                 | LR__0131
02948     0E F5 01 F6 | 	mov	result1, local03
0294c                 | LR__0132
0294c     A8 F0 03 F6 | 	mov	ptra, fp
02950     B3 00 A0 FD | 	call	#popregs_
02954                 | __system___gc_doalloc_ret
02954     2D 00 64 FD | 	ret
02958                 | 
02958                 | __system___gc_isvalidptr
02958     09 F9 01 F6 | 	mov	_var01, arg03
0295c     FC FA 01 F6 | 	mov	_var02, _var01
02960     00 F8 7F FF 
02964     00 FA 05 F5 | 	and	_var02, ##-1048576
02968     00 C0 31 FF 
0296c     00 FA 0D F2 | 	cmp	_var02, ##1669332992 wz
02970     00 F4 05 56 |  if_ne	mov	result1, #0
02974     58 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
02978     08 F8 85 F1 | 	sub	_var01, #8
0297c     74 F9 05 F4 | 	bitl	_var01, #372
02980     07 F9 51 F2 | 	cmps	_var01, arg01 wc
02984     08 00 90 CD |  if_b	jmp	#LR__0133
02988     08 F9 51 F2 | 	cmps	_var01, arg02 wc
0298c     08 00 90 CD |  if_b	jmp	#LR__0134
02990                 | LR__0133
02990     00 F4 05 F6 | 	mov	result1, #0
02994     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
02998                 | LR__0134
02998     FC FA 01 F6 | 	mov	_var02, _var01
0299c     07 FB 61 F5 | 	xor	_var02, arg01
029a0     0F FA 0D F5 | 	and	_var02, #15 wz
029a4     00 F4 05 56 |  if_ne	mov	result1, #0
029a8     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
029ac     FC FA 01 F6 | 	mov	_var02, _var01
029b0     02 FA 05 F1 | 	add	_var02, #2
029b4     FD FA E1 FA | 	rdword	_var02, _var02
029b8     7F 00 00 FF 
029bc     C0 FB 05 F5 | 	and	_var02, ##65472
029c0     36 00 00 FF 
029c4     80 FA 0D F2 | 	cmp	_var02, ##27776 wz
029c8     00 F4 05 56 |  if_ne	mov	result1, #0
029cc     FC F4 01 A6 |  if_e	mov	result1, _var01
029d0                 | __system___gc_isvalidptr_ret
029d0     2D 00 64 FD | 	ret
029d4                 | 
029d4                 | __system___gc_free
029d4     01 4C 05 F6 | 	mov	COUNT_, #1
029d8     A9 00 A0 FD | 	call	#pushregs_
029dc     07 19 02 F6 | 	mov	local01, arg01
029e0     8C FB BF FD | 	call	#__system___gc_ptrs
029e4     FA 0E 02 F6 | 	mov	arg01, result1
029e8     FB 10 02 F6 | 	mov	arg02, result2
029ec     0C 13 02 F6 | 	mov	arg03, local01
029f0     64 FF BF FD | 	call	#__system___gc_isvalidptr
029f4     FA 18 0A F6 | 	mov	local01, result1 wz
029f8     28 00 90 AD |  if_e	jmp	#LR__0135
029fc     14 EE 05 F1 | 	add	ptr___system__dat__, #20
02a00     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
02a04     14 EE 85 F1 | 	sub	ptr___system__dat__, #20
02a08     74 EE BF FD | 	call	#__system___lockmem
02a0c     0C 0F 02 F6 | 	mov	arg01, local01
02a10     1C 00 B0 FD | 	call	#__system___gc_dofree
02a14     14 EE 05 F1 | 	add	ptr___system__dat__, #20
02a18     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
02a1c     14 EE 85 F1 | 	sub	ptr___system__dat__, #20
02a20     07 01 68 FC | 	wrlong	#0, arg01
02a24                 | LR__0135
02a24     A8 F0 03 F6 | 	mov	ptra, fp
02a28     B3 00 A0 FD | 	call	#popregs_
02a2c                 | __system___gc_free_ret
02a2c     2D 00 64 FD | 	ret
02a30                 | 
02a30                 | __system___gc_dofree
02a30     0C 4C 05 F6 | 	mov	COUNT_, #12
02a34     A9 00 A0 FD | 	call	#pushregs_
02a38     07 19 02 F6 | 	mov	local01, arg01
02a3c     30 FB BF FD | 	call	#__system___gc_ptrs
02a40     FA 1A 02 F6 | 	mov	local02, result1
02a44     FB 1C 02 F6 | 	mov	local03, result2
02a48     0C 1F 02 F6 | 	mov	local04, local01
02a4c     02 1E 06 F1 | 	add	local04, #2
02a50     36 00 80 FF 
02a54     0F 1F 59 FC | 	wrword	##27791, local04
02a58     0C 21 02 F6 | 	mov	local05, local01
02a5c     0C 0F 02 F6 | 	mov	arg01, local01
02a60     B4 FB BF FD | 	call	#__system___gc_nextBlockPtr
02a64     FA 22 02 F6 | 	mov	local06, result1
02a68     DC D5 9F FE | 	loc	pa,	#(@LR__0137-@LR__0136)
02a6c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
02a70                 | LR__0136
02a70     04 20 06 F1 | 	add	local05, #4
02a74     10 11 EA FA | 	rdword	arg02, local05 wz
02a78     0D 0F 02 F6 | 	mov	arg01, local02
02a7c     00 F4 05 A6 |  if_e	mov	result1, #0
02a80     04 10 66 50 |  if_ne	shl	arg02, #4
02a84     08 0F 02 51 |  if_ne	add	arg01, arg02
02a88     07 F5 01 56 |  if_ne	mov	result1, arg01
02a8c     FA 20 0A F6 | 	mov	local05, result1 wz
02a90     24 00 90 AD |  if_e	jmp	#LR__0138
02a94     10 0F 02 F6 | 	mov	arg01, local05
02a98     00 F4 05 F6 | 	mov	result1, #0
02a9c     02 0E 06 F1 | 	add	arg01, #2
02aa0     07 25 E2 FA | 	rdword	local07, arg01
02aa4     36 00 00 FF 
02aa8     8F 24 0E F2 | 	cmp	local07, ##27791 wz
02aac     01 F4 65 A6 |  if_e	neg	result1, #1
02ab0     FA 1E 0A F6 | 	mov	local04, result1 wz
02ab4     B8 FF 9F AD |  if_e	jmp	#LR__0136
02ab8                 | LR__0137
02ab8                 | LR__0138
02ab8     00 20 0E F2 | 	cmp	local05, #0 wz
02abc     0D 21 02 A6 |  if_e	mov	local05, local02
02ac0     10 1F 02 F6 | 	mov	local04, local05
02ac4     06 1E 06 F1 | 	add	local04, #6
02ac8     0C 27 02 F6 | 	mov	local08, local01
02acc     0F 29 E2 FA | 	rdword	local09, local04
02ad0     06 26 06 F1 | 	add	local08, #6
02ad4     13 29 52 FC | 	wrword	local09, local08
02ad8     0C 11 0A F6 | 	mov	arg02, local01 wz
02adc     00 F4 05 A6 |  if_e	mov	result1, #0
02ae0     0D 11 82 51 |  if_ne	sub	arg02, local02
02ae4     04 10 46 50 |  if_ne	shr	arg02, #4
02ae8     08 F5 01 56 |  if_ne	mov	result1, arg02
02aec     10 27 02 F6 | 	mov	local08, local05
02af0     06 26 06 F1 | 	add	local08, #6
02af4     13 F5 51 FC | 	wrword	result1, local08
02af8     0D 21 0A F2 | 	cmp	local05, local02 wz
02afc     84 00 90 AD |  if_e	jmp	#LR__0141
02b00     10 0F 02 F6 | 	mov	arg01, local05
02b04     10 FB BF FD | 	call	#__system___gc_nextBlockPtr
02b08     0C F5 09 F2 | 	cmp	result1, local01 wz
02b0c     74 00 90 5D |  if_ne	jmp	#LR__0140
02b10     10 1F E2 FA | 	rdword	local04, local05
02b14     0C 2B E2 FA | 	rdword	local10, local01
02b18     15 1F 02 F1 | 	add	local04, local10
02b1c     10 1F 52 FC | 	wrword	local04, local05
02b20     0C 1F 02 F6 | 	mov	local04, local01
02b24     02 1E 06 F1 | 	add	local04, #2
02b28     0F 01 58 FC | 	wrword	#0, local04
02b2c     0C 0F 02 F6 | 	mov	arg01, local01
02b30     E4 FA BF FD | 	call	#__system___gc_nextBlockPtr
02b34     FA 22 02 F6 | 	mov	local06, result1
02b38     0E 23 52 F2 | 	cmps	local06, local03 wc
02b3c     20 00 90 3D |  if_ae	jmp	#LR__0139
02b40     10 11 0A F6 | 	mov	arg02, local05 wz
02b44     00 F4 05 A6 |  if_e	mov	result1, #0
02b48     0D 11 82 51 |  if_ne	sub	arg02, local02
02b4c     04 10 46 50 |  if_ne	shr	arg02, #4
02b50     08 F5 01 56 |  if_ne	mov	result1, arg02
02b54     11 27 02 F6 | 	mov	local08, local06
02b58     04 26 06 F1 | 	add	local08, #4
02b5c     13 F5 51 FC | 	wrword	result1, local08
02b60                 | LR__0139
02b60     0C 1F 02 F6 | 	mov	local04, local01
02b64     06 1E 06 F1 | 	add	local04, #6
02b68     10 27 02 F6 | 	mov	local08, local05
02b6c     0F 29 E2 FA | 	rdword	local09, local04
02b70     06 26 06 F1 | 	add	local08, #6
02b74     13 29 52 FC | 	wrword	local09, local08
02b78     06 18 06 F1 | 	add	local01, #6
02b7c     0C 01 58 FC | 	wrword	#0, local01
02b80     10 19 02 F6 | 	mov	local01, local05
02b84                 | LR__0140
02b84                 | LR__0141
02b84     0C 0F 02 F6 | 	mov	arg01, local01
02b88     8C FA BF FD | 	call	#__system___gc_nextBlockPtr
02b8c     FA 2C 0A F6 | 	mov	local11, result1 wz
02b90     C0 00 90 AD |  if_e	jmp	#LR__0143
02b94     0E 2D 52 F2 | 	cmps	local11, local03 wc
02b98     B8 00 90 3D |  if_ae	jmp	#LR__0143
02b9c     16 0F 02 F6 | 	mov	arg01, local11
02ba0     00 F4 05 F6 | 	mov	result1, #0
02ba4     02 0E 06 F1 | 	add	arg01, #2
02ba8     07 25 E2 FA | 	rdword	local07, arg01
02bac     36 00 00 FF 
02bb0     8F 24 0E F2 | 	cmp	local07, ##27791 wz
02bb4     01 F4 65 A6 |  if_e	neg	result1, #1
02bb8     00 F4 0D F2 | 	cmp	result1, #0 wz
02bbc     94 00 90 AD |  if_e	jmp	#LR__0143
02bc0     0C 21 02 F6 | 	mov	local05, local01
02bc4     10 1F E2 FA | 	rdword	local04, local05
02bc8     16 19 02 F6 | 	mov	local01, local11
02bcc     0C 2B E2 FA | 	rdword	local10, local01
02bd0     15 1F 02 F1 | 	add	local04, local10
02bd4     10 2F 02 F6 | 	mov	local12, local05
02bd8     17 1F 52 FC | 	wrword	local04, local12
02bdc     0C 1F 02 F6 | 	mov	local04, local01
02be0     06 1E 06 F1 | 	add	local04, #6
02be4     10 27 02 F6 | 	mov	local08, local05
02be8     0F 29 E2 FA | 	rdword	local09, local04
02bec     06 26 06 F1 | 	add	local08, #6
02bf0     13 29 52 FC | 	wrword	local09, local08
02bf4     0C 1F 02 F6 | 	mov	local04, local01
02bf8     02 1E 06 F1 | 	add	local04, #2
02bfc     0F 55 59 FC | 	wrword	#170, local04
02c00     0C 1F 02 F6 | 	mov	local04, local01
02c04     06 1E 06 F1 | 	add	local04, #6
02c08     00 26 06 F6 | 	mov	local08, #0
02c0c     0F 01 58 FC | 	wrword	#0, local04
02c10     0C 0F 02 F6 | 	mov	arg01, local01
02c14     00 FA BF FD | 	call	#__system___gc_nextBlockPtr
02c18     FA 1E 02 F6 | 	mov	local04, result1
02c1c     0F 23 0A F6 | 	mov	local06, local04 wz
02c20     30 00 90 AD |  if_e	jmp	#LR__0142
02c24     0E 23 52 F2 | 	cmps	local06, local03 wc
02c28     28 00 90 3D |  if_ae	jmp	#LR__0142
02c2c     0D 0F 02 F6 | 	mov	arg01, local02
02c30     10 11 0A F6 | 	mov	arg02, local05 wz
02c34     00 F4 05 A6 |  if_e	mov	result1, #0
02c38     07 11 82 51 |  if_ne	sub	arg02, arg01
02c3c     04 10 46 50 |  if_ne	shr	arg02, #4
02c40     08 F5 01 56 |  if_ne	mov	result1, arg02
02c44     FA 1E 02 F6 | 	mov	local04, result1
02c48     11 27 02 F6 | 	mov	local08, local06
02c4c     04 26 06 F1 | 	add	local08, #4
02c50     13 1F 52 FC | 	wrword	local04, local08
02c54                 | LR__0142
02c54                 | LR__0143
02c54     11 F5 01 F6 | 	mov	result1, local06
02c58     A8 F0 03 F6 | 	mov	ptra, fp
02c5c     B3 00 A0 FD | 	call	#popregs_
02c60                 | __system___gc_dofree_ret
02c60     2D 00 64 FD | 	ret
02c64                 | 
02c64                 | __system___gc_docollect
02c64     09 4C 05 F6 | 	mov	COUNT_, #9
02c68     A9 00 A0 FD | 	call	#pushregs_
02c6c     00 F9 BF FD | 	call	#__system___gc_ptrs
02c70     FB 18 02 F6 | 	mov	local01, result2
02c74     FA 1A 02 F6 | 	mov	local02, result1
02c78     0D 0F 02 F6 | 	mov	arg01, local02
02c7c     98 F9 BF FD | 	call	#__system___gc_nextBlockPtr
02c80     FA 1C 0A F6 | 	mov	local03, result1 wz
02c84     00 F4 05 F6 | 	mov	result1, #0
02c88     01 F4 61 FD | 	cogid	result1
02c8c     FA 1E 02 F6 | 	mov	local04, result1
02c90     34 00 90 AD |  if_e	jmp	#LR__0145
02c94                 | LR__0144
02c94     0C 1D 52 F2 | 	cmps	local03, local01 wc
02c98     2C 00 90 3D |  if_ae	jmp	#LR__0145
02c9c     0E 21 02 F6 | 	mov	local05, local03
02ca0     02 20 06 F1 | 	add	local05, #2
02ca4     10 23 E2 FA | 	rdword	local06, local05
02ca8     20 22 26 F5 | 	andn	local06, #32
02cac     0E 25 02 F6 | 	mov	local07, local03
02cb0     02 24 06 F1 | 	add	local07, #2
02cb4     12 23 52 FC | 	wrword	local06, local07
02cb8     0E 0F 02 F6 | 	mov	arg01, local03
02cbc     58 F9 BF FD | 	call	#__system___gc_nextBlockPtr
02cc0     FA 1C 0A F6 | 	mov	local03, result1 wz
02cc4     CC FF 9F 5D |  if_ne	jmp	#LR__0144
02cc8                 | LR__0145
02cc8     00 22 06 F6 | 	mov	local06, #0
02ccc     00 0E 06 F6 | 	mov	arg01, #0
02cd0     44 EB BF FD | 	call	#__system____topofstack
02cd4     FA 10 02 F6 | 	mov	arg02, result1
02cd8     11 0F 02 F6 | 	mov	arg01, local06
02cdc     9C 00 B0 FD | 	call	#__system___gc_markhub
02ce0     2C 01 B0 FD | 	call	#__system___gc_markcog
02ce4     0D 0F 02 F6 | 	mov	arg01, local02
02ce8     2C F9 BF FD | 	call	#__system___gc_nextBlockPtr
02cec     FA 26 0A F6 | 	mov	local08, result1 wz
02cf0     10 00 90 5D |  if_ne	jmp	#LR__0146
02cf4     68 00 00 FF 
02cf8     57 0E 06 F6 | 	mov	arg01, ##@LR__0891
02cfc     2C FB BF FD | 	call	#__system___gc_errmsg
02d00     6C 00 90 FD | 	jmp	#LR__0152
02d04                 | LR__0146
02d04                 | LR__0147
02d04     13 1D 02 F6 | 	mov	local03, local08
02d08     0E 0F 02 F6 | 	mov	arg01, local03
02d0c     08 F9 BF FD | 	call	#__system___gc_nextBlockPtr
02d10     FA 26 02 F6 | 	mov	local08, result1
02d14     0E 23 02 F6 | 	mov	local06, local03
02d18     02 22 06 F1 | 	add	local06, #2
02d1c     11 29 E2 FA | 	rdword	local09, local06
02d20     20 28 CE F7 | 	test	local09, #32 wz
02d24     38 00 90 5D |  if_ne	jmp	#LR__0150
02d28     14 21 02 F6 | 	mov	local05, local09
02d2c     10 20 0E F5 | 	and	local05, #16 wz
02d30     2C 00 90 5D |  if_ne	jmp	#LR__0150
02d34     14 23 02 F6 | 	mov	local06, local09
02d38     0F 22 06 F5 | 	and	local06, #15
02d3c     11 29 02 F6 | 	mov	local09, local06
02d40     0F 29 0A F2 | 	cmp	local09, local04 wz
02d44     08 00 90 AD |  if_e	jmp	#LR__0148
02d48     0E 28 0E F2 | 	cmp	local09, #14 wz
02d4c     10 00 90 5D |  if_ne	jmp	#LR__0149
02d50                 | LR__0148
02d50     0E 0F 02 F6 | 	mov	arg01, local03
02d54     D8 FC BF FD | 	call	#__system___gc_dofree
02d58     FA 22 02 F6 | 	mov	local06, result1
02d5c     11 27 02 F6 | 	mov	local08, local06
02d60                 | LR__0149
02d60                 | LR__0150
02d60     00 26 0E F2 | 	cmp	local08, #0 wz
02d64     08 00 90 AD |  if_e	jmp	#LR__0151
02d68     0C 27 52 F2 | 	cmps	local08, local01 wc
02d6c     94 FF 9F CD |  if_b	jmp	#LR__0147
02d70                 | LR__0151
02d70                 | LR__0152
02d70     A8 F0 03 F6 | 	mov	ptra, fp
02d74     B3 00 A0 FD | 	call	#popregs_
02d78                 | __system___gc_docollect_ret
02d78     2D 00 64 FD | 	ret
02d7c                 | 
02d7c                 | __system___gc_markhub
02d7c     08 4C 05 F6 | 	mov	COUNT_, #8
02d80     A9 00 A0 FD | 	call	#pushregs_
02d84     07 19 02 F6 | 	mov	local01, arg01
02d88     08 1B 02 F6 | 	mov	local02, arg02
02d8c     E0 F7 BF FD | 	call	#__system___gc_ptrs
02d90     FA 1C 02 F6 | 	mov	local03, result1
02d94     FB 1E 02 F6 | 	mov	local04, result2
02d98                 | LR__0153
02d98     0D 19 52 F2 | 	cmps	local01, local02 wc
02d9c     64 00 90 3D |  if_ae	jmp	#LR__0154
02da0     0C 13 02 FB | 	rdlong	arg03, local01
02da4     04 18 06 F1 | 	add	local01, #4
02da8     0F 11 02 F6 | 	mov	arg02, local04
02dac     0E 0F 02 F6 | 	mov	arg01, local03
02db0     A4 FB BF FD | 	call	#__system___gc_isvalidptr
02db4     FA 20 0A F6 | 	mov	local05, result1 wz
02db8     DC FF 9F AD |  if_e	jmp	#LR__0153
02dbc     10 0F 02 F6 | 	mov	arg01, local05
02dc0     00 F4 05 F6 | 	mov	result1, #0
02dc4     02 0E 06 F1 | 	add	arg01, #2
02dc8     07 23 E2 FA | 	rdword	local06, arg01
02dcc     36 00 00 FF 
02dd0     8F 22 0E F2 | 	cmp	local06, ##27791 wz
02dd4     01 F4 65 A6 |  if_e	neg	result1, #1
02dd8     00 F4 0D F2 | 	cmp	result1, #0 wz
02ddc     B8 FF 9F 5D |  if_ne	jmp	#LR__0153
02de0     10 25 02 F6 | 	mov	local07, local05
02de4     02 24 06 F1 | 	add	local07, #2
02de8     12 27 E2 FA | 	rdword	local08, local07
02dec     0F 26 26 F5 | 	andn	local08, #15
02df0     2E 26 46 F5 | 	or	local08, #46
02df4     10 25 02 F6 | 	mov	local07, local05
02df8     02 24 06 F1 | 	add	local07, #2
02dfc     12 27 52 FC | 	wrword	local08, local07
02e00     94 FF 9F FD | 	jmp	#LR__0153
02e04                 | LR__0154
02e04     A8 F0 03 F6 | 	mov	ptra, fp
02e08     B3 00 A0 FD | 	call	#popregs_
02e0c                 | __system___gc_markhub_ret
02e0c     2D 00 64 FD | 	ret
02e10                 | 
02e10                 | __system___gc_markcog
02e10     06 4C 05 F6 | 	mov	COUNT_, #6
02e14     A9 00 A0 FD | 	call	#pushregs_
02e18     54 F7 BF FD | 	call	#__system___gc_ptrs
02e1c     FA 18 02 F6 | 	mov	local01, result1
02e20     FB 1A 02 F6 | 	mov	local02, result2
02e24     00 1C 06 F6 | 	mov	local03, #0
02e28                 | LR__0155
02e28     F0 1F 06 F6 | 	mov	local04, #496
02e2c     0E 1F 82 F1 | 	sub	local04, local03
02e30     F0 1F 06 F1 | 	add	local04, #496
02e34                 | 	'.live	local04
02e34     00 1E 96 F9 | 	alts	local04, #0
02e38     0F 21 02 F6 | 	mov	local05, local04
02e3c     0C 0F 02 F6 | 	mov	arg01, local01
02e40     0D 11 02 F6 | 	mov	arg02, local02
02e44     10 13 02 F6 | 	mov	arg03, local05
02e48     0C FB BF FD | 	call	#__system___gc_isvalidptr
02e4c     FA 20 0A F6 | 	mov	local05, result1 wz
02e50     18 00 90 AD |  if_e	jmp	#LR__0156
02e54     10 23 02 F6 | 	mov	local06, local05
02e58     02 22 06 F1 | 	add	local06, #2
02e5c     11 1F E2 FA | 	rdword	local04, local06
02e60     20 1E 46 F5 | 	or	local04, #32
02e64     02 20 06 F1 | 	add	local05, #2
02e68     10 1F 52 FC | 	wrword	local04, local05
02e6c                 | LR__0156
02e6c     01 1C 06 F1 | 	add	local03, #1
02e70     F0 1D 56 F2 | 	cmps	local03, #496 wc
02e74     B0 FF 9F CD |  if_b	jmp	#LR__0155
02e78     A8 F0 03 F6 | 	mov	ptra, fp
02e7c     B3 00 A0 FD | 	call	#popregs_
02e80                 | __system___gc_markcog_ret
02e80     2D 00 64 FD | 	ret
02e84                 | 
02e84                 | __system___openraw
02e84     0C 4C 05 F6 | 	mov	COUNT_, #12
02e88     A9 00 A0 FD | 	call	#pushregs_
02e8c     34 F0 07 F1 | 	add	ptra, #52
02e90     04 50 05 F1 | 	add	fp, #4
02e94     A8 0E 62 FC | 	wrlong	arg01, fp
02e98     04 50 05 F1 | 	add	fp, #4
02e9c     A8 10 62 FC | 	wrlong	arg02, fp
02ea0     04 50 05 F1 | 	add	fp, #4
02ea4     A8 12 62 FC | 	wrlong	arg03, fp
02ea8     04 50 05 F1 | 	add	fp, #4
02eac     A8 14 62 FC | 	wrlong	arg04, fp
02eb0     0C 50 05 F1 | 	add	fp, #12
02eb4     A8 08 68 FC | 	wrlong	#4, fp
02eb8     18 50 85 F1 | 	sub	fp, #24
02ebc     A8 18 02 FB | 	rdlong	local01, fp
02ec0     1C 50 05 F1 | 	add	fp, #28
02ec4     A8 18 62 FC | 	wrlong	local01, fp
02ec8     40 EF 05 F1 | 	add	ptr___system__dat__, #320
02ecc     F7 F4 01 F6 | 	mov	result1, ptr___system__dat__
02ed0     40 EF 85 F1 | 	sub	ptr___system__dat__, #320
02ed4     04 50 05 F1 | 	add	fp, #4
02ed8     A8 F4 61 FC | 	wrlong	result1, fp
02edc     FA 0E 02 F6 | 	mov	arg01, result1
02ee0     1C 50 85 F1 | 	sub	fp, #28
02ee4     A8 10 02 FB | 	rdlong	arg02, fp
02ee8     08 50 85 F1 | 	sub	fp, #8
02eec     00 12 06 F6 | 	mov	arg03, #0
02ef0     FC EC BF FD | 	call	#__system____getvfsforfile
02ef4     18 50 05 F1 | 	add	fp, #24
02ef8     A8 F4 61 FC | 	wrlong	result1, fp
02efc     FA 1A 02 F6 | 	mov	local02, result1
02f00     18 50 85 F1 | 	sub	fp, #24
02f04     0D 19 0A F6 | 	mov	local01, local02 wz
02f08     14 00 90 AD |  if_e	jmp	#LR__0157
02f0c     18 50 05 F1 | 	add	fp, #24
02f10     A8 1C 02 FB | 	rdlong	local03, fp
02f14     18 50 85 F1 | 	sub	fp, #24
02f18     0E 1F 0A FB | 	rdlong	local04, local03 wz
02f1c     14 00 90 5D |  if_ne	jmp	#LR__0158
02f20                 | LR__0157
02f20     1C EE 05 F1 | 	add	ptr___system__dat__, #28
02f24     F7 20 68 FC | 	wrlong	#16, ptr___system__dat__
02f28     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
02f2c     01 F4 65 F6 | 	neg	result1, #1
02f30     78 04 90 FD | 	jmp	#LR__0176
02f34                 | LR__0158
02f34     20 50 05 F1 | 	add	fp, #32
02f38     A8 0E 02 FB | 	rdlong	arg01, fp
02f3c     20 50 85 F1 | 	sub	fp, #32
02f40     00 10 06 F6 | 	mov	arg02, #0
02f44     30 12 06 F6 | 	mov	arg03, #48
02f48     07 21 02 F6 | 	mov	local05, arg01
02f4c     99 00 A0 FD | 	call	#\builtin_bytefill_
02f50     10 F5 01 F6 | 	mov	result1, local05
02f54     18 50 05 F1 | 	add	fp, #24
02f58     A8 1E 02 FB | 	rdlong	local04, fp
02f5c     0F 19 02 FB | 	rdlong	local01, local04
02f60     0C 1B 02 FB | 	rdlong	local02, local01
02f64     04 18 06 F1 | 	add	local01, #4
02f68     0C 23 02 FB | 	rdlong	local06, local01
02f6c     11 25 02 F6 | 	mov	local07, local06
02f70     08 50 05 F1 | 	add	fp, #8
02f74     A8 26 02 FB | 	rdlong	local08, fp
02f78     04 50 05 F1 | 	add	fp, #4
02f7c     A8 28 02 FB | 	rdlong	local09, fp
02f80     18 50 85 F1 | 	sub	fp, #24
02f84     A8 2A 02 FB | 	rdlong	local10, fp
02f88     0C 50 85 F1 | 	sub	fp, #12
02f8c     13 0F 02 F6 | 	mov	arg01, local08
02f90     14 11 02 F6 | 	mov	arg02, local09
02f94     15 13 02 F6 | 	mov	arg03, local10
02f98     F1 2C 02 F6 | 	mov	local11, objptr
02f9c     0D E3 01 F6 | 	mov	objptr, local02
02fa0     2D 24 62 FD | 	call	local07
02fa4     16 E3 01 F6 | 	mov	objptr, local11
02fa8     14 50 05 F1 | 	add	fp, #20
02fac     A8 F4 61 FC | 	wrlong	result1, fp
02fb0     14 50 85 F1 | 	sub	fp, #20
02fb4     00 F4 0D F2 | 	cmp	result1, #0 wz
02fb8     88 00 90 AD |  if_e	jmp	#LR__0159
02fbc     0C 50 05 F1 | 	add	fp, #12
02fc0     A8 24 02 FB | 	rdlong	local07, fp
02fc4     0C 50 85 F1 | 	sub	fp, #12
02fc8     04 24 CE F7 | 	test	local07, #4 wz
02fcc     74 00 90 AD |  if_e	jmp	#LR__0159
02fd0     18 50 05 F1 | 	add	fp, #24
02fd4     A8 1E 02 FB | 	rdlong	local04, fp
02fd8     0F 1D 02 F6 | 	mov	local03, local04
02fdc     04 1C 06 F1 | 	add	local03, #4
02fe0     0E 23 02 FB | 	rdlong	local06, local03
02fe4     04 1C 86 F1 | 	sub	local03, #4
02fe8     11 19 02 F6 | 	mov	local01, local06
02fec     0C 1B 02 FB | 	rdlong	local02, local01
02ff0     04 18 06 F1 | 	add	local01, #4
02ff4     0C 27 02 FB | 	rdlong	local08, local01
02ff8     13 25 02 F6 | 	mov	local07, local08
02ffc     08 50 05 F1 | 	add	fp, #8
03000     A8 28 02 FB | 	rdlong	local09, fp
03004     04 50 05 F1 | 	add	fp, #4
03008     A8 2A 02 FB | 	rdlong	local10, fp
0300c     14 50 85 F1 | 	sub	fp, #20
03010     A8 2C 02 FB | 	rdlong	local11, fp
03014     10 50 85 F1 | 	sub	fp, #16
03018     14 0F 02 F6 | 	mov	arg01, local09
0301c     15 11 02 F6 | 	mov	arg02, local10
03020     16 13 02 F6 | 	mov	arg03, local11
03024     F1 2E 02 F6 | 	mov	local12, objptr
03028     0D E3 01 F6 | 	mov	objptr, local02
0302c     2D 24 62 FD | 	call	local07
03030     17 E3 01 F6 | 	mov	objptr, local12
03034     FA 18 02 F6 | 	mov	local01, result1
03038     14 50 05 F1 | 	add	fp, #20
0303c     A8 18 62 FC | 	wrlong	local01, fp
03040     14 50 85 F1 | 	sub	fp, #20
03044                 | LR__0159
03044     14 50 05 F1 | 	add	fp, #20
03048     A8 18 0A FB | 	rdlong	local01, fp wz
0304c     14 50 85 F1 | 	sub	fp, #20
03050     3C 03 90 5D |  if_ne	jmp	#LR__0175
03054     0C 50 05 F1 | 	add	fp, #12
03058     A8 18 02 FB | 	rdlong	local01, fp
0305c     03 18 0E F5 | 	and	local01, #3 wz
03060     1C 50 05 F1 | 	add	fp, #28
03064     A8 18 62 FC | 	wrlong	local01, fp
03068     28 50 85 F1 | 	sub	fp, #40
0306c     14 00 90 AD |  if_e	jmp	#LR__0160
03070     1C 50 05 F1 | 	add	fp, #28
03074     A8 18 02 FB | 	rdlong	local01, fp
03078     02 18 46 F5 | 	or	local01, #2
0307c     A8 18 62 FC | 	wrlong	local01, fp
03080     1C 50 85 F1 | 	sub	fp, #28
03084                 | LR__0160
03084     28 50 05 F1 | 	add	fp, #40
03088     A8 18 02 FB | 	rdlong	local01, fp
0308c     28 50 85 F1 | 	sub	fp, #40
03090     01 18 0E F2 | 	cmp	local01, #1 wz
03094     14 00 90 AD |  if_e	jmp	#LR__0161
03098     1C 50 05 F1 | 	add	fp, #28
0309c     A8 18 02 FB | 	rdlong	local01, fp
030a0     01 18 46 F5 | 	or	local01, #1
030a4     A8 18 62 FC | 	wrlong	local01, fp
030a8     1C 50 85 F1 | 	sub	fp, #28
030ac                 | LR__0161
030ac     0C 50 05 F1 | 	add	fp, #12
030b0     A8 18 02 FB | 	rdlong	local01, fp
030b4     0C 50 85 F1 | 	sub	fp, #12
030b8     20 18 CE F7 | 	test	local01, #32 wz
030bc     14 00 90 AD |  if_e	jmp	#LR__0162
030c0     1C 50 05 F1 | 	add	fp, #28
030c4     A8 18 02 FB | 	rdlong	local01, fp
030c8     C0 18 46 F5 | 	or	local01, #192
030cc     A8 18 62 FC | 	wrlong	local01, fp
030d0     1C 50 85 F1 | 	sub	fp, #28
030d4                 | LR__0162
030d4     20 50 05 F1 | 	add	fp, #32
030d8     A8 18 02 FB | 	rdlong	local01, fp
030dc     04 50 85 F1 | 	sub	fp, #4
030e0     A8 24 02 FB | 	rdlong	local07, fp
030e4     08 18 06 F1 | 	add	local01, #8
030e8     0C 25 62 FC | 	wrlong	local07, local01
030ec     04 50 05 F1 | 	add	fp, #4
030f0     A8 18 02 FB | 	rdlong	local01, fp
030f4     20 50 85 F1 | 	sub	fp, #32
030f8     10 18 06 F1 | 	add	local01, #16
030fc     0C 25 0A FB | 	rdlong	local07, local01 wz
03100     24 00 90 5D |  if_ne	jmp	#LR__0163
03104     20 50 05 F1 | 	add	fp, #32
03108     A8 18 02 FB | 	rdlong	local01, fp
0310c     08 50 85 F1 | 	sub	fp, #8
03110     A8 24 02 FB | 	rdlong	local07, fp
03114     18 50 85 F1 | 	sub	fp, #24
03118     0C 24 06 F1 | 	add	local07, #12
0311c     12 1F 02 FB | 	rdlong	local04, local07
03120     10 18 06 F1 | 	add	local01, #16
03124     0C 1F 62 FC | 	wrlong	local04, local01
03128                 | LR__0163
03128     20 50 05 F1 | 	add	fp, #32
0312c     A8 18 02 FB | 	rdlong	local01, fp
03130     20 50 85 F1 | 	sub	fp, #32
03134     14 18 06 F1 | 	add	local01, #20
03138     0C 25 0A FB | 	rdlong	local07, local01 wz
0313c     24 00 90 5D |  if_ne	jmp	#LR__0164
03140     20 50 05 F1 | 	add	fp, #32
03144     A8 18 02 FB | 	rdlong	local01, fp
03148     08 50 85 F1 | 	sub	fp, #8
0314c     A8 24 02 FB | 	rdlong	local07, fp
03150     18 50 85 F1 | 	sub	fp, #24
03154     10 24 06 F1 | 	add	local07, #16
03158     12 1F 02 FB | 	rdlong	local04, local07
0315c     14 18 06 F1 | 	add	local01, #20
03160     0C 1F 62 FC | 	wrlong	local04, local01
03164                 | LR__0164
03164     20 50 05 F1 | 	add	fp, #32
03168     A8 18 02 FB | 	rdlong	local01, fp
0316c     20 50 85 F1 | 	sub	fp, #32
03170     20 18 06 F1 | 	add	local01, #32
03174     0C 25 0A FB | 	rdlong	local07, local01 wz
03178     24 00 90 5D |  if_ne	jmp	#LR__0165
0317c     20 50 05 F1 | 	add	fp, #32
03180     A8 18 02 FB | 	rdlong	local01, fp
03184     08 50 85 F1 | 	sub	fp, #8
03188     A8 24 02 FB | 	rdlong	local07, fp
0318c     18 50 85 F1 | 	sub	fp, #24
03190     08 24 06 F1 | 	add	local07, #8
03194     12 1F 02 FB | 	rdlong	local04, local07
03198     20 18 06 F1 | 	add	local01, #32
0319c     0C 1F 62 FC | 	wrlong	local04, local01
031a0                 | LR__0165
031a0     20 50 05 F1 | 	add	fp, #32
031a4     A8 18 02 FB | 	rdlong	local01, fp
031a8     20 50 85 F1 | 	sub	fp, #32
031ac     24 18 06 F1 | 	add	local01, #36
031b0     0C 25 0A FB | 	rdlong	local07, local01 wz
031b4     24 00 90 5D |  if_ne	jmp	#LR__0166
031b8     20 50 05 F1 | 	add	fp, #32
031bc     A8 18 02 FB | 	rdlong	local01, fp
031c0     08 50 85 F1 | 	sub	fp, #8
031c4     A8 24 02 FB | 	rdlong	local07, fp
031c8     18 50 85 F1 | 	sub	fp, #24
031cc     18 24 06 F1 | 	add	local07, #24
031d0     12 1F 02 FB | 	rdlong	local04, local07
031d4     24 18 06 F1 | 	add	local01, #36
031d8     0C 1F 62 FC | 	wrlong	local04, local01
031dc                 | LR__0166
031dc     20 50 05 F1 | 	add	fp, #32
031e0     A8 18 02 FB | 	rdlong	local01, fp
031e4     20 50 85 F1 | 	sub	fp, #32
031e8     2C 18 06 F1 | 	add	local01, #44
031ec     0C 25 0A FB | 	rdlong	local07, local01 wz
031f0     24 00 90 5D |  if_ne	jmp	#LR__0167
031f4     20 50 05 F1 | 	add	fp, #32
031f8     A8 18 02 FB | 	rdlong	local01, fp
031fc     08 50 85 F1 | 	sub	fp, #8
03200     A8 24 02 FB | 	rdlong	local07, fp
03204     18 50 85 F1 | 	sub	fp, #24
03208     14 24 06 F1 | 	add	local07, #20
0320c     12 1F 02 FB | 	rdlong	local04, local07
03210     2C 18 06 F1 | 	add	local01, #44
03214     0C 1F 62 FC | 	wrlong	local04, local01
03218                 | LR__0167
03218     20 50 05 F1 | 	add	fp, #32
0321c     A8 18 02 FB | 	rdlong	local01, fp
03220     20 50 85 F1 | 	sub	fp, #32
03224     18 18 06 F1 | 	add	local01, #24
03228     0C 25 0A FB | 	rdlong	local07, local01 wz
0322c     B0 00 90 5D |  if_ne	jmp	#LR__0170
03230     20 50 05 F1 | 	add	fp, #32
03234     A8 0E 02 FB | 	rdlong	arg01, fp
03238     07 1D 02 F6 | 	mov	local03, arg01
0323c     24 1C 06 F1 | 	add	local03, #36
03240     0E 19 02 FB | 	rdlong	local01, local03
03244     0C 1B 02 FB | 	rdlong	local02, local01
03248     04 18 06 F1 | 	add	local01, #4
0324c     0C 25 02 FB | 	rdlong	local07, local01
03250     10 50 05 F1 | 	add	fp, #16
03254     A8 12 02 F6 | 	mov	arg03, fp
03258     30 50 85 F1 | 	sub	fp, #48
0325c     00 11 06 F6 | 	mov	arg02, #256
03260     F1 2E 02 F6 | 	mov	local12, objptr
03264     0D E3 01 F6 | 	mov	objptr, local02
03268     2D 24 62 FD | 	call	local07
0326c     17 E3 01 F6 | 	mov	objptr, local12
03270     2C 50 05 F1 | 	add	fp, #44
03274     A8 F4 61 FC | 	wrlong	result1, fp
03278     2C 50 85 F1 | 	sub	fp, #44
0327c     00 F4 0D F2 | 	cmp	result1, #0 wz
03280     3C 00 90 5D |  if_ne	jmp	#LR__0168
03284     30 50 05 F1 | 	add	fp, #48
03288     A8 24 02 FB | 	rdlong	local07, fp
0328c     30 50 85 F1 | 	sub	fp, #48
03290     02 24 CE F7 | 	test	local07, #2 wz
03294     28 00 90 AD |  if_e	jmp	#LR__0168
03298     20 50 05 F1 | 	add	fp, #32
0329c     A8 18 02 FB | 	rdlong	local01, fp
032a0     20 50 85 F1 | 	sub	fp, #32
032a4     F1 0E 02 F6 | 	mov	arg01, objptr
032a8     F6 10 02 F6 | 	mov	arg02, ptr___system____default_putc_terminal_
032ac     90 E5 BF FD | 	call	#__system___make_methodptr
032b0     FA 24 02 F6 | 	mov	local07, result1
032b4     18 18 06 F1 | 	add	local01, #24
032b8     0C 25 62 FC | 	wrlong	local07, local01
032bc     20 00 90 FD | 	jmp	#LR__0169
032c0                 | LR__0168
032c0     20 50 05 F1 | 	add	fp, #32
032c4     A8 18 02 FB | 	rdlong	local01, fp
032c8     20 50 85 F1 | 	sub	fp, #32
032cc     F1 0E 02 F6 | 	mov	arg01, objptr
032d0     F5 10 02 F6 | 	mov	arg02, ptr___system____default_putc_
032d4     68 E5 BF FD | 	call	#__system___make_methodptr
032d8     18 18 06 F1 | 	add	local01, #24
032dc     0C F5 61 FC | 	wrlong	result1, local01
032e0                 | LR__0169
032e0                 | LR__0170
032e0     20 50 05 F1 | 	add	fp, #32
032e4     A8 18 02 FB | 	rdlong	local01, fp
032e8     20 50 85 F1 | 	sub	fp, #32
032ec     1C 18 06 F1 | 	add	local01, #28
032f0     0C 25 0A FB | 	rdlong	local07, local01 wz
032f4     20 00 90 5D |  if_ne	jmp	#LR__0171
032f8     20 50 05 F1 | 	add	fp, #32
032fc     A8 18 02 FB | 	rdlong	local01, fp
03300     20 50 85 F1 | 	sub	fp, #32
03304     F1 0E 02 F6 | 	mov	arg01, objptr
03308     F4 10 02 F6 | 	mov	arg02, ptr___system____default_getc_
0330c     30 E5 BF FD | 	call	#__system___make_methodptr
03310     1C 18 06 F1 | 	add	local01, #28
03314     0C F5 61 FC | 	wrlong	result1, local01
03318                 | LR__0171
03318     20 50 05 F1 | 	add	fp, #32
0331c     A8 18 02 FB | 	rdlong	local01, fp
03320     20 50 85 F1 | 	sub	fp, #32
03324     28 18 06 F1 | 	add	local01, #40
03328     0C 25 0A FB | 	rdlong	local07, local01 wz
0332c     60 00 90 5D |  if_ne	jmp	#LR__0174
03330     18 50 05 F1 | 	add	fp, #24
03334     A8 18 02 FB | 	rdlong	local01, fp
03338     18 50 85 F1 | 	sub	fp, #24
0333c     1C 18 06 F1 | 	add	local01, #28
03340     0C 25 0A FB | 	rdlong	local07, local01 wz
03344     28 00 90 AD |  if_e	jmp	#LR__0172
03348     20 50 05 F1 | 	add	fp, #32
0334c     A8 18 02 FB | 	rdlong	local01, fp
03350     08 50 85 F1 | 	sub	fp, #8
03354     A8 24 02 FB | 	rdlong	local07, fp
03358     18 50 85 F1 | 	sub	fp, #24
0335c     1C 24 06 F1 | 	add	local07, #28
03360     12 1F 02 FB | 	rdlong	local04, local07
03364     28 18 06 F1 | 	add	local01, #40
03368     0C 1F 62 FC | 	wrlong	local04, local01
0336c     20 00 90 FD | 	jmp	#LR__0173
03370                 | LR__0172
03370     20 50 05 F1 | 	add	fp, #32
03374     A8 18 02 FB | 	rdlong	local01, fp
03378     20 50 85 F1 | 	sub	fp, #32
0337c     F1 0E 02 F6 | 	mov	arg01, objptr
03380     F3 10 02 F6 | 	mov	arg02, ptr___system____default_flush_
03384     B8 E4 BF FD | 	call	#__system___make_methodptr
03388     28 18 06 F1 | 	add	local01, #40
0338c     0C F5 61 FC | 	wrlong	result1, local01
03390                 | LR__0173
03390                 | LR__0174
03390                 | LR__0175
03390     14 50 05 F1 | 	add	fp, #20
03394     A8 18 0A FB | 	rdlong	local01, fp wz
03398     1C EE 05 A1 |  if_e	add	ptr___system__dat__, #28
0339c     F7 00 68 AC |  if_e	wrlong	#0, ptr___system__dat__
033a0     1C EE 85 A1 |  if_e	sub	ptr___system__dat__, #28
033a4     A8 F4 01 FB | 	rdlong	result1, fp
033a8     14 50 85 F1 | 	sub	fp, #20
033ac                 | LR__0176
033ac     A8 F0 03 F6 | 	mov	ptra, fp
033b0     B3 00 A0 FD | 	call	#popregs_
033b4                 | __system___openraw_ret
033b4     2D 00 64 FD | 	ret
033b8                 | 
033b8                 | __system___closeraw
033b8     06 4C 05 F6 | 	mov	COUNT_, #6
033bc     A9 00 A0 FD | 	call	#pushregs_
033c0     07 19 02 F6 | 	mov	local01, arg01
033c4     00 1A 06 F6 | 	mov	local02, #0
033c8     08 18 06 F1 | 	add	local01, #8
033cc     0C 1D 0A FB | 	rdlong	local03, local01 wz
033d0     08 18 86 F1 | 	sub	local01, #8
033d4     14 00 90 5D |  if_ne	jmp	#LR__0177
033d8     1C EE 05 F1 | 	add	ptr___system__dat__, #28
033dc     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
033e0     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
033e4     01 F4 65 F6 | 	neg	result1, #1
033e8     90 00 90 FD | 	jmp	#LR__0180
033ec                 | LR__0177
033ec     28 18 06 F1 | 	add	local01, #40
033f0     0C 1D 0A FB | 	rdlong	local03, local01 wz
033f4     28 18 86 F1 | 	sub	local01, #40
033f8     2C 00 90 AD |  if_e	jmp	#LR__0178
033fc     28 18 06 F1 | 	add	local01, #40
03400     0C 1D 02 FB | 	rdlong	local03, local01
03404     28 18 86 F1 | 	sub	local01, #40
03408     0E 1F 02 FB | 	rdlong	local04, local03
0340c     04 1C 06 F1 | 	add	local03, #4
03410     0E 21 02 FB | 	rdlong	local05, local03
03414     0C 0F 02 F6 | 	mov	arg01, local01
03418     F1 22 02 F6 | 	mov	local06, objptr
0341c     0F E3 01 F6 | 	mov	objptr, local04
03420     2D 20 62 FD | 	call	local05
03424     11 E3 01 F6 | 	mov	objptr, local06
03428                 | LR__0178
03428     20 18 06 F1 | 	add	local01, #32
0342c     0C 1D 0A FB | 	rdlong	local03, local01 wz
03430     20 18 86 F1 | 	sub	local01, #32
03434     30 00 90 AD |  if_e	jmp	#LR__0179
03438     20 18 06 F1 | 	add	local01, #32
0343c     0C 1D 02 FB | 	rdlong	local03, local01
03440     20 18 86 F1 | 	sub	local01, #32
03444     0E 1F 02 FB | 	rdlong	local04, local03
03448     04 1C 06 F1 | 	add	local03, #4
0344c     0E 21 02 FB | 	rdlong	local05, local03
03450     0C 0F 02 F6 | 	mov	arg01, local01
03454     F1 22 02 F6 | 	mov	local06, objptr
03458     0F E3 01 F6 | 	mov	objptr, local04
0345c     2D 20 62 FD | 	call	local05
03460     11 E3 01 F6 | 	mov	objptr, local06
03464     FA 1A 02 F6 | 	mov	local02, result1
03468                 | LR__0179
03468     0C 0F 02 F6 | 	mov	arg01, local01
0346c     00 10 06 F6 | 	mov	arg02, #0
03470     30 12 06 F6 | 	mov	arg03, #48
03474     99 00 A0 FD | 	call	#\builtin_bytefill_
03478     0D F5 01 F6 | 	mov	result1, local02
0347c                 | LR__0180
0347c     A8 F0 03 F6 | 	mov	ptra, fp
03480     B3 00 A0 FD | 	call	#popregs_
03484                 | __system___closeraw_ret
03484     2D 00 64 FD | 	ret
03488                 | 
03488                 | __system___vfs_open_sdcardx
03488     06 4C 05 F6 | 	mov	COUNT_, #6
0348c     A9 00 A0 FD | 	call	#pushregs_
03490     02 00 00 FF 
03494     88 EE 05 F1 | 	add	ptr___system__dat__, ##1160
03498     07 19 02 F6 | 	mov	local01, arg01
0349c     08 1B 02 F6 | 	mov	local02, arg02
034a0     09 1D 02 F6 | 	mov	local03, arg03
034a4     0A 17 02 F6 | 	mov	arg05, arg04
034a8     00 0E 06 F6 | 	mov	arg01, #0
034ac     0C 11 02 F6 | 	mov	arg02, local01
034b0     0D 13 02 F6 | 	mov	arg03, local02
034b4     0E 15 02 F6 | 	mov	arg04, local03
034b8     F1 1E 02 F6 | 	mov	local04, objptr
034bc     F7 E2 01 F6 | 	mov	objptr, ptr___system__dat__
034c0     02 00 00 FF 
034c4     88 EE 85 F1 | 	sub	ptr___system__dat__, ##1160
034c8     50 1F B0 FD | 	call	#_ff_cc_disk_setpins
034cc     0F E3 01 F6 | 	mov	objptr, local04
034d0     FA 20 0A F6 | 	mov	local05, result1 wz
034d4     38 00 90 5D |  if_ne	jmp	#LR__0181
034d8     02 00 00 FF 
034dc     88 EE 05 F1 | 	add	ptr___system__dat__, ##1160
034e0     F7 22 02 F6 | 	mov	local06, ptr___system__dat__
034e4     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
034e8     02 00 00 FF 
034ec     88 EE 85 F1 | 	sub	ptr___system__dat__, ##1160
034f0     68 00 00 FF 
034f4     70 10 06 F6 | 	mov	arg02, ##@LR__0892
034f8     00 12 06 F6 | 	mov	arg03, #0
034fc     F1 1C 02 F6 | 	mov	local03, objptr
03500     11 E3 01 F6 | 	mov	objptr, local06
03504     F4 5B B0 FD | 	call	#_ff_cc_f_mount
03508     0E E3 01 F6 | 	mov	objptr, local03
0350c     FA 20 02 F6 | 	mov	local05, result1
03510                 | LR__0181
03510     00 20 0E F2 | 	cmp	local05, #0 wz
03514     18 00 90 AD |  if_e	jmp	#LR__0182
03518     10 0F 6A F6 | 	neg	arg01, local05 wz
0351c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03520     F7 0E 62 FC | 	wrlong	arg01, ptr___system__dat__
03524     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03528     00 F4 05 F6 | 	mov	result1, #0
0352c     14 00 90 FD | 	jmp	#LR__0183
03530                 | LR__0182
03530                 | ' get_vfs()
03530                 | ' {
03530                 | '     return &fat_vfs;
03530     01 00 00 FF 
03534     CC F0 05 F1 | 	add	ptr__ff_cc_dat__, ##716
03538     F8 F4 01 F6 | 	mov	result1, ptr__ff_cc_dat__
0353c     01 00 00 FF 
03540     CC F0 85 F1 | 	sub	ptr__ff_cc_dat__, ##716
03544                 | LR__0183
03544     A8 F0 03 F6 | 	mov	ptra, fp
03548     B3 00 A0 FD | 	call	#popregs_
0354c                 | __system___vfs_open_sdcardx_ret
0354c     2D 00 64 FD | 	ret
03550                 | 
03550                 | __system____default_getc
03550     05 4C 05 F6 | 	mov	COUNT_, #5
03554     A9 00 A0 FD | 	call	#pushregs_
03558     07 19 02 F6 | 	mov	local01, arg01
0355c     0C 1B 02 FB | 	rdlong	local02, local01
03560     08 1A 06 F1 | 	add	local02, #8
03564     0D 1D 02 FB | 	rdlong	local03, local02
03568     08 1A 86 F1 | 	sub	local02, #8
0356c     02 1C CE F7 | 	test	local03, #2 wz
03570     08 00 90 AD |  if_e	jmp	#LR__0184
03574     0C 0F 02 F6 | 	mov	arg01, local01
03578     8C 01 B0 FD | 	call	#__system____default_flush
0357c                 | LR__0184
0357c     08 1A 06 F1 | 	add	local02, #8
03580     0D 1D 02 FB | 	rdlong	local03, local02
03584     01 1C 46 F5 | 	or	local03, #1
03588     0D 1D 62 FC | 	wrlong	local03, local02
0358c     08 1A 86 F1 | 	sub	local02, #8
03590     0D 1F 0A FB | 	rdlong	local04, local02 wz
03594     0C 00 90 5D |  if_ne	jmp	#LR__0185
03598     0C 0F 02 F6 | 	mov	arg01, local01
0359c     2C 11 B0 FD | 	call	#__system____default_filbuf
035a0     FA 1E 02 F6 | 	mov	local04, result1
035a4                 | LR__0185
035a4     01 1E 56 F2 | 	cmps	local04, #1 wc
035a8     01 F4 65 C6 |  if_b	neg	result1, #1
035ac     1C 00 90 CD |  if_b	jmp	#LR__0186
035b0     01 1E 86 F1 | 	sub	local04, #1
035b4     0D 1F 62 FC | 	wrlong	local04, local02
035b8     04 1A 06 F1 | 	add	local02, #4
035bc     0D 21 02 FB | 	rdlong	local05, local02
035c0     10 F5 C1 FA | 	rdbyte	result1, local05
035c4     01 20 06 F1 | 	add	local05, #1
035c8     0D 21 62 FC | 	wrlong	local05, local02
035cc                 | LR__0186
035cc     A8 F0 03 F6 | 	mov	ptra, fp
035d0     B3 00 A0 FD | 	call	#popregs_
035d4                 | __system____default_getc_ret
035d4     2D 00 64 FD | 	ret
035d8                 | 
035d8                 | __system____default_putc
035d8     06 4C 05 F6 | 	mov	COUNT_, #6
035dc     A9 00 A0 FD | 	call	#pushregs_
035e0     07 19 02 F6 | 	mov	local01, arg01
035e4     08 1B 02 F6 | 	mov	local02, arg02
035e8     0D 1D 02 FB | 	rdlong	local03, local02
035ec     08 1C 06 F1 | 	add	local03, #8
035f0     0E 1F 02 FB | 	rdlong	local04, local03
035f4     08 1C 86 F1 | 	sub	local03, #8
035f8     01 1E CE F7 | 	test	local04, #1 wz
035fc     08 00 90 AD |  if_e	jmp	#LR__0187
03600     0D 0F 02 F6 | 	mov	arg01, local02
03604     00 01 B0 FD | 	call	#__system____default_flush
03608                 | LR__0187
03608     08 1C 06 F1 | 	add	local03, #8
0360c     0E 1F 02 FB | 	rdlong	local04, local03
03610     02 1E 46 F5 | 	or	local04, #2
03614     0E 1F 62 FC | 	wrlong	local04, local03
03618     08 1C 86 F1 | 	sub	local03, #8
0361c     0E 21 02 FB | 	rdlong	local05, local03
03620     10 23 02 F6 | 	mov	local06, local05
03624     0C 1C 06 F1 | 	add	local03, #12
03628     0E 23 02 F1 | 	add	local06, local03
0362c     11 19 42 FC | 	wrbyte	local01, local06
03630     FF 18 06 F5 | 	and	local01, #255
03634     01 20 06 F1 | 	add	local05, #1
03638     0C 1C 86 F1 | 	sub	local03, #12
0363c     0E 21 62 FC | 	wrlong	local05, local03
03640     02 00 00 FF 
03644     00 20 0E F2 | 	cmp	local05, ##1024 wz
03648     10 00 90 5D |  if_ne	jmp	#LR__0188
0364c     0D 0F 02 F6 | 	mov	arg01, local02
03650     B4 00 B0 FD | 	call	#__system____default_flush
03654     00 F4 0D F2 | 	cmp	result1, #0 wz
03658     01 18 66 56 |  if_ne	neg	local01, #1
0365c                 | LR__0188
0365c     0C F5 01 F6 | 	mov	result1, local01
03660     A8 F0 03 F6 | 	mov	ptra, fp
03664     B3 00 A0 FD | 	call	#popregs_
03668                 | __system____default_putc_ret
03668     2D 00 64 FD | 	ret
0366c                 | 
0366c                 | __system____default_putc_terminal
0366c     06 4C 05 F6 | 	mov	COUNT_, #6
03670     A9 00 A0 FD | 	call	#pushregs_
03674     07 19 02 F6 | 	mov	local01, arg01
03678     08 1B 02 F6 | 	mov	local02, arg02
0367c     0D 1D 02 FB | 	rdlong	local03, local02
03680     08 1C 06 F1 | 	add	local03, #8
03684     0E 1F 02 FB | 	rdlong	local04, local03
03688     08 1C 86 F1 | 	sub	local03, #8
0368c     01 1E CE F7 | 	test	local04, #1 wz
03690     08 00 90 AD |  if_e	jmp	#LR__0189
03694     0D 0F 02 F6 | 	mov	arg01, local02
03698     6C 00 B0 FD | 	call	#__system____default_flush
0369c                 | LR__0189
0369c     08 1C 06 F1 | 	add	local03, #8
036a0     0E 1F 02 FB | 	rdlong	local04, local03
036a4     02 1E 46 F5 | 	or	local04, #2
036a8     0E 1F 62 FC | 	wrlong	local04, local03
036ac     08 1C 86 F1 | 	sub	local03, #8
036b0     0E 21 02 FB | 	rdlong	local05, local03
036b4     10 23 02 F6 | 	mov	local06, local05
036b8     0C 1C 06 F1 | 	add	local03, #12
036bc     0E 23 02 F1 | 	add	local06, local03
036c0     11 19 42 FC | 	wrbyte	local01, local06
036c4     FF 18 06 F5 | 	and	local01, #255
036c8     0C 1C 86 F1 | 	sub	local03, #12
036cc     01 20 06 F1 | 	add	local05, #1
036d0     0E 21 62 FC | 	wrlong	local05, local03
036d4     0A 18 0E F2 | 	cmp	local01, #10 wz
036d8     0C 00 90 AD |  if_e	jmp	#LR__0190
036dc     02 00 00 FF 
036e0     00 20 0E F2 | 	cmp	local05, ##1024 wz
036e4     10 00 90 5D |  if_ne	jmp	#LR__0191
036e8                 | LR__0190
036e8     0D 0F 02 F6 | 	mov	arg01, local02
036ec     18 00 B0 FD | 	call	#__system____default_flush
036f0     00 F4 0D F2 | 	cmp	result1, #0 wz
036f4     01 18 66 56 |  if_ne	neg	local01, #1
036f8                 | LR__0191
036f8     0C F5 01 F6 | 	mov	result1, local01
036fc     A8 F0 03 F6 | 	mov	ptra, fp
03700     B3 00 A0 FD | 	call	#popregs_
03704                 | __system____default_putc_terminal_ret
03704     2D 00 64 FD | 	ret
03708                 | 
03708                 | __system____default_flush
03708     0D 4C 05 F6 | 	mov	COUNT_, #13
0370c     A9 00 A0 FD | 	call	#pushregs_
03710     07 19 02 F6 | 	mov	local01, arg01
03714     0C 1B 02 FB | 	rdlong	local02, local01
03718     0D 1D 02 FB | 	rdlong	local03, local02
0371c     08 1A 06 F1 | 	add	local02, #8
03720     0D 1F 02 FB | 	rdlong	local04, local02
03724     08 1A 86 F1 | 	sub	local02, #8
03728     02 1E CE F7 | 	test	local04, #2 wz
0372c     B8 00 90 AD |  if_e	jmp	#LR__0194
03730     01 1C 56 F2 | 	cmps	local03, #1 wc
03734     24 01 90 CD |  if_b	jmp	#LR__0196
03738     08 18 06 F1 | 	add	local01, #8
0373c     0C 1F 02 FB | 	rdlong	local04, local01
03740     08 18 86 F1 | 	sub	local01, #8
03744     40 1E CE F7 | 	test	local04, #64 wz
03748     5C 00 90 AD |  if_e	jmp	#LR__0193
0374c     08 18 06 F1 | 	add	local01, #8
03750     0C 1F 02 FB | 	rdlong	local04, local01
03754     08 18 86 F1 | 	sub	local01, #8
03758     80 1E CE F7 | 	test	local04, #128 wz
0375c     48 00 90 AD |  if_e	jmp	#LR__0192
03760     2C 18 06 F1 | 	add	local01, #44
03764     0C 1F 02 FB | 	rdlong	local04, local01
03768     2C 18 86 F1 | 	sub	local01, #44
0376c     0F 21 02 FB | 	rdlong	local05, local04
03770     04 1E 06 F1 | 	add	local04, #4
03774     0F 23 02 FB | 	rdlong	local06, local04
03778     0C 0F 02 F6 | 	mov	arg01, local01
0377c     00 10 06 F6 | 	mov	arg02, #0
03780     02 12 06 F6 | 	mov	arg03, #2
03784     F1 24 02 F6 | 	mov	local07, objptr
03788     10 E3 01 F6 | 	mov	objptr, local05
0378c     2D 22 62 FD | 	call	local06
03790     12 E3 01 F6 | 	mov	objptr, local07
03794     08 18 06 F1 | 	add	local01, #8
03798     0C 1F 02 FB | 	rdlong	local04, local01
0379c     80 1E 26 F5 | 	andn	local04, #128
037a0     0C 1F 62 FC | 	wrlong	local04, local01
037a4     08 18 86 F1 | 	sub	local01, #8
037a8                 | LR__0192
037a8                 | LR__0193
037a8     14 18 06 F1 | 	add	local01, #20
037ac     0C 1F 02 FB | 	rdlong	local04, local01
037b0     14 18 86 F1 | 	sub	local01, #20
037b4     0F 21 02 FB | 	rdlong	local05, local04
037b8     04 1E 06 F1 | 	add	local04, #4
037bc     0F 23 02 FB | 	rdlong	local06, local04
037c0     0C 1A 06 F1 | 	add	local02, #12
037c4     0D 11 02 F6 | 	mov	arg02, local02
037c8     0C 1A 86 F1 | 	sub	local02, #12
037cc     0C 0F 02 F6 | 	mov	arg01, local01
037d0     0E 13 02 F6 | 	mov	arg03, local03
037d4     F1 24 02 F6 | 	mov	local07, objptr
037d8     10 E3 01 F6 | 	mov	objptr, local05
037dc     2D 22 62 FD | 	call	local06
037e0     12 E3 01 F6 | 	mov	objptr, local07
037e4     74 00 90 FD | 	jmp	#LR__0196
037e8                 | LR__0194
037e8     08 1A 06 F1 | 	add	local02, #8
037ec     0D 1F 02 FB | 	rdlong	local04, local02
037f0     08 1A 86 F1 | 	sub	local02, #8
037f4     01 1E CE F7 | 	test	local04, #1 wz
037f8     60 00 90 AD |  if_e	jmp	#LR__0195
037fc     00 1C 0E F2 | 	cmp	local03, #0 wz
03800     58 00 90 AD |  if_e	jmp	#LR__0195
03804     2C 18 06 F1 | 	add	local01, #44
03808     0C 27 02 FB | 	rdlong	local08, local01
0380c     2C 18 86 F1 | 	sub	local01, #44
03810     13 1F 02 F6 | 	mov	local04, local08
03814     0F 21 02 FB | 	rdlong	local05, local04
03818     04 1E 06 F1 | 	add	local04, #4
0381c     0F 29 02 FB | 	rdlong	local09, local04
03820     14 23 02 F6 | 	mov	local06, local09
03824     0C 2B 02 F6 | 	mov	local10, local01
03828     0E 2D 62 F6 | 	neg	local11, local03
0382c     01 2E 06 F6 | 	mov	local12, #1
03830     15 0F 02 F6 | 	mov	arg01, local10
03834     16 11 02 F6 | 	mov	arg02, local11
03838     01 12 06 F6 | 	mov	arg03, #1
0383c     F1 24 02 F6 | 	mov	local07, objptr
03840     10 E3 01 F6 | 	mov	objptr, local05
03844     2D 22 62 FD | 	call	local06
03848     12 E3 01 F6 | 	mov	objptr, local07
0384c     FA 1E 02 F6 | 	mov	local04, result1
03850     0F 31 02 F6 | 	mov	local13, local04
03854     00 30 56 F2 | 	cmps	local13, #0 wc
03858     0E 31 02 36 |  if_ae	mov	local13, local03
0385c                 | LR__0195
0385c                 | LR__0196
0385c     0D 01 68 FC | 	wrlong	#0, local02
03860     04 1A 06 F1 | 	add	local02, #4
03864     0D 01 68 FC | 	wrlong	#0, local02
03868     04 1A 06 F1 | 	add	local02, #4
0386c     0D 01 68 FC | 	wrlong	#0, local02
03870     00 F4 05 F6 | 	mov	result1, #0
03874     A8 F0 03 F6 | 	mov	ptra, fp
03878     B3 00 A0 FD | 	call	#popregs_
0387c                 | __system____default_flush_ret
0387c     2D 00 64 FD | 	ret
03880                 | 
03880                 | __system__stat
03880     09 4C 05 F6 | 	mov	COUNT_, #9
03884     A9 00 A0 FD | 	call	#pushregs_
03888     07 19 02 F6 | 	mov	local01, arg01
0388c     08 1B 02 F6 | 	mov	local02, arg02
03890     40 EF 05 F1 | 	add	ptr___system__dat__, #320
03894     F7 F4 01 F6 | 	mov	result1, ptr___system__dat__
03898     40 EF 85 F1 | 	sub	ptr___system__dat__, #320
0389c     FA 1C 02 F6 | 	mov	local03, result1
038a0     0E 0F 02 F6 | 	mov	arg01, local03
038a4     0C 11 02 F6 | 	mov	arg02, local01
038a8     00 12 06 F6 | 	mov	arg03, #0
038ac     40 E3 BF FD | 	call	#__system____getvfsforfile
038b0     FA 1E 0A F6 | 	mov	local04, result1 wz
038b4     14 00 90 AD |  if_e	jmp	#LR__0197
038b8     2C 1E 06 F1 | 	add	local04, #44
038bc     0F 21 02 FB | 	rdlong	local05, local04
038c0     2C 1E 86 F1 | 	sub	local04, #44
038c4     10 23 0A F6 | 	mov	local06, local05 wz
038c8     14 00 90 5D |  if_ne	jmp	#LR__0198
038cc                 | LR__0197
038cc     1C EE 05 F1 | 	add	ptr___system__dat__, #28
038d0     F7 20 68 FC | 	wrlong	#16, ptr___system__dat__
038d4     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
038d8     01 F4 65 F6 | 	neg	result1, #1
038dc     44 00 90 FD | 	jmp	#LR__0199
038e0                 | LR__0198
038e0     0D 0F 02 F6 | 	mov	arg01, local02
038e4     00 10 06 F6 | 	mov	arg02, #0
038e8     30 12 06 F6 | 	mov	arg03, #48
038ec     07 25 02 F6 | 	mov	local07, arg01
038f0     99 00 A0 FD | 	call	#\builtin_bytefill_
038f4     12 F5 01 F6 | 	mov	result1, local07
038f8     2C 1E 06 F1 | 	add	local04, #44
038fc     0F 23 02 FB | 	rdlong	local06, local04
03900     11 21 02 FB | 	rdlong	local05, local06
03904     04 22 06 F1 | 	add	local06, #4
03908     11 27 02 FB | 	rdlong	local08, local06
0390c     0E 0F 02 F6 | 	mov	arg01, local03
03910     0D 11 02 F6 | 	mov	arg02, local02
03914     F1 28 02 F6 | 	mov	local09, objptr
03918     10 E3 01 F6 | 	mov	objptr, local05
0391c     2D 26 62 FD | 	call	local08
03920     14 E3 01 F6 | 	mov	objptr, local09
03924                 | LR__0199
03924     A8 F0 03 F6 | 	mov	ptra, fp
03928     B3 00 A0 FD | 	call	#popregs_
0392c                 | __system__stat_ret
0392c     2D 00 64 FD | 	ret
03930                 | 
03930                 | __system__open
03930     07 4C 05 F6 | 	mov	COUNT_, #7
03934     A9 00 A0 FD | 	call	#pushregs_
03938     07 19 02 F6 | 	mov	local01, arg01
0393c     08 1B 02 F6 | 	mov	local02, arg02
03940     09 1D 02 F6 | 	mov	local03, arg03
03944     01 00 00 FF 
03948     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
0394c     F7 1E 02 F6 | 	mov	local04, ptr___system__dat__
03950     00 20 06 F6 | 	mov	local05, #0
03954     01 00 00 FF 
03958     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
0395c     CC C6 9F FE | 	loc	pa,	#(@LR__0201-@LR__0200)
03960     8C 00 A0 FD | 	call	#FCACHE_LOAD_
03964                 | LR__0200
03964     0A 20 56 F2 | 	cmps	local05, #10 wc
03968     24 00 90 3D |  if_ae	jmp	#LR__0202
0396c     10 23 02 F6 | 	mov	local06, local05
03970     01 22 66 F0 | 	shl	local06, #1
03974     10 23 02 F1 | 	add	local06, local05
03978     04 22 66 F0 | 	shl	local06, #4
0397c     0F 23 02 F1 | 	add	local06, local04
03980     08 22 06 F1 | 	add	local06, #8
03984     11 25 0A FB | 	rdlong	local07, local06 wz
03988     01 20 06 51 |  if_ne	add	local05, #1
0398c     D4 FF 9F 5D |  if_ne	jmp	#LR__0200
03990                 | LR__0201
03990                 | LR__0202
03990     0A 20 0E F2 | 	cmp	local05, #10 wz
03994     14 00 90 5D |  if_ne	jmp	#LR__0203
03998     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0399c     F7 16 68 FC | 	wrlong	#11, ptr___system__dat__
039a0     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
039a4     01 F4 65 F6 | 	neg	result1, #1
039a8     2C 00 90 FD | 	jmp	#LR__0204
039ac                 | LR__0203
039ac     10 0F 02 F6 | 	mov	arg01, local05
039b0     01 0E 66 F0 | 	shl	arg01, #1
039b4     10 0F 02 F1 | 	add	arg01, local05
039b8     04 0E 66 F0 | 	shl	arg01, #4
039bc     0F 0F 02 F1 | 	add	arg01, local04
039c0     0C 11 02 F6 | 	mov	arg02, local01
039c4     0D 13 02 F6 | 	mov	arg03, local02
039c8     0E 15 02 F6 | 	mov	arg04, local03
039cc     B4 F4 BF FD | 	call	#__system___openraw
039d0     FA F4 09 F6 | 	mov	result1, result1 wz
039d4     10 F5 01 A6 |  if_e	mov	result1, local05
039d8                 | LR__0204
039d8     A8 F0 03 F6 | 	mov	ptra, fp
039dc     B3 00 A0 FD | 	call	#popregs_
039e0                 | __system__open_ret
039e0     2D 00 64 FD | 	ret
039e4                 | 
039e4                 | __system__write
039e4     03 4C 05 F6 | 	mov	COUNT_, #3
039e8     A9 00 A0 FD | 	call	#pushregs_
039ec     07 19 02 F6 | 	mov	local01, arg01
039f0     08 1B 02 F6 | 	mov	local02, arg02
039f4     09 1D 02 F6 | 	mov	local03, arg03
039f8     0A 18 16 F2 | 	cmp	local01, #10 wc
039fc     14 00 90 CD |  if_b	jmp	#LR__0205
03a00     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03a04     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
03a08     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03a0c     01 F4 65 F6 | 	neg	result1, #1
03a10     30 00 90 FD | 	jmp	#LR__0206
03a14                 | LR__0205
03a14     0C 0F 02 F6 | 	mov	arg01, local01
03a18     01 0E 66 F0 | 	shl	arg01, #1
03a1c     0C 0F 02 F1 | 	add	arg01, local01
03a20     04 0E 66 F0 | 	shl	arg01, #4
03a24     01 00 00 FF 
03a28     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
03a2c     F7 0E 02 F1 | 	add	arg01, ptr___system__dat__
03a30     0D 11 02 F6 | 	mov	arg02, local02
03a34     0E 13 02 F6 | 	mov	arg03, local03
03a38     01 00 00 FF 
03a3c     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
03a40     EC 07 B0 FD | 	call	#__system___vfswrite
03a44                 | LR__0206
03a44     A8 F0 03 F6 | 	mov	ptra, fp
03a48     B3 00 A0 FD | 	call	#popregs_
03a4c                 | __system__write_ret
03a4c     2D 00 64 FD | 	ret
03a50                 | 
03a50                 | __system__read
03a50     03 4C 05 F6 | 	mov	COUNT_, #3
03a54     A9 00 A0 FD | 	call	#pushregs_
03a58     07 19 02 F6 | 	mov	local01, arg01
03a5c     08 1B 02 F6 | 	mov	local02, arg02
03a60     09 1D 02 F6 | 	mov	local03, arg03
03a64     0A 18 16 F2 | 	cmp	local01, #10 wc
03a68     14 00 90 CD |  if_b	jmp	#LR__0207
03a6c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03a70     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
03a74     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03a78     01 F4 65 F6 | 	neg	result1, #1
03a7c     30 00 90 FD | 	jmp	#LR__0208
03a80                 | LR__0207
03a80     0C 0F 02 F6 | 	mov	arg01, local01
03a84     01 0E 66 F0 | 	shl	arg01, #1
03a88     0C 0F 02 F1 | 	add	arg01, local01
03a8c     04 0E 66 F0 | 	shl	arg01, #4
03a90     01 00 00 FF 
03a94     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
03a98     F7 0E 02 F1 | 	add	arg01, ptr___system__dat__
03a9c     0D 11 02 F6 | 	mov	arg02, local02
03aa0     0E 13 02 F6 | 	mov	arg03, local03
03aa4     01 00 00 FF 
03aa8     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
03aac     2C 09 B0 FD | 	call	#__system___vfsread
03ab0                 | LR__0208
03ab0     A8 F0 03 F6 | 	mov	ptra, fp
03ab4     B3 00 A0 FD | 	call	#popregs_
03ab8                 | __system__read_ret
03ab8     2D 00 64 FD | 	ret
03abc                 | 
03abc                 | __system__close
03abc     01 4C 05 F6 | 	mov	COUNT_, #1
03ac0     A9 00 A0 FD | 	call	#pushregs_
03ac4     07 19 02 F6 | 	mov	local01, arg01
03ac8     0A 18 16 F2 | 	cmp	local01, #10 wc
03acc     14 00 90 CD |  if_b	jmp	#LR__0209
03ad0     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03ad4     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
03ad8     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03adc     01 F4 65 F6 | 	neg	result1, #1
03ae0     28 00 90 FD | 	jmp	#LR__0210
03ae4                 | LR__0209
03ae4     0C 0F 02 F6 | 	mov	arg01, local01
03ae8     01 0E 66 F0 | 	shl	arg01, #1
03aec     0C 0F 02 F1 | 	add	arg01, local01
03af0     04 0E 66 F0 | 	shl	arg01, #4
03af4     01 00 00 FF 
03af8     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
03afc     F7 0E 02 F1 | 	add	arg01, ptr___system__dat__
03b00     01 00 00 FF 
03b04     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
03b08     AC F8 BF FD | 	call	#__system___closeraw
03b0c                 | LR__0210
03b0c     A8 F0 03 F6 | 	mov	ptra, fp
03b10     B3 00 A0 FD | 	call	#popregs_
03b14                 | __system__close_ret
03b14     2D 00 64 FD | 	ret
03b18                 | 
03b18                 | __system__lseek
03b18     09 4C 05 F6 | 	mov	COUNT_, #9
03b1c     A9 00 A0 FD | 	call	#pushregs_
03b20     07 19 02 F6 | 	mov	local01, arg01
03b24     08 1B 02 F6 | 	mov	local02, arg02
03b28     09 1D 02 F6 | 	mov	local03, arg03
03b2c     0A 18 16 F2 | 	cmp	local01, #10 wc
03b30     14 00 90 CD |  if_b	jmp	#LR__0211
03b34     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03b38     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
03b3c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03b40     01 F4 65 F6 | 	neg	result1, #1
03b44     D0 00 90 FD | 	jmp	#LR__0215
03b48                 | LR__0211
03b48     0C 1F 02 F6 | 	mov	local04, local01
03b4c     01 1E 66 F0 | 	shl	local04, #1
03b50     0C 1F 02 F1 | 	add	local04, local01
03b54     04 1E 66 F0 | 	shl	local04, #4
03b58     01 00 00 FF 
03b5c     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
03b60     F7 1E 02 F1 | 	add	local04, ptr___system__dat__
03b64     2C 1E 06 F1 | 	add	local04, #44
03b68     0F 21 0A FB | 	rdlong	local05, local04 wz
03b6c     2C 1E 86 F1 | 	sub	local04, #44
03b70     01 00 00 FF 
03b74     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
03b78     14 00 90 5D |  if_ne	jmp	#LR__0212
03b7c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03b80     F7 20 68 FC | 	wrlong	#16, ptr___system__dat__
03b84     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03b88     01 F4 65 F6 | 	neg	result1, #1
03b8c     88 00 90 FD | 	jmp	#LR__0215
03b90                 | LR__0212
03b90     08 1E 06 F1 | 	add	local04, #8
03b94     0F 21 02 FB | 	rdlong	local05, local04
03b98     08 1E 86 F1 | 	sub	local04, #8
03b9c     40 20 CE F7 | 	test	local05, #64 wz
03ba0     14 00 90 AD |  if_e	jmp	#LR__0213
03ba4     08 1E 06 F1 | 	add	local04, #8
03ba8     0F 21 02 FB | 	rdlong	local05, local04
03bac     80 20 46 F5 | 	or	local05, #128
03bb0     0F 21 62 FC | 	wrlong	local05, local04
03bb4     08 1E 86 F1 | 	sub	local04, #8
03bb8                 | LR__0213
03bb8     2C 1E 06 F1 | 	add	local04, #44
03bbc     0F 21 02 FB | 	rdlong	local05, local04
03bc0     2C 1E 86 F1 | 	sub	local04, #44
03bc4     10 23 02 FB | 	rdlong	local06, local05
03bc8     04 20 06 F1 | 	add	local05, #4
03bcc     10 25 02 FB | 	rdlong	local07, local05
03bd0     0F 0F 02 F6 | 	mov	arg01, local04
03bd4     0D 11 02 F6 | 	mov	arg02, local02
03bd8     0E 13 02 F6 | 	mov	arg03, local03
03bdc     F1 26 02 F6 | 	mov	local08, objptr
03be0     11 E3 01 F6 | 	mov	objptr, local06
03be4     2D 24 62 FD | 	call	local07
03be8     13 E3 01 F6 | 	mov	objptr, local08
03bec     FA 28 02 F6 | 	mov	local09, result1
03bf0     00 28 56 F2 | 	cmps	local09, #0 wc
03bf4     1C 00 90 3D |  if_ae	jmp	#LR__0214
03bf8     14 0F 6A F6 | 	neg	arg01, local09 wz
03bfc     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03c00     F7 0E 62 FC | 	wrlong	arg01, ptr___system__dat__
03c04     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03c08     01 F4 65 56 |  if_ne	neg	result1, #1
03c0c     00 F4 05 A6 |  if_e	mov	result1, #0
03c10     04 00 90 FD | 	jmp	#LR__0215
03c14                 | LR__0214
03c14     14 F5 01 F6 | 	mov	result1, local09
03c18                 | LR__0215
03c18     A8 F0 03 F6 | 	mov	ptra, fp
03c1c     B3 00 A0 FD | 	call	#popregs_
03c20                 | __system__lseek_ret
03c20     2D 00 64 FD | 	ret
03c24                 | 
03c24                 | __system__ioctl
03c24     08 4C 05 F6 | 	mov	COUNT_, #8
03c28     A9 00 A0 FD | 	call	#pushregs_
03c2c     08 19 02 F6 | 	mov	local01, arg02
03c30     09 1B 02 F6 | 	mov	local02, arg03
03c34     9C 01 B0 FD | 	call	#__system____getftab
03c38     FA 1C 0A F6 | 	mov	local03, result1 wz
03c3c     14 00 90 5D |  if_ne	jmp	#LR__0216
03c40     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03c44     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
03c48     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03c4c     01 F4 65 F6 | 	neg	result1, #1
03c50     5C 00 90 FD | 	jmp	#LR__0218
03c54                 | LR__0216
03c54     24 1C 06 F1 | 	add	local03, #36
03c58     0E 1F 02 FB | 	rdlong	local04, local03
03c5c     24 1C 86 F1 | 	sub	local03, #36
03c60     0F 21 02 FB | 	rdlong	local05, local04
03c64     04 1E 06 F1 | 	add	local04, #4
03c68     0F 23 02 FB | 	rdlong	local06, local04
03c6c     0E 0F 02 F6 | 	mov	arg01, local03
03c70     0C 11 02 F6 | 	mov	arg02, local01
03c74     0D 13 02 F6 | 	mov	arg03, local02
03c78     F1 24 02 F6 | 	mov	local07, objptr
03c7c     10 E3 01 F6 | 	mov	objptr, local05
03c80     2D 22 62 FD | 	call	local06
03c84     12 E3 01 F6 | 	mov	objptr, local07
03c88     FA 26 0A F6 | 	mov	local08, result1 wz
03c8c     1C 00 90 AD |  if_e	jmp	#LR__0217
03c90     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03c94     F7 26 62 FC | 	wrlong	local08, ptr___system__dat__
03c98     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03c9c     00 26 0E F2 | 	cmp	local08, #0 wz
03ca0     01 F4 65 56 |  if_ne	neg	result1, #1
03ca4     00 F4 05 A6 |  if_e	mov	result1, #0
03ca8     04 00 90 FD | 	jmp	#LR__0218
03cac                 | LR__0217
03cac     00 F4 05 F6 | 	mov	result1, #0
03cb0                 | LR__0218
03cb0     A8 F0 03 F6 | 	mov	ptra, fp
03cb4     B3 00 A0 FD | 	call	#popregs_
03cb8                 | __system__ioctl_ret
03cb8     2D 00 64 FD | 	ret
03cbc                 | 
03cbc                 | __system__chdir
03cbc     02 4C 05 F6 | 	mov	COUNT_, #2
03cc0     A9 00 A0 FD | 	call	#pushregs_
03cc4     40 F0 07 F1 | 	add	ptra, #64
03cc8     04 50 05 F1 | 	add	fp, #4
03ccc     A8 0E 62 FC | 	wrlong	arg01, fp
03cd0     04 50 05 F1 | 	add	fp, #4
03cd4     A8 10 02 F6 | 	mov	arg02, fp
03cd8     08 50 85 F1 | 	sub	fp, #8
03cdc     A0 FB BF FD | 	call	#__system__stat
03ce0     3C 50 05 F1 | 	add	fp, #60
03ce4     A8 F4 61 FC | 	wrlong	result1, fp
03ce8     3C 50 85 F1 | 	sub	fp, #60
03cec     00 F4 0D F2 | 	cmp	result1, #0 wz
03cf0     10 00 90 AD |  if_e	jmp	#LR__0219
03cf4     3C 50 05 F1 | 	add	fp, #60
03cf8     A8 F4 01 FB | 	rdlong	result1, fp
03cfc     3C 50 85 F1 | 	sub	fp, #60
03d00     C4 00 90 FD | 	jmp	#LR__0223
03d04                 | LR__0219
03d04     10 50 05 F1 | 	add	fp, #16
03d08     A8 18 02 FB | 	rdlong	local01, fp
03d0c     10 50 85 F1 | 	sub	fp, #16
03d10     78 00 00 FF 
03d14     00 18 06 F5 | 	and	local01, ##61440
03d18     08 00 00 FF 
03d1c     00 18 0E F2 | 	cmp	local01, ##4096 wz
03d20     14 00 90 AD |  if_e	jmp	#LR__0220
03d24     1C EE 05 F1 | 	add	ptr___system__dat__, #28
03d28     F7 1A 68 FC | 	wrlong	#13, ptr___system__dat__
03d2c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
03d30     01 F4 65 F6 | 	neg	result1, #1
03d34     90 00 90 FD | 	jmp	#LR__0223
03d38                 | LR__0220
03d38     04 50 05 F1 | 	add	fp, #4
03d3c     A8 1A 02 FB | 	rdlong	local02, fp
03d40     04 50 85 F1 | 	sub	fp, #4
03d44     0D 19 C2 FA | 	rdbyte	local01, local02
03d48     2F 18 0E F2 | 	cmp	local01, #47 wz
03d4c     24 00 90 5D |  if_ne	jmp	#LR__0221
03d50     40 EE 05 F1 | 	add	ptr___system__dat__, #64
03d54     F7 0E 02 F6 | 	mov	arg01, ptr___system__dat__
03d58     40 EE 85 F1 | 	sub	ptr___system__dat__, #64
03d5c     04 50 05 F1 | 	add	fp, #4
03d60     A8 10 02 FB | 	rdlong	arg02, fp
03d64     04 50 85 F1 | 	sub	fp, #4
03d68     00 13 06 F6 | 	mov	arg03, #256
03d6c     98 00 B0 FD | 	call	#__system__strncpy
03d70     50 00 90 FD | 	jmp	#LR__0222
03d74                 | LR__0221
03d74     40 EF 05 F1 | 	add	ptr___system__dat__, #320
03d78     F7 F4 01 F6 | 	mov	result1, ptr___system__dat__
03d7c     38 50 05 F1 | 	add	fp, #56
03d80     A8 F4 61 FC | 	wrlong	result1, fp
03d84     38 50 85 F1 | 	sub	fp, #56
03d88     FA 0E 02 F6 | 	mov	arg01, result1
03d8c     00 EF 85 F1 | 	sub	ptr___system__dat__, #256
03d90     F7 10 02 F6 | 	mov	arg02, ptr___system__dat__
03d94     40 EE 85 F1 | 	sub	ptr___system__dat__, #64
03d98     00 13 06 F6 | 	mov	arg03, #256
03d9c     68 00 B0 FD | 	call	#__system__strncpy
03da0     38 50 05 F1 | 	add	fp, #56
03da4     A8 0E 02 FB | 	rdlong	arg01, fp
03da8     34 50 85 F1 | 	sub	fp, #52
03dac     A8 10 02 FB | 	rdlong	arg02, fp
03db0     04 50 85 F1 | 	sub	fp, #4
03db4     40 EE 05 F1 | 	add	ptr___system__dat__, #64
03db8     F7 12 02 F6 | 	mov	arg03, ptr___system__dat__
03dbc     40 EE 85 F1 | 	sub	ptr___system__dat__, #64
03dc0     2C DE BF FD | 	call	#__system____getvfsforfile
03dc4                 | LR__0222
03dc4     00 F4 05 F6 | 	mov	result1, #0
03dc8                 | LR__0223
03dc8     A8 F0 03 F6 | 	mov	ptra, fp
03dcc     B3 00 A0 FD | 	call	#popregs_
03dd0                 | __system__chdir_ret
03dd0     2D 00 64 FD | 	ret
03dd4                 | 
03dd4                 | __system____getftab
03dd4     0A 0E 16 F2 | 	cmp	arg01, #10 wc
03dd8     00 F4 05 36 |  if_ae	mov	result1, #0
03ddc     24 00 90 3D |  if_ae	jmp	#__system____getftab_ret
03de0     07 F5 01 F6 | 	mov	result1, arg01
03de4     01 F4 65 F0 | 	shl	result1, #1
03de8     07 F5 01 F1 | 	add	result1, arg01
03dec     04 F4 65 F0 | 	shl	result1, #4
03df0     01 00 00 FF 
03df4     48 EE 05 F1 | 	add	ptr___system__dat__, ##584
03df8     F7 F4 01 F1 | 	add	result1, ptr___system__dat__
03dfc     01 00 00 FF 
03e00     48 EE 85 F1 | 	sub	ptr___system__dat__, ##584
03e04                 | __system____getftab_ret
03e04     2D 00 64 FD | 	ret
03e08                 | 
03e08                 | __system__strncpy
03e08     07 F9 01 F6 | 	mov	_var01, arg01
03e0c                 | LR__0224
03e0c     01 12 86 F1 | 	sub	arg03, #1
03e10     00 12 56 F2 | 	cmps	arg03, #0 wc
03e14     18 00 90 CD |  if_b	jmp	#LR__0225
03e18     08 FB C1 FA | 	rdbyte	_var02, arg02
03e1c     FC FA 41 FC | 	wrbyte	_var02, _var01
03e20     01 10 06 F1 | 	add	arg02, #1
03e24     FC FC C9 FA | 	rdbyte	_var03, _var01 wz
03e28     01 F8 05 F1 | 	add	_var01, #1
03e2c     DC FF 9F 5D |  if_ne	jmp	#LR__0224
03e30                 | LR__0225
03e30     E0 C1 9F FE | 	loc	pa,	#(@LR__0227-@LR__0226)
03e34     8C 00 A0 FD | 	call	#FCACHE_LOAD_
03e38                 | LR__0226
03e38     01 12 86 F1 | 	sub	arg03, #1
03e3c     00 12 56 F2 | 	cmps	arg03, #0 wc
03e40     FC 00 48 3C |  if_ae	wrbyte	#0, _var01
03e44     01 F8 05 31 |  if_ae	add	_var01, #1
03e48     EC FF 9F 3D |  if_ae	jmp	#LR__0226
03e4c                 | LR__0227
03e4c     07 F5 01 F6 | 	mov	result1, arg01
03e50                 | __system__strncpy_ret
03e50     2D 00 64 FD | 	ret
03e54                 | 
03e54                 | __system__strncat
03e54     07 F9 01 F6 | 	mov	_var01, arg01
03e58     08 FB 01 F6 | 	mov	_var02, arg02
03e5c     09 FD 01 F6 | 	mov	_var03, arg03
03e60     FD FE 09 F6 | 	mov	_var04, _var02 wz
03e64     68 00 90 AD |  if_e	jmp	#LR__0232
03e68     01 FC 15 F2 | 	cmp	_var03, #1 wc
03e6c     60 00 90 CD |  if_b	jmp	#LR__0232
03e70     FC 00 02 F6 | 	mov	_var05, _var01
03e74     D4 C1 9F FE | 	loc	pa,	#(@LR__0230-@LR__0228)
03e78     8C 00 A0 FD | 	call	#FCACHE_LOAD_
03e7c                 | LR__0228
03e7c     00 03 CA FA | 	rdbyte	_var06, _var05 wz
03e80     01 00 06 51 |  if_ne	add	_var05, #1
03e84     F4 FF 9F 5D |  if_ne	jmp	#LR__0228
03e88     FE 04 02 F6 | 	mov	_var07, _var03
03e8c                 | LR__0229
03e8c     FF 06 02 F6 | 	mov	_var08, _var04
03e90     FF 08 02 F6 | 	mov	_var09, _var04
03e94     01 08 06 F1 | 	add	_var09, #1
03e98     04 FF 01 F6 | 	mov	_var04, _var09
03e9c     03 0B C2 FA | 	rdbyte	_var10, _var08
03ea0     05 03 02 F6 | 	mov	_var06, _var10
03ea4     07 02 4E F7 | 	zerox	_var06, #7 wz
03ea8     1C 00 90 AD |  if_e	jmp	#LR__0231
03eac     02 0D 02 F6 | 	mov	_var11, _var07
03eb0     01 0C 86 F1 | 	sub	_var11, #1
03eb4     06 05 02 F6 | 	mov	_var07, _var11
03eb8     00 04 56 F2 | 	cmps	_var07, #0 wc
03ebc     00 0B 42 3C |  if_ae	wrbyte	_var10, _var05
03ec0     01 00 06 31 |  if_ae	add	_var05, #1
03ec4     C4 FF 9F 3D |  if_ae	jmp	#LR__0229
03ec8                 | LR__0230
03ec8                 | LR__0231
03ec8     00 02 06 F6 | 	mov	_var06, #0
03ecc     00 01 48 FC | 	wrbyte	#0, _var05
03ed0                 | LR__0232
03ed0     FC F4 01 F6 | 	mov	result1, _var01
03ed4                 | __system__strncat_ret
03ed4     2D 00 64 FD | 	ret
03ed8                 | 
03ed8                 | __system__strncmp
03ed8     07 F9 09 F6 | 	mov	_var01, arg01 wz
03edc     08 FB 01 F6 | 	mov	_var02, arg02
03ee0     09 FD 01 F6 | 	mov	_var03, arg03
03ee4     14 00 90 5D |  if_ne	jmp	#LR__0233
03ee8     00 FA 0D F2 | 	cmp	_var02, #0 wz
03eec     01 FE 65 56 |  if_ne	neg	_var04, #1
03ef0     00 FE 05 A6 |  if_e	mov	_var04, #0
03ef4     FF F4 01 F6 | 	mov	result1, _var04
03ef8     8C 00 90 FD | 	jmp	#__system__strncmp_ret
03efc                 | LR__0233
03efc     00 FA 0D F2 | 	cmp	_var02, #0 wz
03f00     01 F4 05 A6 |  if_e	mov	result1, #1
03f04     80 00 90 AD |  if_e	jmp	#__system__strncmp_ret
03f08     FE 00 02 F6 | 	mov	_var05, _var03
03f0c     30 C1 9F FE | 	loc	pa,	#(@LR__0235-@LR__0234)
03f10     8C 00 A0 FD | 	call	#FCACHE_LOAD_
03f14                 | LR__0234
03f14     FC 02 C2 FA | 	rdbyte	_var06, _var01
03f18     FD 04 02 F6 | 	mov	_var07, _var02
03f1c     FD 06 02 F6 | 	mov	_var08, _var02
03f20     01 06 06 F1 | 	add	_var08, #1
03f24     03 FB 01 F6 | 	mov	_var02, _var08
03f28     02 09 C2 FA | 	rdbyte	_var09, _var07
03f2c     00 FF 01 F6 | 	mov	_var04, _var05
03f30     01 FE 85 F1 | 	sub	_var04, #1
03f34     FF 00 02 F6 | 	mov	_var05, _var04
03f38     00 00 56 F2 | 	cmps	_var05, #0 wc
03f3c     01 F8 05 F1 | 	add	_var01, #1
03f40     10 00 90 CD |  if_b	jmp	#LR__0236
03f44     00 02 0E F2 | 	cmp	_var06, #0 wz
03f48     08 00 90 AD |  if_e	jmp	#LR__0236
03f4c     04 03 0A F2 | 	cmp	_var06, _var09 wz
03f50     C0 FF 9F AD |  if_e	jmp	#LR__0234
03f54                 | LR__0235
03f54                 | LR__0236
03f54     00 00 56 F2 | 	cmps	_var05, #0 wc
03f58     00 F4 05 C6 |  if_b	mov	result1, #0
03f5c     28 00 90 CD |  if_b	jmp	#__system__strncmp_ret
03f60     04 03 0A F2 | 	cmp	_var06, _var09 wz
03f64     00 F4 05 A6 |  if_e	mov	result1, #0
03f68     1C 00 90 AD |  if_e	jmp	#__system__strncmp_ret
03f6c     00 02 0E F2 | 	cmp	_var06, #0 wz
03f70     01 F4 65 A6 |  if_e	neg	result1, #1
03f74     10 00 90 AD |  if_e	jmp	#__system__strncmp_ret
03f78     00 08 0E F2 | 	cmp	_var09, #0 wz
03f7c     01 F4 05 A6 |  if_e	mov	result1, #1
03f80     01 F5 01 56 |  if_ne	mov	result1, _var06
03f84     04 F5 81 51 |  if_ne	sub	result1, _var09
03f88                 | __system__strncmp_ret
03f88     2D 00 64 FD | 	ret
03f8c                 | 
03f8c                 | __system___strrev
03f8c     07 F9 C9 FA | 	rdbyte	_var01, arg01 wz
03f90     40 00 90 AD |  if_e	jmp	#__system___strrev_ret
03f94     07 FB 01 F6 | 	mov	_var02, arg01
03f98     70 C0 9F FE | 	loc	pa,	#(@LR__0238-@LR__0237)
03f9c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
03fa0                 | LR__0237
03fa0     FD F8 C9 FA | 	rdbyte	_var01, _var02 wz
03fa4     01 FA 05 51 |  if_ne	add	_var02, #1
03fa8     F4 FF 9F 5D |  if_ne	jmp	#LR__0237
03fac                 | LR__0238
03fac     01 FA 85 F1 | 	sub	_var02, #1
03fb0                 | LR__0239
03fb0     07 FB 59 F2 | 	cmps	_var02, arg01 wcz
03fb4     1C 00 90 ED |  if_be	jmp	#LR__0240
03fb8     07 FD C1 FA | 	rdbyte	_var03, arg01
03fbc     FD FE C1 FA | 	rdbyte	_var04, _var02
03fc0     07 FF 41 FC | 	wrbyte	_var04, arg01
03fc4     FD FC 41 FC | 	wrbyte	_var03, _var02
03fc8     01 0E 06 F1 | 	add	arg01, #1
03fcc     01 FA 85 F1 | 	sub	_var02, #1
03fd0     DC FF 9F FD | 	jmp	#LR__0239
03fd4                 | LR__0240
03fd4                 | __system___strrev_ret
03fd4     2D 00 64 FD | 	ret
03fd8                 | 
03fd8                 | __system___fmtpad
03fd8     0C 4C 05 F6 | 	mov	COUNT_, #12
03fdc     A9 00 A0 FD | 	call	#pushregs_
03fe0     07 19 02 F6 | 	mov	local01, arg01
03fe4     08 1B 02 F6 | 	mov	local02, arg02
03fe8     09 1D 02 F6 | 	mov	local03, arg03
03fec     0A 1F 02 F6 | 	mov	local04, arg04
03ff0     0D 21 EA F8 | 	getbyte	local05, local02, #1
03ff4     16 1A 46 F0 | 	shr	local02, #22
03ff8     03 1A 0E F5 | 	and	local02, #3 wz
03ffc     00 22 06 F6 | 	mov	local06, #0
04000     01 1A 06 A6 |  if_e	mov	local02, #1
04004     0F 1B CA F7 | 	test	local02, local04 wz
04008     00 F4 05 A6 |  if_e	mov	result1, #0
0400c     80 00 90 AD |  if_e	jmp	#LR__0244
04010     10 1D C2 F2 | 	subr	local03, local05
04014     01 1C 56 F2 | 	cmps	local03, #1 wc
04018     00 F4 05 C6 |  if_b	mov	result1, #0
0401c     70 00 90 CD |  if_b	jmp	#LR__0244
04020     03 1A 0E F2 | 	cmp	local02, #3 wz
04024     18 00 90 5D |  if_ne	jmp	#LR__0241
04028     01 1E 0E F2 | 	cmp	local04, #1 wz
0402c     6E 24 62 FD | 	wrz	local07
04030     12 1D 02 F1 | 	add	local03, local07
04034     0E 1D 52 F6 | 	abs	local03, local03 wc
04038     01 1C 46 F0 | 	shr	local03, #1
0403c     0E 1D 82 F6 | 	negc	local03, local03
04040                 | LR__0241
04040     00 26 06 F6 | 	mov	local08, #0
04044                 | LR__0242
04044     0E 27 52 F2 | 	cmps	local08, local03 wc
04048     40 00 90 3D |  if_ae	jmp	#LR__0243
0404c     0C 29 02 F6 | 	mov	local09, local01
04050     14 25 02 FB | 	rdlong	local07, local09
04054     04 28 06 F1 | 	add	local09, #4
04058     14 2B 02 FB | 	rdlong	local10, local09
0405c     20 0E 06 F6 | 	mov	arg01, #32
04060     F1 2C 02 F6 | 	mov	local11, objptr
04064     12 E3 01 F6 | 	mov	objptr, local07
04068     2D 2A 62 FD | 	call	local10
0406c     16 E3 01 F6 | 	mov	objptr, local11
04070     FA 2E 02 F6 | 	mov	local12, result1
04074     00 2E 56 F2 | 	cmps	local12, #0 wc
04078     17 F5 01 C6 |  if_b	mov	result1, local12
0407c     10 00 90 CD |  if_b	jmp	#LR__0244
04080     17 23 02 F1 | 	add	local06, local12
04084     01 26 06 F1 | 	add	local08, #1
04088     B8 FF 9F FD | 	jmp	#LR__0242
0408c                 | LR__0243
0408c     11 F5 01 F6 | 	mov	result1, local06
04090                 | LR__0244
04090     A8 F0 03 F6 | 	mov	ptra, fp
04094     B3 00 A0 FD | 	call	#popregs_
04098                 | __system___fmtpad_ret
04098     2D 00 64 FD | 	ret
0409c                 | 
0409c                 | __system___uitoa
0409c     09 4C 05 F6 | 	mov	COUNT_, #9
040a0     A9 00 A0 FD | 	call	#pushregs_
040a4     07 19 02 F6 | 	mov	local01, arg01
040a8     08 1B 02 F6 | 	mov	local02, arg02
040ac     09 1D 02 F6 | 	mov	local03, arg03
040b0     0A 1F 02 F6 | 	mov	local04, arg04
040b4     0B 21 0A F6 | 	mov	local05, arg05 wz
040b8     0C 23 02 F6 | 	mov	local06, local01
040bc     00 24 06 F6 | 	mov	local07, #0
040c0     37 26 06 56 |  if_ne	mov	local08, #55
040c4     57 26 06 A6 |  if_e	mov	local08, #87
040c8                 | LR__0245
040c8     0E 1B 12 FD | 	qdiv	local02, local03
040cc     19 28 62 FD | 	getqy	local09
040d0     0E 1B 12 FD | 	qdiv	local02, local03
040d4     0A 28 16 F2 | 	cmp	local09, #10 wc
040d8     30 28 06 C1 |  if_b	add	local09, #48
040dc     13 29 02 31 |  if_ae	add	local09, local08
040e0     11 29 42 FC | 	wrbyte	local09, local06
040e4     01 24 06 F1 | 	add	local07, #1
040e8     01 22 06 F1 | 	add	local06, #1
040ec     18 1A 62 FD | 	getqx	local02
040f0     00 1A 0E F2 | 	cmp	local02, #0 wz
040f4     D0 FF 9F 5D |  if_ne	jmp	#LR__0245
040f8     0F 25 12 F2 | 	cmp	local07, local04 wc
040fc     C8 FF 9F CD |  if_b	jmp	#LR__0245
04100     11 01 48 FC | 	wrbyte	#0, local06
04104     0C 0F 02 F6 | 	mov	arg01, local01
04108     80 FE BF FD | 	call	#__system___strrev
0410c     12 F5 01 F6 | 	mov	result1, local07
04110     A8 F0 03 F6 | 	mov	ptra, fp
04114     B3 00 A0 FD | 	call	#popregs_
04118                 | __system___uitoa_ret
04118     2D 00 64 FD | 	ret
0411c                 | 
0411c                 | __system___gettxfunc
0411c     03 4C 05 F6 | 	mov	COUNT_, #3
04120     A9 00 A0 FD | 	call	#pushregs_
04124     AC FC BF FD | 	call	#__system____getftab
04128     FA 18 0A F6 | 	mov	local01, result1 wz
0412c     14 00 90 AD |  if_e	jmp	#LR__0246
04130     08 18 06 F1 | 	add	local01, #8
04134     0C 1B 02 FB | 	rdlong	local02, local01
04138     08 18 86 F1 | 	sub	local01, #8
0413c     0D 1D 0A F6 | 	mov	local03, local02 wz
04140     08 00 90 5D |  if_ne	jmp	#LR__0247
04144                 | LR__0246
04144     00 F4 05 F6 | 	mov	result1, #0
04148     0C 00 90 FD | 	jmp	#LR__0248
0414c                 | LR__0247
0414c     F2 10 02 F6 | 	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
04150     0C 0F 02 F6 | 	mov	arg01, local01
04154     E8 D6 BF FD | 	call	#__system___make_methodptr
04158                 | LR__0248
04158     A8 F0 03 F6 | 	mov	ptra, fp
0415c     B3 00 A0 FD | 	call	#popregs_
04160                 | __system___gettxfunc_ret
04160     2D 00 64 FD | 	ret
04164                 | 
04164                 | __system___getiolock_0110
04164     03 4C 05 F6 | 	mov	COUNT_, #3
04168     A9 00 A0 FD | 	call	#pushregs_
0416c     64 FC BF FD | 	call	#__system____getftab
04170     FA 18 0A F6 | 	mov	local01, result1 wz
04174     14 00 90 AD |  if_e	jmp	#LR__0249
04178     08 18 06 F1 | 	add	local01, #8
0417c     0C 1B 02 FB | 	rdlong	local02, local01
04180     08 18 86 F1 | 	sub	local01, #8
04184     0D 1D 0A F6 | 	mov	local03, local02 wz
04188     18 00 90 5D |  if_ne	jmp	#LR__0250
0418c                 | LR__0249
0418c     01 00 00 FF 
04190     40 EE 05 F1 | 	add	ptr___system__dat__, ##576
04194     F7 F4 01 F6 | 	mov	result1, ptr___system__dat__
04198     01 00 00 FF 
0419c     40 EE 85 F1 | 	sub	ptr___system__dat__, ##576
041a0     08 00 90 FD | 	jmp	#LR__0251
041a4                 | LR__0250
041a4     0C 18 06 F1 | 	add	local01, #12
041a8     0C F5 01 F6 | 	mov	result1, local01
041ac                 | LR__0251
041ac     A8 F0 03 F6 | 	mov	ptra, fp
041b0     B3 00 A0 FD | 	call	#popregs_
041b4                 | __system___getiolock_0110_ret
041b4     2D 00 64 FD | 	ret
041b8                 | 
041b8                 | __system___rxtxioctl_0135
041b8     02 4C 05 F6 | 	mov	COUNT_, #2
041bc     A9 00 A0 FD | 	call	#pushregs_
041c0     08 19 02 F6 | 	mov	local01, arg02
041c4     09 1B 02 F6 | 	mov	local02, arg03
041c8     00 19 0E F2 | 	cmp	local01, #256 wz
041cc     0C 00 90 AD |  if_e	jmp	#LR__0252
041d0     01 19 0E F2 | 	cmp	local01, #257 wz
041d4     1C 00 90 AD |  if_e	jmp	#LR__0253
041d8     30 00 90 FD | 	jmp	#LR__0254
041dc                 | LR__0252
041dc     08 EE 05 F1 | 	add	ptr___system__dat__, #8
041e0     F7 F4 01 FB | 	rdlong	result1, ptr___system__dat__
041e4     08 EE 85 F1 | 	sub	ptr___system__dat__, #8
041e8     0D F5 61 FC | 	wrlong	result1, local02
041ec     00 F4 05 F6 | 	mov	result1, #0
041f0     28 00 90 FD | 	jmp	#LR__0255
041f4                 | LR__0253
041f4     0D 0F 02 FB | 	rdlong	arg01, local02
041f8     08 EE 05 F1 | 	add	ptr___system__dat__, #8
041fc     F7 0E 62 FC | 	wrlong	arg01, ptr___system__dat__
04200     08 EE 85 F1 | 	sub	ptr___system__dat__, #8
04204     00 F4 05 F6 | 	mov	result1, #0
04208     10 00 90 FD | 	jmp	#LR__0255
0420c                 | LR__0254
0420c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04210     F7 14 68 FC | 	wrlong	#10, ptr___system__dat__
04214     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
04218     01 F4 65 F6 | 	neg	result1, #1
0421c                 | LR__0255
0421c     A8 F0 03 F6 | 	mov	ptra, fp
04220     B3 00 A0 FD | 	call	#popregs_
04224                 | __system___rxtxioctl_0135_ret
04224     2D 00 64 FD | 	ret
04228                 | 
04228                 | __system____dummy_flush_0136
04228     00 F4 05 F6 | 	mov	result1, #0
0422c                 | __system____dummy_flush_0136_ret
0422c     2D 00 64 FD | 	ret
04230                 | 
04230                 | __system___vfswrite
04230     0B 4C 05 F6 | 	mov	COUNT_, #11
04234     A9 00 A0 FD | 	call	#pushregs_
04238     07 19 02 F6 | 	mov	local01, arg01
0423c     08 1B 02 F6 | 	mov	local02, arg02
04240     09 1D 02 F6 | 	mov	local03, arg03
04244     0D 1F 02 F6 | 	mov	local04, local02
04248     08 18 06 F1 | 	add	local01, #8
0424c     0C 21 02 FB | 	rdlong	local05, local01
04250     08 18 86 F1 | 	sub	local01, #8
04254     02 20 CE F7 | 	test	local05, #2 wz
04258     14 00 90 5D |  if_ne	jmp	#LR__0256
0425c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04260     F7 0C 68 FC | 	wrlong	#6, ptr___system__dat__
04264     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
04268     01 F4 65 F6 | 	neg	result1, #1
0426c     60 01 90 FD | 	jmp	#LR__0264
04270                 | LR__0256
04270     08 18 06 F1 | 	add	local01, #8
04274     0C 21 02 FB | 	rdlong	local05, local01
04278     08 18 86 F1 | 	sub	local01, #8
0427c     40 20 CE F7 | 	test	local05, #64 wz
04280     5C 00 90 AD |  if_e	jmp	#LR__0258
04284     08 18 06 F1 | 	add	local01, #8
04288     0C 21 02 FB | 	rdlong	local05, local01
0428c     08 18 86 F1 | 	sub	local01, #8
04290     80 20 CE F7 | 	test	local05, #128 wz
04294     48 00 90 AD |  if_e	jmp	#LR__0257
04298     2C 18 06 F1 | 	add	local01, #44
0429c     0C 21 02 FB | 	rdlong	local05, local01
042a0     2C 18 86 F1 | 	sub	local01, #44
042a4     10 23 02 FB | 	rdlong	local06, local05
042a8     04 20 06 F1 | 	add	local05, #4
042ac     10 25 02 FB | 	rdlong	local07, local05
042b0     0C 0F 02 F6 | 	mov	arg01, local01
042b4     00 10 06 F6 | 	mov	arg02, #0
042b8     02 12 06 F6 | 	mov	arg03, #2
042bc     F1 26 02 F6 | 	mov	local08, objptr
042c0     11 E3 01 F6 | 	mov	objptr, local06
042c4     2D 24 62 FD | 	call	local07
042c8     13 E3 01 F6 | 	mov	objptr, local08
042cc     08 18 06 F1 | 	add	local01, #8
042d0     0C 21 02 FB | 	rdlong	local05, local01
042d4     80 20 26 F5 | 	andn	local05, #128
042d8     0C 21 62 FC | 	wrlong	local05, local01
042dc     08 18 86 F1 | 	sub	local01, #8
042e0                 | LR__0257
042e0                 | LR__0258
042e0     14 18 06 F1 | 	add	local01, #20
042e4     0C 21 0A FB | 	rdlong	local05, local01 wz
042e8     14 18 86 F1 | 	sub	local01, #20
042ec     74 00 90 AD |  if_e	jmp	#LR__0260
042f0     14 18 06 F1 | 	add	local01, #20
042f4     0C 21 02 FB | 	rdlong	local05, local01
042f8     14 18 86 F1 | 	sub	local01, #20
042fc     10 23 02 FB | 	rdlong	local06, local05
04300     04 20 06 F1 | 	add	local05, #4
04304     10 25 02 FB | 	rdlong	local07, local05
04308     0D 11 02 F6 | 	mov	arg02, local02
0430c     0E 13 02 F6 | 	mov	arg03, local03
04310     0C 0F 02 F6 | 	mov	arg01, local01
04314     F1 26 02 F6 | 	mov	local08, objptr
04318     11 E3 01 F6 | 	mov	objptr, local06
0431c     2D 24 62 FD | 	call	local07
04320     13 E3 01 F6 | 	mov	objptr, local08
04324     FA 28 02 F6 | 	mov	local09, result1
04328     00 28 56 F2 | 	cmps	local09, #0 wc
0432c     2C 00 90 3D |  if_ae	jmp	#LR__0259
04330     08 18 06 F1 | 	add	local01, #8
04334     0C 21 02 FB | 	rdlong	local05, local01
04338     20 20 46 F5 | 	or	local05, #32
0433c     0C 21 62 FC | 	wrlong	local05, local01
04340     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04344     F7 28 62 FC | 	wrlong	local09, ptr___system__dat__
04348     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0434c     00 28 0E F2 | 	cmp	local09, #0 wz
04350     01 F4 65 56 |  if_ne	neg	result1, #1
04354     00 F4 05 A6 |  if_e	mov	result1, #0
04358     74 00 90 FD | 	jmp	#LR__0264
0435c                 | LR__0259
0435c     14 F5 01 F6 | 	mov	result1, local09
04360     6C 00 90 FD | 	jmp	#LR__0264
04364                 | LR__0260
04364     18 18 06 F1 | 	add	local01, #24
04368     0C 2B 0A FB | 	rdlong	local10, local01 wz
0436c     18 18 86 F1 | 	sub	local01, #24
04370     14 00 90 5D |  if_ne	jmp	#LR__0261
04374     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04378     F7 0C 68 FC | 	wrlong	#6, ptr___system__dat__
0437c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
04380     01 F4 65 F6 | 	neg	result1, #1
04384     48 00 90 FD | 	jmp	#LR__0264
04388                 | LR__0261
04388     00 28 06 F6 | 	mov	local09, #0
0438c                 | LR__0262
0438c     01 1C 16 F2 | 	cmp	local03, #1 wc
04390     38 00 90 CD |  if_b	jmp	#LR__0263
04394     15 21 02 F6 | 	mov	local05, local10
04398     10 23 02 FB | 	rdlong	local06, local05
0439c     04 20 06 F1 | 	add	local05, #4
043a0     10 25 02 FB | 	rdlong	local07, local05
043a4     0F 0F C2 FA | 	rdbyte	arg01, local04
043a8     0C 11 02 F6 | 	mov	arg02, local01
043ac     F1 2C 02 F6 | 	mov	local11, objptr
043b0     11 E3 01 F6 | 	mov	objptr, local06
043b4     01 1E 06 F1 | 	add	local04, #1
043b8     2D 24 62 FD | 	call	local07
043bc     16 E3 01 F6 | 	mov	objptr, local11
043c0     FA 28 02 F1 | 	add	local09, result1
043c4     01 1C 86 F1 | 	sub	local03, #1
043c8     C0 FF 9F FD | 	jmp	#LR__0262
043cc                 | LR__0263
043cc     14 F5 01 F6 | 	mov	result1, local09
043d0                 | LR__0264
043d0     A8 F0 03 F6 | 	mov	ptra, fp
043d4     B3 00 A0 FD | 	call	#popregs_
043d8                 | __system___vfswrite_ret
043d8     2D 00 64 FD | 	ret
043dc                 | 
043dc                 | __system___vfsread
043dc     0B 4C 05 F6 | 	mov	COUNT_, #11
043e0     A9 00 A0 FD | 	call	#pushregs_
043e4     28 F0 07 F1 | 	add	ptra, #40
043e8     04 50 05 F1 | 	add	fp, #4
043ec     A8 0E 62 FC | 	wrlong	arg01, fp
043f0     04 50 05 F1 | 	add	fp, #4
043f4     A8 10 62 FC | 	wrlong	arg02, fp
043f8     04 50 05 F1 | 	add	fp, #4
043fc     A8 12 62 FC | 	wrlong	arg03, fp
04400     04 50 85 F1 | 	sub	fp, #4
04404     A8 18 02 FB | 	rdlong	local01, fp
04408     14 50 05 F1 | 	add	fp, #20
0440c     A8 18 62 FC | 	wrlong	local01, fp
04410     04 50 05 F1 | 	add	fp, #4
04414     A8 00 68 FC | 	wrlong	#0, fp
04418     1C 50 85 F1 | 	sub	fp, #28
0441c     A8 1A 02 FB | 	rdlong	local02, fp
04420     04 50 85 F1 | 	sub	fp, #4
04424     08 1A 06 F1 | 	add	local02, #8
04428     0D 19 02 FB | 	rdlong	local01, local02
0442c     01 18 CE F7 | 	test	local01, #1 wz
04430     14 00 90 5D |  if_ne	jmp	#LR__0265
04434     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04438     F7 0C 68 FC | 	wrlong	#6, ptr___system__dat__
0443c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
04440     01 F4 65 F6 | 	neg	result1, #1
04444     78 02 90 FD | 	jmp	#LR__0273
04448                 | LR__0265
04448     04 50 05 F1 | 	add	fp, #4
0444c     A8 18 02 FB | 	rdlong	local01, fp
04450     04 50 85 F1 | 	sub	fp, #4
04454     10 18 06 F1 | 	add	local01, #16
04458     0C 1D 0A FB | 	rdlong	local03, local01 wz
0445c     AC 00 90 AD |  if_e	jmp	#LR__0267
04460     04 50 05 F1 | 	add	fp, #4
04464     A8 0E 02 FB | 	rdlong	arg01, fp
04468     07 1F 02 F6 | 	mov	local04, arg01
0446c     10 1E 06 F1 | 	add	local04, #16
04470     0F 19 02 FB | 	rdlong	local01, local04
04474     0C 1B 02 FB | 	rdlong	local02, local01
04478     04 18 06 F1 | 	add	local01, #4
0447c     0C 1D 02 FB | 	rdlong	local03, local01
04480     04 50 05 F1 | 	add	fp, #4
04484     A8 10 02 FB | 	rdlong	arg02, fp
04488     04 50 05 F1 | 	add	fp, #4
0448c     A8 12 02 FB | 	rdlong	arg03, fp
04490     0C 50 85 F1 | 	sub	fp, #12
04494     F1 20 02 F6 | 	mov	local05, objptr
04498     0D E3 01 F6 | 	mov	objptr, local02
0449c     2D 1C 62 FD | 	call	local03
044a0     10 E3 01 F6 | 	mov	objptr, local05
044a4     10 50 05 F1 | 	add	fp, #16
044a8     A8 F4 61 FC | 	wrlong	result1, fp
044ac     10 50 85 F1 | 	sub	fp, #16
044b0     00 F4 55 F2 | 	cmps	result1, #0 wc
044b4     44 00 90 3D |  if_ae	jmp	#LR__0266
044b8     04 50 05 F1 | 	add	fp, #4
044bc     A8 1E 02 FB | 	rdlong	local04, fp
044c0     0F 19 02 F6 | 	mov	local01, local04
044c4     08 1E 06 F1 | 	add	local04, #8
044c8     0F 1D 02 FB | 	rdlong	local03, local04
044cc     20 1C 46 F5 | 	or	local03, #32
044d0     08 18 06 F1 | 	add	local01, #8
044d4     0C 1D 62 FC | 	wrlong	local03, local01
044d8     0C 50 05 F1 | 	add	fp, #12
044dc     A8 0E 0A FB | 	rdlong	arg01, fp wz
044e0     10 50 85 F1 | 	sub	fp, #16
044e4     1C EE 05 F1 | 	add	ptr___system__dat__, #28
044e8     F7 0E 62 FC | 	wrlong	arg01, ptr___system__dat__
044ec     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
044f0     01 F4 65 56 |  if_ne	neg	result1, #1
044f4     00 F4 05 A6 |  if_e	mov	result1, #0
044f8     C4 01 90 FD | 	jmp	#LR__0273
044fc                 | LR__0266
044fc     10 50 05 F1 | 	add	fp, #16
04500     A8 F4 01 FB | 	rdlong	result1, fp
04504     10 50 85 F1 | 	sub	fp, #16
04508     B4 01 90 FD | 	jmp	#LR__0273
0450c                 | LR__0267
0450c     04 50 05 F1 | 	add	fp, #4
04510     A8 18 02 FB | 	rdlong	local01, fp
04514     1C 18 06 F1 | 	add	local01, #28
04518     0C 19 0A FB | 	rdlong	local01, local01 wz
0451c     14 50 05 F1 | 	add	fp, #20
04520     A8 18 62 FC | 	wrlong	local01, fp
04524     18 50 85 F1 | 	sub	fp, #24
04528     14 00 90 5D |  if_ne	jmp	#LR__0268
0452c     1C EE 05 F1 | 	add	ptr___system__dat__, #28
04530     F7 0C 68 FC | 	wrlong	#6, ptr___system__dat__
04534     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
04538     01 F4 65 F6 | 	neg	result1, #1
0453c     80 01 90 FD | 	jmp	#LR__0273
04540                 | LR__0268
04540     04 50 05 F1 | 	add	fp, #4
04544     A8 18 02 FB | 	rdlong	local01, fp
04548     04 50 85 F1 | 	sub	fp, #4
0454c     24 18 06 F1 | 	add	local01, #36
04550     0C 1D 0A FB | 	rdlong	local03, local01 wz
04554     94 00 90 AD |  if_e	jmp	#LR__0270
04558     04 50 05 F1 | 	add	fp, #4
0455c     A8 22 02 FB | 	rdlong	local06, fp
04560     11 1F 02 F6 | 	mov	local04, local06
04564     24 1E 06 F1 | 	add	local04, #36
04568     0F 25 02 FB | 	rdlong	local07, local04
0456c     12 19 02 F6 | 	mov	local01, local07
04570     0C 1B 02 FB | 	rdlong	local02, local01
04574     04 18 06 F1 | 	add	local01, #4
04578     0C 27 02 FB | 	rdlong	local08, local01
0457c     13 1D 02 F6 | 	mov	local03, local08
04580     11 29 02 F6 | 	mov	local09, local06
04584     00 2B 06 F6 | 	mov	local10, #256
04588     20 50 05 F1 | 	add	fp, #32
0458c     A8 2C 02 F6 | 	mov	local11, fp
04590     14 0F 02 F6 | 	mov	arg01, local09
04594     00 11 06 F6 | 	mov	arg02, #256
04598     16 13 02 F6 | 	mov	arg03, local11
0459c     F1 20 02 F6 | 	mov	local05, objptr
045a0     0D E3 01 F6 | 	mov	objptr, local02
045a4     24 50 85 F1 | 	sub	fp, #36
045a8     2D 1C 62 FD | 	call	local03
045ac     10 E3 01 F6 | 	mov	objptr, local05
045b0     10 50 05 F1 | 	add	fp, #16
045b4     A8 F4 61 FC | 	wrlong	result1, fp
045b8     FA 1A 0A F6 | 	mov	local02, result1 wz
045bc     10 50 85 F1 | 	sub	fp, #16
045c0     28 00 90 5D |  if_ne	jmp	#LR__0269
045c4     24 50 05 F1 | 	add	fp, #36
045c8     A8 1E 02 FB | 	rdlong	local04, fp
045cc     24 50 85 F1 | 	sub	fp, #36
045d0     0F 1D 02 F6 | 	mov	local03, local04
045d4     02 1C 0E F5 | 	and	local03, #2 wz
045d8     10 00 90 AD |  if_e	jmp	#LR__0269
045dc     01 18 06 F6 | 	mov	local01, #1
045e0     20 50 05 F1 | 	add	fp, #32
045e4     A8 02 68 FC | 	wrlong	#1, fp
045e8     20 50 85 F1 | 	sub	fp, #32
045ec                 | LR__0269
045ec                 | LR__0270
045ec     10 50 05 F1 | 	add	fp, #16
045f0     A8 00 68 FC | 	wrlong	#0, fp
045f4     10 50 85 F1 | 	sub	fp, #16
045f8                 | LR__0271
045f8     0C 50 05 F1 | 	add	fp, #12
045fc     A8 18 02 FB | 	rdlong	local01, fp
04600     0C 50 85 F1 | 	sub	fp, #12
04604     01 18 16 F2 | 	cmp	local01, #1 wc
04608     A8 00 90 CD |  if_b	jmp	#LR__0272
0460c     18 50 05 F1 | 	add	fp, #24
04610     A8 18 02 FB | 	rdlong	local01, fp
04614     0C 1B 02 FB | 	rdlong	local02, local01
04618     04 18 06 F1 | 	add	local01, #4
0461c     0C 1D 02 FB | 	rdlong	local03, local01
04620     14 50 85 F1 | 	sub	fp, #20
04624     A8 0E 02 FB | 	rdlong	arg01, fp
04628     04 50 85 F1 | 	sub	fp, #4
0462c     F1 26 02 F6 | 	mov	local08, objptr
04630     0D E3 01 F6 | 	mov	objptr, local02
04634     2D 1C 62 FD | 	call	local03
04638     13 E3 01 F6 | 	mov	objptr, local08
0463c     14 50 05 F1 | 	add	fp, #20
04640     A8 F4 61 FC | 	wrlong	result1, fp
04644     14 50 85 F1 | 	sub	fp, #20
04648     00 F4 55 F2 | 	cmps	result1, #0 wc
0464c     64 00 90 CD |  if_b	jmp	#LR__0272
04650     1C 50 05 F1 | 	add	fp, #28
04654     A8 1A 02 FB | 	rdlong	local02, fp
04658     0D 1D 02 F6 | 	mov	local03, local02
0465c     01 1C 06 F1 | 	add	local03, #1
04660     A8 1C 62 FC | 	wrlong	local03, fp
04664     08 50 85 F1 | 	sub	fp, #8
04668     A8 22 02 FB | 	rdlong	local06, fp
0466c     0D 23 42 FC | 	wrbyte	local06, local02
04670     04 50 85 F1 | 	sub	fp, #4
04674     A8 18 02 FB | 	rdlong	local01, fp
04678     01 18 06 F1 | 	add	local01, #1
0467c     A8 18 62 FC | 	wrlong	local01, fp
04680     04 50 85 F1 | 	sub	fp, #4
04684     A8 18 02 FB | 	rdlong	local01, fp
04688     01 18 86 F1 | 	sub	local01, #1
0468c     A8 18 62 FC | 	wrlong	local01, fp
04690     14 50 05 F1 | 	add	fp, #20
04694     A8 18 0A FB | 	rdlong	local01, fp wz
04698     20 50 85 F1 | 	sub	fp, #32
0469c     58 FF 9F AD |  if_e	jmp	#LR__0271
046a0     14 50 05 F1 | 	add	fp, #20
046a4     A8 1C 02 FB | 	rdlong	local03, fp
046a8     14 50 85 F1 | 	sub	fp, #20
046ac     0A 1C 0E F2 | 	cmp	local03, #10 wz
046b0     44 FF 9F 5D |  if_ne	jmp	#LR__0271
046b4                 | LR__0272
046b4     10 50 05 F1 | 	add	fp, #16
046b8     A8 F4 01 FB | 	rdlong	result1, fp
046bc     10 50 85 F1 | 	sub	fp, #16
046c0                 | LR__0273
046c0     A8 F0 03 F6 | 	mov	ptra, fp
046c4     B3 00 A0 FD | 	call	#popregs_
046c8                 | __system___vfsread_ret
046c8     2D 00 64 FD | 	ret
046cc                 | 
046cc                 | __system____default_filbuf
046cc     06 4C 05 F6 | 	mov	COUNT_, #6
046d0     A9 00 A0 FD | 	call	#pushregs_
046d4     07 19 02 FB | 	rdlong	local01, arg01
046d8     10 0E 06 F1 | 	add	arg01, #16
046dc     07 1B 02 FB | 	rdlong	local02, arg01
046e0     10 0E 86 F1 | 	sub	arg01, #16
046e4     0D 1D 02 FB | 	rdlong	local03, local02
046e8     04 1A 06 F1 | 	add	local02, #4
046ec     0D 1F 02 FB | 	rdlong	local04, local02
046f0     0C 18 06 F1 | 	add	local01, #12
046f4     0C 11 02 F6 | 	mov	arg02, local01
046f8     0C 18 86 F1 | 	sub	local01, #12
046fc     0A 12 C6 F9 | 	decod	arg03, #10
04700     F1 20 02 F6 | 	mov	local05, objptr
04704     0E E3 01 F6 | 	mov	objptr, local03
04708     2D 1E 62 FD | 	call	local04
0470c     10 E3 01 F6 | 	mov	objptr, local05
04710     FA 22 02 F6 | 	mov	local06, result1
04714     00 22 56 F2 | 	cmps	local06, #0 wc
04718     01 F4 65 C6 |  if_b	neg	result1, #1
0471c     28 00 90 CD |  if_b	jmp	#LR__0274
04720     0C 23 62 FC | 	wrlong	local06, local01
04724     0C 18 06 F1 | 	add	local01, #12
04728     0C 1B 02 F6 | 	mov	local02, local01
0472c     08 18 86 F1 | 	sub	local01, #8
04730     0C 1B 62 FC | 	wrlong	local02, local01
04734     04 18 06 F1 | 	add	local01, #4
04738     0C 1B 02 FB | 	rdlong	local02, local01
0473c     01 1A 46 F5 | 	or	local02, #1
04740     0C 1B 62 FC | 	wrlong	local02, local01
04744     11 F5 01 F6 | 	mov	result1, local06
04748                 | LR__0274
04748     A8 F0 03 F6 | 	mov	ptra, fp
0474c     B3 00 A0 FD | 	call	#popregs_
04750                 | __system____default_filbuf_ret
04750     2D 00 64 FD | 	ret
04754                 | 
04754                 | _ff_cc_ff_oem2uni
04754     00 F8 05 F6 | 	mov	_var01, #0
04758     01 00 00 FF 
0475c     84 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##900
04760     F8 FA 01 F6 | 	mov	_var02, ptr__ff_cc_dat__
04764     07 FD 01 F6 | 	mov	_var03, arg01
04768     0F FC 45 F7 | 	zerox	_var03, #15
0476c     80 FC 15 F2 | 	cmp	_var03, #128 wc
04770     01 00 00 FF 
04774     84 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##900
04778     07 F9 01 C6 |  if_b	mov	_var01, arg01
0477c     34 00 90 CD |  if_b	jmp	#LR__0277
04780     0F 10 46 F7 | 	zerox	arg02, #15
04784     01 00 00 FF 
04788     52 11 0E F2 | 	cmp	arg02, ##850 wz
0478c     24 00 90 5D |  if_ne	jmp	#LR__0276
04790     07 FD 01 F6 | 	mov	_var03, arg01
04794     0F FC 45 F7 | 	zerox	_var03, #15
04798     00 FD 15 F2 | 	cmp	_var03, #256 wc
0479c     14 00 90 3D |  if_ae	jmp	#LR__0275
047a0     0F 0E 46 F7 | 	zerox	arg01, #15
047a4     80 0E 86 F1 | 	sub	arg01, #128
047a8     01 0E 66 F0 | 	shl	arg01, #1
047ac     FD 0E 02 F1 | 	add	arg01, _var02
047b0     07 F9 E1 FA | 	rdword	_var01, arg01
047b4                 | LR__0275
047b4                 | LR__0276
047b4                 | LR__0277
047b4                 | ' 		}
047b4                 | ' 	}
047b4                 | ' 
047b4                 | ' 	return c;
047b4     FC F4 01 F6 | 	mov	result1, _var01
047b8                 | _ff_cc_ff_oem2uni_ret
047b8     2D 00 64 FD | 	ret
047bc                 | 
047bc                 | _ff_cc_ff_uni2oem
047bc     07 F9 01 F6 | 	mov	_var01, arg01
047c0     08 FB 01 F6 | 	mov	_var02, arg02
047c4     00 FC 05 F6 | 	mov	_var03, #0
047c8     01 00 00 FF 
047cc     84 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##900
047d0     F8 FE 01 F6 | 	mov	_var04, ptr__ff_cc_dat__
047d4     80 F8 15 F2 | 	cmp	_var01, #128 wc
047d8     01 00 00 FF 
047dc     84 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##900
047e0     FC FC 01 C6 |  if_b	mov	_var03, _var01
047e4     84 00 90 CD |  if_b	jmp	#LR__0282
047e8     80 00 00 FF 
047ec     00 F8 15 F2 | 	cmp	_var01, ##65536 wc
047f0     78 00 90 3D |  if_ae	jmp	#LR__0281
047f4     FD 00 02 F6 | 	mov	_var05, _var02
047f8     0F 00 46 F7 | 	zerox	_var05, #15
047fc     01 00 00 FF 
04800     52 01 0E F2 | 	cmp	_var05, ##850 wz
04804     64 00 90 5D |  if_ne	jmp	#LR__0281
04808                 | ' 			for (c = 0; c < 0x80 && uni != p[c]; c++) ;
04808     00 FC 05 F6 | 	mov	_var03, #0
0480c     34 B8 9F FE | 	loc	pa,	#(@LR__0279-@LR__0278)
04810     8C 00 A0 FD | 	call	#FCACHE_LOAD_
04814                 | LR__0278
04814     FE 00 02 F6 | 	mov	_var05, _var03
04818     0F 00 46 F7 | 	zerox	_var05, #15
0481c     80 00 16 F2 | 	cmp	_var05, #128 wc
04820     34 00 90 3D |  if_ae	jmp	#LR__0280
04824     FE 02 02 F6 | 	mov	_var06, _var03
04828     01 05 02 F6 | 	mov	_var07, _var06
0482c     01 04 66 F0 | 	shl	_var07, #1
04830     FF 06 02 F6 | 	mov	_var08, _var04
04834     FF 04 02 F1 | 	add	_var07, _var04
04838     02 09 E2 FA | 	rdword	_var09, _var07
0483c     04 F9 09 F2 | 	cmp	_var01, _var09 wz
04840     14 00 90 AD |  if_e	jmp	#LR__0280
04844     FE 0A 02 F6 | 	mov	_var10, _var03
04848     FE 0C 02 F6 | 	mov	_var11, _var03
0484c     01 0C 06 F1 | 	add	_var11, #1
04850     06 FD 01 F6 | 	mov	_var03, _var11
04854     BC FF 9F FD | 	jmp	#LR__0278
04858                 | LR__0279
04858                 | LR__0280
04858     FE 00 02 F6 | 	mov	_var05, _var03
0485c     0F 00 46 F7 | 	zerox	_var05, #15
04860     80 00 06 F1 | 	add	_var05, #128
04864     FF 00 06 F5 | 	and	_var05, #255
04868     00 FD 01 F6 | 	mov	_var03, _var05
0486c                 | LR__0281
0486c                 | LR__0282
0486c                 | ' 			c = (c + 0x80) & 0xFF;
0486c                 | ' 		}
0486c                 | ' 	}
0486c                 | ' 
0486c                 | ' 	return c;
0486c     FE F4 01 F6 | 	mov	result1, _var03
04870                 | _ff_cc_ff_uni2oem_ret
04870     2D 00 64 FD | 	ret
04874                 | 
04874                 | _ff_cc_ff_wtoupper
04874     07 F9 01 F6 | 	mov	_var01, arg01
04878     80 00 00 FF 
0487c     00 F8 15 F2 | 	cmp	_var01, ##65536 wc
04880     AC 01 90 3D |  if_ae	jmp	#LR__0298
04884     FC FA 01 F6 | 	mov	_var02, _var01
04888     FD FC 01 F6 | 	mov	_var03, _var02
0488c     0F FC 45 F7 | 	zerox	_var03, #15
04890     08 00 00 FF 
04894     00 FC 15 F2 | 	cmp	_var03, ##4096 wc
04898     18 00 90 3D |  if_ae	jmp	#LR__0283
0489c     02 00 00 FF 
048a0     84 F0 05 F1 | 	add	ptr__ff_cc_dat__, ##1156
048a4     F8 FE 01 F6 | 	mov	_var04, ptr__ff_cc_dat__
048a8     02 00 00 FF 
048ac     84 F0 85 F1 | 	sub	ptr__ff_cc_dat__, ##1156
048b0     18 00 90 FD | 	jmp	#LR__0284
048b4                 | LR__0283
048b4     03 00 00 FF 
048b8     76 F0 05 F1 | 	add	ptr__ff_cc_dat__, ##1654
048bc     F8 00 02 F6 | 	mov	_var05, ptr__ff_cc_dat__
048c0     00 FF 01 F6 | 	mov	_var04, _var05
048c4     03 00 00 FF 
048c8     76 F0 85 F1 | 	sub	ptr__ff_cc_dat__, ##1654
048cc                 | LR__0284
048cc     FF 02 02 F6 | 	mov	_var06, _var04
048d0                 | ' 		uc = (WORD)uni;
048d0                 | ' 		p = uc < 0x1000 ? cvt1 : cvt2;
048d0                 | ' 		for (;;) {
048d0                 | LR__0285
048d0     01 05 E2 FA | 	rdword	_var07, _var06
048d4     02 FF 01 F6 | 	mov	_var04, _var07
048d8     0F FE 4D F7 | 	zerox	_var04, #15 wz
048dc     02 02 06 F1 | 	add	_var06, #2
048e0     44 01 90 AD |  if_e	jmp	#LR__0297
048e4     FD FC 01 F6 | 	mov	_var03, _var02
048e8     0F FC 45 F7 | 	zerox	_var03, #15
048ec     02 07 02 F6 | 	mov	_var08, _var07
048f0     0F 06 46 F7 | 	zerox	_var08, #15
048f4     03 FD 11 F2 | 	cmp	_var03, _var08 wc
048f8     2C 01 90 CD |  if_b	jmp	#LR__0297
048fc     01 09 E2 FA | 	rdword	_var09, _var06
04900     04 0B 02 F6 | 	mov	_var10, _var09
04904     0F 0A 46 F7 | 	zerox	_var10, #15
04908     08 0A 46 F0 | 	shr	_var10, #8
0490c     0F 08 46 F7 | 	zerox	_var09, #15
04910     FF 08 06 F5 | 	and	_var09, #255
04914     FD FE 01 F6 | 	mov	_var04, _var02
04918     0F FE 45 F7 | 	zerox	_var04, #15
0491c     02 FD 01 F6 | 	mov	_var03, _var07
04920     0F FC 45 F7 | 	zerox	_var03, #15
04924     04 07 02 F6 | 	mov	_var08, _var09
04928     0F 06 46 F7 | 	zerox	_var08, #15
0492c     03 FD 01 F1 | 	add	_var03, _var08
04930     FE FE 51 F2 | 	cmps	_var04, _var03 wc
04934     02 02 06 F1 | 	add	_var06, #2
04938     CC 00 90 3D |  if_ae	jmp	#LR__0296
0493c                 | ' 				switch (cmd) {
0493c     05 0D 02 F6 | 	mov	_var11, _var10
04940     0F 0C 46 F7 | 	zerox	_var11, #15
04944     09 0C 26 F3 | 	fle	_var11, #9
04948     30 0C 62 FD | 	jmprel	_var11
0494c                 | LR__0286
0494c     24 00 90 FD | 	jmp	#LR__0287
04950     3C 00 90 FD | 	jmp	#LR__0288
04954     58 00 90 FD | 	jmp	#LR__0289
04958     60 00 90 FD | 	jmp	#LR__0290
0495c     68 00 90 FD | 	jmp	#LR__0291
04960     70 00 90 FD | 	jmp	#LR__0292
04964     78 00 90 FD | 	jmp	#LR__0293
04968     80 00 90 FD | 	jmp	#LR__0294
0496c     88 00 90 FD | 	jmp	#LR__0295
04970     B4 00 90 FD | 	jmp	#LR__0297
04974                 | LR__0287
04974     0F FA 45 F7 | 	zerox	_var02, #15
04978     0F 04 46 F7 | 	zerox	_var07, #15
0497c     02 FB 81 F1 | 	sub	_var02, _var07
04980     01 FA 65 F0 | 	shl	_var02, #1
04984     01 FB 01 F1 | 	add	_var02, _var06
04988     FD FA E1 FA | 	rdword	_var02, _var02
0498c     98 00 90 FD | 	jmp	#LR__0297
04990                 | LR__0288
04990     FD FE 01 F6 | 	mov	_var04, _var02
04994     0F FE 45 F7 | 	zerox	_var04, #15
04998     0F FA 45 F7 | 	zerox	_var02, #15
0499c     0F 04 46 F7 | 	zerox	_var07, #15
049a0     02 FB 81 F1 | 	sub	_var02, _var07
049a4     01 FA 05 F5 | 	and	_var02, #1
049a8     FF FA C1 F2 | 	subr	_var02, _var04
049ac     78 00 90 FD | 	jmp	#LR__0297
049b0                 | LR__0289
049b0     0F FA 45 F7 | 	zerox	_var02, #15
049b4     10 FA 85 F1 | 	sub	_var02, #16
049b8     6C 00 90 FD | 	jmp	#LR__0297
049bc                 | LR__0290
049bc     0F FA 45 F7 | 	zerox	_var02, #15
049c0     20 FA 85 F1 | 	sub	_var02, #32
049c4     60 00 90 FD | 	jmp	#LR__0297
049c8                 | LR__0291
049c8     0F FA 45 F7 | 	zerox	_var02, #15
049cc     30 FA 85 F1 | 	sub	_var02, #48
049d0     54 00 90 FD | 	jmp	#LR__0297
049d4                 | LR__0292
049d4     0F FA 45 F7 | 	zerox	_var02, #15
049d8     1A FA 85 F1 | 	sub	_var02, #26
049dc     48 00 90 FD | 	jmp	#LR__0297
049e0                 | LR__0293
049e0     0F FA 45 F7 | 	zerox	_var02, #15
049e4     08 FA 05 F1 | 	add	_var02, #8
049e8     3C 00 90 FD | 	jmp	#LR__0297
049ec                 | LR__0294
049ec     0F FA 45 F7 | 	zerox	_var02, #15
049f0     50 FA 85 F1 | 	sub	_var02, #80
049f4     30 00 90 FD | 	jmp	#LR__0297
049f8                 | LR__0295
049f8     0F FA 45 F7 | 	zerox	_var02, #15
049fc     0E 00 00 FF 
04a00     60 FA 85 F1 | 	sub	_var02, ##7264
04a04                 | ' 				}
04a04                 | ' 				break;
04a04     20 00 90 FD | 	jmp	#LR__0297
04a08                 | LR__0296
04a08     05 FF 01 F6 | 	mov	_var04, _var10
04a0c     0F FE 4D F7 | 	zerox	_var04, #15 wz
04a10     BC FE 9F 5D |  if_ne	jmp	#LR__0285
04a14     04 07 02 F6 | 	mov	_var08, _var09
04a18     0F 06 46 F7 | 	zerox	_var08, #15
04a1c     01 06 66 F0 | 	shl	_var08, #1
04a20     03 03 02 F1 | 	add	_var06, _var08
04a24     A8 FE 9F FD | 	jmp	#LR__0285
04a28                 | LR__0297
04a28     0F FA 45 F7 | 	zerox	_var02, #15
04a2c     FD F8 01 F6 | 	mov	_var01, _var02
04a30                 | LR__0298
04a30                 | ' 		}
04a30                 | ' 		uni = uc;
04a30                 | ' 	}
04a30                 | ' 
04a30                 | ' 	return uni;
04a30     FC F4 01 F6 | 	mov	result1, _var01
04a34                 | _ff_cc_ff_wtoupper_ret
04a34     2D 00 64 FD | 	ret
04a38                 | 
04a38                 | _ff_cc_disk_initialize
04a38     07 4C 05 F6 | 	mov	COUNT_, #7
04a3c     A9 00 A0 FD | 	call	#pushregs_
04a40     3C F0 07 F1 | 	add	ptra, #60
04a44     04 50 05 F1 | 	add	fp, #4
04a48     A8 0E 42 FC | 	wrbyte	arg01, fp
04a4c     03 00 00 FF 
04a50     38 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1848
04a54     F8 18 02 FB | 	rdlong	local01, ptr__ff_cc_dat__
04a58     28 50 05 F1 | 	add	fp, #40
04a5c     A8 18 62 FC | 	wrlong	local01, fp
04a60     04 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #4
04a64     F8 18 02 FB | 	rdlong	local01, ptr__ff_cc_dat__
04a68     04 50 05 F1 | 	add	fp, #4
04a6c     A8 18 62 FC | 	wrlong	local01, fp
04a70     08 F0 05 F1 | 	add	ptr__ff_cc_dat__, #8
04a74     F8 18 02 FB | 	rdlong	local01, ptr__ff_cc_dat__
04a78     04 50 05 F1 | 	add	fp, #4
04a7c     A8 18 62 FC | 	wrlong	local01, fp
04a80     04 F0 05 F1 | 	add	ptr__ff_cc_dat__, #4
04a84     F8 18 02 FB | 	rdlong	local01, ptr__ff_cc_dat__
04a88     03 00 00 FF 
04a8c     40 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1856
04a90     04 50 05 F1 | 	add	fp, #4
04a94     A8 18 62 FC | 	wrlong	local01, fp
04a98     34 50 85 F1 | 	sub	fp, #52
04a9c     A8 18 CA FA | 	rdbyte	local01, fp wz
04aa0     04 50 85 F1 | 	sub	fp, #4
04aa4                 | ' #line 602 "/home/pik33/Programy/flexprop/include/filesys/fatfs/sdmm.cc"
04aa4                 | '             return RES_NOTRDY;
04aa4     03 F4 05 56 |  if_ne	mov	result1, #3
04aa8     EC 04 90 5D |  if_ne	jmp	#LR__0316
04aac     13 00 00 FF 
04ab0     10 0F 06 F6 | 	mov	arg01, ##10000
04ab4     74 CF BF FD | 	call	#__system___waitus
04ab8     2C 50 05 F1 | 	add	fp, #44
04abc     A8 0E 02 FB | 	rdlong	arg01, fp
04ac0     07 01 08 FC | 	wrpin	#0, arg01
04ac4     04 50 05 F1 | 	add	fp, #4
04ac8     A8 0E 02 FB | 	rdlong	arg01, fp
04acc     07 01 08 FC | 	wrpin	#0, arg01
04ad0     04 50 05 F1 | 	add	fp, #4
04ad4     A8 0E 02 FB | 	rdlong	arg01, fp
04ad8     07 01 08 FC | 	wrpin	#0, arg01
04adc     04 50 05 F1 | 	add	fp, #4
04ae0     A8 0E 02 FB | 	rdlong	arg01, fp
04ae4     09 00 80 FF 
04ae8     07 01 08 FC | 	wrpin	##4608, arg01
04aec     0C 50 85 F1 | 	sub	fp, #12
04af0     A8 0E 02 FB | 	rdlong	arg01, fp
04af4     59 0E 62 FD | 	drvh	arg01
04af8     04 50 05 F1 | 	add	fp, #4
04afc     A8 0E 02 FB | 	rdlong	arg01, fp
04b00     59 0E 62 FD | 	drvh	arg01
04b04     04 50 05 F1 | 	add	fp, #4
04b08     A8 0E 02 FB | 	rdlong	arg01, fp
04b0c     59 0E 62 FD | 	drvh	arg01
04b10     04 50 05 F1 | 	add	fp, #4
04b14     A8 0E 02 FB | 	rdlong	arg01, fp
04b18     59 0E 62 FD | 	drvh	arg01
04b1c     08 50 85 F1 | 	sub	fp, #8
04b20     A8 1A 02 FB | 	rdlong	local02, fp
04b24     40 1A 62 FD | 	dirl	local02
04b28     A0 03 80 FF 
04b2c     0D 91 08 FC | 	wrpin	##475208, local02
04b30     00 04 80 FF 
04b34     0D 21 18 FC | 	wxpin	##524304, local02
04b38     0D 01 28 FC | 	wypin	#0, local02
04b3c     41 1A 62 FD | 	dirh	local02
04b40     04 50 05 F1 | 	add	fp, #4
04b44     A8 1C 02 FB | 	rdlong	local03, fp
04b48     0E 1B 82 F1 | 	sub	local02, local03
04b4c     07 1A 06 F5 | 	and	local02, #7
04b50     18 1A 66 F0 | 	shl	local02, #24
04b54     78 10 06 F6 | 	mov	arg02, #120
04b58     0D 11 42 F5 | 	or	arg02, local02
04b5c     10 50 85 F1 | 	sub	fp, #16
04b60     A8 10 62 FC | 	wrlong	arg02, fp
04b64     10 50 05 F1 | 	add	fp, #16
04b68     A8 0E 02 FB | 	rdlong	arg01, fp
04b6c     10 10 26 F4 | 	bith	arg02, #16
04b70     40 0E 62 FD | 	dirl	arg01
04b74     07 11 02 FC | 	wrpin	arg02, arg01
04b78     07 3F 18 FC | 	wxpin	#31, arg01
04b7c     FF FF FF FF 
04b80     07 FF 2B FC | 	wypin	##-1, arg01
04b84     41 0E 62 FD | 	dirh	arg01
04b88     04 50 85 F1 | 	sub	fp, #4
04b8c     A8 10 02 FB | 	rdlong	arg02, fp
04b90     08 50 05 F1 | 	add	fp, #8
04b94     A8 1E 02 FB | 	rdlong	local04, fp
04b98     0F 11 82 F1 | 	sub	arg02, local04
04b9c     07 10 06 F5 | 	and	arg02, #7
04ba0     18 10 66 F0 | 	shl	arg02, #24
04ba4     1C 50 85 F1 | 	sub	fp, #28
04ba8     A8 10 62 FC | 	wrlong	arg02, fp
04bac     29 00 00 FF 
04bb0     7A 10 46 F5 | 	or	arg02, ##21114
04bb4     A8 10 62 FC | 	wrlong	arg02, fp
04bb8     1C 50 05 F1 | 	add	fp, #28
04bbc     A8 0E 02 FB | 	rdlong	arg01, fp
04bc0     00 20 06 F6 | 	mov	local05, #0
04bc4     27 12 06 F6 | 	mov	arg03, #39
04bc8     00 14 06 F6 | 	mov	arg04, #0
04bcc     40 0E 62 FD | 	dirl	arg01
04bd0     07 11 02 FC | 	wrpin	arg02, arg01
04bd4     07 4F 18 FC | 	wxpin	#39, arg01
04bd8     07 01 28 FC | 	wypin	#0, arg01
04bdc     41 0E 62 FD | 	dirh	arg01
04be0     28 50 85 F1 | 	sub	fp, #40
04be4     A8 0E 02 F6 | 	mov	arg01, fp
04be8     10 50 85 F1 | 	sub	fp, #16
04bec     0A 10 06 F6 | 	mov	arg02, #10
04bf0     24 7C B0 FD | 	call	#_ff_cc_rcvr_mmc_0660
04bf4     00 0E 06 F6 | 	mov	arg01, #0
04bf8     00 10 06 F6 | 	mov	arg02, #0
04bfc     C8 7F B0 FD | 	call	#_ff_cc_send_cmd_0681
04c00     34 7D B0 FD | 	call	#_ff_cc_deselect_0667
04c04     64 0E 06 F6 | 	mov	arg01, #100
04c08     20 CE BF FD | 	call	#__system___waitus
04c0c     10 50 05 F1 | 	add	fp, #16
04c10     A8 0E 02 F6 | 	mov	arg01, fp
04c14     10 50 85 F1 | 	sub	fp, #16
04c18     0A 10 06 F6 | 	mov	arg02, #10
04c1c     F8 7B B0 FD | 	call	#_ff_cc_rcvr_mmc_0660
04c20     08 50 05 F1 | 	add	fp, #8
04c24     A8 00 48 FC | 	wrbyte	#0, fp
04c28     08 50 85 F1 | 	sub	fp, #8
04c2c     00 0E 06 F6 | 	mov	arg01, #0
04c30     00 10 06 F6 | 	mov	arg02, #0
04c34     90 7F B0 FD | 	call	#_ff_cc_send_cmd_0681
04c38     FA 18 02 F6 | 	mov	local01, result1
04c3c     07 18 46 F7 | 	zerox	local01, #7
04c40     01 18 0E F2 | 	cmp	local01, #1 wz
04c44     24 02 90 5D |  if_ne	jmp	#LR__0309
04c48     64 0E 06 F6 | 	mov	arg01, #100
04c4c     DC CD BF FD | 	call	#__system___waitus
04c50     08 0E 06 F6 | 	mov	arg01, #8
04c54     AA 11 06 F6 | 	mov	arg02, #426
04c58     6C 7F B0 FD | 	call	#_ff_cc_send_cmd_0681
04c5c     FA 18 02 F6 | 	mov	local01, result1
04c60     07 18 46 F7 | 	zerox	local01, #7
04c64     01 18 0E F2 | 	cmp	local01, #1 wz
04c68     04 01 90 5D |  if_ne	jmp	#LR__0301
04c6c     10 50 05 F1 | 	add	fp, #16
04c70     A8 0E 02 F6 | 	mov	arg01, fp
04c74     10 50 85 F1 | 	sub	fp, #16
04c78     04 10 06 F6 | 	mov	arg02, #4
04c7c     98 7B B0 FD | 	call	#_ff_cc_rcvr_mmc_0660
04c80     12 50 05 F1 | 	add	fp, #18
04c84     A8 18 C2 FA | 	rdbyte	local01, fp
04c88     12 50 85 F1 | 	sub	fp, #18
04c8c     07 18 46 F7 | 	zerox	local01, #7
04c90     01 18 0E F2 | 	cmp	local01, #1 wz
04c94     D4 01 90 5D |  if_ne	jmp	#LR__0308
04c98     13 50 05 F1 | 	add	fp, #19
04c9c     A8 1E C2 FA | 	rdbyte	local04, fp
04ca0     13 50 85 F1 | 	sub	fp, #19
04ca4     07 1E 46 F7 | 	zerox	local04, #7
04ca8     AA 1E 0E F2 | 	cmp	local04, #170 wz
04cac     BC 01 90 5D |  if_ne	jmp	#LR__0308
04cb0                 | ' 				for (tmr = 1000; tmr; tmr--) {
04cb0     1C 50 05 F1 | 	add	fp, #28
04cb4     01 00 80 FF 
04cb8     A8 D0 6B FC | 	wrlong	##1000, fp
04cbc     1C 50 85 F1 | 	sub	fp, #28
04cc0                 | LR__0299
04cc0     1C 50 05 F1 | 	add	fp, #28
04cc4     A8 1E 0A FB | 	rdlong	local04, fp wz
04cc8     1C 50 85 F1 | 	sub	fp, #28
04ccc     3C 00 90 AD |  if_e	jmp	#LR__0300
04cd0     A9 0E 06 F6 | 	mov	arg01, #169
04cd4     1E 10 C6 F9 | 	decod	arg02, #30
04cd8     EC 7E B0 FD | 	call	#_ff_cc_send_cmd_0681
04cdc     FA 20 02 F6 | 	mov	local05, result1
04ce0     07 20 4E F7 | 	zerox	local05, #7 wz
04ce4     24 00 90 AD |  if_e	jmp	#LR__0300
04ce8     01 00 00 FF 
04cec     E8 0F 06 F6 | 	mov	arg01, ##1000
04cf0     38 CD BF FD | 	call	#__system___waitus
04cf4     1C 50 05 F1 | 	add	fp, #28
04cf8     A8 22 02 FB | 	rdlong	local06, fp
04cfc     01 22 86 F1 | 	sub	local06, #1
04d00     A8 22 62 FC | 	wrlong	local06, fp
04d04     1C 50 85 F1 | 	sub	fp, #28
04d08     B4 FF 9F FD | 	jmp	#LR__0299
04d0c                 | LR__0300
04d0c     1C 50 05 F1 | 	add	fp, #28
04d10     A8 1A 02 FB | 	rdlong	local02, fp
04d14     1C 50 85 F1 | 	sub	fp, #28
04d18     0D 19 0A F6 | 	mov	local01, local02 wz
04d1c     4C 01 90 AD |  if_e	jmp	#LR__0308
04d20     3A 0E 06 F6 | 	mov	arg01, #58
04d24     00 10 06 F6 | 	mov	arg02, #0
04d28     9C 7E B0 FD | 	call	#_ff_cc_send_cmd_0681
04d2c     FA 1E 02 F6 | 	mov	local04, result1
04d30     07 1E 4E F7 | 	zerox	local04, #7 wz
04d34     34 01 90 5D |  if_ne	jmp	#LR__0308
04d38     10 50 05 F1 | 	add	fp, #16
04d3c     A8 0E 02 F6 | 	mov	arg01, fp
04d40     10 50 85 F1 | 	sub	fp, #16
04d44     04 10 06 F6 | 	mov	arg02, #4
04d48     CC 7A B0 FD | 	call	#_ff_cc_rcvr_mmc_0660
04d4c     10 50 05 F1 | 	add	fp, #16
04d50     A8 1A C2 FA | 	rdbyte	local02, fp
04d54     40 1A CE F7 | 	test	local02, #64 wz
04d58     0C 18 06 56 |  if_ne	mov	local01, #12
04d5c     04 18 06 A6 |  if_e	mov	local01, #4
04d60     08 50 85 F1 | 	sub	fp, #8
04d64     A8 18 42 FC | 	wrbyte	local01, fp
04d68     08 50 85 F1 | 	sub	fp, #8
04d6c     FC 00 90 FD | 	jmp	#LR__0308
04d70                 | LR__0301
04d70     A9 0E 06 F6 | 	mov	arg01, #169
04d74     00 10 06 F6 | 	mov	arg02, #0
04d78     4C 7E B0 FD | 	call	#_ff_cc_send_cmd_0681
04d7c     FA 18 02 F6 | 	mov	local01, result1
04d80     07 18 46 F7 | 	zerox	local01, #7
04d84     02 18 16 F2 | 	cmp	local01, #2 wc
04d88     18 00 90 3D |  if_ae	jmp	#LR__0302
04d8c     08 50 05 F1 | 	add	fp, #8
04d90     A8 04 48 FC | 	wrbyte	#2, fp
04d94     04 50 05 F1 | 	add	fp, #4
04d98     A8 52 49 FC | 	wrbyte	#169, fp
04d9c     0C 50 85 F1 | 	sub	fp, #12
04da0     14 00 90 FD | 	jmp	#LR__0303
04da4                 | LR__0302
04da4     08 50 05 F1 | 	add	fp, #8
04da8     A8 02 48 FC | 	wrbyte	#1, fp
04dac     04 50 05 F1 | 	add	fp, #4
04db0     A8 02 48 FC | 	wrbyte	#1, fp
04db4     0C 50 85 F1 | 	sub	fp, #12
04db8                 | LR__0303
04db8                 | ' 				ty =  0x01 ; cmd =  (1) ;
04db8                 | ' 			}
04db8                 | ' 			for (tmr = 1000; tmr; tmr--) {
04db8     1C 50 05 F1 | 	add	fp, #28
04dbc     01 00 80 FF 
04dc0     A8 D0 6B FC | 	wrlong	##1000, fp
04dc4     1C 50 85 F1 | 	sub	fp, #28
04dc8                 | LR__0304
04dc8     1C 50 05 F1 | 	add	fp, #28
04dcc     A8 1A 0A FB | 	rdlong	local02, fp wz
04dd0     1C 50 85 F1 | 	sub	fp, #28
04dd4     54 00 90 AD |  if_e	jmp	#LR__0305
04dd8     0C 50 05 F1 | 	add	fp, #12
04ddc     A8 0E C2 FA | 	rdbyte	arg01, fp
04de0     0C 50 85 F1 | 	sub	fp, #12
04de4     00 22 06 F6 | 	mov	local06, #0
04de8     00 10 06 F6 | 	mov	arg02, #0
04dec     D8 7D B0 FD | 	call	#_ff_cc_send_cmd_0681
04df0     FA 20 02 F6 | 	mov	local05, result1
04df4     07 20 4E F7 | 	zerox	local05, #7 wz
04df8     30 00 90 AD |  if_e	jmp	#LR__0305
04dfc     01 00 00 FF 
04e00     E8 0F 06 F6 | 	mov	arg01, ##1000
04e04     24 CC BF FD | 	call	#__system___waitus
04e08     1C 50 05 F1 | 	add	fp, #28
04e0c     A8 1C 02 FB | 	rdlong	local03, fp
04e10     0E 21 02 F6 | 	mov	local05, local03
04e14     0E 25 02 F6 | 	mov	local07, local03
04e18     12 23 02 F6 | 	mov	local06, local07
04e1c     01 22 86 F1 | 	sub	local06, #1
04e20     A8 22 62 FC | 	wrlong	local06, fp
04e24     1C 50 85 F1 | 	sub	fp, #28
04e28     9C FF 9F FD | 	jmp	#LR__0304
04e2c                 | LR__0305
04e2c     1C 50 05 F1 | 	add	fp, #28
04e30     A8 1A 02 FB | 	rdlong	local02, fp
04e34     1C 50 85 F1 | 	sub	fp, #28
04e38     0D 19 0A F6 | 	mov	local01, local02 wz
04e3c     20 00 90 AD |  if_e	jmp	#LR__0306
04e40     09 1C C6 F9 | 	decod	local03, #9
04e44     10 0E 06 F6 | 	mov	arg01, #16
04e48     09 10 C6 F9 | 	decod	arg02, #9
04e4c     78 7D B0 FD | 	call	#_ff_cc_send_cmd_0681
04e50     FA 20 02 F6 | 	mov	local05, result1
04e54     10 1F 02 F6 | 	mov	local04, local05
04e58     07 1E 4E F7 | 	zerox	local04, #7 wz
04e5c     0C 00 90 AD |  if_e	jmp	#LR__0307
04e60                 | LR__0306
04e60     08 50 05 F1 | 	add	fp, #8
04e64     A8 00 48 FC | 	wrbyte	#0, fp
04e68     08 50 85 F1 | 	sub	fp, #8
04e6c                 | LR__0307
04e6c                 | LR__0308
04e6c                 | LR__0309
04e6c     08 50 05 F1 | 	add	fp, #8
04e70     A8 18 C2 FA | 	rdbyte	local01, fp
04e74     03 00 00 FF 
04e78     45 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1861
04e7c     F8 18 42 FC | 	wrbyte	local01, ptr__ff_cc_dat__
04e80     A8 1A CA FA | 	rdbyte	local02, fp wz
04e84     00 18 06 56 |  if_ne	mov	local01, #0
04e88     01 18 06 A6 |  if_e	mov	local01, #1
04e8c     20 50 05 F1 | 	add	fp, #32
04e90     A8 18 42 FC | 	wrbyte	local01, fp
04e94     A8 18 C2 FA | 	rdbyte	local01, fp
04e98     28 50 85 F1 | 	sub	fp, #40
04e9c     01 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #1
04ea0     F8 18 42 FC | 	wrbyte	local01, ptr__ff_cc_dat__
04ea4     03 00 00 FF 
04ea8     44 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1860
04eac     88 7A B0 FD | 	call	#_ff_cc_deselect_0667
04eb0     14 18 06 FB | 	rdlong	local01, #20
04eb4     1C 50 05 F1 | 	add	fp, #28
04eb8     A8 18 62 FC | 	wrlong	local01, fp
04ebc     04 50 05 F1 | 	add	fp, #4
04ec0     00 04 80 FF 
04ec4     A8 20 68 FC | 	wrlong	##524304, fp
04ec8     04 50 85 F1 | 	sub	fp, #4
04ecc     A8 18 02 FB | 	rdlong	local01, fp
04ed0     1C 50 85 F1 | 	sub	fp, #28
04ed4     68 78 04 FF 
04ed8     81 19 16 F2 | 	cmp	local01, ##150000001 wc
04edc     14 00 90 3D |  if_ae	jmp	#LR__0310
04ee0     20 50 05 F1 | 	add	fp, #32
04ee4     00 01 80 FF 
04ee8     A8 08 68 FC | 	wrlong	##131076, fp
04eec     20 50 85 F1 | 	sub	fp, #32
04ef0     68 00 90 FD | 	jmp	#LR__0315
04ef4                 | LR__0310
04ef4     1C 50 05 F1 | 	add	fp, #28
04ef8     A8 18 02 FB | 	rdlong	local01, fp
04efc     1C 50 85 F1 | 	sub	fp, #28
04f00     E1 F5 05 FF 
04f04     01 18 16 F2 | 	cmp	local01, ##200000001 wc
04f08     14 00 90 3D |  if_ae	jmp	#LR__0311
04f0c     20 50 05 F1 | 	add	fp, #32
04f10     00 01 80 FF 
04f14     A8 0A 68 FC | 	wrlong	##131077, fp
04f18     20 50 85 F1 | 	sub	fp, #32
04f1c     3C 00 90 FD | 	jmp	#LR__0314
04f20                 | LR__0311
04f20     1C 50 05 F1 | 	add	fp, #28
04f24     A8 18 02 FB | 	rdlong	local01, fp
04f28     1C 50 85 F1 | 	sub	fp, #28
04f2c     3B 58 08 FF 
04f30     01 18 16 F2 | 	cmp	local01, ##280000001 wc
04f34     14 00 90 3D |  if_ae	jmp	#LR__0312
04f38     20 50 05 F1 | 	add	fp, #32
04f3c     00 01 80 FF 
04f40     A8 0C 68 FC | 	wrlong	##131078, fp
04f44     20 50 85 F1 | 	sub	fp, #32
04f48     10 00 90 FD | 	jmp	#LR__0313
04f4c                 | LR__0312
04f4c     20 50 05 F1 | 	add	fp, #32
04f50     80 01 80 FF 
04f54     A8 0E 68 FC | 	wrlong	##196615, fp
04f58     20 50 85 F1 | 	sub	fp, #32
04f5c                 | LR__0313
04f5c                 | LR__0314
04f5c                 | LR__0315
04f5c     24 50 05 F1 | 	add	fp, #36
04f60     A8 18 02 FB | 	rdlong	local01, fp
04f64     1B 18 26 F4 | 	bith	local01, #27
04f68     A8 18 62 FC | 	wrlong	local01, fp
04f6c     0C 50 05 F1 | 	add	fp, #12
04f70     A8 0E 02 FB | 	rdlong	arg01, fp
04f74     10 50 85 F1 | 	sub	fp, #16
04f78     A8 10 02 FB | 	rdlong	arg02, fp
04f7c     07 11 12 FC | 	wxpin	arg02, arg01
04f80     14 50 05 F1 | 	add	fp, #20
04f84     A8 0E 02 FB | 	rdlong	arg01, fp
04f88     07 19 02 FC | 	wrpin	local01, arg01
04f8c                 | ' 
04f8c                 | ' 	m_txsp |= P_INVERT_B;
04f8c                 | ' #line 710 "/home/pik33/Programy/flexprop/include/filesys/fatfs/sdmm.cc"
04f8c                 | ' 	_wxpin( PIN_CLK, tmout );
04f8c                 | ' 	_wrpin( PIN_DI, m_txsp );
04f8c                 | ' #line 718 "/home/pik33/Programy/flexprop/include/filesys/fatfs/sdmm.cc"
04f8c                 | ' 	return s;
04f8c     0C 50 85 F1 | 	sub	fp, #12
04f90     A8 F4 C1 FA | 	rdbyte	result1, fp
04f94     28 50 85 F1 | 	sub	fp, #40
04f98                 | LR__0316
04f98     A8 F0 03 F6 | 	mov	ptra, fp
04f9c     B3 00 A0 FD | 	call	#popregs_
04fa0                 | _ff_cc_disk_initialize_ret
04fa0     2D 00 64 FD | 	ret
04fa4                 | 
04fa4                 | _ff_cc_disk_read
04fa4     05 4C 05 F6 | 	mov	COUNT_, #5
04fa8     A9 00 A0 FD | 	call	#pushregs_
04fac     08 19 02 F6 | 	mov	local01, arg02
04fb0     0A 1B 02 F6 | 	mov	local02, arg04
04fb4     09 1D 02 F6 | 	mov	local03, arg03
04fb8     00 0E 0E F2 | 	cmp	arg01, #0 wz
04fbc     01 F4 05 56 |  if_ne	mov	result1, #1
04fc0                 | ' 
04fc0                 | ' 	return Stat;
04fc0     03 00 00 AF 
04fc4     44 F1 05 A1 |  if_e	add	ptr__ff_cc_dat__, ##1860
04fc8     F8 F4 C1 AA |  if_e	rdbyte	result1, ptr__ff_cc_dat__
04fcc     03 00 00 AF 
04fd0     44 F1 85 A1 |  if_e	sub	ptr__ff_cc_dat__, ##1860
04fd4     FA 1E 02 F6 | 	mov	local04, result1
04fd8     07 1E 46 F7 | 	zerox	local04, #7
04fdc     01 1E CE F7 | 	test	local04, #1 wz
04fe0     03 F4 05 56 |  if_ne	mov	result1, #3
04fe4     8C 00 90 5D |  if_ne	jmp	#LR__0320
04fe8     03 00 00 FF 
04fec     45 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1861
04ff0     F8 20 C2 FA | 	rdbyte	local05, ptr__ff_cc_dat__
04ff4     03 00 00 FF 
04ff8     45 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1861
04ffc     07 20 46 F7 | 	zerox	local05, #7
05000     08 20 0E F5 | 	and	local05, #8 wz
05004     09 1C 66 A0 |  if_e	shl	local03, #9
05008     02 1A 16 F2 | 	cmp	local02, #2 wc
0500c     12 20 06 36 |  if_ae	mov	local05, #18
05010     11 20 06 C6 |  if_b	mov	local05, #17
05014     0E 11 02 F6 | 	mov	arg02, local03
05018     10 0F 02 F6 | 	mov	arg01, local05
0501c     A8 7B B0 FD | 	call	#_ff_cc_send_cmd_0681
05020     FA 1E 02 F6 | 	mov	local04, result1
05024     07 1E 4E F7 | 	zerox	local04, #7 wz
05028     34 00 90 5D |  if_ne	jmp	#LR__0319
0502c                 | ' 		do {
0502c                 | LR__0317
0502c     0C 0F 02 F6 | 	mov	arg01, local01
05030     09 10 C6 F9 | 	decod	arg02, #9
05034     D4 79 B0 FD | 	call	#_ff_cc_rcvr_datablock_0675
05038     00 F4 0D F2 | 	cmp	result1, #0 wz
0503c     01 00 00 5F 
05040     00 18 06 51 |  if_ne	add	local01, ##512
05044     F9 1B 6E 5B |  if_ne	djnz	local02, #LR__0317
05048     07 20 46 F7 | 	zerox	local05, #7
0504c     12 20 0E F2 | 	cmp	local05, #18 wz
05050     0C 00 90 5D |  if_ne	jmp	#LR__0318
05054     0C 0E 06 F6 | 	mov	arg01, #12
05058     00 10 06 F6 | 	mov	arg02, #0
0505c     68 7B B0 FD | 	call	#_ff_cc_send_cmd_0681
05060                 | LR__0318
05060                 | LR__0319
05060     D4 78 B0 FD | 	call	#_ff_cc_deselect_0667
05064                 | ' 	}
05064                 | ' 	deselect();
05064                 | ' 
05064                 | ' 	return count ? RES_ERROR : RES_OK;
05064     00 1A 0E F2 | 	cmp	local02, #0 wz
05068     01 1E 06 56 |  if_ne	mov	local04, #1
0506c     00 1E 06 A6 |  if_e	mov	local04, #0
05070     0F F5 01 F6 | 	mov	result1, local04
05074                 | LR__0320
05074     A8 F0 03 F6 | 	mov	ptra, fp
05078     B3 00 A0 FD | 	call	#popregs_
0507c                 | _ff_cc_disk_read_ret
0507c     2D 00 64 FD | 	ret
05080                 | 
05080                 | _ff_cc_disk_write
05080     06 4C 05 F6 | 	mov	COUNT_, #6
05084     A9 00 A0 FD | 	call	#pushregs_
05088     07 19 0A F6 | 	mov	local01, arg01 wz
0508c     08 1B 02 F6 | 	mov	local02, arg02
05090     09 1D 02 F6 | 	mov	local03, arg03
05094     0A 1F 02 F6 | 	mov	local04, arg04
05098     0E 21 02 F6 | 	mov	local05, local03
0509c     01 F4 05 56 |  if_ne	mov	result1, #1
050a0                 | ' 
050a0                 | ' 	return Stat;
050a0     03 00 00 AF 
050a4     44 F1 05 A1 |  if_e	add	ptr__ff_cc_dat__, ##1860
050a8     F8 F4 C1 AA |  if_e	rdbyte	result1, ptr__ff_cc_dat__
050ac     03 00 00 AF 
050b0     44 F1 85 A1 |  if_e	sub	ptr__ff_cc_dat__, ##1860
050b4     FA 22 02 F6 | 	mov	local06, result1
050b8     07 22 46 F7 | 	zerox	local06, #7
050bc     01 22 CE F7 | 	test	local06, #1 wz
050c0     03 F4 05 56 |  if_ne	mov	result1, #3
050c4     E0 00 90 5D |  if_ne	jmp	#LR__0326
050c8     03 00 00 FF 
050cc     45 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1861
050d0     F8 22 C2 FA | 	rdbyte	local06, ptr__ff_cc_dat__
050d4     03 00 00 FF 
050d8     45 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1861
050dc     07 22 46 F7 | 	zerox	local06, #7
050e0     08 22 CE F7 | 	test	local06, #8 wz
050e4     09 20 66 A0 |  if_e	shl	local05, #9
050e8     01 1E 0E F2 | 	cmp	local04, #1 wz
050ec     30 00 90 5D |  if_ne	jmp	#LR__0321
050f0     10 11 02 F6 | 	mov	arg02, local05
050f4     18 0E 06 F6 | 	mov	arg01, #24
050f8     CC 7A B0 FD | 	call	#_ff_cc_send_cmd_0681
050fc     FA 22 02 F6 | 	mov	local06, result1
05100     07 22 4E F7 | 	zerox	local06, #7 wz
05104     8C 00 90 5D |  if_ne	jmp	#LR__0325
05108     0D 0F 02 F6 | 	mov	arg01, local02
0510c     FE 10 06 F6 | 	mov	arg02, #254
05110     E0 79 B0 FD | 	call	#_ff_cc_xmit_datablock_0677
05114     00 F4 0D F2 | 	cmp	result1, #0 wz
05118     00 1E 06 56 |  if_ne	mov	local04, #0
0511c     74 00 90 FD | 	jmp	#LR__0325
05120                 | LR__0321
05120     03 00 00 FF 
05124     45 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1861
05128     F8 22 C2 FA | 	rdbyte	local06, ptr__ff_cc_dat__
0512c     03 00 00 FF 
05130     45 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1861
05134     07 22 46 F7 | 	zerox	local06, #7
05138     06 22 CE F7 | 	test	local06, #6 wz
0513c     0C 00 90 AD |  if_e	jmp	#LR__0322
05140     97 0E 06 F6 | 	mov	arg01, #151
05144     0F 11 02 F6 | 	mov	arg02, local04
05148     7C 7A B0 FD | 	call	#_ff_cc_send_cmd_0681
0514c                 | LR__0322
0514c     10 11 02 F6 | 	mov	arg02, local05
05150     19 0E 06 F6 | 	mov	arg01, #25
05154     70 7A B0 FD | 	call	#_ff_cc_send_cmd_0681
05158     FA 22 02 F6 | 	mov	local06, result1
0515c     07 22 4E F7 | 	zerox	local06, #7 wz
05160     30 00 90 5D |  if_ne	jmp	#LR__0324
05164                 | ' 			do {
05164                 | LR__0323
05164     0D 0F 02 F6 | 	mov	arg01, local02
05168     FC 10 06 F6 | 	mov	arg02, #252
0516c     84 79 B0 FD | 	call	#_ff_cc_xmit_datablock_0677
05170     00 F4 0D F2 | 	cmp	result1, #0 wz
05174     01 00 00 5F 
05178     00 1A 06 51 |  if_ne	add	local02, ##512
0517c     F9 1F 6E 5B |  if_ne	djnz	local04, #LR__0323
05180     00 0E 06 F6 | 	mov	arg01, #0
05184     FD 10 06 F6 | 	mov	arg02, #253
05188     68 79 B0 FD | 	call	#_ff_cc_xmit_datablock_0677
0518c     00 F4 0D F2 | 	cmp	result1, #0 wz
05190     01 1E 06 A6 |  if_e	mov	local04, #1
05194                 | LR__0324
05194                 | LR__0325
05194     A0 77 B0 FD | 	call	#_ff_cc_deselect_0667
05198                 | ' 				count = 1;
05198                 | ' 		}
05198                 | ' 	}
05198                 | ' 	deselect();
05198                 | ' 
05198                 | ' 	return count ? RES_ERROR : RES_OK;
05198     00 1E 0E F2 | 	cmp	local04, #0 wz
0519c     01 22 06 56 |  if_ne	mov	local06, #1
051a0     00 22 06 A6 |  if_e	mov	local06, #0
051a4     11 F5 01 F6 | 	mov	result1, local06
051a8                 | LR__0326
051a8     A8 F0 03 F6 | 	mov	ptra, fp
051ac     B3 00 A0 FD | 	call	#popregs_
051b0                 | _ff_cc_disk_write_ret
051b0     2D 00 64 FD | 	ret
051b4                 | 
051b4                 | _ff_cc_disk_ioctl
051b4     06 4C 05 F6 | 	mov	COUNT_, #6
051b8     A9 00 A0 FD | 	call	#pushregs_
051bc     30 F0 07 F1 | 	add	ptra, #48
051c0     04 50 05 F1 | 	add	fp, #4
051c4     A8 0E 42 FC | 	wrbyte	arg01, fp
051c8     04 50 05 F1 | 	add	fp, #4
051cc     A8 10 42 FC | 	wrbyte	arg02, fp
051d0     04 50 05 F1 | 	add	fp, #4
051d4     A8 12 62 FC | 	wrlong	arg03, fp
051d8     08 50 85 F1 | 	sub	fp, #8
051dc     A8 18 C2 FA | 	rdbyte	local01, fp
051e0     04 50 85 F1 | 	sub	fp, #4
051e4     0C 0F 0A F6 | 	mov	arg01, local01 wz
051e8     01 F4 05 56 |  if_ne	mov	result1, #1
051ec                 | ' 
051ec                 | ' 	return Stat;
051ec     03 00 00 AF 
051f0     44 F1 05 A1 |  if_e	add	ptr__ff_cc_dat__, ##1860
051f4     F8 F4 C1 AA |  if_e	rdbyte	result1, ptr__ff_cc_dat__
051f8     03 00 00 AF 
051fc     44 F1 85 A1 |  if_e	sub	ptr__ff_cc_dat__, ##1860
05200     FA 1A 02 F6 | 	mov	local02, result1
05204     0D 1D 02 F6 | 	mov	local03, local02
05208     07 1C 46 F7 | 	zerox	local03, #7
0520c     01 1C CE F7 | 	test	local03, #1 wz
05210     03 F4 05 56 |  if_ne	mov	result1, #3
05214     F8 01 90 5D |  if_ne	jmp	#LR__0335
05218     10 50 05 F1 | 	add	fp, #16
0521c     A8 02 68 FC | 	wrlong	#1, fp
05220                 | ' 
05220                 | ' 	res = RES_ERROR;
05220                 | ' 	switch (ctrl) {
05220     08 50 85 F1 | 	sub	fp, #8
05224     A8 1C C2 FA | 	rdbyte	local03, fp
05228     08 50 85 F1 | 	sub	fp, #8
0522c     0E 1F 02 F6 | 	mov	local04, local03
05230     07 1E 46 F7 | 	zerox	local04, #7
05234     04 1E 26 F3 | 	fle	local04, #4
05238     30 1E 62 FD | 	jmprel	local04
0523c                 | LR__0327
0523c     10 00 90 FD | 	jmp	#LR__0328
05240     24 00 90 FD | 	jmp	#LR__0329
05244     A8 01 90 FD | 	jmp	#LR__0333
05248     88 01 90 FD | 	jmp	#LR__0332
0524c     A0 01 90 FD | 	jmp	#LR__0333
05250                 | LR__0328
05250     2C 77 B0 FD | 	call	#_ff_cc_select_0671
05254     00 F4 0D F2 | 	cmp	result1, #0 wz
05258     10 50 05 51 |  if_ne	add	fp, #16
0525c     A8 00 68 5C |  if_ne	wrlong	#0, fp
05260     10 50 85 51 |  if_ne	sub	fp, #16
05264                 | ' 			break;
05264     98 01 90 FD | 	jmp	#LR__0334
05268                 | LR__0329
05268     09 0E 06 F6 | 	mov	arg01, #9
0526c     00 10 06 F6 | 	mov	arg02, #0
05270     54 79 B0 FD | 	call	#_ff_cc_send_cmd_0681
05274     FA 1A 02 F6 | 	mov	local02, result1
05278     07 1A 4E F7 | 	zerox	local02, #7 wz
0527c     80 01 90 5D |  if_ne	jmp	#LR__0334
05280     18 50 05 F1 | 	add	fp, #24
05284     A8 0E 02 F6 | 	mov	arg01, fp
05288     18 50 85 F1 | 	sub	fp, #24
0528c     10 10 06 F6 | 	mov	arg02, #16
05290     78 77 B0 FD | 	call	#_ff_cc_rcvr_datablock_0675
05294     00 F4 0D F2 | 	cmp	result1, #0 wz
05298     64 01 90 AD |  if_e	jmp	#LR__0334
0529c     18 50 05 F1 | 	add	fp, #24
052a0     A8 1A C2 FA | 	rdbyte	local02, fp
052a4     18 50 85 F1 | 	sub	fp, #24
052a8     07 1A 46 F7 | 	zerox	local02, #7
052ac     06 1A 46 F0 | 	shr	local02, #6
052b0     01 1A 0E F2 | 	cmp	local02, #1 wz
052b4     5C 00 90 5D |  if_ne	jmp	#LR__0330
052b8     21 50 05 F1 | 	add	fp, #33
052bc     A8 1A C2 FA | 	rdbyte	local02, fp
052c0     01 50 85 F1 | 	sub	fp, #1
052c4     A8 20 C2 FA | 	rdbyte	local05, fp
052c8     0F 20 46 F7 | 	zerox	local05, #15
052cc     08 20 66 F0 | 	shl	local05, #8
052d0     10 1B 02 F1 | 	add	local02, local05
052d4     01 50 85 F1 | 	sub	fp, #1
052d8     A8 22 C2 FA | 	rdbyte	local06, fp
052dc     3F 22 06 F5 | 	and	local06, #63
052e0     10 22 66 F0 | 	shl	local06, #16
052e4     11 1B 02 F1 | 	add	local02, local06
052e8     01 1A 06 F1 | 	add	local02, #1
052ec     09 50 05 F1 | 	add	fp, #9
052f0     A8 1A 62 FC | 	wrlong	local02, fp
052f4     1C 50 85 F1 | 	sub	fp, #28
052f8     A8 1A 02 FB | 	rdlong	local02, fp
052fc     1C 50 05 F1 | 	add	fp, #28
05300     A8 20 02 FB | 	rdlong	local05, fp
05304     28 50 85 F1 | 	sub	fp, #40
05308     0A 20 66 F0 | 	shl	local05, #10
0530c     0D 21 62 FC | 	wrlong	local05, local02
05310     B0 00 90 FD | 	jmp	#LR__0331
05314                 | LR__0330
05314     1D 50 05 F1 | 	add	fp, #29
05318     A8 1A C2 FA | 	rdbyte	local02, fp
0531c     0F 1A 06 F5 | 	and	local02, #15
05320     05 50 05 F1 | 	add	fp, #5
05324     A8 20 C2 FA | 	rdbyte	local05, fp
05328     80 20 06 F5 | 	and	local05, #128
0532c     07 20 C6 F0 | 	sar	local05, #7
05330     10 1B 02 F1 | 	add	local02, local05
05334     01 50 85 F1 | 	sub	fp, #1
05338     A8 22 C2 FA | 	rdbyte	local06, fp
0533c     03 22 06 F5 | 	and	local06, #3
05340     01 22 66 F0 | 	shl	local06, #1
05344     11 1B 02 F1 | 	add	local02, local06
05348     02 1A 06 F1 | 	add	local02, #2
0534c     0D 50 85 F1 | 	sub	fp, #13
05350     A8 1A 42 FC | 	wrbyte	local02, fp
05354     0C 50 05 F1 | 	add	fp, #12
05358     A8 1A C2 FA | 	rdbyte	local02, fp
0535c     06 1A 46 F0 | 	shr	local02, #6
05360     01 50 85 F1 | 	sub	fp, #1
05364     A8 20 C2 FA | 	rdbyte	local05, fp
05368     0F 20 46 F7 | 	zerox	local05, #15
0536c     02 20 66 F0 | 	shl	local05, #2
05370     10 1B 02 F1 | 	add	local02, local05
05374     01 50 85 F1 | 	sub	fp, #1
05378     A8 22 C2 FA | 	rdbyte	local06, fp
0537c     03 22 06 F5 | 	and	local06, #3
05380     0F 22 46 F7 | 	zerox	local06, #15
05384     0A 22 66 F0 | 	shl	local06, #10
05388     11 1B 02 F1 | 	add	local02, local06
0538c     01 1A 06 F1 | 	add	local02, #1
05390     0A 50 05 F1 | 	add	fp, #10
05394     A8 1A 62 FC | 	wrlong	local02, fp
05398     1C 50 85 F1 | 	sub	fp, #28
0539c     A8 1A 02 FB | 	rdlong	local02, fp
053a0     1C 50 05 F1 | 	add	fp, #28
053a4     A8 20 02 FB | 	rdlong	local05, fp
053a8     14 50 85 F1 | 	sub	fp, #20
053ac     A8 22 C2 FA | 	rdbyte	local06, fp
053b0     14 50 85 F1 | 	sub	fp, #20
053b4     07 22 46 F7 | 	zerox	local06, #7
053b8     09 22 86 F1 | 	sub	local06, #9
053bc     11 21 62 F0 | 	shl	local05, local06
053c0     0D 21 62 FC | 	wrlong	local05, local02
053c4                 | LR__0331
053c4     10 50 05 F1 | 	add	fp, #16
053c8     A8 00 68 FC | 	wrlong	#0, fp
053cc     10 50 85 F1 | 	sub	fp, #16
053d0                 | ' 					n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
053d0                 | ' 					cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
053d0                 | ' 					*(LBA_t*)buff = cs << (n - 9);
053d0                 | ' 				}
053d0                 | ' 				res = RES_OK;
053d0                 | ' 			}
053d0                 | ' 			break;
053d0     2C 00 90 FD | 	jmp	#LR__0334
053d4                 | LR__0332
053d4     0C 50 05 F1 | 	add	fp, #12
053d8     A8 1A 02 FB | 	rdlong	local02, fp
053dc     0D 01 69 FC | 	wrlong	#128, local02
053e0     04 50 05 F1 | 	add	fp, #4
053e4     A8 00 68 FC | 	wrlong	#0, fp
053e8     10 50 85 F1 | 	sub	fp, #16
053ec                 | ' 			*(DWORD*)buff = 128;
053ec                 | ' 			res = RES_OK;
053ec                 | ' 			break;
053ec     10 00 90 FD | 	jmp	#LR__0334
053f0                 | LR__0333
053f0     04 1A 06 F6 | 	mov	local02, #4
053f4     10 50 05 F1 | 	add	fp, #16
053f8     A8 08 68 FC | 	wrlong	#4, fp
053fc     10 50 85 F1 | 	sub	fp, #16
05400                 | LR__0334
05400     34 75 B0 FD | 	call	#_ff_cc_deselect_0667
05404                 | ' 			res = RES_PARERR;
05404                 | ' 	}
05404                 | ' 
05404                 | ' 	deselect();
05404                 | ' 
05404                 | ' 	return res;
05404     10 50 05 F1 | 	add	fp, #16
05408     A8 F4 01 FB | 	rdlong	result1, fp
0540c     10 50 85 F1 | 	sub	fp, #16
05410                 | LR__0335
05410     A8 F0 03 F6 | 	mov	ptra, fp
05414     B3 00 A0 FD | 	call	#popregs_
05418                 | _ff_cc_disk_ioctl_ret
05418     2D 00 64 FD | 	ret
0541c                 | 
0541c                 | _ff_cc_disk_setpins
0541c     00 0E 0E F2 | 	cmp	arg01, #0 wz
05420     01 F4 65 56 |  if_ne	neg	result1, #1
05424     30 00 90 5D |  if_ne	jmp	#_ff_cc_disk_setpins_ret
05428     03 00 00 FF 
0542c     34 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1844
05430     F8 10 62 FC | 	wrlong	arg02, ptr__ff_cc_dat__
05434     04 F0 05 F1 | 	add	ptr__ff_cc_dat__, #4
05438     F8 12 62 FC | 	wrlong	arg03, ptr__ff_cc_dat__
0543c     04 F0 05 F1 | 	add	ptr__ff_cc_dat__, #4
05440     F8 14 62 FC | 	wrlong	arg04, ptr__ff_cc_dat__
05444     04 F0 05 F1 | 	add	ptr__ff_cc_dat__, #4
05448     F8 16 62 FC | 	wrlong	arg05, ptr__ff_cc_dat__
0544c     03 00 00 FF 
05450     40 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1856
05454     00 F4 05 F6 | 	mov	result1, #0
05458                 | _ff_cc_disk_setpins_ret
05458     2D 00 64 FD | 	ret
0545c                 | 
0545c                 | _ff_cc_ld_word_0191
0545c     01 0E 06 F1 | 	add	arg01, #1
05460     07 F5 C1 FA | 	rdbyte	result1, arg01
05464     01 0E 86 F1 | 	sub	arg01, #1
05468     07 F4 45 F7 | 	zerox	result1, #7
0546c     0F F4 45 F7 | 	zerox	result1, #15
05470     08 F4 65 F0 | 	shl	result1, #8
05474     07 F9 C1 FA | 	rdbyte	_var01, arg01
05478     FC F4 41 F5 | 	or	result1, _var01
0547c                 | ' {
0547c                 | ' 	WORD rv;
0547c                 | ' 
0547c                 | ' 	rv = ptr[1];
0547c                 | ' 	rv = rv << 8 | ptr[0];
0547c                 | ' 	return rv;
0547c                 | _ff_cc_ld_word_0191_ret
0547c     2D 00 64 FD | 	ret
05480                 | 
05480                 | _ff_cc_ld_dword_0193
05480     03 0E 06 F1 | 	add	arg01, #3
05484     07 F5 C1 FA | 	rdbyte	result1, arg01
05488     08 F4 65 F0 | 	shl	result1, #8
0548c     01 0E 86 F1 | 	sub	arg01, #1
05490     07 F9 C1 FA | 	rdbyte	_var01, arg01
05494     FC F4 41 F5 | 	or	result1, _var01
05498     08 F4 65 F0 | 	shl	result1, #8
0549c     01 0E 86 F1 | 	sub	arg01, #1
054a0     07 F9 C1 FA | 	rdbyte	_var01, arg01
054a4     01 0E 86 F1 | 	sub	arg01, #1
054a8     07 F8 45 F7 | 	zerox	_var01, #7
054ac     FC F4 41 F5 | 	or	result1, _var01
054b0     08 F4 65 F0 | 	shl	result1, #8
054b4     07 F9 C1 FA | 	rdbyte	_var01, arg01
054b8     FC F4 41 F5 | 	or	result1, _var01
054bc                 | ' {
054bc                 | ' 	DWORD rv;
054bc                 | ' 
054bc                 | ' 	rv = ptr[3];
054bc                 | ' 	rv = rv << 8 | ptr[2];
054bc                 | ' 	rv = rv << 8 | ptr[1];
054bc                 | ' 	rv = rv << 8 | ptr[0];
054bc                 | ' 	return rv;
054bc                 | _ff_cc_ld_dword_0193_ret
054bc     2D 00 64 FD | 	ret
054c0                 | 
054c0                 | _ff_cc_st_word_0194
054c0     08 F9 01 F6 | 	mov	_var01, arg02
054c4     0F F8 45 F7 | 	zerox	_var01, #15
054c8     07 F9 41 FC | 	wrbyte	_var01, arg01
054cc     0F 10 46 F7 | 	zerox	arg02, #15
054d0     08 10 46 F0 | 	shr	arg02, #8
054d4     01 0E 06 F1 | 	add	arg01, #1
054d8     0F 10 46 F7 | 	zerox	arg02, #15
054dc     07 11 42 FC | 	wrbyte	arg02, arg01
054e0                 | _ff_cc_st_word_0194_ret
054e0     2D 00 64 FD | 	ret
054e4                 | 
054e4                 | _ff_cc_st_dword_0195
054e4     07 11 42 FC | 	wrbyte	arg02, arg01
054e8     08 10 46 F0 | 	shr	arg02, #8
054ec     01 0E 06 F1 | 	add	arg01, #1
054f0     07 11 42 FC | 	wrbyte	arg02, arg01
054f4     08 10 46 F0 | 	shr	arg02, #8
054f8     01 0E 06 F1 | 	add	arg01, #1
054fc     07 11 42 FC | 	wrbyte	arg02, arg01
05500     08 10 46 F0 | 	shr	arg02, #8
05504     01 0E 06 F1 | 	add	arg01, #1
05508     07 11 42 FC | 	wrbyte	arg02, arg01
0550c                 | _ff_cc_st_dword_0195_ret
0550c     2D 00 64 FD | 	ret
05510                 | 
05510                 | _ff_cc_mem_cpy_0198
05510     00 12 0E F2 | 	cmp	arg03, #0 wz
05514     24 00 90 AD |  if_e	jmp	#LR__0340
05518                 | ' 		do {
05518     00 AB 9F FE | 	loc	pa,	#(@LR__0338-@LR__0336)
0551c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
05520                 | LR__0336
05520     09 0D D8 FC | 	rep	@LR__0339, arg03
05524                 | LR__0337
05524     08 F9 01 F6 | 	mov	_var01, arg02
05528     01 F8 05 F1 | 	add	_var01, #1
0552c     08 FB C1 FA | 	rdbyte	_var02, arg02
05530     FC 10 02 F6 | 	mov	arg02, _var01
05534     07 FB 41 FC | 	wrbyte	_var02, arg01
05538     01 0E 06 F1 | 	add	arg01, #1
0553c                 | LR__0338
0553c                 | LR__0339
0553c                 | LR__0340
0553c                 | _ff_cc_mem_cpy_0198_ret
0553c     2D 00 64 FD | 	ret
05540                 | 
05540                 | _ff_cc_mem_cmp_0204
05540     E0 AA 9F FE | 	loc	pa,	#(@LR__0342-@LR__0341)
05544     8C 00 A0 FD | 	call	#FCACHE_LOAD_
05548                 | ' 
05548                 | ' 	do {
05548                 | LR__0341
05548     07 F9 C1 FA | 	rdbyte	_var01, arg01
0554c     08 FB C1 FA | 	rdbyte	_var02, arg02
05550     FD F8 81 F1 | 	sub	_var01, _var02
05554     01 12 8E F1 | 	sub	arg03, #1 wz
05558     01 0E 06 F1 | 	add	arg01, #1
0555c     01 10 06 F1 | 	add	arg02, #1
05560     08 00 90 AD |  if_e	jmp	#LR__0343
05564     00 F8 0D F2 | 	cmp	_var01, #0 wz
05568     DC FF 9F AD |  if_e	jmp	#LR__0341
0556c                 | LR__0342
0556c                 | LR__0343
0556c                 | ' 
0556c                 | ' 	return r;
0556c     FC F4 01 F6 | 	mov	result1, _var01
05570                 | _ff_cc_mem_cmp_0204_ret
05570     2D 00 64 FD | 	ret
05574                 | 
05574                 | _ff_cc_chk_chr_0205
05574     A0 AA 9F FE | 	loc	pa,	#(@LR__0345-@LR__0344)
05578     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0557c                 | ' {
0557c                 | ' 	while (*str && *str != chr) str++;
0557c                 | LR__0344
0557c     07 F9 C9 FA | 	rdbyte	_var01, arg01 wz
05580     10 00 90 AD |  if_e	jmp	#LR__0346
05584     07 FB C1 FA | 	rdbyte	_var02, arg01
05588     08 FB 09 F2 | 	cmp	_var02, arg02 wz
0558c     01 0E 06 51 |  if_ne	add	arg01, #1
05590     E8 FF 9F 5D |  if_ne	jmp	#LR__0344
05594                 | LR__0345
05594                 | LR__0346
05594                 | ' 	return *str;
05594     07 F5 C1 FA | 	rdbyte	result1, arg01
05598                 | _ff_cc_chk_chr_0205_ret
05598     2D 00 64 FD | 	ret
0559c                 | 
0559c                 | _ff_cc_tchar2uni_0212
0559c     05 4C 05 F6 | 	mov	COUNT_, #5
055a0     A9 00 A0 FD | 	call	#pushregs_
055a4     07 19 02 F6 | 	mov	local01, arg01
055a8     0C 1B 02 FB | 	rdlong	local02, local01
055ac     0D 1D C2 FA | 	rdbyte	local03, local02
055b0     0E 0F 02 F6 | 	mov	arg01, local03
055b4     0F 0E 46 F7 | 	zerox	arg01, #15
055b8     01 1A 06 F1 | 	add	local02, #1
055bc     07 0E 4E F7 | 	zerox	arg01, #7 wz
055c0     00 F4 05 56 |  if_ne	mov	result1, #0
055c4                 | ' 
055c4                 | ' 	return 0;
055c4     00 F4 05 A6 |  if_e	mov	result1, #0
055c8     00 F4 0D F2 | 	cmp	result1, #0 wz
055cc     34 00 90 AD |  if_e	jmp	#LR__0347
055d0     0D 1F C2 FA | 	rdbyte	local04, local02
055d4     0F 0F 02 F6 | 	mov	arg01, local04
055d8     01 1A 06 F1 | 	add	local02, #1
055dc     07 0E 4E F7 | 	zerox	arg01, #7 wz
055e0     00 F4 05 56 |  if_ne	mov	result1, #0
055e4                 | ' 
055e4                 | ' 	return 0;
055e4     00 F4 05 A6 |  if_e	mov	result1, #0
055e8     00 F4 0D F2 | 	cmp	result1, #0 wz
055ec     01 F4 65 A6 |  if_e	neg	result1, #1
055f0     4C 00 90 AD |  if_e	jmp	#LR__0349
055f4     0F 1C 46 F7 | 	zerox	local03, #15
055f8     08 1C 66 F0 | 	shl	local03, #8
055fc     07 1E 46 F7 | 	zerox	local04, #7
05600     0F 1D 02 F1 | 	add	local03, local04
05604                 | LR__0347
05604     0E 21 02 F6 | 	mov	local05, local03
05608     0F 20 4E F7 | 	zerox	local05, #15 wz
0560c     24 00 90 AD |  if_e	jmp	#LR__0348
05610     0E 0F 02 F6 | 	mov	arg01, local03
05614     01 00 00 FF 
05618     52 11 06 F6 | 	mov	arg02, ##850
0561c     34 F1 BF FD | 	call	#_ff_cc_ff_oem2uni
05620     FA 1C 02 F6 | 	mov	local03, result1
05624     0E 21 02 F6 | 	mov	local05, local03
05628     0F 20 4E F7 | 	zerox	local05, #15 wz
0562c     01 F4 65 A6 |  if_e	neg	result1, #1
05630     0C 00 90 AD |  if_e	jmp	#LR__0349
05634                 | LR__0348
05634     0E F5 01 F6 | 	mov	result1, local03
05638     0F F4 45 F7 | 	zerox	result1, #15
0563c     0C 1B 62 FC | 	wrlong	local02, local01
05640                 | ' 	}
05640                 | ' 	uc = wc;
05640                 | ' 
05640                 | ' 
05640                 | ' 	*str = p;
05640                 | ' 	return uc;
05640                 | LR__0349
05640     A8 F0 03 F6 | 	mov	ptra, fp
05644     B3 00 A0 FD | 	call	#popregs_
05648                 | _ff_cc_tchar2uni_0212_ret
05648     2D 00 64 FD | 	ret
0564c                 | 
0564c                 | _ff_cc_put_utf_0214
0564c     05 4C 05 F6 | 	mov	COUNT_, #5
05650     A9 00 A0 FD | 	call	#pushregs_
05654     08 19 02 F6 | 	mov	local01, arg02
05658     09 1B 02 F6 | 	mov	local02, arg03
0565c     01 00 00 FF 
05660     52 11 06 F6 | 	mov	arg02, ##850
05664     54 F1 BF FD | 	call	#_ff_cc_ff_uni2oem
05668     FA 1C 02 F6 | 	mov	local03, result1
0566c     0E 1F 02 F6 | 	mov	local04, local03
05670     0F 1E 46 F7 | 	zerox	local04, #15
05674     00 1F 16 F2 | 	cmp	local04, #256 wc
05678     30 00 90 CD |  if_b	jmp	#LR__0350
0567c     02 1A 16 F2 | 	cmp	local02, #2 wc
05680     00 F4 05 C6 |  if_b	mov	result1, #0
05684     54 00 90 CD |  if_b	jmp	#LR__0353
05688     0E 21 02 F6 | 	mov	local05, local03
0568c     0F 20 46 F7 | 	zerox	local05, #15
05690     08 20 46 F0 | 	shr	local05, #8
05694     0C 21 42 FC | 	wrbyte	local05, local01
05698     01 18 06 F1 | 	add	local01, #1
0569c     0F 1C 46 F7 | 	zerox	local03, #15
056a0     0C 1D 42 FC | 	wrbyte	local03, local01
056a4                 | ' 		*buf++ = (TCHAR)wc;
056a4                 | ' 		return 2;
056a4     02 F4 05 F6 | 	mov	result1, #2
056a8     30 00 90 FD | 	jmp	#LR__0353
056ac                 | LR__0350
056ac     0E 1F 02 F6 | 	mov	local04, local03
056b0     0F 1E 4E F7 | 	zerox	local04, #15 wz
056b4     08 00 90 AD |  if_e	jmp	#LR__0351
056b8     01 1A 16 F2 | 	cmp	local02, #1 wc
056bc     08 00 90 3D |  if_ae	jmp	#LR__0352
056c0                 | LR__0351
056c0     00 F4 05 F6 | 	mov	result1, #0
056c4     14 00 90 FD | 	jmp	#LR__0353
056c8                 | LR__0352
056c8     0C 1F 02 F6 | 	mov	local04, local01
056cc     0E 21 02 F6 | 	mov	local05, local03
056d0     0F 20 46 F7 | 	zerox	local05, #15
056d4     0F 21 42 FC | 	wrbyte	local05, local04
056d8                 | ' 	*buf++ = (TCHAR)wc;
056d8                 | ' 	return 1;
056d8     01 F4 05 F6 | 	mov	result1, #1
056dc                 | LR__0353
056dc     A8 F0 03 F6 | 	mov	ptra, fp
056e0     B3 00 A0 FD | 	call	#popregs_
056e4                 | _ff_cc_put_utf_0214_ret
056e4     2D 00 64 FD | 	ret
056e8                 | 
056e8                 | _ff_cc_sync_window_0216
056e8     06 4C 05 F6 | 	mov	COUNT_, #6
056ec     A9 00 A0 FD | 	call	#pushregs_
056f0     07 19 02 F6 | 	mov	local01, arg01
056f4     00 1A 06 F6 | 	mov	local02, #0
056f8     03 18 06 F1 | 	add	local01, #3
056fc     0C 1D CA FA | 	rdbyte	local03, local01 wz
05700     03 18 86 F1 | 	sub	local01, #3
05704     A8 00 90 AD |  if_e	jmp	#LR__0356
05708     01 18 06 F1 | 	add	local01, #1
0570c     0C 0F C2 FA | 	rdbyte	arg01, local01
05710     33 18 06 F1 | 	add	local01, #51
05714     0C 11 02 F6 | 	mov	arg02, local01
05718     04 18 86 F1 | 	sub	local01, #4
0571c     0C 13 02 FB | 	rdlong	arg03, local01
05720     30 18 86 F1 | 	sub	local01, #48
05724     01 14 06 F6 | 	mov	arg04, #1
05728     54 F9 BF FD | 	call	#_ff_cc_disk_write
0572c     00 F4 0D F2 | 	cmp	result1, #0 wz
05730     78 00 90 5D |  if_ne	jmp	#LR__0354
05734     03 18 06 F1 | 	add	local01, #3
05738     0C 01 48 FC | 	wrbyte	#0, local01
0573c     2D 18 06 F1 | 	add	local01, #45
05740     0C 1D 02 FB | 	rdlong	local03, local01
05744     0C 18 86 F1 | 	sub	local01, #12
05748     0C 1F 02 FB | 	rdlong	local04, local01
0574c     0F 1D 82 F1 | 	sub	local03, local04
05750     08 18 86 F1 | 	sub	local01, #8
05754     0C 21 02 FB | 	rdlong	local05, local01
05758     1C 18 86 F1 | 	sub	local01, #28
0575c     10 1D 12 F2 | 	cmp	local03, local05 wc
05760     4C 00 90 3D |  if_ae	jmp	#LR__0355
05764     02 18 06 F1 | 	add	local01, #2
05768     0C 1D C2 FA | 	rdbyte	local03, local01
0576c     02 18 86 F1 | 	sub	local01, #2
05770     07 1C 46 F7 | 	zerox	local03, #7
05774     02 1C 0E F2 | 	cmp	local03, #2 wz
05778     34 00 90 5D |  if_ne	jmp	#LR__0355
0577c     01 18 06 F1 | 	add	local01, #1
05780     0C 0F C2 FA | 	rdbyte	arg01, local01
05784     33 18 06 F1 | 	add	local01, #51
05788     0C 11 02 F6 | 	mov	arg02, local01
0578c     04 18 86 F1 | 	sub	local01, #4
05790     0C 13 02 FB | 	rdlong	arg03, local01
05794     14 18 86 F1 | 	sub	local01, #20
05798     0C 23 02 FB | 	rdlong	local06, local01
0579c     11 13 02 F1 | 	add	arg03, local06
057a0     01 14 06 F6 | 	mov	arg04, #1
057a4     D8 F8 BF FD | 	call	#_ff_cc_disk_write
057a8     04 00 90 FD | 	jmp	#LR__0355
057ac                 | LR__0354
057ac     01 1A 06 F6 | 	mov	local02, #1
057b0                 | LR__0355
057b0                 | LR__0356
057b0                 | ' 			res = FR_DISK_ERR;
057b0                 | ' 		}
057b0                 | ' 	}
057b0                 | ' 	return res;
057b0     0D F5 01 F6 | 	mov	result1, local02
057b4     A8 F0 03 F6 | 	mov	ptra, fp
057b8     B3 00 A0 FD | 	call	#popregs_
057bc                 | _ff_cc_sync_window_0216_ret
057bc     2D 00 64 FD | 	ret
057c0                 | 
057c0                 | _ff_cc_move_window_0218
057c0     04 4C 05 F6 | 	mov	COUNT_, #4
057c4     A9 00 A0 FD | 	call	#pushregs_
057c8     07 19 02 F6 | 	mov	local01, arg01
057cc     08 1B 02 F6 | 	mov	local02, arg02
057d0     00 1C 06 F6 | 	mov	local03, #0
057d4     30 18 06 F1 | 	add	local01, #48
057d8     0C 1F 02 FB | 	rdlong	local04, local01
057dc     30 18 86 F1 | 	sub	local01, #48
057e0     0F 1B 0A F2 | 	cmp	local02, local04 wz
057e4     44 00 90 AD |  if_e	jmp	#LR__0358
057e8     0C 0F 02 F6 | 	mov	arg01, local01
057ec     F8 FE BF FD | 	call	#_ff_cc_sync_window_0216
057f0     FA 1C 0A F6 | 	mov	local03, result1 wz
057f4     34 00 90 5D |  if_ne	jmp	#LR__0357
057f8     01 18 06 F1 | 	add	local01, #1
057fc     0C 0F C2 FA | 	rdbyte	arg01, local01
05800     33 18 06 F1 | 	add	local01, #51
05804     0C 11 02 F6 | 	mov	arg02, local01
05808     34 18 86 F1 | 	sub	local01, #52
0580c     0D 13 02 F6 | 	mov	arg03, local02
05810     01 14 06 F6 | 	mov	arg04, #1
05814     8C F7 BF FD | 	call	#_ff_cc_disk_read
05818     00 F4 0D F2 | 	cmp	result1, #0 wz
0581c     01 1A 66 56 |  if_ne	neg	local02, #1
05820     01 1C 06 56 |  if_ne	mov	local03, #1
05824     30 18 06 F1 | 	add	local01, #48
05828     0C 1B 62 FC | 	wrlong	local02, local01
0582c                 | LR__0357
0582c                 | LR__0358
0582c                 | ' 				sect = (LBA_t)0 - 1;
0582c                 | ' 				res = FR_DISK_ERR;
0582c                 | ' 			}
0582c                 | ' 			fs->winsect = sect;
0582c                 | ' 		}
0582c                 | ' 	}
0582c                 | ' 	return res;
0582c     0E F5 01 F6 | 	mov	result1, local03
05830     A8 F0 03 F6 | 	mov	ptra, fp
05834     B3 00 A0 FD | 	call	#popregs_
05838                 | _ff_cc_move_window_0218_ret
05838     2D 00 64 FD | 	ret
0583c                 | 
0583c                 | _ff_cc_sync_fs_0220
0583c     06 4C 05 F6 | 	mov	COUNT_, #6
05840     A9 00 A0 FD | 	call	#pushregs_
05844     07 19 02 F6 | 	mov	local01, arg01
05848     9C FE BF FD | 	call	#_ff_cc_sync_window_0216
0584c     FA 1A 0A F6 | 	mov	local02, result1 wz
05850     3C 01 90 5D |  if_ne	jmp	#LR__0364
05854     0C 1D C2 FA | 	rdbyte	local03, local01
05858     03 1C 0E F2 | 	cmp	local03, #3 wz
0585c     14 01 90 5D |  if_ne	jmp	#LR__0363
05860     04 18 06 F1 | 	add	local01, #4
05864     0C 1F C2 FA | 	rdbyte	local04, local01
05868     04 18 86 F1 | 	sub	local01, #4
0586c     07 1E 46 F7 | 	zerox	local04, #7
05870     01 1E 0E F2 | 	cmp	local04, #1 wz
05874     FC 00 90 5D |  if_ne	jmp	#LR__0363
05878     34 18 06 F1 | 	add	local01, #52
0587c     0C 0F 02 F6 | 	mov	arg01, local01
05880     34 18 86 F1 | 	sub	local01, #52
05884     00 10 06 F6 | 	mov	arg02, #0
05888     09 12 C6 F9 | 	decod	arg03, #9
0588c                 | ' {
0588c                 | ' 	BYTE *d = (BYTE*)dst;
0588c                 | ' 
0588c                 | ' 	do {
0588c     7C A7 9F FE | 	loc	pa,	#(@LR__0361-@LR__0359)
05890     8C 00 A0 FD | 	call	#FCACHE_LOAD_
05894                 | LR__0359
05894     09 05 D8 FC | 	rep	@LR__0362, arg03
05898                 | LR__0360
05898     07 11 42 FC | 	wrbyte	arg02, arg01
0589c     01 0E 06 F1 | 	add	arg01, #1
058a0                 | LR__0361
058a0                 | LR__0362
058a0     34 18 06 F1 | 	add	local01, #52
058a4     0C 0F 02 F6 | 	mov	arg01, local01
058a8     34 18 86 F1 | 	sub	local01, #52
058ac     FE 0F 06 F1 | 	add	arg01, #510
058b0     55 00 00 FF 
058b4     55 10 06 F6 | 	mov	arg02, ##43605
058b8     04 FC BF FD | 	call	#_ff_cc_st_word_0194
058bc     34 18 06 F1 | 	add	local01, #52
058c0     0C 0F 02 F6 | 	mov	arg01, local01
058c4     34 18 86 F1 | 	sub	local01, #52
058c8     A9 B0 20 FF 
058cc     52 10 06 F6 | 	mov	arg02, ##1096897106
058d0     10 FC BF FD | 	call	#_ff_cc_st_dword_0195
058d4     34 18 06 F1 | 	add	local01, #52
058d8     0C 0F 02 F6 | 	mov	arg01, local01
058dc     34 18 86 F1 | 	sub	local01, #52
058e0     E4 0F 06 F1 | 	add	arg01, #484
058e4     B9 A0 30 FF 
058e8     72 10 06 F6 | 	mov	arg02, ##1631679090
058ec     F4 FB BF FD | 	call	#_ff_cc_st_dword_0195
058f0     34 18 06 F1 | 	add	local01, #52
058f4     0C 0F 02 F6 | 	mov	arg01, local01
058f8     E8 0F 06 F1 | 	add	arg01, #488
058fc     20 18 86 F1 | 	sub	local01, #32
05900     0C 11 02 FB | 	rdlong	arg02, local01
05904     14 18 86 F1 | 	sub	local01, #20
05908     D8 FB BF FD | 	call	#_ff_cc_st_dword_0195
0590c     34 18 06 F1 | 	add	local01, #52
05910     0C 0F 02 F6 | 	mov	arg01, local01
05914     EC 0F 06 F1 | 	add	arg01, #492
05918     24 18 86 F1 | 	sub	local01, #36
0591c     0C 11 02 FB | 	rdlong	arg02, local01
05920     10 18 86 F1 | 	sub	local01, #16
05924     BC FB BF FD | 	call	#_ff_cc_st_dword_0195
05928     20 18 06 F1 | 	add	local01, #32
0592c     0C 21 02 FB | 	rdlong	local05, local01
05930     01 20 06 F1 | 	add	local05, #1
05934     10 18 06 F1 | 	add	local01, #16
05938     0C 21 62 FC | 	wrlong	local05, local01
0593c     2F 18 86 F1 | 	sub	local01, #47
05940     0C 0F C2 FA | 	rdbyte	arg01, local01
05944     33 18 06 F1 | 	add	local01, #51
05948     0C 1F 02 F6 | 	mov	local04, local01
0594c     01 22 06 F6 | 	mov	local06, #1
05950     0F 11 02 F6 | 	mov	arg02, local04
05954     10 13 02 F6 | 	mov	arg03, local05
05958     01 14 06 F6 | 	mov	arg04, #1
0595c     34 18 86 F1 | 	sub	local01, #52
05960     1C F7 BF FD | 	call	#_ff_cc_disk_write
05964     00 1C 06 F6 | 	mov	local03, #0
05968     04 18 06 F1 | 	add	local01, #4
0596c     0C 01 48 FC | 	wrbyte	#0, local01
05970     04 18 86 F1 | 	sub	local01, #4
05974                 | LR__0363
05974     01 18 06 F1 | 	add	local01, #1
05978     0C 0F C2 FA | 	rdbyte	arg01, local01
0597c     00 10 06 F6 | 	mov	arg02, #0
05980     00 12 06 F6 | 	mov	arg03, #0
05984     2C F8 BF FD | 	call	#_ff_cc_disk_ioctl
05988     00 F4 0D F2 | 	cmp	result1, #0 wz
0598c     01 1A 06 56 |  if_ne	mov	local02, #1
05990                 | LR__0364
05990                 | ' 	}
05990                 | ' 
05990                 | ' 	return res;
05990     0D F5 01 F6 | 	mov	result1, local02
05994     A8 F0 03 F6 | 	mov	ptra, fp
05998     B3 00 A0 FD | 	call	#popregs_
0599c                 | _ff_cc_sync_fs_0220_ret
0599c     2D 00 64 FD | 	ret
059a0                 | 
059a0                 | _ff_cc_clst2sect_0221
059a0     02 10 86 F1 | 	sub	arg02, #2
059a4     18 0E 06 F1 | 	add	arg01, #24
059a8     07 F9 01 FB | 	rdlong	_var01, arg01
059ac     18 0E 86 F1 | 	sub	arg01, #24
059b0     02 F8 85 F1 | 	sub	_var01, #2
059b4     FC 10 12 F2 | 	cmp	arg02, _var01 wc
059b8     00 F4 05 36 |  if_ae	mov	result1, #0
059bc     1C 00 90 3D |  if_ae	jmp	#_ff_cc_clst2sect_0221_ret
059c0     0A 0E 06 F1 | 	add	arg01, #10
059c4     07 FB E1 FA | 	rdword	_var02, arg01
059c8     08 FB 01 FD | 	qmul	_var02, arg02
059cc                 | ' 	return fs->database + (LBA_t)fs->csize * clst;
059cc     22 0E 06 F1 | 	add	arg01, #34
059d0     07 F5 01 FB | 	rdlong	result1, arg01
059d4     18 FC 61 FD | 	getqx	_var03
059d8     FE F4 01 F1 | 	add	result1, _var03
059dc                 | _ff_cc_clst2sect_0221_ret
059dc     2D 00 64 FD | 	ret
059e0                 | 
059e0                 | _ff_cc_get_fat_0226
059e0     0C 4C 05 F6 | 	mov	COUNT_, #12
059e4     A9 00 A0 FD | 	call	#pushregs_
059e8     07 19 02 F6 | 	mov	local01, arg01
059ec     08 1B 02 F6 | 	mov	local02, arg02
059f0     0C 1D 02 FB | 	rdlong	local03, local01
059f4     02 1A 16 F2 | 	cmp	local02, #2 wc
059f8     18 00 90 CD |  if_b	jmp	#LR__0365
059fc     18 1C 06 F1 | 	add	local03, #24
05a00     0E 1F 02 FB | 	rdlong	local04, local03
05a04     18 1C 86 F1 | 	sub	local03, #24
05a08     0F 21 02 F6 | 	mov	local05, local04
05a0c     10 1B 12 F2 | 	cmp	local02, local05 wc
05a10     08 00 90 CD |  if_b	jmp	#LR__0366
05a14                 | LR__0365
05a14     01 22 06 F6 | 	mov	local06, #1
05a18     74 01 90 FD | 	jmp	#LR__0373
05a1c                 | LR__0366
05a1c     01 22 66 F6 | 	neg	local06, #1
05a20                 | ' 		val = 0xFFFFFFFF;
05a20                 | ' 
05a20                 | ' 		switch (fs->fs_type) {
05a20     0E 25 C2 FA | 	rdbyte	local07, local03
05a24     01 24 86 F1 | 	sub	local07, #1
05a28     03 24 26 F3 | 	fle	local07, #3
05a2c     30 24 62 FD | 	jmprel	local07
05a30                 | LR__0367
05a30     0C 00 90 FD | 	jmp	#LR__0368
05a34     B8 00 90 FD | 	jmp	#LR__0369
05a38     00 01 90 FD | 	jmp	#LR__0370
05a3c     4C 01 90 FD | 	jmp	#LR__0371
05a40                 | LR__0368
05a40     0D 27 02 F6 | 	mov	local08, local02
05a44     0D 1F 02 F6 | 	mov	local04, local02
05a48     01 1E 46 F0 | 	shr	local04, #1
05a4c     0F 27 02 F1 | 	add	local08, local04
05a50     0E 0F 02 F6 | 	mov	arg01, local03
05a54     13 29 02 F6 | 	mov	local09, local08
05a58     09 28 46 F0 | 	shr	local09, #9
05a5c     24 1C 06 F1 | 	add	local03, #36
05a60     0E 11 02 FB | 	rdlong	arg02, local03
05a64     24 1C 86 F1 | 	sub	local03, #36
05a68     14 11 02 F1 | 	add	arg02, local09
05a6c     50 FD BF FD | 	call	#_ff_cc_move_window_0218
05a70     00 F4 0D F2 | 	cmp	result1, #0 wz
05a74     18 01 90 5D |  if_ne	jmp	#LR__0372
05a78     13 2B 02 F6 | 	mov	local10, local08
05a7c     FF 2B 06 F5 | 	and	local10, #511
05a80     34 1C 06 F1 | 	add	local03, #52
05a84     0E 2B 02 F1 | 	add	local10, local03
05a88     15 2D C2 FA | 	rdbyte	local11, local10
05a8c     34 1C 86 F1 | 	sub	local03, #52
05a90     0E 0F 02 F6 | 	mov	arg01, local03
05a94     01 26 06 F1 | 	add	local08, #1
05a98     13 29 02 F6 | 	mov	local09, local08
05a9c     09 28 46 F0 | 	shr	local09, #9
05aa0     24 1C 06 F1 | 	add	local03, #36
05aa4     0E 11 02 FB | 	rdlong	arg02, local03
05aa8     24 1C 86 F1 | 	sub	local03, #36
05aac     14 11 02 F1 | 	add	arg02, local09
05ab0     0C FD BF FD | 	call	#_ff_cc_move_window_0218
05ab4     00 F4 0D F2 | 	cmp	result1, #0 wz
05ab8     D4 00 90 5D |  if_ne	jmp	#LR__0372
05abc     FF 27 06 F5 | 	and	local08, #511
05ac0     34 1C 06 F1 | 	add	local03, #52
05ac4     0E 27 02 F1 | 	add	local08, local03
05ac8     13 1F C2 FA | 	rdbyte	local04, local08
05acc     08 1E 66 F0 | 	shl	local04, #8
05ad0     0F 2D 42 F5 | 	or	local11, local04
05ad4     01 1A CE F7 | 	test	local02, #1 wz
05ad8     04 2C 46 50 |  if_ne	shr	local11, #4
05adc     16 21 02 56 |  if_ne	mov	local05, local11
05ae0     0B 2C 46 A7 |  if_e	zerox	local11, #11
05ae4     16 21 02 A6 |  if_e	mov	local05, local11
05ae8     10 23 02 F6 | 	mov	local06, local05
05aec                 | ' 			wc |= fs->win[bc %  ((UINT) 512 ) ] << 8;
05aec                 | ' 			val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
05aec                 | ' 			break;
05aec     A0 00 90 FD | 	jmp	#LR__0372
05af0                 | LR__0369
05af0     0E 0F 02 F6 | 	mov	arg01, local03
05af4     0D 29 02 F6 | 	mov	local09, local02
05af8     08 28 46 F0 | 	shr	local09, #8
05afc     24 1C 06 F1 | 	add	local03, #36
05b00     0E 11 02 FB | 	rdlong	arg02, local03
05b04     24 1C 86 F1 | 	sub	local03, #36
05b08     14 11 02 F1 | 	add	arg02, local09
05b0c     B0 FC BF FD | 	call	#_ff_cc_move_window_0218
05b10     00 F4 0D F2 | 	cmp	result1, #0 wz
05b14     78 00 90 5D |  if_ne	jmp	#LR__0372
05b18     34 1C 06 F1 | 	add	local03, #52
05b1c     01 1A 66 F0 | 	shl	local02, #1
05b20     FF 1B 06 F5 | 	and	local02, #511
05b24     0D 1D 02 F1 | 	add	local03, local02
05b28     0E 0F 02 F6 | 	mov	arg01, local03
05b2c     2C F9 BF FD | 	call	#_ff_cc_ld_word_0191
05b30     0F F4 45 F7 | 	zerox	result1, #15
05b34     FA 22 02 F6 | 	mov	local06, result1
05b38                 | ' 			val = ld_word(fs->win + clst * 2 %  ((UINT) 512 ) );
05b38                 | ' 			break;
05b38     54 00 90 FD | 	jmp	#LR__0372
05b3c                 | LR__0370
05b3c     0E 0F 02 F6 | 	mov	arg01, local03
05b40     0D 29 02 F6 | 	mov	local09, local02
05b44     07 28 46 F0 | 	shr	local09, #7
05b48     24 1C 06 F1 | 	add	local03, #36
05b4c     0E 11 02 FB | 	rdlong	arg02, local03
05b50     24 1C 86 F1 | 	sub	local03, #36
05b54     14 11 02 F1 | 	add	arg02, local09
05b58     64 FC BF FD | 	call	#_ff_cc_move_window_0218
05b5c     00 F4 0D F2 | 	cmp	result1, #0 wz
05b60     2C 00 90 5D |  if_ne	jmp	#LR__0372
05b64     34 1C 06 F1 | 	add	local03, #52
05b68     0E 0F 02 F6 | 	mov	arg01, local03
05b6c     0D 2F 02 F6 | 	mov	local12, local02
05b70     02 2E 66 F0 | 	shl	local12, #2
05b74     FF 2F 06 F5 | 	and	local12, #511
05b78     17 0F 02 F1 | 	add	arg01, local12
05b7c     00 F9 BF FD | 	call	#_ff_cc_ld_dword_0193
05b80     FA 22 02 F6 | 	mov	local06, result1
05b84     7C 22 06 F4 | 	bitl	local06, #124
05b88                 | ' 			val = ld_dword(fs->win + clst * 4 %  ((UINT) 512 ) ) & 0x0FFFFFFF;
05b88                 | ' 			break;
05b88     04 00 90 FD | 	jmp	#LR__0372
05b8c                 | LR__0371
05b8c     01 22 06 F6 | 	mov	local06, #1
05b90                 | LR__0372
05b90                 | LR__0373
05b90                 | ' 			val = 1;
05b90                 | ' 		}
05b90                 | ' 	}
05b90                 | ' 
05b90                 | ' 	return val;
05b90     11 F5 01 F6 | 	mov	result1, local06
05b94     A8 F0 03 F6 | 	mov	ptra, fp
05b98     B3 00 A0 FD | 	call	#popregs_
05b9c                 | _ff_cc_get_fat_0226_ret
05b9c     2D 00 64 FD | 	ret
05ba0                 | 
05ba0                 | _ff_cc_put_fat_0230
05ba0     0F 4C 05 F6 | 	mov	COUNT_, #15
05ba4     A9 00 A0 FD | 	call	#pushregs_
05ba8     07 19 02 F6 | 	mov	local01, arg01
05bac     08 1B 02 F6 | 	mov	local02, arg02
05bb0     09 1D 02 F6 | 	mov	local03, arg03
05bb4     02 1E 06 F6 | 	mov	local04, #2
05bb8     02 1A 16 F2 | 	cmp	local02, #2 wc
05bbc     B0 02 90 CD |  if_b	jmp	#LR__0383
05bc0     18 18 06 F1 | 	add	local01, #24
05bc4     0C 21 02 FB | 	rdlong	local05, local01
05bc8     18 18 86 F1 | 	sub	local01, #24
05bcc     10 23 02 F6 | 	mov	local06, local05
05bd0     11 1B 12 F2 | 	cmp	local02, local06 wc
05bd4     98 02 90 3D |  if_ae	jmp	#LR__0383
05bd8                 | ' 		switch (fs->fs_type) {
05bd8     0C 25 C2 FA | 	rdbyte	local07, local01
05bdc     01 24 86 F1 | 	sub	local07, #1
05be0     03 24 26 F3 | 	fle	local07, #3
05be4     30 24 62 FD | 	jmprel	local07
05be8                 | LR__0374
05be8     0C 00 90 FD | 	jmp	#LR__0375
05bec     4C 01 90 FD | 	jmp	#LR__0380
05bf0     C8 01 90 FD | 	jmp	#LR__0381
05bf4     78 02 90 FD | 	jmp	#LR__0382
05bf8                 | LR__0375
05bf8     0D 27 02 F6 | 	mov	local08, local02
05bfc     0D 21 02 F6 | 	mov	local05, local02
05c00     01 20 46 F0 | 	shr	local05, #1
05c04     10 27 02 F1 | 	add	local08, local05
05c08     0C 0F 02 F6 | 	mov	arg01, local01
05c0c     13 29 02 F6 | 	mov	local09, local08
05c10     09 28 46 F0 | 	shr	local09, #9
05c14     24 18 06 F1 | 	add	local01, #36
05c18     0C 2B 02 FB | 	rdlong	local10, local01
05c1c     24 18 86 F1 | 	sub	local01, #36
05c20     15 2D 02 F6 | 	mov	local11, local10
05c24     14 2D 02 F1 | 	add	local11, local09
05c28     16 21 02 F6 | 	mov	local05, local11
05c2c     10 11 02 F6 | 	mov	arg02, local05
05c30     8C FB BF FD | 	call	#_ff_cc_move_window_0218
05c34     FA 22 02 F6 | 	mov	local06, result1
05c38     11 1F 0A F6 | 	mov	local04, local06 wz
05c3c     30 02 90 5D |  if_ne	jmp	#LR__0382
05c40     34 18 06 F1 | 	add	local01, #52
05c44     0C 2F 02 F6 | 	mov	local12, local01
05c48     13 31 02 F6 | 	mov	local13, local08
05c4c     FF 31 06 F5 | 	and	local13, #511
05c50     18 2F 02 F1 | 	add	local12, local13
05c54     01 1A CE F7 | 	test	local02, #1 wz
05c58     34 18 86 F1 | 	sub	local01, #52
05c5c     01 26 06 F1 | 	add	local08, #1
05c60     1C 00 90 AD |  if_e	jmp	#LR__0376
05c64     17 23 C2 FA | 	rdbyte	local06, local12
05c68     0F 22 06 F5 | 	and	local06, #15
05c6c     0E 29 02 F6 | 	mov	local09, local03
05c70     07 28 46 F7 | 	zerox	local09, #7
05c74     04 28 66 F0 | 	shl	local09, #4
05c78     14 23 42 F5 | 	or	local06, local09
05c7c     04 00 90 FD | 	jmp	#LR__0377
05c80                 | LR__0376
05c80     0E 23 02 F6 | 	mov	local06, local03
05c84                 | LR__0377
05c84     17 23 42 FC | 	wrbyte	local06, local12
05c88     03 18 06 F1 | 	add	local01, #3
05c8c     0C 03 48 FC | 	wrbyte	#1, local01
05c90     03 18 86 F1 | 	sub	local01, #3
05c94     0C 0F 02 F6 | 	mov	arg01, local01
05c98     13 29 02 F6 | 	mov	local09, local08
05c9c     09 28 46 F0 | 	shr	local09, #9
05ca0     24 18 06 F1 | 	add	local01, #36
05ca4     0C 2B 02 FB | 	rdlong	local10, local01
05ca8     24 18 86 F1 | 	sub	local01, #36
05cac     15 2D 02 F6 | 	mov	local11, local10
05cb0     14 2D 02 F1 | 	add	local11, local09
05cb4     16 21 02 F6 | 	mov	local05, local11
05cb8     10 11 02 F6 | 	mov	arg02, local05
05cbc     00 FB BF FD | 	call	#_ff_cc_move_window_0218
05cc0     FA 22 02 F6 | 	mov	local06, result1
05cc4     11 1F 0A F6 | 	mov	local04, local06 wz
05cc8     A4 01 90 5D |  if_ne	jmp	#LR__0382
05ccc     34 18 06 F1 | 	add	local01, #52
05cd0     0C 2F 02 F6 | 	mov	local12, local01
05cd4     13 2D 02 F6 | 	mov	local11, local08
05cd8     FF 2D 06 F5 | 	and	local11, #511
05cdc     16 29 02 F6 | 	mov	local09, local11
05ce0     16 2F 02 F1 | 	add	local12, local11
05ce4     0D 21 02 F6 | 	mov	local05, local02
05ce8     01 20 0E F5 | 	and	local05, #1 wz
05cec     34 18 86 F1 | 	sub	local01, #52
05cf0     10 00 90 AD |  if_e	jmp	#LR__0378
05cf4     0E 2D 02 F6 | 	mov	local11, local03
05cf8     04 2C 46 F0 | 	shr	local11, #4
05cfc     16 23 02 F6 | 	mov	local06, local11
05d00     20 00 90 FD | 	jmp	#LR__0379
05d04                 | LR__0378
05d04     17 29 C2 FA | 	rdbyte	local09, local12
05d08     F0 28 06 F5 | 	and	local09, #240
05d0c     0E 2B 02 F6 | 	mov	local10, local03
05d10     08 2A 46 F0 | 	shr	local10, #8
05d14     07 2A 46 F7 | 	zerox	local10, #7
05d18     0F 2A 06 F5 | 	and	local10, #15
05d1c     15 29 42 F5 | 	or	local09, local10
05d20     14 23 02 F6 | 	mov	local06, local09
05d24                 | LR__0379
05d24     17 23 42 FC | 	wrbyte	local06, local12
05d28     01 22 06 F6 | 	mov	local06, #1
05d2c     03 18 06 F1 | 	add	local01, #3
05d30     0C 03 48 FC | 	wrbyte	#1, local01
05d34     03 18 86 F1 | 	sub	local01, #3
05d38                 | ' 			p = fs->win + bc %  ((UINT) 512 ) ;
05d38                 | ' 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
05d38                 | ' 			fs->wflag = 1;
05d38                 | ' 			break;
05d38     34 01 90 FD | 	jmp	#LR__0382
05d3c                 | LR__0380
05d3c     0C 0F 02 F6 | 	mov	arg01, local01
05d40     0D 29 02 F6 | 	mov	local09, local02
05d44     08 28 46 F0 | 	shr	local09, #8
05d48     24 18 06 F1 | 	add	local01, #36
05d4c     0C 2B 02 FB | 	rdlong	local10, local01
05d50     24 18 86 F1 | 	sub	local01, #36
05d54     15 2D 02 F6 | 	mov	local11, local10
05d58     14 2D 02 F1 | 	add	local11, local09
05d5c     16 21 02 F6 | 	mov	local05, local11
05d60     10 11 02 F6 | 	mov	arg02, local05
05d64     58 FA BF FD | 	call	#_ff_cc_move_window_0218
05d68     FA 22 02 F6 | 	mov	local06, result1
05d6c     11 1F 0A F6 | 	mov	local04, local06 wz
05d70     FC 00 90 5D |  if_ne	jmp	#LR__0382
05d74     34 18 06 F1 | 	add	local01, #52
05d78     0C 2D 02 F6 | 	mov	local11, local01
05d7c     0D 29 02 F6 | 	mov	local09, local02
05d80     01 28 66 F0 | 	shl	local09, #1
05d84     14 2B 02 F6 | 	mov	local10, local09
05d88     FF 2B 06 F5 | 	and	local10, #511
05d8c     15 31 02 F6 | 	mov	local13, local10
05d90     16 0F 02 F6 | 	mov	arg01, local11
05d94     18 0F 02 F1 | 	add	arg01, local13
05d98     0E 21 02 F6 | 	mov	local05, local03
05d9c     10 11 02 F6 | 	mov	arg02, local05
05da0     34 18 86 F1 | 	sub	local01, #52
05da4     18 F7 BF FD | 	call	#_ff_cc_st_word_0194
05da8     01 22 06 F6 | 	mov	local06, #1
05dac     03 18 06 F1 | 	add	local01, #3
05db0     0C 03 48 FC | 	wrbyte	#1, local01
05db4     03 18 86 F1 | 	sub	local01, #3
05db8                 | ' 			st_word(fs->win + clst * 2 %  ((UINT) 512 ) , (WORD)val);
05db8                 | ' 			fs->wflag = 1;
05db8                 | ' 			break;
05db8     B4 00 90 FD | 	jmp	#LR__0382
05dbc                 | LR__0381
05dbc     0C 0F 02 F6 | 	mov	arg01, local01
05dc0     0D 29 02 F6 | 	mov	local09, local02
05dc4     07 28 46 F0 | 	shr	local09, #7
05dc8     24 18 06 F1 | 	add	local01, #36
05dcc     0C 2B 02 FB | 	rdlong	local10, local01
05dd0     24 18 86 F1 | 	sub	local01, #36
05dd4     15 2D 02 F6 | 	mov	local11, local10
05dd8     14 2D 02 F1 | 	add	local11, local09
05ddc     16 21 02 F6 | 	mov	local05, local11
05de0     10 11 02 F6 | 	mov	arg02, local05
05de4     D8 F9 BF FD | 	call	#_ff_cc_move_window_0218
05de8     FA 22 02 F6 | 	mov	local06, result1
05dec     11 1F 0A F6 | 	mov	local04, local06 wz
05df0     7C 00 90 5D |  if_ne	jmp	#LR__0382
05df4     7C 1C 06 F4 | 	bitl	local03, #124
05df8     34 18 06 F1 | 	add	local01, #52
05dfc     0C 0F 02 F6 | 	mov	arg01, local01
05e00     34 18 86 F1 | 	sub	local01, #52
05e04     0D 33 02 F6 | 	mov	local14, local02
05e08     02 32 66 F0 | 	shl	local14, #2
05e0c     FF 33 06 F5 | 	and	local14, #511
05e10     19 35 02 F6 | 	mov	local15, local14
05e14     19 0F 02 F1 | 	add	arg01, local14
05e18     64 F6 BF FD | 	call	#_ff_cc_ld_dword_0193
05e1c     FA 20 02 F6 | 	mov	local05, result1
05e20     00 00 78 FF 
05e24     00 20 06 F5 | 	and	local05, ##-268435456
05e28     10 1D 42 F5 | 	or	local03, local05
05e2c     34 18 06 F1 | 	add	local01, #52
05e30     0C 2D 02 F6 | 	mov	local11, local01
05e34     0D 29 02 F6 | 	mov	local09, local02
05e38     02 28 66 F0 | 	shl	local09, #2
05e3c     14 2B 02 F6 | 	mov	local10, local09
05e40     FF 2B 06 F5 | 	and	local10, #511
05e44     15 31 02 F6 | 	mov	local13, local10
05e48     16 0F 02 F6 | 	mov	arg01, local11
05e4c     18 0F 02 F1 | 	add	arg01, local13
05e50     0E 21 02 F6 | 	mov	local05, local03
05e54     10 11 02 F6 | 	mov	arg02, local05
05e58     34 18 86 F1 | 	sub	local01, #52
05e5c     84 F6 BF FD | 	call	#_ff_cc_st_dword_0195
05e60     01 22 06 F6 | 	mov	local06, #1
05e64     03 18 06 F1 | 	add	local01, #3
05e68     0C 03 48 FC | 	wrbyte	#1, local01
05e6c     03 18 86 F1 | 	sub	local01, #3
05e70                 | ' 				val = (val & 0x0FFFFFFF) | (ld_dword(fs->win + clst * 4 %  ((UINT) 512 ) ) & 0xF0000000);
05e70                 | ' 			}
05e70                 | ' 			st_dword(fs->win + clst * 4 %  ((UINT) 512 ) , val);
05e70                 | ' 			fs->wflag = 1;
05e70                 | ' 			break;
05e70                 | LR__0382
05e70                 | LR__0383
05e70                 | ' 		}
05e70                 | ' 	}
05e70                 | ' 	return res;
05e70     0F F5 01 F6 | 	mov	result1, local04
05e74     A8 F0 03 F6 | 	mov	ptra, fp
05e78     B3 00 A0 FD | 	call	#popregs_
05e7c                 | _ff_cc_put_fat_0230_ret
05e7c     2D 00 64 FD | 	ret
05e80                 | 
05e80                 | _ff_cc_remove_chain_0234
05e80     08 4C 05 F6 | 	mov	COUNT_, #8
05e84     A9 00 A0 FD | 	call	#pushregs_
05e88     07 19 02 F6 | 	mov	local01, arg01
05e8c     08 1B 02 F6 | 	mov	local02, arg02
05e90     09 1D 02 F6 | 	mov	local03, arg03
05e94     0C 1F 02 FB | 	rdlong	local04, local01
05e98     02 1A 16 F2 | 	cmp	local02, #2 wc
05e9c     14 00 90 CD |  if_b	jmp	#LR__0384
05ea0     18 1E 06 F1 | 	add	local04, #24
05ea4     0F 21 02 FB | 	rdlong	local05, local04
05ea8     18 1E 86 F1 | 	sub	local04, #24
05eac     10 1B 12 F2 | 	cmp	local02, local05 wc
05eb0     08 00 90 CD |  if_b	jmp	#LR__0385
05eb4                 | LR__0384
05eb4     02 F4 05 F6 | 	mov	result1, #2
05eb8     D0 00 90 FD | 	jmp	#LR__0390
05ebc                 | LR__0385
05ebc     00 1C 0E F2 | 	cmp	local03, #0 wz
05ec0     1C 00 90 AD |  if_e	jmp	#LR__0386
05ec4     0F 0F 02 F6 | 	mov	arg01, local04
05ec8     0E 11 02 F6 | 	mov	arg02, local03
05ecc     01 12 66 F6 | 	neg	arg03, #1
05ed0     CC FC BF FD | 	call	#_ff_cc_put_fat_0230
05ed4     FA 22 0A F6 | 	mov	local06, result1 wz
05ed8     11 F5 01 56 |  if_ne	mov	result1, local06
05edc     AC 00 90 5D |  if_ne	jmp	#LR__0390
05ee0                 | LR__0386
05ee0                 | ' 	}
05ee0                 | ' 
05ee0                 | ' 
05ee0                 | ' 	do {
05ee0                 | LR__0387
05ee0     0D 11 02 F6 | 	mov	arg02, local02
05ee4     0C 0F 02 F6 | 	mov	arg01, local01
05ee8     F4 FA BF FD | 	call	#_ff_cc_get_fat_0226
05eec     FA 24 0A F6 | 	mov	local07, result1 wz
05ef0     94 00 90 AD |  if_e	jmp	#LR__0389
05ef4     01 24 0E F2 | 	cmp	local07, #1 wz
05ef8     02 F4 05 A6 |  if_e	mov	result1, #2
05efc     8C 00 90 AD |  if_e	jmp	#LR__0390
05f00     FF FF 7F FF 
05f04     FF 25 0E F2 | 	cmp	local07, ##-1 wz
05f08     01 F4 05 A6 |  if_e	mov	result1, #1
05f0c     7C 00 90 AD |  if_e	jmp	#LR__0390
05f10     0D 11 02 F6 | 	mov	arg02, local02
05f14     0F 0F 02 F6 | 	mov	arg01, local04
05f18     00 12 06 F6 | 	mov	arg03, #0
05f1c     80 FC BF FD | 	call	#_ff_cc_put_fat_0230
05f20     FA 22 0A F6 | 	mov	local06, result1 wz
05f24     11 F5 01 56 |  if_ne	mov	result1, local06
05f28     60 00 90 5D |  if_ne	jmp	#LR__0390
05f2c     18 1E 06 F1 | 	add	local04, #24
05f30     0F 21 02 FB | 	rdlong	local05, local04
05f34     02 20 86 F1 | 	sub	local05, #2
05f38     04 1E 86 F1 | 	sub	local04, #4
05f3c     0F 27 02 FB | 	rdlong	local08, local04
05f40     14 1E 86 F1 | 	sub	local04, #20
05f44     10 27 12 F2 | 	cmp	local08, local05 wc
05f48     24 00 90 3D |  if_ae	jmp	#LR__0388
05f4c     14 1E 06 F1 | 	add	local04, #20
05f50     0F 27 02 FB | 	rdlong	local08, local04
05f54     01 26 06 F1 | 	add	local08, #1
05f58     0F 27 62 FC | 	wrlong	local08, local04
05f5c     10 1E 86 F1 | 	sub	local04, #16
05f60     0F 21 C2 FA | 	rdbyte	local05, local04
05f64     01 20 46 F5 | 	or	local05, #1
05f68     0F 21 42 FC | 	wrbyte	local05, local04
05f6c     04 1E 86 F1 | 	sub	local04, #4
05f70                 | LR__0388
05f70     12 1B 02 F6 | 	mov	local02, local07
05f74     18 1E 06 F1 | 	add	local04, #24
05f78     0F 21 02 FB | 	rdlong	local05, local04
05f7c     18 1E 86 F1 | 	sub	local04, #24
05f80     10 1B 12 F2 | 	cmp	local02, local05 wc
05f84     58 FF 9F CD |  if_b	jmp	#LR__0387
05f88                 | LR__0389
05f88                 | ' #line 1531 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
05f88                 | ' 	return FR_OK;
05f88     00 F4 05 F6 | 	mov	result1, #0
05f8c                 | LR__0390
05f8c     A8 F0 03 F6 | 	mov	ptra, fp
05f90     B3 00 A0 FD | 	call	#popregs_
05f94                 | _ff_cc_remove_chain_0234_ret
05f94     2D 00 64 FD | 	ret
05f98                 | 
05f98                 | _ff_cc_create_chain_0240
05f98     0A 4C 05 F6 | 	mov	COUNT_, #10
05f9c     A9 00 A0 FD | 	call	#pushregs_
05fa0     07 19 02 F6 | 	mov	local01, arg01
05fa4     08 1B 0A F6 | 	mov	local02, arg02 wz
05fa8     0C 1D 02 FB | 	rdlong	local03, local01
05fac     2C 00 90 5D |  if_ne	jmp	#LR__0392
05fb0     10 1C 06 F1 | 	add	local03, #16
05fb4     0E 1F 0A FB | 	rdlong	local04, local03 wz
05fb8     10 1C 86 F1 | 	sub	local03, #16
05fbc     14 00 90 AD |  if_e	jmp	#LR__0391
05fc0     18 1C 06 F1 | 	add	local03, #24
05fc4     0E 21 02 FB | 	rdlong	local05, local03
05fc8     18 1C 86 F1 | 	sub	local03, #24
05fcc     10 1F 12 F2 | 	cmp	local04, local05 wc
05fd0     50 00 90 CD |  if_b	jmp	#LR__0393
05fd4                 | LR__0391
05fd4     01 1E 06 F6 | 	mov	local04, #1
05fd8     48 00 90 FD | 	jmp	#LR__0393
05fdc                 | LR__0392
05fdc     0D 11 02 F6 | 	mov	arg02, local02
05fe0     0C 0F 02 F6 | 	mov	arg01, local01
05fe4     F8 F9 BF FD | 	call	#_ff_cc_get_fat_0226
05fe8     FA 22 02 F6 | 	mov	local06, result1
05fec     02 22 16 F2 | 	cmp	local06, #2 wc
05ff0     01 F4 05 C6 |  if_b	mov	result1, #1
05ff4     E0 01 90 CD |  if_b	jmp	#LR__0409
05ff8     FF FF 7F FF 
05ffc     FF 23 0E F2 | 	cmp	local06, ##-1 wz
06000     11 F5 01 A6 |  if_e	mov	result1, local06
06004     D0 01 90 AD |  if_e	jmp	#LR__0409
06008     18 1C 06 F1 | 	add	local03, #24
0600c     0E 21 02 FB | 	rdlong	local05, local03
06010     18 1C 86 F1 | 	sub	local03, #24
06014     10 23 12 F2 | 	cmp	local06, local05 wc
06018     11 F5 01 C6 |  if_b	mov	result1, local06
0601c     B8 01 90 CD |  if_b	jmp	#LR__0409
06020     0D 1F 02 F6 | 	mov	local04, local02
06024                 | LR__0393
06024     14 1C 06 F1 | 	add	local03, #20
06028     0E 21 0A FB | 	rdlong	local05, local03 wz
0602c     14 1C 86 F1 | 	sub	local03, #20
06030     00 F4 05 A6 |  if_e	mov	result1, #0
06034     A0 01 90 AD |  if_e	jmp	#LR__0409
06038     00 24 06 F6 | 	mov	local07, #0
0603c     0D 1F 0A F2 | 	cmp	local04, local02 wz
06040     7C 00 90 5D |  if_ne	jmp	#LR__0398
06044     0F 25 02 F6 | 	mov	local07, local04
06048     01 24 06 F1 | 	add	local07, #1
0604c     18 1C 06 F1 | 	add	local03, #24
06050     0E 21 02 FB | 	rdlong	local05, local03
06054     18 1C 86 F1 | 	sub	local03, #24
06058     10 25 12 F2 | 	cmp	local07, local05 wc
0605c     02 24 06 36 |  if_ae	mov	local07, #2
06060     12 11 02 F6 | 	mov	arg02, local07
06064     0C 0F 02 F6 | 	mov	arg01, local01
06068     74 F9 BF FD | 	call	#_ff_cc_get_fat_0226
0606c     FA 22 02 F6 | 	mov	local06, result1
06070     01 22 0E F2 | 	cmp	local06, #1 wz
06074     0C 00 90 AD |  if_e	jmp	#LR__0394
06078     FF FF 7F FF 
0607c     FF 23 0E F2 | 	cmp	local06, ##-1 wz
06080     08 00 90 5D |  if_ne	jmp	#LR__0395
06084                 | LR__0394
06084     11 F5 01 F6 | 	mov	result1, local06
06088     4C 01 90 FD | 	jmp	#LR__0409
0608c                 | LR__0395
0608c     00 22 0E F2 | 	cmp	local06, #0 wz
06090     2C 00 90 AD |  if_e	jmp	#LR__0397
06094     10 1C 06 F1 | 	add	local03, #16
06098     0E 23 02 FB | 	rdlong	local06, local03
0609c     10 1C 86 F1 | 	sub	local03, #16
060a0     02 22 16 F2 | 	cmp	local06, #2 wc
060a4     14 00 90 CD |  if_b	jmp	#LR__0396
060a8     18 1C 06 F1 | 	add	local03, #24
060ac     0E 21 02 FB | 	rdlong	local05, local03
060b0     18 1C 86 F1 | 	sub	local03, #24
060b4     10 23 12 F2 | 	cmp	local06, local05 wc
060b8     11 1F 02 C6 |  if_b	mov	local04, local06
060bc                 | LR__0396
060bc     00 24 06 F6 | 	mov	local07, #0
060c0                 | LR__0397
060c0                 | LR__0398
060c0     00 24 0E F2 | 	cmp	local07, #0 wz
060c4     6C 00 90 5D |  if_ne	jmp	#LR__0404
060c8     0F 25 02 F6 | 	mov	local07, local04
060cc                 | ' 			ncl = scl;
060cc                 | ' 			for (;;) {
060cc                 | LR__0399
060cc     01 24 06 F1 | 	add	local07, #1
060d0     18 1C 06 F1 | 	add	local03, #24
060d4     0E 21 02 FB | 	rdlong	local05, local03
060d8     18 1C 86 F1 | 	sub	local03, #24
060dc     10 25 12 F2 | 	cmp	local07, local05 wc
060e0     10 00 90 CD |  if_b	jmp	#LR__0400
060e4     02 24 06 F6 | 	mov	local07, #2
060e8     0F 25 1A F2 | 	cmp	local07, local04 wcz
060ec     00 F4 05 16 |  if_a	mov	result1, #0
060f0     E4 00 90 1D |  if_a	jmp	#LR__0409
060f4                 | LR__0400
060f4     12 11 02 F6 | 	mov	arg02, local07
060f8     0C 0F 02 F6 | 	mov	arg01, local01
060fc     E0 F8 BF FD | 	call	#_ff_cc_get_fat_0226
06100     FA 22 0A F6 | 	mov	local06, result1 wz
06104     2C 00 90 AD |  if_e	jmp	#LR__0403
06108     01 22 0E F2 | 	cmp	local06, #1 wz
0610c     0C 00 90 AD |  if_e	jmp	#LR__0401
06110     FF FF 7F FF 
06114     FF 23 0E F2 | 	cmp	local06, ##-1 wz
06118     08 00 90 5D |  if_ne	jmp	#LR__0402
0611c                 | LR__0401
0611c     11 F5 01 F6 | 	mov	result1, local06
06120     B4 00 90 FD | 	jmp	#LR__0409
06124                 | LR__0402
06124     0F 25 0A F2 | 	cmp	local07, local04 wz
06128     00 F4 05 A6 |  if_e	mov	result1, #0
0612c     A8 00 90 AD |  if_e	jmp	#LR__0409
06130     98 FF 9F FD | 	jmp	#LR__0399
06134                 | LR__0403
06134                 | LR__0404
06134     0E 0F 02 F6 | 	mov	arg01, local03
06138     12 11 02 F6 | 	mov	arg02, local07
0613c     01 12 66 F6 | 	neg	arg03, #1
06140     5C FA BF FD | 	call	#_ff_cc_put_fat_0230
06144     FA 26 0A F6 | 	mov	local08, result1 wz
06148     28 00 90 5D |  if_ne	jmp	#LR__0405
0614c     00 1A 0E F2 | 	cmp	local02, #0 wz
06150     20 00 90 AD |  if_e	jmp	#LR__0405
06154     0D 29 02 F6 | 	mov	local09, local02
06158     12 2B 02 F6 | 	mov	local10, local07
0615c     0E 0F 02 F6 | 	mov	arg01, local03
06160     14 11 02 F6 | 	mov	arg02, local09
06164     15 13 02 F6 | 	mov	arg03, local10
06168     34 FA BF FD | 	call	#_ff_cc_put_fat_0230
0616c     FA 20 02 F6 | 	mov	local05, result1
06170     10 27 02 F6 | 	mov	local08, local05
06174                 | LR__0405
06174     00 26 0E F2 | 	cmp	local08, #0 wz
06178     50 00 90 5D |  if_ne	jmp	#LR__0407
0617c     10 1C 06 F1 | 	add	local03, #16
06180     0E 25 62 FC | 	wrlong	local07, local03
06184     08 1C 06 F1 | 	add	local03, #8
06188     0E 21 02 FB | 	rdlong	local05, local03
0618c     02 20 86 F1 | 	sub	local05, #2
06190     04 1C 86 F1 | 	sub	local03, #4
06194     0E 2B 02 FB | 	rdlong	local10, local03
06198     14 1C 86 F1 | 	sub	local03, #20
0619c     10 2B 1A F2 | 	cmp	local10, local05 wcz
061a0     14 00 90 1D |  if_a	jmp	#LR__0406
061a4     14 1C 06 F1 | 	add	local03, #20
061a8     0E 2B 02 FB | 	rdlong	local10, local03
061ac     01 2A 86 F1 | 	sub	local10, #1
061b0     0E 2B 62 FC | 	wrlong	local10, local03
061b4     14 1C 86 F1 | 	sub	local03, #20
061b8                 | LR__0406
061b8     04 1C 06 F1 | 	add	local03, #4
061bc     0E 21 C2 FA | 	rdbyte	local05, local03
061c0     01 20 46 F5 | 	or	local05, #1
061c4     0E 21 42 FC | 	wrbyte	local05, local03
061c8     08 00 90 FD | 	jmp	#LR__0408
061cc                 | LR__0407
061cc     01 26 0E F2 | 	cmp	local08, #1 wz
061d0     01 24 C6 F6 | 	negz	local07, #1
061d4                 | LR__0408
061d4                 | ' 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
061d4                 | ' 	}
061d4                 | ' 
061d4                 | ' 	return ncl;
061d4     12 F5 01 F6 | 	mov	result1, local07
061d8                 | LR__0409
061d8     A8 F0 03 F6 | 	mov	ptra, fp
061dc     B3 00 A0 FD | 	call	#popregs_
061e0                 | _ff_cc_create_chain_0240_ret
061e0     2D 00 64 FD | 	ret
061e4                 | 
061e4                 | _ff_cc_dir_clear_0245
061e4     07 4C 05 F6 | 	mov	COUNT_, #7
061e8     A9 00 A0 FD | 	call	#pushregs_
061ec     07 19 02 F6 | 	mov	local01, arg01
061f0     08 1B 02 F6 | 	mov	local02, arg02
061f4     0C 0F 02 F6 | 	mov	arg01, local01
061f8     EC F4 BF FD | 	call	#_ff_cc_sync_window_0216
061fc     00 F4 0D F2 | 	cmp	result1, #0 wz
06200     01 F4 05 56 |  if_ne	mov	result1, #1
06204     AC 00 90 5D |  if_ne	jmp	#LR__0416
06208     0C 0F 02 F6 | 	mov	arg01, local01
0620c     0D 11 02 F6 | 	mov	arg02, local02
06210     8C F7 BF FD | 	call	#_ff_cc_clst2sect_0221
06214     FA 1C 02 F6 | 	mov	local03, result1
06218     30 18 06 F1 | 	add	local01, #48
0621c     0C 1D 62 FC | 	wrlong	local03, local01
06220     04 18 06 F1 | 	add	local01, #4
06224     0C 0F 02 F6 | 	mov	arg01, local01
06228     34 18 86 F1 | 	sub	local01, #52
0622c     00 10 06 F6 | 	mov	arg02, #0
06230     09 12 C6 F9 | 	decod	arg03, #9
06234                 | ' {
06234                 | ' 	BYTE *d = (BYTE*)dst;
06234                 | ' 
06234                 | ' 	do {
06234     D4 9D 9F FE | 	loc	pa,	#(@LR__0412-@LR__0410)
06238     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0623c                 | LR__0410
0623c     09 05 D8 FC | 	rep	@LR__0413, arg03
06240                 | LR__0411
06240     07 11 42 FC | 	wrbyte	arg02, arg01
06244     01 0E 06 F1 | 	add	arg01, #1
06248                 | LR__0412
06248                 | LR__0413
06248     34 18 06 F1 | 	add	local01, #52
0624c     0C 1F 02 F6 | 	mov	local04, local01
06250                 | ' #line 1698 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
06250                 | ' 	{
06250                 | ' 		ibuf = fs->win; szb = 1;
06250                 | ' 		for (n = 0; n < fs->csize && disk_write(fs->pdrv, ibuf, sect + n, szb) == RES_OK; n += szb) ;
06250     00 20 06 F6 | 	mov	local05, #0
06254     34 18 86 F1 | 	sub	local01, #52
06258                 | LR__0414
06258     0A 18 06 F1 | 	add	local01, #10
0625c     0C 23 E2 FA | 	rdword	local06, local01
06260     0A 18 86 F1 | 	sub	local01, #10
06264     0F 22 46 F7 | 	zerox	local06, #15
06268     11 21 12 F2 | 	cmp	local05, local06 wc
0626c     2C 00 90 3D |  if_ae	jmp	#LR__0415
06270     01 18 06 F1 | 	add	local01, #1
06274     0C 0F C2 FA | 	rdbyte	arg01, local01
06278     01 18 86 F1 | 	sub	local01, #1
0627c     0F 11 02 F6 | 	mov	arg02, local04
06280     0E 13 02 F6 | 	mov	arg03, local03
06284     10 13 02 F1 | 	add	arg03, local05
06288     01 14 06 F6 | 	mov	arg04, #1
0628c     F0 ED BF FD | 	call	#_ff_cc_disk_write
06290     00 F4 0D F2 | 	cmp	result1, #0 wz
06294     01 20 06 A1 |  if_e	add	local05, #1
06298     BC FF 9F AD |  if_e	jmp	#LR__0414
0629c                 | LR__0415
0629c                 | ' 	}
0629c                 | ' 	return (n == fs->csize) ? FR_OK : FR_DISK_ERR;
0629c     0A 18 06 F1 | 	add	local01, #10
062a0     0C 25 E2 FA | 	rdword	local07, local01
062a4     12 21 0A F2 | 	cmp	local05, local07 wz
062a8     00 22 06 A6 |  if_e	mov	local06, #0
062ac     01 22 06 56 |  if_ne	mov	local06, #1
062b0     11 F5 01 F6 | 	mov	result1, local06
062b4                 | LR__0416
062b4     A8 F0 03 F6 | 	mov	ptra, fp
062b8     B3 00 A0 FD | 	call	#popregs_
062bc                 | _ff_cc_dir_clear_0245_ret
062bc     2D 00 64 FD | 	ret
062c0                 | 
062c0                 | _ff_cc_dir_sdi_0249
062c0     08 4C 05 F6 | 	mov	COUNT_, #8
062c4     A9 00 A0 FD | 	call	#pushregs_
062c8     07 19 02 F6 | 	mov	local01, arg01
062cc     08 1B 02 F6 | 	mov	local02, arg02
062d0     0C 1D 02 FB | 	rdlong	local03, local01
062d4     00 10 00 FF 
062d8     00 1A 16 F2 | 	cmp	local02, ##2097152 wc
062dc     08 00 90 3D |  if_ae	jmp	#LR__0417
062e0     1F 1A CE F7 | 	test	local02, #31 wz
062e4     08 00 90 AD |  if_e	jmp	#LR__0418
062e8                 | LR__0417
062e8                 | ' 		return FR_INT_ERR;
062e8     02 F4 05 F6 | 	mov	result1, #2
062ec     50 01 90 FD | 	jmp	#LR__0426
062f0                 | LR__0418
062f0     10 18 06 F1 | 	add	local01, #16
062f4     0C 1B 62 FC | 	wrlong	local02, local01
062f8     08 18 86 F1 | 	sub	local01, #8
062fc     0C 1F 0A FB | 	rdlong	local04, local01 wz
06300     08 18 86 F1 | 	sub	local01, #8
06304     1C 00 90 5D |  if_ne	jmp	#LR__0419
06308     0E 21 C2 FA | 	rdbyte	local05, local03
0630c     03 20 16 F2 | 	cmp	local05, #3 wc
06310     10 00 90 CD |  if_b	jmp	#LR__0419
06314     28 1C 06 F1 | 	add	local03, #40
06318     0E 21 02 FB | 	rdlong	local05, local03
0631c     28 1C 86 F1 | 	sub	local03, #40
06320     10 1F 02 F6 | 	mov	local04, local05
06324                 | LR__0419
06324     00 1E 0E F2 | 	cmp	local04, #0 wz
06328     40 00 90 5D |  if_ne	jmp	#LR__0420
0632c     0D 21 02 F6 | 	mov	local05, local02
06330     05 20 46 F0 | 	shr	local05, #5
06334     08 1C 06 F1 | 	add	local03, #8
06338     0E 23 E2 FA | 	rdword	local06, local03
0633c     08 1C 86 F1 | 	sub	local03, #8
06340     0F 22 46 F7 | 	zerox	local06, #15
06344     11 21 12 F2 | 	cmp	local05, local06 wc
06348     02 F4 05 36 |  if_ae	mov	result1, #2
0634c     F0 00 90 3D |  if_ae	jmp	#LR__0426
06350     28 1C 06 F1 | 	add	local03, #40
06354     0E 21 02 FB | 	rdlong	local05, local03
06358     28 1C 86 F1 | 	sub	local03, #40
0635c     18 18 06 F1 | 	add	local01, #24
06360     0C 21 62 FC | 	wrlong	local05, local01
06364     18 18 86 F1 | 	sub	local01, #24
06368     80 00 90 FD | 	jmp	#LR__0425
0636c                 | LR__0420
0636c     0A 1C 06 F1 | 	add	local03, #10
06370     0E 25 E2 FA | 	rdword	local07, local03
06374     0A 1C 86 F1 | 	sub	local03, #10
06378     0F 24 46 F7 | 	zerox	local07, #15
0637c     09 24 66 F0 | 	shl	local07, #9
06380                 | ' 		csz = (DWORD)fs->csize *  ((UINT) 512 ) ;
06380                 | ' 		while (ofs >= csz) {
06380                 | LR__0421
06380     12 1B 12 F2 | 	cmp	local02, local07 wc
06384     4C 00 90 CD |  if_b	jmp	#LR__0424
06388     0C 0F 02 F6 | 	mov	arg01, local01
0638c     0F 11 02 F6 | 	mov	arg02, local04
06390     4C F6 BF FD | 	call	#_ff_cc_get_fat_0226
06394     FA 1E 02 F6 | 	mov	local04, result1
06398     FF FF 7F FF 
0639c     FF 1F 0E F2 | 	cmp	local04, ##-1 wz
063a0     01 F4 05 A6 |  if_e	mov	result1, #1
063a4     98 00 90 AD |  if_e	jmp	#LR__0426
063a8     02 1E 16 F2 | 	cmp	local04, #2 wc
063ac     14 00 90 CD |  if_b	jmp	#LR__0422
063b0     18 1C 06 F1 | 	add	local03, #24
063b4     0E 21 02 FB | 	rdlong	local05, local03
063b8     18 1C 86 F1 | 	sub	local03, #24
063bc     10 1F 12 F2 | 	cmp	local04, local05 wc
063c0     08 00 90 CD |  if_b	jmp	#LR__0423
063c4                 | LR__0422
063c4     02 F4 05 F6 | 	mov	result1, #2
063c8     74 00 90 FD | 	jmp	#LR__0426
063cc                 | LR__0423
063cc     12 1B 82 F1 | 	sub	local02, local07
063d0     AC FF 9F FD | 	jmp	#LR__0421
063d4                 | LR__0424
063d4     0E 0F 02 F6 | 	mov	arg01, local03
063d8     0F 11 02 F6 | 	mov	arg02, local04
063dc     C0 F5 BF FD | 	call	#_ff_cc_clst2sect_0221
063e0     18 18 06 F1 | 	add	local01, #24
063e4     0C F5 61 FC | 	wrlong	result1, local01
063e8     18 18 86 F1 | 	sub	local01, #24
063ec                 | LR__0425
063ec     14 18 06 F1 | 	add	local01, #20
063f0     0C 1F 62 FC | 	wrlong	local04, local01
063f4     04 18 06 F1 | 	add	local01, #4
063f8     0C 21 0A FB | 	rdlong	local05, local01 wz
063fc     18 18 86 F1 | 	sub	local01, #24
06400     02 F4 05 A6 |  if_e	mov	result1, #2
06404     38 00 90 AD |  if_e	jmp	#LR__0426
06408     0D 23 02 F6 | 	mov	local06, local02
0640c     09 22 46 F0 | 	shr	local06, #9
06410     18 18 06 F1 | 	add	local01, #24
06414     0C 21 02 FB | 	rdlong	local05, local01
06418     11 21 02 F1 | 	add	local05, local06
0641c     0C 21 62 FC | 	wrlong	local05, local01
06420     34 1C 06 F1 | 	add	local03, #52
06424     0E 21 02 F6 | 	mov	local05, local03
06428     0D 27 02 F6 | 	mov	local08, local02
0642c     FF 27 06 F5 | 	and	local08, #511
06430     13 21 02 F1 | 	add	local05, local08
06434     04 18 06 F1 | 	add	local01, #4
06438     0C 21 62 FC | 	wrlong	local05, local01
0643c                 | ' 	dp->sect += ofs /  ((UINT) 512 ) ;
0643c                 | ' 	dp->dir = fs->win + (ofs %  ((UINT) 512 ) );
0643c                 | ' 
0643c                 | ' 	return FR_OK;
0643c     00 F4 05 F6 | 	mov	result1, #0
06440                 | LR__0426
06440     A8 F0 03 F6 | 	mov	ptra, fp
06444     B3 00 A0 FD | 	call	#popregs_
06448                 | _ff_cc_dir_sdi_0249_ret
06448     2D 00 64 FD | 	ret
0644c                 | 
0644c                 | _ff_cc_dir_next_0253
0644c     09 4C 05 F6 | 	mov	COUNT_, #9
06450     A9 00 A0 FD | 	call	#pushregs_
06454     07 19 02 F6 | 	mov	local01, arg01
06458     08 1B 02 F6 | 	mov	local02, arg02
0645c     0C 1D 02 FB | 	rdlong	local03, local01
06460     10 18 06 F1 | 	add	local01, #16
06464     0C 1F 02 FB | 	rdlong	local04, local01
06468     10 18 86 F1 | 	sub	local01, #16
0646c     20 1E 06 F1 | 	add	local04, #32
06470     00 10 00 FF 
06474     00 1E 16 F2 | 	cmp	local04, ##2097152 wc
06478     18 18 06 31 |  if_ae	add	local01, #24
0647c     0C 01 68 3C |  if_ae	wrlong	#0, local01
06480     18 18 86 31 |  if_ae	sub	local01, #24
06484     18 18 06 F1 | 	add	local01, #24
06488     0C 21 0A FB | 	rdlong	local05, local01 wz
0648c     18 18 86 F1 | 	sub	local01, #24
06490     04 F4 05 A6 |  if_e	mov	result1, #4
06494     7C 01 90 AD |  if_e	jmp	#LR__0433
06498     FF 1F CE F7 | 	test	local04, #511 wz
0649c     4C 01 90 5D |  if_ne	jmp	#LR__0432
064a0     18 18 06 F1 | 	add	local01, #24
064a4     0C 23 02 FB | 	rdlong	local06, local01
064a8     01 22 06 F1 | 	add	local06, #1
064ac     0C 23 62 FC | 	wrlong	local06, local01
064b0     04 18 86 F1 | 	sub	local01, #4
064b4     0C 21 0A FB | 	rdlong	local05, local01 wz
064b8     14 18 86 F1 | 	sub	local01, #20
064bc     30 00 90 5D |  if_ne	jmp	#LR__0427
064c0     0F 21 02 F6 | 	mov	local05, local04
064c4     05 20 46 F0 | 	shr	local05, #5
064c8     08 1C 06 F1 | 	add	local03, #8
064cc     0E 25 E2 FA | 	rdword	local07, local03
064d0     08 1C 86 F1 | 	sub	local03, #8
064d4     0F 24 46 F7 | 	zerox	local07, #15
064d8     12 21 12 F2 | 	cmp	local05, local07 wc
064dc     0C 01 90 CD |  if_b	jmp	#LR__0431
064e0     18 18 06 F1 | 	add	local01, #24
064e4     0C 01 68 FC | 	wrlong	#0, local01
064e8                 | ' 				dp->sect = 0; return FR_NO_FILE;
064e8     04 F4 05 F6 | 	mov	result1, #4
064ec     24 01 90 FD | 	jmp	#LR__0433
064f0                 | LR__0427
064f0     0F 21 02 F6 | 	mov	local05, local04
064f4     09 20 46 F0 | 	shr	local05, #9
064f8     0A 1C 06 F1 | 	add	local03, #10
064fc     0E 25 E2 FA | 	rdword	local07, local03
06500     0A 1C 86 F1 | 	sub	local03, #10
06504     0F 24 46 F7 | 	zerox	local07, #15
06508     01 24 86 F1 | 	sub	local07, #1
0650c     12 21 CA F7 | 	test	local05, local07 wz
06510     D8 00 90 5D |  if_ne	jmp	#LR__0430
06514     0C 0F 02 F6 | 	mov	arg01, local01
06518     14 18 06 F1 | 	add	local01, #20
0651c     0C 11 02 FB | 	rdlong	arg02, local01
06520     14 18 86 F1 | 	sub	local01, #20
06524     B8 F4 BF FD | 	call	#_ff_cc_get_fat_0226
06528     FA 26 02 F6 | 	mov	local08, result1
0652c     02 26 16 F2 | 	cmp	local08, #2 wc
06530     02 F4 05 C6 |  if_b	mov	result1, #2
06534     DC 00 90 CD |  if_b	jmp	#LR__0433
06538     FF FF 7F FF 
0653c     FF 27 0E F2 | 	cmp	local08, ##-1 wz
06540     01 F4 05 A6 |  if_e	mov	result1, #1
06544     CC 00 90 AD |  if_e	jmp	#LR__0433
06548     18 1C 06 F1 | 	add	local03, #24
0654c     0E 21 02 FB | 	rdlong	local05, local03
06550     18 1C 86 F1 | 	sub	local03, #24
06554     10 27 12 F2 | 	cmp	local08, local05 wc
06558     6C 00 90 CD |  if_b	jmp	#LR__0429
0655c     00 1A 0E F2 | 	cmp	local02, #0 wz
06560     10 00 90 5D |  if_ne	jmp	#LR__0428
06564     18 18 06 F1 | 	add	local01, #24
06568     0C 01 68 FC | 	wrlong	#0, local01
0656c                 | ' 						dp->sect = 0; return FR_NO_FILE;
0656c     04 F4 05 F6 | 	mov	result1, #4
06570     A0 00 90 FD | 	jmp	#LR__0433
06574                 | LR__0428
06574     0C 0F 02 F6 | 	mov	arg01, local01
06578     14 18 06 F1 | 	add	local01, #20
0657c     0C 11 02 FB | 	rdlong	arg02, local01
06580     14 18 86 F1 | 	sub	local01, #20
06584     10 FA BF FD | 	call	#_ff_cc_create_chain_0240
06588     FA 26 0A F6 | 	mov	local08, result1 wz
0658c     07 F4 05 A6 |  if_e	mov	result1, #7
06590     80 00 90 AD |  if_e	jmp	#LR__0433
06594     01 26 0E F2 | 	cmp	local08, #1 wz
06598     02 F4 05 A6 |  if_e	mov	result1, #2
0659c     74 00 90 AD |  if_e	jmp	#LR__0433
065a0     FF FF 7F FF 
065a4     FF 27 0E F2 | 	cmp	local08, ##-1 wz
065a8     01 F4 05 A6 |  if_e	mov	result1, #1
065ac     64 00 90 AD |  if_e	jmp	#LR__0433
065b0     13 11 02 F6 | 	mov	arg02, local08
065b4     0E 0F 02 F6 | 	mov	arg01, local03
065b8     28 FC BF FD | 	call	#_ff_cc_dir_clear_0245
065bc     00 F4 0D F2 | 	cmp	result1, #0 wz
065c0     01 F4 05 56 |  if_ne	mov	result1, #1
065c4     4C 00 90 5D |  if_ne	jmp	#LR__0433
065c8                 | LR__0429
065c8     14 18 06 F1 | 	add	local01, #20
065cc     0C 27 62 FC | 	wrlong	local08, local01
065d0     14 18 86 F1 | 	sub	local01, #20
065d4     0E 0F 02 F6 | 	mov	arg01, local03
065d8     13 11 02 F6 | 	mov	arg02, local08
065dc     C0 F3 BF FD | 	call	#_ff_cc_clst2sect_0221
065e0     18 18 06 F1 | 	add	local01, #24
065e4     0C F5 61 FC | 	wrlong	result1, local01
065e8     18 18 86 F1 | 	sub	local01, #24
065ec                 | LR__0430
065ec                 | LR__0431
065ec                 | LR__0432
065ec     10 18 06 F1 | 	add	local01, #16
065f0     0C 1F 62 FC | 	wrlong	local04, local01
065f4     34 1C 06 F1 | 	add	local03, #52
065f8     0E 21 02 F6 | 	mov	local05, local03
065fc     0F 29 02 F6 | 	mov	local09, local04
06600     FF 29 06 F5 | 	and	local09, #511
06604     14 21 02 F1 | 	add	local05, local09
06608     0C 18 06 F1 | 	add	local01, #12
0660c     0C 21 62 FC | 	wrlong	local05, local01
06610                 | ' #line 1802 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
06610                 | ' 				}
06610                 | ' 				dp->clust = clst;
06610                 | ' 				dp->sect = clst2sect(fs, clst);
06610                 | ' 			}
06610                 | ' 		}
06610                 | ' 	}
06610                 | ' 	dp->dptr = ofs;
06610                 | ' 	dp->dir = fs->win + ofs %  ((UINT) 512 ) ;
06610                 | ' 
06610                 | ' 	return FR_OK;
06610     00 F4 05 F6 | 	mov	result1, #0
06614                 | LR__0433
06614     A8 F0 03 F6 | 	mov	ptra, fp
06618     B3 00 A0 FD | 	call	#popregs_
0661c                 | _ff_cc_dir_next_0253_ret
0661c     2D 00 64 FD | 	ret
06620                 | 
06620                 | _ff_cc_dir_alloc_0257
06620     0B 4C 05 F6 | 	mov	COUNT_, #11
06624     A9 00 A0 FD | 	call	#pushregs_
06628     07 19 02 F6 | 	mov	local01, arg01
0662c     08 1B 02 F6 | 	mov	local02, arg02
06630     0C 1D 02 FB | 	rdlong	local03, local01
06634     0C 0F 02 F6 | 	mov	arg01, local01
06638     00 10 06 F6 | 	mov	arg02, #0
0663c     80 FC BF FD | 	call	#_ff_cc_dir_sdi_0249
06640     FA 1E 0A F6 | 	mov	local04, result1 wz
06644     80 00 90 5D |  if_ne	jmp	#LR__0439
06648     00 20 06 F6 | 	mov	local05, #0
0664c                 | ' 		n = 0;
0664c                 | ' 		do {
0664c                 | LR__0434
0664c     18 18 06 F1 | 	add	local01, #24
06650     0C 11 02 FB | 	rdlong	arg02, local01
06654     18 18 86 F1 | 	sub	local01, #24
06658     0E 0F 02 F6 | 	mov	arg01, local03
0665c     60 F1 BF FD | 	call	#_ff_cc_move_window_0218
06660     FA 1E 0A F6 | 	mov	local04, result1 wz
06664     60 00 90 5D |  if_ne	jmp	#LR__0438
06668     1C 18 06 F1 | 	add	local01, #28
0666c     0C 23 02 FB | 	rdlong	local06, local01
06670     1C 18 86 F1 | 	sub	local01, #28
06674     11 25 C2 FA | 	rdbyte	local07, local06
06678     E5 24 0E F2 | 	cmp	local07, #229 wz
0667c     18 00 90 AD |  if_e	jmp	#LR__0435
06680     1C 18 06 F1 | 	add	local01, #28
06684     0C 27 02 FB | 	rdlong	local08, local01
06688     1C 18 86 F1 | 	sub	local01, #28
0668c     13 29 02 F6 | 	mov	local09, local08
06690     14 2B CA FA | 	rdbyte	local10, local09 wz
06694     10 00 90 5D |  if_ne	jmp	#LR__0436
06698                 | LR__0435
06698     01 20 06 F1 | 	add	local05, #1
0669c     0D 21 0A F2 | 	cmp	local05, local02 wz
066a0     24 00 90 AD |  if_e	jmp	#LR__0438
066a4     04 00 90 FD | 	jmp	#LR__0437
066a8                 | LR__0436
066a8     00 20 06 F6 | 	mov	local05, #0
066ac                 | LR__0437
066ac     01 2C 06 F6 | 	mov	local11, #1
066b0     0C 0F 02 F6 | 	mov	arg01, local01
066b4     01 10 06 F6 | 	mov	arg02, #1
066b8     90 FD BF FD | 	call	#_ff_cc_dir_next_0253
066bc     FA 24 02 F6 | 	mov	local07, result1
066c0     12 1F 0A F6 | 	mov	local04, local07 wz
066c4     84 FF 9F AD |  if_e	jmp	#LR__0434
066c8                 | LR__0438
066c8                 | LR__0439
066c8     04 1E 0E F2 | 	cmp	local04, #4 wz
066cc     07 1E 06 A6 |  if_e	mov	local04, #7
066d0                 | ' 	return res;
066d0     0F F5 01 F6 | 	mov	result1, local04
066d4     A8 F0 03 F6 | 	mov	ptra, fp
066d8     B3 00 A0 FD | 	call	#popregs_
066dc                 | _ff_cc_dir_alloc_0257_ret
066dc     2D 00 64 FD | 	ret
066e0                 | 
066e0                 | _ff_cc_ld_clust_0259
066e0     04 4C 05 F6 | 	mov	COUNT_, #4
066e4     A9 00 A0 FD | 	call	#pushregs_
066e8     07 19 02 F6 | 	mov	local01, arg01
066ec     08 1B 02 F6 | 	mov	local02, arg02
066f0     0D 0F 02 F6 | 	mov	arg01, local02
066f4     1A 0E 06 F1 | 	add	arg01, #26
066f8     60 ED BF FD | 	call	#_ff_cc_ld_word_0191
066fc     FA 1C 02 F6 | 	mov	local03, result1
06700     0F 1C 46 F7 | 	zerox	local03, #15
06704     0C 1F C2 FA | 	rdbyte	local04, local01
06708     03 1E 0E F2 | 	cmp	local04, #3 wz
0670c     18 00 90 5D |  if_ne	jmp	#LR__0440
06710     14 1A 06 F1 | 	add	local02, #20
06714     0D 0F 02 F6 | 	mov	arg01, local02
06718     40 ED BF FD | 	call	#_ff_cc_ld_word_0191
0671c     0F F4 45 F7 | 	zerox	result1, #15
06720     10 F4 65 F0 | 	shl	result1, #16
06724     FA 1C 42 F5 | 	or	local03, result1
06728                 | LR__0440
06728                 | ' 		cl |= (DWORD)ld_word(dir +  20 ) << 16;
06728                 | ' 	}
06728                 | ' 
06728                 | ' 	return cl;
06728     0E F5 01 F6 | 	mov	result1, local03
0672c     A8 F0 03 F6 | 	mov	ptra, fp
06730     B3 00 A0 FD | 	call	#popregs_
06734                 | _ff_cc_ld_clust_0259_ret
06734     2D 00 64 FD | 	ret
06738                 | 
06738                 | _ff_cc_st_clust_0260
06738     04 4C 05 F6 | 	mov	COUNT_, #4
0673c     A9 00 A0 FD | 	call	#pushregs_
06740     07 19 02 F6 | 	mov	local01, arg01
06744     08 1B 02 F6 | 	mov	local02, arg02
06748     09 1D 02 F6 | 	mov	local03, arg03
0674c     0D 0F 02 F6 | 	mov	arg01, local02
06750     1A 0E 06 F1 | 	add	arg01, #26
06754     0E 11 02 F6 | 	mov	arg02, local03
06758     64 ED BF FD | 	call	#_ff_cc_st_word_0194
0675c     0C 1F C2 FA | 	rdbyte	local04, local01
06760     03 1E 0E F2 | 	cmp	local04, #3 wz
06764     14 00 90 5D |  if_ne	jmp	#LR__0441
06768     14 1A 06 F1 | 	add	local02, #20
0676c     10 1C 46 F0 | 	shr	local03, #16
06770     0D 0F 02 F6 | 	mov	arg01, local02
06774     0E 11 02 F6 | 	mov	arg02, local03
06778     44 ED BF FD | 	call	#_ff_cc_st_word_0194
0677c                 | LR__0441
0677c     A8 F0 03 F6 | 	mov	ptra, fp
06780     B3 00 A0 FD | 	call	#popregs_
06784                 | _ff_cc_st_clust_0260_ret
06784     2D 00 64 FD | 	ret
06788                 | 
06788                 | _ff_cc_cmp_lfn_0265
06788     0E 4C 05 F6 | 	mov	COUNT_, #14
0678c     A9 00 A0 FD | 	call	#pushregs_
06790     07 19 02 F6 | 	mov	local01, arg01
06794     08 1B 02 F6 | 	mov	local02, arg02
06798     0D 0F 02 F6 | 	mov	arg01, local02
0679c     1A 0E 06 F1 | 	add	arg01, #26
067a0     B8 EC BF FD | 	call	#_ff_cc_ld_word_0191
067a4     FA 1C 02 F6 | 	mov	local03, result1
067a8     0F 1C 4E F7 | 	zerox	local03, #15 wz
067ac     00 F4 05 56 |  if_ne	mov	result1, #0
067b0     FC 00 90 5D |  if_ne	jmp	#LR__0449
067b4     0D 1D C2 FA | 	rdbyte	local03, local02
067b8     3F 1C 06 F5 | 	and	local03, #63
067bc     01 1C 86 F1 | 	sub	local03, #1
067c0     0D 1C 06 FD | 	qmul	local03, #13
067c4                 | ' 
067c4                 | ' 	i = ((dir[ 0 ] & 0x3F) - 1) * 13;
067c4                 | ' 
067c4                 | ' 	for (wc = 1, s = 0; s < 13; s++) {
067c4     01 1E 06 F6 | 	mov	local04, #1
067c8     00 20 06 F6 | 	mov	local05, #0
067cc     18 22 62 FD | 	getqx	local06
067d0                 | LR__0442
067d0     0D 20 16 F2 | 	cmp	local05, #13 wc
067d4     A8 00 90 3D |  if_ae	jmp	#LR__0447
067d8     0D 0F 02 F6 | 	mov	arg01, local02
067dc     10 25 02 F6 | 	mov	local07, local05
067e0     06 F0 05 F1 | 	add	ptr__ff_cc_dat__, #6
067e4     F8 24 02 F1 | 	add	local07, ptr__ff_cc_dat__
067e8     12 27 C2 FA | 	rdbyte	local08, local07
067ec     13 0F 02 F1 | 	add	arg01, local08
067f0     06 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #6
067f4     64 EC BF FD | 	call	#_ff_cc_ld_word_0191
067f8     FA 28 02 F6 | 	mov	local09, result1
067fc     0F 1D 02 F6 | 	mov	local03, local04
06800     0F 1C 4E F7 | 	zerox	local03, #15 wz
06804     58 00 90 AD |  if_e	jmp	#LR__0445
06808     00 23 16 F2 | 	cmp	local06, #256 wc
0680c     40 00 90 3D |  if_ae	jmp	#LR__0443
06810     14 0F 02 F6 | 	mov	arg01, local09
06814     0F 0E 46 F7 | 	zerox	arg01, #15
06818     58 E0 BF FD | 	call	#_ff_cc_ff_wtoupper
0681c     FA 1C 02 F6 | 	mov	local03, result1
06820     11 25 02 F6 | 	mov	local07, local06
06824     12 27 02 F6 | 	mov	local08, local07
06828     13 2B 02 F6 | 	mov	local10, local08
0682c     01 2A 66 F0 | 	shl	local10, #1
06830     0C 2D 02 F6 | 	mov	local11, local01
06834     0C 2B 02 F1 | 	add	local10, local01
06838     15 0F E2 FA | 	rdword	arg01, local10
0683c     01 22 06 F1 | 	add	local06, #1
06840     30 E0 BF FD | 	call	#_ff_cc_ff_wtoupper
06844     FA 2E 02 F6 | 	mov	local12, result1
06848     17 1D 0A F2 | 	cmp	local03, local12 wz
0684c     08 00 90 AD |  if_e	jmp	#LR__0444
06850                 | LR__0443
06850                 | ' 				return 0;
06850     00 F4 05 F6 | 	mov	result1, #0
06854     58 00 90 FD | 	jmp	#LR__0449
06858                 | LR__0444
06858     14 1F 02 F6 | 	mov	local04, local09
0685c     18 00 90 FD | 	jmp	#LR__0446
06860                 | LR__0445
06860     14 1D 02 F6 | 	mov	local03, local09
06864     0F 1C 46 F7 | 	zerox	local03, #15
06868     7F 00 00 FF 
0686c     FF 1D 0E F2 | 	cmp	local03, ##65535 wz
06870     00 F4 05 56 |  if_ne	mov	result1, #0
06874     38 00 90 5D |  if_ne	jmp	#LR__0449
06878                 | LR__0446
06878     01 20 06 F1 | 	add	local05, #1
0687c     50 FF 9F FD | 	jmp	#LR__0442
06880                 | LR__0447
06880     0D 1D C2 FA | 	rdbyte	local03, local02
06884     40 1C 0E F5 | 	and	local03, #64 wz
06888     20 00 90 AD |  if_e	jmp	#LR__0448
0688c     00 1E 0E F2 | 	cmp	local04, #0 wz
06890     18 00 90 AD |  if_e	jmp	#LR__0448
06894     11 31 02 F6 | 	mov	local13, local06
06898     01 30 66 F0 | 	shl	local13, #1
0689c     0C 31 02 F1 | 	add	local13, local01
068a0     18 33 EA FA | 	rdword	local14, local13 wz
068a4     00 F4 05 56 |  if_ne	mov	result1, #0
068a8     04 00 90 5D |  if_ne	jmp	#LR__0449
068ac                 | LR__0448
068ac                 | ' 
068ac                 | ' 	return 1;
068ac     01 F4 05 F6 | 	mov	result1, #1
068b0                 | LR__0449
068b0     A8 F0 03 F6 | 	mov	ptra, fp
068b4     B3 00 A0 FD | 	call	#popregs_
068b8                 | _ff_cc_cmp_lfn_0265_ret
068b8     2D 00 64 FD | 	ret
068bc                 | 
068bc                 | _ff_cc_pick_lfn_0270
068bc     0C 4C 05 F6 | 	mov	COUNT_, #12
068c0     A9 00 A0 FD | 	call	#pushregs_
068c4     07 19 02 F6 | 	mov	local01, arg01
068c8     08 1B 02 F6 | 	mov	local02, arg02
068cc     0D 0F 02 F6 | 	mov	arg01, local02
068d0     1A 0E 06 F1 | 	add	arg01, #26
068d4     84 EB BF FD | 	call	#_ff_cc_ld_word_0191
068d8     FA 1C 02 F6 | 	mov	local03, result1
068dc     0F 1C 4E F7 | 	zerox	local03, #15 wz
068e0     00 F4 05 56 |  if_ne	mov	result1, #0
068e4     E8 00 90 5D |  if_ne	jmp	#LR__0455
068e8     0D 1D C2 FA | 	rdbyte	local03, local02
068ec     40 1C 26 F5 | 	andn	local03, #64
068f0     01 1C 86 F1 | 	sub	local03, #1
068f4     0D 1C 06 FD | 	qmul	local03, #13
068f8                 | ' 
068f8                 | ' 	i = ((dir[ 0 ] & ~ 0x40 ) - 1) * 13;
068f8                 | ' 
068f8                 | ' 	for (wc = 1, s = 0; s < 13; s++) {
068f8     01 1E 06 F6 | 	mov	local04, #1
068fc     00 20 06 F6 | 	mov	local05, #0
06900     18 22 62 FD | 	getqx	local06
06904                 | LR__0450
06904     0D 20 16 F2 | 	cmp	local05, #13 wc
06908     80 00 90 3D |  if_ae	jmp	#LR__0453
0690c     0D 0F 02 F6 | 	mov	arg01, local02
06910     10 25 02 F6 | 	mov	local07, local05
06914     06 F0 05 F1 | 	add	ptr__ff_cc_dat__, #6
06918     F8 26 02 F6 | 	mov	local08, ptr__ff_cc_dat__
0691c     F8 24 02 F1 | 	add	local07, ptr__ff_cc_dat__
06920     12 29 C2 FA | 	rdbyte	local09, local07
06924     14 0F 02 F1 | 	add	arg01, local09
06928     06 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #6
0692c     2C EB BF FD | 	call	#_ff_cc_ld_word_0191
06930     FA 2A 02 F6 | 	mov	local10, result1
06934     0F 1D 02 F6 | 	mov	local03, local04
06938     0F 1C 4E F7 | 	zerox	local03, #15 wz
0693c     2C 00 90 AD |  if_e	jmp	#LR__0451
06940     00 23 16 F2 | 	cmp	local06, #256 wc
06944     00 F4 05 36 |  if_ae	mov	result1, #0
06948     84 00 90 3D |  if_ae	jmp	#LR__0455
0694c     11 25 02 F6 | 	mov	local07, local06
06950     01 24 66 F0 | 	shl	local07, #1
06954     0C 27 02 F6 | 	mov	local08, local01
06958     0C 25 02 F1 | 	add	local07, local01
0695c     15 1F 02 F6 | 	mov	local04, local10
06960     12 1F 52 FC | 	wrword	local04, local07
06964     01 22 06 F1 | 	add	local06, #1
06968     18 00 90 FD | 	jmp	#LR__0452
0696c                 | LR__0451
0696c     15 1D 02 F6 | 	mov	local03, local10
06970     0F 1C 46 F7 | 	zerox	local03, #15
06974     7F 00 00 FF 
06978     FF 1D 0E F2 | 	cmp	local03, ##65535 wz
0697c     00 F4 05 56 |  if_ne	mov	result1, #0
06980     4C 00 90 5D |  if_ne	jmp	#LR__0455
06984                 | LR__0452
06984     01 20 06 F1 | 	add	local05, #1
06988     78 FF 9F FD | 	jmp	#LR__0450
0698c                 | LR__0453
0698c     0D 1D C2 FA | 	rdbyte	local03, local02
06990     40 1C CE F7 | 	test	local03, #64 wz
06994     34 00 90 AD |  if_e	jmp	#LR__0454
06998     0F 2D 02 F6 | 	mov	local11, local04
0699c     0F 2C 4E F7 | 	zerox	local11, #15 wz
069a0     28 00 90 AD |  if_e	jmp	#LR__0454
069a4     00 23 16 F2 | 	cmp	local06, #256 wc
069a8     00 F4 05 36 |  if_ae	mov	result1, #0
069ac     20 00 90 3D |  if_ae	jmp	#LR__0455
069b0     11 1D 02 F6 | 	mov	local03, local06
069b4     0E 2D 02 F6 | 	mov	local11, local03
069b8     01 2C 66 F0 | 	shl	local11, #1
069bc     0C 2F 02 F6 | 	mov	local12, local01
069c0     0C 2D 02 F1 | 	add	local11, local01
069c4     00 24 06 F6 | 	mov	local07, #0
069c8     16 01 58 FC | 	wrword	#0, local11
069cc                 | LR__0454
069cc                 | ' 		lfnbuf[i] = 0;
069cc                 | ' 	}
069cc                 | ' 
069cc                 | ' 	return 1;
069cc     01 F4 05 F6 | 	mov	result1, #1
069d0                 | LR__0455
069d0     A8 F0 03 F6 | 	mov	ptra, fp
069d4     B3 00 A0 FD | 	call	#popregs_
069d8                 | _ff_cc_pick_lfn_0270_ret
069d8     2D 00 64 FD | 	ret
069dc                 | 
069dc                 | _ff_cc_put_lfn_0274
069dc     0A 4C 05 F6 | 	mov	COUNT_, #10
069e0     A9 00 A0 FD | 	call	#pushregs_
069e4     07 19 02 F6 | 	mov	local01, arg01
069e8     08 1B 02 F6 | 	mov	local02, arg02
069ec     09 1D 02 F6 | 	mov	local03, arg03
069f0     0D 1A 06 F1 | 	add	local02, #13
069f4     0D 15 42 FC | 	wrbyte	arg04, local02
069f8     02 1A 86 F1 | 	sub	local02, #2
069fc     0D 1F 48 FC | 	wrbyte	#15, local02
06a00     01 1A 06 F1 | 	add	local02, #1
06a04     0D 01 48 FC | 	wrbyte	#0, local02
06a08     0C 1A 86 F1 | 	sub	local02, #12
06a0c     0D 0F 02 F6 | 	mov	arg01, local02
06a10     1A 0E 06 F1 | 	add	arg01, #26
06a14     00 10 06 F6 | 	mov	arg02, #0
06a18     A4 EA BF FD | 	call	#_ff_cc_st_word_0194
06a1c     0E 1F 02 F6 | 	mov	local04, local03
06a20     07 1E 46 F7 | 	zerox	local04, #7
06a24     01 1E 86 F1 | 	sub	local04, #1
06a28     0D 1E 06 FD | 	qmul	local04, #13
06a2c     00 20 06 F6 | 	mov	local05, #0
06a30     00 22 06 F6 | 	mov	local06, #0
06a34     0F 22 46 F7 | 	zerox	local06, #15
06a38                 | ' 	BYTE* dir,
06a38                 | ' 	BYTE ord,
06a38                 | ' 	BYTE sum
06a38                 | ' )
06a38                 | ' {
06a38                 | ' 	UINT i, s;
06a38                 | ' 	WCHAR wc;
06a38                 | ' 
06a38                 | ' 
06a38                 | ' 	dir[ 13 ] = sum;
06a38                 | ' 	dir[ 11 ] =  0x0F ;
06a38                 | ' 	dir[ 12 ] = 0;
06a38                 | ' 	st_word(dir +  26 , 0);
06a38                 | ' 
06a38                 | ' 	i = (ord - 1) * 13;
06a38                 | ' 	s = wc = 0;
06a38                 | ' 	do {
06a38     18 24 62 FD | 	getqx	local07
06a3c                 | LR__0456
06a3c     10 1F 02 F6 | 	mov	local04, local05
06a40     0F 1E 46 F7 | 	zerox	local04, #15
06a44     7F 00 00 FF 
06a48     FF 1F 0E F2 | 	cmp	local04, ##65535 wz
06a4c     14 00 90 AD |  if_e	jmp	#LR__0457
06a50     12 27 02 F6 | 	mov	local08, local07
06a54     01 26 66 F0 | 	shl	local08, #1
06a58     0C 27 02 F1 | 	add	local08, local01
06a5c     13 21 E2 FA | 	rdword	local05, local08
06a60     01 24 06 F1 | 	add	local07, #1
06a64                 | LR__0457
06a64     0D 0F 02 F6 | 	mov	arg01, local02
06a68     11 27 02 F6 | 	mov	local08, local06
06a6c     06 F0 05 F1 | 	add	ptr__ff_cc_dat__, #6
06a70     F8 26 02 F1 | 	add	local08, ptr__ff_cc_dat__
06a74     13 29 C2 FA | 	rdbyte	local09, local08
06a78     14 0F 02 F1 | 	add	arg01, local09
06a7c     10 11 02 F6 | 	mov	arg02, local05
06a80     06 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #6
06a84     38 EA BF FD | 	call	#_ff_cc_st_word_0194
06a88     10 1F 02 F6 | 	mov	local04, local05
06a8c     0F 1E 4E F7 | 	zerox	local04, #15 wz
06a90     0F 20 CE A9 |  if_e	bmask	local05, #15
06a94     01 22 06 F1 | 	add	local06, #1
06a98     0D 22 16 F2 | 	cmp	local06, #13 wc
06a9c     9C FF 9F CD |  if_b	jmp	#LR__0456
06aa0     0F 20 46 F7 | 	zerox	local05, #15
06aa4     7F 00 00 FF 
06aa8     FF 21 0E F2 | 	cmp	local05, ##65535 wz
06aac     10 00 90 AD |  if_e	jmp	#LR__0458
06ab0     01 24 66 F0 | 	shl	local07, #1
06ab4     0C 25 02 F1 | 	add	local07, local01
06ab8     12 2B EA FA | 	rdword	local10, local07 wz
06abc     08 00 90 5D |  if_ne	jmp	#LR__0459
06ac0                 | LR__0458
06ac0     07 1C 46 F7 | 	zerox	local03, #7
06ac4     40 1C 46 F5 | 	or	local03, #64
06ac8                 | LR__0459
06ac8     0D 1D 42 FC | 	wrbyte	local03, local02
06acc     A8 F0 03 F6 | 	mov	ptra, fp
06ad0     B3 00 A0 FD | 	call	#popregs_
06ad4                 | _ff_cc_put_lfn_0274_ret
06ad4     2D 00 64 FD | 	ret
06ad8                 | 
06ad8                 | _ff_cc_gen_numname_0281
06ad8     0F 4C 05 F6 | 	mov	COUNT_, #15
06adc     A9 00 A0 FD | 	call	#pushregs_
06ae0     2C F0 07 F1 | 	add	ptra, #44
06ae4     07 19 02 F6 | 	mov	local01, arg01
06ae8     08 1B 02 F6 | 	mov	local02, arg02
06aec     09 1D 02 F6 | 	mov	local03, arg03
06af0     0A 1F 02 F6 | 	mov	local04, arg04
06af4     0C 0F 02 F6 | 	mov	arg01, local01
06af8     0D 11 02 F6 | 	mov	arg02, local02
06afc     0B 12 06 F6 | 	mov	arg03, #11
06b00     0C EA BF FD | 	call	#_ff_cc_mem_cpy_0198
06b04     06 1E 16 F2 | 	cmp	local04, #6 wc
06b08     54 00 90 CD |  if_b	jmp	#LR__0463
06b0c     0F 21 02 F6 | 	mov	local05, local04
06b10                 | ' 		sreg = seq;
06b10                 | ' 		while (*lfn) {
06b10                 | LR__0460
06b10     0E 23 EA FA | 	rdword	local06, local03 wz
06b14     44 00 90 AD |  if_e	jmp	#LR__0462
06b18     0E 25 E2 FA | 	rdword	local07, local03
06b1c                 | ' 			wc = *lfn++;
06b1c                 | ' 			for (i = 0; i < 16; i++) {
06b1c     00 26 06 F6 | 	mov	local08, #0
06b20     02 1C 06 F1 | 	add	local03, #2
06b24                 | LR__0461
06b24     10 26 16 F2 | 	cmp	local08, #16 wc
06b28     E4 FF 9F 3D |  if_ae	jmp	#LR__0460
06b2c     01 20 66 F0 | 	shl	local05, #1
06b30     12 29 02 F6 | 	mov	local09, local07
06b34     0F 28 46 F7 | 	zerox	local09, #15
06b38     01 28 06 F5 | 	and	local09, #1
06b3c     14 21 02 F1 | 	add	local05, local09
06b40     0F 24 46 F7 | 	zerox	local07, #15
06b44     01 24 46 F0 | 	shr	local07, #1
06b48     10 20 2E F4 | 	testbn	local05, #16 wz
06b4c     88 00 00 5F 
06b50     21 20 66 55 |  if_ne	xor	local05, ##69665
06b54     01 26 06 F1 | 	add	local08, #1
06b58     C8 FF 9F FD | 	jmp	#LR__0461
06b5c                 | LR__0462
06b5c     10 1F 02 F6 | 	mov	local04, local05
06b60                 | LR__0463
06b60     07 26 06 F6 | 	mov	local08, #7
06b64     D8 94 9F FE | 	loc	pa,	#(@LR__0465-@LR__0464)
06b68     8C 00 A0 FD | 	call	#FCACHE_LOAD_
06b6c                 | ' 			}
06b6c                 | ' 		}
06b6c                 | ' 		seq = (UINT)sreg;
06b6c                 | ' 	}
06b6c                 | ' 
06b6c                 | ' 
06b6c                 | ' 	i = 7;
06b6c                 | ' 	do {
06b6c                 | LR__0464
06b6c     0F 2B 02 F6 | 	mov	local10, local04
06b70     0F 2A 06 F5 | 	and	local10, #15
06b74     30 2A 06 F1 | 	add	local10, #48
06b78     15 23 02 F6 | 	mov	local06, local10
06b7c     07 22 46 F7 | 	zerox	local06, #7
06b80     3A 22 16 F2 | 	cmp	local06, #58 wc
06b84     07 2A 46 37 |  if_ae	zerox	local10, #7
06b88     07 2A 06 31 |  if_ae	add	local10, #7
06b8c     13 2D 02 F6 | 	mov	local11, local08
06b90     10 50 05 F1 | 	add	fp, #16
06b94     A8 2C 02 F1 | 	add	local11, fp
06b98     16 2B 42 FC | 	wrbyte	local10, local11
06b9c     04 1E 4E F0 | 	shr	local04, #4 wz
06ba0     01 26 86 F1 | 	sub	local08, #1
06ba4     10 50 85 F1 | 	sub	fp, #16
06ba8     C0 FF 9F 5D |  if_ne	jmp	#LR__0464
06bac                 | LR__0465
06bac     13 23 02 F6 | 	mov	local06, local08
06bb0     10 50 05 F1 | 	add	fp, #16
06bb4     A8 22 02 F1 | 	add	local06, fp
06bb8     11 FD 48 FC | 	wrbyte	#126, local06
06bbc                 | ' 	ns[i] = '~';
06bbc                 | ' 
06bbc                 | ' 
06bbc                 | ' 	for (j = 0; j < i && dst[j] != ' '; j++) {
06bbc     00 2E 06 F6 | 	mov	local12, #0
06bc0     10 50 85 F1 | 	sub	fp, #16
06bc4     8C 94 9F FE | 	loc	pa,	#(@LR__0468-@LR__0466)
06bc8     8C 00 A0 FD | 	call	#FCACHE_LOAD_
06bcc                 | LR__0466
06bcc     13 2F 12 F2 | 	cmp	local12, local08 wc
06bd0     4C 00 90 3D |  if_ae	jmp	#LR__0469
06bd4     17 29 02 F6 | 	mov	local09, local12
06bd8     0C 29 02 F1 | 	add	local09, local01
06bdc     14 23 C2 FA | 	rdbyte	local06, local09
06be0     20 22 0E F2 | 	cmp	local06, #32 wz
06be4     38 00 90 AD |  if_e	jmp	#LR__0469
06be8     17 31 02 F6 | 	mov	local13, local12
06bec     0C 31 02 F1 | 	add	local13, local01
06bf0     18 0F CA FA | 	rdbyte	arg01, local13 wz
06bf4     00 F4 05 56 |  if_ne	mov	result1, #0
06bf8                 | ' 
06bf8                 | ' 	return 0;
06bf8     00 F4 05 A6 |  if_e	mov	result1, #0
06bfc     00 F4 0D F2 | 	cmp	result1, #0 wz
06c00     14 00 90 AD |  if_e	jmp	#LR__0467
06c04     13 33 02 F6 | 	mov	local14, local08
06c08     01 32 86 F1 | 	sub	local14, #1
06c0c     19 2F 0A F2 | 	cmp	local12, local14 wz
06c10     0C 00 90 AD |  if_e	jmp	#LR__0469
06c14     01 2E 06 F1 | 	add	local12, #1
06c18                 | LR__0467
06c18     01 2E 06 F1 | 	add	local12, #1
06c1c     AC FF 9F FD | 	jmp	#LR__0466
06c20                 | LR__0468
06c20                 | LR__0469
06c20     1C 94 9F FE | 	loc	pa,	#(@LR__0473-@LR__0470)
06c24     8C 00 A0 FD | 	call	#FCACHE_LOAD_
06c28                 | ' 			j++;
06c28                 | ' 		}
06c28                 | ' 	}
06c28                 | ' 	do {
06c28                 | LR__0470
06c28     17 2D 02 F6 | 	mov	local11, local12
06c2c     0C 2D 02 F1 | 	add	local11, local01
06c30     08 26 16 F2 | 	cmp	local08, #8 wc
06c34     01 2E 06 F1 | 	add	local12, #1
06c38     1C 00 90 3D |  if_ae	jmp	#LR__0471
06c3c     13 35 02 F6 | 	mov	local15, local08
06c40     10 50 05 F1 | 	add	fp, #16
06c44     A8 34 02 F1 | 	add	local15, fp
06c48     1A 31 C2 FA | 	rdbyte	local13, local15
06c4c     01 26 06 F1 | 	add	local08, #1
06c50     10 50 85 F1 | 	sub	fp, #16
06c54     04 00 90 FD | 	jmp	#LR__0472
06c58                 | LR__0471
06c58     20 30 06 F6 | 	mov	local13, #32
06c5c                 | LR__0472
06c5c     16 31 42 FC | 	wrbyte	local13, local11
06c60     08 2E 16 F2 | 	cmp	local12, #8 wc
06c64     C0 FF 9F CD |  if_b	jmp	#LR__0470
06c68                 | LR__0473
06c68     A8 F0 03 F6 | 	mov	ptra, fp
06c6c     B3 00 A0 FD | 	call	#popregs_
06c70                 | _ff_cc_gen_numname_0281_ret
06c70     2D 00 64 FD | 	ret
06c74                 | 
06c74                 | _ff_cc_sum_sfn_0284
06c74     00 F8 05 F6 | 	mov	_var01, #0
06c78                 | ' )
06c78                 | ' {
06c78                 | ' 	BYTE sum = 0;
06c78                 | ' 	UINT n = 11;
06c78                 | ' 
06c78                 | ' 	do {
06c78     B0 93 9F FE | 	loc	pa,	#(@LR__0476-@LR__0474)
06c7c     8C 00 A0 FD | 	call	#FCACHE_LOAD_
06c80                 | LR__0474
06c80     0B 14 DC FC | 	rep	@LR__0477, #11
06c84                 | LR__0475
06c84     FC FA 01 F6 | 	mov	_var02, _var01
06c88     07 FA 45 F7 | 	zerox	_var02, #7
06c8c     01 FA 45 F0 | 	shr	_var02, #1
06c90     07 F8 45 F7 | 	zerox	_var01, #7
06c94     07 F8 65 F0 | 	shl	_var01, #7
06c98     FC FA 01 F1 | 	add	_var02, _var01
06c9c     07 FD C1 FA | 	rdbyte	_var03, arg01
06ca0     FE FA 01 F1 | 	add	_var02, _var03
06ca4     FD F8 01 F6 | 	mov	_var01, _var02
06ca8     01 0E 06 F1 | 	add	arg01, #1
06cac                 | LR__0476
06cac                 | LR__0477
06cac                 | ' 	return sum;
06cac     FC F4 01 F6 | 	mov	result1, _var01
06cb0                 | _ff_cc_sum_sfn_0284_ret
06cb0     2D 00 64 FD | 	ret
06cb4                 | 
06cb4                 | _ff_cc_dir_read_0291
06cb4     13 4C 05 F6 | 	mov	COUNT_, #19
06cb8     A9 00 A0 FD | 	call	#pushregs_
06cbc     07 19 02 F6 | 	mov	local01, arg01
06cc0     08 1B 02 F6 | 	mov	local02, arg02
06cc4     04 1C 06 F6 | 	mov	local03, #4
06cc8     0C 1F 02 FB | 	rdlong	local04, local01
06ccc     FF 20 06 F6 | 	mov	local05, #255
06cd0     FF 22 06 F6 | 	mov	local06, #255
06cd4                 | ' )
06cd4                 | ' {
06cd4                 | ' 	FRESULT res = FR_NO_FILE;
06cd4                 | ' 	FATFS *fs = dp->obj.fs;
06cd4                 | ' 	BYTE attr, b;
06cd4                 | ' 
06cd4                 | ' 	BYTE ord = 0xFF, sum = 0xFF;
06cd4                 | ' 
06cd4                 | ' 
06cd4                 | ' 	while (dp->sect) {
06cd4                 | LR__0478
06cd4     18 18 06 F1 | 	add	local01, #24
06cd8     0C 25 0A FB | 	rdlong	local07, local01 wz
06cdc     18 18 86 F1 | 	sub	local01, #24
06ce0     DC 01 90 AD |  if_e	jmp	#LR__0488
06ce4     18 18 06 F1 | 	add	local01, #24
06ce8     0C 11 02 FB | 	rdlong	arg02, local01
06cec     18 18 86 F1 | 	sub	local01, #24
06cf0     0F 0F 02 F6 | 	mov	arg01, local04
06cf4     C8 EA BF FD | 	call	#_ff_cc_move_window_0218
06cf8     FA 1C 0A F6 | 	mov	local03, result1 wz
06cfc     C0 01 90 5D |  if_ne	jmp	#LR__0488
06d00     1C 18 06 F1 | 	add	local01, #28
06d04     0C 25 02 FB | 	rdlong	local07, local01
06d08     1C 18 86 F1 | 	sub	local01, #28
06d0c     12 27 C2 FA | 	rdbyte	local08, local07
06d10     13 25 02 F6 | 	mov	local07, local08
06d14     07 24 4E F7 | 	zerox	local07, #7 wz
06d18     04 1C 06 A6 |  if_e	mov	local03, #4
06d1c                 | ' 			res = FR_NO_FILE; break;
06d1c     A0 01 90 AD |  if_e	jmp	#LR__0488
06d20     1C 18 06 F1 | 	add	local01, #28
06d24     0C 29 02 FB | 	rdlong	local09, local01
06d28     0B 28 06 F1 | 	add	local09, #11
06d2c     14 2B C2 FA | 	rdbyte	local10, local09
06d30     3F 2A 06 F5 | 	and	local10, #63
06d34     16 18 86 F1 | 	sub	local01, #22
06d38     0C 2B 42 FC | 	wrbyte	local10, local01
06d3c     06 18 86 F1 | 	sub	local01, #6
06d40     13 25 02 F6 | 	mov	local07, local08
06d44     07 24 46 F7 | 	zerox	local07, #7
06d48     E5 24 0E F2 | 	cmp	local07, #229 wz
06d4c     30 00 90 AD |  if_e	jmp	#LR__0479
06d50     13 29 02 F6 | 	mov	local09, local08
06d54     07 28 46 F7 | 	zerox	local09, #7
06d58     2E 28 0E F2 | 	cmp	local09, #46 wz
06d5c     20 00 90 AD |  if_e	jmp	#LR__0479
06d60     00 2C 06 F6 | 	mov	local11, #0
06d64     15 2F 02 F6 | 	mov	local12, local10
06d68     07 2E 46 F7 | 	zerox	local12, #7
06d6c     20 2E 26 F5 | 	andn	local12, #32
06d70     08 2E 0E F2 | 	cmp	local12, #8 wz
06d74     01 2C 06 A6 |  if_e	mov	local11, #1
06d78     0D 2D 0A F2 | 	cmp	local11, local02 wz
06d7c     08 00 90 AD |  if_e	jmp	#LR__0480
06d80                 | LR__0479
06d80     FF 20 06 F6 | 	mov	local05, #255
06d84     24 01 90 FD | 	jmp	#LR__0487
06d88                 | LR__0480
06d88     07 2A 46 F7 | 	zerox	local10, #7
06d8c     0F 2A 0E F2 | 	cmp	local10, #15 wz
06d90     D8 00 90 5D |  if_ne	jmp	#LR__0484
06d94     13 25 02 F6 | 	mov	local07, local08
06d98     07 24 46 F7 | 	zerox	local07, #7
06d9c     40 24 CE F7 | 	test	local07, #64 wz
06da0     30 00 90 AD |  if_e	jmp	#LR__0481
06da4     1C 18 06 F1 | 	add	local01, #28
06da8     0C 25 02 FB | 	rdlong	local07, local01
06dac     0D 24 06 F1 | 	add	local07, #13
06db0     12 23 C2 FA | 	rdbyte	local06, local07
06db4     07 26 46 F7 | 	zerox	local08, #7
06db8     BF 26 06 F5 | 	and	local08, #191
06dbc     13 21 02 F6 | 	mov	local05, local08
06dc0     0C 18 86 F1 | 	sub	local01, #12
06dc4     0C 25 02 FB | 	rdlong	local07, local01
06dc8     1C 18 06 F1 | 	add	local01, #28
06dcc     0C 25 62 FC | 	wrlong	local07, local01
06dd0     2C 18 86 F1 | 	sub	local01, #44
06dd4                 | LR__0481
06dd4     13 29 02 F6 | 	mov	local09, local08
06dd8     07 28 46 F7 | 	zerox	local09, #7
06ddc     10 2D 02 F6 | 	mov	local11, local05
06de0     07 2C 46 F7 | 	zerox	local11, #7
06de4     16 29 0A F2 | 	cmp	local09, local11 wz
06de8     74 00 90 5D |  if_ne	jmp	#LR__0482
06dec     11 2F 02 F6 | 	mov	local12, local06
06df0     07 2E 46 F7 | 	zerox	local12, #7
06df4     1C 18 06 F1 | 	add	local01, #28
06df8     0C 31 02 FB | 	rdlong	local13, local01
06dfc     1C 18 86 F1 | 	sub	local01, #28
06e00     18 33 02 F6 | 	mov	local14, local13
06e04     0D 32 06 F1 | 	add	local14, #13
06e08     19 35 C2 FA | 	rdbyte	local15, local14
06e0c     0D 32 86 F1 | 	sub	local14, #13
06e10     1A 37 02 F6 | 	mov	local16, local15
06e14     07 36 46 F7 | 	zerox	local16, #7
06e18     1B 2F 0A F2 | 	cmp	local12, local16 wz
06e1c     40 00 90 5D |  if_ne	jmp	#LR__0482
06e20     0C 1E 06 F1 | 	add	local04, #12
06e24     0F 0F 02 FB | 	rdlong	arg01, local04
06e28     0C 1E 86 F1 | 	sub	local04, #12
06e2c     1C 18 06 F1 | 	add	local01, #28
06e30     0C 39 02 FB | 	rdlong	local17, local01
06e34     1C 18 86 F1 | 	sub	local01, #28
06e38     1C 3B 02 F6 | 	mov	local18, local17
06e3c     1D 11 02 F6 | 	mov	arg02, local18
06e40     78 FA BF FD | 	call	#_ff_cc_pick_lfn_0270
06e44     FA 3C 0A F6 | 	mov	local19, result1 wz
06e48     14 00 90 AD |  if_e	jmp	#LR__0482
06e4c     10 3B 02 F6 | 	mov	local18, local05
06e50     07 3A 46 F7 | 	zerox	local18, #7
06e54     01 3A 86 F1 | 	sub	local18, #1
06e58     1D 25 02 F6 | 	mov	local07, local18
06e5c     04 00 90 FD | 	jmp	#LR__0483
06e60                 | LR__0482
06e60     FF 24 06 F6 | 	mov	local07, #255
06e64                 | LR__0483
06e64     12 21 02 F6 | 	mov	local05, local07
06e68     40 00 90 FD | 	jmp	#LR__0486
06e6c                 | LR__0484
06e6c     10 25 02 F6 | 	mov	local07, local05
06e70     07 24 4E F7 | 	zerox	local07, #7 wz
06e74     20 00 90 5D |  if_ne	jmp	#LR__0485
06e78     07 22 46 F7 | 	zerox	local06, #7
06e7c     1C 18 06 F1 | 	add	local01, #28
06e80     0C 0F 02 FB | 	rdlong	arg01, local01
06e84     1C 18 86 F1 | 	sub	local01, #28
06e88     E8 FD BF FD | 	call	#_ff_cc_sum_sfn_0284
06e8c     07 F4 45 F7 | 	zerox	result1, #7
06e90     FA 22 0A F2 | 	cmp	local06, result1 wz
06e94     28 00 90 AD |  if_e	jmp	#LR__0488
06e98                 | LR__0485
06e98     2C 18 06 F1 | 	add	local01, #44
06e9c     FF FF FF FF 
06ea0     0C FF 6B FC | 	wrlong	##-1, local01
06ea4     2C 18 86 F1 | 	sub	local01, #44
06ea8                 | ' 						dp->blk_ofs = 0xFFFFFFFF;
06ea8                 | ' 					}
06ea8                 | ' 					break;
06ea8     14 00 90 FD | 	jmp	#LR__0488
06eac                 | LR__0486
06eac                 | LR__0487
06eac     0C 0F 02 F6 | 	mov	arg01, local01
06eb0     00 10 06 F6 | 	mov	arg02, #0
06eb4     94 F5 BF FD | 	call	#_ff_cc_dir_next_0253
06eb8     FA 1C 0A F6 | 	mov	local03, result1 wz
06ebc     14 FE 9F AD |  if_e	jmp	#LR__0478
06ec0                 | LR__0488
06ec0     00 1C 0E F2 | 	cmp	local03, #0 wz
06ec4     18 18 06 51 |  if_ne	add	local01, #24
06ec8     0C 01 68 5C |  if_ne	wrlong	#0, local01
06ecc                 | ' 	return res;
06ecc     0E F5 01 F6 | 	mov	result1, local03
06ed0     A8 F0 03 F6 | 	mov	ptra, fp
06ed4     B3 00 A0 FD | 	call	#popregs_
06ed8                 | _ff_cc_dir_read_0291_ret
06ed8     2D 00 64 FD | 	ret
06edc                 | 
06edc                 | _ff_cc_dir_find_0298
06edc     12 4C 05 F6 | 	mov	COUNT_, #18
06ee0     A9 00 A0 FD | 	call	#pushregs_
06ee4     07 19 02 F6 | 	mov	local01, arg01
06ee8     0C 1B 02 FB | 	rdlong	local02, local01
06eec     0C 0F 02 F6 | 	mov	arg01, local01
06ef0     00 10 06 F6 | 	mov	arg02, #0
06ef4     C8 F3 BF FD | 	call	#_ff_cc_dir_sdi_0249
06ef8     00 F4 0D F2 | 	cmp	result1, #0 wz
06efc     7C 02 90 5D |  if_ne	jmp	#LR__0501
06f00     FF 1C 06 F6 | 	mov	local03, #255
06f04     FF 1E 06 F6 | 	mov	local04, #255
06f08     2C 18 06 F1 | 	add	local01, #44
06f0c     FF FF FF FF 
06f10     0C FF 6B FC | 	wrlong	##-1, local01
06f14     2C 18 86 F1 | 	sub	local01, #44
06f18                 | ' #line 2477 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
06f18                 | ' 	ord = sum = 0xFF; dp->blk_ofs = 0xFFFFFFFF;
06f18                 | ' 
06f18                 | ' 	do {
06f18                 | LR__0489
06f18     18 18 06 F1 | 	add	local01, #24
06f1c     0C 11 02 FB | 	rdlong	arg02, local01
06f20     18 18 86 F1 | 	sub	local01, #24
06f24     0D 0F 02 F6 | 	mov	arg01, local02
06f28     94 E8 BF FD | 	call	#_ff_cc_move_window_0218
06f2c     FA 20 0A F6 | 	mov	local05, result1 wz
06f30     44 02 90 5D |  if_ne	jmp	#LR__0500
06f34     1C 18 06 F1 | 	add	local01, #28
06f38     0C 23 02 FB | 	rdlong	local06, local01
06f3c     1C 18 86 F1 | 	sub	local01, #28
06f40     11 25 C2 FA | 	rdbyte	local07, local06
06f44     12 23 02 F6 | 	mov	local06, local07
06f48     07 22 4E F7 | 	zerox	local06, #7 wz
06f4c     04 20 06 A6 |  if_e	mov	local05, #4
06f50                 | ' #line 2487 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
06f50                 | '                     res = FR_NO_FILE; break;
06f50     24 02 90 AD |  if_e	jmp	#LR__0500
06f54     1C 18 06 F1 | 	add	local01, #28
06f58     0C 27 02 FB | 	rdlong	local08, local01
06f5c     13 29 02 F6 | 	mov	local09, local08
06f60     0B 28 06 F1 | 	add	local09, #11
06f64     14 2B C2 FA | 	rdbyte	local10, local09
06f68     15 2D 02 F6 | 	mov	local11, local10
06f6c     07 2C 46 F7 | 	zerox	local11, #7
06f70     3F 2C 06 F5 | 	and	local11, #63
06f74     16 18 86 F1 | 	sub	local01, #22
06f78     0C 2D 42 FC | 	wrbyte	local11, local01
06f7c     06 18 86 F1 | 	sub	local01, #6
06f80     12 23 02 F6 | 	mov	local06, local07
06f84     07 22 46 F7 | 	zerox	local06, #7
06f88     E5 22 0E F2 | 	cmp	local06, #229 wz
06f8c     20 00 90 AD |  if_e	jmp	#LR__0490
06f90     16 29 02 F6 | 	mov	local09, local11
06f94     07 28 46 F7 | 	zerox	local09, #7
06f98     08 28 0E F5 | 	and	local09, #8 wz
06f9c     28 00 90 AD |  if_e	jmp	#LR__0491
06fa0     16 27 02 F6 | 	mov	local08, local11
06fa4     07 26 46 F7 | 	zerox	local08, #7
06fa8     0F 26 0E F2 | 	cmp	local08, #15 wz
06fac     18 00 90 AD |  if_e	jmp	#LR__0491
06fb0                 | LR__0490
06fb0     FF 1E 06 F6 | 	mov	local04, #255
06fb4     2C 18 06 F1 | 	add	local01, #44
06fb8     FF FF FF FF 
06fbc     0C FF 6B FC | 	wrlong	##-1, local01
06fc0     2C 18 86 F1 | 	sub	local01, #44
06fc4     94 01 90 FD | 	jmp	#LR__0499
06fc8                 | LR__0491
06fc8     16 23 02 F6 | 	mov	local06, local11
06fcc     07 22 46 F7 | 	zerox	local06, #7
06fd0     0F 22 0E F2 | 	cmp	local06, #15 wz
06fd4     F0 00 90 5D |  if_ne	jmp	#LR__0495
06fd8     2B 18 06 F1 | 	add	local01, #43
06fdc     0C 23 C2 FA | 	rdbyte	local06, local01
06fe0     2B 18 86 F1 | 	sub	local01, #43
06fe4     07 22 46 F7 | 	zerox	local06, #7
06fe8     40 22 CE F7 | 	test	local06, #64 wz
06fec     6C 01 90 5D |  if_ne	jmp	#LR__0498
06ff0     12 23 02 F6 | 	mov	local06, local07
06ff4     07 22 46 F7 | 	zerox	local06, #7
06ff8     40 22 CE F7 | 	test	local06, #64 wz
06ffc     30 00 90 AD |  if_e	jmp	#LR__0492
07000     1C 18 06 F1 | 	add	local01, #28
07004     0C 23 02 FB | 	rdlong	local06, local01
07008     0D 22 06 F1 | 	add	local06, #13
0700c     11 1D C2 FA | 	rdbyte	local03, local06
07010     07 24 46 F7 | 	zerox	local07, #7
07014     BF 24 06 F5 | 	and	local07, #191
07018     12 1F 02 F6 | 	mov	local04, local07
0701c     0C 18 86 F1 | 	sub	local01, #12
07020     0C 23 02 FB | 	rdlong	local06, local01
07024     1C 18 06 F1 | 	add	local01, #28
07028     0C 23 62 FC | 	wrlong	local06, local01
0702c     2C 18 86 F1 | 	sub	local01, #44
07030                 | LR__0492
07030     12 29 02 F6 | 	mov	local09, local07
07034     07 28 46 F7 | 	zerox	local09, #7
07038     0F 27 02 F6 | 	mov	local08, local04
0703c     07 26 46 F7 | 	zerox	local08, #7
07040     13 29 0A F2 | 	cmp	local09, local08 wz
07044     74 00 90 5D |  if_ne	jmp	#LR__0493
07048     0E 2B 02 F6 | 	mov	local10, local03
0704c     07 2A 46 F7 | 	zerox	local10, #7
07050     1C 18 06 F1 | 	add	local01, #28
07054     0C 2F 02 FB | 	rdlong	local12, local01
07058     1C 18 86 F1 | 	sub	local01, #28
0705c     17 31 02 F6 | 	mov	local13, local12
07060     0D 30 06 F1 | 	add	local13, #13
07064     18 33 C2 FA | 	rdbyte	local14, local13
07068     0D 30 86 F1 | 	sub	local13, #13
0706c     19 35 02 F6 | 	mov	local15, local14
07070     07 34 46 F7 | 	zerox	local15, #7
07074     1A 2B 0A F2 | 	cmp	local10, local15 wz
07078     40 00 90 5D |  if_ne	jmp	#LR__0493
0707c     0C 1A 06 F1 | 	add	local02, #12
07080     0D 0F 02 FB | 	rdlong	arg01, local02
07084     0C 1A 86 F1 | 	sub	local02, #12
07088     1C 18 06 F1 | 	add	local01, #28
0708c     0C 37 02 FB | 	rdlong	local16, local01
07090     1C 18 86 F1 | 	sub	local01, #28
07094     1B 39 02 F6 | 	mov	local17, local16
07098     1C 11 02 F6 | 	mov	arg02, local17
0709c     E8 F6 BF FD | 	call	#_ff_cc_cmp_lfn_0265
070a0     FA 3A 0A F6 | 	mov	local18, result1 wz
070a4     14 00 90 AD |  if_e	jmp	#LR__0493
070a8     0F 39 02 F6 | 	mov	local17, local04
070ac     07 38 46 F7 | 	zerox	local17, #7
070b0     01 38 86 F1 | 	sub	local17, #1
070b4     1C 23 02 F6 | 	mov	local06, local17
070b8     04 00 90 FD | 	jmp	#LR__0494
070bc                 | LR__0493
070bc     FF 22 06 F6 | 	mov	local06, #255
070c0                 | LR__0494
070c0     11 1F 02 F6 | 	mov	local04, local06
070c4     94 00 90 FD | 	jmp	#LR__0498
070c8                 | LR__0495
070c8     0F 23 02 F6 | 	mov	local06, local04
070cc     07 22 4E F7 | 	zerox	local06, #7 wz
070d0     30 00 90 5D |  if_ne	jmp	#LR__0496
070d4     0E 29 02 F6 | 	mov	local09, local03
070d8     07 28 46 F7 | 	zerox	local09, #7
070dc     1C 18 06 F1 | 	add	local01, #28
070e0     0C 35 02 FB | 	rdlong	local15, local01
070e4     1C 18 86 F1 | 	sub	local01, #28
070e8     1A 0F 02 F6 | 	mov	arg01, local15
070ec     84 FB BF FD | 	call	#_ff_cc_sum_sfn_0284
070f0     FA 2A 02 F6 | 	mov	local10, result1
070f4     15 27 02 F6 | 	mov	local08, local10
070f8     07 26 46 F7 | 	zerox	local08, #7
070fc     13 29 0A F2 | 	cmp	local09, local08 wz
07100     74 00 90 AD |  if_e	jmp	#LR__0500
07104                 | LR__0496
07104     2B 18 06 F1 | 	add	local01, #43
07108     0C 23 C2 FA | 	rdbyte	local06, local01
0710c     2B 18 86 F1 | 	sub	local01, #43
07110     07 22 46 F7 | 	zerox	local06, #7
07114     01 22 0E F5 | 	and	local06, #1 wz
07118     2C 00 90 5D |  if_ne	jmp	#LR__0497
0711c     1C 18 06 F1 | 	add	local01, #28
07120     0C 0F 02 FB | 	rdlong	arg01, local01
07124     04 18 06 F1 | 	add	local01, #4
07128     0C 2B 02 F6 | 	mov	local10, local01
0712c     0B 34 06 F6 | 	mov	local15, #11
07130     15 11 02 F6 | 	mov	arg02, local10
07134     0B 12 06 F6 | 	mov	arg03, #11
07138     20 18 86 F1 | 	sub	local01, #32
0713c     00 E4 BF FD | 	call	#_ff_cc_mem_cmp_0204
07140     FA 26 0A F6 | 	mov	local08, result1 wz
07144     30 00 90 AD |  if_e	jmp	#LR__0500
07148                 | LR__0497
07148     FF 1E 06 F6 | 	mov	local04, #255
0714c     2C 18 06 F1 | 	add	local01, #44
07150     FF FF FF FF 
07154     0C FF 6B FC | 	wrlong	##-1, local01
07158     2C 18 86 F1 | 	sub	local01, #44
0715c                 | LR__0498
0715c                 | LR__0499
0715c     00 28 06 F6 | 	mov	local09, #0
07160     0C 0F 02 F6 | 	mov	arg01, local01
07164     00 10 06 F6 | 	mov	arg02, #0
07168     E0 F2 BF FD | 	call	#_ff_cc_dir_next_0253
0716c     FA 22 02 F6 | 	mov	local06, result1
07170     11 21 0A F6 | 	mov	local05, local06 wz
07174     A0 FD 9F AD |  if_e	jmp	#LR__0489
07178                 | LR__0500
07178                 | ' 
07178                 | ' 	return res;
07178     10 F5 01 F6 | 	mov	result1, local05
0717c                 | LR__0501
0717c     A8 F0 03 F6 | 	mov	ptra, fp
07180     B3 00 A0 FD | 	call	#popregs_
07184                 | _ff_cc_dir_find_0298_ret
07184     2D 00 64 FD | 	ret
07188                 | 
07188                 | _ff_cc_dir_register_0306
07188     0E 4C 05 F6 | 	mov	COUNT_, #14
0718c     A9 00 A0 FD | 	call	#pushregs_
07190     2C F0 07 F1 | 	add	ptra, #44
07194     04 50 05 F1 | 	add	fp, #4
07198     A8 0E 62 FC | 	wrlong	arg01, fp
0719c     07 19 02 FB | 	rdlong	local01, arg01
071a0     08 50 05 F1 | 	add	fp, #8
071a4     A8 18 62 FC | 	wrlong	local01, fp
071a8     08 50 85 F1 | 	sub	fp, #8
071ac     A8 1A 02 FB | 	rdlong	local02, fp
071b0     04 50 85 F1 | 	sub	fp, #4
071b4     2B 1A 06 F1 | 	add	local02, #43
071b8     0D 1D C2 FA | 	rdbyte	local03, local02
071bc     A0 1C CE F7 | 	test	local03, #160 wz
071c0     06 F4 05 56 |  if_ne	mov	result1, #6
071c4     5C 04 90 5D |  if_ne	jmp	#LR__0522
071c8                 | ' 	for (nlen = 0; fs->lfnbuf[nlen]; nlen++) ;
071c8     14 50 05 F1 | 	add	fp, #20
071cc     A8 00 68 FC | 	wrlong	#0, fp
071d0     14 50 85 F1 | 	sub	fp, #20
071d4     78 8E 9F FE | 	loc	pa,	#(@LR__0503-@LR__0502)
071d8     8C 00 A0 FD | 	call	#FCACHE_LOAD_
071dc                 | LR__0502
071dc     0C 50 05 F1 | 	add	fp, #12
071e0     A8 1A 02 FB | 	rdlong	local02, fp
071e4     0C 1A 06 F1 | 	add	local02, #12
071e8     0D 1F 02 FB | 	rdlong	local04, local02
071ec     08 50 05 F1 | 	add	fp, #8
071f0     A8 20 02 FB | 	rdlong	local05, fp
071f4     14 50 85 F1 | 	sub	fp, #20
071f8     01 20 66 F0 | 	shl	local05, #1
071fc     0F 21 02 F1 | 	add	local05, local04
07200     10 23 EA FA | 	rdword	local06, local05 wz
07204     24 00 90 AD |  if_e	jmp	#LR__0504
07208     14 50 05 F1 | 	add	fp, #20
0720c     A8 24 02 FB | 	rdlong	local07, fp
07210     12 27 02 F6 | 	mov	local08, local07
07214     12 29 02 F6 | 	mov	local09, local07
07218     14 2B 02 F6 | 	mov	local10, local09
0721c     01 2A 06 F1 | 	add	local10, #1
07220     A8 2A 62 FC | 	wrlong	local10, fp
07224     14 50 85 F1 | 	sub	fp, #20
07228     B0 FF 9F FD | 	jmp	#LR__0502
0722c                 | LR__0503
0722c                 | LR__0504
0722c     1C 50 05 F1 | 	add	fp, #28
07230     A8 0E 02 F6 | 	mov	arg01, fp
07234     18 50 85 F1 | 	sub	fp, #24
07238     A8 10 02 FB | 	rdlong	arg02, fp
0723c     04 50 85 F1 | 	sub	fp, #4
07240     20 10 06 F1 | 	add	arg02, #32
07244     0C 12 06 F6 | 	mov	arg03, #12
07248     C4 E2 BF FD | 	call	#_ff_cc_mem_cpy_0198
0724c     27 50 05 F1 | 	add	fp, #39
07250     A8 1C C2 FA | 	rdbyte	local03, fp
07254     27 50 85 F1 | 	sub	fp, #39
07258     07 1C 46 F7 | 	zerox	local03, #7
0725c     01 1C CE F7 | 	test	local03, #1 wz
07260     F8 00 90 AD |  if_e	jmp	#LR__0508
07264     04 50 05 F1 | 	add	fp, #4
07268     A8 1C 02 FB | 	rdlong	local03, fp
0726c     2B 1C 06 F1 | 	add	local03, #43
07270     0E 81 48 FC | 	wrbyte	#64, local03
07274                 | ' 		dp->fn[ 11 ] =  0x40 ;
07274                 | ' 		for (n = 1; n < 100; n++) {
07274     0C 50 05 F1 | 	add	fp, #12
07278     A8 02 68 FC | 	wrlong	#1, fp
0727c     10 50 85 F1 | 	sub	fp, #16
07280                 | LR__0505
07280     10 50 05 F1 | 	add	fp, #16
07284     A8 1A 02 FB | 	rdlong	local02, fp
07288     10 50 85 F1 | 	sub	fp, #16
0728c     64 1A 16 F2 | 	cmp	local02, #100 wc
07290     70 00 90 3D |  if_ae	jmp	#LR__0506
07294     04 50 05 F1 | 	add	fp, #4
07298     A8 0E 02 FB | 	rdlong	arg01, fp
0729c     20 0E 06 F1 | 	add	arg01, #32
072a0     18 50 05 F1 | 	add	fp, #24
072a4     A8 10 02 F6 | 	mov	arg02, fp
072a8     10 50 85 F1 | 	sub	fp, #16
072ac     A8 2C 02 FB | 	rdlong	local11, fp
072b0     0C 2C 06 F1 | 	add	local11, #12
072b4     16 13 02 FB | 	rdlong	arg03, local11
072b8     04 50 05 F1 | 	add	fp, #4
072bc     A8 14 02 FB | 	rdlong	arg04, fp
072c0     10 50 85 F1 | 	sub	fp, #16
072c4     10 F8 BF FD | 	call	#_ff_cc_gen_numname_0281
072c8     04 50 05 F1 | 	add	fp, #4
072cc     A8 0E 02 FB | 	rdlong	arg01, fp
072d0     04 50 85 F1 | 	sub	fp, #4
072d4     04 FC BF FD | 	call	#_ff_cc_dir_find_0298
072d8     08 50 05 F1 | 	add	fp, #8
072dc     A8 F4 61 FC | 	wrlong	result1, fp
072e0     FA 2E 0A F6 | 	mov	local12, result1 wz
072e4     08 50 85 F1 | 	sub	fp, #8
072e8     18 00 90 5D |  if_ne	jmp	#LR__0506
072ec     10 50 05 F1 | 	add	fp, #16
072f0     A8 30 02 FB | 	rdlong	local13, fp
072f4     01 30 06 F1 | 	add	local13, #1
072f8     A8 30 62 FC | 	wrlong	local13, fp
072fc     10 50 85 F1 | 	sub	fp, #16
07300     7C FF 9F FD | 	jmp	#LR__0505
07304                 | LR__0506
07304     10 50 05 F1 | 	add	fp, #16
07308     A8 1C 02 FB | 	rdlong	local03, fp
0730c     10 50 85 F1 | 	sub	fp, #16
07310     64 1C 0E F2 | 	cmp	local03, #100 wz
07314     07 F4 05 A6 |  if_e	mov	result1, #7
07318     08 03 90 AD |  if_e	jmp	#LR__0522
0731c     08 50 05 F1 | 	add	fp, #8
07320     A8 1C 02 FB | 	rdlong	local03, fp
07324     08 50 85 F1 | 	sub	fp, #8
07328     04 1C 0E F2 | 	cmp	local03, #4 wz
0732c     10 00 90 AD |  if_e	jmp	#LR__0507
07330     08 50 05 F1 | 	add	fp, #8
07334     A8 F4 01 FB | 	rdlong	result1, fp
07338     08 50 85 F1 | 	sub	fp, #8
0733c     E4 02 90 FD | 	jmp	#LR__0522
07340                 | LR__0507
07340     04 50 05 F1 | 	add	fp, #4
07344     A8 1C 02 FB | 	rdlong	local03, fp
07348     23 50 05 F1 | 	add	fp, #35
0734c     A8 18 C2 FA | 	rdbyte	local01, fp
07350     27 50 85 F1 | 	sub	fp, #39
07354     2B 1C 06 F1 | 	add	local03, #43
07358     0E 19 42 FC | 	wrbyte	local01, local03
0735c                 | LR__0508
0735c     27 50 05 F1 | 	add	fp, #39
07360     A8 1A C2 FA | 	rdbyte	local02, fp
07364     27 50 85 F1 | 	sub	fp, #39
07368     07 1A 46 F7 | 	zerox	local02, #7
0736c     02 1A CE F7 | 	test	local02, #2 wz
07370     20 00 90 AD |  if_e	jmp	#LR__0509
07374     14 50 05 F1 | 	add	fp, #20
07378     A8 2E 02 FB | 	rdlong	local12, fp
0737c     0C 2E 06 F1 | 	add	local12, #12
07380     0D 2E 16 FD | 	qdiv	local12, #13
07384     14 50 85 F1 | 	sub	fp, #20
07388     18 1C 62 FD | 	getqx	local03
0738c     01 1C 06 F1 | 	add	local03, #1
07390     04 00 90 FD | 	jmp	#LR__0510
07394                 | LR__0509
07394     01 1C 06 F6 | 	mov	local03, #1
07398                 | LR__0510
07398     18 50 05 F1 | 	add	fp, #24
0739c     A8 1C 62 FC | 	wrlong	local03, fp
073a0     14 50 85 F1 | 	sub	fp, #20
073a4     A8 0E 02 FB | 	rdlong	arg01, fp
073a8     0E 11 02 F6 | 	mov	arg02, local03
073ac     04 50 85 F1 | 	sub	fp, #4
073b0     6C F2 BF FD | 	call	#_ff_cc_dir_alloc_0257
073b4     08 50 05 F1 | 	add	fp, #8
073b8     A8 F4 61 FC | 	wrlong	result1, fp
073bc     08 50 85 F1 | 	sub	fp, #8
073c0     00 F4 0D F2 | 	cmp	result1, #0 wz
073c4     80 01 90 5D |  if_ne	jmp	#LR__0515
073c8     18 50 05 F1 | 	add	fp, #24
073cc     A8 32 02 FB | 	rdlong	local14, fp
073d0     01 32 8E F1 | 	sub	local14, #1 wz
073d4     A8 32 62 FC | 	wrlong	local14, fp
073d8     18 50 85 F1 | 	sub	fp, #24
073dc     68 01 90 AD |  if_e	jmp	#LR__0515
073e0     04 50 05 F1 | 	add	fp, #4
073e4     A8 32 02 FB | 	rdlong	local14, fp
073e8     19 0F 02 F6 | 	mov	arg01, local14
073ec     19 2F 02 F6 | 	mov	local12, local14
073f0     14 50 05 F1 | 	add	fp, #20
073f4     A8 20 02 FB | 	rdlong	local05, fp
073f8     18 50 85 F1 | 	sub	fp, #24
073fc     10 2D 02 F6 | 	mov	local11, local05
07400     16 31 02 F6 | 	mov	local13, local11
07404     05 30 66 F0 | 	shl	local13, #5
07408     10 2E 06 F1 | 	add	local12, #16
0740c     17 1F 02 FB | 	rdlong	local04, local12
07410     10 2E 86 F1 | 	sub	local12, #16
07414     0F 19 02 F6 | 	mov	local01, local04
07418     18 19 82 F1 | 	sub	local01, local13
0741c     0C 11 02 F6 | 	mov	arg02, local01
07420     9C EE BF FD | 	call	#_ff_cc_dir_sdi_0249
07424     08 50 05 F1 | 	add	fp, #8
07428     A8 F4 61 FC | 	wrlong	result1, fp
0742c     FA 1A 02 F6 | 	mov	local02, result1
07430     08 50 85 F1 | 	sub	fp, #8
07434     0D 1D 0A F6 | 	mov	local03, local02 wz
07438     0C 01 90 5D |  if_ne	jmp	#LR__0514
0743c     04 50 05 F1 | 	add	fp, #4
07440     A8 0E 02 FB | 	rdlong	arg01, fp
07444     04 50 85 F1 | 	sub	fp, #4
07448     20 0E 06 F1 | 	add	arg01, #32
0744c     24 F8 BF FD | 	call	#_ff_cc_sum_sfn_0284
07450     FA 1C 02 F6 | 	mov	local03, result1
07454     28 50 05 F1 | 	add	fp, #40
07458     A8 1C 42 FC | 	wrbyte	local03, fp
0745c     28 50 85 F1 | 	sub	fp, #40
07460                 | ' 			sum = sum_sfn(dp->fn);
07460                 | ' 			do {
07460                 | LR__0511
07460     0C 50 05 F1 | 	add	fp, #12
07464     A8 0E 02 FB | 	rdlong	arg01, fp
07468     08 50 85 F1 | 	sub	fp, #8
0746c     A8 2E 02 FB | 	rdlong	local12, fp
07470     04 50 85 F1 | 	sub	fp, #4
07474     17 19 02 F6 | 	mov	local01, local12
07478     18 18 06 F1 | 	add	local01, #24
0747c     0C 33 02 FB | 	rdlong	local14, local01
07480     18 18 86 F1 | 	sub	local01, #24
07484     19 11 02 F6 | 	mov	arg02, local14
07488     34 E3 BF FD | 	call	#_ff_cc_move_window_0218
0748c     08 50 05 F1 | 	add	fp, #8
07490     A8 F4 61 FC | 	wrlong	result1, fp
07494     FA 1A 02 F6 | 	mov	local02, result1
07498     08 50 85 F1 | 	sub	fp, #8
0749c     0D 1D 0A F6 | 	mov	local03, local02 wz
074a0     A4 00 90 5D |  if_ne	jmp	#LR__0513
074a4     0C 50 05 F1 | 	add	fp, #12
074a8     A8 1A 02 FB | 	rdlong	local02, fp
074ac     0C 1A 06 F1 | 	add	local02, #12
074b0     0D 0F 02 FB | 	rdlong	arg01, local02
074b4     08 50 85 F1 | 	sub	fp, #8
074b8     A8 18 02 FB | 	rdlong	local01, fp
074bc     1C 18 06 F1 | 	add	local01, #28
074c0     0C 11 02 FB | 	rdlong	arg02, local01
074c4     14 50 05 F1 | 	add	fp, #20
074c8     A8 12 02 FB | 	rdlong	arg03, fp
074cc     10 50 05 F1 | 	add	fp, #16
074d0     A8 32 C2 FA | 	rdbyte	local14, fp
074d4     28 50 85 F1 | 	sub	fp, #40
074d8     19 2F 02 F6 | 	mov	local12, local14
074dc     17 15 02 F6 | 	mov	arg04, local12
074e0     F8 F4 BF FD | 	call	#_ff_cc_put_lfn_0274
074e4     0C 50 05 F1 | 	add	fp, #12
074e8     A8 1C 02 FB | 	rdlong	local03, fp
074ec     01 18 06 F6 | 	mov	local01, #1
074f0     03 1C 06 F1 | 	add	local03, #3
074f4     0E 03 48 FC | 	wrbyte	#1, local03
074f8     08 50 85 F1 | 	sub	fp, #8
074fc     A8 0E 02 FB | 	rdlong	arg01, fp
07500     04 50 85 F1 | 	sub	fp, #4
07504     00 10 06 F6 | 	mov	arg02, #0
07508     40 EF BF FD | 	call	#_ff_cc_dir_next_0253
0750c     08 50 05 F1 | 	add	fp, #8
07510     A8 F4 61 FC | 	wrlong	result1, fp
07514     FA 1A 02 F6 | 	mov	local02, result1
07518     08 50 85 F1 | 	sub	fp, #8
0751c     0D 1D 0A F6 | 	mov	local03, local02 wz
07520     24 00 90 5D |  if_ne	jmp	#LR__0512
07524     18 50 05 F1 | 	add	fp, #24
07528     A8 2E 02 FB | 	rdlong	local12, fp
0752c     17 19 02 F6 | 	mov	local01, local12
07530     01 18 86 F1 | 	sub	local01, #1
07534     A8 18 62 FC | 	wrlong	local01, fp
07538     0C 31 02 F6 | 	mov	local13, local01
0753c     18 50 85 F1 | 	sub	fp, #24
07540     18 33 0A F6 | 	mov	local14, local13 wz
07544     18 FF 9F 5D |  if_ne	jmp	#LR__0511
07548                 | LR__0512
07548                 | LR__0513
07548                 | LR__0514
07548                 | LR__0515
07548     08 50 05 F1 | 	add	fp, #8
0754c     A8 1C 0A FB | 	rdlong	local03, fp wz
07550     08 50 85 F1 | 	sub	fp, #8
07554     C0 00 90 5D |  if_ne	jmp	#LR__0521
07558     0C 50 05 F1 | 	add	fp, #12
0755c     A8 0E 02 FB | 	rdlong	arg01, fp
07560     08 50 85 F1 | 	sub	fp, #8
07564     A8 18 02 FB | 	rdlong	local01, fp
07568     04 50 85 F1 | 	sub	fp, #4
0756c     18 18 06 F1 | 	add	local01, #24
07570     0C 11 02 FB | 	rdlong	arg02, local01
07574     48 E2 BF FD | 	call	#_ff_cc_move_window_0218
07578     08 50 05 F1 | 	add	fp, #8
0757c     A8 F4 61 FC | 	wrlong	result1, fp
07580     08 50 85 F1 | 	sub	fp, #8
07584     00 F4 0D F2 | 	cmp	result1, #0 wz
07588     8C 00 90 5D |  if_ne	jmp	#LR__0520
0758c     04 50 05 F1 | 	add	fp, #4
07590     A8 1A 02 FB | 	rdlong	local02, fp
07594     04 50 85 F1 | 	sub	fp, #4
07598     1C 1A 06 F1 | 	add	local02, #28
0759c     0D 0F 02 FB | 	rdlong	arg01, local02
075a0     00 10 06 F6 | 	mov	arg02, #0
075a4                 | ' {
075a4                 | ' 	BYTE *d = (BYTE*)dst;
075a4                 | ' 
075a4                 | ' 	do {
075a4     64 8A 9F FE | 	loc	pa,	#(@LR__0518-@LR__0516)
075a8     8C 00 A0 FD | 	call	#FCACHE_LOAD_
075ac                 | LR__0516
075ac     20 04 DC FC | 	rep	@LR__0519, #32
075b0                 | LR__0517
075b0     07 11 42 FC | 	wrbyte	arg02, arg01
075b4     01 0E 06 F1 | 	add	arg01, #1
075b8                 | LR__0518
075b8                 | LR__0519
075b8     04 50 05 F1 | 	add	fp, #4
075bc     A8 10 02 FB | 	rdlong	arg02, fp
075c0     08 19 02 F6 | 	mov	local01, arg02
075c4     1C 18 06 F1 | 	add	local01, #28
075c8     0C 0F 02 FB | 	rdlong	arg01, local01
075cc     04 50 85 F1 | 	sub	fp, #4
075d0     20 10 06 F1 | 	add	arg02, #32
075d4     0B 12 06 F6 | 	mov	arg03, #11
075d8     34 DF BF FD | 	call	#_ff_cc_mem_cpy_0198
075dc     04 50 05 F1 | 	add	fp, #4
075e0     A8 30 02 FB | 	rdlong	local13, fp
075e4     18 1D 02 F6 | 	mov	local03, local13
075e8     1C 1C 06 F1 | 	add	local03, #28
075ec     0E 19 02 FB | 	rdlong	local01, local03
075f0     2B 30 06 F1 | 	add	local13, #43
075f4     18 33 C2 FA | 	rdbyte	local14, local13
075f8     18 32 06 F5 | 	and	local14, #24
075fc     0C 18 06 F1 | 	add	local01, #12
07600     0C 33 42 FC | 	wrbyte	local14, local01
07604     08 50 05 F1 | 	add	fp, #8
07608     A8 1C 02 FB | 	rdlong	local03, fp
0760c     0C 50 85 F1 | 	sub	fp, #12
07610     03 1C 06 F1 | 	add	local03, #3
07614     0E 03 48 FC | 	wrbyte	#1, local03
07618                 | LR__0520
07618                 | LR__0521
07618                 | ' 			mem_set(dp->dir, 0,  32 );
07618                 | ' 			mem_cpy(dp->dir +  0 , dp->fn, 11);
07618                 | ' 
07618                 | ' 			dp->dir[ 12 ] = dp->fn[ 11 ] & ( 0x08  |  0x10 );
07618                 | ' 
07618                 | ' 			fs->wflag = 1;
07618                 | ' 		}
07618                 | ' 	}
07618                 | ' 
07618                 | ' 	return res;
07618     08 50 05 F1 | 	add	fp, #8
0761c     A8 F4 01 FB | 	rdlong	result1, fp
07620     08 50 85 F1 | 	sub	fp, #8
07624                 | LR__0522
07624     A8 F0 03 F6 | 	mov	ptra, fp
07628     B3 00 A0 FD | 	call	#popregs_
0762c                 | _ff_cc_dir_register_0306_ret
0762c     2D 00 64 FD | 	ret
07630                 | 
07630                 | _ff_cc_dir_remove_0310
07630     0A 4C 05 F6 | 	mov	COUNT_, #10
07634     A9 00 A0 FD | 	call	#pushregs_
07638     07 19 02 F6 | 	mov	local01, arg01
0763c     0C 1B 02 FB | 	rdlong	local02, local01
07640     10 18 06 F1 | 	add	local01, #16
07644     0C 1D 02 FB | 	rdlong	local03, local01
07648     1C 18 06 F1 | 	add	local01, #28
0764c     0C 1F 02 FB | 	rdlong	local04, local01
07650     2C 18 86 F1 | 	sub	local01, #44
07654     FF FF 7F FF 
07658     FF 1F 0E F2 | 	cmp	local04, ##-1 wz
0765c     00 20 06 A6 |  if_e	mov	local05, #0
07660     24 00 90 AD |  if_e	jmp	#LR__0523
07664     0C 0F 02 F6 | 	mov	arg01, local01
07668     2C 18 06 F1 | 	add	local01, #44
0766c     0C 23 02 FB | 	rdlong	local06, local01
07670     2C 18 86 F1 | 	sub	local01, #44
07674     11 25 02 F6 | 	mov	local07, local06
07678     12 11 02 F6 | 	mov	arg02, local07
0767c     40 EC BF FD | 	call	#_ff_cc_dir_sdi_0249
07680     FA 26 02 F6 | 	mov	local08, result1
07684     13 21 02 F6 | 	mov	local05, local08
07688                 | LR__0523
07688     10 29 0A F6 | 	mov	local09, local05 wz
0768c     70 00 90 5D |  if_ne	jmp	#LR__0526
07690                 | ' 		do {
07690                 | LR__0524
07690     18 18 06 F1 | 	add	local01, #24
07694     0C 11 02 FB | 	rdlong	arg02, local01
07698     18 18 86 F1 | 	sub	local01, #24
0769c     0D 0F 02 F6 | 	mov	arg01, local02
076a0     1C E1 BF FD | 	call	#_ff_cc_move_window_0218
076a4     FA 28 0A F6 | 	mov	local09, result1 wz
076a8     4C 00 90 5D |  if_ne	jmp	#LR__0525
076ac     1C 18 06 F1 | 	add	local01, #28
076b0     0C 21 02 FB | 	rdlong	local05, local01
076b4     E5 2A 06 F6 | 	mov	local10, #229
076b8     10 CB 49 FC | 	wrbyte	#229, local05
076bc     03 1A 06 F1 | 	add	local02, #3
076c0     0D 03 48 FC | 	wrbyte	#1, local02
076c4     03 1A 86 F1 | 	sub	local02, #3
076c8     0C 18 86 F1 | 	sub	local01, #12
076cc     0C 21 02 FB | 	rdlong	local05, local01
076d0     10 18 86 F1 | 	sub	local01, #16
076d4     0E 21 12 F2 | 	cmp	local05, local03 wc
076d8     1C 00 90 3D |  if_ae	jmp	#LR__0525
076dc     00 1E 06 F6 | 	mov	local04, #0
076e0     0C 0F 02 F6 | 	mov	arg01, local01
076e4     00 10 06 F6 | 	mov	arg02, #0
076e8     60 ED BF FD | 	call	#_ff_cc_dir_next_0253
076ec     FA 20 02 F6 | 	mov	local05, result1
076f0     10 29 0A F6 | 	mov	local09, local05 wz
076f4     98 FF 9F AD |  if_e	jmp	#LR__0524
076f8                 | LR__0525
076f8     04 28 0E F2 | 	cmp	local09, #4 wz
076fc     02 28 06 A6 |  if_e	mov	local09, #2
07700                 | LR__0526
07700                 | ' 	}
07700                 | ' #line 2671 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
07700                 | ' 	return res;
07700     14 F5 01 F6 | 	mov	result1, local09
07704     A8 F0 03 F6 | 	mov	ptra, fp
07708     B3 00 A0 FD | 	call	#popregs_
0770c                 | _ff_cc_dir_remove_0310_ret
0770c     2D 00 64 FD | 	ret
07710                 | 
07710                 | _ff_cc_get_fileinfo_0317
07710     12 4C 05 F6 | 	mov	COUNT_, #18
07714     A9 00 A0 FD | 	call	#pushregs_
07718     07 19 02 F6 | 	mov	local01, arg01
0771c     08 1B 02 F6 | 	mov	local02, arg02
07720     0C 1D 02 FB | 	rdlong	local03, local01
07724     1C 1A 06 F1 | 	add	local02, #28
07728     0D 01 48 FC | 	wrbyte	#0, local02
0772c     1C 1A 86 F1 | 	sub	local02, #28
07730     18 18 06 F1 | 	add	local01, #24
07734     0C 1F 0A FB | 	rdlong	local04, local01 wz
07738     18 18 86 F1 | 	sub	local01, #24
0773c     A0 03 90 AD |  if_e	jmp	#LR__0540
07740     2C 18 06 F1 | 	add	local01, #44
07744     0C 21 02 FB | 	rdlong	local05, local01
07748     2C 18 86 F1 | 	sub	local01, #44
0774c     10 1F 02 F6 | 	mov	local04, local05
07750     FF FF 7F FF 
07754     FF 1F 0E F2 | 	cmp	local04, ##-1 wz
07758     20 01 90 AD |  if_e	jmp	#LR__0530
0775c     00 22 06 F6 | 	mov	local06, #0
07760     00 1E 06 F6 | 	mov	local04, #0
07764     0F 1E 46 F7 | 	zerox	local04, #15
07768     0F 25 02 F6 | 	mov	local07, local04
0776c     12 27 02 F6 | 	mov	local08, local07
07770                 | ' 			si = di = hs = 0;
07770                 | ' 			while (fs->lfnbuf[si] != 0) {
07770                 | LR__0527
07770     0C 1C 06 F1 | 	add	local03, #12
07774     0E 29 02 FB | 	rdlong	local09, local03
07778     0C 1C 86 F1 | 	sub	local03, #12
0777c     13 2B 02 F6 | 	mov	local10, local08
07780     15 2D 02 F6 | 	mov	local11, local10
07784     01 2C 66 F0 | 	shl	local11, #1
07788     14 2D 02 F1 | 	add	local11, local09
0778c     16 1F EA FA | 	rdword	local04, local11 wz
07790     C0 00 90 AD |  if_e	jmp	#LR__0529
07794     0C 1C 06 F1 | 	add	local03, #12
07798     0E 2F 02 FB | 	rdlong	local12, local03
0779c     0C 1C 86 F1 | 	sub	local03, #12
077a0     13 29 02 F6 | 	mov	local09, local08
077a4     01 28 66 F0 | 	shl	local09, #1
077a8     17 29 02 F1 | 	add	local09, local12
077ac     14 31 E2 FA | 	rdword	local13, local09
077b0     11 1F 02 F6 | 	mov	local04, local06
077b4     0F 1E 4E F7 | 	zerox	local04, #15 wz
077b8     01 26 06 F1 | 	add	local08, #1
077bc     2C 00 90 5D |  if_ne	jmp	#LR__0528
077c0     18 21 02 F6 | 	mov	local05, local13
077c4     0F 20 46 F7 | 	zerox	local05, #15
077c8     6C 00 00 FF 
077cc     00 20 16 F2 | 	cmp	local05, ##55296 wc
077d0     18 00 90 CD |  if_b	jmp	#LR__0528
077d4     18 33 02 F6 | 	mov	local14, local13
077d8     0F 32 46 F7 | 	zerox	local14, #15
077dc     70 00 00 FF 
077e0     00 32 16 F2 | 	cmp	local14, ##57344 wc
077e4     18 23 02 C6 |  if_b	mov	local06, local13
077e8                 | ' 					hs = wc; continue;
077e8     84 FF 9F CD |  if_b	jmp	#LR__0527
077ec                 | LR__0528
077ec     11 0F 02 F6 | 	mov	arg01, local06
077f0     0F 0E 46 F7 | 	zerox	arg01, #15
077f4     10 0E 66 F0 | 	shl	arg01, #16
077f8     0F 30 46 F7 | 	zerox	local13, #15
077fc     18 0F 42 F5 | 	or	arg01, local13
07800     12 29 02 F6 | 	mov	local09, local07
07804     1C 1A 06 F1 | 	add	local02, #28
07808     0D 29 02 F1 | 	add	local09, local02
0780c     14 11 02 F6 | 	mov	arg02, local09
07810     FF 2C 06 F6 | 	mov	local11, #255
07814     12 2D 82 F1 | 	sub	local11, local07
07818     16 2B 02 F6 | 	mov	local10, local11
0781c     15 13 02 F6 | 	mov	arg03, local10
07820     1C 1A 86 F1 | 	sub	local02, #28
07824     24 DE BF FD | 	call	#_ff_cc_put_utf_0214
07828     FA 30 02 F6 | 	mov	local13, result1
0782c     07 30 46 F7 | 	zerox	local13, #7
07830     18 1F 02 F6 | 	mov	local04, local13
07834     0F 1E 4E F7 | 	zerox	local04, #15 wz
07838     00 24 06 A6 |  if_e	mov	local07, #0
0783c     14 00 90 AD |  if_e	jmp	#LR__0529
07840     18 21 02 F6 | 	mov	local05, local13
07844     0F 20 46 F7 | 	zerox	local05, #15
07848     10 25 02 F1 | 	add	local07, local05
0784c     00 22 06 F6 | 	mov	local06, #0
07850     1C FF 9F FD | 	jmp	#LR__0527
07854                 | LR__0529
07854     11 1F 02 F6 | 	mov	local04, local06
07858     0F 1E 4E F7 | 	zerox	local04, #15 wz
0785c     00 24 06 56 |  if_ne	mov	local07, #0
07860     12 1F 02 F6 | 	mov	local04, local07
07864     1C 1A 06 F1 | 	add	local02, #28
07868     0D 21 02 F6 | 	mov	local05, local02
0786c     0D 1F 02 F1 | 	add	local04, local02
07870     00 32 06 F6 | 	mov	local14, #0
07874     0F 01 48 FC | 	wrbyte	#0, local04
07878     1C 1A 86 F1 | 	sub	local02, #28
0787c                 | LR__0530
0787c     00 24 06 F6 | 	mov	local07, #0
07880     00 26 06 F6 | 	mov	local08, #0
07884                 | ' 			fno->fname[di] = 0;
07884                 | ' 		}
07884                 | ' 	}
07884                 | ' 
07884                 | ' 	si = di = 0;
07884                 | ' 	while (si < 11) {
07884                 | LR__0531
07884     0B 26 16 F2 | 	cmp	local08, #11 wc
07888     9C 00 90 3D |  if_ae	jmp	#LR__0533
0788c     1C 18 06 F1 | 	add	local01, #28
07890     0C 2F 02 FB | 	rdlong	local12, local01
07894     1C 18 86 F1 | 	sub	local01, #28
07898     13 29 02 F6 | 	mov	local09, local08
0789c     17 29 02 F1 | 	add	local09, local12
078a0     14 31 C2 FA | 	rdbyte	local13, local09
078a4     18 1F 02 F6 | 	mov	local04, local13
078a8     0F 1E 46 F7 | 	zerox	local04, #15
078ac     20 1E 0E F2 | 	cmp	local04, #32 wz
078b0     01 26 06 F1 | 	add	local08, #1
078b4     CC FF 9F AD |  if_e	jmp	#LR__0531
078b8     18 1F 02 F6 | 	mov	local04, local13
078bc     0F 1E 46 F7 | 	zerox	local04, #15
078c0     05 1E 0E F2 | 	cmp	local04, #5 wz
078c4     E5 30 06 A6 |  if_e	mov	local13, #229
078c8     09 26 0E F2 | 	cmp	local08, #9 wz
078cc     34 00 90 5D |  if_ne	jmp	#LR__0532
078d0     0C 24 16 F2 | 	cmp	local07, #12 wc
078d4     2C 00 90 3D |  if_ae	jmp	#LR__0532
078d8     12 1F 02 F6 | 	mov	local04, local07
078dc     12 21 02 F6 | 	mov	local05, local07
078e0     01 20 06 F1 | 	add	local05, #1
078e4     10 25 02 F6 | 	mov	local07, local05
078e8     0F 33 02 F6 | 	mov	local14, local04
078ec     0C 1A 06 F1 | 	add	local02, #12
078f0     0D 2B 02 F6 | 	mov	local10, local02
078f4     0D 33 02 F1 | 	add	local14, local02
078f8     2E 2C 06 F6 | 	mov	local11, #46
078fc     19 5D 48 FC | 	wrbyte	#46, local14
07900     0C 1A 86 F1 | 	sub	local02, #12
07904                 | LR__0532
07904     12 33 02 F6 | 	mov	local14, local07
07908     0C 1A 06 F1 | 	add	local02, #12
0790c     0D 33 02 F1 | 	add	local14, local02
07910     18 2D 02 F6 | 	mov	local11, local13
07914     0F 2C 46 F7 | 	zerox	local11, #15
07918     19 2D 42 FC | 	wrbyte	local11, local14
0791c     01 24 06 F1 | 	add	local07, #1
07920     0C 1A 86 F1 | 	sub	local02, #12
07924     5C FF 9F FD | 	jmp	#LR__0531
07928                 | LR__0533
07928     12 1F 02 F6 | 	mov	local04, local07
0792c     0C 1A 06 F1 | 	add	local02, #12
07930     0D 1F 02 F1 | 	add	local04, local02
07934     0F 01 48 FC | 	wrbyte	#0, local04
07938     10 1A 06 F1 | 	add	local02, #16
0793c     0D 1F C2 FA | 	rdbyte	local04, local02
07940     1C 1A 86 F1 | 	sub	local02, #28
07944     07 1E 4E F7 | 	zerox	local04, #7 wz
07948     2C 01 90 5D |  if_ne	jmp	#LR__0539
0794c     00 24 0E F2 | 	cmp	local07, #0 wz
07950     1C 00 90 5D |  if_ne	jmp	#LR__0534
07954     12 33 02 F6 | 	mov	local14, local07
07958     1C 1A 06 F1 | 	add	local02, #28
0795c     0D 33 02 F1 | 	add	local14, local02
07960     19 7F 48 FC | 	wrbyte	#63, local14
07964     01 24 06 F1 | 	add	local07, #1
07968     1C 1A 86 F1 | 	sub	local02, #28
0796c     D8 00 90 FD | 	jmp	#LR__0538
07970                 | LR__0534
07970                 | ' 			for (si = di = 0, lcf =  0x08 ; fno->altname[si]; si++, di++) {
07970     00 24 06 F6 | 	mov	local07, #0
07974     00 26 06 F6 | 	mov	local08, #0
07978     08 34 06 F6 | 	mov	local15, #8
0797c                 | LR__0535
0797c     13 1F 02 F6 | 	mov	local04, local08
07980     0C 1A 06 F1 | 	add	local02, #12
07984     0D 21 02 F6 | 	mov	local05, local02
07988     0D 1F 02 F1 | 	add	local04, local02
0798c     0F 33 CA FA | 	rdbyte	local14, local04 wz
07990     0C 1A 86 F1 | 	sub	local02, #12
07994     B0 00 90 AD |  if_e	jmp	#LR__0537
07998     13 2D 02 F6 | 	mov	local11, local08
0799c     0C 1A 06 F1 | 	add	local02, #12
079a0     0D 2D 02 F1 | 	add	local11, local02
079a4     16 31 C2 FA | 	rdbyte	local13, local11
079a8     18 2B 02 F6 | 	mov	local10, local13
079ac     0F 2A 46 F7 | 	zerox	local10, #15
079b0     2E 2A 0E F2 | 	cmp	local10, #46 wz
079b4     0C 1A 86 F1 | 	sub	local02, #12
079b8     10 34 06 A6 |  if_e	mov	local15, #16
079bc     18 2B 02 F6 | 	mov	local10, local13
079c0     0F 2A 46 F7 | 	zerox	local10, #15
079c4     41 2A 16 F2 | 	cmp	local10, #65 wc
079c8     54 00 90 CD |  if_b	jmp	#LR__0536
079cc     18 2D 02 F6 | 	mov	local11, local13
079d0     0F 2C 46 F7 | 	zerox	local11, #15
079d4     5B 2C 16 F2 | 	cmp	local11, #91 wc
079d8     44 00 90 3D |  if_ae	jmp	#LR__0536
079dc     1C 18 06 F1 | 	add	local01, #28
079e0     0C 37 02 FB | 	rdlong	local16, local01
079e4     1C 18 86 F1 | 	sub	local01, #28
079e8     1B 2F 02 F6 | 	mov	local12, local16
079ec     0C 2E 06 F1 | 	add	local12, #12
079f0     17 39 C2 FA | 	rdbyte	local17, local12
079f4     0C 2E 86 F1 | 	sub	local12, #12
079f8     1C 29 02 F6 | 	mov	local09, local17
079fc     07 28 46 F7 | 	zerox	local09, #7
07a00     1A 3B 02 F6 | 	mov	local18, local15
07a04     07 3A 46 F7 | 	zerox	local18, #7
07a08     1D 29 0A F5 | 	and	local09, local18 wz
07a0c     10 00 90 AD |  if_e	jmp	#LR__0536
07a10     18 2B 02 F6 | 	mov	local10, local13
07a14     0F 2A 46 F7 | 	zerox	local10, #15
07a18     20 2A 06 F1 | 	add	local10, #32
07a1c     15 31 02 F6 | 	mov	local13, local10
07a20                 | LR__0536
07a20     12 2B 02 F6 | 	mov	local10, local07
07a24     1C 1A 06 F1 | 	add	local02, #28
07a28     0D 2B 02 F1 | 	add	local10, local02
07a2c     18 29 02 F6 | 	mov	local09, local13
07a30     0F 28 46 F7 | 	zerox	local09, #15
07a34     15 29 42 FC | 	wrbyte	local09, local10
07a38     01 26 06 F1 | 	add	local08, #1
07a3c     01 24 06 F1 | 	add	local07, #1
07a40     1C 1A 86 F1 | 	sub	local02, #28
07a44     34 FF 9F FD | 	jmp	#LR__0535
07a48                 | LR__0537
07a48                 | LR__0538
07a48     1C 1A 06 F1 | 	add	local02, #28
07a4c     0D 25 02 F1 | 	add	local07, local02
07a50     12 01 48 FC | 	wrbyte	#0, local07
07a54     1C 18 06 F1 | 	add	local01, #28
07a58     0C 1F 02 FB | 	rdlong	local04, local01
07a5c     1C 18 86 F1 | 	sub	local01, #28
07a60     0C 1E 06 F1 | 	add	local04, #12
07a64     0F 33 CA FA | 	rdbyte	local14, local04 wz
07a68     1C 1A 86 F1 | 	sub	local02, #28
07a6c     0C 1A 06 A1 |  if_e	add	local02, #12
07a70     0D 01 48 AC |  if_e	wrbyte	#0, local02
07a74     0C 1A 86 A1 |  if_e	sub	local02, #12
07a78                 | LR__0539
07a78     1C 18 06 F1 | 	add	local01, #28
07a7c     0C 1F 02 FB | 	rdlong	local04, local01
07a80     0B 1E 06 F1 | 	add	local04, #11
07a84     0F 33 C2 FA | 	rdbyte	local14, local04
07a88     08 1A 06 F1 | 	add	local02, #8
07a8c     0D 33 42 FC | 	wrbyte	local14, local02
07a90     08 1A 86 F1 | 	sub	local02, #8
07a94     0C 0F 02 FB | 	rdlong	arg01, local01
07a98     1C 18 86 F1 | 	sub	local01, #28
07a9c     1C 0E 06 F1 | 	add	arg01, #28
07aa0     DC D9 BF FD | 	call	#_ff_cc_ld_dword_0193
07aa4     0D F5 61 FC | 	wrlong	result1, local02
07aa8     1C 18 06 F1 | 	add	local01, #28
07aac     0C 0F 02 FB | 	rdlong	arg01, local01
07ab0     1C 18 86 F1 | 	sub	local01, #28
07ab4     16 0E 06 F1 | 	add	arg01, #22
07ab8     A0 D9 BF FD | 	call	#_ff_cc_ld_word_0191
07abc     06 1A 06 F1 | 	add	local02, #6
07ac0     0D F5 51 FC | 	wrword	result1, local02
07ac4     06 1A 86 F1 | 	sub	local02, #6
07ac8     1C 18 06 F1 | 	add	local01, #28
07acc     0C 0F 02 FB | 	rdlong	arg01, local01
07ad0     18 0E 06 F1 | 	add	arg01, #24
07ad4     84 D9 BF FD | 	call	#_ff_cc_ld_word_0191
07ad8     04 1A 06 F1 | 	add	local02, #4
07adc     0D F5 51 FC | 	wrword	result1, local02
07ae0                 | LR__0540
07ae0     A8 F0 03 F6 | 	mov	ptra, fp
07ae4     B3 00 A0 FD | 	call	#popregs_
07ae8                 | _ff_cc_get_fileinfo_0317_ret
07ae8     2D 00 64 FD | 	ret
07aec                 | 
07aec                 | _ff_cc_create_name_0328
07aec     0C 4C 05 F6 | 	mov	COUNT_, #12
07af0     A9 00 A0 FD | 	call	#pushregs_
07af4     34 F0 07 F1 | 	add	ptra, #52
07af8     04 50 05 F1 | 	add	fp, #4
07afc     A8 0E 62 FC | 	wrlong	arg01, fp
07b00     04 50 05 F1 | 	add	fp, #4
07b04     A8 10 62 FC | 	wrlong	arg02, fp
07b08     08 19 02 FB | 	rdlong	local01, arg02
07b0c     28 50 05 F1 | 	add	fp, #40
07b10     A8 18 62 FC | 	wrlong	local01, fp
07b14     2C 50 85 F1 | 	sub	fp, #44
07b18     A8 1A 02 FB | 	rdlong	local02, fp
07b1c     0D 19 02 FB | 	rdlong	local01, local02
07b20     0C 18 06 F1 | 	add	local01, #12
07b24     0C 1D 02 FB | 	rdlong	local03, local01
07b28     14 50 05 F1 | 	add	fp, #20
07b2c     A8 1C 62 FC | 	wrlong	local03, fp
07b30     14 50 05 F1 | 	add	fp, #20
07b34     A8 00 68 FC | 	wrlong	#0, fp
07b38     2C 50 85 F1 | 	sub	fp, #44
07b3c                 | ' 
07b3c                 | ' 
07b3c                 | ' 
07b3c                 | ' 	p = *path; lfn = dp->obj.fs->lfnbuf; di = 0;
07b3c                 | ' 	for (;;) {
07b3c                 | LR__0541
07b3c     30 50 05 F1 | 	add	fp, #48
07b40     A8 0E 02 F6 | 	mov	arg01, fp
07b44     30 50 85 F1 | 	sub	fp, #48
07b48     50 DA BF FD | 	call	#_ff_cc_tchar2uni_0212
07b4c     1C 50 05 F1 | 	add	fp, #28
07b50     A8 F4 61 FC | 	wrlong	result1, fp
07b54     1C 50 85 F1 | 	sub	fp, #28
07b58     FF FF 7F FF 
07b5c     FF F5 0D F2 | 	cmp	result1, ##-1 wz
07b60     06 F4 05 A6 |  if_e	mov	result1, #6
07b64     54 09 90 AD |  if_e	jmp	#LR__0591
07b68     1C 50 05 F1 | 	add	fp, #28
07b6c     A8 1A 02 FB | 	rdlong	local02, fp
07b70     1C 50 85 F1 | 	sub	fp, #28
07b74     80 00 00 FF 
07b78     00 1A 16 F2 | 	cmp	local02, ##65536 wc
07b7c     3C 00 90 CD |  if_b	jmp	#LR__0542
07b80     18 50 05 F1 | 	add	fp, #24
07b84     A8 1E 02 FB | 	rdlong	local04, fp
07b88     14 50 05 F1 | 	add	fp, #20
07b8c     A8 20 02 FB | 	rdlong	local05, fp
07b90     10 23 02 F6 | 	mov	local06, local05
07b94     01 22 06 F1 | 	add	local06, #1
07b98     A8 22 62 FC | 	wrlong	local06, fp
07b9c     01 20 66 F0 | 	shl	local05, #1
07ba0     0F 21 02 F1 | 	add	local05, local04
07ba4     10 50 85 F1 | 	sub	fp, #16
07ba8     A8 24 02 FB | 	rdlong	local07, fp
07bac     1C 50 85 F1 | 	sub	fp, #28
07bb0     12 27 02 F6 | 	mov	local08, local07
07bb4     10 26 46 F0 | 	shr	local08, #16
07bb8     10 27 52 FC | 	wrword	local08, local05
07bbc                 | LR__0542
07bbc     1C 50 05 F1 | 	add	fp, #28
07bc0     A8 1A 02 FB | 	rdlong	local02, fp
07bc4     08 50 85 F1 | 	sub	fp, #8
07bc8     A8 1A 52 FC | 	wrword	local02, fp
07bcc     A8 1A E2 FA | 	rdword	local02, fp
07bd0     14 50 85 F1 | 	sub	fp, #20
07bd4     0F 1A 46 F7 | 	zerox	local02, #15
07bd8     20 1A 16 F2 | 	cmp	local02, #32 wc
07bdc     CC 00 90 CD |  if_b	jmp	#LR__0544
07be0     14 50 05 F1 | 	add	fp, #20
07be4     A8 1C E2 FA | 	rdword	local03, fp
07be8     14 50 85 F1 | 	sub	fp, #20
07bec     0E 19 02 F6 | 	mov	local01, local03
07bf0     0F 18 46 F7 | 	zerox	local01, #15
07bf4     2F 18 0E F2 | 	cmp	local01, #47 wz
07bf8     B0 00 90 AD |  if_e	jmp	#LR__0544
07bfc     14 50 05 F1 | 	add	fp, #20
07c00     A8 22 E2 FA | 	rdword	local06, fp
07c04     14 50 85 F1 | 	sub	fp, #20
07c08     0F 22 46 F7 | 	zerox	local06, #15
07c0c     5C 22 0E F2 | 	cmp	local06, #92 wz
07c10     98 00 90 AD |  if_e	jmp	#LR__0544
07c14     14 50 05 F1 | 	add	fp, #20
07c18     A8 1A E2 FA | 	rdword	local02, fp
07c1c     14 50 85 F1 | 	sub	fp, #20
07c20     0F 1A 46 F7 | 	zerox	local02, #15
07c24     80 1A 16 F2 | 	cmp	local02, #128 wc
07c28     28 00 90 3D |  if_ae	jmp	#LR__0543
07c2c     68 00 00 FF 
07c30     72 0E 06 F6 | 	mov	arg01, ##@LR__0893
07c34     14 50 05 F1 | 	add	fp, #20
07c38     A8 10 E2 FA | 	rdword	arg02, fp
07c3c     14 50 85 F1 | 	sub	fp, #20
07c40     0F 10 46 F7 | 	zerox	arg02, #15
07c44     2C D9 BF FD | 	call	#_ff_cc_chk_chr_0205
07c48     00 F4 0D F2 | 	cmp	result1, #0 wz
07c4c     06 F4 05 56 |  if_ne	mov	result1, #6
07c50     68 08 90 5D |  if_ne	jmp	#LR__0591
07c54                 | LR__0543
07c54     2C 50 05 F1 | 	add	fp, #44
07c58     A8 1A 02 FB | 	rdlong	local02, fp
07c5c     2C 50 85 F1 | 	sub	fp, #44
07c60     FF 1A 16 F2 | 	cmp	local02, #255 wc
07c64     06 F4 05 36 |  if_ae	mov	result1, #6
07c68     50 08 90 3D |  if_ae	jmp	#LR__0591
07c6c     18 50 05 F1 | 	add	fp, #24
07c70     A8 1E 02 FB | 	rdlong	local04, fp
07c74     14 50 05 F1 | 	add	fp, #20
07c78     A8 1C 02 FB | 	rdlong	local03, fp
07c7c     0E 29 02 F6 | 	mov	local09, local03
07c80     0E 23 02 F6 | 	mov	local06, local03
07c84     01 22 06 F1 | 	add	local06, #1
07c88     A8 22 62 FC | 	wrlong	local06, fp
07c8c     14 21 02 F6 | 	mov	local05, local09
07c90     01 20 66 F0 | 	shl	local05, #1
07c94     0F 21 02 F1 | 	add	local05, local04
07c98     18 50 85 F1 | 	sub	fp, #24
07c9c     A8 26 E2 FA | 	rdword	local08, fp
07ca0     14 50 85 F1 | 	sub	fp, #20
07ca4     10 27 52 FC | 	wrword	local08, local05
07ca8     90 FE 9F FD | 	jmp	#LR__0541
07cac                 | LR__0544
07cac     14 50 05 F1 | 	add	fp, #20
07cb0     A8 1A E2 FA | 	rdword	local02, fp
07cb4     14 50 85 F1 | 	sub	fp, #20
07cb8     0F 1A 46 F7 | 	zerox	local02, #15
07cbc     20 1A 16 F2 | 	cmp	local02, #32 wc
07cc0     10 00 90 3D |  if_ae	jmp	#LR__0545
07cc4     10 50 05 F1 | 	add	fp, #16
07cc8     A8 08 48 FC | 	wrbyte	#4, fp
07ccc     10 50 85 F1 | 	sub	fp, #16
07cd0     54 00 90 FD | 	jmp	#LR__0549
07cd4                 | LR__0545
07cd4     10 50 05 F1 | 	add	fp, #16
07cd8     A8 00 48 FC | 	wrbyte	#0, fp
07cdc     10 50 85 F1 | 	sub	fp, #16
07ce0                 | ' 		cf = 0;
07ce0                 | ' 		while (*p == '/' || *p == '\\') p++;
07ce0                 | LR__0546
07ce0     30 50 05 F1 | 	add	fp, #48
07ce4     A8 2A 02 FB | 	rdlong	local10, fp
07ce8     30 50 85 F1 | 	sub	fp, #48
07cec     15 1B C2 FA | 	rdbyte	local02, local10
07cf0     2F 1A 0E F2 | 	cmp	local02, #47 wz
07cf4     18 00 90 AD |  if_e	jmp	#LR__0547
07cf8     30 50 05 F1 | 	add	fp, #48
07cfc     A8 22 02 FB | 	rdlong	local06, fp
07d00     30 50 85 F1 | 	sub	fp, #48
07d04     11 1D C2 FA | 	rdbyte	local03, local06
07d08     5C 1C 0E F2 | 	cmp	local03, #92 wz
07d0c     18 00 90 5D |  if_ne	jmp	#LR__0548
07d10                 | LR__0547
07d10     30 50 05 F1 | 	add	fp, #48
07d14     A8 18 02 FB | 	rdlong	local01, fp
07d18     01 18 06 F1 | 	add	local01, #1
07d1c     A8 18 62 FC | 	wrlong	local01, fp
07d20     30 50 85 F1 | 	sub	fp, #48
07d24     B8 FF 9F FD | 	jmp	#LR__0546
07d28                 | LR__0548
07d28                 | LR__0549
07d28     08 50 05 F1 | 	add	fp, #8
07d2c     A8 1A 02 FB | 	rdlong	local02, fp
07d30     28 50 05 F1 | 	add	fp, #40
07d34     A8 18 02 FB | 	rdlong	local01, fp
07d38     30 50 85 F1 | 	sub	fp, #48
07d3c     0D 19 62 FC | 	wrlong	local01, local02
07d40     38 83 9F FE | 	loc	pa,	#(@LR__0552-@LR__0550)
07d44     8C 00 A0 FD | 	call	#FCACHE_LOAD_
07d48                 | ' 	}
07d48                 | ' 	*path = p;
07d48                 | ' #line 2911 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
07d48                 | ' 	while (di) {
07d48                 | LR__0550
07d48     2C 50 05 F1 | 	add	fp, #44
07d4c     A8 1A 0A FB | 	rdlong	local02, fp wz
07d50     2C 50 85 F1 | 	sub	fp, #44
07d54     6C 00 90 AD |  if_e	jmp	#LR__0553
07d58     18 50 05 F1 | 	add	fp, #24
07d5c     A8 28 02 FB | 	rdlong	local09, fp
07d60     14 50 05 F1 | 	add	fp, #20
07d64     A8 2C 02 FB | 	rdlong	local11, fp
07d68     01 2C 86 F1 | 	sub	local11, #1
07d6c     01 2C 66 F0 | 	shl	local11, #1
07d70     14 2D 02 F1 | 	add	local11, local09
07d74     16 21 E2 FA | 	rdword	local05, local11
07d78     18 50 85 F1 | 	sub	fp, #24
07d7c     A8 20 52 FC | 	wrword	local05, fp
07d80     A8 1A E2 FA | 	rdword	local02, fp
07d84     14 50 85 F1 | 	sub	fp, #20
07d88     0F 1A 46 F7 | 	zerox	local02, #15
07d8c     20 1A 0E F2 | 	cmp	local02, #32 wz
07d90     18 00 90 AD |  if_e	jmp	#LR__0551
07d94     14 50 05 F1 | 	add	fp, #20
07d98     A8 18 E2 FA | 	rdword	local01, fp
07d9c     14 50 85 F1 | 	sub	fp, #20
07da0     0F 18 46 F7 | 	zerox	local01, #15
07da4     2E 18 0E F2 | 	cmp	local01, #46 wz
07da8     18 00 90 5D |  if_ne	jmp	#LR__0553
07dac                 | LR__0551
07dac     2C 50 05 F1 | 	add	fp, #44
07db0     A8 18 02 FB | 	rdlong	local01, fp
07db4     01 18 86 F1 | 	sub	local01, #1
07db8     A8 18 62 FC | 	wrlong	local01, fp
07dbc     2C 50 85 F1 | 	sub	fp, #44
07dc0     84 FF 9F FD | 	jmp	#LR__0550
07dc4                 | LR__0552
07dc4                 | LR__0553
07dc4     18 50 05 F1 | 	add	fp, #24
07dc8     A8 2C 02 FB | 	rdlong	local11, fp
07dcc     14 50 05 F1 | 	add	fp, #20
07dd0     A8 22 02 FB | 	rdlong	local06, fp
07dd4     01 22 66 F0 | 	shl	local06, #1
07dd8     16 23 02 F1 | 	add	local06, local11
07ddc     11 01 58 FC | 	wrword	#0, local06
07de0     A8 1A 0A FB | 	rdlong	local02, fp wz
07de4     2C 50 85 F1 | 	sub	fp, #44
07de8     06 F4 05 A6 |  if_e	mov	result1, #6
07dec     CC 06 90 AD |  if_e	jmp	#LR__0591
07df0                 | ' 
07df0                 | ' 
07df0                 | ' 	for (si = 0; lfn[si] == ' '; si++) ;
07df0     28 50 05 F1 | 	add	fp, #40
07df4     A8 00 68 FC | 	wrlong	#0, fp
07df8     28 50 85 F1 | 	sub	fp, #40
07dfc     48 82 9F FE | 	loc	pa,	#(@LR__0555-@LR__0554)
07e00     8C 00 A0 FD | 	call	#FCACHE_LOAD_
07e04                 | LR__0554
07e04     18 50 05 F1 | 	add	fp, #24
07e08     A8 20 02 FB | 	rdlong	local05, fp
07e0c     10 50 05 F1 | 	add	fp, #16
07e10     A8 28 02 FB | 	rdlong	local09, fp
07e14     28 50 85 F1 | 	sub	fp, #40
07e18     01 28 66 F0 | 	shl	local09, #1
07e1c     10 29 02 F1 | 	add	local09, local05
07e20     14 2B E2 FA | 	rdword	local10, local09
07e24     20 2A 0E F2 | 	cmp	local10, #32 wz
07e28     20 00 90 5D |  if_ne	jmp	#LR__0556
07e2c     28 50 05 F1 | 	add	fp, #40
07e30     A8 26 02 FB | 	rdlong	local08, fp
07e34     13 2F 02 F6 | 	mov	local12, local08
07e38     17 25 02 F6 | 	mov	local07, local12
07e3c     01 24 06 F1 | 	add	local07, #1
07e40     A8 24 62 FC | 	wrlong	local07, fp
07e44     28 50 85 F1 | 	sub	fp, #40
07e48     B8 FF 9F FD | 	jmp	#LR__0554
07e4c                 | LR__0555
07e4c                 | LR__0556
07e4c     28 50 05 F1 | 	add	fp, #40
07e50     A8 2A 02 FB | 	rdlong	local10, fp
07e54     28 50 85 F1 | 	sub	fp, #40
07e58     01 2A 16 F2 | 	cmp	local10, #1 wc
07e5c     38 00 90 3D |  if_ae	jmp	#LR__0557
07e60     18 50 05 F1 | 	add	fp, #24
07e64     A8 22 02 FB | 	rdlong	local06, fp
07e68     11 1D 02 F6 | 	mov	local03, local06
07e6c     10 50 05 F1 | 	add	fp, #16
07e70     A8 28 02 FB | 	rdlong	local09, fp
07e74     28 50 85 F1 | 	sub	fp, #40
07e78     14 2D 02 F6 | 	mov	local11, local09
07e7c     16 21 02 F6 | 	mov	local05, local11
07e80     01 20 66 F0 | 	shl	local05, #1
07e84     0E 1F 02 F6 | 	mov	local04, local03
07e88     0E 21 02 F1 | 	add	local05, local03
07e8c     10 19 E2 FA | 	rdword	local01, local05
07e90     2E 18 0E F2 | 	cmp	local01, #46 wz
07e94     14 00 90 5D |  if_ne	jmp	#LR__0558
07e98                 | LR__0557
07e98     10 50 05 F1 | 	add	fp, #16
07e9c     A8 1A C2 FA | 	rdbyte	local02, fp
07ea0     03 1A 46 F5 | 	or	local02, #3
07ea4     A8 1A 42 FC | 	wrbyte	local02, fp
07ea8     10 50 85 F1 | 	sub	fp, #16
07eac                 | LR__0558
07eac     A8 81 9F FE | 	loc	pa,	#(@LR__0560-@LR__0559)
07eb0     8C 00 A0 FD | 	call	#FCACHE_LOAD_
07eb4                 | ' 	while (di > 0 && lfn[di - 1] != '.') di--;
07eb4                 | LR__0559
07eb4     2C 50 05 F1 | 	add	fp, #44
07eb8     A8 1A 02 FB | 	rdlong	local02, fp
07ebc     2C 50 85 F1 | 	sub	fp, #44
07ec0     01 1A 16 F2 | 	cmp	local02, #1 wc
07ec4     44 00 90 CD |  if_b	jmp	#LR__0561
07ec8     18 50 05 F1 | 	add	fp, #24
07ecc     A8 26 02 FB | 	rdlong	local08, fp
07ed0     14 50 05 F1 | 	add	fp, #20
07ed4     A8 1E 02 FB | 	rdlong	local04, fp
07ed8     2C 50 85 F1 | 	sub	fp, #44
07edc     01 1E 86 F1 | 	sub	local04, #1
07ee0     01 1E 66 F0 | 	shl	local04, #1
07ee4     13 1F 02 F1 | 	add	local04, local08
07ee8     0F 19 E2 FA | 	rdword	local01, local04
07eec     2E 18 0E F2 | 	cmp	local01, #46 wz
07ef0     18 00 90 AD |  if_e	jmp	#LR__0561
07ef4     2C 50 05 F1 | 	add	fp, #44
07ef8     A8 18 02 FB | 	rdlong	local01, fp
07efc     01 18 86 F1 | 	sub	local01, #1
07f00     A8 18 62 FC | 	wrlong	local01, fp
07f04     2C 50 85 F1 | 	sub	fp, #44
07f08     A8 FF 9F FD | 	jmp	#LR__0559
07f0c                 | LR__0560
07f0c                 | LR__0561
07f0c     04 50 05 F1 | 	add	fp, #4
07f10     A8 0E 02 FB | 	rdlong	arg01, fp
07f14     04 50 85 F1 | 	sub	fp, #4
07f18     20 0E 06 F1 | 	add	arg01, #32
07f1c     20 10 06 F6 | 	mov	arg02, #32
07f20     0B 12 06 F6 | 	mov	arg03, #11
07f24                 | ' {
07f24                 | ' 	BYTE *d = (BYTE*)dst;
07f24                 | ' 
07f24                 | ' 	do {
07f24     E4 80 9F FE | 	loc	pa,	#(@LR__0564-@LR__0562)
07f28     8C 00 A0 FD | 	call	#FCACHE_LOAD_
07f2c                 | LR__0562
07f2c     0B 04 DC FC | 	rep	@LR__0565, #11
07f30                 | LR__0563
07f30     07 11 42 FC | 	wrbyte	arg02, arg01
07f34     01 0E 06 F1 | 	add	arg01, #1
07f38                 | LR__0564
07f38                 | LR__0565
07f38     0C 50 05 F1 | 	add	fp, #12
07f3c     A8 00 48 FC | 	wrbyte	#0, fp
07f40     A8 1A C2 FA | 	rdbyte	local02, fp
07f44     14 50 05 F1 | 	add	fp, #20
07f48     A8 1A 62 FC | 	wrlong	local02, fp
07f4c     04 50 05 F1 | 	add	fp, #4
07f50     A8 10 68 FC | 	wrlong	#8, fp
07f54     24 50 85 F1 | 	sub	fp, #36
07f58                 | ' 
07f58                 | ' 	mem_set(dp->fn, ' ', 11);
07f58                 | ' 	i = b = 0; ni = 8;
07f58                 | ' 	for (;;) {
07f58                 | LR__0566
07f58     18 50 05 F1 | 	add	fp, #24
07f5c     A8 1E 02 FB | 	rdlong	local04, fp
07f60     10 50 05 F1 | 	add	fp, #16
07f64     A8 2C 02 FB | 	rdlong	local11, fp
07f68     16 29 02 F6 | 	mov	local09, local11
07f6c     16 23 02 F6 | 	mov	local06, local11
07f70     01 22 06 F1 | 	add	local06, #1
07f74     A8 22 62 FC | 	wrlong	local06, fp
07f78     14 21 02 F6 | 	mov	local05, local09
07f7c     01 20 66 F0 | 	shl	local05, #1
07f80     0F 21 02 F1 | 	add	local05, local04
07f84     10 27 E2 FA | 	rdword	local08, local05
07f88     14 50 85 F1 | 	sub	fp, #20
07f8c     A8 26 52 FC | 	wrword	local08, fp
07f90     A8 1A E2 FA | 	rdword	local02, fp
07f94     14 50 85 F1 | 	sub	fp, #20
07f98     0F 1A 4E F7 | 	zerox	local02, #15 wz
07f9c     E8 03 90 AD |  if_e	jmp	#LR__0583
07fa0     14 50 05 F1 | 	add	fp, #20
07fa4     A8 1A E2 FA | 	rdword	local02, fp
07fa8     14 50 85 F1 | 	sub	fp, #20
07fac     0F 1A 46 F7 | 	zerox	local02, #15
07fb0     20 1A 0E F2 | 	cmp	local02, #32 wz
07fb4     40 00 90 AD |  if_e	jmp	#LR__0567
07fb8     14 50 05 F1 | 	add	fp, #20
07fbc     A8 1C E2 FA | 	rdword	local03, fp
07fc0     14 50 85 F1 | 	sub	fp, #20
07fc4     0E 19 02 F6 | 	mov	local01, local03
07fc8     0F 18 46 F7 | 	zerox	local01, #15
07fcc     2E 18 0E F2 | 	cmp	local01, #46 wz
07fd0     3C 00 90 5D |  if_ne	jmp	#LR__0568
07fd4     28 50 05 F1 | 	add	fp, #40
07fd8     A8 2C 02 FB | 	rdlong	local11, fp
07fdc     16 23 02 F6 | 	mov	local06, local11
07fe0     04 50 05 F1 | 	add	fp, #4
07fe4     A8 20 02 FB | 	rdlong	local05, fp
07fe8     2C 50 85 F1 | 	sub	fp, #44
07fec     10 29 02 F6 | 	mov	local09, local05
07ff0     14 23 0A F2 | 	cmp	local06, local09 wz
07ff4     18 00 90 AD |  if_e	jmp	#LR__0568
07ff8                 | LR__0567
07ff8     10 50 05 F1 | 	add	fp, #16
07ffc     A8 1A C2 FA | 	rdbyte	local02, fp
08000     03 1A 46 F5 | 	or	local02, #3
08004     A8 1A 42 FC | 	wrbyte	local02, fp
08008     10 50 85 F1 | 	sub	fp, #16
0800c                 | ' 			cf |=  0x01  |  0x02 ;
0800c                 | ' 			continue;
0800c     48 FF 9F FD | 	jmp	#LR__0566
08010                 | LR__0568
08010     20 50 05 F1 | 	add	fp, #32
08014     A8 2A 02 FB | 	rdlong	local10, fp
08018     15 1B 02 F6 | 	mov	local02, local10
0801c     04 50 05 F1 | 	add	fp, #4
08020     A8 1C 02 FB | 	rdlong	local03, fp
08024     24 50 85 F1 | 	sub	fp, #36
08028     0E 19 02 F6 | 	mov	local01, local03
0802c     0C 1B 12 F2 | 	cmp	local02, local01 wc
08030     24 00 90 3D |  if_ae	jmp	#LR__0569
08034     28 50 05 F1 | 	add	fp, #40
08038     A8 2C 02 FB | 	rdlong	local11, fp
0803c     16 23 02 F6 | 	mov	local06, local11
08040     04 50 05 F1 | 	add	fp, #4
08044     A8 20 02 FB | 	rdlong	local05, fp
08048     2C 50 85 F1 | 	sub	fp, #44
0804c     10 29 02 F6 | 	mov	local09, local05
08050     14 23 0A F2 | 	cmp	local06, local09 wz
08054     B0 00 90 5D |  if_ne	jmp	#LR__0572
08058                 | LR__0569
08058     24 50 05 F1 | 	add	fp, #36
0805c     A8 1A 02 FB | 	rdlong	local02, fp
08060     24 50 85 F1 | 	sub	fp, #36
08064     0B 1A 0E F2 | 	cmp	local02, #11 wz
08068     18 00 90 5D |  if_ne	jmp	#LR__0570
0806c     10 50 05 F1 | 	add	fp, #16
08070     A8 1A C2 FA | 	rdbyte	local02, fp
08074     03 1A 46 F5 | 	or	local02, #3
08078     A8 1A 42 FC | 	wrbyte	local02, fp
0807c     10 50 85 F1 | 	sub	fp, #16
08080                 | ' 				cf |=  0x01  |  0x02 ;
08080                 | ' 				break;
08080     04 03 90 FD | 	jmp	#LR__0583
08084                 | LR__0570
08084     28 50 05 F1 | 	add	fp, #40
08088     A8 1A 02 FB | 	rdlong	local02, fp
0808c     04 50 05 F1 | 	add	fp, #4
08090     A8 18 02 FB | 	rdlong	local01, fp
08094     2C 50 85 F1 | 	sub	fp, #44
08098     0C 1B 0A F2 | 	cmp	local02, local01 wz
0809c     14 00 90 AD |  if_e	jmp	#LR__0571
080a0     10 50 05 F1 | 	add	fp, #16
080a4     A8 1A C2 FA | 	rdbyte	local02, fp
080a8     03 1A 46 F5 | 	or	local02, #3
080ac     A8 1A 42 FC | 	wrbyte	local02, fp
080b0     10 50 85 F1 | 	sub	fp, #16
080b4                 | LR__0571
080b4     28 50 05 F1 | 	add	fp, #40
080b8     A8 1A 02 FB | 	rdlong	local02, fp
080bc     04 50 05 F1 | 	add	fp, #4
080c0     A8 18 02 FB | 	rdlong	local01, fp
080c4     2C 50 85 F1 | 	sub	fp, #44
080c8     0C 1B 1A F2 | 	cmp	local02, local01 wcz
080cc     B8 02 90 1D |  if_a	jmp	#LR__0583
080d0     2C 50 05 F1 | 	add	fp, #44
080d4     A8 1A 02 FB | 	rdlong	local02, fp
080d8     04 50 85 F1 | 	sub	fp, #4
080dc     A8 1A 62 FC | 	wrlong	local02, fp
080e0     08 50 85 F1 | 	sub	fp, #8
080e4     A8 10 68 FC | 	wrlong	#8, fp
080e8     04 50 05 F1 | 	add	fp, #4
080ec     A8 16 68 FC | 	wrlong	#11, fp
080f0     18 50 85 F1 | 	sub	fp, #24
080f4     A8 1A C2 FA | 	rdbyte	local02, fp
080f8     02 1A 66 F0 | 	shl	local02, #2
080fc     A8 1A 42 FC | 	wrbyte	local02, fp
08100     0C 50 85 F1 | 	sub	fp, #12
08104                 | ' 			si = di; i = 8; ni = 11; b <<= 2;
08104                 | ' 			continue;
08104     50 FE 9F FD | 	jmp	#LR__0566
08108                 | LR__0572
08108     14 50 05 F1 | 	add	fp, #20
0810c     A8 1A E2 FA | 	rdword	local02, fp
08110     14 50 85 F1 | 	sub	fp, #20
08114     0F 1A 46 F7 | 	zerox	local02, #15
08118     80 1A 16 F2 | 	cmp	local02, #128 wc
0811c     74 00 90 CD |  if_b	jmp	#LR__0574
08120     10 50 05 F1 | 	add	fp, #16
08124     A8 1A C2 FA | 	rdbyte	local02, fp
08128     02 1A 46 F5 | 	or	local02, #2
0812c     A8 1A 42 FC | 	wrbyte	local02, fp
08130     04 50 05 F1 | 	add	fp, #4
08134     A8 0E E2 FA | 	rdword	arg01, fp
08138     14 50 85 F1 | 	sub	fp, #20
0813c     0F 0E 46 F7 | 	zerox	arg01, #15
08140     01 00 00 FF 
08144     52 11 06 F6 | 	mov	arg02, ##850
08148     70 C6 BF FD | 	call	#_ff_cc_ff_uni2oem
0814c     14 50 05 F1 | 	add	fp, #20
08150     A8 F4 51 FC | 	wrword	result1, fp
08154     A8 1A E2 FA | 	rdword	local02, fp
08158     14 50 85 F1 | 	sub	fp, #20
0815c     0F 1A 46 F7 | 	zerox	local02, #15
08160     80 1A CE F7 | 	test	local02, #128 wz
08164     2C 00 90 AD |  if_e	jmp	#LR__0573
08168     14 50 05 F1 | 	add	fp, #20
0816c     A8 1C E2 FA | 	rdword	local03, fp
08170     7F 1C 06 F5 | 	and	local03, #127
08174     01 00 00 FF 
08178     14 F0 05 F1 | 	add	ptr__ff_cc_dat__, ##532
0817c     F8 1C 02 F1 | 	add	local03, ptr__ff_cc_dat__
08180     0E 1B C2 FA | 	rdbyte	local02, local03
08184     A8 1A 52 FC | 	wrword	local02, fp
08188     14 50 85 F1 | 	sub	fp, #20
0818c     01 00 00 FF 
08190     14 F0 85 F1 | 	sub	ptr__ff_cc_dat__, ##532
08194                 | LR__0573
08194                 | LR__0574
08194     14 50 05 F1 | 	add	fp, #20
08198     A8 1A E2 FA | 	rdword	local02, fp
0819c     14 50 85 F1 | 	sub	fp, #20
081a0     0F 1A 46 F7 | 	zerox	local02, #15
081a4     00 1B 16 F2 | 	cmp	local02, #256 wc
081a8     88 00 90 CD |  if_b	jmp	#LR__0576
081ac     24 50 05 F1 | 	add	fp, #36
081b0     A8 1A 02 FB | 	rdlong	local02, fp
081b4     01 1A 86 F1 | 	sub	local02, #1
081b8     04 50 85 F1 | 	sub	fp, #4
081bc     A8 18 02 FB | 	rdlong	local01, fp
081c0     20 50 85 F1 | 	sub	fp, #32
081c4     0D 19 12 F2 | 	cmp	local01, local02 wc
081c8     28 00 90 CD |  if_b	jmp	#LR__0575
081cc     10 50 05 F1 | 	add	fp, #16
081d0     A8 1A C2 FA | 	rdbyte	local02, fp
081d4     03 1A 46 F5 | 	or	local02, #3
081d8     A8 1A 42 FC | 	wrbyte	local02, fp
081dc     14 50 05 F1 | 	add	fp, #20
081e0     A8 1A 02 FB | 	rdlong	local02, fp
081e4     04 50 85 F1 | 	sub	fp, #4
081e8     A8 1A 62 FC | 	wrlong	local02, fp
081ec     20 50 85 F1 | 	sub	fp, #32
081f0                 | ' 				cf |=  0x01  |  0x02 ;
081f0                 | ' 				i = ni; continue;
081f0     64 FD 9F FD | 	jmp	#LR__0566
081f4                 | LR__0575
081f4     04 50 05 F1 | 	add	fp, #4
081f8     A8 20 02 FB | 	rdlong	local05, fp
081fc     1C 50 05 F1 | 	add	fp, #28
08200     A8 28 02 FB | 	rdlong	local09, fp
08204     14 23 02 F6 | 	mov	local06, local09
08208     01 22 06 F1 | 	add	local06, #1
0820c     A8 22 62 FC | 	wrlong	local06, fp
08210     20 20 06 F1 | 	add	local05, #32
08214     10 29 02 F1 | 	add	local09, local05
08218     0C 50 85 F1 | 	sub	fp, #12
0821c     A8 1E E2 FA | 	rdword	local04, fp
08220     14 50 85 F1 | 	sub	fp, #20
08224     0F 1E 46 F7 | 	zerox	local04, #15
08228     08 1E 46 F0 | 	shr	local04, #8
0822c     14 1F 42 FC | 	wrbyte	local04, local09
08230     10 01 90 FD | 	jmp	#LR__0582
08234                 | LR__0576
08234     14 50 05 F1 | 	add	fp, #20
08238     A8 1A E2 FA | 	rdword	local02, fp
0823c     14 50 85 F1 | 	sub	fp, #20
08240     0F 1A 4E F7 | 	zerox	local02, #15 wz
08244     2C 00 90 AD |  if_e	jmp	#LR__0577
08248     68 00 00 FF 
0824c     7B 0E 06 F6 | 	mov	arg01, ##@LR__0894
08250     14 50 05 F1 | 	add	fp, #20
08254     A8 2C E2 FA | 	rdword	local11, fp
08258     14 50 85 F1 | 	sub	fp, #20
0825c     16 23 02 F6 | 	mov	local06, local11
08260     0F 22 46 F7 | 	zerox	local06, #15
08264     11 11 02 F6 | 	mov	arg02, local06
08268     08 D3 BF FD | 	call	#_ff_cc_chk_chr_0205
0826c     FA 18 0A F6 | 	mov	local01, result1 wz
08270     20 00 90 AD |  if_e	jmp	#LR__0578
08274                 | LR__0577
08274     14 50 05 F1 | 	add	fp, #20
08278     A8 BE 58 FC | 	wrword	#95, fp
0827c     04 50 85 F1 | 	sub	fp, #4
08280     A8 1A C2 FA | 	rdbyte	local02, fp
08284     03 1A 46 F5 | 	or	local02, #3
08288     A8 1A 42 FC | 	wrbyte	local02, fp
0828c     10 50 85 F1 | 	sub	fp, #16
08290     B0 00 90 FD | 	jmp	#LR__0581
08294                 | LR__0578
08294     14 50 05 F1 | 	add	fp, #20
08298     A8 1A E2 FA | 	rdword	local02, fp
0829c     14 50 85 F1 | 	sub	fp, #20
082a0     0F 1A 46 F7 | 	zerox	local02, #15
082a4     41 1A 16 F2 | 	cmp	local02, #65 wc
082a8     38 00 90 CD |  if_b	jmp	#LR__0579
082ac     14 50 05 F1 | 	add	fp, #20
082b0     A8 1C E2 FA | 	rdword	local03, fp
082b4     14 50 85 F1 | 	sub	fp, #20
082b8     0E 19 02 F6 | 	mov	local01, local03
082bc     0F 18 46 F7 | 	zerox	local01, #15
082c0     5B 18 16 F2 | 	cmp	local01, #91 wc
082c4     1C 00 90 3D |  if_ae	jmp	#LR__0579
082c8     0C 50 05 F1 | 	add	fp, #12
082cc     A8 2A C2 FA | 	rdbyte	local10, fp
082d0     15 1B 02 F6 | 	mov	local02, local10
082d4     07 1A 46 F7 | 	zerox	local02, #7
082d8     02 1A 46 F5 | 	or	local02, #2
082dc     A8 1A 42 FC | 	wrbyte	local02, fp
082e0     0C 50 85 F1 | 	sub	fp, #12
082e4                 | LR__0579
082e4     14 50 05 F1 | 	add	fp, #20
082e8     A8 1A E2 FA | 	rdword	local02, fp
082ec     14 50 85 F1 | 	sub	fp, #20
082f0     0F 1A 46 F7 | 	zerox	local02, #15
082f4     61 1A 16 F2 | 	cmp	local02, #97 wc
082f8     48 00 90 CD |  if_b	jmp	#LR__0580
082fc     14 50 05 F1 | 	add	fp, #20
08300     A8 1C E2 FA | 	rdword	local03, fp
08304     14 50 85 F1 | 	sub	fp, #20
08308     0E 19 02 F6 | 	mov	local01, local03
0830c     0F 18 46 F7 | 	zerox	local01, #15
08310     7B 18 16 F2 | 	cmp	local01, #123 wc
08314     2C 00 90 3D |  if_ae	jmp	#LR__0580
08318     0C 50 05 F1 | 	add	fp, #12
0831c     A8 1A C2 FA | 	rdbyte	local02, fp
08320     01 1A 46 F5 | 	or	local02, #1
08324     A8 1A 42 FC | 	wrbyte	local02, fp
08328     08 50 05 F1 | 	add	fp, #8
0832c     A8 2A E2 FA | 	rdword	local10, fp
08330     15 1B 02 F6 | 	mov	local02, local10
08334     0F 1A 46 F7 | 	zerox	local02, #15
08338     20 1A 86 F1 | 	sub	local02, #32
0833c     A8 1A 52 FC | 	wrword	local02, fp
08340     14 50 85 F1 | 	sub	fp, #20
08344                 | LR__0580
08344                 | LR__0581
08344                 | LR__0582
08344     04 50 05 F1 | 	add	fp, #4
08348     A8 20 02 FB | 	rdlong	local05, fp
0834c     1C 50 05 F1 | 	add	fp, #28
08350     A8 1C 02 FB | 	rdlong	local03, fp
08354     0E 19 02 F6 | 	mov	local01, local03
08358     0E 23 02 F6 | 	mov	local06, local03
0835c     01 22 06 F1 | 	add	local06, #1
08360     A8 22 62 FC | 	wrlong	local06, fp
08364     0C 29 02 F6 | 	mov	local09, local01
08368     20 20 06 F1 | 	add	local05, #32
0836c     10 29 02 F1 | 	add	local09, local05
08370     0C 50 85 F1 | 	sub	fp, #12
08374     A8 1E E2 FA | 	rdword	local04, fp
08378     14 50 85 F1 | 	sub	fp, #20
0837c     0F 1E 46 F7 | 	zerox	local04, #15
08380     14 1F 42 FC | 	wrbyte	local04, local09
08384     D0 FB 9F FD | 	jmp	#LR__0566
08388                 | LR__0583
08388     04 50 05 F1 | 	add	fp, #4
0838c     A8 2A 02 FB | 	rdlong	local10, fp
08390     04 50 85 F1 | 	sub	fp, #4
08394     20 2A 06 F1 | 	add	local10, #32
08398     15 1B C2 FA | 	rdbyte	local02, local10
0839c     E5 1A 0E F2 | 	cmp	local02, #229 wz
083a0     14 00 90 5D |  if_ne	jmp	#LR__0584
083a4     04 50 05 F1 | 	add	fp, #4
083a8     A8 1A 02 FB | 	rdlong	local02, fp
083ac     04 50 85 F1 | 	sub	fp, #4
083b0     20 1A 06 F1 | 	add	local02, #32
083b4     0D 0B 48 FC | 	wrbyte	#5, local02
083b8                 | LR__0584
083b8     24 50 05 F1 | 	add	fp, #36
083bc     A8 1A 02 FB | 	rdlong	local02, fp
083c0     24 50 85 F1 | 	sub	fp, #36
083c4     08 1A 0E F2 | 	cmp	local02, #8 wz
083c8     14 00 90 5D |  if_ne	jmp	#LR__0585
083cc     0C 50 05 F1 | 	add	fp, #12
083d0     A8 1A C2 FA | 	rdbyte	local02, fp
083d4     02 1A 66 F0 | 	shl	local02, #2
083d8     A8 1A 42 FC | 	wrbyte	local02, fp
083dc     0C 50 85 F1 | 	sub	fp, #12
083e0                 | LR__0585
083e0     0C 50 05 F1 | 	add	fp, #12
083e4     A8 1A C2 FA | 	rdbyte	local02, fp
083e8     0C 50 85 F1 | 	sub	fp, #12
083ec     07 1A 46 F7 | 	zerox	local02, #7
083f0     0C 1A 06 F5 | 	and	local02, #12
083f4     0C 1A 0E F2 | 	cmp	local02, #12 wz
083f8     1C 00 90 AD |  if_e	jmp	#LR__0586
083fc     0C 50 05 F1 | 	add	fp, #12
08400     A8 18 C2 FA | 	rdbyte	local01, fp
08404     0C 50 85 F1 | 	sub	fp, #12
08408     07 18 46 F7 | 	zerox	local01, #7
0840c     03 18 06 F5 | 	and	local01, #3
08410     03 18 0E F2 | 	cmp	local01, #3 wz
08414     14 00 90 5D |  if_ne	jmp	#LR__0587
08418                 | LR__0586
08418     10 50 05 F1 | 	add	fp, #16
0841c     A8 1A C2 FA | 	rdbyte	local02, fp
08420     02 1A 46 F5 | 	or	local02, #2
08424     A8 1A 42 FC | 	wrbyte	local02, fp
08428     10 50 85 F1 | 	sub	fp, #16
0842c                 | LR__0587
0842c     10 50 05 F1 | 	add	fp, #16
08430     A8 1A C2 FA | 	rdbyte	local02, fp
08434     10 50 85 F1 | 	sub	fp, #16
08438     07 1A 46 F7 | 	zerox	local02, #7
0843c     02 1A CE F7 | 	test	local02, #2 wz
08440     58 00 90 5D |  if_ne	jmp	#LR__0590
08444     0C 50 05 F1 | 	add	fp, #12
08448     A8 1A C2 FA | 	rdbyte	local02, fp
0844c     0C 50 85 F1 | 	sub	fp, #12
08450     07 1A 46 F7 | 	zerox	local02, #7
08454     01 1A CE F7 | 	test	local02, #1 wz
08458     14 00 90 AD |  if_e	jmp	#LR__0588
0845c     10 50 05 F1 | 	add	fp, #16
08460     A8 1A C2 FA | 	rdbyte	local02, fp
08464     10 1A 46 F5 | 	or	local02, #16
08468     A8 1A 42 FC | 	wrbyte	local02, fp
0846c     10 50 85 F1 | 	sub	fp, #16
08470                 | LR__0588
08470     0C 50 05 F1 | 	add	fp, #12
08474     A8 1A C2 FA | 	rdbyte	local02, fp
08478     0C 50 85 F1 | 	sub	fp, #12
0847c     07 1A 46 F7 | 	zerox	local02, #7
08480     04 1A CE F7 | 	test	local02, #4 wz
08484     14 00 90 AD |  if_e	jmp	#LR__0589
08488     10 50 05 F1 | 	add	fp, #16
0848c     A8 1A C2 FA | 	rdbyte	local02, fp
08490     08 1A 46 F5 | 	or	local02, #8
08494     A8 1A 42 FC | 	wrbyte	local02, fp
08498     10 50 85 F1 | 	sub	fp, #16
0849c                 | LR__0589
0849c                 | LR__0590
0849c     04 50 05 F1 | 	add	fp, #4
084a0     A8 1A 02 FB | 	rdlong	local02, fp
084a4     0C 50 05 F1 | 	add	fp, #12
084a8     A8 18 C2 FA | 	rdbyte	local01, fp
084ac     10 50 85 F1 | 	sub	fp, #16
084b0     2B 1A 06 F1 | 	add	local02, #43
084b4     0D 19 42 FC | 	wrbyte	local01, local02
084b8                 | ' 	}
084b8                 | ' 
084b8                 | ' 	dp->fn[ 11 ] = cf;
084b8                 | ' 
084b8                 | ' 	return FR_OK;
084b8     00 F4 05 F6 | 	mov	result1, #0
084bc                 | LR__0591
084bc     A8 F0 03 F6 | 	mov	ptra, fp
084c0     B3 00 A0 FD | 	call	#popregs_
084c4                 | _ff_cc_create_name_0328_ret
084c4     2D 00 64 FD | 	ret
084c8                 | 
084c8                 | _ff_cc_follow_path_0332
084c8     07 4C 05 F6 | 	mov	COUNT_, #7
084cc     A9 00 A0 FD | 	call	#pushregs_
084d0     18 F0 07 F1 | 	add	ptra, #24
084d4     04 50 05 F1 | 	add	fp, #4
084d8     A8 0E 62 FC | 	wrlong	arg01, fp
084dc     04 50 05 F1 | 	add	fp, #4
084e0     A8 10 62 FC | 	wrlong	arg02, fp
084e4     04 50 85 F1 | 	sub	fp, #4
084e8     A8 18 02 FB | 	rdlong	local01, fp
084ec     0C 1B 02 FB | 	rdlong	local02, local01
084f0     10 50 05 F1 | 	add	fp, #16
084f4     A8 1A 62 FC | 	wrlong	local02, fp
084f8     14 50 85 F1 | 	sub	fp, #20
084fc     48 7B 9F FE | 	loc	pa,	#(@LR__0594-@LR__0592)
08500     8C 00 A0 FD | 	call	#FCACHE_LOAD_
08504                 | ' )
08504                 | ' {
08504                 | ' 	FRESULT res;
08504                 | ' 	BYTE ns;
08504                 | ' 	FATFS *fs = dp->obj.fs;
08504                 | ' #line 3083 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
08504                 | ' 	{
08504                 | ' 		while (*path == '/' || *path == '\\') path++;
08504                 | LR__0592
08504     08 50 05 F1 | 	add	fp, #8
08508     A8 1C 02 FB | 	rdlong	local03, fp
0850c     08 50 85 F1 | 	sub	fp, #8
08510     0E 19 C2 FA | 	rdbyte	local01, local03
08514     2F 18 0E F2 | 	cmp	local01, #47 wz
08518     18 00 90 AD |  if_e	jmp	#LR__0593
0851c     08 50 05 F1 | 	add	fp, #8
08520     A8 1E 02 FB | 	rdlong	local04, fp
08524     08 50 85 F1 | 	sub	fp, #8
08528     0F 21 C2 FA | 	rdbyte	local05, local04
0852c     5C 20 0E F2 | 	cmp	local05, #92 wz
08530     18 00 90 5D |  if_ne	jmp	#LR__0595
08534                 | LR__0593
08534     08 50 05 F1 | 	add	fp, #8
08538     A8 1A 02 FB | 	rdlong	local02, fp
0853c     01 1A 06 F1 | 	add	local02, #1
08540     A8 1A 62 FC | 	wrlong	local02, fp
08544     08 50 85 F1 | 	sub	fp, #8
08548     B8 FF 9F FD | 	jmp	#LR__0592
0854c                 | LR__0594
0854c                 | LR__0595
0854c     04 50 05 F1 | 	add	fp, #4
08550     A8 18 02 FB | 	rdlong	local01, fp
08554     08 18 06 F1 | 	add	local01, #8
08558     0C 01 68 FC | 	wrlong	#0, local01
0855c     04 50 05 F1 | 	add	fp, #4
08560     A8 1C 02 FB | 	rdlong	local03, fp
08564     08 50 85 F1 | 	sub	fp, #8
08568     0E 19 C2 FA | 	rdbyte	local01, local03
0856c     20 18 16 F2 | 	cmp	local01, #32 wc
08570     30 00 90 3D |  if_ae	jmp	#LR__0596
08574     04 50 05 F1 | 	add	fp, #4
08578     A8 18 02 FB | 	rdlong	local01, fp
0857c     2B 18 06 F1 | 	add	local01, #43
08580     0C 01 49 FC | 	wrbyte	#128, local01
08584     A8 0E 02 FB | 	rdlong	arg01, fp
08588     04 50 85 F1 | 	sub	fp, #4
0858c     00 10 06 F6 | 	mov	arg02, #0
08590     2C DD BF FD | 	call	#_ff_cc_dir_sdi_0249
08594     0C 50 05 F1 | 	add	fp, #12
08598     A8 F4 61 FC | 	wrlong	result1, fp
0859c     0C 50 85 F1 | 	sub	fp, #12
085a0     28 01 90 FD | 	jmp	#LR__0601
085a4                 | LR__0596
085a4                 | ' 		for (;;) {
085a4                 | LR__0597
085a4     04 50 05 F1 | 	add	fp, #4
085a8     A8 0E 02 FB | 	rdlong	arg01, fp
085ac     04 50 05 F1 | 	add	fp, #4
085b0     A8 10 02 F6 | 	mov	arg02, fp
085b4     08 50 85 F1 | 	sub	fp, #8
085b8     30 F5 BF FD | 	call	#_ff_cc_create_name_0328
085bc     0C 50 05 F1 | 	add	fp, #12
085c0     A8 F4 61 FC | 	wrlong	result1, fp
085c4     FA 18 0A F6 | 	mov	local01, result1 wz
085c8     0C 50 85 F1 | 	sub	fp, #12
085cc     FC 00 90 5D |  if_ne	jmp	#LR__0600
085d0     04 50 05 F1 | 	add	fp, #4
085d4     A8 0E 02 FB | 	rdlong	arg01, fp
085d8     04 50 85 F1 | 	sub	fp, #4
085dc     FC E8 BF FD | 	call	#_ff_cc_dir_find_0298
085e0     0C 50 05 F1 | 	add	fp, #12
085e4     A8 F4 61 FC | 	wrlong	result1, fp
085e8     08 50 85 F1 | 	sub	fp, #8
085ec     A8 18 02 FB | 	rdlong	local01, fp
085f0     2B 18 06 F1 | 	add	local01, #43
085f4     0C 1B C2 FA | 	rdbyte	local02, local01
085f8     0C 50 05 F1 | 	add	fp, #12
085fc     A8 1A 42 FC | 	wrbyte	local02, fp
08600     04 50 85 F1 | 	sub	fp, #4
08604     A8 18 0A FB | 	rdlong	local01, fp wz
08608     0C 50 85 F1 | 	sub	fp, #12
0860c     38 00 90 AD |  if_e	jmp	#LR__0598
08610     0C 50 05 F1 | 	add	fp, #12
08614     A8 18 02 FB | 	rdlong	local01, fp
08618     0C 50 85 F1 | 	sub	fp, #12
0861c     04 18 0E F2 | 	cmp	local01, #4 wz
08620     A8 00 90 5D |  if_ne	jmp	#LR__0600
08624     10 50 05 F1 | 	add	fp, #16
08628     A8 18 C2 FA | 	rdbyte	local01, fp
0862c     10 50 85 F1 | 	sub	fp, #16
08630     07 18 46 F7 | 	zerox	local01, #7
08634     04 18 CE F7 | 	test	local01, #4 wz
08638     0C 50 05 A1 |  if_e	add	fp, #12
0863c     A8 0A 68 AC |  if_e	wrlong	#5, fp
08640     0C 50 85 A1 |  if_e	sub	fp, #12
08644                 | ' 					}
08644                 | ' 				}
08644                 | ' 				break;
08644     84 00 90 FD | 	jmp	#LR__0600
08648                 | LR__0598
08648     10 50 05 F1 | 	add	fp, #16
0864c     A8 18 C2 FA | 	rdbyte	local01, fp
08650     10 50 85 F1 | 	sub	fp, #16
08654     07 18 46 F7 | 	zerox	local01, #7
08658     04 18 CE F7 | 	test	local01, #4 wz
0865c     6C 00 90 5D |  if_ne	jmp	#LR__0600
08660     04 50 05 F1 | 	add	fp, #4
08664     A8 1C 02 FB | 	rdlong	local03, fp
08668     04 50 85 F1 | 	sub	fp, #4
0866c     06 1C 06 F1 | 	add	local03, #6
08670     0E 19 C2 FA | 	rdbyte	local01, local03
08674     10 18 CE F7 | 	test	local01, #16 wz
08678     10 00 90 5D |  if_ne	jmp	#LR__0599
0867c     0C 50 05 F1 | 	add	fp, #12
08680     A8 0A 68 FC | 	wrlong	#5, fp
08684     0C 50 85 F1 | 	sub	fp, #12
08688                 | ' #line 3140 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
08688                 | ' 				res = FR_NO_PATH; break;
08688     40 00 90 FD | 	jmp	#LR__0600
0868c                 | LR__0599
0868c     04 50 05 F1 | 	add	fp, #4
08690     A8 22 02 FB | 	rdlong	local06, fp
08694     11 19 02 F6 | 	mov	local01, local06
08698     10 50 05 F1 | 	add	fp, #16
0869c     A8 10 02 FB | 	rdlong	arg02, fp
086a0     08 0F 02 F6 | 	mov	arg01, arg02
086a4     34 10 06 F1 | 	add	arg02, #52
086a8     14 50 85 F1 | 	sub	fp, #20
086ac     10 22 06 F1 | 	add	local06, #16
086b0     11 25 02 FB | 	rdlong	local07, local06
086b4     FF 25 06 F5 | 	and	local07, #511
086b8     12 11 02 F1 | 	add	arg02, local07
086bc     20 E0 BF FD | 	call	#_ff_cc_ld_clust_0259
086c0     08 18 06 F1 | 	add	local01, #8
086c4     0C F5 61 FC | 	wrlong	result1, local01
086c8     D8 FE 9F FD | 	jmp	#LR__0597
086cc                 | LR__0600
086cc                 | LR__0601
086cc                 | ' 			}
086cc                 | ' #line 3150 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
086cc                 | ' 			{
086cc                 | ' 				dp->obj.sclust = ld_clust(fs, fs->win + dp->dptr %  ((UINT) 512 ) );
086cc                 | ' 			}
086cc                 | ' 		}
086cc                 | ' 	}
086cc                 | ' 
086cc                 | ' 	return res;
086cc     0C 50 05 F1 | 	add	fp, #12
086d0     A8 F4 01 FB | 	rdlong	result1, fp
086d4     0C 50 85 F1 | 	sub	fp, #12
086d8     A8 F0 03 F6 | 	mov	ptra, fp
086dc     B3 00 A0 FD | 	call	#popregs_
086e0                 | _ff_cc_follow_path_0332_ret
086e0     2D 00 64 FD | 	ret
086e4                 | 
086e4                 | _ff_cc_get_ldnumber_0338
086e4     07 F9 01 F6 | 	mov	_var01, arg01
086e8     01 FA 65 F6 | 	neg	_var02, #1
086ec     FC FC 09 FB | 	rdlong	_var03, _var01 wz
086f0     FE FE 01 F6 | 	mov	_var04, _var03
086f4     01 F4 65 A6 |  if_e	neg	result1, #1
086f8     8C 00 90 AD |  if_e	jmp	#_ff_cc_get_ldnumber_0338_ret
086fc     28 79 9F FE | 	loc	pa,	#(@LR__0603-@LR__0602)
08700     8C 00 A0 FD | 	call	#FCACHE_LOAD_
08704                 | ' 	do tc = *tt++; while ((UINT)tc >= ( 1  ? ' ' : '!') && tc != ':');
08704                 | LR__0602
08704     FF 00 C2 FA | 	rdbyte	_var05, _var04
08708     00 03 02 F6 | 	mov	_var06, _var05
0870c     07 02 46 F7 | 	zerox	_var06, #7
08710     20 02 16 F2 | 	cmp	_var06, #32 wc
08714     01 FE 05 F1 | 	add	_var04, #1
08718     10 00 90 CD |  if_b	jmp	#LR__0604
0871c     00 05 02 F6 | 	mov	_var07, _var05
08720     07 04 46 F7 | 	zerox	_var07, #7
08724     3A 04 0E F2 | 	cmp	_var07, #58 wz
08728     D8 FF 9F 5D |  if_ne	jmp	#LR__0602
0872c                 | LR__0603
0872c                 | LR__0604
0872c     00 03 02 F6 | 	mov	_var06, _var05
08730     07 02 46 F7 | 	zerox	_var06, #7
08734     3A 02 0E F2 | 	cmp	_var06, #58 wz
08738     48 00 90 5D |  if_ne	jmp	#LR__0606
0873c     01 06 06 F6 | 	mov	_var08, #1
08740     FE 02 C2 FA | 	rdbyte	_var06, _var03
08744     30 02 16 F2 | 	cmp	_var06, #48 wc
08748     24 00 90 CD |  if_b	jmp	#LR__0605
0874c     FE 04 C2 FA | 	rdbyte	_var07, _var03
08750     3A 04 16 F2 | 	cmp	_var07, #58 wc
08754     18 00 90 3D |  if_ae	jmp	#LR__0605
08758     FE 08 02 F6 | 	mov	_var09, _var03
0875c     02 08 06 F1 | 	add	_var09, #2
08760     FF 08 0A F2 | 	cmp	_var09, _var04 wz
08764     FE 02 C2 AA |  if_e	rdbyte	_var06, _var03
08768     30 02 86 A1 |  if_e	sub	_var06, #48
0876c     01 07 02 A6 |  if_e	mov	_var08, _var06
08770                 | LR__0605
08770     01 06 56 F2 | 	cmps	_var08, #1 wc
08774     03 FB 01 C6 |  if_b	mov	_var02, _var08
08778     FC FE 61 CC |  if_b	wrlong	_var04, _var01
0877c                 | ' 			vol = i;
0877c                 | ' 			*path = tt;
0877c                 | ' 		}
0877c                 | ' 		return vol;
0877c     FD F4 01 F6 | 	mov	result1, _var02
08780     04 00 90 FD | 	jmp	#_ff_cc_get_ldnumber_0338_ret
08784                 | LR__0606
08784                 | ' 	}
08784                 | ' #line 3228 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
08784                 | ' 	vol = 0;
08784                 | ' 
08784                 | ' 	return vol;
08784     00 F4 05 F6 | 	mov	result1, #0
08788                 | _ff_cc_get_ldnumber_0338_ret
08788     2D 00 64 FD | 	ret
0878c                 | 
0878c                 | _ff_cc_check_fs_0339
0878c     08 4C 05 F6 | 	mov	COUNT_, #8
08790     A9 00 A0 FD | 	call	#pushregs_
08794     07 19 02 F6 | 	mov	local01, arg01
08798     08 1B 02 F6 | 	mov	local02, arg02
0879c     03 18 06 F1 | 	add	local01, #3
087a0     0C 01 48 FC | 	wrbyte	#0, local01
087a4     2D 18 06 F1 | 	add	local01, #45
087a8     FF FF FF FF 
087ac     0C FF 6B FC | 	wrlong	##-1, local01
087b0     30 18 86 F1 | 	sub	local01, #48
087b4     0D 11 02 F6 | 	mov	arg02, local02
087b8     0C 0F 02 F6 | 	mov	arg01, local01
087bc     00 D0 BF FD | 	call	#_ff_cc_move_window_0218
087c0     00 F4 0D F2 | 	cmp	result1, #0 wz
087c4     04 F4 05 56 |  if_ne	mov	result1, #4
087c8     D4 00 90 5D |  if_ne	jmp	#LR__0609
087cc     34 18 06 F1 | 	add	local01, #52
087d0     0C 0F 02 F6 | 	mov	arg01, local01
087d4     FE 0F 06 F1 | 	add	arg01, #510
087d8     34 18 86 F1 | 	sub	local01, #52
087dc     7C CC BF FD | 	call	#_ff_cc_ld_word_0191
087e0     FA 1C 02 F6 | 	mov	local03, result1
087e4     0F 1C 46 F7 | 	zerox	local03, #15
087e8     55 00 00 FF 
087ec     55 1C 0E F2 | 	cmp	local03, ##43605 wz
087f0     03 F4 05 56 |  if_ne	mov	result1, #3
087f4     A8 00 90 5D |  if_ne	jmp	#LR__0609
087f8     34 18 06 F1 | 	add	local01, #52
087fc     0C 1F C2 FA | 	rdbyte	local04, local01
08800     34 18 86 F1 | 	sub	local01, #52
08804     0F 1D 02 F6 | 	mov	local03, local04
08808     07 1C 46 F7 | 	zerox	local03, #7
0880c     E9 1C 0E F2 | 	cmp	local03, #233 wz
08810     38 00 90 AD |  if_e	jmp	#LR__0607
08814     34 18 06 F1 | 	add	local01, #52
08818     0C 21 C2 FA | 	rdbyte	local05, local01
0881c     34 18 86 F1 | 	sub	local01, #52
08820     10 23 02 F6 | 	mov	local06, local05
08824     07 22 46 F7 | 	zerox	local06, #7
08828     EB 22 0E F2 | 	cmp	local06, #235 wz
0882c     1C 00 90 AD |  if_e	jmp	#LR__0607
08830     34 18 06 F1 | 	add	local01, #52
08834     0C 25 C2 FA | 	rdbyte	local07, local01
08838     34 18 86 F1 | 	sub	local01, #52
0883c     12 27 02 F6 | 	mov	local08, local07
08840     07 26 46 F7 | 	zerox	local08, #7
08844     E8 26 0E F2 | 	cmp	local08, #232 wz
08848     50 00 90 5D |  if_ne	jmp	#LR__0608
0884c                 | LR__0607
0884c     34 18 06 F1 | 	add	local01, #52
08850     0C 0F 02 F6 | 	mov	arg01, local01
08854     34 18 86 F1 | 	sub	local01, #52
08858     36 0E 06 F1 | 	add	arg01, #54
0885c     68 00 00 FF 
08860     8E 10 06 F6 | 	mov	arg02, ##@LR__0896
08864     03 12 06 F6 | 	mov	arg03, #3
08868     D4 CC BF FD | 	call	#_ff_cc_mem_cmp_0204
0886c     00 F4 0D F2 | 	cmp	result1, #0 wz
08870     00 F4 05 A6 |  if_e	mov	result1, #0
08874     28 00 90 AD |  if_e	jmp	#LR__0609
08878     86 18 06 F1 | 	add	local01, #134
0887c     68 00 00 FF 
08880     92 10 06 F6 | 	mov	arg02, ##@LR__0897
08884     0C 0F 02 F6 | 	mov	arg01, local01
08888     05 12 06 F6 | 	mov	arg03, #5
0888c     B0 CC BF FD | 	call	#_ff_cc_mem_cmp_0204
08890     00 F4 0D F2 | 	cmp	result1, #0 wz
08894     00 F4 05 A6 |  if_e	mov	result1, #0
08898     04 00 90 AD |  if_e	jmp	#LR__0609
0889c                 | LR__0608
0889c                 | ' 	}
0889c                 | ' 	return 2;
0889c     02 F4 05 F6 | 	mov	result1, #2
088a0                 | LR__0609
088a0     A8 F0 03 F6 | 	mov	ptra, fp
088a4     B3 00 A0 FD | 	call	#popregs_
088a8                 | _ff_cc_check_fs_0339_ret
088a8     2D 00 64 FD | 	ret
088ac                 | 
088ac                 | _ff_cc_find_volume_0343
088ac     0C 4C 05 F6 | 	mov	COUNT_, #12
088b0     A9 00 A0 FD | 	call	#pushregs_
088b4     24 F0 07 F1 | 	add	ptra, #36
088b8     07 19 02 F6 | 	mov	local01, arg01
088bc     08 1B 02 F6 | 	mov	local02, arg02
088c0     0C 0F 02 F6 | 	mov	arg01, local01
088c4     00 10 06 F6 | 	mov	arg02, #0
088c8     C0 FE BF FD | 	call	#_ff_cc_check_fs_0339
088cc     FA 1C 02 F6 | 	mov	local03, result1
088d0     0E 1F 02 F6 | 	mov	local04, local03
088d4     02 1E 0E F2 | 	cmp	local04, #2 wz
088d8     18 00 90 AD |  if_e	jmp	#LR__0611
088dc     03 1E 16 F2 | 	cmp	local04, #3 wc
088e0     08 00 90 3D |  if_ae	jmp	#LR__0610
088e4     00 1A 0E F2 | 	cmp	local02, #0 wz
088e8     08 00 90 5D |  if_ne	jmp	#LR__0611
088ec                 | LR__0610
088ec     0F F5 01 F6 | 	mov	result1, local04
088f0     F0 00 90 FD | 	jmp	#LR__0618
088f4                 | LR__0611
088f4                 | ' 	for (i = 0; i < 4; i++) {
088f4     00 20 06 F6 | 	mov	local05, #0
088f8                 | LR__0612
088f8     04 20 16 F2 | 	cmp	local05, #4 wc
088fc     4C 00 90 3D |  if_ae	jmp	#LR__0613
08900     10 1D 02 F6 | 	mov	local03, local05
08904     02 1C 66 F0 | 	shl	local03, #2
08908     14 50 05 F1 | 	add	fp, #20
0890c     A8 1C 02 F1 | 	add	local03, fp
08910     34 18 06 F1 | 	add	local01, #52
08914     0C 23 02 F6 | 	mov	local06, local01
08918     11 0F 02 F6 | 	mov	arg01, local06
0891c     BE 0F 06 F1 | 	add	arg01, #446
08920     10 25 02 F6 | 	mov	local07, local05
08924     04 24 66 F0 | 	shl	local07, #4
08928     12 27 02 F6 | 	mov	local08, local07
0892c     12 0F 02 F1 | 	add	arg01, local07
08930     08 0E 06 F1 | 	add	arg01, #8
08934     14 50 85 F1 | 	sub	fp, #20
08938     34 18 86 F1 | 	sub	local01, #52
0893c     40 CB BF FD | 	call	#_ff_cc_ld_dword_0193
08940     0E F5 61 FC | 	wrlong	result1, local03
08944     01 20 06 F1 | 	add	local05, #1
08948     AC FF 9F FD | 	jmp	#LR__0612
0894c                 | LR__0613
0894c     00 1A 0E F2 | 	cmp	local02, #0 wz
08950     0D 1D 02 56 |  if_ne	mov	local03, local02
08954     01 1C 86 51 |  if_ne	sub	local03, #1
08958     00 1C 06 A6 |  if_e	mov	local03, #0
0895c     0E 21 02 F6 | 	mov	local05, local03
08960                 | ' 		mbr_pt[i] = ld_dword(fs->win +  446  + i *  16  +  8 );
08960                 | ' 	}
08960                 | ' 	i = part ? part - 1 : 0;
08960                 | ' 	do {
08960                 | LR__0614
08960     10 29 02 F6 | 	mov	local09, local05
08964     02 28 66 F0 | 	shl	local09, #2
08968     14 50 05 F1 | 	add	fp, #20
0896c     A8 2A 02 F6 | 	mov	local10, fp
08970     A8 28 02 F1 | 	add	local09, fp
08974     14 2D 0A FB | 	rdlong	local11, local09 wz
08978     14 50 85 F1 | 	sub	fp, #20
0897c     34 00 90 AD |  if_e	jmp	#LR__0615
08980     10 27 02 F6 | 	mov	local08, local05
08984     02 26 66 F0 | 	shl	local08, #2
08988     14 50 05 F1 | 	add	fp, #20
0898c     A8 2E 02 F6 | 	mov	local12, fp
08990     A8 26 02 F1 | 	add	local08, fp
08994     13 25 02 FB | 	rdlong	local07, local08
08998     0C 0F 02 F6 | 	mov	arg01, local01
0899c     12 11 02 F6 | 	mov	arg02, local07
089a0     14 50 85 F1 | 	sub	fp, #20
089a4     E4 FD BF FD | 	call	#_ff_cc_check_fs_0339
089a8     FA 22 02 F6 | 	mov	local06, result1
089ac     11 1D 02 F6 | 	mov	local03, local06
089b0     04 00 90 FD | 	jmp	#LR__0616
089b4                 | LR__0615
089b4     03 1C 06 F6 | 	mov	local03, #3
089b8                 | LR__0616
089b8     0E 1F 02 F6 | 	mov	local04, local03
089bc     00 1A 0E F2 | 	cmp	local02, #0 wz
089c0     1C 00 90 5D |  if_ne	jmp	#LR__0617
089c4     02 1E 16 F2 | 	cmp	local04, #2 wc
089c8     14 00 90 CD |  if_b	jmp	#LR__0617
089cc     10 1D 02 F6 | 	mov	local03, local05
089d0     01 1C 06 F1 | 	add	local03, #1
089d4     0E 21 02 F6 | 	mov	local05, local03
089d8     04 20 16 F2 | 	cmp	local05, #4 wc
089dc     80 FF 9F CD |  if_b	jmp	#LR__0614
089e0                 | LR__0617
089e0                 | ' 	return fmt;
089e0     0F F5 01 F6 | 	mov	result1, local04
089e4                 | LR__0618
089e4     A8 F0 03 F6 | 	mov	ptra, fp
089e8     B3 00 A0 FD | 	call	#popregs_
089ec                 | _ff_cc_find_volume_0343_ret
089ec     2D 00 64 FD | 	ret
089f0                 | 
089f0                 | _ff_cc_mount_volume_0355
089f0     18 4C 05 F6 | 	mov	COUNT_, #24
089f4     A9 00 A0 FD | 	call	#pushregs_
089f8     07 19 02 F6 | 	mov	local01, arg01
089fc     08 1B 02 F6 | 	mov	local02, arg02
08a00     09 1D 02 F6 | 	mov	local03, arg03
08a04     0D 01 68 FC | 	wrlong	#0, local02
08a08     0C 0F 02 F6 | 	mov	arg01, local01
08a0c     D4 FC BF FD | 	call	#_ff_cc_get_ldnumber_0338
08a10     FA 1E 02 F6 | 	mov	local04, result1
08a14     00 1E 56 F2 | 	cmps	local04, #0 wc
08a18     0B F4 05 C6 |  if_b	mov	result1, #11
08a1c     10 06 90 CD |  if_b	jmp	#LR__0634
08a20     0F 21 02 F6 | 	mov	local05, local04
08a24     02 20 66 F0 | 	shl	local05, #2
08a28     F8 20 02 F1 | 	add	local05, ptr__ff_cc_dat__
08a2c     10 23 0A FB | 	rdlong	local06, local05 wz
08a30     0C F4 05 A6 |  if_e	mov	result1, #12
08a34     F8 05 90 AD |  if_e	jmp	#LR__0634
08a38     0D 23 62 FC | 	wrlong	local06, local02
08a3c     07 1C 46 F7 | 	zerox	local03, #7
08a40     FE 1C 06 F5 | 	and	local03, #254
08a44     11 21 CA FA | 	rdbyte	local05, local06 wz
08a48     54 00 90 AD |  if_e	jmp	#LR__0621
08a4c     01 22 06 F1 | 	add	local06, #1
08a50     11 0F CA FA | 	rdbyte	arg01, local06 wz
08a54     01 22 86 F1 | 	sub	local06, #1
08a58     01 F4 05 56 |  if_ne	mov	result1, #1
08a5c                 | ' 
08a5c                 | ' 	return Stat;
08a5c     03 00 00 AF 
08a60     44 F1 05 A1 |  if_e	add	ptr__ff_cc_dat__, ##1860
08a64     F8 F4 C1 AA |  if_e	rdbyte	result1, ptr__ff_cc_dat__
08a68     03 00 00 AF 
08a6c     44 F1 85 A1 |  if_e	sub	ptr__ff_cc_dat__, ##1860
08a70     FA 20 02 F6 | 	mov	local05, result1
08a74     07 20 46 F7 | 	zerox	local05, #7
08a78     01 20 CE F7 | 	test	local05, #1 wz
08a7c     20 00 90 5D |  if_ne	jmp	#LR__0620
08a80     00 1C 0E F2 | 	cmp	local03, #0 wz
08a84     10 00 90 AD |  if_e	jmp	#LR__0619
08a88     07 F4 45 F7 | 	zerox	result1, #7
08a8c     04 F4 0D F5 | 	and	result1, #4 wz
08a90                 | ' 				return FR_WRITE_PROTECTED;
08a90     0A F4 05 56 |  if_ne	mov	result1, #10
08a94     98 05 90 5D |  if_ne	jmp	#LR__0634
08a98                 | LR__0619
08a98                 | ' 			}
08a98                 | ' 			return FR_OK;
08a98     00 F4 05 F6 | 	mov	result1, #0
08a9c     90 05 90 FD | 	jmp	#LR__0634
08aa0                 | LR__0620
08aa0                 | LR__0621
08aa0     11 01 48 FC | 	wrbyte	#0, local06
08aa4     01 22 06 F1 | 	add	local06, #1
08aa8     11 1F 42 FC | 	wrbyte	local04, local06
08aac     11 0F C2 FA | 	rdbyte	arg01, local06
08ab0     01 22 86 F1 | 	sub	local06, #1
08ab4     80 BF BF FD | 	call	#_ff_cc_disk_initialize
08ab8     FA 24 02 F6 | 	mov	local07, result1
08abc     12 21 02 F6 | 	mov	local05, local07
08ac0     07 20 46 F7 | 	zerox	local05, #7
08ac4     01 20 CE F7 | 	test	local05, #1 wz
08ac8                 | ' 		return FR_NOT_READY;
08ac8     03 F4 05 56 |  if_ne	mov	result1, #3
08acc     60 05 90 5D |  if_ne	jmp	#LR__0634
08ad0     00 1C 0E F2 | 	cmp	local03, #0 wz
08ad4     14 00 90 AD |  if_e	jmp	#LR__0622
08ad8     12 21 02 F6 | 	mov	local05, local07
08adc     07 20 46 F7 | 	zerox	local05, #7
08ae0     04 20 CE F7 | 	test	local05, #4 wz
08ae4                 | ' 		return FR_WRITE_PROTECTED;
08ae4     0A F4 05 56 |  if_ne	mov	result1, #10
08ae8     44 05 90 5D |  if_ne	jmp	#LR__0634
08aec                 | LR__0622
08aec     11 0F 02 F6 | 	mov	arg01, local06
08af0     00 10 06 F6 | 	mov	arg02, #0
08af4     B4 FD BF FD | 	call	#_ff_cc_find_volume_0343
08af8     FA 26 02 F6 | 	mov	local08, result1
08afc     04 26 0E F2 | 	cmp	local08, #4 wz
08b00     01 F4 05 A6 |  if_e	mov	result1, #1
08b04     28 05 90 AD |  if_e	jmp	#LR__0634
08b08     02 26 16 F2 | 	cmp	local08, #2 wc
08b0c     0D F4 05 36 |  if_ae	mov	result1, #13
08b10     1C 05 90 3D |  if_ae	jmp	#LR__0634
08b14     30 22 06 F1 | 	add	local06, #48
08b18     11 29 02 FB | 	rdlong	local09, local06
08b1c     04 22 06 F1 | 	add	local06, #4
08b20     11 0F 02 F6 | 	mov	arg01, local06
08b24     34 22 86 F1 | 	sub	local06, #52
08b28     0B 0E 06 F1 | 	add	arg01, #11
08b2c     2C C9 BF FD | 	call	#_ff_cc_ld_word_0191
08b30     FA 20 02 F6 | 	mov	local05, result1
08b34     0F 20 46 F7 | 	zerox	local05, #15
08b38     01 00 00 FF 
08b3c     00 20 0E F2 | 	cmp	local05, ##512 wz
08b40     0D F4 05 56 |  if_ne	mov	result1, #13
08b44     E8 04 90 5D |  if_ne	jmp	#LR__0634
08b48     34 22 06 F1 | 	add	local06, #52
08b4c     11 0F 02 F6 | 	mov	arg01, local06
08b50     34 22 86 F1 | 	sub	local06, #52
08b54     16 0E 06 F1 | 	add	arg01, #22
08b58     00 C9 BF FD | 	call	#_ff_cc_ld_word_0191
08b5c     FA 2A 02 F6 | 	mov	local10, result1
08b60     0F 2A 4E F7 | 	zerox	local10, #15 wz
08b64     18 00 90 5D |  if_ne	jmp	#LR__0623
08b68     34 22 06 F1 | 	add	local06, #52
08b6c     11 0F 02 F6 | 	mov	arg01, local06
08b70     34 22 86 F1 | 	sub	local06, #52
08b74     24 0E 06 F1 | 	add	arg01, #36
08b78     04 C9 BF FD | 	call	#_ff_cc_ld_dword_0193
08b7c     FA 2A 02 F6 | 	mov	local10, result1
08b80                 | LR__0623
08b80     1C 22 06 F1 | 	add	local06, #28
08b84     11 2B 62 FC | 	wrlong	local10, local06
08b88     28 22 06 F1 | 	add	local06, #40
08b8c     11 21 C2 FA | 	rdbyte	local05, local06
08b90     42 22 86 F1 | 	sub	local06, #66
08b94     11 21 42 FC | 	wrbyte	local05, local06
08b98     11 21 C2 FA | 	rdbyte	local05, local06
08b9c     02 22 86 F1 | 	sub	local06, #2
08ba0     07 20 46 F7 | 	zerox	local05, #7
08ba4     01 20 0E F2 | 	cmp	local05, #1 wz
08ba8     1C 00 90 AD |  if_e	jmp	#LR__0624
08bac     02 22 06 F1 | 	add	local06, #2
08bb0     11 2D C2 FA | 	rdbyte	local11, local06
08bb4     02 22 86 F1 | 	sub	local06, #2
08bb8     07 2C 46 F7 | 	zerox	local11, #7
08bbc     02 2C 0E F2 | 	cmp	local11, #2 wz
08bc0     0D F4 05 56 |  if_ne	mov	result1, #13
08bc4     68 04 90 5D |  if_ne	jmp	#LR__0634
08bc8                 | LR__0624
08bc8     02 22 06 F1 | 	add	local06, #2
08bcc     11 21 C2 FA | 	rdbyte	local05, local06
08bd0     10 2B 02 FD | 	qmul	local10, local05
08bd4     3F 22 06 F1 | 	add	local06, #63
08bd8     11 21 C2 FA | 	rdbyte	local05, local06
08bdc     37 22 86 F1 | 	sub	local06, #55
08be0     11 21 52 FC | 	wrword	local05, local06
08be4     11 21 E2 FA | 	rdword	local05, local06
08be8     0A 22 86 F1 | 	sub	local06, #10
08bec     0F 20 4E F7 | 	zerox	local05, #15 wz
08bf0     18 2A 62 FD | 	getqx	local10
08bf4     28 00 90 AD |  if_e	jmp	#LR__0625
08bf8     0A 22 06 F1 | 	add	local06, #10
08bfc     11 2F E2 FA | 	rdword	local12, local06
08c00     17 2D 02 F6 | 	mov	local11, local12
08c04     0F 2C 46 F7 | 	zerox	local11, #15
08c08     0A 22 86 F1 | 	sub	local06, #10
08c0c     17 31 02 F6 | 	mov	local13, local12
08c10     0F 30 46 F7 | 	zerox	local13, #15
08c14     01 30 86 F1 | 	sub	local13, #1
08c18     18 2D CA F7 | 	test	local11, local13 wz
08c1c     08 00 90 AD |  if_e	jmp	#LR__0626
08c20                 | LR__0625
08c20     0D F4 05 F6 | 	mov	result1, #13
08c24     08 04 90 FD | 	jmp	#LR__0634
08c28                 | LR__0626
08c28     34 22 06 F1 | 	add	local06, #52
08c2c     11 0F 02 F6 | 	mov	arg01, local06
08c30     34 22 86 F1 | 	sub	local06, #52
08c34     11 0E 06 F1 | 	add	arg01, #17
08c38     20 C8 BF FD | 	call	#_ff_cc_ld_word_0191
08c3c     08 22 06 F1 | 	add	local06, #8
08c40     11 F5 51 FC | 	wrword	result1, local06
08c44     11 21 E2 FA | 	rdword	local05, local06
08c48     08 22 86 F1 | 	sub	local06, #8
08c4c     0F 20 46 F7 | 	zerox	local05, #15
08c50     10 2D 52 F6 | 	abs	local11, local05 wc
08c54     0F 2C 06 F5 | 	and	local11, #15
08c58     16 2D 8A F6 | 	negc	local11, local11 wz
08c5c     0D F4 05 56 |  if_ne	mov	result1, #13
08c60     CC 03 90 5D |  if_ne	jmp	#LR__0634
08c64     34 22 06 F1 | 	add	local06, #52
08c68     11 0F 02 F6 | 	mov	arg01, local06
08c6c     34 22 86 F1 | 	sub	local06, #52
08c70     13 0E 06 F1 | 	add	arg01, #19
08c74     E4 C7 BF FD | 	call	#_ff_cc_ld_word_0191
08c78     FA 32 02 F6 | 	mov	local14, result1
08c7c     0F 32 4E F7 | 	zerox	local14, #15 wz
08c80     18 00 90 5D |  if_ne	jmp	#LR__0627
08c84     34 22 06 F1 | 	add	local06, #52
08c88     11 0F 02 F6 | 	mov	arg01, local06
08c8c     34 22 86 F1 | 	sub	local06, #52
08c90     20 0E 06 F1 | 	add	arg01, #32
08c94     E8 C7 BF FD | 	call	#_ff_cc_ld_dword_0193
08c98     FA 32 02 F6 | 	mov	local14, result1
08c9c                 | LR__0627
08c9c     34 22 06 F1 | 	add	local06, #52
08ca0     11 0F 02 F6 | 	mov	arg01, local06
08ca4     34 22 86 F1 | 	sub	local06, #52
08ca8     0E 0E 06 F1 | 	add	arg01, #14
08cac     AC C7 BF FD | 	call	#_ff_cc_ld_word_0191
08cb0     FA 34 02 F6 | 	mov	local15, result1
08cb4     1A 21 02 F6 | 	mov	local05, local15
08cb8     0F 20 4E F7 | 	zerox	local05, #15 wz
08cbc     0D F4 05 A6 |  if_e	mov	result1, #13
08cc0     6C 03 90 AD |  if_e	jmp	#LR__0634
08cc4     1A 37 02 F6 | 	mov	local16, local15
08cc8     0F 36 46 F7 | 	zerox	local16, #15
08ccc     15 37 02 F1 | 	add	local16, local10
08cd0     08 22 06 F1 | 	add	local06, #8
08cd4     11 39 E2 FA | 	rdword	local17, local06
08cd8     08 22 86 F1 | 	sub	local06, #8
08cdc     0F 38 46 F7 | 	zerox	local17, #15
08ce0     1C 3B 52 F6 | 	abs	local18, local17 wc
08ce4     04 3A 46 F0 | 	shr	local18, #4
08ce8     1D 3B 82 F6 | 	negc	local18, local18
08cec     1D 37 02 F1 | 	add	local16, local18
08cf0     1B 33 12 F2 | 	cmp	local14, local16 wc
08cf4     0D F4 05 C6 |  if_b	mov	result1, #13
08cf8     34 03 90 CD |  if_b	jmp	#LR__0634
08cfc     19 3D 02 F6 | 	mov	local19, local14
08d00     1B 3D 82 F1 | 	sub	local19, local16
08d04     0A 22 06 F1 | 	add	local06, #10
08d08     11 3B E2 FA | 	rdword	local18, local06
08d0c     1D 3D 12 FD | 	qdiv	local19, local18
08d10     0A 22 86 F1 | 	sub	local06, #10
08d14     18 3C 62 FD | 	getqx	local19
08d18     00 3C 0E F2 | 	cmp	local19, #0 wz
08d1c     0D F4 05 A6 |  if_e	mov	result1, #13
08d20     0C 03 90 AD |  if_e	jmp	#LR__0634
08d24     00 26 06 F6 | 	mov	local08, #0
08d28     FF FF 07 FF 
08d2c     F6 3D 16 F2 | 	cmp	local19, ##268435446 wc
08d30     03 26 06 C6 |  if_b	mov	local08, #3
08d34     7F 00 00 FF 
08d38     F6 3D 16 F2 | 	cmp	local19, ##65526 wc
08d3c     02 26 06 C6 |  if_b	mov	local08, #2
08d40     07 00 00 FF 
08d44     F6 3D 16 F2 | 	cmp	local19, ##4086 wc
08d48     01 26 06 C6 |  if_b	mov	local08, #1
08d4c     00 26 0E F2 | 	cmp	local08, #0 wz
08d50     0D F4 05 A6 |  if_e	mov	result1, #13
08d54     D8 02 90 AD |  if_e	jmp	#LR__0634
08d58     1E 21 02 F6 | 	mov	local05, local19
08d5c     02 20 06 F1 | 	add	local05, #2
08d60     18 22 06 F1 | 	add	local06, #24
08d64     11 21 62 FC | 	wrlong	local05, local06
08d68     08 22 06 F1 | 	add	local06, #8
08d6c     11 29 62 FC | 	wrlong	local09, local06
08d70     14 21 02 F6 | 	mov	local05, local09
08d74     1A 39 02 F6 | 	mov	local17, local15
08d78     0F 38 46 F7 | 	zerox	local17, #15
08d7c     1C 21 02 F1 | 	add	local05, local17
08d80     04 22 06 F1 | 	add	local06, #4
08d84     11 21 62 FC | 	wrlong	local05, local06
08d88     14 21 02 F6 | 	mov	local05, local09
08d8c     1B 21 02 F1 | 	add	local05, local16
08d90     08 22 06 F1 | 	add	local06, #8
08d94     11 21 62 FC | 	wrlong	local05, local06
08d98     2C 22 86 F1 | 	sub	local06, #44
08d9c     03 26 0E F2 | 	cmp	local08, #3 wz
08da0     6C 00 90 5D |  if_ne	jmp	#LR__0628
08da4     34 22 06 F1 | 	add	local06, #52
08da8     11 0F 02 F6 | 	mov	arg01, local06
08dac     34 22 86 F1 | 	sub	local06, #52
08db0     2A 0E 06 F1 | 	add	arg01, #42
08db4     A4 C6 BF FD | 	call	#_ff_cc_ld_word_0191
08db8     FA 20 02 F6 | 	mov	local05, result1
08dbc     0F 20 4E F7 | 	zerox	local05, #15 wz
08dc0     0D F4 05 56 |  if_ne	mov	result1, #13
08dc4     68 02 90 5D |  if_ne	jmp	#LR__0634
08dc8     08 22 06 F1 | 	add	local06, #8
08dcc     11 21 E2 FA | 	rdword	local05, local06
08dd0     08 22 86 F1 | 	sub	local06, #8
08dd4     0F 20 4E F7 | 	zerox	local05, #15 wz
08dd8     0D F4 05 56 |  if_ne	mov	result1, #13
08ddc     50 02 90 5D |  if_ne	jmp	#LR__0634
08de0     34 22 06 F1 | 	add	local06, #52
08de4     11 0F 02 F6 | 	mov	arg01, local06
08de8     34 22 86 F1 | 	sub	local06, #52
08dec     2C 0E 06 F1 | 	add	arg01, #44
08df0     8C C6 BF FD | 	call	#_ff_cc_ld_dword_0193
08df4     28 22 06 F1 | 	add	local06, #40
08df8     11 F5 61 FC | 	wrlong	result1, local06
08dfc     10 22 86 F1 | 	sub	local06, #16
08e00     11 3F 02 FB | 	rdlong	local20, local06
08e04     18 22 86 F1 | 	sub	local06, #24
08e08     02 3E 66 F0 | 	shl	local20, #2
08e0c     84 00 90 FD | 	jmp	#LR__0631
08e10                 | LR__0628
08e10     08 22 06 F1 | 	add	local06, #8
08e14     11 21 E2 FA | 	rdword	local05, local06
08e18     08 22 86 F1 | 	sub	local06, #8
08e1c     0F 20 4E F7 | 	zerox	local05, #15 wz
08e20     0D F4 05 A6 |  if_e	mov	result1, #13
08e24     08 02 90 AD |  if_e	jmp	#LR__0634
08e28     24 22 06 F1 | 	add	local06, #36
08e2c     11 21 02 FB | 	rdlong	local05, local06
08e30     15 21 02 F1 | 	add	local05, local10
08e34     04 22 06 F1 | 	add	local06, #4
08e38     11 21 62 FC | 	wrlong	local05, local06
08e3c     28 22 86 F1 | 	sub	local06, #40
08e40     02 26 0E F2 | 	cmp	local08, #2 wz
08e44     14 00 90 5D |  if_ne	jmp	#LR__0629
08e48     18 22 06 F1 | 	add	local06, #24
08e4c     11 21 02 FB | 	rdlong	local05, local06
08e50     18 22 86 F1 | 	sub	local06, #24
08e54     01 20 66 F0 | 	shl	local05, #1
08e58     34 00 90 FD | 	jmp	#LR__0630
08e5c                 | LR__0629
08e5c     18 22 06 F1 | 	add	local06, #24
08e60     11 41 02 FB | 	rdlong	local21, local06
08e64     20 43 02 F6 | 	mov	local22, local21
08e68     21 2F 02 F6 | 	mov	local12, local22
08e6c     01 2E 66 F0 | 	shl	local12, #1
08e70     21 2F 02 F1 | 	add	local12, local22
08e74     17 21 02 F6 | 	mov	local05, local12
08e78     01 20 46 F0 | 	shr	local05, #1
08e7c     20 45 02 F6 | 	mov	local23, local21
08e80     18 22 86 F1 | 	sub	local06, #24
08e84     22 47 02 F6 | 	mov	local24, local23
08e88     01 46 06 F5 | 	and	local24, #1
08e8c     23 21 02 F1 | 	add	local05, local24
08e90                 | LR__0630
08e90     10 3F 02 F6 | 	mov	local20, local05
08e94                 | LR__0631
08e94     1F 39 02 F6 | 	mov	local17, local20
08e98     FF 39 06 F1 | 	add	local17, #511
08e9c     09 38 46 F0 | 	shr	local17, #9
08ea0     1C 22 06 F1 | 	add	local06, #28
08ea4     11 2D 02 FB | 	rdlong	local11, local06
08ea8     1C 22 86 F1 | 	sub	local06, #28
08eac     1C 2D 12 F2 | 	cmp	local11, local17 wc
08eb0     0D F4 05 C6 |  if_b	mov	result1, #13
08eb4     78 01 90 CD |  if_b	jmp	#LR__0634
08eb8     14 22 06 F1 | 	add	local06, #20
08ebc     FF FF FF FF 
08ec0     11 FF 6B FC | 	wrlong	##-1, local06
08ec4     04 22 86 F1 | 	sub	local06, #4
08ec8     FF FF FF FF 
08ecc     11 FF 6B FC | 	wrlong	##-1, local06
08ed0     0C 22 86 F1 | 	sub	local06, #12
08ed4     11 01 49 FC | 	wrbyte	#128, local06
08ed8     04 22 86 F1 | 	sub	local06, #4
08edc     03 26 0E F2 | 	cmp	local08, #3 wz
08ee0     18 01 90 5D |  if_ne	jmp	#LR__0633
08ee4     34 22 06 F1 | 	add	local06, #52
08ee8     11 0F 02 F6 | 	mov	arg01, local06
08eec     34 22 86 F1 | 	sub	local06, #52
08ef0     30 0E 06 F1 | 	add	arg01, #48
08ef4     64 C5 BF FD | 	call	#_ff_cc_ld_word_0191
08ef8     FA 20 02 F6 | 	mov	local05, result1
08efc     0F 20 46 F7 | 	zerox	local05, #15
08f00     01 20 0E F2 | 	cmp	local05, #1 wz
08f04     F4 00 90 5D |  if_ne	jmp	#LR__0633
08f08     14 31 02 F6 | 	mov	local13, local09
08f0c     01 30 06 F1 | 	add	local13, #1
08f10     11 0F 02 F6 | 	mov	arg01, local06
08f14     18 11 02 F6 | 	mov	arg02, local13
08f18     A4 C8 BF FD | 	call	#_ff_cc_move_window_0218
08f1c     00 F4 0D F2 | 	cmp	result1, #0 wz
08f20     D8 00 90 5D |  if_ne	jmp	#LR__0633
08f24     04 22 06 F1 | 	add	local06, #4
08f28     11 01 48 FC | 	wrbyte	#0, local06
08f2c     30 22 06 F1 | 	add	local06, #48
08f30     11 3B 02 F6 | 	mov	local18, local06
08f34     1D 2D 02 F6 | 	mov	local11, local18
08f38     FE 2D 06 F1 | 	add	local11, #510
08f3c     16 0F 02 F6 | 	mov	arg01, local11
08f40     34 22 86 F1 | 	sub	local06, #52
08f44     14 C5 BF FD | 	call	#_ff_cc_ld_word_0191
08f48     FA 38 02 F6 | 	mov	local17, result1
08f4c     1C 21 02 F6 | 	mov	local05, local17
08f50     0F 20 46 F7 | 	zerox	local05, #15
08f54     55 00 00 FF 
08f58     55 20 0E F2 | 	cmp	local05, ##43605 wz
08f5c     9C 00 90 5D |  if_ne	jmp	#LR__0632
08f60     34 22 06 F1 | 	add	local06, #52
08f64     11 31 02 F6 | 	mov	local13, local06
08f68     18 3B 02 F6 | 	mov	local18, local13
08f6c     1D 0F 02 F6 | 	mov	arg01, local18
08f70     34 22 86 F1 | 	sub	local06, #52
08f74     08 C5 BF FD | 	call	#_ff_cc_ld_dword_0193
08f78     FA 2C 02 F6 | 	mov	local11, result1
08f7c     A9 B0 20 FF 
08f80     52 2C 0E F2 | 	cmp	local11, ##1096897106 wz
08f84     74 00 90 5D |  if_ne	jmp	#LR__0632
08f88     34 22 06 F1 | 	add	local06, #52
08f8c     11 2F 02 F6 | 	mov	local12, local06
08f90     17 31 02 F6 | 	mov	local13, local12
08f94     E4 31 06 F1 | 	add	local13, #484
08f98     18 0F 02 F6 | 	mov	arg01, local13
08f9c     34 22 86 F1 | 	sub	local06, #52
08fa0     DC C4 BF FD | 	call	#_ff_cc_ld_dword_0193
08fa4     FA 3A 02 F6 | 	mov	local18, result1
08fa8     B9 A0 30 FF 
08fac     72 3A 0E F2 | 	cmp	local18, ##1631679090 wz
08fb0     48 00 90 5D |  if_ne	jmp	#LR__0632
08fb4     34 22 06 F1 | 	add	local06, #52
08fb8     11 0F 02 F6 | 	mov	arg01, local06
08fbc     34 22 86 F1 | 	sub	local06, #52
08fc0     E8 0F 06 F1 | 	add	arg01, #488
08fc4     B8 C4 BF FD | 	call	#_ff_cc_ld_dword_0193
08fc8     14 22 06 F1 | 	add	local06, #20
08fcc     11 F5 61 FC | 	wrlong	result1, local06
08fd0     20 22 06 F1 | 	add	local06, #32
08fd4     11 2D 02 F6 | 	mov	local11, local06
08fd8     16 39 02 F6 | 	mov	local17, local11
08fdc     EC 39 06 F1 | 	add	local17, #492
08fe0     1C 0F 02 F6 | 	mov	arg01, local17
08fe4     34 22 86 F1 | 	sub	local06, #52
08fe8     94 C4 BF FD | 	call	#_ff_cc_ld_dword_0193
08fec     FA 20 02 F6 | 	mov	local05, result1
08ff0     10 22 06 F1 | 	add	local06, #16
08ff4     11 21 62 FC | 	wrlong	local05, local06
08ff8     10 22 86 F1 | 	sub	local06, #16
08ffc                 | LR__0632
08ffc                 | LR__0633
08ffc     11 27 42 FC | 	wrbyte	local08, local06
09000     04 F0 05 F1 | 	add	ptr__ff_cc_dat__, #4
09004     F8 20 E2 FA | 	rdword	local05, ptr__ff_cc_dat__
09008     01 20 06 F1 | 	add	local05, #1
0900c     F8 20 52 FC | 	wrword	local05, ptr__ff_cc_dat__
09010     F8 2C E2 FA | 	rdword	local11, ptr__ff_cc_dat__
09014     06 22 06 F1 | 	add	local06, #6
09018     11 2D 52 FC | 	wrword	local11, local06
0901c     10 F0 05 F1 | 	add	ptr__ff_cc_dat__, #16
09020     06 22 06 F1 | 	add	local06, #6
09024     11 F1 61 FC | 	wrlong	ptr__ff_cc_dat__, local06
09028                 | ' 				&& ld_dword(fs->win +  0 ) == 0x41615252
09028                 | ' 				&& ld_dword(fs->win +  484 ) == 0x61417272)
09028                 | ' 			{
09028                 | ' 
09028                 | ' 				fs->free_clst = ld_dword(fs->win +  488 );
09028                 | ' 
09028                 | ' 
09028                 | ' 				fs->last_clst = ld_dword(fs->win +  492 );
09028                 | ' 
09028                 | ' 			}
09028                 | ' 		}
09028                 | ' 
09028                 | ' 
09028                 | ' 	}
09028                 | ' 
09028                 | ' 	fs->fs_type = (BYTE)fmt;
09028                 | ' 	fs->id = ++Fsid;
09028                 | ' 
09028                 | ' 	fs->lfnbuf = LfnBuf;
09028                 | ' #line 3608 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
09028                 | ' 	return FR_OK;
09028     00 F4 05 F6 | 	mov	result1, #0
0902c     14 F0 85 F1 | 	sub	ptr__ff_cc_dat__, #20
09030                 | LR__0634
09030     A8 F0 03 F6 | 	mov	ptra, fp
09034     B3 00 A0 FD | 	call	#popregs_
09038                 | _ff_cc_mount_volume_0355_ret
09038     2D 00 64 FD | 	ret
0903c                 | 
0903c                 | _ff_cc_validate_0357
0903c     0B 4C 05 F6 | 	mov	COUNT_, #11
09040     A9 00 A0 FD | 	call	#pushregs_
09044     07 19 0A F6 | 	mov	local01, arg01 wz
09048     08 1B 02 F6 | 	mov	local02, arg02
0904c     09 1C 06 F6 | 	mov	local03, #9
09050     88 00 90 AD |  if_e	jmp	#LR__0635
09054     0C 1F 0A FB | 	rdlong	local04, local01 wz
09058     80 00 90 AD |  if_e	jmp	#LR__0635
0905c     0C 21 02 FB | 	rdlong	local05, local01
09060     10 23 CA FA | 	rdbyte	local06, local05 wz
09064     74 00 90 AD |  if_e	jmp	#LR__0635
09068     04 18 06 F1 | 	add	local01, #4
0906c     0C 25 E2 FA | 	rdword	local07, local01
09070     04 18 86 F1 | 	sub	local01, #4
09074     12 27 02 F6 | 	mov	local08, local07
09078     0F 26 46 F7 | 	zerox	local08, #15
0907c     0C 29 02 FB | 	rdlong	local09, local01
09080     06 28 06 F1 | 	add	local09, #6
09084     14 2B E2 FA | 	rdword	local10, local09
09088     06 28 86 F1 | 	sub	local09, #6
0908c     15 2D 02 F6 | 	mov	local11, local10
09090     0F 2C 46 F7 | 	zerox	local11, #15
09094     16 27 0A F2 | 	cmp	local08, local11 wz
09098     40 00 90 5D |  if_ne	jmp	#LR__0635
0909c     0C 23 02 FB | 	rdlong	local06, local01
090a0     01 22 06 F1 | 	add	local06, #1
090a4     11 27 C2 FA | 	rdbyte	local08, local06
090a8     01 22 86 F1 | 	sub	local06, #1
090ac     13 0F 0A F6 | 	mov	arg01, local08 wz
090b0     01 F4 05 56 |  if_ne	mov	result1, #1
090b4                 | ' 
090b4                 | ' 	return Stat;
090b4     03 00 00 AF 
090b8     44 F1 05 A1 |  if_e	add	ptr__ff_cc_dat__, ##1860
090bc     F8 F4 C1 AA |  if_e	rdbyte	result1, ptr__ff_cc_dat__
090c0     03 00 00 AF 
090c4     44 F1 85 A1 |  if_e	sub	ptr__ff_cc_dat__, ##1860
090c8     FA 20 02 F6 | 	mov	local05, result1
090cc     10 1F 02 F6 | 	mov	local04, local05
090d0     07 1E 46 F7 | 	zerox	local04, #7
090d4     01 1E 0E F5 | 	and	local04, #1 wz
090d8     00 1C 06 A6 |  if_e	mov	local03, #0
090dc                 | LR__0635
090dc     00 1C 0E F2 | 	cmp	local03, #0 wz
090e0     0C 1F 02 AB |  if_e	rdlong	local04, local01
090e4     00 1E 06 56 |  if_ne	mov	local04, #0
090e8     0D 1F 62 FC | 	wrlong	local04, local02
090ec                 | ' 			res = FR_OK;
090ec                 | ' 		}
090ec                 | ' 
090ec                 | ' 	}
090ec                 | ' 	*rfs = (res == FR_OK) ? obj->fs : 0;
090ec                 | ' 	return res;
090ec     0E F5 01 F6 | 	mov	result1, local03
090f0     A8 F0 03 F6 | 	mov	ptra, fp
090f4     B3 00 A0 FD | 	call	#popregs_
090f8                 | _ff_cc_validate_0357_ret
090f8     2D 00 64 FD | 	ret
090fc                 | 
090fc                 | _ff_cc_f_mount
090fc     02 4C 05 F6 | 	mov	COUNT_, #2
09100     A9 00 A0 FD | 	call	#pushregs_
09104     20 F0 07 F1 | 	add	ptra, #32
09108     04 50 05 F1 | 	add	fp, #4
0910c     A8 0E 62 FC | 	wrlong	arg01, fp
09110     04 50 05 F1 | 	add	fp, #4
09114     A8 10 62 FC | 	wrlong	arg02, fp
09118     04 50 05 F1 | 	add	fp, #4
0911c     A8 12 42 FC | 	wrbyte	arg03, fp
09120     04 50 85 F1 | 	sub	fp, #4
09124     A8 18 02 FB | 	rdlong	local01, fp
09128     14 50 05 F1 | 	add	fp, #20
0912c     A8 18 62 FC | 	wrlong	local01, fp
09130     A8 0E 02 F6 | 	mov	arg01, fp
09134     1C 50 85 F1 | 	sub	fp, #28
09138     A8 F5 BF FD | 	call	#_ff_cc_get_ldnumber_0338
0913c     14 50 05 F1 | 	add	fp, #20
09140     A8 F4 61 FC | 	wrlong	result1, fp
09144     14 50 85 F1 | 	sub	fp, #20
09148     00 F4 55 F2 | 	cmps	result1, #0 wc
0914c     0B F4 05 C6 |  if_b	mov	result1, #11
09150     B0 00 90 CD |  if_b	jmp	#LR__0638
09154     14 50 05 F1 | 	add	fp, #20
09158     A8 18 02 FB | 	rdlong	local01, fp
0915c     02 18 66 F0 | 	shl	local01, #2
09160     F8 18 02 F1 | 	add	local01, ptr__ff_cc_dat__
09164     0C 19 0A FB | 	rdlong	local01, local01 wz
09168     04 50 85 F1 | 	sub	fp, #4
0916c     A8 18 62 FC | 	wrlong	local01, fp
09170     10 50 85 F1 | 	sub	fp, #16
09174     10 00 90 AD |  if_e	jmp	#LR__0636
09178     10 50 05 F1 | 	add	fp, #16
0917c     A8 18 02 FB | 	rdlong	local01, fp
09180     10 50 85 F1 | 	sub	fp, #16
09184     0C 01 48 FC | 	wrbyte	#0, local01
09188                 | LR__0636
09188     04 50 05 F1 | 	add	fp, #4
0918c     A8 18 0A FB | 	rdlong	local01, fp wz
09190     04 50 85 F1 | 	sub	fp, #4
09194     10 00 90 AD |  if_e	jmp	#LR__0637
09198     04 50 05 F1 | 	add	fp, #4
0919c     A8 18 02 FB | 	rdlong	local01, fp
091a0     04 50 85 F1 | 	sub	fp, #4
091a4     0C 01 48 FC | 	wrbyte	#0, local01
091a8                 | LR__0637
091a8     14 50 05 F1 | 	add	fp, #20
091ac     A8 18 02 FB | 	rdlong	local01, fp
091b0     02 18 66 F0 | 	shl	local01, #2
091b4     F8 18 02 F1 | 	add	local01, ptr__ff_cc_dat__
091b8     10 50 85 F1 | 	sub	fp, #16
091bc     A8 1A 02 FB | 	rdlong	local02, fp
091c0     0C 1B 62 FC | 	wrlong	local02, local01
091c4     08 50 05 F1 | 	add	fp, #8
091c8     A8 18 C2 FA | 	rdbyte	local01, fp
091cc     0C 50 85 F1 | 	sub	fp, #12
091d0     07 18 4E F7 | 	zerox	local01, #7 wz
091d4     00 F4 05 A6 |  if_e	mov	result1, #0
091d8     28 00 90 AD |  if_e	jmp	#LR__0638
091dc     08 50 05 F1 | 	add	fp, #8
091e0     A8 0E 02 F6 | 	mov	arg01, fp
091e4     04 50 85 F1 | 	sub	fp, #4
091e8     A8 10 02 F6 | 	mov	arg02, fp
091ec     04 50 85 F1 | 	sub	fp, #4
091f0     00 12 06 F6 | 	mov	arg03, #0
091f4     F8 F7 BF FD | 	call	#_ff_cc_mount_volume_0355
091f8     18 50 05 F1 | 	add	fp, #24
091fc     A8 F4 61 FC | 	wrlong	result1, fp
09200                 | ' 
09200                 | ' 	res = mount_volume(&path, &fs, 0);
09200                 | ' 	return res ;
09200     18 50 85 F1 | 	sub	fp, #24
09204                 | LR__0638
09204     A8 F0 03 F6 | 	mov	ptra, fp
09208     B3 00 A0 FD | 	call	#popregs_
0920c                 | _ff_cc_f_mount_ret
0920c     2D 00 64 FD | 	ret
09210                 | 
09210                 | _ff_cc_f_open
09210     0D 4C 05 F6 | 	mov	COUNT_, #13
09214     A9 00 A0 FD | 	call	#pushregs_
09218     5C F0 07 F1 | 	add	ptra, #92
0921c     04 50 05 F1 | 	add	fp, #4
09220     A8 0E 62 FC | 	wrlong	arg01, fp
09224     04 50 05 F1 | 	add	fp, #4
09228     A8 10 62 FC | 	wrlong	arg02, fp
0922c     04 50 05 F1 | 	add	fp, #4
09230     A8 12 42 FC | 	wrbyte	arg03, fp
09234     08 50 85 F1 | 	sub	fp, #8
09238     A8 18 0A FB | 	rdlong	local01, fp wz
0923c     04 50 85 F1 | 	sub	fp, #4
09240     09 F4 05 A6 |  if_e	mov	result1, #9
09244     D0 06 90 AD |  if_e	jmp	#LR__0662
09248     0C 50 05 F1 | 	add	fp, #12
0924c     A8 18 C2 FA | 	rdbyte	local01, fp
09250     3F 18 06 F5 | 	and	local01, #63
09254     A8 18 42 FC | 	wrbyte	local01, fp
09258     04 50 85 F1 | 	sub	fp, #4
0925c     A8 0E 02 F6 | 	mov	arg01, fp
09260     3C 50 05 F1 | 	add	fp, #60
09264     A8 10 02 F6 | 	mov	arg02, fp
09268     38 50 85 F1 | 	sub	fp, #56
0926c     A8 1A C2 FA | 	rdbyte	local02, fp
09270     0C 50 85 F1 | 	sub	fp, #12
09274     0D 13 02 F6 | 	mov	arg03, local02
09278     74 F7 BF FD | 	call	#_ff_cc_mount_volume_0355
0927c     10 50 05 F1 | 	add	fp, #16
09280     A8 F4 61 FC | 	wrlong	result1, fp
09284     10 50 85 F1 | 	sub	fp, #16
09288     00 F4 0D F2 | 	cmp	result1, #0 wz
0928c     5C 06 90 5D |  if_ne	jmp	#LR__0660
09290     44 50 05 F1 | 	add	fp, #68
09294     A8 18 02 FB | 	rdlong	local01, fp
09298     30 50 85 F1 | 	sub	fp, #48
0929c     A8 18 62 FC | 	wrlong	local01, fp
092a0     A8 0E 02 F6 | 	mov	arg01, fp
092a4     0C 50 85 F1 | 	sub	fp, #12
092a8     A8 1C 02 FB | 	rdlong	local03, fp
092ac     08 50 85 F1 | 	sub	fp, #8
092b0     0E 11 02 F6 | 	mov	arg02, local03
092b4     10 F2 BF FD | 	call	#_ff_cc_follow_path_0332
092b8     10 50 05 F1 | 	add	fp, #16
092bc     A8 F4 61 FC | 	wrlong	result1, fp
092c0     10 50 85 F1 | 	sub	fp, #16
092c4     00 F4 0D F2 | 	cmp	result1, #0 wz
092c8     20 00 90 5D |  if_ne	jmp	#LR__0639
092cc     3F 50 05 F1 | 	add	fp, #63
092d0     A8 18 C2 FA | 	rdbyte	local01, fp
092d4     3F 50 85 F1 | 	sub	fp, #63
092d8     07 18 46 F7 | 	zerox	local01, #7
092dc     80 18 CE F7 | 	test	local01, #128 wz
092e0     10 50 05 51 |  if_ne	add	fp, #16
092e4     A8 0C 68 5C |  if_ne	wrlong	#6, fp
092e8     10 50 85 51 |  if_ne	sub	fp, #16
092ec                 | LR__0639
092ec     0C 50 05 F1 | 	add	fp, #12
092f0     A8 18 C2 FA | 	rdbyte	local01, fp
092f4     0C 50 85 F1 | 	sub	fp, #12
092f8     07 18 46 F7 | 	zerox	local01, #7
092fc     1C 18 CE F7 | 	test	local01, #28 wz
09300     FC 01 90 AD |  if_e	jmp	#LR__0645
09304     10 50 05 F1 | 	add	fp, #16
09308     A8 18 0A FB | 	rdlong	local01, fp wz
0930c     10 50 85 F1 | 	sub	fp, #16
09310     48 00 90 AD |  if_e	jmp	#LR__0641
09314     10 50 05 F1 | 	add	fp, #16
09318     A8 18 02 FB | 	rdlong	local01, fp
0931c     10 50 85 F1 | 	sub	fp, #16
09320     04 18 0E F2 | 	cmp	local01, #4 wz
09324     1C 00 90 5D |  if_ne	jmp	#LR__0640
09328     14 50 05 F1 | 	add	fp, #20
0932c     A8 0E 02 F6 | 	mov	arg01, fp
09330     14 50 85 F1 | 	sub	fp, #20
09334     50 DE BF FD | 	call	#_ff_cc_dir_register_0306
09338     10 50 05 F1 | 	add	fp, #16
0933c     A8 F4 61 FC | 	wrlong	result1, fp
09340     10 50 85 F1 | 	sub	fp, #16
09344                 | LR__0640
09344     0C 50 05 F1 | 	add	fp, #12
09348     A8 18 C2 FA | 	rdbyte	local01, fp
0934c     08 18 46 F5 | 	or	local01, #8
09350     A8 18 42 FC | 	wrbyte	local01, fp
09354     0C 50 85 F1 | 	sub	fp, #12
09358     48 00 90 FD | 	jmp	#LR__0644
0935c                 | LR__0641
0935c     1A 50 05 F1 | 	add	fp, #26
09360     A8 18 C2 FA | 	rdbyte	local01, fp
09364     1A 50 85 F1 | 	sub	fp, #26
09368     07 18 46 F7 | 	zerox	local01, #7
0936c     11 18 CE F7 | 	test	local01, #17 wz
09370     10 00 90 AD |  if_e	jmp	#LR__0642
09374     10 50 05 F1 | 	add	fp, #16
09378     A8 0E 68 FC | 	wrlong	#7, fp
0937c     10 50 85 F1 | 	sub	fp, #16
09380     20 00 90 FD | 	jmp	#LR__0643
09384                 | LR__0642
09384     0C 50 05 F1 | 	add	fp, #12
09388     A8 18 C2 FA | 	rdbyte	local01, fp
0938c     0C 50 85 F1 | 	sub	fp, #12
09390     07 18 46 F7 | 	zerox	local01, #7
09394     04 18 CE F7 | 	test	local01, #4 wz
09398     10 50 05 51 |  if_ne	add	fp, #16
0939c     A8 10 68 5C |  if_ne	wrlong	#8, fp
093a0     10 50 85 51 |  if_ne	sub	fp, #16
093a4                 | LR__0643
093a4                 | LR__0644
093a4     10 50 05 F1 | 	add	fp, #16
093a8     A8 18 0A FB | 	rdlong	local01, fp wz
093ac     10 50 85 F1 | 	sub	fp, #16
093b0     CC 01 90 5D |  if_ne	jmp	#LR__0650
093b4     0C 50 05 F1 | 	add	fp, #12
093b8     A8 1C C2 FA | 	rdbyte	local03, fp
093bc     0C 50 85 F1 | 	sub	fp, #12
093c0     07 1C 46 F7 | 	zerox	local03, #7
093c4     08 1C CE F7 | 	test	local03, #8 wz
093c8     B4 01 90 AD |  if_e	jmp	#LR__0650
093cc     44 50 05 F1 | 	add	fp, #68
093d0     A8 0E 02 FB | 	rdlong	arg01, fp
093d4     14 50 85 F1 | 	sub	fp, #20
093d8     A8 10 02 FB | 	rdlong	arg02, fp
093dc     30 50 85 F1 | 	sub	fp, #48
093e0     FC D2 BF FD | 	call	#_ff_cc_ld_clust_0259
093e4     48 50 05 F1 | 	add	fp, #72
093e8     A8 F4 61 FC | 	wrlong	result1, fp
093ec     18 50 85 F1 | 	sub	fp, #24
093f0     A8 0E 02 FB | 	rdlong	arg01, fp
093f4     30 50 85 F1 | 	sub	fp, #48
093f8     0E 0E 06 F1 | 	add	arg01, #14
093fc     80 10 27 FF 
09400     00 10 06 F6 | 	mov	arg02, ##1310785536
09404     DC C0 BF FD | 	call	#_ff_cc_st_dword_0195
09408     30 50 05 F1 | 	add	fp, #48
0940c     A8 18 02 FB | 	rdlong	local01, fp
09410     0B 18 06 F1 | 	add	local01, #11
09414     0C 41 48 FC | 	wrbyte	#32, local01
09418     14 50 05 F1 | 	add	fp, #20
0941c     A8 0E 02 FB | 	rdlong	arg01, fp
09420     14 50 85 F1 | 	sub	fp, #20
09424     A8 10 02 FB | 	rdlong	arg02, fp
09428     30 50 85 F1 | 	sub	fp, #48
0942c     00 12 06 F6 | 	mov	arg03, #0
09430     04 D3 BF FD | 	call	#_ff_cc_st_clust_0260
09434     30 50 05 F1 | 	add	fp, #48
09438     A8 0E 02 FB | 	rdlong	arg01, fp
0943c     30 50 85 F1 | 	sub	fp, #48
09440     1C 0E 06 F1 | 	add	arg01, #28
09444     00 10 06 F6 | 	mov	arg02, #0
09448     98 C0 BF FD | 	call	#_ff_cc_st_dword_0195
0944c     44 50 05 F1 | 	add	fp, #68
09450     A8 18 02 FB | 	rdlong	local01, fp
09454     03 18 06 F1 | 	add	local01, #3
09458     0C 03 48 FC | 	wrbyte	#1, local01
0945c     04 50 05 F1 | 	add	fp, #4
09460     A8 1E 02 FB | 	rdlong	local04, fp
09464     48 50 85 F1 | 	sub	fp, #72
09468     0F 19 0A F6 | 	mov	local01, local04 wz
0946c     10 01 90 AD |  if_e	jmp	#LR__0650
09470     44 50 05 F1 | 	add	fp, #68
09474     A8 18 02 FB | 	rdlong	local01, fp
09478     30 18 06 F1 | 	add	local01, #48
0947c     0C 1D 02 FB | 	rdlong	local03, local01
09480     10 50 05 F1 | 	add	fp, #16
09484     A8 1C 62 FC | 	wrlong	local03, fp
09488     40 50 85 F1 | 	sub	fp, #64
0948c     A8 0E 02 F6 | 	mov	arg01, fp
09490     34 50 05 F1 | 	add	fp, #52
09494     A8 10 02 FB | 	rdlong	arg02, fp
09498     48 50 85 F1 | 	sub	fp, #72
0949c     00 12 06 F6 | 	mov	arg03, #0
094a0     DC C9 BF FD | 	call	#_ff_cc_remove_chain_0234
094a4     10 50 05 F1 | 	add	fp, #16
094a8     A8 F4 61 FC | 	wrlong	result1, fp
094ac     FA 1E 02 F6 | 	mov	local04, result1
094b0     10 50 85 F1 | 	sub	fp, #16
094b4     0F 19 0A F6 | 	mov	local01, local04 wz
094b8     C4 00 90 5D |  if_ne	jmp	#LR__0650
094bc     44 50 05 F1 | 	add	fp, #68
094c0     A8 0E 02 FB | 	rdlong	arg01, fp
094c4     10 50 05 F1 | 	add	fp, #16
094c8     A8 10 02 FB | 	rdlong	arg02, fp
094cc     54 50 85 F1 | 	sub	fp, #84
094d0     EC C2 BF FD | 	call	#_ff_cc_move_window_0218
094d4     10 50 05 F1 | 	add	fp, #16
094d8     A8 F4 61 FC | 	wrlong	result1, fp
094dc     34 50 05 F1 | 	add	fp, #52
094e0     A8 18 02 FB | 	rdlong	local01, fp
094e4     04 50 05 F1 | 	add	fp, #4
094e8     A8 1C 02 FB | 	rdlong	local03, fp
094ec     48 50 85 F1 | 	sub	fp, #72
094f0     01 1C 86 F1 | 	sub	local03, #1
094f4     10 18 06 F1 | 	add	local01, #16
094f8     0C 1D 62 FC | 	wrlong	local03, local01
094fc     80 00 90 FD | 	jmp	#LR__0650
09500                 | LR__0645
09500     10 50 05 F1 | 	add	fp, #16
09504     A8 18 0A FB | 	rdlong	local01, fp wz
09508     10 50 85 F1 | 	sub	fp, #16
0950c     70 00 90 5D |  if_ne	jmp	#LR__0649
09510     1A 50 05 F1 | 	add	fp, #26
09514     A8 18 C2 FA | 	rdbyte	local01, fp
09518     1A 50 85 F1 | 	sub	fp, #26
0951c     07 18 46 F7 | 	zerox	local01, #7
09520     10 18 CE F7 | 	test	local01, #16 wz
09524     10 00 90 AD |  if_e	jmp	#LR__0646
09528     10 50 05 F1 | 	add	fp, #16
0952c     A8 08 68 FC | 	wrlong	#4, fp
09530     10 50 85 F1 | 	sub	fp, #16
09534     48 00 90 FD | 	jmp	#LR__0648
09538                 | LR__0646
09538     0C 50 05 F1 | 	add	fp, #12
0953c     A8 1E C2 FA | 	rdbyte	local04, fp
09540     0C 50 85 F1 | 	sub	fp, #12
09544     0F 19 02 F6 | 	mov	local01, local04
09548     07 18 46 F7 | 	zerox	local01, #7
0954c     02 18 CE F7 | 	test	local01, #2 wz
09550     2C 00 90 AD |  if_e	jmp	#LR__0647
09554     1A 50 05 F1 | 	add	fp, #26
09558     A8 1A C2 FA | 	rdbyte	local02, fp
0955c     1A 50 85 F1 | 	sub	fp, #26
09560     0D 1D 02 F6 | 	mov	local03, local02
09564     07 1C 46 F7 | 	zerox	local03, #7
09568     01 1C 0E F5 | 	and	local03, #1 wz
0956c     10 00 90 AD |  if_e	jmp	#LR__0647
09570     07 18 06 F6 | 	mov	local01, #7
09574     10 50 05 F1 | 	add	fp, #16
09578     A8 0E 68 FC | 	wrlong	#7, fp
0957c     10 50 85 F1 | 	sub	fp, #16
09580                 | LR__0647
09580                 | LR__0648
09580                 | LR__0649
09580                 | LR__0650
09580     10 50 05 F1 | 	add	fp, #16
09584     A8 18 0A FB | 	rdlong	local01, fp wz
09588     10 50 85 F1 | 	sub	fp, #16
0958c     68 00 90 5D |  if_ne	jmp	#LR__0652
09590     0C 50 05 F1 | 	add	fp, #12
09594     A8 18 C2 FA | 	rdbyte	local01, fp
09598     0C 50 85 F1 | 	sub	fp, #12
0959c     07 18 46 F7 | 	zerox	local01, #7
095a0     08 18 CE F7 | 	test	local01, #8 wz
095a4     14 00 90 AD |  if_e	jmp	#LR__0651
095a8     0C 50 05 F1 | 	add	fp, #12
095ac     A8 18 C2 FA | 	rdbyte	local01, fp
095b0     40 18 46 F5 | 	or	local01, #64
095b4     A8 18 42 FC | 	wrbyte	local01, fp
095b8     0C 50 85 F1 | 	sub	fp, #12
095bc                 | LR__0651
095bc     04 50 05 F1 | 	add	fp, #4
095c0     A8 18 02 FB | 	rdlong	local01, fp
095c4     40 50 05 F1 | 	add	fp, #64
095c8     A8 1C 02 FB | 	rdlong	local03, fp
095cc     30 1C 06 F1 | 	add	local03, #48
095d0     0E 21 02 FB | 	rdlong	local05, local03
095d4     20 18 06 F1 | 	add	local01, #32
095d8     0C 21 62 FC | 	wrlong	local05, local01
095dc     40 50 85 F1 | 	sub	fp, #64
095e0     A8 18 02 FB | 	rdlong	local01, fp
095e4     2C 50 05 F1 | 	add	fp, #44
095e8     A8 1C 02 FB | 	rdlong	local03, fp
095ec     30 50 85 F1 | 	sub	fp, #48
095f0     24 18 06 F1 | 	add	local01, #36
095f4     0C 1D 62 FC | 	wrlong	local03, local01
095f8                 | LR__0652
095f8     10 50 05 F1 | 	add	fp, #16
095fc     A8 18 0A FB | 	rdlong	local01, fp wz
09600     10 50 85 F1 | 	sub	fp, #16
09604     E4 02 90 5D |  if_ne	jmp	#LR__0659
09608     04 50 05 F1 | 	add	fp, #4
0960c     A8 18 02 FB | 	rdlong	local01, fp
09610     40 50 05 F1 | 	add	fp, #64
09614     A8 0E 02 FB | 	rdlong	arg01, fp
09618     14 50 85 F1 | 	sub	fp, #20
0961c     A8 10 02 FB | 	rdlong	arg02, fp
09620     30 50 85 F1 | 	sub	fp, #48
09624     B8 D0 BF FD | 	call	#_ff_cc_ld_clust_0259
09628     08 18 06 F1 | 	add	local01, #8
0962c     0C F5 61 FC | 	wrlong	result1, local01
09630     04 50 05 F1 | 	add	fp, #4
09634     A8 18 02 FB | 	rdlong	local01, fp
09638     2C 50 05 F1 | 	add	fp, #44
0963c     A8 0E 02 FB | 	rdlong	arg01, fp
09640     30 50 85 F1 | 	sub	fp, #48
09644     1C 0E 06 F1 | 	add	arg01, #28
09648     34 BE BF FD | 	call	#_ff_cc_ld_dword_0193
0964c     0C 18 06 F1 | 	add	local01, #12
09650     0C F5 61 FC | 	wrlong	result1, local01
09654     04 50 05 F1 | 	add	fp, #4
09658     A8 18 02 FB | 	rdlong	local01, fp
0965c     40 50 05 F1 | 	add	fp, #64
09660     A8 1C 02 FB | 	rdlong	local03, fp
09664     0C 1D 62 FC | 	wrlong	local03, local01
09668     40 50 85 F1 | 	sub	fp, #64
0966c     A8 18 02 FB | 	rdlong	local01, fp
09670     40 50 05 F1 | 	add	fp, #64
09674     A8 1C 02 FB | 	rdlong	local03, fp
09678     06 1C 06 F1 | 	add	local03, #6
0967c     0E 21 E2 FA | 	rdword	local05, local03
09680     04 18 06 F1 | 	add	local01, #4
09684     0C 21 52 FC | 	wrword	local05, local01
09688     40 50 85 F1 | 	sub	fp, #64
0968c     A8 18 02 FB | 	rdlong	local01, fp
09690     08 50 05 F1 | 	add	fp, #8
09694     A8 1C C2 FA | 	rdbyte	local03, fp
09698     10 18 06 F1 | 	add	local01, #16
0969c     0C 1D 42 FC | 	wrbyte	local03, local01
096a0     08 50 85 F1 | 	sub	fp, #8
096a4     A8 18 02 FB | 	rdlong	local01, fp
096a8     11 18 06 F1 | 	add	local01, #17
096ac     0C 01 48 FC | 	wrbyte	#0, local01
096b0     A8 18 02 FB | 	rdlong	local01, fp
096b4     1C 18 06 F1 | 	add	local01, #28
096b8     0C 01 68 FC | 	wrlong	#0, local01
096bc     A8 18 02 FB | 	rdlong	local01, fp
096c0     14 18 06 F1 | 	add	local01, #20
096c4     0C 01 68 FC | 	wrlong	#0, local01
096c8     08 50 05 F1 | 	add	fp, #8
096cc     A8 18 C2 FA | 	rdbyte	local01, fp
096d0     0C 50 85 F1 | 	sub	fp, #12
096d4     07 18 46 F7 | 	zerox	local01, #7
096d8     20 18 CE F7 | 	test	local01, #32 wz
096dc     0C 02 90 AD |  if_e	jmp	#LR__0658
096e0     04 50 05 F1 | 	add	fp, #4
096e4     A8 1C 02 FB | 	rdlong	local03, fp
096e8     04 50 85 F1 | 	sub	fp, #4
096ec     0C 1C 06 F1 | 	add	local03, #12
096f0     0E 23 02 FB | 	rdlong	local06, local03
096f4     01 22 16 F2 | 	cmp	local06, #1 wc
096f8     F0 01 90 CD |  if_b	jmp	#LR__0658
096fc     04 50 05 F1 | 	add	fp, #4
09700     A8 1C 02 FB | 	rdlong	local03, fp
09704     0E 19 02 F6 | 	mov	local01, local03
09708     0C 1C 06 F1 | 	add	local03, #12
0970c     0E 21 02 FB | 	rdlong	local05, local03
09710     14 18 06 F1 | 	add	local01, #20
09714     0C 21 62 FC | 	wrlong	local05, local01
09718     40 50 05 F1 | 	add	fp, #64
0971c     A8 1E 02 FB | 	rdlong	local04, fp
09720     0A 1E 06 F1 | 	add	local04, #10
09724     0F 21 E2 FA | 	rdword	local05, local04
09728     09 20 66 F0 | 	shl	local05, #9
0972c     08 50 05 F1 | 	add	fp, #8
09730     A8 20 62 FC | 	wrlong	local05, fp
09734     48 50 85 F1 | 	sub	fp, #72
09738     A8 18 02 FB | 	rdlong	local01, fp
0973c     08 18 06 F1 | 	add	local01, #8
09740     0C 1D 02 FB | 	rdlong	local03, local01
09744     4C 50 05 F1 | 	add	fp, #76
09748     A8 1C 62 FC | 	wrlong	local03, fp
0974c                 | ' 				fp->fptr = fp->obj.objsize;
0974c                 | ' 				bcs = (DWORD)fs->csize *  ((UINT) 512 ) ;
0974c                 | ' 				clst = fp->obj.sclust;
0974c                 | ' 				for (ofs = fp->obj.objsize; res == FR_OK && ofs > bcs; ofs -= bcs) {
0974c     4C 50 85 F1 | 	sub	fp, #76
09750     A8 18 02 FB | 	rdlong	local01, fp
09754     0C 18 06 F1 | 	add	local01, #12
09758     0C 1D 02 FB | 	rdlong	local03, local01
0975c     54 50 05 F1 | 	add	fp, #84
09760     A8 1C 62 FC | 	wrlong	local03, fp
09764     58 50 85 F1 | 	sub	fp, #88
09768                 | LR__0653
09768     10 50 05 F1 | 	add	fp, #16
0976c     A8 20 02 FB | 	rdlong	local05, fp
09770     10 50 85 F1 | 	sub	fp, #16
09774     10 1B 0A F6 | 	mov	local02, local05 wz
09778     A4 00 90 5D |  if_ne	jmp	#LR__0654
0977c     58 50 05 F1 | 	add	fp, #88
09780     A8 24 02 FB | 	rdlong	local07, fp
09784     12 23 02 F6 | 	mov	local06, local07
09788     0C 50 85 F1 | 	sub	fp, #12
0978c     A8 26 02 FB | 	rdlong	local08, fp
09790     4C 50 85 F1 | 	sub	fp, #76
09794     13 29 02 F6 | 	mov	local09, local08
09798     14 23 1A F2 | 	cmp	local06, local09 wcz
0979c     80 00 90 ED |  if_be	jmp	#LR__0654
097a0     04 50 05 F1 | 	add	fp, #4
097a4     A8 0E 02 FB | 	rdlong	arg01, fp
097a8     4C 50 05 F1 | 	add	fp, #76
097ac     A8 10 02 FB | 	rdlong	arg02, fp
097b0     50 50 85 F1 | 	sub	fp, #80
097b4     28 C2 BF FD | 	call	#_ff_cc_get_fat_0226
097b8     50 50 05 F1 | 	add	fp, #80
097bc     A8 F4 61 FC | 	wrlong	result1, fp
097c0     50 50 85 F1 | 	sub	fp, #80
097c4     02 F4 15 F2 | 	cmp	result1, #2 wc
097c8     10 50 05 C1 |  if_b	add	fp, #16
097cc     A8 04 68 CC |  if_b	wrlong	#2, fp
097d0     10 50 85 C1 |  if_b	sub	fp, #16
097d4     50 50 05 F1 | 	add	fp, #80
097d8     A8 2A 02 FB | 	rdlong	local10, fp
097dc     50 50 85 F1 | 	sub	fp, #80
097e0     FF FF 7F FF 
097e4     FF 2B 0E F2 | 	cmp	local10, ##-1 wz
097e8     10 50 05 A1 |  if_e	add	fp, #16
097ec     A8 02 68 AC |  if_e	wrlong	#1, fp
097f0     10 50 85 A1 |  if_e	sub	fp, #16
097f4     58 50 05 F1 | 	add	fp, #88
097f8     A8 2C 02 FB | 	rdlong	local11, fp
097fc     16 2B 02 F6 | 	mov	local10, local11
09800     0C 50 85 F1 | 	sub	fp, #12
09804     A8 2E 02 FB | 	rdlong	local12, fp
09808     17 31 02 F6 | 	mov	local13, local12
0980c     18 2B 82 F1 | 	sub	local10, local13
09810     0C 50 05 F1 | 	add	fp, #12
09814     A8 2A 62 FC | 	wrlong	local10, fp
09818     58 50 85 F1 | 	sub	fp, #88
0981c     48 FF 9F FD | 	jmp	#LR__0653
09820                 | LR__0654
09820     04 50 05 F1 | 	add	fp, #4
09824     A8 18 02 FB | 	rdlong	local01, fp
09828     4C 50 05 F1 | 	add	fp, #76
0982c     A8 1C 02 FB | 	rdlong	local03, fp
09830     18 18 06 F1 | 	add	local01, #24
09834     0C 1D 62 FC | 	wrlong	local03, local01
09838     40 50 85 F1 | 	sub	fp, #64
0983c     A8 1E 02 FB | 	rdlong	local04, fp
09840     10 50 85 F1 | 	sub	fp, #16
09844     0F 19 0A F6 | 	mov	local01, local04 wz
09848     A0 00 90 5D |  if_ne	jmp	#LR__0657
0984c     58 50 05 F1 | 	add	fp, #88
09850     A8 20 02 FB | 	rdlong	local05, fp
09854     58 50 85 F1 | 	sub	fp, #88
09858     10 1B 02 F6 | 	mov	local02, local05
0985c     0D 1D 02 F6 | 	mov	local03, local02
09860     FF 1D 0E F5 | 	and	local03, #511 wz
09864     84 00 90 AD |  if_e	jmp	#LR__0657
09868     44 50 05 F1 | 	add	fp, #68
0986c     A8 0E 02 FB | 	rdlong	arg01, fp
09870     0C 50 05 F1 | 	add	fp, #12
09874     A8 1C 02 FB | 	rdlong	local03, fp
09878     50 50 85 F1 | 	sub	fp, #80
0987c     0E 11 02 F6 | 	mov	arg02, local03
09880     1C C1 BF FD | 	call	#_ff_cc_clst2sect_0221
09884     54 50 05 F1 | 	add	fp, #84
09888     A8 F4 61 FC | 	wrlong	result1, fp
0988c     FA 1E 0A F6 | 	mov	local04, result1 wz
09890     54 50 85 F1 | 	sub	fp, #84
09894     14 00 90 5D |  if_ne	jmp	#LR__0655
09898     02 18 06 F6 | 	mov	local01, #2
0989c     10 50 05 F1 | 	add	fp, #16
098a0     A8 04 68 FC | 	wrlong	#2, fp
098a4     10 50 85 F1 | 	sub	fp, #16
098a8     40 00 90 FD | 	jmp	#LR__0656
098ac                 | LR__0655
098ac     04 50 05 F1 | 	add	fp, #4
098b0     A8 1E 02 FB | 	rdlong	local04, fp
098b4     0F 19 02 F6 | 	mov	local01, local04
098b8     50 50 05 F1 | 	add	fp, #80
098bc     A8 1A 02 FB | 	rdlong	local02, fp
098c0     0D 1D 02 F6 | 	mov	local03, local02
098c4     04 50 05 F1 | 	add	fp, #4
098c8     A8 24 02 FB | 	rdlong	local07, fp
098cc     58 50 85 F1 | 	sub	fp, #88
098d0     12 23 02 F6 | 	mov	local06, local07
098d4     11 21 02 F6 | 	mov	local05, local06
098d8     09 20 46 F0 | 	shr	local05, #9
098dc     10 1D 02 F1 | 	add	local03, local05
098e0     1C 18 06 F1 | 	add	local01, #28
098e4     0C 1D 62 FC | 	wrlong	local03, local01
098e8     1C 18 86 F1 | 	sub	local01, #28
098ec                 | LR__0656
098ec                 | LR__0657
098ec                 | LR__0658
098ec                 | LR__0659
098ec                 | LR__0660
098ec     10 50 05 F1 | 	add	fp, #16
098f0     A8 18 0A FB | 	rdlong	local01, fp wz
098f4     10 50 85 F1 | 	sub	fp, #16
098f8     10 00 90 AD |  if_e	jmp	#LR__0661
098fc     04 50 05 F1 | 	add	fp, #4
09900     A8 18 02 FB | 	rdlong	local01, fp
09904     04 50 85 F1 | 	sub	fp, #4
09908     0C 01 68 FC | 	wrlong	#0, local01
0990c                 | LR__0661
0990c                 | ' 
0990c                 | ' 	return res ;
0990c     10 50 05 F1 | 	add	fp, #16
09910     A8 F4 01 FB | 	rdlong	result1, fp
09914     10 50 85 F1 | 	sub	fp, #16
09918                 | LR__0662
09918     A8 F0 03 F6 | 	mov	ptra, fp
0991c     B3 00 A0 FD | 	call	#popregs_
09920                 | _ff_cc_f_open_ret
09920     2D 00 64 FD | 	ret
09924                 | 
09924                 | _ff_cc_f_read
09924     19 4C 05 F6 | 	mov	COUNT_, #25
09928     A9 00 A0 FD | 	call	#pushregs_
0992c     38 F0 07 F1 | 	add	ptra, #56
09930     04 50 05 F1 | 	add	fp, #4
09934     A8 0E 62 FC | 	wrlong	arg01, fp
09938     04 50 05 F1 | 	add	fp, #4
0993c     A8 10 62 FC | 	wrlong	arg02, fp
09940     04 50 05 F1 | 	add	fp, #4
09944     A8 12 62 FC | 	wrlong	arg03, fp
09948     04 50 05 F1 | 	add	fp, #4
0994c     A8 14 62 FC | 	wrlong	arg04, fp
09950     18 50 05 F1 | 	add	fp, #24
09954     A8 00 68 FC | 	wrlong	#0, fp
09958     20 50 85 F1 | 	sub	fp, #32
0995c     A8 18 02 FB | 	rdlong	local01, fp
09960     2C 50 05 F1 | 	add	fp, #44
09964     A8 18 62 FC | 	wrlong	local01, fp
09968     24 50 85 F1 | 	sub	fp, #36
0996c     A8 18 02 FB | 	rdlong	local01, fp
09970     0C 01 68 FC | 	wrlong	#0, local01
09974     0C 50 85 F1 | 	sub	fp, #12
09978     A8 0E 02 FB | 	rdlong	arg01, fp
0997c     14 50 05 F1 | 	add	fp, #20
09980     A8 10 02 F6 | 	mov	arg02, fp
09984     18 50 85 F1 | 	sub	fp, #24
09988     B0 F6 BF FD | 	call	#_ff_cc_validate_0357
0998c     14 50 05 F1 | 	add	fp, #20
09990     A8 F4 61 FC | 	wrlong	result1, fp
09994     FA 1A 02 F6 | 	mov	local02, result1
09998     14 50 85 F1 | 	sub	fp, #20
0999c     0D 19 0A F6 | 	mov	local01, local02 wz
099a0     2C 00 90 5D |  if_ne	jmp	#LR__0663
099a4     04 50 05 F1 | 	add	fp, #4
099a8     A8 1C 02 FB | 	rdlong	local03, fp
099ac     11 1C 06 F1 | 	add	local03, #17
099b0     0E 1F C2 FA | 	rdbyte	local04, local03
099b4     0F 21 02 F6 | 	mov	local05, local04
099b8     07 20 46 F7 | 	zerox	local05, #7
099bc     10 50 05 F1 | 	add	fp, #16
099c0     A8 20 62 FC | 	wrlong	local05, fp
099c4     14 50 85 F1 | 	sub	fp, #20
099c8     10 23 0A F6 | 	mov	local06, local05 wz
099cc     10 00 90 AD |  if_e	jmp	#LR__0664
099d0                 | LR__0663
099d0     14 50 05 F1 | 	add	fp, #20
099d4     A8 F4 01 FB | 	rdlong	result1, fp
099d8     14 50 85 F1 | 	sub	fp, #20
099dc     6C 05 90 FD | 	jmp	#LR__0682
099e0                 | LR__0664
099e0     04 50 05 F1 | 	add	fp, #4
099e4     A8 1A 02 FB | 	rdlong	local02, fp
099e8     04 50 85 F1 | 	sub	fp, #4
099ec     10 1A 06 F1 | 	add	local02, #16
099f0     0D 19 C2 FA | 	rdbyte	local01, local02
099f4     01 18 CE F7 | 	test	local01, #1 wz
099f8     07 F4 05 A6 |  if_e	mov	result1, #7
099fc     4C 05 90 AD |  if_e	jmp	#LR__0682
09a00     04 50 05 F1 | 	add	fp, #4
09a04     A8 1C 02 FB | 	rdlong	local03, fp
09a08     0E 1B 02 F6 | 	mov	local02, local03
09a0c     0C 1A 06 F1 | 	add	local02, #12
09a10     0D 19 02 FB | 	rdlong	local01, local02
09a14     14 1C 06 F1 | 	add	local03, #20
09a18     0E 23 02 FB | 	rdlong	local06, local03
09a1c     11 19 82 F1 | 	sub	local01, local06
09a20     20 50 05 F1 | 	add	fp, #32
09a24     A8 18 62 FC | 	wrlong	local01, fp
09a28     18 50 85 F1 | 	sub	fp, #24
09a2c     A8 18 02 FB | 	rdlong	local01, fp
09a30     18 50 05 F1 | 	add	fp, #24
09a34     A8 24 02 FB | 	rdlong	local07, fp
09a38     24 50 85 F1 | 	sub	fp, #36
09a3c     12 19 1A F2 | 	cmp	local01, local07 wcz
09a40     14 00 90 ED |  if_be	jmp	#LR__0665
09a44     24 50 05 F1 | 	add	fp, #36
09a48     A8 18 02 FB | 	rdlong	local01, fp
09a4c     18 50 85 F1 | 	sub	fp, #24
09a50     A8 18 62 FC | 	wrlong	local01, fp
09a54     0C 50 85 F1 | 	sub	fp, #12
09a58                 | LR__0665
09a58                 | ' 
09a58                 | ' 	for ( ; btr;
09a58                 | LR__0666
09a58     0C 50 05 F1 | 	add	fp, #12
09a5c     A8 1A 02 FB | 	rdlong	local02, fp
09a60     0C 50 85 F1 | 	sub	fp, #12
09a64     0D 19 0A F6 | 	mov	local01, local02 wz
09a68     DC 04 90 AD |  if_e	jmp	#LR__0681
09a6c     04 50 05 F1 | 	add	fp, #4
09a70     A8 24 02 FB | 	rdlong	local07, fp
09a74     04 50 85 F1 | 	sub	fp, #4
09a78     14 24 06 F1 | 	add	local07, #20
09a7c     12 27 02 FB | 	rdlong	local08, local07
09a80     FF 27 CE F7 | 	test	local08, #511 wz
09a84     48 03 90 5D |  if_ne	jmp	#LR__0677
09a88     04 50 05 F1 | 	add	fp, #4
09a8c     A8 1C 02 FB | 	rdlong	local03, fp
09a90     14 1C 06 F1 | 	add	local03, #20
09a94     0E 25 02 FB | 	rdlong	local07, local03
09a98     09 24 46 F0 | 	shr	local07, #9
09a9c     14 50 05 F1 | 	add	fp, #20
09aa0     A8 28 02 FB | 	rdlong	local09, fp
09aa4     14 2B 02 F6 | 	mov	local10, local09
09aa8     0A 2A 06 F1 | 	add	local10, #10
09aac     15 2D E2 FA | 	rdword	local11, local10
09ab0     0A 2A 86 F1 | 	sub	local10, #10
09ab4     16 21 02 F6 | 	mov	local05, local11
09ab8     0F 20 46 F7 | 	zerox	local05, #15
09abc     01 20 86 F1 | 	sub	local05, #1
09ac0     10 25 0A F5 | 	and	local07, local05 wz
09ac4     18 50 05 F1 | 	add	fp, #24
09ac8     A8 24 62 FC | 	wrlong	local07, fp
09acc     30 50 85 F1 | 	sub	fp, #48
09ad0     E0 00 90 5D |  if_ne	jmp	#LR__0671
09ad4     04 50 05 F1 | 	add	fp, #4
09ad8     A8 24 02 FB | 	rdlong	local07, fp
09adc     04 50 85 F1 | 	sub	fp, #4
09ae0     14 24 06 F1 | 	add	local07, #20
09ae4     12 27 0A FB | 	rdlong	local08, local07 wz
09ae8     20 00 90 5D |  if_ne	jmp	#LR__0667
09aec     04 50 05 F1 | 	add	fp, #4
09af0     A8 24 02 FB | 	rdlong	local07, fp
09af4     08 24 06 F1 | 	add	local07, #8
09af8     12 27 02 FB | 	rdlong	local08, local07
09afc     18 50 05 F1 | 	add	fp, #24
09b00     A8 26 62 FC | 	wrlong	local08, fp
09b04     1C 50 85 F1 | 	sub	fp, #28
09b08     28 00 90 FD | 	jmp	#LR__0668
09b0c                 | LR__0667
09b0c     04 50 05 F1 | 	add	fp, #4
09b10     A8 26 02 FB | 	rdlong	local08, fp
09b14     13 0F 02 F6 | 	mov	arg01, local08
09b18     04 50 85 F1 | 	sub	fp, #4
09b1c     18 26 06 F1 | 	add	local08, #24
09b20     13 11 02 FB | 	rdlong	arg02, local08
09b24     B8 BE BF FD | 	call	#_ff_cc_get_fat_0226
09b28     1C 50 05 F1 | 	add	fp, #28
09b2c     A8 F4 61 FC | 	wrlong	result1, fp
09b30     1C 50 85 F1 | 	sub	fp, #28
09b34                 | LR__0668
09b34     1C 50 05 F1 | 	add	fp, #28
09b38     A8 24 02 FB | 	rdlong	local07, fp
09b3c     1C 50 85 F1 | 	sub	fp, #28
09b40     02 24 16 F2 | 	cmp	local07, #2 wc
09b44     1C 00 90 3D |  if_ae	jmp	#LR__0669
09b48     04 50 05 F1 | 	add	fp, #4
09b4c     A8 24 02 FB | 	rdlong	local07, fp
09b50     04 50 85 F1 | 	sub	fp, #4
09b54     11 24 06 F1 | 	add	local07, #17
09b58     12 05 48 FC | 	wrbyte	#2, local07
09b5c     02 F4 05 F6 | 	mov	result1, #2
09b60     E8 03 90 FD | 	jmp	#LR__0682
09b64                 | LR__0669
09b64     1C 50 05 F1 | 	add	fp, #28
09b68     A8 24 02 FB | 	rdlong	local07, fp
09b6c     1C 50 85 F1 | 	sub	fp, #28
09b70     FF FF 7F FF 
09b74     FF 25 0E F2 | 	cmp	local07, ##-1 wz
09b78     1C 00 90 5D |  if_ne	jmp	#LR__0670
09b7c     04 50 05 F1 | 	add	fp, #4
09b80     A8 24 02 FB | 	rdlong	local07, fp
09b84     04 50 85 F1 | 	sub	fp, #4
09b88     11 24 06 F1 | 	add	local07, #17
09b8c     12 03 48 FC | 	wrbyte	#1, local07
09b90     01 F4 05 F6 | 	mov	result1, #1
09b94     B4 03 90 FD | 	jmp	#LR__0682
09b98                 | LR__0670
09b98     04 50 05 F1 | 	add	fp, #4
09b9c     A8 24 02 FB | 	rdlong	local07, fp
09ba0     18 50 05 F1 | 	add	fp, #24
09ba4     A8 26 02 FB | 	rdlong	local08, fp
09ba8     1C 50 85 F1 | 	sub	fp, #28
09bac     18 24 06 F1 | 	add	local07, #24
09bb0     12 27 62 FC | 	wrlong	local08, local07
09bb4                 | LR__0671
09bb4     18 50 05 F1 | 	add	fp, #24
09bb8     A8 0E 02 FB | 	rdlong	arg01, fp
09bbc     14 50 85 F1 | 	sub	fp, #20
09bc0     A8 26 02 FB | 	rdlong	local08, fp
09bc4     04 50 85 F1 | 	sub	fp, #4
09bc8     18 26 06 F1 | 	add	local08, #24
09bcc     13 11 02 FB | 	rdlong	arg02, local08
09bd0     CC BD BF FD | 	call	#_ff_cc_clst2sect_0221
09bd4     20 50 05 F1 | 	add	fp, #32
09bd8     A8 F4 61 FC | 	wrlong	result1, fp
09bdc     20 50 85 F1 | 	sub	fp, #32
09be0     00 F4 0D F2 | 	cmp	result1, #0 wz
09be4     1C 00 90 5D |  if_ne	jmp	#LR__0672
09be8     04 50 05 F1 | 	add	fp, #4
09bec     A8 24 02 FB | 	rdlong	local07, fp
09bf0     04 50 85 F1 | 	sub	fp, #4
09bf4     11 24 06 F1 | 	add	local07, #17
09bf8     12 05 48 FC | 	wrbyte	#2, local07
09bfc     02 F4 05 F6 | 	mov	result1, #2
09c00     48 03 90 FD | 	jmp	#LR__0682
09c04                 | LR__0672
09c04     20 50 05 F1 | 	add	fp, #32
09c08     A8 24 02 FB | 	rdlong	local07, fp
09c0c     10 50 05 F1 | 	add	fp, #16
09c10     A8 26 02 FB | 	rdlong	local08, fp
09c14     13 25 02 F1 | 	add	local07, local08
09c18     10 50 85 F1 | 	sub	fp, #16
09c1c     A8 24 62 FC | 	wrlong	local07, fp
09c20     14 50 85 F1 | 	sub	fp, #20
09c24     A8 24 02 FB | 	rdlong	local07, fp
09c28     09 24 46 F0 | 	shr	local07, #9
09c2c     20 50 05 F1 | 	add	fp, #32
09c30     A8 24 62 FC | 	wrlong	local07, fp
09c34     2C 50 85 F1 | 	sub	fp, #44
09c38     01 24 16 F2 | 	cmp	local07, #1 wc
09c3c     74 01 90 CD |  if_b	jmp	#LR__0676
09c40     30 50 05 F1 | 	add	fp, #48
09c44     A8 24 02 FB | 	rdlong	local07, fp
09c48     04 50 85 F1 | 	sub	fp, #4
09c4c     A8 26 02 FB | 	rdlong	local08, fp
09c50     13 25 02 F1 | 	add	local07, local08
09c54     14 50 85 F1 | 	sub	fp, #20
09c58     A8 20 02 FB | 	rdlong	local05, fp
09c5c     18 50 85 F1 | 	sub	fp, #24
09c60     0A 20 06 F1 | 	add	local05, #10
09c64     10 23 E2 FA | 	rdword	local06, local05
09c68     11 25 1A F2 | 	cmp	local07, local06 wcz
09c6c     28 00 90 ED |  if_be	jmp	#LR__0673
09c70     18 50 05 F1 | 	add	fp, #24
09c74     A8 1C 02 FB | 	rdlong	local03, fp
09c78     0A 1C 06 F1 | 	add	local03, #10
09c7c     0E 25 E2 FA | 	rdword	local07, local03
09c80     18 50 05 F1 | 	add	fp, #24
09c84     A8 22 02 FB | 	rdlong	local06, fp
09c88     11 25 82 F1 | 	sub	local07, local06
09c8c     04 50 85 F1 | 	sub	fp, #4
09c90     A8 24 62 FC | 	wrlong	local07, fp
09c94     2C 50 85 F1 | 	sub	fp, #44
09c98                 | LR__0673
09c98     18 50 05 F1 | 	add	fp, #24
09c9c     A8 1C 02 FB | 	rdlong	local03, fp
09ca0     01 1C 06 F1 | 	add	local03, #1
09ca4     0E 0F C2 FA | 	rdbyte	arg01, local03
09ca8     1C 50 05 F1 | 	add	fp, #28
09cac     A8 10 02 FB | 	rdlong	arg02, fp
09cb0     14 50 85 F1 | 	sub	fp, #20
09cb4     A8 12 02 FB | 	rdlong	arg03, fp
09cb8     0C 50 05 F1 | 	add	fp, #12
09cbc     A8 14 02 FB | 	rdlong	arg04, fp
09cc0     2C 50 85 F1 | 	sub	fp, #44
09cc4     DC B2 BF FD | 	call	#_ff_cc_disk_read
09cc8     00 F4 0D F2 | 	cmp	result1, #0 wz
09ccc     1C 00 90 AD |  if_e	jmp	#LR__0674
09cd0     04 50 05 F1 | 	add	fp, #4
09cd4     A8 24 02 FB | 	rdlong	local07, fp
09cd8     04 50 85 F1 | 	sub	fp, #4
09cdc     11 24 06 F1 | 	add	local07, #17
09ce0     12 03 48 FC | 	wrbyte	#1, local07
09ce4     01 F4 05 F6 | 	mov	result1, #1
09ce8     60 02 90 FD | 	jmp	#LR__0682
09cec                 | LR__0674
09cec     18 50 05 F1 | 	add	fp, #24
09cf0     A8 24 02 FB | 	rdlong	local07, fp
09cf4     18 50 85 F1 | 	sub	fp, #24
09cf8     03 24 06 F1 | 	add	local07, #3
09cfc     12 27 CA FA | 	rdbyte	local08, local07 wz
09d00     94 00 90 AD |  if_e	jmp	#LR__0675
09d04     18 50 05 F1 | 	add	fp, #24
09d08     A8 20 02 FB | 	rdlong	local05, fp
09d0c     30 20 06 F1 | 	add	local05, #48
09d10     10 23 02 FB | 	rdlong	local06, local05
09d14     08 50 05 F1 | 	add	fp, #8
09d18     A8 2C 02 FB | 	rdlong	local11, fp
09d1c     16 23 82 F1 | 	sub	local06, local11
09d20     0C 50 05 F1 | 	add	fp, #12
09d24     A8 2E 02 FB | 	rdlong	local12, fp
09d28     2C 50 85 F1 | 	sub	fp, #44
09d2c     17 23 12 F2 | 	cmp	local06, local12 wc
09d30     64 00 90 3D |  if_ae	jmp	#LR__0675
09d34     34 50 05 F1 | 	add	fp, #52
09d38     A8 24 02 FB | 	rdlong	local07, fp
09d3c     1C 50 85 F1 | 	sub	fp, #28
09d40     A8 20 02 FB | 	rdlong	local05, fp
09d44     10 23 02 F6 | 	mov	local06, local05
09d48     30 22 06 F1 | 	add	local06, #48
09d4c     11 2B 02 FB | 	rdlong	local10, local06
09d50     15 31 02 F6 | 	mov	local13, local10
09d54     08 50 05 F1 | 	add	fp, #8
09d58     A8 2C 02 FB | 	rdlong	local11, fp
09d5c     16 29 02 F6 | 	mov	local09, local11
09d60     14 31 82 F1 | 	sub	local13, local09
09d64     09 30 66 F0 | 	shl	local13, #9
09d68     18 33 02 F6 | 	mov	local14, local13
09d6c     18 25 02 F1 | 	add	local07, local13
09d70     10 1F 02 F6 | 	mov	local04, local05
09d74     20 50 85 F1 | 	sub	fp, #32
09d78     0F 23 02 F6 | 	mov	local06, local04
09d7c     34 22 06 F1 | 	add	local06, #52
09d80     11 1D 02 F6 | 	mov	local03, local06
09d84     09 26 C6 F9 | 	decod	local08, #9
09d88     12 0F 02 F6 | 	mov	arg01, local07
09d8c     0E 11 02 F6 | 	mov	arg02, local03
09d90     09 12 C6 F9 | 	decod	arg03, #9
09d94     78 B7 BF FD | 	call	#_ff_cc_mem_cpy_0198
09d98                 | LR__0675
09d98     2C 50 05 F1 | 	add	fp, #44
09d9c     A8 24 02 FB | 	rdlong	local07, fp
09da0     09 24 66 F0 | 	shl	local07, #9
09da4     04 50 85 F1 | 	sub	fp, #4
09da8     A8 24 62 FC | 	wrlong	local07, fp
09dac     28 50 85 F1 | 	sub	fp, #40
09db0                 | ' 					mem_cpy(rbuff + ((fs->winsect - sect) *  ((UINT) 512 ) ), fs->win,  ((UINT) 512 ) );
09db0                 | ' 				}
09db0                 | ' #line 3977 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
09db0                 | ' 				rcnt =  ((UINT) 512 )  * cc;
09db0                 | ' 				continue;
09db0     E8 00 90 FD | 	jmp	#LR__0680
09db4                 | LR__0676
09db4     04 50 05 F1 | 	add	fp, #4
09db8     A8 24 02 FB | 	rdlong	local07, fp
09dbc     1C 50 05 F1 | 	add	fp, #28
09dc0     A8 26 02 FB | 	rdlong	local08, fp
09dc4     20 50 85 F1 | 	sub	fp, #32
09dc8     1C 24 06 F1 | 	add	local07, #28
09dcc     12 27 62 FC | 	wrlong	local08, local07
09dd0                 | LR__0677
09dd0     04 50 05 F1 | 	add	fp, #4
09dd4     A8 1C 02 FB | 	rdlong	local03, fp
09dd8     14 1C 06 F1 | 	add	local03, #20
09ddc     0E 1F 02 FB | 	rdlong	local04, local03
09de0     FF 1F 06 F5 | 	and	local04, #511
09de4     09 24 C6 F9 | 	decod	local07, #9
09de8     0F 25 82 F1 | 	sub	local07, local04
09dec     24 50 05 F1 | 	add	fp, #36
09df0     A8 24 62 FC | 	wrlong	local07, fp
09df4     1C 50 85 F1 | 	sub	fp, #28
09df8     A8 26 02 FB | 	rdlong	local08, fp
09dfc     0C 50 85 F1 | 	sub	fp, #12
09e00     13 25 1A F2 | 	cmp	local07, local08 wcz
09e04     14 00 90 ED |  if_be	jmp	#LR__0678
09e08     0C 50 05 F1 | 	add	fp, #12
09e0c     A8 24 02 FB | 	rdlong	local07, fp
09e10     1C 50 05 F1 | 	add	fp, #28
09e14     A8 24 62 FC | 	wrlong	local07, fp
09e18     28 50 85 F1 | 	sub	fp, #40
09e1c                 | LR__0678
09e1c     18 50 05 F1 | 	add	fp, #24
09e20     A8 0E 02 FB | 	rdlong	arg01, fp
09e24     14 50 85 F1 | 	sub	fp, #20
09e28     A8 26 02 FB | 	rdlong	local08, fp
09e2c     04 50 85 F1 | 	sub	fp, #4
09e30     1C 26 06 F1 | 	add	local08, #28
09e34     13 11 02 FB | 	rdlong	arg02, local08
09e38     84 B9 BF FD | 	call	#_ff_cc_move_window_0218
09e3c     00 F4 0D F2 | 	cmp	result1, #0 wz
09e40     1C 00 90 AD |  if_e	jmp	#LR__0679
09e44     04 50 05 F1 | 	add	fp, #4
09e48     A8 24 02 FB | 	rdlong	local07, fp
09e4c     04 50 85 F1 | 	sub	fp, #4
09e50     11 24 06 F1 | 	add	local07, #17
09e54     12 03 48 FC | 	wrbyte	#1, local07
09e58     01 F4 05 F6 | 	mov	result1, #1
09e5c     EC 00 90 FD | 	jmp	#LR__0682
09e60                 | LR__0679
09e60     34 50 05 F1 | 	add	fp, #52
09e64     A8 0E 02 FB | 	rdlong	arg01, fp
09e68     1C 50 85 F1 | 	sub	fp, #28
09e6c     A8 10 02 FB | 	rdlong	arg02, fp
09e70     34 10 06 F1 | 	add	arg02, #52
09e74     14 50 85 F1 | 	sub	fp, #20
09e78     A8 2A 02 FB | 	rdlong	local10, fp
09e7c     14 2A 06 F1 | 	add	local10, #20
09e80     15 2F 02 FB | 	rdlong	local12, local10
09e84     FF 2F 06 F5 | 	and	local12, #511
09e88     17 11 02 F1 | 	add	arg02, local12
09e8c     24 50 05 F1 | 	add	fp, #36
09e90     A8 12 02 FB | 	rdlong	arg03, fp
09e94     28 50 85 F1 | 	sub	fp, #40
09e98     74 B6 BF FD | 	call	#_ff_cc_mem_cpy_0198
09e9c                 | LR__0680
09e9c     0C 50 05 F1 | 	add	fp, #12
09ea0     A8 24 02 FB | 	rdlong	local07, fp
09ea4     1C 50 05 F1 | 	add	fp, #28
09ea8     A8 1E 02 FB | 	rdlong	local04, fp
09eac     0F 25 82 F1 | 	sub	local07, local04
09eb0     1C 50 85 F1 | 	sub	fp, #28
09eb4     A8 24 62 FC | 	wrlong	local07, fp
09eb8     04 50 05 F1 | 	add	fp, #4
09ebc     A8 28 02 FB | 	rdlong	local09, fp
09ec0     14 23 02 F6 | 	mov	local06, local09
09ec4     14 2B 02 FB | 	rdlong	local10, local09
09ec8     18 50 05 F1 | 	add	fp, #24
09ecc     A8 32 02 FB | 	rdlong	local14, fp
09ed0     19 31 02 F6 | 	mov	local13, local14
09ed4     19 2B 02 F1 | 	add	local10, local14
09ed8     11 2B 62 FC | 	wrlong	local10, local06
09edc     0C 50 05 F1 | 	add	fp, #12
09ee0     A8 34 02 FB | 	rdlong	local15, fp
09ee4     1A 2F 02 F6 | 	mov	local12, local15
09ee8     0C 50 85 F1 | 	sub	fp, #12
09eec     A8 36 02 FB | 	rdlong	local16, fp
09ef0     1B 39 02 F6 | 	mov	local17, local16
09ef4     1B 2F 02 F1 | 	add	local12, local16
09ef8     0C 50 05 F1 | 	add	fp, #12
09efc     A8 2E 62 FC | 	wrlong	local12, fp
09f00     30 50 85 F1 | 	sub	fp, #48
09f04     A8 3A 02 FB | 	rdlong	local18, fp
09f08     1D 3D 02 F6 | 	mov	local19, local18
09f0c     1D 3F 02 F6 | 	mov	local20, local18
09f10     1F 41 02 F6 | 	mov	local21, local20
09f14     14 40 06 F1 | 	add	local21, #20
09f18     20 43 02 FB | 	rdlong	local22, local21
09f1c     14 40 86 F1 | 	sub	local21, #20
09f20     21 45 02 F6 | 	mov	local23, local22
09f24     24 50 05 F1 | 	add	fp, #36
09f28     A8 46 02 FB | 	rdlong	local24, fp
09f2c     28 50 85 F1 | 	sub	fp, #40
09f30     23 49 02 F6 | 	mov	local25, local24
09f34     23 45 02 F1 | 	add	local23, local24
09f38     14 3C 06 F1 | 	add	local19, #20
09f3c     1E 45 62 FC | 	wrlong	local23, local19
09f40     14 3C 86 F1 | 	sub	local19, #20
09f44     10 FB 9F FD | 	jmp	#LR__0666
09f48                 | LR__0681
09f48                 | ' 		mem_cpy(rbuff, fs->win + fp->fptr %  ((UINT) 512 ) , rcnt);
09f48                 | ' #line 4001 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
09f48                 | ' 	}
09f48                 | ' 
09f48                 | ' 	return FR_OK ;
09f48     00 F4 05 F6 | 	mov	result1, #0
09f4c                 | LR__0682
09f4c     A8 F0 03 F6 | 	mov	ptra, fp
09f50     B3 00 A0 FD | 	call	#popregs_
09f54                 | _ff_cc_f_read_ret
09f54     2D 00 64 FD | 	ret
09f58                 | 
09f58                 | _ff_cc_f_write
09f58     2A 4C 05 F6 | 	mov	COUNT_, #42
09f5c     A9 00 A0 FD | 	call	#pushregs_
09f60     34 F0 07 F1 | 	add	ptra, #52
09f64     04 50 05 F1 | 	add	fp, #4
09f68     A8 0E 62 FC | 	wrlong	arg01, fp
09f6c     04 50 05 F1 | 	add	fp, #4
09f70     A8 10 62 FC | 	wrlong	arg02, fp
09f74     04 50 05 F1 | 	add	fp, #4
09f78     A8 12 62 FC | 	wrlong	arg03, fp
09f7c     04 50 05 F1 | 	add	fp, #4
09f80     A8 14 62 FC | 	wrlong	arg04, fp
09f84     14 50 05 F1 | 	add	fp, #20
09f88     A8 00 68 FC | 	wrlong	#0, fp
09f8c     1C 50 85 F1 | 	sub	fp, #28
09f90     A8 18 02 FB | 	rdlong	local01, fp
09f94     28 50 05 F1 | 	add	fp, #40
09f98     A8 18 62 FC | 	wrlong	local01, fp
09f9c     20 50 85 F1 | 	sub	fp, #32
09fa0     A8 18 02 FB | 	rdlong	local01, fp
09fa4     0C 01 68 FC | 	wrlong	#0, local01
09fa8     0C 50 85 F1 | 	sub	fp, #12
09fac     A8 0E 02 FB | 	rdlong	arg01, fp
09fb0     14 50 05 F1 | 	add	fp, #20
09fb4     A8 10 02 F6 | 	mov	arg02, fp
09fb8     18 50 85 F1 | 	sub	fp, #24
09fbc     7C F0 BF FD | 	call	#_ff_cc_validate_0357
09fc0     14 50 05 F1 | 	add	fp, #20
09fc4     A8 F4 61 FC | 	wrlong	result1, fp
09fc8     FA 1A 02 F6 | 	mov	local02, result1
09fcc     14 50 85 F1 | 	sub	fp, #20
09fd0     0D 19 0A F6 | 	mov	local01, local02 wz
09fd4     24 00 90 5D |  if_ne	jmp	#LR__0683
09fd8     04 50 05 F1 | 	add	fp, #4
09fdc     A8 1C 02 FB | 	rdlong	local03, fp
09fe0     11 1C 06 F1 | 	add	local03, #17
09fe4     0E 1F C2 FA | 	rdbyte	local04, local03
09fe8     10 50 05 F1 | 	add	fp, #16
09fec     A8 1E 62 FC | 	wrlong	local04, fp
09ff0     14 50 85 F1 | 	sub	fp, #20
09ff4     0F 21 0A F6 | 	mov	local05, local04 wz
09ff8     10 00 90 AD |  if_e	jmp	#LR__0684
09ffc                 | LR__0683
09ffc     14 50 05 F1 | 	add	fp, #20
0a000     A8 F4 01 FB | 	rdlong	result1, fp
0a004     14 50 85 F1 | 	sub	fp, #20
0a008     5C 07 90 FD | 	jmp	#LR__0708
0a00c                 | LR__0684
0a00c     04 50 05 F1 | 	add	fp, #4
0a010     A8 1A 02 FB | 	rdlong	local02, fp
0a014     04 50 85 F1 | 	sub	fp, #4
0a018     10 1A 06 F1 | 	add	local02, #16
0a01c     0D 19 C2 FA | 	rdbyte	local01, local02
0a020     02 18 CE F7 | 	test	local01, #2 wz
0a024     07 F4 05 A6 |  if_e	mov	result1, #7
0a028     3C 07 90 AD |  if_e	jmp	#LR__0708
0a02c     04 50 05 F1 | 	add	fp, #4
0a030     A8 22 02 FB | 	rdlong	local06, fp
0a034     11 25 02 F6 | 	mov	local07, local06
0a038     14 24 06 F1 | 	add	local07, #20
0a03c     12 21 02 FB | 	rdlong	local05, local07
0a040     10 1D 02 F6 | 	mov	local03, local05
0a044     08 50 05 F1 | 	add	fp, #8
0a048     A8 26 02 FB | 	rdlong	local08, fp
0a04c     13 1D 02 F1 | 	add	local03, local08
0a050     11 29 02 F6 | 	mov	local09, local06
0a054     0C 50 85 F1 | 	sub	fp, #12
0a058     14 2B 02 F6 | 	mov	local10, local09
0a05c     14 2A 06 F1 | 	add	local10, #20
0a060     15 2D 02 FB | 	rdlong	local11, local10
0a064     14 2A 86 F1 | 	sub	local10, #20
0a068     16 2F 02 F6 | 	mov	local12, local11
0a06c     17 1D 12 F2 | 	cmp	local03, local12 wc
0a070     24 00 90 3D |  if_ae	jmp	#LR__0685
0a074     04 50 05 F1 | 	add	fp, #4
0a078     A8 1A 02 FB | 	rdlong	local02, fp
0a07c     01 18 66 F6 | 	neg	local01, #1
0a080     14 1A 06 F1 | 	add	local02, #20
0a084     0D 1D 02 FB | 	rdlong	local03, local02
0a088     0E 19 82 F1 | 	sub	local01, local03
0a08c     08 50 05 F1 | 	add	fp, #8
0a090     A8 18 62 FC | 	wrlong	local01, fp
0a094     0C 50 85 F1 | 	sub	fp, #12
0a098                 | LR__0685
0a098                 | ' 		btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
0a098                 | ' 	}
0a098                 | ' 
0a098                 | ' 	for ( ; btw;
0a098                 | LR__0686
0a098     0C 50 05 F1 | 	add	fp, #12
0a09c     A8 1A 02 FB | 	rdlong	local02, fp
0a0a0     0C 50 85 F1 | 	sub	fp, #12
0a0a4     0D 19 0A F6 | 	mov	local01, local02 wz
0a0a8     94 06 90 AD |  if_e	jmp	#LR__0707
0a0ac     04 50 05 F1 | 	add	fp, #4
0a0b0     A8 30 02 FB | 	rdlong	local13, fp
0a0b4     04 50 85 F1 | 	sub	fp, #4
0a0b8     14 30 06 F1 | 	add	local13, #20
0a0bc     18 25 02 FB | 	rdlong	local07, local13
0a0c0     FF 25 CE F7 | 	test	local07, #511 wz
0a0c4     58 04 90 5D |  if_ne	jmp	#LR__0701
0a0c8     04 50 05 F1 | 	add	fp, #4
0a0cc     A8 1C 02 FB | 	rdlong	local03, fp
0a0d0     14 1C 06 F1 | 	add	local03, #20
0a0d4     0E 31 02 FB | 	rdlong	local13, local03
0a0d8     09 30 46 F0 | 	shr	local13, #9
0a0dc     14 50 05 F1 | 	add	fp, #20
0a0e0     A8 26 02 FB | 	rdlong	local08, fp
0a0e4     0A 26 06 F1 | 	add	local08, #10
0a0e8     13 29 E2 FA | 	rdword	local09, local08
0a0ec     14 1F 02 F6 | 	mov	local04, local09
0a0f0     0F 1E 46 F7 | 	zerox	local04, #15
0a0f4     01 1E 86 F1 | 	sub	local04, #1
0a0f8     0F 31 0A F5 | 	and	local13, local04 wz
0a0fc     14 50 05 F1 | 	add	fp, #20
0a100     A8 30 62 FC | 	wrlong	local13, fp
0a104     2C 50 85 F1 | 	sub	fp, #44
0a108     44 01 90 5D |  if_ne	jmp	#LR__0692
0a10c     04 50 05 F1 | 	add	fp, #4
0a110     A8 30 02 FB | 	rdlong	local13, fp
0a114     04 50 85 F1 | 	sub	fp, #4
0a118     14 30 06 F1 | 	add	local13, #20
0a11c     18 25 0A FB | 	rdlong	local07, local13 wz
0a120     44 00 90 5D |  if_ne	jmp	#LR__0687
0a124     04 50 05 F1 | 	add	fp, #4
0a128     A8 30 02 FB | 	rdlong	local13, fp
0a12c     08 30 06 F1 | 	add	local13, #8
0a130     18 31 0A FB | 	rdlong	local13, local13 wz
0a134     18 50 05 F1 | 	add	fp, #24
0a138     A8 30 62 FC | 	wrlong	local13, fp
0a13c     1C 50 85 F1 | 	sub	fp, #28
0a140     4C 00 90 5D |  if_ne	jmp	#LR__0688
0a144     04 50 05 F1 | 	add	fp, #4
0a148     A8 0E 02 FB | 	rdlong	arg01, fp
0a14c     04 50 85 F1 | 	sub	fp, #4
0a150     00 10 06 F6 | 	mov	arg02, #0
0a154     40 BE BF FD | 	call	#_ff_cc_create_chain_0240
0a158     1C 50 05 F1 | 	add	fp, #28
0a15c     A8 F4 61 FC | 	wrlong	result1, fp
0a160     1C 50 85 F1 | 	sub	fp, #28
0a164     28 00 90 FD | 	jmp	#LR__0688
0a168                 | LR__0687
0a168     04 50 05 F1 | 	add	fp, #4
0a16c     A8 24 02 FB | 	rdlong	local07, fp
0a170     12 0F 02 F6 | 	mov	arg01, local07
0a174     04 50 85 F1 | 	sub	fp, #4
0a178     18 24 06 F1 | 	add	local07, #24
0a17c     12 11 02 FB | 	rdlong	arg02, local07
0a180     14 BE BF FD | 	call	#_ff_cc_create_chain_0240
0a184     1C 50 05 F1 | 	add	fp, #28
0a188     A8 F4 61 FC | 	wrlong	result1, fp
0a18c     1C 50 85 F1 | 	sub	fp, #28
0a190                 | LR__0688
0a190     1C 50 05 F1 | 	add	fp, #28
0a194     A8 30 0A FB | 	rdlong	local13, fp wz
0a198     1C 50 85 F1 | 	sub	fp, #28
0a19c     A0 05 90 AD |  if_e	jmp	#LR__0707
0a1a0     1C 50 05 F1 | 	add	fp, #28
0a1a4     A8 30 02 FB | 	rdlong	local13, fp
0a1a8     1C 50 85 F1 | 	sub	fp, #28
0a1ac     01 30 0E F2 | 	cmp	local13, #1 wz
0a1b0     1C 00 90 5D |  if_ne	jmp	#LR__0689
0a1b4     04 50 05 F1 | 	add	fp, #4
0a1b8     A8 30 02 FB | 	rdlong	local13, fp
0a1bc     04 50 85 F1 | 	sub	fp, #4
0a1c0     11 30 06 F1 | 	add	local13, #17
0a1c4     18 05 48 FC | 	wrbyte	#2, local13
0a1c8     02 F4 05 F6 | 	mov	result1, #2
0a1cc     98 05 90 FD | 	jmp	#LR__0708
0a1d0                 | LR__0689
0a1d0     1C 50 05 F1 | 	add	fp, #28
0a1d4     A8 30 02 FB | 	rdlong	local13, fp
0a1d8     1C 50 85 F1 | 	sub	fp, #28
0a1dc     FF FF 7F FF 
0a1e0     FF 31 0E F2 | 	cmp	local13, ##-1 wz
0a1e4     1C 00 90 5D |  if_ne	jmp	#LR__0690
0a1e8     04 50 05 F1 | 	add	fp, #4
0a1ec     A8 30 02 FB | 	rdlong	local13, fp
0a1f0     04 50 85 F1 | 	sub	fp, #4
0a1f4     11 30 06 F1 | 	add	local13, #17
0a1f8     18 03 48 FC | 	wrbyte	#1, local13
0a1fc     01 F4 05 F6 | 	mov	result1, #1
0a200     64 05 90 FD | 	jmp	#LR__0708
0a204                 | LR__0690
0a204     04 50 05 F1 | 	add	fp, #4
0a208     A8 30 02 FB | 	rdlong	local13, fp
0a20c     18 50 05 F1 | 	add	fp, #24
0a210     A8 24 02 FB | 	rdlong	local07, fp
0a214     18 30 06 F1 | 	add	local13, #24
0a218     18 25 62 FC | 	wrlong	local07, local13
0a21c     18 50 85 F1 | 	sub	fp, #24
0a220     A8 30 02 FB | 	rdlong	local13, fp
0a224     04 50 85 F1 | 	sub	fp, #4
0a228     08 30 06 F1 | 	add	local13, #8
0a22c     18 25 0A FB | 	rdlong	local07, local13 wz
0a230     1C 00 90 5D |  if_ne	jmp	#LR__0691
0a234     04 50 05 F1 | 	add	fp, #4
0a238     A8 30 02 FB | 	rdlong	local13, fp
0a23c     18 50 05 F1 | 	add	fp, #24
0a240     A8 24 02 FB | 	rdlong	local07, fp
0a244     1C 50 85 F1 | 	sub	fp, #28
0a248     08 30 06 F1 | 	add	local13, #8
0a24c     18 25 62 FC | 	wrlong	local07, local13
0a250                 | LR__0691
0a250                 | LR__0692
0a250     18 50 05 F1 | 	add	fp, #24
0a254     A8 30 02 FB | 	rdlong	local13, fp
0a258     14 50 85 F1 | 	sub	fp, #20
0a25c     A8 24 02 FB | 	rdlong	local07, fp
0a260     04 50 85 F1 | 	sub	fp, #4
0a264     30 30 06 F1 | 	add	local13, #48
0a268     18 21 02 FB | 	rdlong	local05, local13
0a26c     1C 24 06 F1 | 	add	local07, #28
0a270     12 27 02 FB | 	rdlong	local08, local07
0a274     13 21 0A F2 | 	cmp	local05, local08 wz
0a278     34 00 90 5D |  if_ne	jmp	#LR__0693
0a27c     18 50 05 F1 | 	add	fp, #24
0a280     A8 0E 02 FB | 	rdlong	arg01, fp
0a284     18 50 85 F1 | 	sub	fp, #24
0a288     5C B4 BF FD | 	call	#_ff_cc_sync_window_0216
0a28c     00 F4 0D F2 | 	cmp	result1, #0 wz
0a290     1C 00 90 AD |  if_e	jmp	#LR__0693
0a294     04 50 05 F1 | 	add	fp, #4
0a298     A8 30 02 FB | 	rdlong	local13, fp
0a29c     04 50 85 F1 | 	sub	fp, #4
0a2a0     11 30 06 F1 | 	add	local13, #17
0a2a4     18 03 48 FC | 	wrbyte	#1, local13
0a2a8     01 F4 05 F6 | 	mov	result1, #1
0a2ac     B8 04 90 FD | 	jmp	#LR__0708
0a2b0                 | LR__0693
0a2b0     18 50 05 F1 | 	add	fp, #24
0a2b4     A8 0E 02 FB | 	rdlong	arg01, fp
0a2b8     14 50 85 F1 | 	sub	fp, #20
0a2bc     A8 24 02 FB | 	rdlong	local07, fp
0a2c0     04 50 85 F1 | 	sub	fp, #4
0a2c4     18 24 06 F1 | 	add	local07, #24
0a2c8     12 11 02 FB | 	rdlong	arg02, local07
0a2cc     D0 B6 BF FD | 	call	#_ff_cc_clst2sect_0221
0a2d0     20 50 05 F1 | 	add	fp, #32
0a2d4     A8 F4 61 FC | 	wrlong	result1, fp
0a2d8     20 50 85 F1 | 	sub	fp, #32
0a2dc     00 F4 0D F2 | 	cmp	result1, #0 wz
0a2e0     1C 00 90 5D |  if_ne	jmp	#LR__0694
0a2e4     04 50 05 F1 | 	add	fp, #4
0a2e8     A8 30 02 FB | 	rdlong	local13, fp
0a2ec     04 50 85 F1 | 	sub	fp, #4
0a2f0     11 30 06 F1 | 	add	local13, #17
0a2f4     18 05 48 FC | 	wrbyte	#2, local13
0a2f8     02 F4 05 F6 | 	mov	result1, #2
0a2fc     68 04 90 FD | 	jmp	#LR__0708
0a300                 | LR__0694
0a300     20 50 05 F1 | 	add	fp, #32
0a304     A8 30 02 FB | 	rdlong	local13, fp
0a308     0C 50 05 F1 | 	add	fp, #12
0a30c     A8 24 02 FB | 	rdlong	local07, fp
0a310     12 31 02 F1 | 	add	local13, local07
0a314     0C 50 85 F1 | 	sub	fp, #12
0a318     A8 30 62 FC | 	wrlong	local13, fp
0a31c     14 50 85 F1 | 	sub	fp, #20
0a320     A8 30 02 FB | 	rdlong	local13, fp
0a324     09 30 46 F0 | 	shr	local13, #9
0a328     1C 50 05 F1 | 	add	fp, #28
0a32c     A8 30 62 FC | 	wrlong	local13, fp
0a330     28 50 85 F1 | 	sub	fp, #40
0a334     01 30 16 F2 | 	cmp	local13, #1 wc
0a338     50 01 90 CD |  if_b	jmp	#LR__0698
0a33c     2C 50 05 F1 | 	add	fp, #44
0a340     A8 30 02 FB | 	rdlong	local13, fp
0a344     04 50 85 F1 | 	sub	fp, #4
0a348     A8 24 02 FB | 	rdlong	local07, fp
0a34c     12 31 02 F1 | 	add	local13, local07
0a350     10 50 85 F1 | 	sub	fp, #16
0a354     A8 1E 02 FB | 	rdlong	local04, fp
0a358     18 50 85 F1 | 	sub	fp, #24
0a35c     0A 1E 06 F1 | 	add	local04, #10
0a360     0F 21 E2 FA | 	rdword	local05, local04
0a364     10 31 1A F2 | 	cmp	local13, local05 wcz
0a368     28 00 90 ED |  if_be	jmp	#LR__0695
0a36c     18 50 05 F1 | 	add	fp, #24
0a370     A8 1C 02 FB | 	rdlong	local03, fp
0a374     0A 1C 06 F1 | 	add	local03, #10
0a378     0E 31 E2 FA | 	rdword	local13, local03
0a37c     14 50 05 F1 | 	add	fp, #20
0a380     A8 20 02 FB | 	rdlong	local05, fp
0a384     10 31 82 F1 | 	sub	local13, local05
0a388     04 50 85 F1 | 	sub	fp, #4
0a38c     A8 30 62 FC | 	wrlong	local13, fp
0a390     28 50 85 F1 | 	sub	fp, #40
0a394                 | LR__0695
0a394     18 50 05 F1 | 	add	fp, #24
0a398     A8 1C 02 FB | 	rdlong	local03, fp
0a39c     01 1C 06 F1 | 	add	local03, #1
0a3a0     0E 0F C2 FA | 	rdbyte	arg01, local03
0a3a4     18 50 05 F1 | 	add	fp, #24
0a3a8     A8 10 02 FB | 	rdlong	arg02, fp
0a3ac     10 50 85 F1 | 	sub	fp, #16
0a3b0     A8 12 02 FB | 	rdlong	arg03, fp
0a3b4     08 50 05 F1 | 	add	fp, #8
0a3b8     A8 14 02 FB | 	rdlong	arg04, fp
0a3bc     28 50 85 F1 | 	sub	fp, #40
0a3c0     BC AC BF FD | 	call	#_ff_cc_disk_write
0a3c4     00 F4 0D F2 | 	cmp	result1, #0 wz
0a3c8     1C 00 90 AD |  if_e	jmp	#LR__0696
0a3cc     04 50 05 F1 | 	add	fp, #4
0a3d0     A8 30 02 FB | 	rdlong	local13, fp
0a3d4     04 50 85 F1 | 	sub	fp, #4
0a3d8     11 30 06 F1 | 	add	local13, #17
0a3dc     18 03 48 FC | 	wrbyte	#1, local13
0a3e0     01 F4 05 F6 | 	mov	result1, #1
0a3e4     80 03 90 FD | 	jmp	#LR__0708
0a3e8                 | LR__0696
0a3e8     18 50 05 F1 | 	add	fp, #24
0a3ec     A8 1C 02 FB | 	rdlong	local03, fp
0a3f0     30 1C 06 F1 | 	add	local03, #48
0a3f4     0E 31 02 FB | 	rdlong	local13, local03
0a3f8     08 50 05 F1 | 	add	fp, #8
0a3fc     A8 20 02 FB | 	rdlong	local05, fp
0a400     10 31 82 F1 | 	sub	local13, local05
0a404     08 50 05 F1 | 	add	fp, #8
0a408     A8 26 02 FB | 	rdlong	local08, fp
0a40c     28 50 85 F1 | 	sub	fp, #40
0a410     13 31 12 F2 | 	cmp	local13, local08 wc
0a414     58 00 90 3D |  if_ae	jmp	#LR__0697
0a418     18 50 05 F1 | 	add	fp, #24
0a41c     A8 0E 02 FB | 	rdlong	arg01, fp
0a420     34 0E 06 F1 | 	add	arg01, #52
0a424     18 50 05 F1 | 	add	fp, #24
0a428     A8 10 02 FB | 	rdlong	arg02, fp
0a42c     18 50 85 F1 | 	sub	fp, #24
0a430     A8 1E 02 FB | 	rdlong	local04, fp
0a434     30 1E 06 F1 | 	add	local04, #48
0a438     0F 33 02 FB | 	rdlong	local14, local04
0a43c     08 50 05 F1 | 	add	fp, #8
0a440     A8 28 02 FB | 	rdlong	local09, fp
0a444     20 50 85 F1 | 	sub	fp, #32
0a448     14 33 82 F1 | 	sub	local14, local09
0a44c     09 32 66 F0 | 	shl	local14, #9
0a450     19 11 02 F1 | 	add	arg02, local14
0a454     09 12 C6 F9 | 	decod	arg03, #9
0a458     B4 B0 BF FD | 	call	#_ff_cc_mem_cpy_0198
0a45c     18 50 05 F1 | 	add	fp, #24
0a460     A8 30 02 FB | 	rdlong	local13, fp
0a464     18 50 85 F1 | 	sub	fp, #24
0a468     03 30 06 F1 | 	add	local13, #3
0a46c     18 01 48 FC | 	wrbyte	#0, local13
0a470                 | LR__0697
0a470     28 50 05 F1 | 	add	fp, #40
0a474     A8 30 02 FB | 	rdlong	local13, fp
0a478     09 30 66 F0 | 	shl	local13, #9
0a47c     04 50 85 F1 | 	sub	fp, #4
0a480     A8 30 62 FC | 	wrlong	local13, fp
0a484     24 50 85 F1 | 	sub	fp, #36
0a488                 | ' 					mem_cpy(fs->win, wbuff + ((fs->winsect - sect) *  ((UINT) 512 ) ),  ((UINT) 512 ) );
0a488                 | ' 					fs->wflag = 0;
0a488                 | ' 				}
0a488                 | ' #line 4095 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0a488                 | ' 				wcnt =  ((UINT) 512 )  * cc;
0a488                 | ' 				continue;
0a488     74 01 90 FD | 	jmp	#LR__0704
0a48c                 | LR__0698
0a48c     04 50 05 F1 | 	add	fp, #4
0a490     A8 24 02 FB | 	rdlong	local07, fp
0a494     12 31 02 F6 | 	mov	local13, local07
0a498     04 50 85 F1 | 	sub	fp, #4
0a49c     14 30 06 F1 | 	add	local13, #20
0a4a0     18 21 02 FB | 	rdlong	local05, local13
0a4a4     0C 24 06 F1 | 	add	local07, #12
0a4a8     12 27 02 FB | 	rdlong	local08, local07
0a4ac     13 21 12 F2 | 	cmp	local05, local08 wc
0a4b0     50 00 90 CD |  if_b	jmp	#LR__0700
0a4b4     18 50 05 F1 | 	add	fp, #24
0a4b8     A8 0E 02 FB | 	rdlong	arg01, fp
0a4bc     18 50 85 F1 | 	sub	fp, #24
0a4c0     24 B2 BF FD | 	call	#_ff_cc_sync_window_0216
0a4c4     00 F4 0D F2 | 	cmp	result1, #0 wz
0a4c8     1C 00 90 AD |  if_e	jmp	#LR__0699
0a4cc     04 50 05 F1 | 	add	fp, #4
0a4d0     A8 30 02 FB | 	rdlong	local13, fp
0a4d4     04 50 85 F1 | 	sub	fp, #4
0a4d8     11 30 06 F1 | 	add	local13, #17
0a4dc     18 03 48 FC | 	wrbyte	#1, local13
0a4e0     01 F4 05 F6 | 	mov	result1, #1
0a4e4     80 02 90 FD | 	jmp	#LR__0708
0a4e8                 | LR__0699
0a4e8     18 50 05 F1 | 	add	fp, #24
0a4ec     A8 30 02 FB | 	rdlong	local13, fp
0a4f0     08 50 05 F1 | 	add	fp, #8
0a4f4     A8 24 02 FB | 	rdlong	local07, fp
0a4f8     20 50 85 F1 | 	sub	fp, #32
0a4fc     30 30 06 F1 | 	add	local13, #48
0a500     18 25 62 FC | 	wrlong	local07, local13
0a504                 | LR__0700
0a504     04 50 05 F1 | 	add	fp, #4
0a508     A8 30 02 FB | 	rdlong	local13, fp
0a50c     1C 50 05 F1 | 	add	fp, #28
0a510     A8 24 02 FB | 	rdlong	local07, fp
0a514     20 50 85 F1 | 	sub	fp, #32
0a518     1C 30 06 F1 | 	add	local13, #28
0a51c     18 25 62 FC | 	wrlong	local07, local13
0a520                 | LR__0701
0a520     04 50 05 F1 | 	add	fp, #4
0a524     A8 1C 02 FB | 	rdlong	local03, fp
0a528     14 1C 06 F1 | 	add	local03, #20
0a52c     0E 23 02 FB | 	rdlong	local06, local03
0a530     FF 23 06 F5 | 	and	local06, #511
0a534     09 30 C6 F9 | 	decod	local13, #9
0a538     11 31 82 F1 | 	sub	local13, local06
0a53c     20 50 05 F1 | 	add	fp, #32
0a540     A8 30 62 FC | 	wrlong	local13, fp
0a544     18 50 85 F1 | 	sub	fp, #24
0a548     A8 24 02 FB | 	rdlong	local07, fp
0a54c     0C 50 85 F1 | 	sub	fp, #12
0a550     12 31 1A F2 | 	cmp	local13, local07 wcz
0a554     14 00 90 ED |  if_be	jmp	#LR__0702
0a558     0C 50 05 F1 | 	add	fp, #12
0a55c     A8 30 02 FB | 	rdlong	local13, fp
0a560     18 50 05 F1 | 	add	fp, #24
0a564     A8 30 62 FC | 	wrlong	local13, fp
0a568     24 50 85 F1 | 	sub	fp, #36
0a56c                 | LR__0702
0a56c     18 50 05 F1 | 	add	fp, #24
0a570     A8 0E 02 FB | 	rdlong	arg01, fp
0a574     14 50 85 F1 | 	sub	fp, #20
0a578     A8 24 02 FB | 	rdlong	local07, fp
0a57c     04 50 85 F1 | 	sub	fp, #4
0a580     1C 24 06 F1 | 	add	local07, #28
0a584     12 11 02 FB | 	rdlong	arg02, local07
0a588     34 B2 BF FD | 	call	#_ff_cc_move_window_0218
0a58c     00 F4 0D F2 | 	cmp	result1, #0 wz
0a590     1C 00 90 AD |  if_e	jmp	#LR__0703
0a594     04 50 05 F1 | 	add	fp, #4
0a598     A8 30 02 FB | 	rdlong	local13, fp
0a59c     04 50 85 F1 | 	sub	fp, #4
0a5a0     11 30 06 F1 | 	add	local13, #17
0a5a4     18 03 48 FC | 	wrbyte	#1, local13
0a5a8     01 F4 05 F6 | 	mov	result1, #1
0a5ac     B8 01 90 FD | 	jmp	#LR__0708
0a5b0                 | LR__0703
0a5b0     18 50 05 F1 | 	add	fp, #24
0a5b4     A8 0E 02 FB | 	rdlong	arg01, fp
0a5b8     34 0E 06 F1 | 	add	arg01, #52
0a5bc     14 50 85 F1 | 	sub	fp, #20
0a5c0     A8 1E 02 FB | 	rdlong	local04, fp
0a5c4     14 1E 06 F1 | 	add	local04, #20
0a5c8     0F 2D 02 FB | 	rdlong	local11, local04
0a5cc     FF 2D 06 F5 | 	and	local11, #511
0a5d0     16 0F 02 F1 | 	add	arg01, local11
0a5d4     2C 50 05 F1 | 	add	fp, #44
0a5d8     A8 10 02 FB | 	rdlong	arg02, fp
0a5dc     0C 50 85 F1 | 	sub	fp, #12
0a5e0     A8 12 02 FB | 	rdlong	arg03, fp
0a5e4     24 50 85 F1 | 	sub	fp, #36
0a5e8     24 AF BF FD | 	call	#_ff_cc_mem_cpy_0198
0a5ec     18 50 05 F1 | 	add	fp, #24
0a5f0     A8 30 02 FB | 	rdlong	local13, fp
0a5f4     18 50 85 F1 | 	sub	fp, #24
0a5f8     03 30 06 F1 | 	add	local13, #3
0a5fc     18 03 48 FC | 	wrbyte	#1, local13
0a600                 | LR__0704
0a600     0C 50 05 F1 | 	add	fp, #12
0a604     A8 30 02 FB | 	rdlong	local13, fp
0a608     18 50 05 F1 | 	add	fp, #24
0a60c     A8 22 02 FB | 	rdlong	local06, fp
0a610     11 31 82 F1 | 	sub	local13, local06
0a614     18 50 85 F1 | 	sub	fp, #24
0a618     A8 30 62 FC | 	wrlong	local13, fp
0a61c     04 50 05 F1 | 	add	fp, #4
0a620     A8 2A 02 FB | 	rdlong	local10, fp
0a624     15 21 02 F6 | 	mov	local05, local10
0a628     15 27 02 FB | 	rdlong	local08, local10
0a62c     14 50 05 F1 | 	add	fp, #20
0a630     A8 2C 02 FB | 	rdlong	local11, fp
0a634     16 2F 02 F6 | 	mov	local12, local11
0a638     16 27 02 F1 | 	add	local08, local11
0a63c     10 27 62 FC | 	wrlong	local08, local05
0a640     0C 50 05 F1 | 	add	fp, #12
0a644     A8 34 02 FB | 	rdlong	local15, fp
0a648     1A 33 02 F6 | 	mov	local14, local15
0a64c     0C 50 85 F1 | 	sub	fp, #12
0a650     A8 36 02 FB | 	rdlong	local16, fp
0a654     1B 39 02 F6 | 	mov	local17, local16
0a658     1B 33 02 F1 | 	add	local14, local16
0a65c     0C 50 05 F1 | 	add	fp, #12
0a660     A8 32 62 FC | 	wrlong	local14, fp
0a664     2C 50 85 F1 | 	sub	fp, #44
0a668     A8 3A 02 FB | 	rdlong	local18, fp
0a66c     1D 3D 02 F6 | 	mov	local19, local18
0a670     1D 3F 02 F6 | 	mov	local20, local18
0a674     1F 41 02 F6 | 	mov	local21, local20
0a678     14 40 06 F1 | 	add	local21, #20
0a67c     20 43 02 FB | 	rdlong	local22, local21
0a680     14 40 86 F1 | 	sub	local21, #20
0a684     21 45 02 F6 | 	mov	local23, local22
0a688     20 50 05 F1 | 	add	fp, #32
0a68c     A8 46 02 FB | 	rdlong	local24, fp
0a690     23 49 02 F6 | 	mov	local25, local24
0a694     23 45 02 F1 | 	add	local23, local24
0a698     14 3C 06 F1 | 	add	local19, #20
0a69c     1E 45 62 FC | 	wrlong	local23, local19
0a6a0     14 3C 86 F1 | 	sub	local19, #20
0a6a4     20 50 85 F1 | 	sub	fp, #32
0a6a8     A8 4A 02 FB | 	rdlong	local26, fp
0a6ac     25 4D 02 F6 | 	mov	local27, local26
0a6b0     25 4F 02 F6 | 	mov	local28, local26
0a6b4     27 51 02 F6 | 	mov	local29, local28
0a6b8     25 53 02 F6 | 	mov	local30, local26
0a6bc     04 50 85 F1 | 	sub	fp, #4
0a6c0     29 55 02 F6 | 	mov	local31, local30
0a6c4     14 50 06 F1 | 	add	local29, #20
0a6c8     28 57 02 FB | 	rdlong	local32, local29
0a6cc     14 50 86 F1 | 	sub	local29, #20
0a6d0     2B 59 02 F6 | 	mov	local33, local32
0a6d4     0C 54 06 F1 | 	add	local31, #12
0a6d8     2A 5B 02 FB | 	rdlong	local34, local31
0a6dc     0C 54 86 F1 | 	sub	local31, #12
0a6e0     2D 5D 02 F6 | 	mov	local35, local34
0a6e4     2E 59 1A F2 | 	cmp	local33, local35 wcz
0a6e8     24 00 90 ED |  if_be	jmp	#LR__0705
0a6ec     04 50 05 F1 | 	add	fp, #4
0a6f0     A8 5E 02 FB | 	rdlong	local36, fp
0a6f4     04 50 85 F1 | 	sub	fp, #4
0a6f8     2F 61 02 F6 | 	mov	local37, local36
0a6fc     14 60 06 F1 | 	add	local37, #20
0a700     30 63 02 FB | 	rdlong	local38, local37
0a704     14 60 86 F1 | 	sub	local37, #20
0a708     31 65 02 F6 | 	mov	local39, local38
0a70c     20 00 90 FD | 	jmp	#LR__0706
0a710                 | LR__0705
0a710     04 50 05 F1 | 	add	fp, #4
0a714     A8 66 02 FB | 	rdlong	local40, fp
0a718     04 50 85 F1 | 	sub	fp, #4
0a71c     33 69 02 F6 | 	mov	local41, local40
0a720     0C 68 06 F1 | 	add	local41, #12
0a724     34 6B 02 FB | 	rdlong	local42, local41
0a728     0C 68 86 F1 | 	sub	local41, #12
0a72c     35 65 02 F6 | 	mov	local39, local42
0a730                 | LR__0706
0a730     0C 4C 06 F1 | 	add	local27, #12
0a734     26 65 62 FC | 	wrlong	local39, local27
0a738     0C 4C 86 F1 | 	sub	local27, #12
0a73c     58 F9 9F FD | 	jmp	#LR__0686
0a740                 | LR__0707
0a740     04 50 05 F1 | 	add	fp, #4
0a744     A8 1C 02 FB | 	rdlong	local03, fp
0a748     0E 19 02 F6 | 	mov	local01, local03
0a74c     04 50 85 F1 | 	sub	fp, #4
0a750     10 1C 06 F1 | 	add	local03, #16
0a754     0E 31 C2 FA | 	rdbyte	local13, local03
0a758     40 30 46 F5 | 	or	local13, #64
0a75c     10 18 06 F1 | 	add	local01, #16
0a760     0C 31 42 FC | 	wrbyte	local13, local01
0a764                 | ' 		mem_cpy(fs->win + fp->fptr %  ((UINT) 512 ) , wbuff, wcnt);
0a764                 | ' 		fs->wflag = 1;
0a764                 | ' #line 4122 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0a764                 | ' 	}
0a764                 | ' 
0a764                 | ' 	fp->flag |=  0x40 ;
0a764                 | ' 
0a764                 | ' 	return FR_OK ;
0a764     00 F4 05 F6 | 	mov	result1, #0
0a768                 | LR__0708
0a768     A8 F0 03 F6 | 	mov	ptra, fp
0a76c     B3 00 A0 FD | 	call	#popregs_
0a770                 | _ff_cc_f_write_ret
0a770     2D 00 64 FD | 	ret
0a774                 | 
0a774                 | _ff_cc_f_sync
0a774     04 4C 05 F6 | 	mov	COUNT_, #4
0a778     A9 00 A0 FD | 	call	#pushregs_
0a77c     18 F0 07 F1 | 	add	ptra, #24
0a780     04 50 05 F1 | 	add	fp, #4
0a784     A8 0E 62 FC | 	wrlong	arg01, fp
0a788     08 50 05 F1 | 	add	fp, #8
0a78c     A8 10 02 F6 | 	mov	arg02, fp
0a790     0C 50 85 F1 | 	sub	fp, #12
0a794     A4 E8 BF FD | 	call	#_ff_cc_validate_0357
0a798     08 50 05 F1 | 	add	fp, #8
0a79c     A8 F4 61 FC | 	wrlong	result1, fp
0a7a0     08 50 85 F1 | 	sub	fp, #8
0a7a4     00 F4 0D F2 | 	cmp	result1, #0 wz
0a7a8     50 01 90 5D |  if_ne	jmp	#LR__0711
0a7ac     04 50 05 F1 | 	add	fp, #4
0a7b0     A8 18 02 FB | 	rdlong	local01, fp
0a7b4     04 50 85 F1 | 	sub	fp, #4
0a7b8     10 18 06 F1 | 	add	local01, #16
0a7bc     0C 1B C2 FA | 	rdbyte	local02, local01
0a7c0     40 1A CE F7 | 	test	local02, #64 wz
0a7c4     34 01 90 AD |  if_e	jmp	#LR__0710
0a7c8     10 50 05 F1 | 	add	fp, #16
0a7cc     80 10 A7 FF 
0a7d0     A8 00 68 FC | 	wrlong	##1310785536, fp
0a7d4     04 50 85 F1 | 	sub	fp, #4
0a7d8     A8 0E 02 FB | 	rdlong	arg01, fp
0a7dc     08 50 85 F1 | 	sub	fp, #8
0a7e0     A8 1C 02 FB | 	rdlong	local03, fp
0a7e4     04 50 85 F1 | 	sub	fp, #4
0a7e8     20 1C 06 F1 | 	add	local03, #32
0a7ec     0E 11 02 FB | 	rdlong	arg02, local03
0a7f0     CC AF BF FD | 	call	#_ff_cc_move_window_0218
0a7f4     08 50 05 F1 | 	add	fp, #8
0a7f8     A8 F4 61 FC | 	wrlong	result1, fp
0a7fc     08 50 85 F1 | 	sub	fp, #8
0a800     00 F4 0D F2 | 	cmp	result1, #0 wz
0a804     F4 00 90 5D |  if_ne	jmp	#LR__0709
0a808     04 50 05 F1 | 	add	fp, #4
0a80c     A8 1A 02 FB | 	rdlong	local02, fp
0a810     24 1A 06 F1 | 	add	local02, #36
0a814     0D 1B 02 FB | 	rdlong	local02, local02
0a818     10 50 05 F1 | 	add	fp, #16
0a81c     A8 1A 62 FC | 	wrlong	local02, fp
0a820     0D 1F 02 F6 | 	mov	local04, local02
0a824     0B 1E 06 F1 | 	add	local04, #11
0a828     0F 1D C2 FA | 	rdbyte	local03, local04
0a82c     20 1C 46 F5 | 	or	local03, #32
0a830     0B 1A 06 F1 | 	add	local02, #11
0a834     0D 1D 42 FC | 	wrbyte	local03, local02
0a838     10 50 85 F1 | 	sub	fp, #16
0a83c     A8 1E 02 FB | 	rdlong	local04, fp
0a840     0F 0F 02 FB | 	rdlong	arg01, local04
0a844     10 50 05 F1 | 	add	fp, #16
0a848     A8 10 02 FB | 	rdlong	arg02, fp
0a84c     14 50 85 F1 | 	sub	fp, #20
0a850     08 1E 06 F1 | 	add	local04, #8
0a854     0F 13 02 FB | 	rdlong	arg03, local04
0a858     DC BE BF FD | 	call	#_ff_cc_st_clust_0260
0a85c     14 50 05 F1 | 	add	fp, #20
0a860     A8 0E 02 FB | 	rdlong	arg01, fp
0a864     1C 0E 06 F1 | 	add	arg01, #28
0a868     10 50 85 F1 | 	sub	fp, #16
0a86c     A8 1C 02 FB | 	rdlong	local03, fp
0a870     04 50 85 F1 | 	sub	fp, #4
0a874     0C 1C 06 F1 | 	add	local03, #12
0a878     0E 11 02 FB | 	rdlong	arg02, local03
0a87c     64 AC BF FD | 	call	#_ff_cc_st_dword_0195
0a880     14 50 05 F1 | 	add	fp, #20
0a884     A8 0E 02 FB | 	rdlong	arg01, fp
0a888     16 0E 06 F1 | 	add	arg01, #22
0a88c     04 50 85 F1 | 	sub	fp, #4
0a890     A8 10 02 FB | 	rdlong	arg02, fp
0a894     10 50 85 F1 | 	sub	fp, #16
0a898     48 AC BF FD | 	call	#_ff_cc_st_dword_0195
0a89c     14 50 05 F1 | 	add	fp, #20
0a8a0     A8 0E 02 FB | 	rdlong	arg01, fp
0a8a4     14 50 85 F1 | 	sub	fp, #20
0a8a8     12 0E 06 F1 | 	add	arg01, #18
0a8ac     00 10 06 F6 | 	mov	arg02, #0
0a8b0     0C AC BF FD | 	call	#_ff_cc_st_word_0194
0a8b4     0C 50 05 F1 | 	add	fp, #12
0a8b8     A8 1A 02 FB | 	rdlong	local02, fp
0a8bc     03 1A 06 F1 | 	add	local02, #3
0a8c0     0D 03 48 FC | 	wrbyte	#1, local02
0a8c4     A8 0E 02 FB | 	rdlong	arg01, fp
0a8c8     0C 50 85 F1 | 	sub	fp, #12
0a8cc     6C AF BF FD | 	call	#_ff_cc_sync_fs_0220
0a8d0     08 50 05 F1 | 	add	fp, #8
0a8d4     A8 F4 61 FC | 	wrlong	result1, fp
0a8d8     04 50 85 F1 | 	sub	fp, #4
0a8dc     A8 1E 02 FB | 	rdlong	local04, fp
0a8e0     0F 1B 02 F6 | 	mov	local02, local04
0a8e4     04 50 85 F1 | 	sub	fp, #4
0a8e8     10 1E 06 F1 | 	add	local04, #16
0a8ec     0F 1D C2 FA | 	rdbyte	local03, local04
0a8f0     BF 1C 06 F5 | 	and	local03, #191
0a8f4     10 1A 06 F1 | 	add	local02, #16
0a8f8     0D 1D 42 FC | 	wrbyte	local03, local02
0a8fc                 | LR__0709
0a8fc                 | LR__0710
0a8fc                 | LR__0711
0a8fc                 | ' 					dir = fp->dir_ptr;
0a8fc                 | ' 					dir[ 11 ] |=  0x20 ;
0a8fc                 | ' 					st_clust(fp->obj.fs, dir, fp->obj.sclust);
0a8fc                 | ' 					st_dword(dir +  28 , (DWORD)fp->obj.objsize);
0a8fc                 | ' 					st_dword(dir +  22 , tm);
0a8fc                 | ' 					st_word(dir +  18 , 0);
0a8fc                 | ' 					fs->wflag = 1;
0a8fc                 | ' 					res = sync_fs(fs);
0a8fc                 | ' 					fp->flag &= (BYTE)~ 0x40 ;
0a8fc                 | ' 				}
0a8fc                 | ' 			}
0a8fc                 | ' 		}
0a8fc                 | ' 	}
0a8fc                 | ' 
0a8fc                 | ' 	return res ;
0a8fc     08 50 05 F1 | 	add	fp, #8
0a900     A8 F4 01 FB | 	rdlong	result1, fp
0a904     08 50 85 F1 | 	sub	fp, #8
0a908     A8 F0 03 F6 | 	mov	ptra, fp
0a90c     B3 00 A0 FD | 	call	#popregs_
0a910                 | _ff_cc_f_sync_ret
0a910     2D 00 64 FD | 	ret
0a914                 | 
0a914                 | _ff_cc_f_close
0a914     01 4C 05 F6 | 	mov	COUNT_, #1
0a918     A9 00 A0 FD | 	call	#pushregs_
0a91c     10 F0 07 F1 | 	add	ptra, #16
0a920     04 50 05 F1 | 	add	fp, #4
0a924     A8 0E 62 FC | 	wrlong	arg01, fp
0a928     04 50 85 F1 | 	sub	fp, #4
0a92c     44 FE BF FD | 	call	#_ff_cc_f_sync
0a930     08 50 05 F1 | 	add	fp, #8
0a934     A8 F4 61 FC | 	wrlong	result1, fp
0a938     08 50 85 F1 | 	sub	fp, #8
0a93c     00 F4 0D F2 | 	cmp	result1, #0 wz
0a940     3C 00 90 5D |  if_ne	jmp	#LR__0713
0a944     04 50 05 F1 | 	add	fp, #4
0a948     A8 0E 02 FB | 	rdlong	arg01, fp
0a94c     08 50 05 F1 | 	add	fp, #8
0a950     A8 10 02 F6 | 	mov	arg02, fp
0a954     0C 50 85 F1 | 	sub	fp, #12
0a958     E0 E6 BF FD | 	call	#_ff_cc_validate_0357
0a95c     08 50 05 F1 | 	add	fp, #8
0a960     A8 F4 61 FC | 	wrlong	result1, fp
0a964     08 50 85 F1 | 	sub	fp, #8
0a968     00 F4 0D F2 | 	cmp	result1, #0 wz
0a96c     10 00 90 5D |  if_ne	jmp	#LR__0712
0a970     04 50 05 F1 | 	add	fp, #4
0a974     A8 18 02 FB | 	rdlong	local01, fp
0a978     04 50 85 F1 | 	sub	fp, #4
0a97c     0C 01 68 FC | 	wrlong	#0, local01
0a980                 | LR__0712
0a980                 | LR__0713
0a980                 | ' 
0a980                 | ' 
0a980                 | ' 
0a980                 | ' 
0a980                 | ' 			fp->obj.fs = 0;
0a980                 | ' #line 4240 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0a980                 | ' 		}
0a980                 | ' 	}
0a980                 | ' 	return res;
0a980     08 50 05 F1 | 	add	fp, #8
0a984     A8 F4 01 FB | 	rdlong	result1, fp
0a988     08 50 85 F1 | 	sub	fp, #8
0a98c     A8 F0 03 F6 | 	mov	ptra, fp
0a990     B3 00 A0 FD | 	call	#popregs_
0a994                 | _ff_cc_f_close_ret
0a994     2D 00 64 FD | 	ret
0a998                 | 
0a998                 | _ff_cc_f_lseek
0a998     0C 4C 05 F6 | 	mov	COUNT_, #12
0a99c     A9 00 A0 FD | 	call	#pushregs_
0a9a0     24 F0 07 F1 | 	add	ptra, #36
0a9a4     04 50 05 F1 | 	add	fp, #4
0a9a8     A8 0E 62 FC | 	wrlong	arg01, fp
0a9ac     04 50 05 F1 | 	add	fp, #4
0a9b0     A8 10 62 FC | 	wrlong	arg02, fp
0a9b4     04 50 85 F1 | 	sub	fp, #4
0a9b8     A8 0E 02 FB | 	rdlong	arg01, fp
0a9bc     0C 50 05 F1 | 	add	fp, #12
0a9c0     A8 10 02 F6 | 	mov	arg02, fp
0a9c4     10 50 85 F1 | 	sub	fp, #16
0a9c8     70 E6 BF FD | 	call	#_ff_cc_validate_0357
0a9cc     0C 50 05 F1 | 	add	fp, #12
0a9d0     A8 F4 61 FC | 	wrlong	result1, fp
0a9d4     0C 50 85 F1 | 	sub	fp, #12
0a9d8     00 F4 0D F2 | 	cmp	result1, #0 wz
0a9dc     1C 00 90 5D |  if_ne	jmp	#LR__0714
0a9e0     04 50 05 F1 | 	add	fp, #4
0a9e4     A8 18 02 FB | 	rdlong	local01, fp
0a9e8     11 18 06 F1 | 	add	local01, #17
0a9ec     0C 1B C2 FA | 	rdbyte	local02, local01
0a9f0     08 50 05 F1 | 	add	fp, #8
0a9f4     A8 1A 62 FC | 	wrlong	local02, fp
0a9f8     0C 50 85 F1 | 	sub	fp, #12
0a9fc                 | LR__0714
0a9fc     0C 50 05 F1 | 	add	fp, #12
0aa00     A8 1A 0A FB | 	rdlong	local02, fp wz
0aa04     0C 50 85 F1 | 	sub	fp, #12
0aa08     10 00 90 AD |  if_e	jmp	#LR__0715
0aa0c     0C 50 05 F1 | 	add	fp, #12
0aa10     A8 F4 01 FB | 	rdlong	result1, fp
0aa14     0C 50 85 F1 | 	sub	fp, #12
0aa18     94 05 90 FD | 	jmp	#LR__0735
0aa1c                 | LR__0715
0aa1c     04 50 05 F1 | 	add	fp, #4
0aa20     A8 1A 02 FB | 	rdlong	local02, fp
0aa24     04 50 05 F1 | 	add	fp, #4
0aa28     A8 1C 02 FB | 	rdlong	local03, fp
0aa2c     08 50 85 F1 | 	sub	fp, #8
0aa30     0C 1A 06 F1 | 	add	local02, #12
0aa34     0D 1F 02 FB | 	rdlong	local04, local02
0aa38     0F 21 02 F6 | 	mov	local05, local04
0aa3c     10 1D 1A F2 | 	cmp	local03, local05 wcz
0aa40     50 00 90 ED |  if_be	jmp	#LR__0716
0aa44     04 50 05 F1 | 	add	fp, #4
0aa48     A8 22 02 FB | 	rdlong	local06, fp
0aa4c     04 50 85 F1 | 	sub	fp, #4
0aa50     11 25 02 F6 | 	mov	local07, local06
0aa54     10 24 06 F1 | 	add	local07, #16
0aa58     12 27 C2 FA | 	rdbyte	local08, local07
0aa5c     10 24 86 F1 | 	sub	local07, #16
0aa60     13 29 02 F6 | 	mov	local09, local08
0aa64     07 28 46 F7 | 	zerox	local09, #7
0aa68     02 28 0E F5 | 	and	local09, #2 wz
0aa6c     24 00 90 5D |  if_ne	jmp	#LR__0716
0aa70     04 50 05 F1 | 	add	fp, #4
0aa74     A8 18 02 FB | 	rdlong	local01, fp
0aa78     0C 1B 02 F6 | 	mov	local02, local01
0aa7c     0C 1A 06 F1 | 	add	local02, #12
0aa80     0D 2B 02 FB | 	rdlong	local10, local02
0aa84     0C 1A 86 F1 | 	sub	local02, #12
0aa88     04 50 05 F1 | 	add	fp, #4
0aa8c     A8 2A 62 FC | 	wrlong	local10, fp
0aa90     08 50 85 F1 | 	sub	fp, #8
0aa94                 | LR__0716
0aa94     04 50 05 F1 | 	add	fp, #4
0aa98     A8 1A 02 FB | 	rdlong	local02, fp
0aa9c     14 1A 06 F1 | 	add	local02, #20
0aaa0     0D 2B 02 FB | 	rdlong	local10, local02
0aaa4     1C 50 05 F1 | 	add	fp, #28
0aaa8     A8 2A 62 FC | 	wrlong	local10, fp
0aaac     1C 50 85 F1 | 	sub	fp, #28
0aab0     A8 1A 02 FB | 	rdlong	local02, fp
0aab4     18 50 05 F1 | 	add	fp, #24
0aab8     A8 00 68 FC | 	wrlong	#0, fp
0aabc     14 1A 06 F1 | 	add	local02, #20
0aac0     0D 01 68 FC | 	wrlong	#0, local02
0aac4     14 50 85 F1 | 	sub	fp, #20
0aac8     A8 1A 02 FB | 	rdlong	local02, fp
0aacc     08 50 85 F1 | 	sub	fp, #8
0aad0     01 1A 16 F2 | 	cmp	local02, #1 wc
0aad4     F0 03 90 CD |  if_b	jmp	#LR__0732
0aad8     10 50 05 F1 | 	add	fp, #16
0aadc     A8 18 02 FB | 	rdlong	local01, fp
0aae0     0A 18 06 F1 | 	add	local01, #10
0aae4     0C 21 E2 FA | 	rdword	local05, local01
0aae8     09 20 66 F0 | 	shl	local05, #9
0aaec     08 50 05 F1 | 	add	fp, #8
0aaf0     A8 20 62 FC | 	wrlong	local05, fp
0aaf4     08 50 05 F1 | 	add	fp, #8
0aaf8     A8 1A 02 FB | 	rdlong	local02, fp
0aafc     20 50 85 F1 | 	sub	fp, #32
0ab00     01 1A 16 F2 | 	cmp	local02, #1 wc
0ab04     B4 00 90 CD |  if_b	jmp	#LR__0717
0ab08     08 50 05 F1 | 	add	fp, #8
0ab0c     A8 20 02 FB | 	rdlong	local05, fp
0ab10     01 20 86 F1 | 	sub	local05, #1
0ab14     10 50 05 F1 | 	add	fp, #16
0ab18     A8 2C 02 FB | 	rdlong	local11, fp
0ab1c     16 21 12 FD | 	qdiv	local05, local11
0ab20     08 50 05 F1 | 	add	fp, #8
0ab24     A8 22 02 FB | 	rdlong	local06, fp
0ab28     11 27 02 F6 | 	mov	local08, local06
0ab2c     01 26 86 F1 | 	sub	local08, #1
0ab30     16 2F 02 F6 | 	mov	local12, local11
0ab34     18 20 62 FD | 	getqx	local05
0ab38     17 27 12 FD | 	qdiv	local08, local12
0ab3c     20 50 85 F1 | 	sub	fp, #32
0ab40     18 26 62 FD | 	getqx	local08
0ab44     13 21 12 F2 | 	cmp	local05, local08 wc
0ab48     70 00 90 CD |  if_b	jmp	#LR__0717
0ab4c     04 50 05 F1 | 	add	fp, #4
0ab50     A8 1A 02 FB | 	rdlong	local02, fp
0ab54     1C 50 05 F1 | 	add	fp, #28
0ab58     A8 2A 02 FB | 	rdlong	local10, fp
0ab5c     01 2A 86 F1 | 	sub	local10, #1
0ab60     08 50 85 F1 | 	sub	fp, #8
0ab64     A8 20 02 FB | 	rdlong	local05, fp
0ab68     01 20 86 F1 | 	sub	local05, #1
0ab6c     10 2B 22 F5 | 	andn	local10, local05
0ab70     14 1A 06 F1 | 	add	local02, #20
0ab74     0D 2B 62 FC | 	wrlong	local10, local02
0ab78     10 50 85 F1 | 	sub	fp, #16
0ab7c     A8 1A 02 FB | 	rdlong	local02, fp
0ab80     04 50 85 F1 | 	sub	fp, #4
0ab84     A8 2A 02 FB | 	rdlong	local10, fp
0ab88     14 2A 06 F1 | 	add	local10, #20
0ab8c     15 21 02 FB | 	rdlong	local05, local10
0ab90     10 1B 82 F1 | 	sub	local02, local05
0ab94     04 50 05 F1 | 	add	fp, #4
0ab98     A8 1A 62 FC | 	wrlong	local02, fp
0ab9c     04 50 85 F1 | 	sub	fp, #4
0aba0     A8 1A 02 FB | 	rdlong	local02, fp
0aba4     18 1A 06 F1 | 	add	local02, #24
0aba8     0D 2B 02 FB | 	rdlong	local10, local02
0abac     10 50 05 F1 | 	add	fp, #16
0abb0     A8 2A 62 FC | 	wrlong	local10, fp
0abb4     14 50 85 F1 | 	sub	fp, #20
0abb8     D0 00 90 FD | 	jmp	#LR__0721
0abbc                 | LR__0717
0abbc     04 50 05 F1 | 	add	fp, #4
0abc0     A8 1A 02 FB | 	rdlong	local02, fp
0abc4     08 1A 06 F1 | 	add	local02, #8
0abc8     0D 1B 0A FB | 	rdlong	local02, local02 wz
0abcc     10 50 05 F1 | 	add	fp, #16
0abd0     A8 1A 62 FC | 	wrlong	local02, fp
0abd4     14 50 85 F1 | 	sub	fp, #20
0abd8     94 00 90 5D |  if_ne	jmp	#LR__0720
0abdc     04 50 05 F1 | 	add	fp, #4
0abe0     A8 0E 02 FB | 	rdlong	arg01, fp
0abe4     04 50 85 F1 | 	sub	fp, #4
0abe8     00 10 06 F6 | 	mov	arg02, #0
0abec     A8 B3 BF FD | 	call	#_ff_cc_create_chain_0240
0abf0     14 50 05 F1 | 	add	fp, #20
0abf4     A8 F4 61 FC | 	wrlong	result1, fp
0abf8     14 50 85 F1 | 	sub	fp, #20
0abfc     01 F4 0D F2 | 	cmp	result1, #1 wz
0ac00     1C 00 90 5D |  if_ne	jmp	#LR__0718
0ac04     04 50 05 F1 | 	add	fp, #4
0ac08     A8 1A 02 FB | 	rdlong	local02, fp
0ac0c     04 50 85 F1 | 	sub	fp, #4
0ac10     11 1A 06 F1 | 	add	local02, #17
0ac14     0D 05 48 FC | 	wrbyte	#2, local02
0ac18     02 F4 05 F6 | 	mov	result1, #2
0ac1c     90 03 90 FD | 	jmp	#LR__0735
0ac20                 | LR__0718
0ac20     14 50 05 F1 | 	add	fp, #20
0ac24     A8 1A 02 FB | 	rdlong	local02, fp
0ac28     14 50 85 F1 | 	sub	fp, #20
0ac2c     FF FF 7F FF 
0ac30     FF 1B 0E F2 | 	cmp	local02, ##-1 wz
0ac34     1C 00 90 5D |  if_ne	jmp	#LR__0719
0ac38     04 50 05 F1 | 	add	fp, #4
0ac3c     A8 1A 02 FB | 	rdlong	local02, fp
0ac40     04 50 85 F1 | 	sub	fp, #4
0ac44     11 1A 06 F1 | 	add	local02, #17
0ac48     0D 03 48 FC | 	wrbyte	#1, local02
0ac4c     01 F4 05 F6 | 	mov	result1, #1
0ac50     5C 03 90 FD | 	jmp	#LR__0735
0ac54                 | LR__0719
0ac54     04 50 05 F1 | 	add	fp, #4
0ac58     A8 1A 02 FB | 	rdlong	local02, fp
0ac5c     10 50 05 F1 | 	add	fp, #16
0ac60     A8 2A 02 FB | 	rdlong	local10, fp
0ac64     14 50 85 F1 | 	sub	fp, #20
0ac68     08 1A 06 F1 | 	add	local02, #8
0ac6c     0D 2B 62 FC | 	wrlong	local10, local02
0ac70                 | LR__0720
0ac70     04 50 05 F1 | 	add	fp, #4
0ac74     A8 1A 02 FB | 	rdlong	local02, fp
0ac78     10 50 05 F1 | 	add	fp, #16
0ac7c     A8 2A 02 FB | 	rdlong	local10, fp
0ac80     14 50 85 F1 | 	sub	fp, #20
0ac84     18 1A 06 F1 | 	add	local02, #24
0ac88     0D 2B 62 FC | 	wrlong	local10, local02
0ac8c                 | LR__0721
0ac8c     14 50 05 F1 | 	add	fp, #20
0ac90     A8 1A 0A FB | 	rdlong	local02, fp wz
0ac94     14 50 85 F1 | 	sub	fp, #20
0ac98     2C 02 90 AD |  if_e	jmp	#LR__0731
0ac9c                 | ' 				while (ofs > bcs) {
0ac9c                 | LR__0722
0ac9c     08 50 05 F1 | 	add	fp, #8
0aca0     A8 1A 02 FB | 	rdlong	local02, fp
0aca4     10 50 05 F1 | 	add	fp, #16
0aca8     A8 2A 02 FB | 	rdlong	local10, fp
0acac     18 50 85 F1 | 	sub	fp, #24
0acb0     15 1B 1A F2 | 	cmp	local02, local10 wcz
0acb4     6C 01 90 ED |  if_be	jmp	#LR__0728
0acb8     08 50 05 F1 | 	add	fp, #8
0acbc     A8 1A 02 FB | 	rdlong	local02, fp
0acc0     10 50 05 F1 | 	add	fp, #16
0acc4     A8 2A 02 FB | 	rdlong	local10, fp
0acc8     15 1B 82 F1 | 	sub	local02, local10
0accc     10 50 85 F1 | 	sub	fp, #16
0acd0     A8 1A 62 FC | 	wrlong	local02, fp
0acd4     04 50 85 F1 | 	sub	fp, #4
0acd8     A8 20 02 FB | 	rdlong	local05, fp
0acdc     10 1D 02 F6 | 	mov	local03, local05
0ace0     14 1C 06 F1 | 	add	local03, #20
0ace4     0E 1F 02 FB | 	rdlong	local04, local03
0ace8     0F 2B 02 F6 | 	mov	local10, local04
0acec     14 50 05 F1 | 	add	fp, #20
0acf0     A8 24 02 FB | 	rdlong	local07, fp
0acf4     12 2B 02 F1 | 	add	local10, local07
0acf8     14 20 06 F1 | 	add	local05, #20
0acfc     10 2B 62 FC | 	wrlong	local10, local05
0ad00     14 50 85 F1 | 	sub	fp, #20
0ad04     A8 18 02 FB | 	rdlong	local01, fp
0ad08     04 50 85 F1 | 	sub	fp, #4
0ad0c     10 18 06 F1 | 	add	local01, #16
0ad10     0C 1B C2 FA | 	rdbyte	local02, local01
0ad14     02 1A CE F7 | 	test	local02, #2 wz
0ad18     3C 00 90 AD |  if_e	jmp	#LR__0723
0ad1c     04 50 05 F1 | 	add	fp, #4
0ad20     A8 0E 02 FB | 	rdlong	arg01, fp
0ad24     10 50 05 F1 | 	add	fp, #16
0ad28     A8 10 02 FB | 	rdlong	arg02, fp
0ad2c     14 50 85 F1 | 	sub	fp, #20
0ad30     64 B2 BF FD | 	call	#_ff_cc_create_chain_0240
0ad34     14 50 05 F1 | 	add	fp, #20
0ad38     A8 F4 61 FC | 	wrlong	result1, fp
0ad3c     FA 1A 0A F6 | 	mov	local02, result1 wz
0ad40     14 50 85 F1 | 	sub	fp, #20
0ad44     34 00 90 5D |  if_ne	jmp	#LR__0724
0ad48     08 50 05 F1 | 	add	fp, #8
0ad4c     A8 00 68 FC | 	wrlong	#0, fp
0ad50     08 50 85 F1 | 	sub	fp, #8
0ad54                 | ' 							ofs = 0; break;
0ad54     CC 00 90 FD | 	jmp	#LR__0728
0ad58                 | LR__0723
0ad58     04 50 05 F1 | 	add	fp, #4
0ad5c     A8 0E 02 FB | 	rdlong	arg01, fp
0ad60     10 50 05 F1 | 	add	fp, #16
0ad64     A8 10 02 FB | 	rdlong	arg02, fp
0ad68     14 50 85 F1 | 	sub	fp, #20
0ad6c     70 AC BF FD | 	call	#_ff_cc_get_fat_0226
0ad70     14 50 05 F1 | 	add	fp, #20
0ad74     A8 F4 61 FC | 	wrlong	result1, fp
0ad78     14 50 85 F1 | 	sub	fp, #20
0ad7c                 | LR__0724
0ad7c     14 50 05 F1 | 	add	fp, #20
0ad80     A8 1A 02 FB | 	rdlong	local02, fp
0ad84     14 50 85 F1 | 	sub	fp, #20
0ad88     FF FF 7F FF 
0ad8c     FF 1B 0E F2 | 	cmp	local02, ##-1 wz
0ad90     1C 00 90 5D |  if_ne	jmp	#LR__0725
0ad94     04 50 05 F1 | 	add	fp, #4
0ad98     A8 1A 02 FB | 	rdlong	local02, fp
0ad9c     04 50 85 F1 | 	sub	fp, #4
0ada0     11 1A 06 F1 | 	add	local02, #17
0ada4     0D 03 48 FC | 	wrbyte	#1, local02
0ada8     01 F4 05 F6 | 	mov	result1, #1
0adac     00 02 90 FD | 	jmp	#LR__0735
0adb0                 | LR__0725
0adb0     14 50 05 F1 | 	add	fp, #20
0adb4     A8 1A 02 FB | 	rdlong	local02, fp
0adb8     14 50 85 F1 | 	sub	fp, #20
0adbc     02 1A 16 F2 | 	cmp	local02, #2 wc
0adc0     24 00 90 CD |  if_b	jmp	#LR__0726
0adc4     10 50 05 F1 | 	add	fp, #16
0adc8     A8 2A 02 FB | 	rdlong	local10, fp
0adcc     04 50 05 F1 | 	add	fp, #4
0add0     A8 20 02 FB | 	rdlong	local05, fp
0add4     14 50 85 F1 | 	sub	fp, #20
0add8     18 2A 06 F1 | 	add	local10, #24
0addc     15 29 02 FB | 	rdlong	local09, local10
0ade0     14 21 12 F2 | 	cmp	local05, local09 wc
0ade4     1C 00 90 CD |  if_b	jmp	#LR__0727
0ade8                 | LR__0726
0ade8     04 50 05 F1 | 	add	fp, #4
0adec     A8 1A 02 FB | 	rdlong	local02, fp
0adf0     04 50 85 F1 | 	sub	fp, #4
0adf4     11 1A 06 F1 | 	add	local02, #17
0adf8     0D 05 48 FC | 	wrbyte	#2, local02
0adfc     02 F4 05 F6 | 	mov	result1, #2
0ae00     AC 01 90 FD | 	jmp	#LR__0735
0ae04                 | LR__0727
0ae04     04 50 05 F1 | 	add	fp, #4
0ae08     A8 1A 02 FB | 	rdlong	local02, fp
0ae0c     10 50 05 F1 | 	add	fp, #16
0ae10     A8 2A 02 FB | 	rdlong	local10, fp
0ae14     14 50 85 F1 | 	sub	fp, #20
0ae18     18 1A 06 F1 | 	add	local02, #24
0ae1c     0D 2B 62 FC | 	wrlong	local10, local02
0ae20     78 FE 9F FD | 	jmp	#LR__0722
0ae24                 | LR__0728
0ae24     04 50 05 F1 | 	add	fp, #4
0ae28     A8 1C 02 FB | 	rdlong	local03, fp
0ae2c     0E 1B 02 F6 | 	mov	local02, local03
0ae30     14 1C 06 F1 | 	add	local03, #20
0ae34     0E 2B 02 FB | 	rdlong	local10, local03
0ae38     04 50 05 F1 | 	add	fp, #4
0ae3c     A8 28 02 FB | 	rdlong	local09, fp
0ae40     14 2B 02 F1 | 	add	local10, local09
0ae44     14 1A 06 F1 | 	add	local02, #20
0ae48     0D 2B 62 FC | 	wrlong	local10, local02
0ae4c     A8 1A 02 FB | 	rdlong	local02, fp
0ae50     08 50 85 F1 | 	sub	fp, #8
0ae54     FF 1B CE F7 | 	test	local02, #511 wz
0ae58     6C 00 90 AD |  if_e	jmp	#LR__0730
0ae5c     10 50 05 F1 | 	add	fp, #16
0ae60     A8 0E 02 FB | 	rdlong	arg01, fp
0ae64     04 50 05 F1 | 	add	fp, #4
0ae68     A8 10 02 FB | 	rdlong	arg02, fp
0ae6c     14 50 85 F1 | 	sub	fp, #20
0ae70     2C AB BF FD | 	call	#_ff_cc_clst2sect_0221
0ae74     1C 50 05 F1 | 	add	fp, #28
0ae78     A8 F4 61 FC | 	wrlong	result1, fp
0ae7c     1C 50 85 F1 | 	sub	fp, #28
0ae80     00 F4 0D F2 | 	cmp	result1, #0 wz
0ae84     1C 00 90 5D |  if_ne	jmp	#LR__0729
0ae88     04 50 05 F1 | 	add	fp, #4
0ae8c     A8 1A 02 FB | 	rdlong	local02, fp
0ae90     04 50 85 F1 | 	sub	fp, #4
0ae94     11 1A 06 F1 | 	add	local02, #17
0ae98     0D 05 48 FC | 	wrbyte	#2, local02
0ae9c     02 F4 05 F6 | 	mov	result1, #2
0aea0     0C 01 90 FD | 	jmp	#LR__0735
0aea4                 | LR__0729
0aea4     1C 50 05 F1 | 	add	fp, #28
0aea8     A8 1A 02 FB | 	rdlong	local02, fp
0aeac     14 50 85 F1 | 	sub	fp, #20
0aeb0     A8 2A 02 FB | 	rdlong	local10, fp
0aeb4     09 2A 46 F0 | 	shr	local10, #9
0aeb8     15 1B 02 F1 | 	add	local02, local10
0aebc     14 50 05 F1 | 	add	fp, #20
0aec0     A8 1A 62 FC | 	wrlong	local02, fp
0aec4     1C 50 85 F1 | 	sub	fp, #28
0aec8                 | LR__0730
0aec8                 | LR__0731
0aec8                 | LR__0732
0aec8     04 50 05 F1 | 	add	fp, #4
0aecc     A8 2A 02 FB | 	rdlong	local10, fp
0aed0     15 1B 02 F6 | 	mov	local02, local10
0aed4     04 50 85 F1 | 	sub	fp, #4
0aed8     14 1A 06 F1 | 	add	local02, #20
0aedc     0D 21 02 FB | 	rdlong	local05, local02
0aee0     0C 2A 06 F1 | 	add	local10, #12
0aee4     15 29 02 FB | 	rdlong	local09, local10
0aee8     14 21 1A F2 | 	cmp	local05, local09 wcz
0aeec     3C 00 90 ED |  if_be	jmp	#LR__0733
0aef0     04 50 05 F1 | 	add	fp, #4
0aef4     A8 2A 02 FB | 	rdlong	local10, fp
0aef8     15 1B 02 F6 | 	mov	local02, local10
0aefc     14 2A 06 F1 | 	add	local10, #20
0af00     15 21 02 FB | 	rdlong	local05, local10
0af04     0C 1A 06 F1 | 	add	local02, #12
0af08     0D 21 62 FC | 	wrlong	local05, local02
0af0c     A8 1C 02 FB | 	rdlong	local03, fp
0af10     0E 1B 02 F6 | 	mov	local02, local03
0af14     04 50 85 F1 | 	sub	fp, #4
0af18     10 1C 06 F1 | 	add	local03, #16
0af1c     0E 2B C2 FA | 	rdbyte	local10, local03
0af20     40 2A 46 F5 | 	or	local10, #64
0af24     10 1A 06 F1 | 	add	local02, #16
0af28     0D 2B 42 FC | 	wrbyte	local10, local02
0af2c                 | LR__0733
0af2c     04 50 05 F1 | 	add	fp, #4
0af30     A8 1A 02 FB | 	rdlong	local02, fp
0af34     04 50 85 F1 | 	sub	fp, #4
0af38     14 1A 06 F1 | 	add	local02, #20
0af3c     0D 21 02 FB | 	rdlong	local05, local02
0af40     10 1D 02 F6 | 	mov	local03, local05
0af44     FF 1D CE F7 | 	test	local03, #511 wz
0af48     58 00 90 AD |  if_e	jmp	#LR__0734
0af4c     04 50 05 F1 | 	add	fp, #4
0af50     A8 28 02 FB | 	rdlong	local09, fp
0af54     14 1F 02 F6 | 	mov	local04, local09
0af58     18 50 05 F1 | 	add	fp, #24
0af5c     A8 22 02 FB | 	rdlong	local06, fp
0af60     1C 50 85 F1 | 	sub	fp, #28
0af64     11 25 02 F6 | 	mov	local07, local06
0af68     1C 1E 06 F1 | 	add	local04, #28
0af6c     0F 2F 02 FB | 	rdlong	local12, local04
0af70     1C 1E 86 F1 | 	sub	local04, #28
0af74     17 27 02 F6 | 	mov	local08, local12
0af78     13 25 0A F2 | 	cmp	local07, local08 wz
0af7c     24 00 90 AD |  if_e	jmp	#LR__0734
0af80     04 50 05 F1 | 	add	fp, #4
0af84     A8 18 02 FB | 	rdlong	local01, fp
0af88     0C 1B 02 F6 | 	mov	local02, local01
0af8c     18 50 05 F1 | 	add	fp, #24
0af90     A8 2A 02 FB | 	rdlong	local10, fp
0af94     1C 50 85 F1 | 	sub	fp, #28
0af98     1C 1A 06 F1 | 	add	local02, #28
0af9c     0D 2B 62 FC | 	wrlong	local10, local02
0afa0     1C 1A 86 F1 | 	sub	local02, #28
0afa4                 | LR__0734
0afa4                 | ' #line 4581 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0afa4                 | ' 			fp->sect = nsect;
0afa4                 | ' 		}
0afa4                 | ' 	}
0afa4                 | ' 
0afa4                 | ' 	return res ;
0afa4     0C 50 05 F1 | 	add	fp, #12
0afa8     A8 F4 01 FB | 	rdlong	result1, fp
0afac     0C 50 85 F1 | 	sub	fp, #12
0afb0                 | LR__0735
0afb0     A8 F0 03 F6 | 	mov	ptra, fp
0afb4     B3 00 A0 FD | 	call	#popregs_
0afb8                 | _ff_cc_f_lseek_ret
0afb8     2D 00 64 FD | 	ret
0afbc                 | 
0afbc                 | _ff_cc_f_opendir
0afbc     04 4C 05 F6 | 	mov	COUNT_, #4
0afc0     A9 00 A0 FD | 	call	#pushregs_
0afc4     14 F0 07 F1 | 	add	ptra, #20
0afc8     04 50 05 F1 | 	add	fp, #4
0afcc     A8 0E 62 FC | 	wrlong	arg01, fp
0afd0     04 50 05 F1 | 	add	fp, #4
0afd4     A8 10 62 FC | 	wrlong	arg02, fp
0afd8     04 50 85 F1 | 	sub	fp, #4
0afdc     A8 18 0A FB | 	rdlong	local01, fp wz
0afe0     04 50 85 F1 | 	sub	fp, #4
0afe4     09 F4 05 A6 |  if_e	mov	result1, #9
0afe8     7C 01 90 AD |  if_e	jmp	#LR__0743
0afec     08 50 05 F1 | 	add	fp, #8
0aff0     A8 0E 02 F6 | 	mov	arg01, fp
0aff4     08 50 05 F1 | 	add	fp, #8
0aff8     A8 10 02 F6 | 	mov	arg02, fp
0affc     10 50 85 F1 | 	sub	fp, #16
0b000     00 12 06 F6 | 	mov	arg03, #0
0b004     E8 D9 BF FD | 	call	#_ff_cc_mount_volume_0355
0b008     0C 50 05 F1 | 	add	fp, #12
0b00c     A8 F4 61 FC | 	wrlong	result1, fp
0b010     0C 50 85 F1 | 	sub	fp, #12
0b014     00 F4 0D F2 | 	cmp	result1, #0 wz
0b018     20 01 90 5D |  if_ne	jmp	#LR__0741
0b01c     04 50 05 F1 | 	add	fp, #4
0b020     A8 18 02 FB | 	rdlong	local01, fp
0b024     0C 50 05 F1 | 	add	fp, #12
0b028     A8 1A 02 FB | 	rdlong	local02, fp
0b02c     0C 1B 62 FC | 	wrlong	local02, local01
0b030     0C 50 85 F1 | 	sub	fp, #12
0b034     A8 0E 02 FB | 	rdlong	arg01, fp
0b038     04 50 05 F1 | 	add	fp, #4
0b03c     A8 10 02 FB | 	rdlong	arg02, fp
0b040     08 50 85 F1 | 	sub	fp, #8
0b044     80 D4 BF FD | 	call	#_ff_cc_follow_path_0332
0b048     0C 50 05 F1 | 	add	fp, #12
0b04c     A8 F4 61 FC | 	wrlong	result1, fp
0b050     0C 50 85 F1 | 	sub	fp, #12
0b054     00 F4 0D F2 | 	cmp	result1, #0 wz
0b058     C4 00 90 5D |  if_ne	jmp	#LR__0740
0b05c     04 50 05 F1 | 	add	fp, #4
0b060     A8 1C 02 FB | 	rdlong	local03, fp
0b064     04 50 85 F1 | 	sub	fp, #4
0b068     2B 1C 06 F1 | 	add	local03, #43
0b06c     0E 19 C2 FA | 	rdbyte	local01, local03
0b070     80 18 CE F7 | 	test	local01, #128 wz
0b074     58 00 90 5D |  if_ne	jmp	#LR__0738
0b078     04 50 05 F1 | 	add	fp, #4
0b07c     A8 1C 02 FB | 	rdlong	local03, fp
0b080     04 50 85 F1 | 	sub	fp, #4
0b084     06 1C 06 F1 | 	add	local03, #6
0b088     0E 19 C2 FA | 	rdbyte	local01, local03
0b08c     10 18 CE F7 | 	test	local01, #16 wz
0b090     30 00 90 AD |  if_e	jmp	#LR__0736
0b094     04 50 05 F1 | 	add	fp, #4
0b098     A8 1E 02 FB | 	rdlong	local04, fp
0b09c     0F 19 02 F6 | 	mov	local01, local04
0b0a0     0C 50 05 F1 | 	add	fp, #12
0b0a4     A8 0E 02 FB | 	rdlong	arg01, fp
0b0a8     10 50 85 F1 | 	sub	fp, #16
0b0ac     1C 1E 06 F1 | 	add	local04, #28
0b0b0     0F 11 02 FB | 	rdlong	arg02, local04
0b0b4     28 B6 BF FD | 	call	#_ff_cc_ld_clust_0259
0b0b8     08 18 06 F1 | 	add	local01, #8
0b0bc     0C F5 61 FC | 	wrlong	result1, local01
0b0c0     0C 00 90 FD | 	jmp	#LR__0737
0b0c4                 | LR__0736
0b0c4     0C 50 05 F1 | 	add	fp, #12
0b0c8     A8 0A 68 FC | 	wrlong	#5, fp
0b0cc     0C 50 85 F1 | 	sub	fp, #12
0b0d0                 | LR__0737
0b0d0                 | LR__0738
0b0d0     0C 50 05 F1 | 	add	fp, #12
0b0d4     A8 18 0A FB | 	rdlong	local01, fp wz
0b0d8     0C 50 85 F1 | 	sub	fp, #12
0b0dc     40 00 90 5D |  if_ne	jmp	#LR__0739
0b0e0     04 50 05 F1 | 	add	fp, #4
0b0e4     A8 18 02 FB | 	rdlong	local01, fp
0b0e8     0C 50 05 F1 | 	add	fp, #12
0b0ec     A8 1A 02 FB | 	rdlong	local02, fp
0b0f0     06 1A 06 F1 | 	add	local02, #6
0b0f4     0D 1F E2 FA | 	rdword	local04, local02
0b0f8     04 18 06 F1 | 	add	local01, #4
0b0fc     0C 1F 52 FC | 	wrword	local04, local01
0b100     0C 50 85 F1 | 	sub	fp, #12
0b104     A8 0E 02 FB | 	rdlong	arg01, fp
0b108     04 50 85 F1 | 	sub	fp, #4
0b10c     00 10 06 F6 | 	mov	arg02, #0
0b110     AC B1 BF FD | 	call	#_ff_cc_dir_sdi_0249
0b114     0C 50 05 F1 | 	add	fp, #12
0b118     A8 F4 61 FC | 	wrlong	result1, fp
0b11c     0C 50 85 F1 | 	sub	fp, #12
0b120                 | LR__0739
0b120                 | LR__0740
0b120     0C 50 05 F1 | 	add	fp, #12
0b124     A8 18 02 FB | 	rdlong	local01, fp
0b128     0C 50 85 F1 | 	sub	fp, #12
0b12c     04 18 0E F2 | 	cmp	local01, #4 wz
0b130     0C 50 05 A1 |  if_e	add	fp, #12
0b134     A8 0A 68 AC |  if_e	wrlong	#5, fp
0b138     0C 50 85 A1 |  if_e	sub	fp, #12
0b13c                 | LR__0741
0b13c     0C 50 05 F1 | 	add	fp, #12
0b140     A8 18 0A FB | 	rdlong	local01, fp wz
0b144     0C 50 85 F1 | 	sub	fp, #12
0b148     10 00 90 AD |  if_e	jmp	#LR__0742
0b14c     04 50 05 F1 | 	add	fp, #4
0b150     A8 18 02 FB | 	rdlong	local01, fp
0b154     04 50 85 F1 | 	sub	fp, #4
0b158     0C 01 68 FC | 	wrlong	#0, local01
0b15c                 | LR__0742
0b15c                 | ' 
0b15c                 | ' 	return res ;
0b15c     0C 50 05 F1 | 	add	fp, #12
0b160     A8 F4 01 FB | 	rdlong	result1, fp
0b164     0C 50 85 F1 | 	sub	fp, #12
0b168                 | LR__0743
0b168     A8 F0 03 F6 | 	mov	ptra, fp
0b16c     B3 00 A0 FD | 	call	#popregs_
0b170                 | _ff_cc_f_opendir_ret
0b170     2D 00 64 FD | 	ret
0b174                 | 
0b174                 | _ff_cc_f_closedir
0b174     01 4C 05 F6 | 	mov	COUNT_, #1
0b178     A9 00 A0 FD | 	call	#pushregs_
0b17c     10 F0 07 F1 | 	add	ptra, #16
0b180     04 50 05 F1 | 	add	fp, #4
0b184     A8 0E 62 FC | 	wrlong	arg01, fp
0b188     08 50 05 F1 | 	add	fp, #8
0b18c     A8 10 02 F6 | 	mov	arg02, fp
0b190     0C 50 85 F1 | 	sub	fp, #12
0b194     A4 DE BF FD | 	call	#_ff_cc_validate_0357
0b198     08 50 05 F1 | 	add	fp, #8
0b19c     A8 F4 61 FC | 	wrlong	result1, fp
0b1a0     08 50 85 F1 | 	sub	fp, #8
0b1a4     00 F4 0D F2 | 	cmp	result1, #0 wz
0b1a8     10 00 90 5D |  if_ne	jmp	#LR__0744
0b1ac     04 50 05 F1 | 	add	fp, #4
0b1b0     A8 18 02 FB | 	rdlong	local01, fp
0b1b4     04 50 85 F1 | 	sub	fp, #4
0b1b8     0C 01 68 FC | 	wrlong	#0, local01
0b1bc                 | LR__0744
0b1bc                 | ' 
0b1bc                 | ' 
0b1bc                 | ' 
0b1bc                 | ' 
0b1bc                 | ' 		dp->obj.fs = 0;
0b1bc                 | ' #line 4680 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0b1bc                 | ' 	}
0b1bc                 | ' 	return res;
0b1bc     08 50 05 F1 | 	add	fp, #8
0b1c0     A8 F4 01 FB | 	rdlong	result1, fp
0b1c4     08 50 85 F1 | 	sub	fp, #8
0b1c8     A8 F0 03 F6 | 	mov	ptra, fp
0b1cc     B3 00 A0 FD | 	call	#popregs_
0b1d0                 | _ff_cc_f_closedir_ret
0b1d0     2D 00 64 FD | 	ret
0b1d4                 | 
0b1d4                 | _ff_cc_f_readdir
0b1d4     01 4C 05 F6 | 	mov	COUNT_, #1
0b1d8     A9 00 A0 FD | 	call	#pushregs_
0b1dc     14 F0 07 F1 | 	add	ptra, #20
0b1e0     04 50 05 F1 | 	add	fp, #4
0b1e4     A8 0E 62 FC | 	wrlong	arg01, fp
0b1e8     04 50 05 F1 | 	add	fp, #4
0b1ec     A8 10 62 FC | 	wrlong	arg02, fp
0b1f0     04 50 85 F1 | 	sub	fp, #4
0b1f4     A8 0E 02 FB | 	rdlong	arg01, fp
0b1f8     0C 50 05 F1 | 	add	fp, #12
0b1fc     A8 10 02 F6 | 	mov	arg02, fp
0b200     10 50 85 F1 | 	sub	fp, #16
0b204     34 DE BF FD | 	call	#_ff_cc_validate_0357
0b208     0C 50 05 F1 | 	add	fp, #12
0b20c     A8 F4 61 FC | 	wrlong	result1, fp
0b210     0C 50 85 F1 | 	sub	fp, #12
0b214     00 F4 0D F2 | 	cmp	result1, #0 wz
0b218     BC 00 90 5D |  if_ne	jmp	#LR__0748
0b21c     08 50 05 F1 | 	add	fp, #8
0b220     A8 18 0A FB | 	rdlong	local01, fp wz
0b224     08 50 85 F1 | 	sub	fp, #8
0b228     24 00 90 5D |  if_ne	jmp	#LR__0745
0b22c     04 50 05 F1 | 	add	fp, #4
0b230     A8 0E 02 FB | 	rdlong	arg01, fp
0b234     04 50 85 F1 | 	sub	fp, #4
0b238     00 10 06 F6 | 	mov	arg02, #0
0b23c     80 B0 BF FD | 	call	#_ff_cc_dir_sdi_0249
0b240     0C 50 05 F1 | 	add	fp, #12
0b244     A8 F4 61 FC | 	wrlong	result1, fp
0b248     0C 50 85 F1 | 	sub	fp, #12
0b24c     88 00 90 FD | 	jmp	#LR__0747
0b250                 | LR__0745
0b250     04 50 05 F1 | 	add	fp, #4
0b254     A8 0E 02 FB | 	rdlong	arg01, fp
0b258     04 50 85 F1 | 	sub	fp, #4
0b25c     00 10 06 F6 | 	mov	arg02, #0
0b260     50 BA BF FD | 	call	#_ff_cc_dir_read_0291
0b264     0C 50 05 F1 | 	add	fp, #12
0b268     A8 F4 61 FC | 	wrlong	result1, fp
0b26c     0C 50 85 F1 | 	sub	fp, #12
0b270     04 F4 0D F2 | 	cmp	result1, #4 wz
0b274     0C 50 05 A1 |  if_e	add	fp, #12
0b278     A8 00 68 AC |  if_e	wrlong	#0, fp
0b27c     0C 50 85 A1 |  if_e	sub	fp, #12
0b280     0C 50 05 F1 | 	add	fp, #12
0b284     A8 18 0A FB | 	rdlong	local01, fp wz
0b288     0C 50 85 F1 | 	sub	fp, #12
0b28c     48 00 90 5D |  if_ne	jmp	#LR__0746
0b290     04 50 05 F1 | 	add	fp, #4
0b294     A8 0E 02 FB | 	rdlong	arg01, fp
0b298     04 50 05 F1 | 	add	fp, #4
0b29c     A8 10 02 FB | 	rdlong	arg02, fp
0b2a0     08 50 85 F1 | 	sub	fp, #8
0b2a4     68 C4 BF FD | 	call	#_ff_cc_get_fileinfo_0317
0b2a8     04 50 05 F1 | 	add	fp, #4
0b2ac     A8 0E 02 FB | 	rdlong	arg01, fp
0b2b0     04 50 85 F1 | 	sub	fp, #4
0b2b4     00 10 06 F6 | 	mov	arg02, #0
0b2b8     90 B1 BF FD | 	call	#_ff_cc_dir_next_0253
0b2bc     0C 50 05 F1 | 	add	fp, #12
0b2c0     A8 F4 61 FC | 	wrlong	result1, fp
0b2c4     0C 50 85 F1 | 	sub	fp, #12
0b2c8     04 F4 0D F2 | 	cmp	result1, #4 wz
0b2cc     0C 50 05 A1 |  if_e	add	fp, #12
0b2d0     A8 00 68 AC |  if_e	wrlong	#0, fp
0b2d4     0C 50 85 A1 |  if_e	sub	fp, #12
0b2d8                 | LR__0746
0b2d8                 | LR__0747
0b2d8                 | LR__0748
0b2d8                 | ' 			}
0b2d8                 | ' 			;
0b2d8                 | ' 		}
0b2d8                 | ' 	}
0b2d8                 | ' 	return res ;
0b2d8     0C 50 05 F1 | 	add	fp, #12
0b2dc     A8 F4 01 FB | 	rdlong	result1, fp
0b2e0     0C 50 85 F1 | 	sub	fp, #12
0b2e4     A8 F0 03 F6 | 	mov	ptra, fp
0b2e8     B3 00 A0 FD | 	call	#popregs_
0b2ec                 | _ff_cc_f_readdir_ret
0b2ec     2D 00 64 FD | 	ret
0b2f0                 | 
0b2f0                 | _ff_cc_f_stat
0b2f0     01 4C 05 F6 | 	mov	COUNT_, #1
0b2f4     A9 00 A0 FD | 	call	#pushregs_
0b2f8     40 F0 07 F1 | 	add	ptra, #64
0b2fc     04 50 05 F1 | 	add	fp, #4
0b300     A8 0E 62 FC | 	wrlong	arg01, fp
0b304     04 50 05 F1 | 	add	fp, #4
0b308     A8 10 62 FC | 	wrlong	arg02, fp
0b30c     04 50 85 F1 | 	sub	fp, #4
0b310     A8 0E 02 F6 | 	mov	arg01, fp
0b314     0C 50 05 F1 | 	add	fp, #12
0b318     A8 10 02 F6 | 	mov	arg02, fp
0b31c     10 50 85 F1 | 	sub	fp, #16
0b320     00 12 06 F6 | 	mov	arg03, #0
0b324     C8 D6 BF FD | 	call	#_ff_cc_mount_volume_0355
0b328     0C 50 05 F1 | 	add	fp, #12
0b32c     A8 F4 61 FC | 	wrlong	result1, fp
0b330     0C 50 85 F1 | 	sub	fp, #12
0b334     00 F4 0D F2 | 	cmp	result1, #0 wz
0b338     7C 00 90 5D |  if_ne	jmp	#LR__0753
0b33c     10 50 05 F1 | 	add	fp, #16
0b340     A8 0E 02 F6 | 	mov	arg01, fp
0b344     0C 50 85 F1 | 	sub	fp, #12
0b348     A8 10 02 FB | 	rdlong	arg02, fp
0b34c     04 50 85 F1 | 	sub	fp, #4
0b350     74 D1 BF FD | 	call	#_ff_cc_follow_path_0332
0b354     0C 50 05 F1 | 	add	fp, #12
0b358     A8 F4 61 FC | 	wrlong	result1, fp
0b35c     0C 50 85 F1 | 	sub	fp, #12
0b360     00 F4 0D F2 | 	cmp	result1, #0 wz
0b364     50 00 90 5D |  if_ne	jmp	#LR__0752
0b368     3B 50 05 F1 | 	add	fp, #59
0b36c     A8 18 C2 FA | 	rdbyte	local01, fp
0b370     3B 50 85 F1 | 	sub	fp, #59
0b374     07 18 46 F7 | 	zerox	local01, #7
0b378     80 18 CE F7 | 	test	local01, #128 wz
0b37c     10 00 90 AD |  if_e	jmp	#LR__0749
0b380     0C 50 05 F1 | 	add	fp, #12
0b384     A8 0C 68 FC | 	wrlong	#6, fp
0b388     0C 50 85 F1 | 	sub	fp, #12
0b38c     28 00 90 FD | 	jmp	#LR__0751
0b390                 | LR__0749
0b390     08 50 05 F1 | 	add	fp, #8
0b394     A8 18 0A FB | 	rdlong	local01, fp wz
0b398     08 50 85 F1 | 	sub	fp, #8
0b39c     18 00 90 AD |  if_e	jmp	#LR__0750
0b3a0     10 50 05 F1 | 	add	fp, #16
0b3a4     A8 0E 02 F6 | 	mov	arg01, fp
0b3a8     08 50 85 F1 | 	sub	fp, #8
0b3ac     A8 10 02 FB | 	rdlong	arg02, fp
0b3b0     08 50 85 F1 | 	sub	fp, #8
0b3b4     58 C3 BF FD | 	call	#_ff_cc_get_fileinfo_0317
0b3b8                 | LR__0750
0b3b8                 | LR__0751
0b3b8                 | LR__0752
0b3b8                 | LR__0753
0b3b8                 | ' 			}
0b3b8                 | ' 		}
0b3b8                 | ' 		;
0b3b8                 | ' 	}
0b3b8                 | ' 
0b3b8                 | ' 	return res ;
0b3b8     0C 50 05 F1 | 	add	fp, #12
0b3bc     A8 F4 01 FB | 	rdlong	result1, fp
0b3c0     0C 50 85 F1 | 	sub	fp, #12
0b3c4     A8 F0 03 F6 | 	mov	ptra, fp
0b3c8     B3 00 A0 FD | 	call	#popregs_
0b3cc                 | _ff_cc_f_stat_ret
0b3cc     2D 00 64 FD | 	ret
0b3d0                 | 
0b3d0                 | _ff_cc_f_unlink
0b3d0     04 4C 05 F6 | 	mov	COUNT_, #4
0b3d4     A9 00 A0 FD | 	call	#pushregs_
0b3d8     74 F0 07 F1 | 	add	ptra, #116
0b3dc     04 50 05 F1 | 	add	fp, #4
0b3e0     A8 0E 62 FC | 	wrlong	arg01, fp
0b3e4     68 50 05 F1 | 	add	fp, #104
0b3e8     A8 00 68 FC | 	wrlong	#0, fp
0b3ec     68 50 85 F1 | 	sub	fp, #104
0b3f0     A8 0E 02 F6 | 	mov	arg01, fp
0b3f4     6C 50 05 F1 | 	add	fp, #108
0b3f8     A8 10 02 F6 | 	mov	arg02, fp
0b3fc     70 50 85 F1 | 	sub	fp, #112
0b400     02 12 06 F6 | 	mov	arg03, #2
0b404     E8 D5 BF FD | 	call	#_ff_cc_mount_volume_0355
0b408     08 50 05 F1 | 	add	fp, #8
0b40c     A8 F4 61 FC | 	wrlong	result1, fp
0b410     08 50 85 F1 | 	sub	fp, #8
0b414     00 F4 0D F2 | 	cmp	result1, #0 wz
0b418     00 02 90 5D |  if_ne	jmp	#LR__0763
0b41c     70 50 05 F1 | 	add	fp, #112
0b420     A8 18 02 FB | 	rdlong	local01, fp
0b424     64 50 85 F1 | 	sub	fp, #100
0b428     A8 18 62 FC | 	wrlong	local01, fp
0b42c     A8 0E 02 F6 | 	mov	arg01, fp
0b430     08 50 85 F1 | 	sub	fp, #8
0b434     A8 10 02 FB | 	rdlong	arg02, fp
0b438     04 50 85 F1 | 	sub	fp, #4
0b43c     88 D0 BF FD | 	call	#_ff_cc_follow_path_0332
0b440     FA 18 0A F6 | 	mov	local01, result1 wz
0b444     08 50 05 F1 | 	add	fp, #8
0b448     A8 18 62 FC | 	wrlong	local01, fp
0b44c     08 50 85 F1 | 	sub	fp, #8
0b450     C8 01 90 5D |  if_ne	jmp	#LR__0762
0b454     37 50 05 F1 | 	add	fp, #55
0b458     A8 18 C2 FA | 	rdbyte	local01, fp
0b45c     37 50 85 F1 | 	sub	fp, #55
0b460     07 18 46 F7 | 	zerox	local01, #7
0b464     80 18 CE F7 | 	test	local01, #128 wz
0b468     10 00 90 AD |  if_e	jmp	#LR__0754
0b46c     08 50 05 F1 | 	add	fp, #8
0b470     A8 0C 68 FC | 	wrlong	#6, fp
0b474     08 50 85 F1 | 	sub	fp, #8
0b478     20 00 90 FD | 	jmp	#LR__0755
0b47c                 | LR__0754
0b47c     12 50 05 F1 | 	add	fp, #18
0b480     A8 18 C2 FA | 	rdbyte	local01, fp
0b484     12 50 85 F1 | 	sub	fp, #18
0b488     07 18 46 F7 | 	zerox	local01, #7
0b48c     01 18 CE F7 | 	test	local01, #1 wz
0b490     08 50 05 51 |  if_ne	add	fp, #8
0b494     A8 0E 68 5C |  if_ne	wrlong	#7, fp
0b498     08 50 85 51 |  if_ne	sub	fp, #8
0b49c                 | LR__0755
0b49c     08 50 05 F1 | 	add	fp, #8
0b4a0     A8 18 0A FB | 	rdlong	local01, fp wz
0b4a4     08 50 85 F1 | 	sub	fp, #8
0b4a8     CC 00 90 5D |  if_ne	jmp	#LR__0758
0b4ac     70 50 05 F1 | 	add	fp, #112
0b4b0     A8 0E 02 FB | 	rdlong	arg01, fp
0b4b4     48 50 85 F1 | 	sub	fp, #72
0b4b8     A8 10 02 FB | 	rdlong	arg02, fp
0b4bc     28 50 85 F1 | 	sub	fp, #40
0b4c0     1C B2 BF FD | 	call	#_ff_cc_ld_clust_0259
0b4c4     6C 50 05 F1 | 	add	fp, #108
0b4c8     A8 F4 61 FC | 	wrlong	result1, fp
0b4cc     5A 50 85 F1 | 	sub	fp, #90
0b4d0     A8 18 C2 FA | 	rdbyte	local01, fp
0b4d4     12 50 85 F1 | 	sub	fp, #18
0b4d8     07 18 46 F7 | 	zerox	local01, #7
0b4dc     10 18 CE F7 | 	test	local01, #16 wz
0b4e0     94 00 90 AD |  if_e	jmp	#LR__0757
0b4e4     70 50 05 F1 | 	add	fp, #112
0b4e8     A8 18 02 FB | 	rdlong	local01, fp
0b4ec     34 50 85 F1 | 	sub	fp, #52
0b4f0     A8 18 62 FC | 	wrlong	local01, fp
0b4f4     30 50 05 F1 | 	add	fp, #48
0b4f8     A8 18 02 FB | 	rdlong	local01, fp
0b4fc     28 50 85 F1 | 	sub	fp, #40
0b500     A8 18 62 FC | 	wrlong	local01, fp
0b504     08 50 85 F1 | 	sub	fp, #8
0b508     A8 0E 02 F6 | 	mov	arg01, fp
0b50c     3C 50 85 F1 | 	sub	fp, #60
0b510     00 10 06 F6 | 	mov	arg02, #0
0b514     A8 AD BF FD | 	call	#_ff_cc_dir_sdi_0249
0b518     08 50 05 F1 | 	add	fp, #8
0b51c     A8 F4 61 FC | 	wrlong	result1, fp
0b520     08 50 85 F1 | 	sub	fp, #8
0b524     00 F4 0D F2 | 	cmp	result1, #0 wz
0b528     4C 00 90 5D |  if_ne	jmp	#LR__0756
0b52c     3C 50 05 F1 | 	add	fp, #60
0b530     A8 0E 02 F6 | 	mov	arg01, fp
0b534     3C 50 85 F1 | 	sub	fp, #60
0b538     00 10 06 F6 | 	mov	arg02, #0
0b53c     74 B7 BF FD | 	call	#_ff_cc_dir_read_0291
0b540     08 50 05 F1 | 	add	fp, #8
0b544     A8 F4 61 FC | 	wrlong	result1, fp
0b548     FA 18 0A F6 | 	mov	local01, result1 wz
0b54c     08 50 85 F1 | 	sub	fp, #8
0b550     08 50 05 A1 |  if_e	add	fp, #8
0b554     A8 0E 68 AC |  if_e	wrlong	#7, fp
0b558     08 50 85 A1 |  if_e	sub	fp, #8
0b55c     08 50 05 F1 | 	add	fp, #8
0b560     A8 18 02 FB | 	rdlong	local01, fp
0b564     08 50 85 F1 | 	sub	fp, #8
0b568     04 18 0E F2 | 	cmp	local01, #4 wz
0b56c     08 50 05 A1 |  if_e	add	fp, #8
0b570     A8 00 68 AC |  if_e	wrlong	#0, fp
0b574     08 50 85 A1 |  if_e	sub	fp, #8
0b578                 | LR__0756
0b578                 | LR__0757
0b578                 | LR__0758
0b578     08 50 05 F1 | 	add	fp, #8
0b57c     A8 18 0A FB | 	rdlong	local01, fp wz
0b580     08 50 85 F1 | 	sub	fp, #8
0b584     94 00 90 5D |  if_ne	jmp	#LR__0761
0b588     0C 50 05 F1 | 	add	fp, #12
0b58c     A8 0E 02 F6 | 	mov	arg01, fp
0b590     0C 50 85 F1 | 	sub	fp, #12
0b594     98 C0 BF FD | 	call	#_ff_cc_dir_remove_0310
0b598     08 50 05 F1 | 	add	fp, #8
0b59c     A8 F4 61 FC | 	wrlong	result1, fp
0b5a0     08 50 85 F1 | 	sub	fp, #8
0b5a4     00 F4 0D F2 | 	cmp	result1, #0 wz
0b5a8     44 00 90 5D |  if_ne	jmp	#LR__0759
0b5ac     6C 50 05 F1 | 	add	fp, #108
0b5b0     A8 1A 0A FB | 	rdlong	local02, fp wz
0b5b4     6C 50 85 F1 | 	sub	fp, #108
0b5b8     34 00 90 AD |  if_e	jmp	#LR__0759
0b5bc     0C 50 05 F1 | 	add	fp, #12
0b5c0     A8 0E 02 F6 | 	mov	arg01, fp
0b5c4     60 50 05 F1 | 	add	fp, #96
0b5c8     A8 1C 02 FB | 	rdlong	local03, fp
0b5cc     6C 50 85 F1 | 	sub	fp, #108
0b5d0     00 1E 06 F6 | 	mov	local04, #0
0b5d4     0E 11 02 F6 | 	mov	arg02, local03
0b5d8     00 12 06 F6 | 	mov	arg03, #0
0b5dc     A0 A8 BF FD | 	call	#_ff_cc_remove_chain_0234
0b5e0     FA 18 02 F6 | 	mov	local01, result1
0b5e4     08 50 05 F1 | 	add	fp, #8
0b5e8     A8 18 62 FC | 	wrlong	local01, fp
0b5ec     08 50 85 F1 | 	sub	fp, #8
0b5f0                 | LR__0759
0b5f0     08 50 05 F1 | 	add	fp, #8
0b5f4     A8 18 0A FB | 	rdlong	local01, fp wz
0b5f8     08 50 85 F1 | 	sub	fp, #8
0b5fc     1C 00 90 5D |  if_ne	jmp	#LR__0760
0b600     70 50 05 F1 | 	add	fp, #112
0b604     A8 0E 02 FB | 	rdlong	arg01, fp
0b608     70 50 85 F1 | 	sub	fp, #112
0b60c     2C A2 BF FD | 	call	#_ff_cc_sync_fs_0220
0b610     08 50 05 F1 | 	add	fp, #8
0b614     A8 F4 61 FC | 	wrlong	result1, fp
0b618     08 50 85 F1 | 	sub	fp, #8
0b61c                 | LR__0760
0b61c                 | LR__0761
0b61c                 | LR__0762
0b61c                 | LR__0763
0b61c                 | ' 			}
0b61c                 | ' 		}
0b61c                 | ' 		;
0b61c                 | ' 	}
0b61c                 | ' 
0b61c                 | ' 	return res ;
0b61c     08 50 05 F1 | 	add	fp, #8
0b620     A8 F4 01 FB | 	rdlong	result1, fp
0b624     08 50 85 F1 | 	sub	fp, #8
0b628     A8 F0 03 F6 | 	mov	ptra, fp
0b62c     B3 00 A0 FD | 	call	#popregs_
0b630                 | _ff_cc_f_unlink_ret
0b630     2D 00 64 FD | 	ret
0b634                 | 
0b634                 | _ff_cc_f_mkdir
0b634     03 4C 05 F6 | 	mov	COUNT_, #3
0b638     A9 00 A0 FD | 	call	#pushregs_
0b63c     5C F0 07 F1 | 	add	ptra, #92
0b640     04 50 05 F1 | 	add	fp, #4
0b644     A8 0E 62 FC | 	wrlong	arg01, fp
0b648     A8 0E 02 F6 | 	mov	arg01, fp
0b64c     48 50 05 F1 | 	add	fp, #72
0b650     A8 10 02 F6 | 	mov	arg02, fp
0b654     4C 50 85 F1 | 	sub	fp, #76
0b658     02 12 06 F6 | 	mov	arg03, #2
0b65c     90 D3 BF FD | 	call	#_ff_cc_mount_volume_0355
0b660     08 50 05 F1 | 	add	fp, #8
0b664     A8 F4 61 FC | 	wrlong	result1, fp
0b668     08 50 85 F1 | 	sub	fp, #8
0b66c     00 F4 0D F2 | 	cmp	result1, #0 wz
0b670     EC 02 90 5D |  if_ne	jmp	#LR__0773
0b674     4C 50 05 F1 | 	add	fp, #76
0b678     A8 18 02 FB | 	rdlong	local01, fp
0b67c     40 50 85 F1 | 	sub	fp, #64
0b680     A8 18 62 FC | 	wrlong	local01, fp
0b684     A8 0E 02 F6 | 	mov	arg01, fp
0b688     08 50 85 F1 | 	sub	fp, #8
0b68c     A8 1A 02 FB | 	rdlong	local02, fp
0b690     04 50 85 F1 | 	sub	fp, #4
0b694     0D 11 02 F6 | 	mov	arg02, local02
0b698     2C CE BF FD | 	call	#_ff_cc_follow_path_0332
0b69c     08 50 05 F1 | 	add	fp, #8
0b6a0     A8 F4 61 FC | 	wrlong	result1, fp
0b6a4     FA 1C 02 F6 | 	mov	local03, result1
0b6a8     08 50 85 F1 | 	sub	fp, #8
0b6ac     0E 19 0A F6 | 	mov	local01, local03 wz
0b6b0     08 50 05 A1 |  if_e	add	fp, #8
0b6b4     A8 10 68 AC |  if_e	wrlong	#8, fp
0b6b8     08 50 85 A1 |  if_e	sub	fp, #8
0b6bc     08 50 05 F1 | 	add	fp, #8
0b6c0     A8 18 02 FB | 	rdlong	local01, fp
0b6c4     08 50 85 F1 | 	sub	fp, #8
0b6c8     04 18 0E F2 | 	cmp	local01, #4 wz
0b6cc     90 02 90 5D |  if_ne	jmp	#LR__0772
0b6d0     4C 50 05 F1 | 	add	fp, #76
0b6d4     A8 18 02 FB | 	rdlong	local01, fp
0b6d8     10 50 85 F1 | 	sub	fp, #16
0b6dc     A8 18 62 FC | 	wrlong	local01, fp
0b6e0     A8 0E 02 F6 | 	mov	arg01, fp
0b6e4     3C 50 85 F1 | 	sub	fp, #60
0b6e8     00 10 06 F6 | 	mov	arg02, #0
0b6ec     A8 A8 BF FD | 	call	#_ff_cc_create_chain_0240
0b6f0     50 50 05 F1 | 	add	fp, #80
0b6f4     A8 F4 61 FC | 	wrlong	result1, fp
0b6f8     48 50 85 F1 | 	sub	fp, #72
0b6fc     A8 00 68 FC | 	wrlong	#0, fp
0b700     48 50 05 F1 | 	add	fp, #72
0b704     A8 18 0A FB | 	rdlong	local01, fp wz
0b708     50 50 85 F1 | 	sub	fp, #80
0b70c     08 50 05 A1 |  if_e	add	fp, #8
0b710     A8 0E 68 AC |  if_e	wrlong	#7, fp
0b714     08 50 85 A1 |  if_e	sub	fp, #8
0b718     50 50 05 F1 | 	add	fp, #80
0b71c     A8 18 02 FB | 	rdlong	local01, fp
0b720     50 50 85 F1 | 	sub	fp, #80
0b724     01 18 0E F2 | 	cmp	local01, #1 wz
0b728     08 50 05 A1 |  if_e	add	fp, #8
0b72c     A8 04 68 AC |  if_e	wrlong	#2, fp
0b730     08 50 85 A1 |  if_e	sub	fp, #8
0b734     50 50 05 F1 | 	add	fp, #80
0b738     A8 18 02 FB | 	rdlong	local01, fp
0b73c     50 50 85 F1 | 	sub	fp, #80
0b740     FF FF 7F FF 
0b744     FF 19 0E F2 | 	cmp	local01, ##-1 wz
0b748     08 50 05 A1 |  if_e	add	fp, #8
0b74c     A8 02 68 AC |  if_e	wrlong	#1, fp
0b750     08 50 85 A1 |  if_e	sub	fp, #8
0b754     58 50 05 F1 | 	add	fp, #88
0b758     80 10 A7 FF 
0b75c     A8 00 68 FC | 	wrlong	##1310785536, fp
0b760     50 50 85 F1 | 	sub	fp, #80
0b764     A8 18 0A FB | 	rdlong	local01, fp wz
0b768     08 50 85 F1 | 	sub	fp, #8
0b76c     38 01 90 5D |  if_ne	jmp	#LR__0769
0b770     4C 50 05 F1 | 	add	fp, #76
0b774     A8 0E 02 FB | 	rdlong	arg01, fp
0b778     04 50 05 F1 | 	add	fp, #4
0b77c     A8 1A 02 FB | 	rdlong	local02, fp
0b780     50 50 85 F1 | 	sub	fp, #80
0b784     0D 11 02 F6 | 	mov	arg02, local02
0b788     58 AA BF FD | 	call	#_ff_cc_dir_clear_0245
0b78c     08 50 05 F1 | 	add	fp, #8
0b790     A8 F4 61 FC | 	wrlong	result1, fp
0b794     FA 1C 02 F6 | 	mov	local03, result1
0b798     08 50 85 F1 | 	sub	fp, #8
0b79c     0E 19 0A F6 | 	mov	local01, local03 wz
0b7a0     04 01 90 5D |  if_ne	jmp	#LR__0768
0b7a4     4C 50 05 F1 | 	add	fp, #76
0b7a8     A8 0E 02 FB | 	rdlong	arg01, fp
0b7ac     4C 50 85 F1 | 	sub	fp, #76
0b7b0     34 0E 06 F1 | 	add	arg01, #52
0b7b4     20 10 06 F6 | 	mov	arg02, #32
0b7b8     0B 12 06 F6 | 	mov	arg03, #11
0b7bc                 | ' {
0b7bc                 | ' 	BYTE *d = (BYTE*)dst;
0b7bc                 | ' 
0b7bc                 | ' 	do {
0b7bc     4C 48 9F FE | 	loc	pa,	#(@LR__0766-@LR__0764)
0b7c0     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0b7c4                 | LR__0764
0b7c4     0B 04 DC FC | 	rep	@LR__0767, #11
0b7c8                 | LR__0765
0b7c8     07 11 42 FC | 	wrbyte	arg02, arg01
0b7cc     01 0E 06 F1 | 	add	arg01, #1
0b7d0                 | LR__0766
0b7d0                 | LR__0767
0b7d0     4C 50 05 F1 | 	add	fp, #76
0b7d4     A8 18 02 FB | 	rdlong	local01, fp
0b7d8     34 18 06 F1 | 	add	local01, #52
0b7dc     0C 5D 48 FC | 	wrbyte	#46, local01
0b7e0     A8 18 02 FB | 	rdlong	local01, fp
0b7e4     3F 18 06 F1 | 	add	local01, #63
0b7e8     0C 21 48 FC | 	wrbyte	#16, local01
0b7ec     A8 0E 02 FB | 	rdlong	arg01, fp
0b7f0     4A 0E 06 F1 | 	add	arg01, #74
0b7f4     0C 50 05 F1 | 	add	fp, #12
0b7f8     A8 10 02 FB | 	rdlong	arg02, fp
0b7fc     58 50 85 F1 | 	sub	fp, #88
0b800     E0 9C BF FD | 	call	#_ff_cc_st_dword_0195
0b804     4C 50 05 F1 | 	add	fp, #76
0b808     A8 10 02 FB | 	rdlong	arg02, fp
0b80c     08 0F 02 F6 | 	mov	arg01, arg02
0b810     34 10 06 F1 | 	add	arg02, #52
0b814     04 50 05 F1 | 	add	fp, #4
0b818     A8 12 02 FB | 	rdlong	arg03, fp
0b81c     50 50 85 F1 | 	sub	fp, #80
0b820     14 AF BF FD | 	call	#_ff_cc_st_clust_0260
0b824     4C 50 05 F1 | 	add	fp, #76
0b828     A8 10 02 FB | 	rdlong	arg02, fp
0b82c     08 0F 02 F6 | 	mov	arg01, arg02
0b830     54 0E 06 F1 | 	add	arg01, #84
0b834     4C 50 85 F1 | 	sub	fp, #76
0b838     34 10 06 F1 | 	add	arg02, #52
0b83c     20 12 06 F6 | 	mov	arg03, #32
0b840     CC 9C BF FD | 	call	#_ff_cc_mem_cpy_0198
0b844     4C 50 05 F1 | 	add	fp, #76
0b848     A8 18 02 FB | 	rdlong	local01, fp
0b84c     55 18 06 F1 | 	add	local01, #85
0b850     0C 5D 48 FC | 	wrbyte	#46, local01
0b854     38 50 85 F1 | 	sub	fp, #56
0b858     A8 12 02 FB | 	rdlong	arg03, fp
0b85c     40 50 05 F1 | 	add	fp, #64
0b860     A8 12 62 FC | 	wrlong	arg03, fp
0b864     08 50 85 F1 | 	sub	fp, #8
0b868     A8 10 02 FB | 	rdlong	arg02, fp
0b86c     08 0F 02 F6 | 	mov	arg01, arg02
0b870     54 10 06 F1 | 	add	arg02, #84
0b874     4C 50 85 F1 | 	sub	fp, #76
0b878     BC AE BF FD | 	call	#_ff_cc_st_clust_0260
0b87c     4C 50 05 F1 | 	add	fp, #76
0b880     A8 18 02 FB | 	rdlong	local01, fp
0b884     03 18 06 F1 | 	add	local01, #3
0b888     0C 03 48 FC | 	wrbyte	#1, local01
0b88c     40 50 85 F1 | 	sub	fp, #64
0b890     A8 0E 02 F6 | 	mov	arg01, fp
0b894     0C 50 85 F1 | 	sub	fp, #12
0b898     EC B8 BF FD | 	call	#_ff_cc_dir_register_0306
0b89c     08 50 05 F1 | 	add	fp, #8
0b8a0     A8 F4 61 FC | 	wrlong	result1, fp
0b8a4     08 50 85 F1 | 	sub	fp, #8
0b8a8                 | LR__0768
0b8a8                 | LR__0769
0b8a8     08 50 05 F1 | 	add	fp, #8
0b8ac     A8 18 0A FB | 	rdlong	local01, fp wz
0b8b0     08 50 85 F1 | 	sub	fp, #8
0b8b4     8C 00 90 5D |  if_ne	jmp	#LR__0770
0b8b8     28 50 05 F1 | 	add	fp, #40
0b8bc     A8 0E 02 FB | 	rdlong	arg01, fp
0b8c0     16 0E 06 F1 | 	add	arg01, #22
0b8c4     30 50 05 F1 | 	add	fp, #48
0b8c8     A8 10 02 FB | 	rdlong	arg02, fp
0b8cc     58 50 85 F1 | 	sub	fp, #88
0b8d0     10 9C BF FD | 	call	#_ff_cc_st_dword_0195
0b8d4     4C 50 05 F1 | 	add	fp, #76
0b8d8     A8 0E 02 FB | 	rdlong	arg01, fp
0b8dc     24 50 85 F1 | 	sub	fp, #36
0b8e0     A8 10 02 FB | 	rdlong	arg02, fp
0b8e4     28 50 05 F1 | 	add	fp, #40
0b8e8     A8 12 02 FB | 	rdlong	arg03, fp
0b8ec     50 50 85 F1 | 	sub	fp, #80
0b8f0     44 AE BF FD | 	call	#_ff_cc_st_clust_0260
0b8f4     28 50 05 F1 | 	add	fp, #40
0b8f8     A8 18 02 FB | 	rdlong	local01, fp
0b8fc     0B 18 06 F1 | 	add	local01, #11
0b900     0C 21 48 FC | 	wrbyte	#16, local01
0b904     24 50 05 F1 | 	add	fp, #36
0b908     A8 18 02 FB | 	rdlong	local01, fp
0b90c     03 18 06 F1 | 	add	local01, #3
0b910     0C 03 48 FC | 	wrbyte	#1, local01
0b914     44 50 85 F1 | 	sub	fp, #68
0b918     A8 18 0A FB | 	rdlong	local01, fp wz
0b91c     08 50 85 F1 | 	sub	fp, #8
0b920     3C 00 90 5D |  if_ne	jmp	#LR__0771
0b924     4C 50 05 F1 | 	add	fp, #76
0b928     A8 0E 02 FB | 	rdlong	arg01, fp
0b92c     4C 50 85 F1 | 	sub	fp, #76
0b930     08 9F BF FD | 	call	#_ff_cc_sync_fs_0220
0b934     08 50 05 F1 | 	add	fp, #8
0b938     A8 F4 61 FC | 	wrlong	result1, fp
0b93c     08 50 85 F1 | 	sub	fp, #8
0b940     1C 00 90 FD | 	jmp	#LR__0771
0b944                 | LR__0770
0b944     3C 50 05 F1 | 	add	fp, #60
0b948     A8 0E 02 F6 | 	mov	arg01, fp
0b94c     14 50 05 F1 | 	add	fp, #20
0b950     A8 10 02 FB | 	rdlong	arg02, fp
0b954     50 50 85 F1 | 	sub	fp, #80
0b958     00 12 06 F6 | 	mov	arg03, #0
0b95c     20 A5 BF FD | 	call	#_ff_cc_remove_chain_0234
0b960                 | LR__0771
0b960                 | LR__0772
0b960                 | LR__0773
0b960                 | ' 				remove_chain(&sobj, dcl, 0);
0b960                 | ' 			}
0b960                 | ' 		}
0b960                 | ' 		;
0b960                 | ' 	}
0b960                 | ' 
0b960                 | ' 	return res ;
0b960     08 50 05 F1 | 	add	fp, #8
0b964     A8 F4 01 FB | 	rdlong	result1, fp
0b968     08 50 85 F1 | 	sub	fp, #8
0b96c     A8 F0 03 F6 | 	mov	ptra, fp
0b970     B3 00 A0 FD | 	call	#popregs_
0b974                 | _ff_cc_f_mkdir_ret
0b974     2D 00 64 FD | 	ret
0b978                 | 
0b978                 | _ff_cc_f_rename
0b978     09 4C 05 F6 | 	mov	COUNT_, #9
0b97c     A9 00 A0 FD | 	call	#pushregs_
0b980     9C F0 07 F1 | 	add	ptra, #156
0b984     04 50 05 F1 | 	add	fp, #4
0b988     A8 0E 62 FC | 	wrlong	arg01, fp
0b98c     04 50 05 F1 | 	add	fp, #4
0b990     A8 10 62 FC | 	wrlong	arg02, fp
0b994     A8 0E 02 F6 | 	mov	arg01, fp
0b998     08 50 85 F1 | 	sub	fp, #8
0b99c     44 CD BF FD | 	call	#_ff_cc_get_ldnumber_0338
0b9a0     04 50 05 F1 | 	add	fp, #4
0b9a4     A8 0E 02 F6 | 	mov	arg01, fp
0b9a8     6C 50 05 F1 | 	add	fp, #108
0b9ac     A8 10 02 F6 | 	mov	arg02, fp
0b9b0     70 50 85 F1 | 	sub	fp, #112
0b9b4     02 12 06 F6 | 	mov	arg03, #2
0b9b8     34 D0 BF FD | 	call	#_ff_cc_mount_volume_0355
0b9bc     0C 50 05 F1 | 	add	fp, #12
0b9c0     A8 F4 61 FC | 	wrlong	result1, fp
0b9c4     0C 50 85 F1 | 	sub	fp, #12
0b9c8     00 F4 0D F2 | 	cmp	result1, #0 wz
0b9cc     9C 03 90 5D |  if_ne	jmp	#LR__0788
0b9d0     70 50 05 F1 | 	add	fp, #112
0b9d4     A8 18 02 FB | 	rdlong	local01, fp
0b9d8     60 50 85 F1 | 	sub	fp, #96
0b9dc     A8 18 62 FC | 	wrlong	local01, fp
0b9e0     A8 0E 02 F6 | 	mov	arg01, fp
0b9e4     0C 50 85 F1 | 	sub	fp, #12
0b9e8     A8 10 02 FB | 	rdlong	arg02, fp
0b9ec     04 50 85 F1 | 	sub	fp, #4
0b9f0     D4 CA BF FD | 	call	#_ff_cc_follow_path_0332
0b9f4     0C 50 05 F1 | 	add	fp, #12
0b9f8     A8 F4 61 FC | 	wrlong	result1, fp
0b9fc     FA 1A 0A F6 | 	mov	local02, result1 wz
0ba00     0C 50 85 F1 | 	sub	fp, #12
0ba04     2C 00 90 5D |  if_ne	jmp	#LR__0774
0ba08     3B 50 05 F1 | 	add	fp, #59
0ba0c     A8 1C C2 FA | 	rdbyte	local03, fp
0ba10     3B 50 85 F1 | 	sub	fp, #59
0ba14     0E 1F 02 F6 | 	mov	local04, local03
0ba18     07 1E 46 F7 | 	zerox	local04, #7
0ba1c     A0 1E 0E F5 | 	and	local04, #160 wz
0ba20     10 00 90 AD |  if_e	jmp	#LR__0774
0ba24     06 18 06 F6 | 	mov	local01, #6
0ba28     0C 50 05 F1 | 	add	fp, #12
0ba2c     A8 0C 68 FC | 	wrlong	#6, fp
0ba30     0C 50 85 F1 | 	sub	fp, #12
0ba34                 | LR__0774
0ba34     0C 50 05 F1 | 	add	fp, #12
0ba38     A8 18 0A FB | 	rdlong	local01, fp wz
0ba3c     0C 50 85 F1 | 	sub	fp, #12
0ba40     28 03 90 5D |  if_ne	jmp	#LR__0787
0ba44     74 50 05 F1 | 	add	fp, #116
0ba48     A8 0E 02 F6 | 	mov	arg01, fp
0ba4c     48 50 85 F1 | 	sub	fp, #72
0ba50     A8 10 02 FB | 	rdlong	arg02, fp
0ba54     2C 50 85 F1 | 	sub	fp, #44
0ba58     20 12 06 F6 | 	mov	arg03, #32
0ba5c     B0 9A BF FD | 	call	#_ff_cc_mem_cpy_0198
0ba60     40 50 05 F1 | 	add	fp, #64
0ba64     A8 0E 02 F6 | 	mov	arg01, fp
0ba68     30 50 85 F1 | 	sub	fp, #48
0ba6c     A8 10 02 F6 | 	mov	arg02, fp
0ba70     10 50 85 F1 | 	sub	fp, #16
0ba74     30 12 06 F6 | 	mov	arg03, #48
0ba78     94 9A BF FD | 	call	#_ff_cc_mem_cpy_0198
0ba7c     40 50 05 F1 | 	add	fp, #64
0ba80     A8 0E 02 F6 | 	mov	arg01, fp
0ba84     38 50 85 F1 | 	sub	fp, #56
0ba88     A8 10 02 FB | 	rdlong	arg02, fp
0ba8c     08 50 85 F1 | 	sub	fp, #8
0ba90     34 CA BF FD | 	call	#_ff_cc_follow_path_0332
0ba94     0C 50 05 F1 | 	add	fp, #12
0ba98     A8 F4 61 FC | 	wrlong	result1, fp
0ba9c     0C 50 85 F1 | 	sub	fp, #12
0baa0     00 F4 0D F2 | 	cmp	result1, #0 wz
0baa4     4C 00 90 5D |  if_ne	jmp	#LR__0777
0baa8     48 50 05 F1 | 	add	fp, #72
0baac     A8 1A 02 FB | 	rdlong	local02, fp
0bab0     30 50 85 F1 | 	sub	fp, #48
0bab4     A8 1C 02 FB | 	rdlong	local03, fp
0bab8     18 50 85 F1 | 	sub	fp, #24
0babc     0E 1B 0A F2 | 	cmp	local02, local03 wz
0bac0     20 00 90 5D |  if_ne	jmp	#LR__0775
0bac4     50 50 05 F1 | 	add	fp, #80
0bac8     A8 20 02 FB | 	rdlong	local05, fp
0bacc     30 50 85 F1 | 	sub	fp, #48
0bad0     A8 22 02 FB | 	rdlong	local06, fp
0bad4     20 50 85 F1 | 	sub	fp, #32
0bad8     11 21 0A F2 | 	cmp	local05, local06 wz
0badc     04 18 06 A6 |  if_e	mov	local01, #4
0bae0     04 00 90 AD |  if_e	jmp	#LR__0776
0bae4                 | LR__0775
0bae4     08 18 06 F6 | 	mov	local01, #8
0bae8                 | LR__0776
0bae8     0C 50 05 F1 | 	add	fp, #12
0baec     A8 18 62 FC | 	wrlong	local01, fp
0baf0     0C 50 85 F1 | 	sub	fp, #12
0baf4                 | LR__0777
0baf4     0C 50 05 F1 | 	add	fp, #12
0baf8     A8 18 02 FB | 	rdlong	local01, fp
0bafc     0C 50 85 F1 | 	sub	fp, #12
0bb00     04 18 0E F2 | 	cmp	local01, #4 wz
0bb04     14 02 90 5D |  if_ne	jmp	#LR__0784
0bb08     40 50 05 F1 | 	add	fp, #64
0bb0c     A8 0E 02 F6 | 	mov	arg01, fp
0bb10     40 50 85 F1 | 	sub	fp, #64
0bb14     70 B6 BF FD | 	call	#_ff_cc_dir_register_0306
0bb18     0C 50 05 F1 | 	add	fp, #12
0bb1c     A8 F4 61 FC | 	wrlong	result1, fp
0bb20     0C 50 85 F1 | 	sub	fp, #12
0bb24     00 F4 0D F2 | 	cmp	result1, #0 wz
0bb28     F0 01 90 5D |  if_ne	jmp	#LR__0783
0bb2c     5C 50 05 F1 | 	add	fp, #92
0bb30     A8 0E 02 FB | 	rdlong	arg01, fp
0bb34     38 50 05 F1 | 	add	fp, #56
0bb38     A8 0E 62 FC | 	wrlong	arg01, fp
0bb3c     0D 0E 06 F1 | 	add	arg01, #13
0bb40     20 50 85 F1 | 	sub	fp, #32
0bb44     A8 10 02 F6 | 	mov	arg02, fp
0bb48     74 50 85 F1 | 	sub	fp, #116
0bb4c     0D 10 06 F1 | 	add	arg02, #13
0bb50     13 12 06 F6 | 	mov	arg03, #19
0bb54     B8 99 BF FD | 	call	#_ff_cc_mem_cpy_0198
0bb58     94 50 05 F1 | 	add	fp, #148
0bb5c     A8 18 02 FB | 	rdlong	local01, fp
0bb60     15 50 85 F1 | 	sub	fp, #21
0bb64     A8 1E C2 FA | 	rdbyte	local04, fp
0bb68     0B 18 06 F1 | 	add	local01, #11
0bb6c     0C 1F 42 FC | 	wrbyte	local04, local01
0bb70     15 50 05 F1 | 	add	fp, #21
0bb74     A8 1A 02 FB | 	rdlong	local02, fp
0bb78     94 50 85 F1 | 	sub	fp, #148
0bb7c     0B 1A 06 F1 | 	add	local02, #11
0bb80     0D 19 C2 FA | 	rdbyte	local01, local02
0bb84     10 18 CE F7 | 	test	local01, #16 wz
0bb88     24 00 90 5D |  if_ne	jmp	#LR__0778
0bb8c     94 50 05 F1 | 	add	fp, #148
0bb90     A8 1C 02 FB | 	rdlong	local03, fp
0bb94     0E 19 02 F6 | 	mov	local01, local03
0bb98     94 50 85 F1 | 	sub	fp, #148
0bb9c     0B 1C 06 F1 | 	add	local03, #11
0bba0     0E 1F C2 FA | 	rdbyte	local04, local03
0bba4     20 1E 46 F5 | 	or	local04, #32
0bba8     0B 18 06 F1 | 	add	local01, #11
0bbac     0C 1F 42 FC | 	wrbyte	local04, local01
0bbb0                 | LR__0778
0bbb0     70 50 05 F1 | 	add	fp, #112
0bbb4     A8 18 02 FB | 	rdlong	local01, fp
0bbb8     03 18 06 F1 | 	add	local01, #3
0bbbc     0C 03 48 FC | 	wrbyte	#1, local01
0bbc0     24 50 05 F1 | 	add	fp, #36
0bbc4     A8 1A 02 FB | 	rdlong	local02, fp
0bbc8     94 50 85 F1 | 	sub	fp, #148
0bbcc     0B 1A 06 F1 | 	add	local02, #11
0bbd0     0D 19 C2 FA | 	rdbyte	local01, local02
0bbd4     10 18 CE F7 | 	test	local01, #16 wz
0bbd8     40 01 90 AD |  if_e	jmp	#LR__0782
0bbdc     18 50 05 F1 | 	add	fp, #24
0bbe0     A8 20 02 FB | 	rdlong	local05, fp
0bbe4     10 25 02 F6 | 	mov	local07, local05
0bbe8     30 50 05 F1 | 	add	fp, #48
0bbec     A8 26 02 FB | 	rdlong	local08, fp
0bbf0     48 50 85 F1 | 	sub	fp, #72
0bbf4     13 29 02 F6 | 	mov	local09, local08
0bbf8     14 25 0A F2 | 	cmp	local07, local09 wz
0bbfc     1C 01 90 AD |  if_e	jmp	#LR__0782
0bc00     70 50 05 F1 | 	add	fp, #112
0bc04     A8 0E 02 FB | 	rdlong	arg01, fp
0bc08     07 19 02 F6 | 	mov	local01, arg01
0bc0c     24 50 05 F1 | 	add	fp, #36
0bc10     A8 1C 02 FB | 	rdlong	local03, fp
0bc14     94 50 85 F1 | 	sub	fp, #148
0bc18     0E 1F 02 F6 | 	mov	local04, local03
0bc1c     0F 11 02 F6 | 	mov	arg02, local04
0bc20     BC AA BF FD | 	call	#_ff_cc_ld_clust_0259
0bc24     FA 10 02 F6 | 	mov	arg02, result1
0bc28     0C 0F 02 F6 | 	mov	arg01, local01
0bc2c     70 9D BF FD | 	call	#_ff_cc_clst2sect_0221
0bc30     98 50 05 F1 | 	add	fp, #152
0bc34     A8 F4 61 FC | 	wrlong	result1, fp
0bc38     FA 1A 0A F6 | 	mov	local02, result1 wz
0bc3c     98 50 85 F1 | 	sub	fp, #152
0bc40     14 00 90 5D |  if_ne	jmp	#LR__0779
0bc44     02 18 06 F6 | 	mov	local01, #2
0bc48     0C 50 05 F1 | 	add	fp, #12
0bc4c     A8 04 68 FC | 	wrlong	#2, fp
0bc50     0C 50 85 F1 | 	sub	fp, #12
0bc54     C4 00 90 FD | 	jmp	#LR__0781
0bc58                 | LR__0779
0bc58     70 50 05 F1 | 	add	fp, #112
0bc5c     A8 0E 02 FB | 	rdlong	arg01, fp
0bc60     28 50 05 F1 | 	add	fp, #40
0bc64     A8 10 02 FB | 	rdlong	arg02, fp
0bc68     98 50 85 F1 | 	sub	fp, #152
0bc6c     50 9B BF FD | 	call	#_ff_cc_move_window_0218
0bc70     0C 50 05 F1 | 	add	fp, #12
0bc74     A8 F4 61 FC | 	wrlong	result1, fp
0bc78     64 50 05 F1 | 	add	fp, #100
0bc7c     A8 1E 02 FB | 	rdlong	local04, fp
0bc80     0F 1D 02 F6 | 	mov	local03, local04
0bc84     34 1C 06 F1 | 	add	local03, #52
0bc88     0E 19 02 F6 | 	mov	local01, local03
0bc8c     20 18 06 F1 | 	add	local01, #32
0bc90     24 50 05 F1 | 	add	fp, #36
0bc94     A8 18 62 FC | 	wrlong	local01, fp
0bc98     88 50 85 F1 | 	sub	fp, #136
0bc9c     A8 1A 02 FB | 	rdlong	local02, fp
0bca0     0C 50 85 F1 | 	sub	fp, #12
0bca4     0D 19 0A F6 | 	mov	local01, local02 wz
0bca8     70 00 90 5D |  if_ne	jmp	#LR__0780
0bcac     94 50 05 F1 | 	add	fp, #148
0bcb0     A8 24 02 FB | 	rdlong	local07, fp
0bcb4     94 50 85 F1 | 	sub	fp, #148
0bcb8     12 1D 02 F6 | 	mov	local03, local07
0bcbc     01 1C 06 F1 | 	add	local03, #1
0bcc0     0E 21 C2 FA | 	rdbyte	local05, local03
0bcc4     01 1C 86 F1 | 	sub	local03, #1
0bcc8     10 1F 02 F6 | 	mov	local04, local05
0bccc     07 1E 46 F7 | 	zerox	local04, #7
0bcd0     2E 1E 0E F2 | 	cmp	local04, #46 wz
0bcd4     44 00 90 5D |  if_ne	jmp	#LR__0780
0bcd8     70 50 05 F1 | 	add	fp, #112
0bcdc     A8 0E 02 FB | 	rdlong	arg01, fp
0bce0     24 50 05 F1 | 	add	fp, #36
0bce4     A8 10 02 FB | 	rdlong	arg02, fp
0bce8     4C 50 85 F1 | 	sub	fp, #76
0bcec     A8 1C 02 FB | 	rdlong	local03, fp
0bcf0     48 50 85 F1 | 	sub	fp, #72
0bcf4     0E 13 02 F6 | 	mov	arg03, local03
0bcf8     3C AA BF FD | 	call	#_ff_cc_st_clust_0260
0bcfc     70 50 05 F1 | 	add	fp, #112
0bd00     A8 1A 02 FB | 	rdlong	local02, fp
0bd04     70 50 85 F1 | 	sub	fp, #112
0bd08     0D 19 02 F6 | 	mov	local01, local02
0bd0c     01 1E 06 F6 | 	mov	local04, #1
0bd10     03 18 06 F1 | 	add	local01, #3
0bd14     0C 03 48 FC | 	wrbyte	#1, local01
0bd18     03 18 86 F1 | 	sub	local01, #3
0bd1c                 | LR__0780
0bd1c                 | LR__0781
0bd1c                 | LR__0782
0bd1c                 | LR__0783
0bd1c                 | LR__0784
0bd1c     0C 50 05 F1 | 	add	fp, #12
0bd20     A8 18 0A FB | 	rdlong	local01, fp wz
0bd24     0C 50 85 F1 | 	sub	fp, #12
0bd28     40 00 90 5D |  if_ne	jmp	#LR__0786
0bd2c     10 50 05 F1 | 	add	fp, #16
0bd30     A8 0E 02 F6 | 	mov	arg01, fp
0bd34     10 50 85 F1 | 	sub	fp, #16
0bd38     F4 B8 BF FD | 	call	#_ff_cc_dir_remove_0310
0bd3c     0C 50 05 F1 | 	add	fp, #12
0bd40     A8 F4 61 FC | 	wrlong	result1, fp
0bd44     0C 50 85 F1 | 	sub	fp, #12
0bd48     00 F4 0D F2 | 	cmp	result1, #0 wz
0bd4c     1C 00 90 5D |  if_ne	jmp	#LR__0785
0bd50     70 50 05 F1 | 	add	fp, #112
0bd54     A8 0E 02 FB | 	rdlong	arg01, fp
0bd58     70 50 85 F1 | 	sub	fp, #112
0bd5c     DC 9A BF FD | 	call	#_ff_cc_sync_fs_0220
0bd60     0C 50 05 F1 | 	add	fp, #12
0bd64     A8 F4 61 FC | 	wrlong	result1, fp
0bd68     0C 50 85 F1 | 	sub	fp, #12
0bd6c                 | LR__0785
0bd6c                 | LR__0786
0bd6c                 | LR__0787
0bd6c                 | LR__0788
0bd6c                 | ' 					res = sync_fs(fs);
0bd6c                 | ' 				}
0bd6c                 | ' 			}
0bd6c                 | ' 
0bd6c                 | ' 		}
0bd6c                 | ' 		;
0bd6c                 | ' 	}
0bd6c                 | ' 
0bd6c                 | ' 	return res ;
0bd6c     0C 50 05 F1 | 	add	fp, #12
0bd70     A8 F4 01 FB | 	rdlong	result1, fp
0bd74     0C 50 85 F1 | 	sub	fp, #12
0bd78     A8 F0 03 F6 | 	mov	ptra, fp
0bd7c     B3 00 A0 FD | 	call	#popregs_
0bd80                 | _ff_cc_f_rename_ret
0bd80     2D 00 64 FD | 	ret
0bd84                 | 
0bd84                 | _ff_cc_stat
0bd84     09 4C 05 F6 | 	mov	COUNT_, #9
0bd88     A9 00 A0 FD | 	call	#pushregs_
0bd8c     07 19 02 F6 | 	mov	local01, arg01
0bd90     08 1B 02 F6 | 	mov	local02, arg02
0bd94     40 EF 05 F1 | 	add	ptr___system__dat__, #320
0bd98     F7 F4 01 F6 | 	mov	result1, ptr___system__dat__
0bd9c     40 EF 85 F1 | 	sub	ptr___system__dat__, #320
0bda0     FA 1C 02 F6 | 	mov	local03, result1
0bda4     0E 0F 02 F6 | 	mov	arg01, local03
0bda8     0C 11 02 F6 | 	mov	arg02, local01
0bdac     00 12 06 F6 | 	mov	arg03, #0
0bdb0     3C 5E BF FD | 	call	#__system____getvfsforfile
0bdb4     FA 1E 0A F6 | 	mov	local04, result1 wz
0bdb8     14 00 90 AD |  if_e	jmp	#LR__0789
0bdbc     2C 1E 06 F1 | 	add	local04, #44
0bdc0     0F 21 02 FB | 	rdlong	local05, local04
0bdc4     2C 1E 86 F1 | 	sub	local04, #44
0bdc8     10 23 0A F6 | 	mov	local06, local05 wz
0bdcc     14 00 90 5D |  if_ne	jmp	#LR__0790
0bdd0                 | LR__0789
0bdd0                 | ' #line 19 "/home/pik33/Programy/flexprop/include/libc/unix/stat.c"
0bdd0                 | '         return _seterror( 16 );
0bdd0     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0bdd4     F7 20 68 FC | 	wrlong	#16, ptr___system__dat__
0bdd8     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0bddc     01 F4 65 F6 | 	neg	result1, #1
0bde0     44 00 90 FD | 	jmp	#LR__0791
0bde4                 | LR__0790
0bde4     0D 0F 02 F6 | 	mov	arg01, local02
0bde8     00 10 06 F6 | 	mov	arg02, #0
0bdec     30 12 06 F6 | 	mov	arg03, #48
0bdf0     07 25 02 F6 | 	mov	local07, arg01
0bdf4     99 00 A0 FD | 	call	#\builtin_bytefill_
0bdf8     12 F5 01 F6 | 	mov	result1, local07
0bdfc     2C 1E 06 F1 | 	add	local04, #44
0be00     0F 23 02 FB | 	rdlong	local06, local04
0be04     11 21 02 FB | 	rdlong	local05, local06
0be08     04 22 06 F1 | 	add	local06, #4
0be0c     11 27 02 FB | 	rdlong	local08, local06
0be10     0E 0F 02 F6 | 	mov	arg01, local03
0be14     0D 11 02 F6 | 	mov	arg02, local02
0be18     F1 28 02 F6 | 	mov	local09, objptr
0be1c     10 E3 01 F6 | 	mov	objptr, local05
0be20     2D 26 62 FD | 	call	local08
0be24     14 E3 01 F6 | 	mov	objptr, local09
0be28                 | ' #line 29 "/home/pik33/Programy/flexprop/include/libc/unix/stat.c"
0be28                 | '     r = v->stat(name, buf);
0be28                 | ' #line 33 "/home/pik33/Programy/flexprop/include/libc/unix/stat.c"
0be28                 | '     return r;
0be28                 | LR__0791
0be28     A8 F0 03 F6 | 	mov	ptra, fp
0be2c     B3 00 A0 FD | 	call	#popregs_
0be30                 | _ff_cc_stat_ret
0be30     2D 00 64 FD | 	ret
0be34                 | 
0be34                 | _ff_cc__set_dos_error_0481
0be34     03 4C 05 F6 | 	mov	COUNT_, #3
0be38     A9 00 A0 FD | 	call	#pushregs_
0be3c     07 19 02 F6 | 	mov	local01, arg01
0be40                 | ' #line 6899 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0be40                 | '     switch (derr) {
0be40     0C 1B 02 F6 | 	mov	local02, local01
0be44     14 1A 26 F3 | 	fle	local02, #20
0be48     30 1A 62 FD | 	jmprel	local02
0be4c                 | LR__0792
0be4c     50 00 90 FD | 	jmp	#LR__0793
0be50     84 00 90 FD | 	jmp	#LR__0807
0be54     80 00 90 FD | 	jmp	#LR__0808
0be58     7C 00 90 FD | 	jmp	#LR__0809
0be5c     48 00 90 FD | 	jmp	#LR__0794
0be60     44 00 90 FD | 	jmp	#LR__0795
0be64     40 00 90 FD | 	jmp	#LR__0796
0be68     44 00 90 FD | 	jmp	#LR__0797
0be6c     48 00 90 FD | 	jmp	#LR__0799
0be70     54 00 90 FD | 	jmp	#LR__0802
0be74     38 00 90 FD | 	jmp	#LR__0798
0be78     4C 00 90 FD | 	jmp	#LR__0803
0be7c     48 00 90 FD | 	jmp	#LR__0804
0be80     44 00 90 FD | 	jmp	#LR__0805
0be84     50 00 90 FD | 	jmp	#LR__0810
0be88     4C 00 90 FD | 	jmp	#LR__0810
0be8c     48 00 90 FD | 	jmp	#LR__0810
0be90     2C 00 90 FD | 	jmp	#LR__0800
0be94     38 00 90 FD | 	jmp	#LR__0806
0be98     2C 00 90 FD | 	jmp	#LR__0801
0be9c     38 00 90 FD | 	jmp	#LR__0810
0bea0                 | LR__0793
0bea0     00 1C 06 F6 | 	mov	local03, #0
0bea4                 | '         r = 0;
0bea4                 | '         break;
0bea4     34 00 90 FD | 	jmp	#LR__0811
0bea8                 | LR__0794
0bea8                 | LR__0795
0bea8                 | LR__0796
0bea8     04 1C 06 F6 | 	mov	local03, #4
0beac                 | '         r =  4 ;
0beac                 | '         break;
0beac     2C 00 90 FD | 	jmp	#LR__0811
0beb0                 | LR__0797
0beb0                 | LR__0798
0beb0     06 1C 06 F6 | 	mov	local03, #6
0beb4                 | '         r =  6 ;
0beb4                 | '         break;
0beb4     24 00 90 FD | 	jmp	#LR__0811
0beb8                 | LR__0799
0beb8     09 1C 06 F6 | 	mov	local03, #9
0bebc                 | '         r =  9 ;
0bebc                 | '         break;
0bebc     1C 00 90 FD | 	jmp	#LR__0811
0bec0                 | LR__0800
0bec0     07 1C 06 F6 | 	mov	local03, #7
0bec4                 | '         r =  7 ;
0bec4                 | '         break;
0bec4     14 00 90 FD | 	jmp	#LR__0811
0bec8                 | LR__0801
0bec8                 | LR__0802
0bec8                 | LR__0803
0bec8                 | LR__0804
0bec8                 | LR__0805
0bec8     0A 1C 06 F6 | 	mov	local03, #10
0becc                 | '         r =  10 ;
0becc                 | '         break;
0becc     0C 00 90 FD | 	jmp	#LR__0811
0bed0                 | LR__0806
0bed0     0B 1C 06 F6 | 	mov	local03, #11
0bed4                 | '         r =  11 ;
0bed4                 | '         break;
0bed4     04 00 90 FD | 	jmp	#LR__0811
0bed8                 | LR__0807
0bed8                 | LR__0808
0bed8                 | LR__0809
0bed8                 | LR__0810
0bed8     0C 1C 06 F6 | 	mov	local03, #12
0bedc                 | '         r =  12 ;
0bedc                 | '         break;
0bedc                 | LR__0811
0bedc                 | '     }
0bedc                 | '     return _seterror(r);
0bedc     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0bee0     F7 1C 62 FC | 	wrlong	local03, ptr___system__dat__
0bee4     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0bee8     00 1C 0E F2 | 	cmp	local03, #0 wz
0beec     01 F4 65 56 |  if_ne	neg	result1, #1
0bef0     00 F4 05 A6 |  if_e	mov	result1, #0
0bef4     A8 F0 03 F6 | 	mov	ptra, fp
0bef8     B3 00 A0 FD | 	call	#popregs_
0befc                 | _ff_cc__set_dos_error_0481_ret
0befc     2D 00 64 FD | 	ret
0bf00                 | 
0bf00                 | _ff_cc_v_creat_0485
0bf00     04 4C 05 F6 | 	mov	COUNT_, #4
0bf04     A9 00 A0 FD | 	call	#pushregs_
0bf08     07 19 02 F6 | 	mov	local01, arg01
0bf0c     08 1B 02 F6 | 	mov	local02, arg02
0bf10     02 00 00 FF 
0bf14     34 0E 06 F6 | 	mov	arg01, ##1076
0bf18                 | '     return _gc_alloc(size);
0bf18     10 10 06 F6 | 	mov	arg02, #16
0bf1c     84 69 BF FD | 	call	#__system___gc_doalloc
0bf20     FA 1C 0A F6 | 	mov	local03, result1 wz
0bf24     14 00 90 5D |  if_ne	jmp	#LR__0812
0bf28                 | '       return _seterror( 7 );
0bf28     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0bf2c     F7 0E 68 FC | 	wrlong	#7, ptr___system__dat__
0bf30     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0bf34     01 F4 65 F6 | 	neg	result1, #1
0bf38     58 00 90 FD | 	jmp	#LR__0814
0bf3c                 | LR__0812
0bf3c     0E 0F 02 F6 | 	mov	arg01, local03
0bf40     00 10 06 F6 | 	mov	arg02, #0
0bf44     02 00 00 FF 
0bf48     34 12 06 F6 | 	mov	arg03, ##1076
0bf4c     E0 0E B0 FD | 	call	#_ff_cc_memset
0bf50     02 00 00 FF 
0bf54     0C 1C 06 F1 | 	add	local03, ##1036
0bf58     0E 0F 02 F6 | 	mov	arg01, local03
0bf5c     02 00 00 FF 
0bf60     0C 1C 86 F1 | 	sub	local03, ##1036
0bf64     0D 11 02 F6 | 	mov	arg02, local02
0bf68     07 12 06 F6 | 	mov	arg03, #7
0bf6c     A0 D2 BF FD | 	call	#_ff_cc_f_open
0bf70     FA 1E 0A F6 | 	mov	local04, result1 wz
0bf74     14 00 90 AD |  if_e	jmp	#LR__0813
0bf78     0E 0F 02 F6 | 	mov	arg01, local03
0bf7c                 | '     return _gc_free(ptr);
0bf7c     54 6A BF FD | 	call	#__system___gc_free
0bf80                 | '     free(f);
0bf80                 | '     return _set_dos_error(r);
0bf80     0F 0F 02 F6 | 	mov	arg01, local04
0bf84     AC FE BF FD | 	call	#_ff_cc__set_dos_error_0481
0bf88     08 00 90 FD | 	jmp	#LR__0814
0bf8c                 | LR__0813
0bf8c     0C 1D 62 FC | 	wrlong	local03, local01
0bf90                 | '   }
0bf90                 | '   fil->vfsdata = f;
0bf90                 | '   return 0;
0bf90     00 F4 05 F6 | 	mov	result1, #0
0bf94                 | LR__0814
0bf94     A8 F0 03 F6 | 	mov	ptra, fp
0bf98     B3 00 A0 FD | 	call	#popregs_
0bf9c                 | _ff_cc_v_creat_0485_ret
0bf9c     2D 00 64 FD | 	ret
0bfa0                 | 
0bfa0                 | _ff_cc_v_close_0488
0bfa0     02 4C 05 F6 | 	mov	COUNT_, #2
0bfa4     A9 00 A0 FD | 	call	#pushregs_
0bfa8     07 19 02 FB | 	rdlong	local01, arg01
0bfac     02 00 00 FF 
0bfb0     0C 18 06 F1 | 	add	local01, ##1036
0bfb4     0C 0F 02 F6 | 	mov	arg01, local01
0bfb8     02 00 00 FF 
0bfbc     0C 18 86 F1 | 	sub	local01, ##1036
0bfc0     50 E9 BF FD | 	call	#_ff_cc_f_close
0bfc4     FA 1A 02 F6 | 	mov	local02, result1
0bfc8     0C 0F 02 F6 | 	mov	arg01, local01
0bfcc                 | '     return _gc_free(ptr);
0bfcc     04 6A BF FD | 	call	#__system___gc_free
0bfd0                 | '     FAT_FIL *f = fil->vfsdata;
0bfd0                 | '     r=f_close(&f->fil);
0bfd0                 | '     free(f);
0bfd0                 | '     return _set_dos_error(r);
0bfd0     0D 0F 02 F6 | 	mov	arg01, local02
0bfd4     5C FE BF FD | 	call	#_ff_cc__set_dos_error_0481
0bfd8     A8 F0 03 F6 | 	mov	ptra, fp
0bfdc     B3 00 A0 FD | 	call	#popregs_
0bfe0                 | _ff_cc_v_close_0488_ret
0bfe0     2D 00 64 FD | 	ret
0bfe4                 | 
0bfe4                 | _ff_cc_v_opendir_0491
0bfe4     04 4C 05 F6 | 	mov	COUNT_, #4
0bfe8     A9 00 A0 FD | 	call	#pushregs_
0bfec     07 19 02 F6 | 	mov	local01, arg01
0bff0     08 1B 02 F6 | 	mov	local02, arg02
0bff4     30 0E 06 F6 | 	mov	arg01, #48
0bff8                 | '     return _gc_alloc(size);
0bff8     10 10 06 F6 | 	mov	arg02, #16
0bffc     A4 68 BF FD | 	call	#__system___gc_doalloc
0c000     FA 1C 0A F6 | 	mov	local03, result1 wz
0c004     14 00 90 5D |  if_ne	jmp	#LR__0815
0c008                 | ' #line 6983 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0c008                 | '       return _seterror( 7 );
0c008     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c00c     F7 0E 68 FC | 	wrlong	#7, ptr___system__dat__
0c010     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c014     01 F4 65 F6 | 	neg	result1, #1
0c018     34 00 90 FD | 	jmp	#LR__0817
0c01c                 | LR__0815
0c01c     0D 11 02 F6 | 	mov	arg02, local02
0c020     0E 0F 02 F6 | 	mov	arg01, local03
0c024     94 EF BF FD | 	call	#_ff_cc_f_opendir
0c028     FA 1E 0A F6 | 	mov	local04, result1 wz
0c02c     14 00 90 AD |  if_e	jmp	#LR__0816
0c030     0E 0F 02 F6 | 	mov	arg01, local03
0c034                 | '     return _gc_free(ptr);
0c034     9C 69 BF FD | 	call	#__system___gc_free
0c038                 | '         free(f);
0c038                 | '         return _set_dos_error(r);
0c038     0F 0F 02 F6 | 	mov	arg01, local04
0c03c     F4 FD BF FD | 	call	#_ff_cc__set_dos_error_0481
0c040     0C 00 90 FD | 	jmp	#LR__0817
0c044                 | LR__0816
0c044     04 18 06 F1 | 	add	local01, #4
0c048     0C 1D 62 FC | 	wrlong	local03, local01
0c04c                 | '     }
0c04c                 | '     dir->vfsdata = f;
0c04c                 | '     return 0;
0c04c     00 F4 05 F6 | 	mov	result1, #0
0c050                 | LR__0817
0c050     A8 F0 03 F6 | 	mov	ptra, fp
0c054     B3 00 A0 FD | 	call	#popregs_
0c058                 | _ff_cc_v_opendir_0491_ret
0c058     2D 00 64 FD | 	ret
0c05c                 | 
0c05c                 | _ff_cc_v_closedir_0494
0c05c     02 4C 05 F6 | 	mov	COUNT_, #2
0c060     A9 00 A0 FD | 	call	#pushregs_
0c064     04 0E 06 F1 | 	add	arg01, #4
0c068     07 19 02 FB | 	rdlong	local01, arg01
0c06c     0C 0F 02 F6 | 	mov	arg01, local01
0c070     00 F1 BF FD | 	call	#_ff_cc_f_closedir
0c074     FA 1A 02 F6 | 	mov	local02, result1
0c078     0C 0F 02 F6 | 	mov	arg01, local01
0c07c                 | '     return _gc_free(ptr);
0c07c     54 69 BF FD | 	call	#__system___gc_free
0c080     00 1A 0E F2 | 	cmp	local02, #0 wz
0c084     08 00 90 AD |  if_e	jmp	#LR__0818
0c088     0D 0F 02 F6 | 	mov	arg01, local02
0c08c     A4 FD BF FD | 	call	#_ff_cc__set_dos_error_0481
0c090                 | LR__0818
0c090                 | '     return r;
0c090     0D F5 01 F6 | 	mov	result1, local02
0c094     A8 F0 03 F6 | 	mov	ptra, fp
0c098     B3 00 A0 FD | 	call	#popregs_
0c09c                 | _ff_cc_v_closedir_0494_ret
0c09c     2D 00 64 FD | 	ret
0c0a0                 | 
0c0a0                 | _ff_cc_v_readdir_0497
0c0a0     02 4C 05 F6 | 	mov	COUNT_, #2
0c0a4     A9 00 A0 FD | 	call	#pushregs_
0c0a8     2C F1 07 F1 | 	add	ptra, #300
0c0ac     04 50 05 F1 | 	add	fp, #4
0c0b0     A8 0E 62 FC | 	wrlong	arg01, fp
0c0b4     04 50 05 F1 | 	add	fp, #4
0c0b8     A8 10 62 FC | 	wrlong	arg02, fp
0c0bc     04 50 85 F1 | 	sub	fp, #4
0c0c0     A8 18 02 FB | 	rdlong	local01, fp
0c0c4     04 18 06 F1 | 	add	local01, #4
0c0c8     0C 0F 02 FB | 	rdlong	arg01, local01
0c0cc     08 50 05 F1 | 	add	fp, #8
0c0d0     A8 10 02 F6 | 	mov	arg02, fp
0c0d4     0C 50 85 F1 | 	sub	fp, #12
0c0d8     F8 F0 BF FD | 	call	#_ff_cc_f_readdir
0c0dc     28 51 05 F1 | 	add	fp, #296
0c0e0     A8 F4 61 FC | 	wrlong	result1, fp
0c0e4     28 51 85 F1 | 	sub	fp, #296
0c0e8     00 F4 0D F2 | 	cmp	result1, #0 wz
0c0ec     14 00 90 AD |  if_e	jmp	#LR__0819
0c0f0                 | '         return _set_dos_error(r);
0c0f0     28 51 05 F1 | 	add	fp, #296
0c0f4     A8 0E 02 FB | 	rdlong	arg01, fp
0c0f8     28 51 85 F1 | 	sub	fp, #296
0c0fc     34 FD BF FD | 	call	#_ff_cc__set_dos_error_0481
0c100     4C 00 90 FD | 	jmp	#LR__0820
0c104                 | LR__0819
0c104     28 50 05 F1 | 	add	fp, #40
0c108     A8 1A C2 FA | 	rdbyte	local02, fp
0c10c     28 50 85 F1 | 	sub	fp, #40
0c110     07 1A 4E F7 | 	zerox	local02, #7 wz
0c114                 | '         return -1;
0c114     01 F4 65 A6 |  if_e	neg	result1, #1
0c118     34 00 90 AD |  if_e	jmp	#LR__0820
0c11c     08 50 05 F1 | 	add	fp, #8
0c120     A8 0E 02 FB | 	rdlong	arg01, fp
0c124     20 50 05 F1 | 	add	fp, #32
0c128     A8 10 02 F6 | 	mov	arg02, fp
0c12c     28 50 85 F1 | 	sub	fp, #40
0c130     3F 12 06 F6 | 	mov	arg03, #63
0c134     A4 0C B0 FD | 	call	#_ff_cc_strncpy
0c138     08 50 05 F1 | 	add	fp, #8
0c13c     A8 1A 02 FB | 	rdlong	local02, fp
0c140     08 50 85 F1 | 	sub	fp, #8
0c144     3F 1A 06 F1 | 	add	local02, #63
0c148     0D 01 48 FC | 	wrbyte	#0, local02
0c14c                 | '     }
0c14c                 | ' 
0c14c                 | '     strncpy(ent->d_name, finfo.fname,  (64) -1);
0c14c                 | '     ent->d_name[ (64) -1] = 0;
0c14c                 | ' #line 7029 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0c14c                 | '     return 0;
0c14c     00 F4 05 F6 | 	mov	result1, #0
0c150                 | LR__0820
0c150     A8 F0 03 F6 | 	mov	ptra, fp
0c154     B3 00 A0 FD | 	call	#popregs_
0c158                 | _ff_cc_v_readdir_0497_ret
0c158     2D 00 64 FD | 	ret
0c15c                 | 
0c15c                 | _ff_cc_unixtime_0505
0c15c     08 F9 01 F6 | 	mov	_var01, arg02
0c160     0B F8 45 F0 | 	shr	_var01, #11
0c164     1F F8 05 F5 | 	and	_var01, #31
0c168     07 00 00 FF 
0c16c     10 F8 05 FD | 	qmul	_var01, ##3600
0c170     08 FB 01 F6 | 	mov	_var02, arg02
0c174     05 FA 45 F0 | 	shr	_var02, #5
0c178     3F FA 05 F5 | 	and	_var02, #63
0c17c     1F 10 06 F5 | 	and	arg02, #31
0c180     01 10 66 F0 | 	shl	arg02, #1
0c184     FD FC 01 F6 | 	mov	_var03, _var02
0c188     04 FC 65 F0 | 	shl	_var03, #4
0c18c     FD FC 81 F1 | 	sub	_var03, _var02
0c190     02 FC 65 F0 | 	shl	_var03, #2
0c194     FE 10 02 F1 | 	add	arg02, _var03
0c198                 | ' 
0c198                 | '     t = second + minute*60 + hour * 3600;
0c198                 | '     return t;
0c198     18 FE 61 FD | 	getqx	_var04
0c19c     FF 10 02 F1 | 	add	arg02, _var04
0c1a0     08 F5 01 F6 | 	mov	result1, arg02
0c1a4                 | _ff_cc_unixtime_0505_ret
0c1a4     2D 00 64 FD | 	ret
0c1a8                 | 
0c1a8                 | _ff_cc_v_stat_0509
0c1a8     08 4C 05 F6 | 	mov	COUNT_, #8
0c1ac     A9 00 A0 FD | 	call	#pushregs_
0c1b0     30 F1 07 F1 | 	add	ptra, #304
0c1b4     04 50 05 F1 | 	add	fp, #4
0c1b8     A8 0E 62 FC | 	wrlong	arg01, fp
0c1bc     04 50 05 F1 | 	add	fp, #4
0c1c0     A8 10 62 FC | 	wrlong	arg02, fp
0c1c4     08 50 85 F1 | 	sub	fp, #8
0c1c8     08 0F 02 F6 | 	mov	arg01, arg02
0c1cc     00 10 06 F6 | 	mov	arg02, #0
0c1d0     30 12 06 F6 | 	mov	arg03, #48
0c1d4     58 0C B0 FD | 	call	#_ff_cc_memset
0c1d8     04 50 05 F1 | 	add	fp, #4
0c1dc     A8 18 02 FB | 	rdlong	local01, fp
0c1e0     04 50 85 F1 | 	sub	fp, #4
0c1e4     0C 1B CA FA | 	rdbyte	local02, local01 wz
0c1e8     30 00 90 AD |  if_e	jmp	#LR__0821
0c1ec     04 50 05 F1 | 	add	fp, #4
0c1f0     A8 1C 02 FB | 	rdlong	local03, fp
0c1f4     04 50 85 F1 | 	sub	fp, #4
0c1f8     0E 1F C2 FA | 	rdbyte	local04, local03
0c1fc     2E 1E 0E F2 | 	cmp	local04, #46 wz
0c200     30 00 90 5D |  if_ne	jmp	#LR__0822
0c204     04 50 05 F1 | 	add	fp, #4
0c208     A8 20 02 FB | 	rdlong	local05, fp
0c20c     04 50 85 F1 | 	sub	fp, #4
0c210     01 20 06 F1 | 	add	local05, #1
0c214     10 23 CA FA | 	rdbyte	local06, local05 wz
0c218     18 00 90 5D |  if_ne	jmp	#LR__0822
0c21c                 | LR__0821
0c21c     18 50 05 F1 | 	add	fp, #24
0c220     A8 20 48 FC | 	wrbyte	#16, fp
0c224     0C 50 85 F1 | 	sub	fp, #12
0c228     A8 00 68 FC | 	wrlong	#0, fp
0c22c     0C 50 85 F1 | 	sub	fp, #12
0c230     24 00 90 FD | 	jmp	#LR__0823
0c234                 | LR__0822
0c234     04 50 05 F1 | 	add	fp, #4
0c238     A8 0E 02 FB | 	rdlong	arg01, fp
0c23c     0C 50 05 F1 | 	add	fp, #12
0c240     A8 10 02 F6 | 	mov	arg02, fp
0c244     10 50 85 F1 | 	sub	fp, #16
0c248     A4 F0 BF FD | 	call	#_ff_cc_f_stat
0c24c     0C 50 05 F1 | 	add	fp, #12
0c250     A8 F4 61 FC | 	wrlong	result1, fp
0c254     0C 50 85 F1 | 	sub	fp, #12
0c258                 | LR__0823
0c258     0C 50 05 F1 | 	add	fp, #12
0c25c     A8 1A 0A FB | 	rdlong	local02, fp wz
0c260     0C 50 85 F1 | 	sub	fp, #12
0c264     14 00 90 AD |  if_e	jmp	#LR__0824
0c268                 | '         return _set_dos_error(r);
0c268     0C 50 05 F1 | 	add	fp, #12
0c26c     A8 0E 02 FB | 	rdlong	arg01, fp
0c270     0C 50 85 F1 | 	sub	fp, #12
0c274     BC FB BF FD | 	call	#_ff_cc__set_dos_error_0481
0c278     24 01 90 FD | 	jmp	#LR__0827
0c27c                 | LR__0824
0c27c     2C 51 05 F1 | 	add	fp, #300
0c280     A8 48 6A FC | 	wrlong	#292, fp
0c284     14 51 85 F1 | 	sub	fp, #276
0c288     A8 1A C2 FA | 	rdbyte	local02, fp
0c28c     18 50 85 F1 | 	sub	fp, #24
0c290     07 1A 46 F7 | 	zerox	local02, #7
0c294     01 1A CE F7 | 	test	local02, #1 wz
0c298     14 00 90 AD |  if_e	jmp	#LR__0825
0c29c     2C 51 05 F1 | 	add	fp, #300
0c2a0     A8 1A 02 FB | 	rdlong	local02, fp
0c2a4     92 1A 46 F5 | 	or	local02, #146
0c2a8     A8 1A 62 FC | 	wrlong	local02, fp
0c2ac     2C 51 85 F1 | 	sub	fp, #300
0c2b0                 | LR__0825
0c2b0     18 50 05 F1 | 	add	fp, #24
0c2b4     A8 1A C2 FA | 	rdbyte	local02, fp
0c2b8     18 50 85 F1 | 	sub	fp, #24
0c2bc     07 1A 46 F7 | 	zerox	local02, #7
0c2c0     10 1A CE F7 | 	test	local02, #16 wz
0c2c4     18 00 90 AD |  if_e	jmp	#LR__0826
0c2c8     2C 51 05 F1 | 	add	fp, #300
0c2cc     A8 1A 02 FB | 	rdlong	local02, fp
0c2d0     08 00 00 FF 
0c2d4     49 1A 46 F5 | 	or	local02, ##4169
0c2d8     A8 1A 62 FC | 	wrlong	local02, fp
0c2dc     2C 51 85 F1 | 	sub	fp, #300
0c2e0                 | LR__0826
0c2e0     08 50 05 F1 | 	add	fp, #8
0c2e4     A8 1A 02 FB | 	rdlong	local02, fp
0c2e8     24 51 05 F1 | 	add	fp, #292
0c2ec     A8 24 02 FB | 	rdlong	local07, fp
0c2f0     08 1A 06 F1 | 	add	local02, #8
0c2f4     0D 25 62 FC | 	wrlong	local07, local02
0c2f8     24 51 85 F1 | 	sub	fp, #292
0c2fc     A8 1A 02 FB | 	rdlong	local02, fp
0c300     0C 1A 06 F1 | 	add	local02, #12
0c304     0D 03 68 FC | 	wrlong	#1, local02
0c308     A8 1A 02 FB | 	rdlong	local02, fp
0c30c     08 50 05 F1 | 	add	fp, #8
0c310     A8 24 02 FB | 	rdlong	local07, fp
0c314     18 1A 06 F1 | 	add	local02, #24
0c318     0D 25 62 FC | 	wrlong	local07, local02
0c31c     08 50 85 F1 | 	sub	fp, #8
0c320     A8 1A 02 FB | 	rdlong	local02, fp
0c324     1C 1A 06 F1 | 	add	local02, #28
0c328     01 00 80 FF 
0c32c     0D 01 68 FC | 	wrlong	##512, local02
0c330     A8 24 02 FB | 	rdlong	local07, fp
0c334     12 1B 02 F6 | 	mov	local02, local07
0c338     18 24 06 F1 | 	add	local07, #24
0c33c     12 27 02 FB | 	rdlong	local08, local07
0c340     13 1D 52 F6 | 	abs	local03, local08 wc
0c344     09 1C 46 F0 | 	shr	local03, #9
0c348     0E 1D 82 F6 | 	negc	local03, local03
0c34c     20 1A 06 F1 | 	add	local02, #32
0c350     0D 1D 62 FC | 	wrlong	local03, local02
0c354     A8 24 02 FB | 	rdlong	local07, fp
0c358     12 1B 02 F6 | 	mov	local02, local07
0c35c     12 1D 02 F6 | 	mov	local03, local07
0c360     0C 50 05 F1 | 	add	fp, #12
0c364     A8 0E E2 FA | 	rdword	arg01, fp
0c368     02 50 05 F1 | 	add	fp, #2
0c36c     A8 10 E2 FA | 	rdword	arg02, fp
0c370     16 50 85 F1 | 	sub	fp, #22
0c374     0F 10 46 F7 | 	zerox	arg02, #15
0c378     E0 FD BF FD | 	call	#_ff_cc_unixtime_0505
0c37c     2C 1C 06 F1 | 	add	local03, #44
0c380     0E F5 61 FC | 	wrlong	result1, local03
0c384     28 24 06 F1 | 	add	local07, #40
0c388     12 F5 61 FC | 	wrlong	result1, local07
0c38c     24 1A 06 F1 | 	add	local02, #36
0c390     0D F5 61 FC | 	wrlong	result1, local02
0c394                 | '         mode |=  0010000  |  0100  |  0010  |  0001 ;
0c394                 | '     }
0c394                 | '     buf->st_mode = mode;
0c394                 | '     buf->st_nlink = 1;
0c394                 | '     buf->st_size = finfo.fsize;
0c394                 | '     buf->st_blksize = 512;
0c394                 | '     buf->st_blocks = buf->st_size / 512;
0c394                 | '     buf->st_atime = buf->st_mtime = buf->st_ctime = unixtime(finfo.fdate, finfo.ftime);
0c394                 | ' #line 7081 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0c394                 | '     return r;
0c394     0C 50 05 F1 | 	add	fp, #12
0c398     A8 F4 01 FB | 	rdlong	result1, fp
0c39c     0C 50 85 F1 | 	sub	fp, #12
0c3a0                 | LR__0827
0c3a0     A8 F0 03 F6 | 	mov	ptra, fp
0c3a4     B3 00 A0 FD | 	call	#popregs_
0c3a8                 | _ff_cc_v_stat_0509_ret
0c3a8     2D 00 64 FD | 	ret
0c3ac                 | 
0c3ac                 | _ff_cc_v_read_0513
0c3ac     03 4C 05 F6 | 	mov	COUNT_, #3
0c3b0     A9 00 A0 FD | 	call	#pushregs_
0c3b4     1C F0 07 F1 | 	add	ptra, #28
0c3b8     04 50 05 F1 | 	add	fp, #4
0c3bc     A8 0E 62 FC | 	wrlong	arg01, fp
0c3c0     04 50 05 F1 | 	add	fp, #4
0c3c4     A8 10 62 FC | 	wrlong	arg02, fp
0c3c8     04 50 05 F1 | 	add	fp, #4
0c3cc     A8 12 62 FC | 	wrlong	arg03, fp
0c3d0     08 50 85 F1 | 	sub	fp, #8
0c3d4     A8 18 02 FB | 	rdlong	local01, fp
0c3d8     0C 19 0A FB | 	rdlong	local01, local01 wz
0c3dc     0C 50 05 F1 | 	add	fp, #12
0c3e0     A8 18 62 FC | 	wrlong	local01, fp
0c3e4     10 50 85 F1 | 	sub	fp, #16
0c3e8     14 00 90 5D |  if_ne	jmp	#LR__0828
0c3ec                 | '         return _seterror( 5 );
0c3ec     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c3f0     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
0c3f4     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c3f8     01 F4 65 F6 | 	neg	result1, #1
0c3fc     B8 00 90 FD | 	jmp	#LR__0831
0c400                 | LR__0828
0c400     10 50 05 F1 | 	add	fp, #16
0c404     A8 0E 02 FB | 	rdlong	arg01, fp
0c408     02 00 00 FF 
0c40c     0C 0E 06 F1 | 	add	arg01, ##1036
0c410     08 50 85 F1 | 	sub	fp, #8
0c414     A8 10 02 FB | 	rdlong	arg02, fp
0c418     04 50 05 F1 | 	add	fp, #4
0c41c     A8 12 02 FB | 	rdlong	arg03, fp
0c420     0C 50 05 F1 | 	add	fp, #12
0c424     A8 14 02 F6 | 	mov	arg04, fp
0c428     18 50 85 F1 | 	sub	fp, #24
0c42c     F4 D4 BF FD | 	call	#_ff_cc_f_read
0c430     14 50 05 F1 | 	add	fp, #20
0c434     A8 F4 61 FC | 	wrlong	result1, fp
0c438     14 50 85 F1 | 	sub	fp, #20
0c43c     00 F4 0D F2 | 	cmp	result1, #0 wz
0c440     34 00 90 AD |  if_e	jmp	#LR__0829
0c444     04 50 05 F1 | 	add	fp, #4
0c448     A8 1A 02 FB | 	rdlong	local02, fp
0c44c     0D 19 02 F6 | 	mov	local01, local02
0c450     08 1A 06 F1 | 	add	local02, #8
0c454     0D 1D 02 FB | 	rdlong	local03, local02
0c458     20 1C 46 F5 | 	or	local03, #32
0c45c     08 18 06 F1 | 	add	local01, #8
0c460     0C 1D 62 FC | 	wrlong	local03, local01
0c464                 | '         fil->state |=  (0x20) ;
0c464                 | '         return _set_dos_error(r);
0c464     10 50 05 F1 | 	add	fp, #16
0c468     A8 0E 02 FB | 	rdlong	arg01, fp
0c46c     14 50 85 F1 | 	sub	fp, #20
0c470     C0 F9 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c474     40 00 90 FD | 	jmp	#LR__0831
0c478                 | LR__0829
0c478     18 50 05 F1 | 	add	fp, #24
0c47c     A8 18 0A FB | 	rdlong	local01, fp wz
0c480     18 50 85 F1 | 	sub	fp, #24
0c484     24 00 90 5D |  if_ne	jmp	#LR__0830
0c488     04 50 05 F1 | 	add	fp, #4
0c48c     A8 1A 02 FB | 	rdlong	local02, fp
0c490     0D 19 02 F6 | 	mov	local01, local02
0c494     04 50 85 F1 | 	sub	fp, #4
0c498     08 1A 06 F1 | 	add	local02, #8
0c49c     0D 1D 02 FB | 	rdlong	local03, local02
0c4a0     10 1C 46 F5 | 	or	local03, #16
0c4a4     08 18 06 F1 | 	add	local01, #8
0c4a8     0C 1D 62 FC | 	wrlong	local03, local01
0c4ac                 | LR__0830
0c4ac                 | '         fil->state |=  (0x10) ;
0c4ac                 | '     }
0c4ac                 | '     return x;
0c4ac     18 50 05 F1 | 	add	fp, #24
0c4b0     A8 F4 01 FB | 	rdlong	result1, fp
0c4b4     18 50 85 F1 | 	sub	fp, #24
0c4b8                 | LR__0831
0c4b8     A8 F0 03 F6 | 	mov	ptra, fp
0c4bc     B3 00 A0 FD | 	call	#popregs_
0c4c0                 | _ff_cc_v_read_0513_ret
0c4c0     2D 00 64 FD | 	ret
0c4c4                 | 
0c4c4                 | _ff_cc_v_write_0517
0c4c4     03 4C 05 F6 | 	mov	COUNT_, #3
0c4c8     A9 00 A0 FD | 	call	#pushregs_
0c4cc     1C F0 07 F1 | 	add	ptra, #28
0c4d0     04 50 05 F1 | 	add	fp, #4
0c4d4     A8 0E 62 FC | 	wrlong	arg01, fp
0c4d8     04 50 05 F1 | 	add	fp, #4
0c4dc     A8 10 62 FC | 	wrlong	arg02, fp
0c4e0     04 50 05 F1 | 	add	fp, #4
0c4e4     A8 12 62 FC | 	wrlong	arg03, fp
0c4e8     08 50 85 F1 | 	sub	fp, #8
0c4ec     A8 18 02 FB | 	rdlong	local01, fp
0c4f0     0C 19 0A FB | 	rdlong	local01, local01 wz
0c4f4     0C 50 05 F1 | 	add	fp, #12
0c4f8     A8 18 62 FC | 	wrlong	local01, fp
0c4fc     10 50 85 F1 | 	sub	fp, #16
0c500     14 00 90 5D |  if_ne	jmp	#LR__0832
0c504                 | '         return _seterror( 5 );
0c504     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c508     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
0c50c     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c510     01 F4 65 F6 | 	neg	result1, #1
0c514     84 00 90 FD | 	jmp	#LR__0834
0c518                 | LR__0832
0c518     10 50 05 F1 | 	add	fp, #16
0c51c     A8 0E 02 FB | 	rdlong	arg01, fp
0c520     02 00 00 FF 
0c524     0C 0E 06 F1 | 	add	arg01, ##1036
0c528     08 50 85 F1 | 	sub	fp, #8
0c52c     A8 10 02 FB | 	rdlong	arg02, fp
0c530     04 50 05 F1 | 	add	fp, #4
0c534     A8 12 02 FB | 	rdlong	arg03, fp
0c538     0C 50 05 F1 | 	add	fp, #12
0c53c     A8 14 02 F6 | 	mov	arg04, fp
0c540     18 50 85 F1 | 	sub	fp, #24
0c544     10 DA BF FD | 	call	#_ff_cc_f_write
0c548     14 50 05 F1 | 	add	fp, #20
0c54c     A8 F4 61 FC | 	wrlong	result1, fp
0c550     14 50 85 F1 | 	sub	fp, #20
0c554     00 F4 0D F2 | 	cmp	result1, #0 wz
0c558     34 00 90 AD |  if_e	jmp	#LR__0833
0c55c     04 50 05 F1 | 	add	fp, #4
0c560     A8 1A 02 FB | 	rdlong	local02, fp
0c564     0D 19 02 F6 | 	mov	local01, local02
0c568     08 1A 06 F1 | 	add	local02, #8
0c56c     0D 1D 02 FB | 	rdlong	local03, local02
0c570     20 1C 46 F5 | 	or	local03, #32
0c574     08 18 06 F1 | 	add	local01, #8
0c578     0C 1D 62 FC | 	wrlong	local03, local01
0c57c                 | '         fil->state |=  (0x20) ;
0c57c                 | '         return _set_dos_error(r);
0c57c     10 50 05 F1 | 	add	fp, #16
0c580     A8 0E 02 FB | 	rdlong	arg01, fp
0c584     14 50 85 F1 | 	sub	fp, #20
0c588     A8 F8 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c58c     0C 00 90 FD | 	jmp	#LR__0834
0c590                 | LR__0833
0c590                 | '     }
0c590                 | '     return x;
0c590     18 50 05 F1 | 	add	fp, #24
0c594     A8 F4 01 FB | 	rdlong	result1, fp
0c598     18 50 85 F1 | 	sub	fp, #24
0c59c                 | LR__0834
0c59c     A8 F0 03 F6 | 	mov	ptra, fp
0c5a0     B3 00 A0 FD | 	call	#popregs_
0c5a4                 | _ff_cc_v_write_0517_ret
0c5a4     2D 00 64 FD | 	ret
0c5a8                 | 
0c5a8                 | _ff_cc_v_lseek_0521
0c5a8     05 4C 05 F6 | 	mov	COUNT_, #5
0c5ac     A9 00 A0 FD | 	call	#pushregs_
0c5b0     08 19 02 F6 | 	mov	local01, arg02
0c5b4     09 1B 02 F6 | 	mov	local02, arg03
0c5b8     07 1D 02 FB | 	rdlong	local03, arg01
0c5bc     02 00 00 FF 
0c5c0     0C 1C 0E F1 | 	add	local03, ##1036 wz
0c5c4     14 00 90 5D |  if_ne	jmp	#LR__0835
0c5c8                 | '         return _seterror( 5 );
0c5c8     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c5cc     F7 0A 68 FC | 	wrlong	#5, ptr___system__dat__
0c5d0     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c5d4     01 F4 65 F6 | 	neg	result1, #1
0c5d8     58 00 90 FD | 	jmp	#LR__0840
0c5dc                 | LR__0835
0c5dc     00 1A 0E F2 | 	cmp	local02, #0 wz
0c5e0     2C 00 90 AD |  if_e	jmp	#LR__0838
0c5e4     01 1A 0E F2 | 	cmp	local02, #1 wz
0c5e8     14 00 90 5D |  if_ne	jmp	#LR__0836
0c5ec     14 1C 06 F1 | 	add	local03, #20
0c5f0     0E 1F 02 FB | 	rdlong	local04, local03
0c5f4     14 1C 86 F1 | 	sub	local03, #20
0c5f8     0F 19 02 F1 | 	add	local01, local04
0c5fc     10 00 90 FD | 	jmp	#LR__0837
0c600                 | LR__0836
0c600     0C 1C 06 F1 | 	add	local03, #12
0c604     0E 1F 02 FB | 	rdlong	local04, local03
0c608     0C 1C 86 F1 | 	sub	local03, #12
0c60c     0F 19 02 F1 | 	add	local01, local04
0c610                 | LR__0837
0c610                 | LR__0838
0c610     0C 11 02 F6 | 	mov	arg02, local01
0c614     0E 0F 02 F6 | 	mov	arg01, local03
0c618     7C E3 BF FD | 	call	#_ff_cc_f_lseek
0c61c     FA 20 0A F6 | 	mov	local05, result1 wz
0c620     0C 00 90 AD |  if_e	jmp	#LR__0839
0c624                 | '         return _set_dos_error(result);
0c624     10 0F 02 F6 | 	mov	arg01, local05
0c628     08 F8 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c62c     04 00 90 FD | 	jmp	#LR__0840
0c630                 | LR__0839
0c630                 | '     }
0c630                 | '     return offset;
0c630     0C F5 01 F6 | 	mov	result1, local01
0c634                 | LR__0840
0c634     A8 F0 03 F6 | 	mov	ptra, fp
0c638     B3 00 A0 FD | 	call	#popregs_
0c63c                 | _ff_cc_v_lseek_0521_ret
0c63c     2D 00 64 FD | 	ret
0c640                 | 
0c640                 | _ff_cc_v_ioctl
0c640                 | ' {
0c640                 | '     return _seterror( 10 );
0c640     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c644     F7 14 68 FC | 	wrlong	#10, ptr___system__dat__
0c648     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c64c     01 F4 65 F6 | 	neg	result1, #1
0c650                 | _ff_cc_v_ioctl_ret
0c650     2D 00 64 FD | 	ret
0c654                 | 
0c654                 | _ff_cc_v_mkdir
0c654     DC EF BF FD | 	call	#_ff_cc_f_mkdir
0c658     FA 0E 02 F6 | 	mov	arg01, result1
0c65c                 | ' 
0c65c                 | '     r = f_mkdir(name);
0c65c                 | '     return _set_dos_error(r);
0c65c     D4 F7 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c660                 | _ff_cc_v_mkdir_ret
0c660     2D 00 64 FD | 	ret
0c664                 | 
0c664                 | _ff_cc_v_remove
0c664     68 ED BF FD | 	call	#_ff_cc_f_unlink
0c668     FA 0E 02 F6 | 	mov	arg01, result1
0c66c                 | ' 
0c66c                 | '     r = f_unlink(name);
0c66c                 | '     return _set_dos_error(r);
0c66c     C4 F7 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c670                 | _ff_cc_v_remove_ret
0c670     2D 00 64 FD | 	ret
0c674                 | 
0c674                 | _ff_cc_v_rmdir_0525
0c674     58 ED BF FD | 	call	#_ff_cc_f_unlink
0c678     FA 0E 02 F6 | 	mov	arg01, result1
0c67c                 | ' 
0c67c                 | '     r = f_unlink(name);
0c67c                 | '     return _set_dos_error(r);
0c67c     B4 F7 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c680                 | _ff_cc_v_rmdir_0525_ret
0c680     2D 00 64 FD | 	ret
0c684                 | 
0c684                 | _ff_cc_v_rename_0527
0c684     F0 F2 BF FD | 	call	#_ff_cc_f_rename
0c688     FA 0E 02 F6 | 	mov	arg01, result1
0c68c                 | '     return _set_dos_error(r);
0c68c     A4 F7 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c690                 | _ff_cc_v_rename_0527_ret
0c690     2D 00 64 FD | 	ret
0c694                 | 
0c694                 | _ff_cc_v_open_0531
0c694     0A 4C 05 F6 | 	mov	COUNT_, #10
0c698     A9 00 A0 FD | 	call	#pushregs_
0c69c     07 19 02 F6 | 	mov	local01, arg01
0c6a0     08 1B 02 F6 | 	mov	local02, arg02
0c6a4     09 1D 02 F6 | 	mov	local03, arg03
0c6a8     02 00 00 FF 
0c6ac     34 0E 06 F6 | 	mov	arg01, ##1076
0c6b0                 | '     return _gc_alloc(size);
0c6b0     10 10 06 F6 | 	mov	arg02, #16
0c6b4     EC 61 BF FD | 	call	#__system___gc_doalloc
0c6b8     FA 1E 0A F6 | 	mov	local04, result1 wz
0c6bc     14 00 90 5D |  if_ne	jmp	#LR__0841
0c6c0                 | '       return _seterror( 7 );
0c6c0     1C EE 05 F1 | 	add	ptr___system__dat__, #28
0c6c4     F7 0E 68 FC | 	wrlong	#7, ptr___system__dat__
0c6c8     1C EE 85 F1 | 	sub	ptr___system__dat__, #28
0c6cc     01 F4 65 F6 | 	neg	result1, #1
0c6d0     A8 00 90 FD | 	jmp	#LR__0848
0c6d4                 | LR__0841
0c6d4     0F 21 02 F6 | 	mov	local05, local04
0c6d8     00 22 06 F6 | 	mov	local06, #0
0c6dc     02 00 00 FF 
0c6e0     34 24 06 F6 | 	mov	local07, ##1076
0c6e4     10 0F 02 F6 | 	mov	arg01, local05
0c6e8     00 10 06 F6 | 	mov	arg02, #0
0c6ec     02 00 00 FF 
0c6f0     34 12 06 F6 | 	mov	arg03, ##1076
0c6f4     38 07 B0 FD | 	call	#_ff_cc_memset
0c6f8                 | '   switch (flags & 3) {
0c6f8     0E 27 02 F6 | 	mov	local08, local03
0c6fc     03 26 0E F5 | 	and	local08, #3 wz
0c700     0C 00 90 AD |  if_e	jmp	#LR__0842
0c704     01 26 0E F2 | 	cmp	local08, #1 wz
0c708     0C 00 90 AD |  if_e	jmp	#LR__0843
0c70c     10 00 90 FD | 	jmp	#LR__0844
0c710                 | LR__0842
0c710     01 28 06 F6 | 	mov	local09, #1
0c714                 | '       fs_flags =  0x01 ;
0c714                 | '       break;
0c714     0C 00 90 FD | 	jmp	#LR__0845
0c718                 | LR__0843
0c718     02 28 06 F6 | 	mov	local09, #2
0c71c                 | '       fs_flags =  0x02 ;
0c71c                 | '       break;
0c71c     04 00 90 FD | 	jmp	#LR__0845
0c720                 | LR__0844
0c720     03 28 06 F6 | 	mov	local09, #3
0c724                 | '       fs_flags =  0x01  |  0x02 ;
0c724                 | '       break;
0c724                 | LR__0845
0c724     08 1C CE F7 | 	test	local03, #8 wz
0c728     18 28 46 55 |  if_ne	or	local09, #24
0c72c     08 00 90 5D |  if_ne	jmp	#LR__0846
0c730     20 1C CE F7 | 	test	local03, #32 wz
0c734     30 28 46 55 |  if_ne	or	local09, #48
0c738                 | LR__0846
0c738     02 00 00 FF 
0c73c     0C 1E 06 F1 | 	add	local04, ##1036
0c740     0F 0F 02 F6 | 	mov	arg01, local04
0c744     02 00 00 FF 
0c748     0C 1E 86 F1 | 	sub	local04, ##1036
0c74c     0D 11 02 F6 | 	mov	arg02, local02
0c750     14 13 02 F6 | 	mov	arg03, local09
0c754     B8 CA BF FD | 	call	#_ff_cc_f_open
0c758     FA 2A 0A F6 | 	mov	local10, result1 wz
0c75c     14 00 90 AD |  if_e	jmp	#LR__0847
0c760     0F 0F 02 F6 | 	mov	arg01, local04
0c764                 | '     return _gc_free(ptr);
0c764     6C 62 BF FD | 	call	#__system___gc_free
0c768                 | '     free(f);
0c768                 | ' #line 7229 "/home/pik33/Programy/flexprop/include/filesys/fatfs/ff.cc"
0c768                 | '     return _set_dos_error(r);
0c768     15 0F 02 F6 | 	mov	arg01, local10
0c76c     C4 F6 BF FD | 	call	#_ff_cc__set_dos_error_0481
0c770     08 00 90 FD | 	jmp	#LR__0848
0c774                 | LR__0847
0c774     0C 1F 62 FC | 	wrlong	local04, local01
0c778                 | '   }
0c778                 | '   fil->vfsdata = f;
0c778                 | '   return 0;
0c778     00 F4 05 F6 | 	mov	result1, #0
0c77c                 | LR__0848
0c77c     A8 F0 03 F6 | 	mov	ptra, fp
0c780     B3 00 A0 FD | 	call	#popregs_
0c784                 | _ff_cc_v_open_0531_ret
0c784     2D 00 64 FD | 	ret
0c788                 | 
0c788                 | _ff_cc_xmit_mmc_0655
0c788     03 00 00 FF 
0c78c     34 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1844
0c790     F8 F8 01 FB | 	rdlong	_var01, ptr__ff_cc_dat__
0c794     08 F0 05 F1 | 	add	ptr__ff_cc_dat__, #8
0c798     F8 FA 01 FB | 	rdlong	_var02, ptr__ff_cc_dat__
0c79c     03 00 00 FF 
0c7a0     3C F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1852
0c7a4     40 FA 61 FD | 	dirl	_var02
0c7a8     28 02 64 FD | 	setq	#1
0c7ac     07 FD 01 FB | 	rdlong	_var03, arg01
0c7b0     69 FC 61 FD | 	rev	_var03
0c7b4     1B FC FD F9 | 	movbyts	_var03, #27
0c7b8     FD FC 21 FC | 	wypin	_var03, _var02
0c7bc     08 FD 01 F6 | 	mov	_var03, arg02
0c7c0     02 10 4E F0 | 	shr	arg02, #2 wz
0c7c4     03 FC 65 F0 | 	shl	_var03, #3
0c7c8     FC FC 21 FC | 	wypin	_var03, _var01
0c7cc     41 FA 61 FD | 	dirh	_var02
0c7d0     08 0E 06 F1 | 	add	arg01, #8
0c7d4     69 FE 61 FD | 	rev	_var04
0c7d8     1B FE FD F9 | 	movbyts	_var04, #27
0c7dc                 | LR__0849
0c7dc     FD FE 21 5C |  if_ne	wypin	_var04, _var02
0c7e0     07 FF 01 5B |  if_ne	rdlong	_var04, arg01
0c7e4     04 0E 06 51 |  if_ne	add	arg01, #4
0c7e8     69 FE 61 5D |  if_ne	rev	_var04
0c7ec     1B FE FD 59 |  if_ne	movbyts	_var04, #27
0c7f0                 | LR__0850
0c7f0     40 FA 71 5D |  if_ne	testp	_var02 wc
0c7f4     F8 FF 9F 1D |  if_a	jmp	#LR__0850
0c7f8     F8 11 6E 5B |  if_ne	djnz	arg02, #LR__0849
0c7fc                 | LR__0851
0c7fc     40 F8 71 FD | 	testp	_var01 wc
0c800     F8 FF 9F 3D |  if_ae	jmp	#LR__0851
0c804     40 FA 61 FD | 	dirl	_var02
0c808     FF FF FF FF 
0c80c     FD FE 2B FC | 	wypin	##-1, _var02
0c810     41 FA 61 FD | 	dirh	_var02
0c814                 | _ff_cc_xmit_mmc_0655_ret
0c814     2D 00 64 FD | 	ret
0c818                 | 
0c818                 | _ff_cc_rcvr_mmc_0660
0c818     03 00 00 FF 
0c81c     34 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1844
0c820     F8 F8 01 FB | 	rdlong	_var01, ptr__ff_cc_dat__
0c824     0C F0 05 F1 | 	add	ptr__ff_cc_dat__, #12
0c828     F8 FA 01 FB | 	rdlong	_var02, ptr__ff_cc_dat__
0c82c     03 00 00 FF 
0c830     40 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1856
0c834     FD 02 08 FC | 	akpin	_var02
0c838     08 FD 09 F6 | 	mov	_var03, arg02 wz
0c83c     02 FC 4D F0 | 	shr	_var03, #2 wz
0c840     30 00 90 AD |  if_e	jmp	#LR__0854
0c844     FE FE 01 F6 | 	mov	_var04, _var03
0c848     05 FE 65 F0 | 	shl	_var04, #5
0c84c     FC FE 21 FC | 	wypin	_var04, _var01
0c850     FD 7E 18 FC | 	wxpin	#63, _var02
0c854                 | LR__0852
0c854                 | LR__0853
0c854     40 FA 71 FD | 	testp	_var02 wc
0c858     F8 FF 9F 3D |  if_ae	jmp	#LR__0853
0c85c     FD FE 89 FA | 	rdpin	_var04, _var02
0c860     69 FE 61 FD | 	rev	_var04
0c864     1B FE FD F9 | 	movbyts	_var04, #27
0c868     07 FF 61 FC | 	wrlong	_var04, arg01
0c86c     04 0E 06 F1 | 	add	arg01, #4
0c870     F8 FD 6D FB | 	djnz	_var03, #LR__0852
0c874                 | LR__0854
0c874     03 10 0E F5 | 	and	arg02, #3 wz
0c878     24 00 90 AD |  if_e	jmp	#LR__0857
0c87c     FD 4E 18 FC | 	wxpin	#39, _var02
0c880                 | LR__0855
0c880     FC 10 28 FC | 	wypin	#8, _var01
0c884                 | LR__0856
0c884     40 FA 71 FD | 	testp	_var02 wc
0c888     F8 FF 9F 3D |  if_ae	jmp	#LR__0856
0c88c     FD FE 89 FA | 	rdpin	_var04, _var02
0c890     69 FE 61 FD | 	rev	_var04
0c894     07 FF 41 FC | 	wrbyte	_var04, arg01
0c898     01 0E 06 F1 | 	add	arg01, #1
0c89c     F8 11 6E FB | 	djnz	arg02, #LR__0855
0c8a0                 | LR__0857
0c8a0                 | _ff_cc_rcvr_mmc_0660_ret
0c8a0     2D 00 64 FD | 	ret
0c8a4                 | 
0c8a4                 | _ff_cc_wait_ready_0664
0c8a4     03 4C 05 F6 | 	mov	COUNT_, #3
0c8a8     A9 00 A0 FD | 	call	#pushregs_
0c8ac     10 F0 07 F1 | 	add	ptra, #16
0c8b0     1A F4 61 FD | 	getct	result1
0c8b4     08 50 05 F1 | 	add	fp, #8
0c8b8     A8 F4 61 FC | 	wrlong	result1, fp
0c8bc     14 18 06 FB | 	rdlong	local01, #20
0c8c0     01 18 46 F0 | 	shr	local01, #1
0c8c4     04 50 05 F1 | 	add	fp, #4
0c8c8     A8 18 62 FC | 	wrlong	local01, fp
0c8cc     0C 50 85 F1 | 	sub	fp, #12
0c8d0                 | ' {
0c8d0                 | ' 	BYTE d;
0c8d0                 | ' 	UINT tmr, tmout;
0c8d0                 | ' 
0c8d0                 | ' 	tmr = _cnt();
0c8d0                 | ' 	tmout =  (*(uint32_t *)0x14)  >> 1;
0c8d0                 | ' 	for(;;) {
0c8d0                 | LR__0858
0c8d0     04 50 05 F1 | 	add	fp, #4
0c8d4     A8 0E 02 F6 | 	mov	arg01, fp
0c8d8     04 50 85 F1 | 	sub	fp, #4
0c8dc     01 10 06 F6 | 	mov	arg02, #1
0c8e0     34 FF BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0c8e4     04 50 05 F1 | 	add	fp, #4
0c8e8     A8 18 C2 FA | 	rdbyte	local01, fp
0c8ec     04 50 85 F1 | 	sub	fp, #4
0c8f0     07 18 46 F7 | 	zerox	local01, #7
0c8f4     FF 18 0E F2 | 	cmp	local01, #255 wz
0c8f8     01 F4 05 A6 |  if_e	mov	result1, #1
0c8fc     2C 00 90 AD |  if_e	jmp	#LR__0859
0c900     1A F4 61 FD | 	getct	result1
0c904     FA 18 02 F6 | 	mov	local01, result1
0c908     08 50 05 F1 | 	add	fp, #8
0c90c     A8 1A 02 FB | 	rdlong	local02, fp
0c910     0D 19 82 F1 | 	sub	local01, local02
0c914     04 50 05 F1 | 	add	fp, #4
0c918     A8 1C 02 FB | 	rdlong	local03, fp
0c91c     0C 50 85 F1 | 	sub	fp, #12
0c920     0E 19 12 F2 | 	cmp	local01, local03 wc
0c924     00 F4 05 36 |  if_ae	mov	result1, #0
0c928     A4 FF 9F CD |  if_b	jmp	#LR__0858
0c92c                 | LR__0859
0c92c     A8 F0 03 F6 | 	mov	ptra, fp
0c930     B3 00 A0 FD | 	call	#popregs_
0c934                 | _ff_cc_wait_ready_0664_ret
0c934     2D 00 64 FD | 	ret
0c938                 | 
0c938                 | _ff_cc_deselect_0667
0c938     00 4C 05 F6 | 	mov	COUNT_, #0
0c93c     A9 00 A0 FD | 	call	#pushregs_
0c940     08 F0 07 F1 | 	add	ptra, #8
0c944     03 00 00 FF 
0c948     38 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1848
0c94c     F8 0E 02 FB | 	rdlong	arg01, ptr__ff_cc_dat__
0c950     03 00 00 FF 
0c954     38 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1848
0c958     04 50 05 F1 | 	add	fp, #4
0c95c     A8 0E 62 FC | 	wrlong	arg01, fp
0c960     04 50 85 F1 | 	sub	fp, #4
0c964     59 0E 62 FD | 	drvh	arg01
0c968     A8 0E 02 F6 | 	mov	arg01, fp
0c96c     01 10 06 F6 | 	mov	arg02, #1
0c970     A4 FE BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0c974     A8 F0 03 F6 | 	mov	ptra, fp
0c978     B3 00 A0 FD | 	call	#popregs_
0c97c                 | _ff_cc_deselect_0667_ret
0c97c     2D 00 64 FD | 	ret
0c980                 | 
0c980                 | _ff_cc_select_0671
0c980     01 4C 05 F6 | 	mov	COUNT_, #1
0c984     A9 00 A0 FD | 	call	#pushregs_
0c988     10 F0 07 F1 | 	add	ptra, #16
0c98c     03 00 00 FF 
0c990     38 F1 05 F1 | 	add	ptr__ff_cc_dat__, ##1848
0c994     F8 18 02 FB | 	rdlong	local01, ptr__ff_cc_dat__
0c998     08 50 05 F1 | 	add	fp, #8
0c99c     A8 18 62 FC | 	wrlong	local01, fp
0c9a0     08 F0 05 F1 | 	add	ptr__ff_cc_dat__, #8
0c9a4     F8 0E 02 FB | 	rdlong	arg01, ptr__ff_cc_dat__
0c9a8     03 00 00 FF 
0c9ac     40 F1 85 F1 | 	sub	ptr__ff_cc_dat__, ##1856
0c9b0     04 50 05 F1 | 	add	fp, #4
0c9b4     A8 0E 62 FC | 	wrlong	arg01, fp
0c9b8     50 0E 62 FD | 	fltl	arg01
0c9bc     04 50 85 F1 | 	sub	fp, #4
0c9c0     A8 0E 02 FB | 	rdlong	arg01, fp
0c9c4     58 0E 62 FD | 	drvl	arg01
0c9c8     04 50 05 F1 | 	add	fp, #4
0c9cc     A8 0E 02 FB | 	rdlong	arg01, fp
0c9d0     41 0E 62 FD | 	dirh	arg01
0c9d4     08 50 85 F1 | 	sub	fp, #8
0c9d8     A8 0E 02 F6 | 	mov	arg01, fp
0c9dc     04 50 85 F1 | 	sub	fp, #4
0c9e0     01 10 06 F6 | 	mov	arg02, #1
0c9e4     30 FE BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0c9e8     B8 FE BF FD | 	call	#_ff_cc_wait_ready_0664
0c9ec     00 F4 0D F2 | 	cmp	result1, #0 wz
0c9f0                 | ' 		return 1;
0c9f0     01 F4 05 56 |  if_ne	mov	result1, #1
0c9f4     08 00 90 5D |  if_ne	jmp	#LR__0860
0c9f8     3C FF BF FD | 	call	#_ff_cc_deselect_0667
0c9fc                 | ' 
0c9fc                 | ' 	deselect();
0c9fc                 | ' 	return 0;
0c9fc     00 F4 05 F6 | 	mov	result1, #0
0ca00                 | LR__0860
0ca00     A8 F0 03 F6 | 	mov	ptra, fp
0ca04     B3 00 A0 FD | 	call	#popregs_
0ca08                 | _ff_cc_select_0671_ret
0ca08     2D 00 64 FD | 	ret
0ca0c                 | 
0ca0c                 | _ff_cc_rcvr_datablock_0675
0ca0c     03 4C 05 F6 | 	mov	COUNT_, #3
0ca10     A9 00 A0 FD | 	call	#pushregs_
0ca14     18 F0 07 F1 | 	add	ptra, #24
0ca18     04 50 05 F1 | 	add	fp, #4
0ca1c     A8 0E 62 FC | 	wrlong	arg01, fp
0ca20     04 50 05 F1 | 	add	fp, #4
0ca24     A8 10 62 FC | 	wrlong	arg02, fp
0ca28     1A F4 61 FD | 	getct	result1
0ca2c     08 50 05 F1 | 	add	fp, #8
0ca30     A8 F4 61 FC | 	wrlong	result1, fp
0ca34     14 18 06 FB | 	rdlong	local01, #20
0ca38     03 18 46 F0 | 	shr	local01, #3
0ca3c     04 50 05 F1 | 	add	fp, #4
0ca40     A8 18 62 FC | 	wrlong	local01, fp
0ca44     14 50 85 F1 | 	sub	fp, #20
0ca48                 | ' 	BYTE *buff,
0ca48                 | ' 	UINT btr
0ca48                 | ' )
0ca48                 | ' {
0ca48                 | ' 	BYTE d[2];
0ca48                 | ' 	UINT tmr, tmout;
0ca48                 | ' 
0ca48                 | ' 	tmr = _cnt();
0ca48                 | ' 	tmout =  (*(uint32_t *)0x14)  >> 3;
0ca48                 | ' 	for(;;) {
0ca48                 | LR__0861
0ca48     0C 50 05 F1 | 	add	fp, #12
0ca4c     A8 0E 02 F6 | 	mov	arg01, fp
0ca50     0C 50 85 F1 | 	sub	fp, #12
0ca54     01 10 06 F6 | 	mov	arg02, #1
0ca58     BC FD BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0ca5c     0C 50 05 F1 | 	add	fp, #12
0ca60     A8 18 C2 FA | 	rdbyte	local01, fp
0ca64     0C 50 85 F1 | 	sub	fp, #12
0ca68     07 18 46 F7 | 	zerox	local01, #7
0ca6c     FF 18 0E F2 | 	cmp	local01, #255 wz
0ca70     28 00 90 5D |  if_ne	jmp	#LR__0862
0ca74     1A F4 61 FD | 	getct	result1
0ca78     FA 18 02 F6 | 	mov	local01, result1
0ca7c     10 50 05 F1 | 	add	fp, #16
0ca80     A8 1A 02 FB | 	rdlong	local02, fp
0ca84     0D 19 82 F1 | 	sub	local01, local02
0ca88     04 50 05 F1 | 	add	fp, #4
0ca8c     A8 1C 02 FB | 	rdlong	local03, fp
0ca90     14 50 85 F1 | 	sub	fp, #20
0ca94     0E 19 12 F2 | 	cmp	local01, local03 wc
0ca98     AC FF 9F CD |  if_b	jmp	#LR__0861
0ca9c                 | LR__0862
0ca9c     0C 50 05 F1 | 	add	fp, #12
0caa0     A8 18 C2 FA | 	rdbyte	local01, fp
0caa4     0C 50 85 F1 | 	sub	fp, #12
0caa8     07 18 46 F7 | 	zerox	local01, #7
0caac     FE 18 0E F2 | 	cmp	local01, #254 wz
0cab0     00 F4 05 56 |  if_ne	mov	result1, #0
0cab4     30 00 90 5D |  if_ne	jmp	#LR__0863
0cab8     04 50 05 F1 | 	add	fp, #4
0cabc     A8 0E 02 FB | 	rdlong	arg01, fp
0cac0     04 50 05 F1 | 	add	fp, #4
0cac4     A8 10 02 FB | 	rdlong	arg02, fp
0cac8     08 50 85 F1 | 	sub	fp, #8
0cacc     48 FD BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cad0     0C 50 05 F1 | 	add	fp, #12
0cad4     A8 0E 02 F6 | 	mov	arg01, fp
0cad8     0C 50 85 F1 | 	sub	fp, #12
0cadc     02 10 06 F6 | 	mov	arg02, #2
0cae0     34 FD BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cae4                 | ' 
0cae4                 | ' 	rcvr_mmc(buff, btr);
0cae4                 | ' 	rcvr_mmc(d, 2);
0cae4                 | ' 
0cae4                 | ' 	return 1;
0cae4     01 F4 05 F6 | 	mov	result1, #1
0cae8                 | LR__0863
0cae8     A8 F0 03 F6 | 	mov	ptra, fp
0caec     B3 00 A0 FD | 	call	#popregs_
0caf0                 | _ff_cc_rcvr_datablock_0675_ret
0caf0     2D 00 64 FD | 	ret
0caf4                 | 
0caf4                 | _ff_cc_xmit_datablock_0677
0caf4     01 4C 05 F6 | 	mov	COUNT_, #1
0caf8     A9 00 A0 FD | 	call	#pushregs_
0cafc     10 F0 07 F1 | 	add	ptra, #16
0cb00     04 50 05 F1 | 	add	fp, #4
0cb04     A8 0E 62 FC | 	wrlong	arg01, fp
0cb08     04 50 05 F1 | 	add	fp, #4
0cb0c     A8 10 42 FC | 	wrbyte	arg02, fp
0cb10     08 50 85 F1 | 	sub	fp, #8
0cb14     8C FD BF FD | 	call	#_ff_cc_wait_ready_0664
0cb18     00 F4 0D F2 | 	cmp	result1, #0 wz
0cb1c     00 F4 05 A6 |  if_e	mov	result1, #0
0cb20     98 00 90 AD |  if_e	jmp	#LR__0865
0cb24     08 50 05 F1 | 	add	fp, #8
0cb28     A8 18 C2 FA | 	rdbyte	local01, fp
0cb2c     04 50 05 F1 | 	add	fp, #4
0cb30     A8 18 42 FC | 	wrbyte	local01, fp
0cb34     A8 0E 02 F6 | 	mov	arg01, fp
0cb38     0C 50 85 F1 | 	sub	fp, #12
0cb3c     01 10 06 F6 | 	mov	arg02, #1
0cb40     44 FC BF FD | 	call	#_ff_cc_xmit_mmc_0655
0cb44     08 50 05 F1 | 	add	fp, #8
0cb48     A8 18 C2 FA | 	rdbyte	local01, fp
0cb4c     08 50 85 F1 | 	sub	fp, #8
0cb50     07 18 46 F7 | 	zerox	local01, #7
0cb54     FD 18 0E F2 | 	cmp	local01, #253 wz
0cb58     5C 00 90 AD |  if_e	jmp	#LR__0864
0cb5c     04 50 05 F1 | 	add	fp, #4
0cb60     A8 0E 02 FB | 	rdlong	arg01, fp
0cb64     04 50 85 F1 | 	sub	fp, #4
0cb68     09 10 C6 F9 | 	decod	arg02, #9
0cb6c     18 FC BF FD | 	call	#_ff_cc_xmit_mmc_0655
0cb70     0C 50 05 F1 | 	add	fp, #12
0cb74     A8 0E 02 F6 | 	mov	arg01, fp
0cb78     0C 50 85 F1 | 	sub	fp, #12
0cb7c     02 10 06 F6 | 	mov	arg02, #2
0cb80     94 FC BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cb84     0C 50 05 F1 | 	add	fp, #12
0cb88     A8 0E 02 F6 | 	mov	arg01, fp
0cb8c     0C 50 85 F1 | 	sub	fp, #12
0cb90     01 10 06 F6 | 	mov	arg02, #1
0cb94     80 FC BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cb98     0C 50 05 F1 | 	add	fp, #12
0cb9c     A8 18 C2 FA | 	rdbyte	local01, fp
0cba0     0C 50 85 F1 | 	sub	fp, #12
0cba4     07 18 46 F7 | 	zerox	local01, #7
0cba8     1F 18 06 F5 | 	and	local01, #31
0cbac     05 18 0E F2 | 	cmp	local01, #5 wz
0cbb0                 | ' 			return 0;
0cbb0     00 F4 05 56 |  if_ne	mov	result1, #0
0cbb4     04 00 90 5D |  if_ne	jmp	#LR__0865
0cbb8                 | LR__0864
0cbb8                 | ' 	}
0cbb8                 | ' 
0cbb8                 | ' 	return 1;
0cbb8     01 F4 05 F6 | 	mov	result1, #1
0cbbc                 | LR__0865
0cbbc     A8 F0 03 F6 | 	mov	ptra, fp
0cbc0     B3 00 A0 FD | 	call	#popregs_
0cbc4                 | _ff_cc_xmit_datablock_0677_ret
0cbc4     2D 00 64 FD | 	ret
0cbc8                 | 
0cbc8                 | _ff_cc_send_cmd_0681
0cbc8     05 4C 05 F6 | 	mov	COUNT_, #5
0cbcc     A9 00 A0 FD | 	call	#pushregs_
0cbd0     1C F0 07 F1 | 	add	ptra, #28
0cbd4                 | _ff_cc_send_cmd_0681_enter
0cbd4     04 50 05 F1 | 	add	fp, #4
0cbd8     A8 0E 42 FC | 	wrbyte	arg01, fp
0cbdc     04 50 05 F1 | 	add	fp, #4
0cbe0     A8 10 62 FC | 	wrlong	arg02, fp
0cbe4     04 50 85 F1 | 	sub	fp, #4
0cbe8     A8 18 C2 FA | 	rdbyte	local01, fp
0cbec     04 50 85 F1 | 	sub	fp, #4
0cbf0     07 18 46 F7 | 	zerox	local01, #7
0cbf4     80 18 CE F7 | 	test	local01, #128 wz
0cbf8     4C 00 90 AD |  if_e	jmp	#LR__0867
0cbfc     04 50 05 F1 | 	add	fp, #4
0cc00     A8 18 C2 FA | 	rdbyte	local01, fp
0cc04     7F 18 06 F5 | 	and	local01, #127
0cc08     A8 18 42 FC | 	wrbyte	local01, fp
0cc0c     04 50 85 F1 | 	sub	fp, #4
0cc10     37 0E 06 F6 | 	mov	arg01, #55
0cc14     00 10 06 F6 | 	mov	arg02, #0
0cc18     AC FF BF FD | 	call	#_ff_cc_send_cmd_0681
0cc1c     0C 50 05 F1 | 	add	fp, #12
0cc20     A8 F4 41 FC | 	wrbyte	result1, fp
0cc24     A8 18 C2 FA | 	rdbyte	local01, fp
0cc28     0C 50 85 F1 | 	sub	fp, #12
0cc2c     07 18 46 F7 | 	zerox	local01, #7
0cc30     02 18 16 F2 | 	cmp	local01, #2 wc
0cc34     10 00 90 CD |  if_b	jmp	#LR__0866
0cc38     0C 50 05 F1 | 	add	fp, #12
0cc3c     A8 F4 C1 FA | 	rdbyte	result1, fp
0cc40     0C 50 85 F1 | 	sub	fp, #12
0cc44     88 01 90 FD | 	jmp	#LR__0872
0cc48                 | LR__0866
0cc48                 | LR__0867
0cc48     04 50 05 F1 | 	add	fp, #4
0cc4c     A8 18 C2 FA | 	rdbyte	local01, fp
0cc50     04 50 85 F1 | 	sub	fp, #4
0cc54     07 18 46 F7 | 	zerox	local01, #7
0cc58     0C 18 0E F2 | 	cmp	local01, #12 wz
0cc5c     14 00 90 AD |  if_e	jmp	#LR__0868
0cc60     D4 FC BF FD | 	call	#_ff_cc_deselect_0667
0cc64     18 FD BF FD | 	call	#_ff_cc_select_0671
0cc68     00 F4 0D F2 | 	cmp	result1, #0 wz
0cc6c     FF F4 05 A6 |  if_e	mov	result1, #255
0cc70     5C 01 90 AD |  if_e	jmp	#LR__0872
0cc74                 | LR__0868
0cc74     04 50 05 F1 | 	add	fp, #4
0cc78     A8 1A C2 FA | 	rdbyte	local02, fp
0cc7c     40 18 06 F6 | 	mov	local01, #64
0cc80     0D 19 42 F5 | 	or	local01, local02
0cc84     10 50 05 F1 | 	add	fp, #16
0cc88     A8 18 42 FC | 	wrbyte	local01, fp
0cc8c     0C 50 85 F1 | 	sub	fp, #12
0cc90     A8 18 02 FB | 	rdlong	local01, fp
0cc94     18 18 46 F0 | 	shr	local01, #24
0cc98     0D 50 05 F1 | 	add	fp, #13
0cc9c     A8 18 42 FC | 	wrbyte	local01, fp
0cca0     0D 50 85 F1 | 	sub	fp, #13
0cca4     A8 18 02 FB | 	rdlong	local01, fp
0cca8     10 18 46 F0 | 	shr	local01, #16
0ccac     0E 50 05 F1 | 	add	fp, #14
0ccb0     A8 18 42 FC | 	wrbyte	local01, fp
0ccb4     0E 50 85 F1 | 	sub	fp, #14
0ccb8     A8 18 02 FB | 	rdlong	local01, fp
0ccbc     08 18 46 F0 | 	shr	local01, #8
0ccc0     0F 50 05 F1 | 	add	fp, #15
0ccc4     A8 18 42 FC | 	wrbyte	local01, fp
0ccc8     0F 50 85 F1 | 	sub	fp, #15
0cccc     A8 18 02 FB | 	rdlong	local01, fp
0ccd0     10 50 05 F1 | 	add	fp, #16
0ccd4     A8 18 42 FC | 	wrbyte	local01, fp
0ccd8     0C 50 85 F1 | 	sub	fp, #12
0ccdc     A8 02 48 FC | 	wrbyte	#1, fp
0cce0     08 50 85 F1 | 	sub	fp, #8
0cce4     A8 18 C2 FA | 	rdbyte	local01, fp
0cce8     04 50 85 F1 | 	sub	fp, #4
0ccec     07 18 4E F7 | 	zerox	local01, #7 wz
0ccf0     0C 50 05 A1 |  if_e	add	fp, #12
0ccf4     A8 2A 49 AC |  if_e	wrbyte	#149, fp
0ccf8     0C 50 85 A1 |  if_e	sub	fp, #12
0ccfc     04 50 05 F1 | 	add	fp, #4
0cd00     A8 18 C2 FA | 	rdbyte	local01, fp
0cd04     04 50 85 F1 | 	sub	fp, #4
0cd08     07 18 46 F7 | 	zerox	local01, #7
0cd0c     08 18 0E F2 | 	cmp	local01, #8 wz
0cd10     0C 50 05 A1 |  if_e	add	fp, #12
0cd14     A8 0E 49 AC |  if_e	wrbyte	#135, fp
0cd18     0C 50 85 A1 |  if_e	sub	fp, #12
0cd1c     0C 50 05 F1 | 	add	fp, #12
0cd20     A8 18 C2 FA | 	rdbyte	local01, fp
0cd24     0D 50 05 F1 | 	add	fp, #13
0cd28     A8 18 42 FC | 	wrbyte	local01, fp
0cd2c     05 50 85 F1 | 	sub	fp, #5
0cd30     A8 0E 02 F6 | 	mov	arg01, fp
0cd34     14 50 85 F1 | 	sub	fp, #20
0cd38     06 10 06 F6 | 	mov	arg02, #6
0cd3c     48 FA BF FD | 	call	#_ff_cc_xmit_mmc_0655
0cd40     04 50 05 F1 | 	add	fp, #4
0cd44     A8 18 C2 FA | 	rdbyte	local01, fp
0cd48     04 50 85 F1 | 	sub	fp, #4
0cd4c     07 18 46 F7 | 	zerox	local01, #7
0cd50     0C 18 0E F2 | 	cmp	local01, #12 wz
0cd54     14 00 90 5D |  if_ne	jmp	#LR__0869
0cd58     10 50 05 F1 | 	add	fp, #16
0cd5c     A8 0E 02 F6 | 	mov	arg01, fp
0cd60     10 50 85 F1 | 	sub	fp, #16
0cd64     01 10 06 F6 | 	mov	arg02, #1
0cd68     AC FA BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cd6c                 | LR__0869
0cd6c     0C 50 05 F1 | 	add	fp, #12
0cd70     A8 14 48 FC | 	wrbyte	#10, fp
0cd74     0C 50 85 F1 | 	sub	fp, #12
0cd78                 | ' 	n = 10;
0cd78                 | ' 	do
0cd78                 | LR__0870
0cd78     10 50 05 F1 | 	add	fp, #16
0cd7c     A8 0E 02 F6 | 	mov	arg01, fp
0cd80     10 50 85 F1 | 	sub	fp, #16
0cd84     01 10 06 F6 | 	mov	arg02, #1
0cd88     8C FA BF FD | 	call	#_ff_cc_rcvr_mmc_0660
0cd8c     10 50 05 F1 | 	add	fp, #16
0cd90     A8 18 C2 FA | 	rdbyte	local01, fp
0cd94     10 50 85 F1 | 	sub	fp, #16
0cd98     07 18 46 F7 | 	zerox	local01, #7
0cd9c     80 18 CE F7 | 	test	local01, #128 wz
0cda0     20 00 90 AD |  if_e	jmp	#LR__0871
0cda4     0C 50 05 F1 | 	add	fp, #12
0cda8     A8 1C C2 FA | 	rdbyte	local03, fp
0cdac     01 1C 86 F1 | 	sub	local03, #1
0cdb0     A8 1C 42 FC | 	wrbyte	local03, fp
0cdb4     A8 1E C2 FA | 	rdbyte	local04, fp
0cdb8     0C 50 85 F1 | 	sub	fp, #12
0cdbc     0F 21 0A F6 | 	mov	local05, local04 wz
0cdc0     B4 FF 9F 5D |  if_ne	jmp	#LR__0870
0cdc4                 | LR__0871
0cdc4                 | ' 
0cdc4                 | ' 	return d;
0cdc4     10 50 05 F1 | 	add	fp, #16
0cdc8     A8 F4 C1 FA | 	rdbyte	result1, fp
0cdcc     10 50 85 F1 | 	sub	fp, #16
0cdd0                 | LR__0872
0cdd0     A8 F0 03 F6 | 	mov	ptra, fp
0cdd4     B3 00 A0 FD | 	call	#popregs_
0cdd8                 | _ff_cc_send_cmd_0681_ret
0cdd8     2D 00 64 FD | 	ret
0cddc                 | 
0cddc                 | _ff_cc_strncpy
0cddc     07 F9 01 F6 | 	mov	_var01, arg01
0cde0     40 32 9F FE | 	loc	pa,	#(@LR__0874-@LR__0873)
0cde4     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0cde8                 | ' 
0cde8                 | ' 	dscan = dst;
0cde8                 | ' 	sscan = src;
0cde8                 | ' 	count = n;
0cde8                 | ' 	while (--count >= 0 && (*dscan++ = *sscan++) != '\0')
0cde8                 | LR__0873
0cde8     01 12 86 F1 | 	sub	arg03, #1
0cdec     00 12 56 F2 | 	cmps	arg03, #0 wc
0cdf0     18 00 90 CD |  if_b	jmp	#LR__0875
0cdf4     08 FB C1 FA | 	rdbyte	_var02, arg02
0cdf8     FC FA 41 FC | 	wrbyte	_var02, _var01
0cdfc     01 10 06 F1 | 	add	arg02, #1
0ce00     FC FC C9 FA | 	rdbyte	_var03, _var01 wz
0ce04                 | ' 		continue;
0ce04     01 F8 05 F1 | 	add	_var01, #1
0ce08     DC FF 9F 5D |  if_ne	jmp	#LR__0873
0ce0c                 | LR__0874
0ce0c                 | LR__0875
0ce0c     04 32 9F FE | 	loc	pa,	#(@LR__0877-@LR__0876)
0ce10     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0ce14                 | ' 	while (--count >= 0)
0ce14                 | LR__0876
0ce14     01 12 86 F1 | 	sub	arg03, #1
0ce18     00 12 56 F2 | 	cmps	arg03, #0 wc
0ce1c     FC 00 48 3C |  if_ae	wrbyte	#0, _var01
0ce20     01 F8 05 31 |  if_ae	add	_var01, #1
0ce24     EC FF 9F 3D |  if_ae	jmp	#LR__0876
0ce28                 | LR__0877
0ce28                 | ' 		*dscan++ = '\0';
0ce28                 | ' 	return(dst);
0ce28     07 F5 01 F6 | 	mov	result1, arg01
0ce2c                 | _ff_cc_strncpy_ret
0ce2c     2D 00 64 FD | 	ret
0ce30                 | 
0ce30                 | _ff_cc_memset
0ce30     07 F9 01 F6 | 	mov	_var01, arg01
0ce34     08 FB 01 F6 | 	mov	_var02, arg02
0ce38     09 FD 01 F6 | 	mov	_var03, arg03
0ce3c     FC FE 01 F6 | 	mov	_var04, _var01
0ce40     03 00 06 F6 | 	mov	_var05, #3
0ce44     FC 00 CA F7 | 	test	_var05, _var01 wz
0ce48     70 00 90 5D |  if_ne	jmp	#LR__0881
0ce4c     05 FC 15 F2 | 	cmp	_var03, #5 wc
0ce50     68 00 90 CD |  if_b	jmp	#LR__0881
0ce54     FC 02 02 F6 | 	mov	_var06, _var01
0ce58     FF FA 05 F5 | 	and	_var02, #255
0ce5c     FD 00 02 F6 | 	mov	_var05, _var02
0ce60     18 00 66 F0 | 	shl	_var05, #24
0ce64     FD 04 02 F6 | 	mov	_var07, _var02
0ce68     10 04 66 F0 | 	shl	_var07, #16
0ce6c     02 01 42 F5 | 	or	_var05, _var07
0ce70     FD 06 02 F6 | 	mov	_var08, _var02
0ce74     08 06 66 F0 | 	shl	_var08, #8
0ce78     03 01 42 F5 | 	or	_var05, _var08
0ce7c     FD 00 42 F5 | 	or	_var05, _var02
0ce80     00 09 02 F6 | 	mov	_var09, _var05
0ce84     A4 31 9F FE | 	loc	pa,	#(@LR__0879-@LR__0878)
0ce88     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0ce8c                 | '     {
0ce8c                 | '       uint32_t lc;
0ce8c                 | '       uint32_t *dstl = dest_p;
0ce8c                 | '       c &= 0xff;
0ce8c                 | '       lc = (c<<24)|(c<<16)|(c<<8)|c;
0ce8c                 | '       while (n >= sizeof(uint32_t))
0ce8c                 | LR__0878
0ce8c     04 FC 15 F2 | 	cmp	_var03, #4 wc
0ce90     24 00 90 CD |  if_b	jmp	#LR__0880
0ce94     01 01 02 F6 | 	mov	_var05, _var06
0ce98     01 05 02 F6 | 	mov	_var07, _var06
0ce9c     04 04 06 F1 | 	add	_var07, #4
0cea0     02 03 02 F6 | 	mov	_var06, _var07
0cea4     00 09 62 FC | 	wrlong	_var09, _var05
0cea8     FE 00 02 F6 | 	mov	_var05, _var03
0ceac     04 00 86 F1 | 	sub	_var05, #4
0ceb0     00 FD 01 F6 | 	mov	_var03, _var05
0ceb4     D4 FF 9F FD | 	jmp	#LR__0878
0ceb8                 | LR__0879
0ceb8                 | LR__0880
0ceb8     01 F9 01 F6 | 	mov	_var01, _var06
0cebc                 | LR__0881
0cebc     58 31 9F FE | 	loc	pa,	#(@LR__0883-@LR__0882)
0cec0     8C 00 A0 FD | 	call	#FCACHE_LOAD_
0cec4                 | ' 	}
0cec4                 | '       dest_p = dstl;
0cec4                 | '     }
0cec4                 | ' 
0cec4                 | '   dst = dest_p;
0cec4                 | '   while (n > 0) {
0cec4                 | LR__0882
0cec4     01 FC 15 F2 | 	cmp	_var03, #1 wc
0cec8     10 00 90 CD |  if_b	jmp	#LR__0884
0cecc     FC FA 41 FC | 	wrbyte	_var02, _var01
0ced0     01 FC 85 F1 | 	sub	_var03, #1
0ced4     01 F8 05 F1 | 	add	_var01, #1
0ced8     E8 FF 9F FD | 	jmp	#LR__0882
0cedc                 | LR__0883
0cedc                 | LR__0884
0cedc                 | '     *dst++ = c;
0cedc                 | '     --n;
0cedc                 | '   }
0cedc                 | ' 
0cedc                 | '   return orig_dest;
0cedc     FF F4 01 F6 | 	mov	result1, _var04
0cee0                 | _ff_cc_memset_ret
0cee0     2D 00 64 FD | 	ret
0cee4                 | 
0cee4                 | ' 	
0cee4                 | ' 	FUNCTION pfunc(c as integer) as integer
0cee4                 | ___strs_cl_pfunc
0cee4                 | ' 		if (i < 16) then
0cee4     04 E2 05 F1 | 	add	objptr, #4
0cee8     F1 F8 01 FB | 	rdlong	_var01, objptr
0ceec     04 E2 85 F1 | 	sub	objptr, #4
0cef0     10 F8 55 F2 | 	cmps	_var01, #16 wc
0cef4     2C 00 90 3D |  if_ae	jmp	#LR__0885
0cef8     F1 FA 01 FB | 	rdlong	_var02, objptr
0cefc     04 E2 05 F1 | 	add	objptr, #4
0cf00     F1 FC 01 FB | 	rdlong	_var03, objptr
0cf04     FD FC 01 F1 | 	add	_var03, _var02
0cf08     FE 0E 42 FC | 	wrbyte	arg01, _var03
0cf0c     F1 F8 01 FB | 	rdlong	_var01, objptr
0cf10     01 F8 05 F1 | 	add	_var01, #1
0cf14     F1 F8 61 FC | 	wrlong	_var01, objptr
0cf18     04 E2 85 F1 | 	sub	objptr, #4
0cf1c                 | ' 			p(i) = c
0cf1c                 | ' 			i = i+1
0cf1c                 | ' 			return 1
0cf1c     01 F4 05 F6 | 	mov	result1, #1
0cf20     04 00 90 FD | 	jmp	#___strs_cl_pfunc_ret
0cf24                 | LR__0885
0cf24                 | ' 			return -1
0cf24     01 F4 65 F6 | 	neg	result1, #1
0cf28                 | ___strs_cl_pfunc_ret
0cf28     2D 00 64 FD | 	ret
0cf2c                 | 
0cf2c                 | __struct__s_vfs_file_t_putchar
0cf2c     04 4C 05 F6 | 	mov	COUNT_, #4
0cf30     A9 00 A0 FD | 	call	#pushregs_
0cf34     18 E2 05 F1 | 	add	objptr, #24
0cf38     F1 18 0A FB | 	rdlong	local01, objptr wz
0cf3c     18 E2 85 F1 | 	sub	objptr, #24
0cf40     00 F4 05 A6 |  if_e	mov	result1, #0
0cf44     3C 00 90 AD |  if_e	jmp	#LR__0886
0cf48     18 E2 05 F1 | 	add	objptr, #24
0cf4c     F1 18 02 FB | 	rdlong	local01, objptr
0cf50     18 E2 85 F1 | 	sub	objptr, #24
0cf54     0C 1B 02 FB | 	rdlong	local02, local01
0cf58     04 18 06 F1 | 	add	local01, #4
0cf5c     0C 1D 02 FB | 	rdlong	local03, local01
0cf60     F1 10 02 F6 | 	mov	arg02, objptr
0cf64     F1 1E 02 F6 | 	mov	local04, objptr
0cf68     0D E3 01 F6 | 	mov	objptr, local02
0cf6c     2D 1C 62 FD | 	call	local03
0cf70     0F E3 01 F6 | 	mov	objptr, local04
0cf74     00 F4 55 F2 | 	cmps	result1, #0 wc
0cf78     00 18 06 C6 |  if_b	mov	local01, #0
0cf7c     01 18 06 36 |  if_ae	mov	local01, #1
0cf80     0C F5 01 F6 | 	mov	result1, local01
0cf84                 | LR__0886
0cf84     A8 F0 03 F6 | 	mov	ptra, fp
0cf88     B3 00 A0 FD | 	call	#popregs_
0cf8c                 | __struct__s_vfs_file_t_putchar_ret
0cf8c     2D 00 64 FD | 	ret
0cf90                 | 
0cf90                 | __struct__s_vfs_file_t_getchar
0cf90     04 4C 05 F6 | 	mov	COUNT_, #4
0cf94     A9 00 A0 FD | 	call	#pushregs_
0cf98     1C E2 05 F1 | 	add	objptr, #28
0cf9c     F1 18 0A FB | 	rdlong	local01, objptr wz
0cfa0     1C E2 85 F1 | 	sub	objptr, #28
0cfa4     01 F4 65 A6 |  if_e	neg	result1, #1
0cfa8     2C 00 90 AD |  if_e	jmp	#LR__0887
0cfac                 | '         return getcf(__this);
0cfac     1C E2 05 F1 | 	add	objptr, #28
0cfb0     F1 18 02 FB | 	rdlong	local01, objptr
0cfb4     1C E2 85 F1 | 	sub	objptr, #28
0cfb8     0C 1B 02 FB | 	rdlong	local02, local01
0cfbc     04 18 06 F1 | 	add	local01, #4
0cfc0     0C 1D 02 FB | 	rdlong	local03, local01
0cfc4     F1 0E 02 F6 | 	mov	arg01, objptr
0cfc8     F1 1E 02 F6 | 	mov	local04, objptr
0cfcc     0D E3 01 F6 | 	mov	objptr, local02
0cfd0     2D 1C 62 FD | 	call	local03
0cfd4     0F E3 01 F6 | 	mov	objptr, local04
0cfd8                 | LR__0887
0cfd8     A8 F0 03 F6 | 	mov	ptra, fp
0cfdc     B3 00 A0 FD | 	call	#popregs_
0cfe0                 | __struct__s_vfs_file_t_getchar_ret
0cfe0     2D 00 64 FD | 	ret
0cfe4                 | 
0cfe4                 | __struct___bas_wrap_sender_tx
0cfe4     04 4C 05 F6 | 	mov	COUNT_, #4
0cfe8     A9 00 A0 FD | 	call	#pushregs_
0cfec     F1 18 02 FB | 	rdlong	local01, objptr
0cff0     0C 1B 02 FB | 	rdlong	local02, local01
0cff4     04 18 06 F1 | 	add	local01, #4
0cff8     0C 1D 02 FB | 	rdlong	local03, local01
0cffc     F1 1E 02 F6 | 	mov	local04, objptr
0d000     0D E3 01 F6 | 	mov	objptr, local02
0d004     2D 1C 62 FD | 	call	local03
0d008     0F E3 01 F6 | 	mov	objptr, local04
0d00c     01 F4 05 F6 | 	mov	result1, #1
0d010     A8 F0 03 F6 | 	mov	ptra, fp
0d014     B3 00 A0 FD | 	call	#popregs_
0d018                 | __struct___bas_wrap_sender_tx_ret
0d018     2D 00 64 FD | 	ret
0d01c                 | 
0d01c                 | LR__0888
0d01c     2F          | 	byte	"/"
0d01d     00          | 	byte	0
0d01e                 | LR__0889
0d01e     20 21 21 21 
0d022     20 63 6F 72 
0d026     72 75 70 74 
0d02a     65 64 20 68 
0d02e     65 61 70 3F 
0d032     3F 3F 20 21 
0d036     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
0d039     00          | 	byte	0
0d03a                 | LR__0890
0d03a     20 21 21 21 
0d03e     20 6F 75 74 
0d042     20 6F 66 20 
0d046     68 65 61 70 
0d04a     20 6D 65 6D 
0d04e     6F 72 79 20 
0d052     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
0d056     00          | 	byte	0
0d057                 | LR__0891
0d057     20 21 21 21 
0d05b     20 63 6F 72 
0d05f     72 75 70 74 
0d063     65 64 20 68 
0d067     65 61 70 20 
0d06b     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
0d06f     00          | 	byte	0
0d070                 | LR__0892
0d070     00          | 	byte	0
0d071     00          | 	byte	0
0d072                 | LR__0893
0d072     22 2A 3A 3C 
0d076     3E 3F 7C 7F | 	byte	34,"*:<>?|",127
0d07a     00          | 	byte	0
0d07b                 | LR__0894
0d07b     2B 2C 3B 3D 
0d07f     5B 5D       | 	byte	"+,;=[]"
0d081     00          | 	byte	0
0d082                 | LR__0895
0d082     EB 76 90 45 
0d086     58 46 41 54 
0d08a     20 20 20    | 	byte	-21,"v",-112,"EXFAT   "
0d08d     00          | 	byte	0
0d08e                 | LR__0896
0d08e     46 41 54    | 	byte	"FAT"
0d091     00          | 	byte	0
0d092                 | LR__0897
0d092     46 41 54 33 
0d096     32          | 	byte	"FAT32"
0d097     00          | 	byte	0
0d098                 | LR__0898
0d098     2F 73 64    | 	byte	"/sd"
0d09b     00          | 	byte	0
0d09c                 | LR__0899
0d09c     2F 73 64 2F 
0d0a0     73 69 64 2F 
0d0a4     73 65 6C 65 
0d0a8     63 74 65 64 | 	byte	"/sd/sid/selected"
0d0ac     00          | 	byte	0
0d0ad                 | LR__0900
0d0ad     2F 73 64 2F 
0d0b1     73 69 64 2F 
0d0b5     73 65 6C 65 
0d0b9     63 74 65 64 
0d0bd     2F 62 69 6C 
0d0c1     69 6E 73 6B 
0d0c5     69 2E 73 69 
0d0c9     64          | 	byte	"/sd/sid/selected/bilinski.sid"
0d0ca     00          | 	byte	0
0d0cb                 | LR__0901
0d0cb                 | 	byte	
0d0cb     00          | 	byte	0
0d0cc                 | LR__0902
0d0cc                 | 	byte	
0d0cc     00          | 	byte	0
0d0cd                 | LR__0903
0d0cd                 | 	byte	
0d0cd     00          | 	byte	0
0d0ce                 | LR__0904
0d0ce     76 65 72 73 
0d0d2     69 6F 6E 3A 
0d0d6     20 20 20    | 	byte	"version:   "
0d0d9     00          | 	byte	0
0d0da                 | LR__0905
0d0da     6F 66 66 73 
0d0de     65 74 3A 20 
0d0e2     20 20 20    | 	byte	"offset:    "
0d0e5     00          | 	byte	0
0d0e6                 | LR__0906
0d0e6     6C 6F 61 64 
0d0ea     3A 20 20 20 
0d0ee     20 20 20    | 	byte	"load:      "
0d0f1     00          | 	byte	0
0d0f2                 | LR__0907
0d0f2     69 6E 69 74 
0d0f6     3A 20 20 20 
0d0fa     20 20 20    | 	byte	"init:      "
0d0fd     00          | 	byte	0
0d0fe                 | LR__0908
0d0fe     70 6C 61 79 
0d102     3A 20 20 20 
0d106     20 20 20    | 	byte	"play:      "
0d109     00          | 	byte	0
0d10a                 | LR__0909
0d10a     73 6F 6E 67 
0d10e     73 3A 20 20 
0d112     20 20 20    | 	byte	"songs:     "
0d115     00          | 	byte	0
0d116                 | LR__0910
0d116     73 74 61 72 
0d11a     74 73 6F 6E 
0d11e     67 3A 20    | 	byte	"startsong: "
0d121     00          | 	byte	0
0d122                 | LR__0911
0d122     73 70 65 65 
0d126     64 3A 20 20 
0d12a     20 20 20    | 	byte	"speed:     "
0d12d     00          | 	byte	0
0d12e                 | LR__0912
0d12e     74 69 74 6C 
0d132     65 3A 20 20 
0d136     20 20 20    | 	byte	"title:     "
0d139     00          | 	byte	0
0d13a                 | LR__0913
0d13a     61 75 74 68 
0d13e     6F 72 3A 20 
0d142     20 20 20    | 	byte	"author:    "
0d145     00          | 	byte	0
0d146                 | LR__0914
0d146     63 6F 70 79 
0d14a     72 69 67 68 
0d14e     74 3A 20    | 	byte	"copyright: "
0d151     00          | 	byte	0
0d152                 | LR__0915
0d152     66 6C 61 67 
0d156     73 3A 20 20 
0d15a     20 20 20    | 	byte	"flags:     "
0d15d     00          | 	byte	0
0d15e     00 00       | 	alignl
0d160                 | __system__dat_
0d160     00 00 00 00 
0d164     00 00 00 00 | 	byte	$00[8]
0d168     03 00 00 00 
0d16c     00 00 00 00 
0d170     00 00 00 00 
0d174     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d178     00 00 00 00 
      ...             
0d3a8     00 00 00 00 
0d3ac     00 00 00 00 | 	byte	$00[568]
0d3b0     05 00 00 00 
0d3b4     00 00 00 00 
0d3b8     00 00 00 00 
0d3bc     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d3c0     88 D5 00 00 | 	long	@@@__system__dat_ + 1064
0d3c4     90 D5 00 00 | 	long	@@@__system__dat_ + 1072
0d3c8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d3cc     98 D5 00 00 | 	long	@@@__system__dat_ + 1080
0d3d0     A0 D5 00 00 | 	long	@@@__system__dat_ + 1088
0d3d4     00 00 00 00 
0d3d8     00 00 00 00 | 	byte	$00[8]
0d3dc     01 00 00 00 
0d3e0     06 00 00 00 
0d3e4     00 00 00 00 
0d3e8     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d3ec     00 00 00 00 | 	byte	$00, $00, $00, $00
0d3f0     A8 D5 00 00 | 	long	@@@__system__dat_ + 1096
0d3f4     B0 D5 00 00 | 	long	@@@__system__dat_ + 1104
0d3f8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d3fc     B8 D5 00 00 | 	long	@@@__system__dat_ + 1112
0d400     C0 D5 00 00 | 	long	@@@__system__dat_ + 1120
0d404     00 00 00 00 
0d408     00 00 00 00 | 	byte	$00[8]
0d40c     01 00 00 00 
0d410     06 00 00 00 
0d414     00 00 00 00 
0d418     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0d41c     00 00 00 00 | 	byte	$00, $00, $00, $00
0d420     C8 D5 00 00 | 	long	@@@__system__dat_ + 1128
0d424     D0 D5 00 00 | 	long	@@@__system__dat_ + 1136
0d428     00 00 00 00 | 	byte	$00, $00, $00, $00
0d42c     D8 D5 00 00 | 	long	@@@__system__dat_ + 1144
0d430     E0 D5 00 00 | 	long	@@@__system__dat_ + 1152
0d434     00 00 00 00 
      ...             
0d584     00 00 00 00 
0d588     00 00 00 00 | 	byte	$00[344]
0d58c     68 19 00 00 | 	long	@@@__system___tx
0d590     00 00 00 00 | 	byte	$00, $00, $00, $00
0d594     B0 19 00 00 | 	long	@@@__system___rx
0d598     00 00 00 00 | 	byte	$00, $00, $00, $00
0d59c     B8 41 00 00 | 	long	@@@__system___rxtxioctl_0135
0d5a0     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5a4     28 42 00 00 | 	long	@@@__system____dummy_flush_0136
0d5a8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5ac     68 19 00 00 | 	long	@@@__system___tx
0d5b0     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5b4     B0 19 00 00 | 	long	@@@__system___rx
0d5b8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5bc     B8 41 00 00 | 	long	@@@__system___rxtxioctl_0135
0d5c0     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5c4     28 42 00 00 | 	long	@@@__system____dummy_flush_0136
0d5c8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5cc     68 19 00 00 | 	long	@@@__system___tx
0d5d0     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5d4     B0 19 00 00 | 	long	@@@__system___rx
0d5d8     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5dc     B8 41 00 00 | 	long	@@@__system___rxtxioctl_0135
0d5e0     00 00 00 00 | 	byte	$00, $00, $00, $00
0d5e4     28 42 00 00 | 	long	@@@__system____dummy_flush_0136
0d5e8     00 00 00 00 
      ...             
0d814     00 00 00 00 
0d818     00 00 00 00 | 	byte	$00[564]
0d81c                 | 	alignl
0d81c                 | _ff_cc_dat_
0d81c     00 00 00 00 
0d820     00 00       | 	byte	$00[6]
0d822     01 03 05 07 
0d826     09 0E 10 12 
0d82a     14 16 18 1C 
0d82e     1E 00 00 00 | 	byte	$01, $03, $05, $07, $09, $0e, $10, $12, $14, $16, $18, $1c, $1e, $00, $00, $00
0d832     00 00 00 00 
      ...             
0da2a     00 00 00 00 
0da2e     00 00       | 	byte	$00[510]
0da30     43 55 45 41 
0da34     41 41 41 43 
0da38     45 45 45 49 
0da3c     49 49 41 41 | 	byte	$43, $55, $45, $41, $41, $41, $41, $43, $45, $45, $45, $49, $49, $49, $41, $41
0da40     45 92 92 4F 
0da44     4F 4F 55 55 
0da48     59 4F 55 4F 
0da4c     9C 4F 9E 9F | 	byte	$45, $92, $92, $4f, $4f, $4f, $55, $55, $59, $4f, $55, $4f, $9c, $4f, $9e, $9f
0da50     41 49 4F 55 
0da54     A5 A5 A6 A7 
0da58     A8 A9 AA AB 
0da5c     AC AD AE AF | 	byte	$41, $49, $4f, $55, $a5, $a5, $a6, $a7, $a8, $a9, $aa, $ab, $ac, $ad, $ae, $af
0da60     B0 B1 B2 B3 
0da64     B4 41 41 41 
0da68     B8 B9 BA BB 
0da6c     BC BD BE BF | 	byte	$b0, $b1, $b2, $b3, $b4, $41, $41, $41, $b8, $b9, $ba, $bb, $bc, $bd, $be, $bf
0da70     C0 C1 C2 C3 
0da74     C4 C5 41 41 
0da78     C8 C9 CA CB 
0da7c     CC CD CE CF | 	byte	$c0, $c1, $c2, $c3, $c4, $c5, $41, $41, $c8, $c9, $ca, $cb, $cc, $cd, $ce, $cf
0da80     D1 D1 45 45 
0da84     45 49 49 49 
0da88     49 D9 DA DB 
0da8c     DC DD 49 DF | 	byte	$d1, $d1, $45, $45, $45, $49, $49, $49, $49, $d9, $da, $db, $dc, $dd, $49, $df
0da90     4F E1 4F 4F 
0da94     4F 4F E6 E8 
0da98     E8 55 55 55 
0da9c     59 59 EE EF | 	byte	$4f, $e1, $4f, $4f, $4f, $4f, $e6, $e8, $e8, $55, $55, $55, $59, $59, $ee, $ef
0daa0     F0 F1 F2 F3 
0daa4     F4 F5 F6 F7 
0daa8     F8 F9 FA FB 
0daac     FC FD FE FF | 	byte	$f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fe, $ff
0dab0     01 00 04 00 
0dab4     10 00 40 00 
0dab8     00 01 00 02 
0dabc     00 00 01 00 | 	byte	$01, $00, $04, $00, $10, $00, $40, $00, $00, $01, $00, $02, $00, $00, $01, $00
0dac0     02 00 04 00 
0dac4     08 00 10 00 
0dac8     20 00 00 00 
0dacc     07 00 00 00 | 	byte	$02, $00, $04, $00, $08, $00, $10, $00, $20, $00, $00, $00, $07, $00, $00, $00
0dad0     00 00 00 00 
0dad4     00 00 00 00 
0dad8     00 00 00 00 
0dadc     00 00 00 00 
0dae0     00 00 00 00 
0dae4     00 00 00 00 | 	byte	$00[24]
0dae8     28 DB 00 00 | 	long	@@@_ff_cc_dat_ + 780
0daec     30 DB 00 00 | 	long	@@@_ff_cc_dat_ + 788
0daf0     38 DB 00 00 | 	long	@@@_ff_cc_dat_ + 796
0daf4     40 DB 00 00 | 	long	@@@_ff_cc_dat_ + 804
0daf8     48 DB 00 00 | 	long	@@@_ff_cc_dat_ + 812
0dafc     50 DB 00 00 | 	long	@@@_ff_cc_dat_ + 820
0db00     58 DB 00 00 | 	long	@@@_ff_cc_dat_ + 828
0db04     00 00 00 00 | 	byte	$00, $00, $00, $00
0db08     60 DB 00 00 | 	long	@@@_ff_cc_dat_ + 836
0db0c     68 DB 00 00 | 	long	@@@_ff_cc_dat_ + 844
0db10     70 DB 00 00 | 	long	@@@_ff_cc_dat_ + 852
0db14     78 DB 00 00 | 	long	@@@_ff_cc_dat_ + 860
0db18     80 DB 00 00 | 	long	@@@_ff_cc_dat_ + 868
0db1c     88 DB 00 00 | 	long	@@@_ff_cc_dat_ + 876
0db20     90 DB 00 00 | 	long	@@@_ff_cc_dat_ + 884
0db24     98 DB 00 00 | 	long	@@@_ff_cc_dat_ + 892
0db28     00 00 00 00 | 	byte	$00, $00, $00, $00
0db2c     94 C6 00 00 | 	long	@@@_ff_cc_v_open_0531
0db30     00 00 00 00 | 	byte	$00, $00, $00, $00
0db34     00 BF 00 00 | 	long	@@@_ff_cc_v_creat_0485
0db38     00 00 00 00 | 	byte	$00, $00, $00, $00
0db3c     A0 BF 00 00 | 	long	@@@_ff_cc_v_close_0488
0db40     00 00 00 00 | 	byte	$00, $00, $00, $00
0db44     AC C3 00 00 | 	long	@@@_ff_cc_v_read_0513
0db48     00 00 00 00 | 	byte	$00, $00, $00, $00
0db4c     C4 C4 00 00 | 	long	@@@_ff_cc_v_write_0517
0db50     00 00 00 00 | 	byte	$00, $00, $00, $00
0db54     A8 C5 00 00 | 	long	@@@_ff_cc_v_lseek_0521
0db58     00 00 00 00 | 	byte	$00, $00, $00, $00
0db5c     40 C6 00 00 | 	long	@@@_ff_cc_v_ioctl
0db60     00 00 00 00 | 	byte	$00, $00, $00, $00
0db64     E4 BF 00 00 | 	long	@@@_ff_cc_v_opendir_0491
0db68     00 00 00 00 | 	byte	$00, $00, $00, $00
0db6c     5C C0 00 00 | 	long	@@@_ff_cc_v_closedir_0494
0db70     00 00 00 00 | 	byte	$00, $00, $00, $00
0db74     A0 C0 00 00 | 	long	@@@_ff_cc_v_readdir_0497
0db78     00 00 00 00 | 	byte	$00, $00, $00, $00
0db7c     A8 C1 00 00 | 	long	@@@_ff_cc_v_stat_0509
0db80     00 00 00 00 | 	byte	$00, $00, $00, $00
0db84     54 C6 00 00 | 	long	@@@_ff_cc_v_mkdir
0db88     00 00 00 00 | 	byte	$00, $00, $00, $00
0db8c     74 C6 00 00 | 	long	@@@_ff_cc_v_rmdir_0525
0db90     00 00 00 00 | 	byte	$00, $00, $00, $00
0db94     64 C6 00 00 | 	long	@@@_ff_cc_v_remove
0db98     00 00 00 00 | 	byte	$00, $00, $00, $00
0db9c     84 C6 00 00 | 	long	@@@_ff_cc_v_rename_0527
0dba0     C7 00 FC 00 
0dba4     E9 00 E2 00 
0dba8     E4 00 E0 00 
0dbac     E5 00 E7 00 | 	byte	$c7, $00, $fc, $00, $e9, $00, $e2, $00, $e4, $00, $e0, $00, $e5, $00, $e7, $00
0dbb0     EA 00 EB 00 
0dbb4     E8 00 EF 00 
0dbb8     EE 00 EC 00 
0dbbc     C4 00 C5 00 | 	byte	$ea, $00, $eb, $00, $e8, $00, $ef, $00, $ee, $00, $ec, $00, $c4, $00, $c5, $00
0dbc0     C9 00 E6 00 
0dbc4     C6 00 F4 00 
0dbc8     F6 00 F2 00 
0dbcc     FB 00 F9 00 | 	byte	$c9, $00, $e6, $00, $c6, $00, $f4, $00, $f6, $00, $f2, $00, $fb, $00, $f9, $00
0dbd0     FF 00 D6 00 
0dbd4     DC 00 F8 00 
0dbd8     A3 00 D8 00 
0dbdc     D7 00 92 01 | 	byte	$ff, $00, $d6, $00, $dc, $00, $f8, $00, $a3, $00, $d8, $00, $d7, $00, $92, $01
0dbe0     E1 00 ED 00 
0dbe4     F3 00 FA 00 
0dbe8     F1 00 D1 00 
0dbec     AA 00 BA 00 | 	byte	$e1, $00, $ed, $00, $f3, $00, $fa, $00, $f1, $00, $d1, $00, $aa, $00, $ba, $00
0dbf0     BF 00 AE 00 
0dbf4     AC 00 BD 00 
0dbf8     BC 00 A1 00 
0dbfc     AB 00 BB 00 | 	byte	$bf, $00, $ae, $00, $ac, $00, $bd, $00, $bc, $00, $a1, $00, $ab, $00, $bb, $00
0dc00     91 25 92 25 
0dc04     93 25 02 25 
0dc08     24 25 C1 00 
0dc0c     C2 00 C0 00 | 	byte	$91, $25, $92, $25, $93, $25, $02, $25, $24, $25, $c1, $00, $c2, $00, $c0, $00
0dc10     A9 00 63 25 
0dc14     51 25 57 25 
0dc18     5D 25 A2 00 
0dc1c     A5 00 10 25 | 	byte	$a9, $00, $63, $25, $51, $25, $57, $25, $5d, $25, $a2, $00, $a5, $00, $10, $25
0dc20     14 25 34 25 
0dc24     2C 25 1C 25 
0dc28     00 25 3C 25 
0dc2c     E3 00 C3 00 | 	byte	$14, $25, $34, $25, $2c, $25, $1c, $25, $00, $25, $3c, $25, $e3, $00, $c3, $00
0dc30     5A 25 54 25 
0dc34     69 25 66 25 
0dc38     60 25 50 25 
0dc3c     6C 25 A4 00 | 	byte	$5a, $25, $54, $25, $69, $25, $66, $25, $60, $25, $50, $25, $6c, $25, $a4, $00
0dc40     F0 00 D0 00 
0dc44     CA 00 CB 00 
0dc48     C8 00 31 01 
0dc4c     CD 00 CE 00 | 	byte	$f0, $00, $d0, $00, $ca, $00, $cb, $00, $c8, $00, $31, $01, $cd, $00, $ce, $00
0dc50     CF 00 18 25 
0dc54     0C 25 88 25 
0dc58     84 25 A6 00 
0dc5c     CC 00 80 25 | 	byte	$cf, $00, $18, $25, $0c, $25, $88, $25, $84, $25, $a6, $00, $cc, $00, $80, $25
0dc60     D3 00 DF 00 
0dc64     D4 00 D2 00 
0dc68     F5 00 D5 00 
0dc6c     B5 00 FE 00 | 	byte	$d3, $00, $df, $00, $d4, $00, $d2, $00, $f5, $00, $d5, $00, $b5, $00, $fe, $00
0dc70     DE 00 DA 00 
0dc74     DB 00 D9 00 
0dc78     FD 00 DD 00 
0dc7c     AF 00 B4 00 | 	byte	$de, $00, $da, $00, $db, $00, $d9, $00, $fd, $00, $dd, $00, $af, $00, $b4, $00
0dc80     AD 00 B1 00 
0dc84     17 20 BE 00 
0dc88     B6 00 A7 00 
0dc8c     F7 00 B8 00 | 	byte	$ad, $00, $b1, $00, $17, $20, $be, $00, $b6, $00, $a7, $00, $f7, $00, $b8, $00
0dc90     B0 00 A8 00 
0dc94     B7 00 B9 00 
0dc98     B3 00 B2 00 
0dc9c     A0 25 A0 00 | 	byte	$b0, $00, $a8, $00, $b7, $00, $b9, $00, $b3, $00, $b2, $00, $a0, $25, $a0, $00
0dca0     61 00 1A 03 
0dca4     E0 00 17 03 
0dca8     F8 00 07 03 
0dcac     FF 00 01 00 | 	byte	$61, $00, $1a, $03, $e0, $00, $17, $03, $f8, $00, $07, $03, $ff, $00, $01, $00
0dcb0     78 01 00 01 
0dcb4     30 01 32 01 
0dcb8     06 01 39 01 
0dcbc     10 01 4A 01 | 	byte	$78, $01, $00, $01, $30, $01, $32, $01, $06, $01, $39, $01, $10, $01, $4a, $01
0dcc0     2E 01 79 01 
0dcc4     06 01 80 01 
0dcc8     4D 00 43 02 
0dccc     81 01 82 01 | 	byte	$2e, $01, $79, $01, $06, $01, $80, $01, $4d, $00, $43, $02, $81, $01, $82, $01
0dcd0     82 01 84 01 
0dcd4     84 01 86 01 
0dcd8     87 01 87 01 
0dcdc     89 01 8A 01 | 	byte	$82, $01, $84, $01, $84, $01, $86, $01, $87, $01, $87, $01, $89, $01, $8a, $01
0dce0     8B 01 8B 01 
0dce4     8D 01 8E 01 
0dce8     8F 01 90 01 
0dcec     91 01 91 01 | 	byte	$8b, $01, $8b, $01, $8d, $01, $8e, $01, $8f, $01, $90, $01, $91, $01, $91, $01
0dcf0     93 01 94 01 
0dcf4     F6 01 96 01 
0dcf8     97 01 98 01 
0dcfc     98 01 3D 02 | 	byte	$93, $01, $94, $01, $f6, $01, $96, $01, $97, $01, $98, $01, $98, $01, $3d, $02
0dd00     9B 01 9C 01 
0dd04     9D 01 20 02 
0dd08     9F 01 A0 01 
0dd0c     A0 01 A2 01 | 	byte	$9b, $01, $9c, $01, $9d, $01, $20, $02, $9f, $01, $a0, $01, $a0, $01, $a2, $01
0dd10     A2 01 A4 01 
0dd14     A4 01 A6 01 
0dd18     A7 01 A7 01 
0dd1c     A9 01 AA 01 | 	byte	$a2, $01, $a4, $01, $a4, $01, $a6, $01, $a7, $01, $a7, $01, $a9, $01, $aa, $01
0dd20     AB 01 AC 01 
0dd24     AC 01 AE 01 
0dd28     AF 01 AF 01 
0dd2c     B1 01 B2 01 | 	byte	$ab, $01, $ac, $01, $ac, $01, $ae, $01, $af, $01, $af, $01, $b1, $01, $b2, $01
0dd30     B3 01 B3 01 
0dd34     B5 01 B5 01 
0dd38     B7 01 B8 01 
0dd3c     B8 01 BA 01 | 	byte	$b3, $01, $b3, $01, $b5, $01, $b5, $01, $b7, $01, $b8, $01, $b8, $01, $ba, $01
0dd40     BB 01 BC 01 
0dd44     BC 01 BE 01 
0dd48     F7 01 C0 01 
0dd4c     C1 01 C2 01 | 	byte	$bb, $01, $bc, $01, $bc, $01, $be, $01, $f7, $01, $c0, $01, $c1, $01, $c2, $01
0dd50     C3 01 C4 01 
0dd54     C5 01 C4 01 
0dd58     C7 01 C8 01 
0dd5c     C7 01 CA 01 | 	byte	$c3, $01, $c4, $01, $c5, $01, $c4, $01, $c7, $01, $c8, $01, $c7, $01, $ca, $01
0dd60     CB 01 CA 01 
0dd64     CD 01 10 01 
0dd68     DD 01 01 00 
0dd6c     8E 01 DE 01 | 	byte	$cb, $01, $ca, $01, $cd, $01, $10, $01, $dd, $01, $01, $00, $8e, $01, $de, $01
0dd70     12 01 F3 01 
0dd74     03 00 F1 01 
0dd78     F4 01 F4 01 
0dd7c     F8 01 28 01 | 	byte	$12, $01, $f3, $01, $03, $00, $f1, $01, $f4, $01, $f4, $01, $f8, $01, $28, $01
0dd80     22 02 12 01 
0dd84     3A 02 09 00 
0dd88     65 2C 3B 02 
0dd8c     3B 02 3D 02 | 	byte	$22, $02, $12, $01, $3a, $02, $09, $00, $65, $2c, $3b, $02, $3b, $02, $3d, $02
0dd90     66 2C 3F 02 
0dd94     40 02 41 02 
0dd98     41 02 46 02 
0dd9c     0A 01 53 02 | 	byte	$66, $2c, $3f, $02, $40, $02, $41, $02, $41, $02, $46, $02, $0a, $01, $53, $02
0dda0     40 00 81 01 
0dda4     86 01 55 02 
0dda8     89 01 8A 01 
0ddac     58 02 8F 01 | 	byte	$40, $00, $81, $01, $86, $01, $55, $02, $89, $01, $8a, $01, $58, $02, $8f, $01
0ddb0     5A 02 90 01 
0ddb4     5C 02 5D 02 
0ddb8     5E 02 5F 02 
0ddbc     93 01 61 02 | 	byte	$5a, $02, $90, $01, $5c, $02, $5d, $02, $5e, $02, $5f, $02, $93, $01, $61, $02
0ddc0     62 02 94 01 
0ddc4     64 02 65 02 
0ddc8     66 02 67 02 
0ddcc     97 01 96 01 | 	byte	$62, $02, $94, $01, $64, $02, $65, $02, $66, $02, $67, $02, $97, $01, $96, $01
0ddd0     6A 02 62 2C 
0ddd4     6C 02 6D 02 
0ddd8     6E 02 9C 01 
0dddc     70 02 71 02 | 	byte	$6a, $02, $62, $2c, $6c, $02, $6d, $02, $6e, $02, $9c, $01, $70, $02, $71, $02
0dde0     9D 01 73 02 
0dde4     74 02 9F 01 
0dde8     76 02 77 02 
0ddec     78 02 79 02 | 	byte	$9d, $01, $73, $02, $74, $02, $9f, $01, $76, $02, $77, $02, $78, $02, $79, $02
0ddf0     7A 02 7B 02 
0ddf4     7C 02 64 2C 
0ddf8     7E 02 7F 02 
0ddfc     A6 01 81 02 | 	byte	$7a, $02, $7b, $02, $7c, $02, $64, $2c, $7e, $02, $7f, $02, $a6, $01, $81, $02
0de00     82 02 A9 01 
0de04     84 02 85 02 
0de08     86 02 87 02 
0de0c     AE 01 44 02 | 	byte	$82, $02, $a9, $01, $84, $02, $85, $02, $86, $02, $87, $02, $ae, $01, $44, $02
0de10     B1 01 B2 01 
0de14     45 02 8D 02 
0de18     8E 02 8F 02 
0de1c     90 02 91 02 | 	byte	$b1, $01, $b2, $01, $45, $02, $8d, $02, $8e, $02, $8f, $02, $90, $02, $91, $02
0de20     B7 01 7B 03 
0de24     03 00 FD 03 
0de28     FE 03 FF 03 
0de2c     AC 03 04 00 | 	byte	$b7, $01, $7b, $03, $03, $00, $fd, $03, $fe, $03, $ff, $03, $ac, $03, $04, $00
0de30     86 03 88 03 
0de34     89 03 8A 03 
0de38     B1 03 11 03 
0de3c     C2 03 02 00 | 	byte	$86, $03, $88, $03, $89, $03, $8a, $03, $b1, $03, $11, $03, $c2, $03, $02, $00
0de40     A3 03 A3 03 
0de44     C4 03 08 03 
0de48     CC 03 03 00 
0de4c     8C 03 8E 03 | 	byte	$a3, $03, $a3, $03, $c4, $03, $08, $03, $cc, $03, $03, $00, $8c, $03, $8e, $03
0de50     8F 03 D8 03 
0de54     18 01 F2 03 
0de58     0A 00 F9 03 
0de5c     F3 03 F4 03 | 	byte	$8f, $03, $d8, $03, $18, $01, $f2, $03, $0a, $00, $f9, $03, $f3, $03, $f4, $03
0de60     F5 03 F6 03 
0de64     F7 03 F7 03 
0de68     F9 03 FA 03 
0de6c     FA 03 30 04 | 	byte	$f5, $03, $f6, $03, $f7, $03, $f7, $03, $f9, $03, $fa, $03, $fa, $03, $30, $04
0de70     20 03 50 04 
0de74     10 07 60 04 
0de78     22 01 8A 04 
0de7c     36 01 C1 04 | 	byte	$20, $03, $50, $04, $10, $07, $60, $04, $22, $01, $8a, $04, $36, $01, $c1, $04
0de80     0E 01 CF 04 
0de84     01 00 C0 04 
0de88     D0 04 44 01 
0de8c     61 05 26 04 | 	byte	$0e, $01, $cf, $04, $01, $00, $c0, $04, $d0, $04, $44, $01, $61, $05, $26, $04
0de90     00 00 7D 1D 
0de94     01 00 63 2C 
0de98     00 1E 96 01 
0de9c     A0 1E 5A 01 | 	byte	$00, $00, $7d, $1d, $01, $00, $63, $2c, $00, $1e, $96, $01, $a0, $1e, $5a, $01
0dea0     00 1F 08 06 
0dea4     10 1F 06 06 
0dea8     20 1F 08 06 
0deac     30 1F 08 06 | 	byte	$00, $1f, $08, $06, $10, $1f, $06, $06, $20, $1f, $08, $06, $30, $1f, $08, $06
0deb0     40 1F 06 06 
0deb4     51 1F 07 00 
0deb8     59 1F 52 1F 
0debc     5B 1F 54 1F | 	byte	$40, $1f, $06, $06, $51, $1f, $07, $00, $59, $1f, $52, $1f, $5b, $1f, $54, $1f
0dec0     5D 1F 56 1F 
0dec4     5F 1F 60 1F 
0dec8     08 06 70 1F 
0decc     0E 00 BA 1F | 	byte	$5d, $1f, $56, $1f, $5f, $1f, $60, $1f, $08, $06, $70, $1f, $0e, $00, $ba, $1f
0ded0     BB 1F C8 1F 
0ded4     C9 1F CA 1F 
0ded8     CB 1F DA 1F 
0dedc     DB 1F F8 1F | 	byte	$bb, $1f, $c8, $1f, $c9, $1f, $ca, $1f, $cb, $1f, $da, $1f, $db, $1f, $f8, $1f
0dee0     F9 1F EA 1F 
0dee4     EB 1F FA 1F 
0dee8     FB 1F 80 1F 
0deec     08 06 90 1F | 	byte	$f9, $1f, $ea, $1f, $eb, $1f, $fa, $1f, $fb, $1f, $80, $1f, $08, $06, $90, $1f
0def0     08 06 A0 1F 
0def4     08 06 B0 1F 
0def8     04 00 B8 1F 
0defc     B9 1F B2 1F | 	byte	$08, $06, $a0, $1f, $08, $06, $b0, $1f, $04, $00, $b8, $1f, $b9, $1f, $b2, $1f
0df00     BC 1F CC 1F 
0df04     01 00 C3 1F 
0df08     D0 1F 02 06 
0df0c     E0 1F 02 06 | 	byte	$bc, $1f, $cc, $1f, $01, $00, $c3, $1f, $d0, $1f, $02, $06, $e0, $1f, $02, $06
0df10     E5 1F 01 00 
0df14     EC 1F F3 1F 
0df18     01 00 FC 1F 
0df1c     4E 21 01 00 | 	byte	$e5, $1f, $01, $00, $ec, $1f, $f3, $1f, $01, $00, $fc, $1f, $4e, $21, $01, $00
0df20     32 21 70 21 
0df24     10 02 84 21 
0df28     01 00 83 21 
0df2c     D0 24 1A 05 | 	byte	$32, $21, $70, $21, $10, $02, $84, $21, $01, $00, $83, $21, $d0, $24, $1a, $05
0df30     30 2C 2F 04 
0df34     60 2C 02 01 
0df38     67 2C 06 01 
0df3c     75 2C 02 01 | 	byte	$30, $2c, $2f, $04, $60, $2c, $02, $01, $67, $2c, $06, $01, $75, $2c, $02, $01
0df40     80 2C 64 01 
0df44     00 2D 26 08 
0df48     41 FF 1A 03 
0df4c     00 00 00 00 | 	byte	$80, $2c, $64, $01, $00, $2d, $26, $08, $41, $ff, $1a, $03, $00, $00, $00, $00
0df50     00 00 00 00 
0df54     00 00 00 00 
0df58     00 00 00 00 
0df5c     00 00 00 00 | 	byte	$00[16]
0df60     01 00 00 00 | 	byte	$01, $00, $00, $00
0df64                 | __heap_base
0df64     00 00 00 00 
      ...             
0ef64     00 00 00 00 
0ef68     00 00 00 00 | 	long	0[1026]
0ef6c                 | objmem
0ef6c     00 00 00 00 
      ...             
0f000     00 00 00 00 
0f004     00 00 00 00 | 	long	0[39]
0f008                 | stackspace
0f008     00 00 00 00 | 	long	0[1]
0f00c 0fc             | 	org	COG_BSS_START
0f00c 0fc             | _var01
0f00c 0fc             | 	res	1
0f00c 0fd             | _var02
0f00c 0fd             | 	res	1
0f00c 0fe             | _var03
0f00c 0fe             | 	res	1
0f00c 0ff             | _var04
0f00c 0ff             | 	res	1
0f00c 100             | _var05
0f00c 100             | 	res	1
0f00c 101             | _var06
0f00c 101             | 	res	1
0f00c 102             | _var07
0f00c 102             | 	res	1
0f00c 103             | _var08
0f00c 103             | 	res	1
0f00c 104             | _var09
0f00c 104             | 	res	1
0f00c 105             | _var10
0f00c 105             | 	res	1
0f00c 106             | _var11
0f00c 106             | 	res	1
0f00c 107             | arg01
0f00c 107             | 	res	1
0f00c 108             | arg02
0f00c 108             | 	res	1
0f00c 109             | arg03
0f00c 109             | 	res	1
0f00c 10a             | arg04
0f00c 10a             | 	res	1
0f00c 10b             | arg05
0f00c 10b             | 	res	1
0f00c 10c             | local01
0f00c 10c             | 	res	1
0f00c 10d             | local02
0f00c 10d             | 	res	1
0f00c 10e             | local03
0f00c 10e             | 	res	1
0f00c 10f             | local04
0f00c 10f             | 	res	1
0f00c 110             | local05
0f00c 110             | 	res	1
0f00c 111             | local06
0f00c 111             | 	res	1
0f00c 112             | local07
0f00c 112             | 	res	1
0f00c 113             | local08
0f00c 113             | 	res	1
0f00c 114             | local09
0f00c 114             | 	res	1
0f00c 115             | local10
0f00c 115             | 	res	1
0f00c 116             | local11
0f00c 116             | 	res	1
0f00c 117             | local12
0f00c 117             | 	res	1
0f00c 118             | local13
0f00c 118             | 	res	1
0f00c 119             | local14
0f00c 119             | 	res	1
0f00c 11a             | local15
0f00c 11a             | 	res	1
0f00c 11b             | local16
0f00c 11b             | 	res	1
0f00c 11c             | local17
0f00c 11c             | 	res	1
0f00c 11d             | local18
0f00c 11d             | 	res	1
0f00c 11e             | local19
0f00c 11e             | 	res	1
0f00c 11f             | local20
0f00c 11f             | 	res	1
0f00c 120             | local21
0f00c 120             | 	res	1
0f00c 121             | local22
0f00c 121             | 	res	1
0f00c 122             | local23
0f00c 122             | 	res	1
0f00c 123             | local24
0f00c 123             | 	res	1
0f00c 124             | local25
0f00c 124             | 	res	1
0f00c 125             | local26
0f00c 125             | 	res	1
0f00c 126             | local27
0f00c 126             | 	res	1
0f00c 127             | local28
0f00c 127             | 	res	1
0f00c 128             | local29
0f00c 128             | 	res	1
0f00c 129             | local30
0f00c 129             | 	res	1
0f00c 12a             | local31
0f00c 12a             | 	res	1
0f00c 12b             | local32
0f00c 12b             | 	res	1
0f00c 12c             | local33
0f00c 12c             | 	res	1
0f00c 12d             | local34
0f00c 12d             | 	res	1
0f00c 12e             | local35
0f00c 12e             | 	res	1
0f00c 12f             | local36
0f00c 12f             | 	res	1
0f00c 130             | local37
0f00c 130             | 	res	1
0f00c 131             | local38
0f00c 131             | 	res	1
0f00c 132             | local39
0f00c 132             | 	res	1
0f00c 133             | local40
0f00c 133             | 	res	1
0f00c 134             | local41
0f00c 134             | 	res	1
0f00c 135             | local42
0f00c 135             | 	res	1
0f00c 136             | muldiva_
0f00c 136             | 	res	1
0f00c 137             | muldivb_
0f00c 137             | 	res	1
0f00c 138             | 	fit	480
0f00c 138             | 
