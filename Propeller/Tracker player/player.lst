00000                 | 
00000                 | #line 1 "D:/programowanie/20211226-P2-retromachine/Propeller/Tracker player/player.p2asm"
00000                 | con
00000                 | 	_clkfreq = 319215686
00000                 | dat
00000 000 00 00 00 00 | 	nop
00004 001 01 EC 63 FD | 	cogid	pa
00008 002 02 00 00 FF 
0000c 003 04 EC E7 FC | 	coginit	pa,##$404
00010                 | 	orgh	$10
00010     00 00 00 00 | 	long	0	'reserved
00014     00 00 00 00 | 	long	0 ' clock frequency: will default to 319215798
00018     00 00 00 00 | 	long	0 ' clock mode: will default to $1cb2dfb
0001c     00 00 00 00 
      ...             
003f8     00 00 00 00 
003fc     00 00 00 00 | 	orgh	$400
00400     00 2A 06 06 |  _ret_	mov	result1, #0
00404 000             | 	org	0
00404 000             | entry
00404 000 00 F0 0F F2 | 	cmp	ptra, #0 wz
00408 001 0C 02 90 5D |  if_ne	jmp	#spininit
0040c 002 07 F1 03 F6 | 	mov	ptra, objptr
00410 003 04 00 00 FF 
00414 004 14 F1 07 F1 | 	add	ptra, ##2324
00418 005 14 EC 0F FB | 	rdlong	pa, #20 wz
0041c 006 E4 01 90 5D |  if_ne	jmp	#skip_clock_set_
00420 007 00 00 64 FD | 	hubset	#0
00424 008 96 E5 80 FF 
00428 009 00 F0 67 FD | 	hubset	##30092792
0042c 00a 86 01 80 FF 
00430 00b 1F 80 66 FD | 	waitx	##200000
00434 00c 96 E5 00 FF 
00438 00d FB ED 07 F6 | 	mov	pa, ##30092795
0043c 00e 00 EC 63 FD | 	hubset	pa
00440 00f 18 EC 67 FC | 	wrlong	pa, #24
00444 010 6C 83 89 FF 
00448 011 14 6C 6D FC | 	wrlong	##319215798, #20
0044c 012 B4 01 90 FD | 	jmp	#skip_clock_set_
00450 013 00 00 00 00 
      ...             
005fc 07e 00 00 00 00 
00600 07f 00 00 00 00 | 	orgf	128
00604 080             | skip_clock_set_
00604 080 8C 08 A0 FD | 	call	#_program
00608 081             | cogexit
00608 081 38 01 80 FF 
0060c 082 1F 00 66 FD | 	waitx	##160000
00610 083 01 5C 62 FD | 	cogid	arg01
00614 084 03 5C 62 FD | 	cogstop	arg01
00618 085             | spininit
00618 085 00 0F 06 FB | 	rdlong	objptr, ptra
0061c 086 04 F0 07 F1 | 	add	ptra, #4
00620 087 00 2B 06 FB | 	rdlong	result1, ptra
00624 088 04 F0 07 F1 | 	add	ptra, #4
00628 089 00 5D 06 FB | 	rdlong	arg01, ptra
0062c 08a 04 F0 07 F1 | 	add	ptra, #4
00630 08b 00 5F 06 FB | 	rdlong	arg02, ptra
00634 08c 04 F0 07 F1 | 	add	ptra, #4
00638 08d 00 61 06 FB | 	rdlong	arg03, ptra
0063c 08e 04 F0 07 F1 | 	add	ptra, #4
00640 08f 00 63 06 FB | 	rdlong	arg04, ptra
00644 090 10 F0 87 F1 | 	sub	ptra, #16
00648 091 2D 2A 62 FD | 	call	result1
0064c 092 B8 FF 9F FD | 	jmp	#cogexit
00650 093             | FCACHE_LOAD_
00650 093 2B 3E 61 FD |     pop	fcache_tmpb_
00654 094 F6 3F 01 F1 |     add	fcache_tmpb_, pa
00658 095 2A 3E 61 FD |     push	fcache_tmpb_
0065c 096 F6 3F 81 F1 |     sub	fcache_tmpb_, pa
00660 097 02 EC 47 F0 |     shr	pa, #2
00664 098 00 EC 8F F9 |     altd	pa
00668 099 9E 00 00 F6 |     mov	 0-0, ret_instr_
0066c 09a 01 EC 87 F1 |     sub	pa, #1
00670 09b 28 EC 63 FD |     setq	pa
00674 09c 9F 00 00 FB |     rdlong	$0, fcache_tmpb_
00678 09d 00 00 80 FD |     jmp	#\$0 ' jmp to cache
0067c 09e             | ret_instr_
0067c 09e 2D 00 64 FD |     ret
00680 09f             | fcache_tmpb_
00680 09f 00 00 00 00 |     long 0
00684 0a0             | builtin_bytefill_
00684 0a0 01 60 56 F0 |         shr	arg03, #1 wc
00688 0a1 2E 5F 42 CC |  if_c   wrbyte	arg02, arg01
0068c 0a2 01 5C 06 C1 |  if_c   add	arg01, #1
00690 0a3 00 5E FE F9 |         movbyts	arg02, #0
00694 0a4             | builtin_wordfill_
00694 0a4 01 60 56 F0 |         shr	arg03, #1 wc
00698 0a5 2E 5F 52 CC |  if_c   wrword	arg02, arg01
0069c 0a6 02 5C 06 C1 |  if_c   add	arg01, #2
006a0 0a7 2F 5F 2A F9 |         setword	arg02, arg02, #1
006a4 0a8             | builtin_longfill_
006a4 0a8 2E 01 88 FC |         wrfast	#0,arg01
006a8 0a9 00 60 0E F2 |         cmp	arg03, #0 wz
006ac 0aa 30 03 D8 5C |  if_nz  rep	#1, arg03
006b0 0ab 17 5E 62 5D |  if_nz  wflong	arg02
006b4 0ac 2D 00 64 FD |         ret
006b8 0ad             | COUNT_
006b8 0ad 00 00 00 00 |     long 0
006bc 0ae             | RETADDR_
006bc 0ae 00 00 00 00 |     long 0
006c0 0af             | fp
006c0 0af 00 00 00 00 |     long 0
006c4 0b0             | pushregs_
006c4 0b0 2B EC 63 FD |     pop  pa
006c8 0b1 2B 5C 61 FD |     pop  RETADDR_
006cc 0b2 04 5A 95 FB |     tjz  COUNT_, #pushregs_done_
006d0 0b3 01 5A 85 F1 |     sub  COUNT_, #1
006d4 0b4 28 5A 61 FD |     setq COUNT_
006d8 0b5 00 6B 66 FC |     wrlong local01, ptra
006dc 0b6 01 5A 05 F1 |     add  COUNT_, #1
006e0 0b7             | pushregs_done_
006e0 0b7 02 5A 65 F0 |     shl  COUNT_, #2
006e4 0b8 AD F0 03 F1 |     add  ptra, COUNT_
006e8 0b9 02 5A 45 F0 |     shr  COUNT_, #2
006ec 0ba 28 04 64 FD |     setq #2 ' push 3 registers starting at COUNT_
006f0 0bb 00 5B 65 FC |     wrlong COUNT_, ptra
006f4 0bc 0C F0 07 F1 |     add    ptra, #12
006f8 0bd F8 5F 01 F6 |     mov    fp, ptra
006fc 0be 2C EC 63 FD |     jmp  pa
00700 0bf             |  popregs_
00700 0bf 2B EC 63 FD |     pop    pa
00704 0c0 0C F0 87 F1 |     sub    ptra, #12
00708 0c1 28 04 64 FD |     setq   #2
0070c 0c2 00 5B 05 FB |     rdlong COUNT_, ptra
00710 0c3 06 5A 95 FB |     tjz    COUNT_, #popregs__ret
00714 0c4 02 5A 65 F0 |     shl    COUNT_, #2
00718 0c5 AD F0 83 F1 |     sub    ptra, COUNT_
0071c 0c6 02 5A 45 F0 |     shr    COUNT_, #2
00720 0c7 01 5A 85 F1 |     sub    COUNT_, #1
00724 0c8 28 5A 61 FD |     setq   COUNT_
00728 0c9 00 6B 06 FB |     rdlong local01, ptra
0072c 0ca             | popregs__ret
0072c 0ca 2A 5C 61 FD |     push   RETADDR_
00730 0cb 2C EC 63 FD |     jmp    pa
00734 0cc             | 
00734 0cc             | unsdivide_
00734 0cc 28 00 64 FD |        setq    #0
00738 0cd 86 0B 13 FD |        qdiv    muldiva_, muldivb_
0073c 0ce 18 0C 63 FD |        getqx   muldivb_
00740 0cf 19 0A 63 0D |  _ret_ getqy   muldiva_
00744 0d0             | 
00744 0d0             | divide_
00744 0d0 85 0B 53 F6 |        abs     muldiva_,muldiva_     wc       'abs(x)
00748 0d1 03 0C 86 F5 |        muxc    itmp2_,#%11                    'store sign of x
0074c 0d2 86 0D 5B F6 |        abs     muldivb_,muldivb_     wcz      'abs(y)
00750 0d3 02 0C 66 C5 |  if_c  xor     itmp2_,#%10                    'store sign of y
00754 0d4 2D 00 64 AD |  if_z  ret
00758 0d5 D8 FF BF FD |        call    #unsdivide_
0075c 0d6 01 0C D6 F7 |        test    itmp2_,#1        wc       'restore sign, remainder
00760 0d7 85 0B 83 F6 |        negc    muldiva_,muldiva_ 
00764 0d8 02 0C D6 F7 |        test    itmp2_,#%10      wc       'restore sign, division result
00768 0d9 86 0D 83 06 |  _ret_ negc    muldivb_,muldivb_
0076c 0da             | __pc long 0
0076c 0da 00 00 00 00 
00770 0db             | __setjmp
00770 0db 2B B4 61 FD |     pop __pc
00774 0dc 00 2A 06 F6 |     mov result1, #0
00778 0dd 00 2C 06 F6 |     mov result2, #0
0077c 0de 2E 07 02 F6 |     mov abortchain, arg01
00780 0df 2E 5F 61 FC |     wrlong fp, arg01
00784 0e0 04 5C 06 F1 |     add arg01, #4
00788 0e1 2E F1 63 FC |     wrlong ptra, arg01
0078c 0e2 04 5C 06 F1 |     add arg01, #4
00790 0e3 2E 0F 62 FC |     wrlong objptr, arg01
00794 0e4 04 5C 06 F1 |     add arg01, #4
00798 0e5 2E B5 61 FC |     wrlong __pc, arg01
0079c 0e6 2C B4 61 FD |     jmp __pc
007a0 0e7             | __unwind_pc long 0
007a0 0e7 00 00 00 00 
007a4 0e8             | __unwind_stack
007a4 0e8 2B CE 61 FD |    pop  __unwind_pc
007a8 0e9             | __unwind_loop
007a8 0e9 2F 5D 0A F2 |    cmp  arg01, arg02 wz
007ac 0ea 10 00 90 AD |   if_z jmp #__unwind_stack_ret
007b0 0eb 2E F1 03 F6 |    mov   ptra, arg01
007b4 0ec 48 FF BF FD |    call  #popregs_
007b8 0ed AF 5C 02 F6 |    mov   arg01, fp
007bc 0ee E8 FF 9F FD |    jmp   #__unwind_loop
007c0 0ef             | __unwind_stack_ret
007c0 0ef 2C CE 61 FD |    jmp  __unwind_pc
007c4 0f0             | __longjmp
007c4 0f0 2B B4 61 FD |     pop __pc
007c8 0f1 00 5C 0E F2 |     cmp    arg01, #0 wz
007cc 0f2 30 00 90 AD |  if_z jmp #nocatch
007d0 0f3 2F 2B 02 F6 |     mov result1, arg02
007d4 0f4 01 2C 06 F6 |     mov result2, #1
007d8 0f5 2E 5F 02 FB |     rdlong arg02, arg01
007dc 0f6 04 5C 06 F1 |     add arg01, #4
007e0 0f7 2E F1 03 FB |     rdlong ptra, arg01
007e4 0f8 04 5C 06 F1 |     add arg01, #4
007e8 0f9 2E 0F 02 FB |     rdlong objptr, arg01
007ec 0fa 04 5C 06 F1 |     add arg01, #4
007f0 0fb 2E B5 01 FB |     rdlong __pc, arg01
007f4 0fc AF 5C 02 F6 |     mov arg01, fp
007f8 0fd A8 FF BF FD |     call #__unwind_stack
007fc 0fe             | __longjmp_ret
007fc 0fe 2C B4 61 FD |     jmp  __pc
00800 0ff             | nocatch
00800 0ff 00 60 0E F2 |     cmp arg03, #0 wz
00804 100 00 FE 9F AD |  if_z jmp #cogexit
00808 101 F0 FF 9F FD |     jmp #__longjmp_ret
0080c 102             | 
0080c 102             | __heap_ptr
0080c 102 6C 55 02 00 | 	long	@__heap_base
00810 103             | abortchain
00810 103 00 00 00 00 | 	long	0
00814 104             | entryptr__
00814 104 04 04 00 00 | 	long	@entry
00818 105             | itmp1_
00818 105 00 00 00 00 | 	long	0
0081c 106             | itmp2_
0081c 106 00 00 00 00 | 	long	0
00820 107             | objptr
00820 107 74 65 02 00 | 	long	@objmem
00824 108             | ptr___struct___bas_wrap_sender_tx_
00824 108 EC 80 00 00 | 	long	@__struct___bas_wrap_sender_tx
00828 109             | ptr___struct__s_vfs_file_t_putchar_
00828 109 34 80 00 00 | 	long	@__struct__s_vfs_file_t_putchar
0082c 10a             | ptr___system__dat__
0082c 10a 0C 53 02 00 | 	long	@__system__dat_
00830 10b             | ptr__audio012_spin2_dat__
00830 10b 20 4C 02 00 | 	long	@_audio012_spin2_dat_
00834 10c             | ptr__dat__
00834 10c 18 82 00 00 | 	long	@_dat_
00838 10d             | ptr__hng030rm_spin2_dat__
00838 10d 98 16 02 00 | 	long	@_hng030rm_spin2_dat_
0083c 10e             | ptr__hng030rm_spin2_putchar_
0083c 10e 30 25 00 00 | 	long	@_hng030rm_spin2_putchar
00840 10f             | ptr__hng030rm_spin2_putpixel1_
00840 10f 04 20 00 00 | 	long	@_hng030rm_spin2_putpixel1
00844 110             | ptr__hng030rm_spin2_putpixel2_
00844 110 EC 20 00 00 | 	long	@_hng030rm_spin2_putpixel2
00848 111             | ptr__hng030rm_spin2_putpixel4_
00848 111 C4 21 00 00 | 	long	@_hng030rm_spin2_putpixel4
0084c 112             | ptr__hng030rm_spin2_putpixel8_
0084c 112 9C 22 00 00 | 	long	@_hng030rm_spin2_putpixel8
00850 113             | ptr__retrocog_spin2_serialcog_
00850 113 2C 34 00 00 | 	long	@_retrocog_spin2_serialcog
00854 114             | ptr__trackerplayer_spin2_dat__
00854 114 FC 3A 02 00 | 	long	@_trackerplayer_spin2_dat_
00858 115             | result1
00858 115 00 00 00 00 | 	long	0
0085c 116             | result2
0085c 116 00 00 00 00 | 	long	0
00860 117             | result3
00860 117 00 00 00 00 | 	long	0
00864 118             | COG_BSS_START
00864 118             | 	fit	480
00864                 | 	orgh
00864                 | hubentry
00864                 | 
00864                 | ' 
00864                 | ' function addr(byref v as any)
00864                 | _addr
00864     00 5A 05 F6 | 	mov	COUNT_, #0
00868     B0 00 A0 FD | 	call	#pushregs_
0086c     08 F0 07 F1 | 	add	ptra, #8
00870     04 5E 05 F1 | 	add	fp, #4
00874     AF 5C 62 FC | 	wrlong	arg01, fp
00878                 | ' 
00878                 | ' return(cast(ulong,@v))
00878     2E 2B 02 F6 | 	mov	result1, arg01
0087c     04 5E 85 F1 | 	sub	fp, #4
00880     AF F0 03 F6 | 	mov	ptra, fp
00884     BF 00 A0 FD | 	call	#popregs_
00888                 | _addr_ret
00888     2D 00 64 FD | 	ret
0088c                 | 
0088c                 | _program
0088c     3B 5A 05 F6 | 	mov	COUNT_, #59
00890     B0 00 A0 FD | 	call	#pushregs_
00894     EC 0E 06 F1 | 	add	objptr, #236
00898                 | ' 
00898                 | ' cog:=cogspin(16,serialcog(),@serialstack)
00898     07 6B 02 F6 | 	mov	local01, objptr
0089c     01 00 00 FF 
008a0     40 0F 06 F1 | 	add	objptr, ##832
008a4     07 6D 02 F6 | 	mov	local02, objptr
008a8     36 6B 62 FC | 	wrlong	local01, local02
008ac     04 6C 06 F1 | 	add	local02, #4
008b0     36 27 62 FC | 	wrlong	ptr__retrocog_spin2_serialcog_, local02
008b4     10 5C 06 F6 | 	mov	arg01, #16
008b8     28 0E 62 FD | 	setq	objptr
008bc     04 5D F2 FC | 	coginit	arg01, entryptr__ wc
008c0     01 5C 66 C6 |  if_b	neg	arg01, #1
008c4     2E 2B 02 F6 | 	mov	result1, arg01
008c8                 | ' return cog
008c8     00 0F 06 F1 | 	add	objptr, #256
008cc     07 2B 62 FC | 	wrlong	result1, objptr
008d0                 | ' c=rm.start()
008d0                 | ' return c
008d0     40 6E 06 F6 | 	mov	local03, #64
008d4     02 00 00 FF 
008d8     00 0F 86 F1 | 	sub	objptr, ##1280
008dc     07 71 02 F6 | 	mov	local04, objptr
008e0                 | ' 
008e0                 | ' ' initialize pointers and variables
008e0                 | ' 
008e0                 | ' border_ptr:=@bordercolor
008e0     24 0E 86 F1 | 	sub	objptr, #36
008e4     07 71 62 FC | 	wrlong	local04, objptr
008e8     08 00 00 FF 
008ec     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##4096
008f0                 | ' font_ptr:=@st_font
008f0     04 0E 86 F1 | 	sub	objptr, #4
008f4     07 1B 62 FC | 	wrlong	ptr__hng030rm_spin2_dat__, objptr
008f8                 | ' hdmibase:=base
008f8     20 0E 06 F1 | 	add	objptr, #32
008fc     07 01 68 FC | 	wrlong	#0, objptr
00900     24 0E 86 F1 | 	sub	objptr, #36
00904     0F 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel1_
00908                 | ' p1:=@putpixel1
00908     07 5D 02 F6 | 	mov	arg01, objptr
0090c     08 00 00 FF 
00910     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##4096
00914     20 56 B0 FD | 	call	#__system___make_methodptr
00918     15 73 02 F6 | 	mov	local05, result1
0091c     DC 0E 06 F1 | 	add	objptr, #220
00920     07 73 62 FC | 	wrlong	local05, objptr
00924     DC 0E 86 F1 | 	sub	objptr, #220
00928     10 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel2_
0092c                 | ' p2:=@putpixel2
0092c     07 5D 02 F6 | 	mov	arg01, objptr
00930     04 56 B0 FD | 	call	#__system___make_methodptr
00934     15 73 02 F6 | 	mov	local05, result1
00938     E0 0E 06 F1 | 	add	objptr, #224
0093c     07 73 62 FC | 	wrlong	local05, objptr
00940     E0 0E 86 F1 | 	sub	objptr, #224
00944     11 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel4_
00948                 | ' p4:=@putpixel4
00948     07 5D 02 F6 | 	mov	arg01, objptr
0094c     E8 55 B0 FD | 	call	#__system___make_methodptr
00950     15 73 02 F6 | 	mov	local05, result1
00954     E4 0E 06 F1 | 	add	objptr, #228
00958     07 73 62 FC | 	wrlong	local05, objptr
0095c     E4 0E 86 F1 | 	sub	objptr, #228
00960     12 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putpixel8_
00964                 | ' p8:=@putpixel8
00964     07 5D 02 F6 | 	mov	arg01, objptr
00968     CC 55 B0 FD | 	call	#__system___make_methodptr
0096c     15 73 02 F6 | 	mov	local05, result1
00970     E8 0E 06 F1 | 	add	objptr, #232
00974     07 73 62 FC | 	wrlong	local05, objptr
00978     E8 0E 86 F1 | 	sub	objptr, #232
0097c                 | ' 
0097c                 | ' 
0097c                 | ' ' the mode has to be set here to enable computing the buffer length
0097c                 | ' 
0097c                 | ' setmode(mode)
0097c     40 5C 06 F6 | 	mov	arg01, #64
00980     68 20 B0 FD | 	call	#_hng030rm_spin2_setmode
00984     40 0E 06 F1 | 	add	objptr, #64
00988     07 75 02 F6 | 	mov	local06, objptr
0098c                 | ' 
0098c                 | ' vblank_ptr:=@vblank
0098c     34 0E 86 F1 | 	sub	objptr, #52
00990     07 75 62 FC | 	wrlong	local06, objptr
00994     28 0E 06 F1 | 	add	objptr, #40
00998     07 77 02 F6 | 	mov	local07, objptr
0099c                 | ' cursor_ptr:=@cursor_x
0099c     24 0E 86 F1 | 	sub	objptr, #36
009a0     07 77 62 FC | 	wrlong	local07, objptr
009a4     88 0E 06 F1 | 	add	objptr, #136
009a8     07 79 02 F6 | 	mov	local08, objptr
009ac                 | ' 
009ac                 | ' fontnum_ptr:=@fontnum
009ac     78 0E 86 F1 | 	sub	objptr, #120
009b0     07 79 62 FC | 	wrlong	local08, objptr
009b4                 | ' 
009b4                 | ' fontnum:=0  ' PC type font ' TODO: font# in buffer byte #1
009b4     78 0E 06 F1 | 	add	objptr, #120
009b8     07 01 68 FC | 	wrlong	#0, objptr
009bc     1C 0E 06 F1 | 	add	objptr, #28
009c0     07 5D 02 F6 | 	mov	arg01, objptr
009c4     B4 0E 86 F1 | 	sub	objptr, #180
009c8     0F 00 00 FF 
009cc     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7768
009d0     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
009d4     0F 00 00 FF 
009d8     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7768
009dc                 | ' bytemove(@colors,@vgacolors,16)
009dc     10 60 06 F6 | 	mov	arg03, #16
009e0     2C 54 B0 FD | 	call	#__system____builtin_memmove
009e4                 | ' 
009e4                 | ' ' initialize a cursor
009e4                 | ' 
009e4                 | ' cursor_x:=0
009e4     34 0E 06 F1 | 	add	objptr, #52
009e8     07 01 48 FC | 	wrbyte	#0, objptr
009ec                 | ' cursor_y:=0
009ec     01 0E 06 F1 | 	add	objptr, #1
009f0     07 01 48 FC | 	wrbyte	#0, objptr
009f4                 | ' cursor_sh:=14
009f4     01 0E 06 F1 | 	add	objptr, #1
009f8     07 1D 48 FC | 	wrbyte	#14, objptr
009fc     36 0E 86 F1 | 	sub	objptr, #54
00a00                 | ' 
00a00                 | ' 
00a00                 | ' ' start the cog
00a00                 | ' 
00a00                 | ' cog:=coginit(16,@hdmi, @buf_ptr)
00a00     0F 00 00 FF 
00a04     68 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7784
00a08     0D 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_dat__
00a0c     0F 00 00 FF 
00a10     68 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7784
00a14     07 61 02 F6 | 	mov	arg03, objptr
00a18     10 5C 06 F6 | 	mov	arg01, #16
00a1c     28 60 62 FD | 	setq	arg03
00a20     2F 5D F2 FC | 	coginit	arg01, arg02 wc
00a24     01 5C 66 C6 |  if_b	neg	arg01, #1
00a28     2E 2B 02 F6 | 	mov	result1, arg01
00a2c     15 7B 02 F6 | 	mov	local09, result1
00a30     28 0E 06 F1 | 	add	objptr, #40
00a34     07 7B 62 FC | 	wrlong	local09, objptr
00a38     28 0E 86 F1 | 	sub	objptr, #40
00a3c                 | ' waitms(20)
00a3c     14 5C 06 F6 | 	mov	arg01, #20
00a40     FC 56 B0 FD | 	call	#__system___waitms
00a44                 | ' 
00a44                 | ' ' clear the screen and set the colors to green on black
00a44                 | ' 
00a44                 | ' cls(c_green,c_black)
00a44     C7 5C 06 F6 | 	mov	arg01, #199
00a48     00 5E 06 F6 | 	mov	arg02, #0
00a4c     F4 18 B0 FD | 	call	#_hng030rm_spin2_cls
00a50                 | ' setbordercolor(0,0,128)
00a50     00 5C 06 F6 | 	mov	arg01, #0
00a54     00 5E 06 F6 | 	mov	arg02, #0
00a58     80 60 06 F6 | 	mov	arg03, #128
00a5c     C0 18 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a60                 | ' setwritecolors(c_green,c_black)
00a60     00 5E 06 F6 | 	mov	arg02, #0
00a64                 | ' 
00a64                 | ' 
00a64                 | ' write_color:=ff
00a64     38 0E 06 F1 | 	add	objptr, #56
00a68     07 8F 69 FC | 	wrlong	#199, objptr
00a6c                 | ' write_background:=bb
00a6c     04 0E 06 F1 | 	add	objptr, #4
00a70     07 01 68 FC | 	wrlong	#0, objptr
00a74                 | ' 
00a74                 | ' return cog
00a74     14 0E 86 F1 | 	sub	objptr, #20
00a78     07 2B 02 FB | 	rdlong	result1, objptr
00a7c     28 0E 86 F1 | 	sub	objptr, #40
00a80     00 5C 06 F6 | 	mov	arg01, #0
00a84     00 60 06 F6 | 	mov	arg03, #0
00a88     94 18 B0 FD | 	call	#_hng030rm_spin2_setbordercolor
00a8c                 | ' v030.start(mode,pin)
00a8c                 | ' v030.setbordercolor(0,0,0)
00a8c                 | ' open SendRecvDevice(@v030.putchar, nil, nil) as #0
00a8c     07 5D 02 F6 | 	mov	arg01, objptr
00a90     0E 5F 02 F6 | 	mov	arg02, ptr__hng030rm_spin2_putchar_
00a94     A0 54 B0 FD | 	call	#__system___make_methodptr
00a98     00 2E 06 F6 | 	mov	result3, #0
00a9c     00 2C 06 F6 | 	mov	result2, #0
00aa0     15 5F 02 F6 | 	mov	arg02, result1
00aa4     00 60 06 F6 | 	mov	arg03, #0
00aa8     00 62 06 F6 | 	mov	arg04, #0
00aac     00 5C 06 F6 | 	mov	arg01, #0
00ab0     5C 57 B0 FD | 	call	#__system___basic_open
00ab4     00 2A 06 F6 | 	mov	result1, #0
00ab8     9A 5C 06 F6 | 	mov	arg01, #154
00abc     93 5E 06 F6 | 	mov	arg02, #147
00ac0     80 18 B0 FD | 	call	#_hng030rm_spin2_cls
00ac4     40 00 00 FF 
00ac8     EF 7D 06 F6 | 	mov	local10, ##@LR__0459
00acc     04 00 00 FF 
00ad0     D0 0E 06 F1 | 	add	objptr, ##2256
00ad4     07 7D 62 FC | 	wrlong	local10, objptr
00ad8     04 00 00 FF 
00adc     D0 0E 86 F1 | 	sub	objptr, ##2256
00ae0     0C 7F 02 F6 | 	mov	local11, ptr__dat__
00ae4     3F 5D 02 F6 | 	mov	arg01, local11
00ae8     78 FD BF FD | 	call	#_addr
00aec     04 00 00 FF 
00af0     D4 0E 06 F1 | 	add	objptr, ##2260
00af4     07 2B 62 FC | 	wrlong	result1, objptr
00af8     15 5D 02 F6 | 	mov	arg01, result1
00afc     00 5E 06 F6 | 	mov	arg02, #0
00b00     01 00 00 FF 
00b04     A4 0F 86 F1 | 	sub	objptr, ##932
00b08     C8 2F B0 FD | 	call	#_trackerplayer_spin2_initModule
00b0c     01 5E 06 F6 | 	mov	arg02, #1
00b10                 | ' 
00b10                 | ' ''---------- Set the (x,y) position of cursor
00b10                 | ' 
00b10                 | ' cursor_x:=x
00b10     02 00 00 FF 
00b14     FC 0E 86 F1 | 	sub	objptr, ##1276
00b18     07 03 48 FC | 	wrbyte	#1, objptr
00b1c                 | ' cursor_y:=y
00b1c     01 0E 06 F1 | 	add	objptr, #1
00b20     07 03 48 FC | 	wrbyte	#1, objptr
00b24                 | ' 
00b24                 | ' emptystr$="                      "
00b24                 | ' 
00b24                 | ' ma=addr(module)
00b24                 | ' tracker.initmodule(ma,0)
00b24                 | ' 
00b24                 | ' position 1,1 :for i=ma to ma+19 : print chr$(peek(i)); : next i
00b24     04 00 00 FF 
00b28     9F 0E 06 F1 | 	add	objptr, ##2207
00b2c     07 81 02 FB | 	rdlong	local12, objptr
00b30     40 83 02 F6 | 	mov	local13, local12
00b34     04 00 00 FF 
00b38     D4 0E 86 F1 | 	sub	objptr, ##2260
00b3c     14 82 06 F1 | 	add	local13, #20
00b40                 | LR__0001
00b40     41 81 5A F2 | 	cmps	local12, local13 wcz
00b44     44 00 90 3D |  if_ae	jmp	#LR__0002
00b48     00 5C 06 F6 | 	mov	arg01, #0
00b4c     6C 6A B0 FD | 	call	#__system___getiolock_0145
00b50     15 5D 02 F6 | 	mov	arg01, result1
00b54     20 54 B0 FD | 	call	#__system___lockmem
00b58     00 84 06 F6 | 	mov	local14, #0
00b5c                 | ' asm
00b5c     40 2B C2 FA | 	rdbyte	result1, local12
00b60                 | ' return r
00b60     15 5F 02 F6 | 	mov	arg02, result1
00b64     07 5E 46 F7 | 	zerox	arg02, #7
00b68     00 5C 06 F6 | 	mov	arg01, #0
00b6c     00 60 06 F6 | 	mov	arg03, #0
00b70     50 57 B0 FD | 	call	#__system___basic_print_char
00b74     00 5C 06 F6 | 	mov	arg01, #0
00b78     40 6A B0 FD | 	call	#__system___getiolock_0145
00b7c     15 01 68 FC | 	wrlong	#0, result1
00b80     00 2A 06 F6 | 	mov	result1, #0
00b84     01 80 06 F1 | 	add	local12, #1
00b88     B4 FF 9F FD | 	jmp	#LR__0001
00b8c                 | LR__0002
00b8c     04 00 00 FF 
00b90     D8 0E 06 F1 | 	add	objptr, ##2264
00b94     07 1F 68 FC | 	wrlong	#15, objptr
00b98                 | ' samples=15: if peek(ma+1080)=asc("M") and peek(ma+1082)=asc("K") then samples=31
00b98     00 7C 06 F6 | 	mov	local10, #0
00b9c     04 0E 86 F1 | 	sub	objptr, #4
00ba0     07 5D 02 FB | 	rdlong	arg01, objptr
00ba4     02 00 00 FF 
00ba8     38 5C 06 F1 | 	add	arg01, ##1080
00bac                 | ' asm
00bac     2E 87 C2 FA | 	rdbyte	local15, arg01
00bb0                 | ' return r
00bb0     07 86 46 F7 | 	zerox	local15, #7
00bb4     4D 86 0E F2 | 	cmp	local15, #77 wz
00bb8     01 7C 66 A6 |  if_e	neg	local10, #1
00bbc     00 88 06 F6 | 	mov	local16, #0
00bc0     07 5D 02 FB | 	rdlong	arg01, objptr
00bc4     04 00 00 FF 
00bc8     D4 0E 86 F1 | 	sub	objptr, ##2260
00bcc     02 00 00 FF 
00bd0     3A 5C 06 F1 | 	add	arg01, ##1082
00bd4                 | ' asm
00bd4     2E 2B C2 FA | 	rdbyte	result1, arg01
00bd8                 | ' return r
00bd8     15 8B 02 F6 | 	mov	local17, result1
00bdc     07 8A 46 F7 | 	zerox	local17, #7
00be0     4B 8A 0E F2 | 	cmp	local17, #75 wz
00be4     01 88 66 A6 |  if_e	neg	local16, #1
00be8     44 7D CA F7 | 	test	local10, local16 wz
00bec     04 00 00 5F 
00bf0     D8 0E 06 51 |  if_ne	add	objptr, ##2264
00bf4     07 3F 68 5C |  if_ne	wrlong	#31, objptr
00bf8     04 00 00 5F 
00bfc     D8 0E 86 51 |  if_ne	sub	objptr, ##2264
00c00     02 5E 06 F6 | 	mov	arg02, #2
00c04                 | ' 
00c04                 | ' ''---------- Set the (x,y) position of cursor
00c04                 | ' 
00c04                 | ' cursor_x:=x
00c04     34 0E 06 F1 | 	add	objptr, #52
00c08     07 03 48 FC | 	wrbyte	#1, objptr
00c0c                 | ' cursor_y:=y
00c0c     01 0E 06 F1 | 	add	objptr, #1
00c10     07 05 48 FC | 	wrbyte	#2, objptr
00c14     35 0E 86 F1 | 	sub	objptr, #53
00c18                 | ' position 1,2 : print samples;" ";"samples module"
00c18     00 5C 06 F6 | 	mov	arg01, #0
00c1c     9C 69 B0 FD | 	call	#__system___getiolock_0145
00c20     15 5D 02 F6 | 	mov	arg01, result1
00c24     50 53 B0 FD | 	call	#__system___lockmem
00c28     00 2A 06 F6 | 	mov	result1, #0
00c2c     04 00 00 FF 
00c30     D8 0E 06 F1 | 	add	objptr, ##2264
00c34     07 5F 02 FB | 	rdlong	arg02, objptr
00c38     04 00 00 FF 
00c3c     D8 0E 86 F1 | 	sub	objptr, ##2264
00c40     00 5C 06 F6 | 	mov	arg01, #0
00c44     00 60 06 F6 | 	mov	arg03, #0
00c48     0A 62 06 F6 | 	mov	arg04, #10
00c4c     08 57 B0 FD | 	call	#__system___basic_print_integer
00c50     41 00 00 FF 
00c54     06 5E 06 F6 | 	mov	arg02, ##@LR__0460
00c58     00 5C 06 F6 | 	mov	arg01, #0
00c5c     00 60 06 F6 | 	mov	arg03, #0
00c60     AC 56 B0 FD | 	call	#__system___basic_print_string
00c64     41 00 00 FF 
00c68     08 5E 06 F6 | 	mov	arg02, ##@LR__0461
00c6c     00 5C 06 F6 | 	mov	arg01, #0
00c70     00 60 06 F6 | 	mov	arg03, #0
00c74     98 56 B0 FD | 	call	#__system___basic_print_string
00c78     00 5C 06 F6 | 	mov	arg01, #0
00c7c     0A 5E 06 F6 | 	mov	arg02, #10
00c80     00 60 06 F6 | 	mov	arg03, #0
00c84     3C 56 B0 FD | 	call	#__system___basic_print_char
00c88     01 2A 06 F6 | 	mov	result1, #1
00c8c     00 5C 06 F6 | 	mov	arg01, #0
00c90     28 69 B0 FD | 	call	#__system___getiolock_0145
00c94     15 01 68 FC | 	wrlong	#0, result1
00c98     00 2A 06 F6 | 	mov	result1, #0
00c9c     04 00 00 FF 
00ca0     D4 0E 06 F1 | 	add	objptr, ##2260
00ca4     07 8D 02 FB | 	rdlong	local18, objptr
00ca8     04 0E 06 F1 | 	add	objptr, #4
00cac     07 8F 02 FB | 	rdlong	local19, objptr
00cb0     04 5E 06 F6 | 	mov	arg02, #4
00cb4                 | ' 
00cb4                 | ' ''---------- Set the (x,y) position of cursor
00cb4                 | ' 
00cb4                 | ' cursor_x:=x
00cb4     04 00 00 FF 
00cb8     A4 0E 86 F1 | 	sub	objptr, ##2212
00cbc     07 03 48 FC | 	wrbyte	#1, objptr
00cc0                 | ' cursor_y:=y
00cc0     01 0E 06 F1 | 	add	objptr, #1
00cc4     07 09 48 FC | 	wrbyte	#4, objptr
00cc8     35 0E 86 F1 | 	sub	objptr, #53
00ccc                 | ' 'v030. setwritecolors(170,147):
00ccc                 | ' position 1,4: print "Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
00ccc     00 5C 06 F6 | 	mov	arg01, #0
00cd0     E8 68 B0 FD | 	call	#__system___getiolock_0145
00cd4     15 5D 02 F6 | 	mov	arg01, result1
00cd8     9C 52 B0 FD | 	call	#__system___lockmem
00cdc     00 2A 06 F6 | 	mov	result1, #0
00ce0     40 00 00 FF 
00ce4     84 5F 06 F6 | 	mov	arg02, ##@LR__0457
00ce8     00 5C 06 F6 | 	mov	arg01, #0
00cec     00 60 06 F6 | 	mov	arg03, #0
00cf0     1C 56 B0 FD | 	call	#__system___basic_print_string
00cf4     00 5C 06 F6 | 	mov	arg01, #0
00cf8     0A 5E 06 F6 | 	mov	arg02, #10
00cfc     00 60 06 F6 | 	mov	arg03, #0
00d00     C0 55 B0 FD | 	call	#__system___basic_print_char
00d04     01 2A 06 F6 | 	mov	result1, #1
00d08     00 5C 06 F6 | 	mov	arg01, #0
00d0c     AC 68 B0 FD | 	call	#__system___getiolock_0145
00d10     15 01 68 FC | 	wrlong	#0, result1
00d14     00 2A 06 F6 | 	mov	result1, #0
00d18     04 00 00 FF 
00d1c     4C 0E 06 F1 | 	add	objptr, ##2124
00d20     07 91 02 F6 | 	mov	local20, objptr
00d24     00 92 06 F6 | 	mov	local21, #0
00d28     04 00 00 FF 
00d2c     4C 0E 86 F1 | 	sub	objptr, ##2124
00d30                 | LR__0003
00d30     40 00 00 FF 
00d34     ED 95 06 F6 | 	mov	local22, ##@LR__0458
00d38     49 97 02 F6 | 	mov	local23, local21
00d3c     02 5E 06 F6 | 	mov	arg02, #2
00d40     0A 60 06 F6 | 	mov	arg03, #10
00d44     02 98 0E F6 | 	mov	local24, #2 wz
00d48     34 00 90 FD | 	jmp	#LR__0006
00d4c                 | LR__0004
00d4c     00 9A 06 F6 | 	mov	local25, #0
00d50     4B 9D 1A F2 | 	cmp	local26, local23 wcz
00d54     01 9A 66 E6 |  if_be	neg	local25, #1
00d58     00 9E 06 F6 | 	mov	local27, #0
00d5c     4E A1 1A F2 | 	cmp	local28, local26 wcz
00d60     01 9E 66 C6 |  if_b	neg	local27, #1
00d64     4F 9B CA F7 | 	test	local25, local27 wz
00d68     14 00 90 AD |  if_e	jmp	#LR__0005
00d6c     4E A1 02 F6 | 	mov	local28, local26
00d70     0A 9C 06 FD | 	qmul	local26, #10
00d74     18 9C 62 FD | 	getqx	local26
00d78     01 98 06 F1 | 	add	local24, #1
00d7c     CC FF 9F FD | 	jmp	#LR__0004
00d80                 | LR__0005
00d80                 | LR__0006
00d80     20 98 3E F3 | 	fle	local24, #32 wcz
00d84     4C 5D 02 F6 | 	mov	arg01, local24
00d88     02 5C 06 F1 | 	add	arg01, #2
00d8c     1C 5E B0 FD | 	call	#__system___gc_alloc_managed
00d90     15 A3 02 F6 | 	mov	local29, result1
00d94     4C A5 02 F6 | 	mov	local30, local24
00d98     51 A5 02 F1 | 	add	local30, local29
00d9c     52 01 48 FC | 	wrbyte	#0, local30
00da0     98 F2 9F FE | 	loc	pa,	#(@LR__0008-@LR__0007)
00da4     93 00 A0 FD | 	call	#FCACHE_LOAD_
00da8                 | LR__0007
00da8     00 98 1E F2 | 	cmp	local24, #0 wcz
00dac     34 00 90 ED |  if_be	jmp	#LR__0009
00db0     01 98 86 F1 | 	sub	local24, #1
00db4     4B 0B 03 F6 | 	mov	muldiva_, local23
00db8     0A 0C 07 F6 | 	mov	muldivb_, #10
00dbc     CC 00 A0 FD | 	call	#unsdivide_
00dc0     85 A7 02 F6 | 	mov	local31, muldiva_
00dc4     86 97 02 F6 | 	mov	local23, muldivb_
00dc8     0A A6 1E F2 | 	cmp	local31, #10 wcz
00dcc     30 A6 06 C1 |  if_b	add	local31, #48
00dd0     37 A6 06 31 |  if_ae	add	local31, #55
00dd4     4C A9 02 F6 | 	mov	local32, local24
00dd8     51 A9 02 F1 | 	add	local32, local29
00ddc     54 A7 42 FC | 	wrbyte	local31, local32
00de0     C4 FF 9F FD | 	jmp	#LR__0007
00de4                 | LR__0008
00de4                 | LR__0009
00de4     51 2B 02 F6 | 	mov	result1, local29
00de8     15 5F 02 F6 | 	mov	arg02, result1
00dec     4A 5D 02 F6 | 	mov	arg01, local22
00df0     BC 51 B0 FD | 	call	#__system___string_concat
00df4     15 AB 02 F6 | 	mov	local33, result1
00df8     13 5C 06 F6 | 	mov	arg01, #19
00dfc     40 00 00 FF 
00e00     24 5F 06 F6 | 	mov	arg02, ##@LR__0450
00e04     14 5A B0 FD | 	call	#__system__String_S
00e08     15 5F 02 F6 | 	mov	arg02, result1
00e0c     55 5D 02 F6 | 	mov	arg01, local33
00e10     9C 51 B0 FD | 	call	#__system___string_concat
00e14     48 2B 62 FC | 	wrlong	result1, local20
00e18     01 92 06 F1 | 	add	local21, #1
00e1c     04 90 06 F1 | 	add	local20, #4
00e20     20 92 5E F2 | 	cmps	local21, #32 wcz
00e24     08 FF 9F CD |  if_b	jmp	#LR__0003
00e28                 | ' for i=1 to num
00e28     01 92 06 F6 | 	mov	local21, #1
00e2c     01 8E 06 F1 | 	add	local19, #1
00e30     46 AD 02 F6 | 	mov	local34, local18
00e34     14 AC 06 F1 | 	add	local34, #20
00e38     00 AE 06 F6 | 	mov	local35, #0
00e3c     04 00 00 FF 
00e40     50 0E 06 F1 | 	add	objptr, ##2128
00e44     07 B1 02 F6 | 	mov	local36, objptr
00e48     14 8C 06 F1 | 	add	local18, #20
00e4c     00 B2 06 F6 | 	mov	local37, #0
00e50     04 00 00 FF 
00e54     50 0E 86 F1 | 	sub	objptr, ##2128
00e58                 | LR__0010
00e58     47 93 5A F2 | 	cmps	local21, local19 wcz
00e5c     0C 07 90 3D |  if_ae	jmp	#LR__0015
00e60     56 B5 02 F6 | 	mov	local38, local34
00e64     57 B5 02 F1 | 	add	local38, local35
00e68     00 B6 06 F6 | 	mov	local39, #0
00e6c                 | LR__0011
00e6c     58 5D 02 F6 | 	mov	arg01, local36
00e70     F0 F9 BF FD | 	call	#_addr
00e74                 | ' asm
00e74     15 B9 02 FB | 	rdlong	local40, result1
00e78                 | ' return r
00e78     04 00 00 FF 
00e7c     F8 0E 06 F1 | 	add	objptr, ##2296
00e80     07 B9 62 FC | 	wrlong	local40, objptr
00e84     5A 5D 02 F6 | 	mov	arg01, local38
00e88     5B 5D 02 F1 | 	add	arg01, local39
00e8c                 | ' asm
00e8c     2E 2B C2 FA | 	rdbyte	result1, arg01
00e90                 | ' return r
00e90     15 95 02 F6 | 	mov	local22, result1
00e94     07 94 46 F7 | 	zerox	local22, #7
00e98     04 0E 06 F1 | 	add	objptr, #4
00e9c     07 95 62 FC | 	wrlong	local22, objptr
00ea0                 | '     a=lpeek(addr(sn$(i)))
00ea0                 | '     b=(peek(ma+20+30*(i-1)+j))
00ea0                 | '     if b>=32 then poke a+j,b
00ea0     04 00 00 FF 
00ea4     FC 0E 86 F1 | 	sub	objptr, ##2300
00ea8     20 94 5E F2 | 	cmps	local22, #32 wcz
00eac     24 00 90 CD |  if_b	jmp	#LR__0012
00eb0     04 00 00 FF 
00eb4     F8 0E 06 F1 | 	add	objptr, ##2296
00eb8     07 5D 02 FB | 	rdlong	arg01, objptr
00ebc     5B 5D 02 F1 | 	add	arg01, local39
00ec0     04 0E 06 F1 | 	add	objptr, #4
00ec4     07 5F 02 FB | 	rdlong	arg02, objptr
00ec8     04 00 00 FF 
00ecc     FC 0E 86 F1 | 	sub	objptr, ##2300
00ed0                 | ' asm
00ed0     2E 5F 42 FC | 	wrbyte	arg02, arg01
00ed4                 | LR__0012
00ed4     01 B6 06 F1 | 	add	local39, #1
00ed8     16 B6 5E F2 | 	cmps	local39, #22 wcz
00edc     8C FF 9F CD |  if_b	jmp	#LR__0011
00ee0     46 BB 02 F6 | 	mov	local41, local18
00ee4     59 BB 02 F1 | 	add	local41, local37
00ee8     5D 5D 02 F6 | 	mov	arg01, local41
00eec     16 5C 06 F1 | 	add	arg01, #22
00ef0     5D BD 02 F6 | 	mov	local42, local41
00ef4     17 BC 06 F1 | 	add	local42, #23
00ef8                 | ' asm
00ef8     2E AB C2 FA | 	rdbyte	local33, arg01
00efc                 | ' return r
00efc     07 AA 46 F7 | 	zerox	local33, #7
00f00     08 AA 66 F0 | 	shl	local33, #8
00f04                 | ' asm
00f04     5E BF C2 FA | 	rdbyte	local43, local42
00f08                 | ' return r
00f08     07 BE 46 F7 | 	zerox	local43, #7
00f0c     5F AB 02 F1 | 	add	local33, local43
00f10     01 AA 66 F0 | 	shl	local33, #1
00f14     04 00 00 FF 
00f18     00 0F 06 F1 | 	add	objptr, ##2304
00f1c     07 AB 62 FC | 	wrlong	local33, objptr
00f20     5D 5D 02 F6 | 	mov	arg01, local41
00f24     1A 5C 06 F1 | 	add	arg01, #26
00f28     5D C1 02 F6 | 	mov	local44, local41
00f2c     1B C0 06 F1 | 	add	local44, #27
00f30                 | ' asm
00f30     2E AB C2 FA | 	rdbyte	local33, arg01
00f34                 | ' return r
00f34     07 AA 46 F7 | 	zerox	local33, #7
00f38     08 AA 66 F0 | 	shl	local33, #8
00f3c                 | ' asm
00f3c     60 BF C2 FA | 	rdbyte	local43, local44
00f40                 | ' return r
00f40     07 BE 46 F7 | 	zerox	local43, #7
00f44     5F AB 02 F1 | 	add	local33, local43
00f48     01 AA 66 F0 | 	shl	local33, #1
00f4c     04 0E 06 F1 | 	add	objptr, #4
00f50     07 AB 62 FC | 	wrlong	local33, objptr
00f54     5D 5D 02 F6 | 	mov	arg01, local41
00f58     1C 5C 06 F1 | 	add	arg01, #28
00f5c     5D C3 02 F6 | 	mov	local45, local41
00f60     1D C2 06 F1 | 	add	local45, #29
00f64                 | ' asm
00f64     2E AB C2 FA | 	rdbyte	local33, arg01
00f68                 | ' return r
00f68     07 AA 46 F7 | 	zerox	local33, #7
00f6c     08 AA 66 F0 | 	shl	local33, #8
00f70                 | ' asm
00f70     61 BF C2 FA | 	rdbyte	local43, local45
00f74                 | ' return r
00f74     07 BE 46 F7 | 	zerox	local43, #7
00f78     5F AB 02 F1 | 	add	local33, local43
00f7c     01 AA 66 F0 | 	shl	local33, #1
00f80     04 0E 06 F1 | 	add	objptr, #4
00f84     07 AB 62 FC | 	wrlong	local33, objptr
00f88     5D 5D 02 F6 | 	mov	arg01, local41
00f8c     18 5C 06 F1 | 	add	arg01, #24
00f90                 | ' asm
00f90     2E 95 C2 FA | 	rdbyte	local22, arg01
00f94                 | ' return r
00f94     07 94 46 F7 | 	zerox	local22, #7
00f98     04 0E 06 F1 | 	add	objptr, #4
00f9c     07 95 62 FC | 	wrlong	local22, objptr
00fa0     19 BA 06 F1 | 	add	local41, #25
00fa4                 | ' asm
00fa4     5D 2B C2 FA | 	rdbyte	result1, local41
00fa8                 | ' return r
00fa8     15 95 02 F6 | 	mov	local22, result1
00fac     07 94 46 F7 | 	zerox	local22, #7
00fb0     04 0E 06 F1 | 	add	objptr, #4
00fb4     07 95 62 FC | 	wrlong	local22, objptr
00fb8     04 00 00 FF 
00fbc     10 0F 86 F1 | 	sub	objptr, ##2320
00fc0                 | ' sl=2*(256*peek(ma+20+30*(i-1)+22)+ peek(ma+20+30*(i-1)+23))  
00fc0                 | ' rp=2*(256*peek(ma+20+30*(i-1)+26)+ peek(ma+20+30*(i-1)+27))  
00fc0                 | ' rl=2*(256*peek(ma+20+30*(i-1)+28)+ peek(ma+20+30*(i-1)+29))  
00fc0                 | ' ft=peek(ma+20+30*(i-1)+24)
00fc0                 | ' vl=peek(ma+20+30*(i-1)+25)
00fc0                 | ' if i<16 then position 1,5+i :print sn$(i) : position 24,5+i : print sl :position 31,5+i : print ft :position 34,5+i : print vl : position 37,5+i :print rp : position 43,5+i :print rl
00fc0     10 92 5E F2 | 	cmps	local21, #16 wcz
00fc4     C4 02 90 3D |  if_ae	jmp	#LR__0013
00fc8     05 C4 06 F6 | 	mov	local46, #5
00fcc     49 C5 02 F1 | 	add	local46, local21
00fd0     62 5F 02 F6 | 	mov	arg02, local46
00fd4                 | ' 
00fd4                 | ' ''---------- Set the (x,y) position of cursor
00fd4                 | ' 
00fd4                 | ' cursor_x:=x
00fd4     34 0E 06 F1 | 	add	objptr, #52
00fd8     07 03 48 FC | 	wrbyte	#1, objptr
00fdc                 | ' cursor_y:=y
00fdc     01 0E 06 F1 | 	add	objptr, #1
00fe0     07 5F 42 FC | 	wrbyte	arg02, objptr
00fe4     49 C7 02 F6 | 	mov	local47, local21
00fe8     02 C6 66 F0 | 	shl	local47, #2
00fec     04 00 00 FF 
00ff0     17 0E 06 F1 | 	add	objptr, ##2071
00ff4     07 C7 02 F1 | 	add	local47, objptr
00ff8     00 5C 06 F6 | 	mov	arg01, #0
00ffc     04 00 00 FF 
01000     4C 0E 86 F1 | 	sub	objptr, ##2124
01004     B4 65 B0 FD | 	call	#__system___getiolock_0145
01008     15 5D 02 F6 | 	mov	arg01, result1
0100c     68 4F B0 FD | 	call	#__system___lockmem
01010     00 2A 06 F6 | 	mov	result1, #0
01014     63 5F 02 FB | 	rdlong	arg02, local47
01018     00 5C 06 F6 | 	mov	arg01, #0
0101c     00 60 06 F6 | 	mov	arg03, #0
01020     EC 52 B0 FD | 	call	#__system___basic_print_string
01024     00 5C 06 F6 | 	mov	arg01, #0
01028     0A 5E 06 F6 | 	mov	arg02, #10
0102c     00 60 06 F6 | 	mov	arg03, #0
01030     90 52 B0 FD | 	call	#__system___basic_print_char
01034     01 2A 06 F6 | 	mov	result1, #1
01038     00 5C 06 F6 | 	mov	arg01, #0
0103c     7C 65 B0 FD | 	call	#__system___getiolock_0145
01040     15 01 68 FC | 	wrlong	#0, result1
01044     00 2A 06 F6 | 	mov	result1, #0
01048     62 5F 02 F6 | 	mov	arg02, local46
0104c                 | ' 
0104c                 | ' ''---------- Set the (x,y) position of cursor
0104c                 | ' 
0104c                 | ' cursor_x:=x
0104c     34 0E 06 F1 | 	add	objptr, #52
01050     07 31 48 FC | 	wrbyte	#24, objptr
01054                 | ' cursor_y:=y
01054     01 0E 06 F1 | 	add	objptr, #1
01058     07 5F 42 FC | 	wrbyte	arg02, objptr
0105c     35 0E 86 F1 | 	sub	objptr, #53
01060     00 5C 06 F6 | 	mov	arg01, #0
01064     54 65 B0 FD | 	call	#__system___getiolock_0145
01068     15 5D 02 F6 | 	mov	arg01, result1
0106c     08 4F B0 FD | 	call	#__system___lockmem
01070     00 2A 06 F6 | 	mov	result1, #0
01074     04 00 00 FF 
01078     00 0F 06 F1 | 	add	objptr, ##2304
0107c     07 5F 02 FB | 	rdlong	arg02, objptr
01080     04 00 00 FF 
01084     00 0F 86 F1 | 	sub	objptr, ##2304
01088     00 5C 06 F6 | 	mov	arg01, #0
0108c     00 60 06 F6 | 	mov	arg03, #0
01090     0A 62 06 F6 | 	mov	arg04, #10
01094     C0 52 B0 FD | 	call	#__system___basic_print_integer
01098     00 5C 06 F6 | 	mov	arg01, #0
0109c     0A 5E 06 F6 | 	mov	arg02, #10
010a0     00 60 06 F6 | 	mov	arg03, #0
010a4     1C 52 B0 FD | 	call	#__system___basic_print_char
010a8     01 2A 06 F6 | 	mov	result1, #1
010ac     00 5C 06 F6 | 	mov	arg01, #0
010b0     08 65 B0 FD | 	call	#__system___getiolock_0145
010b4     15 01 68 FC | 	wrlong	#0, result1
010b8     00 2A 06 F6 | 	mov	result1, #0
010bc     62 5F 02 F6 | 	mov	arg02, local46
010c0                 | ' 
010c0                 | ' ''---------- Set the (x,y) position of cursor
010c0                 | ' 
010c0                 | ' cursor_x:=x
010c0     34 0E 06 F1 | 	add	objptr, #52
010c4     07 3F 48 FC | 	wrbyte	#31, objptr
010c8                 | ' cursor_y:=y
010c8     01 0E 06 F1 | 	add	objptr, #1
010cc     07 5F 42 FC | 	wrbyte	arg02, objptr
010d0     35 0E 86 F1 | 	sub	objptr, #53
010d4     00 5C 06 F6 | 	mov	arg01, #0
010d8     E0 64 B0 FD | 	call	#__system___getiolock_0145
010dc     15 5D 02 F6 | 	mov	arg01, result1
010e0     94 4E B0 FD | 	call	#__system___lockmem
010e4     00 2A 06 F6 | 	mov	result1, #0
010e8     04 00 00 FF 
010ec     0C 0F 06 F1 | 	add	objptr, ##2316
010f0     07 5F 02 FB | 	rdlong	arg02, objptr
010f4     04 00 00 FF 
010f8     0C 0F 86 F1 | 	sub	objptr, ##2316
010fc     00 5C 06 F6 | 	mov	arg01, #0
01100     00 60 06 F6 | 	mov	arg03, #0
01104     0A 62 06 F6 | 	mov	arg04, #10
01108     4C 52 B0 FD | 	call	#__system___basic_print_integer
0110c     00 5C 06 F6 | 	mov	arg01, #0
01110     0A 5E 06 F6 | 	mov	arg02, #10
01114     00 60 06 F6 | 	mov	arg03, #0
01118     A8 51 B0 FD | 	call	#__system___basic_print_char
0111c     01 2A 06 F6 | 	mov	result1, #1
01120     00 5C 06 F6 | 	mov	arg01, #0
01124     94 64 B0 FD | 	call	#__system___getiolock_0145
01128     15 01 68 FC | 	wrlong	#0, result1
0112c     00 2A 06 F6 | 	mov	result1, #0
01130     62 5F 02 F6 | 	mov	arg02, local46
01134                 | ' 
01134                 | ' ''---------- Set the (x,y) position of cursor
01134                 | ' 
01134                 | ' cursor_x:=x
01134     34 0E 06 F1 | 	add	objptr, #52
01138     07 45 48 FC | 	wrbyte	#34, objptr
0113c                 | ' cursor_y:=y
0113c     01 0E 06 F1 | 	add	objptr, #1
01140     07 5F 42 FC | 	wrbyte	arg02, objptr
01144     35 0E 86 F1 | 	sub	objptr, #53
01148     00 5C 06 F6 | 	mov	arg01, #0
0114c     6C 64 B0 FD | 	call	#__system___getiolock_0145
01150     15 5D 02 F6 | 	mov	arg01, result1
01154     20 4E B0 FD | 	call	#__system___lockmem
01158     00 2A 06 F6 | 	mov	result1, #0
0115c     04 00 00 FF 
01160     10 0F 06 F1 | 	add	objptr, ##2320
01164     07 5F 02 FB | 	rdlong	arg02, objptr
01168     04 00 00 FF 
0116c     10 0F 86 F1 | 	sub	objptr, ##2320
01170     00 5C 06 F6 | 	mov	arg01, #0
01174     00 60 06 F6 | 	mov	arg03, #0
01178     0A 62 06 F6 | 	mov	arg04, #10
0117c     D8 51 B0 FD | 	call	#__system___basic_print_integer
01180     00 5C 06 F6 | 	mov	arg01, #0
01184     0A 5E 06 F6 | 	mov	arg02, #10
01188     00 60 06 F6 | 	mov	arg03, #0
0118c     34 51 B0 FD | 	call	#__system___basic_print_char
01190     01 2A 06 F6 | 	mov	result1, #1
01194     00 5C 06 F6 | 	mov	arg01, #0
01198     20 64 B0 FD | 	call	#__system___getiolock_0145
0119c     15 01 68 FC | 	wrlong	#0, result1
011a0     00 2A 06 F6 | 	mov	result1, #0
011a4     62 5F 02 F6 | 	mov	arg02, local46
011a8                 | ' 
011a8                 | ' ''---------- Set the (x,y) position of cursor
011a8                 | ' 
011a8                 | ' cursor_x:=x
011a8     34 0E 06 F1 | 	add	objptr, #52
011ac     07 4B 48 FC | 	wrbyte	#37, objptr
011b0                 | ' cursor_y:=y
011b0     01 0E 06 F1 | 	add	objptr, #1
011b4     07 5F 42 FC | 	wrbyte	arg02, objptr
011b8     35 0E 86 F1 | 	sub	objptr, #53
011bc     00 5C 06 F6 | 	mov	arg01, #0
011c0     F8 63 B0 FD | 	call	#__system___getiolock_0145
011c4     15 5D 02 F6 | 	mov	arg01, result1
011c8     AC 4D B0 FD | 	call	#__system___lockmem
011cc     00 2A 06 F6 | 	mov	result1, #0
011d0     04 00 00 FF 
011d4     04 0F 06 F1 | 	add	objptr, ##2308
011d8     07 5F 02 FB | 	rdlong	arg02, objptr
011dc     04 00 00 FF 
011e0     04 0F 86 F1 | 	sub	objptr, ##2308
011e4     00 5C 06 F6 | 	mov	arg01, #0
011e8     00 60 06 F6 | 	mov	arg03, #0
011ec     0A 62 06 F6 | 	mov	arg04, #10
011f0     64 51 B0 FD | 	call	#__system___basic_print_integer
011f4     00 5C 06 F6 | 	mov	arg01, #0
011f8     0A 5E 06 F6 | 	mov	arg02, #10
011fc     00 60 06 F6 | 	mov	arg03, #0
01200     C0 50 B0 FD | 	call	#__system___basic_print_char
01204     01 2A 06 F6 | 	mov	result1, #1
01208     00 5C 06 F6 | 	mov	arg01, #0
0120c     AC 63 B0 FD | 	call	#__system___getiolock_0145
01210     15 01 68 FC | 	wrlong	#0, result1
01214     00 2A 06 F6 | 	mov	result1, #0
01218     62 5F 02 F6 | 	mov	arg02, local46
0121c                 | ' 
0121c                 | ' ''---------- Set the (x,y) position of cursor
0121c                 | ' 
0121c                 | ' cursor_x:=x
0121c     34 0E 06 F1 | 	add	objptr, #52
01220     07 57 48 FC | 	wrbyte	#43, objptr
01224                 | ' cursor_y:=y
01224     01 0E 06 F1 | 	add	objptr, #1
01228     07 5F 42 FC | 	wrbyte	arg02, objptr
0122c     35 0E 86 F1 | 	sub	objptr, #53
01230     00 5C 06 F6 | 	mov	arg01, #0
01234     84 63 B0 FD | 	call	#__system___getiolock_0145
01238     15 5D 02 F6 | 	mov	arg01, result1
0123c     38 4D B0 FD | 	call	#__system___lockmem
01240     00 2A 06 F6 | 	mov	result1, #0
01244     04 00 00 FF 
01248     08 0F 06 F1 | 	add	objptr, ##2312
0124c     07 5F 02 FB | 	rdlong	arg02, objptr
01250     04 00 00 FF 
01254     08 0F 86 F1 | 	sub	objptr, ##2312
01258     00 5C 06 F6 | 	mov	arg01, #0
0125c     00 60 06 F6 | 	mov	arg03, #0
01260     0A 62 06 F6 | 	mov	arg04, #10
01264     F0 50 B0 FD | 	call	#__system___basic_print_integer
01268     00 5C 06 F6 | 	mov	arg01, #0
0126c     0A 5E 06 F6 | 	mov	arg02, #10
01270     00 60 06 F6 | 	mov	arg03, #0
01274     4C 50 B0 FD | 	call	#__system___basic_print_char
01278     01 2A 06 F6 | 	mov	result1, #1
0127c     00 5C 06 F6 | 	mov	arg01, #0
01280     38 63 B0 FD | 	call	#__system___getiolock_0145
01284     15 01 68 FC | 	wrlong	#0, result1
01288     00 2A 06 F6 | 	mov	result1, #0
0128c                 | LR__0013
0128c                 | ' if i>=16 then position 57,i-11 :print sn$(i) : position 80,i-11 : print sl : position 87,i-11 : print ft: position 90,i-11 : print vl :position 93,i-11 : print rp : position 99,i-11 : print rl
0128c     10 92 5E F2 | 	cmps	local21, #16 wcz
01290     C4 02 90 CD |  if_b	jmp	#LR__0014
01294     49 C9 02 F6 | 	mov	local48, local21
01298     0B C8 86 F1 | 	sub	local48, #11
0129c     64 5F 02 F6 | 	mov	arg02, local48
012a0                 | ' 
012a0                 | ' ''---------- Set the (x,y) position of cursor
012a0                 | ' 
012a0                 | ' cursor_x:=x
012a0     34 0E 06 F1 | 	add	objptr, #52
012a4     07 73 48 FC | 	wrbyte	#57, objptr
012a8                 | ' cursor_y:=y
012a8     01 0E 06 F1 | 	add	objptr, #1
012ac     07 5F 42 FC | 	wrbyte	arg02, objptr
012b0     49 CB 02 F6 | 	mov	local49, local21
012b4     02 CA 66 F0 | 	shl	local49, #2
012b8     04 00 00 FF 
012bc     17 0E 06 F1 | 	add	objptr, ##2071
012c0     07 CB 02 F1 | 	add	local49, objptr
012c4     00 5C 06 F6 | 	mov	arg01, #0
012c8     04 00 00 FF 
012cc     4C 0E 86 F1 | 	sub	objptr, ##2124
012d0     E8 62 B0 FD | 	call	#__system___getiolock_0145
012d4     15 5D 02 F6 | 	mov	arg01, result1
012d8     9C 4C B0 FD | 	call	#__system___lockmem
012dc     00 2A 06 F6 | 	mov	result1, #0
012e0     65 5F 02 FB | 	rdlong	arg02, local49
012e4     00 5C 06 F6 | 	mov	arg01, #0
012e8     00 60 06 F6 | 	mov	arg03, #0
012ec     20 50 B0 FD | 	call	#__system___basic_print_string
012f0     00 5C 06 F6 | 	mov	arg01, #0
012f4     0A 5E 06 F6 | 	mov	arg02, #10
012f8     00 60 06 F6 | 	mov	arg03, #0
012fc     C4 4F B0 FD | 	call	#__system___basic_print_char
01300     01 2A 06 F6 | 	mov	result1, #1
01304     00 5C 06 F6 | 	mov	arg01, #0
01308     B0 62 B0 FD | 	call	#__system___getiolock_0145
0130c     15 01 68 FC | 	wrlong	#0, result1
01310     00 2A 06 F6 | 	mov	result1, #0
01314     64 5F 02 F6 | 	mov	arg02, local48
01318                 | ' 
01318                 | ' ''---------- Set the (x,y) position of cursor
01318                 | ' 
01318                 | ' cursor_x:=x
01318     34 0E 06 F1 | 	add	objptr, #52
0131c     07 A1 48 FC | 	wrbyte	#80, objptr
01320                 | ' cursor_y:=y
01320     01 0E 06 F1 | 	add	objptr, #1
01324     07 5F 42 FC | 	wrbyte	arg02, objptr
01328     35 0E 86 F1 | 	sub	objptr, #53
0132c     00 5C 06 F6 | 	mov	arg01, #0
01330     88 62 B0 FD | 	call	#__system___getiolock_0145
01334     15 5D 02 F6 | 	mov	arg01, result1
01338     3C 4C B0 FD | 	call	#__system___lockmem
0133c     00 2A 06 F6 | 	mov	result1, #0
01340     04 00 00 FF 
01344     00 0F 06 F1 | 	add	objptr, ##2304
01348     07 5F 02 FB | 	rdlong	arg02, objptr
0134c     04 00 00 FF 
01350     00 0F 86 F1 | 	sub	objptr, ##2304
01354     00 5C 06 F6 | 	mov	arg01, #0
01358     00 60 06 F6 | 	mov	arg03, #0
0135c     0A 62 06 F6 | 	mov	arg04, #10
01360     F4 4F B0 FD | 	call	#__system___basic_print_integer
01364     00 5C 06 F6 | 	mov	arg01, #0
01368     0A 5E 06 F6 | 	mov	arg02, #10
0136c     00 60 06 F6 | 	mov	arg03, #0
01370     50 4F B0 FD | 	call	#__system___basic_print_char
01374     01 2A 06 F6 | 	mov	result1, #1
01378     00 5C 06 F6 | 	mov	arg01, #0
0137c     3C 62 B0 FD | 	call	#__system___getiolock_0145
01380     15 01 68 FC | 	wrlong	#0, result1
01384     00 2A 06 F6 | 	mov	result1, #0
01388     64 5F 02 F6 | 	mov	arg02, local48
0138c                 | ' 
0138c                 | ' ''---------- Set the (x,y) position of cursor
0138c                 | ' 
0138c                 | ' cursor_x:=x
0138c     34 0E 06 F1 | 	add	objptr, #52
01390     07 AF 48 FC | 	wrbyte	#87, objptr
01394                 | ' cursor_y:=y
01394     01 0E 06 F1 | 	add	objptr, #1
01398     07 5F 42 FC | 	wrbyte	arg02, objptr
0139c     35 0E 86 F1 | 	sub	objptr, #53
013a0     00 5C 06 F6 | 	mov	arg01, #0
013a4     14 62 B0 FD | 	call	#__system___getiolock_0145
013a8     15 5D 02 F6 | 	mov	arg01, result1
013ac     C8 4B B0 FD | 	call	#__system___lockmem
013b0     00 2A 06 F6 | 	mov	result1, #0
013b4     04 00 00 FF 
013b8     0C 0F 06 F1 | 	add	objptr, ##2316
013bc     07 5F 02 FB | 	rdlong	arg02, objptr
013c0     04 00 00 FF 
013c4     0C 0F 86 F1 | 	sub	objptr, ##2316
013c8     00 5C 06 F6 | 	mov	arg01, #0
013cc     00 60 06 F6 | 	mov	arg03, #0
013d0     0A 62 06 F6 | 	mov	arg04, #10
013d4     80 4F B0 FD | 	call	#__system___basic_print_integer
013d8     00 5C 06 F6 | 	mov	arg01, #0
013dc     0A 5E 06 F6 | 	mov	arg02, #10
013e0     00 60 06 F6 | 	mov	arg03, #0
013e4     DC 4E B0 FD | 	call	#__system___basic_print_char
013e8     01 2A 06 F6 | 	mov	result1, #1
013ec     00 5C 06 F6 | 	mov	arg01, #0
013f0     C8 61 B0 FD | 	call	#__system___getiolock_0145
013f4     15 01 68 FC | 	wrlong	#0, result1
013f8     00 2A 06 F6 | 	mov	result1, #0
013fc     64 5F 02 F6 | 	mov	arg02, local48
01400                 | ' 
01400                 | ' ''---------- Set the (x,y) position of cursor
01400                 | ' 
01400                 | ' cursor_x:=x
01400     34 0E 06 F1 | 	add	objptr, #52
01404     07 B5 48 FC | 	wrbyte	#90, objptr
01408                 | ' cursor_y:=y
01408     01 0E 06 F1 | 	add	objptr, #1
0140c     07 5F 42 FC | 	wrbyte	arg02, objptr
01410     35 0E 86 F1 | 	sub	objptr, #53
01414     00 5C 06 F6 | 	mov	arg01, #0
01418     A0 61 B0 FD | 	call	#__system___getiolock_0145
0141c     15 5D 02 F6 | 	mov	arg01, result1
01420     54 4B B0 FD | 	call	#__system___lockmem
01424     00 2A 06 F6 | 	mov	result1, #0
01428     04 00 00 FF 
0142c     10 0F 06 F1 | 	add	objptr, ##2320
01430     07 5F 02 FB | 	rdlong	arg02, objptr
01434     04 00 00 FF 
01438     10 0F 86 F1 | 	sub	objptr, ##2320
0143c     00 5C 06 F6 | 	mov	arg01, #0
01440     00 60 06 F6 | 	mov	arg03, #0
01444     0A 62 06 F6 | 	mov	arg04, #10
01448     0C 4F B0 FD | 	call	#__system___basic_print_integer
0144c     00 5C 06 F6 | 	mov	arg01, #0
01450     0A 5E 06 F6 | 	mov	arg02, #10
01454     00 60 06 F6 | 	mov	arg03, #0
01458     68 4E B0 FD | 	call	#__system___basic_print_char
0145c     01 2A 06 F6 | 	mov	result1, #1
01460     00 5C 06 F6 | 	mov	arg01, #0
01464     54 61 B0 FD | 	call	#__system___getiolock_0145
01468     15 01 68 FC | 	wrlong	#0, result1
0146c     00 2A 06 F6 | 	mov	result1, #0
01470     64 5F 02 F6 | 	mov	arg02, local48
01474                 | ' 
01474                 | ' ''---------- Set the (x,y) position of cursor
01474                 | ' 
01474                 | ' cursor_x:=x
01474     34 0E 06 F1 | 	add	objptr, #52
01478     07 BB 48 FC | 	wrbyte	#93, objptr
0147c                 | ' cursor_y:=y
0147c     01 0E 06 F1 | 	add	objptr, #1
01480     07 5F 42 FC | 	wrbyte	arg02, objptr
01484     35 0E 86 F1 | 	sub	objptr, #53
01488     00 5C 06 F6 | 	mov	arg01, #0
0148c     2C 61 B0 FD | 	call	#__system___getiolock_0145
01490     15 5D 02 F6 | 	mov	arg01, result1
01494     E0 4A B0 FD | 	call	#__system___lockmem
01498     00 2A 06 F6 | 	mov	result1, #0
0149c     04 00 00 FF 
014a0     04 0F 06 F1 | 	add	objptr, ##2308
014a4     07 5F 02 FB | 	rdlong	arg02, objptr
014a8     04 00 00 FF 
014ac     04 0F 86 F1 | 	sub	objptr, ##2308
014b0     00 5C 06 F6 | 	mov	arg01, #0
014b4     00 60 06 F6 | 	mov	arg03, #0
014b8     0A 62 06 F6 | 	mov	arg04, #10
014bc     98 4E B0 FD | 	call	#__system___basic_print_integer
014c0     00 5C 06 F6 | 	mov	arg01, #0
014c4     0A 5E 06 F6 | 	mov	arg02, #10
014c8     00 60 06 F6 | 	mov	arg03, #0
014cc     F4 4D B0 FD | 	call	#__system___basic_print_char
014d0     01 2A 06 F6 | 	mov	result1, #1
014d4     00 5C 06 F6 | 	mov	arg01, #0
014d8     E0 60 B0 FD | 	call	#__system___getiolock_0145
014dc     15 01 68 FC | 	wrlong	#0, result1
014e0     00 2A 06 F6 | 	mov	result1, #0
014e4     64 5F 02 F6 | 	mov	arg02, local48
014e8                 | ' 
014e8                 | ' ''---------- Set the (x,y) position of cursor
014e8                 | ' 
014e8                 | ' cursor_x:=x
014e8     34 0E 06 F1 | 	add	objptr, #52
014ec     07 C7 48 FC | 	wrbyte	#99, objptr
014f0                 | ' cursor_y:=y
014f0     01 0E 06 F1 | 	add	objptr, #1
014f4     07 5F 42 FC | 	wrbyte	arg02, objptr
014f8     35 0E 86 F1 | 	sub	objptr, #53
014fc     00 5C 06 F6 | 	mov	arg01, #0
01500     B8 60 B0 FD | 	call	#__system___getiolock_0145
01504     15 5D 02 F6 | 	mov	arg01, result1
01508     6C 4A B0 FD | 	call	#__system___lockmem
0150c     00 2A 06 F6 | 	mov	result1, #0
01510     04 00 00 FF 
01514     08 0F 06 F1 | 	add	objptr, ##2312
01518     07 5F 02 FB | 	rdlong	arg02, objptr
0151c     04 00 00 FF 
01520     08 0F 86 F1 | 	sub	objptr, ##2312
01524     00 5C 06 F6 | 	mov	arg01, #0
01528     00 60 06 F6 | 	mov	arg03, #0
0152c     0A 62 06 F6 | 	mov	arg04, #10
01530     24 4E B0 FD | 	call	#__system___basic_print_integer
01534     00 5C 06 F6 | 	mov	arg01, #0
01538     0A 5E 06 F6 | 	mov	arg02, #10
0153c     00 60 06 F6 | 	mov	arg03, #0
01540     80 4D B0 FD | 	call	#__system___basic_print_char
01544     01 2A 06 F6 | 	mov	result1, #1
01548     00 5C 06 F6 | 	mov	arg01, #0
0154c     6C 60 B0 FD | 	call	#__system___getiolock_0145
01550     15 01 68 FC | 	wrlong	#0, result1
01554     00 2A 06 F6 | 	mov	result1, #0
01558                 | LR__0014
01558     01 92 06 F1 | 	add	local21, #1
0155c     1E AE 06 F1 | 	add	local35, #30
01560     04 B0 06 F1 | 	add	local36, #4
01564     1E B2 06 F1 | 	add	local37, #30
01568     EC F8 9F FD | 	jmp	#LR__0010
0156c                 | LR__0015
0156c                 | ' print
0156c     00 5C 06 F6 | 	mov	arg01, #0
01570     48 60 B0 FD | 	call	#__system___getiolock_0145
01574     15 5D 02 F6 | 	mov	arg01, result1
01578     FC 49 B0 FD | 	call	#__system___lockmem
0157c     00 2A 06 F6 | 	mov	result1, #0
01580     00 5C 06 F6 | 	mov	arg01, #0
01584     0A 5E 06 F6 | 	mov	arg02, #10
01588     00 60 06 F6 | 	mov	arg03, #0
0158c     34 4D B0 FD | 	call	#__system___basic_print_char
01590     01 2A 06 F6 | 	mov	result1, #1
01594     00 5C 06 F6 | 	mov	arg01, #0
01598     20 60 B0 FD | 	call	#__system___getiolock_0145
0159c     15 01 68 FC | 	wrlong	#0, result1
015a0     03 00 00 FF 
015a4     2C 0F 06 F1 | 	add	objptr, ##1836
015a8     03 00 00 FF 
015ac     E4 16 06 F1 | 	add	ptr__audio012_spin2_dat__, ##1764
015b0                 | ' 
015b0                 | ' 
015b0                 | ' channel1[0]:=@null
015b0     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
015b4                 | ' channel1[1]:=0
015b4     04 0E 06 F1 | 	add	objptr, #4
015b8     07 01 68 FC | 	wrlong	#0, objptr
015bc                 | ' channel1[2]:=0
015bc     04 0E 06 F1 | 	add	objptr, #4
015c0     07 01 68 FC | 	wrlong	#0, objptr
015c4                 | ' channel1[3]:=2
015c4     04 0E 06 F1 | 	add	objptr, #4
015c8     07 05 68 FC | 	wrlong	#2, objptr
015cc                 | ' channel1[4]:=0
015cc     04 0E 06 F1 | 	add	objptr, #4
015d0     07 01 68 FC | 	wrlong	#0, objptr
015d4                 | ' channel1[5]:=8192
015d4     04 0E 06 F1 | 	add	objptr, #4
015d8     10 00 80 FF 
015dc     07 01 68 FC | 	wrlong	##8192, objptr
015e0                 | ' channel1[6]:=101
015e0     04 0E 06 F1 | 	add	objptr, #4
015e4     07 CB 68 FC | 	wrlong	#101, objptr
015e8                 | ' channel1[7]:=2
015e8     04 0E 06 F1 | 	add	objptr, #4
015ec     07 05 68 FC | 	wrlong	#2, objptr
015f0                 | ' 
015f0                 | ' channel2[0]:=@null
015f0     08 0E 06 F1 | 	add	objptr, #8
015f4     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
015f8                 | ' channel2[1]:=0
015f8     04 0E 06 F1 | 	add	objptr, #4
015fc     07 01 68 FC | 	wrlong	#0, objptr
01600                 | ' channel2[2]:=0
01600     04 0E 06 F1 | 	add	objptr, #4
01604     07 01 68 FC | 	wrlong	#0, objptr
01608                 | ' channel2[3]:=2
01608     04 0E 06 F1 | 	add	objptr, #4
0160c     07 05 68 FC | 	wrlong	#2, objptr
01610                 | ' channel2[4]:=0
01610     04 0E 06 F1 | 	add	objptr, #4
01614     07 01 68 FC | 	wrlong	#0, objptr
01618                 | ' channel2[5]:=8192
01618     04 0E 06 F1 | 	add	objptr, #4
0161c     10 00 80 FF 
01620     07 01 68 FC | 	wrlong	##8192, objptr
01624                 | ' channel2[6]:=103
01624     04 0E 06 F1 | 	add	objptr, #4
01628     07 CF 68 FC | 	wrlong	#103, objptr
0162c                 | ' channel2[7]:=2
0162c     04 0E 06 F1 | 	add	objptr, #4
01630     07 05 68 FC | 	wrlong	#2, objptr
01634                 | ' 
01634                 | ' channel3[0]:=@null
01634     08 0E 06 F1 | 	add	objptr, #8
01638     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
0163c                 | ' channel3[1]:=0
0163c     04 0E 06 F1 | 	add	objptr, #4
01640     07 01 68 FC | 	wrlong	#0, objptr
01644                 | ' channel3[2]:=0
01644     04 0E 06 F1 | 	add	objptr, #4
01648     07 01 68 FC | 	wrlong	#0, objptr
0164c                 | ' channel3[3]:=2
0164c     04 0E 06 F1 | 	add	objptr, #4
01650     07 05 68 FC | 	wrlong	#2, objptr
01654                 | ' channel3[4]:=0
01654     04 0E 06 F1 | 	add	objptr, #4
01658     07 01 68 FC | 	wrlong	#0, objptr
0165c                 | ' channel3[5]:=8192
0165c     04 0E 06 F1 | 	add	objptr, #4
01660     10 00 80 FF 
01664     07 01 68 FC | 	wrlong	##8192, objptr
01668                 | ' channel3[6]:=107
01668     04 0E 06 F1 | 	add	objptr, #4
0166c     07 D7 68 FC | 	wrlong	#107, objptr
01670                 | ' channel3[7]:=2
01670     04 0E 06 F1 | 	add	objptr, #4
01674     07 05 68 FC | 	wrlong	#2, objptr
01678                 | ' 
01678                 | ' channel4[0]:=@null
01678     08 0E 06 F1 | 	add	objptr, #8
0167c     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01680                 | ' channel4[1]:=0
01680     04 0E 06 F1 | 	add	objptr, #4
01684     07 01 68 FC | 	wrlong	#0, objptr
01688                 | ' channel4[2]:=0
01688     04 0E 06 F1 | 	add	objptr, #4
0168c     07 01 68 FC | 	wrlong	#0, objptr
01690                 | ' channel4[3]:=2
01690     04 0E 06 F1 | 	add	objptr, #4
01694     07 05 68 FC | 	wrlong	#2, objptr
01698                 | ' channel4[4]:=0
01698     04 0E 06 F1 | 	add	objptr, #4
0169c     07 01 68 FC | 	wrlong	#0, objptr
016a0                 | ' channel4[5]:=8192
016a0     04 0E 06 F1 | 	add	objptr, #4
016a4     10 00 80 FF 
016a8     07 01 68 FC | 	wrlong	##8192, objptr
016ac                 | ' channel4[6]:=109
016ac     04 0E 06 F1 | 	add	objptr, #4
016b0     07 DB 68 FC | 	wrlong	#109, objptr
016b4                 | ' channel4[7]:=2
016b4     04 0E 06 F1 | 	add	objptr, #4
016b8     07 05 68 FC | 	wrlong	#2, objptr
016bc                 | ' channel4[8]:=1
016bc     04 0E 06 F1 | 	add	objptr, #4
016c0     07 03 68 FC | 	wrlong	#1, objptr
016c4                 | ' 
016c4                 | ' channel5[0]:=@null
016c4     04 0E 06 F1 | 	add	objptr, #4
016c8     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
016cc                 | ' channel5[1]:=0
016cc     04 0E 06 F1 | 	add	objptr, #4
016d0     07 01 68 FC | 	wrlong	#0, objptr
016d4                 | ' channel5[2]:=0
016d4     04 0E 06 F1 | 	add	objptr, #4
016d8     07 01 68 FC | 	wrlong	#0, objptr
016dc                 | ' channel5[3]:=2
016dc     04 0E 06 F1 | 	add	objptr, #4
016e0     07 05 68 FC | 	wrlong	#2, objptr
016e4                 | ' channel5[4]:=0
016e4     04 0E 06 F1 | 	add	objptr, #4
016e8     07 01 68 FC | 	wrlong	#0, objptr
016ec                 | ' channel5[5]:=8192
016ec     04 0E 06 F1 | 	add	objptr, #4
016f0     10 00 80 FF 
016f4     07 01 68 FC | 	wrlong	##8192, objptr
016f8                 | ' channel5[6]:=113
016f8     04 0E 06 F1 | 	add	objptr, #4
016fc     07 E3 68 FC | 	wrlong	#113, objptr
01700                 | ' channel5[7]:=2
01700     04 0E 06 F1 | 	add	objptr, #4
01704     07 05 68 FC | 	wrlong	#2, objptr
01708                 | ' 
01708                 | ' channel6[0]:=@null
01708     08 0E 06 F1 | 	add	objptr, #8
0170c     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01710                 | ' channel6[1]:=0
01710     04 0E 06 F1 | 	add	objptr, #4
01714     07 01 68 FC | 	wrlong	#0, objptr
01718                 | ' channel6[2]:=0
01718     04 0E 06 F1 | 	add	objptr, #4
0171c     07 01 68 FC | 	wrlong	#0, objptr
01720                 | ' channel6[3]:=2
01720     04 0E 06 F1 | 	add	objptr, #4
01724     07 05 68 FC | 	wrlong	#2, objptr
01728                 | ' channel6[4]:=0
01728     04 0E 06 F1 | 	add	objptr, #4
0172c     07 01 68 FC | 	wrlong	#0, objptr
01730                 | ' channel6[5]:=8192
01730     04 0E 06 F1 | 	add	objptr, #4
01734     10 00 80 FF 
01738     07 01 68 FC | 	wrlong	##8192, objptr
0173c                 | ' channel6[6]:=127
0173c     04 0E 06 F1 | 	add	objptr, #4
01740     07 FF 68 FC | 	wrlong	#127, objptr
01744                 | ' channel6[7]:=2
01744     04 0E 06 F1 | 	add	objptr, #4
01748     07 05 68 FC | 	wrlong	#2, objptr
0174c                 | ' 
0174c                 | ' channel7[0]:=@null
0174c     08 0E 06 F1 | 	add	objptr, #8
01750     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01754                 | ' channel7[1]:=0
01754     04 0E 06 F1 | 	add	objptr, #4
01758     07 01 68 FC | 	wrlong	#0, objptr
0175c                 | ' channel7[2]:=0
0175c     04 0E 06 F1 | 	add	objptr, #4
01760     07 01 68 FC | 	wrlong	#0, objptr
01764                 | ' channel7[3]:=2
01764     04 0E 06 F1 | 	add	objptr, #4
01768     07 05 68 FC | 	wrlong	#2, objptr
0176c                 | ' channel7[4]:=0
0176c     04 0E 06 F1 | 	add	objptr, #4
01770     07 01 68 FC | 	wrlong	#0, objptr
01774                 | ' channel7[5]:=8192
01774     04 0E 06 F1 | 	add	objptr, #4
01778     10 00 80 FF 
0177c     07 01 68 FC | 	wrlong	##8192, objptr
01780                 | ' channel7[6]:=131
01780     04 0E 06 F1 | 	add	objptr, #4
01784     07 07 69 FC | 	wrlong	#131, objptr
01788                 | ' channel7[7]:=2
01788     04 0E 06 F1 | 	add	objptr, #4
0178c     07 05 68 FC | 	wrlong	#2, objptr
01790                 | ' 
01790                 | ' channel8[0]:=@null
01790     08 0E 06 F1 | 	add	objptr, #8
01794     07 17 62 FC | 	wrlong	ptr__audio012_spin2_dat__, objptr
01798                 | ' channel8[1]:=0
01798     04 0E 06 F1 | 	add	objptr, #4
0179c     07 01 68 FC | 	wrlong	#0, objptr
017a0                 | ' channel8[2]:=0
017a0     04 0E 06 F1 | 	add	objptr, #4
017a4     07 01 68 FC | 	wrlong	#0, objptr
017a8                 | ' channel8[3]:=2
017a8     04 0E 06 F1 | 	add	objptr, #4
017ac     07 05 68 FC | 	wrlong	#2, objptr
017b0                 | ' channel8[4]:=0
017b0     04 0E 06 F1 | 	add	objptr, #4
017b4     07 01 68 FC | 	wrlong	#0, objptr
017b8                 | ' channel8[5]:=8192
017b8     04 0E 06 F1 | 	add	objptr, #4
017bc     10 00 80 FF 
017c0     07 01 68 FC | 	wrlong	##8192, objptr
017c4                 | ' channel8[6]:=137
017c4     04 0E 06 F1 | 	add	objptr, #4
017c8     07 13 69 FC | 	wrlong	#137, objptr
017cc                 | ' channel8[7]:=2
017cc     04 0E 06 F1 | 	add	objptr, #4
017d0     07 05 68 FC | 	wrlong	#2, objptr
017d4                 | ' 
017d4                 | ' channel1[8]:=1
017d4     F8 0E 86 F1 | 	sub	objptr, #248
017d8     07 03 68 FC | 	wrlong	#1, objptr
017dc                 | ' channel2[8]:=1
017dc     24 0E 06 F1 | 	add	objptr, #36
017e0     07 03 68 FC | 	wrlong	#1, objptr
017e4                 | ' channel3[8]:=1
017e4     24 0E 06 F1 | 	add	objptr, #36
017e8     07 03 68 FC | 	wrlong	#1, objptr
017ec                 | ' channel4[8]:=1
017ec     24 0E 06 F1 | 	add	objptr, #36
017f0     07 03 68 FC | 	wrlong	#1, objptr
017f4                 | ' channel5[8]:=1
017f4     24 0E 06 F1 | 	add	objptr, #36
017f8     07 03 68 FC | 	wrlong	#1, objptr
017fc                 | ' channel6[8]:=1
017fc     24 0E 06 F1 | 	add	objptr, #36
01800     07 03 68 FC | 	wrlong	#1, objptr
01804                 | ' channel7[8]:=1
01804     24 0E 06 F1 | 	add	objptr, #36
01808     07 03 68 FC | 	wrlong	#1, objptr
0180c                 | ' channel8[8]:=1
0180c     24 0E 06 F1 | 	add	objptr, #36
01810     07 03 68 FC | 	wrlong	#1, objptr
01814     1C 0F 86 F1 | 	sub	objptr, #284
01818                 | ' 
01818                 | ' cog:=coginit(16,@audio,@channel1)
01818     03 00 00 FF 
0181c     E4 16 86 F1 | 	sub	ptr__audio012_spin2_dat__, ##1764
01820     0B 5F 02 F6 | 	mov	arg02, ptr__audio012_spin2_dat__
01824     07 61 02 F6 | 	mov	arg03, objptr
01828     10 5C 06 F6 | 	mov	arg01, #16
0182c     28 60 62 FD | 	setq	arg03
01830     2F 5D F2 FC | 	coginit	arg01, arg02 wc
01834     01 5C 66 C6 |  if_b	neg	arg01, #1
01838     2E 2B 02 F6 | 	mov	result1, arg01
0183c                 | ' return cog
0183c     B0 0F 06 F1 | 	add	objptr, #432
01840     07 01 68 FC | 	wrlong	#0, objptr
01844     04 0E 06 F1 | 	add	objptr, #4
01848     07 01 68 FC | 	wrlong	#0, objptr
0184c     04 0E 06 F1 | 	add	objptr, #4
01850     07 01 68 FC | 	wrlong	#0, objptr
01854     04 0E 06 F1 | 	add	objptr, #4
01858     07 01 68 FC | 	wrlong	#0, objptr
0185c     04 00 00 FF 
01860     E8 0E 86 F1 | 	sub	objptr, ##2280
01864                 | ' getinfo(ma,samples)
01864                 | ' 
01864                 | ' paula.start
01864                 | ' 
01864                 | ' old1=0 : old2=0 :old3=0 : old4=0
01864                 | ' 
01864                 | ' do
01864                 | LR__0016
01864                 | ' 
01864                 | ' ''---------- Wait for start of vblank. Amount=delay in frames
01864                 | ' 
01864                 | ' repeat i from 1 to amount
01864     01 CC 06 F6 | 	mov	local50, #1
01868                 | LR__0017
01868                 | '   repeat until vblank==0
01868                 | LR__0018
01868     40 0E 06 F1 | 	add	objptr, #64
0186c     07 CF 0A FB | 	rdlong	local51, objptr wz
01870     40 0E 86 F1 | 	sub	objptr, #64
01874     0C 00 90 AD |  if_e	jmp	#LR__0019
01878                 | '     waitus(100)
01878     64 5C 06 F6 | 	mov	arg01, #100
0187c     3C 49 B0 FD | 	call	#__system___waitus
01880     E4 FF 9F FD | 	jmp	#LR__0018
01884                 | LR__0019
01884                 | '   repeat until vblank==1
01884                 | LR__0020
01884     40 0E 06 F1 | 	add	objptr, #64
01888     07 CF 02 FB | 	rdlong	local51, objptr
0188c     40 0E 86 F1 | 	sub	objptr, #64
01890     01 CE 0E F2 | 	cmp	local51, #1 wz
01894     0C 00 90 AD |  if_e	jmp	#LR__0021
01898                 | '     waitus(100)
01898     64 5C 06 F6 | 	mov	arg01, #100
0189c     1C 49 B0 FD | 	call	#__system___waitus
018a0     E0 FF 9F FD | 	jmp	#LR__0020
018a4                 | LR__0021
018a4     F0 CD 6E FB | 	djnz	local50, #LR__0017
018a8     02 00 00 FF 
018ac     30 0F 06 F1 | 	add	objptr, ##1328
018b0     FC 28 B0 FD | 	call	#_trackerplayer_spin2_tick
018b4     A7 0E 06 F1 | 	add	objptr, #167
018b8     07 7D 02 FB | 	rdlong	local10, objptr
018bc     55 0F 06 F1 | 	add	objptr, #341
018c0     07 7D 62 FC | 	wrlong	local10, objptr
018c4     04 0E 06 F1 | 	add	objptr, #4
018c8     07 03 68 FC | 	wrlong	#1, objptr
018cc     45 0F 86 F1 | 	sub	objptr, #325
018d0     07 7D E2 FA | 	rdword	local10, objptr
018d4     08 0E 06 F1 | 	add	objptr, #8
018d8     07 D1 02 FB | 	rdlong	local52, objptr
018dc     68 7D 82 F1 | 	sub	local10, local52
018e0     41 0F 06 F1 | 	add	objptr, #321
018e4     07 7D 62 FC | 	wrlong	local10, objptr
018e8     49 0F 86 F1 | 	sub	objptr, #329
018ec     07 7D E2 FA | 	rdword	local10, objptr
018f0     4D 0F 06 F1 | 	add	objptr, #333
018f4     07 7D 62 FC | 	wrlong	local10, objptr
018f8     09 0F 86 F1 | 	sub	objptr, #265
018fc     07 D3 02 FB | 	rdlong	local53, objptr
01900     10 0E 06 F1 | 	add	objptr, #16
01904     07 D1 02 FB | 	rdlong	local52, objptr
01908     68 D3 02 F1 | 	add	local53, local52
0190c     07 D2 66 F0 | 	shl	local53, #7
01910     FD 0E 06 F1 | 	add	objptr, #253
01914     07 D3 62 FC | 	wrlong	local53, objptr
01918     04 0E 06 F1 | 	add	objptr, #4
0191c     0C 00 80 FF 
01920     07 01 68 FC | 	wrlong	##6144, objptr
01924     31 0F 86 F1 | 	sub	objptr, #305
01928     07 7D 02 FB | 	rdlong	local10, objptr
0192c     10 0E 06 F1 | 	add	objptr, #16
01930     07 D1 02 FB | 	rdlong	local52, objptr
01934     68 7D 02 F1 | 	add	local10, local52
01938     25 0F 06 F1 | 	add	objptr, #293
0193c     07 7D 62 FC | 	wrlong	local10, objptr
01940     04 0E 06 F1 | 	add	objptr, #4
01944     07 03 68 FC | 	wrlong	#1, objptr
01948                 | ' 
01948                 | '     waitvbl
01948                 | '     tracker.tick
01948                 | '     
01948                 | ' 	paula.channel1(0)=tracker.currSamplePtr(0)
01948                 | ' 	paula.channel1(1)=1
01948                 | ' 	paula.channel1(2)=tracker.currsamplelength(0)-tracker.currrepeatLength(0)
01948                 | ' 	paula.channel1(3)=tracker.currsamplelength(0)
01948                 | ' 	paula.channel1(4)=(tracker.currVolume(0)+tracker.deltavolume(0))*128
01948                 | ' 	paula.channel1(5)=8192-2048
01948                 | ' 	paula.channel1(6)=tracker.currPeriod(0)+tracker.deltaperiod(0)
01948                 | ' 	paula.channel1(7)=1
01948                 | '     if tracker.trigger(0) <> old1 then paula.channel1(8)=0 :waitus 10 : paula.channel1(8)=1 :old1=tracker.trigger(0)
01948     22 0E 86 F1 | 	sub	objptr, #34
0194c     07 7D C2 FA | 	rdbyte	local10, objptr
01950     B6 0F 06 F1 | 	add	objptr, #438
01954     07 D1 02 FB | 	rdlong	local52, objptr
01958     04 00 00 FF 
0195c     DC 0E 86 F1 | 	sub	objptr, ##2268
01960     68 7D 0A F2 | 	cmp	local10, local52 wz
01964     40 00 90 AD |  if_e	jmp	#LR__0022
01968     03 00 00 FF 
0196c     4C 0F 06 F1 | 	add	objptr, ##1868
01970     07 01 68 FC | 	wrlong	#0, objptr
01974     03 00 00 FF 
01978     4C 0F 86 F1 | 	sub	objptr, ##1868
0197c     0A 5C 06 F6 | 	mov	arg01, #10
01980     38 48 B0 FD | 	call	#__system___waitus
01984     03 00 00 FF 
01988     4C 0F 06 F1 | 	add	objptr, ##1868
0198c     07 03 68 FC | 	wrlong	#1, objptr
01990     26 0E 86 F1 | 	sub	objptr, #38
01994     07 7D C2 FA | 	rdbyte	local10, objptr
01998     B6 0F 06 F1 | 	add	objptr, #438
0199c     07 7D 62 FC | 	wrlong	local10, objptr
019a0     04 00 00 FF 
019a4     DC 0E 86 F1 | 	sub	objptr, ##2268
019a8                 | LR__0022
019a8     03 00 00 FF 
019ac     50 0F 06 F1 | 	add	objptr, ##1872
019b0     07 7D 02 FB | 	rdlong	local10, objptr
019b4     9C 0F 06 F1 | 	add	objptr, #412
019b8     07 7D 62 FC | 	wrlong	local10, objptr
019bc     01 00 00 FF 
019c0     11 0F 86 F1 | 	sub	objptr, ##785
019c4     07 7D 02 FB | 	rdlong	local10, objptr
019c8     75 0F 06 F1 | 	add	objptr, #373
019cc     07 7D 62 FC | 	wrlong	local10, objptr
019d0     04 0E 06 F1 | 	add	objptr, #4
019d4     07 03 68 FC | 	wrlong	#1, objptr
019d8     67 0F 86 F1 | 	sub	objptr, #359
019dc     07 7D E2 FA | 	rdword	local10, objptr
019e0     0A 0E 06 F1 | 	add	objptr, #10
019e4     07 D1 02 FB | 	rdlong	local52, objptr
019e8     68 7D 82 F1 | 	sub	local10, local52
019ec     61 0F 06 F1 | 	add	objptr, #353
019f0     07 7D 62 FC | 	wrlong	local10, objptr
019f4     6B 0F 86 F1 | 	sub	objptr, #363
019f8     07 7D E2 FA | 	rdword	local10, objptr
019fc     6F 0F 06 F1 | 	add	objptr, #367
01a00     07 7D 62 FC | 	wrlong	local10, objptr
01a04     29 0F 86 F1 | 	sub	objptr, #297
01a08     07 D3 02 FB | 	rdlong	local53, objptr
01a0c     10 0E 06 F1 | 	add	objptr, #16
01a10     07 D1 02 FB | 	rdlong	local52, objptr
01a14     68 D3 02 F1 | 	add	local53, local52
01a18     07 D2 66 F0 | 	shl	local53, #7
01a1c     1D 0F 06 F1 | 	add	objptr, #285
01a20     07 D3 62 FC | 	wrlong	local53, objptr
01a24     04 0E 06 F1 | 	add	objptr, #4
01a28     14 00 80 FF 
01a2c     07 01 68 FC | 	wrlong	##10240, objptr
01a30     51 0F 86 F1 | 	sub	objptr, #337
01a34     07 7D 02 FB | 	rdlong	local10, objptr
01a38     10 0E 06 F1 | 	add	objptr, #16
01a3c     07 D1 02 FB | 	rdlong	local52, objptr
01a40     68 7D 02 F1 | 	add	local10, local52
01a44     45 0F 06 F1 | 	add	objptr, #325
01a48     07 7D 62 FC | 	wrlong	local10, objptr
01a4c     04 0E 06 F1 | 	add	objptr, #4
01a50     07 03 68 FC | 	wrlong	#1, objptr
01a54                 | ' 
01a54                 | '     old12=paula.channel2(0)
01a54                 | ' 	paula.channel2(0)=tracker.currSamplePtr(1)
01a54                 | ' 	paula.channel2(1)=1
01a54                 | ' 	paula.channel2(2)=tracker.currSampleLength(1)-tracker.currrepeatLength(1)
01a54                 | ' 	paula.channel2(3)=tracker.currSampleLength(1)
01a54                 | ' 	paula.channel2(4)=(tracker.currVolume(1)+tracker.deltavolume(1))*128
01a54                 | ' 	paula.channel2(5)=8192+2048
01a54                 | ' 	paula.channel2(6)=tracker.currPeriod(1)+tracker.deltaperiod(1)
01a54                 | ' 	paula.channel2(7)=1
01a54                 | '     if tracker.trigger(1) <> old2 then paula.channel2(8)=0 :waitus 10 : paula.channel2(8)=1 :old2=tracker.trigger(1)
01a54     45 0E 86 F1 | 	sub	objptr, #69
01a58     07 7D C2 FA | 	rdbyte	local10, objptr
01a5c     B9 0F 06 F1 | 	add	objptr, #441
01a60     07 D1 02 FB | 	rdlong	local52, objptr
01a64     04 00 00 FF 
01a68     E0 0E 86 F1 | 	sub	objptr, ##2272
01a6c     68 7D 0A F2 | 	cmp	local10, local52 wz
01a70     40 00 90 AD |  if_e	jmp	#LR__0023
01a74     03 00 00 FF 
01a78     70 0F 06 F1 | 	add	objptr, ##1904
01a7c     07 01 68 FC | 	wrlong	#0, objptr
01a80     03 00 00 FF 
01a84     70 0F 86 F1 | 	sub	objptr, ##1904
01a88     0A 5C 06 F6 | 	mov	arg01, #10
01a8c     2C 47 B0 FD | 	call	#__system___waitus
01a90     03 00 00 FF 
01a94     70 0F 06 F1 | 	add	objptr, ##1904
01a98     07 03 68 FC | 	wrlong	#1, objptr
01a9c     49 0E 86 F1 | 	sub	objptr, #73
01aa0     07 7D C2 FA | 	rdbyte	local10, objptr
01aa4     B9 0F 06 F1 | 	add	objptr, #441
01aa8     07 7D 62 FC | 	wrlong	local10, objptr
01aac     04 00 00 FF 
01ab0     E0 0E 86 F1 | 	sub	objptr, ##2272
01ab4                 | LR__0023
01ab4     03 00 00 FF 
01ab8     74 0F 06 F1 | 	add	objptr, ##1908
01abc     07 7D 02 FB | 	rdlong	local10, objptr
01ac0     7C 0F 06 F1 | 	add	objptr, #380
01ac4     07 7D 62 FC | 	wrlong	local10, objptr
01ac8     01 00 00 FF 
01acc     11 0F 86 F1 | 	sub	objptr, ##785
01ad0     07 7D 02 FB | 	rdlong	local10, objptr
01ad4     95 0F 06 F1 | 	add	objptr, #405
01ad8     07 7D 62 FC | 	wrlong	local10, objptr
01adc     04 0E 06 F1 | 	add	objptr, #4
01ae0     07 03 68 FC | 	wrlong	#1, objptr
01ae4     89 0F 86 F1 | 	sub	objptr, #393
01ae8     07 7D E2 FA | 	rdword	local10, objptr
01aec     0C 0E 06 F1 | 	add	objptr, #12
01af0     07 D1 02 FB | 	rdlong	local52, objptr
01af4     68 7D 82 F1 | 	sub	local10, local52
01af8     81 0F 06 F1 | 	add	objptr, #385
01afc     07 7D 62 FC | 	wrlong	local10, objptr
01b00     8D 0F 86 F1 | 	sub	objptr, #397
01b04     07 7D E2 FA | 	rdword	local10, objptr
01b08     91 0F 06 F1 | 	add	objptr, #401
01b0c     07 7D 62 FC | 	wrlong	local10, objptr
01b10     49 0F 86 F1 | 	sub	objptr, #329
01b14     07 D3 02 FB | 	rdlong	local53, objptr
01b18     10 0E 06 F1 | 	add	objptr, #16
01b1c     07 D1 02 FB | 	rdlong	local52, objptr
01b20     68 D3 02 F1 | 	add	local53, local52
01b24     07 D2 66 F0 | 	shl	local53, #7
01b28     3D 0F 06 F1 | 	add	objptr, #317
01b2c     07 D3 62 FC | 	wrlong	local53, objptr
01b30     04 0E 06 F1 | 	add	objptr, #4
01b34     14 00 80 FF 
01b38     07 01 68 FC | 	wrlong	##10240, objptr
01b3c     71 0F 86 F1 | 	sub	objptr, #369
01b40     07 7D 02 FB | 	rdlong	local10, objptr
01b44     10 0E 06 F1 | 	add	objptr, #16
01b48     07 D1 02 FB | 	rdlong	local52, objptr
01b4c     68 7D 02 F1 | 	add	local10, local52
01b50     65 0F 06 F1 | 	add	objptr, #357
01b54     07 7D 62 FC | 	wrlong	local10, objptr
01b58     04 0E 06 F1 | 	add	objptr, #4
01b5c     07 03 68 FC | 	wrlong	#1, objptr
01b60                 | ' 
01b60                 | '     old13=paula.channel3(0)
01b60                 | ' 	paula.channel3(0)=tracker.currSamplePtr(2)
01b60                 | ' 	paula.channel3(1)=1
01b60                 | ' 	paula.channel3(2)=tracker.currSampleLength(2)-tracker.currrepeatLength(2)
01b60                 | ' 	paula.channel3(3)=tracker.currSampleLength(2)
01b60                 | ' 	paula.channel3(4)=(tracker.currVolume(2)+tracker.deltavolume(2))*128
01b60                 | ' 	paula.channel3(5)=8192+2048
01b60                 | ' 	paula.channel3(6)=tracker.currPeriod(2)+tracker.deltaperiod(2)
01b60                 | ' 	paula.channel3(7)=1
01b60                 | '     if tracker.trigger(2) <> old3 then paula.channel3(8)=0 :waitus 10 : paula.channel3(8)=1 :old3=tracker.trigger(2)
01b60     68 0E 86 F1 | 	sub	objptr, #104
01b64     07 7D C2 FA | 	rdbyte	local10, objptr
01b68     BC 0F 06 F1 | 	add	objptr, #444
01b6c     07 D1 02 FB | 	rdlong	local52, objptr
01b70     04 00 00 FF 
01b74     E4 0E 86 F1 | 	sub	objptr, ##2276
01b78     68 7D 0A F2 | 	cmp	local10, local52 wz
01b7c     40 00 90 AD |  if_e	jmp	#LR__0024
01b80     03 00 00 FF 
01b84     94 0F 06 F1 | 	add	objptr, ##1940
01b88     07 01 68 FC | 	wrlong	#0, objptr
01b8c     03 00 00 FF 
01b90     94 0F 86 F1 | 	sub	objptr, ##1940
01b94     0A 5C 06 F6 | 	mov	arg01, #10
01b98     20 46 B0 FD | 	call	#__system___waitus
01b9c     03 00 00 FF 
01ba0     94 0F 06 F1 | 	add	objptr, ##1940
01ba4     07 03 68 FC | 	wrlong	#1, objptr
01ba8     6C 0E 86 F1 | 	sub	objptr, #108
01bac     07 7D C2 FA | 	rdbyte	local10, objptr
01bb0     BC 0F 06 F1 | 	add	objptr, #444
01bb4     07 7D 62 FC | 	wrlong	local10, objptr
01bb8     04 00 00 FF 
01bbc     E4 0E 86 F1 | 	sub	objptr, ##2276
01bc0                 | LR__0024
01bc0     03 00 00 FF 
01bc4     98 0F 06 F1 | 	add	objptr, ##1944
01bc8     07 7D 02 FB | 	rdlong	local10, objptr
01bcc     5C 0F 06 F1 | 	add	objptr, #348
01bd0     07 7D 62 FC | 	wrlong	local10, objptr
01bd4     01 00 00 FF 
01bd8     11 0F 86 F1 | 	sub	objptr, ##785
01bdc     07 7D 02 FB | 	rdlong	local10, objptr
01be0     B5 0F 06 F1 | 	add	objptr, #437
01be4     07 7D 62 FC | 	wrlong	local10, objptr
01be8     04 0E 06 F1 | 	add	objptr, #4
01bec     07 03 68 FC | 	wrlong	#1, objptr
01bf0     AB 0F 86 F1 | 	sub	objptr, #427
01bf4     07 7D E2 FA | 	rdword	local10, objptr
01bf8     0E 0E 06 F1 | 	add	objptr, #14
01bfc     07 D1 02 FB | 	rdlong	local52, objptr
01c00     68 7D 82 F1 | 	sub	local10, local52
01c04     A1 0F 06 F1 | 	add	objptr, #417
01c08     07 7D 62 FC | 	wrlong	local10, objptr
01c0c     AF 0F 86 F1 | 	sub	objptr, #431
01c10     07 7D E2 FA | 	rdword	local10, objptr
01c14     B3 0F 06 F1 | 	add	objptr, #435
01c18     07 7D 62 FC | 	wrlong	local10, objptr
01c1c     69 0F 86 F1 | 	sub	objptr, #361
01c20     07 D3 02 FB | 	rdlong	local53, objptr
01c24     10 0E 06 F1 | 	add	objptr, #16
01c28     07 D1 02 FB | 	rdlong	local52, objptr
01c2c     68 D3 02 F1 | 	add	local53, local52
01c30     07 D2 66 F0 | 	shl	local53, #7
01c34     5D 0F 06 F1 | 	add	objptr, #349
01c38     07 D3 62 FC | 	wrlong	local53, objptr
01c3c     04 0E 06 F1 | 	add	objptr, #4
01c40     0C 00 80 FF 
01c44     07 01 68 FC | 	wrlong	##6144, objptr
01c48     91 0F 86 F1 | 	sub	objptr, #401
01c4c     07 7D 02 FB | 	rdlong	local10, objptr
01c50     10 0E 06 F1 | 	add	objptr, #16
01c54     07 D1 02 FB | 	rdlong	local52, objptr
01c58     68 7D 02 F1 | 	add	local10, local52
01c5c     85 0F 06 F1 | 	add	objptr, #389
01c60     07 7D 62 FC | 	wrlong	local10, objptr
01c64     04 0E 06 F1 | 	add	objptr, #4
01c68     07 03 68 FC | 	wrlong	#1, objptr
01c6c                 | ' 
01c6c                 | '     old14=paula.channel4(0)    
01c6c                 | ' 	paula.channel4(0)=tracker.currSamplePtr(3)
01c6c                 | ' 	paula.channel4(1)=1
01c6c                 | ' 	paula.channel4(2)=tracker.currSampleLength(3)-tracker.currrepeatLength(3)
01c6c                 | ' 	paula.channel4(3)=tracker.currSampleLength(3)
01c6c                 | ' 	paula.channel4(4)=(tracker.currVolume(3)+tracker.deltavolume(3))*128
01c6c                 | ' 	paula.channel4(5)=8192-2048
01c6c                 | ' 	paula.channel4(6)=tracker.currPeriod(3)+tracker.deltaperiod(3)
01c6c                 | ' 	paula.channel4(7)=1
01c6c                 | '     if tracker.trigger(3) <> old4 then paula.channel4(8)=0 :waitus 10 : paula.channel4(8)=1 :old4=tracker.trigger(3)
01c6c     8B 0E 86 F1 | 	sub	objptr, #139
01c70     07 7D C2 FA | 	rdbyte	local10, objptr
01c74     BF 0F 06 F1 | 	add	objptr, #447
01c78     07 D1 02 FB | 	rdlong	local52, objptr
01c7c     04 00 00 FF 
01c80     E8 0E 86 F1 | 	sub	objptr, ##2280
01c84     68 7D 0A F2 | 	cmp	local10, local52 wz
01c88     40 00 90 AD |  if_e	jmp	#LR__0025
01c8c     03 00 00 FF 
01c90     B8 0F 06 F1 | 	add	objptr, ##1976
01c94     07 01 68 FC | 	wrlong	#0, objptr
01c98     03 00 00 FF 
01c9c     B8 0F 86 F1 | 	sub	objptr, ##1976
01ca0     0A 5C 06 F6 | 	mov	arg01, #10
01ca4     14 45 B0 FD | 	call	#__system___waitus
01ca8     03 00 00 FF 
01cac     B8 0F 06 F1 | 	add	objptr, ##1976
01cb0     07 03 68 FC | 	wrlong	#1, objptr
01cb4     8F 0E 86 F1 | 	sub	objptr, #143
01cb8     07 7D C2 FA | 	rdbyte	local10, objptr
01cbc     BF 0F 06 F1 | 	add	objptr, #447
01cc0     07 7D 62 FC | 	wrlong	local10, objptr
01cc4     04 00 00 FF 
01cc8     E8 0E 86 F1 | 	sub	objptr, ##2280
01ccc                 | LR__0025
01ccc     1D 5E 06 F6 | 	mov	arg02, #29
01cd0                 | ' 
01cd0                 | ' ''---------- Set the (x,y) position of cursor
01cd0                 | ' 
01cd0                 | ' cursor_x:=x
01cd0     34 0E 06 F1 | 	add	objptr, #52
01cd4     07 0B 48 FC | 	wrbyte	#5, objptr
01cd8                 | ' cursor_y:=y
01cd8     01 0E 06 F1 | 	add	objptr, #1
01cdc     07 3B 48 FC | 	wrbyte	#29, objptr
01ce0     02 00 00 FF 
01ce4     B2 0F 06 F1 | 	add	objptr, ##1458
01ce8     07 D5 C2 FA | 	rdbyte	local54, objptr
01cec     02 D4 66 F0 | 	shl	local54, #2
01cf0     01 00 00 FF 
01cf4     65 0E 06 F1 | 	add	objptr, ##613
01cf8     07 D5 02 F1 | 	add	local54, objptr
01cfc     6A 5D 02 FB | 	rdlong	arg01, local54
01d00     04 00 00 FF 
01d04     4C 0E 86 F1 | 	sub	objptr, ##2124
01d08     B4 09 B0 FD | 	call	#_hng030rm_spin2_write
01d0c     04 00 00 FF 
01d10     D0 0E 06 F1 | 	add	objptr, ##2256
01d14     07 5D 02 FB | 	rdlong	arg01, objptr
01d18     04 00 00 FF 
01d1c     D0 0E 86 F1 | 	sub	objptr, ##2256
01d20     9C 09 B0 FD | 	call	#_hng030rm_spin2_write
01d24                 | ' 
01d24                 | ' ''---------- Set the (x,y) position of cursor
01d24                 | ' 
01d24                 | ' cursor_x:=x
01d24     34 0E 06 F1 | 	add	objptr, #52
01d28     07 03 48 FC | 	wrbyte	#1, objptr
01d2c                 | ' cursor_y:=y
01d2c     01 0E 06 F1 | 	add	objptr, #1
01d30     07 3B 48 FC | 	wrbyte	#29, objptr
01d34     02 00 00 FF 
01d38     DA 0F 06 F1 | 	add	objptr, ##1498
01d3c     07 5D 02 FB | 	rdlong	arg01, objptr
01d40     10 0E 06 F1 | 	add	objptr, #16
01d44     07 D5 02 FB | 	rdlong	local54, objptr
01d48     03 00 00 FF 
01d4c     1F 0E 86 F1 | 	sub	objptr, ##1567
01d50     6A 5D 02 F1 | 	add	arg01, local54
01d54     03 5E 06 F6 | 	mov	arg02, #3
01d58     E0 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01d5c     15 5D 02 F6 | 	mov	arg01, result1
01d60     5C 09 B0 FD | 	call	#_hng030rm_spin2_write
01d64     1D 5E 06 F6 | 	mov	arg02, #29
01d68                 | ' 
01d68                 | ' ''---------- Set the (x,y) position of cursor
01d68                 | ' 
01d68                 | ' cursor_x:=x
01d68     34 0E 06 F1 | 	add	objptr, #52
01d6c     07 41 48 FC | 	wrbyte	#32, objptr
01d70                 | ' cursor_y:=y
01d70     01 0E 06 F1 | 	add	objptr, #1
01d74     07 3B 48 FC | 	wrbyte	#29, objptr
01d78     02 00 00 FF 
01d7c     B3 0F 06 F1 | 	add	objptr, ##1459
01d80     07 D5 C2 FA | 	rdbyte	local54, objptr
01d84     02 D4 66 F0 | 	shl	local54, #2
01d88     01 00 00 FF 
01d8c     64 0E 06 F1 | 	add	objptr, ##612
01d90     07 D5 02 F1 | 	add	local54, objptr
01d94     6A 5D 02 FB | 	rdlong	arg01, local54
01d98     04 00 00 FF 
01d9c     4C 0E 86 F1 | 	sub	objptr, ##2124
01da0     1C 09 B0 FD | 	call	#_hng030rm_spin2_write
01da4     04 00 00 FF 
01da8     D0 0E 06 F1 | 	add	objptr, ##2256
01dac     07 5D 02 FB | 	rdlong	arg01, objptr
01db0     04 00 00 FF 
01db4     D0 0E 86 F1 | 	sub	objptr, ##2256
01db8     04 09 B0 FD | 	call	#_hng030rm_spin2_write
01dbc                 | ' 
01dbc                 | ' ''---------- Set the (x,y) position of cursor
01dbc                 | ' 
01dbc                 | ' cursor_x:=x
01dbc     34 0E 06 F1 | 	add	objptr, #52
01dc0     07 39 48 FC | 	wrbyte	#28, objptr
01dc4                 | ' cursor_y:=y
01dc4     01 0E 06 F1 | 	add	objptr, #1
01dc8     07 3B 48 FC | 	wrbyte	#29, objptr
01dcc     02 00 00 FF 
01dd0     DE 0F 06 F1 | 	add	objptr, ##1502
01dd4     07 5D 02 FB | 	rdlong	arg01, objptr
01dd8     10 0E 06 F1 | 	add	objptr, #16
01ddc     07 D5 02 FB | 	rdlong	local54, objptr
01de0     03 00 00 FF 
01de4     23 0E 86 F1 | 	sub	objptr, ##1571
01de8     6A 5D 02 F1 | 	add	arg01, local54
01dec     03 5E 06 F6 | 	mov	arg02, #3
01df0     48 0B B0 FD | 	call	#_hng030rm_spin2_inttostr2
01df4     15 5D 02 F6 | 	mov	arg01, result1
01df8     C4 08 B0 FD | 	call	#_hng030rm_spin2_write
01dfc     1D 5E 06 F6 | 	mov	arg02, #29
01e00                 | ' 
01e00                 | ' ''---------- Set the (x,y) position of cursor
01e00                 | ' 
01e00                 | ' cursor_x:=x
01e00     34 0E 06 F1 | 	add	objptr, #52
01e04     07 79 48 FC | 	wrbyte	#60, objptr
01e08                 | ' cursor_y:=y
01e08     01 0E 06 F1 | 	add	objptr, #1
01e0c     07 3B 48 FC | 	wrbyte	#29, objptr
01e10     02 00 00 FF 
01e14     B4 0F 06 F1 | 	add	objptr, ##1460
01e18     07 D5 C2 FA | 	rdbyte	local54, objptr
01e1c     02 D4 66 F0 | 	shl	local54, #2
01e20     01 00 00 FF 
01e24     63 0E 06 F1 | 	add	objptr, ##611
01e28     07 D5 02 F1 | 	add	local54, objptr
01e2c     6A 5D 02 FB | 	rdlong	arg01, local54
01e30     04 00 00 FF 
01e34     4C 0E 86 F1 | 	sub	objptr, ##2124
01e38     84 08 B0 FD | 	call	#_hng030rm_spin2_write
01e3c     04 00 00 FF 
01e40     D0 0E 06 F1 | 	add	objptr, ##2256
01e44     07 5D 02 FB | 	rdlong	arg01, objptr
01e48     04 00 00 FF 
01e4c     D0 0E 86 F1 | 	sub	objptr, ##2256
01e50     6C 08 B0 FD | 	call	#_hng030rm_spin2_write
01e54                 | ' 
01e54                 | ' ''---------- Set the (x,y) position of cursor
01e54                 | ' 
01e54                 | ' cursor_x:=x
01e54     34 0E 06 F1 | 	add	objptr, #52
01e58     07 71 48 FC | 	wrbyte	#56, objptr
01e5c                 | ' cursor_y:=y
01e5c     01 0E 06 F1 | 	add	objptr, #1
01e60     07 3B 48 FC | 	wrbyte	#29, objptr
01e64     02 00 00 FF 
01e68     E2 0F 06 F1 | 	add	objptr, ##1506
01e6c     07 5D 02 FB | 	rdlong	arg01, objptr
01e70     10 0E 06 F1 | 	add	objptr, #16
01e74     07 D5 02 FB | 	rdlong	local54, objptr
01e78     03 00 00 FF 
01e7c     27 0E 86 F1 | 	sub	objptr, ##1575
01e80     6A 5D 02 F1 | 	add	arg01, local54
01e84     03 5E 06 F6 | 	mov	arg02, #3
01e88     B0 0A B0 FD | 	call	#_hng030rm_spin2_inttostr2
01e8c     15 5D 02 F6 | 	mov	arg01, result1
01e90     2C 08 B0 FD | 	call	#_hng030rm_spin2_write
01e94                 | ' 
01e94                 | ' ''---------- Set the (x,y) position of cursor
01e94                 | ' 
01e94                 | ' cursor_x:=x
01e94     34 0E 06 F1 | 	add	objptr, #52
01e98     07 A9 48 FC | 	wrbyte	#84, objptr
01e9c                 | ' cursor_y:=y
01e9c     01 0E 06 F1 | 	add	objptr, #1
01ea0     07 3B 48 FC | 	wrbyte	#29, objptr
01ea4     02 00 00 FF 
01ea8     E6 0F 06 F1 | 	add	objptr, ##1510
01eac     07 5D 02 FB | 	rdlong	arg01, objptr
01eb0     10 0E 06 F1 | 	add	objptr, #16
01eb4     07 D5 02 FB | 	rdlong	local54, objptr
01eb8     03 00 00 FF 
01ebc     2B 0E 86 F1 | 	sub	objptr, ##1579
01ec0     6A 5D 02 F1 | 	add	arg01, local54
01ec4     03 5E 06 F6 | 	mov	arg02, #3
01ec8     70 0A B0 FD | 	call	#_hng030rm_spin2_inttostr2
01ecc     15 5D 02 F6 | 	mov	arg01, result1
01ed0     EC 07 B0 FD | 	call	#_hng030rm_spin2_write
01ed4     1D 5E 06 F6 | 	mov	arg02, #29
01ed8                 | ' 
01ed8                 | ' ''---------- Set the (x,y) position of cursor
01ed8                 | ' 
01ed8                 | ' cursor_x:=x
01ed8     34 0E 06 F1 | 	add	objptr, #52
01edc     07 B1 48 FC | 	wrbyte	#88, objptr
01ee0                 | ' cursor_y:=y
01ee0     01 0E 06 F1 | 	add	objptr, #1
01ee4     07 3B 48 FC | 	wrbyte	#29, objptr
01ee8     02 00 00 FF 
01eec     B5 0F 06 F1 | 	add	objptr, ##1461
01ef0     07 D5 C2 FA | 	rdbyte	local54, objptr
01ef4     02 D4 66 F0 | 	shl	local54, #2
01ef8     01 00 00 FF 
01efc     62 0E 06 F1 | 	add	objptr, ##610
01f00     07 D5 02 F1 | 	add	local54, objptr
01f04     6A 5D 02 FB | 	rdlong	arg01, local54
01f08     04 00 00 FF 
01f0c     4C 0E 86 F1 | 	sub	objptr, ##2124
01f10     AC 07 B0 FD | 	call	#_hng030rm_spin2_write
01f14     04 00 00 FF 
01f18     D0 0E 06 F1 | 	add	objptr, ##2256
01f1c     07 5D 02 FB | 	rdlong	arg01, objptr
01f20     04 00 00 FF 
01f24     D0 0E 86 F1 | 	sub	objptr, ##2256
01f28     94 07 B0 FD | 	call	#_hng030rm_spin2_write
01f2c     01 5E 06 F6 | 	mov	arg02, #1
01f30                 | ' 
01f30                 | ' ''---------- Set the (x,y) position of cursor
01f30                 | ' 
01f30                 | ' cursor_x:=x
01f30     34 0E 06 F1 | 	add	objptr, #52
01f34     07 B5 48 FC | 	wrbyte	#90, objptr
01f38                 | ' cursor_y:=y
01f38     01 0E 06 F1 | 	add	objptr, #1
01f3c     07 03 48 FC | 	wrbyte	#1, objptr
01f40     35 0E 86 F1 | 	sub	objptr, #53
01f44     40 00 00 FF 
01f48     7A 5D 06 F6 | 	mov	arg01, ##@LR__0456
01f4c     70 07 B0 FD | 	call	#_hng030rm_spin2_write
01f50                 | ' asm
01f50     80 5C 06 FB | 	rdlong	arg01, #128
01f54                 | ' return r
01f54     08 5E 06 F6 | 	mov	arg02, #8
01f58                 | ' 
01f58                 | ' j:=i
01f58                 | ' pos:=d-1
01f58     07 D6 06 F6 | 	mov	local55, #7
01f5c                 | ' k:=0
01f5c     44 0E 06 F1 | 	add	objptr, #68
01f60     07 5F 02 F1 | 	add	arg02, objptr
01f64                 | ' n_string[d]:=0
01f64     2F 01 48 FC | 	wrbyte	#0, arg02
01f68                 | ' repeat k from 0 to d-1
01f68     00 D8 06 F6 | 	mov	local56, #0
01f6c     44 0E 86 F1 | 	sub	objptr, #68
01f70     AC E0 9F FE | 	loc	pa,	#(@LR__0027-@LR__0026)
01f74     93 00 A0 FD | 	call	#FCACHE_LOAD_
01f78                 | LR__0026
01f78     6C DB 02 F6 | 	mov	local57, local56
01f7c     44 0E 06 F1 | 	add	objptr, #68
01f80     07 DB 02 F1 | 	add	local57, objptr
01f84                 | '   n_string[k]:=48
01f84     6D 61 48 FC | 	wrbyte	#48, local57
01f88     01 D8 06 F1 | 	add	local56, #1
01f8c     08 D8 0E F2 | 	cmp	local56, #8 wz
01f90     44 0E 86 F1 | 	sub	objptr, #68
01f94     E0 FF 9F 5D |  if_ne	jmp	#LR__0026
01f98                 | LR__0027
01f98                 | ' if (j<>0)
01f98     00 5C 0E F2 | 	cmp	arg01, #0 wz
01f9c     40 00 90 AD |  if_e	jmp	#LR__0030
01fa0                 | ' 
01fa0                 | '   repeat while (pos>-1)
01fa0                 | LR__0028
01fa0     FF FF 7F FF 
01fa4     FF D7 5E F2 | 	cmps	local55, ##-1 wcz
01fa8     34 00 90 ED |  if_be	jmp	#LR__0029
01fac     2E DD 02 F6 | 	mov	local58, arg01
01fb0     0F DC 06 F5 | 	and	local58, #15
01fb4                 | '     q:=j+//16
01fb4                 | '     if (q>9)
01fb4     09 DC 5E F2 | 	cmps	local58, #9 wcz
01fb8                 | '       q:=q+7
01fb8     07 DC 06 11 |  if_a	add	local58, #7
01fbc                 | '     q:=48+q
01fbc     30 DC 06 F1 | 	add	local58, #48
01fc0     6B DF 02 F6 | 	mov	local59, local55
01fc4     44 0E 06 F1 | 	add	objptr, #68
01fc8     07 DF 02 F1 | 	add	local59, objptr
01fcc                 | '     n_string[pos]:=q
01fcc     6F DD 42 FC | 	wrbyte	local58, local59
01fd0                 | '     j:=j+/16
01fd0     04 5C 46 F0 | 	shr	arg01, #4
01fd4                 | '     pos-=1
01fd4     01 D6 86 F1 | 	sub	local55, #1
01fd8     44 0E 86 F1 | 	sub	objptr, #68
01fdc     C0 FF 9F FD | 	jmp	#LR__0028
01fe0                 | LR__0029
01fe0                 | LR__0030
01fe0     44 0E 06 F1 | 	add	objptr, #68
01fe4     07 2B 02 F6 | 	mov	result1, objptr
01fe8     44 0E 86 F1 | 	sub	objptr, #68
01fec                 | ' 
01fec                 | ' q:=@n_string
01fec                 | ' return q
01fec     15 5D 02 F6 | 	mov	arg01, result1
01ff0     CC 06 B0 FD | 	call	#_hng030rm_spin2_write
01ff4     6C F8 9F FD | 	jmp	#LR__0016
01ff8     AF F0 03 F6 | 	mov	ptra, fp
01ffc     BF 00 A0 FD | 	call	#popregs_
02000                 | _program_ret
02000     2D 00 64 FD | 	ret
02004                 | 
02004                 | ' 
02004                 | ' 
02004                 | ' ''---------- putpixel - put a pixel on the screen
02004                 | ' 
02004                 | ' pub putpixel1(x,y,c) |byte b
02004                 | _hng030rm_spin2_putpixel1
02004                 | ' 
02004                 | ' 
02004                 | ' if ((x>=0) & (x<32*cpl) & (y>=0) & (y<lines))
02004     00 30 06 F6 | 	mov	_var01, #0
02008     00 5C 5E F2 | 	cmps	arg01, #0 wcz
0200c     01 30 66 36 |  if_ae	neg	_var01, #1
02010     00 32 06 F6 | 	mov	_var02, #0
02014     90 0E 06 F1 | 	add	objptr, #144
02018     07 35 02 FB | 	rdlong	_var03, objptr
0201c     05 34 66 F0 | 	shl	_var03, #5
02020     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
02024     01 32 66 C6 |  if_b	neg	_var02, #1
02028     19 31 02 F5 | 	and	_var01, _var02
0202c     00 36 06 F6 | 	mov	_var04, #0
02030     00 5E 5E F2 | 	cmps	arg02, #0 wcz
02034     01 36 66 36 |  if_ae	neg	_var04, #1
02038     1B 31 02 F5 | 	and	_var01, _var04
0203c     00 38 06 F6 | 	mov	_var05, #0
02040     04 0E 06 F1 | 	add	objptr, #4
02044     07 3B 02 FB | 	rdlong	_var06, objptr
02048     94 0E 86 F1 | 	sub	objptr, #148
0204c     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02050     01 38 66 C6 |  if_b	neg	_var05, #1
02054     1C 31 CA F7 | 	test	_var01, _var05 wz
02058     8C 00 90 AD |  if_e	jmp	#LR__0033
0205c     90 0E 06 F1 | 	add	objptr, #144
02060     07 3D 02 FB | 	rdlong	_var07, objptr
02064     90 0E 86 F1 | 	sub	objptr, #144
02068     02 3C 66 F0 | 	shl	_var07, #2
0206c     2F 3D 02 FD | 	qmul	_var07, arg02
02070     18 3E 62 FD | 	getqx	_var08
02074     07 41 02 FB | 	rdlong	_var09, objptr
02078     1F 41 02 F1 | 	add	_var09, _var08
0207c     2E 43 02 F6 | 	mov	_var10, arg01
02080     03 42 46 F0 | 	shr	_var10, #3
02084     21 41 02 F1 | 	add	_var09, _var10
02088                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>3)]
02088     20 45 C2 FA | 	rdbyte	_var11, _var09
0208c                 | '     if (c==0)
0208c     00 60 0E F2 | 	cmp	arg03, #0 wz
02090     18 00 90 5D |  if_ne	jmp	#LR__0031
02094     2E 31 52 F6 | 	abs	_var01, arg01 wc
02098     07 30 06 F5 | 	and	_var01, #7
0209c     18 31 62 C6 |  if_b	neg	_var01, _var01
020a0     18 47 C2 F9 | 	decod	_var12, _var01
020a4                 | '       b:=b & !(1<<(x//8))
020a4     23 45 22 F5 | 	andn	_var11, _var12
020a8                 | '     else
020a8     14 00 90 FD | 	jmp	#LR__0032
020ac                 | LR__0031
020ac     2E 31 52 F6 | 	abs	_var01, arg01 wc
020b0     07 30 06 F5 | 	and	_var01, #7
020b4     18 31 62 C6 |  if_b	neg	_var01, _var01
020b8     18 49 C2 F9 | 	decod	_var13, _var01
020bc                 | '       b:=b |(1<<(x//8))
020bc     24 45 42 F5 | 	or	_var11, _var13
020c0                 | LR__0032
020c0     90 0E 06 F1 | 	add	objptr, #144
020c4     07 4B 02 FB | 	rdlong	_var14, objptr
020c8     90 0E 86 F1 | 	sub	objptr, #144
020cc     02 4A 66 F0 | 	shl	_var14, #2
020d0     2F 4B 02 FD | 	qmul	_var14, arg02
020d4     18 4C 62 FD | 	getqx	_var15
020d8     07 4F 02 FB | 	rdlong	_var16, objptr
020dc     26 4F 02 F1 | 	add	_var16, _var15
020e0     21 4F 02 F1 | 	add	_var16, _var10
020e4                 | '     byte[buf_ptr+4*cpl*y+(x>>3)]:=b
020e4     27 45 42 FC | 	wrbyte	_var11, _var16
020e8                 | LR__0033
020e8                 | _hng030rm_spin2_putpixel1_ret
020e8     2D 00 64 FD | 	ret
020ec                 | 
020ec                 | ' 
020ec                 | ' 
020ec                 | ' pub putpixel2(x,y,c) |byte b
020ec                 | _hng030rm_spin2_putpixel2
020ec                 | ' 
020ec                 | ' 
020ec                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
020ec     00 30 06 F6 | 	mov	_var01, #0
020f0     00 5C 5E F2 | 	cmps	arg01, #0 wcz
020f4     01 30 66 36 |  if_ae	neg	_var01, #1
020f8     00 32 06 F6 | 	mov	_var02, #0
020fc     90 0E 06 F1 | 	add	objptr, #144
02100     07 35 02 FB | 	rdlong	_var03, objptr
02104     04 34 66 F0 | 	shl	_var03, #4
02108     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
0210c     01 32 66 C6 |  if_b	neg	_var02, #1
02110     19 31 02 F5 | 	and	_var01, _var02
02114     00 36 06 F6 | 	mov	_var04, #0
02118     00 5E 5E F2 | 	cmps	arg02, #0 wcz
0211c     01 36 66 36 |  if_ae	neg	_var04, #1
02120     1B 31 02 F5 | 	and	_var01, _var04
02124     00 38 06 F6 | 	mov	_var05, #0
02128     04 0E 06 F1 | 	add	objptr, #4
0212c     07 3B 02 FB | 	rdlong	_var06, objptr
02130     94 0E 86 F1 | 	sub	objptr, #148
02134     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02138     01 38 66 C6 |  if_b	neg	_var05, #1
0213c     1C 31 CA F7 | 	test	_var01, _var05 wz
02140     7C 00 90 AD |  if_e	jmp	#LR__0034
02144     90 0E 06 F1 | 	add	objptr, #144
02148     07 3D 02 FB | 	rdlong	_var07, objptr
0214c     90 0E 86 F1 | 	sub	objptr, #144
02150     02 3C 66 F0 | 	shl	_var07, #2
02154     2F 3D 02 FD | 	qmul	_var07, arg02
02158     18 3E 62 FD | 	getqx	_var08
0215c     07 41 02 FB | 	rdlong	_var09, objptr
02160     1F 41 02 F1 | 	add	_var09, _var08
02164     2E 43 02 F6 | 	mov	_var10, arg01
02168     02 42 46 F0 | 	shr	_var10, #2
0216c     21 41 02 F1 | 	add	_var09, _var10
02170                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>2)]
02170     20 45 C2 FA | 	rdbyte	_var11, _var09
02174     2E 31 52 F6 | 	abs	_var01, arg01 wc
02178     03 30 06 F5 | 	and	_var01, #3
0217c     18 31 62 C6 |  if_b	neg	_var01, _var01
02180     01 30 66 F0 | 	shl	_var01, #1
02184     03 46 06 F6 | 	mov	_var12, #3
02188     18 47 62 F0 | 	shl	_var12, _var01
0218c                 | '     b:=b & !(%11<<((x//4)<<1))
0218c     23 45 22 F5 | 	andn	_var11, _var12
02190     18 61 62 F0 | 	shl	arg03, _var01
02194                 | '     b:=b |(c<<((x//4)<<1))
02194     30 45 42 F5 | 	or	_var11, arg03
02198     90 0E 06 F1 | 	add	objptr, #144
0219c     07 49 02 FB | 	rdlong	_var13, objptr
021a0     90 0E 86 F1 | 	sub	objptr, #144
021a4     02 48 66 F0 | 	shl	_var13, #2
021a8     2F 49 02 FD | 	qmul	_var13, arg02
021ac     18 4A 62 FD | 	getqx	_var14
021b0     07 4D 02 FB | 	rdlong	_var15, objptr
021b4     25 4D 02 F1 | 	add	_var15, _var14
021b8     21 4D 02 F1 | 	add	_var15, _var10
021bc                 | '     byte[buf_ptr+4*cpl*y+(x>>2)]:=b
021bc     26 45 42 FC | 	wrbyte	_var11, _var15
021c0                 | LR__0034
021c0                 | _hng030rm_spin2_putpixel2_ret
021c0     2D 00 64 FD | 	ret
021c4                 | 
021c4                 | ' 
021c4                 | ' 
021c4                 | ' pub putpixel4(x,y,c) |byte b
021c4                 | _hng030rm_spin2_putpixel4
021c4                 | ' 
021c4                 | ' if ((x>=0) & (x<16*cpl) & (y>=0) & (y<lines))
021c4     00 30 06 F6 | 	mov	_var01, #0
021c8     00 5C 5E F2 | 	cmps	arg01, #0 wcz
021cc     01 30 66 36 |  if_ae	neg	_var01, #1
021d0     00 32 06 F6 | 	mov	_var02, #0
021d4     90 0E 06 F1 | 	add	objptr, #144
021d8     07 35 02 FB | 	rdlong	_var03, objptr
021dc     04 34 66 F0 | 	shl	_var03, #4
021e0     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
021e4     01 32 66 C6 |  if_b	neg	_var02, #1
021e8     19 31 02 F5 | 	and	_var01, _var02
021ec     00 36 06 F6 | 	mov	_var04, #0
021f0     00 5E 5E F2 | 	cmps	arg02, #0 wcz
021f4     01 36 66 36 |  if_ae	neg	_var04, #1
021f8     1B 31 02 F5 | 	and	_var01, _var04
021fc     00 38 06 F6 | 	mov	_var05, #0
02200     04 0E 06 F1 | 	add	objptr, #4
02204     07 3B 02 FB | 	rdlong	_var06, objptr
02208     94 0E 86 F1 | 	sub	objptr, #148
0220c     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
02210     01 38 66 C6 |  if_b	neg	_var05, #1
02214     1C 31 CA F7 | 	test	_var01, _var05 wz
02218     7C 00 90 AD |  if_e	jmp	#LR__0035
0221c     90 0E 06 F1 | 	add	objptr, #144
02220     07 3D 02 FB | 	rdlong	_var07, objptr
02224     90 0E 86 F1 | 	sub	objptr, #144
02228     02 3C 66 F0 | 	shl	_var07, #2
0222c     2F 3D 02 FD | 	qmul	_var07, arg02
02230     18 3E 62 FD | 	getqx	_var08
02234     07 41 02 FB | 	rdlong	_var09, objptr
02238     1F 41 02 F1 | 	add	_var09, _var08
0223c     2E 43 02 F6 | 	mov	_var10, arg01
02240     01 42 46 F0 | 	shr	_var10, #1
02244     21 41 02 F1 | 	add	_var09, _var10
02248                 | '     b:=byte[buf_ptr+4*cpl*y+(x>>1)]
02248     20 45 C2 FA | 	rdbyte	_var11, _var09
0224c     2E 31 52 F6 | 	abs	_var01, arg01 wc
02250     01 30 06 F5 | 	and	_var01, #1
02254     18 31 62 C6 |  if_b	neg	_var01, _var01
02258     02 30 66 F0 | 	shl	_var01, #2
0225c     0F 46 06 F6 | 	mov	_var12, #15
02260     18 47 62 F0 | 	shl	_var12, _var01
02264                 | '     b:=b & !(%1111<<((x//2)<<2))
02264     23 45 22 F5 | 	andn	_var11, _var12
02268     18 61 62 F0 | 	shl	arg03, _var01
0226c                 | '     b:=b |(c<<((x//2)<<2))
0226c     30 45 42 F5 | 	or	_var11, arg03
02270     90 0E 06 F1 | 	add	objptr, #144
02274     07 49 02 FB | 	rdlong	_var13, objptr
02278     90 0E 86 F1 | 	sub	objptr, #144
0227c     02 48 66 F0 | 	shl	_var13, #2
02280     2F 49 02 FD | 	qmul	_var13, arg02
02284     18 4A 62 FD | 	getqx	_var14
02288     07 4D 02 FB | 	rdlong	_var15, objptr
0228c     25 4D 02 F1 | 	add	_var15, _var14
02290     21 4D 02 F1 | 	add	_var15, _var10
02294                 | '     byte[buf_ptr+4*cpl*y+(x>>1)]:=b
02294     26 45 42 FC | 	wrbyte	_var11, _var15
02298                 | LR__0035
02298                 | _hng030rm_spin2_putpixel4_ret
02298     2D 00 64 FD | 	ret
0229c                 | 
0229c                 | ' 
0229c                 | ' 
0229c                 | ' pub putpixel8(x,y,c)
0229c                 | _hng030rm_spin2_putpixel8
0229c                 | ' 
0229c                 | ' if ((x>=0) & (x<4*cpl) & (y>=0) & (y<lines))
0229c     00 30 06 F6 | 	mov	_var01, #0
022a0     00 5C 5E F2 | 	cmps	arg01, #0 wcz
022a4     01 30 66 36 |  if_ae	neg	_var01, #1
022a8     00 32 06 F6 | 	mov	_var02, #0
022ac     90 0E 06 F1 | 	add	objptr, #144
022b0     07 35 02 FB | 	rdlong	_var03, objptr
022b4     02 34 66 F0 | 	shl	_var03, #2
022b8     1A 5D 5A F2 | 	cmps	arg01, _var03 wcz
022bc     01 32 66 C6 |  if_b	neg	_var02, #1
022c0     19 31 02 F5 | 	and	_var01, _var02
022c4     00 36 06 F6 | 	mov	_var04, #0
022c8     00 5E 5E F2 | 	cmps	arg02, #0 wcz
022cc     01 36 66 36 |  if_ae	neg	_var04, #1
022d0     1B 31 02 F5 | 	and	_var01, _var04
022d4     00 38 06 F6 | 	mov	_var05, #0
022d8     04 0E 06 F1 | 	add	objptr, #4
022dc     07 3B 02 FB | 	rdlong	_var06, objptr
022e0     94 0E 86 F1 | 	sub	objptr, #148
022e4     1D 5F 5A F2 | 	cmps	arg02, _var06 wcz
022e8     01 38 66 C6 |  if_b	neg	_var05, #1
022ec     1C 31 CA F7 | 	test	_var01, _var05 wz
022f0     28 00 90 AD |  if_e	jmp	#LR__0036
022f4     90 0E 06 F1 | 	add	objptr, #144
022f8     07 3D 02 FB | 	rdlong	_var07, objptr
022fc     90 0E 86 F1 | 	sub	objptr, #144
02300     02 3C 66 F0 | 	shl	_var07, #2
02304     2F 3D 02 FD | 	qmul	_var07, arg02
02308     18 3E 62 FD | 	getqx	_var08
0230c     07 41 02 FB | 	rdlong	_var09, objptr
02310     1F 41 02 F1 | 	add	_var09, _var08
02314     2E 41 02 F1 | 	add	_var09, arg01
02318                 | '     byte[buf_ptr+4*cpl*y+x]:=c
02318     20 61 42 FC | 	wrbyte	arg03, _var09
0231c                 | LR__0036
0231c                 | _hng030rm_spin2_putpixel8_ret
0231c     2D 00 64 FD | 	ret
02320                 | 
02320                 | ' 
02320                 | ' ''---------- Set the border color, o is upper border, lines+1 is lower border
02320                 | ' 
02320                 | ' pub setbordercolor(r,g,b) | color
02320                 | _hng030rm_spin2_setbordercolor
02320     18 5C 66 F0 | 	shl	arg01, #24
02324     10 5E 66 F0 | 	shl	arg02, #16
02328     2F 5D 02 F1 | 	add	arg01, arg02
0232c     08 60 66 F0 | 	shl	arg03, #8
02330     30 5D 02 F1 | 	add	arg01, arg03
02334                 | ' 
02334                 | ' color:=r<<24+g<<16+b<<8
02334                 | ' bordercolor:=color
02334     2C 0E 06 F1 | 	add	objptr, #44
02338     07 5D 62 FC | 	wrlong	arg01, objptr
0233c     2C 0E 86 F1 | 	sub	objptr, #44
02340                 | _hng030rm_spin2_setbordercolor_ret
02340     2D 00 64 FD | 	ret
02344                 | 
02344                 | ' 
02344                 | ' 
02344                 | ' '*************************************************************************
02344                 | ' '                                                                        *
02344                 | ' '  Text functions                                                        *
02344                 | ' '                                                                        *
02344                 | ' '*************************************************************************
02344                 | ' 
02344                 | ' ''---------- Clear the screen, set its foreground/background color
02344                 | ' 
02344                 | ' pub cls(fc,bc)   :c
02344                 | _hng030rm_spin2_cls
02344     07 5A 05 F6 | 	mov	COUNT_, #7
02348     B0 00 A0 FD | 	call	#pushregs_
0234c     2E 6B 02 F6 | 	mov	local01, arg01
02350     2F 6D 02 F6 | 	mov	local02, arg02
02354                 | ' 
02354                 | ' if (graphmode<512)
02354     C4 0E 06 F1 | 	add	objptr, #196
02358     07 6F 02 FB | 	rdlong	local03, objptr
0235c     C4 0E 86 F1 | 	sub	objptr, #196
02360     01 00 00 FF 
02364     00 6E 5E F2 | 	cmps	local03, ##512 wcz
02368     34 00 90 3D |  if_ae	jmp	#LR__0037
0236c     35 71 02 F6 | 	mov	local04, local01
02370     18 70 66 F0 | 	shl	local04, #24
02374     36 73 02 F6 | 	mov	local05, local02
02378     10 72 66 F0 | 	shl	local05, #16
0237c     39 71 02 F1 | 	add	local04, local05
02380     20 70 06 F1 | 	add	local04, #32
02384                 | '   c:=fc<<24+bc<<16+$20
02384                 | '   longfill(buf_ptr,c,buflen)
02384     07 5D 02 FB | 	rdlong	arg01, objptr
02388     30 0E 06 F1 | 	add	objptr, #48
0238c     07 61 02 FB | 	rdlong	arg03, objptr
02390     30 0E 86 F1 | 	sub	objptr, #48
02394     38 5F 02 F6 | 	mov	arg02, local04
02398     A8 00 A0 FD | 	call	#\builtin_longfill_
0239c                 | ' else
0239c     AC 00 90 FD | 	jmp	#LR__0043
023a0                 | LR__0037
023a0                 | '   if (graphmode & 48) ==48
023a0     C4 0E 06 F1 | 	add	objptr, #196
023a4     07 6F 02 FB | 	rdlong	local03, objptr
023a8     C4 0E 86 F1 | 	sub	objptr, #196
023ac     30 6E 06 F5 | 	and	local03, #48
023b0     30 6E 0E F2 | 	cmp	local03, #48 wz
023b4                 | '     c:=bc
023b4     36 71 02 A6 |  if_e	mov	local04, local02
023b8     74 00 90 AD |  if_e	jmp	#LR__0042
023bc                 | '   elseif (graphmode & 48) ==32
023bc     C4 0E 06 F1 | 	add	objptr, #196
023c0     07 6F 02 FB | 	rdlong	local03, objptr
023c4     C4 0E 86 F1 | 	sub	objptr, #196
023c8     30 6E 06 F5 | 	and	local03, #48
023cc     20 6E 0E F2 | 	cmp	local03, #32 wz
023d0     10 00 90 5D |  if_ne	jmp	#LR__0038
023d4     36 71 02 F6 | 	mov	local04, local02
023d8     04 70 66 F0 | 	shl	local04, #4
023dc     36 71 02 F1 | 	add	local04, local02
023e0                 | '     c:=bc<<4+bc
023e0     4C 00 90 FD | 	jmp	#LR__0041
023e4                 | LR__0038
023e4                 | '   elseif (graphmode & 48) ==16
023e4     C4 0E 06 F1 | 	add	objptr, #196
023e8     07 6F 02 FB | 	rdlong	local03, objptr
023ec     C4 0E 86 F1 | 	sub	objptr, #196
023f0     30 6E 06 F5 | 	and	local03, #48
023f4     10 6E 0E F2 | 	cmp	local03, #16 wz
023f8     28 00 90 5D |  if_ne	jmp	#LR__0039
023fc     36 71 02 F6 | 	mov	local04, local02
02400     06 70 66 F0 | 	shl	local04, #6
02404     36 75 02 F6 | 	mov	local06, local02
02408     04 74 66 F0 | 	shl	local06, #4
0240c     3A 71 02 F1 | 	add	local04, local06
02410     36 77 02 F6 | 	mov	local07, local02
02414     02 76 66 F0 | 	shl	local07, #2
02418     3B 71 02 F1 | 	add	local04, local07
0241c     36 71 02 F1 | 	add	local04, local02
02420                 | '     c:=bc<<6+bc<<4+bc<<2+bc
02420                 | '   else
02420     0C 00 90 FD | 	jmp	#LR__0040
02424                 | LR__0039
02424                 | '     if bc==1
02424     01 6C 0E F2 | 	cmp	local02, #1 wz
02428                 | '       c:=255
02428     FF 70 06 A6 |  if_e	mov	local04, #255
0242c                 | '     else
0242c                 | '       c:=0
0242c     00 70 06 56 |  if_ne	mov	local04, #0
02430                 | LR__0040
02430                 | LR__0041
02430                 | LR__0042
02430     30 0E 06 F1 | 	add	objptr, #48
02434     07 61 02 FB | 	rdlong	arg03, objptr
02438     30 0E 86 F1 | 	sub	objptr, #48
0243c     02 60 66 F0 | 	shl	arg03, #2
02440                 | '   bytefill(buf_ptr,c,buflen*4)
02440     07 5D 02 FB | 	rdlong	arg01, objptr
02444     38 5F 02 F6 | 	mov	arg02, local04
02448     A0 00 A0 FD | 	call	#\builtin_bytefill_
0244c                 | LR__0043
0244c                 | ' setwritecolors(fc,bc)
0244c                 | ' 
0244c                 | ' 
0244c                 | ' write_color:=ff
0244c     38 0E 06 F1 | 	add	objptr, #56
02450     07 6B 62 FC | 	wrlong	local01, objptr
02454                 | ' write_background:=bb
02454     04 0E 06 F1 | 	add	objptr, #4
02458     07 6D 62 FC | 	wrlong	local02, objptr
0245c                 | ' cursor_x:=0
0245c     08 0E 86 F1 | 	sub	objptr, #8
02460     07 01 48 FC | 	wrbyte	#0, objptr
02464                 | ' cursor_y:=0
02464     01 0E 06 F1 | 	add	objptr, #1
02468     07 01 48 FC | 	wrbyte	#0, objptr
0246c     35 0E 86 F1 | 	sub	objptr, #53
02470     38 2B 02 F6 | 	mov	result1, local04
02474     AF F0 03 F6 | 	mov	ptra, fp
02478     BF 00 A0 FD | 	call	#popregs_
0247c                 | _hng030rm_spin2_cls_ret
0247c     2D 00 64 FD | 	ret
02480                 | 
02480                 | ' 
02480                 | ' ''--------- Output a string at position x,y without changing colors
02480                 | ' 
02480                 | ' pub outtextxy(x,y,text) | iii
02480                 | _hng030rm_spin2_outtextxy
02480     0B 5A 05 F6 | 	mov	COUNT_, #11
02484     B0 00 A0 FD | 	call	#pushregs_
02488     2E 6B 02 F6 | 	mov	local01, arg01
0248c                 | ' 
0248c                 | ' repeat iii from 0 to strsize(text)-1
0248c     00 6C 06 F6 | 	mov	local02, #0
02490     30 5D 02 F6 | 	mov	arg01, arg03
02494     00 6E 06 F6 | 	mov	local03, #0
02498     74 DB 9F FE | 	loc	pa,	#(@LR__0045-@LR__0044)
0249c     93 00 A0 FD | 	call	#FCACHE_LOAD_
024a0                 | LR__0044
024a0     2E 71 CA FA | 	rdbyte	local04, arg01 wz
024a4     01 6E 06 51 |  if_ne	add	local03, #1
024a8     01 5C 06 51 |  if_ne	add	arg01, #1
024ac     F0 FF 9F 5D |  if_ne	jmp	#LR__0044
024b0                 | LR__0045
024b0     37 2B 02 F6 | 	mov	result1, local03
024b4     15 73 02 F6 | 	mov	local05, result1
024b8     01 72 86 F1 | 	sub	local05, #1
024bc     00 72 5E F2 | 	cmps	local05, #0 wcz
024c0     01 74 06 16 |  if_a	mov	local06, #1
024c4     01 74 66 E6 |  if_be	neg	local06, #1
024c8     3A 73 02 F1 | 	add	local05, local06
024cc     80 DB 9F FE | 	loc	pa,	#(@LR__0047-@LR__0046)
024d0     93 00 A0 FD | 	call	#FCACHE_LOAD_
024d4                 | LR__0046
024d4     90 0E 06 F1 | 	add	objptr, #144
024d8     07 77 02 FB | 	rdlong	local07, objptr
024dc     90 0E 86 F1 | 	sub	objptr, #144
024e0     2F 77 02 FD | 	qmul	local07, arg02
024e4     18 78 62 FD | 	getqx	local08
024e8     35 79 02 F1 | 	add	local08, local01
024ec     36 79 02 F1 | 	add	local08, local02
024f0     02 78 66 F0 | 	shl	local08, #2
024f4     07 7B 02 FB | 	rdlong	local09, objptr
024f8     3C 7B 02 F1 | 	add	local09, local08
024fc     3D 7D 02 FB | 	rdlong	local10, local09
02500     FF 7C 26 F5 | 	andn	local10, #255
02504     30 7F 02 F6 | 	mov	local11, arg03
02508     36 7F 02 F1 | 	add	local11, local02
0250c     3F 77 C2 FA | 	rdbyte	local07, local11
02510     3B 7D 42 F5 | 	or	local10, local07
02514                 | '   long[buf_ptr+4*(cpl*y+x+iii)]:=(long[buf_ptr+4*(cpl*y+x+iii)] & $FFFFFF00)  | byte[text+iii]
02514     3D 7D 62 FC | 	wrlong	local10, local09
02518     3A 6D 02 F1 | 	add	local02, local06
0251c     39 6D 0A F2 | 	cmp	local02, local05 wz
02520     B0 FF 9F 5D |  if_ne	jmp	#LR__0046
02524                 | LR__0047
02524     AF F0 03 F6 | 	mov	ptra, fp
02528     BF 00 A0 FD | 	call	#popregs_
0252c                 | _hng030rm_spin2_outtextxy_ret
0252c     2D 00 64 FD | 	ret
02530                 | 
02530                 | ' 
02530                 | ' ''---------- Output a char at the cursor position, move the cursor
02530                 | ' 
02530                 | ' pub putchar(achar) | c,x,y
02530                 | _hng030rm_spin2_putchar
02530     12 5A 05 F6 | 	mov	COUNT_, #18
02534     B0 00 A0 FD | 	call	#pushregs_
02538     2E 6B 02 F6 | 	mov	local01, arg01
0253c                 | ' 
0253c                 | ' if achar==10
0253c     0A 6A 0E F2 | 	cmp	local01, #10 wz
02540     58 00 90 5D |  if_ne	jmp	#LR__0048
02544                 | '   crlf()
02544                 | ' 
02544                 | ' cursor_x:=0
02544     34 0E 06 F1 | 	add	objptr, #52
02548     07 01 48 FC | 	wrbyte	#0, objptr
0254c                 | ' cursor_y+=1
0254c     01 0E 06 F1 | 	add	objptr, #1
02550     07 6D C2 FA | 	rdbyte	local02, objptr
02554     01 6C 06 F1 | 	add	local02, #1
02558     07 6D 42 FC | 	wrbyte	local02, objptr
0255c                 | ' if cursor_y>lines-1
0255c     5F 0E 06 F1 | 	add	objptr, #95
02560     07 6D 02 FB | 	rdlong	local02, objptr
02564     01 6C 86 F1 | 	sub	local02, #1
02568     5F 0E 86 F1 | 	sub	objptr, #95
0256c     07 6F C2 FA | 	rdbyte	local03, objptr
02570     35 0E 86 F1 | 	sub	objptr, #53
02574     36 6F 5A F2 | 	cmps	local03, local02 wcz
02578     38 01 90 ED |  if_be	jmp	#LR__0051
0257c                 | '   scrollup()
0257c     F4 02 B0 FD | 	call	#_hng030rm_spin2_scrollup
02580     94 0E 06 F1 | 	add	objptr, #148
02584     07 71 02 FB | 	rdlong	local04, objptr
02588     01 70 86 F1 | 	sub	local04, #1
0258c                 | '   cursor_y:=lines-1
0258c     5F 0E 86 F1 | 	sub	objptr, #95
02590     07 71 42 FC | 	wrbyte	local04, objptr
02594     35 0E 86 F1 | 	sub	objptr, #53
02598                 | ' else  
02598     18 01 90 FD | 	jmp	#LR__0051
0259c                 | LR__0048
0259c                 | '   x:=cursor_x
0259c     34 0E 06 F1 | 	add	objptr, #52
025a0     07 73 C2 FA | 	rdbyte	local05, objptr
025a4                 | '   y:=cursor_y
025a4     01 0E 06 F1 | 	add	objptr, #1
025a8     07 75 C2 FA | 	rdbyte	local06, objptr
025ac     03 0E 06 F1 | 	add	objptr, #3
025b0     07 77 02 FB | 	rdlong	local07, objptr
025b4     18 76 66 F0 | 	shl	local07, #24
025b8     04 0E 06 F1 | 	add	objptr, #4
025bc     07 79 02 FB | 	rdlong	local08, objptr
025c0     10 78 66 F0 | 	shl	local08, #16
025c4     3C 77 02 F1 | 	add	local07, local08
025c8                 | '   c:=write_color<<24+write_background<<16
025c8     54 0E 06 F1 | 	add	objptr, #84
025cc     07 7B 02 FB | 	rdlong	local09, objptr
025d0     90 0E 86 F1 | 	sub	objptr, #144
025d4     3A 7B 02 FD | 	qmul	local09, local06
025d8     18 7C 62 FD | 	getqx	local10
025dc     39 7D 02 F1 | 	add	local10, local05
025e0     02 7C 66 F0 | 	shl	local10, #2
025e4     07 7F 02 FB | 	rdlong	local11, objptr
025e8     3E 7F 02 F1 | 	add	local11, local10
025ec     3F 81 02 FB | 	rdlong	local12, local11
025f0     7F 00 00 FF 
025f4     FF 81 06 F5 | 	and	local12, ##65535
025f8     3B 81 42 F5 | 	or	local12, local07
025fc                 | '   long[buf_ptr+4*(cpl*y+x)]:=long[buf_ptr+4*(cpl*y+x)] &$FFFF | c
025fc     3F 81 62 FC | 	wrlong	local12, local11
02600     90 0E 06 F1 | 	add	objptr, #144
02604     07 7B 02 FB | 	rdlong	local09, objptr
02608     90 0E 86 F1 | 	sub	objptr, #144
0260c     3A 7B 02 FD | 	qmul	local09, local06
02610     18 82 62 FD | 	getqx	local13
02614     39 83 02 F1 | 	add	local13, local05
02618     02 82 66 F0 | 	shl	local13, #2
0261c     07 85 02 FB | 	rdlong	local14, objptr
02620     41 85 02 F1 | 	add	local14, local13
02624     42 87 02 FB | 	rdlong	local15, local14
02628     FF 86 26 F5 | 	andn	local15, #255
0262c     FF 6A 06 F5 | 	and	local01, #255
02630     35 87 42 F5 | 	or	local15, local01
02634                 | '   long[buf_ptr+4*(cpl*y+x)]:=(long[buf_ptr+4*(cpl*y+x)] & $FFFFFF00)  |(achar & $000000FF)
02634     42 87 62 FC | 	wrlong	local15, local14
02638                 | '   cursor_x+=1
02638     34 0E 06 F1 | 	add	objptr, #52
0263c     07 89 C2 FA | 	rdbyte	local16, objptr
02640     01 88 06 F1 | 	add	local16, #1
02644     07 89 42 FC | 	wrbyte	local16, objptr
02648                 | '   if cursor_x==cpl
02648     07 89 C2 FA | 	rdbyte	local16, objptr
0264c     5C 0E 06 F1 | 	add	objptr, #92
02650     07 8B 02 FB | 	rdlong	local17, objptr
02654     90 0E 86 F1 | 	sub	objptr, #144
02658     45 89 0A F2 | 	cmp	local16, local17 wz
0265c     54 00 90 5D |  if_ne	jmp	#LR__0050
02660                 | '     cursor_x:=0
02660     34 0E 06 F1 | 	add	objptr, #52
02664     07 01 48 FC | 	wrbyte	#0, objptr
02668                 | '     cursor_y+=1
02668     01 0E 06 F1 | 	add	objptr, #1
0266c     07 89 C2 FA | 	rdbyte	local16, objptr
02670     01 88 06 F1 | 	add	local16, #1
02674     07 89 42 FC | 	wrbyte	local16, objptr
02678                 | '     if cursor_y>lines-1
02678     5F 0E 06 F1 | 	add	objptr, #95
0267c     07 89 02 FB | 	rdlong	local16, objptr
02680     01 88 86 F1 | 	sub	local16, #1
02684     5F 0E 86 F1 | 	sub	objptr, #95
02688     07 8B C2 FA | 	rdbyte	local17, objptr
0268c     35 0E 86 F1 | 	sub	objptr, #53
02690     44 8B 5A F2 | 	cmps	local17, local16 wcz
02694     1C 00 90 ED |  if_be	jmp	#LR__0049
02698                 | '       scrollup()
02698     D8 01 B0 FD | 	call	#_hng030rm_spin2_scrollup
0269c     94 0E 06 F1 | 	add	objptr, #148
026a0     07 8D 02 FB | 	rdlong	local18, objptr
026a4     01 8C 86 F1 | 	sub	local18, #1
026a8                 | '       cursor_y:=lines-1
026a8     5F 0E 86 F1 | 	sub	objptr, #95
026ac     07 8D 42 FC | 	wrbyte	local18, objptr
026b0     35 0E 86 F1 | 	sub	objptr, #53
026b4                 | LR__0049
026b4                 | LR__0050
026b4                 | LR__0051
026b4     AF F0 03 F6 | 	mov	ptra, fp
026b8     BF 00 A0 FD | 	call	#popregs_
026bc                 | _hng030rm_spin2_putchar_ret
026bc     2D 00 64 FD | 	ret
026c0                 | 
026c0                 | ' 
026c0                 | ' ''--------- Output a string at the cursor position, move the cursor
026c0                 | ' 
026c0                 | ' pub write(text) | iii,c,ncx,ncy
026c0                 | _hng030rm_spin2_write
026c0     11 5A 05 F6 | 	mov	COUNT_, #17
026c4     B0 00 A0 FD | 	call	#pushregs_
026c8     2E 6B 02 F6 | 	mov	local01, arg01
026cc     38 0E 06 F1 | 	add	objptr, #56
026d0     07 6D 02 FB | 	rdlong	local02, objptr
026d4     18 6C 66 F0 | 	shl	local02, #24
026d8     04 0E 06 F1 | 	add	objptr, #4
026dc     07 6F 02 FB | 	rdlong	local03, objptr
026e0     10 6E 66 F0 | 	shl	local03, #16
026e4     37 6D 02 F1 | 	add	local02, local03
026e8                 | ' 
026e8                 | ' c:=write_color<<24+write_background<<16
026e8                 | ' 'debug(uhex_long(write_color))
026e8                 | ' ncy:=cursor_y
026e8     07 0E 86 F1 | 	sub	objptr, #7
026ec     07 71 C2 FA | 	rdbyte	local04, objptr
026f0                 | ' ncx:=cursor_x+strsize(text)
026f0     01 0E 86 F1 | 	sub	objptr, #1
026f4     07 73 C2 FA | 	rdbyte	local05, objptr
026f8     34 0E 86 F1 | 	sub	objptr, #52
026fc     35 5D 02 F6 | 	mov	arg01, local01
02700     00 74 06 F6 | 	mov	local06, #0
02704     08 D9 9F FE | 	loc	pa,	#(@LR__0053-@LR__0052)
02708     93 00 A0 FD | 	call	#FCACHE_LOAD_
0270c                 | LR__0052
0270c     2E 77 CA FA | 	rdbyte	local07, arg01 wz
02710     01 74 06 51 |  if_ne	add	local06, #1
02714     01 5C 06 51 |  if_ne	add	arg01, #1
02718     F0 FF 9F 5D |  if_ne	jmp	#LR__0052
0271c                 | LR__0053
0271c     3A 2B 02 F6 | 	mov	result1, local06
02720     3A 73 02 F1 | 	add	local05, local06
02724     39 79 02 F6 | 	mov	local08, local05
02728     04 D9 9F FE | 	loc	pa,	#(@LR__0055-@LR__0054)
0272c     93 00 A0 FD | 	call	#FCACHE_LOAD_
02730                 | ' repeat while ncx>cpl-1
02730                 | LR__0054
02730     90 0E 06 F1 | 	add	objptr, #144
02734     07 73 02 FB | 	rdlong	local05, objptr
02738     90 0E 86 F1 | 	sub	objptr, #144
0273c     01 72 86 F1 | 	sub	local05, #1
02740     39 79 5A F2 | 	cmps	local08, local05 wcz
02744     18 00 90 ED |  if_be	jmp	#LR__0056
02748                 | '   ncx-=cpl
02748     90 0E 06 F1 | 	add	objptr, #144
0274c     07 7B 02 FB | 	rdlong	local09, objptr
02750     90 0E 86 F1 | 	sub	objptr, #144
02754     3D 79 82 F1 | 	sub	local08, local09
02758                 | '   ncy+=1
02758     01 70 06 F1 | 	add	local04, #1
0275c     D0 FF 9F FD | 	jmp	#LR__0054
02760                 | LR__0055
02760                 | LR__0056
02760                 | ' repeat while ncy>lines-1
02760                 | LR__0057
02760     94 0E 06 F1 | 	add	objptr, #148
02764     07 73 02 FB | 	rdlong	local05, objptr
02768     94 0E 86 F1 | 	sub	objptr, #148
0276c     01 72 86 F1 | 	sub	local05, #1
02770     39 71 5A F2 | 	cmps	local04, local05 wcz
02774     20 00 90 ED |  if_be	jmp	#LR__0058
02778                 | '   ncy-=1
02778     01 70 86 F1 | 	sub	local04, #1
0277c                 | '   scrollup()
0277c     F4 00 B0 FD | 	call	#_hng030rm_spin2_scrollup
02780                 | '   cursor_y-=1
02780     35 0E 06 F1 | 	add	objptr, #53
02784     07 73 C2 FA | 	rdbyte	local05, objptr
02788     01 72 86 F1 | 	sub	local05, #1
0278c     07 73 42 FC | 	wrbyte	local05, objptr
02790     35 0E 86 F1 | 	sub	objptr, #53
02794     C8 FF 9F FD | 	jmp	#LR__0057
02798                 | LR__0058
02798                 | ' 
02798                 | ' repeat iii from 0 to strsize(text)-1
02798     00 7C 06 F6 | 	mov	local10, #0
0279c     35 5D 02 F6 | 	mov	arg01, local01
027a0     00 74 06 F6 | 	mov	local06, #0
027a4     68 D8 9F FE | 	loc	pa,	#(@LR__0060-@LR__0059)
027a8     93 00 A0 FD | 	call	#FCACHE_LOAD_
027ac                 | LR__0059
027ac     2E 77 CA FA | 	rdbyte	local07, arg01 wz
027b0     01 74 06 51 |  if_ne	add	local06, #1
027b4     01 5C 06 51 |  if_ne	add	arg01, #1
027b8     F0 FF 9F 5D |  if_ne	jmp	#LR__0059
027bc                 | LR__0060
027bc     3A 2B 02 F6 | 	mov	result1, local06
027c0     15 7F 02 F6 | 	mov	local11, result1
027c4     01 7E 86 F1 | 	sub	local11, #1
027c8     00 7E 5E F2 | 	cmps	local11, #0 wcz
027cc     01 80 06 16 |  if_a	mov	local12, #1
027d0     01 80 66 E6 |  if_be	neg	local12, #1
027d4     40 7F 02 F1 | 	add	local11, local12
027d8     7C D8 9F FE | 	loc	pa,	#(@LR__0062-@LR__0061)
027dc     93 00 A0 FD | 	call	#FCACHE_LOAD_
027e0                 | LR__0061
027e0     90 0E 06 F1 | 	add	objptr, #144
027e4     07 83 02 FB | 	rdlong	local13, objptr
027e8     5B 0E 86 F1 | 	sub	objptr, #91
027ec     07 85 C2 FA | 	rdbyte	local14, objptr
027f0     42 83 02 FD | 	qmul	local13, local14
027f4     18 86 62 FD | 	getqx	local15
027f8     01 0E 86 F1 | 	sub	objptr, #1
027fc     07 83 C2 FA | 	rdbyte	local13, objptr
02800     34 0E 86 F1 | 	sub	objptr, #52
02804     41 87 02 F1 | 	add	local15, local13
02808     3E 87 02 F1 | 	add	local15, local10
0280c     02 86 66 F0 | 	shl	local15, #2
02810     07 89 02 FB | 	rdlong	local16, objptr
02814     43 89 02 F1 | 	add	local16, local15
02818     44 8B 02 FB | 	rdlong	local17, local16
0281c     7F 00 00 FF 
02820     FF 8B 06 F5 | 	and	local17, ##65535
02824     36 8B 42 F5 | 	or	local17, local02
02828                 | ' 
02828                 | '   long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)]:=long[buf_ptr+4*(cpl*cursor_y+cursor_x+iii)] &$FFFF | c
02828     44 8B 62 FC | 	wrlong	local17, local16
0282c     40 7D 02 F1 | 	add	local10, local12
02830     3F 7D 0A F2 | 	cmp	local10, local11 wz
02834     A8 FF 9F 5D |  if_ne	jmp	#LR__0061
02838                 | LR__0062
02838                 | ' 
02838                 | ' outtextxy(cursor_x,cursor_y,text)
02838     34 0E 06 F1 | 	add	objptr, #52
0283c     07 5D C2 FA | 	rdbyte	arg01, objptr
02840     01 0E 06 F1 | 	add	objptr, #1
02844     07 5F C2 FA | 	rdbyte	arg02, objptr
02848     35 0E 86 F1 | 	sub	objptr, #53
0284c     35 61 02 F6 | 	mov	arg03, local01
02850     2C FC BF FD | 	call	#_hng030rm_spin2_outtextxy
02854                 | ' 
02854                 | ' cursor_x:=ncx
02854     34 0E 06 F1 | 	add	objptr, #52
02858     07 79 42 FC | 	wrbyte	local08, objptr
0285c                 | ' cursor_y:=ncy
0285c     01 0E 06 F1 | 	add	objptr, #1
02860     07 71 42 FC | 	wrbyte	local04, objptr
02864     35 0E 86 F1 | 	sub	objptr, #53
02868     AF F0 03 F6 | 	mov	ptra, fp
0286c     BF 00 A0 FD | 	call	#popregs_
02870                 | _hng030rm_spin2_write_ret
02870     2D 00 64 FD | 	ret
02874                 | 
02874                 | ' 
02874                 | ' ''-----------  Scroll the screen one line up
02874                 | ' 
02874                 | ' pub scrollup() | i
02874                 | _hng030rm_spin2_scrollup
02874     0A 5A 05 F6 | 	mov	COUNT_, #10
02878     B0 00 A0 FD | 	call	#pushregs_
0287c     90 0E 06 F1 | 	add	objptr, #144
02880     07 6B 02 FB | 	rdlong	local01, objptr
02884     90 0E 86 F1 | 	sub	objptr, #144
02888     02 6A 66 F0 | 	shl	local01, #2
0288c     07 5F 02 FB | 	rdlong	arg02, objptr
02890     35 5F 02 F1 | 	add	arg02, local01
02894     30 0E 06 F1 | 	add	objptr, #48
02898     07 61 02 FB | 	rdlong	arg03, objptr
0289c     60 0E 06 F1 | 	add	objptr, #96
028a0     07 6D 02 FB | 	rdlong	local02, objptr
028a4     90 0E 86 F1 | 	sub	objptr, #144
028a8     36 61 82 F1 | 	sub	arg03, local02
028ac                 | ' 
028ac                 | ' longmove(buf_ptr,buf_ptr+4*cpl,buflen-cpl)
028ac     07 5D 02 FB | 	rdlong	arg01, objptr
028b0     EC 35 B0 FD | 	call	#__system__longmove
028b4                 | ' repeat i from buflen-cpl to buflen-1
028b4     30 0E 06 F1 | 	add	objptr, #48
028b8     07 6F 02 FB | 	rdlong	local03, objptr
028bc     60 0E 06 F1 | 	add	objptr, #96
028c0     07 6D 02 FB | 	rdlong	local02, objptr
028c4     36 6F 82 F1 | 	sub	local03, local02
028c8     60 0E 86 F1 | 	sub	objptr, #96
028cc     07 71 02 FB | 	rdlong	local04, objptr
028d0     01 70 86 F1 | 	sub	local04, #1
028d4     07 73 02 FB | 	rdlong	local05, objptr
028d8     60 0E 06 F1 | 	add	objptr, #96
028dc     07 75 02 FB | 	rdlong	local06, objptr
028e0     90 0E 86 F1 | 	sub	objptr, #144
028e4     3A 73 82 F1 | 	sub	local05, local06
028e8     39 71 5A F2 | 	cmps	local04, local05 wcz
028ec     01 76 06 16 |  if_a	mov	local07, #1
028f0     01 76 66 E6 |  if_be	neg	local07, #1
028f4     3B 71 02 F1 | 	add	local04, local07
028f8     34 D7 9F FE | 	loc	pa,	#(@LR__0064-@LR__0063)
028fc     93 00 A0 FD | 	call	#FCACHE_LOAD_
02900                 | LR__0063
02900     37 79 02 F6 | 	mov	local08, local03
02904     02 78 66 F0 | 	shl	local08, #2
02908     07 7B 02 FB | 	rdlong	local09, objptr
0290c     3C 7B 02 F1 | 	add	local09, local08
02910     3D 7D 02 FB | 	rdlong	local10, local09
02914     80 FF 7F FF 
02918     00 7C 06 F5 | 	and	local10, ##-65536
0291c     20 7C 46 F5 | 	or	local10, #32
02920                 | '   long[buf_ptr+4*i]:=(long[buf_ptr+4*i] & $FFFF0000) | 32
02920     3D 7D 62 FC | 	wrlong	local10, local09
02924     3B 6F 02 F1 | 	add	local03, local07
02928     38 6F 0A F2 | 	cmp	local03, local04 wz
0292c     D0 FF 9F 5D |  if_ne	jmp	#LR__0063
02930                 | LR__0064
02930     AF F0 03 F6 | 	mov	ptra, fp
02934     BF 00 A0 FD | 	call	#popregs_
02938                 | _hng030rm_spin2_scrollup_ret
02938     2D 00 64 FD | 	ret
0293c                 | 
0293c                 | ' 
0293c                 | ' 
0293c                 | ' 
0293c                 | ' pub inttostr2(i,d):result |q,pos,k,j
0293c                 | _hng030rm_spin2_inttostr2
0293c                 | ' 
0293c                 | ' j:=i
0293c     2F 31 02 F6 | 	mov	_var01, arg02
02940     01 30 86 F1 | 	sub	_var01, #1
02944                 | ' pos:=d-1
02944     18 33 02 F6 | 	mov	_var02, _var01
02948                 | ' k:=0
02948     44 0E 06 F1 | 	add	objptr, #68
0294c     07 5F 02 F1 | 	add	arg02, objptr
02950                 | ' 
02950                 | ' n_string[d]:=0
02950     2F 01 48 FC | 	wrbyte	#0, arg02
02954                 | ' repeat k from 0 to d-1
02954     00 34 06 F6 | 	mov	_var03, #0
02958     00 30 5E F2 | 	cmps	_var01, #0 wcz
0295c     44 0E 86 F1 | 	sub	objptr, #68
02960     01 36 06 16 |  if_a	mov	_var04, #1
02964     01 36 66 E6 |  if_be	neg	_var04, #1
02968     1B 31 02 F1 | 	add	_var01, _var04
0296c     B0 D6 9F FE | 	loc	pa,	#(@LR__0066-@LR__0065)
02970     93 00 A0 FD | 	call	#FCACHE_LOAD_
02974                 | LR__0065
02974     1A 39 02 F6 | 	mov	_var05, _var03
02978     44 0E 06 F1 | 	add	objptr, #68
0297c     07 39 02 F1 | 	add	_var05, objptr
02980                 | '   n_string[k]:=48
02980     1C 61 48 FC | 	wrbyte	#48, _var05
02984     1B 35 02 F1 | 	add	_var03, _var04
02988     18 35 0A F2 | 	cmp	_var03, _var01 wz
0298c     44 0E 86 F1 | 	sub	objptr, #68
02990     E0 FF 9F 5D |  if_ne	jmp	#LR__0065
02994                 | LR__0066
02994                 | ' 
02994                 | ' if (j<>0)
02994     00 5C 0E F2 | 	cmp	arg01, #0 wz
02998     40 00 90 AD |  if_e	jmp	#LR__0069
0299c                 | ' 
0299c                 | '   repeat while (pos>-1)
0299c                 | LR__0067
0299c     FF FF 7F FF 
029a0     FF 33 5E F2 | 	cmps	_var02, ##-1 wcz
029a4     34 00 90 ED |  if_be	jmp	#LR__0068
029a8     2E 0B 03 F6 | 	mov	muldiva_, arg01
029ac     0A 0C 07 F6 | 	mov	muldivb_, #10
029b0     CC 00 A0 FD | 	call	#unsdivide_
029b4     85 3B 02 F6 | 	mov	_var06, muldiva_
029b8                 | '     q:=j+//10
029b8                 | '     q:=48+q
029b8     30 3A 06 F1 | 	add	_var06, #48
029bc     19 3D 02 F6 | 	mov	_var07, _var02
029c0     44 0E 06 F1 | 	add	objptr, #68
029c4     07 3D 02 F1 | 	add	_var07, objptr
029c8                 | '     n_string[pos]:=q
029c8     1E 3B 42 FC | 	wrbyte	_var06, _var07
029cc                 | '     j:=j+/10
029cc     86 5D 02 F6 | 	mov	arg01, muldivb_
029d0                 | '     pos-=1
029d0     01 32 86 F1 | 	sub	_var02, #1
029d4     44 0E 86 F1 | 	sub	objptr, #68
029d8     C0 FF 9F FD | 	jmp	#LR__0067
029dc                 | LR__0068
029dc                 | LR__0069
029dc     44 0E 06 F1 | 	add	objptr, #68
029e0     07 2B 02 F6 | 	mov	result1, objptr
029e4     44 0E 86 F1 | 	sub	objptr, #68
029e8                 | ' 
029e8                 | ' 
029e8                 | ' q:=@n_string
029e8                 | ' return q
029e8                 | _hng030rm_spin2_inttostr2_ret
029e8     2D 00 64 FD | 	ret
029ec                 | 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' '*************************************************************************
029ec                 | ' '                                                                        *
029ec                 | ' '  Mode setting and driver start                                                          *
029ec                 | ' '                                                                        *
029ec                 | ' '*************************************************************************
029ec                 | ' 
029ec                 | ' ''---------  Set the graphics mode
029ec                 | ' 
029ec                 | ' 
029ec                 | ' 
029ec                 | ' pub setmode(mode) | i', 'xzoom, yzoom, azoom
029ec                 | _hng030rm_spin2_setmode
029ec     50 5A 05 F6 | 	mov	COUNT_, #80
029f0     B0 00 A0 FD | 	call	#pushregs_
029f4     2E 6B 02 F6 | 	mov	local01, arg01
029f8                 | ' 
029f8                 | ' '' mode:tn_bb_cc_vv_hh
029f8                 | ' '' hh - h.zoom, vv-v.zoom, cc-c.depth,
029f8                 | ' '' bb - borders/total pixels, 00-wide/1140, 01 medium/1026, 10 narrow/912, 11 no border, 1024 px PAL, 880 px NTSC
029f8                 | ' 
029f8                 | ' if mode==(512+192+48)
029f8     01 00 00 FF 
029fc     F0 6A 0E F2 | 	cmp	local01, ##752 wz
02a00                 | '   return 'no RAM
02a00     1C 0A 90 AD |  if_e	jmp	#LR__0110
02a04                 | ' 
02a04                 | ' case_fast (mode>>6) & 7 ' timings are the same for graphic and text
02a04     35 6D 02 F6 | 	mov	local02, local01
02a08     06 6C 46 F0 | 	shr	local02, #6
02a0c     07 6C 06 F5 | 	and	local02, #7
02a10     08 6C 26 F3 | 	fle	local02, #8
02a14     36 6F 02 F6 | 	mov	local03, local02
02a18     30 6E 62 FD | 	jmprel	local03
02a1c                 | LR__0070
02a1c     20 00 90 FD | 	jmp	#LR__0071
02a20     58 00 90 FD | 	jmp	#LR__0072
02a24     90 00 90 FD | 	jmp	#LR__0073
02a28     C8 00 90 FD | 	jmp	#LR__0074
02a2c     00 01 90 FD | 	jmp	#LR__0075
02a30     38 01 90 FD | 	jmp	#LR__0076
02a34     70 01 90 FD | 	jmp	#LR__0077
02a38     A8 01 90 FD | 	jmp	#LR__0078
02a3c     E4 01 90 FD | 	jmp	#LR__0079
02a40                 | LR__0071
02a40                 | ' 
02a40                 | '     0:  longmove(@timings,@timings000,16)   'PAL 50 Hz signaling 1140x624, active 800x480, 100x30 text, wide border, 2 colors per pixel, 00_00_00_00_00=0, 354_693_878 Hz
02a40     50 0E 06 F1 | 	add	objptr, #80
02a44     07 5D 02 F6 | 	mov	arg01, objptr
02a48     50 0E 86 F1 | 	sub	objptr, #80
02a4c     0E 00 00 FF 
02a50     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7256
02a54     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02a58     38 73 02 F6 | 	mov	local05, local04
02a5c     10 74 06 F6 | 	mov	local06, #16
02a60     39 5F 02 F6 | 	mov	arg02, local05
02a64     10 60 06 F6 | 	mov	arg03, #16
02a68     0E 00 00 FF 
02a6c     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7256
02a70     2C 34 B0 FD | 	call	#__system__longmove
02a74     15 77 02 F6 | 	mov	local07, result1
02a78     A8 01 90 FD | 	jmp	#LR__0079
02a7c                 | LR__0072
02a7c                 | '     1:  longmove(@timings,@timings064,16)   'PAL 50 Hz signaling 1026x624, active 880x496, 110x31 text, medium border, 2 colors per pixel 00_01_00_00_00=64, 319_215_686 Hz
02a7c     50 0E 06 F1 | 	add	objptr, #80
02a80     07 5D 02 F6 | 	mov	arg01, objptr
02a84     50 0E 86 F1 | 	sub	objptr, #80
02a88     0E 00 00 FF 
02a8c     98 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7320
02a90     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02a94     38 73 02 F6 | 	mov	local05, local04
02a98     10 74 06 F6 | 	mov	local06, #16
02a9c     39 5F 02 F6 | 	mov	arg02, local05
02aa0     10 60 06 F6 | 	mov	arg03, #16
02aa4     0E 00 00 FF 
02aa8     98 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7320
02aac     F0 33 B0 FD | 	call	#__system__longmove
02ab0     15 77 02 F6 | 	mov	local07, result1
02ab4     6C 01 90 FD | 	jmp	#LR__0079
02ab8                 | LR__0073
02ab8                 | '     2:  longmove(@timings,@timings128,16)   'PAL 50 Hz signaling 912x624, active 800x480, 100x30 text, medium border, 2 colors per pixel 00_10_00_00_00=64, 283750000z
02ab8     50 0E 06 F1 | 	add	objptr, #80
02abc     07 5D 02 F6 | 	mov	arg01, objptr
02ac0     50 0E 86 F1 | 	sub	objptr, #80
02ac4     0E 00 00 FF 
02ac8     D8 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7384
02acc     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02ad0     38 73 02 F6 | 	mov	local05, local04
02ad4     10 74 06 F6 | 	mov	local06, #16
02ad8     39 5F 02 F6 | 	mov	arg02, local05
02adc     10 60 06 F6 | 	mov	arg03, #16
02ae0     0E 00 00 FF 
02ae4     D8 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7384
02ae8     B4 33 B0 FD | 	call	#__system__longmove
02aec     15 77 02 F6 | 	mov	local07, result1
02af0     30 01 90 FD | 	jmp	#LR__0079
02af4                 | LR__0074
02af4                 | '     3:  longmove(@timings,@timings192,16)   'PAL 50 Hz signaling 1140x624, active 1024x576, 128x36 text, borderless, 2 colors per pixel 00_11_00_00_00=6192, 354_693_878 Hz
02af4     50 0E 06 F1 | 	add	objptr, #80
02af8     07 5D 02 F6 | 	mov	arg01, objptr
02afc     50 0E 86 F1 | 	sub	objptr, #80
02b00     0E 00 00 FF 
02b04     18 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7448
02b08     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b0c     38 73 02 F6 | 	mov	local05, local04
02b10     10 74 06 F6 | 	mov	local06, #16
02b14     39 5F 02 F6 | 	mov	arg02, local05
02b18     10 60 06 F6 | 	mov	arg03, #16
02b1c     0E 00 00 FF 
02b20     18 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7448
02b24     78 33 B0 FD | 	call	#__system__longmove
02b28     15 77 02 F6 | 	mov	local07, result1
02b2c     F4 00 90 FD | 	jmp	#LR__0079
02b30                 | LR__0075
02b30                 | '     4:  longmove(@timings,@timings256,16)   'NTSC 50 Hz signaling 1140x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_00_00_00_00=256, 357959184 Hz
02b30     50 0E 06 F1 | 	add	objptr, #80
02b34     07 5D 02 F6 | 	mov	arg01, objptr
02b38     50 0E 86 F1 | 	sub	objptr, #80
02b3c     0E 00 00 FF 
02b40     58 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7512
02b44     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b48     38 73 02 F6 | 	mov	local05, local04
02b4c     10 74 06 F6 | 	mov	local06, #16
02b50     39 5F 02 F6 | 	mov	arg02, local05
02b54     10 60 06 F6 | 	mov	arg03, #16
02b58     0E 00 00 FF 
02b5c     58 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7512
02b60     3C 33 B0 FD | 	call	#__system__longmove
02b64     15 77 02 F6 | 	mov	local07, result1
02b68     B8 00 90 FD | 	jmp	#LR__0079
02b6c                 | LR__0076
02b6c                 | '     5:  longmove(@timings,@timings320,16)   'NTSC 50 Hz signaling 1026x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_01_00_00_00=320, 322162162 Hz
02b6c     50 0E 06 F1 | 	add	objptr, #80
02b70     07 5D 02 F6 | 	mov	arg01, objptr
02b74     50 0E 86 F1 | 	sub	objptr, #80
02b78     0E 00 00 FF 
02b7c     98 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7576
02b80     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02b84     38 73 02 F6 | 	mov	local05, local04
02b88     10 74 06 F6 | 	mov	local06, #16
02b8c     39 5F 02 F6 | 	mov	arg02, local05
02b90     10 60 06 F6 | 	mov	arg03, #16
02b94     0E 00 00 FF 
02b98     98 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7576
02b9c     00 33 B0 FD | 	call	#__system__longmove
02ba0     15 77 02 F6 | 	mov	local07, result1
02ba4     7C 00 90 FD | 	jmp	#LR__0079
02ba8                 | LR__0077
02ba8                 | '     6:  longmove(@timings,@timings384,16)   'NTSC 50 Hz signaling 912x524, active 800x480, 100x30 text, NO PLACE FOR wide border, 2 colors per pixel, 01_10_00_00_00=384, 286363636 Hz
02ba8     50 0E 06 F1 | 	add	objptr, #80
02bac     07 5D 02 F6 | 	mov	arg01, objptr
02bb0     50 0E 86 F1 | 	sub	objptr, #80
02bb4     0E 00 00 FF 
02bb8     D8 1B 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7640
02bbc     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02bc0     38 73 02 F6 | 	mov	local05, local04
02bc4     10 74 06 F6 | 	mov	local06, #16
02bc8     39 5F 02 F6 | 	mov	arg02, local05
02bcc     10 60 06 F6 | 	mov	arg03, #16
02bd0     0E 00 00 FF 
02bd4     D8 1B 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7640
02bd8     C4 32 B0 FD | 	call	#__system__longmove
02bdc     15 77 02 F6 | 	mov	local07, result1
02be0     40 00 90 FD | 	jmp	#LR__0079
02be4                 | LR__0078
02be4                 | '     7:  longmove(@timings,@timings448,16)   'NTSC 50 Hz signaling 1026x524, active 880x496, 110x31 text, borderless, 2 colors per pixel, 01_11_00_00_00=496, 322162162 Hz
02be4     50 0E 06 F1 | 	add	objptr, #80
02be8     07 79 02 F6 | 	mov	local08, objptr
02bec     3C 7B 02 F6 | 	mov	local09, local08
02bf0     0F 00 00 FF 
02bf4     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##7704
02bf8     0D 71 02 F6 | 	mov	local04, ptr__hng030rm_spin2_dat__
02bfc     38 73 02 F6 | 	mov	local05, local04
02c00     10 74 06 F6 | 	mov	local06, #16
02c04     3D 5D 02 F6 | 	mov	arg01, local09
02c08     39 5F 02 F6 | 	mov	arg02, local05
02c0c     10 60 06 F6 | 	mov	arg03, #16
02c10     50 0E 86 F1 | 	sub	objptr, #80
02c14     0F 00 00 FF 
02c18     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##7704
02c1c     80 32 B0 FD | 	call	#__system__longmove
02c20     15 77 02 F6 | 	mov	local07, result1
02c24                 | LR__0079
02c24                 | ' 
02c24                 | ' ' 4-bit graphics: do nothing with timings :)
02c24                 | ' if mode<512
02c24     01 00 00 FF 
02c28     00 6A 5E F2 | 	cmps	local01, ##512 wcz
02c2c     20 00 90 3D |  if_ae	jmp	#LR__0080
02c30     0C 00 00 FF 
02c34     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
02c38     0D 7D 02 F6 | 	mov	local10, ptr__hng030rm_spin2_dat__
02c3c                 | '   palette_ptr:=@ataripalette
02c3c     18 0E 06 F1 | 	add	objptr, #24
02c40     07 7D 62 FC | 	wrlong	local10, objptr
02c44     18 0E 86 F1 | 	sub	objptr, #24
02c48     0C 00 00 FF 
02c4c     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
02c50                 | LR__0080
02c50                 | ' 
02c50                 | ' if (mode & (%10_00_11_0000))==(%10_00_11_0000) ' 8bit graphics, 4 pixels per long instead of 8, cpp x2
02c50     35 6D 02 F6 | 	mov	local02, local01
02c54     01 00 00 FF 
02c58     30 6C 06 F5 | 	and	local02, ##560
02c5c     01 00 00 FF 
02c60     30 6C 0E F2 | 	cmp	local02, ##560 wz
02c64     48 00 90 5D |  if_ne	jmp	#LR__0081
02c68                 | '   timings[5]:=4
02c68     64 0E 06 F1 | 	add	objptr, #100
02c6c     07 09 68 FC | 	wrlong	#4, objptr
02c70     18 0E 06 F1 | 	add	objptr, #24
02c74     07 7F 02 FB | 	rdlong	local11, objptr
02c78     01 7E 66 F0 | 	shl	local11, #1
02c7c                 | '   timings[11]:=timings[11]<<1
02c7c     07 7F 62 FC | 	wrlong	local11, objptr
02c80                 | '   putpixel:=p8
02c80     6C 0E 06 F1 | 	add	objptr, #108
02c84     07 6D 02 FB | 	rdlong	local02, objptr
02c88     10 0E 86 F1 | 	sub	objptr, #16
02c8c     07 6D 62 FC | 	wrlong	local02, objptr
02c90     0C 00 00 FF 
02c94     58 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6232
02c98     0D 81 02 F6 | 	mov	local12, ptr__hng030rm_spin2_dat__
02c9c                 | '   palette_ptr:=@ataripalette
02c9c     C0 0E 86 F1 | 	sub	objptr, #192
02ca0     07 81 62 FC | 	wrlong	local12, objptr
02ca4     18 0E 86 F1 | 	sub	objptr, #24
02ca8     0C 00 00 FF 
02cac     58 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6232
02cb0                 | LR__0081
02cb0                 | ' 
02cb0                 | ' if (mode & (%10_00_11_0000))==(%10_00_01_0000) ' 2bit graphics, 16 pixels per long instead of 8, cpp /2
02cb0     35 6D 02 F6 | 	mov	local02, local01
02cb4     01 00 00 FF 
02cb8     30 6C 06 F5 | 	and	local02, ##560
02cbc     01 00 00 FF 
02cc0     10 6C 0E F2 | 	cmp	local02, ##528 wz
02cc4     48 00 90 5D |  if_ne	jmp	#LR__0082
02cc8                 | '   timings[5]:=16
02cc8     64 0E 06 F1 | 	add	objptr, #100
02ccc     07 21 68 FC | 	wrlong	#16, objptr
02cd0     18 0E 06 F1 | 	add	objptr, #24
02cd4     07 83 02 FB | 	rdlong	local13, objptr
02cd8     01 82 46 F0 | 	shr	local13, #1
02cdc                 | '   timings[11]:=timings[11]>>1
02cdc     07 83 62 FC | 	wrlong	local13, objptr
02ce0                 | '   putpixel:=p2
02ce0     64 0E 06 F1 | 	add	objptr, #100
02ce4     07 6D 02 FB | 	rdlong	local02, objptr
02ce8     08 0E 86 F1 | 	sub	objptr, #8
02cec     07 6D 62 FC | 	wrlong	local02, objptr
02cf0     0C 00 00 FF 
02cf4     08 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6152
02cf8     0D 85 02 F6 | 	mov	local14, ptr__hng030rm_spin2_dat__
02cfc                 | '   palette_ptr:=@fourcolors
02cfc     C0 0E 86 F1 | 	sub	objptr, #192
02d00     07 85 62 FC | 	wrlong	local14, objptr
02d04     18 0E 86 F1 | 	sub	objptr, #24
02d08     0C 00 00 FF 
02d0c     08 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6152
02d10                 | LR__0082
02d10                 | ' 
02d10                 | ' if (mode & (%10_00_11_0000))==(%10_00_00_0000) ' 1bit graphics, 32 pixels per long instead of 8, cpp /4
02d10     35 6D 02 F6 | 	mov	local02, local01
02d14     01 00 00 FF 
02d18     30 6C 06 F5 | 	and	local02, ##560
02d1c     01 00 00 FF 
02d20     00 6C 0E F2 | 	cmp	local02, ##512 wz
02d24     48 00 90 5D |  if_ne	jmp	#LR__0083
02d28                 | '   timings[5]:=32
02d28     64 0E 06 F1 | 	add	objptr, #100
02d2c     07 41 68 FC | 	wrlong	#32, objptr
02d30     18 0E 06 F1 | 	add	objptr, #24
02d34     07 87 02 FB | 	rdlong	local15, objptr
02d38     02 86 46 F0 | 	shr	local15, #2
02d3c                 | '   timings[11]:=timings[11]>>2
02d3c     07 87 62 FC | 	wrlong	local15, objptr
02d40                 | '   putpixel:=p1
02d40     60 0E 06 F1 | 	add	objptr, #96
02d44     07 6D 02 FB | 	rdlong	local02, objptr
02d48     04 0E 86 F1 | 	sub	objptr, #4
02d4c     07 6D 62 FC | 	wrlong	local02, objptr
02d50     0C 00 00 FF 
02d54     00 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6144
02d58     0D 89 02 F6 | 	mov	local16, ptr__hng030rm_spin2_dat__
02d5c                 | '   palette_ptr:=@twocolors
02d5c     C0 0E 86 F1 | 	sub	objptr, #192
02d60     07 89 62 FC | 	wrlong	local16, objptr
02d64     18 0E 86 F1 | 	sub	objptr, #24
02d68     0C 00 00 FF 
02d6c     00 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6144
02d70                 | LR__0083
02d70                 | ' 
02d70                 | ' if (mode & (%10_00_11_0000))==(%10_00_10_0000) ' 4bit graphics,
02d70     35 6D 02 F6 | 	mov	local02, local01
02d74     01 00 00 FF 
02d78     30 6C 06 F5 | 	and	local02, ##560
02d7c     01 00 00 FF 
02d80     20 6C 0E F2 | 	cmp	local02, ##544 wz
02d84     30 00 90 5D |  if_ne	jmp	#LR__0084
02d88                 | '   putpixel:=p4
02d88     E4 0E 06 F1 | 	add	objptr, #228
02d8c     07 6D 02 FB | 	rdlong	local02, objptr
02d90     0C 0E 86 F1 | 	sub	objptr, #12
02d94     07 6D 62 FC | 	wrlong	local02, objptr
02d98     0C 00 00 FF 
02d9c     18 1A 06 F1 | 	add	ptr__hng030rm_spin2_dat__, ##6168
02da0     0D 8B 02 F6 | 	mov	local17, ptr__hng030rm_spin2_dat__
02da4                 | '   palette_ptr:=@vga16
02da4     C0 0E 86 F1 | 	sub	objptr, #192
02da8     07 8B 62 FC | 	wrlong	local17, objptr
02dac     18 0E 86 F1 | 	sub	objptr, #24
02db0     0C 00 00 FF 
02db4     18 1A 86 F1 | 	sub	ptr__hng030rm_spin2_dat__, ##6168
02db8                 | LR__0084
02db8                 | ' 
02db8                 | ' repeat i from 0 to 4
02db8     00 8C 06 F6 | 	mov	local18, #0
02dbc     84 D2 9F FE | 	loc	pa,	#(@LR__0086-@LR__0085)
02dc0     93 00 A0 FD | 	call	#FCACHE_LOAD_
02dc4                 | LR__0085
02dc4     46 8F 02 F6 | 	mov	local19, local18
02dc8     02 8E 66 F0 | 	shl	local19, #2
02dcc     50 0E 06 F1 | 	add	objptr, #80
02dd0     07 8F 02 F1 | 	add	local19, objptr
02dd4     2C 0E 86 F1 | 	sub	objptr, #44
02dd8     07 91 02 FB | 	rdlong	local20, objptr
02ddc     24 0E 86 F1 | 	sub	objptr, #36
02de0     11 90 66 F0 | 	shl	local20, #17
02de4     47 93 02 FB | 	rdlong	local21, local19
02de8     48 93 02 F1 | 	add	local21, local20
02dec     49 95 02 F6 | 	mov	local22, local21
02df0     80 40 38 FF 
02df4     00 94 06 F1 | 	add	local22, ##1887502336
02df8                 | '   timings[i]:=timings[i]+hdmibase<<17+ timingsxxt
02df8     47 95 62 FC | 	wrlong	local22, local19
02dfc     01 8C 06 F1 | 	add	local18, #1
02e00     05 8C 5E F2 | 	cmps	local18, #5 wcz
02e04     BC FF 9F CD |  if_b	jmp	#LR__0085
02e08                 | LR__0086
02e08     24 0E 06 F1 | 	add	objptr, #36
02e0c     07 97 02 FB | 	rdlong	local23, objptr
02e10     11 96 66 F0 | 	shl	local23, #17
02e14     40 0E 06 F1 | 	add	objptr, #64
02e18     07 99 02 FB | 	rdlong	local24, objptr
02e1c     4B 99 02 F1 | 	add	local24, local23
02e20                 | ' timings[5]:=timings[5]+hdmibase<<17
02e20     07 99 62 FC | 	wrlong	local24, objptr
02e24                 | ' clkfreq:=timings[13]
02e24     20 0E 06 F1 | 	add	objptr, #32
02e28     07 6D 02 FB | 	rdlong	local02, objptr
02e2c     14 6C 66 FC | 	wrlong	local02, #20
02e30                 | ' hubset(timings[14])
02e30     04 0E 06 F1 | 	add	objptr, #4
02e34     07 5D 02 FB | 	rdlong	arg01, objptr
02e38     88 0E 86 F1 | 	sub	objptr, #136
02e3c     00 5C 62 FD | 	hubset	arg01
02e40                 | ' waitms(1)
02e40     01 5C 06 F6 | 	mov	arg01, #1
02e44     F8 32 B0 FD | 	call	#__system___waitms
02e48     35 9B 02 F6 | 	mov	local25, local01
02e4c     03 9A 06 F5 | 	and	local25, #3
02e50     4D 9D C2 F9 | 	decod	local26, local25
02e54                 | ' 
02e54                 | ' 
02e54                 | ' xzoom:=1<<(mode & 3)
02e54     CC 0E 06 F1 | 	add	objptr, #204
02e58     07 9D 62 FC | 	wrlong	local26, objptr
02e5c                 | ' 
02e5c                 | ' if (xzoom==8) && (((mode>>4)&3)<>3)
02e5c     4E 79 02 F6 | 	mov	local08, local26
02e60     CC 0E 86 F1 | 	sub	objptr, #204
02e64     08 78 0E F2 | 	cmp	local08, #8 wz
02e68     24 00 90 5D |  if_ne	jmp	#LR__0087
02e6c     35 7B 02 F6 | 	mov	local09, local01
02e70     04 7A 46 F0 | 	shr	local09, #4
02e74     03 7A 06 F5 | 	and	local09, #3
02e78     03 7A 0E F2 | 	cmp	local09, #3 wz
02e7c     10 00 90 AD |  if_e	jmp	#LR__0087
02e80                 | '   xzoom:=4
02e80     04 6C 06 F6 | 	mov	local02, #4
02e84     CC 0E 06 F1 | 	add	objptr, #204
02e88     07 09 68 FC | 	wrlong	#4, objptr
02e8c     CC 0E 86 F1 | 	sub	objptr, #204
02e90                 | LR__0087
02e90     35 9F 02 F6 | 	mov	local27, local01
02e94     02 9E 46 F0 | 	shr	local27, #2
02e98     03 9E 06 F5 | 	and	local27, #3
02e9c     4F A1 C2 F9 | 	decod	local28, local27
02ea0                 | ' 
02ea0                 | ' yzoom:=1<<((mode>>2) & 3)
02ea0     D0 0E 06 F1 | 	add	objptr, #208
02ea4     07 A1 62 FC | 	wrlong	local28, objptr
02ea8     04 0E 86 F1 | 	sub	objptr, #4
02eac     07 79 02 FB | 	rdlong	local08, objptr
02eb0     04 0E 06 F1 | 	add	objptr, #4
02eb4     07 71 02 FB | 	rdlong	local04, objptr
02eb8     38 79 02 FD | 	qmul	local08, local04
02ebc     18 A2 62 FD | 	getqx	local29
02ec0                 | ' azoom:=xzoom*yzoom
02ec0     04 0E 06 F1 | 	add	objptr, #4
02ec4     07 A3 62 FC | 	wrlong	local29, objptr
02ec8                 | ' 
02ec8                 | ' cpl:=timings[11]
02ec8     58 0E 86 F1 | 	sub	objptr, #88
02ecc     07 6D 02 FB | 	rdlong	local02, objptr
02ed0     14 0E 06 F1 | 	add	objptr, #20
02ed4     07 6D 62 FC | 	wrlong	local02, objptr
02ed8     90 0E 86 F1 | 	sub	objptr, #144
02edc                 | ' if (mode<512)
02edc     01 00 00 FF 
02ee0     00 6A 5E F2 | 	cmps	local01, ##512 wcz
02ee4     60 00 90 3D |  if_ae	jmp	#LR__0088
02ee8     80 0E 06 F1 | 	add	objptr, #128
02eec     07 0B 03 FB | 	rdlong	muldiva_, objptr
02ef0     04 0A 47 F0 | 	shr	muldiva_, #4
02ef4     50 0E 06 F1 | 	add	objptr, #80
02ef8     07 0D 03 FB | 	rdlong	muldivb_, objptr
02efc     D0 0E 86 F1 | 	sub	objptr, #208
02f00     CC 00 A0 FD | 	call	#unsdivide_
02f04                 | '   lines:=(timings[12]>>4)+/yzoom
02f04     94 0E 06 F1 | 	add	objptr, #148
02f08     07 0D 63 FC | 	wrlong	muldivb_, objptr
02f0c                 | '   if ((timings[12]>>4)+//yzoom) <>0
02f0c     14 0E 86 F1 | 	sub	objptr, #20
02f10     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f14     04 0A 47 F0 | 	shr	muldiva_, #4
02f18     50 0E 06 F1 | 	add	objptr, #80
02f1c     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f20     D0 0E 86 F1 | 	sub	objptr, #208
02f24     CC 00 A0 FD | 	call	#unsdivide_
02f28     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
02f2c     AC 00 90 AD |  if_e	jmp	#LR__0091
02f30                 | '     lines +=1
02f30     94 0E 06 F1 | 	add	objptr, #148
02f34     07 6D 02 FB | 	rdlong	local02, objptr
02f38     01 6C 06 F1 | 	add	local02, #1
02f3c     07 6D 62 FC | 	wrlong	local02, objptr
02f40     94 0E 86 F1 | 	sub	objptr, #148
02f44                 | ' 
02f44                 | ' else
02f44     94 00 90 FD | 	jmp	#LR__0091
02f48                 | LR__0088
02f48     80 0E 06 F1 | 	add	objptr, #128
02f4c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f50     50 0E 06 F1 | 	add	objptr, #80
02f54     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f58     D0 0E 86 F1 | 	sub	objptr, #208
02f5c     D0 00 A0 FD | 	call	#divide_
02f60                 | '   lines:=timings[12]/yzoom
02f60     94 0E 06 F1 | 	add	objptr, #148
02f64     07 0D 63 FC | 	wrlong	muldivb_, objptr
02f68                 | '   if cpl//xzoom==0
02f68     04 0E 86 F1 | 	sub	objptr, #4
02f6c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f70     3C 0E 06 F1 | 	add	objptr, #60
02f74     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f78     CC 0E 86 F1 | 	sub	objptr, #204
02f7c     D0 00 A0 FD | 	call	#divide_
02f80     00 0A 0F F2 | 	cmp	muldiva_, #0 wz
02f84     28 00 90 5D |  if_ne	jmp	#LR__0089
02f88                 | '     cpl:=cpl/xzoom
02f88     90 0E 06 F1 | 	add	objptr, #144
02f8c     07 0B 03 FB | 	rdlong	muldiva_, objptr
02f90     3C 0E 06 F1 | 	add	objptr, #60
02f94     07 0D 03 FB | 	rdlong	muldivb_, objptr
02f98     CC 0E 86 F1 | 	sub	objptr, #204
02f9c     D0 00 A0 FD | 	call	#divide_
02fa0     90 0E 06 F1 | 	add	objptr, #144
02fa4     07 0D 63 FC | 	wrlong	muldivb_, objptr
02fa8     90 0E 86 F1 | 	sub	objptr, #144
02fac                 | '   else
02fac     2C 00 90 FD | 	jmp	#LR__0090
02fb0                 | LR__0089
02fb0     90 0E 06 F1 | 	add	objptr, #144
02fb4     07 0B 03 FB | 	rdlong	muldiva_, objptr
02fb8     3C 0E 06 F1 | 	add	objptr, #60
02fbc     07 0D 03 FB | 	rdlong	muldivb_, objptr
02fc0     CC 0E 86 F1 | 	sub	objptr, #204
02fc4     D0 00 A0 FD | 	call	#divide_
02fc8     86 A5 02 F6 | 	mov	local30, muldivb_
02fcc     01 A4 06 F1 | 	add	local30, #1
02fd0                 | '     cpl:=cpl/xzoom+1
02fd0     90 0E 06 F1 | 	add	objptr, #144
02fd4     07 A5 62 FC | 	wrlong	local30, objptr
02fd8     90 0E 86 F1 | 	sub	objptr, #144
02fdc                 | LR__0090
02fdc                 | LR__0091
02fdc     90 0E 06 F1 | 	add	objptr, #144
02fe0     07 79 02 FB | 	rdlong	local08, objptr
02fe4     04 0E 06 F1 | 	add	objptr, #4
02fe8     07 71 02 FB | 	rdlong	local04, objptr
02fec     38 79 02 FD | 	qmul	local08, local04
02ff0     18 A6 62 FD | 	getqx	local31
02ff4                 | ' 
02ff4                 | ' buflen:=(cpl*lines)
02ff4     64 0E 86 F1 | 	sub	objptr, #100
02ff8     07 A7 62 FC | 	wrlong	local31, objptr
02ffc     30 0E 86 F1 | 	sub	objptr, #48
03000     02 A6 66 F0 | 	shl	local31, #2
03004     13 A8 C6 F9 | 	decod	local32, #19
03008     53 A9 82 F1 | 	sub	local32, local31
0300c                 | ' buf_ptr:=$80000-4*buflen
0300c     07 A9 62 FC | 	wrlong	local32, objptr
03010     50 0E 06 F1 | 	add	objptr, #80
03014     07 AB 02 F6 | 	mov	local33, objptr
03018                 | ' mode_ptr:=@timings
03018     3C 0E 86 F1 | 	sub	objptr, #60
0301c     07 AB 62 FC | 	wrlong	local33, objptr
03020                 | ' graphmode:=mode
03020     B0 0E 06 F1 | 	add	objptr, #176
03024     07 6B 62 FC | 	wrlong	local01, objptr
03028     C4 0E 86 F1 | 	sub	objptr, #196
0302c                 | ' makedl(mode)
0302c     35 5D 02 F6 | 	mov	arg01, local01
03030                 | ' 
03030                 | ' ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
03030                 | '   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
03030                 | '   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
03030                 | ' 
03030                 | ' '   0 - display a up/down border line
03030                 | ' 
03030                 | ' '  ' aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - text line
03030                 | ' '    aaaa_aaaa_aaaa_aaaa_aa00 - buffer start, has to be aligned, 1 long for char, ff_bb_rr_cc, foreground, background,reserved, charcode
03030                 | ' '    zz - zoom, 00-x1, 01-x2, 10-x4, 11-blank line
03030                 | ' '    nnnn - font line to display, 0..15
03030                 | ' '    llllll - character line, determines the cursor Y position
03030                 | ' 
03030                 | ' 
03030                 | ' if (mode &256==0)
03030     00 5D CE F7 | 	test	arg01, #256 wz
03034     1C 00 90 5D |  if_ne	jmp	#LR__0092
03038     07 AD 02 FB | 	rdlong	local34, objptr
0303c     04 00 00 FF 
03040     00 AD 86 F1 | 	sub	local34, ##2304
03044                 | '   dl_ptr:=buf_ptr-4*576
03044     1C 0E 06 F1 | 	add	objptr, #28
03048     07 AD 62 FC | 	wrlong	local34, objptr
0304c     1C 0E 86 F1 | 	sub	objptr, #28
03050                 | ' else
03050     18 00 90 FD | 	jmp	#LR__0093
03054                 | LR__0092
03054     07 AF 02 FB | 	rdlong	local35, objptr
03058     03 00 00 FF 
0305c     C0 AF 86 F1 | 	sub	local35, ##1984
03060                 | '   dl_ptr:=buf_ptr-4*496
03060     1C 0E 06 F1 | 	add	objptr, #28
03064     07 AF 62 FC | 	wrlong	local35, objptr
03068     1C 0E 86 F1 | 	sub	objptr, #28
0306c                 | LR__0093
0306c     2E B1 02 F6 | 	mov	local36, arg01
03070     02 B0 46 F0 | 	shr	local36, #2
03074     03 B0 06 F5 | 	and	local36, #3
03078                 | '  ' dl_ptr:=buf_ptr-4*540
03078                 | ' 
03078                 | ' vzoom:=((mode>>2) & 3)
03078                 | ' 
03078                 | ' 
03078                 | ' if mode<512 '' text modes
03078     01 00 00 FF 
0307c     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
03080     E4 01 90 3D |  if_ae	jmp	#LR__0101
03084                 | ' 
03084                 | '   if timings[6]>0 'borders
03084     68 0E 06 F1 | 	add	objptr, #104
03088     07 B3 02 FB | 	rdlong	local37, objptr
0308c     68 0E 86 F1 | 	sub	objptr, #104
03090     00 B2 5E F2 | 	cmps	local37, #0 wcz
03094     D4 00 90 ED |  if_be	jmp	#LR__0098
03098                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03098     00 B4 06 F6 | 	mov	local38, #0
0309c     68 0E 06 F1 | 	add	objptr, #104
030a0     07 B7 02 FB | 	rdlong	local39, objptr
030a4     68 0E 86 F1 | 	sub	objptr, #104
030a8     01 B6 86 F1 | 	sub	local39, #1
030ac     00 B6 5E F2 | 	cmps	local39, #0 wcz
030b0     01 B8 06 16 |  if_a	mov	local40, #1
030b4     01 B8 66 E6 |  if_be	neg	local40, #1
030b8     5C BB 02 F6 | 	mov	local41, local40
030bc     5C B7 02 F1 | 	add	local39, local40
030c0     64 CF 9F FE | 	loc	pa,	#(@LR__0095-@LR__0094)
030c4     93 00 A0 FD | 	call	#FCACHE_LOAD_
030c8                 | LR__0094
030c8     5A BD 02 F6 | 	mov	local42, local38
030cc     02 BC 66 F0 | 	shl	local42, #2
030d0     1C 0E 06 F1 | 	add	objptr, #28
030d4     07 BF 02 FB | 	rdlong	local43, objptr
030d8     1C 0E 86 F1 | 	sub	objptr, #28
030dc     5E BF 02 F1 | 	add	local43, local42
030e0                 | '       long[dl_ptr+4*i]:=$0
030e0     5F 01 68 FC | 	wrlong	#0, local43
030e4     5D B5 02 F1 | 	add	local38, local41
030e8     5B B5 0A F2 | 	cmp	local38, local39 wz
030ec     D8 FF 9F 5D |  if_ne	jmp	#LR__0094
030f0                 | LR__0095
030f0                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
030f0     68 0E 06 F1 | 	add	objptr, #104
030f4     07 B5 02 FB | 	rdlong	local38, objptr
030f8     18 0E 06 F1 | 	add	objptr, #24
030fc     07 B9 02 FB | 	rdlong	local40, objptr
03100     5C B5 02 F1 | 	add	local38, local40
03104     0C 0E 06 F1 | 	add	objptr, #12
03108     07 C1 02 FB | 	rdlong	local44, objptr
0310c     01 C0 86 F1 | 	sub	local44, #1
03110     24 0E 86 F1 | 	sub	objptr, #36
03114     07 C3 02 FB | 	rdlong	local45, objptr
03118     18 0E 06 F1 | 	add	objptr, #24
0311c     07 C5 02 FB | 	rdlong	local46, objptr
03120     80 0E 86 F1 | 	sub	objptr, #128
03124     62 C3 02 F1 | 	add	local45, local46
03128     61 C1 5A F2 | 	cmps	local44, local45 wcz
0312c     01 C6 06 16 |  if_a	mov	local47, #1
03130     01 C6 66 E6 |  if_be	neg	local47, #1
03134     63 C9 02 F6 | 	mov	local48, local47
03138     63 C1 02 F1 | 	add	local44, local47
0313c     E8 CE 9F FE | 	loc	pa,	#(@LR__0097-@LR__0096)
03140     93 00 A0 FD | 	call	#FCACHE_LOAD_
03144                 | LR__0096
03144     5A CB 02 F6 | 	mov	local49, local38
03148     02 CA 66 F0 | 	shl	local49, #2
0314c     1C 0E 06 F1 | 	add	objptr, #28
03150     07 CD 02 FB | 	rdlong	local50, objptr
03154     1C 0E 86 F1 | 	sub	objptr, #28
03158     65 CD 02 F1 | 	add	local50, local49
0315c                 | '       long[dl_ptr+4*i]:=$0
0315c     66 01 68 FC | 	wrlong	#0, local50
03160     64 B5 02 F1 | 	add	local38, local48
03164     60 B5 0A F2 | 	cmp	local38, local44 wz
03168     D8 FF 9F 5D |  if_ne	jmp	#LR__0096
0316c                 | LR__0097
0316c                 | LR__0098
0316c     10 CE 06 F6 | 	mov	local51, #16
03170     58 CF 62 F0 | 	shl	local51, local36
03174                 | '   lpc:=16<<vzoom
03174                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
03174     68 0E 06 F1 | 	add	objptr, #104
03178     07 B5 02 FB | 	rdlong	local38, objptr
0317c     5A D1 02 F6 | 	mov	local52, local38
03180     18 0E 06 F1 | 	add	objptr, #24
03184     07 D3 02 FB | 	rdlong	local53, objptr
03188     69 D1 02 F1 | 	add	local52, local53
0318c     01 D0 86 F1 | 	sub	local52, #1
03190     18 0E 86 F1 | 	sub	objptr, #24
03194     07 C7 02 FB | 	rdlong	local47, objptr
03198     68 0E 86 F1 | 	sub	objptr, #104
0319c     63 D1 5A F2 | 	cmps	local52, local47 wcz
031a0     01 D4 06 16 |  if_a	mov	local54, #1
031a4     01 D4 66 E6 |  if_be	neg	local54, #1
031a8     6A D7 02 F6 | 	mov	local55, local54
031ac     6A D1 02 F1 | 	add	local52, local54
031b0     FC CE 9F FE | 	loc	pa,	#(@LR__0100-@LR__0099)
031b4     93 00 A0 FD | 	call	#FCACHE_LOAD_
031b8                 | LR__0099
031b8     5A 0B 03 F6 | 	mov	muldiva_, local38
031bc     68 0E 06 F1 | 	add	objptr, #104
031c0     07 D9 02 FB | 	rdlong	local56, objptr
031c4     68 0E 86 F1 | 	sub	objptr, #104
031c8     6C 0B 83 F1 | 	sub	muldiva_, local56
031cc     67 0D 03 F6 | 	mov	muldivb_, local51
031d0     CC 00 A0 FD | 	call	#unsdivide_
031d4     58 0B 43 F0 | 	shr	muldiva_, local36
031d8                 | '     fontline2:=((i-timings[6])+//lpc)>>vzoom
031d8     85 DB 02 F6 | 	mov	local57, muldiva_
031dc     5A 0B 03 F6 | 	mov	muldiva_, local38
031e0     68 0E 06 F1 | 	add	objptr, #104
031e4     07 D9 02 FB | 	rdlong	local56, objptr
031e8     68 0E 86 F1 | 	sub	objptr, #104
031ec     6C 0B 83 F1 | 	sub	muldiva_, local56
031f0     67 0D 03 F6 | 	mov	muldivb_, local51
031f4     CC 00 A0 FD | 	call	#unsdivide_
031f8     86 DD 02 F6 | 	mov	local58, muldivb_
031fc                 | '     charline:=(i-timings[6])+/lpc
031fc     90 0E 06 F1 | 	add	objptr, #144
03200     07 D9 02 FB | 	rdlong	local56, objptr
03204     90 0E 86 F1 | 	sub	objptr, #144
03208     6E D9 02 FD | 	qmul	local56, local58
0320c     18 DE 62 FD | 	getqx	local59
03210     02 DE 66 F0 | 	shl	local59, #2
03214     07 E1 02 FB | 	rdlong	local60, objptr
03218     6F E1 02 F1 | 	add	local60, local59
0321c     2E E3 02 F6 | 	mov	local61, arg01
03220     03 E2 06 F5 | 	and	local61, #3
03224     71 E1 02 F1 | 	add	local60, local61
03228                 | '     bufstart:=buf_ptr+4*((cpl)*charline)+(mode&3)
03228     0C E0 66 F0 | 	shl	local60, #12
0322c     08 DA 66 F0 | 	shl	local57, #8
03230     6D E1 02 F1 | 	add	local60, local57
03234     02 DC 66 F0 | 	shl	local58, #2
03238     6E E1 02 F1 | 	add	local60, local58
0323c     01 E0 06 F1 | 	add	local60, #1
03240     5A E5 02 F6 | 	mov	local62, local38
03244     02 E4 66 F0 | 	shl	local62, #2
03248     1C 0E 06 F1 | 	add	objptr, #28
0324c     07 E7 02 FB | 	rdlong	local63, objptr
03250     1C 0E 86 F1 | 	sub	objptr, #28
03254     72 E7 02 F1 | 	add	local63, local62
03258                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+(fontline2<<8)+(charline<<2)+1
03258     73 E1 62 FC | 	wrlong	local60, local63
0325c     6B B5 02 F1 | 	add	local38, local55
03260     68 B5 0A F2 | 	cmp	local38, local52 wz
03264     50 FF 9F 5D |  if_ne	jmp	#LR__0099
03268                 | LR__0100
03268                 | LR__0101
03268                 | ' 
03268                 | ' 
03268                 | ' 
03268                 | ' if (mode>=512)' and (mode & (%10_00_00_0000))==(%10_00_00_0000) ' graphics -> all modes TODO :mode 560+192=752 = 10_11_11_0000 impossib,e because out of memory
03268     01 00 00 FF 
0326c     00 5C 5E F2 | 	cmps	arg01, ##512 wcz
03270     AC 01 90 CD |  if_b	jmp	#LR__0109
03274                 | ' 
03274                 | '   if timings[6]>0 'borders
03274     68 0E 06 F1 | 	add	objptr, #104
03278     07 B3 02 FB | 	rdlong	local37, objptr
0327c     68 0E 86 F1 | 	sub	objptr, #104
03280     00 B2 5E F2 | 	cmps	local37, #0 wcz
03284     D4 00 90 ED |  if_be	jmp	#LR__0106
03288                 | '     repeat i from 0 to timings[6]-1 '0 to -1
03288     00 B4 06 F6 | 	mov	local38, #0
0328c     68 0E 06 F1 | 	add	objptr, #104
03290     07 E9 02 FB | 	rdlong	local64, objptr
03294     68 0E 86 F1 | 	sub	objptr, #104
03298     01 E8 86 F1 | 	sub	local64, #1
0329c     00 E8 5E F2 | 	cmps	local64, #0 wcz
032a0     01 B8 06 16 |  if_a	mov	local40, #1
032a4     01 B8 66 E6 |  if_be	neg	local40, #1
032a8     5C EB 02 F6 | 	mov	local65, local40
032ac     5C E9 02 F1 | 	add	local64, local40
032b0     74 CD 9F FE | 	loc	pa,	#(@LR__0103-@LR__0102)
032b4     93 00 A0 FD | 	call	#FCACHE_LOAD_
032b8                 | LR__0102
032b8     5A ED 02 F6 | 	mov	local66, local38
032bc     02 EC 66 F0 | 	shl	local66, #2
032c0     1C 0E 06 F1 | 	add	objptr, #28
032c4     07 EF 02 FB | 	rdlong	local67, objptr
032c8     1C 0E 86 F1 | 	sub	objptr, #28
032cc     76 EF 02 F1 | 	add	local67, local66
032d0                 | '       long[dl_ptr+4*i]:=$0
032d0     77 01 68 FC | 	wrlong	#0, local67
032d4     75 B5 02 F1 | 	add	local38, local65
032d8     74 B5 0A F2 | 	cmp	local38, local64 wz
032dc     D8 FF 9F 5D |  if_ne	jmp	#LR__0102
032e0                 | LR__0103
032e0                 | '     repeat i from timings[6]+timings[12] to timings[15]-1
032e0     68 0E 06 F1 | 	add	objptr, #104
032e4     07 B5 02 FB | 	rdlong	local38, objptr
032e8     18 0E 06 F1 | 	add	objptr, #24
032ec     07 B9 02 FB | 	rdlong	local40, objptr
032f0     5C B5 02 F1 | 	add	local38, local40
032f4     0C 0E 06 F1 | 	add	objptr, #12
032f8     07 F1 02 FB | 	rdlong	local68, objptr
032fc     01 F0 86 F1 | 	sub	local68, #1
03300     24 0E 86 F1 | 	sub	objptr, #36
03304     07 C3 02 FB | 	rdlong	local45, objptr
03308     18 0E 06 F1 | 	add	objptr, #24
0330c     07 C5 02 FB | 	rdlong	local46, objptr
03310     80 0E 86 F1 | 	sub	objptr, #128
03314     62 C3 02 F1 | 	add	local45, local46
03318     61 F1 5A F2 | 	cmps	local68, local45 wcz
0331c     01 C6 06 16 |  if_a	mov	local47, #1
03320     01 C6 66 E6 |  if_be	neg	local47, #1
03324     63 F3 02 F6 | 	mov	local69, local47
03328     63 F1 02 F1 | 	add	local68, local47
0332c     F8 CC 9F FE | 	loc	pa,	#(@LR__0105-@LR__0104)
03330     93 00 A0 FD | 	call	#FCACHE_LOAD_
03334                 | LR__0104
03334     5A F5 02 F6 | 	mov	local70, local38
03338     02 F4 66 F0 | 	shl	local70, #2
0333c     1C 0E 06 F1 | 	add	objptr, #28
03340     07 F7 02 FB | 	rdlong	local71, objptr
03344     1C 0E 86 F1 | 	sub	objptr, #28
03348     7A F7 02 F1 | 	add	local71, local70
0334c                 | '       long[dl_ptr+4*i]:=$0
0334c     7B 01 68 FC | 	wrlong	#0, local71
03350     79 B5 02 F1 | 	add	local38, local69
03354     78 B5 0A F2 | 	cmp	local38, local68 wz
03358     D8 FF 9F 5D |  if_ne	jmp	#LR__0104
0335c                 | LR__0105
0335c                 | LR__0106
0335c                 | '   repeat i from timings[6] to timings[6]+timings[12]-1
0335c     68 0E 06 F1 | 	add	objptr, #104
03360     07 B5 02 FB | 	rdlong	local38, objptr
03364     5A F9 02 F6 | 	mov	local72, local38
03368     18 0E 06 F1 | 	add	objptr, #24
0336c     07 D3 02 FB | 	rdlong	local53, objptr
03370     69 F9 02 F1 | 	add	local72, local53
03374     01 F8 86 F1 | 	sub	local72, #1
03378     18 0E 86 F1 | 	sub	objptr, #24
0337c     07 C7 02 FB | 	rdlong	local47, objptr
03380     68 0E 86 F1 | 	sub	objptr, #104
03384     63 F9 5A F2 | 	cmps	local72, local47 wcz
03388     01 D4 06 16 |  if_a	mov	local54, #1
0338c     01 D4 66 E6 |  if_be	neg	local54, #1
03390     6A FB 02 F6 | 	mov	local73, local54
03394     6A F9 02 F1 | 	add	local72, local54
03398     E4 CC 9F FE | 	loc	pa,	#(@LR__0108-@LR__0107)
0339c     93 00 A0 FD | 	call	#FCACHE_LOAD_
033a0                 | LR__0107
033a0     5A FD 02 F6 | 	mov	local74, local38
033a4     68 0E 06 F1 | 	add	objptr, #104
033a8     07 D9 02 FB | 	rdlong	local56, objptr
033ac     6C FD 82 F1 | 	sub	local74, local56
033b0     58 FD 42 F0 | 	shr	local74, local36
033b4     28 0E 06 F1 | 	add	objptr, #40
033b8     07 D9 02 FB | 	rdlong	local56, objptr
033bc     90 0E 86 F1 | 	sub	objptr, #144
033c0     7E D9 02 FD | 	qmul	local56, local74
033c4     18 FE 62 FD | 	getqx	local75
033c8     02 FE 66 F0 | 	shl	local75, #2
033cc     07 01 03 FB | 	rdlong	local76, objptr
033d0     7F 01 03 F1 | 	add	local76, local75
033d4     2E 03 03 F6 | 	mov	local77, arg01
033d8     03 02 07 F5 | 	and	local77, #3
033dc     81 01 03 F1 | 	add	local76, local77
033e0                 | '     bufstart:=buf_ptr+4*(cpl*((i-timings[6])>>vzoom))+(mode&3)
033e0     0C 00 67 F0 | 	shl	local76, #12
033e4     02 00 07 F1 | 	add	local76, #2
033e8     2E 05 03 F6 | 	mov	local78, arg01
033ec     30 04 07 F5 | 	and	local78, #48
033f0     02 04 47 F0 | 	shr	local78, #2
033f4     82 01 03 F1 | 	add	local76, local78
033f8     5A 07 03 F6 | 	mov	local79, local38
033fc     02 06 67 F0 | 	shl	local79, #2
03400     1C 0E 06 F1 | 	add	objptr, #28
03404     07 09 03 FB | 	rdlong	local80, objptr
03408     1C 0E 86 F1 | 	sub	objptr, #28
0340c     83 09 03 F1 | 	add	local80, local79
03410                 | '     long[dl_ptr+4*i]:=(bufstart<<12)+2+(mode &48)>>2
03410     84 01 63 FC | 	wrlong	local76, local80
03414     7D B5 02 F1 | 	add	local38, local73
03418     7C B5 0A F2 | 	cmp	local38, local72 wz
0341c     80 FF 9F 5D |  if_ne	jmp	#LR__0107
03420                 | LR__0108
03420                 | LR__0109
03420                 | LR__0110
03420     AF F0 03 F6 | 	mov	ptra, fp
03424     BF 00 A0 FD | 	call	#popregs_
03428                 | _hng030rm_spin2_setmode_ret
03428     2D 00 64 FD | 	ret
0342c                 | 
0342c                 | ' 
0342c                 | ' pub serialcog()| rr, mrr, srr, b, mb, midireport, kbmreport
0342c                 | _retrocog_spin2_serialcog
0342c     1C 5A 05 F6 | 	mov	COUNT_, #28
03430     B0 00 A0 FD | 	call	#pushregs_
03434                 | ' 
03434                 | ' 'start serial and midi
03434                 | ' 
03434                 | ' serial_start(rxpin, txpin, baudrate)
03434     20 5C 06 F6 | 	mov	arg01, #32
03438     21 5E 06 F6 | 	mov	arg02, #33
0343c     A6 0E 00 FF 
03440     00 60 06 F6 | 	mov	arg03, ##1920000
03444     D8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
03448                 | ' serial_start(midiin,midiout,mbaudrate)
03448     1D 5C 06 F6 | 	mov	arg01, #29
0344c     1E 5E 06 F6 | 	mov	arg02, #30
03450     3D 00 00 FF 
03454     12 60 06 F6 | 	mov	arg03, ##31250
03458     C4 05 B0 FD | 	call	#_retrocog_spin2_serial_start
0345c                 | ' serial_start(srxpin,stxpin,sbaudrate)
0345c     42 0F 00 FF 
03460     80 6A 06 F6 | 	mov	local01, ##2000000
03464     3F 5C 06 F6 | 	mov	arg01, #63
03468     3E 5E 06 F6 | 	mov	arg02, #62
0346c     42 0F 00 FF 
03470     80 60 06 F6 | 	mov	arg03, ##2000000
03474     A8 05 B0 FD | 	call	#_retrocog_spin2_serial_start
03478                 | ' 
03478                 | ' mb:=(-1)
03478     01 6C 66 F6 | 	neg	local02, #1
0347c                 | ' b:=(-1)
0347c     01 6E 66 F6 | 	neg	local03, #1
03480                 | ' 
03480                 | ' mousefront:=0
03480     00 70 06 F6 | 	mov	local04, #0
03484     08 0E 06 F1 | 	add	objptr, #8
03488     07 01 68 FC | 	wrlong	#0, objptr
0348c                 | ' mousetail:=0
0348c     04 0E 06 F1 | 	add	objptr, #4
03490     07 01 68 FC | 	wrlong	#0, objptr
03494     0C 0E 86 F1 | 	sub	objptr, #12
03498                 | ' kbdfront:=0
03498     07 01 68 FC | 	wrlong	#0, objptr
0349c                 | ' kbdtail:=0
0349c     04 0E 06 F1 | 	add	objptr, #4
034a0     07 01 68 FC | 	wrlong	#0, objptr
034a4                 | ' midifront:=0
034a4     0C 0E 06 F1 | 	add	objptr, #12
034a8     07 01 68 FC | 	wrlong	#0, objptr
034ac                 | ' miditail:=0
034ac     04 0E 06 F1 | 	add	objptr, #4
034b0     07 01 68 FC | 	wrlong	#0, objptr
034b4                 | ' serialfront:=0
034b4     04 0E 06 F1 | 	add	objptr, #4
034b8     07 01 68 FC | 	wrlong	#0, objptr
034bc                 | ' serialtail:=0
034bc     04 0E 06 F1 | 	add	objptr, #4
034c0     07 01 68 FC | 	wrlong	#0, objptr
034c4                 | ' long[$30]:=0
034c4     30 00 6C FC | 	wrlong	#0, #48
034c8                 | ' long[$34]:=0
034c8     34 00 6C FC | 	wrlong	#0, #52
034cc                 | ' long[$38]:=0
034cc     38 00 6C FC | 	wrlong	#0, #56
034d0     1C 0E 86 F1 | 	sub	objptr, #28
034d4                 | ' long[$3C]:=0
034d4     3C 00 6C FC | 	wrlong	#0, #60
034d8                 | ' 
034d8                 | ' repeat
034d8                 | LR__0111
034d8                 | ' 
034d8                 | ' '  repeat 
034d8                 | '   rr:=rxcheck(rxpin)
034d8     20 5C 06 F6 | 	mov	arg01, #32
034dc     BC 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034e0     15 73 02 F6 | 	mov	local05, result1
034e4                 | '   mrr:=rxcheck(midiin)
034e4     1D 5C 06 F6 | 	mov	arg01, #29
034e8     B0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034ec     15 75 02 F6 | 	mov	local06, result1
034f0                 | '   srr:=rxcheck(srxpin)
034f0     3F 70 06 F6 | 	mov	local04, #63
034f4     3F 5C 06 F6 | 	mov	arg01, #63
034f8     A0 05 B0 FD | 	call	#_retrocog_spin2_rxcheck
034fc     15 77 02 F6 | 	mov	local07, result1
03500     3B 79 02 F6 | 	mov	local08, local07
03504                 | ' 
03504                 | ' '  until rr>=0 || mrr>=0  || srr>=0
03504                 | ' 
03504                 | '   
03504                 | ' ' midi. Must be >= $80 for a command
03504                 | ' '$80-$8F - 3 bytes note off. note, velocity
03504                 | ' '$90-$9F - 3 bytes note on, note, velocity
03504                 | ' '$A0-$AF - 3 bytes poly aftertouch. note, value
03504                 | ' '$B0-$BF - 3 bytes control change, controller-value, 
03504                 | ' '$C0-$CF - 2 bytes program change
03504                 | ' '$D0-$DF - 2 bytes mono aftertouch
03504                 | ' '$E0-$EF - 3 bytes pitch bend, $2000 - center
03504                 | ' '$F0-$FF - 1 byte
03504                 | '   
03504                 | '   if srr>=0
03504     00 78 5E F2 | 	cmps	local08, #0 wcz
03508     7C 00 90 CD |  if_b	jmp	#LR__0113
0350c                 | '   
0350c                 | '     if serialfront<>((serialtail-1) //32)
0350c     1C 0E 06 F1 | 	add	objptr, #28
03510     07 77 02 FB | 	rdlong	local07, objptr
03514     3B 71 02 F6 | 	mov	local04, local07
03518     01 70 86 F1 | 	sub	local04, #1
0351c     38 6B 52 F6 | 	abs	local01, local04 wc
03520     1F 6A 06 F5 | 	and	local01, #31
03524     35 6B 62 C6 |  if_b	neg	local01, local01
03528     04 0E 86 F1 | 	sub	objptr, #4
0352c     07 7B 02 FB | 	rdlong	local09, objptr
03530     18 0E 86 F1 | 	sub	objptr, #24
03534     3D 7D 02 F6 | 	mov	local10, local09
03538     35 7D 0A F2 | 	cmp	local10, local01 wz
0353c     48 00 90 AD |  if_e	jmp	#LR__0112
03540     18 0E 06 F1 | 	add	objptr, #24
03544     07 7D 02 FB | 	rdlong	local10, objptr
03548     01 00 00 FF 
0354c     08 0F 06 F1 | 	add	objptr, ##776
03550     07 7D 02 F1 | 	add	local10, objptr
03554     3E 7F 02 F6 | 	mov	local11, local10
03558                 | '       serialbuf[serialfront]:=srr
03558     3F 79 42 FC | 	wrbyte	local08, local11
0355c                 | '       serialfront+=1
0355c     01 00 00 FF 
03560     08 0F 86 F1 | 	sub	objptr, ##776
03564     07 6B 02 FB | 	rdlong	local01, objptr
03568     01 6A 06 F1 | 	add	local01, #1
0356c     07 6B 62 FC | 	wrlong	local01, objptr
03570                 | '       serialfront:=serialfront // 32
03570     35 77 02 F6 | 	mov	local07, local01
03574     3B 71 52 F6 | 	abs	local04, local07 wc
03578     1F 70 06 F5 | 	and	local04, #31
0357c     38 71 62 C6 |  if_b	neg	local04, local04
03580     07 71 62 FC | 	wrlong	local04, objptr
03584     18 0E 86 F1 | 	sub	objptr, #24
03588                 | LR__0112
03588                 | LR__0113
03588                 | '     
03588                 | '   if ((mrr>=$80) && (mrr<=$BF)) || ((mrr>=$E0) && (mrr<=$EF)) 
03588     80 74 5E F2 | 	cmps	local06, #128 wcz
0358c     08 00 90 CD |  if_b	jmp	#LR__0114
03590     BF 74 5E F2 | 	cmps	local06, #191 wcz
03594     10 00 90 ED |  if_be	jmp	#LR__0115
03598                 | LR__0114
03598     E0 74 5E F2 | 	cmps	local06, #224 wcz
0359c     1C 00 90 CD |  if_b	jmp	#LR__0116
035a0     EF 74 5E F2 | 	cmps	local06, #239 wcz
035a4     14 00 90 1D |  if_a	jmp	#LR__0116
035a8                 | LR__0115
035a8                 | '     mb:=2
035a8     02 6C 06 F6 | 	mov	local02, #2
035ac     3A 71 02 F6 | 	mov	local04, local06
035b0     18 70 66 F0 | 	shl	local04, #24
035b4     38 81 02 F6 | 	mov	local12, local04
035b8                 | '     midireport:=mrr<<24
035b8     40 83 02 F6 | 	mov	local13, local12
035bc                 | LR__0116
035bc                 | ' 
035bc                 | '   if (mrr>=$C0) && (mrr<=$DF)
035bc     C0 74 5E F2 | 	cmps	local06, #192 wcz
035c0     1C 00 90 CD |  if_b	jmp	#LR__0117
035c4     DF 74 5E F2 | 	cmps	local06, #223 wcz
035c8     14 00 90 1D |  if_a	jmp	#LR__0117
035cc                 | '     mb:=1
035cc     01 6C 06 F6 | 	mov	local02, #1
035d0     3A 71 02 F6 | 	mov	local04, local06
035d4     18 70 66 F0 | 	shl	local04, #24
035d8     38 85 02 F6 | 	mov	local14, local04
035dc                 | '     midireport:=mrr<<24
035dc     42 83 02 F6 | 	mov	local13, local14
035e0                 | LR__0117
035e0                 | '   
035e0                 | '   if (mrr>=$F0) 'TODO: do something with SYSEX, now a workaround for Novation Impulse
035e0     F0 74 5E F2 | 	cmps	local06, #240 wcz
035e4     10 00 90 CD |  if_b	jmp	#LR__0118
035e8                 | '     mb:=4
035e8     04 6C 06 F6 | 	mov	local02, #4
035ec     3A 87 02 F6 | 	mov	local15, local06
035f0     18 86 66 F0 | 	shl	local15, #24
035f4                 | '     midireport:=mrr<<24  
035f4     43 83 02 F6 | 	mov	local13, local15
035f8                 | LR__0118
035f8                 | '   
035f8                 | '   if (mrr<$80) && (mb>0) && (mrr>=0)
035f8     80 74 5E F2 | 	cmps	local06, #128 wcz
035fc     44 00 90 3D |  if_ae	jmp	#LR__0120
03600     00 6C 5E F2 | 	cmps	local02, #0 wcz
03604     3C 00 90 ED |  if_be	jmp	#LR__0120
03608     00 74 5E F2 | 	cmps	local06, #0 wcz
0360c     34 00 90 CD |  if_b	jmp	#LR__0120
03610                 | '     
03610                 | '     mb--
03610     36 71 02 F6 | 	mov	local04, local02
03614     36 77 02 F6 | 	mov	local07, local02
03618     01 76 86 F1 | 	sub	local07, #1
0361c     3B 6D 02 F6 | 	mov	local02, local07
03620                 | '     if mb<3
03620     03 6C 5E F2 | 	cmps	local02, #3 wcz
03624     1C 00 90 3D |  if_ae	jmp	#LR__0119
03628     36 89 02 F6 | 	mov	local16, local02
0362c     03 88 66 F0 | 	shl	local16, #3
03630     3A 8B 02 F6 | 	mov	local17, local06
03634     44 8B 62 F0 | 	shl	local17, local16
03638                 | '       midireport+=mrr<<(mb<<3)
03638     41 71 02 F6 | 	mov	local04, local13
0363c     45 71 02 F1 | 	add	local04, local17
03640     38 83 02 F6 | 	mov	local13, local04
03644                 | LR__0119
03644                 | LR__0120
03644                 | '   
03644                 | '   if mb==0
03644     00 6C 0E F2 | 	cmp	local02, #0 wz
03648     84 00 90 5D |  if_ne	jmp	#LR__0122
0364c                 | '     
0364c                 | '     if midifront<>((miditail-1) //32)
0364c     14 0E 06 F1 | 	add	objptr, #20
03650     07 77 02 FB | 	rdlong	local07, objptr
03654     3B 71 02 F6 | 	mov	local04, local07
03658     01 70 86 F1 | 	sub	local04, #1
0365c     38 6B 52 F6 | 	abs	local01, local04 wc
03660     1F 6A 06 F5 | 	and	local01, #31
03664     35 6B 62 C6 |  if_b	neg	local01, local01
03668     04 0E 86 F1 | 	sub	objptr, #4
0366c     07 7B 02 FB | 	rdlong	local09, objptr
03670     10 0E 86 F1 | 	sub	objptr, #16
03674     3D 7D 02 F6 | 	mov	local10, local09
03678     35 7D 0A F2 | 	cmp	local10, local01 wz
0367c     4C 00 90 AD |  if_e	jmp	#LR__0121
03680     10 0E 06 F1 | 	add	objptr, #16
03684     07 7D 02 FB | 	rdlong	local10, objptr
03688     02 7C 66 F0 | 	shl	local10, #2
0368c     01 00 00 FF 
03690     90 0E 06 F1 | 	add	objptr, ##656
03694     07 7D 02 F1 | 	add	local10, objptr
03698     3E 8D 02 F6 | 	mov	local18, local10
0369c                 | '       midibuf[midifront]:=midireport
0369c     46 83 62 FC | 	wrlong	local13, local18
036a0                 | '       midifront+=1
036a0     01 00 00 FF 
036a4     90 0E 86 F1 | 	sub	objptr, ##656
036a8     07 6B 02 FB | 	rdlong	local01, objptr
036ac     01 6A 06 F1 | 	add	local01, #1
036b0     07 6B 62 FC | 	wrlong	local01, objptr
036b4                 | '       midifront:=midifront // 32
036b4     35 77 02 F6 | 	mov	local07, local01
036b8     3B 71 52 F6 | 	abs	local04, local07 wc
036bc     1F 70 06 F5 | 	and	local04, #31
036c0     38 71 62 C6 |  if_b	neg	local04, local04
036c4     07 71 62 FC | 	wrlong	local04, objptr
036c8     10 0E 86 F1 | 	sub	objptr, #16
036cc                 | LR__0121
036cc                 | '     mb:=(-1)
036cc     01 6C 66 F6 | 	neg	local02, #1
036d0                 | LR__0122
036d0                 | ' 
036d0                 | ' 'Keyboard and mouse
036d0                 | ' 
036d0                 | '   if (rr>=$80) && (rr<>$FF)
036d0     80 72 5E F2 | 	cmps	local05, #128 wcz
036d4     1C 00 90 CD |  if_b	jmp	#LR__0123
036d8     FF 72 0E F2 | 	cmp	local05, #255 wz
036dc     14 00 90 AD |  if_e	jmp	#LR__0123
036e0                 | '     b:=3
036e0     03 6E 06 F6 | 	mov	local03, #3
036e4     39 71 02 F6 | 	mov	local04, local05
036e8     18 70 66 F0 | 	shl	local04, #24
036ec     38 8F 02 F6 | 	mov	local19, local04
036f0                 | '     kbmreport:=rr<<24
036f0     47 91 02 F6 | 	mov	local20, local19
036f4                 | LR__0123
036f4                 | '   
036f4                 | '   if (rr<$80) && (b>0) && (rr>=0)
036f4     80 72 5E F2 | 	cmps	local05, #128 wcz
036f8     38 00 90 3D |  if_ae	jmp	#LR__0124
036fc     00 6E 5E F2 | 	cmps	local03, #0 wcz
03700     30 00 90 ED |  if_be	jmp	#LR__0124
03704     00 72 5E F2 | 	cmps	local05, #0 wcz
03708     28 00 90 CD |  if_b	jmp	#LR__0124
0370c                 | '     b--
0370c     37 77 02 F6 | 	mov	local07, local03
03710     01 76 86 F1 | 	sub	local07, #1
03714     3B 6F 02 F6 | 	mov	local03, local07
03718     37 93 02 F6 | 	mov	local21, local03
0371c     03 92 66 F0 | 	shl	local21, #3
03720     39 95 02 F6 | 	mov	local22, local05
03724     49 95 62 F0 | 	shl	local22, local21
03728                 | '     kbmreport+=rr<<(b<<3)  
03728     48 71 02 F6 | 	mov	local04, local20
0372c     4A 71 02 F1 | 	add	local04, local22
03730     38 91 02 F6 | 	mov	local20, local04
03734                 | LR__0124
03734                 | '   
03734                 | '   if (rr==$FF)
03734     FF 72 0E F2 | 	cmp	local05, #255 wz
03738                 | '     b:=0   
03738     00 6E 06 A6 |  if_e	mov	local03, #0
0373c                 | ' 
0373c                 | '   if b==0  
0373c     00 6E 0E F2 | 	cmp	local03, #0 wz
03740     14 01 90 5D |  if_ne	jmp	#LR__0129
03744                 | '  
03744                 | '     if (kbmreport +>= $80000000) && (kbmreport +< $87000000)  'mouse
03744     00 00 40 FF 
03748     00 90 1E F2 | 	cmp	local20, ##-2147483648 wcz
0374c     84 00 90 CD |  if_b	jmp	#LR__0126
03750     00 80 43 FF 
03754     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
03758     78 00 90 3D |  if_ae	jmp	#LR__0126
0375c                 | '       if mousefront<>((mousetail-1) //128)
0375c     0C 0E 06 F1 | 	add	objptr, #12
03760     07 77 02 FB | 	rdlong	local07, objptr
03764     3B 71 02 F6 | 	mov	local04, local07
03768     01 70 86 F1 | 	sub	local04, #1
0376c     38 6B 52 F6 | 	abs	local01, local04 wc
03770     7F 6A 06 F5 | 	and	local01, #127
03774     35 6B 62 C6 |  if_b	neg	local01, local01
03778     04 0E 86 F1 | 	sub	objptr, #4
0377c     07 7B 02 FB | 	rdlong	local09, objptr
03780     08 0E 86 F1 | 	sub	objptr, #8
03784     3D 7D 02 F6 | 	mov	local10, local09
03788     35 7D 0A F2 | 	cmp	local10, local01 wz
0378c     44 00 90 AD |  if_e	jmp	#LR__0125
03790     08 0E 06 F1 | 	add	objptr, #8
03794     07 7D 02 FB | 	rdlong	local10, objptr
03798     02 7C 66 F0 | 	shl	local10, #2
0379c     98 0E 06 F1 | 	add	objptr, #152
037a0     07 7D 02 F1 | 	add	local10, objptr
037a4     3E 97 02 F6 | 	mov	local23, local10
037a8                 | '         mousebuf[mousefront]:=kbmreport
037a8     4B 91 62 FC | 	wrlong	local20, local23
037ac                 | '         mousefront+=1
037ac     98 0E 86 F1 | 	sub	objptr, #152
037b0     07 6B 02 FB | 	rdlong	local01, objptr
037b4     01 6A 06 F1 | 	add	local01, #1
037b8     07 6B 62 FC | 	wrlong	local01, objptr
037bc                 | '         mousefront:=mousefront // 128
037bc     35 77 02 F6 | 	mov	local07, local01
037c0     3B 71 52 F6 | 	abs	local04, local07 wc
037c4     7F 70 06 F5 | 	and	local04, #127
037c8     38 71 62 C6 |  if_b	neg	local04, local04
037cc     07 71 62 FC | 	wrlong	local04, objptr
037d0     08 0E 86 F1 | 	sub	objptr, #8
037d4                 | LR__0125
037d4                 | LR__0126
037d4                 | '     b:=(-1)
037d4     01 6E 66 F6 | 	neg	local03, #1
037d8                 | ' 
037d8                 | '     if (kbmreport +>= $87000000) && (kbmreport +< $8a000000)  'keyboard
037d8     00 80 43 FF 
037dc     00 90 1E F2 | 	cmp	local20, ##-2030043136 wcz
037e0     70 00 90 CD |  if_b	jmp	#LR__0128
037e4     00 00 45 FF 
037e8     00 90 1E F2 | 	cmp	local20, ##-1979711488 wcz
037ec     64 00 90 3D |  if_ae	jmp	#LR__0128
037f0                 | '       if kbdfront<>((kbdtail-1) //32)
037f0     04 0E 06 F1 | 	add	objptr, #4
037f4     07 77 02 FB | 	rdlong	local07, objptr
037f8     04 0E 86 F1 | 	sub	objptr, #4
037fc     3B 71 02 F6 | 	mov	local04, local07
03800     01 70 86 F1 | 	sub	local04, #1
03804     38 6B 52 F6 | 	abs	local01, local04 wc
03808     1F 6A 06 F5 | 	and	local01, #31
0380c     35 6B 62 C6 |  if_b	neg	local01, local01
03810     07 7D 02 FB | 	rdlong	local10, objptr
03814     35 7D 0A F2 | 	cmp	local10, local01 wz
03818     38 00 90 AD |  if_e	jmp	#LR__0127
0381c     07 6B 02 FB | 	rdlong	local01, objptr
03820     02 6A 66 F0 | 	shl	local01, #2
03824     20 0E 06 F1 | 	add	objptr, #32
03828     07 6B 02 F1 | 	add	local01, objptr
0382c     35 99 02 F6 | 	mov	local24, local01
03830                 | '         kbdbuf[kbdfront]:=kbmreport
03830     4C 91 62 FC | 	wrlong	local20, local24
03834                 | '         kbdfront+=1
03834     20 0E 86 F1 | 	sub	objptr, #32
03838     07 77 02 FB | 	rdlong	local07, objptr
0383c     01 76 06 F1 | 	add	local07, #1
03840     07 77 62 FC | 	wrlong	local07, objptr
03844                 | '         kbdfront:=kbdfront // 32
03844     3B 71 52 F6 | 	abs	local04, local07 wc
03848     1F 70 06 F5 | 	and	local04, #31
0384c     38 71 62 C6 |  if_b	neg	local04, local04
03850     07 71 62 FC | 	wrlong	local04, objptr
03854                 | LR__0127
03854                 | LR__0128
03854                 | '     b:=(-1)
03854     01 6E 66 F6 | 	neg	local03, #1
03858                 | LR__0129
03858                 | ' 
03858                 | ' 
03858                 | '   if long[$30]==0
03858     30 70 0E FB | 	rdlong	local04, #48 wz
0385c     5C 00 90 5D |  if_ne	jmp	#LR__0131
03860                 | '     if kbdfront<>kbdtail
03860     07 71 02 FB | 	rdlong	local04, objptr
03864     04 0E 06 F1 | 	add	objptr, #4
03868     07 6B 02 FB | 	rdlong	local01, objptr
0386c     04 0E 86 F1 | 	sub	objptr, #4
03870     35 71 0A F2 | 	cmp	local04, local01 wz
03874     44 00 90 AD |  if_e	jmp	#LR__0130
03878     04 0E 06 F1 | 	add	objptr, #4
0387c     07 9B 02 FB | 	rdlong	local25, objptr
03880     02 9A 66 F0 | 	shl	local25, #2
03884     1C 0E 06 F1 | 	add	objptr, #28
03888     07 9B 02 F1 | 	add	local25, objptr
0388c                 | '       long[$30]:=kbdbuf[kbdtail]
0388c     4D 71 02 FB | 	rdlong	local04, local25
03890     30 70 66 FC | 	wrlong	local04, #48
03894                 | '       kbdtail++
03894     1C 0E 86 F1 | 	sub	objptr, #28
03898     07 7D 02 FB | 	rdlong	local10, objptr
0389c     3E 6B 02 F6 | 	mov	local01, local10
038a0     01 6A 06 F1 | 	add	local01, #1
038a4     07 6B 62 FC | 	wrlong	local01, objptr
038a8                 | '       kbdtail:= kbdtail // 32
038a8     35 71 52 F6 | 	abs	local04, local01 wc
038ac     1F 70 06 F5 | 	and	local04, #31
038b0     38 71 62 C6 |  if_b	neg	local04, local04
038b4     07 71 62 FC | 	wrlong	local04, objptr
038b8     04 0E 86 F1 | 	sub	objptr, #4
038bc                 | LR__0130
038bc                 | LR__0131
038bc                 | '       
038bc                 | '   if long[$34]==0
038bc     34 70 0E FB | 	rdlong	local04, #52 wz
038c0     64 00 90 5D |  if_ne	jmp	#LR__0133
038c4                 | '     if mousefront<>mousetail
038c4     08 0E 06 F1 | 	add	objptr, #8
038c8     07 71 02 FB | 	rdlong	local04, objptr
038cc     04 0E 06 F1 | 	add	objptr, #4
038d0     07 7D 02 FB | 	rdlong	local10, objptr
038d4     0C 0E 86 F1 | 	sub	objptr, #12
038d8     3E 6B 02 F6 | 	mov	local01, local10
038dc     35 71 0A F2 | 	cmp	local04, local01 wz
038e0     44 00 90 AD |  if_e	jmp	#LR__0132
038e4     0C 0E 06 F1 | 	add	objptr, #12
038e8     07 9D 02 FB | 	rdlong	local26, objptr
038ec     02 9C 66 F0 | 	shl	local26, #2
038f0     94 0E 06 F1 | 	add	objptr, #148
038f4     07 9D 02 F1 | 	add	local26, objptr
038f8                 | '       long[$34]:=mousebuf[mousetail]
038f8     4E 71 02 FB | 	rdlong	local04, local26
038fc     34 70 66 FC | 	wrlong	local04, #52
03900                 | '       mousetail++
03900     94 0E 86 F1 | 	sub	objptr, #148
03904     07 7D 02 FB | 	rdlong	local10, objptr
03908     3E 6B 02 F6 | 	mov	local01, local10
0390c     01 6A 06 F1 | 	add	local01, #1
03910     07 6B 62 FC | 	wrlong	local01, objptr
03914                 | '       mousetail:= mousetail // 128
03914     35 71 52 F6 | 	abs	local04, local01 wc
03918     7F 70 06 F5 | 	and	local04, #127
0391c     38 71 62 C6 |  if_b	neg	local04, local04
03920     07 71 62 FC | 	wrlong	local04, objptr
03924     0C 0E 86 F1 | 	sub	objptr, #12
03928                 | LR__0132
03928                 | LR__0133
03928                 | ' 
03928                 | '       
03928                 | '   if long[$38]==0
03928     38 70 0E FB | 	rdlong	local04, #56 wz
0392c     6C 00 90 5D |  if_ne	jmp	#LR__0135
03930                 | '     if midifront<>miditail
03930     10 0E 06 F1 | 	add	objptr, #16
03934     07 71 02 FB | 	rdlong	local04, objptr
03938     04 0E 06 F1 | 	add	objptr, #4
0393c     07 7D 02 FB | 	rdlong	local10, objptr
03940     14 0E 86 F1 | 	sub	objptr, #20
03944     3E 6B 02 F6 | 	mov	local01, local10
03948     35 71 0A F2 | 	cmp	local04, local01 wz
0394c     4C 00 90 AD |  if_e	jmp	#LR__0134
03950     14 0E 06 F1 | 	add	objptr, #20
03954     07 9F 02 FB | 	rdlong	local27, objptr
03958     02 9E 66 F0 | 	shl	local27, #2
0395c     01 00 00 FF 
03960     8C 0E 06 F1 | 	add	objptr, ##652
03964     07 9F 02 F1 | 	add	local27, objptr
03968                 | '       long[$38]:=midibuf[miditail]
03968     4F 71 02 FB | 	rdlong	local04, local27
0396c     38 70 66 FC | 	wrlong	local04, #56
03970                 | '       miditail++
03970     01 00 00 FF 
03974     8C 0E 86 F1 | 	sub	objptr, ##652
03978     07 7D 02 FB | 	rdlong	local10, objptr
0397c     3E 6B 02 F6 | 	mov	local01, local10
03980     01 6A 06 F1 | 	add	local01, #1
03984     07 6B 62 FC | 	wrlong	local01, objptr
03988                 | '       miditail:= miditail // 32
03988     35 71 52 F6 | 	abs	local04, local01 wc
0398c     1F 70 06 F5 | 	and	local04, #31
03990     38 71 62 C6 |  if_b	neg	local04, local04
03994     07 71 62 FC | 	wrlong	local04, objptr
03998     14 0E 86 F1 | 	sub	objptr, #20
0399c                 | LR__0134
0399c                 | LR__0135
0399c                 | '       
0399c                 | '   if long[$3c]==0
0399c     3C 70 0E FB | 	rdlong	local04, #60 wz
039a0     34 FB 9F 5D |  if_ne	jmp	#LR__0111
039a4                 | '     if serialfront<>serialtail
039a4     18 0E 06 F1 | 	add	objptr, #24
039a8     07 71 02 FB | 	rdlong	local04, objptr
039ac     04 0E 06 F1 | 	add	objptr, #4
039b0     07 7D 02 FB | 	rdlong	local10, objptr
039b4     1C 0E 86 F1 | 	sub	objptr, #28
039b8     3E 6B 02 F6 | 	mov	local01, local10
039bc     35 71 0A F2 | 	cmp	local04, local01 wz
039c0     14 FB 9F AD |  if_e	jmp	#LR__0111
039c4                 | '       byte[$3c]:=255
039c4     3C FE 4D FC | 	wrbyte	#255, #60
039c8     1C 0E 06 F1 | 	add	objptr, #28
039cc     07 A1 02 FB | 	rdlong	local28, objptr
039d0     01 00 00 FF 
039d4     04 0F 06 F1 | 	add	objptr, ##772
039d8     07 A1 02 F1 | 	add	local28, objptr
039dc                 | '       byte[$3D]:=serialbuf[serialtail]
039dc     50 71 C2 FA | 	rdbyte	local04, local28
039e0     3D 70 46 FC | 	wrbyte	local04, #61
039e4                 | '       serialtail++
039e4     01 00 00 FF 
039e8     04 0F 86 F1 | 	sub	objptr, ##772
039ec     07 7D 02 FB | 	rdlong	local10, objptr
039f0     3E 6B 02 F6 | 	mov	local01, local10
039f4     01 6A 06 F1 | 	add	local01, #1
039f8     07 6B 62 FC | 	wrlong	local01, objptr
039fc                 | '       serialtail:= serialtail // 32
039fc     35 71 52 F6 | 	abs	local04, local01 wc
03a00     1F 70 06 F5 | 	and	local04, #31
03a04     38 71 62 C6 |  if_b	neg	local04, local04
03a08     07 71 62 FC | 	wrlong	local04, objptr
03a0c     1C 0E 86 F1 | 	sub	objptr, #28
03a10     C4 FA 9F FD | 	jmp	#LR__0111
03a14     AF F0 03 F6 | 	mov	ptra, fp
03a18     BF 00 A0 FD | 	call	#popregs_
03a1c                 | _retrocog_spin2_serialcog_ret
03a1c     2D 00 64 FD | 	ret
03a20                 | 
03a20                 | '       
03a20                 | ' 
03a20                 | ' ''---------------------- Serial functions from jm_serial.spin2, modified
03a20                 | ' 
03a20                 | ' pub serial_start(rxpin, txpin, baud) | bitmode
03a20                 | _retrocog_spin2_serial_start
03a20     04 5A 05 F6 | 	mov	COUNT_, #4
03a24     B0 00 A0 FD | 	call	#pushregs_
03a28     2E 6B 02 F6 | 	mov	local01, arg01
03a2c     2F 6D 02 F6 | 	mov	local02, arg02
03a30                 | ' 
03a30                 | ' bitmode := muldiv64(clkfreq, $1_0000, baud) & $FFFFFC00       ' set bit timing
03a30     14 5C 06 FB | 	rdlong	arg01, #20
03a34     10 5E C6 F9 | 	decod	arg02, #16
03a38     2F 5D 02 FD | 	qmul	arg01, arg02
03a3c     19 6E 62 FD | 	getqy	local03
03a40     18 70 62 FD | 	getqx	local04
03a44     28 6E 62 FD | 	setq	local03
03a48     30 71 12 FD | 	qdiv	local04, arg03
03a4c     18 2A 62 FD | 	getqx	result1
03a50     15 61 02 F6 | 	mov	arg03, result1
03a54     FE FF 7F FF 
03a58     00 60 06 F5 | 	and	arg03, ##-1024
03a5c                 | ' bitmode |= 7                                                  ' set bits (8)
03a5c     07 60 46 F5 | 	or	arg03, #7
03a60                 | ' pinstart(rxpin,P_HIGH_15K|P_ASYNC_RX,bitmode,0)
03a60     40 6A 62 FD | 	dirl	local01
03a64     08 00 80 FF 
03a68     35 7D 08 FC | 	wrpin	##4158, local01
03a6c     35 61 12 FC | 	wxpin	arg03, local01
03a70     35 01 28 FC | 	wypin	#0, local01
03a74     41 6A 62 FD | 	dirh	local01
03a78                 | ' pinstart(txpin,P_ASYNC_TX|P_OE,bitmode,0)
03a78     40 6C 62 FD | 	dirl	local02
03a7c     36 F9 08 FC | 	wrpin	#124, local02
03a80     36 61 12 FC | 	wxpin	arg03, local02
03a84     36 01 28 FC | 	wypin	#0, local02
03a88     41 6C 62 FD | 	dirh	local02
03a8c                 | ' pinhigh(rxpin)
03a8c     59 6A 62 FD | 	drvh	local01
03a90     AF F0 03 F6 | 	mov	ptra, fp
03a94     BF 00 A0 FD | 	call	#popregs_
03a98                 | _retrocog_spin2_serial_start_ret
03a98     2D 00 64 FD | 	ret
03a9c                 | 
03a9c                 | ' 
03a9c                 | ' pub rxcheck(pin) : rxbyte | check
03a9c                 | _retrocog_spin2_rxcheck
03a9c     03 5A 05 F6 | 	mov	COUNT_, #3
03aa0     B0 00 A0 FD | 	call	#pushregs_
03aa4     2E 6B 02 F6 | 	mov	local01, arg01
03aa8                 | ' 
03aa8                 | ' '' Check for serial input
03aa8                 | ' '' -- returns -1 if nothing available
03aa8                 | ' 
03aa8                 | '   rxbyte := -1
03aa8     01 6C 66 F6 | 	neg	local02, #1
03aac                 | '   check := pinr(pin)
03aac     35 5D 02 F6 | 	mov	arg01, local01
03ab0     6C 26 B0 FD | 	call	#__system___pinread
03ab4     15 6F 0A F6 | 	mov	local03, result1 wz
03ab8                 | '   if (check)
03ab8                 | '     rxbyte := rdpin(pin) >> 24
03ab8     00 6C 06 56 |  if_ne	mov	local02, #0
03abc     35 6D 8A 5A |  if_ne	rdpin	local02, local01
03ac0     18 6C 46 50 |  if_ne	shr	local02, #24
03ac4     36 2B 02 F6 | 	mov	result1, local02
03ac8     AF F0 03 F6 | 	mov	ptra, fp
03acc     BF 00 A0 FD | 	call	#popregs_
03ad0                 | _retrocog_spin2_rxcheck_ret
03ad0     2D 00 64 FD | 	ret
03ad4                 | 
03ad4                 | _trackerplayer_spin2_initModule
03ad4     3E 5A 05 F6 | 	mov	COUNT_, #62
03ad8     B0 00 A0 FD | 	call	#pushregs_
03adc     24 F1 07 F1 | 	add	ptra, #292
03ae0     AF 5C 62 FC | 	wrlong	arg01, fp
03ae4     04 5E 05 F1 | 	add	fp, #4
03ae8     AF 5E 62 FC | 	wrlong	arg02, fp
03aec     04 5E 85 F1 | 	sub	fp, #4
03af0     AF 6A 02 FB | 	rdlong	local01, fp
03af4     02 00 00 FF 
03af8     38 6A 06 F1 | 	add	local01, ##1080
03afc                 | ' 
03afc                 | '   ' Set some data pointers
03afc                 | '   magicFour      := hubPtr + 1080
03afc     9D 0E 06 F1 | 	add	objptr, #157
03b00     07 6B 62 FC | 	wrlong	local01, objptr
03b04                 | '   nameStr        := hubPtr
03b04     AF 6C 02 FB | 	rdlong	local02, fp
03b08     97 0E 86 F1 | 	sub	objptr, #151
03b0c     07 6D 62 FC | 	wrlong	local02, objptr
03b10     AF 6E 02 FB | 	rdlong	local03, fp
03b14     14 6E 06 F1 | 	add	local03, #20
03b18                 | '   samplesInfoLut := hubPtr + 20
03b18     04 0E 06 F1 | 	add	objptr, #4
03b1c     07 6F 62 FC | 	wrlong	local03, objptr
03b20                 | ' 
03b20                 | '   ' Is this a 31 sample module?
03b20                 | '   if byte[magicFour][0] == "M" and byte[magicFour][2] == "K"
03b20     93 0E 06 F1 | 	add	objptr, #147
03b24     07 6D 02 FB | 	rdlong	local02, objptr
03b28     9D 0E 86 F1 | 	sub	objptr, #157
03b2c     36 71 C2 FA | 	rdbyte	local04, local02
03b30     4D 70 0E F2 | 	cmp	local04, #77 wz
03b34     48 01 90 5D |  if_ne	jmp	#LR__0139
03b38     9D 0E 06 F1 | 	add	objptr, #157
03b3c     07 73 02 FB | 	rdlong	local05, objptr
03b40     9D 0E 86 F1 | 	sub	objptr, #157
03b44     02 72 06 F1 | 	add	local05, #2
03b48     39 75 C2 FA | 	rdbyte	local06, local05
03b4c     4B 74 0E F2 | 	cmp	local06, #75 wz
03b50     2C 01 90 5D |  if_ne	jmp	#LR__0139
03b54     AF 76 02 FB | 	rdlong	local07, fp
03b58     01 00 00 FF 
03b5c     B6 77 06 F1 | 	add	local07, ##950
03b60                 | '     songLength          := byte[hubPtr + 950]
03b60     3B 6D C2 FA | 	rdbyte	local02, local07
03b64     9A 0E 06 F1 | 	add	objptr, #154
03b68     07 6D 42 FC | 	wrbyte	local02, objptr
03b6c     AF 78 02 FB | 	rdlong	local08, fp
03b70     01 00 00 FF 
03b74     B7 79 06 F1 | 	add	local08, ##951
03b78                 | '     unknown1            := byte[hubPtr + 951]
03b78     3C 6D C2 FA | 	rdbyte	local02, local08
03b7c     02 0E 06 F1 | 	add	objptr, #2
03b80     07 6D 42 FC | 	wrbyte	local02, objptr
03b84     AF 7A 02 FB | 	rdlong	local09, fp
03b88     01 00 00 FF 
03b8c     B8 7B 06 F1 | 	add	local09, ##952
03b90                 | '     songPositionsLut    :=      hubPtr + 952
03b90     06 0E 86 F1 | 	sub	objptr, #6
03b94     07 7B 62 FC | 	wrlong	local09, objptr
03b98     AF 7C 02 FB | 	rdlong	local10, fp
03b9c     02 00 00 FF 
03ba0     3C 7C 06 F1 | 	add	local10, ##1084
03ba4                 | '     patternsData        :=      hubPtr + 1084
03ba4     04 0E 86 F1 | 	sub	objptr, #4
03ba8     07 7D 62 FC | 	wrlong	local10, objptr
03bac                 | '     numberOfInstruments := 31
03bac     14 0E 06 F1 | 	add	objptr, #20
03bb0     07 3F 48 FC | 	wrbyte	#31, objptr
03bb4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03bb4     0B 0E 86 F1 | 	sub	objptr, #11
03bb8     07 01 48 FC | 	wrbyte	#0, objptr
03bbc     9B 0E 86 F1 | 	sub	objptr, #155
03bc0                 | '     repeat i from 952 to 1079
03bc0     08 5E 05 F1 | 	add	fp, #8
03bc4     01 00 80 FF 
03bc8     AF 70 6B FC | 	wrlong	##952, fp
03bcc     08 5E 85 F1 | 	sub	fp, #8
03bd0     9C C4 9F FE | 	loc	pa,	#(@LR__0138-@LR__0136)
03bd4     93 00 A0 FD | 	call	#FCACHE_LOAD_
03bd8                 | LR__0136
03bd8                 | '       if byte[hubPtr][i] > numberOfPatterns
03bd8     AF 7E 02 FB | 	rdlong	local11, fp
03bdc     08 5E 05 F1 | 	add	fp, #8
03be0     AF 70 02 FB | 	rdlong	local04, fp
03be4     08 5E 85 F1 | 	sub	fp, #8
03be8     3F 71 02 F1 | 	add	local04, local11
03bec     38 75 C2 FA | 	rdbyte	local06, local04
03bf0     9B 0E 06 F1 | 	add	objptr, #155
03bf4     07 81 C2 FA | 	rdbyte	local12, objptr
03bf8     9B 0E 86 F1 | 	sub	objptr, #155
03bfc     40 75 5A F2 | 	cmps	local06, local12 wcz
03c00     24 00 90 ED |  if_be	jmp	#LR__0137
03c04     AF 7E 02 FB | 	rdlong	local11, fp
03c08     08 5E 05 F1 | 	add	fp, #8
03c0c     AF 82 02 FB | 	rdlong	local13, fp
03c10     08 5E 85 F1 | 	sub	fp, #8
03c14     3F 83 02 F1 | 	add	local13, local11
03c18                 | '         numberOfPatterns := byte[hubPtr][i]
03c18     41 85 C2 FA | 	rdbyte	local14, local13
03c1c     9B 0E 06 F1 | 	add	objptr, #155
03c20     07 85 42 FC | 	wrbyte	local14, objptr
03c24     9B 0E 86 F1 | 	sub	objptr, #155
03c28                 | LR__0137
03c28     08 5E 05 F1 | 	add	fp, #8
03c2c     AF 84 02 FB | 	rdlong	local14, fp
03c30     01 84 06 F1 | 	add	local14, #1
03c34     AF 84 62 FC | 	wrlong	local14, fp
03c38     08 5E 85 F1 | 	sub	fp, #8
03c3c     02 00 00 FF 
03c40     38 84 5E F2 | 	cmps	local14, ##1080 wcz
03c44     90 FF 9F CD |  if_b	jmp	#LR__0136
03c48                 | LR__0138
03c48                 | '     numberOfPatterns++
03c48     9B 0E 06 F1 | 	add	objptr, #155
03c4c     07 85 C2 FA | 	rdbyte	local14, objptr
03c50     07 71 C2 FA | 	rdbyte	local04, objptr
03c54     01 70 06 F1 | 	add	local04, #1
03c58     07 71 42 FC | 	wrbyte	local04, objptr
03c5c     07 87 C2 FA | 	rdbyte	local15, objptr
03c60     0A 86 66 F0 | 	shl	local15, #10
03c64     09 0E 86 F1 | 	sub	objptr, #9
03c68     07 89 02 FB | 	rdlong	local16, objptr
03c6c     43 89 02 F1 | 	add	local16, local15
03c70                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
03c70     84 0E 86 F1 | 	sub	objptr, #132
03c74     07 89 62 FC | 	wrlong	local16, objptr
03c78     0E 0E 86 F1 | 	sub	objptr, #14
03c7c                 | ' 
03c7c                 | '   ' This must be an oldschool 15 sample soundtracker module
03c7c                 | '   else
03c7c     18 01 90 FD | 	jmp	#LR__0143
03c80                 | LR__0139
03c80     AF 8A 02 FB | 	rdlong	local17, fp
03c84     D6 8B 06 F1 | 	add	local17, #470
03c88                 | '     songLength          := byte[hubPtr + 470]
03c88     45 6D C2 FA | 	rdbyte	local02, local17
03c8c     9A 0E 06 F1 | 	add	objptr, #154
03c90     07 6D 42 FC | 	wrbyte	local02, objptr
03c94     AF 8C 02 FB | 	rdlong	local18, fp
03c98     D7 8D 06 F1 | 	add	local18, #471
03c9c                 | '     unknown1            := byte[hubPtr + 471]
03c9c     46 6D C2 FA | 	rdbyte	local02, local18
03ca0     02 0E 06 F1 | 	add	objptr, #2
03ca4     07 6D 42 FC | 	wrbyte	local02, objptr
03ca8     AF 8E 02 FB | 	rdlong	local19, fp
03cac     D8 8F 06 F1 | 	add	local19, #472
03cb0                 | '     songPositionsLut    :=      hubPtr + 472
03cb0     06 0E 86 F1 | 	sub	objptr, #6
03cb4     07 8F 62 FC | 	wrlong	local19, objptr
03cb8     AF 90 02 FB | 	rdlong	local20, fp
03cbc     01 00 00 FF 
03cc0     58 90 06 F1 | 	add	local20, ##600
03cc4                 | '     patternsData        :=      hubPtr + 600
03cc4     04 0E 86 F1 | 	sub	objptr, #4
03cc8     07 91 62 FC | 	wrlong	local20, objptr
03ccc                 | '     numberOfInstruments := 15
03ccc     14 0E 06 F1 | 	add	objptr, #20
03cd0     07 1F 48 FC | 	wrbyte	#15, objptr
03cd4                 | '     numberOfPatterns    := 0    ' Find out how many patterns that are available
03cd4     0B 0E 86 F1 | 	sub	objptr, #11
03cd8     07 01 48 FC | 	wrbyte	#0, objptr
03cdc     9B 0E 86 F1 | 	sub	objptr, #155
03ce0                 | '     repeat i from 472 to 599
03ce0     08 5E 05 F1 | 	add	fp, #8
03ce4     AF B0 6B FC | 	wrlong	#472, fp
03ce8     08 5E 85 F1 | 	sub	fp, #8
03cec     80 C3 9F FE | 	loc	pa,	#(@LR__0142-@LR__0140)
03cf0     93 00 A0 FD | 	call	#FCACHE_LOAD_
03cf4                 | LR__0140
03cf4                 | '       if byte[hubPtr][i] > numberOfPatterns
03cf4     AF 7E 02 FB | 	rdlong	local11, fp
03cf8     08 5E 05 F1 | 	add	fp, #8
03cfc     AF 70 02 FB | 	rdlong	local04, fp
03d00     08 5E 85 F1 | 	sub	fp, #8
03d04     3F 71 02 F1 | 	add	local04, local11
03d08     38 75 C2 FA | 	rdbyte	local06, local04
03d0c     9B 0E 06 F1 | 	add	objptr, #155
03d10     07 81 C2 FA | 	rdbyte	local12, objptr
03d14     9B 0E 86 F1 | 	sub	objptr, #155
03d18     40 75 5A F2 | 	cmps	local06, local12 wcz
03d1c     24 00 90 ED |  if_be	jmp	#LR__0141
03d20     AF 7E 02 FB | 	rdlong	local11, fp
03d24     08 5E 05 F1 | 	add	fp, #8
03d28     AF 92 02 FB | 	rdlong	local21, fp
03d2c     08 5E 85 F1 | 	sub	fp, #8
03d30     3F 93 02 F1 | 	add	local21, local11
03d34                 | '         numberOfPatterns := byte[hubPtr][i]
03d34     49 85 C2 FA | 	rdbyte	local14, local21
03d38     9B 0E 06 F1 | 	add	objptr, #155
03d3c     07 85 42 FC | 	wrbyte	local14, objptr
03d40     9B 0E 86 F1 | 	sub	objptr, #155
03d44                 | LR__0141
03d44     08 5E 05 F1 | 	add	fp, #8
03d48     AF 84 02 FB | 	rdlong	local14, fp
03d4c     01 84 06 F1 | 	add	local14, #1
03d50     AF 84 62 FC | 	wrlong	local14, fp
03d54     08 5E 85 F1 | 	sub	fp, #8
03d58     01 00 00 FF 
03d5c     58 84 5E F2 | 	cmps	local14, ##600 wcz
03d60     90 FF 9F CD |  if_b	jmp	#LR__0140
03d64                 | LR__0142
03d64                 | '     numberOfPatterns++
03d64     9B 0E 06 F1 | 	add	objptr, #155
03d68     07 85 C2 FA | 	rdbyte	local14, objptr
03d6c     07 71 C2 FA | 	rdbyte	local04, objptr
03d70     01 70 06 F1 | 	add	local04, #1
03d74     07 71 42 FC | 	wrbyte	local04, objptr
03d78     07 95 C2 FA | 	rdbyte	local22, objptr
03d7c     0A 94 66 F0 | 	shl	local22, #10
03d80     09 0E 86 F1 | 	sub	objptr, #9
03d84     07 97 02 FB | 	rdlong	local23, objptr
03d88     4A 97 02 F1 | 	add	local23, local22
03d8c                 | '     sampleDataPtr       := patternsData + (numberOfPatterns << 10)
03d8c     84 0E 86 F1 | 	sub	objptr, #132
03d90     07 97 62 FC | 	wrlong	local23, objptr
03d94     0E 0E 86 F1 | 	sub	objptr, #14
03d98                 | LR__0143
03d98                 | ' 
03d98                 | '   ' Iterate through all samples and fill in the sample pointer LUT
03d98                 | '   tmpPtr := sampleDataPtr
03d98     0E 0E 06 F1 | 	add	objptr, #14
03d9c     07 6D 02 FB | 	rdlong	local02, objptr
03da0     0C 5E 05 F1 | 	add	fp, #12
03da4     AF 6C 62 FC | 	wrlong	local02, fp
03da8                 | '   repeat i from 1 to numberOfInstruments
03da8     04 5E 85 F1 | 	sub	fp, #4
03dac     AF 02 68 FC | 	wrlong	#1, fp
03db0     08 5E 85 F1 | 	sub	fp, #8
03db4     98 0E 06 F1 | 	add	objptr, #152
03db8     07 71 C2 FA | 	rdbyte	local04, objptr
03dbc     01 70 5E F2 | 	cmps	local04, #1 wcz
03dc0     01 84 06 16 |  if_a	mov	local14, #1
03dc4     01 84 66 E6 |  if_be	neg	local14, #1
03dc8     42 99 02 F6 | 	mov	local24, local14
03dcc     07 9B C2 FA | 	rdbyte	local25, objptr
03dd0     A6 0E 86 F1 | 	sub	objptr, #166
03dd4     4C 9B 02 F1 | 	add	local25, local24
03dd8                 | LR__0144
03dd8     08 5E 05 F1 | 	add	fp, #8
03ddc     AF 9C 02 FB | 	rdlong	local26, fp
03de0     01 9C 86 F1 | 	sub	local26, #1
03de4     02 9C 66 F0 | 	shl	local26, #2
03de8     12 0E 06 F1 | 	add	objptr, #18
03dec     07 9D 02 F1 | 	add	local26, objptr
03df0                 | '     samplesPtrLut[i-1] := tmpPtr
03df0     04 5E 05 F1 | 	add	fp, #4
03df4     AF 80 02 FB | 	rdlong	local12, fp
03df8     4E 81 62 FC | 	wrlong	local12, local26
03dfc     18 5E 05 F1 | 	add	fp, #24
03e00     AF 5E 02 F6 | 	mov	arg02, fp
03e04     14 5E 85 F1 | 	sub	fp, #20
03e08     AF 60 02 F6 | 	mov	arg03, fp
03e0c     04 5E 05 F1 | 	add	fp, #4
03e10     AF 62 02 F6 | 	mov	arg04, fp
03e14     04 5E 05 F1 | 	add	fp, #4
03e18     AF 64 02 F6 | 	mov	arg05, fp
03e1c     04 5E 05 F1 | 	add	fp, #4
03e20     AF 66 02 F6 | 	mov	arg06, fp
03e24     04 5E 05 F1 | 	add	fp, #4
03e28     AF 68 02 F6 | 	mov	arg07, fp
03e2c                 | '     getSampleInfo(i, @d5, @samLength, @d1, @d2, @d3, @d4)
03e2c     18 5E 85 F1 | 	sub	fp, #24
03e30     AF 5C 02 FB | 	rdlong	arg01, fp
03e34     08 5E 85 F1 | 	sub	fp, #8
03e38     12 0E 86 F1 | 	sub	objptr, #18
03e3c     A0 07 B0 FD | 	call	#_trackerplayer_spin2_getSampleInfo
03e40                 | '     tmpPtr += samLength
03e40     0C 5E 05 F1 | 	add	fp, #12
03e44     AF 80 02 FB | 	rdlong	local12, fp
03e48     04 5E 05 F1 | 	add	fp, #4
03e4c     AF 9E 02 FB | 	rdlong	local27, fp
03e50     4F 81 02 F1 | 	add	local12, local27
03e54     04 5E 85 F1 | 	sub	fp, #4
03e58     AF 80 62 FC | 	wrlong	local12, fp
03e5c     04 5E 85 F1 | 	sub	fp, #4
03e60     AF 80 02 FB | 	rdlong	local12, fp
03e64     4C 81 02 F1 | 	add	local12, local24
03e68     AF 80 62 FC | 	wrlong	local12, fp
03e6c     08 5E 85 F1 | 	sub	fp, #8
03e70     4D 81 0A F2 | 	cmp	local12, local25 wz
03e74     60 FF 9F 5D |  if_ne	jmp	#LR__0144
03e78                 | ' 
03e78                 | '   ' Below this point, all play routine variables are resest to their default values
03e78                 | '   tickCounter                 := 0
03e78     A1 0E 06 F1 | 	add	objptr, #161
03e7c     07 01 48 FC | 	wrbyte	#0, objptr
03e80                 | '   patternRow                  := 0
03e80     01 0E 06 F1 | 	add	objptr, #1
03e84     07 01 48 FC | 	wrbyte	#0, objptr
03e88                 | '   songPosition                := startPattern
03e88     04 5E 05 F1 | 	add	fp, #4
03e8c     AF 6C 02 FB | 	rdlong	local02, fp
03e90     04 5E 85 F1 | 	sub	fp, #4
03e94     01 0E 06 F1 | 	add	objptr, #1
03e98     07 6D 42 FC | 	wrbyte	local02, objptr
03e9c                 | '   currentSongSpeed            := 6
03e9c     01 0E 06 F1 | 	add	objptr, #1
03ea0     07 0D 48 FC | 	wrbyte	#6, objptr
03ea4                 | '   patternDelay                := 0
03ea4     01 0E 06 F1 | 	add	objptr, #1
03ea8     07 01 48 FC | 	wrbyte	#0, objptr
03eac                 | '   ticksPerMinute              := 50 * 60
03eac     02 0F 06 F1 | 	add	objptr, #258
03eb0     05 00 80 FF 
03eb4     07 71 6B FC | 	wrlong	##3000, objptr
03eb8     A7 0F 86 F1 | 	sub	objptr, #423
03ebc     07 0B 03 FB | 	rdlong	muldiva_, objptr
03ec0     32 0C 07 F6 | 	mov	muldivb_, #50
03ec4     D0 00 A0 FD | 	call	#divide_
03ec8                 | '   cyclesToWait                := systemClock / 50
03ec8     AB 0F 06 F1 | 	add	objptr, #427
03ecc     07 0D 63 FC | 	wrlong	muldivb_, objptr
03ed0                 | '   sampleNumber_memory         := 0
03ed0     35 0E 06 F1 | 	add	objptr, #53
03ed4     07 01 48 FC | 	wrbyte	#0, objptr
03ed8                 | '   lpFilter                    := 0
03ed8     25 0E 86 F1 | 	sub	objptr, #37
03edc     07 01 48 FC | 	wrbyte	#0, objptr
03ee0                 | '   cmdD_memoryX                := 0
03ee0     29 0E 06 F1 | 	add	objptr, #41
03ee4     07 01 48 FC | 	wrbyte	#0, objptr
03ee8                 | '   cmdD_memoryY                := 0
03ee8     01 0E 06 F1 | 	add	objptr, #1
03eec     07 01 48 FC | 	wrbyte	#0, objptr
03ef0                 | '   cmdD_updatePosition         := false
03ef0     01 0E 06 F1 | 	add	objptr, #1
03ef4     07 01 48 FC | 	wrbyte	#0, objptr
03ef8                 | '   cmdB_memoryZ                := 0
03ef8     01 0E 06 F1 | 	add	objptr, #1
03efc     07 01 48 FC | 	wrbyte	#0, objptr
03f00                 | '   cmdB_updatePosition         := false
03f00     01 0E 06 F1 | 	add	objptr, #1
03f04     07 01 48 FC | 	wrbyte	#0, objptr
03f08                 | '   cmdE6_updatePositionCommon  := false
03f08     0D 0E 06 F1 | 	add	objptr, #13
03f0c     07 01 48 FC | 	wrbyte	#0, objptr
03f10     F5 0F 86 F1 | 	sub	objptr, #501
03f14                 | ' 
03f14                 | '   repeat i from 0 to LAST_CHANNEL
03f14     08 5E 05 F1 | 	add	fp, #8
03f18     AF 00 68 FC | 	wrlong	#0, fp
03f1c     08 5E 85 F1 | 	sub	fp, #8
03f20                 | LR__0145
03f20     08 5E 05 F1 | 	add	fp, #8
03f24     AF A0 02 FB | 	rdlong	local28, fp
03f28     01 A0 66 F0 | 	shl	local28, #1
03f2c     D7 0E 06 F1 | 	add	objptr, #215
03f30     07 A1 02 F1 | 	add	local28, objptr
03f34                 | ' 
03f34                 | '     currRepeatPoint[i]        := 0
03f34     50 01 58 FC | 	wrword	#0, local28
03f38     AF A2 02 FB | 	rdlong	local29, fp
03f3c     01 A2 66 F0 | 	shl	local29, #1
03f40     1C 0E 86 F1 | 	sub	objptr, #28
03f44     07 A3 02 F1 | 	add	local29, objptr
03f48                 | '     currSampleLength[i]       := 4
03f48     51 09 58 FC | 	wrword	#4, local29
03f4c     14 A5 02 F6 | 	mov	local30, ptr__trackerplayer_spin2_dat__
03f50     AF A6 02 FB | 	rdlong	local31, fp
03f54     02 A6 66 F0 | 	shl	local31, #2
03f58     14 0E 86 F1 | 	sub	objptr, #20
03f5c     07 A7 02 F1 | 	add	local31, objptr
03f60                 | '     currSamplePtr[i]          := @null
03f60     53 A5 62 FC | 	wrlong	local30, local31
03f64     AF A8 02 FB | 	rdlong	local32, fp
03f68     10 0E 06 F1 | 	add	objptr, #16
03f6c     07 A9 02 F1 | 	add	local32, objptr
03f70                 | '     currSampleNr[i]           := 0
03f70     54 01 48 FC | 	wrbyte	#0, local32
03f74     AF AA 02 FB | 	rdlong	local33, fp
03f78     02 AA 66 F0 | 	shl	local33, #2
03f7c     0C 0E 06 F1 | 	add	objptr, #12
03f80     07 AB 02 F1 | 	add	local33, objptr
03f84                 | '     currRepeatLength[i]       := 1
03f84     55 03 68 FC | 	wrlong	#1, local33
03f88     AF AC 02 FB | 	rdlong	local34, fp
03f8c     02 AC 66 F0 | 	shl	local34, #2
03f90     1C 0E 06 F1 | 	add	objptr, #28
03f94     07 AD 02 F1 | 	add	local34, objptr
03f98                 | '     currPeriod[i]             := 400
03f98     56 21 6B FC | 	wrlong	#400, local34
03f9c     AF AE 02 FB | 	rdlong	local35, fp
03fa0     02 AE 66 F0 | 	shl	local35, #2
03fa4     48 0E 06 F1 | 	add	objptr, #72
03fa8     07 AF 02 F1 | 	add	local35, objptr
03fac                 | '     lastSetPeriod[i]          := 400
03fac     57 21 6B FC | 	wrlong	#400, local35
03fb0     AF B0 02 FB | 	rdlong	local36, fp
03fb4     02 B0 66 F0 | 	shl	local36, #2
03fb8     10 0E 06 F1 | 	add	objptr, #16
03fbc     07 B1 02 F1 | 	add	local36, objptr
03fc0                 | '     lastSetSamplePtr[i]       := 0
03fc0     58 01 68 FC | 	wrlong	#0, local36
03fc4     AF B2 02 FB | 	rdlong	local37, fp
03fc8     02 B2 66 F0 | 	shl	local37, #2
03fcc     10 0E 06 F1 | 	add	objptr, #16
03fd0     07 B3 02 F1 | 	add	local37, objptr
03fd4                 | '     lastSetSampleNr[i]        := 0
03fd4     59 01 68 FC | 	wrlong	#0, local37
03fd8     AF B4 02 FB | 	rdlong	local38, fp
03fdc     02 B4 66 F0 | 	shl	local38, #2
03fe0     10 0E 06 F1 | 	add	objptr, #16
03fe4     07 B5 02 F1 | 	add	local38, objptr
03fe8                 | '     lastSetSampleLength[i]    := 0
03fe8     5A 01 68 FC | 	wrlong	#0, local38
03fec     AF B6 02 FB | 	rdlong	local39, fp
03ff0     02 B6 66 F0 | 	shl	local39, #2
03ff4     10 0E 06 F1 | 	add	objptr, #16
03ff8     07 B7 02 F1 | 	add	local39, objptr
03ffc                 | '     lastSetRepeatLength[i]    := 0
03ffc     5B 01 68 FC | 	wrlong	#0, local39
04000     AF B8 02 FB | 	rdlong	local40, fp
04004     02 B8 66 F0 | 	shl	local40, #2
04008     10 0E 06 F1 | 	add	objptr, #16
0400c     07 B9 02 F1 | 	add	local40, objptr
04010                 | '     lastSetRepeatPoint[i]     := 0
04010     5C 01 68 FC | 	wrlong	#0, local40
04014     AF BA 02 FB | 	rdlong	local41, fp
04018     02 BA 66 F0 | 	shl	local41, #2
0401c     78 0E 86 F1 | 	sub	objptr, #120
04020     07 BB 02 F1 | 	add	local41, objptr
04024                 | '     currVolume[i]             := 0
04024     5D 01 68 FC | 	wrlong	#0, local41
04028     AF BC 02 FB | 	rdlong	local42, fp
0402c     01 BC 66 F0 | 	shl	local42, #1
04030     20 0E 06 F1 | 	add	objptr, #32
04034     07 BD 02 F1 | 	add	local42, objptr
04038                 | '     currPanning[i]            := 0
04038     5E 01 58 FC | 	wrword	#0, local42
0403c     AF BE 02 FB | 	rdlong	local43, fp
04040     A9 0E 06 F1 | 	add	objptr, #169
04044     07 BF 02 F1 | 	add	local43, objptr
04048                 | '     cmd3_memoryZ[i]           := 0
04048     5F 01 48 FC | 	wrbyte	#0, local43
0404c     AF C0 02 FB | 	rdlong	local44, fp
04050     04 0E 06 F1 | 	add	objptr, #4
04054     07 C1 02 F1 | 	add	local44, objptr
04058                 | '     cmd4_memoryY[i]           := 0
04058     60 01 48 FC | 	wrbyte	#0, local44
0405c     AF C2 02 FB | 	rdlong	local45, fp
04060     04 0E 06 F1 | 	add	objptr, #4
04064     07 C3 02 F1 | 	add	local45, objptr
04068                 | '     cmd4_memoryX[i]           := 0
04068     61 01 48 FC | 	wrbyte	#0, local45
0406c     AF C4 02 FB | 	rdlong	local46, fp
04070     04 0E 06 F1 | 	add	objptr, #4
04074     07 C5 02 F1 | 	add	local46, objptr
04078                 | '     cmd7_memoryY[i]           := 0
04078     62 01 48 FC | 	wrbyte	#0, local46
0407c     AF C6 02 FB | 	rdlong	local47, fp
04080     04 0E 06 F1 | 	add	objptr, #4
04084     07 C7 02 F1 | 	add	local47, objptr
04088                 | '     cmd7_memoryX[i]           := 0
04088     63 01 48 FC | 	wrbyte	#0, local47
0408c     AF C8 02 FB | 	rdlong	local48, fp
04090     04 0E 06 F1 | 	add	objptr, #4
04094     07 C9 02 F1 | 	add	local48, objptr
04098                 | '     cmd9_memoryZ[i]           := 0
04098     64 01 48 FC | 	wrbyte	#0, local48
0409c     AF CA 02 FB | 	rdlong	local49, fp
040a0     0D 0E 06 F1 | 	add	objptr, #13
040a4     07 CB 02 F1 | 	add	local49, objptr
040a8                 | '     cmdE6_memory[i]           := 0
040a8     65 01 48 FC | 	wrbyte	#0, local49
040ac     AF CC 02 FB | 	rdlong	local50, fp
040b0     04 0E 06 F1 | 	add	objptr, #4
040b4     07 CD 02 F1 | 	add	local50, objptr
040b8                 | '     cmdE6_counter[i]          := 0
040b8     66 01 48 FC | 	wrbyte	#0, local50
040bc     AF CE 02 FB | 	rdlong	local51, fp
040c0     04 0E 06 F1 | 	add	objptr, #4
040c4     07 CF 02 F1 | 	add	local51, objptr
040c8                 | '     cmdE6_updatePosition[i]   := false
040c8     67 01 48 FC | 	wrbyte	#0, local51
040cc     AF D0 02 FB | 	rdlong	local52, fp
040d0     11 0E 86 F1 | 	sub	objptr, #17
040d4     07 D1 02 F1 | 	add	local52, objptr
040d8                 | '     sampleNumber_memory[i]    := 0
040d8     68 01 48 FC | 	wrbyte	#0, local52
040dc     AF D2 02 FB | 	rdlong	local53, fp
040e0     59 0E 86 F1 | 	sub	objptr, #89
040e4     07 D3 02 F1 | 	add	local53, objptr
040e8                 | '     vibratoPos[i]             := 0
040e8     69 01 48 FC | 	wrbyte	#0, local53
040ec     AF D4 02 FB | 	rdlong	local54, fp
040f0     02 D4 66 F0 | 	shl	local54, #2
040f4     10 0E 06 F1 | 	add	objptr, #16
040f8     07 D5 02 F1 | 	add	local54, objptr
040fc                 | '     portamentoPeriodMemory[i] := 0
040fc     6A 01 68 FC | 	wrlong	#0, local54
04100     AF D6 02 FB | 	rdlong	local55, fp
04104     25 0E 06 F1 | 	add	objptr, #37
04108     07 D7 02 F1 | 	add	local55, objptr
0410c                 | '     portaGlissando[i]         := 0
0410c     6B 01 48 FC | 	wrbyte	#0, local55
04110     AF D8 02 FB | 	rdlong	local56, fp
04114     04 0E 06 F1 | 	add	objptr, #4
04118     07 D9 02 F1 | 	add	local56, objptr
0411c                 | '     vibratoType[i]            := 0
0411c     6C 01 48 FC | 	wrbyte	#0, local56
04120     AF DA 02 FB | 	rdlong	local57, fp
04124     04 0E 06 F1 | 	add	objptr, #4
04128     07 DB 02 F1 | 	add	local57, objptr
0412c                 | '     tremoloType[i]            := 0
0412c     6D 01 48 FC | 	wrbyte	#0, local57
04130     AF DC 02 FB | 	rdlong	local58, fp
04134     39 0E 86 F1 | 	sub	objptr, #57
04138     07 DD 02 F1 | 	add	local58, objptr
0413c                 | '     tremoloPos[i]             := 0
0413c     6E 01 48 FC | 	wrbyte	#0, local58
04140     AF DE 02 FB | 	rdlong	local59, fp
04144     02 DE 66 F0 | 	shl	local59, #2
04148     7C 0E 86 F1 | 	sub	objptr, #124
0414c     07 DF 02 F1 | 	add	local59, objptr
04150                 | '     deltaVolume[i]            := 0
04150     6F 01 68 FC | 	wrlong	#0, local59
04154     AF E0 02 FB | 	rdlong	local60, fp
04158     02 E0 66 F0 | 	shl	local60, #2
0415c     20 0E 86 F1 | 	sub	objptr, #32
04160     07 E1 02 F1 | 	add	local60, objptr
04164                 | '     deltaPeriod[i]            := 0
04164     70 01 68 FC | 	wrlong	#0, local60
04168     AF E2 02 FB | 	rdlong	local61, fp
0416c     A0 0E 06 F1 | 	add	objptr, #160
04170     07 E3 02 F1 | 	add	local61, objptr
04174                 | '     resetTremolo[i]           := 0
04174     71 01 48 FC | 	wrbyte	#0, local61
04178     AF E4 02 FB | 	rdlong	local62, fp
0417c     04 0E 06 F1 | 	add	objptr, #4
04180     07 E5 02 F1 | 	add	local62, objptr
04184                 | '     resetVibrato[i]           := 0
04184     72 01 48 FC | 	wrbyte	#0, local62
04188     AF 84 02 FB | 	rdlong	local14, fp
0418c     01 84 06 F1 | 	add	local14, #1
04190     AF 84 62 FC | 	wrlong	local14, fp
04194     08 5E 85 F1 | 	sub	fp, #8
04198     04 84 5E F2 | 	cmps	local14, #4 wcz
0419c     93 0F 86 F1 | 	sub	objptr, #403
041a0     7C FD 9F CD |  if_b	jmp	#LR__0145
041a4     AF F0 03 F6 | 	mov	ptra, fp
041a8     BF 00 A0 FD | 	call	#popregs_
041ac                 | _trackerplayer_spin2_initModule_ret
041ac     2D 00 64 FD | 	ret
041b0                 | 
041b0                 | ' 
041b0                 | ' 
041b0                 | ' ' This routine needs to be ticked X number of times per second
041b0                 | ' ' in order to advance the tracker play routine
041b0                 | ' '
041b0                 | ' PUB tick() | channel, sampleNumber, period, effect, i
041b0                 | _trackerplayer_spin2_tick
041b0     12 5A 05 F6 | 	mov	COUNT_, #18
041b4     B0 00 A0 FD | 	call	#pushregs_
041b8     30 F0 07 F1 | 	add	ptra, #48
041bc                 | ' 
041bc                 | '   if currentSongSpeed == 0
041bc     A4 0E 06 F1 | 	add	objptr, #164
041c0     07 6B CA FA | 	rdbyte	local01, objptr wz
041c4     A4 0E 86 F1 | 	sub	objptr, #164
041c8                 | '     return
041c8     34 03 90 AD |  if_e	jmp	#LR__0157
041cc                 | ' 
041cc                 | '   ' Iterate over the channels and process everything
041cc                 | '   repeat channel from 0 to LAST_CHANNEL
041cc     AF 00 68 FC | 	wrlong	#0, fp
041d0                 | LR__0146
041d0     04 5E 05 F1 | 	add	fp, #4
041d4     AF 62 02 F6 | 	mov	arg04, fp
041d8     04 5E 05 F1 | 	add	fp, #4
041dc     AF 64 02 F6 | 	mov	arg05, fp
041e0     04 5E 05 F1 | 	add	fp, #4
041e4     AF 66 02 F6 | 	mov	arg06, fp
041e8     0C 5E 85 F1 | 	sub	fp, #12
041ec                 | ' 
041ec                 | '     getNoteData(channel, songPosition, patternRow, @sampleNumber, @period, @effect)
041ec     AF 5C 02 FB | 	rdlong	arg01, fp
041f0     A3 0E 06 F1 | 	add	objptr, #163
041f4     07 5F C2 FA | 	rdbyte	arg02, objptr
041f8     01 0E 86 F1 | 	sub	objptr, #1
041fc     07 61 C2 FA | 	rdbyte	arg03, objptr
04200     7F 5E 06 F5 | 	and	arg02, #127
04204     0C 0E 86 F1 | 	sub	objptr, #12
04208     07 6D 02 FB | 	rdlong	local02, objptr
0420c     36 5F 02 F1 | 	add	arg02, local02
04210                 | ' 
04210                 | '   ' Get the note data for a specific channel/song position/pattern row
04210                 | '   patternNumber := byte[songPositionsLut][position & 127]
04210     2F 6F C2 FA | 	rdbyte	local03, arg02
04214     0A 6E 66 F0 | 	shl	local03, #10
04218     04 0E 86 F1 | 	sub	objptr, #4
0421c     07 71 02 FB | 	rdlong	local04, objptr
04220     92 0E 86 F1 | 	sub	objptr, #146
04224     37 71 02 F1 | 	add	local04, local03
04228                 | '   patternPtr    := patternsData + (patternNumber << 10)
04228     3F 60 06 F5 | 	and	arg03, #63
0422c     04 60 66 F0 | 	shl	arg03, #4
04230     30 71 02 F1 | 	add	local04, arg03
04234     03 5C 06 F5 | 	and	arg01, #3
04238     02 5C 66 F0 | 	shl	arg01, #2
0423c     2E 71 02 F1 | 	add	local04, arg01
04240                 | '   dataPtr       := patternPtr + ((row & 63) << 4) + ((channel &3 ) << 2)
04240     38 73 C2 FA | 	rdbyte	local05, local04
04244     18 72 66 F0 | 	shl	local05, #24
04248     01 70 06 F1 | 	add	local04, #1
0424c     38 75 C2 FA | 	rdbyte	local06, local04
04250     10 74 66 F0 | 	shl	local06, #16
04254     3A 73 42 F5 | 	or	local05, local06
04258     01 70 06 F1 | 	add	local04, #1
0425c     38 77 C2 FA | 	rdbyte	local07, local04
04260     08 76 66 F0 | 	shl	local07, #8
04264     3B 73 42 F5 | 	or	local05, local07
04268     01 70 06 F1 | 	add	local04, #1
0426c     38 79 C2 FA | 	rdbyte	local08, local04
04270     3C 73 42 F5 | 	or	local05, local08
04274                 | '   data          := (byte[dataPtr][0] << 24) | (byte[dataPtr][1] << 16) | (byte[dataPtr][2] << 8) | byte[dataPtr][3]
04274     39 7B 02 F6 | 	mov	local09, local05
04278     0C 7A 46 F0 | 	shr	local09, #12
0427c     0F 7A 06 F5 | 	and	local09, #15
04280     39 7D 02 F6 | 	mov	local10, local05
04284     18 7C 46 F0 | 	shr	local10, #24
04288     F0 7C 06 F5 | 	and	local10, #240
0428c     3E 7B 42 F5 | 	or	local09, local10
04290                 | ' 
04290                 | '   ' Extract the different sub parts from the data
04290                 | '   long[sampleNumber] := ((data >> 12) & $F) | ((data >> 24) & $F0)
04290     31 7B 62 FC | 	wrlong	local09, arg04
04294     39 7F 02 F6 | 	mov	local11, local05
04298     10 7E 46 F0 | 	shr	local11, #16
0429c     07 00 00 FF 
042a0     FF 7F 06 F5 | 	and	local11, ##4095
042a4                 | '   long[period]       :=  (data >> 16) & $FFF
042a4     32 7F 62 FC | 	wrlong	local11, arg05
042a8     07 00 00 FF 
042ac     FF 73 06 F5 | 	and	local05, ##4095
042b0                 | '   long[effect]       :=   data & $FFF
042b0     33 73 62 FC | 	wrlong	local05, arg06
042b4                 | '     processChannel(channel, sampleNumber, period, effect)
042b4     AF 5C 02 FB | 	rdlong	arg01, fp
042b8     04 5E 05 F1 | 	add	fp, #4
042bc     AF 5E 02 FB | 	rdlong	arg02, fp
042c0     04 5E 05 F1 | 	add	fp, #4
042c4     AF 60 02 FB | 	rdlong	arg03, fp
042c8     04 5E 05 F1 | 	add	fp, #4
042cc     AF 62 02 FB | 	rdlong	arg04, fp
042d0     0C 5E 85 F1 | 	sub	fp, #12
042d4     0C 05 B0 FD | 	call	#_trackerplayer_spin2_processChannel
042d8     AF 80 02 FB | 	rdlong	local12, fp
042dc     01 80 06 F1 | 	add	local12, #1
042e0     AF 80 62 FC | 	wrlong	local12, fp
042e4     04 80 5E F2 | 	cmps	local12, #4 wcz
042e8     E4 FE 9F CD |  if_b	jmp	#LR__0146
042ec                 | ' 
042ec                 | '   ' Incrementation the main counter that drives the whole play routine
042ec                 | '   if ++tickCounter >= (currentSongSpeed + patternDelay)
042ec     A1 0E 06 F1 | 	add	objptr, #161
042f0     07 6B C2 FA | 	rdbyte	local01, objptr
042f4     01 6A 06 F1 | 	add	local01, #1
042f8     07 6B 42 FC | 	wrbyte	local01, objptr
042fc     03 0E 06 F1 | 	add	objptr, #3
04300     07 83 C2 FA | 	rdbyte	local13, objptr
04304     01 0E 06 F1 | 	add	objptr, #1
04308     07 85 C2 FA | 	rdbyte	local14, objptr
0430c     42 83 02 F1 | 	add	local13, local14
04310     04 0E 86 F1 | 	sub	objptr, #4
04314     07 87 C2 FA | 	rdbyte	local15, objptr
04318     A1 0E 86 F1 | 	sub	objptr, #161
0431c     41 87 5A F2 | 	cmps	local15, local13 wcz
04320                 | '     tickCounter := 0
04320     A1 0E 06 31 |  if_ae	add	objptr, #161
04324     07 01 48 3C |  if_ae	wrbyte	#0, objptr
04328     A1 0E 86 31 |  if_ae	sub	objptr, #161
0432c                 | ' 
0432c                 | '   ' If the tick is zero, increment the other counters and do some song positioning handling
0432c                 | '   if tickCounter == 0
0432c     A1 0E 06 F1 | 	add	objptr, #161
04330     07 6B CA FA | 	rdbyte	local01, objptr wz
04334     A1 0E 86 F1 | 	sub	objptr, #161
04338     C4 01 90 5D |  if_ne	jmp	#LR__0156
0433c                 | ' 
0433c                 | '     ' Handle the "pattern repeat" command, "E6"
0433c                 | '     if cmdE6_updatePositionCommon
0433c     F5 0F 06 F1 | 	add	objptr, #501
04340     07 6B CA FA | 	rdbyte	local01, objptr wz
04344     F5 0F 86 F1 | 	sub	objptr, #501
04348     8C 00 90 AD |  if_e	jmp	#LR__0150
0434c                 | '       repeat i from 0 to LAST_CHANNEL
0434c     10 5E 05 F1 | 	add	fp, #16
04350     AF 00 68 FC | 	wrlong	#0, fp
04354     10 5E 85 F1 | 	sub	fp, #16
04358     18 BD 9F FE | 	loc	pa,	#(@LR__0149-@LR__0147)
0435c     93 00 A0 FD | 	call	#FCACHE_LOAD_
04360                 | LR__0147
04360                 | '         if cmdE6_updatePosition[i]
04360     10 5E 05 F1 | 	add	fp, #16
04364     AF 80 02 FB | 	rdlong	local12, fp
04368     10 5E 85 F1 | 	sub	fp, #16
0436c     F1 0F 06 F1 | 	add	objptr, #497
04370     07 81 02 F1 | 	add	local12, objptr
04374     40 85 CA FA | 	rdbyte	local14, local12 wz
04378     F1 0F 86 F1 | 	sub	objptr, #497
0437c     24 00 90 AD |  if_e	jmp	#LR__0148
04380     10 5E 05 F1 | 	add	fp, #16
04384     AF 88 02 FB | 	rdlong	local16, fp
04388     10 5E 85 F1 | 	sub	fp, #16
0438c     E9 0F 06 F1 | 	add	objptr, #489
04390     07 89 02 F1 | 	add	local16, objptr
04394                 | '           patternRow := cmdE6_memory[i]
04394     44 81 C2 FA | 	rdbyte	local12, local16
04398     47 0F 86 F1 | 	sub	objptr, #327
0439c     07 81 42 FC | 	wrbyte	local12, objptr
043a0     A2 0E 86 F1 | 	sub	objptr, #162
043a4                 | LR__0148
043a4     10 5E 05 F1 | 	add	fp, #16
043a8     AF 8A 02 FB | 	rdlong	local17, fp
043ac     F1 0F 06 F1 | 	add	objptr, #497
043b0     07 8B 02 F1 | 	add	local17, objptr
043b4                 | '         cmdE6_updatePosition[i] := false
043b4     45 01 48 FC | 	wrbyte	#0, local17
043b8     AF 80 02 FB | 	rdlong	local12, fp
043bc     01 80 06 F1 | 	add	local12, #1
043c0     AF 80 62 FC | 	wrlong	local12, fp
043c4     10 5E 85 F1 | 	sub	fp, #16
043c8     04 80 5E F2 | 	cmps	local12, #4 wcz
043cc     F1 0F 86 F1 | 	sub	objptr, #497
043d0     8C FF 9F CD |  if_b	jmp	#LR__0147
043d4                 | LR__0149
043d4     CC 00 90 FD | 	jmp	#LR__0154
043d8                 | LR__0150
043d8                 | ' 
043d8                 | '     ' Handle the "skip to next pattern with offset command", "D"
043d8                 | '     elseif cmdD_updatePosition
043d8     E6 0F 06 F1 | 	add	objptr, #486
043dc     07 6B CA FA | 	rdbyte	local01, objptr wz
043e0     E6 0F 86 F1 | 	sub	objptr, #486
043e4     64 00 90 AD |  if_e	jmp	#LR__0151
043e8                 | '       if ++songPosition >= songLength
043e8     A3 0E 06 F1 | 	add	objptr, #163
043ec     07 6B C2 FA | 	rdbyte	local01, objptr
043f0     01 6A 06 F1 | 	add	local01, #1
043f4     07 6B 42 FC | 	wrbyte	local01, objptr
043f8     07 83 C2 FA | 	rdbyte	local13, objptr
043fc     09 0E 86 F1 | 	sub	objptr, #9
04400     07 85 C2 FA | 	rdbyte	local14, objptr
04404     9A 0E 86 F1 | 	sub	objptr, #154
04408     42 83 5A F2 | 	cmps	local13, local14 wcz
0440c                 | '         songPosition := 0
0440c     A3 0E 06 31 |  if_ae	add	objptr, #163
04410     07 01 48 3C |  if_ae	wrbyte	#0, objptr
04414     A3 0E 86 31 |  if_ae	sub	objptr, #163
04418     E4 0F 06 F1 | 	add	objptr, #484
0441c     07 81 C2 FA | 	rdbyte	local12, objptr
04420     40 8D 02 F6 | 	mov	local18, local12
04424     02 8C 66 F0 | 	shl	local18, #2
04428     40 8D 02 F1 | 	add	local18, local12
0442c     01 8C 66 F0 | 	shl	local18, #1
04430     01 0E 06 F1 | 	add	objptr, #1
04434     07 81 C2 FA | 	rdbyte	local12, objptr
04438     40 8D 02 F1 | 	add	local18, local12
0443c                 | ' 
0443c                 | '       patternRow := (cmdD_memoryX * 10) + cmdD_memoryY
0443c     43 0F 86 F1 | 	sub	objptr, #323
04440     07 8D 42 FC | 	wrbyte	local18, objptr
04444     A2 0E 86 F1 | 	sub	objptr, #162
04448                 | ' 
04448                 | '     ' If no "jump to row commands" are active, do a normal pattern incrementation
04448                 | '     else
04448     58 00 90 FD | 	jmp	#LR__0153
0444c                 | LR__0151
0444c                 | '       if ++patternRow >= PATTERN_LENGTH
0444c     A2 0E 06 F1 | 	add	objptr, #162
04450     07 6B C2 FA | 	rdbyte	local01, objptr
04454     01 6A 06 F1 | 	add	local01, #1
04458     07 6B 42 FC | 	wrbyte	local01, objptr
0445c     07 83 C2 FA | 	rdbyte	local13, objptr
04460     A2 0E 86 F1 | 	sub	objptr, #162
04464     40 82 5E F2 | 	cmps	local13, #64 wcz
04468     38 00 90 CD |  if_b	jmp	#LR__0152
0446c                 | '         patternRow := 0
0446c     A2 0E 06 F1 | 	add	objptr, #162
04470     07 01 48 FC | 	wrbyte	#0, objptr
04474                 | ' 
04474                 | '         if ++songPosition >= songLength
04474     01 0E 06 F1 | 	add	objptr, #1
04478     07 6B C2 FA | 	rdbyte	local01, objptr
0447c     01 6A 06 F1 | 	add	local01, #1
04480     07 6B 42 FC | 	wrbyte	local01, objptr
04484     07 83 C2 FA | 	rdbyte	local13, objptr
04488     09 0E 86 F1 | 	sub	objptr, #9
0448c     07 85 C2 FA | 	rdbyte	local14, objptr
04490     9A 0E 86 F1 | 	sub	objptr, #154
04494     42 83 5A F2 | 	cmps	local13, local14 wcz
04498                 | '           songPosition := 0
04498     A3 0E 06 31 |  if_ae	add	objptr, #163
0449c     07 01 48 3C |  if_ae	wrbyte	#0, objptr
044a0     A3 0E 86 31 |  if_ae	sub	objptr, #163
044a4                 | LR__0152
044a4                 | LR__0153
044a4                 | LR__0154
044a4                 | ' 
044a4                 | '     ' Handle "jump to song position" command, "B"
044a4                 | '     if cmdB_updatePosition
044a4     E8 0F 06 F1 | 	add	objptr, #488
044a8     07 6B CA FA | 	rdbyte	local01, objptr wz
044ac     E8 0F 86 F1 | 	sub	objptr, #488
044b0     28 00 90 AD |  if_e	jmp	#LR__0155
044b4                 | ' 
044b4                 | '       songPosition := cmdB_memoryZ
044b4     E7 0F 06 F1 | 	add	objptr, #487
044b8     07 6B C2 FA | 	rdbyte	local01, objptr
044bc     44 0F 86 F1 | 	sub	objptr, #324
044c0     07 6B 42 FC | 	wrbyte	local01, objptr
044c4                 | ' 
044c4                 | '       ifnot cmdD_updatePosition
044c4     43 0F 06 F1 | 	add	objptr, #323
044c8     07 6B CA FA | 	rdbyte	local01, objptr wz
044cc     E6 0F 86 F1 | 	sub	objptr, #486
044d0                 | '         patternRow := 0
044d0     A2 0E 06 A1 |  if_e	add	objptr, #162
044d4     07 01 48 AC |  if_e	wrbyte	#0, objptr
044d8     A2 0E 86 A1 |  if_e	sub	objptr, #162
044dc                 | LR__0155
044dc                 | ' 
044dc                 | '     ' We need to be sure that all positioning commands are reset for the next tick
044dc                 | '     cmdE6_updatePositionCommon := false
044dc     F5 0F 06 F1 | 	add	objptr, #501
044e0     07 01 48 FC | 	wrbyte	#0, objptr
044e4                 | '     cmdB_updatePosition := false
044e4     0D 0E 86 F1 | 	sub	objptr, #13
044e8     07 01 48 FC | 	wrbyte	#0, objptr
044ec                 | '     cmdD_updatePosition := false
044ec     02 0E 86 F1 | 	sub	objptr, #2
044f0     07 01 48 FC | 	wrbyte	#0, objptr
044f4                 | '     patternDelay := 0
044f4     41 0F 86 F1 | 	sub	objptr, #321
044f8     07 01 48 FC | 	wrbyte	#0, objptr
044fc     A5 0E 86 F1 | 	sub	objptr, #165
04500                 | LR__0156
04500                 | LR__0157
04500     AF F0 03 F6 | 	mov	ptra, fp
04504     BF 00 A0 FD | 	call	#popregs_
04508                 | _trackerplayer_spin2_tick_ret
04508     2D 00 64 FD | 	ret
0450c                 | 
0450c                 | ' 
0450c                 | ' 
0450c                 | ' PRI amigaPeriodToNote(period, fTune) : r | i
0450c                 | _trackerplayer_spin2_amigaPeriodToNote
0450c                 | ' 
0450c                 | '   repeat i from 0 to LAST_POS_IN_PERIOD_TBL
0450c     00 30 06 F6 | 	mov	_var01, #0
04510     38 BB 9F FE | 	loc	pa,	#(@LR__0159-@LR__0158)
04514     93 00 A0 FD | 	call	#FCACHE_LOAD_
04518                 | LR__0158
04518                 | '     if (word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][i]) <= period
04518     06 00 00 FF 
0451c     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
04520     14 33 02 F6 | 	mov	_var02, ptr__trackerplayer_spin2_dat__
04524     2F 35 02 F6 | 	mov	_var03, arg02
04528     03 34 66 F0 | 	shl	_var03, #3
0452c     2F 35 02 F1 | 	add	_var03, arg02
04530     03 34 66 F0 | 	shl	_var03, #3
04534     1A 33 02 F1 | 	add	_var02, _var03
04538     18 37 02 F6 | 	mov	_var04, _var01
0453c     01 36 66 F0 | 	shl	_var04, #1
04540     19 37 02 F1 | 	add	_var04, _var02
04544     1B 39 E2 FA | 	rdword	_var05, _var04
04548     2E 39 5A F2 | 	cmps	_var05, arg01 wcz
0454c                 | '       quit
0454c     06 00 00 FF 
04550     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
04554     0C 00 90 ED |  if_be	jmp	#LR__0160
04558     01 30 06 F1 | 	add	_var01, #1
0455c     24 30 5E F2 | 	cmps	_var01, #36 wcz
04560     B4 FF 9F CD |  if_b	jmp	#LR__0158
04564                 | LR__0159
04564                 | LR__0160
04564                 | ' 
04564                 | '   return i
04564     18 2B 02 F6 | 	mov	result1, _var01
04568                 | _trackerplayer_spin2_amigaPeriodToNote_ret
04568     2D 00 64 FD | 	ret
0456c                 | 
0456c                 | ' 
0456c                 | ' 
0456c                 | ' PRI retunePeriod(period, fTune) | noteNumber
0456c                 | _trackerplayer_spin2_retunePeriod
0456c     06 5A 05 F6 | 	mov	COUNT_, #6
04570     B0 00 A0 FD | 	call	#pushregs_
04574     2E 6B 02 F6 | 	mov	local01, arg01
04578     2F 6D 02 F6 | 	mov	local02, arg02
0457c                 | ' 
0457c                 | '   if period > 0 and fTune < 16
0457c     00 6A 5E F2 | 	cmps	local01, #0 wcz
04580     50 00 90 ED |  if_be	jmp	#LR__0161
04584     10 6C 5E F2 | 	cmps	local02, #16 wcz
04588     48 00 90 3D |  if_ae	jmp	#LR__0161
0458c                 | '     noteNumber := amigaPeriodToNote(word[period], 0)
0458c     35 5D E2 FA | 	rdword	arg01, local01
04590     00 5E 06 F6 | 	mov	arg02, #0
04594     74 FF BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
04598     15 6F 02 F6 | 	mov	local03, result1
0459c     06 00 00 FF 
045a0     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
045a4     14 71 02 F6 | 	mov	local04, ptr__trackerplayer_spin2_dat__
045a8     36 73 02 F6 | 	mov	local05, local02
045ac     03 72 66 F0 | 	shl	local05, #3
045b0     36 73 02 F1 | 	add	local05, local02
045b4     03 72 66 F0 | 	shl	local05, #3
045b8     39 71 02 F1 | 	add	local04, local05
045bc     01 6E 66 F0 | 	shl	local03, #1
045c0     38 6F 02 F1 | 	add	local03, local04
045c4                 | '     word[period] := word[@periodTable + (fTune * BYTES_IN_PERIOD_TABLE)][noteNumber]
045c4     37 75 E2 FA | 	rdword	local06, local03
045c8     35 75 52 FC | 	wrword	local06, local01
045cc     06 00 00 FF 
045d0     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
045d4                 | LR__0161
045d4     AF F0 03 F6 | 	mov	ptra, fp
045d8     BF 00 A0 FD | 	call	#popregs_
045dc                 | _trackerplayer_spin2_retunePeriod_ret
045dc     2D 00 64 FD | 	ret
045e0                 | 
045e0                 | ' 
045e0                 | ' 
045e0                 | ' pub getSampleInfo(sampleNumber, samplePtr, sampleLength, fTune, volume, repeatPoint, repeatLength) | sampleInfoPtr
045e0                 | _trackerplayer_spin2_getSampleInfo
045e0     2E 31 0A F6 | 	mov	_var01, arg01 wz
045e4                 | ' 
045e4                 | '   if sampleNumber == 0 or sampleNumber > LAST_SAMPLE_NUMBER ' Can't go beyond sample 31
045e4     08 00 90 AD |  if_e	jmp	#LR__0162
045e8     1F 30 5E F2 | 	cmps	_var01, #31 wcz
045ec     08 00 90 ED |  if_be	jmp	#LR__0163
045f0                 | LR__0162
045f0                 | '     long[samplePtr] := 0
045f0     2F 01 68 FC | 	wrlong	#0, arg02
045f4                 | '     return
045f4     E0 00 90 FD | 	jmp	#_trackerplayer_spin2_getSampleInfo_ret
045f8                 | LR__0163
045f8                 | ' 
045f8                 | '   sampleNumber--
045f8     01 30 86 F1 | 	sub	_var01, #1
045fc     18 33 02 F6 | 	mov	_var02, _var01
04600     04 32 66 F0 | 	shl	_var02, #4
04604     18 33 82 F1 | 	sub	_var02, _var01
04608     01 32 66 F0 | 	shl	_var02, #1
0460c     0A 0E 06 F1 | 	add	objptr, #10
04610     07 35 02 FB | 	rdlong	_var03, objptr
04614     19 35 02 F1 | 	add	_var03, _var02
04618                 | '   sampleInfoPtr      := samplesInfoLut + (sampleNumber * 30)
04618     1A 37 02 F6 | 	mov	_var04, _var03
0461c     16 36 06 F1 | 	add	_var04, #22
04620     1B 39 C2 FA | 	rdbyte	_var05, _var04
04624     08 38 66 F0 | 	shl	_var05, #8
04628     1A 3B 02 F6 | 	mov	_var06, _var03
0462c     17 3A 06 F1 | 	add	_var06, #23
04630     1D 3D C2 FA | 	rdbyte	_var07, _var06
04634     1E 39 42 F5 | 	or	_var05, _var07
04638     01 38 66 F0 | 	shl	_var05, #1
0463c                 | '   long[sampleLength] := ((byte[sampleInfoPtr + 22] << 8) | byte[sampleInfoPtr + 23]) << 1
0463c     30 39 62 FC | 	wrlong	_var05, arg03
04640     1A 3F 02 F6 | 	mov	_var08, _var03
04644     18 3E 06 F1 | 	add	_var08, #24
04648                 | '   long[fTune]        :=   byte[sampleInfoPtr + 24]
04648     1F 41 C2 FA | 	rdbyte	_var09, _var08
0464c     31 41 62 FC | 	wrlong	_var09, arg04
04650     1A 43 02 F6 | 	mov	_var10, _var03
04654     19 42 06 F1 | 	add	_var10, #25
04658                 | '   long[volume]       :=   byte[sampleInfoPtr + 25]
04658     21 41 C2 FA | 	rdbyte	_var09, _var10
0465c     32 41 62 FC | 	wrlong	_var09, arg05
04660     1A 45 02 F6 | 	mov	_var11, _var03
04664     1A 44 06 F1 | 	add	_var11, #26
04668     22 47 C2 FA | 	rdbyte	_var12, _var11
0466c     08 46 66 F0 | 	shl	_var12, #8
04670     1A 49 02 F6 | 	mov	_var13, _var03
04674     1B 48 06 F1 | 	add	_var13, #27
04678     24 3D C2 FA | 	rdbyte	_var07, _var13
0467c     1E 47 42 F5 | 	or	_var12, _var07
04680     01 46 66 F0 | 	shl	_var12, #1
04684                 | '   long[repeatPoint]  := ((byte[sampleInfoPtr + 26] << 8) | byte[sampleInfoPtr + 27]) << 1
04684     33 47 62 FC | 	wrlong	_var12, arg06
04688     1A 4B 02 F6 | 	mov	_var14, _var03
0468c     1C 4A 06 F1 | 	add	_var14, #28
04690     25 4D C2 FA | 	rdbyte	_var15, _var14
04694     08 4C 66 F0 | 	shl	_var15, #8
04698     1D 34 06 F1 | 	add	_var03, #29
0469c     1A 3D C2 FA | 	rdbyte	_var07, _var03
046a0     1E 4D 42 F5 | 	or	_var15, _var07
046a4     01 4C 66 F0 | 	shl	_var15, #1
046a8                 | '   long[repeatLength] := ((byte[sampleInfoPtr + 28] << 8) | byte[sampleInfoPtr + 29]) << 1
046a8     34 4D 62 FC | 	wrlong	_var15, arg07
046ac     02 30 66 F0 | 	shl	_var01, #2
046b0     08 0E 06 F1 | 	add	objptr, #8
046b4     07 31 02 F1 | 	add	_var01, objptr
046b8                 | '   long[samplePtr]    := samplesPtrLut[sampleNumber]
046b8     18 41 02 FB | 	rdlong	_var09, _var01
046bc     2F 41 62 FC | 	wrlong	_var09, arg02
046c0                 | ' 
046c0                 | '   if long[repeatLength] == 2 && long[repeatPoint] == 0
046c0     34 41 02 FB | 	rdlong	_var09, arg07
046c4     02 40 0E F2 | 	cmp	_var09, #2 wz
046c8     12 0E 86 F1 | 	sub	objptr, #18
046cc     08 00 90 5D |  if_ne	jmp	#LR__0164
046d0     33 3D 0A FB | 	rdlong	_var07, arg06 wz
046d4                 | '     long[repeatLength] := 1
046d4     34 03 68 AC |  if_e	wrlong	#1, arg07
046d8                 | LR__0164
046d8                 | _trackerplayer_spin2_getSampleInfo_ret
046d8     2D 00 64 FD | 	ret
046dc                 | 
046dc                 | ' 
046dc                 | ' 
046dc                 | ' PRI triggerNote(channel)
046dc                 | _trackerplayer_spin2_triggerNote
046dc     2E 31 02 F6 | 	mov	_var01, arg01
046e0     02 30 66 F0 | 	shl	_var01, #2
046e4     47 0F 06 F1 | 	add	objptr, #327
046e8     07 31 02 F1 | 	add	_var01, objptr
046ec     2E 33 02 F6 | 	mov	_var02, arg01
046f0     90 0E 86 F1 | 	sub	objptr, #144
046f4                 | ' 
046f4                 | '   currSampleNr[channel]     := lastSetSampleNr[channel]
046f4     18 35 02 FB | 	rdlong	_var03, _var01
046f8     07 33 02 F1 | 	add	_var02, objptr
046fc     19 35 42 FC | 	wrbyte	_var03, _var02
04700     2E 37 02 F6 | 	mov	_var04, arg01
04704     02 36 66 F0 | 	shl	_var04, #2
04708     80 0E 06 F1 | 	add	objptr, #128
0470c     07 37 02 F1 | 	add	_var04, objptr
04710     2E 39 02 F6 | 	mov	_var05, arg01
04714     02 38 66 F0 | 	shl	_var05, #2
04718     90 0E 86 F1 | 	sub	objptr, #144
0471c                 | '   currSamplePtr[channel]    := lastSetSamplePtr[channel]              ' This triggers the actual sample playback
0471c     1B 35 02 FB | 	rdlong	_var03, _var04
04720     07 39 02 F1 | 	add	_var05, objptr
04724     1C 35 62 FC | 	wrlong	_var03, _var05
04728     2E 3B 02 F6 | 	mov	_var06, arg01
0472c     02 3A 66 F0 | 	shl	_var06, #2
04730     80 0E 06 F1 | 	add	objptr, #128
04734     07 3B 02 F1 | 	add	_var06, objptr
04738     2E 3D 02 F6 | 	mov	_var07, arg01
0473c     02 3C 66 F0 | 	shl	_var07, #2
04740     48 0E 86 F1 | 	sub	objptr, #72
04744                 | '   currPeriod[channel]       := lastSetPeriod[channel]
04744     1D 35 02 FB | 	rdlong	_var03, _var06
04748     07 3D 02 F1 | 	add	_var07, objptr
0474c     1E 35 62 FC | 	wrlong	_var03, _var07
04750     2E 3F 02 F6 | 	mov	_var08, arg01
04754     02 3E 66 F0 | 	shl	_var08, #2
04758     78 0E 06 F1 | 	add	objptr, #120
0475c     07 3F 02 F1 | 	add	_var08, objptr
04760     2E 41 02 F6 | 	mov	_var09, arg01
04764     01 40 66 F0 | 	shl	_var09, #1
04768     9C 0E 86 F1 | 	sub	objptr, #156
0476c                 | '   currSampleLength[channel] := lastSetSampleLength[channel]
0476c     1F 35 02 FB | 	rdlong	_var03, _var08
04770     07 41 02 F1 | 	add	_var09, objptr
04774     20 35 52 FC | 	wrword	_var03, _var09
04778     2E 43 02 F6 | 	mov	_var10, arg01
0477c     02 42 66 F0 | 	shl	_var10, #2
04780     AC 0E 06 F1 | 	add	objptr, #172
04784     07 43 02 F1 | 	add	_var10, objptr
04788     2E 45 02 F6 | 	mov	_var11, arg01
0478c     02 44 66 F0 | 	shl	_var11, #2
04790     A4 0E 86 F1 | 	sub	objptr, #164
04794                 | '   currRepeatLength[channel] := lastSetRepeatLength[channel]
04794     21 35 02 FB | 	rdlong	_var03, _var10
04798     07 45 02 F1 | 	add	_var11, objptr
0479c     22 35 62 FC | 	wrlong	_var03, _var11
047a0     2E 47 02 F6 | 	mov	_var12, arg01
047a4     02 46 66 F0 | 	shl	_var12, #2
047a8     B4 0E 06 F1 | 	add	objptr, #180
047ac     07 47 02 F1 | 	add	_var12, objptr
047b0     2E 49 02 F6 | 	mov	_var13, arg01
047b4     01 48 66 F0 | 	shl	_var13, #1
047b8     A0 0E 86 F1 | 	sub	objptr, #160
047bc                 | '   currRepeatPoint[channel]  := lastSetRepeatPoint[channel]
047bc     23 35 02 FB | 	rdlong	_var03, _var12
047c0     07 49 02 F1 | 	add	_var13, objptr
047c4     24 35 52 FC | 	wrword	_var03, _var13
047c8     1F 0F 06 F1 | 	add	objptr, #287
047cc     07 5D 02 F1 | 	add	arg01, objptr
047d0     2E 4B C2 FA | 	rdbyte	_var14, arg01
047d4     01 4A 06 F1 | 	add	_var14, #1
047d8                 | '   trigger[channel]+=1                                                 ' @pik33 _ I have to know when the note is started
047d8     2E 4B 42 FC | 	wrbyte	_var14, arg01
047dc     F6 0F 86 F1 | 	sub	objptr, #502
047e0                 | _trackerplayer_spin2_triggerNote_ret
047e0     2D 00 64 FD | 	ret
047e4                 | 
047e4                 | ' 
047e4                 | ' PRI processChannel(channel, sampleNumber, period, effect) | sampleLength, volume, repeatPoint, repeatLength, samplePtr
047e4                 | _trackerplayer_spin2_processChannel
047e4     31 5A 05 F6 | 	mov	COUNT_, #49
047e8     B0 00 A0 FD | 	call	#pushregs_
047ec     D0 F0 07 F1 | 	add	ptra, #208
047f0     AF 5C 62 FC | 	wrlong	arg01, fp
047f4     04 5E 05 F1 | 	add	fp, #4
047f8     AF 5E 62 FC | 	wrlong	arg02, fp
047fc     04 5E 05 F1 | 	add	fp, #4
04800     AF 60 62 FC | 	wrlong	arg03, fp
04804     04 5E 05 F1 | 	add	fp, #4
04808     AF 62 62 FC | 	wrlong	arg04, fp
0480c     0C 5E 85 F1 | 	sub	fp, #12
04810                 | ' 
04810                 | '   channel := channel & 3
04810     AF 6A 02 FB | 	rdlong	local01, fp
04814     03 6A 06 F5 | 	and	local01, #3
04818     AF 6A 62 FC | 	wrlong	local01, fp
0481c     0C 5E 05 F1 | 	add	fp, #12
04820     AF 6C 02 FB | 	rdlong	local02, fp
04824     08 6C 46 F0 | 	shr	local02, #8
04828     36 6F 02 F6 | 	mov	local03, local02
0482c     0F 6E 06 F5 | 	and	local03, #15
04830                 | '   cmd     := (effect >> 8) & $F
04830     BA 0F 06 F1 | 	add	objptr, #442
04834     07 6F 42 FC | 	wrbyte	local03, objptr
04838     AF 70 02 FB | 	rdlong	local04, fp
0483c     04 70 46 F0 | 	shr	local04, #4
04840     38 73 02 F6 | 	mov	local05, local04
04844     0F 72 06 F5 | 	and	local05, #15
04848                 | '   x       := (effect >> 4) & $F
04848     03 0E 86 F1 | 	sub	objptr, #3
0484c     07 73 42 FC | 	wrbyte	local05, objptr
04850     AF 74 02 FB | 	rdlong	local06, fp
04854     0F 74 06 F5 | 	and	local06, #15
04858                 | '   y       := (effect     ) & $F
04858     01 0E 06 F1 | 	add	objptr, #1
0485c     07 75 42 FC | 	wrbyte	local06, objptr
04860     AF 76 02 FB | 	rdlong	local07, fp
04864     0C 5E 85 F1 | 	sub	fp, #12
04868     FF 76 06 F5 | 	and	local07, #255
0486c                 | '   z       := (effect     ) & $FF
0486c     01 0E 06 F1 | 	add	objptr, #1
04870     07 77 42 FC | 	wrbyte	local07, objptr
04874                 | ' 
04874                 | '   ' Handle everything that executes on "tick zero"
04874                 | '   if tickCounter == 0
04874     18 0F 86 F1 | 	sub	objptr, #280
04878     07 6B CA FA | 	rdbyte	local01, objptr wz
0487c     A1 0E 86 F1 | 	sub	objptr, #161
04880     F0 03 90 5D |  if_ne	jmp	#LR__0175
04884     AF 78 02 FB | 	rdlong	local08, fp
04888     02 78 66 F0 | 	shl	local08, #2
0488c     EF 0E 06 F1 | 	add	objptr, #239
04890     07 79 02 F1 | 	add	local08, objptr
04894                 | ' 
04894                 | '     ' These two variables are used for vibrato/tremolo/arpeggio effects and needs to be reset at "tick zero"
04894                 | '     deltaPeriod[channel] := 0
04894     3C 01 68 FC | 	wrlong	#0, local08
04898     AF 7A 02 FB | 	rdlong	local09, fp
0489c     02 7A 66 F0 | 	shl	local09, #2
048a0     20 0E 06 F1 | 	add	objptr, #32
048a4     07 7B 02 F1 | 	add	local09, objptr
048a8                 | '     deltaVolume[channel] := 0
048a8     3D 01 68 FC | 	wrlong	#0, local09
048ac                 | ' 
048ac                 | '     ' If the sample number is zero, the memory from "last set non zero sample number" is used
048ac                 | '     if sampleNumber > 0
048ac     04 5E 05 F1 | 	add	fp, #4
048b0     AF 6A 02 FB | 	rdlong	local01, fp
048b4     04 5E 85 F1 | 	sub	fp, #4
048b8     00 6A 5E F2 | 	cmps	local01, #0 wcz
048bc     0F 0F 86 F1 | 	sub	objptr, #271
048c0     20 00 90 ED |  if_be	jmp	#LR__0165
048c4     AF 7C 02 FB | 	rdlong	local10, fp
048c8     E0 0F 06 F1 | 	add	objptr, #480
048cc     07 7D 02 F1 | 	add	local10, objptr
048d0                 | '       sampleNumber_memory[channel] := sampleNumber
048d0     04 5E 05 F1 | 	add	fp, #4
048d4     AF 6A 02 FB | 	rdlong	local01, fp
048d8     04 5E 85 F1 | 	sub	fp, #4
048dc     3E 6B 42 FC | 	wrbyte	local01, local10
048e0     E0 0F 86 F1 | 	sub	objptr, #480
048e4                 | LR__0165
048e4     AF 7E 02 FB | 	rdlong	local11, fp
048e8     E0 0F 06 F1 | 	add	objptr, #480
048ec     07 7F 02 F1 | 	add	local11, objptr
048f0     20 5E 05 F1 | 	add	fp, #32
048f4     AF 80 02 F6 | 	mov	local12, fp
048f8     10 5E 85 F1 | 	sub	fp, #16
048fc     AF 82 02 F6 | 	mov	local13, fp
04900     31 0E 86 F1 | 	sub	objptr, #49
04904     07 85 02 F6 | 	mov	local14, objptr
04908     04 5E 05 F1 | 	add	fp, #4
0490c     AF 86 02 F6 | 	mov	local15, fp
04910     04 5E 05 F1 | 	add	fp, #4
04914     AF 88 02 F6 | 	mov	local16, fp
04918     04 5E 05 F1 | 	add	fp, #4
0491c     AF 8A 02 F6 | 	mov	local17, fp
04920                 | ' 
04920                 | '     ' Get data for the sample in use by the current channel (uses the memorized sample number)
04920                 | '     getSampleInfo(sampleNumber_memory[channel], @samplePtr, @sampleLength, @fineTune, @volume, @repeatPoint, @repeatLength)
04920     3F 5D C2 FA | 	rdbyte	arg01, local11
04924     42 63 02 F6 | 	mov	arg04, local14
04928     43 8D 02 F6 | 	mov	local18, local15
0492c     44 8F 02 F6 | 	mov	local19, local16
04930     45 91 02 F6 | 	mov	local20, local17
04934     40 5F 02 F6 | 	mov	arg02, local12
04938     41 61 02 F6 | 	mov	arg03, local13
0493c     46 65 02 F6 | 	mov	arg05, local18
04940     47 67 02 F6 | 	mov	arg06, local19
04944     48 69 02 F6 | 	mov	arg07, local20
04948     AF 0F 86 F1 | 	sub	objptr, #431
0494c     1C 5E 85 F1 | 	sub	fp, #28
04950     8C FC BF FD | 	call	#_trackerplayer_spin2_getSampleInfo
04954                 | ' 
04954                 | '     ' Only set volume according to the default sample configuration if the sample number is non zero,
04954                 | '     ' this allows for some tricks when used in combination with the sample number memory (commonly used in protracker modules)
04954                 | '     if sampleNumber > 0
04954     04 5E 05 F1 | 	add	fp, #4
04958     AF 6A 02 FB | 	rdlong	local01, fp
0495c     04 5E 85 F1 | 	sub	fp, #4
04960     00 6A 5E F2 | 	cmps	local01, #0 wcz
04964     24 00 90 ED |  if_be	jmp	#LR__0166
04968     AF 92 02 FB | 	rdlong	local21, fp
0496c     02 92 66 F0 | 	shl	local21, #2
04970     FF 0E 06 F1 | 	add	objptr, #255
04974     07 93 02 F1 | 	add	local21, objptr
04978                 | '       currVolume[channel] := volume
04978     14 5E 05 F1 | 	add	fp, #20
0497c     AF 6A 02 FB | 	rdlong	local01, fp
04980     14 5E 85 F1 | 	sub	fp, #20
04984     49 6B 62 FC | 	wrlong	local01, local21
04988     FF 0E 86 F1 | 	sub	objptr, #255
0498c                 | LR__0166
0498c                 | ' 
0498c                 | '     ' Handle all commands that executes on "zero tick"
0498c                 | '     sampleOffset := 0
0498c     B3 0F 06 F1 | 	add	objptr, #435
04990     07 01 68 FC | 	wrlong	#0, objptr
04994     B3 0F 86 F1 | 	sub	objptr, #435
04998                 | '     handleZeroTickCommands(channel)
04998     AF 5C 02 FB | 	rdlong	arg01, fp
0499c     60 03 B0 FD | 	call	#_trackerplayer_spin2_handleZeroTickCommands
049a0                 | ' 
049a0                 | '     ' Prepare sample data for triggering (now or later)
049a0                 | '     if period > 0
049a0     08 5E 05 F1 | 	add	fp, #8
049a4     AF 6A 02 FB | 	rdlong	local01, fp
049a8     08 5E 85 F1 | 	sub	fp, #8
049ac     00 6A 5E F2 | 	cmps	local01, #0 wcz
049b0     C8 02 90 ED |  if_be	jmp	#LR__0176
049b4     08 5E 05 F1 | 	add	fp, #8
049b8     AF 94 02 F6 | 	mov	local22, fp
049bc                 | ' 
049bc                 | '       retunePeriod(@period, fineTune)
049bc     AF 0F 06 F1 | 	add	objptr, #431
049c0     07 5F 02 FB | 	rdlong	arg02, objptr
049c4     AF 0F 86 F1 | 	sub	objptr, #431
049c8     4A 5D 02 F6 | 	mov	arg01, local22
049cc     08 5E 85 F1 | 	sub	fp, #8
049d0     98 FB BF FD | 	call	#_trackerplayer_spin2_retunePeriod
049d4     AF 96 02 FB | 	rdlong	local23, fp
049d8     D3 0E 06 F1 | 	add	objptr, #211
049dc     07 97 02 F1 | 	add	local23, objptr
049e0                 | '       currFineTune[channel]        := fineTune
049e0     DC 0E 06 F1 | 	add	objptr, #220
049e4     07 6B 02 FB | 	rdlong	local01, objptr
049e8     4B 6B 42 FC | 	wrbyte	local01, local23
049ec     AF 98 02 FB | 	rdlong	local24, fp
049f0     02 98 66 F0 | 	shl	local24, #2
049f4     88 0E 86 F1 | 	sub	objptr, #136
049f8     07 99 02 F1 | 	add	local24, objptr
049fc                 | '       lastSetPeriod[channel]       := period
049fc     08 5E 05 F1 | 	add	fp, #8
04a00     AF 6A 02 FB | 	rdlong	local01, fp
04a04     4C 6B 62 FC | 	wrlong	local01, local24
04a08     08 5E 85 F1 | 	sub	fp, #8
04a0c     AF 9A 02 FB | 	rdlong	local25, fp
04a10     02 9A 66 F0 | 	shl	local25, #2
04a14     40 0E 06 F1 | 	add	objptr, #64
04a18     07 9B 02 F1 | 	add	local25, objptr
04a1c                 | '       lastSetRepeatLength[channel] := repeatLength
04a1c     1C 5E 05 F1 | 	add	fp, #28
04a20     AF 6A 02 FB | 	rdlong	local01, fp
04a24     4D 6B 62 FC | 	wrlong	local01, local25
04a28     1C 5E 85 F1 | 	sub	fp, #28
04a2c     AF 9C 02 FB | 	rdlong	local26, fp
04a30     02 9C 66 F0 | 	shl	local26, #2
04a34     10 0E 06 F1 | 	add	objptr, #16
04a38     07 9D 02 F1 | 	add	local26, objptr
04a3c                 | '       lastSetRepeatPoint[channel]  := repeatPoint
04a3c     18 5E 05 F1 | 	add	fp, #24
04a40     AF 6A 02 FB | 	rdlong	local01, fp
04a44     4E 6B 62 FC | 	wrlong	local01, local26
04a48     08 5E 05 F1 | 	add	fp, #8
04a4c     AF 9E 02 FB | 	rdlong	local27, fp
04a50     20 5E 85 F1 | 	sub	fp, #32
04a54     3C 0E 06 F1 | 	add	objptr, #60
04a58     07 A1 02 FB | 	rdlong	local28, objptr
04a5c     50 9F 02 F1 | 	add	local27, local28
04a60     AF A2 02 FB | 	rdlong	local29, fp
04a64     02 A2 66 F0 | 	shl	local29, #2
04a68     7C 0E 86 F1 | 	sub	objptr, #124
04a6c     07 A3 02 F1 | 	add	local29, objptr
04a70                 | '       lastSetSamplePtr[channel]    := samplePtr + sampleOffset
04a70     51 9F 62 FC | 	wrlong	local27, local29
04a74     AF A4 02 FB | 	rdlong	local30, fp
04a78     02 A4 66 F0 | 	shl	local30, #2
04a7c     10 0E 06 F1 | 	add	objptr, #16
04a80     07 A5 02 F1 | 	add	local30, objptr
04a84                 | '       lastSetSampleNr[channel]     := sampleNumber
04a84     04 5E 05 F1 | 	add	fp, #4
04a88     AF 6A 02 FB | 	rdlong	local01, fp
04a8c     52 6B 62 FC | 	wrlong	local01, local30
04a90                 | ' 
04a90                 | '       ' This calculates the correct sample length in all situations
04a90                 | '       if repeatLength > 2
04a90     18 5E 05 F1 | 	add	fp, #24
04a94     AF 6A 02 FB | 	rdlong	local01, fp
04a98     1C 5E 85 F1 | 	sub	fp, #28
04a9c     02 6A 5E F2 | 	cmps	local01, #2 wcz
04aa0     47 0F 86 F1 | 	sub	objptr, #327
04aa4     20 00 90 ED |  if_be	jmp	#LR__0167
04aa8     18 5E 05 F1 | 	add	fp, #24
04aac     AF A6 02 FB | 	rdlong	local31, fp
04ab0     04 5E 05 F1 | 	add	fp, #4
04ab4     AF A0 02 FB | 	rdlong	local28, fp
04ab8     50 A7 02 F1 | 	add	local31, local28
04abc                 | '         sampleLength := repeatPoint + repeatLength
04abc     0C 5E 85 F1 | 	sub	fp, #12
04ac0     AF A6 62 FC | 	wrlong	local31, fp
04ac4     10 5E 85 F1 | 	sub	fp, #16
04ac8                 | LR__0167
04ac8                 | ' 
04ac8                 | '       if sampleLength - sampleOffset < 1
04ac8     10 5E 05 F1 | 	add	fp, #16
04acc     AF 6A 02 FB | 	rdlong	local01, fp
04ad0     10 5E 85 F1 | 	sub	fp, #16
04ad4     B3 0F 06 F1 | 	add	objptr, #435
04ad8     07 A1 02 FB | 	rdlong	local28, objptr
04adc     B3 0F 86 F1 | 	sub	objptr, #435
04ae0     50 6B 82 F1 | 	sub	local01, local28
04ae4     01 6A 5E F2 | 	cmps	local01, #1 wcz
04ae8     1C 00 90 3D |  if_ae	jmp	#LR__0168
04aec     AF A8 02 FB | 	rdlong	local32, fp
04af0     02 A8 66 F0 | 	shl	local32, #2
04af4     57 0F 06 F1 | 	add	objptr, #343
04af8     07 A9 02 F1 | 	add	local32, objptr
04afc                 | '         lastSetSampleLength[channel] := 1
04afc     54 03 68 FC | 	wrlong	#1, local32
04b00                 | '       else
04b00     57 0F 86 F1 | 	sub	objptr, #343
04b04     30 00 90 FD | 	jmp	#LR__0169
04b08                 | LR__0168
04b08     10 5E 05 F1 | 	add	fp, #16
04b0c     AF AA 02 FB | 	rdlong	local33, fp
04b10     10 5E 85 F1 | 	sub	fp, #16
04b14     B3 0F 06 F1 | 	add	objptr, #435
04b18     07 A1 02 FB | 	rdlong	local28, objptr
04b1c     50 AB 82 F1 | 	sub	local33, local28
04b20     AF AC 02 FB | 	rdlong	local34, fp
04b24     02 AC 66 F0 | 	shl	local34, #2
04b28     5C 0E 86 F1 | 	sub	objptr, #92
04b2c     07 AD 02 F1 | 	add	local34, objptr
04b30                 | '         lastSetSampleLength[channel] := sampleLength - sampleOffset
04b30     56 AB 62 FC | 	wrlong	local33, local34
04b34     57 0F 86 F1 | 	sub	objptr, #343
04b38                 | LR__0169
04b38                 | ' 
04b38                 | '       ' When the sample offset is more than the actual sample length, use the repeat data as sample ptr and length
04b38                 | '       if sampleOffset > sampleLength
04b38     B3 0F 06 F1 | 	add	objptr, #435
04b3c     07 6B 02 FB | 	rdlong	local01, objptr
04b40     B3 0F 86 F1 | 	sub	objptr, #435
04b44     10 5E 05 F1 | 	add	fp, #16
04b48     AF A0 02 FB | 	rdlong	local28, fp
04b4c     10 5E 85 F1 | 	sub	fp, #16
04b50     50 6B 5A F2 | 	cmps	local01, local28 wcz
04b54     50 00 90 ED |  if_be	jmp	#LR__0170
04b58     20 5E 05 F1 | 	add	fp, #32
04b5c     AF AE 02 FB | 	rdlong	local35, fp
04b60     08 5E 85 F1 | 	sub	fp, #8
04b64     AF A0 02 FB | 	rdlong	local28, fp
04b68     18 5E 85 F1 | 	sub	fp, #24
04b6c     50 AF 02 F1 | 	add	local35, local28
04b70     AF B0 02 FB | 	rdlong	local36, fp
04b74     02 B0 66 F0 | 	shl	local36, #2
04b78     37 0F 06 F1 | 	add	objptr, #311
04b7c     07 B1 02 F1 | 	add	local36, objptr
04b80                 | '         lastSetSamplePtr[channel] := samplePtr + repeatPoint
04b80     58 AF 62 FC | 	wrlong	local35, local36
04b84     AF B2 02 FB | 	rdlong	local37, fp
04b88     02 B2 66 F0 | 	shl	local37, #2
04b8c     20 0E 06 F1 | 	add	objptr, #32
04b90     07 B3 02 F1 | 	add	local37, objptr
04b94                 | '         lastSetSampleLength[channel] := repeatLength
04b94     1C 5E 05 F1 | 	add	fp, #28
04b98     AF 6A 02 FB | 	rdlong	local01, fp
04b9c     1C 5E 85 F1 | 	sub	fp, #28
04ba0     59 6B 62 FC | 	wrlong	local01, local37
04ba4     57 0F 86 F1 | 	sub	objptr, #343
04ba8                 | LR__0170
04ba8                 | ' 
04ba8                 | '       ' Trigger note/sample playback directly if no delay or portamento is active
04ba8                 | '       ifnot cmd == $3 || cmd == $5
04ba8     BA 0F 06 F1 | 	add	objptr, #442
04bac     07 6B C2 FA | 	rdbyte	local01, objptr
04bb0     BA 0F 86 F1 | 	sub	objptr, #442
04bb4     03 6A 0E F2 | 	cmp	local01, #3 wz
04bb8     54 00 90 AD |  if_e	jmp	#LR__0173
04bbc     BA 0F 06 F1 | 	add	objptr, #442
04bc0     07 B5 C2 FA | 	rdbyte	local38, objptr
04bc4     BA 0F 86 F1 | 	sub	objptr, #442
04bc8     5A A1 02 F6 | 	mov	local28, local38
04bcc     05 A0 0E F2 | 	cmp	local28, #5 wz
04bd0     3C 00 90 AD |  if_e	jmp	#LR__0173
04bd4                 | '         ifnot cmd == $E && x == $D
04bd4     BA 0F 06 F1 | 	add	objptr, #442
04bd8     07 B7 C2 FA | 	rdbyte	local39, objptr
04bdc     BA 0F 86 F1 | 	sub	objptr, #442
04be0     5B 6B 02 F6 | 	mov	local01, local39
04be4     0E 6A 0E F2 | 	cmp	local01, #14 wz
04be8     18 00 90 5D |  if_ne	jmp	#LR__0171
04bec     B7 0F 06 F1 | 	add	objptr, #439
04bf0     07 B5 C2 FA | 	rdbyte	local38, objptr
04bf4     B7 0F 86 F1 | 	sub	objptr, #439
04bf8     5A A1 02 F6 | 	mov	local28, local38
04bfc     0D A0 0E F2 | 	cmp	local28, #13 wz
04c00     0C 00 90 AD |  if_e	jmp	#LR__0172
04c04                 | LR__0171
04c04                 | '           triggerNote(channel)
04c04     AF 6A 02 FB | 	rdlong	local01, fp
04c08     35 5D 02 F6 | 	mov	arg01, local01
04c0c     CC FA BF FD | 	call	#_trackerplayer_spin2_triggerNote
04c10                 | LR__0172
04c10                 | LR__0173
04c10                 | ' 
04c10                 | '       ' If the "reset vibrato/tremolo function/s" is/are set, it/they get reset at "zero tick"
04c10                 | '       if resetTremolo[channel] > 0
04c10     AF 6A 02 FB | 	rdlong	local01, fp
04c14     8F 0F 06 F1 | 	add	objptr, #399
04c18     07 6B 02 F1 | 	add	local01, objptr
04c1c     35 A1 C2 FA | 	rdbyte	local28, local01
04c20     00 A0 5E F2 | 	cmps	local28, #0 wcz
04c24     8F 0F 86 F1 | 	sub	objptr, #399
04c28     14 00 90 ED |  if_be	jmp	#LR__0174
04c2c     AF B8 02 FB | 	rdlong	local40, fp
04c30     8B 0F 06 F1 | 	add	objptr, #395
04c34     07 B9 02 F1 | 	add	local40, objptr
04c38                 | '         tremoloPos[channel] := 0
04c38     5C 01 48 FC | 	wrbyte	#0, local40
04c3c     8B 0F 86 F1 | 	sub	objptr, #395
04c40                 | LR__0174
04c40                 | ' 
04c40                 | '       if resetVibrato[channel] > 0
04c40     AF 6A 02 FB | 	rdlong	local01, fp
04c44     93 0F 06 F1 | 	add	objptr, #403
04c48     07 6B 02 F1 | 	add	local01, objptr
04c4c     35 A1 C2 FA | 	rdbyte	local28, local01
04c50     00 A0 5E F2 | 	cmps	local28, #0 wcz
04c54     93 0F 86 F1 | 	sub	objptr, #403
04c58     20 00 90 ED |  if_be	jmp	#LR__0176
04c5c     AF BA 02 FB | 	rdlong	local41, fp
04c60     87 0F 06 F1 | 	add	objptr, #391
04c64     07 BB 02 F1 | 	add	local41, objptr
04c68                 | '         vibratoPos[channel] := 0
04c68     5D 01 48 FC | 	wrbyte	#0, local41
04c6c     87 0F 86 F1 | 	sub	objptr, #391
04c70                 | ' 
04c70                 | '   else
04c70     08 00 90 FD | 	jmp	#LR__0176
04c74                 | LR__0175
04c74                 | '     ' Handle commands that executes on all "non zero ticks"
04c74                 | '     handleNonZeroTickCommands(channel)
04c74     AF 5C 02 FB | 	rdlong	arg01, fp
04c78     E4 04 B0 FD | 	call	#_trackerplayer_spin2_handleNonZeroTickCommands
04c7c                 | LR__0176
04c7c                 | ' 
04c7c                 | '   ' Handle commands that executes on every tick
04c7c                 | '   handleEveryTickCommands(channel)
04c7c     AF 5C 02 FB | 	rdlong	arg01, fp
04c80     40 07 B0 FD | 	call	#_trackerplayer_spin2_handleEveryTickCommands
04c84     AF BC 02 FB | 	rdlong	local42, fp
04c88     02 BC 66 F0 | 	shl	local42, #2
04c8c     DF 0E 06 F1 | 	add	objptr, #223
04c90     07 BD 02 F1 | 	add	local42, objptr
04c94     5E BF 02 FB | 	rdlong	local43, local42
04c98     01 00 00 FF 
04c9c     58 BF 66 F3 | 	fles	local43, ##856
04ca0                 | ' 
04ca0                 | '   ' Handle boundaries that should be kept
04ca0                 | '   currPeriod[channel] <#= MAXIMUM_PERIOD
04ca0     5E BF 62 FC | 	wrlong	local43, local42
04ca4     AF C0 02 FB | 	rdlong	local44, fp
04ca8     02 C0 66 F0 | 	shl	local44, #2
04cac     07 C1 02 F1 | 	add	local44, objptr
04cb0     60 C3 02 FB | 	rdlong	local45, local44
04cb4     71 C2 46 F3 | 	fges	local45, #113
04cb8                 | '   currPeriod[channel] #>= MINIMUM_PERIOD
04cb8     60 C3 62 FC | 	wrlong	local45, local44
04cbc     AF C4 02 FB | 	rdlong	local46, fp
04cc0     02 C4 66 F0 | 	shl	local46, #2
04cc4     20 0E 06 F1 | 	add	objptr, #32
04cc8     07 C5 02 F1 | 	add	local46, objptr
04ccc     62 C7 02 FB | 	rdlong	local47, local46
04cd0     40 C6 66 F3 | 	fles	local47, #64
04cd4                 | '   currVolume[channel] <#= MAXIMUM_VOLUME
04cd4     62 C7 62 FC | 	wrlong	local47, local46
04cd8     AF C8 02 FB | 	rdlong	local48, fp
04cdc     02 C8 66 F0 | 	shl	local48, #2
04ce0     07 C9 02 F1 | 	add	local48, objptr
04ce4     64 CB 02 FB | 	rdlong	local49, local48
04ce8     00 CA 46 F3 | 	fges	local49, #0
04cec                 | '   currVolume[channel] #>= MINIMUM_VOLUME
04cec     64 CB 62 FC | 	wrlong	local49, local48
04cf0     FF 0E 86 F1 | 	sub	objptr, #255
04cf4     AF F0 03 F6 | 	mov	ptra, fp
04cf8     BF 00 A0 FD | 	call	#popregs_
04cfc                 | _trackerplayer_spin2_processChannel_ret
04cfc     2D 00 64 FD | 	ret
04d00                 | 
04d00                 | ' 
04d00                 | ' 
04d00                 | ' ' Handle all commands that executes on tick zero
04d00                 | ' '
04d00                 | ' PRI handleZeroTickCommands(channel)
04d00                 | _trackerplayer_spin2_handleZeroTickCommands
04d00     2E 31 02 F6 | 	mov	_var01, arg01
04d04                 | ' 
04d04                 | '   CASE_FAST cmd
04d04     BA 0F 06 F1 | 	add	objptr, #442
04d08     07 33 C2 FA | 	rdbyte	_var02, objptr
04d0c     BA 0F 86 F1 | 	sub	objptr, #442
04d10     19 35 02 F6 | 	mov	_var03, _var02
04d14     09 34 86 F1 | 	sub	_var03, #9
04d18     07 34 26 F3 | 	fle	_var03, #7
04d1c     1A 37 02 F6 | 	mov	_var04, _var03
04d20     30 36 62 FD | 	jmprel	_var04
04d24                 | LR__0177
04d24     1C 00 90 FD | 	jmp	#LR__0178
04d28     30 04 90 FD | 	jmp	#LR__0201
04d2c     64 00 90 FD | 	jmp	#LR__0180
04d30     84 00 90 FD | 	jmp	#LR__0181
04d34     A0 00 90 FD | 	jmp	#LR__0182
04d38     D0 00 90 FD | 	jmp	#LR__0183
04d3c     9C 03 90 FD | 	jmp	#LR__0198
04d40     18 04 90 FD | 	jmp	#LR__0201
04d44                 | LR__0178
04d44                 | ' 
04d44                 | '     $9:                          ' Set sample offset
04d44                 | '       if z > 0
04d44     B9 0F 06 F1 | 	add	objptr, #441
04d48     07 39 C2 FA | 	rdbyte	_var05, objptr
04d4c     B9 0F 86 F1 | 	sub	objptr, #441
04d50     00 38 5E F2 | 	cmps	_var05, #0 wcz
04d54     1C 00 90 ED |  if_be	jmp	#LR__0179
04d58                 | '         cmd9_memoryZ[channel] := z
04d58     18 39 02 F6 | 	mov	_var05, _var01
04d5c     DC 0F 06 F1 | 	add	objptr, #476
04d60     07 39 02 F1 | 	add	_var05, objptr
04d64     23 0E 86 F1 | 	sub	objptr, #35
04d68     07 3B C2 FA | 	rdbyte	_var06, objptr
04d6c     B9 0F 86 F1 | 	sub	objptr, #441
04d70     1C 3B 42 FC | 	wrbyte	_var06, _var05
04d74                 | LR__0179
04d74                 | ' 
04d74                 | '       sampleOffset := cmd9_memoryZ[channel] << 8
04d74     DC 0F 06 F1 | 	add	objptr, #476
04d78     07 31 02 F1 | 	add	_var01, objptr
04d7c     18 39 C2 FA | 	rdbyte	_var05, _var01
04d80     08 38 66 F0 | 	shl	_var05, #8
04d84     29 0E 86 F1 | 	sub	objptr, #41
04d88     07 39 62 FC | 	wrlong	_var05, objptr
04d8c     B3 0F 86 F1 | 	sub	objptr, #435
04d90     C8 03 90 FD | 	jmp	#LR__0201
04d94                 | LR__0180
04d94                 | ' 
04d94                 | '     $B:                          ' Jump position
04d94                 | '       cmdB_memoryZ := z
04d94     B9 0F 06 F1 | 	add	objptr, #441
04d98     07 39 C2 FA | 	rdbyte	_var05, objptr
04d9c     2E 0E 06 F1 | 	add	objptr, #46
04da0     07 39 42 FC | 	wrbyte	_var05, objptr
04da4                 | '       cmdB_updatePosition := true
04da4     01 0E 06 F1 | 	add	objptr, #1
04da8     FF FF FF FF 
04dac     07 FF 4B FC | 	wrbyte	##-1, objptr
04db0     E8 0F 86 F1 | 	sub	objptr, #488
04db4     A4 03 90 FD | 	jmp	#LR__0201
04db8                 | LR__0181
04db8                 | ' 
04db8                 | '     $C:                          ' Set volume
04db8                 | '       currVolume[channel] := z
04db8     02 30 66 F0 | 	shl	_var01, #2
04dbc     FF 0E 06 F1 | 	add	objptr, #255
04dc0     07 31 02 F1 | 	add	_var01, objptr
04dc4     BA 0E 06 F1 | 	add	objptr, #186
04dc8     07 3B C2 FA | 	rdbyte	_var06, objptr
04dcc     B9 0F 86 F1 | 	sub	objptr, #441
04dd0     18 3B 62 FC | 	wrlong	_var06, _var01
04dd4     84 03 90 FD | 	jmp	#LR__0201
04dd8                 | LR__0182
04dd8                 | ' 
04dd8                 | '     $D:                          ' Pattern break
04dd8                 | '       cmdD_memoryX := x
04dd8     B7 0F 06 F1 | 	add	objptr, #439
04ddc     07 39 C2 FA | 	rdbyte	_var05, objptr
04de0     2D 0E 06 F1 | 	add	objptr, #45
04de4     07 39 42 FC | 	wrbyte	_var05, objptr
04de8                 | '       cmdD_memoryY := y
04de8     2C 0E 86 F1 | 	sub	objptr, #44
04dec     07 39 C2 FA | 	rdbyte	_var05, objptr
04df0     2D 0E 06 F1 | 	add	objptr, #45
04df4     07 39 42 FC | 	wrbyte	_var05, objptr
04df8                 | '       cmdD_updatePosition := true
04df8     01 0E 06 F1 | 	add	objptr, #1
04dfc     FF FF FF FF 
04e00     07 FF 4B FC | 	wrbyte	##-1, objptr
04e04     E6 0F 86 F1 | 	sub	objptr, #486
04e08     50 03 90 FD | 	jmp	#LR__0201
04e0c                 | LR__0183
04e0c                 | ' 
04e0c                 | '     $E:                          ' Handle "E commands" that execute on tick zero
04e0c                 | ' 
04e0c                 | '       CASE_FAST x
04e0c     B7 0F 06 F1 | 	add	objptr, #439
04e10     07 3D C2 FA | 	rdbyte	_var07, objptr
04e14     B7 0F 86 F1 | 	sub	objptr, #439
04e18     1E 39 02 F6 | 	mov	_var05, _var07
04e1c     0F 38 26 F3 | 	fle	_var05, #15
04e20     1C 3F 02 F6 | 	mov	_var08, _var05
04e24     30 3E 62 FD | 	jmprel	_var08
04e28                 | LR__0184
04e28     3C 00 90 FD | 	jmp	#LR__0185
04e2c     58 00 90 FD | 	jmp	#LR__0186
04e30     8C 00 90 FD | 	jmp	#LR__0187
04e34     C0 00 90 FD | 	jmp	#LR__0188
04e38     DC 00 90 FD | 	jmp	#LR__0189
04e3c     14 01 90 FD | 	jmp	#LR__0190
04e40     28 01 90 FD | 	jmp	#LR__0191
04e44     C0 01 90 FD | 	jmp	#LR__0194
04e48     10 03 90 FD | 	jmp	#LR__0201
04e4c     0C 03 90 FD | 	jmp	#LR__0201
04e50     F0 01 90 FD | 	jmp	#LR__0195
04e54     24 02 90 FD | 	jmp	#LR__0196
04e58     00 03 90 FD | 	jmp	#LR__0201
04e5c     FC 02 90 FD | 	jmp	#LR__0201
04e60     50 02 90 FD | 	jmp	#LR__0197
04e64     F4 02 90 FD | 	jmp	#LR__0201
04e68                 | LR__0185
04e68                 | ' 
04e68                 | '         $0: lpFilter := (!y) & 1                 ' Set lowpass filter On/Off
04e68     B8 0F 06 F1 | 	add	objptr, #440
04e6c     07 3B C2 FA | 	rdbyte	_var06, objptr
04e70     1D 3B 22 F6 | 	not	_var06, _var06
04e74     01 3A 06 F5 | 	and	_var06, #1
04e78     03 0E 06 F1 | 	add	objptr, #3
04e7c     07 3B 42 FC | 	wrbyte	_var06, objptr
04e80     BB 0F 86 F1 | 	sub	objptr, #443
04e84     D4 02 90 FD | 	jmp	#LR__0201
04e88                 | LR__0186
04e88                 | ' 
04e88                 | '         $1: currPeriod[channel] -= y             ' Fine frequency slide up
04e88     18 41 02 F6 | 	mov	_var09, _var01
04e8c     02 40 66 F0 | 	shl	_var09, #2
04e90     DF 0E 06 F1 | 	add	objptr, #223
04e94     07 41 02 F1 | 	add	_var09, objptr
04e98     20 3B 02 FB | 	rdlong	_var06, _var09
04e9c     D9 0E 06 F1 | 	add	objptr, #217
04ea0     07 43 C2 FA | 	rdbyte	_var10, objptr
04ea4     21 3B 82 F1 | 	sub	_var06, _var10
04ea8     02 30 66 F0 | 	shl	_var01, #2
04eac     D9 0E 86 F1 | 	sub	objptr, #217
04eb0     07 31 02 F1 | 	add	_var01, objptr
04eb4     18 3B 62 FC | 	wrlong	_var06, _var01
04eb8     DF 0E 86 F1 | 	sub	objptr, #223
04ebc     9C 02 90 FD | 	jmp	#LR__0201
04ec0                 | LR__0187
04ec0                 | ' 
04ec0                 | '         $2: currPeriod[channel] += y             ' Fine frequency slide down
04ec0     18 41 02 F6 | 	mov	_var09, _var01
04ec4     02 40 66 F0 | 	shl	_var09, #2
04ec8     DF 0E 06 F1 | 	add	objptr, #223
04ecc     07 41 02 F1 | 	add	_var09, objptr
04ed0     20 3B 02 FB | 	rdlong	_var06, _var09
04ed4     D9 0E 06 F1 | 	add	objptr, #217
04ed8     07 43 C2 FA | 	rdbyte	_var10, objptr
04edc     21 3B 02 F1 | 	add	_var06, _var10
04ee0     02 30 66 F0 | 	shl	_var01, #2
04ee4     D9 0E 86 F1 | 	sub	objptr, #217
04ee8     07 31 02 F1 | 	add	_var01, objptr
04eec     18 3B 62 FC | 	wrlong	_var06, _var01
04ef0     DF 0E 86 F1 | 	sub	objptr, #223
04ef4     64 02 90 FD | 	jmp	#LR__0201
04ef8                 | LR__0188
04ef8                 | ' 
04ef8                 | '         $3: portaGlissando[channel] := y & 1     ' Set portamento glissando On/Off
04ef8     B8 0F 06 F1 | 	add	objptr, #440
04efc     07 3B C2 FA | 	rdbyte	_var06, objptr
04f00     01 3A 06 F5 | 	and	_var06, #1
04f04     04 0E 06 F1 | 	add	objptr, #4
04f08     07 31 02 F1 | 	add	_var01, objptr
04f0c     18 3B 42 FC | 	wrbyte	_var06, _var01
04f10     BC 0F 86 F1 | 	sub	objptr, #444
04f14     44 02 90 FD | 	jmp	#LR__0201
04f18                 | LR__0189
04f18                 | ' 
04f18                 | '         $4:                                      ' Set vibrato waveform type
04f18                 | '           vibratoType[channel]  := y & 3
04f18     B8 0F 06 F1 | 	add	objptr, #440
04f1c     07 3B C2 FA | 	rdbyte	_var06, objptr
04f20     03 3A 06 F5 | 	and	_var06, #3
04f24     18 45 02 F6 | 	mov	_var11, _var01
04f28     08 0E 06 F1 | 	add	objptr, #8
04f2c     07 45 02 F1 | 	add	_var11, objptr
04f30     22 3B 42 FC | 	wrbyte	_var06, _var11
04f34                 | '           resetVibrato[channel] := y & 4
04f34     08 0E 86 F1 | 	sub	objptr, #8
04f38     07 3B C2 FA | 	rdbyte	_var06, objptr
04f3c     04 3A 06 F5 | 	and	_var06, #4
04f40     25 0E 86 F1 | 	sub	objptr, #37
04f44     07 31 02 F1 | 	add	_var01, objptr
04f48     18 3B 42 FC | 	wrbyte	_var06, _var01
04f4c     93 0F 86 F1 | 	sub	objptr, #403
04f50     08 02 90 FD | 	jmp	#LR__0201
04f54                 | LR__0190
04f54                 | ' 
04f54                 | '         $5: fineTune := y                        ' Set finetune
04f54     B8 0F 06 F1 | 	add	objptr, #440
04f58     07 3B C2 FA | 	rdbyte	_var06, objptr
04f5c     09 0E 86 F1 | 	sub	objptr, #9
04f60     07 3B 62 FC | 	wrlong	_var06, objptr
04f64     AF 0F 86 F1 | 	sub	objptr, #431
04f68     F0 01 90 FD | 	jmp	#LR__0201
04f6c                 | LR__0191
04f6c                 | ' 
04f6c                 | '         $6:                                      ' Pattern looping
04f6c                 | '           if y == 0
04f6c     B8 0F 06 F1 | 	add	objptr, #440
04f70     07 3B CA FA | 	rdbyte	_var06, objptr wz
04f74     B8 0F 86 F1 | 	sub	objptr, #440
04f78     1C 00 90 5D |  if_ne	jmp	#LR__0192
04f7c                 | '             cmdE6_memory[channel] := patternRow
04f7c     E9 0F 06 F1 | 	add	objptr, #489
04f80     07 31 02 F1 | 	add	_var01, objptr
04f84     47 0F 86 F1 | 	sub	objptr, #327
04f88     07 45 C2 FA | 	rdbyte	_var11, objptr
04f8c     A2 0E 86 F1 | 	sub	objptr, #162
04f90     18 45 42 FC | 	wrbyte	_var11, _var01
04f94                 | '           else
04f94     C4 01 90 FD | 	jmp	#LR__0201
04f98                 | LR__0192
04f98                 | '             if ++cmdE6_counter[channel] <= y
04f98     18 41 02 F6 | 	mov	_var09, _var01
04f9c     ED 0F 06 F1 | 	add	objptr, #493
04fa0     07 41 02 F1 | 	add	_var09, objptr
04fa4     20 3B C2 FA | 	rdbyte	_var06, _var09
04fa8     01 3A 06 F1 | 	add	_var06, #1
04fac     18 43 02 F6 | 	mov	_var10, _var01
04fb0     07 43 02 F1 | 	add	_var10, objptr
04fb4     21 3B 42 FC | 	wrbyte	_var06, _var10
04fb8     21 47 C2 FA | 	rdbyte	_var12, _var10
04fbc     35 0E 86 F1 | 	sub	objptr, #53
04fc0     07 49 C2 FA | 	rdbyte	_var13, objptr
04fc4     B8 0F 86 F1 | 	sub	objptr, #440
04fc8     24 47 5A F2 | 	cmps	_var12, _var13 wcz
04fcc     24 00 90 1D |  if_a	jmp	#LR__0193
04fd0                 | '               cmdE6_updatePosition[channel] := true
04fd0     F1 0F 06 F1 | 	add	objptr, #497
04fd4     07 31 02 F1 | 	add	_var01, objptr
04fd8     FF FF FF FF 
04fdc     18 FF 4B FC | 	wrbyte	##-1, _var01
04fe0                 | '               cmdE6_updatePositionCommon    := true
04fe0     04 0E 06 F1 | 	add	objptr, #4
04fe4     FF FF FF FF 
04fe8     07 FF 4B FC | 	wrbyte	##-1, objptr
04fec     F5 0F 86 F1 | 	sub	objptr, #501
04ff0                 | '             else
04ff0     68 01 90 FD | 	jmp	#LR__0201
04ff4                 | LR__0193
04ff4                 | '               cmdE6_counter[channel] := 0
04ff4     ED 0F 06 F1 | 	add	objptr, #493
04ff8     07 31 02 F1 | 	add	_var01, objptr
04ffc     18 01 48 FC | 	wrbyte	#0, _var01
05000     ED 0F 86 F1 | 	sub	objptr, #493
05004     54 01 90 FD | 	jmp	#LR__0201
05008                 | LR__0194
05008                 | ' 
05008                 | '         $7:                                      ' Set tremolo waveform type
05008                 | '           tremoloType[channel] := y & 3
05008     B8 0F 06 F1 | 	add	objptr, #440
0500c     07 3B C2 FA | 	rdbyte	_var06, objptr
05010     03 3A 06 F5 | 	and	_var06, #3
05014     18 45 02 F6 | 	mov	_var11, _var01
05018     0C 0E 06 F1 | 	add	objptr, #12
0501c     07 45 02 F1 | 	add	_var11, objptr
05020     22 3B 42 FC | 	wrbyte	_var06, _var11
05024                 | '           resetTremolo[channel] := y & 4
05024     0C 0E 86 F1 | 	sub	objptr, #12
05028     07 3B C2 FA | 	rdbyte	_var06, objptr
0502c     04 3A 06 F5 | 	and	_var06, #4
05030     29 0E 86 F1 | 	sub	objptr, #41
05034     07 31 02 F1 | 	add	_var01, objptr
05038     18 3B 42 FC | 	wrbyte	_var06, _var01
0503c     8F 0F 86 F1 | 	sub	objptr, #399
05040     18 01 90 FD | 	jmp	#LR__0201
05044                 | LR__0195
05044                 | ' 
05044                 | '         $A: currVolume[channel] += y             ' Fine volume slide up
05044     18 41 02 F6 | 	mov	_var09, _var01
05048     02 40 66 F0 | 	shl	_var09, #2
0504c     FF 0E 06 F1 | 	add	objptr, #255
05050     07 41 02 F1 | 	add	_var09, objptr
05054     20 3B 02 FB | 	rdlong	_var06, _var09
05058     B9 0E 06 F1 | 	add	objptr, #185
0505c     07 43 C2 FA | 	rdbyte	_var10, objptr
05060     21 3B 02 F1 | 	add	_var06, _var10
05064     02 30 66 F0 | 	shl	_var01, #2
05068     B9 0E 86 F1 | 	sub	objptr, #185
0506c     07 31 02 F1 | 	add	_var01, objptr
05070     18 3B 62 FC | 	wrlong	_var06, _var01
05074     FF 0E 86 F1 | 	sub	objptr, #255
05078     E0 00 90 FD | 	jmp	#LR__0201
0507c                 | LR__0196
0507c                 | ' 
0507c                 | '         $B: currVolume[channel] -= y             ' Fine volume slide down
0507c     18 41 02 F6 | 	mov	_var09, _var01
05080     02 40 66 F0 | 	shl	_var09, #2
05084     FF 0E 06 F1 | 	add	objptr, #255
05088     07 41 02 F1 | 	add	_var09, objptr
0508c     20 3B 02 FB | 	rdlong	_var06, _var09
05090     B9 0E 06 F1 | 	add	objptr, #185
05094     07 43 C2 FA | 	rdbyte	_var10, objptr
05098     21 3B 82 F1 | 	sub	_var06, _var10
0509c     02 30 66 F0 | 	shl	_var01, #2
050a0     B9 0E 86 F1 | 	sub	objptr, #185
050a4     07 31 02 F1 | 	add	_var01, objptr
050a8     18 3B 62 FC | 	wrlong	_var06, _var01
050ac     FF 0E 86 F1 | 	sub	objptr, #255
050b0     A8 00 90 FD | 	jmp	#LR__0201
050b4                 | LR__0197
050b4                 | ' 
050b4                 | '         $E: patternDelay := y * currentSongSpeed ' Pattern delay
050b4     B8 0F 06 F1 | 	add	objptr, #440
050b8     07 41 C2 FA | 	rdbyte	_var09, objptr
050bc     14 0F 86 F1 | 	sub	objptr, #276
050c0     07 43 C2 FA | 	rdbyte	_var10, objptr
050c4     21 41 02 FD | 	qmul	_var09, _var10
050c8     18 3A 62 FD | 	getqx	_var06
050cc     01 0E 06 F1 | 	add	objptr, #1
050d0     07 3B 42 FC | 	wrbyte	_var06, objptr
050d4     A5 0E 86 F1 | 	sub	objptr, #165
050d8     80 00 90 FD | 	jmp	#LR__0201
050dc                 | LR__0198
050dc                 | ' 
050dc                 | '     $F:                          ' Set speed
050dc                 | '       if z < 32
050dc     B9 0F 06 F1 | 	add	objptr, #441
050e0     07 39 C2 FA | 	rdbyte	_var05, objptr
050e4     B9 0F 86 F1 | 	sub	objptr, #441
050e8     20 38 5E F2 | 	cmps	_var05, #32 wcz
050ec     18 00 90 3D |  if_ae	jmp	#LR__0199
050f0                 | '         currentSongSpeed := z
050f0     B9 0F 06 F1 | 	add	objptr, #441
050f4     07 39 C2 FA | 	rdbyte	_var05, objptr
050f8     15 0F 86 F1 | 	sub	objptr, #277
050fc     07 39 42 FC | 	wrbyte	_var05, objptr
05100     A4 0E 86 F1 | 	sub	objptr, #164
05104                 | '       else
05104     54 00 90 FD | 	jmp	#LR__0200
05108                 | LR__0199
05108                 | '         ticksPerMinute := z * 24
05108     B9 0F 06 F1 | 	add	objptr, #441
0510c     07 3D C2 FA | 	rdbyte	_var07, objptr
05110     1E 39 02 F6 | 	mov	_var05, _var07
05114     01 38 66 F0 | 	shl	_var05, #1
05118     1E 39 02 F1 | 	add	_var05, _var07
0511c     03 38 66 F0 | 	shl	_var05, #3
05120     12 0E 86 F1 | 	sub	objptr, #18
05124     07 39 62 FC | 	wrlong	_var05, objptr
05128     A7 0F 86 F1 | 	sub	objptr, #423
0512c                 | '         cyclesToWait   := (systemClock / ticksPerMinute) * 60
0512c     07 0B 03 FB | 	rdlong	muldiva_, objptr
05130     A7 0F 06 F1 | 	add	objptr, #423
05134     07 0D 03 FB | 	rdlong	muldivb_, objptr
05138     A7 0F 86 F1 | 	sub	objptr, #423
0513c     D0 00 A0 FD | 	call	#divide_
05140     86 3B 02 F6 | 	mov	_var06, muldivb_
05144     04 3A 66 F0 | 	shl	_var06, #4
05148     86 3B 82 F1 | 	sub	_var06, muldivb_
0514c     02 3A 66 F0 | 	shl	_var06, #2
05150     AB 0F 06 F1 | 	add	objptr, #427
05154     07 3B 62 FC | 	wrlong	_var06, objptr
05158     AB 0F 86 F1 | 	sub	objptr, #427
0515c                 | LR__0200
0515c                 | LR__0201
0515c                 | _trackerplayer_spin2_handleZeroTickCommands_ret
0515c     2D 00 64 FD | 	ret
05160                 | 
05160                 | ' 
05160                 | ' 
05160                 | ' ' Handle all commands that executes on "non zero ticks"
05160                 | ' '
05160                 | ' PRI handleNonZeroTickCommands(channel)
05160                 | _trackerplayer_spin2_handleNonZeroTickCommands
05160     0A 5A 05 F6 | 	mov	COUNT_, #10
05164     B0 00 A0 FD | 	call	#pushregs_
05168     2E 6B 02 F6 | 	mov	local01, arg01
0516c                 | ' 
0516c                 | '   CASE_FAST cmd
0516c     BA 0F 06 F1 | 	add	objptr, #442
05170     07 6D C2 FA | 	rdbyte	local02, objptr
05174     BA 0F 86 F1 | 	sub	objptr, #442
05178     36 6F 02 F6 | 	mov	local03, local02
0517c     01 6E 86 F1 | 	sub	local03, #1
05180     0E 6E 26 F3 | 	fle	local03, #14
05184     37 71 02 F6 | 	mov	local04, local03
05188     30 70 62 FD | 	jmprel	local04
0518c                 | LR__0202
0518c     38 00 90 FD | 	jmp	#LR__0203
05190     A0 00 90 FD | 	jmp	#LR__0204
05194     D4 00 90 FD | 	jmp	#LR__0205
05198     1C 02 90 FD | 	jmp	#LR__0215
0519c     20 01 90 FD | 	jmp	#LR__0207
051a0     48 01 90 FD | 	jmp	#LR__0208
051a4     50 01 90 FD | 	jmp	#LR__0209
051a8     0C 02 90 FD | 	jmp	#LR__0215
051ac     08 02 90 FD | 	jmp	#LR__0215
051b0     B0 01 90 FD | 	jmp	#LR__0212
051b4     00 02 90 FD | 	jmp	#LR__0215
051b8     FC 01 90 FD | 	jmp	#LR__0215
051bc     F8 01 90 FD | 	jmp	#LR__0215
051c0     AC 01 90 FD | 	jmp	#LR__0213
051c4     F0 01 90 FD | 	jmp	#LR__0215
051c8                 | LR__0203
051c8                 | ' 
051c8                 | '     $1: currPeriod[channel] -= z        ' Frequency slide up
051c8     35 73 02 F6 | 	mov	local05, local01
051cc     02 72 66 F0 | 	shl	local05, #2
051d0     DF 0E 06 F1 | 	add	objptr, #223
051d4     07 73 02 F1 | 	add	local05, objptr
051d8     39 75 02 FB | 	rdlong	local06, local05
051dc     DA 0E 06 F1 | 	add	objptr, #218
051e0     07 77 C2 FA | 	rdbyte	local07, objptr
051e4     3B 75 82 F1 | 	sub	local06, local07
051e8     35 79 02 F6 | 	mov	local08, local01
051ec     02 78 66 F0 | 	shl	local08, #2
051f0     DA 0E 86 F1 | 	sub	objptr, #218
051f4     07 79 02 F1 | 	add	local08, objptr
051f8     3C 75 62 FC | 	wrlong	local06, local08
051fc                 | ' 
051fc                 | '        ' This simulates a bug in the original protracker play routine that is dependant on an UINT16 data type
051fc                 | '       if currPeriod[channel] < 0
051fc     35 75 02 F6 | 	mov	local06, local01
05200     02 74 66 F0 | 	shl	local06, #2
05204     07 75 02 F1 | 	add	local06, objptr
05208     3A 7B 02 FB | 	rdlong	local09, local06
0520c     00 7A 5E F2 | 	cmps	local09, #0 wcz
05210     DF 0E 86 F1 | 	sub	objptr, #223
05214     A0 01 90 3D |  if_ae	jmp	#LR__0215
05218                 | '         currPeriod[channel] := MAXIMUM_PERIOD
05218     02 6A 66 F0 | 	shl	local01, #2
0521c     DF 0E 06 F1 | 	add	objptr, #223
05220     07 6B 02 F1 | 	add	local01, objptr
05224     01 00 80 FF 
05228     35 B1 6A FC | 	wrlong	##856, local01
0522c     DF 0E 86 F1 | 	sub	objptr, #223
05230     84 01 90 FD | 	jmp	#LR__0215
05234                 | LR__0204
05234                 | ' 
05234                 | '     $2: currPeriod[channel] += z        ' Frequency slide down
05234     35 73 02 F6 | 	mov	local05, local01
05238     02 72 66 F0 | 	shl	local05, #2
0523c     DF 0E 06 F1 | 	add	objptr, #223
05240     07 73 02 F1 | 	add	local05, objptr
05244     39 75 02 FB | 	rdlong	local06, local05
05248     DA 0E 06 F1 | 	add	objptr, #218
0524c     07 77 C2 FA | 	rdbyte	local07, objptr
05250     3B 75 02 F1 | 	add	local06, local07
05254     02 6A 66 F0 | 	shl	local01, #2
05258     DA 0E 86 F1 | 	sub	objptr, #218
0525c     07 6B 02 F1 | 	add	local01, objptr
05260     35 75 62 FC | 	wrlong	local06, local01
05264     DF 0E 86 F1 | 	sub	objptr, #223
05268     4C 01 90 FD | 	jmp	#LR__0215
0526c                 | LR__0205
0526c                 | ' 
0526c                 | '     $3:                                 ' Slide to note (portamento)
0526c                 | '       if z > 0
0526c     B9 0F 06 F1 | 	add	objptr, #441
05270     07 75 C2 FA | 	rdbyte	local06, objptr
05274     B9 0F 86 F1 | 	sub	objptr, #441
05278     00 74 5E F2 | 	cmps	local06, #0 wcz
0527c     1C 00 90 ED |  if_be	jmp	#LR__0206
05280                 | '         cmd3_memoryZ[channel] := z
05280     35 75 02 F6 | 	mov	local06, local01
05284     C8 0F 06 F1 | 	add	objptr, #456
05288     07 75 02 F1 | 	add	local06, objptr
0528c     0F 0E 86 F1 | 	sub	objptr, #15
05290     07 7B C2 FA | 	rdbyte	local09, objptr
05294     B9 0F 86 F1 | 	sub	objptr, #441
05298     3A 7B 42 FC | 	wrbyte	local09, local06
0529c                 | LR__0206
0529c                 | ' 
0529c                 | '       doPortamento(channel, lastSetPeriod[channel])
0529c     35 73 02 F6 | 	mov	local05, local01
052a0     02 72 66 F0 | 	shl	local05, #2
052a4     27 0F 06 F1 | 	add	objptr, #295
052a8     07 73 02 F1 | 	add	local05, objptr
052ac     39 5F 02 FB | 	rdlong	arg02, local05
052b0     35 5D 02 F6 | 	mov	arg01, local01
052b4     27 0F 86 F1 | 	sub	objptr, #295
052b8     64 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
052bc     F8 00 90 FD | 	jmp	#LR__0215
052c0                 | LR__0207
052c0                 | ' 
052c0                 | '     $5:                                 ' Volume slide + portamento
052c0                 | '       doVolumeSlide(channel)
052c0     35 5D 02 F6 | 	mov	arg01, local01
052c4     54 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
052c8                 | '       doPortamento(channel, lastSetPeriod[channel])
052c8     35 73 02 F6 | 	mov	local05, local01
052cc     02 72 66 F0 | 	shl	local05, #2
052d0     27 0F 06 F1 | 	add	objptr, #295
052d4     07 73 02 F1 | 	add	local05, objptr
052d8     39 5F 02 FB | 	rdlong	arg02, local05
052dc     35 5D 02 F6 | 	mov	arg01, local01
052e0     27 0F 86 F1 | 	sub	objptr, #295
052e4     38 07 B0 FD | 	call	#_trackerplayer_spin2_doPortamento
052e8     CC 00 90 FD | 	jmp	#LR__0215
052ec                 | LR__0208
052ec                 | ' 
052ec                 | '     $6: doVolumeSlide(channel)          ' Volume slide + Vibrato (note that vibrato is a)
052ec     35 5D 02 F6 | 	mov	arg01, local01
052f0     28 09 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
052f4     C0 00 90 FD | 	jmp	#LR__0215
052f8                 | LR__0209
052f8                 | ' 
052f8                 | '     $7:                                 ' Tremolo
052f8                 | '       if x > 0
052f8     B7 0F 06 F1 | 	add	objptr, #439
052fc     07 75 C2 FA | 	rdbyte	local06, objptr
05300     B7 0F 86 F1 | 	sub	objptr, #439
05304     00 74 5E F2 | 	cmps	local06, #0 wcz
05308     1C 00 90 ED |  if_be	jmp	#LR__0210
0530c                 | '         cmd7_memoryX[channel] := x
0530c     35 75 02 F6 | 	mov	local06, local01
05310     D8 0F 06 F1 | 	add	objptr, #472
05314     07 75 02 F1 | 	add	local06, objptr
05318     21 0E 86 F1 | 	sub	objptr, #33
0531c     07 7B C2 FA | 	rdbyte	local09, objptr
05320     B7 0F 86 F1 | 	sub	objptr, #439
05324     3A 7B 42 FC | 	wrbyte	local09, local06
05328                 | LR__0210
05328                 | '       if y > 0
05328     B8 0F 06 F1 | 	add	objptr, #440
0532c     07 75 C2 FA | 	rdbyte	local06, objptr
05330     B8 0F 86 F1 | 	sub	objptr, #440
05334     00 74 5E F2 | 	cmps	local06, #0 wcz
05338     1C 00 90 ED |  if_be	jmp	#LR__0211
0533c                 | '         cmd7_memoryY[channel] := y
0533c     35 75 02 F6 | 	mov	local06, local01
05340     D4 0F 06 F1 | 	add	objptr, #468
05344     07 75 02 F1 | 	add	local06, objptr
05348     1C 0E 86 F1 | 	sub	objptr, #28
0534c     07 7B C2 FA | 	rdbyte	local09, objptr
05350     B8 0F 86 F1 | 	sub	objptr, #440
05354     3A 7B 42 FC | 	wrbyte	local09, local06
05358                 | LR__0211
05358                 | ' 
05358                 | '       doTremolo(channel)
05358     35 5D 02 F6 | 	mov	arg01, local01
0535c     08 04 B0 FD | 	call	#_trackerplayer_spin2_doTremolo
05360     54 00 90 FD | 	jmp	#LR__0215
05364                 | LR__0212
05364                 | ' 
05364                 | '     $A: doVolumeSlide(channel)          ' Volume slide
05364     35 5D 02 F6 | 	mov	arg01, local01
05368     B0 08 B0 FD | 	call	#_trackerplayer_spin2_doVolumeSlide
0536c     48 00 90 FD | 	jmp	#LR__0215
05370                 | LR__0213
05370                 | ' 
05370                 | '     $E:                                 ' Retrig every Y ticks
05370                 | '       if (x == $9) && ((tickcounter // y) == 0)
05370     B7 0F 06 F1 | 	add	objptr, #439
05374     07 73 C2 FA | 	rdbyte	local05, objptr
05378     B7 0F 86 F1 | 	sub	objptr, #439
0537c     09 72 0E F2 | 	cmp	local05, #9 wz
05380     34 00 90 5D |  if_ne	jmp	#LR__0214
05384     A1 0E 06 F1 | 	add	objptr, #161
05388     07 77 C2 FA | 	rdbyte	local07, objptr
0538c     3B 0B 03 F6 | 	mov	muldiva_, local07
05390     17 0F 06 F1 | 	add	objptr, #279
05394     07 7D C2 FA | 	rdbyte	local10, objptr
05398     B8 0F 86 F1 | 	sub	objptr, #440
0539c     3E 0D 03 F6 | 	mov	muldivb_, local10
053a0     D0 00 A0 FD | 	call	#divide_
053a4     85 7B 0A F6 | 	mov	local09, muldiva_ wz
053a8     0C 00 90 5D |  if_ne	jmp	#LR__0214
053ac                 | '         triggerNote(channel)
053ac     35 75 02 F6 | 	mov	local06, local01
053b0     3A 5D 02 F6 | 	mov	arg01, local06
053b4     24 F3 BF FD | 	call	#_trackerplayer_spin2_triggerNote
053b8                 | LR__0214
053b8                 | LR__0215
053b8     AF F0 03 F6 | 	mov	ptra, fp
053bc     BF 00 A0 FD | 	call	#popregs_
053c0                 | _trackerplayer_spin2_handleNonZeroTickCommands_ret
053c0     2D 00 64 FD | 	ret
053c4                 | 
053c4                 | ' 
053c4                 | ' 
053c4                 | ' ' Handle all commands that executes on every tick
053c4                 | ' '
053c4                 | ' PRI handleEveryTickCommands(channel) | tempNote, arpCounter
053c4                 | _trackerplayer_spin2_handleEveryTickCommands
053c4     12 5A 05 F6 | 	mov	COUNT_, #18
053c8     B0 00 A0 FD | 	call	#pushregs_
053cc     2E 6B 02 F6 | 	mov	local01, arg01
053d0                 | ' 
053d0                 | '   CASE_FAST cmd
053d0     BA 0F 06 F1 | 	add	objptr, #442
053d4     07 6D C2 FA | 	rdbyte	local02, objptr
053d8     BA 0F 86 F1 | 	sub	objptr, #442
053dc     36 6F 02 F6 | 	mov	local03, local02
053e0     0F 6E 26 F3 | 	fle	local03, #15
053e4     37 71 02 F6 | 	mov	local04, local03
053e8     30 70 62 FD | 	jmprel	local04
053ec                 | LR__0216
053ec     3C 00 90 FD | 	jmp	#LR__0217
053f0     68 03 90 FD | 	jmp	#LR__0231
053f4     64 03 90 FD | 	jmp	#LR__0231
053f8     60 03 90 FD | 	jmp	#LR__0231
053fc     E8 01 90 FD | 	jmp	#LR__0220
05400     58 03 90 FD | 	jmp	#LR__0231
05404     4C 02 90 FD | 	jmp	#LR__0223
05408     50 03 90 FD | 	jmp	#LR__0231
0540c     4C 03 90 FD | 	jmp	#LR__0231
05410     48 03 90 FD | 	jmp	#LR__0231
05414     44 03 90 FD | 	jmp	#LR__0231
05418     40 03 90 FD | 	jmp	#LR__0231
0541c     3C 03 90 FD | 	jmp	#LR__0231
05420     38 03 90 FD | 	jmp	#LR__0231
05424     38 02 90 FD | 	jmp	#LR__0224
05428     30 03 90 FD | 	jmp	#LR__0231
0542c                 | LR__0217
0542c                 | ' 
0542c                 | '     $0:                                 ' Arpeggio
0542c                 | '       arpCounter := tickCounter // 3
0542c     A1 0E 06 F1 | 	add	objptr, #161
05430     07 0B C3 FA | 	rdbyte	muldiva_, objptr
05434     A1 0E 86 F1 | 	sub	objptr, #161
05438     03 0C 07 F6 | 	mov	muldivb_, #3
0543c     D0 00 A0 FD | 	call	#divide_
05440     85 73 02 F6 | 	mov	local05, muldiva_
05444                 | '       if (tempNote := amigaPeriodToNote(currPeriod[channel], currFineTune[channel])) < 36
05444     35 75 02 F6 | 	mov	local06, local01
05448     02 74 66 F0 | 	shl	local06, #2
0544c     DF 0E 06 F1 | 	add	objptr, #223
05450     07 75 02 F1 | 	add	local06, objptr
05454     3A 5D 02 FB | 	rdlong	arg01, local06
05458     35 77 02 F6 | 	mov	local07, local01
0545c     0C 0E 86 F1 | 	sub	objptr, #12
05460     07 77 02 F1 | 	add	local07, objptr
05464     3B 5F C2 FA | 	rdbyte	arg02, local07
05468     D3 0E 86 F1 | 	sub	objptr, #211
0546c     9C F0 BF FD | 	call	#_trackerplayer_spin2_amigaPeriodToNote
05470     15 79 02 F6 | 	mov	local08, result1
05474     3C 7B 02 F6 | 	mov	local09, local08
05478     24 78 5E F2 | 	cmps	local08, #36 wcz
0547c     DC 02 90 3D |  if_ae	jmp	#LR__0231
05480                 | '         if arpCounter == 1 and x > 0
05480     01 72 0E F2 | 	cmp	local05, #1 wz
05484     8C 00 90 5D |  if_ne	jmp	#LR__0218
05488     B7 0F 06 F1 | 	add	objptr, #439
0548c     07 75 C2 FA | 	rdbyte	local06, objptr
05490     B7 0F 86 F1 | 	sub	objptr, #439
05494     00 74 5E F2 | 	cmps	local06, #0 wcz
05498     78 00 90 ED |  if_be	jmp	#LR__0218
0549c                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + x) - currPeriod[channel]
0549c     3D 7D 02 F6 | 	mov	local10, local09
054a0     B7 0F 06 F1 | 	add	objptr, #439
054a4     07 77 C2 FA | 	rdbyte	local07, objptr
054a8     3B 7F 02 F6 | 	mov	local11, local07
054ac     3B 7D 02 F1 | 	add	local10, local07
054b0     3E 81 02 F6 | 	mov	local12, local10
054b4     40 5D 02 F6 | 	mov	arg01, local12
054b8     06 00 00 FF 
054bc     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
054c0     01 5C 66 F0 | 	shl	arg01, #1
054c4     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
054c8                 | ' 
054c8                 | '   return word[@periodTable][noteNumber]
054c8     2E 2B E2 FA | 	rdword	result1, arg01
054cc     06 00 00 FF 
054d0     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
054d4     15 83 02 F6 | 	mov	local13, result1
054d8     35 85 02 F6 | 	mov	local14, local01
054dc     02 84 66 F0 | 	shl	local14, #2
054e0     D8 0E 86 F1 | 	sub	objptr, #216
054e4     07 87 02 F6 | 	mov	local15, objptr
054e8     07 85 02 F1 | 	add	local14, objptr
054ec     41 75 02 F6 | 	mov	local06, local13
054f0     42 89 02 FB | 	rdlong	local16, local14
054f4     44 75 82 F1 | 	sub	local06, local16
054f8     35 8B 02 F6 | 	mov	local17, local01
054fc     02 8A 66 F0 | 	shl	local17, #2
05500     10 0E 06 F1 | 	add	objptr, #16
05504     07 8D 02 F6 | 	mov	local18, objptr
05508     07 8B 02 F1 | 	add	local17, objptr
0550c     45 75 62 FC | 	wrlong	local06, local17
05510     EF 0E 86 F1 | 	sub	objptr, #239
05514                 | LR__0218
05514                 | '         if arpCounter == 2 and y > 0
05514     02 72 0E F2 | 	cmp	local05, #2 wz
05518     8C 00 90 5D |  if_ne	jmp	#LR__0219
0551c     B8 0F 06 F1 | 	add	objptr, #440
05520     07 75 C2 FA | 	rdbyte	local06, objptr
05524     B8 0F 86 F1 | 	sub	objptr, #440
05528     00 74 5E F2 | 	cmps	local06, #0 wcz
0552c     78 00 90 ED |  if_be	jmp	#LR__0219
05530                 | '           deltaPeriod[channel] := noteToAmigaPeriod(tempNote + y) - currPeriod[channel]
05530     3D 7D 02 F6 | 	mov	local10, local09
05534     B8 0F 06 F1 | 	add	objptr, #440
05538     07 77 C2 FA | 	rdbyte	local07, objptr
0553c     3B 7F 02 F6 | 	mov	local11, local07
05540     3B 7D 02 F1 | 	add	local10, local07
05544     3E 81 02 F6 | 	mov	local12, local10
05548     40 5D 02 F6 | 	mov	arg01, local12
0554c     06 00 00 FF 
05550     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05554     01 5C 66 F0 | 	shl	arg01, #1
05558     14 5D 02 F1 | 	add	arg01, ptr__trackerplayer_spin2_dat__
0555c                 | ' 
0555c                 | '   return word[@periodTable][noteNumber]
0555c     2E 2B E2 FA | 	rdword	result1, arg01
05560     06 00 00 FF 
05564     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05568     15 83 02 F6 | 	mov	local13, result1
0556c     35 85 02 F6 | 	mov	local14, local01
05570     02 84 66 F0 | 	shl	local14, #2
05574     D9 0E 86 F1 | 	sub	objptr, #217
05578     07 87 02 F6 | 	mov	local15, objptr
0557c     07 85 02 F1 | 	add	local14, objptr
05580     41 75 02 F6 | 	mov	local06, local13
05584     42 89 02 FB | 	rdlong	local16, local14
05588     44 75 82 F1 | 	sub	local06, local16
0558c     35 8B 02 F6 | 	mov	local17, local01
05590     02 8A 66 F0 | 	shl	local17, #2
05594     10 0E 06 F1 | 	add	objptr, #16
05598     07 8D 02 F6 | 	mov	local18, objptr
0559c     07 8B 02 F1 | 	add	local17, objptr
055a0     45 75 62 FC | 	wrlong	local06, local17
055a4     EF 0E 86 F1 | 	sub	objptr, #239
055a8                 | LR__0219
055a8                 | '         if arpCounter == 0 and (x + y) > 0
055a8     00 72 0E F2 | 	cmp	local05, #0 wz
055ac     AC 01 90 5D |  if_ne	jmp	#LR__0231
055b0     B7 0F 06 F1 | 	add	objptr, #439
055b4     07 75 C2 FA | 	rdbyte	local06, objptr
055b8     01 0E 06 F1 | 	add	objptr, #1
055bc     07 77 C2 FA | 	rdbyte	local07, objptr
055c0     B8 0F 86 F1 | 	sub	objptr, #440
055c4     3B 75 02 F1 | 	add	local06, local07
055c8     00 74 5E F2 | 	cmps	local06, #0 wcz
055cc     8C 01 90 ED |  if_be	jmp	#LR__0231
055d0                 | '           deltaPeriod[channel] := 0
055d0     02 6A 66 F0 | 	shl	local01, #2
055d4     EF 0E 06 F1 | 	add	objptr, #239
055d8     07 6B 02 F1 | 	add	local01, objptr
055dc     35 01 68 FC | 	wrlong	#0, local01
055e0     EF 0E 86 F1 | 	sub	objptr, #239
055e4     74 01 90 FD | 	jmp	#LR__0231
055e8                 | LR__0220
055e8                 | ' 
055e8                 | '     $4:                                 ' Vibrato
055e8                 | '       if x > 0
055e8     B7 0F 06 F1 | 	add	objptr, #439
055ec     07 75 C2 FA | 	rdbyte	local06, objptr
055f0     B7 0F 86 F1 | 	sub	objptr, #439
055f4     00 74 5E F2 | 	cmps	local06, #0 wcz
055f8     1C 00 90 ED |  if_be	jmp	#LR__0221
055fc                 | '         cmd4_memoryX[channel] := x
055fc     35 75 02 F6 | 	mov	local06, local01
05600     D0 0F 06 F1 | 	add	objptr, #464
05604     07 75 02 F1 | 	add	local06, objptr
05608     19 0E 86 F1 | 	sub	objptr, #25
0560c     07 7F C2 FA | 	rdbyte	local11, objptr
05610     B7 0F 86 F1 | 	sub	objptr, #439
05614     3A 7F 42 FC | 	wrbyte	local11, local06
05618                 | LR__0221
05618                 | '       if y > 0
05618     B8 0F 06 F1 | 	add	objptr, #440
0561c     07 75 C2 FA | 	rdbyte	local06, objptr
05620     B8 0F 86 F1 | 	sub	objptr, #440
05624     00 74 5E F2 | 	cmps	local06, #0 wcz
05628     1C 00 90 ED |  if_be	jmp	#LR__0222
0562c                 | '         cmd4_memoryY[channel] := y
0562c     35 75 02 F6 | 	mov	local06, local01
05630     CC 0F 06 F1 | 	add	objptr, #460
05634     07 75 02 F1 | 	add	local06, objptr
05638     14 0E 86 F1 | 	sub	objptr, #20
0563c     07 7F C2 FA | 	rdbyte	local11, objptr
05640     B8 0F 86 F1 | 	sub	objptr, #440
05644     3A 7F 42 FC | 	wrbyte	local11, local06
05648                 | LR__0222
05648                 | ' 
05648                 | '       doVibrato(channel)
05648     35 5D 02 F6 | 	mov	arg01, local01
0564c     74 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
05650     08 01 90 FD | 	jmp	#LR__0231
05654                 | LR__0223
05654                 | ' 
05654                 | '     $6: doVibrato(channel)              ' Volume slide + Vibrato
05654     35 5D 02 F6 | 	mov	arg01, local01
05658     68 02 B0 FD | 	call	#_trackerplayer_spin2_doVibrato
0565c     FC 00 90 FD | 	jmp	#LR__0231
05660                 | LR__0224
05660                 | ' 
05660                 | '     $E:
05660                 | '       if x == $C                        ' Cut note after Y ticks
05660     B7 0F 06 F1 | 	add	objptr, #439
05664     07 75 C2 FA | 	rdbyte	local06, objptr
05668     B7 0F 86 F1 | 	sub	objptr, #439
0566c     0C 74 0E F2 | 	cmp	local06, #12 wz
05670     34 00 90 5D |  if_ne	jmp	#LR__0225
05674                 | '         if tickcounter == y
05674     A1 0E 06 F1 | 	add	objptr, #161
05678     07 75 C2 FA | 	rdbyte	local06, objptr
0567c     17 0F 06 F1 | 	add	objptr, #279
05680     07 7F C2 FA | 	rdbyte	local11, objptr
05684     B8 0F 86 F1 | 	sub	objptr, #440
05688     3F 75 0A F2 | 	cmp	local06, local11 wz
0568c     CC 00 90 5D |  if_ne	jmp	#LR__0230
05690                 | '           currVolume[channel] := 0
05690     02 6A 66 F0 | 	shl	local01, #2
05694     FF 0E 06 F1 | 	add	objptr, #255
05698     07 6B 02 F1 | 	add	local01, objptr
0569c     35 01 68 FC | 	wrlong	#0, local01
056a0     FF 0E 86 F1 | 	sub	objptr, #255
056a4     B4 00 90 FD | 	jmp	#LR__0230
056a8                 | LR__0225
056a8                 | ' 
056a8                 | '       elseif x == $D                    ' Delay note Y ticks
056a8     B7 0F 06 F1 | 	add	objptr, #439
056ac     07 75 C2 FA | 	rdbyte	local06, objptr
056b0     B7 0F 86 F1 | 	sub	objptr, #439
056b4     0D 74 0E F2 | 	cmp	local06, #13 wz
056b8     A0 00 90 5D |  if_ne	jmp	#LR__0229
056bc                 | '         if tickcounter == y
056bc     A1 0E 06 F1 | 	add	objptr, #161
056c0     07 75 C2 FA | 	rdbyte	local06, objptr
056c4     17 0F 06 F1 | 	add	objptr, #279
056c8     07 7F C2 FA | 	rdbyte	local11, objptr
056cc     B8 0F 86 F1 | 	sub	objptr, #440
056d0     3F 75 0A F2 | 	cmp	local06, local11 wz
056d4     0C 00 90 5D |  if_ne	jmp	#LR__0226
056d8                 | '           triggerNote(channel)
056d8     35 5D 02 F6 | 	mov	arg01, local01
056dc     FC EF BF FD | 	call	#_trackerplayer_spin2_triggerNote
056e0     78 00 90 FD | 	jmp	#LR__0228
056e4                 | LR__0226
056e4                 | '         ' Do a "bugged trigger" if y >= currentSongSpeed
056e4                 | '         elseif (y >= currentSongSpeed) and tickcounter == (currentSongSpeed - 1)
056e4     B8 0F 06 F1 | 	add	objptr, #440
056e8     07 75 C2 FA | 	rdbyte	local06, objptr
056ec     14 0F 86 F1 | 	sub	objptr, #276
056f0     07 7F C2 FA | 	rdbyte	local11, objptr
056f4     A4 0E 86 F1 | 	sub	objptr, #164
056f8     3F 75 5A F2 | 	cmps	local06, local11 wcz
056fc     5C 00 90 CD |  if_b	jmp	#LR__0227
05700     A4 0E 06 F1 | 	add	objptr, #164
05704     07 83 C2 FA | 	rdbyte	local13, objptr
05708     41 81 02 F6 | 	mov	local12, local13
0570c     01 80 86 F1 | 	sub	local12, #1
05710     03 0E 86 F1 | 	sub	objptr, #3
05714     07 87 C2 FA | 	rdbyte	local15, objptr
05718     A1 0E 86 F1 | 	sub	objptr, #161
0571c     43 85 02 F6 | 	mov	local14, local15
05720     40 85 0A F2 | 	cmp	local14, local12 wz
05724     34 00 90 5D |  if_ne	jmp	#LR__0227
05728                 | '           currPeriod[channel] := lastSetPeriod[channel] ' Only set period, don't trigger a sample playback
05728     35 75 02 F6 | 	mov	local06, local01
0572c     02 74 66 F0 | 	shl	local06, #2
05730     27 0F 06 F1 | 	add	objptr, #295
05734     07 7D 02 F6 | 	mov	local10, objptr
05738     07 75 02 F1 | 	add	local06, objptr
0573c     35 7F 02 F6 | 	mov	local11, local01
05740     02 7E 66 F0 | 	shl	local11, #2
05744     48 0E 86 F1 | 	sub	objptr, #72
05748     07 77 02 F6 | 	mov	local07, objptr
0574c     3A 81 02 FB | 	rdlong	local12, local06
05750     3B 7F 02 F1 | 	add	local11, local07
05754     3F 81 62 FC | 	wrlong	local12, local11
05758     DF 0E 86 F1 | 	sub	objptr, #223
0575c                 | LR__0227
0575c                 | LR__0228
0575c                 | LR__0229
0575c                 | LR__0230
0575c                 | LR__0231
0575c     AF F0 03 F6 | 	mov	ptra, fp
05760     BF 00 A0 FD | 	call	#popregs_
05764                 | _trackerplayer_spin2_handleEveryTickCommands_ret
05764     2D 00 64 FD | 	ret
05768                 | 
05768                 | ' 
05768                 | ' 
05768                 | ' PRI doTremolo(channel) | depth, sineWave, speed
05768                 | _trackerplayer_spin2_doTremolo
05768     2E 31 02 F6 | 	mov	_var01, arg01
0576c     18 33 02 F6 | 	mov	_var02, _var01
05770     8B 0F 06 F1 | 	add	objptr, #395
05774     07 33 02 F1 | 	add	_var02, objptr
05778     05 00 00 FF 
0577c     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
05780     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
05784     19 37 C2 FA | 	rdbyte	_var04, _var02
05788     02 36 66 F0 | 	shl	_var04, #2
0578c     1A 37 02 F1 | 	add	_var04, _var03
05790                 | ' 
05790                 | '   sineWave := long[@vibratoWaveform][tremoloPos[channel]]
05790     1B 39 02 FB | 	rdlong	_var05, _var04
05794     18 3B 02 F6 | 	mov	_var06, _var01
05798     49 0E 06 F1 | 	add	objptr, #73
0579c     07 3B 02 F1 | 	add	_var06, objptr
057a0                 | '   depth    := cmd7_memoryY[channel]
057a0     1D 3D C2 FA | 	rdbyte	_var07, _var06
057a4     18 3F 02 F6 | 	mov	_var08, _var01
057a8     04 0E 06 F1 | 	add	objptr, #4
057ac     07 3F 02 F1 | 	add	_var08, objptr
057b0                 | '   speed    := cmd7_memoryX[channel]
057b0     1F 41 C2 FA | 	rdbyte	_var09, _var08
057b4                 | ' 
057b4                 | '   CASE_FAST vibratoType[channel]
057b4     18 43 02 F6 | 	mov	_var10, _var01
057b8     18 0E 86 F1 | 	sub	objptr, #24
057bc     07 45 02 F6 | 	mov	_var11, objptr
057c0     07 43 02 F1 | 	add	_var10, objptr
057c4     21 47 C2 FA | 	rdbyte	_var12, _var10
057c8     03 46 26 F3 | 	fle	_var12, #3
057cc     23 49 02 F6 | 	mov	_var13, _var12
057d0     05 00 00 FF 
057d4     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
057d8     C0 0F 86 F1 | 	sub	objptr, #448
057dc     30 48 62 FD | 	jmprel	_var13
057e0                 | LR__0232
057e0     0C 00 90 FD | 	jmp	#LR__0233
057e4     30 00 90 FD | 	jmp	#LR__0234
057e8     6C 00 90 FD | 	jmp	#LR__0235
057ec     B4 00 90 FD | 	jmp	#LR__0236
057f0                 | LR__0233
057f0                 | ' 
057f0                 | '     0: deltaVolume[channel] := (depth * sineWave) SAR 6                                 ' Sine wave
057f0     1C 3D 02 FD | 	qmul	_var07, _var05
057f4     18 4A 62 FD | 	getqx	_var14
057f8     06 4A C6 F0 | 	sar	_var14, #6
057fc     18 4D 02 F6 | 	mov	_var15, _var01
05800     02 4C 66 F0 | 	shl	_var15, #2
05804     0F 0F 06 F1 | 	add	objptr, #271
05808     07 4D 02 F1 | 	add	_var15, objptr
0580c     26 4B 62 FC | 	wrlong	_var14, _var15
05810     0F 0F 86 F1 | 	sub	objptr, #271
05814     8C 00 90 FD | 	jmp	#LR__0236
05818                 | LR__0234
05818                 | '     1: deltaVolume[channel] := (depth * (tremoloPos[channel] << 3) - 256) SAR 6         ' Ramp down wave
05818     18 4D 02 F6 | 	mov	_var15, _var01
0581c     8B 0F 06 F1 | 	add	objptr, #395
05820     07 4D 02 F1 | 	add	_var15, objptr
05824     26 4F C2 FA | 	rdbyte	_var16, _var15
05828     03 4E 66 F0 | 	shl	_var16, #3
0582c     27 3D 02 FD | 	qmul	_var07, _var16
05830     18 4A 62 FD | 	getqx	_var14
05834     00 4B 86 F1 | 	sub	_var14, #256
05838     06 4A C6 F0 | 	sar	_var14, #6
0583c     18 51 02 F6 | 	mov	_var17, _var01
05840     02 50 66 F0 | 	shl	_var17, #2
05844     7C 0E 86 F1 | 	sub	objptr, #124
05848     07 51 02 F1 | 	add	_var17, objptr
0584c     28 4B 62 FC | 	wrlong	_var14, _var17
05850     0F 0F 86 F1 | 	sub	objptr, #271
05854     4C 00 90 FD | 	jmp	#LR__0236
05858                 | LR__0235
05858                 | '     2: deltaVolume[channel] := (depth * ((tremoloPos[channel] & 32) << 4) - 256) SAR 6  ' Square wave
05858     18 4D 02 F6 | 	mov	_var15, _var01
0585c     8B 0F 06 F1 | 	add	objptr, #395
05860     07 53 02 F6 | 	mov	_var18, objptr
05864     07 4D 02 F1 | 	add	_var15, objptr
05868     26 4F C2 FA | 	rdbyte	_var16, _var15
0586c     20 4E 06 F5 | 	and	_var16, #32
05870     04 4E 66 F0 | 	shl	_var16, #4
05874     27 3D 02 FD | 	qmul	_var07, _var16
05878     18 54 62 FD | 	getqx	_var19
0587c     2A 4B 02 F6 | 	mov	_var14, _var19
05880     00 4B 86 F1 | 	sub	_var14, #256
05884     06 4A C6 F0 | 	sar	_var14, #6
05888     18 51 02 F6 | 	mov	_var17, _var01
0588c     02 50 66 F0 | 	shl	_var17, #2
05890     7C 0E 86 F1 | 	sub	objptr, #124
05894     07 57 02 F6 | 	mov	_var20, objptr
05898     07 51 02 F1 | 	add	_var17, objptr
0589c     28 4B 62 FC | 	wrlong	_var14, _var17
058a0     0F 0F 86 F1 | 	sub	objptr, #271
058a4                 | LR__0236
058a4     8B 0F 06 F1 | 	add	objptr, #395
058a8     07 31 02 F1 | 	add	_var01, objptr
058ac     18 59 C2 FA | 	rdbyte	_var21, _var01
058b0     20 59 02 F1 | 	add	_var21, _var09
058b4     3F 58 06 F5 | 	and	_var21, #63
058b8                 | ' 
058b8                 | '   tremoloPos[channel] := (tremoloPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
058b8     18 59 42 FC | 	wrbyte	_var21, _var01
058bc     8B 0F 86 F1 | 	sub	objptr, #395
058c0                 | _trackerplayer_spin2_doTremolo_ret
058c0     2D 00 64 FD | 	ret
058c4                 | 
058c4                 | ' 
058c4                 | ' 
058c4                 | ' PRI doVibrato(channel) | depth, sineWave, speed
058c4                 | _trackerplayer_spin2_doVibrato
058c4     2E 31 02 F6 | 	mov	_var01, arg01
058c8     18 33 02 F6 | 	mov	_var02, _var01
058cc     87 0F 06 F1 | 	add	objptr, #391
058d0     07 33 02 F1 | 	add	_var02, objptr
058d4     05 00 00 FF 
058d8     A4 29 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##2980
058dc     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
058e0     19 37 C2 FA | 	rdbyte	_var04, _var02
058e4     02 36 66 F0 | 	shl	_var04, #2
058e8     1A 37 02 F1 | 	add	_var04, _var03
058ec                 | ' 
058ec                 | '   sineWave := long[@vibratoWaveform][vibratoPos[channel]]
058ec     1B 39 02 FB | 	rdlong	_var05, _var04
058f0     18 3B 02 F6 | 	mov	_var06, _var01
058f4     45 0E 06 F1 | 	add	objptr, #69
058f8     07 3B 02 F1 | 	add	_var06, objptr
058fc                 | '   depth    := cmd4_memoryY[channel]
058fc     1D 3D C2 FA | 	rdbyte	_var07, _var06
05900     18 3F 02 F6 | 	mov	_var08, _var01
05904     04 0E 06 F1 | 	add	objptr, #4
05908     07 3F 02 F1 | 	add	_var08, objptr
0590c                 | '   speed    := cmd4_memoryX[channel]
0590c     1F 41 C2 FA | 	rdbyte	_var09, _var08
05910                 | ' 
05910                 | '   CASE_FAST vibratoType[channel]
05910     18 43 02 F6 | 	mov	_var10, _var01
05914     10 0E 86 F1 | 	sub	objptr, #16
05918     07 45 02 F6 | 	mov	_var11, objptr
0591c     07 43 02 F1 | 	add	_var10, objptr
05920     21 47 C2 FA | 	rdbyte	_var12, _var10
05924     03 46 26 F3 | 	fle	_var12, #3
05928     23 49 02 F6 | 	mov	_var13, _var12
0592c     05 00 00 FF 
05930     A4 29 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##2980
05934     C0 0F 86 F1 | 	sub	objptr, #448
05938     30 48 62 FD | 	jmprel	_var13
0593c                 | LR__0237
0593c     0C 00 90 FD | 	jmp	#LR__0238
05940     30 00 90 FD | 	jmp	#LR__0239
05944     6C 00 90 FD | 	jmp	#LR__0240
05948     B4 00 90 FD | 	jmp	#LR__0241
0594c                 | LR__0238
0594c                 | ' 
0594c                 | '     0: deltaPeriod[channel] := (depth * sineWave) SAR 7                                 ' Sine wave
0594c     1C 3D 02 FD | 	qmul	_var07, _var05
05950     18 4A 62 FD | 	getqx	_var14
05954     07 4A C6 F0 | 	sar	_var14, #7
05958     18 4D 02 F6 | 	mov	_var15, _var01
0595c     02 4C 66 F0 | 	shl	_var15, #2
05960     EF 0E 06 F1 | 	add	objptr, #239
05964     07 4D 02 F1 | 	add	_var15, objptr
05968     26 4B 62 FC | 	wrlong	_var14, _var15
0596c     EF 0E 86 F1 | 	sub	objptr, #239
05970     8C 00 90 FD | 	jmp	#LR__0241
05974                 | LR__0239
05974                 | '     1: deltaPeriod[channel] := (depth * (vibratoPos[channel] << 3) - 256) SAR 7         ' Ramp down wave
05974     18 4D 02 F6 | 	mov	_var15, _var01
05978     87 0F 06 F1 | 	add	objptr, #391
0597c     07 4D 02 F1 | 	add	_var15, objptr
05980     26 4F C2 FA | 	rdbyte	_var16, _var15
05984     03 4E 66 F0 | 	shl	_var16, #3
05988     27 3D 02 FD | 	qmul	_var07, _var16
0598c     18 4A 62 FD | 	getqx	_var14
05990     00 4B 86 F1 | 	sub	_var14, #256
05994     07 4A C6 F0 | 	sar	_var14, #7
05998     18 51 02 F6 | 	mov	_var17, _var01
0599c     02 50 66 F0 | 	shl	_var17, #2
059a0     98 0E 86 F1 | 	sub	objptr, #152
059a4     07 51 02 F1 | 	add	_var17, objptr
059a8     28 4B 62 FC | 	wrlong	_var14, _var17
059ac     EF 0E 86 F1 | 	sub	objptr, #239
059b0     4C 00 90 FD | 	jmp	#LR__0241
059b4                 | LR__0240
059b4                 | '     2: deltaPeriod[channel] := (depth * ((vibratoPos[channel] & 32) << 4) - 256) SAR 7  ' Square wave
059b4     18 4D 02 F6 | 	mov	_var15, _var01
059b8     87 0F 06 F1 | 	add	objptr, #391
059bc     07 53 02 F6 | 	mov	_var18, objptr
059c0     07 4D 02 F1 | 	add	_var15, objptr
059c4     26 4F C2 FA | 	rdbyte	_var16, _var15
059c8     20 4E 06 F5 | 	and	_var16, #32
059cc     04 4E 66 F0 | 	shl	_var16, #4
059d0     27 3D 02 FD | 	qmul	_var07, _var16
059d4     18 54 62 FD | 	getqx	_var19
059d8     2A 4B 02 F6 | 	mov	_var14, _var19
059dc     00 4B 86 F1 | 	sub	_var14, #256
059e0     07 4A C6 F0 | 	sar	_var14, #7
059e4     18 51 02 F6 | 	mov	_var17, _var01
059e8     02 50 66 F0 | 	shl	_var17, #2
059ec     98 0E 86 F1 | 	sub	objptr, #152
059f0     07 57 02 F6 | 	mov	_var20, objptr
059f4     07 51 02 F1 | 	add	_var17, objptr
059f8     28 4B 62 FC | 	wrlong	_var14, _var17
059fc     EF 0E 86 F1 | 	sub	objptr, #239
05a00                 | LR__0241
05a00     87 0F 06 F1 | 	add	objptr, #391
05a04     07 31 02 F1 | 	add	_var01, objptr
05a08     18 59 C2 FA | 	rdbyte	_var21, _var01
05a0c     20 59 02 F1 | 	add	_var21, _var09
05a10     3F 58 06 F5 | 	and	_var21, #63
05a14                 | ' 
05a14                 | '   vibratoPos[channel] := (vibratoPos[channel] + speed) & VIBRATO_WAVEFORM_MASK
05a14     18 59 42 FC | 	wrbyte	_var21, _var01
05a18     87 0F 86 F1 | 	sub	objptr, #391
05a1c                 | _trackerplayer_spin2_doVibrato_ret
05a1c     2D 00 64 FD | 	ret
05a20                 | 
05a20                 | ' 
05a20                 | ' 
05a20                 | ' PRI doPortamento(channel, period) | i, j, periodStep, tempPeriod
05a20                 | _trackerplayer_spin2_doPortamento
05a20                 | ' 
05a20                 | '   if period == currPeriod[channel]
05a20     2E 31 02 F6 | 	mov	_var01, arg01
05a24     02 30 66 F0 | 	shl	_var01, #2
05a28     DF 0E 06 F1 | 	add	objptr, #223
05a2c     07 33 02 F6 | 	mov	_var02, objptr
05a30     07 31 02 F1 | 	add	_var01, objptr
05a34     18 35 02 FB | 	rdlong	_var03, _var01
05a38     1A 5F 0A F2 | 	cmp	arg02, _var03 wz
05a3c                 | '     return
05a3c     DF 0E 86 F1 | 	sub	objptr, #223
05a40     D4 01 90 AD |  if_e	jmp	#_trackerplayer_spin2_doPortamento_ret
05a44                 | ' 
05a44                 | '   if period > 0
05a44     00 5E 5E F2 | 	cmps	arg02, #0 wcz
05a48     1C 00 90 ED |  if_be	jmp	#LR__0242
05a4c     2E 37 02 F6 | 	mov	_var04, arg01
05a50     02 36 66 F0 | 	shl	_var04, #2
05a54     97 0F 06 F1 | 	add	objptr, #407
05a58     07 37 02 F1 | 	add	_var04, objptr
05a5c                 | '     portamentoPeriodMemory[channel] := period
05a5c     1B 5F 62 FC | 	wrlong	arg02, _var04
05a60                 | '   else
05a60     97 0F 86 F1 | 	sub	objptr, #407
05a64     18 00 90 FD | 	jmp	#LR__0243
05a68                 | LR__0242
05a68     2E 39 02 F6 | 	mov	_var05, arg01
05a6c     02 38 66 F0 | 	shl	_var05, #2
05a70     97 0F 06 F1 | 	add	objptr, #407
05a74     07 39 02 F1 | 	add	_var05, objptr
05a78                 | '     period := portamentoPeriodMemory[channel]
05a78     1C 5F 02 FB | 	rdlong	arg02, _var05
05a7c     97 0F 86 F1 | 	sub	objptr, #407
05a80                 | LR__0243
05a80                 | ' 
05a80                 | '   if period > currPeriod[channel]
05a80     2E 31 02 F6 | 	mov	_var01, arg01
05a84     02 30 66 F0 | 	shl	_var01, #2
05a88     DF 0E 06 F1 | 	add	objptr, #223
05a8c     07 31 02 F1 | 	add	_var01, objptr
05a90     18 35 02 FB | 	rdlong	_var03, _var01
05a94     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
05a98     DF 0E 86 F1 | 	sub	objptr, #223
05a9c     50 00 90 ED |  if_be	jmp	#LR__0244
05aa0     2E 3B 02 F6 | 	mov	_var06, arg01
05aa4     02 3A 66 F0 | 	shl	_var06, #2
05aa8     DF 0E 06 F1 | 	add	objptr, #223
05aac     07 3B 02 F1 | 	add	_var06, objptr
05ab0     2E 3D 02 F6 | 	mov	_var07, arg01
05ab4     E9 0E 06 F1 | 	add	objptr, #233
05ab8     1D 3F 02 FB | 	rdlong	_var08, _var06
05abc     07 3D 02 F1 | 	add	_var07, objptr
05ac0     1E 33 C2 FA | 	rdbyte	_var02, _var07
05ac4     19 3F 02 F1 | 	add	_var08, _var02
05ac8                 | '     currPeriod[channel] += cmd3_memoryZ[channel]
05ac8     1D 3F 62 FC | 	wrlong	_var08, _var06
05acc     2E 41 02 F6 | 	mov	_var09, arg01
05ad0     02 40 66 F0 | 	shl	_var09, #2
05ad4     E9 0E 86 F1 | 	sub	objptr, #233
05ad8     07 41 02 F1 | 	add	_var09, objptr
05adc     20 43 02 FB | 	rdlong	_var10, _var09
05ae0     2F 43 62 F3 | 	fles	_var10, arg02
05ae4                 | '     currPeriod[channel] <#= period
05ae4     20 43 62 FC | 	wrlong	_var10, _var09
05ae8     DF 0E 86 F1 | 	sub	objptr, #223
05aec     6C 00 90 FD | 	jmp	#LR__0246
05af0                 | LR__0244
05af0                 | ' 
05af0                 | '   elseif period < currPeriod[channel]
05af0     2E 31 02 F6 | 	mov	_var01, arg01
05af4     02 30 66 F0 | 	shl	_var01, #2
05af8     DF 0E 06 F1 | 	add	objptr, #223
05afc     07 31 02 F1 | 	add	_var01, objptr
05b00     18 35 02 FB | 	rdlong	_var03, _var01
05b04     1A 5F 5A F2 | 	cmps	arg02, _var03 wcz
05b08     DF 0E 86 F1 | 	sub	objptr, #223
05b0c     4C 00 90 3D |  if_ae	jmp	#LR__0245
05b10     2E 45 02 F6 | 	mov	_var11, arg01
05b14     02 44 66 F0 | 	shl	_var11, #2
05b18     DF 0E 06 F1 | 	add	objptr, #223
05b1c     07 45 02 F1 | 	add	_var11, objptr
05b20     2E 47 02 F6 | 	mov	_var12, arg01
05b24     E9 0E 06 F1 | 	add	objptr, #233
05b28     22 49 02 FB | 	rdlong	_var13, _var11
05b2c     07 47 02 F1 | 	add	_var12, objptr
05b30     23 33 C2 FA | 	rdbyte	_var02, _var12
05b34     19 49 82 F1 | 	sub	_var13, _var02
05b38                 | '     currPeriod[channel] -= cmd3_memoryZ[channel]
05b38     22 49 62 FC | 	wrlong	_var13, _var11
05b3c     2E 4B 02 F6 | 	mov	_var14, arg01
05b40     02 4A 66 F0 | 	shl	_var14, #2
05b44     E9 0E 86 F1 | 	sub	objptr, #233
05b48     07 4B 02 F1 | 	add	_var14, objptr
05b4c     25 4D 02 FB | 	rdlong	_var15, _var14
05b50     2F 4D 42 F3 | 	fges	_var15, arg02
05b54                 | '     currPeriod[channel] #>= period
05b54     25 4D 62 FC | 	wrlong	_var15, _var14
05b58     DF 0E 86 F1 | 	sub	objptr, #223
05b5c                 | LR__0245
05b5c                 | LR__0246
05b5c                 | ' 
05b5c                 | '   ' Handle glissando if activated
05b5c                 | '   if portaGlissando[channel] > 0
05b5c     2E 31 02 F6 | 	mov	_var01, arg01
05b60     BC 0F 06 F1 | 	add	objptr, #444
05b64     07 31 02 F1 | 	add	_var01, objptr
05b68     18 35 C2 FA | 	rdbyte	_var03, _var01
05b6c     00 34 5E F2 | 	cmps	_var03, #0 wcz
05b70     BC 0F 86 F1 | 	sub	objptr, #444
05b74     A0 00 90 ED |  if_be	jmp	#LR__0249
05b78     2E 4F 02 F6 | 	mov	_var16, arg01
05b7c     02 4E 66 F0 | 	shl	_var16, #2
05b80     DF 0E 06 F1 | 	add	objptr, #223
05b84     07 4F 02 F1 | 	add	_var16, objptr
05b88                 | ' 
05b88                 | '     tempPeriod := currPeriod[channel]
05b88     27 51 02 FB | 	rdlong	_var17, _var16
05b8c                 | ' 
05b8c                 | '     repeat i from 0 to LAST_POS_IN_PERIOD_TBL
05b8c     00 52 06 F6 | 	mov	_var18, #0
05b90     DF 0E 86 F1 | 	sub	objptr, #223
05b94     CC A4 9F FE | 	loc	pa,	#(@LR__0248-@LR__0247)
05b98     93 00 A0 FD | 	call	#FCACHE_LOAD_
05b9c                 | LR__0247
05b9c     06 00 00 FF 
05ba0     A4 28 06 F1 | 	add	ptr__trackerplayer_spin2_dat__, ##3236
05ba4     14 35 02 F6 | 	mov	_var03, ptr__trackerplayer_spin2_dat__
05ba8     2E 55 02 F6 | 	mov	_var19, arg01
05bac     D3 0E 06 F1 | 	add	objptr, #211
05bb0     07 55 02 F1 | 	add	_var19, objptr
05bb4     2A 33 C2 FA | 	rdbyte	_var02, _var19
05bb8     19 57 02 F6 | 	mov	_var20, _var02
05bbc     03 56 66 F0 | 	shl	_var20, #3
05bc0     19 57 02 F1 | 	add	_var20, _var02
05bc4     03 56 66 F0 | 	shl	_var20, #3
05bc8     2B 35 02 F1 | 	add	_var03, _var20
05bcc     29 59 02 F6 | 	mov	_var21, _var18
05bd0     01 58 66 F0 | 	shl	_var21, #1
05bd4     1A 59 02 F1 | 	add	_var21, _var03
05bd8                 | ' 
05bd8                 | '       periodStep := word[@periodTable + (currFineTune[channel] * BYTES_IN_PERIOD_TABLE)][i]
05bd8     2C 5B E2 FA | 	rdword	_var22, _var21
05bdc                 | '       if tempPeriod >= periodStep
05bdc     2D 51 5A F2 | 	cmps	_var17, _var22 wcz
05be0                 | '         i += 1000
05be0     06 00 00 FF 
05be4     A4 28 86 F1 | 	sub	ptr__trackerplayer_spin2_dat__, ##3236
05be8     D3 0E 86 F1 | 	sub	objptr, #211
05bec     01 00 00 3F 
05bf0     E8 53 06 31 |  if_ae	add	_var18, ##1000
05bf4     01 52 06 F1 | 	add	_var18, #1
05bf8     24 52 5E F2 | 	cmps	_var18, #36 wcz
05bfc     9C FF 9F CD |  if_b	jmp	#LR__0247
05c00                 | LR__0248
05c00     28 5B 82 F1 | 	sub	_var22, _var17
05c04     02 5C 66 F0 | 	shl	arg01, #2
05c08     EF 0E 06 F1 | 	add	objptr, #239
05c0c     07 5D 02 F1 | 	add	arg01, objptr
05c10                 | ' 
05c10                 | '     deltaPeriod[channel] := periodStep - tempPeriod
05c10     2E 5B 62 FC | 	wrlong	_var22, arg01
05c14     EF 0E 86 F1 | 	sub	objptr, #239
05c18                 | LR__0249
05c18                 | _trackerplayer_spin2_doPortamento_ret
05c18     2D 00 64 FD | 	ret
05c1c                 | 
05c1c                 | ' 
05c1c                 | ' 
05c1c                 | ' PRI doVolumeSlide(channel)
05c1c                 | _trackerplayer_spin2_doVolumeSlide
05c1c                 | ' 
05c1c                 | '   if x > 0
05c1c     B7 0F 06 F1 | 	add	objptr, #439
05c20     07 31 C2 FA | 	rdbyte	_var01, objptr
05c24     B7 0F 86 F1 | 	sub	objptr, #439
05c28     00 30 5E F2 | 	cmps	_var01, #0 wcz
05c2c     28 00 90 ED |  if_be	jmp	#LR__0250
05c30     2E 33 02 F6 | 	mov	_var02, arg01
05c34     02 32 66 F0 | 	shl	_var02, #2
05c38     FF 0E 06 F1 | 	add	objptr, #255
05c3c     07 33 02 F1 | 	add	_var02, objptr
05c40     19 35 02 FB | 	rdlong	_var03, _var02
05c44     B8 0E 06 F1 | 	add	objptr, #184
05c48     07 37 C2 FA | 	rdbyte	_var04, objptr
05c4c     B7 0F 86 F1 | 	sub	objptr, #439
05c50     1B 35 02 F1 | 	add	_var03, _var04
05c54                 | '     currVolume[channel] += x
05c54     19 35 62 FC | 	wrlong	_var03, _var02
05c58                 | LR__0250
05c58                 | '   if y > 0
05c58     B8 0F 06 F1 | 	add	objptr, #440
05c5c     07 31 C2 FA | 	rdbyte	_var01, objptr
05c60     B8 0F 86 F1 | 	sub	objptr, #440
05c64     00 30 5E F2 | 	cmps	_var01, #0 wcz
05c68     24 00 90 ED |  if_be	jmp	#LR__0251
05c6c     02 5C 66 F0 | 	shl	arg01, #2
05c70     FF 0E 06 F1 | 	add	objptr, #255
05c74     07 5D 02 F1 | 	add	arg01, objptr
05c78     2E 39 02 FB | 	rdlong	_var05, arg01
05c7c     B9 0E 06 F1 | 	add	objptr, #185
05c80     07 37 C2 FA | 	rdbyte	_var04, objptr
05c84     B8 0F 86 F1 | 	sub	objptr, #440
05c88     1B 39 82 F1 | 	sub	_var05, _var04
05c8c                 | '     currVolume[channel] -= y
05c8c     2E 39 62 FC | 	wrlong	_var05, arg01
05c90                 | LR__0251
05c90                 | _trackerplayer_spin2_doVolumeSlide_ret
05c90     2D 00 64 FD | 	ret
05c94                 | hubexit
05c94     81 00 80 FD | 	jmp	#cogexit
05c98                 | 
05c98                 | __system___setbaud
05c98     14 0A 07 FB | 	rdlong	muldiva_, #20
05c9c     2E 0D 03 F6 | 	mov	muldivb_, arg01
05ca0     D0 00 A0 FD | 	call	#divide_
05ca4     40 7C 64 FD | 	dirl	#62
05ca8     40 7E 64 FD | 	dirl	#63
05cac     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
05cb0     10 0C 67 F0 | 	shl	muldivb_, #16
05cb4     07 5E 06 F6 | 	mov	arg02, #7
05cb8     86 5F 02 F1 | 	add	arg02, muldivb_
05cbc     3E F8 0C FC | 	wrpin	#124, #62
05cc0     3E 5E 16 FC | 	wxpin	arg02, #62
05cc4     3F 7C 0C FC | 	wrpin	#62, #63
05cc8     14 5E 06 F1 | 	add	arg02, #20
05ccc     3F 5E 16 FC | 	wxpin	arg02, #63
05cd0     41 7C 64 FD | 	dirh	#62
05cd4     41 7E 64 FD | 	dirh	#63
05cd8                 | __system___setbaud_ret
05cd8     2D 00 64 FD | 	ret
05cdc                 | 
05cdc                 | __system___txraw
05cdc     02 5A 05 F6 | 	mov	COUNT_, #2
05ce0     B0 00 A0 FD | 	call	#pushregs_
05ce4     2E 6B 02 F6 | 	mov	local01, arg01
05ce8     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
05cec     0C 00 90 5D |  if_ne	jmp	#LR__0252
05cf0     42 0F 00 FF 
05cf4     80 5C 06 F6 | 	mov	arg01, ##2000000
05cf8     9C FF BF FD | 	call	#__system___setbaud
05cfc                 | LR__0252
05cfc     3E 6A 26 FC | 	wypin	local01, #62
05d00     1F 02 64 FD | 	waitx	#1
05d04     00 A3 9F FE | 	loc	pa,	#(@LR__0254-@LR__0253)
05d08     93 00 A0 FD | 	call	#FCACHE_LOAD_
05d0c                 | LR__0253
05d0c     40 7C 74 FD | 	testp	#62 wc
05d10     F8 FF 9F 3D |  if_nc	jmp	#LR__0253
05d14                 | LR__0254
05d14     01 2A 06 F6 | 	mov	result1, #1
05d18     AF F0 03 F6 | 	mov	ptra, fp
05d1c     BF 00 A0 FD | 	call	#popregs_
05d20                 | __system___txraw_ret
05d20     2D 00 64 FD | 	ret
05d24                 | 
05d24                 | __system___rxraw
05d24     0D 5A 05 F6 | 	mov	COUNT_, #13
05d28     B0 00 A0 FD | 	call	#pushregs_
05d2c     2E 6B 02 F6 | 	mov	local01, arg01
05d30     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
05d34     0C 00 90 5D |  if_ne	jmp	#LR__0255
05d38     42 0F 00 FF 
05d3c     80 5C 06 F6 | 	mov	arg01, ##2000000
05d40     54 FF BF FD | 	call	#__system___setbaud
05d44                 | LR__0255
05d44     00 6A 0E F2 | 	cmp	local01, #0 wz
05d48     18 00 90 AD |  if_e	jmp	#LR__0256
05d4c     14 6E 06 FB | 	rdlong	local03, #20
05d50     0A 6E 46 F0 | 	shr	local03, #10
05d54     37 6B 02 FD | 	qmul	local01, local03
05d58     18 70 62 FD | 	getqx	local04
05d5c     1A 72 62 FD | 	getct	local05
05d60     38 73 02 F1 | 	add	local05, local04
05d64                 | LR__0256
05d64     01 74 66 F6 | 	neg	local06, #1
05d68     00 76 06 F6 | 	mov	local07, #0
05d6c     04 14 06 F1 | 	add	ptr___system__dat__, #4
05d70     0A 79 02 FB | 	rdlong	local08, ptr___system__dat__
05d74     04 14 86 F1 | 	sub	ptr___system__dat__, #4
05d78                 | LR__0257
05d78     08 78 16 F4 | 	testb	local08, #8 wc
05d7c     09 78 76 F4 | 	testbn	local08, #9 andc
05d80     0A 78 46 F0 | 	shr	local08, #10
05d84     01 76 06 C6 |  if_b	mov	local07, #1
05d88     10 00 90 CD |  if_b	jmp	#LR__0258
05d8c     40 7E 6C FD | 	testp	#63 wz
05d90     01 76 06 A6 |  if_e	mov	local07, #1
05d94     3F 78 8E AA |  if_e	rdpin	local08, #63
05d98     04 78 46 A0 |  if_e	shr	local08, #4
05d9c                 | LR__0258
05d9c     00 6C 06 F6 | 	mov	local02, #0
05da0     00 76 0E F2 | 	cmp	local07, #0 wz
05da4     01 6C 66 56 |  if_ne	neg	local02, #1
05da8     00 7A 06 F6 | 	mov	local09, #0
05dac     00 7C 06 F6 | 	mov	local10, #0
05db0     00 6A 0E F2 | 	cmp	local01, #0 wz
05db4     01 7C 66 56 |  if_ne	neg	local10, #1
05db8     00 7E 06 F6 | 	mov	local11, #0
05dbc     00 80 06 F6 | 	mov	local12, #0
05dc0     1A 82 62 FD | 	getct	local13
05dc4     39 83 82 F1 | 	sub	local13, local05
05dc8     00 82 5E F2 | 	cmps	local13, #0 wcz
05dcc     01 80 66 C6 |  if_b	neg	local12, #1
05dd0     00 80 0E F2 | 	cmp	local12, #0 wz
05dd4     01 7E 66 56 |  if_ne	neg	local11, #1
05dd8     3F 7D CA F7 | 	test	local10, local11 wz
05ddc     01 7A 66 56 |  if_ne	neg	local09, #1
05de0     3D 6D 4A F5 | 	or	local02, local09 wz
05de4     90 FF 9F AD |  if_e	jmp	#LR__0257
05de8     00 76 0E F2 | 	cmp	local07, #0 wz
05dec     3C 75 02 56 |  if_ne	mov	local06, local08
05df0     FF 74 06 55 |  if_ne	and	local06, #255
05df4     04 14 06 F1 | 	add	ptr___system__dat__, #4
05df8     0A 79 62 FC | 	wrlong	local08, ptr___system__dat__
05dfc     04 14 86 F1 | 	sub	ptr___system__dat__, #4
05e00     3A 2B 02 F6 | 	mov	result1, local06
05e04     AF F0 03 F6 | 	mov	ptra, fp
05e08     BF 00 A0 FD | 	call	#popregs_
05e0c                 | __system___rxraw_ret
05e0c     2D 00 64 FD | 	ret
05e10                 | 
05e10                 | __system____builtin_memmove
05e10     2E 31 02 F6 | 	mov	_var01, arg01
05e14     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
05e18     50 00 90 3D |  if_ae	jmp	#LR__0266
05e1c     00 A2 9F FE | 	loc	pa,	#(@LR__0260-@LR__0259)
05e20     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e24                 | LR__0259
05e24     03 60 5E F2 | 	cmps	arg03, #3 wcz
05e28     18 00 90 ED |  if_be	jmp	#LR__0261
05e2c     2F 33 02 FB | 	rdlong	_var02, arg02
05e30     2E 33 62 FC | 	wrlong	_var02, arg01
05e34     04 5C 06 F1 | 	add	arg01, #4
05e38     04 5E 06 F1 | 	add	arg02, #4
05e3c     04 60 86 F1 | 	sub	arg03, #4
05e40     E0 FF 9F FD | 	jmp	#LR__0259
05e44                 | LR__0260
05e44                 | LR__0261
05e44     30 35 0A F6 | 	mov	_var03, arg03 wz
05e48     4C 00 90 AD |  if_e	jmp	#LR__0272
05e4c     C4 A1 9F FE | 	loc	pa,	#(@LR__0264-@LR__0262)
05e50     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e54                 | LR__0262
05e54     1A 09 D8 FC | 	rep	@LR__0265, _var03
05e58                 | LR__0263
05e58     2F 33 C2 FA | 	rdbyte	_var02, arg02
05e5c     2E 33 42 FC | 	wrbyte	_var02, arg01
05e60     01 5C 06 F1 | 	add	arg01, #1
05e64     01 5E 06 F1 | 	add	arg02, #1
05e68                 | LR__0264
05e68                 | LR__0265
05e68     2C 00 90 FD | 	jmp	#LR__0272
05e6c                 | LR__0266
05e6c     30 5D 02 F1 | 	add	arg01, arg03
05e70     30 5F 02 F1 | 	add	arg02, arg03
05e74     30 37 0A F6 | 	mov	_var04, arg03 wz
05e78     1C 00 90 AD |  if_e	jmp	#LR__0271
05e7c     94 A1 9F FE | 	loc	pa,	#(@LR__0269-@LR__0267)
05e80     93 00 A0 FD | 	call	#FCACHE_LOAD_
05e84                 | LR__0267
05e84     1B 09 D8 FC | 	rep	@LR__0270, _var04
05e88                 | LR__0268
05e88     01 5C 86 F1 | 	sub	arg01, #1
05e8c     01 5E 86 F1 | 	sub	arg02, #1
05e90     2F 33 C2 FA | 	rdbyte	_var02, arg02
05e94     2E 33 42 FC | 	wrbyte	_var02, arg01
05e98                 | LR__0269
05e98                 | LR__0270
05e98                 | LR__0271
05e98                 | LR__0272
05e98     18 2B 02 F6 | 	mov	result1, _var01
05e9c                 | __system____builtin_memmove_ret
05e9c     2D 00 64 FD | 	ret
05ea0                 | 
05ea0                 | __system__longmove
05ea0     2E 31 02 F6 | 	mov	_var01, arg01
05ea4     2F 5D 5A F2 | 	cmps	arg01, arg02 wcz
05ea8     28 00 90 3D |  if_ae	jmp	#LR__0277
05eac     30 33 0A F6 | 	mov	_var02, arg03 wz
05eb0     54 00 90 AD |  if_e	jmp	#LR__0283
05eb4     5C A1 9F FE | 	loc	pa,	#(@LR__0275-@LR__0273)
05eb8     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ebc                 | LR__0273
05ebc     19 09 D8 FC | 	rep	@LR__0276, _var02
05ec0                 | LR__0274
05ec0     2F 35 02 FB | 	rdlong	_var03, arg02
05ec4     2E 35 62 FC | 	wrlong	_var03, arg01
05ec8     04 5C 06 F1 | 	add	arg01, #4
05ecc     04 5E 06 F1 | 	add	arg02, #4
05ed0                 | LR__0275
05ed0                 | LR__0276
05ed0     34 00 90 FD | 	jmp	#LR__0283
05ed4                 | LR__0277
05ed4     30 37 02 F6 | 	mov	_var04, arg03
05ed8     02 36 66 F0 | 	shl	_var04, #2
05edc     1B 5D 02 F1 | 	add	arg01, _var04
05ee0     1B 5F 02 F1 | 	add	arg02, _var04
05ee4     30 39 0A F6 | 	mov	_var05, arg03 wz
05ee8     1C 00 90 AD |  if_e	jmp	#LR__0282
05eec     24 A1 9F FE | 	loc	pa,	#(@LR__0280-@LR__0278)
05ef0     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ef4                 | LR__0278
05ef4     1C 09 D8 FC | 	rep	@LR__0281, _var05
05ef8                 | LR__0279
05ef8     04 5C 86 F1 | 	sub	arg01, #4
05efc     04 5E 86 F1 | 	sub	arg02, #4
05f00     2F 35 02 FB | 	rdlong	_var03, arg02
05f04     2E 35 62 FC | 	wrlong	_var03, arg01
05f08                 | LR__0280
05f08                 | LR__0281
05f08                 | LR__0282
05f08                 | LR__0283
05f08     18 2B 02 F6 | 	mov	result1, _var01
05f0c                 | __system__longmove_ret
05f0c     2D 00 64 FD | 	ret
05f10                 | 
05f10                 | __system____topofstack
05f10     00 5A 05 F6 | 	mov	COUNT_, #0
05f14     B0 00 A0 FD | 	call	#pushregs_
05f18     0C F0 07 F1 | 	add	ptra, #12
05f1c     04 5E 05 F1 | 	add	fp, #4
05f20     AF 5C 62 FC | 	wrlong	arg01, fp
05f24     AF 2A 02 F6 | 	mov	result1, fp
05f28     04 5E 85 F1 | 	sub	fp, #4
05f2c     AF F0 03 F6 | 	mov	ptra, fp
05f30     BF 00 A0 FD | 	call	#popregs_
05f34                 | __system____topofstack_ret
05f34     2D 00 64 FD | 	ret
05f38                 | 
05f38                 | __system___make_methodptr
05f38     04 5A 05 F6 | 	mov	COUNT_, #4
05f3c     B0 00 A0 FD | 	call	#pushregs_
05f40     2E 6B 02 F6 | 	mov	local01, arg01
05f44     2F 6D 02 F6 | 	mov	local02, arg02
05f48     08 5C 06 F6 | 	mov	arg01, #8
05f4c     5C 0C B0 FD | 	call	#__system___gc_alloc_managed
05f50     15 6F 0A F6 | 	mov	local03, result1 wz
05f54     10 00 90 AD |  if_e	jmp	#LR__0284
05f58     37 6B 62 FC | 	wrlong	local01, local03
05f5c     37 71 02 F6 | 	mov	local04, local03
05f60     04 70 06 F1 | 	add	local04, #4
05f64     38 6D 62 FC | 	wrlong	local02, local04
05f68                 | LR__0284
05f68     37 2B 02 F6 | 	mov	result1, local03
05f6c     AF F0 03 F6 | 	mov	ptra, fp
05f70     BF 00 A0 FD | 	call	#popregs_
05f74                 | __system___make_methodptr_ret
05f74     2D 00 64 FD | 	ret
05f78                 | 
05f78                 | __system___lockmem
05f78     02 5A 05 F6 | 	mov	COUNT_, #2
05f7c     B0 00 A0 FD | 	call	#pushregs_
05f80     01 2A 62 FD | 	cogid	result1
05f84     15 6B 02 F6 | 	mov	local01, result1
05f88     00 6B 06 F1 | 	add	local01, #256
05f8c                 | LR__0285
05f8c     2E 6D 0A FB | 	rdlong	local02, arg01 wz
05f90     2E 6B 62 AC |  if_e	wrlong	local01, arg01
05f94     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05f98     2E 6D 02 AB |  if_e	rdlong	local02, arg01
05f9c     35 6D 0A F2 | 	cmp	local02, local01 wz
05fa0     E8 FF 9F 5D |  if_ne	jmp	#LR__0285
05fa4     AF F0 03 F6 | 	mov	ptra, fp
05fa8     BF 00 A0 FD | 	call	#popregs_
05fac                 | __system___lockmem_ret
05fac     2D 00 64 FD | 	ret
05fb0                 | 
05fb0                 | __system___string_concat
05fb0     07 5A 05 F6 | 	mov	COUNT_, #7
05fb4     B0 00 A0 FD | 	call	#pushregs_
05fb8     2E 6B 02 F6 | 	mov	local01, arg01
05fbc     2F 6D 02 F6 | 	mov	local02, arg02
05fc0     35 5D 02 F6 | 	mov	arg01, local01
05fc4     00 6E 06 F6 | 	mov	local03, #0
05fc8     44 A0 9F FE | 	loc	pa,	#(@LR__0287-@LR__0286)
05fcc     93 00 A0 FD | 	call	#FCACHE_LOAD_
05fd0                 | LR__0286
05fd0     2E 71 CA FA | 	rdbyte	local04, arg01 wz
05fd4     01 6E 06 51 |  if_ne	add	local03, #1
05fd8     01 5C 06 51 |  if_ne	add	arg01, #1
05fdc     F0 FF 9F 5D |  if_ne	jmp	#LR__0286
05fe0                 | LR__0287
05fe0     37 73 02 F6 | 	mov	local05, local03
05fe4     36 5D 02 F6 | 	mov	arg01, local02
05fe8     00 6E 06 F6 | 	mov	local03, #0
05fec     20 A0 9F FE | 	loc	pa,	#(@LR__0289-@LR__0288)
05ff0     93 00 A0 FD | 	call	#FCACHE_LOAD_
05ff4                 | LR__0288
05ff4     2E 71 CA FA | 	rdbyte	local04, arg01 wz
05ff8     01 6E 06 51 |  if_ne	add	local03, #1
05ffc     01 5C 06 51 |  if_ne	add	arg01, #1
06000     F0 FF 9F 5D |  if_ne	jmp	#LR__0288
06004                 | LR__0289
06004     37 2B 02 F6 | 	mov	result1, local03
06008     15 75 02 F6 | 	mov	local06, result1
0600c     39 5D 02 F6 | 	mov	arg01, local05
06010     3A 5D 02 F1 | 	add	arg01, local06
06014     01 5C 06 F1 | 	add	arg01, #1
06018     90 0B B0 FD | 	call	#__system___gc_alloc_managed
0601c     15 77 0A F6 | 	mov	local07, result1 wz
06020     28 00 90 AD |  if_e	jmp	#LR__0290
06024     3B 5D 02 F6 | 	mov	arg01, local07
06028     35 5F 02 F6 | 	mov	arg02, local01
0602c     39 61 02 F6 | 	mov	arg03, local05
06030     DC FD BF FD | 	call	#__system____builtin_memmove
06034     3B 5D 02 F6 | 	mov	arg01, local07
06038     39 5D 02 F1 | 	add	arg01, local05
0603c     01 74 06 F1 | 	add	local06, #1
06040     36 5F 02 F6 | 	mov	arg02, local02
06044     3A 61 02 F6 | 	mov	arg03, local06
06048     C4 FD BF FD | 	call	#__system____builtin_memmove
0604c                 | LR__0290
0604c     3B 2B 02 F6 | 	mov	result1, local07
06050     AF F0 03 F6 | 	mov	ptra, fp
06054     BF 00 A0 FD | 	call	#popregs_
06058                 | __system___string_concat_ret
06058     2D 00 64 FD | 	ret
0605c                 | 
0605c                 | __system___tx
0605c     02 5A 05 F6 | 	mov	COUNT_, #2
06060     B0 00 A0 FD | 	call	#pushregs_
06064     2E 6B 02 F6 | 	mov	local01, arg01
06068     0A 6A 0E F2 | 	cmp	local01, #10 wz
0606c     20 00 90 5D |  if_ne	jmp	#LR__0291
06070     08 14 06 F1 | 	add	ptr___system__dat__, #8
06074     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
06078     08 14 86 F1 | 	sub	ptr___system__dat__, #8
0607c     02 6C CE F7 | 	test	local02, #2 wz
06080     0C 00 90 AD |  if_e	jmp	#LR__0291
06084     0D 6C 06 F6 | 	mov	local02, #13
06088     0D 5C 06 F6 | 	mov	arg01, #13
0608c     4C FC BF FD | 	call	#__system___txraw
06090                 | LR__0291
06090     35 5D 02 F6 | 	mov	arg01, local01
06094     44 FC BF FD | 	call	#__system___txraw
06098     AF F0 03 F6 | 	mov	ptra, fp
0609c     BF 00 A0 FD | 	call	#popregs_
060a0                 | __system___tx_ret
060a0     2D 00 64 FD | 	ret
060a4                 | 
060a4                 | __system___rx
060a4     02 5A 05 F6 | 	mov	COUNT_, #2
060a8     B0 00 A0 FD | 	call	#pushregs_
060ac                 | LR__0292
060ac     00 5C 06 F6 | 	mov	arg01, #0
060b0     70 FC BF FD | 	call	#__system___rxraw
060b4     15 6B 02 F6 | 	mov	local01, result1
060b8     FF FF 7F FF 
060bc     FF 6B 0E F2 | 	cmp	local01, ##-1 wz
060c0     E8 FF 9F AD |  if_e	jmp	#LR__0292
060c4     0D 6A 0E F2 | 	cmp	local01, #13 wz
060c8     14 00 90 5D |  if_ne	jmp	#LR__0293
060cc     08 14 06 F1 | 	add	ptr___system__dat__, #8
060d0     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
060d4     08 14 86 F1 | 	sub	ptr___system__dat__, #8
060d8     02 6C CE F7 | 	test	local02, #2 wz
060dc     0A 6A 06 56 |  if_ne	mov	local01, #10
060e0                 | LR__0293
060e0     08 14 06 F1 | 	add	ptr___system__dat__, #8
060e4     0A 6D 02 FB | 	rdlong	local02, ptr___system__dat__
060e8     08 14 86 F1 | 	sub	ptr___system__dat__, #8
060ec     01 6C CE F7 | 	test	local02, #1 wz
060f0     1C 00 90 AD |  if_e	jmp	#LR__0296
060f4     7F 6A 0E F2 | 	cmp	local01, #127 wz
060f8     0C 00 90 5D |  if_ne	jmp	#LR__0294
060fc     08 5C 06 F6 | 	mov	arg01, #8
06100     58 FF BF FD | 	call	#__system___tx
06104     08 00 90 FD | 	jmp	#LR__0295
06108                 | LR__0294
06108     35 5D 02 F6 | 	mov	arg01, local01
0610c     4C FF BF FD | 	call	#__system___tx
06110                 | LR__0295
06110                 | LR__0296
06110     35 2B 02 F6 | 	mov	result1, local01
06114     AF F0 03 F6 | 	mov	ptra, fp
06118     BF 00 A0 FD | 	call	#popregs_
0611c                 | __system___rx_ret
0611c     2D 00 64 FD | 	ret
06120                 | 
06120                 | __system___pinread
06120     20 5C CE F7 | 	test	arg01, #32 wz
06124     FF 31 02 56 |  if_ne	mov	_var01, inb
06128     FE 31 02 A6 |  if_e	mov	_var01, ina
0612c     18 2B 02 F6 | 	mov	result1, _var01
06130     2E 2B 42 F0 | 	shr	result1, arg01
06134     06 5C 46 F0 | 	shr	arg01, #6
06138     2E 2B 42 F7 | 	zerox	result1, arg01
0613c                 | __system___pinread_ret
0613c     2D 00 64 FD | 	ret
06140                 | 
06140                 | __system___waitms
06140     03 5A 05 F6 | 	mov	COUNT_, #3
06144     B0 00 A0 FD | 	call	#pushregs_
06148     2E 6B 02 F6 | 	mov	local01, arg01
0614c     14 6C 06 FB | 	rdlong	local02, #20
06150     C4 9E 9F FE | 	loc	pa,	#(@LR__0298-@LR__0297)
06154     93 00 A0 FD | 	call	#FCACHE_LOAD_
06158                 | LR__0297
06158     01 00 00 FF 
0615c     E8 6B 5E F2 | 	cmps	local01, ##1000 wcz
06160     1F 6C 62 1D |  if_a	waitx	local02
06164     01 00 00 1F 
06168     E8 6B 86 11 |  if_a	sub	local01, ##1000
0616c     E8 FF 9F 1D |  if_a	jmp	#LR__0297
06170                 | LR__0298
06170     0C 14 06 F1 | 	add	ptr___system__dat__, #12
06174     0A 6F 0A FB | 	rdlong	local03, ptr___system__dat__ wz
06178     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
0617c     20 00 90 5D |  if_ne	jmp	#LR__0299
06180     36 0B 03 F6 | 	mov	muldiva_, local02
06184     01 00 00 FF 
06188     E8 0D 07 F6 | 	mov	muldivb_, ##1000
0618c     CC 00 A0 FD | 	call	#unsdivide_
06190     86 6F 02 F6 | 	mov	local03, muldivb_
06194     0C 14 06 F1 | 	add	ptr___system__dat__, #12
06198     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
0619c     0C 14 86 F1 | 	sub	ptr___system__dat__, #12
061a0                 | LR__0299
061a0     00 6A 5E F2 | 	cmps	local01, #0 wcz
061a4     37 6B 02 1D |  if_a	qmul	local01, local03
061a8     18 5C 62 1D |  if_a	getqx	arg01
061ac     1F 5C 62 1D |  if_a	waitx	arg01
061b0     AF F0 03 F6 | 	mov	ptra, fp
061b4     BF 00 A0 FD | 	call	#popregs_
061b8                 | __system___waitms_ret
061b8     2D 00 64 FD | 	ret
061bc                 | 
061bc                 | __system___waitus
061bc     02 5A 05 F6 | 	mov	COUNT_, #2
061c0     B0 00 A0 FD | 	call	#pushregs_
061c4     2E 6B 02 F6 | 	mov	local01, arg01
061c8     10 14 06 F1 | 	add	ptr___system__dat__, #16
061cc     0A 6D 0A FB | 	rdlong	local02, ptr___system__dat__ wz
061d0     10 14 86 F1 | 	sub	ptr___system__dat__, #16
061d4     20 00 90 5D |  if_ne	jmp	#LR__0300
061d8     14 0A 07 FB | 	rdlong	muldiva_, #20
061dc     A1 07 00 FF 
061e0     40 0C 07 F6 | 	mov	muldivb_, ##1000000
061e4     CC 00 A0 FD | 	call	#unsdivide_
061e8     86 6D 02 F6 | 	mov	local02, muldivb_
061ec     10 14 06 F1 | 	add	ptr___system__dat__, #16
061f0     0A 0D 63 FC | 	wrlong	muldivb_, ptr___system__dat__
061f4     10 14 86 F1 | 	sub	ptr___system__dat__, #16
061f8                 | LR__0300
061f8     36 6B 02 FD | 	qmul	local01, local02
061fc     18 5C 62 FD | 	getqx	arg01
06200     1F 5C 62 FD | 	waitx	arg01
06204     AF F0 03 F6 | 	mov	ptra, fp
06208     BF 00 A0 FD | 	call	#popregs_
0620c                 | __system___waitus_ret
0620c     2D 00 64 FD | 	ret
06210                 | 
06210                 | __system___basic_open
06210     05 5A 05 F6 | 	mov	COUNT_, #5
06214     B0 00 A0 FD | 	call	#pushregs_
06218     2F 6B 02 F6 | 	mov	local01, arg02
0621c     30 6D 02 F6 | 	mov	local02, arg03
06220     31 6F 02 F6 | 	mov	local03, arg04
06224     88 11 B0 FD | 	call	#__system____getftab
06228     15 71 0A F6 | 	mov	local04, result1 wz
0622c     18 00 90 5D |  if_ne	jmp	#LR__0301
06230     03 5D 02 F6 | 	mov	arg01, abortchain
06234     0C 5E 06 F6 | 	mov	arg02, #12
06238     01 60 06 F6 | 	mov	arg03, #1
0623c     F0 00 A0 FD | 	call	#__longjmp
06240     01 2A 66 F6 | 	neg	result1, #1
06244     70 00 90 FD | 	jmp	#LR__0305
06248                 | LR__0301
06248     00 6A 0E F2 | 	cmp	local01, #0 wz
0624c     48 00 90 AD |  if_e	jmp	#LR__0303
06250     04 5C 06 F6 | 	mov	arg01, #4
06254     54 09 B0 FD | 	call	#__system___gc_alloc_managed
06258     15 73 0A F6 | 	mov	local05, result1 wz
0625c     18 00 90 5D |  if_ne	jmp	#LR__0302
06260     03 5D 02 F6 | 	mov	arg01, abortchain
06264     07 5E 06 F6 | 	mov	arg02, #7
06268     01 60 06 F6 | 	mov	arg03, #1
0626c     F0 00 A0 FD | 	call	#__longjmp
06270     01 2A 66 F6 | 	neg	result1, #1
06274     40 00 90 FD | 	jmp	#LR__0305
06278                 | LR__0302
06278     39 6B 62 FC | 	wrlong	local01, local05
0627c     08 5F 02 F6 | 	mov	arg02, ptr___struct___bas_wrap_sender_tx_
06280     39 5D 02 F6 | 	mov	arg01, local05
06284     B0 FC BF FD | 	call	#__system___make_methodptr
06288     18 70 06 F1 | 	add	local04, #24
0628c     38 2B 62 FC | 	wrlong	result1, local04
06290     18 70 86 F1 | 	sub	local04, #24
06294     0C 00 90 FD | 	jmp	#LR__0304
06298                 | LR__0303
06298     18 70 06 F1 | 	add	local04, #24
0629c     38 6B 62 FC | 	wrlong	local01, local04
062a0     18 70 86 F1 | 	sub	local04, #24
062a4                 | LR__0304
062a4     1C 70 06 F1 | 	add	local04, #28
062a8     38 6D 62 FC | 	wrlong	local02, local04
062ac     04 70 06 F1 | 	add	local04, #4
062b0     38 6F 62 FC | 	wrlong	local03, local04
062b4     00 2A 06 F6 | 	mov	result1, #0
062b8                 | LR__0305
062b8     AF F0 03 F6 | 	mov	ptra, fp
062bc     BF 00 A0 FD | 	call	#popregs_
062c0                 | __system___basic_open_ret
062c0     2D 00 64 FD | 	ret
062c4                 | 
062c4                 | __system___basic_print_char
062c4     05 5A 05 F6 | 	mov	COUNT_, #5
062c8     B0 00 A0 FD | 	call	#pushregs_
062cc     2F 6B 02 F6 | 	mov	local01, arg02
062d0     A0 12 B0 FD | 	call	#__system___gettxfunc
062d4     15 6D 0A F6 | 	mov	local02, result1 wz
062d8     00 2A 06 A6 |  if_e	mov	result1, #0
062dc     24 00 90 AD |  if_e	jmp	#LR__0306
062e0     36 6F 02 FB | 	rdlong	local03, local02
062e4     04 6C 06 F1 | 	add	local02, #4
062e8     36 71 02 FB | 	rdlong	local04, local02
062ec     35 5D 02 F6 | 	mov	arg01, local01
062f0     07 73 02 F6 | 	mov	local05, objptr
062f4     37 0F 02 F6 | 	mov	objptr, local03
062f8     2D 70 62 FD | 	call	local04
062fc     39 0F 02 F6 | 	mov	objptr, local05
06300     01 2A 06 F6 | 	mov	result1, #1
06304                 | LR__0306
06304     AF F0 03 F6 | 	mov	ptra, fp
06308     BF 00 A0 FD | 	call	#popregs_
0630c                 | __system___basic_print_char_ret
0630c     2D 00 64 FD | 	ret
06310                 | 
06310                 | __system___basic_print_string
06310     03 5A 05 F6 | 	mov	COUNT_, #3
06314     B0 00 A0 FD | 	call	#pushregs_
06318     2F 6B 02 F6 | 	mov	local01, arg02
0631c     30 6D 02 F6 | 	mov	local02, arg03
06320     50 12 B0 FD | 	call	#__system___gettxfunc
06324     15 6F 0A F6 | 	mov	local03, result1 wz
06328     00 2A 06 A6 |  if_e	mov	result1, #0
0632c     1C 00 90 AD |  if_e	jmp	#LR__0307
06330     00 6A 0E F2 | 	cmp	local01, #0 wz
06334     00 2A 06 A6 |  if_e	mov	result1, #0
06338     10 00 90 AD |  if_e	jmp	#LR__0307
0633c     37 5D 02 F6 | 	mov	arg01, local03
06340     36 5F 02 F6 | 	mov	arg02, local02
06344     35 61 02 F6 | 	mov	arg03, local01
06348     B0 00 B0 FD | 	call	#__system___fmtstr
0634c                 | LR__0307
0634c     AF F0 03 F6 | 	mov	ptra, fp
06350     BF 00 A0 FD | 	call	#popregs_
06354                 | __system___basic_print_string_ret
06354     2D 00 64 FD | 	ret
06358                 | 
06358                 | __system___basic_print_integer
06358     04 5A 05 F6 | 	mov	COUNT_, #4
0635c     B0 00 A0 FD | 	call	#pushregs_
06360     2F 6B 02 F6 | 	mov	local01, arg02
06364     30 6D 02 F6 | 	mov	local02, arg03
06368     31 6F 02 F6 | 	mov	local03, arg04
0636c     04 12 B0 FD | 	call	#__system___gettxfunc
06370     15 71 0A F6 | 	mov	local04, result1 wz
06374     00 2A 06 A6 |  if_e	mov	result1, #0
06378     14 00 90 AD |  if_e	jmp	#LR__0308
0637c     38 5D 02 F6 | 	mov	arg01, local04
06380     36 5F 02 F6 | 	mov	arg02, local02
06384     35 61 02 F6 | 	mov	arg03, local01
06388     37 63 02 F6 | 	mov	arg04, local03
0638c     60 01 B0 FD | 	call	#__system___fmtnum
06390                 | LR__0308
06390     AF F0 03 F6 | 	mov	ptra, fp
06394     BF 00 A0 FD | 	call	#popregs_
06398                 | __system___basic_print_integer_ret
06398     2D 00 64 FD | 	ret
0639c                 | 
0639c                 | __system___fmtchar
0639c     00 5A 05 F6 | 	mov	COUNT_, #0
063a0     B0 00 A0 FD | 	call	#pushregs_
063a4     18 F0 07 F1 | 	add	ptra, #24
063a8     04 5E 05 F1 | 	add	fp, #4
063ac     AF 5C 62 FC | 	wrlong	arg01, fp
063b0     04 5E 05 F1 | 	add	fp, #4
063b4     AF 5E 62 FC | 	wrlong	arg02, fp
063b8     04 5E 05 F1 | 	add	fp, #4
063bc     AF 60 62 FC | 	wrlong	arg03, fp
063c0     04 5E 05 F1 | 	add	fp, #4
063c4     AF 60 42 FC | 	wrbyte	arg03, fp
063c8     01 5E 05 F1 | 	add	fp, #1
063cc     AF 00 48 FC | 	wrbyte	#0, fp
063d0     01 5E 85 F1 | 	sub	fp, #1
063d4     AF 60 02 F6 | 	mov	arg03, fp
063d8     0C 5E 85 F1 | 	sub	fp, #12
063dc     AF 5C 02 FB | 	rdlong	arg01, fp
063e0     04 5E 05 F1 | 	add	fp, #4
063e4     AF 5E 02 FB | 	rdlong	arg02, fp
063e8     08 5E 85 F1 | 	sub	fp, #8
063ec     0C 00 B0 FD | 	call	#__system___fmtstr
063f0     AF F0 03 F6 | 	mov	ptra, fp
063f4     BF 00 A0 FD | 	call	#popregs_
063f8                 | __system___fmtchar_ret
063f8     2D 00 64 FD | 	ret
063fc                 | 
063fc                 | __system___fmtstr
063fc     0E 5A 05 F6 | 	mov	COUNT_, #14
06400     B0 00 A0 FD | 	call	#pushregs_
06404     2E 6B 02 F6 | 	mov	local01, arg01
06408     2F 6D 02 F6 | 	mov	local02, arg02
0640c     30 6F 02 F6 | 	mov	local03, arg03
06410     36 71 02 F6 | 	mov	local04, local02
06414     FF 70 06 F5 | 	and	local04, #255
06418     37 5D 02 F6 | 	mov	arg01, local03
0641c     00 72 06 F6 | 	mov	local05, #0
06420     EC 9B 9F FE | 	loc	pa,	#(@LR__0310-@LR__0309)
06424     93 00 A0 FD | 	call	#FCACHE_LOAD_
06428                 | LR__0309
06428     2E 75 CA FA | 	rdbyte	local06, arg01 wz
0642c     01 72 06 51 |  if_ne	add	local05, #1
06430     01 5C 06 51 |  if_ne	add	arg01, #1
06434     F0 FF 9F 5D |  if_ne	jmp	#LR__0309
06438                 | LR__0310
06438     39 2B 02 F6 | 	mov	result1, local05
0643c     15 77 02 F6 | 	mov	local07, result1
06440     00 70 0E F2 | 	cmp	local04, #0 wz
06444     04 00 90 AD |  if_e	jmp	#LR__0311
06448     38 77 7A F3 | 	fles	local07, local04 wcz
0644c                 | LR__0311
0644c     35 5D 02 F6 | 	mov	arg01, local01
06450     36 5F 02 F6 | 	mov	arg02, local02
06454     3B 61 02 F6 | 	mov	arg03, local07
06458     02 62 06 F6 | 	mov	arg04, #2
0645c     C8 0F B0 FD | 	call	#__system___fmtpad
06460     15 79 02 F6 | 	mov	local08, result1
06464     00 78 5E F2 | 	cmps	local08, #0 wcz
06468     3C 2B 02 C6 |  if_b	mov	result1, local08
0646c     74 00 90 CD |  if_b	jmp	#LR__0314
06470     00 76 5E F2 | 	cmps	local07, #0 wcz
06474     44 00 90 ED |  if_be	jmp	#LR__0313
06478     3B 7B 02 F6 | 	mov	local09, local07
0647c                 | LR__0312
0647c     35 7D 02 F6 | 	mov	local10, local01
06480     3E 7F 02 FB | 	rdlong	local11, local10
06484     04 7C 06 F1 | 	add	local10, #4
06488     3E 81 02 FB | 	rdlong	local12, local10
0648c     37 5D C2 FA | 	rdbyte	arg01, local03
06490     07 83 02 F6 | 	mov	local13, objptr
06494     3F 0F 02 F6 | 	mov	objptr, local11
06498     01 6E 06 F1 | 	add	local03, #1
0649c     2D 80 62 FD | 	call	local12
064a0     41 0F 02 F6 | 	mov	objptr, local13
064a4     15 85 02 F6 | 	mov	local14, result1
064a8     00 84 5E F2 | 	cmps	local14, #0 wcz
064ac     42 2B 02 C6 |  if_b	mov	result1, local14
064b0     30 00 90 CD |  if_b	jmp	#LR__0314
064b4     42 79 02 F1 | 	add	local08, local14
064b8     F0 7B 6E FB | 	djnz	local09, #LR__0312
064bc                 | LR__0313
064bc     35 5D 02 F6 | 	mov	arg01, local01
064c0     36 5F 02 F6 | 	mov	arg02, local02
064c4     3B 61 02 F6 | 	mov	arg03, local07
064c8     01 62 06 F6 | 	mov	arg04, #1
064cc     58 0F B0 FD | 	call	#__system___fmtpad
064d0     15 85 02 F6 | 	mov	local14, result1
064d4     00 84 5E F2 | 	cmps	local14, #0 wcz
064d8     42 2B 02 C6 |  if_b	mov	result1, local14
064dc     42 79 02 31 |  if_ae	add	local08, local14
064e0     3C 2B 02 36 |  if_ae	mov	result1, local08
064e4                 | LR__0314
064e4     AF F0 03 F6 | 	mov	ptra, fp
064e8     BF 00 A0 FD | 	call	#popregs_
064ec                 | __system___fmtstr_ret
064ec     2D 00 64 FD | 	ret
064f0                 | 
064f0                 | __system___fmtnum
064f0     07 5A 05 F6 | 	mov	COUNT_, #7
064f4     B0 00 A0 FD | 	call	#pushregs_
064f8     78 F0 07 F1 | 	add	ptra, #120
064fc     04 5E 05 F1 | 	add	fp, #4
06500     AF 5C 62 FC | 	wrlong	arg01, fp
06504     04 5E 05 F1 | 	add	fp, #4
06508     AF 5E 62 FC | 	wrlong	arg02, fp
0650c     04 5E 05 F1 | 	add	fp, #4
06510     AF 60 62 FC | 	wrlong	arg03, fp
06514     04 5E 05 F1 | 	add	fp, #4
06518     AF 62 62 FC | 	wrlong	arg04, fp
0651c     04 5E 05 F1 | 	add	fp, #4
06520     AF 6A 02 F6 | 	mov	local01, fp
06524     44 5E 05 F1 | 	add	fp, #68
06528     AF 6A 62 FC | 	wrlong	local01, fp
0652c     04 5E 05 F1 | 	add	fp, #4
06530     AF 00 68 FC | 	wrlong	#0, fp
06534     54 5E 85 F1 | 	sub	fp, #84
06538     AF 6A 02 FB | 	rdlong	local01, fp
0653c     10 6A 46 F0 | 	shr	local01, #16
06540     3F 6A 06 F5 | 	and	local01, #63
06544     58 5E 05 F1 | 	add	fp, #88
06548     AF 6A 62 FC | 	wrlong	local01, fp
0654c     58 5E 85 F1 | 	sub	fp, #88
06550     AF 6A 02 FB | 	rdlong	local01, fp
06554     FF 6A 06 F5 | 	and	local01, #255
06558     5C 5E 05 F1 | 	add	fp, #92
0655c     AF 6A 62 FC | 	wrlong	local01, fp
06560     5C 5E 85 F1 | 	sub	fp, #92
06564     AF 6A 02 FB | 	rdlong	local01, fp
06568     1A 6A 46 F0 | 	shr	local01, #26
0656c     03 6A 06 F5 | 	and	local01, #3
06570     60 5E 05 F1 | 	add	fp, #96
06574     AF 6A 62 FC | 	wrlong	local01, fp
06578     08 5E 85 F1 | 	sub	fp, #8
0657c     AF 6A 02 FB | 	rdlong	local01, fp
06580     60 5E 85 F1 | 	sub	fp, #96
06584     00 6A 5E F2 | 	cmps	local01, #0 wcz
06588     14 00 90 ED |  if_be	jmp	#LR__0315
0658c     60 5E 05 F1 | 	add	fp, #96
06590     AF 6A 02 FB | 	rdlong	local01, fp
06594     01 6A 86 F1 | 	sub	local01, #1
06598     AF 6A 62 FC | 	wrlong	local01, fp
0659c     60 5E 85 F1 | 	sub	fp, #96
065a0                 | LR__0315
065a0     64 5E 05 F1 | 	add	fp, #100
065a4     AF 6C 02 FB | 	rdlong	local02, fp
065a8     64 5E 85 F1 | 	sub	fp, #100
065ac     40 6C 5E F2 | 	cmps	local02, #64 wcz
065b0     14 00 90 1D |  if_a	jmp	#LR__0316
065b4     64 5E 05 F1 | 	add	fp, #100
065b8     AF 6E 02 FB | 	rdlong	local03, fp
065bc     64 5E 85 F1 | 	sub	fp, #100
065c0     37 71 0A F6 | 	mov	local04, local03 wz
065c4     0C 00 90 5D |  if_ne	jmp	#LR__0317
065c8                 | LR__0316
065c8     64 5E 05 F1 | 	add	fp, #100
065cc     AF 80 68 FC | 	wrlong	#64, fp
065d0     64 5E 85 F1 | 	sub	fp, #100
065d4                 | LR__0317
065d4     68 5E 05 F1 | 	add	fp, #104
065d8     AF 6A 02 FB | 	rdlong	local01, fp
065dc     68 5E 85 F1 | 	sub	fp, #104
065e0     03 6A 0E F2 | 	cmp	local01, #3 wz
065e4     10 00 90 5D |  if_ne	jmp	#LR__0318
065e8     68 5E 05 F1 | 	add	fp, #104
065ec     AF 00 68 FC | 	wrlong	#0, fp
065f0     68 5E 85 F1 | 	sub	fp, #104
065f4     30 00 90 FD | 	jmp	#LR__0320
065f8                 | LR__0318
065f8     0C 5E 05 F1 | 	add	fp, #12
065fc     AF 6A 02 FB | 	rdlong	local01, fp
06600     0C 5E 85 F1 | 	sub	fp, #12
06604     00 6A 5E F2 | 	cmps	local01, #0 wcz
06608     1C 00 90 3D |  if_ae	jmp	#LR__0319
0660c     68 5E 05 F1 | 	add	fp, #104
06610     AF 08 68 FC | 	wrlong	#4, fp
06614     5C 5E 85 F1 | 	sub	fp, #92
06618     AF 6A 02 FB | 	rdlong	local01, fp
0661c     35 6B 62 F6 | 	neg	local01, local01
06620     AF 6A 62 FC | 	wrlong	local01, fp
06624     0C 5E 85 F1 | 	sub	fp, #12
06628                 | LR__0319
06628                 | LR__0320
06628     68 5E 05 F1 | 	add	fp, #104
0662c     AF 6A 0A FB | 	rdlong	local01, fp wz
06630     68 5E 85 F1 | 	sub	fp, #104
06634     EC 00 90 AD |  if_e	jmp	#LR__0327
06638     5C 5E 05 F1 | 	add	fp, #92
0663c     AF 70 02 FB | 	rdlong	local04, fp
06640     01 70 06 F1 | 	add	local04, #1
06644     AF 70 62 FC | 	wrlong	local04, fp
06648     04 5E 05 F1 | 	add	fp, #4
0664c     AF 6A 02 FB | 	rdlong	local01, fp
06650     04 5E 05 F1 | 	add	fp, #4
06654     AF 70 02 FB | 	rdlong	local04, fp
06658     64 5E 85 F1 | 	sub	fp, #100
0665c     38 6B 0A F2 | 	cmp	local01, local04 wz
06660     3C 00 90 5D |  if_ne	jmp	#LR__0322
06664     60 5E 05 F1 | 	add	fp, #96
06668     AF 70 02 FB | 	rdlong	local04, fp
0666c     01 70 86 F1 | 	sub	local04, #1
06670     AF 70 62 FC | 	wrlong	local04, fp
06674     AF 6A 0A FB | 	rdlong	local01, fp wz
06678     60 5E 85 F1 | 	sub	fp, #96
0667c     20 00 90 5D |  if_ne	jmp	#LR__0321
06680     04 5E 05 F1 | 	add	fp, #4
06684     AF 5C 02 FB | 	rdlong	arg01, fp
06688     04 5E 05 F1 | 	add	fp, #4
0668c     AF 5E 02 FB | 	rdlong	arg02, fp
06690     08 5E 85 F1 | 	sub	fp, #8
06694     23 60 06 F6 | 	mov	arg03, #35
06698     00 FD BF FD | 	call	#__system___fmtchar
0669c     70 01 90 FD | 	jmp	#LR__0332
066a0                 | LR__0321
066a0                 | LR__0322
066a0     68 5E 05 F1 | 	add	fp, #104
066a4     AF 6A 02 FB | 	rdlong	local01, fp
066a8     68 5E 85 F1 | 	sub	fp, #104
066ac     02 6A 0E F2 | 	cmp	local01, #2 wz
066b0     20 00 90 5D |  if_ne	jmp	#LR__0323
066b4     58 5E 05 F1 | 	add	fp, #88
066b8     AF 6A 02 FB | 	rdlong	local01, fp
066bc     35 71 02 F6 | 	mov	local04, local01
066c0     01 70 06 F1 | 	add	local04, #1
066c4     AF 70 62 FC | 	wrlong	local04, fp
066c8     58 5E 85 F1 | 	sub	fp, #88
066cc     35 41 48 FC | 	wrbyte	#32, local01
066d0     50 00 90 FD | 	jmp	#LR__0326
066d4                 | LR__0323
066d4     68 5E 05 F1 | 	add	fp, #104
066d8     AF 6A 02 FB | 	rdlong	local01, fp
066dc     68 5E 85 F1 | 	sub	fp, #104
066e0     04 6A 0E F2 | 	cmp	local01, #4 wz
066e4     20 00 90 5D |  if_ne	jmp	#LR__0324
066e8     58 5E 05 F1 | 	add	fp, #88
066ec     AF 6A 02 FB | 	rdlong	local01, fp
066f0     35 71 02 F6 | 	mov	local04, local01
066f4     01 70 06 F1 | 	add	local04, #1
066f8     AF 70 62 FC | 	wrlong	local04, fp
066fc     58 5E 85 F1 | 	sub	fp, #88
06700     35 5B 48 FC | 	wrbyte	#45, local01
06704     1C 00 90 FD | 	jmp	#LR__0325
06708                 | LR__0324
06708     58 5E 05 F1 | 	add	fp, #88
0670c     AF 6A 02 FB | 	rdlong	local01, fp
06710     35 71 02 F6 | 	mov	local04, local01
06714     01 70 06 F1 | 	add	local04, #1
06718     AF 70 62 FC | 	wrlong	local04, fp
0671c     58 5E 85 F1 | 	sub	fp, #88
06720     35 57 48 FC | 	wrbyte	#43, local01
06724                 | LR__0325
06724                 | LR__0326
06724                 | LR__0327
06724     58 5E 05 F1 | 	add	fp, #88
06728     AF 5C 02 FB | 	rdlong	arg01, fp
0672c     4C 5E 85 F1 | 	sub	fp, #76
06730     AF 5E 02 FB | 	rdlong	arg02, fp
06734     04 5E 05 F1 | 	add	fp, #4
06738     AF 60 02 FB | 	rdlong	arg03, fp
0673c     50 5E 05 F1 | 	add	fp, #80
06740     AF 62 02 FB | 	rdlong	arg04, fp
06744     00 72 06 F6 | 	mov	local05, #0
06748     58 5E 85 F1 | 	sub	fp, #88
0674c     AF 74 02 FB | 	rdlong	local06, fp
06750     08 5E 85 F1 | 	sub	fp, #8
06754     1D 74 2E F4 | 	testbn	local06, #29 wz
06758     01 72 06 56 |  if_ne	mov	local05, #1
0675c     39 65 02 F6 | 	mov	arg05, local05
06760     84 0D B0 FD | 	call	#__system___uitoa
06764     15 77 02 F6 | 	mov	local07, result1
06768     5C 5E 05 F1 | 	add	fp, #92
0676c     AF 6A 02 FB | 	rdlong	local01, fp
06770     3B 6B 02 F1 | 	add	local01, local07
06774     AF 6A 62 FC | 	wrlong	local01, fp
06778     08 5E 05 F1 | 	add	fp, #8
0677c     AF 70 02 FB | 	rdlong	local04, fp
06780     64 5E 85 F1 | 	sub	fp, #100
06784     38 6B 5A F2 | 	cmps	local01, local04 wcz
06788     64 00 90 ED |  if_be	jmp	#LR__0331
0678c     B0 98 9F FE | 	loc	pa,	#(@LR__0329-@LR__0328)
06790     93 00 A0 FD | 	call	#FCACHE_LOAD_
06794                 | LR__0328
06794     64 5E 05 F1 | 	add	fp, #100
06798     AF 6A 02 FB | 	rdlong	local01, fp
0679c     35 71 02 F6 | 	mov	local04, local01
067a0     01 70 86 F1 | 	sub	local04, #1
067a4     AF 70 62 FC | 	wrlong	local04, fp
067a8     64 5E 85 F1 | 	sub	fp, #100
067ac     00 6A 5E F2 | 	cmps	local01, #0 wcz
067b0     20 00 90 ED |  if_be	jmp	#LR__0330
067b4     58 5E 05 F1 | 	add	fp, #88
067b8     AF 6A 02 FB | 	rdlong	local01, fp
067bc     35 71 02 F6 | 	mov	local04, local01
067c0     01 70 06 F1 | 	add	local04, #1
067c4     AF 70 62 FC | 	wrlong	local04, fp
067c8     58 5E 85 F1 | 	sub	fp, #88
067cc     35 47 48 FC | 	wrbyte	#35, local01
067d0     C0 FF 9F FD | 	jmp	#LR__0328
067d4                 | LR__0329
067d4                 | LR__0330
067d4     58 5E 05 F1 | 	add	fp, #88
067d8     AF 6A 02 FB | 	rdlong	local01, fp
067dc     35 71 02 F6 | 	mov	local04, local01
067e0     01 70 06 F1 | 	add	local04, #1
067e4     AF 70 62 FC | 	wrlong	local04, fp
067e8     58 5E 85 F1 | 	sub	fp, #88
067ec     35 01 48 FC | 	wrbyte	#0, local01
067f0                 | LR__0331
067f0     14 5E 05 F1 | 	add	fp, #20
067f4     AF 60 02 F6 | 	mov	arg03, fp
067f8     10 5E 85 F1 | 	sub	fp, #16
067fc     AF 5C 02 FB | 	rdlong	arg01, fp
06800     04 5E 05 F1 | 	add	fp, #4
06804     AF 5E 02 FB | 	rdlong	arg02, fp
06808     08 5E 85 F1 | 	sub	fp, #8
0680c     EC FB BF FD | 	call	#__system___fmtstr
06810                 | LR__0332
06810     AF F0 03 F6 | 	mov	ptra, fp
06814     BF 00 A0 FD | 	call	#popregs_
06818                 | __system___fmtnum_ret
06818     2D 00 64 FD | 	ret
0681c                 | 
0681c                 | __system__String_S
0681c     06 5A 05 F6 | 	mov	COUNT_, #6
06820     B0 00 A0 FD | 	call	#pushregs_
06824     2E 6B 02 F6 | 	mov	local01, arg01
06828     2F 6D 02 F6 | 	mov	local02, arg02
0682c     36 5D 02 F6 | 	mov	arg01, local02
06830     00 6E 06 F6 | 	mov	local03, #0
06834     D8 97 9F FE | 	loc	pa,	#(@LR__0334-@LR__0333)
06838     93 00 A0 FD | 	call	#FCACHE_LOAD_
0683c                 | LR__0333
0683c     2E 71 CA FA | 	rdbyte	local04, arg01 wz
06840     01 6E 06 51 |  if_ne	add	local03, #1
06844     01 5C 06 51 |  if_ne	add	arg01, #1
06848     F0 FF 9F 5D |  if_ne	jmp	#LR__0333
0684c                 | LR__0334
0684c     37 2B 0A F6 | 	mov	result1, local03 wz
06850     40 00 00 AF 
06854     26 2B 06 A6 |  if_e	mov	result1, ##@LR__0451
06858     50 00 90 AD |  if_e	jmp	#LR__0336
0685c     00 6A 5E F2 | 	cmps	local01, #0 wcz
06860     40 00 00 EF 
06864     27 2B 06 E6 |  if_be	mov	result1, ##@LR__0452
06868     40 00 90 ED |  if_be	jmp	#LR__0336
0686c     35 73 02 F6 | 	mov	local05, local01
06870     01 72 06 F1 | 	add	local05, #1
06874     39 5D 02 F6 | 	mov	arg01, local05
06878     01 5C 06 F1 | 	add	arg01, #1
0687c     2C 03 B0 FD | 	call	#__system___gc_alloc_managed
06880     15 75 0A F6 | 	mov	local06, result1 wz
06884     20 00 90 AD |  if_e	jmp	#LR__0335
06888     36 5F C2 FA | 	rdbyte	arg02, local02
0688c     3A 5D 02 F6 | 	mov	arg01, local06
06890     35 61 02 F6 | 	mov	arg03, local01
06894     A0 00 A0 FD | 	call	#\builtin_bytefill_
06898     3A 73 02 F1 | 	add	local05, local06
0689c     39 01 48 FC | 	wrbyte	#0, local05
068a0     3A 2B 02 F6 | 	mov	result1, local06
068a4     04 00 90 FD | 	jmp	#LR__0336
068a8                 | LR__0335
068a8     3A 2B 02 F6 | 	mov	result1, local06
068ac                 | LR__0336
068ac     AF F0 03 F6 | 	mov	ptra, fp
068b0     BF 00 A0 FD | 	call	#popregs_
068b4                 | __system__String_S_ret
068b4     2D 00 64 FD | 	ret
068b8                 | 
068b8                 | __system___gc_ptrs
068b8     0A 5A 05 F6 | 	mov	COUNT_, #10
068bc     B0 00 A0 FD | 	call	#pushregs_
068c0     02 6B 02 F6 | 	mov	local01, __heap_ptr
068c4     35 6D 02 F6 | 	mov	local02, local01
068c8     07 00 00 FF 
068cc     F8 6D 06 F1 | 	add	local02, ##4088
068d0     35 6F 0A FB | 	rdlong	local03, local01 wz
068d4     74 00 90 5D |  if_ne	jmp	#LR__0337
068d8     36 71 02 F6 | 	mov	local04, local02
068dc     35 71 82 F1 | 	sub	local04, local01
068e0     35 03 58 FC | 	wrword	#1, local01
068e4     35 73 02 F6 | 	mov	local05, local01
068e8     02 72 06 F1 | 	add	local05, #2
068ec     36 00 80 FF 
068f0     39 21 59 FC | 	wrword	##27792, local05
068f4     35 75 02 F6 | 	mov	local06, local01
068f8     04 74 06 F1 | 	add	local06, #4
068fc     3A 01 58 FC | 	wrword	#0, local06
06900     35 77 02 F6 | 	mov	local07, local01
06904     06 76 06 F1 | 	add	local07, #6
06908     3B 03 58 FC | 	wrword	#1, local07
0690c     10 6A 06 F1 | 	add	local01, #16
06910     38 6F 52 F6 | 	abs	local03, local04 wc
06914     04 6E 46 F0 | 	shr	local03, #4
06918     37 6F 62 C6 |  if_b	neg	local03, local03
0691c     35 6F 52 FC | 	wrword	local03, local01
06920     35 79 02 F6 | 	mov	local08, local01
06924     02 78 06 F1 | 	add	local08, #2
06928     36 00 80 FF 
0692c     3C 1F 59 FC | 	wrword	##27791, local08
06930     35 7B 02 F6 | 	mov	local09, local01
06934     04 7A 06 F1 | 	add	local09, #4
06938     3D 01 58 FC | 	wrword	#0, local09
0693c     35 7D 02 F6 | 	mov	local10, local01
06940     06 7C 06 F1 | 	add	local10, #6
06944     3E 01 58 FC | 	wrword	#0, local10
06948     10 6A 86 F1 | 	sub	local01, #16
0694c                 | LR__0337
0694c     36 2D 02 F6 | 	mov	result2, local02
06950     35 2B 02 F6 | 	mov	result1, local01
06954     AF F0 03 F6 | 	mov	ptra, fp
06958     BF 00 A0 FD | 	call	#popregs_
0695c                 | __system___gc_ptrs_ret
0695c     2D 00 64 FD | 	ret
06960                 | 
06960                 | __system___gc_nextBlockPtr
06960     02 5A 05 F6 | 	mov	COUNT_, #2
06964     B0 00 A0 FD | 	call	#pushregs_
06968     2E 6B 02 F6 | 	mov	local01, arg01
0696c     35 6D EA FA | 	rdword	local02, local01 wz
06970     10 00 90 5D |  if_ne	jmp	#LR__0338
06974     40 00 00 FF 
06978     28 5D 06 F6 | 	mov	arg01, ##@LR__0453
0697c     F8 01 B0 FD | 	call	#__system___gc_errmsg
06980     0C 00 90 FD | 	jmp	#LR__0339
06984                 | LR__0338
06984     04 6C 66 F0 | 	shl	local02, #4
06988     35 2B 02 F6 | 	mov	result1, local01
0698c     36 2B 02 F1 | 	add	result1, local02
06990                 | LR__0339
06990     AF F0 03 F6 | 	mov	ptra, fp
06994     BF 00 A0 FD | 	call	#popregs_
06998                 | __system___gc_nextBlockPtr_ret
06998     2D 00 64 FD | 	ret
0699c                 | 
0699c                 | __system___gc_tryalloc
0699c     1B 5A 05 F6 | 	mov	COUNT_, #27
069a0     B0 00 A0 FD | 	call	#pushregs_
069a4     2E 6B 02 F6 | 	mov	local01, arg01
069a8     2F 6D 02 F6 | 	mov	local02, arg02
069ac     08 FF BF FD | 	call	#__system___gc_ptrs
069b0     15 6F 02 F6 | 	mov	local03, result1
069b4     16 71 02 F6 | 	mov	local04, result2
069b8     37 73 02 F6 | 	mov	local05, local03
069bc     00 74 06 F6 | 	mov	local06, #0
069c0     94 96 9F FE | 	loc	pa,	#(@LR__0341-@LR__0340)
069c4     93 00 A0 FD | 	call	#FCACHE_LOAD_
069c8                 | LR__0340
069c8     39 77 02 F6 | 	mov	local07, local05
069cc     06 72 06 F1 | 	add	local05, #6
069d0     39 79 02 F6 | 	mov	local08, local05
069d4     37 7B 02 F6 | 	mov	local09, local03
069d8     3C 7D E2 FA | 	rdword	local10, local08
069dc     3D 5D 02 F6 | 	mov	arg01, local09
069e0     3E 5F 0A F6 | 	mov	arg02, local10 wz
069e4     00 2A 06 A6 |  if_e	mov	result1, #0
069e8     04 5E 66 50 |  if_ne	shl	arg02, #4
069ec     2F 5D 02 51 |  if_ne	add	arg01, arg02
069f0     2E 2B 02 56 |  if_ne	mov	result1, arg01
069f4     15 7F 02 F6 | 	mov	local11, result1
069f8     3F 73 0A F6 | 	mov	local05, local11 wz
069fc     39 7B 02 56 |  if_ne	mov	local09, local05
06a00     3D 81 02 56 |  if_ne	mov	local12, local09
06a04     40 75 E2 5A |  if_ne	rdword	local06, local12
06a08     00 72 0E F2 | 	cmp	local05, #0 wz
06a0c     10 00 90 AD |  if_e	jmp	#LR__0342
06a10     38 73 5A F2 | 	cmps	local05, local04 wcz
06a14     08 00 90 3D |  if_ae	jmp	#LR__0342
06a18     3A 6B 5A F2 | 	cmps	local01, local06 wcz
06a1c     A8 FF 9F 1D |  if_a	jmp	#LR__0340
06a20                 | LR__0341
06a20                 | LR__0342
06a20     00 72 0E F2 | 	cmp	local05, #0 wz
06a24     39 2B 02 A6 |  if_e	mov	result1, local05
06a28     40 01 90 AD |  if_e	jmp	#LR__0345
06a2c     39 83 02 F6 | 	mov	local13, local05
06a30     06 82 06 F1 | 	add	local13, #6
06a34     41 85 E2 FA | 	rdword	local14, local13
06a38     3A 6B 5A F2 | 	cmps	local01, local06 wcz
06a3c     CC 00 90 3D |  if_ae	jmp	#LR__0344
06a40     39 87 02 F6 | 	mov	local15, local05
06a44     43 6B 52 FC | 	wrword	local01, local15
06a48     35 89 02 F6 | 	mov	local16, local01
06a4c     04 88 66 F0 | 	shl	local16, #4
06a50     39 8B 02 F6 | 	mov	local17, local05
06a54     44 8B 02 F1 | 	add	local17, local16
06a58     3A 8D 02 F6 | 	mov	local18, local06
06a5c     35 8D 82 F1 | 	sub	local18, local01
06a60     45 8F 02 F6 | 	mov	local19, local17
06a64     47 8D 52 FC | 	wrword	local18, local19
06a68     45 91 02 F6 | 	mov	local20, local17
06a6c     02 90 06 F1 | 	add	local20, #2
06a70     36 00 80 FF 
06a74     48 1F 59 FC | 	wrword	##27791, local20
06a78     45 93 02 F6 | 	mov	local21, local17
06a7c     04 92 06 F1 | 	add	local21, #4
06a80     39 5F 0A F6 | 	mov	arg02, local05 wz
06a84     00 2A 06 A6 |  if_e	mov	result1, #0
06a88     37 5F 82 51 |  if_ne	sub	arg02, local03
06a8c     04 5E 46 50 |  if_ne	shr	arg02, #4
06a90     2F 2B 02 56 |  if_ne	mov	result1, arg02
06a94     49 2B 52 FC | 	wrword	result1, local21
06a98     45 95 02 F6 | 	mov	local22, local17
06a9c     41 7B E2 FA | 	rdword	local09, local13
06aa0     06 94 06 F1 | 	add	local22, #6
06aa4     4A 7B 52 FC | 	wrword	local09, local22
06aa8     45 97 02 F6 | 	mov	local23, local17
06aac     4B 5F 0A F6 | 	mov	arg02, local23 wz
06ab0     00 2A 06 A6 |  if_e	mov	result1, #0
06ab4     37 5F 82 51 |  if_ne	sub	arg02, local03
06ab8     04 5E 46 50 |  if_ne	shr	arg02, #4
06abc     2F 2B 02 56 |  if_ne	mov	result1, arg02
06ac0     15 85 02 F6 | 	mov	local14, result1
06ac4     45 5D 02 F6 | 	mov	arg01, local17
06ac8     94 FE BF FD | 	call	#__system___gc_nextBlockPtr
06acc     15 99 0A F6 | 	mov	local24, result1 wz
06ad0     38 00 90 AD |  if_e	jmp	#LR__0343
06ad4     38 99 5A F2 | 	cmps	local24, local04 wcz
06ad8     30 00 90 3D |  if_ae	jmp	#LR__0343
06adc     4C 9B 02 F6 | 	mov	local25, local24
06ae0     04 9A 06 F1 | 	add	local25, #4
06ae4     37 7B 02 F6 | 	mov	local09, local03
06ae8     4B 7D 02 F6 | 	mov	local10, local23
06aec     3D 5D 02 F6 | 	mov	arg01, local09
06af0     3E 5F 0A F6 | 	mov	arg02, local10 wz
06af4     00 2A 06 A6 |  if_e	mov	result1, #0
06af8     2E 5F 82 51 |  if_ne	sub	arg02, arg01
06afc     04 5E 46 50 |  if_ne	shr	arg02, #4
06b00     2F 2B 02 56 |  if_ne	mov	result1, arg02
06b04     15 7F 02 F6 | 	mov	local11, result1
06b08     4D 7F 52 FC | 	wrword	local11, local25
06b0c                 | LR__0343
06b0c                 | LR__0344
06b0c     06 76 06 F1 | 	add	local07, #6
06b10     3B 85 52 FC | 	wrword	local14, local07
06b14     36 00 00 FF 
06b18     80 7A 06 F6 | 	mov	local09, ##27776
06b1c     36 7B 42 F5 | 	or	local09, local02
06b20     39 9D 02 F6 | 	mov	local26, local05
06b24     02 9C 06 F1 | 	add	local26, #2
06b28     01 2A 62 FD | 	cogid	result1
06b2c     15 7B 42 F5 | 	or	local09, result1
06b30     4E 7B 52 FC | 	wrword	local09, local26
06b34     37 9F 02 F6 | 	mov	local27, local03
06b38     08 9E 06 F1 | 	add	local27, #8
06b3c     4F 7B E2 FA | 	rdword	local09, local27
06b40     41 7B 52 FC | 	wrword	local09, local13
06b44     39 5F 0A F6 | 	mov	arg02, local05 wz
06b48     00 2A 06 A6 |  if_e	mov	result1, #0
06b4c     37 5F 82 51 |  if_ne	sub	arg02, local03
06b50     04 5E 46 50 |  if_ne	shr	arg02, #4
06b54     2F 2B 02 56 |  if_ne	mov	result1, arg02
06b58     4F 2B 52 FC | 	wrword	result1, local27
06b5c     08 72 06 F1 | 	add	local05, #8
06b60     39 2B 02 F6 | 	mov	result1, local05
06b64     00 C0 31 FF 
06b68     00 2A 46 F5 | 	or	result1, ##1669332992
06b6c                 | LR__0345
06b6c     AF F0 03 F6 | 	mov	ptra, fp
06b70     BF 00 A0 FD | 	call	#popregs_
06b74                 | __system___gc_tryalloc_ret
06b74     2D 00 64 FD | 	ret
06b78                 | 
06b78                 | __system___gc_errmsg
06b78     02 5A 05 F6 | 	mov	COUNT_, #2
06b7c     B0 00 A0 FD | 	call	#pushregs_
06b80     2E 6B 02 F6 | 	mov	local01, arg01
06b84                 | LR__0346
06b84     35 6D CA FA | 	rdbyte	local02, local01 wz
06b88     01 6A 06 F1 | 	add	local01, #1
06b8c     0C 00 90 AD |  if_e	jmp	#LR__0347
06b90     36 5D 02 F6 | 	mov	arg01, local02
06b94     C4 F4 BF FD | 	call	#__system___tx
06b98     E8 FF 9F FD | 	jmp	#LR__0346
06b9c                 | LR__0347
06b9c     00 2A 06 F6 | 	mov	result1, #0
06ba0     AF F0 03 F6 | 	mov	ptra, fp
06ba4     BF 00 A0 FD | 	call	#popregs_
06ba8                 | __system___gc_errmsg_ret
06ba8     2D 00 64 FD | 	ret
06bac                 | 
06bac                 | __system___gc_alloc_managed
06bac     02 5A 05 F6 | 	mov	COUNT_, #2
06bb0     B0 00 A0 FD | 	call	#pushregs_
06bb4     2E 6B 02 F6 | 	mov	local01, arg01
06bb8     00 5E 06 F6 | 	mov	arg02, #0
06bbc     30 00 B0 FD | 	call	#__system___gc_doalloc
06bc0     15 6D 0A F6 | 	mov	local02, result1 wz
06bc4     18 00 90 5D |  if_ne	jmp	#LR__0348
06bc8     00 6A 5E F2 | 	cmps	local01, #0 wcz
06bcc     10 00 90 ED |  if_be	jmp	#LR__0348
06bd0     40 00 00 FF 
06bd4     44 5D 06 F6 | 	mov	arg01, ##@LR__0454
06bd8     9C FF BF FD | 	call	#__system___gc_errmsg
06bdc     04 00 90 FD | 	jmp	#LR__0349
06be0                 | LR__0348
06be0     36 2B 02 F6 | 	mov	result1, local02
06be4                 | LR__0349
06be4     AF F0 03 F6 | 	mov	ptra, fp
06be8     BF 00 A0 FD | 	call	#popregs_
06bec                 | __system___gc_alloc_managed_ret
06bec     2D 00 64 FD | 	ret
06bf0                 | 
06bf0                 | __system___gc_doalloc
06bf0     07 5A 05 F6 | 	mov	COUNT_, #7
06bf4     B0 00 A0 FD | 	call	#pushregs_
06bf8     2E 6B 0A F6 | 	mov	local01, arg01 wz
06bfc     2F 6D 02 F6 | 	mov	local02, arg02
06c00     00 2A 06 A6 |  if_e	mov	result1, #0
06c04     8C 00 90 AD |  if_e	jmp	#LR__0357
06c08     17 6A 06 F1 | 	add	local01, #23
06c0c     0F 6A 26 F5 | 	andn	local01, #15
06c10     04 6A 46 F0 | 	shr	local01, #4
06c14     14 14 06 F1 | 	add	ptr___system__dat__, #20
06c18     0A 6F 02 F6 | 	mov	local03, ptr___system__dat__
06c1c     37 5D 02 F6 | 	mov	arg01, local03
06c20     14 14 86 F1 | 	sub	ptr___system__dat__, #20
06c24     50 F3 BF FD | 	call	#__system___lockmem
06c28     35 5D 02 F6 | 	mov	arg01, local01
06c2c     36 5F 02 F6 | 	mov	arg02, local02
06c30     68 FD BF FD | 	call	#__system___gc_tryalloc
06c34     15 71 0A F6 | 	mov	local04, result1 wz
06c38     14 00 90 5D |  if_ne	jmp	#LR__0350
06c3c     10 03 B0 FD | 	call	#__system___gc_docollect
06c40     35 5D 02 F6 | 	mov	arg01, local01
06c44     36 5F 02 F6 | 	mov	arg02, local02
06c48     50 FD BF FD | 	call	#__system___gc_tryalloc
06c4c     15 71 02 F6 | 	mov	local04, result1
06c50                 | LR__0350
06c50     37 01 68 FC | 	wrlong	#0, local03
06c54     00 70 0E F2 | 	cmp	local04, #0 wz
06c58     34 00 90 AD |  if_e	jmp	#LR__0356
06c5c     04 6A 66 F0 | 	shl	local01, #4
06c60     08 6A 86 F1 | 	sub	local01, #8
06c64     35 73 52 F6 | 	abs	local05, local01 wc
06c68     02 72 46 F0 | 	shr	local05, #2
06c6c     39 73 62 C6 |  if_b	neg	local05, local05
06c70     39 75 0A F6 | 	mov	local06, local05 wz
06c74     38 77 02 F6 | 	mov	local07, local04
06c78     14 00 90 AD |  if_e	jmp	#LR__0355
06c7c     8C 93 9F FE | 	loc	pa,	#(@LR__0353-@LR__0351)
06c80     93 00 A0 FD | 	call	#FCACHE_LOAD_
06c84                 | LR__0351
06c84     3A 05 D8 FC | 	rep	@LR__0354, local06
06c88                 | LR__0352
06c88     3B 01 68 FC | 	wrlong	#0, local07
06c8c     04 76 06 F1 | 	add	local07, #4
06c90                 | LR__0353
06c90                 | LR__0354
06c90                 | LR__0355
06c90                 | LR__0356
06c90     38 2B 02 F6 | 	mov	result1, local04
06c94                 | LR__0357
06c94     AF F0 03 F6 | 	mov	ptra, fp
06c98     BF 00 A0 FD | 	call	#popregs_
06c9c                 | __system___gc_doalloc_ret
06c9c     2D 00 64 FD | 	ret
06ca0                 | 
06ca0                 | __system___gc_isvalidptr
06ca0     30 31 02 F6 | 	mov	_var01, arg03
06ca4     18 33 02 F6 | 	mov	_var02, _var01
06ca8     00 F8 7F FF 
06cac     00 32 06 F5 | 	and	_var02, ##-1048576
06cb0     00 C0 31 FF 
06cb4     00 32 0E F2 | 	cmp	_var02, ##1669332992 wz
06cb8     00 2A 06 56 |  if_ne	mov	result1, #0
06cbc     60 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
06cc0     08 30 86 F1 | 	sub	_var01, #8
06cc4     18 35 02 F6 | 	mov	_var03, _var01
06cc8     00 F8 7F FF 
06ccc     00 34 26 F5 | 	andn	_var03, ##-1048576
06cd0     2E 35 5A F2 | 	cmps	_var03, arg01 wcz
06cd4     08 00 90 CD |  if_b	jmp	#LR__0358
06cd8     2F 35 5A F2 | 	cmps	_var03, arg02 wcz
06cdc     08 00 90 CD |  if_b	jmp	#LR__0359
06ce0                 | LR__0358
06ce0     00 2A 06 F6 | 	mov	result1, #0
06ce4     38 00 90 FD | 	jmp	#__system___gc_isvalidptr_ret
06ce8                 | LR__0359
06ce8     1A 33 02 F6 | 	mov	_var02, _var03
06cec     2E 33 62 F5 | 	xor	_var02, arg01
06cf0     0F 32 0E F5 | 	and	_var02, #15 wz
06cf4     00 2A 06 56 |  if_ne	mov	result1, #0
06cf8     24 00 90 5D |  if_ne	jmp	#__system___gc_isvalidptr_ret
06cfc     1A 37 02 F6 | 	mov	_var04, _var03
06d00     02 36 06 F1 | 	add	_var04, #2
06d04     1B 33 E2 FA | 	rdword	_var02, _var04
06d08     7F 00 00 FF 
06d0c     C0 33 06 F5 | 	and	_var02, ##65472
06d10     36 00 00 FF 
06d14     80 32 0E F2 | 	cmp	_var02, ##27776 wz
06d18     00 2A 06 56 |  if_ne	mov	result1, #0
06d1c     1A 2B 02 A6 |  if_e	mov	result1, _var03
06d20                 | __system___gc_isvalidptr_ret
06d20     2D 00 64 FD | 	ret
06d24                 | 
06d24                 | __system___gc_dofree
06d24     1A 5A 05 F6 | 	mov	COUNT_, #26
06d28     B0 00 A0 FD | 	call	#pushregs_
06d2c     2E 6B 02 F6 | 	mov	local01, arg01
06d30     84 FB BF FD | 	call	#__system___gc_ptrs
06d34     16 6D 02 F6 | 	mov	local02, result2
06d38     15 6F 02 F6 | 	mov	local03, result1
06d3c     35 71 02 F6 | 	mov	local04, local01
06d40     02 70 06 F1 | 	add	local04, #2
06d44     36 00 80 FF 
06d48     38 1F 59 FC | 	wrword	##27791, local04
06d4c     35 73 02 F6 | 	mov	local05, local01
06d50     35 5D 02 F6 | 	mov	arg01, local01
06d54     08 FC BF FD | 	call	#__system___gc_nextBlockPtr
06d58     15 75 02 F6 | 	mov	local06, result1
06d5c     F0 92 9F FE | 	loc	pa,	#(@LR__0361-@LR__0360)
06d60     93 00 A0 FD | 	call	#FCACHE_LOAD_
06d64                 | LR__0360
06d64     04 72 06 F1 | 	add	local05, #4
06d68     39 77 02 F6 | 	mov	local07, local05
06d6c     3B 5F EA FA | 	rdword	arg02, local07 wz
06d70     37 5D 02 F6 | 	mov	arg01, local03
06d74     00 2A 06 A6 |  if_e	mov	result1, #0
06d78     04 5E 66 50 |  if_ne	shl	arg02, #4
06d7c     2F 5D 02 51 |  if_ne	add	arg01, arg02
06d80     2E 2B 02 56 |  if_ne	mov	result1, arg01
06d84     15 73 0A F6 | 	mov	local05, result1 wz
06d88     28 00 90 AD |  if_e	jmp	#LR__0362
06d8c     39 5D 02 F6 | 	mov	arg01, local05
06d90     00 78 06 F6 | 	mov	local08, #0
06d94     02 5C 06 F1 | 	add	arg01, #2
06d98     2E 7B E2 FA | 	rdword	local09, arg01
06d9c     36 00 00 FF 
06da0     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06da4     01 78 66 A6 |  if_e	neg	local08, #1
06da8     3C 2B 02 F6 | 	mov	result1, local08
06dac     15 7D 0A F6 | 	mov	local10, result1 wz
06db0     B0 FF 9F AD |  if_e	jmp	#LR__0360
06db4                 | LR__0361
06db4                 | LR__0362
06db4     00 72 0E F2 | 	cmp	local05, #0 wz
06db8     37 73 02 A6 |  if_e	mov	local05, local03
06dbc     39 7F 02 F6 | 	mov	local11, local05
06dc0     06 7E 06 F1 | 	add	local11, #6
06dc4     35 81 02 F6 | 	mov	local12, local01
06dc8     3F 83 E2 FA | 	rdword	local13, local11
06dcc     06 80 06 F1 | 	add	local12, #6
06dd0     40 83 52 FC | 	wrword	local13, local12
06dd4     35 5F 0A F6 | 	mov	arg02, local01 wz
06dd8     00 2A 06 A6 |  if_e	mov	result1, #0
06ddc     37 5F 82 51 |  if_ne	sub	arg02, local03
06de0     04 5E 46 50 |  if_ne	shr	arg02, #4
06de4     2F 2B 02 56 |  if_ne	mov	result1, arg02
06de8     15 85 02 F6 | 	mov	local14, result1
06dec     3F 85 52 FC | 	wrword	local14, local11
06df0     37 73 0A F2 | 	cmp	local05, local03 wz
06df4     74 00 90 AD |  if_e	jmp	#LR__0365
06df8     39 5D 02 F6 | 	mov	arg01, local05
06dfc     60 FB BF FD | 	call	#__system___gc_nextBlockPtr
06e00     35 2B 0A F2 | 	cmp	result1, local01 wz
06e04     64 00 90 5D |  if_ne	jmp	#LR__0364
06e08     39 87 02 F6 | 	mov	local15, local05
06e0c     43 89 E2 FA | 	rdword	local16, local15
06e10     35 8B 02 F6 | 	mov	local17, local01
06e14     45 7D E2 FA | 	rdword	local10, local17
06e18     3E 89 02 F1 | 	add	local16, local10
06e1c     43 89 52 FC | 	wrword	local16, local15
06e20     38 01 58 FC | 	wrword	#0, local04
06e24     35 5D 02 F6 | 	mov	arg01, local01
06e28     34 FB BF FD | 	call	#__system___gc_nextBlockPtr
06e2c     15 75 02 F6 | 	mov	local06, result1
06e30     36 75 5A F2 | 	cmps	local06, local02 wcz
06e34     24 00 90 3D |  if_ae	jmp	#LR__0363
06e38     3A 8D 02 F6 | 	mov	local18, local06
06e3c     04 8C 06 F1 | 	add	local18, #4
06e40     39 5F 0A F6 | 	mov	arg02, local05 wz
06e44     00 2A 06 A6 |  if_e	mov	result1, #0
06e48     37 5F 82 51 |  if_ne	sub	arg02, local03
06e4c     04 5E 46 50 |  if_ne	shr	arg02, #4
06e50     2F 2B 02 56 |  if_ne	mov	result1, arg02
06e54     15 85 02 F6 | 	mov	local14, result1
06e58     46 85 52 FC | 	wrword	local14, local18
06e5c                 | LR__0363
06e5c     40 83 E2 FA | 	rdword	local13, local12
06e60     3F 83 52 FC | 	wrword	local13, local11
06e64     40 01 58 FC | 	wrword	#0, local12
06e68     39 6B 02 F6 | 	mov	local01, local05
06e6c                 | LR__0364
06e6c                 | LR__0365
06e6c     35 5D 02 F6 | 	mov	arg01, local01
06e70     EC FA BF FD | 	call	#__system___gc_nextBlockPtr
06e74     15 8F 0A F6 | 	mov	local19, result1 wz
06e78     C4 00 90 AD |  if_e	jmp	#LR__0367
06e7c     36 8F 5A F2 | 	cmps	local19, local02 wcz
06e80     BC 00 90 3D |  if_ae	jmp	#LR__0367
06e84     47 5D 02 F6 | 	mov	arg01, local19
06e88     00 78 06 F6 | 	mov	local08, #0
06e8c     02 5C 06 F1 | 	add	arg01, #2
06e90     2E 7B E2 FA | 	rdword	local09, arg01
06e94     36 00 00 FF 
06e98     8F 7A 0E F2 | 	cmp	local09, ##27791 wz
06e9c     01 78 66 A6 |  if_e	neg	local08, #1
06ea0     3C 2B 0A F6 | 	mov	result1, local08 wz
06ea4     98 00 90 AD |  if_e	jmp	#LR__0367
06ea8     35 73 02 F6 | 	mov	local05, local01
06eac     47 6B 02 F6 | 	mov	local01, local19
06eb0     39 91 02 F6 | 	mov	local20, local05
06eb4     48 93 E2 FA | 	rdword	local21, local20
06eb8     35 95 02 F6 | 	mov	local22, local01
06ebc     4A 7D E2 FA | 	rdword	local10, local22
06ec0     3E 93 02 F1 | 	add	local21, local10
06ec4     48 93 52 FC | 	wrword	local21, local20
06ec8     35 97 02 F6 | 	mov	local23, local01
06ecc     06 96 06 F1 | 	add	local23, #6
06ed0     39 99 02 F6 | 	mov	local24, local05
06ed4     4B 83 E2 FA | 	rdword	local13, local23
06ed8     06 98 06 F1 | 	add	local24, #6
06edc     4C 83 52 FC | 	wrword	local13, local24
06ee0     35 9B 02 F6 | 	mov	local25, local01
06ee4     02 9A 06 F1 | 	add	local25, #2
06ee8     4D 55 59 FC | 	wrword	#170, local25
06eec     4B 01 58 FC | 	wrword	#0, local23
06ef0     35 83 02 F6 | 	mov	local13, local01
06ef4     41 5D 02 F6 | 	mov	arg01, local13
06ef8     64 FA BF FD | 	call	#__system___gc_nextBlockPtr
06efc     15 7D 02 F6 | 	mov	local10, result1
06f00     3E 75 0A F6 | 	mov	local06, local10 wz
06f04     38 00 90 AD |  if_e	jmp	#LR__0366
06f08     36 75 5A F2 | 	cmps	local06, local02 wcz
06f0c     30 00 90 3D |  if_ae	jmp	#LR__0366
06f10     3A 9D 02 F6 | 	mov	local26, local06
06f14     04 9C 06 F1 | 	add	local26, #4
06f18     37 83 02 F6 | 	mov	local13, local03
06f1c     39 7D 02 F6 | 	mov	local10, local05
06f20     41 5D 02 F6 | 	mov	arg01, local13
06f24     3E 5F 0A F6 | 	mov	arg02, local10 wz
06f28     00 2A 06 A6 |  if_e	mov	result1, #0
06f2c     2E 5F 82 51 |  if_ne	sub	arg02, arg01
06f30     04 5E 46 50 |  if_ne	shr	arg02, #4
06f34     2F 2B 02 56 |  if_ne	mov	result1, arg02
06f38     15 85 02 F6 | 	mov	local14, result1
06f3c     4E 85 52 FC | 	wrword	local14, local26
06f40                 | LR__0366
06f40                 | LR__0367
06f40     3A 2B 02 F6 | 	mov	result1, local06
06f44     AF F0 03 F6 | 	mov	ptra, fp
06f48     BF 00 A0 FD | 	call	#popregs_
06f4c                 | __system___gc_dofree_ret
06f4c     2D 00 64 FD | 	ret
06f50                 | 
06f50                 | __system___gc_docollect
06f50     0C 5A 05 F6 | 	mov	COUNT_, #12
06f54     B0 00 A0 FD | 	call	#pushregs_
06f58     5C F9 BF FD | 	call	#__system___gc_ptrs
06f5c     16 6B 02 F6 | 	mov	local01, result2
06f60     15 6D 02 F6 | 	mov	local02, result1
06f64     36 5D 02 F6 | 	mov	arg01, local02
06f68     F4 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06f6c     15 6F 0A F6 | 	mov	local03, result1 wz
06f70     01 2A 62 FD | 	cogid	result1
06f74     15 71 02 F6 | 	mov	local04, result1
06f78     2C 00 90 AD |  if_e	jmp	#LR__0369
06f7c                 | LR__0368
06f7c     35 6F 5A F2 | 	cmps	local03, local01 wcz
06f80     24 00 90 3D |  if_ae	jmp	#LR__0369
06f84     37 73 02 F6 | 	mov	local05, local03
06f88     02 72 06 F1 | 	add	local05, #2
06f8c     39 75 E2 FA | 	rdword	local06, local05
06f90     20 74 26 F5 | 	andn	local06, #32
06f94     39 75 52 FC | 	wrword	local06, local05
06f98     37 5D 02 F6 | 	mov	arg01, local03
06f9c     C0 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06fa0     15 6F 0A F6 | 	mov	local03, result1 wz
06fa4     D4 FF 9F 5D |  if_ne	jmp	#LR__0368
06fa8                 | LR__0369
06fa8     00 76 06 F6 | 	mov	local07, #0
06fac     00 5C 06 F6 | 	mov	arg01, #0
06fb0     5C EF BF FD | 	call	#__system____topofstack
06fb4     15 79 02 F6 | 	mov	local08, result1
06fb8     3B 5D 02 F6 | 	mov	arg01, local07
06fbc     3C 5F 02 F6 | 	mov	arg02, local08
06fc0     A0 00 B0 FD | 	call	#__system___gc_markhub
06fc4     2C 01 B0 FD | 	call	#__system___gc_markcog
06fc8     36 5D 02 F6 | 	mov	arg01, local02
06fcc     90 F9 BF FD | 	call	#__system___gc_nextBlockPtr
06fd0     15 7B 0A F6 | 	mov	local09, result1 wz
06fd4     10 00 90 5D |  if_ne	jmp	#LR__0370
06fd8     40 00 00 FF 
06fdc     61 5D 06 F6 | 	mov	arg01, ##@LR__0455
06fe0     94 FB BF FD | 	call	#__system___gc_errmsg
06fe4     70 00 90 FD | 	jmp	#LR__0376
06fe8                 | LR__0370
06fe8                 | LR__0371
06fe8     3D 6F 02 F6 | 	mov	local03, local09
06fec     37 5D 02 F6 | 	mov	arg01, local03
06ff0     6C F9 BF FD | 	call	#__system___gc_nextBlockPtr
06ff4     15 7B 02 F6 | 	mov	local09, result1
06ff8     37 7D 02 F6 | 	mov	local10, local03
06ffc     02 7C 06 F1 | 	add	local10, #2
07000     3E 7F E2 FA | 	rdword	local11, local10
07004     20 7E CE F7 | 	test	local11, #32 wz
07008     3C 00 90 5D |  if_ne	jmp	#LR__0374
0700c     3F 81 02 F6 | 	mov	local12, local11
07010     10 80 0E F5 | 	and	local12, #16 wz
07014     30 00 90 5D |  if_ne	jmp	#LR__0374
07018     3F 77 02 F6 | 	mov	local07, local11
0701c     0F 76 06 F5 | 	and	local07, #15
07020     3B 7F 02 F6 | 	mov	local11, local07
07024     38 7F 0A F2 | 	cmp	local11, local04 wz
07028     08 00 90 AD |  if_e	jmp	#LR__0372
0702c     0E 7E 0E F2 | 	cmp	local11, #14 wz
07030     14 00 90 5D |  if_ne	jmp	#LR__0373
07034                 | LR__0372
07034     37 77 02 F6 | 	mov	local07, local03
07038     3B 5D 02 F6 | 	mov	arg01, local07
0703c     E4 FC BF FD | 	call	#__system___gc_dofree
07040     15 81 02 F6 | 	mov	local12, result1
07044     40 7B 02 F6 | 	mov	local09, local12
07048                 | LR__0373
07048                 | LR__0374
07048     00 7A 0E F2 | 	cmp	local09, #0 wz
0704c     08 00 90 AD |  if_e	jmp	#LR__0375
07050     35 7B 5A F2 | 	cmps	local09, local01 wcz
07054     90 FF 9F CD |  if_b	jmp	#LR__0371
07058                 | LR__0375
07058                 | LR__0376
07058     AF F0 03 F6 | 	mov	ptra, fp
0705c     BF 00 A0 FD | 	call	#popregs_
07060                 | __system___gc_docollect_ret
07060     2D 00 64 FD | 	ret
07064                 | 
07064                 | __system___gc_markhub
07064     0A 5A 05 F6 | 	mov	COUNT_, #10
07068     B0 00 A0 FD | 	call	#pushregs_
0706c     2E 6B 02 F6 | 	mov	local01, arg01
07070     2F 6D 02 F6 | 	mov	local02, arg02
07074     40 F8 BF FD | 	call	#__system___gc_ptrs
07078     15 6F 02 F6 | 	mov	local03, result1
0707c     16 71 02 F6 | 	mov	local04, result2
07080                 | LR__0377
07080     36 6B 5A F2 | 	cmps	local01, local02 wcz
07084     60 00 90 3D |  if_ae	jmp	#LR__0378
07088     35 61 02 FB | 	rdlong	arg03, local01
0708c     04 6A 06 F1 | 	add	local01, #4
07090     37 5D 02 F6 | 	mov	arg01, local03
07094     38 5F 02 F6 | 	mov	arg02, local04
07098     04 FC BF FD | 	call	#__system___gc_isvalidptr
0709c     15 73 0A F6 | 	mov	local05, result1 wz
070a0     DC FF 9F AD |  if_e	jmp	#LR__0377
070a4     39 5D 02 F6 | 	mov	arg01, local05
070a8     00 74 06 F6 | 	mov	local06, #0
070ac     02 5C 06 F1 | 	add	arg01, #2
070b0     2E 77 E2 FA | 	rdword	local07, arg01
070b4     36 00 00 FF 
070b8     8F 76 0E F2 | 	cmp	local07, ##27791 wz
070bc     01 74 66 A6 |  if_e	neg	local06, #1
070c0     3A 2B 02 F6 | 	mov	result1, local06
070c4     15 79 0A F6 | 	mov	local08, result1 wz
070c8     B4 FF 9F 5D |  if_ne	jmp	#LR__0377
070cc     39 7B 02 F6 | 	mov	local09, local05
070d0     02 7A 06 F1 | 	add	local09, #2
070d4     3D 7D E2 FA | 	rdword	local10, local09
070d8     0F 7C 26 F5 | 	andn	local10, #15
070dc     2E 7C 46 F5 | 	or	local10, #46
070e0     3D 7D 52 FC | 	wrword	local10, local09
070e4     98 FF 9F FD | 	jmp	#LR__0377
070e8                 | LR__0378
070e8     AF F0 03 F6 | 	mov	ptra, fp
070ec     BF 00 A0 FD | 	call	#popregs_
070f0                 | __system___gc_markhub_ret
070f0     2D 00 64 FD | 	ret
070f4                 | 
070f4                 | __system___gc_markcog
070f4     06 5A 05 F6 | 	mov	COUNT_, #6
070f8     B0 00 A0 FD | 	call	#pushregs_
070fc     B8 F7 BF FD | 	call	#__system___gc_ptrs
07100     15 6B 02 F6 | 	mov	local01, result1
07104     16 6D 02 F6 | 	mov	local02, result2
07108     00 6E 06 F6 | 	mov	local03, #0
0710c                 | LR__0379
0710c     F0 71 06 F6 | 	mov	local04, #496
07110     37 71 82 F1 | 	sub	local04, local03
07114     F0 71 06 F1 | 	add	local04, #496
07118                 | 	'.live	local04
07118     00 70 96 F9 | 	alts	local04, #0
0711c     38 73 02 F6 | 	mov	local05, local04
07120     36 5F 02 F6 | 	mov	arg02, local02
07124     35 5D 02 F6 | 	mov	arg01, local01
07128     39 61 02 F6 | 	mov	arg03, local05
0712c     70 FB BF FD | 	call	#__system___gc_isvalidptr
07130     15 73 0A F6 | 	mov	local05, result1 wz
07134     10 00 90 AD |  if_e	jmp	#LR__0380
07138     02 72 06 F1 | 	add	local05, #2
0713c     39 75 E2 FA | 	rdword	local06, local05
07140     20 74 46 F5 | 	or	local06, #32
07144     39 75 52 FC | 	wrword	local06, local05
07148                 | LR__0380
07148     01 6E 06 F1 | 	add	local03, #1
0714c     F0 6F 5E F2 | 	cmps	local03, #496 wcz
07150     B8 FF 9F CD |  if_b	jmp	#LR__0379
07154     AF F0 03 F6 | 	mov	ptra, fp
07158     BF 00 A0 FD | 	call	#popregs_
0715c                 | __system___gc_markcog_ret
0715c     2D 00 64 FD | 	ret
07160                 | 
07160                 | __system__write
07160     03 5A 05 F6 | 	mov	COUNT_, #3
07164     B0 00 A0 FD | 	call	#pushregs_
07168     2E 6B 02 F6 | 	mov	local01, arg01
0716c     2F 6D 02 F6 | 	mov	local02, arg02
07170     30 6F 02 F6 | 	mov	local03, arg03
07174     0A 6A 1E F2 | 	cmp	local01, #10 wcz
07178     1C 00 90 CD |  if_b	jmp	#LR__0381
0717c     01 00 00 FF 
07180     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07184     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07188     01 00 00 FF 
0718c     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07190     01 2A 66 F6 | 	neg	result1, #1
07194     28 00 90 FD | 	jmp	#LR__0382
07198                 | LR__0381
07198     35 5D 02 F6 | 	mov	arg01, local01
0719c     01 5C 66 F0 | 	shl	arg01, #1
071a0     35 5D 02 F1 | 	add	arg01, local01
071a4     04 5C 66 F0 | 	shl	arg01, #4
071a8     1C 14 06 F1 | 	add	ptr___system__dat__, #28
071ac     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
071b0     36 5F 02 F6 | 	mov	arg02, local02
071b4     37 61 02 F6 | 	mov	arg03, local03
071b8     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
071bc     4C 09 B0 FD | 	call	#__system___vfswrite
071c0                 | LR__0382
071c0     AF F0 03 F6 | 	mov	ptra, fp
071c4     BF 00 A0 FD | 	call	#popregs_
071c8                 | __system__write_ret
071c8     2D 00 64 FD | 	ret
071cc                 | 
071cc                 | __system__read
071cc     03 5A 05 F6 | 	mov	COUNT_, #3
071d0     B0 00 A0 FD | 	call	#pushregs_
071d4     2E 6B 02 F6 | 	mov	local01, arg01
071d8     2F 6D 02 F6 | 	mov	local02, arg02
071dc     30 6F 02 F6 | 	mov	local03, arg03
071e0     0A 6A 1E F2 | 	cmp	local01, #10 wcz
071e4     1C 00 90 CD |  if_b	jmp	#LR__0383
071e8     01 00 00 FF 
071ec     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
071f0     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
071f4     01 00 00 FF 
071f8     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
071fc     01 2A 66 F6 | 	neg	result1, #1
07200     28 00 90 FD | 	jmp	#LR__0384
07204                 | LR__0383
07204     35 5D 02 F6 | 	mov	arg01, local01
07208     01 5C 66 F0 | 	shl	arg01, #1
0720c     35 5D 02 F1 | 	add	arg01, local01
07210     04 5C 66 F0 | 	shl	arg01, #4
07214     1C 14 06 F1 | 	add	ptr___system__dat__, #28
07218     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
0721c     36 5F 02 F6 | 	mov	arg02, local02
07220     37 61 02 F6 | 	mov	arg03, local03
07224     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
07228     A4 0A B0 FD | 	call	#__system___vfsread
0722c                 | LR__0384
0722c     AF F0 03 F6 | 	mov	ptra, fp
07230     BF 00 A0 FD | 	call	#popregs_
07234                 | __system__read_ret
07234     2D 00 64 FD | 	ret
07238                 | 
07238                 | __system__close
07238     01 5A 05 F6 | 	mov	COUNT_, #1
0723c     B0 00 A0 FD | 	call	#pushregs_
07240     2E 6B 02 F6 | 	mov	local01, arg01
07244     0A 6A 1E F2 | 	cmp	local01, #10 wcz
07248     1C 00 90 CD |  if_b	jmp	#LR__0385
0724c     01 00 00 FF 
07250     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07254     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07258     01 00 00 FF 
0725c     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07260     01 2A 66 F6 | 	neg	result1, #1
07264     20 00 90 FD | 	jmp	#LR__0386
07268                 | LR__0385
07268     35 5D 02 F6 | 	mov	arg01, local01
0726c     01 5C 66 F0 | 	shl	arg01, #1
07270     35 5D 02 F1 | 	add	arg01, local01
07274     04 5C 66 F0 | 	shl	arg01, #4
07278     1C 14 06 F1 | 	add	ptr___system__dat__, #28
0727c     0A 5D 02 F1 | 	add	arg01, ptr___system__dat__
07280     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
07284     80 03 B0 FD | 	call	#__system___closeraw
07288                 | LR__0386
07288     AF F0 03 F6 | 	mov	ptra, fp
0728c     BF 00 A0 FD | 	call	#popregs_
07290                 | __system__close_ret
07290     2D 00 64 FD | 	ret
07294                 | 
07294                 | __system__lseek
07294     09 5A 05 F6 | 	mov	COUNT_, #9
07298     B0 00 A0 FD | 	call	#pushregs_
0729c     2E 6B 02 F6 | 	mov	local01, arg01
072a0     2F 6D 02 F6 | 	mov	local02, arg02
072a4     30 6F 02 F6 | 	mov	local03, arg03
072a8     0A 6A 1E F2 | 	cmp	local01, #10 wcz
072ac     1C 00 90 CD |  if_b	jmp	#LR__0387
072b0     01 00 00 FF 
072b4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
072b8     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
072bc     01 00 00 FF 
072c0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
072c4     01 2A 66 F6 | 	neg	result1, #1
072c8     D8 00 90 FD | 	jmp	#LR__0391
072cc                 | LR__0387
072cc     35 71 02 F6 | 	mov	local04, local01
072d0     01 70 66 F0 | 	shl	local04, #1
072d4     35 71 02 F1 | 	add	local04, local01
072d8     04 70 66 F0 | 	shl	local04, #4
072dc     1C 14 06 F1 | 	add	ptr___system__dat__, #28
072e0     0A 71 02 F1 | 	add	local04, ptr___system__dat__
072e4     2C 70 06 F1 | 	add	local04, #44
072e8     38 73 0A FB | 	rdlong	local05, local04 wz
072ec     2C 70 86 F1 | 	sub	local04, #44
072f0     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
072f4     1C 00 90 5D |  if_ne	jmp	#LR__0388
072f8     01 00 00 FF 
072fc     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07300     0A 21 68 FC | 	wrlong	#16, ptr___system__dat__
07304     01 00 00 FF 
07308     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
0730c     01 2A 66 F6 | 	neg	result1, #1
07310     90 00 90 FD | 	jmp	#LR__0391
07314                 | LR__0388
07314     08 70 06 F1 | 	add	local04, #8
07318     38 73 02 FB | 	rdlong	local05, local04
0731c     08 70 86 F1 | 	sub	local04, #8
07320     40 72 CE F7 | 	test	local05, #64 wz
07324     14 00 90 AD |  if_e	jmp	#LR__0389
07328     08 70 06 F1 | 	add	local04, #8
0732c     38 73 02 FB | 	rdlong	local05, local04
07330     80 72 46 F5 | 	or	local05, #128
07334     38 73 62 FC | 	wrlong	local05, local04
07338     08 70 86 F1 | 	sub	local04, #8
0733c                 | LR__0389
0733c     2C 70 06 F1 | 	add	local04, #44
07340     38 73 02 FB | 	rdlong	local05, local04
07344     2C 70 86 F1 | 	sub	local04, #44
07348     39 75 02 FB | 	rdlong	local06, local05
0734c     04 72 06 F1 | 	add	local05, #4
07350     39 77 02 FB | 	rdlong	local07, local05
07354     38 5D 02 F6 | 	mov	arg01, local04
07358     36 5F 02 F6 | 	mov	arg02, local02
0735c     37 61 02 F6 | 	mov	arg03, local03
07360     07 79 02 F6 | 	mov	local08, objptr
07364     3A 0F 02 F6 | 	mov	objptr, local06
07368     2D 76 62 FD | 	call	local07
0736c     3C 0F 02 F6 | 	mov	objptr, local08
07370     15 7B 02 F6 | 	mov	local09, result1
07374     00 7A 5E F2 | 	cmps	local09, #0 wcz
07378     24 00 90 3D |  if_ae	jmp	#LR__0390
0737c     3D 5D 6A F6 | 	neg	arg01, local09 wz
07380     01 00 00 FF 
07384     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07388     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
0738c     01 00 00 FF 
07390     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07394     01 2A 66 56 |  if_ne	neg	result1, #1
07398     00 2A 06 A6 |  if_e	mov	result1, #0
0739c     04 00 90 FD | 	jmp	#LR__0391
073a0                 | LR__0390
073a0     3D 2B 02 F6 | 	mov	result1, local09
073a4                 | LR__0391
073a4     AF F0 03 F6 | 	mov	ptra, fp
073a8     BF 00 A0 FD | 	call	#popregs_
073ac                 | __system__lseek_ret
073ac     2D 00 64 FD | 	ret
073b0                 | 
073b0                 | __system____getftab
073b0     0A 5C 1E F2 | 	cmp	arg01, #10 wcz
073b4     00 2A 06 36 |  if_ae	mov	result1, #0
073b8     1C 00 90 3D |  if_ae	jmp	#__system____getftab_ret
073bc     2E 2B 02 F6 | 	mov	result1, arg01
073c0     01 2A 66 F0 | 	shl	result1, #1
073c4     2E 2B 02 F1 | 	add	result1, arg01
073c8     04 2A 66 F0 | 	shl	result1, #4
073cc     1C 14 06 F1 | 	add	ptr___system__dat__, #28
073d0     0A 2B 02 F1 | 	add	result1, ptr___system__dat__
073d4     1C 14 86 F1 | 	sub	ptr___system__dat__, #28
073d8                 | __system____getftab_ret
073d8     2D 00 64 FD | 	ret
073dc                 | 
073dc                 | __system___strrev
073dc     2E 31 CA FA | 	rdbyte	_var01, arg01 wz
073e0     40 00 90 AD |  if_e	jmp	#__system___strrev_ret
073e4     2E 33 02 F6 | 	mov	_var02, arg01
073e8     20 8C 9F FE | 	loc	pa,	#(@LR__0393-@LR__0392)
073ec     93 00 A0 FD | 	call	#FCACHE_LOAD_
073f0                 | LR__0392
073f0     19 31 CA FA | 	rdbyte	_var01, _var02 wz
073f4     01 32 06 51 |  if_ne	add	_var02, #1
073f8     F4 FF 9F 5D |  if_ne	jmp	#LR__0392
073fc                 | LR__0393
073fc     01 32 86 F1 | 	sub	_var02, #1
07400                 | LR__0394
07400     2E 33 5A F2 | 	cmps	_var02, arg01 wcz
07404     1C 00 90 ED |  if_be	jmp	#LR__0395
07408     2E 35 C2 FA | 	rdbyte	_var03, arg01
0740c     19 37 C2 FA | 	rdbyte	_var04, _var02
07410     2E 37 42 FC | 	wrbyte	_var04, arg01
07414     19 35 42 FC | 	wrbyte	_var03, _var02
07418     01 5C 06 F1 | 	add	arg01, #1
0741c     01 32 86 F1 | 	sub	_var02, #1
07420     DC FF 9F FD | 	jmp	#LR__0394
07424                 | LR__0395
07424                 | __system___strrev_ret
07424     2D 00 64 FD | 	ret
07428                 | 
07428                 | __system___fmtpad
07428     0C 5A 05 F6 | 	mov	COUNT_, #12
0742c     B0 00 A0 FD | 	call	#pushregs_
07430     2E 6B 02 F6 | 	mov	local01, arg01
07434     2F 6D 02 F6 | 	mov	local02, arg02
07438     31 6F 02 F6 | 	mov	local03, arg04
0743c     36 71 EA F8 | 	getbyte	local04, local02, #1
07440     16 6C 46 F0 | 	shr	local02, #22
07444     03 6C 0E F5 | 	and	local02, #3 wz
07448     00 72 06 F6 | 	mov	local05, #0
0744c     01 6C 06 A6 |  if_e	mov	local02, #1
07450     37 6D CA F7 | 	test	local02, local03 wz
07454     00 2A 06 A6 |  if_e	mov	result1, #0
07458     80 00 90 AD |  if_e	jmp	#LR__0399
0745c     30 71 82 F1 | 	sub	local04, arg03
07460     38 75 02 F6 | 	mov	local06, local04
07464     00 74 5E F2 | 	cmps	local06, #0 wcz
07468     00 2A 06 E6 |  if_be	mov	result1, #0
0746c     6C 00 90 ED |  if_be	jmp	#LR__0399
07470     03 6C 0E F2 | 	cmp	local02, #3 wz
07474     18 00 90 5D |  if_ne	jmp	#LR__0396
07478     01 6E 0E F2 | 	cmp	local03, #1 wz
0747c     6E 76 62 FD | 	wrz	local07
07480     3B 75 02 F1 | 	add	local06, local07
07484     3A 75 52 F6 | 	abs	local06, local06 wc
07488     01 74 46 F0 | 	shr	local06, #1
0748c     3A 75 62 C6 |  if_b	neg	local06, local06
07490                 | LR__0396
07490     00 74 5E F2 | 	cmps	local06, #0 wcz
07494     40 00 90 ED |  if_be	jmp	#LR__0398
07498     3A 79 02 F6 | 	mov	local08, local06
0749c                 | LR__0397
0749c     35 7B 02 F6 | 	mov	local09, local01
074a0     3D 77 02 FB | 	rdlong	local07, local09
074a4     04 7A 06 F1 | 	add	local09, #4
074a8     3D 7D 02 FB | 	rdlong	local10, local09
074ac     20 5C 06 F6 | 	mov	arg01, #32
074b0     07 7F 02 F6 | 	mov	local11, objptr
074b4     3B 0F 02 F6 | 	mov	objptr, local07
074b8     2D 7C 62 FD | 	call	local10
074bc     3F 0F 02 F6 | 	mov	objptr, local11
074c0     15 81 02 F6 | 	mov	local12, result1
074c4     00 80 5E F2 | 	cmps	local12, #0 wcz
074c8     40 2B 02 C6 |  if_b	mov	result1, local12
074cc     0C 00 90 CD |  if_b	jmp	#LR__0399
074d0     40 73 02 F1 | 	add	local05, local12
074d4     F1 79 6E FB | 	djnz	local08, #LR__0397
074d8                 | LR__0398
074d8     39 2B 02 F6 | 	mov	result1, local05
074dc                 | LR__0399
074dc     AF F0 03 F6 | 	mov	ptra, fp
074e0     BF 00 A0 FD | 	call	#popregs_
074e4                 | __system___fmtpad_ret
074e4     2D 00 64 FD | 	ret
074e8                 | 
074e8                 | __system___uitoa
074e8     09 5A 05 F6 | 	mov	COUNT_, #9
074ec     B0 00 A0 FD | 	call	#pushregs_
074f0     2E 6B 02 F6 | 	mov	local01, arg01
074f4     2F 6D 02 F6 | 	mov	local02, arg02
074f8     30 6F 02 F6 | 	mov	local03, arg03
074fc     31 71 02 F6 | 	mov	local04, arg04
07500     32 73 0A F6 | 	mov	local05, arg05 wz
07504     35 75 02 F6 | 	mov	local06, local01
07508     00 76 06 F6 | 	mov	local07, #0
0750c     37 78 06 56 |  if_ne	mov	local08, #55
07510     57 78 06 A6 |  if_e	mov	local08, #87
07514                 | LR__0400
07514     36 0B 03 F6 | 	mov	muldiva_, local02
07518     37 0D 03 F6 | 	mov	muldivb_, local03
0751c     CC 00 A0 FD | 	call	#unsdivide_
07520     85 7B 02 F6 | 	mov	local09, muldiva_
07524     0A 7A 1E F2 | 	cmp	local09, #10 wcz
07528     30 7A 06 C1 |  if_b	add	local09, #48
0752c     3C 7B 02 31 |  if_ae	add	local09, local08
07530     3A 7B 42 FC | 	wrbyte	local09, local06
07534     36 0B 03 F6 | 	mov	muldiva_, local02
07538     37 0D 03 F6 | 	mov	muldivb_, local03
0753c     01 74 06 F1 | 	add	local06, #1
07540     CC 00 A0 FD | 	call	#unsdivide_
07544     86 6D 0A F6 | 	mov	local02, muldivb_ wz
07548     01 76 06 F1 | 	add	local07, #1
0754c     C4 FF 9F 5D |  if_ne	jmp	#LR__0400
07550     38 77 1A F2 | 	cmp	local07, local04 wcz
07554     BC FF 9F CD |  if_b	jmp	#LR__0400
07558     3A 01 48 FC | 	wrbyte	#0, local06
0755c     35 5D 02 F6 | 	mov	arg01, local01
07560     78 FE BF FD | 	call	#__system___strrev
07564     3B 2B 02 F6 | 	mov	result1, local07
07568     AF F0 03 F6 | 	mov	ptra, fp
0756c     BF 00 A0 FD | 	call	#popregs_
07570                 | __system___uitoa_ret
07570     2D 00 64 FD | 	ret
07574                 | 
07574                 | __system___gettxfunc
07574     03 5A 05 F6 | 	mov	COUNT_, #3
07578     B0 00 A0 FD | 	call	#pushregs_
0757c     30 FE BF FD | 	call	#__system____getftab
07580     15 6B 0A F6 | 	mov	local01, result1 wz
07584     14 00 90 AD |  if_e	jmp	#LR__0401
07588     08 6A 06 F1 | 	add	local01, #8
0758c     35 6D 02 FB | 	rdlong	local02, local01
07590     08 6A 86 F1 | 	sub	local01, #8
07594     36 6F 0A F6 | 	mov	local03, local02 wz
07598     08 00 90 5D |  if_ne	jmp	#LR__0402
0759c                 | LR__0401
0759c     00 2A 06 F6 | 	mov	result1, #0
075a0     0C 00 90 FD | 	jmp	#LR__0403
075a4                 | LR__0402
075a4     35 5D 02 F6 | 	mov	arg01, local01
075a8     09 5F 02 F6 | 	mov	arg02, ptr___struct__s_vfs_file_t_putchar_
075ac     88 E9 BF FD | 	call	#__system___make_methodptr
075b0                 | LR__0403
075b0     AF F0 03 F6 | 	mov	ptra, fp
075b4     BF 00 A0 FD | 	call	#popregs_
075b8                 | __system___gettxfunc_ret
075b8     2D 00 64 FD | 	ret
075bc                 | 
075bc                 | __system___getiolock_0145
075bc     03 5A 05 F6 | 	mov	COUNT_, #3
075c0     B0 00 A0 FD | 	call	#pushregs_
075c4     E8 FD BF FD | 	call	#__system____getftab
075c8     15 6B 0A F6 | 	mov	local01, result1 wz
075cc     14 00 90 AD |  if_e	jmp	#LR__0404
075d0     08 6A 06 F1 | 	add	local01, #8
075d4     35 6D 02 FB | 	rdlong	local02, local01
075d8     08 6A 86 F1 | 	sub	local01, #8
075dc     36 6F 0A F6 | 	mov	local03, local02 wz
075e0     10 00 90 5D |  if_ne	jmp	#LR__0405
075e4                 | LR__0404
075e4     18 14 06 F1 | 	add	ptr___system__dat__, #24
075e8     0A 2B 02 F6 | 	mov	result1, ptr___system__dat__
075ec     18 14 86 F1 | 	sub	ptr___system__dat__, #24
075f0     08 00 90 FD | 	jmp	#LR__0406
075f4                 | LR__0405
075f4     0C 6A 06 F1 | 	add	local01, #12
075f8     35 2B 02 F6 | 	mov	result1, local01
075fc                 | LR__0406
075fc     AF F0 03 F6 | 	mov	ptra, fp
07600     BF 00 A0 FD | 	call	#popregs_
07604                 | __system___getiolock_0145_ret
07604     2D 00 64 FD | 	ret
07608                 | 
07608                 | __system___closeraw
07608     06 5A 05 F6 | 	mov	COUNT_, #6
0760c     B0 00 A0 FD | 	call	#pushregs_
07610     2E 6B 02 F6 | 	mov	local01, arg01
07614     00 6C 06 F6 | 	mov	local02, #0
07618     08 6A 06 F1 | 	add	local01, #8
0761c     35 6F 0A FB | 	rdlong	local03, local01 wz
07620     08 6A 86 F1 | 	sub	local01, #8
07624     1C 00 90 5D |  if_ne	jmp	#LR__0407
07628     01 00 00 FF 
0762c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07630     0A 0B 68 FC | 	wrlong	#5, ptr___system__dat__
07634     01 00 00 FF 
07638     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
0763c     01 2A 66 F6 | 	neg	result1, #1
07640     90 00 90 FD | 	jmp	#LR__0410
07644                 | LR__0407
07644     28 6A 06 F1 | 	add	local01, #40
07648     35 6F 0A FB | 	rdlong	local03, local01 wz
0764c     28 6A 86 F1 | 	sub	local01, #40
07650     2C 00 90 AD |  if_e	jmp	#LR__0408
07654     28 6A 06 F1 | 	add	local01, #40
07658     35 6F 02 FB | 	rdlong	local03, local01
0765c     28 6A 86 F1 | 	sub	local01, #40
07660     37 71 02 FB | 	rdlong	local04, local03
07664     04 6E 06 F1 | 	add	local03, #4
07668     37 73 02 FB | 	rdlong	local05, local03
0766c     35 5D 02 F6 | 	mov	arg01, local01
07670     07 75 02 F6 | 	mov	local06, objptr
07674     38 0F 02 F6 | 	mov	objptr, local04
07678     2D 72 62 FD | 	call	local05
0767c     3A 0F 02 F6 | 	mov	objptr, local06
07680                 | LR__0408
07680     20 6A 06 F1 | 	add	local01, #32
07684     35 6F 0A FB | 	rdlong	local03, local01 wz
07688     20 6A 86 F1 | 	sub	local01, #32
0768c     30 00 90 AD |  if_e	jmp	#LR__0409
07690     20 6A 06 F1 | 	add	local01, #32
07694     35 6F 02 FB | 	rdlong	local03, local01
07698     20 6A 86 F1 | 	sub	local01, #32
0769c     37 71 02 FB | 	rdlong	local04, local03
076a0     04 6E 06 F1 | 	add	local03, #4
076a4     37 73 02 FB | 	rdlong	local05, local03
076a8     35 5D 02 F6 | 	mov	arg01, local01
076ac     07 75 02 F6 | 	mov	local06, objptr
076b0     38 0F 02 F6 | 	mov	objptr, local04
076b4     2D 72 62 FD | 	call	local05
076b8     3A 0F 02 F6 | 	mov	objptr, local06
076bc     15 6D 02 F6 | 	mov	local02, result1
076c0                 | LR__0409
076c0     35 5D 02 F6 | 	mov	arg01, local01
076c4     00 5E 06 F6 | 	mov	arg02, #0
076c8     30 60 06 F6 | 	mov	arg03, #48
076cc     A0 00 A0 FD | 	call	#\builtin_bytefill_
076d0     36 2B 02 F6 | 	mov	result1, local02
076d4                 | LR__0410
076d4     AF F0 03 F6 | 	mov	ptra, fp
076d8     BF 00 A0 FD | 	call	#popregs_
076dc                 | __system___closeraw_ret
076dc     2D 00 64 FD | 	ret
076e0                 | 
076e0                 | __system____default_getc
076e0     0C 5A 05 F6 | 	mov	COUNT_, #12
076e4     B0 00 A0 FD | 	call	#pushregs_
076e8     2E 6B 02 F6 | 	mov	local01, arg01
076ec     35 6D 02 FB | 	rdlong	local02, local01
076f0     08 6C 06 F1 | 	add	local02, #8
076f4     36 6F 02 FB | 	rdlong	local03, local02
076f8     08 6C 86 F1 | 	sub	local02, #8
076fc     02 6E CE F7 | 	test	local03, #2 wz
07700     08 00 90 AD |  if_e	jmp	#LR__0411
07704     35 5D 02 F6 | 	mov	arg01, local01
07708     FC 01 B0 FD | 	call	#__system____default_flush
0770c                 | LR__0411
0770c     08 6C 06 F1 | 	add	local02, #8
07710     36 6F 02 FB | 	rdlong	local03, local02
07714     01 6E 46 F5 | 	or	local03, #1
07718     36 6F 62 FC | 	wrlong	local03, local02
0771c     08 6C 86 F1 | 	sub	local02, #8
07720     36 71 0A FB | 	rdlong	local04, local02 wz
07724     7C 00 90 5D |  if_ne	jmp	#LR__0413
07728     35 5D 02 F6 | 	mov	arg01, local01
0772c     2E 73 02 FB | 	rdlong	local05, arg01
07730     0C 72 06 F1 | 	add	local05, #12
07734     39 5F 02 F6 | 	mov	arg02, local05
07738     0C 72 86 F1 | 	sub	local05, #12
0773c     10 5C 06 F1 | 	add	arg01, #16
07740     2E 75 02 FB | 	rdlong	local06, arg01
07744     10 5C 86 F1 | 	sub	arg01, #16
07748     3A 77 02 FB | 	rdlong	local07, local06
0774c     04 74 06 F1 | 	add	local06, #4
07750     3A 79 02 FB | 	rdlong	local08, local06
07754     0A 60 C6 F9 | 	decod	arg03, #10
07758     07 7B 02 F6 | 	mov	local09, objptr
0775c     3B 0F 02 F6 | 	mov	objptr, local07
07760     2D 78 62 FD | 	call	local08
07764     3D 0F 02 F6 | 	mov	objptr, local09
07768     15 7D 02 F6 | 	mov	local10, result1
0776c     00 7C 5E F2 | 	cmps	local10, #0 wcz
07770     01 2A 66 C6 |  if_b	neg	result1, #1
07774     28 00 90 CD |  if_b	jmp	#LR__0412
07778     39 7D 62 FC | 	wrlong	local10, local05
0777c     0C 72 06 F1 | 	add	local05, #12
07780     39 7F 02 F6 | 	mov	local11, local05
07784     08 72 86 F1 | 	sub	local05, #8
07788     39 7F 62 FC | 	wrlong	local11, local05
0778c     04 72 06 F1 | 	add	local05, #4
07790     39 75 02 FB | 	rdlong	local06, local05
07794     01 74 46 F5 | 	or	local06, #1
07798     39 75 62 FC | 	wrlong	local06, local05
0779c     3E 2B 02 F6 | 	mov	result1, local10
077a0                 | LR__0412
077a0     15 71 02 F6 | 	mov	local04, result1
077a4                 | LR__0413
077a4     00 70 5E F2 | 	cmps	local04, #0 wcz
077a8     01 2A 66 E6 |  if_be	neg	result1, #1
077ac     1C 00 90 ED |  if_be	jmp	#LR__0414
077b0     01 70 86 F1 | 	sub	local04, #1
077b4     36 71 62 FC | 	wrlong	local04, local02
077b8     04 6C 06 F1 | 	add	local02, #4
077bc     36 81 02 FB | 	rdlong	local12, local02
077c0     40 2B C2 FA | 	rdbyte	result1, local12
077c4     01 80 06 F1 | 	add	local12, #1
077c8     36 81 62 FC | 	wrlong	local12, local02
077cc                 | LR__0414
077cc     AF F0 03 F6 | 	mov	ptra, fp
077d0     BF 00 A0 FD | 	call	#popregs_
077d4                 | __system____default_getc_ret
077d4     2D 00 64 FD | 	ret
077d8                 | 
077d8                 | __system____default_putc
077d8     06 5A 05 F6 | 	mov	COUNT_, #6
077dc     B0 00 A0 FD | 	call	#pushregs_
077e0     2E 6B 02 F6 | 	mov	local01, arg01
077e4     2F 6D 02 F6 | 	mov	local02, arg02
077e8     36 6F 02 FB | 	rdlong	local03, local02
077ec     08 6E 06 F1 | 	add	local03, #8
077f0     37 71 02 FB | 	rdlong	local04, local03
077f4     08 6E 86 F1 | 	sub	local03, #8
077f8     01 70 CE F7 | 	test	local04, #1 wz
077fc     08 00 90 AD |  if_e	jmp	#LR__0415
07800     36 5D 02 F6 | 	mov	arg01, local02
07804     00 01 B0 FD | 	call	#__system____default_flush
07808                 | LR__0415
07808     08 6E 06 F1 | 	add	local03, #8
0780c     37 71 02 FB | 	rdlong	local04, local03
07810     02 70 46 F5 | 	or	local04, #2
07814     37 71 62 FC | 	wrlong	local04, local03
07818     08 6E 86 F1 | 	sub	local03, #8
0781c     37 73 02 FB | 	rdlong	local05, local03
07820     39 75 02 F6 | 	mov	local06, local05
07824     0C 6E 06 F1 | 	add	local03, #12
07828     37 75 02 F1 | 	add	local06, local03
0782c     3A 6B 42 FC | 	wrbyte	local01, local06
07830     FF 6A 06 F5 | 	and	local01, #255
07834     01 72 06 F1 | 	add	local05, #1
07838     0C 6E 86 F1 | 	sub	local03, #12
0783c     37 73 62 FC | 	wrlong	local05, local03
07840     02 00 00 FF 
07844     00 72 0E F2 | 	cmp	local05, ##1024 wz
07848     10 00 90 5D |  if_ne	jmp	#LR__0416
0784c     36 5D 02 F6 | 	mov	arg01, local02
07850     B4 00 B0 FD | 	call	#__system____default_flush
07854     00 2A 0E F2 | 	cmp	result1, #0 wz
07858     01 6A 66 56 |  if_ne	neg	local01, #1
0785c                 | LR__0416
0785c     35 2B 02 F6 | 	mov	result1, local01
07860     AF F0 03 F6 | 	mov	ptra, fp
07864     BF 00 A0 FD | 	call	#popregs_
07868                 | __system____default_putc_ret
07868     2D 00 64 FD | 	ret
0786c                 | 
0786c                 | __system____default_putc_terminal
0786c     06 5A 05 F6 | 	mov	COUNT_, #6
07870     B0 00 A0 FD | 	call	#pushregs_
07874     2E 6B 02 F6 | 	mov	local01, arg01
07878     2F 6D 02 F6 | 	mov	local02, arg02
0787c     36 6F 02 FB | 	rdlong	local03, local02
07880     08 6E 06 F1 | 	add	local03, #8
07884     37 71 02 FB | 	rdlong	local04, local03
07888     08 6E 86 F1 | 	sub	local03, #8
0788c     01 70 CE F7 | 	test	local04, #1 wz
07890     08 00 90 AD |  if_e	jmp	#LR__0417
07894     36 5D 02 F6 | 	mov	arg01, local02
07898     6C 00 B0 FD | 	call	#__system____default_flush
0789c                 | LR__0417
0789c     08 6E 06 F1 | 	add	local03, #8
078a0     37 71 02 FB | 	rdlong	local04, local03
078a4     02 70 46 F5 | 	or	local04, #2
078a8     37 71 62 FC | 	wrlong	local04, local03
078ac     08 6E 86 F1 | 	sub	local03, #8
078b0     37 73 02 FB | 	rdlong	local05, local03
078b4     39 75 02 F6 | 	mov	local06, local05
078b8     0C 6E 06 F1 | 	add	local03, #12
078bc     37 75 02 F1 | 	add	local06, local03
078c0     3A 6B 42 FC | 	wrbyte	local01, local06
078c4     FF 6A 06 F5 | 	and	local01, #255
078c8     0C 6E 86 F1 | 	sub	local03, #12
078cc     01 72 06 F1 | 	add	local05, #1
078d0     37 73 62 FC | 	wrlong	local05, local03
078d4     0A 6A 0E F2 | 	cmp	local01, #10 wz
078d8     0C 00 90 AD |  if_e	jmp	#LR__0418
078dc     02 00 00 FF 
078e0     00 72 0E F2 | 	cmp	local05, ##1024 wz
078e4     10 00 90 5D |  if_ne	jmp	#LR__0419
078e8                 | LR__0418
078e8     36 5D 02 F6 | 	mov	arg01, local02
078ec     18 00 B0 FD | 	call	#__system____default_flush
078f0     00 2A 0E F2 | 	cmp	result1, #0 wz
078f4     01 6A 66 56 |  if_ne	neg	local01, #1
078f8                 | LR__0419
078f8     35 2B 02 F6 | 	mov	result1, local01
078fc     AF F0 03 F6 | 	mov	ptra, fp
07900     BF 00 A0 FD | 	call	#popregs_
07904                 | __system____default_putc_terminal_ret
07904     2D 00 64 FD | 	ret
07908                 | 
07908                 | __system____default_flush
07908     0F 5A 05 F6 | 	mov	COUNT_, #15
0790c     B0 00 A0 FD | 	call	#pushregs_
07910     2E 6B 02 F6 | 	mov	local01, arg01
07914     35 6D 02 FB | 	rdlong	local02, local01
07918     36 6F 02 FB | 	rdlong	local03, local02
0791c     08 6C 06 F1 | 	add	local02, #8
07920     36 71 02 FB | 	rdlong	local04, local02
07924     08 6C 86 F1 | 	sub	local02, #8
07928     02 70 CE F7 | 	test	local04, #2 wz
0792c     B8 00 90 AD |  if_e	jmp	#LR__0422
07930     00 6E 5E F2 | 	cmps	local03, #0 wcz
07934     30 01 90 ED |  if_be	jmp	#LR__0424
07938     08 6A 06 F1 | 	add	local01, #8
0793c     35 71 02 FB | 	rdlong	local04, local01
07940     08 6A 86 F1 | 	sub	local01, #8
07944     40 70 CE F7 | 	test	local04, #64 wz
07948     5C 00 90 AD |  if_e	jmp	#LR__0421
0794c     08 6A 06 F1 | 	add	local01, #8
07950     35 71 02 FB | 	rdlong	local04, local01
07954     08 6A 86 F1 | 	sub	local01, #8
07958     80 70 CE F7 | 	test	local04, #128 wz
0795c     48 00 90 AD |  if_e	jmp	#LR__0420
07960     2C 6A 06 F1 | 	add	local01, #44
07964     35 71 02 FB | 	rdlong	local04, local01
07968     2C 6A 86 F1 | 	sub	local01, #44
0796c     38 73 02 FB | 	rdlong	local05, local04
07970     04 70 06 F1 | 	add	local04, #4
07974     38 75 02 FB | 	rdlong	local06, local04
07978     35 5D 02 F6 | 	mov	arg01, local01
0797c     00 5E 06 F6 | 	mov	arg02, #0
07980     02 60 06 F6 | 	mov	arg03, #2
07984     07 77 02 F6 | 	mov	local07, objptr
07988     39 0F 02 F6 | 	mov	objptr, local05
0798c     2D 74 62 FD | 	call	local06
07990     3B 0F 02 F6 | 	mov	objptr, local07
07994     08 6A 06 F1 | 	add	local01, #8
07998     35 71 02 FB | 	rdlong	local04, local01
0799c     80 70 26 F5 | 	andn	local04, #128
079a0     35 71 62 FC | 	wrlong	local04, local01
079a4     08 6A 86 F1 | 	sub	local01, #8
079a8                 | LR__0420
079a8                 | LR__0421
079a8     0C 6C 06 F1 | 	add	local02, #12
079ac     36 5F 02 F6 | 	mov	arg02, local02
079b0     0C 6C 86 F1 | 	sub	local02, #12
079b4     14 6A 06 F1 | 	add	local01, #20
079b8     35 71 02 FB | 	rdlong	local04, local01
079bc     14 6A 86 F1 | 	sub	local01, #20
079c0     38 73 02 FB | 	rdlong	local05, local04
079c4     04 70 06 F1 | 	add	local04, #4
079c8     38 75 02 FB | 	rdlong	local06, local04
079cc     35 5D 02 F6 | 	mov	arg01, local01
079d0     37 61 02 F6 | 	mov	arg03, local03
079d4     07 77 02 F6 | 	mov	local07, objptr
079d8     39 0F 02 F6 | 	mov	objptr, local05
079dc     2D 74 62 FD | 	call	local06
079e0     3B 0F 02 F6 | 	mov	objptr, local07
079e4     80 00 90 FD | 	jmp	#LR__0424
079e8                 | LR__0422
079e8     08 6C 06 F1 | 	add	local02, #8
079ec     36 71 02 FB | 	rdlong	local04, local02
079f0     08 6C 86 F1 | 	sub	local02, #8
079f4     01 70 CE F7 | 	test	local04, #1 wz
079f8     6C 00 90 AD |  if_e	jmp	#LR__0423
079fc     00 6E 0E F2 | 	cmp	local03, #0 wz
07a00     64 00 90 AD |  if_e	jmp	#LR__0423
07a04     2C 6A 06 F1 | 	add	local01, #44
07a08     35 79 02 FB | 	rdlong	local08, local01
07a0c     2C 6A 86 F1 | 	sub	local01, #44
07a10     3C 71 02 F6 | 	mov	local04, local08
07a14     38 73 02 FB | 	rdlong	local05, local04
07a18     04 70 06 F1 | 	add	local04, #4
07a1c     38 7B 02 FB | 	rdlong	local09, local04
07a20     04 70 86 F1 | 	sub	local04, #4
07a24     3D 75 02 F6 | 	mov	local06, local09
07a28     35 7D 02 F6 | 	mov	local10, local01
07a2c     37 7F 02 F6 | 	mov	local11, local03
07a30     3F 7F 62 F6 | 	neg	local11, local11
07a34     3F 81 02 F6 | 	mov	local12, local11
07a38     01 76 06 F6 | 	mov	local07, #1
07a3c     3E 5D 02 F6 | 	mov	arg01, local10
07a40     40 5F 02 F6 | 	mov	arg02, local12
07a44     01 60 06 F6 | 	mov	arg03, #1
07a48     07 83 02 F6 | 	mov	local13, objptr
07a4c     39 0F 02 F6 | 	mov	objptr, local05
07a50     2D 74 62 FD | 	call	local06
07a54     41 0F 02 F6 | 	mov	objptr, local13
07a58     15 85 02 F6 | 	mov	local14, result1
07a5c     42 87 02 F6 | 	mov	local15, local14
07a60     00 86 5E F2 | 	cmps	local15, #0 wcz
07a64     37 87 02 36 |  if_ae	mov	local15, local03
07a68                 | LR__0423
07a68                 | LR__0424
07a68     36 01 68 FC | 	wrlong	#0, local02
07a6c     04 6C 06 F1 | 	add	local02, #4
07a70     36 01 68 FC | 	wrlong	#0, local02
07a74     04 6C 06 F1 | 	add	local02, #4
07a78     36 01 68 FC | 	wrlong	#0, local02
07a7c     00 2A 06 F6 | 	mov	result1, #0
07a80     AF F0 03 F6 | 	mov	ptra, fp
07a84     BF 00 A0 FD | 	call	#popregs_
07a88                 | __system____default_flush_ret
07a88     2D 00 64 FD | 	ret
07a8c                 | 
07a8c                 | __system___rxtxioctl_0174
07a8c     02 5A 05 F6 | 	mov	COUNT_, #2
07a90     B0 00 A0 FD | 	call	#pushregs_
07a94     2F 6B 02 F6 | 	mov	local01, arg02
07a98     30 6D 02 F6 | 	mov	local02, arg03
07a9c     00 6B 0E F2 | 	cmp	local01, #256 wz
07aa0     0C 00 90 AD |  if_e	jmp	#LR__0425
07aa4     01 6B 0E F2 | 	cmp	local01, #257 wz
07aa8     1C 00 90 AD |  if_e	jmp	#LR__0426
07aac     30 00 90 FD | 	jmp	#LR__0427
07ab0                 | LR__0425
07ab0     08 14 06 F1 | 	add	ptr___system__dat__, #8
07ab4     0A 2B 02 FB | 	rdlong	result1, ptr___system__dat__
07ab8     08 14 86 F1 | 	sub	ptr___system__dat__, #8
07abc     36 2B 62 FC | 	wrlong	result1, local02
07ac0     00 2A 06 F6 | 	mov	result1, #0
07ac4     30 00 90 FD | 	jmp	#LR__0428
07ac8                 | LR__0426
07ac8     36 5D 02 FB | 	rdlong	arg01, local02
07acc     08 14 06 F1 | 	add	ptr___system__dat__, #8
07ad0     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
07ad4     08 14 86 F1 | 	sub	ptr___system__dat__, #8
07ad8     00 2A 06 F6 | 	mov	result1, #0
07adc     18 00 90 FD | 	jmp	#LR__0428
07ae0                 | LR__0427
07ae0     01 00 00 FF 
07ae4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07ae8     0A 15 68 FC | 	wrlong	#10, ptr___system__dat__
07aec     01 00 00 FF 
07af0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07af4     01 2A 66 F6 | 	neg	result1, #1
07af8                 | LR__0428
07af8     AF F0 03 F6 | 	mov	ptra, fp
07afc     BF 00 A0 FD | 	call	#popregs_
07b00                 | __system___rxtxioctl_0174_ret
07b00     2D 00 64 FD | 	ret
07b04                 | 
07b04                 | __system____dummy_flush_0175
07b04     00 2A 06 F6 | 	mov	result1, #0
07b08                 | __system____dummy_flush_0175_ret
07b08     2D 00 64 FD | 	ret
07b0c                 | 
07b0c                 | __system___vfswrite
07b0c     0B 5A 05 F6 | 	mov	COUNT_, #11
07b10     B0 00 A0 FD | 	call	#pushregs_
07b14     2E 6B 02 F6 | 	mov	local01, arg01
07b18     2F 6D 02 F6 | 	mov	local02, arg02
07b1c     30 6F 02 F6 | 	mov	local03, arg03
07b20     36 71 02 F6 | 	mov	local04, local02
07b24     08 6A 06 F1 | 	add	local01, #8
07b28     35 73 02 FB | 	rdlong	local05, local01
07b2c     08 6A 86 F1 | 	sub	local01, #8
07b30     02 72 CE F7 | 	test	local05, #2 wz
07b34     1C 00 90 5D |  if_ne	jmp	#LR__0429
07b38     01 00 00 FF 
07b3c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07b40     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07b44     01 00 00 FF 
07b48     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07b4c     01 2A 66 F6 | 	neg	result1, #1
07b50     70 01 90 FD | 	jmp	#LR__0437
07b54                 | LR__0429
07b54     08 6A 06 F1 | 	add	local01, #8
07b58     35 73 02 FB | 	rdlong	local05, local01
07b5c     08 6A 86 F1 | 	sub	local01, #8
07b60     40 72 CE F7 | 	test	local05, #64 wz
07b64     5C 00 90 AD |  if_e	jmp	#LR__0431
07b68     08 6A 06 F1 | 	add	local01, #8
07b6c     35 73 02 FB | 	rdlong	local05, local01
07b70     08 6A 86 F1 | 	sub	local01, #8
07b74     80 72 CE F7 | 	test	local05, #128 wz
07b78     48 00 90 AD |  if_e	jmp	#LR__0430
07b7c     2C 6A 06 F1 | 	add	local01, #44
07b80     35 73 02 FB | 	rdlong	local05, local01
07b84     2C 6A 86 F1 | 	sub	local01, #44
07b88     39 75 02 FB | 	rdlong	local06, local05
07b8c     04 72 06 F1 | 	add	local05, #4
07b90     39 77 02 FB | 	rdlong	local07, local05
07b94     35 5D 02 F6 | 	mov	arg01, local01
07b98     00 5E 06 F6 | 	mov	arg02, #0
07b9c     02 60 06 F6 | 	mov	arg03, #2
07ba0     07 79 02 F6 | 	mov	local08, objptr
07ba4     3A 0F 02 F6 | 	mov	objptr, local06
07ba8     2D 76 62 FD | 	call	local07
07bac     3C 0F 02 F6 | 	mov	objptr, local08
07bb0     08 6A 06 F1 | 	add	local01, #8
07bb4     35 73 02 FB | 	rdlong	local05, local01
07bb8     80 72 26 F5 | 	andn	local05, #128
07bbc     35 73 62 FC | 	wrlong	local05, local01
07bc0     08 6A 86 F1 | 	sub	local01, #8
07bc4                 | LR__0430
07bc4                 | LR__0431
07bc4     14 6A 06 F1 | 	add	local01, #20
07bc8     35 73 0A FB | 	rdlong	local05, local01 wz
07bcc     14 6A 86 F1 | 	sub	local01, #20
07bd0     7C 00 90 AD |  if_e	jmp	#LR__0433
07bd4     14 6A 06 F1 | 	add	local01, #20
07bd8     35 73 02 FB | 	rdlong	local05, local01
07bdc     14 6A 86 F1 | 	sub	local01, #20
07be0     39 75 02 FB | 	rdlong	local06, local05
07be4     04 72 06 F1 | 	add	local05, #4
07be8     39 77 02 FB | 	rdlong	local07, local05
07bec     36 5F 02 F6 | 	mov	arg02, local02
07bf0     37 61 02 F6 | 	mov	arg03, local03
07bf4     35 5D 02 F6 | 	mov	arg01, local01
07bf8     07 79 02 F6 | 	mov	local08, objptr
07bfc     3A 0F 02 F6 | 	mov	objptr, local06
07c00     2D 76 62 FD | 	call	local07
07c04     3C 0F 02 F6 | 	mov	objptr, local08
07c08     15 7B 02 F6 | 	mov	local09, result1
07c0c     00 7A 5E F2 | 	cmps	local09, #0 wcz
07c10     34 00 90 3D |  if_ae	jmp	#LR__0432
07c14     08 6A 06 F1 | 	add	local01, #8
07c18     35 73 02 FB | 	rdlong	local05, local01
07c1c     20 72 46 F5 | 	or	local05, #32
07c20     35 73 62 FC | 	wrlong	local05, local01
07c24     01 00 00 FF 
07c28     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07c2c     0A 7B 62 FC | 	wrlong	local09, ptr___system__dat__
07c30     01 00 00 FF 
07c34     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07c38     00 7A 0E F2 | 	cmp	local09, #0 wz
07c3c     01 2A 66 56 |  if_ne	neg	result1, #1
07c40     00 2A 06 A6 |  if_e	mov	result1, #0
07c44     7C 00 90 FD | 	jmp	#LR__0437
07c48                 | LR__0432
07c48     3D 2B 02 F6 | 	mov	result1, local09
07c4c     74 00 90 FD | 	jmp	#LR__0437
07c50                 | LR__0433
07c50     18 6A 06 F1 | 	add	local01, #24
07c54     35 7D 0A FB | 	rdlong	local10, local01 wz
07c58     18 6A 86 F1 | 	sub	local01, #24
07c5c     1C 00 90 5D |  if_ne	jmp	#LR__0434
07c60     01 00 00 FF 
07c64     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07c68     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07c6c     01 00 00 FF 
07c70     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07c74     01 2A 66 F6 | 	neg	result1, #1
07c78     48 00 90 FD | 	jmp	#LR__0437
07c7c                 | LR__0434
07c7c     00 7A 06 F6 | 	mov	local09, #0
07c80                 | LR__0435
07c80     00 6E 1E F2 | 	cmp	local03, #0 wcz
07c84     38 00 90 ED |  if_be	jmp	#LR__0436
07c88     3E 73 02 F6 | 	mov	local05, local10
07c8c     39 75 02 FB | 	rdlong	local06, local05
07c90     04 72 06 F1 | 	add	local05, #4
07c94     39 77 02 FB | 	rdlong	local07, local05
07c98     38 5D C2 FA | 	rdbyte	arg01, local04
07c9c     35 5F 02 F6 | 	mov	arg02, local01
07ca0     07 7F 02 F6 | 	mov	local11, objptr
07ca4     3A 0F 02 F6 | 	mov	objptr, local06
07ca8     01 70 06 F1 | 	add	local04, #1
07cac     2D 76 62 FD | 	call	local07
07cb0     3F 0F 02 F6 | 	mov	objptr, local11
07cb4     15 7B 02 F1 | 	add	local09, result1
07cb8     01 6E 86 F1 | 	sub	local03, #1
07cbc     C0 FF 9F FD | 	jmp	#LR__0435
07cc0                 | LR__0436
07cc0     3D 2B 02 F6 | 	mov	result1, local09
07cc4                 | LR__0437
07cc4     AF F0 03 F6 | 	mov	ptra, fp
07cc8     BF 00 A0 FD | 	call	#popregs_
07ccc                 | __system___vfswrite_ret
07ccc     2D 00 64 FD | 	ret
07cd0                 | 
07cd0                 | __system___vfsread
07cd0     0F 5A 05 F6 | 	mov	COUNT_, #15
07cd4     B0 00 A0 FD | 	call	#pushregs_
07cd8     2C F0 07 F1 | 	add	ptra, #44
07cdc     04 5E 05 F1 | 	add	fp, #4
07ce0     AF 5C 62 FC | 	wrlong	arg01, fp
07ce4     04 5E 05 F1 | 	add	fp, #4
07ce8     AF 5E 62 FC | 	wrlong	arg02, fp
07cec     04 5E 05 F1 | 	add	fp, #4
07cf0     AF 60 62 FC | 	wrlong	arg03, fp
07cf4     04 5E 85 F1 | 	sub	fp, #4
07cf8     AF 6A 02 FB | 	rdlong	local01, fp
07cfc     14 5E 05 F1 | 	add	fp, #20
07d00     AF 6A 62 FC | 	wrlong	local01, fp
07d04     04 5E 05 F1 | 	add	fp, #4
07d08     AF 00 68 FC | 	wrlong	#0, fp
07d0c     1C 5E 85 F1 | 	sub	fp, #28
07d10     AF 6C 02 FB | 	rdlong	local02, fp
07d14     04 5E 85 F1 | 	sub	fp, #4
07d18     08 6C 06 F1 | 	add	local02, #8
07d1c     36 6B 02 FB | 	rdlong	local01, local02
07d20     01 6A CE F7 | 	test	local01, #1 wz
07d24     1C 00 90 5D |  if_ne	jmp	#LR__0438
07d28     01 00 00 FF 
07d2c     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07d30     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07d34     01 00 00 FF 
07d38     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07d3c     01 2A 66 F6 | 	neg	result1, #1
07d40     9C 02 90 FD | 	jmp	#LR__0446
07d44                 | LR__0438
07d44     04 5E 05 F1 | 	add	fp, #4
07d48     AF 6A 02 FB | 	rdlong	local01, fp
07d4c     04 5E 85 F1 | 	sub	fp, #4
07d50     10 6A 06 F1 | 	add	local01, #16
07d54     35 6F 0A FB | 	rdlong	local03, local01 wz
07d58     B4 00 90 AD |  if_e	jmp	#LR__0440
07d5c     04 5E 05 F1 | 	add	fp, #4
07d60     AF 70 02 FB | 	rdlong	local04, fp
07d64     10 70 06 F1 | 	add	local04, #16
07d68     38 6B 02 FB | 	rdlong	local01, local04
07d6c     35 6D 02 FB | 	rdlong	local02, local01
07d70     04 6A 06 F1 | 	add	local01, #4
07d74     35 6F 02 FB | 	rdlong	local03, local01
07d78     AF 5C 02 FB | 	rdlong	arg01, fp
07d7c     04 5E 05 F1 | 	add	fp, #4
07d80     AF 5E 02 FB | 	rdlong	arg02, fp
07d84     04 5E 05 F1 | 	add	fp, #4
07d88     AF 60 02 FB | 	rdlong	arg03, fp
07d8c     0C 5E 85 F1 | 	sub	fp, #12
07d90     07 73 02 F6 | 	mov	local05, objptr
07d94     36 0F 02 F6 | 	mov	objptr, local02
07d98     2D 6E 62 FD | 	call	local03
07d9c     39 0F 02 F6 | 	mov	objptr, local05
07da0     10 5E 05 F1 | 	add	fp, #16
07da4     AF 2A 62 FC | 	wrlong	result1, fp
07da8     10 5E 85 F1 | 	sub	fp, #16
07dac     00 2A 5E F2 | 	cmps	result1, #0 wcz
07db0     4C 00 90 3D |  if_ae	jmp	#LR__0439
07db4     04 5E 05 F1 | 	add	fp, #4
07db8     AF 6A 02 FB | 	rdlong	local01, fp
07dbc     35 71 02 F6 | 	mov	local04, local01
07dc0     08 70 06 F1 | 	add	local04, #8
07dc4     38 6F 02 FB | 	rdlong	local03, local04
07dc8     20 6E 46 F5 | 	or	local03, #32
07dcc     08 6A 06 F1 | 	add	local01, #8
07dd0     35 6F 62 FC | 	wrlong	local03, local01
07dd4     0C 5E 05 F1 | 	add	fp, #12
07dd8     AF 5C 0A FB | 	rdlong	arg01, fp wz
07ddc     10 5E 85 F1 | 	sub	fp, #16
07de0     01 00 00 FF 
07de4     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07de8     0A 5D 62 FC | 	wrlong	arg01, ptr___system__dat__
07dec     01 00 00 FF 
07df0     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07df4     01 2A 66 56 |  if_ne	neg	result1, #1
07df8     00 2A 06 A6 |  if_e	mov	result1, #0
07dfc     E0 01 90 FD | 	jmp	#LR__0446
07e00                 | LR__0439
07e00     10 5E 05 F1 | 	add	fp, #16
07e04     AF 2A 02 FB | 	rdlong	result1, fp
07e08     10 5E 85 F1 | 	sub	fp, #16
07e0c     D0 01 90 FD | 	jmp	#LR__0446
07e10                 | LR__0440
07e10     04 5E 05 F1 | 	add	fp, #4
07e14     AF 6A 02 FB | 	rdlong	local01, fp
07e18     1C 6A 06 F1 | 	add	local01, #28
07e1c     35 6F 02 FB | 	rdlong	local03, local01
07e20     14 5E 05 F1 | 	add	fp, #20
07e24     AF 6E 62 FC | 	wrlong	local03, fp
07e28     AF 6A 0A FB | 	rdlong	local01, fp wz
07e2c     18 5E 85 F1 | 	sub	fp, #24
07e30     1C 00 90 5D |  if_ne	jmp	#LR__0441
07e34     01 00 00 FF 
07e38     5C 14 06 F1 | 	add	ptr___system__dat__, ##604
07e3c     0A 0D 68 FC | 	wrlong	#6, ptr___system__dat__
07e40     01 00 00 FF 
07e44     5C 14 86 F1 | 	sub	ptr___system__dat__, ##604
07e48     01 2A 66 F6 | 	neg	result1, #1
07e4c     90 01 90 FD | 	jmp	#LR__0446
07e50                 | LR__0441
07e50     04 5E 05 F1 | 	add	fp, #4
07e54     AF 6A 02 FB | 	rdlong	local01, fp
07e58     04 5E 85 F1 | 	sub	fp, #4
07e5c     24 6A 06 F1 | 	add	local01, #36
07e60     35 6F 0A FB | 	rdlong	local03, local01 wz
07e64     A0 00 90 AD |  if_e	jmp	#LR__0443
07e68     24 5E 05 F1 | 	add	fp, #36
07e6c     AF 74 02 F6 | 	mov	local06, fp
07e70     20 5E 85 F1 | 	sub	fp, #32
07e74     AF 76 02 FB | 	rdlong	local07, fp
07e78     3B 71 02 F6 | 	mov	local04, local07
07e7c     24 70 06 F1 | 	add	local04, #36
07e80     38 79 02 FB | 	rdlong	local08, local04
07e84     3C 6B 02 F6 | 	mov	local01, local08
07e88     35 6D 02 FB | 	rdlong	local02, local01
07e8c     04 6A 06 F1 | 	add	local01, #4
07e90     35 7B 02 FB | 	rdlong	local09, local01
07e94     3D 6F 02 F6 | 	mov	local03, local09
07e98     3B 7D 02 F6 | 	mov	local10, local07
07e9c     04 5E 85 F1 | 	sub	fp, #4
07ea0     3E 7F 02 F6 | 	mov	local11, local10
07ea4     00 81 06 F6 | 	mov	local12, #256
07ea8     3A 83 02 F6 | 	mov	local13, local06
07eac     3F 5D 02 F6 | 	mov	arg01, local11
07eb0     00 5F 06 F6 | 	mov	arg02, #256
07eb4     41 61 02 F6 | 	mov	arg03, local13
07eb8     07 85 02 F6 | 	mov	local14, objptr
07ebc     36 0F 02 F6 | 	mov	objptr, local02
07ec0     2D 6E 62 FD | 	call	local03
07ec4     42 0F 02 F6 | 	mov	objptr, local14
07ec8     15 87 02 F6 | 	mov	local15, result1
07ecc     10 5E 05 F1 | 	add	fp, #16
07ed0     AF 86 62 FC | 	wrlong	local15, fp
07ed4     AF 6C 0A FB | 	rdlong	local02, fp wz
07ed8     10 5E 85 F1 | 	sub	fp, #16
07edc     28 00 90 5D |  if_ne	jmp	#LR__0442
07ee0     24 5E 05 F1 | 	add	fp, #36
07ee4     AF 70 02 FB | 	rdlong	local04, fp
07ee8     24 5E 85 F1 | 	sub	fp, #36
07eec     38 6F 02 F6 | 	mov	local03, local04
07ef0     02 6E 0E F5 | 	and	local03, #2 wz
07ef4     10 00 90 AD |  if_e	jmp	#LR__0442
07ef8     01 6A 06 F6 | 	mov	local01, #1
07efc     20 5E 05 F1 | 	add	fp, #32
07f00     AF 02 68 FC | 	wrlong	#1, fp
07f04     20 5E 85 F1 | 	sub	fp, #32
07f08                 | LR__0442
07f08                 | LR__0443
07f08     10 5E 05 F1 | 	add	fp, #16
07f0c     AF 00 68 FC | 	wrlong	#0, fp
07f10     10 5E 85 F1 | 	sub	fp, #16
07f14                 | LR__0444
07f14     0C 5E 05 F1 | 	add	fp, #12
07f18     AF 6A 02 FB | 	rdlong	local01, fp
07f1c     0C 5E 85 F1 | 	sub	fp, #12
07f20     00 6A 1E F2 | 	cmp	local01, #0 wcz
07f24     AC 00 90 ED |  if_be	jmp	#LR__0445
07f28     18 5E 05 F1 | 	add	fp, #24
07f2c     AF 6A 02 FB | 	rdlong	local01, fp
07f30     35 6D 02 FB | 	rdlong	local02, local01
07f34     04 6A 06 F1 | 	add	local01, #4
07f38     35 6F 02 FB | 	rdlong	local03, local01
07f3c     14 5E 85 F1 | 	sub	fp, #20
07f40     AF 5C 02 FB | 	rdlong	arg01, fp
07f44     04 5E 85 F1 | 	sub	fp, #4
07f48     07 7F 02 F6 | 	mov	local11, objptr
07f4c     36 0F 02 F6 | 	mov	objptr, local02
07f50     2D 6E 62 FD | 	call	local03
07f54     3F 0F 02 F6 | 	mov	objptr, local11
07f58     15 7D 02 F6 | 	mov	local10, result1
07f5c     14 5E 05 F1 | 	add	fp, #20
07f60     AF 7C 62 FC | 	wrlong	local10, fp
07f64     14 5E 85 F1 | 	sub	fp, #20
07f68     00 7C 5E F2 | 	cmps	local10, #0 wcz
07f6c     64 00 90 CD |  if_b	jmp	#LR__0445
07f70     1C 5E 05 F1 | 	add	fp, #28
07f74     AF 6A 02 FB | 	rdlong	local01, fp
07f78     35 6F 02 F6 | 	mov	local03, local01
07f7c     01 6E 06 F1 | 	add	local03, #1
07f80     AF 6E 62 FC | 	wrlong	local03, fp
07f84     08 5E 85 F1 | 	sub	fp, #8
07f88     AF 76 02 FB | 	rdlong	local07, fp
07f8c     35 77 42 FC | 	wrbyte	local07, local01
07f90     04 5E 85 F1 | 	sub	fp, #4
07f94     AF 6A 02 FB | 	rdlong	local01, fp
07f98     01 6A 06 F1 | 	add	local01, #1
07f9c     AF 6A 62 FC | 	wrlong	local01, fp
07fa0     04 5E 85 F1 | 	sub	fp, #4
07fa4     AF 6A 02 FB | 	rdlong	local01, fp
07fa8     01 6A 86 F1 | 	sub	local01, #1
07fac     AF 6A 62 FC | 	wrlong	local01, fp
07fb0     14 5E 05 F1 | 	add	fp, #20
07fb4     AF 6A 0A FB | 	rdlong	local01, fp wz
07fb8     20 5E 85 F1 | 	sub	fp, #32
07fbc     54 FF 9F AD |  if_e	jmp	#LR__0444
07fc0     14 5E 05 F1 | 	add	fp, #20
07fc4     AF 6E 02 FB | 	rdlong	local03, fp
07fc8     14 5E 85 F1 | 	sub	fp, #20
07fcc     0A 6E 0E F2 | 	cmp	local03, #10 wz
07fd0     40 FF 9F 5D |  if_ne	jmp	#LR__0444
07fd4                 | LR__0445
07fd4     10 5E 05 F1 | 	add	fp, #16
07fd8     AF 2A 02 FB | 	rdlong	result1, fp
07fdc     10 5E 85 F1 | 	sub	fp, #16
07fe0                 | LR__0446
07fe0     AF F0 03 F6 | 	mov	ptra, fp
07fe4     BF 00 A0 FD | 	call	#popregs_
07fe8                 | __system___vfsread_ret
07fe8     2D 00 64 FD | 	ret
07fec                 | 
07fec                 | ' 	
07fec                 | ' 	FUNCTION pfunc(c as integer) as integer
07fec                 | ___strs_cl_pfunc
07fec                 | ' 		if (i < 16) then
07fec     04 0E 06 F1 | 	add	objptr, #4
07ff0     07 31 02 FB | 	rdlong	_var01, objptr
07ff4     04 0E 86 F1 | 	sub	objptr, #4
07ff8     10 30 5E F2 | 	cmps	_var01, #16 wcz
07ffc     2C 00 90 3D |  if_ae	jmp	#LR__0447
08000     07 33 02 FB | 	rdlong	_var02, objptr
08004     04 0E 06 F1 | 	add	objptr, #4
08008     07 35 02 FB | 	rdlong	_var03, objptr
0800c     19 35 02 F1 | 	add	_var03, _var02
08010     1A 5D 42 FC | 	wrbyte	arg01, _var03
08014     07 31 02 FB | 	rdlong	_var01, objptr
08018     01 30 06 F1 | 	add	_var01, #1
0801c     07 31 62 FC | 	wrlong	_var01, objptr
08020     04 0E 86 F1 | 	sub	objptr, #4
08024                 | ' 			p(i) = c
08024                 | ' 			i = i+1
08024                 | ' 			return 1
08024     01 2A 06 F6 | 	mov	result1, #1
08028     04 00 90 FD | 	jmp	#___strs_cl_pfunc_ret
0802c                 | LR__0447
0802c                 | ' 			return -1
0802c     01 2A 66 F6 | 	neg	result1, #1
08030                 | ___strs_cl_pfunc_ret
08030     2D 00 64 FD | 	ret
08034                 | 
08034                 | __struct__s_vfs_file_t_putchar
08034     04 5A 05 F6 | 	mov	COUNT_, #4
08038     B0 00 A0 FD | 	call	#pushregs_
0803c     18 0E 06 F1 | 	add	objptr, #24
08040     07 6B 0A FB | 	rdlong	local01, objptr wz
08044     18 0E 86 F1 | 	sub	objptr, #24
08048     00 2A 06 A6 |  if_e	mov	result1, #0
0804c     3C 00 90 AD |  if_e	jmp	#LR__0448
08050     18 0E 06 F1 | 	add	objptr, #24
08054     07 6B 02 FB | 	rdlong	local01, objptr
08058     18 0E 86 F1 | 	sub	objptr, #24
0805c     35 6D 02 FB | 	rdlong	local02, local01
08060     04 6A 06 F1 | 	add	local01, #4
08064     35 6F 02 FB | 	rdlong	local03, local01
08068     07 5F 02 F6 | 	mov	arg02, objptr
0806c     07 71 02 F6 | 	mov	local04, objptr
08070     36 0F 02 F6 | 	mov	objptr, local02
08074     2D 6E 62 FD | 	call	local03
08078     38 0F 02 F6 | 	mov	objptr, local04
0807c     00 2A 5E F2 | 	cmps	result1, #0 wcz
08080     00 6A 06 C6 |  if_b	mov	local01, #0
08084     01 6A 06 36 |  if_ae	mov	local01, #1
08088     35 2B 02 F6 | 	mov	result1, local01
0808c                 | LR__0448
0808c     AF F0 03 F6 | 	mov	ptra, fp
08090     BF 00 A0 FD | 	call	#popregs_
08094                 | __struct__s_vfs_file_t_putchar_ret
08094     2D 00 64 FD | 	ret
08098                 | 
08098                 | __struct__s_vfs_file_t_getchar
08098     04 5A 05 F6 | 	mov	COUNT_, #4
0809c     B0 00 A0 FD | 	call	#pushregs_
080a0     1C 0E 06 F1 | 	add	objptr, #28
080a4     07 6B 0A FB | 	rdlong	local01, objptr wz
080a8     1C 0E 86 F1 | 	sub	objptr, #28
080ac     01 2A 66 A6 |  if_e	neg	result1, #1
080b0     2C 00 90 AD |  if_e	jmp	#LR__0449
080b4                 | '         return getcf(__this);
080b4     1C 0E 06 F1 | 	add	objptr, #28
080b8     07 6B 02 FB | 	rdlong	local01, objptr
080bc     1C 0E 86 F1 | 	sub	objptr, #28
080c0     35 6D 02 FB | 	rdlong	local02, local01
080c4     04 6A 06 F1 | 	add	local01, #4
080c8     35 6F 02 FB | 	rdlong	local03, local01
080cc     07 5D 02 F6 | 	mov	arg01, objptr
080d0     07 71 02 F6 | 	mov	local04, objptr
080d4     36 0F 02 F6 | 	mov	objptr, local02
080d8     2D 6E 62 FD | 	call	local03
080dc     38 0F 02 F6 | 	mov	objptr, local04
080e0                 | LR__0449
080e0     AF F0 03 F6 | 	mov	ptra, fp
080e4     BF 00 A0 FD | 	call	#popregs_
080e8                 | __struct__s_vfs_file_t_getchar_ret
080e8     2D 00 64 FD | 	ret
080ec                 | 
080ec                 | __struct___bas_wrap_sender_tx
080ec     04 5A 05 F6 | 	mov	COUNT_, #4
080f0     B0 00 A0 FD | 	call	#pushregs_
080f4     07 6B 02 FB | 	rdlong	local01, objptr
080f8     35 6D 02 FB | 	rdlong	local02, local01
080fc     04 6A 06 F1 | 	add	local01, #4
08100     35 6F 02 FB | 	rdlong	local03, local01
08104     07 71 02 F6 | 	mov	local04, objptr
08108     36 0F 02 F6 | 	mov	objptr, local02
0810c     2D 6E 62 FD | 	call	local03
08110     38 0F 02 F6 | 	mov	objptr, local04
08114     01 2A 06 F6 | 	mov	result1, #1
08118     AF F0 03 F6 | 	mov	ptra, fp
0811c     BF 00 A0 FD | 	call	#popregs_
08120                 | __struct___bas_wrap_sender_tx_ret
08120     2D 00 64 FD | 	ret
08124                 | 
08124                 | LR__0450
08124     20          | 	byte	" "
08125     00          | 	byte	0
08126                 | LR__0451
08126                 | 	byte	
08126     00          | 	byte	0
08127                 | LR__0452
08127                 | 	byte	
08127     00          | 	byte	0
08128                 | LR__0453
08128     20 21 21 21 
0812c     20 63 6F 72 
08130     72 75 70 74 
08134     65 64 20 68 
08138     65 61 70 3F 
0813c     3F 3F 20 21 
08140     21 21 20    | 	byte	" !!! corrupted heap??? !!! "
08143     00          | 	byte	0
08144                 | LR__0454
08144     20 21 21 21 
08148     20 6F 75 74 
0814c     20 6F 66 20 
08150     68 65 61 70 
08154     20 6D 65 6D 
08158     6F 72 79 20 
0815c     21 21 21 20 | 	byte	" !!! out of heap memory !!! "
08160     00          | 	byte	0
08161                 | LR__0455
08161     20 21 21 21 
08165     20 63 6F 72 
08169     72 75 70 74 
0816d     65 64 20 68 
08171     65 61 70 20 
08175     21 21 21 20 | 	byte	" !!! corrupted heap !!! "
08179     00          | 	byte	0
0817a                 | LR__0456
0817a     43 6F 75 6E 
0817e     74 65 72 3A 
08182     20          | 	byte	"Counter: "
08183     00          | 	byte	0
08184                 | LR__0457
08184     4E 61 6D 65 
08188     20 20 20 20 
0818c     20 20 20 20 
08190     20 20 20 20 
08194     20 20 20 20 
08198     20 20 20 6C 
0819c     65 6E 20 20 
081a0     20 66 74 20 
081a4     76 6F 6C 20 
081a8     72 65 70 20 
081ac     20 20 72 2E 
081b0     6C 65 6E 20 
081b4     20 20 20 20 
081b8     20 20 20 20 
081bc     4E 61 6D 65 
081c0     20 20 20 20 
081c4     20 20 20 20 
081c8     20 20 20 20 
081cc     20 20 20 20 
081d0     20 20 20 6C 
081d4     65 6E 20 20 
081d8     20 66 74 20 
081dc     76 6F 6C 20 
081e0     72 65 70 20 
081e4     20 20 72 2E 
081e8     6C 65 6E 20 | 	byte	"Name                   len   ft vol rep   r.len         Name                   len   ft vol rep   r.len "
081ec     00          | 	byte	0
081ed                 | LR__0458
081ed     53          | 	byte	"S"
081ee     00          | 	byte	0
081ef                 | LR__0459
081ef     20 20 20 20 
081f3     20 20 20 20 
081f7     20 20 20 20 
081fb     20 20 20 20 
081ff     20 20 20 20 
08203     20 20       | 	byte	"                      "
08205     00          | 	byte	0
08206                 | LR__0460
08206     20          | 	byte	" "
08207     00          | 	byte	0
08208                 | LR__0461
08208     73 61 6D 70 
0820c     6C 65 73 20 
08210     6D 6F 64 75 
08214     6C 65       | 	byte	"samples module"
08216     00          | 	byte	0
08217     00          | 	alignl
08218                 | _dat_
08218     32 00 00 00 
0821c     00 00 00 00 
08220     00 00 00 00 
08224     00 00 00 00 | module file "../../../mod/2a.mod"
08228     00 00 00 00 
0822c     73 74 2D 30 
08230     35 3A 6D 61 
08234     72 6B 32 00 | 	byte	$00, $00, $00, $00, $73, $74, $2d, $30, $35, $3a, $6d, $61, $72, $6b, $32, $00
08238     00 00 00 00 
0823c     00 00 00 00 
08240     00 00       | 	byte	$00[10]
08242     02 36 00 40 
08246     00 00 00 01 
0824a     73 74 2D 30 
0824e     35 3A 73 6E | 	byte	$02, $36, $00, $40, $00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $73, $6e
08252     61 72 65 31 
08256     39 00 00 00 
0825a     00 00 00 00 
0825e     00 00 05 AD | 	byte	$61, $72, $65, $31, $39, $00, $00, $00, $00, $00, $00, $00, $00, $00, $05, $ad
08262     00 2D 00 00 
08266     00 01 73 74 
0826a     2D 30 31 3A 
0826e     73 6C 61 70 | 	byte	$00, $2d, $00, $00, $00, $01, $73, $74, $2d, $30, $31, $3a, $73, $6c, $61, $70
08272     62 61 73 73 
08276     00 00 00 00 
0827a     00 00 00 00 
0827e     09 92 00 2E | 	byte	$62, $61, $73, $73, $00, $00, $00, $00, $00, $00, $00, $00, $09, $92, $00, $2e
08282     00 00 00 01 
08286     73 74 2D 30 
0828a     35 3A 73 74 
0828e     72 64 75 72 | 	byte	$00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $73, $74, $72, $64, $75, $72
08292     31 00 00 00 
08296     00 00 00 00 
0829a     00 00 0C A8 
0829e     00 28 00 00 | 	byte	$31, $00, $00, $00, $00, $00, $00, $00, $00, $00, $0c, $a8, $00, $28, $00, $00
082a2     00 01 73 74 
082a6     2D 30 35 3A 
082aa     73 74 72 64 
082ae     75 72 32 00 | 	byte	$00, $01, $73, $74, $2d, $30, $35, $3a, $73, $74, $72, $64, $75, $72, $32, $00
082b2     00 00 00 00 
082b6     00 00 00 00 | 	byte	$00[8]
082ba     09 79 00 28 
082be     00 00 00 01 
082c2     73 74 2D 30 
082c6     35 3A 73 74 | 	byte	$09, $79, $00, $28, $00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $73, $74
082ca     72 64 75 72 
082ce     33 00 00 00 
082d2     00 00 00 00 
082d6     00 00 07 86 | 	byte	$72, $64, $75, $72, $33, $00, $00, $00, $00, $00, $00, $00, $00, $00, $07, $86
082da     00 28 00 00 
082de     00 01 73 74 
082e2     2D 30 35 3A 
082e6     62 61 73 73 | 	byte	$00, $28, $00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $62, $61, $73, $73
082ea     77 69 7A 34 
082ee     00 00 00 00 
082f2     00 00 00 00 
082f6     02 2D 00 27 | 	byte	$77, $69, $7a, $34, $00, $00, $00, $00, $00, $00, $00, $00, $02, $2d, $00, $27
082fa     00 00 00 01 
082fe     73 74 2D 30 
08302     35 3A 73 74 
08306     72 6D 6F 6C | 	byte	$00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $73, $74, $72, $6d, $6f, $6c
0830a     6C 31 00 00 
0830e     00 00 00 00 
08312     00 00 0C A8 
08316     00 28 00 00 | 	byte	$6c, $31, $00, $00, $00, $00, $00, $00, $00, $00, $0c, $a8, $00, $28, $00, $00
0831a     00 01 73 74 
0831e     2D 30 35 3A 
08322     73 74 72 6D 
08326     6F 6C 6C 32 | 	byte	$00, $01, $73, $74, $2d, $30, $35, $3a, $73, $74, $72, $6d, $6f, $6c, $6c, $32
0832a     00 00 00 00 
0832e     00 00 00 00 | 	byte	$00[8]
08332     09 79 00 21 
08336     00 00 00 01 
0833a     53 54 2D 30 
0833e     32 3A 41 68 | 	byte	$09, $79, $00, $21, $00, $00, $00, $01, $53, $54, $2d, $30, $32, $3a, $41, $68
08342     68 56 6F 78 
08346     00 00 00 00 
0834a     00 00 00 00 
0834e     00 00 10 FE | 	byte	$68, $56, $6f, $78, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $10, $fe
08352     00 29 00 00 
08356     00 01 73 74 
0835a     2D 30 35 3A 
0835e     62 61 73 65 | 	byte	$00, $29, $00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $62, $61, $73, $65
08362     68 65 72 65 
08366     00 00 00 00 
0836a     00 00 00 00 
0836e     11 13 00 29 | 	byte	$68, $65, $72, $65, $00, $00, $00, $00, $00, $00, $00, $00, $11, $13, $00, $29
08372     00 00 00 01 
08376     73 74 2D 30 
0837a     35 3A 65 61 
0837e     67 6C 65 6C | 	byte	$00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $65, $61, $67, $6c, $65, $6c
08382     61 6E 64 00 
08386     00 00 00 00 
0838a     00 00 0E 62 
0838e     00 2D 00 00 | 	byte	$61, $6e, $64, $00, $00, $00, $00, $00, $00, $00, $0e, $62, $00, $2d, $00, $00
08392     00 01 73 74 
08396     2D 30 35 3A 
0839a     6F 6E 67 72 
0839e     6F 75 6E 64 | 	byte	$00, $01, $73, $74, $2d, $30, $35, $3a, $6f, $6e, $67, $72, $6f, $75, $6e, $64
083a2     00 00 00 00 
083a6     00 00 00 00 | 	byte	$00[8]
083aa     25 0A 00 40 
083ae     00 00 00 01 
083b2     73 74 2D 30 
083b6     35 3A 77 61 | 	byte	$25, $0a, $00, $40, $00, $00, $00, $01, $73, $74, $2d, $30, $35, $3a, $77, $61
083ba     72 70 00 00 
083be     00 00 00 00 
083c2     00 00 00 00 
083c6     00 00 13 3B | 	byte	$72, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $13, $3b
083ca     00 29 00 00 
083ce     00 01 00 00 
083d2     00 00 00 00 
083d6     00 00 00 00 | 	byte	$00, $29, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083da     00 00 00 00 
083de     00 00 00 00 
083e2     00 00 00 00 
083e6     00 00 00 00 
083ea     00 00 00    | 	byte	$00[19]
083ed     01 00 00 00 
083f1     00 00 00 00 
083f5     00 00 00 00 
083f9     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
083fd     00 00 00 00 
08401     00 00 00 00 
08405     00 00 00 00 
08409     00 00       | 	byte	$00[14]
0840b     01 00 00 00 
0840f     00 00 00 00 
08413     00 00 00 00 
08417     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0841b     00 00 00 00 
0841f     00 00 00 00 
08423     00 00 00 00 
08427     00 00       | 	byte	$00[14]
08429     01 00 00 00 
0842d     00 00 00 00 
08431     00 00 00 00 
08435     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08439     00 00 00 00 
0843d     00 00 00 00 
08441     00 00 00 00 
08445     00 00       | 	byte	$00[14]
08447     01 00 00 00 
0844b     00 00 00 00 
0844f     00 00 00 00 
08453     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08457     00 00 00 00 
0845b     00 00 00 00 
0845f     00 00 00 00 
08463     00 00       | 	byte	$00[14]
08465     01 00 00 00 
08469     00 00 00 00 
0846d     00 00 00 00 
08471     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08475     00 00 00 00 
08479     00 00 00 00 
0847d     00 00 00 00 
08481     00 00       | 	byte	$00[14]
08483     01 00 00 00 
08487     00 00 00 00 
0848b     00 00 00 00 
0848f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08493     00 00 00 00 
08497     00 00 00 00 
0849b     00 00 00 00 
0849f     00 00       | 	byte	$00[14]
084a1     01 00 00 00 
084a5     00 00 00 00 
084a9     00 00 00 00 
084ad     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084b1     00 00 00 00 
084b5     00 00 00 00 
084b9     00 00 00 00 
084bd     00 00       | 	byte	$00[14]
084bf     01 00 00 00 
084c3     00 00 00 00 
084c7     00 00 00 00 
084cb     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084cf     00 00 00 00 
084d3     00 00 00 00 
084d7     00 00 00 00 
084db     00 00       | 	byte	$00[14]
084dd     01 00 00 00 
084e1     00 00 00 00 
084e5     00 00 00 00 
084e9     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
084ed     00 00 00 00 
084f1     00 00 00 00 
084f5     00 00 00 00 
084f9     00 00       | 	byte	$00[14]
084fb     01 00 00 00 
084ff     00 00 00 00 
08503     00 00 00 00 
08507     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0850b     00 00 00 00 
0850f     00 00 00 00 
08513     00 00 00 00 
08517     00 00       | 	byte	$00[14]
08519     01 00 00 00 
0851d     00 00 00 00 
08521     00 00 00 00 
08525     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08529     00 00 00 00 
0852d     00 00 00 00 
08531     00 00 00 00 
08535     00 00       | 	byte	$00[14]
08537     01 00 00 00 
0853b     00 00 00 00 
0853f     00 00 00 00 
08543     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08547     00 00 00 00 
0854b     00 00 00 00 
0854f     00 00 00 00 
08553     00 00       | 	byte	$00[14]
08555     01 00 00 00 
08559     00 00 00 00 
0855d     00 00 00 00 
08561     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08565     00 00 00 00 
08569     00 00 00 00 
0856d     00 00 00 00 
08571     00 00       | 	byte	$00[14]
08573     01 00 00 00 
08577     00 00 00 00 
0857b     00 00 00 00 
0857f     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08583     00 00 00 00 
08587     00 00 00 00 
0858b     00 00 00 00 
0858f     00 00       | 	byte	$00[14]
08591     01 00 00 00 
08595     00 00 00 00 
08599     00 00 00 00 
0859d     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085a1     00 00 00 00 
085a5     00 00 00 00 
085a9     00 00 00 00 
085ad     00 00       | 	byte	$00[14]
085af     01 00 00 00 
085b3     00 00 00 00 
085b7     00 00 00 00 
085bb     00 00 00 00 | 	byte	$01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
085bf     00 00 00 00 
085c3     00 00 00 00 
085c7     00 00 00 00 
085cb     00 00       | 	byte	$00[14]
085cd     01 16 7F 00 
085d1     01 02 03 04 
085d5     05 04 05 06 
085d9     07 08 08 09 | 	byte	$01, $16, $7f, $00, $01, $02, $03, $04, $05, $04, $05, $06, $07, $08, $08, $09
085dd     04 05 06 07 
085e1     06 07 08 0A 
085e5     0B 00 00 00 
085e9     00 00 00 00 | 	byte	$04, $05, $06, $07, $06, $07, $08, $0a, $0b, $00, $00, $00, $00, $00, $00, $00
085ed     00 00 00 00 
      ...             
08649     00 00 00 00 
0864d     00 00 00    | 	byte	$00[99]
08650     4D 2E 4B 2E 
08654     00 00 00 00 
08658     00 00 00 00 
0865c     01 7D 30 00 | 	byte	$4d, $2e, $4b, $2e, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00
08660     01 AC 7F 07 
08664     00 00 00 00 
08668     00 00 00 00 
0866c     00 00 00 00 | 	byte	$01, $ac, $7f, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08670     00 00 00 00 
08674     00 00 00 00 
08678     00 00 00 00 
0867c     00 00 00 00 
08680     00          | 	byte	$00[17]
08681     FE 10 00 00 
08685     00 00 00 00 
08689     00 00 00 01 
0868d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
08691     00 00 00 00 
08695     00 00 00 00 
08699     00 00 00 00 
0869d     00 00 00 00 | 	byte	$00[16]
086a1     FE 10 00 00 
086a5     00 00 00 00 
086a9     00 00 00 01 
086ad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
086b1     FE 10 00 00 
086b5     00 00 00 00 
086b9     00 00 00 01 
086bd     40 30 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
086c1     AC 70 00 00 
086c5     00 00 00 00 
086c9     00 00 00 00 
086cd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
086d1     00 00 00 00 
086d5     00 00 00 00 
086d9     00 00 00    | 	byte	$00[11]
086dc     01 40 30 00 
086e0     01 AC 70 00 
086e4     00 00 00 00 
086e8     00 00 00 00 | 	byte	$01, $40, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
086ec     00 00 00 00 
086f0     00 00 00 00 
086f4     00 00 00 00 
086f8     00 00 00 00 | 	byte	$00[16]
086fc     01 40 30 00 
08700     00 FE 10 00 
08704     00 00 00 00 
08708     00 00 00 00 | 	byte	$01, $40, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0870c     00 00 00 00 
08710     00          | 	byte	$00[5]
08711     FE 10 00 00 
08715     00 00 00 00 
08719     00 00 00 00 
0871d     FE 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
08721     AA 20 00 00 
08725     00 00 00 00 
08729     00 00 00 00 
0872d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08731     00 00 00 00 
08735     00 00 00 00 
08739     00 00 00    | 	byte	$00[11]
0873c     01 AC 30 00 
08740     01 AC 70 00 
08744     00 00 00 00 
08748     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0874c     00 00 00 00 
08750     00 00 00 00 
08754     00 00 00 00 
08758     00 00 00 00 | 	byte	$00[16]
0875c     01 AC 30 00 
08760     01 AC 70 00 
08764     00 00 00 00 
08768     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0876c     00 00 00 00 
08770     00 00 00 00 
08774     00 00 00 00 
08778     00 00 00 00 
0877c     00 00 00 00 
08780     00          | 	byte	$00[21]
08781     FE 10 00 00 
08785     00 00 00 00 
08789     00 00 00 01 
0878d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08791     00 00 00 00 
08795     00 00 00 00 
08799     00 00 00 00 
0879d     00 00 00 00 | 	byte	$00[16]
087a1     FE 10 00 00 
087a5     00 00 00 00 
087a9     00 00 00 01 
087ad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
087b1     FE 10 00 00 
087b5     00 00 00 00 
087b9     00 00 00 01 
087bd     53 30 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
087c1     AC 70 00 00 
087c5     00 00 00 00 
087c9     00 00 00 00 
087cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
087d1     00 00 00 00 
087d5     00 00 00 00 
087d9     00 00 00    | 	byte	$00[11]
087dc     01 1D 30 00 
087e0     01 AC 70 00 
087e4     00 00 00 00 
087e8     00 00 00 00 | 	byte	$01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
087ec     00 00 00 00 
087f0     00 00 00 00 
087f4     00 00 00 00 
087f8     00 00 00 00 | 	byte	$00[16]
087fc     01 53 30 00 
08800     00 FE 10 00 
08804     00 00 00 00 
08808     00 00 00 00 | 	byte	$01, $53, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0880c     00 00 00 00 
08810     00          | 	byte	$00[5]
08811     FE 10 00 00 
08815     00 00 00 00 
08819     00 00 00 01 
0881d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08821     AA 20 00 00 
08825     00 00 00 00 
08829     00 00 00 00 
0882d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08831     00 00 00 00 
08835     00 00 00 00 
08839     00 00 00    | 	byte	$00[11]
0883c     01 1D 30 00 
08840     00 00 00 00 
08844     00 00 00 00 
08848     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0884c     00 00 00 00 
08850     00 00 00 00 
08854     00 00 00 00 
08858     00 00 00 00 | 	byte	$00[16]
0885c     01 68 30 00 
08860     01 AC 70 00 
08864     00 00 00 00 
08868     00 00 00 00 | 	byte	$01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0886c     00 00 00 00 
08870     00 00 00 00 
08874     00 00 00 00 
08878     00 00 00 00 
0887c     00 00 00 00 
08880     00          | 	byte	$00[21]
08881     FE 10 00 00 
08885     00 00 00 00 
08889     00 00 00 01 
0888d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
08891     00 00 00 00 
08895     00 00 00 00 
08899     00 00 00 00 
0889d     00 00 00 00 | 	byte	$00[16]
088a1     FE 10 00 00 
088a5     00 00 00 00 
088a9     00 00 00 01 
088ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
088b1     FE 10 00 00 
088b5     00 00 00 00 
088b9     00 00 00 01 
088bd     1D 30 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
088c1     AC 70 00 00 
088c5     00 00 00 00 
088c9     00 00 00 00 
088cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088d1     00 00 00 00 
088d5     00 00 00 00 
088d9     00 00 00 00 | 	byte	$00[12]
088dd     F0 30 00 01 
088e1     AC 70 00 00 
088e5     00 00 00 00 
088e9     00 00 00 00 | 	byte	$f0, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
088ed     00 00 00 00 
088f1     00 00 00 00 
088f5     00 00 00 00 
088f9     00 00 00    | 	byte	$00[15]
088fc     01 1D 30 00 
08900     00 FE 10 00 
08904     00 00 00 00 
08908     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0890c     00 00 00 00 
08910     00          | 	byte	$00[5]
08911     FE 10 00 00 
08915     00 00 00 00 
08919     00 00 00 01 
0891d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
08921     AA 20 00 00 
08925     00 00 00 00 
08929     00 00 00 00 
0892d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08931     00 00 00 00 
08935     00 00 00 00 
08939     00 00 00    | 	byte	$00[11]
0893c     01 68 30 00 
08940     01 AC 70 00 
08944     00 00 00 00 
08948     00 00 00 00 | 	byte	$01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0894c     00 00 00 00 
08950     00 00 00 00 
08954     00 00 00 00 
08958     00 00 00 00 | 	byte	$00[16]
0895c     01 68 30 00 
08960     01 AC 70 00 
08964     00 00 00 00 
08968     00 00 00 00 | 	byte	$01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0896c     00 00 00 00 
08970     00 00 00 00 
08974     00 00 00 00 
08978     00 00 00 00 
0897c     00 00 00 00 
08980     00          | 	byte	$00[21]
08981     FE 10 00 00 
08985     00 00 00 00 
08989     00 00 00 01 
0898d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
08991     00 00 00 00 
08995     00 00 00 00 
08999     00 00 00 00 
0899d     00 00 00 00 | 	byte	$00[16]
089a1     FE 10 00 00 
089a5     00 00 00 00 
089a9     00 00 00 01 
089ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
089b1     FE 10 00 00 
089b5     00 00 00 00 
089b9     00 00 00 00 
089bd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
089c1     AC 70 00 00 
089c5     00 00 00 00 
089c9     00 00 00 00 
089cd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
089d1     00 00 00 00 
089d5     00 00 00 00 
089d9     00 00 00    | 	byte	$00[11]
089dc     01 1D 30 00 
089e0     01 AC 70 00 
089e4     00 00 00 00 
089e8     00 00 00 00 | 	byte	$01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
089ec     00 00 00 00 
089f0     00 00 00 00 
089f4     00 00 00 00 
089f8     00 00 00 00 
089fc     00 00 00 00 
08a00     00          | 	byte	$00[21]
08a01     FE 10 00 00 
08a05     00 00 00 00 
08a09     00 00 00 01 
08a0d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
08a11     FE 10 00 00 
08a15     00 00 00 00 
08a19     00 00 00 01 
08a1d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
08a21     AA 20 00 00 
08a25     00 00 00 00 
08a29     00 00 00 00 
08a2d     F0 30 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
08a31     00 00 00 00 
08a35     00 00 00 00 
08a39     00 00 00    | 	byte	$00[11]
08a3c     01 7D 30 00 
08a40     00 AA 20 00 
08a44     00 00 00 00 
08a48     00 00 00 00 | 	byte	$01, $7d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
08a4c     01 1D 30 00 
08a50     00 AA 20 00 
08a54     00 00 00 00 
08a58     00 00 0C 00 | 	byte	$01, $1d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $0c, $00
08a5c     01 7D 30 00 
08a60     01 AC 70 07 
08a64     00 00 00 00 
08a68     00 00 00 00 | 	byte	$01, $7d, $30, $00, $01, $ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00
08a6c     00 00 00 00 
08a70     00 00 00 00 
08a74     00 00 00 00 
08a78     00 00 00 00 
08a7c     00 00 00 00 
08a80     00          | 	byte	$00[21]
08a81     FE 10 00 00 
08a85     00 00 00 00 
08a89     00 00 00 01 
08a8d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
08a91     00 00 00 00 
08a95     00 00 00 00 
08a99     00 00 00 00 
08a9d     00 00 00 00 | 	byte	$00[16]
08aa1     FE 10 00 00 
08aa5     00 00 00 00 
08aa9     00 00 00 01 
08aad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
08ab1     FE 10 00 00 
08ab5     00 00 00 00 
08ab9     00 00 00 01 
08abd     40 30 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
08ac1     AC 70 00 00 
08ac5     00 00 00 00 
08ac9     00 00 00 00 
08acd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
08ad1     00 00 00 00 
08ad5     00 00 00 00 
08ad9     00 00 00    | 	byte	$00[11]
08adc     01 40 30 00 
08ae0     01 AC 70 00 
08ae4     00 00 00 00 
08ae8     00 00 00 00 | 	byte	$01, $40, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
08aec     00 00 00 00 
08af0     00 00 00 00 
08af4     00 00 00 00 
08af8     00 00 00 00 | 	byte	$00[16]
08afc     01 40 30 00 
08b00     00 FE 10 00 
08b04     00 00 00 00 
08b08     00 00 00 00 | 	byte	$01, $40, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b0c     00 00 00 00 
08b10     00          | 	byte	$00[5]
08b11     FE 10 00 00 
08b15     00 00 00 00 
08b19     00 00 00 00 
08b1d     FE 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
08b21     AA 20 00 00 
08b25     00 00 00 00 
08b29     00 00 00 00 
08b2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b31     00 00 00 00 
08b35     00 00 00 00 
08b39     00 00 00    | 	byte	$00[11]
08b3c     01 AC 30 00 
08b40     01 AC 70 00 
08b44     00 00 00 00 
08b48     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b4c     00 00 00 00 
08b50     00 00 00 00 
08b54     00 00 00 00 
08b58     00 00 00 00 | 	byte	$00[16]
08b5c     01 AC 30 00 
08b60     01 AC 70 00 
08b64     00 00 00 00 
08b68     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
08b6c     00 00 00 00 
08b70     00 00 00 00 
08b74     00 00 00 00 
08b78     00 00 00 00 
08b7c     00 00 00 00 
08b80     00          | 	byte	$00[21]
08b81     FE 10 00 00 
08b85     00 00 00 00 
08b89     00 00 00 01 
08b8d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08b91     00 00 00 00 
08b95     00 00 00 00 
08b99     00 00 00 00 
08b9d     00 00 00 00 | 	byte	$00[16]
08ba1     FE 10 00 00 
08ba5     00 00 00 00 
08ba9     00 00 00 01 
08bad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08bb1     FE 10 00 00 
08bb5     00 00 00 00 
08bb9     00 00 00 01 
08bbd     53 30 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
08bc1     AC 70 00 00 
08bc5     00 00 00 00 
08bc9     00 00 00 00 
08bcd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bd1     00 00 00 00 
08bd5     00 00 00 00 
08bd9     00 00 00    | 	byte	$00[11]
08bdc     01 1D 30 00 
08be0     01 AC 70 00 
08be4     00 00 00 00 
08be8     00 00 00 00 | 	byte	$01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
08bec     00 00 00 00 
08bf0     00 00 00 00 
08bf4     00 00 00 00 
08bf8     00 00 00 00 | 	byte	$00[16]
08bfc     01 53 30 00 
08c00     00 FE 10 00 
08c04     00 00 00 00 
08c08     00 00 00 00 | 	byte	$01, $53, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c0c     00 00 00 00 
08c10     00          | 	byte	$00[5]
08c11     FE 10 00 00 
08c15     00 00 00 00 
08c19     00 00 00 01 
08c1d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08c21     AA 20 00 00 
08c25     00 00 00 00 
08c29     00 00 00 00 
08c2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c31     00 00 00 00 
08c35     00 00 00 00 
08c39     00 00 00    | 	byte	$00[11]
08c3c     01 1D 30 00 
08c40     00 00 00 00 
08c44     00 00 00 00 
08c48     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c4c     00 00 00 00 
08c50     00 00 00 00 
08c54     00 00 00 00 
08c58     00 00 00 00 | 	byte	$00[16]
08c5c     01 7D 30 00 
08c60     01 AC 70 00 
08c64     00 00 00 00 
08c68     00 00 00 00 | 	byte	$01, $7d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c6c     00 00 00 00 
08c70     00 00 00 00 
08c74     00 00 00 00 
08c78     00 00 00 00 
08c7c     00 00 00 00 
08c80     00          | 	byte	$00[21]
08c81     FE 10 00 00 
08c85     00 00 00 00 
08c89     00 00 00 00 
08c8d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08c91     00 00 00 00 
08c95     00 00 00 00 
08c99     00 00 00 00 
08c9d     00 00 00 00 | 	byte	$00[16]
08ca1     FE 10 00 00 
08ca5     00 00 00 00 
08ca9     00 00 00 00 
08cad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cb1     FE 10 00 00 
08cb5     00 00 00 00 
08cb9     00 00 00 00 
08cbd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08cc1     AC 70 00 00 
08cc5     00 00 00 00 
08cc9     00 00 00 00 
08ccd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cd1     00 00 00 00 
08cd5     00 00 00 00 
08cd9     00 00 00 00 
08cdd     00 00 00    | 	byte	$00[15]
08ce0     01 AC 70 00 
08ce4     00 00 00 00 
08ce8     00 00 00 00 
08cec     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08cf0     00 00 00 00 
08cf4     00 00 00 00 
08cf8     00 00 00 00 
08cfc     00 00 00 00 
08d00     00          | 	byte	$00[17]
08d01     FE 10 00 00 
08d05     00 00 00 00 
08d09     00 00 00 00 
08d0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d11     FE 10 00 00 
08d15     00 00 00 00 
08d19     00 00 00 00 
08d1d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d21     AA 20 00 00 
08d25     00 00 00 00 
08d29     00 00 00 00 
08d2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d31     00 00 00 00 
08d35     00 00 00 00 
08d39     00 00 00 00 
08d3d     00 00 00    | 	byte	$00[15]
08d40     01 AC 70 00 
08d44     00 00 00 00 
08d48     00 00 00 00 
08d4c     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d50     00 00 00 00 
08d54     00 00 00 00 
08d58     00 00 00 00 
08d5c     00 00 00 00 | 	byte	$00[16]
08d60     01 AC 70 00 
08d64     00 00 00 00 
08d68     00 00 00 00 
08d6c     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d70     00 00 00 00 
08d74     00 00 00 00 
08d78     00 00 00 00 
08d7c     00 00 00 00 
08d80     00          | 	byte	$00[17]
08d81     FE 10 00 00 
08d85     00 00 00 00 
08d89     00 00 00 00 
08d8d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08d91     00 00 00 00 
08d95     00 00 00 00 
08d99     00 00 00 00 
08d9d     00 00 00 00 | 	byte	$00[16]
08da1     FE 10 00 00 
08da5     00 00 00 00 
08da9     00 00 00 00 
08dad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08db1     FE 10 00 00 
08db5     00 00 00 00 
08db9     00 00 00 00 
08dbd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
08dc1     AC 70 00 00 
08dc5     00 00 00 00 
08dc9     00 00 00 00 
08dcd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08dd1     00 00 00 00 
08dd5     00 00 00 00 
08dd9     00 00 00 00 
08ddd     00 00 00    | 	byte	$00[15]
08de0     01 AC 70 00 
08de4     00 00 00 00 
08de8     00 00 00 00 
08dec     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08df0     00 00 00 00 
08df4     00 00 00 00 
08df8     00 00 00 00 
08dfc     00 00 00 00 
08e00     00          | 	byte	$00[17]
08e01     FE 10 00 00 
08e05     00 00 00 00 
08e09     00 00 00 00 
08e0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e11     FE 10 00 00 
08e15     00 00 00 00 
08e19     00 00 00 00 
08e1d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e21     AA 20 00 00 
08e25     00 00 00 00 
08e29     00 00 00 00 
08e2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e31     00 00 00 00 
08e35     00 00 00 00 
08e39     00 00 00 00 
08e3d     00 00 00 00 | 	byte	$00[16]
08e41     AA 20 00 00 
08e45     00 00 00 00 
08e49     00 00 00 00 
08e4d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e51     AA 20 00 01 
08e55     7D 90 00 00 
08e59     00 00 00 01 
08e5d     7D 30 00 01 | 	byte	$aa, $20, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $01
08e61     AC 70 07 00 
08e65     00 00 00 00 
08e69     00 00 00 00 
08e6d     00 00 00 00 | 	byte	$ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e71     00 00 00 01 
08e75     7D 90 00 00 
08e79     00 00 00 00 
08e7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08e81     FE 10 00 00 
08e85     00 00 00 00 
08e89     00 00 00 01 
08e8d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
08e91     00 00 00 01 
08e95     7D 90 00 00 
08e99     00 00 00 00 
08e9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ea1     FE 10 00 00 
08ea5     00 00 00 00 
08ea9     00 00 00 01 
08ead     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
08eb1     FE 10 00 01 
08eb5     7D 90 00 00 
08eb9     00 00 00 01 
08ebd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
08ec1     AC 70 00 00 
08ec5     00 00 00 00 
08ec9     00 00 00 00 
08ecd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
08ed1     00 00 00 01 
08ed5     40 40 00 00 
08ed9     00 00 00 01 
08edd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
08ee1     AC 70 00 00 
08ee5     00 00 00 00 
08ee9     00 00 00 00 
08eed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ef1     00 00 00 01 
08ef5     40 40 00 00 
08ef9     00 00 00 01 
08efd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
08f01     FE 10 00 00 
08f05     00 00 00 00 
08f09     00 00 00 00 
08f0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f11     FE 10 00 01 
08f15     40 40 00 00 
08f19     00 00 00 00 
08f1d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
08f21     AA 20 00 00 
08f25     00 00 00 00 
08f29     00 00 00 00 
08f2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f31     00 00 00 01 
08f35     40 40 00 00 
08f39     00 00 00 01 
08f3d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
08f41     AC 70 00 00 
08f45     00 00 00 00 
08f49     00 00 00 00 
08f4d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f51     00 00 00 01 
08f55     AC 50 00 00 
08f59     00 00 00 01 
08f5d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
08f61     AC 70 00 00 
08f65     00 00 00 00 
08f69     00 00 00 00 
08f6d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f71     00 00 00 01 
08f75     AC 50 00 00 
08f79     00 00 00 00 
08f7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08f81     FE 10 00 00 
08f85     00 00 00 00 
08f89     00 00 00 01 
08f8d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08f91     00 00 00 01 
08f95     AC 50 00 00 
08f99     00 00 00 00 
08f9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fa1     FE 10 00 00 
08fa5     00 00 00 00 
08fa9     00 00 00 01 
08fad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
08fb1     FE 10 00 01 
08fb5     AC 50 00 00 
08fb9     00 00 00 01 
08fbd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
08fc1     AC 70 00 00 
08fc5     00 00 00 00 
08fc9     00 00 00 00 
08fcd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08fd1     00 00 00 01 
08fd5     AC 50 00 00 
08fd9     00 00 00 01 
08fdd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
08fe1     AC 70 00 00 
08fe5     00 00 00 00 
08fe9     00 00 00 00 
08fed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
08ff1     00 00 00 01 
08ff5     AC 50 00 00 
08ff9     00 00 00 01 
08ffd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
09001     FE 10 00 00 
09005     00 00 00 00 
09009     00 00 00 00 
0900d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09011     FE 10 00 01 
09015     AC 50 00 00 
09019     00 00 00 01 
0901d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09021     AA 20 00 00 
09025     00 00 00 00 
09029     00 00 00 00 
0902d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09031     00 00 00 01 
09035     AC 50 00 00 
09039     00 00 00 01 
0903d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09041     00 00 00 00 
09045     00 00 00 00 
09049     00 00 00 00 
0904d     00 00 00 00 
09051     00 00 00    | 	byte	$00[19]
09054     01 68 40 00 
09058     00 00 00 00 
0905c     01 68 30 00 
09060     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01, $ac, $70, $00
09064     00 00 00 00 
09068     00 00 00 00 
0906c     00 00 00 00 
09070     00 00 00 00 | 	byte	$00[16]
09074     01 68 40 00 
09078     00 00 00 00 
0907c     00 00 00 00 
09080     00 FE 10 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00
09084     00 00 00 00 
09088     00 00 00 00 | 	byte	$00[8]
0908c     01 68 30 00 
09090     00 00 00 00 
09094     01 68 40 00 
09098     00 00 00 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00
0909c     00 00 00 00 
090a0     00          | 	byte	$00[5]
090a1     FE 10 00 00 
090a5     00 00 00 00 
090a9     00 00 00 01 
090ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
090b1     FE 10 00 01 
090b5     68 40 00 00 
090b9     00 00 00 01 
090bd     1D 30 00 01 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
090c1     AC 70 00 00 
090c5     00 00 00 00 
090c9     00 00 00 00 
090cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090d1     00 00 00 01 
090d5     68 40 00 00 
090d9     00 00 00 00 
090dd     F0 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $01
090e1     AC 70 00 00 
090e5     00 00 00 00 
090e9     00 00 00 00 
090ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
090f1     00 00 00 01 
090f5     68 40 00 00 
090f9     00 00 00 01 
090fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09101     FE 10 00 00 
09105     00 00 00 00 
09109     00 00 00 00 
0910d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09111     FE 10 00 01 
09115     68 40 00 00 
09119     00 00 00 01 
0911d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09121     AA 20 00 00 
09125     00 00 00 00 
09129     00 00 00 00 
0912d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09131     00 00 00 01 
09135     68 40 00 00 
09139     00 00 00 01 
0913d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01
09141     AC 70 00 00 
09145     00 00 00 00 
09149     00 00 00 00 
0914d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09151     00 00 00 01 
09155     68 50 00 00 
09159     00 00 00 01 
0915d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01
09161     AC 70 00 00 
09165     00 00 00 00 
09169     00 00 00 00 
0916d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09171     00 00 00 01 
09175     68 50 00 00 
09179     00 00 00 00 
0917d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09181     FE 10 00 00 
09185     00 00 00 00 
09189     00 00 00 01 
0918d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
09191     00 00 00 01 
09195     68 50 00 00 
09199     00 00 00 00 
0919d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
091a1     FE 10 00 00 
091a5     00 00 00 00 
091a9     00 00 00 01 
091ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
091b1     FE 10 00 01 
091b5     68 50 00 00 
091b9     00 00 00 00 
091bd     00 00 00 01 | 	byte	$fe, $10, $00, $01, $68, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
091c1     AC 70 00 00 
091c5     00 00 00 00 
091c9     00 00 00 00 
091cd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
091d1     00 00 00 01 
091d5     1D 80 00 00 
091d9     00 00 00 01 
091dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
091e1     AC 70 00 00 
091e5     00 00 00 00 
091e9     00 00 00 00 
091ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
091f1     00 00 00 01 
091f5     1D 80 00 00 
091f9     00 00 00 00 
091fd     00 00 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09201     FE 10 00 00 
09205     00 00 00 00 
09209     00 00 00 01 
0920d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09211     FE 10 00 01 
09215     1D 80 00 00 
09219     00 00 00 01 
0921d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09221     AA 20 00 00 
09225     00 00 00 00 
09229     00 00 00 00 
0922d     F0 30 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
09231     00 00 00 01 
09235     1D 80 00 00 
09239     00 00 00 01 
0923d     7D 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09241     00 00 00 00 
09245     00 00 00 00 
09249     00 00 00    | 	byte	$00[11]
0924c     01 1D 30 00 
09250     01 7D 70 00 
09254     01 7D 90 00 
09258     00 00 0C 00 | 	byte	$01, $1d, $30, $00, $01, $7d, $70, $00, $01, $7d, $90, $00, $00, $00, $0c, $00
0925c     01 7D 30 00 
09260     01 AC 70 07 
09264     00 00 00 00 
09268     00 00 00 00 | 	byte	$01, $7d, $30, $00, $01, $ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00
0926c     00 00 00 00 
09270     00 00 00 00 | 	byte	$00[8]
09274     01 7D 90 00 
09278     00 00 00 00 
0927c     00 00 00 00 
09280     00 FE 10 00 | 	byte	$01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00
09284     00 00 00 00 
09288     00 00 00 00 | 	byte	$00[8]
0928c     01 7D 30 00 
09290     00 00 00 00 
09294     01 7D 90 00 
09298     00 00 00 00 | 	byte	$01, $7d, $30, $00, $00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00
0929c     00 00 00 00 
092a0     00          | 	byte	$00[5]
092a1     FE 10 00 00 
092a5     00 00 00 00 
092a9     00 00 00 01 
092ad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
092b1     FE 10 00 01 
092b5     7D 90 00 00 
092b9     00 00 00 01 
092bd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
092c1     AC 70 00 00 
092c5     00 00 00 00 
092c9     00 00 00 00 
092cd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
092d1     00 00 00 01 
092d5     40 40 00 00 
092d9     00 00 00 01 
092dd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
092e1     AC 70 00 00 
092e5     00 00 00 00 
092e9     00 00 00 00 
092ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
092f1     00 00 00 01 
092f5     40 40 00 00 
092f9     00 00 00 01 
092fd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
09301     FE 10 00 00 
09305     00 00 00 00 
09309     00 00 00 00 
0930d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09311     FE 10 00 01 
09315     40 40 00 00 
09319     00 00 00 00 
0931d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
09321     AA 20 00 00 
09325     00 00 00 00 
09329     00 00 00 00 
0932d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09331     00 00 00 01 
09335     40 40 00 00 
09339     00 00 00 01 
0933d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
09341     AC 70 00 00 
09345     00 00 00 00 
09349     00 00 00 00 
0934d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09351     00 00 00 01 
09355     AC 50 00 00 
09359     00 00 00 01 
0935d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
09361     AC 70 00 00 
09365     00 00 00 00 
09369     00 00 00 00 
0936d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09371     00 00 00 01 
09375     AC 50 00 00 
09379     00 00 00 00 
0937d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09381     FE 10 00 00 
09385     00 00 00 00 
09389     00 00 00 01 
0938d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09391     00 00 00 01 
09395     AC 50 00 00 
09399     00 00 00 00 
0939d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093a1     FE 10 00 00 
093a5     00 00 00 00 
093a9     00 00 00 01 
093ad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
093b1     FE 10 00 01 
093b5     AC 50 00 00 
093b9     00 00 00 01 
093bd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
093c1     AC 70 00 00 
093c5     00 00 00 00 
093c9     00 00 00 00 
093cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093d1     00 00 00 01 
093d5     AC 50 00 00 
093d9     00 00 00 01 
093dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
093e1     AC 70 00 00 
093e5     00 00 00 00 
093e9     00 00 00 00 
093ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
093f1     00 00 00 01 
093f5     AC 50 00 00 
093f9     00 00 00 01 
093fd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
09401     FE 10 00 00 
09405     00 00 00 00 
09409     00 00 00 00 
0940d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09411     FE 10 00 01 
09415     AC 50 00 00 
09419     00 00 00 01 
0941d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09421     AA 20 00 00 
09425     00 00 00 00 
09429     00 00 00 00 
0942d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09431     00 00 00 01 
09435     AC 50 00 00 
09439     00 00 00 01 
0943d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09441     00 00 00 00 
09445     00 00 00 00 
09449     00 00 00 00 
0944d     00 00 00 00 
09451     00 00 00    | 	byte	$00[19]
09454     01 1D 40 00 
09458     00 00 00 00 
0945c     02 3A 30 00 
09460     01 AC 70 00 | 	byte	$01, $1d, $40, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $01, $ac, $70, $00
09464     00 00 00 00 
09468     00 00 00 00 | 	byte	$00[8]
0946c     01 1D 30 00 
09470     00 00 00 00 
09474     01 1D 40 00 
09478     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $00, $00, $00, $01, $1d, $40, $00, $00, $00, $00, $00
0947c     00 00 00 00 
09480     00          | 	byte	$00[5]
09481     FE 10 00 00 
09485     00 00 00 00 
09489     00 00 00 02 
0948d     3A 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $00
09491     00 00 00 01 
09495     1D 40 00 00 
09499     00 00 00 01 
0949d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
094a1     FE 10 00 00 
094a5     00 00 00 00 
094a9     00 00 00 00 
094ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
094b1     FE 10 00 01 
094b5     1D 40 00 00 
094b9     00 00 00 02 
094bd     3A 30 00 01 | 	byte	$fe, $10, $00, $01, $1d, $40, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $01
094c1     AC 70 00 00 
094c5     00 00 00 00 
094c9     00 00 00 00 
094cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
094d1     00 00 00 01 
094d5     1D 40 00 00 
094d9     00 00 00 02 
094dd     3A 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $40, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $01
094e1     AC 70 00 00 
094e5     00 00 00 00 
094e9     00 00 00 00 
094ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
094f1     00 00 00 01 
094f5     1D 40 00 00 
094f9     00 00 00 01 
094fd     C5 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $40, $00, $00, $00, $00, $00, $01, $c5, $30, $00, $00
09501     FE 10 00 00 
09505     00 00 00 00 
09509     00 00 00 01 
0950d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09511     FE 10 00 01 
09515     1D 40 00 00 
09519     00 00 00 01 
0951d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09521     AA 20 00 00 
09525     00 0C 00 00 
09529     00 00 00 00 
0952d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09531     00 00 00 00 
09535     00 00 00 00 
09539     00 00 00 00 
0953d     00 00 00    | 	byte	$00[15]
09540     01 AC 70 00 
09544     00 00 00 00 
09548     00 00 00 00 
0954c     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09550     00 00 00 00 
09554     00 00 00 00 
09558     00 00 00 00 
0955c     00 00 00 00 | 	byte	$00[16]
09560     01 AC 70 00 
09564     00 00 00 00 
09568     00 00 00 00 
0956c     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09570     00 00 00 00 
09574     00 00 00 00 
09578     00 00 00 00 
0957c     00 00 00 00 
09580     00          | 	byte	$00[17]
09581     FE 10 00 00 
09585     00 00 00 00 
09589     00 00 00 00 
0958d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09591     00 00 00 00 
09595     00 00 00 00 
09599     00 00 00 00 
0959d     00 00 00 00 | 	byte	$00[16]
095a1     FE 10 00 00 
095a5     00 00 00 00 
095a9     00 00 00 00 
095ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
095b1     FE 10 00 00 
095b5     00 00 00 00 
095b9     00 00 00 00 
095bd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
095c1     AC 70 00 00 
095c5     00 00 00 00 
095c9     00 00 00 02 
095cd     3A 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $00
095d1     00 00 00 00 
095d5     00 00 00 00 
095d9     00 00 00    | 	byte	$00[11]
095dc     01 1D 30 00 
095e0     01 AC 70 00 
095e4     00 00 00 00 
095e8     00 00 00 00 | 	byte	$01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
095ec     02 3A 30 00 
095f0     00 00 00 00 
095f4     00 00 00 00 
095f8     00 00 00 00 | 	byte	$02, $3a, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
095fc     00 00 0C 00 
09600     00 FE 10 00 
09604     00 00 00 00 
09608     00 00 00 00 | 	byte	$00, $00, $0c, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0960c     02 3A 30 00 
09610     00 FE 10 00 
09614     00 00 00 00 
09618     00 00 00 00 | 	byte	$02, $3a, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0961c     01 1D 30 00 
09620     00 AA 20 00 
09624     00 00 00 00 
09628     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
0962c     00 00 00 00 
09630     00 00 00 00 
09634     00 00 00 00 
09638     00 00 00 00 | 	byte	$00[16]
0963c     01 40 30 00 
09640     00 AA 20 00 
09644     00 00 00 00 
09648     00 00 00 00 | 	byte	$01, $40, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
0964c     01 53 30 00 
09650     00 AA 20 00 
09654     01 7D 90 00 
09658     00 00 00 00 | 	byte	$01, $53, $30, $00, $00, $aa, $20, $00, $01, $7d, $90, $00, $00, $00, $00, $00
0965c     01 7D 30 00 
09660     01 AC 70 07 
09664     00 00 00 00 
09668     00 00 00 00 | 	byte	$01, $7d, $30, $00, $01, $ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00
0966c     00 00 00 00 
09670     00 00 00 00 | 	byte	$00[8]
09674     01 7D 90 00 
09678     00 00 00 00 
0967c     00 00 00 00 
09680     00 FE 10 00 | 	byte	$01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00
09684     00 00 00 00 
09688     00 00 00 00 | 	byte	$00[8]
0968c     01 7D 30 00 
09690     00 00 00 00 
09694     01 7D 90 00 
09698     00 FE A0 00 | 	byte	$01, $7d, $30, $00, $00, $00, $00, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00
0969c     00 00 00 00 
096a0     00          | 	byte	$00[5]
096a1     FE 10 00 00 
096a5     00 00 00 01 
096a9     1D A0 00 01 
096ad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $01, $7d, $30, $00, $00
096b1     FE 10 00 01 
096b5     7D 90 00 00 
096b9     00 00 00 01 
096bd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
096c1     AC 70 00 00 
096c5     00 00 00 00 
096c9     FE A0 00 00 
096cd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $fe, $30, $00, $00
096d1     00 00 00 01 
096d5     40 40 00 00 
096d9     00 00 00 01 
096dd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
096e1     AC 70 00 00 
096e5     00 00 00 00 
096e9     00 00 00 00 
096ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
096f1     00 00 00 01 
096f5     40 40 00 01 
096f9     40 A0 00 01 
096fd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $01, $40, $a0, $00, $01, $40, $30, $00, $00
09701     FE 10 00 00 
09705     00 00 00 00 
09709     00 00 00 00 
0970d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09711     FE 10 00 01 
09715     40 40 00 01 
09719     1D A0 00 00 
0971d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $01, $1d, $a0, $00, $00, $fe, $30, $00, $00
09721     AA 20 00 00 
09725     00 00 00 00 
09729     00 00 00 00 
0972d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09731     00 00 00 01 
09735     40 40 00 00 
09739     FE A0 00 01 
0973d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $fe, $a0, $00, $01, $ac, $30, $00, $01
09741     AC 70 00 00 
09745     00 00 00 00 
09749     00 00 00 00 
0974d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09751     00 00 00 01 
09755     AC 50 00 01 
09759     1D A0 00 01 
0975d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $1d, $a0, $00, $01, $ac, $30, $00, $01
09761     AC 70 00 00 
09765     00 00 00 00 
09769     00 00 00 00 
0976d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09771     00 00 00 01 
09775     AC 50 00 00 
09779     00 00 00 00 
0977d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09781     FE 10 00 00 
09785     00 00 00 00 
09789     00 00 00 01 
0978d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09791     00 00 00 01 
09795     AC 50 00 01 
09799     40 A0 00 00 
0979d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $40, $a0, $00, $00, $00, $00, $00, $00
097a1     FE 10 00 00 
097a5     00 00 00 00 
097a9     00 00 00 01 
097ad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
097b1     FE 10 00 01 
097b5     AC 50 00 00 
097b9     00 00 00 01 
097bd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
097c1     AC 70 00 00 
097c5     00 00 00 00 
097c9     00 00 00 00 
097cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
097d1     00 00 00 01 
097d5     AC 50 00 01 
097d9     AC A0 00 01 
097dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $ac, $a0, $00, $01, $1d, $30, $00, $01
097e1     AC 70 00 00 
097e5     00 00 00 00 
097e9     00 00 00 00 
097ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
097f1     00 00 00 01 
097f5     AC 50 00 00 
097f9     00 00 00 01 
097fd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
09801     FE 10 00 00 
09805     00 00 00 00 
09809     00 00 00 00 
0980d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09811     FE 10 00 01 
09815     AC 50 00 00 
09819     00 00 00 01 
0981d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09821     AA 20 00 00 
09825     00 00 00 00 
09829     00 00 00 00 
0982d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09831     00 00 00 01 
09835     AC 50 00 00 
09839     00 00 00 01 
0983d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09841     00 00 00 00 
09845     00 00 00 00 
09849     00 00 00 00 
0984d     00 00 00 00 
09851     00 00 00    | 	byte	$00[19]
09854     01 68 40 00 
09858     00 00 00 00 
0985c     01 68 30 00 
09860     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01, $ac, $70, $00
09864     00 00 00 00 
09868     00 00 00 00 
0986c     00 00 00 00 
09870     00 00 00 00 | 	byte	$00[16]
09874     01 68 40 00 
09878     01 68 A0 00 
0987c     00 00 00 00 
09880     00 FE 10 00 | 	byte	$01, $68, $40, $00, $01, $68, $a0, $00, $00, $00, $00, $00, $00, $fe, $10, $00
09884     00 00 00 00 
09888     00 00 00 00 | 	byte	$00[8]
0988c     01 68 30 00 
09890     00 00 00 00 
09894     01 68 40 00 
09898     01 40 A0 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $40, $00, $01, $40, $a0, $00
0989c     00 00 00 00 
098a0     00          | 	byte	$00[5]
098a1     FE 10 00 00 
098a5     00 00 00 01 
098a9     1D A0 00 01 
098ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $01, $68, $30, $00, $00
098b1     FE 10 00 01 
098b5     68 40 00 00 
098b9     00 00 00 01 
098bd     1D 30 00 01 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
098c1     AC 70 00 00 
098c5     00 00 00 00 
098c9     FE A0 00 00 
098cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
098d1     00 00 00 01 
098d5     68 40 00 00 
098d9     00 00 00 00 
098dd     F0 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $01
098e1     AC 70 00 00 
098e5     00 00 00 00 
098e9     00 00 00 00 
098ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
098f1     00 00 00 01 
098f5     68 40 00 01 
098f9     1D A0 00 01 
098fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $68, $40, $00, $01, $1d, $a0, $00, $01, $1d, $30, $00, $00
09901     FE 10 00 00 
09905     00 00 00 00 
09909     00 00 00 00 
0990d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09911     FE 10 00 01 
09915     68 40 00 01 
09919     40 A0 00 01 
0991d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $01, $40, $a0, $00, $01, $1d, $30, $00, $00
09921     AA 20 00 00 
09925     00 00 00 00 
09929     00 00 00 00 
0992d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09931     00 00 00 01 
09935     68 40 00 01 
09939     1D A0 00 01 
0993d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $01, $1d, $a0, $00, $01, $68, $30, $00, $01
09941     AC 70 00 00 
09945     00 00 00 00 
09949     00 00 00 00 
0994d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09951     00 00 00 01 
09955     68 50 00 00 
09959     F0 A0 00 01 
0995d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $f0, $a0, $00, $01, $68, $30, $00, $01
09961     AC 70 00 00 
09965     00 00 00 00 
09969     00 00 00 00 
0996d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09971     00 00 00 01 
09975     68 50 00 00 
09979     FE A0 00 00 
0997d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
09981     FE 10 00 00 
09985     00 00 00 00 
09989     00 00 00 01 
0998d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
09991     00 00 00 01 
09995     68 50 00 01 
09999     1D A0 00 00 
0999d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
099a1     FE 10 00 00 
099a5     00 00 00 00 
099a9     00 00 00 01 
099ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
099b1     FE 10 00 01 
099b5     68 50 00 01 
099b9     40 A0 00 00 
099bd     00 00 00 01 | 	byte	$fe, $10, $00, $01, $68, $50, $00, $01, $40, $a0, $00, $00, $00, $00, $00, $01
099c1     AC 70 00 00 
099c5     00 00 00 00 
099c9     00 00 00 00 
099cd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
099d1     00 00 00 01 
099d5     1D 80 00 01 
099d9     1D A0 00 01 
099dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $01, $1d, $a0, $00, $01, $1d, $30, $00, $01
099e1     AC 70 00 00 
099e5     00 00 00 00 
099e9     00 00 00 00 
099ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
099f1     00 00 00 01 
099f5     1D 80 00 00 
099f9     00 00 00 00 
099fd     00 00 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a01     FE 10 00 00 
09a05     00 00 00 00 
09a09     00 00 00 01 
09a0d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09a11     FE 10 00 01 
09a15     1D 80 00 00 
09a19     FE A0 00 01 
09a1d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $80, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $00
09a21     AA 20 00 00 
09a25     00 00 00 00 
09a29     00 00 00 00 
09a2d     F0 30 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
09a31     00 00 00 01 
09a35     1D 80 00 00 
09a39     00 00 00 01 
09a3d     7D 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09a41     BE 10 00 00 
09a45     00 00 00 00 
09a49     00 00 00 01 
09a4d     1D 30 00 00 | 	byte	$be, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09a51     BE 10 00 01 
09a55     7D 90 00 00 
09a59     00 00 00 01 
09a5d     7D 30 00 01 | 	byte	$be, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $01
09a61     AC 70 07 00 
09a65     00 00 00 00 
09a69     BE A0 00 00 
09a6d     00 00 00 00 | 	byte	$ac, $70, $07, $00, $00, $00, $00, $00, $be, $a0, $00, $00, $00, $00, $00, $00
09a71     00 00 00 01 
09a75     7D 90 00 00 
09a79     00 00 00 00 
09a7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09a81     FE 10 00 00 
09a85     00 00 00 00 
09a89     BE A0 00 01 
09a8d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $be, $a0, $00, $01, $7d, $30, $00, $00
09a91     00 00 00 01 
09a95     7D 90 00 00 
09a99     00 00 00 00 
09a9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09aa1     FE 10 00 00 
09aa5     00 00 00 00 
09aa9     BE A0 00 01 
09aad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $be, $a0, $00, $01, $7d, $30, $00, $00
09ab1     FE 10 00 01 
09ab5     7D 90 00 00 
09ab9     D6 A0 00 01 
09abd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $d6, $a0, $00, $01, $40, $30, $00, $01
09ac1     AC 70 00 00 
09ac5     00 00 00 00 
09ac9     00 00 00 00 
09acd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
09ad1     00 00 00 01 
09ad5     40 40 00 00 
09ad9     BE A0 00 01 
09add     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $be, $a0, $00, $01, $40, $30, $00, $01
09ae1     AC 70 00 00 
09ae5     00 00 00 00 
09ae9     00 00 00 00 
09aed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09af1     00 00 00 01 
09af5     40 40 00 00 
09af9     00 00 00 01 
09afd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
09b01     FE 10 00 00 
09b05     00 00 00 00 
09b09     00 00 00 00 
09b0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b11     FE 10 00 01 
09b15     40 40 00 00 
09b19     FE A0 00 00 
09b1d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $fe, $a0, $00, $00, $fe, $30, $00, $00
09b21     AA 20 00 00 
09b25     00 00 00 00 
09b29     00 00 00 00 
09b2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b31     00 00 00 01 
09b35     40 40 00 01 
09b39     1D A0 00 01 
09b3d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $01, $1d, $a0, $00, $01, $ac, $30, $00, $01
09b41     AC 70 00 00 
09b45     00 00 00 00 
09b49     00 00 00 00 
09b4d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b51     00 00 00 01 
09b55     AC 50 00 00 
09b59     FE A0 00 01 
09b5d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $fe, $a0, $00, $01, $ac, $30, $00, $01
09b61     AC 70 00 00 
09b65     00 00 00 00 
09b69     00 00 00 00 
09b6d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b71     00 00 00 01 
09b75     AC 50 00 00 
09b79     00 00 00 00 
09b7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09b81     FE 10 00 00 
09b85     00 00 00 01 
09b89     1D A0 00 01 
09b8d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $01, $ac, $30, $00, $00
09b91     00 00 00 01 
09b95     AC 50 00 00 
09b99     00 00 00 00 
09b9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ba1     FE 10 00 00 
09ba5     00 00 00 00 
09ba9     00 00 00 01 
09bad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09bb1     FE 10 00 01 
09bb5     AC 50 00 01 
09bb9     40 A0 00 01 
09bbd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $01, $40, $a0, $00, $01, $53, $30, $00, $01
09bc1     AC 70 00 00 
09bc5     00 00 00 00 
09bc9     00 00 00 00 
09bcd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bd1     00 00 00 01 
09bd5     AC 50 00 01 
09bd9     1D A0 00 01 
09bdd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $1d, $a0, $00, $01, $1d, $30, $00, $01
09be1     AC 70 00 00 
09be5     00 00 00 00 
09be9     00 00 00 00 
09bed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09bf1     00 00 00 01 
09bf5     AC 50 00 00 
09bf9     00 00 00 01 
09bfd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
09c01     FE 10 00 00 
09c05     00 00 00 00 
09c09     00 00 00 00 
09c0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c11     FE 10 00 01 
09c15     AC 50 00 00 
09c19     00 00 00 01 
09c1d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09c21     AA 20 00 00 
09c25     00 00 00 00 
09c29     00 00 00 00 
09c2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09c31     00 00 00 01 
09c35     AC 50 00 00 
09c39     00 00 00 01 
09c3d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09c41     00 00 00 00 
09c45     00 00 00 00 
09c49     00 00 00 00 
09c4d     00 00 00 00 
09c51     00 00 00    | 	byte	$00[19]
09c54     01 68 40 00 
09c58     00 F0 A0 00 
09c5c     01 68 30 00 
09c60     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $f0, $a0, $00, $01, $68, $30, $00, $01, $ac, $70, $00
09c64     00 00 00 00 
09c68     00          | 	byte	$00[5]
09c69     FE A0 00 00 
09c6d     00 00 00 00 
09c71     00 00 00 01 
09c75     68 40 00 01 | 	byte	$fe, $a0, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $40, $00, $01
09c79     1D A0 00 00 
09c7d     00 00 00 00 
09c81     FE 10 00 00 
09c85     00 00 00 00 | 	byte	$1d, $a0, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00
09c89     00 00 00 01 
09c8d     68 30 00 00 
09c91     00 00 00 01 
09c95     68 40 00 01 | 	byte	$00, $00, $00, $01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $40, $00, $01
09c99     40 A0 00 00 
09c9d     00 00 00 00 
09ca1     FE 10 00 00 
09ca5     00 00 00 00 | 	byte	$40, $a0, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00
09ca9     00 00 00 01 
09cad     68 30 00 00 
09cb1     FE 10 00 01 
09cb5     68 40 00 01 | 	byte	$00, $00, $00, $01, $68, $30, $00, $00, $fe, $10, $00, $01, $68, $40, $00, $01
09cb9     1D A0 00 01 
09cbd     1D 30 00 01 
09cc1     AC 70 00 00 
09cc5     00 00 00 00 | 	byte	$1d, $a0, $00, $01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00
09cc9     00 00 00 00 
09ccd     00 00 00 00 
09cd1     00 00 00    | 	byte	$00[11]
09cd4     01 68 40 00 
09cd8     00 00 00 00 
09cdc     00 F0 30 00 
09ce0     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $01, $ac, $70, $00
09ce4     00 00 00 00 
09ce8     00 00 00 00 
09cec     00 00 00 00 
09cf0     00 00 00 00 | 	byte	$00[16]
09cf4     01 68 40 00 
09cf8     00 00 00 00 
09cfc     01 1D 30 00 
09d00     00 FE 10 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00, $fe, $10, $00
09d04     00 00 00 00 
09d08     00 00 00 00 
09d0c     00 00 00 00 
09d10     00          | 	byte	$00[13]
09d11     FE 10 00 01 
09d15     68 40 00 00 
09d19     00 00 00 01 
09d1d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09d21     AA 20 00 00 
09d25     00 00 00 00 
09d29     00 00 00 00 
09d2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d31     00 00 00 01 
09d35     68 40 00 00 
09d39     00 00 00 01 
09d3d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01
09d41     AC 70 00 00 
09d45     00 00 00 00 
09d49     00 00 00 00 
09d4d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09d51     00 00 00 01 
09d55     68 50 00 00 
09d59     F0 A0 00 01 
09d5d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $f0, $a0, $00, $01, $68, $30, $00, $01
09d61     AC 70 00 00 
09d65     00 00 00 00 
09d69     FE A0 00 00 
09d6d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
09d71     00 00 00 01 
09d75     68 50 00 01 
09d79     1D A0 00 00 
09d7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
09d81     FE 10 00 00 
09d85     00 00 00 00 
09d89     00 00 00 01 
09d8d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
09d91     00 00 00 01 
09d95     68 50 00 01 
09d99     40 A0 00 00 
09d9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $01, $40, $a0, $00, $00, $00, $00, $00, $00
09da1     FE 10 00 00 
09da5     00 00 00 00 
09da9     00 00 00 01 
09dad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
09db1     FE 10 00 01 
09db5     68 50 00 01 
09db9     1D A0 00 00 
09dbd     00 00 00 01 | 	byte	$fe, $10, $00, $01, $68, $50, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $01
09dc1     AC 70 00 00 
09dc5     00 00 00 00 
09dc9     00 00 00 00 
09dcd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
09dd1     00 00 00 01 
09dd5     1D 80 00 00 
09dd9     FE A0 00 01 
09ddd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $01
09de1     AC 70 00 00 
09de5     00 00 00 00 
09de9     00 00 00 00 
09ded     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09df1     00 00 00 01 
09df5     1D 80 00 00 
09df9     00 00 00 00 
09dfd     00 00 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e01     FE 10 00 00 
09e05     00 00 00 00 
09e09     00 00 00 01 
09e0d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09e11     FE 10 00 01 
09e15     1D 80 00 00 
09e19     F0 A0 00 01 
09e1d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $80, $00, $00, $f0, $a0, $00, $01, $1d, $30, $00, $00
09e21     AA 20 00 00 
09e25     00 00 00 00 
09e29     00 00 00 00 
09e2d     F0 30 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
09e31     AA 20 00 01 
09e35     1D 80 00 00 
09e39     00 00 00 01 
09e3d     7D 30 00 00 | 	byte	$aa, $20, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09e41     BE 10 00 00 
09e45     00 00 00 00 
09e49     00 00 00 01 
09e4d     1D 30 00 00 | 	byte	$be, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
09e51     BE 10 00 01 
09e55     7D 90 00 00 
09e59     FE A0 00 01 
09e5d     7D 30 00 01 | 	byte	$be, $10, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $01, $7d, $30, $00, $01
09e61     AC 70 07 00 
09e65     00 00 00 00 
09e69     00 00 00 00 
09e6d     00 00 00 00 | 	byte	$ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e71     00 00 00 01 
09e75     7D 90 00 00 
09e79     00 00 00 00 
09e7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09e81     FE 10 00 00 
09e85     00 00 00 00 
09e89     00 00 00 01 
09e8d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09e91     00 00 00 01 
09e95     7D 90 00 00 
09e99     00 00 00 00 
09e9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ea1     FE 10 00 00 
09ea5     00 00 00 00 
09ea9     00 00 00 01 
09ead     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
09eb1     FE 10 00 01 
09eb5     7D 90 00 00 
09eb9     00 00 00 01 
09ebd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
09ec1     AC 70 00 00 
09ec5     00 00 00 00 
09ec9     00 00 00 00 
09ecd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
09ed1     00 00 00 01 
09ed5     40 40 00 00 
09ed9     00 00 00 01 
09edd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
09ee1     AC 70 00 00 
09ee5     00 00 00 00 
09ee9     00 00 00 00 
09eed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09ef1     00 00 00 01 
09ef5     40 40 00 00 
09ef9     00 00 00 01 
09efd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
09f01     FE 10 00 00 
09f05     00 00 00 00 
09f09     00 00 00 00 
09f0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f11     FE 10 00 01 
09f15     40 40 00 00 
09f19     00 00 00 00 
09f1d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
09f21     AA 20 00 00 
09f25     00 00 00 00 
09f29     00 00 00 00 
09f2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f31     00 00 00 01 
09f35     40 40 00 00 
09f39     00 00 00 01 
09f3d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
09f41     AC 70 00 00 
09f45     00 00 00 01 
09f49     FC B0 00 00 
09f4d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $fc, $b0, $00, $00, $00, $00, $00, $00
09f51     00 00 00 01 
09f55     AC 50 00 00 
09f59     00 00 00 01 
09f5d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
09f61     AC 70 00 00 
09f65     00 00 00 00 
09f69     00 00 00 00 
09f6d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f71     00 00 00 01 
09f75     AC 50 00 00 
09f79     00 00 00 00 
09f7d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09f81     FE 10 00 00 
09f85     00 00 00 00 
09f89     00 00 00 01 
09f8d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09f91     00 00 00 01 
09f95     AC 50 00 00 
09f99     00 00 00 00 
09f9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fa1     FE 10 00 00 
09fa5     00 00 00 00 
09fa9     00 00 00 01 
09fad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
09fb1     FE 10 00 01 
09fb5     AC 50 00 00 
09fb9     00 00 00 01 
09fbd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
09fc1     AC 70 00 00 
09fc5     00 00 00 00 
09fc9     00 00 00 00 
09fcd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
09fd1     00 00 00 01 
09fd5     AC 50 00 01 
09fd9     FC B0 00 01 
09fdd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $fc, $b0, $00, $01, $1d, $30, $00, $01
09fe1     AC 70 00 00 
09fe5     00 00 00 01 
09fe9     FC B0 00 00 
09fed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $fc, $b0, $00, $00, $00, $00, $00, $00
09ff1     00 00 00 01 
09ff5     AC 50 00 01 
09ff9     FC B0 00 01 
09ffd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $01, $fc, $b0, $00, $01, $53, $30, $00, $00
0a001     FE 10 00 00 
0a005     00 00 00 00 
0a009     00 00 00 00 
0a00d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a011     FE 10 00 01 
0a015     AC 50 00 00 
0a019     00 00 00 01 
0a01d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a021     AA 20 00 00 
0a025     00 00 00 00 
0a029     00 00 00 00 
0a02d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a031     00 00 00 01 
0a035     AC 50 00 00 
0a039     00 00 00 01 
0a03d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0a041     00 00 00 00 
0a045     00 00 00 00 
0a049     00 00 00 00 
0a04d     00 00 00 00 
0a051     00 00 00    | 	byte	$00[19]
0a054     01 68 40 00 
0a058     00 00 00 00 
0a05c     01 68 30 00 
0a060     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01, $ac, $70, $00
0a064     00 00 00 00 
0a068     00 00 00 00 
0a06c     00 00 00 00 
0a070     00 00 00 00 | 	byte	$00[16]
0a074     01 68 40 00 
0a078     00 00 00 00 
0a07c     00 00 00 00 
0a080     00 FE 10 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00
0a084     00 00 00 00 
0a088     00 00 00 00 | 	byte	$00[8]
0a08c     01 68 30 00 
0a090     00 00 00 00 
0a094     01 68 40 00 
0a098     00 00 00 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00
0a09c     00 00 00 00 
0a0a0     00          | 	byte	$00[5]
0a0a1     FE 10 00 00 
0a0a5     00 00 00 00 
0a0a9     00 00 00 01 
0a0ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
0a0b1     FE 10 00 01 
0a0b5     68 40 00 01 
0a0b9     FC C0 00 01 
0a0bd     1D 30 00 01 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $01, $fc, $c0, $00, $01, $1d, $30, $00, $01
0a0c1     AC 70 00 00 
0a0c5     00 00 00 00 
0a0c9     00 00 00 00 
0a0cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0d1     00 00 00 01 
0a0d5     68 40 00 00 
0a0d9     00 00 00 00 
0a0dd     F0 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $01
0a0e1     AC 70 00 00 
0a0e5     00 00 00 00 
0a0e9     00 00 00 00 
0a0ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a0f1     00 00 00 01 
0a0f5     68 40 00 00 
0a0f9     00 00 00 01 
0a0fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0a101     FE 10 00 00 
0a105     00 00 00 00 
0a109     00 00 00 00 
0a10d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a111     FE 10 00 01 
0a115     68 40 00 00 
0a119     00 00 00 01 
0a11d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0a121     AA 20 00 00 
0a125     00 00 00 00 
0a129     00 00 00 00 
0a12d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a131     AA 20 00 01 
0a135     68 40 00 00 
0a139     00 00 00 01 
0a13d     68 30 00 01 | 	byte	$aa, $20, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01
0a141     AC 70 00 00 
0a145     00 00 00 00 
0a149     00 00 00 00 
0a14d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a151     00 00 00 01 
0a155     68 50 00 00 
0a159     00 00 00 01 
0a15d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01
0a161     AC 70 00 00 
0a165     00 00 00 00 
0a169     00 00 00 00 
0a16d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a171     00 00 00 01 
0a175     68 50 00 00 
0a179     00 00 00 00 
0a17d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a181     FE 10 00 00 
0a185     00 00 00 00 
0a189     00 00 00 01 
0a18d     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
0a191     00 00 00 01 
0a195     68 50 00 01 
0a199     FC C0 00 00 
0a19d     00 00 00 00 | 	byte	$00, $00, $00, $01, $68, $50, $00, $01, $fc, $c0, $00, $00, $00, $00, $00, $00
0a1a1     FE 10 00 00 
0a1a5     00 00 00 01 
0a1a9     FC C0 00 01 
0a1ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $01, $fc, $c0, $00, $01, $68, $30, $00, $00
0a1b1     FE 10 00 01 
0a1b5     68 50 00 01 
0a1b9     FC C0 00 00 
0a1bd     00 00 00 01 | 	byte	$fe, $10, $00, $01, $68, $50, $00, $01, $fc, $c0, $00, $00, $00, $00, $00, $01
0a1c1     AC 70 00 00 
0a1c5     00 00 00 00 
0a1c9     00 00 00 00 
0a1cd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
0a1d1     00 00 00 01 
0a1d5     1D 80 00 00 
0a1d9     00 00 00 01 
0a1dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
0a1e1     AC 70 00 00 
0a1e5     00 00 00 00 
0a1e9     00 00 00 00 
0a1ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a1f1     00 00 00 01 
0a1f5     1D 80 00 00 
0a1f9     00 00 00 01 
0a1fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0a201     FE 10 00 00 
0a205     00 00 00 00 
0a209     00 00 00 00 
0a20d     8F 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $8f, $30, $00, $00
0a211     FE 10 00 01 
0a215     1D 90 00 00 
0a219     00 00 00 01 
0a21d     40 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
0a221     AA 20 00 00 
0a225     00 00 00 00 
0a229     00 00 00 00 
0a22d     00 02 0C 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $0c, $00
0a231     00 00 00 01 
0a235     1D 90 00 00 
0a239     00 00 00 00 
0a23d     00 02 0C 00 | 	byte	$00, $00, $00, $01, $1d, $90, $00, $00, $00, $00, $00, $00, $00, $02, $0c, $00
0a241     AA 20 00 00 
0a245     00 00 00 00 
0a249     00 00 00 00 
0a24d     00 02 0C 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $0c, $00
0a251     AA 20 00 01 
0a255     7D 90 00 01 
0a259     FC D0 00 01 
0a25d     7D 30 00 01 | 	byte	$aa, $20, $00, $01, $7d, $90, $00, $01, $fc, $d0, $00, $01, $7d, $30, $00, $01
0a261     AC 70 07 00 
0a265     00 00 00 00 
0a269     00 00 00 00 
0a26d     00 00 00 00 | 	byte	$ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a271     00 00 00 01 
0a275     7D 90 00 00 
0a279     00 00 00 00 
0a27d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a281     FE 10 00 00 
0a285     00 00 00 00 
0a289     00 00 00 01 
0a28d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
0a291     00 00 00 01 
0a295     7D 90 00 00 
0a299     00 00 00 00 
0a29d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2a1     FE 10 00 00 
0a2a5     00 00 00 00 
0a2a9     00 00 00 01 
0a2ad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
0a2b1     FE 10 00 01 
0a2b5     7D 90 00 00 
0a2b9     00 00 00 01 
0a2bd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
0a2c1     AC 70 00 00 
0a2c5     00 00 00 00 
0a2c9     00 00 00 00 
0a2cd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
0a2d1     00 00 00 01 
0a2d5     40 40 00 00 
0a2d9     00 00 00 01 
0a2dd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
0a2e1     AC 70 00 00 
0a2e5     00 00 00 00 
0a2e9     00 00 00 00 
0a2ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a2f1     00 00 00 01 
0a2f5     40 40 00 00 
0a2f9     00 00 00 01 
0a2fd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $00
0a301     FE 10 00 00 
0a305     00 00 00 00 
0a309     00 00 00 00 
0a30d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a311     FE 10 00 01 
0a315     40 40 00 00 
0a319     00 00 00 00 
0a31d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
0a321     AA 20 00 00 
0a325     00 00 00 00 
0a329     00 00 00 00 
0a32d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a331     00 00 00 01 
0a335     40 40 00 00 
0a339     00 00 00 01 
0a33d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
0a341     AC 70 00 00 
0a345     00 00 00 00 
0a349     00 00 00 00 
0a34d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a351     00 00 00 01 
0a355     AC 50 00 00 
0a359     00 00 00 01 
0a35d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $01
0a361     AC 70 00 00 
0a365     00 00 00 00 
0a369     00 00 00 00 
0a36d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a371     00 00 00 01 
0a375     AC 50 00 00 
0a379     00 00 00 00 
0a37d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a381     FE 10 00 00 
0a385     00 00 00 00 
0a389     00 00 00 01 
0a38d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a391     00 00 00 01 
0a395     AC 50 00 00 
0a399     00 00 00 00 
0a39d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3a1     FE 10 00 00 
0a3a5     00 00 00 00 
0a3a9     00 00 00 01 
0a3ad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a3b1     FE 10 00 01 
0a3b5     AC 50 00 00 
0a3b9     00 00 00 01 
0a3bd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $01
0a3c1     AC 70 00 00 
0a3c5     00 00 00 00 
0a3c9     00 00 00 00 
0a3cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3d1     00 00 00 01 
0a3d5     AC 50 00 00 
0a3d9     00 00 00 01 
0a3dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
0a3e1     AC 70 00 00 
0a3e5     00 00 00 00 
0a3e9     00 00 00 00 
0a3ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a3f1     00 00 00 01 
0a3f5     AC 50 00 00 
0a3f9     00 00 00 01 
0a3fd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
0a401     FE 10 00 00 
0a405     00 00 00 00 
0a409     00 00 00 00 
0a40d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a411     FE 10 00 01 
0a415     AC 50 00 00 
0a419     00 00 00 01 
0a41d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a421     AA 20 00 00 
0a425     00 00 00 00 
0a429     00 00 00 00 
0a42d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a431     00 00 00 01 
0a435     AC 50 00 00 
0a439     00 00 00 01 
0a43d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0a441     00 00 00 00 
0a445     00 00 00 00 
0a449     00 00 00 00 
0a44d     00 00 00 00 
0a451     00 00 00    | 	byte	$00[19]
0a454     01 68 40 00 
0a458     02 3A E0 00 
0a45c     01 68 30 00 
0a460     01 AC 70 00 | 	byte	$01, $68, $40, $00, $02, $3a, $e0, $00, $01, $68, $30, $00, $01, $ac, $70, $00
0a464     00 00 00 00 
0a468     01 FC E0 00 
0a46c     00 00 00 00 
0a470     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $fc, $e0, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a474     01 68 40 00 
0a478     01 C5 E0 00 
0a47c     00 00 00 00 
0a480     00 FE 10 00 | 	byte	$01, $68, $40, $00, $01, $c5, $e0, $00, $00, $00, $00, $00, $00, $fe, $10, $00
0a484     00 00 00 00 
0a488     01 AC E0 00 
0a48c     01 68 30 00 
0a490     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $e0, $00, $01, $68, $30, $00, $00, $00, $00, $00
0a494     01 68 40 00 
0a498     01 7D E0 00 
0a49c     00 00 00 00 
0a4a0     00 FE 10 00 | 	byte	$01, $68, $40, $00, $01, $7d, $e0, $00, $00, $00, $00, $00, $00, $fe, $10, $00
0a4a4     00 00 00 00 
0a4a8     01 53 E0 00 
0a4ac     01 68 30 00 
0a4b0     00 FE 10 00 | 	byte	$00, $00, $00, $00, $01, $53, $e0, $00, $01, $68, $30, $00, $00, $fe, $10, $00
0a4b4     01 68 40 00 
0a4b8     01 AC E0 00 
0a4bc     01 1D 30 00 
0a4c0     01 AC 70 00 | 	byte	$01, $68, $40, $00, $01, $ac, $e0, $00, $01, $1d, $30, $00, $01, $ac, $70, $00
0a4c4     00 00 00 00 
0a4c8     01 7D E0 00 
0a4cc     00 00 00 00 
0a4d0     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $e0, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4d4     01 68 40 00 
0a4d8     01 53 E0 00 
0a4dc     00 F0 30 00 
0a4e0     01 AC 70 00 | 	byte	$01, $68, $40, $00, $01, $53, $e0, $00, $00, $f0, $30, $00, $01, $ac, $70, $00
0a4e4     00 00 00 00 
0a4e8     01 40 E0 00 
0a4ec     00 00 00 00 
0a4f0     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $40, $e0, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a4f4     01 68 40 00 
0a4f8     01 1D E0 00 
0a4fc     01 1D 30 00 
0a500     00 FE 10 00 | 	byte	$01, $68, $40, $00, $01, $1d, $e0, $00, $01, $1d, $30, $00, $00, $fe, $10, $00
0a504     00 00 00 00 
0a508     00          | 	byte	$00[5]
0a509     FE E0 00 00 
0a50d     00 00 00 00 
0a511     FE 10 00 01 
0a515     68 40 00 00 | 	byte	$fe, $e0, $00, $00, $00, $00, $00, $00, $fe, $10, $00, $01, $68, $40, $00, $00
0a519     E2 E0 00 01 
0a51d     1D 30 00 00 
0a521     AA 20 00 00 
0a525     00 00 00 00 | 	byte	$e2, $e0, $00, $01, $1d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00
0a529     D6 E0 00 00 
0a52d     00 00 00 00 
0a531     AA 20 00 01 
0a535     68 40 00 00 | 	byte	$d6, $e0, $00, $00, $00, $00, $00, $00, $aa, $20, $00, $01, $68, $40, $00, $00
0a539     BE E0 00 01 
0a53d     68 30 00 01 
0a541     AC 70 00 00 
0a545     00 00 00 00 | 	byte	$be, $e0, $00, $01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00
0a549     00 00 00 00 
0a54d     00 00 00 00 
0a551     00 00 00    | 	byte	$00[11]
0a554     01 68 50 00 
0a558     00 00 00 00 
0a55c     01 68 30 00 
0a560     01 AC 70 00 | 	byte	$01, $68, $50, $00, $00, $00, $00, $00, $01, $68, $30, $00, $01, $ac, $70, $00
0a564     00 00 00 00 
0a568     00 00 00 00 
0a56c     00 00 00 00 
0a570     00 00 00 00 | 	byte	$00[16]
0a574     01 68 50 00 
0a578     01 68 A0 00 
0a57c     00 00 00 00 
0a580     00 FE 10 00 | 	byte	$01, $68, $50, $00, $01, $68, $a0, $00, $00, $00, $00, $00, $00, $fe, $10, $00
0a584     00 00 00 00 
0a588     00 00 00 00 | 	byte	$00[8]
0a58c     01 68 30 00 
0a590     00 00 00 00 
0a594     01 68 50 00 
0a598     01 1D A0 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $50, $00, $01, $1d, $a0, $00
0a59c     00 00 00 00 
0a5a0     00          | 	byte	$00[5]
0a5a1     FE 10 00 00 
0a5a5     00 00 00 00 
0a5a9     00 00 00 01 
0a5ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
0a5b1     FE 10 00 01 
0a5b5     68 50 00 00 
0a5b9     F0 A0 00 00 
0a5bd     00 00 00 01 | 	byte	$fe, $10, $00, $01, $68, $50, $00, $00, $f0, $a0, $00, $00, $00, $00, $00, $01
0a5c1     AC 70 00 00 
0a5c5     00 00 00 00 
0a5c9     00 00 00 00 
0a5cd     F0 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $00
0a5d1     00 00 00 01 
0a5d5     1D 80 00 00 
0a5d9     FE A0 00 01 
0a5dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $01
0a5e1     AC 70 00 00 
0a5e5     00 00 00 00 
0a5e9     00 00 00 00 
0a5ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a5f1     00 00 00 01 
0a5f5     1D 80 00 01 
0a5f9     1D A0 00 01 
0a5fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $1d, $80, $00, $01, $1d, $a0, $00, $01, $1d, $30, $00, $00
0a601     FE 10 00 00 
0a605     00 00 00 00 
0a609     00 00 00 00 
0a60d     8F 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $8f, $30, $00, $00
0a611     FE 10 00 01 
0a615     1D 90 00 01 
0a619     40 A0 00 01 
0a61d     40 30 00 00 | 	byte	$fe, $10, $00, $01, $1d, $90, $00, $01, $40, $a0, $00, $01, $40, $30, $00, $00
0a621     AA 20 00 00 
0a625     00 00 00 00 
0a629     00 00 00 00 
0a62d     00 02 0C 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $0c, $00
0a631     00 00 00 01 
0a635     1D 90 00 01 
0a639     1D A0 00 00 
0a63d     00 02 0C 00 | 	byte	$00, $00, $00, $01, $1d, $90, $00, $01, $1d, $a0, $00, $00, $00, $02, $0c, $00
0a641     AA 20 00 00 
0a645     00 00 00 00 
0a649     00 00 00 00 
0a64d     00 02 0C 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $02, $0c, $00
0a651     AA 20 00 01 
0a655     7D 90 00 00 
0a659     FE A0 00 01 
0a65d     7D 30 00 01 | 	byte	$aa, $20, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $01, $7d, $30, $00, $01
0a661     AC 70 00 00 
0a665     00 00 00 00 
0a669     00 00 00 00 
0a66d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a671     00 00 00 01 
0a675     7D 90 00 00 
0a679     00 00 00 00 
0a67d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a681     FE 10 00 00 
0a685     00 00 00 00 
0a689     00 00 00 01 
0a68d     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
0a691     00 00 00 01 
0a695     7D 90 00 00 
0a699     FE A0 00 00 
0a69d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0a6a1     FE 10 00 00 
0a6a5     00 00 00 00 
0a6a9     00 00 00 01 
0a6ad     7D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $7d, $30, $00, $00
0a6b1     FE 10 00 01 
0a6b5     7D 90 00 01 
0a6b9     1D A0 00 01 
0a6bd     40 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $01, $1d, $a0, $00, $01, $40, $30, $00, $01
0a6c1     AC 70 00 00 
0a6c5     00 00 00 01 
0a6c9     40 A0 00 00 
0a6cd     FE 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $40, $a0, $00, $00, $fe, $30, $00, $00
0a6d1     00 00 00 01 
0a6d5     40 40 00 00 
0a6d9     00 00 00 01 
0a6dd     40 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $01, $40, $30, $00, $01
0a6e1     AC 70 00 00 
0a6e5     00 00 00 00 
0a6e9     00 00 00 00 
0a6ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a6f1     00 00 00 01 
0a6f5     40 40 00 01 
0a6f9     1D A0 00 01 
0a6fd     40 30 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $01, $1d, $a0, $00, $01, $40, $30, $00, $00
0a701     FE 10 00 00 
0a705     00 00 00 00 
0a709     00 00 00 00 
0a70d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a711     FE 10 00 01 
0a715     40 40 00 00 
0a719     FE A0 00 00 
0a71d     FE 30 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $fe, $a0, $00, $00, $fe, $30, $00, $00
0a721     AA 20 00 00 
0a725     00 00 00 00 
0a729     00 00 00 00 
0a72d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a731     00 00 00 01 
0a735     40 40 00 01 
0a739     40 A0 00 01 
0a73d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $01, $40, $a0, $00, $01, $ac, $30, $00, $01
0a741     AC 70 00 00 
0a745     00 00 00 00 
0a749     00 00 00 00 
0a74d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a751     00 00 00 01 
0a755     AC 50 00 00 
0a759     D6 A0 00 01 
0a75d     AC 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $d6, $a0, $00, $01, $ac, $30, $00, $01
0a761     AC 70 00 00 
0a765     00 00 00 00 
0a769     00 00 00 00 
0a76d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a771     00 00 00 01 
0a775     AC 50 00 00 
0a779     00 00 00 00 
0a77d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a781     FE 10 00 00 
0a785     00 00 00 00 
0a789     00 00 00 01 
0a78d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a791     00 00 00 01 
0a795     AC 50 00 00 
0a799     D6 A0 00 00 
0a79d     00 00 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $d6, $a0, $00, $00, $00, $00, $00, $00
0a7a1     FE 10 00 00 
0a7a5     00 00 00 00 
0a7a9     00 00 00 01 
0a7ad     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0a7b1     FE 10 00 01 
0a7b5     AC 50 00 00 
0a7b9     FE A0 00 01 
0a7bd     53 30 00 01 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $00, $fe, $a0, $00, $01, $53, $30, $00, $01
0a7c1     AC 70 00 00 
0a7c5     00 00 00 01 
0a7c9     1D A0 00 00 
0a7cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
0a7d1     00 00 00 01 
0a7d5     AC 50 00 00 
0a7d9     00 00 00 01 
0a7dd     1D 30 00 01 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $01
0a7e1     AC 70 00 00 
0a7e5     00 00 00 00 
0a7e9     00 00 00 00 
0a7ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a7f1     00 00 00 01 
0a7f5     AC 50 00 00 
0a7f9     00 00 00 01 
0a7fd     53 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
0a801     FE 10 00 00 
0a805     00 00 00 00 
0a809     00 00 00 00 
0a80d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a811     FE 10 00 01 
0a815     AC 50 00 01 
0a819     1D A0 00 01 
0a81d     AC 30 00 00 | 	byte	$fe, $10, $00, $01, $ac, $50, $00, $01, $1d, $a0, $00, $01, $ac, $30, $00, $00
0a821     AA 20 00 00 
0a825     00 00 00 00 
0a829     00 00 00 00 
0a82d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a831     00 00 00 01 
0a835     AC 50 00 00 
0a839     FE A0 00 01 
0a83d     1D 30 00 00 | 	byte	$00, $00, $00, $01, $ac, $50, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $00
0a841     00 00 00 00 
0a845     00 00 00 00 
0a849     00 00 00 00 
0a84d     00 00 00 00 
0a851     00 00 00    | 	byte	$00[19]
0a854     01 68 40 00 
0a858     00 F0 A0 00 
0a85c     01 68 30 00 
0a860     01 AC 70 00 | 	byte	$01, $68, $40, $00, $00, $f0, $a0, $00, $01, $68, $30, $00, $01, $ac, $70, $00
0a864     00 00 00 00 
0a868     00 00 00 00 
0a86c     00 00 00 00 
0a870     00 00 00 00 | 	byte	$00[16]
0a874     01 68 40 00 
0a878     00 00 00 00 
0a87c     00 00 00 00 
0a880     00 FE 10 00 | 	byte	$01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $10, $00
0a884     00 00 00 00 
0a888     00 00 00 00 | 	byte	$00[8]
0a88c     01 68 30 00 
0a890     00 00 00 00 
0a894     01 68 40 00 
0a898     00 F0 A0 00 | 	byte	$01, $68, $30, $00, $00, $00, $00, $00, $01, $68, $40, $00, $00, $f0, $a0, $00
0a89c     00 00 00 00 
0a8a0     00          | 	byte	$00[5]
0a8a1     FE 10 00 00 
0a8a5     00 00 00 00 
0a8a9     00 00 00 01 
0a8ad     68 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
0a8b1     FE 10 00 01 
0a8b5     68 40 00 00 
0a8b9     FE A0 00 01 
0a8bd     1D 30 00 01 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $01
0a8c1     AC 70 00 00 
0a8c5     00 00 00 01 
0a8c9     1D A0 00 00 
0a8cd     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
0a8d1     00 00 00 01 
0a8d5     68 40 00 00 
0a8d9     00 00 00 00 
0a8dd     F0 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $f0, $30, $00, $01
0a8e1     AC 70 00 00 
0a8e5     00 00 00 00 
0a8e9     00 00 00 00 
0a8ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a8f1     00 00 00 01 
0a8f5     68 40 00 01 
0a8f9     1D A0 00 01 
0a8fd     1D 30 00 00 | 	byte	$00, $00, $00, $01, $68, $40, $00, $01, $1d, $a0, $00, $01, $1d, $30, $00, $00
0a901     FE 10 00 00 
0a905     00 00 00 00 
0a909     00 00 00 00 
0a90d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a911     FE 10 00 01 
0a915     68 40 00 00 
0a919     FE A0 00 01 
0a91d     1D 30 00 00 | 	byte	$fe, $10, $00, $01, $68, $40, $00, $00, $fe, $a0, $00, $01, $1d, $30, $00, $00
0a921     AA 20 00 00 
0a925     00 00 00 00 
0a929     00 00 00 00 
0a92d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a931     00 00 00 01 
0a935     68 40 00 00 
0a939     F0 A0 00 01 
0a93d     68 30 00 01 | 	byte	$00, $00, $00, $01, $68, $40, $00, $00, $f0, $a0, $00, $01, $68, $30, $00, $01
0a941     AC 70 00 00 
0a945     00 00 00 00 
0a949     00 00 00 00 
0a94d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a951     00 00 00 00 
0a955     FE 40 00 00 
0a959     FE A0 00 01 
0a95d     FC 30 00 01 | 	byte	$00, $00, $00, $00, $fe, $40, $00, $00, $fe, $a0, $00, $01, $fc, $30, $00, $01
0a961     AC 70 00 00 
0a965     00 00 00 00 
0a969     00 00 00 00 
0a96d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a971     00 00 00 00 
0a975     FE 40 00 00 
0a979     00 00 00 00 
0a97d     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a981     FE 10 00 00 
0a985     00 00 00 00 
0a989     00 00 00 01 
0a98d     FC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $30, $00, $00
0a991     00 00 00 00 
0a995     FE 40 00 00 
0a999     FE A0 00 00 
0a99d     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $40, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0a9a1     FE 10 00 00 
0a9a5     00 00 00 00 
0a9a9     00 00 00 01 
0a9ad     FC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $fc, $30, $00, $00
0a9b1     FE 10 00 00 
0a9b5     FE 40 00 01 
0a9b9     1D A0 00 00 
0a9bd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $fe, $40, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $01
0a9c1     AC 70 00 00 
0a9c5     00 00 00 00 
0a9c9     00 00 00 01 
0a9cd     53 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
0a9d1     00 00 00 00 
0a9d5     FE 50 00 01 
0a9d9     40 A0 00 00 
0a9dd     FE 30 00 01 | 	byte	$00, $00, $00, $00, $fe, $50, $00, $01, $40, $a0, $00, $00, $fe, $30, $00, $01
0a9e1     AC 70 00 00 
0a9e5     00 00 00 00 
0a9e9     00 00 00 00 
0a9ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0a9f1     00 00 00 00 
0a9f5     FE 50 00 01 
0a9f9     1D A0 00 00 
0a9fd     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $50, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
0aa01     FE 10 00 00 
0aa05     00 00 00 00 
0aa09     00 00 00 01 
0aa0d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0aa11     FE 10 00 00 
0aa15     FE 60 00 00 
0aa19     FE A0 00 00 
0aa1d     FE 30 00 00 | 	byte	$fe, $10, $00, $00, $fe, $60, $00, $00, $fe, $a0, $00, $00, $fe, $30, $00, $00
0aa21     AA 20 00 00 
0aa25     00 00 00 00 
0aa29     00 00 00 01 
0aa2d     1D 30 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0aa31     00 00 00 00 
0aa35     FE 60 00 01 
0aa39     40 A0 00 01 
0aa3d     40 30 00 00 | 	byte	$00, $00, $00, $00, $fe, $60, $00, $01, $40, $a0, $00, $01, $40, $30, $00, $00
0aa41     BE 10 00 00 
0aa45     00 00 00 00 
0aa49     00 00 00 01 
0aa4d     53 30 00 00 | 	byte	$be, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $53, $30, $00, $00
0aa51     BE 10 00 00 
0aa55     00 00 00 01 
0aa59     7D A0 00 01 
0aa5d     7D 30 00 01 | 	byte	$be, $10, $00, $00, $00, $00, $00, $01, $7d, $a0, $00, $01, $7d, $30, $00, $01
0aa61     AC 70 00 00 
0aa65     00 00 00 00 
0aa69     00 00 00 00 
0aa6d     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa71     00 00 00 00 
0aa75     00 00 00    | 	byte	$00[7]
0aa78     01 7D AC 20 
0aa7c     00 00 00 00 
0aa80     00 FE 10 00 
0aa84     00 00 00 00 | 	byte	$01, $7d, $ac, $20, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0aa88     00 00 00 00 
0aa8c     01 7D 30 00 
0aa90     00 00 00 00 
0aa94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aa98     01 7D AC 10 
0aa9c     00 00 00 00 
0aaa0     00 FE 10 00 
0aaa4     00 00 00 00 | 	byte	$01, $7d, $ac, $10, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0aaa8     00 00 00 00 
0aaac     01 7D 30 00 
0aab0     00 FE 10 00 
0aab4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0aab8     01 7D AC 05 
0aabc     01 40 30 00 
0aac0     01 AC 70 00 
0aac4     00 00 00 00 | 	byte	$01, $7d, $ac, $05, $01, $40, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0aac8     00 00 00 00 
0aacc     00          | 	byte	$00[5]
0aacd     FE 30 00 00 
0aad1     00 00 00 00 
0aad5     00 00 00 00 
0aad9     00 00 00 01 | 	byte	$fe, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aadd     40 30 00 01 
0aae1     AC 70 00 00 
0aae5     00 00 00 00 
0aae9     00 00 00 00 | 	byte	$40, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aaed     00 00 00 00 
0aaf1     00 00 00 00 
0aaf5     00 00 00 00 
0aaf9     00 00 00    | 	byte	$00[15]
0aafc     01 40 30 00 
0ab00     00 FE 10 00 
0ab04     00 00 00 00 
0ab08     00 00 00 00 | 	byte	$01, $40, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab0c     00 00 00 00 
0ab10     00          | 	byte	$00[5]
0ab11     FE 10 00 00 
0ab15     00 00 00 00 
0ab19     00 00 00 00 
0ab1d     FE 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $30, $00, $00
0ab21     AA 20 00 00 
0ab25     00 00 00 00 
0ab29     00 00 00 00 
0ab2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab31     00 00 00 00 
0ab35     00 00 00 00 
0ab39     00 00 00    | 	byte	$00[11]
0ab3c     01 AC 30 00 
0ab40     01 AC 70 00 
0ab44     00 00 00 00 
0ab48     00 00 00 00 | 	byte	$01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab4c     00 00 00 00 
0ab50     00 00 00 00 
0ab54     00 00 00 00 | 	byte	$00[12]
0ab58     01 AC A0 00 
0ab5c     01 AC 30 00 
0ab60     01 AC 70 00 
0ab64     00 00 00 00 | 	byte	$01, $ac, $a0, $00, $01, $ac, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0ab68     00 00 00 00 
0ab6c     00 00 00 00 
0ab70     00 00 00 00 
0ab74     00 00 00 00 | 	byte	$00[16]
0ab78     01 AC AC 20 
0ab7c     00 00 00 00 
0ab80     00 FE 10 00 
0ab84     00 00 00 00 | 	byte	$01, $ac, $ac, $20, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0ab88     00 00 00 00 
0ab8c     01 AC 30 00 
0ab90     00 00 00 00 
0ab94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ab98     01 AC AC 10 
0ab9c     00 00 00 00 
0aba0     00 FE 10 00 
0aba4     00 00 00 00 | 	byte	$01, $ac, $ac, $10, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0aba8     00 00 00 00 
0abac     01 AC 30 00 
0abb0     00 FE 10 00 
0abb4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0abb8     01 AC AC 05 
0abbc     01 53 30 00 
0abc0     01 AC 70 00 
0abc4     00 00 00 00 | 	byte	$01, $ac, $ac, $05, $01, $53, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0abc8     00 00 00 00 
0abcc     00 00 00 00 
0abd0     00 00 00 00 
0abd4     00 00 00 00 
0abd8     00 00 00 00 | 	byte	$00[20]
0abdc     01 1D 30 00 
0abe0     01 AC 70 00 
0abe4     00 00 00 00 
0abe8     00 00 00 00 | 	byte	$01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0abec     00 00 00 00 
0abf0     00 00 00 00 
0abf4     00 00 00 00 
0abf8     00 00 00 00 | 	byte	$00[16]
0abfc     01 53 30 00 
0ac00     00 FE 10 00 
0ac04     00 00 00 00 
0ac08     00 00 00 00 | 	byte	$01, $53, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac0c     00 00 00 00 
0ac10     00          | 	byte	$00[5]
0ac11     FE 10 00 00 
0ac15     00 00 00 00 
0ac19     00 00 00 01 
0ac1d     AC 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00, $00
0ac21     AA 20 00 00 
0ac25     00 00 00 00 
0ac29     00 00 00 00 
0ac2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac31     00 00 00 00 
0ac35     00 00 00 00 
0ac39     00 00 00    | 	byte	$00[11]
0ac3c     01 1D 30 00 
0ac40     00 00 00 00 
0ac44     00 00 00 00 
0ac48     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac4c     00 00 00 00 
0ac50     00 00 00 00 
0ac54     00 00 00 00 | 	byte	$00[12]
0ac58     01 68 A0 00 
0ac5c     01 68 30 00 
0ac60     01 AC 70 00 
0ac64     00 00 00 00 | 	byte	$01, $68, $a0, $00, $01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0ac68     00 00 00 00 
0ac6c     00 00 00 00 
0ac70     00 00 00 00 
0ac74     00 00 00 00 | 	byte	$00[16]
0ac78     01 68 AC 20 
0ac7c     00 00 00 00 
0ac80     00 FE 10 00 
0ac84     00 00 00 00 | 	byte	$01, $68, $ac, $20, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0ac88     00 00 00 00 
0ac8c     01 68 30 00 
0ac90     00 00 00 00 
0ac94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ac98     01 68 AC 10 
0ac9c     00 00 00 00 
0aca0     00 FE 10 00 
0aca4     00 00 00 00 | 	byte	$01, $68, $ac, $10, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0aca8     00 00 00 00 
0acac     01 68 30 00 
0acb0     00 FE 10 00 
0acb4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0acb8     01 68 AC 05 
0acbc     01 1D 30 00 
0acc0     01 AC 70 00 
0acc4     00 00 00 00 | 	byte	$01, $68, $ac, $05, $01, $1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0acc8     00 00 00 00 
0accc     00 00 00 00 
0acd0     00 00 00 00 
0acd4     00 00 00 00 
0acd8     00 00 00 00 
0acdc     00          | 	byte	$00[21]
0acdd     F0 30 00 01 
0ace1     AC 70 00 00 
0ace5     00 00 00 00 
0ace9     00 00 00 00 | 	byte	$f0, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aced     00 00 00 00 
0acf1     00 00 00 00 
0acf5     00 00 00 00 
0acf9     00 00 00    | 	byte	$00[15]
0acfc     01 1D 30 00 
0ad00     00 FE 10 00 
0ad04     00 00 00 00 
0ad08     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad0c     00 00 00 00 
0ad10     00          | 	byte	$00[5]
0ad11     FE 10 00 00 
0ad15     00 00 00 00 
0ad19     00 00 00 01 
0ad1d     1D 30 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $1d, $30, $00, $00
0ad21     AA 20 00 00 
0ad25     00 00 00 00 
0ad29     00 00 00 00 
0ad2d     00 00 00 00 | 	byte	$aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad31     00 00 00 00 
0ad35     00 00 00 00 
0ad39     00 00 00    | 	byte	$00[11]
0ad3c     01 68 30 00 
0ad40     01 AC 70 00 
0ad44     00 00 00 00 
0ad48     00 00 00 00 | 	byte	$01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad4c     00 00 00 00 
0ad50     00 00 00 00 
0ad54     00 00 00 00 | 	byte	$00[12]
0ad58     01 68 A0 00 
0ad5c     01 68 30 00 
0ad60     01 AC 70 00 
0ad64     00 00 00 00 | 	byte	$01, $68, $a0, $00, $01, $68, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0ad68     00 00 00 00 
0ad6c     00 00 00 00 
0ad70     00 00 00 00 
0ad74     00 00 00 00 | 	byte	$00[16]
0ad78     01 68 AC 20 
0ad7c     00 00 00 00 
0ad80     00 FE 10 00 
0ad84     00 00 00 00 | 	byte	$01, $68, $ac, $20, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0ad88     00 00 00 00 
0ad8c     01 68 30 00 
0ad90     00 00 00 00 
0ad94     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $30, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ad98     01 68 AC 10 
0ad9c     00 00 00 00 
0ada0     00 FE 10 00 
0ada4     00 00 00 00 | 	byte	$01, $68, $ac, $10, $00, $00, $00, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0ada8     00 00 00 00 
0adac     01 68 30 00 
0adb0     00 FE 10 00 
0adb4     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $30, $00, $00, $fe, $10, $00, $00, $00, $00, $00
0adb8     01 68 AC 05 
0adbc     00 00 00 00 
0adc0     01 AC 70 00 
0adc4     00 00 00 00 | 	byte	$01, $68, $ac, $05, $00, $00, $00, $00, $01, $ac, $70, $00, $00, $00, $00, $00
0adc8     00 00 00 00 
0adcc     00          | 	byte	$00[5]
0adcd     F0 30 00 00 
0add1     00 00 00 01 
0add5     1D 8C 10 01 
0add9     1D A0 00 01 | 	byte	$f0, $30, $00, $00, $00, $00, $00, $01, $1d, $8c, $10, $01, $1d, $a0, $00, $01
0addd     1D 30 00 01 
0ade1     AC 70 00 00 
0ade5     00 00 00 00 
0ade9     00 00 00 00 | 	byte	$1d, $30, $00, $01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aded     00 00 00 00 
0adf1     00 00 00    | 	byte	$00[7]
0adf4     01 1D 8C 20 
0adf8     01 1D AC 20 
0adfc     00 00 00 00 
0ae00     00 FE 10 00 | 	byte	$01, $1d, $8c, $20, $01, $1d, $ac, $20, $00, $00, $00, $00, $00, $fe, $10, $00
0ae04     00 00 00 00 
0ae08     00 00 00 00 | 	byte	$00[8]
0ae0c     01 1D 30 00 
0ae10     00 FE 10 00 
0ae14     01 1D 8C 30 
0ae18     01 1D AC 10 | 	byte	$01, $1d, $30, $00, $00, $fe, $10, $00, $01, $1d, $8c, $30, $01, $1d, $ac, $10
0ae1c     01 1D 30 00 
0ae20     00 AA 20 00 
0ae24     00 00 00 00 
0ae28     00 00 00 00 | 	byte	$01, $1d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae2c     00 F0 30 00 
0ae30     00 00 00 00 
0ae34     01 1D 8C 40 
0ae38     01 1D AC 05 | 	byte	$00, $f0, $30, $00, $00, $00, $00, $00, $01, $1d, $8c, $40, $01, $1d, $ac, $05
0ae3c     01 7D 30 00 
0ae40     00 AA 20 00 
0ae44     00 00 00 00 
0ae48     00 00 00 00 | 	byte	$01, $7d, $30, $00, $00, $aa, $20, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae4c     01 1D 30 00 
0ae50     00 AA 20 00 
0ae54     01 7D 90 00 
0ae58     00 FE A0 00 | 	byte	$01, $1d, $30, $00, $00, $aa, $20, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00
0ae5c     01 7D 30 00 
0ae60     01 AC 70 07 
0ae64     00 00 00 00 
0ae68     00 00 00 00 | 	byte	$01, $7d, $30, $00, $01, $ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00
0ae6c     01 7D 30 00 
0ae70     00 00 00 00 
0ae74     01 7D 90 00 
0ae78     00 00 00 00 | 	byte	$01, $7d, $30, $00, $00, $00, $00, $00, $01, $7d, $90, $00, $00, $00, $00, $00
0ae7c     00 00 00 00 
0ae80     00          | 	byte	$00[5]
0ae81     FE 10 00 00 
0ae85     00 00 00 00 
0ae89     00 00 00 00 
0ae8d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0ae91     00 00 00 01 
0ae95     7D 90 00 00 
0ae99     FE A0 00 00 
0ae9d     00 00 00 00 | 	byte	$00, $00, $00, $01, $7d, $90, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0aea1     FE 10 00 00 
0aea5     00 00 00 00 
0aea9     00 00 00 00 
0aead     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aeb1     FE 10 00 01 
0aeb5     7D 90 00 01 
0aeb9     1D A0 00 01 
0aebd     7D 30 00 01 | 	byte	$fe, $10, $00, $01, $7d, $90, $00, $01, $1d, $a0, $00, $01, $7d, $30, $00, $01
0aec1     AC 70 00 00 
0aec5     00 00 00 01 
0aec9     40 A0 00 01 
0aecd     7D 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $01, $40, $a0, $00, $01, $7d, $30, $00, $00
0aed1     00 00 00 01 
0aed5     40 40 00 00 
0aed9     00 00 00 00 
0aedd     00 00 00 01 | 	byte	$00, $00, $00, $01, $40, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0aee1     AC 70 00 00 
0aee5     00 00 00 00 
0aee9     00 00 00 00 
0aeed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aef1     00 00 00 01 
0aef5     40 40 00 01 
0aef9     1D A0 00 00 
0aefd     00 00 00 00 | 	byte	$00, $00, $00, $01, $40, $40, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
0af01     FE 10 00 00 
0af05     00 00 00 00 
0af09     00 00 00 00 
0af0d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af11     FE 10 00 01 
0af15     40 40 00 00 
0af19     FE A0 00 00 
0af1d     00 00 00 00 | 	byte	$fe, $10, $00, $01, $40, $40, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0af21     00 00 00 00 
0af25     00 00 00 00 
0af29     00 00 00 00 
0af2d     00 00 00    | 	byte	$00[15]
0af30     01 AC 10 00 
0af34     01 40 40 00 
0af38     01 40 A0 00 
0af3c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $01, $40, $40, $00, $01, $40, $a0, $00, $00, $00, $00, $00
0af40     01 53 10 00 
0af44     00 00 00 00 
0af48     00 00 00 00 
0af4c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af50     00 00 00 00 
0af54     01 AC 50 00 
0af58     00 D6 A0 00 
0af5c     01 AC 30 00 | 	byte	$00, $00, $00, $00, $01, $ac, $50, $00, $00, $d6, $a0, $00, $01, $ac, $30, $00
0af60     01 AC 70 00 
0af64     00 00 00 00 
0af68     00 00 00 00 
0af6c     01 AC 30 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $ac, $30, $00
0af70     00 00 00 00 
0af74     01 AC 50 00 
0af78     00 00 00 00 
0af7c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af80     00 FE 10 00 
0af84     00 00 00 00 
0af88     00 00 00 00 
0af8c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0af90     00 00 00 00 
0af94     01 AC 50 00 
0af98     00 D6 A0 00 
0af9c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $50, $00, $00, $d6, $a0, $00, $00, $00, $00, $00
0afa0     00 FE 10 00 
0afa4     00 00 00 00 
0afa8     00 00 00 00 
0afac     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afb0     00 FE 10 00 
0afb4     01 AC 50 00 
0afb8     00 FE A0 00 
0afbc     01 AC 30 00 | 	byte	$00, $fe, $10, $00, $01, $ac, $50, $00, $00, $fe, $a0, $00, $01, $ac, $30, $00
0afc0     01 AC 70 00 
0afc4     00 00 00 00 
0afc8     01 1D A0 00 
0afcc     01 AC 30 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $01, $1d, $a0, $00, $01, $ac, $30, $00
0afd0     00 00 00 00 
0afd4     01 AC 50 00 
0afd8     00 00 00 00 
0afdc     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0afe0     01 AC 70 00 
0afe4     00 00 00 00 
0afe8     00 00 00 00 
0afec     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0aff0     00 00 00 00 
0aff4     01 AC 50 00 
0aff8     00 00 00 00 
0affc     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $ac, $50, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b000     00 FE 10 00 
0b004     00 00 00 00 
0b008     00 00 00 00 
0b00c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b010     00 FE 10 00 
0b014     01 AC 50 00 
0b018     01 1D A0 00 
0b01c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $01, $ac, $50, $00, $01, $1d, $a0, $00, $00, $00, $00, $00
0b020     00 00 00 00 
0b024     00 00 00 00 
0b028     00 00 00 00 
0b02c     00 00 00 00 | 	byte	$00[16]
0b030     01 AC 10 00 
0b034     01 AC 50 00 
0b038     00 FE A0 00 
0b03c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $01, $ac, $50, $00, $00, $fe, $a0, $00, $00, $00, $00, $00
0b040     01 53 10 00 
0b044     00 00 00 00 
0b048     00 00 00 00 
0b04c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b050     00 00 00 00 
0b054     01 68 40 00 
0b058     00 F0 A0 00 
0b05c     01 68 30 00 | 	byte	$00, $00, $00, $00, $01, $68, $40, $00, $00, $f0, $a0, $00, $01, $68, $30, $00
0b060     01 AC 70 00 
0b064     00 00 00 00 
0b068     00 00 00 00 
0b06c     01 68 30 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00
0b070     00 00 00 00 
0b074     01 68 40 00 
0b078     00 00 00 00 
0b07c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b080     00 FE 10 00 
0b084     00 00 00 00 
0b088     00 00 00 00 
0b08c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b090     00 00 00 00 
0b094     01 68 40 00 
0b098     00 00 00 00 
0b09c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0a0     00 FE 10 00 
0b0a4     00 00 00 00 
0b0a8     00 00 00 00 
0b0ac     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0b0     00 FE 10 00 
0b0b4     01 68 40 00 
0b0b8     00 00 00 00 
0b0bc     01 68 30 00 | 	byte	$00, $fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $01, $68, $30, $00
0b0c0     01 AC 70 00 
0b0c4     00 00 00 00 
0b0c8     00 00 00 00 
0b0cc     01 68 30 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00
0b0d0     00 00 00 00 
0b0d4     01 68 40 00 
0b0d8     00 00 00 00 
0b0dc     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0e0     01 AC 70 00 
0b0e4     00 00 00 00 
0b0e8     00 00 00 00 
0b0ec     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b0f0     00 00 00 00 
0b0f4     01 68 40 00 
0b0f8     00 00 00 00 
0b0fc     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b100     00 FE 10 00 
0b104     00 00 00 00 
0b108     00 00 00 00 
0b10c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b110     00 FE 10 00 
0b114     01 68 40 00 
0b118     00 00 00 00 
0b11c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $01, $68, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b120     00 00 00 00 
0b124     00 00 00 00 
0b128     00 00 00 00 
0b12c     00 00 00 00 | 	byte	$00[16]
0b130     01 AC 10 00 
0b134     01 68 40 00 
0b138     00 F0 A0 00 
0b13c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $01, $68, $40, $00, $00, $f0, $a0, $00, $00, $00, $00, $00
0b140     01 53 10 00 
0b144     00 00 00 00 
0b148     00 00 00 00 
0b14c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b150     00 00 00 00 
0b154     00          | 	byte	$00[5]
0b155     FE 40 00 01 
0b159     1D A0 00 01 
0b15d     FC 30 00 01 
0b161     AC 70 00 00 | 	byte	$fe, $40, $00, $01, $1d, $a0, $00, $01, $fc, $30, $00, $01, $ac, $70, $00, $00
0b165     00 00 00 00 
0b169     00 00 00    | 	byte	$00[7]
0b16c     01 FC 30 00 
0b170     00 00 00 00 
0b174     00 FE 40 00 
0b178     00 FE A0 00 | 	byte	$01, $fc, $30, $00, $00, $00, $00, $00, $00, $fe, $40, $00, $00, $fe, $a0, $00
0b17c     00 00 00 00 
0b180     00          | 	byte	$00[5]
0b181     FE 10 00 00 
0b185     00 00 00 00 
0b189     00 00 00 00 
0b18d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b191     00 00 00 00 
0b195     FE 40 00 00 
0b199     00 00 00 00 
0b19d     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $40, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1a1     FE 10 00 00 
0b1a5     00 00 00 00 
0b1a9     00 00 00 00 
0b1ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1b1     FE 10 00 00 
0b1b5     FE 40 00 00 
0b1b9     00 00 00 02 
0b1bd     3A 30 00 01 | 	byte	$fe, $10, $00, $00, $fe, $40, $00, $00, $00, $00, $00, $02, $3a, $30, $00, $01
0b1c1     AC 70 00 00 
0b1c5     00 00 00 00 
0b1c9     00 00 00 01 
0b1cd     68 30 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $68, $30, $00, $00
0b1d1     00 00 00 00 
0b1d5     FE 50 00 00 
0b1d9     00 00 00 01 
0b1dd     FC 30 00 01 | 	byte	$00, $00, $00, $00, $fe, $50, $00, $00, $00, $00, $00, $01, $fc, $30, $00, $01
0b1e1     AC 70 00 00 
0b1e5     00 00 00 00 
0b1e9     00 00 00 00 
0b1ed     00 00 00 00 | 	byte	$ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b1f1     00 00 00 00 
0b1f5     FE 50 00 00 
0b1f9     FE A0 00 00 
0b1fd     00 00 00 00 | 	byte	$00, $00, $00, $00, $fe, $50, $00, $00, $fe, $a0, $00, $00, $00, $00, $00, $00
0b201     FE 10 00 00 
0b205     00 00 00 00 
0b209     00 00 00 00 
0b20d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b211     FE 10 00 00 
0b215     FE 60 00 01 
0b219     1D A0 00 00 
0b21d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $fe, $60, $00, $01, $1d, $a0, $00, $00, $00, $00, $00, $00
0b221     00 00 00 00 
0b225     00 00 00 00 
0b229     00 00 00 00 
0b22d     00 00 00    | 	byte	$00[15]
0b230     01 AC 10 00 
0b234     00 FE 60 00 
0b238     01 40 A0 00 
0b23c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $00, $fe, $60, $00, $01, $40, $a0, $00, $00, $00, $00, $00
0b240     01 53 10 00 
0b244     00 00 00 00 
0b248     00 00 00 00 
0b24c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b250     00 00 00 00 
0b254     01 7D 90 00 
0b258     01 7D A0 00 
0b25c     02 FA 30 00 | 	byte	$00, $00, $00, $00, $01, $7d, $90, $00, $01, $7d, $a0, $00, $02, $fa, $30, $00
0b260     01 AC 70 07 
0b264     00 00 00 00 
0b268     00 00 00 00 
0b26c     00 00 00 00 | 	byte	$01, $ac, $70, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b270     00 00 00 00 
0b274     01 7D 9C 20 
0b278     00 00 00 00 
0b27c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $9c, $20, $00, $00, $00, $00, $00, $00, $00, $00
0b280     00 FE 10 00 
0b284     00 00 00 00 
0b288     00 00 00 00 
0b28c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b290     00 00 00 00 
0b294     01 7D 9C 10 
0b298     00 00 00 00 
0b29c     00 00 00 00 | 	byte	$00, $00, $00, $00, $01, $7d, $9c, $10, $00, $00, $00, $00, $00, $00, $00, $00
0b2a0     00 FE 10 00 
0b2a4     00 00 00 00 
0b2a8     00 00 00 00 
0b2ac     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b2b0     00 FE 10 00 
0b2b4     01 7D 9C 05 
0b2b8     00 00 00 00 
0b2bc     00 00 00 00 | 	byte	$00, $fe, $10, $00, $01, $7d, $9c, $05, $00, $00, $00, $00, $00, $00, $00, $00
0b2c0     01 AC 70 00 
0b2c4     00 00 00 00 
0b2c8     00 00 00 00 
0b2cc     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b2d0     00 00 00 00 
0b2d4     00 00 00 00 
0b2d8     00 00 00 00 
0b2dc     00 00 00 00 | 	byte	$00[16]
0b2e0     01 AC 70 00 
0b2e4     00 00 00 00 
0b2e8     00 00 00 00 
0b2ec     00 00 00 00 | 	byte	$01, $ac, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b2f0     00 00 00 00 
0b2f4     00 00 00 00 
0b2f8     00 00 00 00 
0b2fc     00 00 00 00 
0b300     00          | 	byte	$00[17]
0b301     FE 10 00 00 
0b305     00 00 00 00 
0b309     00 00 00 00 
0b30d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b311     FE 10 00 00 
0b315     00 00 00 00 
0b319     00 00 00 00 
0b31d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b321     00 00 00 00 
0b325     00 00 00 00 
0b329     00 00 00 00 
0b32d     00 00 00    | 	byte	$00[15]
0b330     01 AC 10 00 
0b334     00 00 00 00 
0b338     00 00 00 00 
0b33c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b340     01 53 10 00 
0b344     00 00 00 00 
0b348     00 00 00 00 
0b34c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b350     00 00 00 00 
      ...             
0b37c     00 00 00 00 
0b380     00          | 	byte	$00[49]
0b381     FE 10 00 00 
0b385     00 00 00 00 
0b389     00 00 00 00 
0b38d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b391     00 00 00 00 
0b395     00 00 00 00 
0b399     00 00 00 00 
0b39d     00 00 00 00 | 	byte	$00[16]
0b3a1     FE 10 00 00 
0b3a5     00 00 00 00 
0b3a9     00 00 00 00 
0b3ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b3b1     FE 10 00 00 
0b3b5     00 00 00 00 
0b3b9     00 00 00 00 
0b3bd     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b3c1     00 00 00 00 
      ...             
0b3e9     00 00 00 00 
0b3ed     00 00 00    | 	byte	$00[47]
0b3f0     01 AC 10 00 
0b3f4     00 00 00 00 
0b3f8     00 00 00 00 
0b3fc     00 00 00 00 | 	byte	$01, $ac, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b400     01 53 10 00 
0b404     00 00 00 00 
0b408     00 00 00 00 
0b40c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b410     00 FE 10 00 
0b414     00 00 00 00 
0b418     00 00 00 00 
0b41c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b420     00 FE 10 00 
0b424     00 00 00 00 
0b428     00 00 00 00 
0b42c     00 00 00 00 | 	byte	$00, $fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b430     00 00 00 00 
0b434     00 00 00 00 
0b438     00 00 00 00 
0b43c     00 00 00 00 
0b440     00          | 	byte	$00[17]
0b441     FE 10 00 00 
0b445     00 00 00 00 
0b449     00 00 00 00 
0b44d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b451     FE 1D 00 00 
0b455     00 00 00 00 
0b459     00 00 00 00 
0b45d     00 00 00 01 | 	byte	$fe, $1d, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b461     53 70 00 00 
0b465     00 00 00 00 
0b469     00 00 00 00 
0b46d     00 00 00 00 | 	byte	$53, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b471     00 00 00 00 
0b475     00 00 00 00 
0b479     00 00 00 00 
0b47d     00 00 00 00 | 	byte	$00[16]
0b481     FE 10 00 00 
0b485     00 00 00 00 
0b489     00 00 00 00 
0b48d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b491     00 00 00 00 
0b495     00 00 00 00 
0b499     00 00 00 00 
0b49d     00 00 00 00 | 	byte	$00[16]
0b4a1     FE 10 00 00 
0b4a5     00 00 00 00 
0b4a9     00 00 00 00 
0b4ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4b1     FE 10 00 00 
0b4b5     00 00 00 00 
0b4b9     00 00 00 00 
0b4bd     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b4c1     00 00 00 00 
      ...             
0b4f9     00 00 00 00 
0b4fd     00 00 00 00 | 	byte	$00[64]
0b501     FE 10 00 00 
0b505     00 00 00 00 
0b509     00 00 00 00 
0b50d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b511     FE 10 00 00 
0b515     00 00 00 00 
0b519     00 00 00 00 
0b51d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b521     00 00 00 00 
      ...             
0b539     00 00 00 00 
0b53d     00 00 00    | 	byte	$00[31]
0b540     01 53 10 00 
0b544     00 00 00 00 
0b548     00 00 00 00 
0b54c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b550     00 00 00 00 
      ...             
0b57c     00 00 00 00 
0b580     00          | 	byte	$00[49]
0b581     FE 10 00 00 
0b585     00 00 00 00 
0b589     00 00 00 00 
0b58d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b591     00 00 00 00 
0b595     00 00 00 00 
0b599     00 00 00 00 
0b59d     00 00 00 00 | 	byte	$00[16]
0b5a1     FE 10 00 00 
0b5a5     00 00 00 00 
0b5a9     00 00 00 00 
0b5ad     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5b1     FE 10 00 00 
0b5b5     00 00 00 00 
0b5b9     00 00 00 00 
0b5bd     00 00 00 01 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
0b5c1     53 70 00 00 
0b5c5     00 00 00 00 
0b5c9     00 00 00 00 
0b5cd     00 00 00 00 | 	byte	$53, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5d1     00 00 00 00 
0b5d5     00 00 00 00 
0b5d9     00 00 00 00 
0b5dd     00 00 00    | 	byte	$00[15]
0b5e0     01 53 70 00 
0b5e4     00 00 00 00 
0b5e8     00 00 00 00 
0b5ec     00 00 00 00 | 	byte	$01, $53, $70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b5f0     00 00 00 00 
0b5f4     00 00 00 00 
0b5f8     00 00 00 00 
0b5fc     00 00 00 00 
0b600     00          | 	byte	$00[17]
0b601     FE 10 00 00 
0b605     00 00 00 00 
0b609     00 00 00 00 
0b60d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b611     FE 10 00 00 
0b615     00 00 00 00 
0b619     00 00 00 00 
0b61d     00 00 00 00 | 	byte	$fe, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b621     00 00 00 00 
0b625     00 00 00 00 
0b629     00 00 00 00 
0b62d     00 00 00    | 	byte	$00[15]
0b630     01 AC 10 00 
0b634     00 00 00 00 
0b638     00 00 00 00 
0b63c     00 00 00 00 | 	byte	$01, $ac, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b640     01 53 10 00 
0b644     00 00 00 00 
0b648     00 00 00 00 
0b64c     00 00 00 00 | 	byte	$01, $53, $10, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0b650     00 00 00 00 
0b654     00 00 00 00 | 	byte	$00[8]
0b658     AF AF B6 D9 
0b65c     19 17 1D 22 
0b660     77 75 7D 72 
0b664     7D 6E 7B 7F | 	byte	$af, $af, $b6, $d9, $19, $17, $1d, $22, $77, $75, $7d, $72, $7d, $6e, $7b, $7f
0b668     46 74 12 2B 
0b66c     2D 07 E5 EB 
0b670     E9 DA AF C8 
0b674     B6 CC DE D0 | 	byte	$46, $74, $12, $2b, $2d, $07, $e5, $eb, $e9, $da, $af, $c8, $b6, $cc, $de, $d0
0b678     D7 D3 E2 C8 
0b67c     F4 01 03 0E 
0b680     1E 34 13 29 
0b684     6B 41 65 3B | 	byte	$d7, $d3, $e2, $c8, $f4, $01, $03, $0e, $1e, $34, $13, $29, $6b, $41, $65, $3b
0b688     46 2F 34 F6 
0b68c     1E E3 F2 CC 
0b690     B1 C3 95 A8 
0b694     A4 90 A6 B1 | 	byte	$46, $2f, $34, $f6, $1e, $e3, $f2, $cc, $b1, $c3, $95, $a8, $a4, $90, $a6, $b1
0b698     A6 A6 F0 F6 
0b69c     0A FB 00 01 
0b6a0     24 2B 3D 2B 
0b6a4     36 22 29 22 | 	byte	$a6, $a6, $f0, $f6, $0a, $fb, $00, $01, $24, $2b, $3d, $2b, $36, $22, $29, $22
0b6a8     24 3A 10 27 
0b6ac     ED DE D3 BA 
0b6b0     BC AB B1 A6 
0b6b4     B4 9D B2 C1 | 	byte	$24, $3a, $10, $27, $ed, $de, $d3, $ba, $bc, $ab, $b1, $a6, $b4, $9d, $b2, $c1
0b6b8     D1 E5 E9 0A 
0b6bc     F2 15 36 34 
0b6c0     4A 46 4A 38 
0b6c4     38 29 3A 29 | 	byte	$d1, $e5, $e9, $0a, $f2, $15, $36, $34, $4a, $46, $4a, $38, $38, $29, $3a, $29
0b6c8     0E 17 FB 03 
0b6cc     10 E2 03 FF 
0b6d0     F0 E3 E0 E2 
0b6d4     AF D5 E0 D5 | 	byte	$0e, $17, $fb, $03, $10, $e2, $03, $ff, $f0, $e3, $e0, $e2, $af, $d5, $e0, $d5
0b6d8     EE E7 E0 07 
0b6dc     19 12 3A 30 
0b6e0     32 5A 44 57 
0b6e4     4F 61 44 3A | 	byte	$ee, $e7, $e0, $07, $19, $12, $3a, $30, $32, $5a, $44, $57, $4f, $61, $44, $3a
0b6e8     22 22 FF EE 
0b6ec     E7 CA CA C3 
0b6f0     C6 C6 BA E0 
0b6f4     D0 DE EE EB | 	byte	$22, $22, $ff, $ee, $e7, $ca, $ca, $c3, $c6, $c6, $ba, $e0, $d0, $de, $ee, $eb
0b6f8     F9 FD 0E 1D 
0b6fc     12 3D 22 2B 
0b700     34 3F 3F 34 
0b704     22 19 2B FD | 	byte	$f9, $fd, $0e, $1d, $12, $3d, $22, $2b, $34, $3f, $3f, $34, $22, $19, $2b, $fd
0b708     13 EE FB DA 
0b70c     E3 D3 BA BF 
0b710     AF B6 B2 B8 
0b714     C1 DA E2 00 | 	byte	$13, $ee, $fb, $da, $e3, $d3, $ba, $bf, $af, $b6, $b2, $b8, $c1, $da, $e2, $00
0b718     FF 09 12 19 
0b71c     10 24 1D 26 
0b720     1E 15 22 07 
0b724     10 05 03 F4 | 	byte	$ff, $09, $12, $19, $10, $24, $1d, $26, $1e, $15, $22, $07, $10, $05, $03, $f4
0b728     F0 ED E0 E5 
0b72c     D0 DE BD C6 
0b730     C3 C8 C8 C5 
0b734     DE D0 E0 F4 | 	byte	$f0, $ed, $e0, $e5, $d0, $de, $bd, $c6, $c3, $c8, $c8, $c5, $de, $d0, $e0, $f4
0b738     F7 FF 1B 22 
0b73c     38 43 44 3A 
0b740     38 3A 36 22 
0b744     19 10 03 FD | 	byte	$f7, $ff, $1b, $22, $38, $43, $44, $3a, $38, $3a, $36, $22, $19, $10, $03, $fd
0b748     E3 E3 D3 D0 
0b74c     CE CE C5 D1 
0b750     DC DC EE E9 
0b754     FD FB 0C 1E | 	byte	$e3, $e3, $d3, $d0, $ce, $ce, $c5, $d1, $dc, $dc, $ee, $e9, $fd, $fb, $0c, $1e
0b758     1D 1E 22 26 
0b75c     27 30 30 36 
0b760     36 3A 34 26 
0b764     12 0A 05 ED | 	byte	$1d, $1e, $22, $26, $27, $30, $30, $36, $36, $3a, $34, $26, $12, $0a, $05, $ed
0b768     E3 E5 D3 D5 
0b76c     C6 D7 C8 D9 
0b770     DC D0 DA EE 
0b774     FD 07 01 1B | 	byte	$e3, $e5, $d3, $d5, $c6, $d7, $c8, $d9, $dc, $d0, $da, $ee, $fd, $07, $01, $1b
0b778     17 27 26 32 
0b77c     2D 36 2F 2B 
0b780     19 20 20 09 
0b784     0E 09 03 F2 | 	byte	$17, $27, $26, $32, $2d, $36, $2f, $2b, $19, $20, $20, $09, $0e, $09, $03, $f2
0b788     F7 DC D3 D7 
0b78c     D0 C1 C6 C6 
0b790     CE DC DE F7 
0b794     F2 03 10 1E | 	byte	$f7, $dc, $d3, $d7, $d0, $c1, $c6, $c6, $ce, $dc, $de, $f7, $f2, $03, $10, $1e
0b798     2B 2D 34 3A 
0b79c     27 3A 29 1D 
0b7a0     29 0E 12 FD 
0b7a4     F4 EE E3 DE | 	byte	$2b, $2d, $34, $3a, $27, $3a, $29, $1d, $29, $0e, $12, $fd, $f4, $ee, $e3, $de
0b7a8     D5 DC DC D9 
0b7ac     D5 E5 E2 E0 
0b7b0     F2 EE F0 00 
0b7b4     03 0E 15 1E | 	byte	$d5, $dc, $dc, $d9, $d5, $e5, $e2, $e0, $f2, $ee, $f0, $00, $03, $0e, $15, $1e
0b7b8     19 29 32 29 
0b7bc     36 24 34 29 
0b7c0     22 1D 15 05 
0b7c4     F9 EB F0 DE | 	byte	$19, $29, $32, $29, $36, $24, $34, $29, $22, $1d, $15, $05, $f9, $eb, $f0, $de
0b7c8     DA D9 D1 D3 
0b7cc     D9 DA E3 EB 
0b7d0     F2 ED FB 01 
0b7d4     05 0E 10 19 | 	byte	$da, $d9, $d1, $d3, $d9, $da, $e3, $eb, $f2, $ed, $fb, $01, $05, $0e, $10, $19
0b7d8     15 20 1B 1E 
0b7dc     20 19 1D 0E 
0b7e0     0A FD 03 F6 
0b7e4     EB E9 D1 E0 | 	byte	$15, $20, $1b, $1e, $20, $19, $1d, $0e, $0a, $fd, $03, $f6, $eb, $e9, $d1, $e0
0b7e8     CE D0 CE D0 
0b7ec     CE D1 D5 D9 
0b7f0     EE F6 03 09 
0b7f4     12 1E 1B 24 | 	byte	$ce, $d0, $ce, $d0, $ce, $d1, $d5, $d9, $ee, $f6, $03, $09, $12, $1e, $1b, $24
0b7f8     1D 27 19 19 
0b7fc     17 0C 10 05 
0b800     03 FF F6 F4 
0b804     F0 ED EB E7 | 	byte	$1d, $27, $19, $19, $17, $0c, $10, $05, $03, $ff, $f6, $f4, $f0, $ed, $eb, $e7
0b808     E3 E3 E0 E9 
0b80c     E9 EE F4 F6 
0b810     FF 01 09 10 
0b814     15 24 27 2B | 	byte	$e3, $e3, $e0, $e9, $e9, $ee, $f4, $f6, $ff, $01, $09, $10, $15, $24, $27, $2b
0b818     29 36 2F 2B 
0b81c     27 22 1B 0E 
0b820     07 FB F7 ED 
0b824     ED E5 E0 E5 | 	byte	$29, $36, $2f, $2b, $27, $22, $1b, $0e, $07, $fb, $f7, $ed, $ed, $e5, $e0, $e5
0b828     E5 E7 E9 EE 
0b82c     F4 F6 FB 05 
0b830     01 10 13 15 
0b834     1B 1D 20 1D | 	byte	$e5, $e7, $e9, $ee, $f4, $f6, $fb, $05, $01, $10, $13, $15, $1b, $1d, $20, $1d
0b838     20 22 1E 20 
0b83c     1E 15 0E 09 
0b840     FF F6 F4 E9 
0b844     E7 DC D9 E0 | 	byte	$20, $22, $1e, $20, $1e, $15, $0e, $09, $ff, $f6, $f4, $e9, $e7, $dc, $d9, $e0
0b848     DA E0 E2 E9 
0b84c     ED F6 00 05 
0b850     0C 12 15 17 
0b854     1B 1D 22 1D | 	byte	$da, $e0, $e2, $e9, $ed, $f6, $00, $05, $0c, $12, $15, $17, $1b, $1d, $22, $1d
0b858     15 19 0A 0A 
0b85c     03 01 FF 00 
0b860     F7 F6 F2 F2 
0b864     E9 E5 E3 DA | 	byte	$15, $19, $0a, $0a, $03, $01, $ff, $00, $f7, $f6, $f2, $f2, $e9, $e5, $e3, $da
0b868     E3 E0 E0 E7 
0b86c     EE F0 F6 00 
0b870     05 12 13 1E 
0b874     1B 1E 1E 1E | 	byte	$e3, $e0, $e0, $e7, $ee, $f0, $f6, $00, $05, $12, $13, $1e, $1b, $1e, $1e, $1e
0b878     1D 15 13 10 
0b87c     05 FD F9 F6 
0b880     E3 E7 E0 E0 
0b884     E0 E3 E3 E5 | 	byte	$1d, $15, $13, $10, $05, $fd, $f9, $f6, $e3, $e7, $e0, $e0, $e0, $e3, $e3, $e5
0b888     EE ED F4 EE 
0b88c     FF FF 00 01 
0b890     0A 10 0A 15 
0b894     19 17 1B 1B | 	byte	$ee, $ed, $f4, $ee, $ff, $ff, $00, $01, $0a, $10, $0a, $15, $19, $17, $1b, $1b
0b898     1D 13 15 0A 
0b89c     03 FD F7 F0 
0b8a0     ED E5 E9 E0 
0b8a4     E0 DE E3 E3 | 	byte	$1d, $13, $15, $0a, $03, $fd, $f7, $f0, $ed, $e5, $e9, $e0, $e0, $de, $e3, $e3
0b8a8     EB F4 F7 F7 
0b8ac     05 07 09 0E 
0b8b0     13 13 15 15 
0b8b4     13 19 12 13 | 	byte	$eb, $f4, $f7, $f7, $05, $07, $09, $0e, $13, $13, $15, $15, $13, $19, $12, $13
0b8b8     0E 07 07 05 
0b8bc     01 FD 00 F6 
0b8c0     F6 EB EB E5 
0b8c4     E3 E9 E2 E7 | 	byte	$0e, $07, $07, $05, $01, $fd, $00, $f6, $f6, $eb, $eb, $e5, $e3, $e9, $e2, $e7
0b8c8     E9 F0 F4 F6 
0b8cc     03 05 10 12 
0b8d0     17 1E 1D 1D 
0b8d4     1B 15 12 13 | 	byte	$e9, $f0, $f4, $f6, $03, $05, $10, $12, $17, $1e, $1d, $1d, $1b, $15, $12, $13
0b8d8     05 07 00 FD 
0b8dc     F7 F6 F2 ED 
0b8e0     F0 E9 EB EB 
0b8e4     EB F0 F2 F2 | 	byte	$05, $07, $00, $fd, $f7, $f6, $f2, $ed, $f0, $e9, $eb, $eb, $eb, $f0, $f2, $f2
0b8e8     F6 FB FB 01 
0b8ec     01 09 0A 0A 
0b8f0     10 12 19 15 
0b8f4     17 17 15 12 | 	byte	$f6, $fb, $fb, $01, $01, $09, $0a, $0a, $10, $12, $19, $15, $17, $17, $15, $12
0b8f8     0A 09 00 FF 
0b8fc     F6 F0 ED ED 
0b900     E7 E9 E9 EB 
0b904     EE F2 F6 F6 | 	byte	$0a, $09, $00, $ff, $f6, $f0, $ed, $ed, $e7, $e9, $e9, $eb, $ee, $f2, $f6, $f6
0b908     FF FF 03 03 
0b90c     0A 0E 10 10 
0b910     10 13 10 12 
0b914     12 0E 0C 0A | 	byte	$ff, $ff, $03, $03, $0a, $0e, $10, $10, $10, $13, $10, $12, $12, $0e, $0c, $0a
0b918     07 03 00 FD 
0b91c     F7 F4 F2 EE 
0b920     EB EB E9 EB 
0b924     EB EE F2 F9 | 	byte	$07, $03, $00, $fd, $f7, $f4, $f2, $ee, $eb, $eb, $e9, $eb, $eb, $ee, $f2, $f9
0b928     FD 03 07 0A 
0b92c     10 12 13 13 
0b930     15 13 12 10 
0b934     0A 09 05 00 | 	byte	$fd, $03, $07, $0a, $10, $12, $13, $13, $15, $13, $12, $10, $0a, $09, $05, $00
0b938     FF FB FB F7 
0b93c     F6 F4 F0 F0 
0b940     F0 EE EE F0 
0b944     F4 F4 F7 FB | 	byte	$ff, $fb, $fb, $f7, $f6, $f4, $f0, $f0, $f0, $ee, $ee, $f0, $f4, $f4, $f7, $fb
0b948     FF 01 05 09 
0b94c     0A 0E 13 12 
0b950     13 12 12 0E 
0b954     0C 09 05 01 | 	byte	$ff, $01, $05, $09, $0a, $0e, $13, $12, $13, $12, $12, $0e, $0c, $09, $05, $01
0b958     00 F7 F6 F0 
0b95c     EE EE EB ED 
0b960     F0 F0 F4 F6 
0b964     F7 FD FD FF | 	byte	$00, $f7, $f6, $f0, $ee, $ee, $eb, $ed, $f0, $f0, $f4, $f6, $f7, $fd, $fd, $ff
0b968     01 03 07 0A 
0b96c     0A 0C 0E 10 
0b970     0E 0E 10 0C 
0b974     0A 09 01 00 | 	byte	$01, $03, $07, $0a, $0a, $0c, $0e, $10, $0e, $0e, $10, $0c, $0a, $09, $01, $00
0b978     FB F9 F4 F4 
0b97c     F0 EE EE EE 
0b980     EE F0 F2 F6 
0b984     F9 FD 00 05 | 	byte	$fb, $f9, $f4, $f4, $f0, $ee, $ee, $ee, $ee, $f0, $f2, $f6, $f9, $fd, $00, $05
0b988     07 0A 0C 0E 
0b98c     0E 10 10 0A 
0b990     0A 09 07 05 
0b994     03 03 FF FF | 	byte	$07, $0a, $0c, $0e, $0e, $10, $10, $0a, $0a, $09, $07, $05, $03, $03, $ff, $ff
0b998     FB FB F7 F6 
0b99c     F4 F2 F0 F0 
0b9a0     F2 F2 F4 F7 
0b9a4     FB FD 00 05 | 	byte	$fb, $fb, $f7, $f6, $f4, $f2, $f0, $f0, $f2, $f2, $f4, $f7, $fb, $fd, $00, $05
0b9a8     07 0A 0E 0E 
0b9ac     10 12 10 10 
0b9b0     0C 09 09 03 
0b9b4     01 FF FB F7 | 	byte	$07, $0a, $0e, $0e, $10, $12, $10, $10, $0c, $09, $09, $03, $01, $ff, $fb, $f7
0b9b8     F6 F6 F4 F2 
0b9bc     F4 F4 F4 F6 
0b9c0     F6 F9 FB FB 
0b9c4     FF 01 01 03 | 	byte	$f6, $f6, $f4, $f2, $f4, $f4, $f4, $f6, $f6, $f9, $fb, $fb, $ff, $01, $01, $03
0b9c8     07 07 0A 0C 
0b9cc     0E 0E 0E 0E 
0b9d0     0C 0A 07 03 
0b9d4     01 FD F9 F7 | 	byte	$07, $07, $0a, $0c, $0e, $0e, $0e, $0e, $0c, $0a, $07, $03, $01, $fd, $f9, $f7
0b9d8     F4 F2 F2 F2 
0b9dc     F0 F2 F4 F7 
0b9e0     F9 FD FF 00 
0b9e4     03 03 07 07 | 	byte	$f4, $f2, $f2, $f2, $f0, $f2, $f4, $f7, $f9, $fd, $ff, $00, $03, $03, $07, $07
0b9e8     09 0A 0A 0A 
0b9ec     0A 0A 09 07 
0b9f0     07 03 01 01 
0b9f4     00 FD FD F9 | 	byte	$09, $0a, $0a, $0a, $0a, $0a, $09, $07, $07, $03, $01, $01, $00, $fd, $fd, $f9
0b9f8     F7 F6 F4 F4 
0b9fc     F2 F2 F4 F6 
0ba00     F6 F9 FD 00 
0ba04     03 05 09 0A | 	byte	$f7, $f6, $f4, $f4, $f2, $f2, $f4, $f6, $f6, $f9, $fd, $00, $03, $05, $09, $0a
0ba08     0C 0C 0C 0A 
0ba0c     0A 09 07 05 
0ba10     01 00 FF FD 
0ba14     FB F9 F9 F7 | 	byte	$0c, $0c, $0c, $0a, $0a, $09, $07, $05, $01, $00, $ff, $fd, $fb, $f9, $f9, $f7
0ba18     F7 F6 F6 F6 
0ba1c     F6 F7 F9 F9 
0ba20     FB FD FF 00 
0ba24     01 03 05 07 | 	byte	$f7, $f6, $f6, $f6, $f6, $f7, $f9, $f9, $fb, $fd, $ff, $00, $01, $03, $05, $07
0ba28     09 0A 0A 0C 
0ba2c     0A 09 07 05 
0ba30     03 00 FD FB 
0ba34     F9 F6 F6 F4 | 	byte	$09, $0a, $0a, $0c, $0a, $09, $07, $05, $03, $00, $fd, $fb, $f9, $f6, $f6, $f4
0ba38     F4 F4 F6 F7 
0ba3c     F9 FB FB FF 
0ba40     00 00 01 03 
0ba44     03 05 05 07 | 	byte	$f4, $f4, $f6, $f7, $f9, $fb, $fb, $ff, $00, $00, $01, $03, $03, $05, $05, $07
0ba48     07 07 07 09 
0ba4c     07 07 05 05 
0ba50     03 00 FF FD 
0ba54     F9 F9 F7 F6 | 	byte	$07, $07, $07, $09, $07, $07, $05, $05, $03, $00, $ff, $fd, $f9, $f9, $f7, $f6
0ba58     F6 F4 F6 F6 
0ba5c     F7 F9 FB FF 
0ba60     00 03 05 07 
0ba64     09 09 09 0A | 	byte	$f6, $f4, $f6, $f6, $f7, $f9, $fb, $ff, $00, $03, $05, $07, $09, $09, $09, $0a
0ba68     0A 09 07 05 
0ba6c     03 01 00 00 
0ba70     FF FD FD FD 
0ba74     FB FB F9 F9 | 	byte	$0a, $09, $07, $05, $03, $01, $00, $00, $ff, $fd, $fd, $fd, $fb, $fb, $f9, $f9
0ba78     F7 F9 F7 F9 
0ba7c     F9 FB FD FF 
0ba80     00 01 03 05 
0ba84     07 09 09 09 | 	byte	$f7, $f9, $f7, $f9, $f9, $fb, $fd, $ff, $00, $01, $03, $05, $07, $09, $09, $09
0ba88     0A 09 09 07 
0ba8c     05 03 00 00 
0ba90     FD FB F9 F7 
0ba94     F7 F7 F7 F9 | 	byte	$0a, $09, $09, $07, $05, $03, $00, $00, $fd, $fb, $f9, $f7, $f7, $f7, $f7, $f9
0ba98     F9 F9 FB FD 
0ba9c     FB FD FD FD 
0baa0     FD FD FD FF 
0baa4     FD FF FF FF | 	byte	$f9, $f9, $fb, $fd, $fb, $fd, $fd, $fd, $fd, $fd, $fd, $ff, $fd, $ff, $ff, $ff
0baa8     FF FF FF FF 
0baac     FF FF FF FF 
0bab0     FF FF FF FF 
0bab4     FF FF FF    | 	byte	$ff[15]
0bab7     00 FF FF FF 
0babb     00 FF FF 00 
0babf     FF 00 00 00 
0bac3     00 2B C0 00 | 	byte	$00, $ff, $ff, $ff, $00, $ff, $ff, $00, $ff, $00, $00, $00, $00, $2b, $c0, $00
0bac7     00 00 00 00 
0bacb     00 00 00 00 
0bacf     00 00 00 00 
0bad3     00 00       | 	byte	$00[14]
0bad5     08 7B 4A 31 
0bad9     30 25 11 CB 
0badd     89 91 DF AD 
0bae1     80 80 82 A3 | 	byte	$08, $7b, $4a, $31, $30, $25, $11, $cb, $89, $91, $df, $ad, $80, $80, $82, $a3
0bae5     14 65 63 29 
0bae9     01 0E 24 3A 
0baed     3F 32 6A 7F 
0baf1     7F 7F 30 DA | 	byte	$14, $65, $63, $29, $01, $0e, $24, $3a, $3f, $32, $6a, $7f, $7f, $7f, $30, $da
0baf5     F3 C1 F1 F1 
0baf9     A8 F6 FA FC 
0bafd     09 9C 0C 0A 
0bb01     0A D3 C5 9E | 	byte	$f3, $c1, $f1, $f1, $a8, $f6, $fa, $fc, $09, $9c, $0c, $0a, $0a, $d3, $c5, $9e
0bb05     DC 96 DA 87 
0bb09     8C 8F 80 82 
0bb0d     86 C1 0A 42 
0bb11     2C EA C1 D8 | 	byte	$dc, $96, $da, $87, $8c, $8f, $80, $82, $86, $c1, $0a, $42, $2c, $ea, $c1, $d8
0bb15     FA 16 0C 46 
0bb19     2C 3A 7F 7F 
0bb1d     7F 2F 47 7F 
0bb21     6B 7F 63 71 | 	byte	$fa, $16, $0c, $46, $2c, $3a, $7f, $7f, $7f, $2f, $47, $7f, $6b, $7f, $63, $71
0bb25     7F 7F 72 7E 
0bb29     6E 21 04 47 
0bb2d     0B 16 AB D0 
0bb31     07 3D 26 A8 | 	byte	$7f, $7f, $72, $7e, $6e, $21, $04, $47, $0b, $16, $ab, $d0, $07, $3d, $26, $a8
0bb35     BF FD 99 91 
0bb39     80 83 BF 88 
0bb3d     9B 9D AC 96 
0bb41     83 82 82 82 | 	byte	$bf, $fd, $99, $91, $80, $83, $bf, $88, $9b, $9d, $ac, $96, $83, $82, $82, $82
0bb45     82 D1 CE A7 
0bb49     85 B5 24 CB 
0bb4d     B5 4B 5F 7F 
0bb51     7F FD CE 2C | 	byte	$82, $d1, $ce, $a7, $85, $b5, $24, $cb, $b5, $4b, $5f, $7f, $7f, $fd, $ce, $2c
0bb55     23 6E 40 6D 
0bb59     AC 0A 5C D6 
0bb5d     7F 72 7A 45 
0bb61     F5 67 CA DE | 	byte	$23, $6e, $40, $6d, $ac, $0a, $5c, $d6, $7f, $72, $7a, $45, $f5, $67, $ca, $de
0bb65     EE 09 67 60 
0bb69     3F 01 B4 82 
0bb6d     88 C2 A9 90 
0bb71     B2 56 E7 AD | 	byte	$ee, $09, $67, $60, $3f, $01, $b4, $82, $88, $c2, $a9, $90, $b2, $56, $e7, $ad
0bb75     06 83 80 84 
0bb79     A6 10 C7 84 
0bb7d     8F B7 ED 0A 
0bb81     C1 F6 B8 83 | 	byte	$06, $83, $80, $84, $a6, $10, $c7, $84, $8f, $b7, $ed, $0a, $c1, $f6, $b8, $83
0bb85     B2 08 77 7D 
0bb89     69 A7 03 5C 
0bb8d     54 49 3E 66 
0bb91     7C 7F 58 7F | 	byte	$b2, $08, $77, $7d, $69, $a7, $03, $5c, $54, $49, $3e, $66, $7c, $7f, $58, $7f
0bb95     DA 1C 17 2D 
0bb99     13 7B 77 32 
0bb9d     36 59 E6 B0 
0bba1     09 EB A2 98 | 	byte	$da, $1c, $17, $2d, $13, $7b, $77, $32, $36, $59, $e6, $b0, $09, $eb, $a2, $98
0bba5     4E 3C E2 99 
0bba9     A6 C4 8F A8 
0bbad     E8 A4 0A C0 
0bbb1     D3 87 F1 1B | 	byte	$4e, $3c, $e2, $99, $a6, $c4, $8f, $a8, $e8, $a4, $0a, $c0, $d3, $87, $f1, $1b
0bbb5     AA 13 1D BF 
0bbb9     A6 9D 92 08 
0bbbd     DC B9 BC AB 
0bbc1     7F 0B 5B D9 | 	byte	$aa, $13, $1d, $bf, $a6, $9d, $92, $08, $dc, $b9, $bc, $ab, $7f, $0b, $5b, $d9
0bbc5     F6 05 C9 DC 
0bbc9     2E 67 4B 2B 
0bbcd     27 29 F6 0F 
0bbd1     46 51 76 CA | 	byte	$f6, $05, $c9, $dc, $2e, $67, $4b, $2b, $27, $29, $f6, $0f, $46, $51, $76, $ca
0bbd5     F8 7F 55 B6 
0bbd9     E5 3E 7A 7D 
0bbdd     6B 93 24 2F 
0bbe1     49 16 8D F0 | 	byte	$f8, $7f, $55, $b6, $e5, $3e, $7a, $7d, $6b, $93, $24, $2f, $49, $16, $8d, $f0
0bbe5     DD FE 90 55 
0bbe9     35 B9 8C 8D 
0bbed     A6 A2 A5 BC 
0bbf1     32 C3 B4 B0 | 	byte	$dd, $fe, $90, $55, $35, $b9, $8c, $8d, $a6, $a2, $a5, $bc, $32, $c3, $b4, $b0
0bbf5     09 CB F8 D4 
0bbf9     F4 23 01 DE 
0bbfd     B9 F7 9D 2A 
0bc01     DA E5 8D CF | 	byte	$09, $cb, $f8, $d4, $f4, $23, $01, $de, $b9, $f7, $9d, $2a, $da, $e5, $8d, $cf
0bc05     59 6B 5E 48 
0bc09     E9 CF 99 55 
0bc0d     70 C5 1D 5D 
0bc11     55 78 02 30 | 	byte	$59, $6b, $5e, $48, $e9, $cf, $99, $55, $70, $c5, $1d, $5d, $55, $78, $02, $30
0bc15     64 E6 02 01 
0bc19     FA 3A 2F 10 
0bc1d     9D 09 FF F1 
0bc21     3D 19 54 21 | 	byte	$64, $e6, $02, $01, $fa, $3a, $2f, $10, $9d, $09, $ff, $f1, $3d, $19, $54, $21
0bc25     BE 9A D4 E4 
0bc29     37 F1 6A CB 
0bc2d     B6 95 95 E6 
0bc31     17 EC A8 8F | 	byte	$be, $9a, $d4, $e4, $37, $f1, $6a, $cb, $b6, $95, $95, $e6, $17, $ec, $a8, $8f
0bc35     C4 3D AE 29 
0bc39     D5 9D 93 0B 
0bc3d     BF F5 F6 BA 
0bc41     D6 CA 19 41 | 	byte	$c4, $3d, $ae, $29, $d5, $9d, $93, $0b, $bf, $f5, $f6, $ba, $d6, $ca, $19, $41
0bc45     1E 2E 01 94 
0bc49     01 37 7D 64 
0bc4d     EB E6 2A 7F 
0bc51     28 55 44 E3 | 	byte	$1e, $2e, $01, $94, $01, $37, $7d, $64, $eb, $e6, $2a, $7f, $28, $55, $44, $e3
0bc55     E9 6D 4B B5 
0bc59     1E 05 08 08 
0bc5d     23 45 3E D9 
0bc61     E4 1B 25 13 | 	byte	$e9, $6d, $4b, $b5, $1e, $05, $08, $08, $23, $45, $3e, $d9, $e4, $1b, $25, $13
0bc65     F0 00 A4 C5 
0bc69     94 E2 B7 60 
0bc6d     65 B5 A8 03 
0bc71     20 EB CC FC | 	byte	$f0, $00, $a4, $c5, $94, $e2, $b7, $60, $65, $b5, $a8, $03, $20, $eb, $cc, $fc
0bc75     9F B5 E4 EE 
0bc79     AB C7 E2 DC 
0bc7d     0C FB FA 2B 
0bc81     1C C5 99 9D | 	byte	$9f, $b5, $e4, $ee, $ab, $c7, $e2, $dc, $0c, $fb, $fa, $2b, $1c, $c5, $99, $9d
0bc85     F3 59 14 30 
0bc89     2B AD 1E 1B 
0bc8d     0F 3E 5C 22 
0bc91     1F FF 49 51 | 	byte	$f3, $59, $14, $30, $2b, $ad, $1e, $1b, $0f, $3e, $5c, $22, $1f, $ff, $49, $51
0bc95     4D ED 35 1D 
0bc99     2B 39 13 5A 
0bc9d     21 EA EF CE 
0bca1     F3 2C F2 DD | 	byte	$4d, $ed, $35, $1d, $2b, $39, $13, $5a, $21, $ea, $ef, $ce, $f3, $2c, $f2, $dd
0bca5     AC F1 0D FF 
0bca9     FE E5 BF 0F 
0bcad     E0 CA DB B4 
0bcb1     C7 21 13 D8 | 	byte	$ac, $f1, $0d, $ff, $fe, $e5, $bf, $0f, $e0, $ca, $db, $b4, $c7, $21, $13, $d8
0bcb5     C2 CE EA C8 
0bcb9     FC 3E 11 50 
0bcbd     ED 1B 01 EE 
0bcc1     45 27 EB 20 | 	byte	$c2, $ce, $ea, $c8, $fc, $3e, $11, $50, $ed, $1b, $01, $ee, $45, $27, $eb, $20
0bcc5     12 03 F3 0A 
0bcc9     FB 12 0D E0 
0bccd     E1 5A 56 23 
0bcd1     10 0D D3 E9 | 	byte	$12, $03, $f3, $0a, $fb, $12, $0d, $e0, $e1, $5a, $56, $23, $10, $0d, $d3, $e9
0bcd5     FF F3 1D 40 
0bcd9     1A DB ED 03 
0bcdd     E6 C0 20 13 
0bce1     C3 33 2F 2C | 	byte	$ff, $f3, $1d, $40, $1a, $db, $ed, $03, $e6, $c0, $20, $13, $c3, $33, $2f, $2c
0bce5     05 1A E7 CE 
0bce9     C0 15 3E 0F 
0bced     49 02 EB 12 
0bcf1     FD BA 13 13 | 	byte	$05, $1a, $e7, $ce, $c0, $15, $3e, $0f, $49, $02, $eb, $12, $fd, $ba, $13, $13
0bcf5     F4 04 DA 08 
0bcf9     18 F6 00 F7 
0bcfd     FF B9 23 DD 
0bd01     DF F3 F1 C4 | 	byte	$f4, $04, $da, $08, $18, $f6, $00, $f7, $ff, $b9, $23, $dd, $df, $f3, $f1, $c4
0bd05     F3 14 CC B0 
0bd09     0D 28 09 12 
0bd0d     24 33 F2 20 
0bd11     E2 F7 EE F3 | 	byte	$f3, $14, $cc, $b0, $0d, $28, $09, $12, $24, $33, $f2, $20, $e2, $f7, $ee, $f3
0bd15     04 49 0D FC 
0bd19     1F 06 1F 28 
0bd1d     F7 2B F7 DD 
0bd21     FF 11 48 30 | 	byte	$04, $49, $0d, $fc, $1f, $06, $1f, $28, $f7, $2b, $f7, $dd, $ff, $11, $48, $30
0bd25     1B 09 19 11 
0bd29     FF D1 FA F2 
0bd2d     CB C1 21 04 
0bd31     02 E5 F3 0D | 	byte	$1b, $09, $19, $11, $ff, $d1, $fa, $f2, $cb, $c1, $21, $04, $02, $e5, $f3, $0d
0bd35     DA E6 E2 FA 
0bd39     FC 01 FB 05 
0bd3d     FD D8 05 DD 
0bd41     EF DE D1 F1 | 	byte	$da, $e6, $e2, $fa, $fc, $01, $fb, $05, $fd, $d8, $05, $dd, $ef, $de, $d1, $f1
0bd45     15 DD F3 1E 
0bd49     0F F1 F3 E9 
0bd4d     19 CF FF 45 
0bd51     0F 2C FF F5 | 	byte	$15, $dd, $f3, $1e, $0f, $f1, $f3, $e9, $19, $cf, $ff, $45, $0f, $2c, $ff, $f5
0bd55     EE 02 0E 0E 
0bd59     07 5C 5D 08 
0bd5d     26 EF A6 C2 
0bd61     10 09 44 48 | 	byte	$ee, $02, $0e, $0e, $07, $5c, $5d, $08, $26, $ef, $a6, $c2, $10, $09, $44, $48
0bd65     1D 19 12 EC 
0bd69     CD D7 DF EB 
0bd6d     26 31 2A F9 
0bd71     DC FB 12 21 | 	byte	$1d, $19, $12, $ec, $cd, $d7, $df, $eb, $26, $31, $2a, $f9, $dc, $fb, $12, $21
0bd75     DD C6 CD E2 
0bd79     F4 12 12 06 
0bd7d     05 13 E7 EB 
0bd81     F1 DD E2 03 | 	byte	$dd, $c6, $cd, $e2, $f4, $12, $12, $06, $05, $13, $e7, $eb, $f1, $dd, $e2, $03
0bd85     F1 CF F7 EA 
0bd89     F6 F9 D5 18 
0bd8d     14 FB 12 FA 
0bd91     01 E7 E2 DD | 	byte	$f1, $cf, $f7, $ea, $f6, $f9, $d5, $18, $14, $fb, $12, $fa, $01, $e7, $e2, $dd
0bd95     EA DF 2C FC 
0bd99     19 4B 3E 10 
0bd9d     E7 F3 0E 2E 
0bda1     D0 17 25 02 | 	byte	$ea, $df, $2c, $fc, $19, $4b, $3e, $10, $e7, $f3, $0e, $2e, $d0, $17, $25, $02
0bda5     DF FE DA 11 
0bda9     2D 19 EF C7 
0bdad     E6 10 17 18 
0bdb1     15 FC DB FD | 	byte	$df, $fe, $da, $11, $2d, $19, $ef, $c7, $e6, $10, $17, $18, $15, $fc, $db, $fd
0bdb5     2D 0A E3 D3 
0bdb9     F6 FC E3 F5 
0bdbd     14 29 11 F4 
0bdc1     C1 08 13 ED | 	byte	$2d, $0a, $e3, $d3, $f6, $fc, $e3, $f5, $14, $29, $11, $f4, $c1, $08, $13, $ed
0bdc5     F6 1E 0E EA 
0bdc9     F2 F0 DF EC 
0bdcd     F8 1F 21 F8 
0bdd1     02 E2 FD FE | 	byte	$f6, $1e, $0e, $ea, $f2, $f0, $df, $ec, $f8, $1f, $21, $f8, $02, $e2, $fd, $fe
0bdd5     F7 0B D7 F1 
0bdd9     00 40 1E E3 
0bddd     F1 1C FA F1 
0bde1     F0 F3 F7 19 | 	byte	$f7, $0b, $d7, $f1, $00, $40, $1e, $e3, $f1, $1c, $fa, $f1, $f0, $f3, $f7, $19
0bde5     52 17 FE 14 
0bde9     01 F5 F8 E8 
0bded     DF FB EB F6 
0bdf1     1D 04 01 12 | 	byte	$52, $17, $fe, $14, $01, $f5, $f8, $e8, $df, $fb, $eb, $f6, $1d, $04, $01, $12
0bdf5     01 24 02 FA 
0bdf9     07 F4 15 F8 
0bdfd     F9 F6 07 F7 
0be01     16 16 C9 FF | 	byte	$01, $24, $02, $fa, $07, $f4, $15, $f8, $f9, $f6, $07, $f7, $16, $16, $c9, $ff
0be05     15 F0 D9 F1 
0be09     FD FD F2 FC 
0be0d     FA F6 19 3E 
0be11     F1 F1 EE 1B | 	byte	$15, $f0, $d9, $f1, $fd, $fd, $f2, $fc, $fa, $f6, $19, $3e, $f1, $f1, $ee, $1b
0be15     1C F7 F6 F4 
0be19     E3 D4 F4 1B 
0be1d     35 24 F9 DE 
0be21     F2 FD F0 24 | 	byte	$1c, $f7, $f6, $f4, $e3, $d4, $f4, $1b, $35, $24, $f9, $de, $f2, $fd, $f0, $24
0be25     17 20 E4 E0 
0be29     FF FB 08 0F 
0be2d     EF 09 F7 F5 
0be31     03 EE FE E5 | 	byte	$17, $20, $e4, $e0, $ff, $fb, $08, $0f, $ef, $09, $f7, $f5, $03, $ee, $fe, $e5
0be35     1F 06 0E F5 
0be39     FC 04 EC E6 
0be3d     E6 18 31 27 
0be41     F9 EC EB 09 | 	byte	$1f, $06, $0e, $f5, $fc, $04, $ec, $e6, $e6, $18, $31, $27, $f9, $ec, $eb, $09
0be45     35 F4 E3 FA 
0be49     CA F6 2F 18 
0be4d     E6 01 04 F1 
0be51     D9 08 FA 17 | 	byte	$35, $f4, $e3, $fa, $ca, $f6, $2f, $18, $e6, $01, $04, $f1, $d9, $08, $fa, $17
0be55     1C DD DA 0D 
0be59     EB FE E4 F8 
0be5d     23 25 0E 1A 
0be61     0C DB E1 CF | 	byte	$1c, $dd, $da, $0d, $eb, $fe, $e4, $f8, $23, $25, $0e, $1a, $0c, $db, $e1, $cf
0be65     FD 11 02 29 
0be69     19 16 0B 0A 
0be6d     FB F1 F4 12 
0be71     FF F4 F7 F0 | 	byte	$fd, $11, $02, $29, $19, $16, $0b, $0a, $fb, $f1, $f4, $12, $ff, $f4, $f7, $f0
0be75     FD 12 E5 E8 
0be79     F4 20 13 F1 
0be7d     CE DB F4 F2 
0be81     22 28 07 F4 | 	byte	$fd, $12, $e5, $e8, $f4, $20, $13, $f1, $ce, $db, $f4, $f2, $22, $28, $07, $f4
0be85     FB FD 15 16 
0be89     22 FE D2 D4 
0be8d     FC 20 1F 18 
0be91     FA FB F2 14 | 	byte	$fb, $fd, $15, $16, $22, $fe, $d2, $d4, $fc, $20, $1f, $18, $fa, $fb, $f2, $14
0be95     18 05 F5 0F 
0be99     FE 01 00 F9 
0be9d     12 FD E9 F2 
0bea1     04 05 19 EC | 	byte	$18, $05, $f5, $0f, $fe, $01, $00, $f9, $12, $fd, $e9, $f2, $04, $05, $19, $ec
0bea5     FB FB E8 E8 
0bea9     07 FE 1F 19 
0bead     14 FB FF 01 
0beb1     DE FE F7 09 | 	byte	$fb, $fb, $e8, $e8, $07, $fe, $1f, $19, $14, $fb, $ff, $01, $de, $fe, $f7, $09
0beb5     0C FD 01 F6 
0beb9     03 04 CC 05 
0bebd     FA F9 09 10 
0bec1     02 11 FC F6 | 	byte	$0c, $fd, $01, $f6, $03, $04, $cc, $05, $fa, $f9, $09, $10, $02, $11, $fc, $f6
0bec5     F0 F8 F2 04 
0bec9     FE 0A FA E1 
0becd     FD 04 0E 0B 
0bed1     07 FD 16 E5 | 	byte	$f0, $f8, $f2, $04, $fe, $0a, $fa, $e1, $fd, $04, $0e, $0b, $07, $fd, $16, $e5
0bed5     E8 F4 F9 0D 
0bed9     14 06 EA EB 
0bedd     07 19 1F 18 
0bee1     EE F8 F9 F6 | 	byte	$e8, $f4, $f9, $0d, $14, $06, $ea, $eb, $07, $19, $1f, $18, $ee, $f8, $f9, $f6
0bee5     01 06 EC EE 
0bee9     15 05 E9 FA 
0beed     0F 29 06 EB 
0bef1     EC E5 FE FC | 	byte	$01, $06, $ec, $ee, $15, $05, $e9, $fa, $0f, $29, $06, $eb, $ec, $e5, $fe, $fc
0bef5     0C 22 FA F5 
0bef9     EA 06 09 06 
0befd     F6 F0 09 E7 
0bf01     E8 0C 19 F2 | 	byte	$0c, $22, $fa, $f5, $ea, $06, $09, $06, $f6, $f0, $09, $e7, $e8, $0c, $19, $f2
0bf05     F4 F8 0B 20 
0bf09     21 08 F2 EE 
0bf0d     EB 02 18 0D 
0bf11     18 16 F9 F4 | 	byte	$f4, $f8, $0b, $20, $21, $08, $f2, $ee, $eb, $02, $18, $0d, $18, $16, $f9, $f4
0bf15     15 0D 02 15 
0bf19     0E E9 F3 DE 
0bf1d     F0 13 0A 06 
0bf21     05 EF F0 03 | 	byte	$15, $0d, $02, $15, $0e, $e9, $f3, $de, $f0, $13, $0a, $06, $05, $ef, $f0, $03
0bf25     11 13 0C F1 
0bf29     02 E7 09 02 
0bf2d     07 00 F7 02 
0bf31     FF F6 F9 EB | 	byte	$11, $13, $0c, $f1, $02, $e7, $09, $02, $07, $00, $f7, $02, $ff, $f6, $f9, $eb
0bf35     F0 E7 03 F9 
0bf39     1D 21 00 FC 
0bf3d     F7 FF FE 10 
0bf41     01 F8 ED 07 | 	byte	$f0, $e7, $03, $f9, $1d, $21, $00, $fc, $f7, $ff, $fe, $10, $01, $f8, $ed, $07
0bf45     29 03 EF DD 
0bf49     FE 1A 00 14 
0bf4d     09 EA F5 F9 
0bf51     FC 06 06 F7 | 	byte	$29, $03, $ef, $dd, $fe, $1a, $00, $14, $09, $ea, $f5, $f9, $fc, $06, $06, $f7
0bf55     E6 F8 F2 F4 
0bf59     FD 0D 32 12 
0bf5d     E5 F6 13 FB 
0bf61     F7 01 1B 12 | 	byte	$e6, $f8, $f2, $f4, $fd, $0d, $32, $12, $e5, $f6, $13, $fb, $f7, $01, $1b, $12
0bf65     0A 0E 09 17 
0bf69     01 F5 F0 F8 
0bf6d     F6 10 13 1B 
0bf71     04 E5 04 1E | 	byte	$0a, $0e, $09, $17, $01, $f5, $f0, $f8, $f6, $10, $13, $1b, $04, $e5, $04, $1e
0bf75     EC DC D9 F9 
0bf79     19 05 F7 E9 
0bf7d     F7 F1 F0 E4 
0bf81     F3 01 F8 FC | 	byte	$ec, $dc, $d9, $f9, $19, $05, $f7, $e9, $f7, $f1, $f0, $e4, $f3, $01, $f8, $fc
0bf85     DE 04 19 F2 
0bf89     EE EC F4 0D 
0bf8d     19 02 06 03 
0bf91     ED FA 08 19 | 	byte	$de, $04, $19, $f2, $ee, $ec, $f4, $0d, $19, $02, $06, $03, $ed, $fa, $08, $19
0bf95     02 FF 18 0E 
0bf99     F6 E5 F3 1A 
0bf9d     29 29 08 F6 
0bfa1     04 2B 13 16 | 	byte	$02, $ff, $18, $0e, $f6, $e5, $f3, $1a, $29, $29, $08, $f6, $04, $2b, $13, $16
0bfa5     F9 03 EB 00 
0bfa9     13 03 04 01 
0bfad     E4 E7 F5 E3 
0bfb1     F7 0D 0B 0D | 	byte	$f9, $03, $eb, $00, $13, $03, $04, $01, $e4, $e7, $f5, $e3, $f7, $0d, $0b, $0d
0bfb5     DD E4 08 F7 
0bfb9     DF DC F8 16 
0bfbd     F4 0E FD CA 
0bfc1     D2 08 0F 0D | 	byte	$dd, $e4, $08, $f7, $df, $dc, $f8, $16, $f4, $0e, $fd, $ca, $d2, $08, $0f, $0d
0bfc5     EC 15 27 03 
0bfc9     F8 E6 E6 DF 
0bfcd     04 12 21 1E 
0bfd1     00 07 11 FC | 	byte	$ec, $15, $27, $03, $f8, $e6, $e6, $df, $04, $12, $21, $1e, $00, $07, $11, $fc
0bfd5     F7 EF 05 06 
0bfd9     0E 15 F3 FA 
0bfdd     0F 00 F8 11 
0bfe1     FF 04 07 02 | 	byte	$f7, $ef, $05, $06, $0e, $15, $f3, $fa, $0f, $00, $f8, $11, $ff, $04, $07, $02
0bfe5     13 24 2A F3 
0bfe9     F5 F5 E7 EC 
0bfed     FA 04 FF FE 
0bff1     06 22 F2 DB | 	byte	$13, $24, $2a, $f3, $f5, $f5, $e7, $ec, $fa, $04, $ff, $fe, $06, $22, $f2, $db
0bff5     E1 F8 06 E4 
0bff9     EF FC EF 04 
0bffd     0A 15 13 F9 
0c001     FF E6 DF 1A | 	byte	$e1, $f8, $06, $e4, $ef, $fc, $ef, $04, $0a, $15, $13, $f9, $ff, $e6, $df, $1a
0c005     19 EB F4 F1 
0c009     06 20 00 DD 
0c00d     EB F2 05 FD 
0c011     1D 3A 1B F4 | 	byte	$19, $eb, $f4, $f1, $06, $20, $00, $dd, $eb, $f2, $05, $fd, $1d, $3a, $1b, $f4
0c015     E7 E9 00 F7 
0c019     04 19 0D 0F 
0c01d     10 21 FE DB 
0c021     E7 15 05 0D | 	byte	$e7, $e9, $00, $f7, $04, $19, $0d, $0f, $10, $21, $fe, $db, $e7, $15, $05, $0d
0c025     19 11 E7 F6 
0c029     F1 F1 05 1F 
0c02d     04 DA E3 F6 
0c031     F7 0C F4 FC | 	byte	$19, $11, $e7, $f6, $f1, $f1, $05, $1f, $04, $da, $e3, $f6, $f7, $0c, $f4, $fc
0c035     00 D8 F1 14 
0c039     03 EF EE F8 
0c03d     F0 FD 1C 25 
0c041     FC F5 EE EF | 	byte	$00, $d8, $f1, $14, $03, $ef, $ee, $f8, $f0, $fd, $1c, $25, $fc, $f5, $ee, $ef
0c045     FA F5 14 18 
0c049     16 0A FA FE 
0c04d     12 16 06 F2 
0c051     04 1D 09 06 | 	byte	$fa, $f5, $14, $18, $16, $0a, $fa, $fe, $12, $16, $06, $f2, $04, $1d, $09, $06
0c055     00 DB EC FB 
0c059     0E 0D 08 FD 
0c05d     0E 0B DF E3 
0c061     FB EF E1 FB | 	byte	$00, $db, $ec, $fb, $0e, $0d, $08, $fd, $0e, $0b, $df, $e3, $fb, $ef, $e1, $fb
0c065     FF 0C 18 1A 
0c069     03 E5 E1 EC 
0c06d     F8 10 06 00 
0c071     F1 01 00 0C | 	byte	$ff, $0c, $18, $1a, $03, $e5, $e1, $ec, $f8, $10, $06, $00, $f1, $01, $00, $0c
0c075     0D 05 02 F0 
0c079     0B 1A 1B 04 
0c07d     10 FE F3 E8 
0c081     FE 06 0C 12 | 	byte	$0d, $05, $02, $f0, $0b, $1a, $1b, $04, $10, $fe, $f3, $e8, $fe, $06, $0c, $12
0c085     07 F4 FE 1B 
0c089     00 FF F5 EE 
0c08d     03 00 FF 12 
0c091     06 05 F3 E6 | 	byte	$07, $f4, $fe, $1b, $00, $ff, $f5, $ee, $03, $00, $ff, $12, $06, $05, $f3, $e6
0c095     F1 F7 FD 0F 
0c099     0A FF EF F3 
0c09d     F6 02 0B 12 
0c0a1     FC F6 EE F4 | 	byte	$f1, $f7, $fd, $0f, $0a, $ff, $ef, $f3, $f6, $02, $0b, $12, $fc, $f6, $ee, $f4
0c0a5     F9 F7 0B 18 
0c0a9     20 12 06 FC 
0c0ad     06 11 09 FA 
0c0b1     16 04 FF 09 | 	byte	$f9, $f7, $0b, $18, $20, $12, $06, $fc, $06, $11, $09, $fa, $16, $04, $ff, $09
0c0b5     11 03 F3 F0 
0c0b9     F4 FF F9 01 
0c0bd     F6 EC EB EF 
0c0c1     F9 10 0D 02 | 	byte	$11, $03, $f3, $f0, $f4, $ff, $f9, $01, $f6, $ec, $eb, $ef, $f9, $10, $0d, $02
0c0c5     FD E4 F7 F1 
0c0c9     FC D6 05 02 
0c0cd     FC 0D FA E6 
0c0d1     E8 FA FC F5 | 	byte	$fd, $e4, $f7, $f1, $fc, $d6, $05, $02, $fc, $0d, $fa, $e6, $e8, $fa, $fc, $f5
0c0d5     04 FB 08 05 
0c0d9     EC 04 02 02 
0c0dd     0B 08 18 08 
0c0e1     10 13 19 0C | 	byte	$04, $fb, $08, $05, $ec, $04, $02, $02, $0b, $08, $18, $08, $10, $13, $19, $0c
0c0e5     06 FA 0E 12 
0c0e9     01 10 00 06 
0c0ed     FB FA F4 0A 
0c0f1     F0 00 01 05 | 	byte	$06, $fa, $0e, $12, $01, $10, $00, $06, $fb, $fa, $f4, $0a, $f0, $00, $01, $05
0c0f5     07 07 0F 04 
0c0f9     FE DA E8 FB 
0c0fd     FD 05 E7 ED 
0c101     FB F4 05 FE | 	byte	$07, $07, $0f, $04, $fe, $da, $e8, $fb, $fd, $05, $e7, $ed, $fb, $f4, $05, $fe
0c105     15 FB F1 F0 
0c109     E6 FB F9 F1 
0c10d     01 01 EF 13 
0c111     0B F3 FC F9 | 	byte	$15, $fb, $f1, $f0, $e6, $fb, $f9, $f1, $01, $01, $ef, $13, $0b, $f3, $fc, $f9
0c115     FE FD F4 09 
0c119     02 0E 04 0E 
0c11d     0D 13 04 FF 
0c121     14 0D 06 11 | 	byte	$fe, $fd, $f4, $09, $02, $0e, $04, $0e, $0d, $13, $04, $ff, $14, $0d, $06, $11
0c125     0A FD F9 08 
0c129     0F 0F 0C F8 
0c12d     00 00 0D FF 
0c131     E4 FB FD E9 | 	byte	$0a, $fd, $f9, $08, $0f, $0f, $0c, $f8, $00, $00, $0d, $ff, $e4, $fb, $fd, $e9
0c135     F2 FF F6 06 
0c139     11 F5 E2 E9 
0c13d     F2 F9 F9 FE 
0c141     F8 FE 00 F7 | 	byte	$f2, $ff, $f6, $06, $11, $f5, $e2, $e9, $f2, $f9, $f9, $fe, $f8, $fe, $00, $f7
0c145     02 FF F3 F3 
0c149     ED EB FB FD 
0c14d     10 07 06 09 
0c151     06 FB 05 1A | 	byte	$02, $ff, $f3, $f3, $ed, $eb, $fb, $fd, $10, $07, $06, $09, $06, $fb, $05, $1a
0c155     12 01 03 FF 
0c159     0A 0A 1E 14 
0c15d     0A 0E 02 07 
0c161     0B 04 0A 14 | 	byte	$12, $01, $03, $ff, $0a, $0a, $1e, $14, $0a, $0e, $02, $07, $0b, $04, $0a, $14
0c165     04 FF 08 01 
0c169     16 00 F3 FF 
0c16d     04 06 FE F1 
0c171     EB E5 E8 EC | 	byte	$04, $ff, $08, $01, $16, $00, $f3, $ff, $04, $06, $fe, $f1, $eb, $e5, $e8, $ec
0c175     FC FA F8 F5 
0c179     FB F7 E9 EE 
0c17d     F4 F0 E6 F2 
0c181     FC 04 00 F6 | 	byte	$fc, $fa, $f8, $f5, $fb, $f7, $e9, $ee, $f4, $f0, $e6, $f2, $fc, $04, $00, $f6
0c185     09 0F 09 0B 
0c189     08 FE 09 03 
0c18d     F8 0E 1B 18 
0c191     04 0A 0F 06 | 	byte	$09, $0f, $09, $0b, $08, $fe, $09, $03, $f8, $0e, $1b, $18, $04, $0a, $0f, $06
0c195     11 0E 0F 0C 
0c199     09 0A 08 04 
0c19d     F8 0F 06 06 
0c1a1     F8 F0 F5 F8 | 	byte	$11, $0e, $0f, $0c, $09, $0a, $08, $04, $f8, $0f, $06, $06, $f8, $f0, $f5, $f8
0c1a5     F6 EE F8 FB 
0c1a9     02 09 FA FC 
0c1ad     F7 EB F2 ED 
0c1b1     F5 F4 F1 F8 | 	byte	$f6, $ee, $f8, $fb, $02, $09, $fa, $fc, $f7, $eb, $f2, $ed, $f5, $f4, $f1, $f8
0c1b5     F6 F7 08 13 
0c1b9     FF FE 0A FA 
0c1bd     FB F4 F5 06 
0c1c1     04 FB 09 15 | 	byte	$f6, $f7, $08, $13, $ff, $fe, $0a, $fa, $fb, $f4, $f5, $06, $04, $fb, $09, $15
0c1c5     0B 04 06 07 
0c1c9     FC FE 03 08 
0c1cd     07 06 05 06 
0c1d1     06 03 02 F6 | 	byte	$0b, $04, $06, $07, $fc, $fe, $03, $08, $07, $06, $05, $06, $06, $03, $02, $f6
0c1d5     F8 06 FD FB 
0c1d9     FA EC F5 FE 
0c1dd     00 03 FC F9 
0c1e1     00 14 06 F2 | 	byte	$f8, $06, $fd, $fb, $fa, $ec, $f5, $fe, $00, $03, $fc, $f9, $00, $14, $06, $f2
0c1e5     F3 F6 FD F9 
0c1e9     FC 07 03 01 
0c1ed     F5 03 04 FC 
0c1f1     F6 03 FF FD | 	byte	$f3, $f6, $fd, $f9, $fc, $07, $03, $01, $f5, $03, $04, $fc, $f6, $03, $ff, $fd
0c1f5     08 06 0A F3 
0c1f9     00 0C 08 0B 
0c1fd     08 FE FF 02 
0c201     FA 04 05 FD | 	byte	$08, $06, $0a, $f3, $00, $0c, $08, $0b, $08, $fe, $ff, $02, $fa, $04, $05, $fd
0c205     FE FD 08 07 
0c209     F3 FE F9 F3 
0c20d     02 0F 09 07 
0c211     0B FE 00 F9 | 	byte	$fe, $fd, $08, $07, $f3, $fe, $f9, $f3, $02, $0f, $09, $07, $0b, $fe, $00, $f9
0c215     F2 F5 F9 00 
0c219     FE FD F8 F7 
0c21d     F0 FF 06 0A 
0c221     10 FE FE F9 | 	byte	$f2, $f5, $f9, $00, $fe, $fd, $f8, $f7, $f0, $ff, $06, $0a, $10, $fe, $fe, $f9
0c225     07 09 FD F3 
0c229     F3 02 07 05 
0c22d     01 04 F3 F1 
0c231     FA 01 FA FE | 	byte	$07, $09, $fd, $f3, $f3, $02, $07, $05, $01, $04, $f3, $f1, $fa, $01, $fa, $fe
0c235     00 FC FE 08 
0c239     07 02 FB F4 
0c23d     FC F5 07 05 
0c241     FF F9 F7 FE | 	byte	$00, $fc, $fe, $08, $07, $02, $fb, $f4, $fc, $f5, $07, $05, $ff, $f9, $f7, $fe
0c245     0E 13 10 02 
0c249     03 06 09 FC 
0c24d     00 00 F3 FD 
0c251     09 0E FF F6 | 	byte	$0e, $13, $10, $02, $03, $06, $09, $fc, $00, $00, $f3, $fd, $09, $0e, $ff, $f6
0c255     F2 03 03 FF 
0c259     05 04 FF 07 
0c25d     02 FE FD 07 
0c261     03 FD 04 02 | 	byte	$f2, $03, $03, $ff, $05, $04, $ff, $07, $02, $fe, $fd, $07, $03, $fd, $04, $02
0c265     F6 F1 FA F0 
0c269     0A 06 F4 F5 
0c26d     FD FF 06 06 
0c271     F5 F4 F9 F9 | 	byte	$f6, $f1, $fa, $f0, $0a, $06, $f4, $f5, $fd, $ff, $06, $06, $f5, $f4, $f9, $f9
0c275     FC 02 00 F9 
0c279     FE 07 06 03 
0c27d     09 FB F6 02 
0c281     09 0B 0B 01 | 	byte	$fc, $02, $00, $f9, $fe, $07, $06, $03, $09, $fb, $f6, $02, $09, $0b, $0b, $01
0c285     06 09 09 09 
0c289     04 02 06 06 
0c28d     03 0D FE 03 
0c291     02 F8 F6 00 | 	byte	$06, $09, $09, $09, $04, $02, $06, $06, $03, $0d, $fe, $03, $02, $f8, $f6, $00
0c295     0B FF F7 FE 
0c299     03 05 FC FF 
0c29d     FC 02 02 F3 
0c2a1     FC FC F4 F8 | 	byte	$0b, $ff, $f7, $fe, $03, $05, $fc, $ff, $fc, $02, $02, $f3, $fc, $fc, $f4, $f8
0c2a5     FC FB FB FB 
0c2a9     F7 FE FE 04 
0c2ad     07 F6 F3 F3 
0c2b1     FD 05 FE FA | 	byte	$fc, $fb, $fb, $fb, $f7, $fe, $fe, $04, $07, $f6, $f3, $f3, $fd, $05, $fe, $fa
0c2b5     FE 00 03 04 
0c2b9     08 0E 08 00 
0c2bd     FF FF 0A 0A 
0c2c1     FF 02 0C FF | 	byte	$fe, $00, $03, $04, $08, $0e, $08, $00, $ff, $ff, $0a, $0a, $ff, $02, $0c, $ff
0c2c5     00 06 04 04 
0c2c9     FE FE 10 0E 
0c2cd     F8 F5 FA 01 
0c2d1     FD FC 07 08 | 	byte	$00, $06, $04, $04, $fe, $fe, $10, $0e, $f8, $f5, $fa, $01, $fd, $fc, $07, $08
0c2d5     03 F5 F4 FB 
0c2d9     FB FE F9 02 
0c2dd     FB 02 F8 F8 
0c2e1     FF F8 EF F8 | 	byte	$03, $f5, $f4, $fb, $fb, $fe, $f9, $02, $fb, $02, $f8, $f8, $ff, $f8, $ef, $f8
0c2e5     05 0A 02 F8 
0c2e9     FC 03 0A 09 
0c2ed     00 FA FD F7 
0c2f1     FC 04 FD F9 | 	byte	$05, $0a, $02, $f8, $fc, $03, $0a, $09, $00, $fa, $fd, $f7, $fc, $04, $fd, $f9
0c2f5     FD 01 04 00 
0c2f9     FD 03 FE 03 
0c2fd     09 0B 00 02 
0c301     FE 07 06 06 | 	byte	$fd, $01, $04, $00, $fd, $03, $fe, $03, $09, $0b, $00, $02, $fe, $07, $06, $06
0c305     04 02 03 02 
0c309     09 07 01 F9 
0c30d     FD 04 FB 02 
0c311     05 00 02 F9 | 	byte	$04, $02, $03, $02, $09, $07, $01, $f9, $fd, $04, $fb, $02, $05, $00, $02, $f9
0c315     F4 06 01 FC 
0c319     FA FC FE FD 
0c31d     F9 F4 FF 0D 
0c321     05 FD FB F9 | 	byte	$f4, $06, $01, $fc, $fa, $fc, $fe, $fd, $f9, $f4, $ff, $0d, $05, $fd, $fb, $f9
0c325     F4 F3 F6 FD 
0c329     FC 03 0C 02 
0c32d     FB F7 F9 FC 
0c331     02 04 02 08 | 	byte	$f4, $f3, $f6, $fd, $fc, $03, $0c, $02, $fb, $f7, $f9, $fc, $02, $04, $02, $08
0c335     0E FD FC 00 
0c339     02 03 05 01 
0c33d     06 03 FB FD 
0c341     00 07 02 04 | 	byte	$0e, $fd, $fc, $00, $02, $03, $05, $01, $06, $03, $fb, $fd, $00, $07, $02, $04
0c345     08 04 04 03 
0c349     F7 FE 01 08 
0c34d     FF 04 05 02 
0c351     04 04 00 F9 | 	byte	$08, $04, $04, $03, $f7, $fe, $01, $08, $ff, $04, $05, $02, $04, $04, $00, $f9
0c355     F4 FE 03 FE 
0c359     FC FF 05 FE 
0c35d     F1 F7 FE 02 
0c361     02 FB F5 FA | 	byte	$f4, $fe, $03, $fe, $fc, $ff, $05, $fe, $f1, $f7, $fe, $02, $02, $fb, $f5, $fa
0c365     FA FC FA F7 
0c369     06 02 F7 F6 
0c36d     FD FB F6 F7 
0c371     FE 03 08 00 | 	byte	$fa, $fc, $fa, $f7, $06, $02, $f7, $f6, $fd, $fb, $f6, $f7, $fe, $03, $08, $00
0c375     FA 01 08 07 
0c379     07 08 06 07 
0c37d     FB 0C 06 05 
0c381     04 FF 08 0B | 	byte	$fa, $01, $08, $07, $07, $08, $06, $07, $fb, $0c, $06, $05, $04, $ff, $08, $0b
0c385     01 05 07 0A 
0c389     FD FB 00 FF 
0c38d     FF 01 00 03 
0c391     03 00 FD FD | 	byte	$01, $05, $07, $0a, $fd, $fb, $00, $ff, $ff, $01, $00, $03, $03, $00, $fd, $fd
0c395     01 04 FC F3 
0c399     F7 F6 F7 00 
0c39d     FE FE F3 F1 
0c3a1     F3 F5 F9 03 | 	byte	$01, $04, $fc, $f3, $f7, $f6, $f7, $00, $fe, $fe, $f3, $f1, $f3, $f5, $f9, $03
0c3a5     FD F2 00 00 
0c3a9     00 00 04 01 
0c3ad     03 00 01 09 
0c3b1     06 03 FC FA | 	byte	$fd, $f2, $00, $00, $00, $00, $04, $01, $03, $00, $01, $09, $06, $03, $fc, $fa
0c3b5     07 09 08 0A 
0c3b9     03 FE 00 05 
0c3bd     0A 09 04 02 
0c3c1     05 01 03 04 | 	byte	$07, $09, $08, $0a, $03, $fe, $00, $05, $0a, $09, $04, $02, $05, $01, $03, $04
0c3c5     00 02 00 FE 
0c3c9     FB FD 00 FD 
0c3cd     F5 F8 01 06 
0c3d1     00 00 00 F8 | 	byte	$00, $02, $00, $fe, $fb, $fd, $00, $fd, $f5, $f8, $01, $06, $00, $00, $00, $f8
0c3d5     EE ED FF 00 
0c3d9     F9 FD 00 02 
0c3dd     02 FF 04 FE 
0c3e1     FF F9 00 FD | 	byte	$ee, $ed, $ff, $00, $f9, $fd, $00, $02, $02, $ff, $04, $fe, $ff, $f9, $00, $fd
0c3e5     F6 FE 08 03 
0c3e9     FE 00 00 07 
0c3ed     00 FB 06 06 
0c3f1     0C 07 FB 00 | 	byte	$f6, $fe, $08, $03, $fe, $00, $00, $07, $00, $fb, $06, $06, $0c, $07, $fb, $00
0c3f5     06 FF 00 05 
0c3f9     02 02 02 03 
0c3fd     03 FC FD FE 
0c401     FE FE 00 FD | 	byte	$06, $ff, $00, $05, $02, $02, $02, $03, $03, $fc, $fd, $fe, $fe, $fe, $00, $fd
0c405     FF 02 00 01 
0c409     FF FD 01 00 
0c40d     FF 00 FF F8 
0c411     F9 04 00 00 | 	byte	$ff, $02, $00, $01, $ff, $fd, $01, $00, $ff, $00, $ff, $f8, $f9, $04, $00, $00
0c415     00 FF F9 F8 
0c419     FB FB FC FE 
0c41d     04 01 00 FA 
0c421     00 03 FD FC | 	byte	$00, $ff, $f9, $f8, $fb, $fb, $fc, $fe, $04, $01, $00, $fa, $00, $03, $fd, $fc
0c425     FD FF 06 09 
0c429     08 08 02 00 
0c42d     FE F8 FE 04 
0c431     FF 04 04 03 | 	byte	$fd, $ff, $06, $09, $08, $08, $02, $00, $fe, $f8, $fe, $04, $ff, $04, $04, $03
0c435     01 FC 05 02 
0c439     00 06 04 00 
0c43d     FD FD FD FC 
0c441     FB FE 00 FD | 	byte	$01, $fc, $05, $02, $00, $06, $04, $00, $fd, $fd, $fd, $fc, $fb, $fe, $00, $fd
0c445     00 FF FE FE 
0c449     FB FB FC FC 
0c44d     00 04 FF FF 
0c451     02 00 FF FF | 	byte	$00, $ff, $fe, $fe, $fb, $fb, $fc, $fc, $00, $04, $ff, $ff, $02, $00, $ff, $ff
0c455     FE 00 03 07 
0c459     02 FB F9 02 
0c45d     FE 03 06 00 
0c461     FC 00 01 04 | 	byte	$fe, $00, $03, $07, $02, $fb, $f9, $02, $fe, $03, $06, $00, $fc, $00, $01, $04
0c465     03 02 FE FF 
0c469     00 03 06 06 
0c46d     04 02 FF FE 
0c471     FF 01 02 00 | 	byte	$03, $02, $fe, $ff, $00, $03, $06, $06, $04, $02, $ff, $fe, $ff, $01, $02, $00
0c475     00 FC FB FE 
0c479     FC FC FC FC 
0c47d     00 FB FA 00 
0c481     05 05 04 FD | 	byte	$00, $fc, $fb, $fe, $fc, $fc, $fc, $fc, $00, $fb, $fa, $00, $05, $05, $04, $fd
0c485     F9 FE FF 01 
0c489     07 02 FD FB 
0c48d     FE 00 00 00 
0c491     01 01 03 08 | 	byte	$f9, $fe, $ff, $01, $07, $02, $fd, $fb, $fe, $00, $00, $00, $01, $01, $03, $08
0c495     03 00 01 FF 
0c499     00 06 04 01 
0c49d     00 01 FF 00 
0c4a1     03 00 FD FF | 	byte	$03, $00, $01, $ff, $00, $06, $04, $01, $00, $01, $ff, $00, $03, $00, $fd, $ff
0c4a5     01 FF 01 01 
0c4a9     01 00 FB 00 
0c4ad     03 00 FC FC 
0c4b1     F9 F9 FE FD | 	byte	$01, $ff, $01, $01, $01, $00, $fb, $00, $03, $00, $fc, $fc, $f9, $f9, $fe, $fd
0c4b5     00 FD FE 00 
0c4b9     FD FB FB FE 
0c4bd     FF 01 00 00 
0c4c1     FD FF 03 01 | 	byte	$00, $fd, $fe, $00, $fd, $fb, $fb, $fe, $ff, $01, $00, $00, $fd, $ff, $03, $01
0c4c5     FF FF FF FF 
0c4c9     00 01 00 01 
0c4cd     00 01 06 06 
0c4d1     06 05 02 01 | 	byte	$ff, $ff, $ff, $ff, $00, $01, $00, $01, $00, $01, $06, $06, $06, $05, $02, $01
0c4d5     01 04 03 04 
0c4d9     06 06 01 FE 
0c4dd     FF 01 01 02 
0c4e1     FF FF 00 01 | 	byte	$01, $04, $03, $04, $06, $06, $01, $fe, $ff, $01, $01, $02, $ff, $ff, $00, $01
0c4e5     02 00 00 FC 
0c4e9     FB FD FE FD 
0c4ed     00 00 FE FC 
0c4f1     F9 FA FD FD | 	byte	$02, $00, $00, $fc, $fb, $fd, $fe, $fd, $00, $00, $fe, $fc, $f9, $fa, $fd, $fd
0c4f5     FC FE FE FC 
0c4f9     FD 00 FF FE 
0c4fd     00 FD FC FF 
0c501     FF 00 01 00 | 	byte	$fc, $fe, $fe, $fc, $fd, $00, $ff, $fe, $00, $fd, $fc, $ff, $ff, $00, $01, $00
0c505     02 02 01 03 
0c509     02 00 00 03 
0c50d     07 08 06 03 
0c511     01 00 01 02 | 	byte	$02, $02, $01, $03, $02, $00, $00, $03, $07, $08, $06, $03, $01, $00, $01, $02
0c515     03 02 01 01 
0c519     02 05 02 01 
0c51d     FF 00 FF 00 
0c521     00 FF FC FA | 	byte	$03, $02, $01, $01, $02, $05, $02, $01, $ff, $00, $ff, $00, $00, $ff, $fc, $fa
0c525     FA FC FD FF 
0c529     FF FD FB FA 
0c52d     FC FF 00 FF 
0c531     FC FA FB FF | 	byte	$fa, $fc, $fd, $ff, $ff, $fd, $fb, $fa, $fc, $ff, $00, $ff, $fc, $fa, $fb, $ff
0c535     00 00 FE 00 
0c539     00 00 00 01 
0c53d     01 00 00 00 
0c541     01 01 02 04 | 	byte	$00, $00, $fe, $00, $00, $00, $00, $01, $01, $00, $00, $00, $01, $01, $02, $04
0c545     04 03 04 04 
0c549     03 02 04 02 
0c54d     00 03 02 00 
0c551     00 00 00 00 | 	byte	$04, $03, $04, $04, $03, $02, $04, $02, $00, $03, $02, $00, $00, $00, $00, $00
0c555     00 00 01 01 
0c559     01 00 FE FE 
0c55d     FF FF FF FC 
0c561     FD FE FE FE | 	byte	$00, $00, $01, $01, $01, $00, $fe, $fe, $ff, $ff, $ff, $fc, $fd, $fe, $fe, $fe
0c565     FF FF FE FD 
0c569     FE FC FF 00 
0c56d     FF 00 FE FE 
0c571     FE FE FE FE | 	byte	$ff, $ff, $fe, $fd, $fe, $fc, $ff, $00, $ff, $00, $fe, $fe, $fe, $fe, $fe, $fe
0c575     00 01 00 01 
0c579     03 00 00 01 
0c57d     01 04 03 02 
0c581     01 02 03 03 | 	byte	$00, $01, $00, $01, $03, $00, $00, $01, $01, $04, $03, $02, $01, $02, $03, $03
0c585     01 01 01 02 
0c589     02 03 00 00 
0c58d     FF 00 00 00 
0c591     00 00 00 01 | 	byte	$01, $01, $01, $02, $02, $03, $00, $00, $ff, $00, $00, $00, $00, $00, $00, $01
0c595     00 FE FF FF 
0c599     00 FF FE FE 
0c59d     FE FF FF FF 
0c5a1     00 FF FF FF | 	byte	$00, $fe, $ff, $ff, $00, $ff, $fe, $fe, $fe, $ff, $ff, $ff, $00, $ff, $ff, $ff
0c5a5     FF FF 00 FF 
0c5a9     FF 00 00 00 
0c5ad     01 01 01 00 
0c5b1     00 00 00 01 | 	byte	$ff, $ff, $00, $ff, $ff, $00, $00, $00, $01, $01, $01, $00, $00, $00, $00, $01
0c5b5     00 00 00 01 
0c5b9     01 01 00 00 
0c5bd     00 00 00 00 
0c5c1     00 00 00 00 | 	byte	$00, $00, $00, $01, $01, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c5c5     00 00 FF 00 
0c5c9     00 00 00 00 
0c5cd     00 00 00 00 
0c5d1     00 00 00 00 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
0c5d5     00 00 00 00 
      ...             
0c619     00 00 00 00 
0c61d     00          | 	byte	$00[73]
0c61e     1F 21 2A 35 
0c622     39 41 4A 52 
0c626     58 63 6C 6F 
0c62a     71 6F 6E 69 | 	byte	$1f, $21, $2a, $35, $39, $41, $4a, $52, $58, $63, $6c, $6f, $71, $6f, $6e, $69
0c62e     66 64 5D 4F 
0c632     48 38 2E 27 
0c636     1D 10 01 EF 
0c63a     E4 E8 EC BF | 	byte	$66, $64, $5d, $4f, $48, $38, $2e, $27, $1d, $10, $01, $ef, $e4, $e8, $ec, $bf
0c63e     B7 B9 AF BB 
0c642     AD AF B1 A8 
0c646     AB AA AD A2 
0c64a     B4 B3 A3 AE | 	byte	$b7, $b9, $af, $bb, $ad, $af, $b1, $a8, $ab, $aa, $ad, $a2, $b4, $b3, $a3, $ae
0c64e     BC C4 CC CF 
0c652     CE CF D7 D0 
0c656     D8 E3 E6 E3 
0c65a     EE FD EF 0D | 	byte	$bc, $c4, $cc, $cf, $ce, $cf, $d7, $d0, $d8, $e3, $e6, $e3, $ee, $fd, $ef, $0d
0c65e     FD 24 01 00 
0c662     04 18 06 E6 
0c666     0E 03 E3 D9 
0c66a     F6 DF DA D0 | 	byte	$fd, $24, $01, $00, $04, $18, $06, $e6, $0e, $03, $e3, $d9, $f6, $df, $da, $d0
0c66e     DB C1 B7 AF 
0c672     BE A4 A4 AA 
0c676     AC 9B 93 A8 
0c67a     99 9B 81 88 | 	byte	$db, $c1, $b7, $af, $be, $a4, $a4, $aa, $ac, $9b, $93, $a8, $99, $9b, $81, $88
0c67e     98 87 98 96 
0c682     9C 98 A2 AB 
0c686     88 B4 A4 9C 
0c68a     B3 9A B4 B0 | 	byte	$98, $87, $98, $96, $9c, $98, $a2, $ab, $88, $b4, $a4, $9c, $b3, $9a, $b4, $b0
0c68e     AA B7 BC D8 
0c692     E0 10 2A 38 
0c696     75 7F 7F 7F 
0c69a     7F 7F 7F 7F | 	byte	$aa, $b7, $bc, $d8, $e0, $10, $2a, $38, $75, $7f, $7f, $7f, $7f, $7f, $7f, $7f
0c69e     7F 7F 7F 7F 
0c6a2     7F 7F 7F 7F 
0c6a6     7F 7F 7F 7F 
0c6aa     7F 7F 7F 7F 
0c6ae     7F 7F       | 	byte	$7f[18]
0c6b0     72 7A 6A 54 
0c6b4     46 48 2F 19 
0c6b8     26 05 FA E4 
0c6bc     EC E6 D4 CF | 	byte	$72, $7a, $6a, $54, $46, $48, $2f, $19, $26, $05, $fa, $e4, $ec, $e6, $d4, $cf
0c6c0     DE E3 DD DA 
0c6c4     E8 ED E2 F8 
0c6c8     E9 E5 F4 ED 
0c6cc     F3 06 06 0A | 	byte	$de, $e3, $dd, $da, $e8, $ed, $e2, $f8, $e9, $e5, $f4, $ed, $f3, $06, $06, $0a
0c6d0     FF 09 03 0B 
0c6d4     02 FC 13 10 
0c6d8     F6 14 11 10 
0c6dc     16 1B 1B 19 | 	byte	$ff, $09, $03, $0b, $02, $fc, $13, $10, $f6, $14, $11, $10, $16, $1b, $1b, $19
0c6e0     1C 03 1A FE 
0c6e4     F9 FD DB D2 
0c6e8     BC C8 C7 8D 
0c6ec     B5 83 8A 81 | 	byte	$1c, $03, $1a, $fe, $f9, $fd, $db, $d2, $bc, $c8, $c7, $8d, $b5, $83, $8a, $81
0c6f0     81 81 81 81 
      ...             
0c708     81 81 81 81 
0c70c     81 81 81    | 	byte	$81[31]
0c70f     8D 86 95 AE 
0c713     C0 CF FB 0F 
0c717     17 25 4E 4A 
0c71b     65 7F 7F 7F | 	byte	$8d, $86, $95, $ae, $c0, $cf, $fb, $0f, $17, $25, $4e, $4a, $65, $7f, $7f, $7f
0c71f     7F 7F 7F 7F 
0c723     7F 7F 7F 7F 
0c727     7F 7F 7F 7F 
0c72b     7F 7F       | 	byte	$7f[14]
0c72d     66 5D 57 54 
0c731     48 27 28 2D 
0c735     10 04 01 FC 
0c739     E5 E8 E6 E2 | 	byte	$66, $5d, $57, $54, $48, $27, $28, $2d, $10, $04, $01, $fc, $e5, $e8, $e6, $e2
0c73d     E6 EB EA F0 
0c741     F7 F1 06 03 
0c745     03 13 14 10 
0c749     2C 32 3B 4B | 	byte	$e6, $eb, $ea, $f0, $f7, $f1, $06, $03, $03, $13, $14, $10, $2c, $32, $3b, $4b
0c74d     4D 57 55 53 
0c751     54 47 5E 55 
0c755     50 63 5D 74 
0c759     6A 65 7F 6D | 	byte	$4d, $57, $55, $53, $54, $47, $5e, $55, $50, $63, $5d, $74, $6a, $65, $7f, $6d
0c75d     77 64 4C 55 
0c761     34 2E 1D F8 
0c765     F1 E2 E0 C0 
0c769     B9 C9 B0 9C | 	byte	$77, $64, $4c, $55, $34, $2e, $1d, $f8, $f1, $e2, $e0, $c0, $b9, $c9, $b0, $9c
0c76d     97 8B 8E 82 
0c771     81 81 81 81 
0c775     81 81 81 81 
0c779     81 81 81 81 | 	byte	$97, $8b, $8e, $82, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81, $81
0c77d     81 81 81 81 
0c781     83 81 88 81 
0c785     95 94 83 8B 
0c789     8C 82 86 8F | 	byte	$81, $81, $81, $81, $83, $81, $88, $81, $95, $94, $83, $8b, $8c, $82, $86, $8f
0c78d     8F 8F 8C AA 
0c791     B5 B9 C4 E0 
0c795     F3 FB 0D 3B 
0c799     51 67 7F 7F | 	byte	$8f, $8f, $8c, $aa, $b5, $b9, $c4, $e0, $f3, $fb, $0d, $3b, $51, $67, $7f, $7f
0c79d     7F 7F 7F 7F 
0c7a1     7F 7F 7F 7F 
0c7a5     7F 7F 7F 7F | 	byte	$7f[12]
0c7a9     7B 6A 63 4F 
0c7ad     51 39 26 28 
0c7b1     15 08 FE F2 
0c7b5     F1 E7 D7 DF | 	byte	$7b, $6a, $63, $4f, $51, $39, $26, $28, $15, $08, $fe, $f2, $f1, $e7, $d7, $df
0c7b9     D5 CE D8 D5 
0c7bd     E0 D1 DD F0 
0c7c1     E3 FB FB 0C 
0c7c5     0D 01 23 16 | 	byte	$d5, $ce, $d8, $d5, $e0, $d1, $dd, $f0, $e3, $fb, $fb, $0c, $0d, $01, $23, $16
0c7c9     1C 35 32 3F 
0c7cd     37 3D 49 37 
0c7d1     36 36 43 3C 
0c7d5     2A 45 49 3C | 	byte	$1c, $35, $32, $3f, $37, $3d, $49, $37, $36, $36, $43, $3c, $2a, $45, $49, $3c
0c7d9     5B 61 4C 4C 
0c7dd     41 44 34 19 
0c7e1     13 13 F7 D3 
0c7e5     D4 E0 B9 B2 | 	byte	$5b, $61, $4c, $4c, $41, $44, $34, $19, $13, $13, $f7, $d3, $d4, $e0, $b9, $b2
0c7e9     BC A6 A8 92 
0c7ed     93 8F 81 83 
0c7f1     82 81 81 81 
0c7f5     90 81 81 82 | 	byte	$bc, $a6, $a8, $92, $93, $8f, $81, $83, $82, $81, $81, $81, $90, $81, $81, $82
0c7f9     81 81 81 82 
0c7fd     8B 87 9F 9E 
0c801     9B 9E A6 AC 
0c805     A1 9A 9B A7 | 	byte	$81, $81, $81, $82, $8b, $87, $9f, $9e, $9b, $9e, $a6, $ac, $a1, $9a, $9b, $a7
0c809     9A A0 A3 A9 
0c80d     A2 A6 AE B6 
0c811     C2 CF DD E6 
0c815     F8 13 33 50 | 	byte	$9a, $a0, $a3, $a9, $a2, $a6, $ae, $b6, $c2, $cf, $dd, $e6, $f8, $13, $33, $50
0c819     6A 7F 7F 7F 
0c81d     7F 7F 7F 7F 
0c821     7F 7F 7F 7F 
0c825     7F 7F 7F 7F | 	byte	$6a, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f
0c829     7F 70 65 76 
0c82d     54 51 4C 41 
0c831     45 1F 2D 2E 
0c835     11 13 0C 0D | 	byte	$7f, $70, $65, $76, $54, $51, $4c, $41, $45, $1f, $2d, $2e, $11, $13, $0c, $0d
0c839     06 FC 0B F3 
0c83d     F8 F6 F4 03 
0c841     FA 03 12 01 
0c845     01 19 17 0E | 	byte	$06, $fc, $0b, $f3, $f8, $f6, $f4, $03, $fa, $03, $12, $01, $01, $19, $17, $0e
0c849     1E 2A 21 27 
0c84d     2B 27 21 24 
0c851     23 28 18 0D 
0c855     2C 29 1A 30 | 	byte	$1e, $2a, $21, $27, $2b, $27, $21, $24, $23, $28, $18, $0d, $2c, $29, $1a, $30
0c859     36 36 2A 2A 
0c85d     25 16 1A FF 
0c861     03 F6 D9 E8 
0c865     DC CC D0 CC | 	byte	$36, $36, $2a, $2a, $25, $16, $1a, $ff, $03, $f6, $d9, $e8, $dc, $cc, $d0, $cc
0c869     CF B1 B5 B2 
0c86d     A3 A4 94 98 
0c871     8D 86 92 8C 
0c875     82 84 8E 84 | 	byte	$cf, $b1, $b5, $b2, $a3, $a4, $94, $98, $8d, $86, $92, $8c, $82, $84, $8e, $84
0c879     81 81 84 82 
0c87d     82 82 88 83 
0c881     88 8D 8D 91 
0c885     89 95 94 86 | 	byte	$81, $81, $84, $82, $82, $82, $88, $83, $88, $8d, $8d, $91, $89, $95, $94, $86
0c889     9D 9A 91 98 
0c88d     8F A1 9C AC 
0c891     BA B9 D9 E8 
0c895     01 28 3B 7B | 	byte	$9d, $9a, $91, $98, $8f, $a1, $9c, $ac, $ba, $b9, $d9, $e8, $01, $28, $3b, $7b
0c899     7F 7F 7F 7F 
0c89d     7F 7F 7F 7F 
0c8a1     7F 7F 7F 7F 
0c8a5     7F 7F 7F 7F | 	byte	$7f[16]
0c8a9     6A 77 6C 62 
0c8ad     5B 4F 51 40 
0c8b1     39 38 31 25 
0c8b5     1D 2B 1E 0E | 	byte	$6a, $77, $6c, $62, $5b, $4f, $51, $40, $39, $38, $31, $25, $1d, $2b, $1e, $0e
0c8b9     1A 1A 05 02 
0c8bd     02 04 01 F9 
0c8c1     05 05 FD 01 
0c8c5     0C 10 03 15 | 	byte	$1a, $1a, $05, $02, $02, $04, $01, $f9, $05, $05, $fd, $01, $0c, $10, $03, $15
0c8c9     28 17 1D 21 
0c8cd     26 25 17 1D 
0c8d1     1A 16 13 14 
0c8d5     20 1A 1F 2E | 	byte	$28, $17, $1d, $21, $26, $25, $17, $1d, $1a, $16, $13, $14, $20, $1a, $1f, $2e
0c8d9     1E 1B 1E 15 
0c8dd     09 04 00 FB 
0c8e1     F1 EE E6 E4 
0c8e5     DF D7 DE CE | 	byte	$1e, $1b, $1e, $15, $09, $04, $00, $fb, $f1, $ee, $e6, $e4, $df, $d7, $de, $ce
0c8e9     C2 C8 C9 B8 
0c8ed     B0 BA B2 AF 
0c8f1     AA A5 B4 9E 
0c8f5     A0 A4 96 93 | 	byte	$c2, $c8, $c9, $b8, $b0, $ba, $b2, $af, $aa, $a5, $b4, $9e, $a0, $a4, $96, $93
0c8f9     8D 96 8E 83 
0c8fd     95 8B 8C 92 
0c901     8A 99 8C 8C 
0c905     95 8F 95 93 | 	byte	$8d, $96, $8e, $83, $95, $8b, $8c, $92, $8a, $99, $8c, $8c, $95, $8f, $95, $93
0c909     95 98 8D 95 
0c90d     92 95 A4 A8 
0c911     BB C9 D9 02 
0c915     22 43 67 7A | 	byte	$95, $98, $8d, $95, $92, $95, $a4, $a8, $bb, $c9, $d9, $02, $22, $43, $67, $7a
0c919     7F 7F 7F 7F 
0c91d     7F 7F 7F 7F 
0c921     7F 7F 7F    | 	byte	$7f[11]
0c924     7E 73 78 62 
0c928     61 60 56 4D 
0c92c     40 46 3E 2F 
0c930     33 2A 2E 24 | 	byte	$7e, $73, $78, $62, $61, $60, $56, $4d, $40, $46, $3e, $2f, $33, $2a, $2e, $24
0c934     1B 26 1B 16 
0c938     17 13 0D 03 
0c93c     09 06 FF 00 
0c940     02 08 03 FE | 	byte	$1b, $26, $1b, $16, $17, $13, $0d, $03, $09, $06, $ff, $00, $02, $08, $03, $fe
0c944     07 0F 0D 13 
0c948     1D 1F 22 21 
0c94c     24 23 1F 1D 
0c950     12 10 0E 09 | 	byte	$07, $0f, $0d, $13, $1d, $1f, $22, $21, $24, $23, $1f, $1d, $12, $10, $0e, $09
0c954     11 10 0C 11 
0c958     0F 09 07 00 
0c95c     FA F7 F2 F0 
0c960     E8 E8 E6 E1 | 	byte	$11, $10, $0c, $11, $0f, $09, $07, $00, $fa, $f7, $f2, $f0, $e8, $e8, $e6, $e1
0c964     E0 D8 D6 D7 
0c968     C9 CE D1 C9 
0c96c     C9 C8 C7 C1 
0c970     BD BE B8 B2 | 	byte	$e0, $d8, $d6, $d7, $c9, $ce, $d1, $c9, $c9, $c8, $c7, $c1, $bd, $be, $b8, $b2
0c974     B1 AC AD A7 
0c978     A5 A9 A1 9E 
0c97c     A1 9D 9F 9B 
0c980     9B A0 9D 9E | 	byte	$b1, $ac, $ad, $a7, $a5, $a9, $a1, $9e, $a1, $9d, $9f, $9b, $9b, $a0, $9d, $9e
0c984     98 9A A0 95 
0c988     97 97 90 94 
0c98c     91 9E A2 A7 
0c990     BC CC E9 07 | 	byte	$98, $9a, $a0, $95, $97, $97, $90, $94, $91, $9e, $a2, $a7, $bc, $cc, $e9, $07
0c994     2C 56 6D 7F 
0c998     7F 7F 7F 7F 
0c99c     7F 7F 7F 7F 
0c9a0     7F 7F 7F 7E | 	byte	$2c, $56, $6d, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7e
0c9a4     7B 71 68 61 
0c9a8     5A 56 4A 44 
0c9ac     46 3B 35 34 
0c9b0     35 33 2D 2E | 	byte	$7b, $71, $68, $61, $5a, $56, $4a, $44, $46, $3b, $35, $34, $35, $33, $2d, $2e
0c9b4     30 28 21 1F 
0c9b8     1D 17 0D 0D 
0c9bc     0C 03 06 04 
0c9c0     FE 01 F8 FB | 	byte	$30, $28, $21, $1f, $1d, $17, $0d, $0d, $0c, $03, $06, $04, $fe, $01, $f8, $fb
0c9c4     00 FD 08 08 
0c9c8     0F 10 0E 16 
0c9cc     0F 0C 08 FC 
0c9d0     FC F7 F1 F7 | 	byte	$00, $fd, $08, $08, $0f, $10, $0e, $16, $0f, $0c, $08, $fc, $fc, $f7, $f1, $f7
0c9d4     F7 F7 F7 F5 
0c9d8     F2 EF E9 E8 
0c9dc     DF DD DD D9 
0c9e0     DC D8 DA DA | 	byte	$f7, $f7, $f7, $f5, $f2, $ef, $e9, $e8, $df, $dd, $dd, $d9, $dc, $d8, $da, $da
0c9e4     D5 D6 D6 D3 
0c9e8     D7 D7 DB D8 
0c9ec     D7 D9 D1 CD 
0c9f0     CB C7 C4 BD | 	byte	$d5, $d6, $d6, $d3, $d7, $d7, $db, $d8, $d7, $d9, $d1, $cd, $cb, $c7, $c4, $bd
0c9f4     BB BA B7 B3 
0c9f8     B1 B1 AF A8 
0c9fc     A8 AA A5 A3 
0ca00     A1 9F 9F 99 | 	byte	$bb, $ba, $b7, $b3, $b1, $b1, $af, $a8, $a8, $aa, $a5, $a3, $a1, $9f, $9f, $99
0ca04     99 97 93 90 
0ca08     8C 8E 85 89 
0ca0c     92 93 9E AB 
0ca10     C4 E1 FF 28 | 	byte	$99, $97, $93, $90, $8c, $8e, $85, $89, $92, $93, $9e, $ab, $c4, $e1, $ff, $28
0ca14     47 67 7F 7F 
0ca18     7F 7F 7F 7F 
0ca1c     7F 7F 7F 7F 
0ca20     7F 7F 7B 75 | 	byte	$47, $67, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7b, $75
0ca24     6E 67 5F 5A 
0ca28     55 4D 47 44 
0ca2c     3D 36 37 37 
0ca30     3A 36 37 3A | 	byte	$6e, $67, $5f, $5a, $55, $4d, $47, $44, $3d, $36, $37, $37, $3a, $36, $37, $3a
0ca34     33 32 2E 2A 
0ca38     2A 1F 1F 1B 
0ca3c     12 13 0D 0B 
0ca40     09 04 09 09 | 	byte	$33, $32, $2e, $2a, $2a, $1f, $1f, $1b, $12, $13, $0d, $0b, $09, $04, $09, $09
0ca44     0A 0D 0B 11 
0ca48     0F 0B 0B 07 
0ca4c     05 FF F5 F4 
0ca50     F2 F1 F1 F1 | 	byte	$0a, $0d, $0b, $11, $0f, $0b, $0b, $07, $05, $ff, $f5, $f4, $f2, $f1, $f1, $f1
0ca54     F3 F1 F0 EC 
0ca58     E7 E4 E2 DE 
0ca5c     DB D9 DA DC 
0ca60     DA DC DB DA | 	byte	$f3, $f1, $f0, $ec, $e7, $e4, $e2, $de, $db, $d9, $da, $dc, $da, $dc, $db, $da
0ca64     DB DA DD DC 
0ca68     E1 E2 E2 DF 
0ca6c     DC DB D8 D0 
0ca70     CD CB C9 C7 | 	byte	$db, $da, $dd, $dc, $e1, $e2, $e2, $df, $dc, $db, $d8, $d0, $cd, $cb, $c9, $c7
0ca74     C0 C2 BE B9 
0ca78     B9 B2 B1 AE 
0ca7c     AA AD A6 A7 
0ca80     A6 A1 A0 99 | 	byte	$c0, $c2, $be, $b9, $b9, $b2, $b1, $ae, $aa, $ad, $a6, $a7, $a6, $a1, $a0, $99
0ca84     97 95 8A 88 
0ca88     86 83 87 87 
0ca8c     8F 99 A9 C4 
0ca90     E0 02 24 48 | 	byte	$97, $95, $8a, $88, $86, $83, $87, $87, $8f, $99, $a9, $c4, $e0, $02, $24, $48
0ca94     68 7C 7F 7F 
0ca98     7F 7F 7F 7F 
0ca9c     7F 7F 7F 7B 
0caa0     72 66 63 59 | 	byte	$68, $7c, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7b, $72, $66, $63, $59
0caa4     54 4C 47 46 
0caa8     3C 36 33 2D 
0caac     2D 27 2C 30 
0cab0     2F 36 33 32 | 	byte	$54, $4c, $47, $46, $3c, $36, $33, $2d, $2d, $27, $2c, $30, $2f, $36, $33, $32
0cab4     31 2D 2B 27 
0cab8     21 20 1D 1C 
0cabc     19 16 15 14 
0cac0     11 14 13 15 | 	byte	$31, $2d, $2b, $27, $21, $20, $1d, $1c, $19, $16, $15, $14, $11, $14, $13, $15
0cac4     15 14 16 11 
0cac8     11 0F 09 04 
0cacc     FD F9 F3 EE 
0cad0     EF ED ED EB | 	byte	$15, $14, $16, $11, $11, $0f, $09, $04, $fd, $f9, $f3, $ee, $ef, $ed, $ed, $eb
0cad4     E8 E6 DE DE 
0cad8     DB D5 D4 D0 
0cadc     D5 D3 D3 D7 
0cae0     D6 DA DA D8 | 	byte	$e8, $e6, $de, $de, $db, $d5, $d4, $d0, $d5, $d3, $d3, $d7, $d6, $da, $da, $d8
0cae4     DD DF E3 E7 
0cae8     E7 E8 E7 E6 
0caec     E4 DE DA D8 
0caf0     D4 D2 CC CB | 	byte	$dd, $df, $e3, $e7, $e7, $e8, $e7, $e6, $e4, $de, $da, $d8, $d4, $d2, $cc, $cb
0caf4     CA C7 C3 C1 
0caf8     BD BC BA B8 
0cafc     B9 B7 B7 B8 
0cb00     B2 B0 AC A8 | 	byte	$ca, $c7, $c3, $c1, $bd, $bc, $ba, $b8, $b9, $b7, $b7, $b8, $b2, $b0, $ac, $a8
0cb04     A2 98 96 91 
0cb08     8E 8F 90 98 
0cb0c     A4 B5 D0 EE 
0cb10     0E 31 50 6A | 	byte	$a2, $98, $96, $91, $8e, $8f, $90, $98, $a4, $b5, $d0, $ee, $0e, $31, $50, $6a
0cb14     7E 7F 7F 7F 
0cb18     7F 7F 7F 7F 
0cb1c     7F 7F 7C 71 
0cb20     67 5F 57 53 | 	byte	$7e, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $7c, $71, $67, $5f, $57, $53
0cb24     4B 47 43 3E 
0cb28     3B 34 31 2E 
0cb2c     29 2F 31 32 
0cb30     34 33 34 32 | 	byte	$4b, $47, $43, $3e, $3b, $34, $31, $2e, $29, $2f, $31, $32, $34, $33, $34, $32
0cb34     2F 2C 2A 29 
0cb38     23 22 1F 1C 
0cb3c     1B 17 15 13 
0cb40     12 15 13 11 | 	byte	$2f, $2c, $2a, $29, $23, $22, $1f, $1c, $1b, $17, $15, $13, $12, $15, $13, $11
0cb44     11 0E 0D 08 
0cb48     02 FE F7 F2 
0cb4c     EA E5 E4 E0 
0cb50     E2 DF DC DB | 	byte	$11, $0e, $0d, $08, $02, $fe, $f7, $f2, $ea, $e5, $e4, $e0, $e2, $df, $dc, $db
0cb54     D7 D2 CD C9 
0cb58     C7 C5 C4 C3 
0cb5c     C5 C7 CA CA 
0cb60     CB D0 D1 D7 | 	byte	$d7, $d2, $cd, $c9, $c7, $c5, $c4, $c3, $c5, $c7, $ca, $ca, $cb, $d0, $d1, $d7
0cb64     DB DF E4 E6 
0cb68     E8 E7 E2 E3 
0cb6c     E0 DC D8 D3 
0cb70     D2 CD CA C8 | 	byte	$db, $df, $e4, $e6, $e8, $e7, $e2, $e3, $e0, $dc, $d8, $d3, $d2, $cd, $ca, $c8
0cb74     C2 BF BD BA 
0cb78     B8 B7 B7 B7 
0cb7c     B6 B5 B4 B3 
0cb80     B0 AA A5 A0 | 	byte	$c2, $bf, $bd, $ba, $b8, $b7, $b7, $b7, $b6, $b5, $b4, $b3, $b0, $aa, $a5, $a0
0cb84     99 93 8E 8B 
0cb88     8B 8C 95 A2 
0cb8c     B4 CF EE 0B 
0cb90     2A 47 60 72 | 	byte	$99, $93, $8e, $8b, $8b, $8c, $95, $a2, $b4, $cf, $ee, $0b, $2a, $47, $60, $72
0cb94     7E 7F 7F 7F 
0cb98     7F 7F 7F 7F 
0cb9c     77 71 68 5E 
0cba0     57 53 4F 4B | 	byte	$7e, $7f, $7f, $7f, $7f, $7f, $7f, $7f, $77, $71, $68, $5e, $57, $53, $4f, $4b
0cba4     47 48 45 3E 
0cba8     3B 38 35 35 
0cbac     35 3A 3B 3C 
0cbb0     3D 3C 3B 38 | 	byte	$47, $48, $45, $3e, $3b, $38, $35, $35, $35, $3a, $3b, $3c, $3d, $3c, $3b, $38
0cbb4     35 34 30 2C 
0cbb8     2C 2A 27 24 
0cbbc     22 23 21 1F 
0cbc0     22 20 1E 1D | 	byte	$35, $34, $30, $2c, $2c, $2a, $27, $24, $22, $23, $21, $1f, $22, $20, $1e, $1d
0cbc4     1A 17 11 0C 
0cbc8     08 FF F8 F2 
0cbcc     ED E9 E8 E7 
0cbd0     E6 E3 E1 DB | 	byte	$1a, $17, $11, $0c, $08, $ff, $f8, $f2, $ed, $e9, $e8, $e7, $e6, $e3, $e1, $db
0cbd4     D6 D3 CD C9 
0cbd8     C7 C7 C6 C8 
0cbdc     C9 CB CB CE 
0cbe0     D2 D5 D9 DF | 	byte	$d6, $d3, $cd, $c9, $c7, $c7, $c6, $c8, $c9, $cb, $cb, $ce, $d2, $d5, $d9, $df
0cbe4     E5 EA EB ED 
0cbe8     EC EC E8 E3 
0cbec     E0 DB D9 D4 
0cbf0     D1 CF CA C9 | 	byte	$e5, $ea, $eb, $ed, $ec, $ec, $e8, $e3, $e0, $db, $d9, $d4, $d1, $cf, $ca, $c9
0cbf4     C5 C2 C1 BE 
0cbf8     C1 BF BD BF 
0cbfc     BE BF BC B8 
0cc00     B6 AF AB A4 | 	byte	$c5, $c2, $c1, $be, $c1, $bf, $bd, $bf, $be, $bf, $bc, $b8, $b6, $af, $ab, $a4
0cc04     9D 98 94 94 
0cc08     95 9B A9 BE 
0cc0c     D6 F2 0E 2C 
0cc10     45 5B 6A 75 | 	byte	$9d, $98, $94, $94, $95, $9b, $a9, $be, $d6, $f2, $0e, $2c, $45, $5b, $6a, $75
0cc14     7F 7F 7F 7F 
0cc18     7F 7F       | 	byte	$7f[6]
0cc1a     75 6C 63 5C 
0cc1e     53 4C 47 43 
0cc22     41 3E 3B 38 
0cc26     33 31 2F 2D | 	byte	$75, $6c, $63, $5c, $53, $4c, $47, $43, $41, $3e, $3b, $38, $33, $31, $2f, $2d
0cc2a     2D 2E 32 35 
0cc2e     35 35 35 34 
0cc32     31 2D 2E 2B 
0cc36     29 26 24 22 | 	byte	$2d, $2e, $32, $35, $35, $35, $35, $34, $31, $2d, $2e, $2b, $29, $26, $24, $22
0cc3a     20 1F 20 1E 
0cc3e     1D 1F 20 1C 
0cc42     1B 19 14 0E 
0cc46     08 02 FA F3 | 	byte	$20, $1f, $20, $1e, $1d, $1f, $20, $1c, $1b, $19, $14, $0e, $08, $02, $fa, $f3
0cc4a     ED E9 E5 E5 
0cc4e     E4 E3 E0 DA 
0cc52     D5 D0 C9 C3 
0cc56     BE BC BD BA | 	byte	$ed, $e9, $e5, $e5, $e4, $e3, $e0, $da, $d5, $d0, $c9, $c3, $be, $bc, $bd, $ba
0cc5a     BC BE BF C2 
0cc5e     C3 C8 CC D0 
0cc62     D9 DE E2 E6 
0cc66     E8 EB E8 E5 | 	byte	$bc, $be, $bf, $c2, $c3, $c8, $cc, $d0, $d9, $de, $e2, $e6, $e8, $eb, $e8, $e5
0cc6a     E4 DF DD D9 
0cc6e     D5 D3 CF CE 
0cc72     C8 C5 C4 C0 
0cc76     C2 C1 C2 C3 | 	byte	$e4, $df, $dd, $d9, $d5, $d3, $cf, $ce, $c8, $c5, $c4, $c0, $c2, $c1, $c2, $c3
0cc7a     C3 C5 C4 C3 
0cc7e     C2 BE B9 B2 
0cc82     AD A8 A2 A1 
0cc86     9F A2 AB BA | 	byte	$c3, $c5, $c4, $c3, $c2, $be, $b9, $b2, $ad, $a8, $a2, $a1, $9f, $a2, $ab, $ba
0cc8a     CD E5 00 1B 
0cc8e     34 49 5C 6A 
0cc92     75 7D 7F 7F 
0cc96     7F 7F 7C 74 | 	byte	$cd, $e5, $00, $1b, $34, $49, $5c, $6a, $75, $7d, $7f, $7f, $7f, $7f, $7c, $74
0cc9a     6B 62 5A 52 
0cc9e     4B 46 43 40 
0cca2     3D 3B 38 35 
0cca6     32 2F 30 31 | 	byte	$6b, $62, $5a, $52, $4b, $46, $43, $40, $3d, $3b, $38, $35, $32, $2f, $30, $31
0ccaa     33 36 38 3A 
0ccae     3A 3B 39 35 
0ccb2     35 34 32 30 
0ccb6     2D 2E 2D 2A | 	byte	$33, $36, $38, $3a, $3a, $3b, $39, $35, $35, $34, $32, $30, $2d, $2e, $2d, $2a
0ccba     2A 29 29 27 
0ccbe     25 26 21 1F 
0ccc2     1C 15 10 07 
0ccc6     01 FA F1 EB | 	byte	$2a, $29, $29, $27, $25, $26, $21, $1f, $1c, $15, $10, $07, $01, $fa, $f1, $eb
0ccca     E8 E6 E5 E3 
0ccce     E2 DF DA D4 
0ccd2     CE C7 C1 BC 
0ccd6     BB B9 B8 BA | 	byte	$e8, $e6, $e5, $e3, $e2, $df, $da, $d4, $ce, $c7, $c1, $bc, $bb, $b9, $b8, $ba
0ccda     BC BE BF C2 
0ccde     C7 CB D1 D7 
0cce2     DE E2 E6 E9 
0cce6     EA EA E9 E6 | 	byte	$bc, $be, $bf, $c2, $c7, $cb, $d1, $d7, $de, $e2, $e6, $e9, $ea, $ea, $e9, $e6
0ccea     E4 E0 DC D9 
0ccee     D5 D1 CD C8 
0ccf2     C6 C3 C2 C2 
0ccf6     C2 C5 C4 C4 | 	byte	$e4, $e0, $dc, $d9, $d5, $d1, $cd, $c8, $c6, $c3, $c2, $c2, $c2, $c5, $c4, $c4
0ccfa     C4 C3 C1 BE 
0ccfe     B9 B5 B0 AB 
0cd02     A7 A3 A2 A1 
0cd06     A6 AF BE D1 | 	byte	$c4, $c3, $c1, $be, $b9, $b5, $b0, $ab, $a7, $a3, $a2, $a1, $a6, $af, $be, $d1
0cd0a     EA 01 1A 31 
0cd0e     44 54 60 6A 
0cd12     71 75 79 78 
0cd16     74 6F 68 61 | 	byte	$ea, $01, $1a, $31, $44, $54, $60, $6a, $71, $75, $79, $78, $74, $6f, $68, $61
0cd1a     59 50 4C 44 
0cd1e     40 3C 3A 3A 
0cd22     36 33 31 2D 
0cd26     2F 2E 30 33 | 	byte	$59, $50, $4c, $44, $40, $3c, $3a, $3a, $36, $33, $31, $2d, $2f, $2e, $30, $33
0cd2a     35 3A 3B 3B 
0cd2e     3B 3A 3A 38 
0cd32     36 36 34 32 
0cd36     31 30 2E 2E | 	byte	$35, $3a, $3b, $3b, $3b, $3a, $3a, $38, $36, $36, $34, $32, $31, $30, $2e, $2e
0cd3a     2D 2D 2A 28 
0cd3e     26 24 1F 1A 
0cd42     15 0F 07 FF 
0cd46     F9 F2 EC E8 | 	byte	$2d, $2d, $2a, $28, $26, $24, $1f, $1a, $15, $0f, $07, $ff, $f9, $f2, $ec, $e8
0cd4a     E6 E5 E3 E1 
0cd4e     DE D9 D3 CD 
0cd52     C8 C0 BC BA 
0cd56     B8 B8 B6 B8 | 	byte	$e6, $e5, $e3, $e1, $de, $d9, $d3, $cd, $c8, $c0, $bc, $ba, $b8, $b8, $b6, $b8
0cd5a     BA BC C0 C4 
0cd5e     CB D0 D6 DD 
0cd62     E1 E5 E8 E8 
0cd66     E9 E7 E5 E3 | 	byte	$ba, $bc, $c0, $c4, $cb, $d0, $d6, $dd, $e1, $e5, $e8, $e8, $e9, $e7, $e5, $e3
0cd6a     E1 DE DB D7 
0cd6e     D4 CF CB C8 
0cd72     C5 C5 C6 C6 
0cd76     C7 C9 CA CA | 	byte	$e1, $de, $db, $d7, $d4, $cf, $cb, $c8, $c5, $c5, $c6, $c6, $c7, $c9, $ca, $ca
0cd7a     C7 C7 C3 BF 
0cd7e     BA B5 B1 AE 
0cd82     AB AC AC B2 
0cd86     BE CC E0 F5 | 	byte	$c7, $c7, $c3, $bf, $ba, $b5, $b1, $ae, $ab, $ac, $ac, $b2, $be, $cc, $e0, $f5
0cd8a     0B 21 34 45 
0cd8e     51 5B 65 6B 
0cd92     6F 70 6F 6D 
0cd96     67 61 5B 54 | 	byte	$0b, $21, $34, $45, $51, $5b, $65, $6b, $6f, $70, $6f, $6d, $67, $61, $5b, $54
0cd9a     4E 47 41 3D 
0cd9e     3A 38 35 31 
0cda2     2F 2C 2A 29 
0cda6     2A 2B 2E 31 | 	byte	$4e, $47, $41, $3d, $3a, $38, $35, $31, $2f, $2c, $2a, $29, $2a, $2b, $2e, $31
0cdaa     34 36 37 37 
0cdae     37 37 36 36 
0cdb2     36 33 32 31 
0cdb6     30 30 2E 2E | 	byte	$34, $36, $37, $37, $37, $37, $36, $36, $36, $33, $32, $31, $30, $30, $2e, $2e
0cdba     2D 2B 29 26 
0cdbe     24 1F 19 14 
0cdc2     0E 06 FF F8 
0cdc6     F3 EE EA E9 | 	byte	$2d, $2b, $29, $26, $24, $1f, $19, $14, $0e, $06, $ff, $f8, $f3, $ee, $ea, $e9
0cdca     E8 E5 E2 DF 
0cdce     DB D5 CF C9 
0cdd2     C2 BF BB B7 
0cdd6     B7 B4 B6 B7 | 	byte	$e8, $e5, $e2, $df, $db, $d5, $cf, $c9, $c2, $bf, $bb, $b7, $b7, $b4, $b6, $b7
0cdda     B9 BE C2 C9 
0cdde     CF D4 DA DE 
0cde2     E2 E4 E4 E6 
0cde6     E4 E3 E2 E0 | 	byte	$b9, $be, $c2, $c9, $cf, $d4, $da, $de, $e2, $e4, $e4, $e6, $e4, $e3, $e2, $e0
0cdea     DE DC D9 D6 
0cdee     D1 CD CB C9 
0cdf2     C9 C8 CA CB 
0cdf6     CC CD CC CC | 	byte	$de, $dc, $d9, $d6, $d1, $cd, $cb, $c9, $c9, $c8, $ca, $cb, $cc, $cd, $cc, $cc
0cdfa     CB C7 C3 BF 
0cdfe     BB B8 B6 B3 
0ce02     B4 B6 BF CB 
0ce06     D9 EC FF 14 | 	byte	$cb, $c7, $c3, $bf, $bb, $b8, $b6, $b3, $b4, $b6, $bf, $cb, $d9, $ec, $ff, $14
0ce0a     27 36 44 4E 
0ce0e     55 5D 61 64 
0ce12     65 64 62 5E 
0ce16     5A 56 50 4A | 	byte	$27, $36, $44, $4e, $55, $5d, $61, $64, $65, $64, $62, $5e, $5a, $56, $50, $4a
0ce1a     45 41 3D 3A 
0ce1e     38 35 32 30 
0ce22     2D 2B 2A 2B 
0ce26     2B 2D 30 32 | 	byte	$45, $41, $3d, $3a, $38, $35, $32, $30, $2d, $2b, $2a, $2b, $2b, $2d, $30, $32
0ce2a     35 36 37 37 
0ce2e     38 37 37 36 
0ce32     35 34 32 33 
0ce36     32 31 31 30 | 	byte	$35, $36, $37, $37, $38, $37, $37, $36, $35, $34, $32, $33, $32, $31, $31, $30
0ce3a     2F 2B 28 26 
0ce3e     1F 19 13 0B 
0ce42     06 FD F7 F2 
0ce46     ED EB E9 E6 | 	byte	$2f, $2b, $28, $26, $1f, $19, $13, $0b, $06, $fd, $f7, $f2, $ed, $eb, $e9, $e6
0ce4a     E4 E0 DD D8 
0ce4e     D1 CB C5 C0 
0ce52     BC B7 B6 B4 
0ce56     B3 B3 B4 B8 | 	byte	$e4, $e0, $dd, $d8, $d1, $cb, $c5, $c0, $bc, $b7, $b6, $b4, $b3, $b3, $b4, $b8
0ce5a     BC C1 C7 CD 
0ce5e     D3 D9 DC E0 
0ce62     E1 E3 E4 E3 
0ce66     E1 E1 DF DD | 	byte	$bc, $c1, $c7, $cd, $d3, $d9, $dc, $e0, $e1, $e3, $e4, $e3, $e1, $e1, $df, $dd
0ce6a     DA D7 D5 D0 
0ce6e     CD CB C9 CA 
0ce72     CB CB CC CC 
0ce76     CD CD CC C9 | 	byte	$da, $d7, $d5, $d0, $cd, $cb, $c9, $ca, $cb, $cb, $cc, $cc, $cd, $cd, $cc, $c9
0ce7a     C7 C4 C1 BD 
0ce7e     BA B8 B7 B8 
0ce82     BC C5 D2 E1 
0ce86     F3 06 18 29 | 	byte	$c7, $c4, $c1, $bd, $ba, $b8, $b7, $b8, $bc, $c5, $d2, $e1, $f3, $06, $18, $29
0ce8a     36 42 49 4F 
0ce8e     54 58 5A 5A 
0ce92     5A 58 56 53 
0ce96     4E 4B 46 42 | 	byte	$36, $42, $49, $4f, $54, $58, $5a, $5a, $5a, $58, $56, $53, $4e, $4b, $46, $42
0ce9a     3F 3C 3A 37 
0ce9e     33 32 2F 2D 
0cea2     2B 2A 2C 2B 
0cea6     2D 30 31 33 | 	byte	$3f, $3c, $3a, $37, $33, $32, $2f, $2d, $2b, $2a, $2c, $2b, $2d, $30, $31, $33
0ceaa     35 36 38 38 
0ceae     39 39 38 39 
0ceb2     37 37 37 37 
0ceb6     37 36 34 32 | 	byte	$35, $36, $38, $38, $39, $39, $38, $39, $37, $37, $37, $37, $37, $36, $34, $32
0ceba     2F 2B 26 1F 
0cebe     19 12 0C 05 
0cec2     FE F7 F3 EF 
0cec6     EC E9 E6 E4 | 	byte	$2f, $2b, $26, $1f, $19, $12, $0c, $05, $fe, $f7, $f3, $ef, $ec, $e9, $e6, $e4
0ceca     DF DC D6 D1 
0cece     CB C5 C0 BC 
0ced2     B8 B7 B4 B3 
0ced6     B4 B6 B9 BD | 	byte	$df, $dc, $d6, $d1, $cb, $c5, $c0, $bc, $b8, $b7, $b4, $b3, $b4, $b6, $b9, $bd
0ceda     C2 C9 CF D5 
0cede     DA DF E2 E4 
0cee2     E4 E5 E4 E2 
0cee6     E1 DF DD D9 | 	byte	$c2, $c9, $cf, $d5, $da, $df, $e2, $e4, $e4, $e5, $e4, $e2, $e1, $df, $dd, $d9
0ceea     D7 D4 D0 CD 
0ceee     CC CB CC CC 
0cef2     CD CD CE CE 
0cef6     CE CD CB CA | 	byte	$d7, $d4, $d0, $cd, $cc, $cb, $cc, $cc, $cd, $cd, $ce, $ce, $ce, $cd, $cb, $ca
0cefa     C7 C4 C2 BF 
0cefe     BD BD BE C5 
0cf02     CF DD EC FC 
0cf06     0F 1F 2D 39 | 	byte	$c7, $c4, $c2, $bf, $bd, $bd, $be, $c5, $cf, $dd, $ec, $fc, $0f, $1f, $2d, $39
0cf0a     41 48 4D 51 
0cf0e     54 54 54 54 
0cf12     51 50 4C 49 
0cf16     46 42 3F 3C | 	byte	$41, $48, $4d, $51, $54, $54, $54, $54, $51, $50, $4c, $49, $46, $42, $3f, $3c
0cf1a     3B 39 35 32 
0cf1e     30 2E 2C 2A 
0cf22     28 29 29 29 
0cf26     2A 2B 2D 2F | 	byte	$3b, $39, $35, $32, $30, $2e, $2c, $2a, $28, $29, $29, $29, $2a, $2b, $2d, $2f
0cf2a     30 32 32 34 
0cf2e     35 35 36 36 
0cf32     36 37 37 37 
0cf36     35 34 31 2D | 	byte	$30, $32, $32, $34, $35, $35, $36, $36, $36, $37, $37, $37, $35, $34, $31, $2d
0cf3a     29 23 1E 18 
0cf3e     11 0A 03 FC 
0cf42     F7 F1 EE EB 
0cf46     E9 E6 E4 E0 | 	byte	$29, $23, $1e, $18, $11, $0a, $03, $fc, $f7, $f1, $ee, $eb, $e9, $e6, $e4, $e0
0cf4a     DC D7 D1 CB 
0cf4e     C5 C1 BC B9 
0cf52     B6 B5 B4 B4 
0cf56     B6 B9 BE C3 | 	byte	$dc, $d7, $d1, $cb, $c5, $c1, $bc, $b9, $b6, $b5, $b4, $b4, $b6, $b9, $be, $c3
0cf5a     C9 CE D4 D9 
0cf5e     DE E0 E2 E3 
0cf62     E3 E3 E1 DF 
0cf66     DE DB D9 D5 | 	byte	$c9, $ce, $d4, $d9, $de, $e0, $e2, $e3, $e3, $e3, $e1, $df, $de, $db, $d9, $d5
0cf6a     D2 CF CD CC 
0cf6e     CC CC CD CE 
0cf72     CF CF CF CF 
0cf76     CE CC CB C8 | 	byte	$d2, $cf, $cd, $cc, $cc, $cc, $cd, $ce, $cf, $cf, $cf, $cf, $ce, $cc, $cb, $c8
0cf7a     C6 C4 C1 C0 
0cf7e     C1 C5 CD D8 
0cf82     E6 F5 06 17 
0cf86     26 32 3C 43 | 	byte	$c6, $c4, $c1, $c0, $c1, $c5, $cd, $d8, $e6, $f5, $06, $17, $26, $32, $3c, $43
0cf8a     49 4D 4F 51 
0cf8e     51 51 50 4E 
0cf92     4C 4A 47 44 
0cf96     41 3F 3D 3C | 	byte	$49, $4d, $4f, $51, $51, $51, $50, $4e, $4c, $4a, $47, $44, $41, $3f, $3d, $3c
0cf9a     3A 37 35 33 
0cf9e     30 2E 2C 2B 
0cfa2     2A 29 29 2A 
0cfa6     2A 2B 2C 2E | 	byte	$3a, $37, $35, $33, $30, $2e, $2c, $2b, $2a, $29, $29, $2a, $2a, $2b, $2c, $2e
0cfaa     30 31 33 34 
0cfae     35 36 37 37 
0cfb2     38 38 38 36 
0cfb6     33 30 2C 28 | 	byte	$30, $31, $33, $34, $35, $36, $37, $37, $38, $38, $38, $36, $33, $30, $2c, $28
0cfba     22 1C 15 0F 
0cfbe     09 02 FC F6 
0cfc2     F1 EE EC E9 
0cfc6     E7 E4 E1 DB | 	byte	$22, $1c, $15, $0f, $09, $02, $fc, $f6, $f1, $ee, $ec, $e9, $e7, $e4, $e1, $db
0cfca     D7 D1 CB C6 
0cfce     C0 BC B9 B5 
0cfd2     B4 B3 B4 B6 
0cfd6     BA BE C2 C8 | 	byte	$d7, $d1, $cb, $c6, $c0, $bc, $b9, $b5, $b4, $b3, $b4, $b6, $ba, $be, $c2, $c8
0cfda     CE D3 D8 DC 
0cfde     DF E1 E1 E1 
0cfe2     E1 E0 DE DD 
0cfe6     DA D7 D3 D1 | 	byte	$ce, $d3, $d8, $dc, $df, $e1, $e1, $e1, $e1, $e0, $de, $dd, $da, $d7, $d3, $d1
0cfea     CE CC CB CB 
0cfee     CC CD CE CF 
0cff2     CF CF CE CD 
0cff6     CC CA C7 C6 | 	byte	$ce, $cc, $cb, $cb, $cc, $cd, $ce, $cf, $cf, $cf, $ce, $cd, $cc, $ca, $c7, $c6
0cffa     C4 C1 C1 C4 
0cffe     C9 D1 DD EC 
0d002     FC 0C 1B 29 
0d006     33 3B 41 46 | 	byte	$c4, $c1, $c1, $c4, $c9, $d1, $dd, $ec, $fc, $0c, $1b, $29, $33, $3b, $41, $46
0d00a     49 4B 4C 4C 
0d00e     4B 4A 48 47 
0d012     44 42 40 3E 
0d016     3E 3D 3C 3A | 	byte	$49, $4b, $4c, $4c, $4b, $4a, $48, $47, $44, $42, $40, $3e, $3e, $3d, $3c, $3a
0d01a     37 35 33 31 
0d01e     2F 2E 2C 2B 
0d022     2A 2A 29 28 
0d026     29 2A 2C 2D | 	byte	$37, $35, $33, $31, $2f, $2e, $2c, $2b, $2a, $2a, $29, $28, $29, $2a, $2c, $2d
0d02a     30 31 33 35 
0d02e     36 38 39 39 
0d032     39 39 37 34 
0d036     30 2B 26 21 | 	byte	$30, $31, $33, $35, $36, $38, $39, $39, $39, $39, $37, $34, $30, $2b, $26, $21
0d03a     1A 14 0F 08 
0d03e     02 FC F7 F3 
0d042     F0 ED EB E8 
0d046     E6 E2 DD D9 | 	byte	$1a, $14, $0f, $08, $02, $fc, $f7, $f3, $f0, $ed, $eb, $e8, $e6, $e2, $dd, $d9
0d04a     D3 CD C7 C3 
0d04e     BF BB B9 B7 
0d052     B7 B8 BA BD 
0d056     C0 C5 CA D0 | 	byte	$d3, $cd, $c7, $c3, $bf, $bb, $b9, $b7, $b7, $b8, $ba, $bd, $c0, $c5, $ca, $d0
0d05a     D5 D9 DD E0 
0d05e     E1 E1 E1 E1 
0d062     E1 DF DD DA 
0d066     D7 D5 D1 CF | 	byte	$d5, $d9, $dd, $e0, $e1, $e1, $e1, $e1, $e1, $df, $dd, $da, $d7, $d5, $d1, $cf
0d06a     CD CC CC CD 
0d06e     CD CF CF D0 
0d072     D0 CF CE CC 
0d076     CA C8 C6 C5 | 	byte	$cd, $cc, $cc, $cd, $cd, $cf, $cf, $d0, $d0, $cf, $ce, $cc, $ca, $c8, $c6, $c5
0d07a     C4 C5 C9 D0 
0d07e     DA E8 F5 05 
0d082     14 22 2D 37 
0d086     3E 42 45 47 | 	byte	$c4, $c5, $c9, $d0, $da, $e8, $f5, $05, $14, $22, $2d, $37, $3e, $42, $45, $47
0d08a     49 49 48 47 
0d08e     46 44 42 40 
0d092     3D 3B 3B 3A 
0d096     3A 38 36 34 | 	byte	$49, $49, $48, $47, $46, $44, $42, $40, $3d, $3b, $3b, $3a, $3a, $38, $36, $34
0d09a     32 31 2F 2D 
0d09e     2C 2B 2A 29 
0d0a2     27 26 25 26 
0d0a6     26 28 2A 2C | 	byte	$32, $31, $2f, $2d, $2c, $2b, $2a, $29, $27, $26, $25, $26, $26, $28, $2a, $2c
0d0aa     2E 30 32 34 
0d0ae     35 36 37 37 
0d0b2     36 34 31 2D 
0d0b6     28 23 1D 17 | 	byte	$2e, $30, $32, $34, $35, $36, $37, $37, $36, $34, $31, $2d, $28, $23, $1d, $17
0d0ba     11 0B 05 00 
0d0be     FA F6 F2 EF 
0d0c2     ED EA E7 E4 
0d0c6     E0 DC D7 D2 | 	byte	$11, $0b, $05, $00, $fa, $f6, $f2, $ef, $ed, $ea, $e7, $e4, $e0, $dc, $d7, $d2
0d0ca     CC C7 C3 BF 
0d0ce     BC BA B9 B9 
0d0d2     BA BC BF C2 
0d0d6     C7 CB D1 D6 | 	byte	$cc, $c7, $c3, $bf, $bc, $ba, $b9, $b9, $ba, $bc, $bf, $c2, $c7, $cb, $d1, $d6
0d0da     D9 DC DE E0 
0d0de     E0 E0 E0 DF 
0d0e2     DD DB D8 D6 
0d0e6     D3 D0 CE CC | 	byte	$d9, $dc, $de, $e0, $e0, $e0, $e0, $df, $dd, $db, $d8, $d6, $d3, $d0, $ce, $cc
0d0ea     CC CC CD CD 
0d0ee     CE CF CF CF 
0d0f2     CD CC CB C9 
0d0f6     C8 C7 C5 C6 | 	byte	$cc, $cc, $cd, $cd, $ce, $cf, $cf, $cf, $cd, $cc, $cb, $c9, $c8, $c7, $c5, $c6
0d0fa     C9 CF D8 E3 
0d0fe     F0 FE 0D 1B 
0d102     27 32 39 3E 
0d106     42 44 46 46 | 	byte	$c9, $cf, $d8, $e3, $f0, $fe, $0d, $1b, $27, $32, $39, $3e, $42, $44, $46, $46
0d10a     46 46 45 43 
0d10e     41 40 3D 3B 
0d112     3A 3A 3A 3A 
0d116     38 36 35 33 | 	byte	$46, $46, $45, $43, $41, $40, $3d, $3b, $3a, $3a, $3a, $3a, $38, $36, $35, $33
0d11a     32 31 30 2F 
0d11e     2E 2D 2B 2A 
0d122     28 27 27 27 
0d126     29 2B 2D 2F | 	byte	$32, $31, $30, $2f, $2e, $2d, $2b, $2a, $28, $27, $27, $27, $29, $2b, $2d, $2f
0d12a     31 33 34 36 
0d12e     37 38 37 37 
0d132     34 31 2D 27 
0d136     22 1C 15 10 | 	byte	$31, $33, $34, $36, $37, $38, $37, $37, $34, $31, $2d, $27, $22, $1c, $15, $10
0d13a     0A 05 FF FA 
0d13e     F6 F3 F1 EE 
0d142     EB E8 E4 E0 
0d146     DB D7 D2 CD | 	byte	$0a, $05, $ff, $fa, $f6, $f3, $f1, $ee, $eb, $e8, $e4, $e0, $db, $d7, $d2, $cd
0d14a     C8 C4 C0 BD 
0d14e     BC BB BB BC 
0d152     BF C1 C5 C9 
0d156     CE D2 D7 DA | 	byte	$c8, $c4, $c0, $bd, $bc, $bb, $bb, $bc, $bf, $c1, $c5, $c9, $ce, $d2, $d7, $da
0d15a     DC DE DF DF 
0d15e     DF DF DE DC 
0d162     DA D8 D5 D3 
0d166     D1 CF CD CD | 	byte	$dc, $de, $df, $df, $df, $df, $de, $dc, $da, $d8, $d5, $d3, $d1, $cf, $cd, $cd
0d16a     CD CD CE CE 
0d16e     CE CE CD CC 
0d172     CB CA C9 C7 
0d176     C6 C6 C8 CC | 	byte	$cd, $cd, $ce, $ce, $ce, $ce, $cd, $cc, $cb, $ca, $c9, $c7, $c6, $c6, $c8, $cc
0d17a     D4 DD E9 F6 
0d17e     05 12 1F 2A 
0d182     32 38 3C 3F 
0d186     41 42 42 41 | 	byte	$d4, $dd, $e9, $f6, $05, $12, $1f, $2a, $32, $38, $3c, $3f, $41, $42, $42, $41
0d18a     40 40 3E 3C 
0d18e     3A 39 38 37 
0d192     37 38 36 35 
0d196     34 33 32 32 | 	byte	$40, $40, $3e, $3c, $3a, $39, $38, $37, $37, $38, $36, $35, $34, $33, $32, $32
0d19a     31 31 2F 2F 
0d19e     2D 2B 2A 27 
0d1a2     26 26 25 27 
0d1a6     29 2B 2D 2F | 	byte	$31, $31, $2f, $2f, $2d, $2b, $2a, $27, $26, $26, $25, $27, $29, $2b, $2d, $2f
0d1aa     31 32 34 35 
0d1ae     35 36 34 32 
0d1b2     2F 2B 26 1F 
0d1b6     19 14 0E 08 | 	byte	$31, $32, $34, $35, $35, $36, $34, $32, $2f, $2b, $26, $1f, $19, $14, $0e, $08
0d1ba     03 FE FA F6 
0d1be     F3 F0 EE EB 
0d1c2     E8 E3 DF DB 
0d1c6     D6 D1 CC C8 | 	byte	$03, $fe, $fa, $f6, $f3, $f0, $ee, $eb, $e8, $e3, $df, $db, $d6, $d1, $cc, $c8
0d1ca     C4 C1 BF BE 
0d1ce     BD BE C0 C2 
0d1d2     C5 C8 CC D0 
0d1d6     D4 D8 DB DC | 	byte	$c4, $c1, $bf, $be, $bd, $be, $c0, $c2, $c5, $c8, $cc, $d0, $d4, $d8, $db, $dc
0d1da     DD DE DE DE 
0d1de     DE DD DB DA 
0d1e2     D8 D6 D3 D1 
0d1e6     D0 CF CF CF | 	byte	$dd, $de, $de, $de, $de, $dd, $db, $da, $d8, $d6, $d3, $d1, $d0, $cf, $cf, $cf
0d1ea     CF D0 D0 D0 
0d1ee     CE CE CD CC 
0d1f2     CA C9 C8 C7 
0d1f6     C8 CB D1 DA | 	byte	$cf, $d0, $d0, $d0, $ce, $ce, $cd, $cc, $ca, $c9, $c8, $c7, $c8, $cb, $d1, $da
0d1fa     E5 F1 FE 0B 
0d1fe     18 23 2D 34 
0d202     39 3C 3E 3F 
0d206     3F 3F 3E 3D | 	byte	$e5, $f1, $fe, $0b, $18, $23, $2d, $34, $39, $3c, $3e, $3f, $3f, $3f, $3e, $3d
0d20a     3C 3B 3A 38 
0d20e     37 37 36 37 
0d212     37 35 34 33 
0d216     32 32 32 33 | 	byte	$3c, $3b, $3a, $38, $37, $37, $36, $37, $37, $35, $34, $33, $32, $32, $32, $33
0d21a     32 31 30 2F 
0d21e     2D 2A 28 26 
0d222     25 25 27 28 
0d226     2A 2C 2E 2F | 	byte	$32, $31, $30, $2f, $2d, $2a, $28, $26, $25, $25, $27, $28, $2a, $2c, $2e, $2f
0d22a     31 32 33 34 
0d22e     34 33 30 2C 
0d232     28 23 1D 17 
0d236     12 0C 06 01 | 	byte	$31, $32, $33, $34, $34, $33, $30, $2c, $28, $23, $1d, $17, $12, $0c, $06, $01
0d23a     FD F9 F6 F3 
0d23e     F1 EE EB E7 
0d242     E3 DF DA D5 
0d246     D1 CD C8 C5 | 	byte	$fd, $f9, $f6, $f3, $f1, $ee, $eb, $e7, $e3, $df, $da, $d5, $d1, $cd, $c8, $c5
0d24a     C2 C1 C0 C0 
0d24e     C1 C2 C5 C7 
0d252     CB CF D2 D5 
0d256     D8 DA DB DC | 	byte	$c2, $c1, $c0, $c0, $c1, $c2, $c5, $c7, $cb, $cf, $d2, $d5, $d8, $da, $db, $dc
0d25a     DD DD DD DC 
0d25e     DB DA D8 D6 
0d262     D4 D3 D1 CF 
0d266     CF CF CF D0 | 	byte	$dd, $dd, $dd, $dc, $db, $da, $d8, $d6, $d4, $d3, $d1, $cf, $cf, $cf, $cf, $d0
0d26a     D0 D0 CF CE 
0d26e     CE CC CA CA 
0d272     C9 C8 C8 CA 
0d276     CF D7 E0 EC | 	byte	$d0, $d0, $cf, $ce, $ce, $cc, $ca, $ca, $c9, $c8, $c8, $ca, $cf, $d7, $e0, $ec
0d27a     F7 04 11 1C 
0d27e     27 2F 35 39 
0d282     3B 3C 3D 3D 
0d286     3C 3B 3A 39 | 	byte	$f7, $04, $11, $1c, $27, $2f, $35, $39, $3b, $3c, $3d, $3d, $3c, $3b, $3a, $39
0d28a     38 36 35 35 
0d28e     34 34 34 34 
0d292     32 32 31 32 
0d296     32 33 33 33 | 	byte	$38, $36, $35, $35, $34, $34, $34, $34, $32, $32, $31, $32, $32, $33, $33, $33
0d29a     33 31 30 2E 
0d29e     2B 29 27 26 
0d2a2     26 26 28 2A 
0d2a6     2B 2D 2E 30 | 	byte	$33, $31, $30, $2e, $2b, $29, $27, $26, $26, $26, $28, $2a, $2b, $2d, $2e, $30
0d2aa     31 33 33 32 
0d2ae     30 2E 2A 26 
0d2b2     21 1B 15 0F 
0d2b6     0A 04 00 FB | 	byte	$31, $33, $33, $32, $30, $2e, $2a, $26, $21, $1b, $15, $0f, $0a, $04, $00, $fb
0d2ba     F8 F5 F2 EF 
0d2be     ED E9 E5 E2 
0d2c2     DE D9 D5 D0 
0d2c6     CC C8 C6 C4 | 	byte	$f8, $f5, $f2, $ef, $ed, $e9, $e5, $e2, $de, $d9, $d5, $d0, $cc, $c8, $c6, $c4
0d2ca     C2 C2 C2 C3 
0d2ce     C6 C8 CB CE 
0d2d2     D1 D5 D7 D9 
0d2d6     DA DB DC DC | 	byte	$c2, $c2, $c2, $c3, $c6, $c8, $cb, $ce, $d1, $d5, $d7, $d9, $da, $db, $dc, $dc
0d2da     DC DB DA DA 
0d2de     D9 D7 D6 D4 
0d2e2     D3 D2 D1 D1 
0d2e6     D1 D1 D1 D1 | 	byte	$dc, $db, $da, $da, $d9, $d7, $d6, $d4, $d3, $d2, $d1, $d1, $d1, $d1, $d1, $d1
0d2ea     D1 CF CE CE 
0d2ee     CC CA C9 C9 
0d2f2     C8 C9 CD D3 
0d2f6     DC E6 F2 FE | 	byte	$d1, $cf, $ce, $ce, $cc, $ca, $c9, $c9, $c8, $c9, $cd, $d3, $dc, $e6, $f2, $fe
0d2fa     0A 16 21 2A 
0d2fe     31 35 37 39 
0d302     3A 3A 39 38 
0d306     37 36 35 33 | 	byte	$0a, $16, $21, $2a, $31, $35, $37, $39, $3a, $3a, $39, $38, $37, $36, $35, $33
0d30a     33 32 31 31 
0d30e     32 31 32 31 
0d312     30 30 31 32 
0d316     33 34 34 34 | 	byte	$33, $32, $31, $31, $32, $31, $32, $31, $30, $30, $31, $32, $33, $34, $34, $34
0d31a     33 32 2F 2D 
0d31e     2A 29 27 27 
0d322     27 28 29 2B 
0d326     2C 2E 2F 31 | 	byte	$33, $32, $2f, $2d, $2a, $29, $27, $27, $27, $28, $29, $2b, $2c, $2e, $2f, $31
0d32a     32 31 31 2F 
0d32e     2C 28 23 1E 
0d332     19 13 0D 08 
0d336     03 FF FB F8 | 	byte	$32, $31, $31, $2f, $2c, $28, $23, $1e, $19, $13, $0d, $08, $03, $ff, $fb, $f8
0d33a     F5 F2 EF EC 
0d33e     E9 E5 E1 DE 
0d342     DA D5 D1 CC 
0d346     C9 C7 C5 C4 | 	byte	$f5, $f2, $ef, $ec, $e9, $e5, $e1, $de, $da, $d5, $d1, $cc, $c9, $c7, $c5, $c4
0d34a     C4 C5 C6 C8 
0d34e     CB CE D1 D4 
0d352     D6 D9 DA DB 
0d356     DA DB DB DB | 	byte	$c4, $c5, $c6, $c8, $cb, $ce, $d1, $d4, $d6, $d9, $da, $db, $da, $db, $db, $db
0d35a     DA DA D9 D7 
0d35e     D7 D6 D5 D4 
0d362     D3 D3 D3 D3 
0d366     D2 D2 D2 D1 | 	byte	$da, $da, $d9, $d7, $d7, $d6, $d5, $d4, $d3, $d3, $d3, $d3, $d2, $d2, $d2, $d1
0d36a     D0 CE CD CC 
0d36e     CA C9 C8 C8 
0d372     CB D0 D7 E1 
0d376     EC F7 04 0F | 	byte	$d0, $ce, $cd, $cc, $ca, $c9, $c8, $c8, $cb, $d0, $d7, $e1, $ec, $f7, $04, $0f
0d37a     1B 24 2C 32 
0d37e     35 37 38 38 
0d382     37 37 36 35 
0d386     34 32 31 30 | 	byte	$1b, $24, $2c, $32, $35, $37, $38, $38, $37, $37, $36, $35, $34, $32, $31, $30
0d38a     2F 2F 2F 2F 
0d38e     2F 2F       | 	byte	$2f[6]
0d390     2E 2E 2F 30 
0d394     31 33 34 34 
0d398     35 34 32 30 
0d39c     2D 2B 29 27 | 	byte	$2e, $2e, $2f, $30, $31, $33, $34, $34, $35, $34, $32, $30, $2d, $2b, $29, $27
0d3a0     26 26 27 28 
0d3a4     29 2A 2B 2D 
0d3a8     2E 2F 2F 2E 
0d3ac     2C 29 25 20 | 	byte	$26, $26, $27, $28, $29, $2a, $2b, $2d, $2e, $2f, $2f, $2e, $2c, $29, $25, $20
0d3b0     1B 16 10 0B 
0d3b4     06 02 FD FA 
0d3b8     F7 F4 F2 EF 
0d3bc     EC E8 E5 E1 | 	byte	$1b, $16, $10, $0b, $06, $02, $fd, $fa, $f7, $f4, $f2, $ef, $ec, $e8, $e5, $e1
0d3c0     DD D9 D5 D1 
0d3c4     CD CA C8 C7 
0d3c8     C6 C6 C7 C9 
0d3cc     CA CD D0 D2 | 	byte	$dd, $d9, $d5, $d1, $cd, $ca, $c8, $c7, $c6, $c6, $c7, $c9, $ca, $cd, $d0, $d2
0d3d0     D5 D7 D9 DA 
0d3d4     DA DB DA DA 
0d3d8     DA D9 D9 D7 
0d3dc     D7 D6 D5 D5 | 	byte	$d5, $d7, $d9, $da, $da, $db, $da, $da, $da, $d9, $d9, $d7, $d7, $d6, $d5, $d5
0d3e0     D4 D4 D4 D4 
0d3e4     D4 D4       | 	byte	$d4[6]
0d3e6     D2 D2 D1 D0 
0d3ea     CE CD CC CA 
0d3ee     CA C9 CA CE 
0d3f2     D4 DD E7 F1 | 	byte	$d2, $d2, $d1, $d0, $ce, $cd, $cc, $ca, $ca, $c9, $ca, $ce, $d4, $dd, $e7, $f1
0d3f6     FD 09 15 1F 
0d3fa     28 2E 32 35 
0d3fe     36 37 36 35 
0d402     35 34 32 31 | 	byte	$fd, $09, $15, $1f, $28, $2e, $32, $35, $36, $37, $36, $35, $35, $34, $32, $31
0d406     2F 2E 2D 2D 
0d40a     2D 2D 2D 2D 
0d40e     2C 2C 2D 2E 
0d412     2F 31 33 34 | 	byte	$2f, $2e, $2d, $2d, $2d, $2d, $2d, $2d, $2c, $2c, $2d, $2e, $2f, $31, $33, $34
0d416     36 36 36 34 
0d41a     32 30 2D 2B 
0d41e     29 28 27 27 
0d422     28 29 2A 2B | 	byte	$36, $36, $36, $34, $32, $30, $2d, $2b, $29, $28, $27, $27, $28, $29, $2a, $2b
0d426     2C 2D 2E 2D 
0d42a     2C 2A 27 23 
0d42e     1F 19 14 0F 
0d432     0A 05 01 FD | 	byte	$2c, $2d, $2e, $2d, $2c, $2a, $27, $23, $1f, $19, $14, $0f, $0a, $05, $01, $fd
0d436     FA F7 F4 F1 
0d43a     EE EB E8 E5 
0d43e     E1 DD D9 D5 
0d442     D1 CE CC C9 | 	byte	$fa, $f7, $f4, $f1, $ee, $eb, $e8, $e5, $e1, $dd, $d9, $d5, $d1, $ce, $cc, $c9
0d446     C9 C8 C9 CA 
0d44a     CB CD D0 D2 
0d44e     D5 D7 D8 DA 
0d452     DA DA DA D9 | 	byte	$c9, $c8, $c9, $ca, $cb, $cd, $d0, $d2, $d5, $d7, $d8, $da, $da, $da, $da, $d9
0d456     D9 D8 D8 D7 
0d45a     D6 D6 D5 D5 
0d45e     D5 D4 D4 D4 
0d462     D5 D4 D4 D3 | 	byte	$d9, $d8, $d8, $d7, $d6, $d6, $d5, $d5, $d5, $d4, $d4, $d4, $d5, $d4, $d4, $d3
0d466     D2 D1 D0 CE 
0d46a     CD CC CB CB 
0d46e     CC CF D4 DC 
0d472     E4 EF F9 04 | 	byte	$d2, $d1, $d0, $ce, $cd, $cc, $cb, $cb, $cc, $cf, $d4, $dc, $e4, $ef, $f9, $04
0d476     0F 18 21 27 
0d47a     2C 2E 2F 2F 
0d47e     2E 2D 2B 29 
0d482     28 26 24 22 | 	byte	$0f, $18, $21, $27, $2c, $2e, $2f, $2f, $2e, $2d, $2b, $29, $28, $26, $24, $22
0d486     21 20 1F 1F 
0d48a     20 20 20 21 
0d48e     21 23 25 27 
0d492     29 2B 2D 2E | 	byte	$21, $20, $1f, $1f, $20, $20, $20, $21, $21, $23, $25, $27, $29, $2b, $2d, $2e
0d496     2E 2E 2C 2A 
0d49a     26 24 21 1F 
0d49e     1E 1C 1C 1B 
0d4a2     1C 1D 1E 1F | 	byte	$2e, $2e, $2c, $2a, $26, $24, $21, $1f, $1e, $1c, $1c, $1b, $1c, $1d, $1e, $1f
0d4a6     20 20 20 1E 
0d4aa     1C 19 16 12 
0d4ae     0E 09 05 01 
0d4b2     FD FA F7 F5 | 	byte	$20, $20, $20, $1e, $1c, $19, $16, $12, $0e, $09, $05, $01, $fd, $fa, $f7, $f5
0d4b6     F3 F2 F0 EE 
0d4ba     ED EA E8 E6 
0d4be     E3 E1 DE DC 
0d4c2     DA D9 D9 DA | 	byte	$f3, $f2, $f0, $ee, $ed, $ea, $e8, $e6, $e3, $e1, $de, $dc, $da, $d9, $d9, $da
0d4c6     DB DE E0 E2 
0d4ca     E6 E9 EE F1 
0d4ce     F4 F7 F9 FB 
0d4d2     FC FD FE FF | 	byte	$db, $de, $e0, $e2, $e6, $e9, $ee, $f1, $f4, $f7, $f9, $fb, $fc, $fd, $fe, $ff
0d4d6     00 00 00 00 
0d4da     01 01 01 02 
0d4de     02 03 03 03 
0d4e2     03 02 01 FF | 	byte	$00, $00, $00, $00, $01, $01, $01, $02, $02, $03, $03, $03, $03, $02, $01, $ff
0d4e6     FD FB F8 F5 
0d4ea     F2 EF EC EA 
0d4ee     E9 E9 E9 E9 
0d4f2     EA EC EE EF | 	byte	$fd, $fb, $f8, $f5, $f2, $ef, $ec, $ea, $e9, $e9, $e9, $e9, $ea, $ec, $ee, $ef
0d4f6     F1 F3 F3 F4 
0d4fa     F4 F3 F3 F2 
0d4fe     F1 F0 EF EF 
0d502     EE EE EE EE | 	byte	$f1, $f3, $f3, $f4, $f4, $f3, $f3, $f2, $f1, $f0, $ef, $ef, $ee, $ee, $ee, $ee
0d506     F0 F2 F5 F7 
0d50a     FA FE 02 06 
0d50e     0B 0E 12 16 
0d512     18 1B 1C 1D | 	byte	$f0, $f2, $f5, $f7, $fa, $fe, $02, $06, $0b, $0e, $12, $16, $18, $1b, $1c, $1d
0d516     1D 1B 1A 17 
0d51a     16 14 12 11 
0d51e     11 11 11 13 
0d522     14 16 17 19 | 	byte	$1d, $1b, $1a, $17, $16, $14, $12, $11, $11, $11, $11, $13, $14, $16, $17, $19
0d526     19 1A 19 18 
0d52a     16 14 11 0D 
0d52e     0A 06 03 01 
0d532     FE FC FB F9 | 	byte	$19, $1a, $19, $18, $16, $14, $11, $0d, $0a, $06, $03, $01, $fe, $fc, $fb, $f9
0d536     F7 F5 F2 EF 
0d53a     ED EA E7 E5 
0d53e     E3 E1 E1 E1 
0d542     E2 E3 E6 E9 | 	byte	$f7, $f5, $f2, $ef, $ed, $ea, $e7, $e5, $e3, $e1, $e1, $e1, $e2, $e3, $e6, $e9
0d546     ED F1 F6 FA 
0d54a     FF 04 09 0C 
0d54e     10 13 15 17 
0d552     19 1B 1C 1D | 	byte	$ed, $f1, $f6, $fa, $ff, $04, $09, $0c, $10, $13, $15, $17, $19, $1b, $1c, $1d
0d556     1D 1E 1E 1F 
0d55a     1F 20 20 20 
0d55e     21 21 21 20 
0d562     1E 1D 1A 18 | 	byte	$1d, $1e, $1e, $1f, $1f, $20, $20, $20, $21, $21, $21, $20, $1e, $1d, $1a, $18
0d566     14 11 0D 09 
0d56a     06 02 FF FC 
0d56e     F9 F6 F4 F2 
0d572     F1 EF EF ED | 	byte	$14, $11, $0d, $09, $06, $02, $ff, $fc, $f9, $f6, $f4, $f2, $f1, $ef, $ef, $ed
0d576     EC EC EA E9 
0d57a     E8 E7 E5 E4 
0d57e     E3 E2 E1 E0 
0d582     E0 E0 E2 E3 | 	byte	$ec, $ec, $ea, $e9, $e8, $e7, $e5, $e4, $e3, $e2, $e1, $e0, $e0, $e0, $e2, $e3
0d586     E5 E8 EB EF 
0d58a     F3 F8 FC 01 
0d58e     05 09 0C 0F 
0d592     11 12 14 14 | 	byte	$e5, $e8, $eb, $ef, $f3, $f8, $fc, $01, $05, $09, $0c, $0f, $11, $12, $14, $14
0d596     15 15 14 14 
0d59a     14 14 14 14 
0d59e     15 15 17 17 
0d5a2     18 19 18 18 | 	byte	$15, $15, $14, $14, $14, $14, $14, $14, $15, $15, $17, $17, $18, $19, $18, $18
0d5a6     17 16 13 11 
0d5aa     0D 09 05 01 
0d5ae     FD FA F6 F4 
0d5b2     F1 EE ED EB | 	byte	$17, $16, $13, $11, $0d, $09, $05, $01, $fd, $fa, $f6, $f4, $f1, $ee, $ed, $eb
0d5b6     E9 E8 E6 E5 
0d5ba     E4 E3 E2 E2 
0d5be     E2 E1 E2 E4 
0d5c2     E5 E8 EA ED | 	byte	$e9, $e8, $e6, $e5, $e4, $e3, $e2, $e2, $e2, $e1, $e2, $e4, $e5, $e8, $ea, $ed
0d5c6     F1 F4 F8 FB 
0d5ca     FF 01 04 06 
0d5ce     08 09 0A 0B 
0d5d2     0C 0D 0E 0E | 	byte	$f1, $f4, $f8, $fb, $ff, $01, $04, $06, $08, $09, $0a, $0b, $0c, $0d, $0e, $0e
0d5d6     0F 11 13 14 
0d5da     15 17 19 1A 
0d5de     1A 1B 1B 1A 
0d5e2     18 17 14 12 | 	byte	$0f, $11, $13, $14, $15, $17, $19, $1a, $1a, $1b, $1b, $1a, $18, $17, $14, $12
0d5e6     10 0E 0B 08 
0d5ea     05 03 01 FE 
0d5ee     FC FA F8 F6 
0d5f2     F4 F3 F2 F1 | 	byte	$10, $0e, $0b, $08, $05, $03, $01, $fe, $fc, $fa, $f8, $f6, $f4, $f3, $f2, $f1
0d5f6     EF EE ED EC 
0d5fa     EB EB EA EA 
0d5fe     E9 E9 E8 E9 
0d602     E9 EA EC EE | 	byte	$ef, $ee, $ed, $ec, $eb, $eb, $ea, $ea, $e9, $e9, $e8, $e9, $e9, $ea, $ec, $ee
0d606     F0 F3 F6 FB 
0d60a     FF 02 06 09 
0d60e     0C 0F 11 12 
0d612     13 14 15 15 | 	byte	$f0, $f3, $f6, $fb, $ff, $02, $06, $09, $0c, $0f, $11, $12, $13, $14, $15, $15
0d616     15 15 15 15 
0d61a     16 16 16 17 
0d61e     17 18 18 18 
0d622     18 18 16 14 | 	byte	$15, $15, $15, $15, $16, $16, $16, $17, $17, $18, $18, $18, $18, $18, $16, $14
0d626     12 10 0D 09 
0d62a     07 03 00 FD 
0d62e     FB F8 F6 F4 
0d632     F2 F0 EE ED | 	byte	$12, $10, $0d, $09, $07, $03, $00, $fd, $fb, $f8, $f6, $f4, $f2, $f0, $ee, $ed
0d636     EB EA E9 E8 
0d63a     E7 E6 E5 E5 
0d63e     E5 E5 E7 E8 
0d642     EA EC EF F1 | 	byte	$eb, $ea, $e9, $e8, $e7, $e6, $e5, $e5, $e5, $e5, $e7, $e8, $ea, $ec, $ef, $f1
0d646     F4 F6 F9 FC 
0d64a     FE 00 01 03 
0d64e     03 04 05 06 
0d652     07 08 09 0B | 	byte	$f4, $f6, $f9, $fc, $fe, $00, $01, $03, $03, $04, $05, $06, $07, $08, $09, $0b
0d656     0C 0E 10 11 
0d65a     13 14 15 15 
0d65e     15 15 14 13 
0d662     12 10 0E 0C | 	byte	$0c, $0e, $10, $11, $13, $14, $15, $15, $15, $15, $14, $13, $12, $10, $0e, $0c
0d666     09 06 04 02 
0d66a     FF FD FB F9 
0d66e     F7 F6 F4 F3 
0d672     F2 F2 F1 F1 | 	byte	$09, $06, $04, $02, $ff, $fd, $fb, $f9, $f7, $f6, $f4, $f3, $f2, $f2, $f1, $f1
0d676     F0 EF EF EF 
0d67a     EE EE EE EE 
0d67e     EE EE EE EE 
0d682     EF F0 F2 F4 | 	byte	$f0, $ef, $ef, $ef, $ee, $ee, $ee, $ee, $ee, $ee, $ee, $ee, $ef, $f0, $f2, $f4
0d686     F5 F7 FA FC 
0d68a     FF 01 03 05 
0d68e     06 07 08 09 
0d692     0A 0A 0A 0A | 	byte	$f5, $f7, $fa, $fc, $ff, $01, $03, $05, $06, $07, $08, $09, $0a, $0a, $0a, $0a
0d696     0B 0C 0C 0D 
0d69a     0E 0F 11 11 
0d69e     12 13 12 12 
0d6a2     11 10 0E 0C | 	byte	$0b, $0c, $0c, $0d, $0e, $0f, $11, $11, $12, $13, $12, $12, $11, $10, $0e, $0c
0d6a6     0A 08 06 04 
0d6aa     01 00 FE FD 
0d6ae     FB FA F9 F7 
0d6b2     F6 F5 F4 F3 | 	byte	$0a, $08, $06, $04, $01, $00, $fe, $fd, $fb, $fa, $f9, $f7, $f6, $f5, $f4, $f3
0d6b6     F2 F0 EF ED 
0d6ba     ED EC EB EC 
0d6be     EC ED EE EF 
0d6c2     F1 F3 F5 F7 | 	byte	$f2, $f0, $ef, $ed, $ed, $ec, $eb, $ec, $ec, $ed, $ee, $ef, $f1, $f3, $f5, $f7
0d6c6     F9 FB FD FF 
0d6ca     00 01 02 04 
0d6ce     05 06 07 09 
0d6d2     0A 0C 0D 0F | 	byte	$f9, $fb, $fd, $ff, $00, $01, $02, $04, $05, $06, $07, $09, $0a, $0c, $0d, $0f
0d6d6     10 12 13 14 
0d6da     15 16 17 17 
0d6de     16 16 14 13 
0d6e2     11 10 0D 0B | 	byte	$10, $12, $13, $14, $15, $16, $17, $17, $16, $16, $14, $13, $11, $10, $0d, $0b
0d6e6     08 06 04 01 
0d6ea     FF FD FC FA 
0d6ee     F9 F7 F6 F5 
0d6f2     F5 F4 F3 F2 | 	byte	$08, $06, $04, $01, $ff, $fd, $fc, $fa, $f9, $f7, $f6, $f5, $f5, $f4, $f3, $f2
0d6f6     F1 F1 EF EF 
0d6fa     EE ED EC EB 
0d6fe     EB EB EB EC 
0d702     ED EE EF F1 | 	byte	$f1, $f1, $ef, $ef, $ee, $ed, $ec, $eb, $eb, $eb, $eb, $ec, $ed, $ee, $ef, $f1
0d706     F3 F5 F6 F8 
0d70a     FA FC FD FF 
0d70e     00 02 03 05 
0d712     06 07 08 0A | 	byte	$f3, $f5, $f6, $f8, $fa, $fc, $fd, $ff, $00, $02, $03, $05, $06, $07, $08, $0a
0d716     0B 0D 0E 10 
0d71a     11 12 13 13 
0d71e     13 13 12 11 
0d722     10 0E 0D 0B | 	byte	$0b, $0d, $0e, $10, $11, $12, $13, $13, $13, $13, $12, $11, $10, $0e, $0d, $0b
0d726     09 08 06 05 
0d72a     03 03 02 01 
0d72e     00 FE FD FC 
0d732     FB FA F8 F6 | 	byte	$09, $08, $06, $05, $03, $03, $02, $01, $00, $fe, $fd, $fc, $fb, $fa, $f8, $f6
0d736     F5 F3 F2 F0 
0d73a     EF EE ED ED 
0d73e     ED ED EE EF 
0d742     EF F0 F2 F3 | 	byte	$f5, $f3, $f2, $f0, $ef, $ee, $ed, $ed, $ed, $ed, $ee, $ef, $ef, $f0, $f2, $f3
0d746     F5 F6 F7 F8 
0d74a     FA FB FC FD 
0d74e     FE FF 01 02 
0d752     03 05 06 08 | 	byte	$f5, $f6, $f7, $f8, $fa, $fb, $fc, $fd, $fe, $ff, $01, $02, $03, $05, $06, $08
0d756     0A 0C 0E 0F 
0d75a     10 12 13 13 
0d75e     13 13 12 12 
0d762     10 0F 0D 0C | 	byte	$0a, $0c, $0e, $0f, $10, $12, $13, $13, $13, $13, $12, $12, $10, $0f, $0d, $0c
0d766     0A 08 07 06 
0d76a     04 04 02 01 
0d76e     00 00 FF FE 
0d772     FD FC FA F9 | 	byte	$0a, $08, $07, $06, $04, $04, $02, $01, $00, $00, $ff, $fe, $fd, $fc, $fa, $f9
0d776     F8 F6 F5 F3 
0d77a     F2 F1 F0 F0 
0d77e     F0 F0 F1 F1 
0d782     F1 F2 F4 F4 | 	byte	$f8, $f6, $f5, $f3, $f2, $f1, $f0, $f0, $f0, $f0, $f1, $f1, $f1, $f2, $f4, $f4
0d786     F6 F7 F8 FA 
0d78a     FB FC FD FF 
0d78e     01 02 04 05 
0d792     07 08 0A 0B | 	byte	$f6, $f7, $f8, $fa, $fb, $fc, $fd, $ff, $01, $02, $04, $05, $07, $08, $0a, $0b
0d796     0C 0D 0E 0F 
0d79a     10 10 10 10 
0d79e     0F 0E 0D 0B 
0d7a2     0A 09 08 07 | 	byte	$0c, $0d, $0e, $0f, $10, $10, $10, $10, $0f, $0e, $0d, $0b, $0a, $09, $08, $07
0d7a6     06 05 04 03 
0d7aa     02 02 02 01 
0d7ae     00 FF FE FE 
0d7b2     FC FB F9 F8 | 	byte	$06, $05, $04, $03, $02, $02, $02, $01, $00, $ff, $fe, $fe, $fc, $fb, $f9, $f8
0d7b6     F6 F5 F3 F2 
0d7ba     F1 F0 F0 F0 
0d7be     F0 F0 F1 F1 
0d7c2     F2 F3 F5 F6 | 	byte	$f6, $f5, $f3, $f2, $f1, $f0, $f0, $f0, $f0, $f0, $f1, $f1, $f2, $f3, $f5, $f6
0d7c6     F7 F9 FA FB 
0d7ca     FC FD FD FE 
0d7ce     FF FF 00 01 
0d7d2     02 03 04 06 | 	byte	$f7, $f9, $fa, $fb, $fc, $fd, $fd, $fe, $ff, $ff, $00, $01, $02, $03, $04, $06
0d7d6     07 09 0A 0B 
0d7da     0D 0E 0E 0E 
0d7de     0E 0E 0D 0D 
0d7e2     0B 0A 09 08 | 	byte	$07, $09, $0a, $0b, $0d, $0e, $0e, $0e, $0e, $0e, $0d, $0d, $0b, $0a, $09, $08
0d7e6     07 06 05 05 
0d7ea     04 03 03 02 
0d7ee     02 01 FF FE 
0d7f2     FD FC FA F9 | 	byte	$07, $06, $05, $05, $04, $03, $03, $02, $02, $01, $ff, $fe, $fd, $fc, $fa, $f9
0d7f6     F8 F6 F5 F4 
0d7fa     F3 F3 F3 F2 
0d7fe     F2 F3 F3 F3 
0d802     F4 F5 F5 F6 | 	byte	$f8, $f6, $f5, $f4, $f3, $f3, $f3, $f2, $f2, $f3, $f3, $f3, $f4, $f5, $f5, $f6
0d806     F6 F8 F8 F9 
0d80a     FA FB FD FE 
0d80e     FF 00 02 03 
0d812     04 05 07 08 | 	byte	$f6, $f8, $f8, $f9, $fa, $fb, $fd, $fe, $ff, $00, $02, $03, $04, $05, $07, $08
0d816     09 0A 0B 0B 
0d81a     0B 0C 0C 0C 
0d81e     0B 0B 0B 0A 
0d822     0A 09 08 08 | 	byte	$09, $0a, $0b, $0b, $0b, $0c, $0c, $0c, $0b, $0b, $0b, $0a, $0a, $09, $08, $08
0d826     07 07 06 06 
0d82a     06 05 04 04 
0d82e     03 03 01 00 
0d832     FF FE FC FB | 	byte	$07, $07, $06, $06, $06, $05, $04, $04, $03, $03, $01, $00, $ff, $fe, $fc, $fb
0d836     F9 F8 F6 F5 
0d83a     F4 F3 F3 F3 
0d83e     F4 F4 F5 F6 
0d842     F7 F9 FA FB | 	byte	$f9, $f8, $f6, $f5, $f4, $f3, $f3, $f3, $f4, $f4, $f5, $f6, $f7, $f9, $fa, $fb
0d846     FC FC FD FE 
0d84a     FE FE FF FF 
0d84e     FF 00 00 01 
0d852     02 03 04 05 | 	byte	$fc, $fc, $fd, $fe, $fe, $fe, $ff, $ff, $ff, $00, $00, $01, $02, $03, $04, $05
0d856     06 07 09 0A 
0d85a     0A 0B 0B 0C 
0d85e     0B 0B 0A 0A 
0d862     09 08 07 07 | 	byte	$06, $07, $09, $0a, $0a, $0b, $0b, $0c, $0b, $0b, $0a, $0a, $09, $08, $07, $07
0d866     06 06 05 04 
0d86a     04 03 02 02 
0d86e     01 00 FE FE 
0d872     FD FC FA F9 | 	byte	$06, $06, $05, $04, $04, $03, $02, $02, $01, $00, $fe, $fe, $fd, $fc, $fa, $f9
0d876     F9 F7 F7 F6 
0d87a     F5 F5 F5 F5 
0d87e     F5 F5 F5 F5 
0d882     F5 F5 F6 F6 | 	byte	$f9, $f7, $f7, $f6, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f5, $f6, $f6
0d886     F6 F7 F8 F8 
0d88a     F9 FA FB FC 
0d88e     FD FE 00 01 
0d892     02 03 04 06 | 	byte	$f6, $f7, $f8, $f8, $f9, $fa, $fb, $fc, $fd, $fe, $00, $01, $02, $03, $04, $06
0d896     07 07 08 09 
0d89a     0A 0A 0A 0A 
0d89e     0A 0A 0A 0A 
0d8a2     0A 0A 09 09 | 	byte	$07, $07, $08, $09, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $0a, $09, $09
0d8a6     09 08 08 07 
0d8aa     06 06 05 05 
0d8ae     04 03 01 00 
0d8b2     FE FD FB F9 | 	byte	$09, $08, $08, $07, $06, $06, $05, $05, $04, $03, $01, $00, $fe, $fd, $fb, $f9
0d8b6     F8 F7 F6 F4 
0d8ba     F4 F3 F3 F3 
0d8be     F4 F5 F5 F6 
0d8c2     F7 F8 F8 F8 | 	byte	$f8, $f7, $f6, $f4, $f4, $f3, $f3, $f3, $f4, $f5, $f5, $f6, $f7, $f8, $f8, $f8
0d8c6     F9 FA FA FA 
0d8ca     FA FA FB FB 
0d8ce     FC FD FD FF 
0d8d2     00 01 02 04 | 	byte	$f9, $fa, $fa, $fa, $fa, $fa, $fb, $fb, $fc, $fd, $fd, $ff, $00, $01, $02, $04
0d8d6     05 06 08 09 
0d8da     0A 0A 0B 0B 
0d8de     0B 0B 0B 0B 
0d8e2     0B 0B 0A 0A | 	byte	$05, $06, $08, $09, $0a, $0a, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0b, $0a, $0a
0d8e6     09 09 08 07 
0d8ea     07 06 05 04 
0d8ee     03 03 01 00 
0d8f2     00 FE FE FD | 	byte	$09, $09, $08, $07, $07, $06, $05, $04, $03, $03, $01, $00, $00, $fe, $fe, $fd
0d8f6     FC FC FB FA 
0d8fa     FA FA F9 F9 
0d8fe     F9 F9 F8 F8 
0d902     F8 F8 F9 F8 | 	byte	$fc, $fc, $fb, $fa, $fa, $fa, $f9, $f9, $f9, $f9, $f8, $f8, $f8, $f8, $f9, $f8
0d906     F8 F9 F9 FA 
0d90a     FA FB FB FC 
0d90e     FD FE FF FF 
0d912     01 02 02 03 | 	byte	$f8, $f9, $f9, $fa, $fa, $fb, $fb, $fc, $fd, $fe, $ff, $ff, $01, $02, $02, $03
0d916     04 05 05 06 
0d91a     06 06 07 07 
0d91e     07 07 07 07 
0d922     07 07 07 07 | 	byte	$04, $05, $05, $06, $06, $06, $07, $07, $07, $07, $07, $07, $07, $07, $07, $07
0d926     07 07 06 06 
0d92a     06 05 05 04 
0d92e     03 02 02 00 
0d932     FF FE FD FC | 	byte	$07, $07, $06, $06, $06, $05, $05, $04, $03, $02, $02, $00, $ff, $fe, $fd, $fc
0d936     FB FA F9 F9 
0d93a     F8 F8 F8 F8 
0d93e     00 00 00 00 
0d942     04 06 04 FF | 	byte	$fb, $fa, $f9, $f9, $f8, $f8, $f8, $f8, $00, $00, $00, $00, $04, $06, $04, $ff
0d946     FF FD FD FF 
0d94a     FD FD 00 02 
0d94e     03 FE 01 01 
0d952     FD 03 03 FD | 	byte	$ff, $fd, $fd, $ff, $fd, $fd, $00, $02, $03, $fe, $01, $01, $fd, $03, $03, $fd
0d956     01 02 02 FD 
0d95a     FC 00 00 03 
0d95e     05 FA F6 00 
0d962     03 05 00 01 | 	byte	$01, $02, $02, $fd, $fc, $00, $00, $03, $05, $fa, $f6, $00, $03, $05, $00, $01
0d966     01 FB 00 01 
0d96a     FB FC 02 07 
0d96e     00 F9 FF FF 
0d972     FC 03 03 03 | 	byte	$01, $fb, $00, $01, $fb, $fc, $02, $07, $00, $f9, $ff, $ff, $fc, $03, $03, $03
0d976     02 01 00 FD 
0d97a     00 00 FF 03 
0d97e     01 F5 F6 03 
0d982     09 05 FB FF | 	byte	$02, $01, $00, $fd, $00, $00, $ff, $03, $01, $f5, $f6, $03, $09, $05, $fb, $ff
0d986     00 FB 00 03 
0d98a     00 FA 00 07 
0d98e     02 FF 00 F8 
0d992     FF 03 FF FF | 	byte	$00, $fb, $00, $03, $00, $fa, $00, $07, $02, $ff, $00, $f8, $ff, $03, $ff, $ff
0d996     02 05 FE F9 
0d99a     FF 03 03 03 
0d99e     01 FD FB 00 
0d9a2     09 03 FC FD | 	byte	$02, $05, $fe, $f9, $ff, $03, $03, $03, $01, $fd, $fb, $00, $09, $03, $fc, $fd
0d9a6     F9 00 02 FB 
0d9aa     F7 FE 06 01 
0d9ae     FD 00 03 00 
0d9b2     03 0A 09 07 | 	byte	$f9, $00, $02, $fb, $f7, $fe, $06, $01, $fd, $00, $03, $00, $03, $0a, $09, $07
0d9b6     FF 00 00 F9 
0d9ba     FB FD 00 00 
0d9be     F7 F5 FF 09 
0d9c2     FF F9 FE FF | 	byte	$ff, $00, $00, $f9, $fb, $fd, $00, $00, $f7, $f5, $ff, $09, $ff, $f9, $fe, $ff
0d9c6     00 00 08 0A 
0d9ca     03 00 08 0B 
0d9ce     01 FD F9 FD 
0d9d2     01 FF 00 FD | 	byte	$00, $00, $08, $0a, $03, $00, $08, $0b, $01, $fd, $f9, $fd, $01, $ff, $00, $fd
0d9d6     FD F8 F7 FE 
0d9da     03 01 FF 04 
0d9de     04 00 01 07 
0d9e2     0D 01 FB F7 | 	byte	$fd, $f8, $f7, $fe, $03, $01, $ff, $04, $04, $00, $01, $07, $0d, $01, $fb, $f7
0d9e6     FE 02 FF FB 
0d9ea     FB 01 FF FF 
0d9ee     00 00 01 00 
0d9f2     09 11 05 FB | 	byte	$fe, $02, $ff, $fb, $fb, $01, $ff, $ff, $00, $00, $01, $00, $09, $11, $05, $fb
0d9f6     FC 05 FD FA 
0d9fa     FB 02 05 FC 
0d9fe     F9 FC 00 00 
0da02     FB FD F9 FF | 	byte	$fc, $05, $fd, $fa, $fb, $02, $05, $fc, $f9, $fc, $00, $00, $fb, $fd, $f9, $ff
0da06     01 05 09 05 
0da0a     01 02 0C FF 
0da0e     F8 F7 FF 02 
0da12     02 00 05 00 | 	byte	$01, $05, $09, $05, $01, $02, $0c, $ff, $f8, $f7, $ff, $02, $02, $00, $05, $00
0da16     F9 FB FD 01 
0da1a     09 03 00 01 
0da1e     01 00 01 04 
0da22     00 F5 EF F9 | 	byte	$f9, $fb, $fd, $01, $09, $03, $00, $01, $01, $00, $01, $04, $00, $f5, $ef, $f9
0da26     FC F9 FA 01 
0da2a     00 FE 03 08 
0da2e     0C 0C 0B 07 
0da32     0F 14 03 FB | 	byte	$fc, $f9, $fa, $01, $00, $fe, $03, $08, $0c, $0c, $0b, $07, $0f, $14, $03, $fb
0da36     FB FA F3 F5 
0da3a     F7 FB FA F4 
0da3e     FB F8 EE FB 
0da42     00 00 06 07 | 	byte	$fb, $fa, $f3, $f5, $f7, $fb, $fa, $f4, $fb, $f8, $ee, $fb, $00, $00, $06, $07
0da46     09 11 17 0C 
0da4a     09 0B 0F FF 
0da4e     F2 F3 FB FC 
0da52     FD FF FA EC | 	byte	$09, $11, $17, $0c, $09, $0b, $0f, $ff, $f2, $f3, $fb, $fc, $fd, $ff, $fa, $ec
0da56     F5 F9 F8 03 
0da5a     07 07 07 0D 
0da5e     0B 06 0B 0B 
0da62     FA F3 F7 FD | 	byte	$f5, $f9, $f8, $03, $07, $07, $07, $0d, $0b, $06, $0b, $0b, $fa, $f3, $f7, $fd
0da66     FF F6 FA FC 
0da6a     F1 F9 05 04 
0da6e     07 0B 05 01 
0da72     0E 0E 01 05 | 	byte	$ff, $f6, $fa, $fc, $f1, $f9, $05, $04, $07, $0b, $05, $01, $0e, $0e, $01, $05
0da76     04 FA F4 FC 
0da7a     01 FF F6 FD 
0da7e     00 F4 EE F4 
0da82     F9 00 07 07 | 	byte	$04, $fa, $f4, $fc, $01, $ff, $f6, $fd, $00, $f4, $ee, $f4, $f9, $00, $07, $07
0da86     03 0C 11 05 
0da8a     00 05 03 FB 
0da8e     FB 00 02 FE 
0da92     05 06 F5 F2 | 	byte	$03, $0c, $11, $05, $00, $05, $03, $fb, $fb, $00, $02, $fe, $05, $06, $f5, $f2
0da96     FD 03 07 06 
0da9a     02 FB 01 0A 
0da9e     05 00 FF F7 
0daa2     EB E7 F1 FB | 	byte	$fd, $03, $07, $06, $02, $fb, $01, $0a, $05, $00, $ff, $f7, $eb, $e7, $f1, $fb
0daa6     FB 02 08 FD 
0daaa     FD 06 16 18 
0daae     12 14 0F 0F 
0dab2     0F 00 F8 FC | 	byte	$fb, $02, $08, $fd, $fd, $06, $16, $18, $12, $14, $0f, $0f, $0f, $00, $f8, $fc
0dab6     F4 E9 EB F3 
0daba     F3 EA EB F5 
0dabe     F3 F5 F3 04 
0dac2     0F 10 12 15 | 	byte	$f4, $e9, $eb, $f3, $f3, $ea, $eb, $f5, $f3, $f5, $f3, $04, $0f, $10, $12, $15
0dac6     18 1B 15 0D 
0daca     0F 06 F3 EF 
0dace     F2 F7 F1 F7 
0dad2     FB EC E9 E5 | 	byte	$18, $1b, $15, $0d, $0f, $06, $f3, $ef, $f2, $f7, $f1, $f7, $fb, $ec, $e9, $e5
0dad6     F3 06 0D 11 
0dada     0E 0B 11 13 
0dade     0E 09 03 F1 
0dae2     F6 FB F4 EB | 	byte	$f3, $06, $0d, $11, $0e, $0b, $11, $13, $0e, $09, $03, $f1, $f6, $fb, $f4, $eb
0dae6     F5 FE F3 F4 
0daea     F9 03 11 0C 
0daee     07 0B 0B 13 
0daf2     15 08 07 08 | 	byte	$f5, $fe, $f3, $f4, $f9, $03, $11, $0c, $07, $0b, $0b, $13, $15, $08, $07, $08
0daf6     F5 F3 FD F9 
0dafa     ED F7 FF F0 
0dafe     E8 E3 EC 00 
0db02     08 09 0F 0D | 	byte	$f5, $f3, $fd, $f9, $ed, $f7, $ff, $f0, $e8, $e3, $ec, $00, $08, $09, $0f, $0d
0db06     0C 0D 07 07 
0db0a     13 06 FF 01 
0db0e     00 FA 00 07 
0db12     FB F3 F7 FB | 	byte	$0c, $0d, $07, $07, $13, $06, $ff, $01, $00, $fa, $00, $07, $fb, $f3, $f7, $fb
0db16     01 02 02 02 
0db1a     01 00 04 05 
0db1e     FD F5 ED E5 
0db22     F1 F5 F7 01 | 	byte	$01, $02, $02, $02, $01, $00, $04, $05, $fd, $f5, $ed, $e5, $f1, $f5, $f7, $01
0db26     0A 03 00 07 
0db2a     0F 19 1E 19 
0db2e     1A 18 05 04 
0db32     00 F7 F3 F0 | 	byte	$0a, $03, $00, $07, $0f, $19, $1e, $19, $1a, $18, $05, $04, $00, $f7, $f3, $f0
0db36     E2 EB E4 D9 
0db3a     E7 F1 F1 F5 
0db3e     F9 FF 05 16 
0db42     1E 21 23 1D | 	byte	$e2, $eb, $e4, $d9, $e7, $f1, $f1, $f5, $f9, $ff, $05, $16, $1e, $21, $23, $1d
0db46     1B 1A 0F 07 
0db4a     01 F3 F1 E8 
0db4e     E1 F1 F9 EB 
0db52     E0 E9 F3 FB | 	byte	$1b, $1a, $0f, $07, $01, $f3, $f1, $e8, $e1, $f1, $f9, $eb, $e0, $e9, $f3, $fb
0db56     0A 17 17 17 
0db5a     15 13 14 08 
0db5e     08 00 F9 F3 
0db62     ED E0 ED F7 | 	byte	$0a, $17, $17, $17, $15, $13, $14, $08, $08, $00, $f9, $f3, $ed, $e0, $ed, $f7
0db66     EF EC F8 03 
0db6a     04 07 15 15 
0db6e     17 19 1B 15 
0db72     05 08 04 FF | 	byte	$ef, $ec, $f8, $03, $04, $07, $15, $15, $17, $19, $1b, $15, $05, $08, $04, $ff
0db76     EE ED E4 EE 
0db7a     F9 EE DB E3 
0db7e     EF F0 F5 0B 
0db82     18 15 0E 0F | 	byte	$ee, $ed, $e4, $ee, $f9, $ee, $db, $e3, $ef, $f0, $f5, $0b, $18, $15, $0e, $0f
0db86     16 0D 10 16 
0db8a     17 07 FB F4 
0db8e     FB 03 FE EC 
0db92     F2 FB FF F3 | 	byte	$16, $0d, $10, $16, $17, $07, $fb, $f4, $fb, $03, $fe, $ec, $f2, $fb, $ff, $f3
0db96     FB 01 00 01 
0db9a     03 07 F6 EF 
0db9e     F9 F9 F4 E9 
0dba2     F4 00 09 09 | 	byte	$fb, $01, $00, $01, $03, $07, $f6, $ef, $f9, $f9, $f4, $e9, $f4, $00, $09, $09
0dba6     01 07 0E 18 
0dbaa     19 1B 21 1D 
0dbae     13 09 07 F1 
0dbb2     E8 F3 F5 ED | 	byte	$01, $07, $0e, $18, $19, $1b, $21, $1d, $13, $09, $07, $f1, $e8, $f3, $f5, $ed
0dbb6     CC CE E1 EF 
0dbba     F3 E7 F4 03 
0dbbe     0D 12 13 23 
0dbc2     2C 26 20 20 | 	byte	$cc, $ce, $e1, $ef, $f3, $e7, $f4, $03, $0d, $12, $13, $23, $2c, $26, $20, $20
0dbc6     1B 03 FD FF 
0dbca     FC E1 D9 E8 
0dbce     ED ED DF E2 
0dbd2     F3 FF 08 0B | 	byte	$1b, $03, $fd, $ff, $fc, $e1, $d9, $e8, $ed, $ed, $df, $e2, $f3, $ff, $08, $0b
0dbd6     11 1E 21 1C 
0dbda     16 0E 00 00 
0dbde     03 00 EC D3 
0dbe2     E5 E8 ED E8 | 	byte	$11, $1e, $21, $1c, $16, $0e, $00, $00, $03, $00, $ec, $d3, $e5, $e8, $ed, $e8
0dbe6     F4 FA 00 0B 
0dbea     15 17 20 23 
0dbee     27 25 17 04 
0dbf2     00 03 03 F0 | 	byte	$f4, $fa, $00, $0b, $15, $17, $20, $23, $27, $25, $17, $04, $00, $03, $03, $f0
0dbf6     D0 E3 EB F2 
0dbfa     D7 D2 DE EF 
0dbfe     FD 06 06 10 
0dc02     1F 21 1E 22 | 	byte	$d0, $e3, $eb, $f2, $d7, $d2, $de, $ef, $fd, $06, $06, $10, $1f, $21, $1e, $22
0dc06     17 0B 17 1E 
0dc0a     12 ED F1 FD 
0dc0e     00 ED E9 ED 
0dc12     F8 FD EF EB | 	byte	$17, $0b, $17, $1e, $12, $ed, $f1, $fd, $00, $ed, $e9, $ed, $f8, $fd, $ef, $eb
0dc16     F7 06 0E 05 
0dc1a     F7 FA F3 FB 
0dc1e     05 FF EC F4 
0dc22     07 0F 04 04 | 	byte	$f7, $06, $0e, $05, $f7, $fa, $f3, $fb, $05, $ff, $ec, $f4, $07, $0f, $04, $04
0dc26     0B 12 14 1D 
0dc2a     1D 16 1F 12 
0dc2e     02 00 F3 E5 
0dc32     E7 E9 E0 D5 | 	byte	$0b, $12, $14, $1d, $1d, $16, $1f, $12, $02, $00, $f3, $e5, $e7, $e9, $e0, $d5
0dc36     D0 E6 F3 E6 
0dc3a     EB FE 0A 17 
0dc3e     1B 1D 21 27 
0dc42     2D 28 21 1D | 	byte	$d0, $e6, $f3, $e6, $eb, $fe, $0a, $17, $1b, $1d, $21, $27, $2d, $28, $21, $1d
0dc46     FD E5 F6 F9 
0dc4a     EA D7 DB E9 
0dc4e     E7 E7 E9 F7 
0dc52     04 09 12 18 | 	byte	$fd, $e5, $f6, $f9, $ea, $d7, $db, $e9, $e7, $e7, $e9, $f7, $04, $09, $12, $18
0dc56     1D 25 1F 12 
0dc5a     0D FF F4 FF 
0dc5e     00 EA CE D7 
0dc62     EE EB EA F0 | 	byte	$1d, $25, $1f, $12, $0d, $ff, $f4, $ff, $00, $ea, $ce, $d7, $ee, $eb, $ea, $f0
0dc66     F9 06 17 22 
0dc6a     22 22 2C 2F 
0dc6e     29 1F 08 F6 
0dc72     F9 F2 E1 DB | 	byte	$f9, $06, $17, $22, $22, $22, $2c, $2f, $29, $1f, $08, $f6, $f9, $f2, $e1, $db
0dc76     D6 E6 D9 BC 
0dc7a     D0 E6 F5 05 
0dc7e     07 0C 13 25 
0dc82     33 2D 2C 20 | 	byte	$d6, $e6, $d9, $bc, $d0, $e6, $f5, $05, $07, $0c, $13, $25, $33, $2d, $2c, $20
0dc86     0E 13 19 0D 
0dc8a     FD EF F7 EB 
0dc8e     E1 EC ED F0 
0dc92     E3 E7 F8 00 | 	byte	$0e, $13, $19, $0d, $fd, $ef, $f7, $eb, $e1, $ec, $ed, $f0, $e3, $e7, $f8, $00
0dc96     05 06 FD FF 
0dc9a     02 FD FD 03 
0dc9e     02 FE FC 05 
0dca2     0A FE 08 0F | 	byte	$05, $06, $fd, $ff, $02, $fd, $fd, $03, $02, $fe, $fc, $05, $0a, $fe, $08, $0f
0dca6     0C 0D 1B 21 
0dcaa     18 0B 09 09 
0dcae     07 FD E0 D4 
0dcb2     D6 E0 E7 E4 | 	byte	$0c, $0d, $1b, $21, $18, $0b, $09, $09, $07, $fd, $e0, $d4, $d6, $e0, $e7, $e4
0dcb6     E5 E7 DC F1 
0dcba     07 13 17 22 
0dcbe     29 24 1D 29 
0dcc2     33 23 10 F7 | 	byte	$e5, $e7, $dc, $f1, $07, $13, $17, $22, $29, $24, $1d, $29, $33, $23, $10, $f7
0dcc6     EB EF F3 E8 
0dcca     DA DB E0 DF 
0dcce     F1 F8 FB FF 
0dcd2     09 1B 25 21 | 	byte	$eb, $ef, $f3, $e8, $da, $db, $e0, $df, $f1, $f8, $fb, $ff, $09, $1b, $25, $21
0dcd6     1F 1E 0F 02 
0dcda     FE FB F2 EA 
0dcde     E4 DB DD E5 
0dce2     DC E7 F9 05 | 	byte	$1f, $1e, $0f, $02, $fe, $fb, $f2, $ea, $e4, $db, $dd, $e5, $dc, $e7, $f9, $05
0dce6     12 1D 2A 2C 
0dcea     2C 2A 33 31 
0dcee     23 09 F2 E1 
0dcf2     D9 DD E6 D7 | 	byte	$12, $1d, $2a, $2c, $2c, $2a, $33, $31, $23, $09, $f2, $e1, $d9, $dd, $e6, $d7
0dcf6     C6 B4 C0 D8 
0dcfa     F1 F7 FE 11 
0dcfe     1D 26 2C 38 
0dd02     3E 33 23 1E | 	byte	$c6, $b4, $c0, $d8, $f1, $f7, $fe, $11, $1d, $26, $2c, $38, $3e, $33, $23, $1e
0dd06     13 0D 04 03 
0dd0a     EF DC CE E3 
0dd0e     EF E3 DD E1 
0dd12     EE 02 04 01 | 	byte	$13, $0d, $04, $03, $ef, $dc, $ce, $e3, $ef, $e3, $dd, $e1, $ee, $02, $04, $01
0dd16     00 0A 0B 05 
0dd1a     0A 07 03 00 
0dd1e     0B 02 FD F2 
0dd22     01 0B 09 0A | 	byte	$00, $0a, $0b, $05, $0a, $07, $03, $00, $0b, $02, $fd, $f2, $01, $0b, $09, $0a
0dd26     13 19 18 13 
0dd2a     0C 04 10 07 
0dd2e     F4 DF D8 D9 
0dd32     DB EF F1 DD | 	byte	$13, $19, $18, $13, $0c, $04, $10, $07, $f4, $df, $d8, $d9, $db, $ef, $f1, $dd
0dd36     CE E0 F9 0B 
0dd3a     15 1F 25 25 
0dd3e     21 25 25 29 
0dd42     23 0B FA FB | 	byte	$ce, $e0, $f9, $0b, $15, $1f, $25, $25, $21, $25, $25, $29, $23, $0b, $fa, $fb
0dd46     ED DB E3 E9 
0dd4a     D4 D0 E3 FA 
0dd4e     00 FC 02 13 
0dd52     1F 28 29 1D | 	byte	$ed, $db, $e3, $e9, $d4, $d0, $e3, $fa, $00, $fc, $02, $13, $1f, $28, $29, $1d
0dd56     0F 0D 00 F8 
0dd5a     FB F6 E1 DE 
0dd5e     E7 CD C4 DA 
0dd62     F5 05 11 1F | 	byte	$0f, $0d, $00, $f8, $fb, $f6, $e1, $de, $e7, $cd, $c4, $da, $f5, $05, $11, $1f
0dd66     2C 32 30 32 
0dd6a     33 34 36 20 
0dd6e     03 EA E2 CE 
0dd72     D0 DD C5 AA | 	byte	$2c, $32, $30, $32, $33, $34, $36, $20, $03, $ea, $e2, $ce, $d0, $dd, $c5, $aa
0dd76     B0 C6 DA E7 
0dd7a     FF 11 1F 2A 
0dd7e     33 3C 41 44 
0dd82     3C 28 1F 23 | 	byte	$b0, $c6, $da, $e7, $ff, $11, $1f, $2a, $33, $3c, $41, $44, $3c, $28, $1f, $23
0dd86     07 FB F3 D5 
0dd8a     BB CC D7 E6 
0dd8e     E3 D9 E4 EF 
0dd92     F7 06 0D 0C | 	byte	$07, $fb, $f3, $d5, $bb, $cc, $d7, $e6, $e3, $d9, $e4, $ef, $f7, $06, $0d, $0c
0dd96     11 13 0F 0F 
0dd9a     1A 10 FF 08 
0dd9e     FE E7 F2 FB 
0dda2     09 07 0A 13 | 	byte	$11, $13, $0f, $0f, $1a, $10, $ff, $08, $fe, $e7, $f2, $fb, $09, $07, $0a, $13
0dda6     1B 1B 0B 09 
0ddaa     09 04 02 F7 
0ddae     EB E7 E9 DF 
0ddb2     EA E2 C8 D5 | 	byte	$1b, $1b, $0b, $09, $09, $04, $02, $f7, $eb, $e7, $e9, $df, $ea, $e2, $c8, $d5
0ddb6     E3 FD 0F 17 
0ddba     1F 26 26 21 
0ddbe     25 29 2B 19 
0ddc2     0B F6 F1 F7 | 	byte	$e3, $fd, $0f, $17, $1f, $26, $26, $21, $25, $29, $2b, $19, $0b, $f6, $f1, $f7
0ddc6     E3 E2 D1 C8 
0ddca     D8 ED F9 05 
0ddce     09 07 18 27 
0ddd2     25 1C 17 15 | 	byte	$e3, $e2, $d1, $c8, $d8, $ed, $f9, $05, $09, $07, $18, $27, $25, $1c, $17, $15
0ddd6     03 FC F4 FC 
0ddda     F9 DE D3 C2 
0ddde     BE D1 E9 FF 
0dde2     13 20 29 38 | 	byte	$03, $fc, $f4, $fc, $f9, $de, $d3, $c2, $be, $d1, $e9, $ff, $13, $20, $29, $38
0dde6     3E 39 30 36 
0ddea     3E 2A 0F FF 
0ddee     EE DD CD C5 
0ddf2     BC A5 A3 AC | 	byte	$3e, $39, $30, $36, $3e, $2a, $0f, $ff, $ee, $dd, $cd, $c5, $bc, $a5, $a3, $ac
0ddf6     BE DB F9 0D 
0ddfa     20 32 3C 40 
0ddfe     46 4F 4A 3B 
0de02     2F 27 1F 06 | 	byte	$be, $db, $f9, $0d, $20, $32, $3c, $40, $46, $4f, $4a, $3b, $2f, $27, $1f, $06
0de06     EF CE B6 BE 
0de0a     C4 D5 DF E1 
0de0e     D6 D9 F1 07 
0de12     0B 0D 1E 23 | 	byte	$ef, $ce, $b6, $be, $c4, $d5, $df, $e1, $d6, $d9, $f1, $07, $0b, $0d, $1e, $23
0de16     18 17 1C 1F 
0de1a     16 08 F5 E6 
0de1e     E5 EE FA 06 
0de22     0A 09 13 20 | 	byte	$18, $17, $1c, $1f, $16, $08, $f5, $e6, $e5, $ee, $fa, $06, $0a, $09, $13, $20
0de26     15 FC F9 06 
0de2a     0F 06 FC 00 
0de2e     F7 E9 E6 D4 
0de32     C6 CB E3 EE | 	byte	$15, $fc, $f9, $06, $0f, $06, $fc, $00, $f7, $e9, $e6, $d4, $c6, $cb, $e3, $ee
0de36     00 09 14 1D 
0de3a     29 2C 25 25 
0de3e     29 24 09 F9 
0de42     FB 00 FB F1 | 	byte	$00, $09, $14, $1d, $29, $2c, $25, $25, $29, $24, $09, $f9, $fb, $00, $fb, $f1
0de46     D6 C9 C9 E2 
0de4a     F1 FE 09 15 
0de4e     13 18 21 1D 
0de52     10 13 15 09 | 	byte	$d6, $c9, $c9, $e2, $f1, $fe, $09, $15, $13, $18, $21, $1d, $10, $13, $15, $09
0de56     F7 FA FA D9 
0de5a     D2 C2 C6 C8 
0de5e     E0 F9 0B 1E 
0de62     28 34 3E 43 | 	byte	$f7, $fa, $fa, $d9, $d2, $c2, $c6, $c8, $e0, $f9, $0b, $1e, $28, $34, $3e, $43
0de66     42 36 30 29 
0de6a     21 09 FA F5 
0de6e     D4 C1 AF A1 
0de72     82 96 BA CF | 	byte	$42, $36, $30, $29, $21, $09, $fa, $f5, $d4, $c1, $af, $a1, $82, $96, $ba, $cf
0de76     EC 01 1B 2E 
0de7a     40 4A 50 52 
0de7e     4D 4E 4A 30 
0de82     23 12 FB D6 | 	byte	$ec, $01, $1b, $2e, $40, $4a, $50, $52, $4d, $4e, $4a, $30, $23, $12, $fb, $d6
0de86     CE B2 AB C4 
0de8a     D0 C7 CF DD 
0de8e     EB FE 0C 13 
0de92     1E 23 27 2E | 	byte	$ce, $b2, $ab, $c4, $d0, $c7, $cf, $dd, $eb, $fe, $0c, $13, $1e, $23, $27, $2e
0de96     22 21 1D 17 
0de9a     FB F1 E8 DE 
0de9e     EA FF 03 00 
0dea2     05 0D 00 01 | 	byte	$22, $21, $1d, $17, $fb, $f1, $e8, $de, $ea, $ff, $03, $00, $05, $0d, $00, $01
0dea6     06 07 08 0D 
0deaa     15 11 05 F7 
0deae     F1 D8 CA CE 
0deb2     D0 E0 F2 FD | 	byte	$06, $07, $08, $0d, $15, $11, $05, $f7, $f1, $d8, $ca, $ce, $d0, $e0, $f2, $fd
0deb6     06 0F 1F 28 
0deba     25 28 26 0F 
0debe     08 0F 15 0A 
0dec2     FD FD E8 E0 | 	byte	$06, $0f, $1f, $28, $25, $28, $26, $0f, $08, $0f, $15, $0a, $fd, $fd, $e8, $e0
0dec6     DE D2 DF F0 
0deca     05 10 15 0A 
0dece     12 0F 0D 15 
0ded2     13 05 03 FC | 	byte	$de, $d2, $df, $f0, $05, $10, $15, $0a, $12, $0f, $0d, $15, $13, $05, $03, $fc
0ded6     E7 D9 DB D4 
0deda     D2 DD DF ED 
0dede     FE 19 27 30 
0dee2     34 3C 44 46 | 	byte	$e7, $d9, $db, $d4, $d2, $dd, $df, $ed, $fe, $19, $27, $30, $34, $3c, $44, $46
0dee6     36 25 1B 11 
0deea     0F 05 DC C2 
0deee     A7 89 8F 99 
0def2     A7 C2 E3 FF | 	byte	$36, $25, $1b, $11, $0f, $05, $dc, $c2, $a7, $89, $8f, $99, $a7, $c2, $e3, $ff
0def6     11 23 34 48 
0defa     54 5A 57 52 
0defe     4D 42 34 18 
0df02     00 E7 DB C9 | 	byte	$11, $23, $34, $48, $54, $5a, $57, $52, $4d, $42, $34, $18, $00, $e7, $db, $c9
0df06     B4 A2 A1 AE 
0df0a     D4 E1 E5 EF 
0df0e     FE 09 1D 28 
0df12     2B 31 31 30 | 	byte	$b4, $a2, $a1, $ae, $d4, $e1, $e5, $ef, $fe, $09, $1d, $28, $2b, $31, $31, $30
0df16     25 17 03 FD 
0df1a     F3 F1 E9 ED 
0df1e     EF FC F7 F2 
0df22     EF FF 0F 15 | 	byte	$25, $17, $03, $fd, $f3, $f1, $e9, $ed, $ef, $fc, $f7, $f2, $ef, $ff, $0f, $15
0df26     15 0F 13 15 
0df2a     1B 0F F7 D9 
0df2e     D5 D4 DE D7 
0df32     E0 E6 FA 0E | 	byte	$15, $0f, $13, $15, $1b, $0f, $f7, $d9, $d5, $d4, $de, $d7, $e0, $e6, $fa, $0e
0df36     0F 13 17 16 
0df3a     17 12 15 1D 
0df3e     18 1B 13 0D 
0df42     F1 F3 F2 F6 | 	byte	$0f, $13, $17, $16, $17, $12, $15, $1d, $18, $1b, $13, $0d, $f1, $f3, $f2, $f6
0df46     E5 E1 EB FC 
0df4a     13 0F FF F7 
0df4e     01 0B 0A 03 
0df52     F7 F3 EC E3 | 	byte	$e5, $e1, $eb, $fc, $13, $0f, $ff, $f7, $01, $0b, $0a, $03, $f7, $f3, $ec, $e3
0df56     EF DD DD EC 
0df5a     F4 FA FE 0B 
0df5e     18 2F 38 34 
0df62     36 36 3E 35 | 	byte	$ef, $dd, $dd, $ec, $f4, $fa, $fe, $0b, $18, $2f, $38, $34, $36, $36, $3e, $35
0df66     1F 13 08 00 
0df6a     EF CE A1 87 
0df6e     93 A5 B8 B8 
0df72     D2 EB 05 21 | 	byte	$1f, $13, $08, $00, $ef, $ce, $a1, $87, $93, $a5, $b8, $b8, $d2, $eb, $05, $21
0df76     2C 3B 47 56 
0df7a     5D 58 53 48 
0df7e     3C 22 13 FA 
0df82     D8 D2 C0 BF | 	byte	$2c, $3b, $47, $56, $5d, $58, $53, $48, $3c, $22, $13, $fa, $d8, $d2, $c0, $bf
0df86     A3 9D B5 D5 
0df8a     EF E9 E5 F8 
0df8e     11 23 2A 34 
0df92     35 36 2C 23 | 	byte	$a3, $9d, $b5, $d5, $ef, $e9, $e5, $f8, $11, $23, $2a, $34, $35, $36, $2c, $23
0df96     17 03 FD FA 
0df9a     FE EC E5 DE 
0df9e     E3 F1 EF F4 
0dfa2     01 10 1D 1F | 	byte	$17, $03, $fd, $fa, $fe, $ec, $e5, $de, $e3, $f1, $ef, $f4, $01, $10, $1d, $1f
0dfa6     17 13 19 13 
0dfaa     0D ED D4 DB 
0dfae     DC E5 EB E0 
0dfb2     E9 F5 FF 0B | 	byte	$17, $13, $19, $13, $0d, $ed, $d4, $db, $dc, $e5, $eb, $e0, $e9, $f5, $ff, $0b
0dfb6     00 03 0B 10 
0dfba     17 21 29 24 
0dfbe     1B 17 0F FF 
0dfc2     F8 FD 02 01 | 	byte	$00, $03, $0b, $10, $17, $21, $29, $24, $1b, $17, $0f, $ff, $f8, $fd, $02, $01
0dfc6     E3 E4 F2 00 
0dfca     01 EB E9 F1 
0dfce     FB F3 F6 F8 
0dfd2     F3 EE F5 F9 | 	byte	$e3, $e4, $f2, $00, $01, $eb, $e9, $f1, $fb, $f3, $f6, $f8, $f3, $ee, $f5, $f9
0dfd6     F1 F3 FB 04 
0dfda     16 10 15 1E 
0dfde     29 32 32 2A 
0dfe2     2C 2C 2A 1B | 	byte	$f1, $f3, $fb, $04, $16, $10, $15, $1e, $29, $32, $32, $2a, $2c, $2c, $2a, $1b
0dfe6     FF F8 E2 D4 
0dfea     B8 9A 9B AB 
0dfee     B7 D3 D8 DD 
0dff2     F5 0A 24 38 | 	byte	$ff, $f8, $e2, $d4, $b8, $9a, $9b, $ab, $b7, $d3, $d8, $dd, $f5, $0a, $24, $38
0dff6     3E 48 4D 4E 
0dffa     52 4E 47 32 
0dffe     1C 00 E6 D3 
0e002     CA C6 CA BB | 	byte	$3e, $48, $4d, $4e, $52, $4e, $47, $32, $1c, $00, $e6, $d3, $ca, $c6, $ca, $bb
0e006     A9 BD D6 DC 
0e00a     E3 EF FD 11 
0e00e     1D 2C 34 3A 
0e012     2D 2B 25 10 | 	byte	$a9, $bd, $d6, $dc, $e3, $ef, $fd, $11, $1d, $2c, $34, $3a, $2d, $2b, $25, $10
0e016     0B 03 F4 F5 
0e01a     F5 E3 E1 E5 
0e01e     E5 F5 00 04 
0e022     13 16 1F 19 | 	byte	$0b, $03, $f4, $f5, $f5, $e3, $e1, $e5, $e5, $f5, $00, $04, $13, $16, $1f, $19
0e026     17 14 0A F8 
0e02a     E3 E0 E4 E7 
0e02e     EA F4 E9 E1 
0e032     E5 EC FE 08 | 	byte	$17, $14, $0a, $f8, $e3, $e0, $e4, $e7, $ea, $f4, $e9, $e1, $e5, $ec, $fe, $08
0e036     07 07 0C 1D 
0e03a     26 34 2F 21 
0e03e     1C 07 07 0B 
0e042     08 06 05 F6 | 	byte	$07, $07, $0c, $1d, $26, $34, $2f, $21, $1c, $07, $07, $0b, $08, $06, $05, $f6
0e046     E3 E6 E1 DA 
0e04a     E5 DF DB E5 
0e04e     EC F6 FA F7 
0e052     FC 05 FB 02 | 	byte	$e3, $e6, $e1, $da, $e5, $df, $db, $e5, $ec, $f6, $fa, $f7, $fc, $05, $fb, $02
0e056     08 0F 11 20 
0e05a     29 1B 20 1D 
0e05e     21 29 27 21 
0e062     17 12 02 EF | 	byte	$08, $0f, $11, $20, $29, $1b, $20, $1d, $21, $29, $27, $21, $17, $12, $02, $ef
0e066     E7 D2 C6 A5 
0e06a     A5 B6 C4 CE 
0e06e     E3 F6 EF FD 
0e072     0E 25 3A 44 | 	byte	$e7, $d2, $c6, $a5, $a5, $b6, $c4, $ce, $e3, $f6, $ef, $fd, $0e, $25, $3a, $44
0e076     40 40 41 44 
0e07a     48 38 25 13 
0e07e     E7 DA DF DC 
0e082     D6 C8 CF C6 | 	byte	$40, $40, $41, $44, $48, $38, $25, $13, $e7, $da, $df, $dc, $d6, $c8, $cf, $c6
0e086     BD C7 D2 E1 
0e08a     FD 03 0B 19 
0e08e     27 2E 33 2D 
0e092     2C 19 05 07 | 	byte	$bd, $c7, $d2, $e1, $fd, $03, $0b, $19, $27, $2e, $33, $2d, $2c, $19, $05, $07
0e096     07 F3 F1 FC 
0e09a     F7 EB E7 E9 
0e09e     F5 07 0D 11 
0e0a2     11 13 1C 17 | 	byte	$07, $f3, $f1, $fc, $f7, $eb, $e7, $e9, $f5, $07, $0d, $11, $11, $13, $1c, $17
0e0a6     05 01 E6 DD 
0e0aa     EB F0 F1 EA 
0e0ae     EE F3 D8 DF 
0e0b2     F0 FD 0E 0C | 	byte	$05, $01, $e6, $dd, $eb, $f0, $f1, $ea, $ee, $f3, $d8, $df, $f0, $fd, $0e, $0c
0e0b6     05 0D 1B 2D 
0e0ba     38 30 2C 19 
0e0be     01 0D 17 12 
0e0c2     07 01 FE DB | 	byte	$05, $0d, $1b, $2d, $38, $30, $2c, $19, $01, $0d, $17, $12, $07, $01, $fe, $db
0e0c6     CB CB CB D0 
0e0ca     DD DD E0 EF 
0e0ce     FD FB 00 0B 
0e0d2     07 02 0F 18 | 	byte	$cb, $cb, $cb, $d0, $dd, $dd, $e0, $ef, $fd, $fb, $00, $0b, $07, $02, $0f, $18
0e0d6     21 24 27 31 
0e0da     22 19 1F 19 
0e0de     1A 1C 0C 05 
0e0e2     F3 F4 F0 D6 | 	byte	$21, $24, $27, $31, $22, $19, $1f, $19, $1a, $1c, $0c, $05, $f3, $f4, $f0, $d6
0e0e6     D7 C0 A5 B2 
0e0ea     CE DD E4 F5 
0e0ee     00 FE 00 12 
0e0f2     24 33 43 3A | 	byte	$d7, $c0, $a5, $b2, $ce, $dd, $e4, $f5, $00, $fe, $00, $12, $24, $33, $43, $3a
0e0f6     33 36 38 37 
0e0fa     27 15 FF E9 
0e0fe     DF E8 F0 E0 
0e102     D4 D9 CE BC | 	byte	$33, $36, $38, $37, $27, $15, $ff, $e9, $df, $e8, $f0, $e0, $d4, $d9, $ce, $bc
0e106     CE D4 DF FC 
0e10a     03 07 10 20 
0e10e     2E 28 29 19 
0e112     0D 09 02 05 | 	byte	$ce, $d4, $df, $fc, $03, $07, $10, $20, $2e, $28, $29, $19, $0d, $09, $02, $05
0e116     03 04 04 02 
0e11a     EB E9 F3 FC 
0e11e     09 0E 0A 08 
0e122     0E 15 04 01 | 	byte	$03, $04, $04, $02, $eb, $e9, $f3, $fc, $09, $0e, $0a, $08, $0e, $15, $04, $01
0e126     F1 DF E1 E8 
0e12a     F3 F7 F2 EE 
0e12e     EB DD E6 F3 
0e132     02 10 0E 05 | 	byte	$f1, $df, $e1, $e8, $f3, $f7, $f2, $ee, $eb, $dd, $e6, $f3, $02, $10, $0e, $05
0e136     13 21 31 36 
0e13a     2D 20 19 11 
0e13e     0B 15 13 08 
0e142     03 EB D0 CC | 	byte	$13, $21, $31, $36, $2d, $20, $19, $11, $0b, $15, $13, $08, $03, $eb, $d0, $cc
0e146     C1 BC CE DE 
0e14a     DC E9 F3 FB 
0e14e     00 01 01 07 
0e152     16 19 22 2E | 	byte	$c1, $bc, $ce, $de, $dc, $e9, $f3, $fb, $00, $01, $01, $07, $16, $19, $22, $2e
0e156     2F 32 2F 1D 
0e15a     13 17 10 11 
0e15e     0F FB E9 EF 
0e162     EB E5 DB D2 | 	byte	$2f, $32, $2f, $1d, $13, $17, $10, $11, $0f, $fb, $e9, $ef, $eb, $e5, $db, $d2
0e166     C0 BC C3 D5 
0e16a     F1 FF 05 09 
0e16e     05 00 0F 1F 
0e172     2A 33 33 28 | 	byte	$c0, $bc, $c3, $d5, $f1, $ff, $05, $09, $05, $00, $0f, $1f, $2a, $33, $33, $28
0e176     2C 2E 25 12 
0e17a     01 FE FD F5 
0e17e     F3 F3 E8 E1 
0e182     DD D4 CA D7 | 	byte	$2c, $2e, $25, $12, $01, $fe, $fd, $f5, $f3, $f3, $e8, $e1, $dd, $d4, $ca, $d7
0e186     D7 E1 F2 00 
0e18a     05 11 17 26 
0e18e     1E 08 0E 0F 
0e192     07 05 13 17 | 	byte	$d7, $e1, $f2, $00, $05, $11, $17, $26, $1e, $08, $0e, $0f, $07, $05, $13, $17
0e196     11 15 09 EC 
0e19a     EF F7 00 07 
0e19e     09 03 03 02 
0e1a2     00 FD EC EB | 	byte	$11, $15, $09, $ec, $ef, $f7, $00, $07, $09, $03, $03, $02, $00, $fd, $ec, $eb
0e1a6     EB EB E7 F4 
0e1aa     FB F4 F3 F7 
0e1ae     E8 EA F9 09 
0e1b2     08 09 13 17 | 	byte	$eb, $eb, $e7, $f4, $fb, $f4, $f3, $f7, $e8, $ea, $f9, $09, $08, $09, $13, $17
0e1b6     21 2A 2C 15 
0e1ba     17 1D 1F 17 
0e1be     0B 11 09 F6 
0e1c2     F0 CA C1 C2 | 	byte	$21, $2a, $2c, $15, $17, $1d, $1f, $17, $0b, $11, $09, $f6, $f0, $ca, $c1, $c2
0e1c6     C5 CF D4 E8 
0e1ca     F2 F9 F4 FB 
0e1ce     F3 01 17 29 
0e1d2     28 25 30 37 | 	byte	$c5, $cf, $d4, $e8, $f2, $f9, $f4, $fb, $f3, $01, $17, $29, $28, $25, $30, $37
0e1d6     32 30 1C 10 
0e1da     0C 0F 03 EF 
0e1de     EF EF E5 E3 
0e1e2     DB CD D7 CC | 	byte	$32, $30, $1c, $10, $0c, $0f, $03, $ef, $ef, $ef, $e5, $e3, $db, $cd, $d7, $cc
0e1e6     D1 DC E1 F8 
0e1ea     11 16 0F 00 
0e1ee     00 0D 1D 24 
0e1f2     22 27 30 1F | 	byte	$d1, $dc, $e1, $f8, $11, $16, $0f, $00, $00, $0d, $1d, $24, $22, $27, $30, $1f
0e1f6     12 08 FB 05 
0e1fa     08 09 09 FD 
0e1fe     EB E9 EB EB 
0e202     DD D7 E2 DB | 	byte	$12, $08, $fb, $05, $08, $09, $09, $fd, $eb, $e9, $eb, $eb, $dd, $d7, $e2, $db
0e206     DD E4 F3 09 
0e20a     11 16 07 FC 
0e20e     05 02 0F 1B 
0e212     1C 1A 21 25 | 	byte	$dd, $e4, $f3, $09, $11, $16, $07, $fc, $05, $02, $0f, $1b, $1c, $1a, $21, $25
0e216     1F 08 ED F7 
0e21a     FF 00 FE 02 
0e21e     04 F6 F3 ED 
0e222     DA F2 F5 EE | 	byte	$1f, $08, $ed, $f7, $ff, $00, $fe, $02, $04, $f6, $f3, $ed, $da, $f2, $f5, $ee
0e226     F7 F2 E6 F2 
0e22a     04 0D FD EA 
0e22e     F6 01 04 FB 
0e232     03 16 24 21 | 	byte	$f7, $f2, $e6, $f2, $04, $0d, $fd, $ea, $f6, $01, $04, $fb, $03, $16, $24, $21
0e236     1A 04 0F 19 
0e23a     21 25 1F 17 
0e23e     03 FF FF E4 
0e242     C2 CE D4 CE | 	byte	$1a, $04, $0f, $19, $21, $25, $1f, $17, $03, $ff, $ff, $e4, $c2, $ce, $d4, $ce
0e246     D0 D7 E8 FA 
0e24a     F5 EE DD F3 
0e24e     10 25 30 2F 
0e252     2E 2C 38 40 | 	byte	$d0, $d7, $e8, $fa, $f5, $ee, $dd, $f3, $10, $25, $30, $2f, $2e, $2c, $38, $40
0e256     37 0E 08 09 
0e25a     FB EB E9 F1 
0e25e     ED EB DA C4 
0e262     D2 D8 DB E3 | 	byte	$37, $0e, $08, $09, $fb, $eb, $e9, $f1, $ed, $eb, $da, $c4, $d2, $d8, $db, $e3
0e266     F1 FB 03 0E 
0e26a     17 1B FE FD 
0e26e     16 1B 15 17 
0e272     14 14 1B 05 | 	byte	$f1, $fb, $03, $0e, $17, $1b, $fe, $fd, $16, $1b, $15, $17, $14, $14, $1b, $05
0e276     F5 FD 07 14 
0e27a     13 11 07 F6 
0e27e     E5 F2 00 F2 
0e282     DB E1 DC D8 | 	byte	$f5, $fd, $07, $14, $13, $11, $07, $f6, $e5, $f2, $00, $f2, $db, $e1, $dc, $d8
0e286     E5 F5 01 0B 
0e28a     03 E5 E9 F7 
0e28e     0B 1D 2A 2C 
0e292     2B 25 25 26 | 	byte	$e5, $f5, $01, $0b, $03, $e5, $e9, $f7, $0b, $1d, $2a, $2c, $2b, $25, $25, $26
0e296     0D E9 F7 01 
0e29a     FD FF F8 ED 
0e29e     EC F3 DD E5 
0e2a2     EC F7 F2 F1 | 	byte	$0d, $e9, $f7, $01, $fd, $ff, $f8, $ed, $ec, $f3, $dd, $e5, $ec, $f7, $f2, $f1
0e2a6     F9 FB 00 0A 
0e2aa     16 1B F5 F1 
0e2ae     FD F7 FF 06 
0e2b2     0F 19 1B 01 | 	byte	$f9, $fb, $00, $0a, $16, $1b, $f5, $f1, $fd, $f7, $ff, $06, $0f, $19, $1b, $01
0e2b6     FD 07 13 22 
0e2ba     29 25 18 FF 
0e2be     F3 F7 F9 DC 
0e2c2     D4 DD D4 D9 | 	byte	$fd, $07, $13, $22, $29, $25, $18, $ff, $f3, $f7, $f9, $dc, $d4, $dd, $d4, $d9
0e2c6     DD E5 E4 E3 
0e2ca     E3 ED FA 0C 
0e2ce     1F 28 34 39 
0e2d2     3B 3E 38 34 | 	byte	$dd, $e5, $e4, $e3, $e3, $ed, $fa, $0c, $1f, $28, $34, $39, $3b, $3e, $38, $34
0e2d6     12 F7 F3 F0 
0e2da     F3 F5 EF E6 
0e2de     DC D2 D7 D0 
0e2e2     DB E6 EF FF | 	byte	$12, $f7, $f3, $f0, $f3, $f5, $ef, $e6, $dc, $d2, $d7, $d0, $db, $e6, $ef, $ff
0e2e6     09 12 0F 13 
0e2ea     1D 1A 06 04 
0e2ee     04 04 08 0F 
0e2f2     0C 00 F5 09 | 	byte	$09, $12, $0f, $13, $1d, $1a, $06, $04, $04, $04, $08, $0f, $0c, $00, $f5, $09
0e2f6     07 09 0C 10 
0e2fa     11 09 FF FC 
0e2fe     FF 03 FF E4 
0e302     E1 D8 DD EB | 	byte	$07, $09, $0c, $10, $11, $09, $ff, $fc, $ff, $03, $ff, $e4, $e1, $d8, $dd, $eb
0e306     F5 F5 E4 D8 
0e30a     F3 00 FD 0B 
0e30e     1E 2E 36 36 
0e312     30 25 1E 17 | 	byte	$f5, $f5, $e4, $d8, $f3, $00, $fd, $0b, $1e, $2e, $36, $36, $30, $25, $1e, $17
0e316     FF FB EF F3 
0e31a     F9 F1 EC DE 
0e31e     CF E4 EE E7 
0e322     EF F3 F5 01 | 	byte	$ff, $fb, $ef, $f3, $f9, $f1, $ec, $de, $cf, $e4, $ee, $e7, $ef, $f3, $f5, $01
0e326     08 14 19 1B 
0e32a     20 05 F3 ED 
0e32e     EF FB 0A 11 
0e332     07 F5 FB 0A | 	byte	$08, $14, $19, $1b, $20, $05, $f3, $ed, $ef, $fb, $0a, $11, $07, $f5, $fb, $0a
0e336     19 11 19 15 
0e33a     0F 0A 0A 09 
0e33e     05 01 F1 E7 
0e342     EB DB D3 D9 | 	byte	$19, $11, $19, $15, $0f, $0a, $0a, $09, $05, $01, $f1, $e7, $eb, $db, $d3, $d9
0e346     DE D9 CA DF 
0e34a     F7 09 11 17 
0e34e     20 2B 36 3D 
0e352     34 27 2A 1B | 	byte	$de, $d9, $ca, $df, $f7, $09, $11, $17, $20, $2b, $36, $3d, $34, $27, $2a, $1b
0e356     FB F7 F5 EF 
0e35a     F1 F3 E4 CB 
0e35e     CC CC E1 F5 
0e362     F9 F4 F6 04 | 	byte	$fb, $f7, $f5, $ef, $f1, $f3, $e4, $cb, $cc, $cc, $e1, $f5, $f9, $f4, $f6, $04
0e366     14 17 1B 24 
0e36a     26 F9 EC FD 
0e36e     FF 01 0E 07 
0e372     F0 FB 08 10 | 	byte	$14, $17, $1b, $24, $26, $f9, $ec, $fd, $ff, $01, $0e, $07, $f0, $fb, $08, $10
0e376     16 13 07 06 
0e37a     00 02 08 07 
0e37e     09 0A EC DF 
0e382     EB E3 D0 D7 | 	byte	$16, $13, $07, $06, $00, $02, $08, $07, $09, $0a, $ec, $df, $eb, $e3, $d0, $d7
0e386     E2 D4 E3 F4 
0e38a     03 0F 21 27 
0e38e     2B 2A 2A 25 
0e392     23 27 28 0A | 	byte	$e2, $d4, $e3, $f4, $03, $0f, $21, $27, $2b, $2a, $2a, $25, $23, $27, $28, $0a
0e396     E8 EF FB F1 
0e39a     E4 E6 D3 CB 
0e39e     D0 DF F6 0A 
0e3a2     0F 01 00 07 | 	byte	$e8, $ef, $fb, $f1, $e4, $e6, $d3, $cb, $d0, $df, $f6, $0a, $0f, $01, $00, $07
0e3a6     19 22 23 23 
0e3aa     0C E7 EA F7 
0e3ae     FD F8 FB ED 
0e3b2     FB 00 07 09 | 	byte	$19, $22, $23, $23, $0c, $e7, $ea, $f7, $fd, $f8, $fb, $ed, $fb, $00, $07, $09
0e3b6     05 15 14 0C 
0e3ba     0A 10 15 13 
0e3be     11 0E F3 E9 
0e3c2     E4 D4 D2 D6 | 	byte	$05, $15, $14, $0c, $0a, $10, $15, $13, $11, $0e, $f3, $e9, $e4, $d4, $d2, $d6
0e3c6     C9 D7 E3 F1 
0e3ca     04 16 25 28 
0e3ce     26 16 18 28 
0e3d2     31 37 2E 07 | 	byte	$c9, $d7, $e3, $f1, $04, $16, $25, $28, $26, $16, $18, $28, $31, $37, $2e, $07
0e3d6     F5 F3 F6 F4 
0e3da     EB CD C8 CF 
0e3de     D9 E5 F7 02 
0e3e2     05 FF 09 0D | 	byte	$f5, $f3, $f6, $f4, $eb, $cd, $c8, $cf, $d9, $e5, $f7, $02, $05, $ff, $09, $0d
0e3e6     11 15 0E 14 
0e3ea     08 F4 F9 03 
0e3ee     0B 07 ED F5 
0e3f2     08 11 0D 03 | 	byte	$11, $15, $0e, $14, $08, $f4, $f9, $03, $0b, $07, $ed, $f5, $08, $11, $0d, $03
0e3f6     05 17 0A 04 
0e3fa     00 00 07 11 
0e3fe     16 01 E4 CE 
0e402     CB D7 E3 D2 | 	byte	$05, $17, $0a, $04, $00, $00, $07, $11, $16, $01, $e4, $ce, $cb, $d7, $e3, $d2
0e406     D9 F0 FF 0B 
0e40a     13 20 30 34 
0e40e     24 13 19 22 
0e412     29 24 0F F3 | 	byte	$d9, $f0, $ff, $0b, $13, $20, $30, $34, $24, $13, $19, $22, $29, $24, $0f, $f3
0e416     EB EF ED E4 
0e41a     BA B8 D1 E5 
0e41e     F3 00 11 1B 
0e422     19 10 14 16 | 	byte	$eb, $ef, $ed, $e4, $ba, $b8, $d1, $e5, $f3, $00, $11, $1b, $19, $10, $14, $16
0e426     1B 1D 11 11 
0e42a     FD EA E9 EF 
0e42e     F6 E6 E7 FF 
0e432     00 EF F5 04 | 	byte	$1b, $1d, $11, $11, $fd, $ea, $e9, $ef, $f6, $e6, $e7, $ff, $00, $ef, $f5, $04
0e436     17 1C 1B 1D 
0e43a     17 15 18 1A 
0e43e     16 05 E9 D4 
0e442     C8 D6 CC C1 | 	byte	$17, $1c, $1b, $1d, $17, $15, $18, $1a, $16, $05, $e9, $d4, $c8, $d6, $cc, $c1
0e446     D3 E5 F9 0B 
0e44a     17 19 0E 17 
0e44e     1B 21 29 34 
0e452     3A 30 1F FF | 	byte	$d3, $e5, $f9, $0b, $17, $19, $0e, $17, $1b, $21, $29, $34, $3a, $30, $1f, $ff
0e456     F2 E9 F3 E7 
0e45a     C3 C4 D7 E8 
0e45e     ED F8 02 0B 
0e462     0D 11 0E F6 | 	byte	$f2, $e9, $f3, $e7, $c3, $c4, $d7, $e8, $ed, $f8, $02, $0b, $0d, $11, $0e, $f6
0e466     FA 0D 16 1B 
0e46a     00 FC 00 03 
0e46e     FA F0 FA 09 
0e472     12 08 FD 06 | 	byte	$fa, $0d, $16, $1b, $00, $fc, $00, $03, $fa, $f0, $fa, $09, $12, $08, $fd, $06
0e476     06 0B 0D 09 
0e47a     06 06 0F 0B 
0e47e     F7 DD D6 D9 
0e482     D9 DA D8 E5 | 	byte	$06, $0b, $0d, $09, $06, $06, $0f, $0b, $f7, $dd, $d6, $d9, $d9, $da, $d8, $e5
0e486     F5 05 14 1E 
0e48a     1F 2A 2D 1E 
0e48e     18 1C 1A 1F 
0e492     17 11 01 E5 | 	byte	$f5, $05, $14, $1e, $1f, $2a, $2d, $1e, $18, $1c, $1a, $1f, $17, $11, $01, $e5
0e496     D8 CE C6 BE 
0e49a     CE DF F2 03 
0e49e     0F 19 21 1F 
0e4a2     20 1E 1B 14 | 	byte	$d8, $ce, $c6, $be, $ce, $df, $f2, $03, $0f, $19, $21, $1f, $20, $1e, $1b, $14
0e4a6     09 09 0D 04 
0e4aa     E7 E6 EB E1 
0e4ae     DD E3 E3 F3 
0e4b2     F8 05 0D 10 | 	byte	$09, $09, $0d, $04, $e7, $e6, $eb, $e1, $dd, $e3, $e3, $f3, $f8, $05, $0d, $10
0e4b6     1C 2A 2A 26 
0e4ba     1F 1B 1B 17 
0e4be     0F E8 D7 CE 
0e4c2     BD B9 CC D6 | 	byte	$1c, $2a, $2a, $26, $1f, $1b, $1b, $17, $0f, $e8, $d7, $ce, $bd, $b9, $cc, $d6
0e4c6     EA FC 02 FA 
0e4ca     07 15 1F 29 
0e4ce     2C 2E 34 32 
0e4d2     2A 27 03 EC | 	byte	$ea, $fc, $02, $fa, $07, $15, $1f, $29, $2c, $2e, $34, $32, $2a, $27, $03, $ec
0e4d6     F1 E0 C6 CC 
0e4da     D3 D9 E9 F7 
0e4de     FF 0A 0F 01 
0e4e2     FD 00 09 07 | 	byte	$f1, $e0, $c6, $cc, $d3, $d9, $e9, $f7, $ff, $0a, $0f, $01, $fd, $00, $09, $07
0e4e6     0D 17 1D 0F 
0e4ea     FB 00 F8 E7 
0e4ee     FC 03 0A 05 
0e4f2     01 03 F9 01 | 	byte	$0d, $17, $1d, $0f, $fb, $00, $f8, $e7, $fc, $03, $0a, $05, $01, $03, $f9, $01
0e4f6     0D 17 16 12 
0e4fa     00 EF F7 00 
0e4fe     FF E2 E1 D4 
0e502     C7 E1 EE FA | 	byte	$0d, $17, $16, $12, $00, $ef, $f7, $00, $ff, $e2, $e1, $d4, $c7, $e1, $ee, $fa
0e506     0C 1B 24 21 
0e50a     1D 15 23 20 
0e50e     1C 17 13 11 
0e512     0F FA C8 CC | 	byte	$0c, $1b, $24, $21, $1d, $15, $23, $20, $1c, $17, $13, $11, $0f, $fa, $c8, $cc
0e516     CA BD D6 E2 
0e51a     ED FC 0B 18 
0e51e     1F 29 24 26 
0e522     29 1D 05 00 | 	byte	$ca, $bd, $d6, $e2, $ed, $fc, $0b, $18, $1f, $29, $24, $26, $29, $1d, $05, $00
0e526     03 07 03 E6 
0e52a     E0 E0 BE C4 
0e52e     DD E9 FA 0D 
0e532     0B 0A 17 24 | 	byte	$03, $07, $03, $e6, $e0, $e0, $be, $c4, $dd, $e9, $fa, $0d, $0b, $0a, $17, $24
0e536     2E 32 30 2A 
0e53a     21 1A 18 05 
0e53e     EA D7 C5 A8 
0e542     BA D2 DE E4 | 	byte	$2e, $32, $30, $2a, $21, $1a, $18, $05, $ea, $d7, $c5, $a8, $ba, $d2, $de, $e4
0e546     E8 F8 01 0B 
0e54a     1F 30 36 36 
0e54e     36 2C 22 25 
0e552     19 09 F5 E6 | 	byte	$e8, $f8, $01, $0b, $1f, $30, $36, $36, $36, $2c, $22, $25, $19, $09, $f5, $e6
0e556     BF BC D3 DE 
0e55a     E6 EE FE 07 
0e55e     03 F9 FD 08 
0e562     0B 11 13 11 | 	byte	$bf, $bc, $d3, $de, $e6, $ee, $fe, $07, $03, $f9, $fd, $08, $0b, $11, $13, $11
0e566     17 1E 13 F9 
0e56a     EE E3 EC 01 
0e56e     0A 05 F9 F3 
0e572     F7 05 0D 13 | 	byte	$17, $1e, $13, $f9, $ee, $e3, $ec, $01, $0a, $05, $f9, $f3, $f7, $05, $0d, $13
0e576     1C 11 03 FE 
0e57a     F9 FD 09 0A 
0e57e     F9 D6 C4 CE 
0e582     E3 F1 FF 11 | 	byte	$1c, $11, $03, $fe, $f9, $fd, $09, $0a, $f9, $d6, $c4, $ce, $e3, $f1, $ff, $11
0e586     1D 25 20 13 
0e58a     13 20 21 23 
0e58e     15 07 FB E9 
0e592     EB DD C7 C0 | 	byte	$1d, $25, $20, $13, $13, $20, $21, $23, $15, $07, $fb, $e9, $eb, $dd, $c7, $c0
0e596     C9 E6 F7 FE 
0e59a     0B 14 1B 26 
0e59e     2A 28 2D 2A 
0e5a2     17 FD F4 FA | 	byte	$c9, $e6, $f7, $fe, $0b, $14, $1b, $26, $2a, $28, $2d, $2a, $17, $fd, $f4, $fa
0e5a6     03 02 E9 C8 
0e5aa     B1 BA D4 E9 
0e5ae     F1 00 07 13 
0e5b2     1B 28 31 30 | 	byte	$03, $02, $e9, $c8, $b1, $ba, $d4, $e9, $f1, $00, $07, $13, $1b, $28, $31, $30
0e5b6     32 34 30 22 
0e5ba     1A 0E FD E4 
0e5be     C1 B0 B4 C5 
0e5c2     CC CA DF F3 | 	byte	$32, $34, $30, $22, $1a, $0e, $fd, $e4, $c1, $b0, $b4, $c5, $cc, $ca, $df, $f3
0e5c6     00 0D 19 2A 
0e5ca     3A 3F 3B 37 
0e5ce     1F 0D 11 18 
0e5d2     07 EF D7 B8 | 	byte	$00, $0d, $19, $2a, $3a, $3f, $3b, $37, $1f, $0d, $11, $18, $07, $ef, $d7, $b8
0e5d6     C2 D7 E5 F5 
0e5da     FF F9 F5 FF 
0e5de     03 0B 15 16 
0e5e2     1B 13 13 17 | 	byte	$c2, $d7, $e5, $f5, $ff, $f9, $f5, $ff, $03, $0b, $15, $16, $1b, $13, $13, $17
0e5e6     1B 0A E7 E3 
0e5ea     DF F1 04 02 
0e5ee     ED E8 F4 FF 
0e5f2     0F 1D 17 0A | 	byte	$1b, $0a, $e7, $e3, $df, $f1, $04, $02, $ed, $e8, $f4, $ff, $0f, $1d, $17, $0a
0e5f6     07 12 09 01 
0e5fa     07 0F 04 E2 
0e5fe     D7 CC D9 EA 
0e602     F5 FF 0F 1B | 	byte	$07, $12, $09, $01, $07, $0f, $04, $e2, $d7, $cc, $d9, $ea, $f5, $ff, $0f, $1b
0e606     21 19 0F 15 
0e60a     1F 22 21 03 
0e60e     DB E1 F2 EF 
0e612     D1 D8 CE D8 | 	byte	$21, $19, $0f, $15, $1f, $22, $21, $03, $db, $e1, $f2, $ef, $d1, $d8, $ce, $d8
0e616     F3 09 0F 1B 
0e61a     1E 20 27 27 
0e61e     2A 2F 22 0B 
0e622     FB F0 F1 FD | 	byte	$f3, $09, $0f, $1b, $1e, $20, $27, $27, $2a, $2f, $22, $0b, $fb, $f0, $f1, $fd
0e626     ED BB BC B8 
0e62a     C8 E0 F1 ED 
0e62e     FB 12 23 2B 
0e632     34 3A 3A 36 | 	byte	$ed, $bb, $bc, $b8, $c8, $e0, $f1, $ed, $fb, $12, $23, $2b, $34, $3a, $3a, $36
0e636     33 30 26 13 
0e63a     00 EF C4 BB 
0e63e     B6 B8 B6 C9 
0e642     D9 E7 FB 09 | 	byte	$33, $30, $26, $13, $00, $ef, $c4, $bb, $b6, $b8, $b6, $c9, $d9, $e7, $fb, $09
0e646     17 27 32 40 
0e64a     48 3D 24 0B 
0e64e     06 11 0F ED 
0e652     E7 CE BF CC | 	byte	$17, $27, $32, $40, $48, $3d, $24, $0b, $06, $11, $0f, $ed, $e7, $ce, $bf, $cc
0e656     E1 F5 F8 F6 
0e65a     F7 00 05 09 
0e65e     19 23 25 20 
0e662     19 13 10 0B | 	byte	$e1, $f5, $f8, $f6, $f7, $00, $05, $09, $19, $23, $25, $20, $19, $13, $10, $0b
0e666     EB E8 E1 E4 
0e66a     F2 F6 E6 DE 
0e66e     ED 00 0B 0F 
0e672     0B 0E 18 1A | 	byte	$eb, $e8, $e1, $e4, $f2, $f6, $e6, $de, $ed, $00, $0b, $0f, $0b, $0e, $18, $1a
0e676     15 16 13 11 
0e67a     0B F2 DF D7 
0e67e     DA E3 ED FF 
0e682     05 0A 14 15 | 	byte	$15, $16, $13, $11, $0b, $f2, $df, $d7, $da, $e3, $ed, $ff, $05, $0a, $14, $15
0e686     0B 13 19 21 
0e68a     21 F3 E1 E5 
0e68e     ED F1 E2 DC 
0e692     DF E2 F0 FF | 	byte	$0b, $13, $19, $21, $21, $f3, $e1, $e5, $ed, $f1, $e2, $dc, $df, $e2, $f0, $ff
0e696     14 1D 1F 27 
0e69a     27 25 1D 24 
0e69e     25 17 05 FF 
0e6a2     F3 EA D2 C4 | 	byte	$14, $1d, $1f, $27, $27, $25, $1d, $24, $25, $17, $05, $ff, $f3, $ea, $d2, $c4
0e6a6     C0 C5 C8 D7 
0e6aa     DD E2 FB 0B 
0e6ae     1E 32 36 38 
0e6b2     3B 3D 3F 36 | 	byte	$c0, $c5, $c8, $d7, $dd, $e2, $fb, $0b, $1e, $32, $36, $38, $3b, $3d, $3f, $36
0e6b6     29 1F 0A F0 
0e6ba     DF C2 A9 A7 
0e6be     B2 C2 D7 ED 
0e6c2     F8 00 11 20 | 	byte	$29, $1f, $0a, $f0, $df, $c2, $a9, $a7, $b2, $c2, $d7, $ed, $f8, $00, $11, $20
0e6c6     2E 3C 44 42 
0e6ca     26 13 0A 0D 
0e6ce     03 F5 EB D2 
0e6d2     CA CF DD E2 | 	byte	$2e, $3c, $44, $42, $26, $13, $0a, $0d, $03, $f5, $eb, $d2, $ca, $cf, $dd, $e2
0e6d6     E7 F6 FF 0B 
0e6da     15 0B 0A 1D 
0e6de     2A 2E 27 1D 
0e6e2     18 03 F0 E9 | 	byte	$e7, $f6, $ff, $0b, $15, $0b, $0a, $1d, $2a, $2e, $27, $1d, $18, $03, $f0, $e9
0e6e6     DB E8 E2 DF 
0e6ea     D8 D9 EB F9 
0e6ee     01 00 09 11 
0e6f2     1B 27 27 26 | 	byte	$db, $e8, $e2, $df, $d8, $d9, $eb, $f9, $01, $00, $09, $11, $1b, $27, $27, $26
0e6f6     1D 1C 15 01 
0e6fa     FC D0 D2 D9 
0e6fe     E8 F3 FB 09 
0e702     0D 09 03 0A | 	byte	$1d, $1c, $15, $01, $fc, $d0, $d2, $d9, $e8, $f3, $fb, $09, $0d, $09, $03, $0a
0e706     14 17 00 F0 
0e70a     F3 F2 EF F6 
0e70e     E9 F1 E0 EC 
0e712     F0 FF 12 17 | 	byte	$14, $17, $00, $f0, $f3, $f2, $ef, $f6, $e9, $f1, $e0, $ec, $f0, $ff, $12, $17
0e716     1F 2A 2C 2E 
0e71a     2A 14 15 12 
0e71e     0B 0B 00 DC 
0e722     D2 C3 C7 BA | 	byte	$1f, $2a, $2c, $2e, $2a, $14, $15, $12, $0b, $0b, $00, $dc, $d2, $c3, $c7, $ba
0e726     CC D9 CE DB 
0e72a     F0 02 1C 2E 
0e72e     34 3C 3E 3C 
0e732     39 38 34 2E | 	byte	$cc, $d9, $ce, $db, $f0, $02, $1c, $2e, $34, $3c, $3e, $3c, $39, $38, $34, $2e
0e736     13 F9 E8 E0 
0e73a     A9 95 A8 B8 
0e73e     D1 E7 F5 06 
0e742     13 19 25 34 | 	byte	$13, $f9, $e8, $e0, $a9, $95, $a8, $b8, $d1, $e7, $f5, $06, $13, $19, $25, $34
0e746     41 3D 21 1B 
0e74a     1B 0F 00 F2 
0e74e     F3 E3 CA D1 
0e752     D2 CC DE F2 | 	byte	$41, $3d, $21, $1b, $1b, $0f, $00, $f2, $f3, $e3, $ca, $d1, $d2, $cc, $de, $f2
0e756     FF 11 21 23 
0e75a     1B 13 1B 23 
0e75e     2A 30 2A 11 
0e762     F6 EA DE D3 | 	byte	$ff, $11, $21, $23, $1b, $13, $1b, $23, $2a, $30, $2a, $11, $f6, $ea, $de, $d3
0e766     DA D0 D0 CE 
0e76a     DE E9 E8 F9 
0e76e     0A 15 21 29 
0e772     28 2C 31 2F | 	byte	$da, $d0, $d0, $ce, $de, $e9, $e8, $f9, $0a, $15, $21, $29, $28, $2c, $31, $2f
0e776     25 0F 0D 05 
0e77a     E0 D0 D1 DC 
0e77e     EB FD 06 0C 
0e782     0A 06 03 F9 | 	byte	$25, $0f, $0d, $05, $e0, $d0, $d1, $dc, $eb, $fd, $06, $0c, $0a, $06, $03, $f9
0e786     F5 F0 F5 FA 
0e78a     01 03 EF EC 
0e78e     F0 F6 F3 FE 
0e792     06 11 1C 23 | 	byte	$f5, $f0, $f5, $fa, $01, $03, $ef, $ec, $f0, $f6, $f3, $fe, $06, $11, $1c, $23
0e796     24 29 36 2D 
0e79a     1A 0A FC F2 
0e79e     E9 EB F0 DB 
0e7a2     CB CC D8 CC | 	byte	$24, $29, $36, $2d, $1a, $0a, $fc, $f2, $e9, $eb, $f0, $db, $cb, $cc, $d8, $cc
0e7a6     C1 D0 EA FC 
0e7aa     12 24 2C 38 
0e7ae     40 3B 39 35 
0e7b2     30 2E 21 12 | 	byte	$c1, $d0, $ea, $fc, $12, $24, $2c, $38, $40, $3b, $39, $35, $30, $2e, $21, $12
0e7b6     EC CF C2 C7 
0e7ba     B1 B1 B8 D2 
0e7be     E9 FF 0D 1B 
0e7c2     28 36 3A 29 | 	byte	$ec, $cf, $c2, $c7, $b1, $b1, $b8, $d2, $e9, $ff, $0d, $1b, $28, $36, $3a, $29
0e7c6     1C 1D 19 0E 
0e7ca     12 00 F6 DF 
0e7ce     E0 D2 C0 BC 
0e7d2     D7 EB FA 0B | 	byte	$1c, $1d, $19, $0e, $12, $00, $f6, $df, $e0, $d2, $c0, $bc, $d7, $eb, $fa, $0b
0e7d6     1F 27 32 2B 
0e7da     23 25 21 23 
0e7de     22 21 0B F4 
0e7e2     E1 E1 DF C0 | 	byte	$1f, $27, $32, $2b, $23, $25, $21, $23, $22, $21, $0b, $f4, $e1, $e1, $df, $c0
0e7e6     BB C2 C9 CC 
0e7ea     D7 F1 05 11 
0e7ee     23 33 32 2F 
0e7f2     33 30 34 2A | 	byte	$bb, $c2, $c9, $cc, $d7, $f1, $05, $11, $23, $33, $32, $2f, $33, $30, $34, $2a
0e7f6     1B 0D 02 F3 
0e7fa     DA CF CC DF 
0e7fe     F2 FC FB F9 
0e802     F3 F5 F3 ED | 	byte	$1b, $0d, $02, $f3, $da, $cf, $cc, $df, $f2, $fc, $fb, $f9, $f3, $f5, $f3, $ed
0e806     F1 FD 09 10 
0e80a     02 F8 F7 00 
0e80e     0A 0B 05 02 
0e812     0E 15 15 1E | 	byte	$f1, $fd, $09, $10, $02, $f8, $f7, $00, $0a, $0b, $05, $02, $0e, $15, $15, $1e
0e816     2C 33 25 0E 
0e81a     FE E9 DF E2 
0e81e     EF EB DB DD 
0e822     E6 E5 CE CA | 	byte	$2c, $33, $25, $0e, $fe, $e9, $df, $e2, $ef, $eb, $db, $dd, $e6, $e5, $ce, $ca
0e826     D7 EF 08 1D 
0e82a     1F 2C 31 2E 
0e82e     32 3C 36 2C 
0e832     17 07 F3 D7 | 	byte	$d7, $ef, $08, $1d, $1f, $2c, $31, $2e, $32, $3c, $36, $2c, $17, $07, $f3, $d7
0e836     D7 DF DB CB 
0e83a     C8 CD D9 E7 
0e83e     F8 0D 21 31 
0e842     39 23 1F 1C | 	byte	$d7, $df, $db, $cb, $c8, $cd, $d9, $e7, $f8, $0d, $21, $31, $39, $23, $1f, $1c
0e846     0D 09 13 14 
0e84a     F5 DB D3 D7 
0e84e     D2 CA D6 E2 
0e852     F2 01 15 25 | 	byte	$0d, $09, $13, $14, $f5, $db, $d3, $d7, $d2, $ca, $d6, $e2, $f2, $01, $15, $25
0e856     30 38 2D 27 
0e85a     2F 2C 22 1A 
0e85e     0C F1 E3 E8 
0e862     E7 DA B8 A7 | 	byte	$30, $38, $2d, $27, $2f, $2c, $22, $1a, $0c, $f1, $e3, $e8, $e7, $da, $b8, $a7
0e866     AE B8 D0 EF 
0e86a     01 0C 1B 2B 
0e86e     32 38 3C 39 
0e872     3C 36 22 15 | 	byte	$ae, $b8, $d0, $ef, $01, $0c, $1b, $2b, $32, $38, $3c, $39, $3c, $36, $22, $15
0e876     12 0E F4 DB 
0e87a     D0 D9 E1 D4 
0e87e     D1 E2 E5 EF 
0e882     EF F3 F9 01 | 	byte	$12, $0e, $f4, $db, $d0, $d9, $e1, $d4, $d1, $e2, $e5, $ef, $ef, $f3, $f9, $01
0e886     07 11 13 08 
0e88a     01 04 11 1D 
0e88e     1F 05 05 05 
0e892     07 0F 1E 27 | 	byte	$07, $11, $13, $08, $01, $04, $11, $1d, $1f, $05, $05, $05, $07, $0f, $1e, $27
0e896     18 05 F9 E3 
0e89a     E9 F4 F8 F2 
0e89e     DD DB E5 EB 
0e8a2     E5 EC E2 E9 | 	byte	$18, $05, $f9, $e3, $e9, $f4, $f8, $f2, $dd, $db, $e5, $eb, $e5, $ec, $e2, $e9
0e8a6     F5 07 15 24 
0e8aa     27 24 28 2F 
0e8ae     2D 19 0D 0E 
0e8b2     FE E7 E3 E7 | 	byte	$f5, $07, $15, $24, $27, $24, $28, $2f, $2d, $19, $0d, $0e, $fe, $e7, $e3, $e7
0e8b6     F4 F3 E7 DA 
0e8ba     DD E4 F1 00 
0e8be     0E 1D 27 1F 
0e8c2     18 14 0B 0B | 	byte	$f4, $f3, $e7, $da, $dd, $e4, $f1, $00, $0e, $1d, $27, $1f, $18, $14, $0b, $0b
0e8c6     11 08 E9 D6 
0e8ca     D7 D5 DE EB 
0e8ce     EA E7 ED F9 
0e8d2     0B 1D 29 32 | 	byte	$11, $08, $e9, $d6, $d7, $d5, $de, $eb, $ea, $e7, $ed, $f9, $0b, $1d, $29, $32
0e8d6     3A 35 26 23 
0e8da     27 23 14 F8 
0e8de     E9 DB DC CA 
0e8e2     C4 C2 B5 B4 | 	byte	$3a, $35, $26, $23, $27, $23, $14, $f8, $e9, $db, $dc, $ca, $c4, $c2, $b5, $b4
0e8e6     C4 DB F8 0D 
0e8ea     1B 24 30 35 
0e8ee     36 33 42 3E 
0e8f2     28 28 13 0F | 	byte	$c4, $db, $f8, $0d, $1b, $24, $30, $35, $36, $33, $42, $3e, $28, $28, $13, $0f
0e8f6     0B FC E5 D6 
0e8fa     CA BC C8 D2 
0e8fe     D8 E2 E3 EF 
0e902     FD 03 06 17 | 	byte	$0b, $fc, $e5, $d6, $ca, $bc, $c8, $d2, $d8, $e2, $e3, $ef, $fd, $03, $06, $17
0e906     16 05 0D 0A 
0e90a     17 1F 29 26 
0e90e     0B 05 FD 01 
0e912     0B 0A 05 05 | 	byte	$16, $05, $0d, $0a, $17, $1f, $29, $26, $0b, $05, $fd, $01, $0b, $0a, $05, $05
0e916     FF EB E7 EB 
0e91a     F8 00 F1 F3 
0e91e     E9 E2 E1 F1 
0e922     FF F9 FE 00 | 	byte	$ff, $eb, $e7, $eb, $f8, $00, $f1, $f3, $e9, $e2, $e1, $f1, $ff, $f9, $fe, $00
0e926     05 0B 15 1D 
0e92a     26 21 16 0F 
0e92e     01 FF FD EF 
0e932     F5 F3 FB 04 | 	byte	$05, $0b, $15, $1d, $26, $21, $16, $0f, $01, $ff, $fd, $ef, $f5, $f3, $fb, $04
0e936     01 FC EC ED 
0e93a     EF F5 06 16 
0e93e     1A 10 06 06 
0e942     09 0B 07 F9 | 	byte	$01, $fc, $ec, $ed, $ef, $f5, $06, $16, $1a, $10, $06, $06, $09, $0b, $07, $f9
0e946     E6 DD D7 DA 
0e94a     E7 F5 01 00 
0e94e     FE 01 00 0F 
0e952     20 2D 36 3A | 	byte	$e6, $dd, $d7, $da, $e7, $f5, $01, $00, $fe, $01, $00, $0f, $20, $2d, $36, $3a
0e956     2E 20 1D 17 
0e95a     09 FF FB EB 
0e95e     CC BB B7 C5 
0e962     C6 C2 D5 DA | 	byte	$2e, $20, $1d, $17, $09, $ff, $fb, $eb, $cc, $bb, $b7, $c5, $c6, $c2, $d5, $da
0e966     E9 00 13 21 
0e96a     30 33 36 38 
0e96e     38 2C 2A 2C 
0e972     21 17 0E 08 | 	byte	$e9, $00, $13, $21, $30, $33, $36, $38, $38, $2c, $2a, $2c, $21, $17, $0e, $08
0e976     00 DA C5 C2 
0e97a     BC C6 D4 E1 
0e97e     E1 E2 EF 00 
0e982     09 13 0B 10 | 	byte	$00, $da, $c5, $c2, $bc, $c6, $d4, $e1, $e1, $e2, $ef, $00, $09, $13, $0b, $10
0e986     18 13 15 1F 
0e98a     28 2E 28 0A 
0e98e     07 01 EE F5 
0e992     F9 F7 00 F8 | 	byte	$18, $13, $15, $1f, $28, $2e, $28, $0a, $07, $01, $ee, $f5, $f9, $f7, $00, $f8
0e996     F0 ED F5 EC 
0e99a     F6 03 FD F3 
0e99e     E7 EB FB 05 
0e9a2     FF 06 0D 09 | 	byte	$f0, $ed, $f5, $ec, $f6, $03, $fd, $f3, $e7, $eb, $fb, $05, $ff, $06, $0d, $09
0e9a6     07 0C 15 0C 
0e9aa     0D 06 FB 02 
0e9ae     EB EF 00 01 
0e9b2     00 0D 13 11 | 	byte	$07, $0c, $15, $0c, $0d, $06, $fb, $02, $eb, $ef, $00, $01, $00, $0d, $13, $11
0e9b6     09 F1 F6 FE 
0e9ba     FD 05 0D 07 
0e9be     02 FD FA FD 
0e9c2     F7 E4 E1 DF | 	byte	$09, $f1, $f6, $fe, $fd, $05, $0d, $07, $02, $fd, $fa, $fd, $f7, $e4, $e1, $df
0e9c6     E3 DE E9 F9 
0e9ca     09 15 0A 0D 
0e9ce     17 11 11 21 
0e9d2     2E 34 2F 28 | 	byte	$e3, $de, $e9, $f9, $09, $15, $0a, $0d, $17, $11, $11, $21, $2e, $34, $2f, $28
0e9d6     17 0F FB F5 
0e9da     FB E9 D3 C3 
0e9de     B2 BD D0 CD 
0e9e2     D4 E9 F6 FA | 	byte	$17, $0f, $fb, $f5, $fb, $e9, $d3, $c3, $b2, $bd, $d0, $cd, $d4, $e9, $f6, $fa
0e9e6     08 1D 29 2E 
0e9ea     36 37 39 24 
0e9ee     1F 26 2A 1B 
0e9f2     18 0A FF F5 | 	byte	$08, $1d, $29, $2e, $36, $37, $39, $24, $1f, $26, $2a, $1b, $18, $0a, $ff, $f5
0e9f6     D4 BB C4 CB 
0e9fa     CB D6 DD E4 
0e9fe     EB F5 05 0E 
0ea02     03 09 1C 22 | 	byte	$d4, $bb, $c4, $cb, $cb, $d6, $dd, $e4, $eb, $f5, $05, $0e, $03, $09, $1c, $22
0ea06     17 1D 22 2C 
0ea0a     32 25 09 FB 
0ea0e     F7 ED E7 EA 
0ea12     F8 F7 FA F7 | 	byte	$17, $1d, $22, $2c, $32, $25, $09, $fb, $f7, $ed, $e7, $ea, $f8, $f7, $fa, $f7
0ea16     EE E7 F0 01 
0ea1a     0B FC F2 F4 
0ea1e     FD 06 08 FB 
0ea22     05 0F 0D 02 | 	byte	$ee, $e7, $f0, $01, $0b, $fc, $f2, $f4, $fd, $06, $08, $fb, $05, $0f, $0d, $02
0ea26     FE 01 00 02 
0ea2a     00 FB ED F1 
0ea2e     FE 0A 08 11 
0ea32     18 1D 23 16 | 	byte	$fe, $01, $00, $02, $00, $fb, $ed, $f1, $fe, $0a, $08, $11, $18, $1d, $23, $16
0ea36     F7 FB 04 02 
0ea3a     FB F8 F9 FA 
0ea3e     F7 EB E1 D6 
0ea42     DF E1 E9 E2 | 	byte	$f7, $fb, $04, $02, $fb, $f8, $f9, $fa, $f7, $eb, $e1, $d6, $df, $e1, $e9, $e2
0ea46     EB FE 09 1E 
0ea4a     2A 16 16 21 
0ea4e     1F 19 1D 29 
0ea52     26 20 1F 08 | 	byte	$eb, $fe, $09, $1e, $2a, $16, $16, $21, $1f, $19, $1d, $29, $26, $20, $1f, $08
0ea56     F4 F8 EF EA 
0ea5a     D1 C4 C8 C5 
0ea5e     CE DD DB E1 
0ea62     F5 01 09 0E | 	byte	$f4, $f8, $ef, $ea, $d1, $c4, $c8, $c5, $ce, $dd, $db, $e1, $f5, $01, $09, $0e
0ea66     21 2B 30 36 
0ea6a     30 20 21 1D 
0ea6e     22 19 17 0B 
0ea72     02 F9 FA DD | 	byte	$21, $2b, $30, $36, $30, $20, $21, $1d, $22, $19, $17, $0b, $02, $f9, $fa, $dd
0ea76     BE C8 CE D6 
0ea7a     CC D6 E8 F3 
0ea7e     00 FE 00 12 
0ea82     16 21 1B 1A | 	byte	$be, $c8, $ce, $d6, $cc, $d6, $e8, $f3, $00, $fe, $00, $12, $16, $21, $1b, $1a
0ea86     22 27 2B 38 
0ea8a     1F FE F5 F2 
0ea8e     F5 E7 E9 EB 
0ea92     F1 FF F5 DF | 	byte	$22, $27, $2b, $38, $1f, $fe, $f5, $f2, $f5, $e7, $e9, $eb, $f1, $ff, $f5, $df
0ea96     EF FE 06 FE 
0ea9a     F5 FF 05 05 
0ea9e     0D 0F FD 00 
0eaa2     09 01 F7 F7 | 	byte	$ef, $fe, $06, $fe, $f5, $ff, $05, $05, $0d, $0f, $fd, $00, $09, $01, $f7, $f7
0eaa6     F9 00 04 F8 
0eaaa     E8 F5 00 05 
0eaae     08 10 19 22 
0eab2     23 2E 29 00 | 	byte	$f9, $00, $04, $f8, $e8, $f5, $00, $05, $08, $10, $19, $22, $23, $2e, $29, $00
0eab6     F8 FE FE E7 
0eaba     E1 ED E8 E2 
0eabe     D9 D0 E1 EB 
0eac2     E7 E8 F0 FD | 	byte	$f8, $fe, $fe, $e7, $e1, $ed, $e8, $e2, $d9, $d0, $e1, $eb, $e7, $e8, $f0, $fd
0eac6     0E 1B 29 39 
0eaca     29 1E 21 24 
0eace     23 19 16 15 
0ead2     19 0F EE E2 | 	byte	$0e, $1b, $29, $39, $29, $1e, $21, $24, $23, $19, $16, $15, $19, $0f, $ee, $e2
0ead6     E5 DF D4 CA 
0eada     D0 D6 D7 D9 
0eade     EE F1 ED FD 
0eae2     08 0F 16 1F | 	byte	$e5, $df, $d4, $ca, $d0, $d6, $d7, $d9, $ee, $f1, $ed, $fd, $08, $0f, $16, $1f
0eae6     27 34 30 19 
0eaea     1C 22 1B 16 
0eaee     12 02 00 01 
0eaf2     04 08 EE C7 | 	byte	$27, $34, $30, $19, $1c, $22, $1b, $16, $12, $02, $00, $01, $04, $08, $ee, $c7
0eaf6     CA D4 C6 C6 
0eafa     DA E8 F7 FB 
0eafe     F3 05 18 1B 
0eb02     15 20 23 27 | 	byte	$ca, $d4, $c6, $c6, $da, $e8, $f7, $fb, $f3, $05, $18, $1b, $15, $20, $23, $27
0eb06     2E 26 20 1B 
0eb0a     FF FD 00 F4 
0eb0e     E6 E3 E7 F5 
0eb12     FA EA E6 F4 | 	byte	$2e, $26, $20, $1b, $ff, $fd, $00, $f4, $e6, $e3, $e7, $f5, $fa, $ea, $e6, $f4
0eb16     FF F5 F4 00 
0eb1a     08 0E 0B 0D 
0eb1e     18 0B FD F5 
0eb22     F1 EF F7 FE | 	byte	$ff, $f5, $f4, $00, $08, $0e, $0b, $0d, $18, $0b, $fd, $f5, $f1, $ef, $f7, $fe
0eb26     04 FB EB F0 
0eb2a     FE 05 03 12 
0eb2e     1B 1F 28 2E 
0eb32     30 2B 0D FA | 	byte	$04, $fb, $eb, $f0, $fe, $05, $03, $12, $1b, $1f, $28, $2e, $30, $2b, $0d, $fa
0eb36     F4 E4 D8 D8 
0eb3a     D2 D6 D6 CA 
0eb3e     DD EE E9 E6 
0eb42     F1 05 11 1D | 	byte	$f4, $e4, $d8, $d8, $d2, $d6, $d6, $ca, $dd, $ee, $e9, $e6, $f1, $05, $11, $1d
0eb46     29 32 3E 3A 
0eb4a     29 23 21 12 
0eb4e     0F 08 0E 0F 
0eb52     F1 DB D3 D4 | 	byte	$29, $32, $3e, $3a, $29, $23, $21, $12, $0f, $08, $0e, $0f, $f1, $db, $d3, $d4
0eb56     CC CC DD E3 
0eb5a     DF E7 E9 FC 
0eb5e     09 00 03 0D 
0eb62     0F 15 1C 23 | 	byte	$cc, $cc, $dd, $e3, $df, $e7, $e9, $fc, $09, $00, $03, $0d, $0f, $15, $1c, $23
0eb66     27 17 17 19 
0eb6a     19 0D 01 00 
0eb6e     03 07 0E 0F 
0eb72     09 F7 DD C8 | 	byte	$27, $17, $17, $19, $19, $0d, $01, $00, $03, $07, $0e, $0f, $09, $f7, $dd, $c8
0eb76     C6 C8 CD DD 
0eb7a     ED F7 EB F8 
0eb7e     09 0A 13 1C 
0eb82     23 30 2C 21 | 	byte	$c6, $c8, $cd, $dd, $ed, $f7, $eb, $f8, $09, $0a, $13, $1c, $23, $30, $2c, $21
0eb86     1D 1B 20 19 
0eb8a     0B 01 EE DB 
0eb8e     DF EB F7 E9 
0eb92     E7 ED E9 E5 | 	byte	$1d, $1b, $20, $19, $0b, $01, $ee, $db, $df, $eb, $f7, $e9, $e7, $ed, $e9, $e5
0eb96     F1 F6 06 13 
0eb9a     14 13 11 14 
0eb9e     0C F5 F1 F7 
0eba2     F3 F9 03 00 | 	byte	$f1, $f6, $06, $13, $14, $13, $11, $14, $0c, $f5, $f1, $f7, $f3, $f9, $03, $00
0eba6     EF EC F6 FE 
0ebaa     03 11 15 1F 
0ebae     2D 32 30 28 
0ebb2     1D 19 F5 E6 | 	byte	$ef, $ec, $f6, $fe, $03, $11, $15, $1f, $2d, $32, $30, $28, $1d, $19, $f5, $e6
0ebb6     D4 C7 C2 CD 
0ebba     D4 CB D4 E7 
0ebbe     E6 E5 F4 02 
0ebc2     0F 26 34 36 | 	byte	$d4, $c7, $c2, $cd, $d4, $cb, $d4, $e7, $e6, $e5, $f4, $02, $0f, $26, $34, $36
0ebc6     39 3D 41 32 
0ebca     21 17 09 00 
0ebce     05 FF E9 D8 
0ebd2     CC C5 C0 D0 | 	byte	$39, $3d, $41, $32, $21, $17, $09, $00, $05, $ff, $e9, $d8, $cc, $c5, $c0, $d0
0ebd6     DE E5 ED F8 
0ebda     F7 F9 05 16 
0ebde     19 0F 16 13 
0ebe2     0D 15 1E 11 | 	byte	$de, $e5, $ed, $f8, $f7, $f9, $05, $16, $19, $0f, $16, $13, $0d, $15, $1e, $11
0ebe6     0F 15 05 FD 
0ebea     00 FD 03 0B 
0ebee     1C 23 14 FC 
0ebf2     F3 E1 CC D0 | 	byte	$0f, $15, $05, $fd, $00, $fd, $03, $0b, $1c, $23, $14, $fc, $f3, $e1, $cc, $d0
0ebf6     D4 D4 E1 EF 
0ebfa     E7 E3 F7 FE 
0ebfe     00 13 21 21 
0ec02     21 2B 2B 27 | 	byte	$d4, $d4, $e1, $ef, $e7, $e3, $f7, $fe, $00, $13, $21, $21, $21, $2b, $2b, $27
0ec06     22 26 2C 12 
0ec0a     FD F3 DB E3 
0ec0e     ED EC DF E1 
0ec12     DB DA E1 EA | 	byte	$22, $26, $2c, $12, $fd, $f3, $db, $e3, $ed, $ec, $df, $e1, $db, $da, $e1, $ea
0ec16     FD 0A 15 21 
0ec1a     14 05 0B 0C 
0ec1e     00 FB 05 FD 
0ec22     FF FB F6 EB | 	byte	$fd, $0a, $15, $21, $14, $05, $0b, $0c, $00, $fb, $05, $fd, $ff, $fb, $f6, $eb
0ec26     F1 F9 FD 07 
0ec2a     11 18 27 2D 
0ec2e     32 38 20 07 
0ec32     06 EF D0 D6 | 	byte	$f1, $f9, $fd, $07, $11, $18, $27, $2d, $32, $38, $20, $07, $06, $ef, $d0, $d6
0ec36     CA C5 D2 D0 
0ec3a     CE DD DF E3 
0ec3e     F1 FD 0C 20 
0ec42     32 3C 4A 4C | 	byte	$ca, $c5, $d2, $d0, $ce, $dd, $df, $e3, $f1, $fd, $0c, $20, $32, $3c, $4a, $4c
0ec46     3D 39 33 1B 
0ec4a     12 07 F0 EF 
0ec4e     E8 D2 C3 BA 
0ec52     C2 CD D6 DD | 	byte	$3d, $39, $33, $1b, $12, $07, $f0, $ef, $e8, $d2, $c3, $ba, $c2, $cd, $d6, $dd
0ec56     EA FF 03 07 
0ec5a     13 17 1C 21 
0ec5e     15 13 17 0F 
0ec62     10 11 00 01 | 	byte	$ea, $ff, $03, $07, $13, $17, $1c, $21, $15, $13, $17, $0f, $10, $11, $00, $01
0ec66     FF FC FD FB 
0ec6a     FF 07 19 26 
0ec6e     1F 11 F9 EE 
0ec72     EA D6 D0 DC | 	byte	$ff, $fc, $fd, $fb, $ff, $07, $19, $26, $1f, $11, $f9, $ee, $ea, $d6, $d0, $dc
0ec76     E6 E8 E5 D7 
0ec7a     E3 F5 FB 01 
0ec7e     05 12 1F 25 
0ec82     2E 35 36 3B | 	byte	$e6, $e8, $e5, $d7, $e3, $f5, $fb, $01, $05, $12, $1f, $25, $2e, $35, $36, $3b
0ec86     36 26 08 F5 
0ec8a     F2 ED EB E7 
0ec8e     DD D0 CE D2 
0ec92     D9 DE EC FF | 	byte	$36, $26, $08, $f5, $f2, $ed, $eb, $e7, $dd, $d0, $ce, $d2, $d9, $de, $ec, $ff
0ec96     05 0D 1B 1B 
0ec9a     14 17 15 0B 
0ec9e     FF 01 06 FC 
0eca2     F8 EB F3 F7 | 	byte	$05, $0d, $1b, $1b, $14, $17, $15, $0b, $ff, $01, $06, $fc, $f8, $eb, $f3, $f7
0eca6     F9 02 0B 15 
0ecaa     16 1D 29 31 
0ecae     2E 03 FD 04 
0ecb2     ED CC C7 D4 | 	byte	$f9, $02, $0b, $15, $16, $1d, $29, $31, $2e, $03, $fd, $04, $ed, $cc, $c7, $d4
0ecb6     D9 DA D1 D6 
0ecba     D7 DD F1 FA 
0ecbe     05 15 26 38 
0ecc2     45 4E 4B 43 | 	byte	$d9, $da, $d1, $d6, $d7, $dd, $f1, $fa, $05, $15, $26, $38, $45, $4e, $4b, $43
0ecc6     3F 33 07 EF 
0ecca     F5 F7 E6 CF 
0ecce     C0 BD BE CF 
0ecd2     D1 D3 E3 F5 | 	byte	$3f, $33, $07, $ef, $f5, $f7, $e6, $cf, $c0, $bd, $be, $cf, $d1, $d3, $e3, $f5
0ecd6     04 10 18 22 
0ecda     21 2C 2D 15 
0ecde     00 09 14 00 
0ece2     F1 FB 07 FD | 	byte	$04, $10, $18, $22, $21, $2c, $2d, $15, $00, $09, $14, $00, $f1, $fb, $07, $fd
0ece6     F6 00 01 09 
0ecea     11 1B 18 11 
0ecee     05 FC F7 F6 
0ecf2     E5 D0 D9 E5 | 	byte	$f6, $00, $01, $09, $11, $1b, $18, $11, $05, $fc, $f7, $f6, $e5, $d0, $d9, $e5
0ecf6     E3 DB E1 E9 
0ecfa     E6 E9 02 10 
0ecfe     13 1A 28 32 
0ed02     3C 44 48 2E | 	byte	$e3, $db, $e1, $e9, $e6, $e9, $02, $10, $13, $1a, $28, $32, $3c, $44, $48, $2e
0ed06     25 19 F3 EA 
0ed0a     EB E3 D1 D4 
0ed0e     CA CC CF D6 
0ed12     E4 E5 F1 06 | 	byte	$25, $19, $f3, $ea, $eb, $e3, $d1, $d4, $ca, $cc, $cf, $d6, $e4, $e5, $f1, $06
0ed16     19 1F 1D 21 
0ed1a     20 22 25 08 
0ed1e     F5 F7 FA EA 
0ed22     F9 FE 00 00 | 	byte	$19, $1f, $1d, $21, $20, $22, $25, $08, $f5, $f7, $fa, $ea, $f9, $fe, $00, $00
0ed26     04 10 11 16 
0ed2a     1C 1E 11 09 
0ed2e     06 06 F9 EC 
0ed32     D6 CE D4 D7 | 	byte	$04, $10, $11, $16, $1c, $1e, $11, $09, $06, $06, $f9, $ec, $d6, $ce, $d4, $d7
0ed36     CB D8 DD DF 
0ed3a     E9 F9 03 11 
0ed3e     1D 2E 3A 40 
0ed42     48 4C 42 2C | 	byte	$cb, $d8, $dd, $df, $e9, $f9, $03, $11, $1d, $2e, $3a, $40, $48, $4c, $42, $2c
0ed46     22 0B F9 F0 
0ed4a     DB C6 C6 CF 
0ed4e     C8 C7 D2 CE 
0ed52     E0 F1 FB 0B | 	byte	$22, $0b, $f9, $f0, $db, $c6, $c6, $cf, $c8, $c7, $d2, $ce, $e0, $f1, $fb, $0b
0ed56     16 23 2A 2A 
0ed5a     2C 2A 16 02 
0ed5e     FA F0 EB F9 
0ed62     07 03 FC 04 | 	byte	$16, $23, $2a, $2a, $2c, $2a, $16, $02, $fa, $f0, $eb, $f9, $07, $03, $fc, $04
0ed66     07 0F 14 14 
0ed6a     0C 07 0A 05 
0ed6e     FD F3 F8 E7 
0ed72     DB DC CF CE | 	byte	$07, $0f, $14, $14, $0c, $07, $0a, $05, $fd, $f3, $f8, $e7, $db, $dc, $cf, $ce
0ed76     D3 DF EC E8 
0ed7a     FD 0D 0E 1B 
0ed7e     25 2E 3C 46 
0ed82     48 3A 2E 2B | 	byte	$d3, $df, $ec, $e8, $fd, $0d, $0e, $1b, $25, $2e, $3c, $46, $48, $3a, $2e, $2b
0ed86     0F F4 F0 D9 
0ed8a     C8 C3 CE D4 
0ed8e     C6 C6 D2 DF 
0ed92     F1 03 0A 11 | 	byte	$0f, $f4, $f0, $d9, $c8, $c3, $ce, $d4, $c6, $c6, $d2, $df, $f1, $03, $0a, $11
0ed96     20 2A 2C 29 
0ed9a     2E 24 FF FD 
0ed9e     E7 E4 EF F3 
0eda2     03 05 04 0B | 	byte	$20, $2a, $2c, $29, $2e, $24, $ff, $fd, $e7, $e4, $ef, $f3, $03, $05, $04, $0b
0eda6     11 12 11 09 
0edaa     05 0C 12 02 
0edae     F8 F9 F1 D4 
0edb2     DF D0 CF D2 | 	byte	$11, $12, $11, $09, $05, $0c, $12, $02, $f8, $f9, $f1, $d4, $df, $d0, $cf, $d2
0edb6     D5 EC F0 F3 
0edba     FE 10 1C 27 
0edbe     2A 36 3F 3B 
0edc2     38 38 32 2A | 	byte	$d5, $ec, $f0, $f3, $fe, $10, $1c, $27, $2a, $36, $3f, $3b, $38, $38, $32, $2a
0edc6     FE F5 DC C8 
0edca     C6 CB D2 CA 
0edce     CA CA DB EC 
0edd2     FD 04 0A 1B | 	byte	$fe, $f5, $dc, $c8, $c6, $cb, $d2, $ca, $ca, $ca, $db, $ec, $fd, $04, $0a, $1b
0edd6     28 2E 2F 28 
0edda     1A FD FC EE 
0edde     EB F3 F5 FF 
0ede2     04 0E 0F 17 | 	byte	$28, $2e, $2f, $28, $1a, $fd, $fc, $ee, $eb, $f3, $f5, $ff, $04, $0e, $0f, $17
0ede6     1C 18 0D 00 
0edea     05 0B 00 F6 
0edee     FA F6 DE D4 
0edf2     CE C2 C8 D7 | 	byte	$1c, $18, $0d, $00, $05, $0b, $00, $f6, $fa, $f6, $de, $d4, $ce, $c2, $c8, $d7
0edf6     E6 F1 FE 01 
0edfa     0B 21 2B 33 
0edfe     36 40 43 38 
0ee02     35 31 29 0D | 	byte	$e6, $f1, $fe, $01, $0b, $21, $2b, $33, $36, $40, $43, $38, $35, $31, $29, $0d
0ee06     E6 D9 CB C2 
0ee0a     CD C7 B0 BD 
0ee0e     D3 DA EB FB 
0ee12     0A 13 1B 27 | 	byte	$e6, $d9, $cb, $c2, $cd, $c7, $b0, $bd, $d3, $da, $eb, $fb, $0a, $13, $1b, $27
0ee16     34 3B 3B 2E 
0ee1a     15 F7 E7 ED 
0ee1e     ED EF F1 F5 
0ee22     01 11 12 08 | 	byte	$34, $3b, $3b, $2e, $15, $f7, $e7, $ed, $ed, $ef, $f1, $f5, $01, $11, $12, $08
0ee26     09 11 0C 07 
0ee2a     08 07 01 00 
0ee2e     FD F1 D9 CE 
0ee32     D9 D6 D5 DB | 	byte	$09, $11, $0c, $07, $08, $07, $01, $00, $fd, $f1, $d9, $ce, $d9, $d6, $d5, $db
0ee36     E3 F7 05 05 
0ee3a     10 20 2B 32 
0ee3e     27 28 32 3A 
0ee42     3B 2A 22 00 | 	byte	$e3, $f7, $05, $05, $10, $20, $2b, $32, $27, $28, $32, $3a, $3b, $2a, $22, $00
0ee46     D9 D7 D4 D3 
0ee4a     D1 C8 C5 D0 
0ee4e     D7 E1 F5 FE 
0ee52     0B 14 1A 25 | 	byte	$d9, $d7, $d4, $d3, $d1, $c8, $c5, $d0, $d7, $e1, $f5, $fe, $0b, $14, $1a, $25
0ee56     2F 29 1D 16 
0ee5a     04 E9 E9 F6 
0ee5e     FD FB F1 02 
0ee62     16 1D 21 22 | 	byte	$2f, $29, $1d, $16, $04, $e9, $e9, $f6, $fd, $fb, $f1, $02, $16, $1d, $21, $22
0ee66     0F 07 09 05 
0ee6a     00 FD F9 F7 
0ee6e     ED DA B1 B8 
0ee72     CC DB E3 D5 | 	byte	$0f, $07, $09, $05, $00, $fd, $f9, $f7, $ed, $da, $b1, $b8, $cc, $db, $e3, $d5
0ee76     EE 0B 1A 1B 
0ee7a     27 34 3D 45 
0ee7e     42 34 30 37 
0ee82     32 1C 05 D8 | 	byte	$ee, $0b, $1a, $1b, $27, $34, $3d, $45, $42, $34, $30, $37, $32, $1c, $05, $d8
0ee86     CA C8 CC B8 
0ee8a     A9 B4 C8 DF 
0ee8e     DD EE 05 15 
0ee92     1F 27 2F 34 | 	byte	$ca, $c8, $cc, $b8, $a9, $b4, $c8, $df, $dd, $ee, $05, $15, $1f, $27, $2f, $34
0ee96     40 44 2A 12 
0ee9a     EA EA ED F1 
0ee9e     EF DB EB 00 
0eea2     03 02 0D 16 | 	byte	$40, $44, $2a, $12, $ea, $ea, $ed, $f1, $ef, $db, $eb, $00, $03, $02, $0d, $16
0eea6     0B 09 07 0B 
0eeaa     13 0D 08 FE 
0eeae     F0 CF D4 D6 
0eeb2     D7 DD D6 DF | 	byte	$0b, $09, $07, $0b, $13, $0d, $08, $fe, $f0, $cf, $d4, $d6, $d7, $dd, $d6, $df
0eeb6     F1 07 10 1A 
0eeba     26 1F 24 2A 
0eebe     2E 2E 31 34 
0eec2     2B 25 FC E1 | 	byte	$f1, $07, $10, $1a, $26, $1f, $24, $2a, $2e, $2e, $31, $34, $2b, $25, $fc, $e1
0eec6     D9 D7 D2 C8 
0eeca     CE C8 D4 DE 
0eece     E7 F1 FE 0B 
0eed2     16 1E 1D 1D | 	byte	$d9, $d7, $d2, $c8, $ce, $c8, $d4, $de, $e7, $f1, $fe, $0b, $16, $1e, $1d, $1d
0eed6     26 24 1A FD 
0eeda     ED F4 00 01 
0eede     F1 F3 03 16 
0eee2     21 24 1B 0E | 	byte	$26, $24, $1a, $fd, $ed, $f4, $00, $01, $f1, $f3, $03, $16, $21, $24, $1b, $0e
0eee6     0E 05 FB 00 
0eeea     02 FD F6 DC 
0eeee     BC B3 C4 CC 
0eef2     D4 D4 E0 FD | 	byte	$0e, $05, $fb, $00, $02, $fd, $f6, $dc, $bc, $b3, $c4, $cc, $d4, $d4, $e0, $fd
0eef6     15 22 2A 36 
0eefa     3B 44 48 3B 
0eefe     31 32 32 23 
0ef02     0D F6 D5 CA | 	byte	$15, $22, $2a, $36, $3b, $44, $48, $3b, $31, $32, $32, $23, $0d, $f6, $d5, $ca
0ef06     C4 AD A8 B5 
0ef0a     C4 CF E1 E7 
0ef0e     F9 11 1F 28 
0ef12     2A 30 3C 46 | 	byte	$c4, $ad, $a8, $b5, $c4, $cf, $e1, $e7, $f9, $11, $1f, $28, $2a, $30, $3c, $46
0ef16     3A 22 0B F8 
0ef1a     EB E7 E2 DA 
0ef1e     DC E4 ED FD 
0ef22     06 0B 09 11 | 	byte	$3a, $22, $0b, $f8, $eb, $e7, $e2, $da, $dc, $e4, $ed, $fd, $06, $0b, $09, $11
0ef26     16 0F 16 23 
0ef2a     1F 0E 00 E4 
0ef2e     E1 D4 D5 D2 
0ef32     CD D1 DD F3 | 	byte	$16, $0f, $16, $23, $1f, $0e, $00, $e4, $e1, $d4, $d5, $d2, $cd, $d1, $dd, $f3
0ef36     09 0E 14 1B 
0ef3a     25 2D 27 27 
0ef3e     32 39 34 2E 
0ef42     17 03 DB DD | 	byte	$09, $0e, $14, $1b, $25, $2d, $27, $27, $32, $39, $34, $2e, $17, $03, $db, $dd
0ef46     D4 CB CB CE 
0ef4a     D5 DE DF DD 
0ef4e     EC FF 10 0F 
0ef52     09 17 23 23 | 	byte	$d4, $cb, $cb, $ce, $d5, $de, $df, $dd, $ec, $ff, $10, $0f, $09, $17, $23, $23
0ef56     25 0D 0F 00 
0ef5a     04 02 F5 F3 
0ef5e     F7 05 19 21 
0ef62     1A 0D 0D 0C | 	byte	$25, $0d, $0f, $00, $04, $02, $f5, $f3, $f7, $05, $19, $21, $1a, $0d, $0d, $0c
0ef66     03 FF 01 09 
0ef6a     F9 E7 CE C7 
0ef6e     BC BC CF D0 
0ef72     DD E9 01 21 | 	byte	$03, $ff, $01, $09, $f9, $e7, $ce, $c7, $bc, $bc, $cf, $d0, $dd, $e9, $01, $21
0ef76     2F 2D 34 43 
0ef7a     4C 48 30 30 
0ef7e     2F 21 1C 05 
0ef82     ED D0 AE B4 | 	byte	$2f, $2d, $34, $43, $4c, $48, $30, $30, $2f, $21, $1c, $05, $ed, $d0, $ae, $b4
0ef86     B0 B2 B6 CE 
0ef8a     DF F0 F6 01 
0ef8e     17 25 30 2E 
0ef92     30 38 38 33 | 	byte	$b0, $b2, $b6, $ce, $df, $f0, $f6, $01, $17, $25, $30, $2e, $30, $38, $38, $33
0ef96     21 09 00 E4 
0ef9a     E5 DB D6 CA 
0ef9e     D9 F1 00 04 
0efa2     01 09 11 1E | 	byte	$21, $09, $00, $e4, $e5, $db, $d6, $ca, $d9, $f1, $00, $04, $01, $09, $11, $1e
0efa6     21 23 2B 24 
0efaa     15 03 E6 E8 
0efae     D2 C7 CE CF 
0efb2     C6 D7 EF 01 | 	byte	$21, $23, $2b, $24, $15, $03, $e6, $e8, $d2, $c7, $ce, $cf, $c6, $d7, $ef, $01
0efb6     04 0B 1B 25 
0efba     2A 34 32 34 
0efbe     35 3A 34 11 
0efc2     00 ED CF D0 | 	byte	$04, $0b, $1b, $25, $2a, $34, $32, $34, $35, $3a, $34, $11, $00, $ed, $cf, $d0
0efc6     D6 CF CE D9 
0efca     E1 E3 DF EF 
0efce     F7 FC 08 11 
0efd2     15 16 21 2A | 	byte	$d6, $cf, $ce, $d9, $e1, $e3, $df, $ef, $f7, $fc, $08, $11, $15, $16, $21, $2a
0efd6     17 13 15 FF 
0efda     FE 07 00 F4 
0efde     01 13 1D 07 
0efe2     01 06 01 05 | 	byte	$17, $13, $15, $ff, $fe, $07, $00, $f4, $01, $13, $1d, $07, $01, $06, $01, $05
0efe6     07 03 F5 F1 
0efea     EB D2 C7 D6 
0efee     C8 CC DF EA 
0eff2     F1 03 19 32 | 	byte	$07, $03, $f5, $f1, $eb, $d2, $c7, $d6, $c8, $cc, $df, $ea, $f1, $03, $19, $32
0eff6     3A 37 3C 3C 
0effa     39 38 2E 20 
0effe     17 17 F7 CE 
0f002     CC BA A9 B8 | 	byte	$3a, $37, $3c, $3c, $39, $38, $2e, $20, $17, $17, $f7, $ce, $cc, $ba, $a9, $b8
0f006     C8 C9 DB E7 
0f00a     F7 09 0D 19 
0f00e     28 30 37 33 
0f012     2C 25 20 12 | 	byte	$c8, $c9, $db, $e7, $f7, $09, $0d, $19, $28, $30, $37, $33, $2c, $25, $20, $12
0f016     08 00 EF CE 
0f01a     D2 D9 D7 D8 
0f01e     E8 FF 05 06 
0f022     09 16 1F 2E | 	byte	$08, $00, $ef, $ce, $d2, $d9, $d7, $d8, $e8, $ff, $05, $06, $09, $16, $1f, $2e
0f026     33 29 26 1A 
0f02a     FF EF DF D7 
0f02e     C0 C8 D7 D4 
0f032     D0 DA EF 09 | 	byte	$33, $29, $26, $1a, $ff, $ef, $df, $d7, $c0, $c8, $d7, $d4, $d0, $da, $ef, $09
0f036     17 18 21 2D 
0f03a     37 3E 38 35 
0f03e     37 21 0B FF 
0f042     F3 D9 D0 DB | 	byte	$17, $18, $21, $2d, $37, $3e, $38, $35, $37, $21, $0b, $ff, $f3, $d9, $d0, $db
0f046     D7 CC D9 DA 
0f04a     E3 E9 DE EE 
0f04e     00 08 14 15 
0f052     19 23 19 1B | 	byte	$d7, $cc, $d9, $da, $e3, $e9, $de, $ee, $00, $08, $14, $15, $19, $23, $19, $1b
0f056     1D 1B 09 00 
0f05a     05 0E 05 03 
0f05e     04 F9 FD FE 
0f062     FC FF 00 FD | 	byte	$1d, $1b, $09, $00, $05, $0e, $05, $03, $04, $f9, $fd, $fe, $fc, $ff, $00, $fd
0f066     FF FF F5 DB 
0f06a     D9 DD E1 DB 
0f06e     D5 E5 FF 00 
0f072     05 18 23 36 | 	byte	$ff, $ff, $f5, $db, $d9, $dd, $e1, $db, $d5, $e5, $ff, $00, $05, $18, $23, $36
0f076     44 38 2A 23 
0f07a     27 2C 1D 0D 
0f07e     E3 D6 DD D1 
0f082     C0 BD C1 DD | 	byte	$44, $38, $2a, $23, $27, $2c, $1d, $0d, $e3, $d6, $dd, $d1, $c0, $bd, $c1, $dd
0f086     ED EA EE FA 
0f08a     0B 1B 22 24 
0f08e     2A 34 32 23 
0f092     11 01 FF 01 | 	byte	$ed, $ea, $ee, $fa, $0b, $1b, $22, $24, $2a, $34, $32, $23, $11, $01, $ff, $01
0f096     FA E3 D2 D1 
0f09a     E3 ED EA EC 
0f09e     EF 02 14 16 
0f0a2     19 23 2E 31 | 	byte	$fa, $e3, $d2, $d1, $e3, $ed, $ea, $ec, $ef, $02, $14, $16, $19, $23, $2e, $31
0f0a6     34 26 03 F7 
0f0aa     EF DB D2 CC 
0f0ae     CA C9 D6 DB 
0f0b2     E1 F1 FE 0F | 	byte	$34, $26, $03, $f7, $ef, $db, $d2, $cc, $ca, $c9, $d6, $db, $e1, $f1, $fe, $0f
0f0b6     25 2C 2D 36 
0f0ba     3C 3F 3E 1B 
0f0be     07 0D 03 F3 
0f0c2     EB D7 CB D6 | 	byte	$25, $2c, $2d, $36, $3c, $3f, $3e, $1b, $07, $0d, $03, $f3, $eb, $d7, $cb, $d6
0f0c6     E3 DB C9 CE 
0f0ca     E0 F0 FF FF 
0f0ce     07 15 1B 26 
0f0d2     16 0F 1A 1E | 	byte	$e3, $db, $c9, $ce, $e0, $f0, $ff, $ff, $07, $15, $1b, $26, $16, $0f, $1a, $1e
0f0d6     1B 19 03 07 
0f0da     0F 19 07 E7 
0f0de     E6 F2 F7 F7 
0f0e2     F0 F9 01 02 | 	byte	$1b, $19, $03, $07, $0f, $19, $07, $e7, $e6, $f2, $f7, $f7, $f0, $f9, $01, $02
0f0e6     04 ED DB E8 
0f0ea     EB EB F1 E8 
0f0ee     F0 01 11 16 
0f0f2     1B 1F 25 2A | 	byte	$04, $ed, $db, $e8, $eb, $eb, $f1, $e8, $f0, $01, $11, $16, $1b, $1f, $25, $2a
0f0f6     27 22 1B 19 
0f0fa     10 02 ED DF 
0f0fe     E1 DD D4 DB 
0f102     D5 D9 EB FB | 	byte	$27, $22, $1b, $19, $10, $02, $ed, $df, $e1, $dd, $d4, $db, $d5, $d9, $eb, $fb
0f106     03 00 02 0D 
0f10a     15 1F 2C 2D 
0f10e     26 18 10 FF 
0f112     FA ED E7 E5 | 	byte	$03, $00, $02, $0d, $15, $1f, $2c, $2d, $26, $18, $10, $ff, $fa, $ed, $e7, $e5
0f116     EF E7 DB E7 
0f11a     FB F6 F7 00 
0f11e     05 0B 15 24 
0f122     30 2D 2A 2D | 	byte	$ef, $e7, $db, $e7, $fb, $f6, $f7, $00, $05, $0b, $15, $24, $30, $2d, $2a, $2d
0f126     11 FE F0 E5 
0f12a     D7 D0 C6 C0 
0f12e     CA E2 F2 EE 
0f132     FD 09 0D 1B | 	byte	$11, $fe, $f0, $e5, $d7, $d0, $c6, $c0, $ca, $e2, $f2, $ee, $fd, $09, $0d, $1b
0f136     2C 3C 3C 36 
0f13a     33 15 11 15 
0f13e     0E FE F1 E5 
0f142     D2 D9 DD DD | 	byte	$2c, $3c, $3c, $36, $33, $15, $11, $15, $0e, $fe, $f1, $e5, $d2, $d9, $dd, $dd
0f146     CC D0 E7 EF 
0f14a     EC F5 0B 1D 
0f14e     17 1D 11 13 
0f152     1D 24 1D 12 | 	byte	$cc, $d0, $e7, $ef, $ec, $f5, $0b, $1d, $17, $1d, $11, $13, $1d, $24, $1d, $12
0f156     15 0C 0E 0E 
0f15a     FD ED ED EF 
0f15e     E1 E1 E6 F5 
0f162     07 0A 00 F1 | 	byte	$15, $0c, $0e, $0e, $fd, $ed, $ed, $ef, $e1, $e1, $e6, $f5, $07, $0a, $00, $f1
0f166     EF F0 02 00 
0f16a     ED F5 F1 01 
0f16e     0C 17 1F 19 
0f172     23 1D 0D 0F | 	byte	$ef, $f0, $02, $00, $ed, $f5, $f1, $01, $0c, $17, $1f, $19, $23, $1d, $0d, $0f
0f176     0E 05 09 F7 
0f17a     DD ED EE ED 
0f17e     ED E3 E7 E1 
0f182     F0 FF 0D 0D | 	byte	$0e, $05, $09, $f7, $dd, $ed, $ee, $ed, $ed, $e3, $e7, $e1, $f0, $ff, $0d, $0d
0f186     02 0D 1E 20 
0f18a     18 1C 17 09 
0f18e     0E EF E3 EB 
0f192     EE F4 ED ED | 	byte	$02, $0d, $1e, $20, $18, $1c, $17, $09, $0e, $ef, $e3, $eb, $ee, $f4, $ed, $ed
0f196     E1 EB F3 FB 
0f19a     05 09 08 11 
0f19e     1C 1F 20 23 
0f1a2     26 28 15 FF | 	byte	$e1, $eb, $f3, $fb, $05, $09, $08, $11, $1c, $1f, $20, $23, $26, $28, $15, $ff
0f1a6     E5 ED E9 D0 
0f1aa     CA C3 C7 DE 
0f1ae     ED FD FF 01 
0f1b2     0F 1F 27 2C | 	byte	$e5, $ed, $e9, $d0, $ca, $c3, $c7, $de, $ed, $fd, $ff, $01, $0f, $1f, $27, $2c
0f1b6     2F 2B 20 19 
0f1ba     1A 18 15 0B 
0f1be     00 E6 D2 C7 
0f1c2     D0 DC E9 DE | 	byte	$2f, $2b, $20, $19, $1a, $18, $15, $0b, $00, $e6, $d2, $c7, $d0, $dc, $e9, $de
0f1c6     DD EA FB 02 
0f1ca     03 0B 11 11 
0f1ce     15 1C 19 1E 
0f1d2     24 1C 1D 12 | 	byte	$dd, $ea, $fb, $02, $03, $0b, $11, $11, $15, $1c, $19, $1e, $24, $1c, $1d, $12
0f1d6     02 FB EE F3 
0f1da     F2 E2 DF E5 
0f1de     F3 F8 F7 F7 
0f1e2     FB FB 01 FC | 	byte	$02, $fb, $ee, $f3, $f2, $e2, $df, $e5, $f3, $f8, $f7, $f7, $fb, $fb, $01, $fc
0f1e6     00 0C 05 05 
0f1ea     00 F6 05 12 
0f1ee     1B 22 15 09 
0f1f2     00 FF 01 01 | 	byte	$00, $0c, $05, $05, $00, $f6, $05, $12, $1b, $22, $15, $09, $00, $ff, $01, $01
0f1f6     F5 E1 DF F4 
0f1fa     F9 F9 F6 F4 
0f1fe     FB FF F1 FC 
0f202     09 15 15 11 | 	byte	$f5, $e1, $df, $f4, $f9, $f9, $f6, $f4, $fb, $ff, $f1, $fc, $09, $15, $15, $11
0f206     13 1C 1A 1B 
0f20a     11 F9 DF DA 
0f20e     EE F7 F1 F1 
0f212     EE F1 FE ED | 	byte	$13, $1c, $1a, $1b, $11, $f9, $df, $da, $ee, $f7, $f1, $f1, $ee, $f1, $fe, $ed
0f216     E5 F5 07 17 
0f21a     1E 0F 13 1B 
0f21e     27 2C 24 0E 
0f222     04 04 F1 DD | 	byte	$e5, $f5, $07, $17, $1e, $0f, $13, $1b, $27, $2c, $24, $0e, $04, $04, $f1, $dd
0f226     DD DC DF DD 
0f22a     D1 CF E1 F7 
0f22e     05 0B 0B 19 
0f232     1F 29 32 1F | 	byte	$dd, $dc, $df, $dd, $d1, $cf, $e1, $f7, $05, $0b, $0b, $19, $1f, $29, $32, $1f
0f236     0A 05 17 28 
0f23a     21 08 FB F2 
0f23e     DA D4 D1 DD 
0f242     E9 E4 E1 E5 | 	byte	$0a, $05, $17, $28, $21, $08, $fb, $f2, $da, $d4, $d1, $dd, $e9, $e4, $e1, $e5
0f246     F8 05 06 11 
0f24a     13 06 03 12 
0f24e     1E 25 23 1A 
0f252     1F 1D 07 EF | 	byte	$f8, $05, $06, $11, $13, $06, $03, $12, $1e, $25, $23, $1a, $1f, $1d, $07, $ef
0f256     E5 DB E5 F2 
0f25a     EB E7 EF ED 
0f25e     F9 04 FC F5 
0f262     FE 02 0C 11 | 	byte	$e5, $db, $e5, $f2, $eb, $e7, $ef, $ed, $f9, $04, $fc, $f5, $fe, $02, $0c, $11
0f266     09 0F 13 0B 
0f26a     01 0C 15 13 
0f26e     12 00 EE F2 
0f272     F9 FA F3 E0 | 	byte	$09, $0f, $13, $0b, $01, $0c, $15, $13, $12, $00, $ee, $f2, $f9, $fa, $f3, $e0
0f276     CF E2 F9 07 
0f27a     04 F9 04 11 
0f27e     0C 05 0A 15 
0f282     18 14 14 16 | 	byte	$cf, $e2, $f9, $07, $04, $f9, $04, $11, $0c, $05, $0a, $15, $18, $14, $14, $16
0f286     16 12 04 E9 
0f28a     DD D7 E4 EB 
0f28e     00 00 00 00 
0f292     08 FF 02 FB | 	byte	$16, $12, $04, $e9, $dd, $d7, $e4, $eb, $00, $00, $00, $00, $08, $ff, $02, $fb
0f296     FE F9 00 03 
0f29a     01 FE 03 FF 
0f29e     05 F8 05 07 
0f2a2     00 FD 00 FB | 	byte	$fe, $f9, $00, $03, $01, $fe, $03, $ff, $05, $f8, $05, $07, $00, $fd, $00, $fb
0f2a6     02 00 02 00 
0f2aa     FB 00 02 02 
0f2ae     04 F3 FF 05 
0f2b2     FE 00 00 FF | 	byte	$02, $00, $02, $00, $fb, $00, $02, $02, $04, $f3, $ff, $05, $fe, $00, $00, $ff
0f2b6     02 FC 04 08 
0f2ba     FA FE 00 05 
0f2be     FF F4 03 05 
0f2c2     F4 FE 01 02 | 	byte	$02, $fc, $04, $08, $fa, $fe, $00, $05, $ff, $f4, $03, $05, $f4, $fe, $01, $02
0f2c6     07 01 02 02 
0f2ca     FA 00 FD 03 
0f2ce     FD F4 00 07 
0f2d2     00 02 FB 00 | 	byte	$07, $01, $02, $02, $fa, $00, $fd, $03, $fd, $f4, $00, $07, $00, $02, $fb, $00
0f2d6     05 00 04 0A 
0f2da     F9 FB FC 05 
0f2de     FD FD 06 F8 
0f2e2     F9 01 FE 01 | 	byte	$05, $00, $04, $0a, $f9, $fb, $fc, $05, $fd, $fd, $06, $f8, $f9, $01, $fe, $01
0f2e6     09 07 02 00 
0f2ea     F9 02 01 02 
0f2ee     FB FC 07 F9 
0f2f2     00 02 FB 02 | 	byte	$09, $07, $02, $00, $f9, $02, $01, $02, $fb, $fc, $07, $f9, $00, $02, $fb, $02
0f2f6     02 04 0A 00 
0f2fa     F1 FB 03 FF 
0f2fe     F6 FE 0B F9 
0f302     00 08 07 0D | 	byte	$02, $04, $0a, $00, $f1, $fb, $03, $ff, $f6, $fe, $0b, $f9, $00, $08, $07, $0d
0f306     06 02 05 FB 
0f30a     F7 F9 00 FB 
0f30e     F6 F8 02 02 
0f312     FD FB FE 0B | 	byte	$06, $02, $05, $fb, $f7, $f9, $00, $fb, $f6, $f8, $02, $02, $fd, $fb, $fe, $0b
0f316     08 04 0F 04 
0f31a     FE FB 04 00 
0f31e     FE FE F4 F9 
0f322     00 01 00 09 | 	byte	$08, $04, $0f, $04, $fe, $fb, $04, $00, $fe, $fe, $f4, $f9, $00, $01, $00, $09
0f326     05 FE 00 F9 
0f32a     FC FC FD FB 
0f32e     03 01 FC 02 
0f332     0B 07 02 09 | 	byte	$05, $fe, $00, $f9, $fc, $fc, $fd, $fb, $03, $01, $fc, $02, $0b, $07, $02, $09
0f336     05 09 07 F1 
0f33a     EF FE FB F4 
0f33e     FF F7 FB FE 
0f342     09 12 07 09 | 	byte	$05, $09, $07, $f1, $ef, $fe, $fb, $f4, $ff, $f7, $fb, $fe, $09, $12, $07, $09
0f346     05 09 06 F5 
0f34a     F2 00 01 FA 
0f34e     FF F1 00 01 
0f352     FF 01 05 0E | 	byte	$05, $09, $06, $f5, $f2, $00, $01, $fa, $ff, $f1, $00, $01, $ff, $01, $05, $0e
0f356     07 09 09 F7 
0f35a     F5 FE 00 F6 
0f35e     F6 E6 FF 05 
0f362     08 05 0D 13 | 	byte	$07, $09, $09, $f7, $f5, $fe, $00, $f6, $f6, $e6, $ff, $05, $08, $05, $0d, $13
0f366     03 04 01 F8 
0f36a     FF FE F6 FF 
0f36e     FE F4 04 05 
0f372     06 00 02 0C | 	byte	$03, $04, $01, $f8, $ff, $fe, $f6, $ff, $fe, $f4, $04, $05, $06, $00, $02, $0c
0f376     01 FE F6 F1 
0f37a     F8 FA F6 00 
0f37e     FE FE 0C 0C 
0f382     15 14 0E 0D | 	byte	$01, $fe, $f6, $f1, $f8, $fa, $f6, $00, $fe, $fe, $0c, $0c, $15, $14, $0e, $0d
0f386     01 01 F2 E9 
0f38a     F0 F4 F4 F9 
0f38e     ED F0 F9 02 
0f392     0D 0C 16 18 | 	byte	$01, $01, $f2, $e9, $f0, $f4, $f4, $f9, $ed, $f0, $f9, $02, $0d, $0c, $16, $18
0f396     0E 13 05 F9 
0f39a     FF FB 01 F7 
0f39e     E2 EC 00 05 
0f3a2     07 03 0A 01 | 	byte	$0e, $13, $05, $f9, $ff, $fb, $01, $f7, $e2, $ec, $00, $05, $07, $03, $0a, $01
0f3a6     02 02 EB F4 
0f3aa     FD F9 05 04 
0f3ae     00 02 15 16 
0f3b2     0F 05 0C 0A | 	byte	$02, $02, $eb, $f4, $fd, $f9, $05, $04, $00, $02, $15, $16, $0f, $05, $0c, $0a
0f3b6     06 F8 E4 EC 
0f3ba     E7 EA FB ED 
0f3be     F8 03 0C 0B 
0f3c2     16 12 16 10 | 	byte	$06, $f8, $e4, $ec, $e7, $ea, $fb, $ed, $f8, $03, $0c, $0b, $16, $12, $16, $10
0f3c6     11 01 E8 F4 
0f3ca     F4 F9 FB EE 
0f3ce     FB F9 FF 07 
0f3d2     0B 0B 18 0B | 	byte	$11, $01, $e8, $f4, $f4, $f9, $fb, $ee, $fb, $f9, $ff, $07, $0b, $0b, $18, $0b
0f3d6     09 00 F9 F5 
0f3da     E6 F6 F7 EA 
0f3de     F5 02 11 0F 
0f3e2     13 14 11 01 | 	byte	$09, $00, $f9, $f5, $e6, $f6, $f7, $ea, $f5, $02, $11, $0f, $13, $14, $11, $01
0f3e6     0C FB F9 F6 
0f3ea     EC F6 F6 FD 
0f3ee     00 02 12 10 
0f3f2     01 F9 04 02 | 	byte	$0c, $fb, $f9, $f6, $ec, $f6, $f6, $fd, $00, $02, $12, $10, $01, $f9, $04, $02
0f3f6     04 EF F6 EB 
0f3fa     EA FB FB 06 
0f3fe     0A 14 1E 1E 
0f402     17 0D 0A 08 | 	byte	$04, $ef, $f6, $eb, $ea, $fb, $fb, $06, $0a, $14, $1e, $1e, $17, $0d, $0a, $08
0f406     03 DD E2 DD 
0f40a     E7 EC DD EF 
0f40e     F6 02 13 1E 
0f412     1E 1D 1B 1A | 	byte	$03, $dd, $e2, $dd, $e7, $ec, $dd, $ef, $f6, $02, $13, $1e, $1e, $1d, $1b, $1a
0f416     16 FB FF EF 
0f41a     FA F5 DC E6 
0f41e     F4 00 07 0A 
0f422     08 02 FB F9 | 	byte	$16, $fb, $ff, $ef, $fa, $f5, $dc, $e6, $f4, $00, $07, $0a, $08, $02, $fb, $f9
0f426     FC EF F9 F8 
0f42a     04 00 04 0E 
0f42e     10 1D 24 0F 
0f432     0A 0C FB F4 | 	byte	$fc, $ef, $f9, $f8, $04, $00, $04, $0e, $10, $1d, $24, $0f, $0a, $0c, $fb, $f4
0f436     F1 DD D6 DB 
0f43a     E9 E5 FA 02 
0f43e     05 11 1E 24 
0f442     21 1D 11 18 | 	byte	$f1, $dd, $d6, $db, $e9, $e5, $fa, $02, $05, $11, $1e, $24, $21, $1d, $11, $18
0f446     00 E2 E3 EC 
0f44a     EE E7 FA F6 
0f44e     F4 00 0F 17 
0f452     12 12 0A 0B | 	byte	$00, $e2, $e3, $ec, $ee, $e7, $fa, $f6, $f4, $00, $0f, $17, $12, $12, $0a, $0b
0f456     02 E3 E2 EE 
0f45a     FF EB F4 05 
0f45e     08 0C 19 1E 
0f462     11 0C 05 05 | 	byte	$02, $e3, $e2, $ee, $ff, $eb, $f4, $05, $08, $0c, $19, $1e, $11, $0c, $05, $05
0f466     05 DB E5 F2 
0f46a     F4 ED FE 09 
0f46e     0C 13 0F 01 
0f472     01 02 FC 00 | 	byte	$05, $db, $e5, $f2, $f4, $ed, $fe, $09, $0c, $13, $0f, $01, $01, $02, $fc, $00
0f476     05 D4 E7 F4 
0f47a     F1 FF 10 1A 
0f47e     1E 24 1B 14 
0f482     11 06 FE F9 | 	byte	$05, $d4, $e7, $f4, $f1, $ff, $10, $1a, $1e, $24, $1b, $14, $11, $06, $fe, $f9
0f486     EA C6 D5 D6 
0f48a     D4 E7 F7 08 
0f48e     11 20 2A 29 
0f492     29 1D 19 15 | 	byte	$ea, $c6, $d5, $d6, $d4, $e7, $f7, $08, $11, $20, $2a, $29, $29, $1d, $19, $15
0f496     05 E6 F4 F1 
0f49a     DC DF EF F5 
0f49e     F0 07 15 02 
0f4a2     FD F6 FB 02 | 	byte	$05, $e6, $f4, $f1, $dc, $df, $ef, $f5, $f0, $07, $15, $02, $fd, $f6, $fb, $02
0f4a6     F9 F1 05 09 
0f4aa     00 0A 19 20 
0f4ae     20 22 1E 0B 
0f4b2     FE DD E7 F2 | 	byte	$f9, $f1, $05, $09, $00, $0a, $19, $20, $20, $22, $1e, $0b, $fe, $dd, $e7, $f2
0f4b6     CB C1 E0 E6 
0f4ba     E6 F3 10 1E 
0f4be     1D 2C 34 2B 
0f4c2     22 0C 0B 05 | 	byte	$cb, $c1, $e0, $e6, $e6, $f3, $10, $1e, $1d, $2c, $34, $2b, $22, $0c, $0b, $05
0f4c6     DE D8 E2 DA 
0f4ca     EE EF F0 02 
0f4ce     07 11 14 16 
0f4d2     1D FE 00 FC | 	byte	$de, $d8, $e2, $da, $ee, $ef, $f0, $02, $07, $11, $14, $16, $1d, $fe, $00, $fc
0f4d6     EA E3 F8 EE 
0f4da     00 FE 07 0D 
0f4de     0E 1F 1E 0B 
0f4e2     0F F9 04 EA | 	byte	$ea, $e3, $f8, $ee, $00, $fe, $07, $0d, $0e, $1f, $1e, $0b, $0f, $f9, $04, $ea
0f4e6     DD E8 F0 E2 
0f4ea     F7 05 0C 0D 
0f4ee     11 1D 15 00 
0f4f2     FF F1 01 F3 | 	byte	$dd, $e8, $f0, $e2, $f7, $05, $0c, $0d, $11, $1d, $15, $00, $ff, $f1, $01, $f3
0f4f6     DD E6 F0 F6 
0f4fa     04 11 27 2D 
0f4fe     1B 1E 1E 0C 
0f502     F9 EE F6 E4 | 	byte	$dd, $e6, $f0, $f6, $04, $11, $27, $2d, $1b, $1e, $1e, $0c, $f9, $ee, $f6, $e4
0f506     BB C6 CC DF 
0f50a     F2 FA 16 27 
0f50e     28 37 2C 2D 
0f512     20 0B 09 01 | 	byte	$bb, $c6, $cc, $df, $f2, $fa, $16, $27, $28, $37, $2c, $2d, $20, $0b, $09, $01
0f516     EA E2 CE DF 
0f51a     EB E2 F0 03 
0f51e     00 0A 01 05 
0f522     FE F8 00 04 | 	byte	$ea, $e2, $ce, $df, $eb, $e2, $f0, $03, $00, $0a, $01, $05, $fe, $f8, $00, $04
0f526     F7 09 FF 0A 
0f52a     16 20 21 23 
0f52e     20 26 07 E4 
0f532     DD D1 D5 D2 | 	byte	$f7, $09, $ff, $0a, $16, $20, $21, $23, $20, $26, $07, $e4, $dd, $d1, $d5, $d2
0f536     C9 D0 D5 F2 
0f53a     09 16 2E 37 
0f53e     35 40 35 1E 
0f542     08 FB FB EF | 	byte	$c9, $d0, $d5, $f2, $09, $16, $2e, $37, $35, $40, $35, $1e, $08, $fb, $fb, $ef
0f546     C3 C9 D8 ED 
0f54a     EB EF 00 11 
0f54e     14 27 16 07 
0f552     04 FE FE FF | 	byte	$c3, $c9, $d8, $ed, $eb, $ef, $00, $11, $14, $27, $16, $07, $04, $fe, $fe, $ff
0f556     E8 D8 F8 0C 
0f55a     11 00 11 20 
0f55e     19 14 0D 01 
0f562     F7 EF E8 DD | 	byte	$e8, $d8, $f8, $0c, $11, $00, $11, $20, $19, $14, $0d, $01, $f7, $ef, $e8, $dd
0f566     D6 DC F6 01 
0f56a     09 11 18 22 
0f56e     23 25 02 F9 
0f572     F8 F0 F2 E1 | 	byte	$d6, $dc, $f6, $01, $09, $11, $18, $22, $23, $25, $02, $f9, $f8, $f0, $f2, $e1
0f576     D5 E4 F8 0E 
0f57a     1D 21 32 29 
0f57e     12 1E 0A F7 
0f582     E7 D6 E4 C7 | 	byte	$d5, $e4, $f8, $0e, $1d, $21, $32, $29, $12, $1e, $0a, $f7, $e7, $d6, $e4, $c7
0f586     AC D1 EE F7 
0f58a     0C 20 32 3D 
0f58e     35 3B 23 16 
0f592     0E F9 03 E4 | 	byte	$ac, $d1, $ee, $f7, $0c, $20, $32, $3d, $35, $3b, $23, $16, $0e, $f9, $03, $e4
0f596     B9 BE DF F4 
0f59a     F9 F5 FE 0D 
0f59e     05 0C 04 04 
0f5a2     01 F9 14 EF | 	byte	$b9, $be, $df, $f4, $f9, $f5, $fe, $0d, $05, $0c, $04, $04, $01, $f9, $14, $ef
0f5a6     F0 0A 19 23 
0f5aa     28 1D 1F 28 
0f5ae     1E 05 D3 D2 
0f5b2     D2 C4 D3 A5 | 	byte	$f0, $0a, $19, $23, $28, $1d, $1f, $28, $1e, $05, $d3, $d2, $d2, $c4, $d3, $a5
0f5b6     BE E5 04 1E 
0f5ba     30 35 46 4E 
0f5be     42 38 1A 05 
0f5c2     F2 EA E0 AB | 	byte	$be, $e5, $04, $1e, $30, $35, $46, $4e, $42, $38, $1a, $05, $f2, $ea, $e0, $ab
0f5c6     BA DF E7 DD 
0f5ca     F4 08 1D 2A 
0f5ce     1D 16 06 11 
0f5d2     02 FE F3 D6 | 	byte	$ba, $df, $e7, $dd, $f4, $08, $1d, $2a, $1d, $16, $06, $11, $02, $fe, $f3, $d6
0f5d6     DF FE 14 19 
0f5da     1C 13 21 18 
0f5de     03 06 FF FE 
0f5e2     D2 D9 C7 CB | 	byte	$df, $fe, $14, $19, $1c, $13, $21, $18, $03, $06, $ff, $fe, $d2, $d9, $c7, $cb
0f5e6     E1 FB 08 19 
0f5ea     25 21 2A 2D 
0f5ee     1B 0E FC 00 
0f5f2     E2 DB BE D2 | 	byte	$e1, $fb, $08, $19, $25, $21, $2a, $2d, $1b, $0e, $fc, $00, $e2, $db, $be, $d2
0f5f6     E1 F9 16 2B 
0f5fa     2F 21 25 2B 
0f5fe     14 0C F1 E4 
0f602     CC CB BA C4 | 	byte	$e1, $f9, $16, $2b, $2f, $21, $25, $2b, $14, $0c, $f1, $e4, $cc, $cb, $ba, $c4
0f606     D6 F6 00 1A 
0f60a     32 3A 40 46 
0f60e     31 23 0D 08 
0f612     FC D6 C2 BC | 	byte	$d6, $f6, $00, $1a, $32, $3a, $40, $46, $31, $23, $0d, $08, $fc, $d6, $c2, $bc
0f616     C7 E5 F9 00 
0f61a     00 02 10 0F 
0f61e     06 0C 0F 02 
0f622     F9 E5 F6 FC | 	byte	$c7, $e5, $f9, $00, $00, $02, $10, $0f, $06, $0c, $0f, $02, $f9, $e5, $f6, $fc
0f626     0C 28 2A 25 
0f62a     25 24 1E 0D 
0f62e     ED DF D8 C9 
0f632     A8 95 BA D7 | 	byte	$0c, $28, $2a, $25, $25, $24, $1e, $0d, $ed, $df, $d8, $c9, $a8, $95, $ba, $d7
0f636     F4 16 30 44 
0f63a     4C 49 58 50 
0f63e     29 1B 09 E9 
0f642     B9 A5 C8 C6 | 	byte	$f4, $16, $30, $44, $4c, $49, $58, $50, $29, $1b, $09, $e9, $b9, $a5, $c8, $c6
0f646     CB D7 E9 04 
0f64a     1B 1B 20 26 
0f64e     15 1E 11 08 
0f652     EC D5 EA F6 | 	byte	$cb, $d7, $e9, $04, $1b, $1b, $20, $26, $15, $1e, $11, $08, $ec, $d5, $ea, $f6
0f656     02 14 1B 2B 
0f65a     1E 0C 00 0A 
0f65e     F7 FB EA D0 
0f662     C1 C1 E0 E7 | 	byte	$02, $14, $1b, $2b, $1e, $0c, $00, $0a, $f7, $fb, $ea, $d0, $c1, $c1, $e0, $e7
0f666     00 21 2C 2F 
0f66a     37 32 28 21 
0f66e     0C 07 EA BC 
0f672     C1 BD DC E7 | 	byte	$00, $21, $2c, $2f, $37, $32, $28, $21, $0c, $07, $ea, $bc, $c1, $bd, $dc, $e7
0f676     00 1A 2A 32 
0f67a     2D 26 28 1E 
0f67e     F6 F6 E6 B9 
0f682     B7 C2 E2 E2 | 	byte	$00, $1a, $2a, $32, $2d, $26, $28, $1e, $f6, $f6, $e6, $b9, $b7, $c2, $e2, $e2
0f686     EC 0A 28 3A 
0f68a     43 43 3A 32 
0f68e     14 0B FA D4 
0f692     CD BD CE DE | 	byte	$ec, $0a, $28, $3a, $43, $43, $3a, $32, $14, $0b, $fa, $d4, $cd, $bd, $ce, $de
0f696     E5 EA 05 17 
0f69a     0C 03 0C 17 
0f69e     0F 09 FD EA 
0f6a2     EB F8 12 18 | 	byte	$e5, $ea, $05, $17, $0c, $03, $0c, $17, $0f, $09, $fd, $ea, $eb, $f8, $12, $18
0f6a6     1E 28 26 23 
0f6aa     26 15 FD ED 
0f6ae     E3 BC 97 9A 
0f6b2     A8 C6 EF 07 | 	byte	$1e, $28, $26, $23, $26, $15, $fd, $ed, $e3, $bc, $97, $9a, $a8, $c6, $ef, $07
0f6b6     24 3C 51 5B 
0f6ba     5B 50 4D 33 
0f6be     0C F6 D2 B2 
0f6c2     A3 BE C8 C3 | 	byte	$24, $3c, $51, $5b, $5b, $50, $4d, $33, $0c, $f6, $d2, $b2, $a3, $be, $c8, $c3
0f6c6     D3 EF 08 14 
0f6ca     23 27 2B 2B 
0f6ce     16 11 FF FB 
0f6d2     E8 ED 05 14 | 	byte	$d3, $ef, $08, $14, $23, $27, $2b, $2b, $16, $11, $ff, $fb, $e8, $ed, $05, $14
0f6d6     0F 15 21 10 
0f6da     F4 F6 F6 FF 
0f6de     E7 CF CC CB 
0f6e2     C1 E1 06 15 | 	byte	$0f, $15, $21, $10, $f4, $f6, $f6, $ff, $e7, $cf, $cc, $cb, $c1, $e1, $06, $15
0f6e6     26 33 3C 3E 
0f6ea     3C 2F 15 0F 
0f6ee     EF C1 C1 C1 
0f6f2     C4 D7 F3 01 | 	byte	$26, $33, $3c, $3e, $3c, $2f, $15, $0f, $ef, $c1, $c1, $c1, $c4, $d7, $f3, $01
0f6f6     19 2A 30 32 
0f6fa     23 19 15 01 
0f6fe     EC DB D7 C9 
0f702     CB D9 E5 F7 | 	byte	$19, $2a, $30, $32, $23, $19, $15, $01, $ec, $db, $d7, $c9, $cb, $d9, $e5, $f7
0f706     0A 28 40 41 
0f70a     38 35 28 09 
0f70e     F5 ED E7 D0 
0f712     C4 C8 DD EF | 	byte	$0a, $28, $40, $41, $38, $35, $28, $09, $f5, $ed, $e7, $d0, $c4, $c8, $dd, $ef
0f716     F3 05 0D 05 
0f71a     0A 0F 16 13 
0f71e     FB 00 02 00 
0f722     FF 0A 21 21 | 	byte	$f3, $05, $0d, $05, $0a, $0f, $16, $13, $fb, $00, $02, $00, $ff, $0a, $21, $21
0f726     1C 1D 20 1D 
0f72a     14 F1 D4 BB 
0f72e     93 AD BB C1 
0f732     DA FC 1B 2E | 	byte	$1c, $1d, $20, $1d, $14, $f1, $d4, $bb, $93, $ad, $bb, $c1, $da, $fc, $1b, $2e
0f736     45 56 5D 57 
0f73a     58 41 18 07 
0f73e     D7 D8 C4 A8 
0f742     AD B6 C6 CA | 	byte	$45, $56, $5d, $57, $58, $41, $18, $07, $d7, $d8, $c4, $a8, $ad, $b6, $c6, $ca
0f746     E1 03 20 28 
0f74a     30 36 26 20 
0f74e     09 15 12 F4 
0f752     F9 0A 19 0B | 	byte	$e1, $03, $20, $28, $30, $36, $26, $20, $09, $15, $12, $f4, $f9, $0a, $19, $0b
0f756     07 01 F5 F3 
0f75a     EB F0 EE D9 
0f75e     C1 CA E1 DD 
0f762     F4 0D 2D 32 | 	byte	$07, $01, $f5, $f3, $eb, $f0, $ee, $d9, $c1, $ca, $e1, $dd, $f4, $0d, $2d, $32
0f766     35 3D 3F 3E 
0f76a     2C 0E F4 CC 
0f76e     C4 C7 D4 C7 
0f772     DB ED 0A 19 | 	byte	$35, $3d, $3f, $3e, $2c, $0e, $f4, $cc, $c4, $c7, $d4, $c7, $db, $ed, $0a, $19
0f776     21 19 19 21 
0f77a     25 0F 04 EE 
0f77e     EE E6 EA C4 
0f782     D2 E9 0A 0C | 	byte	$21, $19, $19, $21, $25, $0f, $04, $ee, $ee, $e6, $ea, $c4, $d2, $e9, $0a, $0c
0f786     23 2D 32 2F 
0f78a     2F 1C 05 ED 
0f78e     F4 EB D8 B4 
0f792     CE EA FE FC | 	byte	$23, $2d, $32, $2f, $2f, $1c, $05, $ed, $f4, $eb, $d8, $b4, $ce, $ea, $fe, $fc
0f796     FC FF 05 11 
0f79a     12 14 0C 08 
0f79e     0B 10 18 FE 
0f7a2     08 18 2A 15 | 	byte	$fc, $ff, $05, $11, $12, $14, $0c, $08, $0b, $10, $18, $fe, $08, $18, $2a, $15
0f7a6     0F 14 14 EE 
0f7aa     D5 C4 AD AD 
0f7ae     C2 D7 EA E5 
0f7b2     03 21 3F 46 | 	byte	$0f, $14, $14, $ee, $d5, $c4, $ad, $ad, $c2, $d7, $ea, $e5, $03, $21, $3f, $46
0f7b6     53 54 50 48 
0f7ba     2D 16 EB ED 
0f7be     D3 C6 B9 A1 
0f7c2     95 B0 DD E7 | 	byte	$53, $54, $50, $48, $2d, $16, $eb, $ed, $d3, $c6, $b9, $a1, $95, $b0, $dd, $e7
0f7c6     03 1D 2D 3A 
0f7ca     35 35 1B 23 
0f7ce     1E 26 1C FB 
0f7d2     03 07 09 EF | 	byte	$03, $1d, $2d, $3a, $35, $35, $1b, $23, $1e, $26, $1c, $fb, $03, $07, $09, $ef
0f7d6     EF E6 DF EA 
0f7da     EA CB C1 D8 
0f7de     E3 FC 06 05 
0f7e2     1B 2D 3E 3C | 	byte	$ef, $e6, $df, $ea, $ea, $cb, $c1, $d8, $e3, $fc, $06, $05, $1b, $2d, $3e, $3c
0f7e6     31 37 37 21 
0f7ea     04 DA CE CA 
0f7ee     CE E6 DA CF 
0f7f2     E7 FE 00 02 | 	byte	$31, $37, $37, $21, $04, $da, $ce, $ca, $ce, $e6, $da, $cf, $e7, $fe, $00, $02
0f7f6     0E 20 28 1E 
0f7fa     26 FF 00 00 
0f7fe     F6 F1 DC DF 
0f802     E9 01 11 0F | 	byte	$0e, $20, $28, $1e, $26, $ff, $00, $00, $f6, $f1, $dc, $df, $e9, $01, $11, $0f
0f806     14 23 2D 21 
0f80a     15 F0 F5 E4 
0f80e     DB EC DC DD 
0f812     E9 00 FE F6 | 	byte	$14, $23, $2d, $21, $15, $f0, $f5, $e4, $db, $ec, $dc, $dd, $e9, $00, $fe, $f6
0f816     FE 0A 11 14 
0f81a     16 05 15 11 
0f81e     11 1D 05 0B 
0f822     12 14 0E FE | 	byte	$fe, $0a, $11, $14, $16, $05, $15, $11, $11, $1d, $05, $0b, $12, $14, $0e, $fe
0f826     EC EE E7 DB 
0f82a     BE BF CC D9 
0f82e     E7 05 F4 0B 
0f832     20 3F 45 45 | 	byte	$ec, $ee, $e7, $db, $be, $bf, $cc, $d9, $e7, $05, $f4, $0b, $20, $3f, $45, $45
0f836     45 46 30 28 
0f83a     02 F6 E5 D3 
0f83e     BB AE 96 A5 
0f842     BC E5 F0 05 | 	byte	$45, $46, $30, $28, $02, $f6, $e5, $d3, $bb, $ae, $96, $a5, $bc, $e5, $f0, $05
0f846     1D 35 32 3C 
0f84a     26 2B 32 2E 
0f84e     2C 24 FE F7 
0f852     FA FF E5 DA | 	byte	$1d, $35, $32, $3c, $26, $2b, $32, $2e, $2c, $24, $fe, $f7, $fa, $ff, $e5, $da
0f856     DC D5 C5 BF 
0f85a     CD D8 F1 FB 
0f85e     0C 1B 13 23 
0f862     32 45 30 32 | 	byte	$dc, $d5, $c5, $bf, $cd, $d8, $f1, $fb, $0c, $1b, $13, $23, $32, $45, $30, $32
0f866     37 2B 0F EC 
0f86a     DA DA DC DD 
0f86e     DD D8 C7 D0 
0f872     E2 03 02 14 | 	byte	$37, $2b, $0f, $ec, $da, $da, $dc, $dd, $dd, $d8, $c7, $d0, $e2, $03, $02, $14
0f876     2A 28 2B 13 
0f87a     14 11 12 FF 
0f87e     00 EC EC EA 
0f882     FB FF FD 11 | 	byte	$2a, $28, $2b, $13, $14, $11, $12, $ff, $00, $ec, $ec, $ea, $fb, $ff, $fd, $11
0f886     1E 12 05 F1 
0f88a     E9 E9 F4 FF 
0f88e     FC EA EA F9 
0f892     FB 02 FE 0A | 	byte	$1e, $12, $05, $f1, $e9, $e9, $f4, $ff, $fc, $ea, $ea, $f9, $fb, $02, $fe, $0a
0f896     15 0B FF 0A 
0f89a     10 1B 18 16 
0f89e     1C 05 02 00 
0f8a2     FC F1 E4 E3 | 	byte	$15, $0b, $ff, $0a, $10, $1b, $18, $16, $1c, $05, $02, $00, $fc, $f1, $e4, $e3
0f8a6     FD E1 CA DE 
0f8aa     DC EE F4 02 
0f8ae     0A 02 15 22 
0f8b2     33 32 3A 3A | 	byte	$fd, $e1, $ca, $de, $dc, $ee, $f4, $02, $0a, $02, $15, $22, $33, $32, $3a, $3a
0f8b6     36 21 0C 06 
0f8ba     EC E1 CC BA 
0f8be     B4 B0 C4 C9 
0f8c2     E4 F1 07 24 | 	byte	$36, $21, $0c, $06, $ec, $e1, $cc, $ba, $b4, $b0, $c4, $c9, $e4, $f1, $07, $24
0f8c6     30 1F 2D 3A 
0f8ca     36 3F 37 33 
0f8ce     19 F8 F6 F2 
0f8d2     DF DA CB D3 | 	byte	$30, $1f, $2d, $3a, $36, $3f, $37, $33, $19, $f8, $f6, $f2, $df, $da, $cb, $d3
0f8d6     C3 AA CB E5 
0f8da     F1 08 11 1E 
0f8de     16 21 28 32 
0f8e2     36 33 2B 28 | 	byte	$c3, $aa, $cb, $e5, $f1, $08, $11, $1e, $16, $21, $28, $32, $36, $33, $2b, $28
0f8e6     0E F5 F5 EF 
0f8ea     EA E7 DC D3 
0f8ee     B9 CA D0 DF 
0f8f2     FC 0A 19 24 | 	byte	$0e, $f5, $f5, $ef, $ea, $e7, $dc, $d3, $b9, $ca, $d0, $df, $fc, $0a, $19, $24
0f8f6     10 1E 2C 24 
0f8fa     1C 23 11 0C 
0f8fe     EB F5 F9 EA 
0f902     F5 F8 FE 00 | 	byte	$10, $1e, $2c, $24, $1c, $23, $11, $0c, $eb, $f5, $f9, $ea, $f5, $f8, $fe, $00
0f906     DB EA F8 F5 
0f90a     F5 0D 10 08 
0f90e     F0 FA FD F6 
0f912     06 09 12 02 | 	byte	$db, $ea, $f8, $f5, $f5, $0d, $10, $08, $f0, $fa, $fd, $f6, $06, $09, $12, $02
0f916     F7 05 14 17 
0f91a     1D 23 16 03 
0f91e     FA F3 ED E8 
0f922     F0 E6 EF D0 | 	byte	$f7, $05, $14, $17, $1d, $23, $16, $03, $fa, $f3, $ed, $e8, $f0, $e6, $ef, $d0
0f926     DE EC FB FD 
0f92a     08 12 0F 00 
0f92e     0A 1A 19 18 
0f932     30 2C 28 FA | 	byte	$de, $ec, $fb, $fd, $08, $12, $0f, $00, $0a, $1a, $19, $18, $30, $2c, $28, $fa
0f936     07 0E FE EC 
0f93a     E5 DD D1 B4 
0f93e     C7 E0 D9 DD 
0f942     00 0B 0D 0D | 	byte	$07, $0e, $fe, $ec, $e5, $dd, $d1, $b4, $c7, $e0, $d9, $dd, $00, $0b, $0d, $0d
0f946     28 3C 44 3B 
0f94a     3B 41 34 FD 
0f94e     FE ED D3 CA 
0f952     D8 D0 B1 B1 | 	byte	$28, $3c, $44, $3b, $3b, $41, $34, $fd, $fe, $ed, $d3, $ca, $d8, $d0, $b1, $b1
0f956     C8 E5 FE 08 
0f95a     15 29 26 08 
0f95e     25 2B 27 2B 
0f962     30 25 F4 F2 | 	byte	$c8, $e5, $fe, $08, $15, $29, $26, $08, $25, $2b, $27, $2b, $30, $25, $f4, $f2
0f966     04 05 F7 EF 
0f96a     EA E5 D4 B4 
0f96e     CD DA E5 F6 
0f972     16 0C FB 10 | 	byte	$04, $05, $f7, $ef, $ea, $e5, $d4, $b4, $cd, $da, $e5, $f6, $16, $0c, $fb, $10
0f976     30 3A 39 32 
0f97a     21 23 10 EA 
0f97e     FB F9 E5 DE 
0f982     EB CA CE E2 | 	byte	$30, $3a, $39, $32, $21, $23, $10, $ea, $fb, $f9, $e5, $de, $eb, $ca, $ce, $e2
0f986     F8 00 02 0C 
0f98a     12 29 0C F2 
0f98e     07 F8 F9 0A 
0f992     17 EF F9 01 | 	byte	$f8, $00, $02, $0c, $12, $29, $0c, $f2, $07, $f8, $f9, $0a, $17, $ef, $f9, $01
0f996     0E 1B 1E 1A 
0f99a     19 14 ED DD 
0f99e     EA EC E5 E6 
0f9a2     F0 D6 D8 EC | 	byte	$0e, $1b, $1e, $1a, $19, $14, $ed, $dd, $ea, $ec, $e5, $e6, $f0, $d6, $d8, $ec
0f9a6     05 18 16 1F 
0f9aa     24 1F 00 F9 
0f9ae     0A 15 13 17 
0f9b2     05 F8 F4 F3 | 	byte	$05, $18, $16, $1f, $24, $1f, $00, $f9, $0a, $15, $13, $17, $05, $f8, $f4, $f3
0f9b6     07 0B 05 EB 
0f9ba     E0 EF D2 CE 
0f9be     E6 F4 EC F8 
0f9c2     E8 06 17 2A | 	byte	$07, $0b, $05, $eb, $e0, $ef, $d2, $ce, $e6, $f4, $ec, $f8, $e8, $06, $17, $2a
0f9c6     38 43 3F 3C 
0f9ca     3A 2B F6 E9 
0f9ce     CF CD D3 D5 
0f9d2     B0 C4 D1 DE | 	byte	$38, $43, $3f, $3c, $3a, $2b, $f6, $e9, $cf, $cd, $d3, $d5, $b0, $c4, $d1, $de
0f9d6     F1 11 1D 23 
0f9da     30 2E 0F 0E 
0f9de     1F 26 25 12 
0f9e2     FB 03 EF F7 | 	byte	$f1, $11, $1d, $23, $30, $2e, $0f, $0e, $1f, $26, $25, $12, $fb, $03, $ef, $f7
0f9e6     02 F9 F7 FC 
0f9ea     F6 E2 C2 C0 
0f9ee     DA F6 00 EB 
0f9f2     F1 14 20 2F | 	byte	$02, $f9, $f7, $fc, $f6, $e2, $c2, $c0, $da, $f6, $00, $eb, $f1, $14, $20, $2f
0f9f6     39 48 36 26 
0f9fa     27 11 F9 E5 
0f9fe     E5 F0 D3 A9 
0fa02     C4 E3 F4 F7 | 	byte	$39, $48, $36, $26, $27, $11, $f9, $e5, $e5, $f0, $d3, $a9, $c4, $e3, $f4, $f7
0fa06     F9 0D 1B 27 
0fa0a     31 11 02 F9 
0fa0e     ED 07 0F E6 
0fa12     F6 0C 14 0A | 	byte	$f9, $0d, $1b, $27, $31, $11, $02, $f9, $ed, $07, $0f, $e6, $f6, $0c, $14, $0a
0fa16     0A 14 1B 10 
0fa1a     0F E6 DD E7 
0fa1e     E5 ED DE D1 
0fa22     DF F2 06 0E | 	byte	$0a, $14, $1b, $10, $0f, $e6, $dd, $e7, $e5, $ed, $de, $d1, $df, $f2, $06, $0e
0fa26     1C 27 30 36 
0fa2a     2A F9 F7 01 
0fa2e     00 0C E3 DF 
0fa32     E4 F9 0F 05 | 	byte	$1c, $27, $30, $36, $2a, $f9, $f7, $01, $00, $0c, $e3, $df, $e4, $f9, $0f, $05
0fa36     0C 06 F6 F7 
0fa3a     04 DF DF F1 
0fa3e     F1 F9 D4 E8 
0fa42     02 21 3B 30 | 	byte	$0c, $06, $f6, $f7, $04, $df, $df, $f1, $f1, $f9, $d4, $e8, $02, $21, $3b, $30
0fa46     2D 32 37 35 
0fa4a     28 E5 D2 D0 
0fa4e     CB D7 C1 C6 
0fa52     D0 EC 05 FE | 	byte	$2d, $32, $37, $35, $28, $e5, $d2, $d0, $cb, $d7, $c1, $c6, $d0, $ec, $05, $fe
0fa56     0F 1B 28 3A 
0fa5a     33 00 07 17 
0fa5e     19 07 F6 F1 
0fa62     F2 FD 05 00 | 	byte	$0f, $1b, $28, $3a, $33, $00, $07, $17, $19, $07, $f6, $f1, $f2, $fd, $05, $00
0fa66     00 00 06 0A 
0fa6a     F1 B7 C8 E4 
0fa6e     F3 E2 E9 F9 
0fa72     0D 2D 42 3A | 	byte	$00, $00, $06, $0a, $f1, $b7, $c8, $e4, $f3, $e2, $e9, $f9, $0d, $2d, $42, $3a
0fa76     2F 27 2A 2A 
0fa7a     18 E9 E4 E7 
0fa7e     DA AD BE D0 
0fa82     E8 00 0C 02 | 	byte	$2f, $27, $2a, $2a, $18, $e9, $e4, $e7, $da, $ad, $be, $d0, $e8, $00, $0c, $02
0fa86     0A 16 2D 3A 
0fa8a     20 EF EF 00 
0fa8e     FA E4 FD 04 
0fa92     0F 14 19 0F | 	byte	$0a, $16, $2d, $3a, $20, $ef, $ef, $00, $fa, $e4, $fd, $04, $0f, $14, $19, $0f
0fa96     02 00 0D 16 
0fa9a     F1 D6 E0 ED 
0fa9e     DC C8 DA EB 
0faa2     00 11 28 2F | 	byte	$02, $00, $0d, $16, $f1, $d6, $e0, $ed, $dc, $c8, $da, $eb, $00, $11, $28, $2f
0faa6     28 2A 34 2C 
0faaa     05 EA EB FE 
0faae     E4 CE D9 ED 
0fab2     FE 0F 1C 11 | 	byte	$28, $2a, $34, $2c, $05, $ea, $eb, $fe, $e4, $ce, $d9, $ed, $fe, $0f, $1c, $11
0fab6     FF FA 04 0C 
0faba     F9 E8 F6 00 
0fabe     D5 D8 F1 07 
0fac2     19 2C 3A 2B | 	byte	$ff, $fa, $04, $0c, $f9, $e8, $f6, $00, $d5, $d8, $f1, $07, $19, $2c, $3a, $2b
0fac6     21 21 24 12 
0faca     E1 D0 D8 DC 
0face     BE D5 DE E9 
0fad2     FE 0C 17 1E | 	byte	$21, $21, $24, $12, $e1, $d0, $d8, $dc, $be, $d5, $de, $e9, $fe, $0c, $17, $1e
0fad6     19 1B 2E 2B 
0fada     02 FE 06 0B 
0fade     E3 E2 F4 F9 
0fae2     F8 03 1B 16 | 	byte	$19, $1b, $2e, $2b, $02, $fe, $06, $0b, $e3, $e2, $f4, $f9, $f8, $03, $1b, $16
0fae6     07 0C 0F EF 
0faea     C4 CF E1 DD 
0faee     DC F1 02 15 
0faf2     24 35 36 2F | 	byte	$07, $0c, $0f, $ef, $c4, $cf, $e1, $dd, $dc, $f1, $02, $15, $24, $35, $36, $2f
0faf6     29 22 1E 19 
0fafa     E7 DE E1 C6 
0fafe     B9 CA E2 F7 
0fb02     FE 07 1D 17 | 	byte	$29, $22, $1e, $19, $e7, $de, $e1, $c6, $b9, $ca, $e2, $f7, $fe, $07, $1d, $17
0fb06     16 23 2A 0E 
0fb0a     EA F6 FB DF 
0fb0e     EC 06 0F 13 
0fb12     1B 0C 0C 07 | 	byte	$16, $23, $2a, $0e, $ea, $f6, $fb, $df, $ec, $06, $0f, $13, $1b, $0c, $0c, $07
0fb16     00 06 02 02 
0fb1a     DC E3 D2 C6 
0fb1e     C7 E6 02 18 
0fb22     21 2A 3A 35 | 	byte	$00, $06, $02, $02, $dc, $e3, $d2, $c6, $c7, $e6, $02, $18, $21, $2a, $3a, $35
0fb26     28 2D 1A 06 
0fb2a     E2 ED CE C2 
0fb2e     D5 EC F9 03 
0fb32     0B 11 1D 0C | 	byte	$28, $2d, $1a, $06, $e2, $ed, $ce, $c2, $d5, $ec, $f9, $03, $0b, $11, $1d, $0c
0fb36     04 0A 07 07 
0fb3a     F9 00 D7 D9 
0fb3e     DF FB 0F 1B 
0fb42     21 2D 37 1C | 	byte	$04, $0a, $07, $07, $f9, $00, $d7, $d9, $df, $fb, $0f, $1b, $21, $2d, $37, $1c
0fb46     07 01 F5 F1 
0fb4a     DD E0 C6 DA 
0fb4e     D8 EF 03 0F 
0fb52     16 20 28 1C | 	byte	$07, $01, $f5, $f1, $dd, $e0, $c6, $da, $d8, $ef, $03, $0f, $16, $20, $28, $1c
0fb56     13 10 16 0D 
0fb5a     FE F1 D4 DA 
0fb5e     E6 F1 00 10 
0fb62     1C 24 23 1C | 	byte	$13, $10, $16, $0d, $fe, $f1, $d4, $da, $e6, $f1, $00, $10, $1c, $24, $23, $1c
0fb66     13 FE E9 D6 
0fb6a     D7 C0 D1 E8 
0fb6e     FB 0B 13 19 
0fb72     1E 39 33 27 | 	byte	$13, $fe, $e9, $d6, $d7, $c0, $d1, $e8, $fb, $0b, $13, $19, $1e, $39, $33, $27
0fb76     21 12 04 E2 
0fb7a     EA C5 D0 C9 
0fb7e     DE F7 FD F9 
0fb82     0C 24 26 1C | 	byte	$21, $12, $04, $e2, $ea, $c5, $d0, $c9, $de, $f7, $fd, $f9, $0c, $24, $26, $1c
0fb86     0F 00 0A EC 
0fb8a     F0 DB FA FC 
0fb8e     07 1B 1C 12 
0fb92     06 16 16 08 | 	byte	$0f, $00, $0a, $ec, $f0, $db, $fa, $fc, $07, $1b, $1c, $12, $06, $16, $16, $08
0fb96     F9 FC 03 E5 
0fb9a     C3 AF BE D4 
0fb9e     FC 19 26 2D 
0fba2     35 37 3B 35 | 	byte	$f9, $fc, $03, $e5, $c3, $af, $be, $d4, $fc, $19, $26, $2d, $35, $37, $3b, $35
0fba6     23 09 00 DF 
0fbaa     B5 B7 CE DE 
0fbae     FF 0B 04 02 
0fbb2     19 15 14 0C | 	byte	$23, $09, $00, $df, $b5, $b7, $ce, $de, $ff, $0b, $04, $02, $19, $15, $14, $0c
0fbb6     0E 16 0C F1 
0fbba     D6 E4 E1 E7 
0fbbe     0C 17 16 22 
0fbc2     25 1C 1B F9 | 	byte	$0e, $16, $0c, $f1, $d6, $e4, $e1, $e7, $0c, $17, $16, $22, $25, $1c, $1b, $f9
0fbc6     EC FB EB CE 
0fbca     C9 E4 E7 EA 
0fbce     01 11 27 2D 
0fbd2     26 1D 16 02 | 	byte	$ec, $fb, $eb, $ce, $c9, $e4, $e7, $ea, $01, $11, $27, $2d, $26, $1d, $16, $02
0fbd6     0A 14 FE D8 
0fbda     C7 C3 CE E5 
0fbde     01 14 29 32 
0fbe2     37 2D 1F 0B | 	byte	$0a, $14, $fe, $d8, $c7, $c3, $ce, $e5, $01, $14, $29, $32, $37, $2d, $1f, $0b
0fbe6     FF E5 CC BE 
0fbea     C4 E3 E5 F7 
0fbee     0F 1A 18 2B 
0fbf2     30 31 1B 0C | 	byte	$ff, $e5, $cc, $be, $c4, $e3, $e5, $f7, $0f, $1a, $18, $2b, $30, $31, $1b, $0c
0fbf6     14 08 DD D0 
0fbfa     DA F2 DD EA 
0fbfe     FB FA 09 17 
0fc02     20 26 12 F6 | 	byte	$14, $08, $dd, $d0, $da, $f2, $dd, $ea, $fb, $fa, $09, $17, $20, $26, $12, $f6
0fc06     F9 F0 D6 DA 
0fc0a     F4 07 07 0F 
0fc0e     12 1B 2A 20 
0fc12     14 17 00 FE | 	byte	$f9, $f0, $d6, $da, $f4, $07, $07, $0f, $12, $1b, $2a, $20, $14, $17, $00, $fe
0fc16     00 DA C2 AA 
0fc1a     BB D5 E7 07 
0fc1e     1B 28 3B 46 
0fc22     44 40 22 1E | 	byte	$00, $da, $c2, $aa, $bb, $d5, $e7, $07, $1b, $28, $3b, $46, $44, $40, $22, $1e
0fc26     07 BA C0 B2 
0fc2a     CE E7 F2 06 
0fc2e     07 07 18 15 
0fc32     11 10 0A 17 | 	byte	$07, $ba, $c0, $b2, $ce, $e7, $f2, $06, $07, $07, $18, $15, $11, $10, $0a, $17
0fc36     1B E5 E2 DA 
0fc3a     F4 00 FD 0A 
0fc3e     0B 11 1B 26 
0fc42     1B 00 E7 FF | 	byte	$1b, $e5, $e2, $da, $f4, $00, $fd, $0a, $0b, $11, $1b, $26, $1b, $00, $e7, $ff
0fc46     F1 CB CD D8 
0fc4a     ED F9 04 18 
0fc4e     21 30 3B 28 
0fc52     16 05 FF 0C | 	byte	$f1, $cb, $cd, $d8, $ed, $f9, $04, $18, $21, $30, $3b, $28, $16, $05, $ff, $0c
0fc56     EB D4 B4 B2 
0fc5a     DA EF F6 0F 
0fc5e     20 36 43 47 
0fc62     32 16 00 03 | 	byte	$eb, $d4, $b4, $b2, $da, $ef, $f6, $0f, $20, $36, $43, $47, $32, $16, $00, $03
0fc66     C5 C4 B7 CB 
0fc6a     EA F6 02 0A 
0fc6e     04 20 2F 27 
0fc72     16 11 0C 0A | 	byte	$c5, $c4, $b7, $cb, $ea, $f6, $02, $0a, $04, $20, $2f, $27, $16, $11, $0c, $0a
0fc76     E2 E7 E5 EF 
0fc7a     05 FA F4 F8 
0fc7e     FB 0E 23 2A 
0fc82     0E F1 EC EA | 	byte	$e2, $e7, $e5, $ef, $05, $fa, $f4, $f8, $fb, $0e, $23, $2a, $0e, $f1, $ec, $ea
0fc86     D7 D5 E1 EC 
0fc8a     00 0F 1E 2C 
0fc8e     2C 34 30 25 
0fc92     12 FD F1 D6 | 	byte	$d7, $d5, $e1, $ec, $00, $0f, $1e, $2c, $2c, $34, $30, $25, $12, $fd, $f1, $d6
0fc96     BB B2 A8 C5 
0fc9a     EB 02 11 21 
0fc9e     28 3A 4A 47 
0fca2     2D 11 09 E9 | 	byte	$bb, $b2, $a8, $c5, $eb, $02, $11, $21, $28, $3a, $4a, $47, $2d, $11, $09, $e9
0fca6     BB C1 C9 D7 
0fcaa     FB 09 07 00 
0fcae     01 09 1F 23 
0fcb2     14 0C F7 F4 | 	byte	$bb, $c1, $c9, $d7, $fb, $09, $07, $00, $01, $09, $1f, $23, $14, $0c, $f7, $f4
0fcb6     DF E4 F4 05 
0fcba     17 FB F7 0E 
0fcbe     11 1D 2B 17 
0fcc2     F4 F6 DD DF | 	byte	$df, $e4, $f4, $05, $17, $fb, $f7, $0e, $11, $1d, $2b, $17, $f4, $f6, $dd, $df
0fcc6     CF D3 DC EE 
0fcca     09 18 22 2D 
0fcce     32 3F 28 12 
0fcd2     04 00 C9 C2 | 	byte	$cf, $d3, $dc, $ee, $09, $18, $22, $2d, $32, $3f, $28, $12, $04, $00, $c9, $c2
0fcd6     B9 B0 D0 E7 
0fcda     02 12 27 35 
0fcde     37 3C 3A 29 
0fce2     0F 08 ED C9 | 	byte	$b9, $b0, $d0, $e7, $02, $12, $27, $35, $37, $3c, $3a, $29, $0f, $08, $ed, $c9
0fce6     B3 B9 E0 F0 
0fcea     01 0C 00 01 
0fcee     05 1B 26 32 
0fcf2     1B 02 F3 D6 | 	byte	$b3, $b9, $e0, $f0, $01, $0c, $00, $01, $05, $1b, $26, $32, $1b, $02, $f3, $d6
0fcf6     EC F2 07 0F 
0fcfa     09 F7 FC 0D 
0fcfe     13 12 0E 01 
0fd02     F6 DA DA C3 | 	byte	$ec, $f2, $07, $0f, $09, $f7, $fc, $0d, $13, $12, $0e, $01, $f6, $da, $da, $c3
0fd06     CA DA F9 0D 
0fd0a     23 33 35 3C 
0fd0e     3D 3C 25 14 
0fd12     F9 D0 C2 AC | 	byte	$ca, $da, $f9, $0d, $23, $33, $35, $3c, $3d, $3c, $25, $14, $f9, $d0, $c2, $ac
0fd16     AA BC D8 ED 
0fd1a     09 28 2F 38 
0fd1e     38 1E 22 28 
0fd22     14 02 F2 C6 | 	byte	$aa, $bc, $d8, $ed, $09, $28, $2f, $38, $38, $1e, $22, $28, $14, $02, $f2, $c6
0fd26     C1 CD F0 0A 
0fd2a     10 05 F7 03 
0fd2e     0E 0F 1E 1B 
0fd32     00 F1 ED DC | 	byte	$c1, $cd, $f0, $0a, $10, $05, $f7, $03, $0e, $0f, $1e, $1b, $00, $f1, $ed, $dc
0fd36     E2 F0 F9 0A 
0fd3a     0E 11 11 21 
0fd3e     26 16 05 01 
0fd42     E9 E2 DF C3 | 	byte	$e2, $f0, $f9, $0a, $0e, $11, $11, $21, $26, $16, $05, $01, $e9, $e2, $df, $c3
0fd46     C8 EC 05 17 
0fd4a     19 29 2A 38 
0fd4e     3E 26 0A EC 
0fd52     C9 C9 D3 B2 | 	byte	$c8, $ec, $05, $17, $19, $29, $2a, $38, $3e, $26, $0a, $ec, $c9, $c9, $d3, $b2
0fd56     BC DE FA 0F 
0fd5a     1C 38 43 47 
0fd5e     30 16 19 16 
0fd62     FB E4 DE B9 | 	byte	$bc, $de, $fa, $0f, $1c, $38, $43, $47, $30, $16, $19, $16, $fb, $e4, $de, $b9
0fd66     BB DD FA 02 
0fd6a     E5 F1 05 16 
0fd6e     1D 23 2B 20 
0fd72     0C F6 FB EC | 	byte	$bb, $dd, $fa, $02, $e5, $f1, $05, $16, $1d, $23, $2b, $20, $0c, $f6, $fb, $ec
0fd76     F3 02 00 0F 
0fd7a     0C 0C 0E 08 
0fd7e     0A F6 F4 EC 
0fd82     D7 BE C8 C8 | 	byte	$f3, $02, $00, $0f, $0c, $0c, $0e, $08, $0a, $f6, $f4, $ec, $d7, $be, $c8, $c8
0fd86     E3 0A 22 35 
0fd8a     3A 3F 47 3A 
0fd8e     3A 23 08 D0 
0fd92     BF CB BE A5 | 	byte	$e3, $0a, $22, $35, $3a, $3f, $47, $3a, $3a, $23, $08, $d0, $bf, $cb, $be, $a5
0fd96     B8 D8 F5 11 
0fd9a     2A 30 2C 1E 
0fd9e     21 1F 20 09 
0fda2     04 06 F1 CC | 	byte	$b8, $d8, $f5, $11, $2a, $30, $2c, $1e, $21, $1f, $20, $09, $04, $06, $f1, $cc
0fda6     D4 EF 07 0D 
0fdaa     F8 F6 0F 0C 
0fdae     0E 11 07 F6 
0fdb2     FB 02 F1 CA | 	byte	$d4, $ef, $07, $0d, $f8, $f6, $0f, $0c, $0e, $11, $07, $f6, $fb, $02, $f1, $ca
0fdb6     D8 F9 0C 1E 
0fdba     1E 21 2A 1C 
0fdbe     0B 00 E9 E3 
0fdc2     EF ED C9 CE | 	byte	$d8, $f9, $0c, $1e, $1e, $21, $2a, $1c, $0b, $00, $e9, $e3, $ef, $ed, $c9, $ce
0fdc6     EA 06 16 20 
0fdca     2A 2B 37 28 
0fdce     0C F7 CE C9 
0fdd2     DA E2 C7 CC | 	byte	$ea, $06, $16, $20, $2a, $2b, $37, $28, $0c, $f7, $ce, $c9, $da, $e2, $c7, $cc
0fdd6     E4 FF 14 26 
0fdda     3A 44 44 27 
0fdde     16 15 EF EA 
0fde2     F3 F6 D0 C1 | 	byte	$e4, $ff, $14, $26, $3a, $44, $44, $27, $16, $15, $ef, $ea, $f3, $f6, $d0, $c1
0fde6     D0 D9 E2 E6 
0fdea     FF 0C 1E 26 
0fdee     2A 23 0A 0A 
0fdf2     1A 19 FA F2 | 	byte	$d0, $d9, $e2, $e6, $ff, $0c, $1e, $26, $2a, $23, $0a, $0a, $1a, $19, $fa, $f2
0fdf6     F1 FB 08 0E 
0fdfa     0A 07 0B FB 
0fdfe     EF D3 BB CC 
0fe02     E0 EF DE EE | 	byte	$f1, $fb, $08, $0e, $0a, $07, $0b, $fb, $ef, $d3, $bb, $cc, $e0, $ef, $de, $ee
0fe06     0F 2D 3A 3F 
0fe0a     43 3A 3D 34 
0fe0e     26 E2 C3 C8 
0fe12     CB C5 B9 C1 | 	byte	$0f, $2d, $3a, $3f, $43, $3a, $3d, $34, $26, $e2, $c3, $c8, $cb, $c5, $b9, $c1
0fe16     DF F9 02 05 
0fe1a     22 27 2D 33 
0fe1e     25 0A 00 0C 
0fe22     15 0C E7 E0 | 	byte	$df, $f9, $02, $05, $22, $27, $2d, $33, $25, $0a, $00, $0c, $15, $0c, $e7, $e0
0fe26     F4 F8 E9 F1 
0fe2a     FE FC 0A 14 
0fe2e     00 FA F2 F6 
0fe32     FB F0 ED EC | 	byte	$f4, $f8, $e9, $f1, $fe, $fc, $0a, $14, $00, $fa, $f2, $f6, $fb, $f0, $ed, $ec
0fe36     FD 0F 1F 26 
0fe3a     1E 1E 17 06 
0fe3e     ED EA E6 EE 
0fe42     F4 E4 DD EB | 	byte	$fd, $0f, $1f, $26, $1e, $1e, $17, $06, $ed, $ea, $e6, $ee, $f4, $e4, $dd, $eb
0fe46     05 1E 26 28 
0fe4a     16 05 11 17 
0fe4e     F4 D5 D8 E2 
0fe52     E1 DD E4 EF | 	byte	$05, $1e, $26, $28, $16, $05, $11, $17, $f4, $d5, $d8, $e2, $e1, $dd, $e4, $ef
0fe56     06 1A 2A 36 
0fe5a     32 20 2E 19 
0fe5e     FB E8 EC FB 
0fe62     03 DF B9 C4 | 	byte	$06, $1a, $2a, $36, $32, $20, $2e, $19, $fb, $e8, $ec, $fb, $03, $df, $b9, $c4
0fe66     D5 DD F8 02 
0fe6a     0C 16 2B 17 
0fe6e     18 0E 16 29 
0fe72     2D 0A EE EF | 	byte	$d5, $dd, $f8, $02, $0c, $16, $2b, $17, $18, $0e, $16, $29, $2d, $0a, $ee, $ef
0fe76     FB 05 0B 00 
0fe7a     FE FA DE BB 
0fe7e     CA C6 E0 01 
0fe82     01 FC 02 16 | 	byte	$fb, $05, $0b, $00, $fe, $fa, $de, $bb, $ca, $c6, $e0, $01, $01, $fc, $02, $16
0fe86     2E 3F 42 38 
0fe8a     34 30 28 FF 
0fe8e     E2 CD CD C4 
0fe92     C4 D2 D5 DC | 	byte	$2e, $3f, $42, $38, $34, $30, $28, $ff, $e2, $cd, $cd, $c4, $c4, $d2, $d5, $dc
0fe96     E2 FA 0C 19 
0fe9a     2C 38 29 20 
0fe9e     12 07 0B 20 
0fea2     0B 05 ED EC | 	byte	$e2, $fa, $0c, $19, $2c, $38, $29, $20, $12, $07, $0b, $20, $0b, $05, $ed, $ec
0fea6     D8 DD EC F4 
0feaa     FC 01 F9 02 
0feae     F1 E8 F9 10 
0feb2     F9 07 03 08 | 	byte	$d8, $dd, $ec, $f4, $fc, $01, $f9, $02, $f1, $e8, $f9, $10, $f9, $07, $03, $08
0feb6     15 24 20 11 
0feba     0C F3 F4 FD 
0febe     F2 F1 EA F7 
0fec2     E7 FB F8 08 | 	byte	$15, $24, $20, $11, $0c, $f3, $f4, $fd, $f2, $f1, $ea, $f7, $e7, $fb, $f8, $08
0fec6     1E 1D 07 03 
0feca     08 F5 08 05 
0fece     F4 E1 DF EB 
0fed2     E5 F8 FB 0E | 	byte	$1e, $1d, $07, $03, $08, $f5, $08, $05, $f4, $e1, $df, $eb, $e5, $f8, $fb, $0e
0fed6     21 2D 28 19 
0feda     1A 06 16 03 
0fede     F6 F3 F6 E7 
0fee2     DF DB C6 CF | 	byte	$21, $2d, $28, $19, $1a, $06, $16, $03, $f6, $f3, $f6, $e7, $df, $db, $c6, $cf
0fee6     E5 00 08 0D 
0feea     12 0F 1F 16 
0feee     21 28 38 23 
0fef2     0C F7 E9 F6 | 	byte	$e5, $00, $08, $0d, $12, $0f, $1f, $16, $21, $28, $38, $23, $0c, $f7, $e9, $f6
0fef6     07 06 F7 E0 
0fefa     B2 BF DC D4 
0fefe     E4 F9 14 0A 
0ff02     11 1C 20 2D | 	byte	$07, $06, $f7, $e0, $b2, $bf, $dc, $d4, $e4, $f9, $14, $0a, $11, $1c, $20, $2d
0ff06     3A 37 32 29 
0ff0a     0D 0F FB DC 
0ff0e     CB CC D6 C9 
0ff12     D3 CB D8 F4 | 	byte	$3a, $37, $32, $29, $0d, $0f, $fb, $dc, $cb, $cc, $d6, $c9, $d3, $cb, $d8, $f4
0ff16     04 0D 1C 25 
0ff1a     27 38 2A 1F 
0ff1e     11 14 1F 0C 
0ff22     07 F4 DD CE | 	byte	$04, $0d, $1c, $25, $27, $38, $2a, $1f, $11, $14, $1f, $0c, $07, $f4, $dd, $ce
0ff26     D8 E5 EE E8 
0ff2a     F4 FC E4 F6 
0ff2e     04 15 19 09 
0ff32     17 11 0F 1E | 	byte	$d8, $e5, $ee, $e8, $f4, $fc, $e4, $f6, $04, $15, $19, $09, $17, $11, $0f, $1e
0ff36     1F 11 F8 E5 
0ff3a     E7 00 FA 00 
0ff3e     EF F7 F1 F1 
0ff42     02 0B 06 07 | 	byte	$1f, $11, $f8, $e5, $e7, $00, $fa, $00, $ef, $f7, $f1, $f1, $02, $0b, $06, $07
0ff46     05 0F FC F3 
0ff4a     01 12 FD F4 
0ff4e     F7 F5 E7 F0 
0ff52     FC 00 11 22 | 	byte	$05, $0f, $fc, $f3, $01, $12, $fd, $f4, $f7, $f5, $e7, $f0, $fc, $00, $11, $22
0ff56     23 15 F9 03 
0ff5a     13 11 0C 00 
0ff5e     E6 F4 E5 E7 
0ff62     D3 D5 D9 E9 | 	byte	$23, $15, $f9, $03, $13, $11, $0c, $00, $e6, $f4, $e5, $e7, $d3, $d5, $d9, $e9
0ff66     01 0F FD 0F 
0ff6a     1F 16 1E 30 
0ff6e     3B 42 14 02 
0ff72     F7 E8 F6 FF | 	byte	$01, $0f, $fd, $0f, $1f, $16, $1e, $30, $3b, $42, $14, $02, $f7, $e8, $f6, $ff
0ff76     F4 B9 B8 BE 
0ff7a     D7 DE F3 FF 
0ff7e     11 24 14 21 
0ff82     28 22 2F 2E | 	byte	$f4, $b9, $b8, $be, $d7, $de, $f3, $ff, $11, $24, $14, $21, $28, $22, $2f, $2e
0ff86     33 15 14 07 
0ff8a     FC E9 D2 DA 
0ff8e     DE D6 B7 CE 
0ff92     DF E5 FE 09 | 	byte	$33, $15, $14, $07, $fc, $e9, $d2, $da, $de, $d6, $b7, $ce, $df, $e5, $fe, $09
0ff96     15 05 24 34 
0ff9a     3A 31 2D 20 
0ff9e     1F 19 05 F1 
0ffa2     E8 CB C3 D4 | 	byte	$15, $05, $24, $34, $3a, $31, $2d, $20, $1f, $19, $05, $f1, $e8, $cb, $c3, $d4
0ffa6     E1 DD EC E8 
0ffaa     EC F8 0B 1B 
0ffae     2E 23 19 1D 
0ffb2     17 16 13 13 | 	byte	$e1, $dd, $ec, $e8, $ec, $f8, $0b, $1b, $2e, $23, $19, $1d, $17, $16, $13, $13
0ffb6     E6 DE ED EB 
0ffba     FC 01 04 F6 
0ffbe     05 F8 F9 00 
0ffc2     F2 F6 02 0F | 	byte	$e6, $de, $ed, $eb, $fc, $01, $04, $f6, $05, $f8, $f9, $00, $f2, $f6, $02, $0f
0ffc6     F4 FD 07 FF 
0ffca     0E FF 03 02 
0ffce     08 EF F4 03 
0ffd2     05 0B 15 13 | 	byte	$f4, $fd, $07, $ff, $0e, $ff, $03, $02, $08, $ef, $f4, $03, $05, $0b, $15, $13
0ffd6     E6 FB 0E 0C 
0ffda     1B 00 FE FA 
0ffde     05 E9 DE DB 
0ffe2     D7 DD F2 FC | 	byte	$e6, $fb, $0e, $0c, $1b, $00, $fe, $fa, $05, $e9, $de, $db, $d7, $dd, $f2, $fc
0ffe6     FC 0F 11 16 
0ffea     28 2C 37 3B 
0ffee     3D 09 FE F9 
0fff2     EF E5 D8 B7 | 	byte	$fc, $0f, $11, $16, $28, $2c, $37, $3b, $3d, $09, $fe, $f9, $ef, $e5, $d8, $b7
0fff6     AF C4 C9 E1 
0fffa     FB 07 1A 24 
0fffe     35 22 26 20 
10002     1E 20 2D 0D | 	byte	$af, $c4, $c9, $e1, $fb, $07, $1a, $24, $35, $22, $26, $20, $1e, $20, $2d, $0d
10006     0D 0E F5 EA 
1000a     ED DF D8 D3 
1000e     D8 C6 DB E7 
10012     F2 FC 10 FE | 	byte	$0d, $0e, $f5, $ea, $ed, $df, $d8, $d3, $d8, $c6, $db, $e7, $f2, $fc, $10, $fe
10016     14 27 35 43 
1001a     44 34 26 28 
1001e     19 F1 EA C4 
10022     B9 C5 D1 C2 | 	byte	$14, $27, $35, $43, $44, $34, $26, $28, $19, $f1, $ea, $c4, $b9, $c5, $d1, $c2
10026     D2 DB EB 02 
1002a     1A 20 27 38 
1002e     3A 26 26 11 
10032     11 07 EA DA | 	byte	$d2, $db, $eb, $02, $1a, $20, $27, $38, $3a, $26, $26, $11, $11, $07, $ea, $da
10036     DA E0 EE 01 
1003a     0C FF 04 11 
1003e     05 EC F2 E7 
10042     F4 08 F8 00 | 	byte	$da, $e0, $ee, $01, $0c, $ff, $04, $11, $05, $ec, $f2, $e7, $f4, $08, $f8, $00
10046     04 06 0E 0B 
1004a     19 06 05 0A 
1004e     00 FB 01 F9 
10052     05 05 DF EE | 	byte	$04, $06, $0e, $0b, $19, $06, $05, $0a, $00, $fb, $01, $f9, $05, $05, $df, $ee
10056     F5 FE 01 0D 
1005a     1B 10 08 11 
1005e     EF ED DB D0 
10062     E2 EF ED 00 | 	byte	$f5, $fe, $01, $0d, $1b, $10, $08, $11, $ef, $ed, $db, $d0, $e2, $ef, $ed, $00
10066     03 18 25 2E 
1006a     3E 36 32 2D 
1006e     0A 06 F7 C7 
10072     CE B9 B2 B3 | 	byte	$03, $18, $25, $2e, $3e, $36, $32, $2d, $0a, $06, $f7, $c7, $ce, $b9, $b2, $b3
10076     C1 DB F6 0D 
1007a     26 28 36 45 
1007e     2A 2B 1A 0D 
10082     17 02 06 08 | 	byte	$c1, $db, $f6, $0d, $26, $28, $36, $45, $2a, $2b, $1a, $0d, $17, $02, $06, $08
10086     F7 EE EF EC 
1008a     D6 CB D7 E3 
1008e     DA F1 E9 F6 
10092     0A F4 0C 14 | 	byte	$f7, $ee, $ef, $ec, $d6, $cb, $d7, $e3, $da, $f1, $e9, $f6, $0a, $f4, $0c, $14
10096     2B 3A 44 42 
1009a     48 2E 1B 0F 
1009e     EF E2 AD B5 
100a2     BA 99 BB CA | 	byte	$2b, $3a, $44, $42, $48, $2e, $1b, $0f, $ef, $e2, $ad, $b5, $ba, $99, $bb, $ca
100a6     E7 05 21 28 
100aa     3D 37 3A 3C 
100ae     28 34 13 07 
100b2     EA D3 D5 C8 | 	byte	$e7, $05, $21, $28, $3d, $37, $3a, $3c, $28, $34, $13, $07, $ea, $d3, $d5, $c8
100b6     E0 F0 05 00 
100ba     11 07 FC 00 
100be     F4 FE EB FD 
100c2     ED F6 03 0A | 	byte	$e0, $f0, $05, $00, $11, $07, $fc, $00, $f4, $fe, $eb, $fd, $ed, $f6, $03, $0a
100c6     14 14 20 20 
100ca     1D 0B 02 FE 
100ce     F4 00 F4 FE 
100d2     DD E5 E2 DE | 	byte	$14, $14, $20, $20, $1d, $0b, $02, $fe, $f4, $00, $f4, $fe, $dd, $e5, $e2, $de
100d6     F2 07 18 21 
100da     2D 23 0A FB 
100de     E9 EB D6 E1 
100e2     D2 EE F4 08 | 	byte	$f2, $07, $18, $21, $2d, $23, $0a, $fb, $e9, $eb, $d6, $e1, $d2, $ee, $f4, $08
100e6     15 28 3C 43 
100ea     44 31 17 FE 
100ee     E3 E2 DA C4 
100f2     AA BE C6 D4 | 	byte	$15, $28, $3c, $43, $44, $31, $17, $fe, $e3, $e2, $da, $c4, $aa, $be, $c6, $d4
100f6     E5 00 1A 33 
100fa     41 49 3F 2F 
100fe     21 1A 07 F1 
10102     F3 FE F6 F8 | 	byte	$e5, $00, $1a, $33, $41, $49, $3f, $2f, $21, $1a, $07, $f1, $f3, $fe, $f6, $f8
10106     E4 D9 D9 F2 
1010a     EA EA E6 E2 
1010e     E9 FB FC ED 
10112     06 16 23 30 | 	byte	$e4, $d9, $d9, $f2, $ea, $ea, $e6, $e2, $e9, $fb, $fc, $ed, $06, $16, $23, $30
10116     38 3F 3C 3E 
1011a     35 27 0C D9 
1011e     C9 BA 98 82 
10122     AB BB D8 F9 | 	byte	$38, $3f, $3c, $3e, $35, $27, $0c, $d9, $c9, $ba, $98, $82, $ab, $bb, $d8, $f9
10126     16 2C 3F 51 
1012a     48 4D 42 1E 
1012e     19 16 F1 D3 
10132     D3 CE E3 E8 | 	byte	$16, $2c, $3f, $51, $48, $4d, $42, $1e, $19, $16, $f1, $d3, $d3, $ce, $e3, $e8
10136     EC F1 F4 FB 
1013a     FA 0D 0F EB 
1013e     FD 03 EC F0 
10142     00 FE 17 1E | 	byte	$ec, $f1, $f4, $fb, $fa, $0d, $0f, $eb, $fd, $03, $ec, $f0, $00, $fe, $17, $1e
10146     22 23 27 2C 
1014a     10 04 F8 DC 
1014e     F0 EB D1 D2 
10152     D0 D5 F7 07 | 	byte	$22, $23, $27, $2c, $10, $04, $f8, $dc, $f0, $eb, $d1, $d2, $d0, $d5, $f7, $07
10156     12 1D 2D 36 
1015a     27 1B 06 E7 
1015e     F6 DD D8 DA 
10162     E5 F0 02 12 | 	byte	$12, $1d, $2d, $36, $27, $1b, $06, $e7, $f6, $dd, $d8, $da, $e5, $f0, $02, $12
10166     2C 3B 40 3A 
1016a     1F 07 E8 D3 
1016e     E3 C0 BF C8 
10172     D1 E4 F4 FB | 	byte	$2c, $3b, $40, $3a, $1f, $07, $e8, $d3, $e3, $c0, $bf, $c8, $d1, $e4, $f4, $fb
10176     0C 22 37 45 
1017a     42 42 1E 06 
1017e     05 EA FC F9 
10182     E3 E1 E2 D3 | 	byte	$0c, $22, $37, $45, $42, $42, $1e, $06, $05, $ea, $fc, $f9, $e3, $e1, $e2, $d3
10186     E3 F6 06 06 
1018a     FE FA DE E5 
1018e     E5 E3 07 14 
10192     21 2B 3C 3C | 	byte	$e3, $f6, $06, $06, $fe, $fa, $de, $e5, $e5, $e3, $07, $14, $21, $2b, $3c, $3c
10196     35 32 39 33 
1019a     18 F0 BE B9 
1019e     96 8E B0 B7 
101a2     CF EA 0B 21 | 	byte	$35, $32, $39, $33, $18, $f0, $be, $b9, $96, $8e, $b0, $b7, $cf, $ea, $0b, $21
101a6     35 47 53 56 
101aa     58 3E 19 0C 
101ae     E9 D0 D8 D3 
101b2     E9 F9 E5 D7 | 	byte	$35, $47, $53, $56, $58, $3e, $19, $0c, $e9, $d0, $d8, $d3, $e9, $f9, $e5, $d7
101b6     E2 EA F9 09 
101ba     16 FE FB F1 
101be     EF F6 0F 03 
101c2     18 24 23 21 | 	byte	$e2, $ea, $f9, $09, $16, $fe, $fb, $f1, $ef, $f6, $0f, $03, $18, $24, $23, $21
101c6     26 2D 29 14 
101ca     07 DE E3 B1 
101ce     B2 BF D0 D3 
101d2     F4 0B 19 23 | 	byte	$26, $2d, $29, $14, $07, $de, $e3, $b1, $b2, $bf, $d0, $d3, $f4, $0b, $19, $23
101d6     2E 3B 3A 23 
101da     1C F0 FC DF 
101de     EC DC E8 E4 
101e2     F4 05 1C 28 | 	byte	$2e, $3b, $3a, $23, $1c, $f0, $fc, $df, $ec, $dc, $e8, $e4, $f4, $05, $1c, $28
101e6     21 1A 22 0C 
101ea     07 DF DC C9 
101ee     C4 CB D8 EB 
101f2     01 12 15 1D | 	byte	$21, $1a, $22, $0c, $07, $df, $dc, $c9, $c4, $cb, $d8, $eb, $01, $12, $15, $1d
101f6     2B 3B 3E 38 
101fa     27 FF EA EC 
101fe     F0 E6 DD E5 
10202     E6 DF EA F4 | 	byte	$2b, $3b, $3e, $38, $27, $ff, $ea, $ec, $f0, $e6, $dd, $e5, $e6, $df, $ea, $f4
10206     09 19 1E 0F 
1020a     FA DF D0 E2 
1020e     F4 07 1B 27 
10212     33 34 33 31 | 	byte	$09, $19, $1e, $0f, $fa, $df, $d0, $e2, $f4, $07, $1b, $27, $33, $34, $33, $31
10216     38 32 0C E7 
1021a     CB A8 A4 B2 
1021e     B6 BE D6 E3 
10222     02 1B 30 3A | 	byte	$38, $32, $0c, $e7, $cb, $a8, $a4, $b2, $b6, $be, $d6, $e3, $02, $1b, $30, $3a
10226     4A 58 57 47 
1022a     28 FD F1 DD 
1022e     D2 CA EA E3 
10232     E8 EB E7 E5 | 	byte	$4a, $58, $57, $47, $28, $fd, $f1, $dd, $d2, $ca, $ea, $e3, $e8, $eb, $e7, $e5
10236     F4 07 15 11 
1023a     F5 E0 F4 FD 
1023e     FB 02 26 26 
10242     28 2F 24 21 | 	byte	$f4, $07, $15, $11, $f5, $e0, $f4, $fd, $fb, $02, $26, $26, $28, $2f, $24, $21
10246     26 29 19 FB 
1024a     C0 9F AC B5 
1024e     B4 D0 F2 04 
10252     1E 28 2D 3D | 	byte	$26, $29, $19, $fb, $c0, $9f, $ac, $b5, $b4, $d0, $f2, $04, $1e, $28, $2d, $3d
10256     40 32 26 11 
1025a     DF E8 F8 F6 
1025e     D4 EA F1 F8 
10262     0F 10 0B 0D | 	byte	$40, $32, $26, $11, $df, $e8, $f8, $f6, $d4, $ea, $f1, $f8, $0f, $10, $0b, $0d
10266     12 14 07 FB 
1026a     D0 DD D5 D8 
1026e     CD EC 04 13 
10272     2D 2C 30 32 | 	byte	$12, $14, $07, $fb, $d0, $dd, $d5, $d8, $cd, $ec, $04, $13, $2d, $2c, $30, $32
10276     38 36 20 07 
1027a     E0 E3 DD CC 
1027e     C5 DF E8 E5 
10282     FB 02 0A 19 | 	byte	$38, $36, $20, $07, $e0, $e3, $dd, $cc, $c5, $df, $e8, $e5, $fb, $02, $0a, $19
10286     25 2D 10 ED 
1028a     D8 E1 EF EC 
1028e     05 23 24 28 
10292     30 36 2C 1E | 	byte	$25, $2d, $10, $ed, $d8, $e1, $ef, $ec, $05, $23, $24, $28, $30, $36, $2c, $1e
10296     0F FD DE A8 
1029a     A8 BE CB B9 
1029e     D7 F6 FA 12 
102a2     29 3C 40 4B | 	byte	$0f, $fd, $de, $a8, $a8, $be, $cb, $b9, $d7, $f6, $fa, $12, $29, $3c, $40, $4b
102a6     53 4C 38 FB 
102aa     EF E7 DB C1 
102ae     C9 DF DC ED 
102b2     F4 F3 00 06 | 	byte	$53, $4c, $38, $fb, $ef, $e7, $db, $c1, $c9, $df, $dc, $ed, $f4, $f3, $00, $06
102b6     16 17 0A E3 
102ba     F0 F9 F1 F6 
102be     14 21 25 35 
102c2     32 2A 21 25 | 	byte	$16, $17, $0a, $e3, $f0, $f9, $f1, $f6, $14, $21, $25, $35, $32, $2a, $21, $25
102c6     27 00 D1 A7 
102ca     A7 AD A5 C1 
102ce     EA 02 11 2B 
102d2     37 3A 35 3C | 	byte	$27, $00, $d1, $a7, $a7, $ad, $a5, $c1, $ea, $02, $11, $2b, $37, $3a, $35, $3c
102d6     3D 24 FF E5 
102da     F2 F1 E0 DB 
102de     F6 F9 F0 00 
102e2     07 FF 0A 0F | 	byte	$3d, $24, $ff, $e5, $f2, $f1, $e0, $db, $f6, $f9, $f0, $00, $07, $ff, $0a, $0f
102e6     11 07 EF CE 
102ea     E2 DB D2 E7 
102ee     06 12 26 35 
102f2     36 35 3A 37 | 	byte	$11, $07, $ef, $ce, $e2, $db, $d2, $e7, $06, $12, $26, $35, $36, $35, $3a, $37
102f6     28 09 F3 C9 
102fa     D0 B7 AD D0 
102fe     DC E5 04 0E 
10302     17 20 2B 32 | 	byte	$28, $09, $f3, $c9, $d0, $b7, $ad, $d0, $dc, $e5, $04, $0e, $17, $20, $2b, $32
10306     30 01 F4 E8 
1030a     E7 E0 EB 08 
1030e     25 1F 23 27 
10312     21 0C 08 FE | 	byte	$30, $01, $f4, $e8, $e7, $e0, $eb, $08, $25, $1f, $23, $27, $21, $0c, $08, $fe
10316     FA C6 BC BE 
1031a     C3 CC CD F0 
1031e     0F 10 21 32 
10322     41 44 47 44 | 	byte	$fa, $c6, $bc, $be, $c3, $cc, $cd, $f0, $0f, $10, $21, $32, $41, $44, $47, $44
10326     3C 11 EC E1 
1032a     D3 BF BC D4 
1032e     D9 E2 FE FE 
10332     03 11 1C 1A | 	byte	$3c, $11, $ec, $e1, $d3, $bf, $bc, $d4, $d9, $e2, $fe, $fe, $03, $11, $1c, $1a
10336     17 02 F3 F2 
1033a     E9 EC 00 0B 
1033e     1A 28 39 32 
10342     2D 21 14 10 | 	byte	$17, $02, $f3, $f2, $e9, $ec, $00, $0b, $1a, $28, $39, $32, $2d, $21, $14, $10
10346     EC C3 A9 AE 
1034a     A6 AF D4 FD 
1034e     0E 1B 33 40 
10352     31 33 3C 3F | 	byte	$ec, $c3, $a9, $ae, $a6, $af, $d4, $fd, $0e, $1b, $33, $40, $31, $33, $3c, $3f
10356     0F 06 EA E7 
1035a     EA DE DE EA 
1035e     F3 F4 F8 FE 
10362     07 07 09 16 | 	byte	$0f, $06, $ea, $e7, $ea, $de, $de, $ea, $f3, $f4, $f8, $fe, $07, $07, $09, $16
10366     F5 ED D4 DE 
1036a     ED E0 F8 16 
1036e     23 31 38 32 
10372     33 35 2A 1D | 	byte	$f5, $ed, $d4, $de, $ed, $e0, $f8, $16, $23, $31, $38, $32, $33, $35, $2a, $1d
10376     E7 E3 B8 B9 
1037a     B6 B2 C4 E5 
1037e     FB 11 1D 2B 
10382     2E 30 39 31 | 	byte	$e7, $e3, $b8, $b9, $b6, $b2, $c4, $e5, $fb, $11, $1d, $2b, $2e, $30, $39, $31
10386     00 03 DF E8 
1038a     E4 E7 06 1D 
1038e     1C 12 0E 07 
10392     05 F9 FC E5 | 	byte	$00, $03, $df, $e8, $e4, $e7, $06, $1d, $1c, $12, $0e, $07, $05, $f9, $fc, $e5
10396     D0 E0 BA D9 
1039a     E5 DD F8 1E 
1039e     25 29 33 45 
103a2     3E 2E 35 15 | 	byte	$d0, $e0, $ba, $d9, $e5, $dd, $f8, $1e, $25, $29, $33, $45, $3e, $2e, $35, $15
103a6     FB FB C4 CE 
103aa     BC C1 D8 EA 
103ae     F3 03 07 13 
103b2     19 19 20 05 | 	byte	$fb, $fb, $c4, $ce, $bc, $c1, $d8, $ea, $f3, $03, $07, $13, $19, $19, $20, $05
103b6     05 06 E5 F8 
103ba     EF EF 07 20 
103be     28 29 2D 28 
103c2     14 04 02 E5 | 	byte	$05, $06, $e5, $f8, $ef, $ef, $07, $20, $28, $29, $2d, $28, $14, $04, $02, $e5
103c6     C6 BC A6 C6 
103ca     C4 DC FB 1C 
103ce     28 2A 30 43 
103d2     34 34 1B 0C | 	byte	$c6, $bc, $a6, $c6, $c4, $dc, $fb, $1c, $28, $2a, $30, $43, $34, $34, $1b, $0c
103d6     07 F2 E3 FE 
103da     DD D0 DE F6 
103de     FE F7 00 06 
103e2     00 0A F1 ED | 	byte	$07, $f2, $e3, $fe, $dd, $d0, $de, $f6, $fe, $f7, $00, $06, $00, $0a, $f1, $ed
103e6     F6 E8 E5 FC 
103ea     F7 08 1C 30 
103ee     36 37 2B 2C 
103f2     23 11 E6 E4 | 	byte	$f6, $e8, $e5, $fc, $f7, $08, $1c, $30, $36, $37, $2b, $2c, $23, $11, $e6, $e4
103f6     D8 C6 BD C4 
103fa     B0 CB EC 0D 
103fe     16 22 34 3A 
10402     35 2D 20 11 | 	byte	$d8, $c6, $bd, $c4, $b0, $cb, $ec, $0d, $16, $22, $34, $3a, $35, $2d, $20, $11
10406     FB E5 E7 F7 
1040a     EC F9 00 0E 
1040e     06 FB 0A 07 
10412     FC DA DA E7 | 	byte	$fb, $e5, $e7, $f7, $ec, $f9, $00, $0e, $06, $fb, $0a, $07, $fc, $da, $da, $e7
10416     E7 D7 E6 07 
1041a     F9 FE 15 31 
1041e     39 30 33 2B 
10422     2C FF F4 F3 | 	byte	$e7, $d7, $e6, $07, $f9, $fe, $15, $31, $39, $30, $33, $2b, $2c, $ff, $f4, $f3
10426     E2 C1 C9 E1 
1042a     DC DF EC 00 
1042e     17 13 12 17 
10432     1A FE 08 09 | 	byte	$e2, $c1, $c9, $e1, $dc, $df, $ec, $00, $17, $13, $12, $17, $1a, $fe, $08, $09
10436     05 F4 FB F6 
1043a     F9 05 11 23 
1043e     2A 15 12 0F 
10442     00 F1 EF CE | 	byte	$05, $f4, $fb, $f6, $f9, $05, $11, $23, $2a, $15, $12, $0f, $00, $f1, $ef, $ce
10446     C8 BC D3 E4 
1044a     EE FA 12 26 
1044e     2B 2C 34 32 
10452     11 0B 0E 02 | 	byte	$c8, $bc, $d3, $e4, $ee, $fa, $12, $26, $2b, $2c, $34, $32, $11, $0b, $0e, $02
10456     00 E6 EC EF 
1045a     E2 E6 F9 00 
1045e     04 F9 F7 FE 
10462     EF E5 F3 F6 | 	byte	$00, $e6, $ec, $ef, $e2, $e6, $f9, $00, $04, $f9, $f7, $fe, $ef, $e5, $f3, $f6
10466     F6 F1 0C 14 
1046a     1E 22 26 32 
1046e     45 29 14 F7 
10472     E8 DF DF DA | 	byte	$f6, $f1, $0c, $14, $1e, $22, $26, $32, $45, $29, $14, $f7, $e8, $df, $df, $da
10476     D1 C3 C4 CB 
1047a     E7 F7 02 1D 
1047e     39 31 35 1F 
10482     22 27 0F 00 | 	byte	$d1, $c3, $c4, $cb, $e7, $f7, $02, $1d, $39, $31, $35, $1f, $22, $27, $0f, $00
10486     EC F4 F9 EF 
1048a     EC F1 F4 F4 
1048e     0B 09 F6 DC 
10492     E2 F7 EA F4 | 	byte	$ec, $f4, $f9, $ef, $ec, $f1, $f4, $f4, $0b, $09, $f6, $dc, $e2, $f7, $ea, $f4
10496     F0 00 12 14 
1049a     16 21 21 23 
1049e     2F 22 0A 06 
104a2     ED EC D0 D3 | 	byte	$f0, $00, $12, $14, $16, $21, $21, $23, $2f, $22, $0a, $06, $ed, $ec, $d0, $d3
104a6     D3 E6 F9 F1 
104aa     F3 03 03 15 
104ae     23 1E F9 05 
104b2     05 10 FB F6 | 	byte	$d3, $e6, $f9, $f1, $f3, $03, $03, $15, $23, $1e, $f9, $05, $05, $10, $fb, $f6
104b6     F9 F7 FE FF 
104ba     0A 10 06 0A 
104be     0F 15 F8 FF 
104c2     00 FE DB C3 | 	byte	$f9, $f7, $fe, $ff, $0a, $10, $06, $0a, $0f, $15, $f8, $ff, $00, $fe, $db, $c3
104c6     D8 EA F3 F5 
104ca     06 1E 12 19 
104ce     22 16 0A 10 
104d2     17 19 04 DF | 	byte	$d8, $ea, $f3, $f5, $06, $1e, $12, $19, $22, $16, $0a, $10, $17, $19, $04, $df
104d6     EB F4 02 FB 
104da     FD 08 F9 EB 
104de     EF E7 ED E5 
104e2     F4 F9 F9 E9 | 	byte	$eb, $f4, $02, $fb, $fd, $08, $f9, $eb, $ef, $e7, $ed, $e5, $f4, $f9, $f9, $e9
104e6     09 19 26 22 
104ea     29 36 2F 21 
104ee     11 F1 E7 EA 
104f2     EC E5 E3 CA | 	byte	$09, $19, $26, $22, $29, $36, $2f, $21, $11, $f1, $e7, $ea, $ec, $e5, $e3, $ca
104f6     C9 D3 E7 E9 
104fa     F9 1B 23 23 
104fe     20 2B 25 21 
10502     20 1E 05 F4 | 	byte	$c9, $d3, $e7, $e9, $f9, $1b, $23, $23, $20, $2b, $25, $21, $20, $1e, $05, $f4
10506     F3 EF E8 E5 
1050a     EF F8 F9 F8 
1050e     D8 E8 EB F6 
10512     F9 05 00 00 | 	byte	$f3, $ef, $e8, $e5, $ef, $f8, $f9, $f8, $d8, $e8, $eb, $f6, $f9, $05, $00, $00
10516     0F 21 29 1E 
1051a     1A 27 1D 09 
1051e     F7 01 EA E1 
10522     D8 DB D0 E5 | 	byte	$0f, $21, $29, $1e, $1a, $27, $1d, $09, $f7, $01, $ea, $e1, $d8, $db, $d0, $e5
10526     FC 04 01 06 
1052a     09 18 16 0A 
1052e     07 12 12 09 
10532     00 00 EF ED | 	byte	$fc, $04, $01, $06, $09, $18, $16, $0a, $07, $12, $12, $09, $00, $00, $ef, $ed
10536     F6 07 F4 F3 
1053a     FE 0C 0A F1 
1053e     05 1C 0F F6 
10542     00 F7 D8 EC | 	byte	$f6, $07, $f4, $f3, $fe, $0c, $0a, $f1, $05, $1c, $0f, $f6, $00, $f7, $d8, $ec
10546     F7 FD FD 0A 
1054a     09 0F 0C EF 
1054e     FB 16 1E 05 
10552     09 07 F2 F9 | 	byte	$f7, $fd, $fd, $0a, $09, $0f, $0c, $ef, $fb, $16, $1e, $05, $09, $07, $f2, $f9
10556     FE 0F 0F 08 
1055a     FD 02 DF D3 
1055e     E5 F4 ED EF 
10562     00 F9 F8 0A | 	byte	$fe, $0f, $0f, $08, $fd, $02, $df, $d3, $e5, $f4, $ed, $ef, $00, $f9, $f8, $0a
10566     1B 26 25 35 
1056a     26 18 FE F5 
1056e     F4 FB F9 EE 
10572     F3 DA D0 D0 | 	byte	$1b, $26, $25, $35, $26, $18, $fe, $f5, $f4, $fb, $f9, $ee, $f3, $da, $d0, $d0
10576     DD EA EF 06 
1057a     14 23 0F 19 
1057e     24 35 00 00 
10582     00 00 00 FE | 	byte	$dd, $ea, $ef, $06, $14, $23, $0f, $19, $24, $35, $00, $00, $00, $00, $00, $fe
10586     00 F6 00 00 
1058a     00 07 FF FC 
1058e     03 05 09 F1 
10592     02 07 FE 00 | 	byte	$00, $f6, $00, $00, $00, $07, $ff, $fc, $03, $05, $09, $f1, $02, $07, $fe, $00
10596     01 F8 05 00 
1059a     FE 07 FF FC 
1059e     00 00 07 F6 
105a2     04 00 00 00 | 	byte	$01, $f8, $05, $00, $fe, $07, $ff, $fc, $00, $00, $07, $f6, $04, $00, $00, $00
105a6     FD F9 09 FA 
105aa     00 05 F8 00 
105ae     05 09 FB F2 
105b2     03 00 F7 05 | 	byte	$fd, $f9, $09, $fa, $00, $05, $f8, $00, $05, $09, $fb, $f2, $03, $00, $f7, $05
105b6     F8 00 06 08 
105ba     08 07 FA 00 
105be     F9 00 F7 F9 
105c2     FF 02 00 04 | 	byte	$f8, $00, $06, $08, $08, $07, $fa, $00, $f9, $00, $f7, $f9, $ff, $02, $00, $04
105c6     00 04 0A F8 
105ca     04 08 F4 FA 
105ce     05 00 F9 FB 
105d2     0E 00 00 05 | 	byte	$00, $04, $0a, $f8, $04, $08, $f4, $fa, $05, $00, $f9, $fb, $0e, $00, $00, $05
105d6     F4 FD 06 00 
105da     01 FC F2 04 
105de     03 0D 04 03 
105e2     04 F5 01 FE | 	byte	$f4, $fd, $06, $00, $01, $fc, $f2, $04, $03, $0d, $04, $03, $04, $f5, $01, $fe
105e6     F9 05 FC 01 
105ea     0A 08 FB 00 
105ee     07 F7 ED FA 
105f2     01 F6 FA 06 | 	byte	$f9, $05, $fc, $01, $0a, $08, $fb, $00, $07, $f7, $ed, $fa, $01, $f6, $fa, $06
105f6     09 0E 13 10 
105fa     0D F6 ED F3 
105fe     FB FC F7 F2 
10602     00 07 04 09 | 	byte	$09, $0e, $13, $10, $0d, $f6, $ed, $f3, $fb, $fc, $f7, $f2, $00, $07, $04, $09
10606     05 13 FE FD 
1060a     0C F9 FA F4 
1060e     02 04 00 06 
10612     FF 00 04 F6 | 	byte	$05, $13, $fe, $fd, $0c, $f9, $fa, $f4, $02, $04, $00, $06, $ff, $00, $04, $f6
10616     FA 01 04 F7 
1061a     FB F8 00 09 
1061e     10 04 0B FA 
10622     F0 00 00 FF | 	byte	$fa, $01, $04, $f7, $fb, $f8, $00, $09, $10, $04, $0b, $fa, $f0, $00, $00, $ff
10626     ED 05 09 0E 
1062a     0E 01 F8 03 
1062e     EE E8 F7 F5 
10632     FB F7 0E 1C | 	byte	$ed, $05, $09, $0e, $0e, $01, $f8, $03, $ee, $e8, $f7, $f5, $fb, $f7, $0e, $1c
10636     13 1D 12 10 
1063a     FC E2 E7 F1 
1063e     F8 E8 FB F6 
10642     09 08 10 0B | 	byte	$13, $1d, $12, $10, $fc, $e2, $e7, $f1, $f8, $e8, $fb, $f6, $09, $08, $10, $0b
10646     0B 05 FD 02 
1064a     08 F2 EC 06 
1064e     0B 03 06 F7 
10652     04 FD F4 F9 | 	byte	$0b, $05, $fd, $02, $08, $f2, $ec, $06, $0b, $03, $06, $f7, $04, $fd, $f4, $f9
10656     FD 05 ED FA 
1065a     09 04 06 13 
1065e     09 0D F4 E8 
10662     FA 01 FE F4 | 	byte	$fd, $05, $ed, $fa, $09, $04, $06, $13, $09, $0d, $f4, $e8, $fa, $01, $fe, $f4
10666     03 16 17 0E 
1066a     05 FB F7 DE 
1066e     E3 EE F1 EB 
10672     04 17 26 23 | 	byte	$03, $16, $17, $0e, $05, $fb, $f7, $de, $e3, $ee, $f1, $eb, $04, $17, $26, $23
10676     22 1E 10 FD 
1067a     E1 D3 E6 EC 
1067e     E8 F7 FE 06 
10682     05 16 16 0B | 	byte	$22, $1e, $10, $fd, $e1, $d3, $e6, $ec, $e8, $f7, $fe, $06, $05, $16, $16, $0b
10686     03 09 F8 05 
1068a     F2 F2 06 0C 
1068e     11 04 F4 FA 
10692     F9 F3 F3 F7 | 	byte	$03, $09, $f8, $05, $f2, $f2, $06, $0c, $11, $04, $f4, $fa, $f9, $f3, $f3, $f7
10696     00 F3 00 14 
1069a     08 0C 11 06 
1069e     0E EF EB EB 
106a2     07 FD 00 03 | 	byte	$00, $f3, $00, $14, $08, $0c, $11, $06, $0e, $ef, $eb, $eb, $07, $fd, $00, $03
106a6     1B 1A 16 0B 
106aa     F4 EF D1 CD 
106ae     ED E7 F0 05 
106b2     20 2E 32 28 | 	byte	$1b, $1a, $16, $0b, $f4, $ef, $d1, $cd, $ed, $e7, $f0, $05, $20, $2e, $32, $28
106b6     23 18 FB EB 
106ba     C5 DC D8 EB 
106be     FA FD 10 03 
106c2     0F 18 19 F7 | 	byte	$23, $18, $fb, $eb, $c5, $dc, $d8, $eb, $fa, $fd, $10, $03, $0f, $18, $19, $f7
106c6     04 00 FF FA 
106ca     FF 06 0E 13 
106ce     07 ED F7 F6 
106d2     EC EB FE F4 | 	byte	$04, $00, $ff, $fa, $ff, $06, $0e, $13, $07, $ed, $f7, $f6, $ec, $eb, $fe, $f4
106d6     FE FE 18 16 
106da     0E 11 FD 07 
106de     ED E2 EF FA 
106e2     08 10 0A 17 | 	byte	$fe, $fe, $18, $16, $0e, $11, $fd, $07, $ed, $e2, $ef, $fa, $08, $10, $0a, $17
106e6     23 13 0E EE 
106ea     F2 BD C1 E2 
106ee     DE FA 0F 24 
106f2     39 3A 34 24 | 	byte	$23, $13, $0e, $ee, $f2, $bd, $c1, $e2, $de, $fa, $0f, $24, $39, $3a, $34, $24
106f6     18 0D DE C3 
106fa     D0 C9 E6 F7 
106fe     FD 15 09 0C 
10702     11 1B 03 F6 | 	byte	$18, $0d, $de, $c3, $d0, $c9, $e6, $f7, $fd, $15, $09, $0c, $11, $1b, $03, $f6
10706     06 FC 04 00 
1070a     0C 05 18 0E 
1070e     EB EE F7 D7 
10712     EC FB F4 FF | 	byte	$06, $fc, $04, $00, $0c, $05, $18, $0e, $eb, $ee, $f7, $d7, $ec, $fb, $f4, $ff
10716     08 13 23 0E 
1071a     0D FC 02 F1 
1071e     D4 F7 F1 05 
10722     22 14 18 26 | 	byte	$08, $13, $23, $0e, $0d, $fc, $02, $f1, $d4, $f7, $f1, $05, $22, $14, $18, $26
10726     0F 03 F8 E8 
1072a     B9 BC D9 D0 
1072e     FC 19 26 3E 
10732     44 3B 21 15 | 	byte	$0f, $03, $f8, $e8, $b9, $bc, $d9, $d0, $fc, $19, $26, $3e, $44, $3b, $21, $15
10736     00 EA DD BA 
1073a     C4 E2 F7 F5 
1073e     14 0D 11 03 
10742     14 07 F7 08 | 	byte	$00, $ea, $dd, $ba, $c4, $e2, $f7, $f5, $14, $0d, $11, $03, $14, $07, $f7, $08
10746     FB 09 1A 09 
1074a     09 18 15 EA 
1074e     E1 F2 D8 E0 
10752     F0 00 00 13 | 	byte	$fb, $09, $1a, $09, $09, $18, $15, $ea, $e1, $f2, $d8, $e0, $f0, $00, $00, $13
10756     16 20 27 00 
1075a     F2 00 ED D5 
1075e     F4 EE 06 25 
10762     31 18 26 17 | 	byte	$16, $20, $27, $00, $f2, $00, $ed, $d5, $f4, $ee, $06, $25, $31, $18, $26, $17
10766     FD E6 F2 A6 
1076a     B7 CF D0 F3 
1076e     1E 39 3C 4A 
10772     42 28 13 00 | 	byte	$fd, $e6, $f2, $a6, $b7, $cf, $d0, $f3, $1e, $39, $3c, $4a, $42, $28, $13, $00
10776     E4 E4 CA B7 
1077a     DC F3 F3 0E 
1077e     11 0E 00 0A 
10782     0A FD 01 00 | 	byte	$e4, $e4, $ca, $b7, $dc, $f3, $f3, $0e, $11, $0e, $00, $0a, $0a, $fd, $01, $00
10786     0E 1D 21 00 
1078a     17 18 F2 D6 
1078e     E3 DF D2 E0 
10792     04 09 18 1C | 	byte	$0e, $1d, $21, $00, $17, $18, $f2, $d6, $e3, $df, $d2, $e0, $04, $09, $18, $1c
10796     1D 27 0B EC 
1079a     EF F2 D5 DF 
1079e     F7 11 24 3C 
107a2     38 22 1D EF | 	byte	$1d, $27, $0b, $ec, $ef, $f2, $d5, $df, $f7, $11, $24, $3c, $38, $22, $1d, $ef
107a6     E3 E4 C1 9F 
107aa     BC D6 F6 13 
107ae     3F 49 50 44 
107b2     2F 12 04 E8 | 	byte	$e3, $e4, $c1, $9f, $bc, $d6, $f6, $13, $3f, $49, $50, $44, $2f, $12, $04, $e8
107b6     D5 DB C3 D3 
107ba     EE F7 03 0F 
107be     04 01 FB 0B 
107c2     FE F6 13 0F | 	byte	$d5, $db, $c3, $d3, $ee, $f7, $03, $0f, $04, $01, $fb, $0b, $fe, $f6, $13, $0f
107c6     23 2A 1A 0A 
107ca     14 ED E4 D5 
107ce     D5 C2 D8 05 
107d2     1A 17 2B 18 | 	byte	$23, $2a, $1a, $0a, $14, $ed, $e4, $d5, $d5, $c2, $d8, $05, $1a, $17, $2b, $18
107d6     2B 0B EE E3 
107da     F6 CE CE F7 
107de     16 2E 38 49 
107e2     35 18 F6 D5 | 	byte	$2b, $0b, $ee, $e3, $f6, $ce, $ce, $f7, $16, $2e, $38, $49, $35, $18, $f6, $d5
107e6     D0 CD 92 AD 
107ea     D9 F7 19 35 
107ee     56 55 44 33 
107f2     20 04 E2 BF | 	byte	$d0, $cd, $92, $ad, $d9, $f7, $19, $35, $56, $55, $44, $33, $20, $04, $e2, $bf
107f6     DE E9 D0 E2 
107fa     F4 04 0C F6 
107fe     03 FF 04 E7 
10802     F2 18 24 27 | 	byte	$de, $e9, $d0, $e2, $f4, $04, $0c, $f6, $03, $ff, $04, $e7, $f2, $18, $24, $27
10806     2C 2D 11 01 
1080a     E3 E2 DF D2 
1080e     AC E1 00 26 
10812     21 2D 2B 18 | 	byte	$2c, $2d, $11, $01, $e3, $e2, $df, $d2, $ac, $e1, $00, $26, $21, $2d, $2b, $18
10816     0E FC D3 E0 
1081a     C2 CF FE 1F 
1081e     33 42 49 52 
10822     1D EC E5 BB | 	byte	$0e, $fc, $d3, $e0, $c2, $cf, $fe, $1f, $33, $42, $49, $52, $1d, $ec, $e5, $bb
10826     B2 95 A0 D3 
1082a     F6 1F 37 4B 
1082e     59 50 31 27 
10832     06 CA C2 D6 | 	byte	$b2, $95, $a0, $d3, $f6, $1f, $37, $4b, $59, $50, $31, $27, $06, $ca, $c2, $d6
10836     F4 FC D9 E6 
1083a     01 01 FA FB 
1083e     F7 F7 E1 08 
10842     19 2D 37 33 | 	byte	$f4, $fc, $d9, $e6, $01, $01, $fa, $fb, $f7, $f7, $e1, $08, $19, $2d, $37, $33
10846     33 30 F9 D5 
1084a     E0 D5 BD AB 
1084e     DA 0E 21 2E 
10852     2B 2E 1B 04 | 	byte	$33, $30, $f9, $d5, $e0, $d5, $bd, $ab, $da, $0e, $21, $2e, $2b, $2e, $1b, $04
10856     02 E2 B7 B2 
1085a     D8 FF 2A 3F 
1085e     45 4E 4F 31 
10862     FC D9 BB 8F | 	byte	$02, $e2, $b7, $b2, $d8, $ff, $2a, $3f, $45, $4e, $4f, $31, $fc, $d9, $bb, $8f
10866     A2 AB C2 EF 
1086a     1E 3E 50 51 
1086e     48 49 22 FC 
10872     D0 D3 D8 F3 | 	byte	$a2, $ab, $c2, $ef, $1e, $3e, $50, $51, $48, $49, $22, $fc, $d0, $d3, $d8, $f3
10876     0D F1 D0 F7 
1087a     00 EF F5 ED 
1087e     D6 EF 07 2B 
10882     30 3F 44 2D | 	byte	$0d, $f1, $d0, $f7, $00, $ef, $f5, $ed, $d6, $ef, $07, $2b, $30, $3f, $44, $2d
10886     35 FC D0 C6 
1088a     C3 B6 D0 D8 
1088e     08 30 2E 37 
10892     2B 23 00 F3 | 	byte	$35, $fc, $d0, $c6, $c3, $b6, $d0, $d8, $08, $30, $2e, $37, $2b, $23, $00, $f3
10896     E5 A3 99 E2 
1089a     06 2C 4C 4E 
1089e     4D 4E 3D 0E 
108a2     DB A3 9A 90 | 	byte	$e5, $a3, $99, $e2, $06, $2c, $4c, $4e, $4d, $4e, $3d, $0e, $db, $a3, $9a, $90
108a6     BC AE E4 17 
108aa     3C 52 54 46 
108ae     42 30 F2 E6 
108b2     E5 E5 EC 01 | 	byte	$bc, $ae, $e4, $17, $3c, $52, $54, $46, $42, $30, $f2, $e6, $e5, $e5, $ec, $01
108b6     09 D9 D9 F8 
108ba     EF E1 DC D3 
108be     EB 1D 2D 3F 
108c2     3D 4E 3A 25 | 	byte	$09, $d9, $d9, $f8, $ef, $e1, $dc, $d3, $eb, $1d, $2d, $3f, $3d, $4e, $3a, $25
108c6     09 D0 B0 AD 
108ca     B6 D3 F6 00 
108ce     29 3E 30 2B 
108d2     1E 12 E1 CF | 	byte	$09, $d0, $b0, $ad, $b6, $d3, $f6, $00, $29, $3e, $30, $2b, $1e, $12, $e1, $cf
108d6     A7 9F D4 0D 
108da     2E 4C 5E 52 
108de     46 3C 0B E3 
108e2     AC A4 90 AF | 	byte	$a7, $9f, $d4, $0d, $2e, $4c, $5e, $52, $46, $3c, $0b, $e3, $ac, $a4, $90, $af
108e6     AB DC 0B 35 
108ea     4A 53 52 2A 
108ee     22 17 EB F2 
108f2     F7 FA F1 FD | 	byte	$ab, $dc, $0b, $35, $4a, $53, $52, $2a, $22, $17, $eb, $f2, $f7, $fa, $f1, $fd
108f6     E6 DE DE EA 
108fa     CE D3 E7 EB 
108fe     18 3A 3F 4D 
10902     4C 42 2A F8 | 	byte	$e6, $de, $de, $ea, $ce, $d3, $e7, $eb, $18, $3a, $3f, $4d, $4c, $42, $2a, $f8
10906     D0 B2 AB BB 
1090a     D1 00 0E 1B 
1090e     35 35 21 1E 
10912     0A DE C5 A6 | 	byte	$d0, $b2, $ab, $bb, $d1, $00, $0e, $1b, $35, $35, $21, $1e, $0a, $de, $c5, $a6
10916     B3 D2 02 32 
1091a     4D 62 5A 47 
1091e     34 13 D9 CB 
10922     AC 97 99 A4 | 	byte	$b3, $d2, $02, $32, $4d, $62, $5a, $47, $34, $13, $d9, $cb, $ac, $97, $99, $a4
10926     D7 01 28 3F 
1092a     4E 4A 35 17 
1092e     26 0C F6 06 
10932     03 F7 E4 D5 | 	byte	$d7, $01, $28, $3f, $4e, $4a, $35, $17, $26, $0c, $f6, $06, $03, $f7, $e4, $d5
10936     ED D7 CB BA 
1093a     D7 EB F7 15 
1093e     3D 49 47 58 
10942     3F 28 F4 C5 | 	byte	$ed, $d7, $cb, $ba, $d7, $eb, $f7, $15, $3d, $49, $47, $58, $3f, $28, $f4, $c5
10946     B2 C1 BB D0 
1094a     F7 22 20 2B 
1094e     27 2B 0E 06 
10952     E3 C4 BC A5 | 	byte	$b2, $c1, $bb, $d0, $f7, $22, $20, $2b, $27, $2b, $0e, $06, $e3, $c4, $bc, $a5
10956     DE 01 23 4F 
1095a     5F 57 51 2F 
1095e     09 E6 D2 CD 
10962     97 86 B1 BC | 	byte	$de, $01, $23, $4f, $5f, $57, $51, $2f, $09, $e6, $d2, $cd, $97, $86, $b1, $bc
10966     FC 19 32 42 
1096a     41 35 2B 26 
1096e     20 13 03 13 
10972     01 D9 D5 D8 | 	byte	$fc, $19, $32, $42, $41, $35, $2b, $26, $20, $13, $03, $13, $01, $d9, $d5, $d8
10976     E0 C2 A9 D0 
1097a     F2 F7 16 39 
1097e     44 53 4B 46 
10982     26 F3 D5 B6 | 	byte	$e0, $c2, $a9, $d0, $f2, $f7, $16, $39, $44, $53, $4b, $46, $26, $f3, $d5, $b6
10986     C9 DA C9 E9 
1098a     1A 2B 1E 13 
1098e     1C 13 FF E0 
10992     D4 C3 C2 CD | 	byte	$c9, $da, $c9, $e9, $1a, $2b, $1e, $13, $1c, $13, $ff, $e0, $d4, $c3, $c2, $cd
10996     07 29 37 56 
1099a     57 4E 39 10 
1099e     EB E3 DE A4 
109a2     87 A1 BF DE | 	byte	$07, $29, $37, $56, $57, $4e, $39, $10, $eb, $e3, $de, $a4, $87, $a1, $bf, $de
109a6     0F 26 35 39 
109aa     2B 3B 3C 2E 
109ae     1B 1B 0C 04 
109b2     E8 D6 C4 D5 | 	byte	$0f, $26, $35, $39, $2b, $3b, $3c, $2e, $1b, $1b, $0c, $04, $e8, $d6, $c4, $d5
109b6     BE A6 C4 ED 
109ba     05 11 34 4C 
109be     49 49 3C 26 
109c2     00 DB C6 C5 | 	byte	$be, $a6, $c4, $ed, $05, $11, $34, $4c, $49, $49, $3c, $26, $00, $db, $c6, $c5
109c6     E2 E2 E4 04 
109ca     2A 15 04 17 
109ce     07 FE DA D9 
109d2     D7 DB CB F6 | 	byte	$e2, $e2, $e4, $04, $2a, $15, $04, $17, $07, $fe, $da, $d9, $d7, $db, $cb, $f6
109d6     2B 36 3E 54 
109da     4F 3C 0E 01 
109de     E6 E7 AD 83 
109e2     A4 C1 CA F2 | 	byte	$2b, $36, $3e, $54, $4f, $3c, $0e, $01, $e6, $e7, $ad, $83, $a4, $c1, $ca, $f2
109e6     22 2A 2F 26 
109ea     3F 46 47 21 
109ee     20 1B 00 E7 
109f2     E9 CF C1 A8 | 	byte	$22, $2a, $2f, $26, $3f, $46, $47, $21, $20, $1b, $00, $e7, $e9, $cf, $c1, $a8
109f6     AA C5 DE FB 
109fa     0F 2D 47 46 
109fe     47 41 22 08 
10a02     E7 E0 D7 DF | 	byte	$aa, $c5, $de, $fb, $0f, $2d, $47, $46, $47, $41, $22, $08, $e7, $e0, $d7, $df
10a06     E2 ED FC 10 
10a0a     06 02 0C 04 
10a0e     ED E9 DF E7 
10a12     EF D5 ED 1D | 	byte	$e2, $ed, $fc, $10, $06, $02, $0c, $04, $ed, $e9, $df, $e7, $ef, $d5, $ed, $1d
10a16     31 39 49 46 
10a1a     31 14 15 FC 
10a1e     E3 C2 82 A9 
10a22     CD BC E5 0F | 	byte	$31, $39, $49, $46, $31, $14, $15, $fc, $e3, $c2, $82, $a9, $cd, $bc, $e5, $0f
10a26     22 17 29 44 
10a2a     4D 44 38 25 
10a2e     19 13 DF FA 
10a32     E4 B6 9B A2 | 	byte	$22, $17, $29, $44, $4d, $44, $38, $25, $19, $13, $df, $fa, $e4, $b6, $9b, $a2
10a36     D0 DE ED 00 
10a3a     27 3F 3C 45 
10a3e     41 28 FD FD 
10a42     FE E3 E7 DB | 	byte	$d0, $de, $ed, $00, $27, $3f, $3c, $45, $41, $28, $fd, $fd, $fe, $e3, $e7, $db
10a46     F3 FD 04 F4 
10a4a     F7 05 EC EF 
10a4e     EB F3 EF F2 
10a52     ED ED 0F 1F | 	byte	$f3, $fd, $04, $f4, $f7, $05, $ec, $ef, $eb, $f3, $ef, $f2, $ed, $ed, $0f, $1f
10a56     3C 4B 39 23 
10a5a     22 22 11 F3 
10a5e     BE 8E A1 BC 
10a62     CF D0 FE 04 | 	byte	$3c, $4b, $39, $23, $22, $22, $11, $f3, $be, $8e, $a1, $bc, $cf, $d0, $fe, $04
10a66     1D 24 46 53 
10a6a     49 35 35 1F 
10a6e     0C F2 F4 DA 
10a72     C9 9E 9F C1 | 	byte	$1d, $24, $46, $53, $49, $35, $35, $1f, $0c, $f2, $f4, $da, $c9, $9e, $9f, $c1
10a76     EB E1 F3 14 
10a7a     33 38 42 3F 
10a7e     1C 0C 0C 0F 
10a82     13 E3 DA EF | 	byte	$eb, $e1, $f3, $14, $33, $38, $42, $3f, $1c, $0c, $0c, $0f, $13, $e3, $da, $ef
10a86     FE FC ED EF 
10a8a     E3 ED F7 F6 
10a8e     FC FB F4 F1 
10a92     09 FE 18 2B | 	byte	$fe, $fc, $ed, $ef, $e3, $ed, $f7, $f6, $fc, $fb, $f4, $f1, $09, $fe, $18, $2b
10a96     45 25 28 2A 
10a9a     26 21 FF BE 
10a9e     A2 99 B6 CE 
10aa2     E3 D1 ED 1C | 	byte	$45, $25, $28, $2a, $26, $21, $ff, $be, $a2, $99, $b6, $ce, $e3, $d1, $ed, $1c
10aa6     35 3E 51 4A 
10aaa     31 36 25 22 
10aae     F2 F0 D5 DB 
10ab2     C8 AD BC D5 | 	byte	$35, $3e, $51, $4a, $31, $36, $25, $22, $f2, $f0, $d5, $db, $c8, $ad, $bc, $d5
10ab6     E9 EA 01 16 
10aba     37 40 16 27 
10abe     1D 23 16 27 
10ac2     09 D7 EA EE | 	byte	$e9, $ea, $01, $16, $37, $40, $16, $27, $1d, $23, $16, $27, $09, $d7, $ea, $ee
10ac6     FF E8 E4 C1 
10aca     E8 03 02 FF 
10ace     FF EB F5 09 
10ad2     08 16 24 17 | 	byte	$ff, $e8, $e4, $c1, $e8, $03, $02, $ff, $ff, $eb, $f5, $09, $08, $16, $24, $17
10ad6     29 3B 30 2A 
10ada     2B 0F C2 AD 
10ade     A4 A8 CB D5 
10ae2     C1 E8 11 31 | 	byte	$29, $3b, $30, $2a, $2b, $0f, $c2, $ad, $a4, $a8, $cb, $d5, $c1, $e8, $11, $31
10ae6     44 53 3E 31 
10aea     3A 1E 2A 03 
10aee     D1 D9 E8 E2 
10af2     C3 C1 CD C9 | 	byte	$44, $53, $3e, $31, $3a, $1e, $2a, $03, $d1, $d9, $e8, $e2, $c3, $c1, $cd, $c9
10af6     EF F3 00 28 
10afa     30 0D 2E 26 
10afe     35 2E 23 24 
10b02     DD E9 DE F1 | 	byte	$ef, $f3, $00, $28, $30, $0d, $2e, $26, $35, $2e, $23, $24, $dd, $e9, $de, $f1
10b06     F3 BD C5 EA 
10b0a     03 09 09 02 
10b0e     F5 F0 04 12 
10b12     0B 0F 04 21 | 	byte	$f3, $bd, $c5, $ea, $03, $09, $09, $02, $f5, $f0, $04, $12, $0b, $0f, $04, $21
10b16     40 3F 35 2A 
10b1a     19 DB B2 AD 
10b1e     AB C0 B3 D6 
10b22     DB 0D 27 44 | 	byte	$40, $3f, $35, $2a, $19, $db, $b2, $ad, $ab, $c0, $b3, $d6, $db, $0d, $27, $44
10b26     49 37 24 38 
10b2a     27 25 FC E5 
10b2e     E2 EF F2 ED 
10b32     CD D2 BB D3 | 	byte	$49, $37, $24, $38, $27, $25, $fc, $e5, $e2, $ef, $f2, $ed, $cd, $d2, $bb, $d3
10b36     E7 F8 10 0B 
10b3a     15 29 2E 3F 
10b3e     41 35 2D FE 
10b42     E1 E3 E4 DD | 	byte	$e7, $f8, $10, $0b, $15, $29, $2e, $3f, $41, $35, $2d, $fe, $e1, $e3, $e4, $dd
10b46     C2 CB E6 02 
10b4a     09 04 07 F7 
10b4e     EE FC 10 15 
10b52     F2 15 20 40 | 	byte	$c2, $cb, $e6, $02, $09, $04, $07, $f7, $ee, $fc, $10, $15, $f2, $15, $20, $40
10b56     3B 3E 37 1D 
10b5a     E1 B3 B4 BF 
10b5e     A6 B0 DA ED 
10b62     FF 22 3A 4F | 	byte	$3b, $3e, $37, $1d, $e1, $b3, $b4, $bf, $a6, $b0, $da, $ed, $ff, $22, $3a, $4f
10b66     32 24 2B 2B 
10b6a     2A DE F3 FC 
10b6e     FF F0 FC E4 
10b72     E1 B7 C6 D6 | 	byte	$32, $24, $2b, $2b, $2a, $de, $f3, $fc, $ff, $f0, $fc, $e4, $e1, $b7, $c6, $d6
10b76     EC FA F9 1A 
10b7a     24 2F 3C 4B 
10b7e     48 34 08 ED 
10b82     D9 E8 BE CA | 	byte	$ec, $fa, $f9, $1a, $24, $2f, $3c, $4b, $48, $34, $08, $ed, $d9, $e8, $be, $ca
10b86     DD F3 FF 00 
10b8a     FE 0A F2 EC 
10b8e     00 08 00 E9 
10b92     09 27 3D 39 | 	byte	$dd, $f3, $ff, $00, $fe, $0a, $f2, $ec, $00, $08, $00, $e9, $09, $27, $3d, $39
10b96     3A 32 3A D6 
10b9a     B6 C5 C6 A5 
10b9e     B6 DE 00 FC 
10ba2     15 29 42 36 | 	byte	$3a, $32, $3a, $d6, $b6, $c5, $c6, $a5, $b6, $de, $00, $fc, $15, $29, $42, $36
10ba6     14 24 28 0F 
10baa     EC 01 03 1D 
10bae     05 F8 FC E8 
10bb2     C8 AE D0 D4 | 	byte	$14, $24, $28, $0f, $ec, $01, $03, $1d, $05, $f8, $fc, $e8, $c8, $ae, $d0, $d4
10bb6     D8 F7 13 1C 
10bba     35 44 40 4F 
10bbe     47 06 F3 E3 
10bc2     CE C3 C6 E0 | 	byte	$d8, $f7, $13, $1c, $35, $44, $40, $4f, $47, $06, $f3, $e3, $ce, $c3, $c6, $e0
10bc6     FF 0A FB EC 
10bca     0A 08 DF FF 
10bce     06 EB F3 0B 
10bd2     22 42 3E 35 | 	byte	$ff, $0a, $fb, $ec, $0a, $08, $df, $ff, $06, $eb, $f3, $0b, $22, $42, $3e, $35
10bd6     30 30 EE B4 
10bda     D1 C5 B2 CB 
10bde     D9 FF FF 0E 
10be2     1D 2B 30 0A | 	byte	$30, $30, $ee, $b4, $d1, $c5, $b2, $cb, $d9, $ff, $ff, $0e, $1d, $2b, $30, $0a
10be6     13 1F EA F7 
10bea     12 13 1D 23 
10bee     00 00 EB DB 
10bf2     B7 B8 C5 C1 | 	byte	$13, $1f, $ea, $f7, $12, $13, $1d, $23, $00, $00, $eb, $db, $b7, $b8, $c5, $c1
10bf6     ED 0E 0C 3B 
10bfa     45 44 44 56 
10bfe     1A FB E6 C0 
10c02     C9 CB E8 FC | 	byte	$ed, $0e, $0c, $3b, $45, $44, $44, $56, $1a, $fb, $e6, $c0, $c9, $cb, $e8, $fc
10c06     15 F9 E1 03 
10c0a     05 E7 F6 07 
10c0e     EA FA 0B 24 
10c12     3C 3D 3D 28 | 	byte	$15, $f9, $e1, $03, $05, $e7, $f6, $07, $ea, $fa, $0b, $24, $3c, $3d, $3d, $28
10c16     2B D8 BE CF 
10c1a     C5 C1 E3 F1 
10c1e     FC 04 0E 16 
10c22     1F 1D 04 09 | 	byte	$2b, $d8, $be, $cf, $c5, $c1, $e3, $f1, $fc, $04, $0e, $16, $1f, $1d, $04, $09
10c26     06 D1 FE 1D 
10c2a     25 2B 32 1C 
10c2e     08 E8 DD C4 
10c32     BC 9D C3 E8 | 	byte	$06, $d1, $fe, $1d, $25, $2b, $32, $1c, $08, $e8, $dd, $c4, $bc, $9d, $c3, $e8
10c36     F8 07 33 4D 
10c3a     46 42 44 27 
10c3e     0E D7 C8 D5 
10c42     D2 E5 08 14 | 	byte	$f8, $07, $33, $4d, $46, $42, $44, $27, $0e, $d7, $c8, $d5, $d2, $e5, $08, $14
10c46     F7 E8 F6 03 
10c4a     E4 EF ED F8 
10c4e     0A FC 22 39 
10c52     40 34 30 24 | 	byte	$f7, $e8, $f6, $03, $e4, $ef, $ed, $f8, $0a, $fc, $22, $39, $40, $34, $30, $24
10c56     E5 BA C6 C9 
10c5a     D3 EE 04 0E 
10c5e     13 FC 0C 13 
10c62     0F FE 04 D7 | 	byte	$e5, $ba, $c6, $c9, $d3, $ee, $04, $0e, $13, $fc, $0c, $13, $0f, $fe, $04, $d7
10c66     D5 F5 24 33 
10c6a     3E 3F 1F 14 
10c6e     03 D1 C9 C8 
10c72     9A B7 E9 E9 | 	byte	$d5, $f5, $24, $33, $3e, $3f, $1f, $14, $03, $d1, $c9, $c8, $9a, $b7, $e9, $e9
10c76     00 2C 47 4A 
10c7a     3F 3F 25 18 
10c7e     DF C3 E3 E0 
10c82     E8 04 20 F0 | 	byte	$00, $2c, $47, $4a, $3f, $3f, $25, $18, $df, $c3, $e3, $e0, $e8, $04, $20, $f0
10c86     F2 F2 FC ED 
10c8a     DD DE FC 17 
10c8e     11 0E 34 3F 
10c92     30 21 1A EC | 	byte	$f2, $f2, $fc, $ed, $dd, $de, $fc, $17, $11, $0e, $34, $3f, $30, $21, $1a, $ec
10c96     BF 9F CE EC 
10c9a     FB 10 1F 24 
10c9e     06 F4 FE 0E 
10ca2     F3 E8 C1 D9 | 	byte	$bf, $9f, $ce, $ec, $fb, $10, $1f, $24, $06, $f4, $fe, $0e, $f3, $e8, $c1, $d9
10ca6     F8 1D 38 4D 
10caa     55 2B 12 0F 
10cae     ED B0 A4 BA 
10cb2     BB DA DB 06 | 	byte	$f8, $1d, $38, $4d, $55, $2b, $12, $0f, $ed, $b0, $a4, $ba, $bb, $da, $db, $06
10cb6     28 3F 3F 3A 
10cba     39 2D 04 F0 
10cbe     D8 DF EA F2 
10cc2     09 1A F0 F7 | 	byte	$28, $3f, $3f, $3a, $39, $2d, $04, $f0, $d8, $df, $ea, $f2, $09, $1a, $f0, $f7
10cc6     F5 F5 DD CC 
10cca     E0 01 20 2B 
10cce     14 21 35 36 
10cd2     1D 0A E7 B8 | 	byte	$f5, $f5, $dd, $cc, $e0, $01, $20, $2b, $14, $21, $35, $36, $1d, $0a, $e7, $b8
10cd6     9C CB EF 13 
10cda     1B 31 3A 1A 
10cde     F5 E6 FE F2 
10ce2     C6 B3 CE 04 | 	byte	$9c, $cb, $ef, $13, $1b, $31, $3a, $1a, $f5, $e6, $fe, $f2, $c6, $b3, $ce, $04
10ce6     22 3A 4B 61 
10cea     3F 13 13 00 
10cee     B7 98 BA D8 
10cf2     DF CD F9 2B | 	byte	$22, $3a, $4b, $61, $3f, $13, $13, $00, $b7, $98, $ba, $d8, $df, $cd, $f9, $2b
10cf6     3E 32 20 32 
10cfa     19 F8 FB F0 
10cfe     F1 F2 EA 10 
10d02     20 F5 E8 F9 | 	byte	$3e, $32, $20, $32, $19, $f8, $fb, $f0, $f1, $f2, $ea, $10, $20, $f5, $e8, $f9
10d06     FE C2 B5 E3 
10d0a     04 27 3E 1D 
10d0e     25 2F 27 1E 
10d12     05 C9 B2 B0 | 	byte	$fe, $c2, $b5, $e3, $04, $27, $3e, $1d, $25, $2f, $27, $1e, $05, $c9, $b2, $b0
10d16     DC F2 15 27 
10d1a     3B 4C 34 EB 
10d1e     E2 F2 BC CD 
10d22     B5 D0 F4 27 | 	byte	$dc, $f2, $15, $27, $3b, $4c, $34, $eb, $e2, $f2, $bc, $cd, $b5, $d0, $f4, $27
10d26     4B 50 57 3B 
10d2a     15 13 FC AD 
10d2e     A2 C8 D9 F2 
10d32     CE F2 18 35 | 	byte	$4b, $50, $57, $3b, $15, $13, $fc, $ad, $a2, $c8, $d9, $f2, $ce, $f2, $18, $35
10d36     3F 1C 18 F5 
10d3a     F6 08 19 F2 
10d3e     F9 FE 07 1D 
10d42     F7 EC EE E0 | 	byte	$3f, $1c, $18, $f5, $f6, $08, $19, $f2, $f9, $fe, $07, $1d, $f7, $ec, $ee, $e0
10d46     D8 BC E1 01 
10d4a     22 44 44 19 
10d4e     22 1F 0E FE 
10d52     B7 AC B5 E4 | 	byte	$d8, $bc, $e1, $01, $22, $44, $44, $19, $22, $1f, $0e, $fe, $b7, $ac, $b5, $e4
10d56     09 21 2B 3B 
10d5a     4E 41 0E CF 
10d5e     C1 B9 C1 BC 
10d62     D5 F5 1B 41 | 	byte	$09, $21, $2b, $3b, $4e, $41, $0e, $cf, $c1, $b9, $c1, $bc, $d5, $f5, $1b, $41
10d66     60 5C 34 14 
10d6a     05 E6 D2 AD 
10d6e     C7 ED F8 D6 
10d72     F2 13 27 28 | 	byte	$60, $5c, $34, $14, $05, $e6, $d2, $ad, $c7, $ed, $f8, $d6, $f2, $13, $27, $28
10d76     2C 00 E1 E9 
10d7a     09 2C 1D F7 
10d7e     FC 16 15 F2 
10d82     F4 E8 D4 CA | 	byte	$2c, $00, $e1, $e9, $09, $2c, $1d, $f7, $fc, $16, $15, $f2, $f4, $e8, $d4, $ca
10d86     D9 E5 05 19 
10d8a     3B 4E 34 16 
10d8e     0A 0F E2 A6 
10d92     A6 C1 E8 09 | 	byte	$d9, $e5, $05, $19, $3b, $4e, $34, $16, $0a, $0f, $e2, $a6, $a6, $c1, $e8, $09
10d96     2D 41 3C 48 
10d9a     46 21 E0 AB 
10d9e     9A BE C5 D5 
10da2     F8 18 36 56 | 	byte	$2d, $41, $3c, $48, $46, $21, $e0, $ab, $9a, $be, $c5, $d5, $f8, $18, $36, $56
10da6     62 3C 16 F2 
10daa     E3 D5 D1 D2 
10dae     F5 09 E4 E4 
10db2     09 1C 17 18 | 	byte	$62, $3c, $16, $f2, $e3, $d5, $d1, $d2, $f5, $09, $e4, $e4, $09, $1c, $17, $18
10db6     00 E3 E1 00 
10dba     2A 36 06 01 
10dbe     0F 18 EF E8 
10dc2     E0 C9 CD D9 | 	byte	$00, $e3, $e1, $00, $2a, $36, $06, $01, $0f, $18, $ef, $e8, $e0, $c9, $cd, $d9
10dc6     FB 11 21 2A 
10dca     46 47 19 0B 
10dce     F1 DE 99 A0 
10dd2     C4 F5 15 2D | 	byte	$fb, $11, $21, $2a, $46, $47, $19, $0b, $f1, $de, $99, $a0, $c4, $f5, $15, $2d
10dd6     4A 51 42 3F 
10dda     2B E6 A9 97 
10dde     B2 C4 D7 FC 
10de2     18 30 44 4B | 	byte	$4a, $51, $42, $3f, $2b, $e6, $a9, $97, $b2, $c4, $d7, $fc, $18, $30, $44, $4b
10de6     41 1A F4 DE 
10dea     D5 E3 E2 FC 
10dee     0F F4 EB FB 
10df2     0E 18 FC F7 | 	byte	$41, $1a, $f4, $de, $d5, $e3, $e2, $fc, $0f, $f4, $eb, $fb, $0e, $18, $fc, $f7
10df6     F2 E6 FA 20 
10dfa     32 27 00 13 
10dfe     0D F0 E3 D7 
10e02     DB CB E3 F7 | 	byte	$f2, $e6, $fa, $20, $32, $27, $00, $13, $0d, $f0, $e3, $d7, $db, $cb, $e3, $f7
10e06     1D 28 30 36 
10e0a     35 2D 00 E8 
10e0e     C0 AA 92 C1 
10e12     F8 1F 36 47 | 	byte	$1d, $28, $30, $36, $35, $2d, $00, $e8, $c0, $aa, $92, $c1, $f8, $1f, $36, $47
10e16     5B 4E 36 2C 
10e1a     E8 C5 A0 A9 
10e1e     B2 D2 FA 20 
10e22     2F 37 37 2E | 	byte	$5b, $4e, $36, $2c, $e8, $c5, $a0, $a9, $b2, $d2, $fa, $20, $2f, $37, $37, $2e
10e26     22 FE EE E0 
10e2a     DE F8 00 13 
10e2e     FC F7 F0 00 
10e32     09 F1 E8 FC | 	byte	$22, $fe, $ee, $e0, $de, $f8, $00, $13, $fc, $f7, $f0, $00, $09, $f1, $e8, $fc
10e36     FA FF 13 22 
10e3a     1D 27 0B 0E 
10e3e     E7 DE CB E2 
10e42     E8 E8 FE 15 | 	byte	$fa, $ff, $13, $22, $1d, $27, $0b, $0e, $e7, $de, $cb, $e2, $e8, $e8, $fe, $15
10e46     31 36 3B 22 
10e4a     22 10 D6 C0 
10e4e     A4 96 B8 F5 
10e52     1D 40 4E 5B | 	byte	$31, $36, $3b, $22, $22, $10, $d6, $c0, $a4, $96, $b8, $f5, $1d, $40, $4e, $5b
10e56     4E 43 1F EC 
10e5a     D8 B8 A9 A3 
10e5e     C6 EE 1C 33 
10e62     33 23 13 0E | 	byte	$4e, $43, $1f, $ec, $d8, $b8, $a9, $a3, $c6, $ee, $1c, $33, $33, $23, $13, $0e
10e66     05 09 ED EA 
10e6a     00 FC 17 FA 
10e6e     04 EB F7 F8 
10e72     E3 EE FC FF | 	byte	$05, $09, $ed, $ea, $00, $fc, $17, $fa, $04, $eb, $f7, $f8, $e3, $ee, $fc, $ff
10e76     0B 12 0F 0F 
10e7a     29 0E 06 E5 
10e7e     D7 CD EC F1 
10e82     F3 08 0D 30 | 	byte	$0b, $12, $0f, $0f, $29, $0e, $06, $e5, $d7, $cd, $ec, $f1, $f3, $08, $0d, $30
10e86     40 32 1F 18 
10e8a     0E D5 BC AD 
10e8e     92 AF EF 1A 
10e92     3B 56 5A 53 | 	byte	$40, $32, $1f, $18, $0e, $d5, $bc, $ad, $92, $af, $ef, $1a, $3b, $56, $5a, $53
10e96     44 17 F8 E8 
10e9a     DC AF A0 BE 
10e9e     E7 02 29 38 
10ea2     21 00 F8 07 | 	byte	$44, $17, $f8, $e8, $dc, $af, $a0, $be, $e7, $02, $29, $38, $21, $00, $f8, $07
10ea6     1C 01 F5 0B 
10eaa     0D 01 00 08 
10eae     F8 E8 EC E0 
10eb2     F4 04 FE 07 | 	byte	$1c, $01, $f5, $0b, $0d, $01, $00, $08, $f8, $e8, $ec, $e0, $f4, $04, $fe, $07
10eb6     22 0C 03 1C 
10eba     0C F7 D5 DA 
10ebe     DE F5 FB FD 
10ec2     1A 27 22 33 | 	byte	$22, $0c, $03, $1c, $0c, $f7, $d5, $da, $de, $f5, $fb, $fd, $1a, $27, $22, $33
10ec6     31 18 18 F3 
10eca     D2 BC B4 9A 
10ece     B1 E0 17 38 
10ed2     50 5A 5F 3C | 	byte	$31, $18, $18, $f3, $d2, $bc, $b4, $9a, $b1, $e0, $17, $38, $50, $5a, $5f, $3c
10ed6     13 02 07 DA 
10eda     B1 A7 B9 E4 
10ede     F8 13 27 28 
10ee2     FA F4 09 22 | 	byte	$13, $02, $07, $da, $b1, $a7, $b9, $e4, $f8, $13, $27, $28, $fa, $f4, $09, $22
10ee6     07 00 13 1D 
10eea     FE F3 FE 19 
10eee     DA DA E3 FB 
10ef2     11 02 09 1D | 	byte	$07, $00, $13, $1d, $fe, $f3, $fe, $19, $da, $da, $e3, $fb, $11, $02, $09, $1d
10ef6     13 FD 0A 01 
10efa     ED CB D8 ED 
10efe     01 0B 07 16 
10f02     3A 35 23 29 | 	byte	$13, $fd, $0a, $01, $ed, $cb, $d8, $ed, $01, $0b, $07, $16, $3a, $35, $23, $29
10f06     16 04 F6 C6 
10f0a     C2 B1 AD BD 
10f0e     D8 08 2C 45 
10f12     5A 56 3F 24 | 	byte	$16, $04, $f6, $c6, $c2, $b1, $ad, $bd, $d8, $08, $2c, $45, $5a, $56, $3f, $24
10f16     05 17 FA AC 
10f1a     AA B1 E1 F9 
10f1e     01 1B 02 FC 
10f22     04 0F 22 04 | 	byte	$05, $17, $fa, $ac, $aa, $b1, $e1, $f9, $01, $1b, $02, $fc, $04, $0f, $22, $04
10f26     09 14 24 F9 
10f2a     FA F9 FE FE 
10f2e     DF E5 F5 0E 
10f32     0D 15 17 0A | 	byte	$09, $14, $24, $f9, $fa, $f9, $fe, $fe, $df, $e5, $f5, $0e, $0d, $15, $17, $0a
10f36     F0 07 00 C6 
10f3a     CD D1 F6 0F 
10f3e     0D 1D 1D 35 
10f42     49 30 21 00 | 	byte	$f0, $07, $00, $c6, $cd, $d1, $f6, $0f, $0d, $1d, $1d, $35, $49, $30, $21, $00
10f46     F5 F2 CE C7 
10f4a     B0 9C CE E7 
10f4e     00 22 2F 46 
10f52     49 54 2E 20 | 	byte	$f5, $f2, $ce, $c7, $b0, $9c, $ce, $e7, $00, $22, $2f, $46, $49, $54, $2e, $20
10f56     1A 07 BD B9 
10f5a     AD CE EF 03 
10f5e     F9 FE ED 00 
10f62     22 2F 0D 0B | 	byte	$1a, $07, $bd, $b9, $ad, $ce, $ef, $03, $f9, $fe, $ed, $00, $22, $2f, $0d, $0b
10f66     06 1B FC F9 
10f6a     F7 EE 0E EF 
10f6e     F2 04 FB 07 
10f72     1D 23 0E ED | 	byte	$06, $1b, $fc, $f9, $f7, $ee, $0e, $ef, $f2, $04, $fb, $07, $1d, $23, $0e, $ed
10f76     EE E3 D6 CD 
10f7a     D0 EC 15 0D 
10f7e     22 2C 37 49 
10f82     3A 18 00 00 | 	byte	$ee, $e3, $d6, $cd, $d0, $ec, $15, $0d, $22, $2c, $37, $49, $3a, $18, $00, $00
10f86     E0 D7 CD BB 
10f8a     98 BD E3 0A 
10f8e     18 2B 22 3A 
10f92     4F 43 35 2B | 	byte	$e0, $d7, $cd, $bb, $98, $bd, $e3, $0a, $18, $2b, $22, $3a, $4f, $43, $35, $2b
10f96     0D E3 AD B8 
10f9a     CF D8 ED FB 
10f9e     01 ED FE 18 
10fa2     2B 24 18 0E | 	byte	$0d, $e3, $ad, $b8, $cf, $d8, $ed, $fb, $01, $ed, $fe, $18, $2b, $24, $18, $0e
10fa6     01 00 EB E0 
10faa     FA 08 11 FC 
10fae     04 01 00 0B 
10fb2     1F 15 EE E2 | 	byte	$01, $00, $eb, $e0, $fa, $08, $11, $fc, $04, $01, $00, $0b, $1f, $15, $ee, $e2
10fb6     C5 DF CB DE 
10fba     F7 12 0B 22 
10fbe     28 3C 40 44 
10fc2     18 04 00 F6 | 	byte	$c5, $df, $cb, $de, $f7, $12, $0b, $22, $28, $3c, $40, $44, $18, $04, $00, $f6
10fc6     D0 D6 BE 99 
10fca     BF D0 FD 19 
10fce     15 28 34 3F 
10fd2     44 4B 35 13 | 	byte	$d0, $d6, $be, $99, $bf, $d0, $fd, $19, $15, $28, $34, $3f, $44, $4b, $35, $13
10fd6     F9 CB AD B8 
10fda     DE D2 F8 01 
10fde     EF 08 17 22 
10fe2     18 2D 13 00 | 	byte	$f9, $cb, $ad, $b8, $de, $d2, $f8, $01, $ef, $08, $17, $22, $18, $2d, $13, $00
10fe6     FB D0 E2 F1 
10fea     0B 1C 25 12 
10fee     FD 05 0E 0D 
10ff2     09 F0 D5 D2 | 	byte	$fb, $d0, $e2, $f1, $0b, $1c, $25, $12, $fd, $05, $0e, $0d, $09, $f0, $d5, $d2
10ff6     D0 C6 E8 FD 
10ffa     13 0C 1F 27 
10ffe     2F 41 2C 2D 
11002     12 02 F6 E7 | 	byte	$d0, $c6, $e8, $fd, $13, $0c, $1f, $27, $2f, $41, $2c, $2d, $12, $02, $f6, $e7
11006     E0 B3 9C B3 
1100a     CD EA 0A 0A 
1100e     2B 38 48 41 
11012     49 4E 12 FF | 	byte	$e0, $b3, $9c, $b3, $cd, $ea, $0a, $0a, $2b, $38, $48, $41, $49, $4e, $12, $ff
11016     E8 AE AE B2 
1101a     D3 F8 FC FF 
1101e     05 1E 2A 0B 
11022     1F 1E 06 F5 | 	byte	$e8, $ae, $ae, $b2, $d3, $f8, $fc, $ff, $05, $1e, $2a, $0b, $1f, $1e, $06, $f5
11026     DC D5 E1 04 
1102a     25 37 29 0F 
1102e     FC 04 0B 01 
11032     D8 DC D0 D0 | 	byte	$dc, $d5, $e1, $04, $25, $37, $29, $0f, $fc, $04, $0b, $01, $d8, $dc, $d0, $d0
11036     E3 DC F3 18 
1103a     11 20 19 2B 
1103e     35 21 32 1D 
11042     0B 0D E8 E4 | 	byte	$e3, $dc, $f3, $18, $11, $20, $19, $2b, $35, $21, $32, $1d, $0b, $0d, $e8, $e4
11046     E4 96 9A B7 
1104a     E0 F5 FE 22 
1104e     3A 53 51 44 
11052     48 30 04 E3 | 	byte	$e4, $96, $9a, $b7, $e0, $f5, $fe, $22, $3a, $53, $51, $44, $48, $30, $04, $e3
11056     DC AE 9A C1 
1105a     E2 09 04 0E 
1105e     1B 27 15 13 
11062     08 0B F0 DE | 	byte	$dc, $ae, $9a, $c1, $e2, $09, $04, $0e, $1b, $27, $15, $13, $08, $0b, $f0, $de
11066     EC E3 F9 23 
1106a     34 3E 1F 04 
1106e     02 F7 03 C9 
11072     CC CC DA EB | 	byte	$ec, $e3, $f9, $23, $34, $3e, $1f, $04, $02, $f7, $03, $c9, $cc, $cc, $da, $eb
11076     FB EE 09 13 
1107a     1C 18 21 22 
1107e     25 23 30 20 
11082     11 F4 E3 E8 | 	byte	$fb, $ee, $09, $13, $1c, $18, $21, $22, $25, $23, $30, $20, $11, $f4, $e3, $e8
11086     BC 96 9A CA 
1108a     D9 F9 13 3B 
1108e     60 61 54 45 
11092     2B 04 EC E8 | 	byte	$bc, $96, $9a, $ca, $d9, $f9, $13, $3b, $60, $61, $54, $45, $2b, $04, $ec, $e8
11096     C6 97 A9 D5 
1109a     03 0B 13 18 
1109e     30 0D 0F 01 
110a2     04 D8 ED F7 | 	byte	$c6, $97, $a9, $d5, $03, $0b, $13, $18, $30, $0d, $0f, $01, $04, $d8, $ed, $f7
110a6     FA FF 13 30 
110aa     35 37 09 F6 
110ae     F9 EE CC C7 
110b2     C5 D8 F6 12 | 	byte	$fa, $ff, $13, $30, $35, $37, $09, $f6, $f9, $ee, $cc, $c7, $c5, $d8, $f6, $12
110b6     FC FB 04 18 
110ba     0A 1A 13 15 
110be     23 31 38 25 
110c2     00 E7 EC CD | 	byte	$fc, $fb, $04, $18, $0a, $1a, $13, $15, $23, $31, $38, $25, $00, $e7, $ec, $cd
110c6     A4 91 A8 C3 
110ca     E8 0A 38 57 
110ce     67 68 4E 3A 
110d2     F8 E8 E8 CF | 	byte	$a4, $91, $a8, $c3, $e8, $0a, $38, $57, $67, $68, $4e, $3a, $f8, $e8, $e8, $cf
110d6     B1 9F CB F7 
110da     09 0F 1E 1D 
110de     1A 0E 00 F6 
110e2     D1 E2 04 18 | 	byte	$b1, $9f, $cb, $f7, $09, $0f, $1e, $1d, $1a, $0e, $00, $f6, $d1, $e2, $04, $18
110e6     0B 12 2B 35 
110ea     2D 17 01 EA 
110ee     E1 D3 C4 CA 
110f2     D5 F4 18 22 | 	byte	$0b, $12, $2b, $35, $2d, $17, $01, $ea, $e1, $d3, $c4, $ca, $d5, $f4, $18, $22
110f6     04 F7 FF 17 
110fa     09 05 17 1B 
110fe     35 3F 3F 0A 
11102     EF EA C9 B0 | 	byte	$04, $f7, $ff, $17, $09, $05, $17, $1b, $35, $3f, $3f, $0a, $ef, $ea, $c9, $b0
11106     9F 87 B8 DE 
1110a     06 2B 53 64 
1110e     6B 6B 39 F8 
11112     E5 DE D5 D9 | 	byte	$9f, $87, $b8, $de, $06, $2b, $53, $64, $6b, $6b, $39, $f8, $e5, $de, $d5, $d9
11116     BA C7 EF 00 
1111a     09 17 22 02 
1111e     00 07 DE DE 
11122     DC 02 2B 25 | 	byte	$ba, $c7, $ef, $00, $09, $17, $22, $02, $00, $07, $de, $de, $dc, $02, $2b, $25
11126     22 26 2B 2E 
1112a     00 02 DC D4 
1112e     D9 C6 CC DE 
11132     F1 13 27 17 | 	byte	$22, $26, $2b, $2e, $00, $02, $dc, $d4, $d9, $c6, $cc, $de, $f1, $13, $27, $17
11136     02 E8 01 00 
1113a     0C 14 1E 2E 
1113e     42 49 26 F7 
11142     EF CB AD 90 | 	byte	$02, $e8, $01, $00, $0c, $14, $1e, $2e, $42, $49, $26, $f7, $ef, $cb, $ad, $90
11146     98 AE D4 04 
1114a     27 47 5C 67 
1114e     6C 41 FE E3 
11152     C5 DE E8 DE | 	byte	$98, $ae, $d4, $04, $27, $47, $5c, $67, $6c, $41, $fe, $e3, $c5, $de, $e8, $de
11156     D7 E9 FC FA 
1115a     14 19 F8 EF 
1115e     EE D9 E8 E3 
11162     06 2E 44 30 | 	byte	$d7, $e9, $fc, $fa, $14, $19, $f8, $ef, $ee, $d9, $e8, $e3, $06, $2e, $44, $30
11166     2B 28 22 00 
1116a     FC CC D9 D3 
1116e     CB D2 ED F1 
11172     0D 2A 25 00 | 	byte	$2b, $28, $22, $00, $fc, $cc, $d9, $d3, $cb, $d2, $ed, $f1, $0d, $2a, $25, $00
11176     E8 DE F4 16 
1117a     1B 22 31 3A 
1117e     42 36 1A EB 
11182     C1 A3 8A A9 | 	byte	$e8, $de, $f4, $16, $1b, $22, $31, $3a, $42, $36, $1a, $eb, $c1, $a3, $8a, $a9
11186     AD D5 02 27 
1118a     42 53 61 65 
1118e     30 0A DD C9 
11192     E2 EF F3 FD | 	byte	$ad, $d5, $02, $27, $42, $53, $61, $65, $30, $0a, $dd, $c9, $e2, $ef, $f3, $fd
11196     EA F2 F0 07 
1119a     15 E7 DB DA 
1119e     D7 F3 F3 10 
111a2     30 4D 36 3F | 	byte	$ea, $f2, $f0, $07, $15, $e7, $db, $da, $d7, $f3, $f3, $10, $30, $4d, $36, $3f
111a6     26 0E F8 E0 
111aa     E2 D6 D2 C3 
111ae     DA F7 F9 0D 
111b2     23 2B EB E8 | 	byte	$26, $0e, $f8, $e0, $e2, $d6, $d2, $c3, $da, $f7, $f9, $0d, $23, $2b, $eb, $e8
111b6     D7 F7 13 22 
111ba     2F 34 3A 2B 
111be     3E 27 F6 AB 
111c2     8C 99 A6 C3 | 	byte	$d7, $f7, $13, $22, $2f, $34, $3a, $2b, $3e, $27, $f6, $ab, $8c, $99, $a6, $c3
111c6     D6 01 28 3C 
111ca     4B 5A 5B 23 
111ce     04 E5 DA DF 
111d2     F7 06 0B 08 | 	byte	$d6, $01, $28, $3c, $4b, $5a, $5b, $23, $04, $e5, $da, $df, $f7, $06, $0b, $08
111d6     EB F0 FC FD 
111da     DA C8 D2 D6 
111de     FB FC 1F 37 
111e2     51 45 46 32 | 	byte	$eb, $f0, $fc, $fd, $da, $c8, $d2, $d6, $fb, $fc, $1f, $37, $51, $45, $46, $32
111e6     FD D2 E4 E7 
111ea     D5 DA BC D9 
111ee     00 FE 0F 21 
111f2     23 E6 D2 E8 | 	byte	$fd, $d2, $e4, $e7, $d5, $da, $bc, $d9, $00, $fe, $0f, $21, $23, $e6, $d2, $e8
111f6     EF 08 2E 37 
111fa     3D 38 23 3C 
111fe     35 F5 A4 96 
11202     A4 9A CB E1 | 	byte	$ef, $08, $2e, $37, $3d, $38, $23, $3c, $35, $f5, $a4, $96, $a4, $9a, $cb, $e1
11206     01 24 39 45 
1120a     54 44 10 00 
1120e     FA EC E0 FF 
11212     13 15 0F F7 | 	byte	$01, $24, $39, $45, $54, $44, $10, $00, $fa, $ec, $e0, $ff, $13, $15, $0f, $f7
11216     EF EF EB BE 
1121a     C4 C1 D0 FD 
1121e     09 27 42 53 
11222     58 44 37 00 | 	byte	$ef, $ef, $eb, $be, $c4, $c1, $d0, $fd, $09, $27, $42, $53, $58, $44, $37, $00
11226     C8 E3 E1 D3 
1122a     D3 CA DA 02 
1122e     01 17 21 17 
11232     E3 D5 EB E5 | 	byte	$c8, $e3, $e1, $d3, $d3, $ca, $da, $02, $01, $17, $21, $17, $e3, $d5, $eb, $e5
11236     0A 33 38 4C 
1123a     34 23 34 35 
1123e     E4 A0 A8 A1 
11242     96 CE EA 00 | 	byte	$0a, $33, $38, $4c, $34, $23, $34, $35, $e4, $a0, $a8, $a1, $96, $ce, $ea, $00
11246     21 37 3F 4C 
1124a     2B FD 03 00 
1124e     EA F6 09 1D 
11252     18 19 F4 F8 | 	byte	$21, $37, $3f, $4c, $2b, $fd, $03, $00, $ea, $f6, $09, $1d, $18, $19, $f4, $f8
11256     E9 D5 B3 C8 
1125a     B1 C6 03 11 
1125e     2A 4A 59 67 
11262     4B 39 F9 CB | 	byte	$e9, $d5, $b3, $c8, $b1, $c6, $03, $11, $2a, $4a, $59, $67, $4b, $39, $f9, $cb
11266     D7 CB DC C6 
1126a     D5 E2 FE 04 
1126e     1D 21 0D ED 
11272     D6 DE E8 09 | 	byte	$d7, $cb, $dc, $c6, $d5, $e2, $fe, $04, $1d, $21, $0d, $ed, $d6, $de, $e8, $09
11276     2F 3F 4F 2F 
1127a     2B 2D 24 EE 
1127e     9F AE 9B AD 
11282     CA F2 0C 1B | 	byte	$2f, $3f, $4f, $2f, $2b, $2d, $24, $ee, $9f, $ae, $9b, $ad, $ca, $f2, $0c, $1b
11286     2F 3D 44 0F 
1128a     07 FD FA EA 
1128e     08 17 22 28 
11292     1C FA FC E8 | 	byte	$2f, $3d, $44, $0f, $07, $fd, $fa, $ea, $08, $17, $22, $28, $1c, $fa, $fc, $e8
11296     BC B5 BC A9 
1129a     C9 FD 18 2F 
1129e     49 59 6B 59 
112a2     30 FF DD C6 | 	byte	$bc, $b5, $bc, $a9, $c9, $fd, $18, $2f, $49, $59, $6b, $59, $30, $ff, $dd, $c6
112a6     C5 DF CB CF 
112aa     EE F0 05 18 
112ae     27 00 F2 DE 
112b2     D0 E5 0C 2C | 	byte	$c5, $df, $cb, $cf, $ee, $f0, $05, $18, $27, $00, $f2, $de, $d0, $e5, $0c, $2c
112b6     40 53 30 2F 
112ba     31 13 ED B5 
112be     A7 9F BE CD 
112c2     EA 12 1B 25 | 	byte	$40, $53, $30, $2f, $31, $13, $ed, $b5, $a7, $9f, $be, $cd, $ea, $12, $1b, $25
112c6     34 3D 04 FB 
112ca     FB F1 02 10 
112ce     29 27 3C 1B 
112d2     01 F2 DC B7 | 	byte	$34, $3d, $04, $fb, $fb, $f1, $02, $10, $29, $27, $3c, $1b, $01, $f2, $dc, $b7
112d6     AA A4 A8 CE 
112da     F9 16 3C 4D 
112de     5A 61 69 2A 
112e2     0A DB CA C1 | 	byte	$aa, $a4, $a8, $ce, $f9, $16, $3c, $4d, $5a, $61, $69, $2a, $0a, $db, $ca, $c1
112e6     D5 D5 CD E8 
112ea     F3 02 15 20 
112ee     01 F9 EA DA 
112f2     E3 05 24 37 | 	byte	$d5, $d5, $cd, $e8, $f3, $02, $15, $20, $01, $f9, $ea, $da, $e3, $05, $24, $37
112f6     53 35 2D 2B 
112fa     11 ED C7 AC 
112fe     A9 BB EB E8 
11302     07 1D 24 1F | 	byte	$53, $35, $2d, $2b, $11, $ed, $c7, $ac, $a9, $bb, $eb, $e8, $07, $1d, $24, $1f
11306     2E FB FF D9 
1130a     F7 07 22 38 
1130e     33 3E 34 02 
11312     F1 C6 AD B2 | 	byte	$2e, $fb, $ff, $d9, $f7, $07, $22, $38, $33, $3e, $34, $02, $f1, $c6, $ad, $b2
11316     9C A2 C8 F4 
1131a     18 36 56 5E 
1131e     53 5C 3D 0F 
11322     F0 CD CA D1 | 	byte	$9c, $a2, $c8, $f4, $18, $36, $56, $5e, $53, $5c, $3d, $0f, $f0, $cd, $ca, $d1
11326     D3 D6 DA EC 
1132a     FD 0B 13 04 
1132e     00 ED F7 EC 
11332     08 1A 2E 47 | 	byte	$d3, $d6, $da, $ec, $fd, $0b, $13, $04, $00, $ed, $f7, $ec, $08, $1a, $2e, $47
11336     37 2B 1D 00 
1133a     F3 C8 C1 B1 
1133e     BA E1 00 05 
11342     19 20 1D 0E | 	byte	$37, $2b, $1d, $00, $f3, $c8, $c1, $b1, $ba, $e1, $00, $05, $19, $20, $1d, $0e
11346     EF FB E1 F6 
1134a     0A 21 46 49 
1134e     3A 40 0E F9 
11352     BB AA A4 9A | 	byte	$ef, $fb, $e1, $f6, $0a, $21, $46, $49, $3a, $40, $0e, $f9, $bb, $aa, $a4, $9a
11356     AD C0 E3 1F 
1135a     3B 4C 66 58 
1135e     3F 36 1B F8 
11362     E2 D5 D6 C9 | 	byte	$ad, $c0, $e3, $1f, $3b, $4c, $66, $58, $3f, $36, $1b, $f8, $e2, $d5, $d6, $c9
11366     DC D3 DE F2 
1136a     00 F9 0C 00 
1136e     F2 0C FC 09 
11372     19 29 3A 2C | 	byte	$dc, $d3, $de, $f2, $00, $f9, $0c, $00, $f2, $0c, $fc, $09, $19, $29, $3a, $2c
11376     28 13 F5 FC 
1137a     DC CA D7 C7 
1137e     DA FD 08 18 
11382     0D 12 00 E8 | 	byte	$28, $13, $f5, $fc, $dc, $ca, $d7, $c7, $da, $fd, $08, $18, $0d, $12, $00, $e8
11386     F5 E0 F6 17 
1138a     26 3A 5E 52 
1138e     35 1E E6 C3 
11392     A2 A6 90 9F | 	byte	$f5, $e0, $f6, $17, $26, $3a, $5e, $52, $35, $1e, $e6, $c3, $a2, $a6, $90, $9f
11396     CE DB 07 3D 
1139a     59 50 5D 37 
1139e     2E 22 00 FF 
113a2     EB E7 CC CB | 	byte	$ce, $db, $07, $3d, $59, $50, $5d, $37, $2e, $22, $00, $ff, $eb, $e7, $cc, $cb
113a6     E4 D2 E4 E4 
113aa     F0 00 0D FE 
113ae     0F 1E 13 20 
113b2     1F 3F 17 0C | 	byte	$e4, $d2, $e4, $e4, $f0, $00, $0d, $fe, $0f, $1e, $13, $20, $1f, $3f, $17, $0c
113b6     06 00 F8 DC 
113ba     DB E6 E8 E8 
113be     EE 03 0E 13 
113c2     EC F7 E7 F0 | 	byte	$06, $00, $f8, $dc, $db, $e6, $e8, $e8, $ee, $03, $0e, $13, $ec, $f7, $e7, $f0
113c6     DE F7 15 27 
113ca     3C 4D 62 4C 
113ce     14 E6 D0 BA 
113d2     9B 98 96 C0 | 	byte	$de, $f7, $15, $27, $3c, $4d, $62, $4c, $14, $e6, $d0, $ba, $9b, $98, $96, $c0
113d6     DD 07 22 4C 
113da     5D 44 41 47 
113de     1A 04 FE 09 
113e2     F5 E0 C6 D8 | 	byte	$dd, $07, $22, $4c, $5d, $44, $41, $47, $1a, $04, $fe, $09, $f5, $e0, $c6, $d8
113e6     DF D0 CA E4 
113ea     00 FF 0B 21 
113ee     22 1E 2B 2B 
113f2     23 11 EF F8 | 	byte	$df, $d0, $ca, $e4, $00, $ff, $0b, $21, $22, $1e, $2b, $2b, $23, $11, $ef, $f8
113f6     00 03 DA E5 
113fa     EF 01 F4 04 
113fe     FB F4 EE EF 
11402     F3 E3 EB E3 | 	byte	$00, $03, $da, $e5, $ef, $01, $f4, $04, $fb, $f4, $ee, $ef, $f3, $e3, $eb, $e3
11406     01 1D 24 3D 
1140a     4F 53 4A 1E 
1140e     FC D1 C8 B4 
11412     98 98 C6 CD | 	byte	$01, $1d, $24, $3d, $4f, $53, $4a, $1e, $fc, $d1, $c8, $b4, $98, $98, $c6, $cd
11416     FB 21 31 3A 
1141a     43 51 45 35 
1141e     11 F8 00 06 
11422     E0 DB D9 C3 | 	byte	$fb, $21, $31, $3a, $43, $51, $45, $35, $11, $f8, $00, $06, $e0, $db, $d9, $c3
11426     D5 D0 DD F0 
1142a     FC 03 1C 38 
1142e     30 10 31 26 
11432     E8 F9 00 F3 | 	byte	$d5, $d0, $dd, $f0, $fc, $03, $1c, $38, $30, $10, $31, $26, $e8, $f9, $00, $f3
11436     01 EC ED FC 
1143a     08 10 06 08 
1143e     EE C3 EB ED 
11442     DE EC E9 FF | 	byte	$01, $ec, $ed, $fc, $08, $10, $06, $08, $ee, $c3, $eb, $ed, $de, $ec, $e9, $ff
11446     29 2D 35 4D 
1144a     4A 32 22 10 
1144e     EF C8 BE A2 
11452     A5 B7 CB E8 | 	byte	$29, $2d, $35, $4d, $4a, $32, $22, $10, $ef, $c8, $be, $a2, $a5, $b7, $cb, $e8
11456     15 12 21 47 
1145a     4C 4F 46 19 
1145e     0D FF 03 DD 
11462     DA DA B8 D1 | 	byte	$15, $12, $21, $47, $4c, $4f, $46, $19, $0d, $ff, $03, $dd, $da, $da, $b8, $d1
11466     EA DE EC F7 
1146a     00 1F 30 32 
1146e     22 1D 12 E3 
11472     00 04 F1 05 | 	byte	$ea, $de, $ec, $f7, $00, $1f, $30, $32, $22, $1d, $12, $e3, $00, $04, $f1, $05
11476     FB ED 00 0B 
1147a     19 1B 0C E0 
1147e     C6 DE D6 D0 
11482     EE EF 06 1C | 	byte	$fb, $ed, $00, $0b, $19, $1b, $0c, $e0, $c6, $de, $d6, $d0, $ee, $ef, $06, $1c
11486     33 40 41 36 
1148a     2C 2D 00 00 
1148e     00 00 FA FC 
11492     FB 07 F2 05 | 	byte	$33, $40, $41, $36, $2c, $2d, $00, $00, $00, $00, $fa, $fc, $fb, $07, $f2, $05
11496     FC 00 07 0B 
1149a     0A F3 04 FA 
1149e     0B F7 09 EE 
114a2     FF 08 07 F6 | 	byte	$fc, $00, $07, $0b, $0a, $f3, $04, $fa, $0b, $f7, $09, $ee, $ff, $08, $07, $f6
114a6     F5 FC FC 06 
114aa     02 02 E7 F0 
114ae     13 01 22 D3 
114b2     7F C2 CB 82 | 	byte	$f5, $fc, $fc, $06, $02, $02, $e7, $f0, $13, $01, $22, $d3, $7f, $c2, $cb, $82
114b6     7F 3C B7 19 
114ba     65 AE 7F E8 
114be     58 06 F1 39 
114c2     A8 30 3F 96 | 	byte	$7f, $3c, $b7, $19, $65, $ae, $7f, $e8, $58, $06, $f1, $39, $a8, $30, $3f, $96
114c6     3A F0 B7 14 
114ca     CA DD 05 BB 
114ce     B0 DD DC B2 
114d2     CF B3 B6 F0 | 	byte	$3a, $f0, $b7, $14, $ca, $dd, $05, $bb, $b0, $dd, $dc, $b2, $cf, $b3, $b6, $f0
114d6     AF C4 C4 DE 
114da     B2 B3 F0 1D 
114de     9B 80 68 34 
114e2     06 A0 A3 47 | 	byte	$af, $c4, $c4, $de, $b2, $b3, $f0, $1d, $9b, $80, $68, $34, $06, $a0, $a3, $47
114e6     48 32 34 31 
114ea     2C 38 39 38 
114ee     3C 3E 3B 44 
114f2     48 61 65 4C | 	byte	$48, $32, $34, $31, $2c, $38, $39, $38, $3c, $3e, $3b, $44, $48, $61, $65, $4c
114f6     5A 48 43 49 
114fa     44 40 3E 3D 
114fe     2B 2C 36 2D 
11502     26 24 11 2E | 	byte	$5a, $48, $43, $49, $44, $40, $3e, $3d, $2b, $2c, $36, $2d, $26, $24, $11, $2e
11506     15 09 12 11 
1150a     15 D6 1E CD 
1150e     E9 EB E7 C4 
11512     D4 D9 CE AD | 	byte	$15, $09, $12, $11, $15, $d6, $1e, $cd, $e9, $eb, $e7, $c4, $d4, $d9, $ce, $ad
11516     B3 AD A3 AC 
1151a     AC A8 A8 AC 
1151e     AB A8 AB A8 
11522     AC AA A5 8F | 	byte	$b3, $ad, $a3, $ac, $ac, $a8, $a8, $ac, $ab, $a8, $ab, $a8, $ac, $aa, $a5, $8f
11526     9F AA AA B0 
1152a     B0 B3 BF C2 
1152e     CA CD D2 D9 
11532     DB E6 ED F8 | 	byte	$9f, $aa, $aa, $b0, $b0, $b3, $bf, $c2, $ca, $cd, $d2, $d9, $db, $e6, $ed, $f8
11536     EE FA 08 08 
1153a     01 10 19 0C 
1153e     24 30 18 26 
11542     54 24 2A 79 | 	byte	$ee, $fa, $08, $08, $01, $10, $19, $0c, $24, $30, $18, $26, $54, $24, $2a, $79
11546     4C 31 77 65 
1154a     57 7F 79 73 
1154e     74 74 71 72 
11552     71 6F 6A 6D | 	byte	$4c, $31, $77, $65, $57, $7f, $79, $73, $74, $74, $71, $72, $71, $6f, $6a, $6d
11556     68 61 64 6B 
1155a     79 5D 57 5A 
1155e     55 4E 3E 4B 
11562     37 2C 2C 29 | 	byte	$68, $61, $64, $6b, $79, $5d, $57, $5a, $55, $4e, $3e, $4b, $37, $2c, $2c, $29
11566     1D 14 16 0B 
1156a     FD 01 F8 EC 
1156e     E3 E5 DB D4 
11572     C7 C8 C2 AF | 	byte	$1d, $14, $16, $0b, $fd, $01, $f8, $ec, $e3, $e5, $db, $d4, $c7, $c8, $c2, $af
11576     B9 B3 A6 AD 
1157a     A2 9C 9C A8 
1157e     8E 8C A2 8B 
11582     81 93 99 8C | 	byte	$b9, $b3, $a6, $ad, $a2, $9c, $9c, $a8, $8e, $8c, $a2, $8b, $81, $93, $99, $8c
11586     84 97 86 88 
1158a     8D 96 8E A9 
1158e     91 A3 9E 9D 
11592     B2 B3 AC B2 | 	byte	$84, $97, $86, $88, $8d, $96, $8e, $a9, $91, $a3, $9e, $9d, $b2, $b3, $ac, $b2
11596     BF BB BC D2 
1159a     D4 CB D6 D2 
1159e     E0 EF EC EE 
115a2     FA F9 FE 05 | 	byte	$bf, $bb, $bc, $d2, $d4, $cb, $d6, $d2, $e0, $ef, $ec, $ee, $fa, $f9, $fe, $05
115a6     14 0F 1A 11 
115aa     22 29 29 31 
115ae     3F 2E 48 38 
115b2     3F 66 4E 36 | 	byte	$14, $0f, $1a, $11, $22, $29, $29, $31, $3f, $2e, $48, $38, $3f, $66, $4e, $36
115b6     55 5E 42 5F 
115ba     68 5B 68 67 
115be     5E 5D 70 71 
115c2     65 61 6F 67 | 	byte	$55, $5e, $42, $5f, $68, $5b, $68, $67, $5e, $5d, $70, $71, $65, $61, $6f, $67
115c6     5C 69 6C 64 
115ca     5D 54 5D 55 
115ce     5D 4E 43 46 
115d2     47 44 40 3C | 	byte	$5c, $69, $6c, $64, $5d, $54, $5d, $55, $5d, $4e, $43, $46, $47, $44, $40, $3c
115d6     30 34 2D 2F 
115da     22 22 22 10 
115de     1A 16 06 0F 
115e2     0F FF 02 09 | 	byte	$30, $34, $2d, $2f, $22, $22, $22, $10, $1a, $16, $06, $0f, $0f, $ff, $02, $09
115e6     F4 F2 F7 EF 
115ea     F2 F2 E4 E2 
115ee     EC E3 E1 DD 
115f2     D8 D7 D4 D3 | 	byte	$f4, $f2, $f7, $ef, $f2, $f2, $e4, $e2, $ec, $e3, $e1, $dd, $d8, $d7, $d4, $d3
115f6     DC D1 CA CE 
115fa     C7 CD CA BF 
115fe     C4 C2 BD C3 
11602     B9 B8 BF B0 | 	byte	$dc, $d1, $ca, $ce, $c7, $cd, $ca, $bf, $c4, $c2, $bd, $c3, $b9, $b8, $bf, $b0
11606     B2 BD B4 B2 
1160a     B2 AF B2 AF 
1160e     B4 AE B1 B2 
11612     B1 B0 B1 B3 | 	byte	$b2, $bd, $b4, $b2, $b2, $af, $b2, $af, $b4, $ae, $b1, $b2, $b1, $b0, $b1, $b3
11616     B5 B0 B7 B6 
1161a     B6 B8 BA B9 
1161e     C3 BE C4 BA 
11622     C7 C8 C3 CA | 	byte	$b5, $b0, $b7, $b6, $b6, $b8, $ba, $b9, $c3, $be, $c4, $ba, $c7, $c8, $c3, $ca
11626     D0 D8 C9 CD 
1162a     D5 CE DE DB 
1162e     DA EB E7 E4 
11632     EA EE F2 F8 | 	byte	$d0, $d8, $c9, $cd, $d5, $ce, $de, $db, $da, $eb, $e7, $e4, $ea, $ee, $f2, $f8
11636     FB FF F8 02 
1163a     07 16 09 12 
1163e     14 19 1D 23 
11642     29 2A 34 33 | 	byte	$fb, $ff, $f8, $02, $07, $16, $09, $12, $14, $19, $1d, $23, $29, $2a, $34, $33
11646     33 3D 47 41 
1164a     49 51 50 51 
1164e     5B 59 5D 66 
11652     63 66 6A 6B | 	byte	$33, $3d, $47, $41, $49, $51, $50, $51, $5b, $59, $5d, $66, $63, $66, $6a, $6b
11656     6D 6D 71 6F 
1165a     75 70 73 73 
1165e     70 75 74 72 
11662     6E 6B 6A 6C | 	byte	$6d, $6d, $71, $6f, $75, $70, $73, $73, $70, $75, $74, $72, $6e, $6b, $6a, $6c
11666     68 64 61 60 
1166a     5F 54 4E 54 
1166e     50 50 3C 42 
11672     44 35 30 2F | 	byte	$68, $64, $61, $60, $5f, $54, $4e, $54, $50, $50, $3c, $42, $44, $35, $30, $2f
11676     2A 22 21 1D 
1167a     16 15 07 06 
1167e     02 FB F9 F2 
11682     EB E8 E3 DC | 	byte	$2a, $22, $21, $1d, $16, $15, $07, $06, $02, $fb, $f9, $f2, $eb, $e8, $e3, $dc
11686     D8 D4 CE CB 
1168a     C5 C1 BD B8 
1168e     B6 AF AE AA 
11692     A8 A4 A2 9E | 	byte	$d8, $d4, $ce, $cb, $c5, $c1, $bd, $b8, $b6, $af, $ae, $aa, $a8, $a4, $a2, $9e
11696     9C 9D 98 98 
1169a     96 94 95 97 
1169e     92 95 95 93 
116a2     96 97 98 9C | 	byte	$9c, $9d, $98, $98, $96, $94, $95, $97, $92, $95, $95, $93, $96, $97, $98, $9c
116a6     9D 9C A0 A4 
116aa     A5 A4 A7 AD 
116ae     B0 B1 B5 B9 
116b2     BB BF C5 C7 | 	byte	$9d, $9c, $a0, $a4, $a5, $a4, $a7, $ad, $b0, $b1, $b5, $b9, $bb, $bf, $c5, $c7
116b6     C9 CE D1 D6 
116ba     D9 DF E1 E5 
116be     EA ED F0 F4 
116c2     F9 FC FF 04 | 	byte	$c9, $ce, $d1, $d6, $d9, $df, $e1, $e5, $ea, $ed, $f0, $f4, $f9, $fc, $ff, $04
116c6     07 09 0D 11 
116ca     15 16 1B 1D 
116ce     1F 22 27 27 
116d2     2B 2D 2E 31 | 	byte	$07, $09, $0d, $11, $15, $16, $1b, $1d, $1f, $22, $27, $27, $2b, $2d, $2e, $31
116d6     33 35 37 39 
116da     39 3A 3D 3D 
116de     3E 3D 41 3F 
116e2     3F 3E 3F 40 | 	byte	$33, $35, $37, $39, $39, $3a, $3d, $3d, $3e, $3d, $41, $3f, $3f, $3e, $3f, $40
116e6     3E 3F 3D 3D 
116ea     3C 3A 3A 39 
116ee     36 36 35 35 
116f2     30 30 2F 2D | 	byte	$3e, $3f, $3d, $3d, $3c, $3a, $3a, $39, $36, $36, $35, $35, $30, $30, $2f, $2d
116f6     2A 28 26 25 
116fa     24 21 1F 1F 
116fe     1A 1A 18 16 
11702     15 13 11 0E | 	byte	$2a, $28, $26, $25, $24, $21, $1f, $1f, $1a, $1a, $18, $16, $15, $13, $11, $0e
11706     0D 0C 0A 08 
1170a     05 05 04 02 
1170e     FE FF FE FC 
11712     FA FA F8 F6 | 	byte	$0d, $0c, $0a, $08, $05, $05, $04, $02, $fe, $ff, $fe, $fc, $fa, $fa, $f8, $f6
11716     F7 F5 F5 F3 
1171a     F3 F2 F2 F1 
1171e     F1 F0 F0 F0 
11722     F0 F0 EF EE | 	byte	$f7, $f5, $f5, $f3, $f3, $f2, $f2, $f1, $f1, $f0, $f0, $f0, $f0, $f0, $ef, $ee
11726     EF EF EE EF 
1172a     EF EE EF EF 
1172e     EE EF F0 F0 
11732     EF F0 F0 EF | 	byte	$ef, $ef, $ee, $ef, $ef, $ee, $ef, $ef, $ee, $ef, $f0, $f0, $ef, $f0, $f0, $ef
11736     F1 F0 F1 F1 
1173a     F1 F0 F2 F2 
1173e     F1 F2 F1 F2 
11742     F1 F3 F2 F1 | 	byte	$f1, $f0, $f1, $f1, $f1, $f0, $f2, $f2, $f1, $f2, $f1, $f2, $f1, $f3, $f2, $f1
11746     F2 F2 F3 F3 
1174a     F3 F2 F4 F3 
1174e     F3 F3 F4 F3 
11752     F3 F3 F4 F3 | 	byte	$f2, $f2, $f3, $f3, $f3, $f2, $f4, $f3, $f3, $f3, $f4, $f3, $f3, $f3, $f4, $f3
11756     F5 F5 F4 F5 
1175a     F6 F6 F6 F8 
1175e     F7 F8 F8 F8 
11762     F9 FA FA F9 | 	byte	$f5, $f5, $f4, $f5, $f6, $f6, $f6, $f8, $f7, $f8, $f8, $f8, $f9, $fa, $fa, $f9
11766     FA FA FB FB 
1176a     FB FC FA FC 
1176e     FD FC FD FC 
11772     FD FD FD FE | 	byte	$fa, $fa, $fb, $fb, $fb, $fc, $fa, $fc, $fd, $fc, $fd, $fc, $fd, $fd, $fd, $fe
11776     FE FF FD FF 
1177a     FE FE FF FF 
1177e     00 FE FE 00 
11782     FF 00 00 01 | 	byte	$fe, $ff, $fd, $ff, $fe, $fe, $ff, $ff, $00, $fe, $fe, $00, $ff, $00, $00, $01
11786     FF 01 01 01 
1178a     01 02 02 02 
1178e     03 01 03 03 
11792     03 04 03 05 | 	byte	$ff, $01, $01, $01, $01, $02, $02, $02, $03, $01, $03, $03, $03, $04, $03, $05
11796     03 05 05 04 
1179a     05 06 06 06 
1179e     07 06 06 07 
117a2     07 07 08 07 | 	byte	$03, $05, $05, $04, $05, $06, $06, $06, $07, $06, $06, $07, $07, $07, $08, $07
117a6     07 08 08 07 
117aa     07 08 07 07 
117ae     08 08 07 09 
117b2     08 07 07 08 | 	byte	$07, $08, $08, $07, $07, $08, $07, $07, $08, $08, $07, $09, $08, $07, $07, $08
117b6     07 07 07 07 
117ba     07 07 07 07 
117be     07 07 07 07 
117c2     07 07 07 07 | 	byte	$07[16]
117c6     06 06 07 05 
117ca     05 06 05 05 
117ce     06 05 05 05 
117d2     05 04 04 05 | 	byte	$06, $06, $07, $05, $05, $06, $05, $05, $06, $05, $05, $05, $05, $04, $04, $05
117d6     04 04 05 04 
117da     04 04 04 03 
117de     03 03 03 03 
117e2     02 02 02 02 | 	byte	$04, $04, $05, $04, $04, $04, $04, $03, $03, $03, $03, $03, $02, $02, $02, $02
117e6     01 00 01 00 
117ea     00 00 FF FF 
117ee     FF FF FE FE 
117f2     FE FD FD FC | 	byte	$01, $00, $01, $00, $00, $00, $ff, $ff, $ff, $ff, $fe, $fe, $fe, $fd, $fd, $fc
117f6     FC FC FC FC 
117fa     FB FC FB FA 
117fe     FA FB FA F9 
11802     FA F9 F9 F9 | 	byte	$fc, $fc, $fc, $fc, $fb, $fc, $fb, $fa, $fa, $fb, $fa, $f9, $fa, $f9, $f9, $f9
11806     F8 F8 F9 F9 
1180a     F8 F9 F9 F8 
1180e     F9 F9 F9 F9 
11812     F9 F9 F8 F9 | 	byte	$f8, $f8, $f9, $f9, $f8, $f9, $f9, $f8, $f9, $f9, $f9, $f9, $f9, $f9, $f8, $f9
11816     F9 F9 F9 F9 
1181a     F9          | 	byte	$f9[5]
1181b     FA FA F9 FA 
1181f     FB FA FA FB 
11823     FB FB FB FC 
11827     FB FC FC FC | 	byte	$fa, $fa, $f9, $fa, $fb, $fa, $fa, $fb, $fb, $fb, $fb, $fc, $fb, $fc, $fc, $fc
1182b     FC FC FD FC 
1182f     FD FD FD FE 
11833     FE FE FE FF 
11837     FE FF FF FF | 	byte	$fc, $fc, $fd, $fc, $fd, $fd, $fd, $fe, $fe, $fe, $fe, $ff, $fe, $ff, $ff, $ff
1183b     FF 00 FF FF 
1183f     00 00 00 00 
11843     01 00 01 01 
11847     01 01 01 01 | 	byte	$ff, $00, $ff, $ff, $00, $00, $00, $00, $01, $00, $01, $01, $01, $01, $01, $01
1184b     01 02 02 01 
1184f     02 03 02 02 
11853     02 02 02 03 
11857     03 03 04 03 | 	byte	$01, $02, $02, $01, $02, $03, $02, $02, $02, $02, $02, $03, $03, $03, $04, $03
1185b     03 03 03 03 
1185f     04 04 03 03 
11863     04 03 03 04 
11867     04 03 04 04 | 	byte	$03, $03, $03, $03, $04, $04, $03, $03, $04, $03, $03, $04, $04, $03, $04, $04
1186b     03 03 03 04 
1186f     03 03 03 03 
11873     03 03 02 03 
11877     02 02 02 02 | 	byte	$03, $03, $03, $04, $03, $03, $03, $03, $03, $03, $02, $03, $02, $02, $02, $02
1187b     02 02 02 02 
1187f     02 02 02 02 
11883     02 02 02 02 
11887     02 02       | 	byte	$02[14]
11889     01 02 02 01 
1188d     01 01 01 01 
11891     01 01 00 00 
11895     00 00 00 00 | 	byte	$01, $02, $02, $01, $01, $01, $01, $01, $01, $01, $00, $00, $00, $00, $00, $00
11899     FF FF FF FF 
1189d     FE FE FE FD 
118a1     FE FD FD FE 
118a5     FD FD FE FE | 	byte	$ff, $ff, $ff, $ff, $fe, $fe, $fe, $fd, $fe, $fd, $fd, $fe, $fd, $fd, $fe, $fe
118a9     FE FE FE FE 
118ad     FF FF FF FE 
118b1     FF FE FE FF 
118b5     FF FE FF FF | 	byte	$fe, $fe, $fe, $fe, $ff, $ff, $ff, $fe, $ff, $fe, $fe, $ff, $ff, $fe, $ff, $ff
118b9     FF FF FF FF 
118bd     00 00 00 00 
118c1     00 01 01 01 
118c5     00 00 00 00 | 	byte	$ff, $ff, $ff, $ff, $00, $00, $00, $00, $00, $01, $01, $01, $00, $00, $00, $00
118c9     00 00 00 00 
118cd     00 00 00    | 	byte	$00[7]
118d0     FF 00 FF FF 
118d4     FF FF FF FF 
118d8     FF FF FF FF 
118dc     FE FF FE FE | 	byte	$ff, $00, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $fe, $ff, $fe, $fe
118e0     FF FF FF FE 
118e4     FF FE 00 00 
118e8     00 00 04 06 
118ec     04 00 00 FC | 	byte	$ff, $ff, $ff, $fe, $ff, $fe, $00, $00, $00, $00, $04, $06, $04, $00, $00, $fc
118f0     FD FE FC FE 
118f4     01 02 02 FC 
118f8     01 02 00 02 
118fc     00 FE 04 01 | 	byte	$fd, $fe, $fc, $fe, $01, $02, $02, $fc, $01, $02, $00, $02, $00, $fe, $04, $01
11900     03 03 FC FB 
11904     FE 02 06 00 
11908     F7 FC 04 05 
1190c     FC 02 05 FB | 	byte	$03, $03, $fc, $fb, $fe, $02, $06, $00, $f7, $fc, $04, $05, $fc, $02, $05, $fb
11910     FD FD F9 00 
11914     06 06 FE F9 
11918     00 FE FF 07 
1191c     02 FE FD 02 | 	byte	$fd, $fd, $f9, $00, $06, $06, $fe, $f9, $00, $fe, $ff, $07, $02, $fe, $fd, $02
11920     07 00 00 FE 
11924     FC 00 01 F5 
11928     F9 03 06 00 
1192c     FC 02 02 FE | 	byte	$07, $00, $00, $fe, $fc, $00, $01, $f5, $f9, $03, $06, $00, $fc, $02, $02, $fe
11930     00 00 00 FE 
11934     03 07 00 FA 
11938     FC FA 02 07 
1193c     00 FD FD 00 | 	byte	$00, $00, $00, $fe, $03, $07, $00, $fa, $fc, $fa, $02, $07, $00, $fd, $fd, $00
11940     FE FA FD 02 
11944     02 04 04 FC 
11948     FE 05 0B 00 
1194c     FC 00 F9 FC | 	byte	$fe, $fa, $fd, $02, $02, $04, $04, $fc, $fe, $05, $0b, $00, $fc, $00, $f9, $fc
11950     00 FC F8 FC 
11954     06 02 00 FE 
11958     FD FC 03 0C 
1195c     06 03 02 06 | 	byte	$00, $fc, $f8, $fc, $06, $02, $00, $fe, $fd, $fc, $03, $0c, $06, $03, $02, $06
11960     00 F9 FC 00 
11964     04 02 F5 F5 
11968     FB 05 00 FE 
1196c     FF FC FB 00 | 	byte	$00, $f9, $fc, $00, $04, $02, $f5, $f5, $fb, $05, $00, $fe, $ff, $fc, $fb, $00
11970     0B 09 FF FC 
11974     06 09 FE FC 
11978     FE 02 06 00 
1197c     00 FE 03 FF | 	byte	$0b, $09, $ff, $fc, $06, $09, $fe, $fc, $fe, $02, $06, $00, $00, $fe, $03, $ff
11980     F7 F8 FE 02 
11984     02 07 04 FC 
11988     FC 02 09 02 
1198c     FA F0 F8 FE | 	byte	$f7, $f8, $fe, $02, $02, $07, $04, $fc, $fc, $02, $09, $02, $fa, $f0, $f8, $fe
11990     FE 00 FE 06 
11994     06 01 01 02 
11998     07 06 0C 09 
1199c     04 FF FC 04 | 	byte	$fe, $00, $fe, $06, $06, $01, $01, $02, $07, $06, $0c, $09, $04, $ff, $fc, $04
119a0     FB F7 F5 FB 
119a4     FE FB FA F7 
119a8     F8 FC FE 01 
119ac     FF 02 06 0B | 	byte	$fb, $f7, $f5, $fb, $fe, $fb, $fa, $f7, $f8, $fc, $fe, $01, $ff, $02, $06, $0b
119b0     0F 0A 05 06 
119b4     10 01 F7 F5 
119b8     FA FF 00 00 
119bc     FF F7 F3 F7 | 	byte	$0f, $0a, $05, $06, $10, $01, $f7, $f5, $fa, $ff, $00, $00, $ff, $f7, $f3, $f7
119c0     FE FE 00 02 
119c4     04 09 09 04 
119c8     04 0D 0A F9 
119cc     F2 FA 02 00 | 	byte	$fe, $fe, $00, $02, $04, $09, $09, $04, $04, $0d, $0a, $f9, $f2, $fa, $02, $00
119d0     FA FD FB F5 
119d4     00 03 03 03 
119d8     06 04 0D 10 
119dc     02 FC FE FF | 	byte	$fa, $fd, $fb, $f5, $00, $03, $03, $03, $06, $04, $0d, $10, $02, $fc, $fe, $ff
119e0     F6 F8 FC 02 
119e4     00 FA FF FE 
119e8     F2 00 02 F9 
119ec     FE 00 02 0B | 	byte	$f6, $f8, $fc, $02, $00, $fa, $ff, $fe, $f2, $00, $02, $f9, $fe, $00, $02, $0b
119f0     0F 06 03 07 
119f4     09 FC F2 F6 
119f8     FE FC FE 04 
119fc     01 F0 FB 03 | 	byte	$0f, $06, $03, $07, $09, $fc, $f2, $f6, $fe, $fc, $fe, $04, $01, $f0, $fb, $03
11a00     04 09 0B 09 
11a04     09 09 02 FE 
11a08     00 02 F5 EE 
11a0c     EE F7 FD F9 | 	byte	$04, $09, $0b, $09, $09, $09, $02, $fe, $00, $02, $f5, $ee, $ee, $f7, $fd, $f9
11a10     FB FD F0 F9 
11a14     09 0D 0E 10 
11a18     0E 11 1B 14 
11a1c     04 05 02 F9 | 	byte	$fb, $fd, $f0, $f9, $09, $0d, $0e, $10, $0e, $11, $1b, $14, $04, $05, $02, $f9
11a20     ED EF F3 F4 
11a24     F1 F7 FB EC 
11a28     F0 FC FD FC 
11a2c     05 0A 09 12 | 	byte	$ed, $ef, $f3, $f4, $f1, $f7, $fb, $ec, $f0, $fc, $fd, $fc, $05, $0a, $09, $12
11a30     19 0F 0E 0E 
11a34     0B 01 FC FE 
11a38     00 FC 00 FA 
11a3c     E5 E5 F3 FF | 	byte	$19, $0f, $0e, $0e, $0b, $01, $fc, $fe, $00, $fc, $00, $fa, $e5, $e5, $f3, $ff
11a40     03 06 07 02 
11a44     06 04 00 03 
11a48     02 F9 F3 F7 
11a4c     FC FE FF 08 | 	byte	$03, $06, $07, $02, $06, $04, $00, $03, $02, $f9, $f3, $f7, $fc, $fe, $ff, $08
11a50     0A FA FB 04 
11a54     11 0E 07 09 
11a58     05 09 12 05 
11a5c     FB FF F7 E8 | 	byte	$0a, $fa, $fb, $04, $11, $0e, $07, $09, $05, $09, $12, $05, $fb, $ff, $f7, $e8
11a60     E5 F0 F3 F0 
11a64     F9 00 FA F7 
11a68     F5 05 12 12 
11a6c     12 12 12 17 | 	byte	$e5, $f0, $f3, $f0, $f9, $00, $fa, $f7, $f5, $05, $12, $12, $12, $12, $12, $17
11a70     0D 00 04 04 
11a74     F7 F4 F3 F5 
11a78     F3 FB F7 E2 
11a7c     E9 F1 FF 0B | 	byte	$0d, $00, $04, $04, $f7, $f4, $f3, $f5, $f3, $fb, $f7, $e2, $e9, $f1, $ff, $0b
11a80     11 15 0E 0A 
11a84     13 19 0D 04 
11a88     00 EE F0 F0 
11a8c     EC EB F9 00 | 	byte	$11, $15, $0e, $0a, $13, $19, $0d, $04, $00, $ee, $f0, $f0, $ec, $eb, $f9, $00
11a90     F2 F3 FC 06 
11a94     0D 09 09 13 
11a98     12 15 17 0A 
11a9c     07 06 F5 F5 | 	byte	$f2, $f3, $fc, $06, $0d, $09, $09, $13, $12, $15, $17, $0a, $07, $06, $f5, $f5
11aa0     FC F5 EC F7 
11aa4     FC EE E8 E3 
11aa8     ED 00 0B 0A 
11aac     0F 0E 10 10 | 	byte	$fc, $f5, $ec, $f7, $fc, $ee, $e8, $e3, $ed, $00, $0b, $0a, $0f, $0e, $10, $10
11ab0     06 05 10 04 
11ab4     FC 00 FE FA 
11ab8     FE 05 FA F5 
11abc     F7 F9 06 0D | 	byte	$06, $05, $10, $04, $fc, $00, $fe, $fa, $fe, $05, $fa, $f5, $f7, $f9, $06, $0d
11ac0     07 02 00 02 
11ac4     09 02 F9 F9 
11ac8     F5 E3 EB EB 
11acc     EA FC 08 00 | 	byte	$07, $02, $00, $02, $09, $02, $f9, $f9, $f5, $e3, $eb, $eb, $ea, $fc, $08, $00
11ad0     00 09 0E 14 
11ad4     21 22 1E 1B 
11ad8     15 15 06 F5 
11adc     F4 F3 E0 E4 | 	byte	$00, $09, $0e, $14, $21, $22, $1e, $1b, $15, $15, $06, $f5, $f4, $f3, $e0, $e4
11ae0     E1 DD E9 F2 
11ae4     E6 E5 E9 F3 
11ae8     00 14 20 22 
11aec     22 1D 1E 1F | 	byte	$e1, $dd, $e9, $f2, $e6, $e5, $e9, $f3, $00, $14, $20, $22, $22, $1d, $1e, $1f
11af0     16 16 11 00 
11af4     FC EC E0 EC 
11af8     F4 E9 DE E6 
11afc     F4 FA FD 04 | 	byte	$16, $16, $11, $00, $fc, $ec, $e0, $ec, $f4, $e9, $de, $e6, $f4, $fa, $fd, $04
11b00     08 08 0B 12 
11b04     15 07 09 06 
11b08     FC F4 FD F7 
11b0c     FB 02 00 F9 | 	byte	$08, $08, $0b, $12, $15, $07, $09, $06, $fc, $f4, $fd, $f7, $fb, $02, $00, $f9
11b10     F5 FC 04 0B 
11b14     12 0E 13 14 
11b18     0D 00 F3 F8 
11b1c     F7 FA EA EC | 	byte	$f5, $fc, $04, $0b, $12, $0e, $13, $14, $0d, $00, $f3, $f8, $f7, $fa, $ea, $ec
11b20     E7 F3 FC F6 
11b24     EF F8 00 02 
11b28     06 1B 1B 11 
11b2c     10 0F 10 02 | 	byte	$e7, $f3, $fc, $f6, $ef, $f8, $00, $02, $06, $1b, $1b, $11, $10, $0f, $10, $02
11b30     04 07 07 F0 
11b34     E3 E2 EE F8 
11b38     F6 EE F7 00 
11b3c     09 0B 10 17 | 	byte	$04, $07, $07, $f0, $e3, $e2, $ee, $f8, $f6, $ee, $f7, $00, $09, $0b, $10, $17
11b40     1B 17 12 12 
11b44     03 F5 F1 F0 
11b48     EA D9 DE E9 
11b4c     F7 F6 EA F5 | 	byte	$1b, $17, $12, $12, $03, $f5, $f1, $f0, $ea, $d9, $de, $e9, $f7, $f6, $ea, $f5
11b50     01 0C 13 1C 
11b54     28 29 29 24 
11b58     1B 09 01 06 
11b5c     FF FB DB D7 | 	byte	$01, $0c, $13, $1c, $28, $29, $29, $24, $1b, $09, $01, $06, $ff, $fb, $db, $d7
11b60     D7 E0 E7 D3 
11b64     D7 EA F9 01 
11b68     00 10 1D 20 
11b6c     1C 1D 20 15 | 	byte	$d7, $e0, $e7, $d3, $d7, $ea, $f9, $01, $00, $10, $1d, $20, $1c, $1d, $20, $15
11b70     19 19 19 F9 
11b74     EB F8 FE FE 
11b78     EB E9 F1 EF 
11b7c     F7 F7 F4 02 | 	byte	$19, $19, $19, $f9, $eb, $f8, $fe, $fe, $eb, $e9, $f1, $ef, $f7, $f7, $f4, $02
11b80     0B 0D 05 F9 
11b84     F1 F8 FF 00 
11b88     EF E7 FE 06 
11b8c     0A FE 04 0B | 	byte	$0b, $0d, $05, $f9, $f1, $f8, $ff, $00, $ef, $e7, $fe, $06, $0a, $fe, $04, $0b
11b90     17 1A 1E 1D 
11b94     20 1E 0F 09 
11b98     FA E5 E7 F2 
11b9c     F3 DC BF D5 | 	byte	$17, $1a, $1e, $1d, $20, $1e, $0f, $09, $fa, $e5, $e7, $f2, $f3, $dc, $bf, $d5
11ba0     E6 F3 E2 E7 
11ba4     FC 0E 17 1E 
11ba8     1D 2B 34 30 
11bac     22 23 17 05 | 	byte	$e6, $f3, $e2, $e7, $fc, $0e, $17, $1e, $1d, $2b, $34, $30, $22, $23, $17, $05
11bb0     04 FE F4 CB 
11bb4     D3 E5 F0 DF 
11bb8     D4 DF F3 02 
11bbc     06 03 10 22 | 	byte	$04, $fe, $f4, $cb, $d3, $e5, $f0, $df, $d4, $df, $f3, $02, $06, $03, $10, $22
11bc0     28 1E 14 0F 
11bc4     00 04 09 FB 
11bc8     EA E7 F7 F6 
11bcc     E4 E7 EE FA | 	byte	$28, $1e, $14, $0f, $00, $04, $09, $fb, $ea, $e7, $f7, $f6, $e4, $e7, $ee, $fa
11bd0     09 14 10 0A 
11bd4     1B 22 1D 17 
11bd8     06 F8 FF 09 
11bdc     FC E7 D9 EB | 	byte	$09, $14, $10, $0a, $1b, $22, $1d, $17, $06, $f8, $ff, $09, $fc, $e7, $d9, $eb
11be0     F7 E2 E0 F1 
11be4     FA 07 06 00 
11be8     02 14 20 1E 
11bec     17 10 00 FB | 	byte	$f7, $e2, $e0, $f1, $fa, $07, $06, $00, $02, $14, $20, $1e, $17, $10, $00, $fb
11bf0     08 0A FA E5 
11bf4     F3 04 FC F7 
11bf8     F3 FB 07 09 
11bfc     05 0A 10 1A | 	byte	$08, $0a, $fa, $e5, $f3, $04, $fc, $f7, $f3, $fb, $07, $09, $05, $0a, $10, $1a
11c00     16 FB F0 EA 
11c04     E2 F2 FA E5 
11c08     D8 E2 F9 F7 
11c0c     F7 06 0C 1A | 	byte	$16, $fb, $f0, $ea, $e2, $f2, $fa, $e5, $d8, $e2, $f9, $f7, $f7, $06, $0c, $1a
11c10     2A 32 2C 27 
11c14     30 2E 1E 0F 
11c18     FD EC ED E9 
11c1c     CC C0 C0 D6 | 	byte	$2a, $32, $2c, $27, $30, $2e, $1e, $0f, $fd, $ec, $ed, $e9, $cc, $c0, $c0, $d6
11c20     D2 CC D8 E9 
11c24     FB 0D 1B 22 
11c28     24 32 3F 3A 
11c2c     36 27 0D 0B | 	byte	$d2, $cc, $d8, $e9, $fb, $0d, $1b, $22, $24, $32, $3f, $3a, $36, $27, $0d, $0b
11c30     10 00 EF E2 
11c34     EE EB DC D1 
11c38     D1 E3 EC FA 
11c3c     FE FE 07 14 | 	byte	$10, $00, $ef, $e2, $ee, $eb, $dc, $d1, $d1, $e3, $ec, $fa, $fe, $fe, $07, $14
11c40     0D 0D 0E 02 
11c44     FF 07 0A 04 
11c48     F8 FC 02 F8 
11c4c     FE 03 0B 14 | 	byte	$0d, $0d, $0e, $02, $ff, $07, $0a, $04, $f8, $fc, $02, $f8, $fe, $03, $0b, $14
11c50     1E 14 02 09 
11c54     17 14 0B F8 
11c58     E1 DA DC E7 
11c5c     EC E4 E2 E3 | 	byte	$1e, $14, $02, $09, $17, $14, $0b, $f8, $e1, $da, $dc, $e7, $ec, $e4, $e2, $e3
11c60     E0 F4 04 0E 
11c64     16 22 26 20 
11c68     20 2E 35 24 
11c6c     0C F5 EE EE | 	byte	$e0, $f4, $04, $0e, $16, $22, $26, $20, $20, $2e, $35, $24, $0c, $f5, $ee, $ee
11c70     F2 EB D9 D8 
11c74     DD DC EE F5 
11c78     F8 FE 08 1A 
11c7c     26 25 21 20 | 	byte	$f2, $eb, $d9, $d8, $dd, $dc, $ee, $f5, $f8, $fe, $08, $1a, $26, $25, $21, $20
11c80     17 0E 00 F8 
11c84     F6 F5 F0 DC 
11c88     D2 DD DE EC 
11c8c     F3 FC 09 14 | 	byte	$17, $0e, $00, $f8, $f6, $f5, $f0, $dc, $d2, $dd, $de, $ec, $f3, $fc, $09, $14
11c90     22 27 2A 2B 
11c94     2E 2A 24 10 
11c98     F6 E5 E9 ED 
11c9c     E8 D1 CC C7 | 	byte	$22, $27, $2a, $2b, $2e, $2a, $24, $10, $f6, $e5, $e9, $ed, $e8, $d1, $cc, $c7
11ca0     D7 DC E5 F1 
11ca4     02 12 17 17 
11ca8     1B 27 30 29 
11cac     1F 19 0A 04 | 	byte	$d7, $dc, $e5, $f1, $02, $12, $17, $17, $1b, $27, $30, $29, $1f, $19, $0a, $04
11cb0     04 09 FA EE 
11cb4     E0 F2 F7 EA 
11cb8     E5 F7 05 09 
11cbc     07 FE F7 04 | 	byte	$04, $09, $fa, $ee, $e0, $f2, $f7, $ea, $e5, $f7, $05, $09, $07, $fe, $f7, $04
11cc0     00 F0 F2 F0 
11cc4     ED EF 00 F7 
11cc8     F2 ED 00 0F 
11ccc     1E 27 29 2B | 	byte	$00, $f0, $f2, $f0, $ed, $ef, $00, $f7, $f2, $ed, $00, $0f, $1e, $27, $29, $2b
11cd0     2D 27 1E 19 
11cd4     21 1A FF DC 
11cd8     C4 C5 CB D7 
11cdc     CD BC B2 CC | 	byte	$2d, $27, $1e, $19, $21, $1a, $ff, $dc, $c4, $c5, $cb, $d7, $cd, $bc, $b2, $cc
11ce0     E6 FC 10 21 
11ce4     2A 32 3C 45 
11ce8     42 41 3E 28 
11cec     11 04 F8 EE | 	byte	$e6, $fc, $10, $21, $2a, $32, $3c, $45, $42, $41, $3e, $28, $11, $04, $f8, $ee
11cf0     EC E3 C1 B2 
11cf4     C7 DF DD D6 
11cf8     E7 FD 09 1A 
11cfc     25 20 1B 22 | 	byte	$ec, $e3, $c1, $b2, $c7, $df, $dd, $d6, $e7, $fd, $09, $1a, $25, $20, $1b, $22
11d00     17 12 18 11 
11d04     FD 01 02 DC 
11d08     D0 E3 F8 FF 
11d0c     02 04 07 12 | 	byte	$17, $12, $18, $11, $fd, $01, $02, $dc, $d0, $e3, $f8, $ff, $02, $04, $07, $12
11d10     10 0D 14 17 
11d14     1E 12 FD EF 
11d18     F3 E7 E8 F5 
11d1c     DE CA D5 E8 | 	byte	$10, $0d, $14, $17, $1e, $12, $fd, $ef, $f3, $e7, $e8, $f5, $de, $ca, $d5, $e8
11d20     FB 02 0A 14 
11d24     1B 22 26 27 
11d28     1B 1A 18 03 
11d2c     F7 FF F0 EA | 	byte	$fb, $02, $0a, $14, $1b, $22, $26, $27, $1b, $1a, $18, $03, $f7, $ff, $f0, $ea
11d30     EE D9 CC E5 
11d34     F3 00 FE 04 
11d38     12 1A 1E 24 
11d3c     1B 0B 06 04 | 	byte	$ee, $d9, $cc, $e5, $f3, $00, $fe, $04, $12, $1a, $1e, $24, $1b, $0b, $06, $04
11d40     FE F8 F7 E2 
11d44     D5 E2 CE BE 
11d48     D7 EE 06 13 
11d4c     20 30 39 38 | 	byte	$fe, $f8, $f7, $e2, $d5, $e2, $ce, $be, $d7, $ee, $06, $13, $20, $30, $39, $38
11d50     30 34 3E 38 
11d54     25 0E F5 E5 
11d58     D9 C9 D1 C3 
11d5c     A5 AB B7 D0 | 	byte	$30, $34, $3e, $38, $25, $0e, $f5, $e5, $d9, $c9, $d1, $c3, $a5, $ab, $b7, $d0
11d60     E4 F4 0A 1C 
11d64     29 31 39 44 
11d68     45 3F 38 24 
11d6c     20 1F 02 F5 | 	byte	$e4, $f4, $0a, $1c, $29, $31, $39, $44, $45, $3f, $38, $24, $20, $1f, $02, $f5
11d70     D7 C2 CA D2 
11d74     D9 E4 EC EB 
11d78     F0 FB FE FC 
11d7c     01 0A 06 0B | 	byte	$d7, $c2, $ca, $d2, $d9, $e4, $ec, $eb, $f0, $fb, $fe, $fc, $01, $0a, $06, $0b
11d80     08 0B 12 05 
11d84     04 F5 E2 EF 
11d88     06 10 1A 1D 
11d8c     20 22 1E 17 | 	byte	$08, $0b, $12, $05, $04, $f5, $e2, $ef, $06, $10, $1a, $1d, $20, $22, $1e, $17
11d90     10 1C 1E 02 
11d94     EE DE D5 D1 
11d98     CE D1 C7 B1 
11d9c     C2 D9 F1 06 | 	byte	$10, $1c, $1e, $02, $ee, $de, $d5, $d1, $ce, $d1, $c7, $b1, $c2, $d9, $f1, $06
11da0     1B 27 36 45 
11da4     45 3F 3B 3D 
11da8     2B 19 0E 06 
11dac     04 EC D2 AD | 	byte	$1b, $27, $36, $45, $45, $3f, $3b, $3d, $2b, $19, $0e, $06, $04, $ec, $d2, $ad
11db0     97 B2 C7 DA 
11db4     E6 FD 02 09 
11db8     1D 2D 2C 26 
11dbc     2C 2E 21 17 | 	byte	$97, $b2, $c7, $da, $e6, $fd, $02, $09, $1d, $2d, $2c, $26, $2c, $2e, $21, $17
11dc0     0F 09 FD EC 
11dc4     D0 BE CB E0 
11dc8     E4 EC F3 00 
11dcc     12 1F 24 23 | 	byte	$0f, $09, $fd, $ec, $d0, $be, $cb, $e0, $e4, $ec, $f3, $00, $12, $1f, $24, $23
11dd0     27 30 2F 21 
11dd4     12 12 01 ED 
11dd8     E9 D3 B8 B3 
11ddc     CB D8 E2 ED | 	byte	$27, $30, $2f, $21, $12, $12, $01, $ed, $e9, $d3, $b8, $b3, $cb, $d8, $e2, $ed
11de0     00 16 21 1C 
11de4     19 17 1F 2A 
11de8     29 1B 1B 1B 
11dec     0E 01 E2 D3 | 	byte	$00, $16, $21, $1c, $19, $17, $1f, $2a, $29, $1b, $1b, $1b, $0e, $01, $e2, $d3
11df0     D0 E5 EE FB 
11df4     01 06 02 06 
11df8     12 0C 00 05 
11dfc     11 0D ED E3 | 	byte	$d0, $e5, $ee, $fb, $01, $06, $02, $06, $12, $0c, $00, $05, $11, $0d, $ed, $e3
11e00     E9 E9 EA D6 
11e04     D9 D5 EC 02 
11e08     12 23 2F 3C 
11e0c     3F 3E 3E 32 | 	byte	$e9, $e9, $ea, $d6, $d9, $d5, $ec, $02, $12, $23, $2f, $3c, $3f, $3e, $3e, $32
11e10     27 1D 1A 08 
11e14     EE E2 D1 CE 
11e18     A9 8D 82 9D 
11e1c     C5 DC F4 07 | 	byte	$27, $1d, $1a, $08, $ee, $e2, $d1, $ce, $a9, $8d, $82, $9d, $c5, $dc, $f4, $07
11e20     21 34 42 4C 
11e24     55 57 50 4A 
11e28     45 32 21 0C 
11e2c     F7 D4 C6 A7 | 	byte	$21, $34, $42, $4c, $55, $57, $50, $4a, $45, $32, $21, $0c, $f7, $d4, $c6, $a7
11e30     A9 C7 D5 CD 
11e34     CE DB EA FE 
11e38     0B 11 1D 22 
11e3c     26 2C 20 20 | 	byte	$a9, $c7, $d5, $cd, $ce, $db, $ea, $fe, $0b, $11, $1d, $22, $26, $2c, $20, $20
11e40     1B 14 FA F3 
11e44     EC E2 EA FD 
11e48     09 0C 06 14 
11e4c     1C 16 01 FC | 	byte	$1b, $14, $fa, $f3, $ec, $e2, $ea, $fd, $09, $0c, $06, $14, $1c, $16, $01, $fc
11e50     FD FE 08 06 
11e54     FC EC E7 D0 
11e58     C2 C4 C8 E2 
11e5c     FE 06 13 1C | 	byte	$fd, $fe, $08, $06, $fc, $ec, $e7, $d0, $c2, $c4, $c8, $e2, $fe, $06, $13, $1c
11e60     28 2E 37 3E 
11e64     37 26 1E 21 
11e68     0D F4 E2 DF 
11e6c     CB C9 C8 BE | 	byte	$28, $2e, $37, $3e, $37, $26, $1e, $21, $0d, $f4, $e2, $df, $cb, $c9, $c8, $be
11e70     D0 E5 FD 07 
11e74     10 14 26 24 
11e78     22 27 26 1D 
11e7c     1A 19 0F F0 | 	byte	$d0, $e5, $fd, $07, $10, $14, $26, $24, $22, $27, $26, $1d, $1a, $19, $0f, $f0
11e80     E6 DB CA BD 
11e84     B4 C4 D7 F8 
11e88     0B 1A 23 31 
11e8c     3B 40 3C 35 | 	byte	$e6, $db, $ca, $bd, $b4, $c4, $d7, $f8, $0b, $1a, $23, $31, $3b, $40, $3c, $35
11e90     31 2B 29 1D 
11e94     F7 E0 C7 B2 
11e98     B6 B0 AC BE 
11e9c     D7 DB E2 F5 | 	byte	$31, $2b, $29, $1d, $f7, $e0, $c7, $b2, $b6, $b0, $ac, $be, $d7, $db, $e2, $f5
11ea0     09 1F 31 40 
11ea4     45 42 40 41 
11ea8     3F 28 12 FF 
11eac     FA EC D5 CB | 	byte	$09, $1f, $31, $40, $45, $42, $40, $41, $3f, $28, $12, $ff, $fa, $ec, $d5, $cb
11eb0     D2 DC F4 FA 
11eb4     EE E7 EE E6 
11eb8     E9 F3 F8 02 
11ebc     06 0F 0B 01 | 	byte	$d2, $dc, $f4, $fa, $ee, $e7, $ee, $e6, $e9, $f3, $f8, $02, $06, $0f, $0b, $01
11ec0     F6 FE FF 01 
11ec4     FB 06 14 2C 
11ec8     30 29 26 29 
11ecc     2C 2B 20 09 | 	byte	$f6, $fe, $ff, $01, $fb, $06, $14, $2c, $30, $29, $26, $29, $2c, $2b, $20, $09
11ed0     FC F0 E4 D1 
11ed4     BB 9E A2 A7 
11ed8     BB BE D5 ED 
11edc     07 21 2A 37 | 	byte	$fc, $f0, $e4, $d1, $bb, $9e, $a2, $a7, $bb, $be, $d5, $ed, $07, $21, $2a, $37
11ee0     43 56 5E 58 
11ee4     49 3F 33 2C 
11ee8     19 02 D3 C9 
11eec     B7 AE A0 A4 | 	byte	$43, $56, $5e, $58, $49, $3f, $33, $2c, $19, $02, $d3, $c9, $b7, $ae, $a0, $a4
11ef0     B4 CE EF F9 
11ef4     FB 00 0E 21 
11ef8     2E 30 34 32 
11efc     36 27 1B F7 | 	byte	$b4, $ce, $ef, $f9, $fb, $00, $0e, $21, $2e, $30, $34, $32, $36, $27, $1b, $f7
11f00     F0 F6 F5 E9 
11f04     DF E3 E1 EC 
11f08     F0 F7 00 09 
11f0c     1A 22 1F 1B | 	byte	$f0, $f6, $f5, $e9, $df, $e3, $e1, $ec, $f0, $f7, $00, $09, $1a, $22, $1f, $1b
11f10     17 1C 14 06 
11f14     E0 CB D9 DE 
11f18     E2 D5 DE EF 
11f1c     02 12 10 17 | 	byte	$17, $1c, $14, $06, $e0, $cb, $d9, $de, $e2, $d5, $de, $ef, $02, $12, $10, $17
11f20     15 17 17 14 
11f24     1E 1B 18 0F 
11f28     0B FC E9 F0 
11f2c     F3 F9 E2 E1 | 	byte	$15, $17, $17, $14, $1e, $1b, $18, $0f, $0b, $fc, $e9, $f0, $f3, $f9, $e2, $e1
11f30     F0 02 17 09 
11f34     F7 F9 09 14 
11f38     12 10 09 FA 
11f3c     E9 DF D9 D2 | 	byte	$f0, $02, $17, $09, $f7, $f9, $09, $14, $12, $10, $09, $fa, $e9, $df, $d9, $d2
11f40     DC E4 F4 EF 
11f44     F9 09 18 2C 
11f48     35 32 37 3B 
11f4c     44 3C 2B 14 | 	byte	$dc, $e4, $f4, $ef, $f9, $09, $18, $2c, $35, $32, $37, $3b, $44, $3c, $2b, $14
11f50     0B 02 F7 C9 
11f54     A8 A4 9D A4 
11f58     A7 AC CA E2 
11f5c     FA 13 1C 32 | 	byte	$0b, $02, $f7, $c9, $a8, $a4, $9d, $a4, $a7, $ac, $ca, $e2, $fa, $13, $1c, $32
11f60     40 50 55 5A 
11f64     56 4C 3B 2E 
11f68     1D 00 E9 E4 
11f6c     E9 E2 BA BB | 	byte	$40, $50, $55, $5a, $56, $4c, $3b, $2e, $1d, $00, $e9, $e4, $e9, $e2, $ba, $bb
11f70     BA C7 C7 B7 
11f74     C9 E6 F8 04 
11f78     16 1D 28 25 
11f7c     26 21 12 13 | 	byte	$ba, $c7, $c7, $b7, $c9, $e6, $f8, $04, $16, $1d, $28, $25, $26, $21, $12, $13
11f80     14 17 1E 0E 
11f84     0D 09 0D 17 
11f88     16 0B 02 FA 
11f8c     FE F2 E2 E8 | 	byte	$14, $17, $1e, $0e, $0d, $09, $0d, $17, $16, $0b, $02, $fa, $fe, $f2, $e2, $e8
11f90     E9 E7 D0 BD 
11f94     C4 D5 DE F1 
11f98     F5 F7 09 1A 
11f9c     28 35 39 3D | 	byte	$e9, $e7, $d0, $bd, $c4, $d5, $de, $f1, $f5, $f7, $09, $1a, $28, $35, $39, $3d
11fa0     38 39 3B 33 
11fa4     29 07 F6 E5 
11fa8     C7 C4 CB D5 
11fac     E1 DC C7 D9 | 	byte	$38, $39, $3b, $33, $29, $07, $f6, $e5, $c7, $c4, $cb, $d5, $e1, $dc, $c7, $d9
11fb0     F0 F4 FC 03 
11fb4     0F 1C 22 29 
11fb8     2E 32 24 1B 
11fbc     11 F9 F4 E9 | 	byte	$f0, $f4, $fc, $03, $0f, $1c, $22, $29, $2e, $32, $24, $1b, $11, $f9, $f4, $e9
11fc0     D9 E1 E5 D4 
11fc4     DE ED FD 0B 
11fc8     14 16 20 29 
11fcc     33 29 24 1A | 	byte	$d9, $e1, $e5, $d4, $de, $ed, $fd, $0b, $14, $16, $20, $29, $33, $29, $24, $1a
11fd0     0D F6 DB DA 
11fd4     DE DE DD E1 
11fd8     D9 D6 D9 E3 
11fdc     F5 FF FF 10 | 	byte	$0d, $f6, $db, $da, $de, $de, $dd, $e1, $d9, $d6, $d9, $e3, $f5, $ff, $ff, $10
11fe0     1A 2E 32 3A 
11fe4     36 29 26 10 
11fe8     0B 0C 09 04 
11fec     04 F3 E0 E5 | 	byte	$1a, $2e, $32, $3a, $36, $29, $26, $10, $0b, $0c, $09, $04, $04, $f3, $e0, $e5
11ff0     DE D7 E0 E4 
11ff4     E0 DF E7 F0 
11ff8     F4 F7 FB 07 
11ffc     FC FC 06 0D | 	byte	$de, $d7, $e0, $e4, $e0, $df, $e7, $f0, $f4, $f7, $fb, $07, $fc, $fc, $06, $0d
12000     10 21 28 19 
12004     20 22 24 2B 
12008     2C 25 22 1E 
1200c     0D 01 F0 D2 | 	byte	$10, $21, $28, $19, $20, $22, $24, $2b, $2c, $25, $22, $1e, $0d, $01, $f0, $d2
12010     C1 A2 A3 A7 
12014     B4 BF D5 ED 
12018     E6 F1 05 1B 
1201c     35 42 44 47 | 	byte	$c1, $a2, $a3, $a7, $b4, $bf, $d5, $ed, $e6, $f1, $05, $1b, $35, $42, $44, $47
12020     49 4C 52 4A 
12024     37 2A 04 EA 
12028     E9 DE D5 CB 
1202c     CC B4 A3 AB | 	byte	$49, $4c, $52, $4a, $37, $2a, $04, $ea, $e9, $de, $d5, $cb, $cc, $b4, $a3, $ab
12030     B6 D0 F0 F3 
12034     FC 09 1B 2F 
12038     39 35 39 23 
1203c     17 20 20 1B | 	byte	$b6, $d0, $f0, $f3, $fc, $09, $1b, $2f, $39, $35, $39, $23, $17, $20, $20, $1b
12040     13 12 05 EC 
12044     EB ED ED F9 
12048     EF ED F3 F9 
1204c     07 04 ED ED | 	byte	$13, $12, $05, $ec, $eb, $ed, $ed, $f9, $ef, $ed, $f3, $f9, $07, $04, $ed, $ed
12050     D8 D6 EC F8 
12054     FD FF 05 0C 
12058     00 08 12 19 
1205c     22 1D 0B 0C | 	byte	$d8, $d6, $ec, $f8, $fd, $ff, $05, $0c, $00, $08, $12, $19, $22, $1d, $0b, $0c
12060     12 1B 1B 04 
12064     06 F4 E0 EF 
12068     FE FC F8 F8 
1206c     FE E4 DF E7 | 	byte	$12, $1b, $1b, $04, $06, $f4, $e0, $ef, $fe, $fc, $f8, $f8, $fe, $e4, $df, $e7
12070     E8 FC 0E 06 
12074     06 0D 14 19 
12078     05 00 FA EA 
1207c     EE F3 F2 F7 | 	byte	$e8, $fc, $0e, $06, $06, $0d, $14, $19, $05, $00, $fa, $ea, $ee, $f3, $f2, $f7
12080     FC 08 04 04 
12084     0C 11 19 2A 
12088     26 24 1E 24 
1208c     1E 02 FE E2 | 	byte	$fc, $08, $04, $04, $0c, $11, $19, $2a, $26, $24, $1e, $24, $1e, $02, $fe, $e2
12090     C6 CB D9 CF 
12094     CD D7 DE DB 
12098     D0 DE F3 09 
1209c     22 23 26 2D | 	byte	$c6, $cb, $d9, $cf, $cd, $d7, $de, $db, $d0, $de, $f3, $09, $22, $23, $26, $2d
120a0     3E 47 40 42 
120a4     32 17 0A 10 
120a8     12 09 FA EE 
120ac     D8 B4 AD B0 | 	byte	$3e, $47, $40, $42, $32, $17, $0a, $10, $12, $09, $fa, $ee, $d8, $b4, $ad, $b0
120b0     BE D6 DC D2 
120b4     DB F5 0B 0D 
120b8     1B 17 10 17 
120bc     20 31 35 35 | 	byte	$be, $d6, $dc, $d2, $db, $f5, $0b, $0d, $1b, $17, $10, $17, $20, $31, $35, $35
120c0     31 2A 14 15 
120c4     17 0D 10 0C 
120c8     F0 E5 ED EE 
120cc     DC D4 BB AB | 	byte	$31, $2a, $14, $15, $17, $0d, $10, $0c, $f0, $e5, $ed, $ee, $dc, $d4, $bb, $ab
120d0     B8 C9 E5 F5 
120d4     F9 00 0B 01 
120d8     0F 21 2B 39 
120dc     40 30 34 35 | 	byte	$b8, $c9, $e5, $f5, $f9, $00, $0b, $01, $0f, $21, $2b, $39, $40, $30, $34, $35
120e0     35 2F 1B 00 
120e4     F1 E9 E2 EC 
120e8     E7 D6 D9 CF 
120ec     BE C5 CF D5 | 	byte	$35, $2f, $1b, $00, $f1, $e9, $e2, $ec, $e7, $d6, $d9, $cf, $be, $c5, $cf, $d5
120f0     EA 00 02 10 
120f4     19 29 30 29 
120f8     1E 1A 17 0F 
120fc     17 12 06 09 | 	byte	$ea, $00, $02, $10, $19, $29, $30, $29, $1e, $1a, $17, $0f, $17, $12, $06, $09
12100     03 F3 EE EE 
12104     EB F5 FF FB 
12108     FA 06 04 03 
1210c     FC F1 E9 EC | 	byte	$03, $f3, $ee, $ee, $eb, $f5, $ff, $fb, $fa, $06, $04, $03, $fc, $f1, $e9, $ec
12110     ED F7 08 0B 
12114     05 04 FB E9 
12118     ED F7 01 0B 
1211c     0F 0C 0B 0E | 	byte	$ed, $f7, $08, $0b, $05, $04, $fb, $e9, $ed, $f7, $01, $0b, $0f, $0c, $0b, $0e
12120     1A 16 0B 0D 
12124     15 0C 08 0E 
12128     11 0B 02 F0 
1212c     DE E0 DC DE | 	byte	$1a, $16, $0b, $0d, $15, $0c, $08, $0e, $11, $0b, $02, $f0, $de, $e0, $dc, $de
12130     E7 F0 E7 EC 
12134     F1 00 00 F2 
12138     F8 FD FE 02 
1213c     16 23 27 2A | 	byte	$e7, $f0, $e7, $ec, $f1, $00, $00, $f2, $f8, $fd, $fe, $02, $16, $23, $27, $2a
12140     1D 0B 14 19 
12144     1F 1E 19 0B 
12148     0B 00 FA F0 
1214c     D4 C7 C4 CB | 	byte	$1d, $0b, $14, $19, $1f, $1e, $19, $0b, $0b, $00, $fa, $f0, $d4, $c7, $c4, $cb
12150     CB D8 F2 F2 
12154     E7 EC E5 F0 
12158     01 17 20 27 
1215c     32 32 39 3D | 	byte	$cb, $d8, $f2, $f2, $e7, $ec, $e5, $f0, $01, $17, $20, $27, $32, $32, $39, $3d
12160     39 20 20 21 
12164     19 0C FB F5 
12168     EC DC D6 B9 
1216c     BE C2 BE C0 | 	byte	$39, $20, $20, $21, $19, $0c, $fb, $f5, $ec, $dc, $d6, $b9, $be, $c2, $be, $c0
12170     CE E7 F3 03 
12174     10 14 06 14 
12178     25 31 34 31 
1217c     3A 40 30 25 | 	byte	$ce, $e7, $f3, $03, $10, $14, $06, $14, $25, $31, $34, $31, $3a, $40, $30, $25
12180     0D 00 F5 F6 
12184     F5 ED E9 EB 
12188     E4 DE D0 C1 
1218c     D2 D8 E5 F3 | 	byte	$0d, $00, $f5, $f6, $f5, $ed, $e9, $eb, $e4, $de, $d0, $c1, $d2, $d8, $e5, $f3
12190     F2 00 17 1B 
12194     19 0C 09 13 
12198     19 19 1A 23 
1219c     1E 11 12 06 | 	byte	$f2, $00, $17, $1b, $19, $0c, $09, $13, $19, $19, $1a, $23, $1e, $11, $12, $06
121a0     F4 FD 06 0B 
121a4     FF EC EC F3 
121a8     F5 F7 E9 D9 
121ac     E1 E1 E3 EE | 	byte	$f4, $fd, $06, $0b, $ff, $ec, $ec, $f3, $f5, $f7, $e9, $d9, $e1, $e1, $e3, $ee
121b0     FB 0B 11 14 
121b4     05 FA 04 02 
121b8     0D 18 16 12 
121bc     1D 24 19 FE | 	byte	$fb, $0b, $11, $14, $05, $fa, $04, $02, $0d, $18, $16, $12, $1d, $24, $19, $fe
121c0     EA F6 FE 01 
121c4     FE 02 05 FC 
121c8     FA F1 DB F0 
121cc     FA F6 F7 FA | 	byte	$ea, $f6, $fe, $01, $fe, $02, $05, $fc, $fa, $f1, $db, $f0, $fa, $f6, $f7, $fa
121d0     F9 F8 00 06 
121d4     F8 E5 EF FA 
121d8     04 02 FC 0E 
121dc     1C 18 10 02 | 	byte	$f9, $f8, $00, $06, $f8, $e5, $ef, $fa, $04, $02, $fc, $0e, $1c, $18, $10, $02
121e0     16 1D 25 22 
121e4     1B 19 0B 09 
121e8     0B F8 D6 D9 
121ec     CC C3 C9 D2 | 	byte	$16, $1d, $25, $22, $1b, $19, $0b, $09, $0b, $f8, $d6, $d9, $cc, $c3, $c9, $d2
121f0     E0 F2 FB F7 
121f4     D9 E2 00 10 
121f8     22 2F 35 33 
121fc     35 39 32 12 | 	byte	$e0, $f2, $fb, $f7, $d9, $e2, $00, $10, $22, $2f, $35, $33, $35, $39, $32, $12
12200     10 1B 14 00 
12204     FA FE EC E2 
12208     D1 BD C9 DB 
1220c     DF E7 F3 EC | 	byte	$10, $1b, $14, $00, $fa, $fe, $ec, $e2, $d1, $bd, $c9, $db, $df, $e7, $f3, $ec
12210     E8 F7 0D 17 
12214     FD FB 0F 12 
12218     13 17 23 31 
1221c     3A 1E 01 07 | 	byte	$e8, $f7, $0d, $17, $fd, $fb, $0f, $12, $13, $17, $23, $31, $3a, $1e, $01, $07
12220     0F 0D 0B 0A 
12224     0B FF E8 F0 
12228     FD E5 BB C9 
1222c     CD CB D9 E9 | 	byte	$0f, $0d, $0b, $0a, $0b, $ff, $e8, $f0, $fd, $e5, $bb, $c9, $cd, $cb, $d9, $e9
12230     FE 0B 01 EC 
12234     F8 0D 29 36 
12238     39 3B 38 25 
1223c     1B 24 17 EE | 	byte	$fe, $0b, $01, $ec, $f8, $0d, $29, $36, $39, $3b, $38, $25, $1b, $24, $17, $ee
12240     F7 FB F0 F0 
12244     EC D9 D8 DF 
12248     C7 D2 E7 FA 
1224c     FB 00 06 0E | 	byte	$f7, $fb, $f0, $f0, $ec, $d9, $d8, $df, $c7, $d2, $e7, $fa, $fb, $00, $06, $0e
12250     17 1E 27 28 
12254     00 F6 F9 FA 
12258     01 09 0E 10 
1225c     08 F4 F7 FA | 	byte	$17, $1e, $27, $28, $00, $f6, $f9, $fa, $01, $09, $0e, $10, $08, $f4, $f7, $fa
12260     FB 08 10 17 
12264     15 0A 04 02 
12268     06 E8 E0 EE 
1226c     E8 E5 E8 F0 | 	byte	$fb, $08, $10, $17, $15, $0a, $04, $02, $06, $e8, $e0, $ee, $e8, $e5, $e8, $f0
12270     F0 E5 DF E9 
12274     F4 00 12 22 
12278     2F 31 23 1B 
1227c     20 25 14 02 | 	byte	$f0, $e5, $df, $e9, $f4, $00, $12, $22, $2f, $31, $23, $1b, $20, $25, $14, $02
12280     02 FC FC FA 
12284     F3 F4 ED E0 
12288     E4 E7 EC E9 
1228c     EB F7 00 08 | 	byte	$02, $fc, $fc, $fa, $f3, $f4, $ed, $e0, $e4, $e7, $ec, $e9, $eb, $f7, $00, $08
12290     09 0D 14 0E 
12294     F2 E6 EC FC 
12298     07 11 19 10 
1229c     FA 08 09 12 | 	byte	$09, $0d, $14, $0e, $f2, $e6, $ec, $fc, $07, $11, $19, $10, $fa, $08, $09, $12
122a0     1B 24 2B 22 
122a4     12 00 FA F7 
122a8     EF DD DE CE 
122ac     D0 D8 E4 E5 | 	byte	$1b, $24, $2b, $22, $12, $00, $fa, $f7, $ef, $dd, $de, $ce, $d0, $d8, $e4, $e5
122b0     D6 CD EC FE 
122b4     04 17 23 2D 
122b8     37 3A 3E 42 
122bc     40 2E 10 00 | 	byte	$d6, $cd, $ec, $fe, $04, $17, $23, $2d, $37, $3a, $3e, $42, $40, $2e, $10, $00
122c0     E6 E7 EB E9 
122c4     E6 D4 BE D1 
122c8     E4 EA E7 E3 
122cc     E9 FE 09 17 | 	byte	$e6, $e7, $eb, $e9, $e6, $d4, $be, $d1, $e4, $ea, $e7, $e3, $e9, $fe, $09, $17
122d0     1E 1F 1F 06 
122d4     01 08 0B 10 
122d8     19 19 01 E6 
122dc     F0 00 0F 08 | 	byte	$1e, $1f, $1f, $06, $01, $08, $0b, $10, $19, $19, $01, $e6, $f0, $00, $0f, $08
122e0     0B 10 15 0D 
122e4     07 FA FA FA 
122e8     E7 DE EA E0 
122ec     D0 DF F0 EC | 	byte	$0b, $10, $15, $0d, $07, $fa, $fa, $fa, $e7, $de, $ea, $e0, $d0, $df, $f0, $ec
122f0     DE F4 05 14 
122f4     0D 0D 19 20 
122f8     29 32 35 30 
122fc     2F 1B F6 ED | 	byte	$de, $f4, $05, $14, $0d, $0d, $19, $20, $29, $32, $35, $30, $2f, $1b, $f6, $ed
12300     E7 DF E0 E5 
12304     E0 CB D5 D9 
12308     ED 03 08 08 
1230c     09 0D 13 10 | 	byte	$e7, $df, $e0, $e5, $e0, $cb, $d5, $d9, $ed, $03, $08, $08, $09, $0d, $13, $10
12310     14 1B 17 F3 
12314     F4 01 FE FE 
12318     0B 04 E0 E3 
1231c     F3 01 0E 18 | 	byte	$14, $1b, $17, $f3, $f4, $01, $fe, $fe, $0b, $04, $e0, $e3, $f3, $01, $0e, $18
12320     1B 17 09 0C 
12324     15 18 1E 14 
12328     F0 D7 DE D9 
1232c     D0 D9 E1 D2 | 	byte	$1b, $17, $09, $0c, $15, $18, $1e, $14, $f0, $d7, $de, $d9, $d0, $d9, $e1, $d2
12330     E0 EE 02 10 
12334     17 0F 15 1B 
12338     24 32 35 37 
1233c     32 10 F0 FA | 	byte	$e0, $ee, $02, $10, $17, $0f, $15, $1b, $24, $32, $35, $37, $32, $10, $f0, $fa
12340     02 FA EA E1 
12344     C4 CE D7 DE 
12348     EF 05 0D 02 
1234c     00 06 10 10 | 	byte	$02, $fa, $ea, $e1, $c4, $ce, $d7, $de, $ef, $05, $0d, $02, $00, $06, $10, $10
12350     0F 17 10 EB 
12354     F1 FF 06 FF 
12358     00 F0 FA 09 
1235c     10 0B 0D 1B | 	byte	$0f, $17, $10, $eb, $f1, $ff, $06, $ff, $00, $f0, $fa, $09, $10, $0b, $0d, $1b
12360     17 0B 02 04 
12364     12 17 12 07 
12368     E9 DC D2 CF 
1236c     D4 D5 C9 D9 | 	byte	$17, $0b, $02, $04, $12, $17, $12, $07, $e9, $dc, $d2, $cf, $d4, $d5, $c9, $d9
12370     EA FC 07 13 
12374     25 2E 30 2F 
12378     23 26 2E 34 
1237c     28 FC EC F2 | 	byte	$ea, $fc, $07, $13, $25, $2e, $30, $2f, $23, $26, $2e, $34, $28, $fc, $ec, $f2
12380     F4 EC DF C8 
12384     CA CE D5 E2 
12388     F5 07 0D 04 
1238c     0B 06 11 1C | 	byte	$f4, $ec, $df, $c8, $ca, $ce, $d5, $e2, $f5, $07, $0d, $04, $0b, $06, $11, $1c
12390     29 30 0D E9 
12394     ED FA 03 00 
12398     E4 ED 01 0B 
1239c     07 0E 19 18 | 	byte	$29, $30, $0d, $e9, $ed, $fa, $03, $00, $e4, $ed, $01, $0b, $07, $0e, $19, $18
123a0     04 00 00 03 
123a4     0B 0F 10 02 
123a8     E4 E3 E2 E6 
123ac     E4 C0 C7 E2 | 	byte	$04, $00, $00, $03, $0b, $0f, $10, $02, $e4, $e3, $e2, $e6, $e4, $c0, $c7, $e2
123b0     F7 07 0F 14 
123b4     25 31 31 2B 
123b8     2A 27 23 21 
123bc     10 F3 E7 E3 | 	byte	$f7, $07, $0f, $14, $25, $31, $31, $2b, $2a, $27, $23, $21, $10, $f3, $e7, $e3
123c0     DE E8 D2 CB 
123c4     DE EB F0 EE 
123c8     FC 0E 13 0E 
123cc     12 0C 0D 1E | 	byte	$de, $e8, $d2, $cb, $de, $eb, $f0, $ee, $fc, $0e, $13, $0e, $12, $0c, $0d, $1e
123d0     2E 2B 09 F1 
123d4     E7 EA F4 E0 
123d8     DC EE FB 00 
123dc     0B 16 1E 1B | 	byte	$2e, $2b, $09, $f1, $e7, $ea, $f4, $e0, $dc, $ee, $fb, $00, $0b, $16, $1e, $1b
123e0     16 0A FF 06 
123e4     10 16 12 FD 
123e8     E1 E2 E0 E9 
123ec     DC CE D9 E0 | 	byte	$16, $0a, $ff, $06, $10, $16, $12, $fd, $e1, $e2, $e0, $e9, $dc, $ce, $d9, $e0
123f0     F2 02 0B 14 
123f4     1E 24 25 2C 
123f8     2B 2D 31 20 
123fc     02 E9 E5 DF | 	byte	$f2, $02, $0b, $14, $1e, $24, $25, $2c, $2b, $2d, $31, $20, $02, $e9, $e5, $df
12400     E9 DE CE D9 
12404     E5 F6 00 0B 
12408     12 0E 03 05 
1240c     06 04 07 14 | 	byte	$e9, $de, $ce, $d9, $e5, $f6, $00, $0b, $12, $0e, $03, $05, $06, $04, $07, $14
12410     18 19 FA F1 
12414     F3 F8 DC D1 
12418     E7 FC 06 0F 
1241c     19 1C 16 19 | 	byte	$18, $19, $fa, $f1, $f3, $f8, $dc, $d1, $e7, $fc, $06, $0f, $19, $1c, $16, $19
12420     1F 20 1B 0F 
12424     04 00 FE E9 
12428     DC D8 D0 C9 
1242c     C7 D9 E9 FA | 	byte	$1f, $20, $1b, $0f, $04, $00, $fe, $e9, $dc, $d8, $d0, $c9, $c7, $d9, $e9, $fa
12430     00 FE 08 19 
12434     29 34 35 34 
12438     2C 2D 27 26 
1243c     14 F1 DE CE | 	byte	$00, $fe, $08, $19, $29, $34, $35, $34, $2c, $2d, $27, $26, $14, $f1, $de, $ce
12440     C7 C1 CE D9 
12444     E3 ED F8 09 
12448     19 18 14 00 
1244c     FC 01 12 20 | 	byte	$c7, $c1, $ce, $d9, $e3, $ed, $f8, $09, $19, $18, $14, $00, $fc, $01, $12, $20
12450     27 1C F7 F5 
12454     F7 ED EB FB 
12458     00 FA F2 03 
1245c     0B 09 0A 12 | 	byte	$27, $1c, $f7, $f5, $f7, $ed, $eb, $fb, $00, $fa, $f2, $03, $0b, $09, $0a, $12
12460     10 12 12 15 
12464     12 FF ED D9 
12468     DC DF D2 CB 
1246c     DE E7 F9 08 | 	byte	$10, $12, $12, $15, $12, $ff, $ed, $d9, $dc, $df, $d2, $cb, $de, $e7, $f9, $08
12470     19 1F 25 29 
12474     1D 1B 22 22 
12478     1D 16 0F 0D 
1247c     EF DE EA D1 | 	byte	$19, $1f, $25, $29, $1d, $1b, $22, $22, $1d, $16, $0f, $0d, $ef, $de, $ea, $d1
12480     AD C2 D1 E5 
12484     F9 08 12 1E 
12488     21 1C 21 1E 
1248c     1D 1D 19 06 | 	byte	$ad, $c2, $d1, $e5, $f9, $08, $12, $1e, $21, $1c, $21, $1e, $1d, $1d, $19, $06
12490     07 FA E0 E5 
12494     DB C9 E2 F0 
12498     00 0B FE F7 
1249c     FA 07 17 27 | 	byte	$07, $fa, $e0, $e5, $db, $c9, $e2, $f0, $00, $0b, $fe, $f7, $fa, $07, $17, $27
124a0     28 27 20 19 
124a4     15 12 0B F1 
124a8     EE CE A4 BD 
124ac     D0 E0 F3 02 | 	byte	$28, $27, $20, $19, $15, $12, $0b, $f1, $ee, $ce, $a4, $bd, $d0, $e0, $f3, $02
124b0     09 0C 18 27 
124b4     30 19 19 19 
124b8     13 15 1D 15 
124bc     F3 EF E3 C9 | 	byte	$09, $0c, $18, $27, $30, $19, $19, $19, $13, $15, $1d, $15, $f3, $ef, $e3, $c9
124c0     DD EC F7 01 
124c4     FC F3 FF 0D 
124c8     0B 0E 10 0D 
124cc     09 0B 0E 09 | 	byte	$dd, $ec, $f7, $01, $fc, $f3, $ff, $0d, $0b, $0e, $10, $0d, $09, $0b, $0e, $09
124d0     FF DF D9 DC 
124d4     CB EA 02 08 
124d8     0E 18 16 12 
124dc     1D 29 2C 18 | 	byte	$ff, $df, $d9, $dc, $cb, $ea, $02, $08, $0e, $18, $16, $12, $1d, $29, $2c, $18
124e0     0B 09 06 00 
124e4     03 03 F2 DE 
124e8     CD AC B3 C7 
124ec     D2 E9 00 12 | 	byte	$0b, $09, $06, $00, $03, $03, $f2, $de, $cd, $ac, $b3, $c7, $d2, $e9, $00, $12
124f0     1E 26 32 3D 
124f4     42 3E 3A 2B 
124f8     20 18 FC E7 
124fc     D2 C8 B3 C2 | 	byte	$1e, $26, $32, $3d, $42, $3e, $3a, $2b, $20, $18, $fc, $e7, $d2, $c8, $b3, $c2
12500     D8 E2 EE F8 
12504     F3 FC 08 0B 
12508     0F 1A 1C 21 
1250c     1E 1A 20 24 | 	byte	$d8, $e2, $ee, $f8, $f3, $fc, $08, $0b, $0f, $1a, $1c, $21, $1e, $1a, $20, $24
12510     14 F7 E6 D9 
12514     D8 E0 E7 EB 
12518     FB FF FC 09 
1251c     17 1D 14 08 | 	byte	$14, $f7, $e6, $d9, $d8, $e0, $e7, $eb, $fb, $ff, $fc, $09, $17, $1d, $14, $08
12520     13 0D 02 04 
12524     0D 0B FB DD 
12528     C7 D0 E5 EE 
1252c     FA 0B 16 0C | 	byte	$13, $0d, $02, $04, $0d, $0b, $fb, $dd, $c7, $d0, $e5, $ee, $fa, $0b, $16, $0c
12530     08 0F 17 26 
12534     25 28 1D 0D 
12538     01 E9 ED E4 
1253c     CC BD C1 DC | 	byte	$08, $0f, $17, $26, $25, $28, $1d, $0d, $01, $e9, $ed, $e4, $cc, $bd, $c1, $dc
12540     F0 00 11 19 
12544     21 26 29 27 
12548     2A 22 11 05 
1254c     F7 F6 01 05 | 	byte	$f0, $00, $11, $19, $21, $26, $29, $27, $2a, $22, $11, $05, $f7, $f6, $01, $05
12550     EE D4 C5 B9 
12554     C7 E2 EF FD 
12558     FD 04 13 24 
1255c     34 3A 37 37 | 	byte	$ee, $d4, $c5, $b9, $c7, $e2, $ef, $fd, $fd, $04, $13, $24, $34, $3a, $37, $37
12560     30 20 1A 1A 
12564     0D E9 C4 AA 
12568     A9 C0 D6 E1 
1256c     F3 FA EF FE | 	byte	$30, $20, $1a, $1a, $0d, $e9, $c4, $aa, $a9, $c0, $d6, $e1, $f3, $fa, $ef, $fe
12570     0B 20 2F 30 
12574     30 2F 1C 0F 
12578     14 19 06 EB 
1257c     DC D4 E0 E2 | 	byte	$0b, $20, $2f, $30, $30, $2f, $1c, $0f, $14, $19, $06, $eb, $dc, $d4, $e0, $e2
12580     E4 F2 FC FE 
12584     06 10 13 15 
12588     08 FD 02 FB 
1258c     FC 0A 0D 00 | 	byte	$e4, $f2, $fc, $fe, $06, $10, $13, $15, $08, $fd, $02, $fb, $fc, $0a, $0d, $00
12590     E0 DC DA ED 
12594     02 0A 06 0C 
12598     18 17 0F 16 
1259c     20 20 14 18 | 	byte	$e0, $dc, $da, $ed, $02, $0a, $06, $0c, $18, $17, $0f, $16, $20, $20, $14, $18
125a0     0F 06 00 EF 
125a4     E1 BA B7 B4 
125a8     CE E2 EE F7 
125ac     08 17 24 32 | 	byte	$0f, $06, $00, $ef, $e1, $ba, $b7, $b4, $ce, $e2, $ee, $f7, $08, $17, $24, $32
125b0     36 3E 45 41 
125b4     30 07 EC F3 
125b8     FC EC C9 D2 
125bc     C5 B5 C5 DE | 	byte	$36, $3e, $45, $41, $30, $07, $ec, $f3, $fc, $ec, $c9, $d2, $c5, $b5, $c5, $de
125c0     EC 00 10 1C 
125c4     23 1F 24 2E 
125c8     2F 2E 24 15 
125cc     10 17 0B D9 | 	byte	$ec, $00, $10, $1c, $23, $1f, $24, $2e, $2f, $2e, $24, $15, $10, $17, $0b, $d9
125d0     C7 B9 C9 DC 
125d4     E6 DE EC FA 
125d8     F3 FE 0F 1F 
125dc     29 2D 2E 29 | 	byte	$c7, $b9, $c9, $dc, $e6, $de, $ec, $fa, $f3, $fe, $0f, $1f, $29, $2d, $2e, $29
125e0     1E 19 19 0F 
125e4     E4 DC D0 D7 
125e8     E7 F6 EA E3 
125ec     F3 02 0D 17 | 	byte	$1e, $19, $19, $0f, $e4, $dc, $d0, $d7, $e7, $f6, $ea, $e3, $f3, $02, $0d, $17
125f0     1C 25 1C 0F 
125f4     FF EE F0 FE 
125f8     00 E4 E8 DF 
125fc     DE EB FD 0F | 	byte	$1c, $25, $1c, $0f, $ff, $ee, $f0, $fe, $00, $e4, $e8, $df, $de, $eb, $fd, $0f
12600     18 26 2B 2C 
12604     20 0A 0C 14 
12608     14 0C FE F1 
1260c     EA DC C3 C7 | 	byte	$18, $26, $2b, $2c, $20, $0a, $0c, $14, $14, $0c, $fe, $f1, $ea, $dc, $c3, $c7
12610     C3 C8 DC EE 
12614     F5 FF 0D 1F 
12618     27 2D 3C 44 
1261c     47 41 32 20 | 	byte	$c3, $c8, $dc, $ee, $f5, $ff, $0d, $1f, $27, $2d, $3c, $44, $47, $41, $32, $20
12620     04 FC F1 D3 
12624     BD B4 B5 B5 
12628     C4 DE E5 EE 
1262c     01 13 24 37 | 	byte	$04, $fc, $f1, $d3, $bd, $b4, $b5, $b5, $c4, $de, $e5, $ee, $01, $13, $24, $37
12630     3C 40 42 1D 
12634     0F 0F 10 0E 
12638     FA E9 D7 C5 
1263c     CC D7 F0 00 | 	byte	$3c, $40, $42, $1d, $0f, $0f, $10, $0e, $fa, $e9, $d7, $c5, $cc, $d7, $f0, $00
12640     04 06 FF 00 
12644     FD 0A 19 22 
12648     1C 17 11 0B 
1264c     FF F3 E5 E2 | 	byte	$04, $06, $ff, $00, $fd, $0a, $19, $22, $1c, $17, $11, $0b, $ff, $f3, $e5, $e2
12650     E1 EC EE F1 
12654     FE F7 FA 07 
12658     11 1C 27 29 
1265c     18 08 07 08 | 	byte	$e1, $ec, $ee, $f1, $fe, $f7, $fa, $07, $11, $1c, $27, $29, $18, $08, $07, $08
12660     06 FB EC D3 
12664     C2 D3 E1 EE 
12668     FB 04 0A 0E 
1266c     20 2E 35 33 | 	byte	$06, $fb, $ec, $d3, $c2, $d3, $e1, $ee, $fb, $04, $0a, $0e, $20, $2e, $35, $33
12670     22 19 00 F6 
12674     F6 FB E4 C7 
12678     C4 BF CC D4 
1267c     E5 F3 0B 20 | 	byte	$22, $19, $00, $f6, $f6, $fb, $e4, $c7, $c4, $bf, $cc, $d4, $e5, $f3, $0b, $20
12680     2B 34 36 24 
12684     19 28 33 35 
12688     2B 17 02 E0 
1268c     C9 C8 C0 CF | 	byte	$2b, $34, $36, $24, $19, $28, $33, $35, $2b, $17, $02, $e0, $c9, $c8, $c0, $cf
12690     CB BA B2 CE 
12694     EC FE 0E 1F 
12698     2B 35 40 4C 
1269c     46 3D 2A 22 | 	byte	$cb, $ba, $b2, $ce, $ec, $fe, $0e, $1f, $2b, $35, $40, $4c, $46, $3d, $2a, $22
126a0     15 FE F7 C7 
126a4     C7 C2 C7 D4 
126a8     DE F3 FC F7 
126ac     F3 00 0F 1E | 	byte	$15, $fe, $f7, $c7, $c7, $c2, $c7, $d4, $de, $f3, $fc, $f7, $f3, $00, $0f, $1e
126b0     1D 0C 0D 0D 
126b4     07 0C 00 01 
126b8     E9 ED E9 F4 
126bc     06 10 1E 27 | 	byte	$1d, $0c, $0d, $0d, $07, $0c, $00, $01, $e9, $ed, $e9, $f4, $06, $10, $1e, $27
126c0     1B 11 10 FE 
126c4     02 10 09 FC 
126c8     F7 EB E7 D5 
126cc     D9 C9 D7 E5 | 	byte	$1b, $11, $10, $fe, $02, $10, $09, $fc, $f7, $eb, $e7, $d5, $d9, $c9, $d7, $e5
126d0     DC EA F9 04 
126d4     17 22 28 39 
126d8     42 42 37 24 
126dc     1A 17 08 02 | 	byte	$dc, $ea, $f9, $04, $17, $22, $28, $39, $42, $42, $37, $24, $1a, $17, $08, $02
126e0     E8 D4 AB 9C 
126e4     AD C2 DC EF 
126e8     FC 0C 1C 23 
126ec     2F 36 3C 32 | 	byte	$e8, $d4, $ab, $9c, $ad, $c2, $dc, $ef, $fc, $0c, $1c, $23, $2f, $36, $3c, $32
126f0     18 19 21 17 
126f4     05 ED D9 CB 
126f8     C7 D2 D3 D9 
126fc     E1 EE FE 16 | 	byte	$18, $19, $21, $17, $05, $ed, $d9, $cb, $c7, $d2, $d3, $d9, $e1, $ee, $fe, $16
12700     24 24 1C 14 
12704     1E 24 2D 31 
12708     25 0C F0 E5 
1270c     E0 D9 E0 D0 | 	byte	$24, $24, $1c, $14, $1e, $24, $2d, $31, $25, $0c, $f0, $e5, $e0, $d9, $e0, $d0
12710     C7 CA E0 EE 
12714     00 0D 08 0D 
12718     1B 22 21 27 
1271c     2D 29 1E 06 | 	byte	$c7, $ca, $e0, $ee, $00, $0d, $08, $0d, $1b, $22, $21, $27, $2d, $29, $1e, $06
12720     05 FE DE CF 
12724     D1 DC EE 02 
12728     0F 12 1B 12 
1272c     06 0F 0D FD | 	byte	$05, $fe, $de, $cf, $d1, $dc, $ee, $02, $0f, $12, $1b, $12, $06, $0f, $0d, $fd
12730     F0 EE F3 F0 
12734     DC DE E1 E6 
12738     E2 EC F8 0C 
1273c     20 2C 30 35 | 	byte	$f0, $ee, $f3, $f0, $dc, $de, $e1, $e6, $e2, $ec, $f8, $0c, $20, $2c, $30, $35
12740     3E 33 22 20 
12744     1B 11 04 00 
12748     FD E0 C7 B5 
1274c     BB AD A4 B7 | 	byte	$3e, $33, $22, $20, $1b, $11, $04, $00, $fd, $e0, $c7, $b5, $bb, $ad, $a4, $b7
12750     D4 E7 FE 10 
12754     1F 35 47 4D 
12758     4E 46 3A 35 
1275c     32 30 11 FE | 	byte	$d4, $e7, $fe, $10, $1f, $35, $47, $4d, $4e, $46, $3a, $35, $32, $30, $11, $fe
12760     E8 D3 B1 B1 
12764     B2 B5 C4 DE 
12768     EF FD 0C 1C 
1276c     22 16 0F 19 | 	byte	$e8, $d3, $b1, $b1, $b2, $b5, $c4, $de, $ef, $fd, $0c, $1c, $22, $16, $0f, $19
12770     23 21 29 10 
12774     01 EE F9 F8 
12778     F0 EC FA FB 
1277c     FA 09 15 10 | 	byte	$23, $21, $29, $10, $01, $ee, $f9, $f8, $f0, $ec, $fa, $fb, $fa, $09, $15, $10
12780     0A 07 FF FF 
12784     FC 02 06 0E 
12788     FF F3 EB F0 
1278c     F0 D0 CE DE | 	byte	$0a, $07, $ff, $ff, $fc, $02, $06, $0e, $ff, $f3, $eb, $f0, $f0, $d0, $ce, $de
12790     F4 FE 0A 1A 
12794     24 2A 2A 29 
12798     22 1B 0B 00 
1279c     08 FC EE E6 | 	byte	$f4, $fe, $0a, $1a, $24, $2a, $2a, $29, $22, $1b, $0b, $00, $08, $fc, $ee, $e6
127a0     E6 DD D0 D0 
127a4     D5 E9 00 14 
127a8     22 2B 2B 2A 
127ac     1F 0E 0C 14 | 	byte	$e6, $dd, $d0, $d0, $d5, $e9, $00, $14, $22, $2b, $2b, $2a, $1f, $0e, $0c, $14
127b0     14 02 EB DF 
127b4     D0 C4 D2 D7 
127b8     D2 D7 F0 04 
127bc     13 22 32 3F | 	byte	$14, $02, $eb, $df, $d0, $c4, $d2, $d7, $d2, $d7, $f0, $04, $13, $22, $32, $3f
127c0     39 35 38 27 
127c4     1C 12 10 04 
127c8     F0 E9 EB DD 
127cc     B2 A8 B0 B0 | 	byte	$39, $35, $38, $27, $1c, $12, $10, $04, $f0, $e9, $eb, $dd, $b2, $a8, $b0, $b0
127d0     C7 E5 F2 02 
127d4     17 25 32 3E 
127d8     39 38 39 3C 
127dc     31 19 0E 07 | 	byte	$c7, $e5, $f2, $02, $17, $25, $32, $3e, $39, $38, $39, $3c, $31, $19, $0e, $07
127e0     F8 E3 D7 D2 
127e4     D9 E5 E5 E9 
127e8     FA FD F5 EB 
127ec     F0 F7 F5 00 | 	byte	$f8, $e3, $d7, $d2, $d9, $e5, $e5, $e9, $fa, $fd, $f5, $eb, $f0, $f7, $f5, $00
127f0     0E 11 F7 F3 
127f4     FE 0A 11 06 
127f8     06 06 0F 16 
127fc     1E 26 30 36 | 	byte	$0e, $11, $f7, $f3, $fe, $0a, $11, $06, $06, $06, $0f, $16, $1e, $26, $30, $36
12800     22 06 03 FC 
12804     E2 DC DD D0 
12808     CD D7 DB D5 
1280c     CB CD D8 F0 | 	byte	$22, $06, $03, $fc, $e2, $dc, $dd, $d0, $cd, $d7, $db, $d5, $cb, $cd, $d8, $f0
12810     09 21 2E 33 
12814     3C 3F 39 37 
12818     37 31 2F 1C 
1281c     F5 E4 D7 D0 | 	byte	$09, $21, $2e, $33, $3c, $3f, $39, $37, $37, $31, $2f, $1c, $f5, $e4, $d7, $d0
12820     C6 BD B7 C0 
12824     D1 E0 F2 04 
12828     15 22 1E 1C 
1282c     21 28 21 20 | 	byte	$c6, $bd, $b7, $c0, $d1, $e0, $f2, $04, $15, $22, $1e, $1c, $21, $28, $21, $20
12830     18 03 F6 F4 
12834     FE 04 FA DC 
12838     D4 D2 DD F2 
1283c     05 10 1B 23 | 	byte	$18, $03, $f6, $f4, $fe, $04, $fa, $dc, $d4, $d2, $dd, $f2, $05, $10, $1b, $23
12840     17 0D 16 1B 
12844     1B 12 00 FB 
12848     FA F7 EC E7 
1284c     D0 D2 DD F0 | 	byte	$17, $0d, $16, $1b, $1b, $12, $00, $fb, $fa, $f7, $ec, $e7, $d0, $d2, $dd, $f0
12850     FD 03 04 FC 
12854     00 0B 11 15 
12858     1C 20 1E 0C 
1285c     04 01 0B 0C | 	byte	$fd, $03, $04, $fc, $00, $0b, $11, $15, $1c, $20, $1e, $0c, $04, $01, $0b, $0c
12860     02 F0 EE EF 
12864     F8 FC FF 05 
12868     0F 0B 0A 02 
1286c     F7 EA EA DE | 	byte	$02, $f0, $ee, $ef, $f8, $fc, $ff, $05, $0f, $0b, $0a, $02, $f7, $ea, $ea, $de
12870     D9 E2 E2 E7 
12874     F8 06 00 F7 
12878     FD 0D 1E 2E 
1287c     3B 40 41 35 | 	byte	$d9, $e2, $e2, $e7, $f8, $06, $00, $f7, $fd, $0d, $1e, $2e, $3b, $40, $41, $35
12880     19 0B 0E 15 
12884     0B F2 DC C2 
12888     B2 AD BD C4 
1288c     C2 C6 D4 EE | 	byte	$19, $0b, $0e, $15, $0b, $f2, $dc, $c2, $b2, $ad, $bd, $c4, $c2, $c6, $d4, $ee
12890     03 19 29 32 
12894     3C 42 44 40 
12898     46 3B 1C 11 
1289c     FE 01 07 FE | 	byte	$03, $19, $29, $32, $3c, $42, $44, $40, $46, $3b, $1c, $11, $fe, $01, $07, $fe
128a0     E3 C5 B5 B3 
128a4     C0 D2 E5 EF 
128a8     EC F3 01 0C 
128ac     0E 1B 1A 0B | 	byte	$e3, $c5, $b5, $b3, $c0, $d2, $e5, $ef, $ec, $f3, $01, $0c, $0e, $1b, $1a, $0b
128b0     16 10 19 19 
128b4     21 1B FF FA 
128b8     FC 08 11 0E 
128bc     06 05 FC E7 | 	byte	$16, $10, $19, $19, $21, $1b, $ff, $fa, $fc, $08, $11, $0e, $06, $05, $fc, $e7
128c0     E9 F0 F8 F9 
128c4     EC F5 E8 DC 
128c8     DE F1 01 F9 
128cc     FE FC 01 0D | 	byte	$e9, $f0, $f8, $f9, $ec, $f5, $e8, $dc, $de, $f1, $01, $f9, $fe, $fc, $01, $0d
128d0     13 1B 27 2C 
128d4     2D 26 0F 04 
128d8     FD E4 E9 EC 
128dc     EF F5 F7 F4 | 	byte	$13, $1b, $27, $2c, $2d, $26, $0f, $04, $fd, $e4, $e9, $ec, $ef, $f5, $f7, $f4
128e0     E4 E3 E7 EE 
128e4     02 12 19 13 
128e8     0D 11 14 11 
128ec     0D 0D 01 02 | 	byte	$e4, $e3, $e7, $ee, $02, $12, $19, $13, $0d, $11, $14, $11, $0d, $0d, $01, $02
128f0     EF DC E7 E7 
128f4     ED E9 E7 F1 
128f8     EE FE 11 22 
128fc     2E 31 25 19 | 	byte	$ef, $dc, $e7, $e7, $ed, $e9, $e7, $f1, $ee, $fe, $11, $22, $2e, $31, $25, $19
12900     1B 20 18 0E 
12904     0B FC E1 CF 
12908     DC F1 E7 C7 
1290c     CD CB CB DD | 	byte	$1b, $20, $18, $0e, $0b, $fc, $e1, $cf, $dc, $f1, $e7, $c7, $cd, $cb, $cb, $dd
12910     F5 0D 1C 1B 
12914     20 2A 2C 1E 
12918     1B 23 22 22 
1291c     24 20 19 00 | 	byte	$f5, $0d, $1c, $1b, $20, $2a, $2c, $1e, $1b, $23, $22, $22, $24, $20, $19, $00
12920     E5 E5 E3 EC 
12924     F8 EC D0 D2 
12928     CF D5 E3 F5 
1292c     F1 F5 FE FD | 	byte	$e5, $e5, $e3, $ec, $f8, $ec, $d0, $d2, $cf, $d5, $e3, $f5, $f1, $f5, $fe, $fd
12930     02 0D 17 25 
12934     2A 1A 1E 22 
12938     1A 20 25 28 
1293c     23 1A 0F FE | 	byte	$02, $0d, $17, $25, $2a, $1a, $1e, $22, $1a, $20, $25, $28, $23, $1a, $0f, $fe
12940     E5 CF D2 D6 
12944     D0 C9 C1 CA 
12948     DD EC E7 F5 
1294c     00 00 0B 1E | 	byte	$e5, $cf, $d2, $d6, $d0, $c9, $c1, $ca, $dd, $ec, $e7, $f5, $00, $00, $0b, $1e
12950     31 3E 43 3E 
12954     37 32 11 0B 
12958     14 0F F7 E9 
1295c     EA E5 D9 BE | 	byte	$31, $3e, $43, $3e, $37, $32, $11, $0b, $14, $0f, $f7, $e9, $ea, $e5, $d9, $be
12960     C7 D9 DF E7 
12964     F2 F5 F7 FB 
12968     04 0F 1F 14 
1296c     18 25 1E 10 | 	byte	$c7, $d9, $df, $e7, $f2, $f5, $f7, $fb, $04, $0f, $1f, $14, $18, $25, $1e, $10
12970     11 10 14 1C 
12974     05 EB E8 E6 
12978     DF EB FC 08 
1297c     0D 0B FD FA | 	byte	$11, $10, $14, $1c, $05, $eb, $e8, $e6, $df, $eb, $fc, $08, $0d, $0b, $fd, $fa
12980     F0 F9 07 08 
12984     FB F7 F6 00 
12988     0D 00 F9 FC 
1298c     FE FA FF 00 | 	byte	$f0, $f9, $07, $08, $fb, $f7, $f6, $00, $0d, $00, $f9, $fc, $fe, $fa, $ff, $00
12990     FC FF 02 FE 
12994     02 F3 F8 09 
12998     10 05 10 14 
1299c     19 16 FE F4 | 	byte	$fc, $ff, $02, $fe, $02, $f3, $f8, $09, $10, $05, $10, $14, $19, $16, $fe, $f4
129a0     03 09 09 06 
129a4     FE F7 F1 F2 
129a8     F7 F5 DE D8 
129ac     E6 E8 DE ED | 	byte	$03, $09, $09, $06, $fe, $f7, $f1, $f2, $f7, $f5, $de, $d8, $e6, $e8, $de, $ed
129b0     F8 08 19 16 
129b4     07 0D 14 14 
129b8     16 24 30 32 
129bc     32 24 0B F6 | 	byte	$f8, $08, $19, $16, $07, $0d, $14, $14, $16, $24, $30, $32, $32, $24, $0b, $f6
129c0     F7 FB FC E2 
129c4     CF C7 C2 CB 
129c8     D2 C9 D7 E8 
129cc     F4 FA 09 16 | 	byte	$f7, $fb, $fc, $e2, $cf, $c7, $c2, $cb, $d2, $c9, $d7, $e8, $f4, $fa, $09, $16
129d0     20 2C 35 2E 
129d4     22 24 2D 33 
129d8     24 21 1E 15 
129dc     12 01 D5 D1 | 	byte	$20, $2c, $35, $2e, $22, $24, $2d, $33, $24, $21, $1e, $15, $12, $01, $d5, $d1
129e0     D0 C9 C4 C2 
129e4     C7 D3 DD EF 
129e8     F5 F1 FC 0B 
129ec     1C 14 19 27 | 	byte	$d0, $c9, $c4, $c2, $c7, $d3, $dd, $ef, $f5, $f1, $fc, $0b, $1c, $14, $19, $27
129f0     2F 3E 44 27 
129f4     1C 18 0F 08 
129f8     01 00 FC F0 
129fc     E9 D4 C0 D1 | 	byte	$2f, $3e, $44, $27, $1c, $18, $0f, $08, $01, $00, $fc, $f0, $e9, $d4, $c0, $d1
12a00     E0 EF E5 DF 
12a04     E9 EE FC 0C 
12a08     02 00 0E 18 
12a0c     1E 1E 26 26 | 	byte	$e0, $ef, $e5, $df, $e9, $ee, $fc, $0c, $02, $00, $0e, $18, $1e, $1e, $26, $26
12a10     23 27 1A FB 
12a14     FC F7 EE E5 
12a18     E9 F2 FB 01 
12a1c     09 F3 E6 F2 | 	byte	$23, $27, $1a, $fb, $fc, $f7, $ee, $e5, $e9, $f2, $fb, $01, $09, $f3, $e6, $f2
12a20     F7 FA EC F1 
12a24     FC 00 0B 0A 
12a28     02 0F 0F 12 
12a2c     0B 02 FE 05 | 	byte	$f7, $fa, $ec, $f1, $fc, $00, $0b, $0a, $02, $0f, $0f, $12, $0b, $02, $fe, $05
12a30     00 03 FE E9 
12a34     F0 F9 FC FC 
12a38     0B 14 14 19 
12a3c     0C F3 FD 04 | 	byte	$00, $03, $fe, $e9, $f0, $f9, $fc, $fc, $0b, $14, $14, $19, $0c, $f3, $fd, $04
12a40     0D 04 F6 FD 
12a44     05 00 00 00 
12a48     E2 DF E8 DF 
12a4c     DB E7 EF FC | 	byte	$0d, $04, $f6, $fd, $05, $00, $00, $00, $e2, $df, $e8, $df, $db, $e7, $ef, $fc
12a50     0C 0D 02 14 
12a54     1C 1C 18 1D 
12a58     22 28 27 2E 
12a5c     29 FF FC 01 | 	byte	$0c, $0d, $02, $14, $1c, $1c, $18, $1d, $22, $28, $27, $2e, $29, $ff, $fc, $01
12a60     F7 DB CF CD 
12a64     D3 D0 C2 C0 
12a68     D3 E0 EF FC 
12a6c     06 10 22 2E | 	byte	$f7, $db, $cf, $cd, $d3, $d0, $c2, $c0, $d3, $e0, $ef, $fc, $06, $10, $22, $2e
12a70     35 3E 29 20 
12a74     24 20 1D 1A 
12a78     1D 1C 1D 0B 
12a7c     E5 D7 DC D9 | 	byte	$35, $3e, $29, $20, $24, $20, $1d, $1a, $1d, $1c, $1d, $0b, $e5, $d7, $dc, $d9
12a80     C5 B5 C0 CE 
12a84     D9 E7 FD FB 
12a88     F3 04 10 12 
12a8c     11 1C 25 30 | 	byte	$c5, $b5, $c0, $ce, $d9, $e7, $fd, $fb, $f3, $04, $10, $12, $11, $1c, $25, $30
12a90     2E 1E 22 2B 
12a94     24 1A 18 09 
12a98     01 00 FB F5 
12a9c     E0 C2 C6 D3 | 	byte	$2e, $1e, $22, $2b, $24, $1a, $18, $09, $01, $00, $fb, $f5, $e0, $c2, $c6, $d3
12aa0     C5 C7 D9 E5 
12aa4     F6 F9 ED FE 
12aa8     11 17 18 27 
12aac     2B 2F 39 3B | 	byte	$c5, $c7, $d9, $e5, $f6, $f9, $ed, $fe, $11, $17, $18, $27, $2b, $2f, $39, $3b
12ab0     3E 32 04 FA 
12ab4     F6 E9 DC DC 
12ab8     DF E7 EC DE 
12abc     DC EC F4 EC | 	byte	$3e, $32, $04, $fa, $f6, $e9, $dc, $dc, $df, $e7, $ec, $de, $dc, $ec, $f4, $ec
12ac0     EF FC 02 0C 
12ac4     11 19 23 12 
12ac8     0C 15 14 0B 
12acc     03 FA 01 FA | 	byte	$ef, $fc, $02, $0c, $11, $19, $23, $12, $0c, $15, $14, $0b, $03, $fa, $01, $fa
12ad0     E7 E5 F0 F0 
12ad4     EC FC 09 10 
12ad8     19 1F 27 29 
12adc     0C FA FB EF | 	byte	$e7, $e5, $f0, $f0, $ec, $fc, $09, $10, $19, $1f, $27, $29, $0c, $fa, $fb, $ef
12ae0     E4 E9 EE FC 
12ae4     FB E7 F1 F0 
12ae8     EC E9 F1 FE 
12aec     FC 02 0A 13 | 	byte	$e4, $e9, $ee, $fc, $fb, $e7, $f1, $f0, $ec, $e9, $f1, $fe, $fc, $02, $0a, $13
12af0     22 22 12 10 
12af4     14 0A 0D 10 
12af8     16 17 03 FB 
12afc     F7 F7 ED E8 | 	byte	$22, $22, $12, $10, $14, $0a, $0d, $10, $16, $17, $03, $fb, $f7, $f7, $ed, $e8
12b00     F6 FB EE EB 
12b04     E5 F3 F3 DD 
12b08     DC E5 EA F3 
12b0c     FE 10 1B 0C | 	byte	$f6, $fb, $ee, $eb, $e5, $f3, $f3, $dd, $dc, $e5, $ea, $f3, $fe, $10, $1b, $0c
12b10     16 22 25 20 
12b14     21 28 2C 29 
12b18     29 27 26 1A 
12b1c     F1 D2 BD B6 | 	byte	$16, $22, $25, $20, $21, $28, $2c, $29, $29, $27, $26, $1a, $f1, $d2, $bd, $b6
12b20     B6 B8 BF C6 
12b24     BA CC E7 F3 
12b28     02 14 22 36 
12b2c     41 46 47 47 | 	byte	$b6, $b8, $bf, $c6, $ba, $cc, $e7, $f3, $02, $14, $22, $36, $41, $46, $47, $47
12b30     48 39 23 19 
12b34     0F 00 FA F2 
12b38     F1 D2 CA CD 
12b3c     BB B2 B9 C4 | 	byte	$48, $39, $23, $19, $0f, $00, $fa, $f2, $f1, $d2, $ca, $cd, $bb, $b2, $b9, $c4
12b40     E3 F9 00 06 
12b44     12 22 27 1A 
12b48     1E 1F 13 11 
12b4c     1B 22 10 0C | 	byte	$e3, $f9, $00, $06, $12, $22, $27, $1a, $1e, $1f, $13, $11, $1b, $22, $10, $0c
12b50     12 06 FC FD 
12b54     F7 00 09 00 
12b58     FD F7 F7 FA 
12b5c     D9 D6 D9 DC | 	byte	$12, $06, $fc, $fd, $f7, $00, $09, $00, $fd, $f7, $f7, $fa, $d9, $d6, $d9, $dc
12b60     DF F1 FB F1 
12b64     F2 FE 03 09 
12b68     17 21 29 33 
12b6c     2C 24 1B 1A | 	byte	$df, $f1, $fb, $f1, $f2, $fe, $03, $09, $17, $21, $29, $33, $2c, $24, $1b, $1a
12b70     1C 09 F0 E7 
12b74     DB D8 E9 F6 
12b78     F0 E8 EC E8 
12b7c     E0 EE FE 0B | 	byte	$1c, $09, $f0, $e7, $db, $d8, $e9, $f6, $f0, $e8, $ec, $e8, $e0, $ee, $fe, $0b
12b80     12 1D 1A 14 
12b84     19 22 12 FC 
12b88     F9 EF E8 F0 
12b8c     F6 E4 DC E9 | 	byte	$12, $1d, $1a, $14, $19, $22, $12, $fc, $f9, $ef, $e8, $f0, $f6, $e4, $dc, $e9
12b90     F1 FB 05 10 
12b94     1D 27 39 3C 
12b98     35 29 1D 05 
12b9c     EA E6 E2 DB | 	byte	$f1, $fb, $05, $10, $1d, $27, $39, $3c, $35, $29, $1d, $05, $ea, $e6, $e2, $db
12ba0     DE D7 C8 BF 
12ba4     D2 DC E0 E9 
12ba8     F3 02 10 22 
12bac     35 37 34 38 | 	byte	$de, $d7, $c8, $bf, $d2, $dc, $e0, $e9, $f3, $02, $10, $22, $35, $37, $34, $38
12bb0     40 2E 21 18 
12bb4     04 08 05 FE 
12bb8     E7 E4 D9 C7 
12bbc     C1 C9 D9 EE | 	byte	$40, $2e, $21, $18, $04, $08, $05, $fe, $e7, $e4, $d9, $c7, $c1, $c9, $d9, $ee
12bc0     FA 01 FB F2 
12bc4     F7 04 02 00 
12bc8     0D 04 09 17 
12bcc     19 0E 17 1A | 	byte	$fa, $01, $fb, $f2, $f7, $04, $02, $00, $0d, $04, $09, $17, $19, $0e, $17, $1a
12bd0     18 18 18 19 
12bd4     27 28 1D 1B 
12bd8     00 E9 E9 E0 
12bdc     C1 BF B9 B9 | 	byte	$18, $18, $18, $19, $27, $28, $1d, $1b, $00, $e9, $e9, $e0, $c1, $bf, $b9, $b9
12be0     CA CB C9 DE 
12be4     EF FB 0D 21 
12be8     30 3E 4C 50 
12bec     53 4D 3D 39 | 	byte	$ca, $cb, $c9, $de, $ef, $fb, $0d, $21, $30, $3e, $4c, $50, $53, $4d, $3d, $39
12bf0     25 FF F3 E9 
12bf4     DE E5 E2 C6 
12bf8     B4 AB B2 BD 
12bfc     CB E4 FC 12 | 	byte	$25, $ff, $f3, $e9, $de, $e5, $e2, $c6, $b4, $ab, $b2, $bd, $cb, $e4, $fc, $12
12c00     20 27 32 30 
12c04     2E 2E 20 16 
12c08     17 0F 07 FA 
12c0c     E3 EB ED F0 | 	byte	$20, $27, $32, $30, $2e, $2e, $20, $16, $17, $0f, $07, $fa, $e3, $eb, $ed, $f0
12c10     FB FE F6 F9 
12c14     05 12 19 19 
12c18     01 FF 00 EB 
12c1c     E4 F0 F4 EE | 	byte	$fb, $fe, $f6, $f9, $05, $12, $19, $19, $01, $ff, $00, $eb, $e4, $f0, $f4, $ee
12c20     EE DE E5 F3 
12c24     F5 F7 FB 00 
12c28     0E 1E 2F 3A 
12c2c     37 2B 1D 14 | 	byte	$ee, $de, $e5, $f3, $f5, $f7, $fb, $00, $0e, $1e, $2f, $3a, $37, $2b, $1d, $14
12c30     04 F3 F4 FA 
12c34     F8 F3 E7 DA 
12c38     D8 DC E2 E7 
12c3c     F3 00 0F 17 | 	byte	$04, $f3, $f4, $fa, $f8, $f3, $e7, $da, $d8, $dc, $e2, $e7, $f3, $00, $0f, $17
12c40     14 0E 09 10 
12c44     12 0D FC F4 
12c48     F3 F0 E9 DF 
12c4c     F2 FB FE 09 | 	byte	$14, $0e, $09, $10, $12, $0d, $fc, $f4, $f3, $f0, $e9, $df, $f2, $fb, $fe, $09
12c50     12 1B 21 2D 
12c54     35 3A 35 14 
12c58     10 0D E8 C7 
12c5c     BE C7 D0 D2 | 	byte	$12, $1b, $21, $2d, $35, $3a, $35, $14, $10, $0d, $e8, $c7, $be, $c7, $d0, $d2
12c60     C5 CE D2 CF 
12c64     E0 EE 01 13 
12c68     26 39 47 54 
12c6c     55 50 4D 3A | 	byte	$c5, $ce, $d2, $cf, $e0, $ee, $01, $13, $26, $39, $47, $54, $55, $50, $4d, $3a
12c70     17 04 04 00 
12c74     EC CE BA B0 
12c78     B0 BE C6 D8 
12c7c     E7 EA F7 05 | 	byte	$17, $04, $04, $00, $ec, $ce, $ba, $b0, $b0, $be, $c6, $d8, $e7, $ea, $f7, $05
12c80     0D 19 19 26 
12c84     2B 18 05 11 
12c88     1B 12 04 05 
12c8c     13 0F 06 00 | 	byte	$0d, $19, $19, $26, $2b, $18, $05, $11, $1b, $12, $04, $05, $13, $0f, $06, $00
12c90     00 02 00 09 
12c94     16 17 09 FA 
12c98     EE E9 D3 BB 
12c9c     C7 D9 DD D7 | 	byte	$00, $02, $00, $09, $16, $17, $09, $fa, $ee, $e9, $d3, $bb, $c7, $d9, $dd, $d7
12ca0     E1 EE F8 00 
12ca4     13 1B 25 35 
12ca8     40 3C 3A 3F 
12cac     37 24 22 17 | 	byte	$e1, $ee, $f8, $00, $13, $1b, $25, $35, $40, $3c, $3a, $3f, $37, $24, $22, $17
12cb0     F1 EB E4 D3 
12cb4     BA B9 B4 BB 
12cb8     C4 D2 E3 F5 
12cbc     05 17 23 30 | 	byte	$f1, $eb, $e4, $d3, $ba, $b9, $b4, $bb, $c4, $d2, $e3, $f5, $05, $17, $23, $30
12cc0     33 35 39 32 
12cc4     20 FE F0 F0 
12cc8     EE DE F5 00 
12ccc     FE F0 F0 FA | 	byte	$33, $35, $39, $32, $20, $fe, $f0, $f0, $ee, $de, $f5, $00, $fe, $f0, $f0, $fa
12cd0     FC 05 12 1B 
12cd4     1C 19 14 12 
12cd8     08 03 E7 DD 
12cdc     E4 E4 C7 D3 | 	byte	$fc, $05, $12, $1b, $1c, $19, $14, $12, $08, $03, $e7, $dd, $e4, $e4, $c7, $d3
12ce0     E0 D9 DB EE 
12ce4     00 11 1C 23 
12ce8     27 2F 33 39 
12cec     37 30 29 12 | 	byte	$e0, $d9, $db, $ee, $00, $11, $1c, $23, $27, $2f, $33, $39, $37, $30, $29, $12
12cf0     FC FA EC D4 
12cf4     D4 DD D2 D0 
12cf8     DA D4 E2 ED 
12cfc     F2 01 11 1E | 	byte	$fc, $fa, $ec, $d4, $d4, $dd, $d2, $d0, $da, $d4, $e2, $ed, $f2, $01, $11, $1e
12d00     27 26 1F 19 
12d04     04 F2 F2 EB 
12d08     E7 F4 0B 14 
12d0c     09 10 14 1A | 	byte	$27, $26, $1f, $19, $04, $f2, $f2, $eb, $e7, $f4, $0b, $14, $09, $10, $14, $1a
12d10     1F 22 22 12 
12d14     0E 06 F9 EE 
12d18     ED D9 D1 D7 
12d1c     C3 B8 C6 DB | 	byte	$1f, $22, $22, $12, $0e, $06, $f9, $ee, $ed, $d9, $d1, $d7, $c3, $b8, $c6, $db
12d20     E1 DE F2 0A 
12d24     18 28 31 3C 
12d28     46 4D 53 53 
12d2c     45 36 13 F5 | 	byte	$e1, $de, $f2, $0a, $18, $28, $31, $3c, $46, $4d, $53, $53, $45, $36, $13, $f5
12d30     EF D0 B7 B2 
12d34     C0 CC C1 C0 
12d38     CB D9 E9 F3 
12d3c     00 13 24 32 | 	byte	$ef, $d0, $b7, $b2, $c0, $cc, $c1, $c0, $cb, $d9, $e9, $f3, $00, $13, $24, $32
12d40     37 33 34 29 
12d44     0E 12 F9 EB 
12d48     EE FA 04 FE 
12d4c     F8 FF 03 09 | 	byte	$37, $33, $34, $29, $0e, $12, $f9, $eb, $ee, $fa, $04, $fe, $f8, $ff, $03, $09
12d50     16 13 FE 02 
12d54     08 F9 F0 F5 
12d58     EE D2 E1 D0 
12d5c     CD DC E6 FC | 	byte	$16, $13, $fe, $02, $08, $f9, $f0, $f5, $ee, $d2, $e1, $d0, $cd, $dc, $e6, $fc
12d60     00 FD 00 16 
12d64     20 24 22 29 
12d68     32 3B 40 3F 
12d6c     31 1C F3 EF | 	byte	$00, $fd, $00, $16, $20, $24, $22, $29, $32, $3b, $40, $3f, $31, $1c, $f3, $ef
12d70     D3 BA BA C4 
12d74     CC C5 D4 DC 
12d78     EA F9 0A 16 
12d7c     12 1B 2D 32 | 	byte	$d3, $ba, $ba, $c4, $cc, $c5, $d4, $dc, $ea, $f9, $0a, $16, $12, $1b, $2d, $32
12d80     2A 1E 1B FE 
12d84     F8 ED E8 E7 
12d88     E7 F7 FC 00 
12d8c     02 0C 12 1B | 	byte	$2a, $1e, $1b, $fe, $f8, $ed, $e8, $e7, $e7, $f7, $fc, $00, $02, $0c, $12, $1b
12d90     1E 11 13 19 
12d94     0F 09 02 F3 
12d98     DE D5 C8 C0 
12d9c     C9 D2 DF EA | 	byte	$1e, $11, $13, $19, $0f, $09, $02, $f3, $de, $d5, $c8, $c0, $c9, $d2, $df, $ea
12da0     FE 00 00 15 
12da4     20 29 28 2F 
12da8     3C 44 46 40 
12dac     35 19 F4 E5 | 	byte	$fe, $00, $00, $15, $20, $29, $28, $2f, $3c, $44, $46, $40, $35, $19, $f4, $e5
12db0     D3 BF C5 C7 
12db4     BE C6 D0 D4 
12db8     E5 F7 09 17 
12dbc     14 17 27 32 | 	byte	$d3, $bf, $c5, $c7, $be, $c6, $d0, $d4, $e5, $f7, $09, $17, $14, $17, $27, $32
12dc0     2B 1C 13 FD 
12dc4     ED F4 F7 FA 
12dc8     FC FE 0D 11 
12dcc     0A 12 1B 19 | 	byte	$2b, $1c, $13, $fd, $ed, $f4, $f7, $fa, $fc, $fe, $0d, $11, $0a, $12, $1b, $19
12dd0     07 02 07 02 
12dd4     FE 00 FA E1 
12dd8     C7 B9 C6 CE 
12ddc     D5 DA E5 FE | 	byte	$07, $02, $07, $02, $fe, $00, $fa, $e1, $c7, $b9, $c6, $ce, $d5, $da, $e5, $fe
12de0     11 12 1B 2C 
12de4     35 38 30 33 
12de8     3E 43 3E 29 
12dec     1D F7 D0 CE | 	byte	$11, $12, $1b, $2c, $35, $38, $30, $33, $3e, $43, $3e, $29, $1d, $f7, $d0, $ce
12df0     CC C7 B9 AD 
12df4     B9 D2 D7 DC 
12df8     F6 06 19 20 
12dfc     25 2E 38 3D | 	byte	$cc, $c7, $b9, $ad, $b9, $d2, $d7, $dc, $f6, $06, $19, $20, $25, $2e, $38, $3d
12e00     2B 19 03 EC 
12e04     F0 EF EF F0 
12e08     E6 F9 0F 16 
12e0c     0D 0F 0D 0B | 	byte	$2b, $19, $03, $ec, $f0, $ef, $ef, $f0, $e6, $f9, $0f, $16, $0d, $0f, $0d, $0b
12e10     0A 04 02 04 
12e14     04 03 F5 E1 
12e18     C2 CB D2 D6 
12e1c     DE DA F2 05 | 	byte	$0a, $04, $02, $04, $04, $03, $f5, $e1, $c2, $cb, $d2, $d6, $de, $da, $f2, $05
12e20     0E 12 1D 2A 
12e24     35 3D 39 2E 
12e28     2F 38 33 20 
12e2c     06 D9 D0 CD | 	byte	$0e, $12, $1d, $2a, $35, $3d, $39, $2e, $2f, $38, $33, $20, $06, $d9, $d0, $cd
12e30     D0 C8 BD C2 
12e34     CC DA DC EC 
12e38     04 12 17 1B 
12e3c     26 2B 35 3A | 	byte	$d0, $c8, $bd, $c2, $cc, $da, $dc, $ec, $04, $12, $17, $1b, $26, $2b, $35, $3a
12e40     2E 16 E2 E2 
12e44     EE F5 F2 DA 
12e48     EA 04 15 17 
12e4c     1E 22 13 0A | 	byte	$2e, $16, $e2, $e2, $ee, $f5, $f2, $da, $ea, $04, $15, $17, $1e, $22, $13, $0a
12e50     04 03 0B 0B 
12e54     02 EF E3 C1 
12e58     C2 CE DE E6 
12e5c     D0 D9 F3 0D | 	byte	$04, $03, $0b, $0b, $02, $ef, $e3, $c1, $c2, $ce, $de, $e6, $d0, $d9, $f3, $0d
12e60     17 1B 23 2D 
12e64     3A 3B 39 3B 
12e68     3C 35 21 17 
12e6c     EC D8 D0 C8 | 	byte	$17, $1b, $23, $2d, $3a, $3b, $39, $3b, $3c, $35, $21, $17, $ec, $d8, $d0, $c8
12e70     C0 B5 C1 C9 
12e74     DD E9 ED F3 
12e78     00 13 1B 22 
12e7c     25 2E 35 2F | 	byte	$c0, $b5, $c1, $c9, $dd, $e9, $ed, $f3, $00, $13, $1b, $22, $25, $2e, $35, $2f
12e80     22 02 F0 EF 
12e84     EC EE E0 E5 
12e88     FD 0B 0F 14 
12e8c     1D 16 18 12 | 	byte	$22, $02, $f0, $ef, $ec, $ee, $e0, $e5, $fd, $0b, $0f, $14, $1d, $16, $18, $12
12e90     0F 0C 05 00 
12e94     F8 E7 CD B7 
12e98     C6 D4 D7 D3 
12e9c     E0 F5 00 0B | 	byte	$0f, $0c, $05, $00, $f8, $e7, $cd, $b7, $c6, $d4, $d7, $d3, $e0, $f5, $00, $0b
12ea0     1A 29 33 3B 
12ea4     39 34 36 3C 
12ea8     3B 32 26 0A 
12eac     D7 C4 CA BD | 	byte	$1a, $29, $33, $3b, $39, $34, $36, $3c, $3b, $32, $26, $0a, $d7, $c4, $ca, $bd
12eb0     B2 B8 C4 D3 
12eb4     E0 E3 F5 09 
12eb8     0E 11 18 25 
12ebc     2F 3A 32 24 | 	byte	$b2, $b8, $c4, $d3, $e0, $e3, $f5, $09, $0e, $11, $18, $25, $2f, $3a, $32, $24
12ec0     0C FD F5 F9 
12ec4     F5 EC E7 EB 
12ec8     FA 07 0F 15 
12ecc     0D 0D 12 09 | 	byte	$0c, $fd, $f5, $f9, $f5, $ec, $e7, $eb, $fa, $07, $0f, $15, $0d, $0d, $12, $09
12ed0     0A 16 12 F9 
12ed4     EB D2 CE C2 
12ed8     D2 D2 CD D5 
12edc     ED 06 19 21 | 	byte	$0a, $16, $12, $f9, $eb, $d2, $ce, $c2, $d2, $d2, $cd, $d5, $ed, $06, $19, $21
12ee0     31 35 30 35 
12ee4     32 30 35 30 
12ee8     2A 22 03 F0 
12eec     CB CA B8 B1 | 	byte	$31, $35, $30, $35, $32, $30, $35, $30, $2a, $22, $03, $f0, $cb, $ca, $b8, $b1
12ef0     B7 C8 D6 DF 
12ef4     E6 EC 00 11 
12ef8     22 26 2E 38 
12efc     32 2B 2C 0E | 	byte	$b7, $c8, $d6, $df, $e6, $ec, $00, $11, $22, $26, $2e, $38, $32, $2b, $2c, $0e
12f00     09 F2 F2 ED 
12f04     DB DD E7 F8 
12f08     FF 04 0C 0F 
12f0c     10 0F 12 13 | 	byte	$09, $f2, $f2, $ed, $db, $dd, $e7, $f8, $ff, $04, $0c, $0f, $10, $0f, $12, $13
12f10     14 19 11 06 
12f14     EB E2 D4 C2 
12f18     C9 C7 CF D7 
12f1c     ED 06 16 19 | 	byte	$14, $19, $11, $06, $eb, $e2, $d4, $c2, $c9, $c7, $cf, $d7, $ed, $06, $16, $19
12f20     28 38 37 2F 
12f24     2A 30 34 2C 
12f28     2B 16 FC E3 
12f2c     CD CF C4 CB | 	byte	$28, $38, $37, $2f, $2a, $30, $34, $2c, $2b, $16, $fc, $e3, $cd, $cf, $c4, $cb
12f30     D0 DA D8 E1 
12f34     E6 F2 00 09 
12f38     19 1C 22 2B 
12f3c     2A 24 15 00 | 	byte	$d0, $da, $d8, $e1, $e6, $f2, $00, $09, $19, $1c, $22, $2b, $2a, $24, $15, $00
12f40     08 F3 EC E7 
12f44     E8 E6 F3 06 
12f48     1A 1C 14 18 
12f4c     10 0D 0E 12 | 	byte	$08, $f3, $ec, $e7, $e8, $e6, $f3, $06, $1a, $1c, $14, $18, $10, $0d, $0e, $12
12f50     14 08 00 F2 
12f54     D1 D7 C9 BE 
12f58     BB C7 D0 E5 
12f5c     FA 0E 22 2B | 	byte	$14, $08, $00, $f2, $d1, $d7, $c9, $be, $bb, $c7, $d0, $e5, $fa, $0e, $22, $2b
12f60     35 40 46 47 
12f64     40 3E 38 2C 
12f68     1D F7 E6 D2 
12f6c     B6 B8 BE C0 | 	byte	$35, $40, $46, $47, $40, $3e, $38, $2c, $1d, $f7, $e6, $d2, $b6, $b8, $be, $c0
12f70     CC D4 D4 E2 
12f74     E7 FA 0A 12 
12f78     21 2A 32 2E 
12f7c     35 38 1D 14 | 	byte	$cc, $d4, $d4, $e2, $e7, $fa, $0a, $12, $21, $2a, $32, $2e, $35, $38, $1d, $14
12f80     14 F4 E7 E8 
12f84     E1 E0 EC FD 
12f88     0B 01 01 07 
12f8c     02 05 0B 11 | 	byte	$14, $f4, $e7, $e8, $e1, $e0, $ec, $fd, $0b, $01, $01, $07, $02, $05, $0b, $11
12f90     12 06 FC E7 
12f94     E0 EB D2 CF 
12f98     DF E5 E8 FD 
12f9c     0C 17 20 25 | 	byte	$12, $06, $fc, $e7, $e0, $eb, $d2, $cf, $df, $e5, $e8, $fd, $0c, $17, $20, $25
12fa0     2E 2B 32 35 
12fa4     2B 26 22 17 
12fa8     F8 E0 DF C7 
12fac     B5 C6 D4 D5 | 	byte	$2e, $2b, $32, $35, $2b, $26, $22, $17, $f8, $e0, $df, $c7, $b5, $c6, $d4, $d5
12fb0     E3 E9 F5 03 
12fb4     02 12 20 20 
12fb8     24 22 20 20 
12fbc     1E 0D 02 03 | 	byte	$e3, $e9, $f5, $03, $02, $12, $20, $20, $24, $22, $20, $20, $1e, $0d, $02, $03
12fc0     FA D2 D9 E5 
12fc4     E0 E4 F3 06 
12fc8     0B 0D 10 17 
12fcc     1B 26 27 20 | 	byte	$fa, $d2, $d9, $e5, $e0, $e4, $f3, $06, $0b, $0d, $10, $17, $1b, $26, $27, $20
12fd0     1F 15 F0 DF 
12fd4     D6 DB BE C0 
12fd8     D2 D7 DC EE 
12fdc     F9 0C 1F 24 | 	byte	$1f, $15, $f0, $df, $d6, $db, $be, $c0, $d2, $d7, $dc, $ee, $f9, $0c, $1f, $24
12fe0     27 2E 39 3E 
12fe4     37 33 32 15 
12fe8     00 F4 E9 D5 
12fec     CB D3 D9 D2 | 	byte	$27, $2e, $39, $3e, $37, $33, $32, $15, $00, $f4, $e9, $d5, $cb, $d3, $d9, $d2
12ff0     DC D7 E3 F4 
12ff4     F6 03 0A 09 
12ff8     19 1A 18 1B 
12ffc     12 12 11 11 | 	byte	$dc, $d7, $e3, $f4, $f6, $03, $0a, $09, $19, $1a, $18, $1b, $12, $12, $11, $11
13000     00 F3 FC 05 
13004     FA FF 0C 07 
13008     0A 06 00 08 
1300c     08 0D 11 0C | 	byte	$00, $f3, $fc, $05, $fa, $ff, $0c, $07, $0a, $06, $00, $08, $08, $0d, $11, $0c
13010     02 DC D2 D5 
13014     D7 C9 C2 D5 
13018     EE F0 F7 0D 
1301c     20 31 3E 38 | 	byte	$02, $dc, $d2, $d5, $d7, $c9, $c2, $d5, $ee, $f0, $f7, $0d, $20, $31, $3e, $38
13020     3E 42 3C 34 
13024     29 1F FC E3 
13028     E5 DC CC B9 
1302c     B1 CB DA D3 | 	byte	$3e, $42, $3c, $34, $29, $1f, $fc, $e3, $e5, $dc, $cc, $b9, $b1, $cb, $da, $d3
13030     D4 E1 F9 0B 
13034     11 1C 2B 33 
13038     33 30 2E 1F 
1303c     18 12 0B FD | 	byte	$d4, $e1, $f9, $0b, $11, $1c, $2b, $33, $33, $30, $2e, $1f, $18, $12, $0b, $fd
13040     E7 DA E3 F4 
13044     EF E9 DE E9 
13048     FC FE FC 06 
1304c     16 1E 24 1E | 	byte	$e7, $da, $e3, $f4, $ef, $e9, $de, $e9, $fc, $fe, $fc, $06, $16, $1e, $24, $1e
13050     00 F7 FA F7 
13054     ED E2 E2 EC 
13058     F3 F3 F5 FC 
1305c     03 12 22 27 | 	byte	$00, $f7, $fa, $f7, $ed, $e2, $e2, $ec, $f3, $f3, $f5, $fc, $03, $12, $22, $27
13060     1B 19 1D 22 
13064     1C F6 E7 F3 
13068     F5 EC E3 DB 
1306c     EB FA FE F2 | 	byte	$1b, $19, $1d, $22, $1c, $f6, $e7, $f3, $f5, $ec, $e3, $db, $eb, $fa, $fe, $f2
13070     EF FE 04 05 
13074     12 12 10 10 
13078     10 19 02 EC 
1307c     F3 FA F6 EE | 	byte	$ef, $fe, $04, $05, $12, $12, $10, $10, $10, $19, $02, $ec, $f3, $fa, $f6, $ee
13080     DC E9 FC 0E 
13084     06 FB 07 16 
13088     19 1F 1E 1F 
1308c     26 1E 17 FB | 	byte	$dc, $e9, $fc, $0e, $06, $fb, $07, $16, $19, $1f, $1e, $1f, $26, $1e, $17, $fb
13090     E2 DC D9 D5 
13094     D7 C4 C1 D5 
13098     E8 EC F3 00 
1309c     11 21 37 43 | 	byte	$e2, $dc, $d9, $d5, $d7, $c4, $c1, $d5, $e8, $ec, $f3, $00, $11, $21, $37, $43
130a0     3C 3E 44 3D 
130a4     14 FE 00 FE 
130a8     E8 E2 D8 CF 
130ac     D4 DF E6 DD | 	byte	$3c, $3e, $44, $3d, $14, $fe, $00, $fe, $e8, $e2, $d8, $cf, $d4, $df, $e6, $dd
130b0     D6 DB E8 FA 
130b4     06 0F 13 1A 
130b8     24 19 1A 19 
130bc     1D 18 16 05 | 	byte	$d6, $db, $e8, $fa, $06, $0f, $13, $1a, $24, $19, $1a, $19, $1d, $18, $16, $05
130c0     FB 02 0E FC 
130c4     F2 FB F5 EC 
130c8     F4 02 06 FB 
130cc     FC 06 EC DE | 	byte	$fb, $02, $0e, $fc, $f2, $fb, $f5, $ec, $f4, $02, $06, $fb, $fc, $06, $ec, $de
130d0     E6 EC E8 E9 
130d4     F0 F2 F9 09 
130d8     17 17 1E 1F 
130dc     20 24 24 31 | 	byte	$e6, $ec, $e8, $e9, $f0, $f2, $f9, $09, $17, $17, $1e, $1f, $20, $24, $24, $31
130e0     2E 1B 0D F0 
130e4     E9 E2 DE D2 
130e8     CE CE CC DC 
130ec     ED 00 F7 FE | 	byte	$2e, $1b, $0d, $f0, $e9, $e2, $de, $d2, $ce, $ce, $cc, $dc, $ed, $00, $f7, $fe
130f0     10 12 13 21 
130f4     2B 30 27 23 
130f8     0B 01 07 0A 
130fc     FB E9 EC E0 | 	byte	$10, $12, $13, $21, $2b, $30, $27, $23, $0b, $01, $07, $0a, $fb, $e9, $ec, $e0
13100     DC E3 E8 E5 
13104     E5 F9 FE 00 
13108     0C 19 27 30 
1310c     29 11 09 03 | 	byte	$dc, $e3, $e8, $e5, $e5, $f9, $fe, $00, $0c, $19, $27, $30, $29, $11, $09, $03
13110     0C 02 E9 E4 
13114     D5 E4 EE F3 
13118     FA F2 F6 FB 
1311c     04 09 0D 1A | 	byte	$0c, $02, $e9, $e4, $d5, $e4, $ee, $f3, $fa, $f2, $f6, $fb, $04, $09, $0d, $1a
13120     22 12 F9 04 
13124     09 0E 10 FE 
13128     FA F1 FA 03 
1312c     0A 00 E9 ED | 	byte	$22, $12, $f9, $04, $09, $0e, $10, $fe, $fa, $f1, $fa, $03, $0a, $00, $e9, $ed
13130     FF 02 FA FA 
13134     FA FB 00 EE 
13138     F3 F7 FE 08 
1313c     FE 00 F9 04 | 	byte	$ff, $02, $fa, $fa, $fa, $fb, $00, $ee, $f3, $f7, $fe, $08, $fe, $00, $f9, $04
13140     09 0D 1B 17 
13144     11 17 1C 14 
13148     0C 04 03 0C 
1314c     FB E7 DB DC | 	byte	$09, $0d, $1b, $17, $11, $17, $1c, $14, $0c, $04, $03, $0c, $fb, $e7, $db, $dc
13150     E0 DB D4 C9 
13154     D2 E8 FB 0B 
13158     0F 13 1E 2F 
1315c     37 3A 38 2E | 	byte	$e0, $db, $d4, $c9, $d2, $e8, $fb, $0b, $0f, $13, $1e, $2f, $37, $3a, $38, $2e
13160     20 14 0B FF 
13164     F7 EE EC E7 
13168     D0 C3 CF E1 
1316c     F0 E3 DF EF | 	byte	$20, $14, $0b, $ff, $f7, $ee, $ec, $e7, $d0, $c3, $cf, $e1, $f0, $e3, $df, $ef
13170     01 0D 10 13 
13174     19 1B 1B 24 
13178     21 20 20 17 
1317c     17 04 EA E0 | 	byte	$01, $0d, $10, $13, $19, $1b, $1b, $24, $21, $20, $20, $17, $17, $04, $ea, $e0
13180     E4 FA 00 EF 
13184     E0 E2 F6 FE 
13188     F6 F6 F7 FC 
1318c     04 FB 00 0C | 	byte	$e4, $fa, $00, $ef, $e0, $e2, $f6, $fe, $f6, $f6, $f7, $fc, $04, $fb, $00, $0c
13190     08 09 03 F7 
13194     02 0B 19 22 
13198     0F 00 00 0E 
1319c     17 11 F8 DC | 	byte	$08, $09, $03, $f7, $02, $0b, $19, $22, $0f, $00, $00, $0e, $17, $11, $f8, $dc
131a0     DC F5 F7 EB 
131a4     ED EE F3 F7 
131a8     EB F5 07 14 
131ac     16 11 14 1B | 	byte	$dc, $f5, $f7, $eb, $ed, $ee, $f3, $f7, $eb, $f5, $07, $14, $16, $11, $14, $1b
131b0     1B 24 1F 09 
131b4     EE E9 00 06 
131b8     F5 EE EA EB 
131bc     F2 DE D3 E4 | 	byte	$1b, $24, $1f, $09, $ee, $e9, $00, $06, $f5, $ee, $ea, $eb, $f2, $de, $d3, $e4
131c0     F7 09 12 06 
131c4     0D 16 24 2C 
131c8     24 14 0D 11 
131cc     12 07 F6 E7 | 	byte	$f7, $09, $12, $06, $0d, $16, $24, $2c, $24, $14, $0d, $11, $12, $07, $f6, $e7
131d0     EB E9 D8 C9 
131d4     D8 E7 F4 FC 
131d8     F6 FE 0A 16 
131dc     22 13 00 FE | 	byte	$eb, $e9, $d8, $c9, $d8, $e7, $f4, $fc, $f6, $fe, $0a, $16, $22, $13, $00, $fe
131e0     10 24 26 17 
131e4     0D 14 0A 02 
131e8     F3 EC F0 EF 
131ec     F0 E2 E1 F0 | 	byte	$10, $24, $26, $17, $0d, $14, $0a, $02, $f3, $ec, $f0, $ef, $f0, $e2, $e1, $f0
131f0     F5 FD F7 E8 
131f4     E6 F9 0A 14 
131f8     14 0E 17 1B 
131fc     10 00 08 12 | 	byte	$f5, $fd, $f7, $e8, $e6, $f9, $0a, $14, $14, $0e, $17, $1b, $10, $00, $08, $12
13200     1A 1E 12 00 
13204     FC FB 01 FE 
13208     DE D5 E6 E8 
1320c     EC ED E7 F1 | 	byte	$1a, $1e, $12, $00, $fc, $fb, $01, $fe, $de, $d5, $e6, $e8, $ec, $ed, $e7, $f1
13210     FB F8 EE FD 
13214     0D 19 20 1F 
13218     24 2B 2C 28 
1321c     1B 02 E8 EC | 	byte	$fb, $f8, $ee, $fd, $0d, $19, $20, $1f, $24, $2b, $2c, $28, $1b, $02, $e8, $ec
13220     F6 FB E9 D5 
13224     E0 F0 EC DE 
13228     E4 F6 FB FB 
1322c     00 04 13 1B | 	byte	$f6, $fb, $e9, $d5, $e0, $f0, $ec, $de, $e4, $f6, $fb, $fb, $00, $04, $13, $1b
13230     1D 1E 14 0B 
13234     14 19 00 00 
13238     00 00 09 FF 
1323c     01 FD 00 F7 | 	byte	$1d, $1e, $14, $0b, $14, $19, $00, $00, $00, $00, $09, $ff, $01, $fd, $00, $f7
13240     00 03 00 FE 
13244     05 FF 03 F5 
13248     06 08 04 FA 
1324c     FF FB 05 FF | 	byte	$00, $03, $00, $fe, $05, $ff, $03, $f5, $06, $08, $04, $fa, $ff, $fb, $05, $ff
13250     03 07 FA F9 
13254     00 01 07 F9 
13258     00 02 FE FE 
1325c     FC 00 07 FD | 	byte	$03, $07, $fa, $f9, $00, $01, $07, $f9, $00, $02, $fe, $fe, $fc, $00, $07, $fd
13260     00 03 F7 01 
13264     06 03 FB F4 
13268     05 05 F7 01 
1326c     00 FC 00 03 | 	byte	$00, $03, $f7, $01, $06, $03, $fb, $f4, $05, $05, $f7, $01, $00, $fc, $00, $03
13270     0A 07 FA FF 
13274     F9 01 FD F3 
13278     03 09 FC FE 
1327c     FB 04 08 03 | 	byte	$0a, $07, $fa, $ff, $f9, $01, $fd, $f3, $03, $09, $fc, $fe, $fb, $04, $08, $03
13280     03 07 F9 00 
13284     FF 05 FB F7 
13288     02 F9 FD 05 
1328c     00 00 03 03 | 	byte	$03, $07, $f9, $00, $ff, $05, $fb, $f7, $02, $f9, $fd, $05, $00, $00, $03, $03
13290     04 00 F6 01 
13294     01 03 FD FC 
13298     0A FE 03 FE 
1329c     FC 07 03 00 | 	byte	$04, $00, $f6, $01, $01, $03, $fd, $fc, $0a, $fe, $03, $fe, $fc, $07, $03, $00
132a0     07 01 F0 F8 
132a4     02 00 FA FC 
132a8     03 F2 FF 0B 
132ac     04 0A 0B 0C | 	byte	$07, $01, $f0, $f8, $02, $00, $fa, $fc, $03, $f2, $ff, $0b, $04, $0a, $0b, $0c
132b0     07 FC F9 FC 
132b4     04 FE F4 F7 
132b8     00 FD FE 01 
132bc     00 08 03 04 | 	byte	$07, $fc, $f9, $fc, $04, $fe, $f4, $f7, $00, $fd, $fe, $01, $00, $08, $03, $04
132c0     12 03 F7 F6 
132c4     02 FD FB FD 
132c8     F9 FF 06 04 
132cc     00 0A 0E 06 | 	byte	$12, $03, $f7, $f6, $02, $fd, $fb, $fd, $f9, $ff, $06, $04, $00, $0a, $0e, $06
132d0     00 F1 F6 FC 
132d4     00 FE 04 FD 
132d8     F7 FD 07 07 
132dc     00 03 00 03 | 	byte	$00, $f1, $f6, $fc, $00, $fe, $04, $fd, $f7, $fd, $07, $07, $00, $03, $00, $03
132e0     07 F7 F3 03 
132e4     02 F6 00 F9 
132e8     00 06 0E 0A 
132ec     06 0E 04 08 | 	byte	$07, $f7, $f3, $03, $02, $f6, $00, $f9, $00, $06, $0e, $0a, $06, $0e, $04, $08
132f0     04 F0 EA F8 
132f4     F9 F8 00 EA 
132f8     F7 FC 03 08 
132fc     0C 15 0E 11 | 	byte	$04, $f0, $ea, $f8, $f9, $f8, $00, $ea, $f7, $fc, $03, $08, $0c, $15, $0e, $11
13300     11 FC F8 03 
13304     03 F9 F4 E2 
13308     F9 01 06 04 
1330c     07 0A FD 00 | 	byte	$11, $fc, $f8, $03, $03, $f9, $f4, $e2, $f9, $01, $06, $04, $07, $0a, $fd, $00
13310     01 F2 F5 FD 
13314     FA 06 07 F6 
13318     09 11 12 06 
1331c     06 0E 09 07 | 	byte	$01, $f2, $f5, $fd, $fa, $06, $07, $f6, $09, $11, $12, $06, $06, $0e, $09, $07
13320     F4 E9 EF EF 
13324     F0 FD F3 F3 
13328     07 08 14 11 
1332c     0E 0F 05 07 | 	byte	$f4, $e9, $ef, $ef, $f0, $fd, $f3, $f3, $07, $08, $14, $11, $0e, $0f, $05, $07
13330     F5 EB F6 FC 
13334     FD 00 F0 F6 
13338     FD 09 11 04 
1333c     0E 10 07 0D | 	byte	$f5, $eb, $f6, $fc, $fd, $00, $f0, $f6, $fd, $09, $11, $04, $0e, $10, $07, $0d
13340     FD F2 F8 F6 
13344     FB F4 DF EC 
13348     04 07 0A 0A 
1334c     15 07 08 0F | 	byte	$fd, $f2, $f8, $f6, $fb, $f4, $df, $ec, $04, $07, $0a, $0a, $15, $07, $08, $0f
13350     F9 FB 00 FB 
13354     07 FF F4 F8 
13358     09 0C 0A FF 
1335c     03 03 05 FB | 	byte	$f9, $fb, $00, $fb, $07, $ff, $f4, $f8, $09, $0c, $0a, $ff, $03, $03, $05, $fb
13360     E2 EB E4 E8 
13364     FF F5 00 09 
13368     18 1E 26 1C 
1336c     1B 12 10 00 | 	byte	$e2, $eb, $e4, $e8, $ff, $f5, $00, $09, $18, $1e, $26, $1c, $1b, $12, $10, $00
13370     DD E3 E0 EB 
13374     F5 E7 F2 EF 
13378     02 10 11 07 
1337c     17 10 10 07 | 	byte	$dd, $e3, $e0, $eb, $f5, $e7, $f2, $ef, $02, $10, $11, $07, $17, $10, $10, $07
13380     00 00 F5 FF 
13384     FF EF F6 00 
13388     11 0E 0F 05 
1338c     00 F3 03 F5 | 	byte	$00, $00, $f5, $ff, $ff, $ef, $f6, $00, $11, $0e, $0f, $05, $00, $f3, $03, $f5
13390     F2 F5 EF FC 
13394     FA F5 FA 06 
13398     18 13 0B 0A 
1339c     12 07 09 F4 | 	byte	$f2, $f5, $ef, $fc, $fa, $f5, $fa, $06, $18, $13, $0b, $0a, $12, $07, $09, $f4
133a0     F8 E5 E7 F9 
133a4     F5 FC FE 07 
133a8     15 18 1C 13 
133ac     0E 0C 08 D8 | 	byte	$f8, $e5, $e7, $f9, $f5, $fc, $fe, $07, $15, $18, $1c, $13, $0e, $0c, $08, $d8
133b0     D7 D6 E6 F2 
133b4     EA FC FE 07 
133b8     16 23 24 23 
133bc     1D 18 11 F6 | 	byte	$d7, $d6, $e6, $f2, $ea, $fc, $fe, $07, $16, $23, $24, $23, $1d, $18, $11, $f6
133c0     F6 DD ED F1 
133c4     DE EA F2 FE 
133c8     0A 11 03 F8 
133cc     FA 07 09 F5 | 	byte	$f6, $dd, $ed, $f1, $de, $ea, $f2, $fe, $0a, $11, $03, $f8, $fa, $07, $09, $f5
133d0     FD FC 04 FD 
133d4     07 16 11 18 
133d8     23 0F 03 00 
133dc     EF F2 F5 DE | 	byte	$fd, $fc, $04, $fd, $07, $16, $11, $18, $23, $0f, $03, $00, $ef, $f2, $f5, $de
133e0     D1 D7 EB E7 
133e4     F6 FF 07 1C 
133e8     28 2A 26 22 
133ec     14 17 00 E1 | 	byte	$d1, $d7, $eb, $e7, $f6, $ff, $07, $1c, $28, $2a, $26, $22, $14, $17, $00, $e1
133f0     E1 E6 EC E6 
133f4     F8 F2 F3 00 
133f8     11 1A 17 15 
133fc     0A 0C 07 E1 | 	byte	$e1, $e6, $ec, $e6, $f8, $f2, $f3, $00, $11, $1a, $17, $15, $0a, $0c, $07, $e1
13400     DD EB FC E8 
13404     F2 03 07 0E 
13408     1A 1F 12 11 
1340c     05 03 0B E4 | 	byte	$dd, $eb, $fc, $e8, $f2, $03, $07, $0e, $1a, $1f, $12, $11, $05, $03, $0b, $e4
13410     E8 EF EF ED 
13414     01 07 09 18 
13418     1A 00 FC F7 
1341c     ED FB 02 CD | 	byte	$e8, $ef, $ef, $ed, $01, $07, $09, $18, $1a, $00, $fc, $f7, $ed, $fb, $02, $cd
13420     E4 F6 F0 F9 
13424     15 26 26 2A 
13428     30 2A 1C 03 
1342c     FD FA E6 B9 | 	byte	$e4, $f6, $f0, $f9, $15, $26, $26, $2a, $30, $2a, $1c, $03, $fd, $fa, $e6, $b9
13430     CD D7 D4 E6 
13434     E9 F7 01 15 
13438     26 2B 2E 21 
1343c     1A 17 08 EA | 	byte	$cd, $d7, $d4, $e6, $e9, $f7, $01, $15, $26, $2b, $2e, $21, $1a, $17, $08, $ea
13440     FA 00 EC EE 
13444     FB F9 ED 02 
13448     11 00 FB F1 
1344c     FA 02 E8 D9 | 	byte	$fa, $00, $ec, $ee, $fb, $f9, $ed, $02, $11, $00, $fb, $f1, $fa, $02, $e8, $d9
13450     F4 F8 F3 09 
13454     1D 21 26 2D 
13458     24 0E 11 F6 
1345c     F6 00 DD CC | 	byte	$f4, $f8, $f3, $09, $1d, $21, $26, $2d, $24, $0e, $11, $f6, $f6, $00, $dd, $cc
13460     DA DA E3 F6 
13464     0C 16 1A 28 
13468     27 14 0E FA 
1346c     FD 00 D7 D5 | 	byte	$da, $da, $e3, $f6, $0c, $16, $1a, $28, $27, $14, $0e, $fa, $fd, $00, $d7, $d5
13470     E4 DF F2 F9 
13474     07 1B 1D 28 
13478     2B 2B 23 F8 
1347c     00 FA E1 D3 | 	byte	$e4, $df, $f2, $f9, $07, $1b, $1d, $28, $2b, $2b, $23, $f8, $00, $fa, $e1, $d3
13480     E8 DC EE E4 
13484     EB FA 00 14 
13488     18 11 16 00 
1348c     12 04 F3 FE | 	byte	$e8, $dc, $ee, $e4, $eb, $fa, $00, $14, $18, $11, $16, $00, $12, $04, $f3, $fe
13490     0E F9 07 13 
13494     1C 15 09 16 
13498     0C EC E4 D5 
1349c     ED DB BD CE | 	byte	$0e, $f9, $07, $13, $1c, $15, $09, $16, $0c, $ec, $e4, $d5, $ed, $db, $bd, $ce
134a0     E0 E6 FD 14 
134a4     32 3F 39 40 
134a8     39 2A 15 03 
134ac     00 F1 C8 CC | 	byte	$e0, $e6, $fd, $14, $32, $3f, $39, $40, $39, $2a, $15, $03, $00, $f1, $c8, $cc
134b0     BD CA E3 E3 
134b4     F8 0B 13 27 
134b8     18 1A 10 04 
134bc     05 FD EF F4 | 	byte	$bd, $ca, $e3, $e3, $f8, $0b, $13, $27, $18, $1a, $10, $04, $05, $fd, $ef, $f4
134c0     EB FC 0B FD 
134c4     04 18 15 1F 
134c8     11 0E FD E4 
134cc     ED EB D3 E8 | 	byte	$eb, $fc, $0b, $fd, $04, $18, $15, $1f, $11, $0e, $fd, $e4, $ed, $eb, $d3, $e8
134d0     E3 F9 04 08 
134d4     11 1D 1C 28 
134d8     0D FC FA F1 
134dc     F5 E9 D8 E3 | 	byte	$e3, $f9, $04, $08, $11, $1d, $1c, $28, $0d, $fc, $fa, $f1, $f5, $e9, $d8, $e3
134e0     EE 00 14 1F 
134e4     33 34 1B 25 
134e8     15 FB EC E5 
134ec     E8 D6 AB B5 | 	byte	$ee, $00, $14, $1f, $33, $34, $1b, $25, $15, $fb, $ec, $e5, $e8, $d6, $ab, $b5
134f0     CF EC F6 06 
134f4     24 38 37 47 
134f8     33 27 1C 0E 
134fc     01 00 E7 CD | 	byte	$cf, $ec, $f6, $06, $24, $38, $37, $47, $33, $27, $1c, $0e, $01, $00, $e7, $cd
13500     E1 E7 EF DA 
13504     F1 07 07 06 
13508     F8 F2 F2 F3 
1350c     00 F6 F0 FA | 	byte	$e1, $e7, $ef, $da, $f1, $07, $07, $06, $f8, $f2, $f2, $f3, $00, $f6, $f0, $fa
13510     13 1F 2D 2D 
13514     2A 31 2A 25 
13518     01 EA E4 D2 
1351c     C9 BA AD C5 | 	byte	$13, $1f, $2d, $2d, $2a, $31, $2a, $25, $01, $ea, $e4, $d2, $c9, $ba, $ad, $c5
13520     E9 03 0E 15 
13524     31 3F 32 3B 
13528     22 0A 00 FA 
1352c     01 D8 B0 D4 | 	byte	$e9, $03, $0e, $15, $31, $3f, $32, $3b, $22, $0a, $00, $fa, $01, $d8, $b0, $d4
13530     F0 F3 02 14 
13534     23 30 20 1C 
13538     01 00 FF EB 
1353c     F9 CF B6 D2 | 	byte	$f0, $f3, $02, $14, $23, $30, $20, $1c, $01, $00, $ff, $eb, $f9, $cf, $b6, $d2
13540     F3 07 0B 03 
13544     1C 30 1F 21 
13548     0F 09 06 F8 
1354c     07 DC DE FD | 	byte	$f3, $07, $0b, $03, $1c, $30, $1f, $21, $0f, $09, $06, $f8, $07, $dc, $de, $fd
13550     0E 09 08 07 
13554     0C 1B 16 00 
13558     DB DB DC CE 
1355c     E0 B9 CF F9 | 	byte	$0e, $09, $08, $07, $0c, $1b, $16, $00, $db, $db, $dc, $ce, $e0, $b9, $cf, $f9
13560     1B 33 3F 3F 
13564     51 52 3B 29 
13568     0E FC E4 DE 
1356c     C5 84 9A C8 | 	byte	$1b, $33, $3f, $3f, $51, $52, $3b, $29, $0e, $fc, $e4, $de, $c5, $84, $9a, $c8
13570     DE ED FD 0C 
13574     26 36 35 31 
13578     1A 20 10 0C 
1357c     FD DB DC F6 | 	byte	$de, $ed, $fd, $0c, $26, $36, $35, $31, $1a, $20, $10, $0c, $fd, $db, $dc, $f6
13580     0C 0E 0E 07 
13584     19 1B FF E8 
13588     DE EF D8 E9 
1358c     C8 C3 DE 0A | 	byte	$0c, $0e, $0e, $07, $19, $1b, $ff, $e8, $de, $ef, $d8, $e9, $c8, $c3, $de, $0a
13590     1C 2C 36 2D 
13594     30 38 28 18 
13598     F9 F6 D7 D3 
1359c     AC C1 DD 00 | 	byte	$1c, $2c, $36, $2d, $30, $38, $28, $18, $f9, $f6, $d7, $d3, $ac, $c1, $dd, $00
135a0     19 1D 18 1F 
135a4     36 39 1A 07 
135a8     F0 E9 CF CE 
135ac     BA C1 D1 F2 | 	byte	$19, $1d, $18, $1f, $36, $39, $1a, $07, $f0, $e9, $cf, $ce, $ba, $c1, $d1, $f2
135b0     06 22 34 3B 
135b4     44 4C 31 21 
135b8     12 0E FC D3 
135bc     B6 B3 C5 E2 | 	byte	$06, $22, $34, $3b, $44, $4c, $31, $21, $12, $0e, $fc, $d3, $b6, $b3, $c5, $e2
135c0     F9 03 00 FF 
135c4     0E 0E 03 0A 
135c8     0E 01 F6 E2 
135cc     F6 00 0F 2D | 	byte	$f9, $03, $00, $ff, $0e, $0e, $03, $0a, $0e, $01, $f6, $e2, $f6, $00, $0f, $2d
135d0     37 35 2A 23 
135d4     26 1C F9 DD 
135d8     C6 BA A3 93 
135dc     AC C7 E9 0C | 	byte	$37, $35, $2a, $23, $26, $1c, $f9, $dd, $c6, $ba, $a3, $93, $ac, $c7, $e9, $0c
135e0     2B 43 50 4F 
135e4     58 4E 30 26 
135e8     10 EB C5 B1 
135ec     C5 BB CF EB | 	byte	$2b, $43, $50, $4f, $58, $4e, $30, $26, $10, $eb, $c5, $b1, $c5, $bb, $cf, $eb
135f0     01 09 0E 15 
135f4     27 2A 0E 0D 
135f8     FF F6 D8 C5 
135fc     E4 F0 F9 0D | 	byte	$01, $09, $0e, $15, $27, $2a, $0e, $0d, $ff, $f6, $d8, $c5, $e4, $f0, $f9, $0d
13600     1F 36 2D 23 
13604     17 1F 01 01 
13608     F0 E5 D6 C3 
1360c     E0 DF F6 1B | 	byte	$1f, $36, $2d, $23, $17, $1f, $01, $01, $f0, $e5, $d6, $c3, $e0, $df, $f6, $1b
13610     23 18 1D 1A 
13614     11 0F 01 FC 
13618     DD B3 BA BC 
1361c     F0 06 1A 31 | 	byte	$23, $18, $1d, $1a, $11, $0f, $01, $fc, $dd, $b3, $ba, $bc, $f0, $06, $1a, $31
13620     46 4D 45 3F 
13624     3F 34 00 EF 
13628     CC 9B 9E A0 
1362c     B5 B8 CC F6 | 	byte	$46, $4d, $45, $3f, $3f, $34, $00, $ef, $cc, $9b, $9e, $a0, $b5, $b8, $cc, $f6
13630     16 2D 43 4B 
13634     46 45 35 31 
13638     19 EC E7 D9 
1363c     E5 E7 F0 00 | 	byte	$16, $2d, $43, $4b, $46, $45, $35, $31, $19, $ec, $e7, $d9, $e5, $e7, $f0, $00
13640     10 12 F7 E1 
13644     ED FA E7 E0 
13648     DD CE CF E6 
1364c     0F 1D 30 46 | 	byte	$10, $12, $f7, $e1, $ed, $fa, $e7, $e0, $dd, $ce, $cf, $e6, $0f, $1d, $30, $46
13650     46 47 4D 39 
13654     1F 16 01 C8 
13658     9E 9B A4 B9 
1365c     DC E8 FD 1A | 	byte	$46, $47, $4d, $39, $1f, $16, $01, $c8, $9e, $9b, $a4, $b9, $dc, $e8, $fd, $1a
13660     30 35 3B 34 
13664     36 27 06 FC 
13668     E1 CA BA D5 
1366c     E4 E5 FC 16 | 	byte	$30, $35, $3b, $34, $36, $27, $06, $fc, $e1, $ca, $ba, $d5, $e4, $e5, $fc, $16
13670     30 36 33 2D 
13674     2A 25 07 F7 
13678     D2 C9 BC C0 
1367c     D5 EB F6 04 | 	byte	$30, $36, $33, $2d, $2a, $25, $07, $f7, $d2, $c9, $bc, $c0, $d5, $eb, $f6, $04
13680     1F 18 08 15 
13684     17 1C 03 FD 
13688     FF F9 EB 00 
1368c     17 15 1C 26 | 	byte	$1f, $18, $08, $15, $17, $1c, $03, $fd, $ff, $f9, $eb, $00, $17, $15, $1c, $26
13690     2D 26 18 FD 
13694     E6 E3 B5 8C 
13698     9D AE BB DF 
1369c     09 23 3F 51 | 	byte	$2d, $26, $18, $fd, $e6, $e3, $b5, $8c, $9d, $ae, $bb, $df, $09, $23, $3f, $51
136a0     5F 68 63 58 
136a4     3F 1E F6 D6 
136a8     C2 AB A8 B2 
136ac     BA C6 D9 F9 | 	byte	$5f, $68, $63, $58, $3f, $1e, $f6, $d6, $c2, $ab, $a8, $b2, $ba, $c6, $d9, $f9
136b0     11 1B 23 2D 
136b4     2F 1C 0B 09 
136b8     02 F7 F3 FA 
136bc     11 1D 17 1D | 	byte	$11, $1b, $23, $2d, $2f, $1c, $0b, $09, $02, $f7, $f3, $fa, $11, $1d, $17, $1d
136c0     18 00 FC F3 
136c4     F5 ED D7 DD 
136c8     D2 CC CF E5 
136cc     09 16 22 30 | 	byte	$18, $00, $fc, $f3, $f5, $ed, $d7, $dd, $d2, $cc, $cf, $e5, $09, $16, $22, $30
136d0     3B 33 33 1F 
136d4     0B F3 B6 CA 
136d8     D8 CF DF F8 
136dc     12 18 24 34 | 	byte	$3b, $33, $33, $1f, $0b, $f3, $b6, $ca, $d8, $cf, $df, $f8, $12, $18, $24, $34
136e0     3F 3F 39 16 
136e4     F3 E2 B6 C7 
136e8     C1 AF B4 BF 
136ec     E7 FB 1B 38 | 	byte	$3f, $3f, $39, $16, $f3, $e2, $b6, $c7, $c1, $af, $b4, $bf, $e7, $fb, $1b, $38
136f0     4C 4A 4D 51 
136f4     34 21 FD 01 
136f8     F1 CC D3 E4 
136fc     FD EB E6 DC | 	byte	$4c, $4a, $4d, $51, $34, $21, $fd, $01, $f1, $cc, $d3, $e4, $fd, $eb, $e6, $dc
13700     CF E4 EC F5 
13704     F6 F5 F0 FD 
13708     10 05 18 2B 
1370c     43 44 44 43 | 	byte	$cf, $e4, $ec, $f5, $f6, $f5, $f0, $fd, $10, $05, $18, $2b, $43, $44, $44, $43
13710     35 2A 13 EF 
13714     C9 9A A1 B3 
13718     B6 A1 B9 DE 
1371c     09 19 34 49 | 	byte	$35, $2a, $13, $ef, $c9, $9a, $a1, $b3, $b6, $a1, $b9, $de, $09, $19, $34, $49
13720     4F 54 4D 31 
13724     22 03 FA EA 
13728     ED C0 BF CC 
1372c     F1 F5 03 0F | 	byte	$4f, $54, $4d, $31, $22, $03, $fa, $ea, $ed, $c0, $bf, $cc, $f1, $f5, $03, $0f
13730     1D 29 27 09 
13734     F6 D9 E5 EF 
13738     F8 D6 F0 07 
1373c     15 0F 0B 0D | 	byte	$1d, $29, $27, $09, $f6, $d9, $e5, $ef, $f8, $d6, $f0, $07, $15, $0f, $0b, $0d
13740     0F 18 13 14 
13744     05 F9 F9 FD 
13748     07 EA F5 08 
1374c     26 1A 03 FA | 	byte	$0f, $18, $13, $14, $05, $f9, $f9, $fd, $07, $ea, $f5, $08, $26, $1a, $03, $fa
13750     00 FF ED D8 
13754     BD B7 CC E0 
13758     F0 EB 0D 2D 
1375c     44 46 56 56 | 	byte	$00, $ff, $ed, $d8, $bd, $b7, $cc, $e0, $f0, $eb, $0d, $2d, $44, $46, $56, $56
13760     4B 3F 26 15 
13764     DB D6 CD D1 
13768     AC 82 8C B1 
1376c     E7 F5 0D 26 | 	byte	$4b, $3f, $26, $15, $db, $d6, $cd, $d1, $ac, $82, $8c, $b1, $e7, $f5, $0d, $26
13770     39 45 3B 3B 
13774     23 2C 23 24 
13778     1A FC 01 02 
1377c     04 EC E4 D8 | 	byte	$39, $45, $3b, $3b, $23, $2c, $23, $24, $1a, $fc, $01, $02, $04, $ec, $e4, $d8
13780     DA EB EF CD 
13784     B9 D1 DE FB 
13788     03 03 1C 2F 
1378c     41 3F 34 3C | 	byte	$da, $eb, $ef, $cd, $b9, $d1, $de, $fb, $03, $03, $1c, $2f, $41, $3f, $34, $3c
13790     3B 23 04 DC 
13794     CF CC CB E1 
13798     DD DA E4 04 
1379c     1F 18 06 13 | 	byte	$3b, $23, $04, $dc, $cf, $cc, $cb, $e1, $dd, $da, $e4, $04, $1f, $18, $06, $13
137a0     1C 0D 1A F1 
137a4     F2 F4 ED E9 
137a8     D2 D2 E1 05 
137ac     21 1D 25 36 | 	byte	$1c, $0d, $1a, $f1, $f2, $f4, $ed, $e9, $d2, $d2, $e1, $05, $21, $1d, $25, $36
137b0     3C 2A 2B 07 
137b4     06 F9 EF FD 
137b8     CE BD C5 DD 
137bc     DB DA E5 F6 | 	byte	$3c, $2a, $2b, $07, $06, $f9, $ef, $fd, $ce, $bd, $c5, $dd, $db, $da, $e5, $f6
137c0     02 0B 0E FD 
137c4     11 20 2B 39 
137c8     1C 22 2A 2F 
137cc     28 1D 17 06 | 	byte	$02, $0b, $0e, $fd, $11, $20, $2b, $39, $1c, $22, $2a, $2f, $28, $1d, $17, $06
137d0     F1 E0 AF 93 
137d4     95 A6 B6 DE 
137d8     D6 F3 0F 37 
137dc     40 46 51 5F | 	byte	$f1, $e0, $af, $93, $95, $a6, $b6, $de, $d6, $f3, $0f, $37, $40, $46, $51, $5f
137e0     4F 4C 22 11 
137e4     01 F4 DC D9 
137e8     BA BA BD DD 
137ec     E1 DA E8 00 | 	byte	$4f, $4c, $22, $11, $01, $f4, $dc, $d9, $ba, $ba, $bd, $dd, $e1, $da, $e8, $00
137f0     03 0E 00 10 
137f4     20 1F 21 26 
137f8     0A 09 0E 1C 
137fc     07 00 00 03 | 	byte	$03, $0e, $00, $10, $20, $1f, $21, $26, $0a, $09, $0e, $1c, $07, $00, $00, $03
13800     FB F0 EE F2 
13804     FA F2 FB F3 
13808     D7 E8 F9 13 
1380c     01 0E 1D 16 | 	byte	$fb, $f0, $ee, $f2, $fa, $f2, $fb, $f3, $d7, $e8, $f9, $13, $01, $0e, $1d, $16
13810     02 ED E7 EC 
13814     F0 F9 06 0D 
13818     05 0B 1F 34 
1381c     24 2E 39 23 | 	byte	$02, $ed, $e7, $ec, $f0, $f9, $06, $0d, $05, $0b, $1f, $34, $24, $2e, $39, $23
13820     11 E9 D3 C9 
13824     CE BA C5 B8 
13828     C1 CD EF 07 
1382c     0C 2A 40 3F | 	byte	$11, $e9, $d3, $c9, $ce, $ba, $c5, $b8, $c1, $cd, $ef, $07, $0c, $2a, $40, $3f
13830     39 39 38 37 
13834     2D 25 1A FB 
13838     EE EB D8 D2 
1383c     B8 B8 C7 C5 | 	byte	$39, $39, $38, $37, $2d, $25, $1a, $fb, $ee, $eb, $d8, $d2, $b8, $b8, $c7, $c5
13840     BE D6 E8 01 
13844     17 24 2F 20 
13848     2C 34 43 3A 
1384c     38 30 30 00 | 	byte	$be, $d6, $e8, $01, $17, $24, $2f, $20, $2c, $34, $43, $3a, $38, $30, $30, $00
13850     DD E8 DA DA 
13854     D0 D4 C9 B2 
13858     C1 DB F9 00 
1385c     14 26 3A 2D | 	byte	$dd, $e8, $da, $da, $d0, $d4, $c9, $b2, $c1, $db, $f9, $00, $14, $26, $3a, $2d
13860     1F 28 16 23 
13864     11 05 00 EE 
13868     F2 E9 F1 F6 
1386c     06 15 15 F8 | 	byte	$1f, $28, $16, $23, $11, $05, $00, $ee, $f2, $e9, $f1, $f6, $06, $15, $15, $f8
13870     F6 F4 E6 F2 
13874     FE 00 F0 E1 
13878     EC F4 F3 FC 
1387c     04 13 0A F5 | 	byte	$f6, $f4, $e6, $f2, $fe, $00, $f0, $e1, $ec, $f4, $f3, $fc, $04, $13, $0a, $f5
13880     0B 19 20 30 
13884     28 21 0E 12 
13888     0E 0B 07 EF 
1388c     E0 DA C5 BA | 	byte	$0b, $19, $20, $30, $28, $21, $0e, $12, $0e, $0b, $07, $ef, $e0, $da, $c5, $ba
13890     CD D5 DC E8 
13894     F0 03 F2 0A 
13898     1E 26 38 3E 
1389c     4A 4A 2A 22 | 	byte	$cd, $d5, $dc, $e8, $f0, $03, $f2, $0a, $1e, $26, $38, $3e, $4a, $4a, $2a, $22
138a0     1E 12 03 FE 
138a4     E1 CE 9F A8 
138a8     A7 AA CF E0 
138ac     F6 09 F9 1C | 	byte	$1e, $12, $03, $fe, $e1, $ce, $9f, $a8, $a7, $aa, $cf, $e0, $f6, $09, $f9, $1c
138b0     33 3C 3B 4F 
138b4     45 38 13 15 
138b8     0E FA F8 EF 
138bc     F9 DF C7 D7 | 	byte	$33, $3c, $3b, $4f, $45, $38, $13, $15, $0e, $fa, $f8, $ef, $f9, $df, $c7, $d7
138c0     D5 D5 DB EA 
138c4     F3 F6 F6 03 
138c8     0E 10 2B 24 
138cc     27 FD 03 10 | 	byte	$d5, $d5, $db, $ea, $f3, $f6, $f6, $03, $0e, $10, $2b, $24, $27, $fd, $03, $10
138d0     19 12 13 13 
138d4     09 E9 ED FD 
138d8     FA F6 00 F2 
138dc     F6 C8 E6 FD | 	byte	$19, $12, $13, $13, $09, $e9, $ed, $fd, $fa, $f6, $00, $f2, $f6, $c8, $e6, $fd
138e0     05 00 FF 01 
138e4     FD E1 F1 01 
138e8     F9 F9 1A 1F 
138ec     14 0B 26 34 | 	byte	$05, $00, $ff, $01, $fd, $e1, $f1, $01, $f9, $f9, $1a, $1f, $14, $0b, $26, $34
138f0     31 27 24 26 
138f4     14 C8 CF C9 
138f8     AA B4 D6 DD 
138fc     C5 D0 E7 03 | 	byte	$31, $27, $24, $26, $14, $c8, $cf, $c9, $aa, $b4, $d6, $dd, $c5, $d0, $e7, $03
13900     1C 25 35 46 
13904     41 18 2E 2C 
13908     23 28 28 15 
1390c     DB D6 E9 E5 | 	byte	$1c, $25, $35, $46, $41, $18, $2e, $2c, $23, $28, $28, $15, $db, $d6, $e9, $e5
13910     D6 D4 D3 CE 
13914     CB B6 E4 F2 
13918     FA 09 27 25 
1391c     11 26 43 47 | 	byte	$d6, $d4, $d3, $ce, $cb, $b6, $e4, $f2, $fa, $09, $27, $25, $11, $26, $43, $47
13920     43 35 1B 21 
13924     0C DF ED E2 
13928     CF CF DA BA 
1392c     BD D2 EB 06 | 	byte	$43, $35, $1b, $21, $0c, $df, $ed, $e2, $cf, $cf, $da, $ba, $bd, $d2, $eb, $06
13930     11 1F 21 33 
13934     14 FB 13 02 
13938     FF 0D 1B ED 
1393c     F8 00 0E 1D | 	byte	$11, $1f, $21, $33, $14, $fb, $13, $02, $ff, $0d, $1b, $ed, $f8, $00, $0e, $1d
13940     1E 19 15 1C 
13944     F0 D1 E1 E2 
13948     D9 E1 EB D3 
1394c     D5 E2 04 18 | 	byte	$1e, $19, $15, $1c, $f0, $d1, $e1, $e2, $d9, $e1, $eb, $d3, $d5, $e2, $04, $18
13950     18 24 27 22 
13954     02 FF 11 1A 
13958     1B 1F 12 04 
1395c     00 05 11 0A | 	byte	$18, $24, $27, $22, $02, $ff, $11, $1a, $1b, $1f, $12, $04, $00, $05, $11, $0a
13960     00 E5 DA DC 
13964     BC B8 D3 E9 
13968     DE EB DD FD 
1396c     14 2C 42 51 | 	byte	$00, $e5, $da, $dc, $bc, $b8, $d3, $e9, $de, $eb, $dd, $fd, $14, $2c, $42, $51
13970     4D 4C 4C 44 
13974     0A 00 EF DB 
13978     DA D2 A8 C1 
1397c     C8 C5 D2 F2 | 	byte	$4d, $4c, $4c, $44, $0a, $00, $ef, $db, $da, $d2, $a8, $c1, $c8, $c5, $d2, $f2
13980     00 14 25 1F 
13984     FE FD 15 2A 
13988     2E 1E 08 11 
1398c     01 12 1F 28 | 	byte	$00, $14, $25, $1f, $fe, $fd, $15, $2a, $2e, $1e, $08, $11, $01, $12, $1f, $28
13990     1F 15 04 E1 
13994     C1 BE CD E1 
13998     DA BD CA F5 
1399c     09 1E 22 36 | 	byte	$1f, $15, $04, $e1, $c1, $be, $cd, $e1, $da, $bd, $ca, $f5, $09, $1e, $22, $36
139a0     2B 23 2D 1F 
139a4     09 FD 00 0E 
139a8     FF D3 E8 02 
139ac     08 08 FD 0B | 	byte	$2b, $23, $2d, $1f, $09, $fd, $00, $0e, $ff, $d3, $e8, $02, $08, $08, $fd, $0b
139b0     11 14 11 DE 
139b4     D5 CC C4 E4 
139b8     F5 CB E4 04 
139bc     18 17 23 38 | 	byte	$11, $14, $11, $de, $d5, $cc, $c4, $e4, $f5, $cb, $e4, $04, $18, $17, $23, $38
139c0     40 45 4A 15 
139c4     05 07 FD 0E 
139c8     E2 C0 CB D2 
139cc     E0 E2 E6 F6 | 	byte	$40, $45, $4a, $15, $05, $07, $fd, $0e, $e2, $c0, $cb, $d2, $e0, $e2, $e6, $f6
139d0     01 0B 0D E1 
139d4     E2 F9 00 1F 
139d8     00 01 15 31 
139dc     47 3A 3A 2D | 	byte	$01, $0b, $0d, $e1, $e2, $f9, $00, $1f, $00, $01, $15, $31, $47, $3a, $3a, $2d
139e0     1C 12 12 CB 
139e4     C1 CE C7 CF 
139e8     96 A8 C9 F2 
139ec     18 19 23 2B | 	byte	$1c, $12, $12, $cb, $c1, $ce, $c7, $cf, $96, $a8, $c9, $f2, $18, $19, $23, $2b
139f0     43 4C 47 14 
139f4     09 03 FB 03 
139f8     E6 F2 F7 02 
139fc     11 F3 E9 F6 | 	byte	$43, $4c, $47, $14, $09, $03, $fb, $03, $e6, $f2, $f7, $02, $11, $f3, $e9, $f6
13a00     06 11 07 C0 
13a04     C8 E5 F2 E9 
13a08     E4 ED F4 0B 
13a0c     27 32 38 38 | 	byte	$06, $11, $07, $c0, $c8, $e5, $f2, $e9, $e4, $ed, $f4, $0b, $27, $32, $38, $38
13a10     3B 39 1F E8 
13a14     EE F7 F9 DC 
13a18     C7 CE E7 03 
13a1c     17 0A F4 EF | 	byte	$3b, $39, $1f, $e8, $ee, $f7, $f9, $dc, $c7, $ce, $e7, $03, $17, $0a, $f4, $ef
13a20     FF 0A 0B E5 
13a24     E9 FB FE D0 
13a28     EB 03 14 2F 
13a2c     46 34 32 30 | 	byte	$ff, $0a, $0b, $e5, $e9, $fb, $fe, $d0, $eb, $03, $14, $2f, $46, $34, $32, $30
13a30     34 35 0D C7 
13a34     BD D1 C8 B0 
13a38     C8 C9 DE F6 
13a3c     07 09 13 1C | 	byte	$34, $35, $0d, $c7, $bd, $d1, $c8, $b0, $c8, $c9, $de, $f6, $07, $09, $13, $1c
13a40     2F 41 1C 01 
13a44     0B 22 11 F1 
13a48     F9 FE 02 09 
13a4c     1F 11 FD FD | 	byte	$2f, $41, $1c, $01, $0b, $22, $11, $f1, $f9, $fe, $02, $09, $1f, $11, $fd, $fd
13a50     05 FF DA B6 
13a54     BC DB CD CA 
13a58     E8 06 19 34 
13a5c     45 37 2E 31 | 	byte	$05, $ff, $da, $b6, $bc, $db, $cd, $ca, $e8, $06, $19, $34, $45, $37, $2e, $31
13a60     35 36 14 F8 
13a64     F6 FA C5 BA 
13a68     C7 D7 EB 00 
13a6c     15 0E FF FF | 	byte	$35, $36, $14, $f8, $f6, $fa, $c5, $ba, $c7, $d7, $eb, $00, $15, $0e, $ff, $ff
13a70     19 17 E8 DF 
13a74     F1 F5 D3 F2 
13a78     0C 19 27 2F 
13a7c     31 2B 21 1A | 	byte	$19, $17, $e8, $df, $f1, $f5, $d3, $f2, $0c, $19, $27, $2f, $31, $2b, $21, $1a
13a80     25 1D DF D0 
13a84     DA E1 BC C4 
13a88     D7 E1 EB 00 
13a8c     20 25 1F 24 | 	byte	$25, $1d, $df, $d0, $da, $e1, $bc, $c4, $d7, $e1, $eb, $00, $20, $25, $1f, $24
13a90     26 13 EB F4 
13a94     00 F6 ED FA 
13a98     0D 16 20 2A 
13a9c     1F 0A 00 00 | 	byte	$26, $13, $eb, $f4, $00, $f6, $ed, $fa, $0d, $16, $20, $2a, $1f, $0a, $00, $00
13aa0     00 FD D9 D8 
13aa4     D0 B4 AF CC 
13aa8     EB 05 18 2A 
13aac     42 39 32 3C | 	byte	$00, $fd, $d9, $d8, $d0, $b4, $af, $cc, $eb, $05, $18, $2a, $42, $39, $32, $3c
13ab0     3C 1D F2 FB 
13ab4     F4 D0 D6 E6 
13ab8     F0 F8 00 FB 
13abc     0A 07 F8 F6 | 	byte	$3c, $1d, $f2, $fb, $f4, $d0, $d6, $e6, $f0, $f8, $00, $fb, $0a, $07, $f8, $f6
13ac0     FA 00 D9 ED 
13ac4     F0 E0 DA F9 
13ac8     13 24 32 3C 
13acc     4C 43 29 24 | 	byte	$fa, $00, $d9, $ed, $f0, $e0, $da, $f9, $13, $24, $32, $3c, $4c, $43, $29, $24
13ad0     0D F5 C4 CD 
13ad4     B6 BA CA E4 
13ad8     F7 FD FF 04 
13adc     19 1B 1B 25 | 	byte	$0d, $f5, $c4, $cd, $b6, $ba, $ca, $e4, $f7, $fd, $ff, $04, $19, $1b, $1b, $25
13ae0     1B 14 00 05 
13ae4     DF E5 E7 00 
13ae8     0E 11 1C 2D 
13aec     27 0E 07 00 | 	byte	$1b, $14, $00, $05, $df, $e5, $e7, $00, $0e, $11, $1c, $2d, $27, $0e, $07, $00
13af0     EB E4 D6 E0 
13af4     B3 C2 D5 F9 
13af8     0F 1C 26 26 
13afc     2A 26 1D 1E | 	byte	$eb, $e4, $d6, $e0, $b3, $c2, $d5, $f9, $0f, $1c, $26, $26, $2a, $26, $1d, $1e
13b00     22 11 FE ED 
13b04     CF D6 E2 EF 
13b08     FD 0C 17 1D 
13b0c     20 1D 0E F0 | 	byte	$22, $11, $fe, $ed, $cf, $d6, $e2, $ef, $fd, $0c, $17, $1d, $20, $1d, $0e, $f0
13b10     E3 D2 D3 BA 
13b14     CD E7 FD 14 
13b18     1D 21 23 3E 
13b1c     3E 34 25 1E | 	byte	$e3, $d2, $d3, $ba, $cd, $e7, $fd, $14, $1d, $21, $23, $3e, $3e, $34, $25, $1e
13b20     19 E7 E3 B7 
13b24     C6 BD D2 EC 
13b28     FC 00 03 1D 
13b2c     20 14 05 FE | 	byte	$19, $e7, $e3, $b7, $c6, $bd, $d2, $ec, $fc, $00, $03, $1d, $20, $14, $05, $fe
13b30     13 F1 F4 D6 
13b34     F6 FD 13 2A 
13b38     2F 2A 1F 25 
13b3c     0E FD F0 F6 | 	byte	$13, $f1, $f4, $d6, $f6, $fd, $13, $2a, $2f, $2a, $1f, $25, $0e, $fd, $f0, $f6
13b40     FA DA C4 B1 
13b44     B3 BC E7 03 
13b48     18 2F 42 43 
13b4c     3D 31 21 0E | 	byte	$fa, $da, $c4, $b1, $b3, $bc, $e7, $03, $18, $2f, $42, $43, $3d, $31, $21, $0e
13b50     07 F2 CF CA 
13b54     E0 EA FE 02 
13b58     FA FB 11 1A 
13b5c     1B 11 11 07 | 	byte	$07, $f2, $cf, $ca, $e0, $ea, $fe, $02, $fa, $fb, $11, $1a, $1b, $11, $11, $07
13b60     ED D3 C4 DC 
13b64     DD E4 06 0F 
13b68     17 25 39 3F 
13b6c     42 14 FB 07 | 	byte	$ed, $d3, $c4, $dc, $dd, $e4, $06, $0f, $17, $25, $39, $3f, $42, $14, $fb, $07
13b70     F2 C2 BA D8 
13b74     E8 F2 03 0F 
13b78     26 23 04 04 
13b7c     06 F4 00 0B | 	byte	$f2, $c2, $ba, $d8, $e8, $f2, $03, $0f, $26, $23, $04, $04, $06, $f4, $00, $0b
13b80     F9 D5 C1 C6 
13b84     DD FF 23 34 
13b88     3D 48 4A 30 
13b8c     15 09 07 E9 | 	byte	$f9, $d5, $c1, $c6, $dd, $ff, $23, $34, $3d, $48, $4a, $30, $15, $09, $07, $e9
13b90     C7 AF AF CF 
13b94     D4 DF FA 06 
13b98     00 1B 30 38 
13b9c     28 1F 26 1F | 	byte	$c7, $af, $af, $cf, $d4, $df, $fa, $06, $00, $1b, $30, $38, $28, $1f, $26, $1f
13ba0     F6 E5 EB 00 
13ba4     E7 EF F5 FB 
13ba8     0D 1C 21 1F 
13bac     FF E4 F2 DD | 	byte	$f6, $e5, $eb, $00, $e7, $ef, $f5, $fb, $0d, $1c, $21, $1f, $ff, $e4, $f2, $dd
13bb0     B4 B7 D5 F7 
13bb4     03 1F 29 2D 
13bb8     3F 31 25 2D 
13bbc     17 0A 0B E4 | 	byte	$b4, $b7, $d5, $f7, $03, $1f, $29, $2d, $3f, $31, $25, $2d, $17, $0a, $0b, $e4
13bc0     CA A5 B1 CC 
13bc4     DE FC 0F 23 
13bc8     39 42 2D 1C 
13bcc     07 0E 08 C3 | 	byte	$ca, $a5, $b1, $cc, $de, $fc, $0f, $23, $39, $42, $2d, $1c, $07, $0e, $08, $c3
13bd0     CD BB D6 EB 
13bd4     F6 17 1C 1B 
13bd8     2A 32 27 14 
13bdc     06 0F 12 D6 | 	byte	$cd, $bb, $d6, $eb, $f6, $17, $1c, $1b, $2a, $32, $27, $14, $06, $0f, $12, $d6
13be0     D8 CF E7 F3 
13be4     E4 E8 EF 07 
13be8     1C 2D 2B 14 
13bec     EB FD F2 D1 | 	byte	$d8, $cf, $e7, $f3, $e4, $e8, $ef, $07, $1c, $2d, $2b, $14, $eb, $fd, $f2, $d1
13bf0     DA EB 0A 16 
13bf4     1C 1F 1D 25 
13bf8     2E 23 14 FA 
13bfc     F0 F9 D6 BF | 	byte	$da, $eb, $0a, $16, $1c, $1f, $1d, $25, $2e, $23, $14, $fa, $f0, $f9, $d6, $bf
13c00     9E 9E CD EB 
13c04     FE 1E 29 39 
13c08     4A 51 46 3A 
13c0c     27 1E D3 C5 | 	byte	$9e, $9e, $cd, $eb, $fe, $1e, $29, $39, $4a, $51, $46, $3a, $27, $1e, $d3, $c5
13c10     A6 B7 D7 EB 
13c14     FD 00 F2 0E 
13c18     29 2D 0F 01 
13c1c     00 06 E1 E8 | 	byte	$a6, $b7, $d7, $eb, $fd, $00, $f2, $0e, $29, $2d, $0f, $01, $00, $06, $e1, $e8
13c20     E8 F1 03 FA 
13c24     04 17 1C 2A 
13c28     37 38 08 E1 
13c2c     DF DA C9 C6 | 	byte	$e8, $f1, $03, $fa, $04, $17, $1c, $2a, $37, $38, $08, $e1, $df, $da, $c9, $c6
13c30     CE E4 07 13 
13c34     1D 1D 20 2F 
13c38     2A 1E 14 03 
13c3c     EE DA CA C2 | 	byte	$ce, $e4, $07, $13, $1d, $1d, $20, $2f, $2a, $1e, $14, $03, $ee, $da, $ca, $c2
13c40     BB DA FA 0E 
13c44     10 19 23 31 
13c48     3F 40 31 1C 
13c4c     0E E7 AF AF | 	byte	$bb, $da, $fa, $0e, $10, $19, $23, $31, $3f, $40, $31, $1c, $0e, $e7, $af, $af
13c50     B3 C1 E5 FB 
13c54     02 03 0C 1A 
13c58     31 36 28 26 
13c5c     0E FE DC DA | 	byte	$b3, $c1, $e5, $fb, $02, $03, $0c, $1a, $31, $36, $28, $26, $0e, $fe, $dc, $da
13c60     E8 F9 08 F4 
13c64     00 15 10 1C 
13c68     2A 16 E1 DA 
13c6c     BF CB C1 D6 | 	byte	$e8, $f9, $08, $f4, $00, $15, $10, $1c, $2a, $16, $e1, $da, $bf, $cb, $c1, $d6
13c70     F0 00 15 26 
13c74     34 45 4E 50 
13c78     30 0C F7 F6 
13c7c     C5 C0 B3 A9 | 	byte	$f0, $00, $15, $26, $34, $45, $4e, $50, $30, $0c, $f7, $f6, $c5, $c0, $b3, $a9
13c80     C9 DE 01 15 
13c84     1E 1E 22 30 
13c88     37 3B 24 1C 
13c8c     F7 C8 B6 C1 | 	byte	$c9, $de, $01, $15, $1e, $1e, $22, $30, $37, $3b, $24, $1c, $f7, $c8, $b6, $c1
13c90     E6 F9 09 07 
13c94     F0 05 0E 1C 
13c98     22 30 1B 03 
13c9c     F2 D2 E0 DA | 	byte	$e6, $f9, $09, $07, $f0, $05, $0e, $1c, $22, $30, $1b, $03, $f2, $d2, $e0, $da
13ca0     EF 00 0D FD 
13ca4     03 18 20 1C 
13ca8     16 05 F5 E3 
13cac     E1 C1 CD DF | 	byte	$ef, $00, $0d, $fd, $03, $18, $20, $1c, $16, $05, $f5, $e3, $e1, $c1, $cd, $df
13cb0     FC 0E 1C 2A 
13cb4     34 45 43 39 
13cb8     1D 07 E4 C7 
13cbc     BF A4 A4 BA | 	byte	$fc, $0e, $1c, $2a, $34, $45, $43, $39, $1d, $07, $e4, $c7, $bf, $a4, $a4, $ba
13cc0     DD F9 0E 27 
13cc4     33 43 49 3E 
13cc8     30 28 11 FE 
13ccc     E8 B3 B1 C8 | 	byte	$dd, $f9, $0e, $27, $33, $43, $49, $3e, $30, $28, $11, $fe, $e8, $b3, $b1, $c8
13cd0     EE 03 04 00 
13cd4     F9 03 0B 0C 
13cd8     1F 23 09 F7 
13cdc     EF D1 DF F8 | 	byte	$ee, $03, $04, $00, $f9, $03, $0b, $0c, $1f, $23, $09, $f7, $ef, $d1, $df, $f8
13ce0     18 2B 13 07 
13ce4     06 18 20 11 
13ce8     FB F9 E0 DA 
13cec     D6 C8 D8 EB | 	byte	$18, $2b, $13, $07, $06, $18, $20, $11, $fb, $f9, $e0, $da, $d6, $c8, $d8, $eb
13cf0     FD 13 1C 31 
13cf4     31 3A 3C 2A 
13cf8     0B 03 E0 D6 
13cfc     D0 97 A1 CB | 	byte	$fd, $13, $1c, $31, $31, $3a, $3c, $2a, $0b, $03, $e0, $d6, $d0, $97, $a1, $cb
13d00     F0 0E 19 30 
13d04     3B 49 43 34 
13d08     2F 1D F2 DD 
13d0c     DB B3 B0 CC | 	byte	$f0, $0e, $19, $30, $3b, $49, $43, $34, $2f, $1d, $f2, $dd, $db, $b3, $b0, $cc
13d10     E9 08 FF 05 
13d14     15 1E 1E 11 
13d18     16 12 05 F3 
13d1c     F7 DD E1 03 | 	byte	$e9, $08, $ff, $05, $15, $1e, $1e, $11, $16, $12, $05, $f3, $f7, $dd, $e1, $03
13d20     20 2F 1C 15 
13d24     0E 02 07 EF 
13d28     E8 D7 CC CE 
13d2c     DD D7 E7 0A | 	byte	$20, $2f, $1c, $15, $0e, $02, $07, $ef, $e8, $d7, $cc, $ce, $dd, $d7, $e7, $0a
13d30     1F 22 20 32 
13d34     43 3A 38 1A 
13d38     00 DD D6 DD 
13d3c     CC AD BB CF | 	byte	$1f, $22, $20, $32, $43, $3a, $38, $1a, $00, $dd, $d6, $dd, $cc, $ad, $bb, $cf
13d40     EB 07 1F 2E 
13d44     40 30 31 2E 
13d48     25 00 FB F5 
13d4c     CC AE C1 E3 | 	byte	$eb, $07, $1f, $2e, $40, $30, $31, $2e, $25, $00, $fb, $f5, $cc, $ae, $c1, $e3
13d50     FE 05 04 0E 
13d54     22 1D 26 29 
13d58     1B F8 EE F6 
13d5c     E4 D6 E4 00 | 	byte	$fe, $05, $04, $0e, $22, $1d, $26, $29, $1b, $f8, $ee, $f6, $e4, $d6, $e4, $00
13d60     0E 1D 1B 18 
13d64     1E 13 EA DB 
13d68     D1 D1 E1 F4 
13d6c     E7 E4 F9 17 | 	byte	$0e, $1d, $1b, $18, $1e, $13, $ea, $db, $d1, $d1, $e1, $f4, $e7, $e4, $f9, $17
13d70     2E 3F 46 39 
13d74     2F 1E 15 03 
13d78     D2 C4 CC CC 
13d7c     AF BA D5 F2 | 	byte	$2e, $3f, $46, $39, $2f, $1e, $15, $03, $d2, $c4, $cc, $cc, $af, $ba, $d5, $f2
13d80     00 02 22 35 
13d84     44 44 3B 31 
13d88     01 F9 03 0C 
13d8c     E3 CB D3 D5 | 	byte	$00, $02, $22, $35, $44, $44, $3b, $31, $01, $f9, $03, $0c, $e3, $cb, $d3, $d5
13d90     E1 E9 FF 07 
13d94     11 0E 12 13 
13d98     02 00 0D F8 
13d9c     D3 DA F9 14 | 	byte	$e1, $e9, $ff, $07, $11, $0e, $12, $13, $02, $00, $0d, $f8, $d3, $da, $f9, $14
13da0     26 2A 20 1A 
13da4     1C 08 FE EC 
13da8     DA D0 D6 E9 
13dac     D8 E3 FB 14 | 	byte	$26, $2a, $20, $1a, $1c, $08, $fe, $ec, $da, $d0, $d6, $e9, $d8, $e3, $fb, $14
13db0     1F 2B 38 39 
13db4     37 1A 00 CF 
13db8     C3 D7 E1 D7 
13dbc     CB D2 EF 06 | 	byte	$1f, $2b, $38, $39, $37, $1a, $00, $cf, $c3, $d7, $e1, $d7, $cb, $d2, $ef, $06
13dc0     1C 31 48 42 
13dc4     2D 25 1C FC 
13dc8     E5 ED F8 EF 
13dcc     CE CE EC E6 | 	byte	$1c, $31, $48, $42, $2d, $25, $1c, $fc, $e5, $ed, $f8, $ef, $ce, $ce, $ec, $e6
13dd0     CC E4 FB 09 
13dd4     1D 2C 18 11 
13dd8     06 13 24 0F 
13ddc     02 05 0A FD | 	byte	$cc, $e4, $fb, $09, $1d, $2c, $18, $11, $06, $13, $24, $0f, $02, $05, $0a, $fd
13de0     07 0F 03 02 
13de4     F9 E4 CE D1 
13de8     D7 F2 EC D1 
13dec     DA EF 10 32 | 	byte	$07, $0f, $03, $02, $f9, $e4, $ce, $d1, $d7, $f2, $ec, $d1, $da, $ef, $10, $32
13df0     3E 44 3F 38 
13df4     38 2F 03 E5 
13df8     E7 D8 B7 B0 
13dfc     BE CF E9 00 | 	byte	$3e, $44, $3f, $38, $38, $2f, $03, $e5, $e7, $d8, $b7, $b0, $be, $cf, $e9, $00
13e00     0F 22 2E 38 
13e04     42 11 F6 E6 
13e08     EA 00 12 FE 
13e0c     E7 EB F2 EB | 	byte	$0f, $22, $2e, $38, $42, $11, $f6, $e6, $ea, $00, $12, $fe, $e7, $eb, $f2, $eb
13e10     00 0E 19 20 
13e14     1A ED F4 EF 
13e18     FC 10 12 F6 
13e1c     F0 F9 07 07 | 	byte	$00, $0e, $19, $20, $1a, $ed, $f4, $ef, $fc, $10, $12, $f6, $f0, $f9, $07, $07
13e20     06 F6 F6 F4 
13e24     EE E3 F2 E8 
13e28     F6 0E 0E 06 
13e2c     09 1D 30 24 | 	byte	$06, $f6, $f6, $f4, $ee, $e3, $f2, $e8, $f6, $0e, $0e, $06, $09, $1d, $30, $24
13e30     1A 16 18 16 
13e34     12 FD E9 CF 
13e38     D2 C5 B7 C2 
13e3c     C2 DE FD 18 | 	byte	$1a, $16, $18, $16, $12, $fd, $e9, $cf, $d2, $c5, $b7, $c2, $c2, $de, $fd, $18
13e40     30 3B 46 4B 
13e44     3A 2B 18 08 
13e48     0A 14 E9 DD 
13e4c     C3 C7 C8 E1 | 	byte	$30, $3b, $46, $4b, $3a, $2b, $18, $08, $0a, $14, $e9, $dd, $c3, $c7, $c8, $e1
13e50     F0 F6 03 0C 
13e54     EB F6 F2 F9 
13e58     0C 25 0A 1C 
13e5c     11 14 22 2F | 	byte	$f0, $f6, $03, $0c, $eb, $f6, $f2, $f9, $0c, $25, $0a, $1c, $11, $14, $22, $2f
13e60     25 12 07 E8 
13e64     DD D6 C8 CF 
13e68     EA 03 EA 00 
13e6c     00 13 17 12 | 	byte	$25, $12, $07, $e8, $dd, $d6, $c8, $cf, $ea, $03, $ea, $00, $00, $13, $17, $12
13e70     18 15 14 FD 
13e74     0F 07 F6 E9 
13e78     E4 EE E6 F6 
13e7c     F5 0A 1C 14 | 	byte	$18, $15, $14, $fd, $0f, $07, $f6, $e9, $e4, $ee, $e6, $f6, $f5, $0a, $1c, $14
13e80     0E 15 1F 0B 
13e84     1C 09 FE F8 
13e88     FD E3 DD E0 
13e8c     C7 C8 DB F6 | 	byte	$0e, $15, $1f, $0b, $1c, $09, $fe, $f8, $fd, $e3, $dd, $e0, $c7, $c8, $db, $f6
13e90     02 11 1C 17 
13e94     29 18 23 2A 
13e98     39 1C 04 FE 
13e9c     EA F1 05 09 | 	byte	$02, $11, $1c, $17, $29, $18, $23, $2a, $39, $1c, $04, $fe, $ea, $f1, $05, $09
13ea0     FC EC C4 B8 
13ea4     C9 C8 DE F4 
13ea8     07 F9 09 1A 
13eac     26 3B 45 40 | 	byte	$fc, $ec, $c4, $b8, $c9, $c8, $de, $f4, $07, $f9, $09, $1a, $26, $3b, $45, $40
13eb0     37 2A 0F 1E 
13eb4     0F DE CC C1 
13eb8     C8 BE DA E2 
13ebc     EB FB F1 FB | 	byte	$37, $2a, $0f, $1e, $0f, $de, $cc, $c1, $c8, $be, $da, $e2, $eb, $fb, $f1, $fb
13ec0     0D 19 1C 2A 
13ec4     1F 18 10 18 
13ec8     25 0F 08 EF 
13ecc     E2 EB F8 F1 | 	byte	$0d, $19, $1c, $2a, $1f, $18, $10, $18, $25, $0f, $08, $ef, $e2, $eb, $f8, $f1
13ed0     EA E1 EF 00 
13ed4     F6 07 15 22 
13ed8     0A EB FC F6 
13edc     F6 12 11 07 | 	byte	$ea, $e1, $ef, $00, $f6, $07, $15, $22, $0a, $eb, $fc, $f6, $f6, $12, $11, $07
13ee0     F1 DC E1 FF 
13ee4     F9 08 0C 21 
13ee8     1A 0B 02 03 
13eec     0F 1F 11 15 | 	byte	$f1, $dc, $e1, $ff, $f9, $08, $0c, $21, $1a, $0b, $02, $03, $0f, $1f, $11, $15
13ef0     00 F7 F9 ED 
13ef4     D3 C5 CF DA 
13ef8     D9 E7 F4 F9 
13efc     0B 20 29 34 | 	byte	$00, $f7, $f9, $ed, $d3, $c5, $cf, $da, $d9, $e7, $f4, $f9, $0b, $20, $29, $34
13f00     26 32 42 38 
13f04     1E 03 F6 05 
13f08     EF E1 C6 CA 
13f0c     CB BD CC DD | 	byte	$26, $32, $42, $38, $1e, $03, $f6, $05, $ef, $e1, $c6, $ca, $cb, $bd, $cc, $dd
13f10     D3 F2 11 15 
13f14     1C 2A 38 46 
13f18     25 2D 26 12 
13f1c     19 1E 17 D6 | 	byte	$d3, $f2, $11, $15, $1c, $2a, $38, $46, $25, $2d, $26, $12, $19, $1e, $17, $d6
13f20     C0 BB D4 D6 
13f24     E4 ED 02 0A 
13f28     DD EF FF 03 
13f2c     1C 26 31 0F | 	byte	$c0, $bb, $d4, $d6, $e4, $ed, $02, $0a, $dd, $ef, $ff, $03, $1c, $26, $31, $0f
13f30     0D 0F 18 0D 
13f34     F6 FF FD F9 
13f38     ED FE EF DD 
13f3c     F4 01 0A F2 | 	byte	$0d, $0f, $18, $0d, $f6, $ff, $fd, $f9, $ed, $fe, $ef, $dd, $f4, $01, $0a, $f2
13f40     0C 18 0A FE 
13f44     03 00 07 04 
13f48     F5 E7 E9 DD 
13f4c     E4 F6 00 F9 | 	byte	$0c, $18, $0a, $fe, $03, $00, $07, $04, $f5, $e7, $e9, $dd, $e4, $f6, $00, $f9
13f50     11 1E 28 2A 
13f54     2D 1C 22 12 
13f58     06 07 F9 EF 
13f5c     E8 DD B3 B4 | 	byte	$11, $1e, $28, $2a, $2d, $1c, $22, $12, $06, $07, $f9, $ef, $e8, $dd, $b3, $b4
13f60     C8 C8 E3 F9 
13f64     16 1B 2B 1C 
13f68     1A 21 28 32 
13f6c     39 3E 14 08 | 	byte	$c8, $c8, $e3, $f9, $16, $1b, $2b, $1c, $1a, $21, $28, $32, $39, $3e, $14, $08
13f70     F7 E4 EF DA 
13f74     DD DA E0 B9 
13f78     C1 DD DF EB 
13f7c     00 12 00 23 | 	byte	$f7, $e4, $ef, $da, $dd, $da, $e0, $b9, $c1, $dd, $df, $eb, $00, $12, $00, $23
13f80     38 31 45 33 
13f84     32 2C 31 0A 
13f88     F8 EA CB B7 
13f8c     C6 CC D1 F0 | 	byte	$38, $31, $45, $33, $32, $2c, $31, $0a, $f8, $ea, $cb, $b7, $c6, $cc, $d1, $f0
13f90     F4 F1 FA 01 
13f94     13 22 34 15 
13f98     16 15 10 0A 
13f9c     09 E9 D6 E2 | 	byte	$f4, $f1, $fa, $01, $13, $22, $34, $15, $16, $15, $10, $0a, $09, $e9, $d6, $e2
13fa0     E4 F8 11 1A 
13fa4     21 0F 0E F3 
13fa8     FD 00 09 09 
13fac     00 D9 E6 F5 | 	byte	$e4, $f8, $11, $1a, $21, $0f, $0e, $f3, $fd, $00, $09, $09, $00, $d9, $e6, $f5
13fb0     EF F6 FB F2 
13fb4     F4 03 0E F6 
13fb8     02 02 07 0E 
13fbc     23 0C 1E 1F | 	byte	$ef, $f6, $fb, $f2, $f4, $03, $0e, $f6, $02, $02, $07, $0e, $23, $0c, $1e, $1f
13fc0     10 16 1C 15 
13fc4     12 15 F6 B8 
13fc8     B8 A8 B6 C8 
13fcc     D8 D2 F9 0A | 	byte	$10, $16, $1c, $15, $12, $15, $f6, $b8, $b8, $a8, $b6, $c8, $d8, $d2, $f9, $0a
13fd0     1F 33 43 40 
13fd4     3D 4A 4A 31 
13fd8     2D 0B F9 DF 
13fdc     BB B0 B6 C1 | 	byte	$1f, $33, $43, $40, $3d, $4a, $4a, $31, $2d, $0b, $f9, $df, $bb, $b0, $b6, $c1
13fe0     D3 D6 E1 F2 
13fe4     04 17 14 0D 
13fe8     18 0C 1F 34 
13fec     18 1A 14 0E | 	byte	$d3, $d6, $e1, $f2, $04, $17, $14, $0d, $18, $0c, $1f, $34, $18, $1a, $14, $0e
13ff0     10 09 16 FF 
13ff4     FA F2 DB D6 
13ff8     E1 DD F1 F1 
13ffc     C8 DE EC 03 | 	byte	$10, $09, $16, $ff, $fa, $f2, $db, $d6, $e1, $dd, $f1, $f1, $c8, $de, $ec, $03
14000     1F 2E 3B 31 
14004     26 2D 0A 00 
14008     E5 CF DA E2 
1400c     DE F9 03 16 | 	byte	$1f, $2e, $3b, $31, $26, $2d, $0a, $00, $e5, $cf, $da, $e2, $de, $f9, $03, $16
14010     13 0E 23 1F 
14014     21 2E 06 F4 
14018     EB D3 E1 C8 
1401c     C2 C0 CA E8 | 	byte	$13, $0e, $23, $1f, $21, $2e, $06, $f4, $eb, $d3, $e1, $c8, $c2, $c0, $ca, $e8
14020     07 22 34 30 
14024     35 3C 1F 2B 
14028     21 15 16 EB 
1402c     E6 ED E9 F7 | 	byte	$07, $22, $34, $30, $35, $3c, $1f, $2b, $21, $15, $16, $eb, $e6, $ed, $e9, $f7
14030     EE DC D5 CF 
14034     DB ED E4 F9 
14038     ED FD 15 00 
1403c     18 18 28 33 | 	byte	$ee, $dc, $d5, $cf, $db, $ed, $e4, $f9, $ed, $fd, $15, $00, $18, $18, $28, $33
14040     3F 45 55 3C 
14044     25 0A CF C5 
14048     A3 B1 B7 9E 
1404c     B6 C0 E4 08 | 	byte	$3f, $45, $55, $3c, $25, $0a, $cf, $c5, $a3, $b1, $b7, $9e, $b6, $c0, $e4, $08
14050     26 2C 43 3E 
14054     40 43 2F 3A 
14058     0F 03 E3 CB 
1405c     D6 CC E5 F2 | 	byte	$26, $2c, $43, $3e, $40, $43, $2f, $3a, $0f, $03, $e3, $cb, $d6, $cc, $e5, $f2
14060     FD FA 13 0E 
14064     17 15 EE F2 
14068     E2 F2 E2 ED 
1406c     FE 03 0E 0D | 	byte	$fd, $fa, $13, $0e, $17, $15, $ee, $f2, $e2, $f2, $e2, $ed, $fe, $03, $0e, $0d
14070     1B 1D 1F 0D 
14074     05 00 F8 0A 
14078     FD 05 EF F0 
1407c     E1 F5 0A 15 | 	byte	$1b, $1d, $1f, $0d, $05, $00, $f8, $0a, $fd, $05, $ef, $f0, $e1, $f5, $0a, $15
14080     14 14 1E 0F 
14084     F6 EA D6 D8 
14088     C0 CC BE E7 
1408c     F7 14 25 39 | 	byte	$14, $14, $1e, $0f, $f6, $ea, $d6, $d8, $c0, $cc, $be, $e7, $f7, $14, $25, $39
14090     4A 4F 54 4E 
14094     3D 20 FF F7 
14098     E4 C5 9E 9E 
1409c     A1 AD C2 E4 | 	byte	$4a, $4f, $54, $4e, $3d, $20, $ff, $f7, $e4, $c5, $9e, $9e, $a1, $ad, $c2, $e4
140a0     03 1F 2E 38 
140a4     35 2F 2D 31 
140a8     1F 03 FD 03 
140ac     07 19 0D 0D | 	byte	$03, $1f, $2e, $38, $35, $2f, $2d, $31, $1f, $03, $fd, $03, $07, $19, $0d, $0d
140b0     02 FF E8 E9 
140b4     DD BE BA D4 
140b8     D6 C7 E5 F9 
140bc     08 1C 2E 3F | 	byte	$02, $ff, $e8, $e9, $dd, $be, $ba, $d4, $d6, $c7, $e5, $f9, $08, $1c, $2e, $3f
140c0     4D 5A 55 3E 
140c4     1C E7 E3 E2 
140c8     CA B0 CF C8 
140cc     D3 F4 0D 11 | 	byte	$4d, $5a, $55, $3e, $1c, $e7, $e3, $e2, $ca, $b0, $cf, $c8, $d3, $f4, $0d, $11
140d0     15 2C 22 25 
140d4     1A FA FA 01 
140d8     E1 CF DB DD 
140dc     F6 FC 03 12 | 	byte	$15, $2c, $22, $25, $1a, $fa, $fa, $01, $e1, $cf, $db, $dd, $f6, $fc, $03, $12
140e0     25 34 34 3F 
140e4     34 06 03 F6 
140e8     D5 D6 CF C5 
140ec     E4 EB F0 F9 | 	byte	$25, $34, $34, $3f, $34, $06, $03, $f6, $d5, $d6, $cf, $c5, $e4, $eb, $f0, $f9
140f0     0A 17 07 07 
140f4     01 E6 00 07 
140f8     FB 08 0E 0F 
140fc     28 2F 33 3B | 	byte	$0a, $17, $07, $07, $01, $e6, $00, $07, $fb, $08, $0e, $0f, $28, $2f, $33, $3b
14100     3E 2B 0E 00 
14104     D9 9E B2 9D 
14108     96 A5 BF DB 
1410c     FF 19 38 4D | 	byte	$3e, $2b, $0e, $00, $d9, $9e, $b2, $9d, $96, $a5, $bf, $db, $ff, $19, $38, $4d
14110     5D 6D 67 51 
14114     2D 07 07 D8 
14118     D4 D3 D5 D9 
1411c     D3 D3 E1 DC | 	byte	$5d, $6d, $67, $51, $2d, $07, $07, $d8, $d4, $d3, $d5, $d9, $d3, $d3, $e1, $dc
14120     EF 09 11 15 
14124     00 FC 05 EA 
14128     00 04 06 1A 
1412c     28 1F 22 25 | 	byte	$ef, $09, $11, $15, $00, $fc, $05, $ea, $00, $04, $06, $1a, $28, $1f, $22, $25
14130     2A 23 0E 00 
14134     DD E0 CD B6 
14138     D9 D7 D2 EB 
1413c     0A 14 1C 2A | 	byte	$2a, $23, $0e, $00, $dd, $e0, $cd, $b6, $d9, $d7, $d2, $eb, $0a, $14, $1c, $2a
14140     38 34 1D 0B 
14144     EB F1 D9 CC 
14148     E4 DD EE 00 
1414c     17 25 3A 4A | 	byte	$38, $34, $1d, $0b, $eb, $f1, $d9, $cc, $e4, $dd, $ee, $00, $17, $25, $3a, $4a
14150     4D 37 2B 09 
14154     CE C4 AE A6 
14158     B9 B9 D9 F4 
1415c     F9 00 11 28 | 	byte	$4d, $37, $2b, $09, $ce, $c4, $ae, $a6, $b9, $b9, $d9, $f4, $f9, $00, $11, $28
14160     3C 46 4F 2B 
14164     20 06 F5 F2 
14168     0A FB 0A 08 
1416c     F2 EA E4 E8 | 	byte	$3c, $46, $4f, $2b, $20, $06, $f5, $f2, $0a, $fb, $0a, $08, $f2, $ea, $e4, $e8
14170     F7 F4 EC BE 
14174     CE B8 D1 E2 
14178     03 0B 29 3D 
1417c     4C 54 51 53 | 	byte	$f7, $f4, $ec, $be, $ce, $b8, $d1, $e2, $03, $0b, $29, $3d, $4c, $54, $51, $53
14180     45 23 11 DC 
14184     E7 C1 C1 A7 
14188     A9 A3 BD E1 
1418c     01 11 24 3D | 	byte	$45, $23, $11, $dc, $e7, $c1, $c1, $a7, $a9, $a3, $bd, $e1, $01, $11, $24, $3d
14190     49 3D 3B 0A 
14194     01 EC E8 EC 
14198     EE F9 0A 10 
1419c     04 06 15 26 | 	byte	$49, $3d, $3b, $0a, $01, $ec, $e8, $ec, $ee, $f9, $0a, $10, $04, $06, $15, $26
141a0     27 17 00 CD 
141a4     B6 BD CC DE 
141a8     E9 F6 08 09 
141ac     10 12 26 3B | 	byte	$27, $17, $00, $cd, $b6, $bd, $cc, $de, $e9, $f6, $08, $09, $10, $12, $26, $3b
141b0     41 2C 0F EA 
141b4     D6 DC E1 ED 
141b8     00 12 28 23 
141bc     1E 0D 0E 03 | 	byte	$41, $2c, $0f, $ea, $d6, $dc, $e1, $ed, $00, $12, $28, $23, $1e, $0d, $0e, $03
141c0     F9 F2 D3 B4 
141c4     BB CE CC CD 
141c8     E7 F9 19 31 
141cc     49 50 58 5E | 	byte	$f9, $f2, $d3, $b4, $bb, $ce, $cc, $cd, $e7, $f9, $19, $31, $49, $50, $58, $5e
141d0     4E 30 0E EB 
141d4     E5 D3 BF A8 
141d8     B6 BF DD EB 
141dc     F4 F6 06 1D | 	byte	$4e, $30, $0e, $eb, $e5, $d3, $bf, $a8, $b6, $bf, $dd, $eb, $f4, $f6, $06, $1d
141e0     25 1F 03 EE 
141e4     00 0B 0B 12 
141e8     2F 27 1E 18 
141ec     0F 15 26 30 | 	byte	$25, $1f, $03, $ee, $00, $0b, $0b, $12, $2f, $27, $1e, $18, $0f, $15, $26, $30
141f0     19 E8 A2 8C 
141f4     99 AF BB DB 
141f8     FA 09 26 34 
141fc     3B 48 4A 3F | 	byte	$19, $e8, $a2, $8c, $99, $af, $bb, $db, $fa, $09, $26, $34, $3b, $48, $4a, $3f
14200     34 1B E1 E1 
14204     EF EA C4 DB 
14208     EF FE 16 15 
1420c     0C 0B 0D 10 | 	byte	$34, $1b, $e1, $e1, $ef, $ea, $c4, $db, $ef, $fe, $16, $15, $0c, $0b, $0d, $10
14210     08 00 CC D3 
14214     CC D6 C8 E5 
14218     00 17 35 32 
1421c     34 34 39 3F | 	byte	$08, $00, $cc, $d3, $cc, $d6, $c8, $e5, $00, $17, $35, $32, $34, $34, $39, $3f
14220     21 05 DE ED 
14224     F3 E2 CE E1 
14228     E4 D5 EC F9 
1422c     FE 08 1A 29 | 	byte	$21, $05, $de, $ed, $f3, $e2, $ce, $e1, $e4, $d5, $ec, $f9, $fe, $08, $1a, $29
14230     0A E1 CD D8 
14234     EB E7 05 2C 
14238     31 39 42 42 
1423c     36 38 31 28 | 	byte	$0a, $e1, $cd, $d8, $eb, $e7, $05, $2c, $31, $39, $42, $42, $36, $38, $31, $28
14240     F6 A1 A0 A5 
14244     AC 98 B9 E1 
14248     E4 00 1C 34 
1424c     3B 46 50 4B | 	byte	$f6, $a1, $a0, $a5, $ac, $98, $b9, $e1, $e4, $00, $1c, $34, $3b, $46, $50, $4b
14250     3D 05 00 FA 
14254     EE D0 DE F3 
14258     03 1D 18 F6 
1425c     F6 F6 F5 EE | 	byte	$3d, $05, $00, $fa, $ee, $d0, $de, $f3, $03, $1d, $18, $f6, $f6, $f6, $f5, $ee
14260     E7 C8 D6 DB 
14264     D6 E4 07 14 
14268     18 30 38 3B 
1426c     3E 44 4A 2E | 	byte	$e7, $c8, $d6, $db, $d6, $e4, $07, $14, $18, $30, $38, $3b, $3e, $44, $4a, $2e
14270     F2 C7 CD D3 
14274     C7 C7 D3 EF 
14278     EE FB 0E 1C 
1427c     1A 20 23 0E | 	byte	$f2, $c7, $cd, $d3, $c7, $c7, $d3, $ef, $ee, $fb, $0e, $1c, $1a, $20, $23, $0e
14280     EA CD DF E5 
14284     E1 EB 10 1F 
14288     23 32 3D 37 
1428c     35 38 36 1A | 	byte	$ea, $cd, $df, $e5, $e1, $eb, $10, $1f, $23, $32, $3d, $37, $35, $38, $36, $1a
14290     DA A7 B6 A1 
14294     98 B4 DD F0 
14298     07 1B 1F 25 
1429c     30 32 31 1F | 	byte	$da, $a7, $b6, $a1, $98, $b4, $dd, $f0, $07, $1b, $1f, $25, $30, $32, $31, $1f
142a0     12 00 08 F2 
142a4     ED 03 05 03 
142a8     1B 1E 0D F6 
142ac     FE 00 FB C8 | 	byte	$12, $00, $08, $f2, $ed, $03, $05, $03, $1b, $1e, $0d, $f6, $fe, $00, $fb, $c8
142b0     BD BB C2 B9 
142b4     C8 F4 1B 20 
142b8     34 42 55 46 
142bc     4C 51 3F FD | 	byte	$bd, $bb, $c2, $b9, $c8, $f4, $1b, $20, $34, $42, $55, $46, $4c, $51, $3f, $fd
142c0     E7 D5 C9 CF 
142c4     C2 C4 D9 DE 
142c8     E8 F6 09 16 
142cc     26 27 22 F9 | 	byte	$e7, $d5, $c9, $cf, $c2, $c4, $d9, $de, $e8, $f6, $09, $16, $26, $27, $22, $f9
142d0     DE E4 DF DF 
142d4     E7 0D 23 2F 
142d8     45 39 2F 2A 
142dc     29 1C 0E E2 | 	byte	$de, $e4, $df, $df, $e7, $0d, $23, $2f, $45, $39, $2f, $2a, $29, $1c, $0e, $e2
142e0     BB B8 A8 A6 
142e4     C0 D3 EE 0A 
142e8     1F 1C 28 2E 
142ec     35 39 1C 00 | 	byte	$bb, $b8, $a8, $a6, $c0, $d3, $ee, $0a, $1f, $1c, $28, $2e, $35, $39, $1c, $00
142f0     ED F1 EA E2 
142f4     F6 12 17 19 
142f8     27 27 08 FD 
142fc     00 00 CC CD | 	byte	$ed, $f1, $ea, $e2, $f6, $12, $17, $19, $27, $27, $08, $fd, $00, $00, $cc, $cd
14300     B5 BC CC CA 
14304     D8 FF 14 20 
14308     2F 42 4B 50 
1430c     4D 50 17 FE | 	byte	$b5, $bc, $cc, $ca, $d8, $ff, $14, $20, $2f, $42, $4b, $50, $4d, $50, $17, $fe
14310     D9 D3 D8 C0 
14314     D0 E5 E4 EF 
14318     FD FB 01 0A 
1431c     0F 15 F3 F8 | 	byte	$d9, $d3, $d8, $c0, $d0, $e5, $e4, $ef, $fd, $fb, $01, $0a, $0f, $15, $f3, $f8
14320     D9 E4 EE E8 
14324     FD 1F 32 43 
14328     40 42 3A 2C 
1432c     2A 1C DC D3 | 	byte	$d9, $e4, $ee, $e8, $fd, $1f, $32, $43, $40, $42, $3a, $2c, $2a, $1c, $dc, $d3
14330     9D A1 A1 A6 
14334     CE F3 01 18 
14338     26 28 27 2A 
1433c     38 1C 02 0E | 	byte	$9d, $a1, $a1, $a6, $ce, $f3, $01, $18, $26, $28, $27, $2a, $38, $1c, $02, $0e
14340     E1 FD 00 EE 
14344     FF 18 15 19 
14348     18 19 11 F9 
1434c     F9 D9 BD CF | 	byte	$e1, $fd, $00, $ee, $ff, $18, $15, $19, $18, $19, $11, $f9, $f9, $d9, $bd, $cf
14350     AD CF CE DA 
14354     FC 17 26 3B 
14358     38 3A 3A 36 
1435c     3B 18 0C 01 | 	byte	$ad, $cf, $ce, $da, $fc, $17, $26, $3b, $38, $3a, $3a, $36, $3b, $18, $0c, $01
14360     D3 E5 D5 C2 
14364     DB F4 ED EF 
14368     FA 0B 0B 0E 
1436c     12 FD EF E7 | 	byte	$d3, $e5, $d5, $c2, $db, $f4, $ed, $ef, $fa, $0b, $0b, $0e, $12, $fd, $ef, $e7
14370     CD EB E4 F9 
14374     11 30 3B 3E 
14378     3A 47 30 28 
1437c     0B F2 DD C8 | 	byte	$cd, $eb, $e4, $f9, $11, $30, $3b, $3e, $3a, $47, $30, $28, $0b, $f2, $dd, $c8
14380     AC BD B2 B1 
14384     D3 FC 07 0E 
14388     26 37 28 2A 
1438c     0B 02 07 F0 | 	byte	$ac, $bd, $b2, $b1, $d3, $fc, $07, $0e, $26, $37, $28, $2a, $0b, $02, $07, $f0
14390     ED 05 F9 07 
14394     1F 2E 2D 2A 
14398     0E 08 FF E8 
1439c     C2 CE C7 B9 | 	byte	$ed, $05, $f9, $07, $1f, $2e, $2d, $2a, $0e, $08, $ff, $e8, $c2, $ce, $c7, $b9
143a0     C0 D9 CA EB 
143a4     0B 29 2A 34 
143a8     43 46 3E 32 
143ac     23 12 00 E9 | 	byte	$c0, $d9, $ca, $eb, $0b, $29, $2a, $34, $43, $46, $3e, $32, $23, $12, $00, $e9
143b0     DD EA D6 D3 
143b4     E8 FA EC E7 
143b8     FA FB 03 EE 
143bc     F2 FB FC EA | 	byte	$dd, $ea, $d6, $d3, $e8, $fa, $ec, $e7, $fa, $fb, $03, $ee, $f2, $fb, $fc, $ea
143c0     F2 0D FA 00 
143c4     1A 32 38 37 
143c8     41 38 35 FA 
143cc     E8 E5 D5 B4 | 	byte	$f2, $0d, $fa, $00, $1a, $32, $38, $37, $41, $38, $35, $fa, $e8, $e5, $d5, $b4
143d0     B2 C5 C4 D2 
143d4     ED 0E 2A 1F 
143d8     1B 23 26 00 
143dc     03 07 05 EF | 	byte	$b2, $c5, $c4, $d2, $ed, $0e, $2a, $1f, $1b, $23, $26, $00, $03, $07, $05, $ef
143e0     F9 FB 00 10 
143e4     1F 2C 35 1F 
143e8     14 0E F2 D7 
143ec     DA C3 BD B4 | 	byte	$f9, $fb, $00, $10, $1f, $2c, $35, $1f, $14, $0e, $f2, $d7, $da, $c3, $bd, $b4
143f0     CE E2 EB F7 
143f4     13 28 2A 29 
143f8     31 34 17 15 
143fc     19 0C 0E FC | 	byte	$ce, $e2, $eb, $f7, $13, $28, $2a, $29, $31, $34, $17, $15, $19, $0c, $0e, $fc
14400     0A 05 E6 E1 
14404     EB F2 F7 EF 
14408     EC EE DD D4 
1440c     E7 EC E9 E5 | 	byte	$0a, $05, $e6, $e1, $eb, $f2, $f7, $ef, $ec, $ee, $dd, $d4, $e7, $ec, $e9, $e5
14410     08 12 19 22 
14414     31 45 58 35 
14418     29 1E 10 00 
1441c     EC D2 C8 BC | 	byte	$08, $12, $19, $22, $31, $45, $58, $35, $29, $1e, $10, $00, $ec, $d2, $c8, $bc
14420     B9 B7 D3 DC 
14424     E4 04 28 23 
14428     28 10 1A 28 
1442c     11 00 F4 00 | 	byte	$b9, $b7, $d3, $dc, $e4, $04, $28, $23, $28, $10, $1a, $28, $11, $00, $f4, $00
14430     06 00 0B 1C 
14434     1E 16 25 0C 
14438     F9 DA DE EA 
1443c     CA D2 C8 DA | 	byte	$06, $00, $0b, $1c, $1e, $16, $25, $0c, $f9, $da, $de, $ea, $ca, $d2, $c8, $da
14440     F3 F9 00 0E 
14444     16 1E 31 2F 
14448     15 11 01 10 
1444c     F6 F9 F5 03 | 	byte	$f3, $f9, $00, $0e, $16, $1e, $31, $2f, $15, $11, $01, $10, $f6, $f9, $f5, $03
14450     14 0A 02 07 
14454     FE 0B 0A F6 
14458     C8 D5 DA E9 
1445c     D7 DF EB EB | 	byte	$14, $0a, $02, $07, $fe, $0b, $0a, $f6, $c8, $d5, $da, $e9, $d7, $df, $eb, $eb
14460     FD 0A 1B 29 
14464     2B 3B 40 3E 
14468     17 1A 22 26 
1446c     EF C9 C9 D3 | 	byte	$fd, $0a, $1b, $29, $2b, $3b, $40, $3e, $17, $1a, $22, $26, $ef, $c9, $c9, $d3
14470     D6 C8 D3 E8 
14474     DC EB FD FD 
14478     F9 09 18 23 
1447c     1D 07 18 23 | 	byte	$d6, $c8, $d3, $e8, $dc, $eb, $fd, $fd, $f9, $09, $18, $23, $1d, $07, $18, $23
14480     31 1D 18 24 
14484     1F 14 0D ED 
14488     E4 C6 D1 D3 
1448c     C1 AB CA E3 | 	byte	$31, $1d, $18, $24, $1f, $14, $0d, $ed, $e4, $c6, $d1, $d3, $c1, $ab, $ca, $e3
14490     00 06 14 2C 
14494     34 35 32 1C 
14498     1C 18 10 FF 
1449c     FD ED EE F6 | 	byte	$00, $06, $14, $2c, $34, $35, $32, $1c, $1c, $18, $10, $ff, $fd, $ed, $ee, $f6
144a0     06 F1 EF 04 
144a4     02 00 F9 F2 
144a8     EA E9 F6 FC 
144ac     E7 E1 F7 05 | 	byte	$06, $f1, $ef, $04, $02, $00, $f9, $f2, $ea, $e9, $f6, $fc, $e7, $e1, $f7, $05
144b0     07 0C 1B 24 
144b4     1D 12 F9 11 
144b8     12 18 14 15 
144bc     F6 EA ED FB | 	byte	$07, $0c, $1b, $24, $1d, $12, $f9, $11, $12, $18, $14, $15, $f6, $ea, $ed, $fb
144c0     01 F0 E1 F2 
144c4     E9 DB D4 F8 
144c8     EF F3 FB 00 
144cc     F2 05 21 31 | 	byte	$01, $f0, $e1, $f2, $e9, $db, $d4, $f8, $ef, $f3, $fb, $00, $f2, $05, $21, $31
144d0     2D 31 34 3B 
144d4     31 19 FF FC 
144d8     F0 DF D5 D5 
144dc     BE B4 B8 D3 | 	byte	$2d, $31, $34, $3b, $31, $19, $ff, $fc, $f0, $df, $d5, $d5, $be, $b4, $b8, $d3
144e0     DA EF 02 23 
144e4     28 11 27 3D 
144e8     37 2A 32 21 
144ec     F8 03 07 06 | 	byte	$da, $ef, $02, $23, $28, $11, $27, $3d, $37, $2a, $32, $21, $f8, $03, $07, $06
144f0     F9 F2 E6 E6 
144f4     E4 C6 D4 E7 
144f8     EA E1 F6 FD 
144fc     FB 0A 11 25 | 	byte	$f9, $f2, $e6, $e6, $e4, $c6, $d4, $e7, $ea, $e1, $f6, $fd, $fb, $0a, $11, $25
14500     28 29 27 30 
14504     0E FD 00 07 
14508     F6 F2 00 E4 
1450c     D3 E6 F6 07 | 	byte	$28, $29, $27, $30, $0e, $fd, $00, $07, $f6, $f2, $00, $e4, $d3, $e6, $f6, $07
14510     07 13 0A 02 
14514     E4 EB F5 01 
14518     00 F6 00 F9 
1451c     F6 F8 07 0F | 	byte	$07, $13, $0a, $02, $e4, $eb, $f5, $01, $00, $f6, $00, $f9, $f6, $f8, $07, $0f
14520     0D 1A 1E 27 
14524     11 15 0D 15 
14528     00 00 00 00 
1452c     FE FF FF FF | 	byte	$0d, $1a, $1e, $27, $11, $15, $0d, $15, $00, $00, $00, $00, $fe, $ff, $ff, $ff
14530     FF FE FE FE 
14534     FE FE FE FE 
14538     FF FE FE FE 
1453c     FE FE FE FF | 	byte	$ff, $fe, $fe, $fe, $fe, $fe, $fe, $fe, $ff, $fe, $fe, $fe, $fe, $fe, $fe, $ff
14540     FE FE FE FE 
14544     FE FE FE FE | 	byte	$fe[8]
14548     00 00 00 00 
1454c     FD FF 00 FF 
14550     01 03 FB F1 
14554     F6 EE F4 05 | 	byte	$00, $00, $00, $00, $fd, $ff, $00, $ff, $01, $03, $fb, $f1, $f6, $ee, $f4, $05
14558     0A 16 25 17 
1455c     0A 01 F1 EF 
14560     00 00 F7 04 
14564     ED E6 EE F7 | 	byte	$0a, $16, $25, $17, $0a, $01, $f1, $ef, $00, $00, $f7, $04, $ed, $e6, $ee, $f7
14568     06 18 FE F6 
1456c     E0 D1 CC E6 
14570     02 2E 35 31 
14574     1F F5 D1 CD | 	byte	$06, $18, $fe, $f6, $e0, $d1, $cc, $e6, $02, $2e, $35, $31, $1f, $f5, $d1, $cd
14578     CB E0 0C 2B 
1457c     2E 34 17 F1 
14580     BB A8 96 B8 
14584     F2 1A 3C 55 | 	byte	$cb, $e0, $0c, $2b, $2e, $34, $17, $f1, $bb, $a8, $96, $b8, $f2, $1a, $3c, $55
14588     4B 1F 00 F1 
1458c     E1 F3 02 03 
14590     11 10 F9 EA 
14594     F8 EA F7 07 | 	byte	$4b, $1f, $00, $f1, $e1, $f3, $02, $03, $11, $10, $f9, $ea, $f8, $ea, $f7, $07
14598     05 14 24 16 
1459c     19 17 05 02 
145a0     08 E5 D2 DD 
145a4     C3 DF 09 26 | 	byte	$05, $14, $24, $16, $19, $17, $05, $02, $08, $e5, $d2, $dd, $c3, $df, $09, $26
145a8     53 4E 00 DD 
145ac     A2 82 91 C8 
145b0     06 5D 67 4B 
145b4     33 E9 A6 B7 | 	byte	$53, $4e, $00, $dd, $a2, $82, $91, $c8, $06, $5d, $67, $4b, $33, $e9, $a6, $b7
145b8     BF E0 2E 4A 
145bc     36 33 F5 C4 
145c0     9C 93 99 E0 
145c4     08 29 3D 3D | 	byte	$bf, $e0, $2e, $4a, $36, $33, $f5, $c4, $9c, $93, $99, $e0, $08, $29, $3d, $3d
145c8     38 14 F7 00 
145cc     F1 E6 FA F9 
145d0     00 1A 0B FD 
145d4     0F E7 D5 EC | 	byte	$38, $14, $f7, $00, $f1, $e6, $fa, $f9, $00, $1a, $0b, $fd, $0f, $e7, $d5, $ec
145d8     EB FC 2E 38 
145dc     35 34 13 F5 
145e0     DB A0 B5 C3 
145e4     DC 19 44 60 | 	byte	$eb, $fc, $2e, $38, $35, $34, $13, $f5, $db, $a0, $b5, $c3, $dc, $19, $44, $60
145e8     75 21 CF AA 
145ec     83 83 B9 E8 
145f0     31 7B 56 31 
145f4     1F C2 A6 CC | 	byte	$75, $21, $cf, $aa, $83, $83, $b9, $e8, $31, $7b, $56, $31, $1f, $c2, $a6, $cc
145f8     D1 00 4C 3E 
145fc     28 17 D5 BF 
14600     B6 98 CF F6 
14604     00 26 2E 21 | 	byte	$d1, $00, $4c, $3e, $28, $17, $d5, $bf, $b6, $98, $cf, $f6, $00, $26, $2e, $21
14608     35 13 F0 10 
1460c     F3 D7 06 03 
14610     06 29 1F F4 
14614     FE D4 BB E6 | 	byte	$35, $13, $f0, $10, $f3, $d7, $06, $03, $06, $29, $1f, $f4, $fe, $d4, $bb, $e6
14618     F4 06 49 53 
1461c     39 32 03 CA 
14620     A6 A3 9A DE 
14624     0E 35 6A 7B | 	byte	$f4, $06, $49, $53, $39, $32, $03, $ca, $a6, $a3, $9a, $de, $0e, $35, $6a, $7b
14628     4D F5 C2 84 
1462c     84 87 BD 06 
14630     50 69 48 32 
14634     F5 B8 C0 CD | 	byte	$4d, $f5, $c2, $84, $84, $87, $bd, $06, $50, $69, $48, $32, $f5, $b8, $c0, $cd
14638     EE 2B 42 30 
1463c     14 F1 BF BF 
14640     CE CF FE 0D 
14644     0D 0D 07 F3 | 	byte	$ee, $2b, $42, $30, $14, $f1, $bf, $bf, $ce, $cf, $fe, $0d, $0d, $0d, $07, $f3
14648     FA 09 FB 14 
1464c     21 04 15 1F 
14650     04 09 09 E5 
14654     D9 E0 CF E0 | 	byte	$fa, $09, $fb, $14, $21, $04, $15, $1f, $04, $09, $09, $e5, $d9, $e0, $cf, $e0
14658     08 1C 31 4D 
1465c     41 23 E9 AF 
14660     9D 93 AD F4 
14664     30 63 7B 6C | 	byte	$08, $1c, $31, $4d, $41, $23, $e9, $af, $9d, $93, $ad, $f4, $30, $63, $7b, $6c
14668     41 E2 9A 85 
1466c     85 87 D5 19 
14670     44 5C 45 1D 
14674     FD CA D3 EE | 	byte	$41, $e2, $9a, $85, $85, $87, $d5, $19, $44, $5c, $45, $1d, $fd, $ca, $d3, $ee
14678     FE 21 30 03 
1467c     F7 E3 B7 D1 
14680     02 12 26 3C 
14684     09 E5 C8 AA | 	byte	$fe, $21, $30, $03, $f7, $e3, $b7, $d1, $02, $12, $26, $3c, $09, $e5, $c8, $aa
14688     B6 DF 0C 35 
1468c     4F 5C 49 1F 
14690     07 E5 C5 CA 
14694     DC D1 FC 0F | 	byte	$b6, $df, $0c, $35, $4f, $5c, $49, $1f, $07, $e5, $c5, $ca, $dc, $d1, $fc, $0f
14698     07 26 28 15 
1469c     22 F3 D3 C0 
146a0     BD BE E8 17 
146a4     3C 54 4F 4B | 	byte	$07, $26, $28, $15, $22, $f3, $d3, $c0, $bd, $be, $e8, $17, $3c, $54, $4f, $4b
146a8     2E D2 C5 91 
146ac     85 A3 CD E8 
146b0     34 41 30 46 
146b4     20 EF 08 F1 | 	byte	$2e, $d2, $c5, $91, $85, $a3, $cd, $e8, $34, $41, $30, $46, $20, $ef, $08, $f1
146b8     DD F8 F9 E1 
146bc     F3 F1 EE 07 
146c0     17 2C 4B 3D 
146c4     00 DA 9B 86 | 	byte	$dd, $f8, $f9, $e1, $f3, $f1, $ee, $07, $17, $2c, $4b, $3d, $00, $da, $9b, $86
146c8     8C B3 EC 53 
146cc     79 79 79 4C 
146d0     FB D8 B6 9C 
146d4     C2 EC 00 1D | 	byte	$8c, $b3, $ec, $53, $79, $79, $79, $4c, $fb, $d8, $b6, $9c, $c2, $ec, $00, $1d
146d8     35 1E 0B DA 
146dc     C9 B4 D2 F3 
146e0     15 32 47 2D 
146e4     10 00 D8 F6 | 	byte	$35, $1e, $0b, $da, $c9, $b4, $d2, $f3, $15, $32, $47, $2d, $10, $00, $d8, $f6
146e8     0F EA 0D F5 
146ec     BF B5 B0 A4 
146f0     FC 23 32 71 
146f4     6B 26 16 D6 | 	byte	$0f, $ea, $0d, $f5, $bf, $b5, $b0, $a4, $fc, $23, $32, $71, $6b, $26, $16, $d6
146f8     A2 C0 CB D0 
146fc     1D 2B 1D 3C 
14700     2A 09 14 07 
14704     00 FB C0 C1 | 	byte	$a2, $c0, $cb, $d0, $1d, $2b, $1d, $3c, $2a, $09, $14, $07, $00, $fb, $c0, $c1
14708     AA AB CA 01 
1470c     2A 69 79 63 
14710     4C 1E C5 B8 
14714     B5 B3 E7 1D | 	byte	$aa, $ab, $ca, $01, $2a, $69, $79, $63, $4c, $1e, $c5, $b8, $b5, $b3, $e7, $1d
14718     16 FF 00 C3 
1471c     AF D5 E7 1B 
14720     61 5A 49 37 
14724     E6 C9 C4 C3 | 	byte	$16, $ff, $00, $c3, $af, $d5, $e7, $1b, $61, $5a, $49, $37, $e6, $c9, $c4, $c3
14728     E4 FA 03 F5 
1472c     F3 DA D8 E6 
14730     06 1B 30 3E 
14734     22 02 00 DE | 	byte	$e4, $fa, $03, $f5, $f3, $da, $d8, $e6, $06, $1b, $30, $3e, $22, $02, $00, $de
14738     CF F0 F1 F3 
1473c     25 16 0E 24 
14740     00 F0 11 FD 
14744     FC 14 08 09 | 	byte	$cf, $f0, $f1, $f3, $25, $16, $0e, $24, $00, $f0, $11, $fd, $fc, $14, $08, $09
14748     E7 D1 C2 CD 
1474c     D8 0A 2F 47 
14750     63 3C 0F 01 
14754     D7 C1 BF C7 | 	byte	$e7, $d1, $c2, $cd, $d8, $0a, $2f, $47, $63, $3c, $0f, $01, $d7, $c1, $bf, $c7
14758     BF E1 F6 F3 
1475c     0E 32 10 19 
14760     27 FB F8 1B 
14764     F9 F8 11 F5 | 	byte	$bf, $e1, $f6, $f3, $0e, $32, $10, $19, $27, $fb, $f8, $1b, $f9, $f8, $11, $f5
14768     D7 C3 A6 AF 
1476c     E1 00 34 68 
14770     69 3C 03 D3 
14774     B2 AF D6 05 | 	byte	$d7, $c3, $a6, $af, $e1, $00, $34, $68, $69, $3c, $03, $d3, $b2, $af, $d6, $05
14778     2C 52 4B 20 
1477c     00 C6 AE CB 
14780     DE 0E 48 4B 
14784     40 2D EE D9 | 	byte	$2c, $52, $4b, $20, $00, $c6, $ae, $cb, $de, $0e, $48, $4b, $40, $2d, $ee, $d9
14788     DE DE 00 12 
1478c     1D 0B 00 DE 
14790     D5 D4 F0 10 
14794     06 12 0D E6 | 	byte	$de, $de, $00, $12, $1d, $0b, $00, $de, $d5, $d4, $f0, $10, $06, $12, $0d, $e6
14798     E1 E5 E7 00 
1479c     17 23 16 11 
147a0     08 DC E1 EE 
147a4     E2 FB 24 14 | 	byte	$e1, $e5, $e7, $00, $17, $23, $16, $11, $08, $dc, $e1, $ee, $e2, $fb, $24, $14
147a8     03 EB C4 A5 
147ac     C0 D2 0A 49 
147b0     68 5E 4B 16 
147b4     DF BE C0 D2 | 	byte	$03, $eb, $c4, $a5, $c0, $d2, $0a, $49, $68, $5e, $4b, $16, $df, $be, $c0, $d2
147b8     F8 1F 2D 18 
147bc     0F EA CF DF 
147c0     ED 06 3B 3F 
147c4     38 21 F5 DD | 	byte	$f8, $1f, $2d, $18, $0f, $ea, $cf, $df, $ed, $06, $3b, $3f, $38, $21, $f5, $dd
147c8     DC D6 04 42 
147cc     55 4C 21 F1 
147d0     A0 88 88 88 
147d4     B5 1D 60 77 | 	byte	$dc, $d6, $04, $42, $55, $4c, $21, $f1, $a0, $88, $88, $88, $b5, $1d, $60, $77
147d8     77 61 07 D7 
147dc     AA A0 C4 F7 
147e0     1B 26 21 FB 
147e4     D4 CA E0 F8 | 	byte	$77, $61, $07, $d7, $aa, $a0, $c4, $f7, $1b, $26, $21, $fb, $d4, $ca, $e0, $f8
147e8     17 2F 10 E8 
147ec     C5 9C A6 E8 
147f0     1C 60 76 76 
147f4     5B 1D D4 94 | 	byte	$17, $2f, $10, $e8, $c5, $9c, $a6, $e8, $1c, $60, $76, $76, $5b, $1d, $d4, $94
147f8     89 96 BC F8 
147fc     39 43 47 38 
14800     07 EE F4 EA 
14804     F8 16 0E 12 | 	byte	$89, $96, $bc, $f8, $39, $43, $47, $38, $07, $ee, $f4, $ea, $f8, $16, $0e, $12
14808     10 F4 08 1B 
1480c     24 3F 1E 09 
14810     CC 89 89 89 
14814     9F FC 3A 60 | 	byte	$10, $f4, $08, $1b, $24, $3f, $1e, $09, $cc, $89, $89, $89, $9f, $fc, $3a, $60
14818     76 73 2E 03 
1481c     D4 B0 B9 CF 
14820     DD FC 14 1B 
14824     0A 13 1A 03 | 	byte	$76, $73, $2e, $03, $d4, $b0, $b9, $cf, $dd, $fc, $14, $1b, $0a, $13, $1a, $03
14828     E5 D8 AF AB 
1482c     CB D9 06 49 
14830     60 58 5B 2D 
14834     F7 E3 C9 C1 | 	byte	$e5, $d8, $af, $ab, $cb, $d9, $06, $49, $60, $58, $5b, $2d, $f7, $e3, $c9, $c1
14838     DD F5 F4 00 
1483c     0A EF 00 10 
14840     0C 24 3E 21 
14844     12 00 D9 D7 | 	byte	$dd, $f5, $f4, $00, $0a, $ef, $00, $10, $0c, $24, $3e, $21, $12, $00, $d9, $d7
14848     EB FC 33 30 
1484c     25 03 E3 BC 
14850     BC D3 0D 32 
14854     23 31 F5 C3 | 	byte	$eb, $fc, $33, $30, $25, $03, $e3, $bc, $bc, $d3, $0d, $32, $23, $31, $f5, $c3
14858     B6 B2 C4 00 
1485c     3A 3E 44 2E 
14860     00 D5 D3 D5 
14864     EB 18 34 1D | 	byte	$b6, $b2, $c4, $00, $3a, $3e, $44, $2e, $00, $d5, $d3, $d5, $eb, $18, $34, $1d
14868     F2 D6 8A 8A 
1486c     B8 E6 2F 75 
14870     75 5C 2C D8 
14874     A0 AB BA E9 | 	byte	$f2, $d6, $8a, $8a, $b8, $e6, $2f, $75, $75, $5c, $2c, $d8, $a0, $ab, $ba, $e9
14878     3A 5B 44 2C 
1487c     F9 B7 B0 C1 
14880     DB 27 56 53 
14884     4D 26 E9 D8 | 	byte	$3a, $5b, $44, $2c, $f9, $b7, $b0, $c1, $db, $27, $56, $53, $4d, $26, $e9, $d8
14888     B9 B4 E1 00 
1488c     13 31 29 1C 
14890     03 E8 ED FB 
14894     04 2B 26 F7 | 	byte	$b9, $b4, $e1, $00, $13, $31, $29, $1c, $03, $e8, $ed, $fb, $04, $2b, $26, $f7
14898     EA AC 8B A2 
1489c     BD F1 48 74 
148a0     6D 61 2E DC 
148a4     B1 B4 C3 E8 | 	byte	$ea, $ac, $8b, $a2, $bd, $f1, $48, $74, $6d, $61, $2e, $dc, $b1, $b4, $c3, $e8
148a8     FC 24 F5 ED 
148ac     DD BB CC FE 
148b0     11 39 62 42 
148b4     13 F9 C6 B8 | 	byte	$fc, $24, $f5, $ed, $dd, $bb, $cc, $fe, $11, $39, $62, $42, $13, $f9, $c6, $b8
148b8     D9 F1 17 3E 
148bc     3A 19 03 DA 
148c0     C4 DB F6 15 
148c4     45 33 FE E7 | 	byte	$d9, $f1, $17, $3e, $3a, $19, $03, $da, $c4, $db, $f6, $15, $45, $33, $fe, $e7
148c8     B2 A6 E0 05 
148cc     39 74 57 2F 
148d0     07 B8 A8 BC 
148d4     DB 18 46 43 | 	byte	$b2, $a6, $e0, $05, $39, $74, $57, $2f, $07, $b8, $a8, $bc, $db, $18, $46, $43
148d8     45 10 B4 A9 
148dc     8B A0 E8 1F 
148e0     39 60 50 1D 
148e4     05 F6 EF 00 | 	byte	$45, $10, $b4, $a9, $8b, $a0, $e8, $1f, $39, $60, $50, $1d, $05, $f6, $ef, $00
148e8     EC EE C8 BD 
148ec     AE A8 DF 18 
148f0     30 56 62 2B 
148f4     07 F2 C0 C3 | 	byte	$ec, $ee, $c8, $bd, $ae, $a8, $df, $18, $30, $56, $62, $2b, $07, $f2, $c0, $c3
148f8     DD F1 0D 29 
148fc     1F 1A 11 FC 
14900     FA 0D 0E E7 
14904     E5 B8 B1 CE | 	byte	$dd, $f1, $0d, $29, $1f, $1a, $11, $fc, $fa, $0d, $0e, $e7, $e5, $b8, $b1, $ce
14908     ED 23 73 71 
1490c     60 4A EB B1 
14910     AB 92 C5 11 
14914     20 39 50 13 | 	byte	$ed, $23, $73, $71, $60, $4a, $eb, $b1, $ab, $92, $c5, $11, $20, $39, $50, $13
14918     01 F9 E5 00 
1491c     FB EE E2 CE 
14920     B7 CD E8 1C 
14924     73 73 73 5A | 	byte	$01, $f9, $e5, $00, $fb, $ee, $e2, $ce, $b7, $cd, $e8, $1c, $73, $73, $73, $5a
14928     DC 8C 8C 8C 
1492c     8C E3 39 73 
14930     73 57 15 D5 
14934     A5 AE CB 00 | 	byte	$dc, $8c, $8c, $8c, $8c, $e3, $39, $73, $73, $57, $15, $d5, $a5, $ae, $cb, $00
14938     39 3F 24 0E 
1493c     E9 D1 E1 0B 
14940     1D 1E 19 E0 
14944     BD AC B0 ED | 	byte	$39, $3f, $24, $0e, $e9, $d1, $e1, $0b, $1d, $1e, $19, $e0, $bd, $ac, $b0, $ed
14948     35 5D 73 73 
1494c     2B F2 BC 98 
14950     AB C9 F5 33 
14954     38 32 29 FB | 	byte	$35, $5d, $73, $73, $2b, $f2, $bc, $98, $ab, $c9, $f5, $33, $38, $32, $29, $fb
14958     EA FA F9 0C 
1495c     2B 1C 00 E0 
14960     BF B3 D2 F1 
14964     25 45 5F 39 | 	byte	$ea, $fa, $f9, $0c, $2b, $1c, $00, $e0, $bf, $b3, $d2, $f1, $25, $45, $5f, $39
14968     E4 C7 94 8D 
1496c     BB F5 22 6A 
14970     65 2E 18 E4 
14974     9F BB CD E3 | 	byte	$e4, $c7, $94, $8d, $bb, $f5, $22, $6a, $65, $2e, $18, $e4, $9f, $bb, $cd, $e3
14978     1B 43 2B 27 
1497c     0A E4 C7 CB 
14980     C0 E3 0B 12 
14984     1F 2D 17 0D | 	byte	$1b, $43, $2b, $27, $0a, $e4, $c7, $cb, $c0, $e3, $0b, $12, $1f, $2d, $17, $0d
14988     0C FF 04 12 
1498c     00 00 FF E5 
14990     DE E7 E8 00 
14994     1B 21 2A 2C | 	byte	$0c, $ff, $04, $12, $00, $00, $ff, $e5, $de, $e7, $e8, $00, $1b, $21, $2a, $2c
14998     0E F9 EB E6 
1499c     F5 0B 23 48 
149a0     2E F9 E6 AB 
149a4     9A BB E3 08 | 	byte	$0e, $f9, $eb, $e6, $f5, $0b, $23, $48, $2e, $f9, $e6, $ab, $9a, $bb, $e3, $08
149a8     2C 2C 05 FB 
149ac     E4 C3 E8 18 
149b0     16 33 40 03 
149b4     DC DA B0 BF | 	byte	$2c, $2c, $05, $fb, $e4, $c3, $e8, $18, $16, $33, $40, $03, $dc, $da, $b0, $bf
149b8     FE 11 21 4C 
149bc     07 D3 B6 9E 
149c0     B4 00 30 67 
149c4     71 40 19 E4 | 	byte	$fe, $11, $21, $4c, $07, $d3, $b6, $9e, $b4, $00, $30, $67, $71, $40, $19, $e4
149c8     B7 C6 DF F8 
149cc     22 28 10 04 
149d0     E0 CF ED 00 
149d4     1B 43 37 1C | 	byte	$b7, $c6, $df, $f8, $22, $28, $10, $04, $e0, $cf, $ed, $00, $1b, $43, $37, $1c
149d8     00 DD D4 E3 
149dc     06 33 48 47 
149e0     2E 07 DD A5 
149e4     AD B8 E1 F3 | 	byte	$00, $dd, $d4, $e3, $06, $33, $48, $47, $2e, $07, $dd, $a5, $ad, $b8, $e1, $f3
149e8     FC 00 F8 F6 
149ec     EE 00 26 2E 
149f0     29 29 07 D9 
149f4     D8 D2 CF FF | 	byte	$fc, $00, $f8, $f6, $ee, $00, $26, $2e, $29, $29, $07, $d9, $d8, $d2, $cf, $ff
149f8     11 07 E8 E0 
149fc     A4 B5 DC F1 
14a00     34 71 5C 49 
14a04     2A D6 CD D0 | 	byte	$11, $07, $e8, $e0, $a4, $b5, $dc, $f1, $34, $71, $5c, $49, $2a, $d6, $cd, $d0
14a08     C7 00 2D 18 
14a0c     1A 03 D0 D8 
14a10     E0 EE 2D 42 
14a14     38 34 03 E1 | 	byte	$c7, $00, $2d, $18, $1a, $03, $d0, $d8, $e0, $ee, $2d, $42, $38, $34, $03, $e1
14a18     E6 E1 F5 29 
14a1c     2C 26 24 FA 
14a20     E2 E7 EE 14 
14a24     2B 11 15 C8 | 	byte	$e6, $e1, $f5, $29, $2c, $26, $24, $fa, $e2, $e7, $ee, $14, $2b, $11, $15, $c8
14a28     92 8F 8F B2 
14a2c     17 49 6D 70 
14a30     4E 01 EB B3 
14a34     B1 E1 FC 0A | 	byte	$92, $8f, $8f, $b2, $17, $49, $6d, $70, $4e, $01, $eb, $b3, $b1, $e1, $fc, $0a
14a38     01 E4 A4 A4 
14a3c     A7 C7 19 62 
14a40     6B 6D 4D F2 
14a44     CC C2 BB EE | 	byte	$01, $e4, $a4, $a4, $a7, $c7, $19, $62, $6b, $6d, $4d, $f2, $cc, $c2, $bb, $ee
14a48     1E 2C 30 1E 
14a4c     E9 D2 CD D0 
14a50     FC 25 37 3A 
14a54     25 0E F9 EC | 	byte	$1e, $2c, $30, $1e, $e9, $d2, $cd, $d0, $fc, $25, $37, $3a, $25, $0e, $f9, $ec
14a58     FB 0B 12 1B 
14a5c     08 F4 ED DD 
14a60     E9 17 29 3B 
14a64     4F 3A 0A B3 | 	byte	$fb, $0b, $12, $1b, $08, $f4, $ed, $dd, $e9, $17, $29, $3b, $4f, $3a, $0a, $b3
14a68     90 90 90 9D 
14a6c     EA 29 6F 6F 
14a70     5F 44 15 C1 
14a74     D0 C8 99 CD | 	byte	$90, $90, $90, $9d, $ea, $29, $6f, $6f, $5f, $44, $15, $c1, $d0, $c8, $99, $cd
14a78     DC C6 E0 FF 
14a7c     EB 17 23 14 
14a80     27 24 08 FE 
14a84     F6 EF FF 04 | 	byte	$dc, $c6, $e0, $ff, $eb, $17, $23, $14, $27, $24, $08, $fe, $f6, $ef, $ff, $04
14a88     FB 13 05 F9 
14a8c     FB F4 F7 02 
14a90     04 05 10 15 
14a94     16 15 18 1C | 	byte	$fb, $13, $05, $f9, $fb, $f4, $f7, $02, $04, $05, $10, $15, $16, $15, $18, $1c
14a98     0E 00 F6 EB 
14a9c     E9 E9 F2 0B 
14aa0     15 24 32 2A 
14aa4     20 1F 0E DA | 	byte	$0e, $00, $f6, $eb, $e9, $e9, $f2, $0b, $15, $24, $32, $2a, $20, $1f, $0e, $da
14aa8     AE 90 90 90 
14aac     BD F9 41 6F 
14ab0     6F 69 3F F2 
14ab4     9F 90 90 91 | 	byte	$ae, $90, $90, $90, $bd, $f9, $41, $6f, $6f, $69, $3f, $f2, $9f, $90, $90, $91
14ab8     D4 04 20 3C 
14abc     24 01 F3 DA 
14ac0     DB 02 10 1E 
14ac4     2D 1B 00 FC | 	byte	$d4, $04, $20, $3c, $24, $01, $f3, $da, $db, $02, $10, $1e, $2d, $1b, $00, $fc
14ac8     E2 E6 F8 00 
14acc     0D 1D 12 05 
14ad0     FA F5 FF 0B 
14ad4     1A 2B 22 18 | 	byte	$e2, $e6, $f8, $00, $0d, $1d, $12, $05, $fa, $f5, $ff, $0b, $1a, $2b, $22, $18
14ad8     06 ED E5 E8 
14adc     EB 00 14 12 
14ae0     1D 1F 0F 18 
14ae4     15 13 15 EC | 	byte	$06, $ed, $e5, $e8, $eb, $00, $14, $12, $1d, $1f, $0f, $18, $15, $13, $15, $ec
14ae8     DE A1 91 91 
14aec     AC DD 2F 5A 
14af0     6E 6E 37 D2 
14af4     B7 91 91 C4 | 	byte	$de, $a1, $91, $91, $ac, $dd, $2f, $5a, $6e, $6e, $37, $d2, $b7, $91, $91, $c4
14af8     EE 1A 50 2D 
14afc     03 FB BE B6 
14b00     E4 FB 13 42 
14b04     31 18 13 E5 | 	byte	$ee, $1a, $50, $2d, $03, $fb, $be, $b6, $e4, $fb, $13, $42, $31, $18, $13, $e5
14b08     DF F8 F3 04 
14b0c     27 14 04 07 
14b10     F7 F9 0D 0D 
14b14     19 20 0C 03 | 	byte	$df, $f8, $f3, $04, $27, $14, $04, $07, $f7, $f9, $0d, $0d, $19, $20, $0c, $03
14b18     00 EE F1 00 
14b1c     06 09 13 0D 
14b20     04 0F 0B 0C 
14b24     1D 20 11 EA | 	byte	$00, $ee, $f1, $00, $06, $09, $13, $0d, $04, $0f, $0b, $0c, $1d, $20, $11, $ea
14b28     E2 B8 9A A9 
14b2c     BF DD 1A 40 
14b30     3E 2B 1B C9 
14b34     C0 C3 BB EE | 	byte	$e2, $b8, $9a, $a9, $bf, $dd, $1a, $40, $3e, $2b, $1b, $c9, $c0, $c3, $bb, $ee
14b38     2C 16 1E 20 
14b3c     E1 C7 DB C4 
14b40     E2 1D 16 1D 
14b44     2F 0A FC 02 | 	byte	$2c, $16, $1e, $20, $e1, $c7, $db, $c4, $e2, $1d, $16, $1d, $2f, $0a, $fc, $02
14b48     F1 04 17 04 
14b4c     0B 11 F4 FE 
14b50     07 FE 17 1B 
14b54     04 0B 06 F4 | 	byte	$f1, $04, $17, $04, $0b, $11, $f4, $fe, $07, $fe, $17, $1b, $04, $0b, $06, $f4
14b58     FC 01 01 13 
14b5c     12 07 0B 00 
14b60     FB 03 0A 12 
14b64     1A 20 0D E6 | 	byte	$fc, $01, $01, $13, $12, $07, $0b, $00, $fb, $03, $0a, $12, $1a, $20, $0d, $e6
14b68     DB C1 CA C3 
14b6c     DC F1 12 03 
14b70     F4 F6 DC E1 
14b74     F4 FC 1A 2A | 	byte	$db, $c1, $ca, $c3, $dc, $f1, $12, $03, $f4, $f6, $dc, $e1, $f4, $fc, $1a, $2a
14b78     16 04 F4 CA 
14b7c     C9 D8 D2 F9 
14b80     13 08 12 12 
14b84     F3 06 0F 01 | 	byte	$16, $04, $f4, $ca, $c9, $d8, $d2, $f9, $13, $08, $12, $12, $f3, $06, $0f, $01
14b88     1E 27 08 0C 
14b8c     00 EA FB FB 
14b90     F7 1A 19 09 
14b94     14 01 F6 04 | 	byte	$1e, $27, $08, $0c, $00, $ea, $fb, $fb, $f7, $1a, $19, $09, $14, $01, $f6, $04
14b98     FB 00 17 0B 
14b9c     0B 11 00 FB 
14ba0     03 00 05 17 
14ba4     12 19 11 E4 | 	byte	$fb, $00, $17, $0b, $0b, $11, $00, $fb, $03, $00, $05, $17, $12, $19, $11, $e4
14ba8     E2 CD D2 EF 
14bac     E7 FF F3 D8 
14bb0     C3 D2 CD F5 
14bb4     2B 35 45 3F | 	byte	$e2, $cd, $d2, $ef, $e7, $ff, $f3, $d8, $c3, $d2, $cd, $f5, $2b, $35, $45, $3f
14bb8     0D DE CA B0 
14bbc     B8 E0 FA 0B 
14bc0     22 11 FD FB 
14bc4     EF F5 13 1E | 	byte	$0d, $de, $ca, $b0, $b8, $e0, $fa, $0b, $22, $11, $fd, $fb, $ef, $f5, $13, $1e
14bc8     2A 2F 17 02 
14bcc     FD E6 E4 F9 
14bd0     FB 09 1C 13 
14bd4     11 12 FB FE | 	byte	$2a, $2f, $17, $02, $fd, $e6, $e4, $f9, $fb, $09, $1c, $13, $11, $12, $fb, $fe
14bd8     06 FB 05 14 
14bdc     04 0C 0F FD 
14be0     00 07 FD 05 
14be4     17 12 06 F7 | 	byte	$06, $fb, $05, $14, $04, $0c, $0f, $fd, $00, $07, $fd, $05, $17, $12, $06, $f7
14be8     E5 D3 DB F2 
14bec     FE D6 F8 BE 
14bf0     B3 CD DA FC 
14bf4     50 4E 38 45 | 	byte	$e5, $d3, $db, $f2, $fe, $d6, $f8, $be, $b3, $cd, $da, $fc, $50, $4e, $38, $45
14bf8     00 B6 C9 AC 
14bfc     AD F2 0B 02 
14c00     2A 14 EE FC 
14c04     F1 F0 16 20 | 	byte	$00, $b6, $c9, $ac, $ad, $f2, $0b, $02, $2a, $14, $ee, $fc, $f1, $f0, $16, $20
14c08     26 32 17 06 
14c0c     00 E5 E5 F0 
14c10     EE 07 19 15 
14c14     22 18 03 03 | 	byte	$26, $32, $17, $06, $00, $e5, $e5, $f0, $ee, $07, $19, $15, $22, $18, $03, $03
14c18     FB F1 FF 05 
14c1c     06 13 12 07 
14c20     08 01 FB 01 
14c24     0B 18 06 F6 | 	byte	$fb, $f1, $ff, $05, $06, $13, $12, $07, $08, $01, $fb, $01, $0b, $18, $06, $f6
14c28     EC D5 DA E6 
14c2c     DD F0 DD D3 
14c30     CD DF E5 10 
14c34     25 35 3C 1A | 	byte	$ec, $d5, $da, $e6, $dd, $f0, $dd, $d3, $cd, $df, $e5, $10, $25, $35, $3c, $1a
14c38     FE DF BD BE 
14c3c     CF DC FB 16 
14c40     0B 13 11 F3 
14c44     FB 08 FE 0A | 	byte	$fe, $df, $bd, $be, $cf, $dc, $fb, $16, $0b, $13, $11, $f3, $fb, $08, $fe, $0a
14c48     26 1A 1A 15 
14c4c     FC F9 EF DE 
14c50     F1 03 09 1E 
14c54     21 1B 17 01 | 	byte	$26, $1a, $1a, $15, $fc, $f9, $ef, $de, $f1, $03, $09, $1e, $21, $1b, $17, $01
14c58     F2 F6 F1 F8 
14c5c     07 10 15 14 
14c60     0B 05 03 FD 
14c64     05 17 FA F2 | 	byte	$f2, $f6, $f1, $f8, $07, $10, $15, $14, $0b, $05, $03, $fd, $05, $17, $fa, $f2
14c68     E9 D8 C6 CD 
14c6c     D4 EC 01 F3 
14c70     FE 00 EE F1 
14c74     00 00 11 1A | 	byte	$e9, $d8, $c6, $cd, $d4, $ec, $01, $f3, $fe, $00, $ee, $f1, $00, $00, $11, $1a
14c78     03 FA F3 CD 
14c7c     CF DD E0 FA 
14c80     1A 14 1D 1E 
14c84     00 FF FC E5 | 	byte	$03, $fa, $f3, $cd, $cf, $dd, $e0, $fa, $1a, $14, $1d, $1e, $00, $ff, $fc, $e5
14c88     00 19 0E 21 
14c8c     21 02 FF EF 
14c90     DB F3 FF 05 
14c94     29 28 1A 19 | 	byte	$00, $19, $0e, $21, $21, $02, $ff, $ef, $db, $f3, $ff, $05, $29, $28, $1a, $19
14c98     FC E9 F1 E8 
14c9c     F3 14 14 18 
14ca0     24 10 04 04 
14ca4     00 01 EE ED | 	byte	$fc, $e9, $f1, $e8, $f3, $14, $14, $18, $24, $10, $04, $04, $00, $01, $ee, $ed
14ca8     DE BF C2 C7 
14cac     D2 00 32 16 
14cb0     2B 14 CF D2 
14cb4     D4 BC FA 27 | 	byte	$de, $bf, $c2, $c7, $d2, $00, $32, $16, $2b, $14, $cf, $d2, $d4, $bc, $fa, $27
14cb8     0C 1F 1D CE 
14cbc     D4 D9 BD F0 
14cc0     24 21 33 37 
14cc4     05 F2 E5 CE | 	byte	$0c, $1f, $1d, $ce, $d4, $d9, $bd, $f0, $24, $21, $33, $37, $05, $f2, $e5, $ce
14cc8     E3 01 18 32 
14ccc     35 25 0C EF 
14cd0     DA DB E5 00 
14cd4     1C 2B 32 20 | 	byte	$e3, $01, $18, $32, $35, $25, $0c, $ef, $da, $db, $e5, $00, $1c, $2b, $32, $20
14cd8     05 F0 E0 DE 
14cdc     EA 04 17 28 
14ce0     2F 20 11 00 
14ce4     FC F6 DB E4 | 	byte	$05, $f0, $e0, $de, $ea, $04, $17, $28, $2f, $20, $11, $00, $fc, $f6, $db, $e4
14ce8     B7 B7 BB CF 
14cec     F0 26 49 54 
14cf0     2D 02 C6 A9 
14cf4     9D BC E6 1F | 	byte	$b7, $b7, $bb, $cf, $f0, $26, $49, $54, $2d, $02, $c6, $a9, $9d, $bc, $e6, $1f
14cf8     39 2D 19 F4 
14cfc     C6 C3 D2 E6 
14d00     18 42 3A 2B 
14d04     12 DD CB CC | 	byte	$39, $2d, $19, $f4, $c6, $c3, $d2, $e6, $18, $42, $3a, $2b, $12, $dd, $cb, $cc
14d08     D1 F8 25 37 
14d0c     41 35 12 F2 
14d10     DB CD E0 FC 
14d14     13 2C 33 24 | 	byte	$d1, $f8, $25, $37, $41, $35, $12, $f2, $db, $cd, $e0, $fc, $13, $2c, $33, $24
14d18     0C F2 DD DC 
14d1c     E5 00 18 28 
14d20     30 2D 16 02 
14d24     FC F0 C7 B7 | 	byte	$0c, $f2, $dd, $dc, $e5, $00, $18, $28, $30, $2d, $16, $02, $fc, $f0, $c7, $b7
14d28     B0 A5 C3 EF 
14d2c     12 4A 65 50 
14d30     32 EF B3 9A 
14d34     9A A9 E6 21 | 	byte	$b0, $a5, $c3, $ef, $12, $4a, $65, $50, $32, $ef, $b3, $9a, $9a, $a9, $e6, $21
14d38     32 30 21 F2 
14d3c     D7 CC D7 FA 
14d40     22 39 3F 1F 
14d44     00 E4 C1 BC | 	byte	$32, $30, $21, $f2, $d7, $cc, $d7, $fa, $22, $39, $3f, $1f, $00, $e4, $c1, $bc
14d48     E3 F6 1D 48 
14d4c     3F 31 1F EE 
14d50     DC E1 D5 FA 
14d54     1B 1D 2C 25 | 	byte	$e3, $f6, $1d, $48, $3f, $31, $1f, $ee, $dc, $e1, $d5, $fa, $1b, $1d, $2c, $25
14d58     05 F8 E7 D7 
14d5c     EF 03 11 2C 
14d60     35 27 1E 07 
14d64     F9 E7 A3 A9 | 	byte	$05, $f8, $e7, $d7, $ef, $03, $11, $2c, $35, $27, $1e, $07, $f9, $e7, $a3, $a9
14d68     9B A9 D7 0A 
14d6c     31 64 64 40 
14d70     2F D4 9B 9F 
14d74     9B A7 FA 11 | 	byte	$9b, $a9, $d7, $0a, $31, $64, $64, $40, $2f, $d4, $9b, $9f, $9b, $a7, $fa, $11
14d78     1B 40 12 ED 
14d7c     F8 DB E1 16 
14d80     19 27 3A 0C 
14d84     F0 EB BB C7 | 	byte	$1b, $40, $12, $ed, $f8, $db, $e1, $16, $19, $27, $3a, $0c, $f0, $eb, $bb, $c7
14d88     ED F6 18 3D 
14d8c     38 2E 1B F2 
14d90     ED E6 DE FC 
14d94     11 14 22 19 | 	byte	$ed, $f6, $18, $3d, $38, $2e, $1b, $f2, $ed, $e6, $de, $fc, $11, $14, $22, $19
14d98     03 FD EE E0 
14d9c     FA 05 0E 2A 
14da0     2F 22 1E 0C 
14da4     EF C9 A2 9C | 	byte	$03, $fd, $ee, $e0, $fa, $05, $0e, $2a, $2f, $22, $1e, $0c, $ef, $c9, $a2, $9c
14da8     9C BE ED 24 
14dac     5D 63 5A 3B 
14db0     07 CF 9D A1 
14db4     9D BE ED 03 | 	byte	$9c, $be, $ed, $24, $5d, $63, $5a, $3b, $07, $cf, $9d, $a1, $9d, $be, $ed, $03
14db8     13 27 10 FC 
14dbc     02 F9 F3 17 
14dc0     1C 14 1C 0C 
14dc4     EB E0 DB CE | 	byte	$13, $27, $10, $fc, $02, $f9, $f3, $17, $1c, $14, $1c, $0c, $eb, $e0, $db, $ce
14dc8     E7 01 0E 2C 
14dcc     36 25 18 05 
14dd0     F3 F0 EE F1 
14dd4     08 0D 0F 13 | 	byte	$e7, $01, $0e, $2c, $36, $25, $18, $05, $f3, $f0, $ee, $f1, $08, $0d, $0f, $13
14dd8     07 FD F9 F0 
14ddc     F8 0A 12 1D 
14de0     2C 20 19 0C 
14de4     DB C6 9D 9D | 	byte	$07, $fd, $f9, $f0, $f8, $0a, $12, $1d, $2c, $20, $19, $0c, $db, $c6, $9d, $9d
14de8     A0 CD 00 3D 
14dec     5B 62 52 21 
14df0     FC D7 A1 AD 
14df4     B2 BE E3 02 | 	byte	$a0, $cd, $00, $3d, $5b, $62, $52, $21, $fc, $d7, $a1, $ad, $b2, $be, $e3, $02
14df8     FC 17 20 00 
14dfc     0B 18 FC 11 
14e00     18 02 0B 08 
14e04     EA E9 E8 D8 | 	byte	$fc, $17, $20, $00, $0b, $18, $fc, $11, $18, $02, $0b, $08, $ea, $e9, $e8, $d8
14e08     EE 00 06 1E 
14e0c     2A 1F 1F 0C 
14e10     FE FC F4 F0 
14e14     01 02 04 0F | 	byte	$ee, $00, $06, $1e, $2a, $1f, $1f, $0c, $fe, $fc, $f4, $f0, $01, $02, $04, $0f
14e18     03 00 03 F8 
14e1c     FC 10 0F 17 
14e20     24 1E 14 F4 
14e24     E4 B8 9F A8 | 	byte	$03, $00, $03, $f8, $fc, $10, $0f, $17, $24, $1e, $14, $f4, $e4, $b8, $9f, $a8
14e28     B2 E1 20 3B 
14e2c     53 60 36 08 
14e30     00 D3 B9 C1 
14e34     BF BC E1 ED | 	byte	$b2, $e1, $20, $3b, $53, $60, $36, $08, $00, $d3, $b9, $c1, $bf, $bc, $e1, $ed
14e38     EB 10 1C 0F 
14e3c     23 22 07 0F 
14e40     08 F9 00 FB 
14e44     F5 F2 EC EC | 	byte	$eb, $10, $1c, $0f, $23, $22, $07, $0f, $08, $f9, $00, $fb, $f5, $f2, $ec, $ec
14e48     F0 F9 06 10 
14e4c     1A 24 1E 0D 
14e50     0B 00 F5 F8 
14e54     FA FD 03 05 | 	byte	$f0, $f9, $06, $10, $1a, $24, $1e, $0d, $0b, $00, $f5, $f8, $fa, $fd, $03, $05
14e58     01 07 03 00 
14e5c     03 0D 0F 17 
14e60     1E 1C 00 F1 
14e64     DE B4 AB BA | 	byte	$01, $07, $03, $00, $03, $0d, $0f, $17, $1e, $1c, $00, $f1, $de, $b4, $ab, $ba
14e68     C1 F1 27 2E 
14e6c     4D 59 1D 0D 
14e70     00 D1 CF C9 
14e74     BC BF DE DA | 	byte	$c1, $f1, $27, $2e, $4d, $59, $1d, $0d, $00, $d1, $cf, $c9, $bc, $bf, $de, $da
14e78     ED 12 19 22 
14e7c     2E 21 13 07 
14e80     FD F8 F6 F5 
14e84     00 F5 F0 F8 | 	byte	$ed, $12, $19, $22, $2e, $21, $13, $07, $fd, $f8, $f6, $f5, $00, $f5, $f0, $f8
14e88     ED F3 07 07 
14e8c     16 29 17 12 
14e90     12 00 FA FC 
14e94     F3 FD 02 FF | 	byte	$ed, $f3, $07, $07, $16, $29, $17, $12, $12, $00, $fa, $fc, $f3, $fd, $02, $ff
14e98     04 09 02 04 
14e9c     0A 0A 12 16 
14ea0     18 14 F2 EC 
14ea4     D7 B6 BC C5 | 	byte	$04, $09, $02, $04, $0a, $0a, $12, $16, $18, $14, $f2, $ec, $d7, $b6, $bc, $c5
14ea8     D0 00 21 28 
14eac     4A 43 17 11 
14eb0     FB D6 DF C7 
14eb4     BD C8 D3 D3 | 	byte	$d0, $00, $21, $28, $4a, $43, $17, $11, $fb, $d6, $df, $c7, $bd, $c8, $d3, $d3
14eb8     F4 0D 1C 32 
14ebc     2C 21 18 FE 
14ec0     F9 F8 EC F9 
14ec4     05 F4 F6 FE | 	byte	$f4, $0d, $1c, $32, $2c, $21, $18, $fe, $f9, $f8, $ec, $f9, $05, $f4, $f6, $fe
14ec8     EA F3 02 00 
14ecc     19 27 16 18 
14ed0     15 FF FD FB 
14ed4     EF 00 00 FD | 	byte	$ea, $f3, $02, $00, $19, $27, $16, $18, $15, $ff, $fd, $fb, $ef, $00, $00, $fd
14ed8     0A 08 00 09 
14edc     09 07 15 17 
14ee0     15 00 F2 E1 
14ee4     D8 BB CA D0 | 	byte	$0a, $08, $00, $09, $09, $07, $15, $17, $15, $00, $f2, $e1, $d8, $bb, $ca, $d0
14ee8     E4 07 1A 26 
14eec     3E 2E 15 0F 
14ef0     F9 E1 E8 C3 
14ef4     C1 C8 CA D7 | 	byte	$e4, $07, $1a, $26, $3e, $2e, $15, $0f, $f9, $e1, $e8, $c3, $c1, $c8, $ca, $d7
14ef8     F7 0B 21 35 
14efc     28 23 11 F9 
14f00     F7 F4 EB 00 
14f04     05 F6 FD FC | 	byte	$f7, $0b, $21, $35, $28, $23, $11, $f9, $f7, $f4, $eb, $00, $05, $f6, $fd, $fc
14f08     E8 F5 00 00 
14f0c     18 23 15 1B 
14f10     12 00 FF F8 
14f14     F2 00 00 FD | 	byte	$e8, $f5, $00, $00, $18, $23, $15, $1b, $12, $00, $ff, $f8, $f2, $00, $00, $fd
14f18     0A 06 01 0A 
14f1c     07 0A 15 15 
14f20     0C F8 EF DC 
14f24     DA C5 D4 DC | 	byte	$0a, $06, $01, $0a, $07, $0a, $15, $15, $0c, $f8, $ef, $dc, $da, $c5, $d4, $dc
14f28     F3 02 15 24 
14f2c     2E 26 18 0A 
14f30     FD EC E8 C3 
14f34     C9 C2 C9 DA | 	byte	$f3, $02, $15, $24, $2e, $26, $18, $0a, $fd, $ec, $e8, $c3, $c9, $c2, $c9, $da
14f38     F7 0E 2B 33 
14f3c     26 22 0C F6 
14f40     F6 EF EF 00 
14f44     04 FA FD FB | 	byte	$f7, $0e, $2b, $33, $26, $22, $0c, $f6, $f6, $ef, $ef, $00, $04, $fa, $fd, $fb
14f48     EA F3 FD 01 
14f4c     15 20 16 19 
14f50     0E 00 FF FB 
14f54     F5 00 FF 00 | 	byte	$ea, $f3, $fd, $01, $15, $20, $16, $19, $0e, $00, $ff, $fb, $f5, $00, $ff, $00
14f58     07 04 03 0A 
14f5c     08 0A 15 14 
14f60     00 F8 E8 DB 
14f64     DE CF DE E8 | 	byte	$07, $04, $03, $0a, $08, $0a, $15, $14, $00, $f8, $e8, $db, $de, $cf, $de, $e8
14f68     F9 FD 12 1B 
14f6c     20 25 14 0C 
14f70     03 EE E5 C8 
14f74     C8 BC CD DC | 	byte	$f9, $fd, $12, $1b, $20, $25, $14, $0c, $03, $ee, $e5, $c8, $c8, $bc, $cd, $dc
14f78     FA 15 2C 30 
14f7c     27 1B 09 F7 
14f80     F3 F0 F7 00 
14f84     04 FD FC FA | 	byte	$fa, $15, $2c, $30, $27, $1b, $09, $f7, $f3, $f0, $f7, $00, $04, $fd, $fc, $fa
14f88     EB F1 FD 05 
14f8c     14 21 16 15 
14f90     0F 00 FD FD 
14f94     F8 00 00 00 | 	byte	$eb, $f1, $fd, $05, $14, $21, $16, $15, $0f, $00, $fd, $fd, $f8, $00, $00, $00
14f98     06 05 02 08 
14f9c     09 0C 16 0E 
14fa0     F3 F4 DF DF 
14fa4     E9 D8 ED F7 | 	byte	$06, $05, $02, $08, $09, $0c, $16, $0e, $f3, $f4, $df, $df, $e9, $d8, $ed, $f7
14fa8     F3 FC 0E 09 
14fac     1A 25 10 14 
14fb0     0A EE E5 C9 
14fb4     BE BC D2 DD | 	byte	$f3, $fc, $0e, $09, $1a, $25, $10, $14, $0a, $ee, $e5, $c9, $be, $bc, $d2, $dd
14fb8     03 1D 2B 31 
14fbc     24 11 06 F6 
14fc0     EE F7 F8 FF 
14fc4     08 FB FA FD | 	byte	$03, $1d, $2b, $31, $24, $11, $06, $f6, $ee, $f7, $f8, $ff, $08, $fb, $fa, $fd
14fc8     EA F0 02 02 
14fcc     13 21 12 13 
14fd0     10 00 FF FF 
14fd4     F8 01 03 FE | 	byte	$ea, $f0, $02, $02, $13, $21, $12, $13, $10, $00, $ff, $ff, $f8, $01, $03, $fe
14fd8     06 07 00 08 
14fdc     09 0A 13 FB 
14fe0     F3 E9 E0 E9 
14fe4     F2 E4 FC F7 | 	byte	$06, $07, $00, $08, $09, $0a, $13, $fb, $f3, $e9, $e0, $e9, $f2, $e4, $fc, $f7
14fe8     ED FA 00 00 
14fec     1F 20 12 1F 
14ff0     07 EA EA C1 
14ff4     BA C6 D3 DD | 	byte	$ed, $fa, $00, $00, $1f, $20, $12, $1f, $07, $ea, $ea, $c1, $ba, $c6, $d3, $dd
14ff8     0E 1C 26 31 
14ffc     1B 0E 0D F2 
15000     F1 FE F2 FC 
15004     09 F6 FA 00 | 	byte	$0e, $1c, $26, $31, $1b, $0e, $0d, $f2, $f1, $fe, $f2, $fc, $09, $f6, $fa, $00
15008     EA F5 05 00 
1500c     12 1F 0C 12 
15010     0E FE 01 01 
15014     F7 06 03 FB | 	byte	$ea, $f5, $05, $00, $12, $1f, $0c, $12, $0e, $fe, $01, $01, $f7, $06, $03, $fb
15018     06 07 00 0B 
1501c     0B 08 06 F6 
15020     EC E4 E8 F8 
15024     FA FA 03 EC | 	byte	$06, $07, $00, $0b, $0b, $08, $06, $f6, $ec, $e4, $e8, $f8, $fa, $fa, $03, $ec
15028     EA F5 EE 00 
1502c     22 19 1E 28 
15030     02 EE EB B7 
15034     C1 CD CF E8 | 	byte	$ea, $f5, $ee, $00, $22, $19, $1e, $28, $02, $ee, $eb, $b7, $c1, $cd, $cf, $e8
15038     13 11 23 30 
1503c     11 11 11 F1 
15040     FA FD EC FC 
15044     06 F3 00 02 | 	byte	$13, $11, $23, $30, $11, $11, $11, $f1, $fa, $fd, $ec, $fc, $06, $f3, $00, $02
15048     ED FD 02 FD 
1504c     0D 18 0A 11 
15050     0D 00 04 02 
15054     FA 06 00 FD | 	byte	$ed, $fd, $02, $fd, $0d, $18, $0a, $11, $0d, $00, $04, $02, $fa, $06, $00, $fd
15058     08 06 00 0C 
1505c     0A 00 F5 F4 
15060     E1 E9 F5 03 
15064     03 09 FD E6 | 	byte	$08, $06, $00, $0c, $0a, $00, $f5, $f4, $e1, $e9, $f5, $03, $03, $09, $fd, $e6
15068     E7 E2 E5 08 
1506c     1E 1F 2A 24 
15070     FA F2 E2 B8 
15074     CE D2 D5 F5 | 	byte	$e7, $e2, $e5, $08, $1e, $1f, $2a, $24, $fa, $f2, $e2, $b8, $ce, $d2, $d5, $f5
15078     0E 06 1C 25 
1507c     0F 17 14 FB 
15080     00 F9 E9 F8 
15084     00 F3 00 05 | 	byte	$0e, $06, $1c, $25, $0f, $17, $14, $fb, $00, $f9, $e9, $f8, $00, $f3, $00, $05
15088     F7 00 02 FB 
1508c     06 11 08 0E 
15090     0F 05 05 02 
15094     FC 02 00 00 | 	byte	$f7, $00, $02, $fb, $06, $11, $08, $0e, $0f, $05, $05, $02, $fc, $02, $00, $00
15098     07 08 02 0B 
1509c     05 EC F4 E7 
150a0     E2 F5 05 11 
150a4     12 0A EF E1 | 	byte	$07, $08, $02, $0b, $05, $ec, $f4, $e7, $e2, $f5, $05, $11, $12, $0a, $ef, $e1
150a8     D7 D4 EF 09 
150ac     21 2B 2C 15 
150b0     F9 EC DC C4 
150b4     D3 D9 E2 F5 | 	byte	$d7, $d4, $ef, $09, $21, $2b, $2c, $15, $f9, $ec, $dc, $c4, $d3, $d9, $e2, $f5
150b8     05 00 14 20 
150bc     13 17 1D 00 
150c0     FB F3 E6 EF 
150c4     FE F6 02 10 | 	byte	$05, $00, $14, $20, $13, $17, $1d, $00, $fb, $f3, $e6, $ef, $fe, $f6, $02, $10
150c8     FD FF 00 F5 
150cc     FE 0E 06 0E 
150d0     14 08 05 05 
150d4     FB 00 03 00 | 	byte	$fd, $ff, $00, $f5, $fe, $0e, $06, $0e, $14, $08, $05, $05, $fb, $00, $03, $00
150d8     08 0B 05 08 
150dc     F4 E5 EA E1 
150e0     EB 04 11 22 
150e4     1B 00 EA D8 | 	byte	$08, $0b, $05, $08, $f4, $e5, $ea, $e1, $eb, $04, $11, $22, $1b, $00, $ea, $d8
150e8     C5 D6 F3 0D 
150ec     2D 32 25 14 
150f0     F2 E0 E1 CE 
150f4     D9 E9 E9 ED | 	byte	$c5, $d6, $f3, $0d, $2d, $32, $25, $14, $f2, $e0, $e1, $ce, $d9, $e9, $e9, $ed
150f8     00 F7 09 21 
150fc     15 1E 2C 05 
15100     F8 F2 DC E6 
15104     FE F8 0D 1A | 	byte	$00, $f7, $09, $21, $15, $1e, $2c, $05, $f8, $f2, $dc, $e6, $fe, $f8, $0d, $1a
15108     00 00 FF EC 
1510c     F6 08 05 13 
15110     17 0B 09 03 
15114     F7 FF 05 02 | 	byte	$00, $00, $ff, $ec, $f6, $08, $05, $13, $17, $0b, $09, $03, $f7, $ff, $05, $02
15118     0C 0C 06 00 
1511c     E2 E1 DE E5 
15120     F8 10 23 34 
15124     11 F7 DE C3 | 	byte	$0c, $0c, $06, $00, $e2, $e1, $de, $e5, $f8, $10, $23, $34, $11, $f7, $de, $c3
15128     BD DD F6 1E 
1512c     38 2E 1F 10 
15130     E2 E0 E8 D4 
15134     E4 F9 E5 E8 | 	byte	$bd, $dd, $f6, $1e, $38, $2e, $1f, $10, $e2, $e0, $e8, $d4, $e4, $f9, $e5, $e8
15138     F8 E9 04 24 
1513c     16 2B 35 02 
15140     F6 EA D4 E4 
15144     FB 00 17 1E | 	byte	$f8, $e9, $04, $24, $16, $2b, $35, $02, $f6, $ea, $d4, $e4, $fb, $00, $17, $1e
15148     05 00 F6 E6 
1514c     F1 01 0A 1A 
15150     18 10 0A FF 
15154     F6 00 03 07 | 	byte	$05, $00, $f6, $e6, $f1, $01, $0a, $1a, $18, $10, $0a, $ff, $f6, $00, $03, $07
15158     10 10 05 ED 
1515c     DD D1 DB EE 
15160     08 20 38 35 
15164     02 F2 CB B2 | 	byte	$10, $10, $05, $ed, $dd, $d1, $db, $ee, $08, $20, $38, $35, $02, $f2, $cb, $b2
15168     C7 E0 00 2C 
1516c     39 23 20 02 
15170     D9 E7 EB DE 
15174     F3 FC DE E6 | 	byte	$c7, $e0, $00, $2c, $39, $23, $20, $02, $d9, $e7, $eb, $de, $f3, $fc, $de, $e6
15178     E8 E0 06 23 
1517c     20 39 32 02 
15180     EE DF CE E0 
15184     FB 0A 1F 21 | 	byte	$e8, $e0, $06, $23, $20, $39, $32, $02, $ee, $df, $ce, $e0, $fb, $0a, $1f, $21
15188     09 FA ED E3 
1518c     E9 00 10 1C 
15190     1B 14 07 FA 
15194     F7 FE 05 0D | 	byte	$09, $fa, $ed, $e3, $e9, $00, $10, $1c, $1b, $14, $07, $fa, $f7, $fe, $05, $0d
15198     15 11 F7 E3 
1519c     D1 C9 E0 FD 
151a0     15 36 44 2A 
151a4     FC E3 B1 B2 | 	byte	$15, $11, $f7, $e3, $d1, $c9, $e0, $fd, $15, $36, $44, $2a, $fc, $e3, $b1, $b2
151a8     CC E5 12 3B 
151ac     34 23 18 ED 
151b0     D8 EA EC F3 
151b4     01 FC DE DE | 	byte	$cc, $e5, $12, $3b, $34, $23, $18, $ed, $d8, $ea, $ec, $f3, $01, $fc, $de, $de
151b8     DB DD 04 24 
151bc     30 3B 31 04 
151c0     E6 D7 CC DD 
151c4     00 19 23 26 | 	byte	$db, $dd, $04, $24, $30, $3b, $31, $04, $e6, $d7, $cc, $dd, $00, $19, $23, $26
151c8     0C F1 E6 DE 
151cc     E2 00 17 1E 
151d0     20 14 02 F8 
151d4     F6 FB 08 14 | 	byte	$0c, $f1, $e6, $de, $e2, $00, $17, $1e, $20, $14, $02, $f8, $f6, $fb, $08, $14
151d8     18 0C EB DD 
151dc     C5 C9 EA 07 
151e0     25 49 41 22 
151e4     F4 CB B2 B7 | 	byte	$18, $0c, $eb, $dd, $c5, $c9, $ea, $07, $25, $49, $41, $22, $f4, $cb, $b2, $b7
151e8     CD F1 21 3D 
151ec     2C 23 09 E4 
151f0     DE EB F3 03 
151f4     02 FC DA D4 | 	byte	$cd, $f1, $21, $3d, $2c, $23, $09, $e4, $de, $eb, $f3, $03, $02, $fc, $da, $d4
151f8     D5 DF 02 2D 
151fc     37 3B 32 00 
15200     DC D2 C9 DE 
15204     07 20 28 29 | 	byte	$d5, $df, $02, $2d, $37, $3b, $32, $00, $dc, $d2, $c9, $de, $07, $20, $28, $29
15208     0A EC E1 D8 
1520c     E3 03 19 22 
15210     25 13 00 F7 
15214     F3 FD 0C 18 | 	byte	$0a, $ec, $e1, $d8, $e3, $03, $19, $22, $25, $13, $00, $f7, $f3, $fd, $0c, $18
15218     1A 00 EB D0 
1521c     C2 CD F4 11 
15220     39 4C 3C 18 
15224     E8 BF B3 B6 | 	byte	$1a, $00, $eb, $d0, $c2, $cd, $f4, $11, $39, $4c, $3c, $18, $e8, $bf, $b3, $b6
15228     D4 FF 29 3B 
1522c     30 1A 00 E4 
15230     DD ED 00 09 
15234     03 F9 D5 D0 | 	byte	$d4, $ff, $29, $3b, $30, $1a, $00, $e4, $dd, $ed, $00, $09, $03, $f9, $d5, $d0
15238     D4 DD 08 36 
1523c     38 3D 30 F7 
15240     D7 CF C7 E5 
15244     11 24 2E 28 | 	byte	$d4, $dd, $08, $36, $38, $3d, $30, $f7, $d7, $cf, $c7, $e5, $11, $24, $2e, $28
15248     04 E9 DC D5 
1524c     E7 02 1A 27 
15250     23 0E 00 F5 
15254     F2 00 11 1A | 	byte	$04, $e9, $dc, $d5, $e7, $02, $1a, $27, $23, $0e, $00, $f5, $f2, $00, $11, $1a
15258     13 F7 E1 CA 
1525c     C3 D9 FC 22 
15260     44 48 37 13 
15264     D6 B7 B4 B7 | 	byte	$13, $f7, $e1, $ca, $c3, $d9, $fc, $22, $44, $48, $37, $13, $d6, $b7, $b4, $b7
15268     E1 0B 2B 3D 
1526c     2A 0E FC E2 
15270     DC F5 05 06 
15274     04 F5 CE D0 | 	byte	$e1, $0b, $2b, $3d, $2a, $0e, $fc, $e2, $dc, $f5, $05, $06, $04, $f5, $ce, $d0
15278     D5 E1 14 39 
1527c     37 3C 21 EA 
15280     D4 C9 CB F5 
15284     13 29 32 21 | 	byte	$d5, $e1, $14, $39, $37, $3c, $21, $ea, $d4, $c9, $cb, $f5, $13, $29, $32, $21
15288     00 E6 D7 D5 
1528c     EA 06 1F 28 
15290     1E 0B FF F2 
15294     F3 03 14 1A | 	byte	$00, $e6, $d7, $d5, $ea, $06, $1f, $28, $1e, $0b, $ff, $f2, $f3, $03, $14, $1a
15298     09 F4 D8 C9 
1529c     C9 E1 08 31 
152a0     42 42 34 00 
152a4     CC B7 B5 BE | 	byte	$09, $f4, $d8, $c9, $c9, $e1, $08, $31, $42, $42, $34, $00, $cc, $b7, $b5, $be
152a8     F1 0E 2B 40 
152ac     23 07 FD DE 
152b0     E2 00 06 07 
152b4     04 E7 CC D3 | 	byte	$f1, $0e, $2b, $40, $23, $07, $fd, $de, $e2, $00, $06, $07, $04, $e7, $cc, $d3
152b8     D2 EE 1E 38 
152bc     39 38 15 E7 
152c0     D2 C7 D9 FC 
152c4     17 30 2F 1C | 	byte	$d2, $ee, $1e, $38, $39, $38, $15, $e7, $d2, $c7, $d9, $fc, $17, $30, $2f, $1c
152c8     00 E0 D4 D9 
152cc     EB 04 24 27 
152d0     1E 0E FC F3 
152d4     F5 03 14 0A | 	byte	$00, $e0, $d4, $d9, $eb, $04, $24, $27, $1e, $0e, $fc, $f3, $f5, $03, $14, $0a
152d8     05 EE D9 D0 
152dc     D8 EC 16 35 
152e0     38 3E 29 E9 
152e4     CF B7 B7 D0 | 	byte	$05, $ee, $d9, $d0, $d8, $ec, $16, $35, $38, $3e, $29, $e9, $cf, $b7, $b7, $d0
152e8     FA 0D 32 3B 
152ec     16 0C FE DD 
152f0     EE 00 00 09 
152f4     FE E5 D3 D4 | 	byte	$fa, $0d, $32, $3b, $16, $0c, $fe, $dd, $ee, $00, $00, $09, $fe, $e5, $d3, $d4
152f8     D9 FA 17 34 
152fc     38 2B 12 EA 
15300     CE D1 DE FA 
15304     18 30 26 1A | 	byte	$d9, $fa, $17, $34, $38, $2b, $12, $ea, $ce, $d1, $de, $fa, $18, $30, $26, $1a
15308     00 E1 D8 DE 
1530c     E9 08 22 21 
15310     1F 0E FB F6 
15314     F7 02 06 06 | 	byte	$00, $e1, $d8, $de, $e9, $08, $22, $21, $1f, $0e, $fb, $f6, $f7, $02, $06, $06
15318     FE EB E1 DF 
1531c     E6 FE 1D 2B 
15320     32 2F 0F E6 
15324     D1 B8 BB D8 | 	byte	$fe, $eb, $e1, $df, $e6, $fe, $1d, $2b, $32, $2f, $0f, $e6, $d1, $b8, $bb, $d8
15328     F7 11 32 2F 
1532c     1C 0E FC E6 
15330     F4 F9 00 05 
15334     F7 E8 D8 D9 | 	byte	$f7, $11, $32, $2f, $1c, $0e, $fc, $e6, $f4, $f9, $00, $05, $f7, $e8, $d8, $d9
15338     E2 FC 13 30 
1533c     2E 23 0D EF 
15340     D7 DC E4 FD 
15344     16 29 21 16 | 	byte	$e2, $fc, $13, $30, $2e, $23, $0d, $ef, $d7, $dc, $e4, $fd, $16, $29, $21, $16
15348     FE E2 DC E0 
1534c     EC 08 1F 20 
15350     1F 11 FE FA 
15354     F8 F7 FC FF | 	byte	$fe, $e2, $dc, $e0, $ec, $08, $1f, $20, $1f, $11, $fe, $fa, $f8, $f7, $fc, $ff
15358     F4 F2 F1 EB 
1535c     F9 0C 11 23 
15360     28 17 0A E8 
15364     D2 C5 C9 DA | 	byte	$f4, $f2, $f1, $eb, $f9, $0c, $11, $23, $28, $17, $0a, $e8, $d2, $c5, $c9, $da
15368     F6 13 22 2F 
1536c     1E 0F 02 EF 
15370     EE F5 FA 00 
15374     F8 EF DF E6 | 	byte	$f6, $13, $22, $2f, $1e, $0f, $02, $ef, $ee, $f5, $fa, $00, $f8, $ef, $df, $e6
15378     E6 F8 0F 20 
1537c     24 1E 0D F7 
15380     E4 E2 E9 FB 
15384     0F 22 1B 12 | 	byte	$e6, $f8, $0f, $20, $24, $1e, $0d, $f7, $e4, $e2, $e9, $fb, $0f, $22, $1b, $12
15388     02 E9 E0 E4 
1538c     EB 00 19 1E 
15390     1F 15 02 FE 
15394     F4 E5 F6 F2 | 	byte	$02, $e9, $e0, $e4, $eb, $00, $19, $1e, $1f, $15, $02, $fe, $f4, $e5, $f6, $f2
15398     F5 00 00 FE 
1539c     0C 06 08 17 
153a0     0E 0A 0C E9 
153a4     E0 D4 CD D8 | 	byte	$f5, $00, $00, $fe, $0c, $06, $08, $17, $0e, $0a, $0c, $e9, $e0, $d4, $cd, $d8
153a8     F9 05 21 31 
153ac     1F 18 0A EB 
153b0     EC EC ED FF 
153b4     FB F4 F2 F0 | 	byte	$f9, $05, $21, $31, $1f, $18, $0a, $eb, $ec, $ec, $ed, $ff, $fb, $f4, $f2, $f0
153b8     E5 F8 02 10 
153bc     1F 1B 10 06 
153c0     ED E9 ED F2 
153c4     04 1B 15 15 | 	byte	$e5, $f8, $02, $10, $1f, $1b, $10, $06, $ed, $e9, $ed, $f2, $04, $1b, $15, $15
153c8     0C F2 E7 E7 
153cc     E4 FB 16 19 
153d0     22 1C 08 FD 
153d4     E4 E1 E5 EF | 	byte	$0c, $f2, $e7, $e7, $e4, $fb, $16, $19, $22, $1c, $08, $fd, $e4, $e1, $e5, $ef
153d8     FE 0D 13 16 
153dc     0E 00 FE FE 
153e0     FB 09 08 F2 
153e4     F4 DE CF DD | 	byte	$fe, $0d, $13, $16, $0e, $00, $fe, $fe, $fb, $09, $08, $f2, $f4, $de, $cf, $dd
153e8     EC FE 21 2D 
153ec     25 27 0C EA 
153f0     EA DF E6 00 
153f4     FB 00 00 F2 | 	byte	$ec, $fe, $21, $2d, $25, $27, $0c, $ea, $ea, $df, $e6, $00, $fb, $00, $00, $f2
153f8     E8 F2 F2 05 
153fc     19 18 1D 16 
15400     F6 F0 EB E6 
15404     FB 10 12 18 | 	byte	$e8, $f2, $f2, $05, $19, $18, $1d, $16, $f6, $f0, $eb, $e6, $fb, $10, $12, $18
15408     14 FA EF E7 
1540c     E0 F6 0D 16 
15410     24 23 0C F4 
15414     E3 D1 DE F2 | 	byte	$14, $fa, $ef, $e7, $e0, $f6, $0d, $16, $24, $23, $0c, $f4, $e3, $d1, $de, $f2
15418     05 1A 2A 20 
1541c     0B FE EC E6 
15420     F7 03 08 02 
15424     00 E0 D8 DA | 	byte	$05, $1a, $2a, $20, $0b, $fe, $ec, $e6, $f7, $03, $08, $02, $00, $e0, $d8, $da
15428     E0 FF 21 2B 
1542c     31 2D 08 EB 
15430     E1 D6 E6 00 
15434     01 0D 08 F2 | 	byte	$e0, $ff, $21, $2b, $31, $2d, $08, $eb, $e1, $d6, $e6, $00, $01, $0d, $08, $f2
15438     E6 E7 E4 FB 
1543c     16 20 26 22 
15440     00 F2 E6 DE 
15444     EF 0A 12 1C | 	byte	$e6, $e7, $e4, $fb, $16, $20, $26, $22, $00, $f2, $e6, $de, $ef, $0a, $12, $1c
15448     1B 02 F2 E5 
1544c     DD EF 07 16 
15450     27 25 09 F1 
15454     DB C9 DF FA | 	byte	$1b, $02, $f2, $e5, $dd, $ef, $07, $16, $27, $25, $09, $f1, $db, $c9, $df, $fa
15458     0B 2F 36 1D 
1545c     0B F7 D9 E1 
15460     F1 00 0F 0D 
15464     00 E5 DA D2 | 	byte	$0b, $2f, $36, $1d, $0b, $f7, $d9, $e1, $f1, $00, $0f, $0d, $00, $e5, $da, $d2
15468     E2 FF 21 31 
1546c     37 2B 07 E9 
15470     DA D3 E5 00 
15474     09 11 0B F4 | 	byte	$e2, $ff, $21, $31, $37, $2b, $07, $e9, $da, $d3, $e5, $00, $09, $11, $0b, $f4
15478     E1 E0 DF F4 
1547c     19 23 2B 26 
15480     03 F0 E4 D7 
15484     ED 09 11 1F | 	byte	$e1, $e0, $df, $f4, $19, $23, $2b, $26, $03, $f0, $e4, $d7, $ed, $09, $11, $1f
15488     20 04 F3 E5 
1548c     DB EF 05 15 
15490     2A 21 00 F0 
15494     D4 CA E5 FF | 	byte	$20, $04, $f3, $e5, $db, $ef, $05, $15, $2a, $21, $00, $f0, $d4, $ca, $e5, $ff
15498     18 3C 33 1D 
1549c     0B E5 D2 DF 
154a0     E9 05 17 0D 
154a4     00 EE D2 D4 | 	byte	$18, $3c, $33, $1d, $0b, $e5, $d2, $df, $e9, $05, $17, $0d, $00, $ee, $d2, $d4
154a8     E5 FC 20 37 
154ac     33 27 03 E3 
154b0     DA D5 E5 09 
154b4     0D 11 0E EE | 	byte	$e5, $fc, $20, $37, $33, $27, $03, $e3, $da, $d5, $e5, $09, $0d, $11, $0e, $ee
154b8     DB DD DA F6 
154bc     1E 26 2F 2D 
154c0     00 EF E0 D1 
154c4     EB 09 10 24 | 	byte	$db, $dd, $da, $f6, $1e, $26, $2f, $2d, $00, $ef, $e0, $d1, $eb, $09, $10, $24
154c8     26 03 F5 E7 
154cc     D7 EC 05 15 
154d0     27 14 01 E9 
154d4     D1 CF EC 05 | 	byte	$26, $03, $f5, $e7, $d7, $ec, $05, $15, $27, $14, $01, $e9, $d1, $cf, $ec, $05
154d8     25 3E 31 1E 
154dc     00 D9 D2 DB 
154e0     EB 0B 16 0C 
154e4     04 EA D1 DB | 	byte	$25, $3e, $31, $1e, $00, $d9, $d2, $db, $eb, $0b, $16, $0c, $04, $ea, $d1, $db
154e8     E6 FF 27 34 
154ec     2E 27 FD E1 
154f0     DA D4 EB 11 
154f4     0B 13 09 E6 | 	byte	$e6, $ff, $27, $34, $2e, $27, $fd, $e1, $da, $d4, $eb, $11, $0b, $13, $09, $e6
154f8     D7 D9 D7 FC 
154fc     24 29 34 2A 
15500     00 EE DB D0 
15504     F0 08 10 27 | 	byte	$d7, $d9, $d7, $fc, $24, $29, $34, $2a, $00, $ee, $db, $d0, $f0, $08, $10, $27
15508     21 03 F7 E5 
1550c     D8 F0 06 15 
15510     1D 10 F9 E5 
15514     D4 D7 F6 13 | 	byte	$21, $03, $f7, $e5, $d8, $f0, $06, $15, $1d, $10, $f9, $e5, $d4, $d7, $f6, $13
15518     2E 3A 30 18 
1551c     F1 D6 D0 D8 
15520     F0 12 12 0F 
15524     01 E5 D6 DD | 	byte	$2e, $3a, $30, $18, $f1, $d6, $d0, $d8, $f0, $12, $12, $0f, $01, $e5, $d6, $dd
15528     E9 07 2B 2E 
1552c     2C 1D F9 E4 
15530     DB D9 FA 13 
15534     0B 13 00 DF | 	byte	$e9, $07, $2b, $2e, $2c, $1d, $f9, $e4, $db, $d9, $fa, $13, $0b, $13, $00, $df
15538     D5 D6 DE 07 
1553c     27 2D 36 23 
15540     FB EB D9 D0 
15544     F0 09 15 29 | 	byte	$d5, $d6, $de, $07, $27, $2d, $36, $23, $fb, $eb, $d9, $d0, $f0, $09, $15, $29
15548     1F 03 F7 E2 
1554c     DA F2 07 12 
15550     15 0F F3 E5 
15554     DA E0 FD 1A | 	byte	$1f, $03, $f7, $e2, $da, $f2, $07, $12, $15, $0f, $f3, $e5, $da, $e0, $fd, $1a
15558     2D 37 2B 0B 
1555c     F1 D9 D0 DC 
15560     F6 0E 0E 10 
15564     FE E5 DB E1 | 	byte	$2d, $37, $2b, $0b, $f1, $d9, $d0, $dc, $f6, $0e, $0e, $10, $fe, $e5, $db, $e1
15568     ED 0E 29 29 
1556c     29 17 F5 E6 
15570     DD E1 FF 0D 
15574     07 0C FA DF | 	byte	$ed, $0e, $29, $29, $29, $17, $f5, $e6, $dd, $e1, $ff, $0d, $07, $0c, $fa, $df
15578     DB DB ED 12 
1557c     23 2B 31 11 
15580     F6 EA D7 D9 
15584     FB 08 16 29 | 	byte	$db, $db, $ed, $12, $23, $2b, $31, $11, $f6, $ea, $d7, $d9, $fb, $08, $16, $29
15588     17 03 FA E4 
1558c     E1 F9 03 0E 
15590     0F 05 F1 E8 
15594     DE ED 05 1D | 	byte	$17, $03, $fa, $e4, $e1, $f9, $03, $0e, $0f, $05, $f1, $e8, $de, $ed, $05, $1d
15598     2A 31 20 03 
1559c     EA DA D6 E5 
155a0     FE 11 0A 0E 
155a4     F5 E3 DE E4 | 	byte	$2a, $31, $20, $03, $ea, $da, $d6, $e5, $fe, $11, $0a, $0e, $f5, $e3, $de, $e4
155a8     F1 16 29 25 
155ac     24 0F EF E8 
155b0     DF E8 01 04 
155b4     08 03 F3 E1 | 	byte	$f1, $16, $29, $25, $24, $0f, $ef, $e8, $df, $e8, $01, $04, $08, $03, $f3, $e1
155b8     E3 E3 F8 16 
155bc     20 28 26 05 
155c0     F6 E8 D8 E3 
155c4     00 06 1A 23 | 	byte	$e3, $e3, $f8, $16, $20, $28, $26, $05, $f6, $e8, $d8, $e3, $00, $06, $1a, $23
155c8     0F 05 F9 E3 
155cc     EB FD 01 07 
155d0     0A FB EF E9 
155d4     E7 F7 0E 20 | 	byte	$0f, $05, $f9, $e3, $eb, $fd, $01, $07, $0a, $fb, $ef, $e9, $e7, $f7, $0e, $20
155d8     29 29 16 FB 
155dc     E8 DC DC EB 
155e0     05 0F 07 09 
155e4     EE E2 E2 E8 | 	byte	$29, $29, $16, $fb, $e8, $dc, $dc, $eb, $05, $0f, $07, $09, $ee, $e2, $e2, $e8
155e8     FB 1B 26 23 
155ec     1E 09 EE E8 
155f0     E2 F1 03 01 
155f4     06 FF EE E1 | 	byte	$fb, $1b, $26, $23, $1e, $09, $ee, $e8, $e2, $f1, $03, $01, $06, $ff, $ee, $e1
155f8     E3 EA 00 17 
155fc     21 28 1C 01 
15600     F5 E4 DC EC 
15604     00 08 1B 1C | 	byte	$e3, $ea, $00, $17, $21, $28, $1c, $01, $f5, $e4, $dc, $ec, $00, $08, $1b, $1c
15608     0D 05 F7 E7 
1560c     F0 FF 00 00 
15610     06 F5 F0 EC 
15614     EE 00 15 1F | 	byte	$0d, $05, $f7, $e7, $f0, $ff, $00, $00, $06, $f5, $f0, $ec, $ee, $00, $15, $1f
15618     25 24 0D F6 
1561c     E9 DD E2 F4 
15620     05 0C 06 00 
15624     EB E5 E5 EE | 	byte	$25, $24, $0d, $f6, $e9, $dd, $e2, $f4, $05, $0c, $06, $00, $eb, $e5, $e5, $ee
15628     03 1F 22 1F 
1562c     17 00 EE E9 
15630     E9 F8 05 03 
15634     03 F8 EB E1 | 	byte	$03, $1f, $22, $1f, $17, $00, $ee, $e9, $e9, $f8, $05, $03, $03, $f8, $eb, $e1
15638     E4 F2 09 1A 
1563c     24 26 12 FD 
15640     F1 E3 E0 F2 
15644     01 0C 1C 17 | 	byte	$e4, $f2, $09, $1a, $24, $26, $12, $fd, $f1, $e3, $e0, $f2, $01, $0c, $1c, $17
15648     0C 04 F7 EB 
1564c     F5 FF FC 00 
15650     FE F2 F2 F2 
15654     F7 0B 1C 1C | 	byte	$0c, $04, $f7, $eb, $f5, $ff, $fc, $00, $fe, $f2, $f2, $f2, $f7, $0b, $1c, $1c
15658     23 1B 00 F4 
1565c     E8 E0 E9 F9 
15660     04 0A 04 FA 
15664     EB E7 E8 F4 | 	byte	$23, $1b, $00, $f4, $e8, $e0, $e9, $f9, $04, $0a, $04, $fa, $eb, $e7, $e8, $f4
15668     0B 1F 1F 1A 
1566c     10 FD ED EB 
15670     F1 FE 03 04 
15674     FD F3 E7 E1 | 	byte	$0b, $1f, $1f, $1a, $10, $fd, $ed, $eb, $f1, $fe, $03, $04, $fd, $f3, $e7, $e1
15678     E8 FA 0D 1C 
1567c     25 20 0E FA 
15680     ED E3 E5 F5 
15684     02 0D 19 13 | 	byte	$e8, $fa, $0d, $1c, $25, $20, $0e, $fa, $ed, $e3, $e5, $f5, $02, $0d, $19, $13
15688     0C 03 F7 EF 
1568c     FA FC F5 FF 
15690     F6 F2 F6 F6 
15694     00 14 19 1B | 	byte	$0c, $03, $f7, $ef, $fa, $fc, $f5, $ff, $f6, $f2, $f6, $f6, $00, $14, $19, $1b
15698     20 10 FD F5 
1569c     E7 E5 F0 FB 
156a0     03 09 00 F6 
156a4     ED E8 EE FD | 	byte	$20, $10, $fd, $f5, $e7, $e5, $f0, $fb, $03, $09, $00, $f6, $ed, $e8, $ee, $fd
156a8     0C 1E 1B 12 
156ac     0B F8 ED F1 
156b0     F6 00 04 03 
156b4     F7 F0 E4 E2 | 	byte	$0c, $1e, $1b, $12, $0b, $f8, $ed, $f1, $f6, $00, $04, $03, $f7, $f0, $e4, $e2
156b8     EE 00 10 1F 
156bc     23 1B 05 F7 
156c0     EA E4 EA F9 
156c4     04 0F 17 10 | 	byte	$ee, $00, $10, $1f, $23, $1b, $05, $f7, $ea, $e4, $ea, $f9, $04, $0f, $17, $10
156c8     0A 02 F6 F5 
156cc     FD F7 F4 F8 
156d0     F0 F2 FA FA 
156d4     09 1A 17 1A | 	byte	$0a, $02, $f6, $f5, $fd, $f7, $f4, $f8, $f0, $f2, $fa, $fa, $09, $1a, $17, $1a
156d8     1B 03 FC F4 
156dc     E8 EC F7 FC 
156e0     05 04 FA F4 
156e4     ED EA F6 01 | 	byte	$1b, $03, $fc, $f4, $e8, $ec, $f7, $fc, $05, $04, $fa, $f4, $ed, $ea, $f6, $01
156e8     0F 1E 16 0C 
156ec     09 F6 EF F7 
156f0     F9 01 01 00 
156f4     F0 EF E3 E4 | 	byte	$0f, $1e, $16, $0c, $09, $f6, $ef, $f7, $f9, $01, $01, $00, $f0, $ef, $e3, $e4
156f8     F7 06 12 20 
156fc     21 11 00 F4 
15700     E8 E9 F1 FD 
15704     06 10 11 0D | 	byte	$f7, $06, $12, $20, $21, $11, $00, $f4, $e8, $e9, $f1, $fd, $06, $10, $11, $0d
15708     09 00 FA FC 
1570c     FF F2 F5 F1 
15710     EC F4 FB 01 
15714     12 1B 18 18 | 	byte	$09, $00, $fa, $fc, $ff, $f2, $f5, $f1, $ec, $f4, $fb, $01, $12, $1b, $18, $18
15718     10 00 F9 F2 
1571c     ED F2 FB FE 
15720     05 00 F6 F1 
15724     EC ED F9 05 | 	byte	$10, $00, $f9, $f2, $ed, $f2, $fb, $fe, $05, $00, $f6, $f1, $ec, $ed, $f9, $05
15728     13 1D 12 0C 
1572c     03 F2 F1 FA 
15730     FB FD 04 FA 
15734     EF F0 E8 EB | 	byte	$13, $1d, $12, $0c, $03, $f2, $f1, $fa, $fb, $fd, $04, $fa, $ef, $f0, $e8, $eb
15738     00 0A 10 20 
1573c     18 06 00 F1 
15740     E8 F1 F4 FD 
15744     09 0D 0B 0F | 	byte	$00, $0a, $10, $20, $18, $06, $00, $f1, $e8, $f1, $f4, $fd, $09, $0d, $0b, $0f
15748     08 01 00 00 
1574c     FD F0 F0 EA 
15750     EB F4 FF 09 
15754     19 1C 18 13 | 	byte	$08, $01, $00, $00, $fd, $f0, $f0, $ea, $eb, $f4, $ff, $09, $19, $1c, $18, $13
15758     09 F9 F4 F3 
1575c     F1 F7 00 00 
15760     04 FC F2 EC 
15764     EC EF FF 0B | 	byte	$09, $f9, $f4, $f3, $f1, $f7, $00, $00, $04, $fc, $f2, $ec, $ec, $ef, $ff, $0b
15768     17 1C 10 08 
1576c     00 F0 F2 FC 
15770     F9 F9 02 F3 
15774     F0 F5 EA F5 | 	byte	$17, $1c, $10, $08, $00, $f0, $f2, $fc, $f9, $f9, $02, $f3, $f0, $f5, $ea, $f5
15778     09 07 11 1D 
1577c     0B 02 00 ED 
15780     EF F8 F5 00 
15784     0B 05 0B 10 | 	byte	$09, $07, $11, $1d, $0b, $02, $00, $ed, $ef, $f8, $f5, $00, $0b, $05, $0b, $10
15788     07 05 06 FF 
1578c     FA EC E9 E6 
15790     EC F5 05 11 
15794     1B 1E 14 0D | 	byte	$07, $05, $06, $ff, $fa, $ec, $e9, $e6, $ec, $f5, $05, $11, $1b, $1e, $14, $0d
15798     01 F3 F2 F6 
1579c     F4 FD 04 00 
157a0     03 F6 EF EB 
157a4     EC F1 02 0F | 	byte	$01, $f3, $f2, $f6, $f4, $fd, $04, $00, $03, $f6, $ef, $eb, $ec, $f1, $02, $0f
157a8     17 1A 0F 04 
157ac     FC EE F4 FC 
157b0     F2 FE FF F3 
157b4     F5 F9 EF 00 | 	byte	$17, $1a, $0f, $04, $fc, $ee, $f4, $fc, $f2, $fe, $ff, $f3, $f5, $f9, $ef, $00
157b8     09 03 11 16 
157bc     00 04 FC EF 
157c0     F6 F9 F4 01 
157c4     07 01 0E 0E | 	byte	$09, $03, $11, $16, $00, $04, $fc, $ef, $f6, $f9, $f4, $01, $07, $01, $0e, $0e
157c8     07 0C 08 FE 
157cc     F8 E8 E4 E6 
157d0     EB FB 0C 14 
157d4     1F 1C 0F 08 | 	byte	$07, $0c, $08, $fe, $f8, $e8, $e4, $e6, $eb, $fb, $0c, $14, $1f, $1c, $0f, $08
157d8     FE F0 F4 F8 
157dc     F8 02 06 00 
157e0     02 F1 EC EA 
157e4     EC F6 08 11 | 	byte	$fe, $f0, $f4, $f8, $f8, $02, $06, $00, $02, $f1, $ec, $ea, $ec, $f6, $08, $11
157e8     19 18 0B 02 
157ec     FA ED F7 F8 
157f0     F2 FE FC F4 
157f4     FB FB F7 08 | 	byte	$19, $18, $0b, $02, $fa, $ed, $f7, $f8, $f2, $fe, $fc, $f4, $fb, $fb, $f7, $08
157f8     05 02 0F 08 
157fc     00 03 FB F5 
15800     FC F8 F7 04 
15804     00 02 0F 0B | 	byte	$05, $02, $0f, $08, $00, $03, $fb, $f5, $fc, $f8, $f7, $04, $00, $02, $0f, $0b
15808     0A 10 05 FF 
1580c     F5 E4 E2 E6 
15810     EC 01 0F 16 
15814     21 19 0B 05 | 	byte	$0a, $10, $05, $ff, $f5, $e4, $e2, $e6, $ec, $01, $0f, $16, $21, $19, $0b, $05
15818     F7 F0 F7 F8 
1581c     FC 07 04 01 
15820     01 ED EB EA 
15824     EC FA 0B 12 | 	byte	$f7, $f0, $f7, $f8, $fc, $07, $04, $01, $01, $ed, $eb, $ea, $ec, $fa, $0b, $12
15828     1C 19 08 02 
1582c     F8 ED F6 EF 
15830     F3 F9 FD FA 
15834     01 00 01 06 | 	byte	$1c, $19, $08, $02, $f8, $ed, $f6, $ef, $f3, $f9, $fd, $fa, $01, $00, $01, $06
15838     02 01 05 00 
1583c     00 00 FC FD 
15840     FE F6 FB 00 
15844     FE 04 0D 0D | 	byte	$02, $01, $05, $00, $00, $00, $fc, $fd, $fe, $f6, $fb, $00, $fe, $04, $0d, $0d
15848     11 10 05 FF 
1584c     EF E3 E1 E4 
15850     F2 05 0F 1B 
15854     22 14 09 01 | 	byte	$11, $10, $05, $ff, $ef, $e3, $e1, $e4, $f2, $05, $0f, $1b, $22, $14, $09, $01
15858     F1 F2 F6 F8 
1585c     00 08 04 04 
15860     FE EB EC E8 
15864     EB FC 0C 13 | 	byte	$f1, $f2, $f6, $f8, $00, $08, $04, $04, $fe, $eb, $ec, $e8, $eb, $fc, $0c, $13
15868     1F 16 07 01 
1586c     F6 EC ED EF 
15870     EE FA 00 00 
15874     08 09 03 02 | 	byte	$1f, $16, $07, $01, $f6, $ec, $ed, $ef, $ee, $fa, $00, $00, $08, $09, $03, $02
15878     00 FB FC 01 
1587c     00 00 02 00 
15880     FC F9 F9 FC 
15884     00 05 0C 12 | 	byte	$00, $fb, $fc, $01, $00, $00, $02, $00, $fc, $f9, $f9, $fc, $00, $05, $0c, $12
15888     12 0D 04 FB 
1588c     E9 E5 E0 E7 
15890     F8 05 10 1C 
15894     1D 11 09 FE | 	byte	$12, $0d, $04, $fb, $e9, $e5, $e0, $e7, $f8, $05, $10, $1c, $1d, $11, $09, $fe
15898     F2 F4 F6 F9 
1589c     03 08 05 05 
158a0     FC EA EB E7 
158a4     ED FD 0C 16 | 	byte	$f2, $f4, $f6, $f9, $03, $08, $05, $05, $fc, $ea, $eb, $e7, $ed, $fd, $0c, $16
158a8     20 15 08 01 
158ac     F2 E2 E8 EA 
158b0     ED FE 07 07 
158b4     13 0D FF 00 | 	byte	$20, $15, $08, $01, $f2, $e2, $e8, $ea, $ed, $fe, $07, $07, $13, $0d, $ff, $00
158b8     FB EF FC 00 
158bc     FF 06 05 FE 
158c0     FD F9 F4 FE 
158c4     01 05 11 15 | 	byte	$fb, $ef, $fc, $00, $ff, $06, $05, $fe, $fd, $f9, $f4, $fe, $01, $05, $11, $15
158c8     0E 0A 00 F9 
158cc     EB E6 E3 EE 
158d0     FA 05 10 19 
158d4     1A 10 06 00 | 	byte	$0e, $0a, $00, $f9, $eb, $e6, $e3, $ee, $fa, $05, $10, $19, $1a, $10, $06, $00
158d8     F3 F2 F6 F9 
158dc     01 09 06 06 
158e0     00 ED EA E8 
158e4     EC FC 0B 17 | 	byte	$f3, $f2, $f6, $f9, $01, $09, $06, $06, $00, $ed, $ea, $e8, $ec, $fc, $0b, $17
158e8     20 18 09 02 
158ec     EC DB E5 E3 
158f0     F0 06 0C 10 
158f4     1C 07 FD FF | 	byte	$20, $18, $09, $02, $ec, $db, $e5, $e3, $f0, $06, $0c, $10, $1c, $07, $fd, $ff
158f8     EF EF FF FE 
158fc     03 0B 01 FD 
15900     FE F2 F7 02 
15904     02 0B 15 0F | 	byte	$ef, $ef, $ff, $fe, $03, $0b, $01, $fd, $fe, $f2, $f7, $02, $02, $0b, $15, $0f
15908     0B 06 FB FA 
1590c     EE E9 ED F1 
15910     F7 04 0A 14 
15914     1B 0E 09 04 | 	byte	$0b, $06, $fb, $fa, $ee, $e9, $ed, $f1, $f7, $04, $0a, $14, $1b, $0e, $09, $04
15918     F5 F2 F6 F5 
1591c     00 09 06 09 
15920     00 EF E9 E8 
15924     E9 FD 0C 17 | 	byte	$f5, $f2, $f6, $f5, $00, $09, $06, $09, $00, $ef, $e9, $e8, $e9, $fd, $0c, $17
15928     23 18 09 00 
1592c     E0 D9 DF E6 
15930     F8 0E 14 1C 
15934     17 02 FB F5 | 	byte	$23, $18, $09, $00, $e0, $d9, $df, $e6, $f8, $0e, $14, $1c, $17, $02, $fb, $f5
15938     EB F4 FF 01 
1593c     0A 08 FD FE 
15940     F9 F1 FE 05 
15944     06 12 11 09 | 	byte	$eb, $f4, $ff, $01, $0a, $08, $fd, $fe, $f9, $f1, $fe, $05, $06, $12, $11, $09
15948     07 FF FA FD 
1594c     F0 F3 F4 F0 
15950     F6 00 02 11 
15954     17 0F 0F 08 | 	byte	$07, $ff, $fa, $fd, $f0, $f3, $f4, $f0, $f6, $00, $02, $11, $17, $0f, $0f, $08
15958     F5 F3 F3 F1 
1595c     FE 07 09 0D 
15960     00 F0 EA E4 
15964     E8 FD 0B 1A | 	byte	$f5, $f3, $f3, $f1, $fe, $07, $09, $0d, $00, $f0, $ea, $e4, $e8, $fd, $0b, $1a
15968     24 17 09 F3 
1596c     DE D3 DF EB 
15970     00 16 1E 1B 
15974     10 FE F2 ED | 	byte	$24, $17, $09, $f3, $de, $d3, $df, $eb, $00, $16, $1e, $1b, $10, $fe, $f2, $ed
15978     EF F7 03 09 
1597c     0A 02 FC F6 
15980     F3 F6 01 0A 
15984     12 13 0C 03 | 	byte	$ef, $f7, $03, $09, $0a, $02, $fc, $f6, $f3, $f6, $01, $0a, $12, $13, $0c, $03
15988     FE F9 FB 00 
1598c     FA FD F7 F1 
15990     F3 F9 FF 0D 
15994     17 16 13 09 | 	byte	$fe, $f9, $fb, $00, $fa, $fd, $f7, $f1, $f3, $f9, $ff, $0d, $17, $16, $13, $09
15998     F7 EF EE EF 
1599c     FD 09 0D 0F 
159a0     01 F3 E6 E1 
159a4     E8 FA 0D 1F | 	byte	$f7, $ef, $ee, $ef, $fd, $09, $0d, $0f, $01, $f3, $e6, $e1, $e8, $fa, $0d, $1f
159a8     25 18 00 EE 
159ac     D6 D2 E1 F4 
159b0     0A 22 20 14 
159b4     0B F4 E7 EF | 	byte	$25, $18, $00, $ee, $d6, $d2, $e1, $f4, $0a, $22, $20, $14, $0b, $f4, $e7, $ef
159b8     F1 FC 0F 0C 
159bc     06 00 F6 ED 
159c0     F6 FA 04 14 
159c4     15 0F 09 FC | 	byte	$f1, $fc, $0f, $0c, $06, $00, $f6, $ed, $f6, $fa, $04, $14, $15, $0f, $09, $fc
159c8     F7 F7 FC 03 
159cc     02 00 F9 F0 
159d0     EC F3 FD 0C 
159d4     1B 1B 16 0C | 	byte	$f7, $f7, $fc, $03, $02, $00, $f9, $f0, $ec, $f3, $fd, $0c, $1b, $1b, $16, $0c
159d8     F6 EB EB EC 
159dc     FA 0C 10 11 
159e0     03 F3 E3 E1 
159e4     E9 FC 0F 21 | 	byte	$f6, $eb, $eb, $ec, $fa, $0c, $10, $11, $03, $f3, $e3, $e1, $e9, $fc, $0f, $21
159e8     25 11 FD E7 
159ec     D3 D6 EA FC 
159f0     15 28 1A 10 
159f4     01 E5 E7 F1 | 	byte	$25, $11, $fd, $e7, $d3, $d6, $ea, $fc, $15, $28, $1a, $10, $01, $e5, $e7, $f1
159f8     F3 07 15 0A 
159fc     05 FE EA ED 
15a00     F7 FC 0E 1B 
15a04     14 0F 03 F3 | 	byte	$f3, $07, $15, $0a, $05, $fe, $ea, $ed, $f7, $fc, $0e, $1b, $14, $0f, $03, $f3
15a08     F3 F5 FD 0D 
15a0c     07 04 FB EC 
15a10     E8 F0 F8 0E 
15a14     1E 1C 19 0D | 	byte	$f3, $f5, $fd, $0d, $07, $04, $fb, $ec, $e8, $f0, $f8, $0e, $1e, $1c, $19, $0d
15a18     F1 EA E9 EA 
15a1c     FC 0E 12 14 
15a20     03 F0 E2 E0 
15a24     E7 FE 12 24 | 	byte	$f1, $ea, $e9, $ea, $fc, $0e, $12, $14, $03, $f0, $e2, $e0, $e7, $fe, $12, $24
15a28     20 09 F9 E0 
15a2c     D4 DD F1 04 
15a30     20 25 17 0C 
15a34     F6 E1 E9 F0 | 	byte	$20, $09, $f9, $e0, $d4, $dd, $f1, $04, $20, $25, $17, $0c, $f6, $e1, $e9, $f0
15a38     FB 10 17 0A 
15a3c     05 F4 E7 ED 
15a40     F5 01 18 1B 
15a44     14 0D FD EF | 	byte	$fb, $10, $17, $0a, $05, $f4, $e7, $ed, $f5, $01, $18, $1b, $14, $0d, $fd, $ef
15a48     F1 F4 02 0F 
15a4c     09 08 FA EA 
15a50     E7 ED FA 12 
15a54     1C 1D 1B 08 | 	byte	$f1, $f4, $02, $0f, $09, $08, $fa, $ea, $e7, $ed, $fa, $12, $1c, $1d, $1b, $08
15a58     F1 EA E7 ED 
15a5c     00 0E 13 15 
15a60     00 F0 E3 DF 
15a64     E8 00 15 24 | 	byte	$f1, $ea, $e7, $ed, $00, $0e, $13, $15, $00, $f0, $e3, $df, $e8, $00, $15, $24
15a68     18 08 F3 DE 
15a6c     D5 E4 F7 0E 
15a70     22 20 14 05 
15a74     EC E3 E9 F2 | 	byte	$18, $08, $f3, $de, $d5, $e4, $f7, $0e, $22, $20, $14, $05, $ec, $e3, $e9, $f2
15a78     02 15 14 0C 
15a7c     01 EF E9 ED 
15a80     F5 06 19 18 
15a84     15 09 F9 EF | 	byte	$02, $15, $14, $0c, $01, $ef, $e9, $ed, $f5, $06, $19, $18, $15, $09, $f9, $ef
15a88     EF F6 06 0D 
15a8c     0B 07 F9 EA 
15a90     E9 EC FC 12 
15a94     1A 1E 19 01 | 	byte	$ef, $f6, $06, $0d, $0b, $07, $f9, $ea, $e9, $ec, $fc, $12, $1a, $1e, $19, $01
15a98     F1 E9 E5 F0 
15a9c     02 0E 16 13 
15aa0     FE F1 E3 E0 
15aa4     EF 02 14 1F | 	byte	$f1, $e9, $e5, $f0, $02, $0e, $16, $13, $fe, $f1, $e3, $e0, $ef, $02, $14, $1f
15aa8     13 02 F1 DF 
15aac     DA EB FC 13 
15ab0     1F 1D 0F FD 
15ab4     EB E3 EA F6 | 	byte	$13, $02, $f1, $df, $da, $eb, $fc, $13, $1f, $1d, $0f, $fd, $eb, $e3, $ea, $f6
15ab8     07 14 14 0D 
15abc     FD EE EA EC 
15ac0     F7 0A 18 18 
15ac4     13 06 F8 F0 | 	byte	$07, $14, $14, $0d, $fd, $ee, $ea, $ec, $f7, $0a, $18, $18, $13, $06, $f8, $f0
15ac8     EE F9 07 0B 
15acc     0E 05 F7 EB 
15ad0     E9 EE 00 11 
15ad4     19 1D 16 00 | 	byte	$ee, $f9, $07, $0b, $0e, $05, $f7, $eb, $e9, $ee, $00, $11, $19, $1d, $16, $00
15ad8     F2 EA E7 F3 
15adc     03 0D 16 0F 
15ae0     FC F2 E3 E1 
15ae4     F2 03 12 18 | 	byte	$f2, $ea, $e7, $f3, $03, $0d, $16, $0f, $fc, $f2, $e3, $e1, $f2, $03, $12, $18
15ae8     12 FF F2 E3 
15aec     E0 F2 02 11 
15af0     1C 19 08 FA 
15af4     EB E4 EE FC | 	byte	$12, $ff, $f2, $e3, $e0, $f2, $02, $11, $1c, $19, $08, $fa, $eb, $e4, $ee, $fc
15af8     08 14 15 09 
15afc     FC F0 EA EE 
15b00     FB 09 15 17 
15b04     10 04 F9 F0 | 	byte	$08, $14, $15, $09, $fc, $f0, $ea, $ee, $fb, $09, $15, $17, $10, $04, $f9, $f0
15b08     F1 FC 07 09 
15b0c     0D 03 F7 ED 
15b10     EB F2 02 10 
15b14     17 1B 11 FF | 	byte	$f1, $fc, $07, $09, $0d, $03, $f7, $ed, $eb, $f2, $02, $10, $17, $1b, $11, $ff
15b18     F2 EB EA F6 
15b1c     03 0D 15 0B 
15b20     FC F3 E5 E4 
15b24     F5 04 0C 15 | 	byte	$f2, $eb, $ea, $f6, $03, $0d, $15, $0b, $fc, $f3, $e5, $e4, $f5, $04, $0c, $15
15b28     0C FD F5 E8 
15b2c     E7 FA 05 0D 
15b30     19 14 00 F9 
15b34     EA E5 F4 FF | 	byte	$0c, $fd, $f5, $e8, $e7, $fa, $05, $0d, $19, $14, $00, $f9, $ea, $e5, $f4, $ff
15b38     08 15 14 04 
15b3c     FC F0 EB F3 
15b40     FE 09 15 12 
15b44     0C 03 F9 F2 | 	byte	$08, $15, $14, $04, $fc, $f0, $eb, $f3, $fe, $09, $15, $12, $0c, $03, $f9, $f2
15b48     F6 FC 07 07 
15b4c     09 00 F8 EE 
15b50     F0 F6 03 10 
15b54     16 16 0D FD | 	byte	$f6, $fc, $07, $07, $09, $00, $f8, $ee, $f0, $f6, $03, $10, $16, $16, $0d, $fd
15b58     F3 EE ED F9 
15b5c     06 0C 12 0A 
15b60     FC F1 E7 E7 
15b64     F6 02 08 12 | 	byte	$f3, $ee, $ed, $f9, $06, $0c, $12, $0a, $fc, $f1, $e7, $e7, $f6, $02, $08, $12
15b68     05 FD F9 EC 
15b6c     EF 02 03 0B 
15b70     16 07 FD FA 
15b74     E9 ED FB 00 | 	byte	$05, $fd, $f9, $ec, $ef, $02, $03, $0b, $16, $07, $fd, $fa, $e9, $ed, $fb, $00
15b78     08 15 0B 03 
15b7c     FD F1 F0 F9 
15b80     FC 09 11 0C 
15b84     0A 04 F8 F8 | 	byte	$08, $15, $0b, $03, $fd, $f1, $f0, $f9, $fc, $09, $11, $0c, $0a, $04, $f8, $f8
15b88     FA FD 07 05 
15b8c     05 00 F7 F1 
15b90     F5 FA 06 10 
15b94     11 11 09 FA | 	byte	$fa, $fd, $07, $05, $05, $00, $f7, $f1, $f5, $fa, $06, $10, $11, $11, $09, $fa
15b98     F5 F2 F1 FB 
15b9c     07 0A 10 07 
15ba0     F9 F1 EB EC 
15ba4     F9 FD 08 0A | 	byte	$f5, $f2, $f1, $fb, $07, $0a, $10, $07, $f9, $f1, $eb, $ec, $f9, $fd, $08, $0a
15ba8     03 FF FD F3 
15bac     FA 03 01 0B 
15bb0     0C 00 FD F7 
15bb4     EC F4 FE FF | 	byte	$03, $ff, $fd, $f3, $fa, $03, $01, $0b, $0c, $00, $fd, $f7, $ec, $f4, $fe, $ff
15bb8     0C 11 07 05 
15bbc     FD F1 F5 FA 
15bc0     FB 08 0C 09 
15bc4     0A 03 FC FD | 	byte	$0c, $11, $07, $05, $fd, $f1, $f5, $fa, $fb, $08, $0c, $09, $0a, $03, $fc, $fd
15bc8     FB FE 05 00 
15bcc     01 FD F6 F7 
15bd0     FA FD 09 0E 
15bd4     0C 0D 06 F9 | 	byte	$fb, $fe, $05, $00, $01, $fd, $f6, $f7, $fa, $fd, $09, $0e, $0c, $0d, $06, $f9
15bd8     F7 F6 F4 00 
15bdc     07 08 0D 02 
15be0     F8 F1 ED EF 
15be4     F5 FE 03 07 | 	byte	$f7, $f6, $f4, $00, $07, $08, $0d, $02, $f8, $f1, $ed, $ef, $f5, $fe, $03, $07
15be8     04 03 00 FD 
15bec     FF 00 00 03 
15bf0     01 FF FB F8 
15bf4     F4 FA FE 02 | 	byte	$04, $03, $00, $fd, $ff, $00, $00, $03, $01, $ff, $fb, $f8, $f4, $fa, $fe, $02
15bf8     09 0B 08 04 
15bfc     FD F9 F9 F9 
15c00     FC 02 07 08 
15c04     08 06 01 FF | 	byte	$09, $0b, $08, $04, $fd, $f9, $f9, $f9, $fc, $02, $07, $08, $08, $06, $01, $ff
15c08     FD FF 00 FE 
15c0c     00 FB FA FB 
15c10     FD 00 08 09 
15c14     08 07 02 FA | 	byte	$fd, $ff, $00, $fe, $00, $fb, $fa, $fb, $fd, $00, $08, $09, $08, $07, $02, $fa
15c18     FA FA FB 00 
15c1c     05 06 09 FF 
15c20     F8 F2 F0 EC 
15c24     F5 FB 00 07 | 	byte	$fa, $fa, $fb, $00, $05, $06, $09, $ff, $f8, $f2, $f0, $ec, $f5, $fb, $00, $07
15c28     07 07 08 00 
15c2c     FE 00 FC FB 
15c30     00 FC FA FF 
15c34     F9 FA 00 00 | 	byte	$07, $07, $08, $00, $fe, $00, $fc, $fb, $00, $fc, $fa, $ff, $f9, $fa, $00, $00
15c38     03 0C 07 03 
15c3c     02 FB F8 F9 
15c40     F8 00 05 07 
15c44     09 0B 03 00 | 	byte	$03, $0c, $07, $03, $02, $fb, $f8, $f9, $f8, $00, $05, $07, $09, $0b, $03, $00
15c48     FE FC FF FB 
15c4c     FE FE FE FF 
15c50     00 00 05 07 
15c54     03 03 02 FD | 	byte	$fe, $fc, $ff, $fb, $fe, $fe, $fe, $ff, $00, $00, $05, $07, $03, $03, $02, $fd
15c58     FD 00 FE 02 
15c5c     05 04 04 FC 
15c60     F8 F3 ED EC 
15c64     F3 FA 03 0A | 	byte	$fd, $00, $fe, $02, $05, $04, $04, $fc, $f8, $f3, $ed, $ec, $f3, $fa, $03, $0a
15c68     0A 0F 0C 00 
15c6c     FF FD F4 FA 
15c70     FD F9 00 00 
15c74     F9 FD 00 FE | 	byte	$0a, $0f, $0c, $00, $ff, $fd, $f4, $fa, $fd, $f9, $00, $00, $f9, $fd, $00, $fe
15c78     05 0B 06 09 
15c7c     04 FB F9 F6 
15c80     F6 00 03 07 
15c84     0E 0B 05 01 | 	byte	$05, $0b, $06, $09, $04, $fb, $f9, $f6, $f6, $00, $03, $07, $0e, $0b, $05, $01
15c88     FB F9 FE F9 
15c8c     FF 00 00 01 
15c90     02 00 01 02 
15c94     FF 01 02 FF | 	byte	$fb, $f9, $fe, $f9, $ff, $00, $00, $01, $02, $00, $01, $02, $ff, $01, $02, $ff
15c98     01 01 00 02 
15c9c     04 01 00 FB 
15ca0     F8 EF EB ED 
15ca4     F1 FC 08 0D | 	byte	$01, $01, $00, $02, $04, $01, $00, $fb, $f8, $ef, $eb, $ed, $f1, $fc, $08, $0d
15ca8     10 13 07 00 
15cac     FD F4 F4 FA 
15cb0     FB FE 01 FF 
15cb4     FB FF FC 00 | 	byte	$10, $13, $07, $00, $fd, $f4, $f4, $fa, $fb, $fe, $01, $ff, $fb, $ff, $fc, $00
15cb8     07 09 0A 0B 
15cbc     02 FC F7 F2 
15cc0     F6 FF 02 0C 
15cc4     0E 0A 06 00 | 	byte	$07, $09, $0a, $0b, $02, $fc, $f7, $f2, $f6, $ff, $02, $0c, $0e, $0a, $06, $00
15cc8     F8 F9 FB FA 
15ccc     00 01 02 03 
15cd0     00 FE 00 00 
15cd4     FE 00 03 00 | 	byte	$f8, $f9, $fb, $fa, $00, $01, $02, $03, $00, $fe, $00, $00, $fe, $00, $03, $00
15cd8     03 03 00 01 
15cdc     02 00 FF FB 
15ce0     F3 EA EB EB 
15ce4     F3 02 0D 12 | 	byte	$03, $03, $00, $01, $02, $00, $ff, $fb, $f3, $ea, $eb, $eb, $f3, $02, $0d, $12
15ce8     16 0F 04 FC 
15cec     F3 F2 F5 F9 
15cf0     FF 00 00 FF 
15cf4     FC F9 FD 00 | 	byte	$16, $0f, $04, $fc, $f3, $f2, $f5, $f9, $ff, $00, $00, $ff, $fc, $f9, $fd, $00
15cf8     06 0C 0E 09 
15cfc     01 FA F4 F3 
15d00     F7 FE 07 0C 
15d04     0D 0A 02 FC | 	byte	$06, $0c, $0e, $09, $01, $fa, $f4, $f3, $f7, $fe, $07, $0c, $0d, $0a, $02, $fc
15d08     F7 F8 FD 00 
15d0c     01 06 03 00 
15d10     00 FB FA FF 
15d14     FD 00 07 04 | 	byte	$f7, $f8, $fd, $00, $01, $06, $03, $00, $00, $fb, $fa, $ff, $fd, $00, $07, $04
15d18     04 06 01 00 
15d1c     02 00 FC F6 
15d20     EE E8 E9 EE 
15d24     FA 07 15 17 | 	byte	$04, $06, $01, $00, $02, $00, $fc, $f6, $ee, $e8, $e9, $ee, $fa, $07, $15, $17
15d28     12 0D 00 F4 
15d2c     F2 F1 F6 FE 
15d30     01 00 01 FE 
15d34     F8 FC FE 00 | 	byte	$12, $0d, $00, $f4, $f2, $f1, $f6, $fe, $01, $00, $01, $fe, $f8, $fc, $fe, $00
15d38     0A 0E 0A 08 
15d3c     00 F8 F6 F4 
15d40     F9 03 08 0A 
15d44     0B 05 FF FB | 	byte	$0a, $0e, $0a, $08, $00, $f8, $f6, $f4, $f9, $03, $08, $0a, $0b, $05, $ff, $fb
15d48     F7 FB 00 02 
15d4c     04 07 01 00 
15d50     FC F8 F9 FE 
15d54     FE 03 08 05 | 	byte	$f7, $fb, $00, $02, $04, $07, $01, $00, $fc, $f8, $f9, $fe, $fe, $03, $08, $05
15d58     06 07 00 00 
15d5c     01 00 F6 F1 
15d60     EC E6 EB F6 
15d64     00 10 1A 12 | 	byte	$06, $07, $00, $00, $01, $00, $f6, $f1, $ec, $e6, $eb, $f6, $00, $10, $1a, $12
15d68     10 07 F6 F3 
15d6c     F3 F1 FB 02 
15d70     00 00 01 F9 
15d74     F9 FD FE 05 | 	byte	$10, $07, $f6, $f3, $f3, $f1, $fb, $02, $00, $00, $01, $f9, $f9, $fd, $fe, $05
15d78     0C 0B 09 03 
15d7c     FD F9 F8 F8 
15d80     00 04 07 0A 
15d84     06 00 FE F9 | 	byte	$0c, $0b, $09, $03, $fd, $f9, $f8, $f8, $00, $04, $07, $0a, $06, $00, $fe, $f9
15d88     F9 00 01 05 
15d8c     06 05 00 FE 
15d90     FA F8 FA FD 
15d94     00 04 07 06 | 	byte	$f9, $00, $01, $05, $06, $05, $00, $fe, $fa, $f8, $fa, $fd, $00, $04, $07, $06
15d98     06 06 01 00 
15d9c     00 FD F1 EF 
15da0     E8 E7 F1 FC 
15da4     05 15 17 0F | 	byte	$06, $06, $01, $00, $00, $fd, $f1, $ef, $e8, $e7, $f1, $fc, $05, $15, $17, $0f
15da8     0C FF F4 F4 
15dac     F3 F5 00 01 
15db0     00 01 FE F9 
15db4     FC FD 00 07 | 	byte	$0c, $ff, $f4, $f4, $f3, $f5, $00, $01, $00, $01, $fe, $f9, $fc, $fd, $00, $07
15db8     0A 08 06 00 
15dbc     FB FA FA FE 
15dc0     03 05 06 05 
15dc4     00 FD FB FA | 	byte	$0a, $08, $06, $00, $fb, $fa, $fa, $fe, $03, $05, $06, $05, $00, $fd, $fb, $fa
15dc8     FD 00 05 08 
15dcc     05 04 FF FB 
15dd0     F8 F8 FA 00 
15dd4     00 03 07 06 | 	byte	$fd, $00, $05, $08, $05, $04, $ff, $fb, $f8, $f8, $fa, $00, $00, $03, $07, $06
15dd8     05 05 02 00 
15ddc     FF F9 EE EB 
15de0     EA EC F6 02 
15de4     0C 13 15 0D | 	byte	$05, $05, $02, $00, $ff, $f9, $ee, $eb, $ea, $ec, $f6, $02, $0c, $13, $15, $0d
15de8     03 FC F3 F2 
15dec     F6 FA 00 03 
15df0     00 FF FF FA 
15df4     FC 00 02 05 | 	byte	$03, $fc, $f3, $f2, $f6, $fa, $00, $03, $00, $ff, $ff, $fa, $fc, $00, $02, $05
15df8     08 04 01 FF 
15dfc     FC FC 00 00 
15e00     05 06 02 01 
15e04     FE FA FC FD | 	byte	$08, $04, $01, $ff, $fc, $fc, $00, $00, $05, $06, $02, $01, $fe, $fa, $fc, $fd
15e08     FF 05 07 07 
15e0c     04 02 FC FA 
15e10     F8 F8 FB 00 
15e14     02 04 07 07 | 	byte	$ff, $05, $07, $07, $04, $02, $fc, $fa, $f8, $f8, $fb, $00, $02, $04, $07, $07
15e18     04 04 03 FE 
15e1c     FA F8 EB ED 
15e20     EF F1 FD 09 
15e24     09 12 13 04 | 	byte	$04, $04, $03, $fe, $fa, $f8, $eb, $ed, $ef, $f1, $fd, $09, $09, $12, $13, $04
15e28     00 FD F1 F6 
15e2c     FA F8 00 04 
15e30     FE 00 00 FB 
15e34     00 02 00 05 | 	byte	$00, $fd, $f1, $f6, $fa, $f8, $00, $04, $fe, $00, $00, $fb, $00, $02, $00, $05
15e38     04 00 00 FF 
15e3c     FC 01 03 02 
15e40     07 03 00 00 
15e44     FB F9 FE FF | 	byte	$04, $00, $00, $ff, $fc, $01, $03, $02, $07, $03, $00, $00, $fb, $f9, $fe, $ff
15e48     00 07 07 08 
15e4c     04 00 FC F8 
15e50     F7 F9 FC 00 
15e54     05 05 07 08 | 	byte	$00, $07, $07, $08, $04, $00, $fc, $f8, $f7, $f9, $fc, $00, $05, $05, $07, $08
15e58     04 04 00 F9 
15e5c     F8 F5 ED F2 
15e60     F4 F8 01 06 
15e64     08 0F 0B 03 | 	byte	$04, $04, $00, $f9, $f8, $f5, $ed, $f2, $f4, $f8, $01, $06, $08, $0f, $0b, $03
15e68     01 FB F5 F9 
15e6c     F8 F8 00 00 
15e70     00 03 00 FF 
15e74     02 00 FF 01 | 	byte	$01, $fb, $f5, $f9, $f8, $f8, $00, $00, $00, $03, $00, $ff, $02, $00, $ff, $01
15e78     00 FF 00 00 
15e7c     01 04 03 04 
15e80     05 01 FF FD 
15e84     FB FB FE 00 | 	byte	$00, $ff, $00, $00, $01, $04, $03, $04, $05, $01, $ff, $fd, $fb, $fb, $fe, $00
15e88     02 06 08 08 
15e8c     03 00 FD F7 
15e90     F7 FA FC 00 
15e94     07 06 07 07 | 	byte	$02, $06, $08, $08, $03, $00, $fd, $f7, $f7, $fa, $fc, $00, $07, $06, $07, $07
15e98     03 00 FB F8 
15e9c     F6 F8 F3 F6 
15ea0     FA FD FF 03 
15ea4     06 07 09 04 | 	byte	$03, $00, $fb, $f8, $f6, $f8, $f3, $f6, $fa, $fd, $ff, $03, $06, $07, $09, $04
15ea8     00 FE F9 F7 
15eac     F7 F9 FE 01 
15eb0     01 04 03 00 
15eb4     00 00 FC FF | 	byte	$00, $fe, $f9, $f7, $f7, $f9, $fe, $01, $01, $04, $03, $00, $00, $00, $fc, $ff
15eb8     00 FF 00 02 
15ebc     02 03 03 02 
15ec0     03 01 FE FE 
15ec4     FD FC FE 00 | 	byte	$00, $ff, $00, $02, $02, $03, $03, $02, $03, $01, $fe, $fe, $fd, $fc, $fe, $00
15ec8     01 06 07 07 
15ecc     04 FF FC F7 
15ed0     F6 F9 FE 02 
15ed4     08 08 07 07 | 	byte	$01, $06, $07, $07, $04, $ff, $fc, $f7, $f6, $f9, $fe, $02, $08, $08, $07, $07
15ed8     00 F8 FA F4 
15edc     F8 FD FA FD 
15ee0     00 FA FB 00 
15ee4     00 06 0A 05 | 	byte	$00, $f8, $fa, $f4, $f8, $fd, $fa, $fd, $00, $fa, $fb, $00, $00, $06, $0a, $05
15ee8     04 00 F7 F6 
15eec     F7 F4 FD 03 
15ef0     02 07 07 00 
15ef4     00 FD F8 FE | 	byte	$04, $00, $f7, $f6, $f7, $f4, $fd, $03, $02, $07, $07, $00, $00, $fd, $f8, $fe
15ef8     00 00 04 04 
15efc     01 03 00 00 
15f00     02 00 00 01 
15f04     FE FD FF FD | 	byte	$00, $00, $04, $04, $01, $03, $00, $00, $02, $00, $00, $01, $fe, $fd, $ff, $fd
15f08     00 05 06 09 
15f0c     06 FF FC F7 
15f10     F4 F9 00 02 
15f14     0B 0B 07 04 | 	byte	$00, $05, $06, $09, $06, $ff, $fc, $f7, $f4, $f9, $00, $02, $0b, $0b, $07, $04
15f18     FA F5 F4 F6 
15f1c     FC 01 01 01 
15f20     FE F8 F8 F9 
15f24     FD 06 09 0A | 	byte	$fa, $f5, $f4, $f6, $fc, $01, $01, $01, $fe, $f8, $f8, $f9, $fd, $06, $09, $0a
15f28     09 00 F7 F5 
15f2c     F1 F4 FF 03 
15f30     06 0C 06 00 
15f34     FD F8 F7 FE | 	byte	$09, $00, $f7, $f5, $f1, $f4, $ff, $03, $06, $0c, $06, $00, $fd, $f8, $f7, $fe
15f38     00 03 08 04 
15f3c     01 00 FD FF 
15f40     01 01 03 04 
15f44     00 FE FC FB | 	byte	$00, $03, $08, $04, $01, $00, $fd, $ff, $01, $01, $03, $04, $00, $fe, $fc, $fb
15f48     FF 02 06 0A 
15f4c     07 00 FC F5 
15f50     F3 FA FF 04 
15f54     0E 0D 05 FF | 	byte	$ff, $02, $06, $0a, $07, $00, $fc, $f5, $f3, $fa, $ff, $04, $0e, $0d, $05, $ff
15f58     F8 EF F2 FA 
15f5c     00 07 08 02 
15f60     FC F7 F1 F4 
15f64     FF 05 0B 0F | 	byte	$f8, $ef, $f2, $fa, $00, $07, $08, $02, $fc, $f7, $f1, $f4, $ff, $05, $0b, $0f
15f68     0A FF F8 F2 
15f6c     F0 F7 FF 05 
15f70     0B 0B 05 FE 
15f74     F9 F6 F8 FF | 	byte	$0a, $ff, $f8, $f2, $f0, $f7, $ff, $05, $0b, $0b, $05, $fe, $f9, $f6, $f8, $ff
15f78     04 08 08 05 
15f7c     00 FD FB FC 
15f80     00 05 07 06 
15f84     03 FD FA FA | 	byte	$04, $08, $08, $05, $00, $fd, $fb, $fc, $00, $05, $07, $06, $03, $fd, $fa, $fa
15f88     FD 02 08 0B 
15f8c     08 00 FB F3 
15f90     F3 F9 00 08 
15f94     10 0D 02 FE | 	byte	$fd, $02, $08, $0b, $08, $00, $fb, $f3, $f3, $f9, $00, $08, $10, $0d, $02, $fe
15f98     F2 EC F4 FC 
15f9c     04 0C 0A 00 
15fa0     FB F2 ED F6 
15fa4     FE 06 0F 11 | 	byte	$f2, $ec, $f4, $fc, $04, $0c, $0a, $00, $fb, $f2, $ed, $f6, $fe, $06, $0f, $11
15fa8     08 FF F6 EF 
15fac     F0 F7 00 09 
15fb0     0C 0B 03 FB 
15fb4     F6 F5 F8 01 | 	byte	$08, $ff, $f6, $ef, $f0, $f7, $00, $09, $0c, $0b, $03, $fb, $f6, $f5, $f8, $01
15fb8     07 0A 0A 04 
15fbc     FE FA F8 FB 
15fc0     01 07 09 09 
15fc4     03 FD F9 F8 | 	byte	$07, $0a, $0a, $04, $fe, $fa, $f8, $fb, $01, $07, $09, $09, $03, $fd, $f9, $f8
15fc8     FC 01 08 0C 
15fcc     07 00 FA F3 
15fd0     F3 F9 00 0B 
15fd4     12 0B 00 FB | 	byte	$fc, $01, $08, $0c, $07, $00, $fa, $f3, $f3, $f9, $00, $0b, $12, $0b, $00, $fb
15fd8     EE ED F5 FD 
15fdc     09 0E 09 01 
15fe0     FA ED ED F4 
15fe4     FD 0A 12 10 | 	byte	$ee, $ed, $f5, $fd, $09, $0e, $09, $01, $fa, $ed, $ed, $f4, $fd, $0a, $12, $10
15fe8     08 FE F2 EF 
15fec     F1 F7 02 0C 
15ff0     0C 0B 01 F9 
15ff4     F6 F4 F8 03 | 	byte	$08, $fe, $f2, $ef, $f1, $f7, $02, $0c, $0c, $0b, $01, $f9, $f6, $f4, $f8, $03
15ff8     09 0B 0B 02 
15ffc     FC F9 F6 FB 
16000     02 07 0B 0A 
16004     02 FD F8 F6 | 	byte	$09, $0b, $0b, $02, $fc, $f9, $f6, $fb, $02, $07, $0b, $0a, $02, $fd, $f8, $f6
16008     FC 01 08 0D 
1600c     07 00 F9 F2 
16010     F3 FA 01 0D 
16014     13 08 01 F8 | 	byte	$fc, $01, $08, $0d, $07, $00, $f9, $f2, $f3, $fa, $01, $0d, $13, $08, $01, $f8
16018     EC EE F5 FF 
1601c     0C 0D 09 02 
16020     F6 EB EE F4 
16024     FF 0C 12 0F | 	byte	$ec, $ee, $f5, $ff, $0c, $0d, $09, $02, $f6, $eb, $ee, $f4, $ff, $0c, $12, $0f
16028     0A FC F1 F0 
1602c     F1 F8 06 0B 
16030     0C 0B 00 F8 
16034     F6 F3 FA 05 | 	byte	$0a, $fc, $f1, $f0, $f1, $f8, $06, $0b, $0c, $0b, $00, $f8, $f6, $f3, $fa, $05
16038     08 0C 0B 01 
1603c     FB F7 F4 FC 
16040     02 07 0D 0B 
16044     02 FE F7 F6 | 	byte	$08, $0c, $0b, $01, $fb, $f7, $f4, $fc, $02, $07, $0d, $0b, $02, $fe, $f7, $f6
16048     FB 00 07 0D 
1604c     06 00 F8 F2 
16050     F3 FA 02 0E 
16054     10 08 01 F6 | 	byte	$fb, $00, $07, $0d, $06, $00, $f8, $f2, $f3, $fa, $02, $0e, $10, $08, $01, $f6
16058     EC F0 F6 00 
1605c     0E 0C 08 01 
16060     F4 EC F0 F4 
16064     00 0E 10 0E | 	byte	$ec, $f0, $f6, $00, $0e, $0c, $08, $01, $f4, $ec, $f0, $f4, $00, $0e, $10, $0e
16068     09 FA F3 F1 
1606c     F0 FC 07 09 
16070     0C 0A FE F9 
16074     F6 F3 FD 05 | 	byte	$09, $fa, $f3, $f1, $f0, $fc, $07, $09, $0c, $0a, $fe, $f9, $f6, $f3, $fd, $05
16078     08 0C 09 00 
1607c     FC F6 F4 FD 
16080     02 08 0D 0A 
16084     03 FE F7 F6 | 	byte	$08, $0c, $09, $00, $fc, $f6, $f4, $fd, $02, $08, $0d, $0a, $03, $fe, $f7, $f6
16088     FC 00 08 0C 
1608c     06 00 F8 F2 
16090     F4 FB 03 0E 
16094     0C 07 00 F7 | 	byte	$fc, $00, $08, $0c, $06, $00, $f8, $f2, $f4, $fb, $03, $0e, $0c, $07, $00, $f7
16098     EF F3 F9 03 
1609c     0C 09 07 FF 
160a0     F2 EE F1 F6 
160a4     03 0D 0E 0E | 	byte	$ef, $f3, $f9, $03, $0c, $09, $07, $ff, $f2, $ee, $f1, $f6, $03, $0d, $0e, $0e
160a8     05 F9 F5 F2 
160ac     F2 FF 07 08 
160b0     0B 06 FE F9 
160b4     F6 F5 FF 05 | 	byte	$05, $f9, $f5, $f2, $f2, $ff, $07, $08, $0b, $06, $fe, $f9, $f6, $f5, $ff, $05
160b8     08 0B 07 00 
160bc     FC F6 F7 FE 
160c0     02 08 0D 09 
160c4     03 FE F7 F7 | 	byte	$08, $0b, $07, $00, $fc, $f6, $f7, $fe, $02, $08, $0d, $09, $03, $fe, $f7, $f7
160c8     FD 00 08 09 
160cc     04 00 F9 F3 
160d0     F7 FD 03 0B 
160d4     0B 05 00 F6 | 	byte	$fd, $00, $08, $09, $04, $00, $f9, $f3, $f7, $fd, $03, $0b, $0b, $05, $00, $f6
160d8     F2 F5 FB 03 
160dc     0A 07 05 FC 
160e0     F4 F0 F2 FA 
160e4     05 0B 0D 0C | 	byte	$f2, $f5, $fb, $03, $0a, $07, $05, $fc, $f4, $f0, $f2, $fa, $05, $0b, $0d, $0c
160e8     01 F9 F6 F3 
160ec     F6 00 05 07 
160f0     09 04 FE FA 
160f4     F7 F9 00 05 | 	byte	$01, $f9, $f6, $f3, $f6, $00, $05, $07, $09, $04, $fe, $fa, $f7, $f9, $00, $05
160f8     08 09 05 00 
160fc     FB F8 F9 FF 
16100     03 08 0A 08 
16104     02 FE F9 F9 | 	byte	$08, $09, $05, $00, $fb, $f8, $f9, $ff, $03, $08, $0a, $08, $02, $fe, $f9, $f9
16108     FD 01 07 06 
1610c     03 00 F8 F5 
16110     F8 FD 03 08 
16114     09 04 00 F8 | 	byte	$fd, $01, $07, $06, $03, $00, $f8, $f5, $f8, $fd, $03, $08, $09, $04, $00, $f8
16118     F5 F8 FE 02 
1611c     07 05 01 FA 
16120     F4 F2 F5 FD 
16124     06 0A 0C 09 | 	byte	$f5, $f8, $fe, $02, $07, $05, $01, $fa, $f4, $f2, $f5, $fd, $06, $0a, $0c, $09
16128     01 FA F7 F5 
1612c     F9 00 04 05 
16130     06 02 FE FB 
16134     FA FB 00 05 | 	byte	$01, $fa, $f7, $f5, $f9, $00, $04, $05, $06, $02, $fe, $fb, $fa, $fb, $00, $05
16138     06 07 02 FF 
1613c     FB FA FB 00 
16140     03 06 09 06 
16144     01 FE FA FB | 	byte	$06, $07, $02, $ff, $fb, $fa, $fb, $00, $03, $06, $09, $06, $01, $fe, $fa, $fb
16148     FE 02 06 04 
1614c     03 FF F8 F7 
16150     FA FF 02 08 
16154     05 03 00 FA | 	byte	$fe, $02, $06, $04, $03, $ff, $f8, $f7, $fa, $ff, $02, $08, $05, $03, $00, $fa
16158     F9 FC FF 02 
1615c     05 01 FE FA 
16160     F4 F5 FA 00 
16164     06 09 09 06 | 	byte	$f9, $fc, $ff, $02, $05, $01, $fe, $fa, $f4, $f5, $fa, $00, $06, $09, $09, $06
16168     00 FA F8 F8 
1616c     FB 01 03 03 
16170     04 01 FD FC 
16174     FC FD 01 04 | 	byte	$00, $fa, $f8, $f8, $fb, $01, $03, $03, $04, $01, $fd, $fc, $fc, $fd, $01, $04
16178     05 05 01 FE 
1617c     FD FB FC 01 
16180     03 06 07 04 
16184     00 FF FB FC | 	byte	$05, $05, $01, $fe, $fd, $fb, $fc, $01, $03, $06, $07, $04, $00, $ff, $fb, $fc
16188     00 02 04 02 
1618c     01 FD F9 F9 
16190     FC FF 01 05 
16194     03 03 00 FC | 	byte	$00, $02, $04, $02, $01, $fd, $f9, $f9, $fc, $ff, $01, $05, $03, $03, $00, $fc
16198     FD FF FF 02 
1619c     02 FE FD F9 
161a0     F5 F8 FD 00 
161a4     07 09 06 04 | 	byte	$fd, $ff, $ff, $02, $02, $fe, $fd, $f9, $f5, $f8, $fd, $00, $07, $09, $06, $04
161a8     FF FA FA FA 
161ac     FC 02 02 02 
161b0     03 00 FD FF 
161b4     FD FF 03 03 | 	byte	$ff, $fa, $fa, $fa, $fc, $02, $02, $02, $03, $00, $fd, $ff, $fd, $ff, $03, $03
161b8     03 03 00 FE 
161bc     FE FC FF 02 
161c0     02 05 05 02 
161c4     00 FF FC FE | 	byte	$03, $03, $00, $fe, $fe, $fc, $ff, $02, $02, $05, $05, $02, $00, $ff, $fc, $fe
161c8     00 02 03 01 
161cc     00 FC FA FB 
161d0     FD FE 03 03 
161d4     02 03 00 FE | 	byte	$00, $02, $03, $01, $00, $fc, $fa, $fb, $fd, $fe, $03, $03, $02, $03, $00, $fe
161d8     00 FF FF 02 
161dc     00 FC FD F8 
161e0     F6 FC FE 01 
161e4     09 06 04 04 | 	byte	$00, $ff, $ff, $02, $00, $fc, $fd, $f8, $f6, $fc, $fe, $01, $09, $06, $04, $04
161e8     FE FB FD FB 
161ec     FD 02 00 01 
161f0     03 FF FE 00 
161f4     FE 00 04 02 | 	byte	$fe, $fb, $fd, $fb, $fd, $02, $00, $01, $03, $ff, $fe, $00, $fe, $00, $04, $02
161f8     02 01 FE FF 
161fc     FE FD 00 02 
16200     02 05 04 01 
16204     00 FF FD 00 | 	byte	$02, $01, $fe, $ff, $fe, $fd, $00, $02, $02, $05, $04, $01, $00, $ff, $fd, $00
16208     00 01 02 00 
1620c     FE FC FB FC 
16210     FC FF 02 02 
16214     02 04 00 00 | 	byte	$00, $01, $02, $00, $fe, $fc, $fb, $fc, $fc, $ff, $02, $02, $02, $04, $00, $00
16218     01 FE FF 01 
1621c     FC FB FC F7 
16220     F9 FF FF 02 
16224     09 04 03 02 | 	byte	$01, $fe, $ff, $01, $fc, $fb, $fc, $f7, $f9, $ff, $ff, $02, $09, $04, $03, $02
16228     FC FC FE FB 
1622c     FF 01 00 01 
16230     01 FE 00 00 
16234     FE 01 03 01 | 	byte	$fc, $fc, $fe, $fb, $ff, $01, $00, $01, $01, $fe, $00, $00, $fe, $01, $03, $01
16238     02 00 FE FF 
1623c     FE FE 01 02 
16240     02 04 02 00 
16244     00 FF FF 00 | 	byte	$02, $00, $fe, $ff, $fe, $fe, $01, $02, $02, $04, $02, $00, $00, $ff, $ff, $00
16248     00 01 00 00 
1624c     FD FC FB FE 
16250     FD 00 01 01 
16254     02 03 01 02 | 	byte	$00, $01, $00, $00, $fd, $fc, $fb, $fe, $fd, $00, $01, $01, $02, $03, $01, $02
16258     00 FF 00 00 
1625c     F9 FB FA F7 
16260     FC 00 00 05 
16264     07 02 03 01 | 	byte	$00, $ff, $00, $00, $f9, $fb, $fa, $f7, $fc, $00, $00, $05, $07, $02, $03, $01
16268     FB FE FE FC 
1626c     00 01 00 01 
16270     00 FE 00 00 
16274     FF 02 02 01 | 	byte	$fb, $fe, $fe, $fc, $00, $01, $00, $01, $00, $fe, $00, $00, $ff, $02, $02, $01
16278     01 FF FE FF 
1627c     FF 00 01 01 
16280     02 03 01 00 
16284     00 FF 00 00 | 	byte	$01, $ff, $fe, $ff, $ff, $00, $01, $01, $02, $03, $01, $00, $00, $ff, $00, $00
16288     00 01 00 FF 
1628c     FD FC FD FD 
16290     FF 00 00 01 
16294     03 02 02 03 | 	byte	$00, $01, $00, $ff, $fd, $fc, $fd, $fd, $ff, $00, $00, $01, $03, $02, $02, $03
16298     00 00 00 FD 
1629c     F9 FC F8 F9 
162a0     FE 00 00 06 
162a4     04 02 03 FF | 	byte	$00, $00, $00, $fd, $f9, $fc, $f8, $f9, $fe, $00, $00, $06, $04, $02, $03, $ff
162a8     FC FF FD FE 
162ac     00 00 00 00 
162b0     00 FF 00 00 
162b4     00 02 01 01 | 	byte	$fc, $ff, $fd, $fe, $00, $00, $00, $00, $00, $ff, $00, $00, $00, $02, $01, $01
162b8     00 FF FF FF 
162bc     FF 00 02 02 
162c0     02 02 01 00 
162c4     00 FF 00 01 | 	byte	$00, $ff, $ff, $ff, $ff, $00, $02, $02, $02, $02, $01, $00, $00, $ff, $00, $01
162c8     01 00 00 FE 
162cc     FC FD FD FD 
162d0     00 00 00 02 
162d4     02 01 04 03 | 	byte	$01, $00, $00, $fe, $fc, $fd, $fd, $fd, $00, $00, $00, $02, $02, $01, $04, $03
162d8     00 00 FF FB 
162dc     F9 FA F7 FB 
162e0     FF 00 03 06 
162e4     03 03 02 FE | 	byte	$00, $00, $ff, $fb, $f9, $fa, $f7, $fb, $ff, $00, $03, $06, $03, $03, $02, $fe
162e8     FD FF FD FF 
162ec     00 00 00 00 
162f0     FF 00 00 00 
162f4     01 02 01 00 | 	byte	$fd, $ff, $fd, $ff, $00, $00, $00, $00, $ff, $00, $00, $00, $01, $02, $01, $00
162f8     00 FF FE FF 
162fc     00 00 02 02 
16300     02 01 01 00 
16304     00 00 00 01 | 	byte	$00, $ff, $fe, $ff, $00, $00, $02, $02, $02, $01, $01, $00, $00, $00, $00, $01
16308     01 00 00 FD 
1630c     FD FD FD FE 
16310     00 FF 00 03 
16314     01 02 05 02 | 	byte	$01, $00, $00, $fd, $fd, $fd, $fd, $fe, $00, $ff, $00, $03, $01, $02, $05, $02
16318     00 01 FD FA 
1631c     FA F8 F8 FD 
16320     FF 00 05 06 
16324     03 03 00 FE | 	byte	$00, $01, $fd, $fa, $fa, $f8, $f8, $fd, $ff, $00, $05, $06, $03, $03, $00, $fe
16328     FE FE FE 00 
1632c     00 00 00 00 
16330     FF 00 00 01 
16334     01 02 02 00 | 	byte	$fe, $fe, $fe, $00, $00, $00, $00, $00, $ff, $00, $00, $01, $01, $02, $02, $00
16338     FF FF FE FF 
1633c     00 00 02 02 
16340     02 01 01 00 
16344     00 00 00 01 | 	byte	$ff, $ff, $fe, $ff, $00, $00, $02, $02, $02, $01, $01, $00, $00, $00, $00, $01
16348     00 00 FF FC 
1634c     FD FE FC FF 
16350     00 FF 00 03 
16354     01 04 05 01 | 	byte	$00, $00, $ff, $fc, $fd, $fe, $fc, $ff, $00, $ff, $00, $03, $01, $04, $05, $01
16358     01 00 FC FB 
1635c     F9 F8 F9 FD 
16360     FF 02 05 05 
16364     04 02 00 FF | 	byte	$01, $00, $fc, $fb, $f9, $f8, $f9, $fd, $ff, $02, $05, $05, $04, $02, $00, $ff
16368     FE FE FF FF 
1636c     00 00 FF 00 
16370     00 FF 00 01 
16374     00 02 01 00 | 	byte	$fe, $fe, $ff, $ff, $00, $00, $ff, $00, $00, $ff, $00, $01, $00, $02, $01, $00
16378     00 FF FE FF 
1637c     00 00 02 02 
16380     02 01 01 00 
16384     00 00 00 02 | 	byte	$00, $ff, $fe, $ff, $00, $00, $02, $02, $02, $01, $01, $00, $00, $00, $00, $02
16388     00 00 FE FC 
1638c     FD FD FC FF 
16390     00 00 02 03 
16394     02 05 03 01 | 	byte	$00, $00, $fe, $fc, $fd, $fd, $fc, $ff, $00, $00, $02, $03, $02, $05, $03, $01
16398     01 FF FC FA 
1639c     F8 F8 FA FC 
163a0     FF 02 04 05 
163a4     04 01 00 FF | 	byte	$01, $ff, $fc, $fa, $f8, $f8, $fa, $fc, $ff, $02, $04, $05, $04, $01, $00, $ff
163a8     FD FE FF FF 
163ac     00 00 00 00 
163b0     00 FF 00 00 
163b4     00 02 00 00 | 	byte	$fd, $fe, $ff, $ff, $00, $00, $00, $00, $00, $ff, $00, $00, $00, $02, $00, $00
163b8     00 FF FE 00 
163bc     00 00 02 01 
163c0     01 01 00 00 
163c4     00 00 00 01 | 	byte	$00, $ff, $fe, $00, $00, $00, $02, $01, $01, $01, $00, $00, $00, $00, $00, $01
163c8     00 00 FE FC 
163cc     FD FB FC FF 
163d0     00 00 03 04 
163d4     04 04 02 00 | 	byte	$00, $00, $fe, $fc, $fd, $fb, $fc, $ff, $00, $00, $03, $04, $04, $04, $02, $00
163d8     00 FE FD FB 
163dc     F9 FA FB FC 
163e0     00 01 04 06 
163e4     04 02 01 FE | 	byte	$00, $fe, $fd, $fb, $f9, $fa, $fb, $fc, $00, $01, $04, $06, $04, $02, $01, $fe
163e8     FC FD FE FF 
163ec     00 00 00 00 
163f0     00 FF 00 00 
163f4     00 02 00 00 | 	byte	$fc, $fd, $fe, $ff, $00, $00, $00, $00, $00, $ff, $00, $00, $00, $02, $00, $00
163f8     00 FF FF FF 
163fc     00 00 02 01 
16400     02 01 00 00 
16404     00 00 01 01 | 	byte	$00, $ff, $ff, $ff, $00, $00, $02, $01, $02, $01, $00, $00, $00, $00, $01, $01
16408     00 00 FE FC 
1640c     FA FB FB FF 
16410     00 02 05 06 
16414     04 03 01 00 | 	byte	$00, $00, $fe, $fc, $fa, $fb, $fb, $ff, $00, $02, $05, $06, $04, $03, $01, $00
16418     FF FF FE FB 
1641c     FB FA F9 FC 
16420     00 01 05 07 
16424     04 03 00 FD | 	byte	$ff, $ff, $fe, $fb, $fb, $fa, $f9, $fc, $00, $01, $05, $07, $04, $03, $00, $fd
16428     FC FC FD 00 
1642c     01 01 01 00 
16430     FF FF FF FF 
16434     00 01 02 01 | 	byte	$fc, $fc, $fd, $00, $01, $01, $01, $00, $ff, $ff, $ff, $ff, $00, $01, $02, $01
16438     00 FF FE FE 
1643c     FF 00 01 02 
16440     02 01 00 00 
16444     00 00 01 01 | 	byte	$00, $ff, $fe, $fe, $ff, $00, $01, $02, $02, $01, $00, $00, $00, $00, $01, $01
16448     00 00 FE FB 
1644c     F9 F9 FB 00 
16450     02 04 07 07 
16454     02 01 00 FD | 	byte	$00, $00, $fe, $fb, $f9, $f9, $fb, $00, $02, $04, $07, $07, $02, $01, $00, $fd
16458     FF 00 FE FD 
1645c     FD F9 F9 FC 
16460     FD 02 07 07 
16464     06 04 00 FC | 	byte	$ff, $00, $fe, $fd, $fd, $f9, $f9, $fc, $fd, $02, $07, $07, $06, $04, $00, $fc
16468     FB FA FD 00 
1646c     02 03 02 00 
16470     FF FD FD FF 
16474     00 02 03 02 | 	byte	$fb, $fa, $fd, $00, $02, $03, $02, $00, $ff, $fd, $fd, $ff, $00, $02, $03, $02
16478     00 FF FD FD 
1647c     FE 00 02 03 
16480     03 02 01 00 
16484     00 00 01 01 | 	byte	$00, $ff, $fd, $fd, $fe, $00, $02, $03, $03, $02, $01, $00, $00, $00, $01, $01
16488     00 00 FD F9 
1648c     F9 F8 FB 00 
16490     03 06 0A 05 
16494     01 00 FD FC | 	byte	$00, $00, $fd, $f9, $f9, $f8, $fb, $00, $03, $06, $0a, $05, $01, $00, $fd, $fc
16498     00 00 00 FF 
1649c     FC F8 F9 FA 
164a0     FC 03 07 08 
164a4     08 04 FF FB | 	byte	$00, $00, $00, $ff, $fc, $f8, $f9, $fa, $fc, $03, $07, $08, $08, $04, $ff, $fb
164a8     F9 F9 FD 00 
164ac     04 04 03 00 
164b0     FE FC FC FE 
164b4     00 04 04 03 | 	byte	$f9, $f9, $fd, $00, $04, $04, $03, $00, $fe, $fc, $fc, $fe, $00, $04, $04, $03
164b8     01 FF FD FD 
164bc     FD 00 02 03 
164c0     03 02 00 00 
164c4     FF 00 01 02 | 	byte	$01, $ff, $fd, $fd, $fd, $00, $02, $03, $03, $02, $00, $00, $ff, $00, $01, $02
164c8     01 00 FB F9 
164cc     F7 F7 FC 01 
164d0     05 09 0A 04 
164d4     00 FF FB FC | 	byte	$01, $00, $fb, $f9, $f7, $f7, $fc, $01, $05, $09, $0a, $04, $00, $ff, $fb, $fc
164d8     FF 00 01 00 
164dc     FD F9 F8 F8 
164e0     FD 02 07 0A 
164e4     08 03 FF F9 | 	byte	$ff, $00, $01, $00, $fd, $f9, $f8, $f8, $fd, $02, $07, $0a, $08, $03, $ff, $f9
164e8     F8 F9 FD 01 
164ec     05 05 04 00 
164f0     FD FB FC FD 
164f4     00 04 04 04 | 	byte	$f8, $f9, $fd, $01, $05, $05, $04, $00, $fd, $fb, $fc, $fd, $00, $04, $04, $04
164f8     01 FE FC FC 
164fc     FD 00 02 03 
16500     04 02 00 00 
16504     FF 00 02 02 | 	byte	$01, $fe, $fc, $fc, $fd, $00, $02, $03, $04, $02, $00, $00, $ff, $00, $02, $02
16508     01 00 FA F8 
1650c     F6 F8 FE 03 
16510     07 0A 09 03 
16514     00 FC FA FC | 	byte	$01, $00, $fa, $f8, $f6, $f8, $fe, $03, $07, $0a, $09, $03, $00, $fc, $fa, $fc
16518     FF 01 03 00 
1651c     FD F9 F7 F8 
16520     FD 02 09 0B 
16524     08 04 FE F8 | 	byte	$ff, $01, $03, $00, $fd, $f9, $f7, $f8, $fd, $02, $09, $0b, $08, $04, $fe, $f8
16528     F8 F9 FD 02 
1652c     05 05 04 00 
16530     FC FB FB FD 
16534     01 04 05 05 | 	byte	$f8, $f9, $fd, $02, $05, $05, $04, $00, $fc, $fb, $fb, $fd, $01, $04, $05, $05
16538     01 FE FC FB 
1653c     FD 00 02 04 
16540     05 02 00 FF 
16544     FE 00 02 02 | 	byte	$01, $fe, $fc, $fb, $fd, $00, $02, $04, $05, $02, $00, $ff, $fe, $00, $02, $02
16548     01 FF FA F7 
1654c     F7 F9 FF 05 
16550     08 09 08 02 
16554     FE FB FA FC | 	byte	$01, $ff, $fa, $f7, $f7, $f9, $ff, $05, $08, $09, $08, $02, $fe, $fb, $fa, $fc
16558     00 03 03 00 
1655c     FE F8 F7 F9 
16560     FD 02 09 0A 
16564     08 04 FD F9 | 	byte	$00, $03, $03, $00, $fe, $f8, $f7, $f9, $fd, $02, $09, $0a, $08, $04, $fd, $f9
16568     F8 F9 FE 02 
1656c     05 06 04 00 
16570     FC FA FB FD 
16574     01 04 06 04 | 	byte	$f8, $f9, $fe, $02, $05, $06, $04, $00, $fc, $fa, $fb, $fd, $01, $04, $06, $04
16578     01 FE FC FB 
1657c     FD 00 02 04 
16580     04 02 00 FF 
16584     FF 00 02 01 | 	byte	$01, $fe, $fc, $fb, $fd, $00, $02, $04, $04, $02, $00, $ff, $ff, $00, $02, $01
16588     00 FF F9 F7 
1658c     F8 FB 00 06 
16590     08 09 07 00 
16594     FD FB FA FD | 	byte	$00, $ff, $f9, $f7, $f8, $fb, $00, $06, $08, $09, $07, $00, $fd, $fb, $fa, $fd
16598     00 03 02 01 
1659c     FD F8 F8 F9 
165a0     FD 04 08 08 
165a4     07 03 FD FA | 	byte	$00, $03, $02, $01, $fd, $f8, $f8, $f9, $fd, $04, $08, $08, $07, $03, $fd, $fa
165a8     F8 FB FF 02 
165ac     05 05 03 00 
165b0     FC FA FC FE 
165b4     01 04 05 04 | 	byte	$f8, $fb, $ff, $02, $05, $05, $03, $00, $fc, $fa, $fc, $fe, $01, $04, $05, $04
165b8     01 FE FC FC 
165bc     FD 00 02 04 
165c0     04 02 00 FF 
165c4     FF 00 02 00 | 	byte	$01, $fe, $fc, $fc, $fd, $00, $02, $04, $04, $02, $00, $ff, $ff, $00, $02, $00
165c8     00 FD FA F8 
165cc     FA FC 02 06 
165d0     07 08 05 00 
165d4     FE FB FA FE | 	byte	$00, $fd, $fa, $f8, $fa, $fc, $02, $06, $07, $08, $05, $00, $fe, $fb, $fa, $fe
165d8     00 02 02 00 
165dc     FD FA F9 FA 
165e0     FF 03 07 07 
165e4     05 02 FE FB | 	byte	$00, $02, $02, $00, $fd, $fa, $f9, $fa, $ff, $03, $07, $07, $05, $02, $fe, $fb
165e8     FA FC FF 02 
165ec     04 03 02 00 
165f0     FD FC FC FF 
165f4     01 03 04 03 | 	byte	$fa, $fc, $ff, $02, $04, $03, $02, $00, $fd, $fc, $fc, $ff, $01, $03, $04, $03
165f8     00 FF FD FC 
165fc     FE 00 01 03 
16600     03 01 00 00 
16604     00 00 00 00 | 	byte	$00, $ff, $fd, $fc, $fe, $00, $01, $03, $03, $01, $00, $00, $00, $00, $00, $00
16608     FF FD FB FB 
1660c     FC FF 01 05 
16610     06 05 02 00 
16614     FE FC FD FF | 	byte	$ff, $fd, $fb, $fb, $fc, $ff, $01, $05, $06, $05, $02, $00, $fe, $fc, $fd, $ff
16618     00 02 01 00 
1661c     FE FB FA FC 
16620     FF 02 06 05 
16624     04 01 FE FD | 	byte	$00, $02, $01, $00, $fe, $fb, $fa, $fc, $ff, $02, $06, $05, $04, $01, $fe, $fd
16628     FC FD 00 01 
1662c     02 02 01 FF 
16630     FE FD FD 00 
16634     01 02 03 02 | 	byte	$fc, $fd, $00, $01, $02, $02, $01, $ff, $fe, $fd, $fd, $00, $01, $02, $03, $02
16638     00 FF FE FD 
1663c     FF 00 01 02 
16640     02 01 00 00 
16644     00 00 00 00 | 	byte	$00, $ff, $fe, $fd, $ff, $00, $01, $02, $02, $01, $00, $00, $00, $00, $00, $00
16648     FE FD FC FC 
1664c     FE 00 01 04 
16650     04 03 02 00 
16654     FE FE FE FF | 	byte	$fe, $fd, $fc, $fc, $fe, $00, $01, $04, $04, $03, $02, $00, $fe, $fe, $fe, $ff
16658     00 01 00 00 
1665c     FE FC FD FD 
16660     FF 02 04 03 
16664     03 01 FF FF | 	byte	$00, $01, $00, $00, $fe, $fc, $fd, $fd, $ff, $02, $04, $03, $03, $01, $ff, $ff
16668     FD FD 00 00 
1666c     01 01 00 00 
16670     FF FE FF 00 
16674     01 01 02 01 | 	byte	$fd, $fd, $00, $00, $01, $01, $00, $00, $ff, $fe, $ff, $00, $01, $01, $02, $01
16678     00 00 FF FF 
1667c     00 00 01 02 
16680     01 01 01 00 
16684     FF 00 FF FF | 	byte	$00, $00, $ff, $ff, $00, $00, $01, $02, $01, $01, $01, $00, $ff, $00, $ff, $ff
16688     FF FF FE FF 
1668c     00 FF 00 02 
16690     01 02 01 00 
16694     00 00 FE FF | 	byte	$ff, $ff, $fe, $ff, $00, $ff, $00, $02, $01, $02, $01, $00, $00, $00, $fe, $ff
16698     00 00 00 00 
1669c     FE FE FE FE 
166a0     FF 01 02 02 
166a4     02 01 00 FF | 	byte	$00, $00, $00, $00, $fe, $fe, $fe, $fe, $ff, $01, $02, $02, $02, $01, $00, $ff
166a8     FF FE 00 00 
166ac     00 00 01 00 
166b0     00 00 FF 00 
166b4     00 00 01 01 | 	byte	$ff, $fe, $00, $00, $00, $00, $01, $00, $00, $00, $ff, $00, $00, $00, $01, $01
166b8     00 00 00 FF 
166bc     00 00 00 01 
166c0     01 01 01 FF 
166c4     FF FF FF 00 | 	byte	$00, $00, $00, $ff, $00, $00, $00, $01, $01, $01, $01, $ff, $ff, $ff, $ff, $00
166c8     00 00 00 00 
166cc     FF 00 FF 00 
166d0     01 01 01 01 
166d4     00 00 00 FE | 	byte	$00, $00, $00, $00, $ff, $00, $ff, $00, $01, $01, $01, $01, $00, $00, $00, $fe
166d8     FF 00 FF 00 
166dc     00 FE FE FF 
166e0     FE 00 02 01 
166e4     02 02 00 00 | 	byte	$ff, $00, $ff, $00, $00, $fe, $fe, $ff, $fe, $00, $02, $01, $02, $02, $00, $00
166e8     FF FE FF 00 
166ec     00 01 01 00 
166f0     00 00 FF 00 
166f4     00 00 01 00 | 	byte	$ff, $fe, $ff, $00, $00, $01, $01, $00, $00, $00, $ff, $00, $00, $00, $01, $00
166f8     00 00 00 FF 
166fc     00 00 00 01 
16700     01 00 00 FF 
16704     FE FE FF 00 | 	byte	$00, $00, $00, $ff, $00, $00, $00, $01, $01, $00, $00, $ff, $fe, $fe, $ff, $00
16708     01 01 00 00 
1670c     FF FE FE FF 
16710     00 01 02 02 
16714     00 00 FF 00 | 	byte	$01, $01, $00, $00, $ff, $fe, $fe, $ff, $00, $01, $02, $02, $00, $00, $ff, $00
16718     00 00 00 00 
1671c     00 00 00 00 
16720     00 00 00 00 
16724     00 00 00 00 | 	byte	$00[16]
16728     20 02 E7 F6 
1672c     15 15 05 07 
16730     07 07 FD FD 
16734     19 1F 0E 08 | 	byte	$20, $02, $e7, $f6, $15, $15, $05, $07, $07, $07, $fd, $fd, $19, $1f, $0e, $08
16738     0A FC ED F9 
1673c     F0 FF 1D 1A 
16740     0D 17 00 FE 
16744     02 05 05 E4 | 	byte	$0a, $fc, $ed, $f9, $f0, $ff, $1d, $1a, $0d, $17, $00, $fe, $02, $05, $05, $e4
16748     D4 16 1A FC 
1674c     F5 19 01 FB 
16750     0A 16 02 E5 
16754     08 0A E9 F6 | 	byte	$d4, $16, $1a, $fc, $f5, $19, $01, $fb, $0a, $16, $02, $e5, $08, $0a, $e9, $f6
16758     15 04 09 04 
1675c     01 F5 FB 10 
16760     0A F6 07 04 
16764     07 20 04 FF | 	byte	$15, $04, $09, $04, $01, $f5, $fb, $10, $0a, $f6, $07, $04, $07, $20, $04, $ff
16768     FC FE F3 F7 
1676c     FB 10 0A 1A 
16770     1C 0B 02 F5 
16774     09 E9 FB 13 | 	byte	$fc, $fe, $f3, $f7, $fb, $10, $0a, $1a, $1c, $0b, $02, $f5, $09, $e9, $fb, $13
16778     F2 FF 2E 04 
1677c     E3 0D 1A F9 
16780     E1 F6 0D 1D 
16784     17 19 14 FB | 	byte	$f2, $ff, $2e, $04, $e3, $0d, $1a, $f9, $e1, $f6, $0d, $1d, $17, $19, $14, $fb
16788     FF 22 26 F5 
1678c     FB F2 07 13 
16790     F0 FB 0B 14 
16794     04 08 0D 1B | 	byte	$ff, $22, $26, $f5, $fb, $f2, $07, $13, $f0, $fb, $0b, $14, $04, $08, $0d, $1b
16798     32 19 F2 EA 
1679c     08 0A F7 DF 
167a0     F0 19 0D 0F 
167a4     13 F8 1B 26 | 	byte	$32, $19, $f2, $ea, $08, $0a, $f7, $df, $f0, $19, $0d, $0f, $13, $f8, $1b, $26
167a8     00 02 13 E4 
167ac     DE 20 09 03 
167b0     EF F3 FB FF 
167b4     0E FC EB 14 | 	byte	$00, $02, $13, $e4, $de, $20, $09, $03, $ef, $f3, $fb, $ff, $0e, $fc, $eb, $14
167b8     13 F3 0D 1B 
167bc     13 E4 FB 00 
167c0     ED FF 0F 0D 
167c4     FC 08 04 F7 | 	byte	$13, $f3, $0d, $1b, $13, $e4, $fb, $00, $ed, $ff, $0f, $0d, $fc, $08, $04, $f7
167c8     04 01 F8 03 
167cc     20 1A FF 13 
167d0     09 F7 F9 FF 
167d4     15 09 F7 F5 | 	byte	$04, $01, $f8, $03, $20, $1a, $ff, $13, $09, $f7, $f9, $ff, $15, $09, $f7, $f5
167d8     F0 FF 20 02 
167dc     E0 FF 20 19 
167e0     00 0F F7 FB 
167e4     26 26 ED FB | 	byte	$f0, $ff, $20, $02, $e0, $ff, $20, $19, $00, $0f, $f7, $fb, $26, $26, $ed, $fb
167e8     13 F5 08 13 
167ec     0D F0 F6 07 
167f0     29 1C 0D 13 
167f4     01 F0 F9 2E | 	byte	$13, $f5, $08, $13, $0d, $f0, $f6, $07, $29, $1c, $0d, $13, $01, $f0, $f9, $2e
167f8     13 F3 F1 0D 
167fc     15 04 F2 FF 
16800     0E F3 20 28 
16804     04 00 FB FB | 	byte	$13, $f3, $f1, $0d, $15, $04, $f2, $ff, $0e, $f3, $20, $28, $04, $00, $fb, $fb
16808     03 19 00 08 
1680c     04 E9 EC 19 
16810     13 FB 03 01 
16814     0B 00 F6 F7 | 	byte	$03, $19, $00, $08, $04, $e9, $ec, $19, $13, $fb, $03, $01, $0b, $00, $f6, $f7
16818     F5 F6 0F 0E 
1681c     FB 13 FC FB 
16820     F7 0F 17 05 
16824     F5 EA 14 10 | 	byte	$f5, $f6, $0f, $0e, $fb, $13, $fc, $fb, $f7, $0f, $17, $05, $f5, $ea, $14, $10
16828     14 F5 F5 F8 
1682c     03 04 FE FB 
16830     16 15 1B 0A 
16834     F5 FE 11 2B | 	byte	$14, $f5, $f5, $f8, $03, $04, $fe, $fb, $16, $15, $1b, $0a, $f5, $fe, $11, $2b
16838     DA EA 16 00 
1683c     F2 0D 0B F1 
16840     11 13 FD F6 
16844     08 20 0B FB | 	byte	$da, $ea, $16, $00, $f2, $0d, $0b, $f1, $11, $13, $fd, $f6, $08, $20, $0b, $fb
16848     07 15 F7 EB 
1684c     0D 13 ED 11 
16850     31 01 F3 11 
16854     29 0B F0 03 | 	byte	$07, $15, $f7, $eb, $0d, $13, $ed, $11, $31, $01, $f3, $11, $29, $0b, $f0, $03
16858     15 F2 DE 19 
1685c     28 F9 FD 17 
16860     00 E9 0B 27 
16864     1F 00 F3 19 | 	byte	$15, $f2, $de, $19, $28, $f9, $fd, $17, $00, $e9, $0b, $27, $1f, $00, $f3, $19
16868     20 09 E6 F6 
1686c     01 F6 02 0D 
16870     00 0B 26 00 
16874     F3 05 22 F7 | 	byte	$20, $09, $e6, $f6, $01, $f6, $02, $0d, $00, $0b, $26, $00, $f3, $05, $22, $f7
16878     EC 13 ED FF 
1687c     01 01 F5 CC 
16880     11 58 DA A9 
16884     59 39 CB 4B | 	byte	$ec, $13, $ed, $ff, $01, $01, $f5, $cc, $11, $58, $da, $a9, $59, $39, $cb, $4b
16888     ED A9 38 56 
1688c     B4 E3 2B C7 
16890     FF 6B 00 A4 
16894     3D 00 CD 4B | 	byte	$ed, $a9, $38, $56, $b4, $e3, $2b, $c7, $ff, $6b, $00, $a4, $3d, $00, $cd, $4b
16898     2B C0 11 39 
1689c     C7 CB 34 ED 
168a0     16 47 DA C6 
168a4     2E EF 0F 32 | 	byte	$2b, $c0, $11, $39, $c7, $cb, $34, $ed, $16, $47, $da, $c6, $2e, $ef, $0f, $32
168a8     13 CC F6 4C 
168ac     DA FF 2B E1 
168b0     FF 19 ED FF 
168b4     31 F7 EC 35 | 	byte	$13, $cc, $f6, $4c, $da, $ff, $2b, $e1, $ff, $19, $ed, $ff, $31, $f7, $ec, $35
168b8     26 BB F6 40 
168bc     09 DF FF 61 
168c0     00 DE 2F DA 
168c4     EC 41 00 CB | 	byte	$26, $bb, $f6, $40, $09, $df, $ff, $61, $00, $de, $2f, $da, $ec, $41, $00, $cb
168c8     2E 43 DA EC 
168cc     4B 00 BC 20 
168d0     13 D4 FF 29 
168d4     DF D9 49 13 | 	byte	$2e, $43, $da, $ec, $4b, $00, $bc, $20, $13, $d4, $ff, $29, $df, $d9, $49, $13
168d8     C8 25 47 C7 
168dc     D9 49 00 BC 
168e0     2E 2B D1 F6 
168e4     26 15 26 CC | 	byte	$c8, $25, $47, $c7, $d9, $49, $00, $bc, $2e, $2b, $d1, $f6, $26, $15, $26, $cc
168e8     D9 4B 2F AD 
168ec     E3 50 00 C1 
168f0     2C 2B C7 0D 
168f4     13 D2 FF 41 | 	byte	$d9, $4b, $2f, $ad, $e3, $50, $00, $c1, $2c, $2b, $c7, $0d, $13, $d2, $ff, $41
168f8     26 FE E6 CD 
168fc     11 04 D4 0D 
16900     6D 39 A3 E3 
16904     26 DA BC 38 | 	byte	$26, $fe, $e6, $cd, $11, $04, $d4, $0d, $6d, $39, $a3, $e3, $26, $da, $bc, $38
16908     65 ED CF 41 
1690c     39 C7 EC 4B 
16910     2B C7 CB 2E 
16914     45 F7 F8 38 | 	byte	$65, $ed, $cf, $41, $39, $c7, $ec, $4b, $2b, $c7, $cb, $2e, $45, $f7, $f8, $38
16918     3E CC A9 20 
1691c     00 EC 38 69 
16920     00 BF 20 00 
16924     C9 11 59 15 | 	byte	$3e, $cc, $a9, $20, $00, $ec, $38, $69, $00, $bf, $20, $00, $c9, $11, $59, $15
16928     BA CF 25 47 
1692c     DF CD 16 4B 
16930     13 A5 EC 45 
16934     F2 FF 46 43 | 	byte	$ba, $cf, $25, $47, $df, $cd, $16, $4b, $13, $a5, $ec, $45, $f2, $ff, $46, $43
16938     C7 B3 05 DA 
1693c     20 34 F7 23 
16940     17 DA CF 38 
16944     26 07 25 0B | 	byte	$c7, $b3, $05, $da, $20, $34, $f7, $23, $17, $da, $cf, $38, $26, $07, $25, $0b
16948     CE E3 E6 C7 
1694c     DE 3F 39 17 
16950     0D 20 45 00 
16954     8D 9F 1B 2B | 	byte	$ce, $e3, $e6, $c7, $de, $3f, $39, $17, $0d, $20, $45, $00, $8d, $9f, $1b, $2b
16958     D1 FF 63 13 
1695c     F6 41 4C DA 
16960     C6 19 DA DE 
16964     38 26 D5 08 | 	byte	$d1, $ff, $63, $13, $f6, $41, $4c, $da, $c6, $19, $da, $de, $38, $26, $d5, $08
16968     04 ED F5 0D 
1696c     22 26 17 0E 
16970     00 DA C7 D4 
16974     16 43 1C 1D | 	byte	$04, $ed, $f5, $0d, $22, $26, $17, $0e, $00, $da, $c7, $d4, $16, $43, $1c, $1d
16978     1C 17 13 C7 
1697c     81 C6 41 2F 
16980     E9 25 69 02 
16984     F6 37 26 BD | 	byte	$1c, $17, $13, $c7, $81, $c6, $41, $2f, $e9, $25, $69, $02, $f6, $37, $26, $bd
16988     CF 1B E6 F6 
1698c     38 39 00 ED 
16990     FB 02 F0 F6 
16994     2C 52 15 FF | 	byte	$cf, $1b, $e6, $f6, $38, $39, $00, $ed, $fb, $02, $f0, $f6, $2c, $52, $15, $ff
16998     0E E6 C0 D9 
1699c     07 08 32 4A 
169a0     26 1D F7 A1 
169a4     9B 1B 4C 00 | 	byte	$0e, $e6, $c0, $d9, $07, $08, $32, $4a, $26, $1d, $f7, $a1, $9b, $1b, $4c, $00
169a8     FF 57 09 DB 
169ac     1B 26 C0 E3 
169b0     13 DD F6 32 
169b4     13 09 FD F8 | 	byte	$ff, $57, $09, $db, $1b, $26, $c0, $e3, $13, $dd, $f6, $32, $13, $09, $fd, $f8
169b8     07 ED E3 25 
169bc     43 04 FF 0E 
169c0     E6 C2 D4 EC 
169c4     03 29 33 26 | 	byte	$07, $ed, $e3, $25, $43, $04, $ff, $0e, $e6, $c2, $d4, $ec, $03, $29, $33, $26
169c8     1C E4 A1 AE 
169cc     2E 47 F7 1B 
169d0     4F 00 E3 29 
169d4     13 BF F6 15 | 	byte	$1c, $e4, $a1, $ae, $2e, $47, $f7, $1b, $4f, $00, $e3, $29, $13, $bf, $f6, $15
169d8     EF FF 26 1F 
169dc     17 00 E0 0D 
169e0     09 EB 16 50 
169e4     2B 03 15 02 | 	byte	$ef, $ff, $26, $1f, $17, $00, $e0, $0d, $09, $eb, $16, $50, $2b, $03, $15, $02
169e8     DA C7 EA 0D 
169ec     15 32 34 26 
169f0     13 DA 9C A9 
169f4     33 51 02 38 | 	byte	$da, $c7, $ea, $0d, $15, $32, $34, $26, $13, $da, $9c, $a9, $33, $51, $02, $38
169f8     47 DF E7 2E 
169fc     04 BB 0D 13 
16a00     F3 0D 1A 19 
16a04     1A DD E7 14 | 	byte	$47, $df, $e7, $2e, $04, $bb, $0d, $13, $f3, $0d, $1a, $19, $1a, $dd, $e7, $14
16a08     F3 FB 38 39 
16a0c     0E 14 00 C7 
16a10     BA F1 FC 16 
16a14     3D 3B 15 02 | 	byte	$f3, $fb, $38, $39, $0e, $14, $00, $c7, $ba, $f1, $fc, $16, $3d, $3b, $15, $02
16a18     CC 92 B3 38 
16a1c     4C FD 38 39 
16a20     D1 E7 2C 04 
16a24     CB 11 0E F9 | 	byte	$cc, $92, $b3, $38, $4c, $fd, $38, $39, $d1, $e7, $2c, $04, $cb, $11, $0e, $f9
16a28     0D 13 17 13 
16a2c     CE EC 26 00 
16a30     F6 2E 39 09 
16a34     0D 00 D3 C3 | 	byte	$0d, $13, $17, $13, $ce, $ec, $26, $00, $f6, $2e, $39, $09, $0d, $00, $d3, $c3
16a38     F3 FD 11 33 
16a3c     39 17 05 DA 
16a40     AD 9F FF 65 
16a44     17 19 49 09 | 	byte	$f3, $fd, $11, $33, $39, $17, $05, $da, $ad, $9f, $ff, $65, $17, $19, $49, $09
16a48     C5 FF 26 E6 
16a4c     DE 29 13 E5 
16a50     FF 1C 17 09 
16a54     D1 F6 13 FB | 	byte	$c5, $ff, $26, $e6, $de, $29, $13, $e5, $ff, $1c, $17, $09, $d1, $f6, $13, $fb
16a58     11 46 39 04 
16a5c     05 F0 D1 D5 
16a60     FB 14 29 39 
16a64     34 15 ED D3 | 	byte	$11, $46, $39, $04, $05, $f0, $d1, $d5, $fb, $14, $29, $39, $34, $15, $ed, $d3
16a68     B6 B3 11 75 
16a6c     26 0F 3E F7 
16a70     C6 08 26 DF 
16a74     F1 26 F2 EF | 	byte	$b6, $b3, $11, $75, $26, $0f, $3e, $f7, $c6, $08, $26, $df, $f1, $26, $f2, $ef
16a78     1A 26 16 ED 
16a7c     EC 0D F7 F8 
16a80     29 3D 15 0F 
16a84     04 DE CB E7 | 	byte	$1a, $26, $16, $ed, $ec, $0d, $f7, $f8, $29, $3d, $15, $0f, $04, $de, $cb, $e7
16a88     FB 14 32 2C 
16a8c     20 04 DF CC 
16a90     B4 D9 46 64 
16a94     00 20 17 C7 | 	byte	$fb, $14, $32, $2c, $20, $04, $df, $cc, $b4, $d9, $46, $64, $00, $20, $17, $c7
16a98     D9 25 04 CB 
16a9c     11 09 DD FB 
16aa0     28 1A 09 F3 
16aa4     FD 02 EF 05 | 	byte	$d9, $25, $04, $cb, $11, $09, $dd, $fb, $28, $1a, $09, $f3, $fd, $02, $ef, $05
16aa8     2E 39 1A 05 
16aac     F0 DA CE EC 
16ab0     07 19 37 32 
16ab4     19 02 E4 D2 | 	byte	$2e, $39, $1a, $05, $f0, $da, $ce, $ec, $07, $19, $37, $32, $19, $02, $e4, $d2
16ab8     C7 C8 1B 79 
16abc     2F FF 27 ED 
16ac0     C2 FF 27 ED 
16ac4     F6 1C E9 EC | 	byte	$c7, $c8, $1b, $79, $2f, $ff, $27, $ed, $c2, $ff, $27, $ed, $f6, $1c, $e9, $ec
16ac8     25 3F 09 F3 
16acc     1A 13 E6 FF 
16ad0     29 28 1C 14 
16ad4     F2 D2 D4 EA | 	byte	$25, $3f, $09, $f3, $1a, $13, $e6, $ff, $29, $28, $1c, $14, $f2, $d2, $d4, $ea
16ad8     F9 25 3A 20 
16adc     15 13 D3 D2 
16ae0     D1 CF 25 75 
16ae4     2B EF 21 ED | 	byte	$f9, $25, $3a, $20, $15, $13, $d3, $d2, $d1, $cf, $25, $75, $2b, $ef, $21, $ed
16ae8     C9 FF 2F E4 
16aec     F1 1B E4 E7 
16af0     2C 46 00 FF 
16af4     26 00 D4 16 | 	byte	$c9, $ff, $2f, $e4, $f1, $1b, $e4, $e7, $2c, $46, $00, $ff, $26, $00, $d4, $16
16af8     26 14 1A 0D 
16afc     F5 D2 D4 E6 
16b00     FD 25 3B 28 
16b04     1B 0B C7 CB | 	byte	$26, $14, $1a, $0d, $f5, $d2, $d4, $e6, $fd, $25, $3b, $28, $1b, $0b, $c7, $cb
16b08     DA CB 08 71 
16b0c     4C ED 1B 13 
16b10     C7 E0 29 13 
16b14     CE FF 13 E1 | 	byte	$da, $cb, $08, $71, $4c, $ed, $1b, $13, $c7, $e0, $29, $13, $ce, $ff, $13, $e1
16b18     FF 44 2B ED 
16b1c     16 FF DF E3 
16b20     2D 0E 14 27 
16b24     04 E1 D3 DE | 	byte	$ff, $44, $2b, $ed, $16, $ff, $df, $e3, $2d, $0e, $14, $27, $04, $e1, $d3, $de
16b28     EC 0A 22 33 
16b2c     31 26 DA E1 
16b30     E4 B9 E3 4B 
16b34     56 F7 20 1C | 	byte	$ec, $0a, $22, $33, $31, $26, $da, $e1, $e4, $b9, $e3, $4b, $56, $f7, $20, $1c
16b38     D1 E7 29 00 
16b3c     D4 0F 00 DA 
16b40     0F 46 26 F6 
16b44     19 0B DB FF | 	byte	$d1, $e7, $29, $00, $d4, $0f, $00, $da, $0f, $46, $26, $f6, $19, $0b, $db, $ff
16b48     1B 0F 20 15 
16b4c     F0 ED DD CF 
16b50     E7 1A 1F 28 
16b54     32 26 CC E3 | 	byte	$1b, $0f, $20, $15, $f0, $ed, $dd, $cf, $e7, $1a, $1f, $28, $32, $26, $cc, $e3
16b58     F5 C7 D9 4B 
16b5c     56 F2 1B 2F 
16b60     DA D9 2C 04 
16b64     D2 16 09 D5 | 	byte	$f5, $c7, $d9, $4b, $56, $f2, $1b, $2f, $da, $d9, $2c, $04, $d2, $16, $09, $d5
16b68     FF 4B 26 E4 
16b6c     19 26 E4 F3 
16b70     26 05 11 26 
16b74     04 ED E6 E1 | 	byte	$ff, $4b, $26, $e4, $19, $26, $e4, $f3, $26, $05, $11, $26, $04, $ed, $e6, $e1
16b78     DE FF 19 1D 
16b7c     27 2E 13 D1 
16b80     F6 F2 C0 F3 
16b84     5E 39 F3 33 | 	byte	$de, $ff, $19, $1d, $27, $2e, $13, $d1, $f6, $f2, $c0, $f3, $5e, $39, $f3, $33
16b88     26 CD F6 20 
16b8c     E6 DE 19 F2 
16b90     E6 2E 43 F7 
16b94     08 27 F2 E3 | 	byte	$26, $cd, $f6, $20, $e6, $de, $19, $f2, $e6, $2e, $43, $f7, $08, $27, $f2, $e3
16b98     1D 0E 05 26 
16b9c     02 F2 F3 E5 
16ba0     DB FF 26 0B 
16ba4     10 33 13 C8 | 	byte	$1d, $0e, $05, $26, $02, $f2, $f3, $e5, $db, $ff, $26, $0b, $10, $33, $13, $c8
16ba8     FF 04 C0 F6 
16bac     4B 13 F1 3F 
16bb0     13 D2 FF 28 
16bb4     DA E7 1F ED | 	byte	$ff, $04, $c0, $f6, $4b, $13, $f1, $3f, $13, $d2, $ff, $28, $da, $e7, $1f, $ed
16bb8     D9 38 39 E6 
16bbc     1B 32 DF F1 
16bc0     2D F2 F3 26 
16bc4     00 EA 0A F7 | 	byte	$d9, $38, $39, $e6, $1b, $32, $df, $f1, $2d, $f2, $f3, $26, $00, $ea, $0a, $f7
16bc8     DA 16 17 ED 
16bcc     FF 44 ED CF 
16bd0     1B 13 BD F6 
16bd4     4B 13 E0 3F | 	byte	$da, $16, $17, $ed, $ff, $44, $ed, $cf, $1b, $13, $bd, $f6, $4b, $13, $e0, $3f
16bd8     26 DA FF 3B 
16bdc     E4 D7 1F 00 
16be0     C7 FF 4B 00 
16be4     F1 3D 13 CE | 	byte	$26, $da, $ff, $3b, $e4, $d7, $1f, $00, $c7, $ff, $4b, $00, $f1, $3d, $13, $ce
16be8     1B 17 EB 20 
16bec     09 E3 0E 13 
16bf0     E1 EC 21 04 
16bf4     FF 2E 1C DF | 	byte	$1b, $17, $eb, $20, $09, $e3, $0e, $13, $e1, $ec, $21, $04, $ff, $2e, $1c, $df
16bf8     FF 13 DA F3 
16bfc     38 1C F3 14 
16c00     0E FD 1B 1F 
16c04     F2 EB F3 E6 | 	byte	$ff, $13, $da, $f3, $38, $1c, $f3, $14, $0e, $fd, $1b, $1f, $f2, $eb, $f3, $e6
16c08     FB 0B 07 FF 
16c0c     0F 1A 16 1D 
16c10     1A 04 FD FC 
16c14     E3 E3 FD 01 | 	byte	$fb, $0b, $07, $ff, $0f, $1a, $16, $1d, $1a, $04, $fd, $fc, $e3, $e3, $fd, $01
16c18     FC 08 20 05 
16c1c     05 13 02 FB 
16c20     FF 0D 13 05 
16c24     05 13 0D 0B | 	byte	$fc, $08, $20, $05, $05, $13, $02, $fb, $ff, $0d, $13, $05, $05, $13, $0d, $0b
16c28     03 00 02 04 
16c2c     FC F9 F8 EF 
16c30     FF 07 08 0A 
16c34     14 17 0E 0D | 	byte	$03, $00, $02, $04, $fc, $f9, $f8, $ef, $ff, $07, $08, $0a, $14, $17, $0e, $0d
16c38     17 05 01 08 
16c3c     03 F7 F6 FB 
16c40     F2 EF F2 FF 
16c44     FF 10 20 13 | 	byte	$17, $05, $01, $08, $03, $f7, $f6, $fb, $f2, $ef, $f2, $ff, $ff, $10, $20, $13
16c48     0F 17 1F 0E 
16c4c     FB 02 FD E6 
16c50     F3 01 F7 FD 
16c54     0F 07 FF 03 | 	byte	$0f, $17, $1f, $0e, $fb, $02, $fd, $e6, $f3, $01, $f7, $fd, $0f, $07, $ff, $03
16c58     0E 05 03 10 
16c5c     15 05 01 FF 
16c60     03 FF 03 0E 
16c64     01 F9 FF 13 | 	byte	$0e, $05, $03, $10, $15, $05, $01, $ff, $03, $ff, $03, $0e, $01, $f9, $ff, $13
16c68     00 F5 FF 03 
16c6c     FC 08 1D 13 
16c70     FB 0D 19 F9 
16c74     F3 04 F9 F1 | 	byte	$00, $f5, $ff, $03, $fc, $08, $1d, $13, $fb, $0d, $19, $f9, $f3, $04, $f9, $f1
16c78     03 00 F6 0F 
16c7c     1B 17 07 03 
16c80     02 F9 FD 01 
16c84     13 0E F9 FD | 	byte	$03, $00, $f6, $0f, $1b, $17, $07, $03, $02, $f9, $fd, $01, $13, $0e, $f9, $fd
16c88     0A 14 0A 00 
16c8c     08 05 FF 0A 
16c90     F7 F6 FF 03 
16c94     04 FF 0A 05 | 	byte	$0a, $14, $0a, $00, $08, $05, $ff, $0a, $f7, $f6, $ff, $03, $04, $ff, $0a, $05
16c98     04 1B 1D 00 
16c9c     F6 02 02 FF 
16ca0     FE 03 04 0D 
16ca4     13 08 0E 13 | 	byte	$04, $1b, $1d, $00, $f6, $02, $02, $ff, $fe, $03, $04, $0d, $13, $08, $0e, $13
16ca8     00 F2 FC 0F 
16cac     01 FB 0A 00 
16cb0     08 1A 0E 05 
16cb4     05 05 04 05 | 	byte	$00, $f2, $fc, $0f, $01, $fb, $0a, $00, $08, $1a, $0e, $05, $05, $05, $04, $05
16cb8     01 F7 F2 FF 
16cbc     01 08 14 01 
16cc0     0D 1A 09 00 
16cc4     FF 0A 04 00 | 	byte	$01, $f7, $f2, $ff, $01, $08, $14, $01, $0d, $1a, $09, $00, $ff, $0a, $04, $00
16cc8     FB 03 03 07 
16ccc     0B 02 01 01 
16cd0     F5 F6 05 08 
16cd4     FC F7 08 09 | 	byte	$fb, $03, $03, $07, $0b, $02, $01, $01, $f5, $f6, $05, $08, $fc, $f7, $08, $09
16cd8     1A 17 F7 FF 
16cdc     13 07 FE FD 
16ce0     FE F5 F5 FF 
16ce4     04 FD 08 1B | 	byte	$1a, $17, $f7, $ff, $13, $07, $fe, $fd, $fe, $f5, $f5, $ff, $04, $fd, $08, $1b
16ce8     0E 0D 15 04 
16cec     F8 FF 00 F2 
16cf0     08 13 05 10 
16cf4     0B F2 FB FE | 	byte	$0e, $0d, $15, $04, $f8, $ff, $00, $f2, $08, $13, $05, $10, $0b, $f2, $fb, $fe
16cf8     FF FC FB 03 
16cfc     FB F7 0B 26 
16d00     13 05 04 05 
16d04     15 0F 00 F2 | 	byte	$ff, $fc, $fb, $03, $fb, $f7, $0b, $26, $13, $05, $04, $05, $15, $0f, $00, $f2
16d08     FB EF FF 09 
16d0c     F8 05 13 14 
16d10     10 03 FE FD 
16d14     14 07 F1 11 | 	byte	$fb, $ef, $ff, $09, $f8, $05, $13, $14, $10, $03, $fe, $fd, $14, $07, $f1, $11
16d18     15 FF 1F 09 
16d1c     ED FE FF FF 
16d20     07 FD 03 04 
16d24     F9 0D 1F 09 | 	byte	$15, $ff, $1f, $09, $ed, $fe, $ff, $ff, $07, $fd, $03, $04, $f9, $0d, $1f, $09
16d28     20 17 F7 FF 
16d2c     27 04 E0 FC 
16d30     FF F8 F5 FB 
16d34     0F 0D 0F 0A | 	byte	$20, $17, $f7, $ff, $27, $04, $e0, $fc, $ff, $f8, $f5, $fb, $0f, $0d, $0f, $0a
16d38     01 FE 05 0D 
16d3c     FB 0D 1C 05 
16d40     16 09 EF F3 
16d44     F2 07 0E F7 | 	byte	$01, $fe, $05, $0d, $fb, $0d, $1c, $05, $16, $09, $ef, $f3, $f2, $07, $0e, $f7
16d48     F6 0D 00 08 
16d4c     16 05 0D 0A 
16d50     08 26 13 04 
16d54     00 E7 F2 FB | 	byte	$f6, $0d, $00, $08, $16, $05, $0d, $0a, $08, $26, $13, $04, $00, $e7, $f2, $fb
16d58     F8 FC FF 0A 
16d5c     0E 02 05 07 
16d60     F3 0D 15 F2 
16d64     08 26 1B 17 | 	byte	$f8, $fc, $ff, $0a, $0e, $02, $05, $07, $f3, $0d, $15, $f2, $08, $26, $1b, $17
16d68     04 DB EF F6 
16d6c     FF 07 01 FF 
16d70     FB FE FF 0D 
16d74     02 14 1B 07 | 	byte	$04, $db, $ef, $f6, $ff, $07, $01, $ff, $fb, $fe, $ff, $0d, $02, $14, $1b, $07
16d78     1B 1F 0B 0A 
16d7c     F2 E0 FB ED 
16d80     FF 05 F3 0F 
16d84     0E 08 16 0B | 	byte	$1b, $1f, $0b, $0a, $f2, $e0, $fb, $ed, $ff, $05, $f3, $0f, $0e, $08, $16, $0b
16d88     01 05 0A 08 
16d8c     1D 17 03 0D 
16d90     04 ED EB ED 
16d94     F8 00 F1 FF | 	byte	$01, $05, $0a, $08, $1d, $17, $03, $0d, $04, $ed, $eb, $ed, $f8, $00, $f1, $ff
16d98     13 F5 08 0B 
16d9c     11 28 1C 13 
16da0     09 00 0F 04 
16da4     E1 E1 DA F6 | 	byte	$13, $f5, $08, $0b, $11, $28, $1c, $13, $09, $00, $0f, $04, $e1, $e1, $da, $f6
16da8     16 FC 05 22 
16dac     1B 1F 09 01 
16db0     04 05 16 07 
16db4     F6 13 0E 08 | 	byte	$16, $fc, $05, $22, $1b, $1f, $09, $01, $04, $05, $16, $07, $f6, $13, $0e, $08
16db8     09 E5 E6 E5 
16dbc     F9 0A 0E 00 
16dc0     05 09 11 1B 
16dc4     07 15 1D 0B | 	byte	$09, $e5, $e6, $e5, $f9, $0a, $0e, $00, $05, $09, $11, $1b, $07, $15, $1d, $0b
16dc8     0A 04 E9 EA 
16dcc     F0 EA F5 FC 
16dd0     0A 16 13 1B 
16dd4     20 13 0D 15 | 	byte	$0a, $04, $e9, $ea, $f0, $ea, $f5, $fc, $0a, $16, $13, $1b, $20, $13, $0d, $15
16dd8     0B FE FE FC 
16ddc     07 00 F6 FB 
16de0     02 02 F0 F8 
16de4     08 0E 01 07 | 	byte	$0b, $fe, $fe, $fc, $07, $00, $f6, $fb, $02, $02, $f0, $f8, $08, $0e, $01, $07
16de8     07 07 08 1A 
16dec     17 19 09 FF 
16df0     04 02 F8 F5 
16df4     02 F7 ED FF | 	byte	$07, $07, $08, $1a, $17, $19, $09, $ff, $04, $02, $f8, $f5, $02, $f7, $ed, $ff
16df8     00 03 15 10 
16dfc     16 13 0A 0D 
16e00     00 F2 F6 FF 
16e04     07 E6 EC 01 | 	byte	$00, $03, $15, $10, $16, $13, $0a, $0d, $00, $f2, $f6, $ff, $07, $e6, $ec, $01
16e08     F8 08 09 FE 
16e0c     09 16 15 0B 
16e10     F3 11 1D 01 
16e14     03 FE 08 27 | 	byte	$f8, $08, $09, $fe, $09, $16, $15, $0b, $f3, $11, $1d, $01, $03, $fe, $08, $27
16e18     09 DA DA FF 
16e1c     31 13 E6 EA 
16e20     FF 1D 17 09 
16e24     FC FF 0D 1D | 	byte	$09, $da, $da, $ff, $31, $13, $e6, $ea, $ff, $1d, $17, $09, $fc, $ff, $0d, $1d
16e28     28 04 CB DB 
16e2c     08 41 2F DA 
16e30     AB D9 2E 53 
16e34     26 DA CF FF | 	byte	$28, $04, $cb, $db, $08, $41, $2f, $da, $ab, $d9, $2e, $53, $26, $da, $cf, $ff
16e38     35 4B 43 04 
16e3c     C0 98 DE 4B 
16e40     62 00 E0 FE 
16e44     FE ED D3 FF | 	byte	$35, $4b, $43, $04, $c0, $98, $de, $4b, $62, $00, $e0, $fe, $fe, $ed, $d3, $ff
16e48     38 55 2F DA 
16e4c     A7 D4 1B 55 
16e50     39 ED CF FF 
16e54     33 28 F0 CD | 	byte	$38, $55, $2f, $da, $a7, $d4, $1b, $55, $39, $ed, $cf, $ff, $33, $28, $f0, $cd
16e58     F6 1B 1A F2 
16e5c     EA F9 FF 1B 
16e60     26 ED EC 0D 
16e64     08 FD FF 07 | 	byte	$f6, $1b, $1a, $f2, $ea, $f9, $ff, $1b, $26, $ed, $ec, $0d, $08, $fd, $ff, $07
16e68     02 11 19 0D 
16e6c     00 DD E0 FF 
16e70     22 0E E7 FB 
16e74     1D 1F 1F F7 | 	byte	$02, $11, $19, $0d, $00, $dd, $e0, $ff, $22, $0e, $e7, $fb, $1d, $1f, $1f, $f7
16e78     CD F6 16 20 
16e7c     26 0B F7 DA 
16e80     F1 22 26 00 
16e84     F1 07 15 0E | 	byte	$cd, $f6, $16, $20, $26, $0b, $f7, $da, $f1, $22, $26, $00, $f1, $07, $15, $0e
16e88     F7 F2 F6 ED 
16e8c     08 2D 21 0F 
16e90     16 02 DA B9 
16e94     E3 3D 32 00 | 	byte	$f7, $f2, $f6, $ed, $08, $2d, $21, $0f, $16, $02, $da, $b9, $e3, $3d, $32, $00
16e98     08 1D 13 F7 
16e9c     D5 EC 25 46 
16ea0     45 0B C7 AE 
16ea4     D9 20 3A 2D | 	byte	$08, $1d, $13, $f7, $d5, $ec, $25, $46, $45, $0b, $c7, $ae, $d9, $20, $3a, $2d
16ea8     09 ED EC 15 
16eac     20 15 F7 E3 
16eb0     F3 15 26 00 
16eb4     E1 E0 0D 33 | 	byte	$09, $ed, $ec, $15, $20, $15, $f7, $e3, $f3, $15, $26, $00, $e1, $e0, $0d, $33
16eb8     3A 37 2D 00 
16ebc     AA D9 ED D2 
16ec0     07 4B 3B 00 
16ec4     E4 C9 FB 41 | 	byte	$3a, $37, $2d, $00, $aa, $d9, $ed, $d2, $07, $4b, $3b, $00, $e4, $c9, $fb, $41
16ec8     64 39 BD A9 
16ecc     D4 08 13 F8 
16ed0     08 07 FF 09 
16ed4     08 2E 3B 13 | 	byte	$64, $39, $bd, $a9, $d4, $08, $13, $f8, $08, $07, $ff, $09, $08, $2e, $3b, $13
16ed8     F9 F2 FF F0 
16edc     CC CB F3 FF 
16ee0     25 5E 75 26 
16ee4     E1 E4 AE BC | 	byte	$f9, $f2, $ff, $f0, $cc, $cb, $f3, $ff, $25, $5e, $75, $26, $e1, $e4, $ae, $bc
16ee8     FB 2E 13 ED 
16eec     DF E0 35 67 
16ef0     53 09 DB E6 
16ef4     DA F1 EF FB | 	byte	$fb, $2e, $13, $ed, $df, $e0, $35, $67, $53, $09, $db, $e6, $da, $f1, $ef, $fb
16ef8     1B 07 ED FB 
16efc     15 33 34 1F 
16f00     0B 05 ED CC 
16f04     C0 D2 F8 05 | 	byte	$1b, $07, $ed, $fb, $15, $33, $34, $1f, $0b, $05, $ed, $cc, $c0, $d2, $f8, $05
16f08     2E 6A 56 13 
16f0c     13 DA A9 CF 
16f10     11 19 F5 F5 
16f14     EF 1B 53 59 | 	byte	$2e, $6a, $56, $13, $13, $da, $a9, $cf, $11, $19, $f5, $f5, $ef, $1b, $53, $59
16f18     39 F9 D1 B6 
16f1c     D4 FF 15 1B 
16f20     0E F2 EC 15 
16f24     31 43 26 00 | 	byte	$39, $f9, $d1, $b6, $d4, $ff, $15, $1b, $0e, $f2, $ec, $15, $31, $43, $26, $00
16f28     F9 DF C3 C5 
16f2c     E0 05 2E 40 
16f30     26 19 31 04 
16f34     B9 CD FF FC | 	byte	$f9, $df, $c3, $c5, $e0, $05, $2e, $40, $26, $19, $31, $04, $b9, $cd, $ff, $fc
16f38     EA F6 FB 35 
16f3c     59 68 39 DA 
16f40     AE BF DE 15 
16f44     04 FF 0E ED | 	byte	$ea, $f6, $fb, $35, $59, $68, $39, $da, $ae, $bf, $de, $15, $04, $ff, $0e, $ed
16f48     F1 25 44 40 
16f4c     13 DF E3 E9 
16f50     E5 F3 FF 20 
16f54     27 05 10 20 | 	byte	$f1, $25, $44, $40, $13, $df, $e3, $e9, $e5, $f3, $ff, $20, $27, $05, $10, $20
16f58     26 DF C0 EC 
16f5c     F1 E5 F0 FF 
16f60     38 64 64 56 
16f64     17 C7 9E CF | 	byte	$26, $df, $c0, $ec, $f1, $e5, $f0, $ff, $38, $64, $64, $56, $17, $c7, $9e, $cf
16f68     03 09 0D 1C 
16f6c     09 DD EC 1B 
16f70     2D 26 02 E1 
16f74     F1 0A 04 FE | 	byte	$03, $09, $0d, $1c, $09, $dd, $ec, $1b, $2d, $26, $02, $e1, $f1, $0a, $04, $fe
16f78     07 1F 1A 00 
16f7c     0F 15 17 DA 
16f80     BC D4 D4 EA 
16f84     FF 2C 5C 5F | 	byte	$07, $1f, $1a, $00, $0f, $15, $17, $da, $bc, $d4, $d4, $ea, $ff, $2c, $5c, $5f
16f88     56 26 DA 99 
16f8c     CB FE 08 29 
16f90     33 09 CE E3 
16f94     20 1C 03 FB | 	byte	$56, $26, $da, $99, $cb, $fe, $08, $29, $33, $09, $ce, $e3, $20, $1c, $03, $fb
16f98     ED 07 1D 04 
16f9c     F1 FB 0F 07 
16fa0     08 23 1F 1C 
16fa4     DA B0 BF D4 | 	byte	$ed, $07, $1d, $04, $f1, $fb, $0f, $07, $08, $23, $1f, $1c, $da, $b0, $bf, $d4
16fa8     F3 0D 3F 57 
16fac     4C 3E 00 B9 
16fb0     A7 EC 1D 20 
16fb4     2E 13 FE F2 | 	byte	$f3, $0d, $3f, $57, $4c, $3e, $00, $b9, $a7, $ec, $1d, $20, $2e, $13, $fe, $f2
16fb8     EC 14 1D FC 
16fbc     F3 FF 0F 13 
16fc0     02 F6 07 1B 
16fc4     0A 0B 26 20 | 	byte	$ec, $14, $1d, $fc, $f3, $ff, $0f, $13, $02, $f6, $07, $1b, $0a, $0b, $26, $20
16fc8     1F F2 AA A9 
16fcc     C9 F1 16 33 
16fd0     49 3A 2F 09 
16fd4     D1 AA D4 1B | 	byte	$1f, $f2, $aa, $a9, $c9, $f1, $16, $33, $49, $3a, $2f, $09, $d1, $aa, $d4, $1b
16fd8     39 39 15 FB 
16fdc     0B F5 EA 03 
16fe0     05 0D 14 08 
16fe4     15 13 FE 05 | 	byte	$39, $39, $15, $fb, $0b, $f5, $ea, $03, $05, $0d, $14, $08, $15, $13, $fe, $05
16fe8     16 05 0B 23 
16fec     22 26 DF A3 
16ff0     AE CF 0A 35 
16ff4     39 26 20 13 | 	byte	$16, $05, $0b, $23, $22, $26, $df, $a3, $ae, $cf, $0a, $35, $39, $26, $20, $13
16ff8     E4 BF CE 05 
16ffc     38 43 19 F6 
17000     03 05 DD EA 
17004     03 1B 2B 14 | 	byte	$e4, $bf, $ce, $05, $38, $43, $19, $f6, $03, $05, $dd, $ea, $03, $1b, $2b, $14
17008     04 04 FD FD 
1700c     0A 0E 0D 26 
17010     26 26 ED AA 
17014     A7 C3 FF 3D | 	byte	$04, $04, $fd, $fd, $0a, $0e, $0d, $26, $26, $26, $ed, $aa, $a7, $c3, $ff, $3d
17018     39 26 1A 13 
1701c     F2 CE CB FB 
17020     33 4F 26 ED 
17024     EF 0B FC E4 | 	byte	$39, $26, $1a, $13, $f2, $ce, $cb, $fb, $33, $4f, $26, $ed, $ef, $0b, $fc, $e4
17028     F6 10 29 2B 
1702c     04 F9 F5 F8 
17030     08 16 0E 1A 
17034     29 26 17 DA | 	byte	$f6, $10, $29, $2b, $04, $f9, $f5, $f8, $08, $16, $0e, $1a, $29, $26, $17, $da
17038     A2 AE CD 11 
1703c     44 33 26 1B 
17040     0E ED C9 CF 
17044     08 41 50 1C | 	byte	$a2, $ae, $cd, $11, $44, $33, $26, $1b, $0e, $ed, $c9, $cf, $08, $41, $50, $1c
17048     ED F6 04 F2 
1704c     EA 04 20 2B 
17050     13 FC EA ED 
17054     FF 10 13 1D | 	byte	$ed, $f6, $04, $f2, $ea, $04, $20, $2b, $13, $fc, $ea, $ed, $ff, $10, $13, $1d
17058     2C 29 17 D1 
1705c     A3 AB D4 1B 
17060     41 2B 1A 14 
17064     04 E9 D4 D3 | 	byte	$2c, $29, $17, $d1, $a3, $ab, $d4, $1b, $41, $2b, $1a, $14, $04, $e9, $d4, $d3
17068     FB 3D 5D 2F 
1706c     E4 D8 FF FD 
17070     F2 FF 15 20 
17074     1C 00 F2 ED | 	byte	$fb, $3d, $5d, $2f, $e4, $d8, $ff, $fd, $f2, $ff, $15, $20, $1c, $00, $f2, $ed
17078     F8 0B 1A 1B 
1707c     27 21 1F ED 
17080     AF B0 CB FB 
17084     33 4A 34 20 | 	byte	$f8, $0b, $1a, $1b, $27, $21, $1f, $ed, $af, $b0, $cb, $fb, $33, $4a, $34, $20
17088     0B E9 D2 D3 
1708c     EC 22 59 56 
17090     13 DA DA F3 
17094     05 09 13 14 | 	byte	$0b, $e9, $d2, $d3, $ec, $22, $59, $56, $13, $da, $da, $f3, $05, $09, $13, $14
17098     13 00 F5 F9 
1709c     FB 05 19 1D 
170a0     19 1B 16 13 
170a4     ED BD BC D1 | 	byte	$13, $00, $f5, $f9, $fb, $05, $19, $1d, $19, $1b, $16, $13, $ed, $bd, $bc, $d1
170a8     F6 2E 4B 46 
170ac     32 04 DA C7 
170b0     CF FD 2E 4B 
170b4     39 F9 DA E7 | 	byte	$f6, $2e, $4b, $46, $32, $04, $da, $c7, $cf, $fd, $2e, $4b, $39, $f9, $da, $e7
170b8     05 02 08 0F 
170bc     0F 00 F7 F0 
170c0     FB 08 13 1D 
170c4     13 10 13 0D | 	byte	$05, $02, $08, $0f, $0f, $00, $f7, $f0, $fb, $08, $13, $1d, $13, $10, $13, $0d
170c8     FC DA BF C8 
170cc     DE 16 49 4D 
170d0     44 1C E4 BD 
170d4     C1 E7 25 4F | 	byte	$fc, $da, $bf, $c8, $de, $16, $49, $4d, $44, $1c, $e4, $bd, $c1, $e7, $25, $4f
170d8     3A 00 D1 E3 
170dc     08 16 13 0A 
170e0     00 F7 F3 F9 
170e4     0B 0E 13 0F | 	byte	$3a, $00, $d1, $e3, $08, $16, $13, $0a, $00, $f7, $f3, $f9, $0b, $0e, $13, $0f
170e8     11 1B 17 13 
170ec     F7 D1 C0 CD 
170f0     E3 16 49 4F 
170f4     46 26 ED C2 | 	byte	$11, $1b, $17, $13, $f7, $d1, $c0, $cd, $e3, $16, $49, $4f, $46, $26, $ed, $c2
170f8     BC D9 0D 4B 
170fc     4A 13 E4 D2 
17100     EF 15 22 13 
17104     07 FC F3 F9 | 	byte	$bc, $d9, $0d, $4b, $4a, $13, $e4, $d2, $ef, $15, $22, $13, $07, $fc, $f3, $f9
17108     03 0D 15 15 
1710c     13 1A 1D 17 
17110     04 E6 C7 C3 
17114     D4 FF 38 4F | 	byte	$03, $0d, $15, $15, $13, $1a, $1d, $17, $04, $e6, $c7, $c3, $d4, $ff, $38, $4f
17118     4B 2F F7 C7 
1711c     BC DE 11 44 
17120     3E 09 DA CD 
17124     FB 1A 26 13 | 	byte	$4b, $2f, $f7, $c7, $bc, $de, $11, $44, $3e, $09, $da, $cd, $fb, $1a, $26, $13
17128     FB ED E5 FF 
1712c     15 17 13 07 
17130     0D 1B 1F 14 
17134     01 E1 C2 C1 | 	byte	$fb, $ed, $e5, $ff, $15, $17, $13, $07, $0d, $1b, $1f, $14, $01, $e1, $c2, $c1
17138     DD 11 44 4F 
1713c     4A 17 DF C0 
17140     C5 F3 29 49 
17144     2B F7 C8 D8 | 	byte	$dd, $11, $44, $4f, $4a, $17, $df, $c0, $c5, $f3, $29, $49, $2b, $f7, $c8, $d8
17148     0D 29 26 07 
1714c     ED E7 F8 07 
17150     13 0E 0D 0F 
17154     1A 20 1C 13 | 	byte	$0d, $29, $26, $07, $ed, $e7, $f8, $07, $13, $0e, $0d, $0f, $1a, $20, $1c, $13
17158     F5 DA C2 C5 
1715c     E5 15 41 4D 
17160     47 26 E6 C0 
17164     C5 EC 25 3E | 	byte	$f5, $da, $c2, $c5, $e5, $15, $41, $4d, $47, $26, $e6, $c0, $c5, $ec, $25, $3e
17168     2F 00 D1 DB 
1716c     08 2B 29 09 
17170     E9 E0 FB 0F 
17174     10 15 14 16 | 	byte	$2f, $00, $d1, $db, $08, $2b, $29, $09, $e9, $e0, $fb, $0f, $10, $15, $14, $16
17178     1F 1D 13 00 
1717c     ED DA C3 D4 
17180     FD 25 46 4C 
17184     2B F7 CF C7 | 	byte	$1f, $1d, $13, $00, $ed, $da, $c3, $d4, $fd, $25, $46, $4c, $2b, $f7, $cf, $c7
17188     E7 15 34 26 
1718c     00 DB DB 05 
17190     27 2B 0B E5 
17194     DE EF 0D 15 | 	byte	$e7, $15, $34, $26, $00, $db, $db, $05, $27, $2b, $0b, $e5, $de, $ef, $0d, $15
17198     0E 0A 19 29 
1719c     1F 09 F2 ED 
171a0     E1 D3 D7 EF 
171a4     1B 3D 47 2F | 	byte	$0e, $0a, $19, $29, $1f, $09, $f2, $ed, $e1, $d3, $d7, $ef, $1b, $3d, $47, $2f
171a8     00 DB CB E3 
171ac     1B 3F 26 F2 
171b0     CF E7 11 2C 
171b4     26 00 E1 E4 | 	byte	$00, $db, $cb, $e3, $1b, $3f, $26, $f2, $cf, $e7, $11, $2c, $26, $00, $e1, $e4
171b8     FB 05 05 05 
171bc     0F 20 3A 32 
171c0     04 E6 ED E9 
171c4     D4 D7 F0 0F | 	byte	$fb, $05, $05, $05, $0f, $20, $3a, $32, $04, $e6, $ed, $e9, $d4, $d7, $f0, $0f
171c8     31 3F 2F 09 
171cc     E4 DE F8 22 
171d0     35 13 E9 D3 
171d4     F3 1D 28 13 | 	byte	$31, $3f, $2f, $09, $e4, $de, $f8, $22, $35, $13, $e9, $d3, $f3, $1d, $28, $13
171d8     00 F0 F5 FE 
171dc     FC FD 04 0A 
171e0     2C 49 3B 04 
171e4     E4 DA CB CF | 	byte	$00, $f0, $f5, $fe, $fc, $fd, $04, $0a, $2c, $49, $3b, $04, $e4, $da, $cb, $cf
171e8     F1 1B 32 3A 
171ec     26 ED CF D4 
171f0     FF 3A 45 14 
171f4     E4 D8 FD 19 | 	byte	$f1, $1b, $32, $3a, $26, $ed, $cf, $d4, $ff, $3a, $45, $14, $e4, $d8, $fd, $19
171f8     0D 04 FC FB 
171fc     FD F7 F2 F6 
17200     02 03 27 4B 
17204     4F 17 E9 CC | 	byte	$0d, $04, $fc, $fb, $fd, $f7, $f2, $f6, $02, $03, $27, $4b, $4f, $17, $e9, $cc
17208     C3 C7 E7 1B 
1720c     39 3E 2C F2 
17210     C0 C3 FF 35 
17214     40 1C F2 E7 | 	byte	$c3, $c7, $e7, $1b, $39, $3e, $2c, $f2, $c0, $c3, $ff, $35, $40, $1c, $f2, $e7
17218     F6 0A 0F 07 
1721c     01 FF FC F2 
17220     E7 E7 FF 0D 
17224     13 3A 50 47 | 	byte	$f6, $0a, $0f, $07, $01, $ff, $fc, $f2, $e7, $e7, $ff, $0d, $13, $3a, $50, $47
17228     0B DF C2 BC 
1722c     C9 EA 20 41 
17230     46 32 F7 C0 
17234     C1 F6 2E 39 | 	byte	$0b, $df, $c2, $bc, $c9, $ea, $20, $41, $46, $32, $f7, $c0, $c1, $f6, $2e, $39
17238     1A 09 F2 F3 
1723c     02 0B 0E 09 
17240     FE F9 F2 ED 
17244     F6 03 05 16 | 	byte	$1a, $09, $f2, $f3, $02, $0b, $0e, $09, $fe, $f9, $f2, $ed, $f6, $03, $05, $16
17248     46 58 39 F7 
1724c     CF BD C1 D8 
17250     0D 37 40 39 
17254     02 C7 CB F6 | 	byte	$46, $58, $39, $f7, $cf, $bd, $c1, $d8, $0d, $37, $40, $39, $02, $c7, $cb, $f6
17258     1B 28 1C 17 
1725c     02 F6 F3 03 
17260     0F 09 00 F8 
17264     F2 E5 EF 08 | 	byte	$1b, $28, $1c, $17, $02, $f6, $f3, $03, $0f, $09, $00, $f8, $f2, $e5, $ef, $08
17268     0A 14 41 57 
1726c     32 09 E4 C0 
17270     BF C9 FF 3A 
17274     4A 3E 00 C8 | 	byte	$0a, $14, $41, $57, $32, $09, $e4, $c0, $bf, $c9, $ff, $3a, $4a, $3e, $00, $c8
17278     CB F6 0D 20 
1727c     1F 17 00 F2 
17280     FB 0A 17 01 
17284     F9 FF FB ED | 	byte	$cb, $f6, $0d, $20, $1f, $17, $00, $f2, $fb, $0a, $17, $01, $f9, $ff, $fb, $ed
17288     ED FB 07 0D 
1728c     2C 4B 3E 17 
17290     04 DD C3 BC 
17294     D4 16 3F 44 | 	byte	$ed, $fb, $07, $0d, $2c, $4b, $3e, $17, $04, $dd, $c3, $bc, $d4, $16, $3f, $44
17298     1C F0 E3 E7 
1729c     F3 0A 19 26 
172a0     13 F5 F3 08 
172a4     20 09 F5 FD | 	byte	$1c, $f0, $e3, $e7, $f3, $0a, $19, $26, $13, $f5, $f3, $08, $20, $09, $f5, $fd
172a8     FC E9 ED FB 
172ac     FF 05 2E 4C 
172b0     2C 1A 09 DA 
172b4     C1 B7 E3 29 | 	byte	$fc, $e9, $ed, $fb, $ff, $05, $2e, $4c, $2c, $1a, $09, $da, $c1, $b7, $e3, $29
172b8     43 39 09 E6 
172bc     F1 E9 EF 14 
172c0     28 26 00 E5 
172c4     03 2E 17 E1 | 	byte	$43, $39, $09, $e6, $f1, $e9, $ef, $14, $28, $26, $00, $e5, $03, $2e, $17, $e1
172c8     E7 FF F5 E1 
172cc     F0 FE 00 14 
172d0     44 3A 1F 2B 
172d4     04 CC A8 C3 | 	byte	$e7, $ff, $f5, $e1, $f0, $fe, $00, $14, $44, $3a, $1f, $2b, $04, $cc, $a8, $c3
172d8     16 39 2F 17 
172dc     02 04 ED DE 
172e0     0A 21 16 00 
172e4     F6 14 34 1C | 	byte	$16, $39, $2f, $17, $02, $04, $ed, $de, $0a, $21, $16, $00, $f6, $14, $34, $1c
172e8     ED E6 FF F7 
172ec     DD EA F7 F8 
172f0     0D 33 32 26 
172f4     34 31 F2 B6 | 	byte	$ed, $e6, $ff, $f7, $dd, $ea, $f7, $f8, $0d, $33, $32, $26, $34, $31, $f2, $b6
172f8     A9 F3 21 19 
172fc     14 17 1D 00 
17300     DA FB 19 14 
17304     05 F9 1B 3B | 	byte	$a9, $f3, $21, $19, $14, $17, $1d, $00, $da, $fb, $19, $14, $05, $f9, $1b, $3b
17308     26 FB EA FB 
1730c     F9 DA E3 F2 
17310     F1 10 28 1F 
17314     27 49 2F E4 | 	byte	$26, $fb, $ea, $fb, $f9, $da, $e3, $f2, $f1, $10, $28, $1f, $27, $49, $2f, $e4
17318     A8 C6 0A 0B 
1731c     F8 FF 20 27 
17320     00 DB FF 19 
17324     13 F7 FD 38 | 	byte	$a8, $c6, $0a, $0b, $f8, $ff, $20, $27, $00, $db, $ff, $19, $13, $f7, $fd, $38
17328     39 00 F2 08 
1732c     15 E6 C3 E3 
17330     EF EC 20 26 
17334     14 2E 4C 1C | 	byte	$39, $00, $f2, $08, $15, $e6, $c3, $e3, $ef, $ec, $20, $26, $14, $2e, $4c, $1c
17338     CC CF 05 0B 
1733c     ED E1 03 1D 
17340     19 F9 F1 07 
17344     0D 00 F0 0A | 	byte	$cc, $cf, $05, $0b, $ed, $e1, $03, $1d, $19, $f9, $f1, $07, $0d, $00, $f0, $0a
17348     33 34 04 FB 
1734c     0F 17 ED D5 
17350     E7 DA E0 0D 
17354     33 45 2B 00 | 	byte	$33, $34, $04, $fb, $0f, $17, $ed, $d5, $e7, $da, $e0, $0d, $33, $45, $2b, $00
17358     FF 0F 07 F7 
1735c     FD 01 F7 DB 
17360     E1 FF 14 26 
17364     15 0B 07 02 | 	byte	$ff, $0f, $07, $f7, $fd, $01, $f7, $db, $e1, $ff, $14, $26, $15, $0b, $07, $02
17368     02 04 14 17 
1736c     0E 09 04 F9 
17370     E0 F0 F8 FF 
17374     08 0F 1A 17 | 	byte	$02, $04, $14, $17, $0e, $09, $04, $f9, $e0, $f0, $f8, $ff, $08, $0f, $1a, $17
17378     17 16 14 05 
1737c     FC EF EB F1 
17380     EF EF F1 03 
17384     17 19 19 21 | 	byte	$17, $16, $14, $05, $fc, $ef, $eb, $f1, $ef, $ef, $f1, $03, $17, $19, $19, $21
17388     20 14 0E 02 
1738c     F0 F3 F5 EB 
17390     E7 FB 00 02 
17394     1B 20 15 13 | 	byte	$20, $14, $0e, $02, $f0, $f3, $f5, $eb, $e7, $fb, $00, $02, $1b, $20, $15, $13
17398     13 09 00 00 
1739c     FB F7 FB FE 
173a0     F6 07 0A 04 
173a4     FF 0D 1B 0D | 	byte	$13, $09, $00, $00, $fb, $f7, $fb, $fe, $f6, $07, $0a, $04, $ff, $0d, $1b, $0d
173a8     0B 00 FF 07 
173ac     08 FC FF 08 
173b0     FB F3 FE 0F 
173b4     0E 03 0A 0E | 	byte	$0b, $00, $ff, $07, $08, $fc, $ff, $08, $fb, $f3, $fe, $0f, $0e, $03, $0a, $0e
173b8     08 0A 08 07 
173bc     FC 03 09 00 
173c0     FC FF 01 01 
173c4     00 07 08 10 | 	byte	$08, $0a, $08, $07, $fc, $03, $09, $00, $fc, $ff, $01, $01, $00, $07, $08, $10
173c8     0B 04 FE 08 
173cc     0B 09 00 FF 
173d0     0E 0A 00 F3 
173d4     FF 0E 08 04 | 	byte	$0b, $04, $fe, $08, $0b, $09, $00, $ff, $0e, $0a, $00, $f3, $ff, $0e, $08, $04
173d8     03 0D 0E 00 
173dc     FE 04 07 09 
173e0     00 01 04 FF 
173e4     FF 00 05 0A | 	byte	$03, $0d, $0e, $00, $fe, $04, $07, $09, $00, $01, $04, $ff, $ff, $00, $05, $0a
173e8     F7 FF 0D 05 
173ec     00 02 02 FF 
173f0     07 09 04 01 
173f4     08 05 FE 03 | 	byte	$f7, $ff, $0d, $05, $00, $02, $02, $ff, $07, $09, $04, $01, $08, $05, $fe, $03
173f8     0D 09 F1 FB 
173fc     1B 13 00 0D 
17400     0F F7 E7 FF 
17404     1B 17 00 03 | 	byte	$0d, $09, $f1, $fb, $1b, $13, $00, $0d, $0f, $f7, $e7, $ff, $1b, $17, $00, $03
17408     05 FD FC FE 
1740c     09 19 00 F6 
17410     0F 09 F2 FB 
17414     14 0B FB 05 | 	byte	$05, $fd, $fc, $fe, $09, $19, $00, $f6, $0f, $09, $f2, $fb, $14, $0b, $fb, $05
17418     0E 09 FB 01 
1741c     0E 15 ED FB 
17420     2E 04 C7 F6 
17424     3B 13 F6 27 | 	byte	$0e, $09, $fb, $01, $0e, $15, $ed, $fb, $2e, $04, $c7, $f6, $3b, $13, $f6, $27
17428     13 D3 E7 27 
1742c     04 FF 27 0B 
17430     E5 08 1C DF 
17434     F3 2E 1A ED | 	byte	$13, $d3, $e7, $27, $04, $ff, $27, $0b, $e5, $08, $1c, $df, $f3, $2e, $1a, $ed
17438     19 1C ED F6 
1743c     1B 13 D1 F6 
17440     27 F2 FF 47 
17444     17 B9 F6 2F | 	byte	$19, $1c, $ed, $f6, $1b, $13, $d1, $f6, $27, $f2, $ff, $47, $17, $b9, $f6, $2f
17448     E9 EF 3D 17 
1744c     C7 FB 1D DD 
17450     F6 38 28 E1 
17454     FF 37 00 CF | 	byte	$e9, $ef, $3d, $17, $c7, $fb, $1d, $dd, $f6, $38, $28, $e1, $ff, $37, $00, $cf
17458     25 13 F1 14 
1745c     0B F0 FF ED 
17460     EA 2C 1C E4 
17464     38 45 DA CF | 	byte	$25, $13, $f1, $14, $0b, $f0, $ff, $ed, $ea, $2c, $1c, $e4, $38, $45, $da, $cf
17468     32 F2 CF 25 
1746c     13 CD FF 26 
17470     ED FB 46 13 
17474     EF 16 2D F7 | 	byte	$32, $f2, $cf, $25, $13, $cd, $ff, $26, $ed, $fb, $46, $13, $ef, $16, $2d, $f7
17478     CF 08 00 FD 
1747c     15 00 FB 0D 
17480     ED CB 25 3E 
17484     F2 16 5B 13 | 	byte	$cf, $08, $00, $fd, $15, $00, $fb, $0d, $ed, $cb, $25, $3e, $f2, $16, $5b, $13
17488     C7 11 1C C7 
1748c     E7 26 DA E7 
17490     1A F0 EC 41 
17494     3E 01 0D 0F | 	byte	$c7, $11, $1c, $c7, $e7, $26, $da, $e7, $1a, $f0, $ec, $41, $3e, $01, $0d, $0f
17498     13 01 05 F8 
1749c     F6 13 00 E7 
174a0     07 F7 BF FF 
174a4     3F 09 FF 5C | 	byte	$13, $01, $05, $f8, $f6, $13, $00, $e7, $07, $f7, $bf, $ff, $3f, $09, $ff, $5c
174a8     2F E1 25 13 
174ac     C8 EC 09 B9 
174b0     E3 04 E1 F3 
174b4     3D 26 0D 2D | 	byte	$2f, $e1, $25, $13, $c8, $ec, $09, $b9, $e3, $04, $e1, $f3, $3d, $26, $0d, $2d
174b8     0E 0B 1B 13 
174bc     F5 08 13 E4 
174c0     DE FF E4 B5 
174c4     0D 3E 09 FF | 	byte	$0e, $0b, $1b, $13, $f5, $08, $13, $e4, $de, $ff, $e4, $b5, $0d, $3e, $09, $ff
174c8     65 39 E1 2E 
174cc     00 D4 FF 13 
174d0     B4 E7 02 D4 
174d4     08 3F 1C 16 | 	byte	$65, $39, $e1, $2e, $00, $d4, $ff, $13, $b4, $e7, $02, $d4, $08, $3f, $1c, $16
174d8     39 00 F6 32 
174dc     09 E4 FB 13 
174e0     ED E9 E4 F1 
174e4     E6 DE 29 43 | 	byte	$39, $00, $f6, $32, $09, $e4, $fb, $13, $ed, $e9, $e4, $f1, $e6, $de, $29, $43
174e8     04 11 63 2B 
174ec     DA 19 00 D3 
174f0     F1 13 C0 D9 
174f4     0B DE 1B 4B | 	byte	$04, $11, $63, $2b, $da, $19, $00, $d3, $f1, $13, $c0, $d9, $0b, $de, $1b, $4b
174f8     2F 14 39 F2 
174fc     DE 33 00 DD 
17500     05 04 E6 F0 
17504     F6 F8 F3 EF | 	byte	$2f, $14, $39, $f2, $de, $33, $00, $dd, $05, $04, $e6, $f0, $f6, $f8, $f3, $ef
17508     25 3D 0B 16 
1750c     5C 13 CD 10 
17510     E4 D3 FF 00 
17514     BB 08 04 EC | 	byte	$25, $3d, $0b, $16, $5c, $13, $cd, $10, $e4, $d3, $ff, $00, $bb, $08, $04, $ec
17518     2E 3E 26 33 
1751c     26 D1 F1 2B 
17520     E4 D7 0D F2 
17524     E5 F7 F6 0D | 	byte	$2e, $3e, $26, $33, $26, $d1, $f1, $2b, $e4, $d7, $0d, $f2, $e5, $f7, $f6, $0d
17528     01 F5 2E 45 
1752c     02 11 5B 00 
17530     CF 13 CC D4 
17534     11 00 BC 1B | 	byte	$01, $f5, $2e, $45, $02, $11, $5b, $00, $cf, $13, $cc, $d4, $11, $00, $bc, $1b
17538     00 FF 3B 34 
1753c     14 33 1C D1 
17540     FF 1D E4 DE 
17544     08 F7 E6 FD | 	byte	$00, $ff, $3b, $34, $14, $33, $1c, $d1, $ff, $1d, $e4, $de, $08, $f7, $e6, $fd
17548     08 0D 09 FF 
1754c     16 3F 39 00 
17550     2E 3B DA CB 
17554     0B DA DB 15 | 	byte	$08, $0d, $09, $ff, $16, $3f, $39, $00, $2e, $3b, $da, $cb, $0b, $da, $db, $15
17558     00 CF 23 00 
1755c     11 39 37 1A 
17560     26 09 C8 FD 
17564     0E DF E3 0D | 	byte	$00, $cf, $23, $00, $11, $39, $37, $1a, $26, $09, $c8, $fd, $0e, $df, $e3, $0d
17568     F7 F3 FF 07 
1756c     1A 20 07 08 
17570     3F 26 E9 25 
17574     26 B4 E3 F2 | 	byte	$f7, $f3, $ff, $07, $1a, $20, $07, $08, $3f, $26, $e9, $25, $26, $b4, $e3, $f2
17578     C7 F6 26 DD 
1757c     FF 2C F5 25 
17580     33 26 16 26 
17584     DA D9 08 E5 | 	byte	$c7, $f6, $26, $dd, $ff, $2c, $f5, $25, $33, $26, $16, $26, $da, $d9, $08, $e5
17588     DE FF 04 F1 
1758c     FF 0B 1B 28 
17590     19 04 08 44 
17594     09 EC 38 00 | 	byte	$de, $ff, $04, $f1, $ff, $0b, $1b, $28, $19, $04, $08, $44, $09, $ec, $38, $00
17598     AE FF ED CB 
1759c     0D 26 DD 1B 
175a0     13 F6 37 28 
175a4     13 19 26 DA | 	byte	$ae, $ff, $ed, $cb, $0d, $26, $dd, $1b, $13, $f6, $37, $28, $13, $19, $26, $da
175a8     E3 0A ED D3 
175ac     F6 05 F8 05 
175b0     16 13 1D 2C 
175b4     13 FF 25 39 | 	byte	$e3, $0a, $ed, $d3, $f6, $05, $f8, $05, $16, $13, $1d, $2c, $13, $ff, $25, $39
175b8     F2 F6 31 DA 
175bc     B3 0D DA D4 
175c0     29 26 E7 29 
175c4     13 0D 32 13 | 	byte	$f2, $f6, $31, $da, $b3, $0d, $da, $d4, $29, $26, $e7, $29, $13, $0d, $32, $13
175c8     07 26 13 CC 
175cc     F3 01 DA E7 
175d0     0B FB FF 16 
175d4     1C 20 1F 13 | 	byte	$07, $26, $13, $cc, $f3, $01, $da, $e7, $0b, $fb, $ff, $16, $1c, $20, $1f, $13
175d8     00 0D 27 F5 
175dc     FF 2B DA B7 
175e0     08 DA D7 22 
175e4     17 ED 28 17 | 	byte	$00, $0d, $27, $f5, $ff, $2b, $da, $b7, $08, $da, $d7, $22, $17, $ed, $28, $17
175e8     0B 2C 14 13 
175ec     26 04 C7 F1 
175f0     00 DA EC 0D 
175f4     FE FF 1F 13 | 	byte	$0b, $2c, $14, $13, $26, $04, $c7, $f1, $00, $da, $ec, $0d, $fe, $ff, $1f, $13
175f8     1A 27 26 00 
175fc     FB 33 00 E5 
17600     2E F2 A8 FF 
17604     00 CF 11 2F | 	byte	$1a, $27, $26, $00, $fb, $33, $00, $e5, $2e, $f2, $a8, $ff, $00, $cf, $11, $2f
17608     ED 11 26 FD 
1760c     27 26 20 16 
17610     0A DF E3 05 
17614     E4 DD FF 0B | 	byte	$ed, $11, $26, $fd, $27, $26, $20, $16, $0a, $df, $e3, $05, $e4, $dd, $ff, $0b
17618     FB 0F 19 0F 
1761c     1B 26 1A FE 
17620     22 2F E6 F6 
17624     2C D1 BC 16 | 	byte	$fb, $0f, $19, $0f, $1b, $26, $1a, $fe, $22, $2f, $e6, $f6, $2c, $d1, $bc, $16
17628     E4 CF 1B 1C 
1762c     E6 25 1C 0D 
17630     1F 29 26 FD 
17634     FF FC E4 E3 | 	byte	$e4, $cf, $1b, $1c, $e6, $25, $1c, $0d, $1f, $29, $26, $fd, $ff, $fc, $e4, $e3
17638     01 E6 EC 07 
1763c     FF 0D 1F 16 
17640     1B 19 0F 26 
17644     1D ED F5 26 | 	byte	$01, $e6, $ec, $07, $ff, $0d, $1f, $16, $1b, $19, $0f, $26, $1d, $ed, $f5, $26
17648     E4 C6 FB F2 
1764c     D5 F6 13 05 
17650     0B 11 2D 26 
17654     20 1C 09 0D | 	byte	$e4, $c6, $fb, $f2, $d5, $f6, $13, $05, $0b, $11, $2d, $26, $20, $1c, $09, $0d
17658     04 DF E0 F0 
1765c     EF F8 ED FF 
17660     19 13 1B 27 
17664     20 16 13 13 | 	byte	$04, $df, $e0, $f0, $ef, $f8, $ed, $ff, $19, $13, $1b, $27, $20, $16, $13, $13
17668     0A 09 FB E4 
1766c     E5 E9 E7 ED 
17670     F6 F6 FD 08 
17674     0D 28 32 27 | 	byte	$0a, $09, $fb, $e4, $e5, $e9, $e7, $ed, $f6, $f6, $fd, $08, $0d, $28, $32, $27
17678     20 13 02 F7 
1767c     F2 ED ED EA 
17680     E6 F3 03 0D 
17684     14 13 19 26 | 	byte	$20, $13, $02, $f7, $f2, $ed, $ed, $ea, $e6, $f3, $03, $0d, $14, $13, $19, $26
17688     26 17 1B 14 
1768c     09 00 ED EB 
17690     F0 E6 E5 EB 
17694     F8 05 16 21 | 	byte	$26, $17, $1b, $14, $09, $00, $ed, $eb, $f0, $e6, $e5, $eb, $f8, $05, $16, $21
17698     27 29 26 19 
1769c     13 07 F7 E7 
176a0     E3 E3 EB F3 
176a4     FB 03 09 1B | 	byte	$27, $29, $26, $19, $13, $07, $f7, $e7, $e3, $e3, $eb, $f3, $fb, $03, $09, $1b
176a8     26 1A 20 1A 
176ac     13 0F F7 F1 
176b0     F6 EA F3 F5 
176b4     FF 05 01 0B | 	byte	$26, $1a, $20, $1a, $13, $0f, $f7, $f1, $f6, $ea, $f3, $f5, $ff, $05, $01, $0b
176b8     0F 19 26 0E 
176bc     0F 13 FE FE 
176c0     00 F9 F6 F9 
176c4     FD FE 07 03 | 	byte	$0f, $19, $26, $0e, $0f, $13, $fe, $fe, $00, $f9, $f6, $f9, $fd, $fe, $07, $03
176c8     FF 08 16 0B 
176cc     FF 04 0A 04 
176d0     00 FF 01 08 
176d4     00 F6 FD 0A | 	byte	$ff, $08, $16, $0b, $ff, $04, $0a, $04, $00, $ff, $01, $08, $00, $f6, $fd, $0a
176d8     0B 05 0B 01 
176dc     FF 04 08 0D 
176e0     09 01 03 01 
176e4     FF 00 FF 01 | 	byte	$0b, $05, $0b, $01, $ff, $04, $08, $0d, $09, $01, $03, $01, $ff, $00, $ff, $01
176e8     FF 08 05 04 
176ec     04 0D 09 01 
176f0     FB FF 09 0B 
176f4     0D 09 02 03 | 	byte	$ff, $08, $05, $04, $04, $0d, $09, $01, $fb, $ff, $09, $0b, $0d, $09, $02, $03
176f8     0E 04 FC FD 
176fc     14 07 FC 03 
17700     00 03 0D 00 
17704     00 02 05 00 | 	byte	$0e, $04, $fc, $fd, $14, $07, $fc, $03, $00, $03, $0d, $00, $00, $02, $05, $00
17708     FB 0A 0D 01 
1770c     00 F7 08 09 
17710     04 01 02 05 
17714     08 09 FE 05 | 	byte	$fb, $0a, $0d, $01, $00, $f7, $08, $09, $04, $01, $02, $05, $08, $09, $fe, $05
17718     07 0F 0E FB 
1771c     03 0B 05 03 
17720     08 03 FC FB 
17724     FF 16 09 FF | 	byte	$07, $0f, $0e, $fb, $03, $0b, $05, $03, $08, $03, $fc, $fb, $ff, $16, $09, $ff
17728     03 08 07 04 
1772c     04 FF 0B 00 
17730     FF 03 FF 00 
17734     FF 05 07 03 | 	byte	$03, $08, $07, $04, $04, $ff, $0b, $00, $ff, $03, $ff, $00, $ff, $05, $07, $03
17738     09 0A 02 FF 
1773c     0F 0E 00 FC 
17740     04 03 FD FD 
17744     07 0A 0A 01 | 	byte	$09, $0a, $02, $ff, $0f, $0e, $00, $fc, $04, $03, $fd, $fd, $07, $0a, $0a, $01
17748     F8 FF 13 0A 
1774c     03 03 0A 09 
17750     F8 03 0E 03 
17754     FB FF 0B 0B | 	byte	$f8, $ff, $13, $0a, $03, $03, $0a, $09, $f8, $03, $0e, $03, $fb, $ff, $0b, $0b
17758     00 0B 0A F9 
1775c     FF 13 02 FF 
17760     0F 01 FF 0D 
17764     00 F8 0B 01 | 	byte	$00, $0b, $0a, $f9, $ff, $13, $02, $ff, $0f, $01, $ff, $0d, $00, $f8, $0b, $01
17768     05 05 F9 FC 
1776c     0A 08 FF 03 
17770     09 04 04 05 
17774     0B 04 03 01 | 	byte	$05, $05, $f9, $fc, $0a, $08, $ff, $03, $09, $04, $04, $05, $0b, $04, $03, $01
17778     FD 03 0D 05 
1777c     FF 08 02 FE 
17780     14 13 FC FF 
17784     05 09 FC 05 | 	byte	$fd, $03, $0d, $05, $ff, $08, $02, $fe, $14, $13, $fc, $ff, $05, $09, $fc, $05
17788     0A FE 07 0B 
1778c     00 F7 03 0A 
17790     05 05 13 03 
17794     FE 01 0D 00 | 	byte	$0a, $fe, $07, $0b, $00, $f7, $03, $0a, $05, $05, $13, $03, $fe, $01, $0d, $00
17798     07 03 00 FE 
1779c     03 0B 03 00 
177a0     FF 09 01 05 
177a4     0E 02 05 FE | 	byte	$07, $03, $00, $fe, $03, $0b, $03, $00, $ff, $09, $01, $05, $0e, $02, $05, $fe
177a8     F9 19 07 F9 
177ac     02 0A 05 FE 
177b0     03 13 04 FE 
177b4     FF 01 0E 13 | 	byte	$f9, $19, $07, $f9, $02, $0a, $05, $fe, $03, $13, $04, $fe, $ff, $01, $0e, $13
177b8     0A 00 FD 05 
177bc     00 FF 0B 07 
177c0     03 05 00 00 
177c4     09 07 03 04 | 	byte	$0a, $00, $fd, $05, $00, $ff, $0b, $07, $03, $05, $00, $00, $09, $07, $03, $04
177c8     FF 04 01 03 
177cc     04 02 F6 F9 
177d0     05 0B FD 03 
177d4     04 08 04 03 | 	byte	$ff, $04, $01, $03, $04, $02, $f6, $f9, $05, $0b, $fd, $03, $04, $08, $04, $03
177d8     04 02 03 0B 
177dc     0A FF 0D 09 
177e0     01 FE 04 FD 
177e4     0D 13 05 FD | 	byte	$04, $02, $03, $0b, $0a, $ff, $0d, $09, $01, $fe, $04, $fd, $0d, $13, $05, $fd
177e8     FF 09 00 FF 
177ec     0A 0E FC F1 
177f0     04 0D 19 04 
177f4     F9 01 02 FB | 	byte	$ff, $09, $00, $ff, $0a, $0e, $fc, $f1, $04, $0d, $19, $04, $f9, $01, $02, $fb
177f8     02 0F 0E 0D 
177fc     17 D1 E0 4B 
17800     2F B6 E3 37 
17804     2F F7 D3 0F | 	byte	$02, $0f, $0e, $0d, $17, $d1, $e0, $4b, $2f, $b6, $e3, $37, $2f, $f7, $d3, $0f
17808     2F ED F6 27 
1780c     15 F5 E3 08 
17810     2D F7 C8 1B 
17814     4F 00 E7 0F | 	byte	$2f, $ed, $f6, $27, $15, $f5, $e3, $08, $2d, $f7, $c8, $1b, $4f, $00, $e7, $0f
17818     14 F9 E7 0A 
1781c     04 FB 04 2C 
17820     47 F2 BC 20 
17824     2B C7 CF 3D | 	byte	$14, $f9, $e7, $0a, $04, $fb, $04, $2c, $47, $f2, $bc, $20, $2b, $c7, $cf, $3d
17828     2F 00 FF 15 
1782c     EF DA 0F 27 
17830     00 F7 FD 0B 
17834     FC DB FF 38 | 	byte	$2f, $00, $ff, $15, $ef, $da, $0f, $27, $00, $f7, $fd, $0b, $fc, $db, $ff, $38
17838     26 03 09 02 
1783c     E4 E7 EF E6 
17840     FF 3D 26 FF 
17844     4B 17 C7 11 | 	byte	$26, $03, $09, $02, $e4, $e7, $ef, $e6, $ff, $3d, $26, $ff, $4b, $17, $c7, $11
17848     2B B4 A4 25 
1784c     3E F9 FD 29 
17850     26 F3 1B 1C 
17854     ED F9 FE 13 | 	byte	$2b, $b4, $a4, $25, $3e, $f9, $fd, $29, $26, $f3, $1b, $1c, $ed, $f9, $fe, $13
17858     02 02 F5 FD 
1785c     F9 DB F3 FB 
17860     F3 1B 45 2B 
17864     20 31 34 00 | 	byte	$02, $02, $f5, $fd, $f9, $db, $f3, $fb, $f3, $1b, $45, $2b, $20, $31, $34, $00
17868     D1 F3 DA 89 
1786c     D9 1F F2 CF 
17870     4B 7C 43 21 
17874     31 1C ED E3 | 	byte	$d1, $f3, $da, $89, $d9, $1f, $f2, $cf, $4b, $7c, $43, $21, $31, $1c, $ed, $e3
17878     FB C7 C1 EA 
1787c     0B 02 08 39 
17880     09 E6 11 26 
17884     00 FB 0B 27 | 	byte	$fb, $c7, $c1, $ea, $0b, $02, $08, $39, $09, $e6, $11, $26, $00, $fb, $0b, $27
17888     27 1A 0B FF 
1788c     0A F2 BC E3 
17890     04 B4 C6 41 
17894     3E F7 33 75 | 	byte	$27, $1a, $0b, $ff, $0a, $f2, $bc, $e3, $04, $b4, $c6, $41, $3e, $f7, $33, $75
17898     26 FD 17 E4 
1789c     99 BC 05 ED 
178a0     F1 2E 3E 00 
178a4     FB 2D 0E C9 | 	byte	$26, $fd, $17, $e4, $99, $bc, $05, $ed, $f1, $2e, $3e, $00, $fb, $2d, $0e, $c9
178a8     FF 32 13 EA 
178ac     19 1C FE 19 
178b0     13 E9 DD E7 
178b4     DA DB 0F 26 | 	byte	$ff, $32, $13, $ea, $19, $1c, $fe, $19, $13, $e9, $dd, $e7, $da, $db, $0f, $26
178b8     00 E7 5C 4C 
178bc     00 0D 40 04 
178c0     E1 E9 CC AA 
178c4     CF 2E 26 29 | 	byte	$00, $e7, $5c, $4c, $00, $0d, $40, $04, $e1, $e9, $cc, $aa, $cf, $2e, $26, $29
178c8     55 4C 00 DE 
178cc     0B 00 C7 C6 
178d0     2E 39 F7 EC 
178d4     35 17 E5 08 | 	byte	$55, $4c, $00, $de, $0b, $00, $c7, $c6, $2e, $39, $f7, $ec, $35, $17, $e5, $08
178d8     0D E5 D7 FB 
178dc     03 FB 08 37 
178e0     3B 00 F6 57 
178e4     1C DD F6 16 | 	byte	$0d, $e5, $d7, $fb, $03, $fb, $08, $37, $3b, $00, $f6, $57, $1c, $dd, $f6, $16
178e8     E4 DA E4 DE 
178ec     D8 0D 5C 3E 
178f0     2E 3B 17 CC 
178f4     CB E0 DE EA | 	byte	$e4, $da, $e4, $de, $d8, $0d, $5c, $3e, $2e, $3b, $17, $cc, $cb, $e0, $de, $ea
178f8     FF 2E 3E 02 
178fc     F3 17 00 F0 
17900     F9 F5 E6 FD 
17904     09 07 22 2B | 	byte	$ff, $2e, $3e, $02, $f3, $17, $00, $f0, $f9, $f5, $e6, $fd, $09, $07, $22, $2b
17908     1C 32 09 CE 
1790c     FF 2F C7 CB 
17910     0D 04 CB F1 
17914     0D 05 25 63 | 	byte	$1c, $32, $09, $ce, $ff, $2f, $c7, $cb, $0d, $04, $cb, $f1, $0d, $05, $25, $63
17918     3E 13 19 F7 
1791c     B9 B3 EC FD 
17920     13 13 27 53 
17924     26 CB F6 02 | 	byte	$3e, $13, $19, $f7, $b9, $b3, $ec, $fd, $13, $13, $27, $53, $26, $cb, $f6, $02
17928     E9 F5 08 0E 
1792c     0A 0B 13 26 
17930     1D 04 0D 15 
17934     DA C6 FF 39 | 	byte	$e9, $f5, $08, $0e, $0a, $0b, $13, $26, $1d, $04, $0d, $15, $da, $c6, $ff, $39
17938     C9 D4 25 13 
1793c     DA FF 1C 07 
17940     1B 41 43 00 
17944     FF F9 D1 C2 | 	byte	$c9, $d4, $25, $13, $da, $ff, $1c, $07, $1b, $41, $43, $00, $ff, $f9, $d1, $c2
17948     F1 14 1B 26 
1794c     2C 29 1B ED 
17950     CF F3 02 F6 
17954     08 1B 0D 0A | 	byte	$f1, $14, $1b, $26, $2c, $29, $1b, $ed, $cf, $f3, $02, $f6, $08, $1b, $0d, $0a
17958     1A 17 00 FF 
1795c     FC F2 03 E6 
17960     E6 2E 2B BD 
17964     F1 26 00 E3 | 	byte	$1a, $17, $00, $ff, $fc, $f2, $03, $e6, $e6, $2e, $2b, $bd, $f1, $26, $00, $e3
17968     20 1C 0D 2E 
1796c     45 02 E7 FE 
17970     DA B7 E3 16 
17974     13 22 32 26 | 	byte	$20, $1c, $0d, $2e, $45, $02, $e7, $fe, $da, $b7, $e3, $16, $13, $22, $32, $26
17978     26 0B D1 DE 
1797c     F3 E9 05 1C 
17980     02 08 26 04 
17984     ED 1B 13 CC | 	byte	$26, $0b, $d1, $de, $f3, $e9, $05, $1c, $02, $08, $26, $04, $ed, $1b, $13, $cc
17988     D9 38 00 D7 
1798c     20 3E C7 F6 
17990     3F 09 E3 29 
17994     19 F8 16 49 | 	byte	$d9, $38, $00, $d7, $20, $3e, $c7, $f6, $3f, $09, $e3, $29, $19, $f8, $16, $49
17998     09 D7 03 F2 
1799c     BA CF 25 17 
179a0     1B 2F 26 21 
179a4     16 ED CF E7 | 	byte	$09, $d7, $03, $f2, $ba, $cf, $25, $17, $1b, $2f, $26, $21, $16, $ed, $cf, $e7
179a8     F8 FE 00 0B 
179ac     1D 20 09 05 
179b0     04 0F FC DB 
179b4     EC 1B 15 E4 | 	byte	$f8, $fe, $00, $0b, $1d, $20, $09, $05, $04, $0f, $fc, $db, $ec, $1b, $15, $e4
179b8     0D 51 00 CF 
179bc     2E 13 DE 1B 
179c0     26 ED FF 2E 
179c4     00 D4 05 ED | 	byte	$0d, $51, $00, $cf, $2e, $13, $de, $1b, $26, $ed, $ff, $2e, $00, $d4, $05, $ed
179c8     C0 F1 2C 17 
179cc     22 2D 1B 1B 
179d0     00 CC E3 E9 
179d4     E3 FF 1D 1F | 	byte	$c0, $f1, $2c, $17, $22, $2d, $1b, $1b, $00, $cc, $e3, $e9, $e3, $ff, $1d, $1f
179d8     04 0A 0D 00 
179dc     08 13 E9 E3 
179e0     05 26 00 EF 
179e4     33 44 DA EC | 	byte	$04, $0a, $0d, $00, $08, $13, $e9, $e3, $05, $26, $00, $ef, $33, $44, $da, $ec
179e8     26 F7 EC 2E 
179ec     09 F3 1F 26 
179f0     ED EC 01 D1 
179f4     D7 FF 21 0F | 	byte	$26, $f7, $ec, $2e, $09, $f3, $1f, $26, $ed, $ec, $01, $d1, $d7, $ff, $21, $0f
179f8     35 26 10 1F 
179fc     00 C9 E5 F3 
17a00     DB FB 22 26 
17a04     01 0A 17 0A | 	byte	$35, $26, $10, $1f, $00, $c9, $e5, $f3, $db, $fb, $22, $26, $01, $0a, $17, $0a
17a08     FF FE 0A 00 
17a0c     E7 FF 2B 04 
17a10     EA 29 39 DA 
17a14     F6 26 F0 FB | 	byte	$ff, $fe, $0a, $00, $e7, $ff, $2b, $04, $ea, $29, $39, $da, $f6, $26, $f0, $fb
17a18     35 09 F5 19 
17a1c     13 ED FB 07 
17a20     DA F3 20 14 
17a24     0D 3E 17 04 | 	byte	$35, $09, $f5, $19, $13, $ed, $fb, $07, $da, $f3, $20, $14, $0d, $3e, $17, $04
17a28     13 ED CD F1 
17a2c     E6 E3 0D 27 
17a30     15 17 0B FF 
17a34     F9 F9 05 0D | 	byte	$13, $ed, $cd, $f1, $e6, $e3, $0d, $27, $15, $17, $0b, $ff, $f9, $f9, $05, $0d
17a38     F7 EA 20 17 
17a3c     DA FF 43 00 
17a40     D4 2C 13 DD 
17a44     25 28 E5 FF | 	byte	$f7, $ea, $20, $17, $da, $ff, $43, $00, $d4, $2c, $13, $dd, $25, $28, $e5, $ff
17a48     1A F5 F6 13 
17a4c     DF E7 1B 1D 
17a50     05 2E 2F F9 
17a54     0D 00 BD E3 | 	byte	$1a, $f5, $f6, $13, $df, $e7, $1b, $1d, $05, $2e, $2f, $f9, $0d, $00, $bd, $e3
17a58     01 E7 FB 25 
17a5c     17 0F 19 00 
17a60     03 0F 08 04 
17a64     00 F0 F5 0D | 	byte	$01, $e7, $fb, $25, $17, $0f, $19, $00, $03, $0f, $08, $04, $00, $f0, $f5, $0d
17a68     15 E4 FF 47 
17a6c     09 BF 1B 26 
17a70     DB FF 31 ED 
17a74     FB 26 00 EC | 	byte	$15, $e4, $ff, $47, $09, $bf, $1b, $26, $db, $ff, $31, $ed, $fb, $26, $00, $ec
17a78     11 F5 DB 20 
17a7c     2C 07 1B 40 
17a80     00 FF 09 D1 
17a84     C8 08 F7 DE | 	byte	$11, $f5, $db, $20, $2c, $07, $1b, $40, $00, $ff, $09, $d1, $c8, $08, $f7, $de
17a88     1B 32 16 1A 
17a8c     13 00 08 13 
17a90     00 F1 EB F6 
17a94     FF 19 F2 E3 | 	byte	$1b, $32, $16, $1a, $13, $00, $08, $13, $00, $f1, $eb, $f6, $ff, $19, $f2, $e3
17a98     41 2B C8 1B 
17a9c     2B E0 FF 34 
17aa0     ED F1 15 F9 
17aa4     FD 0F F3 E1 | 	byte	$41, $2b, $c8, $1b, $2b, $e0, $ff, $34, $ed, $f1, $15, $f9, $fd, $0f, $f3, $e1
17aa8     1B 1C FB 1B 
17aac     47 00 F3 15 
17ab0     E4 C3 FF DF 
17ab4     DE 1B 26 00 | 	byte	$1b, $1c, $fb, $1b, $47, $00, $f3, $15, $e4, $c3, $ff, $df, $de, $1b, $26, $00
17ab8     19 2F 0B FF 
17abc     0E 0D F3 FE 
17ac0     F9 ED 08 00 
17ac4     CE 16 43 DF | 	byte	$19, $2f, $0b, $ff, $0e, $0d, $f3, $fe, $f9, $ed, $08, $00, $ce, $16, $43, $df
17ac8     F6 43 00 E0 
17acc     33 13 DA 08 
17ad0     1C E9 F2 19 
17ad4     F8 E7 1B 15 | 	byte	$f6, $43, $00, $e0, $33, $13, $da, $08, $1c, $e9, $f2, $19, $f8, $e7, $1b, $15
17ad8     FD 16 3A 07 
17adc     FF 0A ED CB 
17ae0     F6 F8 E9 0D 
17ae4     26 04 1B 2D | 	byte	$fd, $16, $3a, $07, $ff, $0a, $ed, $cb, $f6, $f8, $e9, $0d, $26, $04, $1b, $2d
17ae8     0B 03 1B 09 
17aec     FF 00 E4 EB 
17af0     08 0E D5 11 
17af4     3F E4 F6 43 | 	byte	$0b, $03, $1b, $09, $ff, $00, $e4, $eb, $08, $0e, $d5, $11, $3f, $e4, $f6, $43
17af8     00 EC 3A 00 
17afc     DB 23 00 DF 
17b00     0B 0E DA 0D 
17b04     26 F9 0D 4A | 	byte	$00, $ec, $3a, $00, $db, $23, $00, $df, $0b, $0e, $da, $0d, $26, $f9, $0d, $4a
17b08     13 F1 11 15 
17b0c     C9 D9 02 DA 
17b10     FF 21 04 FF 
17b14     28 15 13 1A | 	byte	$13, $f1, $11, $15, $c9, $d9, $02, $da, $ff, $21, $04, $ff, $28, $15, $13, $1a
17b18     14 FE 0D 00 
17b1c     DA FD 15 D1 
17b20     D4 40 1C CF 
17b24     3D 26 E3 25 | 	byte	$14, $fe, $0d, $00, $da, $fd, $15, $d1, $d4, $40, $1c, $cf, $3d, $26, $e3, $25
17b28     39 DF EC 19 
17b2c     DF EC 19 09 
17b30     D1 08 1C 00 
17b34     11 35 09 FC | 	byte	$39, $df, $ec, $19, $df, $ec, $19, $09, $d1, $08, $1c, $00, $11, $35, $09, $fc
17b38     20 13 DA DE 
17b3c     0E E6 EA 0F 
17b40     07 03 1B 14 
17b44     14 1C 13 0F | 	byte	$20, $13, $da, $de, $0e, $e6, $ea, $0f, $07, $03, $1b, $14, $14, $1c, $13, $0f
17b48     0A 00 FC EF 
17b4c     03 0D DA D4 
17b50     33 26 D4 38 
17b54     2F E4 25 2F | 	byte	$0a, $00, $fc, $ef, $03, $0d, $da, $d4, $33, $26, $d4, $38, $2f, $e4, $25, $2f
17b58     DA EC 1C DA 
17b5c     E3 22 00 D4 
17b60     16 1A F6 1F 
17b64     34 F7 F6 17 | 	byte	$da, $ec, $1c, $da, $e3, $22, $00, $d4, $16, $1a, $f6, $1f, $34, $f7, $f6, $17
17b68     00 D2 FD 00 
17b6c     DD FD 21 FB 
17b70     11 20 0B 13 
17b74     17 13 02 0D | 	byte	$00, $d2, $fd, $00, $dd, $fd, $21, $fb, $11, $20, $0b, $13, $17, $13, $02, $0d
17b78     F3 DB F6 13 
17b7c     09 C9 FF 39 
17b80     ED FB 4C 00 
17b84     FF 49 F7 CF | 	byte	$f3, $db, $f6, $13, $09, $c9, $ff, $39, $ed, $fb, $4c, $00, $ff, $49, $f7, $cf
17b88     20 F7 DB 19 
17b8c     0B DA FF 1F 
17b90     F3 16 3E 13 
17b94     DB 11 1C DF | 	byte	$20, $f7, $db, $19, $0b, $da, $ff, $1f, $f3, $16, $3e, $13, $db, $11, $1c, $df
17b98     D4 20 00 EA 
17b9c     19 02 FF 22 
17ba0     09 FB 1B 26 
17ba4     09 07 0A FE | 	byte	$d4, $20, $00, $ea, $19, $02, $ff, $22, $09, $fb, $1b, $26, $09, $07, $0a, $fe
17ba8     F8 F1 FF 14 
17bac     DF E3 3D 13 
17bb0     D4 3F 2B EA 
17bb4     33 26 CD FB | 	byte	$f8, $f1, $ff, $14, $df, $e3, $3d, $13, $d4, $3f, $2b, $ea, $33, $26, $cd, $fb
17bb8     13 DF F9 1D 
17bbc     F7 DE 1D 09 
17bc0     FB 2C 26 E4 
17bc4     FF 1C DA E3 | 	byte	$13, $df, $f9, $1d, $f7, $de, $1d, $09, $fb, $2c, $26, $e4, $ff, $1c, $da, $e3
17bc8     1F ED EC 1B 
17bcc     13 F7 0F 0B 
17bd0     07 1B 1F 01 
17bd4     04 07 F1 F7 | 	byte	$1f, $ed, $ec, $1b, $13, $f7, $0f, $0b, $07, $1b, $1f, $01, $04, $07, $f1, $f7
17bd8     00 F6 0F ED 
17bdc     D4 2E 26 DA 
17be0     2E 39 E6 29 
17be4     2F C9 E3 1A | 	byte	$00, $f6, $0f, $ed, $d4, $2e, $26, $da, $2e, $39, $e6, $29, $2f, $c9, $e3, $1a
17be8     F2 E7 19 09 
17bec     DE 11 1C F7 
17bf0     0B 2D 00 FF 
17bf4     13 E9 E3 0E | 	byte	$f2, $e7, $19, $09, $de, $11, $1c, $f7, $0b, $2d, $00, $ff, $13, $e9, $e3, $0e
17bf8     00 F3 00 0A 
17bfc     0A FF 11 0E 
17c00     0D 1D 14 F3 
17c04     FB 0D F7 EF | 	byte	$00, $f3, $00, $0a, $0a, $ff, $11, $0e, $0d, $1d, $14, $f3, $fb, $0d, $f7, $ef
17c08     FF 03 02 09 
17c0c     E1 FB 3D 04 
17c10     F6 4B 26 E9 
17c14     14 09 DA F6 | 	byte	$ff, $03, $02, $09, $e1, $fb, $3d, $04, $f6, $4b, $26, $e9, $14, $09, $da, $f6
17c18     10 00 F1 1B 
17c1c     02 EA 0A 1D 
17c20     04 03 27 13 
17c24     DF F3 F9 EC | 	byte	$10, $00, $f1, $1b, $02, $ea, $0a, $1d, $04, $03, $27, $13, $df, $f3, $f9, $ec
17c28     07 0B EF FF 
17c2c     16 13 0A 15 
17c30     19 00 FF 13 
17c34     0E E9 F6 04 | 	byte	$07, $0b, $ef, $ff, $16, $13, $0a, $15, $19, $00, $ff, $13, $0e, $e9, $f6, $04
17c38     F3 F6 0B 00 
17c3c     07 07 FF 3D 
17c40     2B F5 16 00 
17c44     EF 04 F2 ED | 	byte	$f3, $f6, $0b, $00, $07, $07, $ff, $3d, $2b, $f5, $16, $00, $ef, $04, $f2, $ed
17c48     F1 FE FF F6 
17c4c     15 1F 09 05 
17c50     19 13 01 09 
17c54     0B FC FB 00 | 	byte	$f1, $fe, $ff, $f6, $15, $1f, $09, $05, $19, $13, $01, $09, $0b, $fc, $fb, $00
17c58     ED F6 FB FF 
17c5c     0A 1B 1A 04 
17c60     0D 13 05 08 
17c64     13 F8 E4 F6 | 	byte	$ed, $f6, $fb, $ff, $0a, $1b, $1a, $04, $0d, $13, $05, $08, $13, $f8, $e4, $f6
17c68     FF FB 02 01 
17c6c     08 04 16 1C 
17c70     16 1A 1B 13 
17c74     F6 03 ED DA | 	byte	$ff, $fb, $02, $01, $08, $04, $16, $1c, $16, $1a, $1b, $13, $f6, $03, $ed, $da
17c78     FE 05 FD F8 
17c7c     11 13 13 09 
17c80     03 15 13 03 
17c84     04 03 FB F8 | 	byte	$fe, $05, $fd, $f8, $11, $13, $13, $09, $03, $15, $13, $03, $04, $03, $fb, $f8
17c88     FF F6 FB 01 
17c8c     03 0B 09 02 
17c90     05 16 13 09 
17c94     FF 0B FE F2 | 	byte	$ff, $f6, $fb, $01, $03, $0b, $09, $02, $05, $16, $13, $09, $ff, $0b, $fe, $f2
17c98     F8 F2 F8 0A 
17c9c     02 FE 15 20 
17ca0     15 14 15 01 
17ca4     FB FE FB F9 | 	byte	$f8, $f2, $f8, $0a, $02, $fe, $15, $20, $15, $14, $15, $01, $fb, $fe, $fb, $f9
17ca8     F6 FD FE FD 
17cac     03 FF 08 13 
17cb0     14 15 0E 04 
17cb4     03 0E FF FF | 	byte	$f6, $fd, $fe, $fd, $03, $ff, $08, $13, $14, $15, $0e, $04, $03, $0e, $ff, $ff
17cb8     FE F9 F1 FF 
17cbc     13 02 F9 FB 
17cc0     05 0D 0A 0B 
17cc4     13 01 02 05 | 	byte	$fe, $f9, $f1, $ff, $13, $02, $f9, $fb, $05, $0d, $0a, $0b, $13, $01, $02, $05
17cc8     FC F3 08 19 
17ccc     05 FF FF 0A 
17cd0     13 05 FD 0F 
17cd4     15 04 FB FF | 	byte	$fc, $f3, $08, $19, $05, $ff, $ff, $0a, $13, $05, $fd, $0f, $15, $04, $fb, $ff
17cd8     08 0A 09 02 
17cdc     F1 FF 13 0E 
17ce0     04 0B 04 03 
17ce4     09 05 10 03 | 	byte	$08, $0a, $09, $02, $f1, $ff, $13, $0e, $04, $0b, $04, $03, $09, $05, $10, $03
17ce8     F8 05 0E F9 
17cec     F8 FD 07 02 
17cf0     FF 08 09 01 
17cf4     03 03 FF 0A | 	byte	$f8, $05, $0e, $f9, $f8, $fd, $07, $02, $ff, $08, $09, $01, $03, $03, $ff, $0a
17cf8     07 FF 09 08 
17cfc     0A F7 FB 07 
17d00     11 0B 00 F7 
17d04     FE 07 08 13 | 	byte	$07, $ff, $09, $08, $0a, $f7, $fb, $07, $11, $0b, $00, $f7, $fe, $07, $08, $13
17d08     04 F9 FF 0B 
17d0c     FF 08 0E 00 
17d10     FC 07 05 05 
17d14     FD F3 0D 04 | 	byte	$04, $f9, $ff, $0b, $ff, $08, $0e, $00, $fc, $07, $05, $05, $fd, $f3, $0d, $04
17d18     FE 0A 07 03 
17d1c     07 05 08 07 
17d20     F7 FF 0B 00 
17d24     08 0B 00 FC | 	byte	$fe, $0a, $07, $03, $07, $05, $08, $07, $f7, $ff, $0b, $00, $08, $0b, $00, $fc
17d28     FF 08 13 08 
17d2c     FF FF 04 03 
17d30     01 08 0B 00 
17d34     02 0A 07 00 | 	byte	$ff, $08, $13, $08, $ff, $ff, $04, $03, $01, $08, $0b, $00, $02, $0a, $07, $00
17d38     01 03 09 FC 
17d3c     0A 15 00 07 
17d40     0A 03 08 00 
17d44     0D 05 F3 FD | 	byte	$01, $03, $09, $fc, $0a, $15, $00, $07, $0a, $03, $08, $00, $0d, $05, $f3, $fd
17d48     0A 09 05 0B 
17d4c     08 05 FF 03 
17d50     03 FC 01 03 
17d54     01 09 00 FB | 	byte	$0a, $09, $05, $0b, $08, $05, $ff, $03, $03, $fc, $01, $03, $01, $09, $00, $fb
17d58     0B 0A F2 FD 
17d5c     0D 0E 0D 0D 
17d60     0F F9 FB FD 
17d64     FF 14 0E 07 | 	byte	$0b, $0a, $f2, $fd, $0d, $0e, $0d, $0d, $0f, $f9, $fb, $fd, $ff, $14, $0e, $07
17d68     FD FF 14 00 
17d6c     FF 08 09 FD 
17d70     0B 00 F6 08 
17d74     03 03 14 04 | 	byte	$fd, $ff, $14, $00, $ff, $08, $09, $fd, $0b, $00, $f6, $08, $03, $03, $14, $04
17d78     F6 FF 07 04 
17d7c     0B 04 FF 0F 
17d80     00 01 0E 09 
17d84     00 07 F9 EF | 	byte	$f6, $ff, $07, $04, $0b, $04, $ff, $0f, $00, $01, $0e, $09, $00, $07, $f9, $ef
17d88     0F 0B FB 0F 
17d8c     05 FD 0D 05 
17d90     FC 08 0E 09 
17d94     03 FF 08 FC | 	byte	$0f, $0b, $fb, $0f, $05, $fd, $0d, $05, $fc, $08, $0e, $09, $03, $ff, $08, $fc
17d98     FB 19 09 FE 
17d9c     FB FF 01 16 
17da0     1C 00 FF 13 
17da4     04 F7 0F 13 | 	byte	$fb, $19, $09, $fe, $fb, $ff, $01, $16, $1c, $00, $ff, $13, $04, $f7, $0f, $13
17da8     EF 03 07 01 
17dac     13 FE 03 0B 
17db0     01 FF 05 14 
17db4     F7 F5 0B 04 | 	byte	$ef, $03, $07, $01, $13, $fe, $03, $0b, $01, $ff, $05, $14, $f7, $f5, $0b, $04
17db8     07 F3 FF 09 
17dbc     0A 03 08 04 
17dc0     FC FF 03 04 
17dc4     FF 10 02 02 | 	byte	$07, $f3, $ff, $09, $0a, $03, $08, $04, $fc, $ff, $03, $04, $ff, $10, $02, $02
17dc8     0F 09 F7 FF 
17dcc     0B 03 0D 0B 
17dd0     00 F6 03 07 
17dd4     01 03 0F 09 | 	byte	$0f, $09, $f7, $ff, $0b, $03, $0d, $0b, $00, $f6, $03, $07, $01, $03, $0f, $09
17dd8     E9 FB 0D 10 
17ddc     09 FD FE 0F 
17de0     00 FF 0F FE 
17de4     05 0B 07 FB | 	byte	$e9, $fb, $0d, $10, $09, $fd, $fe, $0f, $00, $ff, $0f, $fe, $05, $0b, $07, $fb
17de8     F3 11 13 FC 
17dec     F8 FF 0D 07 
17df0     13 0B FC 08 
17df4     13 FE EF 05 | 	byte	$f3, $11, $13, $fc, $f8, $ff, $0d, $07, $13, $0b, $fc, $08, $13, $fe, $ef, $05
17df8     0E 02 08 0F 
17dfc     17 F9 EA 0D 
17e00     26 F9 F2 09 
17e04     0B 17 FD FF | 	byte	$0e, $02, $08, $0f, $17, $f9, $ea, $0d, $26, $f9, $f2, $09, $0b, $17, $fd, $ff
17e08     16 0D F2 F6 
17e0c     10 09 0D 13 
17e10     00 02 04 03 
17e14     04 08 07 F9 | 	byte	$16, $0d, $f2, $f6, $10, $09, $0d, $13, $00, $02, $04, $03, $04, $08, $07, $f9
17e18     F0 0B 15 F9 
17e1c     F6 0F 07 FC 
17e20     F9 02 0A FD 
17e24     07 1A 07 FC | 	byte	$f0, $0b, $15, $f9, $f6, $0f, $07, $fc, $f9, $02, $0a, $fd, $07, $1a, $07, $fc
17e28     FF 04 03 10 
17e2c     09 02 FC FF 
17e30     0D 0A 01 FE 
17e34     FD 0D 17 00 | 	byte	$ff, $04, $03, $10, $09, $02, $fc, $ff, $0d, $0a, $01, $fe, $fd, $0d, $17, $00
17e38     FC 03 0B 00 
17e3c     E7 08 13 07 
17e40     FE 0D 15 F3 
17e44     F1 FF 14 09 | 	byte	$fc, $03, $0b, $00, $e7, $08, $13, $07, $fe, $0d, $15, $f3, $f1, $ff, $14, $09
17e48     FF 0A 03 05 
17e4c     0F 0A F5 F0 
17e50     16 13 DF F6 
17e54     1D 1B 00 F6 | 	byte	$ff, $0a, $03, $05, $0f, $0a, $f5, $f0, $16, $13, $df, $f6, $1d, $1b, $00, $f6
17e58     0B 09 FC FD 
17e5c     13 01 04 13 
17e60     02 F6 05 14 
17e64     FB 05 05 03 | 	byte	$0b, $09, $fc, $fd, $13, $01, $04, $13, $02, $f6, $05, $14, $fb, $05, $05, $03
17e68     10 0A 05 02 
17e6c     03 08 F8 0D 
17e70     0A F1 1B 17 
17e74     EF FB 20 02 | 	byte	$10, $0a, $05, $02, $03, $08, $f8, $0d, $0a, $f1, $1b, $17, $ef, $fb, $20, $02
17e78     F0 11 00 F8 
17e7c     0B 0F FC F6 
17e80     05 09 FB F6 
17e84     0A 0B FB 0D | 	byte	$f0, $11, $00, $f8, $0b, $0f, $fc, $f6, $05, $09, $fb, $f6, $0a, $0b, $fb, $0d
17e88     17 02 F5 F7 
17e8c     0A 1B 07 FD 
17e90     0D 00 EF FF 
17e94     1A F7 FB 20 | 	byte	$17, $02, $f5, $f7, $0a, $1b, $07, $fd, $0d, $00, $ef, $ff, $1a, $f7, $fb, $20
17e98     0B FC FF 05 
17e9c     E4 F6 44 09 
17ea0     E0 FF 15 F7 
17ea4     FB 29 05 E3 | 	byte	$0b, $fc, $ff, $05, $e4, $f6, $44, $09, $e0, $ff, $15, $f7, $fb, $29, $05, $e3
17ea8     FF 10 16 15 
17eac     F5 08 15 ED 
17eb0     FD 13 F7 F6 
17eb4     14 13 FB FF | 	byte	$ff, $10, $16, $15, $f5, $08, $15, $ed, $fd, $13, $f7, $f6, $14, $13, $fb, $ff
17eb8     04 1B F7 08 
17ebc     21 F3 EF 13 
17ec0     04 FB 15 04 
17ec4     FF 1F 09 E5 | 	byte	$04, $1b, $f7, $08, $21, $f3, $ef, $13, $04, $fb, $15, $04, $ff, $1f, $09, $e5
17ec8     16 1C F2 FF 
17ecc     0A 02 0A 0E 
17ed0     0D F5 FB 17 
17ed4     0B FC FF 27 | 	byte	$16, $1c, $f2, $ff, $0a, $02, $0a, $0e, $0d, $f5, $fb, $17, $0b, $fc, $ff, $27
17ed8     00 DE 2C 26 
17edc     D2 F6 21 F7 
17ee0     E3 29 26 DA 
17ee4     E3 27 09 DA | 	byte	$00, $de, $2c, $26, $d2, $f6, $21, $f7, $e3, $29, $26, $da, $e3, $27, $09, $da
17ee8     20 1A E1 FF 
17eec     26 ED E3 25 
17ef0     09 EA 19 16 
17ef4     F9 FF 09 05 | 	byte	$20, $1a, $e1, $ff, $26, $ed, $e3, $25, $09, $ea, $19, $16, $f9, $ff, $09, $05
17ef8     0A FE 04 F2 
17efc     0D 26 01 02 
17f00     FD 03 ED 11 
17f04     0B F3 10 1C | 	byte	$0a, $fe, $04, $f2, $0d, $26, $01, $02, $fd, $03, $ed, $11, $0b, $f3, $10, $1c
17f08     F0 EC 1F 0E 
17f0c     F2 03 1C 00 
17f10     FF 26 F5 E5 
17f14     16 F2 F3 14 | 	byte	$f0, $ec, $1f, $0e, $f2, $03, $1c, $00, $ff, $26, $f5, $e5, $16, $f2, $f3, $14
17f18     1B 13 F8 08 
17f1c     00 0D F9 08 
17f20     13 E7 FF 26 
17f24     09 FE 02 FC | 	byte	$1b, $13, $f8, $08, $00, $0d, $f9, $08, $13, $e7, $ff, $26, $09, $fe, $02, $fc
17f28     F9 13 0E 00 
17f2c     0D 1A 1C ED 
17f30     EA 1D F7 EF 
17f34     16 0D 10 1B | 	byte	$f9, $13, $0e, $00, $0d, $1a, $1c, $ed, $ea, $1d, $f7, $ef, $16, $0d, $10, $1b
17f38     00 EC 04 0A 
17f3c     03 F2 0F 26 
17f40     02 FF 0B 02 
17f44     04 04 F7 FF | 	byte	$00, $ec, $04, $0a, $03, $f2, $0f, $26, $02, $ff, $0b, $02, $04, $04, $f7, $ff
17f48     FD F5 FB 05 
17f4c     14 0E F5 FF 
17f50     09 F7 F0 1B 
17f54     13 FF 0E E4 | 	byte	$fd, $f5, $fb, $05, $14, $0e, $f5, $ff, $09, $f7, $f0, $1b, $13, $ff, $0e, $e4
17f58     FF 3E E4 D9 
17f5c     29 04 E7 22 
17f60     04 EF 1A 13 
17f64     07 FF 07 E4 | 	byte	$ff, $3e, $e4, $d9, $29, $04, $e7, $22, $04, $ef, $1a, $13, $07, $ff, $07, $e4
17f68     F3 15 14 F9 
17f6c     0F 13 ED FB 
17f70     00 F2 15 1D 
17f74     09 03 14 04 | 	byte	$f3, $15, $14, $f9, $0f, $13, $ed, $fb, $00, $f2, $15, $1d, $09, $03, $14, $04
17f78     FD 0D F0 E3 
17f7c     16 26 F2 D9 
17f80     33 39 BD E3 
17f84     4B ED D9 3B | 	byte	$fd, $0d, $f0, $e3, $16, $26, $f2, $d9, $33, $39, $bd, $e3, $4b, $ed, $d9, $3b
17f88     13 CC 11 3E 
17f8c     02 FF 1A F7 
17f90     DA FD 15 10 
17f94     0E F9 0B 13 | 	byte	$13, $cc, $11, $3e, $02, $ff, $1a, $f7, $da, $fd, $15, $10, $0e, $f9, $0b, $13
17f98     13 F7 F8 15 
17f9c     0B 03 10 04 
17fa0     F1 F6 F3 02 
17fa4     1F 1C FE 11 | 	byte	$13, $f7, $f8, $15, $0b, $03, $10, $04, $f1, $f6, $f3, $02, $1f, $1c, $fe, $11
17fa8     50 00 9D FF 
17fac     44 B4 A9 4B 
17fb0     13 CB 46 26 
17fb4     BB 1B 4C ED | 	byte	$50, $00, $9d, $ff, $44, $b4, $a9, $4b, $13, $cb, $46, $26, $bb, $1b, $4c, $ed
17fb8     FF 3B DA B3 
17fbc     19 09 C8 16 
17fc0     43 ED FF 3A 
17fc4     DF F6 3B F2 | 	byte	$ff, $3b, $da, $b3, $19, $09, $c8, $16, $43, $ed, $ff, $3a, $df, $f6, $3b, $f2
17fc8     EC 10 F7 E9 
17fcc     16 13 03 FC 
17fd0     05 17 07 0A 
17fd4     2B 00 AE 11 | 	byte	$ec, $10, $f7, $e9, $16, $13, $03, $fc, $05, $17, $07, $0a, $2b, $00, $ae, $11
17fd8     26 AA E3 68 
17fdc     09 F3 5C 26 
17fe0     C1 11 2F DA 
17fe4     E7 28 DA C1 | 	byte	$26, $aa, $e3, $68, $09, $f3, $5c, $26, $c1, $11, $2f, $da, $e7, $28, $da, $c1
17fe8     20 17 D1 1B 
17fec     67 13 EC 31 
17ff0     04 DA 22 13 
17ff4     C8 F1 15 ED | 	byte	$20, $17, $d1, $1b, $67, $13, $ec, $31, $04, $da, $22, $13, $c8, $f1, $15, $ed
17ff8     F8 28 0E 02 
17ffc     0F 0F 21 09 
18000     11 26 DA B3 
18004     2E 17 AA 1B | 	byte	$f8, $28, $0e, $02, $0f, $0f, $21, $09, $11, $26, $da, $b3, $2e, $17, $aa, $1b
18008     61 ED FF 5B 
1800c     ED CF 3D 00 
18010     CB 08 09 AE 
18014     FF 3B E4 F6 | 	byte	$61, $ed, $ff, $5b, $ed, $cf, $3d, $00, $cb, $08, $09, $ae, $ff, $3b, $e4, $f6
18018     52 09 E7 3D 
1801c     00 C1 1B 00 
18020     CB FF 15 E4 
18024     08 2F 05 FD | 	byte	$52, $09, $e7, $3d, $00, $c1, $1b, $00, $cb, $ff, $15, $e4, $08, $2f, $05, $fd
18028     22 26 FB 20 
1802c     2F CC C1 1F 
18030     ED 9B 25 56 
18034     E4 11 5F ED | 	byte	$22, $26, $fb, $20, $2f, $cc, $c1, $1f, $ed, $9b, $25, $56, $e4, $11, $5f, $ed
18038     D9 46 00 D2 
1803c     20 04 AE 10 
18040     2F DA FF 52 
18044     13 E3 38 13 | 	byte	$d9, $46, $00, $d2, $20, $04, $ae, $10, $2f, $da, $ff, $52, $13, $e3, $38, $13
18048     D1 FF 1C D1 
1804c     E3 0F F2 F3 
18050     29 26 F5 0D 
18054     26 15 15 2C | 	byte	$d1, $ff, $1c, $d1, $e3, $0f, $f2, $f3, $29, $26, $f5, $0d, $26, $15, $15, $2c
18058     13 BD D9 1B 
1805c     C7 B3 4B 39 
18060     DF 46 4C DA 
18064     FB 43 E6 E3 | 	byte	$13, $bd, $d9, $1b, $c7, $b3, $4b, $39, $df, $46, $4c, $da, $fb, $43, $e6, $e3
18068     29 ED B7 1B 
1806c     26 D3 19 51 
18070     00 F1 3A 00 
18074     DB 1B F7 CB | 	byte	$29, $ed, $b7, $1b, $26, $d3, $19, $51, $00, $f1, $3a, $00, $db, $1b, $f7, $cb
18078     08 02 D5 0D 
1807c     2B 00 08 29 
18080     13 08 29 13 
18084     CB FF 09 A1 | 	byte	$08, $02, $d5, $0d, $2b, $00, $08, $29, $13, $08, $29, $13, $cb, $ff, $09, $a1
18088     CF 4B 17 DE 
1808c     4B 39 DA 1B 
18090     39 E4 F6 26 
18094     C7 CF 2D 0B | 	byte	$cf, $4b, $17, $de, $4b, $39, $da, $1b, $39, $e4, $f6, $26, $c7, $cf, $2d, $0b
18098     CD 25 45 F7 
1809c     FB 35 00 E7 
180a0     1B 00 CE FF 
180a4     13 DD FF 1C | 	byte	$cd, $25, $45, $f7, $fb, $35, $00, $e7, $1b, $00, $ce, $ff, $13, $dd, $ff, $1c
180a8     04 05 1C 17 
180ac     27 2F E9 E7 
180b0     2E 00 92 E3 
180b4     47 00 D9 4B | 	byte	$04, $05, $1c, $17, $27, $2f, $e9, $e7, $2e, $00, $92, $e3, $47, $00, $d9, $4b
180b8     2F DA 25 43 
180bc     E4 EC 3D ED 
180c0     B7 1B 26 C7 
180c4     F6 52 09 F1 | 	byte	$2f, $da, $25, $43, $e4, $ec, $3d, $ed, $b7, $1b, $26, $c7, $f6, $52, $09, $f1
180c8     35 13 E5 19 
180cc     09 DE FF 09 
180d0     E1 E6 14 13 
180d4     01 07 27 39 | 	byte	$35, $13, $e5, $19, $09, $de, $ff, $09, $e1, $e6, $14, $13, $01, $07, $27, $39
180d8     0B F3 16 26 
180dc     A5 9F 25 1C 
180e0     C7 25 47 E4 
180e4     FF 4F F7 DE | 	byte	$0b, $f3, $16, $26, $a5, $9f, $25, $1c, $c7, $25, $47, $e4, $ff, $4f, $f7, $de
180e8     2E 00 B6 FF 
180ec     2B CC D4 46 
180f0     2B DE 20 34 
180f4     ED FF 2D E0 | 	byte	$2e, $00, $b6, $ff, $2b, $cc, $d4, $46, $2b, $de, $20, $34, $ed, $ff, $2d, $e0
180f8     EA 14 ED C5 
180fc     08 17 E4 0D 
18100     33 26 0D 04 
18104     33 2B A1 B0 | 	byte	$ea, $14, $ed, $c5, $08, $17, $e4, $0d, $33, $26, $0d, $04, $33, $2b, $a1, $b0
18108     2E 09 BC 38 
1810c     47 DF 0D 4F 
18110     00 D4 2E 17 
18114     B9 EC 39 00 | 	byte	$2e, $09, $bc, $38, $47, $df, $0d, $4f, $00, $d4, $2e, $17, $b9, $ec, $39, $00
18118     BC 20 4C 00 
1811c     EC 38 0A EF 
18120     20 1C E1 F3 
18124     09 DA DE 16 | 	byte	$bc, $20, $4c, $00, $ec, $38, $0a, $ef, $20, $1c, $e1, $f3, $09, $da, $de, $16
18128     13 F6 20 3D 
1812c     09 FB 29 32 
18130     B4 A9 25 28 
18134     C7 1B 4F F7 | 	byte	$13, $f6, $20, $3d, $09, $fb, $29, $32, $b4, $a9, $25, $28, $c7, $1b, $4f, $f7
18138     F6 4B 04 DA 
1813c     25 17 B4 E3 
18140     31 00 C5 25 
18144     43 F2 F6 3B | 	byte	$f6, $4b, $04, $da, $25, $17, $b4, $e3, $31, $00, $c5, $25, $43, $f2, $f6, $3b
18148     00 F3 27 09 
1814c     E5 F1 F8 DD 
18150     E3 1B 13 F6 
18154     29 3D 00 F8 | 	byte	$00, $f3, $27, $09, $e5, $f1, $f8, $dd, $e3, $1b, $13, $f6, $29, $3d, $00, $f8
18158     38 13 99 CF 
1815c     33 09 BB 38 
18160     43 E7 20 45 
18164     ED E3 34 ED | 	byte	$38, $13, $99, $cf, $33, $09, $bb, $38, $43, $e7, $20, $45, $ed, $e3, $34, $ed
18168     AE FF 34 DA 
1816c     CF 4B 43 DF 
18170     11 3E F2 F3 
18174     1D F8 E0 F6 | 	byte	$ae, $ff, $34, $da, $cf, $4b, $43, $df, $11, $3e, $f2, $f3, $1d, $f8, $e0, $f6
18178     FC E1 FF 26 
1817c     09 EA 20 2F 
18180     F7 08 41 E4 
18184     9E FF 3B 00 | 	byte	$fc, $e1, $ff, $26, $09, $ea, $20, $2f, $f7, $08, $41, $e4, $9e, $ff, $3b, $00
18188     C6 44 39 E9 
1818c     25 51 E4 DE 
18190     29 ED AD FF 
18194     39 DA E3 4B | 	byte	$c6, $44, $39, $e9, $25, $51, $e4, $de, $29, $ed, $ad, $ff, $39, $da, $e3, $4b
18198     26 E7 29 32 
1819c     F2 FF 13 E5 
181a0     E7 F9 F7 EF 
181a4     0A 14 00 1B | 	byte	$26, $e7, $29, $32, $f2, $ff, $13, $e5, $e7, $f9, $f7, $ef, $0a, $14, $00, $1b
181a8     1C F7 0F 40 
181ac     C7 A9 FF 2B 
181b0     DA E7 46 13 
181b4     FF 4B 39 E1 | 	byte	$1c, $f7, $0f, $40, $c7, $a9, $ff, $2b, $da, $e7, $46, $13, $ff, $4b, $39, $e1
181b8     FF 1C CC A9 
181bc     19 28 D1 FF 
181c0     4F 13 E5 20 
181c4     28 FB FF 0B | 	byte	$ff, $1c, $cc, $a9, $19, $28, $d1, $ff, $4f, $13, $e5, $20, $28, $fb, $ff, $0b
181c8     DA E3 0B E6 
181cc     F5 31 13 FD 
181d0     21 F9 FF 3D 
181d4     09 99 CF 32 | 	byte	$da, $e3, $0b, $e6, $f5, $31, $13, $fd, $21, $f9, $ff, $3d, $09, $99, $cf, $32
181d8     1C BD 1B 4C 
181dc     00 FF 55 39 
181e0     CC F6 1C C7 
181e4     B3 25 2F D1 | 	byte	$1c, $bd, $1b, $4c, $00, $ff, $55, $39, $cc, $f6, $1c, $c7, $b3, $25, $2f, $d1
181e8     FF 52 13 DF 
181ec     16 39 F9 FD 
181f0     15 E4 C9 0D 
181f4     1C FC 0D 20 | 	byte	$ff, $52, $13, $df, $16, $39, $f9, $fd, $15, $e4, $c9, $0d, $1c, $fc, $0d, $20
181f8     0E F0 F6 1B 
181fc     3B C7 AE FF 
18200     26 E4 D9 41 
18204     2B 05 37 51 | 	byte	$0e, $f0, $f6, $1b, $3b, $c7, $ae, $ff, $26, $e4, $d9, $41, $2b, $05, $37, $51
18208     F7 EA 0D DA 
1820c     A7 08 26 DA 
18210     FF 4D 13 E6 
18214     10 34 00 FB | 	byte	$f7, $ea, $0d, $da, $a7, $08, $26, $da, $ff, $4d, $13, $e6, $10, $34, $00, $fb
18218     0B DD DB 0D 
1821c     13 F1 11 2C 
18220     07 ED 08 49 
18224     00 A7 E3 26 | 	byte	$0b, $dd, $db, $0d, $13, $f1, $11, $2c, $07, $ed, $08, $49, $00, $a7, $e3, $26
18228     00 B6 25 4A 
1822c     09 19 5F 1C 
18230     DA 11 02 A5 
18234     D9 32 F7 E3 | 	byte	$00, $b6, $25, $4a, $09, $19, $5f, $1c, $da, $11, $02, $a5, $d9, $32, $f7, $e3
18238     3D 26 E6 FE 
1823c     33 1C F9 03 
18240     F2 D3 FF 0F 
18244     FB FF 28 28 | 	byte	$3d, $26, $e6, $fe, $33, $1c, $f9, $03, $f2, $d3, $ff, $0f, $fb, $ff, $28, $28
18248     F3 EF 16 43 
1824c     DA AE EC 26 
18250     00 B6 20 4A 
18254     0B 20 58 17 | 	byte	$f3, $ef, $16, $43, $da, $ae, $ec, $26, $00, $b6, $20, $4a, $0b, $20, $58, $17
18258     E5 0D 00 AB 
1825c     E7 32 F7 F6 
18260     3D 13 E0 FF 
18264     38 1C F5 F3 | 	byte	$e5, $0d, $00, $ab, $e7, $32, $f7, $f6, $3d, $13, $e0, $ff, $38, $1c, $f5, $f3
18268     F0 F1 09 01 
1826c     F7 1A 2F 00 
18270     EF 25 3B C0 
18274     B7 FB 17 DA | 	byte	$f0, $f1, $09, $01, $f7, $1a, $2f, $00, $ef, $25, $3b, $c0, $b7, $fb, $17, $da
18278     BC 38 3B 08 
1827c     38 56 09 F0 
18280     15 ED B1 FF 
18284     1C DF FF 3A | 	byte	$bc, $38, $3b, $08, $38, $56, $09, $f0, $15, $ed, $b1, $ff, $1c, $df, $ff, $3a
18288     09 E4 0D 37 
1828c     0B F5 FB E7 
18290     FE 05 F5 03 
18294     28 26 F2 FF | 	byte	$09, $e4, $0d, $37, $0b, $f5, $fb, $e7, $fe, $05, $f5, $03, $28, $26, $f2, $ff
18298     41 26 B4 C6 
1829c     0F 04 B4 E3 
182a0     4B 26 0D 41 
182a4     4C 00 F3 13 | 	byte	$41, $26, $b4, $c6, $0f, $04, $b4, $e3, $4b, $26, $0d, $41, $4c, $00, $f3, $13
182a8     E4 B3 11 1C 
182ac     E6 16 26 00 
182b0     E1 05 35 1C 
182b4     00 F2 F6 F9 | 	byte	$e4, $b3, $11, $1c, $e6, $16, $26, $00, $e1, $05, $35, $1c, $00, $f2, $f6, $f9
182b8     01 F7 FF 34 
182bc     26 F2 FF 4B 
182c0     00 B4 CF 0F 
182c4     F2 A3 F6 4B | 	byte	$01, $f7, $ff, $34, $26, $f2, $ff, $4b, $00, $b4, $cf, $0f, $f2, $a3, $f6, $4b
182c8     26 11 4B 39 
182cc     FD FF 0E C9 
182d0     C1 16 09 DB 
182d4     20 26 F5 FD | 	byte	$26, $11, $4b, $39, $fd, $ff, $0e, $c9, $c1, $16, $09, $db, $20, $26, $f5, $fd
182d8     25 2B 0B E7 
182dc     E3 F1 FD 00 
182e0     F8 20 2F 00 
182e4     08 4B 26 BA | 	byte	$25, $2b, $0b, $e7, $e3, $f1, $fd, $00, $f8, $20, $2f, $00, $08, $4b, $26, $ba
182e8     C6 FF 00 B4 
182ec     C1 38 2F 0F 
182f0     46 51 09 F6 
182f4     14 ED BA FF | 	byte	$c6, $ff, $00, $b4, $c1, $38, $2f, $0f, $46, $51, $09, $f6, $14, $ed, $ba, $ff
182f8     17 E4 08 2D 
182fc     04 EA 0D 32 
18300     26 ED DE F1 
18304     01 FB F6 16 | 	byte	$17, $e4, $08, $2d, $04, $ea, $0d, $32, $26, $ed, $de, $f1, $01, $fb, $f6, $16
18308     34 15 F9 25 
1830c     51 DF B7 DE 
18310     0A DF 96 EC 
18314     46 26 0D 4B | 	byte	$34, $15, $f9, $25, $51, $df, $b7, $de, $0a, $df, $96, $ec, $46, $26, $0d, $4b
18318     51 04 FB 19 
1831c     F7 BA FB 1C 
18320     F7 FB 16 13 
18324     FF 0D 26 26 | 	byte	$51, $04, $fb, $19, $f7, $ba, $fb, $1c, $f7, $fb, $16, $13, $ff, $0d, $26, $26
18328     F7 C8 EC 09 
1832c     F5 F1 23 34 
18330     13 03 4B 26 
18334     C7 CE FF 00 | 	byte	$f7, $c8, $ec, $09, $f5, $f1, $23, $34, $13, $03, $4b, $26, $c7, $ce, $ff, $00
18338     B4 A9 25 2F 
1833c     05 2E 5B 26 
18340     FB 15 00 C7 
18344     E3 16 02 EC | 	byte	$b4, $a9, $25, $2f, $05, $2e, $5b, $26, $fb, $15, $00, $c7, $e3, $16, $02, $ec
18348     11 14 FC 0A 
1834c     20 27 00 D4 
18350     E7 FF FC F1 
18354     1B 2D 0A 0D | 	byte	$11, $14, $fc, $0a, $20, $27, $00, $d4, $e7, $ff, $fc, $f1, $1b, $2d, $0a, $0d
18358     4B 26 C9 D3 
1835c     FF 00 B4 A9 
18360     25 2F 00 1B 
18364     51 2B 00 11 | 	byte	$4b, $26, $c9, $d3, $ff, $00, $b4, $a9, $25, $2f, $00, $1b, $51, $2b, $00, $11
18368     13 E4 E0 05 
1836c     09 F2 F6 0F 
18370     09 02 19 2E 
18374     17 DA D9 01 | 	byte	$13, $e4, $e0, $05, $09, $f2, $f6, $0f, $09, $02, $19, $2e, $17, $da, $d9, $01
18378     F7 E3 0F 29 
1837c     1C 03 38 62 
18380     00 C7 E3 14 
18384     ED 93 D9 37 | 	byte	$f7, $e3, $0f, $29, $1c, $03, $38, $62, $00, $c7, $e3, $14, $ed, $93, $d9, $37
18388     15 FF 38 4C 
1838c     13 03 20 00 
18390     C8 EC 14 00 
18394     EA 08 17 FF | 	byte	$15, $ff, $38, $4c, $13, $03, $20, $00, $c8, $ec, $14, $00, $ea, $08, $17, $ff
18398     0D 20 28 ED 
1839c     D4 F6 F9 DF 
183a0     FF 27 13 0D 
183a4     63 4C D1 D3 | 	byte	$0d, $20, $28, $ed, $d4, $f6, $f9, $df, $ff, $27, $13, $0d, $63, $4c, $d1, $d3
183a8     08 0E A5 9B 
183ac     1B 2F ED FF 
183b0     55 2B FD 20 
183b4     2F F0 CF FF | 	byte	$08, $0e, $a5, $9b, $1b, $2f, $ed, $ff, $55, $2b, $fd, $20, $2f, $f0, $cf, $ff
183b8     0F F0 E6 08 
183bc     17 01 13 2E 
183c0     09 DB EC FF 
183c4     ED F1 14 13 | 	byte	$0f, $f0, $e6, $08, $17, $01, $13, $2e, $09, $db, $ec, $ff, $ed, $f1, $14, $13
183c8     FF 41 69 00 
183cc     CC F1 20 DF 
183d0     8D CF 2E 15 
183d4     DD 11 4B 26 | 	byte	$ff, $41, $69, $00, $cc, $f1, $20, $df, $8d, $cf, $2e, $15, $dd, $11, $4b, $26
183d8     FB 20 32 F7 
183dc     D7 FB 17 00 
183e0     DE 03 0E 05 
183e4     16 31 13 DF | 	byte	$fb, $20, $32, $f7, $d7, $fb, $17, $00, $de, $03, $0e, $05, $16, $31, $13, $df
183e8     F1 03 F0 EF 
183ec     11 1D 00 29 
183f0     62 13 D3 E7 
183f4     1B ED 92 BC | 	byte	$f1, $03, $f0, $ef, $11, $1d, $00, $29, $62, $13, $d3, $e7, $1b, $ed, $92, $bc
183f8     2E 13 F1 2E 
183fc     49 09 EF 16 
18400     3B 04 DA FD 
18404     00 ED F6 0D | 	byte	$2e, $13, $f1, $2e, $49, $09, $ef, $16, $3b, $04, $da, $fd, $00, $ed, $f6, $0d
18408     05 08 27 2D 
1840c     E9 D4 FF 09 
18410     F8 FF 0E 0D 
18414     08 49 4C E4 | 	byte	$05, $08, $27, $2d, $e9, $d4, $ff, $09, $f8, $ff, $0e, $0d, $08, $49, $4c, $e4
18418     D2 FF 0E BD 
1841c     98 F6 40 02 
18420     FF 3F 32 F2 
18424     F1 20 26 F9 | 	byte	$d2, $ff, $0e, $bd, $98, $f6, $40, $02, $ff, $3f, $32, $f2, $f1, $20, $26, $f9
18428     F3 0D 00 E9 
1842c     FB 0A FF 04 
18430     25 15 E4 EA 
18434     0D 0A FF 0D | 	byte	$f3, $0d, $00, $e9, $fb, $0a, $ff, $04, $25, $15, $e4, $ea, $0d, $0a, $ff, $0d
18438     17 FD 08 4B 
1843c     39 D1 C8 FF 
18440     15 CC 9D FB 
18444     47 0B FB 2E | 	byte	$17, $fd, $08, $4b, $39, $d1, $c8, $ff, $15, $cc, $9d, $fb, $47, $0b, $fb, $2e
18448     4B 13 DE 0D 
1844c     29 00 E3 05 
18450     13 F2 EB 08 
18454     01 03 17 1C | 	byte	$4b, $13, $de, $0d, $29, $00, $e3, $05, $13, $f2, $eb, $08, $01, $03, $17, $1c
18458     F7 F0 0A 07 
1845c     F8 11 17 FD 
18460     03 49 39 D3 
18464     CF 0D 0B B9 | 	byte	$f7, $f0, $0a, $07, $f8, $11, $17, $fd, $03, $49, $39, $d3, $cf, $0d, $0b, $b9
18468     AE 1B 39 00 
1846c     0D 41 2B ED 
18470     FB 15 00 EB 
18474     0F 13 F0 E7 | 	byte	$ae, $1b, $39, $00, $0d, $41, $2b, $ed, $fb, $15, $00, $eb, $0f, $13, $f0, $e7
18478     0A 0A FC 03 
1847c     19 04 F6 03 
18480     08 04 0A 19 
18484     04 FD 22 3A | 	byte	$0a, $0a, $fc, $03, $19, $04, $f6, $03, $08, $04, $0a, $19, $04, $fd, $22, $3a
18488     ED CF 08 17 
1848c     D1 A9 FF 39 
18490     00 10 3D 28 
18494     E9 F6 20 07 | 	byte	$ed, $cf, $08, $17, $d1, $a9, $ff, $39, $00, $10, $3d, $28, $e9, $f6, $20, $07
18498     F8 FF 0D F7 
1849c     DF F6 0D 01 
184a0     FD 20 17 F0 
184a4     F8 14 09 F9 | 	byte	$f8, $ff, $0d, $f7, $df, $f6, $0d, $01, $fd, $20, $17, $f0, $f8, $14, $09, $f9
184a8     15 1A FD F8 
184ac     25 3E ED C3 
184b0     FF 26 DF C1 
184b4     08 39 09 F6 | 	byte	$15, $1a, $fd, $f8, $25, $3e, $ed, $c3, $ff, $26, $df, $c1, $08, $39, $09, $f6
184b8     2E 26 00 FD 
184bc     03 0D 04 0A 
184c0     00 E4 F3 0D 
184c4     0A F7 0A 20 | 	byte	$2e, $26, $00, $fd, $03, $0d, $04, $0a, $00, $e4, $f3, $0d, $0a, $f7, $0a, $20
184c8     0B FC 03 13 
184cc     00 FF 0A 10 
184d0     07 02 14 1C 
184d4     F2 D2 F6 15 | 	byte	$0b, $fc, $03, $13, $00, $ff, $0a, $10, $07, $02, $14, $1c, $f2, $d2, $f6, $15
184d8     F8 DD 08 27 
184dc     09 02 1B 19 
184e0     00 FF 0F 02 
184e4     F9 03 FD EA | 	byte	$f8, $dd, $08, $27, $09, $02, $1b, $19, $00, $ff, $0f, $02, $f9, $03, $fd, $ea
184e8     F6 0E 0A FF 
184ec     0D 0D 04 0B 
184f0     13 0D 01 02 
184f4     03 03 05 0D | 	byte	$f6, $0e, $0a, $ff, $0d, $0d, $04, $0b, $13, $0d, $01, $02, $03, $03, $05, $0d
184f8     FC F5 05 02 
184fc     FC EB FF 19 
18500     09 F6 08 20 
18504     05 FF 0D 15 | 	byte	$fc, $f5, $05, $02, $fc, $eb, $ff, $19, $09, $f6, $08, $20, $05, $ff, $0d, $15
18508     01 F9 F3 F7 
1850c     02 01 0A 00 
18510     FF 0B FD 0A 
18514     20 16 07 04 | 	byte	$01, $f9, $f3, $f7, $02, $01, $0a, $00, $ff, $0b, $fd, $0a, $20, $16, $07, $04
18518     13 04 F0 FB 
1851c     08 FB 02 04 
18520     F5 08 08 FB 
18524     FF 05 1B 13 | 	byte	$13, $04, $f0, $fb, $08, $fb, $02, $04, $f5, $08, $08, $fb, $ff, $05, $1b, $13
18528     FF 08 08 0E 
1852c     01 07 04 F2 
18530     FF 00 F9 FE 
18534     0A 05 09 07 | 	byte	$ff, $08, $08, $0e, $01, $07, $04, $f2, $ff, $00, $f9, $fe, $0a, $05, $09, $07
18538     FF 13 0E 04 
1853c     02 FF 01 00 
18540     FF 13 00 F0 
18544     F6 0D 0B 0A | 	byte	$ff, $13, $0e, $04, $02, $ff, $01, $00, $ff, $13, $00, $f0, $f6, $0d, $0b, $0a
18548     09 FF 08 0E 
1854c     02 FF 05 0A 
18550     02 FF 07 FD 
18554     07 00 FF 09 | 	byte	$09, $ff, $08, $0e, $02, $ff, $05, $0a, $02, $ff, $07, $fd, $07, $00, $ff, $09
18558     08 13 F7 FF 
1855c     0B 0A 01 05 
18560     04 F8 08 17 
18564     02 F5 02 00 | 	byte	$08, $13, $f7, $ff, $0b, $0a, $01, $05, $04, $f8, $08, $17, $02, $f5, $02, $00
18568     FF 05 FF 09 
1856c     0A 08 05 FF 
18570     03 0F 09 FE 
18574     F6 0B 1C 00 | 	byte	$ff, $05, $ff, $09, $0a, $08, $05, $ff, $03, $0f, $09, $fe, $f6, $0b, $1c, $00
18578     F8 04 FF 0D 
1857c     05 FF 05 05 
18580     FD 07 0A 04 
18584     09 F8 0D 0A | 	byte	$f8, $04, $ff, $0d, $05, $ff, $05, $05, $fd, $07, $0a, $04, $09, $f8, $0d, $0a
18588     0B 03 F2 FB 
1858c     0D 0E 04 02 
18590     03 FF 13 09 
18594     FF F9 FD 1B | 	byte	$0b, $03, $f2, $fb, $0d, $0e, $04, $02, $03, $ff, $13, $09, $ff, $f9, $fd, $1b
18598     09 F7 FF 08 
1859c     13 05 F6 FF 
185a0     04 03 FF 13 
185a4     09 FF 0E 01 | 	byte	$09, $f7, $ff, $08, $13, $05, $f6, $ff, $04, $03, $ff, $13, $09, $ff, $0e, $01
185a8     FE 04 05 05 
185ac     FC 02 09 09 
185b0     08 09 FC FD 
185b4     0D 07 07 02 | 	byte	$fe, $04, $05, $05, $fc, $02, $09, $09, $08, $09, $fc, $fd, $0d, $07, $07, $02
185b8     F2 FF 19 0E 
185bc     FE 01 05 09 
185c0     FD 03 00 05 
185c4     08 05 13 02 | 	byte	$f2, $ff, $19, $0e, $fe, $01, $05, $09, $fd, $03, $00, $05, $08, $05, $13, $02
185c8     F9 0A 07 F6 
185cc     05 05 F8 FF 
185d0     0F 0B 09 05 
185d4     00 F9 FF 0F | 	byte	$f9, $0a, $07, $f6, $05, $05, $f8, $ff, $0f, $0b, $09, $05, $00, $f9, $ff, $0f
185d8     0B 00 FF 09 
185dc     05 05 FE 02 
185e0     0A 09 01 03 
185e4     01 0A 00 01 | 	byte	$0b, $00, $ff, $09, $05, $05, $fe, $02, $0a, $09, $01, $03, $01, $0a, $00, $01
185e8     0B 07 00 05 
185ec     01 FF 0B 14 
185f0     FE F6 03 04 
185f4     08 13 08 FC | 	byte	$0b, $07, $00, $05, $01, $ff, $0b, $14, $fe, $f6, $03, $04, $08, $13, $08, $fc
185f8     FB 03 04 05 
185fc     07 00 FF 08 
18600     0A 03 FB FF 
18604     04 FF 01 05 | 	byte	$fb, $03, $04, $05, $07, $00, $ff, $08, $0a, $03, $fb, $ff, $04, $ff, $01, $05
18608     16 13 02 F2 
1860c     FB 1B 09 FB 
18610     FF 02 07 07 
18614     0E 02 FE 09 | 	byte	$16, $13, $02, $f2, $fb, $1b, $09, $fb, $ff, $02, $07, $07, $0e, $02, $fe, $09
18618     FE 04 02 FE 
1861c     FE 08 15 01 
18620     05 04 08 0B 
18624     F5 FF 09 02 | 	byte	$fe, $04, $02, $fe, $fe, $08, $15, $01, $05, $04, $08, $0b, $f5, $ff, $09, $02
18628     03 16 13 F0 
1862c     F6 FF 15 0B 
18630     02 00 F6 FF 
18634     0F FD 0D 13 | 	byte	$03, $16, $13, $f0, $f6, $ff, $15, $0b, $02, $00, $f6, $ff, $0f, $fd, $0d, $13
18638     F9 F5 08 13 
1863c     00 08 09 FB 
18640     11 0B FD FB 
18644     FF 13 09 07 | 	byte	$f9, $f5, $08, $13, $00, $08, $09, $fb, $11, $0b, $fd, $fb, $ff, $13, $09, $07
18648     01 01 FF 08 
1864c     15 F2 FB 16 
18650     0E 0A 02 FE 
18654     FF 05 FD 05 | 	byte	$01, $01, $ff, $08, $15, $f2, $fb, $16, $0e, $0a, $02, $fe, $ff, $05, $fd, $05
18658     0E FF 08 07 
1865c     04 01 05 0A 
18660     00 FF 01 FE 
18664     01 0D 0D FE | 	byte	$0e, $ff, $08, $07, $04, $01, $05, $0a, $00, $ff, $01, $fe, $01, $0d, $0d, $fe
18668     F6 0A 09 05 
1866c     04 01 01 FF 
18670     00 05 0D 02 
18674     FE FF 1C F9 | 	byte	$f6, $0a, $09, $05, $04, $01, $01, $ff, $00, $05, $0d, $02, $fe, $ff, $1c, $f9
18678     F9 0D 05 02 
1867c     FD 08 0E FB 
18680     FF 05 08 04 
18684     02 09 FC FD | 	byte	$f9, $0d, $05, $02, $fd, $08, $0e, $fb, $ff, $05, $08, $04, $02, $09, $fc, $fd
18688     14 04 FF 0B 
1868c     FC 05 10 04 
18690     FF FF 05 05 
18694     FD 01 03 0D | 	byte	$14, $04, $ff, $0b, $fc, $05, $10, $04, $ff, $ff, $05, $05, $fd, $01, $03, $0d
18698     09 03 0A 09 
1869c     FC E7 FB 22 
186a0     13 02 FB FF 
186a4     03 09 0B 00 | 	byte	$09, $03, $0a, $09, $fc, $e7, $fb, $22, $13, $02, $fb, $ff, $03, $09, $0b, $00
186a8     FF 0D 0A 03 
186ac     00 0B 0F 07 
186b0     F9 FD 0B FF 
186b4     19 04 F3 08 | 	byte	$ff, $0d, $0a, $03, $00, $0b, $0f, $07, $f9, $fd, $0b, $ff, $19, $04, $f3, $08
186b8     01 0B 0A 02 
186bc     FE 05 05 09 
186c0     13 07 FD F8 
186c4     01 00 00 02 | 	byte	$01, $0b, $0a, $02, $fe, $05, $05, $09, $13, $07, $fd, $f8, $01, $00, $00, $02
186c8     17 09 F2 F6 
186cc     0B 0A 09 04 
186d0     04 F7 F1 11 
186d4     15 F5 0D 04 | 	byte	$17, $09, $f2, $f6, $0b, $0a, $09, $04, $04, $f7, $f1, $11, $15, $f5, $0d, $04
186d8     F7 05 0D 17 
186dc     00 F5 FE 0D 
186e0     1C FD 08 03 
186e4     F8 04 03 0D | 	byte	$f7, $05, $0d, $17, $00, $f5, $fe, $0d, $1c, $fd, $08, $03, $f8, $04, $03, $0d
186e8     F9 FF 13 0A 
186ec     00 0A F7 F2 
186f0     0A 17 1A 00 
186f4     ED F6 16 13 | 	byte	$f9, $ff, $13, $0a, $00, $0a, $f7, $f2, $0a, $17, $1a, $00, $ed, $f6, $16, $13
186f8     FD 08 0B FC 
186fc     F5 03 0B 01 
18700     0D 02 F3 0A 
18704     13 FF 0A 07 | 	byte	$fd, $08, $0b, $fc, $f5, $03, $0b, $01, $0d, $02, $f3, $0a, $13, $ff, $0a, $07
18708     F5 FF 13 13 
1870c     04 FB FB 0D 
18710     1A 00 07 FC 
18714     FD 07 0D 03 | 	byte	$f5, $ff, $13, $13, $04, $fb, $fb, $0d, $1a, $00, $07, $fc, $fd, $07, $0d, $03
18718     0A FC 02 09 
1871c     05 0A 0F F8 
18720     F6 1A 07 FB 
18724     FF 13 04 F7 | 	byte	$0a, $fc, $02, $09, $05, $0a, $0f, $f8, $f6, $1a, $07, $fb, $ff, $13, $04, $f7
18728     07 0F 00 F6 
1872c     01 FE 08 0E 
18730     00 FE 02 00 
18734     03 05 07 FC | 	byte	$07, $0f, $00, $f6, $01, $fe, $08, $0e, $00, $fe, $02, $00, $03, $05, $07, $fc
18738     FF 1A 09 F3 
1873c     FB 0F 0A 0A 
18740     01 01 04 FE 
18744     02 08 13 F9 | 	byte	$ff, $1a, $09, $f3, $fb, $0f, $0a, $0a, $01, $01, $04, $fe, $02, $08, $13, $f9
18748     FC 08 0F 13 
1874c     F8 FF F9 03 
18750     04 08 04 08 
18754     04 04 14 0B | 	byte	$fc, $08, $0f, $13, $f8, $ff, $f9, $03, $04, $08, $04, $08, $04, $04, $14, $0b
18758     F5 FB 10 0B 
1875c     02 FF FF 05 
18760     00 FF 07 0D 
18764     00 13 04 F9 | 	byte	$f5, $fb, $10, $0b, $02, $ff, $ff, $05, $00, $ff, $07, $0d, $00, $13, $04, $f9
18768     FB 0F 0B FE 
1876c     03 FF 0D 0B 
18770     13 FC FF 02 
18774     FC 15 17 02 | 	byte	$fb, $0f, $0b, $fe, $03, $ff, $0d, $0b, $13, $fc, $ff, $02, $fc, $15, $17, $02
18778     F6 01 03 04 
1877c     0D 15 00 FF 
18780     01 0D 05 FF 
18784     05 10 F7 F6 | 	byte	$f6, $01, $03, $04, $0d, $15, $00, $ff, $01, $0d, $05, $ff, $05, $10, $f7, $f6
18788     19 0D FC F8 
1878c     05 09 0B 02 
18790     FC 03 F9 FF 
18794     FF 0A 17 00 | 	byte	$19, $0d, $fc, $f8, $05, $09, $0b, $02, $fc, $03, $f9, $ff, $ff, $0a, $17, $00
18798     FD FB 07 0B 
1879c     FE F6 08 13 
187a0     0B 0A 0F F7 
187a4     F5 0D 02 F6 | 	byte	$fd, $fb, $07, $0b, $fe, $f6, $08, $13, $0b, $0a, $0f, $f7, $f5, $0d, $02, $f6
187a8     08 05 05 0A 
187ac     09 01 03 FF 
187b0     07 FE FE 08 
187b4     16 09 FD 0D | 	byte	$08, $05, $05, $0a, $09, $01, $03, $ff, $07, $fe, $fe, $08, $16, $09, $fd, $0d
187b8     09 F2 F8 04 
187bc     03 00 0D 0F 
187c0     FE 13 0B FF 
187c4     04 01 FD FE | 	byte	$09, $f2, $f8, $04, $03, $00, $0d, $0f, $fe, $13, $0b, $ff, $04, $01, $fd, $fe
187c8     FD 08 13 16 
187cc     05 F2 F8 0A 
187d0     00 F9 16 17 
187d4     03 02 02 09 | 	byte	$fd, $08, $13, $16, $05, $f2, $f8, $0a, $00, $f9, $16, $17, $03, $02, $02, $09
187d8     00 FF 05 13 
187dc     09 02 01 F8 
187e0     04 0F 0B 07 
187e4     00 09 09 FE | 	byte	$00, $ff, $05, $13, $09, $02, $01, $f8, $04, $0f, $0b, $07, $00, $09, $09, $fe
187e8     FF 0B 0B 03 
187ec     03 08 00 FE 
187f0     05 10 FC E6 
187f4     0F 0A 14 07 | 	byte	$ff, $0b, $0b, $03, $03, $08, $00, $fe, $05, $10, $fc, $e6, $0f, $0a, $14, $07
187f8     FD FD FB 03 
187fc     07 00 FF 07 
18800     FF 0D 07 FC 
18804     05 1B F2 F1 | 	byte	$fd, $fd, $fb, $03, $07, $00, $ff, $07, $ff, $0d, $07, $fc, $05, $1b, $f2, $f1
18808     13 05 FB FE 
1880c     17 00 FB 08 
18810     0B 08 0B FC 
18814     F6 05 0B 0F | 	byte	$13, $05, $fb, $fe, $17, $00, $fb, $08, $0b, $08, $0b, $fc, $f6, $05, $0b, $0f
18818     FB F9 0F 15 
1881c     07 FF 00 F6 
18820     0D 05 FE 11 
18824     1D 00 F1 FF | 	byte	$fb, $f9, $0f, $15, $07, $ff, $00, $f6, $0d, $05, $fe, $11, $1d, $00, $f1, $ff
18828     FC FF 0F 0E 
1882c     F7 03 0E 07 
18830     01 04 05 FF 
18834     0A 04 03 08 | 	byte	$fc, $ff, $0f, $0e, $f7, $03, $0e, $07, $01, $04, $05, $ff, $0a, $04, $03, $08
18838     09 03 08 14 
1883c     00 ED 05 13 
18840     13 13 F2 F8 
18844     04 19 04 05 | 	byte	$09, $03, $08, $14, $00, $ed, $05, $13, $13, $13, $f2, $f8, $04, $19, $04, $05
18848     07 FF 04 0A 
1884c     0A 00 08 F8 
18850     0F 1A 00 EF 
18854     F3 FD 16 0E | 	byte	$07, $ff, $04, $0a, $0a, $00, $08, $f8, $0f, $1a, $00, $ef, $f3, $fd, $16, $0e
18858     05 01 F6 FF 
1885c     00 03 00 FF 
18860     0B 07 00 FB 
18864     08 03 FF 13 | 	byte	$05, $01, $f6, $ff, $00, $03, $00, $ff, $0b, $07, $00, $fb, $08, $03, $ff, $13
18868     FD FF FC 08 
1886c     13 03 FE FF 
18870     0D 03 FC 03 
18874     13 07 04 FD | 	byte	$fd, $ff, $fc, $08, $13, $03, $fe, $ff, $0d, $03, $fc, $03, $13, $07, $04, $fd
18878     FD 00 FD 02 
1887c     0F 15 0B 00 
18880     FB FE FE 13 
18884     15 03 F7 FB | 	byte	$fd, $00, $fd, $02, $0f, $15, $0b, $00, $fb, $fe, $fe, $13, $15, $03, $f7, $fb
18888     16 FC FF 0F 
1888c     08 0A F7 FB 
18890     FC FF 21 0E 
18894     FF 01 FF 0A | 	byte	$16, $fc, $ff, $0f, $08, $0a, $f7, $fb, $fc, $ff, $21, $0e, $ff, $01, $ff, $0a
18898     07 F6 FF 1A 
1889c     05 05 08 0D 
188a0     F9 FB 13 13 
188a4     07 0A 05 F6 | 	byte	$07, $f6, $ff, $1a, $05, $05, $08, $0d, $f9, $fb, $13, $13, $07, $0a, $05, $f6
188a8     08 0D 00 0A 
188ac     0B FE 0D 0B 
188b0     FD FB 02 13 
188b4     00 F0 0F 07 | 	byte	$08, $0d, $00, $0a, $0b, $fe, $0d, $0b, $fd, $fb, $02, $13, $00, $f0, $0f, $07
188b8     0D 13 04 F3 
188bc     FF 01 FE 13 
188c0     F8 F8 04 13 
188c4     0A F5 F1 0B | 	byte	$0d, $13, $04, $f3, $ff, $01, $fe, $13, $f8, $f8, $04, $13, $0a, $f5, $f1, $0b
188c8     14 0E F6 EA 
188cc     0A 27 01 F2 
188d0     FB 07 04 0E 
188d4     FE 07 04 02 | 	byte	$14, $0e, $f6, $ea, $0a, $27, $01, $f2, $fb, $07, $04, $0e, $fe, $07, $04, $02
188d8     05 00 FC F9 
188dc     11 14 00 FB 
188e0     FC 11 1A 02 
188e4     FB 00 F9 0D | 	byte	$05, $00, $fc, $f9, $11, $14, $00, $fb, $fc, $11, $1a, $02, $fb, $00, $f9, $0d
188e8     16 FE 01 FF 
188ec     09 04 03 08 
188f0     0D FC F6 13 
188f4     0B 00 F6 FF | 	byte	$16, $fe, $01, $ff, $09, $04, $03, $08, $0d, $fc, $f6, $13, $0b, $00, $f6, $ff
188f8     0F 0A F7 FF 
188fc     13 0E 0B 00 
18900     0B 00 FF 1A 
18904     F3 FF 14 00 | 	byte	$0f, $0a, $f7, $ff, $13, $0e, $0b, $00, $0b, $00, $ff, $1a, $f3, $ff, $14, $00
18908     02 02 0D 05 
1890c     0A FE 08 00 
18910     FF 0F 16 0E 
18914     F6 F6 0D 16 | 	byte	$02, $02, $0d, $05, $0a, $fe, $08, $00, $ff, $0f, $16, $0e, $f6, $f6, $0d, $16
18918     00 FF FB 05 
1891c     08 0B 09 F8 
18920     FF 03 05 0A 
18924     03 08 F9 FB | 	byte	$00, $ff, $fb, $05, $08, $0b, $09, $f8, $ff, $03, $05, $0a, $03, $08, $f9, $fb
18928     04 03 02 F1 
1892c     10 1C F9 FB 
18930     0F FF 09 0B 
18934     0B FE FF 02 | 	byte	$04, $03, $02, $f1, $10, $1c, $f9, $fb, $0f, $ff, $09, $0b, $0b, $fe, $ff, $02
18938     FF FF 07 05 
1893c     05 00 FE 03 
18940     02 02 07 0D 
18944     FD F8 08 0A | 	byte	$ff, $ff, $07, $05, $05, $00, $fe, $03, $02, $02, $07, $0d, $fd, $f8, $08, $0a
18948     05 02 00 00 
1894c     00 00 05 01 
18950     05 06 09 F9 
18954     0B 00 F6 06 | 	byte	$05, $02, $00, $00, $00, $00, $05, $01, $05, $06, $09, $f9, $0b, $00, $f6, $06
18958     07 03 10 0A 
1895c     F2 FF 16 07 
18960     FF 04 05 0A 
18964     FA FF 08 07 | 	byte	$07, $03, $10, $0a, $f2, $ff, $16, $07, $ff, $04, $05, $0a, $fa, $ff, $08, $07
18968     0B FC FB 0B 
1896c     0B 01 FC F1 
18970     09 16 0C 05 
18974     FA 05 07 05 | 	byte	$0b, $fc, $fb, $0b, $0b, $01, $fc, $f1, $09, $16, $0c, $05, $fa, $05, $07, $05
18978     FD 05 04 F4 
1897c     07 19 02 FD 
18980     FF 09 0C 00 
18984     06 0B 08 FF | 	byte	$fd, $05, $04, $f4, $07, $19, $02, $fd, $ff, $09, $0c, $00, $06, $0b, $08, $ff
18988     FF 00 0D 06 
1898c     FF FF 0B 08 
18990     F9 07 03 0B 
18994     04 F7 0B 10 | 	byte	$ff, $00, $0d, $06, $ff, $ff, $0b, $08, $f9, $07, $03, $0b, $04, $f7, $0b, $10
18998     09 00 04 02 
1899c     FF 02 01 04 
189a0     FE FF 06 07 
189a4     10 FA FF 02 | 	byte	$09, $00, $04, $02, $ff, $02, $01, $04, $fe, $ff, $06, $07, $10, $fa, $ff, $02
189a8     FD FE 03 10 
189ac     0B F1 FF 10 
189b0     FF 13 08 F3 
189b4     FF 06 01 FA | 	byte	$fd, $fe, $03, $10, $0b, $f1, $ff, $10, $ff, $13, $08, $f3, $ff, $06, $01, $fa
189b8     0F 10 FC FB 
189bc     0B 06 04 FF 
189c0     06 FC 06 03 
189c4     01 10 06 00 | 	byte	$0f, $10, $fc, $fb, $0b, $06, $04, $ff, $06, $fc, $06, $03, $01, $10, $06, $00
189c8     F7 FB 17 14 
189cc     08 00 F0 FF 
189d0     11 12 02 F6 
189d4     FB 0A 04 03 | 	byte	$f7, $fb, $17, $14, $08, $00, $f0, $ff, $11, $12, $02, $f6, $fb, $0a, $04, $03
189d8     09 FA FC 0D 
189dc     10 FE FB 04 
189e0     02 06 02 06 
189e4     0C 00 07 0B | 	byte	$09, $fa, $fc, $0d, $10, $fe, $fb, $04, $02, $06, $02, $06, $0c, $00, $07, $0b
189e8     0D 08 FA 04 
189ec     F9 09 11 01 
189f0     04 FF 09 09 
189f4     FB FD 01 0F | 	byte	$0d, $08, $fa, $04, $f9, $09, $11, $01, $04, $ff, $09, $09, $fb, $fd, $01, $0f
189f8     0D 0A FC FF 
189fc     04 05 08 FD 
18a00     07 02 05 04 
18a04     03 FC F9 08 | 	byte	$0d, $0a, $fc, $ff, $04, $05, $08, $fd, $07, $02, $05, $04, $03, $fc, $f9, $08
18a08     08 02 05 14 
18a0c     F4 F7 10 00 
18a10     FD 03 15 01 
18a14     FF FD FA 08 | 	byte	$08, $02, $05, $14, $f4, $f7, $10, $00, $fd, $03, $15, $01, $ff, $fd, $fa, $08
18a18     FE 06 10 02 
18a1c     FC FD 03 09 
18a20     0A 00 09 09 
18a24     0C 00 F4 0E | 	byte	$fe, $06, $10, $02, $fc, $fd, $03, $09, $0a, $00, $09, $09, $0c, $00, $f4, $0e
18a28     10 02 06 FA 
18a2c     FF 09 0A 05 
18a30     01 FB 07 10 
18a34     08 F8 FF 00 | 	byte	$10, $02, $06, $fa, $ff, $09, $0a, $05, $01, $fb, $07, $10, $08, $f8, $ff, $00
18a38     FD 0D 09 FB 
18a3c     FF FA FF 12 
18a40     02 02 10 01 
18a44     07 00 06 0A | 	byte	$fd, $0d, $09, $fb, $ff, $fa, $ff, $12, $02, $02, $10, $01, $07, $00, $06, $0a
18a48     0C FC F7 10 
18a4c     06 09 10 08 
18a50     FB 03 12 F8 
18a54     FB 07 0A 02 | 	byte	$0c, $fc, $f7, $10, $06, $09, $10, $08, $fb, $03, $12, $f8, $fb, $07, $0a, $02
18a58     06 0C FC FF 
18a5c     08 00 02 15 
18a60     00 FE 07 06 
18a64     09 08 F8 FE | 	byte	$06, $0c, $fc, $ff, $08, $00, $02, $15, $00, $fe, $07, $06, $09, $08, $f8, $fe
18a68     08 02 00 FE 
18a6c     FD 09 11 00 
18a70     FB 02 F3 07 
18a74     0A 07 03 01 | 	byte	$08, $02, $00, $fe, $fd, $09, $11, $00, $fb, $02, $f3, $07, $0a, $07, $03, $01
18a78     04 FF 06 04 
18a7c     04 06 02 00 
18a80     FC 06 0A 04 
18a84     FF F9 05 05 | 	byte	$04, $ff, $06, $04, $04, $06, $02, $00, $fc, $06, $0a, $04, $ff, $f9, $05, $05
18a88     0E 10 00 FF 
18a8c     01 FC 0A 09 
18a90     09 04 F7 FB 
18a94     0D 11 03 FD | 	byte	$0e, $10, $00, $ff, $01, $fc, $0a, $09, $09, $04, $f7, $fb, $0d, $11, $03, $fd
18a98     FF 0D 00 F9 
18a9c     0D 02 0C 08 
18aa0     F9 05 FE FF 
18aa4     FF 0B 01 07 | 	byte	$ff, $0d, $00, $f9, $0d, $02, $0c, $08, $f9, $05, $fe, $ff, $ff, $0b, $01, $07
18aa8     06 05 10 00 
18aac     FD FE 0D 16 
18ab0     03 FE 01 02 
18ab4     06 15 00 FD | 	byte	$06, $05, $10, $00, $fd, $fe, $0d, $16, $03, $fe, $01, $02, $06, $15, $00, $fd
18ab8     0D 02 07 04 
18abc     FF 0B 07 FF 
18ac0     10 FA FA 06 
18ac4     FF 13 18 00 | 	byte	$0d, $02, $07, $04, $ff, $0b, $07, $ff, $10, $fa, $fa, $06, $ff, $13, $18, $00
18ac8     F3 FB 0B 00 
18acc     FB 06 0C 06 
18ad0     FA 07 FC 03 
18ad4     0C FD 02 FE | 	byte	$f3, $fb, $0b, $00, $fb, $06, $0c, $06, $fa, $07, $fc, $03, $0c, $fd, $02, $fe
18ad8     FF 00 FD 17 
18adc     04 F7 04 0B 
18ae0     0E 00 FE 09 
18ae4     0C F2 F1 1D | 	byte	$ff, $00, $fd, $17, $04, $f7, $04, $0b, $0e, $00, $fe, $09, $0c, $f2, $f1, $1d
18ae8     18 FC F9 04 
18aec     FA 07 10 05 
18af0     FE F9 07 06 
18af4     0B FE FD FE | 	byte	$18, $fc, $f9, $04, $fa, $07, $10, $05, $fe, $f9, $07, $06, $0b, $fe, $fd, $fe
18af8     FF 17 02 03 
18afc     04 05 01 FD 
18b00     05 09 0B 01 
18b04     F4 FF 08 04 | 	byte	$ff, $17, $02, $03, $04, $05, $01, $fd, $05, $09, $0b, $01, $f4, $ff, $08, $04
18b08     01 0E 02 F6 
18b0c     FF 0A 09 05 
18b10     02 03 0C 02 
18b14     FF 08 04 0E | 	byte	$01, $0e, $02, $f6, $ff, $0a, $09, $05, $02, $03, $0c, $02, $ff, $08, $04, $0e
18b18     0A FA 05 06 
18b1c     01 0B 0C 06 
18b20     F9 0B 00 FD 
18b24     12 05 FF FF | 	byte	$0a, $fa, $05, $06, $01, $0b, $0c, $06, $f9, $0b, $00, $fd, $12, $05, $ff, $ff
18b28     08 04 0D 01 
18b2c     FB 07 01 00 
18b30     03 0E 08 F4 
18b34     FD 0E 06 FF | 	byte	$08, $04, $0d, $01, $fb, $07, $01, $00, $03, $0e, $08, $f4, $fd, $0e, $06, $ff
18b38     07 0C 00 FD 
18b3c     FB FF 04 05 
18b40     0A 02 FA 0A 
18b44     08 04 02 00 | 	byte	$07, $0c, $00, $fd, $fb, $ff, $04, $05, $0a, $02, $fa, $0a, $08, $04, $02, $00
18b48     FA 0B 10 FA 
18b4c     F9 0B 12 FE 
18b50     07 00 FF 05 
18b54     07 FA FF 0D | 	byte	$fa, $0b, $10, $fa, $f9, $0b, $12, $fe, $07, $00, $ff, $05, $07, $fa, $ff, $0d
18b58     06 00 00 05 
18b5c     0B 08 F9 FF 
18b60     0C 04 F6 FE 
18b64     13 14 04 FA | 	byte	$06, $00, $00, $05, $0b, $08, $f9, $ff, $0c, $04, $f6, $fe, $13, $14, $04, $fa
18b68     FD 05 01 FB 
18b6c     06 0A 05 08 
18b70     00 FB 11 10 
18b74     F4 F7 13 0C | 	byte	$fd, $05, $01, $fb, $06, $0a, $05, $08, $00, $fb, $11, $10, $f4, $f7, $13, $0c
18b78     02 00 0B 0E 
18b7c     08 F9 07 09 
18b80     FF 03 05 05 
18b84     0A 03 01 FE | 	byte	$02, $00, $0b, $0e, $08, $f9, $07, $09, $ff, $03, $05, $05, $0a, $03, $01, $fe
18b88     09 0C 03 04 
18b8c     06 05 07 FD 
18b90     F3 0B 09 02 
18b94     0A 04 FF 01 | 	byte	$09, $0c, $03, $04, $06, $05, $07, $fd, $f3, $0b, $09, $02, $0a, $04, $ff, $01
18b98     00 09 02 02 
18b9c     02 FF 09 00 
18ba0     06 FE 01 FF 
18ba4     0A 09 0A FC | 	byte	$00, $09, $02, $02, $02, $ff, $09, $00, $06, $fe, $01, $ff, $0a, $09, $0a, $fc
18ba8     F1 FF 0E 0D 
18bac     00 FB 04 0B 
18bb0     0B 02 FF 0B 
18bb4     01 F6 07 08 | 	byte	$f1, $ff, $0e, $0d, $00, $fb, $04, $0b, $0b, $02, $ff, $0b, $01, $f6, $07, $08
18bb8     FE 03 0C 0B 
18bbc     08 FE FE 05 
18bc0     0B F8 F9 10 
18bc4     0C FB 05 08 | 	byte	$fe, $03, $0c, $0b, $08, $fe, $fe, $05, $0b, $f8, $f9, $10, $0c, $fb, $05, $08
18bc8     06 05 02 08 
18bcc     FC 05 04 F6 
18bd0     03 09 07 06 
18bd4     F7 FF 05 10 | 	byte	$06, $05, $02, $08, $fc, $05, $04, $f6, $03, $09, $07, $06, $f7, $ff, $05, $10
18bd8     0C FE 07 10 
18bdc     02 FB 03 0B 
18be0     0E 02 FD FF 
18be4     0A 05 09 04 | 	byte	$0c, $fe, $07, $10, $02, $fb, $03, $0b, $0e, $02, $fd, $ff, $0a, $05, $09, $04
18be8     FC 09 0B 00 
18bec     07 0B 02 FC 
18bf0     03 0A FF FF 
18bf4     0C FA FD 14 | 	byte	$fc, $09, $0b, $00, $07, $0b, $02, $fc, $03, $0a, $ff, $ff, $0c, $fa, $fd, $14
18bf8     F4 FF 0C 05 
18bfc     02 0A 08 FA 
18c00     04 08 FE FC 
18c04     02 00 06 05 | 	byte	$f4, $ff, $0c, $05, $02, $0a, $08, $fa, $04, $08, $fe, $fc, $02, $00, $06, $05
18c08     04 0A 00 FA 
18c0c     FF 15 08 F8 
18c10     FD 10 08 03 
18c14     FC F5 13 10 | 	byte	$04, $0a, $00, $fa, $ff, $15, $08, $f8, $fd, $10, $08, $03, $fc, $f5, $13, $10
18c18     F0 17 18 E4 
18c1c     FF 02 01 0C 
18c20     11 F4 F7 10 
18c24     08 F2 0E 13 | 	byte	$f0, $17, $18, $e4, $ff, $02, $01, $0c, $11, $f4, $f7, $10, $08, $f2, $0e, $13
18c28     FD F9 0B FA 
18c2c     03 17 00 05 
18c30     08 F0 EF 25 
18c34     28 E0 F7 26 | 	byte	$fd, $f9, $0b, $fa, $03, $17, $00, $05, $08, $f0, $ef, $25, $28, $e0, $f7, $26
18c38     00 E3 07 1A 
18c3c     00 0E 22 00 
18c40     DC F7 27 20 
18c44     06 10 F6 E0 | 	byte	$00, $e3, $07, $1a, $00, $0e, $22, $00, $dc, $f7, $27, $20, $06, $10, $f6, $e0
18c48     07 10 0D 15 
18c4c     0B 08 F0 F7 
18c50     00 F1 0D 45 
18c54     20 D7 FD 20 | 	byte	$07, $10, $0d, $15, $0b, $08, $f0, $f7, $00, $f1, $0d, $45, $20, $d7, $fd, $20
18c58     D0 DF 23 10 
18c5c     EE 1B 40 F8 
18c60     E0 FD F0 F2 
18c64     03 0D 06 07 | 	byte	$d0, $df, $23, $10, $ee, $1b, $40, $f8, $e0, $fd, $f0, $f2, $03, $0d, $06, $07
18c68     20 10 ED 07 
18c6c     02 F4 07 08 
18c70     E2 EF 1B 04 
18c74     07 30 00 E7 | 	byte	$20, $10, $ed, $07, $02, $f4, $07, $08, $e2, $ef, $1b, $04, $07, $30, $00, $e7
18c78     34 F0 BD 2F 
18c7c     20 C0 0B 36 
18c80     E0 E7 49 20 
18c84     D5 1F 24 E0 | 	byte	$34, $f0, $bd, $2f, $20, $c0, $0b, $36, $e0, $e7, $49, $20, $d5, $1f, $24, $e0
18c88     0B 25 E4 CB 
18c8c     17 14 E0 F3 
18c90     4B 20 F3 2B 
18c94     10 D0 EF 0A | 	byte	$0b, $25, $e4, $cb, $17, $14, $e0, $f3, $4b, $20, $f3, $2b, $10, $d0, $ef, $0a
18c98     F2 F5 0B 10 
18c9c     F6 1F 3C 00 
18ca0     E3 17 23 C0 
18ca4     B7 3F 28 CD | 	byte	$f2, $f5, $0b, $10, $f6, $1f, $3c, $00, $e3, $17, $23, $c0, $b7, $3f, $28, $cd
18ca8     37 30 DB 0B 
18cac     43 F4 C5 1B 
18cb0     20 C9 1F 28 
18cb4     E0 FF 32 F0 | 	byte	$37, $30, $db, $0b, $43, $f4, $c5, $1b, $20, $c9, $1f, $28, $e0, $ff, $32, $f0
18cb8     F3 20 F4 FF 
18cbc     37 00 F7 08 
18cc0     F2 E6 0B 14 
18cc4     F2 FF 0A F0 | 	byte	$f3, $20, $f4, $ff, $37, $00, $f7, $08, $f2, $e6, $0b, $14, $f2, $ff, $0a, $f0
18cc8     0B 24 E8 E7 
18ccc     26 00 CF 3F 
18cd0     40 D4 1B 20 
18cd4     C2 DF 2C E0 | 	byte	$0b, $24, $e8, $e7, $26, $00, $cf, $3f, $40, $d4, $1b, $20, $c2, $df, $2c, $e0
18cd8     C7 1F 10 E3 
18cdc     3B 38 F0 1B 
18ce0     3A E8 DF 27 
18ce4     F0 CD 17 08 | 	byte	$c7, $1f, $10, $e3, $3b, $38, $f0, $1b, $3a, $e8, $df, $27, $f0, $cd, $17, $08
18ce8     D2 07 08 E0 
18cec     0F 3A 02 07 
18cf0     2E 04 EE 0F 
18cf4     04 EC EF 0F | 	byte	$d2, $07, $08, $e0, $0f, $3a, $02, $07, $2e, $04, $ee, $0f, $04, $ec, $ef, $0f
18cf8     14 D8 EF 4D 
18cfc     08 E1 2F 00 
18d00     D3 07 24 E0 
18d04     EF 20 00 F3 | 	byte	$14, $d8, $ef, $4d, $08, $e1, $2f, $00, $d3, $07, $24, $e0, $ef, $20, $00, $f3
18d08     3F 30 EB 0B 
18d0c     2A F0 DB 14 
18d10     E4 FB 24 F0 
18d14     E7 25 06 FB | 	byte	$3f, $30, $eb, $0b, $2a, $f0, $db, $14, $e4, $fb, $24, $f0, $e7, $25, $06, $fb
18d18     22 20 FA 0A 
18d1c     10 F5 F0 F9 
18d20     F8 FF FC E2 
18d24     1F 30 E0 EF | 	byte	$22, $20, $fa, $0a, $10, $f5, $f0, $f9, $f8, $ff, $fc, $e2, $1f, $30, $e0, $ef
18d28     47 F0 EB 30 
18d2c     E0 D5 27 10 
18d30     DB 1D 14 EB 
18d34     17 38 F0 07 | 	byte	$47, $f0, $eb, $30, $e0, $d5, $27, $10, $db, $1d, $14, $eb, $17, $38, $f0, $07
18d38     18 EA D5 0F 
18d3c     E8 EF 20 FC 
18d40     FD 2B 20 F8 
18d44     0A 10 03 0B | 	byte	$18, $ea, $d5, $0f, $e8, $ef, $20, $fc, $fd, $2b, $20, $f8, $0a, $10, $03, $0b
18d48     00 EA F7 00 
18d4c     EA FB 23 00 
18d50     E7 37 30 D4 
18d54     FF 40 D8 EF | 	byte	$00, $ea, $f7, $00, $ea, $fb, $23, $00, $e7, $37, $30, $d4, $ff, $40, $d8, $ef
18d58     32 E0 D3 2F 
18d5c     20 D6 23 20 
18d60     E4 FF 3F 00 
18d64     F7 20 E8 DB | 	byte	$32, $e0, $d3, $2f, $20, $d6, $23, $20, $e4, $ff, $3f, $00, $f7, $20, $e8, $db
18d68     0B 10 DB 1B 
18d6c     24 E4 0F 36 
18d70     F2 07 16 F0 
18d74     FD 0C F0 EF | 	byte	$0b, $10, $db, $1b, $24, $e4, $0f, $36, $f2, $07, $16, $f0, $fd, $0c, $f0, $ef
18d78     0B FD F5 03 
18d7c     1D 0A F2 1F 
18d80     38 E0 E7 3A 
18d84     E4 EF 30 E4 | 	byte	$0b, $fd, $f5, $03, $1d, $0a, $f2, $1f, $38, $e0, $e7, $3a, $e4, $ef, $30, $e4
18d88     DB 2B 10 DB 
18d8c     27 10 E7 17 
18d90     34 E8 FD 10 
18d94     E3 F1 11 F0 | 	byte	$db, $2b, $10, $db, $27, $10, $e7, $17, $34, $e8, $fd, $10, $e3, $f1, $11, $f0
18d98     EF 29 00 F5 
18d9c     23 14 F6 05 
18da0     F2 F5 05 FD 
18da4     F3 FF 00 FD | 	byte	$ef, $29, $00, $f5, $23, $14, $f6, $05, $f2, $f5, $05, $fd, $f3, $ff, $00, $fd
18da8     FE 15 17 02 
18dac     FF 35 20 CC 
18db0     FF 30 D2 FF 
18db4     20 D0 F7 33 | 	byte	$fe, $15, $17, $02, $ff, $35, $20, $cc, $ff, $30, $d2, $ff, $20, $d0, $f7, $33
18db8     00 E7 31 02 
18dbc     F1 1F 20 F0 
18dc0     0D 0A DB E7 
18dc4     07 F8 E7 2B | 	byte	$00, $e7, $31, $02, $f1, $1f, $20, $f0, $0d, $0a, $db, $e7, $07, $f8, $e7, $2b
18dc8     20 EA FF 28 
18dcc     F4 EF 18 00 
18dd0     F9 FD 09 FE 
18dd4     05 06 09 03 | 	byte	$20, $ea, $ff, $28, $f4, $ef, $18, $00, $f9, $fd, $09, $fe, $05, $06, $09, $03
18dd8     12 12 F6 FF 
18ddc     2F 28 D0 EF 
18de0     3A E0 F3 31 
18de4     E0 E7 33 00 | 	byte	$12, $12, $f6, $ff, $2f, $28, $d0, $ef, $3a, $e0, $f3, $31, $e0, $e7, $33, $00
18de8     E3 35 04 E5 
18dec     1F 22 F4 0F 
18df0     00 D7 FF 10 
18df4     F4 FF 28 04 | 	byte	$e3, $35, $04, $e5, $1f, $22, $f4, $0f, $00, $d7, $ff, $10, $f4, $ff, $28, $04
18df8     F0 FD 17 F8 
18dfc     FB 10 F6 F9 
18e00     09 02 FF 14 
18e04     02 F7 0B 14 | 	byte	$f0, $fd, $17, $f8, $fb, $10, $f6, $f9, $09, $02, $ff, $14, $02, $f7, $0b, $14
18e08     08 F4 FD 2A 
18e0c     00 CD 27 10 
18e10     D7 2D 00 CF 
18e14     1F 20 DC 1B | 	byte	$08, $f4, $fd, $2a, $00, $cd, $27, $10, $d7, $2d, $00, $cf, $1f, $20, $dc, $1b
18e18     24 E0 17 20 
18e1c     F5 FF 20 D8 
18e20     EF 10 FA F4 
18e24     13 12 0B 03 | 	byte	$24, $e0, $17, $20, $f5, $ff, $20, $d8, $ef, $10, $fa, $f4, $13, $12, $0b, $03
18e28     F0 07 02 F7 
18e2c     0D 00 F7 12 
18e30     0A FB 0F 14 
18e34     00 FD 0B 11 | 	byte	$f0, $07, $02, $f7, $0d, $00, $f7, $12, $0a, $fb, $0f, $14, $00, $fd, $0b, $11
18e38     FA FB 2F 10 
18e3c     C3 17 30 D0 
18e40     17 28 CA FF 
18e44     32 E2 FF 32 | 	byte	$fa, $fb, $2f, $10, $c3, $17, $30, $d0, $17, $28, $ca, $ff, $32, $e2, $ff, $32
18e48     EA FD 23 09 
18e4c     05 1C E0 EB 
18e50     18 02 F6 05 
18e54     1C 00 FE F6 | 	byte	$ea, $fd, $23, $09, $05, $1c, $e0, $eb, $18, $02, $f6, $05, $1c, $00, $fe, $f6
18e58     0B 06 FF 02 
18e5c     03 0B 05 01 
18e60     0C 11 FA FF 
18e64     12 07 F8 EC | 	byte	$0b, $06, $ff, $02, $03, $0b, $05, $01, $0c, $11, $fa, $ff, $12, $07, $f8, $ec
18e68     0B 25 E0 E7 
18e6c     36 F0 FD 32 
18e70     E0 EF 2B 00 
18e74     EB 29 00 ED | 	byte	$0b, $25, $e0, $e7, $36, $f0, $fd, $32, $e0, $ef, $2b, $00, $eb, $29, $00, $ed
18e78     1D 08 03 13 
18e7c     00 DD 11 05 
18e80     F7 FB 15 08 
18e84     F1 02 09 F8 | 	byte	$1d, $08, $03, $13, $00, $dd, $11, $05, $f7, $fb, $15, $08, $f1, $02, $09, $f8
18e88     F4 16 04 FD 
18e8c     10 01 FB 0C 
18e90     05 F3 07 10 
18e94     0A 00 EE 17 | 	byte	$f4, $16, $04, $fd, $10, $01, $fb, $0c, $05, $f3, $07, $10, $0a, $00, $ee, $17
18e98     14 D2 FF 3C 
18e9c     E4 FF 30 E0 
18ea0     EF 30 00 E7 
18ea4     2B 00 EB 21 | 	byte	$14, $d2, $ff, $3c, $e4, $ff, $30, $e0, $ef, $30, $00, $e7, $2b, $00, $eb, $21
18ea8     10 F5 0F 10 
18eac     DB FE 08 FE 
18eb0     FF 19 0C ED 
18eb4     0B 19 F6 F3 | 	byte	$10, $f5, $0f, $10, $db, $fe, $08, $fe, $ff, $19, $0c, $ed, $0b, $19, $f6, $f3
18eb8     0E FC 0A 20 
18ebc     00 03 0B 06 
18ec0     FD 0B 18 FC 
18ec4     E1 0B 30 D8 | 	byte	$0e, $fc, $0a, $20, $00, $03, $0b, $06, $fd, $0b, $18, $fc, $e1, $0b, $30, $d8
18ec8     E7 44 E8 F7 
18ecc     39 E0 EF 36 
18ed0     F4 E7 31 00 
18ed4     E3 29 10 F6 | 	byte	$e7, $44, $e8, $f7, $39, $e0, $ef, $36, $f4, $e7, $31, $00, $e3, $29, $10, $f6
18ed8     17 08 D7 0F 
18edc     04 E9 13 24 
18ee0     E8 F5 23 E6 
18ee4     F3 11 01 FF | 	byte	$17, $08, $d7, $0f, $04, $e9, $13, $24, $e8, $f5, $23, $e6, $f3, $11, $01, $ff
18ee8     1A 02 FF 13 
18eec     FD 05 FF 11 
18ef0     18 E4 DF 2B 
18ef4     14 C2 FF 44 | 	byte	$1a, $02, $ff, $13, $fd, $05, $ff, $11, $18, $e4, $df, $2b, $14, $c2, $ff, $44
18ef8     E0 FF 38 D0 
18efc     EF 3B 00 D3 
18f00     33 08 DB 27 
18f04     20 FC 07 10 | 	byte	$e0, $ff, $38, $d0, $ef, $3b, $00, $d3, $33, $08, $db, $27, $20, $fc, $07, $10
18f08     D4 FF 10 E7 
18f0c     1F 10 E1 07 
18f10     20 D8 FF 04 
18f14     F7 20 10 FF | 	byte	$d4, $ff, $10, $e7, $1f, $10, $e1, $07, $20, $d8, $ff, $04, $f7, $20, $10, $ff
18f18     12 FA 07 0C 
18f1c     F6 1F 10 D2 
18f20     0F 31 D4 DF 
18f24     4A F0 E7 3C | 	byte	$12, $fa, $07, $0c, $f6, $1f, $10, $d2, $0f, $31, $d4, $df, $4a, $f0, $e7, $3c
18f28     E0 DF 3A 08 
18f2c     D1 27 00 E7 
18f30     37 20 EC 07 
18f34     02 E5 15 00 | 	byte	$e0, $df, $3a, $08, $d1, $27, $00, $e7, $37, $20, $ec, $07, $02, $e5, $15, $00
18f38     F1 1D 00 FB 
18f3c     13 F0 EB 20 
18f40     F0 0B 20 06 
18f44     0B 08 F4 05 | 	byte	$f1, $1d, $00, $fb, $13, $f0, $eb, $20, $f0, $0b, $20, $06, $0b, $08, $f4, $05
18f48     0B 05 21 00 
18f4c     D5 27 28 C8 
18f50     FF 4C E2 F7 
18f54     3A D4 DF 37 | 	byte	$0b, $05, $21, $00, $d5, $27, $28, $c8, $ff, $4c, $e2, $f7, $3a, $d4, $df, $37
18f58     00 C7 27 14 
18f5c     DC 27 2A F0 
18f60     FF 21 E0 EF 
18f64     0A 0A 20 F0 | 	byte	$00, $c7, $27, $14, $dc, $27, $2a, $f0, $ff, $21, $e0, $ef, $0a, $0a, $20, $f0
18f68     0D 10 D7 07 
18f6c     08 DB 0F 28 
18f70     F0 15 10 F8 
18f74     ED 0B 24 F0 | 	byte	$0d, $10, $d7, $07, $08, $db, $0f, $28, $f0, $15, $10, $f8, $ed, $0b, $24, $f0
18f78     EB 37 10 BB 
18f7c     0F 42 D8 1F 
18f80     28 C5 FF 38 
18f84     D0 F7 24 D5 | 	byte	$eb, $37, $10, $bb, $0f, $42, $d8, $1f, $28, $c5, $ff, $38, $d0, $f7, $24, $d5
18f88     0F 30 05 FB 
18f8c     27 F0 ED 05 
18f90     13 12 E3 1F 
18f94     10 D7 FF 10 | 	byte	$0f, $30, $05, $fb, $27, $f0, $ed, $05, $13, $12, $e3, $1f, $10, $d7, $ff, $10
18f98     D7 07 24 F2 
18f9c     FF 1A F0 ED 
18fa0     17 24 F6 F7 
18fa4     26 F0 C7 3F | 	byte	$d7, $07, $24, $f2, $ff, $1a, $f0, $ed, $17, $24, $f6, $f7, $26, $f0, $c7, $3f
18fa8     20 E3 3F 10 
18fac     D3 27 24 C0 
18fb0     FF 14 DA 1B 
18fb4     32 00 FF 20 | 	byte	$20, $e3, $3f, $10, $d3, $27, $24, $c0, $ff, $14, $da, $1b, $32, $00, $ff, $20
18fb8     D0 FF 30 F0 
18fbc     ED 37 20 D7 
18fc0     09 EA 0B 08 
18fc4     ED 09 13 FC | 	byte	$d0, $ff, $30, $f0, $ed, $37, $20, $d7, $09, $ea, $0b, $08, $ed, $09, $13, $fc
18fc8     FF FB FF 39 
18fcc     00 D3 26 10 
18fd0     C0 FF 4C E8 
18fd4     0F 38 D0 F7 | 	byte	$ff, $fb, $ff, $39, $00, $d3, $26, $10, $c0, $ff, $4c, $e8, $0f, $38, $d0, $f7
18fd8     38 F0 DF 24 
18fdc     E0 F7 2D 20 
18fe0     F2 09 F8 0B 
18fe4     F0 EF 37 04 | 	byte	$38, $f0, $df, $24, $e0, $f7, $2d, $20, $f2, $09, $f8, $0b, $f0, $ef, $37, $04
18fe8     07 14 D4 F5 
18fec     18 E9 0F 14 
18ff0     F3 1B 08 FD 
18ff4     31 E8 EB 15 | 	byte	$07, $14, $d4, $f5, $18, $e9, $0f, $14, $f3, $1b, $08, $fd, $31, $e8, $eb, $15
18ff8     C8 C7 33 00 
18ffc     F7 49 00 F3 
19000     3F 02 E3 20 
19004     E2 EB 1B 10 | 	byte	$c8, $c7, $33, $00, $f7, $49, $00, $f3, $3f, $02, $e3, $20, $e2, $eb, $1b, $10
19008     00 03 08 F2 
1900c     E2 1F 38 EB 
19010     1F 00 DF 13 
19014     00 D9 13 08 | 	byte	$00, $03, $08, $f2, $e2, $1f, $38, $eb, $1f, $00, $df, $13, $00, $d9, $13, $08
19018     F5 10 25 38 
1901c     08 F2 2B 00 
19020     A6 FB 28 C8 
19024     0F 28 D5 0F | 	byte	$f5, $10, $25, $38, $08, $f2, $2b, $00, $a6, $fb, $28, $c8, $0f, $28, $d5, $0f
19028     45 F0 EB 38 
1902c     E8 FB 27 10 
19030     F6 17 0B D8 
19034     E7 3F 10 EF | 	byte	$45, $f0, $eb, $38, $e8, $fb, $27, $10, $f6, $17, $0b, $d8, $e7, $3f, $10, $ef
19038     2E F0 E2 05 
1903c     F8 DE 0F 10 
19040     E4 0B 42 10 
19044     FD 3B 20 B4 | 	byte	$2e, $f0, $e2, $05, $f8, $de, $0f, $10, $e4, $0b, $42, $10, $fd, $3b, $20, $b4
19048     F7 28 CA 0F 
1904c     28 D0 0F 3D 
19050     E0 F7 20 E3 
19054     0B 29 00 F7 | 	byte	$f7, $28, $ca, $0f, $28, $d0, $0f, $3d, $e0, $f7, $20, $e3, $0b, $29, $00, $f7
19058     20 00 D0 0F 
1905c     40 F0 13 20 
19060     E9 FA 0C E0 
19064     EF 00 E1 F3 | 	byte	$20, $00, $d0, $0f, $40, $f0, $13, $20, $e9, $fa, $0c, $e0, $ef, $00, $e1, $f3
19068     1B 10 12 3F 
1906c     38 C8 DF 38 
19070     E0 EF 30 D4 
19074     F7 34 E8 E7 | 	byte	$1b, $10, $12, $3f, $38, $c8, $df, $38, $e0, $ef, $30, $d4, $f7, $34, $e8, $e7
19078     18 E9 0B 22 
1907c     00 FB 26 F0 
19080     D3 1D 38 F4 
19084     1B 20 F7 06 | 	byte	$18, $e9, $0b, $22, $00, $fb, $26, $f0, $d3, $1d, $38, $f4, $1b, $20, $f7, $06
19088     07 F4 D4 F5 
1908c     F0 D4 FF 38 
19090     FD 1B 41 E0 
19094     DF 37 F4 E7 | 	byte	$07, $f4, $d4, $f5, $f0, $d4, $ff, $38, $fd, $1b, $41, $e0, $df, $37, $f4, $e7
19098     3B F4 E7 39 
1909c     00 DF 15 E6 
190a0     FF 1A 00 ED 
190a4     1D 00 D1 FF | 	byte	$3b, $f4, $e7, $39, $00, $df, $15, $e6, $ff, $1a, $00, $ed, $1d, $00, $d1, $ff
190a8     3F 00 23 28 
190ac     FD 13 10 EC 
190b0     EE F2 E2 D6 
190b4     FF 12 0B 42 | 	byte	$3f, $00, $23, $28, $fd, $13, $10, $ec, $ee, $f2, $e2, $d6, $ff, $12, $0b, $42
190b8     F0 D7 33 00 
190bc     D7 37 F8 F3 
190c0     35 04 E7 12 
190c4     E9 FB 13 0C | 	byte	$f0, $d7, $33, $00, $d7, $37, $f8, $f3, $35, $04, $e7, $12, $e9, $fb, $13, $0c
190c8     F0 FF 09 F0 
190cc     CB 33 28 FD 
190d0     47 08 FF 2A 
190d4     F2 E3 F6 EA | 	byte	$f0, $ff, $09, $f0, $cb, $33, $28, $fd, $47, $08, $ff, $2a, $f2, $e3, $f6, $ea
190d8     E3 E3 07 21 
190dc     30 E0 EB 30 
190e0     E0 F7 34 F0 
190e4     17 38 04 F5 | 	byte	$e3, $e3, $07, $21, $30, $e0, $eb, $30, $e0, $f7, $34, $f0, $17, $38, $04, $f5
190e8     14 EC FF FD 
190ec     0B 04 EA F5 
190f0     04 C6 F7 3F 
190f4     00 17 49 08 | 	byte	$14, $ec, $ff, $fd, $0b, $04, $ea, $f5, $04, $c6, $f7, $3f, $00, $17, $49, $08
190f8     0B 24 F0 02 
190fc     F0 EB E6 DA 
19100     FF 3A F0 D5 
19104     1F 00 CF 32 | 	byte	$0b, $24, $f0, $02, $f0, $eb, $e6, $da, $ff, $3a, $f0, $d5, $1f, $00, $cf, $32
19108     00 F7 49 28 
1910c     F1 17 EA 0B 
19110     00 07 08 E4 
19114     E1 14 D0 DF | 	byte	$00, $f7, $49, $28, $f1, $17, $ea, $0b, $00, $07, $08, $e4, $e1, $14, $d0, $df
19118     3B 00 1F 40 
1911c     F8 2D 24 F5 
19120     06 EA F7 F2 
19124     D3 17 30 E0 | 	byte	$3b, $00, $1f, $40, $f8, $2d, $24, $f5, $06, $ea, $f7, $f2, $d3, $17, $30, $e0
19128     EB 2E D0 F7 
1912c     20 D9 17 41 
19130     00 0B 10 FB 
19134     20 F2 1B 04 | 	byte	$eb, $2e, $d0, $f7, $20, $d9, $17, $41, $00, $0b, $10, $fb, $20, $f2, $1b, $04
19138     D6 FF 04 B7 
1913c     FF 20 EB 2F 
19140     20 FF 3F 14 
19144     09 04 F7 01 | 	byte	$d6, $ff, $04, $b7, $ff, $20, $eb, $2f, $20, $ff, $3f, $14, $09, $04, $f7, $01
19148     E8 E3 25 10 
1914c     D4 F7 20 C4 
19150     F7 14 D9 1B 
19154     40 04 1B 20 | 	byte	$e8, $e3, $25, $10, $d4, $f7, $20, $c4, $f7, $14, $d9, $1b, $40, $04, $1b, $20
19158     FB 21 00 1B 
1915c     10 E4 E7 03 
19160     CA EF 14 D8 
19164     13 24 FE 33 | 	byte	$fb, $21, $00, $1b, $10, $e4, $e7, $03, $ca, $ef, $14, $d8, $13, $24, $fe, $33
19168     30 0B 18 06 
1916c     10 F0 D3 FD 
19170     20 D4 DF 20 
19174     D2 E7 24 E8 | 	byte	$30, $0b, $18, $06, $10, $f0, $d3, $fd, $20, $d4, $df, $20, $d2, $e7, $24, $e8
19178     17 36 10 1A 
1917c     12 F9 22 00 
19180     15 04 EA FB 
19184     F0 C7 0B F8 | 	byte	$17, $36, $10, $1a, $12, $f9, $22, $00, $15, $04, $ea, $fb, $f0, $c7, $0b, $f8
19188     E7 1D 17 17 
1918c     34 08 27 18 
19190     0F 04 D8 E3 
19194     19 EA D4 FF | 	byte	$e7, $1d, $17, $17, $34, $08, $27, $18, $0f, $04, $d8, $e3, $19, $ea, $d4, $ff
19198     02 D5 FF 0A 
1919c     FB 2B 18 0B 
191a0     2A 10 15 13 
191a4     FB 05 FD F2 | 	byte	$02, $d5, $ff, $0a, $fb, $2b, $18, $0b, $2a, $10, $15, $13, $fb, $05, $fd, $f2
191a8     E5 E4 FF F0 
191ac     D7 FF 0B 13 
191b0     25 25 23 2D 
191b4     11 0C FC FD | 	byte	$e5, $e4, $ff, $f0, $d7, $ff, $0b, $13, $25, $25, $23, $2d, $11, $0c, $fc, $fd
191b8     F5 F5 D8 DB 
191bc     FF F0 F0 09 
191c0     FC 06 29 15 
191c4     11 27 18 15 | 	byte	$f5, $f5, $d8, $db, $ff, $f0, $f0, $09, $fc, $06, $29, $15, $11, $27, $18, $15
191c8     16 02 FD FC 
191cc     F2 E9 E8 F5 
191d0     E8 E2 F9 09 
191d4     19 24 2C 2B | 	byte	$16, $02, $fd, $fc, $f2, $e9, $e8, $f5, $e8, $e2, $f9, $09, $19, $24, $2c, $2b
191d8     23 1A 18 F9 
191dc     FD F4 EA E4 
191e0     E9 ED EB FF 
191e4     0C 04 11 20 | 	byte	$23, $1a, $18, $f9, $fd, $f4, $ea, $e4, $e9, $ed, $eb, $ff, $0c, $04, $11, $20
191e8     10 11 19 10 
191ec     13 0D 08 01 
191f0     00 F0 DA E7 
191f4     E5 EA F9 09 | 	byte	$10, $11, $19, $10, $13, $0d, $08, $01, $00, $f0, $da, $e7, $e5, $ea, $f9, $09
191f8     0D 17 29 26 
191fc     21 21 12 F8 
19200     FE FF F8 ED 
19204     E9 EA F4 F9 | 	byte	$0d, $17, $29, $26, $21, $21, $12, $f8, $fe, $ff, $f8, $ed, $e9, $ea, $f4, $f9
19208     00 FF 0D 12 
1920c     19 20 1A 15 
19210     11 12 00 FD 
19214     F3 EC E4 E5 | 	byte	$00, $ff, $0d, $12, $19, $20, $1a, $15, $11, $12, $00, $fd, $f3, $ec, $e4, $e5
19218     F0 F0 FA 0A 
1921c     1B 1A 13 1B 
19220     10 15 14 03 
19224     FE F2 FB F9 | 	byte	$f0, $f0, $fa, $0a, $1b, $1a, $13, $1b, $10, $15, $14, $03, $fe, $f2, $fb, $f9
19228     ED EB F7 06 
1922c     10 09 FB 0D 
19230     16 15 10 0B 
19234     10 FD FB 03 | 	byte	$ed, $eb, $f7, $06, $10, $09, $fb, $0d, $16, $15, $10, $0b, $10, $fd, $fb, $03
19238     FD F0 F9 05 
1923c     F7 0D 13 06 
19240     FE 0D 1A 06 
19244     FE 02 0A 03 | 	byte	$fd, $f0, $f9, $05, $f7, $0d, $13, $06, $fe, $0d, $1a, $06, $fe, $02, $0a, $03
19248     02 FD FB 01 
1924c     02 F7 FE 12 
19250     10 00 07 0D 
19254     09 FE FB 03 | 	byte	$02, $fd, $fb, $01, $02, $f7, $fe, $12, $10, $00, $07, $0d, $09, $fe, $fb, $03
19258     03 0B 06 F7 
1925c     03 FE FA 05 
19260     13 09 03 FF 
19264     10 0C FC FF | 	byte	$03, $0b, $06, $f7, $03, $fe, $fa, $05, $13, $09, $03, $ff, $10, $0c, $fc, $ff
19268     07 08 08 FC 
1926c     F2 06 08 0B 
19270     02 01 02 03 
19274     07 09 08 FE | 	byte	$07, $08, $08, $fc, $f2, $06, $08, $0b, $02, $01, $02, $03, $07, $09, $08, $fe
19278     01 09 01 FF 
1927c     01 FF 11 00 
19280     F9 05 01 FF 
19284     03 08 04 07 | 	byte	$01, $09, $01, $ff, $01, $ff, $11, $00, $f9, $05, $01, $ff, $03, $08, $04, $07
19288     10 08 F9 01 
1928c     04 08 01 02 
19290     06 00 00 07 
19294     0C 00 FD 06 | 	byte	$10, $08, $f9, $01, $04, $08, $01, $02, $06, $00, $00, $07, $0c, $00, $fd, $06
19298     04 0E 08 FD 
1929c     FF 04 0A 0B 
192a0     03 08 03 FC 
192a4     EB FF 17 08 | 	byte	$04, $0e, $08, $fd, $ff, $04, $0a, $0b, $03, $08, $03, $fc, $eb, $ff, $17, $08
192a8     00 03 F9 09 
192ac     12 05 01 FC 
192b0     02 0A 0D FC 
192b4     FF 11 00 EB | 	byte	$00, $03, $f9, $09, $12, $05, $01, $fc, $02, $0a, $0d, $fc, $ff, $11, $00, $eb
192b8     FF 20 00 F0 
192bc     FF 0B 15 0A 
192c0     F8 F7 0F 1C 
192c4     00 F3 10 03 | 	byte	$ff, $20, $00, $f0, $ff, $0b, $15, $0a, $f8, $f7, $0f, $1c, $00, $f3, $10, $03
192c8     F4 FB 0F 10 
192cc     02 FD 0B 10 
192d0     00 FB 04 0C 
192d4     00 FF 09 08 | 	byte	$f4, $fb, $0f, $10, $02, $fd, $0b, $10, $00, $fb, $04, $0c, $00, $ff, $09, $08
192d8     0A FC ED 07 
192dc     29 F4 C5 0F 
192e0     46 00 C7 FF 
192e4     24 2B 12 E0 | 	byte	$0a, $fc, $ed, $07, $29, $f4, $c5, $0f, $46, $00, $c7, $ff, $24, $2b, $12, $e0
192e8     BE F7 4F 40 
192ec     E0 DB 09 07 
192f0     0A 03 09 08 
192f4     F1 06 17 04 | 	byte	$be, $f7, $4f, $40, $e0, $db, $09, $07, $0a, $03, $09, $08, $f1, $06, $17, $04
192f8     F8 03 13 16 
192fc     04 F7 08 FC 
19300     F1 F7 03 2F 
19304     20 EA E1 0F | 	byte	$f8, $03, $13, $16, $04, $f7, $08, $fc, $f1, $f7, $03, $2f, $20, $ea, $e1, $0f
19308     2B 10 D8 E3 
1930c     1B 30 0A E8 
19310     FD 15 FB FF 
19314     24 00 D6 F3 | 	byte	$2b, $10, $d8, $e3, $1b, $30, $0a, $e8, $fd, $15, $fb, $ff, $24, $00, $d6, $f3
19318     07 14 1A 00 
1931c     04 11 F5 F2 
19320     FF 0E 14 FC 
19324     FD 1B 04 E6 | 	byte	$07, $14, $1a, $00, $04, $11, $f5, $f2, $ff, $0e, $14, $fc, $fd, $1b, $04, $e6
19328     FD 07 1A 0A 
1932c     F7 09 0A FE 
19330     FF 04 FE 0B 
19334     1A F0 C3 0F | 	byte	$fd, $07, $1a, $0a, $f7, $09, $0a, $fe, $ff, $04, $fe, $0b, $1a, $f0, $c3, $0f
19338     40 F0 EF 21 
1933c     12 15 F8 CB 
19340     FF 1B 12 FA 
19344     F5 17 22 E8 | 	byte	$40, $f0, $ef, $21, $12, $15, $f8, $cb, $ff, $1b, $12, $fa, $f5, $17, $22, $e8
19348     DF 10 06 F8 
1934c     FA 07 25 22 
19350     03 10 F8 C5 
19354     CB EF 2D 60 | 	byte	$df, $10, $06, $f8, $fa, $07, $25, $22, $03, $10, $f8, $c5, $cb, $ef, $2d, $60
19358     30 C8 DB 37 
1935c     10 E7 FA FD 
19360     25 08 D0 ED 
19364     F1 23 28 0E | 	byte	$30, $c8, $db, $37, $10, $e7, $fa, $fd, $25, $08, $d0, $ed, $f1, $23, $28, $0e
19368     2F 30 E0 BF 
1936c     FE FD 05 0B 
19370     23 2C 19 15 
19374     E0 A4 D7 FF | 	byte	$2f, $30, $e0, $bf, $fe, $fd, $05, $0b, $23, $2c, $19, $15, $e0, $a4, $d7, $ff
19378     23 3D 24 FA 
1937c     15 50 20 D0 
19380     B5 C7 F7 00 
19384     F9 13 04 0F | 	byte	$23, $3d, $24, $fa, $15, $50, $20, $d0, $b5, $c7, $f7, $00, $f9, $13, $04, $0f
19388     2F 22 23 14 
1938c     F6 ED F7 FF 
19390     13 17 07 EC 
19394     DB E8 E0 D5 | 	byte	$2f, $22, $23, $14, $f6, $ed, $f7, $ff, $13, $17, $07, $ec, $db, $e8, $e0, $d5
19398     F7 22 39 4F 
1939c     38 26 27 34 
193a0     F0 A8 96 A5 
193a4     E7 1F 3F 3D | 	byte	$f7, $22, $39, $4f, $38, $26, $27, $34, $f0, $a8, $96, $a5, $e7, $1f, $3f, $3d
193a8     00 EB 0F 1B 
193ac     16 0D 0B 06 
193b0     01 17 2B 10 
193b4     EA D2 CD E3 | 	byte	$00, $eb, $0f, $1b, $16, $0d, $0b, $06, $01, $17, $2b, $10, $ea, $d2, $cd, $e3
193b8     E7 E5 F3 13 
193bc     26 3B 5A 60 
193c0     14 F7 E5 B4 
193c4     B0 BD E3 23 | 	byte	$e7, $e5, $f3, $13, $26, $3b, $5a, $60, $14, $f7, $e5, $b4, $b0, $bd, $e3, $23
193c8     3F 47 32 F0 
193cc     BB DF 1D 2D 
193d0     1A 0A FC 0B 
193d4     27 20 F4 E5 | 	byte	$3f, $47, $32, $f0, $bb, $df, $1d, $2d, $1a, $0a, $fc, $0b, $27, $20, $f4, $e5
193d8     E6 F4 F4 E8 
193dc     F1 07 13 27 
193e0     3F 40 24 F4 
193e4     D0 B1 B7 CF | 	byte	$e6, $f4, $f4, $e8, $f1, $07, $13, $27, $3f, $40, $24, $f4, $d0, $b1, $b7, $cf
193e8     FB 35 46 3F 
193ec     30 F8 C4 C3 
193f0     FF 3D 3C 14 
193f4     F2 EB 0D 25 | 	byte	$fb, $35, $46, $3f, $30, $f8, $c4, $c3, $ff, $3d, $3c, $14, $f2, $eb, $0d, $25
193f8     0A E8 E6 F5 
193fc     05 FC F6 02 
19400     0E 13 2B 39 
19404     38 10 D2 C5 | 	byte	$0a, $e8, $e6, $f5, $05, $fc, $f6, $02, $0e, $13, $2b, $39, $38, $10, $d2, $c5
19408     C6 CD F5 21 
1940c     3D 34 31 10 
19410     E0 C0 C7 F7 
19414     37 4A 20 F0 | 	byte	$c6, $cd, $f5, $21, $3d, $34, $31, $10, $e0, $c0, $c7, $f7, $37, $4a, $20, $f0
19418     D0 F3 15 18 
1941c     00 F0 ED FB 
19420     04 09 0A 0D 
19424     0B 22 38 3D | 	byte	$d0, $f3, $15, $18, $00, $f0, $ed, $fb, $04, $09, $0a, $0d, $0b, $22, $38, $3d
19428     20 E0 C9 C6 
1942c     C7 EF 21 3D 
19430     36 30 08 D8 
19434     C4 CA F7 3B | 	byte	$20, $e0, $c9, $c6, $c7, $ef, $21, $3d, $36, $30, $08, $d8, $c4, $ca, $f7, $3b
19438     4C 20 E4 CB 
1943c     EB 0F 19 09 
19440     F4 E9 F7 09 
19444     0B 0B 0C 0E | 	byte	$4c, $20, $e4, $cb, $eb, $0f, $19, $09, $f4, $e9, $f7, $09, $0b, $0b, $0c, $0e
19448     27 36 30 08 
1944c     E0 C2 C0 D7 
19450     0B 32 38 32 
19454     20 F0 D0 D1 | 	byte	$27, $36, $30, $08, $e0, $c2, $c0, $d7, $0b, $32, $38, $32, $20, $f0, $d0, $d1
19458     EB 1F 44 30 
1945c     00 D5 E0 FF 
19460     1A 18 06 F0 
19464     F0 F6 05 13 | 	byte	$eb, $1f, $44, $30, $00, $d5, $e0, $ff, $1a, $18, $06, $f0, $f0, $f6, $05, $13
19468     18 13 21 2E 
1946c     28 0C E8 CC 
19470     C6 CB F7 23 
19474     33 31 2A 04 | 	byte	$18, $13, $21, $2e, $28, $0c, $e8, $cc, $c6, $cb, $f7, $23, $33, $31, $2a, $04
19478     E0 D3 DD FF 
1947c     27 3A 28 00 
19480     E0 DD FE 17 
19484     19 10 F8 EC | 	byte	$e0, $d3, $dd, $ff, $27, $3a, $28, $00, $e0, $dd, $fe, $17, $19, $10, $f8, $ec
19488     EE FE 15 1B 
1948c     1D 20 24 18 
19490     00 F4 E2 D1 
19494     CD EB 17 31 | 	byte	$ee, $fe, $15, $1b, $1d, $20, $24, $18, $00, $f4, $e2, $d1, $cd, $eb, $17, $31
19498     34 30 04 E2 
1949c     D7 D9 FF 2B 
194a0     31 14 F6 E2 
194a4     ED 0B 17 14 | 	byte	$34, $30, $04, $e2, $d7, $d9, $ff, $2b, $31, $14, $f6, $e2, $ed, $0b, $17, $14
194a8     08 F2 E4 EA 
194ac     FF 17 29 28 
194b0     22 10 FE ED 
194b4     EB E2 D7 E7 | 	byte	$08, $f2, $e4, $ea, $ff, $17, $29, $28, $22, $10, $fe, $ed, $eb, $e2, $d7, $e7
194b8     07 22 2B 2D 
194bc     19 F4 D8 DB 
194c0     F9 17 2D 20 
194c4     00 F0 EF FF | 	byte	$07, $22, $2b, $2d, $19, $f4, $d8, $db, $f9, $17, $2d, $20, $00, $f0, $ef, $ff
194c8     0F 0E 0E FC 
194cc     E3 E2 F3 0E 
194d0     26 32 30 18 
194d4     F6 E2 E3 F4 | 	byte	$0f, $0e, $0e, $fc, $e3, $e2, $f3, $0e, $26, $32, $30, $18, $f6, $e2, $e3, $f4
194d8     F7 EE F5 05 
194dc     13 1D 25 18 
194e0     FA E6 EA 03 
194e4     1B 27 20 06 | 	byte	$f7, $ee, $f5, $05, $13, $1d, $25, $18, $fa, $e6, $ea, $03, $1b, $27, $20, $06
194e8     F0 EC FD 0A 
194ec     09 08 00 EB 
194f0     E3 ED FF 1F 
194f4     37 40 21 F8 | 	byte	$f0, $ec, $fd, $0a, $09, $08, $00, $eb, $e3, $ed, $ff, $1f, $37, $40, $21, $f8
194f8     E0 D5 EB FF 
194fc     00 02 05 09 
19500     1B 25 18 00 
19504     E7 FB 0E 15 | 	byte	$e0, $d5, $eb, $ff, $00, $02, $05, $09, $1b, $25, $18, $00, $e7, $fb, $0e, $15
19508     0D 00 FA F6 
1950c     FF 0D 10 03 
19510     04 F4 DC E2 
19514     F3 11 35 3F | 	byte	$0d, $00, $fa, $f6, $ff, $0d, $10, $03, $04, $f4, $dc, $e2, $f3, $11, $35, $3f
19518     34 0A E4 D0 
1951c     DE FB 09 08 
19520     02 FF 0B 21 
19524     20 0A F7 FF | 	byte	$34, $0a, $e4, $d0, $de, $fb, $09, $08, $02, $ff, $0b, $21, $20, $0a, $f7, $ff
19528     12 12 04 FA 
1952c     FB FB 03 0B 
19530     0D 02 03 F8 
19534     E0 DE ED 07 | 	byte	$12, $12, $04, $fa, $fb, $fb, $03, $0b, $0d, $02, $03, $f8, $e0, $de, $ed, $07
19538     2C 3F 3F 20 
1953c     F1 D4 D4 DF 
19540     FF 15 10 02 
19544     FD 07 19 18 | 	byte	$2c, $3f, $3f, $20, $f1, $d4, $d4, $df, $ff, $15, $10, $02, $fd, $07, $19, $18
19548     13 09 03 0E 
1954c     10 06 F7 F9 
19550     F6 F7 03 0C 
19554     06 00 00 F0 | 	byte	$13, $09, $03, $0e, $10, $06, $f7, $f9, $f6, $f7, $03, $0c, $06, $00, $00, $f0
19558     E1 EC FD 17 
1955c     3A 43 30 F8 
19560     DA D4 E1 FB 
19564     11 10 04 FD | 	byte	$e1, $ec, $fd, $17, $3a, $43, $30, $f8, $da, $d4, $e1, $fb, $11, $10, $04, $fd
19568     07 1A 1C 12 
1956c     04 09 0E 0C 
19570     FB F1 F0 F1 
19574     FF 0A 10 08 | 	byte	$07, $1a, $1c, $12, $04, $09, $0e, $0c, $fb, $f1, $f0, $f1, $ff, $0a, $10, $08
19578     05 00 EA E2 
1957c     EE FD 1B 39 
19580     40 22 F4 DB 
19584     D3 E0 FF 17 | 	byte	$05, $00, $ea, $e2, $ee, $fd, $1b, $39, $40, $22, $f4, $db, $d3, $e0, $ff, $17
19588     13 08 FF 09 
1958c     1B 24 16 02 
19590     FF 03 07 FC 
19594     F0 EE F4 FE | 	byte	$13, $08, $ff, $09, $1b, $24, $16, $02, $ff, $03, $07, $fc, $f0, $ee, $f4, $fe
19598     0B 17 10 0A 
1959c     02 EA DC E9 
195a0     FB 13 37 4A 
195a4     30 00 D6 CD | 	byte	$0b, $17, $10, $0a, $02, $ea, $dc, $e9, $fb, $13, $37, $4a, $30, $00, $d6, $cd
195a8     DB EF 0D 1B 
195ac     10 00 00 0E 
195b0     23 2B 20 00 
195b4     FB 08 03 F0 | 	byte	$db, $ef, $0d, $1b, $10, $00, $00, $0e, $23, $2b, $20, $00, $fb, $08, $03, $f0
195b8     EE F0 F1 FE 
195bc     0D 19 14 10 
195c0     09 EA DB E9 
195c4     F9 17 3E 4A | 	byte	$ee, $f0, $f1, $fe, $0d, $19, $14, $10, $09, $ea, $db, $e9, $f9, $17, $3e, $4a
195c8     30 F4 D0 D1 
195cc     E7 03 12 0B 
195d0     06 FF FF 1C 
195d4     30 24 09 FB | 	byte	$30, $f4, $d0, $d1, $e7, $03, $12, $0b, $06, $ff, $ff, $1c, $30, $24, $09, $fb
195d8     FE FA FB F4 
195dc     E7 E6 ED 07 
195e0     23 24 14 10 
195e4     F0 D3 DA ED | 	byte	$fe, $fa, $fb, $f4, $e7, $e6, $ed, $07, $23, $24, $14, $10, $f0, $d3, $da, $ed
195e8     0B 37 46 32 
195ec     10 E0 C7 D7 
195f0     FA 11 16 03 
195f4     FD FF 09 22 | 	byte	$0b, $37, $46, $32, $10, $e0, $c7, $d7, $fa, $11, $16, $03, $fd, $ff, $09, $22
195f8     33 26 02 E6 
195fc     E2 F7 FF 10 
19600     FA E6 E3 F3 
19604     0F 21 1C 20 | 	byte	$33, $26, $02, $e6, $e2, $f7, $ff, $10, $fa, $e6, $e3, $f3, $0f, $21, $1c, $20
19608     04 E0 DA E8 
1960c     F7 22 45 3D 
19610     14 E8 D9 D1 
19614     E6 FF 17 1B | 	byte	$04, $e0, $da, $e8, $f7, $22, $45, $3d, $14, $e8, $d9, $d1, $e6, $ff, $17, $1b
19618     0D 02 05 0E 
1961c     1B 32 35 1A 
19620     E8 C0 C7 E7 
19624     17 20 10 FA | 	byte	$0d, $02, $05, $0e, $1b, $32, $35, $1a, $e8, $c0, $c7, $e7, $17, $20, $10, $fa
19628     F3 FF 19 20 
1962c     20 14 E8 D2 
19630     D7 EF 1F 43 
19634     42 20 E8 D2 | 	byte	$f3, $ff, $19, $20, $20, $14, $e8, $d2, $d7, $ef, $1f, $43, $42, $20, $e8, $d2
19638     F1 F9 F7 0D 
1963c     14 08 FC FE 
19640     0E 2B 3E 36 
19644     0A D6 B0 B2 | 	byte	$f1, $f9, $f7, $0d, $14, $08, $fc, $fe, $0e, $2b, $3e, $36, $0a, $d6, $b0, $b2
19648     EB 23 41 24 
1964c     F4 D7 EF 19 
19650     29 2D 14 E8 
19654     D2 D7 EF 1B | 	byte	$eb, $23, $41, $24, $f4, $d7, $ef, $19, $29, $2d, $14, $e8, $d2, $d7, $ef, $1b
19658     3D 32 14 F0 
1965c     DB ED 07 07 
19660     F5 EE FF 0B 
19664     1D 2E 2A 20 | 	byte	$3d, $32, $14, $f0, $db, $ed, $07, $07, $f5, $ee, $ff, $0b, $1d, $2e, $2a, $20
19668     18 F8 D0 B8 
1966c     BF EB 1B 36 
19670     41 20 E4 C5 
19674     E3 13 33 34 | 	byte	$18, $f8, $d0, $b8, $bf, $eb, $1b, $36, $41, $20, $e4, $c5, $e3, $13, $33, $34
19678     18 F4 E1 E4 
1967c     ED 0B 29 28 
19680     13 01 EB D6 
19684     F7 15 02 F0 | 	byte	$18, $f4, $e1, $e4, $ed, $0b, $29, $28, $13, $01, $eb, $d6, $f7, $15, $02, $f0
19688     FF 23 3F 31 
1968c     0A F3 F7 FE 
19690     E0 D0 D2 F3 
19694     1F 3F 44 10 | 	byte	$ff, $23, $3f, $31, $0a, $f3, $f7, $fe, $e0, $d0, $d2, $f3, $1f, $3f, $44, $10
19698     D4 C7 F7 1F 
1969c     2A 20 18 FC 
196a0     E3 E1 F5 13 
196a4     21 20 20 08 | 	byte	$d4, $c7, $f7, $1f, $2a, $20, $18, $fc, $e3, $e1, $f5, $13, $21, $20, $20, $08
196a8     E1 E7 FA F0 
196ac     E0 F3 3B 56 
196b0     34 F8 E5 FF 
196b4     16 F8 D4 C6 | 	byte	$e1, $e7, $fa, $f0, $e0, $f3, $3b, $56, $34, $f8, $e5, $ff, $16, $f8, $d4, $c6
196b8     EF 21 3D 38 
196bc     04 D6 D6 FF 
196c0     1D 24 20 0C 
196c4     FA E5 E3 ED | 	byte	$ef, $21, $3d, $38, $04, $d6, $d6, $ff, $1d, $24, $20, $0c, $fa, $e5, $e3, $ed
196c8     05 27 2C 18 
196cc     0A F0 DD E9 
196d0     E1 CF FF 55 
196d4     58 18 E0 F3 | 	byte	$05, $27, $2c, $18, $0a, $f0, $dd, $e9, $e1, $cf, $ff, $55, $58, $18, $e0, $f3
196d8     15 20 F8 D6 
196dc     CB E7 11 28 
196e0     38 12 E9 D9 
196e4     EC 0D 23 24 | 	byte	$15, $20, $f8, $d6, $cb, $e7, $11, $28, $38, $12, $e9, $d9, $ec, $0d, $23, $24
196e8     14 06 F0 E6 
196ec     ED FD 13 29 
196f0     31 10 E6 F4 
196f4     EC D6 CA FF | 	byte	$14, $06, $f0, $e6, $ed, $fd, $13, $29, $31, $10, $e6, $f4, $ec, $d6, $ca, $ff
196f8     5B 48 00 F2 
196fc     15 24 06 E0 
19700     DB E0 EB 11 
19704     37 38 02 D5 | 	byte	$5b, $48, $00, $f2, $15, $24, $06, $e0, $db, $e0, $eb, $11, $37, $38, $02, $d5
19708     D1 F3 17 25 
1970c     27 18 F6 E2 
19710     E3 EF 0F 37 
19714     30 10 08 E9 | 	byte	$d1, $f3, $17, $25, $27, $18, $f6, $e2, $e3, $ef, $0f, $37, $30, $10, $08, $e9
19718     E4 DA BB FF 
1971c     4D 3C 10 F7 
19720     13 26 11 E8 
19724     D0 D7 F7 17 | 	byte	$e4, $da, $bb, $ff, $4d, $3c, $10, $f7, $13, $26, $11, $e8, $d0, $d7, $f7, $17
19728     35 35 00 D6 
1972c     D7 FD 1D 25 
19730     20 0A F6 E5 
19734     E6 ED 05 27 | 	byte	$35, $35, $00, $d6, $d7, $fd, $1d, $25, $20, $0a, $f6, $e5, $e6, $ed, $05, $27
19738     37 32 08 DA 
1973c     F3 F0 C4 CD 
19740     27 52 20 F3 
19744     0B 32 18 F0 | 	byte	$37, $32, $08, $da, $f3, $f0, $c4, $cd, $27, $52, $20, $f3, $0b, $32, $18, $f0
19748     DC E5 E5 FF 
1974c     17 31 28 F8 
19750     D0 D7 FF 25 
19754     28 12 09 FC | 	byte	$dc, $e5, $e5, $ff, $17, $31, $28, $f8, $d0, $d7, $ff, $25, $28, $12, $09, $fc
19758     F0 EE FF 1A 
1975c     2B 3F 10 DA 
19760     FB F8 C4 BF 
19764     27 48 0A F6 | 	byte	$f0, $ee, $ff, $1a, $2b, $3f, $10, $da, $fb, $f8, $c4, $bf, $27, $48, $0a, $f6
19768     1F 3C 10 EA 
1976c     E5 E6 D9 FF 
19770     2B 2C 00 FA 
19774     E4 D7 FF 25 | 	byte	$1f, $3c, $10, $ea, $e5, $e6, $d9, $ff, $2b, $2c, $00, $fa, $e4, $d7, $ff, $25
19778     20 0B 11 00 
1977c     F0 E5 FF 26 
19780     30 30 20 D6 
19784     DB F1 C5 E7 | 	byte	$20, $0b, $11, $00, $f0, $e5, $ff, $26, $30, $30, $20, $d6, $db, $f1, $c5, $e7
19788     3F 34 F0 F3 
1978c     2B 30 06 F9 
19790     E9 D4 D7 17 
19794     32 2A 00 DC | 	byte	$3f, $34, $f0, $f3, $2b, $30, $06, $f9, $e9, $d4, $d7, $17, $32, $2a, $00, $dc
19798     F3 02 FA 03 
1979c     10 0A 0A 03 
197a0     F7 F4 F7 0D 
197a4     26 30 31 18 | 	byte	$f3, $02, $fa, $03, $10, $0a, $0a, $03, $f7, $f4, $f7, $0d, $26, $30, $31, $18
197a8     E0 D1 C2 C7 
197ac     17 50 20 EA 
197b0     0D 34 08 06 
197b4     01 E4 CD FF | 	byte	$e0, $d1, $c2, $c7, $17, $50, $20, $ea, $0d, $34, $08, $06, $01, $e4, $cd, $ff
197b8     2B 13 1B 00 
197bc     DB E7 1B 12 
197c0     F2 F7 1B 1A 
197c4     FC F1 04 09 | 	byte	$2b, $13, $1b, $00, $db, $e7, $1b, $12, $f2, $f7, $1b, $1a, $fc, $f1, $04, $09
197c8     0F 2B 30 20 
197cc     06 D8 A4 B5 
197d0     27 40 FC 05 
197d4     3F 24 E7 FF | 	byte	$0f, $2b, $30, $20, $06, $d8, $a4, $b5, $27, $40, $fc, $05, $3f, $24, $e7, $ff
197d8     F9 D8 DB 23 
197dc     28 04 02 0A 
197e0     E8 E0 0D 34 
197e4     00 E7 17 19 | 	byte	$f9, $d8, $db, $23, $28, $04, $02, $0a, $e8, $e0, $0d, $34, $00, $e7, $17, $19
197e8     F8 F3 09 0B 
197ec     0E 23 20 0E 
197f0     06 E0 A2 B7 
197f4     2F 28 00 1E | 	byte	$f8, $f3, $09, $0b, $0e, $23, $20, $0e, $06, $e0, $a2, $b7, $2f, $28, $00, $1e
197f8     4A 24 EA ED 
197fc     EA D8 E3 27 
19800     2A 02 00 03 
19804     00 E0 E2 0F | 	byte	$4a, $24, $ea, $ed, $ea, $d8, $e3, $27, $2a, $02, $00, $03, $00, $e0, $e2, $0f
19808     3C 12 E9 17 
1980c     20 00 EF 09 
19810     0A 0A 10 10 
19814     FC 02 F8 D0 | 	byte	$3c, $12, $e9, $17, $20, $00, $ef, $09, $0a, $0a, $10, $10, $fc, $02, $f8, $d0
19818     AF 13 26 10 
1981c     2B 4B 38 F4 
19820     E1 D8 CD E7 
19824     17 23 20 28 | 	byte	$af, $13, $26, $10, $2b, $4b, $38, $f4, $e1, $d8, $cd, $e7, $17, $23, $20, $28
19828     0A E6 D4 DB 
1982c     0D 3F 22 FE 
19830     1B 14 EA EC 
19834     FF 0E 0A 08 | 	byte	$0a, $e6, $d4, $db, $0d, $3f, $22, $fe, $1b, $14, $ea, $ec, $ff, $0e, $0a, $08
19838     07 09 16 E0 
1983c     B7 FB 09 F9 
19840     1F 4F 40 0D 
19844     08 E0 C0 CF | 	byte	$07, $09, $16, $e0, $b7, $fb, $09, $f9, $1f, $4f, $40, $0d, $08, $e0, $c0, $cf
19848     FF 09 21 39 
1984c     22 F8 D2 D5 
19850     FF 2C 00 F7 
19854     19 15 F4 FB | 	byte	$ff, $09, $21, $39, $22, $f8, $d2, $d5, $ff, $2c, $00, $f7, $19, $15, $f4, $fb
19858     18 12 10 00 
1985c     F9 07 10 D0 
19860     CB 03 06 F0 
19864     13 47 44 15 | 	byte	$18, $12, $10, $00, $f9, $07, $10, $d0, $cb, $03, $06, $f0, $13, $47, $44, $15
19868     10 EA C4 CB 
1986c     F7 0B 13 2E 
19870     30 10 E4 CD 
19874     EF 23 18 F0 | 	byte	$10, $ea, $c4, $cb, $f7, $0b, $13, $2e, $30, $10, $e4, $cd, $ef, $23, $18, $f0
19878     0E 1B 04 FF 
1987c     17 13 12 06 
19880     FC F7 08 E0 
19884     C3 FF 06 EE | 	byte	$0e, $1b, $04, $ff, $17, $13, $12, $06, $fc, $f7, $08, $e0, $c3, $ff, $06, $ee
19888     13 4F 40 19 
1988c     17 EA C8 CB 
19890     FB 05 15 33 
19894     2D 00 D3 E7 | 	byte	$13, $4f, $40, $19, $17, $ea, $c8, $cb, $fb, $05, $15, $33, $2d, $00, $d3, $e7
19898     11 08 ED 03 
1989c     16 04 FD 1A 
198a0     20 10 0A 10 
198a4     00 01 E0 BF | 	byte	$11, $08, $ed, $03, $16, $04, $fd, $1a, $20, $10, $0a, $10, $00, $01, $e0, $bf
198a8     F9 FE E4 FF 
198ac     3F 48 28 20 
198b0     06 E0 CD E7 
198b4     FD 07 29 2B | 	byte	$f9, $fe, $e4, $ff, $3f, $48, $28, $20, $06, $e0, $cd, $e7, $fd, $07, $29, $2b
198b8     08 E5 F3 0D 
198bc     00 E6 FD 0E 
198c0     00 FF 1C 26 
198c4     12 0D 15 0C | 	byte	$08, $e5, $f3, $0d, $00, $e6, $fd, $0e, $00, $ff, $1c, $26, $12, $0d, $15, $0c
198c8     10 E0 B3 F3 
198cc     FC E0 E5 27 
198d0     48 2C 22 20 
198d4     FC E2 E1 FB | 	byte	$10, $e0, $b3, $f3, $fc, $e0, $e5, $27, $48, $2c, $22, $20, $fc, $e2, $e1, $fb
198d8     FD 19 21 16 
198dc     F4 ED 0C FA 
198e0     E3 F7 04 F4 
198e4     F1 1D 32 20 | 	byte	$fd, $19, $21, $16, $f4, $ed, $0c, $fa, $e3, $f7, $04, $f4, $f1, $1d, $32, $20
198e8     12 20 11 0E 
198ec     F8 B1 DF 02 
198f0     E8 D0 13 51 
198f4     29 1B 22 06 | 	byte	$12, $20, $11, $0e, $f8, $b1, $df, $02, $e8, $d0, $13, $51, $29, $1b, $22, $06
198f8     EC EB FA F2 
198fc     0F 24 04 F2 
19900     0F 14 F0 E9 
19904     F7 02 F1 ED | 	byte	$ec, $eb, $fa, $f2, $0f, $24, $04, $f2, $0f, $14, $f0, $e9, $f7, $02, $f1, $ed
19908     13 27 18 25 
1990c     2A 25 04 C6 
19910     DB FD E4 C1 
19914     EF 3F 32 1A | 	byte	$13, $27, $18, $25, $2a, $25, $04, $c6, $db, $fd, $e4, $c1, $ef, $3f, $32, $1a
19918     1C 19 08 F0 
1991c     F5 F5 0B 14 
19920     FC FD 23 10 
19924     EA ED FD 00 | 	byte	$1c, $19, $08, $f0, $f5, $f5, $0b, $14, $fc, $fd, $23, $10, $ea, $ed, $fd, $00
19928     EA E9 FF 17 
1992c     17 1E 2D 35 
19930     24 D8 C3 FB 
19934     00 D0 C5 FF | 	byte	$ea, $e9, $ff, $17, $17, $1e, $2d, $35, $24, $d8, $c3, $fb, $00, $d0, $c5, $ff
19938     43 20 12 17 
1993c     20 19 F6 E8 
19940     F7 19 0A EA 
19944     FF 2F 04 E6 | 	byte	$43, $20, $12, $17, $20, $19, $f6, $e8, $f7, $19, $0a, $ea, $ff, $2f, $04, $e6
19948     EE FF 08 F0 
1994c     E7 F7 13 13 
19950     27 3E 34 04 
19954     D2 D5 07 00 | 	byte	$ee, $ff, $08, $f0, $e7, $f7, $13, $13, $27, $3e, $34, $04, $d2, $d5, $07, $00
19958     C8 CF 27 36 
1995c     0C 0B 23 36 
19960     10 E3 E5 0D 
19964     04 E0 FB 37 | 	byte	$c8, $cf, $27, $36, $0c, $0b, $23, $36, $10, $e3, $e5, $0d, $04, $e0, $fb, $37
19968     08 E7 FB 0D 
1996c     0C F4 E7 EE 
19970     F3 FF 27 3D 
19974     31 10 E0 DA | 	byte	$08, $e7, $fb, $0d, $0c, $f4, $e7, $ee, $f3, $ff, $27, $3d, $31, $10, $e0, $da
19978     FB 15 F0 BA 
1997c     F7 31 18 FF 
19980     15 3D 30 FA 
19984     DB FD 06 E0 | 	byte	$fb, $15, $f0, $ba, $f7, $31, $18, $ff, $15, $3d, $30, $fa, $db, $fd, $06, $e0
19988     E7 27 24 F0 
1998c     F5 0A 1B 02 
19990     E8 F0 F9 F6 
19994     FF 23 3F 24 | 	byte	$e7, $27, $24, $f0, $f5, $0a, $1b, $02, $e8, $f0, $f9, $f6, $ff, $23, $3f, $24
19998     00 EB EA F5 
1999c     0A 06 E0 D1 
199a0     FD 22 1A 14 
199a4     20 2B 26 08 | 	byte	$00, $eb, $ea, $f5, $0a, $06, $e0, $d1, $fd, $22, $1a, $14, $20, $2b, $26, $08
199a8     EB F0 E2 E3 
199ac     09 15 10 09 
199b0     0B 02 FF 01 
199b4     FE F9 FD 03 | 	byte	$eb, $f0, $e2, $e3, $09, $15, $10, $09, $0b, $02, $ff, $01, $fe, $f9, $fd, $03
199b8     0F 35 28 00 
199bc     F2 F7 E8 E3 
199c0     F7 07 00 EA 
199c4     EB 1D 45 38 | 	byte	$0f, $35, $28, $00, $f2, $f7, $e8, $e3, $f7, $07, $00, $ea, $eb, $1d, $45, $38
199c8     08 04 15 0C 
199cc     E1 CB E3 05 
199d0     04 F6 07 22 
199d4     24 0B FC 0D | 	byte	$08, $04, $15, $0c, $e1, $cb, $e3, $05, $04, $f6, $07, $22, $24, $0b, $fc, $0d
199d8     12 FC EB FA 
199dc     1B 20 0A F5 
199e0     F9 F1 F5 F9 
199e4     FB 0B 0C 04 | 	byte	$12, $fc, $eb, $fa, $1b, $20, $0a, $f5, $f9, $f1, $f5, $f9, $fb, $0b, $0c, $04
199e8     01 FF 21 3F 
199ec     30 00 E0 E3 
199f0     ED EA E5 F1 
199f4     0B 1A 11 0E | 	byte	$01, $ff, $21, $3f, $30, $00, $e0, $e3, $ed, $ea, $e5, $f1, $0b, $1a, $11, $0e
199f8     12 1B 1B 08 
199fc     FD FC F9 F6 
19a00     F3 03 13 12 
19a04     F8 F2 FA FA | 	byte	$12, $1b, $1b, $08, $fd, $fc, $f9, $f6, $f3, $03, $13, $12, $f8, $f2, $fa, $fa
19a08     F7 FF 19 18 
19a0c     02 FE 10 1C 
19a10     12 FE FD 0A 
19a14     02 E1 D3 F3 | 	byte	$f7, $ff, $19, $18, $02, $fe, $10, $1c, $12, $fe, $fd, $0a, $02, $e1, $d3, $f3
19a18     0D 17 1A 08 
19a1c     FF 10 13 10 
19a20     07 05 02 FE 
19a24     FA F9 F2 F6 | 	byte	$0d, $17, $1a, $08, $ff, $10, $13, $10, $07, $05, $02, $fe, $fa, $f9, $f2, $f6
19a28     09 14 10 01 
19a2c     04 01 07 0C 
19a30     07 0F 0C 00 
19a34     FA F4 FF 12 | 	byte	$09, $14, $10, $01, $04, $01, $07, $0c, $07, $0f, $0c, $00, $fa, $f4, $ff, $12
19a38     0A 04 F7 F1 
19a3c     FD 06 07 06 
19a40     FE 07 1B 19 
19a44     0A FB FF 04 | 	byte	$0a, $04, $f7, $f1, $fd, $06, $07, $06, $fe, $07, $1b, $19, $0a, $fb, $ff, $04
19a48     00 FC FB 01 
19a4c     FA FA 07 0B 
19a50     08 0D 0E 06 
19a54     08 00 F6 FF | 	byte	$00, $fc, $fb, $01, $fa, $fa, $07, $0b, $08, $0d, $0e, $06, $08, $00, $f6, $ff
19a58     0B 0D 00 FA 
19a5c     FF 02 03 FF 
19a60     03 0F 0B FC 
19a64     FB 02 FF FE | 	byte	$0b, $0d, $00, $fa, $ff, $02, $03, $ff, $03, $0f, $0b, $fc, $fb, $02, $ff, $fe
19a68     0B 12 14 0A 
19a6c     FE FF 02 0A 
19a70     08 FC F4 F2 
19a74     FF 11 10 05 | 	byte	$0b, $12, $14, $0a, $fe, $ff, $02, $0a, $08, $fc, $f4, $f2, $ff, $11, $10, $05
19a78     04 06 0B 07 
19a7c     FD 04 05 02 
19a80     05 05 FB FB 
19a84     06 0A 0A 07 | 	byte	$04, $06, $0b, $07, $fd, $04, $05, $02, $05, $05, $fb, $fb, $06, $0a, $0a, $07
19a88     00 05 05 08 
19a8c     0A 08 05 02 
19a90     FC 03 06 FE 
19a94     05 09 09 06 | 	byte	$00, $05, $05, $08, $0a, $08, $05, $02, $fc, $03, $06, $fe, $05, $09, $09, $06
19a98     FF F7 FD 0B 
19a9c     05 00 FF 0A 
19aa0     0A 00 06 08 
19aa4     08 02 00 00 | 	byte	$ff, $f7, $fd, $0b, $05, $00, $ff, $0a, $0a, $00, $06, $08, $08, $02, $00, $00
19aa8     FF 0D 07 FC 
19aac     FD 00 06 0C 
19ab0     0C 02 FB 02 
19ab4     0A 0A 00 FE | 	byte	$ff, $0d, $07, $fc, $fd, $00, $06, $0c, $0c, $02, $fb, $02, $0a, $0a, $00, $fe
19ab8     00 FE 06 09 
19abc     FF 06 FC FF 
19ac0     0A 04 FF 02 
19ac4     07 02 FD 07 | 	byte	$00, $fe, $06, $09, $ff, $06, $fc, $ff, $0a, $04, $ff, $02, $07, $02, $fd, $07
19ac8     05 FF 03 03 
19acc     01 05 09 00 
19ad0     07 08 FE 03 
19ad4     08 06 FF 03 | 	byte	$05, $ff, $03, $03, $01, $05, $09, $00, $07, $08, $fe, $03, $08, $06, $ff, $03
19ad8     0A 06 01 06 
19adc     03 03 FD 05 
19ae0     0C 08 03 07 
19ae4     03 02 FF 02 | 	byte	$0a, $06, $01, $06, $03, $03, $fd, $05, $0c, $08, $03, $07, $03, $02, $ff, $02
19ae8     FE 0A 13 0A 
19aec     03 08 00 FF 
19af0     05 0B 04 FA 
19af4     05 03 FF 07 | 	byte	$fe, $0a, $13, $0a, $03, $08, $00, $ff, $05, $0b, $04, $fa, $05, $03, $ff, $07
19af8     0B 08 FA FF 
19afc     09 01 FB 05 
19b00     12 00 FF 07 
19b04     00 07 06 FF | 	byte	$0b, $08, $fa, $ff, $09, $01, $fb, $05, $12, $00, $ff, $07, $00, $07, $06, $ff
19b08     07 0B 04 01 
19b0c     F8 03 08 03 
19b10     09 08 FE FF 
19b14     07 F6 FB 16 | 	byte	$07, $0b, $04, $01, $f8, $03, $08, $03, $09, $08, $fe, $ff, $07, $f6, $fb, $16
19b18     08 FB 04 01 
19b1c     0D 02 FB 01 
19b20     02 01 03 06 
19b24     03 05 02 01 | 	byte	$08, $fb, $04, $01, $0d, $02, $fb, $01, $02, $01, $03, $06, $03, $05, $02, $01
19b28     06 07 FC FD 
19b2c     06 0B 06 FA 
19b30     03 04 F9 07 
19b34     1B 00 E7 07 | 	byte	$06, $07, $fc, $fd, $06, $0b, $06, $fa, $03, $04, $f9, $07, $1b, $00, $e7, $07
19b38     20 10 FA F6 
19b3c     FF 0E 10 08 
19b40     00 F7 FF 04 
19b44     03 12 0D 05 | 	byte	$20, $10, $fa, $f6, $ff, $0e, $10, $08, $00, $f7, $ff, $04, $03, $12, $0d, $05
19b48     F7 FB 03 10 
19b4c     02 03 10 0A 
19b50     02 FC FE 0B 
19b54     0C 03 0C 04 | 	byte	$f7, $fb, $03, $10, $02, $03, $10, $0a, $02, $fc, $fe, $0b, $0c, $03, $0c, $04
19b58     FA 01 08 FE 
19b5c     FE 02 FD 02 
19b60     12 04 02 10 
19b64     08 FA FF 00 | 	byte	$fa, $01, $08, $fe, $fe, $02, $fd, $02, $12, $04, $02, $10, $08, $fa, $ff, $00
19b68     04 05 0A 08 
19b6c     FB 06 0A 0B 
19b70     05 00 FF 0B 
19b74     00 F7 02 05 | 	byte	$04, $05, $0a, $08, $fb, $06, $0a, $0b, $05, $00, $ff, $0b, $00, $f7, $02, $05
19b78     0E 0E 02 F7 
19b7c     01 0C 02 FB 
19b80     05 04 01 FF 
19b84     08 04 FD 01 | 	byte	$0e, $0e, $02, $f7, $01, $0c, $02, $fb, $05, $04, $01, $ff, $08, $04, $fd, $01
19b88     09 0B 04 F9 
19b8c     FA 13 12 04 
19b90     00 FA F8 F6 
19b94     0B 10 0A 1B | 	byte	$09, $0b, $04, $f9, $fa, $13, $12, $04, $00, $fa, $f8, $f6, $0b, $10, $0a, $1b
19b98     12 FB F3 EC 
19b9c     F6 05 1D 17 
19ba0     12 00 EC F5 
19ba4     07 10 16 08 | 	byte	$12, $fb, $f3, $ec, $f6, $05, $1d, $17, $12, $00, $ec, $f5, $07, $10, $16, $08
19ba8     F2 EE F7 13 
19bac     20 20 18 00 
19bb0     EB E0 DE 05 
19bb4     21 2E 20 10 | 	byte	$f2, $ee, $f7, $13, $20, $20, $18, $00, $eb, $e0, $de, $05, $21, $2e, $20, $10
19bb8     00 E9 DA D5 
19bbc     FF 35 3C 20 
19bc0     F0 DB F7 07 
19bc4     09 09 FC F1 | 	byte	$00, $e9, $da, $d5, $ff, $35, $3c, $20, $f0, $db, $f7, $07, $09, $09, $fc, $f1
19bc8     FE 0D 17 27 
19bcc     08 E8 E6 FE 
19bd0     18 25 15 0A 
19bd4     F3 D8 C9 E3 | 	byte	$fe, $0d, $17, $27, $08, $e8, $e6, $fe, $18, $25, $15, $0a, $f3, $d8, $c9, $e3
19bd8     13 3A 3F 34 
19bdc     14 F2 E5 E0 
19be0     D0 E3 17 24 
19be4     0C 13 08 0A | 	byte	$13, $3a, $3f, $34, $14, $f2, $e5, $e0, $d0, $e3, $17, $24, $0c, $13, $08, $0a
19be8     0D 0A 05 F9 
19bec     F0 F5 0B 0B 
19bf0     05 00 F0 E8 
19bf4     E5 FF 29 39 | 	byte	$0d, $0a, $05, $f9, $f0, $f5, $0b, $0b, $05, $00, $f0, $e8, $e5, $ff, $29, $39
19bf8     30 08 E8 D6 
19bfc     D5 EF 1D 3F 
19c00     28 05 F5 E9 
19c04     F1 F4 EB FF | 	byte	$30, $08, $e8, $d6, $d5, $ef, $1d, $3f, $28, $05, $f5, $e9, $f1, $f4, $eb, $ff
19c08     2E 30 18 15 
19c0c     0A F8 FB FA 
19c10     FE F0 D6 DD 
19c14     07 2E 3C 20 | 	byte	$2e, $30, $18, $15, $0a, $f8, $fb, $fa, $fe, $f0, $d6, $dd, $07, $2e, $3c, $20
19c18     F3 E3 E2 07 
19c1c     2F 3F 34 00 
19c20     C9 B7 D5 13 
19c24     3F 3C 14 F8 | 	byte	$f3, $e3, $e2, $07, $2f, $3f, $34, $00, $c9, $b7, $d5, $13, $3f, $3c, $14, $f8
19c28     E2 E5 FB FF 
19c2c     F6 13 34 20 
19c30     14 14 02 F5 
19c34     F5 F0 D4 C3 | 	byte	$e2, $e5, $fb, $ff, $f6, $13, $34, $20, $14, $14, $02, $f5, $f5, $f0, $d4, $c3
19c38     D3 07 3F 5D 
19c3c     44 10 D8 C9 
19c40     F6 1B 34 30 
19c44     F8 D0 BD DF | 	byte	$d3, $07, $3f, $5d, $44, $10, $d8, $c9, $f6, $1b, $34, $30, $f8, $d0, $bd, $df
19c48     17 3F 2C 04 
19c4c     E8 EB FB 0C 
19c50     09 F6 ED 0B 
19c54     1D 25 30 20 | 	byte	$17, $3f, $2c, $04, $e8, $eb, $fb, $0c, $09, $f6, $ed, $0b, $1d, $25, $30, $20
19c58     F8 E9 F6 E8 
19c5c     D0 C0 CB 0B 
19c60     3F 63 50 08 
19c64     C8 BB F7 37 | 	byte	$f8, $e9, $f6, $e8, $d0, $c0, $cb, $0b, $3f, $63, $50, $08, $c8, $bb, $f7, $37
19c68     48 14 E0 C5 
19c6c     D7 07 3A 21 
19c70     FA ED F5 02 
19c74     10 0A FA F1 | 	byte	$48, $14, $e0, $c5, $d7, $07, $3a, $21, $fa, $ed, $f5, $02, $10, $0a, $fa, $f1
19c78     F8 F5 1B 49 
19c7c     49 28 E0 B5 
19c80     DD FB FC E0 
19c84     EB 1D 3F 4C | 	byte	$f8, $f5, $1b, $49, $49, $28, $e0, $b5, $dd, $fb, $fc, $e0, $eb, $1d, $3f, $4c
19c88     20 E0 B7 E7 
19c8c     33 41 18 F3 
19c90     F2 EE EA E2 
19c94     F6 17 2B 26 | 	byte	$20, $e0, $b7, $e7, $33, $41, $18, $f3, $f2, $ee, $ea, $e2, $f6, $17, $2b, $26
19c98     09 F0 EA E4 
19c9c     EB FF FF 27 
19ca0     4F 60 30 E0 
19ca4     A2 B7 0F 29 | 	byte	$09, $f0, $ea, $e4, $eb, $ff, $ff, $27, $4f, $60, $30, $e0, $a2, $b7, $0f, $29
19ca8     04 D2 ED 1B 
19cac     43 30 F0 BD 
19cb0     E3 2F 34 02 
19cb4     F7 13 18 FA | 	byte	$04, $d2, $ed, $1b, $43, $30, $f0, $bd, $e3, $2f, $34, $02, $f7, $13, $18, $fa
19cb8     E0 D2 F3 1F 
19cbc     35 28 02 F6 
19cc0     EB E6 E9 FB 
19cc4     0F 2F 3F 44 | 	byte	$e0, $d2, $f3, $1f, $35, $28, $02, $f6, $eb, $e6, $e9, $fb, $0f, $2f, $3f, $44
19cc8     28 E8 B0 AF 
19ccc     EF 37 30 00 
19cd0     CD EF 25 3E 
19cd4     18 EC D5 FF | 	byte	$28, $e8, $b0, $af, $ef, $37, $30, $00, $cd, $ef, $25, $3e, $18, $ec, $d5, $ff
19cd8     17 00 02 23 
19cdc     34 04 D4 CB 
19ce0     F5 07 16 20 
19ce4     25 12 F6 E9 | 	byte	$17, $00, $02, $23, $34, $04, $d4, $cb, $f5, $07, $16, $20, $25, $12, $f6, $e9
19ce8     F1 F6 F7 11 
19cec     32 36 34 10 
19cf0     D4 A6 BB FF 
19cf4     37 28 F0 E7 | 	byte	$f1, $f6, $f7, $11, $32, $36, $34, $10, $d4, $a6, $bb, $ff, $37, $28, $f0, $e7
19cf8     0B 2E 20 06 
19cfc     F9 F3 F7 F6 
19d00     03 19 36 14 
19d04     E0 CE EE F9 | 	byte	$0b, $2e, $20, $06, $f9, $f3, $f7, $f6, $03, $19, $36, $14, $e0, $ce, $ee, $f9
19d08     FF 17 2B 28 
19d0c     00 F7 F2 F0 
19d10     EA EF 1F 3C 
19d14     26 18 05 E0 | 	byte	$ff, $17, $2b, $28, $00, $f7, $f2, $f0, $ea, $ef, $1f, $3c, $26, $18, $05, $e0
19d18     B8 CB FF 37 
19d1c     2C F5 E3 07 
19d20     1C 10 06 0D 
19d24     04 FB F1 FB | 	byte	$b8, $cb, $ff, $37, $2c, $f5, $e3, $07, $1c, $10, $06, $0d, $04, $fb, $f1, $fb
19d28     19 35 20 E4 
19d2c     DB F7 F8 ED 
19d30     09 2B 34 10 
19d34     F4 FD FD F2 | 	byte	$19, $35, $20, $e4, $db, $f7, $f8, $ed, $09, $2b, $34, $10, $f4, $fd, $fd, $f2
19d38     E6 FF 37 40 
19d3c     10 FF 10 E8 
19d40     B0 CB 17 41 
19d44     18 E8 FD 21 | 	byte	$e6, $ff, $37, $40, $10, $ff, $10, $e8, $b0, $cb, $17, $41, $18, $e8, $fd, $21
19d48     0C 05 12 16 
19d4c     F4 E3 F2 FF 
19d50     1F 34 00 D1 
19d54     F7 08 EB F5 | 	byte	$0c, $05, $12, $16, $f4, $e3, $f2, $ff, $1f, $34, $00, $d1, $f7, $08, $eb, $f5
19d58     1F 30 10 FF 
19d5c     11 02 F2 E9 
19d60     F3 1F 3B 10 
19d64     0B 20 F8 B0 | 	byte	$1f, $30, $10, $ff, $11, $02, $f2, $e9, $f3, $1f, $3b, $10, $0b, $20, $f8, $b0
19d68     BB 17 3A 00 
19d6c     FA 13 25 F8 
19d70     F7 1B 16 F4 
19d74     DF FF FA 07 | 	byte	$bb, $17, $3a, $00, $fa, $13, $25, $f8, $f7, $1b, $16, $f4, $df, $ff, $fa, $07
19d78     15 0A E2 F3 
19d7c     07 F0 E7 17 
19d80     3F 18 FA 11 
19d84     12 F8 DC ED | 	byte	$15, $0a, $e2, $f3, $07, $f0, $e7, $17, $3f, $18, $fa, $11, $12, $f8, $dc, $ed
19d88     FD 11 2D 20 
19d8c     0B 17 F4 B0 
19d90     B7 0F 40 02 
19d94     FD 2F 20 E2 | 	byte	$fd, $11, $2d, $20, $0b, $17, $f4, $b0, $b7, $0f, $40, $02, $fd, $2f, $20, $e2
19d98     F5 27 18 F0 
19d9c     E5 0D 00 E4 
19da0     FF 3F 00 D3 
19da4     13 14 DA EB | 	byte	$f5, $27, $18, $f0, $e5, $0d, $00, $e4, $ff, $3f, $00, $d3, $13, $14, $da, $eb
19da8     3A 20 04 1D 
19dac     20 F0 E7 FA 
19db0     F1 F6 31 28 
19db4     00 15 10 C0 | 	byte	$3a, $20, $04, $1d, $20, $f0, $e7, $fa, $f1, $f6, $31, $28, $00, $15, $10, $c0
19db8     A9 FF 34 04 
19dbc     0F 3B 10 E7 
19dc0     0D 26 02 ED 
19dc4     02 FE E8 E7 | 	byte	$a9, $ff, $34, $04, $0f, $3b, $10, $e7, $0d, $26, $02, $ed, $02, $fe, $e8, $e7
19dc8     13 20 02 FB 
19dcc     13 F4 D6 0D 
19dd0     30 20 13 1A 
19dd4     08 F2 ED EB | 	byte	$13, $20, $02, $fb, $13, $f4, $d6, $0d, $30, $20, $13, $1a, $08, $f2, $ed, $eb
19dd8     F0 F3 0D 2D 
19ddc     20 00 0B F2 
19de0     B4 BB 1F 41 
19de4     10 0B 2D 00 | 	byte	$f0, $f3, $0d, $2d, $20, $00, $0b, $f2, $b4, $bb, $1f, $41, $10, $0b, $2d, $00
19de8     EB 17 19 F8 
19dec     ED 02 EB F4 
19df0     F1 07 22 20 
19df4     F8 EB 0B 02 | 	byte	$eb, $17, $19, $f8, $ed, $02, $eb, $f4, $f1, $07, $22, $20, $f8, $eb, $0b, $02
19df8     F0 1B 30 10 
19dfc     05 12 02 F5 
19e00     FB EC E8 FE 
19e04     13 21 20 F8 | 	byte	$f0, $1b, $30, $10, $05, $12, $02, $f5, $fb, $ec, $e8, $fe, $13, $21, $20, $f8
19e08     FB 04 D0 BF 
19e0c     1F 50 08 0F 
19e10     35 00 E6 11 
19e14     0C E8 FB 00 | 	byte	$fb, $04, $d0, $bf, $1f, $50, $08, $0f, $35, $00, $e6, $11, $0c, $e8, $fb, $00
19e18     E0 E9 0F 19 
19e1c     22 20 F6 03 
19e20     0B FB EC 13 
19e24     27 12 05 01 | 	byte	$e0, $e9, $0f, $19, $22, $20, $f6, $03, $0b, $fb, $ec, $13, $27, $12, $05, $01
19e28     F4 E9 F0 F3 
19e2c     ED 03 29 30 
19e30     04 FB 11 F0 
19e34     C2 F7 3C 10 | 	byte	$f4, $e9, $f0, $f3, $ed, $03, $29, $30, $04, $fb, $11, $f0, $c2, $f7, $3c, $10
19e38     FF 2B 10 E9 
19e3c     0B 0A EC F7 
19e40     11 E4 E7 0B 
19e44     FB 17 3E 08 | 	byte	$ff, $2b, $10, $e9, $0b, $0a, $ec, $f7, $11, $e4, $e7, $0b, $fb, $17, $3e, $08
19e48     E9 17 08 D8 
19e4c     FF 28 FD 05 
19e50     17 08 D4 F3 
19e54     09 F1 E3 0B | 	byte	$e9, $17, $08, $d8, $ff, $28, $fd, $05, $17, $08, $d4, $f3, $09, $f1, $e3, $0b
19e58     2D 22 16 F8 
19e5c     FD 05 E0 CF 
19e60     1F 34 0A 0F 
19e64     20 F0 F7 10 | 	byte	$2d, $22, $16, $f8, $fd, $05, $e0, $cf, $1f, $34, $0a, $0f, $20, $f0, $f7, $10
19e68     FC F3 05 00 
19e6c     D7 FF 10 13 
19e70     31 24 F0 FF 
19e74     13 F8 F3 12 | 	byte	$fc, $f3, $05, $00, $d7, $ff, $10, $13, $31, $24, $f0, $ff, $13, $f8, $f3, $12
19e78     00 FF 11 00 
19e7c     EE FB FA F7 
19e80     FB FF 2B 3D 
19e84     14 EC FF 06 | 	byte	$00, $ff, $11, $00, $ee, $fb, $fa, $f7, $fb, $ff, $2b, $3d, $14, $ec, $ff, $06
19e88     D8 CB 1F 35 
19e8c     00 17 20 F0 
19e90     FD 0C F8 F5 
19e94     0F 00 D3 05 | 	byte	$d8, $cb, $1f, $35, $00, $17, $20, $f0, $fd, $0c, $f8, $f5, $0f, $00, $d3, $05
19e98     14 10 21 28 
19e9c     06 FB F8 F0 
19ea0     F9 17 08 F8 
19ea4     0A 0C EC F3 | 	byte	$14, $10, $21, $28, $06, $fb, $f8, $f0, $f9, $17, $08, $f8, $0a, $0c, $ec, $f3
19ea8     03 00 F4 FF 
19eac     25 2B 27 0A 
19eb0     F1 EA FC D8 
19eb4     CF 2F 40 00 | 	byte	$03, $00, $f4, $ff, $25, $2b, $27, $0a, $f1, $ea, $fc, $d8, $cf, $2f, $40, $00
19eb8     0A 24 F0 E3 
19ebc     0A 06 F8 0A 
19ec0     08 D4 F7 25 
19ec4     18 1D 3A F8 | 	byte	$0a, $24, $f0, $e3, $0a, $06, $f8, $0a, $08, $d4, $f7, $25, $18, $1d, $3a, $f8
19ec8     DF 07 00 E0 
19ecc     FF 14 FB 09 
19ed0     14 F8 F7 00 
19ed4     ED FD 0C 1B | 	byte	$df, $07, $00, $e0, $ff, $14, $fb, $09, $14, $f8, $f7, $00, $ed, $fd, $0c, $1b
19ed8     30 34 08 E0 
19edc     E7 FF F0 D3 
19ee0     1F 40 08 07 
19ee4     10 E4 E1 0D | 	byte	$30, $34, $08, $e0, $e7, $ff, $f0, $d3, $1f, $40, $08, $07, $10, $e4, $e1, $0d
19ee8     02 EB 07 18 
19eec     E4 F3 2C 10 
19ef0     05 3B 20 D0 
19ef4     F7 06 E0 F3 | 	byte	$02, $eb, $07, $18, $e4, $f3, $2c, $10, $05, $3b, $20, $d0, $f7, $06, $e0, $f3
19ef8     10 04 0E 14 
19efc     00 ED 08 04 
19f00     F4 FF 20 24 
19f04     2E 20 F0 C4 | 	byte	$10, $04, $0e, $14, $00, $ed, $08, $04, $f4, $ff, $20, $24, $2e, $20, $f0, $c4
19f08     D3 0E F0 E7 
19f0c     3F 40 F0 FF 
19f10     20 E1 DF 0B 
19f14     16 E8 FF 16 | 	byte	$d3, $0e, $f0, $e7, $3f, $40, $f0, $ff, $20, $e1, $df, $0b, $16, $e8, $ff, $16
19f18     E8 F7 23 20 
19f1c     02 25 20 E0 
19f20     DF FD F9 F6 
19f24     13 15 06 08 | 	byte	$e8, $f7, $23, $20, $02, $25, $20, $e0, $df, $fd, $f9, $f6, $13, $15, $06, $08
19f28     05 FD F6 09 
19f2c     09 F8 13 35 
19f30     20 09 05 EA 
19f34     B8 D7 27 12 | 	byte	$05, $fd, $f6, $09, $09, $f8, $13, $35, $20, $09, $05, $ea, $b8, $d7, $27, $12
19f38     F3 35 40 EA 
19f3c     E7 17 F0 E7 
19f40     13 1A F4 0A 
19f44     1A EC FF 35 | 	byte	$f3, $35, $40, $ea, $e7, $17, $f0, $e7, $13, $1a, $f4, $0a, $1a, $ec, $ff, $35
19f48     18 FF 17 00 
19f4c     C9 EB 00 F6 
19f50     07 20 1A 0B 
19f54     FF FF F8 FB | 	byte	$18, $ff, $17, $00, $c9, $eb, $00, $f6, $07, $20, $1a, $0b, $ff, $ff, $f8, $fb
19f58     02 02 11 27 
19f5c     22 0B 0C F4 
19f60     C4 AA F7 47 
19f64     10 F7 3F 38 | 	byte	$02, $02, $11, $27, $22, $0b, $0c, $f4, $c4, $aa, $f7, $47, $10, $f7, $3f, $38
19f68     E0 E3 10 F0 
19f6c     EA 03 21 00 
19f70     F7 09 FF FF 
19f74     1B 26 0A FE | 	byte	$e0, $e3, $10, $f0, $ea, $03, $21, $00, $f7, $09, $ff, $ff, $1b, $26, $0a, $fe
19f78     F0 E0 E3 FF 
19f7c     05 10 10 16 
19f80     13 04 F5 F5 
19f84     FF 07 FE FF | 	byte	$f0, $e0, $e3, $ff, $05, $10, $10, $16, $13, $04, $f5, $f5, $ff, $07, $fe, $ff
19f88     16 20 12 10 
19f8c     00 E0 D0 CB 
19f90     FF 4D 20 FC 
19f94     27 31 E8 CD | 	byte	$16, $20, $12, $10, $00, $e0, $d0, $cb, $ff, $4d, $20, $fc, $27, $31, $e8, $cd
19f98     F7 09 FC FB 
19f9c     17 16 09 F4 
19fa0     FF 16 1A 02 
19fa4     15 10 E4 DB | 	byte	$f7, $09, $fc, $fb, $17, $16, $09, $f4, $ff, $16, $1a, $02, $15, $10, $e4, $db
19fa8     F7 08 07 15 
19fac     1B 20 08 F6 
19fb0     F7 FB 04 01 
19fb4     03 07 17 13 | 	byte	$f7, $08, $07, $15, $1b, $20, $08, $f6, $f7, $fb, $04, $01, $03, $07, $17, $13
19fb8     00 F5 FD F0 
19fbc     E0 E9 17 3B 
19fc0     20 0C 1A 0C 
19fc4     F2 E4 F1 FB | 	byte	$00, $f5, $fd, $f0, $e0, $e9, $17, $3b, $20, $0c, $1a, $0c, $f2, $e4, $f1, $fb
19fc8     0F 0A 03 0C 
19fcc     08 02 08 0E 
19fd0     16 00 F0 F1 
19fd4     F0 F7 FD 07 | 	byte	$0f, $0a, $03, $0c, $08, $02, $08, $0e, $16, $00, $f0, $f1, $f0, $f7, $fd, $07
19fd8     13 1B 10 00 
19fdc     FF FE 05 08 
19fe0     02 09 00 F2 
19fe4     FF 06 FC F5 | 	byte	$13, $1b, $10, $00, $ff, $fe, $05, $08, $02, $09, $00, $f2, $ff, $06, $fc, $f5
19fe8     03 0D 04 07 
19fec     06 02 13 16 
19ff0     00 FA 0B 08 
19ff4     03 01 FE F9 | 	byte	$03, $0d, $04, $07, $06, $02, $13, $16, $00, $fa, $0b, $08, $03, $01, $fe, $f9
19ff8     FF 04 06 0A 
19ffc     0D 10 FD FC 
1a000     01 FF 02 FF 
1a004     06 02 FC 01 | 	byte	$ff, $04, $06, $0a, $0d, $10, $fd, $fc, $01, $ff, $02, $ff, $06, $02, $fc, $01
1a008     10 18 05 08 
1a00c     08 13 00 FB 
1a010     04 FD F4 FF 
1a014     0E 0A F8 FE | 	byte	$10, $18, $05, $08, $08, $13, $00, $fb, $04, $fd, $f4, $ff, $0e, $0a, $f8, $fe
1a018     02 0B 06 11 
1a01c     0B 01 0B FC 
1a020     0B 0C FD 0D 
1a024     10 00 F6 FB | 	byte	$02, $0b, $06, $11, $0b, $01, $0b, $fc, $0b, $0c, $fd, $0d, $10, $00, $f6, $fb
1a028     03 FA F5 05 
1a02c     0D 04 09 0E 
1a030     16 04 FA 02 
1a034     FF FC 07 02 | 	byte	$03, $fa, $f5, $05, $0d, $04, $09, $0e, $16, $04, $fa, $02, $ff, $fc, $07, $02
1a038     FA 05 02 00 
1a03c     FD 09 09 05 
1a040     01 09 01 FE 
1a044     0B 00 03 02 | 	byte	$fa, $05, $02, $00, $fd, $09, $09, $05, $01, $09, $01, $fe, $0b, $00, $03, $02
1a048     FF 00 FF 06 
1a04c     00 03 0B FE 
1a050     03 14 10 00 
1a054     FF FE 02 00 | 	byte	$ff, $00, $ff, $06, $00, $03, $0b, $fe, $03, $14, $10, $00, $ff, $fe, $02, $00
1a058     F9 FB FF FD 
1a05c     09 11 10 10 
1a060     0E 11 00 F7 
1a064     04 02 FC FF | 	byte	$f9, $fb, $ff, $fd, $09, $11, $10, $10, $0e, $11, $00, $f7, $04, $02, $fc, $ff
1a068     FF 07 05 01 
1a06c     06 0E 11 09 
1a070     05 FC 03 12 
1a074     08 FC FE F7 | 	byte	$ff, $07, $05, $01, $06, $0e, $11, $09, $05, $fc, $03, $12, $08, $fc, $fe, $f7
1a078     09 08 FB FE 
1a07c     FF 0A 09 08 
1a080     0A 19 00 FB 
1a084     04 04 00 FB | 	byte	$09, $08, $fb, $fe, $ff, $0a, $09, $08, $0a, $19, $00, $fb, $04, $04, $00, $fb
1a088     01 FA FF 09 
1a08c     08 09 10 04 
1a090     06 04 03 10 
1a094     0A 00 F5 FF | 	byte	$01, $fa, $ff, $09, $08, $09, $10, $04, $06, $04, $03, $10, $0a, $00, $f5, $ff
1a098     03 05 FA F9 
1a09c     03 06 0B 0D 
1a0a0     08 FC 03 08 
1a0a4     04 FC FC FF | 	byte	$03, $05, $fa, $f9, $03, $06, $0b, $0d, $08, $fc, $03, $08, $04, $fc, $fc, $ff
1a0a8     07 00 F9 09 
1a0ac     00 03 13 12 
1a0b0     01 FF 06 00 
1a0b4     FE 0B FC F2 | 	byte	$07, $00, $f9, $09, $00, $03, $13, $12, $01, $ff, $06, $00, $fe, $0b, $fc, $f2
1a0b8     03 0D 00 F5 
1a0bc     05 0C 0D 11 
1a0c0     0A 02 FF 0B 
1a0c4     00 FB 10 00 | 	byte	$03, $0d, $00, $f5, $05, $0c, $0d, $11, $0a, $02, $ff, $0b, $00, $fb, $10, $00
1a0c8     F7 03 11 00 
1a0cc     F2 09 0B 06 
1a0d0     10 10 00 07 
1a0d4     0B FB FF 00 | 	byte	$f7, $03, $11, $00, $f2, $09, $0b, $06, $10, $10, $00, $07, $0b, $fb, $ff, $00
1a0d8     FF 09 00 05 
1a0dc     10 FE 01 00 
1a0e0     02 0B 06 FF 
1a0e4     FF 07 06 FB | 	byte	$ff, $09, $00, $05, $10, $fe, $01, $00, $02, $0b, $06, $ff, $ff, $07, $06, $fb
1a0e8     03 01 FD 09 
1a0ec     10 FC F7 10 
1a0f0     13 00 03 08 
1a0f4     FC 0D 0C 0B | 	byte	$03, $01, $fd, $09, $10, $fc, $f7, $10, $13, $00, $03, $08, $fc, $0d, $0c, $0b
1a0f8     F8 F1 07 06 
1a0fc     05 00 0B 08 
1a100     02 0A FA F6 
1a104     0B 17 00 EC | 	byte	$f8, $f1, $07, $06, $05, $00, $0b, $08, $02, $0a, $fa, $f6, $0b, $17, $00, $ec
1a108     03 03 03 1B 
1a10c     00 EB 1D 04 
1a110     E5 13 19 F8 
1a114     F9 12 02 F5 | 	byte	$03, $03, $03, $1b, $00, $eb, $1d, $04, $e5, $13, $19, $f8, $f9, $12, $02, $f5
1a118     03 13 08 FE 
1a11c     FB F5 15 1A 
1a120     FB F6 0E 04 
1a124     EB 1B 20 F4 | 	byte	$03, $13, $08, $fe, $fb, $f5, $15, $1a, $fb, $f6, $0e, $04, $eb, $1b, $20, $f4
1a128     F2 06 1E 08 
1a12c     E4 FF 12 10 
1a130     FD 0B 0D 0A 
1a134     F0 F3 29 21 | 	byte	$f2, $06, $1e, $08, $e4, $ff, $12, $10, $fd, $0b, $0d, $0a, $f0, $f3, $29, $21
1a138     F1 F7 13 10 
1a13c     F0 ED 0D 0C 
1a140     05 01 0B 06 
1a144     05 02 E8 F5 | 	byte	$f1, $f7, $13, $10, $f0, $ed, $0d, $0c, $05, $01, $0b, $06, $05, $02, $e8, $f5
1a148     11 0C 02 04 
1a14c     15 0A 00 FB 
1a150     FF FC 0D FA 
1a154     DB 0F 3F 08 | 	byte	$11, $0c, $02, $04, $15, $0a, $00, $fb, $ff, $fc, $0d, $fa, $db, $0f, $3f, $08
1a158     D2 17 50 E8 
1a15c     BB FF 34 F0 
1a160     B5 FF 30 04 
1a164     03 25 30 00 | 	byte	$d2, $17, $50, $e8, $bb, $ff, $34, $f0, $b5, $ff, $30, $04, $03, $25, $30, $00
1a168     DD FF 01 F0 
1a16c     E0 FF 13 00 
1a170     FB 11 14 0D 
1a174     1A 21 0A F4 | 	byte	$dd, $ff, $01, $f0, $e0, $ff, $13, $00, $fb, $11, $14, $0d, $1a, $21, $0a, $f4
1a178     E4 E7 E6 EB 
1a17c     0D 11 02 15 
1a180     31 32 10 FB 
1a184     FB F8 E2 E5 | 	byte	$e4, $e7, $e6, $eb, $0d, $11, $02, $15, $31, $32, $10, $fb, $fb, $f8, $e2, $e5
1a188     F7 F9 03 21 
1a18c     24 FA 13 3C 
1a190     F0 B7 0B 2A 
1a194     00 DC 17 37 | 	byte	$f7, $f9, $03, $21, $24, $fa, $13, $3c, $f0, $b7, $0b, $2a, $00, $dc, $17, $37
1a198     14 01 17 18 
1a19c     EA C7 EF F8 
1a1a0     F1 0B 24 1B 
1a1a4     12 10 12 F8 | 	byte	$14, $01, $17, $18, $ea, $c7, $ef, $f8, $f1, $0b, $24, $1b, $12, $10, $12, $f8
1a1a8     FC 0C 00 F0 
1a1ac     EF FC F4 F2 
1a1b0     11 1C 11 13 
1a1b4     1C 20 10 02 | 	byte	$fc, $0c, $00, $f0, $ef, $fc, $f4, $f2, $11, $1c, $11, $13, $1c, $20, $10, $02
1a1b8     00 E8 D3 E3 
1a1bc     FF 07 02 13 
1a1c0     48 20 F1 1F 
1a1c4     28 B2 B7 1D | 	byte	$00, $e8, $d3, $e3, $ff, $07, $02, $13, $48, $20, $f1, $1f, $28, $b2, $b7, $1d
1a1c8     20 E0 EF 37 
1a1cc     20 04 1D 24 
1a1d0     F0 DA E0 EB 
1a1d4     D8 F3 1F 30 | 	byte	$20, $e0, $ef, $37, $20, $04, $1d, $24, $f0, $da, $e0, $eb, $d8, $f3, $1f, $30
1a1d8     14 10 20 11 
1a1dc     F4 F3 08 FC 
1a1e0     EB FF 05 ED 
1a1e4     FD 17 18 14 | 	byte	$14, $10, $20, $11, $f4, $f3, $08, $fc, $eb, $ff, $05, $ed, $fd, $17, $18, $14
1a1e8     16 16 14 07 
1a1ec     FD F2 F5 E4 
1a1f0     E2 07 10 00 
1a1f4     FF 23 30 04 | 	byte	$16, $16, $14, $07, $fd, $f2, $f5, $e4, $e2, $07, $10, $00, $ff, $23, $30, $04
1a1f8     F7 27 22 B8 
1a1fc     CB 1F 18 EB 
1a200     0B 30 12 03 
1a204     1A 0A D8 DF | 	byte	$f7, $27, $22, $b8, $cb, $1f, $18, $eb, $0b, $30, $12, $03, $1a, $0a, $d8, $df
1a208     F9 E5 DB 13 
1a20c     36 2A 10 1D 
1a210     15 F8 E7 FD 
1a214     02 F8 F7 04 | 	byte	$f9, $e5, $db, $13, $36, $2a, $10, $1d, $15, $f8, $e7, $fd, $02, $f8, $f7, $04
1a218     F8 FF 12 13 
1a21c     17 12 0E 01 
1a220     FF 09 03 FB 
1a224     EA E1 EF 12 | 	byte	$f8, $ff, $12, $13, $17, $12, $0e, $01, $ff, $09, $03, $fb, $ea, $e1, $ef, $12
1a228     10 FE 0B 27 
1a22c     2C F5 FF 2A 
1a230     E0 B6 FF 18 
1a234     F0 EB 1F 24 | 	byte	$10, $fe, $0b, $27, $2c, $f5, $ff, $2a, $e0, $b6, $ff, $18, $f0, $eb, $1f, $24
1a238     01 0F 29 10 
1a23c     E0 E3 F8 EA 
1a240     E3 FF 1C 18 
1a244     1D 2B 12 FE | 	byte	$01, $0f, $29, $10, $e0, $e3, $f8, $ea, $e3, $ff, $1c, $18, $1d, $2b, $12, $fe
1a248     FB 10 00 E3 
1a24c     F5 08 FA FF 
1a250     14 14 0B 13 
1a254     17 10 06 06 | 	byte	$fb, $10, $00, $e3, $f5, $08, $fa, $ff, $14, $14, $0b, $13, $17, $10, $06, $06
1a258     00 F2 F5 F6 
1a25c     F3 FD 0B 0B 
1a260     FE 17 3A 04 
1a264     F3 17 14 CA | 	byte	$00, $f2, $f5, $f6, $f3, $fd, $0b, $0b, $fe, $17, $3a, $04, $f3, $17, $14, $ca
1a268     DF 17 0C EC 
1a26c     FB 2A 10 F7 
1a270     13 18 00 EA 
1a274     E7 F7 F4 FF | 	byte	$df, $17, $0c, $ec, $fb, $2a, $10, $f7, $13, $18, $00, $ea, $e7, $f7, $f4, $ff
1a278     17 10 02 17 
1a27c     20 12 06 FA 
1a280     FF FC F7 F5 
1a284     E9 EB 0A 1A | 	byte	$17, $10, $02, $17, $20, $12, $06, $fa, $ff, $fc, $f7, $f5, $e9, $eb, $0a, $1a
1a288     11 1B 24 15 
1a28c     05 02 00 F0 
1a290     E9 F7 F0 EB 
1a294     F9 09 1A 21 | 	byte	$11, $1b, $24, $15, $05, $02, $00, $f0, $e9, $f7, $f0, $eb, $f9, $09, $1a, $21
1a298     14 10 11 09 
1a29c     FA F1 F5 FE 
1a2a0     F5 F7 0B 07 
1a2a4     FF FD 0F 11 | 	byte	$14, $10, $11, $09, $fa, $f1, $f5, $fe, $f5, $f7, $0b, $07, $ff, $fd, $0f, $11
1a2a8     06 00 FF 02 
1a2ac     FB FF 08 08 
1a2b0     04 0C 10 09 
1a2b4     07 09 00 04 | 	byte	$06, $00, $ff, $02, $fb, $ff, $08, $08, $04, $0c, $10, $09, $07, $09, $00, $04
1a2b8     00 F2 FE 08 
1a2bc     04 FF 07 16 
1a2c0     0D 10 0B 08 
1a2c4     0A 07 02 FE | 	byte	$00, $f2, $fe, $08, $04, $ff, $07, $16, $0d, $10, $0b, $08, $0a, $07, $02, $fe
1a2c8     F4 F3 03 FE 
1a2cc     01 0A 13 14 
1a2d0     0A 0E 08 04 
1a2d4     03 07 FA EE | 	byte	$f4, $f3, $03, $fe, $01, $0a, $13, $14, $0a, $0e, $08, $04, $03, $07, $fa, $ee
1a2d8     FA 07 FB FA 
1a2dc     02 04 09 10 
1a2e0     04 06 09 0B 
1a2e4     08 02 FF 06 | 	byte	$fa, $07, $fb, $fa, $02, $04, $09, $10, $04, $06, $09, $0b, $08, $02, $ff, $06
1a2e8     00 F3 FF 06 
1a2ec     FE 01 06 10 
1a2f0     04 01 03 04 
1a2f4     02 06 06 07 | 	byte	$00, $f3, $ff, $06, $fe, $01, $06, $10, $04, $01, $03, $04, $02, $06, $06, $07
1a2f8     FE 02 04 FC 
1a2fc     FE 01 0A FA 
1a300     FF 0B 07 0A 
1a304     0C 08 F4 03 | 	byte	$fe, $02, $04, $fc, $fe, $01, $0a, $fa, $ff, $0b, $07, $0a, $0c, $08, $f4, $03
1a308     0C 00 00 00 
1a30c     01 FA FF 07 
1a310     0A 01 FC 03 
1a314     06 04 02 05 | 	byte	$0c, $00, $00, $00, $01, $fa, $ff, $07, $0a, $01, $fc, $03, $06, $04, $02, $05
1a318     05 0B 05 02 
1a31c     05 0A 00 FF 
1a320     00 05 10 00 
1a324     02 06 06 02 | 	byte	$05, $0b, $05, $02, $05, $0a, $00, $ff, $00, $05, $10, $00, $02, $06, $06, $02
1a328     04 00 0B 14 
1a32c     11 07 FF FE 
1a330     FF 05 06 07 
1a334     06 F9 FF 10 | 	byte	$04, $00, $0b, $14, $11, $07, $ff, $fe, $ff, $05, $06, $07, $06, $f9, $ff, $10
1a338     08 06 F8 FC 
1a33c     0D 14 F8 F7 
1a340     03 07 0A 08 
1a344     05 07 06 01 | 	byte	$08, $06, $f8, $fc, $0d, $14, $f8, $f7, $03, $07, $0a, $08, $05, $07, $06, $01
1a348     FF 04 0E FA 
1a34c     EF 03 15 08 
1a350     FB 06 0E 0C 
1a354     FC FB 05 02 | 	byte	$ff, $04, $0e, $fa, $ef, $03, $15, $08, $fb, $06, $0e, $0c, $fc, $fb, $05, $02
1a358     FF 0B 02 05 
1a35c     01 F9 04 01 
1a360     06 05 0A 02 
1a364     04 02 F9 07 | 	byte	$ff, $0b, $02, $05, $01, $f9, $04, $01, $06, $05, $0a, $02, $04, $02, $f9, $07
1a368     07 07 00 F7 
1a36c     0E 08 05 FB 
1a370     FD 08 0B 00 
1a374     FB 0B 00 04 | 	byte	$07, $07, $00, $f7, $0e, $08, $05, $fb, $fd, $08, $0b, $00, $fb, $0b, $00, $04
1a378     08 02 FE FF 
1a37c     0A 06 10 02 
1a380     06 00 06 04 
1a384     FC FF 0C 08 | 	byte	$08, $02, $fe, $ff, $0a, $06, $10, $02, $06, $00, $06, $04, $fc, $ff, $0c, $08
1a388     04 02 07 07 
1a38c     10 06 06 00 
1a390     FA 0D 0A FF 
1a394     FF 03 13 10 | 	byte	$04, $02, $07, $07, $10, $06, $06, $00, $fa, $0d, $0a, $ff, $ff, $03, $13, $10
1a398     FE FF 00 F0 
1a39c     FF 13 08 02 
1a3a0     02 03 FC FD 
1a3a4     05 05 0C 06 | 	byte	$fe, $ff, $00, $f0, $ff, $13, $08, $02, $02, $03, $fc, $fd, $05, $05, $0c, $06
1a3a8     FD FF 11 0A 
1a3ac     F7 FC FF 09 
1a3b0     13 FD FB 0A 
1a3b4     07 00 04 06 | 	byte	$fd, $ff, $11, $0a, $f7, $fc, $ff, $09, $13, $fd, $fb, $0a, $07, $00, $04, $06
1a3b8     FE FF 10 06 
1a3bc     F5 FB 16 0A 
1a3c0     F3 EE 07 17 
1a3c4     04 F8 03 05 | 	byte	$fe, $ff, $10, $06, $f5, $fb, $16, $0a, $f3, $ee, $07, $17, $04, $f8, $03, $05
1a3c8     FC 07 07 0C 
1a3cc     FE 07 0B F7 
1a3d0     FF 04 02 FF 
1a3d4     07 08 09 F8 | 	byte	$fc, $07, $07, $0c, $fe, $07, $0b, $f7, $ff, $04, $02, $ff, $07, $08, $09, $f8
1a3d8     F5 05 11 01 
1a3dc     FF 0E 03 FF 
1a3e0     FF 13 12 FC 
1a3e4     FE 08 0A FD | 	byte	$f5, $05, $11, $01, $ff, $0e, $03, $ff, $ff, $13, $12, $fc, $fe, $08, $0a, $fd
1a3e8     FD FD 0B 14 
1a3ec     04 FB 06 09 
1a3f0     0B 0C FE FB 
1a3f4     11 14 06 FF | 	byte	$fd, $fd, $0b, $14, $04, $fb, $06, $09, $0b, $0c, $fe, $fb, $11, $14, $06, $ff
1a3f8     FF 05 FF 0A 
1a3fc     0B 05 04 FF 
1a400     FE 07 0A FE 
1a404     FA FF 11 0A | 	byte	$ff, $05, $ff, $0a, $0b, $05, $04, $ff, $fe, $07, $0a, $fe, $fa, $ff, $11, $0a
1a408     F8 FB 07 05 
1a40c     0F 05 F3 03 
1a410     11 04 FB 07 
1a414     02 05 13 04 | 	byte	$f8, $fb, $07, $05, $0f, $05, $f3, $03, $11, $04, $fb, $07, $02, $05, $13, $04
1a418     FD 04 09 04 
1a41c     FF 0C 00 FF 
1a420     F9 FF 05 0B 
1a424     FF 02 FB FA | 	byte	$fd, $04, $09, $04, $ff, $0c, $00, $ff, $f9, $ff, $05, $0b, $ff, $02, $fb, $fa
1a428     0E 14 FC FF 
1a42c     04 05 06 FC 
1a430     FD 0F 08 FF 
1a434     F6 FD 07 0A | 	byte	$0e, $14, $fc, $ff, $04, $05, $06, $fc, $fd, $0f, $08, $ff, $f6, $fd, $07, $0a
1a438     00 01 0B 06 
1a43c     FE FD 02 05 
1a440     0A 04 06 10 
1a444     04 FE FC 06 | 	byte	$00, $01, $0b, $06, $fe, $fd, $02, $05, $0a, $04, $06, $10, $04, $fe, $fc, $06
1a448     11 04 FF FD 
1a44c     03 0B 09 FA 
1a450     FD 09 12 00 
1a454     FD 10 10 0A | 	byte	$11, $04, $ff, $fd, $03, $0b, $09, $fa, $fd, $09, $12, $00, $fd, $10, $10, $0a
1a458     00 F5 07 0D 
1a45c     0B 05 0D 0A 
1a460     F2 F2 05 13 
1a464     08 FF 02 FE | 	byte	$00, $f5, $07, $0d, $0b, $05, $0d, $0a, $f2, $f2, $05, $13, $08, $ff, $02, $fe
1a468     FD 02 FF 0B 
1a46c     0B 00 FE 05 
1a470     0B FF 00 FF 
1a474     03 17 02 F7 | 	byte	$fd, $02, $ff, $0b, $0b, $00, $fe, $05, $0b, $ff, $00, $ff, $03, $17, $02, $f7
1a478     03 13 08 F0 
1a47c     FF 11 10 03 
1a480     05 04 F5 FF 
1a484     17 0A F4 F2 | 	byte	$03, $13, $08, $f0, $ff, $11, $10, $03, $05, $04, $f5, $ff, $17, $0a, $f4, $f2
1a488     05 04 FC 01 
1a48c     0E 04 02 07 
1a490     05 04 08 00 
1a494     F9 06 02 03 | 	byte	$05, $04, $fc, $01, $0e, $04, $02, $07, $05, $04, $08, $00, $f9, $06, $02, $03
1a498     00 01 05 0A 
1a49c     08 FC 02 09 
1a4a0     07 06 FA 05 
1a4a4     0D 02 0B 00 | 	byte	$00, $01, $05, $0a, $08, $fc, $02, $09, $07, $06, $fa, $05, $0d, $02, $0b, $00
1a4a8     F7 07 10 FD 
1a4ac     03 0A FD FA 
1a4b0     03 10 10 10 
1a4b4     08 FA FF FD | 	byte	$f7, $07, $10, $fd, $03, $0a, $fd, $fa, $03, $10, $10, $10, $08, $fa, $ff, $fd
1a4b8     FF 17 14 00 
1a4bc     FA 02 07 0A 
1a4c0     10 10 FA ED 
1a4c4     07 07 09 10 | 	byte	$ff, $17, $14, $00, $fa, $02, $07, $0a, $10, $10, $fa, $ed, $07, $07, $09, $10
1a4c8     FB F9 01 00 
1a4cc     02 0C 04 FB 
1a4d0     FC 07 09 09 
1a4d4     FE FE 04 FF | 	byte	$fb, $f9, $01, $00, $02, $0c, $04, $fb, $fc, $07, $09, $09, $fe, $fe, $04, $ff
1a4d8     06 07 08 03 
1a4dc     05 07 04 FB 
1a4e0     FC FF 07 0B 
1a4e4     09 10 FC EF | 	byte	$06, $07, $08, $03, $05, $07, $04, $fb, $fc, $ff, $07, $0b, $09, $10, $fc, $ef
1a4e8     0E 08 10 00 
1a4ec     FA 05 02 F8 
1a4f0     FF 12 FD 03 
1a4f4     08 FF 08 0B | 	byte	$0e, $08, $10, $00, $fa, $05, $02, $f8, $ff, $12, $fd, $03, $08, $ff, $08, $0b
1a4f8     04 FD 01 F4 
1a4fc     0A 12 03 FB 
1a500     FF 01 FB 05 
1a504     08 0B 02 05 | 	byte	$04, $fd, $01, $f4, $0a, $12, $03, $fb, $ff, $01, $fb, $05, $08, $0b, $02, $05
1a508     12 05 FD FF 
1a50c     0D 04 FD 10 
1a510     05 FE FB FF 
1a514     06 0E 05 00 | 	byte	$12, $05, $fd, $ff, $0d, $04, $fd, $10, $05, $fe, $fb, $ff, $06, $0e, $05, $00
1a518     0A 08 00 02 
1a51c     08 FF 03 17 
1a520     13 02 02 F6 
1a524     05 0D 10 00 | 	byte	$0a, $08, $00, $02, $08, $ff, $03, $17, $13, $02, $02, $f6, $05, $0d, $10, $00
1a528     03 09 FE 07 
1a52c     01 FA FA 02 
1a530     15 0C F6 ED 
1a534     07 0B FC FF | 	byte	$03, $09, $fe, $07, $01, $fa, $fa, $02, $15, $0c, $f6, $ed, $07, $0b, $fc, $ff
1a538     03 06 0C 0B 
1a53c     05 06 FC 03 
1a540     07 FA F9 07 
1a544     00 05 18 11 | 	byte	$03, $06, $0c, $0b, $05, $06, $fc, $03, $07, $fa, $f9, $07, $00, $05, $18, $11
1a548     FC F3 0B 10 
1a54c     00 FC F7 F9 
1a550     03 0A 06 10 
1a554     F6 F9 01 0B | 	byte	$fc, $f3, $0b, $10, $00, $fc, $f7, $f9, $03, $0a, $06, $10, $f6, $f9, $01, $0b
1a558     02 05 04 FB 
1a55c     0A 11 05 F6 
1a560     FD 03 0B 01 
1a564     FD FE 0F 20 | 	byte	$02, $05, $04, $fb, $0a, $11, $05, $f6, $fd, $03, $0b, $01, $fd, $fe, $0f, $20
1a568     00 FB FD 01 
1a56c     0C 0B 04 03 
1a570     FB 07 08 01 
1a574     04 07 10 01 | 	byte	$00, $fb, $fd, $01, $0c, $0b, $04, $03, $fb, $07, $08, $01, $04, $07, $10, $01
1a578     FF 0B 00 02 
1a57c     FD 03 0E 09 
1a580     0B FC 07 15 
1a584     08 F5 05 10 | 	byte	$ff, $0b, $00, $02, $fd, $03, $0e, $09, $0b, $fc, $07, $15, $08, $f5, $05, $10
1a588     07 11 0A FD 
1a58c     F9 03 0B 02 
1a590     F9 02 04 FF 
1a594     02 FC 03 05 | 	byte	$07, $11, $0a, $fd, $f9, $03, $0b, $02, $f9, $02, $04, $ff, $02, $fc, $03, $05
1a598     02 FF FF FF 
1a59c     07 1B 08 F0 
1a5a0     FB 0B 09 FB 
1a5a4     FD 09 12 08 | 	byte	$02, $ff, $ff, $ff, $07, $1b, $08, $f0, $fb, $0b, $09, $fb, $fd, $09, $12, $08
1a5a8     FF FF FF FF 
1a5ac     FF          | 	byte	$ff[5]
1a5ad     0E 02 FF 11 
1a5b1     00 F6 FD 08 
1a5b5     05 06 01 03 
1a5b9     F9 FF 10 FA | 	byte	$0e, $02, $ff, $11, $00, $f6, $fd, $08, $05, $06, $01, $03, $f9, $ff, $10, $fa
1a5bd     FF 0B 04 08 
1a5c1     0A 0A FE FB 
1a5c5     05 FC 06 FE 
1a5c9     FD 0B 11 08 | 	byte	$ff, $0b, $04, $08, $0a, $0a, $fe, $fb, $05, $fc, $06, $fe, $fd, $0b, $11, $08
1a5cd     0A FA F7 0E 
1a5d1     09 02 FA FF 
1a5d5     0D 16 02 F7 
1a5d9     FF 15 08 FA | 	byte	$0a, $fa, $f7, $0e, $09, $02, $fa, $ff, $0d, $16, $02, $f7, $ff, $15, $08, $fa
1a5dd     01 FE FC 10 
1a5e1     1B 10 F2 F7 
1a5e5     19 12 00 FF 
1a5e9     03 00 0B 10 | 	byte	$01, $fe, $fc, $10, $1b, $10, $f2, $f7, $19, $12, $00, $ff, $03, $00, $0b, $10
1a5ed     FC 03 0B 08 
1a5f1     FF FF 07 04 
1a5f5     FB FF 10 FC 
1a5f9     03 FC FD 14 | 	byte	$fc, $03, $0b, $08, $ff, $ff, $07, $04, $fb, $ff, $10, $fc, $03, $fc, $fd, $14
1a5fd     02 FA F7 0B 
1a601     0B 00 00 0B 
1a605     04 F9 04 02 
1a609     FD 07 0D 0D | 	byte	$02, $fa, $f7, $0b, $0b, $00, $00, $0b, $04, $f9, $04, $02, $fd, $07, $0d, $0d
1a60d     00 00 00 00 
1a611     00          | 	byte	$00[5]
1a612     26 E0 0F 04 
1a616     EB 28 E0 1F 
1a61a     00 F3 20 D6 
1a61e     27 F0 FF 20 | 	byte	$26, $e0, $0f, $04, $eb, $28, $e0, $1f, $00, $f3, $20, $d6, $27, $f0, $ff, $20
1a622     E7 2D E4 0F 
1a626     08 E3 28 E0 
1a62a     1B 00 EF 28 
1a62e     DB 27 F0 FF | 	byte	$e7, $2d, $e4, $0f, $08, $e3, $28, $e0, $1b, $00, $ef, $28, $db, $27, $f0, $ff
1a632     10 E7 30 E2 
1a636     27 00 EF 20 
1a63a     E1 31 EC 1B 
1a63e     10 EF 2C DB | 	byte	$10, $e7, $30, $e2, $27, $00, $ef, $20, $e1, $31, $ec, $1b, $10, $ef, $2c, $db
1a642     23 E8 FF 14 
1a646     EB 35 E8 1F 
1a64a     00 F7 20 E2 
1a64e     2F E8 17 10 | 	byte	$23, $e8, $ff, $14, $eb, $35, $e8, $1f, $00, $f7, $20, $e2, $2f, $e8, $17, $10
1a652     EB 24 DA 23 
1a656     F0 0F 20 EB 
1a65a     2A E0 27 F4 
1a65e     FF 18 E7 2A | 	byte	$eb, $24, $da, $23, $f0, $0f, $20, $eb, $2a, $e0, $27, $f4, $ff, $18, $e7, $2a
1a662     E0 1F 00 FF 
1a666     14 E7 30 E1 
1a66a     1B 00 FB 20 
1a66e     DB 2A E4 17 | 	byte	$e0, $1f, $00, $ff, $14, $e7, $30, $e1, $1b, $00, $fb, $20, $db, $2a, $e4, $17
1a672     00 EB 28 DD 
1a676     2B E8 FF 10 
1a67a     EB 28 D8 17 
1a67e     00 EF 24 DA | 	byte	$00, $eb, $28, $dd, $2b, $e8, $ff, $10, $eb, $28, $d8, $17, $00, $ef, $24, $da
1a682     25 F4 FF 20 
1a686     D9 21 E0 0D 
1a68a     10 DF 29 E2 
1a68e     17 08 EB 25 | 	byte	$25, $f4, $ff, $20, $d9, $21, $e0, $0d, $10, $df, $29, $e2, $17, $08, $eb, $25
1a692     E0 23 F0 F7 
1a696     14 E3 28 E0 
1a69a     17 00 F7 20 
1a69e     E5 30 E8 0F | 	byte	$e0, $23, $f0, $f7, $14, $e3, $28, $e0, $17, $00, $f7, $20, $e5, $30, $e8, $0f
1a6a2     10 F5 28 DA 
1a6a6     25 F0 FF 20 
1a6aa     E7 30 E0 1B 
1a6ae     00 FF 24 E3 | 	byte	$10, $f5, $28, $da, $25, $f0, $ff, $20, $e7, $30, $e0, $1b, $00, $ff, $24, $e3
1a6b2     2B E8 13 08 
1a6b6     F7 28 E0 27 
1a6ba     F0 0D 14 EB 
1a6be     2C E0 1F 00 | 	byte	$2b, $e8, $13, $08, $f7, $28, $e0, $27, $f0, $0d, $14, $eb, $2c, $e0, $1f, $00
1a6c2     FF 24 E2 2A 
1a6c6     E4 17 08 F3 
1a6ca     20 DB 29 E8 
1a6ce     0F 10 EF 29 | 	byte	$ff, $24, $e2, $2a, $e4, $17, $08, $f3, $20, $db, $29, $e8, $0f, $10, $ef, $29
1a6d2     E0 27 F0 FF 
1a6d6     18 E7 2D E0 
1a6da     17 F4 EF 20 
1a6de     E5 31 EA 0F | 	byte	$e0, $27, $f0, $ff, $18, $e7, $2d, $e0, $17, $f4, $ef, $20, $e5, $31, $ea, $0f
1a6e2     10 EB 2B E0 
1a6e6     0F 00 EB 29 
1a6ea     E2 1F 00 EF 
1a6ee     28 E1 1F 00 | 	byte	$10, $eb, $2b, $e0, $0f, $00, $eb, $29, $e2, $1f, $00, $ef, $28, $e1, $1f, $00
1a6f2     EF 18 E1 23 
1a6f6     08 F5 F4 EF 
1a6fa     3F 00 1D 00 
1a6fe     DF 00 E1 2D | 	byte	$ef, $18, $e1, $23, $08, $f5, $f4, $ef, $3f, $00, $1d, $00, $df, $00, $e1, $2d
1a702     02 13 00 E5 
1a706     23 E9 1F 04 
1a70a     FF 08 DF 29 
1a70e     F4 1F 00 E7 | 	byte	$02, $13, $00, $e5, $23, $e9, $1f, $04, $ff, $08, $df, $29, $f4, $1f, $00, $e7
1a712     18 E0 1D F0 
1a716     0B 08 E7 2A 
1a71a     EA 26 00 FF 
1a71e     14 E7 2C E6 | 	byte	$18, $e0, $1d, $f0, $0b, $08, $e7, $2a, $ea, $26, $00, $ff, $14, $e7, $2c, $e6
1a722     15 F4 E7 20 
1a726     E7 25 E8 FF 
1a72a     00 F7 3F F4 
1a72e     27 00 EF 04 | 	byte	$15, $f4, $e7, $20, $e7, $25, $e8, $ff, $00, $f7, $3f, $f4, $27, $00, $ef, $04
1a732     DF 2F F0 17 
1a736     00 E7 20 E3 
1a73a     2B 00 0F 08 
1a73e     E7 37 F4 2E | 	byte	$df, $2f, $f0, $17, $00, $e7, $20, $e3, $2b, $00, $0f, $08, $e7, $37, $f4, $2e
1a742     00 EF 04 D2 
1a746     1D F0 FF 10 
1a74a     DF 26 E8 13 
1a74e     10 EF 30 F0 | 	byte	$00, $ef, $04, $d2, $1d, $f0, $ff, $10, $df, $26, $e8, $13, $10, $ef, $30, $f0
1a752     1B 00 FB 2A 
1a756     EA F9 CA EF 
1a75a     34 05 2F 08 
1a75e     FD E8 E7 37 | 	byte	$1b, $00, $fb, $2a, $ea, $f9, $ca, $ef, $34, $05, $2f, $08, $fd, $e8, $e7, $37
1a762     10 35 F0 DF 
1a766     10 E3 1F E5 
1a76a     17 10 ED 14 
1a76e     EB 37 00 17 | 	byte	$10, $35, $f0, $df, $10, $e3, $1f, $e5, $17, $10, $ed, $14, $eb, $37, $00, $17
1a772     20 E3 10 DA 
1a776     17 00 F7 10 
1a77a     E3 2A F0 17 
1a77e     10 F7 2C E8 | 	byte	$20, $e3, $10, $da, $17, $00, $f7, $10, $e3, $2a, $f0, $17, $10, $f7, $2c, $e8
1a782     2B F0 EF 22 
1a786     FB 02 C6 FF 
1a78a     18 1F 34 E2 
1a78e     16 E4 F7 02 | 	byte	$2b, $f0, $ef, $22, $fb, $02, $c6, $ff, $18, $1f, $34, $e2, $16, $e4, $f7, $02
1a792     0F 3C D8 07 
1a796     E0 F7 10 E7 
1a79a     2F 00 0F F0 
1a79e     F7 42 F9 33 | 	byte	$0f, $3c, $d8, $07, $e0, $f7, $10, $e7, $2f, $00, $0f, $f0, $f7, $42, $f9, $33
1a7a2     F0 EF F0 DF 
1a7a6     2A E0 13 F0 
1a7aa     EF 24 E0 2B 
1a7ae     00 0B 20 EB | 	byte	$f0, $ef, $f0, $df, $2a, $e0, $13, $f0, $ef, $24, $e0, $2b, $00, $0b, $20, $eb
1a7b2     31 E8 EB 04 
1a7b6     F7 18 D0 E7 
1a7ba     F8 0B 46 F4 
1a7be     1D 08 E7 00 | 	byte	$31, $e8, $eb, $04, $f7, $18, $d0, $e7, $f8, $0b, $46, $f4, $1d, $08, $e7, $00
1a7c2     ED 3F 00 FF 
1a7c6     F4 DB 18 D7 
1a7ca     1B 14 0F 08 
1a7ce     E3 3F 0A 37 | 	byte	$ed, $3f, $00, $ff, $f4, $db, $18, $d7, $1b, $14, $0f, $08, $e3, $3f, $0a, $37
1a7d2     10 EF 10 D0 
1a7d6     17 EA 0F 08 
1a7da     DF 22 E2 27 
1a7de     00 0B 28 F3 | 	byte	$10, $ef, $10, $d0, $17, $ea, $0f, $08, $df, $22, $e2, $27, $00, $0b, $28, $f3
1a7e2     35 E8 0F E2 
1a7e6     E7 25 E6 08 
1a7ea     D0 FF 28 0B 
1a7ee     38 EB 11 E0 | 	byte	$35, $e8, $0f, $e2, $e7, $25, $e6, $08, $d0, $ff, $28, $0b, $38, $eb, $11, $e0
1a7f2     E3 18 07 32 
1a7f6     D4 FF E8 F7 
1a7fa     20 F5 39 00 
1a7fe     15 04 FB 34 | 	byte	$e3, $18, $07, $32, $d4, $ff, $e8, $f7, $20, $f5, $39, $00, $15, $04, $fb, $34
1a802     E9 2B 00 FB 
1a806     00 DF 26 E0 
1a80a     0F 00 F7 22 
1a80e     E3 2F 00 0F | 	byte	$e9, $2b, $00, $fb, $00, $df, $26, $e0, $0f, $00, $f7, $22, $e3, $2f, $00, $0f
1a812     24 E5 25 E0 
1a816     EF F8 E7 23 
1a81a     F0 FF E9 F3 
1a81e     43 00 2D 20 | 	byte	$24, $e5, $25, $e0, $ef, $f8, $e7, $23, $f0, $ff, $e9, $f3, $43, $00, $2d, $20
1a822     F3 F0 CF 17 
1a826     10 1B 00 D3 
1a82a     1D D8 0F 04 
1a82e     13 28 E1 27 | 	byte	$f3, $f0, $cf, $17, $10, $1b, $00, $d3, $1d, $d8, $0f, $04, $13, $28, $e1, $27
1a832     F0 17 08 F7 
1a836     28 D7 17 E4 
1a83a     FF 10 DF 22 
1a83e     E3 2B 00 FF | 	byte	$f0, $17, $08, $f7, $28, $d7, $17, $e4, $ff, $10, $df, $22, $e3, $2b, $00, $ff
1a842     28 EF 30 E2 
1a846     13 00 DF 04 
1a84a     D7 23 08 07 
1a84e     00 E7 3F 00 | 	byte	$28, $ef, $30, $e2, $13, $00, $df, $04, $d7, $23, $08, $07, $00, $e7, $3f, $00
1a852     35 10 FD 00 
1a856     C7 17 F2 27 
1a85a     10 F7 18 D7 
1a85e     21 F0 1F 28 | 	byte	$35, $10, $fd, $00, $c7, $17, $f2, $27, $10, $f7, $18, $d7, $21, $f0, $1f, $28
1a862     F3 18 E0 27 
1a866     00 FF 20 D7 
1a86a     14 D0 FF 08 
1a86e     F7 20 D9 27 | 	byte	$f3, $18, $e0, $27, $00, $ff, $20, $d7, $14, $d0, $ff, $08, $f7, $20, $d9, $27
1a872     00 15 20 EB 
1a876     30 E8 FF 00 
1a87a     D7 12 D0 FF 
1a87e     14 FF 12 D6 | 	byte	$00, $15, $20, $eb, $30, $e8, $ff, $00, $d7, $12, $d0, $ff, $14, $ff, $12, $d6
1a882     1F 10 17 30 
1a886     E6 17 E4 DF 
1a88a     00 FB 39 E2 
1a88e     13 E8 F7 14 | 	byte	$1f, $10, $17, $30, $e6, $17, $e4, $df, $00, $fb, $39, $e2, $13, $e8, $f7, $14
1a892     EF 39 00 13 
1a896     F8 F7 38 F2 
1a89a     2F 00 FF F4 
1a89e     DD 26 E0 1F | 	byte	$ef, $39, $00, $13, $f8, $f7, $38, $f2, $2f, $00, $ff, $f4, $dd, $26, $e0, $1f
1a8a2     F4 0F 28 EF 
1a8a6     32 EA 27 00 
1a8aa     FB 28 DE 19 
1a8ae     D4 FD 28 FF | 	byte	$f4, $0f, $28, $ef, $32, $ea, $27, $00, $fb, $28, $de, $19, $d4, $fd, $28, $ff
1a8b2     10 D4 1F 10 
1a8b6     27 34 EB 0B 
1a8ba     D0 FB F0 1F 
1a8be     38 E5 1C D0 | 	byte	$10, $d4, $1f, $10, $27, $34, $eb, $0b, $d0, $fb, $f0, $1f, $38, $e5, $1c, $d0
1a8c2     0F 00 FF 36 
1a8c6     F0 22 E0 0F 
1a8ca     10 F7 30 E0 
1a8ce     17 E0 F3 08 | 	byte	$0f, $00, $ff, $36, $f0, $22, $e0, $0f, $10, $f7, $30, $e0, $17, $e0, $f3, $08
1a8d2     EB 2A E0 17 
1a8d6     00 FF 30 E8 
1a8da     2D F0 FF 18 
1a8de     DB 14 D3 FB | 	byte	$eb, $2a, $e0, $17, $00, $ff, $30, $e8, $2d, $f0, $ff, $18, $db, $14, $d3, $fb
1a8e2     24 FF F8 CD 
1a8e6     17 20 1F 32 
1a8ea     E0 01 D0 D7 
1a8ee     10 17 3A D4 | 	byte	$24, $ff, $f8, $cd, $17, $20, $1f, $32, $e0, $01, $d0, $d7, $10, $17, $3a, $d4
1a8f2     F7 F4 FB 20 
1a8f6     E3 33 08 0B 
1a8fa     00 E7 34 EA 
1a8fe     17 00 FF 14 | 	byte	$f7, $f4, $fb, $20, $e3, $33, $08, $0b, $00, $e7, $34, $ea, $17, $00, $ff, $14
1a902     C9 17 E0 1B 
1a906     10 FF 30 E9 
1a90a     2D F0 0F 10 
1a90e     E7 29 D6 0B | 	byte	$c9, $17, $e0, $1b, $10, $ff, $30, $e9, $2d, $f0, $0f, $10, $e7, $29, $d6, $0b
1a912     E8 FF 20 F0 
1a916     EC EB 2F 48 
1a91a     0B 20 D8 FF 
1a91e     E0 F7 3B 17 | 	byte	$e8, $ff, $20, $f0, $ec, $eb, $2f, $48, $0b, $20, $d8, $ff, $e0, $f7, $3b, $17
1a922     22 C4 EF 00 
1a926     FF 2A E7 2B 
1a92a     F4 FF 20 FF 
1a92e     32 E0 0F F8 | 	byte	$22, $c4, $ef, $00, $ff, $2a, $e7, $2b, $f4, $ff, $20, $ff, $32, $e0, $0f, $f8
1a932     FF 10 CB 13 
1a936     E0 0F 24 FF 
1a93a     24 E4 1F 00 
1a93e     F7 24 E5 17 | 	byte	$ff, $10, $cb, $13, $e0, $0f, $24, $ff, $24, $e4, $1f, $00, $f7, $24, $e5, $17
1a942     E0 E5 21 08 
1a946     F4 D5 F3 2D 
1a94a     3B 3C F0 E5 
1a94e     E0 D3 13 11 | 	byte	$e0, $e5, $21, $08, $f4, $d5, $f3, $2d, $3b, $3c, $f0, $e5, $e0, $d3, $13, $11
1a952     3B 10 C4 F4 
1a956     ED 2F 00 FF 
1a95a     10 E5 22 F2 
1a95e     37 20 EB 04 | 	byte	$3b, $10, $c4, $f4, $ed, $2f, $00, $ff, $10, $e5, $22, $f2, $37, $20, $eb, $04
1a962     E7 26 E4 FB 
1a966     00 DF 18 E7 
1a96a     33 10 FF 08 
1a96e     F3 34 E8 07 | 	byte	$e7, $26, $e4, $fb, $00, $df, $18, $e7, $33, $10, $ff, $08, $f3, $34, $e8, $07
1a972     E2 EE 26 10 
1a976     F0 CA F3 2B 
1a97a     3D 34 F0 ED 
1a97e     D4 E7 20 1B | 	byte	$e2, $ee, $26, $10, $f0, $ca, $f3, $2b, $3d, $34, $f0, $ed, $d4, $e7, $20, $1b
1a982     3C F0 E3 E1 
1a986     FF 34 F2 10 
1a98a     E0 0F 22 05 
1a98e     3E 00 12 E4 | 	byte	$3c, $f0, $e3, $e1, $ff, $34, $f2, $10, $e0, $0f, $22, $05, $3e, $00, $12, $e4
1a992     EB 20 05 18 
1a996     D0 F7 08 F7 
1a99a     36 00 35 00 
1a99e     F7 20 F1 08 | 	byte	$eb, $20, $05, $18, $d0, $f7, $08, $f7, $36, $00, $35, $00, $f7, $20, $f1, $08
1a9a2     D1 EF 27 20 
1a9a6     FA CC E7 1F 
1a9aa     45 38 F0 E7 
1a9ae     D8 F3 20 03 | 	byte	$d1, $ef, $27, $20, $fa, $cc, $e7, $1f, $45, $38, $f0, $e7, $d8, $f3, $20, $03
1a9b2     2E 00 CA E1 
1a9b6     FF 3D 20 EC 
1a9ba     E0 FF 3F 00 
1a9be     23 0A FF F8 | 	byte	$2e, $00, $ca, $e1, $ff, $3d, $20, $ec, $e0, $ff, $3f, $00, $23, $0a, $ff, $f8
1a9c2     E7 23 04 FD 
1a9c6     E0 E7 20 F0 
1a9ca     13 F8 17 30 
1a9ce     F7 20 E4 E3 | 	byte	$e7, $23, $04, $fd, $e0, $e7, $20, $f0, $13, $f8, $17, $30, $f7, $20, $e4, $e3
1a9d2     F2 13 22 F8 
1a9d6     D5 D5 13 53 
1a9da     3A 00 C5 FB 
1a9de     08 05 18 F0 | 	byte	$f2, $13, $22, $f8, $d5, $d5, $13, $53, $3a, $00, $c5, $fb, $08, $05, $18, $f0
1a9e2     EB D0 FB 31 
1a9e6     38 10 D0 EF 
1a9ea     23 37 10 D6 
1a9ee     07 02 21 04 | 	byte	$eb, $d0, $fb, $31, $38, $10, $d0, $ef, $23, $37, $10, $d6, $07, $02, $21, $04
1a9f2     F7 01 D7 07 
1a9f6     10 0B F4 E3 
1a9fa     2F 20 27 F4 
1a9fe     F7 00 E3 0F | 	byte	$f7, $01, $d7, $07, $10, $0b, $f4, $e3, $2f, $20, $27, $f4, $f7, $00, $e3, $0f
1aa02     1A F6 D0 DF 
1aa06     1F 52 40 F0 
1aa0a     CB 05 06 1A 
1aa0e     E8 FB 14 ED | 	byte	$1a, $f6, $d0, $df, $1f, $52, $40, $f0, $cb, $05, $06, $1a, $e8, $fb, $14, $ed
1aa12     0F 04 17 00 
1aa16     CD FF 22 36 
1aa1a     10 DC 07 17 
1aa1e     33 00 DB FF | 	byte	$0f, $04, $17, $00, $cd, $ff, $22, $36, $10, $dc, $07, $17, $33, $00, $db, $ff
1aa22     FA 1C F4 F7 
1aa26     F0 FF 3A 08 
1aa2a     15 F2 0F 08 
1aa2e     E3 17 14 FB | 	byte	$fa, $1c, $f4, $f7, $f0, $ff, $3a, $08, $15, $f2, $0f, $08, $e3, $17, $14, $fb
1aa32     DA F7 33 46 
1aa36     14 C4 DF 2B 
1aa3a     12 F8 D7 1B 
1aa3e     04 05 20 03 | 	byte	$da, $f7, $33, $46, $14, $c4, $df, $2b, $12, $f8, $d7, $1b, $04, $05, $20, $03
1aa42     F4 C7 FF 40 
1aa46     20 E8 DD 1F 
1aa4a     30 F8 D4 EB 
1aa4e     25 02 F4 D9 | 	byte	$f4, $c7, $ff, $40, $20, $e8, $dd, $1f, $30, $f8, $d4, $eb, $25, $02, $f4, $d9
1aa52     FF 24 13 18 
1aa56     FB 0D 10 FA 
1aa5a     E3 FF 20 00 
1aa5e     D0 EF 2B 4C | 	byte	$ff, $24, $13, $18, $fb, $0d, $10, $fa, $e3, $ff, $20, $00, $d0, $ef, $2b, $4c
1aa62     14 C8 EB 27 
1aa66     0C E0 F3 19 
1aa6a     04 06 21 10 
1aa6e     E0 C7 0B 3A | 	byte	$14, $c8, $eb, $27, $0c, $e0, $f3, $19, $04, $06, $21, $10, $e0, $c7, $0b, $3a
1aa72     10 E0 EF 2F 
1aa76     30 E4 D7 FB 
1aa7a     16 00 E9 F5 
1aa7e     02 14 21 23 | 	byte	$10, $e0, $ef, $2f, $30, $e4, $d7, $fb, $16, $00, $e9, $f5, $02, $14, $21, $23
1aa82     14 0A 0C D8 
1aa86     D7 17 2A 00 
1aa8a     D3 FD 3B 3C 
1aa8e     F4 CD 0F 14 | 	byte	$14, $0a, $0c, $d8, $d7, $17, $2a, $00, $d3, $fd, $3b, $3c, $f4, $cd, $0f, $14
1aa92     FC 03 08 FD 
1aa96     05 27 20 E0 
1aa9a     BF FF 35 10 
1aa9e     ED 07 31 16 | 	byte	$fc, $03, $08, $fd, $05, $27, $20, $e0, $bf, $ff, $35, $10, $ed, $07, $31, $16
1aaa2     00 F5 F6 02 
1aaa6     FD EA E1 07 
1aaaa     36 20 0A 0D 
1aaae     05 D4 C6 FF | 	byte	$00, $f5, $f6, $02, $fd, $ea, $e1, $07, $36, $20, $0a, $0d, $05, $d4, $c6, $ff
1aab2     3D 18 D6 EA 
1aab6     1D 3E 10 D0 
1aaba     E3 FB 13 24 
1aabe     FA E9 05 29 | 	byte	$3d, $18, $d6, $ea, $1d, $3e, $10, $d0, $e3, $fb, $13, $24, $fa, $e9, $05, $29
1aac2     28 F0 CC E7 
1aac6     13 25 10 FC 
1aaca     0D 2D 20 E2 
1aace     EB 09 04 F0 | 	byte	$28, $f0, $cc, $e7, $13, $25, $10, $fc, $0d, $2d, $20, $e2, $eb, $09, $04, $f0
1aad2     EF 0B 2A 28 
1aad6     1B 02 F0 D6 
1aada     C3 F7 3F 30 
1aade     EA DB FF 2B | 	byte	$ef, $0b, $2a, $28, $1b, $02, $f0, $d6, $c3, $f7, $3f, $30, $ea, $db, $ff, $2b
1aae2     30 00 D3 D6 
1aae6     FF 3A 20 E8 
1aaea     FB 1A 2A 10 
1aaee     E0 C2 E7 2F | 	byte	$30, $00, $d3, $d6, $ff, $3a, $20, $e8, $fb, $1a, $2a, $10, $e0, $c2, $e7, $2f
1aaf2     2A FA 05 1B 
1aaf6     25 11 E0 D7 
1aafa     FB 0B 01 11 
1aafe     2D 28 02 EA | 	byte	$2a, $fa, $05, $1b, $25, $11, $e0, $d7, $fb, $0b, $01, $11, $2d, $28, $02, $ea
1ab02     E0 C9 E7 27 
1ab06     50 20 D6 E3 
1ab0a     07 33 20 E0 
1ab0e     C7 0F 2C 09 | 	byte	$e0, $c9, $e7, $27, $50, $20, $d6, $e3, $07, $33, $20, $e0, $c7, $0f, $2c, $09
1ab12     F1 05 19 31 
1ab16     14 E0 BD EF 
1ab1a     27 20 F7 FF 
1ab1e     1D 28 00 CA | 	byte	$f1, $05, $19, $31, $14, $e0, $bd, $ef, $27, $20, $f7, $ff, $1d, $28, $00, $ca
1ab22     DB 12 18 10 
1ab26     14 23 0A E0 
1ab2a     D5 E8 F1 17 
1ab2e     45 2A E4 C7 | 	byte	$db, $12, $18, $10, $14, $23, $0a, $e0, $d5, $e8, $f1, $17, $45, $2a, $e4, $c7
1ab32     EF 17 38 10 
1ab36     C9 F3 18 10 
1ab3a     02 01 15 27 
1ab3e     2A F8 C8 C7 | 	byte	$ef, $17, $38, $10, $c9, $f3, $18, $10, $02, $01, $15, $27, $2a, $f8, $c8, $c7
1ab42     F5 25 20 04 
1ab46     07 22 20 F4 
1ab4a     D0 D3 17 35 
1ab4e     22 16 10 F0 | 	byte	$f5, $25, $20, $04, $07, $22, $20, $f4, $d0, $d3, $17, $35, $22, $16, $10, $f0
1ab52     D2 E1 1B 20 
1ab56     01 1F 26 F4 
1ab5a     C8 E7 13 3D 
1ab5e     38 F0 DF FF | 	byte	$d2, $e1, $1b, $20, $01, $1f, $26, $f4, $c8, $e7, $13, $3d, $38, $f0, $df, $ff
1ab62     FF 10 10 17 
1ab66     23 14 E8 D0 
1ab6a     CE FF 2D 28 
1ab6e     16 17 09 E8 | 	byte	$ff, $10, $10, $17, $23, $14, $e8, $d0, $ce, $ff, $2d, $28, $16, $17, $09, $e8
1ab72     D4 D7 0B 33 
1ab76     3D 20 F0 D5 
1ab7a     D4 F3 27 3C 
1ab7e     00 D7 0E 20 | 	byte	$d4, $d7, $0b, $33, $3d, $20, $f0, $d5, $d4, $f3, $27, $3c, $00, $d7, $0e, $20
1ab82     F8 D9 F9 1F 
1ab86     3F 20 D2 DF 
1ab8a     05 1C 0A F7 
1ab8e     0F 29 08 E2 | 	byte	$f8, $d9, $f9, $1f, $3f, $20, $d2, $df, $05, $1c, $0a, $f7, $0f, $29, $08, $e2
1ab92     C8 ED 26 36 
1ab96     26 0A 01 F2 
1ab9a     E3 E0 FF 25 
1ab9e     3F 30 F8 D7 | 	byte	$c8, $ed, $26, $36, $26, $0a, $01, $f2, $e3, $e0, $ff, $25, $3f, $30, $f8, $d7
1aba2     D7 EA 07 2A 
1aba6     20 E2 D7 13 
1abaa     2A 00 E0 F7 
1abae     17 35 18 E0 | 	byte	$d7, $ea, $07, $2a, $20, $e2, $d7, $13, $2a, $00, $e0, $f7, $17, $35, $18, $e0
1abb2     DF 07 12 05 
1abb6     FF 1B 29 04 
1abba     E8 D5 FB 2E 
1abbe     28 19 07 FC | 	byte	$df, $07, $12, $05, $ff, $1b, $29, $04, $e8, $d5, $fb, $2e, $28, $19, $07, $fc
1abc2     F0 E4 ED 09 
1abc6     2A 34 08 E0 
1abca     DA EA FF 16 
1abce     28 00 D4 F7 | 	byte	$f0, $e4, $ed, $09, $2a, $34, $08, $e0, $da, $ea, $ff, $16, $28, $00, $d4, $f7
1abd2     2E 15 E6 ED 
1abd6     0E 33 20 E0 
1abda     D7 0D 16 00 
1abde     F9 16 30 0C | 	byte	$2e, $15, $e6, $ed, $0e, $33, $20, $e0, $d7, $0d, $16, $00, $f9, $16, $30, $0c
1abe2     E8 D5 F7 27 
1abe6     24 1A 0A F7 
1abea     E8 D8 EB 17 
1abee     37 36 00 D8 | 	byte	$e8, $d5, $f7, $27, $24, $1a, $0a, $f7, $e8, $d8, $eb, $17, $37, $36, $00, $d8
1abf2     DC E9 0A 25 
1abf6     20 F0 D5 0B 
1abfa     32 10 E0 F2 
1abfe     17 3E 20 D8 | 	byte	$dc, $e9, $0a, $25, $20, $f0, $d5, $0b, $32, $10, $e0, $f2, $17, $3e, $20, $d8
1ac02     E3 17 0C F8 
1ac06     FB 17 34 10 
1ac0a     E2 CE F7 27 
1ac0e     19 0E 15 02 | 	byte	$e3, $17, $0c, $f8, $fb, $17, $34, $10, $e2, $ce, $f7, $27, $19, $0e, $15, $02
1ac12     EC DA E7 13 
1ac16     31 36 08 E0 
1ac1a     DD EA 07 23 
1ac1e     20 00 D5 F7 | 	byte	$ec, $da, $e7, $13, $31, $36, $08, $e0, $dd, $ea, $07, $23, $20, $00, $d5, $f7
1ac22     34 20 E8 EB 
1ac26     0F 37 20 D8 
1ac2a     DF 15 08 F8 
1ac2e     FF 21 30 00 | 	byte	$34, $20, $e8, $eb, $0f, $37, $20, $d8, $df, $15, $08, $f8, $ff, $21, $30, $00
1ac32     D2 DB 13 28 
1ac36     05 11 16 FC 
1ac3a     E4 DB FF 2B 
1ac3e     32 20 E8 D7 | 	byte	$d2, $db, $13, $28, $05, $11, $16, $fc, $e4, $db, $ff, $2b, $32, $20, $e8, $d7
1ac42     E5 FF 22 20 
1ac46     04 D0 E7 27 
1ac4a     20 E8 E5 0F 
1ac4e     3D 24 D2 DF | 	byte	$e5, $ff, $22, $20, $04, $d0, $e7, $27, $20, $e8, $e5, $0f, $3d, $24, $d2, $df
1ac52     1A 04 F0 FD 
1ac56     21 32 01 D0 
1ac5a     DF 1B 20 FE 
1ac5e     0E 22 04 E6 | 	byte	$1a, $04, $f0, $fd, $21, $32, $01, $d0, $df, $1b, $20, $fe, $0e, $22, $04, $e6
1ac62     DB FF 25 27 
1ac66     1B 00 E0 E0 
1ac6a     EB 0F 2F 20 
1ac6e     EA D3 FF 37 | 	byte	$db, $ff, $25, $27, $1b, $00, $e0, $e0, $eb, $0f, $2f, $20, $ea, $d3, $ff, $37
1ac72     18 E0 E5 0F 
1ac76     37 18 D0 EB 
1ac7a     24 02 EB 05 
1ac7e     2F 34 00 CA | 	byte	$18, $e0, $e5, $0f, $37, $18, $d0, $eb, $24, $02, $eb, $05, $2f, $34, $00, $ca
1ac82     FF 17 00 FB 
1ac86     1F 29 00 D8 
1ac8a     EB 1F 28 18 
1ac8e     20 00 D2 D7 | 	byte	$ff, $17, $00, $fb, $1f, $29, $00, $d8, $eb, $1f, $28, $18, $20, $00, $d2, $d7
1ac92     07 2D 20 0C 
1ac96     E8 DD 17 22 
1ac9a     F0 D7 FF 37 
1ac9e     28 E0 E7 18 | 	byte	$07, $2d, $20, $0c, $e8, $dd, $17, $22, $f0, $d7, $ff, $37, $28, $e0, $e7, $18
1aca2     00 ED 0A 2F 
1aca6     30 F0 C7 07 
1acaa     05 F7 07 2A 
1acae     30 F4 CD FB | 	byte	$00, $ed, $0a, $2f, $30, $f0, $c7, $07, $05, $f7, $07, $2a, $30, $f4, $cd, $fb
1acb2     07 05 15 2E 
1acb6     12 E0 D5 FF 
1acba     19 12 14 04 
1acbe     D0 EF 2E 12 | 	byte	$07, $05, $15, $2e, $12, $e0, $d5, $ff, $19, $12, $14, $04, $d0, $ef, $2e, $12
1acc2     DB EB 23 34 
1acc6     F0 CF 13 10 
1acca     E3 F7 25 3F 
1acce     10 CB FF 14 | 	byte	$db, $eb, $23, $34, $f0, $cf, $13, $10, $e3, $f7, $25, $3f, $10, $cb, $ff, $14
1acd2     E8 F2 17 3A 
1acd6     20 D0 EF 10 
1acda     EC FB 1C 33 
1acde     12 D8 EF 02 | 	byte	$e8, $f2, $17, $3a, $20, $d0, $ef, $10, $ec, $fb, $1c, $33, $12, $d8, $ef, $02
1ace2     FE 1B 30 00 
1ace6     CB FB 2B 02 
1acea     DA FF 37 20 
1acee     D6 FF 1A F0 | 	byte	$fe, $1b, $30, $00, $cb, $fb, $2b, $02, $da, $ff, $37, $20, $d6, $ff, $1a, $f0
1acf2     E1 0F 3F 14 
1acf6     DA 0B 16 E9 
1acfa     EB 1B 37 10 
1acfe     ED 0F 04 DC | 	byte	$e1, $0f, $3f, $14, $da, $0b, $16, $e9, $eb, $1b, $37, $10, $ed, $0f, $04, $dc
1ad02     FB 25 30 12 
1ad06     EB F7 E6 F7 
1ad0a     23 2C 00 E3 
1ad0e     17 0B DA E6 | 	byte	$fb, $25, $30, $12, $eb, $f7, $e6, $f7, $23, $2c, $00, $e3, $17, $0b, $da, $e6
1ad12     1F 32 F4 F3 
1ad16     18 00 D3 F7 
1ad1a     2B 18 FB 0E 
1ad1e     08 E4 D6 0F | 	byte	$1f, $32, $f4, $f3, $18, $00, $d3, $f7, $2b, $18, $fb, $0e, $08, $e4, $d6, $0f
1ad22     22 1A 15 14 
1ad26     F8 D5 E7 0A 
1ad2a     17 2C 20 00 
1ad2e     E2 E0 F9 17 | 	byte	$22, $1a, $15, $14, $f8, $d5, $e7, $0a, $17, $2c, $20, $00, $e2, $e0, $f9, $17
1ad32     18 01 13 10 
1ad36     E4 C9 FF 2D 
1ad3a     09 FF 16 00 
1ad3e     E0 DB 1B 1A | 	byte	$18, $01, $13, $10, $e4, $c9, $ff, $2d, $09, $ff, $16, $00, $e0, $db, $1b, $1a
1ad42     10 16 18 F8 
1ad46     D3 E7 05 0D 
1ad4a     2B 2B 14 FC 
1ad4e     E0 D9 E7 0F | 	byte	$10, $16, $18, $f8, $d3, $e7, $05, $0d, $2b, $2b, $14, $fc, $e0, $d9, $e7, $0f
1ad52     2E 20 22 02 
1ad56     DA E7 FB FF 
1ad5a     1B 35 08 C9 
1ad5e     F7 25 F4 FF | 	byte	$2e, $20, $22, $02, $da, $e7, $fb, $ff, $1b, $35, $08, $c9, $f7, $25, $f4, $ff
1ad62     26 12 E2 F6 
1ad66     20 00 11 2F 
1ad6a     1A F8 EA EA 
1ad6e     E2 FF 2B 18 | 	byte	$26, $12, $e2, $f6, $20, $00, $11, $2f, $1a, $f8, $ea, $ea, $e2, $ff, $2b, $18
1ad72     15 16 F2 E2 
1ad76     F2 F8 FF 1A 
1ad7a     24 10 0D 05 
1ad7e     EB E0 FF 27 | 	byte	$15, $16, $f2, $e2, $f2, $f8, $ff, $1a, $24, $10, $0d, $05, $eb, $e0, $ff, $27
1ad82     00 E7 1F 08 
1ad86     EF 15 20 F4 
1ad8a     E3 0B 08 FE 
1ad8e     1F 21 FE 09 | 	byte	$00, $e7, $1f, $08, $ef, $15, $20, $f4, $e3, $0b, $08, $fe, $1f, $21, $fe, $09
1ad92     01 E4 E1 FF 
1ad96     12 10 19 20 
1ad9a     01 FF F9 DC 
1ad9e     F1 FC FD 13 | 	byte	$01, $e4, $e1, $ff, $12, $10, $19, $20, $01, $ff, $f9, $dc, $f1, $fc, $fd, $13
1ada2     23 20 10 10 
1ada6     EA DF 13 00 
1adaa     E0 17 24 F7 
1adae     0F 20 F1 EB | 	byte	$23, $20, $10, $10, $ea, $df, $13, $00, $e0, $17, $24, $f7, $0f, $20, $f1, $eb
1adb2     06 00 F5 15 
1adb6     20 00 0F 0C 
1adba     E4 F3 10 FB 
1adbe     FF 16 11 09 | 	byte	$06, $00, $f5, $15, $20, $00, $0f, $0c, $e4, $f3, $10, $fb, $ff, $16, $11, $09
1adc2     0B F8 F5 06 
1adc6     00 F5 03 08 
1adca     07 17 1A 02 
1adce     F6 02 00 F0 | 	byte	$0b, $f8, $f5, $06, $00, $f5, $03, $08, $07, $17, $1a, $02, $f6, $02, $00, $f0
1add2     FD 11 00 FB 
1add6     0B 0B 01 FD 
1adda     09 15 08 00 
1adde     05 08 FD F6 | 	byte	$fd, $11, $00, $fb, $0b, $0b, $01, $fd, $09, $15, $08, $00, $05, $08, $fd, $f6
1ade2     FF 0A 01 07 
1ade6     0B 0A 02 FE 
1adea     01 07 06 04 
1adee     06 02 01 FE | 	byte	$ff, $0a, $01, $07, $0b, $0a, $02, $fe, $01, $07, $06, $04, $06, $02, $01, $fe
1adf2     FF 02 02 00 
1adf6     04 07 02 FF 
1adfa     02 09 0B 04 
1adfe     05 05 01 05 | 	byte	$ff, $02, $02, $00, $04, $07, $02, $ff, $02, $09, $0b, $04, $05, $05, $01, $05
1ae02     00 FD 05 00 
1ae06     03 08 06 05 
1ae0a     01 02 09 08 
1ae0e     08 00 FB 0A | 	byte	$00, $fd, $05, $00, $03, $08, $06, $05, $01, $02, $09, $08, $08, $00, $fb, $0a
1ae12     0C 00 00 09 
1ae16     0A 02 F9 03 
1ae1a     0A 10 05 04 
1ae1e     FF FE 07 06 | 	byte	$0c, $00, $00, $09, $0a, $02, $f9, $03, $0a, $10, $05, $04, $ff, $fe, $07, $06
1ae22     08 08 05 FD 
1ae26     01 0A 0B 02 
1ae2a     FF 03 04 01 
1ae2e     FD 0A 0A 02 | 	byte	$08, $08, $05, $fd, $01, $0a, $0b, $02, $ff, $03, $04, $01, $fd, $0a, $0a, $02
1ae32     00 03 08 01 
1ae36     FF 04 02 05 
1ae3a     0A 03 04 08 
1ae3e     05 FD 01 FF | 	byte	$00, $03, $08, $01, $ff, $04, $02, $05, $0a, $03, $04, $08, $05, $fd, $01, $ff
1ae42     FE 04 0B 04 
1ae46     FF 02 03 0B 
1ae4a     0A 00 F6 FB 
1ae4e     09 05 08 00 | 	byte	$fe, $04, $0b, $04, $ff, $02, $03, $0b, $0a, $00, $f6, $fb, $09, $05, $08, $00
1ae52     05 04 01 02 
1ae56     02 06 0A 0B 
1ae5a     01 05 00 F9 
1ae5e     FF 01 00 03 | 	byte	$05, $04, $01, $02, $02, $06, $0a, $0b, $01, $05, $00, $f9, $ff, $01, $00, $03
1ae62     10 06 07 06 
1ae66     03 03 FD 00 
1ae6a     FE FF 04 01 
1ae6e     01 03 05 04 | 	byte	$10, $06, $07, $06, $03, $03, $fd, $00, $fe, $ff, $04, $01, $01, $03, $05, $04
1ae72     08 07 06 FE 
1ae76     FF 08 0D 08 
1ae7a     F9 03 0A 00 
1ae7e     03 07 08 02 | 	byte	$08, $07, $06, $fe, $ff, $08, $0d, $08, $f9, $03, $0a, $00, $03, $07, $08, $02
1ae82     FF 0B 0C 02 
1ae86     FC 05 0E 0D 
1ae8a     FC FE 0A 06 
1ae8e     03 F8 FF 10 | 	byte	$ff, $0b, $0c, $02, $fc, $05, $0e, $0d, $fc, $fe, $0a, $06, $03, $f8, $ff, $10
1ae92     0D 00 F7 07 
1ae96     03 02 04 0C 
1ae9a     07 00 FC 01 
1ae9e     03 05 06 08 | 	byte	$0d, $00, $f7, $07, $03, $02, $04, $0c, $07, $00, $fc, $01, $03, $05, $06, $08
1aea2     0A 00 F9 09 
1aea6     06 01 FB 07 
1aeaa     0D 03 01 06 
1aeae     10 04 FF 07 | 	byte	$0a, $00, $f9, $09, $06, $01, $fb, $07, $0d, $03, $01, $06, $10, $04, $ff, $07
1aeb2     04 F8 02 06 
1aeb6     01 FF 06 06 
1aeba     05 06 03 FE 
1aebe     FF 08 09 02 | 	byte	$04, $f8, $02, $06, $01, $ff, $06, $06, $05, $06, $03, $fe, $ff, $08, $09, $02
1aec2     00 06 08 07 
1aec6     04 FC 0B 0D 
1aeca     F9 F5 02 06 
1aece     00 FA 04 0D | 	byte	$00, $06, $08, $07, $04, $fc, $0b, $0d, $f9, $f5, $02, $06, $00, $fa, $04, $0d
1aed2     08 FF 04 08 
1aed6     04 03 02 FF 
1aeda     FF 02 FF 12 
1aede     08 05 FB FE | 	byte	$08, $ff, $04, $08, $04, $03, $02, $ff, $ff, $02, $ff, $12, $08, $05, $fb, $fe
1aee2     09 09 05 00 
1aee6     FF 0B 0A 00 
1aeea     04 08 05 FF 
1aeee     FD 00 07 05 | 	byte	$09, $09, $05, $00, $ff, $0b, $0a, $00, $04, $08, $05, $ff, $fd, $00, $07, $05
1aef2     00 06 10 01 
1aef6     FD 06 02 01 
1aefa     FF 07 14 01 
1aefe     F5 FE 0A 0B | 	byte	$00, $06, $10, $01, $fd, $06, $02, $01, $ff, $07, $14, $01, $f5, $fe, $0a, $0b
1af02     05 01 04 01 
1af06     FA 07 08 0C 
1af0a     11 FE FB FF 
1af0e     0D 08 FE FC | 	byte	$05, $01, $04, $01, $fa, $07, $08, $0c, $11, $fe, $fb, $ff, $0d, $08, $fe, $fc
1af12     06 06 04 00 
1af16     03 0A 05 FF 
1af1a     09 08 FF 01 
1af1e     04 07 FC FF | 	byte	$06, $06, $04, $00, $03, $0a, $05, $ff, $09, $08, $ff, $01, $04, $07, $fc, $ff
1af22     0B 04 08 06 
1af26     00 0D 10 FE 
1af2a     FF FF 03 10 
1af2e     00 FD 03 00 | 	byte	$0b, $04, $08, $06, $00, $0d, $10, $fe, $ff, $ff, $03, $10, $00, $fd, $03, $00
1af32     06 00 FC 05 
1af36     06 01 0C 03 
1af3a     F7 FD 0D 0A 
1af3e     FF 03 06 02 | 	byte	$06, $00, $fc, $05, $06, $01, $0c, $03, $f7, $fd, $0d, $0a, $ff, $03, $06, $02
1af42     05 06 F9 03 
1af46     09 05 04 FC 
1af4a     0B 10 09 00 
1af4e     EE 0B 14 F3 | 	byte	$05, $06, $f9, $03, $09, $05, $04, $fc, $0b, $10, $09, $00, $ee, $0b, $14, $f3
1af52     FF 09 07 11 
1af56     08 F7 02 00 
1af5a     0A 12 F8 FB 
1af5e     12 01 F8 07 | 	byte	$ff, $09, $07, $11, $08, $f7, $02, $00, $0a, $12, $f8, $fb, $12, $01, $f8, $07
1af62     06 FD 04 FD 
1af66     FF 09 00 FF 
1af6a     0B 0B 11 F9 
1af6e     F9 10 FA FF | 	byte	$06, $fd, $04, $fd, $ff, $09, $00, $ff, $0b, $0b, $11, $f9, $f9, $10, $fa, $ff
1af72     08 05 10 00 
1af76     F8 02 05 17 
1af7a     00 EA 1B 20 
1af7e     E0 FF 10 FF | 	byte	$08, $05, $10, $00, $f8, $02, $05, $17, $00, $ea, $1b, $20, $e0, $ff, $10, $ff
1af82     1A F4 EF 21 
1af86     00 F7 16 03 
1af8a     0E 08 F0 FF 
1af8e     15 F8 FB 14 | 	byte	$1a, $f4, $ef, $21, $00, $f7, $16, $03, $0e, $08, $f0, $ff, $15, $f8, $fb, $14
1af92     01 06 10 FC 
1af96     03 09 FD 0A 
1af9a     00 F5 0D 02 
1af9e     FF 11 0B 00 | 	byte	$01, $06, $10, $fc, $03, $09, $fd, $0a, $00, $f5, $0d, $02, $ff, $11, $0b, $00
1afa2     F5 12 14 F0 
1afa6     0D 10 F3 1F 
1afaa     08 E3 14 F8 
1afae     F7 26 04 06 | 	byte	$f5, $12, $14, $f0, $0d, $10, $f3, $1f, $08, $e3, $14, $f8, $f7, $26, $04, $06
1afb2     19 04 FD 0B 
1afb6     F2 FA 02 F9 
1afba     03 10 06 15 
1afbe     10 F4 19 00 | 	byte	$19, $04, $fd, $0b, $f2, $fa, $02, $f9, $03, $10, $06, $15, $10, $f4, $19, $00
1afc2     F3 03 F8 FF 
1afc6     03 F4 13 00 
1afca     E9 0F 2A E0 
1afce     DF 31 F0 EF | 	byte	$f3, $03, $f8, $ff, $03, $f4, $13, $00, $e9, $0f, $2a, $e0, $df, $31, $f0, $ef
1afd2     30 E4 FF 10 
1afd6     D3 0F 22 EC 
1afda     13 2A F8 FD 
1afde     00 E7 FB 10 | 	byte	$30, $e4, $ff, $10, $d3, $0f, $22, $ec, $13, $2a, $f8, $fd, $00, $e7, $fb, $10
1afe2     E0 0F 20 F3 
1afe6     17 16 FF 17 
1afea     00 EB FD F5 
1afee     F5 0D 0C 06 | 	byte	$e0, $0f, $20, $f3, $17, $16, $ff, $17, $00, $eb, $fd, $f5, $f5, $0d, $0c, $06
1aff2     00 FF 2F 10 
1aff6     C9 0F 20 DA 
1affa     1F 10 D3 17 
1affe     10 DC 17 2C | 	byte	$00, $ff, $2f, $10, $c9, $0f, $20, $da, $1f, $10, $d3, $17, $10, $dc, $17, $2c
1b002     04 FF 27 00 
1b006     EB 10 E4 EB 
1b00a     22 F4 FF 32 
1b00e     08 05 1C 08 | 	byte	$04, $ff, $27, $00, $eb, $10, $e4, $eb, $22, $f4, $ff, $32, $08, $05, $1c, $08
1b012     F7 0B F4 EF 
1b016     10 F8 0B 26 
1b01a     00 EF 27 2A 
1b01e     D0 E7 30 E0 | 	byte	$f7, $0b, $f4, $ef, $10, $f8, $0b, $26, $00, $ef, $27, $2a, $d0, $e7, $30, $e0
1b022     F7 36 E2 FF 
1b026     2A F0 FB 2B 
1b02a     10 EB 25 10 
1b02e     C8 0F 04 C3 | 	byte	$f7, $36, $e2, $ff, $2a, $f0, $fb, $2b, $10, $eb, $25, $10, $c8, $0f, $04, $c3
1b032     17 12 EF 27 
1b036     30 FC FE 22 
1b03a     E2 E7 13 D4 
1b03e     F7 20 F1 1F | 	byte	$17, $12, $ef, $27, $30, $fc, $fe, $22, $e2, $e7, $13, $d4, $f7, $20, $f1, $1f
1b042     24 F0 07 3C 
1b046     E0 AB 13 04 
1b04a     CD 2F 20 DF 
1b04e     2F 20 E4 FF | 	byte	$24, $f0, $07, $3c, $e0, $ab, $13, $04, $cd, $2f, $20, $df, $2f, $20, $e4, $ff
1b052     3D 00 E1 27 
1b056     00 B7 13 08 
1b05a     D1 17 30 FA 
1b05e     FB 39 10 D5 | 	byte	$3d, $00, $e1, $27, $00, $b7, $13, $08, $d1, $17, $30, $fa, $fb, $39, $10, $d5
1b062     0F 08 C7 0F 
1b066     10 DB 0F 20 
1b06a     F9 15 40 F0 
1b06e     DF 1E F8 A7 | 	byte	$0f, $08, $c7, $0f, $10, $db, $0f, $20, $f9, $15, $40, $f0, $df, $1e, $f8, $a7
1b072     FF 2A E2 27 
1b076     4A F0 FF 30 
1b07a     F0 E3 2F 20 
1b07e     D1 0F 20 C4 | 	byte	$ff, $2a, $e2, $27, $4a, $f0, $ff, $30, $f0, $e3, $2f, $20, $d1, $0f, $20, $c4
1b082     FF 2A E9 0F 
1b086     3E 08 F1 2F 
1b08a     20 C1 FF 10 
1b08e     D0 17 18 E4 | 	byte	$ff, $2a, $e9, $0f, $3e, $08, $f1, $2f, $20, $c1, $ff, $10, $d0, $17, $18, $e4
1b092     FF 30 02 FB 
1b096     32 00 C2 FF 
1b09a     18 D4 CF 3F 
1b09e     20 F7 3F 20 | 	byte	$ff, $30, $02, $fb, $32, $00, $c2, $ff, $18, $d4, $cf, $3f, $20, $f7, $3f, $20
1b0a2     CD 0F 12 E0 
1b0a6     E3 3B 10 DB 
1b0aa     2B 10 D3 23 
1b0ae     10 F0 FD 37 | 	byte	$cd, $0f, $12, $e0, $e3, $3b, $10, $db, $2b, $10, $d3, $23, $10, $f0, $fd, $37
1b0b2     08 E6 23 00 
1b0b6     CD 0F 00 E5 
1b0ba     0F 18 00 F3 
1b0be     2E 18 F2 17 | 	byte	$08, $e6, $23, $00, $cd, $0f, $00, $e5, $0f, $18, $00, $f3, $2e, $18, $f2, $17
1b0c2     08 E0 D2 FB 
1b0c6     24 00 D3 2F 
1b0ca     30 F4 1F 38 
1b0ce     E8 CE 0F 04 | 	byte	$08, $e0, $d2, $fb, $24, $00, $d3, $2f, $30, $f4, $1f, $38, $e8, $ce, $0f, $04
1b0d2     DC 07 34 E4 
1b0d6     FF 26 E8 F3 
1b0da     20 0C F5 0F 
1b0de     34 F8 FF 22 | 	byte	$dc, $07, $34, $e4, $ff, $26, $e8, $f3, $20, $0c, $f5, $0f, $34, $f8, $ff, $22
1b0e2     D8 DF 11 FC 
1b0e6     EF 17 20 F6 
1b0ea     13 20 F6 0F 
1b0ee     10 F0 E4 D7 | 	byte	$d8, $df, $11, $fc, $ef, $17, $20, $f6, $13, $20, $f6, $0f, $10, $f0, $e4, $d7
1b0f2     17 20 E4 F7 
1b0f6     3F 08 F5 32 
1b0fa     08 D0 FB 10 
1b0fe     E8 EB 2F 00 | 	byte	$17, $20, $e4, $f7, $3f, $08, $f5, $32, $08, $d0, $fb, $10, $e8, $eb, $2f, $00
1b102     EB 27 00 DB 
1b106     1B 14 00 F5 
1b10a     2D 08 E7 17 
1b10e     E8 E7 0C 00 | 	byte	$eb, $27, $00, $db, $1b, $14, $00, $f5, $2d, $08, $e7, $17, $e8, $e7, $0c, $00
1b112     FB FB 1B 04 
1b116     FB 29 00 FF 
1b11a     08 FA 00 F0 
1b11e     E6 EF 21 10 | 	byte	$fb, $fb, $1b, $04, $fb, $29, $00, $ff, $08, $fa, $00, $f0, $e6, $ef, $21, $10
1b122     E5 2F 38 EC 
1b126     1B 14 F6 E4 
1b12a     EF 13 EA FD 
1b12e     2E F8 07 12 | 	byte	$e5, $2f, $38, $ec, $1b, $14, $f6, $e4, $ef, $13, $ea, $fd, $2e, $f8, $07, $12
1b132     FF 0C 08 14 
1b136     00 FB 22 00 
1b13a     FF 00 F7 FF 
1b13e     F9 04 00 06 | 	byte	$ff, $0c, $08, $14, $00, $fb, $22, $00, $ff, $00, $f7, $ff, $f9, $04, $00, $06
1b142     14 06 1B 11 
1b146     F8 03 02 06 
1b14a     F4 F7 0C 06 
1b14e     10 05 09 08 | 	byte	$14, $06, $1b, $11, $f8, $03, $02, $06, $f4, $f7, $0c, $06, $10, $05, $09, $08
1b152     01 08 07 03 
1b156     08 00 02 04 
1b15a     04 F4 FB 14 
1b15e     FB 09 20 00 | 	byte	$01, $08, $07, $03, $08, $00, $02, $04, $04, $f4, $fb, $14, $fb, $09, $20, $00
1b162     FB 0B 06 FC 
1b166     FF 00 FD 01 
1b16a     FB FB 07 06 
1b16e     FE 01 0D 08 | 	byte	$fb, $0b, $06, $fc, $ff, $00, $fd, $01, $fb, $fb, $07, $06, $fe, $01, $0d, $08
1b172     01 0B 06 FA 
1b176     01 00 02 FF 
1b17a     07 00 FA 05 
1b17e     FE 01 05 0B | 	byte	$01, $0b, $06, $fa, $01, $00, $02, $ff, $07, $00, $fa, $05, $fe, $01, $05, $0b
1b182     01 07 0A 02 
1b186     02 01 09 00 
1b18a     F9 FD FD 04 
1b18e     FD 09 05 FD | 	byte	$01, $07, $0a, $02, $02, $01, $09, $00, $f9, $fd, $fd, $04, $fd, $09, $05, $fd
1b192     0A 07 FD 09 
1b196     09 01 07 FC 
1b19a     03 05 FC 06 
1b19e     04 0B 05 02 | 	byte	$0a, $07, $fd, $09, $09, $01, $07, $fc, $03, $05, $fc, $06, $04, $0b, $05, $02
1b1a2     07 08 02 06 
1b1a6     04 05 05 0B 
1b1aa     03 02 0D 0A 
1b1ae     00 07 09 06 | 	byte	$07, $08, $02, $06, $04, $05, $05, $0b, $03, $02, $0d, $0a, $00, $07, $09, $06
1b1b2     FE FF 0B FD 
1b1b6     03 11 12 04 
1b1ba     FC 06 00 FF 
1b1be     0B 0C 02 01 | 	byte	$fe, $ff, $0b, $fd, $03, $11, $12, $04, $fc, $06, $00, $ff, $0b, $0c, $02, $01
1b1c2     FB 01 FF 0A 
1b1c6     04 09 FC 02 
1b1ca     01 0A 02 F7 
1b1ce     09 06 02 02 | 	byte	$fb, $01, $ff, $0a, $04, $09, $fc, $02, $01, $0a, $02, $f7, $09, $06, $02, $02
1b1d2     10 0A FE F9 
1b1d6     05 00 F8 FE 
1b1da     0D 04 05 0C 
1b1de     00 07 09 F8 | 	byte	$10, $0a, $fe, $f9, $05, $00, $f8, $fe, $0d, $04, $05, $0c, $00, $07, $09, $f8
1b1e2     FE 07 00 FB 
1b1e6     05 0C 04 02 
1b1ea     0B 00 F4 07 
1b1ee     10 02 FE 01 | 	byte	$fe, $07, $00, $fb, $05, $0c, $04, $02, $0b, $00, $f4, $07, $10, $02, $fe, $01
1b1f2     05 FC 01 07 
1b1f6     10 08 F9 FF 
1b1fa     0B 07 FD 07 
1b1fe     09 00 FB 07 | 	byte	$05, $fc, $01, $07, $10, $08, $f9, $ff, $0b, $07, $fd, $07, $09, $00, $fb, $07
1b202     0C 09 0A 0D 
1b206     10 FD FA FF 
1b20a     0C 0C 08 03 
1b20e     0B 02 00 FE | 	byte	$0c, $09, $0a, $0d, $10, $fd, $fa, $ff, $0c, $0c, $08, $03, $0b, $02, $00, $fe
1b212     01 0A 0A 05 
1b216     08 09 06 FF 
1b21a     03 06 07 FC 
1b21e     FF 03 09 09 | 	byte	$01, $0a, $0a, $05, $08, $09, $06, $ff, $03, $06, $07, $fc, $ff, $03, $09, $09
1b222     00 01 05 06 
1b226     01 F7 FF 0D 
1b22a     05 06 FE FB 
1b22e     07 07 FD 05 | 	byte	$00, $01, $05, $06, $01, $f7, $ff, $0d, $05, $06, $fe, $fb, $07, $07, $fd, $05
1b232     0E 04 F8 FF 
1b236     FC FB 02 09 
1b23a     0C 05 04 FE 
1b23e     01 FE FE 0E | 	byte	$0e, $04, $f8, $ff, $fc, $fb, $02, $09, $0c, $05, $04, $fe, $01, $fe, $fe, $0e
1b242     05 01 0A 02 
1b246     F8 FF 0D 08 
1b24a     F2 F4 0B 10 
1b24e     FD FF 04 FE | 	byte	$05, $01, $0a, $02, $f8, $ff, $0d, $08, $f2, $f4, $0b, $10, $fd, $ff, $04, $fe
1b252     05 0A 07 02 
1b256     04 00 FA FB 
1b25a     FE FF 03 0D 
1b25e     05 01 01 03 | 	byte	$05, $0a, $07, $02, $04, $00, $fa, $fb, $fe, $ff, $03, $0d, $05, $01, $01, $03
1b262     0E 0D 04 FF 
1b266     0B 10 04 FD 
1b26a     03 04 04 0E 
1b26e     02 07 15 04 | 	byte	$0e, $0d, $04, $ff, $0b, $10, $04, $fd, $03, $04, $04, $0e, $02, $07, $15, $04
1b272     00 FF 0A 00 
1b276     FD 0B 0D 04 
1b27a     08 10 08 07 
1b27e     04 FF 0B 0B | 	byte	$00, $ff, $0a, $00, $fd, $0b, $0d, $04, $08, $10, $08, $07, $04, $ff, $0b, $0b
1b282     FE F7 04 06 
1b286     0C 04 F8 07 
1b28a     10 05 FB 02 
1b28e     07 05 01 07 | 	byte	$fe, $f7, $04, $06, $0c, $04, $f8, $07, $10, $05, $fb, $02, $07, $05, $01, $07
1b292     03 09 09 02 
1b296     01 04 02 02 
1b29a     00 F9 04 02 
1b29e     FF 00 02 10 | 	byte	$03, $09, $09, $02, $01, $04, $02, $02, $00, $f9, $04, $02, $ff, $00, $02, $10
1b2a2     08 05 06 06 
1b2a6     03 FF F9 02 
1b2aa     08 FA FE 01 
1b2ae     05 0E 02 FF | 	byte	$08, $05, $06, $06, $03, $ff, $f9, $02, $08, $fa, $fe, $01, $05, $0e, $02, $ff
1b2b2     05 07 0B 00 
1b2b6     FC 01 04 FF 
1b2ba     FE 02 04 05 
1b2be     01 FC FF 0C | 	byte	$05, $07, $0b, $00, $fc, $01, $04, $ff, $fe, $02, $04, $05, $01, $fc, $ff, $0c
1b2c2     08 05 04 07 
1b2c6     00 FB 02 03 
1b2ca     0A 06 0D 04 
1b2ce     01 0B 0A 06 | 	byte	$08, $05, $04, $07, $00, $fb, $02, $03, $0a, $06, $0d, $04, $01, $0b, $0a, $06
1b2d2     01 03 06 06 
1b2d6     00 01 00 03 
1b2da     0A 04 0A 0A 
1b2de     07 0A 01 05 | 	byte	$01, $03, $06, $06, $00, $01, $00, $03, $0a, $04, $0a, $0a, $07, $0a, $01, $05
1b2e2     09 00 FA FF 
1b2e6     07 0A 09 02 
1b2ea     00 F9 FF 06 
1b2ee     04 04 FF FF | 	byte	$09, $00, $fa, $ff, $07, $0a, $09, $02, $00, $f9, $ff, $06, $04, $04, $ff, $ff
1b2f2     0B 04 0B 10 
1b2f6     0B FD FB 07 
1b2fa     00 F2 FB 09 
1b2fe     08 00 02 02 | 	byte	$0b, $04, $0b, $10, $0b, $fd, $fb, $07, $00, $f2, $fb, $09, $08, $00, $02, $02
1b302     FF 10 0D 0B 
1b306     04 FF 01 F9 
1b30a     FF 0E 02 00 
1b30e     FA 09 0A 0B | 	byte	$ff, $10, $0d, $0b, $04, $ff, $01, $f9, $ff, $0e, $02, $00, $fa, $09, $0a, $0b
1b312     00 FF 03 08 
1b316     05 FC 04 05 
1b31a     06 FC FA 07 
1b31e     0C 01 03 0B | 	byte	$00, $ff, $03, $08, $05, $fc, $04, $05, $06, $fc, $fa, $07, $0c, $01, $03, $0b
1b322     05 00 FF 06 
1b326     FC FF 04 FF 
1b32a     0D 06 0D 04 
1b32e     03 03 FF 10 | 	byte	$05, $00, $ff, $06, $fc, $ff, $04, $ff, $0d, $06, $0d, $04, $03, $03, $ff, $10
1b332     03 FD FF 0D 
1b336     00 06 17 0C 
1b33a     F4 FF 09 12 
1b33e     00 EB 2B 20 | 	byte	$03, $fd, $ff, $0d, $00, $06, $17, $0c, $f4, $ff, $09, $12, $00, $eb, $2b, $20
1b342     C9 0F 38 E2 
1b346     17 14 D0 1F 
1b34a     24 D2 0B 10 
1b34e     F5 0E 0C EA | 	byte	$c9, $0f, $38, $e2, $17, $14, $d0, $1f, $24, $d2, $0b, $10, $f5, $0e, $0c, $ea
1b352     F3 2D 08 D1 
1b356     27 40 D0 FD 
1b35a     32 E0 D3 2B 
1b35e     30 D4 EF 34 | 	byte	$f3, $2d, $08, $d1, $27, $40, $d0, $fd, $32, $e0, $d3, $2b, $30, $d4, $ef, $34
1b362     00 F7 18 F1 
1b366     07 33 00 C3 
1b36a     0F 30 E4 D1 
1b36e     27 38 E0 D5 | 	byte	$00, $f7, $18, $f1, $07, $33, $00, $c3, $0f, $30, $e4, $d1, $27, $38, $e0, $d5
1b372     33 28 DA E7 
1b376     2A 18 E6 F7 
1b37a     2D 08 D6 FF 
1b37e     39 10 D5 FF | 	byte	$33, $28, $da, $e7, $2a, $18, $e6, $f7, $2d, $08, $d6, $ff, $39, $10, $d5, $ff
1b382     19 06 FA F9 
1b386     07 10 E8 EF 
1b38a     27 18 E0 FF 
1b38e     26 0A EB FF | 	byte	$19, $06, $fa, $f9, $07, $10, $e8, $ef, $27, $18, $e0, $ff, $26, $0a, $eb, $ff
1b392     20 08 F3 13 
1b396     10 FF 10 F0 
1b39a     F3 2B 10 D0 
1b39e     F7 3B 14 D7 | 	byte	$20, $08, $f3, $13, $10, $ff, $10, $f0, $f3, $2b, $10, $d0, $f7, $3b, $14, $d7
1b3a2     FF 33 18 E0 
1b3a6     E3 0B 2C 10 
1b3aa     E5 F3 13 20 
1b3ae     08 E4 E7 17 | 	byte	$ff, $33, $18, $e0, $e3, $0b, $2c, $10, $e5, $f3, $13, $20, $08, $e4, $e7, $17
1b3b2     28 0A DA DB 
1b3b6     23 20 E4 F3 
1b3ba     23 14 E2 E7 
1b3be     0D 10 FB FE | 	byte	$28, $0a, $da, $db, $23, $20, $e4, $f3, $23, $14, $e2, $e7, $0d, $10, $fb, $fe
1b3c2     13 2C 04 C4 
1b3c6     E3 37 32 E0 
1b3ca     E1 27 29 E0 
1b3ce     D5 1F 30 F4 | 	byte	$13, $2c, $04, $c4, $e3, $37, $32, $e0, $e1, $27, $29, $e0, $d5, $1f, $30, $f4
1b3d2     FF 10 FA F0 
1b3d6     0A 15 01 05 
1b3da     0A FF 05 0A 
1b3de     04 F8 F9 07 | 	byte	$ff, $10, $fa, $f0, $0a, $15, $01, $05, $0a, $ff, $05, $0a, $04, $f8, $f9, $07
1b3e2     05 10 08 F8 
1b3e6     FD 0B 0B 10 
1b3ea     08 FC FD 0A 
1b3ee     06 F0 F7 1C | 	byte	$05, $10, $08, $f8, $fd, $0b, $0b, $10, $08, $fc, $fd, $0a, $06, $f0, $f7, $1c
1b3f2     12 F2 F5 0D 
1b3f6     1B 14 02 F4 
1b3fa     F3 13 18 F8 
1b3fe     F9 0A 0B 15 | 	byte	$12, $f2, $f5, $0d, $1b, $14, $02, $f4, $f3, $13, $18, $f8, $f9, $0a, $0b, $15
1b402     08 FD FF 0A 
1b406     0C FF 05 10 
1b40a     04 F7 FD 1B 
1b40e     14 00 F1 F7 | 	byte	$08, $fd, $ff, $0a, $0c, $ff, $05, $10, $04, $f7, $fd, $1b, $14, $00, $f1, $f7
1b412     F8 FF 0B 07 
1b416     12 10 06 08 
1b41a     0A EB F7 00 
1b41e     FB 02 12 12 | 	byte	$f8, $ff, $0b, $07, $12, $10, $06, $08, $0a, $eb, $f7, $00, $fb, $02, $12, $12
1b422     00 FB F7 0B 
1b426     27 02 E0 EC 
1b42a     0B 23 16 F6 
1b42e     E1 D7 FB 2F | 	byte	$00, $fb, $f7, $0b, $27, $02, $e0, $ec, $0b, $23, $16, $f6, $e1, $d7, $fb, $2f
1b432     3C 33 04 D8 
1b436     C1 CD F7 27 
1b43a     3F 20 F2 DA 
1b43e     F3 0F 15 11 | 	byte	$3c, $33, $04, $d8, $c1, $cd, $f7, $27, $3f, $20, $f2, $da, $f3, $0f, $15, $11
1b442     0B F4 E4 EC 
1b446     11 24 14 1B 
1b44a     15 F9 EC 06 
1b44e     05 E0 C3 E7 | 	byte	$0b, $f4, $e4, $ec, $11, $24, $14, $1b, $15, $f9, $ec, $06, $05, $e0, $c3, $e7
1b452     17 43 3C 10 
1b456     F1 E8 EB 17 
1b45a     36 34 20 E0 
1b45e     BC B7 DB 1D | 	byte	$17, $43, $3c, $10, $f1, $e8, $eb, $17, $36, $34, $20, $e0, $bc, $b7, $db, $1d
1b462     4D 40 0A F2 
1b466     FD 0D 15 24 
1b46a     0A E0 D5 E7 
1b46e     FF 21 2A 26 | 	byte	$4d, $40, $0a, $f2, $fd, $0d, $15, $24, $0a, $e0, $d5, $e7, $ff, $21, $2a, $26
1b472     28 10 E0 C0 
1b476     EB 20 10 E0 
1b47a     F3 23 3F 40 
1b47e     10 E2 D2 D5 | 	byte	$28, $10, $e0, $c0, $eb, $20, $10, $e0, $f3, $23, $3f, $40, $10, $e2, $d2, $d5
1b482     FF 29 26 20 
1b486     F8 D0 C6 D5 
1b48a     FF 3B 49 3A 
1b48e     20 D8 C9 EF | 	byte	$ff, $29, $26, $20, $f8, $d0, $c6, $d5, $ff, $3b, $49, $3a, $20, $d8, $c9, $ef
1b492     0F 1A 04 E6 
1b496     E3 FE 06 23 
1b49a     35 38 14 C0 
1b49e     CB 05 08 F0 | 	byte	$0f, $1a, $04, $e6, $e3, $fe, $06, $23, $35, $38, $14, $c0, $cb, $05, $08, $f0
1b4a2     DB 0B 3F 2D 
1b4a6     34 10 E2 C7 
1b4aa     EB 11 20 1A 
1b4ae     0D F4 D2 DA | 	byte	$db, $0b, $3f, $2d, $34, $10, $e2, $c7, $eb, $11, $20, $1a, $0d, $f4, $d2, $da
1b4b2     E6 EA 1F 5B 
1b4b6     50 10 E9 D3 
1b4ba     EB 1B 23 00 
1b4be     E4 05 F1 EB | 	byte	$e6, $ea, $1f, $5b, $50, $10, $e9, $d3, $eb, $1b, $23, $00, $e4, $05, $f1, $eb
1b4c2     2F 2C 20 0A 
1b4c6     00 E6 0B 00 
1b4ca     D1 FF 11 23 
1b4ce     24 F5 03 F4 | 	byte	$2f, $2c, $20, $0a, $00, $e6, $0b, $00, $d1, $ff, $11, $23, $24, $f5, $03, $f4
1b4d2     E5 14 1B 21 
1b4d6     2B 10 F0 D2 
1b4da     CD EF 0F 3B 
1b4de     38 3B 08 C8 | 	byte	$e5, $14, $1b, $21, $2b, $10, $f0, $d2, $cd, $ef, $0f, $3b, $38, $3b, $08, $c8
1b4e2     B2 E3 11 2F 
1b4e6     32 04 E2 E2 
1b4ea     E5 07 2A 3F 
1b4ee     30 E8 B9 D7 | 	byte	$b2, $e3, $11, $2f, $32, $04, $e2, $e2, $e5, $07, $2a, $3f, $30, $e8, $b9, $d7
1b4f2     0A FB 21 01 
1b4f6     23 08 02 E8 
1b4fa     F7 16 F2 F3 
1b4fe     1A 30 03 08 | 	byte	$0a, $fb, $21, $01, $23, $08, $02, $e8, $f7, $16, $f2, $f3, $1a, $30, $03, $08
1b502     E4 D2 C7 FF 
1b506     3F 32 00 1B 
1b50a     10 DB 0E F2 
1b50e     EE 17 37 08 | 	byte	$e4, $d2, $c7, $ff, $3f, $32, $00, $1b, $10, $db, $0e, $f2, $ee, $17, $37, $08
1b512     D7 E7 0E 28 
1b516     E8 EB 0E 21 
1b51a     0A F1 FC E3 
1b51e     15 06 23 28 | 	byte	$d7, $e7, $0e, $28, $e8, $eb, $0e, $21, $0a, $f1, $fc, $e3, $15, $06, $23, $28
1b522     FA F9 E7 FA 
1b526     0B 1B 20 2A 
1b52a     00 D0 D3 FF 
1b52e     26 18 14 0A | 	byte	$fa, $f9, $e7, $fa, $0b, $1b, $20, $2a, $00, $d0, $d3, $ff, $26, $18, $14, $0a
1b532     15 16 0A 00 
1b536     FB F0 DA D2 
1b53a     F7 2D 20 35 
1b53e     34 20 10 F0 | 	byte	$15, $16, $0a, $00, $fb, $f0, $da, $d2, $f7, $2d, $20, $35, $34, $20, $10, $f0
1b542     B4 BF 0F 04 
1b546     0D 0F 27 2E 
1b54a     22 00 DA D0 
1b54e     D6 0B 32 2C | 	byte	$b4, $bf, $0f, $04, $0d, $0f, $27, $2e, $22, $00, $da, $d0, $d6, $0b, $32, $2c
1b552     0D 06 E4 BF 
1b556     F7 00 03 35 
1b55a     38 10 01 09 
1b55e     F8 D6 DD F2 | 	byte	$0d, $06, $e4, $bf, $f7, $00, $03, $35, $38, $10, $01, $09, $f8, $d6, $dd, $f2
1b562     0F 20 1C 29 
1b566     10 07 14 E0 
1b56a     C7 E7 13 10 
1b56e     F8 04 0B 17 | 	byte	$0f, $20, $1c, $29, $10, $07, $14, $e0, $c7, $e7, $13, $10, $f8, $04, $0b, $17
1b572     24 14 F0 D4 
1b576     DF 05 1C 29 
1b57a     28 F4 D5 D7 
1b57e     F7 1B 3F 24 | 	byte	$24, $14, $f0, $d4, $df, $05, $1c, $29, $28, $f4, $d5, $d7, $f7, $1b, $3f, $24
1b582     FF 06 FA FB 
1b586     01 01 F6 D8 
1b58a     FF 2B 1B 22 
1b58e     04 FF 0D 04 | 	byte	$ff, $06, $fa, $fb, $01, $01, $f6, $d8, $ff, $2b, $1b, $22, $04, $ff, $0d, $04
1b592     E0 C6 DB 1F 
1b596     55 28 E6 F5 
1b59a     16 2A 08 E4 
1b59e     D5 E5 17 3B | 	byte	$e0, $c6, $db, $1f, $55, $28, $e6, $f5, $16, $2a, $08, $e4, $d5, $e5, $17, $3b
1b5a2     3E 00 CC E3 
1b5a6     03 05 02 FB 
1b5aa     F7 1F 3A 40 
1b5ae     10 D0 B7 EF | 	byte	$3e, $00, $cc, $e3, $03, $05, $02, $fb, $f7, $1f, $3a, $40, $10, $d0, $b7, $ef
1b5b2     37 2A F2 E9 
1b5b6     0B 2B 28 00 
1b5ba     C9 E7 FF 22 
1b5be     20 F4 D3 FB | 	byte	$37, $2a, $f2, $e9, $0b, $2b, $28, $00, $c9, $e7, $ff, $22, $20, $f4, $d3, $fb
1b5c2     2B 30 08 D8 
1b5c6     CD FF 35 35 
1b5ca     02 D4 EF 27 
1b5ce     24 00 D0 ED | 	byte	$2b, $30, $08, $d8, $cd, $ff, $35, $35, $02, $d4, $ef, $27, $24, $00, $d0, $ed
1b5d2     27 38 10 CA 
1b5d6     DF 12 1C 00 
1b5da     DD FE 2F 30 
1b5de     00 D0 E3 1F | 	byte	$27, $38, $10, $ca, $df, $12, $1c, $00, $dd, $fe, $2f, $30, $00, $d0, $e3, $1f
1b5e2     2D 00 DB F9 
1b5e6     32 28 F0 D7 
1b5ea     FF 2E 2A 01 
1b5ee     D4 D7 17 38 | 	byte	$2d, $00, $db, $f9, $32, $28, $f0, $d7, $ff, $2e, $2a, $01, $d4, $d7, $17, $38
1b5f2     08 E2 FB 27 
1b5f6     14 E8 DB FF 
1b5fa     37 30 F0 DB 
1b5fe     07 2C 10 E0 | 	byte	$08, $e2, $fb, $27, $14, $e8, $db, $ff, $37, $30, $f0, $db, $07, $2c, $10, $e0
1b602     E7 17 31 08 
1b606     D7 F7 25 12 
1b60a     EA FF 1C 05 
1b60e     F3 0B 16 E5 | 	byte	$e7, $17, $31, $08, $d7, $f7, $25, $12, $ea, $ff, $1c, $05, $f3, $0b, $16, $e5
1b612     DD 0E 30 14 
1b616     E8 D7 17 20 
1b61a     F7 07 1A 10 
1b61e     EC CB EF 22 | 	byte	$dd, $0e, $30, $14, $e8, $d7, $17, $20, $f7, $07, $1a, $10, $ec, $cb, $ef, $22
1b622     15 02 0B 1B 
1b626     18 F0 DD 0D 
1b62a     04 FF 13 17 
1b62e     12 00 FB FF | 	byte	$15, $02, $0b, $1b, $18, $f0, $dd, $0d, $04, $ff, $13, $17, $12, $00, $fb, $ff
1b632     10 06 FE FB 
1b636     04 08 16 10 
1b63a     E5 F7 2F 30 
1b63e     F0 CB FB 20 | 	byte	$10, $06, $fe, $fb, $04, $08, $16, $10, $e5, $f7, $2f, $30, $f0, $cb, $fb, $20
1b642     F8 DF 07 37 
1b646     14 E0 E5 1F 
1b64a     20 E4 EF 27 
1b64e     2C F2 DE 0F | 	byte	$f8, $df, $07, $37, $14, $e0, $e5, $1f, $20, $e4, $ef, $27, $2c, $f2, $de, $0f
1b652     1A E8 D9 13 
1b656     36 00 E2 0B 
1b65a     20 F4 E3 17 
1b65e     2B F4 D7 0F | 	byte	$1a, $e8, $d9, $13, $36, $00, $e2, $0b, $20, $f4, $e3, $17, $2b, $f4, $d7, $0f
1b662     28 F0 D7 0F 
1b666     37 00 D7 15 
1b66a     24 EC E4 1F 
1b66e     30 E4 DF 25 | 	byte	$28, $f0, $d7, $0f, $37, $00, $d7, $15, $24, $ec, $e4, $1f, $30, $e4, $df, $25
1b672     10 E0 FF 3D 
1b676     20 D5 F7 2F 
1b67a     10 EB E7 FF 
1b67e     2B 2C E4 CD | 	byte	$10, $e0, $ff, $3d, $20, $d5, $f7, $2f, $10, $eb, $e7, $ff, $2b, $2c, $e4, $cd
1b682     FF 29 02 E0 
1b686     FF 3B 20 E7 
1b68a     FF 09 D5 E7 
1b68e     2B 30 F0 E5 | 	byte	$ff, $29, $02, $e0, $ff, $3b, $20, $e7, $ff, $09, $d5, $e7, $2b, $30, $f0, $e5
1b692     22 14 E8 F7 
1b696     2B 10 EB 0C 
1b69a     F4 F7 07 FE 
1b69e     F4 F7 25 3B | 	byte	$22, $14, $e8, $f7, $2b, $10, $eb, $0c, $f4, $f7, $07, $fe, $f4, $f7, $25, $3b
1b6a2     20 00 0B F4 
1b6a6     D4 E7 02 FD 
1b6aa     F4 FF 1F 18 
1b6ae     FF 16 0C 0A | 	byte	$20, $00, $0b, $f4, $d4, $e7, $02, $fd, $f4, $ff, $1f, $18, $ff, $16, $0c, $0a
1b6b2     FC F7 17 10 
1b6b6     D8 ED 2B 00 
1b6ba     DD 0D 04 EB 
1b6be     FF 27 2A FA | 	byte	$fc, $f7, $17, $10, $d8, $ed, $2b, $00, $dd, $0d, $04, $eb, $ff, $27, $2a, $fa
1b6c2     03 12 F0 EF 
1b6c6     27 14 10 11 
1b6ca     11 FC E7 F9 
1b6ce     04 F2 FD 15 | 	byte	$03, $12, $f0, $ef, $27, $14, $10, $11, $11, $fc, $e7, $f9, $04, $f2, $fd, $15
1b6d2     09 06 0D 12 
1b6d6     00 F7 FF FF 
1b6da     07 02 F3 FF 
1b6de     24 00 E7 17 | 	byte	$09, $06, $0d, $12, $00, $f7, $ff, $ff, $07, $02, $f3, $ff, $24, $00, $e7, $17
1b6e2     20 E0 FF 0B 
1b6e6     E4 F3 25 26 
1b6ea     F8 EF 05 F1 
1b6ee     F7 21 0C 0B | 	byte	$20, $e0, $ff, $0b, $e4, $f3, $25, $26, $f8, $ef, $05, $f1, $f7, $21, $0c, $0b
1b6f2     27 20 F8 E5 
1b6f6     F3 05 02 FF 
1b6fa     0B 21 20 E6 
1b6fe     DA 05 08 F2 | 	byte	$27, $20, $f8, $e5, $f3, $05, $02, $ff, $0b, $21, $20, $e6, $da, $05, $08, $f2
1b702     FF 17 18 00 
1b706     FE 1B 20 E8 
1b70a     E3 23 20 E0 
1b70e     FF 15 EA F5 | 	byte	$ff, $17, $18, $00, $fe, $1b, $20, $e8, $e3, $23, $20, $e0, $ff, $15, $ea, $f5
1b712     1B 10 0A 0D 
1b716     05 EC E7 10 
1b71a     06 FB 26 20 
1b71e     FC FF FC EB | 	byte	$1b, $10, $0a, $0d, $05, $ec, $e7, $10, $06, $fb, $26, $20, $fc, $ff, $fc, $eb
1b722     FA 04 FC F5 
1b726     0A 0A 0B 11 
1b72a     05 0D 11 FC 
1b72e     F1 07 FD FE | 	byte	$fa, $04, $fc, $f5, $0a, $0a, $0b, $11, $05, $0d, $11, $fc, $f1, $07, $fd, $fe
1b732     0B F0 EB 27 
1b736     24 F0 12 08 
1b73a     E2 07 20 02 
1b73e     0E 18 0A E5 | 	byte	$0b, $f0, $eb, $27, $24, $f0, $12, $08, $e2, $07, $20, $02, $0e, $18, $0a, $e5
1b742     F5 05 FA 15 
1b746     22 00 0D 10 
1b74a     E9 EA FF 00 
1b74e     F9 0F 20 01 | 	byte	$f5, $05, $fa, $15, $22, $00, $0d, $10, $e9, $ea, $ff, $00, $f9, $0f, $20, $01
1b752     07 08 F7 07 
1b756     0C 00 04 FA 
1b75a     E5 0D 20 F2 
1b75e     F5 33 10 E9 | 	byte	$07, $08, $f7, $07, $0c, $00, $04, $fa, $e5, $0d, $20, $f2, $f5, $33, $10, $e9
1b762     1B 00 DB 0F 
1b766     10 FE 16 14 
1b76a     FC F1 01 FF 
1b76e     F9 15 19 00 | 	byte	$1b, $00, $db, $0f, $10, $fe, $16, $14, $fc, $f1, $01, $ff, $f9, $15, $19, $00
1b772     10 05 E1 E7 
1b776     FF FA F7 11 
1b77a     20 10 12 10 
1b77e     FC 06 06 F5 | 	byte	$10, $05, $e1, $e7, $ff, $fa, $f7, $11, $20, $10, $12, $10, $fc, $06, $06, $f5
1b782     FA 00 00 0F 
1b786     1C 00 E3 0F 
1b78a     20 ED 15 10 
1b78e     E2 07 20 FD | 	byte	$fa, $00, $00, $0f, $1c, $00, $e3, $0f, $20, $ed, $15, $10, $e2, $07, $20, $fd
1b792     1B 20 F8 F5 
1b796     FC F7 FD 12 
1b79a     10 FF 15 06 
1b79e     F6 FF FA F1 | 	byte	$1b, $20, $f8, $f5, $fc, $f7, $fd, $12, $10, $ff, $15, $06, $f6, $ff, $fa, $f1
1b7a2     06 15 10 07 
1b7a6     07 0B FD F6 
1b7aa     F7 FA F9 FF 
1b7ae     02 07 1D 04 | 	byte	$06, $15, $10, $07, $07, $0b, $fd, $f6, $f7, $fa, $f9, $ff, $02, $07, $1d, $04
1b7b2     F3 21 18 E6 
1b7b6     09 04 E0 0F 
1b7ba     0A FD 26 06 
1b7be     F7 08 F0 F3 | 	byte	$f3, $21, $18, $e6, $09, $04, $e0, $0f, $0a, $fd, $26, $06, $f7, $08, $f0, $f3
1b7c2     13 0B 0F 10 
1b7c6     0C 00 FF FA 
1b7ca     F6 0A 00 FD 
1b7ce     11 09 09 10 | 	byte	$13, $0b, $0f, $10, $0c, $00, $ff, $fa, $f6, $0a, $00, $fd, $11, $09, $09, $10
1b7d2     FB F3 00 FE 
1b7d6     02 09 02 FD 
1b7da     0B 10 00 F5 
1b7de     07 20 02 FF | 	byte	$fb, $f3, $00, $fe, $02, $09, $02, $fd, $0b, $10, $00, $f5, $07, $20, $02, $ff
1b7e2     08 E9 FF 0C 
1b7e6     EA 15 14 02 
1b7ea     16 F2 EE 15 
1b7ee     08 06 17 04 | 	byte	$08, $e9, $ff, $0c, $ea, $15, $14, $02, $16, $f2, $ee, $15, $08, $06, $17, $04
1b7f2     0C 04 F4 04 
1b7f6     04 02 05 02 
1b7fa     FF 0B 08 03 
1b7fe     0A F8 FF 07 | 	byte	$0c, $04, $f4, $04, $04, $02, $05, $02, $ff, $0b, $08, $03, $0a, $f8, $ff, $07
1b802     04 FD F9 FF 
1b806     05 11 0A 04 
1b80a     14 04 F7 0B 
1b80e     FA ED FC F6 | 	byte	$04, $fd, $f9, $ff, $05, $11, $0a, $04, $14, $04, $f7, $0b, $fa, $ed, $fc, $f6
1b812     FF 11 13 20 
1b816     00 E3 FF 0B 
1b81a     05 16 08 07 
1b81e     0B E8 F1 07 | 	byte	$ff, $11, $13, $20, $00, $e3, $ff, $0b, $05, $16, $08, $07, $0b, $e8, $f1, $07
1b822     F9 FE 07 08 
1b826     12 0B 05 0B 
1b82a     00 F7 03 05 
1b82e     07 00 F9 03 | 	byte	$f9, $fe, $07, $08, $12, $0b, $05, $0b, $00, $f7, $03, $05, $07, $00, $f9, $03
1b832     0A 01 0B 15 
1b836     08 FC FE 06 
1b83a     06 03 FD F6 
1b83e     FF 15 12 10 | 	byte	$0a, $01, $0b, $15, $08, $fc, $fe, $06, $06, $03, $fd, $f6, $ff, $15, $12, $10
1b842     0B 02 F4 ED 
1b846     F9 01 10 15 
1b84a     15 20 00 F1 
1b84e     07 00 FB 0A | 	byte	$0b, $02, $f4, $ed, $f9, $01, $10, $15, $15, $20, $00, $f1, $07, $00, $fb, $0a
1b852     07 09 06 05 
1b856     07 0A 03 02 
1b85a     14 10 FE FF 
1b85e     06 02 F7 F5 | 	byte	$07, $09, $06, $05, $07, $0a, $03, $02, $14, $10, $fe, $ff, $06, $02, $f7, $f5
1b862     05 0E 05 FF 
1b866     0A 15 11 05 
1b86a     F8 F5 FA F2 
1b86e     05 16 0A 00 | 	byte	$05, $0e, $05, $ff, $0a, $15, $11, $05, $f8, $f5, $fa, $f2, $05, $16, $0a, $00
1b872     FC 05 00 02 
1b876     07 08 00 06 
1b87a     FC FB 05 FB 
1b87e     03 00 02 09 | 	byte	$fc, $05, $00, $02, $07, $08, $00, $06, $fc, $fb, $05, $fb, $03, $00, $02, $09
1b882     06 02 0A FB 
1b886     F7 01 06 0B 
1b88a     04 03 00 FD 
1b88e     02 06 02 07 | 	byte	$06, $02, $0a, $fb, $f7, $01, $06, $0b, $04, $03, $00, $fd, $02, $06, $02, $07
1b892     01 F9 FF 0E 
1b896     0A 08 FD F9 
1b89a     0B 11 00 F7 
1b89e     FF 0C 01 F0 | 	byte	$01, $f9, $ff, $0e, $0a, $08, $fd, $f9, $0b, $11, $00, $f7, $ff, $0c, $01, $f0
1b8a2     FB 01 05 1D 
1b8a6     14 FF 03 FE 
1b8aa     09 01 FD 05 
1b8ae     01 FF 0B 07 | 	byte	$fb, $01, $05, $1d, $14, $ff, $03, $fe, $09, $01, $fd, $05, $01, $ff, $0b, $07
1b8b2     03 08 0B 09 
1b8b6     02 10 0A FE 
1b8ba     02 04 FF 0E 
1b8be     15 0C 08 0B | 	byte	$03, $08, $0b, $09, $02, $10, $0a, $fe, $02, $04, $ff, $0e, $15, $0c, $08, $0b
1b8c2     0A 08 FD F8 
1b8c6     0B 00 F5 FF 
1b8ca     00 0B 11 16 
1b8ce     15 01 FE FA | 	byte	$0a, $08, $fd, $f8, $0b, $00, $f5, $ff, $00, $0b, $11, $16, $15, $01, $fe, $fa
1b8d2     F9 0E 06 06 
1b8d6     05 FD 07 FA 
1b8da     EC FD 02 09 
1b8de     10 06 0E 0D | 	byte	$f9, $0e, $06, $06, $05, $fd, $07, $fa, $ec, $fd, $02, $09, $10, $06, $0e, $0d
1b8e2     10 00 F3 03 
1b8e6     00 F7 05 08 
1b8ea     03 FA 02 0A 
1b8ee     04 00 FF 02 | 	byte	$10, $00, $f3, $03, $00, $f7, $05, $08, $03, $fa, $02, $0a, $04, $00, $ff, $02
1b8f2     07 09 13 06 
1b8f6     F6 F9 F8 FB 
1b8fa     09 0B 14 0C 
1b8fe     FB 03 FC 03 | 	byte	$07, $09, $13, $06, $f6, $f9, $f8, $fb, $09, $0b, $14, $0c, $fb, $03, $fc, $03
1b902     00 F8 0B 06 
1b906     F8 FF 00 FD 
1b90a     04 00 01 09 
1b90e     0B 14 0E 02 | 	byte	$00, $f8, $0b, $06, $f8, $ff, $00, $fd, $04, $00, $01, $09, $0b, $14, $0e, $02
1b912     FF 05 02 FE 
1b916     01 05 F6 F7 
1b91a     01 04 0C 0B 
1b91e     11 10 02 09 | 	byte	$ff, $05, $02, $fe, $01, $05, $f6, $f7, $01, $04, $0c, $0b, $11, $10, $02, $09
1b922     04 05 08 FB 
1b926     FF 09 06 04 
1b92a     0A 09 04 00 
1b92e     FF 03 FF 05 | 	byte	$04, $05, $08, $fb, $ff, $09, $06, $04, $0a, $09, $04, $00, $ff, $03, $ff, $05
1b932     07 01 0D 0A 
1b936     F9 FC FC 0A 
1b93a     0B 06 F8 F5 
1b93e     0A 08 03 09 | 	byte	$07, $01, $0d, $0a, $f9, $fc, $fc, $0a, $0b, $06, $f8, $f5, $0a, $08, $03, $09
1b942     09 05 00 FF 
1b946     07 FD FD FF 
1b94a     07 13 06 06 
1b94e     0A 04 03 F9 | 	byte	$09, $05, $00, $ff, $07, $fd, $fd, $ff, $07, $13, $06, $06, $0a, $04, $03, $f9
1b952     04 0A 07 02 
1b956     02 01 00 FD 
1b95a     0B 15 06 FF 
1b95e     07 09 02 F7 | 	byte	$04, $0a, $07, $02, $02, $01, $00, $fd, $0b, $15, $06, $ff, $07, $09, $02, $f7
1b962     FF 02 0B 10 
1b966     00 FF 0A FE 
1b96a     FB 01 07 09 
1b96e     00 05 08 FA | 	byte	$ff, $02, $0b, $10, $00, $ff, $0a, $fe, $fb, $01, $07, $09, $00, $05, $08, $fa
1b972     FE 0D 0B 02 
1b976     FD 02 09 08 
1b97a     0C 00 F7 05 
1b97e     0B 0A 04 0B | 	byte	$fe, $0d, $0b, $02, $fd, $02, $09, $08, $0c, $00, $f7, $05, $0b, $0a, $04, $0b
1b982     0B 02 FF 0B 
1b986     06 FB 03 10 
1b98a     08 F8 01 06 
1b98e     08 04 09 10 | 	byte	$0b, $02, $ff, $0b, $06, $fb, $03, $10, $08, $f8, $01, $06, $08, $04, $09, $10
1b992     09 FE FD FC 
1b996     FF 02 03 06 
1b99a     05 08 04 F9 
1b99e     FF 02 03 03 | 	byte	$09, $fe, $fd, $fc, $ff, $02, $03, $06, $05, $08, $04, $f9, $ff, $02, $03, $03
1b9a2     04 05 04 FD 
1b9a6     01 05 02 08 
1b9aa     FC FE FB FF 
1b9ae     06 02 05 04 | 	byte	$04, $05, $04, $fd, $01, $05, $02, $08, $fc, $fe, $fb, $ff, $06, $02, $05, $04
1b9b2     07 06 F8 FF 
1b9b6     10 06 FE FF 
1b9ba     FF FE FC 01 
1b9be     03 01 08 0E | 	byte	$07, $06, $f8, $ff, $10, $06, $fe, $ff, $ff, $fe, $fc, $01, $03, $01, $08, $0e
1b9c2     0D FE FD 10 
1b9c6     04 F5 FE 0B 
1b9ca     07 03 06 07 
1b9ce     03 F9 FD 01 | 	byte	$0d, $fe, $fd, $10, $04, $f5, $fe, $0b, $07, $03, $06, $07, $03, $f9, $fd, $01
1b9d2     FF 09 0E 02 
1b9d6     03 07 0A 04 
1b9da     FE 05 0C 04 
1b9de     FC 02 00 03 | 	byte	$ff, $09, $0e, $02, $03, $07, $0a, $04, $fe, $05, $0c, $04, $fc, $02, $00, $03
1b9e2     13 12 05 09 
1b9e6     10 02 03 06 
1b9ea     05 07 00 05 
1b9ee     0C 06 07 08 | 	byte	$13, $12, $05, $09, $10, $02, $03, $06, $05, $07, $00, $05, $0c, $06, $07, $08
1b9f2     03 0B 06 FE 
1b9f6     FE 00 01 08 
1b9fa     08 06 FF 0A 
1b9fe     0B 00 FA FF | 	byte	$03, $0b, $06, $fe, $fe, $00, $01, $08, $08, $06, $ff, $0a, $0b, $00, $fa, $ff
1ba02     0A 00 07 00 
1ba06     F4 07 0C FC 
1ba0a     FF 06 01 05 
1ba0e     0B 08 02 FF | 	byte	$0a, $00, $07, $00, $f4, $07, $0c, $fc, $ff, $06, $01, $05, $0b, $08, $02, $ff
1ba12     08 07 02 FB 
1ba16     FF 03 FF 06 
1ba1a     04 05 09 01 
1ba1e     FF 02 03 04 | 	byte	$08, $07, $02, $fb, $ff, $03, $ff, $06, $04, $05, $09, $01, $ff, $02, $03, $04
1ba22     08 03 FE FE 
1ba26     06 04 FE 07 
1ba2a     10 06 FE FF 
1ba2e     07 0A 06 F5 | 	byte	$08, $03, $fe, $fe, $06, $04, $fe, $07, $10, $06, $fe, $ff, $07, $0a, $06, $f5
1ba32     FD 07 FE 05 
1ba36     00 05 06 FC 
1ba3a     03 0D 09 00 
1ba3e     F8 03 08 07 | 	byte	$fd, $07, $fe, $05, $00, $05, $06, $fc, $03, $0d, $09, $00, $f8, $03, $08, $07
1ba42     09 02 01 07 
1ba46     10 FB 03 10 
1ba4a     0A 0A 04 FF 
1ba4e     02 07 10 0A | 	byte	$09, $02, $01, $07, $10, $fb, $03, $10, $0a, $0a, $04, $ff, $02, $07, $10, $0a
1ba52     01 00 FE 03 
1ba56     07 0B 10 FE 
1ba5a     FB 02 08 0A 
1ba5e     03 00 FE 04 | 	byte	$01, $00, $fe, $03, $07, $0b, $10, $fe, $fb, $02, $08, $0a, $03, $00, $fe, $04
1ba62     0B 05 00 F6 
1ba66     F9 00 07 0C 
1ba6a     06 05 FF FC 
1ba6e     FF 06 0B 03 | 	byte	$0b, $05, $00, $f6, $f9, $00, $07, $0c, $06, $05, $ff, $fc, $ff, $06, $0b, $03
1ba72     02 FF FF FC 
1ba76     07 09 FF 02 
1ba7a     01 F9 05 0D 
1ba7e     01 02 02 06 | 	byte	$02, $ff, $ff, $fc, $07, $09, $ff, $02, $01, $f9, $05, $0d, $01, $02, $02, $06
1ba82     05 06 05 FB 
1ba86     FB 09 10 04 
1ba8a     F9 FF 09 0A 
1ba8e     04 0A 08 F3 | 	byte	$05, $06, $05, $fb, $fb, $09, $10, $04, $f9, $ff, $09, $0a, $04, $0a, $08, $f3
1ba92     FE 0E 0C 05 
1ba96     FC 00 03 03 
1ba9a     FD 03 07 FF 
1ba9e     06 FF 0E 11 | 	byte	$fe, $0e, $0c, $05, $fc, $00, $03, $03, $fd, $03, $07, $ff, $06, $ff, $0e, $11
1baa2     0A 02 FF 0D 
1baa6     05 F8 FB 07 
1baaa     0D 10 0A 0A 
1baae     0A 09 02 FF | 	byte	$0a, $02, $ff, $0d, $05, $f8, $fb, $07, $0d, $10, $0a, $0a, $0a, $09, $02, $ff
1bab2     FF 0C 0E 0A 
1bab6     01 04 02 07 
1baba     09 FB 07 0C 
1babe     01 02 08 0A | 	byte	$ff, $0c, $0e, $0a, $01, $04, $02, $07, $09, $fb, $07, $0c, $01, $02, $08, $0a
1bac2     04 FE FE FE 
1bac6     03 0B 06 F5 
1baca     F2 07 13 10 
1bace     FA F9 01 07 | 	byte	$04, $fe, $fe, $fe, $03, $0b, $06, $f5, $f2, $07, $13, $10, $fa, $f9, $01, $07
1bad2     09 FE FC 05 
1bad6     02 05 0A F8 
1bada     FF 0A 02 00 
1bade     02 03 06 01 | 	byte	$09, $fe, $fc, $05, $02, $05, $0a, $f8, $ff, $0a, $02, $00, $02, $03, $06, $01
1bae2     FE 0D 11 FB 
1bae6     F5 09 08 FD 
1baea     01 07 0A 07 
1baee     FB FF 06 01 | 	byte	$fe, $0d, $11, $fb, $f5, $09, $08, $fd, $01, $07, $0a, $07, $fb, $ff, $06, $01
1baf2     09 01 01 04 
1baf6     05 03 01 06 
1bafa     F7 FF 10 09 
1bafe     03 FA 05 08 | 	byte	$09, $01, $01, $04, $05, $03, $01, $06, $f7, $ff, $10, $09, $03, $fa, $05, $08
1bb02     FA FD 09 06 
1bb06     FF 09 03 FF 
1bb0a     06 0A 03 00 
1bb0e     0A 0D 0A 00 | 	byte	$fa, $fd, $09, $06, $ff, $09, $03, $ff, $06, $0a, $03, $00, $0a, $0d, $0a, $00
1bb12     F4 07 13 10 
1bb16     08 FD 02 10 
1bb1a     0C 01 FD 06 
1bb1e     10 FE FD FD | 	byte	$f4, $07, $13, $10, $08, $fd, $02, $10, $0c, $01, $fd, $06, $10, $fe, $fd, $fd
1bb22     0A 0D 0A 0C 
1bb26     08 FD FA FA 
1bb2a     04 0D 00 FE 
1bb2e     06 00 FA 0D | 	byte	$0a, $0d, $0a, $0c, $08, $fd, $fa, $fa, $04, $0d, $00, $fe, $06, $00, $fa, $0d
1bb32     14 F4 F7 0B 
1bb36     11 00 FA FB 
1bb3a     00 FE FF 07 
1bb3e     0D 19 04 F1 | 	byte	$14, $f4, $f7, $0b, $11, $00, $fa, $fb, $00, $fe, $ff, $07, $0d, $19, $04, $f1
1bb42     FB FE FF 08 
1bb46     0B 08 F6 11 
1bb4a     0C F8 F7 09 
1bb4e     13 06 F1 F3 | 	byte	$fb, $fe, $ff, $08, $0b, $08, $f6, $11, $0c, $f8, $f7, $09, $13, $06, $f1, $f3
1bb52     17 18 FB FF 
1bb56     06 FF FE FF 
1bb5a     17 14 F0 F7 
1bb5e     0C 09 00 F7 | 	byte	$17, $18, $fb, $ff, $06, $ff, $fe, $ff, $17, $14, $f0, $f7, $0c, $09, $00, $f7
1bb62     05 14 01 FF 
1bb66     0C 08 F4 F9 
1bb6a     0F 16 06 04 
1bb6e     06 F6 07 10 | 	byte	$05, $14, $01, $ff, $0c, $08, $f4, $f9, $0f, $16, $06, $04, $06, $f6, $07, $10
1bb72     FE 01 15 18 
1bb76     00 F4 FF 16 
1bb7a     17 0C 00 03 
1bb7e     FB EC F7 15 | 	byte	$fe, $01, $15, $18, $00, $f4, $ff, $16, $17, $0c, $00, $03, $fb, $ec, $f7, $15
1bb82     1B 14 10 01 
1bb86     F5 F8 F6 FF 
1bb8a     0D 1D 17 08 
1bb8e     FA F0 F1 F7 | 	byte	$1b, $14, $10, $01, $f5, $f8, $f6, $ff, $0d, $1d, $17, $08, $fa, $f0, $f1, $f7
1bb92     07 0B 08 00 
1bb96     06 04 00 FE 
1bb9a     FF 05 0D 04 
1bb9e     F7 01 FD 05 | 	byte	$07, $0b, $08, $00, $06, $04, $00, $fe, $ff, $05, $0d, $04, $f7, $01, $fd, $05
1bba2     04 F7 13 14 
1bba6     02 F4 F6 06 
1bbaa     06 F9 0B 10 
1bbae     FE 02 06 FE | 	byte	$04, $f7, $13, $14, $02, $f4, $f6, $06, $06, $f9, $0b, $10, $fe, $02, $06, $fe
1bbb2     FF 01 0C 08 
1bbb6     F9 02 03 09 
1bbba     10 06 F8 FB 
1bbbe     08 0D 07 F8 | 	byte	$ff, $01, $0c, $08, $f9, $02, $03, $09, $10, $06, $f8, $fb, $08, $0d, $07, $f8
1bbc2     03 0A 0D FB 
1bbc6     F5 05 04 02 
1bbca     F7 FF 12 12 
1bbce     0C 02 00 02 | 	byte	$03, $0a, $0d, $fb, $f5, $05, $04, $02, $f7, $ff, $12, $12, $0c, $02, $00, $02
1bbd2     FA FB 03 0C 
1bbd6     10 07 06 03 
1bbda     07 10 04 FF 
1bbde     0D 07 05 13 | 	byte	$fa, $fb, $03, $0c, $10, $07, $06, $03, $07, $10, $04, $ff, $0d, $07, $05, $13
1bbe2     10 04 FF FD 
1bbe6     FD 09 12 00 
1bbea     EE FF 13 0A 
1bbee     01 09 0C 0A | 	byte	$10, $04, $ff, $fd, $fd, $09, $12, $00, $ee, $ff, $13, $0a, $01, $09, $0c, $0a
1bbf2     FE FA FF 00 
1bbf6     01 07 08 ED 
1bbfa     FB 19 10 F8 
1bbfe     F5 09 12 00 | 	byte	$fe, $fa, $ff, $00, $01, $07, $08, $ed, $fb, $19, $10, $f8, $f5, $09, $12, $00
1bc02     F5 03 0C 00 
1bc06     F9 FB 09 08 
1bc0a     F8 FB 0E 08 
1bc0e     05 07 F8 04 | 	byte	$f5, $03, $0c, $00, $f9, $fb, $09, $08, $f8, $fb, $0e, $08, $05, $07, $f8, $04
1bc12     0D 07 FC FB 
1bc16     0C 00 03 06 
1bc1a     F9 FF 10 08 
1bc1e     F5 FF 12 08 | 	byte	$0d, $07, $fc, $fb, $0c, $00, $03, $06, $f9, $ff, $10, $08, $f5, $ff, $12, $08
1bc22     00 05 0B 01 
1bc26     FF 06 05 FF 
1bc2a     03 04 07 09 
1bc2e     F6 F5 07 10 | 	byte	$00, $05, $0b, $01, $ff, $06, $05, $ff, $03, $04, $07, $09, $f6, $f5, $07, $10
1bc32     0D 00 FB 13 
1bc36     10 00 08 00 
1bc3a     01 07 03 03 
1bc3e     13 15 08 FB | 	byte	$0d, $00, $fb, $13, $10, $00, $08, $00, $01, $07, $03, $03, $13, $15, $08, $fb
1bc42     03 0E 04 04 
1bc46     FF 01 11 06 
1bc4a     F6 FF 0B 17 
1bc4e     10 FC FD 0D | 	byte	$03, $0e, $04, $04, $ff, $01, $11, $06, $f6, $ff, $0b, $17, $10, $fc, $fd, $0d
1bc52     08 FC F9 07 
1bc56     10 06 FF 04 
1bc5a     06 01 FE FA 
1bc5e     FF 04 0A 06 | 	byte	$08, $fc, $f9, $07, $10, $06, $ff, $04, $06, $01, $fe, $fa, $ff, $04, $0a, $06
1bc62     FB 03 FA F7 
1bc66     0D 11 06 03 
1bc6a     FE F3 05 07 
1bc6e     05 FB FF 0E | 	byte	$fb, $03, $fa, $f7, $0d, $11, $06, $03, $fe, $f3, $05, $07, $05, $fb, $ff, $0e
1bc72     02 03 02 FA 
1bc76     0B 10 FC F7 
1bc7a     05 0B 0A FB 
1bc7e     F7 09 10 00 | 	byte	$02, $03, $02, $fa, $0b, $10, $fc, $f7, $05, $0b, $0a, $fb, $f7, $09, $10, $00
1bc82     F8 02 05 02 
1bc86     FE 03 16 0C 
1bc8a     FF 02 09 05 
1bc8e     FB FF 00 FC | 	byte	$f8, $02, $05, $02, $fe, $03, $16, $0c, $ff, $02, $09, $05, $fb, $ff, $00, $fc
1bc92     01 0A 10 06 
1bc96     07 00 05 08 
1bc9a     FF FF 01 0C 
1bc9e     04 03 08 0A | 	byte	$01, $0a, $10, $06, $07, $00, $05, $08, $ff, $ff, $01, $0c, $04, $03, $08, $0a
1bca2     0B 06 04 01 
1bca6     FC 07 10 15 
1bcaa     14 F8 FB 0B 
1bcae     0D 09 09 04 | 	byte	$0b, $06, $04, $01, $fc, $07, $10, $15, $14, $f8, $fb, $0b, $0d, $09, $09, $04
1bcb2     02 00 FB FB 
1bcb6     0D 10 FA 07 
1bcba     0B 02 08 FD 
1bcbe     F9 F4 FF 0D | 	byte	$02, $00, $fb, $fb, $0d, $10, $fa, $07, $0b, $02, $08, $fd, $f9, $f4, $ff, $0d
1bcc2     10 10 FB FC 
1bcc6     FB FB FD 0B 
1bcca     08 05 0C 00 
1bcce     FB F1 F7 0A | 	byte	$10, $10, $fb, $fc, $fb, $fb, $fd, $0b, $08, $05, $0c, $00, $fb, $f1, $f7, $0a
1bcd2     0C 11 04 FF 
1bcd6     0A FB 02 02 
1bcda     07 06 FB FC 
1bcde     F8 F7 0F 20 | 	byte	$0c, $11, $04, $ff, $0a, $fb, $02, $02, $07, $06, $fb, $fc, $f8, $f7, $0f, $20
1bce2     08 F4 01 0B 
1bce6     0C 00 FE 04 
1bcea     00 FF 06 0B 
1bcee     0D 08 FF 01 | 	byte	$08, $f4, $01, $0b, $0c, $00, $fe, $04, $00, $ff, $06, $0b, $0d, $08, $ff, $01
1bcf2     01 03 08 00 
1bcf6     04 FB F7 0B 
1bcfa     12 10 00 05 
1bcfe     0B 02 F8 F7 | 	byte	$01, $03, $08, $00, $04, $fb, $f7, $0b, $12, $10, $00, $05, $0b, $02, $f8, $f7
1bd02     09 07 07 0D 
1bd06     07 10 06 FD 
1bd0a     05 06 0A 10 
1bd0e     00 F7 0B 19 | 	byte	$09, $07, $07, $0d, $07, $10, $06, $fd, $05, $06, $0a, $10, $00, $f7, $0b, $19
1bd12     0D 10 05 03 
1bd16     FC FB 01 07 
1bd1a     0B 02 FF FF 
1bd1e     08 FE 09 10 | 	byte	$0d, $10, $05, $03, $fc, $fb, $01, $07, $0b, $02, $ff, $ff, $08, $fe, $09, $10
1bd22     08 04 04 08 
1bd26     F9 FD 03 FB 
1bd2a     F9 FB 10 08 
1bd2e     EC FF 0A 0E | 	byte	$08, $04, $04, $08, $f9, $fd, $03, $fb, $f9, $fb, $10, $08, $ec, $ff, $0a, $0e
1bd32     00 FD 10 08 
1bd36     FC E8 FF 1A 
1bd3a     08 FF 09 09 
1bd3e     FE F9 FF 00 | 	byte	$00, $fd, $10, $08, $fc, $e8, $ff, $1a, $08, $ff, $09, $09, $fe, $f9, $ff, $00
1bd42     F5 FF 11 15 
1bd46     09 00 F4 F3 
1bd4a     0E 0C 01 04 
1bd4e     09 0A F6 FD | 	byte	$f5, $ff, $11, $15, $09, $00, $f4, $f3, $0e, $0c, $01, $04, $09, $0a, $f6, $fd
1bd52     0A 08 04 03 
1bd56     00 01 0B 0B 
1bd5a     02 FD 00 FA 
1bd5e     01 04 12 0C | 	byte	$0a, $08, $04, $03, $00, $01, $0b, $0b, $02, $fd, $00, $fa, $01, $04, $12, $0c
1bd62     FC 04 01 02 
1bd66     0A 00 03 11 
1bd6a     04 03 10 09 
1bd6e     04 FB 06 0B | 	byte	$fc, $04, $01, $02, $0a, $00, $03, $11, $04, $03, $10, $09, $04, $fb, $06, $0b
1bd72     05 FC 02 15 
1bd76     13 05 02 03 
1bd7a     FC 05 0D 0E 
1bd7e     08 FD FF FC | 	byte	$05, $fc, $02, $15, $13, $05, $02, $03, $fc, $05, $0d, $0e, $08, $fd, $ff, $fc
1bd82     FD 13 0A FF 
1bd86     FD FF 04 03 
1bd8a     0A F9 FA FF 
1bd8e     05 08 02 FF | 	byte	$fd, $13, $0a, $ff, $fd, $ff, $04, $03, $0a, $f9, $fa, $ff, $05, $08, $02, $ff
1bd92     09 04 FF F6 
1bd96     FD 05 03 0D 
1bd9a     0B 02 FE FD 
1bd9e     00 02 0B 05 | 	byte	$09, $04, $ff, $f6, $fd, $05, $03, $0d, $0b, $02, $fe, $fd, $00, $02, $0b, $05
1bda2     F9 F5 06 13 
1bda6     08 01 FB 05 
1bdaa     00 FD 0E 12 
1bdae     00 F9 04 FB | 	byte	$f9, $f5, $06, $13, $08, $01, $fb, $05, $00, $fd, $0e, $12, $00, $f9, $04, $fb
1bdb2     03 02 07 04 
1bdb6     FE 02 0D 04 
1bdba     FD 0B 0B 08 
1bdbe     00 FF 07 01 | 	byte	$03, $02, $07, $04, $fe, $02, $0d, $04, $fd, $0b, $0b, $08, $00, $ff, $07, $01
1bdc2     FF 07 05 F9 
1bdc6     FB FF 08 09 
1bdca     10 16 02 05 
1bdce     09 00 03 06 | 	byte	$ff, $07, $05, $f9, $fb, $ff, $08, $09, $10, $16, $02, $05, $09, $00, $03, $06
1bdd2     01 0A 0B 0C 
1bdd6     08 FA 0B 14 
1bdda     FA FF 10 10 
1bdde     FE FF 10 07 | 	byte	$01, $0a, $0b, $0c, $08, $fa, $0b, $14, $fa, $ff, $10, $10, $fe, $ff, $10, $07
1bde2     02 00 02 0D 
1bde6     02 04 00 FB 
1bdea     06 08 05 05 
1bdee     FA F9 10 0B | 	byte	$02, $00, $02, $0d, $02, $04, $00, $fb, $06, $08, $05, $05, $fa, $f9, $10, $0b
1bdf2     F8 F2 FF 0C 
1bdf6     0B 02 02 00 
1bdfa     FF FC EA 07 
1bdfe     15 00 02 05 | 	byte	$f8, $f2, $ff, $0c, $0b, $02, $02, $00, $ff, $fc, $ea, $07, $15, $00, $02, $05
1be02     02 01 0B 10 
1be06     FC F1 0A 0C 
1be0a     FA F7 05 0B 
1be0e     04 FC 05 14 | 	byte	$02, $01, $0b, $10, $fc, $f1, $0a, $0c, $fa, $f7, $05, $0b, $04, $fc, $05, $14
1be12     05 04 F9 ED 
1be16     0F 30 00 C3 
1be1a     EF 2F 40 14 
1be1e     C8 C7 07 45 | 	byte	$05, $04, $f9, $ed, $0f, $30, $00, $c3, $ef, $2f, $40, $14, $c8, $c7, $07, $45
1be22     2C E0 CD FF 
1be26     30 20 E4 E1 
1be2a     13 23 0A E2 
1be2e     EF 23 30 02 | 	byte	$2c, $e0, $cd, $ff, $30, $20, $e4, $e1, $13, $23, $0a, $e2, $ef, $23, $30, $02
1be32     E1 F7 17 09 
1be36     F3 07 0B 0B 
1be3a     0A 0B 00 03 
1be3e     14 00 FB 25 | 	byte	$e1, $f7, $17, $09, $f3, $07, $0b, $0b, $0a, $0b, $00, $03, $14, $00, $fb, $25
1be42     20 E4 CF FF 
1be46     3F 34 F0 CB 
1be4a     FF 24 00 F2 
1be4e     13 2C 00 C4 | 	byte	$20, $e4, $cf, $ff, $3f, $34, $f0, $cb, $ff, $24, $00, $f2, $13, $2c, $00, $c4
1be52     EF 2D 20 F1 
1be56     FF 07 FC FB 
1be5a     07 0E 03 F2 
1be5e     E4 FD 33 30 | 	byte	$ef, $2d, $20, $f1, $ff, $07, $fc, $fb, $07, $0e, $03, $f2, $e4, $fd, $33, $30
1be62     E0 C3 FF 44 
1be66     24 C8 CF 27 
1be6a     38 F0 DB FF 
1be6e     17 00 F6 1D | 	byte	$e0, $c3, $ff, $44, $24, $c8, $cf, $27, $38, $f0, $db, $ff, $17, $00, $f6, $1d
1be72     16 E4 D1 1F 
1be76     40 F8 F7 15 
1be7a     0D F0 D7 FB 
1be7e     32 20 F0 E9 | 	byte	$16, $e4, $d1, $1f, $40, $f8, $f7, $15, $0d, $f0, $d7, $fb, $32, $20, $f0, $e9
1be82     05 14 20 F8 
1be86     FB 27 00 D7 
1be8a     0F 04 F2 15 
1be8e     12 05 FC F9 | 	byte	$05, $14, $20, $f8, $fb, $27, $00, $d7, $0f, $04, $f2, $15, $12, $05, $fc, $f9
1be92     FB 15 10 F0 
1be96     27 30 E0 F7 
1be9a     08 FD 23 00 
1be9e     EB 0D 27 2A | 	byte	$fb, $15, $10, $f0, $27, $30, $e0, $f7, $08, $fd, $23, $00, $eb, $0d, $27, $2a
1bea2     E0 CF 27 30 
1bea6     F4 DD FF 3F 
1beaa     20 C8 DF 37 
1beae     28 D0 DF 35 | 	byte	$e0, $cf, $27, $30, $f4, $dd, $ff, $3f, $20, $c8, $df, $37, $28, $d0, $df, $35
1beb2     18 E8 F7 26 
1beb6     20 E4 D7 0B 
1beba     2A F0 DB 27 
1bebe     28 D8 DB 1F | 	byte	$18, $e8, $f7, $26, $20, $e4, $d7, $0b, $2a, $f0, $db, $27, $28, $d8, $db, $1f
1bec2     30 F2 CD FF 
1bec6     37 14 D1 E5 
1beca     35 28 D0 DD 
1bece     37 18 C8 F3 | 	byte	$30, $f2, $cd, $ff, $37, $14, $d1, $e5, $35, $28, $d0, $dd, $37, $18, $c8, $f3
1bed2     39 10 E0 FB 
1bed6     1D 12 F1 F3 
1beda     FC 12 16 04 
1bede     F9 FF 09 FE | 	byte	$39, $10, $e0, $fb, $1d, $12, $f1, $f3, $fc, $12, $16, $04, $f9, $ff, $09, $fe
1bee2     F4 0D 31 18 
1bee6     E0 DB 0D 2B 
1beea     08 D7 F3 33 
1beee     28 E8 EF 23 | 	byte	$f4, $0d, $31, $18, $e0, $db, $0d, $2b, $08, $d7, $f3, $33, $28, $e8, $ef, $23
1bef2     12 F0 FF 11 
1bef6     F8 E7 05 12 
1befa     06 1B 20 FA 
1befe     E3 FF 14 13 | 	byte	$12, $f0, $ff, $11, $f8, $e7, $05, $12, $06, $1b, $20, $fa, $e3, $ff, $14, $13
1bf02     05 FF 13 25 
1bf06     0A D8 F5 1E 
1bf0a     10 EC FF 20 
1bf0e     10 00 0A 04 | 	byte	$05, $ff, $13, $25, $0a, $d8, $f5, $1e, $10, $ec, $ff, $20, $10, $00, $0a, $04
1bf12     F2 F2 0D 20 
1bf16     00 C9 F5 3F 
1bf1a     38 00 C0 ED 
1bf1e     3F 20 E3 0F | 	byte	$f2, $f2, $0d, $20, $00, $c9, $f5, $3f, $38, $00, $c0, $ed, $3f, $20, $e3, $0f
1bf22     10 E0 E5 0D 
1bf26     01 0B 27 40 
1bf2a     00 BB E7 03 
1bf2e     FA F5 FF 13 | 	byte	$10, $e0, $e5, $0d, $01, $0b, $27, $40, $00, $bb, $e7, $03, $fa, $f5, $ff, $13
1bf32     25 32 10 F0 
1bf36     F5 F4 D6 C7 
1bf3a     FF 36 2A 0B 
1bf3e     1B 10 D4 E3 | 	byte	$25, $32, $10, $f0, $f5, $f4, $d6, $c7, $ff, $36, $2a, $0b, $1b, $10, $d4, $e3
1bf42     1F 40 08 C2 
1bf46     BB FB 3B 28 
1bf4a     04 06 E4 D7 
1bf4e     17 42 18 E6 | 	byte	$1f, $40, $08, $c2, $bb, $fb, $3b, $28, $04, $06, $e4, $d7, $17, $42, $18, $e6
1bf52     FD 27 28 E8 
1bf56     D1 E9 EC EE 
1bf5a     0F 37 20 05 
1bf5e     0E 14 08 FD | 	byte	$fd, $27, $28, $e8, $d1, $e9, $ec, $ee, $0f, $37, $20, $05, $0e, $14, $08, $fd
1bf62     F8 F2 F7 0C 
1bf66     23 2A 20 11 
1bf6a     00 E0 B5 E3 
1bf6e     37 40 08 D0 | 	byte	$f8, $f2, $f7, $0c, $23, $2a, $20, $11, $00, $e0, $b5, $e3, $37, $40, $08, $d0
1bf72     ED 2F 40 00 
1bf76     FB EC DB 17 
1bf7a     28 00 E3 FF 
1bf7e     37 30 E2 DF | 	byte	$ed, $2f, $40, $00, $fb, $ec, $db, $17, $28, $00, $e3, $ff, $37, $30, $e2, $df
1bf82     F9 F7 FA 0B 
1bf86     19 17 25 14 
1bf8a     EA E7 05 04 
1bf8e     E8 E6 07 13 | 	byte	$f9, $f7, $fa, $0b, $19, $17, $25, $14, $ea, $e7, $05, $04, $e8, $e6, $07, $13
1bf92     1D 22 08 F7 
1bf96     F7 D8 C5 FF 
1bf9a     45 30 E8 CB 
1bf9e     FF 3B 20 FD | 	byte	$1d, $22, $08, $f7, $f7, $d8, $c5, $ff, $45, $30, $e8, $cb, $ff, $3b, $20, $fd
1bfa2     04 E0 FD 25 
1bfa6     08 E9 07 37 
1bfaa     30 F0 D0 DC 
1bfae     F7 0D 00 F5 | 	byte	$04, $e0, $fd, $25, $08, $e9, $07, $37, $30, $f0, $d0, $dc, $f7, $0d, $00, $f5
1bfb2     13 3A 28 E8 
1bfb6     D5 FF 19 08 
1bfba     F2 F7 11 1A 
1bfbe     02 F9 07 17 | 	byte	$13, $3a, $28, $e8, $d5, $ff, $19, $08, $f2, $f7, $11, $1a, $02, $f9, $07, $17
1bfc2     14 F0 D0 FB 
1bfc6     3F 30 E8 CB 
1bfca     FF 3B 30 F2 
1bfce     E2 07 20 08 | 	byte	$14, $f0, $d0, $fb, $3f, $30, $e8, $cb, $ff, $3b, $30, $f2, $e2, $07, $20, $08
1bfd2     E0 F7 2B 39 
1bfd6     10 DA D7 FF 
1bfda     1B 00 EA 07 
1bfde     35 29 FA D4 | 	byte	$e0, $f7, $2b, $39, $10, $da, $d7, $ff, $1b, $00, $ea, $07, $35, $29, $fa, $d4
1bfe2     EA 1F 20 F8 
1bfe6     FF 1A 00 E4 
1bfea     07 1A 04 05 
1bfee     06 E0 E7 2B | 	byte	$ea, $1f, $20, $f8, $ff, $1a, $00, $e4, $07, $1a, $04, $05, $06, $e0, $e7, $2b
1bff2     30 F4 CB F7 
1bff6     2B 24 EA E3 
1bffa     16 15 F0 D9 
1bffe     07 43 20 F4 | 	byte	$30, $f4, $cb, $f7, $2b, $24, $ea, $e3, $16, $15, $f0, $d9, $07, $43, $20, $f4
1c002     ED FA 04 EC 
1c006     E5 0B 2D 10 
1c00a     FC 15 00 D8 
1c00e     EF 22 26 00 | 	byte	$ed, $fa, $04, $ec, $e5, $0b, $2d, $10, $fc, $15, $00, $d8, $ef, $22, $26, $00
1c012     E9 09 16 FC 
1c016     ED FF 1D 16 
1c01a     EA D2 FF 3D 
1c01e     20 D0 D3 17 | 	byte	$e9, $09, $16, $fc, $ed, $ff, $1d, $16, $ea, $d2, $ff, $3d, $20, $d0, $d3, $17
1c022     35 10 E1 FF 
1c026     2D 10 D2 E7 
1c02a     3B 30 F0 FB 
1c02e     1D 08 D4 D3 | 	byte	$35, $10, $e1, $ff, $2d, $10, $d2, $e7, $3b, $30, $f0, $fb, $1d, $08, $d4, $d3
1c032     17 38 04 F7 
1c036     17 25 F8 D2 
1c03a     F7 30 10 ED 
1c03e     0F 25 00 DD | 	byte	$17, $38, $04, $f7, $17, $25, $f8, $d2, $f7, $30, $10, $ed, $0f, $25, $00, $dd
1c042     FF 24 12 07 
1c046     00 E3 FF 33 
1c04a     10 C8 E7 2B 
1c04e     19 F2 FB 27 | 	byte	$ff, $24, $12, $07, $00, $e3, $ff, $33, $10, $c8, $e7, $2b, $19, $f2, $fb, $27
1c052     10 D0 D7 2F 
1c056     28 F0 FB 29 
1c05a     10 CA D7 1B 
1c05e     20 E8 FB 2A | 	byte	$10, $d0, $d7, $2f, $28, $f0, $fb, $29, $10, $ca, $d7, $1b, $20, $e8, $fb, $2a
1c062     14 F0 ED FC 
1c066     03 03 0E 1B 
1c06a     0C F0 F1 01 
1c06e     0A 09 0E 14 | 	byte	$14, $f0, $ed, $fc, $03, $03, $0e, $1b, $0c, $f0, $f1, $01, $0a, $09, $0e, $14
1c072     E8 DE 1B 33 
1c076     00 D1 FF 2C 
1c07a     00 EB 0F 2C 
1c07e     08 D0 F7 30 | 	byte	$e8, $de, $1b, $33, $00, $d1, $ff, $2c, $00, $eb, $0f, $2c, $08, $d0, $f7, $30
1c082     02 ED 07 29 
1c086     04 C9 EF 20 
1c08a     00 E7 17 31 
1c08e     00 FD 19 00 | 	byte	$02, $ed, $07, $29, $04, $c9, $ef, $20, $00, $e7, $17, $31, $00, $fd, $19, $00
1c092     E0 FF 24 0B 
1c096     FF 0B 00 F1 
1c09a     FF 15 10 19 
1c09e     00 E0 0B 34 | 	byte	$e0, $ff, $24, $0b, $ff, $0b, $00, $f1, $ff, $15, $10, $19, $00, $e0, $0b, $34
1c0a2     00 C9 0B 30 
1c0a6     F8 F7 1D 24 
1c0aa     F0 C3 13 28 
1c0ae     FA 07 2F 20 | 	byte	$00, $c9, $0b, $30, $f8, $f7, $1d, $24, $f0, $c3, $13, $28, $fa, $07, $2f, $20
1c0b2     E0 D5 09 00 
1c0b6     E7 0F 2A 04 
1c0ba     FF 1A 00 D6 
1c0be     EF 20 04 FF | 	byte	$e0, $d5, $09, $00, $e7, $0f, $2a, $04, $ff, $1a, $00, $d6, $ef, $20, $04, $ff
1c0c2     22 08 E0 F7 
1c0c6     0B 00 13 14 
1c0ca     E0 EB 2F 20 
1c0ce     D0 F3 2C F8 | 	byte	$22, $08, $e0, $f7, $0b, $00, $13, $14, $e0, $eb, $2f, $20, $d0, $f3, $2c, $f8
1c0d2     F7 1D 2A F8 
1c0d6     C7 0B 12 F3 
1c0da     0F 30 20 F0 
1c0de     E1 FC F1 E2 | 	byte	$f7, $1d, $2a, $f8, $c7, $0b, $12, $f3, $0f, $30, $20, $f0, $e1, $fc, $f1, $e2
1c0e2     0D 21 08 FF 
1c0e6     15 12 E8 E3 
1c0ea     0E 10 F8 13 
1c0ee     24 00 F5 0B | 	byte	$0d, $21, $08, $ff, $15, $12, $e8, $e3, $0e, $10, $f8, $13, $24, $00, $f5, $0b
1c0f2     00 FF 23 10 
1c0f6     D4 FB 3A 10 
1c0fa     CC 0F 24 F0 
1c0fe     FF 2D 20 E0 | 	byte	$00, $ff, $23, $10, $d4, $fb, $3a, $10, $cc, $0f, $24, $f0, $ff, $2d, $20, $e0
1c102     E3 21 00 FF 
1c106     2F 22 FC F2 
1c10a     FD EC DA 0B 
1c10e     20 0A 0A 17 | 	byte	$e3, $21, $00, $ff, $2f, $22, $fc, $f2, $fd, $ec, $da, $0b, $20, $0a, $0a, $17
1c112     10 EA E9 09 
1c116     06 06 19 12 
1c11a     F9 F7 06 FD 
1c11e     07 23 F8 D5 | 	byte	$10, $ea, $e9, $09, $06, $06, $19, $12, $f9, $f7, $06, $fd, $07, $23, $f8, $d5
1c122     0F 33 F0 D3 
1c126     23 00 F1 15 
1c12a     2C 02 D6 05 
1c12e     08 F0 17 30 | 	byte	$0f, $33, $f0, $d3, $23, $00, $f1, $15, $2c, $02, $d6, $05, $08, $f0, $17, $30
1c132     0A 04 01 F0 
1c136     E0 EF 11 0C 
1c13a     08 15 18 08 
1c13e     E8 EF 01 01 | 	byte	$0a, $04, $01, $f0, $e0, $ef, $11, $0c, $08, $15, $18, $08, $e8, $ef, $01, $01
1c142     07 0C 05 FC 
1c146     FB 02 04 13 
1c14a     24 00 CC FB 
1c14e     3A 10 CE 13 | 	byte	$07, $0c, $05, $fc, $fb, $02, $04, $13, $24, $00, $cc, $fb, $3a, $10, $ce, $13
1c152     10 E9 07 34 
1c156     10 E0 F9 0A 
1c15a     EC 0B 32 04 
1c15e     10 14 E4 DD | 	byte	$10, $e9, $07, $34, $10, $e0, $f9, $0a, $ec, $0b, $32, $04, $10, $14, $e4, $dd
1c162     F5 04 00 13 
1c166     22 14 13 F0 
1c16a     E5 06 00 07 
1c16e     12 0A FF F9 | 	byte	$f5, $04, $00, $13, $22, $14, $13, $f0, $e5, $06, $00, $07, $12, $0a, $ff, $f9
1c172     03 01 17 23 
1c176     E4 E6 2F 20 
1c17a     D0 FF 14 EB 
1c17e     0B 35 10 EE | 	byte	$03, $01, $17, $23, $e4, $e6, $2f, $20, $d0, $ff, $14, $eb, $0b, $35, $10, $ee
1c182     F7 FD EC 17 
1c186     31 02 0D 18 
1c18a     E8 DD ED F9 
1c18e     FE 13 22 14 | 	byte	$f7, $fd, $ec, $17, $31, $02, $0d, $18, $e8, $dd, $ed, $f9, $fe, $13, $22, $14
1c192     16 F8 E5 FF 
1c196     00 FF 13 10 
1c19a     00 F3 05 08 
1c19e     15 20 E2 DB | 	byte	$16, $f8, $e5, $ff, $00, $ff, $13, $10, $00, $f3, $05, $08, $15, $20, $e2, $db
1c1a2     27 24 E0 FF 
1c1a6     20 E8 FF 37 
1c1aa     08 F0 FF F8 
1c1ae     E2 FB 37 18 | 	byte	$27, $24, $e0, $ff, $20, $e8, $ff, $37, $08, $f0, $ff, $f8, $e2, $fb, $37, $18
1c1b2     0B 29 00 DB 
1c1b6     FB F0 E9 FF 
1c1ba     15 1B 22 1A 
1c1be     EA ED 06 F8 | 	byte	$0b, $29, $00, $db, $fb, $f0, $e9, $ff, $15, $1b, $22, $1a, $ea, $ed, $06, $f8
1c1c2     03 10 0A 00 
1c1c6     FF 10 09 1B 
1c1ca     00 D7 0F 2A 
1c1ce     E0 E7 28 F0 | 	byte	$03, $10, $0a, $00, $ff, $10, $09, $1b, $00, $d7, $0f, $2a, $e0, $e7, $28, $f0
1c1d2     F7 37 08 FF 
1c1d6     15 F2 DB 07 
1c1da     20 09 1E 28 
1c1de     EC F5 FC DB | 	byte	$f7, $37, $08, $ff, $15, $f2, $db, $07, $20, $09, $1e, $28, $ec, $f5, $fc, $db
1c1e2     FF 10 07 1B 
1c1e6     20 08 F7 07 
1c1ea     F0 E7 05 F6 
1c1ee     07 10 FC 11 | 	byte	$ff, $10, $07, $1b, $20, $08, $f7, $07, $f0, $e7, $05, $f6, $07, $10, $fc, $11
1c1f2     15 1A F0 D7 
1c1f6     1F 20 D0 0F 
1c1fa     10 E5 1F 20 
1c1fe     ED 1B 10 E2 | 	byte	$15, $1a, $f0, $d7, $1f, $20, $d0, $0f, $10, $e5, $1f, $20, $ed, $1b, $10, $e2
1c202     FF 10 01 0F 
1c206     2B 10 F1 06 
1c20a     E8 DF 07 F8 
1c20e     05 22 10 07 | 	byte	$ff, $10, $01, $0f, $2b, $10, $f1, $06, $e8, $df, $07, $f8, $05, $22, $10, $07
1c212     06 05 F6 EB 
1c216     FF FD 07 15 
1c21a     F8 0B 14 13 
1c21e     19 E8 E7 20 | 	byte	$06, $05, $f6, $eb, $ff, $fd, $07, $15, $f8, $0b, $14, $13, $19, $e8, $e7, $20
1c222     00 DF 1B 00 
1c226     EB 2F 10 FF 
1c22a     2D 00 E5 03 
1c22e     FB 15 16 17 | 	byte	$00, $df, $1b, $00, $eb, $2f, $10, $ff, $2d, $00, $e5, $03, $fb, $15, $16, $17
1c232     08 FE 08 E1 
1c236     F7 10 F2 0D 
1c23a     10 04 0C 0B 
1c23e     0C F2 FA 03 | 	byte	$08, $fe, $08, $e1, $f7, $10, $f2, $0d, $10, $04, $0c, $0b, $0c, $f2, $fa, $03
1c242     F7 07 02 03 
1c246     18 11 11 0A 
1c24a     F2 EF 13 00 
1c24e     DB 07 04 F5 | 	byte	$f7, $07, $02, $03, $18, $11, $11, $0a, $f2, $ef, $13, $00, $db, $07, $04, $f5
1c252     23 14 09 11 
1c256     F1 F7 FE FB 
1c25a     1B 0C 09 14 
1c25e     F8 EC F5 F7 | 	byte	$23, $14, $09, $11, $f1, $f7, $fe, $fb, $1b, $0c, $09, $14, $f8, $ec, $f5, $f7
1c262     09 05 01 09 
1c266     10 10 FC F6 
1c26a     FF 02 FC 02 
1c26e     04 FB FF 09 | 	byte	$09, $05, $01, $09, $10, $10, $fc, $f6, $ff, $02, $fc, $02, $04, $fb, $ff, $09
1c272     0D 12 10 00 
1c276     E8 FD 1C 0C 
1c27a     ED F6 FD 0B 
1c27e     20 09 0E 14 | 	byte	$0d, $12, $10, $00, $e8, $fd, $1c, $0c, $ed, $f6, $fd, $0b, $20, $09, $0e, $14
1c282     E8 F3 06 09 
1c286     1B 04 09 10 
1c28a     F4 FD 04 FF 
1c28e     12 00 FE 1B | 	byte	$e8, $f3, $06, $09, $1b, $04, $09, $10, $f4, $fd, $04, $ff, $12, $00, $fe, $1b
1c292     0B 00 FF 04 
1c296     04 00 00 02 
1c29a     FA F9 07 0E 
1c29e     17 1A 01 EB | 	byte	$0b, $00, $ff, $04, $04, $00, $00, $02, $fa, $f9, $07, $0e, $17, $1a, $01, $eb
1c2a2     F6 17 08 F1 
1c2a6     05 00 0B 1B 
1c2aa     08 13 04 E2 
1c2ae     FB 03 11 19 | 	byte	$f6, $17, $08, $f1, $05, $00, $0b, $1b, $08, $13, $04, $e2, $fb, $03, $11, $19
1c2b2     FE 09 04 EB 
1c2b6     FD FA FB 05 
1c2ba     FE 09 17 10 
1c2be     FE F7 03 10 | 	byte	$fe, $09, $04, $eb, $fd, $fa, $fb, $05, $fe, $09, $17, $10, $fe, $f7, $03, $10
1c2c2     07 01 00 F5 
1c2c6     F8 07 0D 17 
1c2ca     14 04 F0 EB 
1c2ce     0F 14 F4 F7 | 	byte	$07, $01, $00, $f5, $f8, $07, $0d, $17, $14, $04, $f0, $eb, $0f, $14, $f4, $f7
1c2d2     F9 FF 20 09 
1c2d6     05 16 F0 E9 
1c2da     09 03 13 10 
1c2de     00 0B F4 E9 | 	byte	$f9, $ff, $20, $09, $05, $16, $f0, $e9, $09, $03, $13, $10, $00, $0b, $f4, $e9
1c2e2     FE F3 05 15 
1c2e6     FD 0F 1A 08 
1c2ea     0C 00 FE 0B 
1c2ee     06 F9 FA 00 | 	byte	$fe, $f3, $05, $15, $fd, $0f, $1a, $08, $0c, $00, $fe, $0b, $06, $f9, $fa, $00
1c2f2     01 05 10 1B 
1c2f6     10 06 FA E1 
1c2fa     FF 20 F9 FD 
1c2fe     0A FB 17 10 | 	byte	$01, $05, $10, $1b, $10, $06, $fa, $e1, $ff, $20, $f9, $fd, $0a, $fb, $17, $10
1c302     03 17 00 F9 
1c306     FE F7 1D 18 
1c30a     03 10 F0 EF 
1c30e     03 F2 FF 0A | 	byte	$03, $17, $00, $f9, $fe, $f7, $1d, $18, $03, $10, $f0, $ef, $03, $f2, $ff, $0a
1c312     07 15 16 14 
1c316     0C FA FC FF 
1c31a     FD 02 F5 EC 
1c31e     FD 0D 1A 18 | 	byte	$07, $15, $16, $14, $0c, $fa, $fc, $ff, $fd, $02, $f5, $ec, $fd, $0d, $1a, $18
1c322     05 02 F8 E7 
1c326     FF 1A 00 FB 
1c32a     FE F9 13 08 
1c32e     FB 1E 0C F0 | 	byte	$05, $02, $f8, $e7, $ff, $1a, $00, $fb, $fe, $f9, $13, $08, $fb, $1e, $0c, $f0
1c332     F7 F7 15 18 
1c336     FF 14 00 E6 
1c33a     FE F0 FF 10 
1c33e     FE 11 14 09 | 	byte	$f7, $f7, $15, $18, $ff, $14, $00, $e6, $fe, $f0, $ff, $10, $fe, $11, $14, $09
1c342     10 FC FD 08 
1c346     02 05 FC F5 
1c34a     F7 FF 13 18 
1c34e     12 0C 02 F8 | 	byte	$10, $fc, $fd, $08, $02, $05, $fc, $f5, $f7, $ff, $13, $18, $12, $0c, $02, $f8
1c352     F4 F6 15 10 
1c356     FB FF 00 FF 
1c35a     17 10 0F 18 
1c35e     F8 F7 FC FF | 	byte	$f4, $f6, $15, $10, $fb, $ff, $00, $ff, $17, $10, $0f, $18, $f8, $f7, $fc, $ff
1c362     20 08 03 04 
1c366     F0 FF F4 07 
1c36a     18 FB 06 13 
1c36e     0D 13 02 05 | 	byte	$20, $08, $03, $04, $f0, $ff, $f4, $07, $18, $fb, $06, $13, $0d, $13, $02, $05
1c372     05 FE 01 F8 
1c376     FB FA F3 0B 
1c37a     16 0C FE FF 
1c37e     0A 01 F3 FF | 	byte	$05, $fe, $01, $f8, $fb, $fa, $f3, $0b, $16, $0c, $fe, $ff, $0a, $01, $f3, $ff
1c382     15 08 F1 F9 
1c386     FF 0B 08 02 
1c38a     1A 10 F6 FB 
1c38e     F9 13 0A FF | 	byte	$15, $08, $f1, $f9, $ff, $0b, $08, $02, $1a, $10, $f6, $fb, $f9, $13, $0a, $ff
1c392     0D FC 05 05 
1c396     F0 F8 FB 0B 
1c39a     14 0B 0E 11 
1c39e     FB FA FB FA | 	byte	$0d, $fc, $05, $05, $f0, $f8, $fb, $0b, $14, $0b, $0e, $11, $fb, $fa, $fb, $fa
1c3a2     11 04 F8 F2 
1c3a6     FF 13 00 04 
1c3aa     11 03 FA F7 
1c3ae     17 20 F6 F3 | 	byte	$11, $04, $f8, $f2, $ff, $13, $00, $04, $11, $03, $fa, $f7, $17, $20, $f6, $f3
1c3b2     07 FC FF 0A 
1c3b6     00 12 10 01 
1c3ba     08 00 FE FE 
1c3be     01 0B 10 01 | 	byte	$07, $fc, $ff, $0a, $00, $12, $10, $01, $08, $00, $fe, $fe, $01, $0b, $10, $01
1c3c2     07 11 08 07 
1c3c6     F9 FF 08 01 
1c3ca     10 00 FE 0D 
1c3ce     0E 0D 06 02 | 	byte	$07, $11, $08, $07, $f9, $ff, $08, $01, $10, $00, $fe, $0d, $0e, $0d, $06, $02
1c3d2     FA F2 FE 01 
1c3d6     04 10 0A 05 
1c3da     0B 04 10 09 
1c3de     FF F9 F7 03 | 	byte	$fa, $f2, $fe, $01, $04, $10, $0a, $05, $0b, $04, $10, $09, $ff, $f9, $f7, $03
1c3e2     04 FC FF 06 
1c3e6     FE 03 10 07 
1c3ea     06 07 04 F7 
1c3ee     FB 05 08 02 | 	byte	$04, $fc, $ff, $06, $fe, $03, $10, $07, $06, $07, $04, $f7, $fb, $05, $08, $02
1c3f2     FE FD 05 07 
1c3f6     08 07 08 FD 
1c3fa     FC 07 11 04 
1c3fe     F7 07 08 FE | 	byte	$fe, $fd, $05, $07, $08, $07, $08, $fd, $fc, $07, $11, $04, $f7, $07, $08, $fe
1c402     FA 05 02 F3 
1c406     FE 0D 05 07 
1c40a     10 0C 03 0B 
1c40e     09 F9 FA 05 | 	byte	$fa, $05, $02, $f3, $fe, $0d, $05, $07, $10, $0c, $03, $0b, $09, $f9, $fa, $05
1c412     07 FC FB 0B 
1c416     10 02 FC F9 
1c41a     03 12 10 03 
1c41e     07 07 0B 0A | 	byte	$07, $fc, $fb, $0b, $10, $02, $fc, $f9, $03, $12, $10, $03, $07, $07, $0b, $0a
1c422     06 05 09 05 
1c426     FF 00 F8 FF 
1c42a     0A 04 FC FF 
1c42e     12 08 04 06 | 	byte	$06, $05, $09, $05, $ff, $00, $f8, $ff, $0a, $04, $fc, $ff, $12, $08, $04, $06
1c432     09 03 0A 02 
1c436     FE 08 06 04 
1c43a     FF 03 00 FE 
1c43e     02 FF 0B 06 | 	byte	$09, $03, $0a, $02, $fe, $08, $06, $04, $ff, $03, $00, $fe, $02, $ff, $0b, $06
1c442     01 02 09 01 
1c446     00 FD FF 06 
1c44a     03 01 02 03 
1c44e     06 00 FF 0A | 	byte	$01, $02, $09, $01, $00, $fd, $ff, $06, $03, $01, $02, $03, $06, $00, $ff, $0a
1c452     04 FA 07 08 
1c456     03 06 FA 07 
1c45a     08 00 FE 05 
1c45e     07 00 09 0D | 	byte	$04, $fa, $07, $08, $03, $06, $fa, $07, $08, $00, $fe, $05, $07, $00, $09, $0d
1c462     00 FB FF 04 
1c466     05 FF FF 09 
1c46a     06 01 0A 02 
1c46e     F9 03 0E 08 | 	byte	$00, $fb, $ff, $04, $05, $ff, $ff, $09, $06, $01, $0a, $02, $f9, $03, $0e, $08
1c472     02 FA 05 10 
1c476     FC F1 0F 2A 
1c47a     00 D5 FB 37 
1c47e     18 E5 F7 17 | 	byte	$02, $fa, $05, $10, $fc, $f1, $0f, $2a, $00, $d5, $fb, $37, $18, $e5, $f7, $17
1c482     18 F8 EB 13 
1c486     16 FA FD 0B 
1c48a     11 04 FB 0B 
1c48e     10 FE 05 08 | 	byte	$18, $f8, $eb, $13, $16, $fa, $fd, $0b, $11, $04, $fb, $0b, $10, $fe, $05, $08
1c492     02 FB 03 02 
1c496     02 08 23 19 
1c49a     E0 DA 0F 39 
1c49e     10 CA E3 27 | 	byte	$02, $fb, $03, $02, $02, $08, $23, $19, $e0, $da, $0f, $39, $10, $ca, $e3, $27
1c4a2     34 00 CB F7 
1c4a6     3D 20 E0 EA 
1c4aa     0D 08 ED FF 
1c4ae     2B 2A F0 C1 | 	byte	$34, $00, $cb, $f7, $3d, $20, $e0, $ea, $0d, $08, $ed, $ff, $2b, $2a, $f0, $c1
1c4b2     E7 2B 24 F4 
1c4b6     FB 1B 10 E6 
1c4ba     EF 0E 1A 00 
1c4be     F0 FF 0B 14 | 	byte	$e7, $2b, $24, $f4, $fb, $1b, $10, $e6, $ef, $0e, $1a, $00, $f0, $ff, $0b, $14
1c4c2     04 F7 F4 FC 
1c4c6     0E 10 04 F0 
1c4ca     F7 1A 21 04 
1c4ce     EA F3 02 0D | 	byte	$04, $f7, $f4, $fc, $0e, $10, $04, $f0, $f7, $1a, $21, $04, $ea, $f3, $02, $0d
1c4d2     10 06 FD F8 
1c4d6     07 13 00 FF 
1c4da     03 06 0B 04 
1c4de     FF 09 06 05 | 	byte	$10, $06, $fd, $f8, $07, $13, $00, $ff, $03, $06, $0b, $04, $ff, $09, $06, $05
1c4e2     07 07 00 F9 
1c4e6     0B 06 FF 13 
1c4ea     0C FE FF 04 
1c4ee     05 09 0A 00 | 	byte	$07, $07, $00, $f9, $0b, $06, $ff, $13, $0c, $fe, $ff, $04, $05, $09, $0a, $00
1c4f2     01 08 10 08 
1c4f6     FE 09 13 10 
1c4fa     01 F4 FB 0E 
1c4fe     0A 06 05 07 | 	byte	$01, $08, $10, $08, $fe, $09, $13, $10, $01, $f4, $fb, $0e, $0a, $06, $05, $07
1c502     00 02 00 02 
1c506     FE F7 FF 07 
1c50a     10 0A 08 F0 
1c50e     F9 01 0F 15 | 	byte	$00, $02, $00, $02, $fe, $f7, $ff, $07, $10, $0a, $08, $f0, $f9, $01, $0f, $15
1c512     FA ED FB 11 
1c516     06 F6 F7 06 
1c51a     06 10 12 FA 
1c51e     F1 07 17 08 | 	byte	$fa, $ed, $fb, $11, $06, $f6, $f7, $06, $06, $10, $12, $fa, $f1, $07, $17, $08
1c522     F3 FA 05 08 
1c526     10 04 FA FE 
1c52a     06 09 05 FF 
1c52e     03 01 02 0B | 	byte	$f3, $fa, $05, $08, $10, $04, $fa, $fe, $06, $09, $05, $ff, $03, $01, $02, $0b
1c532     20 08 E2 E7 
1c536     FF 17 11 02 
1c53a     ED ED 05 1E 
1c53e     21 00 F1 03 | 	byte	$20, $08, $e2, $e7, $ff, $17, $11, $02, $ed, $ed, $05, $1e, $21, $00, $f1, $03
1c542     03 05 15 16 
1c546     04 F0 F7 1A 
1c54a     14 00 F6 F9 
1c54e     07 0B 13 16 | 	byte	$03, $05, $15, $16, $04, $f0, $f7, $1a, $14, $00, $f6, $f9, $07, $0b, $13, $16
1c552     10 F6 EB 0B 
1c556     20 08 F3 FF 
1c55a     08 03 0D 10 
1c55e     00 F2 ED 06 | 	byte	$10, $f6, $eb, $0b, $20, $08, $f3, $ff, $08, $03, $0d, $10, $00, $f2, $ed, $06
1c562     23 24 00 E5 
1c566     EF 15 22 0A 
1c56a     F0 EB 07 0C 
1c56e     13 11 F0 E0 | 	byte	$23, $24, $00, $e5, $ef, $15, $22, $0a, $f0, $eb, $07, $0c, $13, $11, $f0, $e0
1c572     FD 22 20 F6 
1c576     EF FB 03 10 
1c57a     01 03 FD F4 
1c57e     03 16 06 FC | 	byte	$fd, $22, $20, $f6, $ef, $fb, $03, $10, $01, $03, $fd, $f4, $03, $16, $06, $fc
1c582     FD FA 0D 14 
1c586     09 01 F5 F7 
1c58a     0F 10 F9 FD 
1c58e     05 0B 0B 01 | 	byte	$fd, $fa, $0d, $14, $09, $01, $f5, $f7, $0f, $10, $f9, $fd, $05, $0b, $0b, $01
1c592     07 04 02 F5 
1c596     F3 0B 0E 0B 
1c59a     00 F2 F7 12 
1c59e     1C 10 F4 F2 | 	byte	$07, $04, $02, $f5, $f3, $0b, $0e, $0b, $00, $f2, $f7, $12, $1c, $10, $f4, $f2
1c5a2     0F 12 00 FF 
1c5a6     05 FC FA 0F 
1c5aa     18 10 05 05 
1c5ae     01 F4 F3 FF | 	byte	$0f, $12, $00, $ff, $05, $fc, $fa, $0f, $18, $10, $05, $05, $01, $f4, $f3, $ff
1c5b2     1D 20 08 F2 
1c5b6     FB 05 16 20 
1c5ba     04 F5 FB 09 
1c5be     10 F8 FD 06 | 	byte	$1d, $20, $08, $f2, $fb, $05, $16, $20, $04, $f5, $fb, $09, $10, $f8, $fd, $06
1c5c2     16 18 02 F5 
1c5c6     F5 FF 10 20 
1c5ca     12 F0 D1 EB 
1c5ce     1D 36 20 04 | 	byte	$16, $18, $02, $f5, $f5, $ff, $10, $20, $12, $f0, $d1, $eb, $1d, $36, $20, $04
1c5d2     FC F1 E0 E5 
1c5d6     07 17 0C EC 
1c5da     F7 13 11 04 
1c5de     02 04 FA F0 | 	byte	$fc, $f1, $e0, $e5, $07, $17, $0c, $ec, $f7, $13, $11, $04, $02, $04, $fa, $f0
1c5e2     FB 08 FE 02 
1c5e6     0F 13 00 F5 
1c5ea     0F 2A 24 F4 
1c5ee     C5 C5 F7 2A | 	byte	$fb, $08, $fe, $02, $0f, $13, $00, $f5, $0f, $2a, $24, $f4, $c5, $c5, $f7, $2a
1c5f2     38 20 F0 D8 
1c5f6     DB 07 3D 4C 
1c5fa     30 F8 C6 BF 
1c5fe     EB 11 1A 06 | 	byte	$38, $20, $f0, $d8, $db, $07, $3d, $4c, $30, $f8, $c6, $bf, $eb, $11, $1a, $06
1c602     F0 FB 15 29 
1c606     2C 10 F5 F5 
1c60a     F4 FF 08 04 
1c60e     FB F6 0B 29 | 	byte	$f0, $fb, $15, $29, $2c, $10, $f5, $f5, $f4, $ff, $08, $04, $fb, $f6, $0b, $29
1c612     22 F8 FB 26 
1c616     22 F0 C0 C7 
1c61a     FF 29 42 2C 
1c61e     F8 E0 D7 FF | 	byte	$22, $f8, $fb, $26, $22, $f0, $c0, $c7, $ff, $29, $42, $2c, $f8, $e0, $d7, $ff
1c622     3B 56 3A 00 
1c626     B8 BD EF 1B 
1c62a     18 FC EA E9 
1c62e     15 3D 48 20 | 	byte	$3b, $56, $3a, $00, $b8, $bd, $ef, $1b, $18, $fc, $ea, $e9, $15, $3d, $48, $20
1c632     E9 DD E5 EE 
1c636     F4 F5 FF 1B 
1c63a     30 14 EC FB 
1c63e     1F 22 E4 B1 | 	byte	$e9, $dd, $e5, $ee, $f4, $f5, $ff, $1b, $30, $14, $ec, $fb, $1f, $22, $e4, $b1
1c642     BB F3 1F 3C 
1c646     20 FA EA EF 
1c64a     1B 3F 4C 10 
1c64e     D0 BA DB 17 | 	byte	$bb, $f3, $1f, $3c, $20, $fa, $ea, $ef, $1b, $3f, $4c, $10, $d0, $ba, $db, $17
1c652     18 F8 E5 DC 
1c656     07 3B 44 26 
1c65a     F4 E0 EE 01 
1c65e     FB F0 EE FF | 	byte	$18, $f8, $e5, $dc, $07, $3b, $44, $26, $f4, $e0, $ee, $01, $fb, $f0, $ee, $ff
1c662     27 47 30 E8 
1c666     D7 FF 20 00 
1c66a     D8 BE E7 1F 
1c66e     47 40 10 EC | 	byte	$27, $47, $30, $e8, $d7, $ff, $20, $00, $d8, $be, $e7, $1f, $47, $40, $10, $ec
1c672     D7 F4 22 3F 
1c676     38 F8 D7 D3 
1c67a     FB 1D 0C FB 
1c67e     F0 FF 27 3F | 	byte	$d7, $f4, $22, $3f, $38, $f8, $d7, $d3, $fb, $1d, $0c, $fb, $f0, $ff, $27, $3f
1c682     2C 00 DA DA 
1c686     F7 F7 F5 F7 
1c68a     FB 25 4B 4A 
1c68e     10 B8 BF FF | 	byte	$2c, $00, $da, $da, $f7, $f7, $f5, $f7, $fb, $25, $4b, $4a, $10, $b8, $bf, $ff
1c692     20 02 E0 DF 
1c696     13 3B 44 18 
1c69a     EA CA E5 17 
1c69e     3F 30 EA D3 | 	byte	$20, $02, $e0, $df, $13, $3b, $44, $18, $ea, $ca, $e5, $17, $3f, $30, $ea, $d3
1c6a2     EA 0B 20 00 
1c6a6     E4 D9 FB 2F 
1c6aa     46 04 D8 DD 
1c6ae     FB 17 00 E5 | 	byte	$ea, $0b, $20, $00, $e4, $d9, $fb, $2f, $46, $04, $d8, $dd, $fb, $17, $00, $e5
1c6b2     D9 F3 27 4D 
1c6b6     40 04 C0 BF 
1c6ba     FF 2E 10 E4 
1c6be     DB 05 2B 40 | 	byte	$d9, $f3, $27, $4d, $40, $04, $c0, $bf, $ff, $2e, $10, $e4, $db, $05, $2b, $40
1c6c2     20 EA C4 D7 
1c6c6     17 43 30 F4 
1c6ca     DD F7 15 20 
1c6ce     00 E4 D1 F3 | 	byte	$20, $ea, $c4, $d7, $17, $43, $30, $f4, $dd, $f7, $15, $20, $00, $e4, $d1, $f3
1c6d2     25 44 20 E2 
1c6d6     E4 FF 23 20 
1c6da     F4 E0 E1 07 
1c6de     33 34 1B 08 | 	byte	$25, $44, $20, $e2, $e4, $ff, $23, $20, $f4, $e0, $e1, $07, $33, $34, $1b, $08
1c6e2     D8 CA FF 2E 
1c6e6     18 F0 E5 07 
1c6ea     27 34 09 E0 
1c6ee     C7 EF 33 28 | 	byte	$d8, $ca, $ff, $2e, $18, $f0, $e5, $07, $27, $34, $09, $e0, $c7, $ef, $33, $28
1c6f2     00 F7 0D 26 
1c6f6     1A F2 DA D5 
1c6fa     07 33 2A 14 
1c6fe     F4 F9 03 08 | 	byte	$00, $f7, $0d, $26, $1a, $f2, $da, $d5, $07, $33, $2a, $14, $f4, $f9, $03, $08
1c702     02 E8 DC E6 
1c706     FF 27 3F 38 
1c70a     20 E8 B4 C5 
1c70e     FF 31 10 E0 | 	byte	$02, $e8, $dc, $e6, $ff, $27, $3f, $38, $20, $e8, $b4, $c5, $ff, $31, $10, $e0
1c712     E9 11 33 2C 
1c716     F8 CA D7 1B 
1c71a     32 08 EB FB 
1c71e     13 27 04 E0 | 	byte	$e9, $11, $33, $2c, $f8, $ca, $d7, $1b, $32, $08, $eb, $fb, $13, $27, $04, $e0
1c722     CB F3 36 24 
1c726     02 04 0C 13 
1c72a     10 FC EA DC 
1c72e     E7 FB 13 2F | 	byte	$cb, $f3, $36, $24, $02, $04, $0c, $13, $10, $fc, $ea, $dc, $e7, $fb, $13, $2f
1c732     36 2C 0A E0 
1c736     B8 D5 13 30 
1c73a     10 E8 F7 17 
1c73e     35 24 F0 D6 | 	byte	$36, $2c, $0a, $e0, $b8, $d5, $13, $30, $10, $e8, $f7, $17, $35, $24, $f0, $d6
1c742     F3 23 18 F2 
1c746     FB 13 21 21 
1c74a     FA D6 DB 0F 
1c74e     31 10 FF 11 | 	byte	$f3, $23, $18, $f2, $fb, $13, $21, $21, $fa, $d6, $db, $0f, $31, $10, $ff, $11
1c752     18 1A F4 EB 
1c756     F7 F2 F6 FB 
1c75a     17 2D 31 20 
1c75e     F2 C0 CB FF | 	byte	$18, $1a, $f4, $eb, $f7, $f2, $f6, $fb, $17, $2d, $31, $20, $f2, $c0, $cb, $ff
1c762     31 14 E4 E7 
1c766     0B 2D 2A F4 
1c76a     D5 EF 22 20 
1c76e     F3 F7 15 1D | 	byte	$31, $14, $e4, $e7, $0b, $2d, $2a, $f4, $d5, $ef, $22, $20, $f3, $f7, $15, $1d
1c772     20 FA D8 D7 
1c776     F7 18 0C 13 
1c77a     22 19 16 F4 
1c77e     E5 F9 F8 FB | 	byte	$20, $fa, $d8, $d7, $f7, $18, $0c, $13, $22, $19, $16, $f4, $e5, $f9, $f8, $fb
1c782     F7 0E 2D 32 
1c786     12 E4 BB CB 
1c78a     FF 33 20 F0 
1c78e     E5 07 26 34 | 	byte	$f7, $0e, $2d, $32, $12, $e4, $bb, $cb, $ff, $33, $20, $f0, $e5, $07, $26, $34
1c792     08 D4 DF 13 
1c796     2B 0A EB FB 
1c79a     0D 23 20 F4 
1c79e     D2 D7 17 32 | 	byte	$08, $d4, $df, $13, $2b, $0a, $eb, $fb, $0d, $23, $20, $f4, $d2, $d7, $17, $32
1c7a2     08 05 17 1B 
1c7a6     14 E8 E3 F3 
1c7aa     FB 03 03 17 
1c7ae     2D 2D 10 E2 | 	byte	$08, $05, $17, $1b, $14, $e8, $e3, $f3, $fb, $03, $03, $17, $2d, $2d, $10, $e2
1c7b2     C0 D7 17 36 
1c7b6     14 EA F5 11 
1c7ba     2B 24 F8 D8 
1c7be     ED 23 20 FC | 	byte	$c0, $d7, $17, $36, $14, $ea, $f5, $11, $2b, $24, $f8, $d8, $ed, $23, $20, $fc
1c7c2     FC 0B 1D 21 
1c7c6     00 E0 D0 FF 
1c7ca     2B 18 0C 08 
1c7ce     08 10 02 F2 | 	byte	$fc, $0b, $1d, $21, $00, $e0, $d0, $ff, $2b, $18, $0c, $08, $08, $10, $02, $f2
1c7d2     E2 E3 F7 0D 
1c7d6     27 2A 20 00 
1c7da     E0 CB E7 17 
1c7de     30 10 EC F1 | 	byte	$e2, $e3, $f7, $0d, $27, $2a, $20, $00, $e0, $cb, $e7, $17, $30, $10, $ec, $f1
1c7e2     07 23 24 00 
1c7e6     D4 DF 1B 20 
1c7ea     02 F7 09 1B 
1c7ee     20 00 E1 D1 | 	byte	$07, $23, $24, $00, $d4, $df, $1b, $20, $02, $f7, $09, $1b, $20, $00, $e1, $d1
1c7f2     EF 13 25 24 
1c7f6     04 FF 03 09 
1c7fa     09 F0 DA E3 
1c7fe     FF 29 31 20 | 	byte	$ef, $13, $25, $24, $04, $ff, $03, $09, $09, $f0, $da, $e3, $ff, $29, $31, $20
1c802     0C F1 D6 D3 
1c806     FF 39 28 F4 
1c80a     E1 FF 25 34 
1c80e     10 E2 CA EA | 	byte	$0c, $f1, $d6, $d3, $ff, $39, $28, $f4, $e1, $ff, $25, $34, $10, $e2, $ca, $ea
1c812     1B 31 12 F9 
1c816     05 1B 15 F4 
1c81a     E0 DD FF 27 
1c81e     43 24 F8 E4 | 	byte	$1b, $31, $12, $f9, $05, $1b, $15, $f4, $e0, $dd, $ff, $27, $43, $24, $f8, $e4
1c822     F7 15 02 F0 
1c826     E5 F3 1B 37 
1c82a     38 14 E4 C2 
1c82e     D7 13 39 13 | 	byte	$f7, $15, $02, $f0, $e5, $f3, $1b, $37, $38, $14, $e4, $c2, $d7, $13, $39, $13
1c832     E8 E6 07 1D 
1c836     24 05 E2 D1 
1c83a     ED 17 38 20 
1c83e     F9 F6 FB 11 | 	byte	$e8, $e6, $07, $1d, $24, $05, $e2, $d1, $ed, $17, $38, $20, $f9, $f6, $fb, $11
1c842     0B F0 E2 F1 
1c846     17 35 2C 10 
1c84a     E0 D5 FB 0D 
1c84e     04 F4 F1 0F | 	byte	$0b, $f0, $e2, $f1, $17, $35, $2c, $10, $e0, $d5, $fb, $0d, $04, $f4, $f1, $0f
1c852     2B 30 1A F8 
1c856     D8 C8 EB 1D 
1c85a     1C 04 E9 EF 
1c85e     13 24 28 0C | 	byte	$2b, $30, $1a, $f8, $d8, $c8, $eb, $1d, $1c, $04, $e9, $ef, $13, $24, $28, $0c
1c862     E8 D8 E2 07 
1c866     2F 30 18 FC 
1c86a     E3 EF 05 17 
1c86e     14 00 FB 07 | 	byte	$e8, $d8, $e2, $07, $2f, $30, $18, $fc, $e3, $ef, $05, $17, $14, $00, $fb, $07
1c872     0F 1B 12 00 
1c876     F0 E6 F3 F6 
1c87a     FB 0C 19 28 
1c87e     23 08 EA EB | 	byte	$0f, $1b, $12, $00, $f0, $e6, $f3, $f6, $fb, $0c, $19, $28, $23, $08, $ea, $eb
1c882     FF FE FA F6 
1c886     FF 1D 24 21 
1c88a     08 EA EB FD 
1c88e     1B 30 14 02 | 	byte	$ff, $fe, $fa, $f6, $ff, $1d, $24, $21, $08, $ea, $eb, $fd, $1b, $30, $14, $02
1c892     E5 DB FA 02 
1c896     13 0C 02 0B 
1c89a     0C 1B 16 FA 
1c89e     F3 E5 ED F9 | 	byte	$e5, $db, $fa, $02, $13, $0c, $02, $0b, $0c, $1b, $16, $fa, $f3, $e5, $ed, $f9
1c8a2     FB 0D 0D 19 
1c8a6     22 08 FF FE 
1c8aa     FF F0 DD EE 
1c8ae     05 21 31 22 | 	byte	$fb, $0d, $0d, $19, $22, $08, $ff, $fe, $ff, $f0, $dd, $ee, $05, $21, $31, $22
1c8b2     00 E2 E4 FF 
1c8b6     23 33 12 F8 
1c8ba     E0 D6 F3 07 
1c8be     14 18 06 04 | 	byte	$00, $e2, $e4, $ff, $23, $33, $12, $f8, $e0, $d6, $f3, $07, $14, $18, $06, $04
1c8c2     04 0E 20 10 
1c8c6     F6 E9 E7 F7 
1c8ca     F8 FB 11 1D 
1c8ce     31 24 FE F8 | 	byte	$04, $0e, $20, $10, $f6, $e9, $e7, $f7, $f8, $fb, $11, $1d, $31, $24, $fe, $f8
1c8d2     F3 ED EA ED 
1c8d6     FF 17 25 20 
1c8da     09 F3 E9 F7 
1c8de     0D 27 29 0A | 	byte	$f3, $ed, $ea, $ed, $ff, $17, $25, $20, $09, $f3, $e9, $f7, $0d, $27, $29, $0a
1c8e2     F0 D8 E7 03 
1c8e6     14 18 06 07 
1c8ea     14 14 14 04 
1c8ee     FC F0 E5 FA | 	byte	$f0, $d8, $e7, $03, $14, $18, $06, $07, $14, $14, $14, $04, $fc, $f0, $e5, $fa
1c8f2     FF 09 16 25 
1c8f6     30 10 F1 F7 
1c8fa     F3 EB E4 E9 
1c8fe     06 1B 29 20 | 	byte	$ff, $09, $16, $25, $30, $10, $f1, $f7, $f3, $eb, $e4, $e9, $06, $1b, $29, $20
1c902     00 E6 E3 FF 
1c906     27 31 16 FA 
1c90a     E2 D7 F9 06 
1c90e     0A 04 FF 0D | 	byte	$00, $e6, $e3, $ff, $27, $31, $16, $fa, $e2, $d7, $f9, $06, $0a, $04, $ff, $0d
1c912     15 1B 14 FC 
1c916     F6 EC F2 FD 
1c91a     FA 07 17 2B 
1c91e     2C 00 ED F7 | 	byte	$15, $1b, $14, $fc, $f6, $ec, $f2, $fd, $fa, $07, $17, $2b, $2c, $00, $ed, $f7
1c922     F8 F3 E4 EB 
1c926     07 20 28 1A 
1c92a     00 F0 E5 FA 
1c92e     1F 3A 20 F8 | 	byte	$f8, $f3, $e4, $eb, $07, $20, $28, $1a, $00, $f0, $e5, $fa, $1f, $3a, $20, $f8
1c932     E5 DB EF 05 
1c936     07 03 F9 0B 
1c93a     27 2C 20 F8 
1c93e     E5 E8 F7 08 | 	byte	$e5, $db, $ef, $05, $07, $03, $f9, $0b, $27, $2c, $20, $f8, $e5, $e8, $f7, $08
1c942     02 02 11 20 
1c946     2A 04 EC FF 
1c94a     05 F1 E0 ED 
1c94e     13 2F 36 14 | 	byte	$02, $02, $11, $20, $2a, $04, $ec, $ff, $05, $f1, $e0, $ed, $13, $2f, $36, $14
1c952     F0 DA EB 15 
1c956     31 30 00 E8 
1c95a     E3 F5 02 FE 
1c95e     FB FA 0B 23 | 	byte	$f0, $da, $eb, $15, $31, $30, $00, $e8, $e3, $f5, $02, $fe, $fb, $fa, $0b, $23
1c962     24 16 FA E0 
1c966     EA F3 FD 00 
1c96a     F7 07 27 3F 
1c96e     20 E4 EF 10 | 	byte	$24, $16, $fa, $e0, $ea, $f3, $fd, $00, $f7, $07, $27, $3f, $20, $e4, $ef, $10
1c972     FC D8 D5 FB 
1c976     23 36 18 F2 
1c97a     DA ED 1F 3F 
1c97e     24 F8 EA FE | 	byte	$fc, $d8, $d5, $fb, $23, $36, $18, $f2, $da, $ed, $1f, $3f, $24, $f8, $ea, $fe
1c982     03 F2 E1 E0 
1c986     F7 17 37 34 
1c98a     04 F2 F3 07 
1c98e     10 F0 D9 E3 | 	byte	$03, $f2, $e1, $e0, $f7, $17, $37, $34, $04, $f2, $f3, $07, $10, $f0, $d9, $e3
1c992     FB 27 3A 3F 
1c996     24 E0 C7 FF 
1c99a     20 00 D7 F7 
1c99e     23 3F 28 F0 | 	byte	$fb, $27, $3a, $3f, $24, $e0, $c7, $ff, $20, $00, $d7, $f7, $23, $3f, $28, $f0
1c9a2     C8 E3 1F 24 
1c9a6     01 02 0D 20 
1c9aa     12 E8 CA DB 
1c9ae     25 34 0B 07 | 	byte	$c8, $e3, $1f, $24, $01, $02, $0d, $20, $12, $e8, $ca, $db, $25, $34, $0b, $07
1c9b2     17 24 00 D3 
1c9b6     F3 00 FE F6 
1c9ba     FB 21 36 39 
1c9be     10 D0 BD F3 | 	byte	$17, $24, $00, $d3, $f3, $00, $fe, $f6, $fb, $21, $36, $39, $10, $d0, $bd, $f3
1c9c2     2B 18 EA F5 
1c9c6     11 30 22 E0 
1c9ca     D3 0F 19 FC 
1c9ce     E5 04 25 32 | 	byte	$2b, $18, $ea, $f5, $11, $30, $22, $e0, $d3, $0f, $19, $fc, $e5, $04, $25, $32
1c9d2     04 CC E7 10 
1c9d6     08 F4 F5 17 
1c9da     3F 24 E0 D7 
1c9de     0F 15 F8 D5 | 	byte	$04, $cc, $e7, $10, $08, $f4, $f5, $17, $3f, $24, $e0, $d7, $0f, $15, $f8, $d5
1c9e2     EF 2F 30 0C 
1c9e6     08 06 F0 C4 
1c9ea     DF 2F 30 F4 
1c9ee     E5 FF 27 24 | 	byte	$ef, $2f, $30, $0c, $08, $06, $f0, $c4, $df, $2f, $30, $f4, $e5, $ff, $27, $24
1c9f2     E0 D7 0F 14 
1c9f6     FC EC 0B 35 
1c9fa     3C 00 D8 F3 
1c9fe     0A FA E2 F1 | 	byte	$e0, $d7, $0f, $14, $fc, $ec, $0b, $35, $3c, $00, $d8, $f3, $0a, $fa, $e2, $f1
1ca02     17 39 20 FA 
1ca06     F9 06 FE EC 
1ca0a     EB 03 11 17 
1ca0e     24 2A 18 F0 | 	byte	$17, $39, $20, $fa, $f9, $06, $fe, $ec, $eb, $03, $11, $17, $24, $2a, $18, $f0
1ca12     C2 D5 1B 30 
1ca16     00 E4 0B 37 
1ca1a     20 D8 E3 1F 
1ca1e     18 EA E9 17 | 	byte	$c2, $d5, $1b, $30, $00, $e4, $0b, $37, $20, $d8, $e3, $1f, $18, $ea, $e9, $17
1ca22     3C 00 DB FF 
1ca26     18 00 D1 EB 
1ca2a     33 20 FF 0D 
1ca2e     27 10 D6 ED | 	byte	$3c, $00, $db, $ff, $18, $00, $d1, $eb, $33, $20, $ff, $0d, $27, $10, $d6, $ed
1ca32     15 04 E8 EF 
1ca36     17 24 09 03 
1ca3a     0A FA D6 EB 
1ca3e     2A 20 E8 EF | 	byte	$15, $04, $e8, $ef, $17, $24, $09, $03, $0a, $fa, $d6, $eb, $2a, $20, $e8, $ef
1ca42     23 30 F8 D7 
1ca46     07 20 FA E0 
1ca4a     FF 37 20 E2 
1ca4e     EF 1B 10 E0 | 	byte	$23, $30, $f8, $d7, $07, $20, $fa, $e0, $ff, $37, $20, $e2, $ef, $1b, $10, $e0
1ca52     DB 1B 30 00 
1ca56     FA 17 22 F4 
1ca5a     DB FB 0D FC 
1ca5e     EA FD 1A 14 | 	byte	$db, $1b, $30, $00, $fa, $17, $22, $f4, $db, $fb, $0d, $fc, $ea, $fd, $1a, $14
1ca62     15 27 22 00 
1ca66     D6 DE 0D 18 
1ca6a     F2 E5 0B 28 
1ca6e     10 F4 0F 27 | 	byte	$15, $27, $22, $00, $d6, $de, $0d, $18, $f2, $e5, $0b, $28, $10, $f4, $0f, $27
1ca72     05 E0 EF 21 
1ca76     20 F4 FB 1B 
1ca7a     10 E8 E7 0F 
1ca7e     20 04 FF 1B | 	byte	$05, $e0, $ef, $21, $20, $f4, $fb, $1b, $10, $e8, $e7, $0f, $20, $04, $ff, $1b
1ca82     18 FC F0 07 
1ca86     12 F7 E8 FF 
1ca8a     14 0C 07 10 
1ca8e     08 FB F9 F9 | 	byte	$18, $fc, $f0, $07, $12, $f7, $e8, $ff, $14, $0c, $07, $10, $08, $fb, $f9, $f9
1ca92     FD F7 F6 FA 
1ca96     0A 1D 14 05 
1ca9a     07 08 00 F6 
1ca9e     FF 07 09 08 | 	byte	$fd, $f7, $f6, $fa, $0a, $1d, $14, $05, $07, $08, $00, $f6, $ff, $07, $09, $08
1caa2     F9 FA FE 01 
1caa6     07 0A 11 09 
1caaa     05 0D 0A 04 
1caae     F9 FB FF FF | 	byte	$f9, $fa, $fe, $01, $07, $0a, $11, $09, $05, $0d, $0a, $04, $f9, $fb, $ff, $ff
1cab2     FC FE 0A 0C 
1cab6     06 FF 01 03 
1caba     07 03 FE 01 
1cabe     03 05 02 03 | 	byte	$fc, $fe, $0a, $0c, $06, $ff, $01, $03, $07, $03, $fe, $01, $03, $05, $02, $03
1cac2     0D 0B 00 FF 
1cac6     06 0A 00 FD 
1caca     FF 07 09 FE 
1cace     FF 07 0B 06 | 	byte	$0d, $0b, $00, $ff, $06, $0a, $00, $fd, $ff, $07, $09, $fe, $ff, $07, $0b, $06
1cad2     FD 03 0B 0E 
1cad6     06 FE 01 03 
1cada     06 08 02 FF 
1cade     FF 01 06 05 | 	byte	$fd, $03, $0b, $0e, $06, $fe, $01, $03, $06, $08, $02, $ff, $ff, $01, $06, $05
1cae2     00 01 05 0B 
1cae6     0B 08 01 06 
1caea     16 10 FC FA 
1caee     FD 03 04 00 | 	byte	$00, $01, $05, $0b, $0b, $08, $01, $06, $16, $10, $fc, $fa, $fd, $03, $04, $00
1caf2     FE 07 10 0A 
1caf6     FE FF FF 06 
1cafa     06 FD FF 03 
1cafe     05 09 03 FF | 	byte	$fe, $07, $10, $0a, $fe, $ff, $ff, $06, $06, $fd, $ff, $03, $05, $09, $03, $ff
1cb02     FD FF 0F 12 
1cb06     01 FB 06 0C 
1cb0a     05 01 06 07 
1cb0e     FE FA FF 04 | 	byte	$fd, $ff, $0f, $12, $01, $fb, $06, $0c, $05, $01, $06, $07, $fe, $fa, $ff, $04
1cb12     02 05 07 06 
1cb16     05 03 01 08 
1cb1a     0B 01 FD 05 
1cb1e     09 00 F5 FD | 	byte	$02, $05, $07, $06, $05, $03, $01, $08, $0b, $01, $fd, $05, $09, $00, $f5, $fd
1cb22     11 0C FD 01 
1cb26     0A 0D 05 FE 
1cb2a     FF 01 FD FD 
1cb2e     05 07 00 05 | 	byte	$11, $0c, $fd, $01, $0a, $0d, $05, $fe, $ff, $01, $fd, $fd, $05, $07, $00, $05
1cb32     0D 0D 01 FB 
1cb36     FF 08 06 02 
1cb3a     05 0E 0D 02 
1cb3e     F8 FD 06 04 | 	byte	$0d, $0d, $01, $fb, $ff, $08, $06, $02, $05, $0e, $0d, $02, $f8, $fd, $06, $04
1cb42     07 06 03 01 
1cb46     06 10 08 FD 
1cb4a     02 0B 0B 02 
1cb4e     FB FF 07 0A | 	byte	$07, $06, $03, $01, $06, $10, $08, $fd, $02, $0b, $0b, $02, $fb, $ff, $07, $0a
1cb52     00 01 09 02 
1cb56     00 07 07 01 
1cb5a     FC FB FD FF 
1cb5e     FF 05 0A 0A | 	byte	$00, $01, $09, $02, $00, $07, $07, $01, $fc, $fb, $fd, $ff, $ff, $05, $0a, $0a
1cb62     05 FF 06 00 
1cb66     FB 05 0E 0A 
1cb6a     03 02 FD FB 
1cb6e     05 0D 04 03 | 	byte	$05, $ff, $06, $00, $fb, $05, $0e, $0a, $03, $02, $fd, $fb, $05, $0d, $04, $03
1cb72     08 07 07 00 
1cb76     FC FF 07 09 
1cb7a     02 03 0A 08 
1cb7e     01 FB FF 02 | 	byte	$08, $07, $07, $00, $fc, $ff, $07, $09, $02, $03, $0a, $08, $01, $fb, $ff, $02
1cb82     FE FF 05 02 
1cb86     01 00 07 10 
1cb8a     13 09 05 FF 
1cb8e     FC FF 06 00 | 	byte	$fe, $ff, $05, $02, $01, $00, $07, $10, $13, $09, $05, $ff, $fc, $ff, $06, $00
1cb92     FE 03 04 01 
1cb96     01 03 0D 11 
1cb9a     06 FC FF 06 
1cb9e     06 07 0B 0B | 	byte	$fe, $03, $04, $01, $01, $03, $0d, $11, $06, $fc, $ff, $06, $06, $07, $0b, $0b
1cba2     06 00 FC FD 
1cba6     02 03 05 09 
1cbaa     0A 06 03 02 
1cbae     06 0C 02 03 | 	byte	$06, $00, $fc, $fd, $02, $03, $05, $09, $0a, $06, $03, $02, $06, $0c, $02, $03
1cbb2     03 FF 05 0B 
1cbb6     08 02 03 01 
1cbba     FF 00 01 03 
1cbbe     07 0A 00 FC | 	byte	$03, $ff, $05, $0b, $08, $02, $03, $01, $ff, $00, $01, $03, $07, $0a, $00, $fc
1cbc2     FD 03 04 01 
1cbc6     FE FF 01 03 
1cbca     0A 06 04 05 
1cbce     09 0A 0A 07 | 	byte	$fd, $03, $04, $01, $fe, $ff, $01, $03, $0a, $06, $04, $05, $09, $0a, $0a, $07
1cbd2     FF FC FF 03 
1cbd6     00 FF 01 07 
1cbda     0B 04 02 FF 
1cbde     03 02 02 06 | 	byte	$ff, $fc, $ff, $03, $00, $ff, $01, $07, $0b, $04, $02, $ff, $03, $02, $02, $06
1cbe2     05 03 02 07 
1cbe6     04 F8 F7 FF 
1cbea     0A 0D 0B 0B 
1cbee     0B 00 FA 06 | 	byte	$05, $03, $02, $07, $04, $f8, $f7, $ff, $0a, $0d, $0b, $0b, $0b, $00, $fa, $06
1cbf2     0D 05 F9 F9 
1cbf6     07 0C 00 FF 
1cbfa     0A 0B FF FD 
1cbfe     09 10 05 01 | 	byte	$0d, $05, $f9, $f9, $07, $0c, $00, $ff, $0a, $0b, $ff, $fd, $09, $10, $05, $01
1cc02     03 06 03 FF 
1cc06     FF 07 10 0C 
1cc0a     08 02 FA FF 
1cc0e     0C 0B 0C 0D | 	byte	$03, $06, $03, $ff, $ff, $07, $10, $0c, $08, $02, $fa, $ff, $0c, $0b, $0c, $0d
1cc12     05 01 01 00 
1cc16     03 03 00 01 
1cc1a     03 06 04 06 
1cc1e     09 04 06 FD | 	byte	$05, $01, $01, $00, $03, $03, $00, $01, $03, $06, $04, $06, $09, $04, $06, $fd
1cc22     F9 02 02 FD 
1cc26     FF 03 09 0B 
1cc2a     06 FC F7 FC 
1cc2e     07 09 03 FD | 	byte	$f9, $02, $02, $fd, $ff, $03, $09, $0b, $06, $fc, $f7, $fc, $07, $09, $03, $fd
1cc32     FF 07 04 04 
1cc36     09 09 00 FF 
1cc3a     FF 03 0A 09 
1cc3e     0B 08 01 FE | 	byte	$ff, $07, $04, $04, $09, $09, $00, $ff, $ff, $03, $0a, $09, $0b, $08, $01, $fe
1cc42     F9 FC 07 0A 
1cc46     00 FD FF FF 
1cc4a     FF 0E 12 06 
1cc4e     00 FF 0B 08 | 	byte	$f9, $fc, $07, $0a, $00, $fd, $ff, $ff, $ff, $0e, $12, $06, $00, $ff, $0b, $08
1cc52     FB F9 FD 05 
1cc56     0A 06 03 0B 
1cc5a     12 01 F5 06 
1cc5e     0D 04 01 09 | 	byte	$fb, $f9, $fd, $05, $0a, $06, $03, $0b, $12, $01, $f5, $06, $0d, $04, $01, $09
1cc62     04 FF 06 FE 
1cc66     03 1D 12 FB 
1cc6a     F8 FF 0A 08 
1cc6e     09 09 FE 07 | 	byte	$04, $ff, $06, $fe, $03, $1d, $12, $fb, $f8, $ff, $0a, $08, $09, $09, $fe, $07
1cc72     09 07 05 FE 
1cc76     01 0A 0D 04 
1cc7a     07 0D 06 FA 
1cc7e     FD 07 03 FE | 	byte	$09, $07, $05, $fe, $01, $0a, $0d, $04, $07, $0d, $06, $fa, $fd, $07, $03, $fe
1cc82     FD FF 02 07 
1cc86     09 04 FE F6 
1cc8a     F9 05 0B 03 
1cc8e     00 09 0A FC | 	byte	$fd, $ff, $02, $07, $09, $04, $fe, $f6, $f9, $05, $0b, $03, $00, $09, $0a, $fc
1cc92     F7 05 02 FF 
1cc96     08 01 FE FF 
1cc9a     0E 0C FE FF 
1cc9e     03 06 05 03 | 	byte	$f7, $05, $02, $ff, $08, $01, $fe, $ff, $0e, $0c, $fe, $ff, $03, $06, $05, $03
1cca2     06 06 0C 02 
1cca6     F0 F3 03 07 
1ccaa     07 00 07 0A 
1ccae     0F 10 F8 FF | 	byte	$06, $06, $0c, $02, $f0, $f3, $03, $07, $07, $00, $07, $0a, $0f, $10, $f8, $ff
1ccb2     09 00 FD 05 
1ccb6     08 03 FE FD 
1ccba     FF 09 0A 06 
1ccbe     0F 10 F8 F9 | 	byte	$09, $00, $fd, $05, $08, $03, $fe, $fd, $ff, $09, $0a, $06, $0f, $10, $f8, $f9
1ccc2     0B 0A F8 FC 
1ccc6     0E 11 10 08 
1ccca     F6 F9 04 05 
1ccce     0B 11 12 02 | 	byte	$0b, $0a, $f8, $fc, $0e, $11, $10, $08, $f6, $f9, $04, $05, $0b, $11, $12, $02
1ccd2     F0 FF 04 04 
1ccd6     0E 04 01 11 
1ccda     10 F9 04 0C 
1ccde     07 07 10 04 | 	byte	$f0, $ff, $04, $04, $0e, $04, $01, $11, $10, $f9, $04, $0c, $07, $07, $10, $04
1cce2     F5 FD 01 FA 
1cce6     05 0D 02 05 
1ccea     07 FA F7 04 
1ccee     06 01 11 09 | 	byte	$f5, $fd, $01, $fa, $05, $0d, $02, $05, $07, $fa, $f7, $04, $06, $01, $11, $09
1ccf2     F0 F3 04 04 
1ccf6     06 04 F5 FF 
1ccfa     27 10 D8 FB 
1ccfe     38 08 EB 1B | 	byte	$f0, $f3, $04, $04, $06, $04, $f5, $ff, $27, $10, $d8, $fb, $38, $08, $eb, $1b
1cd02     14 E0 E7 07 
1cd06     FD 05 2B 10 
1cd0a     EE 0F 08 EA 
1cd0e     FB 11 00 FF | 	byte	$14, $e0, $e7, $07, $fd, $05, $2b, $10, $ee, $0f, $08, $ea, $fb, $11, $00, $ff
1cd12     1B 0A FA 09 
1cd16     06 E8 EC 09 
1cd1a     10 00 05 00 
1cd1e     FB 37 42 F0 | 	byte	$1b, $0a, $fa, $09, $06, $e8, $ec, $09, $10, $00, $05, $00, $fb, $37, $42, $f0
1cd22     D5 17 20 D1 
1cd26     F7 20 E8 D1 
1cd2a     1F 20 FB 33 
1cd2e     40 00 03 08 | 	byte	$d5, $17, $20, $d1, $f7, $20, $e8, $d1, $1f, $20, $fb, $33, $40, $00, $03, $08
1cd32     E0 EB 12 00 
1cd36     E8 0F 10 F7 
1cd3a     13 18 00 05 
1cd3e     0D F8 FA 1E | 	byte	$e0, $eb, $12, $00, $e8, $0f, $10, $f7, $13, $18, $00, $05, $0d, $f8, $fa, $1e
1cd42     14 E9 FB 3E 
1cd46     10 C0 EF 30 
1cd4a     E0 E7 29 08 
1cd4e     CB 0B 22 F0 | 	byte	$14, $e9, $fb, $3e, $10, $c0, $ef, $30, $e0, $e7, $29, $08, $cb, $0b, $22, $f0
1cd52     FF 42 00 E5 
1cd56     13 E8 C3 FF 
1cd5a     0A DA 0F 3F 
1cd5e     08 FF 2A 08 | 	byte	$ff, $42, $00, $e5, $13, $e8, $c3, $ff, $0a, $da, $0f, $3f, $08, $ff, $2a, $08
1cd62     FB 0A E8 D6 
1cd66     0F 20 F8 F2 
1cd6a     17 44 00 B7 
1cd6e     E7 20 DA EF | 	byte	$fb, $0a, $e8, $d6, $0f, $20, $f8, $f2, $17, $44, $00, $b7, $e7, $20, $da, $ef
1cd72     22 04 E3 13 
1cd76     22 02 1B 44 
1cd7a     00 EB 1B F8 
1cd7e     C7 FB 0C EB | 	byte	$22, $04, $e3, $13, $22, $02, $1b, $44, $00, $eb, $1b, $f8, $c7, $fb, $0c, $eb
1cd82     FF 36 18 09 
1cd86     33 20 FD 04 
1cd8a     F0 D0 ED 0A 
1cd8e     06 19 14 09 | 	byte	$ff, $36, $18, $09, $33, $20, $fd, $04, $f0, $d0, $ed, $0a, $06, $19, $14, $09
1cd92     3B 10 CA EF 
1cd96     10 C4 FF 32 
1cd9a     00 F3 2D 18 
1cd9e     02 3F 30 E2 | 	byte	$3b, $10, $ca, $ef, $10, $c4, $ff, $32, $00, $f3, $2d, $18, $02, $3f, $30, $e2
1cda2     FF 10 C4 EB 
1cda6     0A E8 FF 3B 
1cdaa     10 FF 31 08 
1cdae     F4 0E E4 DB | 	byte	$ff, $10, $c4, $eb, $0a, $e8, $ff, $3b, $10, $ff, $31, $08, $f4, $0e, $e4, $db
1cdb2     03 02 FB 17 
1cdb6     0A FC 37 38 
1cdba     C4 BF 15 E0 
1cdbe     DB 1D 00 DF | 	byte	$03, $02, $fb, $17, $0a, $fc, $37, $38, $c4, $bf, $15, $e0, $db, $1d, $00, $df
1cdc2     1E 10 FF 3F 
1cdc6     30 F6 0F 10 
1cdca     BA E7 0A D4 
1cdce     FF 26 00 1B | 	byte	$1e, $10, $ff, $3f, $30, $f6, $0f, $10, $ba, $e7, $0a, $d4, $ff, $26, $00, $1b
1cdd2     38 0C 0B 14 
1cdd6     E0 F7 10 C8 
1cdda     D7 33 24 DA 
1cdde     EF 3F 64 00 | 	byte	$38, $0c, $0b, $14, $e0, $f7, $10, $c8, $d7, $33, $24, $da, $ef, $3f, $64, $00
1cde2     A2 D7 F0 1F 
1cde6     3D 00 A8 DF 
1cdea     1B 3F 68 34 
1cdee     D8 D7 FE F0 | 	byte	$a2, $d7, $f0, $1f, $3d, $00, $a8, $df, $1b, $3f, $68, $34, $d8, $d7, $fe, $f0
1cdf2     17 3C F0 E5 
1cdf6     EA CC FF 3F 
1cdfa     3B 3F 30 F0 
1cdfe     D6 D4 C3 EF | 	byte	$17, $3c, $f0, $e5, $ea, $cc, $ff, $3f, $3b, $3f, $30, $f0, $d6, $d4, $c3, $ef
1ce02     1B 29 42 22 
1ce06     13 30 E0 A5 
1ce0a     E7 E8 CF 2B 
1ce0e     38 07 36 14 | 	byte	$1b, $29, $42, $22, $13, $30, $e0, $a5, $e7, $e8, $cf, $2b, $38, $07, $36, $14
1ce12     F3 27 00 D7 
1ce16     FF F4 CE FF 
1ce1a     16 F6 2D 24 
1ce1e     F4 1D 10 F9 | 	byte	$f3, $27, $00, $d7, $ff, $f4, $ce, $ff, $16, $f6, $2d, $24, $f4, $1d, $10, $f9
1ce22     08 EC EF 07 
1ce26     FA FF 12 00 
1ce2a     0D 2D 00 F5 
1ce2e     1A E8 C1 FD | 	byte	$08, $ec, $ef, $07, $fa, $ff, $12, $00, $0d, $2d, $00, $f5, $1a, $e8, $c1, $fd
1ce32     08 DA 17 20 
1ce36     EB 22 10 FF 
1ce3a     43 12 F0 17 
1ce3e     00 D3 ED F2 | 	byte	$08, $da, $17, $20, $eb, $22, $10, $ff, $43, $12, $f0, $17, $00, $d3, $ed, $f2
1ce42     D7 FF 14 F7 
1ce46     33 40 10 27 
1ce4a     14 F9 13 F6 
1ce4e     F1 F6 D9 E7 | 	byte	$d7, $ff, $14, $f7, $33, $40, $10, $27, $14, $f9, $13, $f6, $f1, $f6, $d9, $e7
1ce52     10 0C FB 11 
1ce56     35 08 E0 0F 
1ce5a     08 FD 2E 00 
1ce5e     EB 18 F0 FF | 	byte	$10, $0c, $fb, $11, $35, $08, $e0, $0f, $08, $fd, $2e, $00, $eb, $18, $f0, $ff
1ce62     34 F8 FF 20 
1ce66     E8 EF 00 EA 
1ce6a     F3 19 00 17 
1ce6e     38 04 17 22 | 	byte	$34, $f8, $ff, $20, $e8, $ef, $00, $ea, $f3, $19, $00, $17, $38, $04, $17, $22
1ce72     FD 11 F0 E1 
1ce76     FC D8 EE 11 
1ce7a     09 04 F2 17 
1ce7e     20 E0 EF 2A | 	byte	$fd, $11, $f0, $e1, $fc, $d8, $ee, $11, $09, $04, $f2, $17, $20, $e0, $ef, $2a
1ce82     F8 07 22 E0 
1ce86     FF 10 E4 2F 
1ce8a     24 F2 17 F4 
1ce8e     E7 17 F4 D5 | 	byte	$f8, $07, $22, $e0, $ff, $10, $e4, $2f, $24, $f2, $17, $f4, $e7, $17, $f4, $d5
1ce92     FF 04 F5 2B 
1ce96     18 0B 32 00 
1ce9a     07 10 E0 FD 
1ce9e     F4 DB 09 05 | 	byte	$ff, $04, $f5, $2b, $18, $0b, $32, $00, $07, $10, $e0, $fd, $f4, $db, $09, $05
1cea2     01 04 F2 1F 
1cea6     20 E0 EF 20 
1ceaa     E6 FF 28 E4 
1ceae     07 1A E8 1F | 	byte	$01, $04, $f2, $1f, $20, $e0, $ef, $20, $e6, $ff, $28, $e4, $07, $1a, $e8, $1f
1ceb2     20 F3 2F 20 
1ceb6     ED 08 E8 DB 
1ceba     07 F8 F3 23 
1cebe     10 05 29 0A | 	byte	$20, $f3, $2f, $20, $ed, $08, $e8, $db, $07, $f8, $f3, $23, $10, $05, $29, $0a
1cec2     17 20 E4 FF 
1cec6     FA E3 19 04 
1ceca     0B 1A F0 0F 
1cece     22 E0 ED 28 | 	byte	$17, $20, $e4, $ff, $fa, $e3, $19, $04, $0b, $1a, $f0, $0f, $22, $e0, $ed, $28
1ced2     F6 0B 30 E6 
1ced6     FF 08 D9 27 
1ceda     20 FB 36 00 
1cede     F7 14 D0 EF | 	byte	$f6, $0b, $30, $e6, $ff, $08, $d9, $27, $20, $fb, $36, $00, $f7, $14, $d0, $ef
1cee2     10 E5 0F 18 
1cee6     F6 19 18 01 
1ceea     1D F8 EB 17 
1ceee     E8 F7 10 EB | 	byte	$10, $e5, $0f, $18, $f6, $19, $18, $01, $1d, $f8, $eb, $17, $e8, $f7, $10, $eb
1cef2     13 00 D5 0F 
1cef6     22 F0 EF 27 
1cefa     04 FB 20 E0 
1cefe     FF 20 EC 1F | 	byte	$13, $00, $d5, $0f, $22, $f0, $ef, $27, $04, $fb, $20, $e0, $ff, $20, $ec, $1f
1cf02     10 E7 2D 00 
1cf06     E5 12 E0 EF 
1cf0a     1A E4 07 20 
1cf0e     FE 1B 18 F9 | 	byte	$10, $e7, $2d, $00, $e5, $12, $e0, $ef, $1a, $e4, $07, $20, $fe, $1b, $18, $f9
1cf12     0F 1A FA 0B 
1cf16     FA DE 07 F0 
1cf1a     EB 21 08 07 
1cf1e     10 1D 08 E0 | 	byte	$0f, $1a, $fa, $0b, $fa, $de, $07, $f0, $eb, $21, $08, $07, $10, $1d, $08, $e0
1cf22     0F 04 E7 29 
1cf26     00 F7 20 E8 
1cf2a     17 24 F6 2B 
1cf2e     00 F5 20 D4 | 	byte	$0f, $04, $e7, $29, $00, $f7, $20, $e8, $17, $24, $f6, $2b, $00, $f5, $20, $d4
1cf32     EF 12 E8 0F 
1cf36     12 FF 30 14 
1cf3a     FF 18 01 FE 
1cf3e     10 EA F7 00 | 	byte	$ef, $12, $e8, $0f, $12, $ff, $30, $14, $ff, $18, $01, $fe, $10, $ea, $f7, $00
1cf42     F1 19 00 F3 
1cf46     FA F3 25 00 
1cf4a     E6 2B 00 EF 
1cf4e     25 E8 FF 10 | 	byte	$f1, $19, $00, $f3, $fa, $f3, $25, $00, $e6, $2b, $00, $ef, $25, $e8, $ff, $10
1cf52     DA 1B 18 FD 
1cf56     2E F0 F7 20 
1cf5a     E0 F7 08 E6 
1cf5e     1B 10 FF 2B | 	byte	$da, $1b, $18, $fd, $2e, $f0, $f7, $20, $e0, $f7, $08, $e6, $1b, $10, $ff, $2b
1cf62     00 07 18 F4 
1cf66     03 01 E7 FB 
1cf6a     E4 F3 23 00 
1cf6e     FB 04 F0 23 | 	byte	$00, $07, $18, $f4, $03, $01, $e7, $fb, $e4, $f3, $23, $00, $fb, $04, $f0, $23
1cf72     28 E0 FF 28 
1cf76     EA 07 14 E0 
1cf7a     0F 0A E7 2B 
1cf7e     08 F2 31 F8 | 	byte	$28, $e0, $ff, $28, $ea, $07, $14, $e0, $0f, $0a, $e7, $2b, $08, $f2, $31, $f8
1cf82     F7 20 E0 07 
1cf86     10 DB 1B 04 
1cf8a     FF 30 00 1F 
1cf8e     20 F4 11 EA | 	byte	$f7, $20, $e0, $07, $10, $db, $1b, $04, $ff, $30, $00, $1f, $20, $f4, $11, $ea
1cf92     EB 06 E0 FF 
1cf96     18 0B 17 F6 
1cf9a     F7 29 18 F5 
1cf9e     0F 18 EB FF | 	byte	$eb, $06, $e0, $ff, $18, $0b, $17, $f6, $f7, $29, $18, $f5, $0f, $18, $eb, $ff
1cfa2     FA EF 1B 00 
1cfa6     FB 22 F4 13 
1cfaa     18 E4 17 F0 
1cfae     E3 18 E1 FF | 	byte	$fa, $ef, $1b, $00, $fb, $22, $f4, $13, $18, $e4, $17, $f0, $e3, $18, $e1, $ff
1cfb2     24 F3 27 08 
1cfb6     FB 30 FA 0F 
1cfba     04 D3 FF F0 
1cfbe     ED 11 08 13 | 	byte	$24, $f3, $27, $08, $fb, $30, $fa, $0f, $04, $d3, $ff, $f0, $ed, $11, $08, $13
1cfc2     0C EA F6 23 
1cfc6     14 E9 15 20 
1cfca     F0 12 00 E7 
1cfce     10 F0 FB 28 | 	byte	$0c, $ea, $f6, $23, $14, $e9, $15, $20, $f0, $12, $00, $e7, $10, $f0, $fb, $28
1cfd2     F0 0F 20 E4 
1cfd6     0F F0 DF 27 
1cfda     F0 FF 20 F0 
1cfde     23 20 F5 20 | 	byte	$f0, $0f, $20, $e4, $0f, $f0, $df, $27, $f0, $ff, $20, $f0, $23, $20, $f5, $20
1cfe2     00 0B 20 E0 
1cfe6     FF F2 EF 26 
1cfea     00 0D 10 E9 
1cfee     F9 0F 24 F2 | 	byte	$00, $0b, $20, $e0, $ff, $f2, $ef, $26, $00, $0d, $10, $e9, $f9, $0f, $24, $f2
1cff2     F7 24 F2 0F 
1cff6     08 E2 14 F2 
1cffa     F7 2D F8 17 
1cffe     08 EB 23 E8 | 	byte	$f7, $24, $f2, $0f, $08, $e2, $14, $f2, $f7, $2d, $f8, $17, $08, $eb, $23, $e8
1d002     ED 1B F0 17 
1d006     04 FF 34 00 
1d00a     0F 16 FB 23 
1d00e     F0 EF F8 D5 | 	byte	$ed, $1b, $f0, $17, $04, $ff, $34, $00, $0f, $16, $fb, $23, $f0, $ef, $f8, $d5
1d012     FF 00 05 16 
1d016     F6 0B F2 13 
1d01a     28 E6 13 20 
1d01e     EB 13 F2 E3 | 	byte	$ff, $00, $05, $16, $f6, $0b, $f2, $13, $28, $e6, $13, $20, $eb, $13, $f2, $e3
1d022     10 E2 FF 20 
1d026     FB 2F 00 EF 
1d02a     26 E0 FF 10 
1d02e     DB 27 00 0F | 	byte	$10, $e2, $ff, $20, $fb, $2f, $00, $ef, $26, $e0, $ff, $10, $db, $27, $00, $0f
1d032     30 EA 17 08 
1d036     EB 23 E8 F7 
1d03a     14 E0 0D 00 
1d03e     FF 24 EC 0B | 	byte	$30, $ea, $17, $08, $eb, $23, $e8, $f7, $14, $e0, $0d, $00, $ff, $24, $ec, $0b
1d042     04 EF 2D 04 
1d046     EB 2B 0A F1 
1d04a     12 F8 F3 0B 
1d04e     E0 FB 30 F9 | 	byte	$04, $ef, $2d, $04, $eb, $2b, $0a, $f1, $12, $f8, $f3, $0b, $e0, $fb, $30, $f9
1d052     1D 10 E3 1A 
1d056     E0 F3 20 EB 
1d05a     2F 08 F3 30 
1d05e     F8 1B 14 F1 | 	byte	$1d, $10, $e3, $1a, $e0, $f3, $20, $eb, $2f, $08, $f3, $30, $f8, $1b, $14, $f1
1d062     20 F0 FB 00 
1d066     DD 17 F6 0D 
1d06a     12 F7 19 F1 
1d06e     FF 29 10 E4 | 	byte	$20, $f0, $fb, $00, $dd, $17, $f6, $0d, $12, $f7, $19, $f1, $ff, $29, $10, $e4
1d072     FF 2C E0 EF 
1d076     1C D4 FF 0A 
1d07a     E7 27 0A 0F 
1d07e     F9 F7 10 D6 | 	byte	$ff, $2c, $e0, $ef, $1c, $d4, $ff, $0a, $e7, $27, $0a, $0f, $f9, $f7, $10, $d6
1d082     0F 14 F5 20 
1d086     02 13 12 FF 
1d08a     20 F0 FF 0A 
1d08e     E9 FB EB 07 | 	byte	$0f, $14, $f5, $20, $02, $13, $12, $ff, $20, $f0, $ff, $0a, $e9, $fb, $eb, $07
1d092     14 FD 0F FB 
1d096     06 04 F7 13 
1d09a     0B 17 10 D0 
1d09e     E7 27 14 F0 | 	byte	$14, $fd, $0f, $fb, $06, $04, $f7, $13, $0b, $17, $10, $d0, $e7, $27, $14, $f0
1d0a2     F5 10 08 E4 
1d0a6     EF 23 20 FD 
1d0aa     FA 11 20 FA 
1d0ae     F1 07 18 04 | 	byte	$f5, $10, $08, $e4, $ef, $23, $20, $fd, $fa, $11, $20, $fa, $f1, $07, $18, $04
1d0b2     F7 15 25 00 
1d0b6     F0 07 04 09 
1d0ba     F6 F2 05 04 
1d0be     FF 01 13 19 | 	byte	$f7, $15, $25, $00, $f0, $07, $04, $09, $f6, $f2, $05, $04, $ff, $01, $13, $19
1d0c2     0D 05 02 0E 
1d0c6     0A FF 15 18 
1d0ca     F2 D5 F5 1D 
1d0ce     24 02 E2 EF | 	byte	$0d, $05, $02, $0e, $0a, $ff, $15, $18, $f2, $d5, $f5, $1d, $24, $02, $e2, $ef
1d0d2     0B 1D 10 FF 
1d0d6     01 08 0B 04 
1d0da     F2 F7 00 0A 
1d0de     14 05 FF 03 | 	byte	$0b, $1d, $10, $ff, $01, $08, $0b, $04, $f2, $f7, $00, $0a, $14, $05, $ff, $03
1d0e2     03 0A 00 F3 
1d0e6     F6 FE 09 04 
1d0ea     01 00 FF 17 
1d0ee     15 08 0A 05 | 	byte	$03, $0a, $00, $f3, $f6, $fe, $09, $04, $01, $00, $ff, $17, $15, $08, $0a, $05
1d0f2     FF 02 07 00 
1d0f6     FB FD 03 FE 
1d0fa     F2 F3 11 20 
1d0fe     0A F5 EA FB | 	byte	$ff, $02, $07, $00, $fb, $fd, $03, $fe, $f2, $f3, $11, $20, $0a, $f5, $ea, $fb
1d102     0E 1D 25 16 
1d106     00 E8 E7 F3 
1d10a     05 15 0B 15 
1d10e     0C F6 FB 06 | 	byte	$0e, $1d, $25, $16, $00, $e8, $e7, $f3, $05, $15, $0b, $15, $0c, $f6, $fb, $06
1d112     10 10 02 E9 
1d116     EE F7 0B 10 
1d11a     08 08 00 13 
1d11e     13 14 10 03 | 	byte	$10, $10, $02, $e9, $ee, $f7, $0b, $10, $08, $08, $00, $13, $13, $14, $10, $03
1d122     04 F0 E9 FF 
1d126     06 04 05 00 
1d12a     03 0E 20 24 
1d12e     10 F8 EB EA | 	byte	$04, $f0, $e9, $ff, $06, $04, $05, $00, $03, $0e, $20, $24, $10, $f8, $eb, $ea
1d132     07 21 18 10 
1d136     FA E7 E9 F5 
1d13a     09 19 18 10 
1d13e     FA E7 FB 03 | 	byte	$07, $21, $18, $10, $fa, $e7, $e9, $f5, $09, $19, $18, $10, $fa, $e7, $fb, $03
1d142     0D 04 F1 FA 
1d146     03 FA FF 0D 
1d14a     0C 15 08 0B 
1d14e     10 FF 08 04 | 	byte	$0d, $04, $f1, $fa, $03, $fa, $ff, $0d, $0c, $15, $08, $0b, $10, $ff, $08, $04
1d152     FF F7 F7 FC 
1d156     02 0B 0B 00 
1d15a     F6 07 1B 19 
1d15e     04 EB EB FF | 	byte	$ff, $f7, $f7, $fc, $02, $0b, $0b, $00, $f6, $07, $1b, $19, $04, $eb, $eb, $ff
1d162     09 13 17 0D 
1d166     F8 E6 ED FD 
1d16a     0B 19 1D 14 
1d16e     09 02 FB F4 | 	byte	$09, $13, $17, $0d, $f8, $e6, $ed, $fd, $0b, $19, $1d, $14, $09, $02, $fb, $f4
1d172     F5 FC 07 08 
1d176     FB 05 0B 09 
1d17a     11 1D 1A 0B 
1d17e     01 FE FD F5 | 	byte	$f5, $fc, $07, $08, $fb, $05, $0b, $09, $11, $1d, $1a, $0b, $01, $fe, $fd, $f5
1d182     EC F5 0A 17 
1d186     0D 0B 01 F5 
1d18a     FD 0F 24 21 
1d18e     10 F4 EA F3 | 	byte	$ec, $f5, $0a, $17, $0d, $0b, $01, $f5, $fd, $0f, $24, $21, $10, $f4, $ea, $f3
1d192     FF 11 1B 19 
1d196     0C F6 EB E7 
1d19a     F1 13 2B 28 
1d19e     18 FD E6 E0 | 	byte	$ff, $11, $1b, $19, $0c, $f6, $eb, $e7, $f1, $13, $2b, $28, $18, $fd, $e6, $e0
1d1a2     E2 FB 09 10 
1d1a6     0A 04 F6 FD 
1d1aa     0C 09 15 21 
1d1ae     19 10 F8 E8 | 	byte	$e2, $fb, $09, $10, $0a, $04, $f6, $fd, $0c, $09, $15, $21, $19, $10, $f8, $e8
1d1b2     E0 EB FA 11 
1d1b6     24 14 F8 F0 
1d1ba     F7 06 1D 20 
1d1be     10 F8 E4 E7 | 	byte	$e0, $eb, $fa, $11, $24, $14, $f8, $f0, $f7, $06, $1d, $20, $10, $f8, $e4, $e7
1d1c2     F7 13 22 1A 
1d1c6     12 00 E8 E2 
1d1ca     E9 FD 16 2A 
1d1ce     2C 20 FA D1 | 	byte	$f7, $13, $22, $1a, $12, $00, $e8, $e2, $e9, $fd, $16, $2a, $2c, $20, $fa, $d1
1d1d2     CD ED 11 17 
1d1d6     1A 14 05 03 
1d1da     05 01 01 19 
1d1de     30 22 08 EC | 	byte	$cd, $ed, $11, $17, $1a, $14, $05, $03, $05, $01, $01, $19, $30, $22, $08, $ec
1d1e2     CB C7 E7 0F 
1d1e6     2B 2B 20 04 
1d1ea     F0 F3 13 29 
1d1ee     2A 08 E0 CD | 	byte	$cb, $c7, $e7, $0f, $2b, $2b, $20, $04, $f0, $f3, $13, $29, $2a, $08, $e0, $cd
1d1f2     D5 FF 27 35 
1d1f6     36 14 E9 D5 
1d1fa     DB F7 27 3D 
1d1fe     37 18 E0 C5 | 	byte	$d5, $ff, $27, $35, $36, $14, $e9, $d5, $db, $f7, $27, $3d, $37, $18, $e0, $c5
1d202     CA ED 17 2B 
1d206     23 00 E1 E9 
1d20a     FF 15 27 37 
1d20e     20 F8 E0 D2 | 	byte	$ca, $ed, $17, $2b, $23, $00, $e1, $e9, $ff, $15, $27, $37, $20, $f8, $e0, $d2
1d212     DE FE 0B 14 
1d216     10 02 F9 F2 
1d21a     05 27 38 30 
1d21e     08 D9 C1 C7 | 	byte	$de, $fe, $0b, $14, $10, $02, $f9, $f2, $05, $27, $38, $30, $08, $d9, $c1, $c7
1d222     F5 1B 2B 34 
1d226     10 E4 D6 E1 
1d22a     05 33 49 38 
1d22e     10 E0 C5 E7 | 	byte	$f5, $1b, $2b, $34, $10, $e4, $d6, $e1, $05, $33, $49, $38, $10, $e0, $c5, $e7
1d232     03 10 20 04 
1d236     E2 DA EC 17 
1d23a     3F 3E 24 00 
1d23e     EC F7 01 08 | 	byte	$03, $10, $20, $04, $e2, $da, $ec, $17, $3f, $3e, $24, $00, $ec, $f7, $01, $08
1d242     02 FA EA E9 
1d246     06 1B 10 FC 
1d24a     03 1F 34 2C 
1d24e     00 D4 C0 D7 | 	byte	$02, $fa, $ea, $e9, $06, $1b, $10, $fc, $03, $1f, $34, $2c, $00, $d4, $c0, $d7
1d252     0F 2D 39 18 
1d256     EA DB E3 16 
1d25a     3F 36 16 F0 
1d25e     DB F9 09 19 | 	byte	$0f, $2d, $39, $18, $ea, $db, $e3, $16, $3f, $36, $16, $f0, $db, $f9, $09, $19
1d262     06 D8 CB E5 
1d266     1B 31 2A 14 
1d26a     F5 F7 0B 1D 
1d26e     20 F0 C8 D7 | 	byte	$06, $d8, $cb, $e5, $1b, $31, $2a, $14, $f5, $f7, $0b, $1d, $20, $f0, $c8, $d7
1d272     FB 15 04 FD 
1d276     FF 00 03 21 
1d27a     3B 3E 10 D0 
1d27e     B0 D1 FF 27 | 	byte	$fb, $15, $04, $fd, $ff, $00, $03, $21, $3b, $3e, $10, $d0, $b0, $d1, $ff, $27
1d282     29 10 F0 D5 
1d286     13 3B 2B 13 
1d28a     F0 F9 15 15 
1d28e     02 C8 B7 E7 | 	byte	$29, $10, $f0, $d5, $13, $3b, $2b, $13, $f0, $f9, $15, $15, $02, $c8, $b7, $e7
1d292     05 22 1A 00 
1d296     FF 05 27 3F 
1d29a     21 05 FA F5 
1d29e     F5 E4 E0 E5 | 	byte	$05, $22, $1a, $00, $ff, $05, $27, $3f, $21, $05, $fa, $f5, $f5, $e4, $e0, $e5
1d2a2     EB FF 07 23 
1d2a6     33 20 07 21 
1d2aa     36 3C F0 A1 
1d2ae     AF F3 27 20 | 	byte	$eb, $ff, $07, $23, $33, $20, $07, $21, $36, $3c, $f0, $a1, $af, $f3, $27, $20
1d2b2     E4 EF 27 43 
1d2b6     28 00 E0 FB 
1d2ba     2D 38 F8 CB 
1d2be     EB 0D 18 FC | 	byte	$e4, $ef, $27, $43, $28, $00, $e0, $fb, $2d, $38, $f8, $cb, $eb, $0d, $18, $fc
1d2c2     C0 EB 2F 2A 
1d2c6     14 F2 07 33 
1d2ca     20 F8 E8 ED 
1d2ce     06 FC D5 D3 | 	byte	$c0, $eb, $2f, $2a, $14, $f2, $07, $33, $20, $f8, $e8, $ed, $06, $fc, $d5, $d3
1d2d2     0F 20 13 26 
1d2d6     18 00 0B 1E 
1d2da     20 E0 A5 DF 
1d2de     17 FA ED 13 | 	byte	$0f, $20, $13, $26, $18, $00, $0b, $1e, $20, $e0, $a5, $df, $17, $fa, $ed, $13
1d2e2     3F 40 00 E1 
1d2e6     1D 16 00 E5 
1d2ea     F7 2D 00 D7 
1d2ee     ED 0E 10 D4 | 	byte	$3f, $40, $00, $e1, $1d, $16, $00, $e5, $f7, $2d, $00, $d7, $ed, $0e, $10, $d4
1d2f2     D6 23 28 14 
1d2f6     FA 0B 47 14 
1d2fa     E9 F1 FF 08 
1d2fe     D8 CB 0B 1A | 	byte	$d6, $23, $28, $14, $fa, $0b, $47, $14, $e9, $f1, $ff, $08, $d8, $cb, $0b, $1a
1d302     00 FD 33 30 
1d306     02 FF 23 28 
1d30a     E0 C6 FB 12 
1d30e     E0 D7 1F 3A | 	byte	$00, $fd, $33, $30, $02, $ff, $23, $28, $e0, $c6, $fb, $12, $e0, $d7, $1f, $3a
1d312     00 FF 33 30 
1d316     F0 DB 1F 14 
1d31a     E2 FB 23 20 
1d31e     D8 E7 1D F8 | 	byte	$00, $ff, $33, $30, $f0, $db, $1f, $14, $e2, $fb, $23, $20, $d8, $e7, $1d, $f8
1d322     E7 23 20 08 
1d326     F0 13 20 F8 
1d32a     FF 0E FB F8 
1d32e     ED F7 F8 07 | 	byte	$e7, $23, $20, $08, $f0, $13, $20, $f8, $ff, $0e, $fb, $f8, $ed, $f7, $f8, $07
1d332     18 07 33 20 
1d336     ED FF 20 D2 
1d33a     D7 0D F0 DC 
1d33e     FF 23 10 FF | 	byte	$18, $07, $33, $20, $ed, $ff, $20, $d2, $d7, $0d, $f0, $dc, $ff, $23, $10, $ff
1d342     35 20 E9 1B 
1d346     08 E7 12 F1 
1d34a     F7 08 F5 05 
1d34e     EA FF 10 E2 | 	byte	$35, $20, $e9, $1b, $08, $e7, $12, $f1, $f7, $08, $f5, $05, $ea, $ff, $10, $e2
1d352     17 18 FF 22 
1d356     09 13 11 F7 
1d35a     02 F0 F5 00 
1d35e     E8 FF 04 FF | 	byte	$17, $18, $ff, $22, $09, $13, $11, $f7, $02, $f0, $f5, $00, $e8, $ff, $04, $ff
1d362     10 09 25 20 
1d366     F4 17 32 F0 
1d36a     FF 0C C2 EB 
1d36e     0C E7 1F 2A | 	byte	$10, $09, $25, $20, $f4, $17, $32, $f0, $ff, $0c, $c2, $eb, $0c, $e7, $1f, $2a
1d372     FA 2D 14 FF 
1d376     20 F0 0B 00 
1d37a     E9 05 E8 FF 
1d37e     00 F1 0D F0 | 	byte	$fa, $2d, $14, $ff, $20, $f0, $0b, $00, $e9, $05, $e8, $ff, $00, $f1, $0d, $f0
1d382     0B 12 FD 27 
1d386     10 0F 20 F5 
1d38a     0E 00 E7 FA 
1d38e     ED 0F 02 FF | 	byte	$0b, $12, $fd, $27, $10, $0f, $20, $f5, $0e, $00, $e7, $fa, $ed, $0f, $02, $ff
1d392     08 FD 27 22 
1d396     F4 15 24 F5 
1d39a     07 04 CD FB 
1d39e     E4 DD 27 00 | 	byte	$08, $fd, $27, $22, $f4, $15, $24, $f5, $07, $04, $cd, $fb, $e4, $dd, $27, $00
1d3a2     07 32 F4 1F 
1d3a6     20 EA 23 00 
1d3aa     F7 20 E4 F5 
1d3ae     F0 DB 03 F4 | 	byte	$07, $32, $f4, $1f, $20, $ea, $23, $00, $f7, $20, $e4, $f5, $f0, $db, $03, $f4
1d3b2     FB 13 0C 10 
1d3b6     15 12 11 19 
1d3ba     0B 0D 02 E8 
1d3be     F3 E9 E2 FD | 	byte	$fb, $13, $0c, $10, $15, $12, $11, $19, $0b, $0d, $02, $e8, $f3, $e9, $e2, $fd
1d3c2     F5 07 10 09 
1d3c6     34 20 FD 27 
1d3ca     18 FB 11 E8 
1d3ce     D7 01 EA E7 | 	byte	$f5, $07, $10, $09, $34, $20, $fd, $27, $18, $fb, $11, $e8, $d7, $01, $ea, $e7
1d3d2     13 08 11 20 
1d3d6     F0 15 20 FF 
1d3da     26 08 F7 14 
1d3de     E8 FB 00 E0 | 	byte	$13, $08, $11, $20, $f0, $15, $20, $ff, $26, $08, $f7, $14, $e8, $fb, $00, $e0
1d3e2     0F F6 EF 10 
1d3e6     FD 1F 2C 10 
1d3ea     1A 08 04 0E 
1d3ee     FE FB F0 ED | 	byte	$0f, $f6, $ef, $10, $fd, $1f, $2c, $10, $1a, $08, $04, $0e, $fe, $fb, $f0, $ed
1d3f2     F3 F6 07 1D 
1d3f6     08 0B 13 0F 
1d3fa     25 08 F2 17 
1d3fe     04 F4 FD E7 | 	byte	$f3, $f6, $07, $1d, $08, $0b, $13, $0f, $25, $08, $f2, $17, $04, $f4, $fd, $e7
1d402     F7 FE ED 0F 
1d406     16 FF 0F 02 
1d40a     FE 17 08 0B 
1d40e     08 EC 0B 00 | 	byte	$f7, $fe, $ed, $0f, $16, $ff, $0f, $02, $fe, $17, $08, $0b, $08, $ec, $0b, $00
1d412     E7 FF F0 FF 
1d416     16 00 13 00 
1d41a     FD 13 FC 07 
1d41e     0C FF 15 04 | 	byte	$e7, $ff, $f0, $ff, $16, $00, $13, $00, $fd, $13, $fc, $07, $0c, $ff, $15, $04
1d422     02 01 F0 FB 
1d426     F0 F5 0B FD 
1d42a     FE 08 10 1A 
1d42e     1A 14 14 00 | 	byte	$02, $01, $f0, $fb, $f0, $f5, $0b, $fd, $fe, $08, $10, $1a, $1a, $14, $14, $00
1d432     F7 FB FB 01 
1d436     FC F4 FD 11 
1d43a     16 0A 09 01 
1d43e     F7 07 08 02 | 	byte	$f7, $fb, $fb, $01, $fc, $f4, $fd, $11, $16, $0a, $09, $01, $f7, $07, $08, $02
1d442     04 01 0A 02 
1d446     FF 1B 08 FF 
1d44a     06 F1 F5 FF 
1d44e     09 06 01 0C | 	byte	$04, $01, $0a, $02, $ff, $1b, $08, $ff, $06, $f1, $f5, $ff, $09, $06, $01, $0c
1d452     0C 00 0C 0C 
1d456     FC 0B 10 FA 
1d45a     FF 08 FD 05 
1d45e     0A FA FF 07 | 	byte	$0c, $00, $0c, $0c, $fc, $0b, $10, $fa, $ff, $08, $fd, $05, $0a, $fa, $ff, $07
1d462     01 0A 06 F9 
1d466     03 0C FE FF 
1d46a     01 05 00 F9 
1d46e     05 10 0C 06 | 	byte	$01, $0a, $06, $f9, $03, $0c, $fe, $ff, $01, $05, $00, $f9, $05, $10, $0c, $06
1d472     FF FF FC FB 
1d476     0A 0A 03 09 
1d47a     02 FF FF 0F 
1d47e     11 00 F9 FE | 	byte	$ff, $ff, $fc, $fb, $0a, $0a, $03, $09, $02, $ff, $ff, $0f, $11, $00, $f9, $fe
1d482     FF 05 05 00 
1d486     06 02 03 0C 
1d48a     06 FD FD 03 
1d48e     00 02 0A 05 | 	byte	$ff, $05, $05, $00, $06, $02, $03, $0c, $06, $fd, $fd, $03, $00, $02, $0a, $05
1d492     05 02 03 05 
1d496     FF 01 09 09 
1d49a     07 08 05 09 
1d49e     12 00 F7 FA | 	byte	$05, $02, $03, $05, $ff, $01, $09, $09, $07, $08, $05, $09, $12, $00, $f7, $fa
1d4a2     FE 0A 0C 00 
1d4a6     05 05 FF 0E 
1d4aa     0B 0B 01 F6 
1d4ae     FE 0B 14 00 | 	byte	$fe, $0a, $0c, $00, $05, $05, $ff, $0e, $0b, $0b, $01, $f6, $fe, $0b, $14, $00
1d4b2     FB 06 09 07 
1d4b6     04 06 02 04 
1d4ba     0B 09 03 FE 
1d4be     FC FF 11 10 | 	byte	$fb, $06, $09, $07, $04, $06, $02, $04, $0b, $09, $03, $fe, $fc, $ff, $11, $10
1d4c2     FA F3 FC 0F 
1d4c6     15 05 FA F6 
1d4ca     FF 02 FB 01 
1d4ce     01 01 FC 02 | 	byte	$fa, $f3, $fc, $0f, $15, $05, $fa, $f6, $ff, $02, $fb, $01, $01, $01, $fc, $02
1d4d2     06 03 02 0F 
1d4d6     12 01 FC F9 
1d4da     03 10 08 06 
1d4de     FC FB 03 00 | 	byte	$06, $03, $02, $0f, $12, $01, $fc, $f9, $03, $10, $08, $06, $fc, $fb, $03, $00
1d4e2     FF 10 09 FB 
1d4e6     FF 10 00 F8 
1d4ea     FF 0A 0C FA 
1d4ee     FC 0A 08 03 | 	byte	$ff, $10, $09, $fb, $ff, $10, $00, $f8, $ff, $0a, $0c, $fa, $fc, $0a, $08, $03
1d4f2     06 04 00 09 
1d4f6     0C 08 04 FB 
1d4fa     F9 01 04 08 
1d4fe     07 08 08 05 | 	byte	$06, $04, $00, $09, $0c, $08, $04, $fb, $f9, $01, $04, $08, $07, $08, $08, $05
1d502     08 08 00 FB 
1d506     FF FF 10 0D 
1d50a     01 05 02 06 
1d50e     09 09 02 FB | 	byte	$08, $08, $00, $fb, $ff, $ff, $10, $0d, $01, $05, $02, $06, $09, $09, $02, $fb
1d512     FF 03 05 0E 
1d516     09 FE 09 13 
1d51a     0D 03 FF 07 
1d51e     12 FC F4 FB | 	byte	$ff, $03, $05, $0e, $09, $fe, $09, $13, $0d, $03, $ff, $07, $12, $fc, $f4, $fb
1d522     0C 00 02 10 
1d526     FD FF 10 FA 
1d52a     FF 11 FA FF 
1d52e     0B 01 FA F5 | 	byte	$0c, $00, $02, $10, $fd, $ff, $10, $fa, $ff, $11, $fa, $ff, $0b, $01, $fa, $f5
1d532     FF 10 05 01 
1d536     02 FC FB FF 
1d53a     0E 0D 06 0C 
1d53e     FD F2 05 06 | 	byte	$ff, $10, $05, $01, $02, $fc, $fb, $ff, $0e, $0d, $06, $0c, $fd, $f2, $05, $06
1d542     11 10 FB FD 
1d546     01 12 08 F8 
1d54a     F8 FF 04 09 
1d54e     03 02 11 00 | 	byte	$11, $10, $fb, $fd, $01, $12, $08, $f8, $f8, $ff, $04, $09, $03, $02, $11, $00
1d552     F7 06 00 F3 
1d556     0B 0D 09 08 
1d55a     09 09 0C 04 
1d55e     F0 F9 0E 08 | 	byte	$f7, $06, $00, $f3, $0b, $0d, $09, $08, $09, $09, $0c, $04, $f0, $f9, $0e, $08
1d562     F9 07 10 0C 
1d566     02 F6 03 0C 
1d56a     FC FF 15 10 
1d56e     F6 F7 0C 04 | 	byte	$f9, $07, $10, $0c, $02, $f6, $03, $0c, $fc, $ff, $15, $10, $f6, $f7, $0c, $04
1d572     07 09 08 00 
1d576     FF 11 10 05 
1d57a     FA F7 05 09 
1d57e     0D 02 03 16 | 	byte	$07, $09, $08, $00, $ff, $11, $10, $05, $fa, $f7, $05, $09, $0d, $02, $03, $16
1d582     06 01 FD FA 
1d586     05 11 FB FD 
1d58a     10 05 FD 05 
1d58e     0A 06 FC FF | 	byte	$06, $01, $fd, $fa, $05, $11, $fb, $fd, $10, $05, $fd, $05, $0a, $06, $fc, $ff
1d592     0B 00 F7 FB 
1d596     03 01 03 05 
1d59a     05 FB FB 07 
1d59e     1A 14 F8 EC | 	byte	$0b, $00, $f7, $fb, $03, $01, $03, $05, $05, $fb, $fb, $07, $1a, $14, $f8, $ec
1d5a2     FA 09 0C 06 
1d5a6     05 07 10 02 
1d5aa     F7 04 FD FF 
1d5ae     1B 04 EB F7 | 	byte	$fa, $09, $0c, $06, $05, $07, $10, $02, $f7, $04, $fd, $ff, $1b, $04, $eb, $f7
1d5b2     01 13 0B 09 
1d5b6     08 FF FD F4 
1d5ba     05 15 18 0A 
1d5be     F8 F0 FF 08 | 	byte	$01, $13, $0b, $09, $08, $ff, $fd, $f4, $05, $15, $18, $0a, $f8, $f0, $ff, $08
1d5c2     00 17 10 F9 
1d5c6     FB 05 0A 0B 
1d5ca     F8 F6 17 1A 
1d5ce     F8 F7 02 02 | 	byte	$00, $17, $10, $f9, $fb, $05, $0a, $0b, $f8, $f6, $17, $1a, $f8, $f7, $02, $02
1d5d2     0A 00 05 13 
1d5d6     10 04 02 FC 
1d5da     F7 03 12 02 
1d5de     FB 0D 11 07 | 	byte	$0a, $00, $05, $13, $10, $04, $02, $fc, $f7, $03, $12, $02, $fb, $0d, $11, $07
1d5e2     FB 05 11 F0 
1d5e6     EF 3D 28 D0 
1d5ea     F7 20 02 00 
1d5ee     E7 11 10 FD | 	byte	$fb, $05, $11, $f0, $ef, $3d, $28, $d0, $f7, $20, $02, $00, $e7, $11, $10, $fd
1d5f2     0A F4 17 14 
1d5f6     E2 FF F6 FB 
1d5fa     0A FC 17 08 
1d5fe     FA 12 05 0A | 	byte	$0a, $f4, $17, $14, $e2, $ff, $f6, $fb, $0a, $fc, $17, $08, $fa, $12, $05, $0a
1d602     00 E0 FB 18 
1d606     14 EA D3 27 
1d60a     40 F0 EF 04 
1d60e     11 25 F0 F6 | 	byte	$00, $e0, $fb, $18, $14, $ea, $d3, $27, $40, $f0, $ef, $04, $11, $25, $f0, $f6
1d612     16 F2 07 FC 
1d616     F5 15 06 0B 
1d61a     12 F5 F8 F0 
1d61e     0B 2C 00 F7 | 	byte	$16, $f2, $07, $fc, $f5, $15, $06, $0b, $12, $f5, $f8, $f0, $0b, $2c, $00, $f7
1d622     FE 06 26 10 
1d626     02 F8 D7 15 
1d62a     20 EA FF 1B 
1d62e     12 F8 FD 10 | 	byte	$fe, $06, $26, $10, $02, $f8, $d7, $15, $20, $ea, $ff, $1b, $12, $f8, $fd, $10
1d632     F6 0B 02 F9 
1d636     20 F8 EB FF 
1d63a     1B 14 E1 FF 
1d63e     16 11 20 F0 | 	byte	$f6, $0b, $02, $f9, $20, $f8, $eb, $ff, $1b, $14, $e1, $ff, $16, $11, $20, $f0
1d642     0F 10 E1 25 
1d646     08 E1 F8 F3 
1d64a     2B 28 EC F7 
1d64e     F8 0B 04 0B | 	byte	$0f, $10, $e1, $25, $08, $e1, $f8, $f3, $2b, $28, $ec, $f7, $f8, $0b, $04, $0b
1d652     26 00 ED E9 
1d656     F5 16 09 00 
1d65a     00 07 12 E1 
1d65e     EB 12 F0 17 | 	byte	$26, $00, $ed, $e9, $f5, $16, $09, $00, $00, $07, $12, $e1, $eb, $12, $f0, $17
1d662     38 00 F0 F9 
1d666     03 F6 F7 1B 
1d66a     14 C8 EF 31 
1d66e     F2 E7 33 08 | 	byte	$38, $00, $f0, $f9, $03, $f6, $f7, $1b, $14, $c8, $ef, $31, $f2, $e7, $33, $08
1d672     F3 2F 00 CB 
1d676     0B F8 FF 32 
1d67a     20 E8 E9 FF 
1d67e     17 F2 07 3F | 	byte	$f3, $2f, $00, $cb, $0b, $f8, $ff, $32, $20, $e8, $e9, $ff, $17, $f2, $07, $3f
1d682     10 E7 E0 F7 
1d686     20 F4 E5 1F 
1d68a     31 20 E0 EF 
1d68e     45 08 FF 20 | 	byte	$10, $e7, $e0, $f7, $20, $f4, $e5, $1f, $31, $20, $e0, $ef, $45, $08, $ff, $20
1d692     C0 DF 3D F0 
1d696     FF 39 F0 FF 
1d69a     04 FB 3F F4 
1d69e     EB 11 C8 EB | 	byte	$c0, $df, $3d, $f0, $ff, $39, $f0, $ff, $04, $fb, $3f, $f4, $eb, $11, $c8, $eb
1d6a2     3C 10 21 00 
1d6a6     DB 35 10 EF 
1d6aa     23 E0 EF 30 
1d6ae     F0 13 18 F2 | 	byte	$3c, $10, $21, $00, $db, $35, $10, $ef, $23, $e0, $ef, $30, $f0, $13, $18, $f2
1d6b2     10 E4 EF 27 
1d6b6     08 FF 00 E9 
1d6ba     23 20 E2 0F 
1d6be     04 ED 11 F4 | 	byte	$10, $e4, $ef, $27, $08, $ff, $00, $e9, $23, $20, $e2, $0f, $04, $ed, $11, $f4
1d6c2     EA 20 00 EB 
1d6c6     09 12 04 E0 
1d6ca     FF 39 10 FE 
1d6ce     FE E2 F3 08 | 	byte	$ea, $20, $00, $eb, $09, $12, $04, $e0, $ff, $39, $10, $fe, $fe, $e2, $f3, $08
1d6d2     0B 16 F0 D7 
1d6d6     FD 16 07 17 
1d6da     19 FB 09 04 
1d6de     E4 F7 22 09 | 	byte	$0b, $16, $f0, $d7, $fd, $16, $07, $17, $19, $fb, $09, $04, $e4, $f7, $22, $09
1d6e2     EC E9 FF 1D 
1d6e6     10 EC FB 33 
1d6ea     38 E4 EB 02 
1d6ee     D6 FF 2B 01 | 	byte	$ec, $e9, $ff, $1d, $10, $ec, $fb, $33, $38, $e4, $eb, $02, $d6, $ff, $2b, $01
1d6f2     1B 20 F0 E5 
1d6f6     ED FF 17 27 
1d6fa     41 14 F2 E0 
1d6fe     C1 FF 30 0B | 	byte	$1b, $20, $f0, $e5, $ed, $ff, $17, $27, $41, $14, $f2, $e0, $c1, $ff, $30, $0b
1d702     11 20 04 E4 
1d706     DF 0D 35 38 
1d70a     08 C0 D7 27 
1d70e     38 14 FB F0 | 	byte	$11, $20, $04, $e4, $df, $0d, $35, $38, $08, $c0, $d7, $27, $38, $14, $fb, $f0
1d712     E0 F1 23 3F 
1d716     28 00 E0 D1 
1d71a     D9 E5 1D 44 
1d71e     3A 31 00 D0 | 	byte	$e0, $f1, $23, $3f, $28, $00, $e0, $d1, $d9, $e5, $1d, $44, $3a, $31, $00, $d0
1d722     CC C8 E7 17 
1d726     47 38 05 05 
1d72a     03 0A E8 DB 
1d72e     0F F0 B4 DF | 	byte	$cc, $c8, $e7, $17, $47, $38, $05, $05, $03, $0a, $e8, $db, $0f, $f0, $b4, $df
1d732     2B 50 20 FA 
1d736     F4 E0 0B 2B 
1d73a     2D 14 E2 C0 
1d73e     C3 D7 07 33 | 	byte	$2b, $50, $20, $fa, $f4, $e0, $0b, $2b, $2d, $14, $e2, $c0, $c3, $d7, $07, $33
1d742     3F 37 24 F8 
1d746     CB DB F7 F5 
1d74a     13 3B 2C 0A 
1d74e     F8 F2 E4 EF | 	byte	$3f, $37, $24, $f8, $cb, $db, $f7, $f5, $13, $3b, $2c, $0a, $f8, $f2, $e4, $ef
1d752     11 04 13 19 
1d756     E0 D7 13 48 
1d75a     20 E1 FF 04 
1d75e     F9 0B 27 30 | 	byte	$11, $04, $13, $19, $e0, $d7, $13, $48, $20, $e1, $ff, $04, $f9, $0b, $27, $30
1d762     E0 DB FA E8 
1d766     F1 17 3D 28 
1d76a     FD 03 F1 DA 
1d76e     F1 11 2B 25 | 	byte	$e0, $db, $fa, $e8, $f1, $17, $3d, $28, $fd, $03, $f1, $da, $f1, $11, $2b, $25
1d772     27 12 D8 E7 
1d776     F9 FF 0E 10 
1d77a     2D 20 D8 D3 
1d77e     17 44 04 CB | 	byte	$27, $12, $d8, $e7, $f9, $ff, $0e, $10, $2d, $20, $d8, $d3, $17, $44, $04, $cb
1d782     FF 10 E0 F3 
1d786     2E 28 D8 CF 
1d78a     0B 10 F4 0F 
1d78e     3F 32 E0 D5 | 	byte	$ff, $10, $e0, $f3, $2e, $28, $d8, $cf, $0b, $10, $f4, $0f, $3f, $32, $e0, $d5
1d792     E2 EA ED 17 
1d796     51 22 EC DA 
1d79a     D5 EB 11 3F 
1d79e     30 F0 E1 07 | 	byte	$e2, $ea, $ed, $17, $51, $22, $ec, $da, $d5, $eb, $11, $3f, $30, $f0, $e1, $07
1d7a2     19 E0 E6 27 
1d7a6     3A 00 CA EF 
1d7aa     2D F4 EA 1F 
1d7ae     26 F8 D0 DF | 	byte	$19, $e0, $e6, $27, $3a, $00, $ca, $ef, $2d, $f4, $ea, $1f, $26, $f8, $d0, $df
1d7b2     2F 24 02 1B 
1d7b6     30 04 DA C8 
1d7ba     FF 32 0C 1B 
1d7be     35 0C E1 C0 | 	byte	$2f, $24, $02, $1b, $30, $04, $da, $c8, $ff, $32, $0c, $1b, $35, $0c, $e1, $c0
1d7c2     DF 23 31 2B 
1d7c6     04 E2 E0 FF 
1d7ca     3A 00 D9 0B 
1d7ce     34 08 D0 D7 | 	byte	$df, $23, $31, $2b, $04, $e2, $e0, $ff, $3a, $00, $d9, $0b, $34, $08, $d0, $d7
1d7d2     27 20 E4 07 
1d7d6     31 08 D8 CF 
1d7da     FF 49 04 FF 
1d7de     22 0A E8 D0 | 	byte	$27, $20, $e4, $07, $31, $08, $d8, $cf, $ff, $49, $04, $ff, $22, $0a, $e8, $d0
1d7e2     FF 47 24 F3 
1d7e6     FE 0A F0 D7 
1d7ea     FF 3F 36 F8 
1d7ee     C9 F7 1D 1A | 	byte	$ff, $47, $24, $f3, $fe, $0a, $f0, $d7, $ff, $3f, $36, $f8, $c9, $f7, $1d, $1a
1d7f2     E0 D3 17 40 
1d7f6     10 CA CD 17 
1d7fa     3A E5 F7 26 
1d7fe     05 E0 C3 F7 | 	byte	$e0, $d3, $17, $40, $10, $ca, $cd, $17, $3a, $e5, $f7, $26, $05, $e0, $c3, $f7
1d802     4B 34 F2 07 
1d806     0A F0 CA EF 
1d80a     2F 49 10 D6 
1d80e     FF 08 E0 F5 | 	byte	$4b, $34, $f2, $07, $0a, $f0, $ca, $ef, $2f, $49, $10, $d6, $ff, $08, $e0, $f5
1d812     23 42 20 D0 
1d816     CF FF 2D 24 
1d81a     E0 D7 1D 40 
1d81e     10 D2 CD 0F | 	byte	$23, $42, $20, $d0, $cf, $ff, $2d, $24, $e0, $d7, $1d, $40, $10, $d2, $cd, $0f
1d822     44 F8 DF 1B 
1d826     20 FC D1 EF 
1d82a     37 4C 00 DF 
1d82e     06 10 E4 E3 | 	byte	$44, $f8, $df, $1b, $20, $fc, $d1, $ef, $37, $4c, $00, $df, $06, $10, $e4, $e3
1d832     13 3F 28 E0 
1d836     D7 FB F1 07 
1d83a     29 38 10 C8 
1d83e     C7 FF 3D 20 | 	byte	$13, $3f, $28, $e0, $d7, $fb, $f1, $07, $29, $38, $10, $c8, $c7, $ff, $3d, $20
1d842     D0 EB 37 34 
1d846     00 CB ED 3B 
1d84a     28 D2 F7 22 
1d84e     08 E2 DB 0F | 	byte	$d0, $eb, $37, $34, $00, $cb, $ed, $3b, $28, $d2, $f7, $22, $08, $e2, $db, $0f
1d852     4C 24 E0 EB 
1d856     14 00 DE FF 
1d85a     2B 30 F8 CC 
1d85e     EF F6 FF 23 | 	byte	$4c, $24, $e0, $eb, $14, $00, $de, $ff, $2b, $30, $f8, $cc, $ef, $f6, $ff, $23
1d862     3B 20 E0 BD 
1d866     E9 27 34 F0 
1d86a     D5 07 37 16 
1d86e     E4 D9 0F 44 | 	byte	$3b, $20, $e0, $bd, $e9, $27, $34, $f0, $d5, $07, $37, $16, $e4, $d9, $0f, $44
1d872     00 DA 0F 12 
1d876     F4 D0 EB 27 
1d87a     48 10 D3 EB 
1d87e     15 00 EE 0B | 	byte	$00, $da, $0f, $12, $f4, $d0, $eb, $27, $48, $10, $d3, $eb, $15, $00, $ee, $0b
1d882     31 28 F0 C0 
1d886     ED 05 0F 27 
1d88a     32 20 E8 C7 
1d88e     EF 2F 34 F0 | 	byte	$31, $28, $f0, $c0, $ed, $05, $0f, $27, $32, $20, $e8, $c7, $ef, $2f, $34, $f0
1d892     D6 0B 34 10 
1d896     DA DB 17 40 
1d89a     00 E9 1B 11 
1d89e     F0 D5 FD 37 | 	byte	$d6, $0b, $34, $10, $da, $db, $17, $40, $00, $e9, $1b, $11, $f0, $d5, $fd, $37
1d8a2     40 00 D7 FF 
1d8a6     16 F0 F9 17 
1d8aa     30 0C D6 DD 
1d8ae     03 0B 20 2A | 	byte	$40, $00, $d7, $ff, $16, $f0, $f9, $17, $30, $0c, $d6, $dd, $03, $0b, $20, $2a
1d8b2     20 FA D2 E7 
1d8b6     1B 3A 12 D0 
1d8ba     EB 2B 20 E8 
1d8be     C5 EB 37 30 | 	byte	$20, $fa, $d2, $e7, $1b, $3a, $12, $d0, $eb, $2b, $20, $e8, $c5, $eb, $37, $30
1d8c2     E0 FF 1B 00 
1d8c6     D9 DF 17 4A 
1d8ca     28 E0 E1 07 
1d8ce     00 E0 FF 2D | 	byte	$e0, $ff, $1b, $00, $d9, $df, $17, $4a, $28, $e0, $e1, $07, $00, $e0, $ff, $2d
1d8d2     30 00 CC F1 
1d8d6     02 0B 24 34 
1d8da     20 E8 C9 ED 
1d8de     1B 32 04 CB | 	byte	$30, $00, $cc, $f1, $02, $0b, $24, $34, $20, $e8, $c9, $ed, $1b, $32, $04, $cb
1d8e2     ED 2F 28 F4 
1d8e6     CA ED 37 34 
1d8ea     E4 F3 1D 08 
1d8ee     E5 D3 FF 3F | 	byte	$ed, $2f, $28, $f4, $ca, $ed, $37, $34, $e4, $f3, $1d, $08, $e5, $d3, $ff, $3f
1d8f2     38 F8 DD FF 
1d8f6     10 EB FF 1F 
1d8fa     36 12 D4 DF 
1d8fe     02 FD 11 2F | 	byte	$38, $f8, $dd, $ff, $10, $eb, $ff, $1f, $36, $12, $d4, $df, $02, $fd, $11, $2f
1d902     38 08 D0 E3 
1d906     07 32 20 D5 
1d90a     E3 25 30 00 
1d90e     CA DF 1F 40 | 	byte	$38, $08, $d0, $e3, $07, $32, $20, $d5, $e3, $25, $30, $00, $ca, $df, $1f, $40
1d912     F0 F3 16 00 
1d916     E4 DD 0B 43 
1d91a     30 F0 E6 07 
1d91e     00 DA FB 2B | 	byte	$f0, $f3, $16, $00, $e4, $dd, $0b, $43, $30, $f0, $e6, $07, $00, $da, $fb, $2b
1d922     38 08 D0 F7 
1d926     02 FA 13 2F 
1d92a     2A F4 C2 E3 
1d92e     0F 3A 10 D5 | 	byte	$38, $08, $d0, $f7, $02, $fa, $13, $2f, $2a, $f4, $c2, $e3, $0f, $3a, $10, $d5
1d932     F3 2F 20 E4 
1d936     C5 F5 3F 20 
1d93a     DB FF 14 FA 
1d93e     E0 E5 17 43 | 	byte	$f3, $2f, $20, $e4, $c5, $f5, $3f, $20, $db, $ff, $14, $fa, $e0, $e5, $17, $43
1d942     12 F0 F3 0B 
1d946     FA D9 FD 2B 
1d94a     3F 14 DA F7 
1d94e     FC E9 03 25 | 	byte	$12, $f0, $f3, $0b, $fa, $d9, $fd, $2b, $3f, $14, $da, $f7, $fc, $e9, $03, $25
1d952     39 14 D9 D7 
1d956     EF 25 3E 00 
1d95a     E3 0F 28 00 
1d95e     D0 DB 0F 3F | 	byte	$39, $14, $d9, $d7, $ef, $25, $3e, $00, $e3, $0f, $28, $00, $d0, $db, $0f, $3f
1d962     08 F3 13 00 
1d966     F0 E3 FF 33 
1d96a     30 14 00 F3 
1d96e     EC D7 F3 23 | 	byte	$08, $f3, $13, $00, $f0, $e3, $ff, $33, $30, $14, $00, $f3, $ec, $d7, $f3, $23
1d972     35 28 F9 F7 
1d976     FB E8 EA FF 
1d97a     2D 2C FA F0 
1d97e     E9 FF 16 F9 | 	byte	$35, $28, $f9, $f7, $fb, $e8, $ea, $ff, $2d, $2c, $fa, $f0, $e9, $ff, $16, $f9
1d982     F9 05 23 12 
1d986     E9 E3 F7 1D 
1d98a     26 06 03 F2 
1d98e     ED F4 F1 11 | 	byte	$f9, $05, $23, $12, $e9, $e3, $f7, $1d, $26, $06, $03, $f2, $ed, $f4, $f1, $11
1d992     1C 16 17 FC 
1d996     ED F2 F6 F8 
1d99a     FE 16 24 15 
1d99e     01 FD F8 F1 | 	byte	$1c, $16, $17, $fc, $ed, $f2, $f6, $f8, $fe, $16, $24, $15, $01, $fd, $f8, $f1
1d9a2     FB FE FF 07 
1d9a6     13 12 06 00 
1d9aa     0B 0D 04 FD 
1d9ae     02 03 FC FF | 	byte	$fb, $fe, $ff, $07, $13, $12, $06, $00, $0b, $0d, $04, $fd, $02, $03, $fc, $ff
1d9b2     05 11 14 04 
1d9b6     FD FF 09 08 
1d9ba     01 03 05 04 
1d9be     F6 F9 07 10 | 	byte	$05, $11, $14, $04, $fd, $ff, $09, $08, $01, $03, $05, $04, $f6, $f9, $07, $10
1d9c2     0C 03 FF F8 
1d9c6     FC 05 0D 08 
1d9ca     09 05 F9 FF 
1d9ce     10 14 06 FF | 	byte	$0c, $03, $ff, $f8, $fc, $05, $0d, $08, $09, $05, $f9, $ff, $10, $14, $06, $ff
1d9d2     02 02 04 06 
1d9d6     03 08 05 FC 
1d9da     F7 03 11 0B 
1d9de     07 0B 01 F9 | 	byte	$02, $02, $04, $06, $03, $08, $05, $fc, $f7, $03, $11, $0b, $07, $0b, $01, $f9
1d9e2     F8 06 10 04 
1d9e6     FC 03 0B 06 
1d9ea     00 02 07 08 
1d9ee     03 F6 F5 01 | 	byte	$f8, $06, $10, $04, $fc, $03, $0b, $06, $00, $02, $07, $08, $03, $f6, $f5, $01
1d9f2     09 04 FB 06 
1d9f6     11 0A F8 F9 
1d9fa     02 0A 06 02 
1d9fe     06 03 01 FE | 	byte	$09, $04, $fb, $06, $11, $0a, $f8, $f9, $02, $0a, $06, $02, $06, $03, $01, $fe
1da02     02 08 06 FC 
1da06     F9 01 04 05 
1da0a     03 04 07 0C 
1da0e     0A 05 05 04 | 	byte	$02, $08, $06, $fc, $f9, $01, $04, $05, $03, $04, $07, $0c, $0a, $05, $05, $04
1da12     03 05 04 00 
1da16     F9 FF 06 10 
1da1a     0D 01 FF 05 
1da1e     0C 02 05 0B | 	byte	$03, $05, $04, $00, $f9, $ff, $06, $10, $0d, $01, $ff, $05, $0c, $02, $05, $0b
1da22     05 07 00 F8 
1da26     FF 09 04 05 
1da2a     FF 05 0A 00 
1da2e     FE 03 0B 10 | 	byte	$05, $07, $00, $f8, $ff, $09, $04, $05, $ff, $05, $0a, $00, $fe, $03, $0b, $10
1da32     04 FE 05 07 
1da36     09 0A 10 08 
1da3a     FA F9 FA 02 
1da3e     0A 0D 0C 08 | 	byte	$04, $fe, $05, $07, $09, $0a, $10, $08, $fa, $f9, $fa, $02, $0a, $0d, $0c, $08
1da42     07 01 FC FC 
1da46     02 07 08 00 
1da4a     FD 0E 10 FE 
1da4e     FB FE 04 10 | 	byte	$07, $01, $fc, $fc, $02, $07, $08, $00, $fd, $0e, $10, $fe, $fb, $fe, $04, $10
1da52     00 FB 06 0A 
1da56     04 FF FB FB 
1da5a     07 0C 06 0B 
1da5e     08 02 FF FE | 	byte	$00, $fb, $06, $0a, $04, $ff, $fb, $fb, $07, $0c, $06, $0b, $08, $02, $ff, $fe
1da62     00 FB FC 04 
1da66     03 FE 0D 0C 
1da6a     06 02 02 00 
1da6e     02 0B 05 01 | 	byte	$00, $fb, $fc, $04, $03, $fe, $0d, $0c, $06, $02, $02, $00, $02, $0b, $05, $01
1da72     FE 05 0A 00 
1da76     F9 FD 09 12 
1da7a     08 FE FF FE 
1da7e     07 08 05 04 | 	byte	$fe, $05, $0a, $00, $f9, $fd, $09, $12, $08, $fe, $ff, $fe, $07, $08, $05, $04
1da82     01 07 00 FD 
1da86     00 07 0A FE 
1da8a     FF 07 10 06 
1da8e     01 06 03 01 | 	byte	$01, $07, $00, $fd, $00, $07, $0a, $fe, $ff, $07, $10, $06, $01, $06, $03, $01
1da92     03 05 07 04 
1da96     00 00 03 08 
1da9a     0A 09 02 FE 
1da9e     FF 07 0B 0B | 	byte	$03, $05, $07, $04, $00, $00, $03, $08, $0a, $09, $02, $fe, $ff, $07, $0b, $0b
1daa2     12 06 FC FB 
1daa6     FC 02 04 01 
1daaa     09 0C 04 00 
1daae     06 01 FE 03 | 	byte	$12, $06, $fc, $fb, $fc, $02, $04, $01, $09, $0c, $04, $00, $06, $01, $fe, $03
1dab2     05 01 01 06 
1dab6     00 01 06 01 
1daba     04 03 03 02 
1dabe     0D 13 08 FA | 	byte	$05, $01, $01, $06, $00, $01, $06, $01, $04, $03, $03, $02, $0d, $13, $08, $fa
1dac2     F7 FB FD FF 
1dac6     0A 10 0B 00 
1daca     F6 FD 03 03 
1dace     05 0B 0A 00 | 	byte	$f7, $fb, $fd, $ff, $0a, $10, $0b, $00, $f6, $fd, $03, $03, $05, $0b, $0a, $00
1dad2     05 10 08 03 
1dad6     06 02 01 FC 
1dada     F9 FF FF FF 
1dade     0B 10 08 FF | 	byte	$05, $10, $08, $03, $06, $02, $01, $fc, $f9, $ff, $ff, $ff, $0b, $10, $08, $ff
1dae2     0A 0B 00 FC 
1dae6     06 0B 0A 07 
1daea     F8 03 09 FC 
1daee     FF 09 12 04 | 	byte	$0a, $0b, $00, $fc, $06, $0b, $0a, $07, $f8, $03, $09, $fc, $ff, $09, $12, $04
1daf2     FB 02 05 09 
1daf6     05 FC 03 0C 
1dafa     0B 00 FF 05 
1dafe     05 05 01 07 | 	byte	$fb, $02, $05, $09, $05, $fc, $03, $0c, $0b, $00, $ff, $05, $05, $05, $01, $07
1db02     0D 0D 06 05 
1db06     00 F7 FF 06 
1db0a     09 00 F8 02 
1db0e     0D 12 FC F4 | 	byte	$0d, $0d, $06, $05, $00, $f7, $ff, $06, $09, $00, $f8, $02, $0d, $12, $fc, $f4
1db12     07 13 04 FB 
1db16     07 07 05 F8 
1db1a     FB 07 07 00 
1db1e     FA FF 0D 0C | 	byte	$07, $13, $04, $fb, $07, $07, $05, $f8, $fb, $07, $07, $00, $fa, $ff, $0d, $0c
1db22     F4 FA 07 0B 
1db26     06 FF FF 08 
1db2a     0D 04 FE FA 
1db2e     FF 05 00 FC | 	byte	$f4, $fa, $07, $0b, $06, $ff, $ff, $08, $0d, $04, $fe, $fa, $ff, $05, $00, $fc
1db32     03 0A 0B 04 
1db36     04 06 06 01 
1db3a     FF 0A 0D 00 
1db3e     FA 03 03 03 | 	byte	$03, $0a, $0b, $04, $04, $06, $06, $01, $ff, $0a, $0d, $00, $fa, $03, $03, $03
1db42     01 08 0C 0A 
1db46     FE FF 0B 07 
1db4a     01 01 08 0D 
1db4e     08 03 01 0B | 	byte	$01, $08, $0c, $0a, $fe, $ff, $0b, $07, $01, $01, $08, $0d, $08, $03, $01, $0b
1db52     06 FB FD 00 
1db56     FF 05 02 0C 
1db5a     11 0D 02 FE 
1db5e     09 0A 06 FE | 	byte	$06, $fb, $fd, $00, $ff, $05, $02, $0c, $11, $0d, $02, $fe, $09, $0a, $06, $fe
1db62     FF 05 0E 06 
1db66     07 0D FE FD 
1db6a     03 09 06 FA 
1db6e     F9 07 07 01 | 	byte	$ff, $05, $0e, $06, $07, $0d, $fe, $fd, $03, $09, $06, $fa, $f9, $07, $07, $01
1db72     06 10 12 10 
1db76     F4 F1 FF 04 
1db7a     FA 05 08 F7 
1db7e     FF 03 FD 0A | 	byte	$06, $10, $12, $10, $f4, $f1, $ff, $04, $fa, $05, $08, $f7, $ff, $03, $fd, $0a
1db82     13 10 00 F5 
1db86     FC 04 08 05 
1db8a     FE FB FF FF 
1db8e     07 04 06 00 | 	byte	$13, $10, $00, $f5, $fc, $04, $08, $05, $fe, $fb, $ff, $ff, $07, $04, $06, $00
1db92     FD 0A 08 FD 
1db96     06 0A FD FD 
1db9a     05 00 FF 22 
1db9e     0A E0 FF 20 | 	byte	$fd, $0a, $08, $fd, $06, $0a, $fd, $fd, $05, $00, $ff, $22, $0a, $e0, $ff, $20
1dba2     F0 F7 18 04 
1dba6     FD 07 10 F8 
1dbaa     F9 11 08 06 
1dbae     1D 00 E6 FF | 	byte	$f0, $f7, $18, $04, $fd, $07, $10, $f8, $f9, $11, $08, $06, $1d, $00, $e6, $ff
1dbb2     11 05 FF 07 
1dbb6     02 07 0E 04 
1dbba     03 12 FC F7 
1dbbe     03 06 FB FB | 	byte	$11, $05, $ff, $07, $02, $07, $0e, $04, $03, $12, $fc, $f7, $03, $06, $fb, $fb
1dbc2     0B FD FD 2F 
1dbc6     28 EC 0D 20 
1dbca     F0 0B 14 E8 
1dbce     FF F4 E3 FF | 	byte	$0b, $fd, $fd, $2f, $28, $ec, $0d, $20, $f0, $0b, $14, $e8, $ff, $f4, $e3, $ff
1dbd2     15 11 01 22 
1dbd6     14 FB 15 10 
1dbda     F2 F6 EB FD 
1dbde     00 F7 0E 10 | 	byte	$15, $11, $01, $22, $14, $fb, $15, $10, $f2, $f6, $eb, $fd, $00, $f7, $0e, $10
1dbe2     13 10 02 06 
1dbe6     06 FD E6 F5 
1dbea     0A 07 13 F4 
1dbee     DA 37 20 DB | 	byte	$13, $10, $02, $06, $06, $fd, $e6, $f5, $0a, $07, $13, $f4, $da, $37, $20, $db
1dbf2     2B 04 E1 20 
1dbf6     E4 EF 25 E8 
1dbfa     FF 20 EA 0F 
1dbfe     12 FF 21 19 | 	byte	$2b, $04, $e1, $20, $e4, $ef, $25, $e8, $ff, $20, $ea, $0f, $12, $ff, $21, $19
1dc02     F8 F9 01 EA 
1dc06     F5 0D F0 FF 
1dc0a     18 F8 23 10 
1dc0e     FB 1B 00 F3 | 	byte	$f8, $f9, $01, $ea, $f5, $0d, $f0, $ff, $18, $f8, $23, $10, $fb, $1b, $00, $f3
1dc12     0C F6 07 04 
1dc16     ED 0F 15 E8 
1dc1a     FF 3B 00 FF 
1dc1e     24 D0 F7 20 | 	byte	$0c, $f6, $07, $04, $ed, $0f, $15, $e8, $ff, $3b, $00, $ff, $24, $d0, $f7, $20
1dc22     D5 1F 10 E7 
1dc26     37 00 FB 24 
1dc2a     EC 15 20 F0 
1dc2e     19 00 E7 0E | 	byte	$d5, $1f, $10, $e7, $37, $00, $fb, $24, $ec, $15, $20, $f0, $19, $00, $e7, $0e
1dc32     00 EE 03 F5 
1dc36     FF 20 03 17 
1dc3a     10 EB 12 F8 
1dc3e     F5 0C E9 0E | 	byte	$00, $ee, $03, $f5, $ff, $20, $03, $17, $10, $eb, $12, $f8, $f5, $0c, $e9, $0e
1dc42     0A FF 1C EA 
1dc46     EF 30 04 FF 
1dc4a     18 E9 FF 10 
1dc4e     E0 0B 10 E7 | 	byte	$0a, $ff, $1c, $ea, $ef, $30, $04, $ff, $18, $e9, $ff, $10, $e0, $0b, $10, $e7
1dc52     15 00 EF 2A 
1dc56     F8 17 30 F0 
1dc5a     0E F0 DB 0B 
1dc5e     E4 FD 14 F1 | 	byte	$15, $00, $ef, $2a, $f8, $17, $30, $f0, $0e, $f0, $db, $0b, $e4, $fd, $14, $f1
1dc62     16 14 10 10 
1dc66     F2 FF 17 08 
1dc6a     FF F8 F6 09 
1dc6e     F6 FF 15 0C | 	byte	$16, $14, $10, $10, $f2, $ff, $17, $08, $ff, $f8, $f6, $09, $f6, $ff, $15, $0c
1dc72     07 F8 07 31 
1dc76     00 EF 20 F5 
1dc7a     17 14 E7 21 
1dc7e     00 E7 1B F6 | 	byte	$07, $f8, $07, $31, $00, $ef, $20, $f5, $17, $14, $e7, $21, $00, $e7, $1b, $f6
1dc82     0E 14 EB 1D 
1dc86     08 F7 20 E0 
1dc8a     EF 09 F7 17 
1dc8e     FA FB 20 03 | 	byte	$0e, $14, $eb, $1d, $08, $f7, $20, $e0, $ef, $09, $f7, $17, $fa, $fb, $20, $03
1dc92     0A 0C FB 15 
1dc96     04 FA 00 FF 
1dc9a     04 FA F0 03 
1dc9e     0C 07 0C E9 | 	byte	$0a, $0c, $fb, $15, $04, $fa, $00, $ff, $04, $fa, $f0, $03, $0c, $07, $0c, $e9
1dca2     17 28 F7 0D 
1dca6     00 EB 11 F8 
1dcaa     FF 1A F9 03 
1dcae     00 EB 17 06 | 	byte	$17, $28, $f7, $0d, $00, $eb, $11, $f8, $ff, $1a, $f9, $03, $00, $eb, $17, $06
1dcb2     FD 16 F0 07 
1dcb6     10 E3 03 FA 
1dcba     F7 21 00 0B 
1dcbe     10 F5 20 00 | 	byte	$fd, $16, $f0, $07, $10, $e3, $03, $fa, $f7, $21, $00, $0b, $10, $f5, $20, $00
1dcc2     F7 0A FF 06 
1dcc6     00 F5 05 F9 
1dcca     03 08 05 17 
1dcce     06 F7 1D 12 | 	byte	$f7, $0a, $ff, $06, $00, $f5, $05, $f9, $03, $08, $05, $17, $06, $f7, $1d, $12
1dcd2     F0 FD 01 FE 
1dcd6     17 04 FB 15 
1dcda     00 FB 0D F2 
1dcde     13 12 ED 15 | 	byte	$f0, $fd, $01, $fe, $17, $04, $fb, $15, $00, $fb, $0d, $f2, $13, $12, $ed, $15
1dce2     04 07 20 E4 
1dce6     FF 18 F7 13 
1dcea     F4 EF 1A 00 
1dcee     0B 10 FB 1D | 	byte	$04, $07, $20, $e4, $ff, $18, $f7, $13, $f4, $ef, $1a, $00, $0b, $10, $fb, $1d
1dcf2     F8 FB 09 FF 
1dcf6     13 04 F7 0B 
1dcfa     02 13 04 FB 
1dcfe     20 F8 F3 10 | 	byte	$f8, $fb, $09, $ff, $13, $04, $f7, $0b, $02, $13, $04, $fb, $20, $f8, $f3, $10
1dd02     FB 13 10 EC 
1dd06     15 00 F3 15 
1dd0a     F4 07 0A E6 
1dd0e     13 08 F3 17 | 	byte	$fb, $13, $10, $ec, $15, $00, $f3, $15, $f4, $07, $0a, $e6, $13, $08, $f3, $17
1dd12     F0 FF 0C F3 
1dd16     17 04 F2 11 
1dd1a     F6 FF 08 FB 
1dd1e     12 00 F7 06 | 	byte	$f0, $ff, $0c, $f3, $17, $04, $f2, $11, $f6, $ff, $08, $fb, $12, $00, $f7, $06
1dd22     FF 11 FC FF 
1dd26     08 F7 03 F4 
1dd2a     07 24 F8 FB 
1dd2e     08 F4 07 05 | 	byte	$ff, $11, $fc, $ff, $08, $f7, $03, $f4, $07, $24, $f8, $fb, $08, $f4, $07, $05
1dd32     F9 23 00 F3 
1dd36     1B F8 FF 20 
1dd3a     F5 13 10 E9 
1dd3e     13 F8 F3 20 | 	byte	$f9, $23, $00, $f3, $1b, $f8, $ff, $20, $f5, $13, $10, $e9, $13, $f8, $f3, $20
1dd42     F8 07 10 E3 
1dd46     0F 14 06 20 
1dd4a     FC 0B 0C F1 
1dd4e     FF F8 07 12 | 	byte	$f8, $07, $10, $e3, $0f, $14, $06, $20, $fc, $0b, $0c, $f1, $ff, $f8, $07, $12
1dd52     FB 00 FA 0D 
1dd56     08 F7 27 08 
1dd5a     ED 18 00 0B 
1dd5e     1A F0 0B 04 | 	byte	$fb, $00, $fa, $0d, $08, $f7, $27, $08, $ed, $18, $00, $0b, $1a, $f0, $0b, $04
1dd62     EB 20 00 FF 
1dd66     18 E8 13 20 
1dd6a     F9 03 E2 FB 
1dd6e     10 F0 17 0A | 	byte	$eb, $20, $00, $ff, $18, $e8, $13, $20, $f9, $03, $e2, $fb, $10, $f0, $17, $0a
1dd72     FB 18 F4 0A 
1dd76     10 F7 13 00 
1dd7a     F7 07 F0 FF 
1dd7e     F8 FB 1B 04 | 	byte	$fb, $18, $f4, $0a, $10, $f7, $13, $00, $f7, $07, $f0, $ff, $f8, $fb, $1b, $04
1dd82     08 EA F7 20 
1dd86     F4 07 10 EE 
1dd8a     17 04 FF 19 
1dd8e     F0 FB 04 EE | 	byte	$08, $ea, $f7, $20, $f4, $07, $10, $ee, $17, $04, $ff, $19, $f0, $fb, $04, $ee
1dd92     23 08 FA 1B 
1dd96     F0 FB 08 EF 
1dd9a     1F 10 F5 17 
1dd9e     F4 FB 20 FC | 	byte	$23, $08, $fa, $1b, $f0, $fb, $08, $ef, $1f, $10, $f5, $17, $f4, $fb, $20, $fc
1dda2     FF 01 FF 2D 
1dda6     10 F1 07 F4 
1ddaa     FB 02 FF 19 
1ddae     00 FF F5 F5 | 	byte	$ff, $01, $ff, $2d, $10, $f1, $07, $f4, $fb, $02, $ff, $19, $00, $ff, $f5, $f5
1ddb2     2C 00 FF 20 
1ddb6     E0 17 10 EF 
1ddba     2F F8 F3 20 
1ddbe     E6 1B 10 E7 | 	byte	$2c, $00, $ff, $20, $e0, $17, $10, $ef, $2f, $f8, $f3, $20, $e6, $1b, $10, $e7
1ddc2     2B 00 FF 18 
1ddc6     E0 17 10 EB 
1ddca     1D F0 FF 20 
1ddce     EE 17 0A FD | 	byte	$2b, $00, $ff, $18, $e0, $17, $10, $eb, $1d, $f0, $ff, $20, $ee, $17, $0a, $fd
1ddd2     16 F7 07 02 
1ddd6     F3 03 EC FB 
1ddda     14 00 F4 EF 
1ddde     25 10 E1 21 | 	byte	$16, $f7, $07, $02, $f3, $03, $ec, $fb, $14, $00, $f4, $ef, $25, $10, $e1, $21
1dde2     F4 EF 26 E4 
1dde6     17 20 DB 17 
1ddea     E8 FB 28 D8 
1ddee     1F 10 DB 2D | 	byte	$f4, $ef, $26, $e4, $17, $20, $db, $17, $e8, $fb, $28, $d8, $1f, $10, $db, $2d
1ddf2     F0 EF 18 E0 
1ddf6     1F 04 E7 30 
1ddfa     F8 FF 24 E2 
1ddfe     0D 10 F2 17 | 	byte	$f0, $ef, $18, $e0, $1f, $04, $e7, $30, $f8, $ff, $24, $e2, $0d, $10, $f2, $17
1de02     F8 F7 19 EC 
1de06     07 20 E9 FF 
1de0a     38 08 ED 0A 
1de0e     E4 F3 2E F0 | 	byte	$f8, $f7, $19, $ec, $07, $20, $e9, $ff, $38, $08, $ed, $0a, $e4, $f3, $2e, $f0
1de12     0B 38 E2 17 
1de16     08 D7 2B E8 
1de1a     FB 40 E4 1F 
1de1e     08 CF 25 E0 | 	byte	$0b, $38, $e2, $17, $08, $d7, $2b, $e8, $fb, $40, $e4, $1f, $08, $cf, $25, $e0
1de22     F7 28 E1 2B 
1de26     10 F3 3B F4 
1de2a     FF 18 F0 15 
1de2e     00 DD 0D F5 | 	byte	$f7, $28, $e1, $2b, $10, $f3, $3b, $f4, $ff, $18, $f0, $15, $00, $dd, $0d, $f5
1de32     17 08 D0 27 
1de36     28 D1 27 10 
1de3a     D7 37 F0 EF 
1de3e     38 D0 FF 18 | 	byte	$17, $08, $d0, $27, $28, $d1, $27, $10, $d7, $37, $f0, $ef, $38, $d0, $ff, $18
1de42     C7 35 10 E7 
1de46     3D E0 F3 24 
1de4a     D4 17 08 D3 
1de4e     1F 00 E7 2F | 	byte	$c7, $35, $10, $e7, $3d, $e0, $f3, $24, $d4, $17, $08, $d3, $1f, $00, $e7, $2f
1de52     10 FF 30 F4 
1de56     F7 18 D9 FF 
1de5a     00 D6 23 20 
1de5e     D8 FF 3F 00 | 	byte	$10, $ff, $30, $f4, $f7, $18, $d9, $ff, $00, $d6, $23, $20, $d8, $ff, $3f, $00
1de62     D7 2F F0 E3 
1de66     3A E0 EF 34 
1de6a     D0 F7 2C E0 
1de6e     27 20 F1 33 | 	byte	$d7, $2f, $f0, $e3, $3a, $e0, $ef, $34, $d0, $f7, $2c, $e0, $27, $20, $f1, $33
1de72     14 01 01 03 
1de76     F0 DF 10 D8 
1de7a     F7 3F FA 1F 
1de7e     28 F3 20 00 | 	byte	$14, $01, $01, $03, $f0, $df, $10, $d8, $f7, $3f, $fa, $1f, $28, $f3, $20, $00
1de82     FA FA F5 F8 
1de86     E3 23 10 DB 
1de8a     2F 48 E0 EF 
1de8e     34 D0 DF 2C | 	byte	$fa, $fa, $f5, $f8, $e3, $23, $10, $db, $2f, $48, $e0, $ef, $34, $d0, $df, $2c
1de92     D0 FF 28 D0 
1de96     13 22 07 02 
1de9a     27 40 F0 13 
1de9e     00 B3 07 F8 | 	byte	$d0, $ff, $28, $d0, $13, $22, $07, $02, $27, $40, $f0, $13, $00, $b3, $07, $f8
1dea2     D7 10 09 20 
1dea6     04 33 20 F1 
1deaa     1D E8 D3 FA 
1deae     D8 F7 F0 17 | 	byte	$d7, $10, $09, $20, $04, $33, $20, $f1, $1d, $e8, $d3, $fa, $d8, $f7, $f0, $17
1deb2     24 F9 2F 60 
1deb6     E4 CF 1B D0 
1deba     BD 1F 10 E5 
1debe     20 1A 08 F3 | 	byte	$24, $f9, $2f, $60, $e4, $cf, $1b, $d0, $bd, $1f, $10, $e5, $20, $1a, $08, $f3
1dec2     47 24 F3 27 
1dec6     10 D4 F9 EC 
1deca     FC E0 EB 2E 
1dece     00 1F 48 10 | 	byte	$47, $24, $f3, $27, $10, $d4, $f9, $ec, $fc, $e0, $eb, $2e, $00, $1f, $48, $10
1ded2     17 02 F7 F0 
1ded6     C7 FF F9 E7 
1deda     10 1B 4B 10 
1dede     FF 33 20 A8 | 	byte	$17, $02, $f7, $f0, $c7, $ff, $f9, $e7, $10, $1b, $4b, $10, $ff, $33, $20, $a8
1dee2     BF 23 F0 D1 
1dee6     27 51 14 D5 
1deea     2B 28 E0 FF 
1deee     28 20 E8 DE | 	byte	$bf, $23, $f0, $d1, $27, $51, $14, $d5, $2b, $28, $e0, $ff, $28, $20, $e8, $de
1def2     11 E8 DB 1B 
1def6     0A 27 10 2D 
1defa     30 D8 EF 00 
1defe     F9 F0 DA 07 | 	byte	$11, $e8, $db, $1b, $0a, $27, $10, $2d, $30, $d8, $ef, $00, $f9, $f0, $da, $07
1df02     F9 07 3F 3F 
1df06     38 C1 CF 10 
1df0a     F4 B4 C7 37 
1df0e     40 F0 FF 3F | 	byte	$f9, $07, $3f, $3f, $38, $c1, $cf, $10, $f4, $b4, $c7, $37, $40, $f0, $ff, $3f
1df12     20 C8 D5 2F 
1df16     20 E0 F7 37 
1df1a     34 D0 D7 0D 
1df1e     09 E0 D7 37 | 	byte	$20, $c8, $d5, $2f, $20, $e0, $f7, $37, $34, $d0, $d7, $0d, $09, $e0, $d7, $37
1df22     40 08 F0 FF 
1df26     2D F8 CB ED 
1df2a     FB 00 ED 13 
1df2e     4D 50 08 A8 | 	byte	$40, $08, $f0, $ff, $2d, $f8, $cb, $ed, $fb, $00, $ed, $13, $4d, $50, $08, $a8
1df32     C7 21 12 E0 
1df36     DD 17 54 18 
1df3a     D5 FF 30 0A 
1df3e     D4 D5 27 44 | 	byte	$c7, $21, $12, $e0, $dd, $17, $54, $18, $d5, $ff, $30, $0a, $d4, $d5, $27, $44
1df42     00 F7 17 20 
1df46     F0 B8 DF 26 
1df4a     04 07 23 2F 
1df4e     28 E0 EB 01 | 	byte	$00, $f7, $17, $20, $f0, $b8, $df, $26, $04, $07, $23, $2f, $28, $e0, $eb, $01
1df52     F0 EB EA 1D 
1df56     3C 20 15 00 
1df5a     E5 C0 EB 3B 
1df5e     20 E0 DF 0B | 	byte	$f0, $eb, $ea, $1d, $3c, $20, $15, $00, $e5, $c0, $eb, $3b, $20, $e0, $df, $0b
1df62     47 28 CC F7 
1df66     18 08 F8 EF 
1df6a     17 3C 20 00 
1df6e     E8 EF EB E0 | 	byte	$47, $28, $cc, $f7, $18, $08, $f8, $ef, $17, $3c, $20, $00, $e8, $ef, $eb, $e0
1df72     E3 FF 2D 4D 
1df76     24 FE FE E8 
1df7a     D5 CC E3 23 
1df7e     3B 34 02 F9 | 	byte	$e3, $ff, $2d, $4d, $24, $fe, $fe, $e8, $d5, $cc, $e3, $23, $3b, $34, $02, $f9
1df82     FE E6 C2 E7 
1df86     37 40 00 CC 
1df8a     E3 0F 3F 20 
1df8e     CD F7 06 09 | 	byte	$fe, $e6, $c2, $e7, $37, $40, $00, $cc, $e3, $0f, $3f, $20, $cd, $f7, $06, $09
1df92     00 EF 17 30 
1df96     32 20 E4 B3 
1df9a     D7 FD 13 1C 
1df9e     23 29 2E 16 | 	byte	$00, $ef, $17, $30, $32, $20, $e4, $b3, $d7, $fd, $13, $1c, $23, $29, $2e, $16
1dfa2     E2 C1 D7 FF 
1dfa6     15 2F 31 20 
1dfaa     FA D0 E7 1B 
1dfae     10 EB 0F 34 | 	byte	$e2, $c1, $d7, $ff, $15, $2f, $31, $20, $fa, $d0, $e7, $1b, $10, $eb, $0f, $34
1dfb2     08 D4 DE 0F 
1dfb6     34 3E 08 E2 
1dfba     D0 EF 27 18 
1dfbe     14 11 17 16 | 	byte	$08, $d4, $de, $0f, $34, $3e, $08, $e2, $d0, $ef, $27, $18, $14, $11, $17, $16
1dfc2     E4 C2 C7 FF 
1dfc6     3F 40 04 F6 
1dfca     07 08 F0 CD 
1dfce     F1 21 38 18 | 	byte	$e4, $c2, $c7, $ff, $3f, $40, $04, $f6, $07, $08, $f0, $cd, $f1, $21, $38, $18
1dfd2     E1 D1 EB 1F 
1dfd6     38 18 E0 D7 
1dfda     17 30 02 D4 
1dfde     E2 13 37 30 | 	byte	$e1, $d1, $eb, $1f, $38, $18, $e0, $d7, $17, $30, $02, $d4, $e2, $13, $37, $30
1dfe2     F4 CA C5 FD 
1dfe6     33 22 03 F2 
1dfea     0E 20 FC E0 
1dfee     D7 07 39 40 | 	byte	$f4, $ca, $c5, $fd, $33, $22, $03, $f2, $0e, $20, $fc, $e0, $d7, $07, $39, $40
1dff2     14 E0 D7 FF 
1dff6     10 00 07 13 
1dffa     20 10 F0 E1 
1dffe     E3 FF 27 2A | 	byte	$14, $e0, $d7, $ff, $10, $00, $07, $13, $20, $10, $f0, $e1, $e3, $ff, $27, $2a
1e002     F8 CD F3 2F 
1e006     20 F9 E1 FA 
1e00a     1B 36 18 F0 
1e00e     D0 D9 13 3F | 	byte	$f8, $cd, $f3, $2f, $20, $f9, $e1, $fa, $1b, $36, $18, $f0, $d0, $d9, $13, $3f
1e012     3C 00 E0 05 
1e016     10 FB E9 EF 
1e01a     13 33 32 08 
1e01e     E0 DB F5 10 | 	byte	$3c, $00, $e0, $05, $10, $fb, $e9, $ef, $13, $33, $32, $08, $e0, $db, $f5, $10
1e022     19 12 01 F8 
1e026     F6 02 08 07 
1e02a     11 0C F2 F5 
1e02e     1B 25 04 E2 | 	byte	$19, $12, $01, $f8, $f6, $02, $08, $07, $11, $0c, $f2, $f5, $1b, $25, $04, $e2
1e032     DB FD 1F 24 
1e036     00 E2 D3 FB 
1e03a     27 3B 22 F4 
1e03e     F3 03 FD F0 | 	byte	$db, $fd, $1f, $24, $00, $e2, $d3, $fb, $27, $3b, $22, $f4, $f3, $03, $fd, $f0
1e042     E5 F7 1B 2D 
1e046     20 F8 E0 DA 
1e04a     E7 05 21 20 
1e04e     06 F1 FB 0B | 	byte	$e5, $f7, $1b, $2d, $20, $f8, $e0, $da, $e7, $05, $21, $20, $06, $f1, $fb, $0b
1e052     12 15 10 F0 
1e056     E2 07 2B 10 
1e05a     EC D6 F3 1F 
1e05e     3B 24 F4 D4 | 	byte	$12, $15, $10, $f0, $e2, $07, $2b, $10, $ec, $d6, $f3, $1f, $3b, $24, $f4, $d4
1e062     D3 FF 2F 39 
1e066     20 F8 FF 09 
1e06a     F8 E7 E1 FB 
1e06e     21 35 2C 02 | 	byte	$d3, $ff, $2f, $39, $20, $f8, $ff, $09, $f8, $e7, $e1, $fb, $21, $35, $2c, $02
1e072     DA D7 EF 0F 
1e076     26 20 08 F8 
1e07a     F4 07 11 13 
1e07e     02 E2 EB 1D | 	byte	$da, $d7, $ef, $0f, $26, $20, $08, $f8, $f4, $07, $11, $13, $02, $e2, $eb, $1d
1e082     20 FA E0 ED 
1e086     15 39 30 FA 
1e08a     D4 CB FF 30 
1e08e     33 14 F1 FD | 	byte	$20, $fa, $e0, $ed, $15, $39, $30, $fa, $d4, $cb, $ff, $30, $33, $14, $f1, $fd
1e092     08 F9 E8 E3 
1e096     FF 2D 3A 20 
1e09a     F0 DB EA FF 
1e09e     0B 16 13 04 | 	byte	$08, $f9, $e8, $e3, $ff, $2d, $3a, $20, $f0, $db, $ea, $ff, $0b, $16, $13, $04
1e0a2     FF F6 FE 11 
1e0a6     16 00 E0 FF 
1e0aa     28 11 EA E0 
1e0ae     FF 20 2A 10 | 	byte	$ff, $f6, $fe, $11, $16, $00, $e0, $ff, $28, $11, $ea, $e0, $ff, $20, $2a, $10
1e0b2     F0 D8 E5 0B 
1e0b6     28 22 00 FF 
1e0ba     15 04 E9 D8 
1e0be     E7 1B 3F 38 | 	byte	$f0, $d8, $e5, $0b, $28, $22, $00, $ff, $15, $04, $e9, $d8, $e7, $1b, $3f, $38
1e0c2     12 E8 D0 D7 
1e0c6     FB 10 19 15 
1e0ca     02 FF FA FB 
1e0ce     0A 15 08 F0 | 	byte	$12, $e8, $d0, $d7, $fb, $10, $19, $15, $02, $ff, $fa, $fb, $0a, $15, $08, $f0
1e0d2     05 2B 0A E0 
1e0d6     CD F7 27 3F 
1e0da     14 E8 D0 DF 
1e0de     13 27 29 10 | 	byte	$05, $2b, $0a, $e0, $cd, $f7, $27, $3f, $14, $e8, $d0, $df, $13, $27, $29, $10
1e0e2     FF 0B FD EC 
1e0e6     E0 EB 17 3F 
1e0ea     38 04 D8 E0 
1e0ee     FB 07 06 05 | 	byte	$ff, $0b, $fd, $ec, $e0, $eb, $17, $3f, $38, $04, $d8, $e0, $fb, $07, $06, $05
1e0f2     07 0D 11 0B 
1e0f6     0A 04 F0 EA 
1e0fa     15 34 10 E2 
1e0fe     DB FF 1F 32 | 	byte	$07, $0d, $11, $0b, $0a, $04, $f0, $ea, $15, $34, $10, $e2, $db, $ff, $1f, $32
1e102     10 E6 D0 EF 
1e106     23 20 14 08 
1e10a     11 20 F8 D8 
1e10e     D3 F7 2F 40 | 	byte	$10, $e6, $d0, $ef, $23, $20, $14, $08, $11, $20, $f8, $d8, $d3, $f7, $2f, $40
1e112     20 F2 E0 F1 
1e116     F9 FB 06 11 
1e11a     0A 03 FD F8 
1e11e     07 10 F9 F5 | 	byte	$20, $f2, $e0, $f1, $f9, $fb, $06, $11, $0a, $03, $fd, $f8, $07, $10, $f9, $f5
1e122     17 2B 08 E0 
1e126     D7 FB 1F 36 
1e12a     08 E0 D0 EF 
1e12e     2A 24 14 0C | 	byte	$17, $2b, $08, $e0, $d7, $fb, $1f, $36, $08, $e0, $d0, $ef, $2a, $24, $14, $0c
1e132     0D 20 00 D8 
1e136     D1 EF 2B 48 
1e13a     20 00 F0 F0 
1e13e     F0 E9 FF 1A | 	byte	$0d, $20, $00, $d8, $d1, $ef, $2b, $48, $20, $00, $f0, $f0, $f0, $e9, $ff, $1a
1e142     18 05 FC 06 
1e146     15 10 F0 DB 
1e14a     07 3C 14 D8 
1e14e     DB 03 2D 38 | 	byte	$18, $05, $fc, $06, $15, $10, $f0, $db, $07, $3c, $14, $d8, $db, $03, $2d, $38
1e152     00 D0 DB 13 
1e156     33 0A 06 12 
1e15a     20 08 E0 C4 
1e15e     EF 23 43 20 | 	byte	$00, $d0, $db, $13, $33, $0a, $06, $12, $20, $08, $e0, $c4, $ef, $23, $43, $20
1e162     F9 0A 0A F0 
1e166     E0 F3 1F 21 
1e16a     00 E9 FF 15 
1e16e     17 02 D8 DF | 	byte	$f9, $0a, $0a, $f0, $e0, $f3, $1f, $21, $00, $e9, $ff, $15, $17, $02, $d8, $df
1e172     23 39 00 C0 
1e176     DD 0F 3F 20 
1e17a     D0 DF FF 21 
1e17e     18 06 17 27 | 	byte	$23, $39, $00, $c0, $dd, $0f, $3f, $20, $d0, $df, $ff, $21, $18, $06, $17, $27
1e182     20 F8 C6 CD 
1e186     0B 18 0C 0B 
1e18a     16 23 10 E1 
1e18e     DB FF 15 13 | 	byte	$20, $f8, $c6, $cd, $0b, $18, $0c, $0b, $16, $23, $10, $e1, $db, $ff, $15, $13
1e192     01 F7 13 1A 
1e196     00 FA FC E0 
1e19a     E1 1F 32 F8 
1e19e     D2 FF 23 30 | 	byte	$01, $f7, $13, $1a, $00, $fa, $fc, $e0, $e1, $1f, $32, $f8, $d2, $ff, $23, $30
1e1a2     14 E0 EB 01 
1e1a6     00 05 20 2A 
1e1aa     06 FB F6 E2 
1e1ae     ED 07 21 20 | 	byte	$14, $e0, $eb, $01, $00, $05, $20, $2a, $06, $fb, $f6, $e2, $ed, $07, $21, $20
1e1b2     10 0C FA FF 
1e1b6     09 F8 F3 03 
1e1ba     0D 00 F7 06 
1e1be     0B 0D 0A FA | 	byte	$10, $0c, $fa, $ff, $09, $f8, $f3, $03, $0d, $00, $f7, $06, $0b, $0d, $0a, $fa
1e1c2     F7 FF 19 10 
1e1c6     EC ED FF 17 
1e1ca     1B 01 FD 06 
1e1ce     0D 04 EC F7 | 	byte	$f7, $ff, $19, $10, $ec, $ed, $ff, $17, $1b, $01, $fd, $06, $0d, $04, $ec, $f7
1e1d2     0D 17 1A 00 
1e1d6     F4 F7 FF 12 
1e1da     0E 09 05 FB 
1e1de     04 0A FB F8 | 	byte	$0d, $17, $1a, $00, $f4, $f7, $ff, $12, $0e, $09, $05, $fb, $04, $0a, $fb, $f8
1e1e2     FE FF FD 09 
1e1e6     16 12 08 04 
1e1ea     03 FF 07 12 
1e1ee     F9 EA F2 03 | 	byte	$fe, $ff, $fd, $09, $16, $12, $08, $04, $03, $ff, $07, $12, $f9, $ea, $f2, $03
1e1f2     21 12 FC 02 
1e1f6     08 10 02 F6 
1e1fa     11 15 0D 0A 
1e1fe     F2 F3 FE FA | 	byte	$21, $12, $fc, $02, $08, $10, $02, $f6, $11, $15, $0d, $0a, $f2, $f3, $fe, $fa
1e202     05 FC 06 17 
1e206     0D 12 02 FF 
1e20a     06 01 06 FC 
1e20e     FF 03 F7 FF | 	byte	$05, $fc, $06, $17, $0d, $12, $02, $ff, $06, $01, $06, $fc, $ff, $03, $f7, $ff
1e212     0B 16 06 FF 
1e216     14 04 EA EE 
1e21a     F7 0E 10 02 
1e21e     07 02 FB FF | 	byte	$0b, $16, $06, $ff, $14, $04, $ea, $ee, $f7, $0e, $10, $02, $07, $02, $fb, $ff
1e222     0B 1D 10 08 
1e226     06 F7 F7 F2 
1e22a     F1 FB 02 10 
1e22e     11 0D 06 00 | 	byte	$0b, $1d, $10, $08, $06, $f7, $f7, $f2, $f1, $fb, $02, $10, $11, $0d, $06, $00
1e232     07 06 F9 FB 
1e236     FF 0A 04 F1 
1e23a     FF 15 1A 08 
1e23e     E9 F7 16 10 | 	byte	$07, $06, $f9, $fb, $ff, $0a, $04, $f1, $ff, $15, $1a, $08, $e9, $f7, $16, $10
1e242     F0 F0 0A 19 
1e246     10 FA FA 05 
1e24a     0B 0C 0A 10 
1e24e     0A 05 FC F4 | 	byte	$f0, $f0, $0a, $19, $10, $fa, $fa, $05, $0b, $0c, $0a, $10, $0a, $05, $fc, $f4
1e252     F7 FE FE 07 
1e256     0B 10 19 11 
1e25a     07 06 02 04 
1e25e     00 F7 FF FD | 	byte	$f7, $fe, $fe, $07, $0b, $10, $19, $11, $07, $06, $02, $04, $00, $f7, $ff, $fd
1e262     FF FC FF 1B 
1e266     12 10 08 F7 
1e26a     FF 0F 06 E8 
1e26e     ED FF 09 1B | 	byte	$ff, $fc, $ff, $1b, $12, $10, $08, $f7, $ff, $0f, $06, $e8, $ed, $ff, $09, $1b
1e272     10 05 0D 02 
1e276     FC F9 0B 20 
1e27a     0C 04 F0 ED 
1e27e     00 F9 03 0A | 	byte	$10, $05, $0d, $02, $fc, $f9, $0b, $20, $0c, $04, $f0, $ed, $00, $f9, $03, $0a
1e282     12 16 02 05 
1e286     04 0B 14 01 
1e28a     FE FA F7 FE 
1e28e     F9 07 11 09 | 	byte	$12, $16, $02, $05, $04, $0b, $14, $01, $fe, $fa, $f7, $fe, $f9, $07, $11, $09
1e292     06 FE F8 F3 
1e296     07 18 F8 F7 
1e29a     05 0C 14 01 
1e29e     FF 0B 01 F6 | 	byte	$06, $fe, $f8, $f3, $07, $18, $f8, $f7, $05, $0c, $14, $01, $ff, $0b, $01, $f6
1e2a2     F0 FF 1A 10 
1e2a6     FE F5 F7 FF 
1e2aa     FA 01 0A 10 
1e2ae     1B 10 09 0D | 	byte	$f0, $ff, $1a, $10, $fe, $f5, $f7, $ff, $fa, $01, $0a, $10, $1b, $10, $09, $0d
1e2b2     00 EC E9 07 
1e2b6     20 09 F8 F7 
1e2ba     FF 10 08 03 
1e2be     0D 10 FA E3 | 	byte	$00, $ec, $e9, $07, $20, $09, $f8, $f7, $ff, $10, $08, $03, $0d, $10, $fa, $e3
1e2c2     FF 32 10 D7 
1e2c6     F7 33 24 E8 
1e2ca     DF 27 2A E4 
1e2ce     DB 1E 2A F4 | 	byte	$ff, $32, $10, $d7, $f7, $33, $24, $e8, $df, $27, $2a, $e4, $db, $1e, $2a, $f4
1e2d2     E1 17 20 E0 
1e2d6     D7 17 31 08 
1e2da     F1 17 28 F8 
1e2de     EE 15 18 E2 | 	byte	$e1, $17, $20, $e0, $d7, $17, $31, $08, $f1, $17, $28, $f8, $ee, $15, $18, $e2
1e2e2     D5 0B 20 02 
1e2e6     03 29 20 E8 
1e2ea     E6 03 09 E0 
1e2ee     E7 2F 34 E4 | 	byte	$d5, $0b, $20, $02, $03, $29, $20, $e8, $e6, $03, $09, $e0, $e7, $2f, $34, $e4
1e2f2     E3 2F 20 E2 
1e2f6     FD 2D 10 CA 
1e2fa     E7 2B F8 F3 
1e2fe     17 31 00 C0 | 	byte	$e3, $2f, $20, $e2, $fd, $2d, $10, $ca, $e7, $2b, $f8, $f3, $17, $31, $00, $c0
1e302     FF 10 E0 FB 
1e306     3F 30 E2 F5 
1e30a     25 F0 C7 07 
1e30e     1B F8 07 30 | 	byte	$ff, $10, $e0, $fb, $3f, $30, $e2, $f5, $25, $f0, $c7, $07, $1b, $f8, $07, $30
1e312     00 DA 0F 34 
1e316     00 D7 FF 19 
1e31a     E6 E7 25 2A 
1e31e     E4 E7 37 20 | 	byte	$00, $da, $0f, $34, $00, $d7, $ff, $19, $e6, $e7, $25, $2a, $e4, $e7, $37, $20
1e322     E9 07 25 04 
1e326     D0 EF 32 00 
1e32a     F3 27 2C EA 
1e32e     E2 07 0A E4 | 	byte	$e9, $07, $25, $04, $d0, $ef, $32, $00, $f3, $27, $2c, $ea, $e2, $07, $0a, $e4
1e332     FF 31 00 FB 
1e336     17 22 F0 D3 
1e33a     07 06 F0 17 
1e33e     31 10 F0 0F | 	byte	$ff, $31, $00, $fb, $17, $22, $f0, $d3, $07, $06, $f0, $17, $31, $10, $f0, $0f
1e342     10 FB F7 FC 
1e346     FF FB F2 0F 
1e34a     38 10 D0 0B 
1e34e     2C E2 FD 30 | 	byte	$10, $fb, $f7, $fc, $ff, $fb, $f2, $0f, $38, $10, $d0, $0b, $2c, $e2, $fd, $30
1e352     10 E8 EB 20 
1e356     00 F2 2B 12 
1e35a     ED 0A F8 EB 
1e35e     EA 07 20 05 | 	byte	$10, $e8, $eb, $20, $00, $f2, $2b, $12, $ed, $0a, $f8, $eb, $ea, $07, $20, $05
1e362     17 18 FD 00 
1e366     F0 E5 FB FD 
1e36a     FA 09 17 10 
1e36e     05 09 0C FC | 	byte	$17, $18, $fd, $00, $f0, $e5, $fb, $fd, $fa, $09, $17, $10, $05, $09, $0c, $fc
1e372     EB F3 F9 FF 
1e376     FA 17 3B 04 
1e37a     D3 1B 20 E3 
1e37e     0B 30 00 F9 | 	byte	$eb, $f3, $f9, $ff, $fa, $17, $3b, $04, $d3, $1b, $20, $e3, $0b, $30, $00, $f9
1e382     01 05 F5 E7 
1e386     1F 30 F4 FF 
1e38a     09 E7 FF 05 
1e38e     07 13 05 15 | 	byte	$01, $05, $f5, $e7, $1f, $30, $f4, $ff, $09, $e7, $ff, $05, $07, $13, $05, $15
1e392     0C F7 13 04 
1e396     E4 FF 0C 01 
1e39a     00 03 11 08 
1e39e     FE 0D 08 FD | 	byte	$0c, $f7, $13, $04, $e4, $ff, $0c, $01, $00, $03, $11, $08, $fe, $0d, $08, $fd
1e3a2     0B 04 F9 F8 
1e3a6     FE 07 11 20 
1e3aa     08 FB 16 00 
1e3ae     F7 13 08 F5 | 	byte	$0b, $04, $f9, $f8, $fe, $07, $11, $20, $08, $fb, $16, $00, $f7, $13, $08, $f5
1e3b2     F5 FD 02 FF 
1e3b6     0B 23 08 FE 
1e3ba     00 FA F7 FF 
1e3be     0F 06 FA FC | 	byte	$f5, $fd, $02, $ff, $0b, $23, $08, $fe, $00, $fa, $f7, $ff, $0f, $06, $fa, $fc
1e3c2     09 00 FD 08 
1e3c6     01 F6 F8 FB 
1e3ca     FF 02 FC 08 
1e3ce     13 0E 08 0B | 	byte	$09, $00, $fd, $08, $01, $f6, $f8, $fb, $ff, $02, $fc, $08, $13, $0e, $08, $0b
1e3d2     04 FF 0A 00 
1e3d6     F8 F9 FF 0A 
1e3da     0B 08 FD F7 
1e3de     0B 15 0B 0D | 	byte	$04, $ff, $0a, $00, $f8, $f9, $ff, $0a, $0b, $08, $fd, $f7, $0b, $15, $0b, $0d
1e3e2     0B 00 04 07 
1e3e6     03 02 FF FD 
1e3ea     F9 03 0D 09 
1e3ee     02 04 FF 03 | 	byte	$0b, $00, $04, $07, $03, $02, $ff, $fd, $f9, $03, $0d, $09, $02, $04, $ff, $03
1e3f2     08 06 00 01 
1e3f6     03 FE FF 0B 
1e3fa     14 04 FA FB 
1e3fe     FB 0D 16 0A | 	byte	$08, $06, $00, $01, $03, $fe, $ff, $0b, $14, $04, $fa, $fb, $fb, $0d, $16, $0a
1e402     03 00 FC F9 
1e406     01 0D 0D 04 
1e40a     02 12 0A FE 
1e40e     05 05 FF FA | 	byte	$03, $00, $fc, $f9, $01, $0d, $0d, $04, $02, $12, $0a, $fe, $05, $05, $ff, $fa
1e412     03 0D 06 FF 
1e416     07 01 F7 FE 
1e41a     0B 0A 06 0A 
1e41e     07 03 F9 FF | 	byte	$03, $0d, $06, $ff, $07, $01, $f7, $fe, $0b, $0a, $06, $0a, $07, $03, $f9, $ff
1e422     0C 07 01 FF 
1e426     FF FB FF 0A 
1e42a     06 03 0B 0D 
1e42e     02 F9 F5 FF | 	byte	$0c, $07, $01, $ff, $ff, $fb, $ff, $0a, $06, $03, $0b, $0d, $02, $f9, $f5, $ff
1e432     09 03 FF 08 
1e436     0A 01 FF 10 
1e43a     02 F7 FF 01 
1e43e     00 FF 09 0D | 	byte	$09, $03, $ff, $08, $0a, $01, $ff, $10, $02, $f7, $ff, $01, $00, $ff, $09, $0d
1e442     02 09 08 FF 
1e446     07 0C 08 00 
1e44a     FC FF 04 07 
1e44e     0B 10 08 08 | 	byte	$02, $09, $08, $ff, $07, $0c, $08, $00, $fc, $ff, $04, $07, $0b, $10, $08, $08
1e452     04 FF FC FE 
1e456     03 06 06 00 
1e45a     01 FF FF 0B 
1e45e     10 06 FE FE | 	byte	$04, $ff, $fc, $fe, $03, $06, $06, $00, $01, $ff, $ff, $0b, $10, $06, $fe, $fe
1e462     02 FC 06 07 
1e466     FF 02 00 07 
1e46a     19 0C 00 02 
1e46e     01 04 FF 00 | 	byte	$02, $fc, $06, $07, $ff, $02, $00, $07, $19, $0c, $00, $02, $01, $04, $ff, $00
1e472     03 05 FD 07 
1e476     0A 01 FF 03 
1e47a     08 0D 09 06 
1e47e     00 F9 FF 0A | 	byte	$03, $05, $fd, $07, $0a, $01, $ff, $03, $08, $0d, $09, $06, $00, $f9, $ff, $0a
1e482     08 00 F6 03 
1e486     10 10 07 00 
1e48a     FC FE 02 05 
1e48e     04 04 03 FF | 	byte	$08, $00, $f6, $03, $10, $10, $07, $00, $fc, $fe, $02, $05, $04, $04, $03, $ff
1e492     FE FF 05 09 
1e496     04 02 01 FF 
1e49a     00 03 0B 06 
1e49e     03 FD FD 05 | 	byte	$fe, $ff, $05, $09, $04, $02, $01, $ff, $00, $03, $0b, $06, $03, $fd, $fd, $05
1e4a2     0A 06 05 06 
1e4a6     01 00 FE 0B 
1e4aa     04 02 08 02 
1e4ae     FB FF 0D 06 | 	byte	$0a, $06, $05, $06, $01, $00, $fe, $0b, $04, $02, $08, $02, $fb, $ff, $0d, $06
1e4b2     0F 10 03 04 
1e4b6     FF 07 06 05 
1e4ba     04 04 03 FE 
1e4be     01 FF 05 0B | 	byte	$0f, $10, $03, $04, $ff, $07, $06, $05, $04, $04, $03, $fe, $01, $ff, $05, $0b
1e4c2     09 FE FD 07 
1e4c6     10 04 F5 FB 
1e4ca     FF 0A 0D 08 
1e4ce     00 00 07 08 | 	byte	$09, $fe, $fd, $07, $10, $04, $f5, $fb, $ff, $0a, $0d, $08, $00, $00, $07, $08
1e4d2     0C 0A 00 FB 
1e4d6     07 06 FB 07 
1e4da     12 03 F8 FB 
1e4de     07 0D 0E 0C | 	byte	$0c, $0a, $00, $fb, $07, $06, $fb, $07, $12, $03, $f8, $fb, $07, $0d, $0e, $0c
1e4e2     00 F6 FF 04 
1e4e6     04 02 04 05 
1e4ea     08 0B 0B 08 
1e4ee     00 F8 FD 03 | 	byte	$00, $f6, $ff, $04, $04, $02, $04, $05, $08, $0b, $0b, $08, $00, $f8, $fd, $03
1e4f2     FC F9 0B 08 
1e4f6     F8 FB 0E 0C 
1e4fa     05 0D 08 F6 
1e4fe     F8 01 08 0D | 	byte	$fc, $f9, $0b, $08, $f8, $fb, $0e, $0c, $05, $0d, $08, $f6, $f8, $01, $08, $0d
1e502     04 F5 F3 FF 
1e506     09 0C 00 02 
1e50a     0B 08 03 09 
1e50e     10 00 FD 07 | 	byte	$04, $f5, $f3, $ff, $09, $0c, $00, $02, $0b, $08, $03, $09, $10, $00, $fd, $07
1e512     04 FB FE 0B 
1e516     09 04 0A 03 
1e51a     FB FB 01 06 
1e51e     0D 10 00 06 | 	byte	$04, $fb, $fe, $0b, $09, $04, $0a, $03, $fb, $fb, $01, $06, $0d, $10, $00, $06
1e522     08 02 08 00 
1e526     FD 01 05 0A 
1e52a     FD F4 03 12 
1e52e     0C 03 FE 07 | 	byte	$08, $02, $08, $00, $fd, $01, $05, $0a, $fd, $f4, $03, $12, $0c, $03, $fe, $07
1e532     08 FC F7 07 
1e536     17 0A 01 F9 
1e53a     03 19 0A 02 
1e53e     FA FD 0A 02 | 	byte	$08, $fc, $f7, $07, $17, $0a, $01, $f9, $03, $19, $0a, $02, $fa, $fd, $0a, $02
1e542     00 06 0D 0C 
1e546     05 FA FD 0D 
1e54a     0B F8 F7 07 
1e54e     10 06 FE FF | 	byte	$00, $06, $0d, $0c, $05, $fa, $fd, $0d, $0b, $f8, $f7, $07, $10, $06, $fe, $ff
1e552     05 09 FF F6 
1e556     03 11 08 05 
1e55a     06 F0 E2 0F 
1e55e     39 10 D0 D7 | 	byte	$05, $09, $ff, $f6, $03, $11, $08, $05, $06, $f0, $e2, $0f, $39, $10, $d0, $d7
1e562     1F 38 00 D3 
1e566     FB 29 20 F4 
1e56a     F2 03 1D 14 
1e56e     F8 E7 FB 12 | 	byte	$1f, $38, $00, $d3, $fb, $29, $20, $f4, $f2, $03, $1d, $14, $f8, $e7, $fb, $12
1e572     10 06 07 0A 
1e576     04 03 09 06 
1e57a     05 03 03 04 
1e57e     0C 09 FE FF | 	byte	$10, $06, $07, $0a, $04, $03, $09, $06, $05, $03, $03, $04, $0c, $09, $fe, $ff
1e582     04 05 03 06 
1e586     0B 0C 06 07 
1e58a     F8 ED FD 03 
1e58e     0D 16 00 EA | 	byte	$04, $05, $03, $06, $0b, $0c, $06, $07, $f8, $ed, $fd, $03, $0d, $16, $00, $ea
1e592     07 29 10 E0 
1e596     E2 13 31 10 
1e59a     E2 ED 1B 25 
1e59e     01 E4 F6 0C | 	byte	$07, $29, $10, $e0, $e2, $13, $31, $10, $e2, $ed, $1b, $25, $01, $e4, $f6, $0c
1e5a2     0A FE FF 0C 
1e5a6     05 01 04 07 
1e5aa     0D 00 F9 07 
1e5ae     01 FA 07 05 | 	byte	$0a, $fe, $ff, $0c, $05, $01, $04, $07, $0d, $00, $f9, $07, $01, $fa, $07, $05
1e5b2     05 00 01 06 
1e5b6     09 03 FE 04 
1e5ba     08 03 FC FB 
1e5be     03 08 F1 FD | 	byte	$05, $00, $01, $06, $09, $03, $fe, $04, $08, $03, $fc, $fb, $03, $08, $f1, $fd
1e5c2     00 F9 15 13 
1e5c6     09 07 FA F9 
1e5ca     19 04 D2 ED 
1e5ce     27 29 00 E7 | 	byte	$00, $f9, $15, $13, $09, $07, $fa, $f9, $19, $04, $d2, $ed, $27, $29, $00, $e7
1e5d2     06 04 FF 29 
1e5d6     10 D5 FB 3B 
1e5da     30 08 E0 CE 
1e5de     13 2C F2 E7 | 	byte	$06, $04, $ff, $29, $10, $d5, $fb, $3b, $30, $08, $e0, $ce, $13, $2c, $f2, $e7
1e5e2     11 21 11 F2 
1e5e6     EF 13 20 00 
1e5ea     F7 11 14 05 
1e5ee     17 10 FF F7 | 	byte	$11, $21, $11, $f2, $ef, $13, $20, $00, $f7, $11, $14, $05, $17, $10, $ff, $f7
1e5f2     F1 FF FC E2 
1e5f6     F5 21 2C 0C 
1e5fa     07 16 15 04 
1e5fe     E5 ED 0E 12 | 	byte	$f1, $ff, $fc, $e2, $f5, $21, $2c, $0c, $07, $16, $15, $04, $e5, $ed, $0e, $12
1e602     00 E0 E7 2F 
1e606     2C E2 D3 1F 
1e60a     48 18 F8 C5 
1e60e     FB 32 00 CA | 	byte	$00, $e0, $e7, $2f, $2c, $e2, $d3, $1f, $48, $18, $f8, $c5, $fb, $32, $00, $ca
1e612     F7 28 20 12 
1e616     E8 C7 17 28 
1e61a     F4 F1 17 2A 
1e61e     1A 00 E0 ED | 	byte	$f7, $28, $20, $12, $e8, $c7, $17, $28, $f4, $f1, $17, $2a, $1a, $00, $e0, $ed
1e622     0A E4 D9 F9 
1e626     0F 23 18 00 
1e62a     05 27 28 00 
1e62e     EB EC E5 E9 | 	byte	$0a, $e4, $d9, $f9, $0f, $23, $18, $00, $05, $27, $28, $00, $eb, $ec, $e5, $e9
1e632     D0 D3 2F 58 
1e636     24 E2 FF 3F 
1e63a     38 F8 C0 C5 
1e63e     0F 2C 00 D3 | 	byte	$d0, $d3, $2f, $58, $24, $e2, $ff, $3f, $38, $f8, $c0, $c5, $0f, $2c, $00, $d3
1e642     FB 37 30 06 
1e646     E8 D4 FF 3D 
1e64a     22 E4 EF 2B 
1e64e     28 06 06 F4 | 	byte	$fb, $37, $30, $06, $e8, $d4, $ff, $3d, $22, $e4, $ef, $2b, $28, $06, $06, $f4
1e652     D8 EB 13 15 
1e656     02 FF FE 0B 
1e65a     1D 18 19 16 
1e65e     F0 C0 DF 01 | 	byte	$d8, $eb, $13, $15, $02, $ff, $fe, $0b, $1d, $18, $19, $16, $f0, $c0, $df, $01
1e662     FF 3B 60 20 
1e666     D0 E3 1F 34 
1e66a     00 D7 DA F5 
1e66e     1B 19 EC FB | 	byte	$ff, $3b, $60, $20, $d0, $e3, $1f, $34, $00, $d7, $da, $f5, $1b, $19, $ec, $fb
1e672     2B 38 04 D8 
1e676     DA FB 23 28 
1e67a     00 E9 0B 31 
1e67e     10 E0 E7 F4 | 	byte	$2b, $38, $04, $d8, $da, $fb, $23, $28, $00, $e9, $0b, $31, $10, $e0, $e7, $f4
1e682     F5 07 10 FE 
1e686     F7 17 22 13 
1e68a     0A 05 EC D4 
1e68e     D7 ED 0B 1C | 	byte	$f5, $07, $10, $fe, $f7, $17, $22, $13, $0a, $05, $ec, $d4, $d7, $ed, $0b, $1c
1e692     32 40 10 C4 
1e696     D5 0F 3E 10 
1e69a     C4 D7 15 10 
1e69e     07 0D 04 0B | 	byte	$32, $40, $10, $c4, $d5, $0f, $3e, $10, $c4, $d7, $15, $10, $07, $0d, $04, $0b
1e6a2     25 18 E8 C5 
1e6a6     FF 32 20 06 
1e6aa     01 07 10 18 
1e6ae     01 D0 CD FF | 	byte	$25, $18, $e8, $c5, $ff, $32, $20, $06, $01, $07, $10, $18, $01, $d0, $cd, $ff
1e6b2     0A 06 11 1A 
1e6b6     1B 1D 1C 06 
1e6ba     F2 FC F8 E0 
1e6be     DD 0F 26 15 | 	byte	$0a, $06, $11, $1a, $1b, $1d, $1c, $06, $f2, $fc, $f8, $e0, $dd, $0f, $26, $15
1e6c2     23 38 00 C2 
1e6c6     DF 1F 34 00 
1e6ca     C3 F7 24 02 
1e6ce     FF 0C 06 13 | 	byte	$23, $38, $00, $c2, $df, $1f, $34, $00, $c3, $f7, $24, $02, $ff, $0c, $06, $13
1e6d2     29 10 D0 C7 
1e6d6     17 35 0C FB 
1e6da     11 1A 08 FA 
1e6de     EA DA F7 0D | 	byte	$29, $10, $d0, $c7, $17, $35, $0c, $fb, $11, $1a, $08, $fa, $ea, $da, $f7, $0d
1e6e2     04 FA 12 20 
1e6e6     0A 04 08 00 
1e6ea     F5 EB E2 F3 
1e6ee     2B 34 08 0B | 	byte	$04, $fa, $12, $20, $0a, $04, $08, $00, $f5, $eb, $e2, $f3, $2b, $34, $08, $0b
1e6f2     24 F8 BD DF 
1e6f6     1F 32 F4 BF 
1e6fa     0B 36 00 ED 
1e6fe     11 11 13 20 | 	byte	$24, $f8, $bd, $df, $1f, $32, $f4, $bf, $0b, $36, $00, $ed, $11, $11, $13, $20
1e702     02 C9 D3 2B 
1e706     34 00 F5 1B 
1e70a     2C 04 E3 F0 
1e70e     F0 E9 FC 0C | 	byte	$02, $c9, $d3, $2b, $34, $00, $f5, $1b, $2c, $04, $e3, $f0, $f0, $e9, $fc, $0c
1e712     11 17 23 20 
1e716     09 03 FB ED 
1e71a     EC F1 FF 1F 
1e71e     2D 10 17 25 | 	byte	$11, $17, $23, $20, $09, $03, $fb, $ed, $ec, $f1, $ff, $1f, $2d, $10, $17, $25
1e722     F0 BB E7 2F 
1e726     38 F0 C6 17 
1e72a     30 F6 F1 13 
1e72e     18 21 18 EA | 	byte	$f0, $bb, $e7, $2f, $38, $f0, $c6, $17, $30, $f6, $f1, $13, $18, $21, $18, $ea
1e732     BB EF 33 10 
1e736     EE 12 39 20 
1e73a     E2 E0 F0 F1 
1e73e     F9 06 19 20 | 	byte	$bb, $ef, $33, $10, $ee, $12, $39, $20, $e2, $e0, $f0, $f1, $f9, $06, $19, $20
1e742     10 08 0C 0C 
1e746     F4 DC E9 FD 
1e74a     0B 1C 10 09 
1e74e     33 20 D0 BF | 	byte	$10, $08, $0c, $0c, $f4, $dc, $e9, $fd, $0b, $1c, $10, $09, $33, $20, $d0, $bf
1e752     FF 3F 20 CA 
1e756     DF 29 08 D7 
1e75a     F7 17 21 25 
1e75e     00 C4 DB 25 | 	byte	$ff, $3f, $20, $ca, $df, $29, $08, $d7, $f7, $17, $21, $25, $00, $c4, $db, $25
1e762     20 F9 11 37 
1e766     20 E8 DD F0 
1e76a     F0 EA F3 13 
1e76e     39 28 04 07 | 	byte	$20, $f9, $11, $37, $20, $e8, $dd, $f0, $f0, $ea, $f3, $13, $39, $28, $04, $07
1e772     15 00 DA E3 
1e776     FF 0B 26 24 
1e77a     FC 13 26 F8 
1e77e     C9 F3 37 30 | 	byte	$15, $00, $da, $e3, $ff, $0b, $26, $24, $fc, $13, $26, $f8, $c9, $f3, $37, $30
1e782     E0 CB 1D 22 
1e786     F1 FB 15 23 
1e78a     2E 00 C2 F7 
1e78e     20 04 F0 0F | 	byte	$e0, $cb, $1d, $22, $f1, $fb, $15, $23, $2e, $00, $c2, $f7, $20, $04, $f0, $0f
1e792     3B 2B 09 E4 
1e796     DB E6 E5 EE 
1e79a     17 38 14 09 
1e79e     21 04 E0 EB | 	byte	$3b, $2b, $09, $e4, $db, $e6, $e5, $ee, $17, $38, $14, $09, $21, $04, $e0, $eb
1e7a2     F6 F4 12 2D 
1e7a6     08 0B 24 F8 
1e7aa     C6 EF 37 24 
1e7ae     D8 E3 25 18 | 	byte	$f6, $f4, $12, $2d, $08, $0b, $24, $f8, $c6, $ef, $37, $24, $d8, $e3, $25, $18
1e7b2     EA EF 0B 31 
1e7b6     30 E0 CD FF 
1e7ba     00 E5 FD 2A 
1e7be     3D 24 E8 D3 | 	byte	$ea, $ef, $0b, $31, $30, $e0, $cd, $ff, $00, $e5, $fd, $2a, $3d, $24, $e8, $d3
1e7c2     F7 FB DC F7 
1e7c6     37 22 00 0D 
1e7ca     12 F0 DB EB 
1e7ce     05 17 14 08 | 	byte	$f7, $fb, $dc, $f7, $37, $22, $00, $0d, $12, $f0, $db, $eb, $05, $17, $14, $08
1e7d2     0E 33 18 D0 
1e7d6     CB 0B 3A 10 
1e7da     E0 FF 2C 10 
1e7de     E0 EF 17 3D | 	byte	$0e, $33, $18, $d0, $cb, $0b, $3a, $10, $e0, $ff, $2c, $10, $e0, $ef, $17, $3d
1e7e2     08 C0 EF 12 
1e7e6     00 E2 0B 3F 
1e7ea     50 00 DB FF 
1e7ee     FA D0 CB 1F | 	byte	$08, $c0, $ef, $12, $00, $e2, $0b, $3f, $50, $00, $db, $ff, $fa, $d0, $cb, $1f
1e7f2     3C 09 0A 2B 
1e7f6     10 C8 D3 0F 
1e7fa     10 03 10 07 
1e7fe     21 20 E0 C7 | 	byte	$3c, $09, $0a, $2b, $10, $c8, $d3, $0f, $10, $03, $10, $07, $21, $20, $e0, $c7
1e802     0B 42 10 D9 
1e806     FF 21 F8 D3 
1e80a     F7 37 28 D4 
1e80e     F3 1D 04 DC | 	byte	$0b, $42, $10, $d9, $ff, $21, $f8, $d3, $f7, $37, $28, $d4, $f3, $1d, $04, $dc
1e812     F7 33 38 F0 
1e816     E7 11 08 E2 
1e81a     E2 0F 37 10 
1e81e     F4 09 FA D5 | 	byte	$f7, $33, $38, $f0, $e7, $11, $08, $e2, $e2, $0f, $37, $10, $f4, $09, $fa, $d5
1e822     EB 1B 22 00 
1e826     F7 05 F8 0F 
1e82a     24 F0 D5 0F 
1e82e     38 04 E7 0F | 	byte	$eb, $1b, $22, $00, $f7, $05, $f8, $0f, $24, $f0, $d5, $0f, $38, $04, $e7, $0f
1e832     20 F4 E3 07 
1e836     3A 10 E1 07 
1e83a     10 F0 DA 0B 
1e83e     4D 2A F0 FF | 	byte	$20, $f4, $e3, $07, $3a, $10, $e1, $07, $10, $f0, $da, $0b, $4d, $2a, $f0, $ff
1e842     0D F5 E5 F5 
1e846     0D 23 25 10 
1e84a     EC E7 F5 FB 
1e84e     07 1D 10 F3 | 	byte	$0d, $f5, $e5, $f5, $0d, $23, $25, $10, $ec, $e7, $f5, $fb, $07, $1d, $10, $f3
1e852     FB F8 FA 2F 
1e856     20 D0 DF 37 
1e85a     32 D8 ED 15 
1e85e     00 DB FF 49 | 	byte	$fb, $f8, $fa, $2f, $20, $d0, $df, $37, $32, $d8, $ed, $15, $00, $db, $ff, $49
1e862     20 E5 11 0C 
1e866     E4 CE 07 3E 
1e86a     10 0D 22 F4 
1e86e     D5 FF 10 F3 | 	byte	$20, $e5, $11, $0c, $e4, $ce, $07, $3e, $10, $0d, $22, $f4, $d5, $ff, $10, $f3
1e872     07 36 10 DC 
1e876     F7 FE EC 07 
1e87a     2A 08 EB 03 
1e87e     F0 E7 23 28 | 	byte	$07, $36, $10, $dc, $f7, $fe, $ec, $07, $2a, $08, $eb, $03, $f0, $e7, $23, $28
1e882     E0 E7 2B 10 
1e886     D4 0F 28 F8 
1e88a     D6 FF 3F 00 
1e88e     F1 13 FC E0 | 	byte	$e0, $e7, $2b, $10, $d4, $0f, $28, $f8, $d6, $ff, $3f, $00, $f1, $13, $fc, $e0
1e892     F3 27 18 03 
1e896     2A 20 D9 F3 
1e89a     11 F9 E5 0F 
1e89e     3D 04 EF 09 | 	byte	$f3, $27, $18, $03, $2a, $20, $d9, $f3, $11, $f9, $e5, $0f, $3d, $04, $ef, $09
1e8a2     E4 DB 0B 29 
1e8a6     0A FD 1A 00 
1e8aa     DA 0F 37 F4 
1e8ae     CB 0F 3C E8 | 	byte	$e4, $db, $0b, $29, $0a, $fd, $1a, $00, $da, $0f, $37, $f4, $cb, $0f, $3c, $e8
1e8b2     FF 20 00 D7 
1e8b6     FF 49 10 F7 
1e8ba     20 00 CC FF 
1e8be     12 04 0D 33 | 	byte	$ff, $20, $00, $d7, $ff, $49, $10, $f7, $20, $00, $cc, $ff, $12, $04, $0d, $33
1e8c2     10 D4 FF 00 
1e8c6     E5 FD 27 28 
1e8ca     FC FF 00 E0 
1e8ce     FF 0A 03 0B | 	byte	$10, $d4, $ff, $00, $e5, $fd, $27, $28, $fc, $ff, $00, $e0, $ff, $0a, $03, $0b
1e8d2     05 00 E9 ED 
1e8d6     27 20 D4 DF 
1e8da     2D 08 F3 30 
1e8de     20 E0 EE 19 | 	byte	$05, $00, $e9, $ed, $27, $20, $d4, $df, $2d, $08, $f3, $30, $20, $e0, $ee, $19
1e8e2     10 FF 25 0A 
1e8e6     C8 EF FA F1 
1e8ea     0F 26 20 01 
1e8ee     06 FC E6 FF | 	byte	$10, $ff, $25, $0a, $c8, $ef, $fa, $f1, $0f, $26, $20, $01, $06, $fc, $e6, $ff
1e8f2     0A 15 1B 00 
1e8f6     F9 F2 F5 FB 
1e8fa     FF 1E 10 FF 
1e8fe     06 EC FD 2D | 	byte	$0a, $15, $1b, $00, $f9, $f2, $f5, $fb, $ff, $1e, $10, $ff, $06, $ec, $fd, $2d
1e902     10 DA FB 37 
1e906     00 F3 22 08 
1e90a     E3 FF 10 FD 
1e90e     0B 37 10 D3 | 	byte	$10, $da, $fb, $37, $00, $f3, $22, $08, $e3, $ff, $10, $fd, $0b, $37, $10, $d3
1e912     FF 00 ED 1B 
1e916     28 05 FC 09 
1e91a     00 E2 FF F1 
1e91e     FF 3B 10 FD | 	byte	$ff, $00, $ed, $1b, $28, $05, $fc, $09, $00, $e2, $ff, $f1, $ff, $3b, $10, $fd
1e922     08 EC EB FF 
1e926     24 08 FC 0A 
1e92a     E4 F3 35 20 
1e92e     D0 F7 3F F8 | 	byte	$08, $ec, $eb, $ff, $24, $08, $fc, $0a, $e4, $f3, $35, $20, $d0, $f7, $3f, $f8
1e932     FF 28 F0 D3 
1e936     13 06 05 27 
1e93a     30 E4 DF 0C 
1e93e     EA FF 37 10 | 	byte	$ff, $28, $f0, $d3, $13, $06, $05, $27, $30, $e4, $df, $0c, $ea, $ff, $37, $10
1e942     09 10 00 D8 
1e946     EB 0C F0 0F 
1e94a     24 EC FF 08 
1e94e     EC F3 07 0C | 	byte	$09, $10, $00, $d8, $eb, $0c, $f0, $0f, $24, $ec, $ff, $08, $ec, $f3, $07, $0c
1e952     F7 07 18 FC 
1e956     F6 23 20 D9 
1e95a     EB 35 00 F7 
1e95e     26 F8 D3 0F | 	byte	$f7, $07, $18, $fc, $f6, $23, $20, $d9, $eb, $35, $00, $f7, $26, $f8, $d3, $0f
1e962     14 0A 17 2B 
1e966     00 D3 FF F5 
1e96a     EB 1F 25 15 
1e96e     1B 0C EA D7 | 	byte	$14, $0a, $17, $2b, $00, $d3, $ff, $f5, $eb, $1f, $25, $15, $1b, $0c, $ea, $d7
1e972     FB FC EB 1B 
1e976     26 04 13 05 
1e97a     E0 E3 FF 1A 
1e97e     1B 20 08 E4 | 	byte	$fb, $fc, $eb, $1b, $26, $04, $13, $05, $e0, $e3, $ff, $1a, $1b, $20, $08, $e4
1e982     ED 1F 2C E9 
1e986     E3 2F 10 E3 
1e98a     22 10 D1 FF 
1e98e     18 07 13 2C | 	byte	$ed, $1f, $2c, $e9, $e3, $2f, $10, $e3, $22, $10, $d1, $ff, $18, $07, $13, $2c
1e992     00 D1 FD F8 
1e996     F1 2B 30 0C 
1e99a     10 00 E8 D9 
1e99e     FF 00 F7 25 | 	byte	$00, $d1, $fd, $f8, $f1, $2b, $30, $0c, $10, $00, $e8, $d9, $ff, $00, $f7, $25
1e9a2     18 FE 07 F2 
1e9a6     E7 03 18 0B 
1e9aa     05 14 FB EB 
1e9ae     F7 25 34 E2 | 	byte	$18, $fe, $07, $f2, $e7, $03, $18, $0b, $05, $14, $fb, $eb, $f7, $25, $34, $e2
1e9b2     CF 27 20 E1 
1e9b6     1B 08 D6 FF 
1e9ba     24 0A 0B 26 
1e9be     00 C9 FF 00 | 	byte	$cf, $27, $20, $e1, $1b, $08, $d6, $ff, $24, $0a, $0b, $26, $00, $c9, $ff, $00
1e9c2     F5 2B 30 10 
1e9c6     07 FC E2 D3 
1e9ca     FF 12 FF 1B 
1e9ce     2A 00 F7 01 | 	byte	$f5, $2b, $30, $10, $07, $fc, $e2, $d3, $ff, $12, $ff, $1b, $2a, $00, $f7, $01
1e9d2     F8 F3 0F 22 
1e9d6     06 05 00 F0 
1e9da     F7 FB 27 30 
1e9de     E4 CD 1F 28 | 	byte	$f8, $f3, $0f, $22, $06, $05, $00, $f0, $f7, $fb, $27, $30, $e4, $cd, $1f, $28
1e9e2     ED 1F 08 D0 
1e9e6     EF 26 14 0B 
1e9ea     22 08 C9 F7 
1e9ee     00 F3 1F 32 | 	byte	$ed, $1f, $08, $d0, $ef, $26, $14, $0b, $22, $08, $c9, $f7, $00, $f3, $1f, $32
1e9f2     12 FC FB F0 
1e9f6     D3 FF 14 FC 
1e9fa     19 18 00 F2 
1e9fe     FD 00 F5 25 | 	byte	$12, $fc, $fb, $f0, $d3, $ff, $14, $fc, $19, $18, $00, $f2, $fd, $00, $f5, $25
1ea02     30 04 F8 E3 
1ea06     FB EC F7 3D 
1ea0a     24 D0 E7 3B 
1ea0e     00 E7 21 04 | 	byte	$30, $04, $f8, $e3, $fb, $ec, $f7, $3d, $24, $d0, $e7, $3b, $00, $e7, $21, $04
1ea12     D8 FB 2B 18 
1ea16     03 16 F0 BE 
1ea1a     FF 01 FE 27 
1ea1e     34 10 CC E9 | 	byte	$d8, $fb, $2b, $18, $03, $16, $f0, $be, $ff, $01, $fe, $27, $34, $10, $cc, $e9
1ea22     F6 E7 27 24 
1ea26     06 0E 10 FC 
1ea2a     D5 07 18 FF 
1ea2e     25 20 F4 E5 | 	byte	$f6, $e7, $27, $24, $06, $0e, $10, $fc, $d5, $07, $18, $ff, $25, $20, $f4, $e5
1ea32     F7 13 F6 F5 
1ea36     33 2C E4 D7 
1ea3a     1B 34 E0 FF 
1ea3e     24 F8 DD 07 | 	byte	$f7, $13, $f6, $f5, $33, $2c, $e4, $d7, $1b, $34, $e0, $ff, $24, $f8, $dd, $07
1ea42     43 14 ED 0C 
1ea46     E8 CF 0D 20 
1ea4a     20 15 27 00 
1ea4e     C3 FB 01 FF | 	byte	$43, $14, $ed, $0c, $e8, $cf, $0d, $20, $20, $15, $27, $00, $c3, $fb, $01, $ff
1ea52     1C 1B 00 E7 
1ea56     13 10 F0 0F 
1ea5a     10 05 09 07 
1ea5e     F8 E0 07 20 | 	byte	$1c, $1b, $00, $e7, $13, $10, $f0, $0f, $10, $05, $09, $07, $f8, $e0, $07, $20
1ea62     F8 FF 37 24 
1ea66     D4 DB 27 20 
1ea6a     E1 0B 0A E0 
1ea6e     E1 1F 44 F1 | 	byte	$f8, $ff, $37, $24, $d4, $db, $27, $20, $e1, $0b, $0a, $e0, $e1, $1f, $44, $f1
1ea72     F3 09 EA D7 
1ea76     FF 3D 08 E7 
1ea7a     0A FA DC FB 
1ea7e     23 12 F6 16 | 	byte	$f3, $09, $ea, $d7, $ff, $3d, $08, $e7, $0a, $fa, $dc, $fb, $23, $12, $f6, $16
1ea82     10 E3 FF 10 
1ea86     FA F7 14 1A 
1ea8a     F6 FA 0A F4 
1ea8e     FB 1D 10 FA | 	byte	$10, $e3, $ff, $10, $fa, $f7, $14, $1a, $f6, $fa, $0a, $f4, $fb, $1d, $10, $fa
1ea92     27 28 E0 CD 
1ea96     0B 3C 02 D7 
1ea9a     1F 24 E0 E5 
1ea9e     27 40 F0 D7 | 	byte	$27, $28, $e0, $cd, $0b, $3c, $02, $d7, $1f, $24, $e0, $e5, $27, $40, $f0, $d7
1eaa2     0A 0A E0 EB 
1eaa6     33 3A E4 E7 
1eaaa     0B 00 E0 FF 
1eaae     3F 10 E2 07 | 	byte	$0a, $0a, $e0, $eb, $33, $3a, $e4, $e7, $0b, $00, $e0, $ff, $3f, $10, $e2, $07
1eab2     18 04 F3 13 
1eab6     0C F2 FF 0A 
1eaba     05 F2 FB 13 
1eabe     08 00 FE 25 | 	byte	$18, $04, $f3, $13, $0c, $f2, $ff, $0a, $05, $f2, $fb, $13, $08, $00, $fe, $25
1eac2     28 E4 CF 0F 
1eac6     47 10 CC F7 
1eaca     24 F4 E9 17 
1eace     32 00 CC FF | 	byte	$28, $e4, $cf, $0f, $47, $10, $cc, $f7, $24, $f4, $e9, $17, $32, $00, $cc, $ff
1ead2     2A F4 EF 27 
1ead6     28 F0 DB 07 
1eada     11 E2 F7 2B 
1eade     20 EA E1 0D | 	byte	$2a, $f4, $ef, $27, $28, $f0, $db, $07, $11, $e2, $f7, $2b, $20, $ea, $e1, $0d
1eae2     14 E8 F3 1D 
1eae6     20 F8 F7 12 
1eaea     F8 EA 0F 22 
1eaee     04 ED 1F 28 | 	byte	$14, $e8, $f3, $1d, $20, $f8, $f7, $12, $f8, $ea, $0f, $22, $04, $ed, $1f, $28
1eaf2     E4 D7 13 44 
1eaf6     18 C8 DF 37 
1eafa     14 E2 FF 3A 
1eafe     20 E0 BF 17 | 	byte	$e4, $d7, $13, $44, $18, $c8, $df, $37, $14, $e2, $ff, $3a, $20, $e0, $bf, $17
1eb02     40 F8 F2 27 
1eb06     2C F4 B8 EF 
1eb0a     35 04 F2 13 
1eb0e     27 08 CD F3 | 	byte	$40, $f8, $f2, $27, $2c, $f4, $b8, $ef, $35, $04, $f2, $13, $27, $08, $cd, $f3
1eb12     26 00 E8 FF 
1eb16     24 04 E5 07 
1eb1a     10 F8 F7 11 
1eb1e     10 F7 23 28 | 	byte	$26, $00, $e8, $ff, $24, $04, $e5, $07, $10, $f8, $f7, $11, $10, $f7, $23, $28
1eb22     E8 CB FF 45 
1eb26     20 D4 CB 2B 
1eb2a     28 E4 FF 37 
1eb2e     20 E0 BD FF | 	byte	$e8, $cb, $ff, $45, $20, $d4, $cb, $2b, $28, $e4, $ff, $37, $20, $e0, $bd, $ff
1eb32     3C 02 FF 1A 
1eb36     15 E4 C6 FF 
1eb3a     2B 10 F5 FF 
1eb3e     14 F4 E9 0F | 	byte	$3c, $02, $ff, $1a, $15, $e4, $c6, $ff, $2b, $10, $f5, $ff, $14, $f4, $e9, $0f
1eb42     14 FC ED FD 
1eb46     11 06 F2 ED 
1eb4a     07 18 10 08 
1eb4e     F4 FD 23 12 | 	byte	$14, $fc, $ed, $fd, $11, $06, $f2, $ed, $07, $18, $10, $08, $f4, $fd, $23, $12
1eb52     D6 E7 1F 3C 
1eb56     10 D2 DF 33 
1eb5a     14 E8 FF 2B 
1eb5e     20 F0 C7 F5 | 	byte	$d6, $e7, $1f, $3c, $10, $d2, $df, $33, $14, $e8, $ff, $2b, $20, $f0, $c7, $f5
1eb62     36 28 10 FF 
1eb66     0D 00 D8 D7 
1eb6a     07 27 28 02 
1eb6e     F1 F0 FB 05 | 	byte	$36, $28, $10, $ff, $0d, $00, $d8, $d7, $07, $27, $28, $02, $f1, $f0, $fb, $05
1eb72     FC 06 1B 18 
1eb76     08 FC FE 00 
1eb7a     FF 0E 12 08 
1eb7e     F0 F2 1F 26 | 	byte	$fc, $06, $1b, $18, $08, $fc, $fe, $00, $ff, $0e, $12, $08, $f0, $f2, $1f, $26
1eb82     F0 D2 07 3F 
1eb86     24 E8 C3 FF 
1eb8a     38 F2 EB 1D 
1eb8e     26 00 C6 DF | 	byte	$f0, $d2, $07, $3f, $24, $e8, $c3, $ff, $38, $f2, $eb, $1d, $26, $00, $c6, $df
1eb92     2F 2A 10 FB 
1eb96     07 05 E6 E4 
1eb9a     FF 21 28 FA 
1eb9e     E1 F5 0D 0C | 	byte	$2f, $2a, $10, $fb, $07, $05, $e6, $e4, $ff, $21, $28, $fa, $e1, $f5, $0d, $0c
1eba2     F4 FF 1D 1A 
1eba6     01 F8 FD F8 
1ebaa     F3 06 1A 10 
1ebae     F0 F7 2D 20 | 	byte	$f4, $ff, $1d, $1a, $01, $f8, $fd, $f8, $f3, $06, $1a, $10, $f0, $f7, $2d, $20
1ebb2     D4 CB 0F 4B 
1ebb6     24 E0 CB 17 
1ebba     34 F0 F3 23 
1ebbe     28 F9 C2 D5 | 	byte	$d4, $cb, $0f, $4b, $24, $e0, $cb, $17, $34, $f0, $f3, $23, $28, $f9, $c2, $d5
1ebc2     1B 28 1A 02 
1ebc6     0F 16 F0 D0 
1ebca     E7 15 39 20 
1ebce     E5 ED 0F 17 | 	byte	$1b, $28, $1a, $02, $0f, $16, $f0, $d0, $e7, $15, $39, $20, $e5, $ed, $0f, $17
1ebd2     F8 E5 FF 23 
1ebd6     10 F0 F7 0D 
1ebda     09 05 1B 28 
1ebde     00 E0 FF 2A | 	byte	$f8, $e5, $ff, $23, $10, $f0, $f7, $0d, $09, $05, $1b, $28, $00, $e0, $ff, $2a
1ebe2     04 CA EB 2B 
1ebe6     3E 0A C8 D3 
1ebea     2B 20 F5 07 
1ebee     23 11 E8 C7 | 	byte	$04, $ca, $eb, $2b, $3e, $0a, $c8, $d3, $2b, $20, $f5, $07, $23, $11, $e8, $c7
1ebf2     F7 31 33 10 
1ebf6     F3 07 00 E1 
1ebfa     DD FF 37 32 
1ebfe     F8 EB 07 10 | 	byte	$f7, $31, $33, $10, $f3, $07, $00, $e1, $dd, $ff, $37, $32, $f8, $eb, $07, $10
1ec02     F0 DD 07 2C 
1ec06     18 F8 FE 09 
1ec0a     FE FC 09 15 
1ec0e     00 ED 13 20 | 	byte	$f0, $dd, $07, $2c, $18, $f8, $fe, $09, $fe, $fc, $09, $15, $00, $ed, $13, $20
1ec12     E8 BF F7 3F 
1ec16     38 00 C2 EF 
1ec1a     3D 10 F2 0B 
1ec1e     25 08 D8 CD | 	byte	$e8, $bf, $f7, $3f, $38, $00, $c2, $ef, $3d, $10, $f2, $0b, $25, $08, $d8, $cd
1ec22     0B 2F 28 02 
1ec26     F3 05 00 E6 
1ec2a     DB F5 2B 32 
1ec2e     00 ED 06 1B | 	byte	$0b, $2f, $28, $02, $f3, $05, $00, $e6, $db, $f5, $2b, $32, $00, $ed, $06, $1b
1ec32     08 E8 F1 13 
1ec36     25 14 F8 FB 
1ec3a     02 F5 EF 0B 
1ec3e     20 08 02 20 | 	byte	$08, $e8, $f1, $13, $25, $14, $f8, $fb, $02, $f5, $ef, $0b, $20, $08, $02, $20
1ec42     18 E0 D7 0B 
1ec46     3F 20 E0 BD 
1ec4a     FF 36 10 01 
1ec4e     11 1C 00 D8 | 	byte	$18, $e0, $d7, $0b, $3f, $20, $e0, $bd, $ff, $36, $10, $01, $11, $1c, $00, $d8
1ec52     D3 0B 35 31 
1ec56     00 F9 01 EB 
1ec5a     E0 E3 FF 27 
1ec5e     1B 02 FF 0F | 	byte	$d3, $0b, $35, $31, $00, $f9, $01, $eb, $e0, $e3, $ff, $27, $1b, $02, $ff, $0f
1ec62     0A F0 E3 FF 
1ec66     2B 2A 08 ED 
1ec6a     F3 01 FF 07 
1ec6e     14 08 FB 07 | 	byte	$0a, $f0, $e3, $ff, $2b, $2a, $08, $ed, $f3, $01, $ff, $07, $14, $08, $fb, $07
1ec72     17 F0 C8 F5 
1ec76     37 3C 04 C0 
1ec7a     D3 27 20 F9 
1ec7e     0A 26 18 E8 | 	byte	$17, $f0, $c8, $f5, $37, $3c, $04, $c0, $d3, $27, $20, $f9, $0a, $26, $18, $e8
1ec82     C8 ED 25 3A 
1ec86     18 F6 FA FC 
1ec8a     F0 E4 F2 1A 
1ec8e     25 0A FC FF | 	byte	$c8, $ed, $25, $3a, $18, $f6, $fa, $fc, $f0, $e4, $f2, $1a, $25, $0a, $fc, $ff
1ec92     17 1A FC E1 
1ec96     F7 1B 21 0A 
1ec9a     F7 01 00 F7 
1ec9e     FE 0A 17 13 | 	byte	$17, $1a, $fc, $e1, $f7, $1b, $21, $0a, $f7, $01, $00, $f7, $fe, $0a, $17, $13
1eca2     00 09 14 EA 
1eca6     D1 FF 37 28 
1ecaa     F8 CD F3 2F 
1ecae     10 FA 06 1B | 	byte	$00, $09, $14, $ea, $d1, $ff, $37, $28, $f8, $cd, $f3, $2f, $10, $fa, $06, $1b
1ecb2     10 E4 CD F7 
1ecb6     27 30 12 04 
1ecba     04 F4 E4 E6 
1ecbe     F7 1B 20 06 | 	byte	$10, $e4, $cd, $f7, $27, $30, $12, $04, $04, $f4, $e4, $e6, $f7, $1b, $20, $06
1ecc2     FF 13 19 FC 
1ecc6     E0 E3 13 28 
1ecca     10 03 03 06 
1ecce     F8 EB FF 15 | 	byte	$ff, $13, $19, $fc, $e0, $e3, $13, $28, $10, $03, $03, $06, $f8, $eb, $ff, $15
1ecd2     18 00 ED 09 
1ecd6     14 E4 D4 0D 
1ecda     3B 20 F4 D5 
1ecde     F7 24 10 0B | 	byte	$18, $00, $ed, $09, $14, $e4, $d4, $0d, $3b, $20, $f4, $d5, $f7, $24, $10, $0b
1ece2     12 00 F4 ED 
1ece6     F0 FF 13 24 
1ecea     1A 08 F8 EA 
1ecee     F9 FA F7 01 | 	byte	$12, $00, $f4, $ed, $f0, $ff, $13, $24, $1a, $08, $f8, $ea, $f9, $fa, $f7, $01
1ecf2     0F 18 19 10 
1ecf6     08 05 03 05 
1ecfa     FC F6 FB 0F 
1ecfe     10 01 04 05 | 	byte	$0f, $18, $19, $10, $08, $05, $03, $05, $fc, $f6, $fb, $0f, $10, $01, $04, $05
1ed02     03 07 0B 10 
1ed06     10 FE F9 0D 
1ed0a     0C EC F7 1A 
1ed0e     14 01 E5 E2 | 	byte	$03, $07, $0b, $10, $10, $fe, $f9, $0d, $0c, $ec, $f7, $1a, $14, $01, $e5, $e2
1ed12     0B 20 05 FD 
1ed16     0E 14 FD E8 
1ed1a     F0 03 1A 20 
1ed1e     0A 00 FF 0A | 	byte	$0b, $20, $05, $fd, $0e, $14, $fd, $e8, $f0, $03, $1a, $20, $0a, $00, $ff, $0a
1ed22     08 00 F6 F0 
1ed26     FC 11 18 0D 
1ed2a     05 03 0A 02 
1ed2e     F7 FB 05 04 | 	byte	$08, $00, $f6, $f0, $fc, $11, $18, $0d, $05, $03, $0a, $02, $f7, $fb, $05, $04
1ed32     00 FD FB 0F 
1ed36     20 08 F9 FE 
1ed3a     04 05 02 FC 
1ed3e     E5 FA 19 15 | 	byte	$00, $fd, $fb, $0f, $20, $08, $f9, $fe, $04, $05, $02, $fc, $e5, $fa, $19, $15
1ed42     00 F1 FF 10 
1ed46     08 07 03 FF 
1ed4a     03 FC FF 05 
1ed4e     01 12 15 09 | 	byte	$00, $f1, $ff, $10, $08, $07, $03, $ff, $03, $fc, $ff, $05, $01, $12, $15, $09
1ed52     00 F5 02 05 
1ed56     FC FA 01 11 
1ed5a     12 06 05 02 
1ed5e     13 12 FE F5 | 	byte	$00, $f5, $02, $05, $fc, $fa, $01, $11, $12, $06, $05, $02, $13, $12, $fe, $f5
1ed62     F7 03 02 03 
1ed66     0E 10 00 F9 
1ed6a     04 11 0C 07 
1ed6e     05 03 11 05 | 	byte	$f7, $03, $02, $03, $0e, $10, $00, $f9, $04, $11, $0c, $07, $05, $03, $11, $05
1ed72     ED F2 10 1B 
1ed76     00 DC F1 1A 
1ed7a     15 0E 10 06 
1ed7e     04 FE F6 F2 | 	byte	$ed, $f2, $10, $1b, $00, $dc, $f1, $1a, $15, $0e, $10, $06, $04, $fe, $f6, $f2
1ed82     FB 13 17 08 
1ed86     00 F6 03 13 
1ed8a     06 F3 F2 0B 
1ed8e     1B 10 F9 F6 | 	byte	$fb, $13, $17, $08, $00, $f6, $03, $13, $06, $f3, $f2, $0b, $1b, $10, $f9, $f6
1ed92     0B 15 00 F5 
1ed96     02 05 00 FA 
1ed9a     FB 07 08 00 
1ed9e     FA 09 16 08 | 	byte	$0b, $15, $00, $f5, $02, $05, $00, $fa, $fb, $07, $08, $00, $fa, $09, $16, $08
1eda2     F6 FF 11 00 
1eda6     E9 FB 19 16 
1edaa     FA E8 FE 13 
1edae     12 0C 0B 09 | 	byte	$f6, $ff, $11, $00, $e9, $fb, $19, $16, $fa, $e8, $fe, $13, $12, $0c, $0b, $09
1edb2     04 F4 EE F7 
1edb6     FF 17 20 12 
1edba     00 F0 FF 0B 
1edbe     00 FB 03 12 | 	byte	$04, $f4, $ee, $f7, $ff, $17, $20, $12, $00, $f0, $ff, $0b, $00, $fb, $03, $12
1edc2     10 01 09 07 
1edc6     08 0B 04 00 
1edca     FD 05 03 FA 
1edce     FB 05 08 04 | 	byte	$10, $01, $09, $07, $08, $0b, $04, $00, $fd, $05, $03, $fa, $fb, $05, $08, $04
1edd2     04 12 19 0A 
1edd6     01 FB FE 04 
1edda     F8 F6 0B 1B 
1edde     10 F8 EF 05 | 	byte	$04, $12, $19, $0a, $01, $fb, $fe, $04, $f8, $f6, $0b, $1b, $10, $f8, $ef, $05
1ede2     10 02 09 0A 
1ede6     07 02 F0 F5 
1edea     05 09 17 17 
1edee     0B 00 FF 06 | 	byte	$10, $02, $09, $0a, $07, $02, $f0, $f5, $05, $09, $17, $17, $0b, $00, $ff, $06
1edf2     FC F1 F4 FF 
1edf6     1F 15 FD 07 
1edfa     09 04 F2 F4 
1edfe     0A 0B FA F2 | 	byte	$fc, $f1, $f4, $ff, $1f, $15, $fd, $07, $09, $04, $f2, $f4, $0a, $0b, $fa, $f2
1ee02     FF 0B 02 00 
1ee06     09 15 1B 00 
1ee0a     EB F7 03 00 
1ee0e     0B 09 EB F6 | 	byte	$ff, $0b, $02, $00, $09, $15, $1b, $00, $eb, $f7, $03, $00, $0b, $09, $eb, $f6
1ee12     1B 1A 00 EE 
1ee16     FF 12 04 06 
1ee1a     10 0C 0A F8 
1ee1e     F0 FA 07 19 | 	byte	$1b, $1a, $00, $ee, $ff, $12, $04, $06, $10, $0c, $0a, $f8, $f0, $fa, $07, $19
1ee22     14 00 04 05 
1ee26     07 09 F9 F9 
1ee2a     03 0E 0C F9 
1ee2e     FF 19 10 FA | 	byte	$14, $00, $04, $05, $07, $09, $f9, $f9, $03, $0e, $0c, $f9, $ff, $19, $10, $fa
1ee32     F1 F7 0A 0C 
1ee36     04 06 0A 08 
1ee3a     FA F9 0B 14 
1ee3e     0B 00 FF 03 | 	byte	$f1, $f7, $0a, $0c, $04, $06, $0a, $08, $fa, $f9, $0b, $14, $0b, $00, $ff, $03
1ee42     FD F5 FB 10 
1ee46     10 F0 07 26 
1ee4a     14 F6 EA 06 
1ee4e     13 02 FF 10 | 	byte	$fd, $f5, $fb, $10, $10, $f0, $07, $26, $14, $f6, $ea, $06, $13, $02, $ff, $10
1ee52     04 F7 F2 F9 
1ee56     08 09 10 0C 
1ee5a     0C 13 02 FA 
1ee5e     F4 F7 03 09 | 	byte	$04, $f7, $f2, $f9, $08, $09, $10, $0c, $0c, $13, $02, $fa, $f4, $f7, $03, $09
1ee62     0A 07 06 09 
1ee66     07 02 FA FB 
1ee6a     FF 01 FE FF 
1ee6e     FF 05 01 02 | 	byte	$0a, $07, $06, $09, $07, $02, $fa, $fb, $ff, $01, $fe, $ff, $ff, $05, $01, $02
1ee72     0C 03 06 0B 
1ee76     0A 0A 00 01 
1ee7a     01 02 06 F8 
1ee7e     EB 07 1B 14 | 	byte	$0c, $03, $06, $0b, $0a, $0a, $00, $01, $01, $02, $06, $f8, $eb, $07, $1b, $14
1ee82     07 F5 FF 1A 
1ee86     00 FD 10 10 
1ee8a     06 F2 E9 F7 
1ee8e     FF 13 19 14 | 	byte	$07, $f5, $ff, $1a, $00, $fd, $10, $10, $06, $f2, $e9, $f7, $ff, $13, $19, $14
1ee92     16 05 FC F6 
1ee96     FA 00 FF 02 
1ee9a     0B 0A 0D 15 
1ee9e     05 07 05 00 | 	byte	$16, $05, $fc, $f6, $fa, $00, $ff, $02, $0b, $0a, $0d, $15, $05, $07, $05, $00
1eea2     F6 F4 02 07 
1eea6     04 01 0C 10 
1eeaa     07 0C 07 07 
1eeae     0E 00 F0 F7 | 	byte	$f6, $f4, $02, $07, $04, $01, $0c, $10, $07, $0c, $07, $07, $0e, $00, $f0, $f7
1eeb2     FF 07 08 00 
1eeb6     F0 0A 20 08 
1eeba     FB F9 03 10 
1eebe     FB 04 13 0B | 	byte	$ff, $07, $08, $00, $f0, $0a, $20, $08, $fb, $f9, $03, $10, $fb, $04, $13, $0b
1eec2     05 F0 F0 01 
1eec6     02 06 01 09 
1eeca     17 04 F8 02 
1eece     FE 02 F0 F3 | 	byte	$05, $f0, $f0, $01, $02, $06, $01, $09, $17, $04, $f8, $02, $fe, $02, $f0, $f3
1eed2     05 15 10 00 
1eed6     03 0B 01 F4 
1eeda     F8 05 0D 0A 
1eede     05 09 0C 0B | 	byte	$05, $15, $10, $00, $03, $0b, $01, $f4, $f8, $05, $0d, $0a, $05, $09, $0c, $0b
1eee2     01 FD 07 05 
1eee6     02 06 02 F9 
1eeea     FF 02 03 11 
1eeee     12 03 03 10 | 	byte	$01, $fd, $07, $05, $02, $06, $02, $f9, $ff, $02, $03, $11, $12, $03, $03, $10
1eef2     0E 0D FD F3 
1eef6     FF 01 FF 06 
1eefa     0B 0E 08 F9 
1eefe     03 0E 0F 15 | 	byte	$0e, $0d, $fd, $f3, $ff, $01, $ff, $06, $0b, $0e, $08, $f9, $03, $0e, $0f, $15
1ef02     05 FE FA FE 
1ef06     FE F7 FC 0D 
1ef0a     15 09 FA FF 
1ef0e     05 01 0F 0C | 	byte	$05, $fe, $fa, $fe, $fe, $f7, $fc, $0d, $15, $09, $fa, $ff, $05, $01, $0f, $0c
1ef12     02 04 00 FF 
1ef16     05 02 00 FF 
1ef1a     05 06 0E 0C 
1ef1e     02 FF FF 00 | 	byte	$02, $04, $00, $ff, $05, $02, $00, $ff, $05, $06, $0e, $0c, $02, $ff, $ff, $00
1ef22     F9 FB 03 0D 
1ef26     0B 04 02 00 
1ef2a     01 08 02 01 
1ef2e     06 00 F9 FF | 	byte	$f9, $fb, $03, $0d, $0b, $04, $02, $00, $01, $08, $02, $01, $06, $00, $f9, $ff
1ef32     0B 06 FD F5 
1ef36     F6 04 0A 06 
1ef3a     07 0B 04 03 
1ef3e     02 05 FC F2 | 	byte	$0b, $06, $fd, $f5, $f6, $04, $0a, $06, $07, $0b, $04, $03, $02, $05, $fc, $f2
1ef42     FF 10 0D 02 
1ef46     08 05 00 01 
1ef4a     06 09 08 05 
1ef4e     09 01 03 09 | 	byte	$ff, $10, $0d, $02, $08, $05, $00, $01, $06, $09, $08, $05, $09, $01, $03, $09
1ef52     01 00 FC 07 
1ef56     19 0A FC FD 
1ef5a     01 07 01 FF 
1ef5e     09 0D 0B 00 | 	byte	$01, $00, $fc, $07, $19, $0a, $fc, $fd, $01, $07, $01, $ff, $09, $0d, $0b, $00
1ef62     05 06 06 0B 
1ef66     05 FD FA 02 
1ef6a     06 00 F8 05 
1ef6e     0E 06 07 12 | 	byte	$05, $06, $06, $0b, $05, $fd, $fa, $02, $06, $00, $f8, $05, $0e, $06, $07, $12
1ef72     06 03 09 00 
1ef76     FD FF 02 09 
1ef7a     10 06 F4 05 
1ef7e     04 FF 06 0A | 	byte	$06, $03, $09, $00, $fd, $ff, $02, $09, $10, $06, $f4, $05, $04, $ff, $06, $0a
1ef82     04 0A 00 F9 
1ef86     09 0C 00 FF 
1ef8a     FE 0B 05 FB 
1ef8e     01 09 0C 00 | 	byte	$04, $0a, $00, $f9, $09, $0c, $00, $ff, $fe, $0b, $05, $fb, $01, $09, $0c, $00
1ef92     FD 02 FF FE 
1ef96     FF 04 FE F9 
1ef9a     0A 04 F7 06 
1ef9e     15 04 FF FA | 	byte	$fd, $02, $ff, $fe, $ff, $04, $fe, $f9, $0a, $04, $f7, $06, $15, $04, $ff, $fa
1efa2     FF 0D 08 00 
1efa6     0B 0C FF FF 
1efaa     00 FF 05 FC 
1efae     FD 0B 0C 0A | 	byte	$ff, $0d, $08, $00, $0b, $0c, $ff, $ff, $00, $ff, $05, $fc, $fd, $0b, $0c, $0a
1efb2     08 06 FD 01 
1efb6     08 02 0B 10 
1efba     04 06 06 FD 
1efbe     FF 0A 00 FC | 	byte	$08, $06, $fd, $01, $08, $02, $0b, $10, $04, $06, $06, $fd, $ff, $0a, $00, $fc
1efc2     FD 0D 21 12 
1efc6     05 01 00 F6 
1efca     FB 03 01 05 
1efce     04 FA 06 04 | 	byte	$fd, $0d, $21, $12, $05, $01, $00, $f6, $fb, $03, $01, $05, $04, $fa, $06, $04
1efd2     FF 0A 04 03 
1efd6     0D 0A FD FC 
1efda     0D 10 02 02 
1efde     05 0B 06 FA | 	byte	$ff, $0a, $04, $03, $0d, $0a, $fd, $fc, $0d, $10, $02, $02, $05, $0b, $06, $fa
1efe2     04 04 FB 0B 
1efe6     10 03 FF 03 
1efea     0D 09 00 F6 
1efee     F9 0E 10 00 | 	byte	$04, $04, $fb, $0b, $10, $03, $ff, $03, $0d, $09, $00, $f6, $f9, $0e, $10, $00
1eff2     02 FE F7 05 
1eff6     09 00 FF 01 
1effa     F8 FF 0B 02 
1effe     02 07 FB FA | 	byte	$02, $fe, $f7, $05, $09, $00, $ff, $01, $f8, $ff, $0b, $02, $02, $07, $fb, $fa
1f002     0B 0C 05 08 
1f006     00 FB FF F8 
1f00a     FB 0F 12 00 
1f00e     FF FF FA 07 | 	byte	$0b, $0c, $05, $08, $00, $fb, $ff, $f8, $fb, $0f, $12, $00, $ff, $ff, $fa, $07
1f012     10 10 0A 01 
1f016     FC FF 0B 09 
1f01a     09 08 00 F9 
1f01e     03 10 08 FE | 	byte	$10, $10, $0a, $01, $fc, $ff, $0b, $09, $09, $08, $00, $f9, $03, $10, $08, $fe
1f022     00 00 00 00 
1f026     35 E8 00 00 
1f02a     00 00 00 00 
1f02e     00 00 00 00 | 	byte	$00, $00, $00, $00, $35, $e8, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
1f032     00 00 00 00 
1f036     FF FF FF FF 
1f03a     FF FF FF FF 
1f03e     FF FF FF FF | 	byte	$00, $00, $00, $00, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
1f042     00 00 00 00 
1f046     00 00 00 00 
1f04a     00 00 00 00 
1f04e     00 00 00 00 
1f052     00 00 00 00 
1f056     00 00 00 00 
1f05a     00 00       | 	byte	$00[26]
1f05c     FF FF FF FF 
1f060     00 00 00 00 
1f064     00 00 00 00 
1f068     00 00 01 00 | 	byte	$ff, $ff, $ff, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01, $00
1f06c     00 00 00 00 
1f070     01 00 00 00 
1f074     00 00 00 00 
1f078     00 FF FF FF | 	byte	$00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
1f07c     FF 00 00 00 
1f080     00 00 00 00 
1f084     00 00 00 FF 
1f088     FF FE FE FE | 	byte	$ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $fe, $fe, $fe
1f08c     FE FF 00 00 
1f090     01 02 02 02 
1f094     02 02 00 00 
1f098     FF FE FD FD | 	byte	$fe, $ff, $00, $00, $01, $02, $02, $02, $02, $02, $00, $00, $ff, $fe, $fd, $fd
1f09c     FE 00 01 03 
1f0a0     04 04 02 01 
1f0a4     00 FE FC FC 
1f0a8     FC FC FF 01 | 	byte	$fe, $00, $01, $03, $04, $04, $02, $01, $00, $fe, $fc, $fc, $fc, $fc, $ff, $01
1f0ac     04 05 05 04 
1f0b0     00 FF FC FB 
1f0b4     FB FB FD FF 
1f0b8     01 04 05 05 | 	byte	$04, $05, $05, $04, $00, $ff, $fc, $fb, $fb, $fb, $fd, $ff, $01, $04, $05, $05
1f0bc     02 00 FC FB 
1f0c0     FA FC 00 02 
1f0c4     04 05 04 02 
1f0c8     00 FF FC FC | 	byte	$02, $00, $fc, $fb, $fa, $fc, $00, $02, $04, $05, $04, $02, $00, $ff, $fc, $fc
1f0cc     FC FF 01 04 
1f0d0     05 04 01 FD 
1f0d4     FA F9 FF 04 
1f0d8     08 07 00 FA | 	byte	$fc, $ff, $01, $04, $05, $04, $01, $fd, $fa, $f9, $ff, $04, $08, $07, $00, $fa
1f0dc     F6 F7 FD 03 
1f0e0     07 06 00 F9 
1f0e4     F7 FD 05 0A 
1f0e8     07 01 FA F7 | 	byte	$f6, $f7, $fd, $03, $07, $06, $00, $f9, $f7, $fd, $05, $0a, $07, $01, $fa, $f7
1f0ec     FC 03 09 06 
1f0f0     FE F8 FB 06 
1f0f4     0D 09 FE F7 
1f0f8     FB 00 05 06 | 	byte	$fc, $03, $09, $06, $fe, $f8, $fb, $06, $0d, $09, $fe, $f7, $fb, $00, $05, $06
1f0fc     01 FB F8 FD 
1f100     03 09 08 01 
1f104     FA F7 FD 04 
1f108     07 02 FC FB | 	byte	$01, $fb, $f8, $fd, $03, $09, $08, $01, $fa, $f7, $fd, $04, $07, $02, $fc, $fb
1f10c     FC 00 04 08 
1f110     06 00 FD FC 
1f114     00 04 04 01 
1f118     FE FA FC 01 | 	byte	$fc, $00, $04, $08, $06, $00, $fd, $fc, $00, $04, $04, $01, $fe, $fa, $fc, $01
1f11c     08 03 00 01 
1f120     00 FB F8 01 
1f124     0A 05 FB F5 
1f128     FA 00 03 07 | 	byte	$08, $03, $00, $01, $00, $fb, $f8, $01, $0a, $05, $fb, $f5, $fa, $00, $03, $07
1f12c     05 FC F8 FD 
1f130     FF 00 00 01 
1f134     00 FB FE 00 
1f138     00 00 02 05 | 	byte	$05, $fc, $f8, $fd, $ff, $00, $00, $01, $00, $fb, $fe, $00, $00, $00, $02, $05
1f13c     00 FF FF FF 
1f140     00 01 02 02 
1f144     00 FD F9 F8 
1f148     00 10 10 FC | 	byte	$00, $ff, $ff, $ff, $00, $01, $02, $02, $00, $fd, $f9, $f8, $00, $10, $10, $fc
1f14c     EE F6 06 0C 
1f150     05 FA F0 F4 
1f154     04 11 0B FD 
1f158     F5 FC 04 01 | 	byte	$ee, $f6, $06, $0c, $05, $fa, $f0, $f4, $04, $11, $0b, $fd, $f5, $fc, $04, $01
1f15c     F9 FC 09 0A 
1f160     FB F0 F5 03 
1f164     0D 08 00 FF 
1f168     00 00 FB FB | 	byte	$f9, $fc, $09, $0a, $fb, $f0, $f5, $03, $0d, $08, $00, $ff, $00, $00, $fb, $fb
1f16c     00 03 05 05 
1f170     FF F6 F4 FF 
1f174     0C 12 09 FB 
1f178     F0 F3 FD 07 | 	byte	$00, $03, $05, $05, $ff, $f6, $f4, $ff, $0c, $12, $09, $fb, $f0, $f3, $fd, $07
1f17c     0C 01 F5 F3 
1f180     F9 01 07 08 
1f184     05 02 FF F9 
1f188     F7 FC 02 09 | 	byte	$0c, $01, $f5, $f3, $f9, $01, $07, $08, $05, $02, $ff, $f9, $f7, $fc, $02, $09
1f18c     08 FF F5 F2 
1f190     FA 05 0C 0C 
1f194     05 FE FA F8 
1f198     FC 02 08 0A | 	byte	$08, $ff, $f5, $f2, $fa, $05, $0c, $0c, $05, $fe, $fa, $f8, $fc, $02, $08, $0a
1f19c     05 FC F3 F0 
1f1a0     F5 00 0C 13 
1f1a4     10 05 F7 EE 
1f1a8     EE F4 00 0B | 	byte	$05, $fc, $f3, $f0, $f5, $00, $0c, $13, $10, $05, $f7, $ee, $ee, $f4, $00, $0b
1f1ac     10 0D 01 F5 
1f1b0     EE F1 FB 06 
1f1b4     0F 10 0A 00 
1f1b8     F7 F1 F1 F8 | 	byte	$10, $0d, $01, $f5, $ee, $f1, $fb, $06, $0f, $10, $0a, $00, $f7, $f1, $f1, $f8
1f1bc     00 05 09 0A 
1f1c0     07 04 01 00 
1f1c4     FE FB F9 F8 
1f1c8     FA FE 02 05 | 	byte	$00, $05, $09, $0a, $07, $04, $01, $00, $fe, $fb, $f9, $f8, $fa, $fe, $02, $05
1f1cc     06 05 02 00 
1f1d0     FE FC FD FF 
1f1d4     00 02 02 01 
1f1d8     00 00 00 00 | 	byte	$06, $05, $02, $00, $fe, $fc, $fd, $ff, $00, $02, $02, $01, $00, $00, $00, $00
1f1dc     00 01 02 02 
1f1e0     02 03 03 02 
1f1e4     02 00 00 00 
1f1e8     00 00 00 00 | 	byte	$00, $01, $02, $02, $02, $03, $03, $02, $02, $00, $00, $00, $00, $00, $00, $00
1f1ec     00 00 FF 00 
1f1f0     00 02 02 02 
1f1f4     02 01 01 00 
1f1f8     00 FD FC FA | 	byte	$00, $00, $ff, $00, $00, $02, $02, $02, $02, $01, $01, $00, $00, $fd, $fc, $fa
1f1fc     FA FC FE 00 
1f200     02 05 07 09 
1f204     09 09 08 05 
1f208     02 FF FD F9 | 	byte	$fa, $fc, $fe, $00, $02, $05, $07, $09, $09, $09, $08, $05, $02, $ff, $fd, $f9
1f20c     F7 F6 F5 F6 
1f210     F8 FB FE 01 
1f214     04 08 0A 0B 
1f218     0B 0A 07 05 | 	byte	$f7, $f6, $f5, $f6, $f8, $fb, $fe, $01, $04, $08, $0a, $0b, $0b, $0a, $07, $05
1f21c     02 FF FC F9 
1f220     F8 F6 F6 F6 
1f224     F6 F6 F8 FA 
1f228     FC FE FF 00 | 	byte	$02, $ff, $fc, $f9, $f8, $f6, $f6, $f6, $f6, $f6, $f8, $fa, $fc, $fe, $ff, $00
1f22c     00 00 02 03 
1f230     04 05 05 06 
1f234     05 06 06 06 
1f238     04 02 00 FF | 	byte	$00, $00, $02, $03, $04, $05, $05, $06, $05, $06, $06, $06, $04, $02, $00, $ff
1f23c     FD FB F9 F6 
1f240     F4 F3 F3 F3 
1f244     F4 F5 F7 F9 
1f248     FB FF 01 05 | 	byte	$fd, $fb, $f9, $f6, $f4, $f3, $f3, $f3, $f4, $f5, $f7, $f9, $fb, $ff, $01, $05
1f24c     07 08 0B 0B 
1f250     0C 0D 0E 0E 
1f254     0D 0B 09 08 
1f258     06 03 01 00 | 	byte	$07, $08, $0b, $0b, $0c, $0d, $0e, $0e, $0d, $0b, $09, $08, $06, $03, $01, $00
1f25c     FD FB F8 F6 
1f260     F5 F4 F3 F3 
1f264     F4 F3 F4 F5 
1f268     F6 F8 FB FB | 	byte	$fd, $fb, $f8, $f6, $f5, $f4, $f3, $f3, $f4, $f3, $f4, $f5, $f6, $f8, $fb, $fb
1f26c     FD FE FF 00 
1f270     02 03 05 05 
1f274     05 08 08 08 
1f278     08 08 08 07 | 	byte	$fd, $fe, $ff, $00, $02, $03, $05, $05, $05, $08, $08, $08, $08, $08, $08, $07
1f27c     06 05 04 04 
1f280     04 03 01 00 
1f284     00 00 00 FE 
1f288     FD FD FD FC | 	byte	$06, $05, $04, $04, $04, $03, $01, $00, $00, $00, $00, $fe, $fd, $fd, $fd, $fc
1f28c     FC FB FC FC 
1f290     FC FC FC FB 
1f294     FC FC FC FD 
1f298     FD FE FF 00 | 	byte	$fc, $fb, $fc, $fc, $fc, $fc, $fc, $fb, $fc, $fc, $fc, $fd, $fd, $fe, $ff, $00
1f29c     00 00 00 00 
1f2a0     00          | 	byte	$00[5]
1f2a1     01 02 03 03 
1f2a5     03 02 02 02 
1f2a9     03 03 03 03 
1f2ad     03 03 03 03 | 	byte	$01, $02, $03, $03, $03, $02, $02, $02, $03, $03, $03, $03, $03, $03, $03, $03
1f2b1     03 02 02 02 
1f2b5     02 00 00 00 
1f2b9     00 00 00 00 
1f2bd     FF FE FE FE | 	byte	$03, $02, $02, $02, $02, $00, $00, $00, $00, $00, $00, $00, $ff, $fe, $fe, $fe
1f2c1     FE FE FE FE 
1f2c5     FD FD FC FC 
1f2c9     FD FD FE FE 
1f2cd     FE FE FE FF | 	byte	$fe, $fe, $fe, $fe, $fd, $fd, $fc, $fc, $fd, $fd, $fe, $fe, $fe, $fe, $fe, $ff
1f2d1     00 00 00 00 
1f2d5     00          | 	byte	$00[5]
1f2d6     02 02 01 01 
1f2da     02 02 03 03 
1f2de     03 03 03 03 
1f2e2     03 02 02 02 | 	byte	$02, $02, $01, $01, $02, $02, $03, $03, $03, $03, $03, $03, $03, $02, $02, $02
1f2e6     01 00 00 00 
1f2ea     00 00 FE FE 
1f2ee     FE FE FD FD 
1f2f2     FD FD FD FE | 	byte	$01, $00, $00, $00, $00, $00, $fe, $fe, $fe, $fe, $fd, $fd, $fd, $fd, $fd, $fe
1f2f6     FD FE FE FF 
1f2fa     FF 00 00 00 
1f2fe     00 01 02 03 
1f302     03 04 05 05 | 	byte	$fd, $fe, $fe, $ff, $ff, $00, $00, $00, $00, $01, $02, $03, $03, $04, $05, $05
1f306     05 05 05 05 
1f30a     05          | 	byte	$05[5]
1f30b     04 04 04 03 
1f30f     02 00 00 00 
1f313     FF FD FD FD 
1f317     FC FB FB FB | 	byte	$04, $04, $04, $03, $02, $00, $00, $00, $ff, $fd, $fd, $fd, $fc, $fb, $fb, $fb
1f31b     FB FD FD FE 
1f31f     FF 00 00 00 
1f323     02 03 03 03 
1f327     03 03 03 02 | 	byte	$fb, $fd, $fd, $fe, $ff, $00, $00, $00, $02, $03, $03, $03, $03, $03, $03, $02
1f32b     01 00 00 00 
1f32f     00 00 FF FE 
1f333     FE FE FD FD 
1f337     FC FC FC FC | 	byte	$01, $00, $00, $00, $00, $00, $ff, $fe, $fe, $fe, $fd, $fd, $fc, $fc, $fc, $fc
1f33b     FD FE FF 00 
1f33f     00 00 01 02 
1f343     03 02 01 00 
1f347     00 00 FF FE | 	byte	$fd, $fe, $ff, $00, $00, $00, $01, $02, $03, $02, $01, $00, $00, $00, $ff, $fe
1f34b     FE FE FF 00 
1f34f     00 00 00 00 
1f353     00 00 00 00 
1f357     FE FD FD FD | 	byte	$fe, $fe, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $fe, $fd, $fd, $fd
1f35b     FD FD FD FE 
1f35f     00 00 02 03 
1f363     02 01 00 00 
1f367     FF FC FC FC | 	byte	$fd, $fd, $fd, $fe, $00, $00, $02, $03, $02, $01, $00, $00, $ff, $fc, $fc, $fc
1f36b     FF 00 00 03 
1f36f     04 05 04 01 
1f373     00 FF FB FA 
1f377     FA FB FC 00 | 	byte	$ff, $00, $00, $03, $04, $05, $04, $01, $00, $ff, $fb, $fa, $fa, $fb, $fc, $00
1f37b     00 02 02 00 
1f37f     00 FC FB F8 
1f383     F7 F8 F9 FD 
1f387     00 06 09 0A | 	byte	$00, $02, $02, $00, $00, $fc, $fb, $f8, $f7, $f8, $f9, $fd, $00, $06, $09, $0a
1f38b     08 03 FD F7 
1f38f     F5 F6 F9 FD 
1f393     00 03 06 0A 
1f397     0A 06 00 FB | 	byte	$08, $03, $fd, $f7, $f5, $f6, $f9, $fd, $00, $03, $06, $0a, $0a, $06, $00, $fb
1f39b     F6 F4 F9 00 
1f39f     05 09 07 00 
1f3a3     FC FC FE 00 
1f3a7     02 04 04 04 | 	byte	$f6, $f4, $f9, $00, $05, $09, $07, $00, $fc, $fc, $fe, $00, $02, $04, $04, $04
1f3ab     04 02 00 FB 
1f3af     F8 F6 F7 FC 
1f3b3     04 0C 0F 09 
1f3b7     00 F8 F4 F4 | 	byte	$04, $02, $00, $fb, $f8, $f6, $f7, $fc, $04, $0c, $0f, $09, $00, $f8, $f4, $f4
1f3bb     FC 05 07 00 
1f3bf     FC FE 05 0C 
1f3c3     0C 02 F6 F0 
1f3c7     F7 05 15 19 | 	byte	$fc, $05, $07, $00, $fc, $fe, $05, $0c, $0c, $02, $f6, $f0, $f7, $05, $15, $19
1f3cb     03 E0 D8 F3 
1f3cf     1C 2F 20 F4 
1f3d3     D8 E1 05 1D 
1f3d7     14 FB E9 E7 | 	byte	$03, $e0, $d8, $f3, $1c, $2f, $20, $f4, $d8, $e1, $05, $1d, $14, $fb, $e9, $e7
1f3db     F3 08 1F 24 
1f3df     07 E0 DB FA 
1f3e3     16 0D E4 D7 
1f3e7     FC 1D 15 F1 | 	byte	$f3, $08, $1f, $24, $07, $e0, $db, $fa, $16, $0d, $e4, $d7, $fc, $1d, $15, $f1
1f3eb     EA 0F 28 0D 
1f3ef     E5 E6 08 16 
1f3f3     06 F7 F4 00 
1f3f7     04 02 09 0C | 	byte	$ea, $0f, $28, $0d, $e5, $e6, $08, $16, $06, $f7, $f4, $00, $04, $02, $09, $0c
1f3fb     09 03 01 FB 
1f3ff     F9 00 00 00 
1f403     03 01 F0 E0 
1f407     FE 2E 31 FA | 	byte	$09, $03, $01, $fb, $f9, $00, $00, $00, $03, $01, $f0, $e0, $fe, $2e, $31, $fa
1f40b     CE E8 1B 29 
1f40f     00 D2 E3 1A 
1f413     23 FA E5 F9 
1f417     17 1D 06 EF | 	byte	$ce, $e8, $1b, $29, $00, $d2, $e3, $1a, $23, $fa, $e5, $f9, $17, $1d, $06, $ef
1f41b     EC 02 16 08 
1f41f     F1 F0 03 02 
1f423     F2 F8 19 2B 
1f427     09 DE D8 03 | 	byte	$ec, $02, $16, $08, $f1, $f0, $03, $02, $f2, $f8, $19, $2b, $09, $de, $d8, $03
1f42b     2C 1A E7 D6 
1f42f     F6 1B 11 F2 
1f433     EF 06 21 1A 
1f437     F1 D9 F5 18 | 	byte	$2c, $1a, $e7, $d6, $f6, $1b, $11, $f2, $ef, $06, $21, $1a, $f1, $d9, $f5, $18
1f43b     20 FB D9 EA 
1f43f     10 1A FD E9 
1f443     FF 1E 20 00 
1f447     DE E4 07 1C | 	byte	$20, $fb, $d9, $ea, $10, $1a, $fd, $e9, $ff, $1e, $20, $00, $de, $e4, $07, $1c
1f44b     15 FC E1 DE 
1f44f     FA 19 23 18 
1f453     FD DF DF 00 
1f457     21 17 F6 E9 | 	byte	$15, $fc, $e1, $de, $fa, $19, $23, $18, $fd, $df, $df, $00, $21, $17, $f6, $e9
1f45b     F8 09 05 F8 
1f45f     F1 F9 0B 16 
1f463     0E F5 DF E3 
1f467     FD 14 19 05 | 	byte	$f8, $09, $05, $f8, $f1, $f9, $0b, $16, $0e, $f5, $df, $e3, $fd, $14, $19, $05
1f46b     EA DB E8 02 
1f46f     1A 1E 0A F0 
1f473     DE E3 F8 11 
1f477     1E 17 FC E0 | 	byte	$ea, $db, $e8, $02, $1a, $1e, $0a, $f0, $de, $e3, $f8, $11, $1e, $17, $fc, $e0
1f47b     D7 E1 FA 15 
1f47f     26 26 12 F3 
1f483     D6 D3 E7 08 
1f487     23 28 18 F8 | 	byte	$d7, $e1, $fa, $15, $26, $26, $12, $f3, $d6, $d3, $e7, $08, $23, $28, $18, $f8
1f48b     DB D2 E0 00 
1f48f     1F 2F 2C 15 
1f493     F5 DB D3 E1 
1f497     F9 14 23 24 | 	byte	$db, $d2, $e0, $00, $1f, $2f, $2c, $15, $f5, $db, $d3, $e1, $f9, $14, $23, $24
1f49b     15 00 EE E4 
1f49f     E6 F5 06 16 
1f4a3     1B 17 0B FA 
1f4a7     E9 DF DE E7 | 	byte	$15, $00, $ee, $e4, $e6, $f5, $06, $16, $1b, $17, $0b, $fa, $e9, $df, $de, $e7
1f4ab     F8 0C 1F 27 
1f4af     25 19 05 F1 
1f4b3     E3 DD E2 EE 
1f4b7     00 0A 12 13 | 	byte	$f8, $0c, $1f, $27, $25, $19, $05, $f1, $e3, $dd, $e2, $ee, $00, $0a, $12, $13
1f4bb     0F 0C 06 02 
1f4bf     00 FB F5 F3 
1f4c3     F4 F7 FC 00 
1f4c7     03 07 0B 0C | 	byte	$0f, $0c, $06, $02, $00, $fb, $f5, $f3, $f4, $f7, $fc, $00, $03, $07, $0b, $0c
1f4cb     0A 07 01 FF 
1f4cf     F9 F5 F4 F6 
1f4d3     FB 00 01 06 
1f4d7     09 08 04 00 | 	byte	$0a, $07, $01, $ff, $f9, $f5, $f4, $f6, $fb, $00, $01, $06, $09, $08, $04, $00
1f4db     FF FB F9 F7 
1f4df     F7 F9 FB FD 
1f4e3     00 00 00 00 
1f4e7     00 00 00 00 | 	byte	$ff, $fb, $f9, $f7, $f7, $f9, $fb, $fd, $00, $00, $00, $00, $00, $00, $00, $00
1f4eb     00 FF FE 00 
1f4ef     01 05 08 0A 
1f4f3     0B 0A 09 08 
1f4f7     05 02 00 FE | 	byte	$00, $ff, $fe, $00, $01, $05, $08, $0a, $0b, $0a, $09, $08, $05, $02, $00, $fe
1f4fb     FA F8 F8 F8 
1f4ff     F8 F9 FC FE 
1f503     00 00 02 05 
1f507     05 05 04 05 | 	byte	$fa, $f8, $f8, $f8, $f8, $f9, $fc, $fe, $00, $00, $02, $05, $05, $05, $04, $05
1f50b     05 05 03 01 
1f50f     00 00 00 00 
1f513     00 00 00 FE 
1f517     FC FC FB FC | 	byte	$05, $05, $03, $01, $00, $00, $00, $00, $00, $00, $00, $fe, $fc, $fc, $fb, $fc
1f51b     FB FB FB FD 
1f51f     FF 00 00 01 
1f523     02 03 03 03 
1f527     03 03 03 03 | 	byte	$fb, $fb, $fb, $fd, $ff, $00, $00, $01, $02, $03, $03, $03, $03, $03, $03, $03
1f52b     01 00 00 00 
1f52f     00 FF FC FA 
1f533     FB FC FC FC 
1f537     FC FD FE FD | 	byte	$01, $00, $00, $00, $00, $ff, $fc, $fa, $fb, $fc, $fc, $fc, $fc, $fd, $fe, $fd
1f53b     FC FD FE 00 
1f53f     01 01 01 02 
1f543     02 04 06 08 
1f547     08 08 06 05 | 	byte	$fc, $fd, $fe, $00, $01, $01, $01, $02, $02, $04, $06, $08, $08, $08, $06, $05
1f54b     06 07 07 04 
1f54f     03 02 03 03 
1f553     01 FF FE FE 
1f557     FE FB F9 F8 | 	byte	$06, $07, $07, $04, $03, $02, $03, $03, $01, $ff, $fe, $fe, $fe, $fb, $f9, $f8
1f55b     F9 FA FB FA 
1f55f     FA F9 F9 F9 
1f563     F9 FA FC FD 
1f567     FC FC FC FE | 	byte	$f9, $fa, $fb, $fa, $fa, $f9, $f9, $f9, $f9, $fa, $fc, $fd, $fc, $fc, $fc, $fe
1f56b     FF 00 01 02 
1f56f     02 02 03 03 
1f573     04 04 05 05 
1f577     05 04 05 04 | 	byte	$ff, $00, $01, $02, $02, $02, $03, $03, $04, $04, $05, $05, $05, $04, $05, $04
1f57b     03 03 03 03 
1f57f     02 01 FF FD 
1f583     FC FC FB FB 
1f587     FB FA FA FA | 	byte	$03, $03, $03, $03, $02, $01, $ff, $fd, $fc, $fc, $fb, $fb, $fb, $fa, $fa, $fa
1f58b     FA F9 F7 F7 
1f58f     F8 F9 F9 F9 
1f593     F9 F8 F8 F8 
1f597     FA FB FC FD | 	byte	$fa, $f9, $f7, $f7, $f8, $f9, $f9, $f9, $f9, $f8, $f8, $f8, $fa, $fb, $fc, $fd
1f59b     FC FC FE 00 
1f59f     02 03 03 03 
1f5a3     03 04 06 07 
1f5a7     09 09 09 08 | 	byte	$fc, $fc, $fe, $00, $02, $03, $03, $03, $03, $04, $06, $07, $09, $09, $09, $08
1f5ab     08 08 08 08 
1f5af     08          | 	byte	$08[5]
1f5b0     07 05 05 04 
1f5b4     02 00 FF FE 
1f5b8     FE FD FD FD 
1f5bc     FC FA F9 F9 | 	byte	$07, $05, $05, $04, $02, $00, $ff, $fe, $fe, $fd, $fd, $fd, $fc, $fa, $f9, $f9
1f5c0     FA FB FB FB 
1f5c4     FC FC FD FE 
1f5c8     FF 01 02 02 
1f5cc     03 04 05 07 | 	byte	$fa, $fb, $fb, $fb, $fc, $fc, $fd, $fe, $ff, $01, $02, $02, $03, $04, $05, $07
1f5d0     08 09 08 08 
1f5d4     07 07 08 07 
1f5d8     05 04 03 02 
1f5dc     02 00 00 FD | 	byte	$08, $09, $08, $08, $07, $07, $08, $07, $05, $04, $03, $02, $02, $00, $00, $fd
1f5e0     FC FB FA F9 
1f5e4     F8 F7 F7 F7 
1f5e8     F7 F7 F8 F9 
1f5ec     FB FC FD 00 | 	byte	$fc, $fb, $fa, $f9, $f8, $f7, $f7, $f7, $f7, $f7, $f8, $f9, $fb, $fc, $fd, $00
1f5f0     02 03 05 05 
1f5f4     07 07 08 08 
1f5f8     09 09 08 08 
1f5fc     06 05 05 05 | 	byte	$02, $03, $05, $05, $07, $07, $08, $08, $09, $09, $08, $08, $06, $05, $05, $05
1f600     02 00 FE FD 
1f604     FA F9 F8 F8 
1f608     F9 FA FC FD 
1f60c     FE 00 02 04 | 	byte	$02, $00, $fe, $fd, $fa, $f9, $f8, $f8, $f9, $fa, $fc, $fd, $fe, $00, $02, $04
1f610     06 07 07 06 
1f614     04 03 02 02 
1f618     02 01 01 01 
1f61c     00 00 FF FE | 	byte	$06, $07, $07, $06, $04, $03, $02, $02, $02, $01, $01, $01, $00, $00, $ff, $fe
1f620     FE FE FC FB 
1f624     FA FA FC 00 
1f628     00 02 02 04 
1f62c     04 05 03 00 | 	byte	$fe, $fe, $fc, $fb, $fa, $fa, $fc, $00, $00, $02, $02, $04, $04, $05, $03, $00
1f630     FD FA F8 F8 
1f634     F8 F9 FB FE 
1f638     00 01 03 03 
1f63c     02 00 FE FA | 	byte	$fd, $fa, $f8, $f8, $f8, $f9, $fb, $fe, $00, $01, $03, $03, $02, $00, $fe, $fa
1f640     F9 F7 F7 F9 
1f644     FD 02 06 0A 
1f648     0B 0B 07 01 
1f64c     FB F6 F1 EF | 	byte	$f9, $f7, $f7, $f9, $fd, $02, $06, $0a, $0b, $0b, $07, $01, $fb, $f6, $f1, $ef
1f650     F0 F4 FB 04 
1f654     0D 11 13 10 
1f658     07 FC F2 EA 
1f65c     E9 EC F3 FE | 	byte	$f0, $f4, $fb, $04, $0d, $11, $13, $10, $07, $fc, $f2, $ea, $e9, $ec, $f3, $fe
1f660     0A 13 16 17 
1f664     12 08 FB F0 
1f668     EA EA F2 01 
1f66c     0D 15 16 0E | 	byte	$0a, $13, $16, $17, $12, $08, $fb, $f0, $ea, $ea, $f2, $01, $0d, $15, $16, $0e
1f670     03 F9 F5 F6 
1f674     FE 06 0C 0D 
1f678     05 F7 EE E9 
1f67c     EE FC 0D 18 | 	byte	$03, $f9, $f5, $f6, $fe, $06, $0c, $0d, $05, $f7, $ee, $e9, $ee, $fc, $0d, $18
1f680     1A 0D F5 E1 
1f684     E1 F3 0A 17 
1f688     14 02 ED E1 
1f68c     E4 FB 17 26 | 	byte	$1a, $0d, $f5, $e1, $e1, $f3, $0a, $17, $14, $02, $ed, $e1, $e4, $fb, $17, $26
1f690     1A FB DE D3 
1f694     E3 04 22 23 
1f698     0A E6 D3 E3 
1f69c     0D 32 36 08 | 	byte	$1a, $fb, $de, $d3, $e3, $04, $22, $23, $0a, $e6, $d3, $e3, $0d, $32, $36, $08
1f6a0     CC C0 E9 24 
1f6a4     39 1B DF B8 
1f6a8     CC 11 4D 46 
1f6ac     FC B6 BE 05 | 	byte	$cc, $c0, $e9, $24, $39, $1b, $df, $b8, $cc, $11, $4d, $46, $fc, $b6, $be, $05
1f6b0     3D 2A EB CE 
1f6b4     EE 1A 18 FF 
1f6b8     F7 04 11 0F 
1f6bc     F3 E2 F7 1C | 	byte	$3d, $2a, $eb, $ce, $ee, $1a, $18, $ff, $f7, $04, $11, $0f, $f3, $e2, $f7, $1c
1f6c0     14 E9 DE FE 
1f6c4     1E 1C 01 F8 
1f6c8     06 05 F5 F4 
1f6cc     01 0A FB F1 | 	byte	$14, $e9, $de, $fe, $1e, $1c, $01, $f8, $06, $05, $f5, $f4, $01, $0a, $fb, $f1
1f6d0     F7 FE F8 FC 
1f6d4     11 1B 0F F0 
1f6d8     E5 FF 18 01 
1f6dc     EA FA 0F 08 | 	byte	$f7, $fe, $f8, $fc, $11, $1b, $0f, $f0, $e5, $ff, $18, $01, $ea, $fa, $0f, $08
1f6e0     F6 E5 FB 27 
1f6e4     2C F4 CB ED 
1f6e8     24 1E E1 C9 
1f6ec     FE 32 09 D3 | 	byte	$f6, $e5, $fb, $27, $2c, $f4, $cb, $ed, $24, $1e, $e1, $c9, $fe, $32, $09, $d3
1f6f0     E9 23 35 0E 
1f6f4     E0 E4 10 23 
1f6f8     0C F7 FD 05 
1f6fc     08 00 EF FF | 	byte	$e9, $23, $35, $0e, $e0, $e4, $10, $23, $0c, $f7, $fd, $05, $08, $00, $ef, $ff
1f700     25 26 FE E9 
1f704     F5 0B 0C F9 
1f708     EE F2 07 14 
1f70c     00 E5 F0 17 | 	byte	$25, $26, $fe, $e9, $f5, $0b, $0c, $f9, $ee, $f2, $07, $14, $00, $e5, $f0, $17
1f710     28 09 E5 EC 
1f714     18 23 FF E8 
1f718     F1 06 0F 0A 
1f71c     F9 EE 08 27 | 	byte	$28, $09, $e5, $ec, $18, $23, $ff, $e8, $f1, $06, $0f, $0a, $f9, $ee, $08, $27
1f720     1F F0 CC E0 
1f724     13 25 07 E1 
1f728     D7 F0 0D 13 
1f72c     08 07 0B 0B | 	byte	$1f, $f0, $cc, $e0, $13, $25, $07, $e1, $d7, $f0, $0d, $13, $08, $07, $0b, $0b
1f730     FD F5 FA 01 
1f734     FF F7 F8 03 
1f738     07 FE F6 FF 
1f73c     12 17 08 EA | 	byte	$fd, $f5, $fa, $01, $ff, $f7, $f8, $03, $07, $fe, $f6, $ff, $12, $17, $08, $ea
1f740     D9 ED 0E 1E 
1f744     15 FD E9 E4 
1f748     F1 07 1E 25 
1f74c     14 FA E6 DE | 	byte	$d9, $ed, $0e, $1e, $15, $fd, $e9, $e4, $f1, $07, $1e, $25, $14, $fa, $e6, $de
1f750     EC 06 17 17 
1f754     05 EF E2 E2 
1f758     F4 10 25 25 
1f75c     0C ED D7 D0 | 	byte	$ec, $06, $17, $17, $05, $ef, $e2, $e2, $f4, $10, $25, $25, $0c, $ed, $d7, $d0
1f760     E1 FE 18 22 
1f764     18 FC E0 D6 
1f768     E2 04 23 30 
1f76c     24 02 DD C8 | 	byte	$e1, $fe, $18, $22, $18, $fc, $e0, $d6, $e2, $04, $23, $30, $24, $02, $dd, $c8
1f770     CC E2 03 20 
1f774     2D 23 05 E5 
1f778     D5 D7 E9 02 
1f77c     17 1F 18 04 | 	byte	$cc, $e2, $03, $20, $2d, $23, $05, $e5, $d5, $d7, $e9, $02, $17, $1f, $18, $04
1f780     F0 E5 E3 EA 
1f784     F7 04 0E 14 
1f788     19 1A 16 0E 
1f78c     00 EF E2 DE | 	byte	$f0, $e5, $e3, $ea, $f7, $04, $0e, $14, $19, $1a, $16, $0e, $00, $ef, $e2, $de
1f790     E3 F0 01 0E 
1f794     15 16 11 0A 
1f798     02 F9 F2 ED 
1f79c     EE F3 FA 02 | 	byte	$e3, $f0, $01, $0e, $15, $16, $11, $0a, $02, $f9, $f2, $ed, $ee, $f3, $fa, $02
1f7a0     08 0E 10 10 
1f7a4     0C 02 F9 F4 
1f7a8     F3 F7 FB FF 
1f7ac     03 06 07 07 | 	byte	$08, $0e, $10, $10, $0c, $02, $f9, $f4, $f3, $f7, $fb, $ff, $03, $06, $07, $07
1f7b0     03 FF FC F8 
1f7b4     F6 F6 F9 FE 
1f7b8     03 06 08 09 
1f7bc     09 08 05 FF | 	byte	$03, $ff, $fc, $f8, $f6, $f6, $f9, $fe, $03, $06, $08, $09, $09, $08, $05, $ff
1f7c0     F8 F3 F1 F1 
1f7c4     F2 F3 F5 F7 
1f7c8     FD 02 06 09 
1f7cc     0A 0A 09 07 | 	byte	$f8, $f3, $f1, $f1, $f2, $f3, $f5, $f7, $fd, $02, $06, $09, $0a, $0a, $09, $07
1f7d0     07 06 04 FF 
1f7d4     FC F9 F9 F8 
1f7d8     F6 F5 F6 F9 
1f7dc     FB FD 00 04 | 	byte	$07, $06, $04, $ff, $fc, $f9, $f9, $f8, $f6, $f5, $f6, $f9, $fb, $fd, $00, $04
1f7e0     08 09 09 09 
1f7e4     0A 0B 0B 07 
1f7e8     04 00 FE FB 
1f7ec     F9 F8 F8 F7 | 	byte	$08, $09, $09, $09, $0a, $0b, $0b, $07, $04, $00, $fe, $fb, $f9, $f8, $f8, $f7
1f7f0     F6 F6 F8 FB 
1f7f4     FF 01 05 08 
1f7f8     0B 0D 10 11 
1f7fc     12 12 11 10 | 	byte	$f6, $f6, $f8, $fb, $ff, $01, $05, $08, $0b, $0d, $10, $11, $12, $12, $11, $10
1f800     0F 0D 0A 08 
1f804     06 01 FD FB 
1f808     FA F9 F5 F4 
1f80c     F4 F5 F7 F8 | 	byte	$0f, $0d, $0a, $08, $06, $01, $fd, $fb, $fa, $f9, $f5, $f4, $f4, $f5, $f7, $f8
1f810     F8 F9 FB FE 
1f814     FF FE 00 03 
1f818     06 07 06 07 
1f81c     08 08 07 07 | 	byte	$f8, $f9, $fb, $fe, $ff, $fe, $00, $03, $06, $07, $06, $07, $08, $08, $07, $07
1f820     08 08 06 03 
1f824     01 00 FF FF 
1f828     FE FC FD FC 
1f82c     FB F9 F7 F8 | 	byte	$08, $08, $06, $03, $01, $00, $ff, $ff, $fe, $fc, $fd, $fc, $fb, $f9, $f7, $f8
1f830     F9 FA FA F8 
1f834     F8 F8 FA FB 
1f838     FC FC FE FE 
1f83c     FD FD FE 00 | 	byte	$f9, $fa, $fa, $f8, $f8, $f8, $fa, $fb, $fc, $fc, $fe, $fe, $fd, $fd, $fe, $00
1f840     00 00 00 01 
1f844     02 02 03 04 
1f848     04 04 05 04 
1f84c     03 01 02 03 | 	byte	$00, $00, $00, $01, $02, $02, $03, $04, $04, $04, $05, $04, $03, $01, $02, $03
1f850     03 02 02 00 
1f854     FF FE FF 00 
1f858     00 01 FF FE 
1f85c     FC FC FC FC | 	byte	$03, $02, $02, $00, $ff, $fe, $ff, $00, $00, $01, $ff, $fe, $fc, $fc, $fc, $fc
1f860     FC FE FF FF 
1f864     FF FE FE FD 
1f868     FE FF 00 00 
1f86c     01 01 FF FE | 	byte	$fc, $fe, $ff, $ff, $ff, $fe, $fe, $fd, $fe, $ff, $00, $00, $01, $01, $ff, $fe
1f870     FE FE 00 01 
1f874     00 00 FF FF 
1f878     00 01 02 02 
1f87c     01 00 FF 00 | 	byte	$fe, $fe, $00, $01, $00, $00, $ff, $ff, $00, $01, $02, $02, $01, $00, $ff, $00
1f880     01 02 02 01 
1f884     01 FF FF FF 
1f888     FF FF FF FF 
1f88c     FE FD FD FC | 	byte	$01, $02, $02, $01, $01, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $fe, $fd, $fd, $fc
1f890     FB FA FB FB 
1f894     FB FC FB FB 
1f898     FB FC FD FE 
1f89c     FF 00 00 01 | 	byte	$fb, $fa, $fb, $fb, $fb, $fc, $fb, $fb, $fb, $fc, $fd, $fe, $ff, $00, $00, $01
1f8a0     01 01 02 01 
1f8a4     01 02 02 02 
1f8a8     02 02 03 03 
1f8ac     03 01 01 00 | 	byte	$01, $01, $02, $01, $01, $02, $02, $02, $02, $02, $03, $03, $03, $01, $01, $00
1f8b0     FF FE FE FE 
1f8b4     FE FE FF 00 
1f8b8     00 00 00 01 
1f8bc     01 02 03 03 | 	byte	$ff, $fe, $fe, $fe, $fe, $fe, $ff, $00, $00, $00, $00, $01, $01, $02, $03, $03
1f8c0     04 04 03 03 
1f8c4     03 04 03 03 
1f8c8     02 03 03 03 
1f8cc     02 02 02 01 | 	byte	$04, $04, $03, $03, $03, $04, $03, $03, $02, $03, $03, $03, $02, $02, $02, $01
1f8d0     00 FF FF FF 
1f8d4     FF FF FE FE 
1f8d8     FE FF FF FF 
1f8dc     FF FF FF FE | 	byte	$00, $ff, $ff, $ff, $ff, $ff, $fe, $fe, $fe, $ff, $ff, $ff, $ff, $ff, $ff, $fe
1f8e0     FC FC FD FD 
1f8e4     FD FE FE FF 
1f8e8     FF FF FE FD 
1f8ec     FC FB FA F9 | 	byte	$fc, $fc, $fd, $fd, $fd, $fe, $fe, $ff, $ff, $ff, $fe, $fd, $fc, $fb, $fa, $f9
1f8f0     F9 FA FB FD 
1f8f4     00 02 04 05 
1f8f8     05 05 05 05 
1f8fc     02 FE F9 F6 | 	byte	$f9, $fa, $fb, $fd, $00, $02, $04, $05, $05, $05, $05, $05, $02, $fe, $f9, $f6
1f900     F4 F4 F5 F6 
1f904     F9 FD 02 05 
1f908     08 0A 0A 09 
1f90c     07 03 01 FE | 	byte	$f4, $f4, $f5, $f6, $f9, $fd, $02, $05, $08, $0a, $0a, $09, $07, $03, $01, $fe
1f910     FD FD FF 02 
1f914     03 05 06 05 
1f918     05 06 04 01 
1f91c     FF FC FB FD | 	byte	$fd, $fd, $ff, $02, $03, $05, $06, $05, $05, $06, $04, $01, $ff, $fc, $fb, $fd
1f920     01 05 08 0B 
1f924     0A 08 05 02 
1f928     00 FE FC FA 
1f92c     F9 F8 FB 02 | 	byte	$01, $05, $08, $0b, $0a, $08, $05, $02, $00, $fe, $fc, $fa, $f9, $f8, $fb, $02
1f930     08 0C 0D 08 
1f934     02 FC F6 F4 
1f938     F5 FA FE 02 
1f93c     03 04 05 03 | 	byte	$08, $0c, $0d, $08, $02, $fc, $f6, $f4, $f5, $fa, $fe, $02, $03, $04, $05, $03
1f940     01 FE FA F7 
1f944     F7 FB 00 07 
1f948     08 04 FC F6 
1f94c     F8 02 09 0D | 	byte	$01, $fe, $fa, $f7, $f7, $fb, $00, $07, $08, $04, $fc, $f6, $f8, $02, $09, $0d
1f950     09 02 FC F5 
1f954     F3 F9 01 05 
1f958     01 F9 F6 FD 
1f95c     09 11 10 01 | 	byte	$09, $02, $fc, $f5, $f3, $f9, $01, $05, $01, $f9, $f6, $fd, $09, $11, $10, $01
1f960     F0 EB F6 07 
1f964     11 0B F6 E6 
1f968     EC 07 1E 1D 
1f96c     01 DF D6 F0 | 	byte	$f0, $eb, $f6, $07, $11, $0b, $f6, $e6, $ec, $07, $1e, $1d, $01, $df, $d6, $f0
1f970     1D 32 1C E3 
1f974     BC CD 14 4C 
1f978     40 EC B5 D4 
1f97c     12 34 19 DE | 	byte	$1d, $32, $1c, $e3, $bc, $cd, $14, $4c, $40, $ec, $b5, $d4, $12, $34, $19, $de
1f980     C2 DE 19 2C 
1f984     02 D7 F3 2A 
1f988     23 E8 C3 E8 
1f98c     23 22 EC D2 | 	byte	$c2, $de, $19, $2c, $02, $d7, $f3, $2a, $23, $e8, $c3, $e8, $23, $22, $ec, $d2
1f990     F7 17 05 E7 
1f994     01 2F 1B E7 
1f998     CD EF 23 13 
1f99c     E1 E9 23 1C | 	byte	$f7, $17, $05, $e7, $01, $2f, $1b, $e7, $cd, $ef, $23, $13, $e1, $e9, $23, $1c
1f9a0     CF D0 31 52 
1f9a4     FE C1 EE 24 
1f9a8     19 DE D8 1C 
1f9ac     37 ED BB FE | 	byte	$cf, $d0, $31, $52, $fe, $c1, $ee, $24, $19, $de, $d8, $1c, $37, $ed, $bb, $fe
1f9b0     41 23 E2 ED 
1f9b4     17 FE D8 05 
1f9b8     32 14 DE EB 
1f9bc     13 09 ED 0C | 	byte	$41, $23, $e2, $ed, $17, $fe, $d8, $05, $32, $14, $de, $eb, $13, $09, $ed, $0c
1f9c0     38 0A D6 F5 
1f9c4     17 04 E1 EA 
1f9c8     10 1E F6 DC 
1f9cc     FB 1C 1E 08 | 	byte	$38, $0a, $d6, $f5, $17, $04, $e1, $ea, $10, $1e, $f6, $dc, $fb, $1c, $1e, $08
1f9d0     F2 EC 04 14 
1f9d4     F9 E5 00 1C 
1f9d8     17 EC DD FE 
1f9dc     1B 1A F2 DB | 	byte	$f2, $ec, $04, $14, $f9, $e5, $00, $1c, $17, $ec, $dd, $fe, $1b, $1a, $f2, $db
1f9e0     FF 21 00 DC 
1f9e4     EA 18 1B F0 
1f9e8     DA 00 22 20 
1f9ec     00 EC 04 11 | 	byte	$ff, $21, $00, $dc, $ea, $18, $1b, $f0, $da, $00, $22, $20, $00, $ec, $04, $11
1f9f0     01 EF F0 F8 
1f9f4     FB FC F8 FB 
1f9f8     0C 0E 0B 0C 
1f9fc     09 02 FB 01 | 	byte	$01, $ef, $f0, $f8, $fb, $fc, $f8, $fb, $0c, $0e, $0b, $0c, $09, $02, $fb, $01
1fa00     0C 07 FC FE 
1fa04     06 06 F7 F4 
1fa08     09 22 18 F3 
1fa0c     E3 F6 10 17 | 	byte	$0c, $07, $fc, $fe, $06, $06, $f7, $f4, $09, $22, $18, $f3, $e3, $f6, $10, $17
1fa10     00 E9 F2 04 
1fa14     09 01 F9 FC 
1fa18     0F 1C 14 F9 
1fa1c     E5 E6 F8 07 | 	byte	$00, $e9, $f2, $04, $09, $01, $f9, $fc, $0f, $1c, $14, $f9, $e5, $e6, $f8, $07
1fa20     0B 07 FE F5 
1fa24     EF F5 00 0A 
1fa28     0E 09 F9 ED 
1fa2c     ED FB 0C 12 | 	byte	$0b, $07, $fe, $f5, $ef, $f5, $00, $0a, $0e, $09, $f9, $ed, $ed, $fb, $0c, $12
1fa30     0B F7 E9 EB 
1fa34     FA 09 13 17 
1fa38     12 00 ED E0 
1fa3c     E6 FE 10 0D | 	byte	$0b, $f7, $e9, $eb, $fa, $09, $13, $17, $12, $00, $ed, $e0, $e6, $fe, $10, $0d
1fa40     FD EE EC F6 
1fa44     04 0E 13 12 
1fa48     07 F6 EB E9 
1fa4c     F4 06 12 13 | 	byte	$fd, $ee, $ec, $f6, $04, $0e, $13, $12, $07, $f6, $eb, $e9, $f4, $06, $12, $13
1fa50     09 F9 EA E6 
1fa54     F1 04 17 1F 
1fa58     1C 0C F9 EB 
1fa5c     E4 EA F9 08 | 	byte	$09, $f9, $ea, $e6, $f1, $04, $17, $1f, $1c, $0c, $f9, $eb, $e4, $ea, $f9, $08
1fa60     0F 0F 06 FC 
1fa64     F4 F3 F8 00 
1fa68     06 07 05 02 
1fa6c     FD FA F7 F6 | 	byte	$0f, $0f, $06, $fc, $f4, $f3, $f8, $00, $06, $07, $05, $02, $fd, $fa, $f7, $f6
1fa70     F9 FD 02 05 
1fa74     09 0C 0E 0A 
1fa78     00 F4 EB E7 
1fa7c     E8 EE F6 FE | 	byte	$f9, $fd, $02, $05, $09, $0c, $0e, $0a, $00, $f4, $eb, $e7, $e8, $ee, $f6, $fe
1fa80     02 03 00 FE 
1fa84     FB FB FD 00 
1fa88     03 07 09 06 
1fa8c     01 FB F5 F1 | 	byte	$02, $03, $00, $fe, $fb, $fb, $fd, $00, $03, $07, $09, $06, $01, $fb, $f5, $f1
1fa90     F0 F1 F3 F6 
1fa94     F9 FE 03 08 
1fa98     0B 09 06 01 
1fa9c     FD F9 F8 FA | 	byte	$f0, $f1, $f3, $f6, $f9, $fe, $03, $08, $0b, $09, $06, $01, $fd, $f9, $f8, $fa
1faa0     FA F8 F9 FF 
1faa4     04 09 0B 0E 
1faa8     11 10 0E 09 
1faac     05 FF F9 F3 | 	byte	$fa, $f8, $f9, $ff, $04, $09, $0b, $0e, $11, $10, $0e, $09, $05, $ff, $f9, $f3
1fab0     F0 ED EC EF 
1fab4     F1 F7 FD 05 
1fab8     0D 13 17 1B 
1fabc     1D 1A 14 0D | 	byte	$f0, $ed, $ec, $ef, $f1, $f7, $fd, $05, $0d, $13, $17, $1b, $1d, $1a, $14, $0d
1fac0     06 FF F5 EC 
1fac4     E5 E0 DE DF 
1fac8     E5 EE F7 00 
1facc     08 11 18 1E | 	byte	$06, $ff, $f5, $ec, $e5, $e0, $de, $df, $e5, $ee, $f7, $00, $08, $11, $18, $1e
1fad0     21 23 23 1E 
1fad4     17 10 0A 01 
1fad8     F8 EF E9 E3 
1fadc     E0 DF E1 E4 | 	byte	$21, $23, $23, $1e, $17, $10, $0a, $01, $f8, $ef, $e9, $e3, $e0, $df, $e1, $e4
1fae0     E7 EC F2 F9 
1fae4     00 05 0C 11 
1fae8     15 17 19 1B 
1faec     1A 17 14 11 | 	byte	$e7, $ec, $f2, $f9, $00, $05, $0c, $11, $15, $17, $19, $1b, $1a, $17, $14, $11
1faf0     0C 07 01 FE 
1faf4     FB F8 F3 F1 
1faf8     EF ED EB EB 
1fafc     ED EF F1 F2 | 	byte	$0c, $07, $01, $fe, $fb, $f8, $f3, $f1, $ef, $ed, $eb, $eb, $ed, $ef, $f1, $f2
1fb00     F5 F8 FC 01 
1fb04     04 06 09 0A 
1fb08     0B 0A 0A 0B 
1fb0c     0C 0D 0C 0C | 	byte	$f5, $f8, $fc, $01, $04, $06, $09, $0a, $0b, $0a, $0a, $0b, $0c, $0d, $0c, $0c
1fb10     0C 0B 09 08 
1fb14     08 08 07 05 
1fb18     03 02 00 FF 
1fb1c     FE FD FD FC | 	byte	$0c, $0b, $09, $08, $08, $08, $07, $05, $03, $02, $00, $ff, $fe, $fd, $fd, $fc
1fb20     FB FA FB FC 
1fb24     FC FD FC FB 
1fb28     FB FB FD FE 
1fb2c     FF FF FF 00 | 	byte	$fb, $fa, $fb, $fc, $fc, $fd, $fc, $fb, $fb, $fb, $fd, $fe, $ff, $ff, $ff, $00
1fb30     00 01 02 03 
1fb34     04 04 04 03 
1fb38     04 04 04 03 
1fb3c     04 05 03 02 | 	byte	$00, $01, $02, $03, $04, $04, $04, $03, $04, $04, $04, $03, $04, $05, $03, $02
1fb40     01 01 00 00 
1fb44     FF FD FC FB 
1fb48     FA FA FA F8 
1fb4c     F8 F9 FA FA | 	byte	$01, $01, $00, $00, $ff, $fd, $fc, $fb, $fa, $fa, $fa, $f8, $f8, $f9, $fa, $fa
1fb50     FA FA FA FA 
1fb54     FC FE 00 00 
1fb58     01 01 01 02 
1fb5c     02 02 02 02 | 	byte	$fa, $fa, $fa, $fa, $fc, $fe, $00, $00, $01, $01, $01, $02, $02, $02, $02, $02
1fb60     02 02 02 02 
1fb64     02          | 	byte	$02[5]
1fb65     03 03 03 03 
1fb69     02 01 01 01 
1fb6d     00 FF FF FD 
1fb71     FC FB FB FB | 	byte	$03, $03, $03, $03, $02, $01, $01, $01, $00, $ff, $ff, $fd, $fc, $fb, $fb, $fb
1fb75     FB FB FC FD 
1fb79     FE FE FE FE 
1fb7d     FF FF 00 01 
1fb81     01 02 02 02 | 	byte	$fb, $fb, $fc, $fd, $fe, $fe, $fe, $fe, $ff, $ff, $00, $01, $01, $02, $02, $02
1fb85     03 02 03 04 
1fb89     04 04 03 03 
1fb8d     02 01 FF FF 
1fb91     FE FE FD FC | 	byte	$03, $02, $03, $04, $04, $04, $03, $03, $02, $01, $ff, $ff, $fe, $fe, $fd, $fc
1fb95     FB FA FA F9 
1fb99     F9 F9 F8 F7 
1fb9d     F7 F7 F8 F9 
1fba1     FA FC FD FF | 	byte	$fb, $fa, $fa, $f9, $f9, $f9, $f8, $f7, $f7, $f7, $f8, $f9, $fa, $fc, $fd, $ff
1fba5     01 03 04 05 
1fba9     07 07 07 05 
1fbad     03 01 00 FF 
1fbb1     FE FC FA F8 | 	byte	$01, $03, $04, $05, $07, $07, $07, $05, $03, $01, $00, $ff, $fe, $fc, $fa, $f8
1fbb5     F8 F8 F8 F8 
1fbb9     F8 F8       | 	byte	$f8[6]
1fbbb     F9 FA FC FF 
1fbbf     01 03 06 07 
1fbc3     0A 0B 0C 0B 
1fbc7     0A 07 05 03 | 	byte	$f9, $fa, $fc, $ff, $01, $03, $06, $07, $0a, $0b, $0c, $0b, $0a, $07, $05, $03
1fbcb     FF FC FA F9 
1fbcf     F9 FA FB FD 
1fbd3     FE 01 04 05 
1fbd7     07 09 07 05 | 	byte	$ff, $fc, $fa, $f9, $f9, $fa, $fb, $fd, $fe, $01, $04, $05, $07, $09, $07, $05
1fbdb     02 FE FC FB 
1fbdf     FB FE FF 00 
1fbe3     02 04 05 06 
1fbe7     06 04 01 FE | 	byte	$02, $fe, $fc, $fb, $fb, $fe, $ff, $00, $02, $04, $05, $06, $06, $04, $01, $fe
1fbeb     FC F9 F8 F9 
1fbef     FB FF 02 05 
1fbf3     07 09 09 06 
1fbf7     02 FD F9 F6 | 	byte	$fc, $f9, $f8, $f9, $fb, $ff, $02, $05, $07, $09, $09, $06, $02, $fd, $f9, $f6
1fbfb     F5 F8 FF 06 
1fbff     0C 0E 0B 04 
1fc03     FC F6 F2 F1 
1fc07     F6 FB 01 06 | 	byte	$f5, $f8, $ff, $06, $0c, $0e, $0b, $04, $fc, $f6, $f2, $f1, $f6, $fb, $01, $06
1fc0b     0A 0B 09 03 
1fc0f     FB F5 F1 F3 
1fc13     FB 04 0C 10 
1fc17     0D 05 FB F6 | 	byte	$0a, $0b, $09, $03, $fb, $f5, $f1, $f3, $fb, $04, $0c, $10, $0d, $05, $fb, $f6
1fc1b     F7 FE 07 0C 
1fc1f     0D 07 00 FB 
1fc23     F8 F9 FE 02 
1fc27     02 01 00 00 | 	byte	$f7, $fe, $07, $0c, $0d, $07, $00, $fb, $f8, $f9, $fe, $02, $02, $01, $00, $00
1fc2b     04 05 02 00 
1fc2f     00 03 04 01 
1fc33     FC F7 F7 FD 
1fc37     07 10 11 06 | 	byte	$04, $05, $02, $00, $00, $03, $04, $01, $fc, $f7, $f7, $fd, $07, $10, $11, $06
1fc3b     F8 F1 F3 FC 
1fc3f     06 0A 05 F7 
1fc43     EC ED FC 14 
1fc47     21 11 E6 CD | 	byte	$f8, $f1, $f3, $fc, $06, $0a, $05, $f7, $ec, $ed, $fc, $14, $21, $11, $e6, $cd
1fc4b     E2 17 34 15 
1fc4f     D3 BF EB 22 
1fc53     29 07 EF E9 
1fc57     F5 04 09 09 | 	byte	$e2, $17, $34, $15, $d3, $bf, $eb, $22, $29, $07, $ef, $e9, $f5, $04, $09, $09
1fc5b     FC F1 FA 01 
1fc5f     F8 EC F2 21 
1fc63     38 04 C9 D6 
1fc67     29 3F ED BB | 	byte	$fc, $f1, $fa, $01, $f8, $ec, $f2, $21, $38, $04, $c9, $d6, $29, $3f, $ed, $bb
1fc6b     F5 38 15 C4 
1fc6f     CB 25 52 03 
1fc73     BC F1 40 2A 
1fc77     DA D7 19 2A | 	byte	$f5, $38, $15, $c4, $cb, $25, $52, $03, $bc, $f1, $40, $2a, $da, $d7, $19, $2a
1fc7b     EC CD 07 33 
1fc7f     17 E9 E5 17 
1fc83     30 00 DB FD 
1fc87     23 03 D9 F6 | 	byte	$ec, $cd, $07, $33, $17, $e9, $e5, $17, $30, $00, $db, $fd, $23, $03, $d9, $f6
1fc8b     1B 09 DE F8 
1fc8f     22 FA DC F8 
1fc93     0E 05 F4 F1 
1fc97     05 02 EB F3 | 	byte	$1b, $09, $de, $f8, $22, $fa, $dc, $f8, $0e, $05, $f4, $f1, $05, $02, $eb, $f3
1fc9b     13 0D 00 FC 
1fc9f     FE FF ED 02 
1fca3     15 F6 E6 FC 
1fca7     0B FB E4 0A | 	byte	$13, $0d, $00, $fc, $fe, $ff, $ed, $02, $15, $f6, $e6, $fc, $0b, $fb, $e4, $0a
1fcab     35 03 CD FE 
1fcaf     2B 01 D7 F4 
1fcb3     16 03 E4 EF 
1fcb7     13 0D FD 0A | 	byte	$35, $03, $cd, $fe, $2b, $01, $d7, $f4, $16, $03, $e4, $ef, $13, $0d, $fd, $0a
1fcbb     14 FC E0 FF 
1fcbf     25 04 D6 F5 
1fcc3     22 FD D5 02 
1fcc7     30 13 E0 F0 | 	byte	$14, $fc, $e0, $ff, $25, $04, $d6, $f5, $22, $fd, $d5, $02, $30, $13, $e0, $f0
1fccb     2E 19 D2 DB 
1fccf     1D 29 EE D3 
1fcd3     02 1E FA E8 
1fcd7     0C 22 11 E8 | 	byte	$2e, $19, $d2, $db, $1d, $29, $ee, $d3, $02, $1e, $fa, $e8, $0c, $22, $11, $e8
1fcdb     DD 02 1F 0A 
1fcdf     E6 E9 0B 13 
1fce3     F6 DE F3 28 
1fce7     27 EE CC EE | 	byte	$dd, $02, $1f, $0a, $e6, $e9, $0b, $13, $f6, $de, $f3, $28, $27, $ee, $cc, $ee
1fceb     20 25 F4 CF 
1fcef     E7 19 1E F5 
1fcf3     DC F3 22 35 
1fcf7     15 E1 D2 F6 | 	byte	$20, $25, $f4, $cf, $e7, $19, $1e, $f5, $dc, $f3, $22, $35, $15, $e1, $d2, $f6
1fcfb     22 29 06 DD 
1fcff     D2 F0 19 26 
1fd03     0D F3 F1 FF 
1fd07     0F 13 06 F8 | 	byte	$22, $29, $06, $dd, $d2, $f0, $19, $26, $0d, $f3, $f1, $ff, $0f, $13, $06, $f8
1fd0b     F5 04 10 0B 
1fd0f     F8 E7 E8 FF 
1fd13     1C 2A 23 06 
1fd17     E6 DC E9 02 | 	byte	$f5, $04, $10, $0b, $f8, $e7, $e8, $ff, $1c, $2a, $23, $06, $e6, $dc, $e9, $02
1fd1b     14 17 0C FE 
1fd1f     F3 EE F4 09 
1fd23     1F 24 12 F3 
1fd27     DC D8 ED 0E | 	byte	$14, $17, $0c, $fe, $f3, $ee, $f4, $09, $1f, $24, $12, $f3, $dc, $d8, $ed, $0e
1fd2b     24 24 0B E4 
1fd2f     C9 C9 E5 12 
1fd33     34 3C 21 F4 
1fd37     D0 C4 D4 F8 | 	byte	$24, $24, $0b, $e4, $c9, $c9, $e5, $12, $34, $3c, $21, $f4, $d0, $c4, $d4, $f8
1fd3b     20 34 2D 0B 
1fd3f     E2 C9 C8 E4 
1fd43     11 38 42 2C 
1fd47     06 DF C9 C4 | 	byte	$20, $34, $2d, $0b, $e2, $c9, $c8, $e4, $11, $38, $42, $2c, $06, $df, $c9, $c4
1fd4b     D7 FB 20 35 
1fd4f     34 1E FF E4 
1fd53     D8 DA E8 FB 
1fd57     0F 1D 22 1A | 	byte	$d7, $fb, $20, $35, $34, $1e, $ff, $e4, $d8, $da, $e8, $fb, $0f, $1d, $22, $1a
1fd5b     0D FE F1 E5 
1fd5f     E2 E5 F4 03 
1fd63     12 1E 25 23 
1fd67     16 04 F3 E5 | 	byte	$0d, $fe, $f1, $e5, $e2, $e5, $f4, $03, $12, $1e, $25, $23, $16, $04, $f3, $e5
1fd6b     DC D8 DD E9 
1fd6f     F7 04 0F 18 
1fd73     1D 20 1B 13 
1fd77     09 FD F2 E8 | 	byte	$dc, $d8, $dd, $e9, $f7, $04, $0f, $18, $1d, $20, $1b, $13, $09, $fd, $f2, $e8
1fd7b     E2 E1 E3 E8 
1fd7f     F1 FB 06 11 
1fd83     1A 21 23 1D 
1fd87     13 07 F9 EA | 	byte	$e2, $e1, $e3, $e8, $f1, $fb, $06, $11, $1a, $21, $23, $1d, $13, $07, $f9, $ea
1fd8b     DD D5 D1 D1 
1fd8f     D8 E2 ED FB 
1fd93     0B 18 21 26 
1fd97     28 26 1E 10 | 	byte	$dd, $d5, $d1, $d1, $d8, $e2, $ed, $fb, $0b, $18, $21, $26, $28, $26, $1e, $10
1fd9b     02 F4 E8 DD 
1fd9f     D5 D3 D2 D5 
1fda3     DC E7 F6 06 
1fda7     13 1F 27 2C | 	byte	$02, $f4, $e8, $dd, $d5, $d3, $d2, $d5, $dc, $e7, $f6, $06, $13, $1f, $27, $2c
1fdab     2D 2C 27 20 
1fdaf     16 09 FB F0 
1fdb3     E7 E0 DA D8 
1fdb7     DA E0 E7 ED | 	byte	$2d, $2c, $27, $20, $16, $09, $fb, $f0, $e7, $e0, $da, $d8, $da, $e0, $e7, $ed
1fdbb     F7 00 08 0D 
1fdbf     15 1B 1D 1D 
1fdc3     1B 1C 18 13 
1fdc7     0D 0A 06 01 | 	byte	$f7, $00, $08, $0d, $15, $1b, $1d, $1d, $1b, $1c, $18, $13, $0d, $0a, $06, $01
1fdcb     FC F9 F6 F3 
1fdcf     EF ED ED EF 
1fdd3     F1 F2 F3 F5 
1fdd7     F8 FA FC 00 | 	byte	$fc, $f9, $f6, $f3, $ef, $ed, $ed, $ef, $f1, $f2, $f3, $f5, $f8, $fa, $fc, $00
1fddb     03 06 06 06 
1fddf     08 0A 0C 0C 
1fde3     0C 0C 0A 08 
1fde7     07 05 03 04 | 	byte	$03, $06, $06, $06, $08, $0a, $0c, $0c, $0c, $0c, $0a, $08, $07, $05, $03, $04
1fdeb     05 03 00 FC 
1fdef     FB FD FE FE 
1fdf3     FF FF FD FA 
1fdf7     FA FB FB F9 | 	byte	$05, $03, $00, $fc, $fb, $fd, $fe, $fe, $ff, $ff, $fd, $fa, $fa, $fb, $fb, $f9
1fdfb     F9 FB FC FA 
1fdff     FB FD FF 00 
1fe03     00 01 02 02 
1fe07     02 03 04 06 | 	byte	$f9, $fb, $fc, $fa, $fb, $fd, $ff, $00, $00, $01, $02, $02, $02, $03, $04, $06
1fe0b     06 05 05 06 
1fe0f     06 06 05 06 
1fe13     07 06 04 02 
1fe17     01 01 02 01 | 	byte	$06, $05, $05, $06, $06, $06, $05, $06, $07, $06, $04, $02, $01, $01, $02, $01
1fe1b     00 FF FF FD 
1fe1f     FC FB FB FC 
1fe23     FC FE FF FD 
1fe27     FD FE 00 03 | 	byte	$00, $ff, $ff, $fd, $fc, $fb, $fb, $fc, $fc, $fe, $ff, $fd, $fd, $fe, $00, $03
1fe2b     05 06 07 08 
1fe2f     07 08 09 0A 
1fe33     0B 0B 0C 0C 
1fe37     09 07 04 02 | 	byte	$05, $06, $07, $08, $07, $08, $09, $0a, $0b, $0b, $0c, $0c, $09, $07, $04, $02
1fe3b     01 01 00 FF 
1fe3f     FC FA F8 F8 
1fe43     F7 F7 F6 F7 
1fe47     F7 F6 F5 F5 | 	byte	$01, $01, $00, $ff, $fc, $fa, $f8, $f8, $f7, $f7, $f6, $f7, $f7, $f6, $f5, $f5
1fe4b     F6 F7 F7 F7 
1fe4f     F9 FA FB FC 
1fe53     FE 01 05 07 
1fe57     07 06 05 05 | 	byte	$f6, $f7, $f7, $f7, $f9, $fa, $fb, $fc, $fe, $01, $05, $07, $07, $06, $05, $05
1fe5b     04 04 03 02 
1fe5f     01 01 FE FC 
1fe63     FA FA FC FC 
1fe67     FB F9 F9 F9 | 	byte	$04, $04, $03, $02, $01, $01, $fe, $fc, $fa, $fa, $fc, $fc, $fb, $f9, $f9, $f9
1fe6b     F8 F7 F9 FC 
1fe6f     FF 00 02 05 
1fe73     06 07 07 07 
1fe77     08 09 09 07 | 	byte	$f8, $f7, $f9, $fc, $ff, $00, $02, $05, $06, $07, $07, $07, $08, $09, $09, $07
1fe7b     03 00 FD FB 
1fe7f     FA F8 F6 F5 
1fe83     F6 F6 F8 F9 
1fe87     FB FC FD FE | 	byte	$03, $00, $fd, $fb, $fa, $f8, $f6, $f5, $f6, $f6, $f8, $f9, $fb, $fc, $fd, $fe
1fe8b     FF 00 01 03 
1fe8f     03 06 07 08 
1fe93     07 08 08 06 
1fe97     04 00 FD FA | 	byte	$ff, $00, $01, $03, $03, $06, $07, $08, $07, $08, $08, $06, $04, $00, $fd, $fa
1fe9b     F7 F5 F4 F3 
1fe9f     F3 F6 F9 FC 
1fea3     FF 02 04 06 
1fea7     07 07 05 02 | 	byte	$f7, $f5, $f4, $f3, $f3, $f6, $f9, $fc, $ff, $02, $04, $06, $07, $07, $05, $02
1feab     00 FB F9 F7 
1feaf     F7 F8 F9 FA 
1feb3     FC 00 02 04 
1feb7     04 04 03 02 | 	byte	$00, $fb, $f9, $f7, $f7, $f8, $f9, $fa, $fc, $00, $02, $04, $04, $04, $03, $02
1febb     00 FF 00 00 
1febf     01 04 05 06 
1fec3     06 05 04 02 
1fec7     00 FE FD FB | 	byte	$00, $ff, $00, $00, $01, $04, $05, $06, $06, $05, $04, $02, $00, $fe, $fd, $fb
1fecb     FB FD 00 06 
1fecf     09 0C 0D 0C 
1fed3     07 01 FC F8 
1fed7     F5 F4 F7 FE | 	byte	$fb, $fd, $00, $06, $09, $0c, $0d, $0c, $07, $01, $fc, $f8, $f5, $f4, $f7, $fe
1fedb     04 0A 0E 10 
1fedf     0C 03 FA F3 
1fee3     F0 F0 F5 FB 
1fee7     00 04 06 07 | 	byte	$04, $0a, $0e, $10, $0c, $03, $fa, $f3, $f0, $f0, $f5, $fb, $00, $04, $06, $07
1feeb     07 05 02 FD 
1feef     F7 F4 F6 FB 
1fef3     02 07 08 01 
1fef7     F7 EF EE F5 | 	byte	$07, $05, $02, $fd, $f7, $f4, $f6, $fb, $02, $07, $08, $01, $f7, $ef, $ee, $f5
1fefb     04 11 17 11 
1feff     FF ED E6 EC 
1ff03     FC 0A 10 0E 
1ff07     01 F3 ED F8 | 	byte	$04, $11, $17, $11, $ff, $ed, $e6, $ec, $fc, $0a, $10, $0e, $01, $f3, $ed, $f8
1ff0b     0C 17 12 00 
1ff0f     EF E8 F4 05 
1ff13     0E 0A FB EE 
1ff17     EC F9 0B 14 | 	byte	$0c, $17, $12, $00, $ef, $e8, $f4, $05, $0e, $0a, $fb, $ee, $ec, $f9, $0b, $14
1ff1b     0B FA F1 F3 
1ff1f     01 0C 0B 00 
1ff23     F4 F2 03 1D 
1ff27     28 17 F7 E0 | 	byte	$0b, $fa, $f1, $f3, $01, $0c, $0b, $00, $f4, $f2, $03, $1d, $28, $17, $f7, $e0
1ff2b     EB 0C 20 17 
1ff2f     F4 DC EB 0F 
1ff33     23 1F FE E0 
1ff37     F7 1D 1E FD | 	byte	$eb, $0c, $20, $17, $f4, $dc, $eb, $0f, $23, $1f, $fe, $e0, $f7, $1d, $1e, $fd
1ff3b     E3 E9 0A 15 
1ff3f     F7 E2 EB 16 
1ff43     2D 06 E2 ED 
1ff47     10 12 F2 E2 | 	byte	$e3, $e9, $0a, $15, $f7, $e2, $eb, $16, $2d, $06, $e2, $ed, $10, $12, $f2, $e2
1ff4b     F3 0F 0B F1 
1ff4f     F0 0B 1A 0D 
1ff53     EF F8 0A F7 
1ff57     EA FC 0D FE | 	byte	$f3, $0f, $0b, $f1, $f0, $0b, $1a, $0d, $ef, $f8, $0a, $f7, $ea, $fc, $0d, $fe
1ff5b     F2 EC FB 11 
1ff5f     17 0A 02 0F 
1ff63     EB EB 15 FF 
1ff67     DC FE 27 FB | 	byte	$f2, $ec, $fb, $11, $17, $0a, $02, $0f, $eb, $eb, $15, $ff, $dc, $fe, $27, $fb
1ff6b     C5 FB 36 1F 
1ff6f     F2 EF 1F 06 
1ff73     DB 09 2C E0 
1ff77     D5 13 09 E8 | 	byte	$c5, $fb, $36, $1f, $f2, $ef, $1f, $06, $db, $09, $2c, $e0, $d5, $13, $09, $e8
1ff7b     FB 30 19 E0 
1ff7f     F8 1F 04 F2 
1ff83     0A 02 E9 F9 
1ff87     05 F4 11 1C | 	byte	$fb, $30, $19, $e0, $f8, $1f, $04, $f2, $0a, $02, $e9, $f9, $05, $f4, $11, $1c
1ff8b     09 EF EA 16 
1ff8f     1C EC ED 11 
1ff93     F3 E5 16 F2 
1ff97     C8 11 46 0A | 	byte	$09, $ef, $ea, $16, $1c, $ec, $ed, $11, $f3, $e5, $16, $f2, $c8, $11, $46, $0a
1ff9b     C9 EE 26 F4 
1ff9f     C7 FC 23 E9 
1ffa3     CB 07 2D F5 
1ffa7     DA 20 39 E7 | 	byte	$c9, $ee, $26, $f4, $c7, $fc, $23, $e9, $cb, $07, $2d, $f5, $da, $20, $39, $e7
1ffab     C8 FC 24 FD 
1ffaf     CF F6 21 07 
1ffb3     DD EA 1A 19 
1ffb7     13 1D FC E0 | 	byte	$c8, $fc, $24, $fd, $cf, $f6, $21, $07, $dd, $ea, $1a, $19, $13, $1d, $fc, $e0
1ffbb     EE FF 0F 11 
1ffbf     F4 EF 0C 09 
1ffc3     EA E0 02 40 
1ffc7     36 E1 C3 03 | 	byte	$ee, $ff, $0f, $11, $f4, $ef, $0c, $09, $ea, $e0, $02, $40, $36, $e1, $c3, $03
1ffcb     33 14 D1 D0 
1ffcf     12 31 F9 CA 
1ffd3     E4 28 4D 20 
1ffd7     D7 CB 00 30 | 	byte	$33, $14, $d1, $d0, $12, $31, $f9, $ca, $e4, $28, $4d, $20, $d7, $cb, $00, $30
1ffdb     1D DF CC F5 
1ffdf     1B 10 E5 D9 
1ffe3     04 40 47 09 
1ffe7     C0 BD 0A 44 | 	byte	$1d, $df, $cc, $f5, $1b, $10, $e5, $d9, $04, $40, $47, $09, $c0, $bd, $0a, $44
1ffeb     31 DF AE C8 
1ffef     10 3A 22 F1 
1fff3     E1 01 20 1F 
1fff7     00 E1 DF F6 | 	byte	$31, $df, $ae, $c8, $10, $3a, $22, $f1, $e1, $01, $20, $1f, $00, $e1, $df, $f6
1fffb     12 1B 07 E8 
1ffff     D6 E2 0B 30 
20003     38 1B F0 D2 
20007     D1 ED 14 28 | 	byte	$12, $1b, $07, $e8, $d6, $e2, $0b, $30, $38, $1b, $f0, $d2, $d1, $ed, $14, $28
2000b     1D FA DA CC 
2000f     DA 00 29 3E 
20013     34 10 E6 CF 
20017     D8 F8 1B 30 | 	byte	$1d, $fa, $da, $cc, $da, $00, $29, $3e, $34, $10, $e6, $cf, $d8, $f8, $1b, $30
2001b     2C 11 EC D3 
2001f     D2 ED 16 39 
20023     46 35 0C E2 
20027     CD CE E2 02 | 	byte	$2c, $11, $ec, $d3, $d2, $ed, $16, $39, $46, $35, $0c, $e2, $cd, $ce, $e2, $02
2002b     22 30 27 0D 
2002f     ED D6 D6 EF 
20033     13 2D 36 27 
20037     0A E8 CC C4 | 	byte	$22, $30, $27, $0d, $ed, $d6, $d6, $ef, $13, $2d, $36, $27, $0a, $e8, $cc, $c4
2003b     CE E8 05 1B 
2003f     23 22 17 0B 
20043     FF F4 EA E6 
20047     E6 EE FA 05 | 	byte	$ce, $e8, $05, $1b, $23, $22, $17, $0b, $ff, $f4, $ea, $e6, $e6, $ee, $fa, $05
2004b     0B 0C 07 FF 
2004f     F5 EA E3 E6 
20053     F3 06 15 1F 
20057     21 19 0B FB | 	byte	$0b, $0c, $07, $ff, $f5, $ea, $e3, $e6, $f3, $06, $15, $1f, $21, $19, $0b, $fb
2005b     ED E5 E1 DF 
2005f     E2 ED FB 0C 
20063     1C 28 2D 2B 
20067     20 0F FC EC | 	byte	$ed, $e5, $e1, $df, $e2, $ed, $fb, $0c, $1c, $28, $2d, $2b, $20, $0f, $fc, $ec
2006b     DF D7 D4 D8 
2006f     E1 ED FB 0B 
20073     19 25 2B 2C 
20077     25 1A 0C FD | 	byte	$df, $d7, $d4, $d8, $e1, $ed, $fb, $0b, $19, $25, $2b, $2c, $25, $1a, $0c, $fd
2007b     EB DD D5 D3 
2007f     D6 DD E7 F2 
20083     FE 0C 1B 24 
20087     29 29 25 1D | 	byte	$eb, $dd, $d5, $d3, $d6, $dd, $e7, $f2, $fe, $0c, $1b, $24, $29, $29, $25, $1d
2008b     13 07 FB F0 
2008f     E7 DF DB D9 
20093     D8 DA E2 EE 
20097     FA 03 0C 15 | 	byte	$13, $07, $fb, $f0, $e7, $df, $db, $d9, $d8, $da, $e2, $ee, $fa, $03, $0c, $15
2009b     1A 1A 1B 1C 
2009f     17 0F 09 05 
200a3     FC F1 EC EA 
200a7     E9 E7 E7 E9 | 	byte	$1a, $1a, $1b, $1c, $17, $0f, $09, $05, $fc, $f1, $ec, $ea, $e9, $e7, $e7, $e9
200ab     EC EE F1 F4 
200af     F8 FC 01 04 
200b3     08 09 09 09 
200b7     0A 0A 09 0A | 	byte	$ec, $ee, $f1, $f4, $f8, $fc, $01, $04, $08, $09, $09, $09, $0a, $0a, $09, $0a
200bb     0C 0D 0A 07 
200bf     05 04 04 01 
200c3     FE FC FB F9 
200c7     F7 F5 F7 FB | 	byte	$0c, $0d, $0a, $07, $05, $04, $04, $01, $fe, $fc, $fb, $f9, $f7, $f5, $f7, $fb
200cb     FB F7 F5 F9 
200cf     FC FE FF 00 
200d3     01 03 03 03 
200d7     03 05 08 0A | 	byte	$fb, $f7, $f5, $f9, $fc, $fe, $ff, $00, $01, $03, $03, $03, $03, $05, $08, $0a
200db     09 08 08 09 
200df     09 0A 0B 0B 
200e3     08 06 05 04 
200e7     02 01 FF FE | 	byte	$09, $08, $08, $09, $09, $0a, $0b, $0b, $08, $06, $05, $04, $02, $01, $ff, $fe
200eb     FC FA F9 F8 
200ef     F7 F7 F8 FB 
200f3     FB F9 F8 F9 
200f7     FC FF 00 FF | 	byte	$fc, $fa, $f9, $f8, $f7, $f7, $f8, $fb, $fb, $f9, $f8, $f9, $fc, $ff, $00, $ff
200fb     FF FF 01 02 
200ff     03 04 05 06 
20103     06 05 05 06 
20107     06 06 05 05 | 	byte	$ff, $ff, $01, $02, $03, $04, $05, $06, $06, $05, $05, $06, $06, $06, $05, $05
2010b     05 04 02 FF 
2010f     FE FD FD FE 
20113     FD FB F8 F5 
20117     F6 F8 F9 FA | 	byte	$05, $04, $02, $ff, $fe, $fd, $fd, $fe, $fd, $fb, $f8, $f5, $f6, $f8, $f9, $fa
2011b     FC FE FF FF 
2011f     00 02 05 06 
20123     07 09 09 07 
20127     04 03 03 03 | 	byte	$fc, $fe, $ff, $ff, $00, $02, $05, $06, $07, $09, $09, $07, $04, $03, $03, $03
2012b     02 02 01 00 
2012f     FF FE FF 01 
20133     03 04 05 05 
20137     05 04 05 06 | 	byte	$02, $02, $01, $00, $ff, $fe, $ff, $01, $03, $04, $05, $05, $05, $04, $05, $06
2013b     07 06 03 02 
2013f     02 01 00 01 
20143     03 04 03 03 
20147     01 00 FD FC | 	byte	$07, $06, $03, $02, $02, $01, $00, $01, $03, $04, $03, $03, $01, $00, $fd, $fc
2014b     FC FC FA F9 
2014f     F9 FA FB FB 
20153     FC FE 01 02 
20157     02 01 FF FD | 	byte	$fc, $fc, $fa, $f9, $f9, $fa, $fb, $fb, $fc, $fe, $01, $02, $02, $01, $ff, $fd
2015b     FB FB FB FB 
2015f     FB          | 	byte	$fb[5]
20160     FC FE FF FF 
20164     FF 00 01 01 
20168     00 FE FC FA 
2016c     F9 F8 FA FC | 	byte	$fc, $fe, $ff, $ff, $ff, $00, $01, $01, $00, $fe, $fc, $fa, $f9, $f8, $fa, $fc
20170     FD 00 02 06 
20174     08 09 09 09 
20178     07 03 FF FC 
2017c     F9 F6 F6 F7 | 	byte	$fd, $00, $02, $06, $08, $09, $09, $09, $07, $03, $ff, $fc, $f9, $f6, $f6, $f7
20180     FB FE 01 03 
20184     06 07 09 07 
20188     04 00 FD FB 
2018c     F9 FB FD FF | 	byte	$fb, $fe, $01, $03, $06, $07, $09, $07, $04, $00, $fd, $fb, $f9, $fb, $fd, $ff
20190     03 06 07 08 
20194     07 05 01 FC 
20198     F7 F4 F3 F2 
2019c     F6 FC 04 0A | 	byte	$03, $06, $07, $08, $07, $05, $01, $fc, $f7, $f4, $f3, $f2, $f6, $fc, $04, $0a
201a0     10 12 11 0C 
201a4     04 FC F6 F0 
201a8     EC EC EF F5 
201ac     FE 07 0E 12 | 	byte	$10, $12, $11, $0c, $04, $fc, $f6, $f0, $ec, $ec, $ef, $f5, $fe, $07, $0e, $12
201b0     10 08 FE F4 
201b4     EC E7 E5 E9 
201b8     F2 FC 06 0E 
201bc     14 12 09 FC | 	byte	$10, $08, $fe, $f4, $ec, $e7, $e5, $e9, $f2, $fc, $06, $0e, $14, $12, $09, $fc
201c0     F1 EB E9 EE 
201c4     F9 01 04 03 
201c8     FE FE 03 09 
201cc     0F 10 0B 02 | 	byte	$f1, $eb, $e9, $ee, $f9, $01, $04, $03, $fe, $fe, $03, $09, $0f, $10, $0b, $02
201d0     F9 F4 F1 F4 
201d4     FB FF 03 06 
201d8     0C 10 13 0E 
201dc     00 F3 EF F1 | 	byte	$f9, $f4, $f1, $f4, $fb, $ff, $03, $06, $0c, $10, $13, $0e, $00, $f3, $ef, $f1
201e0     FB 08 10 0C 
201e4     FE F0 ED FE 
201e8     16 21 17 FB 
201ec     DD D6 EB 15 | 	byte	$fb, $08, $10, $0c, $fe, $f0, $ed, $fe, $16, $21, $17, $fb, $dd, $d6, $eb, $15
201f0     2C 1E EF C3 
201f4     BE EC 32 52 
201f8     39 F2 B8 BB 
201fc     F6 2E 34 0C | 	byte	$2c, $1e, $ef, $c3, $be, $ec, $32, $52, $39, $f2, $b8, $bb, $f6, $2e, $34, $0c
20200     DB C8 E4 15 
20204     34 2B 04 DF 
20208     D6 FC 26 26 
2020c     FB D5 E7 0E | 	byte	$db, $c8, $e4, $15, $34, $2b, $04, $df, $d6, $fc, $26, $26, $fb, $d5, $e7, $0e
20210     12 F9 EF 0E 
20214     2B 18 E2 CC 
20218     F9 29 18 DB 
2021c     D4 11 2A EF | 	byte	$12, $f9, $ef, $0e, $2b, $18, $e2, $cc, $f9, $29, $18, $db, $d4, $11, $2a, $ef
20220     C9 0C 4A 18 
20224     D3 DA 15 1F 
20228     F6 E4 03 20 
2022c     01 E4 08 2D | 	byte	$c9, $0c, $4a, $18, $d3, $da, $15, $1f, $f6, $e4, $03, $20, $01, $e4, $08, $2d
20230     1A 0B 01 EC 
20234     03 18 03 E3 
20238     03 25 F3 DD 
2023c     05 27 27 FA | 	byte	$1a, $0b, $01, $ec, $03, $18, $03, $e3, $03, $25, $f3, $dd, $05, $27, $27, $fa
20240     F1 0A 16 F3 
20244     FE 11 E0 EE 
20248     1F 00 D9 03 
2024c     39 0E D7 09 | 	byte	$f1, $0a, $16, $f3, $fe, $11, $e0, $ee, $1f, $00, $d9, $03, $39, $0e, $d7, $09
20250     1F F2 ED 04 
20254     F7 FC 16 EE 
20258     E0 1D 17 F5 
2025c     07 04 FD FB | 	byte	$1f, $f2, $ed, $04, $f7, $fc, $16, $ee, $e0, $1d, $17, $f5, $07, $04, $fd, $fb
20260     F8 F8 F8 02 
20264     12 EB D1 0D 
20268     1E FD FE 0C 
2026c     FC F2 FD 04 | 	byte	$f8, $f8, $f8, $02, $12, $eb, $d1, $0d, $1e, $fd, $fe, $0c, $fc, $f2, $fd, $04
20270     F0 F1 1B F9 
20274     D4 0B 19 E1 
20278     16 2F D9 D5 
2027c     09 F8 E2 FA | 	byte	$f0, $f1, $1b, $f9, $d4, $0b, $19, $e1, $16, $2f, $d9, $d5, $09, $f8, $e2, $fa
20280     16 04 E1 F8 
20284     0A FC 16 20 
20288     01 E9 F6 02 
2028c     01 ED EE 0F | 	byte	$16, $04, $e1, $f8, $0a, $fc, $16, $20, $01, $e9, $f6, $02, $01, $ed, $ee, $0f
20290     11 E6 E5 0E 
20294     17 0E 0B 0D 
20298     08 F1 01 16 
2029c     FC ED 07 02 | 	byte	$11, $e6, $e5, $0e, $17, $0e, $0b, $0d, $08, $f1, $01, $16, $fc, $ed, $07, $02
202a0     EE F4 05 0D 
202a4     08 EE FF 00 
202a8     EE EB FD 13 
202ac     03 F0 EF FC | 	byte	$ee, $f4, $05, $0d, $08, $ee, $ff, $00, $ee, $eb, $fd, $13, $03, $f0, $ef, $fc
202b0     0D 06 FD 0D 
202b4     11 F4 DD F3 
202b8     0C 01 F4 FE 
202bc     F2 EF F7 FB | 	byte	$0d, $06, $fd, $0d, $11, $f4, $dd, $f3, $0c, $01, $f4, $fe, $f2, $ef, $f7, $fb
202c0     03 13 1E 09 
202c4     F3 EC FF 0B 
202c8     07 FE FF FB 
202cc     F7 F0 EE 00 | 	byte	$03, $13, $1e, $09, $f3, $ec, $ff, $0b, $07, $fe, $ff, $fb, $f7, $f0, $ee, $00
202d0     17 23 12 EE 
202d4     E1 FB 0F 13 
202d8     04 EF ED F8 
202dc     00 02 01 0D | 	byte	$17, $23, $12, $ee, $e1, $fb, $0f, $13, $04, $ef, $ed, $f8, $00, $02, $01, $0d
202e0     20 1B FB E4 
202e4     E2 F6 0A 10 
202e8     05 F3 E9 E8 
202ec     F2 00 10 1F | 	byte	$20, $1b, $fb, $e4, $e2, $f6, $0a, $10, $05, $f3, $e9, $e8, $f2, $00, $10, $1f
202f0     23 10 F5 E5 
202f4     EA 03 14 11 
202f8     FE EC E5 EC 
202fc     F9 03 0C 13 | 	byte	$23, $10, $f5, $e5, $ea, $03, $14, $11, $fe, $ec, $e5, $ec, $f9, $03, $0c, $13
20300     0E 01 F6 F1 
20304     F3 FB 04 0B 
20308     0B 04 F8 EE 
2030c     ED F6 0A 1F | 	byte	$0e, $01, $f6, $f1, $f3, $fb, $04, $0b, $0b, $04, $f8, $ee, $ed, $f6, $0a, $1f
20310     29 22 09 EB 
20314     D8 D9 EB 03 
20318     12 13 06 F2 
2031c     E2 E0 F1 0C | 	byte	$29, $22, $09, $eb, $d8, $d9, $eb, $03, $12, $13, $06, $f2, $e2, $e0, $f1, $0c
20320     24 30 2A 14 
20324     F8 E2 DA E1 
20328     F4 09 19 1D 
2032c     12 03 F8 F5 | 	byte	$24, $30, $2a, $14, $f8, $e2, $da, $e1, $f4, $09, $19, $1d, $12, $03, $f8, $f5
20330     F8 02 0C 11 
20334     0F 0B 03 FC 
20338     F5 F4 F9 FC 
2033c     FE 00 04 09 | 	byte	$f8, $02, $0c, $11, $0f, $0b, $03, $fc, $f5, $f4, $f9, $fc, $fe, $00, $04, $09
20340     0D 10 11 0E 
20344     08 FF F6 F2 
20348     EF F0 F0 F1 
2034c     F6 FA FF 05 | 	byte	$0d, $10, $11, $0e, $08, $ff, $f6, $f2, $ef, $f0, $f0, $f1, $f6, $fa, $ff, $05
20350     10 19 1D 1B 
20354     15 0C 01 F1 
20358     E5 E1 E2 E6 
2035c     E8 ED F6 00 | 	byte	$10, $19, $1d, $1b, $15, $0c, $01, $f1, $e5, $e1, $e2, $e6, $e8, $ed, $f6, $00
20360     0B 14 1B 1F 
20364     1F 1B 12 05 
20368     F9 ED E3 DE 
2036c     DB DB DC E3 | 	byte	$0b, $14, $1b, $1f, $1f, $1b, $12, $05, $f9, $ed, $e3, $de, $db, $db, $dc, $e3
20370     ED FB 09 17 
20374     25 2D 2F 2B 
20378     28 1F 12 04 
2037c     F7 E8 DB D2 | 	byte	$ed, $fb, $09, $17, $25, $2d, $2f, $2b, $28, $1f, $12, $04, $f7, $e8, $db, $d2
20380     CE CE D2 DA 
20384     E4 F1 FE 0A 
20388     16 20 27 2C 
2038c     2D 2C 26 1E | 	byte	$ce, $ce, $d2, $da, $e4, $f1, $fe, $0a, $16, $20, $27, $2c, $2d, $2c, $26, $1e
20390     15 0A FF F5 
20394     EC E6 E1 DD 
20398     DC DD E0 E3 
2039c     E8 F0 F7 FE | 	byte	$15, $0a, $ff, $f5, $ec, $e6, $e1, $dd, $dc, $dd, $e0, $e3, $e8, $f0, $f7, $fe
203a0     03 08 0A 0D 
203a4     10 13 14 14 
203a8     14 12 0F 0C 
203ac     0B 08 03 FF | 	byte	$03, $08, $0a, $0d, $10, $13, $14, $14, $14, $12, $0f, $0c, $0b, $08, $03, $ff
203b0     FB F4 F0 EC 
203b4     E9 E8 E8 E7 
203b8     E7 E8 EB EE 
203bc     F2 F6 FD 00 | 	byte	$fb, $f4, $f0, $ec, $e9, $e8, $e8, $e7, $e7, $e8, $eb, $ee, $f2, $f6, $fd, $00
203c0     02 04 06 09 
203c4     0A 0B 0D 0E 
203c8     0D 0B 09 08 
203cc     09 09 08 04 | 	byte	$02, $04, $06, $09, $0a, $0b, $0d, $0e, $0d, $0b, $09, $08, $09, $09, $08, $04
203d0     01 FF FF FD 
203d4     FB F9 F8 F6 
203d8     F4 F3 F5 F7 
203dc     F6 F6 F7 F9 | 	byte	$01, $ff, $ff, $fd, $fb, $f9, $f8, $f6, $f4, $f3, $f5, $f7, $f6, $f6, $f7, $f9
203e0     FC FD 00 03 
203e4     06 08 0A 0C 
203e8     0C 0C 0E 0E 
203ec     0E 0E 0E 0C | 	byte	$fc, $fd, $00, $03, $06, $08, $0a, $0c, $0c, $0c, $0e, $0e, $0e, $0e, $0e, $0c
203f0     0A 08 06 04 
203f4     01 FF FF FE 
203f8     FB F8 F6 F5 
203fc     F5 F5 F6 F8 | 	byte	$0a, $08, $06, $04, $01, $ff, $ff, $fe, $fb, $f8, $f6, $f5, $f5, $f5, $f6, $f8
20400     F8 F8 F9 FC 
20404     FF 02 05 06 
20408     07 09 0B 0B 
2040c     0C 0C 0E 0E | 	byte	$f8, $f8, $f9, $fc, $ff, $02, $05, $06, $07, $09, $0b, $0b, $0c, $0c, $0e, $0e
20410     0D 09 06 02 
20414     FF FA F7 F5 
20418     F2 EF EE ED 
2041c     ED EF F2 F7 | 	byte	$0d, $09, $06, $02, $ff, $fa, $f7, $f5, $f2, $ef, $ee, $ed, $ed, $ef, $f2, $f7
20420     FC 01 05 0A 
20424     0D 11 14 14 
20428     13 12 10 0E 
2042c     0B 07 03 FE | 	byte	$fc, $01, $05, $0a, $0d, $11, $14, $14, $13, $12, $10, $0e, $0b, $07, $03, $fe
20430     FB F6 F3 F0 
20434     EE EC EC EE 
20438     F1 F6 FB 01 
2043c     07 0F 15 19 | 	byte	$fb, $f6, $f3, $f0, $ee, $ec, $ec, $ee, $f1, $f6, $fb, $01, $07, $0f, $15, $19
20440     1C 1F 1F 1B 
20444     17 0F 05 FC 
20448     F4 EE EB E8 
2044c     E6 E9 ED F3 | 	byte	$1c, $1f, $1f, $1b, $17, $0f, $05, $fc, $f4, $ee, $eb, $e8, $e6, $e9, $ed, $f3
20450     FA 02 08 0E 
20454     11 13 12 0F 
20458     0A 05 00 FB 
2045c     F8 F5 F4 F3 | 	byte	$fa, $02, $08, $0e, $11, $13, $12, $0f, $0a, $05, $00, $fb, $f8, $f5, $f4, $f3
20460     F5 F9 FC FF 
20464     01 03 02 00 
20468     FE FA F7 F6 
2046c     F7 F8 F9 FA | 	byte	$f5, $f9, $fc, $ff, $01, $03, $02, $00, $fe, $fa, $f7, $f6, $f7, $f8, $f9, $fa
20470     FD FE FD FB 
20474     FB FA F8 F7 
20478     F8 FD 03 07 
2047c     09 0A 08 03 | 	byte	$fd, $fe, $fd, $fb, $fb, $fa, $f8, $f7, $f8, $fd, $03, $07, $09, $0a, $08, $03
20480     FC F5 F0 EE 
20484     EF F2 F8 00 
20488     0B 14 19 17 
2048c     10 04 F6 EC | 	byte	$fc, $f5, $f0, $ee, $ef, $f2, $f8, $00, $0b, $14, $19, $17, $10, $04, $f6, $ec
20490     EB F2 FB 06 
20494     0D 0F 0A 04 
20498     FF FD FE 01 
2049c     04 05 05 04 | 	byte	$eb, $f2, $fb, $06, $0d, $0f, $0a, $04, $ff, $fd, $fe, $01, $04, $05, $05, $04
204a0     01 00 FE FC 
204a4     F9 F9 00 0A 
204a8     11 11 08 FD 
204ac     F3 F0 F3 FC | 	byte	$01, $00, $fe, $fc, $f9, $f9, $00, $0a, $11, $11, $08, $fd, $f3, $f0, $f3, $fc
204b0     08 0F 0E 03 
204b4     F6 F1 FB 06 
204b8     0B 06 F9 F0 
204bc     EE FA 08 0A | 	byte	$08, $0f, $0e, $03, $f6, $f1, $fb, $06, $0b, $06, $f9, $f0, $ee, $fa, $08, $0a
204c0     FB E6 DD E9 
204c4     07 1E 1D 04 
204c8     E4 D6 E0 01 
204cc     24 2C 02 BD | 	byte	$fb, $e6, $dd, $e9, $07, $1e, $1d, $04, $e4, $d6, $e0, $01, $24, $2c, $02, $bd
204d0     A6 DB 3F 75 
204d4     39 C4 92 BC 
204d8     27 5C 35 D5 
204dc     AD D5 1E 3A | 	byte	$a6, $db, $3f, $75, $39, $c4, $92, $bc, $27, $5c, $35, $d5, $ad, $d5, $1e, $3a
204e0     20 FD EF FE 
204e4     11 03 EE F5 
204e8     09 16 04 E7 
204ec     E2 FF 19 11 | 	byte	$20, $fd, $ef, $fe, $11, $03, $ee, $f5, $09, $16, $04, $e7, $e2, $ff, $19, $11
204f0     05 13 17 F2 
204f4     EA 09 09 F4 
204f8     F5 12 15 E7 
204fc     E5 11 2D 15 | 	byte	$05, $13, $17, $f2, $ea, $09, $09, $f4, $f5, $12, $15, $e7, $e5, $11, $2d, $15
20500     EB EC 06 07 
20504     FE F8 03 0B 
20508     FC EE FE 22 
2050c     0C FB 09 0B | 	byte	$eb, $ec, $06, $07, $fe, $f8, $03, $0b, $fc, $ee, $fe, $22, $0c, $fb, $09, $0b
20510     E7 D9 1C 1A 
20514     D6 F3 39 F0 
20518     C4 12 1E 05 
2051c     0B 07 05 F2 | 	byte	$e7, $d9, $1c, $1a, $d6, $f3, $39, $f0, $c4, $12, $1e, $05, $0b, $07, $05, $f2
20520     02 0C F9 E8 
20524     0D 11 CC F8 
20528     13 EC 0E 0C 
2052c     F8 ED 09 0D | 	byte	$02, $0c, $f9, $e8, $0d, $11, $cc, $f8, $13, $ec, $0e, $0c, $f8, $ed, $09, $0d
20530     F0 06 27 F6 
20534     F3 07 05 0D 
20538     1C 14 FD 01 
2053c     FE F4 07 26 | 	byte	$f0, $06, $27, $f6, $f3, $07, $05, $0d, $1c, $14, $fd, $01, $fe, $f4, $07, $26
20540     DE E1 24 EB 
20544     EA 24 15 07 
20548     1A 00 D4 1F 
2054c     1A CA FB 36 | 	byte	$de, $e1, $24, $eb, $ea, $24, $15, $07, $1a, $00, $d4, $1f, $1a, $ca, $fb, $36
20550     F2 D3 16 FE 
20554     E2 42 19 B8 
20558     09 24 D3 FA 
2055c     2E DF D6 35 | 	byte	$f2, $d3, $16, $fe, $e2, $42, $19, $b8, $09, $24, $d3, $fa, $2e, $df, $d6, $35
20560     F4 CA 29 1D 
20564     DA 0E 35 D7 
20568     D7 38 F5 D2 
2056c     1C 08 DA EB | 	byte	$f4, $ca, $29, $1d, $da, $0e, $35, $d7, $d7, $38, $f5, $d2, $1c, $08, $da, $eb
20570     00 00 14 26 
20574     FE EC 02 FF 
20578     06 FF 00 14 
2057c     FA E6 FD 00 | 	byte	$00, $00, $14, $26, $fe, $ec, $02, $ff, $06, $ff, $00, $14, $fa, $e6, $fd, $00
20580     FB 13 26 F6 
20584     D8 FA 13 02 
20588     ED FC 1A 06 
2058c     D9 ED 1C 21 | 	byte	$fb, $13, $26, $f6, $d8, $fa, $13, $02, $ed, $fc, $1a, $06, $d9, $ed, $1c, $21
20590     0E 09 01 EA 
20594     F6 0E FC F2 
20598     09 11 EE D8 
2059c     F6 0C FF 03 | 	byte	$0e, $09, $01, $ea, $f6, $0e, $fc, $f2, $09, $11, $ee, $d8, $f6, $0c, $ff, $03
205a0     08 09 09 08 
205a4     FF F2 F1 00 
205a8     04 EC DF FC 
205ac     1C 12 EC E6 | 	byte	$08, $09, $09, $08, $ff, $f2, $f1, $00, $04, $ec, $df, $fc, $1c, $12, $ec, $e6
205b0     FD 07 F1 E3 
205b4     FD 18 0F F6 
205b8     E9 F9 07 F8 
205bc     EA FB 1F 1F | 	byte	$fd, $07, $f1, $e3, $fd, $18, $0f, $f6, $e9, $f9, $07, $f8, $ea, $fb, $1f, $1f
205c0     F6 D1 DA 01 
205c4     14 00 E2 E3 
205c8     FE 15 0C F2 
205cc     E9 03 21 24 | 	byte	$f6, $d1, $da, $01, $14, $00, $e2, $e3, $fe, $15, $0c, $f2, $e9, $03, $21, $24
205d0     09 E6 DB EF 
205d4     13 25 18 FD 
205d8     E3 D9 E7 06 
205dc     22 2B 1C FD | 	byte	$09, $e6, $db, $ef, $13, $25, $18, $fd, $e3, $d9, $e7, $06, $22, $2b, $1c, $fd
205e0     DD D6 F2 1C 
205e4     2F 22 00 E0 
205e8     D3 DE FB 1C 
205ec     37 3A 21 F8 | 	byte	$dd, $d6, $f2, $1c, $2f, $22, $00, $e0, $d3, $de, $fb, $1c, $37, $3a, $21, $f8
205f0     D3 C7 DB 03 
205f4     22 2B 1D FD 
205f8     DA C8 CF F0 
205fc     19 34 38 24 | 	byte	$d3, $c7, $db, $03, $22, $2b, $1d, $fd, $da, $c8, $cf, $f0, $19, $34, $38, $24
20600     FF D9 C3 C5 
20604     DF 06 2A 37 
20608     2B 0B E7 D1 
2060c     CC DF 00 1E | 	byte	$ff, $d9, $c3, $c5, $df, $06, $2a, $37, $2b, $0b, $e7, $d1, $cc, $df, $00, $1e
20610     2A 24 13 FE 
20614     E8 DC DA E0 
20618     EF 03 18 24 
2061c     29 25 17 04 | 	byte	$2a, $24, $13, $fe, $e8, $dc, $da, $e0, $ef, $03, $18, $24, $29, $25, $17, $04
20620     F4 E9 E5 EA 
20624     F5 03 0C 0E 
20628     0B 04 FD F7 
2062c     F6 FB 03 0C | 	byte	$f4, $e9, $e5, $ea, $f5, $03, $0c, $0e, $0b, $04, $fd, $f7, $f6, $fb, $03, $0c
20630     14 19 19 12 
20634     08 FF F8 F4 
20638     F2 F4 F8 FC 
2063c     02 0A 12 18 | 	byte	$14, $19, $19, $12, $08, $ff, $f8, $f4, $f2, $f4, $f8, $fc, $02, $0a, $12, $18
20640     1A 19 16 10 
20644     08 01 FB F1 
20648     ED EB EA E9 
2064c     EB F3 FA 04 | 	byte	$1a, $19, $16, $10, $08, $01, $fb, $f1, $ed, $eb, $ea, $e9, $eb, $f3, $fa, $04
20650     0E 18 1C 1E 
20654     1D 1B 14 0A 
20658     01 F8 EC E2 
2065c     DB D5 D5 DC | 	byte	$0e, $18, $1c, $1e, $1d, $1b, $14, $0a, $01, $f8, $ec, $e2, $db, $d5, $d5, $dc
20660     E2 EC FA 05 
20664     0E 18 20 21 
20668     22 21 1C 14 
2066c     09 FD F2 E8 | 	byte	$e2, $ec, $fa, $05, $0e, $18, $20, $21, $22, $21, $1c, $14, $09, $fd, $f2, $e8
20670     DF DA D8 D8 
20674     D9 DE E4 EC 
20678     F4 FF 09 12 
2067c     16 1A 1C 1D | 	byte	$df, $da, $d8, $d8, $d9, $de, $e4, $ec, $f4, $ff, $09, $12, $16, $1a, $1c, $1d
20680     1B 17 15 10 
20684     0B 06 01 FA 
20688     F7 F5 F3 F2 
2068c     F2 F0 EF F0 | 	byte	$1b, $17, $15, $10, $0b, $06, $01, $fa, $f7, $f5, $f3, $f2, $f2, $f0, $ef, $f0
20690     F1 F3 F7 FC 
20694     FE 02 04 05 
20698     08 0D 0F 12 
2069c     14 12 0F 0D | 	byte	$f1, $f3, $f7, $fc, $fe, $02, $04, $05, $08, $0d, $0f, $12, $14, $12, $0f, $0d
206a0     0C 0A 09 06 
206a4     01 FD F9 F4 
206a8     F2 F3 F5 F5 
206ac     F3 F3 F3 F4 | 	byte	$0c, $0a, $09, $06, $01, $fd, $f9, $f4, $f2, $f3, $f5, $f5, $f3, $f3, $f3, $f4
206b0     F6 F9 FB FC 
206b4     FD 00 03 06 
206b8     08 0A 09 0A 
206bc     0C 0D 0B 07 | 	byte	$f6, $f9, $fb, $fc, $fd, $00, $03, $06, $08, $0a, $09, $0a, $0c, $0d, $0b, $07
206c0     07 06 02 FF 
206c4     FC F8 F4 F1 
206c8     F0 EF EF EF 
206cc     EF F0 F0 F2 | 	byte	$07, $06, $02, $ff, $fc, $f8, $f4, $f1, $f0, $ef, $ef, $ef, $ef, $f0, $f0, $f2
206d0     F4 F7 FB FE 
206d4     01 02 04 06 
206d8     09 0B 0D 0D 
206dc     0C 0A 08 08 | 	byte	$f4, $f7, $fb, $fe, $01, $02, $04, $06, $09, $0b, $0d, $0d, $0c, $0a, $08, $08
206e0     07 03 FF FC 
206e4     FA F8 F4 F0 
206e8     EE F1 F4 F6 
206ec     F8 FA FD FF | 	byte	$07, $03, $ff, $fc, $fa, $f8, $f4, $f0, $ee, $f1, $f4, $f6, $f8, $fa, $fd, $ff
206f0     02 05 09 0C 
206f4     10 11 12 10 
206f8     0F 0E 0C 0B 
206fc     0B 0A 07 03 | 	byte	$02, $05, $09, $0c, $10, $11, $12, $10, $0f, $0e, $0c, $0b, $0b, $0a, $07, $03
20700     FE FA F7 F6 
20704     F5 F3 F3 F3 
20708     F3 F6 F9 FF 
2070c     02 06 08 08 | 	byte	$fe, $fa, $f7, $f6, $f5, $f3, $f3, $f3, $f3, $f6, $f9, $ff, $02, $06, $08, $08
20710     08 09 09 09 
20714     08 05 03 01 
20718     00 FD FD FE 
2071c     FD FD FE FF | 	byte	$08, $09, $09, $09, $08, $05, $03, $01, $00, $fd, $fd, $fe, $fd, $fd, $fe, $ff
20720     FF FB F8 F6 
20724     F5 F5 F6 F8 
20728     FA FE 02 07 
2072c     09 0B 0B 0B | 	byte	$ff, $fb, $f8, $f6, $f5, $f5, $f6, $f8, $fa, $fe, $02, $07, $09, $0b, $0b, $0b
20730     09 05 FF F9 
20734     F3 EE ED EF 
20738     F4 F9 FD 03 
2073c     09 0D 0D 0C | 	byte	$09, $05, $ff, $f9, $f3, $ee, $ed, $ef, $f4, $f9, $fd, $03, $09, $0d, $0d, $0c
20740     09 06 03 FF 
20744     FD FF 03 09 
20748     0F 14 15 14 
2074c     10 07 FD F4 | 	byte	$09, $06, $03, $ff, $fd, $ff, $03, $09, $0f, $14, $15, $14, $10, $07, $fd, $f4
20750     EC E7 E9 F0 
20754     F9 05 12 1B 
20758     1E 1C 12 05 
2075c     F8 EE E9 E8 | 	byte	$ec, $e7, $e9, $f0, $f9, $05, $12, $1b, $1e, $1c, $12, $05, $f8, $ee, $e9, $e8
20760     EE F6 01 0C 
20764     14 19 1A 14 
20768     07 F9 EC E4 
2076c     E4 ED FA 09 | 	byte	$ee, $f6, $01, $0c, $14, $19, $1a, $14, $07, $f9, $ec, $e4, $e4, $ed, $fa, $09
20770     15 17 0F 03 
20774     F8 F4 F2 F1 
20778     F4 F7 FD 03 
2077c     09 09 02 FA | 	byte	$15, $17, $0f, $03, $f8, $f4, $f2, $f1, $f4, $f7, $fd, $03, $09, $09, $02, $fa
20780     F5 F2 F5 00 
20784     0C 13 11 05 
20788     F7 EC E7 E8 
2078c     F5 07 0F 0C | 	byte	$f5, $f2, $f5, $00, $0c, $13, $11, $05, $f7, $ec, $e7, $e8, $f5, $07, $0f, $0c
20790     FC F1 F7 09 
20794     19 1B 07 EF 
20798     E4 EB FF 11 
2079c     13 05 F1 E9 | 	byte	$fc, $f1, $f7, $09, $19, $1b, $07, $ef, $e4, $eb, $ff, $11, $13, $05, $f1, $e9
207a0     F6 11 1F 10 
207a4     EF DC E3 FF 
207a8     18 1B 0B F9 
207ac     EB E8 F8 13 | 	byte	$f6, $11, $1f, $10, $ef, $dc, $e3, $ff, $18, $1b, $0b, $f9, $eb, $e8, $f8, $13
207b0     24 16 F4 E0 
207b4     EB 08 17 10 
207b8     04 FD FA FA 
207bc     FD 03 08 06 | 	byte	$24, $16, $f4, $e0, $eb, $08, $17, $10, $04, $fd, $fa, $fa, $fd, $03, $08, $06
207c0     05 01 F4 E8 
207c4     EC 01 0C FC 
207c8     EA E6 F8 02 
207cc     02 11 15 FC | 	byte	$05, $01, $f4, $e8, $ec, $01, $0c, $fc, $ea, $e6, $f8, $02, $02, $11, $15, $fc
207d0     EB F8 07 FE 
207d4     EE FF 15 F6 
207d8     D8 08 1A 00 
207dc     EF 00 10 F6 | 	byte	$eb, $f8, $07, $fe, $ee, $ff, $15, $f6, $d8, $08, $1a, $00, $ef, $00, $10, $f6
207e0     DF F6 0A F6 
207e4     FD 1B EB DA 
207e8     2E 31 D3 EA 
207ec     4B E3 B7 2B | 	byte	$df, $f6, $0a, $f6, $fd, $1b, $eb, $da, $2e, $31, $d3, $ea, $4b, $e3, $b7, $2b
207f0     16 C5 11 2D 
207f4     BD DB 37 01 
207f8     E4 1E 18 D5 
207fc     ED 0E EE FD | 	byte	$16, $c5, $11, $2d, $bd, $db, $37, $01, $e4, $1e, $18, $d5, $ed, $0e, $ee, $fd
20800     15 FE D9 15 
20804     16 ED 34 0D 
20808     D6 0F FB E6 
2080c     18 FC DE 1B | 	byte	$15, $fe, $d9, $15, $16, $ed, $34, $0d, $d6, $0f, $fb, $e6, $18, $fc, $de, $1b
20810     0F D6 0B 1B 
20814     EF 2A FB E0 
20818     1E F0 EC 35 
2081c     E6 FC 29 D0 | 	byte	$0f, $d6, $0b, $1b, $ef, $2a, $fb, $e0, $1e, $f0, $ec, $35, $e6, $fc, $29, $d0
20820     FF 2C E1 21 
20824     25 E6 20 0D 
20828     E5 0F F0 FA 
2082c     11 F0 EC 1B | 	byte	$ff, $2c, $e1, $21, $25, $e6, $20, $0d, $e5, $0f, $f0, $fa, $11, $f0, $ec, $1b
20830     00 F0 34 F6 
20834     F5 20 E3 FB 
20838     20 E8 18 24 
2083c     DB 11 1C FB | 	byte	$00, $f0, $34, $f6, $f5, $20, $e3, $fb, $20, $e8, $18, $24, $db, $11, $1c, $fb
20840     28 18 CE 0D 
20844     14 D2 FD 2F 
20848     EC EA 24 F2 
2084c     CE 1A 3A FB | 	byte	$28, $18, $ce, $0d, $14, $d2, $fd, $2f, $ec, $ea, $24, $f2, $ce, $1a, $3a, $fb
20850     F2 27 FA D7 
20854     1D 10 D3 17 
20858     23 D9 EF 25 
2085c     EA F4 39 F2 | 	byte	$f2, $27, $fa, $d7, $1d, $10, $d3, $17, $23, $d9, $ef, $25, $ea, $f4, $39, $f2
20860     DC 17 03 DA 
20864     F7 17 F7 E6 
20868     05 FB EA 0A 
2086c     2A 00 E7 04 | 	byte	$dc, $17, $03, $da, $f7, $17, $f7, $e6, $05, $fb, $ea, $0a, $2a, $00, $e7, $04
20870     FC E7 09 14 
20874     EB E8 08 12 
20878     EB D9 10 35 
2087c     02 D4 01 23 | 	byte	$fc, $e7, $09, $14, $eb, $e8, $08, $12, $eb, $d9, $10, $35, $02, $d4, $01, $23
20880     FB DE FC 19 
20884     FC DB 05 1A 
20888     EF E1 0F 35 
2088c     13 D9 DF 0B | 	byte	$fb, $de, $fc, $19, $fc, $db, $05, $1a, $ef, $e1, $0f, $35, $13, $d9, $df, $0b
20890     15 FD EE F9 
20894     0B 05 EF F3 
20898     00 14 1F 04 
2089c     EF EE F7 06 | 	byte	$15, $fd, $ee, $f9, $0b, $05, $ef, $f3, $00, $14, $1f, $04, $ef, $ee, $f7, $06
208a0     0C 04 ED E4 
208a4     F7 0A 0C FC 
208a8     F5 05 11 05 
208ac     EC E7 00 16 | 	byte	$0c, $04, $ed, $e4, $f7, $0a, $0c, $fc, $f5, $05, $11, $05, $ec, $e7, $00, $16
208b0     11 F4 DD E2 
208b4     FE 10 08 F5 
208b8     F8 0F 1A 0C 
208bc     EC D9 E3 FB | 	byte	$11, $f4, $dd, $e2, $fe, $10, $08, $f5, $f8, $0f, $1a, $0c, $ec, $d9, $e3, $fb
208c0     10 11 FB DF 
208c4     D4 E9 07 1D 
208c8     24 16 FF EA 
208cc     DE DF EE 01 | 	byte	$10, $11, $fb, $df, $d4, $e9, $07, $1d, $24, $16, $ff, $ea, $de, $df, $ee, $01
208d0     0D 11 0D FF 
208d4     EC E2 EC 07 
208d8     25 2F 1D F9 
208dc     D4 C5 CF F1 | 	byte	$0d, $11, $0d, $ff, $ec, $e2, $ec, $07, $25, $2f, $1d, $f9, $d4, $c5, $cf, $f1
208e0     1B 37 37 1A 
208e4     F1 D1 C6 DB 
208e8     04 2B 3D 36 
208ec     17 EF D2 CA | 	byte	$1b, $37, $37, $1a, $f1, $d1, $c6, $db, $04, $2b, $3d, $36, $17, $ef, $d2, $ca
208f0     D7 F7 18 2C 
208f4     2C 1B 02 EC 
208f8     E3 E8 F3 01 
208fc     0C 10 11 0E | 	byte	$d7, $f7, $18, $2c, $2c, $1b, $02, $ec, $e3, $e8, $f3, $01, $0c, $10, $11, $0e
20900     0A 05 FF F7 
20904     EE E9 E6 EB 
20908     F9 0B 1B 27 
2090c     28 19 05 F1 | 	byte	$0a, $05, $ff, $f7, $ee, $e9, $e6, $eb, $f9, $0b, $1b, $27, $28, $19, $05, $f1
20910     E1 D8 D9 E1 
20914     EE FF 0F 1C 
20918     23 25 22 1A 
2091c     0F 04 FA EE | 	byte	$e1, $d8, $d9, $e1, $ee, $ff, $0f, $1c, $23, $25, $22, $1a, $0f, $04, $fa, $ee
20920     E3 DF DF E3 
20924     E7 EC F3 F8 
20928     FE 06 0D 13 
2092c     1B 1D 1C 19 | 	byte	$e3, $df, $df, $e3, $e7, $ec, $f3, $f8, $fe, $06, $0d, $13, $1b, $1d, $1c, $19
20930     12 09 01 F9 
20934     F1 E9 E4 E0 
20938     E0 E2 EA F5 
2093c     01 0E 19 20 | 	byte	$12, $09, $01, $f9, $f1, $e9, $e4, $e0, $e0, $e2, $ea, $f5, $01, $0e, $19, $20
20940     26 2A 2C 2D 
20944     26 1E 15 06 
20948     F8 ED E2 DA 
2094c     D7 D7 D7 D9 | 	byte	$26, $2a, $2c, $2d, $26, $1e, $15, $06, $f8, $ed, $e2, $da, $d7, $d7, $d7, $d9
20950     E1 EC F7 04 
20954     11 1B 24 2D 
20958     31 32 33 30 
2095c     28 24 1A 0E | 	byte	$e1, $ec, $f7, $04, $11, $1b, $24, $2d, $31, $32, $33, $30, $28, $24, $1a, $0e
20960     02 F4 E6 DD 
20964     D7 D1 CF CC 
20968     CD D1 D6 DF 
2096c     E8 F3 02 0E | 	byte	$02, $f4, $e6, $dd, $d7, $d1, $cf, $cc, $cd, $d1, $d6, $df, $e8, $f3, $02, $0e
20970     16 1F 26 2B 
20974     2E 30 30 2E 
20978     27 1E 15 0B 
2097c     01 FA F0 E8 | 	byte	$16, $1f, $26, $2b, $2e, $30, $30, $2e, $27, $1e, $15, $0b, $01, $fa, $f0, $e8
20980     DF D5 D1 D1 
20984     D2 D3 D6 DB 
20988     DF E5 ED F7 
2098c     01 0A 12 17 | 	byte	$df, $d5, $d1, $d1, $d2, $d3, $d6, $db, $df, $e5, $ed, $f7, $01, $0a, $12, $17
20990     1D 22 24 27 
20994     2A 28 25 21 
20998     1B 14 0C 03 
2099c     FB F4 ED E6 | 	byte	$1d, $22, $24, $27, $2a, $28, $25, $21, $1b, $14, $0c, $03, $fb, $f4, $ed, $e6
209a0     DF DD D9 D9 
209a4     DA DE E2 E5 
209a8     EC F3 FA 00 
209ac     08 10 16 1A | 	byte	$df, $dd, $d9, $d9, $da, $de, $e2, $e5, $ec, $f3, $fa, $00, $08, $10, $16, $1a
209b0     1E 21 22 22 
209b4     22 23 1F 19 
209b8     12 0B 04 FC 
209bc     F4 ED E9 E4 | 	byte	$1e, $21, $22, $22, $22, $23, $1f, $19, $12, $0b, $04, $fc, $f4, $ed, $e9, $e4
209c0     DE DB DB DC 
209c4     E1 E7 EF F6 
209c8     FC 00 06 0C 
209cc     10 14 18 18 | 	byte	$de, $db, $db, $dc, $e1, $e7, $ef, $f6, $fc, $00, $06, $0c, $10, $14, $18, $18
209d0     16 13 0D 07 
209d4     03 00 FC F9 
209d8     F5 F0 EA E6 
209dc     E5 E4 E5 E7 | 	byte	$16, $13, $0d, $07, $03, $00, $fc, $f9, $f5, $f0, $ea, $e6, $e5, $e4, $e5, $e7
209e0     EB EE F2 F7 
209e4     FF 07 0E 12 
209e8     15 17 15 12 
209ec     0D 07 00 FA | 	byte	$eb, $ee, $f2, $f7, $ff, $07, $0e, $12, $15, $17, $15, $12, $0d, $07, $00, $fa
209f0     F4 EE EC EC 
209f4     EE F4 FC 04 
209f8     0B 10 12 14 
209fc     12 0D 09 04 | 	byte	$f4, $ee, $ec, $ec, $ee, $f4, $fc, $04, $0b, $10, $12, $14, $12, $0d, $09, $04
20a00     00 FC F8 F7 
20a04     F7 F8 FC 01 
20a08     04 07 0A 0B 
20a0c     0A 08 04 00 | 	byte	$00, $fc, $f8, $f7, $f7, $f8, $fc, $01, $04, $07, $0a, $0b, $0a, $08, $04, $00
20a10     FD F8 F8 FA 
20a14     FC 00 05 0B 
20a18     0F 12 10 0C 
20a1c     07 FE F4 ED | 	byte	$fd, $f8, $f8, $fa, $fc, $00, $05, $0b, $0f, $12, $10, $0c, $07, $fe, $f4, $ed
20a20     E8 E7 ED F8 
20a24     05 0F 17 1A 
20a28     18 10 05 F8 
20a2c     EC E5 E0 E2 | 	byte	$e8, $e7, $ed, $f8, $05, $0f, $17, $1a, $18, $10, $05, $f8, $ec, $e5, $e0, $e2
20a30     EA F8 0B 1D 
20a34     29 2A 20 0E 
20a38     F8 E4 D7 D3 
20a3c     D9 E8 FD 10 | 	byte	$ea, $f8, $0b, $1d, $29, $2a, $20, $0e, $f8, $e4, $d7, $d3, $d9, $e8, $fd, $10
20a40     22 2C 2A 1F 
20a44     0A F1 DC D3 
20a48     D5 E7 FF 13 
20a4c     1B 1C 11 05 | 	byte	$22, $2c, $2a, $1f, $0a, $f1, $dc, $d3, $d5, $e7, $ff, $13, $1b, $1c, $11, $05
20a50     FE 01 07 0E 
20a54     11 0B 00 F3 
20a58     EA EB F7 05 
20a5c     12 16 12 0C | 	byte	$fe, $01, $07, $0e, $11, $0b, $00, $f3, $ea, $eb, $f7, $05, $12, $16, $12, $0c
20a60     06 FE F5 EC 
20a64     E8 F0 04 14 
20a68     1A 10 FF F0 
20a6c     EC FB 16 28 | 	byte	$06, $fe, $f5, $ec, $e8, $f0, $04, $14, $1a, $10, $ff, $f0, $ec, $fb, $16, $28
20a70     25 09 E9 DB 
20a74     E4 FB 0F 0F 
20a78     FA E1 DF F9 
20a7c     1D 2A 17 F2 | 	byte	$25, $09, $e9, $db, $e4, $fb, $0f, $0f, $fa, $e1, $df, $f9, $1d, $2a, $17, $f2
20a80     D5 DB FD 1B 
20a84     1A FA DC DD 
20a88     FC 1A 25 17 
20a8c     03 FA FB FB | 	byte	$d5, $db, $fd, $1b, $1a, $fa, $dc, $dd, $fc, $1a, $25, $17, $03, $fa, $fb, $fb
20a90     F7 F7 F7 F7 
20a94     FB FB F1 F2 
20a98     0E 18 14 05 
20a9c     FD F5 F0 FD | 	byte	$f7, $f7, $f7, $f7, $fb, $fb, $f1, $f2, $0e, $18, $14, $05, $fd, $f5, $f0, $fd
20aa0     07 FE F9 FD 
20aa4     F2 F9 0A 0C 
20aa8     1C 16 F4 ED 
20aac     FF 0F 0A F4 | 	byte	$07, $fe, $f9, $fd, $f2, $f9, $0a, $0c, $1c, $16, $f4, $ed, $ff, $0f, $0a, $f4
20ab0     E3 EB 02 F6 
20ab4     EF 0B 21 1B 
20ab8     EE EA 08 0E 
20abc     F4 F9 14 FE | 	byte	$e3, $eb, $02, $f6, $ef, $0b, $21, $1b, $ee, $ea, $08, $0e, $f4, $f9, $14, $fe
20ac0     F9 0B F3 E8 
20ac4     1B 29 E1 0E 
20ac8     12 BE 07 1D 
20acc     D0 F8 1A C2 | 	byte	$f9, $0b, $f3, $e8, $1b, $29, $e1, $0e, $12, $be, $07, $1d, $d0, $f8, $1a, $c2
20ad0     E9 1D E4 20 
20ad4     19 D7 1A F5 
20ad8     C6 25 FA C5 
20adc     29 F8 C0 2F | 	byte	$e9, $1d, $e4, $20, $19, $d7, $1a, $f5, $c6, $25, $fa, $c5, $29, $f8, $c0, $2f
20ae0     1C F7 31 E5 
20ae4     EA 15 DF 09 
20ae8     0C D3 0F 14 
20aec     DD 15 F3 0A | 	byte	$1c, $f7, $31, $e5, $ea, $15, $df, $09, $0c, $d3, $0f, $14, $dd, $15, $f3, $0a
20af0     42 E4 06 1A 
20af4     D7 14 FD D4 
20af8     20 EC F4 1C 
20afc     DD 11 49 F3 | 	byte	$42, $e4, $06, $1a, $d7, $14, $fd, $d4, $20, $ec, $f4, $1c, $dd, $11, $49, $f3
20b00     ED 31 E0 EC 
20b04     20 E8 06 15 
20b08     D7 F8 11 ED 
20b0c     28 2A EB 09 | 	byte	$ed, $31, $e0, $ec, $20, $e8, $06, $15, $d7, $f8, $11, $ed, $28, $2a, $eb, $09
20b10     F0 FF 17 E3 
20b14     0C 02 FE 00 
20b18     E7 0C FF 10 
20b1c     22 F9 E4 05 | 	byte	$f0, $ff, $17, $e3, $0c, $02, $fe, $00, $e7, $0c, $ff, $10, $22, $f9, $e4, $05
20b20     12 EF 1C 01 
20b24     DF 04 F6 E4 
20b28     0F 17 07 FB 
20b2c     0E F7 F1 03 | 	byte	$12, $ef, $1c, $01, $df, $04, $f6, $e4, $0f, $17, $07, $fb, $0e, $f7, $f1, $03
20b30     EF 09 0D E1 
20b34     F2 FC FA 04 
20b38     17 14 F8 FE 
20b3c     F1 FD 1D F9 | 	byte	$ef, $09, $0d, $e1, $f2, $fc, $fa, $04, $17, $14, $f8, $fe, $f1, $fd, $1d, $f9
20b40     F2 1C 08 E1 
20b44     04 21 07 1D 
20b48     2E ED EC 11 
20b4c     FA F5 F9 03 | 	byte	$f2, $1c, $08, $e1, $04, $21, $07, $1d, $2e, $ed, $ec, $11, $fa, $f5, $f9, $03
20b50     FE ED FE FF 
20b54     F4 0F 2C 17 
20b58     EE F8 F5 ED 
20b5c     0A 08 E9 F5 | 	byte	$fe, $ed, $fe, $ff, $f4, $0f, $2c, $17, $ee, $f8, $f5, $ed, $0a, $08, $e9, $f5
20b60     12 07 ED F2 
20b64     1A 25 FE EF 
20b68     08 FC F1 05 
20b6c     10 02 F0 ED | 	byte	$12, $07, $ed, $f2, $1a, $25, $fe, $ef, $08, $fc, $f1, $05, $10, $02, $f0, $ed
20b70     F5 FF 07 0E 
20b74     0D 0F 0F FF 
20b78     EA EE 08 0B 
20b7c     EE E6 02 0D | 	byte	$f5, $ff, $07, $0e, $0d, $0f, $0f, $ff, $ea, $ee, $08, $0b, $ee, $e6, $02, $0d
20b80     ED D4 F1 23 
20b84     30 0B E6 E5 
20b88     03 1A 0C E7 
20b8c     D9 EF 10 14 | 	byte	$ed, $d4, $f1, $23, $30, $0b, $e6, $e5, $03, $1a, $0c, $e7, $d9, $ef, $10, $14
20b90     F4 E0 F5 21 
20b94     36 21 EB C7 
20b98     D3 08 33 2F 
20b9c     FF D3 D0 EB | 	byte	$f4, $e0, $f5, $21, $36, $21, $eb, $c7, $d3, $08, $33, $2f, $ff, $d3, $d0, $eb
20ba0     0A 19 19 19 
20ba4     15 04 F1 E5 
20ba8     E5 EC F7 04 
20bac     09 02 F4 E9 | 	byte	$0a, $19, $19, $19, $15, $04, $f1, $e5, $e5, $ec, $f7, $04, $09, $02, $f4, $e9
20bb0     E6 F2 0C 27 
20bb4     30 21 FC D8 
20bb8     CC DE 02 21 
20bbc     2B 16 F0 D2 | 	byte	$e6, $f2, $0c, $27, $30, $21, $fc, $d8, $cc, $de, $02, $21, $2b, $16, $f0, $d2
20bc0     C9 D9 FD 25 
20bc4     3B 36 16 EB 
20bc8     C5 B6 BE DA 
20bcc     03 26 35 2D | 	byte	$c9, $d9, $fd, $25, $3b, $36, $16, $eb, $c5, $b6, $be, $da, $03, $26, $35, $2d
20bd0     11 ED D4 D0 
20bd4     DF FE 1C 2D 
20bd8     2E 1A FB DF 
20bdc     CF CD DB F4 | 	byte	$11, $ed, $d4, $d0, $df, $fe, $1c, $2d, $2e, $1a, $fb, $df, $cf, $cd, $db, $f4
20be0     10 21 27 24 
20be4     19 08 F4 E7 
20be8     E1 E2 EA F6 
20bec     FE 06 09 0A | 	byte	$10, $21, $27, $24, $19, $08, $f4, $e7, $e1, $e2, $ea, $f6, $fe, $06, $09, $0a
20bf0     0A 08 04 03 
20bf4     02 02 02 01 
20bf8     FF FC FA F8 
20bfc     FA FD 00 02 | 	byte	$0a, $08, $04, $03, $02, $02, $02, $01, $ff, $fc, $fa, $f8, $fa, $fd, $00, $02
20c00     06 07 00 FD 
20c04     FD FE 03 08 
20c08     0C 0F 0E 09 
20c0c     04 FD F4 ED | 	byte	$06, $07, $00, $fd, $fd, $fe, $03, $08, $0c, $0f, $0e, $09, $04, $fd, $f4, $ed
20c10     E8 E4 E4 E6 
20c14     EF FA 04 0E 
20c18     17 1C 20 22 
20c1c     1F 19 12 08 | 	byte	$e8, $e4, $e4, $e6, $ef, $fa, $04, $0e, $17, $1c, $20, $22, $1f, $19, $12, $08
20c20     FC F3 E9 E3 
20c24     E1 E2 E4 EA 
20c28     EF F6 FD 05 
20c2c     0D 13 15 18 | 	byte	$fc, $f3, $e9, $e3, $e1, $e2, $e4, $ea, $ef, $f6, $fd, $05, $0d, $13, $15, $18
20c30     19 19 18 13 
20c34     11 0D 0A 07 
20c38     03 FD FA F4 
20c3c     F0 F1 F0 EE | 	byte	$19, $19, $18, $13, $11, $0d, $0a, $07, $03, $fd, $fa, $f4, $f0, $f1, $f0, $ee
20c40     F0 F0 EF F2 
20c44     F4 F8 FC 03 
20c48     0A 0F 16 1D 
20c4c     1E 1E 21 22 | 	byte	$f0, $f0, $ef, $f2, $f4, $f8, $fc, $03, $0a, $0f, $16, $1d, $1e, $1e, $21, $22
20c50     20 1F 1C 12 
20c54     0A 03 FC F7 
20c58     F3 EF EB E8 
20c5c     E8 E9 EE F5 | 	byte	$20, $1f, $1c, $12, $0a, $03, $fc, $f7, $f3, $ef, $eb, $e8, $e8, $e9, $ee, $f5
20c60     F9 FC FE 00 
20c64     03 08 0A 0F 
20c68     10 0D 0D 0E 
20c6c     0C 0A 0B 0A | 	byte	$f9, $fc, $fe, $00, $03, $08, $0a, $0f, $10, $0d, $0d, $0e, $0c, $0a, $0b, $0a
20c70     0A 06 02 FD 
20c74     FB F6 F4 F1 
20c78     EF EC EA EB 
20c7c     ED EF F2 F5 | 	byte	$0a, $06, $02, $fd, $fb, $f6, $f4, $f1, $ef, $ec, $ea, $eb, $ed, $ef, $f2, $f5
20c80     FA 00 03 05 
20c84     08 0A 0C 0D 
20c88     0F 0F 0B 07 
20c8c     04 02 00 FF | 	byte	$fa, $00, $03, $05, $08, $0a, $0c, $0d, $0f, $0f, $0b, $07, $04, $02, $00, $ff
20c90     FB F7 F5 F5 
20c94     F2 F1 F1 F0 
20c98     F0 F0 F1 F4 
20c9c     F7 F9 FD 01 | 	byte	$fb, $f7, $f5, $f5, $f2, $f1, $f1, $f0, $f0, $f0, $f1, $f4, $f7, $f9, $fd, $01
20ca0     07 0D 12 13 
20ca4     13 13 11 0F 
20ca8     0D 0A 04 FC 
20cac     F5 F1 EF ED | 	byte	$07, $0d, $12, $13, $13, $13, $11, $0f, $0d, $0a, $04, $fc, $f5, $f1, $ef, $ed
20cb0     EE F0 F3 F5 
20cb4     F8 FA FD FF 
20cb8     01 04 07 08 
20cbc     07 06 05 05 | 	byte	$ee, $f0, $f3, $f5, $f8, $fa, $fd, $ff, $01, $04, $07, $08, $07, $06, $05, $05
20cc0     05 05 07 06 
20cc4     03 00 FD FA 
20cc8     F7 F4 F1 F0 
20ccc     F1 F4 F9 FF | 	byte	$05, $05, $07, $06, $03, $00, $fd, $fa, $f7, $f4, $f1, $f0, $f1, $f4, $f9, $ff
20cd0     05 0A 10 14 
20cd4     14 10 09 01 
20cd8     F7 F0 EA E6 
20cdc     E4 E3 E7 F0 | 	byte	$05, $0a, $10, $14, $14, $10, $09, $01, $f7, $f0, $ea, $e6, $e4, $e3, $e7, $f0
20ce0     FB 07 10 17 
20ce4     19 18 12 07 
20ce8     FC F0 E6 DF 
20cec     DE E3 EC FA | 	byte	$fb, $07, $10, $17, $19, $18, $12, $07, $fc, $f0, $e6, $df, $de, $e3, $ec, $fa
20cf0     0B 19 24 2A 
20cf4     2A 21 13 01 
20cf8     EE DF D5 D1 
20cfc     D7 E6 FB 13 | 	byte	$0b, $19, $24, $2a, $2a, $21, $13, $01, $ee, $df, $d5, $d1, $d7, $e6, $fb, $13
20d00     28 34 37 2E 
20d04     1C 02 E8 D5 
20d08     CD CE DA EF 
20d0c     0A 22 31 36 | 	byte	$28, $34, $37, $2e, $1c, $02, $e8, $d5, $cd, $ce, $da, $ef, $0a, $22, $31, $36
20d10     2F 1B FF E6 
20d14     D5 D0 D7 E8 
20d18     FE 14 22 28 
20d1c     28 1C 0B F7 | 	byte	$2f, $1b, $ff, $e6, $d5, $d0, $d7, $e8, $fe, $14, $22, $28, $28, $1c, $0b, $f7
20d20     EA E5 ED FB 
20d24     0B 13 0F FE 
20d28     E8 DA DE F6 
20d2c     19 33 3B 28 | 	byte	$ea, $e5, $ed, $fb, $0b, $13, $0f, $fe, $e8, $da, $de, $f6, $19, $33, $3b, $28
20d30     02 DE C8 C7 
20d34     DF 00 18 21 
20d38     19 03 F6 F7 
20d3c     03 0E 0A FB | 	byte	$02, $de, $c8, $c7, $df, $00, $18, $21, $19, $03, $f6, $f7, $03, $0e, $0a, $fb
20d40     EC E6 ED FB 
20d44     0B 12 09 F6 
20d48     EB F8 0F 1A 
20d4c     0E F0 DB DA | 	byte	$ec, $e6, $ed, $fb, $0b, $12, $09, $f6, $eb, $f8, $0f, $1a, $0e, $f0, $db, $da
20d50     F6 19 1D FD 
20d54     DD DC 02 33 
20d58     44 22 E9 CB 
20d5c     E9 26 38 14 | 	byte	$f6, $19, $1d, $fd, $dd, $dc, $02, $33, $44, $22, $e9, $cb, $e9, $26, $38, $14
20d60     DF D4 F4 11 
20d64     11 02 00 0B 
20d68     16 0F F2 E3 
20d6c     EE 12 1F FD | 	byte	$df, $d4, $f4, $11, $11, $02, $00, $0b, $16, $0f, $f2, $e3, $ee, $12, $1f, $fd
20d70     D6 E9 1B 16 
20d74     EA F4 23 27 
20d78     EF CE FF 27 
20d7c     0E F5 00 00 | 	byte	$d6, $e9, $1b, $16, $ea, $f4, $23, $27, $ef, $ce, $ff, $27, $0e, $f5, $00, $00
20d80     E7 F3 15 1E 
20d84     06 F6 F7 F1 
20d88     F5 09 05 FC 
20d8c     0B F8 E2 00 | 	byte	$e7, $f3, $15, $1e, $06, $f6, $f7, $f1, $f5, $09, $05, $fc, $0b, $f8, $e2, $00
20d90     04 F8 2E 18 
20d94     EA E9 0A 0B 
20d98     F1 FA 14 F0 
20d9c     EC 05 FB FC | 	byte	$04, $f8, $2e, $18, $ea, $e9, $0a, $0b, $f1, $fa, $14, $f0, $ec, $05, $fb, $fc
20da0     1F 0F F1 0A 
20da4     F1 FE 08 D8 
20da8     14 09 DE F3 
20dac     FE FA 1D 22 | 	byte	$1f, $0f, $f1, $0a, $f1, $fe, $08, $d8, $14, $09, $de, $f3, $fe, $fa, $1d, $22
20db0     E4 1E E6 E7 
20db4     24 EA 02 0E 
20db8     DB FB EC 12 
20dbc     0A 20 01 F4 | 	byte	$e4, $1e, $e6, $e7, $24, $ea, $02, $0e, $db, $fb, $ec, $12, $0a, $20, $01, $f4
20dc0     17 E6 0F DD 
20dc4     10 F7 2B F2 
20dc8     DE 16 CA 28 
20dcc     00 F8 24 CB | 	byte	$17, $e6, $0f, $dd, $10, $f7, $2b, $f2, $de, $16, $ca, $28, $00, $f8, $24, $cb
20dd0     16 F2 EC 1F 
20dd4     CA 1F D4 FF 
20dd8     0D DA 56 D4 
20ddc     0D 0E BB 37 | 	byte	$16, $f2, $ec, $1f, $ca, $1f, $d4, $ff, $0d, $da, $56, $d4, $0d, $0e, $bb, $37
20de0     DE 06 21 DB 
20de4     1B C8 23 EA 
20de8     15 1D D7 41 
20dec     C5 1E 05 D6 | 	byte	$de, $06, $21, $db, $1b, $c8, $23, $ea, $15, $1d, $d7, $41, $c5, $1e, $05, $d6
20df0     34 C8 27 DB 
20df4     E8 31 C0 49 
20df8     04 DB 4B C0 
20dfc     15 18 B4 37 | 	byte	$34, $c8, $27, $db, $e8, $31, $c0, $49, $04, $db, $4b, $c0, $15, $18, $b4, $37
20e00     EB EF 20 CF 
20e04     0A 32 F8 FD 
20e08     21 D9 05 18 
20e0c     DE 0D 06 E1 | 	byte	$eb, $ef, $20, $cf, $0a, $32, $f8, $fd, $21, $d9, $05, $18, $de, $0d, $06, $e1
20e10     02 D7 FE 1E 
20e14     09 FC 27 FB 
20e18     CF 0F 22 D7 
20e1c     FC 2C E5 E0 | 	byte	$02, $d7, $fe, $1e, $09, $fc, $27, $fb, $cf, $0f, $22, $d7, $fc, $2c, $e5, $e0
20e20     14 01 DB 3C 
20e24     29 E9 10 04 
20e28     FF 09 DF EE 
20e2c     23 01 CA 11 | 	byte	$14, $01, $db, $3c, $29, $e9, $10, $04, $ff, $09, $df, $ee, $23, $01, $ca, $11
20e30     19 D5 1A 36 
20e34     E4 FD 24 E7 
20e38     F7 27 F5 E9 
20e3c     10 F2 DE 0E | 	byte	$19, $d5, $1a, $36, $e4, $fd, $24, $e7, $f7, $27, $f5, $e9, $10, $f2, $de, $0e
20e40     1D 05 01 0F 
20e44     FB F0 08 1D 
20e48     02 E2 FF 22 
20e4c     07 E3 F8 25 | 	byte	$1d, $05, $01, $0f, $fb, $f0, $08, $1d, $02, $e2, $ff, $22, $07, $e3, $f8, $25
20e50     39 0D D7 F4 
20e54     24 0F E2 F4 
20e58     1A 17 E8 D9 
20e5c     FB 15 09 04 | 	byte	$39, $0d, $d7, $f4, $24, $0f, $e2, $f4, $1a, $17, $e8, $d9, $fb, $15, $09, $04
20e60     12 0E F8 E9 
20e64     F7 19 1B F9 
20e68     E2 EC 07 10 
20e6c     F6 E0 06 39 | 	byte	$12, $0e, $f8, $e9, $f7, $19, $1b, $f9, $e2, $ec, $07, $10, $f6, $e0, $06, $39
20e70     2F F4 CD DD 
20e74     13 2F 13 E4 
20e78     D9 FB 13 03 
20e7c     E4 DF 02 2B | 	byte	$2f, $f4, $cd, $dd, $13, $2f, $13, $e4, $d9, $fb, $13, $03, $e4, $df, $02, $2b
20e80     30 0B D7 C1 
20e84     DF 0E 25 11 
20e88     EA D1 D6 F3 
20e8c     10 1E 1B 0F | 	byte	$30, $0b, $d7, $c1, $df, $0e, $25, $11, $ea, $d1, $d6, $f3, $10, $1e, $1b, $0f
20e90     04 F7 EB EA 
20e94     F6 04 06 FA 
20e98     F0 F1 F4 F8 
20e9c     F9 FC 08 18 | 	byte	$04, $f7, $eb, $ea, $f6, $04, $06, $fa, $f0, $f1, $f4, $f8, $f9, $fc, $08, $18
20ea0     21 1B 03 E7 
20ea4     D9 DA E9 FB 
20ea8     0A 10 0B FE 
20eac     F4 F1 FD 11 | 	byte	$21, $1b, $03, $e7, $d9, $da, $e9, $fb, $0a, $10, $0b, $fe, $f4, $f1, $fd, $11
20eb0     20 22 12 F9 
20eb4     E4 DB DB E6 
20eb8     FC 12 1D 1A 
20ebc     07 F0 E2 E0 | 	byte	$20, $22, $12, $f9, $e4, $db, $db, $e6, $fc, $12, $1d, $1a, $07, $f0, $e2, $e0
20ec0     ED 02 12 19 
20ec4     19 14 0B FD 
20ec8     ED E1 DA D7 
20ecc     DE EC FF 15 | 	byte	$ed, $02, $12, $19, $19, $14, $0b, $fd, $ed, $e1, $da, $d7, $de, $ec, $ff, $15
20ed0     26 2E 2A 1B 
20ed4     04 E8 D0 C3 
20ed8     C1 CC DF F6 
20edc     0C 1B 20 22 | 	byte	$26, $2e, $2a, $1b, $04, $e8, $d0, $c3, $c1, $cc, $df, $f6, $0c, $1b, $20, $22
20ee0     20 17 0F 02 
20ee4     F6 EC E5 E1 
20ee8     E1 E6 EE FB 
20eec     05 0E 15 18 | 	byte	$20, $17, $0f, $02, $f6, $ec, $e5, $e1, $e1, $e6, $ee, $fb, $05, $0e, $15, $18
20ef0     1C 1E 1C 18 
20ef4     0F 03 F5 EB 
20ef8     E3 DE DE E4 
20efc     EC F6 01 0A | 	byte	$1c, $1e, $1c, $18, $0f, $03, $f5, $eb, $e3, $de, $de, $e4, $ec, $f6, $01, $0a
20f00     11 19 1D 1C 
20f04     17 11 0A 03 
20f08     FC F8 F3 F1 
20f0c     F0 F0 F3 F4 | 	byte	$11, $19, $1d, $1c, $17, $11, $0a, $03, $fc, $f8, $f3, $f1, $f0, $f0, $f3, $f4
20f10     F5 FA FF 05 
20f14     0A 0C 0F 10 
20f18     10 11 12 0E 
20f1c     0C 07 00 FB | 	byte	$f5, $fa, $ff, $05, $0a, $0c, $0f, $10, $10, $11, $12, $0e, $0c, $07, $00, $fb
20f20     F9 F6 F2 F2 
20f24     F3 F4 F7 F9 
20f28     FD FF 02 08 
20f2c     0E 12 12 11 | 	byte	$f9, $f6, $f2, $f2, $f3, $f4, $f7, $f9, $fd, $ff, $02, $08, $0e, $12, $12, $11
20f30     10 09 03 02 
20f34     01 FE FC F9 
20f38     F5 F5 F8 FA 
20f3c     FC FE 00 FE | 	byte	$10, $09, $03, $02, $01, $fe, $fc, $f9, $f5, $f5, $f8, $fa, $fc, $fe, $00, $fe
20f40     FE FF FE 01 
20f44     01 02 00 FD 
20f48     00 02 06 0C 
20f4c     0C 0E 0F 0B | 	byte	$fe, $ff, $fe, $01, $01, $02, $00, $fd, $00, $02, $06, $0c, $0c, $0e, $0f, $0b
20f50     0A 0A 05 03 
20f54     00 F9 F7 F1 
20f58     EE EF F1 F3 
20f5c     F4 FB 01 06 | 	byte	$0a, $0a, $05, $03, $00, $f9, $f7, $f1, $ee, $ef, $f1, $f3, $f4, $fb, $01, $06
20f60     08 0A 0C 0F 
20f64     10 0F 0E 0B 
20f68     08 07 09 03 
20f6c     01 01 01 01 | 	byte	$08, $0a, $0c, $0f, $10, $0f, $0e, $0b, $08, $07, $09, $03, $01, $01, $01, $01
20f70     00 FF FC FC 
20f74     FB F9 FA F8 
20f78     F8 F7 F9 FE 
20f7c     02 03 06 09 | 	byte	$00, $ff, $fc, $fc, $fb, $f9, $fa, $f8, $f8, $f7, $f9, $fe, $02, $03, $06, $09
20f80     09 09 06 05 
20f84     04 01 FC FA 
20f88     F4 F3 F2 F6 
20f8c     FD 04 09 0B | 	byte	$09, $09, $06, $05, $04, $01, $fc, $fa, $f4, $f3, $f2, $f6, $fd, $04, $09, $0b
20f90     0C 0D 08 05 
20f94     01 FE F8 F4 
20f98     EF EB EC EE 
20f9c     F3 F9 00 07 | 	byte	$0c, $0d, $08, $05, $01, $fe, $f8, $f4, $ef, $eb, $ec, $ee, $f3, $f9, $00, $07
20fa0     0B 0F 12 12 
20fa4     11 0C 07 00 
20fa8     F9 F3 EE EF 
20fac     F3 F7 FC 03 | 	byte	$0b, $0f, $12, $12, $11, $0c, $07, $00, $f9, $f3, $ee, $ef, $f3, $f7, $fc, $03
20fb0     08 09 09 09 
20fb4     08 05 00 FA 
20fb8     F3 F0 F1 F7 
20fbc     00 06 0C 0F | 	byte	$08, $09, $09, $09, $08, $05, $00, $fa, $f3, $f0, $f1, $f7, $00, $06, $0c, $0f
20fc0     0E 0D 06 FF 
20fc4     F8 F1 ED ED 
20fc8     F0 F6 02 0F 
20fcc     1A 20 1E 16 | 	byte	$0e, $0d, $06, $ff, $f8, $f1, $ed, $ed, $f0, $f6, $02, $0f, $1a, $20, $1e, $16
20fd0     09 F7 E9 DD 
20fd4     D9 DA E3 F4 
20fd8     06 1B 29 31 
20fdc     2C 1C 04 E7 | 	byte	$09, $f7, $e9, $dd, $d9, $da, $e3, $f4, $06, $1b, $29, $31, $2c, $1c, $04, $e7
20fe0     D5 CD CF DE 
20fe4     F4 0B 1B 20 
20fe8     1D 0F FE EF 
20fec     E5 DF E0 EC | 	byte	$d5, $cd, $cf, $de, $f4, $0b, $1b, $20, $1d, $0f, $fe, $ef, $e5, $df, $e0, $ec
20ff0     FA 06 11 13 
20ff4     0B FE EC E0 
20ff8     E5 F9 13 26 
20ffc     2A 1B FF E7 | 	byte	$fa, $06, $11, $13, $0b, $fe, $ec, $e0, $e5, $f9, $13, $26, $2a, $1b, $ff, $e7
21000     DE E8 FE 0E 
21004     12 04 F0 E8 
21008     F3 08 17 1A 
2100c     0B F5 E8 E7 | 	byte	$de, $e8, $fe, $0e, $12, $04, $f0, $e8, $f3, $08, $17, $1a, $0b, $f5, $e8, $e7
21010     F3 07 0F 04 
21014     EE E0 ED 12 
21018     31 35 18 EB 
2101c     D5 E2 08 2B | 	byte	$f3, $07, $0f, $04, $ee, $e0, $ed, $12, $31, $35, $18, $eb, $d5, $e2, $08, $2b
21020     32 0D D9 C0 
21024     D2 0B 3C 3B 
21028     0A D1 C3 EE 
2102c     28 38 0D D9 | 	byte	$32, $0d, $d9, $c0, $d2, $0b, $3c, $3b, $0a, $d1, $c3, $ee, $28, $38, $0d, $d9
21030     D2 F6 18 14 
21034     FE 02 11 10 
21038     FB ED FC 0F 
2103c     11 FF ED EB | 	byte	$d2, $f6, $18, $14, $fe, $02, $11, $10, $fb, $ed, $fc, $0f, $11, $ff, $ed, $eb
21040     FA 0B 0D 07 
21044     FB F6 02 06 
21048     06 FC F8 FA 
2104c     FB 03 F6 ED | 	byte	$fa, $0b, $0d, $07, $fb, $f6, $02, $06, $06, $fc, $f8, $fa, $fb, $03, $f6, $ed
21050     09 18 0B 07 
21054     0B FC F0 EE 
21058     F9 00 F8 F9 
2105c     02 F3 FC 1B | 	byte	$09, $18, $0b, $07, $0b, $fc, $f0, $ee, $f9, $00, $f8, $f9, $02, $f3, $fc, $1b
21060     13 08 13 04 
21064     F5 00 0C 03 
21068     F8 0D 0B EA 
2106c     F8 08 02 1F | 	byte	$13, $08, $13, $04, $f5, $00, $0c, $03, $f8, $0d, $0b, $ea, $f8, $08, $02, $1f
21070     13 EE 0D 10 
21074     E9 05 15 F1 
21078     FD 04 D7 02 
2107c     0A E6 34 F6 | 	byte	$13, $ee, $0d, $10, $e9, $05, $15, $f1, $fd, $04, $d7, $02, $0a, $e6, $34, $f6
21080     D4 2A E2 F0 
21084     22 E5 21 0D 
21088     D8 0F DB 2B 
2108c     1D EB 18 F0 | 	byte	$d4, $2a, $e2, $f0, $22, $e5, $21, $0d, $d8, $0f, $db, $2b, $1d, $eb, $18, $f0
21090     03 03 E0 24 
21094     DA 14 F2 EF 
21098     0B E6 3D D2 
2109c     18 FD F0 27 | 	byte	$03, $03, $e0, $24, $da, $14, $f2, $ef, $0b, $e6, $3d, $d2, $18, $fd, $f0, $27
210a0     E5 0A F4 F9 
210a4     0D DB 19 F9 
210a8     2B EC 08 19 
210ac     D1 0E EB 02 | 	byte	$e5, $0a, $f4, $f9, $0d, $db, $19, $f9, $2b, $ec, $08, $19, $d1, $0e, $eb, $02
210b0     04 F6 06 E3 
210b4     17 DE 3E FD 
210b8     00 15 CF 1D 
210bc     EF 06 F5 06 | 	byte	$04, $f6, $06, $e3, $17, $de, $3e, $fd, $00, $15, $cf, $1d, $ef, $06, $f5, $06
210c0     F6 E9 05 F7 
210c4     1B 07 FE 1E 
210c8     FD F0 14 F4 
210cc     05 F9 EA 2A | 	byte	$f6, $e9, $05, $f7, $1b, $07, $fe, $1e, $fd, $f0, $14, $f4, $05, $f9, $ea, $2a
210d0     E9 F1 15 03 
210d4     0C 01 EA 02 
210d8     F9 FE F7 09 
210dc     F0 F7 F4 DD | 	byte	$e9, $f1, $15, $03, $0c, $01, $ea, $02, $f9, $fe, $f7, $09, $f0, $f7, $f4, $dd
210e0     04 0C F7 16 
210e4     F0 F7 07 DF 
210e8     04 F2 13 0E 
210ec     E4 FA E7 0D | 	byte	$04, $0c, $f7, $16, $f0, $f7, $07, $df, $04, $f2, $13, $0e, $e4, $fa, $e7, $0d
210f0     20 11 03 10 
210f4     E3 FB 15 F1 
210f8     14 08 E1 1D 
210fc     ED DD 29 ED | 	byte	$20, $11, $03, $10, $e3, $fb, $15, $f1, $14, $08, $e1, $1d, $ed, $dd, $29, $ed
21100     FC 37 E5 E7 
21104     17 DA F1 30 
21108     E9 D4 2D ED 
2110c     D2 2F 13 EB | 	byte	$fc, $37, $e5, $e7, $17, $da, $f1, $30, $e9, $d4, $2d, $ed, $d2, $2f, $13, $eb
21110     0D 10 E2 EC 
21114     29 06 D8 1F 
21118     14 C4 F6 43 
2111c     F8 D6 3D 2D | 	byte	$0d, $10, $e2, $ec, $29, $06, $d8, $1f, $14, $c4, $f6, $43, $f8, $d6, $3d, $2d
21120     D2 F3 28 F3 
21124     D7 0E 1D EA 
21128     D6 F2 06 FB 
2112c     FF 24 1F E8 | 	byte	$d2, $f3, $28, $f3, $d7, $0e, $1d, $ea, $d6, $f2, $06, $fb, $ff, $24, $1f, $e8
21130     D6 0B 27 F2 
21134     DD 06 25 03 
21138     DA E8 14 13 
2113c     FF 0A 1C 04 | 	byte	$d6, $0b, $27, $f2, $dd, $06, $25, $03, $da, $e8, $14, $13, $ff, $0a, $1c, $04
21140     E2 E5 0D 13 
21144     EC E4 08 18 
21148     F6 DF F4 1B 
2114c     2C 02 CD D4 | 	byte	$e2, $e5, $0d, $13, $ec, $e4, $08, $18, $f6, $df, $f4, $1b, $2c, $02, $cd, $d4
21150     07 2C 17 F1 
21154     ED 04 14 11 
21158     FD ED F5 15 
2115c     29 1D F7 E0 | 	byte	$07, $2c, $17, $f1, $ed, $04, $14, $11, $fd, $ed, $f5, $15, $29, $1d, $f7, $e0
21160     ED 12 2C 20 
21164     F4 D7 DF F9 
21168     0A 0B 02 00 
2116c     0C 16 12 FA | 	byte	$ed, $12, $2c, $20, $f4, $d7, $df, $f9, $0a, $0b, $02, $00, $0c, $16, $12, $fa
21170     E0 D8 EF 12 
21174     26 1E F7 CF 
21178     C9 E8 1A 3F 
2117c     45 28 F3 CC | 	byte	$e0, $d8, $ef, $12, $26, $1e, $f7, $cf, $c9, $e8, $1a, $3f, $45, $28, $f3, $cc
21180     C5 E0 0E 33 
21184     38 18 E6 BF 
21188     B4 CC 01 3A 
2118c     57 4B 1C E0 | 	byte	$c5, $e0, $0e, $33, $38, $18, $e6, $bf, $b4, $cc, $01, $3a, $57, $4b, $1c, $e0
21190     B9 B3 CC F7 
21194     27 42 42 26 
21198     F6 C8 B1 B7 
2119c     E1 1B 4B 5D | 	byte	$b9, $b3, $cc, $f7, $27, $42, $42, $26, $f6, $c8, $b1, $b7, $e1, $1b, $4b, $5d
211a0     50 25 ED BE 
211a4     AA AF CE FB 
211a8     24 3A 3B 29 
211ac     11 FC ED E7 | 	byte	$50, $25, $ed, $be, $aa, $af, $ce, $fb, $24, $3a, $3b, $29, $11, $fc, $ed, $e7
211b0     E8 EC F3 F9 
211b4     FF 06 0B 0E 
211b8     10 0A FF F1 
211bc     E5 DF E3 EF | 	byte	$e8, $ec, $f3, $f9, $ff, $06, $0b, $0e, $10, $0a, $ff, $f1, $e5, $df, $e3, $ef
211c0     00 12 1E 25 
211c4     23 13 02 F1 
211c8     DE D5 D6 DF 
211cc     EE FE 10 20 | 	byte	$00, $12, $1e, $25, $23, $13, $02, $f1, $de, $d5, $d6, $df, $ee, $fe, $10, $20
211d0     27 28 23 18 
211d4     0D 00 F5 F0 
211d8     ED ED EB EB 
211dc     ED EF F0 F2 | 	byte	$27, $28, $23, $18, $0d, $00, $f5, $f0, $ed, $ed, $eb, $eb, $ed, $ef, $f0, $f2
211e0     F6 FA 01 09 
211e4     0F 12 15 12 
211e8     0E 06 FD F0 
211ec     E4 DF DC DA | 	byte	$f6, $fa, $01, $09, $0f, $12, $15, $12, $0e, $06, $fd, $f0, $e4, $df, $dc, $da
211f0     DE E3 E9 F4 
211f4     03 0F 1A 21 
211f8     24 25 24 20 
211fc     16 0E 06 FA | 	byte	$de, $e3, $e9, $f4, $03, $0f, $1a, $21, $24, $25, $24, $20, $16, $0e, $06, $fa
21200     F0 EA E6 E4 
21204     E6 E7 EC F4 
21208     FB 03 0A 0D 
2120c     0E 0F 0E 0E | 	byte	$f0, $ea, $e6, $e4, $e6, $e7, $ec, $f4, $fb, $03, $0a, $0d, $0e, $0f, $0e, $0e
21210     0F 0D 07 00 
21214     FD FB F9 FA 
21218     FB FA FB FB 
2121c     FA FA FC 00 | 	byte	$0f, $0d, $07, $00, $fd, $fb, $f9, $fa, $fb, $fa, $fb, $fb, $fa, $fa, $fc, $00
21220     00 FF 01 00 
21224     FF 03 06 08 
21228     08 0B 09 05 
2122c     04 02 02 01 | 	byte	$00, $ff, $01, $00, $ff, $03, $06, $08, $08, $0b, $09, $05, $04, $02, $02, $01
21230     FE FB F9 F6 
21234     F4 F3 F3 F7 
21238     F9 FD 02 06 
2123c     08 08 09 0C | 	byte	$fe, $fb, $f9, $f6, $f4, $f3, $f3, $f7, $f9, $fd, $02, $06, $08, $08, $09, $0c
21240     0C 0B 07 01 
21244     FE F9 F7 F6 
21248     F3 F2 F4 F8 
2124c     FB FF 03 06 | 	byte	$0c, $0b, $07, $01, $fe, $f9, $f7, $f6, $f3, $f2, $f4, $f8, $fb, $ff, $03, $06
21250     09 0C 0F 0D 
21254     0B 0B 0A 06 
21258     04 02 FD F8 
2125c     F7 F3 F0 EF | 	byte	$09, $0c, $0f, $0d, $0b, $0b, $0a, $06, $04, $02, $fd, $f8, $f7, $f3, $f0, $ef
21260     EF F1 F3 F3 
21264     F5 F7 FF 07 
21268     10 19 1F 20 
2126c     1F 1D 18 12 | 	byte	$ef, $f1, $f3, $f3, $f5, $f7, $ff, $07, $10, $19, $1f, $20, $1f, $1d, $18, $12
21270     0D 05 FB F1 
21274     E9 E6 E7 EF 
21278     FB 07 14 1E 
2127c     24 26 21 1A | 	byte	$0d, $05, $fb, $f1, $e9, $e6, $e7, $ef, $fb, $07, $14, $1e, $24, $26, $21, $1a
21280     0E 00 F4 E6 
21284     DB D6 D5 DB 
21288     E9 FB 0C 1B 
2128c     23 24 1C 0F | 	byte	$0e, $00, $f4, $e6, $db, $d6, $d5, $db, $e9, $fb, $0c, $1b, $23, $24, $1c, $0f
21290     00 F2 E6 E0 
21294     DE E3 F0 01 
21298     11 1F 26 24 
2129c     18 06 F3 E3 | 	byte	$00, $f2, $e6, $e0, $de, $e3, $f0, $01, $11, $1f, $26, $24, $18, $06, $f3, $e3
212a0     DA D7 E0 EE 
212a4     01 12 20 2A 
212a8     2D 26 13 FD 
212ac     E4 D0 C5 C8 | 	byte	$da, $d7, $e0, $ee, $01, $12, $20, $2a, $2d, $26, $13, $fd, $e4, $d0, $c5, $c8
212b0     DB F5 11 26 
212b4     2F 2D 20 0D 
212b8     F8 E4 D6 D0 
212bc     D2 E1 FB 14 | 	byte	$db, $f5, $11, $26, $2f, $2d, $20, $0d, $f8, $e4, $d6, $d0, $d2, $e1, $fb, $14
212c0     25 29 1B 04 
212c4     F3 EA ED F9 
212c8     05 0D 0D 05 
212cc     F9 F1 F3 FD | 	byte	$25, $29, $1b, $04, $f3, $ea, $ed, $f9, $05, $0d, $0d, $05, $f9, $f1, $f3, $fd
212d0     08 0D 0A 01 
212d4     F8 F8 FF 02 
212d8     FE F5 F2 FD 
212dc     0D 1A 16 02 | 	byte	$08, $0d, $0a, $01, $f8, $f8, $ff, $02, $fe, $f5, $f2, $fd, $0d, $1a, $16, $02
212e0     E7 D4 DE 03 
212e4     2C 3D 27 F6 
212e8     CD C5 E2 0F 
212ec     2B 27 F9 CC | 	byte	$e7, $d4, $de, $03, $2c, $3d, $27, $f6, $cd, $c5, $e2, $0f, $2b, $27, $f9, $cc
212f0     C1 E6 1D 3B 
212f4     30 02 D0 BC 
212f8     DB 15 2F 1B 
212fc     ED CF DA 02 | 	byte	$c1, $e6, $1d, $3b, $30, $02, $d0, $bc, $db, $15, $2f, $1b, $ed, $cf, $da, $02
21300     1D 1B 04 EF 
21304     F5 0C 18 02 
21308     DF DA FE 23 
2130c     1E FA E3 EF | 	byte	$1d, $1b, $04, $ef, $f5, $0c, $18, $02, $df, $da, $fe, $23, $1e, $fa, $e3, $ef
21310     1F 36 14 DC 
21314     D0 01 21 FF 
21318     D3 E7 29 2B 
2131c     DE BC FE 47 | 	byte	$1f, $36, $14, $dc, $d0, $01, $21, $ff, $d3, $e7, $29, $2b, $de, $bc, $fe, $47
21320     2E D0 DA 30 
21324     2C DA DD 2A 
21328     23 DC E0 11 
2132c     22 04 00 0A | 	byte	$2e, $d0, $da, $30, $2c, $da, $dd, $2a, $23, $dc, $e0, $11, $22, $04, $00, $0a
21330     09 F3 FF 04 
21334     E7 0E 1D E3 
21338     F4 10 FC FD 
2133c     1E 13 D7 03 | 	byte	$09, $f3, $ff, $04, $e7, $0e, $1d, $e3, $f4, $10, $fc, $fd, $1e, $13, $d7, $03
21340     20 D8 E7 14 
21344     EE F2 0B DC 
21348     EC 1F 0F 0B 
2134c     19 13 ED EB | 	byte	$20, $d8, $e7, $14, $ee, $f2, $0b, $dc, $ec, $1f, $0f, $0b, $19, $13, $ed, $eb
21350     FD FC F9 F8 
21354     10 04 D3 0E 
21358     1A 0B 04 F8 
2135c     00 F9 F3 03 | 	byte	$fd, $fc, $f9, $f8, $10, $04, $d3, $0e, $1a, $0b, $04, $f8, $00, $f9, $f3, $03
21360     DD 29 ED 02 
21364     EE 0F 08 11 
21368     1F F4 2F BC 
2136c     26 DD 0B 05 | 	byte	$dd, $29, $ed, $02, $ee, $0f, $08, $11, $1f, $f4, $2f, $bc, $26, $dd, $0b, $05
21370     EC 24 CF 37 
21374     D2 29 0A 0E 
21378     FA E5 21 D4 
2137c     1A F1 24 D8 | 	byte	$ec, $24, $cf, $37, $d2, $29, $0a, $0e, $fa, $e5, $21, $d4, $1a, $f1, $24, $d8
21380     20 D6 22 FB 
21384     18 05 F0 1B 
21388     D6 1A E4 0E 
2138c     F7 0B F8 12 | 	byte	$20, $d6, $22, $fb, $18, $05, $f0, $1b, $d6, $1a, $e4, $0e, $f7, $0b, $f8, $12
21390     D8 25 EA 35 
21394     FD 09 13 CA 
21398     23 D5 29 E4 
2139c     16 EC 0C FC | 	byte	$d8, $25, $ea, $35, $fd, $09, $13, $ca, $23, $d5, $29, $e4, $16, $ec, $0c, $fc
213a0     07 26 EE 37 
213a4     E8 00 FF F1 
213a8     F4 05 17 E8 
213ac     F7 F5 03 FB | 	byte	$07, $26, $ee, $37, $e8, $00, $ff, $f1, $f4, $05, $17, $e8, $f7, $f5, $03, $fb
213b0     2C F5 14 E6 
213b4     F9 06 ED 12 
213b8     E0 25 E9 04 
213bc     0A E8 2D F1 | 	byte	$2c, $f5, $14, $e6, $f9, $06, $ed, $12, $e0, $25, $e9, $04, $0a, $e8, $2d, $f1
213c0     15 00 E9 0E 
213c4     F3 FF F0 05 
213c8     1C DC 17 E9 
213cc     16 10 0A 0A | 	byte	$15, $00, $e9, $0e, $f3, $ff, $f0, $05, $1c, $dc, $17, $e9, $16, $10, $0a, $0a
213d0     F3 05 DC 0F 
213d4     00 E7 2F ED 
213d8     EE 13 EF 16 
213dc     0C 1D E7 02 | 	byte	$f3, $05, $dc, $0f, $00, $e7, $2f, $ed, $ee, $13, $ef, $16, $0c, $1d, $e7, $02
213e0     FE CA 18 14 
213e4     C9 FE FB E8 
213e8     EB F4 F7 0A 
213ec     0D D3 0F 0C | 	byte	$fe, $ca, $18, $14, $c9, $fe, $fb, $e8, $eb, $f4, $f7, $0a, $0d, $d3, $0f, $0c
213f0     D0 F9 12 ED 
213f4     F7 16 EF EC 
213f8     29 0A E3 1F 
213fc     26 E6 E5 0C | 	byte	$d0, $f9, $12, $ed, $f7, $16, $ef, $ec, $29, $0a, $e3, $1f, $26, $e6, $e5, $0c
21400     0A E7 E8 25 
21404     0B DB FF 17 
21408     E5 EB 3E 16 
2140c     BE F1 39 EE | 	byte	$0a, $e7, $e8, $25, $0b, $db, $ff, $17, $e5, $eb, $3e, $16, $be, $f1, $39, $ee
21410     B5 07 42 F6 
21414     BD 09 25 DE 
21418     D5 24 35 E4 
2141c     CC 09 26 EA | 	byte	$b5, $07, $42, $f6, $bd, $09, $25, $de, $d5, $24, $35, $e4, $cc, $09, $26, $ea
21420     CF 12 35 FC 
21424     D0 F5 28 18 
21428     F3 F5 18 1D 
2142c     F2 D2 F4 1C | 	byte	$cf, $12, $35, $fc, $d0, $f5, $28, $18, $f3, $f5, $18, $1d, $f2, $d2, $f4, $1c
21430     18 F3 E1 FA 
21434     09 F5 E6 ED 
21438     0E 2F 20 F3 
2143c     D7 E4 09 18 | 	byte	$18, $f3, $e1, $fa, $09, $f5, $e6, $ed, $0e, $2f, $20, $f3, $d7, $e4, $09, $18
21440     01 E7 E5 F7 
21444     07 0B 05 FF 
21448     06 15 1A 0A 
2144c     EB E0 F6 11 | 	byte	$01, $e7, $e5, $f7, $07, $0b, $05, $ff, $06, $15, $1a, $0a, $eb, $e0, $f6, $11
21450     1B 0A F8 F3 
21454     F5 FB 01 04 
21458     08 07 06 07 
2145c     FF EE E6 F1 | 	byte	$1b, $0a, $f8, $f3, $f5, $fb, $01, $04, $08, $07, $06, $07, $ff, $ee, $e6, $f1
21460     09 19 1C 0F 
21464     F7 E5 E6 FB 
21468     19 36 3F 28 
2146c     FC D3 C0 D1 | 	byte	$09, $19, $1c, $0f, $f7, $e5, $e6, $fb, $19, $36, $3f, $28, $fc, $d3, $c0, $d1
21470     FB 28 40 39 
21474     19 EE CD C5 
21478     D9 00 29 40 
2147c     3B 1C F2 CE | 	byte	$fb, $28, $40, $39, $19, $ee, $cd, $c5, $d9, $00, $29, $40, $3b, $1c, $f2, $ce
21480     BF C9 EA 11 
21484     2F 3C 31 16 
21488     F3 DB D1 D6 
2148c     E9 02 1A 29 | 	byte	$bf, $c9, $ea, $11, $2f, $3c, $31, $16, $f3, $db, $d1, $d6, $e9, $02, $1a, $29
21490     2D 24 12 FD 
21494     E8 D6 D0 D7 
21498     E6 FD 15 29 
2149c     35 36 29 12 | 	byte	$2d, $24, $12, $fd, $e8, $d6, $d0, $d7, $e6, $fd, $15, $29, $35, $36, $29, $12
214a0     F8 E3 D7 D3 
214a4     D6 E1 EF FB 
214a8     05 0C 13 18 
214ac     1C 1E 1B 11 | 	byte	$f8, $e3, $d7, $d3, $d6, $e1, $ef, $fb, $05, $0c, $13, $18, $1c, $1e, $1b, $11
214b0     02 F3 E2 DA 
214b4     D9 DC E8 F5 
214b8     01 0C 10 13 
214bc     14 10 10 0F | 	byte	$02, $f3, $e2, $da, $d9, $dc, $e8, $f5, $01, $0c, $10, $13, $14, $10, $10, $0f
214c0     0B 07 02 00 
214c4     FD FA F7 F4 
214c8     ED E9 E7 E6 
214cc     EA F0 F7 01 | 	byte	$0b, $07, $02, $00, $fd, $fa, $f7, $f4, $ed, $e9, $e7, $e6, $ea, $f0, $f7, $01
214d0     0D 1A 24 29 
214d4     2B 25 1C 12 
214d8     04 F5 E7 DD 
214dc     D3 CF D1 D6 | 	byte	$0d, $1a, $24, $29, $2b, $25, $1c, $12, $04, $f5, $e7, $dd, $d3, $cf, $d1, $d6
214e0     DE EA F8 07 
214e4     1A 27 30 32 
214e8     33 2D 25 1A 
214ec     0D FF EF E0 | 	byte	$de, $ea, $f8, $07, $1a, $27, $30, $32, $33, $2d, $25, $1a, $0d, $ff, $ef, $e0
214f0     D3 CA C4 C4 
214f4     CA D4 DF EB 
214f8     F8 06 0E 16 
214fc     1A 22 26 24 | 	byte	$d3, $ca, $c4, $c4, $ca, $d4, $df, $eb, $f8, $06, $0e, $16, $1a, $22, $26, $24
21500     1E 15 0D 04 
21504     FC F4 EB E6 
21508     E4 E2 E1 E7 
2150c     EE F3 F8 03 | 	byte	$1e, $15, $0d, $04, $fc, $f4, $eb, $e6, $e4, $e2, $e1, $e7, $ee, $f3, $f8, $03
21510     08 0A 0F 16 
21514     1A 1B 1C 1B 
21518     17 0E 07 01 
2151c     FA F2 ED EA | 	byte	$08, $0a, $0f, $16, $1a, $1b, $1c, $1b, $17, $0e, $07, $01, $fa, $f2, $ed, $ea
21520     E6 E3 E2 E8 
21524     EC F3 FA 01 
21528     0A 13 19 1A 
2152c     1C 1E 1D 17 | 	byte	$e6, $e3, $e2, $e8, $ec, $f3, $fa, $01, $0a, $13, $19, $1a, $1c, $1e, $1d, $17
21530     11 0A 01 FA 
21534     F5 EF ED EC 
21538     EC ED F0 F8 
2153c     FB FE 03 0A | 	byte	$11, $0a, $01, $fa, $f5, $ef, $ed, $ec, $ec, $ed, $f0, $f8, $fb, $fe, $03, $0a
21540     10 0F 0E 0F 
21544     0D 0B 0B 0A 
21548     06 00 FF FB 
2154c     F7 F6 F7 FA | 	byte	$10, $0f, $0e, $0f, $0d, $0b, $0b, $0a, $06, $00, $ff, $fb, $f7, $f6, $f7, $fa
21550     F9 F8 F7 F8 
21554     F9 FB 04 0E 
21558     14 17 1A 19 
2155c     14 0C 04 FC | 	byte	$f9, $f8, $f7, $f8, $f9, $fb, $04, $0e, $14, $17, $1a, $19, $14, $0c, $04, $fc
21560     F5 EF E9 E6 
21564     E4 E8 F2 00 
21568     0D 19 1E 1E 
2156c     16 0A FB EC | 	byte	$f5, $ef, $e9, $e6, $e4, $e8, $f2, $00, $0d, $19, $1e, $1e, $16, $0a, $fb, $ec
21570     E2 DC D8 DC 
21574     E6 F6 0A 20 
21578     2F 34 32 23 
2157c     0C F4 E3 D9 | 	byte	$e2, $dc, $d8, $dc, $e6, $f6, $0a, $20, $2f, $34, $32, $23, $0c, $f4, $e3, $d9
21580     D7 E0 F0 04 
21584     19 2C 38 3A 
21588     2D 15 F3 D9 
2158c     C8 C3 D0 E9 | 	byte	$d7, $e0, $f0, $04, $19, $2c, $38, $3a, $2d, $15, $f3, $d9, $c8, $c3, $d0, $e9
21590     0B 27 34 31 
21594     22 0B F6 E6 
21598     DF E2 EA F4 
2159c     FA FC FB F8 | 	byte	$0b, $27, $34, $31, $22, $0b, $f6, $e6, $df, $e2, $ea, $f4, $fa, $fc, $fb, $f8
215a0     F2 EF ED F6 
215a4     09 1E 2C 2B 
215a8     17 F7 D7 C8 
215ac     D0 EC 12 2C | 	byte	$f2, $ef, $ed, $f6, $09, $1e, $2c, $2b, $17, $f7, $d7, $c8, $d0, $ec, $12, $2c
215b0     33 23 06 F0 
215b4     EB F7 07 11 
215b8     0A F4 E4 E8 
215bc     FA 12 1C 0E | 	byte	$33, $23, $06, $f0, $eb, $f7, $07, $11, $0a, $f4, $e4, $e8, $fa, $12, $1c, $0e
215c0     F7 E6 EA 00 
215c4     18 20 15 FC 
215c8     E7 E4 F3 07 
215cc     0E 01 ED E2 | 	byte	$f7, $e6, $ea, $00, $18, $20, $15, $fc, $e7, $e4, $f3, $07, $0e, $01, $ed, $e2
215d0     E7 02 21 2E 
215d4     1D F5 D5 D7 
215d8     00 24 21 FD 
215dc     DD DA F9 17 | 	byte	$e7, $02, $21, $2e, $1d, $f5, $d5, $d7, $00, $24, $21, $fd, $dd, $da, $f9, $17
215e0     1B 0C 00 01 
215e4     06 FE ED E4 
215e8     F3 08 0A F7 
215ec     EE F3 06 1A | 	byte	$1b, $0c, $00, $01, $06, $fe, $ed, $e4, $f3, $08, $0a, $f7, $ee, $f3, $06, $1a
215f0     23 1A 09 FD 
215f4     F3 F6 FE 00 
215f8     FF F2 EE F2 
215fc     F3 F7 12 28 | 	byte	$23, $1a, $09, $fd, $f3, $f6, $fe, $00, $ff, $f2, $ee, $f2, $f3, $f7, $12, $28
21600     10 E4 E3 09 
21604     0A EC E4 F1 
21608     03 FB E5 F0 
2160c     12 16 10 FF | 	byte	$10, $e4, $e3, $09, $0a, $ec, $e4, $f1, $03, $fb, $e5, $f0, $12, $16, $10, $ff
21610     EE F8 02 F4 
21614     EF 00 05 00 
21618     03 FA FB 17 
2161c     1C FA 0F 0D | 	byte	$ee, $f8, $02, $f4, $ef, $00, $05, $00, $03, $fa, $fb, $17, $1c, $fa, $0f, $0d
21620     FA 1D 13 FA 
21624     FB 03 01 06 
21628     FF EF F6 02 
2162c     F7 EF 02 10 | 	byte	$fa, $1d, $13, $fa, $fb, $03, $01, $06, $ff, $ef, $f6, $02, $f7, $ef, $02, $10
21630     17 0F ED E5 
21634     FE 02 F0 E5 
21638     EE 0B 05 DF 
2163c     E8 15 28 0D | 	byte	$17, $0f, $ed, $e5, $fe, $02, $f0, $e5, $ee, $0b, $05, $df, $e8, $15, $28, $0d
21640     F6 F2 F3 EF 
21644     F3 FF 00 FF 
21648     F6 F3 FE 0A 
2164c     1C 24 19 03 | 	byte	$f6, $f2, $f3, $ef, $f3, $ff, $00, $ff, $f6, $f3, $fe, $0a, $1c, $24, $19, $03
21650     F2 ED F9 0B 
21654     07 F0 E4 EE 
21658     FE 05 01 FF 
2165c     0E 1B 15 F4 | 	byte	$f2, $ed, $f9, $0b, $07, $f0, $e4, $ee, $fe, $05, $01, $ff, $0e, $1b, $15, $f4
21660     D9 E0 03 23 
21664     22 F9 D4 D6 
21668     FA 20 2E 1E 
2166c     FE E6 E2 EF | 	byte	$d9, $e0, $03, $23, $22, $f9, $d4, $d6, $fa, $20, $2e, $1e, $fe, $e6, $e2, $ef
21670     03 0D 05 F1 
21674     E4 E8 FF 17 
21678     20 16 FD E8 
2167c     E7 F9 10 1C | 	byte	$03, $0d, $05, $f1, $e4, $e8, $ff, $17, $20, $16, $fd, $e8, $e7, $f9, $10, $1c
21680     0F F8 E7 E4 
21684     F7 0B 11 06 
21688     F5 EC F1 0A 
2168c     26 33 2B 0E | 	byte	$0f, $f8, $e7, $e4, $f7, $0b, $11, $06, $f5, $ec, $f1, $0a, $26, $33, $2b, $0e
21690     E9 CF C7 DA 
21694     FB 1A 2C 2C | 	byte	$e9, $cf, $c7, $da, $fb, $1a, $2c, $2c
21698                 | 	alignl
21698                 | _hng030rm_spin2_dat_
21698     00 00 00 00 
2169c     00 00 00 00 
216a0     00 00 00 00 
216a4     00 00 00 00 
216a8     00 00 00    | vga_font       file "vgafont.def"
216ab     7E 81 A5 81 
216af     81 BD 99 81 
216b3     81 7E 00 00 
216b7     00 00 00 00 | 	byte	$7e, $81, $a5, $81, $81, $bd, $99, $81, $81, $7e, $00, $00, $00, $00, $00, $00
216bb     7E FF DB FF 
216bf     FF C3 E7 FF 
216c3     FF 7E 00 00 
216c7     00 00 00 00 | 	byte	$7e, $ff, $db, $ff, $ff, $c3, $e7, $ff, $ff, $7e, $00, $00, $00, $00, $00, $00
216cb     00 36 7F 7F 
216cf     7F 7F 3E 1C 
216d3     08 00 00 00 
216d7     00 00 00 00 | 	byte	$00, $36, $7f, $7f, $7f, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00
216db     00 08 1C 3E 
216df     7F 3E 1C 08 
216e3     00 00 00 00 
216e7     00 00 00 00 | 	byte	$00, $08, $1c, $3e, $7f, $3e, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00
216eb     18 3C 3C E7 
216ef     E7 E7 18 18 
216f3     3C 00 00 00 
216f7     00 00 00 00 | 	byte	$18, $3c, $3c, $e7, $e7, $e7, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
216fb     18 3C 7E FF 
216ff     FF 7E 18 18 
21703     3C 00 00 00 
21707     00 00 00 00 | 	byte	$18, $3c, $7e, $ff, $ff, $7e, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $00
2170b     00 00 00 18 
2170f     3C 3C 18 00 
21713     00 00 00 00 
21717     00 FF FF FF | 	byte	$00, $00, $00, $18, $3c, $3c, $18, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
2171b     FF FF FF E7 
2171f     C3 C3 E7 FF 
21723     FF FF FF FF 
21727     FF 00 00 00 | 	byte	$ff, $ff, $ff, $e7, $c3, $c3, $e7, $ff, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
2172b     00 00 3C 66 
2172f     42 42 66 3C 
21733     00 00 00 00 
21737     00 FF FF FF | 	byte	$00, $00, $3c, $66, $42, $42, $66, $3c, $00, $00, $00, $00, $00, $ff, $ff, $ff
2173b     FF FF C3 99 
2173f     BD BD 99 C3 
21743     FF FF FF FF 
21747     FF 00 00 00 | 	byte	$ff, $ff, $c3, $99, $bd, $bd, $99, $c3, $ff, $ff, $ff, $ff, $ff, $00, $00, $00
2174b     78 70 58 4C 
2174f     1E 33 33 33 
21753     33 1E 00 00 
21757     00 00 00 00 | 	byte	$78, $70, $58, $4c, $1e, $33, $33, $33, $33, $1e, $00, $00, $00, $00, $00, $00
2175b     3C 66 66 66 
2175f     66 3C 18 7E 
21763     18 18 00 00 
21767     00 00 00 00 | 	byte	$3c, $66, $66, $66, $66, $3c, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00
2176b     FC CC FC 0C 
2176f     0C 0C 0C 0E 
21773     0F 07 00 00 
21777     00 00 00 00 | 	byte	$fc, $cc, $fc, $0c, $0c, $0c, $0c, $0e, $0f, $07, $00, $00, $00, $00, $00, $00
2177b     FE C6 FE C6 
2177f     C6 C6 C6 E6 
21783     E7 67 03 00 
21787     00 00 00 00 | 	byte	$fe, $c6, $fe, $c6, $c6, $c6, $c6, $e6, $e7, $67, $03, $00, $00, $00, $00, $00
2178b     18 18 DB 3C 
2178f     E7 3C DB 18 
21793     18 00 00 00 
21797     00 00 00 01 | 	byte	$18, $18, $db, $3c, $e7, $3c, $db, $18, $18, $00, $00, $00, $00, $00, $00, $01
2179b     03 07 0F 1F 
2179f     7F 1F 0F 07 
217a3     03 01 00 00 
217a7     00 00 00 40 | 	byte	$03, $07, $0f, $1f, $7f, $1f, $0f, $07, $03, $01, $00, $00, $00, $00, $00, $40
217ab     60 70 78 7C 
217af     7F 7C 78 70 
217b3     60 40 00 00 
217b7     00 00 00 00 | 	byte	$60, $70, $78, $7c, $7f, $7c, $78, $70, $60, $40, $00, $00, $00, $00, $00, $00
217bb     18 3C 7E 18 
217bf     18 18 7E 3C 
217c3     18 00 00 00 
217c7     00 00 00 00 | 	byte	$18, $3c, $7e, $18, $18, $18, $7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00
217cb     66 66 66 66 
217cf     66 66 66    | 	byte	$66[7]
217d2     00 66 66 00 
217d6     00 00 00 00 
217da     00 FE DB DB 
217de     DB DE D8 D8 | 	byte	$00, $66, $66, $00, $00, $00, $00, $00, $00, $fe, $db, $db, $db, $de, $d8, $d8
217e2     D8 D8 D8 00 
217e6     00 00 00 3E 
217ea     63 06 1C 36 
217ee     63 63 36 1C | 	byte	$d8, $d8, $d8, $00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c
217f2     30 63 3E 00 
217f6     00 00 00 00 
217fa     00 00 00 00 
217fe     00 00 00 7F | 	byte	$30, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
21802     7F 7F 7F 00 
21806     00 00 00 00 
2180a     00 18 3C 7E 
2180e     18 18 18 7E | 	byte	$7f, $7f, $7f, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $7e
21812     3C 18 7E 00 
21816     00 00 00 00 
2181a     00 18 3C 7E 
2181e     18 18 18 18 | 	byte	$3c, $18, $7e, $00, $00, $00, $00, $00, $00, $18, $3c, $7e, $18, $18, $18, $18
21822     18 18 18 00 
21826     00 00 00 00 
2182a     00 18 18 18 
2182e     18 18 18 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
21832     7E 3C 18 00 
21836     00 00 00 00 
2183a     00 00 00 18 
2183e     30 7F 30 18 | 	byte	$7e, $3c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $18, $30, $7f, $30, $18
21842     00 00 00 00 
21846     00 00 00 00 
2184a     00 00 00    | 	byte	$00[11]
2184d     0C 06 7F 06 
21851     0C 00 00 00 
21855     00 00 00 00 
21859     00 00 00 00 | 	byte	$0c, $06, $7f, $06, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2185d     00 03 03 03 
21861     7F 00 00 00 
21865     00 00 00 00 
21869     00 00 00 00 | 	byte	$00, $03, $03, $03, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2186d     14 36 7F 36 
21871     14 00 00 00 
21875     00 00 00 00 
21879     00 00 00 08 | 	byte	$14, $36, $7f, $36, $14, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $08
2187d     1C 1C 3E 3E 
21881     7F 7F 00 00 
21885     00 00 00 00 
21889     00 00 00 7F | 	byte	$1c, $1c, $3e, $3e, $7f, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f
2188d     7F 3E 3E 1C 
21891     1C 08 00 00 
21895     00 00 00 00 
21899     00 00 00 00 | 	byte	$7f, $3e, $3e, $1c, $1c, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2189d     00 00 00 00 
218a1     00 00 00 00 
218a5     00 00 00 00 
218a9     00 00       | 	byte	$00[14]
218ab     18 3C 3C 3C 
218af     18 18 18 00 
218b3     18 18 00 00 
218b7     00 00 66 66 | 	byte	$18, $3c, $3c, $3c, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $66, $66
218bb     66 24 00 00 
218bf     00 00 00 00 
218c3     00 00 00 00 
218c7     00 00 00 00 | 	byte	$66, $24, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
218cb     00 36 36 7F 
218cf     36 36 36 7F 
218d3     36 36 00 00 
218d7     00 00 18 18 | 	byte	$00, $36, $36, $7f, $36, $36, $36, $7f, $36, $36, $00, $00, $00, $00, $18, $18
218db     3E 63 43 03 
218df     3E 60 60 61 
218e3     63 3E 18 18 
218e7     00 00 00 00 | 	byte	$3e, $63, $43, $03, $3e, $60, $60, $61, $63, $3e, $18, $18, $00, $00, $00, $00
218eb     00 00 43 63 
218ef     30 18 0C 06 
218f3     63 61 00 00 
218f7     00 00 00 00 | 	byte	$00, $00, $43, $63, $30, $18, $0c, $06, $63, $61, $00, $00, $00, $00, $00, $00
218fb     1C 36 36 1C 
218ff     6E 3B 33 33 
21903     33 6E 00 00 
21907     00 00 00 00 | 	byte	$1c, $36, $36, $1c, $6e, $3b, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00
2190b     0C 0C 0C 06 
2190f     00 00 00 00 
21913     00 00 00 00 
21917     00 00 00 00 | 	byte	$0c, $0c, $0c, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2191b     30 18 0C 0C 
2191f     0C 0C 0C 0C 
21923     18 30 00 00 
21927     00 00 00 00 | 	byte	$30, $18, $0c, $0c, $0c, $0c, $0c, $0c, $18, $30, $00, $00, $00, $00, $00, $00
2192b     0C 18 30 30 
2192f     30 30 30 30 
21933     18 0C 00 00 
21937     00 00 00 00 | 	byte	$0c, $18, $30, $30, $30, $30, $30, $30, $18, $0c, $00, $00, $00, $00, $00, $00
2193b     00 00 00 66 
2193f     3C FF 3C 66 
21943     00 00 00 00 
21947     00 00 00 00 | 	byte	$00, $00, $00, $66, $3c, $ff, $3c, $66, $00, $00, $00, $00, $00, $00, $00, $00
2194b     00 00 00 18 
2194f     18 7E 18 18 
21953     00 00 00 00 
21957     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $7e, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00
2195b     00 00 00 00 
2195f     00 00 00 00 | 	byte	$00[8]
21963     18 18 18 0C 
21967     00 00 00 00 
2196b     00 00 00 00 
2196f     00 7F 00 00 | 	byte	$18, $18, $18, $0c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7f, $00, $00
21973     00 00 00 00 
21977     00 00 00 00 
2197b     00 00 00 00 
2197f     00 00 00 00 | 	byte	$00[16]
21983     18 18 00 00 
21987     00 00 00 00 
2198b     00 00 40 60 
2198f     30 18 0C 06 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $40, $60, $30, $18, $0c, $06
21993     03 01 00 00 
21997     00 00 00 00 
2199b     1C 36 63 63 
2199f     6B 6B 63 63 | 	byte	$03, $01, $00, $00, $00, $00, $00, $00, $1c, $36, $63, $63, $6b, $6b, $63, $63
219a3     36 1C 00 00 
219a7     00 00 00 00 
219ab     18 1C 1E 18 
219af     18 18 18 18 | 	byte	$36, $1c, $00, $00, $00, $00, $00, $00, $18, $1c, $1e, $18, $18, $18, $18, $18
219b3     18 7E 00 00 
219b7     00 00 00 00 
219bb     3E 63 60 30 
219bf     18 0C 06 03 | 	byte	$18, $7e, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $30, $18, $0c, $06, $03
219c3     63 7F 00 00 
219c7     00 00 00 00 
219cb     3E 63 60 60 
219cf     3C 60 60 60 | 	byte	$63, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $60, $60, $3c, $60, $60, $60
219d3     63 3E 00 00 
219d7     00 00 00 00 
219db     30 38 3C 36 
219df     33 7F 30 30 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $30, $38, $3c, $36, $33, $7f, $30, $30
219e3     30 78 00 00 
219e7     00 00 00 00 
219eb     7F 03 03 03 
219ef     3F 60 60 60 | 	byte	$30, $78, $00, $00, $00, $00, $00, $00, $7f, $03, $03, $03, $3f, $60, $60, $60
219f3     63 3E 00 00 
219f7     00 00 00 00 
219fb     1C 06 03 03 
219ff     3F 63 63 63 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $1c, $06, $03, $03, $3f, $63, $63, $63
21a03     63 3E 00 00 
21a07     00 00 00 00 
21a0b     7F 63 60 60 
21a0f     30 18 0C 0C | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $7f, $63, $60, $60, $30, $18, $0c, $0c
21a13     0C 0C 00 00 
21a17     00 00 00 00 
21a1b     3E 63 63 63 
21a1f     3E 63 63 63 | 	byte	$0c, $0c, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $3e, $63, $63, $63
21a23     63 3E 00 00 
21a27     00 00 00 00 
21a2b     3E 63 63 63 
21a2f     7E 60 60 60 | 	byte	$63, $3e, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $7e, $60, $60, $60
21a33     30 1E 00 00 
21a37     00 00 00 00 
21a3b     00 00 00 18 
21a3f     18 00 00 00 | 	byte	$30, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
21a43     18 18 00 00 
21a47     00 00 00 00 
21a4b     00 00 00 18 
21a4f     18 00 00 00 | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $00, $00
21a53     18 18 0C 00 
21a57     00 00 00 00 
21a5b     00 60 30 18 
21a5f     0C 06 0C 18 | 	byte	$18, $18, $0c, $00, $00, $00, $00, $00, $00, $60, $30, $18, $0c, $06, $0c, $18
21a63     30 60 00 00 
21a67     00 00 00 00 
21a6b     00 00 00 7E 
21a6f     00 00 7E 00 | 	byte	$30, $60, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $00, $00, $7e, $00
21a73     00 00 00 00 
21a77     00 00 00 00 
21a7b     00          | 	byte	$00[9]
21a7c     06 0C 18 30 
21a80     60 30 18 0C 
21a84     06 00 00 00 
21a88     00 00 00 3E | 	byte	$06, $0c, $18, $30, $60, $30, $18, $0c, $06, $00, $00, $00, $00, $00, $00, $3e
21a8c     63 63 30 18 
21a90     18 18 00 18 
21a94     18 00 00 00 
21a98     00 00 00 00 | 	byte	$63, $63, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00
21a9c     3E 63 63 7B 
21aa0     7B 7B 3B 03 
21aa4     3E 00 00 00 
21aa8     00 00 00 08 | 	byte	$3e, $63, $63, $7b, $7b, $7b, $3b, $03, $3e, $00, $00, $00, $00, $00, $00, $08
21aac     1C 36 63 63 
21ab0     7F 63 63 63 
21ab4     63 00 00 00 
21ab8     00 00 00 3F | 	byte	$1c, $36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3f
21abc     66 66 66 3E 
21ac0     66 66 66 66 
21ac4     3F 00 00 00 
21ac8     00 00 00 3C | 	byte	$66, $66, $66, $3e, $66, $66, $66, $66, $3f, $00, $00, $00, $00, $00, $00, $3c
21acc     66 43 03 03 
21ad0     03 03 43 66 
21ad4     3C 00 00 00 
21ad8     00 00 00 1F | 	byte	$66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00, $00, $1f
21adc     36 66 66 66 
21ae0     66 66 66 36 
21ae4     1F 00 00 00 
21ae8     00 00 00 7F | 	byte	$36, $66, $66, $66, $66, $66, $66, $36, $1f, $00, $00, $00, $00, $00, $00, $7f
21aec     66 46 16 1E 
21af0     16 06 46 66 
21af4     7F 00 00 00 
21af8     00 00 00 7F | 	byte	$66, $46, $16, $1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $7f
21afc     66 46 16 1E 
21b00     16 06 06 06 
21b04     0F 00 00 00 
21b08     00 00 00 3C | 	byte	$66, $46, $16, $1e, $16, $06, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $3c
21b0c     66 43 03 03 
21b10     7B 63 63 66 
21b14     5C 00 00 00 
21b18     00 00 00 63 | 	byte	$66, $43, $03, $03, $7b, $63, $63, $66, $5c, $00, $00, $00, $00, $00, $00, $63
21b1c     63 63 63 7F 
21b20     63 63 63 63 
21b24     63 00 00 00 
21b28     00 00 00 3C | 	byte	$63, $63, $63, $7f, $63, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $3c
21b2c     18 18 18 18 
21b30     18 18 18 18 | 	byte	$18[8]
21b34     3C 00 00 00 
21b38     00 00 00 78 
21b3c     30 30 30 30 
21b40     30 33 33 33 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $78, $30, $30, $30, $30, $30, $33, $33, $33
21b44     1E 00 00 00 
21b48     00 00 00 67 
21b4c     66 66 36 1E 
21b50     1E 36 66 66 | 	byte	$1e, $00, $00, $00, $00, $00, $00, $67, $66, $66, $36, $1e, $1e, $36, $66, $66
21b54     67 00 00 00 
21b58     00 00 00 0F 
21b5c     06 06 06 06 
21b60     06 06 46 66 | 	byte	$67, $00, $00, $00, $00, $00, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
21b64     7F 00 00 00 
21b68     00 00 00 63 
21b6c     77 7F 7F 6B 
21b70     63 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $63, $77, $7f, $7f, $6b, $63, $63, $63, $63
21b74     63 00 00 00 
21b78     00 00 00 63 
21b7c     67 6F 7F 7B 
21b80     73 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63
21b84     63 00 00 00 
21b88     00 00 00 3E 
21b8c     63 63 63 63 
21b90     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
21b94     3E 00 00 00 
21b98     00 00 00 3F 
21b9c     66 66 66 3E 
21ba0     06 06 06 06 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $06, $06, $06, $06
21ba4     0F 00 00 00 
21ba8     00 00 00 3E 
21bac     63 63 63 63 
21bb0     63 63 6B 7B | 	byte	$0f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63, $63, $6b, $7b
21bb4     3E 30 70 00 
21bb8     00 00 00 3F 
21bbc     66 66 66 3E 
21bc0     36 66 66 66 | 	byte	$3e, $30, $70, $00, $00, $00, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66
21bc4     67 00 00 00 
21bc8     00 00 00 3E 
21bcc     63 63 06 1C 
21bd0     30 60 63 63 | 	byte	$67, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
21bd4     3E 00 00 00 
21bd8     00 00 00 7E 
21bdc     7E 5A 18 18 
21be0     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
21be4     3C 00 00 00 
21be8     00 00 00 63 
21bec     63 63 63 63 
21bf0     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
21bf4     3E 00 00 00 
21bf8     00 00 00 63 
21bfc     63 63 63 63 
21c00     63 63 36 1C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63, $63, $36, $1c
21c04     08 00 00 00 
21c08     00 00 00 63 
21c0c     63 63 63 6B 
21c10     6B 6B 7F 77 | 	byte	$08, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $6b, $6b, $6b, $7f, $77
21c14     36 00 00 00 
21c18     00 00 00 63 
21c1c     63 36 3E 1C 
21c20     1C 3E 36 63 | 	byte	$36, $00, $00, $00, $00, $00, $00, $63, $63, $36, $3e, $1c, $1c, $3e, $36, $63
21c24     63 00 00 00 
21c28     00 00 00 66 
21c2c     66 66 66 3C 
21c30     18 18 18 18 | 	byte	$63, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18
21c34     3C 00 00 00 
21c38     00 00 00 7F 
21c3c     63 61 30 18 
21c40     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
21c44     7F 00 00 00 
21c48     00 00 00 3C 
21c4c     0C 0C 0C 0C 
21c50     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $3c, $0c, $0c, $0c, $0c, $0c, $0c, $0c, $0c
21c54     3C 00 00 00 
21c58     00 00 00 00 
21c5c     01 03 07 0E 
21c60     1C 38 70 60 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $01, $03, $07, $0e, $1c, $38, $70, $60
21c64     40 00 00 00 
21c68     00 00 00 3C 
21c6c     30 30 30 30 
21c70     30 30 30 30 | 	byte	$40, $00, $00, $00, $00, $00, $00, $3c, $30, $30, $30, $30, $30, $30, $30, $30
21c74     3C 00 00 00 
21c78     1C 36 00 00 
21c7c     00 00 00 00 
21c80     00 00 00 00 | 	byte	$3c, $00, $00, $00, $1c, $36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21c84     00 00 00 00 
21c88     00 00 00 00 
21c8c     00 00 00 00 
21c90     00 00 00 00 
21c94     00          | 	byte	$00[17]
21c95     FF 00 00 0C 
21c99     18 00 00 00 
21c9d     00 00 00 00 
21ca1     00 00 00 00 | 	byte	$ff, $00, $00, $0c, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21ca5     00 00 00 00 
21ca9     00 00 00 00 
21cad     00          | 	byte	$00[9]
21cae     1E 30 3E 33 
21cb2     33 33 6E 00 
21cb6     00 00 00 00 
21cba     00 07 06 06 | 	byte	$1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $07, $06, $06
21cbe     1E 36 66 66 
21cc2     66 66 3E 00 
21cc6     00 00 00 00 
21cca     00 00 00 00 | 	byte	$1e, $36, $66, $66, $66, $66, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00
21cce     3E 63 03 03 
21cd2     03 63 3E 00 
21cd6     00 00 00 00 
21cda     00 38 30 30 | 	byte	$3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $30, $30
21cde     3C 36 33 33 
21ce2     33 33 6E 00 
21ce6     00 00 00 00 
21cea     00 00 00 00 | 	byte	$3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $00, $00, $00
21cee     3E 63 7F 03 
21cf2     03 63 3E 00 
21cf6     00 00 00 00 
21cfa     00 38 6C 4C | 	byte	$3e, $63, $7f, $03, $03, $63, $3e, $00, $00, $00, $00, $00, $00, $38, $6c, $4c
21cfe     0C 1E 0C 0C 
21d02     0C 0C 1E 00 
21d06     00 00 00 00 
21d0a     00 00 00 00 | 	byte	$0c, $1e, $0c, $0c, $0c, $0c, $1e, $00, $00, $00, $00, $00, $00, $00, $00, $00
21d0e     6E 33 33 33 
21d12     33 33 3E 30 
21d16     33 1E 00 00 
21d1a     00 07 06 06 | 	byte	$6e, $33, $33, $33, $33, $33, $3e, $30, $33, $1e, $00, $00, $00, $07, $06, $06
21d1e     36 6E 66 66 
21d22     66 66 67 00 
21d26     00 00 00 00 
21d2a     00 18 18 00 | 	byte	$36, $6e, $66, $66, $66, $66, $67, $00, $00, $00, $00, $00, $00, $18, $18, $00
21d2e     1C 18 18 18 
21d32     18 18 3C 00 
21d36     00 00 00 00 
21d3a     00 60 60 00 | 	byte	$1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00, $00, $60, $60, $00
21d3e     70 60 60 60 
21d42     60 60 60 66 
21d46     66 3C 00 00 
21d4a     00 07 06 06 | 	byte	$70, $60, $60, $60, $60, $60, $60, $66, $66, $3c, $00, $00, $00, $07, $06, $06
21d4e     66 36 1E 1E 
21d52     36 66 67 00 
21d56     00 00 00 00 
21d5a     00 1C 18 18 | 	byte	$66, $36, $1e, $1e, $36, $66, $67, $00, $00, $00, $00, $00, $00, $1c, $18, $18
21d5e     18 18 18 18 
21d62     18 18       | 	byte	$18[6]
21d64     3C 00 00 00 
21d68     00 00 00 00 
21d6c     00 00 37 7F 
21d70     6B 6B 6B 6B | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $37, $7f, $6b, $6b, $6b, $6b
21d74     63 00 00 00 
21d78     00 00 00 00 
21d7c     00 00 3B 66 
21d80     66 66 66 66 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
21d84     66 00 00 00 
21d88     00 00 00 00 
21d8c     00 00 3E 63 
21d90     63 63 63 63 | 	byte	$66, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $63, $63, $63
21d94     3E 00 00 00 
21d98     00 00 00 00 
21d9c     00 00 3B 66 
21da0     66 66 66 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3b, $66, $66, $66, $66, $66
21da4     3E 06 06 0F 
21da8     00 00 00 00 
21dac     00 00 6E 33 
21db0     33 33 33 33 | 	byte	$3e, $06, $06, $0f, $00, $00, $00, $00, $00, $00, $6e, $33, $33, $33, $33, $33
21db4     3E 30 30 78 
21db8     00 00 00 00 
21dbc     00 00 3B 6E 
21dc0     66 06 06 06 | 	byte	$3e, $30, $30, $78, $00, $00, $00, $00, $00, $00, $3b, $6e, $66, $06, $06, $06
21dc4     0F 00 00 00 
21dc8     00 00 00 00 
21dcc     00 00 3E 63 
21dd0     06 1C 30 63 | 	byte	$0f, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63
21dd4     3E 00 00 00 
21dd8     00 00 00 08 
21ddc     0C 0C 3F 0C 
21de0     0C 0C 0C 6C | 	byte	$3e, $00, $00, $00, $00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
21de4     38 00 00 00 
21de8     00 00 00 00 
21dec     00 00 33 33 
21df0     33 33 33 33 | 	byte	$38, $00, $00, $00, $00, $00, $00, $00, $00, $00, $33, $33, $33, $33, $33, $33
21df4     6E 00 00 00 
21df8     00 00 00 00 
21dfc     00 00 63 63 
21e00     63 63 63 36 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $36
21e04     1C 00 00 00 
21e08     00 00 00 00 
21e0c     00 00 63 63 
21e10     6B 6B 6B 7F | 	byte	$1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $6b, $6b, $6b, $7f
21e14     36 00 00 00 
21e18     00 00 00 00 
21e1c     00 00 63 36 
21e20     1C 1C 1C 36 | 	byte	$36, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $1c, $36
21e24     63 00 00 00 
21e28     00 00 00 00 
21e2c     00 00 63 63 
21e30     63 63 63 63 | 	byte	$63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $63, $63, $63, $63, $63, $63
21e34     7E 60 30 1F 
21e38     00 00 00 00 
21e3c     00 00 7F 33 
21e40     18 0C 06 63 | 	byte	$7e, $60, $30, $1f, $00, $00, $00, $00, $00, $00, $7f, $33, $18, $0c, $06, $63
21e44     7F 00 00 00 
21e48     00 00 00 70 
21e4c     18 18 18 0E 
21e50     18 18 18 18 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $70, $18, $18, $18, $0e, $18, $18, $18, $18
21e54     70 00 00 00 
21e58     00 00 00 18 
21e5c     18 18 18 18 
21e60     18 18 18 18 | 	byte	$70, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18
21e64     18 00 00 00 
21e68     00 00 00 0E 
21e6c     18 18 18 70 
21e70     18 18 18 18 | 	byte	$18, $00, $00, $00, $00, $00, $00, $0e, $18, $18, $18, $70, $18, $18, $18, $18
21e74     0E 00 00 00 
21e78     6E 3B 00 00 
21e7c     00 00 00 00 
21e80     00 00 00 00 | 	byte	$0e, $00, $00, $00, $6e, $3b, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
21e84     00 00 00 00 
21e88     00 00 00 00 
21e8c     00 00       | 	byte	$00[10]
21e8e     08 1C 36 63 
21e92     63 63 7F 00 
21e96     00 00 00 00 
21e9a     00 3C 66 43 | 	byte	$08, $1c, $36, $63, $63, $63, $7f, $00, $00, $00, $00, $00, $00, $3c, $66, $43
21e9e     03 03 03 03 
21ea2     43 66 3C 18 
21ea6     30 1E 00 00 
21eaa     00 00 33 00 | 	byte	$03, $03, $03, $03, $43, $66, $3c, $18, $30, $1e, $00, $00, $00, $00, $33, $00
21eae     33 33 33 33 
21eb2     33 33       | 	byte	$33[6]
21eb4     6E 00 00 00 
21eb8     00 00 60 30 
21ebc     18 00 3E 63 
21ec0     7F 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $7f, $03, $03, $63
21ec4     3E 00 00 00 
21ec8     00 00 08 1C 
21ecc     36 00 1E 30 
21ed0     3E 33 33 33 | 	byte	$3e, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $1e, $30, $3e, $33, $33, $33
21ed4     6E 00 00 00 
21ed8     00 00 00 00 
21edc     33 00 1E 30 
21ee0     3E 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $00, $00, $33, $00, $1e, $30, $3e, $33, $33, $33
21ee4     6E 00 00 00 
21ee8     00 00 1C 36 
21eec     1C 00 33 33 
21ef0     33 33 33 33 | 	byte	$6e, $00, $00, $00, $00, $00, $1c, $36, $1c, $00, $33, $33, $33, $33, $33, $33
21ef4     6E 00 00 00 
21ef8     00 00 60 30 
21efc     18 00 3E 63 
21f00     03 03 03 63 | 	byte	$6e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $03, $03, $03, $63
21f04     3E 00 00 00 
21f08     00 00 00 00 
21f0c     00 00 3E 63 
21f10     03 03 03 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $3e, $63, $03, $03, $03, $63
21f14     3E 18 30 1E 
21f18     00 00 00 1C 
21f1c     58 78 38 18 
21f20     1C 1E 1A 18 | 	byte	$3e, $18, $30, $1e, $00, $00, $00, $1c, $58, $78, $38, $18, $1c, $1e, $1a, $18
21f24     3C 00 00 00 
21f28     00 00 00 00 
21f2c     63 00 3E 63 
21f30     7F 03 03 63 | 	byte	$3c, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $7f, $03, $03, $63
21f34     3E 00 00 00 
21f38     66 33 00 3E 
21f3c     63 63 63 63 
21f40     63 63 63 63 | 	byte	$3e, $00, $00, $00, $66, $33, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
21f44     3E 00 00 00 
21f48     00 00 CC 66 
21f4c     33 00 3E 63 
21f50     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $cc, $66, $33, $00, $3e, $63, $63, $63, $63, $63
21f54     3E 00 00 00 
21f58     00 00 18 3C 
21f5c     66 00 1C 18 
21f60     18 18 18 18 | 	byte	$3e, $00, $00, $00, $00, $00, $18, $3c, $66, $00, $1c, $18, $18, $18, $18, $18
21f64     3C 00 00 00 
21f68     30 18 00 7F 
21f6c     63 61 30 18 
21f70     0C 06 43 63 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63
21f74     7F 00 00 00 
21f78     00 63 00 08 
21f7c     1C 36 63 63 
21f80     7F 63 63 63 | 	byte	$7f, $00, $00, $00, $00, $63, $00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63
21f84     63 00 00 00 
21f88     30 18 00 3C 
21f8c     66 43 03 03 
21f90     03 03 43 66 | 	byte	$63, $00, $00, $00, $30, $18, $00, $3c, $66, $43, $03, $03, $03, $03, $43, $66
21f94     3C 00 00 00 
21f98     30 18 00 7F 
21f9c     66 46 16 1E 
21fa0     16 06 46 66 | 	byte	$3c, $00, $00, $00, $30, $18, $00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66
21fa4     7F 00 00 00 
21fa8     0C 06 00 0F 
21fac     06 06 06 06 
21fb0     06 06 46 66 | 	byte	$7f, $00, $00, $00, $0c, $06, $00, $0f, $06, $06, $06, $06, $06, $06, $46, $66
21fb4     7F 00 00 00 
21fb8     30 18 00 1C 
21fbc     18 18 18 18 
21fc0     18 18 18 18 | 	byte	$7f, $00, $00, $00, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $18, $18, $18
21fc4     3C 00 00 00 
21fc8     00 00 08 1C 
21fcc     36 00 3E 63 
21fd0     63 63 63 63 | 	byte	$3c, $00, $00, $00, $00, $00, $08, $1c, $36, $00, $3e, $63, $63, $63, $63, $63
21fd4     3E 00 00 00 
21fd8     00 00 00 00 
21fdc     63 00 3E 63 
21fe0     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63
21fe4     3E 00 00 00 
21fe8     00 00 00 6F 
21fec     46 26 06 06 
21ff0     06 06 46 66 | 	byte	$3e, $00, $00, $00, $00, $00, $00, $6f, $46, $26, $06, $06, $06, $06, $46, $66
21ff4     7F 00 00 00 
21ff8     00 00 00 6E 
21ffc     4C 2C 0C 0C 
22000     0C 0C 0C 0C | 	byte	$7f, $00, $00, $00, $00, $00, $00, $6e, $4c, $2c, $0c, $0c, $0c, $0c, $0c, $0c
22004     1E 00 00 00 
22008     30 18 00 3E 
2200c     63 63 06 1C 
22010     30 60 63 63 | 	byte	$1e, $00, $00, $00, $30, $18, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63
22014     3E 00 00 00 
22018     00 00 60 30 
2201c     18 00 3E 63 
22020     06 1C 30 63 | 	byte	$3e, $00, $00, $00, $00, $00, $60, $30, $18, $00, $3e, $63, $06, $1c, $30, $63
22024     3E 00 00 00 
22028     00 63 00 3E 
2202c     63 63 63 63 
22030     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63
22034     3E 00 00 00 
22038     00 63 00 63 
2203c     63 63 63 63 
22040     63 63 63 63 | 	byte	$3e, $00, $00, $00, $00, $63, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63
22044     3E 00 00 00 
22048     6C 38 00 7E 
2204c     7E 5A 18 18 
22050     18 18 18 18 | 	byte	$3e, $00, $00, $00, $6c, $38, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18
22054     3C 00 00 00 
22058     00 00 60 48 
2205c     2C 0C 3F 0C 
22060     0C 0C 0C 6C | 	byte	$3c, $00, $00, $00, $00, $00, $60, $48, $2c, $0c, $3f, $0c, $0c, $0c, $0c, $6c
22064     38 00 00 00 
22068     00 00 00 0F 
2206c     26 36 1E 0E 
22070     07 07 46 66 | 	byte	$38, $00, $00, $00, $00, $00, $00, $0f, $26, $36, $1e, $0e, $07, $07, $46, $66
22074     7F 00 00 00 
22078     00 00 00 00 
2207c     00 63 36 1C 
22080     1C 36 63 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $00, $63, $36, $1c, $1c, $36, $63, $00
22084     00 00 00 00 
22088     00 00       | 	byte	$00[6]
2208a     36 1C 08 00 
2208e     3E 63 03 03 
22092     03 63 3E 00 
22096     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3e, $63, $03, $03, $03, $63, $3e, $00, $00, $00, $00, $00
2209a     30 18 0C 00 
2209e     1E 30 3E 33 
220a2     33 33 6E 00 
220a6     00 00 00 00 | 	byte	$30, $18, $0c, $00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $00, $00
220aa     60 30 18 00 
220ae     1C 18 18 18 
220b2     18 18 3C 00 
220b6     00 00 00 00 | 	byte	$60, $30, $18, $00, $1c, $18, $18, $18, $18, $18, $3c, $00, $00, $00, $00, $00
220ba     60 30 18 00 
220be     3E 63 63 63 
220c2     63 63 3E 00 
220c6     00 00 00 00 | 	byte	$60, $30, $18, $00, $3e, $63, $63, $63, $63, $63, $3e, $00, $00, $00, $00, $00
220ca     30 18 0C 00 
220ce     33 33 33 33 
220d2     33 33 6E 00 
220d6     00 00 00 00 | 	byte	$30, $18, $0c, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00
220da     00 08 1C 36 
220de     63 63 7F 63 
220e2     63 63 63 18 
220e6     0C 78 00 00 | 	byte	$00, $08, $1c, $36, $63, $63, $7f, $63, $63, $63, $63, $18, $0c, $78, $00, $00
220ea     00 00 00 00 
220ee     1E 30 3E 33 
220f2     33 33 6E 18 
220f6     0C 78 36 1C | 	byte	$00, $00, $00, $00, $1e, $30, $3e, $33, $33, $33, $6e, $18, $0c, $78, $36, $1c
220fa     00 7F 63 61 
220fe     30 18 0C 06 
22102     43 63 7F 00 
22106     00 00 00 00 | 	byte	$00, $7f, $63, $61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00
2210a     36 1C 08 00 
2210e     7F 33 18 0C 
22112     06 63 7F 00 
22116     00 00 00 00 | 	byte	$36, $1c, $08, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00
2211a     00 7F 66 46 
2211e     16 1E 16 06 
22122     46 66 7F 18 
22126     0C 78 00 00 | 	byte	$00, $7f, $66, $46, $16, $1e, $16, $06, $46, $66, $7f, $18, $0c, $78, $00, $00
2212a     00 00 00 00 
2212e     3E 63 7F 03 
22132     03 63 3E 18 
22136     0C 78 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $7f, $03, $03, $63, $3e, $18, $0c, $78, $00, $00
2213a     00 3C 66 03 
2213e     1F 03 0F 03 
22142     03 66 3C 00 
22146     00 00 00 00 | 	byte	$00, $3c, $66, $03, $1f, $03, $0f, $03, $03, $66, $3c, $00, $00, $00, $00, $00
2214a     60 30 18 00 
2214e     7F 33 18 0C 
22152     06 63 7F 00 
22156     00 00 6C 38 | 	byte	$60, $30, $18, $00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $6c, $38
2215a     00 3C 66 43 
2215e     03 03 03 03 
22162     43 66 3C 00 
22166     00 00 00 00 | 	byte	$00, $3c, $66, $43, $03, $03, $03, $03, $43, $66, $3c, $00, $00, $00, $00, $00
2216a     00 00 00 00 
2216e     3E 63 06 1C 
22172     30 63 3E 18 
22176     30 1E 00 00 | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $30, $63, $3e, $18, $30, $1e, $00, $00
2217a     00 00 00 00 
2217e     00 00       | 	byte	$00[6]
22180     6C 36 1B 36 
22184     6C 00 00 00 
22188     00 00 00 00 
2218c     00 00 00 00 | 	byte	$6c, $36, $1b, $36, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22190     1B 36 6C 36 
22194     1B 00 00 00 
22198     88 22 88 22 
2219c     88 22 88 22 | 	byte	$1b, $36, $6c, $36, $1b, $00, $00, $00, $88, $22, $88, $22, $88, $22, $88, $22
221a0     88 22 88 22 
221a4     88 22 88 22 
221a8     AA 55 AA 55 
221ac     AA 55 AA 55 | 	byte	$88, $22, $88, $22, $88, $22, $88, $22, $aa, $55, $aa, $55, $aa, $55, $aa, $55
221b0     AA 55 AA 55 
221b4     AA 55 AA 55 
221b8     BB EE BB EE 
221bc     BB EE BB EE | 	byte	$aa, $55, $aa, $55, $aa, $55, $aa, $55, $bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee
221c0     BB EE BB EE 
221c4     BB EE BB EE 
221c8     18 18 18 18 
221cc     18 18 18 18 | 	byte	$bb, $ee, $bb, $ee, $bb, $ee, $bb, $ee, $18, $18, $18, $18, $18, $18, $18, $18
221d0     18 18 18 18 
221d4     18 18 18 18 
221d8     18 18 18 18 
221dc     18 18 18    | 	byte	$18[15]
221df     1F 18 18 18 
221e3     18 18 18 18 
221e7     18 30 18 00 
221eb     08 1C 36 63 | 	byte	$1f, $18, $18, $18, $18, $18, $18, $18, $18, $30, $18, $00, $08, $1c, $36, $63
221ef     63 7F 63 63 
221f3     63 63 00 00 
221f7     00 1C 36 00 
221fb     08 1C 36 63 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $1c, $36, $00, $08, $1c, $36, $63
221ff     63 7F 63 63 
22203     63 63 00 00 
22207     00 36 1C 00 
2220b     7F 66 46 16 | 	byte	$63, $7f, $63, $63, $63, $63, $00, $00, $00, $36, $1c, $00, $7f, $66, $46, $16
2220f     1E 16 06 46 
22213     66 7F 00 00 
22217     00 00 00 00 
2221b     3E 63 63 06 | 	byte	$1e, $16, $06, $46, $66, $7f, $00, $00, $00, $00, $00, $00, $3e, $63, $63, $06
2221f     1C 30 60 63 
22223     63 3E 18 30 
22227     1E 6C 6C 6C 
2222b     6C 6C 6F 60 | 	byte	$1c, $30, $60, $63, $63, $3e, $18, $30, $1e, $6c, $6c, $6c, $6c, $6c, $6f, $60
2222f     6F 6C 6C 6C 
22233     6C 6C 6C 6C 
22237     6C 6C 6C 6C 
2223b     6C 6C 6C 6C | 	byte	$6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2223f     6C 6C 6C 6C 
22243     6C 6C 6C 6C 
22247     6C          | 	byte	$6c[9]
22248     00 00 00 00 
2224c     00          | 	byte	$00[5]
2224d     7F 60 6F 6C 
22251     6C 6C 6C 6C 
22255     6C 6C 6C 6C 
22259     6C 6C 6C 6C | 	byte	$7f, $60, $6f, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2225d     6F 60 7F 00 
22261     00 00 00 00 
22265     00 00 00 18 
22269     18 00 7F 63 | 	byte	$6f, $60, $7f, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $00, $7f, $63
2226d     61 30 18 0C 
22271     06 43 63 7F 
22275     00 00 00 00 
22279     00 00 18 18 | 	byte	$61, $30, $18, $0c, $06, $43, $63, $7f, $00, $00, $00, $00, $00, $00, $18, $18
2227d     00 7F 33 18 
22281     0C 06 63 7F 
22285     00 00 00 00 
22289     00 00 00 00 | 	byte	$00, $7f, $33, $18, $0c, $06, $63, $7f, $00, $00, $00, $00, $00, $00, $00, $00
2228d     00 00 1F 18 
22291     18 18 18 18 
22295     18 18 18 18 
22299     18 18 18 18 | 	byte	$00, $00, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2229d     18 18 F8 00 
222a1     00 00 00 00 
222a5     00 00 00 18 
222a9     18 18 18 18 | 	byte	$18, $18, $f8, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
222ad     18 18 FF 00 
222b1     00 00 00 00 
222b5     00 00 00 00 
222b9     00 00 00 00 | 	byte	$18, $18, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
222bd     00 00 FF 18 
222c1     18 18 18 18 
222c5     18 18 18 18 
222c9     18 18 18 18 | 	byte	$00, $00, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
222cd     18 18 F8 18 
222d1     18 18 18 18 
222d5     18 18 18 00 
222d9     00 00 00 00 | 	byte	$18, $18, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
222dd     00 00 FF 00 
222e1     00 00 00 00 
222e5     00 00 00 18 
222e9     18 18 18 18 | 	byte	$00, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18
222ed     18 18 FF 18 
222f1     18 18 18 18 
222f5     18 18 18 63 
222f9     3E 00 08 1C | 	byte	$18, $18, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $63, $3e, $00, $08, $1c
222fd     36 63 63 7F 
22301     63 63 63 63 
22305     00 00 00 00 
22309     00 00 63 3E | 	byte	$36, $63, $63, $7f, $63, $63, $63, $63, $00, $00, $00, $00, $00, $00, $63, $3e
2230d     00 1E 30 3E 
22311     33 33 33 6E 
22315     00 00 00 6C 
22319     6C 6C 6C 6C | 	byte	$00, $1e, $30, $3e, $33, $33, $33, $6e, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
2231d     EC 0C FC 00 
22321     00 00 00 00 
22325     00 00 00 00 
22329     00 00 00 00 | 	byte	$ec, $0c, $fc, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2232d     FC 0C EC 6C 
22331     6C 6C 6C 6C 
22335     6C 6C 6C 6C 
22339     6C 6C 6C 6C | 	byte	$fc, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2233d     EF 00 FF 00 
22341     00 00 00 00 
22345     00 00 00 00 
22349     00 00 00 00 | 	byte	$ef, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2234d     FF 00 EF 6C 
22351     6C 6C 6C 6C 
22355     6C 6C 6C 6C 
22359     6C 6C 6C 6C | 	byte	$ff, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c
2235d     EC 0C EC 6C 
22361     6C 6C 6C 6C 
22365     6C 6C 6C 00 
22369     00 00 00 00 | 	byte	$ec, $0c, $ec, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
2236d     FF 00 FF 00 
22371     00 00 00 00 
22375     00 00 00 6C 
22379     6C 6C 6C 6C | 	byte	$ff, $00, $ff, $00, $00, $00, $00, $00, $00, $00, $00, $6c, $6c, $6c, $6c, $6c
2237d     EF 00 EF 6C 
22381     6C 6C 6C 6C 
22385     6C 6C 6C 00 
22389     00 00 00 00 | 	byte	$ef, $00, $ef, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $6c, $00, $00, $00, $00, $00
2238d     63 3E 63 63 
22391     63 63 3E 63 
22395     00 00 00 00 
22399     00 00 30 7E | 	byte	$63, $3e, $63, $63, $63, $63, $3e, $63, $00, $00, $00, $00, $00, $00, $30, $7e
2239d     30 3C 36 33 
223a1     33 33 33 6E 
223a5     00 00 00 00 
223a9     00 00 1F 36 | 	byte	$30, $3c, $36, $33, $33, $33, $33, $6e, $00, $00, $00, $00, $00, $00, $1f, $36
223ad     66 66 6F 66 
223b1     66 66 36 1F 
223b5     00 00 00 36 
223b9     1C 00 1F 36 | 	byte	$66, $66, $6f, $66, $66, $66, $36, $1f, $00, $00, $00, $36, $1c, $00, $1f, $36
223bd     66 66 66 66 
223c1     66 66       | 	byte	$66[6]
223c3     36 1F 00 00 
223c7     00 00 63 00 
223cb     7F 66 46 16 
223cf     1E 16 06 46 | 	byte	$36, $1f, $00, $00, $00, $00, $63, $00, $7f, $66, $46, $16, $1e, $16, $06, $46
223d3     66 7F 00 00 
223d7     00 6C 38 00 
223db     38 30 30 3C 
223df     36 33 33 33 | 	byte	$66, $7f, $00, $00, $00, $6c, $38, $00, $38, $30, $30, $3c, $36, $33, $33, $33
223e3     33 6E 00 00 
223e7     00 36 1C 00 
223eb     63 67 6F 7F 
223ef     7B 73 63 63 | 	byte	$33, $6e, $00, $00, $00, $36, $1c, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63
223f3     63 63 00 00 
223f7     00 30 18 00 
223fb     3C 18 18 18 
223ff     18 18 18 18 | 	byte	$63, $63, $00, $00, $00, $30, $18, $00, $3c, $18, $18, $18, $18, $18, $18, $18
22403     18 3C 00 00 
22407     00 3C 66 00 
2240b     3C 18 18 18 
2240f     18 18 18 18 | 	byte	$18, $3c, $00, $00, $00, $3c, $66, $00, $3c, $18, $18, $18, $18, $18, $18, $18
22413     18 3C 00 00 
22417     00 00 00 36 
2241b     1C 08 00 3E 
2241f     63 7F 03 03 | 	byte	$18, $3c, $00, $00, $00, $00, $00, $36, $1c, $08, $00, $3e, $63, $7f, $03, $03
22423     63 3E 00 00 
22427     00 18 18 18 
2242b     18 18 18 18 
2242f     1F 00 00 00 | 	byte	$63, $3e, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $1f, $00, $00, $00
22433     00 00 00 00 
22437     00 00 00 00 
2243b     00 00 00 00 | 	byte	$00[12]
2243f     F8 18 18 18 
22443     18 18 18 18 
22447     18 FF FF FF 
2244b     FF FF FF FF | 	byte	$f8, $18, $18, $18, $18, $18, $18, $18, $18, $ff, $ff, $ff, $ff, $ff, $ff, $ff
2244f     FF FF FF FF 
22453     FF FF FF FF 
22457     FF          | 	byte	$ff[9]
22458     00 00 00 00 
2245c     00 00 00    | 	byte	$00[7]
2245f     FF FF FF FF 
22463     FF FF FF FF 
22467     FF          | 	byte	$ff[9]
22468     00 00 00 7E 
2246c     7E 5A 18 18 
22470     18 18 18 18 
22474     3C 18 30 1E | 	byte	$00, $00, $00, $7e, $7e, $5a, $18, $18, $18, $18, $18, $18, $3c, $18, $30, $1e
22478     1C 36 1C 63 
2247c     63 63 63 63 
22480     63 63 63 63 
22484     3E 00 00 00 | 	byte	$1c, $36, $1c, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22488     FF FF FF FF 
2248c     FF FF FF    | 	byte	$ff[7]
2248f     00 00 00 00 
22493     00 00 00 00 
22497     00          | 	byte	$00[9]
22498     30 18 00 3E 
2249c     63 63 63 63 
224a0     63 63 63 63 
224a4     3E 00 00 00 | 	byte	$30, $18, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
224a8     00 00 00 1E 
224ac     33 33 33 1B 
224b0     33 63 63 63 
224b4     33 00 00 00 | 	byte	$00, $00, $00, $1e, $33, $33, $33, $1b, $33, $63, $63, $63, $33, $00, $00, $00
224b8     1C 36 00 3E 
224bc     63 63 63 63 
224c0     63 63 63 63 
224c4     3E 00 00 00 | 	byte	$1c, $36, $00, $3e, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
224c8     30 18 00 63 
224cc     67 6F 7F 7B 
224d0     73 63 63 63 
224d4     63 00 00 00 | 	byte	$30, $18, $00, $63, $67, $6f, $7f, $7b, $73, $63, $63, $63, $63, $00, $00, $00
224d8     00 00 60 30 
224dc     18 00 3B 66 
224e0     66 66 66 66 
224e4     66 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
224e8     00 00 36 1C 
224ec     08 00 3B 66 
224f0     66 66 66 66 
224f4     66 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3b, $66, $66, $66, $66, $66, $66, $00, $00, $00
224f8     36 1C 00 3E 
224fc     63 63 06 1C 
22500     30 60 63 63 
22504     3E 00 00 00 | 	byte	$36, $1c, $00, $3e, $63, $63, $06, $1c, $30, $60, $63, $63, $3e, $00, $00, $00
22508     00 00 36 1C 
2250c     08 00 3E 63 
22510     06 1C 30 63 
22514     3E 00 00 00 | 	byte	$00, $00, $36, $1c, $08, $00, $3e, $63, $06, $1c, $30, $63, $3e, $00, $00, $00
22518     30 18 00 3F 
2251c     66 66 66 3E 
22520     36 66 66 66 
22524     6F 00 00 00 | 	byte	$30, $18, $00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00
22528     30 18 00 63 
2252c     63 63 63 63 
22530     63 63 63 63 
22534     3E 00 00 00 | 	byte	$30, $18, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22538     00 00 60 30 
2253c     18 00 3B 6E 
22540     66 06 06 06 
22544     0F 00 00 00 | 	byte	$00, $00, $60, $30, $18, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00
22548     66 33 00 63 
2254c     63 63 63 63 
22550     63 63 63 63 
22554     3E 00 00 00 | 	byte	$66, $33, $00, $63, $63, $63, $63, $63, $63, $63, $63, $63, $3e, $00, $00, $00
22558     00 00 60 30 
2255c     18 00 63 63 
22560     63 63 63 63 
22564     7E 60 30 1F | 	byte	$00, $00, $60, $30, $18, $00, $63, $63, $63, $63, $63, $63, $7e, $60, $30, $1f
22568     30 18 00 66 
2256c     66 66 66 3C 
22570     18 18 18 18 
22574     3C 00 00 00 | 	byte	$30, $18, $00, $66, $66, $66, $66, $3c, $18, $18, $18, $18, $3c, $00, $00, $00
22578     00 00 00 08 
2257c     0C 0C 3F 0C 
22580     0C 0C 0C 6C 
22584     38 18 30 1E | 	byte	$00, $00, $00, $08, $0c, $0c, $3f, $0c, $0c, $0c, $0c, $6c, $38, $18, $30, $1e
22588     30 18 00 00 
2258c     00 00 00 00 
22590     00 00 00 00 
22594     00 00 00 00 | 	byte	$30, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22598     00 00 00 00 
2259c     00 00 00 00 | 	byte	$00[8]
225a0     7F 00 00 00 
225a4     00 00 00 00 
225a8     66 33 00 00 
225ac     00 00 00 00 | 	byte	$7f, $00, $00, $00, $00, $00, $00, $00, $66, $33, $00, $00, $00, $00, $00, $00
225b0     00 00 00 00 
225b4     00 00 00 00 
225b8     00 00 00 00 
225bc     00 00 00 00 
225c0     00 00 00 00 
225c4     00          | 	byte	$00[21]
225c5     0C 06 3C 36 
225c9     1C 00 00 00 
225cd     00 00 00 00 
225d1     00 00 00 00 | 	byte	$0c, $06, $3c, $36, $1c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
225d5     00 00 00 63 
225d9     3E 00 00 00 
225dd     00 00 00 00 
225e1     00 00 00 00 | 	byte	$00, $00, $00, $63, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
225e5     00 00 00 00 
225e9     3E 63 06 1C 
225ed     36 63 63 36 
225f1     1C 30 63 3E | 	byte	$00, $00, $00, $00, $3e, $63, $06, $1c, $36, $63, $63, $36, $1c, $30, $63, $3e
225f5     00 00 00 00 
225f9     00 00 00 00 | 	byte	$00[8]
225fd     18 00 7E 00 
22601     18 00 00 00 
22605     00 00 00 00 
22609     00 00 00 00 | 	byte	$18, $00, $7e, $00, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2260d     00 00 00 00 
22611     00 00 00 00 | 	byte	$00[8]
22615     18 30 1E 00 
22619     00 00 1C 36 
2261d     36 1C 00 00 
22621     00 00 00 00 | 	byte	$18, $30, $1e, $00, $00, $00, $1c, $36, $36, $1c, $00, $00, $00, $00, $00, $00
22625     00 00 00 00 
22629     63 00 00 00 
2262d     00 00 00 00 
22631     00 00 00 00 | 	byte	$00, $00, $00, $00, $63, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22635     00 00 00 18 
22639     18 00 00 00 
2263d     00 00 00 00 
22641     00 00 00 00 | 	byte	$00, $00, $00, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22645     00 00 00 00 
22649     00          | 	byte	$00[5]
2264a     CC 66 33 00 
2264e     33 33 33 33 
22652     33 33 6E 00 
22656     00 00 36 1C | 	byte	$cc, $66, $33, $00, $33, $33, $33, $33, $33, $33, $6e, $00, $00, $00, $36, $1c
2265a     00 3F 66 66 
2265e     66 3E 36 66 
22662     66 66 6F 00 
22666     00 00 00 00 | 	byte	$00, $3f, $66, $66, $66, $3e, $36, $66, $66, $66, $6f, $00, $00, $00, $00, $00
2266a     36 1C 08 00 
2266e     3B 6E 66 06 
22672     06 06 0F 00 
22676     00 00 00 00 | 	byte	$36, $1c, $08, $00, $3b, $6e, $66, $06, $06, $06, $0f, $00, $00, $00, $00, $00
2267a     00 00 00 7E 
2267e     7E 7E 7E 7E 
22682     7E 7E 00 00 
22686     00 00 00 00 | 	byte	$00, $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00, $00, $00, $00, $00
2268a     00 00 00 00 
2268e     00 00 00 00 
22692     00 00 00 00 
22696     00 00       | 	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
22698     00 00 00 00 
      ...             
226c8     00 00 00 00 
226cc     00 00 00    | st_font        file "st4font.def"
226cf     FF FF 00 00 
226d3     00 00 00 00 
226d7     00 18 18 18 
226db     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
226df     18 18 18 18 
226e3     18 18 18 18 
226e7     18          | 	byte	$18[9]
226e8     00 00 00 00 
226ec     00 00 00    | 	byte	$00[7]
226ef     FF FF 18 18 
226f3     18 18 18 18 
226f7     18 18 18 18 
226fb     18 18 18 18 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
226ff     FF FF 00 00 
22703     00 00 00 00 
22707     00 18 18 18 
2270b     18 18 18 18 | 	byte	$ff, $ff, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2270f     1F 1F 18 18 
22713     18 18 18 18 
22717     18 18 18 18 
2271b     18 18 18 18 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2271f     F8 F8 18 18 
22723     18 18 18 18 
22727     18 00 00 00 
2272b     00 00 00 00 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2272f     1F 1F 18 18 
22733     18 18 18 18 
22737     18 00 00 00 
2273b     00 00 00 00 | 	byte	$1f, $1f, $18, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2273f     F8 F8 18 18 
22743     18 18 18 18 
22747     18 18 18 18 
2274b     18 18 18 18 | 	byte	$f8, $f8, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
2274f     1F 1F 00 00 
22753     00 00 00 00 
22757     00 18 18 18 
2275b     18 18 18 18 | 	byte	$1f, $1f, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2275f     F8 F8 00 00 
22763     00 00 00 00 
22767     00 18 18 18 
2276b     18 18 18 18 | 	byte	$f8, $f8, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18
2276f     FF FF 18 18 
22773     18 18 18 18 
22777     18 00 00 18 
2277b     3C 7E 66 66 | 	byte	$ff, $ff, $18, $18, $18, $18, $18, $18, $18, $00, $00, $18, $3c, $7e, $66, $66
2277f     66 7E 7E 66 
22783     66 66 66 30 
22787     18 00 00 7E 
2278b     7E 06 06 3E | 	byte	$66, $7e, $7e, $66, $66, $66, $66, $30, $18, $00, $00, $7e, $7e, $06, $06, $3e
2278f     3E 06 06 06 
22793     06 7E 7E 18 
22797     0C 30 18 3C 
2279b     7E 66 66 06 | 	byte	$3e, $06, $06, $06, $06, $7e, $7e, $18, $0c, $30, $18, $3c, $7e, $66, $66, $06
2279f     06 06 06 66 
227a3     66 7E 3C 00 
227a7     00 30 18 66 
227ab     66 66 6E 6E | 	byte	$06, $06, $06, $66, $66, $7e, $3c, $00, $00, $30, $18, $66, $66, $66, $6e, $6e
227af     7E 7E 76 76 
227b3     66 66 66 00 
227b7     00 30 18 7C 
227bb     7E 06 06 0E | 	byte	$7e, $7e, $76, $76, $66, $66, $66, $00, $00, $30, $18, $7c, $7e, $06, $06, $0e
227bf     1C 38 70 60 
227c3     60 7E 3E 00 
227c7     00 30 18 7E 
227cb     7E 30 30 18 | 	byte	$1c, $38, $70, $60, $60, $7e, $3e, $00, $00, $30, $18, $7e, $7e, $30, $30, $18
227cf     18 0C 0C 06 
227d3     06 7E 7E 00 
227d7     00 18 18 00 
227db     7E 7E 30 30 | 	byte	$18, $0c, $0c, $06, $06, $7e, $7e, $00, $00, $18, $18, $00, $7e, $7e, $30, $30
227df     18 18 0C 0C 
227e3     06 7E 7E 00 
227e7     00 30 18 3C 
227eb     7E 66 66 66 | 	byte	$18, $18, $0c, $0c, $06, $7e, $7e, $00, $00, $30, $18, $3c, $7e, $66, $66, $66
227ef     66 66 66 66 
227f3     66          | 	byte	$66[5]
227f4     7E 3C 00 00 
227f8     00 00 06 06 
227fc     06 06 16 1E 
22800     0E 06 06 06 | 	byte	$7e, $3c, $00, $00, $00, $00, $06, $06, $06, $06, $16, $1e, $0e, $06, $06, $06
22804     7E 7E 00 00 
22808     00 00 00 00 
2280c     00 3C 7C 60 
22810     7C 7E 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $00, $00, $00, $3c, $7c, $60, $7c, $7e, $66, $66
22814     7E 7C 30 18 
22818     00 00 00 00 
2281c     00 3C 7E 66 
22820     66 7E 06 06 | 	byte	$7e, $7c, $30, $18, $00, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $06, $06
22824     7E 7C 18 0C 
22828     00 00 30 18 
2282c     00 3C 3E 06 
22830     06 06 06 06 | 	byte	$7e, $7c, $18, $0c, $00, $00, $30, $18, $00, $3c, $3e, $06, $06, $06, $06, $06
22834     7E 7C 00 00 
22838     00 00 30 18 
2283c     00 3E 7E 66 
22840     66 66 66 66 | 	byte	$7e, $7c, $00, $00, $00, $00, $30, $18, $00, $3e, $7e, $66, $66, $66, $66, $66
22844     66 66 00 00 
22848     00 00 30 18 
2284c     00 7C 7E 06 
22850     0E 3C 70 60 | 	byte	$66, $66, $00, $00, $00, $00, $30, $18, $00, $7c, $7e, $06, $0e, $3c, $70, $60
22854     7E 3E 00 00 
22858     00 00 30 18 
2285c     00 7E 7E 30 
22860     18 18 0C 0C | 	byte	$7e, $3e, $00, $00, $00, $00, $30, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
22864     7E 7E 00 00 
22868     00 00 18 18 
2286c     00 7E 7E 30 
22870     18 18 0C 0C | 	byte	$7e, $7e, $00, $00, $00, $00, $18, $18, $00, $7e, $7e, $30, $18, $18, $0c, $0c
22874     7E 7E 00 00 
22878     00 00 30 18 
2287c     00 3C 7E 66 
22880     66 66 66 66 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $00, $3c, $7e, $66, $66, $66, $66, $66
22884     7E 3C 00 00 
22888     00 00 1C 1C 
2288c     18 18 38 3C 
22890     1C 18 18 18 | 	byte	$7e, $3c, $00, $00, $00, $00, $1c, $1c, $18, $18, $38, $3c, $1c, $18, $18, $18
22894     3C 3C 00 00 
22898     00 00 00 00 
2289c     00 00 00 00 
228a0     00 00 00 00 | 	byte	$3c, $3c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
228a4     00 00 00 00 
228a8     00 00       | 	byte	$00[6]
228aa     18 18 18 18 
228ae     18 18 18 18 | 	byte	$18[8]
228b2     00 00 18 18 
228b6     00 00 00 00 
228ba     66 66 66 66 
228be     00 00 00 00 | 	byte	$00, $00, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $00, $00, $00, $00
228c2     00 00 00 00 
228c6     00 00 00 00 
228ca     00          | 	byte	$00[9]
228cb     66 66 FF FF 
228cf     66 66 FF FF 
228d3     66 66 00 00 
228d7     00 00 18 18 | 	byte	$66, $66, $ff, $ff, $66, $66, $ff, $ff, $66, $66, $00, $00, $00, $00, $18, $18
228db     7C 7E 06 06 
228df     3E 7C 60 60 
228e3     7E 3E 18 18 
228e7     00 00 00 66 | 	byte	$7c, $7e, $06, $06, $3e, $7c, $60, $60, $7e, $3e, $18, $18, $00, $00, $00, $66
228eb     66 30 30 18 
228ef     18 0C 0C 66 
228f3     66 00 00 00 
228f7     00 00 3C 7E | 	byte	$66, $30, $30, $18, $18, $0c, $0c, $66, $66, $00, $00, $00, $00, $00, $3c, $7e
228fb     66 66 3C 1C 
228ff     1C FC FE 66 
22903     66 FE FC 00 
22907     00 00 00 18 | 	byte	$66, $66, $3c, $1c, $1c, $fc, $fe, $66, $66, $fe, $fc, $00, $00, $00, $00, $18
2290b     18 18 18 18 
2290f     00 00 00 00 
22913     00 00 00 00 
22917     00 00 00 30 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $30
2291b     18 1C 0C 0C 
2291f     0C 0C 0C 0C 
22923     1C 18 30 00 
22927     00 00 00 0C | 	byte	$18, $1c, $0c, $0c, $0c, $0c, $0c, $0c, $1c, $18, $30, $00, $00, $00, $00, $0c
2292b     18 38 30 30 
2292f     30 30 30 30 
22933     38 18 0C 00 
22937     00 00 00 00 | 	byte	$18, $38, $30, $30, $30, $30, $30, $30, $38, $18, $0c, $00, $00, $00, $00, $00
2293b     66 66 3C 3C 
2293f     FF FF 3C 3C 
22943     66 66 00 00 
22947     00 00 00 00 | 	byte	$66, $66, $3c, $3c, $ff, $ff, $3c, $3c, $66, $66, $00, $00, $00, $00, $00, $00
2294b     00 18 18 18 
2294f     7E 7E 18 18 
22953     18 00 00 00 
22957     00 00 00 00 | 	byte	$00, $18, $18, $18, $7e, $7e, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
2295b     00 00 00 00 
2295f     00 00       | 	byte	$00[6]
22961     18 18 18 18 
22965     18          | 	byte	$18[5]
22966     0C 04 00 00 
2296a     00 00 00 00 
2296e     7E 7E 00 00 
22972     00 00 00 00 | 	byte	$0c, $04, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $00, $00, $00, $00
22976     00 00 00 00 
2297a     00 00 00 00 
2297e     00 00 00 00 
22982     00          | 	byte	$00[13]
22983     18 18 18 00 
22987     00 00 00 60 
2298b     60 60 30 30 
2298f     18 18 0C 0C | 	byte	$18, $18, $18, $00, $00, $00, $00, $60, $60, $60, $30, $30, $18, $18, $0c, $0c
22993     06 06 06 00 
22997     00 00 00 3C 
2299b     7E 66 66 66 
2299f     76 6E 66 66 | 	byte	$06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $76, $6e, $66, $66
229a3     66 7E 3C 00 
229a7     00 00 00 18 
229ab     18 1C 1C 18 
229af     18 18 18 18 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $18, $18, $1c, $1c, $18, $18, $18, $18, $18
229b3     18 7E 7E 00 
229b7     00 00 00 3C 
229bb     7E 66 66 30 
229bf     30 18 18 0C | 	byte	$18, $7e, $7e, $00, $00, $00, $00, $3c, $7e, $66, $66, $30, $30, $18, $18, $0c
229c3     0C 7E 7E 00 
229c7     00 00 00 7E 
229cb     7E 30 30 18 
229cf     18 30 30 66 | 	byte	$0c, $7e, $7e, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $30, $30, $66
229d3     66 7E 3C 00 
229d7     00 00 00 30 
229db     30 38 38 3C 
229df     3C 36 36 7E | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $30, $30, $38, $38, $3c, $3c, $36, $36, $7e
229e3     7E 30 30 00 
229e7     00 00 00 7E 
229eb     7E 06 06 3E 
229ef     7E 60 60 60 | 	byte	$7e, $30, $30, $00, $00, $00, $00, $7e, $7e, $06, $06, $3e, $7e, $60, $60, $60
229f3     66 7E 3C 00 
229f7     00 00 00 38 
229fb     3C 0E 06 06 
229ff     3E 7E 66 66 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $38, $3c, $0e, $06, $06, $3e, $7e, $66, $66
22a03     66 7E 3C 00 
22a07     00 00 00 7E 
22a0b     7E 60 60 30 
22a0f     30 18 18 0C | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $7e, $7e, $60, $60, $30, $30, $18, $18, $0c
22a13     0C 0C 0C 00 
22a17     00 00 00 3C 
22a1b     7E 66 66 3C 
22a1f     3C 66 66 66 | 	byte	$0c, $0c, $0c, $00, $00, $00, $00, $3c, $7e, $66, $66, $3c, $3c, $66, $66, $66
22a23     66 7E 3C 00 
22a27     00 00 00 3C 
22a2b     7E 66 66 7E 
22a2f     7C 60 60 60 | 	byte	$66, $7e, $3c, $00, $00, $00, $00, $3c, $7e, $66, $66, $7e, $7c, $60, $60, $60
22a33     70 3C 1C 00 
22a37     00 00 00 00 
22a3b     00 00 18 18 
22a3f     18 00 00 00 | 	byte	$70, $3c, $1c, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $00
22a43     18 18 18 00 
22a47     00 00 00 00 
22a4b     00 00 18 18 
22a4f     18 00 00 18 | 	byte	$18, $18, $18, $00, $00, $00, $00, $00, $00, $00, $18, $18, $18, $00, $00, $18
22a53     18 18 18 0C 
22a57     04 00 00 00 
22a5b     70 38 1C 0E 
22a5f     07 0E 1C 38 | 	byte	$18, $18, $18, $0c, $04, $00, $00, $00, $70, $38, $1c, $0e, $07, $0e, $1c, $38
22a63     70 00 00 00 
22a67     00 00 00 00 
22a6b     00 00 7E 7E 
22a6f     00 00 7E 7E | 	byte	$70, $00, $00, $00, $00, $00, $00, $00, $00, $00, $7e, $7e, $00, $00, $7e, $7e
22a73     00 00 00 00 
22a77     00 00 00 00 | 	byte	$00[8]
22a7b     0E 1C 38 70 
22a7f     E0 70 38 1C 
22a83     0E 00 00 00 
22a87     00 00 00 3C | 	byte	$0e, $1c, $38, $70, $e0, $70, $38, $1c, $0e, $00, $00, $00, $00, $00, $00, $3c
22a8b     7E 66 66 30 
22a8f     30 18 18 18 
22a93     00 18 18 00 
22a97     00 00 00 3C | 	byte	$7e, $66, $66, $30, $30, $18, $18, $18, $00, $18, $18, $00, $00, $00, $00, $3c
22a9b     7E 66 66 66 
22a9f     66 36 06 66 
22aa3     66 7E 3C 00 
22aa7     00 00 00 18 | 	byte	$7e, $66, $66, $66, $66, $36, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $18
22aab     3C 7E 66 66 
22aaf     66 7E 7E 66 
22ab3     66 66 66 00 
22ab7     00 00 00 3E | 	byte	$3c, $7e, $66, $66, $66, $7e, $7e, $66, $66, $66, $66, $00, $00, $00, $00, $3e
22abb     7E 66 66 7E 
22abf     3E 66 66 66 
22ac3     66 7E 3E 00 
22ac7     00 00 00 3C | 	byte	$7e, $66, $66, $7e, $3e, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $3c
22acb     7E 66 66 06 
22acf     06 06 06 66 
22ad3     66 7E 3C 00 
22ad7     00 00 00 3E | 	byte	$7e, $66, $66, $06, $06, $06, $06, $66, $66, $7e, $3c, $00, $00, $00, $00, $3e
22adb     7E 66 66 66 
22adf     66 66 66 66 
22ae3     66 7E 3E 00 
22ae7     00 00 00 7E | 	byte	$7e, $66, $66, $66, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $7e
22aeb     7E 06 06 3E 
22aef     3E 06 06 06 
22af3     06 7E 7E 00 
22af7     00 00 00 7E | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $7e, $7e, $00, $00, $00, $00, $7e
22afb     7E 06 06 3E 
22aff     3E 06 06 06 
22b03     06 06 06 00 
22b07     00 00 00 7C | 	byte	$7e, $06, $06, $3e, $3e, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $7c
22b0b     7E 06 06 76 
22b0f     76 66 66 66 
22b13     66 7E 3C 00 
22b17     00 00 00 66 | 	byte	$7e, $06, $06, $76, $76, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $66
22b1b     66 66 66 7E 
22b1f     7E 66 66 66 
22b23     66 66 66 00 
22b27     00 00 00 7E | 	byte	$66, $66, $66, $7e, $7e, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $7e
22b2b     7E 18 18 18 
22b2f     18 18 18 18 
22b33     18 7E 7E 00 
22b37     00 00 00 60 | 	byte	$7e, $18, $18, $18, $18, $18, $18, $18, $18, $7e, $7e, $00, $00, $00, $00, $60
22b3b     60 60 60 60 
22b3f     60 60 60    | 	byte	$60[7]
22b42     66 66 7E 3C 
22b46     00 00 00 00 
22b4a     66 66 36 36 
22b4e     1E 1E 36 36 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $36, $36, $1e, $1e, $36, $36
22b52     66 66 C6 C6 
22b56     00 00 00 00 
22b5a     06 06 06 06 
22b5e     06 06 06 06 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $06, $06, $06, $06, $06, $06, $06, $06
22b62     06 06 7E 7E 
22b66     00 00 00 00 
22b6a     C6 C6 EE EE 
22b6e     FE D6 D6 C6 | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $c6, $c6, $ee, $ee, $fe, $d6, $d6, $c6
22b72     C6 C6 C6 C6 
22b76     00 00 00 00 
22b7a     66 66 66 6E 
22b7e     6E 7E 7E 76 | 	byte	$c6, $c6, $c6, $c6, $00, $00, $00, $00, $66, $66, $66, $6e, $6e, $7e, $7e, $76
22b82     76 66 66 66 
22b86     00 00 00 00 
22b8a     3C 7E 66 66 
22b8e     66 66 66 66 | 	byte	$76, $66, $66, $66, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
22b92     66 66 7E 3C 
22b96     00 00 00 00 
22b9a     3E 7E 66 66 
22b9e     66 66 7E 3E | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $66, $7e, $3e
22ba2     06 06 06 06 
22ba6     00 00 00 00 
22baa     3C 7E 66 66 
22bae     66 66 66 66 | 	byte	$06, $06, $06, $06, $00, $00, $00, $00, $3c, $7e, $66, $66, $66, $66, $66, $66
22bb2     66 56 3E 6C 
22bb6     00 00 00 00 
22bba     3E 7E 66 66 
22bbe     66 7E 3E 36 | 	byte	$66, $56, $3e, $6c, $00, $00, $00, $00, $3e, $7e, $66, $66, $66, $7e, $3e, $36
22bc2     66 66 C6 C6 
22bc6     00 00 00 00 
22bca     7C 7E 06 06 
22bce     0E 1C 38 70 | 	byte	$66, $66, $c6, $c6, $00, $00, $00, $00, $7c, $7e, $06, $06, $0e, $1c, $38, $70
22bd2     60 60 7E 3E 
22bd6     00 00 00 00 
22bda     7E 7E 18 18 
22bde     18 18 18 18 | 	byte	$60, $60, $7e, $3e, $00, $00, $00, $00, $7e, $7e, $18, $18, $18, $18, $18, $18
22be2     18 18 18 18 
22be6     00 00 00 00 
22bea     66 66 66 66 
22bee     66 66 66 66 | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
22bf2     66 66 7E 3C 
22bf6     00 00 00 00 
22bfa     66 66 66 66 
22bfe     66 66 66 66 | 	byte	$66, $66, $7e, $3c, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $66, $66
22c02     3C 3C 18 18 
22c06     00 00 00 00 
22c0a     C6 C6 C6 C6 
22c0e     C6 D6 D6 FE | 	byte	$3c, $3c, $18, $18, $00, $00, $00, $00, $c6, $c6, $c6, $c6, $c6, $d6, $d6, $fe
22c12     FE EE C6 82 
22c16     00 00 00 00 
22c1a     66 66 66 3C 
22c1e     3C 18 18 3C | 	byte	$fe, $ee, $c6, $82, $00, $00, $00, $00, $66, $66, $66, $3c, $3c, $18, $18, $3c
22c22     3C 66 66 66 
22c26     00 00 00 00 
22c2a     66 66 66 66 
22c2e     66 3C 3C 18 | 	byte	$3c, $66, $66, $66, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c, $18
22c32     18 18 18 18 
22c36     00 00 00 00 
22c3a     7E 7E 30 30 
22c3e     18 18 0C 0C | 	byte	$18, $18, $18, $18, $00, $00, $00, $00, $7e, $7e, $30, $30, $18, $18, $0c, $0c
22c42     06 06 7E 7E 
22c46     00 00 00 00 
22c4a     3C 3C 0C 0C 
22c4e     0C 0C 0C 0C | 	byte	$06, $06, $7e, $7e, $00, $00, $00, $00, $3c, $3c, $0c, $0c, $0c, $0c, $0c, $0c
22c52     0C 0C 3C 3C 
22c56     00 00 00 00 
22c5a     06 06 0C 0C 
22c5e     18 18 30 30 | 	byte	$0c, $0c, $3c, $3c, $00, $00, $00, $00, $06, $06, $0c, $0c, $18, $18, $30, $30
22c62     60 60 C0 C0 
22c66     00 00 00 00 
22c6a     3C 3C 30 30 
22c6e     30 30 30 30 | 	byte	$60, $60, $c0, $c0, $00, $00, $00, $00, $3c, $3c, $30, $30, $30, $30, $30, $30
22c72     30 30 3C 3C 
22c76     00 00 00 00 
22c7a     18 18 3C 3C 
22c7e     66 66 00 00 | 	byte	$30, $30, $3c, $3c, $00, $00, $00, $00, $18, $18, $3c, $3c, $66, $66, $00, $00
22c82     00 00 00 00 
22c86     00 00 00 00 
22c8a     00 00 00 00 
22c8e     00 00 00 00 
22c92     00 00       | 	byte	$00[18]
22c94     FE FE 00 00 
22c98     00 00 0C 0C 
22c9c     18 18 00 00 
22ca0     00 00 00 00 | 	byte	$fe, $fe, $00, $00, $00, $00, $0c, $0c, $18, $18, $00, $00, $00, $00, $00, $00
22ca4     00 00 00 00 
22ca8     00 00 00 00 
22cac     00          | 	byte	$00[9]
22cad     3C 7C 60 7C 
22cb1     7E 66 66 7E 
22cb5     7C 00 00 00 
22cb9     00 06 06 06 | 	byte	$3c, $7c, $60, $7c, $7e, $66, $66, $7e, $7c, $00, $00, $00, $00, $06, $06, $06
22cbd     3E 7E 66 66 
22cc1     66 66 66 7E 
22cc5     3E 00 00 00 
22cc9     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $00, $00, $00, $00, $00, $00, $00
22ccd     3C 3E 06 06 
22cd1     06 06 06 7E 
22cd5     7C 00 00 00 
22cd9     00 60 60 60 | 	byte	$3c, $3e, $06, $06, $06, $06, $06, $7e, $7c, $00, $00, $00, $00, $60, $60, $60
22cdd     7C 7E 66 66 
22ce1     66 66 66 7E 
22ce5     7C 00 00 00 
22ce9     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $00, $00, $00, $00, $00, $00, $00
22ced     3C 7E 66 66 
22cf1     7E 06 06 7E 
22cf5     7C 00 00 00 
22cf9     00 70 78 18 | 	byte	$3c, $7e, $66, $66, $7e, $06, $06, $7e, $7c, $00, $00, $00, $00, $70, $78, $18
22cfd     18 7E 7E 18 
22d01     18 18 18 18 
22d05     18 00 00 00 
22d09     00 00 00 00 | 	byte	$18, $7e, $7e, $18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00, $00, $00
22d0d     7C 7E 66 66 
22d11     66 66 7E 7C 
22d15     60 7E 3E 00 
22d19     00 06 06 06 | 	byte	$7c, $7e, $66, $66, $66, $66, $7e, $7c, $60, $7e, $3e, $00, $00, $06, $06, $06
22d1d     3E 7E 66 66 
22d21     66 66 66 66 
22d25     66 00 00 00 
22d29     00 18 18 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $18, $18, $00
22d2d     1C 1C 18 18 
22d31     18 18 18 3C 
22d35     3C 00 00 00 
22d39     00 30 30 00 | 	byte	$1c, $1c, $18, $18, $18, $18, $18, $3c, $3c, $00, $00, $00, $00, $30, $30, $00
22d3d     30 30 30 30 
22d41     30 30 30 30 
22d45     30          | 	byte	$30[9]
22d46     3E 1E 00 00 
22d4a     06 06 06 36 
22d4e     36 1E 1E 1E 
22d52     36 36 66 66 | 	byte	$3e, $1e, $00, $00, $06, $06, $06, $36, $36, $1e, $1e, $1e, $36, $36, $66, $66
22d56     00 00 00 00 
22d5a     1C 1C 18 18 
22d5e     18 18 18 18 
22d62     18 18 3C 3C | 	byte	$00, $00, $00, $00, $1c, $1c, $18, $18, $18, $18, $18, $18, $18, $18, $3c, $3c
22d66     00 00 00 00 
22d6a     00 00 00    | 	byte	$00[7]
22d6d     6C FE FE D6 
22d71     D6 C6 C6 C6 
22d75     C6 00 00 00 
22d79     00 00 00 00 | 	byte	$6c, $fe, $fe, $d6, $d6, $c6, $c6, $c6, $c6, $00, $00, $00, $00, $00, $00, $00
22d7d     3E 7E 66 66 
22d81     66 66 66 66 
22d85     66 00 00 00 
22d89     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $66, $66, $00, $00, $00, $00, $00, $00, $00
22d8d     3C 7E 66 66 
22d91     66 66 66 7E 
22d95     3C 00 00 00 
22d99     00 00 00 00 | 	byte	$3c, $7e, $66, $66, $66, $66, $66, $7e, $3c, $00, $00, $00, $00, $00, $00, $00
22d9d     3E 7E 66 66 
22da1     66 66 66 7E 
22da5     3E 06 06 00 
22da9     00 00 00 00 | 	byte	$3e, $7e, $66, $66, $66, $66, $66, $7e, $3e, $06, $06, $00, $00, $00, $00, $00
22dad     7C 7E 66 66 
22db1     66 66 66 7E 
22db5     7C 60 60 00 
22db9     00 00 00 00 | 	byte	$7c, $7e, $66, $66, $66, $66, $66, $7e, $7c, $60, $60, $00, $00, $00, $00, $00
22dbd     3E 7E 66 06 
22dc1     06 06 06 06 
22dc5     06 00 00 00 
22dc9     00 00 00 00 | 	byte	$3e, $7e, $66, $06, $06, $06, $06, $06, $06, $00, $00, $00, $00, $00, $00, $00
22dcd     7C 7E 06 0E 
22dd1     3C 70 60 7E 
22dd5     3E 00 00 00 
22dd9     00 00 18 18 | 	byte	$7c, $7e, $06, $0e, $3c, $70, $60, $7e, $3e, $00, $00, $00, $00, $00, $18, $18
22ddd     7E 7E 18 18 
22de1     18 18 18 78 
22de5     70 00 00 00 
22de9     00 00 00 00 | 	byte	$7e, $7e, $18, $18, $18, $18, $18, $78, $70, $00, $00, $00, $00, $00, $00, $00
22ded     66 66 66 66 
22df1     66 66 66    | 	byte	$66[7]
22df4     7E 7C 00 00 
22df8     00 00 00 00 
22dfc     00 66 66 66 
22e00     66 66 3C 3C | 	byte	$7e, $7c, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $3c, $3c
22e04     18 18 00 00 
22e08     00 00 00 00 
22e0c     00 C6 C6 D6 
22e10     D6 FE FE EE | 	byte	$18, $18, $00, $00, $00, $00, $00, $00, $00, $c6, $c6, $d6, $d6, $fe, $fe, $ee
22e14     C6 82 00 00 
22e18     00 00 00 00 
22e1c     00 66 66 3C 
22e20     3C 18 3C 3C | 	byte	$c6, $82, $00, $00, $00, $00, $00, $00, $00, $66, $66, $3c, $3c, $18, $3c, $3c
22e24     66 66 00 00 
22e28     00 00 00 00 
22e2c     00 66 66 66 
22e30     66 66 66 7E | 	byte	$66, $66, $00, $00, $00, $00, $00, $00, $00, $66, $66, $66, $66, $66, $66, $7e
22e34     7C 60 7E 3E 
22e38     00 00 00 00 
22e3c     00 7E 7E 30 
22e40     18 18 0C 0C | 	byte	$7c, $60, $7e, $3e, $00, $00, $00, $00, $00, $7e, $7e, $30, $18, $18, $0c, $0c
22e44     7E 7E 00 00 
22e48     00 00 30 18 
22e4c     18 18 18 0C 
22e50     0C 18 18 18 | 	byte	$7e, $7e, $00, $00, $00, $00, $30, $18, $18, $18, $18, $0c, $0c, $18, $18, $18
22e54     18 30 00 00 
22e58     00 00 18 18 
22e5c     18 18 18 18 
22e60     18 18 18 18 | 	byte	$18, $30, $00, $00, $00, $00, $18, $18, $18, $18, $18, $18, $18, $18, $18, $18
22e64     18 18 00 00 
22e68     00 00 0C 18 
22e6c     18 18 18 30 
22e70     30 18 18 18 | 	byte	$18, $18, $00, $00, $00, $00, $0c, $18, $18, $18, $18, $30, $30, $18, $18, $18
22e74     18 0C 00 00 
22e78     00 00 6C 7E 
22e7c     36 00 00 00 
22e80     00 00 00 00 | 	byte	$18, $0c, $00, $00, $00, $00, $6c, $7e, $36, $00, $00, $00, $00, $00, $00, $00
22e84     00 00 00 00 
22e88     00 00 00 00 
22e8c     00          | 	byte	$00[9]
22e8d     18 18 18 18 
22e91     18 18 00 00 
22e95     00 00 00    | 	byte	$18, $18, $18, $18, $18, $18, $00, $00, $00, $00, $00
22e98     00 00 00 00 
22e9c     00 FF FF FF | twocolors      long  $00000000,$FFFFFF00
22ea0     00 00 00 00 
22ea4     00 80 80 80 
22ea8     00 00 00 FF 
22eac     00 FF FF FF | fourcolors     long  $00000000,$80808000,$FF000000,$FFFFFF00 'black,red,gray,white
22eb0     00 00 00 00 
22eb4     00          | vga16          long  $00000000,$00008000,$00800000,$00808000,$80000000,$80008000,$80400000,$AAAAAA00,$55555500,$0000FF00,$00FF0000,$00FFFF00,$FF000000,$FF00FF00,$FFFF0000,$FFFFFF00
22eb5     80 00 00 00 
22eb9     00 80 00 00 
22ebd     80 80 00 00 
22ec1     00 00 80 00 | 	byte	$80, $00, $00, $00, $00, $80, $00, $00, $80, $80, $00, $00, $00, $00, $80, $00
22ec5     80 00 80 00 
22ec9     00 40 80 00 
22ecd     AA AA AA 00 
22ed1     55 55 55 00 | 	byte	$80, $00, $80, $00, $00, $40, $80, $00, $aa, $aa, $aa, $00, $55, $55, $55, $00
22ed5     FF 00 00 00 
22ed9     00 FF 00 00 
22edd     FF FF 00 00 
22ee1     00 00 FF 00 | 	byte	$ff, $00, $00, $00, $00, $ff, $00, $00, $ff, $ff, $00, $00, $00, $00, $ff, $00
22ee5     FF 00 FF 00 
22ee9     00 FF FF 00 
22eed     FF FF FF    | 	byte	$ff, $00, $ff, $00, $00, $ff, $ff, $00, $ff, $ff, $ff
22ef0     00 00 00 00 
22ef4     00          | ataripalette   file "ataripalettep2.def"
22ef5     11 11 11 00 
22ef9     22 22 22 00 
22efd     33 33 33 00 
22f01     44 44 44 00 | 	byte	$11, $11, $11, $00, $22, $22, $22, $00, $33, $33, $33, $00, $44, $44, $44, $00
22f05     55 55 55 00 
22f09     66 66 66 00 
22f0d     77 77 77 00 
22f11     88 88 88 00 | 	byte	$55, $55, $55, $00, $66, $66, $66, $00, $77, $77, $77, $00, $88, $88, $88, $00
22f15     99 99 99 00 
22f19     AA AA AA 00 
22f1d     BB BB BB 00 
22f21     CC CC CC 00 | 	byte	$99, $99, $99, $00, $aa, $aa, $aa, $00, $bb, $bb, $bb, $00, $cc, $cc, $cc, $00
22f25     DD DD DD 00 
22f29     EE EE EE 00 
22f2d     FF FF FF 00 
22f31     00 0A 20 00 | 	byte	$dd, $dd, $dd, $00, $ee, $ee, $ee, $00, $ff, $ff, $ff, $00, $00, $0a, $20, $00
22f35     00 14 40 00 
22f39     00 1E 60 00 
22f3d     00 28 80 00 
22f41     00 32 9F 00 | 	byte	$00, $14, $40, $00, $00, $1e, $60, $00, $00, $28, $80, $00, $00, $32, $9f, $00
22f45     00 3C BF 00 
22f49     00 46 DF 00 
22f4d     00 50 FF 00 
22f51     1C 63 FF 00 | 	byte	$00, $3c, $bf, $00, $00, $46, $df, $00, $00, $50, $ff, $00, $1c, $63, $ff, $00
22f55     39 77 FF 00 
22f59     55 8A FF 00 
22f5d     71 9E FF 00 
22f61     8E B1 FF 00 | 	byte	$39, $77, $ff, $00, $55, $8a, $ff, $00, $71, $9e, $ff, $00, $8e, $b1, $ff, $00
22f65     AA C5 FF 00 
22f69     C6 D8 FF 00 
22f6d     E3 EC FF 00 
22f71     00 00 20 00 | 	byte	$aa, $c5, $ff, $00, $c6, $d8, $ff, $00, $e3, $ec, $ff, $00, $00, $00, $20, $00
22f75     00 00 40 00 
22f79     00 00 60 00 
22f7d     00 00 80 00 
22f81     00 00 9F 00 | 	byte	$00, $00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00
22f85     00 00 BF 00 
22f89     00 00 DF 00 
22f8d     00 00 FF 00 
22f91     1C 1C FF 00 | 	byte	$00, $00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $1c, $1c, $ff, $00
22f95     39 39 FF 00 
22f99     55 55 FF 00 
22f9d     71 71 FF 00 
22fa1     8E 8E FF 00 | 	byte	$39, $39, $ff, $00, $55, $55, $ff, $00, $71, $71, $ff, $00, $8e, $8e, $ff, $00
22fa5     AA AA FF 00 
22fa9     C6 C6 FF 00 
22fad     E3 E3 FF 00 
22fb1     10 00 20 00 | 	byte	$aa, $aa, $ff, $00, $c6, $c6, $ff, $00, $e3, $e3, $ff, $00, $10, $00, $20, $00
22fb5     20 00 40 00 
22fb9     30 00 60 00 
22fbd     40 00 80 00 
22fc1     50 00 9F 00 | 	byte	$20, $00, $40, $00, $30, $00, $60, $00, $40, $00, $80, $00, $50, $00, $9f, $00
22fc5     60 00 BF 00 
22fc9     70 00 DF 00 
22fcd     80 00 FF 00 
22fd1     8E 1C FF 00 | 	byte	$60, $00, $bf, $00, $70, $00, $df, $00, $80, $00, $ff, $00, $8e, $1c, $ff, $00
22fd5     9C 39 FF 00 
22fd9     AA 55 FF 00 
22fdd     B8 71 FF 00 
22fe1     C7 8E FF 00 | 	byte	$9c, $39, $ff, $00, $aa, $55, $ff, $00, $b8, $71, $ff, $00, $c7, $8e, $ff, $00
22fe5     D5 AA FF 00 
22fe9     E3 C6 FF 00 
22fed     F1 E3 FF 00 
22ff1     20 00 20 00 | 	byte	$d5, $aa, $ff, $00, $e3, $c6, $ff, $00, $f1, $e3, $ff, $00, $20, $00, $20, $00
22ff5     40 00 40 00 
22ff9     60 00 60 00 
22ffd     80 00 80 00 
23001     9F 00 9F 00 | 	byte	$40, $00, $40, $00, $60, $00, $60, $00, $80, $00, $80, $00, $9f, $00, $9f, $00
23005     BF 00 BF 00 
23009     DF 00 DF 00 
2300d     FF 00 FF 00 
23011     FF 1C FF 00 | 	byte	$bf, $00, $bf, $00, $df, $00, $df, $00, $ff, $00, $ff, $00, $ff, $1c, $ff, $00
23015     FF 39 FF 00 
23019     FF 55 FF 00 
2301d     FF 71 FF 00 
23021     FF 8E FF 00 | 	byte	$ff, $39, $ff, $00, $ff, $55, $ff, $00, $ff, $71, $ff, $00, $ff, $8e, $ff, $00
23025     FF AA FF 00 
23029     FF C6 FF 00 
2302d     FF E3 FF 00 
23031     20 00 10 00 | 	byte	$ff, $aa, $ff, $00, $ff, $c6, $ff, $00, $ff, $e3, $ff, $00, $20, $00, $10, $00
23035     40 00 20 00 
23039     60 00 30 00 
2303d     80 00 40 00 
23041     9F 00 50 00 | 	byte	$40, $00, $20, $00, $60, $00, $30, $00, $80, $00, $40, $00, $9f, $00, $50, $00
23045     BF 00 60 00 
23049     DF 00 70 00 
2304d     FF 00 80 00 
23051     FF 1C 8E 00 | 	byte	$bf, $00, $60, $00, $df, $00, $70, $00, $ff, $00, $80, $00, $ff, $1c, $8e, $00
23055     FF 39 9C 00 
23059     FF 55 AA 00 
2305d     FF 71 B8 00 
23061     FF 8E C7 00 | 	byte	$ff, $39, $9c, $00, $ff, $55, $aa, $00, $ff, $71, $b8, $00, $ff, $8e, $c7, $00
23065     FF AA D5 00 
23069     FF C6 E3 00 
2306d     FF E3 F1 00 
23071     20 00 00 00 | 	byte	$ff, $aa, $d5, $00, $ff, $c6, $e3, $00, $ff, $e3, $f1, $00, $20, $00, $00, $00
23075     40 00 00 00 
23079     60 00 00 00 
2307d     80 00 00 00 
23081     9F 00 00 00 | 	byte	$40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00, $00
23085     BF 00 00 00 
23089     DF 00 00 00 
2308d     FF 00 00 00 
23091     FF 1C 1C 00 | 	byte	$bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $00, $ff, $1c, $1c, $00
23095     FF 39 39 00 
23099     FF 55 55 00 
2309d     FF 71 71 00 
230a1     FF 8E 8E 00 | 	byte	$ff, $39, $39, $00, $ff, $55, $55, $00, $ff, $71, $71, $00, $ff, $8e, $8e, $00
230a5     FF AA AA 00 
230a9     FF C6 C6 00 
230ad     FF E3 E3 00 
230b1     20 08 00 00 | 	byte	$ff, $aa, $aa, $00, $ff, $c6, $c6, $00, $ff, $e3, $e3, $00, $20, $08, $00, $00
230b5     40 10 00 00 
230b9     60 18 00 00 
230bd     80 20 00 00 
230c1     9F 28 00 00 | 	byte	$40, $10, $00, $00, $60, $18, $00, $00, $80, $20, $00, $00, $9f, $28, $00, $00
230c5     BF 30 00 00 
230c9     DF 38 00 00 
230cd     FF 40 00 00 
230d1     FF 55 1C 00 | 	byte	$bf, $30, $00, $00, $df, $38, $00, $00, $ff, $40, $00, $00, $ff, $55, $1c, $00
230d5     FF 6A 39 00 
230d9     FF 80 55 00 
230dd     FF 95 71 00 
230e1     FF AA 8E 00 | 	byte	$ff, $6a, $39, $00, $ff, $80, $55, $00, $ff, $95, $71, $00, $ff, $aa, $8e, $00
230e5     FF BF AA 00 
230e9     FF D5 C6 00 
230ed     FF EA E3 00 
230f1     20 10 00 00 | 	byte	$ff, $bf, $aa, $00, $ff, $d5, $c6, $00, $ff, $ea, $e3, $00, $20, $10, $00, $00
230f5     40 20 00 00 
230f9     60 30 00 00 
230fd     80 40 00 00 
23101     9F 50 00 00 | 	byte	$40, $20, $00, $00, $60, $30, $00, $00, $80, $40, $00, $00, $9f, $50, $00, $00
23105     BF 60 00 00 
23109     DF 70 00 00 
2310d     FF 80 00 00 
23111     FF 8E 1C 00 | 	byte	$bf, $60, $00, $00, $df, $70, $00, $00, $ff, $80, $00, $00, $ff, $8e, $1c, $00
23115     FF 9C 39 00 
23119     FF AA 55 00 
2311d     FF B8 71 00 
23121     FF C7 8E 00 | 	byte	$ff, $9c, $39, $00, $ff, $aa, $55, $00, $ff, $b8, $71, $00, $ff, $c7, $8e, $00
23125     FF D5 AA 00 
23129     FF E3 C6 00 
2312d     FF F1 E3 00 
23131     20 18 00 00 | 	byte	$ff, $d5, $aa, $00, $ff, $e3, $c6, $00, $ff, $f1, $e3, $00, $20, $18, $00, $00
23135     40 30 00 00 
23139     60 48 00 00 
2313d     80 60 00 00 
23141     9F 78 00 00 | 	byte	$40, $30, $00, $00, $60, $48, $00, $00, $80, $60, $00, $00, $9f, $78, $00, $00
23145     BF 90 00 00 
23149     DF A8 00 00 
2314d     FF C0 00 00 
23151     FF C7 1C 00 | 	byte	$bf, $90, $00, $00, $df, $a8, $00, $00, $ff, $c0, $00, $00, $ff, $c7, $1c, $00
23155     FF CE 39 00 
23159     FF D5 55 00 
2315d     FF DC 71 00 
23161     FF E3 8E 00 | 	byte	$ff, $ce, $39, $00, $ff, $d5, $55, $00, $ff, $dc, $71, $00, $ff, $e3, $8e, $00
23165     FF EA AA 00 
23169     FF F1 C6 00 
2316d     FF F8 E3 00 
23171     18 20 00 00 | 	byte	$ff, $ea, $aa, $00, $ff, $f1, $c6, $00, $ff, $f8, $e3, $00, $18, $20, $00, $00
23175     30 40 00 00 
23179     48 60 00 00 
2317d     60 80 00 00 
23181     78 9F 00 00 | 	byte	$30, $40, $00, $00, $48, $60, $00, $00, $60, $80, $00, $00, $78, $9f, $00, $00
23185     90 BF 00 00 
23189     A8 DF 00 00 
2318d     C0 FF 00 00 
23191     C7 FF 1C 00 | 	byte	$90, $bf, $00, $00, $a8, $df, $00, $00, $c0, $ff, $00, $00, $c7, $ff, $1c, $00
23195     CE FF 39 00 
23199     D5 FF 55 00 
2319d     DC FF 71 00 
231a1     E3 FF 8E 00 | 	byte	$ce, $ff, $39, $00, $d5, $ff, $55, $00, $dc, $ff, $71, $00, $e3, $ff, $8e, $00
231a5     EA FF AA 00 
231a9     F1 FF C6 00 
231ad     F8 FF E3 00 
231b1     00 20 00 00 | 	byte	$ea, $ff, $aa, $00, $f1, $ff, $c6, $00, $f8, $ff, $e3, $00, $00, $20, $00, $00
231b5     00 40 00 00 
231b9     00 60 00 00 
231bd     00 80 00 00 
231c1     00 9F 00 00 | 	byte	$00, $40, $00, $00, $00, $60, $00, $00, $00, $80, $00, $00, $00, $9f, $00, $00
231c5     00 BF 00 00 
231c9     00 DF 00 00 
231cd     00 FF 00 00 
231d1     1C FF 1C 00 | 	byte	$00, $bf, $00, $00, $00, $df, $00, $00, $00, $ff, $00, $00, $1c, $ff, $1c, $00
231d5     39 FF 39 00 
231d9     55 FF 55 00 
231dd     71 FF 71 00 
231e1     8E FF 8E 00 | 	byte	$39, $ff, $39, $00, $55, $ff, $55, $00, $71, $ff, $71, $00, $8e, $ff, $8e, $00
231e5     AA FF AA 00 
231e9     C6 FF C6 00 
231ed     E3 FF E3 00 
231f1     00 20 0A 00 | 	byte	$aa, $ff, $aa, $00, $c6, $ff, $c6, $00, $e3, $ff, $e3, $00, $00, $20, $0a, $00
231f5     00 40 14 00 
231f9     00 60 1E 00 
231fd     00 80 28 00 
23201     00 9F 32 00 | 	byte	$00, $40, $14, $00, $00, $60, $1e, $00, $00, $80, $28, $00, $00, $9f, $32, $00
23205     00 BF 3C 00 
23209     00 DF 46 00 
2320d     00 FF 50 00 
23211     1C FF 63 00 | 	byte	$00, $bf, $3c, $00, $00, $df, $46, $00, $00, $ff, $50, $00, $1c, $ff, $63, $00
23215     39 FF 77 00 
23219     55 FF 8A 00 
2321d     71 FF 9E 00 
23221     8E FF B1 00 | 	byte	$39, $ff, $77, $00, $55, $ff, $8a, $00, $71, $ff, $9e, $00, $8e, $ff, $b1, $00
23225     AA FF C5 00 
23229     C6 FF D8 00 
2322d     E3 FF EC 00 
23231     00 20 14 00 | 	byte	$aa, $ff, $c5, $00, $c6, $ff, $d8, $00, $e3, $ff, $ec, $00, $00, $20, $14, $00
23235     00 40 28 00 
23239     00 60 3C 00 
2323d     00 80 50 00 
23241     00 9F 64 00 | 	byte	$00, $40, $28, $00, $00, $60, $3c, $00, $00, $80, $50, $00, $00, $9f, $64, $00
23245     00 BF 78 00 
23249     00 DF 8C 00 
2324d     00 FF A0 00 
23251     1C FF AB 00 | 	byte	$00, $bf, $78, $00, $00, $df, $8c, $00, $00, $ff, $a0, $00, $1c, $ff, $ab, $00
23255     39 FF B5 00 
23259     55 FF C0 00 
2325d     71 FF CA 00 
23261     8E FF D5 00 | 	byte	$39, $ff, $b5, $00, $55, $ff, $c0, $00, $71, $ff, $ca, $00, $8e, $ff, $d5, $00
23265     AA FF DF 00 
23269     C6 FF EA 00 
2326d     E3 FF F4 00 
23271     00 20 20 00 | 	byte	$aa, $ff, $df, $00, $c6, $ff, $ea, $00, $e3, $ff, $f4, $00, $00, $20, $20, $00
23275     00 40 40 00 
23279     00 60 60 00 
2327d     00 80 80 00 
23281     00 9F 9F 00 | 	byte	$00, $40, $40, $00, $00, $60, $60, $00, $00, $80, $80, $00, $00, $9f, $9f, $00
23285     00 BF BF 00 
23289     00 DF DF 00 
2328d     00 FF FF 00 
23291     1C FF FF 00 | 	byte	$00, $bf, $bf, $00, $00, $df, $df, $00, $00, $ff, $ff, $00, $1c, $ff, $ff, $00
23295     39 FF FF 00 
23299     55 FF FF 00 
2329d     71 FF FF 00 
232a1     8E FF FF 00 | 	byte	$39, $ff, $ff, $00, $55, $ff, $ff, $00, $71, $ff, $ff, $00, $8e, $ff, $ff, $00
232a5     AA FF FF 00 
232a9     C6 FF FF 00 
232ad     E3 FF FF 00 
232b1     00 14 20 00 | 	byte	$aa, $ff, $ff, $00, $c6, $ff, $ff, $00, $e3, $ff, $ff, $00, $00, $14, $20, $00
232b5     00 28 40 00 
232b9     00 3C 60 00 
232bd     00 50 80 00 
232c1     00 64 9F 00 | 	byte	$00, $28, $40, $00, $00, $3c, $60, $00, $00, $50, $80, $00, $00, $64, $9f, $00
232c5     00 78 BF 00 
232c9     00 8C DF 00 
232cd     00 A0 FF 00 
232d1     1C AB FF 00 | 	byte	$00, $78, $bf, $00, $00, $8c, $df, $00, $00, $a0, $ff, $00, $1c, $ab, $ff, $00
232d5     39 B5 FF 00 
232d9     55 C0 FF 00 
232dd     71 CA FF 00 
232e1     8E D5 FF 00 | 	byte	$39, $b5, $ff, $00, $55, $c0, $ff, $00, $71, $ca, $ff, $00, $8e, $d5, $ff, $00
232e5     AA DF FF 00 
232e9     C6 EA FF 00 
232ed     E3 F4 FF    | 	byte	$aa, $df, $ff, $00, $c6, $ea, $ff, $00, $e3, $f4, $ff
232f0                 | '**********************************************************************************
232f0                 | '
232f0                 | '        Timings and colors definitions
232f0                 | '
232f0                 | '**********************************************************************************
232f0                 | 
232f0                 |    'streamer sets for text mode, to add to timings[0..5]
232f0                 | ' todo for the retromachine: 768x576
232f0                 | 
232f0                 | '                     bf.hs, hs,  bf.vis  visible, lr bord, pixel, ud bord,  up p., vsync, down p., mode, cpl, scanlines,  clock,                  hubset                  total vis lines
232f0     10 00 00 00 
232f4     50 00 00 00 
232f8     14 00 00 00 
232fc     00 04 00 00 | timings000      long   16,   80,    20,    1024,    112,     8,     48,      16,      16,    16,      0,  100,   480,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
23300     70 00 00 00 
23304     08 00 00 00 
23308     30 00 00 00 
2330c     10 00 00 00 | 	byte	$70, $00, $00, $00, $08, $00, $00, $00, $30, $00, $00, $00, $10, $00, $00, $00
23310     10 00 00 00 
23314     10 00 00 00 
23318     00 00 00 00 
2331c     64 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $00, $00, $00, $00, $64, $00, $00, $00
23320     E0 01 00 00 
23324     F6 32 24 15 
23328     FB 6C C3 01 
2332c     40 02 00 00 | 	byte	$e0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
23330                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   544'
23330                 | 'timings064      long   8,   50,    8 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     319215686,   %1_110010__11_0010_1101__1111_1011,   540
23330     30 00 00 00 
23334     50 00 00 00 
23338     34 00 00 00 
2333c     C0 03 00 00 | timings064      long   48,   80,    52 ,    960,     32,     8,      22,       24,      36,    24,     64,  112,   496,     354693878,   %1_110000__11_0110_1100__1111_1011,   540
23340     20 00 00 00 
23344     08 00 00 00 
23348     16 00 00 00 
2334c     18 00 00 00 | 	byte	$20, $00, $00, $00, $08, $00, $00, $00, $16, $00, $00, $00, $18, $00, $00, $00
23350     24 00 00 00 
23354     18 00 00 00 
23358     40 00 00 00 
2335c     70 00 00 00 | 	byte	$24, $00, $00, $00, $18, $00, $00, $00, $40, $00, $00, $00, $70, $00, $00, $00
23360     F0 01 00 00 
23364     F6 32 24 15 
23368     FB 6C C3 01 
2336c     1C 02 00 00 | 	byte	$f0, $01, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $1c, $02, $00, $00
23370                 | 'timings064      long   18,   48,    16,     944,     24,     8,     24,      24,      32,    24,     64,  112,   496,     320000000,   %1_0000_00__00_0000_1111__1111_1011,   544
23370     10 00 00 00 
23374     40 00 00 00 
23378     10 00 00 00 
2337c     30 03 00 00 | timings128      long   16,   64,    16,     816,      8,     8,     8,       32,      64,    32,    128,  100,   480,     283750000,   %1_111111__11_1000_1011__1111_1011,   496
23380     08 00 00 00 
23384     08 00 00 00 
23388     08 00 00 00 
2338c     20 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $20, $00, $00, $00
23390     40 00 00 00 
23394     20 00 00 00 
23398     80 00 00 00 
2339c     64 00 00 00 | 	byte	$40, $00, $00, $00, $20, $00, $00, $00, $80, $00, $00, $00, $64, $00, $00, $00
233a0     E0 01 00 00 
233a4     70 AE E9 10 
233a8     FB 8B FF 01 
233ac     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $70, $ae, $e9, $10, $fb, $8b, $ff, $01, $f0, $01, $00, $00
233b0     10 00 00 00 
233b4     42 00 00 00 
233b8     14 00 00 00 
233bc     00 04 00 00 | timings192      long   16,   66,    20,    1024,      0,     8,     0,       16,      16,    16,    192,  128,   576,     354693878,   %1_110000__11_0110_1100__1111_1011,   576
233c0     00 00 00 00 
233c4     08 00 00 00 
233c8     00 00 00 00 
233cc     10 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $10, $00, $00, $00
233d0     10 00 00 00 
233d4     10 00 00 00 
233d8     C0 00 00 00 
233dc     80 00 00 00 | 	byte	$10, $00, $00, $00, $10, $00, $00, $00, $c0, $00, $00, $00, $80, $00, $00, $00
233e0     40 02 00 00 
233e4     F6 32 24 15 
233e8     FB 6C C3 01 
233ec     40 02 00 00 | 	byte	$40, $02, $00, $00, $f6, $32, $24, $15, $fb, $6c, $c3, $01, $40, $02, $00, $00
233f0     50 00 00 00 
233f4     A0 00 00 00 
233f8     54 00 00 00 
233fc     30 03 00 00 | timings256      long   80,  160,    84,     816,      8,     8,     8,        8,      12,     8,    256,  100,   480,     357959184,   %1_110000__11_0110_0100__1111_1011,   496
23400     08 00 00 00 
23404     08 00 00 00 
23408     08 00 00 00 
2340c     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23410     0C 00 00 00 
23414     08 00 00 00 
23418     00 01 00 00 
2341c     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $00, $01, $00, $00, $64, $00, $00, $00
23420     E0 01 00 00 
23424     10 06 56 15 
23428     FB 64 C3 01 
2342c     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $10, $06, $56, $15, $fb, $64, $c3, $01, $f0, $01, $00, $00
23430     50 00 00 00 
23434     32 00 00 00 
23438     50 00 00 00 
2343c     30 03 00 00 | timings320      long   80,   50,    80,     816,      8,     8,     8,        8,      12,     8,    320,  100,   480,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
23440     08 00 00 00 
23444     08 00 00 00 
23448     08 00 00 00 
2344c     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23450     0C 00 00 00 
23454     08 00 00 00 
23458     40 01 00 00 
2345c     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $40, $01, $00, $00, $64, $00, $00, $00
23460     E0 01 00 00 
23464     F2 CD 33 13 
23468     FB 53 92 01 
2346c     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
23470     18 00 00 00 
23474     30 00 00 00 
23478     18 00 00 00 
2347c     30 03 00 00 | timings384      long   24,   48,    24,     816,      8,     8,     8,        8,      12,     8,    384,  100,   480,     286363636,   %1_010101__01_0011_1010__1111_1011,   496
23480     08 00 00 00 
23484     08 00 00 00 
23488     08 00 00 00 
2348c     08 00 00 00 | 	byte	$08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00, $08, $00, $00, $00
23490     0C 00 00 00 
23494     08 00 00 00 
23498     80 01 00 00 
2349c     64 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $80, $01, $00, $00, $64, $00, $00, $00
234a0     E0 01 00 00 
234a4     F4 8F 11 11 
234a8     FB 3A 55 01 
234ac     F0 01 00 00 | 	byte	$e0, $01, $00, $00, $f4, $8f, $11, $11, $fb, $3a, $55, $01, $f0, $01, $00, $00
234b0     20 00 00 00 
234b4     40 00 00 00 
234b8     22 00 00 00 
234bc     80 03 00 00 | timings448      long   32,   64,    34,     896,      0,     8,     0,        8,      12,     8,    448,  112,   496,     322162162,   %1_100100__10_0101_0011__1111_1011,   496
234c0     00 00 00 00 
234c4     08 00 00 00 
234c8     00 00 00 00 
234cc     08 00 00 00 | 	byte	$00, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $08, $00, $00, $00
234d0     0C 00 00 00 
234d4     08 00 00 00 
234d8     C0 01 00 00 
234dc     70 00 00 00 | 	byte	$0c, $00, $00, $00, $08, $00, $00, $00, $c0, $01, $00, $00, $70, $00, $00, $00
234e0     F0 01 00 00 
234e4     F2 CD 33 13 
234e8     FB 53 92 01 
234ec     F0 01 00 00 | 	byte	$f0, $01, $00, $00, $f2, $cd, $33, $13, $fb, $53, $92, $01, $f0, $01, $00, $00
234f0                 | 'timings999      long    0,    0,     0,       0,      0,     0,     0,        0,       0,     0,      0,    0,     0,             0,                                    0,     0
234f0     00 75 C7 97 
234f4     27 47 F6 0A 
234f8     05 79 CB 9B 
234fc     2B 4B EA 0F | vgacolors       byte   0, 117, 199, 151, 39, 71, 246, 10, 5, 121, 203, 155, 43, 75, 234, 15
23500                 | 
23500     28 12 64 FD | hdmi            setq    #9
23504     00 DF 06 FB |                 rdlong  framebuf,  ptra                  'read pointers
23508                 |            '     setq2   #255
23508                 |             '    rdlong  $100, paletteptr 
23508     00 26 6F FC |                 wrlong  #aend,#0                         'write driver length to hub#0: DEBUG/demo
2350c     3C 00 66 FD |                 setcmod #$100                            'enable HDMI mode
23510     C0 F9 06 F6 |                 mov     ii,#448                          '7 << 6          
23514     78 F9 02 F1 |                 add     ii,hbase
23518     58 F8 62 FD |                 drvl    ii                                 '#7<<6 + hdmi_base      ' enable HDMI pins
2351c     7B 0B 80 FF 
23520     7C 01 0B FC |                 wrpin   ##%10110_1111_0111_10_00000_0, ii  '#7<<6 + hdmi_base      ' a '123 ohm BITDAC for pins
23524                 | 
23524     66 66 86 FF 
23528     1D 9A 65 FD |                 setxfrq ##$0CCCCCCC+1                   'set streamer freq to 1/10th clk
2352c                 | 
2352c                 | 
2352c                 | ''--------  frame rendering main loop  ---------------------------------------------------
2352c                 | 
2352c                 | p101
2352c     28 14 64 FD |                 setq    #10
23530     00 DF 06 FB |                 rdlong  framebuf,  ptra
23534     28 1E 64 FD |                 setq    #15
23538     74 9B 02 FB |                 rdlong  m_bs,modeptr                     ' read timings
2353c     71 99 02 FB |                 rdlong  border,borderptr
23540                 | 
23540     01 C4 06 F1 |                 add     frames,#1
23544     76 F5 02 F6 |                 mov     dlptr2,dlptr
23548                 | 
23548     73 C7 02 FB |                 rdlong  cursorx, cursorptr               ' read cursor position
2354c     63 C9 EA F8 |                 getbyte cursory, cursorx,#1              ' y position at byte #1
23550     63 C3 F2 F8 |                 getbyte cursorsh,cursorx,#2              ' shape at byte #2
23554     FF C6 06 F5 |                 and     cursorx,#255                     ' clear the cursor x varioble from y and shape
23558                 |  '' up porch
23558                 | 
23558     48 FD 02 F6 |                 mov     hsync0,sync_000                  '
2355c     49 FF 02 F6 |                 mov     hsync1,sync_001
23560     37 A8 46 FB |                 callpa  i_upporch ,#blank
23564     72 01 68 FC |                 wrlong  #0,vblankptr
23568                 |                 
23568     1F EA 16 F4 |                 testb   paletteptr,#31 wc
2356c     29 FE 65 3D |          if_nc  setq2   #255
23570     75 01 00 3B |          if_nc  rdlong  $000, paletteptr                'read palette
23574                 | 
23574                 | '' cursor blinking
23574                 | 
23574     04 C4 0E F4 |                 testb   frames,#4 wz                     ' cursor blinks at framerate/16, todo: define
23578     81 C6 06 A6 |          if_z   mov     cursorx,#129                     ' to switch the cursor off, move it out of the screen
2357c                 | 
2357c                 | '' main screen
2357c                 | 
2357c     00 BE 06 F6 |                 mov linenum,#0
23580     00 18 07 F6 |                 mov rcnt,#0
23584     00 1C 07 F6 |                 mov rcnt2a,#0
23588                 | 
23588                 | 
23588     00 18 0F F2 | p301            cmp rcnt,#0 wz
2358c     18 00 90 AD |         if_z    jmp #p306
23590     01 18 87 F1 |                 sub rcnt,#1
23594     90 F7 02 F6 |                 mov dl,rdl
23598     8D 1D 0B F7 |                incmod rcnt2a,rcnt2 wz
2359c     8F F7 02 A1 |    if_z        add dl,roffset  
235a0     7B 21 03 F6 |                 mov rdl,dl
235a4     04 00 90 FD |                 jmp #p307          
235a8                 |           
235a8                 |                 
235a8     7A F7 02 FB | p306            rdlong  dl,dlptr2
235ac     7B FB 1A F6 | p307            mov     framebuf2,dl wcz                  'read a line start in the framebuffer from DL entry
235b0     6A FA 7A FD |                 rczr    framebuf2 wcz                     'but only if not %11 at lowest bits which means special DL entry
235b4     34 00 90 7D |    if_nz_or_nc  jmp     #p303                        
235b8                 | 
235b8                 | '' Special entry:
235b8                 | '' - repeat                 %nnnn_nnnn_nnnn_qqqq_mmmm_mmmm_mmmm_0111    repeat the next dl line n times, after q lines add offset m
235b8                 | '' - reload palette         %mmmm_mmmm_nnnn_nnnn_qqqq_qqqq_qqqq_1011    reload n palette entries from m color from palette_ptr+q
235b8                 | '' - set border color       %rrrr_rrrr_gggg_gggg_bbbb_bbbb_0001_0011    set border to rgb
235b8                 | '' - set border color       %0000_0000_0000_0000_pppp_pppp_0001_1011    set border color to palette entry #p
235b8                 | '' todo: set horizontal scroll (if needed)
235b8                 | 
235b8     02 FA 66 F0 |                 shl framebuf2,#2
235bc     7D 23 43 F8 |                 getnib dlc,framebuf2,#0
235c0     04 22 0F F2 |                 cmp dlc,#%100 wz
235c4                 |   
235c4                 |                 
235c4     04 F4 06 F1 |                 add dlptr2,#4
235c8     BC FF 9F 5D |                              if_nz  jmp #p301  '' now ignore unknown instruction 
235cc     7A 21 03 FB |                  rdlong rdl,dlptr2
235d0     7D 19 3B F9 |                  getword rcnt,framebuf2,#1 
235d4     04 18 47 F0 |                  shr rcnt,#4
235d8                 |              
235d8     7D 1B 63 F8 |                  getnib rcnt2,framebuf2,#4
235dc     7D 1F 33 F9 |                  getword roffset,framebuf2,#0
235e0                 |                 
235e0     04 1E 47 F0 |                  shr roffset,#4
235e4     0C 1E 67 F0 |                  shl roffset,#12
235e8                 |   
235e8     9C FF 9F FD |                  jmp #p301
235ec                 |                  
235ec                 |                  
235ec                 | p303           ' mov     framebuf2,dl                    ' read a line start in the framebuffer from DL entry
235ec     0C FA 46 F0 |                 shr     framebuf2,#12
235f0     02 FA 66 F0 |                 shl     framebuf2,#2
235f4                 | 
235f4     7B 03 E3 F8 |                 getbyte t1,dl,#0
235f8     00 02 0F F2 |                 cmp     t1,#0 wz
235fc     34 00 90 AD |     if_z        jmp     #borderline
23600                 | 
23600     00 F6 16 F4 |                  testb   dl,#0  wc     ' bit 0 set = text OR extended:TODO
23604     50 00 90 CD |           if_c   jmp     #textline
23608     50 02 90 3D |           if_nc  jmp     #graphline
2360c                 | '
2360c     01 BE 06 F1 | p302            add     linenum,#1
23610     04 F4 06 F1 |                 add     dlptr2,#4
23614     5C BF 0A F2 |                 cmp     linenum,i_totalvis  wz
23618     6C FF 9F 5D |          if_nz  jmp     #p301
2361c                 | 
2361c     72 03 68 FC | p112            wrlong  #1,vblankptr
23620     07 AC 46 FB |                 callpa  i_downporch ,#blank             'bottom blanks
23624                 | 
23624     4A FD 02 F6 |                 mov     hsync0,sync_222                 'vsync on
23628     4B FF 02 F6 |                 mov     hsync1,sync_223
2362c     04 AA 46 FB |                 callpa  i_vsync,#blank                  'vertical sync blanks
23630     F8 FE 9F FD |                 jmp     #p101
23634                 | 
23634                 | '' ---------------  END of frame rendering loop -------------------------------------------
23634                 | 
23634                 | 
23634     14 00 B0 FD | borderline      call    #hsync                      ' make a border
23638     4C A1 C2 FC |                 xcont   m_vi,border
2363c     CC FF 9F FD |                 jmp     #p302
23640                 | 
23640                 | 
23640     08 00 B0 FD | blank           call    #hsync                          'blank lines
23644     7E A1 C2 FC |                 xcont   m_vi,hsync0
23648     FD ED 6F 0B |         _ret_   djnz    pa,#blank
2364c                 | 
2364c     7E 9B C2 FC | hsync           xcont   m_bs,hsync0                     'horizontal sync
23650     7F 9D B2 FC |                 xzero   m_sn,hsync1
23654     7E 9F C2 0C |         _ret_   xcont   m_bv,hsync0
23658                 | 
23658                 | 
23658                 | 
23658                 | ''--%aaaa_aaaa_aaaa_aaaa_aazz_nnnn_llll_ll_01 - txt
23658                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph
23658                 |   '' aaaa_aaaa_aaaa-aaaa_aarr_rrrr_rrrr_rr_11 - extended, next long to read
23658                 | 
23658                 | '' Display a text line DL[31..12]=addr, nibble #1=textline, zoom: todo
23658                 | 
23658     63 CD 02 F6 | textline        mov     cursorpos2,cursorx              ' we need another var for cursor as this code will repeat 16x for every char line
2365c                 | 
2365c     7B 01 53 F8 |                 getnib  fontline,dl,#2                 ' fontline is 0 to 15, a line in font def
23660     7B 17 5B F8 |                 getnib  zoom, dl,#3
23664     03 16 07 F5 |                 and             zoom, #3
23668                 | 
23668                 | 
23668                 | 
23668     7B BD 02 F6 |                 mov     linestart,dl                    ' linestart will be used for checking cursor y and compute line start addr in the buffer
2366c     02 BC 46 F0 |                 shr     linestart,#2                    ' scanline to char line
23670     3F BC 06 F5 |                 and     linestart,#63
23674     64 BD 0A F2 |                 cmp     linestart,cursory wz            ' if the cursor is not here
23678     81 CC 06 56 |           if_nz mov     cursorpos2,#129                 ' move it out of the screen
2367c                 | 
2367c     CC FF BF FD |                 call    #hsync                          ' now call hsync to gain some time between xconts
23680                 | 
23680                 |                        ' if fontline =0, get a border color
23680                 | 
23680     51 03 33 F9 | p102            getword t1,m_border,#0
23684     00 02 0F F2 |                 cmp     t1, #0 wz
23688     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
2368c                 | 
2368c     61 01 1B F2 |                 cmp     fontline,cursorsh wcz           ' if the cursor have to be not displayed due to its shape
23690     81 CA 06 C6 |           if_c  mov     cursorpos,#129                  ' move it out of the screen
23694     66 CB 02 36 |          if_nc  mov     cursorpos,cursorpos2
23698     01 CA 06 F1 |                 add     cursorpos,#1                    ' we will substract #1 below so compensate this here
2369c     70 05 03 F6 |                 mov     t2,fontbuf                      ' font definition pointer
236a0     80 05 03 F1 |                 add     t2,fontline                     ' add a current font line
236a4     52 BB 02 F6 |                 mov m_lut2, m_lut1
236a8     6A BB 02 F1 |                 add m_lut2, lutt1
236ac     58 0F 03 F6 |                 mov cpl2,i_cpl
236b0                 | 
236b0     02 16 0F F2 |                cmp zoom,#2 wz
236b4     E4 00 90 AD |           if_z jmp #p420
236b8     01 16 0F F2 |                cmp zoom,#1 wz
236bc     64 00 90 AD |           if_z jmp #p410
236c0     00 16 0F F2 |                 cmp zoom,#0 wz
236c4     04 00 90 AD |           if_z jmp #p400
236c8     50 01 90 FD |                jmp #p430
236cc                 | 
236cc                 |                    '
236cc                 |  ''---------------------------------------------------------------------------------------------------------
236cc     7D 11 03 FB |  p400                   rdlong  char,framebuf2          ' read a long char                          '1
236d0     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
236d4     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
236d8     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
236dc     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
236e0     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
236e4     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
236e8     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
236ec     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
236f0     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
236f4                 | 
236f4     81 BB C2 FC |                         xcont m_lut2,t1
236f8                 | 
236f8     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
236fc     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
23700     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
23704     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
23708     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
2370c     01 C0 86 F1 |                         sub     lutaddr,#1
23710                 | 
23710     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
23714     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
23718     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
2371c                 | 
2371c     EB 0F 6F FB |                         djnz   cpl2,#p400
23720     28 01 90 FD |  p401                   jmp    #p103
23724                 | 
23724                 | ''------------------------------------------------------------------------------------------------------------
23724                 | 
23724     01 0E 47 F0 |  p410                   shr cpl2,#1
23728                 | 
23728                 | ''---------------------------------------------------------------------------------------------------------
23728     7D 11 03 FB |  p412                   rdlong  char,framebuf2          ' read a long char                          '1
2372c     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
23730     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
23734     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
23738     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
2373c     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
23740     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
23744     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
23748     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
2374c     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
23750                 | 
23750                 | 
23750     81 07 4B F8 |                         getnib t3,t1,#1                   ' 4 pixels to t3                                              '1  - +
23754     81 03 43 F8 |                         getnib t1,t1,#0                   ' 4 pixels to t1                                                      '2  - +
23758     63 02 63 FD |                         mergew t1                         ' make 01010101 from 1111                                     '3  - +
2375c     03 02 07 FA |                         mul t1,#3
23760     81 BB C2 FC |                         xcont m_lut2,t1
23764     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
23768     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
2376c     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
23770     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
23774     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
23778     01 C0 86 F1 |                         sub     lutaddr,#1
2377c     63 06 63 FD |                         mergew t3
23780     03 06 07 FA |                         mul t3,#3
23784     83 BB C2 FC |                         xcont m_lut2,t3
23788                 | 
23788     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2378c     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
23790                 | 
23790     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
23794                 | 
23794     E4 0F 6F FB |                         djnz   cpl2,#p412
23798     B0 00 90 FD |  p411                   jmp    #p103
2379c                 | 
2379c                 | ''------------------------------------------------------------------------------------------------------------
2379c                 | 
2379c     02 0E 47 F0 |  p420                   shr cpl2,#2
237a0                 | 
237a0                 | ''---------------------------------------------------------------------------------------
237a0     7D 11 03 FB |  p422                   rdlong  char,framebuf2          ' read a long char                          '1
237a4     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
237a8     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
237ac     88 11 E3 F8 |                         getbyte char,char, #0           ' word #0 - char code                       '4
237b0     04 FA 06 F1 |                         add     framebuf2,#4            ' point to the next long                    '5
237b4     04 10 67 F0 |                         shl     char,#4                 ' 1 char=16 bytes in font def               '6
237b8     82 11 03 F1 |                         add     char,t2                 ' add this to font/line pointer             '7
237bc     88 03 C3 FA |                         rdbyte  t1,char                 ' and get 8 pixels prom there               '8
237c0     01 CA 8E F1 |                         sub     cursorpos,#1 wz         ' if there is a cursor                      '9
237c4     FF 02 67 A5 |                   if_z  xor     t1, #$FF                ' reverse the colors                        '10
237c8                 | 
237c8     61 02 63 FD |                         mergeb t1
237cc     81 07 3B F9 |                         getword t3,t1,#1
237d0     0F 02 07 FA |                         mul t1,#15
237d4     81 BB C2 FC |                         xcont m_lut2,t1
237d8                 | 
237d8     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
237dc     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
237e0     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
237e4     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
237e8     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
237ec     01 C0 86 F1 |                         sub     lutaddr,#1
237f0                 | 
237f0     81 09 EB F8 |                         getbyte t4,t1,#1        '
237f4     84 BB C2 FC |                         xcont m_lut2,t4                                                                                                           '
237f8                 | 
237f8     0F 06 07 FA |                         mul t3,#15
237fc     83 BB C2 FC |                         xcont m_lut2,t3
23800                 | 
23800     83 0B EB F8 |                         getbyte t5,t3,#1
23804     85 BB C2 FC |                         xcont m_lut2, t5
23808     10 BA E6 F4 |                         bitnot  m_lut2,#16                                                          '19
2380c     10 A4 E6 F4 |                         bitnot  m_lut1,#16                                                          '19
23810                 | 
23810     20 C0 66 F5 |                         xor     lutaddr,#32             ' use LUT #0-1 and 32-33                    '20
23814                 | 
23814     E2 0F 6F FB |                         djnz   cpl2,#p422
23818     30 00 90 FD |  p421                   jmp    #p103
2381c                 | 
2381c                 | '--------------------------------------------------------------------------------------------------------------
2381c                 | 
2381c     7D 11 03 FB |  p430                   rdlong  char,framebuf2          ' read a long char                          '1
23820     88 13 F3 F8 |                         getbyte backcolor,char,#2       ' byte #2 - background color                '2
23824     88 15 FB F8 |                         getbyte charcolor,char,#3       ' byte #3 - foreground color                '3
23828                 | 
23828     00 BA C6 FC |                         xcont m_lut2,#0
2382c                 | 
2382c     89 0B A3 FA |                         rdlut   t5,backcolor            ' read a background color from palette      '13
23830     60 0B 33 FC |                         wrlut   t5,lutaddr              ' and write it to LUT #0 or #32             '14
23834     01 C0 06 F1 |                         add     lutaddr,#1                                                          '15
23838     8A 0B A3 FA |                         rdlut   t5,charcolor            ' the same for the foreground               '16
2383c     60 0B 33 FC |                         wrlut   t5,lutaddr                                                          '17
23840     01 C0 86 F1 |                         sub     lutaddr,#1
23844                 | 
23844     F5 0F 6F FB |                         djnz   cpl2,#p430
23848     00 00 90 FD |  p431                   jmp    #p103
2384c                 | 
2384c                 | ''------------------------------------------------------------------------------------------------------------
2384c                 | 
2384c                 | 
2384c                 | 
2384c     51 25 33 F9 | p103            getword  mb2,m_border,#0
23850     00 24 0F F2 |                 cmp      mb2, #0 wz
23854     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
23858                 | 
23858     B0 FD 9F FD |                 jmp #p302
2385c                 | 
2385c                 | '' -------------------------------------- END of text line ---------------------------------
2385c                 | 
2385c                 |   '' aaaa_aaaa_aaaa_aaaa_aazz_rrrr_rrrr_cc_10 - graph - display a graphics line
2385c                 | 
2385c     EC FD BF FD | graphline       call    #hsync                          ' now call hsync to gain some time between xconts
23860                 | 
23860                 | 
23860     51 25 33 F9 | p202            getword mb2,m_border,#0
23864     00 24 0F F2 |                 cmp     mb2, #0 wz
23868     4C A3 C2 5C |           if_nz xcont   m_border,border                 ' display a left border if exists
2386c                 | 
2386c                 | '----------------------------------------- display pixels
2386c                 | 
2386c     52 BB 02 F6 |                 mov     m_lut2,m_lut1                   ' m_lut1 loaded from hub timing block, pixel per long
23870     58 0F 03 F6 |                 mov     cpl2,i_cpl                      ' i_cpl in graphic modes is longs per line
23874                 | 
23874     7B 17 5B F8 |                 getnib  zoom, dl,#3
23878     03 16 07 F5 |                 and             zoom, #3                        ' get a horizontal zoom for the line
2387c                 | 
2387c     7B BD 02 F6 |                 mov     colordepth,dl                   ' get a color depth, reuse linestart var f         '
23880     0C BC 06 F5 |                 and     colordepth,#12
23884                 | 
23884     00 BC 0E F2 |                 cmp     colordepth,#%0000 wz            ' 1 bpp modes
23888     6B BB 02 A1 |           if_z  add     m_lut2,lutg1
2388c     64 00 90 AD |           if_z  jmp     #p240
23890                 | 
23890     04 BC 0E F2 |                 cmp     colordepth,#%0100 wz            ' 2 bpp modes
23894     6C BB 02 A1 |           if_z  add     m_lut2,lutg2
23898     98 00 90 AD |           if_z  jmp     #p250
2389c                 | 
2389c     08 BC 0E F2 |                 cmp     colordepth,#%1000 wz            ' 4 bpp modes
238a0     6D BB 02 A1 |           if_z  add     m_lut2,lutg4
238a4     FC 00 90 AD |           if_z  jmp     #p260
238a8                 | 
238a8     6E BB 02 F1 |                 add m_lut2,lutg8                        ' 8 bpp modes
238ac                 | 
238ac                 | '' --- 8 bit color modes
238ac                 | 
238ac     00 16 0F F2 |                 cmp zoom, #%00 wz   '256 colors, zoom x1
238b0     50 01 90 AD |                 if_z jmp #p251      'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
238b4                 | 
238b4     01 16 0F F2 |                 cmp zoom, #%01 wz   '256 colors, zoom x2
238b8     2A 0C 07 A6 |                 if_z mov skippattern,#%101010
238bc                 |        
238bc                 |  '  
238bc     02 16 0F F2 |                 cmp zoom, #%10 wz   '256 colors, zoom x4
238c0     25 0C 07 A6 |                 if_z mov skippattern,#%100101
238c4                 |     
238c4                 |  
238c4     05 0C 07 56 |                 if_nz mov skippattern,#%000101
238c8     01 0E 47 50 |                 if_nz shr cpl2,#1         ' if 8x zoom, 2 xconts used in one loop, so divide loop count by 2
238cc                 |         
238cc                 | 
238cc                 |         
238cc     7D 11 03 FB | p235               rdlong  char,framebuf2
238d0     32 0C 63 FD |                    skipf skippattern
238d4     02 FA 06 F1 |                    add     framebuf2,#2             '0 1 1
238d8     01 FA 06 F1 |                    add     framebuf2,#1             '1 0 0
238dc     50 10 FF F9 |                    movbyts char,#%01010000          '0 1 1
238e0     00 10 FF F9 |                    movbyts char,#%00000000          '1 0 0
238e4     88 BB C2 FC |                    xcont   m_lut2,char              '0 0 0
238e8     88 BB C2 FC |                    xcont   m_lut2,char              '1 1 0
238ec     F7 0F 6F FB |                    djnz    cpl2,#p235
238f0                 | 
238f0     20 01 90 FD |                jmp    #p203
238f4                 |                   
238f4                 | 
238f4                 | 
238f4                 | '' --- 1 bit color modes
238f4                 | 
238f4     00 16 0F F2 | p240          cmp zoom, #%00 wz     '2 colors, zoom x1
238f8     08 01 90 AD |        if_z   jmp #p251              'there is an universal loop for 1x zoom at p251, saves one long of skip pattern
238fc                 | 
238fc     01 16 0F F2 |               cmp zoom, #%01 wz     '2 colors, zoom x2
23900     13 0C 07 A6 |        if_z   mov skippattern,#%10011
23904     08 0C 07 56 |        if_nz  mov skippattern,#%01000
23908                 | 
23908                 | 
23908     7D 11 E3 FA | p241               rdword  char,framebuf2
2390c     44 10 FF F9 |                    movbyts char,#%01000100
23910     63 10 63 FD |                    mergew  char
23914     32 0C 63 FD |                    skipf skippattern
23918     44 10 FF F9 |                    movbyts char,#%01000100         ' 1 0
2391c     63 10 63 FD |                    mergew  char                    ' 1 0
23920     88 BB C2 FC |                    xcont   m_lut2,char             ' 0 0
23924     02 FA 06 F1 |                    add     framebuf2,#2                    ' 0 1
23928     01 FA 06 F1 |                    add     framebuf2,#1                ' 1 0
2392c     F6 0F 6F FB |                    djnz   cpl2,#p241
23930                 | 
23930                 | 
23930     E0 00 90 FD |                jmp    #p203
23934                 | 
23934                 | '' --- 2 bit color modes
23934                 | 
23934     00 16 0F F2 | p250          cmp zoom, #%00 wz     '4 colors, zoom x1
23938     C8 00 90 AD |        if_z   jmp #p251
2393c                 | 
2393c     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
23940     30 00 90 AD |        if_z   jmp #p252
23944                 | 
23944                 | 
23944     7D 11 C3 FA | p254               rdbyte char,framebuf2
23948     04 0A 07 F6 |                    mov  t5,#4
2394c     02 10 67 F0 | p255               shl  char,#2
23950     88 03 53 F8 |                    getnib  t1,char,#2
23954     03 02 07 F5 |                    and     t1,#3
23958     55 02 07 FA |                    mul     t1,#$55
2395c     81 05 03 F9 |                    rolbyte  t2,t1,#0
23960     FA 0B 6F FB |                    djnz    t5,#p255
23964     82 BB C2 FC |                    xcont   m_lut2,t2
23968     01 FA 06 F1 |                    add     framebuf2,#1
2396c     F5 0F 6F FB |                    djnz    cpl2,#p254
23970     A0 00 90 FD |                    jmp     #p203
23974                 | 
23974     7D 11 E3 FA | p252               rdword char,framebuf2
23978     08 0A 07 F6 |                    mov  t5,#8
2397c     02 10 67 F0 | p253               shl  char,#2
23980     88 03 63 F8 |                    getnib  t1,char,#4
23984     03 02 07 F5 |                    and     t1,#3
23988     05 02 07 FA |                    mul     t1,#5
2398c     81 05 83 F8 |                    rolnib  t2,t1,#0
23990     FA 0B 6F FB |                    djnz    t5,#p253
23994     82 BB C2 FC |                    xcont   m_lut2,t2
23998     02 FA 06 F1 |                    add     framebuf2,#2
2399c     F5 0F 6F FB |                    djnz    cpl2,#p252
239a0     70 00 90 FD |                    jmp     #p203
239a4                 | 
239a4                 | '' ------ 4 bit color modes
239a4                 | 
239a4     00 16 0F F2 | p260          cmp zoom, #%00 wz     '4 colors, zoom x1, the same loop as 2bpp
239a8     58 00 90 AD |        if_z   jmp #p251
239ac                 | 
239ac     01 16 0F F2 |               cmp zoom, #%01 wz     '4 colors, zoom x2
239b0     2C 00 90 AD |        if_z   jmp #p262
239b4                 | 
239b4                 | 
239b4     7D 11 C3 FA | p263               rdbyte char,framebuf2
239b8     02 0A DC FC |                            rep #5,#2
239bc     88 05 8B F8 |                              rolnib t2,char,#1
239c0     88 05 8B F8 |                                  rolnib t2,char,#1
239c4     88 05 8B F8 |                              rolnib t2,char,#1
239c8     88 05 8B F8 |                                  rolnib t2,char,#1
239cc     04 10 67 F0 |                              shl char,#4
239d0     82 BB C2 FC |                    xcont   m_lut2,t2
239d4     01 FA 06 F1 |                    add     framebuf2,#1
239d8     F6 0F 6F FB |                    djnz    cpl2,#p263
239dc     34 00 90 FD |                    jmp     #p203
239e0                 | 
239e0     7D 11 E3 FA | p262               rdword  char,framebuf2
239e4     04 06 DC FC |                            rep #3,#4
239e8     88 05 9B F8 |                              rolnib t2,char,#3
239ec     88 05 9B F8 |                                  rolnib t2,char,#3
239f0     04 10 67 F0 |                              shl char,#4
239f4     82 BB C2 FC |                    xcont   m_lut2,t2
239f8     02 FA 06 F1 |                    add     framebuf2,#2
239fc     F8 0F 6F FB |                    djnz    cpl2,#p262
23a00     10 00 90 FD |                    jmp     #p203
23a04                 | 
23a04                 | ''---------- all color modes without zoom
23a04                 | 
23a04     87 07 D8 FC | p251               rep  #3,cpl2
23a08     7D 11 03 FB |                    rdlong  char,framebuf2
23a0c     04 FA 06 F1 |                    add     framebuf2,#4
23a10     88 BB C2 FC |                    xcont   m_lut2,char
23a14                 |           
23a14                 |  ''-----------------------------------------------------------------------------------------
23a14                 | p203           ' getword  mb2,m_border,#0
23a14     00 24 0F F2 |                 cmp      mb2, #0 wz
23a18     4C A3 C2 5C |                 if_nz    xcont   m_border,border            'display a right border if exists
23a1c                 | 
23a1c     EC FB 9F FD |                 jmp #p302
23a20                 | 
23a20                 | '' -------------------------------------- END of graph  line ---------------------------------
23a20                 | 
23a20                 | '' consts and vars
23a20                 | 
23a20     52 4D 35 D5 | sync_000        long    %1101010100_1101010100_1101010100_10    '
23a24     AE 42 35 D5 | sync_001        long    %1101010100_1101010100_0010101011_10    '        hsync
23a28     52 45 15 55 | sync_222        long    %0101010100_0101010100_0101010100_10    'vsync
23a2c     AE 4A 15 55 | sync_223        long    %0101010100_0101010100_1010101011_10    'vsync + hsync
23a30                 | 
23a30     00 2C 1A 00 | border          long    %00000000_00011010_00101100_00000000
23a34                 | 
23a34                 | '------ these longs will be set by setmode function
23a34                 | 
23a34     00 00 00 00 | m_bs            long    0        'blanks before sync
23a38     00 00 00 00 | m_sn            long    0        'sync
23a3c     00 00 00 00 | m_bv            long    0        'blanks before visible
23a40     00 00 00 00 | m_vi            long    0        'visible pixels #
23a44     00 00 00 00 | m_border        long    0        'left/right borders
23a48     00 00 00 00 | m_lut1          long    0        'characters
23a4c     00 00 00 00 | i_vborder       long    0        'up/down borders
23a50     00 00 00 00 | i_upporch       long    0        'up porch lines
23a54     00 00 00 00 | i_vsync         long    0        'vsync lines
23a58     00 00 00 00 | i_downporch     long    0        'down porch lines
23a5c     00 00 00 00 | i_modenum       long    0        'mode #
23a60     00 00 00 00 | i_cpl           long    0        'chars/longs per line
23a64     00 00 00 00 | i_lines         long    0        'scanlines #
23a68     00 00 00 00 | i_clock         long    0
23a6c     00 00 00 00 | i_hubset        long    0
23a70     00 00 00 00 | i_totalvis      long    0
23a74                 | 
23a74                 | '-------------------------------------
23a74                 | 
23a74     00 00 00 00 | m_lut2          long    0
23a78                 | 
23a78                 | colordepth
23a78     00 00 00 00 | linestart       long    0
23a7c     00 00 00 00 | linenum         long    0
23a80     00 01 00 00 | lutaddr         long    256
23a84                 | 
23a84     0E 00 00 00 | cursorsh        long    14
23a88     00 00 00 00 | frames          long    0
23a8c     00 00 00 00 | cursorx         long    0
23a90     00 00 00 00 | cursory         long    0
23a94     00 00 00 00 | cursorpos       long    0
23a98     00 00 00 00 | cursorpos2      long    0
23a9c     00 00 00 00 | fontstart       long    0
23aa0     00 00 00 00 | border2         long 0
23aa4     00 00 81 70 | lutiv           long $70810000
23aa8     00 00 88 00 | lutt1           long $00880000
23aac     00 00 80 00 | lutg1           long $00800000
23ab0     00 00 80 10 | lutg2           long $10800000
23ab4     00 00 80 20 | lutg4           long $20800000
23ab8     00 00 80 30 | lutg8           long $30800000
23abc     00 00 00 00 | framebuf        long 0
23ac0     00 00 00 00 | fontbuf         long 0
23ac4     00 00 00 00 | borderptr       long 0
23ac8     00 00 00 00 | vblankptr       long 0
23acc     00 00 00 00 | cursorptr       long 0
23ad0     00 00 00 00 | modeptr         long 0
23ad4     00 00 00 00 | paletteptr      long 0
23ad8     00 00 00 00 | dlptr           long 0
23adc                 | fontnumptr      res     1
23adc                 | fontnumptr      res     1
23adc                 | hbase           res     1
23adc                 | hbase           res     1
23adc                 | borderptr2      res     1
23adc                 | borderptr2      res     1
23adc                 | dlptr2 res 1
23adc                 | dlptr2 res 1
23adc                 | dl              res 1
23adc                 | dl              res 1
23adc                 | ii              res     1
23adc                 | ii              res     1
23adc                 | framebuf2       res     1
23adc                 | framebuf2       res     1
23adc                 | hsync0          res     1
23adc                 | hsync0          res     1
23adc                 | hsync1          res     1
23adc                 | hsync1          res     1
23adc                 | fontline        res     1
23adc                 | fontline        res     1
23adc                 | t1              res     1
23adc                 | t1              res     1
23adc                 | t2              res     1
23adc                 | t2              res     1
23adc                 | t3 res 1
23adc                 | t3 res 1
23adc                 | t4 res 1
23adc                 | t4 res 1
23adc                 | t5 res 1
23adc                 | t5 res 1
23adc                 | skippattern res 1
23adc                 | skippattern res 1
23adc                 | cpl2 res 1
23adc                 | cpl2 res 1
23adc                 | char            res     1
23adc                 | char            res     1
23adc                 | backcolor       res     1
23adc                 | backcolor       res     1
23adc                 | charcolor       res     1
23adc                 | charcolor       res     1
23adc                 | zoom res 1
23adc                 | zoom res 1
23adc     00 00 00 00 | rcnt long 0 'dl repeat count
23ae0     00 00 00 00 | rcnt2 long 0
23ae4     00 00 00 00 | rcnt2a long 0
23ae8     00 00 00 00 | roffset long 0
23aec     00 00 00 00 | rdl long 0  'dl repeat line
23af0     00 00 00 00 | dlc long 0 'dl command
23af4     00 00 00 00 | mb2 long 0
23af8     00 00 00 00 | aend             long 0
23afc                 |                 fit     496                     '
23afc                 | _trackerplayer_spin2_dat_
23afc                 | 
23afc     00 00 00 00 | null             long  0
23b00     46 52 45 51 
23b04     46 52 45 51 
23b08     46 52 45 51 
23b0c     46 52 45 51 | frequencyLut     long  $51_45_52_46[VALUES_IN_PERIOD_TABLE] ' This table is runtime calculated to match any possible sys clock and mixing frequency combination [1024]
23b10     46 52 45 51 
23b14     46 52 45 51 
23b18     46 52 45 51 
23b1c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b20     46 52 45 51 
23b24     46 52 45 51 
23b28     46 52 45 51 
23b2c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b30     46 52 45 51 
23b34     46 52 45 51 
23b38     46 52 45 51 
23b3c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b40     46 52 45 51 
23b44     46 52 45 51 
23b48     46 52 45 51 
23b4c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b50     46 52 45 51 
23b54     46 52 45 51 
23b58     46 52 45 51 
23b5c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b60     46 52 45 51 
23b64     46 52 45 51 
23b68     46 52 45 51 
23b6c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b70     46 52 45 51 
23b74     46 52 45 51 
23b78     46 52 45 51 
23b7c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b80     46 52 45 51 
23b84     46 52 45 51 
23b88     46 52 45 51 
23b8c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23b90     46 52 45 51 
23b94     46 52 45 51 
23b98     46 52 45 51 
23b9c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ba0     46 52 45 51 
23ba4     46 52 45 51 
23ba8     46 52 45 51 
23bac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23bb0     46 52 45 51 
23bb4     46 52 45 51 
23bb8     46 52 45 51 
23bbc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23bc0     46 52 45 51 
23bc4     46 52 45 51 
23bc8     46 52 45 51 
23bcc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23bd0     46 52 45 51 
23bd4     46 52 45 51 
23bd8     46 52 45 51 
23bdc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23be0     46 52 45 51 
23be4     46 52 45 51 
23be8     46 52 45 51 
23bec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23bf0     46 52 45 51 
23bf4     46 52 45 51 
23bf8     46 52 45 51 
23bfc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c00     46 52 45 51 
23c04     46 52 45 51 
23c08     46 52 45 51 
23c0c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c10     46 52 45 51 
23c14     46 52 45 51 
23c18     46 52 45 51 
23c1c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c20     46 52 45 51 
23c24     46 52 45 51 
23c28     46 52 45 51 
23c2c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c30     46 52 45 51 
23c34     46 52 45 51 
23c38     46 52 45 51 
23c3c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c40     46 52 45 51 
23c44     46 52 45 51 
23c48     46 52 45 51 
23c4c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c50     46 52 45 51 
23c54     46 52 45 51 
23c58     46 52 45 51 
23c5c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c60     46 52 45 51 
23c64     46 52 45 51 
23c68     46 52 45 51 
23c6c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c70     46 52 45 51 
23c74     46 52 45 51 
23c78     46 52 45 51 
23c7c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c80     46 52 45 51 
23c84     46 52 45 51 
23c88     46 52 45 51 
23c8c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23c90     46 52 45 51 
23c94     46 52 45 51 
23c98     46 52 45 51 
23c9c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ca0     46 52 45 51 
23ca4     46 52 45 51 
23ca8     46 52 45 51 
23cac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23cb0     46 52 45 51 
23cb4     46 52 45 51 
23cb8     46 52 45 51 
23cbc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23cc0     46 52 45 51 
23cc4     46 52 45 51 
23cc8     46 52 45 51 
23ccc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23cd0     46 52 45 51 
23cd4     46 52 45 51 
23cd8     46 52 45 51 
23cdc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ce0     46 52 45 51 
23ce4     46 52 45 51 
23ce8     46 52 45 51 
23cec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23cf0     46 52 45 51 
23cf4     46 52 45 51 
23cf8     46 52 45 51 
23cfc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d00     46 52 45 51 
23d04     46 52 45 51 
23d08     46 52 45 51 
23d0c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d10     46 52 45 51 
23d14     46 52 45 51 
23d18     46 52 45 51 
23d1c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d20     46 52 45 51 
23d24     46 52 45 51 
23d28     46 52 45 51 
23d2c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d30     46 52 45 51 
23d34     46 52 45 51 
23d38     46 52 45 51 
23d3c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d40     46 52 45 51 
23d44     46 52 45 51 
23d48     46 52 45 51 
23d4c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d50     46 52 45 51 
23d54     46 52 45 51 
23d58     46 52 45 51 
23d5c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d60     46 52 45 51 
23d64     46 52 45 51 
23d68     46 52 45 51 
23d6c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d70     46 52 45 51 
23d74     46 52 45 51 
23d78     46 52 45 51 
23d7c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d80     46 52 45 51 
23d84     46 52 45 51 
23d88     46 52 45 51 
23d8c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23d90     46 52 45 51 
23d94     46 52 45 51 
23d98     46 52 45 51 
23d9c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23da0     46 52 45 51 
23da4     46 52 45 51 
23da8     46 52 45 51 
23dac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23db0     46 52 45 51 
23db4     46 52 45 51 
23db8     46 52 45 51 
23dbc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23dc0     46 52 45 51 
23dc4     46 52 45 51 
23dc8     46 52 45 51 
23dcc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23dd0     46 52 45 51 
23dd4     46 52 45 51 
23dd8     46 52 45 51 
23ddc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23de0     46 52 45 51 
23de4     46 52 45 51 
23de8     46 52 45 51 
23dec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23df0     46 52 45 51 
23df4     46 52 45 51 
23df8     46 52 45 51 
23dfc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e00     46 52 45 51 
23e04     46 52 45 51 
23e08     46 52 45 51 
23e0c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e10     46 52 45 51 
23e14     46 52 45 51 
23e18     46 52 45 51 
23e1c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e20     46 52 45 51 
23e24     46 52 45 51 
23e28     46 52 45 51 
23e2c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e30     46 52 45 51 
23e34     46 52 45 51 
23e38     46 52 45 51 
23e3c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e40     46 52 45 51 
23e44     46 52 45 51 
23e48     46 52 45 51 
23e4c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e50     46 52 45 51 
23e54     46 52 45 51 
23e58     46 52 45 51 
23e5c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e60     46 52 45 51 
23e64     46 52 45 51 
23e68     46 52 45 51 
23e6c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e70     46 52 45 51 
23e74     46 52 45 51 
23e78     46 52 45 51 
23e7c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e80     46 52 45 51 
23e84     46 52 45 51 
23e88     46 52 45 51 
23e8c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23e90     46 52 45 51 
23e94     46 52 45 51 
23e98     46 52 45 51 
23e9c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ea0     46 52 45 51 
23ea4     46 52 45 51 
23ea8     46 52 45 51 
23eac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23eb0     46 52 45 51 
23eb4     46 52 45 51 
23eb8     46 52 45 51 
23ebc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ec0     46 52 45 51 
23ec4     46 52 45 51 
23ec8     46 52 45 51 
23ecc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ed0     46 52 45 51 
23ed4     46 52 45 51 
23ed8     46 52 45 51 
23edc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ee0     46 52 45 51 
23ee4     46 52 45 51 
23ee8     46 52 45 51 
23eec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ef0     46 52 45 51 
23ef4     46 52 45 51 
23ef8     46 52 45 51 
23efc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f00     46 52 45 51 
23f04     46 52 45 51 
23f08     46 52 45 51 
23f0c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f10     46 52 45 51 
23f14     46 52 45 51 
23f18     46 52 45 51 
23f1c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f20     46 52 45 51 
23f24     46 52 45 51 
23f28     46 52 45 51 
23f2c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f30     46 52 45 51 
23f34     46 52 45 51 
23f38     46 52 45 51 
23f3c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f40     46 52 45 51 
23f44     46 52 45 51 
23f48     46 52 45 51 
23f4c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f50     46 52 45 51 
23f54     46 52 45 51 
23f58     46 52 45 51 
23f5c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f60     46 52 45 51 
23f64     46 52 45 51 
23f68     46 52 45 51 
23f6c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f70     46 52 45 51 
23f74     46 52 45 51 
23f78     46 52 45 51 
23f7c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f80     46 52 45 51 
23f84     46 52 45 51 
23f88     46 52 45 51 
23f8c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23f90     46 52 45 51 
23f94     46 52 45 51 
23f98     46 52 45 51 
23f9c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23fa0     46 52 45 51 
23fa4     46 52 45 51 
23fa8     46 52 45 51 
23fac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23fb0     46 52 45 51 
23fb4     46 52 45 51 
23fb8     46 52 45 51 
23fbc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23fc0     46 52 45 51 
23fc4     46 52 45 51 
23fc8     46 52 45 51 
23fcc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23fd0     46 52 45 51 
23fd4     46 52 45 51 
23fd8     46 52 45 51 
23fdc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23fe0     46 52 45 51 
23fe4     46 52 45 51 
23fe8     46 52 45 51 
23fec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
23ff0     46 52 45 51 
23ff4     46 52 45 51 
23ff8     46 52 45 51 
23ffc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24000     46 52 45 51 
24004     46 52 45 51 
24008     46 52 45 51 
2400c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24010     46 52 45 51 
24014     46 52 45 51 
24018     46 52 45 51 
2401c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24020     46 52 45 51 
24024     46 52 45 51 
24028     46 52 45 51 
2402c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24030     46 52 45 51 
24034     46 52 45 51 
24038     46 52 45 51 
2403c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24040     46 52 45 51 
24044     46 52 45 51 
24048     46 52 45 51 
2404c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24050     46 52 45 51 
24054     46 52 45 51 
24058     46 52 45 51 
2405c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24060     46 52 45 51 
24064     46 52 45 51 
24068     46 52 45 51 
2406c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24070     46 52 45 51 
24074     46 52 45 51 
24078     46 52 45 51 
2407c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24080     46 52 45 51 
24084     46 52 45 51 
24088     46 52 45 51 
2408c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24090     46 52 45 51 
24094     46 52 45 51 
24098     46 52 45 51 
2409c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240a0     46 52 45 51 
240a4     46 52 45 51 
240a8     46 52 45 51 
240ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240b0     46 52 45 51 
240b4     46 52 45 51 
240b8     46 52 45 51 
240bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240c0     46 52 45 51 
240c4     46 52 45 51 
240c8     46 52 45 51 
240cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240d0     46 52 45 51 
240d4     46 52 45 51 
240d8     46 52 45 51 
240dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240e0     46 52 45 51 
240e4     46 52 45 51 
240e8     46 52 45 51 
240ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
240f0     46 52 45 51 
240f4     46 52 45 51 
240f8     46 52 45 51 
240fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24100     46 52 45 51 
24104     46 52 45 51 
24108     46 52 45 51 
2410c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24110     46 52 45 51 
24114     46 52 45 51 
24118     46 52 45 51 
2411c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24120     46 52 45 51 
24124     46 52 45 51 
24128     46 52 45 51 
2412c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24130     46 52 45 51 
24134     46 52 45 51 
24138     46 52 45 51 
2413c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24140     46 52 45 51 
24144     46 52 45 51 
24148     46 52 45 51 
2414c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24150     46 52 45 51 
24154     46 52 45 51 
24158     46 52 45 51 
2415c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24160     46 52 45 51 
24164     46 52 45 51 
24168     46 52 45 51 
2416c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24170     46 52 45 51 
24174     46 52 45 51 
24178     46 52 45 51 
2417c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24180     46 52 45 51 
24184     46 52 45 51 
24188     46 52 45 51 
2418c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24190     46 52 45 51 
24194     46 52 45 51 
24198     46 52 45 51 
2419c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241a0     46 52 45 51 
241a4     46 52 45 51 
241a8     46 52 45 51 
241ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241b0     46 52 45 51 
241b4     46 52 45 51 
241b8     46 52 45 51 
241bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241c0     46 52 45 51 
241c4     46 52 45 51 
241c8     46 52 45 51 
241cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241d0     46 52 45 51 
241d4     46 52 45 51 
241d8     46 52 45 51 
241dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241e0     46 52 45 51 
241e4     46 52 45 51 
241e8     46 52 45 51 
241ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
241f0     46 52 45 51 
241f4     46 52 45 51 
241f8     46 52 45 51 
241fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24200     46 52 45 51 
24204     46 52 45 51 
24208     46 52 45 51 
2420c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24210     46 52 45 51 
24214     46 52 45 51 
24218     46 52 45 51 
2421c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24220     46 52 45 51 
24224     46 52 45 51 
24228     46 52 45 51 
2422c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24230     46 52 45 51 
24234     46 52 45 51 
24238     46 52 45 51 
2423c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24240     46 52 45 51 
24244     46 52 45 51 
24248     46 52 45 51 
2424c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24250     46 52 45 51 
24254     46 52 45 51 
24258     46 52 45 51 
2425c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24260     46 52 45 51 
24264     46 52 45 51 
24268     46 52 45 51 
2426c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24270     46 52 45 51 
24274     46 52 45 51 
24278     46 52 45 51 
2427c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24280     46 52 45 51 
24284     46 52 45 51 
24288     46 52 45 51 
2428c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24290     46 52 45 51 
24294     46 52 45 51 
24298     46 52 45 51 
2429c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242a0     46 52 45 51 
242a4     46 52 45 51 
242a8     46 52 45 51 
242ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242b0     46 52 45 51 
242b4     46 52 45 51 
242b8     46 52 45 51 
242bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242c0     46 52 45 51 
242c4     46 52 45 51 
242c8     46 52 45 51 
242cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242d0     46 52 45 51 
242d4     46 52 45 51 
242d8     46 52 45 51 
242dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242e0     46 52 45 51 
242e4     46 52 45 51 
242e8     46 52 45 51 
242ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
242f0     46 52 45 51 
242f4     46 52 45 51 
242f8     46 52 45 51 
242fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24300     46 52 45 51 
24304     46 52 45 51 
24308     46 52 45 51 
2430c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24310     46 52 45 51 
24314     46 52 45 51 
24318     46 52 45 51 
2431c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24320     46 52 45 51 
24324     46 52 45 51 
24328     46 52 45 51 
2432c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24330     46 52 45 51 
24334     46 52 45 51 
24338     46 52 45 51 
2433c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24340     46 52 45 51 
24344     46 52 45 51 
24348     46 52 45 51 
2434c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24350     46 52 45 51 
24354     46 52 45 51 
24358     46 52 45 51 
2435c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24360     46 52 45 51 
24364     46 52 45 51 
24368     46 52 45 51 
2436c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24370     46 52 45 51 
24374     46 52 45 51 
24378     46 52 45 51 
2437c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24380     46 52 45 51 
24384     46 52 45 51 
24388     46 52 45 51 
2438c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24390     46 52 45 51 
24394     46 52 45 51 
24398     46 52 45 51 
2439c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243a0     46 52 45 51 
243a4     46 52 45 51 
243a8     46 52 45 51 
243ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243b0     46 52 45 51 
243b4     46 52 45 51 
243b8     46 52 45 51 
243bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243c0     46 52 45 51 
243c4     46 52 45 51 
243c8     46 52 45 51 
243cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243d0     46 52 45 51 
243d4     46 52 45 51 
243d8     46 52 45 51 
243dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243e0     46 52 45 51 
243e4     46 52 45 51 
243e8     46 52 45 51 
243ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
243f0     46 52 45 51 
243f4     46 52 45 51 
243f8     46 52 45 51 
243fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24400     46 52 45 51 
24404     46 52 45 51 
24408     46 52 45 51 
2440c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24410     46 52 45 51 
24414     46 52 45 51 
24418     46 52 45 51 
2441c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24420     46 52 45 51 
24424     46 52 45 51 
24428     46 52 45 51 
2442c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24430     46 52 45 51 
24434     46 52 45 51 
24438     46 52 45 51 
2443c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24440     46 52 45 51 
24444     46 52 45 51 
24448     46 52 45 51 
2444c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24450     46 52 45 51 
24454     46 52 45 51 
24458     46 52 45 51 
2445c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24460     46 52 45 51 
24464     46 52 45 51 
24468     46 52 45 51 
2446c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24470     46 52 45 51 
24474     46 52 45 51 
24478     46 52 45 51 
2447c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24480     46 52 45 51 
24484     46 52 45 51 
24488     46 52 45 51 
2448c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24490     46 52 45 51 
24494     46 52 45 51 
24498     46 52 45 51 
2449c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244a0     46 52 45 51 
244a4     46 52 45 51 
244a8     46 52 45 51 
244ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244b0     46 52 45 51 
244b4     46 52 45 51 
244b8     46 52 45 51 
244bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244c0     46 52 45 51 
244c4     46 52 45 51 
244c8     46 52 45 51 
244cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244d0     46 52 45 51 
244d4     46 52 45 51 
244d8     46 52 45 51 
244dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244e0     46 52 45 51 
244e4     46 52 45 51 
244e8     46 52 45 51 
244ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
244f0     46 52 45 51 
244f4     46 52 45 51 
244f8     46 52 45 51 
244fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24500     46 52 45 51 
24504     46 52 45 51 
24508     46 52 45 51 
2450c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24510     46 52 45 51 
24514     46 52 45 51 
24518     46 52 45 51 
2451c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24520     46 52 45 51 
24524     46 52 45 51 
24528     46 52 45 51 
2452c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24530     46 52 45 51 
24534     46 52 45 51 
24538     46 52 45 51 
2453c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24540     46 52 45 51 
24544     46 52 45 51 
24548     46 52 45 51 
2454c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24550     46 52 45 51 
24554     46 52 45 51 
24558     46 52 45 51 
2455c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24560     46 52 45 51 
24564     46 52 45 51 
24568     46 52 45 51 
2456c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24570     46 52 45 51 
24574     46 52 45 51 
24578     46 52 45 51 
2457c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24580     46 52 45 51 
24584     46 52 45 51 
24588     46 52 45 51 
2458c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24590     46 52 45 51 
24594     46 52 45 51 
24598     46 52 45 51 
2459c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245a0     46 52 45 51 
245a4     46 52 45 51 
245a8     46 52 45 51 
245ac     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245b0     46 52 45 51 
245b4     46 52 45 51 
245b8     46 52 45 51 
245bc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245c0     46 52 45 51 
245c4     46 52 45 51 
245c8     46 52 45 51 
245cc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245d0     46 52 45 51 
245d4     46 52 45 51 
245d8     46 52 45 51 
245dc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245e0     46 52 45 51 
245e4     46 52 45 51 
245e8     46 52 45 51 
245ec     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
245f0     46 52 45 51 
245f4     46 52 45 51 
245f8     46 52 45 51 
245fc     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24600     46 52 45 51 
24604     46 52 45 51 
24608     46 52 45 51 
2460c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24610     46 52 45 51 
24614     46 52 45 51 
24618     46 52 45 51 
2461c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24620     46 52 45 51 
24624     46 52 45 51 
24628     46 52 45 51 
2462c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24630     46 52 45 51 
24634     46 52 45 51 
24638     46 52 45 51 
2463c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24640     46 52 45 51 
24644     46 52 45 51 
24648     46 52 45 51 
2464c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24650     46 52 45 51 
24654     46 52 45 51 
24658     46 52 45 51 
2465c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24660     46 52 45 51 
24664     46 52 45 51 
24668     46 52 45 51 
2466c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24670     46 52 45 51 
24674     46 52 45 51 
24678     46 52 45 51 
2467c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24680     46 52 45 51 
24684     46 52 45 51 
24688     46 52 45 51 
2468c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
24690     46 52 45 51 
24694     46 52 45 51 
24698     46 52 45 51 
2469c     46 52 45 51 | 	byte	$46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51, $46, $52, $45, $51
246a0                 | 
246a0     00 00 00 00 
246a4     18 00 00 00 
246a8     31 00 00 00 
246ac     4A 00 00 00 | vibratoWaveform  long  0,    24,   49,   74,   97,   120,  141,  161
246b0     61 00 00 00 
246b4     78 00 00 00 
246b8     8D 00 00 00 
246bc     A1 00 00 00 | 	byte	$61, $00, $00, $00, $78, $00, $00, $00, $8d, $00, $00, $00, $a1, $00, $00, $00
246c0     B4 00 00 00 
246c4     C5 00 00 00 
246c8     D4 00 00 00 
246cc     E0 00 00 00 |                  long  180,  197,  212,  224,  235,  244,  250,  253
246d0     EB 00 00 00 
246d4     F4 00 00 00 
246d8     FA 00 00 00 
246dc     FD 00 00 00 | 	byte	$eb, $00, $00, $00, $f4, $00, $00, $00, $fa, $00, $00, $00, $fd, $00, $00, $00
246e0     FF 00 00 00 
246e4     FD 00 00 00 
246e8     FA 00 00 00 
246ec     F4 00 00 00 |                  long  255,  253,  250,  244,  235,  224,  212,  197
246f0     EB 00 00 00 
246f4     E0 00 00 00 
246f8     D4 00 00 00 
246fc     C5 00 00 00 | 	byte	$eb, $00, $00, $00, $e0, $00, $00, $00, $d4, $00, $00, $00, $c5, $00, $00, $00
24700     B4 00 00 00 
24704     A1 00 00 00 
24708     8D 00 00 00 
2470c     78 00 00 00 |                  long  180,  161,  141,  120,  97,   74,   49,   24
24710     61 00 00 00 
24714     4A 00 00 00 
24718     31 00 00 00 
2471c     18 00 00 00 | 	byte	$61, $00, $00, $00, $4a, $00, $00, $00, $31, $00, $00, $00, $18, $00, $00, $00
24720     00 00 00 00 
24724     E8 FF FF FF 
24728     CF FF FF FF 
2472c     B6 FF FF FF |                  long  0,   -24,  -49,  -74,  -97,  -120, -141, -161
24730     9F FF FF FF 
24734     88 FF FF FF 
24738     73 FF FF FF 
2473c     5F FF FF FF | 	byte	$9f, $ff, $ff, $ff, $88, $ff, $ff, $ff, $73, $ff, $ff, $ff, $5f, $ff, $ff, $ff
24740     4C FF FF FF 
24744     3B FF FF FF 
24748     2C FF FF FF 
2474c     20 FF FF FF |                  long -180, -197, -212, -224, -235, -244, -250, -253
24750     15 FF FF FF 
24754     0C FF FF FF 
24758     06 FF FF FF 
2475c     03 FF FF FF | 	byte	$15, $ff, $ff, $ff, $0c, $ff, $ff, $ff, $06, $ff, $ff, $ff, $03, $ff, $ff, $ff
24760     01 FF FF FF 
24764     03 FF FF FF 
24768     06 FF FF FF 
2476c     0C FF FF FF |                  long -255, -253, -250, -244, -235, -224, -212, -197
24770     15 FF FF FF 
24774     20 FF FF FF 
24778     2C FF FF FF 
2477c     3B FF FF FF | 	byte	$15, $ff, $ff, $ff, $20, $ff, $ff, $ff, $2c, $ff, $ff, $ff, $3b, $ff, $ff, $ff
24780     4C FF FF FF 
24784     5F FF FF FF 
24788     73 FF FF FF 
2478c     88 FF FF FF |                  long -180, -161, -141, -120, -97,  -74,  -49,  -24
24790     9F FF FF FF 
24794     B6 FF FF FF 
24798     CF FF FF FF 
2479c     E8 FF FF FF | 	byte	$9f, $ff, $ff, $ff, $b6, $ff, $ff, $ff, $cf, $ff, $ff, $ff, $e8, $ff, $ff, $ff
247a0                 | 
247a0     58 03 28 03 
247a4     FA 02 D0 02 
247a8     A6 02 80 02 
247ac     5C 02 3A 02 | periodTable      word  856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480 , 453 ' C1
247b0     1A 02 FC 01 
247b4     E0 01 C5 01 | 	byte	$1a, $02, $fc, $01, $e0, $01, $c5, $01
247b8     AC 01 94 01 
247bc     7D 01 68 01 
247c0     53 01 40 01 
247c4     2E 01 1D 01 |                  word  428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240 , 226 ' C2
247c8     0D 01 FE 00 
247cc     F0 00 E2 00 | 	byte	$0d, $01, $fe, $00, $f0, $00, $e2, $00
247d0     D6 00 CA 00 
247d4     BE 00 B4 00 
247d8     AA 00 A0 00 
247dc     97 00 8F 00 |                  word  214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120 , 113 ' C3
247e0     87 00 7F 00 
247e4     78 00 71 00 | 	byte	$87, $00, $7f, $00, $78, $00, $71, $00
247e8     52 03 22 03 
247ec     F5 02 CB 02 
247f0     A2 02 7D 02 
247f4     59 02 37 02 |                  word  850 , 802 , 757 , 715 , 674 , 637 , 601 , 567 , 535 , 505 , 477 , 450
247f8     17 02 F9 01 
247fc     DD 01 C2 01 | 	byte	$17, $02, $f9, $01, $dd, $01, $c2, $01
24800     A9 01 91 01 
24804     7B 01 65 01 
24808     51 01 3E 01 
2480c     2C 01 1C 01 |                  word  425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 239 , 225
24810     0C 01 FD 00 
24814     EF 00 E1 00 | 	byte	$0c, $01, $fd, $00, $ef, $00, $e1, $00
24818     D5 00 C9 00 
2481c     BD 00 B3 00 
24820     A9 00 9F 00 
24824     96 00 8E 00 |                  word  213 , 201 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119 , 113
24828     86 00 7E 00 
2482c     77 00 71 00 | 	byte	$86, $00, $7e, $00, $77, $00, $71, $00
24830     4C 03 1C 03 
24834     F0 02 C5 02 
24838     9E 02 78 02 
2483c     55 02 33 02 |                  word  844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474 , 447
24840     14 02 F6 01 
24844     DA 01 BF 01 | 	byte	$14, $02, $f6, $01, $da, $01, $bf, $01
24848     A6 01 8E 01 
2484c     78 01 63 01 
24850     4F 01 3C 01 
24854     2A 01 1A 01 |                  word  422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237 , 224
24858     0A 01 FB 00 
2485c     ED 00 E0 00 | 	byte	$0a, $01, $fb, $00, $ed, $00, $e0, $00
24860     D3 00 C7 00 
24864     BC 00 B1 00 
24868     A7 00 9E 00 
2486c     95 00 8D 00 |                  word  211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118 , 112
24870     85 00 7D 00 
24874     76 00 70 00 | 	byte	$85, $00, $7d, $00, $76, $00, $70, $00
24878     46 03 17 03 
2487c     EA 02 C0 02 
24880     99 02 74 02 
24884     50 02 2F 02 |                  word  838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470 , 444
24888     10 02 F2 01 
2488c     D6 01 BC 01 | 	byte	$10, $02, $f2, $01, $d6, $01, $bc, $01
24890     A3 01 8B 01 
24894     75 01 60 01 
24898     4C 01 3A 01 
2489c     28 01 18 01 |                  word  419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235 , 222
248a0     08 01 F9 00 
248a4     EB 00 DE 00 | 	byte	$08, $01, $f9, $00, $eb, $00, $de, $00
248a8     D1 00 C6 00 
248ac     BB 00 B0 00 
248b0     A6 00 9D 00 
248b4     94 00 8C 00 |                  word  209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118 , 111
248b8     84 00 7D 00 
248bc     76 00 6F 00 | 	byte	$84, $00, $7d, $00, $76, $00, $6f, $00
248c0     40 03 11 03 
248c4     E5 02 BB 02 
248c8     94 02 6F 02 
248cc     4C 02 2B 02 |                  word  832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 495 , 467 , 441
248d0     0C 02 EF 01 
248d4     D3 01 B9 01 | 	byte	$0c, $02, $ef, $01, $d3, $01, $b9, $01
248d8     A0 01 88 01 
248dc     72 01 5E 01 
248e0     4A 01 38 01 
248e4     26 01 16 01 |                  word  416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233 , 220
248e8     06 01 F7 00 
248ec     E9 00 DC 00 | 	byte	$06, $01, $f7, $00, $e9, $00, $dc, $00
248f0     D0 00 C4 00 
248f4     B9 00 AF 00 
248f8     A5 00 9C 00 
248fc     93 00 8B 00 |                  word  208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 124 , 117 , 110
24900     83 00 7C 00 
24904     75 00 6E 00 | 	byte	$83, $00, $7c, $00, $75, $00, $6e, $00
24908     3A 03 0B 03 
2490c     E0 02 B6 02 
24910     8F 02 6B 02 
24914     48 02 27 02 |                  word  826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463 , 437
24918     08 02 EB 01 
2491c     CF 01 B5 01 | 	byte	$08, $02, $eb, $01, $cf, $01, $b5, $01
24920     9D 01 86 01 
24924     70 01 5B 01 
24928     48 01 35 01 
2492c     24 01 14 01 |                  word  413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232 , 219
24930     04 01 F5 00 
24934     E8 00 DB 00 | 	byte	$04, $01, $f5, $00, $e8, $00, $db, $00
24938     CE 00 C3 00 
2493c     B8 00 AE 00 
24940     A4 00 9B 00 
24944     92 00 8A 00 |                  word  206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116 , 109
24948     82 00 7B 00 
2494c     74 00 6D 00 | 	byte	$82, $00, $7b, $00, $74, $00, $6d, $00
24950     34 03 06 03 
24954     DA 02 B1 02 
24958     8B 02 66 02 
2495c     44 02 23 02 |                  word  820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460 , 434
24960     04 02 E7 01 
24964     CC 01 B2 01 | 	byte	$04, $02, $e7, $01, $cc, $01, $b2, $01
24968     9A 01 83 01 
2496c     6D 01 59 01 
24970     45 01 33 01 
24974     22 01 12 01 |                  word  410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230 , 217
24978     02 01 F4 00 
2497c     E6 00 D9 00 | 	byte	$02, $01, $f4, $00, $e6, $00, $d9, $00
24980     CD 00 C1 00 
24984     B7 00 AC 00 
24988     A3 00 9A 00 
2498c     91 00 89 00 |                  word  205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115 , 109
24990     81 00 7A 00 
24994     73 00 6D 00 | 	byte	$81, $00, $7a, $00, $73, $00, $6d, $00
24998     2E 03 00 03 
2499c     D5 02 AC 02 
249a0     86 02 62 02 
249a4     3F 02 1F 02 |                  word  814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457 , 431
249a8     01 02 E4 01 
249ac     C9 01 AF 01 | 	byte	$01, $02, $e4, $01, $c9, $01, $af, $01
249b0     97 01 80 01 
249b4     6B 01 56 01 
249b8     43 01 31 01 
249bc     20 01 10 01 |                  word  407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228 , 216
249c0     00 01 F2 00 
249c4     E4 00 D8 00 | 	byte	$00, $01, $f2, $00, $e4, $00, $d8, $00
249c8     CC 00 C0 00 
249cc     B5 00 AB 00 
249d0     A1 00 98 00 
249d4     90 00 88 00 |                  word  204 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114 , 108
249d8     80 00 79 00 
249dc     72 00 6C 00 | 	byte	$80, $00, $79, $00, $72, $00, $6c, $00
249e0     8B 03 58 03 
249e4     28 03 FA 02 
249e8     D0 02 A6 02 
249ec     80 02 5C 02 |                  word  907 , 856 , 808 , 762 , 720 , 678 , 640 , 604 , 570 , 538 , 508 , 480
249f0     3A 02 1A 02 
249f4     FC 01 E0 01 | 	byte	$3a, $02, $1a, $02, $fc, $01, $e0, $01
249f8     C5 01 AC 01 
249fc     94 01 7D 01 
24a00     68 01 53 01 
24a04     40 01 2E 01 |                  word  453 , 428 , 404 , 381 , 360 , 339 , 320 , 302 , 285 , 269 , 254 , 240
24a08     1D 01 0D 01 
24a0c     FE 00 F0 00 | 	byte	$1d, $01, $0d, $01, $fe, $00, $f0, $00
24a10     E2 00 D6 00 
24a14     CA 00 BE 00 
24a18     B4 00 AA 00 
24a1c     A0 00 97 00 |                  word  226 , 214 , 202 , 190 , 180 , 170 , 160 , 151 , 143 , 135 , 127 , 120
24a20     8F 00 87 00 
24a24     7F 00 78 00 | 	byte	$8f, $00, $87, $00, $7f, $00, $78, $00
24a28     84 03 52 03 
24a2c     22 03 F5 02 
24a30     CB 02 A3 02 
24a34     7C 02 59 02 |                  word  900 , 850 , 802 , 757 , 715 , 675 , 636 , 601 , 567 , 535 , 505 , 477
24a38     37 02 17 02 
24a3c     F9 01 DD 01 | 	byte	$37, $02, $17, $02, $f9, $01, $dd, $01
24a40     C2 01 A9 01 
24a44     91 01 7B 01 
24a48     65 01 51 01 
24a4c     3E 01 2C 01 |                  word  450 , 425 , 401 , 379 , 357 , 337 , 318 , 300 , 284 , 268 , 253 , 238
24a50     1C 01 0C 01 
24a54     FD 00 EE 00 | 	byte	$1c, $01, $0c, $01, $fd, $00, $ee, $00
24a58     E1 00 D4 00 
24a5c     C8 00 BD 00 
24a60     B3 00 A9 00 
24a64     9F 00 96 00 |                  word  225 , 212 , 200 , 189 , 179 , 169 , 159 , 150 , 142 , 134 , 126 , 119
24a68     8E 00 86 00 
24a6c     7E 00 77 00 | 	byte	$8e, $00, $86, $00, $7e, $00, $77, $00
24a70     7E 03 4C 03 
24a74     1C 03 F0 02 
24a78     C5 02 9E 02 
24a7c     78 02 55 02 |                  word  894 , 844 , 796 , 752 , 709 , 670 , 632 , 597 , 563 , 532 , 502 , 474
24a80     33 02 14 02 
24a84     F6 01 DA 01 | 	byte	$33, $02, $14, $02, $f6, $01, $da, $01
24a88     BF 01 A6 01 
24a8c     8E 01 78 01 
24a90     63 01 4F 01 
24a94     3C 01 2A 01 |                  word  447 , 422 , 398 , 376 , 355 , 335 , 316 , 298 , 282 , 266 , 251 , 237
24a98     1A 01 0A 01 
24a9c     FB 00 ED 00 | 	byte	$1a, $01, $0a, $01, $fb, $00, $ed, $00
24aa0     DF 00 D3 00 
24aa4     C7 00 BC 00 
24aa8     B1 00 A7 00 
24aac     9E 00 95 00 |                  word  223 , 211 , 199 , 188 , 177 , 167 , 158 , 149 , 141 , 133 , 125 , 118
24ab0     8D 00 85 00 
24ab4     7D 00 76 00 | 	byte	$8d, $00, $85, $00, $7d, $00, $76, $00
24ab8     77 03 46 03 
24abc     17 03 EA 02 
24ac0     C0 02 99 02 
24ac4     74 02 50 02 |                  word  887 , 838 , 791 , 746 , 704 , 665 , 628 , 592 , 559 , 528 , 498 , 470
24ac8     2F 02 10 02 
24acc     F2 01 D6 01 | 	byte	$2f, $02, $10, $02, $f2, $01, $d6, $01
24ad0     BC 01 A3 01 
24ad4     8B 01 75 01 
24ad8     60 01 4C 01 
24adc     3A 01 28 01 |                  word  444 , 419 , 395 , 373 , 352 , 332 , 314 , 296 , 280 , 264 , 249 , 235
24ae0     18 01 08 01 
24ae4     F9 00 EB 00 | 	byte	$18, $01, $08, $01, $f9, $00, $eb, $00
24ae8     DE 00 D1 00 
24aec     C6 00 BB 00 
24af0     B0 00 A6 00 
24af4     9D 00 94 00 |                  word  222 , 209 , 198 , 187 , 176 , 166 , 157 , 148 , 140 , 132 , 125 , 118
24af8     8C 00 84 00 
24afc     7D 00 76 00 | 	byte	$8c, $00, $84, $00, $7d, $00, $76, $00
24b00     71 03 40 03 
24b04     11 03 E5 02 
24b08     BB 02 94 02 
24b0c     6F 02 4C 02 |                  word  881 , 832 , 785 , 741 , 699 , 660 , 623 , 588 , 555 , 524 , 494 , 467
24b10     2B 02 0C 02 
24b14     EE 01 D3 01 | 	byte	$2b, $02, $0c, $02, $ee, $01, $d3, $01
24b18     B9 01 A0 01 
24b1c     88 01 72 01 
24b20     5E 01 4A 01 
24b24     38 01 26 01 |                  word  441 , 416 , 392 , 370 , 350 , 330 , 312 , 294 , 278 , 262 , 247 , 233
24b28     16 01 06 01 
24b2c     F7 00 E9 00 | 	byte	$16, $01, $06, $01, $f7, $00, $e9, $00
24b30     DC 00 D0 00 
24b34     C4 00 B9 00 
24b38     AF 00 A5 00 
24b3c     9C 00 93 00 |                  word  220 , 208 , 196 , 185 , 175 , 165 , 156 , 147 , 139 , 131 , 123 , 117
24b40     8B 00 83 00 
24b44     7B 00 75 00 | 	byte	$8b, $00, $83, $00, $7b, $00, $75, $00
24b48     6B 03 3A 03 
24b4c     0B 03 E0 02 
24b50     B6 02 8F 02 
24b54     6B 02 48 02 |                  word  875 , 826 , 779 , 736 , 694 , 655 , 619 , 584 , 551 , 520 , 491 , 463
24b58     27 02 08 02 
24b5c     EB 01 CF 01 | 	byte	$27, $02, $08, $02, $eb, $01, $cf, $01
24b60     B5 01 9D 01 
24b64     86 01 70 01 
24b68     5B 01 48 01 
24b6c     35 01 24 01 |                  word  437 , 413 , 390 , 368 , 347 , 328 , 309 , 292 , 276 , 260 , 245 , 232
24b70     14 01 04 01 
24b74     F5 00 E8 00 | 	byte	$14, $01, $04, $01, $f5, $00, $e8, $00
24b78     DB 00 CE 00 
24b7c     C3 00 B8 00 
24b80     AE 00 A4 00 
24b84     9B 00 92 00 |                  word  219 , 206 , 195 , 184 , 174 , 164 , 155 , 146 , 138 , 130 , 123 , 116
24b88     8A 00 82 00 
24b8c     7B 00 74 00 | 	byte	$8a, $00, $82, $00, $7b, $00, $74, $00
24b90     64 03 34 03 
24b94     06 03 DA 02 
24b98     B1 02 8B 02 
24b9c     66 02 44 02 |                  word  868 , 820 , 774 , 730 , 689 , 651 , 614 , 580 , 547 , 516 , 487 , 460
24ba0     23 02 04 02 
24ba4     E7 01 CC 01 | 	byte	$23, $02, $04, $02, $e7, $01, $cc, $01
24ba8     B2 01 9A 01 
24bac     83 01 6D 01 
24bb0     59 01 45 01 
24bb4     33 01 22 01 |                  word  434 , 410 , 387 , 365 , 345 , 325 , 307 , 290 , 274 , 258 , 244 , 230
24bb8     12 01 02 01 
24bbc     F4 00 E6 00 | 	byte	$12, $01, $02, $01, $f4, $00, $e6, $00
24bc0     D9 00 CD 00 
24bc4     C1 00 B7 00 
24bc8     AC 00 A3 00 
24bcc     9A 00 91 00 |                  word  217 , 205 , 193 , 183 , 172 , 163 , 154 , 145 , 137 , 129 , 122 , 115
24bd0     89 00 81 00 
24bd4     7A 00 73 00 | 	byte	$89, $00, $81, $00, $7a, $00, $73, $00
24bd8     5E 03 2E 03 
24bdc     00 03 D5 02 
24be0     AC 02 86 02 
24be4     62 02 3F 02 |                  word  862 , 814 , 768 , 725 , 684 , 646 , 610 , 575 , 543 , 513 , 484 , 457
24be8     1F 02 01 02 
24bec     E4 01 C9 01 | 	byte	$1f, $02, $01, $02, $e4, $01, $c9, $01
24bf0     AF 01 97 01 
24bf4     80 01 6B 01 
24bf8     56 01 43 01 
24bfc     31 01 20 01 |                  word  431 , 407 , 384 , 363 , 342 , 323 , 305 , 288 , 272 , 256 , 242 , 228
24c00     10 01 00 01 
24c04     F2 00 E4 00 | 	byte	$10, $01, $00, $01, $f2, $00, $e4, $00
24c08     D8 00 CB 00 
24c0c     C0 00 B5 00 
24c10     AB 00 A1 00 
24c14     98 00 90 00 |                  word  216 , 203 , 192 , 181 , 171 , 161 , 152 , 144 , 136 , 128 , 121 , 114
24c18     88 00 80 00 
24c1c     79 00 72 00 | 	byte	$88, $00, $80, $00, $79, $00, $72, $00
24c20                 | 	alignl
24c20                 | _audio012_spin2_dat_
24c20                 | 
24c20                 | audio       org     0
24c20     00 F2 07 F6 | 			mov ptrb,#0
24c24     0E 70 07 FC |             wrpin   dac,#left       ' Noise dither DACs at clk/90
24c28     0E C8 1C FC |             wxpin   #100,#left
24c2c                 | 
24c2c     0F 70 07 FC |             wrpin   dac,#right
24c30     0F C8 1C FC |             wxpin   #100,#right
24c34                 | 
24c34     41 9C 64 FD |             dirh    #left addpins 1
24c38                 | 
24c38     20 9C 64 FD |             setse1  #%001<<6 + left ' Set the event - DAC empty
24c3c     2E E9 07 F6 |             mov     ijmp1,#isr1     ' Init the interrupt
24c40     25 08 64 FD |             setint1 #4              ' Interrupt from DAC empty event
24c44                 |             
24c44                 | '---------------------------------------------------------------------------------        
24c44                 | '----------------- The main loop -------------------------------------------------
24c44                 | '---------------------------------------------------------------------------------
24c44                 | 
24c44     28 10 64 FD | loop        setq    #8              ' Read channel regs from the hub
24c48     61 A3 06 FB |             rdlong  sstart1,ptra++
24c4c     28 10 64 FD |             setq    #8              ' Cannot do one big setq+rdlong as it interferes with interrupts
24c50     61 B5 06 FB |             rdlong  sstart2,ptra++
24c54     28 10 64 FD |             setq    #8
24c58     61 C7 06 FB |             rdlong  sstart3,ptra++
24c5c     28 10 64 FD |             setq    #8
24c60     61 D9 06 FB |             rdlong  sstart4,ptra++
24c64     28 10 64 FD |             setq    #8
24c68     61 EB 06 FB |             rdlong  sstart5,ptra++
24c6c     28 10 64 FD |             setq    #8
24c70     61 FD 06 FB |             rdlong  sstart6,ptra++
24c74     28 10 64 FD |             setq    #8
24c78     61 0F 07 FB |             rdlong  sstart7,ptra++
24c7c     28 10 64 FD |             setq    #8
24c80     61 21 07 FB |             rdlong  sstart8,ptra++
24c84                 | 
24c84     20 F1 87 F1 |             sub     ptra,#9*4*8    
24c88                 |             
24c88     3A 35 13 F2 |             cmp     time1,a1FFFFFFF wc   ' Main counter overflow workaround
24c8c     3A 37 13 32 |      if_nc  cmp     time2,a1FFFFFFF wc   ' before the time is written to the buffer, it is ANDed with $1FFFFFFF  
24c90     3A 39 13 32 |      if_nc  cmp     time3,a1FFFFFFF wc   ' Also, the interrupt procedure ands the counter  
24c94     3A 3B 13 32 |      if_nc  cmp     time4,a1FFFFFFF wc   ' So, if the counter is >=$20000000, the compare sequence still works  
24c98     3A 3D 13 32 |      if_nc  cmp     time5,a1FFFFFFF wc   ' and when all counters are >=$20000000, all of them are SUBed at the same time 
24c9c     3A 3F 13 32 |      if_nc  cmp     time6,a1FFFFFFF wc   ' including time0 main counter  
24ca0     3A 41 13 32 |      if_nc  cmp     time7,a1FFFFFFF wc     
24ca4     3A 43 13 32 |      if_nc  cmp     time8,a1FFFFFFF wc   ' was 7FFFFFFF - reduced to make debugging easier 
24ca8     3B 35 83 31 |      if_nc  sub     time1,a20000000
24cac     3B 37 83 31 |      if_nc  sub     time2,a20000000
24cb0     3B 39 83 31 |      if_nc  sub     time3,a20000000
24cb4     3B 3B 83 31 |      if_nc  sub     time4,a20000000
24cb8     3B 3D 83 31 |      if_nc  sub     time5,a20000000
24cbc     3B 3F 83 31 |      if_nc  sub     time6,a20000000
24cc0     3B 41 83 31 |      if_nc  sub     time7,a20000000
24cc4     3B 43 83 31 |      if_nc  sub     time8,a20000000
24cc8     3B 33 83 31 |      if_nc  sub     time0,a20000000
24ccc                 | 
24ccc                 |        
24ccc                 |     
24ccc     00 B2 0E F2 |             cmp     acmd1,#0 wz     ' if cmd=0, zero the phase accumulator
24cd0     00 80 06 A6 |     if_e    mov     p1,#0
24cd4     00 C4 0E F2 |             cmp     acmd2,#0 wz
24cd8     00 82 06 A6 |     if_e    mov     p2,#0
24cdc     00 D6 0E F2 |             cmp     acmd3,#0 wz
24ce0     00 84 06 A6 |     if_e    mov     p3,#0
24ce4     00 E8 0E F2 |             cmp     acmd4,#0 wz
24ce8     00 86 06 A6 |     if_e    mov     p4,#0
24cec     00 FA 0E F2 |             cmp     acmd5,#0 wz
24cf0     00 88 06 A6 |     if_e    mov     p5,#0
24cf4     00 0C 0F F2 |             cmp     acmd6,#0 wz
24cf8     00 8A 06 A6 |     if_e    mov     p6,#0
24cfc     00 1E 0F F2 |             cmp     acmd7,#0 wz
24d00     00 8C 06 A6 |     if_e    mov     p7,#0
24d04     00 30 0F F2 |             cmp     acmd8,#0 wz
24d08     00 8E 06 A6 |     if_e    mov     p8,#0
24d0c                 |           
24d0c     F9 91 02 F6 |             mov     qq,ptrb         ' Check if the buffer is full	
24d10     02 90 86 F1 |             sub     qq,#2
24d14     FF 91 06 F5 |             and     qq,#511
24d18     4A 91 1A F2 |             cmp     qq,front wcz
24d1c     24 FF 9F AD |     if_e    jmp     #loop           ' If the buffer is full, do nothing               
24d20                 |       
24d20     51 46 07 F6 |             mov     cn,#p201           ' Find the channel to compute
24d24     9A 49 03 F6 |             mov     ct,time1        ' with the lowest next sample time
24d28     9B 49 3B F3 |             fle     ct,time2 wcz   
24d2c     68 46 07 C6 |     if_c    mov     cn,#p202 
24d30     9C 49 3B F3 |             fle     ct,time3 wcz
24d34     7F 46 07 C6 |     if_c    mov     cn,#p203     
24d38     9D 49 3B F3 |             fle     ct,time4 wcz
24d3c     96 46 07 C6 |     if_c    mov     cn,#p204
24d40     9E 49 3B F3 |             fle     ct,time5 wcz
24d44     AD 46 07 C6 |     if_c    mov     cn,#p205 
24d48     9F 49 3B F3 |             fle     ct,time6 wcz
24d4c     C4 46 07 C6 |     if_c    mov     cn,#p206
24d50     A0 49 3B F3 |             fle     ct,time7 wcz
24d54     DB 46 07 C6 |     if_c    mov     cn,#p207
24d58     A1 49 3B F3 |             fle     ct,time8 wcz
24d5c     F2 46 07 C6 |     if_c    mov     cn,#p208 
24d60                 |  
24d60     2C 46 63 FD |             jmp     cn
24d64                 |    
24d64                 | '----------------------------------------------------------------------------------
24d64                 | '------------- Compute channel samples --------------------------------------------
24d64                 | '----------------------------------------------------------------------------------
24d64                 | 	
24d64                 | ' ------------  Channel 1
24d64                 |  
24d64     9A 4B 03 F6 | p201        mov     dt0,time1      ' compute the delta to add to the global time
24d68     99 4B 83 F1 |             sub     dt0,time0
24d6c     57 35 03 F1 |             add     time1,freq1    ' compute the next channel time	
24d70                 | 	        
24d70     58 81 02 F1 |             add     p1,askip1      ' update the phase accumulator
24d74     54 81 1A F2 |             cmp     p1,lend1 wcz   ' substract the loop length if over the loop end
24d78     54 81 82 31 |     if_ge   sub     p1,lend1	        
24d7c     53 81 02 31 |     if_ge   add     p1,lstart1       
24d80     40 91 02 F6 |             mov     qq,p1          ' compute the pointer to the next sample
24d84     51 91 02 F1 |             add     qq,sstart1
24d88                 |             
24d88     00 A4 0E F2 |             cmp     type1,#0 wz    ' check the sample type
24d8c     48 93 C2 5A |     if_nz   rdbyte  spl,qq         ' not zero=8 bit
24d90     08 92 66 50 |     if_nz   shl     spl,#8
24d94     48 93 E2 AA |     if_z    rdword  spl,qq         ' zero=16 bit. TODO: more types? signed/unsigned, etc... 
24d98                 | 
24d98     55 93 32 FA |             scas    spl,vol1       ' apply the volume
24d9c     00 92 02 F6 |             mov     spl,0-0
24da0                 | 
24da0     56 93 32 FA |             scas    spl,apan1      ' apply the pan
24da4     00 50 03 F6 |             mov     ls1,0-0
24da8     20 00 00 FF 
24dac     00 90 06 F6 |             mov     qq,##16384
24db0     56 91 82 F1 |             sub     qq,apan1
24db4     48 93 32 FA |             scas    spl,qq
24db8     00 52 03 F6 |             mov     rs1,0-0
24dbc                 |             
24dbc     84 02 90 FD |             jmp     #p101              
24dc0                 | 	    	
24dc0                 | ' ------------  Channel 2
24dc0                 |  
24dc0     9B 4B 03 F6 | p202        mov     dt0,time2
24dc4     99 4B 83 F1 |             sub     dt0,time0
24dc8     60 37 03 F1 |             add     time2,freq2  	
24dcc                 | 	        
24dcc     61 83 02 F1 |             add     p2,askip2
24dd0     5D 83 1A F2 |             cmp     p2,lend2 wcz
24dd4     5D 83 82 31 |     if_ge   sub     p2,lend2	        
24dd8     5C 83 02 31 |     if_ge   add     p2,lstart2       
24ddc     41 91 02 F6 |             mov     qq,p2
24de0     5A 91 02 F1 |             add     qq,sstart2
24de4                 | 
24de4     00 B6 0E F2 |             cmp     type2,#0 wz
24de8     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24dec     08 92 66 50 |     if_nz   shl     spl,#8
24df0     48 93 E2 AA |     if_z    rdword  spl,qq
24df4                 | 
24df4     5E 93 32 FA |             scas    spl,vol2
24df8     00 92 02 F6 |             mov     spl,0-0
24dfc                 |             
24dfc     5F 93 32 FA |             scas    spl,apan2
24e00     00 54 03 F6 |             mov     ls2,0-0
24e04     20 00 00 FF 
24e08     00 90 06 F6 |             mov     qq,##16384
24e0c     5F 91 82 F1 |             sub     qq,apan2
24e10     48 93 32 FA |             scas    spl,qq
24e14     00 56 03 F6 |             mov     rs2,0-0
24e18                 |             
24e18     28 02 90 FD |             jmp     #p101
24e1c                 | 
24e1c                 | ' ------------  Channel 3
24e1c                 |  
24e1c     9C 4B 03 F6 | p203        mov     dt0,time3
24e20     99 4B 83 F1 |             sub     dt0,time0
24e24     69 39 03 F1 |             add     time3,freq3  	
24e28                 | 	        
24e28     6A 85 02 F1 |             add     p3,askip3
24e2c     66 85 1A F2 |             cmp     p3,lend3 wcz
24e30     66 85 82 31 |     if_ge   sub     p3,lend3	        
24e34     65 85 02 31 |     if_ge   add     p3,lstart3       
24e38     42 91 02 F6 |             mov     qq,p3
24e3c     63 91 02 F1 |             add     qq,sstart3
24e40                 |             
24e40     00 C8 0E F2 |             cmp     type3,#0 wz
24e44     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24e48     08 92 66 50 |     if_nz   shl     spl,#8
24e4c     48 93 E2 AA |     if_z    rdword  spl,qq
24e50                 | 
24e50     67 93 32 FA |             scas    spl,vol3
24e54     00 92 02 F6 |             mov     spl,0-0
24e58                 |     	
24e58     68 93 32 FA |             scas    spl,apan3
24e5c     00 58 03 F6 |             mov     ls3,0-0
24e60                 |             
24e60     20 00 00 FF 
24e64     00 90 06 F6 |             mov     qq,##16384
24e68     68 91 82 F1 |             sub     qq,apan3
24e6c     48 93 32 FA |             scas    spl,qq
24e70     00 5A 03 F6 |             mov     rs3,0-0
24e74                 | 
24e74     CC 01 90 FD |             jmp     #p101
24e78                 |             
24e78                 | ' ------------  Channel 4
24e78                 |  
24e78     9D 4B 03 F6 | p204        mov     dt0,time4
24e7c     99 4B 83 F1 |             sub     dt0,time0
24e80     72 3B 03 F1 |             add     time4,freq4  	
24e84                 | 
24e84                 | 	        
24e84     73 87 02 F1 |             add     p4,askip4
24e88     6F 87 1A F2 |             cmp     p4,lend4 wcz
24e8c     6F 87 82 31 |     if_ge   sub     p4,lend4	        
24e90     6E 87 02 31 |     if_ge   add     p4,lstart4       
24e94     43 91 02 F6 |             mov     qq,p4
24e98     6C 91 02 F1 |             add     qq,sstart4
24e9c                 |             
24e9c     00 DA 0E F2 |             cmp     type4,#0 wz
24ea0     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24ea4     08 92 66 50 |     if_nz   shl     spl,#8
24ea8     48 93 E2 AA |     if_z    rdword  spl,qq
24eac                 | 
24eac     70 93 32 FA |             scas    spl,vol4
24eb0     00 92 02 F6 |             mov     spl,0-0
24eb4                 |     	
24eb4     71 93 32 FA |             scas    spl,apan4
24eb8     00 5E 03 F6 |             mov     ls4,0-0
24ebc                 |             
24ebc     20 00 00 FF 
24ec0     00 90 06 F6 |             mov     qq,##16384
24ec4     71 91 82 F1 |             sub     qq,apan4
24ec8     48 93 32 FA |             scas    spl,qq
24ecc     00 5C 03 F6 |             mov     rs4,0-0
24ed0                 | 
24ed0     70 01 90 FD |             jmp     #p101
24ed4                 |             
24ed4                 | ' ------------  Channel 5
24ed4                 |  
24ed4     9E 4B 03 F6 | p205        mov     dt0,time5
24ed8     99 4B 83 F1 |             sub     dt0,time0
24edc     7B 3D 03 F1 |             add     time5,freq5  	
24ee0                 | 
24ee0                 | 	        
24ee0     7C 89 02 F1 |             add     p5,askip5
24ee4     78 89 1A F2 |             cmp     p5,lend5 wcz
24ee8     78 89 82 31 |     if_ge   sub     p5,lend5	        
24eec     77 89 02 31 |     if_ge   add     p5,lstart5       
24ef0     44 91 02 F6 |             mov     qq,p5
24ef4     75 91 02 F1 |             add     qq,sstart5
24ef8                 |             
24ef8     00 EC 0E F2 |             cmp     type5,#0 wz
24efc     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24f00     08 92 66 50 |     if_nz   shl     spl,#8
24f04     48 93 E2 AA |     if_z    rdword  spl,qq
24f08                 | 
24f08     79 93 32 FA |             scas    spl,vol5
24f0c     00 92 02 F6 |             mov     spl,0-0
24f10                 |     	
24f10     7A 93 32 FA |             scas    spl,apan5
24f14     00 62 03 F6 |             mov     ls5,0-0
24f18                 |             
24f18     20 00 00 FF 
24f1c     00 90 06 F6 |             mov     qq,##16384
24f20     7A 91 82 F1 |             sub     qq,apan5
24f24     48 93 32 FA |             scas    spl,qq
24f28     00 60 03 F6 |             mov     rs5,0-0
24f2c                 | 
24f2c     14 01 90 FD |             jmp     #p101
24f30                 |   
24f30                 | ' ------------  Channel 6
24f30                 |  
24f30     9F 4B 03 F6 | p206        mov     dt0,time6
24f34     99 4B 83 F1 |             sub     dt0,time0
24f38     84 3F 03 F1 |             add     time6,freq6  	
24f3c                 | 
24f3c                 | 	        
24f3c     85 8B 02 F1 |             add     p6,askip6
24f40     81 8B 1A F2 |             cmp     p6,lend6 wcz
24f44     81 8B 82 31 |     if_ge   sub     p6,lend6	        
24f48     80 8B 02 31 |     if_ge   add     p6,lstart6       
24f4c     45 91 02 F6 |             mov     qq,p6
24f50     7E 91 02 F1 |             add     qq,sstart6
24f54                 |             
24f54     00 FE 0E F2 |             cmp     type6,#0 wz
24f58     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24f5c     08 92 66 50 |     if_nz   shl     spl,#8
24f60     48 93 E2 AA |     if_z    rdword  spl,qq
24f64                 | 
24f64     82 93 32 FA |             scas    spl,vol6
24f68     00 92 02 F6 |             mov     spl,0-0
24f6c                 |     	
24f6c     83 93 32 FA |             scas    spl,apan6
24f70     00 66 03 F6 |             mov     ls6,0-0
24f74                 |             
24f74     20 00 00 FF 
24f78     00 90 06 F6 |             mov     qq,##16384
24f7c     83 91 82 F1 |             sub     qq,apan6
24f80     48 93 32 FA |             scas    spl,qq
24f84     00 64 03 F6 |             mov     rs6,0-0
24f88                 | 
24f88     B8 00 90 FD |             jmp     #p101
24f8c                 |             
24f8c                 | ' ------------  Channel 7
24f8c                 |  
24f8c     A0 4B 03 F6 | p207        mov     dt0,time7
24f90     99 4B 83 F1 |             sub     dt0,time0
24f94     8D 41 03 F1 |             add     time7,freq7  	
24f98                 | 
24f98                 | 	        
24f98     8E 8D 02 F1 |             add     p7,askip7
24f9c     8A 8D 1A F2 |             cmp     p7,lend7 wcz
24fa0     8A 8D 82 31 |     if_ge   sub     p7,lend7	        
24fa4     89 8D 02 31 |     if_ge   add     p7,lstart7       
24fa8     46 91 02 F6 |             mov     qq,p7
24fac     87 91 02 F1 |             add     qq,sstart7
24fb0                 |             
24fb0     00 10 0F F2 |             cmp     type7,#0 wz
24fb4     48 93 C2 5A |     if_nz   rdbyte  spl,qq
24fb8     08 92 66 50 |     if_nz   shl     spl,#8
24fbc     48 93 E2 AA |     if_z    rdword  spl,qq
24fc0                 | 
24fc0     8B 93 32 FA |             scas    spl,vol7
24fc4     00 92 02 F6 |             mov     spl,0-0
24fc8                 |     	
24fc8     8C 93 32 FA |             scas    spl,apan7
24fcc     00 6A 03 F6 |             mov     ls7,0-0
24fd0                 |             
24fd0     20 00 00 FF 
24fd4     00 90 06 F6 |             mov     qq,##16384
24fd8     8C 91 82 F1 |             sub     qq,apan7
24fdc     48 93 32 FA |             scas    spl,qq
24fe0     00 68 03 F6 |             mov     rs7,0-0
24fe4                 | 
24fe4     5C 00 90 FD |             jmp     #p101     
24fe8                 |                    
24fe8                 | ' ------------  Channel 8
24fe8                 |  
24fe8     A1 4B 03 F6 | p208        mov     dt0,time8
24fec     99 4B 83 F1 |             sub     dt0,time0
24ff0     96 43 03 F1 |             add     time8,freq8  	
24ff4                 | 
24ff4                 | 	        
24ff4     97 8F 02 F1 |             add     p8,askip8
24ff8     93 8F 1A F2 |             cmp     p8,lend8 wcz
24ffc     93 8F 82 31 |     if_ge   sub     p8,lend8	        
25000     92 8F 02 31 |     if_ge   add     p8,lstart8       
25004     47 91 02 F6 |             mov     qq,p8
25008     90 91 02 F1 |             add     qq,sstart8
2500c                 |             
2500c     00 22 0F F2 |             cmp     type8,#0 wz
25010     48 93 C2 5A |     if_nz   rdbyte  spl,qq
25014     08 92 66 50 |     if_nz   shl     spl,#8
25018     48 93 E2 AA |     if_z    rdword  spl,qq
2501c                 | 
2501c     94 93 32 FA |             scas    spl,vol8
25020     00 92 02 F6 |             mov     spl,0-0
25024                 |     	
25024     95 93 32 FA |             scas    spl,apan8
25028     00 6E 03 F6 |             mov     ls8,0-0
2502c                 |             
2502c     20 00 00 FF 
25030     00 90 06 F6 |             mov     qq,##16384
25034     95 91 82 F1 |             sub     qq,apan8
25038     48 93 32 FA |             scas    spl,qq
2503c     00 6C 03 F6 |             mov     rs8,0-0
25040                 | 
25040     00 00 90 FD |             jmp     #p101            
25044                 |             
25044                 | '------------------------ Channels end here --------------------       
25044                 | 
25044                 | ' Now add all channels and put the sample to the buffer    
25044                 | 
25044                 | 
25044     99 45 0B F2 | p101        cmp     oldt0,time0 wz   ' There must not be 2 entries with the same time
25048     02 94 86 A1 |     if_z    sub     front,#2         ' 
2504c     FF 95 06 A5 |     if_z    and     front,#511     
25050                 |   
25050     00 4E 07 F6 |             mov     rs,#0            ' Mix all channels to rs and ls
25054     00 4C 07 F6 |             mov     ls,#0
25058     A9 4F 03 F1 |             add     rs,rs1
2505c     AB 4F 03 F1 |             add     rs,rs2
25060     AD 4F 03 F1 |             add     rs,rs3
25064     AE 4F 03 F1 |             add     rs,rs4
25068     B0 4F 03 F1 |             add     rs,rs5
2506c     B2 4F 03 F1 |             add     rs,rs6
25070     B4 4F 03 F1 |             add     rs,rs7
25074     B6 4F 03 F1 |             add     rs,rs8
25078                 |             
25078     A8 4D 03 F1 |             add     ls,ls1
2507c     AA 4D 03 F1 |             add     ls,ls2
25080     AC 4D 03 F1 |             add     ls,ls3
25084     AF 4D 03 F1 |             add     ls,ls4
25088     B1 4D 03 F1 |             add     ls,ls5
2508c     B3 4D 03 F1 |             add     ls,ls6
25090     B5 4D 03 F1 |             add     ls,ls7
25094     B7 4D 03 F1 |             add     ls,ls8
25098                 |  		
25098     0F 4C E7 F4 |             bitnot  ls,#15            ' convert to unsigned. TODO: compute and apply the gain for samples to not exceed 16 bit range
2509c     0F 4E E7 F4 |             bitnot  rs,#15		
250a0                 | 		
250a0     A6 4F 2B F9 |             setword rs,ls,#1         ' Pack L and R to one long    		
250a4     4A 4F 33 FC |             wrlut   rs,front         ' and write it to LUT
250a8     4A 93 02 F6 |             mov     spl,front        ' avoid incrementing front 1 by 1 
250ac     01 92 06 F1 |             add     spl,#1           
250b0                 | 
250b0     99 91 02 F6 |             mov     qq,time0
250b4     3A 91 02 F5 |             and     qq,a1fffffff
250b8     49 91 32 FC |             wrlut   qq,spl
250bc                 | 
250bc     01 04 DC FC |             rep     #2, #1 
250c0     02 94 06 F1 |             add     front,#2         ' move the front pointer
250c4     FF 95 06 F5 |             and     front,#511       ' and loop at #512
250c8     99 45 03 F6 |             mov     oldt0,time0      ' update global time
250cc     A5 33 03 F1 |             add     time0,dt0     
250d0                 |             
250d0                 |                
250d0     80 90 66 FC |             wrlong  qq,#$80          'debug
250d4                 | '               wrlong time1,#$84
250d4                 | ''               wrlong time2,#$88
250d4                 | '               wrlong time3,#$8c
250d4                 | '               wrlong time4,#$90
250d4                 |                
250d4     6C FB 9F FD |             jmp     #loop            'loop
250d8                 | 
250d8                 | '-------------------------------------------------------------------------
250d8                 | '------------------ This is the end of the main loop ---------------------
250d8                 | '-------------------------------------------------------------------------
250d8                 | 
250d8                 | '--------------------------------------------------------------------------
250d8                 | '------ Interrupt service -------------------------------------------------
250d8                 | '------ Output the sample, get the next one if exists ---------------------
250d8                 | '--------------------------------------------------------------------------
250d8                 | 
250d8     0E 98 26 FC | isr1        wypin   lsample,#left        '2     The sample has to be outputted every 90 cycles     
250dc     0F 9A 26 FC |             wypin   rsample,#right       '4
250e0                 |             
250e0     3B 97 02 F7 | 	        incmod  counter,a20000000    '6	
250e4     50 97 1A F2 |             cmp     counter,irqtime wcz  '8     Check if it is time for the next sample
250e8     F5 FF 3B 5B |     if_ne   reti1                        '10/12 If not, do nothing
250ec                 | 		
250ec     4E 9B 3A F9 |           	getword rsample,lsnext,#1    '12
250f0     4E 99 32 F9 |           	getword lsample,lsnext,#0    '14
250f4                 |            	
250f4     4A F3 1B F2 |             cmp     ptrb,front wcz       '16    If the buffer is empty, do nothing 
250f8     F5 FF 3B AB |     if_e    reti1                        '18/20
250fc                 | 
250fc     E1 9D A6 FA |             rdlut   lsnext,ptrb++        '21    else read the sample and its time from LUT
25100     E1 A1 A6 FA |             rdlut   irqtime,ptrb++       '23    Read the time for this sample
25104                 | 
25104     F5 FF 3B FB |             reti1                        '27 
25108                 |             
25108                 |          '' 11 nops left  at 354 MHz 
25108                 |           
25108                 | '---------------------------------------------------------------------------
25108                 | '-------- End of interrupt -------------------------------------------------
25108                 | '---------------------------------------------------------------------------    
25108                 | 
25108                 | '---------------------------------------------------------------------------
25108                 | '------- Variables ---------------------------------------------------------
25108                 | '---------------------------------------------------------------------------
25108                 | 
25108                 | ' constants
25108                 | 
25108     FF FF FF 1F | a1fffffff long $1fffffff
2510c     00 00 00 20 | a20000000 long $20000000
25110     00 00 00 00 | nrsample long 0
25114     00 00 00 00 | nlsample long 0
25118     1F 00 00 00 | fl long 31
2511c     1F 00 00 00 | fr long 31
25120                 | ' phase accumulators
25120                 | 
25120     00 00 00 00 | p1          long 0
25124     00 00 00 00 | p2          long 0
25128     00 00 00 00 | p3          long 0
2512c     00 00 00 00 | p4          long 0
25130     00 00 00 00 | p5          long 0
25134     00 00 00 00 | p6          long 0
25138     00 00 00 00 | p7          long 0
2513c     00 00 00 00 | p8          long 0
25140                 | 
25140                 | ' temporary variables 
25140                 | 
25140     00 00 00 00 | qq          long 0
25144     00 00 00 00 | spl         long 0
25148                 | 
25148                 | ' circular buffer in LUT
25148                 | 
25148     00 00 00 00 | front       long 0
2514c                 | 'tail        long 0
2514c                 | 
2514c                 | ' Interrupt ISR variables
2514c                 | 
2514c     00 F8 FF FF | counter     long $FFFFF800 ' this counter will overflow after 1210 seconds
25150     00 00 00 00 | lsample     long 0
25154     00 00 00 00 | rsample     long 0
25158     00 00 00 00 | lsnext      long 0
2515c     00 00 00 00 | rsnext      long 0 
25160     00 00 00 00 | irqtime     long 0
25164                 | 
25164                 | ' Channel 1 registers. TODO - optimize the memory usage
25164                 | 
25164     00 00 00 00 | sstart1     long 0       ' Sample start pointer
25168     00 00 00 00 | type1       long 0       ' type 0 16 bit, 1 8 bit
2516c     00 00 00 00 | lstart1     long 0       ' Loop start
25170     02 00 00 00 | lend1       long 2       ' Loop end
25174     00 00 00 00 | vol1        long 0       ' volume, 0..16384
25178     00 00 00 00 | apan1       long 0       ' pan, 0..16384
2517c     65 00 00 00 | freq1       long 101     ' frequency divider
25180     02 00 00 00 | askip1      long 2       ' skip between samples, 1 for 8 bit, 2 for 16 bit (or more for special effects)
25184     00 00 00 00 | acmd1       long 0       ' command, 0 = reset the phase accumulator
25188                 | 
25188                 | ' Channel 2 registers
25188                 | 
25188     00 00 00 00 | sstart2     long 0
2518c     00 00 00 00 | type2       long 0
25190     00 00 00 00 | lstart2     long 0
25194     02 00 00 00 | lend2       long 2        		
25198     00 00 00 00 | vol2        long 0
2519c     00 00 00 00 | apan2       long 0
251a0     67 00 00 00 | freq2       long 103
251a4     02 00 00 00 | askip2      long 2
251a8     00 00 00 00 | acmd2       long 0
251ac                 | 
251ac                 | ' Channel 3 registers
251ac                 | 
251ac     00 00 00 00 | sstart3     long 0
251b0     00 00 00 00 | type3       long 0
251b4     00 00 00 00 | lstart3     long 0
251b8     02 00 00 00 | lend3       long 2       		'
251bc     00 00 00 00 | vol3        long 0
251c0     00 00 00 00 | apan3       long 0
251c4     6B 00 00 00 | freq3       long 107 '109 113 127 131 137 ...
251c8     02 00 00 00 | askip3      long 2
251cc     00 00 00 00 | acmd3       long 0
251d0                 | 
251d0                 | ' Channel 4 registers
251d0                 | 
251d0     00 00 00 00 | sstart4     long 0
251d4     00 00 00 00 | type4       long 0
251d8     00 00 00 00 | lstart4     long 0
251dc     02 00 00 00 | lend4       long 2       		'
251e0     00 00 00 00 | vol4        long 0
251e4     00 00 00 00 | apan4       long 0
251e8     6D 00 00 00 | freq4       long 109 '109 113 127 131 137 ...
251ec     02 00 00 00 | askip4      long 2
251f0     00 00 00 00 | acmd4       long 0
251f4                 | 
251f4                 | ' Channel 5 registers
251f4                 | 
251f4     00 00 00 00 | sstart5     long 0
251f8     00 00 00 00 | type5       long 0
251fc     00 00 00 00 | lstart5     long 0
25200     02 00 00 00 | lend5       long 2       		'
25204     00 00 00 00 | vol5        long 0
25208     00 00 00 00 | apan5       long 0
2520c     71 00 00 00 | freq5       long 113 '109 113 127 131 137 ...
25210     02 00 00 00 | askip5      long 2
25214     00 00 00 00 | acmd5       long 0
25218                 | 
25218                 | ' Channel 6 registers
25218                 | 
25218     00 00 00 00 | sstart6     long 0
2521c     00 00 00 00 | type6       long 0
25220     00 00 00 00 | lstart6     long 0
25224     02 00 00 00 | lend6       long 2       		'
25228     00 00 00 00 | vol6        long 0
2522c     00 00 00 00 | apan6       long 0
25230     7F 00 00 00 | freq6       long 127 '109 113 127 131 137 ...
25234     02 00 00 00 | askip6      long 2
25238     00 00 00 00 | acmd6       long 0
2523c                 | 
2523c                 | ' Channel 7 registers
2523c                 | 
2523c     00 00 00 00 | sstart7     long 0
25240     00 00 00 00 | type7       long 0
25244     00 00 00 00 | lstart7     long 0
25248     02 00 00 00 | lend7       long 2       		'
2524c     00 00 00 00 | vol7        long 0
25250     00 00 00 00 | apan7       long 0
25254     83 00 00 00 | freq7       long 131 '109 113 127 131 137 ...
25258     02 00 00 00 | askip7      long 2
2525c     00 00 00 00 | acmd7       long 0
25260                 | 
25260                 | ' Channel 8 registers
25260                 | 
25260     00 00 00 00 | sstart8     long 0
25264     00 00 00 00 | type8       long 0
25268     00 00 00 00 | lstart8     long 0
2526c     02 00 00 00 | lend8       long 2       		'
25270     00 00 00 00 | vol8        long 0
25274     00 00 00 00 | apan8       long 0
25278     83 00 00 00 | freq8       long 131 '109 113 127 131 137 ...
2527c     02 00 00 00 | askip8      long 2
25280     00 00 00 00 | acmd8       long 0
25284                 | 
25284                 | ' Time variables
25284                 | 
25284     00 00 00 00 | time0       long 0    ' Global sample computing time
25288     01 00 00 00 | time1       long 1    ' Local channels time
2528c     02 00 00 00 | time2       long 2
25290     03 00 00 00 | time3       long 3
25294     04 00 00 00 | time4       long 4
25298     05 00 00 00 | time5       long 5
2529c     06 00 00 00 | time6       long 6
252a0     07 00 00 00 | time7       long 7
252a4     08 00 00 00 | time8       long 8
252a8                 | 
252a8     00 00 00 00 | oldt0       long 0    'Temporary time variables
252ac     00 00 00 00 | cn          long 0
252b0     00 00 00 00 | ct          long 0
252b4     00 00 00 00 | dt0         long 0
252b8                 | 
252b8                 | ' Samples
252b8                 | 
252b8     00 00 00 00 | ls          long 0    ' Global sample variable
252bc     00 00 00 00 | rs          long 0
252c0                 | 
252c0     00 00 00 00 | ls1         long 0    ' Channel samples
252c4     00 00 00 00 | rs1         long 0
252c8     00 00 00 00 | ls2         long 0
252cc     00 00 00 00 | rs2         long 0
252d0     00 00 00 00 | ls3         long 0
252d4     00 00 00 00 | rs3         long 0
252d8     00 00 00 00 | rs4         long 0
252dc     00 00 00 00 | ls4         long 0
252e0     00 00 00 00 | rs5         long 0
252e4     00 00 00 00 | ls5         long 0
252e8     00 00 00 00 | rs6         long 0
252ec     00 00 00 00 | ls6         long 0
252f0     00 00 00 00 | rs7         long 0
252f4     00 00 00 00 | ls7         long 0
252f8     00 00 00 00 | rs8         long 0
252fc     00 00 00 00 | ls8         long 0
25300                 | 
25300     44 00 17 00 | dac         long %10111_00000000_01_00010_0     'random dither, as 90 cycles period needed
25304                 | 
25304     00 00 00 00 
25308     00 00 00 00 | null  			long 	0,0           ' for channel reset
2530c                 | 	alignl
2530c                 | __system__dat_
2530c     00 00 00 00 
25310     00 00 00 00 | 	byte	$00[8]
25314     03 00 00 00 
25318     00 00 00 00 
2531c     00 00 00 00 
25320     00 00 00 00 | 	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25324     00 00 00 00 
25328     00 00 00 00 
2532c     00 00 00 00 | 	byte	$00[12]
25330     05 00 00 00 
25334     00 00 00 00 
25338     00 00 00 00 
2533c     00 00 00 00 | 	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
25340     08 55 02 00 | 	long	@@@__system__dat_ + 508
25344     10 55 02 00 | 	long	@@@__system__dat_ + 516
25348     00 00 00 00 | 	byte	$00, $00, $00, $00
2534c     18 55 02 00 | 	long	@@@__system__dat_ + 524
25350     20 55 02 00 | 	long	@@@__system__dat_ + 532
25354     00 00 00 00 
25358     00 00 00 00 | 	byte	$00[8]
2535c     01 00 00 00 
25360     06 00 00 00 
25364     00 00 00 00 
25368     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2536c     00 00 00 00 | 	byte	$00, $00, $00, $00
25370     28 55 02 00 | 	long	@@@__system__dat_ + 540
25374     30 55 02 00 | 	long	@@@__system__dat_ + 548
25378     00 00 00 00 | 	byte	$00, $00, $00, $00
2537c     38 55 02 00 | 	long	@@@__system__dat_ + 556
25380     40 55 02 00 | 	long	@@@__system__dat_ + 564
25384     00 00 00 00 
25388     00 00 00 00 | 	byte	$00[8]
2538c     01 00 00 00 
25390     06 00 00 00 
25394     00 00 00 00 
25398     00 00 00 00 | 	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
2539c     00 00 00 00 | 	byte	$00, $00, $00, $00
253a0     48 55 02 00 | 	long	@@@__system__dat_ + 572
253a4     50 55 02 00 | 	long	@@@__system__dat_ + 580
253a8     00 00 00 00 | 	byte	$00, $00, $00, $00
253ac     58 55 02 00 | 	long	@@@__system__dat_ + 588
253b0     60 55 02 00 | 	long	@@@__system__dat_ + 596
253b4     00 00 00 00 
      ...             
25504     00 00 00 00 
25508     00 00 00 00 | 	byte	$00[344]
2550c     5C 60 00 00 | 	long	@@@__system___tx
25510     00 00 00 00 | 	byte	$00, $00, $00, $00
25514     A4 60 00 00 | 	long	@@@__system___rx
25518     00 00 00 00 | 	byte	$00, $00, $00, $00
2551c     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
25520     00 00 00 00 | 	byte	$00, $00, $00, $00
25524     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
25528     00 00 00 00 | 	byte	$00, $00, $00, $00
2552c     5C 60 00 00 | 	long	@@@__system___tx
25530     00 00 00 00 | 	byte	$00, $00, $00, $00
25534     A4 60 00 00 | 	long	@@@__system___rx
25538     00 00 00 00 | 	byte	$00, $00, $00, $00
2553c     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
25540     00 00 00 00 | 	byte	$00, $00, $00, $00
25544     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
25548     00 00 00 00 | 	byte	$00, $00, $00, $00
2554c     5C 60 00 00 | 	long	@@@__system___tx
25550     00 00 00 00 | 	byte	$00, $00, $00, $00
25554     A4 60 00 00 | 	long	@@@__system___rx
25558     00 00 00 00 | 	byte	$00, $00, $00, $00
2555c     8C 7A 00 00 | 	long	@@@__system___rxtxioctl_0174
25560     00 00 00 00 | 	byte	$00, $00, $00, $00
25564     04 7B 00 00 | 	long	@@@__system____dummy_flush_0175
25568     00 00 00 00 | 	byte	$00, $00, $00, $00
2556c                 | __heap_base
2556c     00 00 00 00 
      ...             
2656c     00 00 00 00 
26570     00 00 00 00 | 	long	0[1026]
26574                 | objmem
26574     00 00 00 00 | 	long	0[1]
26578 118             | 	org	COG_BSS_START
26578 118             | _var01
26578 118             | 	res	1
26578 119             | _var02
26578 119             | 	res	1
26578 11a             | _var03
26578 11a             | 	res	1
26578 11b             | _var04
26578 11b             | 	res	1
26578 11c             | _var05
26578 11c             | 	res	1
26578 11d             | _var06
26578 11d             | 	res	1
26578 11e             | _var07
26578 11e             | 	res	1
26578 11f             | _var08
26578 11f             | 	res	1
26578 120             | _var09
26578 120             | 	res	1
26578 121             | _var10
26578 121             | 	res	1
26578 122             | _var11
26578 122             | 	res	1
26578 123             | _var12
26578 123             | 	res	1
26578 124             | _var13
26578 124             | 	res	1
26578 125             | _var14
26578 125             | 	res	1
26578 126             | _var15
26578 126             | 	res	1
26578 127             | _var16
26578 127             | 	res	1
26578 128             | _var17
26578 128             | 	res	1
26578 129             | _var18
26578 129             | 	res	1
26578 12a             | _var19
26578 12a             | 	res	1
26578 12b             | _var20
26578 12b             | 	res	1
26578 12c             | _var21
26578 12c             | 	res	1
26578 12d             | _var22
26578 12d             | 	res	1
26578 12e             | arg01
26578 12e             | 	res	1
26578 12f             | arg02
26578 12f             | 	res	1
26578 130             | arg03
26578 130             | 	res	1
26578 131             | arg04
26578 131             | 	res	1
26578 132             | arg05
26578 132             | 	res	1
26578 133             | arg06
26578 133             | 	res	1
26578 134             | arg07
26578 134             | 	res	1
26578 135             | local01
26578 135             | 	res	1
26578 136             | local02
26578 136             | 	res	1
26578 137             | local03
26578 137             | 	res	1
26578 138             | local04
26578 138             | 	res	1
26578 139             | local05
26578 139             | 	res	1
26578 13a             | local06
26578 13a             | 	res	1
26578 13b             | local07
26578 13b             | 	res	1
26578 13c             | local08
26578 13c             | 	res	1
26578 13d             | local09
26578 13d             | 	res	1
26578 13e             | local10
26578 13e             | 	res	1
26578 13f             | local11
26578 13f             | 	res	1
26578 140             | local12
26578 140             | 	res	1
26578 141             | local13
26578 141             | 	res	1
26578 142             | local14
26578 142             | 	res	1
26578 143             | local15
26578 143             | 	res	1
26578 144             | local16
26578 144             | 	res	1
26578 145             | local17
26578 145             | 	res	1
26578 146             | local18
26578 146             | 	res	1
26578 147             | local19
26578 147             | 	res	1
26578 148             | local20
26578 148             | 	res	1
26578 149             | local21
26578 149             | 	res	1
26578 14a             | local22
26578 14a             | 	res	1
26578 14b             | local23
26578 14b             | 	res	1
26578 14c             | local24
26578 14c             | 	res	1
26578 14d             | local25
26578 14d             | 	res	1
26578 14e             | local26
26578 14e             | 	res	1
26578 14f             | local27
26578 14f             | 	res	1
26578 150             | local28
26578 150             | 	res	1
26578 151             | local29
26578 151             | 	res	1
26578 152             | local30
26578 152             | 	res	1
26578 153             | local31
26578 153             | 	res	1
26578 154             | local32
26578 154             | 	res	1
26578 155             | local33
26578 155             | 	res	1
26578 156             | local34
26578 156             | 	res	1
26578 157             | local35
26578 157             | 	res	1
26578 158             | local36
26578 158             | 	res	1
26578 159             | local37
26578 159             | 	res	1
26578 15a             | local38
26578 15a             | 	res	1
26578 15b             | local39
26578 15b             | 	res	1
26578 15c             | local40
26578 15c             | 	res	1
26578 15d             | local41
26578 15d             | 	res	1
26578 15e             | local42
26578 15e             | 	res	1
26578 15f             | local43
26578 15f             | 	res	1
26578 160             | local44
26578 160             | 	res	1
26578 161             | local45
26578 161             | 	res	1
26578 162             | local46
26578 162             | 	res	1
26578 163             | local47
26578 163             | 	res	1
26578 164             | local48
26578 164             | 	res	1
26578 165             | local49
26578 165             | 	res	1
26578 166             | local50
26578 166             | 	res	1
26578 167             | local51
26578 167             | 	res	1
26578 168             | local52
26578 168             | 	res	1
26578 169             | local53
26578 169             | 	res	1
26578 16a             | local54
26578 16a             | 	res	1
26578 16b             | local55
26578 16b             | 	res	1
26578 16c             | local56
26578 16c             | 	res	1
26578 16d             | local57
26578 16d             | 	res	1
26578 16e             | local58
26578 16e             | 	res	1
26578 16f             | local59
26578 16f             | 	res	1
26578 170             | local60
26578 170             | 	res	1
26578 171             | local61
26578 171             | 	res	1
26578 172             | local62
26578 172             | 	res	1
26578 173             | local63
26578 173             | 	res	1
26578 174             | local64
26578 174             | 	res	1
26578 175             | local65
26578 175             | 	res	1
26578 176             | local66
26578 176             | 	res	1
26578 177             | local67
26578 177             | 	res	1
26578 178             | local68
26578 178             | 	res	1
26578 179             | local69
26578 179             | 	res	1
26578 17a             | local70
26578 17a             | 	res	1
26578 17b             | local71
26578 17b             | 	res	1
26578 17c             | local72
26578 17c             | 	res	1
26578 17d             | local73
26578 17d             | 	res	1
26578 17e             | local74
26578 17e             | 	res	1
26578 17f             | local75
26578 17f             | 	res	1
26578 180             | local76
26578 180             | 	res	1
26578 181             | local77
26578 181             | 	res	1
26578 182             | local78
26578 182             | 	res	1
26578 183             | local79
26578 183             | 	res	1
26578 184             | local80
26578 184             | 	res	1
26578 185             | muldiva_
26578 185             | 	res	1
26578 186             | muldivb_
26578 186             | 	res	1
26578 187             | 	fit	480
26578 187             | 
